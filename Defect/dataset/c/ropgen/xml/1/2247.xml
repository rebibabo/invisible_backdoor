<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2247.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">slirp_guestfwd</name><parameter_list pos:start="1:26" pos:end="3:44">(<parameter pos:start="1:27" pos:end="1:39"><decl pos:start="1:27" pos:end="1:39"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:36">SlirpState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:63"><decl pos:start="1:42" pos:end="1:63"><type pos:start="1:42" pos:end="1:63"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:51">char</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:63">config_str</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:43"><decl pos:start="3:27" pos:end="3:43"><type pos:start="3:27" pos:end="3:43"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:43">legacy_format</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="149:1">{<block_content pos:start="7:5" pos:end="147:14">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:18">in_addr</name></name></type> <name pos:start="7:20" pos:end="7:25">server</name> <init pos:start="7:27" pos:end="7:43">= <expr pos:start="7:29" pos:end="7:43"><block pos:start="7:29" pos:end="7:43">{ <expr pos:start="7:31" pos:end="7:41"><operator pos:start="7:31" pos:end="7:31">.</operator><name pos:start="7:32" pos:end="7:37">s_addr</name> <operator pos:start="7:39" pos:end="7:39">=</operator> <literal type="number" pos:start="7:41" pos:end="7:41">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:19">GuestFwd</name></name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">fwd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:17"><name pos:start="13:10" pos:end="13:12">buf</name><index pos:start="13:13" pos:end="13:17">[<expr pos:start="13:14" pos:end="13:16"><literal type="number" pos:start="13:14" pos:end="13:16">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:13">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:13"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">port</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:5">p</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <name pos:start="21:9" pos:end="21:18">config_str</name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="63:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:22">(<expr pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:21">legacy_format</name></expr>)</condition> <block pos:start="23:24" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:9">

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:55">(<expr pos:start="25:13" pos:end="25:54"><call pos:start="25:13" pos:end="25:50"><name pos:start="25:13" pos:end="25:23">get_str_sep</name><argument_list pos:start="25:24" pos:end="25:50">(<argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:27">buf</name></expr></argument>, <argument pos:start="25:30" pos:end="25:40"><expr pos:start="25:30" pos:end="25:40"><sizeof pos:start="25:30" pos:end="25:40">sizeof<argument_list pos:start="25:36" pos:end="25:40">(<argument pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><name pos:start="25:37" pos:end="25:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="25:43" pos:end="25:44"><expr pos:start="25:43" pos:end="25:44"><operator pos:start="25:43" pos:end="25:43">&amp;</operator><name pos:start="25:44" pos:end="25:44">p</name></expr></argument>, <argument pos:start="25:47" pos:end="25:49"><expr pos:start="25:47" pos:end="25:49"><literal type="char" pos:start="25:47" pos:end="25:49">':'</literal></expr></argument>)</argument_list></call> <operator pos:start="25:52" pos:end="25:52">&lt;</operator> <literal type="number" pos:start="25:54" pos:end="25:54">0</literal></expr>)</condition> <block pos:start="25:57" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:29">

            <goto pos:start="27:13" pos:end="27:29">goto <name pos:start="27:18" pos:end="27:28">fail_syntax</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="63:5">else <block pos:start="31:12" pos:end="63:5">{<block_content pos:start="33:9" pos:end="61:9">

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:55">(<expr pos:start="33:13" pos:end="33:54"><call pos:start="33:13" pos:end="33:50"><name pos:start="33:13" pos:end="33:23">get_str_sep</name><argument_list pos:start="33:24" pos:end="33:50">(<argument pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><name pos:start="33:25" pos:end="33:27">buf</name></expr></argument>, <argument pos:start="33:30" pos:end="33:40"><expr pos:start="33:30" pos:end="33:40"><sizeof pos:start="33:30" pos:end="33:40">sizeof<argument_list pos:start="33:36" pos:end="33:40">(<argument pos:start="33:37" pos:end="33:39"><expr pos:start="33:37" pos:end="33:39"><name pos:start="33:37" pos:end="33:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:43" pos:end="33:44"><expr pos:start="33:43" pos:end="33:44"><operator pos:start="33:43" pos:end="33:43">&amp;</operator><name pos:start="33:44" pos:end="33:44">p</name></expr></argument>, <argument pos:start="33:47" pos:end="33:49"><expr pos:start="33:47" pos:end="33:49"><literal type="char" pos:start="33:47" pos:end="33:49">':'</literal></expr></argument>)</argument_list></call> <operator pos:start="33:52" pos:end="33:52">&lt;</operator> <literal type="number" pos:start="33:54" pos:end="33:54">0</literal></expr>)</condition> <block pos:start="33:57" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:29">

            <goto pos:start="35:13" pos:end="35:29">goto <name pos:start="35:18" pos:end="35:28">fail_syntax</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:49">(<expr pos:start="39:13" pos:end="39:48"><call pos:start="39:13" pos:end="39:30"><name pos:start="39:13" pos:end="39:18">strcmp</name><argument_list pos:start="39:19" pos:end="39:30">(<argument pos:start="39:20" pos:end="39:22"><expr pos:start="39:20" pos:end="39:22"><name pos:start="39:20" pos:end="39:22">buf</name></expr></argument>, <argument pos:start="39:25" pos:end="39:29"><expr pos:start="39:25" pos:end="39:29"><literal type="string" pos:start="39:25" pos:end="39:29">"tcp"</literal></expr></argument>)</argument_list></call> <operator pos:start="39:32" pos:end="39:33">&amp;&amp;</operator> <name pos:start="39:35" pos:end="39:40"><name pos:start="39:35" pos:end="39:37">buf</name><index pos:start="39:38" pos:end="39:40">[<expr pos:start="39:39" pos:end="39:39"><literal type="number" pos:start="39:39" pos:end="39:39">0</literal></expr>]</index></name> <operator pos:start="39:42" pos:end="39:43">!=</operator> <literal type="char" pos:start="39:45" pos:end="39:48">'\0'</literal></expr>)</condition> <block pos:start="39:51" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:29">

            <goto pos:start="41:13" pos:end="41:29">goto <name pos:start="41:18" pos:end="41:28">fail_syntax</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:55">(<expr pos:start="45:13" pos:end="45:54"><call pos:start="45:13" pos:end="45:50"><name pos:start="45:13" pos:end="45:23">get_str_sep</name><argument_list pos:start="45:24" pos:end="45:50">(<argument pos:start="45:25" pos:end="45:27"><expr pos:start="45:25" pos:end="45:27"><name pos:start="45:25" pos:end="45:27">buf</name></expr></argument>, <argument pos:start="45:30" pos:end="45:40"><expr pos:start="45:30" pos:end="45:40"><sizeof pos:start="45:30" pos:end="45:40">sizeof<argument_list pos:start="45:36" pos:end="45:40">(<argument pos:start="45:37" pos:end="45:39"><expr pos:start="45:37" pos:end="45:39"><name pos:start="45:37" pos:end="45:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="45:43" pos:end="45:44"><expr pos:start="45:43" pos:end="45:44"><operator pos:start="45:43" pos:end="45:43">&amp;</operator><name pos:start="45:44" pos:end="45:44">p</name></expr></argument>, <argument pos:start="45:47" pos:end="45:49"><expr pos:start="45:47" pos:end="45:49"><literal type="char" pos:start="45:47" pos:end="45:49">':'</literal></expr></argument>)</argument_list></call> <operator pos:start="45:52" pos:end="45:52">&lt;</operator> <literal type="number" pos:start="45:54" pos:end="45:54">0</literal></expr>)</condition> <block pos:start="45:57" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:29">

            <goto pos:start="47:13" pos:end="47:29">goto <name pos:start="47:18" pos:end="47:28">fail_syntax</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:55">(<expr pos:start="51:13" pos:end="51:54"><name pos:start="51:13" pos:end="51:18"><name pos:start="51:13" pos:end="51:15">buf</name><index pos:start="51:16" pos:end="51:18">[<expr pos:start="51:17" pos:end="51:17"><literal type="number" pos:start="51:17" pos:end="51:17">0</literal></expr>]</index></name> <operator pos:start="51:20" pos:end="51:21">!=</operator> <literal type="char" pos:start="51:23" pos:end="51:26">'\0'</literal> <operator pos:start="51:28" pos:end="51:29">&amp;&amp;</operator> <operator pos:start="51:31" pos:end="51:31">!</operator><call pos:start="51:32" pos:end="51:54"><name pos:start="51:32" pos:end="51:40">inet_aton</name><argument_list pos:start="51:41" pos:end="51:54">(<argument pos:start="51:42" pos:end="51:44"><expr pos:start="51:42" pos:end="51:44"><name pos:start="51:42" pos:end="51:44">buf</name></expr></argument>, <argument pos:start="51:47" pos:end="51:53"><expr pos:start="51:47" pos:end="51:53"><operator pos:start="51:47" pos:end="51:47">&amp;</operator><name pos:start="51:48" pos:end="51:53">server</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:57" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:29">

            <goto pos:start="53:13" pos:end="53:29">goto <name pos:start="53:18" pos:end="53:28">fail_syntax</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="57:9" pos:end="61:9"><if pos:start="57:9" pos:end="61:9">if <condition pos:start="57:12" pos:end="57:55">(<expr pos:start="57:13" pos:end="57:54"><call pos:start="57:13" pos:end="57:50"><name pos:start="57:13" pos:end="57:23">get_str_sep</name><argument_list pos:start="57:24" pos:end="57:50">(<argument pos:start="57:25" pos:end="57:27"><expr pos:start="57:25" pos:end="57:27"><name pos:start="57:25" pos:end="57:27">buf</name></expr></argument>, <argument pos:start="57:30" pos:end="57:40"><expr pos:start="57:30" pos:end="57:40"><sizeof pos:start="57:30" pos:end="57:40">sizeof<argument_list pos:start="57:36" pos:end="57:40">(<argument pos:start="57:37" pos:end="57:39"><expr pos:start="57:37" pos:end="57:39"><name pos:start="57:37" pos:end="57:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="57:43" pos:end="57:44"><expr pos:start="57:43" pos:end="57:44"><operator pos:start="57:43" pos:end="57:43">&amp;</operator><name pos:start="57:44" pos:end="57:44">p</name></expr></argument>, <argument pos:start="57:47" pos:end="57:49"><expr pos:start="57:47" pos:end="57:49"><literal type="char" pos:start="57:47" pos:end="57:49">'-'</literal></expr></argument>)</argument_list></call> <operator pos:start="57:52" pos:end="57:52">&lt;</operator> <literal type="number" pos:start="57:54" pos:end="57:54">0</literal></expr>)</condition> <block pos:start="57:57" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:29">

            <goto pos:start="59:13" pos:end="59:29">goto <name pos:start="59:18" pos:end="59:28">fail_syntax</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:33"><expr pos:start="65:5" pos:end="65:32"><name pos:start="65:5" pos:end="65:8">port</name> <operator pos:start="65:10" pos:end="65:10">=</operator> <call pos:start="65:12" pos:end="65:32"><name pos:start="65:12" pos:end="65:17">strtol</name><argument_list pos:start="65:18" pos:end="65:32">(<argument pos:start="65:19" pos:end="65:21"><expr pos:start="65:19" pos:end="65:21"><name pos:start="65:19" pos:end="65:21">buf</name></expr></argument>, <argument pos:start="65:24" pos:end="65:27"><expr pos:start="65:24" pos:end="65:27"><operator pos:start="65:24" pos:end="65:24">&amp;</operator><name pos:start="65:25" pos:end="65:27">end</name></expr></argument>, <argument pos:start="65:30" pos:end="65:31"><expr pos:start="65:30" pos:end="65:31"><literal type="number" pos:start="65:30" pos:end="65:31">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="71:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:49">(<expr pos:start="67:9" pos:end="67:48"><operator pos:start="67:9" pos:end="67:9">*</operator><name pos:start="67:10" pos:end="67:12">end</name> <operator pos:start="67:14" pos:end="67:15">!=</operator> <literal type="char" pos:start="67:17" pos:end="67:20">'\0'</literal> <operator pos:start="67:22" pos:end="67:23">||</operator> <name pos:start="67:25" pos:end="67:42"><name pos:start="67:25" pos:end="67:28">port</name> <argument_list type="generic" pos:start="67:30" pos:end="67:42">&lt; <argument pos:start="67:32" pos:end="67:40"><expr pos:start="67:32" pos:end="67:40"><literal type="number" pos:start="67:32" pos:end="67:32">1</literal> <operator pos:start="67:34" pos:end="67:35">||</operator> <name pos:start="67:37" pos:end="67:40">port</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="67:44" pos:end="67:48">65535</literal></expr>)</condition> <block pos:start="67:51" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:25">

        <goto pos:start="69:9" pos:end="69:25">goto <name pos:start="69:14" pos:end="69:24">fail_syntax</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:44"><expr pos:start="75:5" pos:end="75:43"><name pos:start="75:5" pos:end="75:7">fwd</name> <operator pos:start="75:9" pos:end="75:9">=</operator> <call pos:start="75:11" pos:end="75:43"><name pos:start="75:11" pos:end="75:18">g_malloc</name><argument_list pos:start="75:19" pos:end="75:43">(<argument pos:start="75:20" pos:end="75:42"><expr pos:start="75:20" pos:end="75:42"><sizeof pos:start="75:20" pos:end="75:42">sizeof<argument_list pos:start="75:26" pos:end="75:42">(<argument pos:start="75:27" pos:end="75:41"><expr pos:start="75:27" pos:end="75:41">struct <name pos:start="75:34" pos:end="75:41">GuestFwd</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:56"><expr pos:start="77:5" pos:end="77:55"><call pos:start="77:5" pos:end="77:55"><name pos:start="77:5" pos:end="77:12">snprintf</name><argument_list pos:start="77:13" pos:end="77:55">(<argument pos:start="77:14" pos:end="77:16"><expr pos:start="77:14" pos:end="77:16"><name pos:start="77:14" pos:end="77:16">buf</name></expr></argument>, <argument pos:start="77:19" pos:end="77:29"><expr pos:start="77:19" pos:end="77:29"><sizeof pos:start="77:19" pos:end="77:29">sizeof<argument_list pos:start="77:25" pos:end="77:29">(<argument pos:start="77:26" pos:end="77:28"><expr pos:start="77:26" pos:end="77:28"><name pos:start="77:26" pos:end="77:28">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="77:32" pos:end="77:48"><expr pos:start="77:32" pos:end="77:48"><literal type="string" pos:start="77:32" pos:end="77:48">"guestfwd.tcp.%d"</literal></expr></argument>, <argument pos:start="77:51" pos:end="77:54"><expr pos:start="77:51" pos:end="77:54"><name pos:start="77:51" pos:end="77:54">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="137:5"><if pos:start="81:5" pos:end="95:5">if <condition pos:start="81:8" pos:end="81:50">(<expr pos:start="81:9" pos:end="81:49"><operator pos:start="81:9" pos:end="81:9">(</operator><call pos:start="81:10" pos:end="81:18"><name pos:start="81:10" pos:end="81:15">strlen</name><argument_list pos:start="81:16" pos:end="81:18">(<argument pos:start="81:17" pos:end="81:17"><expr pos:start="81:17" pos:end="81:17"><name pos:start="81:17" pos:end="81:17">p</name></expr></argument>)</argument_list></call> <operator pos:start="81:20" pos:end="81:20">&gt;</operator> <literal type="number" pos:start="81:22" pos:end="81:22">4</literal><operator pos:start="81:23" pos:end="81:23">)</operator> <operator pos:start="81:25" pos:end="81:26">&amp;&amp;</operator> <operator pos:start="81:28" pos:end="81:28">!</operator><call pos:start="81:29" pos:end="81:49"><name pos:start="81:29" pos:end="81:35">strncmp</name><argument_list pos:start="81:36" pos:end="81:49">(<argument pos:start="81:37" pos:end="81:37"><expr pos:start="81:37" pos:end="81:37"><name pos:start="81:37" pos:end="81:37">p</name></expr></argument>, <argument pos:start="81:40" pos:end="81:45"><expr pos:start="81:40" pos:end="81:45"><literal type="string" pos:start="81:40" pos:end="81:45">"cmd:"</literal></expr></argument>, <argument pos:start="81:48" pos:end="81:48"><expr pos:start="81:48" pos:end="81:48"><literal type="number" pos:start="81:48" pos:end="81:48">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:52" pos:end="95:5">{<block_content pos:start="83:9" pos:end="93:9">

        <if_stmt pos:start="83:9" pos:end="93:9"><if pos:start="83:9" pos:end="93:9">if <condition pos:start="83:12" pos:end="83:66">(<expr pos:start="83:13" pos:end="83:65"><call pos:start="83:13" pos:end="83:61"><name pos:start="83:13" pos:end="83:26">slirp_add_exec</name><argument_list pos:start="83:27" pos:end="83:61">(<argument pos:start="83:28" pos:end="83:35"><expr pos:start="83:28" pos:end="83:35"><name pos:start="83:28" pos:end="83:35"><name pos:start="83:28" pos:end="83:28">s</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:35">slirp</name></name></expr></argument>, <argument pos:start="83:38" pos:end="83:38"><expr pos:start="83:38" pos:end="83:38"><literal type="number" pos:start="83:38" pos:end="83:38">0</literal></expr></argument>, <argument pos:start="83:41" pos:end="83:45"><expr pos:start="83:41" pos:end="83:45"><operator pos:start="83:41" pos:end="83:41">&amp;</operator><name pos:start="83:42" pos:end="83:45"><name pos:start="83:42" pos:end="83:42">p</name><index pos:start="83:43" pos:end="83:45">[<expr pos:start="83:44" pos:end="83:44"><literal type="number" pos:start="83:44" pos:end="83:44">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="83:48" pos:end="83:54"><expr pos:start="83:48" pos:end="83:54"><operator pos:start="83:48" pos:end="83:48">&amp;</operator><name pos:start="83:49" pos:end="83:54">server</name></expr></argument>, <argument pos:start="83:57" pos:end="83:60"><expr pos:start="83:57" pos:end="83:60"><name pos:start="83:57" pos:end="83:60">port</name></expr></argument>)</argument_list></call> <operator pos:start="83:63" pos:end="83:63">&lt;</operator> <literal type="number" pos:start="83:65" pos:end="83:65">0</literal></expr>)</condition> <block pos:start="83:68" pos:end="93:9">{<block_content pos:start="85:13" pos:end="91:22">

            <expr_stmt pos:start="85:13" pos:end="87:50"><expr pos:start="85:13" pos:end="87:49"><call pos:start="85:13" pos:end="87:49"><name pos:start="85:13" pos:end="85:24">error_report</name><argument_list pos:start="85:25" pos:end="87:49">(<argument pos:start="85:26" pos:end="87:36"><expr pos:start="85:26" pos:end="87:36"><literal type="string" pos:start="85:26" pos:end="85:77">"conflicting/invalid host:port in guest forwarding "</literal>

                         <literal type="string" pos:start="87:26" pos:end="87:36">"rule '%s'"</literal></expr></argument>, <argument pos:start="87:39" pos:end="87:48"><expr pos:start="87:39" pos:end="87:48"><name pos:start="87:39" pos:end="87:48">config_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:24"><expr pos:start="89:13" pos:end="89:23"><call pos:start="89:13" pos:end="89:23"><name pos:start="89:13" pos:end="89:18">g_free</name><argument_list pos:start="89:19" pos:end="89:23">(<argument pos:start="89:20" pos:end="89:22"><expr pos:start="89:20" pos:end="89:22"><name pos:start="89:20" pos:end="89:22">fwd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="91:13" pos:end="91:22">return <expr pos:start="91:20" pos:end="91:21"><operator pos:start="91:20" pos:end="91:20">-</operator><literal type="number" pos:start="91:21" pos:end="91:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="137:5">else <block pos:start="95:12" pos:end="137:5">{<block_content pos:start="97:9" pos:end="135:41">

        <expr_stmt pos:start="97:9" pos:end="97:45"><expr pos:start="97:9" pos:end="97:44"><name pos:start="97:9" pos:end="97:15"><name pos:start="97:9" pos:end="97:11">fwd</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:15">hd</name></name> <operator pos:start="97:17" pos:end="97:17">=</operator> <call pos:start="97:19" pos:end="97:44"><name pos:start="97:19" pos:end="97:30">qemu_chr_new</name><argument_list pos:start="97:31" pos:end="97:44">(<argument pos:start="97:32" pos:end="97:34"><expr pos:start="97:32" pos:end="97:34"><name pos:start="97:32" pos:end="97:34">buf</name></expr></argument>, <argument pos:start="97:37" pos:end="97:37"><expr pos:start="97:37" pos:end="97:37"><name pos:start="97:37" pos:end="97:37">p</name></expr></argument>, <argument pos:start="97:40" pos:end="97:43"><expr pos:start="97:40" pos:end="97:43"><name pos:start="97:40" pos:end="97:43">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="107:9"><if pos:start="99:9" pos:end="107:9">if <condition pos:start="99:12" pos:end="99:21">(<expr pos:start="99:13" pos:end="99:20"><operator pos:start="99:13" pos:end="99:13">!</operator><name pos:start="99:14" pos:end="99:20"><name pos:start="99:14" pos:end="99:16">fwd</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:20">hd</name></name></expr>)</condition> <block pos:start="99:23" pos:end="107:9">{<block_content pos:start="101:13" pos:end="105:22">

            <expr_stmt pos:start="101:13" pos:end="101:77"><expr pos:start="101:13" pos:end="101:76"><call pos:start="101:13" pos:end="101:76"><name pos:start="101:13" pos:end="101:24">error_report</name><argument_list pos:start="101:25" pos:end="101:76">(<argument pos:start="101:26" pos:end="101:70"><expr pos:start="101:26" pos:end="101:70"><literal type="string" pos:start="101:26" pos:end="101:70">"could not open guest forwarding device '%s'"</literal></expr></argument>, <argument pos:start="101:73" pos:end="101:75"><expr pos:start="101:73" pos:end="101:75"><name pos:start="101:73" pos:end="101:75">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:24"><expr pos:start="103:13" pos:end="103:23"><call pos:start="103:13" pos:end="103:23"><name pos:start="103:13" pos:end="103:18">g_free</name><argument_list pos:start="103:19" pos:end="103:23">(<argument pos:start="103:20" pos:end="103:22"><expr pos:start="103:20" pos:end="103:22"><name pos:start="103:20" pos:end="103:22">fwd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="105:13" pos:end="105:22">return <expr pos:start="105:20" pos:end="105:21"><operator pos:start="105:20" pos:end="105:20">-</operator><literal type="number" pos:start="105:21" pos:end="105:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="111:9" pos:end="121:9"><if pos:start="111:9" pos:end="121:9">if <condition pos:start="111:12" pos:end="111:68">(<expr pos:start="111:13" pos:end="111:67"><call pos:start="111:13" pos:end="111:63"><name pos:start="111:13" pos:end="111:26">slirp_add_exec</name><argument_list pos:start="111:27" pos:end="111:63">(<argument pos:start="111:28" pos:end="111:35"><expr pos:start="111:28" pos:end="111:35"><name pos:start="111:28" pos:end="111:35"><name pos:start="111:28" pos:end="111:28">s</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:35">slirp</name></name></expr></argument>, <argument pos:start="111:38" pos:end="111:38"><expr pos:start="111:38" pos:end="111:38"><literal type="number" pos:start="111:38" pos:end="111:38">3</literal></expr></argument>, <argument pos:start="111:41" pos:end="111:47"><expr pos:start="111:41" pos:end="111:47"><name pos:start="111:41" pos:end="111:47"><name pos:start="111:41" pos:end="111:43">fwd</name><operator pos:start="111:44" pos:end="111:45">-&gt;</operator><name pos:start="111:46" pos:end="111:47">hd</name></name></expr></argument>, <argument pos:start="111:50" pos:end="111:56"><expr pos:start="111:50" pos:end="111:56"><operator pos:start="111:50" pos:end="111:50">&amp;</operator><name pos:start="111:51" pos:end="111:56">server</name></expr></argument>, <argument pos:start="111:59" pos:end="111:62"><expr pos:start="111:59" pos:end="111:62"><name pos:start="111:59" pos:end="111:62">port</name></expr></argument>)</argument_list></call> <operator pos:start="111:65" pos:end="111:65">&lt;</operator> <literal type="number" pos:start="111:67" pos:end="111:67">0</literal></expr>)</condition> <block pos:start="111:70" pos:end="121:9">{<block_content pos:start="113:13" pos:end="119:22">

            <expr_stmt pos:start="113:13" pos:end="115:50"><expr pos:start="113:13" pos:end="115:49"><call pos:start="113:13" pos:end="115:49"><name pos:start="113:13" pos:end="113:24">error_report</name><argument_list pos:start="113:25" pos:end="115:49">(<argument pos:start="113:26" pos:end="115:36"><expr pos:start="113:26" pos:end="115:36"><literal type="string" pos:start="113:26" pos:end="113:77">"conflicting/invalid host:port in guest forwarding "</literal>

                         <literal type="string" pos:start="115:26" pos:end="115:36">"rule '%s'"</literal></expr></argument>, <argument pos:start="115:39" pos:end="115:48"><expr pos:start="115:39" pos:end="115:48"><name pos:start="115:39" pos:end="115:48">config_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:24"><expr pos:start="117:13" pos:end="117:23"><call pos:start="117:13" pos:end="117:23"><name pos:start="117:13" pos:end="117:18">g_free</name><argument_list pos:start="117:19" pos:end="117:23">(<argument pos:start="117:20" pos:end="117:22"><expr pos:start="117:20" pos:end="117:22"><name pos:start="117:20" pos:end="117:22">fwd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="119:13" pos:end="119:22">return <expr pos:start="119:20" pos:end="119:21"><operator pos:start="119:20" pos:end="119:20">-</operator><literal type="number" pos:start="119:21" pos:end="119:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:29"><expr pos:start="123:9" pos:end="123:28"><name pos:start="123:9" pos:end="123:19"><name pos:start="123:9" pos:end="123:11">fwd</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:19">server</name></name> <operator pos:start="123:21" pos:end="123:21">=</operator> <name pos:start="123:23" pos:end="123:28">server</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:25"><expr pos:start="125:9" pos:end="125:24"><name pos:start="125:9" pos:end="125:17"><name pos:start="125:9" pos:end="125:11">fwd</name><operator pos:start="125:12" pos:end="125:13">-&gt;</operator><name pos:start="125:14" pos:end="125:17">port</name></name> <operator pos:start="125:19" pos:end="125:19">=</operator> <name pos:start="125:21" pos:end="125:24">port</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:30"><expr pos:start="127:9" pos:end="127:29"><name pos:start="127:9" pos:end="127:18"><name pos:start="127:9" pos:end="127:11">fwd</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:18">slirp</name></name> <operator pos:start="127:20" pos:end="127:20">=</operator> <name pos:start="127:22" pos:end="127:29"><name pos:start="127:22" pos:end="127:22">s</name><operator pos:start="127:23" pos:end="127:24">-&gt;</operator><name pos:start="127:25" pos:end="127:29">slirp</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="131:9" pos:end="131:43"><expr pos:start="131:9" pos:end="131:42"><call pos:start="131:9" pos:end="131:42"><name pos:start="131:9" pos:end="131:33">qemu_chr_fe_claim_no_fail</name><argument_list pos:start="131:34" pos:end="131:42">(<argument pos:start="131:35" pos:end="131:41"><expr pos:start="131:35" pos:end="131:41"><name pos:start="131:35" pos:end="131:41"><name pos:start="131:35" pos:end="131:37">fwd</name><operator pos:start="131:38" pos:end="131:39">-&gt;</operator><name pos:start="131:40" pos:end="131:41">hd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="135:41"><expr pos:start="133:9" pos:end="135:40"><call pos:start="133:9" pos:end="135:40"><name pos:start="133:9" pos:end="133:29">qemu_chr_add_handlers</name><argument_list pos:start="133:30" pos:end="135:40">(<argument pos:start="133:31" pos:end="133:37"><expr pos:start="133:31" pos:end="133:37"><name pos:start="133:31" pos:end="133:37"><name pos:start="133:31" pos:end="133:33">fwd</name><operator pos:start="133:34" pos:end="133:35">-&gt;</operator><name pos:start="133:36" pos:end="133:37">hd</name></name></expr></argument>, <argument pos:start="133:40" pos:end="133:56"><expr pos:start="133:40" pos:end="133:56"><name pos:start="133:40" pos:end="133:56">guestfwd_can_read</name></expr></argument>, <argument pos:start="133:59" pos:end="133:71"><expr pos:start="133:59" pos:end="133:71"><name pos:start="133:59" pos:end="133:71">guestfwd_read</name></expr></argument>,

                              <argument pos:start="135:31" pos:end="135:34"><expr pos:start="135:31" pos:end="135:34"><name pos:start="135:31" pos:end="135:34">NULL</name></expr></argument>, <argument pos:start="135:37" pos:end="135:39"><expr pos:start="135:37" pos:end="135:39"><name pos:start="135:37" pos:end="135:39">fwd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="139:5" pos:end="139:13">return <expr pos:start="139:12" pos:end="139:12"><literal type="number" pos:start="139:12" pos:end="139:12">0</literal></expr>;</return>



 <label pos:start="143:2" pos:end="143:13"><name pos:start="143:2" pos:end="143:12">fail_syntax</name>:</label>

    <expr_stmt pos:start="145:5" pos:end="145:67"><expr pos:start="145:5" pos:end="145:66"><call pos:start="145:5" pos:end="145:66"><name pos:start="145:5" pos:end="145:16">error_report</name><argument_list pos:start="145:17" pos:end="145:66">(<argument pos:start="145:18" pos:end="145:53"><expr pos:start="145:18" pos:end="145:53"><literal type="string" pos:start="145:18" pos:end="145:53">"invalid guest forwarding rule '%s'"</literal></expr></argument>, <argument pos:start="145:56" pos:end="145:65"><expr pos:start="145:56" pos:end="145:65"><name pos:start="145:56" pos:end="145:65">config_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="147:5" pos:end="147:14">return <expr pos:start="147:12" pos:end="147:13"><operator pos:start="147:12" pos:end="147:12">-</operator><literal type="number" pos:start="147:13" pos:end="147:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
