<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8087.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">net_init_bridge</name><parameter_list pos:start="1:20" pos:end="3:55">(<parameter pos:start="1:21" pos:end="1:48"><decl pos:start="1:21" pos:end="1:48"><type pos:start="1:21" pos:end="1:48"><specifier pos:start="1:21" pos:end="1:25">const</specifier> <name pos:start="1:27" pos:end="1:42">NetClientOptions</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">opts</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:66"><decl pos:start="1:51" pos:end="1:66"><type pos:start="1:51" pos:end="1:66"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:60">char</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">name</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:40"><decl pos:start="3:21" pos:end="3:40"><type pos:start="3:21" pos:end="3:40"><name pos:start="3:21" pos:end="3:34">NetClientState</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">peer</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:54"><decl pos:start="3:43" pos:end="3:54"><type pos:start="3:43" pos:end="3:54"><name pos:start="3:43" pos:end="3:47">Error</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier><modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:54">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="9:5" pos:end="55:13">

    <comment type="block" pos:start="7:5" pos:end="7:48">/* FIXME error_setg(errp, ...) on failure */</comment>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:31"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:29">NetdevBridgeOptions</name> <modifier pos:start="9:31" pos:end="9:31">*</modifier></type><name pos:start="9:32" pos:end="9:37">bridge</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:22">helper</name></decl>, <decl pos:start="11:25" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:16"><modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:27">br</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">TAPState</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:15">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:10"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">fd</name></decl>, <decl pos:start="15:13" pos:end="15:20"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:13" pos:end="15:20">vnet_hdr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:57"><expr pos:start="19:5" pos:end="19:56"><call pos:start="19:5" pos:end="19:56"><name pos:start="19:5" pos:end="19:10">assert</name><argument_list pos:start="19:11" pos:end="19:56">(<argument pos:start="19:12" pos:end="19:55"><expr pos:start="19:12" pos:end="19:55"><name pos:start="19:12" pos:end="19:21"><name pos:start="19:12" pos:end="19:15">opts</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:21">kind</name></name> <operator pos:start="19:23" pos:end="19:24">==</operator> <name pos:start="19:26" pos:end="19:55">NET_CLIENT_OPTIONS_KIND_BRIDGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:10">bridge</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:25"><name pos:start="21:14" pos:end="21:17">opts</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:25">bridge</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:73"><expr pos:start="25:5" pos:end="25:72"><name pos:start="25:5" pos:end="25:10">helper</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <ternary pos:start="25:14" pos:end="25:72"><condition pos:start="25:14" pos:end="25:33"><expr pos:start="25:14" pos:end="25:31"><name pos:start="25:14" pos:end="25:31"><name pos:start="25:14" pos:end="25:19">bridge</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:31">has_helper</name></name></expr> ?</condition><then pos:start="25:35" pos:end="25:48"> <expr pos:start="25:35" pos:end="25:48"><name pos:start="25:35" pos:end="25:48"><name pos:start="25:35" pos:end="25:40">bridge</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:48">helper</name></name></expr> </then><else pos:start="25:50" pos:end="25:72">: <expr pos:start="25:52" pos:end="25:72"><name pos:start="25:52" pos:end="25:72">DEFAULT_BRIDGE_HELPER</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:76"><expr pos:start="27:5" pos:end="27:75"><name pos:start="27:5" pos:end="27:6">br</name>     <operator pos:start="27:12" pos:end="27:12">=</operator> <ternary pos:start="27:14" pos:end="27:75"><condition pos:start="27:14" pos:end="27:33"><expr pos:start="27:14" pos:end="27:27"><name pos:start="27:14" pos:end="27:27"><name pos:start="27:14" pos:end="27:19">bridge</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:27">has_br</name></name></expr>     ?</condition><then pos:start="27:35" pos:end="27:44"> <expr pos:start="27:35" pos:end="27:44"><name pos:start="27:35" pos:end="27:44"><name pos:start="27:35" pos:end="27:40">bridge</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:44">br</name></name></expr>     </then><else pos:start="27:50" pos:end="27:75">: <expr pos:start="27:52" pos:end="27:75"><name pos:start="27:52" pos:end="27:75">DEFAULT_BRIDGE_INTERFACE</name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:43"><expr pos:start="31:5" pos:end="31:42"><name pos:start="31:5" pos:end="31:6">fd</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <call pos:start="31:10" pos:end="31:42"><name pos:start="31:10" pos:end="31:30">net_bridge_run_helper</name><argument_list pos:start="31:31" pos:end="31:42">(<argument pos:start="31:32" pos:end="31:37"><expr pos:start="31:32" pos:end="31:37"><name pos:start="31:32" pos:end="31:37">helper</name></expr></argument>, <argument pos:start="31:40" pos:end="31:41"><expr pos:start="31:40" pos:end="31:41"><name pos:start="31:40" pos:end="31:41">br</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:17">(<expr pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:10">fd</name> <operator pos:start="33:12" pos:end="33:13">==</operator> <operator pos:start="33:15" pos:end="33:15">-</operator><literal type="number" pos:start="33:16" pos:end="33:16">1</literal></expr>)</condition> <block pos:start="33:19" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:18">

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:35"><expr pos:start="41:5" pos:end="41:34"><call pos:start="41:5" pos:end="41:34"><name pos:start="41:5" pos:end="41:9">fcntl</name><argument_list pos:start="41:10" pos:end="41:34">(<argument pos:start="41:11" pos:end="41:12"><expr pos:start="41:11" pos:end="41:12"><name pos:start="41:11" pos:end="41:12">fd</name></expr></argument>, <argument pos:start="41:15" pos:end="41:21"><expr pos:start="41:15" pos:end="41:21"><name pos:start="41:15" pos:end="41:21">F_SETFL</name></expr></argument>, <argument pos:start="41:24" pos:end="41:33"><expr pos:start="41:24" pos:end="41:33"><name pos:start="41:24" pos:end="41:33">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:38"><expr pos:start="43:5" pos:end="43:37"><name pos:start="43:5" pos:end="43:12">vnet_hdr</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="43:37"><name pos:start="43:16" pos:end="43:33">tap_probe_vnet_hdr</name><argument_list pos:start="43:34" pos:end="43:37">(<argument pos:start="43:35" pos:end="43:36"><expr pos:start="43:35" pos:end="43:36"><name pos:start="43:35" pos:end="43:36">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:60"><expr pos:start="45:5" pos:end="45:59"><name pos:start="45:5" pos:end="45:5">s</name> <operator pos:start="45:7" pos:end="45:7">=</operator> <call pos:start="45:9" pos:end="45:59"><name pos:start="45:9" pos:end="45:23">net_tap_fd_init</name><argument_list pos:start="45:24" pos:end="45:59">(<argument pos:start="45:25" pos:end="45:28"><expr pos:start="45:25" pos:end="45:28"><name pos:start="45:25" pos:end="45:28">peer</name></expr></argument>, <argument pos:start="45:31" pos:end="45:38"><expr pos:start="45:31" pos:end="45:38"><literal type="string" pos:start="45:31" pos:end="45:38">"bridge"</literal></expr></argument>, <argument pos:start="45:41" pos:end="45:44"><expr pos:start="45:41" pos:end="45:44"><name pos:start="45:41" pos:end="45:44">name</name></expr></argument>, <argument pos:start="45:47" pos:end="45:48"><expr pos:start="45:47" pos:end="45:48"><name pos:start="45:47" pos:end="45:48">fd</name></expr></argument>, <argument pos:start="45:51" pos:end="45:58"><expr pos:start="45:51" pos:end="45:58"><name pos:start="45:51" pos:end="45:58">vnet_hdr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="51:17"><expr pos:start="49:5" pos:end="51:16"><call pos:start="49:5" pos:end="51:16"><name pos:start="49:5" pos:end="49:12">snprintf</name><argument_list pos:start="49:13" pos:end="51:16">(<argument pos:start="49:14" pos:end="49:27"><expr pos:start="49:14" pos:end="49:27"><name pos:start="49:14" pos:end="49:27"><name pos:start="49:14" pos:end="49:14">s</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:18">nc</name><operator pos:start="49:19" pos:end="49:19">.</operator><name pos:start="49:20" pos:end="49:27">info_str</name></name></expr></argument>, <argument pos:start="49:30" pos:end="49:51"><expr pos:start="49:30" pos:end="49:51"><sizeof pos:start="49:30" pos:end="49:51">sizeof<argument_list pos:start="49:36" pos:end="49:51">(<argument pos:start="49:37" pos:end="49:50"><expr pos:start="49:37" pos:end="49:50"><name pos:start="49:37" pos:end="49:50"><name pos:start="49:37" pos:end="49:37">s</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:41">nc</name><operator pos:start="49:42" pos:end="49:42">.</operator><name pos:start="49:43" pos:end="49:50">info_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="49:54" pos:end="49:70"><expr pos:start="49:54" pos:end="49:70"><literal type="string" pos:start="49:54" pos:end="49:70">"helper=%s,br=%s"</literal></expr></argument>, <argument pos:start="49:73" pos:end="49:78"><expr pos:start="49:73" pos:end="49:78"><name pos:start="49:73" pos:end="49:78">helper</name></expr></argument>,

             <argument pos:start="51:14" pos:end="51:15"><expr pos:start="51:14" pos:end="51:15"><name pos:start="51:14" pos:end="51:15">br</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
