<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20844.c" pos:tabs="8"><function pos:start="1:1" pos:end="419:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mov_write_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="419:1">{<block_content pos:start="5:5" pos:end="417:14">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MOVMuxContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">mov</name> <init pos:start="7:24" pos:end="7:37">= <expr pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AVDictionaryEntry</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:24">t</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:21">hint_track</name> <init pos:start="11:23" pos:end="11:25">= <expr pos:start="11:25" pos:end="11:25"><literal type="number" pos:start="11:25" pos:end="11:25">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:29">/* Default mode == MP4 */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:7">mov</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:13">mode</name></name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:24">MODE_MP4</name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="35:5"><if pos:start="21:5" pos:end="35:5">if <condition pos:start="21:8" pos:end="21:27">(<expr pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:18">oformat</name></name> <operator pos:start="21:20" pos:end="21:21">!=</operator> <name pos:start="21:23" pos:end="21:26">NULL</name></expr>)</condition> <block pos:start="21:29" pos:end="35:5">{<block_content pos:start="23:9" pos:end="33:72">

        <if_stmt pos:start="23:9" pos:end="33:72"><if pos:start="23:9" pos:end="23:67">if <condition pos:start="23:12" pos:end="23:45">(<expr pos:start="23:13" pos:end="23:44"><operator pos:start="23:13" pos:end="23:13">!</operator><call pos:start="23:14" pos:end="23:44"><name pos:start="23:14" pos:end="23:19">strcmp</name><argument_list pos:start="23:20" pos:end="23:44">(<argument pos:start="23:21" pos:end="23:25"><expr pos:start="23:21" pos:end="23:25"><literal type="string" pos:start="23:21" pos:end="23:25">"3gp"</literal></expr></argument>, <argument pos:start="23:28" pos:end="23:43"><expr pos:start="23:28" pos:end="23:43"><name pos:start="23:28" pos:end="23:43"><name pos:start="23:28" pos:end="23:28">s</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:37">oformat</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:43">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:47" pos:end="23:67"><block_content pos:start="23:47" pos:end="23:67"> <expr_stmt pos:start="23:47" pos:end="23:67"><expr pos:start="23:47" pos:end="23:66"><name pos:start="23:47" pos:end="23:55"><name pos:start="23:47" pos:end="23:49">mov</name><operator pos:start="23:50" pos:end="23:51">-&gt;</operator><name pos:start="23:52" pos:end="23:55">mode</name></name> <operator pos:start="23:57" pos:end="23:57">=</operator> <name pos:start="23:59" pos:end="23:66">MODE_3GP</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="25:9" pos:end="25:81">else if <condition pos:start="25:17" pos:end="25:50">(<expr pos:start="25:18" pos:end="25:49"><operator pos:start="25:18" pos:end="25:18">!</operator><call pos:start="25:19" pos:end="25:49"><name pos:start="25:19" pos:end="25:24">strcmp</name><argument_list pos:start="25:25" pos:end="25:49">(<argument pos:start="25:26" pos:end="25:30"><expr pos:start="25:26" pos:end="25:30"><literal type="string" pos:start="25:26" pos:end="25:30">"3g2"</literal></expr></argument>, <argument pos:start="25:33" pos:end="25:48"><expr pos:start="25:33" pos:end="25:48"><name pos:start="25:33" pos:end="25:48"><name pos:start="25:33" pos:end="25:33">s</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:42">oformat</name><operator pos:start="25:43" pos:end="25:44">-&gt;</operator><name pos:start="25:45" pos:end="25:48">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:52" pos:end="25:81"><block_content pos:start="25:52" pos:end="25:81"> <expr_stmt pos:start="25:52" pos:end="25:81"><expr pos:start="25:52" pos:end="25:80"><name pos:start="25:52" pos:end="25:60"><name pos:start="25:52" pos:end="25:54">mov</name><operator pos:start="25:55" pos:end="25:56">-&gt;</operator><name pos:start="25:57" pos:end="25:60">mode</name></name> <operator pos:start="25:62" pos:end="25:62">=</operator> <name pos:start="25:64" pos:end="25:71">MODE_3GP</name><operator pos:start="25:72" pos:end="25:72">|</operator><name pos:start="25:73" pos:end="25:80">MODE_3G2</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="27:9" pos:end="27:72">else if <condition pos:start="27:17" pos:end="27:50">(<expr pos:start="27:18" pos:end="27:49"><operator pos:start="27:18" pos:end="27:18">!</operator><call pos:start="27:19" pos:end="27:49"><name pos:start="27:19" pos:end="27:24">strcmp</name><argument_list pos:start="27:25" pos:end="27:49">(<argument pos:start="27:26" pos:end="27:30"><expr pos:start="27:26" pos:end="27:30"><literal type="string" pos:start="27:26" pos:end="27:30">"mov"</literal></expr></argument>, <argument pos:start="27:33" pos:end="27:48"><expr pos:start="27:33" pos:end="27:48"><name pos:start="27:33" pos:end="27:48"><name pos:start="27:33" pos:end="27:33">s</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:42">oformat</name><operator pos:start="27:43" pos:end="27:44">-&gt;</operator><name pos:start="27:45" pos:end="27:48">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:52" pos:end="27:72"><block_content pos:start="27:52" pos:end="27:72"> <expr_stmt pos:start="27:52" pos:end="27:72"><expr pos:start="27:52" pos:end="27:71"><name pos:start="27:52" pos:end="27:60"><name pos:start="27:52" pos:end="27:54">mov</name><operator pos:start="27:55" pos:end="27:56">-&gt;</operator><name pos:start="27:57" pos:end="27:60">mode</name></name> <operator pos:start="27:62" pos:end="27:62">=</operator> <name pos:start="27:64" pos:end="27:71">MODE_MOV</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="29:9" pos:end="29:72">else if <condition pos:start="29:17" pos:end="29:50">(<expr pos:start="29:18" pos:end="29:49"><operator pos:start="29:18" pos:end="29:18">!</operator><call pos:start="29:19" pos:end="29:49"><name pos:start="29:19" pos:end="29:24">strcmp</name><argument_list pos:start="29:25" pos:end="29:49">(<argument pos:start="29:26" pos:end="29:30"><expr pos:start="29:26" pos:end="29:30"><literal type="string" pos:start="29:26" pos:end="29:30">"psp"</literal></expr></argument>, <argument pos:start="29:33" pos:end="29:48"><expr pos:start="29:33" pos:end="29:48"><name pos:start="29:33" pos:end="29:48"><name pos:start="29:33" pos:end="29:33">s</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:42">oformat</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:48">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:52" pos:end="29:72"><block_content pos:start="29:52" pos:end="29:72"> <expr_stmt pos:start="29:52" pos:end="29:72"><expr pos:start="29:52" pos:end="29:71"><name pos:start="29:52" pos:end="29:60"><name pos:start="29:52" pos:end="29:54">mov</name><operator pos:start="29:55" pos:end="29:56">-&gt;</operator><name pos:start="29:57" pos:end="29:60">mode</name></name> <operator pos:start="29:62" pos:end="29:62">=</operator> <name pos:start="29:64" pos:end="29:71">MODE_PSP</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="31:9" pos:end="31:73">else if <condition pos:start="31:17" pos:end="31:50">(<expr pos:start="31:18" pos:end="31:49"><operator pos:start="31:18" pos:end="31:18">!</operator><call pos:start="31:19" pos:end="31:49"><name pos:start="31:19" pos:end="31:24">strcmp</name><argument_list pos:start="31:25" pos:end="31:49">(<argument pos:start="31:26" pos:end="31:31"><expr pos:start="31:26" pos:end="31:31"><literal type="string" pos:start="31:26" pos:end="31:31">"ipod"</literal></expr></argument>,<argument pos:start="31:33" pos:end="31:48"><expr pos:start="31:33" pos:end="31:48"><name pos:start="31:33" pos:end="31:48"><name pos:start="31:33" pos:end="31:33">s</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:42">oformat</name><operator pos:start="31:43" pos:end="31:44">-&gt;</operator><name pos:start="31:45" pos:end="31:48">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:52" pos:end="31:73"><block_content pos:start="31:52" pos:end="31:73"> <expr_stmt pos:start="31:52" pos:end="31:73"><expr pos:start="31:52" pos:end="31:72"><name pos:start="31:52" pos:end="31:60"><name pos:start="31:52" pos:end="31:54">mov</name><operator pos:start="31:55" pos:end="31:56">-&gt;</operator><name pos:start="31:57" pos:end="31:60">mode</name></name> <operator pos:start="31:62" pos:end="31:62">=</operator> <name pos:start="31:64" pos:end="31:72">MODE_IPOD</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="33:9" pos:end="33:72">else if <condition pos:start="33:17" pos:end="33:50">(<expr pos:start="33:18" pos:end="33:49"><operator pos:start="33:18" pos:end="33:18">!</operator><call pos:start="33:19" pos:end="33:49"><name pos:start="33:19" pos:end="33:24">strcmp</name><argument_list pos:start="33:25" pos:end="33:49">(<argument pos:start="33:26" pos:end="33:31"><expr pos:start="33:26" pos:end="33:31"><literal type="string" pos:start="33:26" pos:end="33:31">"ismv"</literal></expr></argument>,<argument pos:start="33:33" pos:end="33:48"><expr pos:start="33:33" pos:end="33:48"><name pos:start="33:33" pos:end="33:48"><name pos:start="33:33" pos:end="33:33">s</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:42">oformat</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:48">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="33:52" pos:end="33:72"><block_content pos:start="33:52" pos:end="33:72"> <expr_stmt pos:start="33:52" pos:end="33:72"><expr pos:start="33:52" pos:end="33:71"><name pos:start="33:52" pos:end="33:60"><name pos:start="33:52" pos:end="33:54">mov</name><operator pos:start="33:55" pos:end="33:56">-&gt;</operator><name pos:start="33:57" pos:end="33:60">mode</name></name> <operator pos:start="33:62" pos:end="33:62">=</operator> <name pos:start="33:64" pos:end="33:71">MODE_ISM</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="39:5" pos:end="41:18">/* Set the FRAGMENT flag if any of the fragmentation methods are

     * enabled. */</comment>

    <if_stmt pos:start="43:5" pos:end="53:43"><if pos:start="43:5" pos:end="53:43">if <condition pos:start="43:8" pos:end="51:47">(<expr pos:start="43:9" pos:end="51:46"><name pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:11">mov</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:34">max_fragment_duration</name></name> <operator pos:start="43:36" pos:end="43:37">||</operator> <name pos:start="43:39" pos:end="43:60"><name pos:start="43:39" pos:end="43:41">mov</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:60">max_fragment_size</name></name> <operator pos:start="43:62" pos:end="43:63">||</operator>

        <name pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:11">mov</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:17">mode</name></name> <operator pos:start="45:19" pos:end="45:20">==</operator> <name pos:start="45:22" pos:end="45:29">MODE_ISM</name> <operator pos:start="45:31" pos:end="45:32">||</operator>

        <name pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:11">mov</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:18">flags</name></name> <operator pos:start="47:20" pos:end="47:20">&amp;</operator> <operator pos:start="47:22" pos:end="47:22">(</operator><name pos:start="47:23" pos:end="47:44">FF_MOV_FLAG_EMPTY_MOOV</name> <operator pos:start="47:46" pos:end="47:46">|</operator>

                      <name pos:start="49:23" pos:end="49:47">FF_MOV_FLAG_FRAG_KEYFRAME</name> <operator pos:start="49:49" pos:end="49:49">|</operator>

                      <name pos:start="51:23" pos:end="51:45">FF_MOV_FLAG_FRAG_CUSTOM</name><operator pos:start="51:46" pos:end="51:46">)</operator></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:43"><block_content pos:start="53:9" pos:end="53:43">

        <expr_stmt pos:start="53:9" pos:end="53:43"><expr pos:start="53:9" pos:end="53:42"><name pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:11">mov</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:18">flags</name></name> <operator pos:start="53:20" pos:end="53:21">|=</operator> <name pos:start="53:23" pos:end="53:42">FF_MOV_FLAG_FRAGMENT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:68">/* faststart: moov at the beginning of the file, if supported */</comment>

    <if_stmt pos:start="59:5" pos:end="73:5"><if pos:start="59:5" pos:end="73:5">if <condition pos:start="59:8" pos:end="59:43">(<expr pos:start="59:9" pos:end="59:42"><name pos:start="59:9" pos:end="59:18"><name pos:start="59:9" pos:end="59:11">mov</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:18">flags</name></name> <operator pos:start="59:20" pos:end="59:20">&amp;</operator> <name pos:start="59:22" pos:end="59:42">FF_MOV_FLAG_FASTSTART</name></expr>)</condition> <block pos:start="59:45" pos:end="73:5">{<block_content pos:start="61:9" pos:end="71:9">

        <if_stmt pos:start="61:9" pos:end="71:9"><if pos:start="61:9" pos:end="71:9">if <condition pos:start="61:12" pos:end="63:46">(<expr pos:start="61:13" pos:end="63:45"><operator pos:start="61:13" pos:end="61:13">(</operator><name pos:start="61:14" pos:end="61:23"><name pos:start="61:14" pos:end="61:16">mov</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:23">flags</name></name> <operator pos:start="61:25" pos:end="61:25">&amp;</operator> <name pos:start="61:27" pos:end="61:46">FF_MOV_FLAG_FRAGMENT</name><operator pos:start="61:47" pos:end="61:47">)</operator> <operator pos:start="61:49" pos:end="61:50">||</operator>

            <operator pos:start="63:13" pos:end="63:13">(</operator><name pos:start="63:14" pos:end="63:21"><name pos:start="63:14" pos:end="63:14">s</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:21">flags</name></name> <operator pos:start="63:23" pos:end="63:23">&amp;</operator> <name pos:start="63:25" pos:end="63:44">AVFMT_FLAG_CUSTOM_IO</name><operator pos:start="63:45" pos:end="63:45">)</operator></expr>)</condition> <block pos:start="63:48" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:49">

            <expr_stmt pos:start="65:13" pos:end="67:78"><expr pos:start="65:13" pos:end="67:77"><call pos:start="65:13" pos:end="67:77"><name pos:start="65:13" pos:end="65:18">av_log</name><argument_list pos:start="65:19" pos:end="67:77">(<argument pos:start="65:20" pos:end="65:20"><expr pos:start="65:20" pos:end="65:20"><name pos:start="65:20" pos:end="65:20">s</name></expr></argument>, <argument pos:start="65:23" pos:end="65:36"><expr pos:start="65:23" pos:end="65:36"><name pos:start="65:23" pos:end="65:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="65:39" pos:end="67:76"><expr pos:start="65:39" pos:end="67:76"><literal type="string" pos:start="65:39" pos:end="65:75">"The faststart flag is incompatible "</literal>

                   <literal type="string" pos:start="67:20" pos:end="67:76">"with fragmentation and custom IO, disabling faststart\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:49"><expr pos:start="69:13" pos:end="69:48"><name pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:15">mov</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:22">flags</name></name> <operator pos:start="69:24" pos:end="69:25">&amp;=</operator> <operator pos:start="69:27" pos:end="69:27">~</operator><name pos:start="69:28" pos:end="69:48">FF_MOV_FLAG_FASTSTART</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="77:5" pos:end="79:66">/* Non-seekable output is ok if using fragmentation. If ism_lookahead

     * is enabled, we don't support non-seekable output at all. */</comment>

    <if_stmt pos:start="81:5" pos:end="89:5"><if pos:start="81:5" pos:end="89:5">if <condition pos:start="81:8" pos:end="83:69">(<expr pos:start="81:9" pos:end="83:68"><operator pos:start="81:9" pos:end="81:9">!</operator><name pos:start="81:10" pos:end="81:24"><name pos:start="81:10" pos:end="81:10">s</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:14">pb</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:24">seekable</name></name> <operator pos:start="81:26" pos:end="81:27">&amp;&amp;</operator>

        <operator pos:start="83:9" pos:end="83:9">(</operator><operator pos:start="83:10" pos:end="83:10">!</operator><operator pos:start="83:11" pos:end="83:11">(</operator><name pos:start="83:12" pos:end="83:21"><name pos:start="83:12" pos:end="83:14">mov</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:21">flags</name></name> <operator pos:start="83:23" pos:end="83:23">&amp;</operator> <name pos:start="83:25" pos:end="83:44">FF_MOV_FLAG_FRAGMENT</name><operator pos:start="83:45" pos:end="83:45">)</operator> <operator pos:start="83:47" pos:end="83:48">||</operator> <name pos:start="83:50" pos:end="83:67"><name pos:start="83:50" pos:end="83:52">mov</name><operator pos:start="83:53" pos:end="83:54">-&gt;</operator><name pos:start="83:55" pos:end="83:67">ism_lookahead</name></name><operator pos:start="83:68" pos:end="83:68">)</operator></expr>)</condition> <block pos:start="83:71" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:18">

        <expr_stmt pos:start="85:9" pos:end="85:80"><expr pos:start="85:9" pos:end="85:79"><call pos:start="85:9" pos:end="85:79"><name pos:start="85:9" pos:end="85:14">av_log</name><argument_list pos:start="85:15" pos:end="85:79">(<argument pos:start="85:16" pos:end="85:16"><expr pos:start="85:16" pos:end="85:16"><name pos:start="85:16" pos:end="85:16">s</name></expr></argument>, <argument pos:start="85:19" pos:end="85:30"><expr pos:start="85:19" pos:end="85:30"><name pos:start="85:19" pos:end="85:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:33" pos:end="85:78"><expr pos:start="85:33" pos:end="85:78"><literal type="string" pos:start="85:33" pos:end="85:78">"muxer does not support non seekable output\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:18">return <expr pos:start="87:16" pos:end="87:17"><operator pos:start="87:16" pos:end="87:16">-</operator><literal type="number" pos:start="87:17" pos:end="87:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>





    <expr_stmt pos:start="95:5" pos:end="95:29"><expr pos:start="95:5" pos:end="95:28"><call pos:start="95:5" pos:end="95:28"><name pos:start="95:5" pos:end="95:22">mov_write_ftyp_tag</name><argument_list pos:start="95:23" pos:end="95:28">(<argument pos:start="95:24" pos:end="95:25"><expr pos:start="95:24" pos:end="95:25"><name pos:start="95:24" pos:end="95:25">pb</name></expr></argument>,<argument pos:start="95:27" pos:end="95:27"><expr pos:start="95:27" pos:end="95:27"><name pos:start="95:27" pos:end="95:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="109:5"><if pos:start="97:5" pos:end="109:5">if <condition pos:start="97:8" pos:end="97:30">(<expr pos:start="97:9" pos:end="97:29"><name pos:start="97:9" pos:end="97:17"><name pos:start="97:9" pos:end="97:11">mov</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:17">mode</name></name> <operator pos:start="97:19" pos:end="97:20">==</operator> <name pos:start="97:22" pos:end="97:29">MODE_PSP</name></expr>)</condition> <block pos:start="97:32" pos:end="109:5">{<block_content pos:start="99:9" pos:end="107:38">

        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if <condition pos:start="99:12" pos:end="99:31">(<expr pos:start="99:13" pos:end="99:30"><name pos:start="99:13" pos:end="99:25"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:25">nb_streams</name></name> <operator pos:start="99:27" pos:end="99:28">!=</operator> <literal type="number" pos:start="99:30" pos:end="99:30">2</literal></expr>)</condition> <block pos:start="99:33" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:22">

            <expr_stmt pos:start="101:13" pos:end="101:86"><expr pos:start="101:13" pos:end="101:85"><call pos:start="101:13" pos:end="101:85"><name pos:start="101:13" pos:end="101:18">av_log</name><argument_list pos:start="101:19" pos:end="101:85">(<argument pos:start="101:20" pos:end="101:20"><expr pos:start="101:20" pos:end="101:20"><name pos:start="101:20" pos:end="101:20">s</name></expr></argument>, <argument pos:start="101:23" pos:end="101:34"><expr pos:start="101:23" pos:end="101:34"><name pos:start="101:23" pos:end="101:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:37" pos:end="101:84"><expr pos:start="101:37" pos:end="101:84"><literal type="string" pos:start="101:37" pos:end="101:84">"PSP mode need one video and one audio stream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="103:13" pos:end="103:22">return <expr pos:start="103:20" pos:end="103:21"><operator pos:start="103:20" pos:end="103:20">-</operator><literal type="number" pos:start="103:21" pos:end="103:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:38"><expr pos:start="107:9" pos:end="107:37"><call pos:start="107:9" pos:end="107:37"><name pos:start="107:9" pos:end="107:30">mov_write_uuidprof_tag</name><argument_list pos:start="107:31" pos:end="107:37">(<argument pos:start="107:32" pos:end="107:33"><expr pos:start="107:32" pos:end="107:33"><name pos:start="107:32" pos:end="107:33">pb</name></expr></argument>, <argument pos:start="107:36" pos:end="107:36"><expr pos:start="107:36" pos:end="107:36"><name pos:start="107:36" pos:end="107:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:36"><expr pos:start="113:5" pos:end="113:35"><name pos:start="113:5" pos:end="113:19"><name pos:start="113:5" pos:end="113:7">mov</name><operator pos:start="113:8" pos:end="113:9">-&gt;</operator><name pos:start="113:10" pos:end="113:19">nb_streams</name></name> <operator pos:start="113:21" pos:end="113:21">=</operator> <name pos:start="113:23" pos:end="113:35"><name pos:start="113:23" pos:end="113:23">s</name><operator pos:start="113:24" pos:end="113:25">-&gt;</operator><name pos:start="113:26" pos:end="113:35">nb_streams</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="115:5" pos:end="117:47"><if pos:start="115:5" pos:end="117:47">if <condition pos:start="115:8" pos:end="115:68">(<expr pos:start="115:9" pos:end="115:67"><name pos:start="115:9" pos:end="115:17"><name pos:start="115:9" pos:end="115:11">mov</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:17">mode</name></name> <operator pos:start="115:19" pos:end="115:19">&amp;</operator> <operator pos:start="115:21" pos:end="115:21">(</operator><name pos:start="115:22" pos:end="115:29">MODE_MP4</name><operator pos:start="115:30" pos:end="115:30">|</operator><name pos:start="115:31" pos:end="115:38">MODE_MOV</name><operator pos:start="115:39" pos:end="115:39">|</operator><name pos:start="115:40" pos:end="115:48">MODE_IPOD</name><operator pos:start="115:49" pos:end="115:49">)</operator> <operator pos:start="115:51" pos:end="115:52">&amp;&amp;</operator> <name pos:start="115:54" pos:end="115:67"><name pos:start="115:54" pos:end="115:54">s</name><operator pos:start="115:55" pos:end="115:56">-&gt;</operator><name pos:start="115:57" pos:end="115:67">nb_chapters</name></name></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:47"><block_content pos:start="117:9" pos:end="117:47">

        <expr_stmt pos:start="117:9" pos:end="117:47"><expr pos:start="117:9" pos:end="117:46"><name pos:start="117:9" pos:end="117:26"><name pos:start="117:9" pos:end="117:11">mov</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:26">chapter_track</name></name> <operator pos:start="117:28" pos:end="117:28">=</operator> <name pos:start="117:30" pos:end="117:44"><name pos:start="117:30" pos:end="117:32">mov</name><operator pos:start="117:33" pos:end="117:34">-&gt;</operator><name pos:start="117:35" pos:end="117:44">nb_streams</name></name><operator pos:start="117:45" pos:end="117:46">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="121:5" pos:end="141:5"><if pos:start="121:5" pos:end="141:5">if <condition pos:start="121:8" pos:end="121:42">(<expr pos:start="121:9" pos:end="121:41"><name pos:start="121:9" pos:end="121:18"><name pos:start="121:9" pos:end="121:11">mov</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:18">flags</name></name> <operator pos:start="121:20" pos:end="121:20">&amp;</operator> <name pos:start="121:22" pos:end="121:41">FF_MOV_FLAG_RTP_HINT</name></expr>)</condition> <block pos:start="121:44" pos:end="141:5">{<block_content pos:start="125:9" pos:end="139:9">

        <comment type="block" pos:start="123:9" pos:end="123:61">/* Add hint tracks for each audio and video stream */</comment>

        <expr_stmt pos:start="125:9" pos:end="125:37"><expr pos:start="125:9" pos:end="125:36"><name pos:start="125:9" pos:end="125:18">hint_track</name> <operator pos:start="125:20" pos:end="125:20">=</operator> <name pos:start="125:22" pos:end="125:36"><name pos:start="125:22" pos:end="125:24">mov</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:36">nb_streams</name></name></expr>;</expr_stmt>

        <for pos:start="127:9" pos:end="139:9">for <control pos:start="127:13" pos:end="127:43">(<init pos:start="127:14" pos:end="127:19"><expr pos:start="127:14" pos:end="127:18"><name pos:start="127:14" pos:end="127:14">i</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <literal type="number" pos:start="127:18" pos:end="127:18">0</literal></expr>;</init> <condition pos:start="127:21" pos:end="127:38"><expr pos:start="127:21" pos:end="127:37"><name pos:start="127:21" pos:end="127:21">i</name> <operator pos:start="127:23" pos:end="127:23">&lt;</operator> <name pos:start="127:25" pos:end="127:37"><name pos:start="127:25" pos:end="127:25">s</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:37">nb_streams</name></name></expr>;</condition> <incr pos:start="127:40" pos:end="127:42"><expr pos:start="127:40" pos:end="127:42"><name pos:start="127:40" pos:end="127:40">i</name><operator pos:start="127:41" pos:end="127:42">++</operator></expr></incr>)</control> <block pos:start="127:45" pos:end="139:9">{<block_content pos:start="129:13" pos:end="137:13">

            <decl_stmt pos:start="129:13" pos:end="129:41"><decl pos:start="129:13" pos:end="129:40"><type pos:start="129:13" pos:end="129:22"><name pos:start="129:13" pos:end="129:20">AVStream</name> <modifier pos:start="129:22" pos:end="129:22">*</modifier></type><name pos:start="129:23" pos:end="129:24">st</name> <init pos:start="129:26" pos:end="129:40">= <expr pos:start="129:28" pos:end="129:40"><name pos:start="129:28" pos:end="129:40"><name pos:start="129:28" pos:end="129:28">s</name><operator pos:start="129:29" pos:end="129:30">-&gt;</operator><name pos:start="129:31" pos:end="129:37">streams</name><index pos:start="129:38" pos:end="129:40">[<expr pos:start="129:39" pos:end="129:39"><name pos:start="129:39" pos:end="129:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="131:13" pos:end="137:13"><if pos:start="131:13" pos:end="137:13">if <condition pos:start="131:16" pos:end="133:60">(<expr pos:start="131:17" pos:end="133:59"><name pos:start="131:17" pos:end="131:37"><name pos:start="131:17" pos:end="131:18">st</name><operator pos:start="131:19" pos:end="131:20">-&gt;</operator><name pos:start="131:21" pos:end="131:25">codec</name><operator pos:start="131:26" pos:end="131:27">-&gt;</operator><name pos:start="131:28" pos:end="131:37">codec_type</name></name> <operator pos:start="131:39" pos:end="131:40">==</operator> <name pos:start="131:42" pos:end="131:59">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="131:61" pos:end="131:62">||</operator>

                <name pos:start="133:17" pos:end="133:37"><name pos:start="133:17" pos:end="133:18">st</name><operator pos:start="133:19" pos:end="133:20">-&gt;</operator><name pos:start="133:21" pos:end="133:25">codec</name><operator pos:start="133:26" pos:end="133:27">-&gt;</operator><name pos:start="133:28" pos:end="133:37">codec_type</name></name> <operator pos:start="133:39" pos:end="133:40">==</operator> <name pos:start="133:42" pos:end="133:59">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="133:62" pos:end="137:13">{<block_content pos:start="135:17" pos:end="135:34">

                <expr_stmt pos:start="135:17" pos:end="135:34"><expr pos:start="135:17" pos:end="135:33"><name pos:start="135:17" pos:end="135:31"><name pos:start="135:17" pos:end="135:19">mov</name><operator pos:start="135:20" pos:end="135:21">-&gt;</operator><name pos:start="135:22" pos:end="135:31">nb_streams</name></name><operator pos:start="135:32" pos:end="135:33">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="145:5" pos:end="145:71">// Reserve an extra stream for chapters for the case where chapters</comment>

    <comment type="line" pos:start="147:5" pos:end="147:33">// are written in the trailer</comment>

    <expr_stmt pos:start="149:5" pos:end="149:75"><expr pos:start="149:5" pos:end="149:74"><name pos:start="149:5" pos:end="149:15"><name pos:start="149:5" pos:end="149:7">mov</name><operator pos:start="149:8" pos:end="149:9">-&gt;</operator><name pos:start="149:10" pos:end="149:15">tracks</name></name> <operator pos:start="149:17" pos:end="149:17">=</operator> <call pos:start="149:19" pos:end="149:74"><name pos:start="149:19" pos:end="149:28">av_mallocz</name><argument_list pos:start="149:29" pos:end="149:74">(<argument pos:start="149:30" pos:end="149:73"><expr pos:start="149:30" pos:end="149:73"><operator pos:start="149:30" pos:end="149:30">(</operator><name pos:start="149:31" pos:end="149:45"><name pos:start="149:31" pos:end="149:33">mov</name><operator pos:start="149:34" pos:end="149:35">-&gt;</operator><name pos:start="149:36" pos:end="149:45">nb_streams</name></name> <operator pos:start="149:47" pos:end="149:47">+</operator> <literal type="number" pos:start="149:49" pos:end="149:49">1</literal><operator pos:start="149:50" pos:end="149:50">)</operator> <operator pos:start="149:52" pos:end="149:52">*</operator> <sizeof pos:start="149:54" pos:end="149:73">sizeof<argument_list pos:start="149:60" pos:end="149:73">(<argument pos:start="149:61" pos:end="149:72"><expr pos:start="149:61" pos:end="149:72"><operator pos:start="149:61" pos:end="149:61">*</operator><name pos:start="149:62" pos:end="149:72"><name pos:start="149:62" pos:end="149:64">mov</name><operator pos:start="149:65" pos:end="149:66">-&gt;</operator><name pos:start="149:67" pos:end="149:72">tracks</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="151:5" pos:end="153:31"><if pos:start="151:5" pos:end="153:31">if <condition pos:start="151:8" pos:end="151:21">(<expr pos:start="151:9" pos:end="151:20"><operator pos:start="151:9" pos:end="151:9">!</operator><name pos:start="151:10" pos:end="151:20"><name pos:start="151:10" pos:end="151:12">mov</name><operator pos:start="151:13" pos:end="151:14">-&gt;</operator><name pos:start="151:15" pos:end="151:20">tracks</name></name></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="153:31"><block_content pos:start="153:9" pos:end="153:31">

        <return pos:start="153:9" pos:end="153:31">return <expr pos:start="153:16" pos:end="153:30"><call pos:start="153:16" pos:end="153:30"><name pos:start="153:16" pos:end="153:22">AVERROR</name><argument_list pos:start="153:23" pos:end="153:30">(<argument pos:start="153:24" pos:end="153:29"><expr pos:start="153:24" pos:end="153:29"><name pos:start="153:24" pos:end="153:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="157:5" pos:end="311:5">for <control pos:start="157:9" pos:end="157:39">(<init pos:start="157:10" pos:end="157:15"><expr pos:start="157:10" pos:end="157:14"><name pos:start="157:10" pos:end="157:10">i</name> <operator pos:start="157:12" pos:end="157:12">=</operator> <literal type="number" pos:start="157:14" pos:end="157:14">0</literal></expr>;</init> <condition pos:start="157:17" pos:end="157:34"><expr pos:start="157:17" pos:end="157:33"><name pos:start="157:17" pos:end="157:17">i</name> <operator pos:start="157:19" pos:end="157:19">&lt;</operator> <name pos:start="157:21" pos:end="157:33"><name pos:start="157:21" pos:end="157:21">s</name><operator pos:start="157:22" pos:end="157:23">-&gt;</operator><name pos:start="157:24" pos:end="157:33">nb_streams</name></name></expr>;</condition> <incr pos:start="157:36" pos:end="157:38"><expr pos:start="157:36" pos:end="157:38"><name pos:start="157:36" pos:end="157:36">i</name><operator pos:start="157:37" pos:end="157:38">++</operator></expr></incr>)</control> <block pos:start="157:41" pos:end="311:5">{<block_content pos:start="159:9" pos:end="309:9">

        <decl_stmt pos:start="159:9" pos:end="159:36"><decl pos:start="159:9" pos:end="159:35"><type pos:start="159:9" pos:end="159:18"><name pos:start="159:9" pos:end="159:16">AVStream</name> <modifier pos:start="159:18" pos:end="159:18">*</modifier></type><name pos:start="159:19" pos:end="159:20">st</name><init pos:start="159:21" pos:end="159:35">= <expr pos:start="159:23" pos:end="159:35"><name pos:start="159:23" pos:end="159:35"><name pos:start="159:23" pos:end="159:23">s</name><operator pos:start="159:24" pos:end="159:25">-&gt;</operator><name pos:start="159:26" pos:end="159:32">streams</name><index pos:start="159:33" pos:end="159:35">[<expr pos:start="159:34" pos:end="159:34"><name pos:start="159:34" pos:end="159:34">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="161:9" pos:end="161:41"><decl pos:start="161:9" pos:end="161:40"><type pos:start="161:9" pos:end="161:18"><name pos:start="161:9" pos:end="161:16">MOVTrack</name> <modifier pos:start="161:18" pos:end="161:18">*</modifier></type><name pos:start="161:19" pos:end="161:23">track</name><init pos:start="161:24" pos:end="161:40">= <expr pos:start="161:26" pos:end="161:40"><operator pos:start="161:26" pos:end="161:26">&amp;</operator><name pos:start="161:27" pos:end="161:40"><name pos:start="161:27" pos:end="161:29">mov</name><operator pos:start="161:30" pos:end="161:31">-&gt;</operator><name pos:start="161:32" pos:end="161:37">tracks</name><index pos:start="161:38" pos:end="161:40">[<expr pos:start="161:39" pos:end="161:39"><name pos:start="161:39" pos:end="161:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="163:9" pos:end="163:80"><decl pos:start="163:9" pos:end="163:79"><type pos:start="163:9" pos:end="163:27"><name pos:start="163:9" pos:end="163:25">AVDictionaryEntry</name> <modifier pos:start="163:27" pos:end="163:27">*</modifier></type><name pos:start="163:28" pos:end="163:31">lang</name> <init pos:start="163:33" pos:end="163:79">= <expr pos:start="163:35" pos:end="163:79"><call pos:start="163:35" pos:end="163:79"><name pos:start="163:35" pos:end="163:45">av_dict_get</name><argument_list pos:start="163:46" pos:end="163:79">(<argument pos:start="163:47" pos:end="163:58"><expr pos:start="163:47" pos:end="163:58"><name pos:start="163:47" pos:end="163:58"><name pos:start="163:47" pos:end="163:48">st</name><operator pos:start="163:49" pos:end="163:50">-&gt;</operator><name pos:start="163:51" pos:end="163:58">metadata</name></name></expr></argument>, <argument pos:start="163:61" pos:end="163:70"><expr pos:start="163:61" pos:end="163:70"><literal type="string" pos:start="163:61" pos:end="163:70">"language"</literal></expr></argument>, <argument pos:start="163:73" pos:end="163:76"><expr pos:start="163:73" pos:end="163:76"><name pos:start="163:73" pos:end="163:76">NULL</name></expr></argument>,<argument pos:start="163:78" pos:end="163:78"><expr pos:start="163:78" pos:end="163:78"><literal type="number" pos:start="163:78" pos:end="163:78">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="167:9" pos:end="167:31"><expr pos:start="167:9" pos:end="167:30"><name pos:start="167:9" pos:end="167:18"><name pos:start="167:9" pos:end="167:13">track</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:18">enc</name></name> <operator pos:start="167:20" pos:end="167:20">=</operator> <name pos:start="167:22" pos:end="167:30"><name pos:start="167:22" pos:end="167:23">st</name><operator pos:start="167:24" pos:end="167:25">-&gt;</operator><name pos:start="167:26" pos:end="167:30">codec</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:93"><expr pos:start="169:9" pos:end="169:92"><name pos:start="169:9" pos:end="169:23"><name pos:start="169:9" pos:end="169:13">track</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:23">language</name></name> <operator pos:start="169:25" pos:end="169:25">=</operator> <call pos:start="169:27" pos:end="169:92"><name pos:start="169:27" pos:end="169:47">ff_mov_iso639_to_lang</name><argument_list pos:start="169:48" pos:end="169:92">(<argument pos:start="169:49" pos:end="169:70"><expr pos:start="169:49" pos:end="169:70"><ternary pos:start="169:49" pos:end="169:70"><condition pos:start="169:49" pos:end="169:53"><expr pos:start="169:49" pos:end="169:52"><name pos:start="169:49" pos:end="169:52">lang</name></expr>?</condition><then pos:start="169:54" pos:end="169:64"><expr pos:start="169:54" pos:end="169:64"><name pos:start="169:54" pos:end="169:64"><name pos:start="169:54" pos:end="169:57">lang</name><operator pos:start="169:58" pos:end="169:59">-&gt;</operator><name pos:start="169:60" pos:end="169:64">value</name></name></expr></then><else pos:start="169:65" pos:end="169:70">:<expr pos:start="169:66" pos:end="169:70"><literal type="string" pos:start="169:66" pos:end="169:70">"und"</literal></expr></else></ternary></expr></argument>, <argument pos:start="169:73" pos:end="169:91"><expr pos:start="169:73" pos:end="169:91"><name pos:start="169:73" pos:end="169:81"><name pos:start="169:73" pos:end="169:75">mov</name><operator pos:start="169:76" pos:end="169:77">-&gt;</operator><name pos:start="169:78" pos:end="169:81">mode</name></name><operator pos:start="169:82" pos:end="169:83">!=</operator><name pos:start="169:84" pos:end="169:91">MODE_MOV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="171:9" pos:end="173:32"><if pos:start="171:9" pos:end="173:32">if <condition pos:start="171:12" pos:end="171:32">(<expr pos:start="171:13" pos:end="171:31"><name pos:start="171:13" pos:end="171:27"><name pos:start="171:13" pos:end="171:17">track</name><operator pos:start="171:18" pos:end="171:19">-&gt;</operator><name pos:start="171:20" pos:end="171:27">language</name></name> <operator pos:start="171:29" pos:end="171:29">&lt;</operator> <literal type="number" pos:start="171:31" pos:end="171:31">0</literal></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:32"><block_content pos:start="173:13" pos:end="173:32">

            <expr_stmt pos:start="173:13" pos:end="173:32"><expr pos:start="173:13" pos:end="173:31"><name pos:start="173:13" pos:end="173:27"><name pos:start="173:13" pos:end="173:17">track</name><operator pos:start="173:18" pos:end="173:19">-&gt;</operator><name pos:start="173:20" pos:end="173:27">language</name></name> <operator pos:start="173:29" pos:end="173:29">=</operator> <literal type="number" pos:start="173:31" pos:end="173:31">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:32"><expr pos:start="175:9" pos:end="175:31"><name pos:start="175:9" pos:end="175:19"><name pos:start="175:9" pos:end="175:13">track</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:19">mode</name></name> <operator pos:start="175:21" pos:end="175:21">=</operator> <name pos:start="175:23" pos:end="175:31"><name pos:start="175:23" pos:end="175:25">mov</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:31">mode</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:51"><expr pos:start="177:9" pos:end="177:50"><name pos:start="177:9" pos:end="177:18"><name pos:start="177:9" pos:end="177:13">track</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:18">tag</name></name>  <operator pos:start="177:21" pos:end="177:21">=</operator> <call pos:start="177:23" pos:end="177:50"><name pos:start="177:23" pos:end="177:40">mov_find_codec_tag</name><argument_list pos:start="177:41" pos:end="177:50">(<argument pos:start="177:42" pos:end="177:42"><expr pos:start="177:42" pos:end="177:42"><name pos:start="177:42" pos:end="177:42">s</name></expr></argument>, <argument pos:start="177:45" pos:end="177:49"><expr pos:start="177:45" pos:end="177:49"><name pos:start="177:45" pos:end="177:49">track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="179:9" pos:end="187:9"><if pos:start="179:9" pos:end="187:9">if <condition pos:start="179:12" pos:end="179:24">(<expr pos:start="179:13" pos:end="179:23"><operator pos:start="179:13" pos:end="179:13">!</operator><name pos:start="179:14" pos:end="179:23"><name pos:start="179:14" pos:end="179:18">track</name><operator pos:start="179:19" pos:end="179:20">-&gt;</operator><name pos:start="179:21" pos:end="179:23">tag</name></name></expr>)</condition> <block pos:start="179:26" pos:end="187:9">{<block_content pos:start="181:13" pos:end="185:23">

            <expr_stmt pos:start="181:13" pos:end="183:70"><expr pos:start="181:13" pos:end="183:69"><call pos:start="181:13" pos:end="183:69"><name pos:start="181:13" pos:end="181:18">av_log</name><argument_list pos:start="181:19" pos:end="183:69">(<argument pos:start="181:20" pos:end="181:20"><expr pos:start="181:20" pos:end="181:20"><name pos:start="181:20" pos:end="181:20">s</name></expr></argument>, <argument pos:start="181:23" pos:end="181:34"><expr pos:start="181:23" pos:end="181:34"><name pos:start="181:23" pos:end="181:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="181:37" pos:end="183:65"><expr pos:start="181:37" pos:end="183:65"><literal type="string" pos:start="181:37" pos:end="181:68">"track %d: could not find tag, "</literal>

                   <literal type="string" pos:start="183:20" pos:end="183:65">"codec not currently supported in container\n"</literal></expr></argument>, <argument pos:start="183:68" pos:end="183:68"><expr pos:start="183:68" pos:end="183:68"><name pos:start="183:68" pos:end="183:68">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="185:13" pos:end="185:23">goto <name pos:start="185:18" pos:end="185:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="189:9" pos:end="191:30">/* If hinting of this track is enabled by a later hint track,

         * this is updated. */</comment>

        <expr_stmt pos:start="193:9" pos:end="193:31"><expr pos:start="193:9" pos:end="193:30"><name pos:start="193:9" pos:end="193:25"><name pos:start="193:9" pos:end="193:13">track</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:25">hint_track</name></name> <operator pos:start="193:27" pos:end="193:27">=</operator> <operator pos:start="193:29" pos:end="193:29">-</operator><literal type="number" pos:start="193:30" pos:end="193:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:43"><expr pos:start="195:9" pos:end="195:42"><name pos:start="195:9" pos:end="195:24"><name pos:start="195:9" pos:end="195:13">track</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:24">start_dts</name></name>  <operator pos:start="195:27" pos:end="195:27">=</operator> <name pos:start="195:29" pos:end="195:42">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <if_stmt pos:start="197:9" pos:end="279:9"><if pos:start="197:9" pos:end="229:9">if <condition pos:start="197:12" pos:end="197:56">(<expr pos:start="197:13" pos:end="197:55"><name pos:start="197:13" pos:end="197:33"><name pos:start="197:13" pos:end="197:14">st</name><operator pos:start="197:15" pos:end="197:16">-&gt;</operator><name pos:start="197:17" pos:end="197:21">codec</name><operator pos:start="197:22" pos:end="197:23">-&gt;</operator><name pos:start="197:24" pos:end="197:33">codec_type</name></name> <operator pos:start="197:35" pos:end="197:36">==</operator> <name pos:start="197:38" pos:end="197:55">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="197:58" pos:end="229:9">{<block_content pos:start="199:13" pos:end="227:59">

            <if_stmt pos:start="199:13" pos:end="215:13"><if pos:start="199:13" pos:end="215:13">if <condition pos:start="199:16" pos:end="203:93">(<expr pos:start="199:17" pos:end="203:92"><name pos:start="199:17" pos:end="199:26"><name pos:start="199:17" pos:end="199:21">track</name><operator pos:start="199:22" pos:end="199:23">-&gt;</operator><name pos:start="199:24" pos:end="199:26">tag</name></name> <operator pos:start="199:28" pos:end="199:29">==</operator> <call pos:start="199:31" pos:end="199:52"><name pos:start="199:31" pos:end="199:35">MKTAG</name><argument_list pos:start="199:36" pos:end="199:52">(<argument pos:start="199:37" pos:end="199:39"><expr pos:start="199:37" pos:end="199:39"><literal type="char" pos:start="199:37" pos:end="199:39">'m'</literal></expr></argument>,<argument pos:start="199:41" pos:end="199:43"><expr pos:start="199:41" pos:end="199:43"><literal type="char" pos:start="199:41" pos:end="199:43">'x'</literal></expr></argument>,<argument pos:start="199:45" pos:end="199:47"><expr pos:start="199:45" pos:end="199:47"><literal type="char" pos:start="199:45" pos:end="199:47">'3'</literal></expr></argument>,<argument pos:start="199:49" pos:end="199:51"><expr pos:start="199:49" pos:end="199:51"><literal type="char" pos:start="199:49" pos:end="199:51">'p'</literal></expr></argument>)</argument_list></call> <operator pos:start="199:54" pos:end="199:55">||</operator> <name pos:start="199:57" pos:end="199:66"><name pos:start="199:57" pos:end="199:61">track</name><operator pos:start="199:62" pos:end="199:63">-&gt;</operator><name pos:start="199:64" pos:end="199:66">tag</name></name> <operator pos:start="199:68" pos:end="199:69">==</operator> <call pos:start="199:71" pos:end="199:92"><name pos:start="199:71" pos:end="199:75">MKTAG</name><argument_list pos:start="199:76" pos:end="199:92">(<argument pos:start="199:77" pos:end="199:79"><expr pos:start="199:77" pos:end="199:79"><literal type="char" pos:start="199:77" pos:end="199:79">'m'</literal></expr></argument>,<argument pos:start="199:81" pos:end="199:83"><expr pos:start="199:81" pos:end="199:83"><literal type="char" pos:start="199:81" pos:end="199:83">'x'</literal></expr></argument>,<argument pos:start="199:85" pos:end="199:87"><expr pos:start="199:85" pos:end="199:87"><literal type="char" pos:start="199:85" pos:end="199:87">'3'</literal></expr></argument>,<argument pos:start="199:89" pos:end="199:91"><expr pos:start="199:89" pos:end="199:91"><literal type="char" pos:start="199:89" pos:end="199:91">'n'</literal></expr></argument>)</argument_list></call> <operator pos:start="199:94" pos:end="199:95">||</operator>

                <name pos:start="201:17" pos:end="201:26"><name pos:start="201:17" pos:end="201:21">track</name><operator pos:start="201:22" pos:end="201:23">-&gt;</operator><name pos:start="201:24" pos:end="201:26">tag</name></name> <operator pos:start="201:28" pos:end="201:29">==</operator> <call pos:start="201:31" pos:end="201:52"><name pos:start="201:31" pos:end="201:35">MKTAG</name><argument_list pos:start="201:36" pos:end="201:52">(<argument pos:start="201:37" pos:end="201:39"><expr pos:start="201:37" pos:end="201:39"><literal type="char" pos:start="201:37" pos:end="201:39">'m'</literal></expr></argument>,<argument pos:start="201:41" pos:end="201:43"><expr pos:start="201:41" pos:end="201:43"><literal type="char" pos:start="201:41" pos:end="201:43">'x'</literal></expr></argument>,<argument pos:start="201:45" pos:end="201:47"><expr pos:start="201:45" pos:end="201:47"><literal type="char" pos:start="201:45" pos:end="201:47">'4'</literal></expr></argument>,<argument pos:start="201:49" pos:end="201:51"><expr pos:start="201:49" pos:end="201:51"><literal type="char" pos:start="201:49" pos:end="201:51">'p'</literal></expr></argument>)</argument_list></call> <operator pos:start="201:54" pos:end="201:55">||</operator> <name pos:start="201:57" pos:end="201:66"><name pos:start="201:57" pos:end="201:61">track</name><operator pos:start="201:62" pos:end="201:63">-&gt;</operator><name pos:start="201:64" pos:end="201:66">tag</name></name> <operator pos:start="201:68" pos:end="201:69">==</operator> <call pos:start="201:71" pos:end="201:92"><name pos:start="201:71" pos:end="201:75">MKTAG</name><argument_list pos:start="201:76" pos:end="201:92">(<argument pos:start="201:77" pos:end="201:79"><expr pos:start="201:77" pos:end="201:79"><literal type="char" pos:start="201:77" pos:end="201:79">'m'</literal></expr></argument>,<argument pos:start="201:81" pos:end="201:83"><expr pos:start="201:81" pos:end="201:83"><literal type="char" pos:start="201:81" pos:end="201:83">'x'</literal></expr></argument>,<argument pos:start="201:85" pos:end="201:87"><expr pos:start="201:85" pos:end="201:87"><literal type="char" pos:start="201:85" pos:end="201:87">'4'</literal></expr></argument>,<argument pos:start="201:89" pos:end="201:91"><expr pos:start="201:89" pos:end="201:91"><literal type="char" pos:start="201:89" pos:end="201:91">'n'</literal></expr></argument>)</argument_list></call> <operator pos:start="201:94" pos:end="201:95">||</operator>

                <name pos:start="203:17" pos:end="203:26"><name pos:start="203:17" pos:end="203:21">track</name><operator pos:start="203:22" pos:end="203:23">-&gt;</operator><name pos:start="203:24" pos:end="203:26">tag</name></name> <operator pos:start="203:28" pos:end="203:29">==</operator> <call pos:start="203:31" pos:end="203:52"><name pos:start="203:31" pos:end="203:35">MKTAG</name><argument_list pos:start="203:36" pos:end="203:52">(<argument pos:start="203:37" pos:end="203:39"><expr pos:start="203:37" pos:end="203:39"><literal type="char" pos:start="203:37" pos:end="203:39">'m'</literal></expr></argument>,<argument pos:start="203:41" pos:end="203:43"><expr pos:start="203:41" pos:end="203:43"><literal type="char" pos:start="203:41" pos:end="203:43">'x'</literal></expr></argument>,<argument pos:start="203:45" pos:end="203:47"><expr pos:start="203:45" pos:end="203:47"><literal type="char" pos:start="203:45" pos:end="203:47">'5'</literal></expr></argument>,<argument pos:start="203:49" pos:end="203:51"><expr pos:start="203:49" pos:end="203:51"><literal type="char" pos:start="203:49" pos:end="203:51">'p'</literal></expr></argument>)</argument_list></call> <operator pos:start="203:54" pos:end="203:55">||</operator> <name pos:start="203:57" pos:end="203:66"><name pos:start="203:57" pos:end="203:61">track</name><operator pos:start="203:62" pos:end="203:63">-&gt;</operator><name pos:start="203:64" pos:end="203:66">tag</name></name> <operator pos:start="203:68" pos:end="203:69">==</operator> <call pos:start="203:71" pos:end="203:92"><name pos:start="203:71" pos:end="203:75">MKTAG</name><argument_list pos:start="203:76" pos:end="203:92">(<argument pos:start="203:77" pos:end="203:79"><expr pos:start="203:77" pos:end="203:79"><literal type="char" pos:start="203:77" pos:end="203:79">'m'</literal></expr></argument>,<argument pos:start="203:81" pos:end="203:83"><expr pos:start="203:81" pos:end="203:83"><literal type="char" pos:start="203:81" pos:end="203:83">'x'</literal></expr></argument>,<argument pos:start="203:85" pos:end="203:87"><expr pos:start="203:85" pos:end="203:87"><literal type="char" pos:start="203:85" pos:end="203:87">'5'</literal></expr></argument>,<argument pos:start="203:89" pos:end="203:91"><expr pos:start="203:89" pos:end="203:91"><literal type="char" pos:start="203:89" pos:end="203:91">'n'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="203:95" pos:end="215:13">{<block_content pos:start="205:17" pos:end="213:68">

                <if_stmt pos:start="205:17" pos:end="211:17"><if pos:start="205:17" pos:end="211:17">if <condition pos:start="205:20" pos:end="205:102">(<expr pos:start="205:21" pos:end="205:101"><name pos:start="205:21" pos:end="205:36"><name pos:start="205:21" pos:end="205:22">st</name><operator pos:start="205:23" pos:end="205:24">-&gt;</operator><name pos:start="205:25" pos:end="205:29">codec</name><operator pos:start="205:30" pos:end="205:31">-&gt;</operator><name pos:start="205:32" pos:end="205:36">width</name></name> <operator pos:start="205:38" pos:end="205:39">!=</operator> <literal type="number" pos:start="205:41" pos:end="205:43">720</literal> <operator pos:start="205:45" pos:end="205:46">||</operator> <operator pos:start="205:48" pos:end="205:48">(</operator><name pos:start="205:49" pos:end="205:65"><name pos:start="205:49" pos:end="205:50">st</name><operator pos:start="205:51" pos:end="205:52">-&gt;</operator><name pos:start="205:53" pos:end="205:57">codec</name><operator pos:start="205:58" pos:end="205:59">-&gt;</operator><name pos:start="205:60" pos:end="205:65">height</name></name> <operator pos:start="205:67" pos:end="205:68">!=</operator> <literal type="number" pos:start="205:70" pos:end="205:72">608</literal> <operator pos:start="205:74" pos:end="205:75">&amp;&amp;</operator> <name pos:start="205:77" pos:end="205:93"><name pos:start="205:77" pos:end="205:78">st</name><operator pos:start="205:79" pos:end="205:80">-&gt;</operator><name pos:start="205:81" pos:end="205:85">codec</name><operator pos:start="205:86" pos:end="205:87">-&gt;</operator><name pos:start="205:88" pos:end="205:93">height</name></name> <operator pos:start="205:95" pos:end="205:96">!=</operator> <literal type="number" pos:start="205:98" pos:end="205:100">512</literal><operator pos:start="205:101" pos:end="205:101">)</operator></expr>)</condition> <block pos:start="205:104" pos:end="211:17">{<block_content pos:start="207:21" pos:end="209:31">

                    <expr_stmt pos:start="207:21" pos:end="207:103"><expr pos:start="207:21" pos:end="207:102"><call pos:start="207:21" pos:end="207:102"><name pos:start="207:21" pos:end="207:26">av_log</name><argument_list pos:start="207:27" pos:end="207:102">(<argument pos:start="207:28" pos:end="207:28"><expr pos:start="207:28" pos:end="207:28"><name pos:start="207:28" pos:end="207:28">s</name></expr></argument>, <argument pos:start="207:31" pos:end="207:42"><expr pos:start="207:31" pos:end="207:42"><name pos:start="207:31" pos:end="207:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="207:45" pos:end="207:101"><expr pos:start="207:45" pos:end="207:101"><literal type="string" pos:start="207:45" pos:end="207:101">"D-10/IMX must use 720x608 or 720x512 video resolution\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="209:21" pos:end="209:31">goto <name pos:start="209:26" pos:end="209:30">error</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:68"><expr pos:start="213:17" pos:end="213:67"><name pos:start="213:17" pos:end="213:29"><name pos:start="213:17" pos:end="213:21">track</name><operator pos:start="213:22" pos:end="213:23">-&gt;</operator><name pos:start="213:24" pos:end="213:29">height</name></name> <operator pos:start="213:31" pos:end="213:31">=</operator> <ternary pos:start="213:33" pos:end="213:67"><condition pos:start="213:33" pos:end="213:57"><expr pos:start="213:33" pos:end="213:55"><name pos:start="213:33" pos:end="213:42"><name pos:start="213:33" pos:end="213:37">track</name><operator pos:start="213:38" pos:end="213:39">-&gt;</operator><name pos:start="213:40" pos:end="213:42">tag</name></name> <operator pos:start="213:44" pos:end="213:45">&gt;&gt;</operator> <literal type="number" pos:start="213:47" pos:end="213:48">24</literal> <operator pos:start="213:50" pos:end="213:51">==</operator> <literal type="char" pos:start="213:53" pos:end="213:55">'n'</literal></expr> ?</condition><then pos:start="213:59" pos:end="213:61"> <expr pos:start="213:59" pos:end="213:61"><literal type="number" pos:start="213:59" pos:end="213:61">486</literal></expr> </then><else pos:start="213:63" pos:end="213:67">: <expr pos:start="213:65" pos:end="213:67"><literal type="number" pos:start="213:65" pos:end="213:67">576</literal></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:56"><expr pos:start="217:13" pos:end="217:55"><name pos:start="217:13" pos:end="217:28"><name pos:start="217:13" pos:end="217:17">track</name><operator pos:start="217:18" pos:end="217:19">-&gt;</operator><name pos:start="217:20" pos:end="217:28">timescale</name></name> <operator pos:start="217:30" pos:end="217:30">=</operator> <name pos:start="217:32" pos:end="217:55"><name pos:start="217:32" pos:end="217:33">st</name><operator pos:start="217:34" pos:end="217:35">-&gt;</operator><name pos:start="217:36" pos:end="217:40">codec</name><operator pos:start="217:41" pos:end="217:42">-&gt;</operator><name pos:start="217:43" pos:end="217:51">time_base</name><operator pos:start="217:52" pos:end="217:52">.</operator><name pos:start="217:53" pos:end="217:55">den</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="219:13" pos:end="227:59"><if pos:start="219:13" pos:end="227:59">if <condition pos:start="219:16" pos:end="219:69">(<expr pos:start="219:17" pos:end="219:68"><name pos:start="219:17" pos:end="219:27"><name pos:start="219:17" pos:end="219:21">track</name><operator pos:start="219:22" pos:end="219:23">-&gt;</operator><name pos:start="219:24" pos:end="219:27">mode</name></name> <operator pos:start="219:29" pos:end="219:30">==</operator> <name pos:start="219:32" pos:end="219:39">MODE_MOV</name> <operator pos:start="219:41" pos:end="219:42">&amp;&amp;</operator> <name pos:start="219:44" pos:end="219:59"><name pos:start="219:44" pos:end="219:48">track</name><operator pos:start="219:49" pos:end="219:50">-&gt;</operator><name pos:start="219:51" pos:end="219:59">timescale</name></name> <operator pos:start="219:61" pos:end="219:61">&gt;</operator> <literal type="number" pos:start="219:63" pos:end="219:68">100000</literal></expr>)</condition><block type="pseudo" pos:start="221:17" pos:end="227:59"><block_content pos:start="221:17" pos:end="227:59">

                <expr_stmt pos:start="221:17" pos:end="227:59"><expr pos:start="221:17" pos:end="227:58"><call pos:start="221:17" pos:end="227:58"><name pos:start="221:17" pos:end="221:22">av_log</name><argument_list pos:start="221:23" pos:end="227:58">(<argument pos:start="221:24" pos:end="221:24"><expr pos:start="221:24" pos:end="221:24"><name pos:start="221:24" pos:end="221:24">s</name></expr></argument>, <argument pos:start="221:27" pos:end="221:40"><expr pos:start="221:27" pos:end="221:40"><name pos:start="221:27" pos:end="221:40">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="223:24" pos:end="227:57"><expr pos:start="223:24" pos:end="227:57"><literal type="string" pos:start="223:24" pos:end="223:88">"WARNING codec timebase is very high. If duration is too long,\n"</literal>

                       <literal type="string" pos:start="225:24" pos:end="225:92">"file may not be playable by quicktime. Specify a shorter timebase\n"</literal>

                       <literal type="string" pos:start="227:24" pos:end="227:57">"or choose different container.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="229:11" pos:end="271:9">else if <condition pos:start="229:19" pos:end="229:63">(<expr pos:start="229:20" pos:end="229:62"><name pos:start="229:20" pos:end="229:40"><name pos:start="229:20" pos:end="229:21">st</name><operator pos:start="229:22" pos:end="229:23">-&gt;</operator><name pos:start="229:24" pos:end="229:28">codec</name><operator pos:start="229:29" pos:end="229:30">-&gt;</operator><name pos:start="229:31" pos:end="229:40">codec_type</name></name> <operator pos:start="229:42" pos:end="229:43">==</operator> <name pos:start="229:45" pos:end="229:62">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="229:65" pos:end="271:9">{<block_content pos:start="231:13" pos:end="269:13">

            <expr_stmt pos:start="231:13" pos:end="231:54"><expr pos:start="231:13" pos:end="231:53"><name pos:start="231:13" pos:end="231:28"><name pos:start="231:13" pos:end="231:17">track</name><operator pos:start="231:18" pos:end="231:19">-&gt;</operator><name pos:start="231:20" pos:end="231:28">timescale</name></name> <operator pos:start="231:30" pos:end="231:30">=</operator> <name pos:start="231:32" pos:end="231:53"><name pos:start="231:32" pos:end="231:33">st</name><operator pos:start="231:34" pos:end="231:35">-&gt;</operator><name pos:start="231:36" pos:end="231:40">codec</name><operator pos:start="231:41" pos:end="231:42">-&gt;</operator><name pos:start="231:43" pos:end="231:53">sample_rate</name></name></expr>;</expr_stmt>

            <comment type="block" pos:start="233:13" pos:end="233:51">/* set sample_size for PCM and ADPCM */</comment>

            <if_stmt pos:start="235:13" pos:end="249:13"><if pos:start="235:13" pos:end="249:13">if <condition pos:start="235:16" pos:end="237:56">(<expr pos:start="235:17" pos:end="237:55"><call pos:start="235:17" pos:end="235:59"><name pos:start="235:17" pos:end="235:38">av_get_bits_per_sample</name><argument_list pos:start="235:39" pos:end="235:59">(<argument pos:start="235:40" pos:end="235:58"><expr pos:start="235:40" pos:end="235:58"><name pos:start="235:40" pos:end="235:58"><name pos:start="235:40" pos:end="235:41">st</name><operator pos:start="235:42" pos:end="235:43">-&gt;</operator><name pos:start="235:44" pos:end="235:48">codec</name><operator pos:start="235:49" pos:end="235:50">-&gt;</operator><name pos:start="235:51" pos:end="235:58">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="235:61" pos:end="235:62">||</operator>

                <name pos:start="237:17" pos:end="237:35"><name pos:start="237:17" pos:end="237:18">st</name><operator pos:start="237:19" pos:end="237:20">-&gt;</operator><name pos:start="237:21" pos:end="237:25">codec</name><operator pos:start="237:26" pos:end="237:27">-&gt;</operator><name pos:start="237:28" pos:end="237:35">codec_id</name></name> <operator pos:start="237:37" pos:end="237:38">==</operator> <name pos:start="237:40" pos:end="237:55">AV_CODEC_ID_ILBC</name></expr>)</condition> <block pos:start="237:58" pos:end="249:13">{<block_content pos:start="239:17" pos:end="247:60">

                <if_stmt pos:start="239:17" pos:end="245:17"><if pos:start="239:17" pos:end="245:17">if <condition pos:start="239:20" pos:end="239:44">(<expr pos:start="239:21" pos:end="239:43"><operator pos:start="239:21" pos:end="239:21">!</operator><name pos:start="239:22" pos:end="239:43"><name pos:start="239:22" pos:end="239:23">st</name><operator pos:start="239:24" pos:end="239:25">-&gt;</operator><name pos:start="239:26" pos:end="239:30">codec</name><operator pos:start="239:31" pos:end="239:32">-&gt;</operator><name pos:start="239:33" pos:end="239:43">block_align</name></name></expr>)</condition> <block pos:start="239:46" pos:end="245:17">{<block_content pos:start="241:21" pos:end="243:31">

                    <expr_stmt pos:start="241:21" pos:end="241:91"><expr pos:start="241:21" pos:end="241:90"><call pos:start="241:21" pos:end="241:90"><name pos:start="241:21" pos:end="241:26">av_log</name><argument_list pos:start="241:27" pos:end="241:90">(<argument pos:start="241:28" pos:end="241:28"><expr pos:start="241:28" pos:end="241:28"><name pos:start="241:28" pos:end="241:28">s</name></expr></argument>, <argument pos:start="241:31" pos:end="241:42"><expr pos:start="241:31" pos:end="241:42"><name pos:start="241:31" pos:end="241:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="241:45" pos:end="241:86"><expr pos:start="241:45" pos:end="241:86"><literal type="string" pos:start="241:45" pos:end="241:86">"track %d: codec block align is not set\n"</literal></expr></argument>, <argument pos:start="241:89" pos:end="241:89"><expr pos:start="241:89" pos:end="241:89"><name pos:start="241:89" pos:end="241:89">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="243:21" pos:end="243:31">goto <name pos:start="243:26" pos:end="243:30">error</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="247:17" pos:end="247:60"><expr pos:start="247:17" pos:end="247:59"><name pos:start="247:17" pos:end="247:34"><name pos:start="247:17" pos:end="247:21">track</name><operator pos:start="247:22" pos:end="247:23">-&gt;</operator><name pos:start="247:24" pos:end="247:34">sample_size</name></name> <operator pos:start="247:36" pos:end="247:36">=</operator> <name pos:start="247:38" pos:end="247:59"><name pos:start="247:38" pos:end="247:39">st</name><operator pos:start="247:40" pos:end="247:41">-&gt;</operator><name pos:start="247:42" pos:end="247:46">codec</name><operator pos:start="247:47" pos:end="247:48">-&gt;</operator><name pos:start="247:49" pos:end="247:59">block_align</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="251:13" pos:end="251:52">/* set audio_vbr for compressed audio */</comment>

            <if_stmt pos:start="253:13" pos:end="257:13"><if pos:start="253:13" pos:end="257:13">if <condition pos:start="253:16" pos:end="253:64">(<expr pos:start="253:17" pos:end="253:63"><call pos:start="253:17" pos:end="253:59"><name pos:start="253:17" pos:end="253:38">av_get_bits_per_sample</name><argument_list pos:start="253:39" pos:end="253:59">(<argument pos:start="253:40" pos:end="253:58"><expr pos:start="253:40" pos:end="253:58"><name pos:start="253:40" pos:end="253:58"><name pos:start="253:40" pos:end="253:41">st</name><operator pos:start="253:42" pos:end="253:43">-&gt;</operator><name pos:start="253:44" pos:end="253:48">codec</name><operator pos:start="253:49" pos:end="253:50">-&gt;</operator><name pos:start="253:51" pos:end="253:58">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="253:61" pos:end="253:61">&lt;</operator> <literal type="number" pos:start="253:63" pos:end="253:63">8</literal></expr>)</condition> <block pos:start="253:66" pos:end="257:13">{<block_content pos:start="255:17" pos:end="255:37">

                <expr_stmt pos:start="255:17" pos:end="255:37"><expr pos:start="255:17" pos:end="255:36"><name pos:start="255:17" pos:end="255:32"><name pos:start="255:17" pos:end="255:21">track</name><operator pos:start="255:22" pos:end="255:23">-&gt;</operator><name pos:start="255:24" pos:end="255:32">audio_vbr</name></name> <operator pos:start="255:34" pos:end="255:34">=</operator> <literal type="number" pos:start="255:36" pos:end="255:36">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="259:13" pos:end="269:13"><if pos:start="259:13" pos:end="269:13">if <condition pos:start="259:16" pos:end="261:84">(<expr pos:start="259:17" pos:end="261:83"><name pos:start="259:17" pos:end="259:27"><name pos:start="259:17" pos:end="259:21">track</name><operator pos:start="259:22" pos:end="259:23">-&gt;</operator><name pos:start="259:24" pos:end="259:27">mode</name></name> <operator pos:start="259:29" pos:end="259:30">!=</operator> <name pos:start="259:32" pos:end="259:39">MODE_MOV</name> <operator pos:start="259:41" pos:end="259:42">&amp;&amp;</operator>

                <name pos:start="261:17" pos:end="261:36"><name pos:start="261:17" pos:end="261:21">track</name><operator pos:start="261:22" pos:end="261:23">-&gt;</operator><name pos:start="261:24" pos:end="261:26">enc</name><operator pos:start="261:27" pos:end="261:28">-&gt;</operator><name pos:start="261:29" pos:end="261:36">codec_id</name></name> <operator pos:start="261:38" pos:end="261:39">==</operator> <name pos:start="261:41" pos:end="261:55">AV_CODEC_ID_MP3</name> <operator pos:start="261:57" pos:end="261:58">&amp;&amp;</operator> <name pos:start="261:60" pos:end="261:75"><name pos:start="261:60" pos:end="261:64">track</name><operator pos:start="261:65" pos:end="261:66">-&gt;</operator><name pos:start="261:67" pos:end="261:75">timescale</name></name> <operator pos:start="261:77" pos:end="261:77">&lt;</operator> <literal type="number" pos:start="261:79" pos:end="261:83">16000</literal></expr>)</condition> <block pos:start="261:86" pos:end="269:13">{<block_content pos:start="263:17" pos:end="267:27">

                <expr_stmt pos:start="263:17" pos:end="265:51"><expr pos:start="263:17" pos:end="265:50"><call pos:start="263:17" pos:end="265:50"><name pos:start="263:17" pos:end="263:22">av_log</name><argument_list pos:start="263:23" pos:end="265:50">(<argument pos:start="263:24" pos:end="263:24"><expr pos:start="263:24" pos:end="263:24"><name pos:start="263:24" pos:end="263:24">s</name></expr></argument>, <argument pos:start="263:27" pos:end="263:38"><expr pos:start="263:27" pos:end="263:38"><name pos:start="263:27" pos:end="263:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="263:41" pos:end="263:89"><expr pos:start="263:41" pos:end="263:89"><literal type="string" pos:start="263:41" pos:end="263:89">"track %d: muxing mp3 at %dhz is not supported\n"</literal></expr></argument>,

                       <argument pos:start="265:24" pos:end="265:24"><expr pos:start="265:24" pos:end="265:24"><name pos:start="265:24" pos:end="265:24">i</name></expr></argument>, <argument pos:start="265:27" pos:end="265:49"><expr pos:start="265:27" pos:end="265:49"><name pos:start="265:27" pos:end="265:49"><name pos:start="265:27" pos:end="265:31">track</name><operator pos:start="265:32" pos:end="265:33">-&gt;</operator><name pos:start="265:34" pos:end="265:36">enc</name><operator pos:start="265:37" pos:end="265:38">-&gt;</operator><name pos:start="265:39" pos:end="265:49">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="267:17" pos:end="267:27">goto <name pos:start="267:22" pos:end="267:26">error</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="271:11" pos:end="275:9">else if <condition pos:start="271:19" pos:end="271:66">(<expr pos:start="271:20" pos:end="271:65"><name pos:start="271:20" pos:end="271:40"><name pos:start="271:20" pos:end="271:21">st</name><operator pos:start="271:22" pos:end="271:23">-&gt;</operator><name pos:start="271:24" pos:end="271:28">codec</name><operator pos:start="271:29" pos:end="271:30">-&gt;</operator><name pos:start="271:31" pos:end="271:40">codec_type</name></name> <operator pos:start="271:42" pos:end="271:43">==</operator> <name pos:start="271:45" pos:end="271:65">AVMEDIA_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="271:68" pos:end="275:9">{<block_content pos:start="273:13" pos:end="273:56">

            <expr_stmt pos:start="273:13" pos:end="273:56"><expr pos:start="273:13" pos:end="273:55"><name pos:start="273:13" pos:end="273:28"><name pos:start="273:13" pos:end="273:17">track</name><operator pos:start="273:18" pos:end="273:19">-&gt;</operator><name pos:start="273:20" pos:end="273:28">timescale</name></name> <operator pos:start="273:30" pos:end="273:30">=</operator> <name pos:start="273:32" pos:end="273:55"><name pos:start="273:32" pos:end="273:33">st</name><operator pos:start="273:34" pos:end="273:35">-&gt;</operator><name pos:start="273:36" pos:end="273:40">codec</name><operator pos:start="273:41" pos:end="273:42">-&gt;</operator><name pos:start="273:43" pos:end="273:51">time_base</name><operator pos:start="273:52" pos:end="273:52">.</operator><name pos:start="273:53" pos:end="273:55">den</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="275:11" pos:end="279:9">else if <condition pos:start="275:19" pos:end="275:62">(<expr pos:start="275:20" pos:end="275:61"><name pos:start="275:20" pos:end="275:40"><name pos:start="275:20" pos:end="275:21">st</name><operator pos:start="275:22" pos:end="275:23">-&gt;</operator><name pos:start="275:24" pos:end="275:28">codec</name><operator pos:start="275:29" pos:end="275:30">-&gt;</operator><name pos:start="275:31" pos:end="275:40">codec_type</name></name> <operator pos:start="275:42" pos:end="275:43">==</operator> <name pos:start="275:45" pos:end="275:61">AVMEDIA_TYPE_DATA</name></expr>)</condition> <block pos:start="275:64" pos:end="279:9">{<block_content pos:start="277:13" pos:end="277:56">

            <expr_stmt pos:start="277:13" pos:end="277:56"><expr pos:start="277:13" pos:end="277:55"><name pos:start="277:13" pos:end="277:28"><name pos:start="277:13" pos:end="277:17">track</name><operator pos:start="277:18" pos:end="277:19">-&gt;</operator><name pos:start="277:20" pos:end="277:28">timescale</name></name> <operator pos:start="277:30" pos:end="277:30">=</operator> <name pos:start="277:32" pos:end="277:55"><name pos:start="277:32" pos:end="277:33">st</name><operator pos:start="277:34" pos:end="277:35">-&gt;</operator><name pos:start="277:36" pos:end="277:40">codec</name><operator pos:start="277:41" pos:end="277:42">-&gt;</operator><name pos:start="277:43" pos:end="277:51">time_base</name><operator pos:start="277:52" pos:end="277:52">.</operator><name pos:start="277:53" pos:end="277:55">den</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="281:9" pos:end="283:46"><if pos:start="281:9" pos:end="283:46">if <condition pos:start="281:12" pos:end="281:27">(<expr pos:start="281:13" pos:end="281:26"><operator pos:start="281:13" pos:end="281:13">!</operator><name pos:start="281:14" pos:end="281:26"><name pos:start="281:14" pos:end="281:18">track</name><operator pos:start="281:19" pos:end="281:20">-&gt;</operator><name pos:start="281:21" pos:end="281:26">height</name></name></expr>)</condition><block type="pseudo" pos:start="283:13" pos:end="283:46"><block_content pos:start="283:13" pos:end="283:46">

            <expr_stmt pos:start="283:13" pos:end="283:46"><expr pos:start="283:13" pos:end="283:45"><name pos:start="283:13" pos:end="283:25"><name pos:start="283:13" pos:end="283:17">track</name><operator pos:start="283:18" pos:end="283:19">-&gt;</operator><name pos:start="283:20" pos:end="283:25">height</name></name> <operator pos:start="283:27" pos:end="283:27">=</operator> <name pos:start="283:29" pos:end="283:45"><name pos:start="283:29" pos:end="283:30">st</name><operator pos:start="283:31" pos:end="283:32">-&gt;</operator><name pos:start="283:33" pos:end="283:37">codec</name><operator pos:start="283:38" pos:end="283:39">-&gt;</operator><name pos:start="283:40" pos:end="283:45">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <comment type="block" pos:start="285:9" pos:end="287:43">/* The ism specific timescale isn't mandatory, but is assumed by

         * some tools, such as mp4split. */</comment>

        <if_stmt pos:start="289:9" pos:end="291:40"><if pos:start="289:9" pos:end="291:40">if <condition pos:start="289:12" pos:end="289:34">(<expr pos:start="289:13" pos:end="289:33"><name pos:start="289:13" pos:end="289:21"><name pos:start="289:13" pos:end="289:15">mov</name><operator pos:start="289:16" pos:end="289:17">-&gt;</operator><name pos:start="289:18" pos:end="289:21">mode</name></name> <operator pos:start="289:23" pos:end="289:24">==</operator> <name pos:start="289:26" pos:end="289:33">MODE_ISM</name></expr>)</condition><block type="pseudo" pos:start="291:13" pos:end="291:40"><block_content pos:start="291:13" pos:end="291:40">

            <expr_stmt pos:start="291:13" pos:end="291:40"><expr pos:start="291:13" pos:end="291:39"><name pos:start="291:13" pos:end="291:28"><name pos:start="291:13" pos:end="291:17">track</name><operator pos:start="291:18" pos:end="291:19">-&gt;</operator><name pos:start="291:20" pos:end="291:28">timescale</name></name> <operator pos:start="291:30" pos:end="291:30">=</operator> <literal type="number" pos:start="291:32" pos:end="291:39">10000000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="295:9" pos:end="295:57"><expr pos:start="295:9" pos:end="295:56"><call pos:start="295:9" pos:end="295:56"><name pos:start="295:9" pos:end="295:27">avpriv_set_pts_info</name><argument_list pos:start="295:28" pos:end="295:56">(<argument pos:start="295:29" pos:end="295:30"><expr pos:start="295:29" pos:end="295:30"><name pos:start="295:29" pos:end="295:30">st</name></expr></argument>, <argument pos:start="295:33" pos:end="295:34"><expr pos:start="295:33" pos:end="295:34"><literal type="number" pos:start="295:33" pos:end="295:34">64</literal></expr></argument>, <argument pos:start="295:37" pos:end="295:37"><expr pos:start="295:37" pos:end="295:37"><literal type="number" pos:start="295:37" pos:end="295:37">1</literal></expr></argument>, <argument pos:start="295:40" pos:end="295:55"><expr pos:start="295:40" pos:end="295:55"><name pos:start="295:40" pos:end="295:55"><name pos:start="295:40" pos:end="295:44">track</name><operator pos:start="295:45" pos:end="295:46">-&gt;</operator><name pos:start="295:47" pos:end="295:55">timescale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="299:9" pos:end="299:41">/* copy extradata if it exists */</comment>

        <if_stmt pos:start="301:9" pos:end="309:9"><if pos:start="301:9" pos:end="309:9">if <condition pos:start="301:12" pos:end="301:38">(<expr pos:start="301:13" pos:end="301:37"><name pos:start="301:13" pos:end="301:37"><name pos:start="301:13" pos:end="301:14">st</name><operator pos:start="301:15" pos:end="301:16">-&gt;</operator><name pos:start="301:17" pos:end="301:21">codec</name><operator pos:start="301:22" pos:end="301:23">-&gt;</operator><name pos:start="301:24" pos:end="301:37">extradata_size</name></name></expr>)</condition> <block pos:start="301:40" pos:end="309:9">{<block_content pos:start="303:13" pos:end="307:74">

            <expr_stmt pos:start="303:13" pos:end="303:56"><expr pos:start="303:13" pos:end="303:55"><name pos:start="303:13" pos:end="303:26"><name pos:start="303:13" pos:end="303:17">track</name><operator pos:start="303:18" pos:end="303:19">-&gt;</operator><name pos:start="303:20" pos:end="303:26">vos_len</name></name>  <operator pos:start="303:29" pos:end="303:29">=</operator> <name pos:start="303:31" pos:end="303:55"><name pos:start="303:31" pos:end="303:32">st</name><operator pos:start="303:33" pos:end="303:34">-&gt;</operator><name pos:start="303:35" pos:end="303:39">codec</name><operator pos:start="303:40" pos:end="303:41">-&gt;</operator><name pos:start="303:42" pos:end="303:55">extradata_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="305:13" pos:end="305:56"><expr pos:start="305:13" pos:end="305:55"><name pos:start="305:13" pos:end="305:27"><name pos:start="305:13" pos:end="305:17">track</name><operator pos:start="305:18" pos:end="305:19">-&gt;</operator><name pos:start="305:20" pos:end="305:27">vos_data</name></name> <operator pos:start="305:29" pos:end="305:29">=</operator> <call pos:start="305:31" pos:end="305:55"><name pos:start="305:31" pos:end="305:39">av_malloc</name><argument_list pos:start="305:40" pos:end="305:55">(<argument pos:start="305:41" pos:end="305:54"><expr pos:start="305:41" pos:end="305:54"><name pos:start="305:41" pos:end="305:54"><name pos:start="305:41" pos:end="305:45">track</name><operator pos:start="305:46" pos:end="305:47">-&gt;</operator><name pos:start="305:48" pos:end="305:54">vos_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="307:13" pos:end="307:74"><expr pos:start="307:13" pos:end="307:73"><call pos:start="307:13" pos:end="307:73"><name pos:start="307:13" pos:end="307:18">memcpy</name><argument_list pos:start="307:19" pos:end="307:73">(<argument pos:start="307:20" pos:end="307:34"><expr pos:start="307:20" pos:end="307:34"><name pos:start="307:20" pos:end="307:34"><name pos:start="307:20" pos:end="307:24">track</name><operator pos:start="307:25" pos:end="307:26">-&gt;</operator><name pos:start="307:27" pos:end="307:34">vos_data</name></name></expr></argument>, <argument pos:start="307:37" pos:end="307:56"><expr pos:start="307:37" pos:end="307:56"><name pos:start="307:37" pos:end="307:56"><name pos:start="307:37" pos:end="307:38">st</name><operator pos:start="307:39" pos:end="307:40">-&gt;</operator><name pos:start="307:41" pos:end="307:45">codec</name><operator pos:start="307:46" pos:end="307:47">-&gt;</operator><name pos:start="307:48" pos:end="307:56">extradata</name></name></expr></argument>, <argument pos:start="307:59" pos:end="307:72"><expr pos:start="307:59" pos:end="307:72"><name pos:start="307:59" pos:end="307:72"><name pos:start="307:59" pos:end="307:63">track</name><operator pos:start="307:64" pos:end="307:65">-&gt;</operator><name pos:start="307:66" pos:end="307:72">vos_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="315:5" pos:end="315:21"><expr pos:start="315:5" pos:end="315:20"><call pos:start="315:5" pos:end="315:20"><name pos:start="315:5" pos:end="315:17">enable_tracks</name><argument_list pos:start="315:18" pos:end="315:20">(<argument pos:start="315:19" pos:end="315:19"><expr pos:start="315:19" pos:end="315:19"><name pos:start="315:19" pos:end="315:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="319:5" pos:end="333:5"><if pos:start="319:5" pos:end="333:5">if <condition pos:start="319:8" pos:end="319:30">(<expr pos:start="319:9" pos:end="319:29"><name pos:start="319:9" pos:end="319:17"><name pos:start="319:9" pos:end="319:11">mov</name><operator pos:start="319:12" pos:end="319:13">-&gt;</operator><name pos:start="319:14" pos:end="319:17">mode</name></name> <operator pos:start="319:19" pos:end="319:20">==</operator> <name pos:start="319:22" pos:end="319:29">MODE_ISM</name></expr>)</condition> <block pos:start="319:32" pos:end="333:5">{<block_content pos:start="323:9" pos:end="331:73">

        <comment type="block" pos:start="321:9" pos:end="321:71">/* If no fragmentation options have been set, set a default. */</comment>

        <if_stmt pos:start="323:9" pos:end="329:49"><if pos:start="323:9" pos:end="329:49">if <condition pos:start="323:12" pos:end="327:67">(<expr pos:start="323:13" pos:end="327:66"><operator pos:start="323:13" pos:end="323:13">!</operator><operator pos:start="323:14" pos:end="323:14">(</operator><name pos:start="323:15" pos:end="323:24"><name pos:start="323:15" pos:end="323:17">mov</name><operator pos:start="323:18" pos:end="323:19">-&gt;</operator><name pos:start="323:20" pos:end="323:24">flags</name></name> <operator pos:start="323:26" pos:end="323:26">&amp;</operator> <operator pos:start="323:28" pos:end="323:28">(</operator><name pos:start="323:29" pos:end="323:53">FF_MOV_FLAG_FRAG_KEYFRAME</name> <operator pos:start="323:55" pos:end="323:55">|</operator>

                            <name pos:start="325:29" pos:end="325:51">FF_MOV_FLAG_FRAG_CUSTOM</name><operator pos:start="325:52" pos:end="325:52">)</operator><operator pos:start="325:53" pos:end="325:53">)</operator> <operator pos:start="325:55" pos:end="325:56">&amp;&amp;</operator>

            <operator pos:start="327:13" pos:end="327:13">!</operator><name pos:start="327:14" pos:end="327:39"><name pos:start="327:14" pos:end="327:16">mov</name><operator pos:start="327:17" pos:end="327:18">-&gt;</operator><name pos:start="327:19" pos:end="327:39">max_fragment_duration</name></name> <operator pos:start="327:41" pos:end="327:42">&amp;&amp;</operator> <operator pos:start="327:44" pos:end="327:44">!</operator><name pos:start="327:45" pos:end="327:66"><name pos:start="327:45" pos:end="327:47">mov</name><operator pos:start="327:48" pos:end="327:49">-&gt;</operator><name pos:start="327:50" pos:end="327:66">max_fragment_size</name></name></expr>)</condition><block type="pseudo" pos:start="329:13" pos:end="329:49"><block_content pos:start="329:13" pos:end="329:49">

            <expr_stmt pos:start="329:13" pos:end="329:49"><expr pos:start="329:13" pos:end="329:48"><name pos:start="329:13" pos:end="329:38"><name pos:start="329:13" pos:end="329:15">mov</name><operator pos:start="329:16" pos:end="329:17">-&gt;</operator><name pos:start="329:18" pos:end="329:38">max_fragment_duration</name></name> <operator pos:start="329:40" pos:end="329:40">=</operator> <literal type="number" pos:start="329:42" pos:end="329:48">5000000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="331:9" pos:end="331:73"><expr pos:start="331:9" pos:end="331:72"><name pos:start="331:9" pos:end="331:18"><name pos:start="331:9" pos:end="331:11">mov</name><operator pos:start="331:12" pos:end="331:13">-&gt;</operator><name pos:start="331:14" pos:end="331:18">flags</name></name> <operator pos:start="331:20" pos:end="331:21">|=</operator> <name pos:start="331:23" pos:end="331:44">FF_MOV_FLAG_EMPTY_MOOV</name> <operator pos:start="331:46" pos:end="331:46">|</operator> <name pos:start="331:48" pos:end="331:72">FF_MOV_FLAG_SEPARATE_MOOF</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="337:5" pos:end="345:5"><if pos:start="337:5" pos:end="345:5">if <condition pos:start="337:8" pos:end="337:45">(<expr pos:start="337:9" pos:end="337:44"><operator pos:start="337:9" pos:end="337:9">!</operator><operator pos:start="337:10" pos:end="337:10">(</operator><name pos:start="337:11" pos:end="337:20"><name pos:start="337:11" pos:end="337:13">mov</name><operator pos:start="337:14" pos:end="337:15">-&gt;</operator><name pos:start="337:16" pos:end="337:20">flags</name></name> <operator pos:start="337:22" pos:end="337:22">&amp;</operator> <name pos:start="337:24" pos:end="337:43">FF_MOV_FLAG_FRAGMENT</name><operator pos:start="337:44" pos:end="337:44">)</operator></expr>)</condition> <block pos:start="337:47" pos:end="345:5">{<block_content pos:start="339:9" pos:end="343:36">

        <if_stmt pos:start="339:9" pos:end="341:51"><if pos:start="339:9" pos:end="341:51">if <condition pos:start="339:12" pos:end="339:47">(<expr pos:start="339:13" pos:end="339:46"><name pos:start="339:13" pos:end="339:22"><name pos:start="339:13" pos:end="339:15">mov</name><operator pos:start="339:16" pos:end="339:17">-&gt;</operator><name pos:start="339:18" pos:end="339:22">flags</name></name> <operator pos:start="339:24" pos:end="339:24">&amp;</operator> <name pos:start="339:26" pos:end="339:46">FF_MOV_FLAG_FASTSTART</name></expr>)</condition><block type="pseudo" pos:start="341:13" pos:end="341:51"><block_content pos:start="341:13" pos:end="341:51">

            <expr_stmt pos:start="341:13" pos:end="341:51"><expr pos:start="341:13" pos:end="341:50"><name pos:start="341:13" pos:end="341:34"><name pos:start="341:13" pos:end="341:15">mov</name><operator pos:start="341:16" pos:end="341:17">-&gt;</operator><name pos:start="341:18" pos:end="341:34">reserved_moov_pos</name></name> <operator pos:start="341:36" pos:end="341:36">=</operator> <call pos:start="341:38" pos:end="341:50"><name pos:start="341:38" pos:end="341:46">avio_tell</name><argument_list pos:start="341:47" pos:end="341:50">(<argument pos:start="341:48" pos:end="341:49"><expr pos:start="341:48" pos:end="341:49"><name pos:start="341:48" pos:end="341:49">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="343:9" pos:end="343:36"><expr pos:start="343:9" pos:end="343:35"><call pos:start="343:9" pos:end="343:35"><name pos:start="343:9" pos:end="343:26">mov_write_mdat_tag</name><argument_list pos:start="343:27" pos:end="343:35">(<argument pos:start="343:28" pos:end="343:29"><expr pos:start="343:28" pos:end="343:29"><name pos:start="343:28" pos:end="343:29">pb</name></expr></argument>, <argument pos:start="343:32" pos:end="343:34"><expr pos:start="343:32" pos:end="343:34"><name pos:start="343:32" pos:end="343:34">mov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="349:5" pos:end="351:54"><if pos:start="349:5" pos:end="351:54">if <condition pos:start="349:8" pos:end="349:63">(<expr pos:start="349:9" pos:end="349:62"><name pos:start="349:9" pos:end="349:9">t</name> <operator pos:start="349:11" pos:end="349:11">=</operator> <call pos:start="349:13" pos:end="349:62"><name pos:start="349:13" pos:end="349:23">av_dict_get</name><argument_list pos:start="349:24" pos:end="349:62">(<argument pos:start="349:25" pos:end="349:35"><expr pos:start="349:25" pos:end="349:35"><name pos:start="349:25" pos:end="349:35"><name pos:start="349:25" pos:end="349:25">s</name><operator pos:start="349:26" pos:end="349:27">-&gt;</operator><name pos:start="349:28" pos:end="349:35">metadata</name></name></expr></argument>, <argument pos:start="349:38" pos:end="349:52"><expr pos:start="349:38" pos:end="349:52"><literal type="string" pos:start="349:38" pos:end="349:52">"creation_time"</literal></expr></argument>, <argument pos:start="349:55" pos:end="349:58"><expr pos:start="349:55" pos:end="349:58"><name pos:start="349:55" pos:end="349:58">NULL</name></expr></argument>, <argument pos:start="349:61" pos:end="349:61"><expr pos:start="349:61" pos:end="349:61"><literal type="number" pos:start="349:61" pos:end="349:61">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="351:9" pos:end="351:54"><block_content pos:start="351:9" pos:end="351:54">

        <expr_stmt pos:start="351:9" pos:end="351:54"><expr pos:start="351:9" pos:end="351:53"><name pos:start="351:9" pos:end="351:17"><name pos:start="351:9" pos:end="351:11">mov</name><operator pos:start="351:12" pos:end="351:13">-&gt;</operator><name pos:start="351:14" pos:end="351:17">time</name></name> <operator pos:start="351:19" pos:end="351:19">=</operator> <call pos:start="351:21" pos:end="351:53"><name pos:start="351:21" pos:end="351:43">ff_iso8601_to_unix_time</name><argument_list pos:start="351:44" pos:end="351:53">(<argument pos:start="351:45" pos:end="351:52"><expr pos:start="351:45" pos:end="351:52"><name pos:start="351:45" pos:end="351:52"><name pos:start="351:45" pos:end="351:45">t</name><operator pos:start="351:46" pos:end="351:47">-&gt;</operator><name pos:start="351:48" pos:end="351:52">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="353:5" pos:end="355:32"><if pos:start="353:5" pos:end="355:32">if <condition pos:start="353:8" pos:end="353:18">(<expr pos:start="353:9" pos:end="353:17"><name pos:start="353:9" pos:end="353:17"><name pos:start="353:9" pos:end="353:11">mov</name><operator pos:start="353:12" pos:end="353:13">-&gt;</operator><name pos:start="353:14" pos:end="353:17">time</name></name></expr>)</condition><block type="pseudo" pos:start="355:9" pos:end="355:32"><block_content pos:start="355:9" pos:end="355:32">

        <expr_stmt pos:start="355:9" pos:end="355:32"><expr pos:start="355:9" pos:end="355:31"><name pos:start="355:9" pos:end="355:17"><name pos:start="355:9" pos:end="355:11">mov</name><operator pos:start="355:12" pos:end="355:13">-&gt;</operator><name pos:start="355:14" pos:end="355:17">time</name></name> <operator pos:start="355:19" pos:end="355:20">+=</operator> <literal type="number" pos:start="355:22" pos:end="355:31">0x7C25B080</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="355:34" pos:end="355:60">// 1970 based -&gt; 1904 based</comment>



    <if_stmt pos:start="359:5" pos:end="363:23"><if pos:start="359:5" pos:end="363:23">if <condition pos:start="359:8" pos:end="359:27">(<expr pos:start="359:9" pos:end="359:26"><name pos:start="359:9" pos:end="359:26"><name pos:start="359:9" pos:end="359:11">mov</name><operator pos:start="359:12" pos:end="359:13">-&gt;</operator><name pos:start="359:14" pos:end="359:26">chapter_track</name></name></expr>)</condition><block type="pseudo" pos:start="361:9" pos:end="363:23"><block_content pos:start="361:9" pos:end="363:23">

        <if_stmt pos:start="361:9" pos:end="363:23"><if pos:start="361:9" pos:end="363:23">if <condition pos:start="361:12" pos:end="361:64">(<expr pos:start="361:13" pos:end="361:63"><call pos:start="361:13" pos:end="361:59"><name pos:start="361:13" pos:end="361:36">mov_create_chapter_track</name><argument_list pos:start="361:37" pos:end="361:59">(<argument pos:start="361:38" pos:end="361:38"><expr pos:start="361:38" pos:end="361:38"><name pos:start="361:38" pos:end="361:38">s</name></expr></argument>, <argument pos:start="361:41" pos:end="361:58"><expr pos:start="361:41" pos:end="361:58"><name pos:start="361:41" pos:end="361:58"><name pos:start="361:41" pos:end="361:43">mov</name><operator pos:start="361:44" pos:end="361:45">-&gt;</operator><name pos:start="361:46" pos:end="361:58">chapter_track</name></name></expr></argument>)</argument_list></call> <operator pos:start="361:61" pos:end="361:61">&lt;</operator> <literal type="number" pos:start="361:63" pos:end="361:63">0</literal></expr>)</condition><block type="pseudo" pos:start="363:13" pos:end="363:23"><block_content pos:start="363:13" pos:end="363:23">

            <goto pos:start="363:13" pos:end="363:23">goto <name pos:start="363:18" pos:end="363:22">error</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="367:5" pos:end="387:5"><if pos:start="367:5" pos:end="387:5">if <condition pos:start="367:8" pos:end="367:42">(<expr pos:start="367:9" pos:end="367:41"><name pos:start="367:9" pos:end="367:18"><name pos:start="367:9" pos:end="367:11">mov</name><operator pos:start="367:12" pos:end="367:13">-&gt;</operator><name pos:start="367:14" pos:end="367:18">flags</name></name> <operator pos:start="367:20" pos:end="367:20">&amp;</operator> <name pos:start="367:22" pos:end="367:41">FF_MOV_FLAG_RTP_HINT</name></expr>)</condition> <block pos:start="367:44" pos:end="387:5">{<block_content pos:start="371:9" pos:end="385:9">

        <comment type="block" pos:start="369:9" pos:end="369:72">/* Initialize the hint tracks for each audio and video stream */</comment>

        <for pos:start="371:9" pos:end="385:9">for <control pos:start="371:13" pos:end="371:43">(<init pos:start="371:14" pos:end="371:19"><expr pos:start="371:14" pos:end="371:18"><name pos:start="371:14" pos:end="371:14">i</name> <operator pos:start="371:16" pos:end="371:16">=</operator> <literal type="number" pos:start="371:18" pos:end="371:18">0</literal></expr>;</init> <condition pos:start="371:21" pos:end="371:38"><expr pos:start="371:21" pos:end="371:37"><name pos:start="371:21" pos:end="371:21">i</name> <operator pos:start="371:23" pos:end="371:23">&lt;</operator> <name pos:start="371:25" pos:end="371:37"><name pos:start="371:25" pos:end="371:25">s</name><operator pos:start="371:26" pos:end="371:27">-&gt;</operator><name pos:start="371:28" pos:end="371:37">nb_streams</name></name></expr>;</condition> <incr pos:start="371:40" pos:end="371:42"><expr pos:start="371:40" pos:end="371:42"><name pos:start="371:40" pos:end="371:40">i</name><operator pos:start="371:41" pos:end="371:42">++</operator></expr></incr>)</control> <block pos:start="371:45" pos:end="385:9">{<block_content pos:start="373:13" pos:end="383:13">

            <decl_stmt pos:start="373:13" pos:end="373:41"><decl pos:start="373:13" pos:end="373:40"><type pos:start="373:13" pos:end="373:22"><name pos:start="373:13" pos:end="373:20">AVStream</name> <modifier pos:start="373:22" pos:end="373:22">*</modifier></type><name pos:start="373:23" pos:end="373:24">st</name> <init pos:start="373:26" pos:end="373:40">= <expr pos:start="373:28" pos:end="373:40"><name pos:start="373:28" pos:end="373:40"><name pos:start="373:28" pos:end="373:28">s</name><operator pos:start="373:29" pos:end="373:30">-&gt;</operator><name pos:start="373:31" pos:end="373:37">streams</name><index pos:start="373:38" pos:end="373:40">[<expr pos:start="373:39" pos:end="373:39"><name pos:start="373:39" pos:end="373:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="375:13" pos:end="383:13"><if pos:start="375:13" pos:end="383:13">if <condition pos:start="375:16" pos:end="377:60">(<expr pos:start="375:17" pos:end="377:59"><name pos:start="375:17" pos:end="375:37"><name pos:start="375:17" pos:end="375:18">st</name><operator pos:start="375:19" pos:end="375:20">-&gt;</operator><name pos:start="375:21" pos:end="375:25">codec</name><operator pos:start="375:26" pos:end="375:27">-&gt;</operator><name pos:start="375:28" pos:end="375:37">codec_type</name></name> <operator pos:start="375:39" pos:end="375:40">==</operator> <name pos:start="375:42" pos:end="375:59">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="375:61" pos:end="375:62">||</operator>

                <name pos:start="377:17" pos:end="377:37"><name pos:start="377:17" pos:end="377:18">st</name><operator pos:start="377:19" pos:end="377:20">-&gt;</operator><name pos:start="377:21" pos:end="377:25">codec</name><operator pos:start="377:26" pos:end="377:27">-&gt;</operator><name pos:start="377:28" pos:end="377:37">codec_type</name></name> <operator pos:start="377:39" pos:end="377:40">==</operator> <name pos:start="377:42" pos:end="377:59">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="377:62" pos:end="383:13">{<block_content pos:start="379:17" pos:end="381:29">

                <expr_stmt pos:start="379:17" pos:end="379:54"><expr pos:start="379:17" pos:end="379:53"><call pos:start="379:17" pos:end="379:53"><name pos:start="379:17" pos:end="379:35">ff_mov_init_hinting</name><argument_list pos:start="379:36" pos:end="379:53">(<argument pos:start="379:37" pos:end="379:37"><expr pos:start="379:37" pos:end="379:37"><name pos:start="379:37" pos:end="379:37">s</name></expr></argument>, <argument pos:start="379:40" pos:end="379:49"><expr pos:start="379:40" pos:end="379:49"><name pos:start="379:40" pos:end="379:49">hint_track</name></expr></argument>, <argument pos:start="379:52" pos:end="379:52"><expr pos:start="379:52" pos:end="379:52"><name pos:start="379:52" pos:end="379:52">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="381:17" pos:end="381:29"><expr pos:start="381:17" pos:end="381:28"><name pos:start="381:17" pos:end="381:26">hint_track</name><operator pos:start="381:27" pos:end="381:28">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="391:5" pos:end="391:19"><expr pos:start="391:5" pos:end="391:18"><call pos:start="391:5" pos:end="391:18"><name pos:start="391:5" pos:end="391:14">avio_flush</name><argument_list pos:start="391:15" pos:end="391:18">(<argument pos:start="391:16" pos:end="391:17"><expr pos:start="391:16" pos:end="391:17"><name pos:start="391:16" pos:end="391:17">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="395:5" pos:end="397:41"><if pos:start="395:5" pos:end="397:41">if <condition pos:start="395:8" pos:end="395:38">(<expr pos:start="395:9" pos:end="395:37"><name pos:start="395:9" pos:end="395:18"><name pos:start="395:9" pos:end="395:11">mov</name><operator pos:start="395:12" pos:end="395:13">-&gt;</operator><name pos:start="395:14" pos:end="395:18">flags</name></name> <operator pos:start="395:20" pos:end="395:20">&amp;</operator> <name pos:start="395:22" pos:end="395:37">FF_MOV_FLAG_ISML</name></expr>)</condition><block type="pseudo" pos:start="397:9" pos:end="397:41"><block_content pos:start="397:9" pos:end="397:41">

        <expr_stmt pos:start="397:9" pos:end="397:41"><expr pos:start="397:9" pos:end="397:40"><call pos:start="397:9" pos:end="397:40"><name pos:start="397:9" pos:end="397:31">mov_write_isml_manifest</name><argument_list pos:start="397:32" pos:end="397:40">(<argument pos:start="397:33" pos:end="397:34"><expr pos:start="397:33" pos:end="397:34"><name pos:start="397:33" pos:end="397:34">pb</name></expr></argument>, <argument pos:start="397:37" pos:end="397:39"><expr pos:start="397:37" pos:end="397:39"><name pos:start="397:37" pos:end="397:39">mov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="401:5" pos:end="407:5"><if pos:start="401:5" pos:end="407:5">if <condition pos:start="401:8" pos:end="401:44">(<expr pos:start="401:9" pos:end="401:43"><name pos:start="401:9" pos:end="401:18"><name pos:start="401:9" pos:end="401:11">mov</name><operator pos:start="401:12" pos:end="401:13">-&gt;</operator><name pos:start="401:14" pos:end="401:18">flags</name></name> <operator pos:start="401:20" pos:end="401:20">&amp;</operator> <name pos:start="401:22" pos:end="401:43">FF_MOV_FLAG_EMPTY_MOOV</name></expr>)</condition> <block pos:start="401:46" pos:end="407:5">{<block_content pos:start="403:9" pos:end="405:25">

        <expr_stmt pos:start="403:9" pos:end="403:39"><expr pos:start="403:9" pos:end="403:38"><call pos:start="403:9" pos:end="403:38"><name pos:start="403:9" pos:end="403:26">mov_write_moov_tag</name><argument_list pos:start="403:27" pos:end="403:38">(<argument pos:start="403:28" pos:end="403:29"><expr pos:start="403:28" pos:end="403:29"><name pos:start="403:28" pos:end="403:29">pb</name></expr></argument>, <argument pos:start="403:32" pos:end="403:34"><expr pos:start="403:32" pos:end="403:34"><name pos:start="403:32" pos:end="403:34">mov</name></expr></argument>, <argument pos:start="403:37" pos:end="403:37"><expr pos:start="403:37" pos:end="403:37"><name pos:start="403:37" pos:end="403:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="405:9" pos:end="405:25"><expr pos:start="405:9" pos:end="405:24"><name pos:start="405:9" pos:end="405:22"><name pos:start="405:9" pos:end="405:11">mov</name><operator pos:start="405:12" pos:end="405:13">-&gt;</operator><name pos:start="405:14" pos:end="405:22">fragments</name></name><operator pos:start="405:23" pos:end="405:24">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="411:5" pos:end="411:13">return <expr pos:start="411:12" pos:end="411:12"><literal type="number" pos:start="411:12" pos:end="411:12">0</literal></expr>;</return>

 <label pos:start="413:2" pos:end="413:7"><name pos:start="413:2" pos:end="413:6">error</name>:</label>

    <expr_stmt pos:start="415:5" pos:end="415:16"><expr pos:start="415:5" pos:end="415:15"><call pos:start="415:5" pos:end="415:15"><name pos:start="415:5" pos:end="415:12">mov_free</name><argument_list pos:start="415:13" pos:end="415:15">(<argument pos:start="415:14" pos:end="415:14"><expr pos:start="415:14" pos:end="415:14"><name pos:start="415:14" pos:end="415:14">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="417:5" pos:end="417:14">return <expr pos:start="417:12" pos:end="417:13"><operator pos:start="417:12" pos:end="417:12">-</operator><literal type="number" pos:start="417:13" pos:end="417:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
