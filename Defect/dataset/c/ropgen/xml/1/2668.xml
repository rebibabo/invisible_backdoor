<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2668.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">vmxnet3_update_features</name><parameter_list pos:start="1:36" pos:end="1:52">(<parameter pos:start="1:37" pos:end="1:51"><decl pos:start="1:37" pos:end="1:51"><type pos:start="1:37" pos:end="1:50"><name pos:start="1:37" pos:end="1:48">VMXNET3State</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:27">guest_features</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:23">rxcso_supported</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="13:73"><expr pos:start="11:5" pos:end="13:72"><name pos:start="11:5" pos:end="11:18">guest_features</name> <operator pos:start="11:20" pos:end="11:20">=</operator> <call pos:start="11:22" pos:end="13:72"><name pos:start="11:22" pos:end="11:46">VMXNET3_READ_DRV_SHARED32</name><argument_list pos:start="11:47" pos:end="13:72">(<argument pos:start="11:48" pos:end="11:59"><expr pos:start="11:48" pos:end="11:59"><name pos:start="11:48" pos:end="11:59"><name pos:start="11:48" pos:end="11:48">s</name><operator pos:start="11:49" pos:end="11:50">-&gt;</operator><name pos:start="11:51" pos:end="11:59">drv_shmem</name></name></expr></argument>,

                                               <argument pos:start="13:48" pos:end="13:71"><expr pos:start="13:48" pos:end="13:71"><name pos:start="13:48" pos:end="13:71"><name pos:start="13:48" pos:end="13:54">devRead</name><operator pos:start="13:55" pos:end="13:55">.</operator><name pos:start="13:56" pos:end="13:59">misc</name><operator pos:start="13:60" pos:end="13:60">.</operator><name pos:start="13:61" pos:end="13:71">uptFeatures</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:72"><expr pos:start="17:5" pos:end="17:71"><name pos:start="17:5" pos:end="17:19">rxcso_supported</name> <operator pos:start="17:21" pos:end="17:21">=</operator> <call pos:start="17:23" pos:end="17:71"><name pos:start="17:23" pos:end="17:40">VMXNET_FLAG_IS_SET</name><argument_list pos:start="17:41" pos:end="17:71">(<argument pos:start="17:42" pos:end="17:55"><expr pos:start="17:42" pos:end="17:55"><name pos:start="17:42" pos:end="17:55">guest_features</name></expr></argument>, <argument pos:start="17:58" pos:end="17:70"><expr pos:start="17:58" pos:end="17:70"><name pos:start="17:58" pos:end="17:70">UPT1_F_RXCSUM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:77"><expr pos:start="19:5" pos:end="19:76"><name pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:24">rx_vlan_stripping</name></name> <operator pos:start="19:26" pos:end="19:26">=</operator> <call pos:start="19:28" pos:end="19:76"><name pos:start="19:28" pos:end="19:45">VMXNET_FLAG_IS_SET</name><argument_list pos:start="19:46" pos:end="19:76">(<argument pos:start="19:47" pos:end="19:60"><expr pos:start="19:47" pos:end="19:60"><name pos:start="19:47" pos:end="19:60">guest_features</name></expr></argument>, <argument pos:start="19:63" pos:end="19:75"><expr pos:start="19:63" pos:end="19:75"><name pos:start="19:63" pos:end="19:75">UPT1_F_RXVLAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:70"><expr pos:start="21:5" pos:end="21:69"><name pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:20">lro_supported</name></name> <operator pos:start="21:22" pos:end="21:22">=</operator> <call pos:start="21:24" pos:end="21:69"><name pos:start="21:24" pos:end="21:41">VMXNET_FLAG_IS_SET</name><argument_list pos:start="21:42" pos:end="21:69">(<argument pos:start="21:43" pos:end="21:56"><expr pos:start="21:43" pos:end="21:56"><name pos:start="21:43" pos:end="21:56">guest_features</name></expr></argument>, <argument pos:start="21:59" pos:end="21:68"><expr pos:start="21:59" pos:end="21:68"><name pos:start="21:59" pos:end="21:68">UPT1_F_LRO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="29:36"><expr pos:start="25:5" pos:end="29:35"><call pos:start="25:5" pos:end="29:35"><name pos:start="25:5" pos:end="25:13">VMW_CFPRN</name><argument_list pos:start="25:14" pos:end="29:35">(<argument pos:start="25:15" pos:end="25:74"><expr pos:start="25:15" pos:end="25:74"><literal type="string" pos:start="25:15" pos:end="25:74">"Features configuration: LRO: %d, RXCSUM: %d, VLANSTRIP: %d"</literal></expr></argument>,

              <argument pos:start="27:15" pos:end="27:30"><expr pos:start="27:15" pos:end="27:30"><name pos:start="27:15" pos:end="27:30"><name pos:start="27:15" pos:end="27:15">s</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:30">lro_supported</name></name></expr></argument>, <argument pos:start="27:33" pos:end="27:47"><expr pos:start="27:33" pos:end="27:47"><name pos:start="27:33" pos:end="27:47">rxcso_supported</name></expr></argument>,

              <argument pos:start="29:15" pos:end="29:34"><expr pos:start="29:15" pos:end="29:34"><name pos:start="29:15" pos:end="29:34"><name pos:start="29:15" pos:end="29:15">s</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:34">rx_vlan_stripping</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="45:5"><if pos:start="31:5" pos:end="45:5">if <condition pos:start="31:8" pos:end="31:25">(<expr pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:24">peer_has_vhdr</name></name></expr>)</condition> <block pos:start="31:27" pos:end="45:5">{<block_content pos:start="33:9" pos:end="43:28">

        <expr_stmt pos:start="33:9" pos:end="43:28"><expr pos:start="33:9" pos:end="43:27"><call pos:start="33:9" pos:end="43:27"><name pos:start="33:9" pos:end="33:24">qemu_set_offload</name><argument_list pos:start="33:25" pos:end="43:27">(<argument pos:start="33:26" pos:end="33:53"><expr pos:start="33:26" pos:end="33:53"><call pos:start="33:26" pos:end="33:47"><name pos:start="33:26" pos:end="33:39">qemu_get_queue</name><argument_list pos:start="33:40" pos:end="33:47">(<argument pos:start="33:41" pos:end="33:46"><expr pos:start="33:41" pos:end="33:46"><name pos:start="33:41" pos:end="33:46"><name pos:start="33:41" pos:end="33:41">s</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:46">nic</name></name></expr></argument>)</argument_list></call><operator pos:start="33:48" pos:end="33:49">-&gt;</operator><name pos:start="33:50" pos:end="33:53">peer</name></expr></argument>,

                         <argument pos:start="35:26" pos:end="35:40"><expr pos:start="35:26" pos:end="35:40"><name pos:start="35:26" pos:end="35:40">rxcso_supported</name></expr></argument>,

                         <argument pos:start="37:26" pos:end="37:41"><expr pos:start="37:26" pos:end="37:41"><name pos:start="37:26" pos:end="37:41"><name pos:start="37:26" pos:end="37:26">s</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:41">lro_supported</name></name></expr></argument>,

                         <argument pos:start="39:26" pos:end="39:41"><expr pos:start="39:26" pos:end="39:41"><name pos:start="39:26" pos:end="39:41"><name pos:start="39:26" pos:end="39:26">s</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:41">lro_supported</name></name></expr></argument>,

                         <argument pos:start="41:26" pos:end="41:26"><expr pos:start="41:26" pos:end="41:26"><literal type="number" pos:start="41:26" pos:end="41:26">0</literal></expr></argument>,

                         <argument pos:start="43:26" pos:end="43:26"><expr pos:start="43:26" pos:end="43:26"><literal type="number" pos:start="43:26" pos:end="43:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
