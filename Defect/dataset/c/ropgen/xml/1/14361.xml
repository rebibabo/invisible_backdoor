<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14361.c" pos:tabs="8"><function pos:start="1:1" pos:end="301:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_p_mbs</name><parameter_list pos:start="1:24" pos:end="1:38">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:34">VC9Context</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="301:1">{<block_content pos:start="5:5" pos:end="299:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">v</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">gb</name> <init pos:start="7:23" pos:end="7:32">= <expr pos:start="7:25" pos:end="7:32"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:32"><name pos:start="7:26" pos:end="7:26">v</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:30">.</operator><name pos:start="7:31" pos:end="7:32">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">current_mb</name> <init pos:start="9:20" pos:end="9:22">= <expr pos:start="9:22" pos:end="9:22"><literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr></init></decl>, <decl pos:start="9:25" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:25">i</name></decl>;</decl_stmt> <comment type="block" pos:start="9:28" pos:end="9:55">/* MB/Block Position info */</comment>

    <decl_stmt pos:start="11:5" pos:end="13:49"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:20"><name pos:start="11:13" pos:end="11:17">cbpcy</name><index pos:start="11:18" pos:end="11:20">[<expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">4</literal></expr>]</index></name></decl>, <decl pos:start="11:23" pos:end="11:39"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:23" pos:end="11:39"><name pos:start="11:23" pos:end="11:36">previous_cbpcy</name><index pos:start="11:37" pos:end="11:39">[<expr pos:start="11:38" pos:end="11:38"><literal type="number" pos:start="11:38" pos:end="11:38">4</literal></expr>]</index></name></decl>, <decl pos:start="11:42" pos:end="11:56"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:42" pos:end="11:56">predicted_cbpcy</name></decl>,

        <decl pos:start="13:9" pos:end="13:16"><type ref="prev" pos:start="11:5" pos:end="11:11"><modifier pos:start="13:9" pos:end="13:9">*</modifier></type><name pos:start="13:10" pos:end="13:16">p_cbpcy</name></decl> <comment type="block" pos:start="13:18" pos:end="13:48">/* Pointer to skip some math */</comment>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">hybrid_pred</name></decl>;</decl_stmt> <comment type="block" pos:start="15:22" pos:end="15:43">/* Prediction types */</comment>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:19">mv_mode_bit</name> <init pos:start="17:21" pos:end="17:23">= <expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr></init></decl>;</decl_stmt> 

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:14"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:14">mqdiff</name></decl>, <decl pos:start="19:17" pos:end="19:22"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:17" pos:end="19:22">mquant</name></decl>;</decl_stmt> <comment type="block" pos:start="19:25" pos:end="19:45">/* MB quantization */</comment>

    <decl_stmt pos:start="21:5" pos:end="21:13"><decl pos:start="21:5" pos:end="21:12"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:12">ttmb</name></decl>;</decl_stmt> <comment type="block" pos:start="21:15" pos:end="21:37">/* MB Transform type */</comment>



    <decl_stmt pos:start="25:5" pos:end="27:49"><decl pos:start="25:5" pos:end="25:57"><type pos:start="25:5" pos:end="25:20"><specifier pos:start="25:5" pos:end="25:10">static</specifier> <specifier pos:start="25:12" pos:end="25:16">const</specifier> <name pos:start="25:18" pos:end="25:20">int</name></type> <name pos:start="25:22" pos:end="25:34"><name pos:start="25:22" pos:end="25:31">size_table</name><index pos:start="25:32" pos:end="25:34">[<expr pos:start="25:33" pos:end="25:33"><literal type="number" pos:start="25:33" pos:end="25:33">6</literal></expr>]</index></name> <init pos:start="25:36" pos:end="25:57">= <expr pos:start="25:38" pos:end="25:57"><block pos:start="25:38" pos:end="25:57">{ <expr pos:start="25:40" pos:end="25:40"><literal type="number" pos:start="25:40" pos:end="25:40">0</literal></expr>, <expr pos:start="25:43" pos:end="25:43"><literal type="number" pos:start="25:43" pos:end="25:43">2</literal></expr>, <expr pos:start="25:46" pos:end="25:46"><literal type="number" pos:start="25:46" pos:end="25:46">3</literal></expr>, <expr pos:start="25:49" pos:end="25:49"><literal type="number" pos:start="25:49" pos:end="25:49">4</literal></expr>, <expr pos:start="25:52" pos:end="25:52"><literal type="number" pos:start="25:52" pos:end="25:52">5</literal></expr>, <expr pos:start="25:55" pos:end="25:55"><literal type="number" pos:start="25:55" pos:end="25:55">8</literal></expr> }</block></expr></init></decl>,

        <decl pos:start="27:9" pos:end="27:48"><type ref="prev" pos:start="25:5" pos:end="25:20"/><name pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:20">offset_table</name><index pos:start="27:21" pos:end="27:23">[<expr pos:start="27:22" pos:end="27:22"><literal type="number" pos:start="27:22" pos:end="27:22">6</literal></expr>]</index></name> <init pos:start="27:25" pos:end="27:48">= <expr pos:start="27:27" pos:end="27:48"><block pos:start="27:27" pos:end="27:48">{ <expr pos:start="27:29" pos:end="27:29"><literal type="number" pos:start="27:29" pos:end="27:29">0</literal></expr>, <expr pos:start="27:32" pos:end="27:32"><literal type="number" pos:start="27:32" pos:end="27:32">1</literal></expr>, <expr pos:start="27:35" pos:end="27:35"><literal type="number" pos:start="27:35" pos:end="27:35">3</literal></expr>, <expr pos:start="27:38" pos:end="27:38"><literal type="number" pos:start="27:38" pos:end="27:38">7</literal></expr>, <expr pos:start="27:41" pos:end="27:42"><literal type="number" pos:start="27:41" pos:end="27:42">15</literal></expr>, <expr pos:start="27:45" pos:end="27:46"><literal type="number" pos:start="27:45" pos:end="27:46">31</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:30"><decl pos:start="29:9" pos:end="29:29"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:25">mb_has_coeffs</name> <init pos:start="29:27" pos:end="29:29">= <expr pos:start="29:29" pos:end="29:29"><literal type="number" pos:start="29:29" pos:end="29:29">1</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="29:32" pos:end="29:46">/* last_flag */</comment>

    <decl_stmt pos:start="31:5" pos:end="31:21"><decl pos:start="31:5" pos:end="31:13"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:13">dmv_x</name></decl>, <decl pos:start="31:16" pos:end="31:20"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:16" pos:end="31:20">dmv_y</name></decl>;</decl_stmt> <comment type="block" pos:start="31:23" pos:end="31:54">/* Differential MV components */</comment>

    <decl_stmt pos:start="33:5" pos:end="33:17"><decl pos:start="33:5" pos:end="33:11"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:11">k_x</name></decl>, <decl pos:start="33:14" pos:end="33:16"><type ref="prev" pos:start="33:5" pos:end="33:7"/><name pos:start="33:14" pos:end="33:16">k_y</name></decl>;</decl_stmt> <comment type="block" pos:start="33:19" pos:end="33:47">/* Long MV fixed bitlength */</comment>

    <decl_stmt pos:start="35:5" pos:end="35:18"><decl pos:start="35:5" pos:end="35:17"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:17">hpel_flag</name></decl>;</decl_stmt> <comment type="block" pos:start="35:20" pos:end="35:43">/* Some MB properties */</comment>

    <decl_stmt pos:start="37:5" pos:end="37:22"><decl pos:start="37:5" pos:end="37:13"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:13">index</name></decl>, <decl pos:start="37:16" pos:end="37:21"><type ref="prev" pos:start="37:5" pos:end="37:7"/><name pos:start="37:16" pos:end="37:21">index1</name></decl>;</decl_stmt> <comment type="block" pos:start="37:24" pos:end="37:40">/* LUT indices */</comment>

    <decl_stmt pos:start="39:5" pos:end="39:18"><decl pos:start="39:5" pos:end="39:11"><type pos:start="39:5" pos:end="39:7"><name pos:start="39:5" pos:end="39:7">int</name></type> <name pos:start="39:9" pos:end="39:11">val</name></decl>, <decl pos:start="39:14" pos:end="39:17"><type ref="prev" pos:start="39:5" pos:end="39:7"/><name pos:start="39:14" pos:end="39:17">sign</name></decl>;</decl_stmt> <comment type="block" pos:start="39:20" pos:end="39:43">/* MVDATA temp values */</comment>



    <comment type="block" pos:start="43:5" pos:end="43:43">/* Select ttmb table depending on pq */</comment>

    <if_stmt pos:start="45:5" pos:end="49:40"><if pos:start="45:5" pos:end="45:50">if <condition pos:start="45:8" pos:end="45:18">(<expr pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:13"><name pos:start="45:9" pos:end="45:9">v</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:13">pq</name></name> <operator pos:start="45:15" pos:end="45:15">&lt;</operator> <literal type="number" pos:start="45:17" pos:end="45:17">5</literal></expr>)</condition><block type="pseudo" pos:start="45:20" pos:end="45:50"><block_content pos:start="45:20" pos:end="45:50"> <expr_stmt pos:start="45:20" pos:end="45:50"><expr pos:start="45:20" pos:end="45:49"><name pos:start="45:20" pos:end="45:30"><name pos:start="45:20" pos:end="45:20">v</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:30">ttmb_vlc</name></name> <operator pos:start="45:32" pos:end="45:32">=</operator> <operator pos:start="45:34" pos:end="45:34">&amp;</operator><name pos:start="45:35" pos:end="45:49"><name pos:start="45:35" pos:end="45:46">vc9_ttmb_vlc</name><index pos:start="45:47" pos:end="45:49">[<expr pos:start="45:48" pos:end="45:48"><literal type="number" pos:start="45:48" pos:end="45:48">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="47:5" pos:end="47:56">else if <condition pos:start="47:13" pos:end="47:24">(<expr pos:start="47:14" pos:end="47:23"><name pos:start="47:14" pos:end="47:18"><name pos:start="47:14" pos:end="47:14">v</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:18">pq</name></name> <operator pos:start="47:20" pos:end="47:20">&lt;</operator> <literal type="number" pos:start="47:22" pos:end="47:23">13</literal></expr>)</condition><block type="pseudo" pos:start="47:26" pos:end="47:56"><block_content pos:start="47:26" pos:end="47:56"> <expr_stmt pos:start="47:26" pos:end="47:56"><expr pos:start="47:26" pos:end="47:55"><name pos:start="47:26" pos:end="47:36"><name pos:start="47:26" pos:end="47:26">v</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:36">ttmb_vlc</name></name> <operator pos:start="47:38" pos:end="47:38">=</operator> <operator pos:start="47:40" pos:end="47:40">&amp;</operator><name pos:start="47:41" pos:end="47:55"><name pos:start="47:41" pos:end="47:52">vc9_ttmb_vlc</name><index pos:start="47:53" pos:end="47:55">[<expr pos:start="47:54" pos:end="47:54"><literal type="number" pos:start="47:54" pos:end="47:54">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="49:5" pos:end="49:40">else<block type="pseudo" pos:start="49:10" pos:end="49:40"><block_content pos:start="49:10" pos:end="49:40"> <expr_stmt pos:start="49:10" pos:end="49:40"><expr pos:start="49:10" pos:end="49:39"><name pos:start="49:10" pos:end="49:20"><name pos:start="49:10" pos:end="49:10">v</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:20">ttmb_vlc</name></name> <operator pos:start="49:22" pos:end="49:22">=</operator> <operator pos:start="49:24" pos:end="49:24">&amp;</operator><name pos:start="49:25" pos:end="49:39"><name pos:start="49:25" pos:end="49:36">vc9_ttmb_vlc</name><index pos:start="49:37" pos:end="49:39">[<expr pos:start="49:38" pos:end="49:38"><literal type="number" pos:start="49:38" pos:end="49:38">2</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:37">/* Select proper long MV range */</comment>

    <switch pos:start="55:5" pos:end="67:5">switch <condition pos:start="55:12" pos:end="55:23">(<expr pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:13">v</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:22">mvrange</name></name></expr>)</condition>

    <block pos:start="57:5" pos:end="67:5">{<block_content pos:start="59:5" pos:end="65:53">

    <case pos:start="59:5" pos:end="59:11">case <expr pos:start="59:10" pos:end="59:10"><literal type="number" pos:start="59:10" pos:end="59:10">1</literal></expr>:</case> <expr_stmt pos:start="59:13" pos:end="59:21"><expr pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:15">k_x</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <literal type="number" pos:start="59:19" pos:end="59:20">10</literal></expr>;</expr_stmt> <expr_stmt pos:start="59:23" pos:end="59:30"><expr pos:start="59:23" pos:end="59:29"><name pos:start="59:23" pos:end="59:25">k_y</name> <operator pos:start="59:27" pos:end="59:27">=</operator> <literal type="number" pos:start="59:29" pos:end="59:29">9</literal></expr>;</expr_stmt> <break pos:start="59:32" pos:end="59:37">break;</break>

    <case pos:start="61:5" pos:end="61:11">case <expr pos:start="61:10" pos:end="61:10"><literal type="number" pos:start="61:10" pos:end="61:10">2</literal></expr>:</case> <expr_stmt pos:start="61:13" pos:end="61:21"><expr pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:15">k_x</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <literal type="number" pos:start="61:19" pos:end="61:20">12</literal></expr>;</expr_stmt> <expr_stmt pos:start="61:23" pos:end="61:31"><expr pos:start="61:23" pos:end="61:30"><name pos:start="61:23" pos:end="61:25">k_y</name> <operator pos:start="61:27" pos:end="61:27">=</operator> <literal type="number" pos:start="61:29" pos:end="61:30">10</literal></expr>;</expr_stmt> <break pos:start="61:33" pos:end="61:38">break;</break>

    <case pos:start="63:5" pos:end="63:11">case <expr pos:start="63:10" pos:end="63:10"><literal type="number" pos:start="63:10" pos:end="63:10">3</literal></expr>:</case> <expr_stmt pos:start="63:13" pos:end="63:21"><expr pos:start="63:13" pos:end="63:20"><name pos:start="63:13" pos:end="63:15">k_x</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <literal type="number" pos:start="63:19" pos:end="63:20">13</literal></expr>;</expr_stmt> <expr_stmt pos:start="63:23" pos:end="63:31"><expr pos:start="63:23" pos:end="63:30"><name pos:start="63:23" pos:end="63:25">k_y</name> <operator pos:start="63:27" pos:end="63:27">=</operator> <literal type="number" pos:start="63:29" pos:end="63:30">11</literal></expr>;</expr_stmt> <break pos:start="63:33" pos:end="63:38">break;</break>

    <default pos:start="65:5" pos:end="65:12">default:</default> <comment type="block" pos:start="65:14" pos:end="65:28">/*case 0 too */</comment> <expr_stmt pos:start="65:30" pos:end="65:37"><expr pos:start="65:30" pos:end="65:36"><name pos:start="65:30" pos:end="65:32">k_x</name> <operator pos:start="65:34" pos:end="65:34">=</operator> <literal type="number" pos:start="65:36" pos:end="65:36">9</literal></expr>;</expr_stmt> <expr_stmt pos:start="65:39" pos:end="65:46"><expr pos:start="65:39" pos:end="65:45"><name pos:start="65:39" pos:end="65:41">k_y</name> <operator pos:start="65:43" pos:end="65:43">=</operator> <literal type="number" pos:start="65:45" pos:end="65:45">8</literal></expr>;</expr_stmt> <break pos:start="65:48" pos:end="65:53">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="71:5" pos:end="71:31"><expr pos:start="71:5" pos:end="71:30"><name pos:start="71:5" pos:end="71:13">hpel_flag</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <name pos:start="71:17" pos:end="71:26"><name pos:start="71:17" pos:end="71:17">v</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:26">mv_mode</name></name> <operator pos:start="71:28" pos:end="71:28">&amp;</operator> <literal type="number" pos:start="71:30" pos:end="71:30">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="71:33" pos:end="71:50">//MV_PMODE is HPEL</comment>

    <expr_stmt pos:start="73:5" pos:end="73:21"><expr pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:7">k_x</name> <operator pos:start="73:9" pos:end="73:10">-=</operator> <name pos:start="73:12" pos:end="73:20">hpel_flag</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:21"><expr pos:start="75:5" pos:end="75:20"><name pos:start="75:5" pos:end="75:7">k_y</name> <operator pos:start="75:9" pos:end="75:10">-=</operator> <name pos:start="75:12" pos:end="75:20">hpel_flag</name></expr>;</expr_stmt>



    <comment type="block" pos:start="79:5" pos:end="79:32">/* Reset CBPCY predictors */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:55"><expr pos:start="81:5" pos:end="81:54"><call pos:start="81:5" pos:end="81:54"><name pos:start="81:5" pos:end="81:10">memset</name><argument_list pos:start="81:11" pos:end="81:54">(<argument pos:start="81:12" pos:end="81:33"><expr pos:start="81:12" pos:end="81:33"><name pos:start="81:12" pos:end="81:33"><name pos:start="81:12" pos:end="81:12">v</name><operator pos:start="81:13" pos:end="81:14">-&gt;</operator><name pos:start="81:15" pos:end="81:33">previous_line_cbpcy</name></name></expr></argument>, <argument pos:start="81:36" pos:end="81:36"><expr pos:start="81:36" pos:end="81:36"><literal type="number" pos:start="81:36" pos:end="81:36">0</literal></expr></argument>, <argument pos:start="81:39" pos:end="81:53"><expr pos:start="81:39" pos:end="81:53"><name pos:start="81:39" pos:end="81:50"><name pos:start="81:39" pos:end="81:39">s</name><operator pos:start="81:40" pos:end="81:41">-&gt;</operator><name pos:start="81:42" pos:end="81:50">mb_stride</name></name><operator pos:start="81:51" pos:end="81:52">&lt;&lt;</operator><literal type="number" pos:start="81:53" pos:end="81:53">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="85:5" pos:end="297:5">for <control pos:start="85:9" pos:end="85:52">(<init pos:start="85:10" pos:end="85:19"><expr pos:start="85:10" pos:end="85:18"><name pos:start="85:10" pos:end="85:16"><name pos:start="85:10" pos:end="85:10">s</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:16">mb_y</name></name><operator pos:start="85:17" pos:end="85:17">=</operator><literal type="number" pos:start="85:18" pos:end="85:18">0</literal></expr>;</init> <condition pos:start="85:21" pos:end="85:41"><expr pos:start="85:21" pos:end="85:40"><name pos:start="85:21" pos:end="85:27"><name pos:start="85:21" pos:end="85:21">s</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:27">mb_y</name></name><operator pos:start="85:28" pos:end="85:28">&lt;</operator><name pos:start="85:29" pos:end="85:40"><name pos:start="85:29" pos:end="85:29">s</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:40">mb_height</name></name></expr>;</condition> <incr pos:start="85:43" pos:end="85:51"><expr pos:start="85:43" pos:end="85:51"><name pos:start="85:43" pos:end="85:49"><name pos:start="85:43" pos:end="85:43">s</name><operator pos:start="85:44" pos:end="85:45">-&gt;</operator><name pos:start="85:46" pos:end="85:49">mb_y</name></name><operator pos:start="85:50" pos:end="85:51">++</operator></expr></incr>)</control>

    <block pos:start="87:5" pos:end="297:5">{<block_content pos:start="91:9" pos:end="295:9">

        <comment type="block" pos:start="89:9" pos:end="89:33">/* Init CBPCY for line */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:50"><expr pos:start="91:9" pos:end="91:49"><operator pos:start="91:9" pos:end="91:9">*</operator><operator pos:start="91:10" pos:end="91:10">(</operator><operator pos:start="91:11" pos:end="91:11">(</operator><name pos:start="91:12" pos:end="91:19">uint32_t</name><operator pos:start="91:20" pos:end="91:20">*</operator><operator pos:start="91:21" pos:end="91:21">)</operator><name pos:start="91:22" pos:end="91:35">previous_cbpcy</name><operator pos:start="91:36" pos:end="91:36">)</operator> <operator pos:start="91:38" pos:end="91:38">=</operator> <literal type="number" pos:start="91:40" pos:end="91:49">0x00000000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:43"><expr pos:start="93:9" pos:end="93:42"><name pos:start="93:9" pos:end="93:15">p_cbpcy</name> <operator pos:start="93:17" pos:end="93:17">=</operator> <name pos:start="93:19" pos:end="93:40"><name pos:start="93:19" pos:end="93:19">v</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:40">previous_line_cbpcy</name></name><operator pos:start="93:41" pos:end="93:41">+</operator><literal type="number" pos:start="93:42" pos:end="93:42">4</literal></expr>;</expr_stmt>



        <for pos:start="97:9" pos:end="295:9">for <control pos:start="97:13" pos:end="97:69">(<init pos:start="97:14" pos:end="97:23"><expr pos:start="97:14" pos:end="97:22"><name pos:start="97:14" pos:end="97:20"><name pos:start="97:14" pos:end="97:14">s</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:20">mb_x</name></name><operator pos:start="97:21" pos:end="97:21">=</operator><literal type="number" pos:start="97:22" pos:end="97:22">0</literal></expr>;</init> <condition pos:start="97:25" pos:end="97:44"><expr pos:start="97:25" pos:end="97:43"><name pos:start="97:25" pos:end="97:31"><name pos:start="97:25" pos:end="97:25">s</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:31">mb_x</name></name><operator pos:start="97:32" pos:end="97:32">&lt;</operator><name pos:start="97:33" pos:end="97:43"><name pos:start="97:33" pos:end="97:33">s</name><operator pos:start="97:34" pos:end="97:35">-&gt;</operator><name pos:start="97:36" pos:end="97:43">mb_width</name></name></expr>;</condition> <incr pos:start="97:46" pos:end="97:68"><expr pos:start="97:46" pos:end="97:54"><name pos:start="97:46" pos:end="97:52"><name pos:start="97:46" pos:end="97:46">s</name><operator pos:start="97:47" pos:end="97:48">-&gt;</operator><name pos:start="97:49" pos:end="97:52">mb_x</name></name><operator pos:start="97:53" pos:end="97:54">++</operator></expr><operator pos:start="97:55" pos:end="97:55">,</operator> <expr pos:start="97:57" pos:end="97:68"><name pos:start="97:57" pos:end="97:63">p_cbpcy</name> <operator pos:start="97:65" pos:end="97:66">+=</operator> <literal type="number" pos:start="97:68" pos:end="97:68">4</literal></expr></incr>)</control>

        <block pos:start="99:9" pos:end="295:9">{<block_content pos:start="101:13" pos:end="293:25">

            <if_stmt pos:start="101:13" pos:end="103:71"><if pos:start="101:13" pos:end="103:71">if <condition pos:start="101:16" pos:end="101:43">(<expr pos:start="101:17" pos:end="101:42"><name pos:start="101:17" pos:end="101:42"><name pos:start="101:17" pos:end="101:17">v</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:35">mv_type_mb_plane</name><operator pos:start="101:36" pos:end="101:36">.</operator><name pos:start="101:37" pos:end="101:42">is_raw</name></name></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:71"><block_content pos:start="103:17" pos:end="103:71">

                <expr_stmt pos:start="103:17" pos:end="103:71"><expr pos:start="103:17" pos:end="103:70"><name pos:start="103:17" pos:end="103:52"><name pos:start="103:17" pos:end="103:17">v</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:35">mv_type_mb_plane</name><operator pos:start="103:36" pos:end="103:36">.</operator><name pos:start="103:37" pos:end="103:40">data</name><index pos:start="103:41" pos:end="103:52">[<expr pos:start="103:42" pos:end="103:51"><name pos:start="103:42" pos:end="103:51">current_mb</name></expr>]</index></name> <operator pos:start="103:54" pos:end="103:54">=</operator> <call pos:start="103:56" pos:end="103:70"><name pos:start="103:56" pos:end="103:63">get_bits</name><argument_list pos:start="103:64" pos:end="103:70">(<argument pos:start="103:65" pos:end="103:66"><expr pos:start="103:65" pos:end="103:66"><name pos:start="103:65" pos:end="103:66">gb</name></expr></argument>, <argument pos:start="103:69" pos:end="103:69"><expr pos:start="103:69" pos:end="103:69"><literal type="number" pos:start="103:69" pos:end="103:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="105:13" pos:end="107:68"><if pos:start="105:13" pos:end="107:68">if <condition pos:start="105:16" pos:end="105:40">(<expr pos:start="105:17" pos:end="105:39"><name pos:start="105:17" pos:end="105:39"><name pos:start="105:17" pos:end="105:17">v</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:32">skip_mb_plane</name><operator pos:start="105:33" pos:end="105:33">.</operator><name pos:start="105:34" pos:end="105:39">is_raw</name></name></expr>)</condition><block type="pseudo" pos:start="107:17" pos:end="107:68"><block_content pos:start="107:17" pos:end="107:68">

                <expr_stmt pos:start="107:17" pos:end="107:68"><expr pos:start="107:17" pos:end="107:67"><name pos:start="107:17" pos:end="107:49"><name pos:start="107:17" pos:end="107:17">v</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:32">skip_mb_plane</name><operator pos:start="107:33" pos:end="107:33">.</operator><name pos:start="107:34" pos:end="107:37">data</name><index pos:start="107:38" pos:end="107:49">[<expr pos:start="107:39" pos:end="107:48"><name pos:start="107:39" pos:end="107:48">current_mb</name></expr>]</index></name> <operator pos:start="107:51" pos:end="107:51">=</operator> <call pos:start="107:53" pos:end="107:67"><name pos:start="107:53" pos:end="107:60">get_bits</name><argument_list pos:start="107:61" pos:end="107:67">(<argument pos:start="107:62" pos:end="107:63"><expr pos:start="107:62" pos:end="107:63"><name pos:start="107:62" pos:end="107:63">gb</name></expr></argument>, <argument pos:start="107:66" pos:end="107:66"><expr pos:start="107:66" pos:end="107:66"><literal type="number" pos:start="107:66" pos:end="107:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="109:13" pos:end="276:0"><if pos:start="109:13" pos:end="195:13">if <condition pos:start="109:16" pos:end="109:29">(<expr pos:start="109:17" pos:end="109:28"><operator pos:start="109:17" pos:end="109:17">!</operator><name pos:start="109:18" pos:end="109:28">mv_mode_bit</name></expr>)</condition> <comment type="block" pos:start="109:31" pos:end="109:44">/* 1MV mode */</comment>

            <block pos:start="111:13" pos:end="195:13">{<block_content pos:start="113:17" pos:end="193:17">

                <if_stmt pos:start="113:17" pos:end="193:17"><if pos:start="113:17" pos:end="179:17">if <condition pos:start="113:20" pos:end="113:55">(<expr pos:start="113:21" pos:end="113:54"><operator pos:start="113:21" pos:end="113:21">!</operator><name pos:start="113:22" pos:end="113:54"><name pos:start="113:22" pos:end="113:22">v</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:37">skip_mb_plane</name><operator pos:start="113:38" pos:end="113:38">.</operator><name pos:start="113:39" pos:end="113:42">data</name><index pos:start="113:43" pos:end="113:54">[<expr pos:start="113:44" pos:end="113:53"><name pos:start="113:44" pos:end="113:53">current_mb</name></expr>]</index></name></expr>)</condition>

                <block pos:start="115:17" pos:end="179:17">{<block_content pos:start="117:21" pos:end="175:67">

                    <expr_stmt pos:start="117:21" pos:end="117:45"><expr pos:start="117:21" pos:end="117:44"><call pos:start="117:21" pos:end="117:44"><name pos:start="117:21" pos:end="117:30">GET_MVDATA</name><argument_list pos:start="117:31" pos:end="117:44">(<argument pos:start="117:32" pos:end="117:36"><expr pos:start="117:32" pos:end="117:36"><name pos:start="117:32" pos:end="117:36">dmv_x</name></expr></argument>, <argument pos:start="117:39" pos:end="117:43"><expr pos:start="117:39" pos:end="117:43"><name pos:start="117:39" pos:end="117:43">dmv_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <comment type="block" pos:start="121:21" pos:end="121:51">/* hybrid mv pred, 8.3.5.3.4 */</comment>

                    <if_stmt pos:start="123:21" pos:end="127:54"><if pos:start="123:21" pos:end="127:54">if <condition pos:start="123:24" pos:end="125:56">(<expr pos:start="123:25" pos:end="125:55"><name pos:start="123:25" pos:end="123:34"><name pos:start="123:25" pos:end="123:25">v</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:34">mv_mode</name></name> <operator pos:start="123:36" pos:end="123:37">==</operator> <name pos:start="123:39" pos:end="123:50">MV_PMODE_1MV</name> <operator pos:start="123:52" pos:end="123:53">||</operator>

                        <name pos:start="125:25" pos:end="125:34"><name pos:start="125:25" pos:end="125:25">v</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:34">mv_mode</name></name> <operator pos:start="125:36" pos:end="125:37">==</operator> <name pos:start="125:39" pos:end="125:55">MV_PMODE_MIXED_MV</name></expr>)</condition><block type="pseudo" pos:start="127:25" pos:end="127:54"><block_content pos:start="127:25" pos:end="127:54">

                        <expr_stmt pos:start="127:25" pos:end="127:54"><expr pos:start="127:25" pos:end="127:53"><name pos:start="127:25" pos:end="127:35">hybrid_pred</name> <operator pos:start="127:37" pos:end="127:37">=</operator> <call pos:start="127:39" pos:end="127:53"><name pos:start="127:39" pos:end="127:46">get_bits</name><argument_list pos:start="127:47" pos:end="127:53">(<argument pos:start="127:48" pos:end="127:49"><expr pos:start="127:48" pos:end="127:49"><name pos:start="127:48" pos:end="127:49">gb</name></expr></argument>, <argument pos:start="127:52" pos:end="127:52"><expr pos:start="127:52" pos:end="127:52"><literal type="number" pos:start="127:52" pos:end="127:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="129:21" pos:end="169:21"><if pos:start="129:21" pos:end="137:21">if <condition pos:start="129:24" pos:end="129:54">(<expr pos:start="129:25" pos:end="129:53"><name pos:start="129:25" pos:end="129:35"><name pos:start="129:25" pos:end="129:25">s</name><operator pos:start="129:26" pos:end="129:27">-&gt;</operator><name pos:start="129:28" pos:end="129:35">mb_intra</name></name> <operator pos:start="129:37" pos:end="129:38">&amp;&amp;</operator> <operator pos:start="129:40" pos:end="129:40">!</operator><name pos:start="129:41" pos:end="129:53">mb_has_coeffs</name></expr>)</condition>

                    <block pos:start="131:21" pos:end="137:21">{<block_content pos:start="133:25" pos:end="135:53">

                        <expr_stmt pos:start="133:25" pos:end="133:37"><expr pos:start="133:25" pos:end="133:36"><call pos:start="133:25" pos:end="133:36"><name pos:start="133:25" pos:end="133:34">GET_MQUANT</name><argument_list pos:start="133:35" pos:end="133:36">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="135:25" pos:end="135:53"><expr pos:start="135:25" pos:end="135:52"><name pos:start="135:25" pos:end="135:34"><name pos:start="135:25" pos:end="135:25">s</name><operator pos:start="135:26" pos:end="135:27">-&gt;</operator><name pos:start="135:28" pos:end="135:34">ac_pred</name></name> <operator pos:start="135:36" pos:end="135:36">=</operator> <call pos:start="135:38" pos:end="135:52"><name pos:start="135:38" pos:end="135:45">get_bits</name><argument_list pos:start="135:46" pos:end="135:52">(<argument pos:start="135:47" pos:end="135:48"><expr pos:start="135:47" pos:end="135:48"><name pos:start="135:47" pos:end="135:48">gb</name></expr></argument>, <argument pos:start="135:51" pos:end="135:51"><expr pos:start="135:51" pos:end="135:51"><literal type="number" pos:start="135:51" pos:end="135:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if>

                    <if type="elseif" pos:start="139:21" pos:end="169:21">else if <condition pos:start="139:29" pos:end="139:43">(<expr pos:start="139:30" pos:end="139:42"><name pos:start="139:30" pos:end="139:42">mb_has_coeffs</name></expr>)</condition>

                    <block pos:start="141:21" pos:end="169:21">{<block_content pos:start="143:25" pos:end="167:37">

                        <if_stmt pos:start="143:25" pos:end="143:70"><if pos:start="143:25" pos:end="143:70">if <condition pos:start="143:28" pos:end="143:40">(<expr pos:start="143:29" pos:end="143:39"><name pos:start="143:29" pos:end="143:39"><name pos:start="143:29" pos:end="143:29">s</name><operator pos:start="143:30" pos:end="143:31">-&gt;</operator><name pos:start="143:32" pos:end="143:39">mb_intra</name></name></expr>)</condition><block type="pseudo" pos:start="143:42" pos:end="143:70"><block_content pos:start="143:42" pos:end="143:70"> <expr_stmt pos:start="143:42" pos:end="143:70"><expr pos:start="143:42" pos:end="143:69"><name pos:start="143:42" pos:end="143:51"><name pos:start="143:42" pos:end="143:42">s</name><operator pos:start="143:43" pos:end="143:44">-&gt;</operator><name pos:start="143:45" pos:end="143:51">ac_pred</name></name> <operator pos:start="143:53" pos:end="143:53">=</operator> <call pos:start="143:55" pos:end="143:69"><name pos:start="143:55" pos:end="143:62">get_bits</name><argument_list pos:start="143:63" pos:end="143:69">(<argument pos:start="143:64" pos:end="143:65"><expr pos:start="143:64" pos:end="143:65"><name pos:start="143:64" pos:end="143:65">gb</name></expr></argument>, <argument pos:start="143:68" pos:end="143:68"><expr pos:start="143:68" pos:end="143:68"><literal type="number" pos:start="143:68" pos:end="143:68">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="145:25" pos:end="145:101"><expr pos:start="145:25" pos:end="145:100"><name pos:start="145:25" pos:end="145:39">predicted_cbpcy</name> <operator pos:start="145:41" pos:end="145:41">=</operator> <call pos:start="145:43" pos:end="145:100"><name pos:start="145:43" pos:end="145:50">get_vlc2</name><argument_list pos:start="145:51" pos:end="145:100">(<argument pos:start="145:52" pos:end="145:53"><expr pos:start="145:52" pos:end="145:53"><name pos:start="145:52" pos:end="145:53">gb</name></expr></argument>, <argument pos:start="145:56" pos:end="145:74"><expr pos:start="145:56" pos:end="145:74"><name pos:start="145:56" pos:end="145:74"><name pos:start="145:56" pos:end="145:56">v</name><operator pos:start="145:57" pos:end="145:58">-&gt;</operator><name pos:start="145:59" pos:end="145:67">cbpcy_vlc</name><operator pos:start="145:68" pos:end="145:69">-&gt;</operator><name pos:start="145:70" pos:end="145:74">table</name></name></expr></argument>, <argument pos:start="145:77" pos:end="145:96"><expr pos:start="145:77" pos:end="145:96"><name pos:start="145:77" pos:end="145:96">VC9_CBPCY_P_VLC_BITS</name></expr></argument>, <argument pos:start="145:99" pos:end="145:99"><expr pos:start="145:99" pos:end="145:99"><literal type="number" pos:start="145:99" pos:end="145:99">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="147:25" pos:end="147:96"><expr pos:start="147:25" pos:end="147:95"><name pos:start="147:25" pos:end="147:32"><name pos:start="147:25" pos:end="147:29">cbpcy</name><index pos:start="147:30" pos:end="147:32">[<expr pos:start="147:31" pos:end="147:31"><literal type="number" pos:start="147:31" pos:end="147:31">0</literal></expr>]</index></name> <operator pos:start="147:34" pos:end="147:34">=</operator> <ternary pos:start="147:36" pos:end="147:95"><condition pos:start="147:36" pos:end="147:64"><expr pos:start="147:36" pos:end="147:62"><operator pos:start="147:36" pos:end="147:36">(</operator><name pos:start="147:37" pos:end="147:47"><name pos:start="147:37" pos:end="147:43">p_cbpcy</name><index pos:start="147:44" pos:end="147:47">[<expr pos:start="147:45" pos:end="147:46"><operator pos:start="147:45" pos:end="147:45">-</operator><literal type="number" pos:start="147:46" pos:end="147:46">1</literal></expr>]</index></name> <operator pos:start="147:49" pos:end="147:50">==</operator> <name pos:start="147:52" pos:end="147:61"><name pos:start="147:52" pos:end="147:58">p_cbpcy</name><index pos:start="147:59" pos:end="147:61">[<expr pos:start="147:60" pos:end="147:60"><literal type="number" pos:start="147:60" pos:end="147:60">2</literal></expr>]</index></name><operator pos:start="147:62" pos:end="147:62">)</operator></expr> ?</condition><then pos:start="147:66" pos:end="147:82"> <expr pos:start="147:66" pos:end="147:82"><name pos:start="147:66" pos:end="147:82"><name pos:start="147:66" pos:end="147:79">previous_cbpcy</name><index pos:start="147:80" pos:end="147:82">[<expr pos:start="147:81" pos:end="147:81"><literal type="number" pos:start="147:81" pos:end="147:81">1</literal></expr>]</index></name></expr> </then><else pos:start="147:84" pos:end="147:95">: <expr pos:start="147:86" pos:end="147:95"><name pos:start="147:86" pos:end="147:95"><name pos:start="147:86" pos:end="147:92">p_cbpcy</name><index pos:start="147:93" pos:end="147:95">[<expr pos:start="147:94" pos:end="147:94"><literal type="number" pos:start="147:94" pos:end="147:94">2</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

                        <expr_stmt pos:start="149:25" pos:end="149:64"><expr pos:start="149:25" pos:end="149:63"><name pos:start="149:25" pos:end="149:32"><name pos:start="149:25" pos:end="149:29">cbpcy</name><index pos:start="149:30" pos:end="149:32">[<expr pos:start="149:31" pos:end="149:31"><literal type="number" pos:start="149:31" pos:end="149:31">0</literal></expr>]</index></name> <operator pos:start="149:34" pos:end="149:35">^=</operator> <operator pos:start="149:37" pos:end="149:37">(</operator><operator pos:start="149:38" pos:end="149:38">(</operator><name pos:start="149:39" pos:end="149:53">predicted_cbpcy</name><operator pos:start="149:54" pos:end="149:55">&gt;&gt;</operator><literal type="number" pos:start="149:56" pos:end="149:56">5</literal><operator pos:start="149:57" pos:end="149:57">)</operator><operator pos:start="149:58" pos:end="149:58">&amp;</operator><literal type="number" pos:start="149:59" pos:end="149:62">0x01</literal><operator pos:start="149:63" pos:end="149:63">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="151:25" pos:end="151:86"><expr pos:start="151:25" pos:end="151:85"><name pos:start="151:25" pos:end="151:32"><name pos:start="151:25" pos:end="151:29">cbpcy</name><index pos:start="151:30" pos:end="151:32">[<expr pos:start="151:31" pos:end="151:31"><literal type="number" pos:start="151:31" pos:end="151:31">1</literal></expr>]</index></name> <operator pos:start="151:34" pos:end="151:34">=</operator> <ternary pos:start="151:36" pos:end="151:85"><condition pos:start="151:36" pos:end="151:63"><expr pos:start="151:36" pos:end="151:61"><operator pos:start="151:36" pos:end="151:36">(</operator><name pos:start="151:37" pos:end="151:46"><name pos:start="151:37" pos:end="151:43">p_cbpcy</name><index pos:start="151:44" pos:end="151:46">[<expr pos:start="151:45" pos:end="151:45"><literal type="number" pos:start="151:45" pos:end="151:45">2</literal></expr>]</index></name> <operator pos:start="151:48" pos:end="151:49">==</operator> <name pos:start="151:51" pos:end="151:60"><name pos:start="151:51" pos:end="151:57">p_cbpcy</name><index pos:start="151:58" pos:end="151:60">[<expr pos:start="151:59" pos:end="151:59"><literal type="number" pos:start="151:59" pos:end="151:59">3</literal></expr>]</index></name><operator pos:start="151:61" pos:end="151:61">)</operator></expr> ?</condition><then pos:start="151:65" pos:end="151:72"> <expr pos:start="151:65" pos:end="151:72"><name pos:start="151:65" pos:end="151:72"><name pos:start="151:65" pos:end="151:69">cbpcy</name><index pos:start="151:70" pos:end="151:72">[<expr pos:start="151:71" pos:end="151:71"><literal type="number" pos:start="151:71" pos:end="151:71">0</literal></expr>]</index></name></expr> </then><else pos:start="151:74" pos:end="151:85">: <expr pos:start="151:76" pos:end="151:85"><name pos:start="151:76" pos:end="151:85"><name pos:start="151:76" pos:end="151:82">p_cbpcy</name><index pos:start="151:83" pos:end="151:85">[<expr pos:start="151:84" pos:end="151:84"><literal type="number" pos:start="151:84" pos:end="151:84">3</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

                        <expr_stmt pos:start="153:25" pos:end="153:64"><expr pos:start="153:25" pos:end="153:63"><name pos:start="153:25" pos:end="153:32"><name pos:start="153:25" pos:end="153:29">cbpcy</name><index pos:start="153:30" pos:end="153:32">[<expr pos:start="153:31" pos:end="153:31"><literal type="number" pos:start="153:31" pos:end="153:31">1</literal></expr>]</index></name> <operator pos:start="153:34" pos:end="153:35">^=</operator> <operator pos:start="153:37" pos:end="153:37">(</operator><operator pos:start="153:38" pos:end="153:38">(</operator><name pos:start="153:39" pos:end="153:53">predicted_cbpcy</name><operator pos:start="153:54" pos:end="153:55">&gt;&gt;</operator><literal type="number" pos:start="153:56" pos:end="153:56">4</literal><operator pos:start="153:57" pos:end="153:57">)</operator><operator pos:start="153:58" pos:end="153:58">&amp;</operator><literal type="number" pos:start="153:59" pos:end="153:62">0x01</literal><operator pos:start="153:63" pos:end="153:63">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="155:25" pos:end="155:98"><expr pos:start="155:25" pos:end="155:97"><name pos:start="155:25" pos:end="155:32"><name pos:start="155:25" pos:end="155:29">cbpcy</name><index pos:start="155:30" pos:end="155:32">[<expr pos:start="155:31" pos:end="155:31"><literal type="number" pos:start="155:31" pos:end="155:31">2</literal></expr>]</index></name> <operator pos:start="155:34" pos:end="155:34">=</operator> <ternary pos:start="155:36" pos:end="155:97"><condition pos:start="155:36" pos:end="155:68"><expr pos:start="155:36" pos:end="155:66"><operator pos:start="155:36" pos:end="155:36">(</operator><name pos:start="155:37" pos:end="155:53"><name pos:start="155:37" pos:end="155:50">previous_cbpcy</name><index pos:start="155:51" pos:end="155:53">[<expr pos:start="155:52" pos:end="155:52"><literal type="number" pos:start="155:52" pos:end="155:52">1</literal></expr>]</index></name> <operator pos:start="155:55" pos:end="155:56">==</operator> <name pos:start="155:58" pos:end="155:65"><name pos:start="155:58" pos:end="155:62">cbpcy</name><index pos:start="155:63" pos:end="155:65">[<expr pos:start="155:64" pos:end="155:64"><literal type="number" pos:start="155:64" pos:end="155:64">0</literal></expr>]</index></name><operator pos:start="155:66" pos:end="155:66">)</operator></expr> ?</condition><then pos:start="155:70" pos:end="155:86"> <expr pos:start="155:70" pos:end="155:86"><name pos:start="155:70" pos:end="155:86"><name pos:start="155:70" pos:end="155:83">previous_cbpcy</name><index pos:start="155:84" pos:end="155:86">[<expr pos:start="155:85" pos:end="155:85"><literal type="number" pos:start="155:85" pos:end="155:85">3</literal></expr>]</index></name></expr> </then><else pos:start="155:88" pos:end="155:97">: <expr pos:start="155:90" pos:end="155:97"><name pos:start="155:90" pos:end="155:97"><name pos:start="155:90" pos:end="155:94">cbpcy</name><index pos:start="155:95" pos:end="155:97">[<expr pos:start="155:96" pos:end="155:96"><literal type="number" pos:start="155:96" pos:end="155:96">0</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

                        <expr_stmt pos:start="157:25" pos:end="157:64"><expr pos:start="157:25" pos:end="157:63"><name pos:start="157:25" pos:end="157:32"><name pos:start="157:25" pos:end="157:29">cbpcy</name><index pos:start="157:30" pos:end="157:32">[<expr pos:start="157:31" pos:end="157:31"><literal type="number" pos:start="157:31" pos:end="157:31">2</literal></expr>]</index></name> <operator pos:start="157:34" pos:end="157:35">^=</operator> <operator pos:start="157:37" pos:end="157:37">(</operator><operator pos:start="157:38" pos:end="157:38">(</operator><name pos:start="157:39" pos:end="157:53">predicted_cbpcy</name><operator pos:start="157:54" pos:end="157:55">&gt;&gt;</operator><literal type="number" pos:start="157:56" pos:end="157:56">3</literal><operator pos:start="157:57" pos:end="157:57">)</operator><operator pos:start="157:58" pos:end="157:58">&amp;</operator><literal type="number" pos:start="157:59" pos:end="157:62">0x01</literal><operator pos:start="157:63" pos:end="157:63">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="159:25" pos:end="159:80"><expr pos:start="159:25" pos:end="159:79"><name pos:start="159:25" pos:end="159:32"><name pos:start="159:25" pos:end="159:29">cbpcy</name><index pos:start="159:30" pos:end="159:32">[<expr pos:start="159:31" pos:end="159:31"><literal type="number" pos:start="159:31" pos:end="159:31">3</literal></expr>]</index></name> <operator pos:start="159:34" pos:end="159:34">=</operator> <ternary pos:start="159:36" pos:end="159:79"><condition pos:start="159:36" pos:end="159:59"><expr pos:start="159:36" pos:end="159:57"><operator pos:start="159:36" pos:end="159:36">(</operator><name pos:start="159:37" pos:end="159:44"><name pos:start="159:37" pos:end="159:41">cbpcy</name><index pos:start="159:42" pos:end="159:44">[<expr pos:start="159:43" pos:end="159:43"><literal type="number" pos:start="159:43" pos:end="159:43">1</literal></expr>]</index></name> <operator pos:start="159:46" pos:end="159:47">==</operator> <name pos:start="159:49" pos:end="159:56"><name pos:start="159:49" pos:end="159:53">cbpcy</name><index pos:start="159:54" pos:end="159:56">[<expr pos:start="159:55" pos:end="159:55"><literal type="number" pos:start="159:55" pos:end="159:55">0</literal></expr>]</index></name><operator pos:start="159:57" pos:end="159:57">)</operator></expr> ?</condition><then pos:start="159:61" pos:end="159:68"> <expr pos:start="159:61" pos:end="159:68"><name pos:start="159:61" pos:end="159:68"><name pos:start="159:61" pos:end="159:65">cbpcy</name><index pos:start="159:66" pos:end="159:68">[<expr pos:start="159:67" pos:end="159:67"><literal type="number" pos:start="159:67" pos:end="159:67">2</literal></expr>]</index></name></expr> </then><else pos:start="159:70" pos:end="159:79">: <expr pos:start="159:72" pos:end="159:79"><name pos:start="159:72" pos:end="159:79"><name pos:start="159:72" pos:end="159:76">cbpcy</name><index pos:start="159:77" pos:end="159:79">[<expr pos:start="159:78" pos:end="159:78"><literal type="number" pos:start="159:78" pos:end="159:78">1</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

                        <expr_stmt pos:start="161:25" pos:end="161:64"><expr pos:start="161:25" pos:end="161:63"><name pos:start="161:25" pos:end="161:32"><name pos:start="161:25" pos:end="161:29">cbpcy</name><index pos:start="161:30" pos:end="161:32">[<expr pos:start="161:31" pos:end="161:31"><literal type="number" pos:start="161:31" pos:end="161:31">3</literal></expr>]</index></name> <operator pos:start="161:34" pos:end="161:35">^=</operator> <operator pos:start="161:37" pos:end="161:37">(</operator><operator pos:start="161:38" pos:end="161:38">(</operator><name pos:start="161:39" pos:end="161:53">predicted_cbpcy</name><operator pos:start="161:54" pos:end="161:55">&gt;&gt;</operator><literal type="number" pos:start="161:56" pos:end="161:56">2</literal><operator pos:start="161:57" pos:end="161:57">)</operator><operator pos:start="161:58" pos:end="161:58">&amp;</operator><literal type="number" pos:start="161:59" pos:end="161:62">0x01</literal><operator pos:start="161:63" pos:end="161:63">)</operator></expr>;</expr_stmt>

                        <comment type="line" pos:start="163:25" pos:end="163:79">//GET_CBPCY(v-&gt;cbpcy_vlc-&gt;table, VC9_CBPCY_P_VLC_BITS);</comment>



                        <expr_stmt pos:start="167:25" pos:end="167:37"><expr pos:start="167:25" pos:end="167:36"><call pos:start="167:25" pos:end="167:36"><name pos:start="167:25" pos:end="167:34">GET_MQUANT</name><argument_list pos:start="167:35" pos:end="167:36">()</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="171:21" pos:end="175:67"><if pos:start="171:21" pos:end="175:67">if <condition pos:start="171:24" pos:end="171:34">(<expr pos:start="171:25" pos:end="171:33"><operator pos:start="171:25" pos:end="171:25">!</operator><name pos:start="171:26" pos:end="171:33"><name pos:start="171:26" pos:end="171:26">v</name><operator pos:start="171:27" pos:end="171:28">-&gt;</operator><name pos:start="171:29" pos:end="171:33">ttmbf</name></name></expr>)</condition><block type="pseudo" pos:start="173:25" pos:end="175:67"><block_content pos:start="173:25" pos:end="175:67">

                        <expr_stmt pos:start="173:25" pos:end="175:67"><expr pos:start="173:25" pos:end="175:66"><name pos:start="173:25" pos:end="173:28">ttmb</name> <operator pos:start="173:30" pos:end="173:30">=</operator> <call pos:start="173:32" pos:end="175:66"><name pos:start="173:32" pos:end="173:39">get_vlc2</name><argument_list pos:start="173:40" pos:end="175:66">(<argument pos:start="173:41" pos:end="173:42"><expr pos:start="173:41" pos:end="173:42"><name pos:start="173:41" pos:end="173:42">gb</name></expr></argument>, <argument pos:start="173:45" pos:end="173:62"><expr pos:start="173:45" pos:end="173:62"><name pos:start="173:45" pos:end="173:62"><name pos:start="173:45" pos:end="173:45">v</name><operator pos:start="173:46" pos:end="173:47">-&gt;</operator><name pos:start="173:48" pos:end="173:55">ttmb_vlc</name><operator pos:start="173:56" pos:end="173:57">-&gt;</operator><name pos:start="173:58" pos:end="173:62">table</name></name></expr></argument>,

                                            <argument pos:start="175:45" pos:end="175:61"><expr pos:start="175:45" pos:end="175:61"><name pos:start="175:45" pos:end="175:61">VC9_TTMB_VLC_BITS</name></expr></argument>, <argument pos:start="175:64" pos:end="175:65"><expr pos:start="175:64" pos:end="175:65"><literal type="number" pos:start="175:64" pos:end="175:65">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <comment type="block" pos:start="177:21" pos:end="177:68">/* TODO: decode blocks from that mb wrt cbpcy */</comment>

                </block_content>}</block></if>

                <else pos:start="181:17" pos:end="193:17">else <comment type="line" pos:start="181:22" pos:end="181:30">//Skipped</comment>

                <block pos:start="183:17" pos:end="193:17">{<block_content pos:start="187:21" pos:end="191:54">

                    <comment type="block" pos:start="185:21" pos:end="185:51">/* hybrid mv pred, 8.3.5.3.4 */</comment>

                    <if_stmt pos:start="187:21" pos:end="191:54"><if pos:start="187:21" pos:end="191:54">if <condition pos:start="187:24" pos:end="189:56">(<expr pos:start="187:25" pos:end="189:55"><name pos:start="187:25" pos:end="187:34"><name pos:start="187:25" pos:end="187:25">v</name><operator pos:start="187:26" pos:end="187:27">-&gt;</operator><name pos:start="187:28" pos:end="187:34">mv_mode</name></name> <operator pos:start="187:36" pos:end="187:37">==</operator> <name pos:start="187:39" pos:end="187:50">MV_PMODE_1MV</name> <operator pos:start="187:52" pos:end="187:53">||</operator>

                        <name pos:start="189:25" pos:end="189:34"><name pos:start="189:25" pos:end="189:25">v</name><operator pos:start="189:26" pos:end="189:27">-&gt;</operator><name pos:start="189:28" pos:end="189:34">mv_mode</name></name> <operator pos:start="189:36" pos:end="189:37">==</operator> <name pos:start="189:39" pos:end="189:55">MV_PMODE_MIXED_MV</name></expr>)</condition><block type="pseudo" pos:start="191:25" pos:end="191:54"><block_content pos:start="191:25" pos:end="191:54">

                        <expr_stmt pos:start="191:25" pos:end="191:54"><expr pos:start="191:25" pos:end="191:53"><name pos:start="191:25" pos:end="191:35">hybrid_pred</name> <operator pos:start="191:37" pos:end="191:37">=</operator> <call pos:start="191:39" pos:end="191:53"><name pos:start="191:39" pos:end="191:46">get_bits</name><argument_list pos:start="191:47" pos:end="191:53">(<argument pos:start="191:48" pos:end="191:49"><expr pos:start="191:48" pos:end="191:49"><name pos:start="191:48" pos:end="191:49">gb</name></expr></argument>, <argument pos:start="191:52" pos:end="191:52"><expr pos:start="191:52" pos:end="191:52"><literal type="number" pos:start="191:52" pos:end="191:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <comment type="line" pos:start="195:15" pos:end="195:24">//1MV mode</comment>

            <else pos:start="197:13" pos:end="276:0">else <comment type="line" pos:start="197:18" pos:end="197:27">//4MV mode</comment>

            <block pos:start="199:13" pos:end="276:0">{<block_content pos:start="201:15" pos:end="267:17">

              <if_stmt pos:start="201:15" pos:end="267:17"><if pos:start="201:15" pos:end="247:17">if <condition pos:start="201:18" pos:end="201:72">(<expr pos:start="201:19" pos:end="201:52"><operator pos:start="201:19" pos:end="201:19">!</operator><name pos:start="201:20" pos:end="201:52"><name pos:start="201:20" pos:end="201:20">v</name><operator pos:start="201:21" pos:end="201:22">-&gt;</operator><name pos:start="201:23" pos:end="201:35">skip_mb_plane</name><operator pos:start="201:36" pos:end="201:36">.</operator><name pos:start="201:37" pos:end="201:40">data</name><index pos:start="201:41" pos:end="201:52">[<expr pos:start="201:42" pos:end="201:51"><name pos:start="201:42" pos:end="201:51">current_mb</name></expr>]</index></name></expr> <comment type="block" pos:start="201:54" pos:end="201:71">/* unskipped MB */</comment>)</condition>

                <block pos:start="203:17" pos:end="247:17">{<block_content pos:start="207:21" pos:end="245:21">

                    <comment type="block" pos:start="205:21" pos:end="205:35">/* Get CBPCY */</comment>

                    <expr_stmt pos:start="207:21" pos:end="207:73"><expr pos:start="207:21" pos:end="207:72"><call pos:start="207:21" pos:end="207:72"><name pos:start="207:21" pos:end="207:29">GET_CBPCY</name><argument_list pos:start="207:30" pos:end="207:72">(<argument pos:start="207:31" pos:end="207:49"><expr pos:start="207:31" pos:end="207:49"><name pos:start="207:31" pos:end="207:49"><name pos:start="207:31" pos:end="207:31">v</name><operator pos:start="207:32" pos:end="207:33">-&gt;</operator><name pos:start="207:34" pos:end="207:42">cbpcy_vlc</name><operator pos:start="207:43" pos:end="207:44">-&gt;</operator><name pos:start="207:45" pos:end="207:49">table</name></name></expr></argument>, <argument pos:start="207:52" pos:end="207:71"><expr pos:start="207:52" pos:end="207:71"><name pos:start="207:52" pos:end="207:71">VC9_CBPCY_P_VLC_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="209:21" pos:end="245:21">for <control pos:start="209:25" pos:end="209:39">(<init pos:start="209:26" pos:end="209:29"><expr pos:start="209:26" pos:end="209:28"><name pos:start="209:26" pos:end="209:26">i</name><operator pos:start="209:27" pos:end="209:27">=</operator><literal type="number" pos:start="209:28" pos:end="209:28">0</literal></expr>;</init> <condition pos:start="209:31" pos:end="209:34"><expr pos:start="209:31" pos:end="209:33"><name pos:start="209:31" pos:end="209:31">i</name><operator pos:start="209:32" pos:end="209:32">&lt;</operator><literal type="number" pos:start="209:33" pos:end="209:33">4</literal></expr>;</condition> <incr pos:start="209:36" pos:end="209:38"><expr pos:start="209:36" pos:end="209:38"><name pos:start="209:36" pos:end="209:36">i</name><operator pos:start="209:37" pos:end="209:38">++</operator></expr></incr>)</control> <comment type="line" pos:start="209:41" pos:end="209:60">//For all 4 Y blocks</comment>

                    <block pos:start="211:21" pos:end="245:21">{<block_content pos:start="213:25" pos:end="237:67">

                        <if_stmt pos:start="213:25" pos:end="219:25"><if pos:start="213:25" pos:end="219:25">if <condition pos:start="213:28" pos:end="213:68">(<expr pos:start="213:29" pos:end="213:36"><name pos:start="213:29" pos:end="213:36"><name pos:start="213:29" pos:end="213:33">cbpcy</name><index pos:start="213:34" pos:end="213:36">[<expr pos:start="213:35" pos:end="213:35"><name pos:start="213:35" pos:end="213:35">i</name></expr>]</index></name></expr> <comment type="block" pos:start="213:38" pos:end="213:67">/* cbpcy set for this block */</comment>)</condition>

                        <block pos:start="215:25" pos:end="219:25">{<block_content pos:start="217:29" pos:end="217:53">

                            <expr_stmt pos:start="217:29" pos:end="217:53"><expr pos:start="217:29" pos:end="217:52"><call pos:start="217:29" pos:end="217:52"><name pos:start="217:29" pos:end="217:38">GET_MVDATA</name><argument_list pos:start="217:39" pos:end="217:52">(<argument pos:start="217:40" pos:end="217:44"><expr pos:start="217:40" pos:end="217:44"><name pos:start="217:40" pos:end="217:44">dmv_x</name></expr></argument>, <argument pos:start="217:47" pos:end="217:51"><expr pos:start="217:47" pos:end="217:51"><name pos:start="217:47" pos:end="217:51">dmv_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="221:25" pos:end="223:58"><if pos:start="221:25" pos:end="223:58">if <condition pos:start="221:28" pos:end="221:78">(<expr pos:start="221:29" pos:end="221:59"><name pos:start="221:29" pos:end="221:38"><name pos:start="221:29" pos:end="221:29">v</name><operator pos:start="221:30" pos:end="221:31">-&gt;</operator><name pos:start="221:32" pos:end="221:38">mv_mode</name></name> <operator pos:start="221:40" pos:end="221:41">==</operator> <name pos:start="221:43" pos:end="221:59">MV_PMODE_MIXED_MV</name></expr> <comment type="block" pos:start="221:61" pos:end="221:77">/* Hybrid pred */</comment>)</condition><block type="pseudo" pos:start="223:29" pos:end="223:58"><block_content pos:start="223:29" pos:end="223:58">

                            <expr_stmt pos:start="223:29" pos:end="223:58"><expr pos:start="223:29" pos:end="223:57"><name pos:start="223:29" pos:end="223:39">hybrid_pred</name> <operator pos:start="223:41" pos:end="223:41">=</operator> <call pos:start="223:43" pos:end="223:57"><name pos:start="223:43" pos:end="223:50">get_bits</name><argument_list pos:start="223:51" pos:end="223:57">(<argument pos:start="223:52" pos:end="223:53"><expr pos:start="223:52" pos:end="223:53"><name pos:start="223:52" pos:end="223:53">gb</name></expr></argument>, <argument pos:start="223:56" pos:end="223:56"><expr pos:start="223:56" pos:end="223:56"><literal type="number" pos:start="223:56" pos:end="223:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="225:25" pos:end="225:37"><expr pos:start="225:25" pos:end="225:36"><call pos:start="225:25" pos:end="225:36"><name pos:start="225:25" pos:end="225:34">GET_MQUANT</name><argument_list pos:start="225:35" pos:end="225:36">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="227:25" pos:end="231:57"><if pos:start="227:25" pos:end="231:57">if <condition pos:start="227:28" pos:end="229:69">(<expr pos:start="227:29" pos:end="229:33"><name pos:start="227:29" pos:end="227:39"><name pos:start="227:29" pos:end="227:29">s</name><operator pos:start="227:30" pos:end="227:31">-&gt;</operator><name pos:start="227:32" pos:end="227:39">mb_intra</name></name> <comment type="block" pos:start="227:41" pos:end="227:74">/* One of the 4 blocks is intra */</comment> <operator pos:start="227:76" pos:end="227:77">&amp;&amp;</operator>

                            <name pos:start="229:29" pos:end="229:33">index</name></expr> <comment type="block" pos:start="229:35" pos:end="229:68">/* non-zero pred for that block */</comment>)</condition><block type="pseudo" pos:start="231:29" pos:end="231:57"><block_content pos:start="231:29" pos:end="231:57">

                            <expr_stmt pos:start="231:29" pos:end="231:57"><expr pos:start="231:29" pos:end="231:56"><name pos:start="231:29" pos:end="231:38"><name pos:start="231:29" pos:end="231:29">s</name><operator pos:start="231:30" pos:end="231:31">-&gt;</operator><name pos:start="231:32" pos:end="231:38">ac_pred</name></name> <operator pos:start="231:40" pos:end="231:40">=</operator> <call pos:start="231:42" pos:end="231:56"><name pos:start="231:42" pos:end="231:49">get_bits</name><argument_list pos:start="231:50" pos:end="231:56">(<argument pos:start="231:51" pos:end="231:52"><expr pos:start="231:51" pos:end="231:52"><name pos:start="231:51" pos:end="231:52">gb</name></expr></argument>, <argument pos:start="231:55" pos:end="231:55"><expr pos:start="231:55" pos:end="231:55"><literal type="number" pos:start="231:55" pos:end="231:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="233:25" pos:end="237:67"><if pos:start="233:25" pos:end="237:67">if <condition pos:start="233:28" pos:end="233:38">(<expr pos:start="233:29" pos:end="233:37"><operator pos:start="233:29" pos:end="233:29">!</operator><name pos:start="233:30" pos:end="233:37"><name pos:start="233:30" pos:end="233:30">v</name><operator pos:start="233:31" pos:end="233:32">-&gt;</operator><name pos:start="233:33" pos:end="233:37">ttmbf</name></name></expr>)</condition><block type="pseudo" pos:start="235:29" pos:end="237:67"><block_content pos:start="235:29" pos:end="237:67">

                            <expr_stmt pos:start="235:29" pos:end="237:67"><expr pos:start="235:29" pos:end="237:66"><name pos:start="235:29" pos:end="235:32">ttmb</name> <operator pos:start="235:34" pos:end="235:34">=</operator> <call pos:start="235:36" pos:end="237:66"><name pos:start="235:36" pos:end="235:43">get_vlc2</name><argument_list pos:start="235:44" pos:end="237:66">(<argument pos:start="235:45" pos:end="235:46"><expr pos:start="235:45" pos:end="235:46"><name pos:start="235:45" pos:end="235:46">gb</name></expr></argument>, <argument pos:start="235:49" pos:end="235:66"><expr pos:start="235:49" pos:end="235:66"><name pos:start="235:49" pos:end="235:66"><name pos:start="235:49" pos:end="235:49">v</name><operator pos:start="235:50" pos:end="235:51">-&gt;</operator><name pos:start="235:52" pos:end="235:59">ttmb_vlc</name><operator pos:start="235:60" pos:end="235:61">-&gt;</operator><name pos:start="235:62" pos:end="235:66">table</name></name></expr></argument>,

                                            <argument pos:start="237:45" pos:end="237:61"><expr pos:start="237:45" pos:end="237:61"><name pos:start="237:45" pos:end="237:61">VC9_TTMB_VLC_BITS</name></expr></argument>, <argument pos:start="237:64" pos:end="237:65"><expr pos:start="237:64" pos:end="237:65"><literal type="number" pos:start="237:64" pos:end="237:65">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            

                        <comment type="block" pos:start="241:25" pos:end="241:60">/* TODO: Process blocks wrt cbpcy */</comment>

            

                    </block_content>}</block></for>

                </block_content>}</block></if>

                <else pos:start="249:17" pos:end="267:17">else <comment type="line" pos:start="249:22" pos:end="249:33">//Skipped MB</comment>

                <block pos:start="251:17" pos:end="267:17">{<block_content pos:start="253:21" pos:end="265:21">

                    <for pos:start="253:21" pos:end="265:21">for <control pos:start="253:25" pos:end="253:39">(<init pos:start="253:26" pos:end="253:29"><expr pos:start="253:26" pos:end="253:28"><name pos:start="253:26" pos:end="253:26">i</name><operator pos:start="253:27" pos:end="253:27">=</operator><literal type="number" pos:start="253:28" pos:end="253:28">0</literal></expr>;</init> <condition pos:start="253:31" pos:end="253:34"><expr pos:start="253:31" pos:end="253:33"><name pos:start="253:31" pos:end="253:31">i</name><operator pos:start="253:32" pos:end="253:32">&lt;</operator><literal type="number" pos:start="253:33" pos:end="253:33">4</literal></expr>;</condition> <incr pos:start="253:36" pos:end="253:38"><expr pos:start="253:36" pos:end="253:38"><name pos:start="253:36" pos:end="253:36">i</name><operator pos:start="253:37" pos:end="253:38">++</operator></expr></incr>)</control> <comment type="line" pos:start="253:41" pos:end="253:56">//All 4 Y blocks</comment>

                    <block pos:start="255:21" pos:end="265:21">{<block_content pos:start="257:25" pos:end="259:58">

                        <if_stmt pos:start="257:25" pos:end="259:58"><if pos:start="257:25" pos:end="259:58">if <condition pos:start="257:28" pos:end="257:78">(<expr pos:start="257:29" pos:end="257:59"><name pos:start="257:29" pos:end="257:38"><name pos:start="257:29" pos:end="257:29">v</name><operator pos:start="257:30" pos:end="257:31">-&gt;</operator><name pos:start="257:32" pos:end="257:38">mv_mode</name></name> <operator pos:start="257:40" pos:end="257:41">==</operator> <name pos:start="257:43" pos:end="257:59">MV_PMODE_MIXED_MV</name></expr> <comment type="block" pos:start="257:61" pos:end="257:77">/* Hybrid pred */</comment>)</condition><block type="pseudo" pos:start="259:29" pos:end="259:58"><block_content pos:start="259:29" pos:end="259:58">

                            <expr_stmt pos:start="259:29" pos:end="259:58"><expr pos:start="259:29" pos:end="259:57"><name pos:start="259:29" pos:end="259:39">hybrid_pred</name> <operator pos:start="259:41" pos:end="259:41">=</operator> <call pos:start="259:43" pos:end="259:57"><name pos:start="259:43" pos:end="259:50">get_bits</name><argument_list pos:start="259:51" pos:end="259:57">(<argument pos:start="259:52" pos:end="259:53"><expr pos:start="259:52" pos:end="259:53"><name pos:start="259:52" pos:end="259:53">gb</name></expr></argument>, <argument pos:start="259:56" pos:end="259:56"><expr pos:start="259:56" pos:end="259:56"><literal type="number" pos:start="259:56" pos:end="259:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        

                        <comment type="block" pos:start="263:25" pos:end="263:48">/* TODO: do something */</comment>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>



            <comment type="block" pos:start="273:13" pos:end="273:39">/* Update for next block */</comment>

<cpp:if pos:start="275:1" pos:end="275:13">#<cpp:directive pos:start="275:2" pos:end="275:3">if</cpp:directive> <expr pos:start="275:5" pos:end="275:13"><name pos:start="275:5" pos:end="275:9">TRACE</name> <operator pos:start="275:11" pos:end="275:11">&gt;</operator> <literal type="number" pos:start="275:13" pos:end="275:13">2</literal></expr></cpp:if>

            <expr_stmt pos:start="277:13" pos:end="288:0"><expr pos:start="277:13" pos:end="285:58"><call pos:start="277:13" pos:end="285:58"><name pos:start="277:13" pos:end="277:18">av_log</name><argument_list pos:start="277:19" pos:end="285:58">(<argument pos:start="277:20" pos:end="277:27"><expr pos:start="277:20" pos:end="277:27"><name pos:start="277:20" pos:end="277:27"><name pos:start="277:20" pos:end="277:20">s</name><operator pos:start="277:21" pos:end="277:22">-&gt;</operator><name pos:start="277:23" pos:end="277:27">avctx</name></name></expr></argument>, <argument pos:start="277:30" pos:end="277:41"><expr pos:start="277:30" pos:end="277:41"><name pos:start="277:30" pos:end="277:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="277:44" pos:end="279:38"><expr pos:start="277:44" pos:end="279:38"><literal type="string" pos:start="277:44" pos:end="277:98">"Block %4i: p_cbpcy=%i%i%i%i, previous_cbpcy=%i%i%i%i,"</literal>

                   <literal type="string" pos:start="279:20" pos:end="279:38">" cbpcy=%i%i%i%i\n"</literal></expr></argument>, <argument pos:start="279:41" pos:end="279:50"><expr pos:start="279:41" pos:end="279:50"><name pos:start="279:41" pos:end="279:50">current_mb</name></expr></argument>,

                   <argument pos:start="281:20" pos:end="281:29"><expr pos:start="281:20" pos:end="281:29"><name pos:start="281:20" pos:end="281:29"><name pos:start="281:20" pos:end="281:26">p_cbpcy</name><index pos:start="281:27" pos:end="281:29">[<expr pos:start="281:28" pos:end="281:28"><literal type="number" pos:start="281:28" pos:end="281:28">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="281:32" pos:end="281:41"><expr pos:start="281:32" pos:end="281:41"><name pos:start="281:32" pos:end="281:41"><name pos:start="281:32" pos:end="281:38">p_cbpcy</name><index pos:start="281:39" pos:end="281:41">[<expr pos:start="281:40" pos:end="281:40"><literal type="number" pos:start="281:40" pos:end="281:40">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="281:44" pos:end="281:53"><expr pos:start="281:44" pos:end="281:53"><name pos:start="281:44" pos:end="281:53"><name pos:start="281:44" pos:end="281:50">p_cbpcy</name><index pos:start="281:51" pos:end="281:53">[<expr pos:start="281:52" pos:end="281:52"><literal type="number" pos:start="281:52" pos:end="281:52">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="281:56" pos:end="281:65"><expr pos:start="281:56" pos:end="281:65"><name pos:start="281:56" pos:end="281:65"><name pos:start="281:56" pos:end="281:62">p_cbpcy</name><index pos:start="281:63" pos:end="281:65">[<expr pos:start="281:64" pos:end="281:64"><literal type="number" pos:start="281:64" pos:end="281:64">3</literal></expr>]</index></name></expr></argument>,

                   <argument pos:start="283:20" pos:end="283:36"><expr pos:start="283:20" pos:end="283:36"><name pos:start="283:20" pos:end="283:36"><name pos:start="283:20" pos:end="283:33">previous_cbpcy</name><index pos:start="283:34" pos:end="283:36">[<expr pos:start="283:35" pos:end="283:35"><literal type="number" pos:start="283:35" pos:end="283:35">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="283:39" pos:end="283:55"><expr pos:start="283:39" pos:end="283:55"><name pos:start="283:39" pos:end="283:55"><name pos:start="283:39" pos:end="283:52">previous_cbpcy</name><index pos:start="283:53" pos:end="283:55">[<expr pos:start="283:54" pos:end="283:54"><literal type="number" pos:start="283:54" pos:end="283:54">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="283:58" pos:end="283:74"><expr pos:start="283:58" pos:end="283:74"><name pos:start="283:58" pos:end="283:74"><name pos:start="283:58" pos:end="283:71">previous_cbpcy</name><index pos:start="283:72" pos:end="283:74">[<expr pos:start="283:73" pos:end="283:73"><literal type="number" pos:start="283:73" pos:end="283:73">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="283:77" pos:end="283:93"><expr pos:start="283:77" pos:end="283:93"><name pos:start="283:77" pos:end="283:93"><name pos:start="283:77" pos:end="283:90">previous_cbpcy</name><index pos:start="283:91" pos:end="283:93">[<expr pos:start="283:92" pos:end="283:92"><literal type="number" pos:start="283:92" pos:end="283:92">3</literal></expr>]</index></name></expr></argument>,

                   <argument pos:start="285:20" pos:end="285:27"><expr pos:start="285:20" pos:end="285:27"><name pos:start="285:20" pos:end="285:27"><name pos:start="285:20" pos:end="285:24">cbpcy</name><index pos:start="285:25" pos:end="285:27">[<expr pos:start="285:26" pos:end="285:26"><literal type="number" pos:start="285:26" pos:end="285:26">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="285:30" pos:end="285:37"><expr pos:start="285:30" pos:end="285:37"><name pos:start="285:30" pos:end="285:37"><name pos:start="285:30" pos:end="285:34">cbpcy</name><index pos:start="285:35" pos:end="285:37">[<expr pos:start="285:36" pos:end="285:36"><literal type="number" pos:start="285:36" pos:end="285:36">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="285:40" pos:end="285:47"><expr pos:start="285:40" pos:end="285:47"><name pos:start="285:40" pos:end="285:47"><name pos:start="285:40" pos:end="285:44">cbpcy</name><index pos:start="285:45" pos:end="285:47">[<expr pos:start="285:46" pos:end="285:46"><literal type="number" pos:start="285:46" pos:end="285:46">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="285:50" pos:end="285:57"><expr pos:start="285:50" pos:end="285:57"><name pos:start="285:50" pos:end="285:57"><name pos:start="285:50" pos:end="285:54">cbpcy</name><index pos:start="285:55" pos:end="285:57">[<expr pos:start="285:56" pos:end="285:56"><literal type="number" pos:start="285:56" pos:end="285:56">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="287:1" pos:end="287:6">#<cpp:directive pos:start="287:2" pos:end="287:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="289:13" pos:end="289:65"><expr pos:start="289:13" pos:end="289:64"><operator pos:start="289:13" pos:end="289:13">*</operator><operator pos:start="289:14" pos:end="289:14">(</operator><operator pos:start="289:15" pos:end="289:15">(</operator><name pos:start="289:16" pos:end="289:23">uint32_t</name><operator pos:start="289:24" pos:end="289:24">*</operator><operator pos:start="289:25" pos:end="289:25">)</operator><name pos:start="289:26" pos:end="289:32">p_cbpcy</name><operator pos:start="289:33" pos:end="289:33">)</operator> <operator pos:start="289:35" pos:end="289:35">=</operator> <operator pos:start="289:37" pos:end="289:37">*</operator><operator pos:start="289:38" pos:end="289:38">(</operator><operator pos:start="289:39" pos:end="289:39">(</operator><name pos:start="289:40" pos:end="289:47">uint32_t</name><operator pos:start="289:48" pos:end="289:48">*</operator><operator pos:start="289:49" pos:end="289:49">)</operator><name pos:start="289:50" pos:end="289:63">previous_cbpcy</name><operator pos:start="289:64" pos:end="289:64">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:63"><expr pos:start="291:13" pos:end="291:62"><operator pos:start="291:13" pos:end="291:13">*</operator><operator pos:start="291:14" pos:end="291:14">(</operator><operator pos:start="291:15" pos:end="291:15">(</operator><name pos:start="291:16" pos:end="291:23">uint32_t</name><operator pos:start="291:24" pos:end="291:24">*</operator><operator pos:start="291:25" pos:end="291:25">)</operator><name pos:start="291:26" pos:end="291:39">previous_cbpcy</name><operator pos:start="291:40" pos:end="291:40">)</operator> <operator pos:start="291:42" pos:end="291:42">=</operator> <operator pos:start="291:44" pos:end="291:44">*</operator><operator pos:start="291:45" pos:end="291:45">(</operator><operator pos:start="291:46" pos:end="291:46">(</operator><name pos:start="291:47" pos:end="291:54">uint32_t</name><operator pos:start="291:55" pos:end="291:55">*</operator><operator pos:start="291:56" pos:end="291:56">)</operator><name pos:start="291:57" pos:end="291:61">cbpcy</name><operator pos:start="291:62" pos:end="291:62">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:25"><expr pos:start="293:13" pos:end="293:24"><name pos:start="293:13" pos:end="293:22">current_mb</name><operator pos:start="293:23" pos:end="293:24">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="299:5" pos:end="299:13">return <expr pos:start="299:12" pos:end="299:12"><literal type="number" pos:start="299:12" pos:end="299:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
