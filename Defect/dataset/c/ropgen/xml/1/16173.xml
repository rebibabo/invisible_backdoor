<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16173.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:13"><name pos:start="1:1" pos:end="1:11">DeviceState</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:24">qdev_create</name><parameter_list pos:start="1:25" pos:end="1:57">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:33">BusState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">bus</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><specifier pos:start="1:41" pos:end="1:45">const</specifier> <name pos:start="1:47" pos:end="1:50">char</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">name</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:15">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">dev</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:37"><expr pos:start="9:5" pos:end="9:36"><name pos:start="9:5" pos:end="9:7">dev</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:36"><name pos:start="9:11" pos:end="9:25">qdev_try_create</name><argument_list pos:start="9:26" pos:end="9:36">(<argument pos:start="9:27" pos:end="9:29"><expr pos:start="9:27" pos:end="9:29"><name pos:start="9:27" pos:end="9:29">bus</name></expr></argument>, <argument pos:start="9:32" pos:end="9:35"><expr pos:start="9:32" pos:end="9:35"><name pos:start="9:32" pos:end="9:35">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:13">(<expr pos:start="11:9" pos:end="11:12"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:12">dev</name></expr>)</condition> <block pos:start="11:15" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:78">

        <expr_stmt pos:start="13:9" pos:end="13:78"><expr pos:start="13:9" pos:end="13:77"><call pos:start="13:9" pos:end="13:77"><name pos:start="13:9" pos:end="13:16">hw_error</name><argument_list pos:start="13:17" pos:end="13:77">(<argument pos:start="13:18" pos:end="13:53"><expr pos:start="13:18" pos:end="13:53"><literal type="string" pos:start="13:18" pos:end="13:53">"Unknown device '%s' for bus '%s'\n"</literal></expr></argument>, <argument pos:start="13:56" pos:end="13:59"><expr pos:start="13:56" pos:end="13:59"><name pos:start="13:56" pos:end="13:59">name</name></expr></argument>, <argument pos:start="13:62" pos:end="13:76"><expr pos:start="13:62" pos:end="13:76"><name pos:start="13:62" pos:end="13:76"><name pos:start="13:62" pos:end="13:64">bus</name><operator pos:start="13:65" pos:end="13:66">-&gt;</operator><name pos:start="13:67" pos:end="13:70">info</name><operator pos:start="13:71" pos:end="13:72">-&gt;</operator><name pos:start="13:73" pos:end="13:76">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="19:5" pos:end="19:15">return <expr pos:start="19:12" pos:end="19:14"><name pos:start="19:12" pos:end="19:14">dev</name></expr>;</return>

</block_content>}</block></function>
</unit>
