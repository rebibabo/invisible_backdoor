<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6210.c" pos:tabs="8"><function pos:start="1:1" pos:end="551:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">sdp_parse_line</name><parameter_list pos:start="1:27" pos:end="3:55">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:64"><decl pos:start="1:48" pos:end="1:64"><type pos:start="1:48" pos:end="1:64"><name pos:start="1:48" pos:end="1:60">SDPParseState</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:64">s1</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:37"><decl pos:start="3:28" pos:end="3:37"><type pos:start="3:28" pos:end="3:37"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:37">letter</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:54"><decl pos:start="3:40" pos:end="3:54"><type pos:start="3:40" pos:end="3:54"><specifier pos:start="3:40" pos:end="3:44">const</specifier> <name pos:start="3:46" pos:end="3:49">char</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:54">buf</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="551:1">{<block_content pos:start="7:5" pos:end="549:5">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">RTSPState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">rt</name> <init pos:start="7:19" pos:end="7:32">= <expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:17"><name pos:start="9:10" pos:end="9:13">buf1</name><index pos:start="9:14" pos:end="9:17">[<expr pos:start="9:15" pos:end="9:16"><literal type="number" pos:start="9:15" pos:end="9:16">64</literal></expr>]</index></name></decl>, <decl pos:start="9:20" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:8"/><name pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:26">st_type</name><index pos:start="9:27" pos:end="9:30">[<expr pos:start="9:28" pos:end="9:29"><literal type="number" pos:start="9:28" pos:end="9:29">64</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:8">enum</name> <name pos:start="13:10" pos:end="13:20">AVMediaType</name></name></type> <name pos:start="13:22" pos:end="13:31">codec_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:20">payload_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">AVStream</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:14">RTSPStream</name> <modifier pos:start="19:16" pos:end="19:16">*</modifier></type><name pos:start="19:17" pos:end="19:23">rtsp_st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:24"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:14">RTSPSource</name> <modifier pos:start="21:16" pos:end="21:16">*</modifier></type><name pos:start="21:17" pos:end="21:24">rtsp_src</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:35"><decl pos:start="23:5" pos:end="23:34"><type pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:10">struct</name> <name pos:start="23:12" pos:end="23:27">sockaddr_storage</name></name></type> <name pos:start="23:29" pos:end="23:34">sdp_ip</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:12"><decl pos:start="25:5" pos:end="25:11"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">ttl</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:46"><expr pos:start="29:5" pos:end="29:45"><call pos:start="29:5" pos:end="29:45"><name pos:start="29:5" pos:end="29:11">av_dlog</name><argument_list pos:start="29:12" pos:end="29:45">(<argument pos:start="29:13" pos:end="29:13"><expr pos:start="29:13" pos:end="29:13"><name pos:start="29:13" pos:end="29:13">s</name></expr></argument>, <argument pos:start="29:16" pos:end="29:31"><expr pos:start="29:16" pos:end="29:31"><literal type="string" pos:start="29:16" pos:end="29:31">"sdp: %c='%s'\n"</literal></expr></argument>, <argument pos:start="29:34" pos:end="29:39"><expr pos:start="29:34" pos:end="29:39"><name pos:start="29:34" pos:end="29:39">letter</name></expr></argument>, <argument pos:start="29:42" pos:end="29:44"><expr pos:start="29:42" pos:end="29:44"><name pos:start="29:42" pos:end="29:44">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:12"><expr pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:5">p</name> <operator pos:start="33:7" pos:end="33:7">=</operator> <name pos:start="33:9" pos:end="33:11">buf</name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:15"><if pos:start="35:5" pos:end="37:15">if <condition pos:start="35:8" pos:end="35:40">(<expr pos:start="35:9" pos:end="35:39"><name pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:10">s1</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:22">skip_media</name></name> <operator pos:start="35:24" pos:end="35:25">&amp;&amp;</operator> <name pos:start="35:27" pos:end="35:32">letter</name> <operator pos:start="35:34" pos:end="35:35">!=</operator> <literal type="char" pos:start="35:37" pos:end="35:39">'m'</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:15"><block_content pos:start="37:9" pos:end="37:15">

        <return pos:start="37:9" pos:end="37:15">return;</return></block_content></block></if></if_stmt>

    <switch pos:start="39:5" pos:end="549:5">switch <condition pos:start="39:12" pos:end="39:19">(<expr pos:start="39:13" pos:end="39:18"><name pos:start="39:13" pos:end="39:18">letter</name></expr>)</condition> <block pos:start="39:21" pos:end="549:5">{<block_content pos:start="41:5" pos:end="547:14">

    <case pos:start="41:5" pos:end="41:13">case <expr pos:start="41:10" pos:end="41:12"><literal type="char" pos:start="41:10" pos:end="41:12">'c'</literal></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:41"><expr pos:start="43:9" pos:end="43:40"><call pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:16">get_word</name><argument_list pos:start="43:17" pos:end="43:40">(<argument pos:start="43:18" pos:end="43:21"><expr pos:start="43:18" pos:end="43:21"><name pos:start="43:18" pos:end="43:21">buf1</name></expr></argument>, <argument pos:start="43:24" pos:end="43:35"><expr pos:start="43:24" pos:end="43:35"><sizeof pos:start="43:24" pos:end="43:35">sizeof<argument_list pos:start="43:30" pos:end="43:35">(<argument pos:start="43:31" pos:end="43:34"><expr pos:start="43:31" pos:end="43:34"><name pos:start="43:31" pos:end="43:34">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="43:38" pos:end="43:39"><expr pos:start="43:38" pos:end="43:39"><operator pos:start="43:38" pos:end="43:38">&amp;</operator><name pos:start="43:39" pos:end="43:39">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="47:19"><if pos:start="45:9" pos:end="47:19">if <condition pos:start="45:12" pos:end="45:36">(<expr pos:start="45:13" pos:end="45:35"><call pos:start="45:13" pos:end="45:30"><name pos:start="45:13" pos:end="45:18">strcmp</name><argument_list pos:start="45:19" pos:end="45:30">(<argument pos:start="45:20" pos:end="45:23"><expr pos:start="45:20" pos:end="45:23"><name pos:start="45:20" pos:end="45:23">buf1</name></expr></argument>, <argument pos:start="45:26" pos:end="45:29"><expr pos:start="45:26" pos:end="45:29"><literal type="string" pos:start="45:26" pos:end="45:29">"IN"</literal></expr></argument>)</argument_list></call> <operator pos:start="45:32" pos:end="45:33">!=</operator> <literal type="number" pos:start="45:35" pos:end="45:35">0</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:19"><block_content pos:start="47:13" pos:end="47:19">

            <return pos:start="47:13" pos:end="47:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:41"><expr pos:start="49:9" pos:end="49:40"><call pos:start="49:9" pos:end="49:40"><name pos:start="49:9" pos:end="49:16">get_word</name><argument_list pos:start="49:17" pos:end="49:40">(<argument pos:start="49:18" pos:end="49:21"><expr pos:start="49:18" pos:end="49:21"><name pos:start="49:18" pos:end="49:21">buf1</name></expr></argument>, <argument pos:start="49:24" pos:end="49:35"><expr pos:start="49:24" pos:end="49:35"><sizeof pos:start="49:24" pos:end="49:35">sizeof<argument_list pos:start="49:30" pos:end="49:35">(<argument pos:start="49:31" pos:end="49:34"><expr pos:start="49:31" pos:end="49:34"><name pos:start="49:31" pos:end="49:34">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="49:38" pos:end="49:39"><expr pos:start="49:38" pos:end="49:39"><operator pos:start="49:38" pos:end="49:38">&amp;</operator><name pos:start="49:39" pos:end="49:39">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="53:19"><if pos:start="51:9" pos:end="53:19">if <condition pos:start="51:12" pos:end="51:55">(<expr pos:start="51:13" pos:end="51:54"><call pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:18">strcmp</name><argument_list pos:start="51:19" pos:end="51:31">(<argument pos:start="51:20" pos:end="51:23"><expr pos:start="51:20" pos:end="51:23"><name pos:start="51:20" pos:end="51:23">buf1</name></expr></argument>, <argument pos:start="51:26" pos:end="51:30"><expr pos:start="51:26" pos:end="51:30"><literal type="string" pos:start="51:26" pos:end="51:30">"IP4"</literal></expr></argument>)</argument_list></call> <operator pos:start="51:33" pos:end="51:34">&amp;&amp;</operator> <call pos:start="51:36" pos:end="51:54"><name pos:start="51:36" pos:end="51:41">strcmp</name><argument_list pos:start="51:42" pos:end="51:54">(<argument pos:start="51:43" pos:end="51:46"><expr pos:start="51:43" pos:end="51:46"><name pos:start="51:43" pos:end="51:46">buf1</name></expr></argument>, <argument pos:start="51:49" pos:end="51:53"><expr pos:start="51:49" pos:end="51:53"><literal type="string" pos:start="51:49" pos:end="51:53">"IP6"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:19"><block_content pos:start="53:13" pos:end="53:19">

            <return pos:start="53:13" pos:end="53:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:50"><expr pos:start="55:9" pos:end="55:49"><call pos:start="55:9" pos:end="55:49"><name pos:start="55:9" pos:end="55:20">get_word_sep</name><argument_list pos:start="55:21" pos:end="55:49">(<argument pos:start="55:22" pos:end="55:25"><expr pos:start="55:22" pos:end="55:25"><name pos:start="55:22" pos:end="55:25">buf1</name></expr></argument>, <argument pos:start="55:28" pos:end="55:39"><expr pos:start="55:28" pos:end="55:39"><sizeof pos:start="55:28" pos:end="55:39">sizeof<argument_list pos:start="55:34" pos:end="55:39">(<argument pos:start="55:35" pos:end="55:38"><expr pos:start="55:35" pos:end="55:38"><name pos:start="55:35" pos:end="55:38">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="55:42" pos:end="55:44"><expr pos:start="55:42" pos:end="55:44"><literal type="string" pos:start="55:42" pos:end="55:44">"/"</literal></expr></argument>, <argument pos:start="55:47" pos:end="55:48"><expr pos:start="55:47" pos:end="55:48"><operator pos:start="55:47" pos:end="55:47">&amp;</operator><name pos:start="55:48" pos:end="55:48">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="59:19"><if pos:start="57:9" pos:end="59:19">if <condition pos:start="57:12" pos:end="57:40">(<expr pos:start="57:13" pos:end="57:39"><call pos:start="57:13" pos:end="57:39"><name pos:start="57:13" pos:end="57:24">get_sockaddr</name><argument_list pos:start="57:25" pos:end="57:39">(<argument pos:start="57:26" pos:end="57:29"><expr pos:start="57:26" pos:end="57:29"><name pos:start="57:26" pos:end="57:29">buf1</name></expr></argument>, <argument pos:start="57:32" pos:end="57:38"><expr pos:start="57:32" pos:end="57:38"><operator pos:start="57:32" pos:end="57:32">&amp;</operator><name pos:start="57:33" pos:end="57:38">sdp_ip</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:19"><block_content pos:start="59:13" pos:end="59:19">

            <return pos:start="59:13" pos:end="59:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:17"><expr pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:11">ttl</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <literal type="number" pos:start="61:15" pos:end="61:16">16</literal></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="71:9"><if pos:start="63:9" pos:end="71:9">if <condition pos:start="63:12" pos:end="63:22">(<expr pos:start="63:13" pos:end="63:21"><operator pos:start="63:13" pos:end="63:13">*</operator><name pos:start="63:14" pos:end="63:14">p</name> <operator pos:start="63:16" pos:end="63:17">==</operator> <literal type="char" pos:start="63:19" pos:end="63:21">'/'</literal></expr>)</condition> <block pos:start="63:24" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:29">

            <expr_stmt pos:start="65:13" pos:end="65:16"><expr pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:13">p</name><operator pos:start="65:14" pos:end="65:15">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:54"><expr pos:start="67:13" pos:end="67:53"><call pos:start="67:13" pos:end="67:53"><name pos:start="67:13" pos:end="67:24">get_word_sep</name><argument_list pos:start="67:25" pos:end="67:53">(<argument pos:start="67:26" pos:end="67:29"><expr pos:start="67:26" pos:end="67:29"><name pos:start="67:26" pos:end="67:29">buf1</name></expr></argument>, <argument pos:start="67:32" pos:end="67:43"><expr pos:start="67:32" pos:end="67:43"><sizeof pos:start="67:32" pos:end="67:43">sizeof<argument_list pos:start="67:38" pos:end="67:43">(<argument pos:start="67:39" pos:end="67:42"><expr pos:start="67:39" pos:end="67:42"><name pos:start="67:39" pos:end="67:42">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="67:46" pos:end="67:48"><expr pos:start="67:46" pos:end="67:48"><literal type="string" pos:start="67:46" pos:end="67:48">"/"</literal></expr></argument>, <argument pos:start="67:51" pos:end="67:52"><expr pos:start="67:51" pos:end="67:52"><operator pos:start="67:51" pos:end="67:51">&amp;</operator><name pos:start="67:52" pos:end="67:52">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:29"><expr pos:start="69:13" pos:end="69:28"><name pos:start="69:13" pos:end="69:15">ttl</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:28"><name pos:start="69:19" pos:end="69:22">atoi</name><argument_list pos:start="69:23" pos:end="69:28">(<argument pos:start="69:24" pos:end="69:27"><expr pos:start="69:24" pos:end="69:27"><name pos:start="69:24" pos:end="69:27">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="73:9" pos:end="87:9"><if pos:start="73:9" pos:end="79:9">if <condition pos:start="73:12" pos:end="73:31">(<expr pos:start="73:13" pos:end="73:30"><name pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:25">nb_streams</name></name> <operator pos:start="73:27" pos:end="73:28">==</operator> <literal type="number" pos:start="73:30" pos:end="73:30">0</literal></expr>)</condition> <block pos:start="73:33" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:34">

            <expr_stmt pos:start="75:13" pos:end="75:36"><expr pos:start="75:13" pos:end="75:35"><name pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:14">s1</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:26">default_ip</name></name> <operator pos:start="75:28" pos:end="75:28">=</operator> <name pos:start="75:30" pos:end="75:35">sdp_ip</name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:34"><expr pos:start="77:13" pos:end="77:33"><name pos:start="77:13" pos:end="77:27"><name pos:start="77:13" pos:end="77:14">s1</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:27">default_ttl</name></name> <operator pos:start="77:29" pos:end="77:29">=</operator> <name pos:start="77:31" pos:end="77:33">ttl</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="79:11" pos:end="87:9">else <block pos:start="79:16" pos:end="87:9">{<block_content pos:start="81:13" pos:end="85:35">

            <expr_stmt pos:start="81:13" pos:end="81:64"><expr pos:start="81:13" pos:end="81:63"><name pos:start="81:13" pos:end="81:19">rtsp_st</name> <operator pos:start="81:21" pos:end="81:21">=</operator> <name pos:start="81:23" pos:end="81:63"><name pos:start="81:23" pos:end="81:24">rt</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:38">rtsp_streams</name><index pos:start="81:39" pos:end="81:63">[<expr pos:start="81:40" pos:end="81:62"><name pos:start="81:40" pos:end="81:58"><name pos:start="81:40" pos:end="81:41">rt</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:58">nb_rtsp_streams</name></name> <operator pos:start="81:60" pos:end="81:60">-</operator> <literal type="number" pos:start="81:62" pos:end="81:62">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:37"><expr pos:start="83:13" pos:end="83:36"><name pos:start="83:13" pos:end="83:27"><name pos:start="83:13" pos:end="83:19">rtsp_st</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:27">sdp_ip</name></name> <operator pos:start="83:29" pos:end="83:29">=</operator> <name pos:start="83:31" pos:end="83:36">sdp_ip</name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:35"><expr pos:start="85:13" pos:end="85:34"><name pos:start="85:13" pos:end="85:28"><name pos:start="85:13" pos:end="85:19">rtsp_st</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:28">sdp_ttl</name></name> <operator pos:start="85:30" pos:end="85:30">=</operator> <name pos:start="85:32" pos:end="85:34">ttl</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    <case pos:start="91:5" pos:end="91:13">case <expr pos:start="91:10" pos:end="91:12"><literal type="char" pos:start="91:10" pos:end="91:12">'s'</literal></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:49"><expr pos:start="93:9" pos:end="93:48"><call pos:start="93:9" pos:end="93:48"><name pos:start="93:9" pos:end="93:19">av_dict_set</name><argument_list pos:start="93:20" pos:end="93:48">(<argument pos:start="93:21" pos:end="93:32"><expr pos:start="93:21" pos:end="93:32"><operator pos:start="93:21" pos:end="93:21">&amp;</operator><name pos:start="93:22" pos:end="93:32"><name pos:start="93:22" pos:end="93:22">s</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:32">metadata</name></name></expr></argument>, <argument pos:start="93:35" pos:end="93:41"><expr pos:start="93:35" pos:end="93:41"><literal type="string" pos:start="93:35" pos:end="93:41">"title"</literal></expr></argument>, <argument pos:start="93:44" pos:end="93:44"><expr pos:start="93:44" pos:end="93:44"><name pos:start="93:44" pos:end="93:44">p</name></expr></argument>, <argument pos:start="93:47" pos:end="93:47"><expr pos:start="93:47" pos:end="93:47"><literal type="number" pos:start="93:47" pos:end="93:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <case pos:start="97:5" pos:end="97:13">case <expr pos:start="97:10" pos:end="97:12"><literal type="char" pos:start="97:10" pos:end="97:12">'i'</literal></expr>:</case>

        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if <condition pos:start="99:12" pos:end="99:31">(<expr pos:start="99:13" pos:end="99:30"><name pos:start="99:13" pos:end="99:25"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:25">nb_streams</name></name> <operator pos:start="99:27" pos:end="99:28">==</operator> <literal type="number" pos:start="99:30" pos:end="99:30">0</literal></expr>)</condition> <block pos:start="99:33" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:18">

            <expr_stmt pos:start="101:13" pos:end="101:55"><expr pos:start="101:13" pos:end="101:54"><call pos:start="101:13" pos:end="101:54"><name pos:start="101:13" pos:end="101:23">av_dict_set</name><argument_list pos:start="101:24" pos:end="101:54">(<argument pos:start="101:25" pos:end="101:36"><expr pos:start="101:25" pos:end="101:36"><operator pos:start="101:25" pos:end="101:25">&amp;</operator><name pos:start="101:26" pos:end="101:36"><name pos:start="101:26" pos:end="101:26">s</name><operator pos:start="101:27" pos:end="101:28">-&gt;</operator><name pos:start="101:29" pos:end="101:36">metadata</name></name></expr></argument>, <argument pos:start="101:39" pos:end="101:47"><expr pos:start="101:39" pos:end="101:47"><literal type="string" pos:start="101:39" pos:end="101:47">"comment"</literal></expr></argument>, <argument pos:start="101:50" pos:end="101:50"><expr pos:start="101:50" pos:end="101:50"><name pos:start="101:50" pos:end="101:50">p</name></expr></argument>, <argument pos:start="101:53" pos:end="101:53"><expr pos:start="101:53" pos:end="101:53"><literal type="number" pos:start="101:53" pos:end="101:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>

    <case pos:start="109:5" pos:end="109:13">case <expr pos:start="109:10" pos:end="109:12"><literal type="char" pos:start="109:10" pos:end="109:12">'m'</literal></expr>:</case>

        <comment type="block" pos:start="111:9" pos:end="111:24">/* new stream */</comment>

        <expr_stmt pos:start="113:9" pos:end="113:28"><expr pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:22"><name pos:start="113:9" pos:end="113:10">s1</name><operator pos:start="113:11" pos:end="113:12">-&gt;</operator><name pos:start="113:13" pos:end="113:22">skip_media</name></name>  <operator pos:start="113:25" pos:end="113:25">=</operator> <literal type="number" pos:start="113:27" pos:end="113:27">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:28"><expr pos:start="115:9" pos:end="115:27"><name pos:start="115:9" pos:end="115:21"><name pos:start="115:9" pos:end="115:10">s1</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:21">seen_fmtp</name></name>   <operator pos:start="115:25" pos:end="115:25">=</operator> <literal type="number" pos:start="115:27" pos:end="115:27">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:28"><expr pos:start="117:9" pos:end="117:27"><name pos:start="117:9" pos:end="117:23"><name pos:start="117:9" pos:end="117:10">s1</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:23">seen_rtpmap</name></name> <operator pos:start="117:25" pos:end="117:25">=</operator> <literal type="number" pos:start="117:27" pos:end="117:27">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:42"><expr pos:start="119:9" pos:end="119:41"><name pos:start="119:9" pos:end="119:18">codec_type</name> <operator pos:start="119:20" pos:end="119:20">=</operator> <name pos:start="119:22" pos:end="119:41">AVMEDIA_TYPE_UNKNOWN</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:47"><expr pos:start="121:9" pos:end="121:46"><call pos:start="121:9" pos:end="121:46"><name pos:start="121:9" pos:end="121:16">get_word</name><argument_list pos:start="121:17" pos:end="121:46">(<argument pos:start="121:18" pos:end="121:24"><expr pos:start="121:18" pos:end="121:24"><name pos:start="121:18" pos:end="121:24">st_type</name></expr></argument>, <argument pos:start="121:27" pos:end="121:41"><expr pos:start="121:27" pos:end="121:41"><sizeof pos:start="121:27" pos:end="121:41">sizeof<argument_list pos:start="121:33" pos:end="121:41">(<argument pos:start="121:34" pos:end="121:40"><expr pos:start="121:34" pos:end="121:40"><name pos:start="121:34" pos:end="121:40">st_type</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="121:44" pos:end="121:45"><expr pos:start="121:44" pos:end="121:45"><operator pos:start="121:44" pos:end="121:44">&amp;</operator><name pos:start="121:45" pos:end="121:45">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="135:9"><if pos:start="123:9" pos:end="127:9">if <condition pos:start="123:12" pos:end="123:38">(<expr pos:start="123:13" pos:end="123:37"><operator pos:start="123:13" pos:end="123:13">!</operator><call pos:start="123:14" pos:end="123:37"><name pos:start="123:14" pos:end="123:19">strcmp</name><argument_list pos:start="123:20" pos:end="123:37">(<argument pos:start="123:21" pos:end="123:27"><expr pos:start="123:21" pos:end="123:27"><name pos:start="123:21" pos:end="123:27">st_type</name></expr></argument>, <argument pos:start="123:30" pos:end="123:36"><expr pos:start="123:30" pos:end="123:36"><literal type="string" pos:start="123:30" pos:end="123:36">"audio"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:40" pos:end="127:9">{<block_content pos:start="125:13" pos:end="125:44">

            <expr_stmt pos:start="125:13" pos:end="125:44"><expr pos:start="125:13" pos:end="125:43"><name pos:start="125:13" pos:end="125:22">codec_type</name> <operator pos:start="125:24" pos:end="125:24">=</operator> <name pos:start="125:26" pos:end="125:43">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="127:11" pos:end="131:9">else if <condition pos:start="127:19" pos:end="127:45">(<expr pos:start="127:20" pos:end="127:44"><operator pos:start="127:20" pos:end="127:20">!</operator><call pos:start="127:21" pos:end="127:44"><name pos:start="127:21" pos:end="127:26">strcmp</name><argument_list pos:start="127:27" pos:end="127:44">(<argument pos:start="127:28" pos:end="127:34"><expr pos:start="127:28" pos:end="127:34"><name pos:start="127:28" pos:end="127:34">st_type</name></expr></argument>, <argument pos:start="127:37" pos:end="127:43"><expr pos:start="127:37" pos:end="127:43"><literal type="string" pos:start="127:37" pos:end="127:43">"video"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="127:47" pos:end="131:9">{<block_content pos:start="129:13" pos:end="129:44">

            <expr_stmt pos:start="129:13" pos:end="129:44"><expr pos:start="129:13" pos:end="129:43"><name pos:start="129:13" pos:end="129:22">codec_type</name> <operator pos:start="129:24" pos:end="129:24">=</operator> <name pos:start="129:26" pos:end="129:43">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="131:11" pos:end="135:9">else if <condition pos:start="131:19" pos:end="131:51">(<expr pos:start="131:20" pos:end="131:50"><operator pos:start="131:20" pos:end="131:20">!</operator><call pos:start="131:21" pos:end="131:50"><name pos:start="131:21" pos:end="131:26">strcmp</name><argument_list pos:start="131:27" pos:end="131:50">(<argument pos:start="131:28" pos:end="131:34"><expr pos:start="131:28" pos:end="131:34"><name pos:start="131:28" pos:end="131:34">st_type</name></expr></argument>, <argument pos:start="131:37" pos:end="131:49"><expr pos:start="131:37" pos:end="131:49"><literal type="string" pos:start="131:37" pos:end="131:49">"application"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="131:53" pos:end="135:9">{<block_content pos:start="133:13" pos:end="133:43">

            <expr_stmt pos:start="133:13" pos:end="133:43"><expr pos:start="133:13" pos:end="133:42"><name pos:start="133:13" pos:end="133:22">codec_type</name> <operator pos:start="133:24" pos:end="133:24">=</operator> <name pos:start="133:26" pos:end="133:42">AVMEDIA_TYPE_DATA</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="137:9" pos:end="143:9"><if pos:start="137:9" pos:end="143:9">if <condition pos:start="137:12" pos:end="137:93">(<expr pos:start="137:13" pos:end="137:92"><name pos:start="137:13" pos:end="137:22">codec_type</name> <operator pos:start="137:24" pos:end="137:25">==</operator> <name pos:start="137:27" pos:end="137:46">AVMEDIA_TYPE_UNKNOWN</name> <operator pos:start="137:48" pos:end="137:49">||</operator> <operator pos:start="137:51" pos:end="137:51">!</operator><operator pos:start="137:52" pos:end="137:52">(</operator><name pos:start="137:53" pos:end="137:71"><name pos:start="137:53" pos:end="137:54">rt</name><operator pos:start="137:55" pos:end="137:56">-&gt;</operator><name pos:start="137:57" pos:end="137:71">media_type_mask</name></name> <operator pos:start="137:73" pos:end="137:73">&amp;</operator> <operator pos:start="137:75" pos:end="137:75">(</operator><literal type="number" pos:start="137:76" pos:end="137:76">1</literal> <operator pos:start="137:78" pos:end="137:79">&lt;&lt;</operator> <name pos:start="137:81" pos:end="137:90">codec_type</name><operator pos:start="137:91" pos:end="137:91">)</operator><operator pos:start="137:92" pos:end="137:92">)</operator></expr>)</condition> <block pos:start="137:95" pos:end="143:9">{<block_content pos:start="139:13" pos:end="141:19">

            <expr_stmt pos:start="139:13" pos:end="139:31"><expr pos:start="139:13" pos:end="139:30"><name pos:start="139:13" pos:end="139:26"><name pos:start="139:13" pos:end="139:14">s1</name><operator pos:start="139:15" pos:end="139:16">-&gt;</operator><name pos:start="139:17" pos:end="139:26">skip_media</name></name> <operator pos:start="139:28" pos:end="139:28">=</operator> <literal type="number" pos:start="139:30" pos:end="139:30">1</literal></expr>;</expr_stmt>

            <return pos:start="141:13" pos:end="141:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:49"><expr pos:start="145:9" pos:end="145:48"><name pos:start="145:9" pos:end="145:15">rtsp_st</name> <operator pos:start="145:17" pos:end="145:17">=</operator> <call pos:start="145:19" pos:end="145:48"><name pos:start="145:19" pos:end="145:28">av_mallocz</name><argument_list pos:start="145:29" pos:end="145:48">(<argument pos:start="145:30" pos:end="145:47"><expr pos:start="145:30" pos:end="145:47"><sizeof pos:start="145:30" pos:end="145:47">sizeof<argument_list pos:start="145:36" pos:end="145:47">(<argument pos:start="145:37" pos:end="145:46"><expr pos:start="145:37" pos:end="145:46"><name pos:start="145:37" pos:end="145:46">RTSPStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="149:19"><if pos:start="147:9" pos:end="149:19">if <condition pos:start="147:12" pos:end="147:21">(<expr pos:start="147:13" pos:end="147:20"><operator pos:start="147:13" pos:end="147:13">!</operator><name pos:start="147:14" pos:end="147:20">rtsp_st</name></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:19"><block_content pos:start="149:13" pos:end="149:19">

            <return pos:start="149:13" pos:end="149:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:35"><expr pos:start="151:9" pos:end="151:34"><name pos:start="151:9" pos:end="151:29"><name pos:start="151:9" pos:end="151:15">rtsp_st</name><operator pos:start="151:16" pos:end="151:17">-&gt;</operator><name pos:start="151:18" pos:end="151:29">stream_index</name></name> <operator pos:start="151:31" pos:end="151:31">=</operator> <operator pos:start="151:33" pos:end="151:33">-</operator><literal type="number" pos:start="151:34" pos:end="151:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:71"><expr pos:start="153:9" pos:end="153:70"><call pos:start="153:9" pos:end="153:70"><name pos:start="153:9" pos:end="153:20">dynarray_add</name><argument_list pos:start="153:21" pos:end="153:70">(<argument pos:start="153:22" pos:end="153:38"><expr pos:start="153:22" pos:end="153:38"><operator pos:start="153:22" pos:end="153:22">&amp;</operator><name pos:start="153:23" pos:end="153:38"><name pos:start="153:23" pos:end="153:24">rt</name><operator pos:start="153:25" pos:end="153:26">-&gt;</operator><name pos:start="153:27" pos:end="153:38">rtsp_streams</name></name></expr></argument>, <argument pos:start="153:41" pos:end="153:60"><expr pos:start="153:41" pos:end="153:60"><operator pos:start="153:41" pos:end="153:41">&amp;</operator><name pos:start="153:42" pos:end="153:60"><name pos:start="153:42" pos:end="153:43">rt</name><operator pos:start="153:44" pos:end="153:45">-&gt;</operator><name pos:start="153:46" pos:end="153:60">nb_rtsp_streams</name></name></expr></argument>, <argument pos:start="153:63" pos:end="153:69"><expr pos:start="153:63" pos:end="153:69"><name pos:start="153:63" pos:end="153:69">rtsp_st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:41"><expr pos:start="157:9" pos:end="157:40"><name pos:start="157:9" pos:end="157:23"><name pos:start="157:9" pos:end="157:15">rtsp_st</name><operator pos:start="157:16" pos:end="157:17">-&gt;</operator><name pos:start="157:18" pos:end="157:23">sdp_ip</name></name> <operator pos:start="157:25" pos:end="157:25">=</operator> <name pos:start="157:27" pos:end="157:40"><name pos:start="157:27" pos:end="157:28">s1</name><operator pos:start="157:29" pos:end="157:30">-&gt;</operator><name pos:start="157:31" pos:end="157:40">default_ip</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:43"><expr pos:start="159:9" pos:end="159:42"><name pos:start="159:9" pos:end="159:24"><name pos:start="159:9" pos:end="159:15">rtsp_st</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:24">sdp_ttl</name></name> <operator pos:start="159:26" pos:end="159:26">=</operator> <name pos:start="159:28" pos:end="159:42"><name pos:start="159:28" pos:end="159:29">s1</name><operator pos:start="159:30" pos:end="159:31">-&gt;</operator><name pos:start="159:32" pos:end="159:42">default_ttl</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="163:9" pos:end="169:69"><expr pos:start="163:9" pos:end="169:68"><call pos:start="163:9" pos:end="169:68"><name pos:start="163:9" pos:end="163:33">copy_default_source_addrs</name><argument_list pos:start="163:34" pos:end="169:68">(<argument pos:start="163:35" pos:end="163:66"><expr pos:start="163:35" pos:end="163:66"><name pos:start="163:35" pos:end="163:66"><name pos:start="163:35" pos:end="163:36">s1</name><operator pos:start="163:37" pos:end="163:38">-&gt;</operator><name pos:start="163:39" pos:end="163:66">default_include_source_addrs</name></name></expr></argument>,

                                  <argument pos:start="165:35" pos:end="165:69"><expr pos:start="165:35" pos:end="165:69"><name pos:start="165:35" pos:end="165:69"><name pos:start="165:35" pos:end="165:36">s1</name><operator pos:start="165:37" pos:end="165:38">-&gt;</operator><name pos:start="165:39" pos:end="165:69">nb_default_include_source_addrs</name></name></expr></argument>,

                                  <argument pos:start="167:35" pos:end="167:64"><expr pos:start="167:35" pos:end="167:64"><operator pos:start="167:35" pos:end="167:35">&amp;</operator><name pos:start="167:36" pos:end="167:64"><name pos:start="167:36" pos:end="167:42">rtsp_st</name><operator pos:start="167:43" pos:end="167:44">-&gt;</operator><name pos:start="167:45" pos:end="167:64">include_source_addrs</name></name></expr></argument>,

                                  <argument pos:start="169:35" pos:end="169:67"><expr pos:start="169:35" pos:end="169:67"><operator pos:start="169:35" pos:end="169:35">&amp;</operator><name pos:start="169:36" pos:end="169:67"><name pos:start="169:36" pos:end="169:42">rtsp_st</name><operator pos:start="169:43" pos:end="169:44">-&gt;</operator><name pos:start="169:45" pos:end="169:67">nb_include_source_addrs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="177:69"><expr pos:start="171:9" pos:end="177:68"><call pos:start="171:9" pos:end="177:68"><name pos:start="171:9" pos:end="171:33">copy_default_source_addrs</name><argument_list pos:start="171:34" pos:end="177:68">(<argument pos:start="171:35" pos:end="171:66"><expr pos:start="171:35" pos:end="171:66"><name pos:start="171:35" pos:end="171:66"><name pos:start="171:35" pos:end="171:36">s1</name><operator pos:start="171:37" pos:end="171:38">-&gt;</operator><name pos:start="171:39" pos:end="171:66">default_exclude_source_addrs</name></name></expr></argument>,

                                  <argument pos:start="173:35" pos:end="173:69"><expr pos:start="173:35" pos:end="173:69"><name pos:start="173:35" pos:end="173:69"><name pos:start="173:35" pos:end="173:36">s1</name><operator pos:start="173:37" pos:end="173:38">-&gt;</operator><name pos:start="173:39" pos:end="173:69">nb_default_exclude_source_addrs</name></name></expr></argument>,

                                  <argument pos:start="175:35" pos:end="175:64"><expr pos:start="175:35" pos:end="175:64"><operator pos:start="175:35" pos:end="175:35">&amp;</operator><name pos:start="175:36" pos:end="175:64"><name pos:start="175:36" pos:end="175:42">rtsp_st</name><operator pos:start="175:43" pos:end="175:44">-&gt;</operator><name pos:start="175:45" pos:end="175:64">exclude_source_addrs</name></name></expr></argument>,

                                  <argument pos:start="177:35" pos:end="177:67"><expr pos:start="177:35" pos:end="177:67"><operator pos:start="177:35" pos:end="177:35">&amp;</operator><name pos:start="177:36" pos:end="177:67"><name pos:start="177:36" pos:end="177:42">rtsp_st</name><operator pos:start="177:43" pos:end="177:44">-&gt;</operator><name pos:start="177:45" pos:end="177:67">nb_exclude_source_addrs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="181:9" pos:end="181:41"><expr pos:start="181:9" pos:end="181:40"><call pos:start="181:9" pos:end="181:40"><name pos:start="181:9" pos:end="181:16">get_word</name><argument_list pos:start="181:17" pos:end="181:40">(<argument pos:start="181:18" pos:end="181:21"><expr pos:start="181:18" pos:end="181:21"><name pos:start="181:18" pos:end="181:21">buf1</name></expr></argument>, <argument pos:start="181:24" pos:end="181:35"><expr pos:start="181:24" pos:end="181:35"><sizeof pos:start="181:24" pos:end="181:35">sizeof<argument_list pos:start="181:30" pos:end="181:35">(<argument pos:start="181:31" pos:end="181:34"><expr pos:start="181:31" pos:end="181:34"><name pos:start="181:31" pos:end="181:34">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="181:38" pos:end="181:39"><expr pos:start="181:38" pos:end="181:39"><operator pos:start="181:38" pos:end="181:38">&amp;</operator><name pos:start="181:39" pos:end="181:39">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="181:43" pos:end="181:52">/* port */</comment>

        <expr_stmt pos:start="183:9" pos:end="183:39"><expr pos:start="183:9" pos:end="183:38"><name pos:start="183:9" pos:end="183:25"><name pos:start="183:9" pos:end="183:15">rtsp_st</name><operator pos:start="183:16" pos:end="183:17">-&gt;</operator><name pos:start="183:18" pos:end="183:25">sdp_port</name></name> <operator pos:start="183:27" pos:end="183:27">=</operator> <call pos:start="183:29" pos:end="183:38"><name pos:start="183:29" pos:end="183:32">atoi</name><argument_list pos:start="183:33" pos:end="183:38">(<argument pos:start="183:34" pos:end="183:37"><expr pos:start="183:34" pos:end="183:37"><name pos:start="183:34" pos:end="183:37">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="187:9" pos:end="187:41"><expr pos:start="187:9" pos:end="187:40"><call pos:start="187:9" pos:end="187:40"><name pos:start="187:9" pos:end="187:16">get_word</name><argument_list pos:start="187:17" pos:end="187:40">(<argument pos:start="187:18" pos:end="187:21"><expr pos:start="187:18" pos:end="187:21"><name pos:start="187:18" pos:end="187:21">buf1</name></expr></argument>, <argument pos:start="187:24" pos:end="187:35"><expr pos:start="187:24" pos:end="187:35"><sizeof pos:start="187:24" pos:end="187:35">sizeof<argument_list pos:start="187:30" pos:end="187:35">(<argument pos:start="187:31" pos:end="187:34"><expr pos:start="187:31" pos:end="187:34"><name pos:start="187:31" pos:end="187:34">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="187:38" pos:end="187:39"><expr pos:start="187:38" pos:end="187:39"><operator pos:start="187:38" pos:end="187:38">&amp;</operator><name pos:start="187:39" pos:end="187:39">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="187:43" pos:end="187:56">/* protocol */</comment>

        <if_stmt pos:start="189:9" pos:end="195:34"><if pos:start="189:9" pos:end="191:47">if <condition pos:start="189:12" pos:end="189:33">(<expr pos:start="189:13" pos:end="189:32"><operator pos:start="189:13" pos:end="189:13">!</operator><call pos:start="189:14" pos:end="189:32"><name pos:start="189:14" pos:end="189:19">strcmp</name><argument_list pos:start="189:20" pos:end="189:32">(<argument pos:start="189:21" pos:end="189:24"><expr pos:start="189:21" pos:end="189:24"><name pos:start="189:21" pos:end="189:24">buf1</name></expr></argument>, <argument pos:start="189:27" pos:end="189:31"><expr pos:start="189:27" pos:end="189:31"><literal type="string" pos:start="189:27" pos:end="189:31">"udp"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="191:47"><block_content pos:start="191:13" pos:end="191:47">

            <expr_stmt pos:start="191:13" pos:end="191:47"><expr pos:start="191:13" pos:end="191:46"><name pos:start="191:13" pos:end="191:25"><name pos:start="191:13" pos:end="191:14">rt</name><operator pos:start="191:15" pos:end="191:16">-&gt;</operator><name pos:start="191:17" pos:end="191:25">transport</name></name> <operator pos:start="191:27" pos:end="191:27">=</operator> <name pos:start="191:29" pos:end="191:46">RTSP_TRANSPORT_RAW</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="193:9" pos:end="195:34">else if <condition pos:start="193:17" pos:end="193:65">(<expr pos:start="193:18" pos:end="193:64"><call pos:start="193:18" pos:end="193:38"><name pos:start="193:18" pos:end="193:23">strstr</name><argument_list pos:start="193:24" pos:end="193:38">(<argument pos:start="193:25" pos:end="193:28"><expr pos:start="193:25" pos:end="193:28"><name pos:start="193:25" pos:end="193:28">buf1</name></expr></argument>, <argument pos:start="193:31" pos:end="193:37"><expr pos:start="193:31" pos:end="193:37"><literal type="string" pos:start="193:31" pos:end="193:37">"/AVPF"</literal></expr></argument>)</argument_list></call> <operator pos:start="193:40" pos:end="193:41">||</operator> <call pos:start="193:43" pos:end="193:64"><name pos:start="193:43" pos:end="193:48">strstr</name><argument_list pos:start="193:49" pos:end="193:64">(<argument pos:start="193:50" pos:end="193:53"><expr pos:start="193:50" pos:end="193:53"><name pos:start="193:50" pos:end="193:53">buf1</name></expr></argument>, <argument pos:start="193:56" pos:end="193:63"><expr pos:start="193:56" pos:end="193:63"><literal type="string" pos:start="193:56" pos:end="193:63">"/SAVPF"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:34"><block_content pos:start="195:13" pos:end="195:34">

            <expr_stmt pos:start="195:13" pos:end="195:34"><expr pos:start="195:13" pos:end="195:33"><name pos:start="195:13" pos:end="195:29"><name pos:start="195:13" pos:end="195:19">rtsp_st</name><operator pos:start="195:20" pos:end="195:21">-&gt;</operator><name pos:start="195:22" pos:end="195:29">feedback</name></name> <operator pos:start="195:31" pos:end="195:31">=</operator> <literal type="number" pos:start="195:33" pos:end="195:33">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="199:9" pos:end="199:41">/* XXX: handle list of formats */</comment>

        <expr_stmt pos:start="201:9" pos:end="201:41"><expr pos:start="201:9" pos:end="201:40"><call pos:start="201:9" pos:end="201:40"><name pos:start="201:9" pos:end="201:16">get_word</name><argument_list pos:start="201:17" pos:end="201:40">(<argument pos:start="201:18" pos:end="201:21"><expr pos:start="201:18" pos:end="201:21"><name pos:start="201:18" pos:end="201:21">buf1</name></expr></argument>, <argument pos:start="201:24" pos:end="201:35"><expr pos:start="201:24" pos:end="201:35"><sizeof pos:start="201:24" pos:end="201:35">sizeof<argument_list pos:start="201:30" pos:end="201:35">(<argument pos:start="201:31" pos:end="201:34"><expr pos:start="201:31" pos:end="201:34"><name pos:start="201:31" pos:end="201:34">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="201:38" pos:end="201:39"><expr pos:start="201:38" pos:end="201:39"><operator pos:start="201:38" pos:end="201:38">&amp;</operator><name pos:start="201:39" pos:end="201:39">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="201:43" pos:end="201:59">/* format list */</comment>

        <expr_stmt pos:start="203:9" pos:end="203:47"><expr pos:start="203:9" pos:end="203:46"><name pos:start="203:9" pos:end="203:33"><name pos:start="203:9" pos:end="203:15">rtsp_st</name><operator pos:start="203:16" pos:end="203:17">-&gt;</operator><name pos:start="203:18" pos:end="203:33">sdp_payload_type</name></name> <operator pos:start="203:35" pos:end="203:35">=</operator> <call pos:start="203:37" pos:end="203:46"><name pos:start="203:37" pos:end="203:40">atoi</name><argument_list pos:start="203:41" pos:end="203:46">(<argument pos:start="203:42" pos:end="203:45"><expr pos:start="203:42" pos:end="203:45"><name pos:start="203:42" pos:end="203:45">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="207:9" pos:end="285:9"><if pos:start="207:9" pos:end="233:9">if <condition pos:start="207:12" pos:end="207:72">(<expr pos:start="207:13" pos:end="207:71"><operator pos:start="207:13" pos:end="207:13">!</operator><call pos:start="207:14" pos:end="207:71"><name pos:start="207:14" pos:end="207:19">strcmp</name><argument_list pos:start="207:20" pos:end="207:71">(<argument pos:start="207:21" pos:end="207:62"><expr pos:start="207:21" pos:end="207:62"><call pos:start="207:21" pos:end="207:62"><name pos:start="207:21" pos:end="207:35">ff_rtp_enc_name</name><argument_list pos:start="207:36" pos:end="207:62">(<argument pos:start="207:37" pos:end="207:61"><expr pos:start="207:37" pos:end="207:61"><name pos:start="207:37" pos:end="207:61"><name pos:start="207:37" pos:end="207:43">rtsp_st</name><operator pos:start="207:44" pos:end="207:45">-&gt;</operator><name pos:start="207:46" pos:end="207:61">sdp_payload_type</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="207:65" pos:end="207:70"><expr pos:start="207:65" pos:end="207:70"><literal type="string" pos:start="207:65" pos:end="207:70">"MP2T"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="207:74" pos:end="233:9">{<block_content pos:start="211:13" pos:end="231:13">

            <comment type="block" pos:start="209:13" pos:end="209:41">/* no corresponding stream */</comment>

            <if_stmt pos:start="211:13" pos:end="231:13"><if pos:start="211:13" pos:end="217:13">if <condition pos:start="211:16" pos:end="211:52">(<expr pos:start="211:17" pos:end="211:51"><name pos:start="211:17" pos:end="211:29"><name pos:start="211:17" pos:end="211:18">rt</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:29">transport</name></name> <operator pos:start="211:31" pos:end="211:32">==</operator> <name pos:start="211:34" pos:end="211:51">RTSP_TRANSPORT_RAW</name></expr>)</condition> <block pos:start="211:54" pos:end="217:13">{<block_content pos:start="213:17" pos:end="215:53">

                <if_stmt pos:start="213:17" pos:end="215:53"><if pos:start="213:17" pos:end="215:53">if <condition pos:start="213:20" pos:end="213:45">(<expr pos:start="213:21" pos:end="213:44"><operator pos:start="213:21" pos:end="213:21">!</operator><name pos:start="213:22" pos:end="213:27"><name pos:start="213:22" pos:end="213:23">rt</name><operator pos:start="213:24" pos:end="213:25">-&gt;</operator><name pos:start="213:26" pos:end="213:27">ts</name></name> <operator pos:start="213:29" pos:end="213:30">&amp;&amp;</operator> <name pos:start="213:32" pos:end="213:44">CONFIG_RTPDEC</name></expr>)</condition><block type="pseudo" pos:start="215:21" pos:end="215:53"><block_content pos:start="215:21" pos:end="215:53">

                    <expr_stmt pos:start="215:21" pos:end="215:53"><expr pos:start="215:21" pos:end="215:52"><name pos:start="215:21" pos:end="215:26"><name pos:start="215:21" pos:end="215:22">rt</name><operator pos:start="215:23" pos:end="215:24">-&gt;</operator><name pos:start="215:25" pos:end="215:26">ts</name></name> <operator pos:start="215:28" pos:end="215:28">=</operator> <call pos:start="215:30" pos:end="215:52"><name pos:start="215:30" pos:end="215:49">ff_mpegts_parse_open</name><argument_list pos:start="215:50" pos:end="215:52">(<argument pos:start="215:51" pos:end="215:51"><expr pos:start="215:51" pos:end="215:51"><name pos:start="215:51" pos:end="215:51">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="217:15" pos:end="231:13">else <block pos:start="217:20" pos:end="231:13">{<block_content pos:start="219:17" pos:end="229:76">

                <decl_stmt pos:start="219:17" pos:end="219:51"><decl pos:start="219:17" pos:end="219:50"><type pos:start="219:17" pos:end="219:43"><name pos:start="219:17" pos:end="219:41">RTPDynamicProtocolHandler</name> <modifier pos:start="219:43" pos:end="219:43">*</modifier></type><name pos:start="219:44" pos:end="219:50">handler</name></decl>;</decl_stmt>

                <expr_stmt pos:start="221:17" pos:end="223:76"><expr pos:start="221:17" pos:end="223:75"><name pos:start="221:17" pos:end="221:23">handler</name> <operator pos:start="221:25" pos:end="221:25">=</operator> <call pos:start="221:27" pos:end="223:75"><name pos:start="221:27" pos:end="221:51">ff_rtp_handler_find_by_id</name><argument_list pos:start="221:52" pos:end="223:75">(

                              <argument pos:start="223:31" pos:end="223:55"><expr pos:start="223:31" pos:end="223:55"><name pos:start="223:31" pos:end="223:55"><name pos:start="223:31" pos:end="223:37">rtsp_st</name><operator pos:start="223:38" pos:end="223:39">-&gt;</operator><name pos:start="223:40" pos:end="223:55">sdp_payload_type</name></name></expr></argument>, <argument pos:start="223:58" pos:end="223:74"><expr pos:start="223:58" pos:end="223:74"><name pos:start="223:58" pos:end="223:74">AVMEDIA_TYPE_DATA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:57"><expr pos:start="225:17" pos:end="225:56"><call pos:start="225:17" pos:end="225:56"><name pos:start="225:17" pos:end="225:32">init_rtp_handler</name><argument_list pos:start="225:33" pos:end="225:56">(<argument pos:start="225:34" pos:end="225:40"><expr pos:start="225:34" pos:end="225:40"><name pos:start="225:34" pos:end="225:40">handler</name></expr></argument>, <argument pos:start="225:43" pos:end="225:49"><expr pos:start="225:43" pos:end="225:49"><name pos:start="225:43" pos:end="225:49">rtsp_st</name></expr></argument>, <argument pos:start="225:52" pos:end="225:55"><expr pos:start="225:52" pos:end="225:55"><name pos:start="225:52" pos:end="225:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="227:17" pos:end="229:76"><if pos:start="227:17" pos:end="229:76">if <condition pos:start="227:20" pos:end="227:45">(<expr pos:start="227:21" pos:end="227:44"><name pos:start="227:21" pos:end="227:27">handler</name> <operator pos:start="227:29" pos:end="227:30">&amp;&amp;</operator> <name pos:start="227:32" pos:end="227:44"><name pos:start="227:32" pos:end="227:38">handler</name><operator pos:start="227:39" pos:end="227:40">-&gt;</operator><name pos:start="227:41" pos:end="227:44">init</name></name></expr>)</condition><block type="pseudo" pos:start="229:21" pos:end="229:76"><block_content pos:start="229:21" pos:end="229:76">

                    <expr_stmt pos:start="229:21" pos:end="229:76"><expr pos:start="229:21" pos:end="229:75"><call pos:start="229:21" pos:end="229:75"><name pos:start="229:21" pos:end="229:33"><name pos:start="229:21" pos:end="229:27">handler</name><operator pos:start="229:28" pos:end="229:29">-&gt;</operator><name pos:start="229:30" pos:end="229:33">init</name></name><argument_list pos:start="229:34" pos:end="229:75">(<argument pos:start="229:35" pos:end="229:35"><expr pos:start="229:35" pos:end="229:35"><name pos:start="229:35" pos:end="229:35">s</name></expr></argument>, <argument pos:start="229:38" pos:end="229:39"><expr pos:start="229:38" pos:end="229:39"><operator pos:start="229:38" pos:end="229:38">-</operator><literal type="number" pos:start="229:39" pos:end="229:39">1</literal></expr></argument>, <argument pos:start="229:42" pos:end="229:74"><expr pos:start="229:42" pos:end="229:74"><name pos:start="229:42" pos:end="229:74"><name pos:start="229:42" pos:end="229:48">rtsp_st</name><operator pos:start="229:49" pos:end="229:50">-&gt;</operator><name pos:start="229:51" pos:end="229:74">dynamic_protocol_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="233:11" pos:end="241:9">else if <condition pos:start="233:19" pos:end="235:51">(<expr pos:start="233:20" pos:end="235:50"><name pos:start="233:20" pos:end="233:34"><name pos:start="233:20" pos:end="233:21">rt</name><operator pos:start="233:22" pos:end="233:23">-&gt;</operator><name pos:start="233:24" pos:end="233:34">server_type</name></name> <operator pos:start="233:36" pos:end="233:37">==</operator> <name pos:start="233:39" pos:end="233:53">RTSP_SERVER_WMS</name> <operator pos:start="233:55" pos:end="233:56">&amp;&amp;</operator>

                   <name pos:start="235:20" pos:end="235:29">codec_type</name> <operator pos:start="235:31" pos:end="235:32">==</operator> <name pos:start="235:34" pos:end="235:50">AVMEDIA_TYPE_DATA</name></expr>)</condition> <block pos:start="235:53" pos:end="241:9">{<block_content>

            <comment type="block" pos:start="237:13" pos:end="239:72">/* RTX stream, a stream that carries all the other actual

             * audio/video streams. Don't expose this to the callers. */</comment>

        </block_content>}</block></if> <else pos:start="241:11" pos:end="285:9">else <block pos:start="241:16" pos:end="285:9">{<block_content pos:start="243:13" pos:end="283:13">

            <expr_stmt pos:start="243:13" pos:end="243:46"><expr pos:start="243:13" pos:end="243:45"><name pos:start="243:13" pos:end="243:14">st</name> <operator pos:start="243:16" pos:end="243:16">=</operator> <call pos:start="243:18" pos:end="243:45"><name pos:start="243:18" pos:end="243:36">avformat_new_stream</name><argument_list pos:start="243:37" pos:end="243:45">(<argument pos:start="243:38" pos:end="243:38"><expr pos:start="243:38" pos:end="243:38"><name pos:start="243:38" pos:end="243:38">s</name></expr></argument>, <argument pos:start="243:41" pos:end="243:44"><expr pos:start="243:41" pos:end="243:44"><name pos:start="243:41" pos:end="243:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="245:13" pos:end="247:23"><if pos:start="245:13" pos:end="247:23">if <condition pos:start="245:16" pos:end="245:20">(<expr pos:start="245:17" pos:end="245:19"><operator pos:start="245:17" pos:end="245:17">!</operator><name pos:start="245:18" pos:end="245:19">st</name></expr>)</condition><block type="pseudo" pos:start="247:17" pos:end="247:23"><block_content pos:start="247:17" pos:end="247:23">

                <return pos:start="247:17" pos:end="247:23">return;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:45"><expr pos:start="249:13" pos:end="249:44"><name pos:start="249:13" pos:end="249:18"><name pos:start="249:13" pos:end="249:14">st</name><operator pos:start="249:15" pos:end="249:16">-&gt;</operator><name pos:start="249:17" pos:end="249:18">id</name></name> <operator pos:start="249:20" pos:end="249:20">=</operator> <name pos:start="249:22" pos:end="249:40"><name pos:start="249:22" pos:end="249:23">rt</name><operator pos:start="249:24" pos:end="249:25">-&gt;</operator><name pos:start="249:26" pos:end="249:40">nb_rtsp_streams</name></name> <operator pos:start="249:42" pos:end="249:42">-</operator> <literal type="number" pos:start="249:44" pos:end="249:44">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:46"><expr pos:start="251:13" pos:end="251:45"><name pos:start="251:13" pos:end="251:33"><name pos:start="251:13" pos:end="251:19">rtsp_st</name><operator pos:start="251:20" pos:end="251:21">-&gt;</operator><name pos:start="251:22" pos:end="251:33">stream_index</name></name> <operator pos:start="251:35" pos:end="251:35">=</operator> <name pos:start="251:37" pos:end="251:45"><name pos:start="251:37" pos:end="251:38">st</name><operator pos:start="251:39" pos:end="251:40">-&gt;</operator><name pos:start="251:41" pos:end="251:45">index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:47"><expr pos:start="253:13" pos:end="253:46"><name pos:start="253:13" pos:end="253:33"><name pos:start="253:13" pos:end="253:14">st</name><operator pos:start="253:15" pos:end="253:16">-&gt;</operator><name pos:start="253:17" pos:end="253:21">codec</name><operator pos:start="253:22" pos:end="253:23">-&gt;</operator><name pos:start="253:24" pos:end="253:33">codec_type</name></name> <operator pos:start="253:35" pos:end="253:35">=</operator> <name pos:start="253:37" pos:end="253:46">codec_type</name></expr>;</expr_stmt>

            <if_stmt pos:start="255:13" pos:end="283:13"><if pos:start="255:13" pos:end="283:13">if <condition pos:start="255:16" pos:end="255:59">(<expr pos:start="255:17" pos:end="255:58"><name pos:start="255:17" pos:end="255:41"><name pos:start="255:17" pos:end="255:23">rtsp_st</name><operator pos:start="255:24" pos:end="255:25">-&gt;</operator><name pos:start="255:26" pos:end="255:41">sdp_payload_type</name></name> <operator pos:start="255:43" pos:end="255:43">&lt;</operator> <name pos:start="255:45" pos:end="255:58">RTP_PT_PRIVATE</name></expr>)</condition> <block pos:start="255:61" pos:end="283:13">{<block_content pos:start="257:17" pos:end="281:69">

                <decl_stmt pos:start="257:17" pos:end="257:51"><decl pos:start="257:17" pos:end="257:50"><type pos:start="257:17" pos:end="257:43"><name pos:start="257:17" pos:end="257:41">RTPDynamicProtocolHandler</name> <modifier pos:start="257:43" pos:end="257:43">*</modifier></type><name pos:start="257:44" pos:end="257:50">handler</name></decl>;</decl_stmt>

                <comment type="block" pos:start="259:17" pos:end="259:79">/* if standard payload type, we can find the codec right now */</comment>

                <expr_stmt pos:start="261:17" pos:end="261:76"><expr pos:start="261:17" pos:end="261:75"><call pos:start="261:17" pos:end="261:75"><name pos:start="261:17" pos:end="261:37">ff_rtp_get_codec_info</name><argument_list pos:start="261:38" pos:end="261:75">(<argument pos:start="261:39" pos:end="261:47"><expr pos:start="261:39" pos:end="261:47"><name pos:start="261:39" pos:end="261:47"><name pos:start="261:39" pos:end="261:40">st</name><operator pos:start="261:41" pos:end="261:42">-&gt;</operator><name pos:start="261:43" pos:end="261:47">codec</name></name></expr></argument>, <argument pos:start="261:50" pos:end="261:74"><expr pos:start="261:50" pos:end="261:74"><name pos:start="261:50" pos:end="261:74"><name pos:start="261:50" pos:end="261:56">rtsp_st</name><operator pos:start="261:57" pos:end="261:58">-&gt;</operator><name pos:start="261:59" pos:end="261:74">sdp_payload_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="263:17" pos:end="267:75"><if pos:start="263:17" pos:end="267:75">if <condition pos:start="263:20" pos:end="265:47">(<expr pos:start="263:21" pos:end="265:46"><name pos:start="263:21" pos:end="263:41"><name pos:start="263:21" pos:end="263:22">st</name><operator pos:start="263:23" pos:end="263:24">-&gt;</operator><name pos:start="263:25" pos:end="263:29">codec</name><operator pos:start="263:30" pos:end="263:31">-&gt;</operator><name pos:start="263:32" pos:end="263:41">codec_type</name></name> <operator pos:start="263:43" pos:end="263:44">==</operator> <name pos:start="263:46" pos:end="263:63">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="263:65" pos:end="263:66">&amp;&amp;</operator>

                    <name pos:start="265:21" pos:end="265:42"><name pos:start="265:21" pos:end="265:22">st</name><operator pos:start="265:23" pos:end="265:24">-&gt;</operator><name pos:start="265:25" pos:end="265:29">codec</name><operator pos:start="265:30" pos:end="265:31">-&gt;</operator><name pos:start="265:32" pos:end="265:42">sample_rate</name></name> <operator pos:start="265:44" pos:end="265:44">&gt;</operator> <literal type="number" pos:start="265:46" pos:end="265:46">0</literal></expr>)</condition><block type="pseudo" pos:start="267:21" pos:end="267:75"><block_content pos:start="267:21" pos:end="267:75">

                    <expr_stmt pos:start="267:21" pos:end="267:75"><expr pos:start="267:21" pos:end="267:74"><call pos:start="267:21" pos:end="267:74"><name pos:start="267:21" pos:end="267:39">avpriv_set_pts_info</name><argument_list pos:start="267:40" pos:end="267:74">(<argument pos:start="267:41" pos:end="267:42"><expr pos:start="267:41" pos:end="267:42"><name pos:start="267:41" pos:end="267:42">st</name></expr></argument>, <argument pos:start="267:45" pos:end="267:46"><expr pos:start="267:45" pos:end="267:46"><literal type="number" pos:start="267:45" pos:end="267:46">32</literal></expr></argument>, <argument pos:start="267:49" pos:end="267:49"><expr pos:start="267:49" pos:end="267:49"><literal type="number" pos:start="267:49" pos:end="267:49">1</literal></expr></argument>, <argument pos:start="267:52" pos:end="267:73"><expr pos:start="267:52" pos:end="267:73"><name pos:start="267:52" pos:end="267:73"><name pos:start="267:52" pos:end="267:53">st</name><operator pos:start="267:54" pos:end="267:55">-&gt;</operator><name pos:start="267:56" pos:end="267:60">codec</name><operator pos:start="267:61" pos:end="267:62">-&gt;</operator><name pos:start="267:63" pos:end="267:73">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <comment type="block" pos:start="269:17" pos:end="269:78">/* Even static payload types may need a custom depacketizer */</comment>

                <expr_stmt pos:start="271:17" pos:end="273:80"><expr pos:start="271:17" pos:end="273:79"><name pos:start="271:17" pos:end="271:23">handler</name> <operator pos:start="271:25" pos:end="271:25">=</operator> <call pos:start="271:27" pos:end="273:79"><name pos:start="271:27" pos:end="271:51">ff_rtp_handler_find_by_id</name><argument_list pos:start="271:52" pos:end="273:79">(

                              <argument pos:start="273:31" pos:end="273:55"><expr pos:start="273:31" pos:end="273:55"><name pos:start="273:31" pos:end="273:55"><name pos:start="273:31" pos:end="273:37">rtsp_st</name><operator pos:start="273:38" pos:end="273:39">-&gt;</operator><name pos:start="273:40" pos:end="273:55">sdp_payload_type</name></name></expr></argument>, <argument pos:start="273:58" pos:end="273:78"><expr pos:start="273:58" pos:end="273:78"><name pos:start="273:58" pos:end="273:78"><name pos:start="273:58" pos:end="273:59">st</name><operator pos:start="273:60" pos:end="273:61">-&gt;</operator><name pos:start="273:62" pos:end="273:66">codec</name><operator pos:start="273:67" pos:end="273:68">-&gt;</operator><name pos:start="273:69" pos:end="273:78">codec_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="275:17" pos:end="275:62"><expr pos:start="275:17" pos:end="275:61"><call pos:start="275:17" pos:end="275:61"><name pos:start="275:17" pos:end="275:32">init_rtp_handler</name><argument_list pos:start="275:33" pos:end="275:61">(<argument pos:start="275:34" pos:end="275:40"><expr pos:start="275:34" pos:end="275:40"><name pos:start="275:34" pos:end="275:40">handler</name></expr></argument>, <argument pos:start="275:43" pos:end="275:49"><expr pos:start="275:43" pos:end="275:49"><name pos:start="275:43" pos:end="275:49">rtsp_st</name></expr></argument>, <argument pos:start="275:52" pos:end="275:60"><expr pos:start="275:52" pos:end="275:60"><name pos:start="275:52" pos:end="275:60"><name pos:start="275:52" pos:end="275:53">st</name><operator pos:start="275:54" pos:end="275:55">-&gt;</operator><name pos:start="275:56" pos:end="275:60">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="277:17" pos:end="281:69"><if pos:start="277:17" pos:end="281:69">if <condition pos:start="277:20" pos:end="277:45">(<expr pos:start="277:21" pos:end="277:44"><name pos:start="277:21" pos:end="277:27">handler</name> <operator pos:start="277:29" pos:end="277:30">&amp;&amp;</operator> <name pos:start="277:32" pos:end="277:44"><name pos:start="277:32" pos:end="277:38">handler</name><operator pos:start="277:39" pos:end="277:40">-&gt;</operator><name pos:start="277:41" pos:end="277:44">init</name></name></expr>)</condition><block type="pseudo" pos:start="279:21" pos:end="281:69"><block_content pos:start="279:21" pos:end="281:69">

                    <expr_stmt pos:start="279:21" pos:end="281:69"><expr pos:start="279:21" pos:end="281:68"><call pos:start="279:21" pos:end="281:68"><name pos:start="279:21" pos:end="279:33"><name pos:start="279:21" pos:end="279:27">handler</name><operator pos:start="279:28" pos:end="279:29">-&gt;</operator><name pos:start="279:30" pos:end="279:33">init</name></name><argument_list pos:start="279:34" pos:end="281:68">(<argument pos:start="279:35" pos:end="279:35"><expr pos:start="279:35" pos:end="279:35"><name pos:start="279:35" pos:end="279:35">s</name></expr></argument>, <argument pos:start="279:38" pos:end="279:46"><expr pos:start="279:38" pos:end="279:46"><name pos:start="279:38" pos:end="279:46"><name pos:start="279:38" pos:end="279:39">st</name><operator pos:start="279:40" pos:end="279:41">-&gt;</operator><name pos:start="279:42" pos:end="279:46">index</name></name></expr></argument>,

                                  <argument pos:start="281:35" pos:end="281:67"><expr pos:start="281:35" pos:end="281:67"><name pos:start="281:35" pos:end="281:67"><name pos:start="281:35" pos:end="281:41">rtsp_st</name><operator pos:start="281:42" pos:end="281:43">-&gt;</operator><name pos:start="281:44" pos:end="281:67">dynamic_protocol_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="287:9" pos:end="287:39">/* put a default control url */</comment>

        <expr_stmt pos:start="289:9" pos:end="291:49"><expr pos:start="289:9" pos:end="291:48"><call pos:start="289:9" pos:end="291:48"><name pos:start="289:9" pos:end="289:18">av_strlcpy</name><argument_list pos:start="289:19" pos:end="291:48">(<argument pos:start="289:20" pos:end="289:39"><expr pos:start="289:20" pos:end="289:39"><name pos:start="289:20" pos:end="289:39"><name pos:start="289:20" pos:end="289:26">rtsp_st</name><operator pos:start="289:27" pos:end="289:28">-&gt;</operator><name pos:start="289:29" pos:end="289:39">control_url</name></name></expr></argument>, <argument pos:start="289:42" pos:end="289:56"><expr pos:start="289:42" pos:end="289:56"><name pos:start="289:42" pos:end="289:56"><name pos:start="289:42" pos:end="289:43">rt</name><operator pos:start="289:44" pos:end="289:45">-&gt;</operator><name pos:start="289:46" pos:end="289:56">control_uri</name></name></expr></argument>,

                   <argument pos:start="291:20" pos:end="291:47"><expr pos:start="291:20" pos:end="291:47"><sizeof pos:start="291:20" pos:end="291:47">sizeof<argument_list pos:start="291:26" pos:end="291:47">(<argument pos:start="291:27" pos:end="291:46"><expr pos:start="291:27" pos:end="291:46"><name pos:start="291:27" pos:end="291:46"><name pos:start="291:27" pos:end="291:33">rtsp_st</name><operator pos:start="291:34" pos:end="291:35">-&gt;</operator><name pos:start="291:36" pos:end="291:46">control_url</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="293:9" pos:end="293:14">break;</break>

    <case pos:start="295:5" pos:end="295:13">case <expr pos:start="295:10" pos:end="295:12"><literal type="char" pos:start="295:10" pos:end="295:12">'a'</literal></expr>:</case>

        <if_stmt pos:start="297:9" pos:end="545:9"><if pos:start="297:9" pos:end="345:9">if <condition pos:start="297:12" pos:end="297:43">(<expr pos:start="297:13" pos:end="297:42"><call pos:start="297:13" pos:end="297:42"><name pos:start="297:13" pos:end="297:23">av_strstart</name><argument_list pos:start="297:24" pos:end="297:42">(<argument pos:start="297:25" pos:end="297:25"><expr pos:start="297:25" pos:end="297:25"><name pos:start="297:25" pos:end="297:25">p</name></expr></argument>, <argument pos:start="297:28" pos:end="297:37"><expr pos:start="297:28" pos:end="297:37"><literal type="string" pos:start="297:28" pos:end="297:37">"control:"</literal></expr></argument>, <argument pos:start="297:40" pos:end="297:41"><expr pos:start="297:40" pos:end="297:41"><operator pos:start="297:40" pos:end="297:40">&amp;</operator><name pos:start="297:41" pos:end="297:41">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="297:45" pos:end="345:9">{<block_content pos:start="299:13" pos:end="343:13">

            <if_stmt pos:start="299:13" pos:end="343:13"><if pos:start="299:13" pos:end="307:13">if <condition pos:start="299:16" pos:end="299:35">(<expr pos:start="299:17" pos:end="299:34"><name pos:start="299:17" pos:end="299:29"><name pos:start="299:17" pos:end="299:17">s</name><operator pos:start="299:18" pos:end="299:19">-&gt;</operator><name pos:start="299:20" pos:end="299:29">nb_streams</name></name> <operator pos:start="299:31" pos:end="299:32">==</operator> <literal type="number" pos:start="299:34" pos:end="299:34">0</literal></expr>)</condition> <block pos:start="299:37" pos:end="307:13">{<block_content pos:start="301:17" pos:end="305:56">

                <if_stmt pos:start="301:17" pos:end="305:56"><if pos:start="301:17" pos:end="305:56">if <condition pos:start="301:20" pos:end="301:46">(<expr pos:start="301:21" pos:end="301:45"><operator pos:start="301:21" pos:end="301:21">!</operator><call pos:start="301:22" pos:end="301:45"><name pos:start="301:22" pos:end="301:28">strncmp</name><argument_list pos:start="301:29" pos:end="301:45">(<argument pos:start="301:30" pos:end="301:30"><expr pos:start="301:30" pos:end="301:30"><name pos:start="301:30" pos:end="301:30">p</name></expr></argument>, <argument pos:start="301:33" pos:end="301:41"><expr pos:start="301:33" pos:end="301:41"><literal type="string" pos:start="301:33" pos:end="301:41">"rtsp://"</literal></expr></argument>, <argument pos:start="301:44" pos:end="301:44"><expr pos:start="301:44" pos:end="301:44"><literal type="number" pos:start="301:44" pos:end="301:44">7</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="303:21" pos:end="305:56"><block_content pos:start="303:21" pos:end="305:56">

                    <expr_stmt pos:start="303:21" pos:end="305:56"><expr pos:start="303:21" pos:end="305:55"><call pos:start="303:21" pos:end="305:55"><name pos:start="303:21" pos:end="303:30">av_strlcpy</name><argument_list pos:start="303:31" pos:end="305:55">(<argument pos:start="303:32" pos:end="303:46"><expr pos:start="303:32" pos:end="303:46"><name pos:start="303:32" pos:end="303:46"><name pos:start="303:32" pos:end="303:33">rt</name><operator pos:start="303:34" pos:end="303:35">-&gt;</operator><name pos:start="303:36" pos:end="303:46">control_uri</name></name></expr></argument>, <argument pos:start="303:49" pos:end="303:49"><expr pos:start="303:49" pos:end="303:49"><name pos:start="303:49" pos:end="303:49">p</name></expr></argument>,

                               <argument pos:start="305:32" pos:end="305:54"><expr pos:start="305:32" pos:end="305:54"><sizeof pos:start="305:32" pos:end="305:54">sizeof<argument_list pos:start="305:38" pos:end="305:54">(<argument pos:start="305:39" pos:end="305:53"><expr pos:start="305:39" pos:end="305:53"><name pos:start="305:39" pos:end="305:53"><name pos:start="305:39" pos:end="305:40">rt</name><operator pos:start="305:41" pos:end="305:42">-&gt;</operator><name pos:start="305:43" pos:end="305:53">control_uri</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="307:15" pos:end="343:13">else <block pos:start="307:20" pos:end="343:13">{<block_content pos:start="309:17" pos:end="341:61">

                <decl_stmt pos:start="309:17" pos:end="309:31"><decl pos:start="309:17" pos:end="309:30"><type pos:start="309:17" pos:end="309:20"><name pos:start="309:17" pos:end="309:20">char</name></type> <name pos:start="309:22" pos:end="309:30"><name pos:start="309:22" pos:end="309:26">proto</name><index pos:start="309:27" pos:end="309:30">[<expr pos:start="309:28" pos:end="309:29"><literal type="number" pos:start="309:28" pos:end="309:29">32</literal></expr>]</index></name></decl>;</decl_stmt>

                <comment type="block" pos:start="311:17" pos:end="311:41">/* get the control url */</comment>

                <expr_stmt pos:start="313:17" pos:end="313:68"><expr pos:start="313:17" pos:end="313:67"><name pos:start="313:17" pos:end="313:23">rtsp_st</name> <operator pos:start="313:25" pos:end="313:25">=</operator> <name pos:start="313:27" pos:end="313:67"><name pos:start="313:27" pos:end="313:28">rt</name><operator pos:start="313:29" pos:end="313:30">-&gt;</operator><name pos:start="313:31" pos:end="313:42">rtsp_streams</name><index pos:start="313:43" pos:end="313:67">[<expr pos:start="313:44" pos:end="313:66"><name pos:start="313:44" pos:end="313:62"><name pos:start="313:44" pos:end="313:45">rt</name><operator pos:start="313:46" pos:end="313:47">-&gt;</operator><name pos:start="313:48" pos:end="313:62">nb_rtsp_streams</name></name> <operator pos:start="313:64" pos:end="313:64">-</operator> <literal type="number" pos:start="313:66" pos:end="313:66">1</literal></expr>]</index></name></expr>;</expr_stmt>



                <comment type="block" pos:start="317:17" pos:end="317:62">/* XXX: may need to add full url resolution */</comment>

                <expr_stmt pos:start="319:17" pos:end="321:47"><expr pos:start="319:17" pos:end="321:46"><call pos:start="319:17" pos:end="321:46"><name pos:start="319:17" pos:end="319:28">av_url_split</name><argument_list pos:start="319:29" pos:end="321:46">(<argument pos:start="319:30" pos:end="319:34"><expr pos:start="319:30" pos:end="319:34"><name pos:start="319:30" pos:end="319:34">proto</name></expr></argument>, <argument pos:start="319:37" pos:end="319:49"><expr pos:start="319:37" pos:end="319:49"><sizeof pos:start="319:37" pos:end="319:49">sizeof<argument_list pos:start="319:43" pos:end="319:49">(<argument pos:start="319:44" pos:end="319:48"><expr pos:start="319:44" pos:end="319:48"><name pos:start="319:44" pos:end="319:48">proto</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="319:52" pos:end="319:55"><expr pos:start="319:52" pos:end="319:55"><name pos:start="319:52" pos:end="319:55">NULL</name></expr></argument>, <argument pos:start="319:58" pos:end="319:58"><expr pos:start="319:58" pos:end="319:58"><literal type="number" pos:start="319:58" pos:end="319:58">0</literal></expr></argument>, <argument pos:start="319:61" pos:end="319:64"><expr pos:start="319:61" pos:end="319:64"><name pos:start="319:61" pos:end="319:64">NULL</name></expr></argument>, <argument pos:start="319:67" pos:end="319:67"><expr pos:start="319:67" pos:end="319:67"><literal type="number" pos:start="319:67" pos:end="319:67">0</literal></expr></argument>,

                             <argument pos:start="321:30" pos:end="321:33"><expr pos:start="321:30" pos:end="321:33"><name pos:start="321:30" pos:end="321:33">NULL</name></expr></argument>, <argument pos:start="321:36" pos:end="321:39"><expr pos:start="321:36" pos:end="321:39"><name pos:start="321:36" pos:end="321:39">NULL</name></expr></argument>, <argument pos:start="321:42" pos:end="321:42"><expr pos:start="321:42" pos:end="321:42"><literal type="number" pos:start="321:42" pos:end="321:42">0</literal></expr></argument>, <argument pos:start="321:45" pos:end="321:45"><expr pos:start="321:45" pos:end="321:45"><name pos:start="321:45" pos:end="321:45">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="323:17" pos:end="341:61"><if pos:start="323:17" pos:end="337:17">if <condition pos:start="323:20" pos:end="323:37">(<expr pos:start="323:21" pos:end="323:36"><name pos:start="323:21" pos:end="323:28"><name pos:start="323:21" pos:end="323:25">proto</name><index pos:start="323:26" pos:end="323:28">[<expr pos:start="323:27" pos:end="323:27"><literal type="number" pos:start="323:27" pos:end="323:27">0</literal></expr>]</index></name> <operator pos:start="323:30" pos:end="323:31">==</operator> <literal type="char" pos:start="323:33" pos:end="323:36">'\0'</literal></expr>)</condition> <block pos:start="323:39" pos:end="337:17">{<block_content pos:start="327:21" pos:end="335:61">

                    <comment type="block" pos:start="325:21" pos:end="325:46">/* relative control URL */</comment>

                    <if_stmt pos:start="327:21" pos:end="331:61"><if pos:start="327:21" pos:end="331:61">if <condition pos:start="327:24" pos:end="327:82">(<expr pos:start="327:25" pos:end="327:81"><name pos:start="327:25" pos:end="327:76"><name pos:start="327:25" pos:end="327:31">rtsp_st</name><operator pos:start="327:32" pos:end="327:33">-&gt;</operator><name pos:start="327:34" pos:end="327:44">control_url</name><index pos:start="327:45" pos:end="327:76">[<expr pos:start="327:46" pos:end="327:75"><call pos:start="327:46" pos:end="327:73"><name pos:start="327:46" pos:end="327:51">strlen</name><argument_list pos:start="327:52" pos:end="327:73">(<argument pos:start="327:53" pos:end="327:72"><expr pos:start="327:53" pos:end="327:72"><name pos:start="327:53" pos:end="327:72"><name pos:start="327:53" pos:end="327:59">rtsp_st</name><operator pos:start="327:60" pos:end="327:61">-&gt;</operator><name pos:start="327:62" pos:end="327:72">control_url</name></name></expr></argument>)</argument_list></call><operator pos:start="327:74" pos:end="327:74">-</operator><literal type="number" pos:start="327:75" pos:end="327:75">1</literal></expr>]</index></name><operator pos:start="327:77" pos:end="327:78">!=</operator><literal type="char" pos:start="327:79" pos:end="327:81">'/'</literal></expr>)</condition><block type="pseudo" pos:start="329:21" pos:end="331:61"><block_content pos:start="329:21" pos:end="331:61">

                    <expr_stmt pos:start="329:21" pos:end="331:61"><expr pos:start="329:21" pos:end="331:60"><call pos:start="329:21" pos:end="331:60"><name pos:start="329:21" pos:end="329:30">av_strlcat</name><argument_list pos:start="329:31" pos:end="331:60">(<argument pos:start="329:32" pos:end="329:51"><expr pos:start="329:32" pos:end="329:51"><name pos:start="329:32" pos:end="329:51"><name pos:start="329:32" pos:end="329:38">rtsp_st</name><operator pos:start="329:39" pos:end="329:40">-&gt;</operator><name pos:start="329:41" pos:end="329:51">control_url</name></name></expr></argument>, <argument pos:start="329:54" pos:end="329:56"><expr pos:start="329:54" pos:end="329:56"><literal type="string" pos:start="329:54" pos:end="329:56">"/"</literal></expr></argument>,

                               <argument pos:start="331:32" pos:end="331:59"><expr pos:start="331:32" pos:end="331:59"><sizeof pos:start="331:32" pos:end="331:59">sizeof<argument_list pos:start="331:38" pos:end="331:59">(<argument pos:start="331:39" pos:end="331:58"><expr pos:start="331:39" pos:end="331:58"><name pos:start="331:39" pos:end="331:58"><name pos:start="331:39" pos:end="331:45">rtsp_st</name><operator pos:start="331:46" pos:end="331:47">-&gt;</operator><name pos:start="331:48" pos:end="331:58">control_url</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="333:21" pos:end="335:61"><expr pos:start="333:21" pos:end="335:60"><call pos:start="333:21" pos:end="335:60"><name pos:start="333:21" pos:end="333:30">av_strlcat</name><argument_list pos:start="333:31" pos:end="335:60">(<argument pos:start="333:32" pos:end="333:51"><expr pos:start="333:32" pos:end="333:51"><name pos:start="333:32" pos:end="333:51"><name pos:start="333:32" pos:end="333:38">rtsp_st</name><operator pos:start="333:39" pos:end="333:40">-&gt;</operator><name pos:start="333:41" pos:end="333:51">control_url</name></name></expr></argument>, <argument pos:start="333:54" pos:end="333:54"><expr pos:start="333:54" pos:end="333:54"><name pos:start="333:54" pos:end="333:54">p</name></expr></argument>,

                               <argument pos:start="335:32" pos:end="335:59"><expr pos:start="335:32" pos:end="335:59"><sizeof pos:start="335:32" pos:end="335:59">sizeof<argument_list pos:start="335:38" pos:end="335:59">(<argument pos:start="335:39" pos:end="335:58"><expr pos:start="335:39" pos:end="335:58"><name pos:start="335:39" pos:end="335:58"><name pos:start="335:39" pos:end="335:45">rtsp_st</name><operator pos:start="335:46" pos:end="335:47">-&gt;</operator><name pos:start="335:48" pos:end="335:58">control_url</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="337:19" pos:end="341:61">else<block type="pseudo" pos:start="339:21" pos:end="341:61"><block_content pos:start="339:21" pos:end="341:61">

                    <expr_stmt pos:start="339:21" pos:end="341:61"><expr pos:start="339:21" pos:end="341:60"><call pos:start="339:21" pos:end="341:60"><name pos:start="339:21" pos:end="339:30">av_strlcpy</name><argument_list pos:start="339:31" pos:end="341:60">(<argument pos:start="339:32" pos:end="339:51"><expr pos:start="339:32" pos:end="339:51"><name pos:start="339:32" pos:end="339:51"><name pos:start="339:32" pos:end="339:38">rtsp_st</name><operator pos:start="339:39" pos:end="339:40">-&gt;</operator><name pos:start="339:41" pos:end="339:51">control_url</name></name></expr></argument>, <argument pos:start="339:54" pos:end="339:54"><expr pos:start="339:54" pos:end="339:54"><name pos:start="339:54" pos:end="339:54">p</name></expr></argument>,

                               <argument pos:start="341:32" pos:end="341:59"><expr pos:start="341:32" pos:end="341:59"><sizeof pos:start="341:32" pos:end="341:59">sizeof<argument_list pos:start="341:38" pos:end="341:59">(<argument pos:start="341:39" pos:end="341:58"><expr pos:start="341:39" pos:end="341:58"><name pos:start="341:39" pos:end="341:58"><name pos:start="341:39" pos:end="341:45">rtsp_st</name><operator pos:start="341:46" pos:end="341:47">-&gt;</operator><name pos:start="341:48" pos:end="341:58">control_url</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="345:11" pos:end="371:9">else if <condition pos:start="345:19" pos:end="345:70">(<expr pos:start="345:20" pos:end="345:69"><call pos:start="345:20" pos:end="345:48"><name pos:start="345:20" pos:end="345:30">av_strstart</name><argument_list pos:start="345:31" pos:end="345:48">(<argument pos:start="345:32" pos:end="345:32"><expr pos:start="345:32" pos:end="345:32"><name pos:start="345:32" pos:end="345:32">p</name></expr></argument>, <argument pos:start="345:35" pos:end="345:43"><expr pos:start="345:35" pos:end="345:43"><literal type="string" pos:start="345:35" pos:end="345:43">"rtpmap:"</literal></expr></argument>, <argument pos:start="345:46" pos:end="345:47"><expr pos:start="345:46" pos:end="345:47"><operator pos:start="345:46" pos:end="345:46">&amp;</operator><name pos:start="345:47" pos:end="345:47">p</name></expr></argument>)</argument_list></call> <operator pos:start="345:50" pos:end="345:51">&amp;&amp;</operator> <name pos:start="345:53" pos:end="345:65"><name pos:start="345:53" pos:end="345:53">s</name><operator pos:start="345:54" pos:end="345:55">-&gt;</operator><name pos:start="345:56" pos:end="345:65">nb_streams</name></name> <operator pos:start="345:67" pos:end="345:67">&gt;</operator> <literal type="number" pos:start="345:69" pos:end="345:69">0</literal></expr>)</condition> <block pos:start="345:72" pos:end="371:9">{<block_content pos:start="349:13" pos:end="369:13">

            <comment type="block" pos:start="347:13" pos:end="347:67">/* NOTE: rtpmap is only supported AFTER the 'm=' tag */</comment>

            <expr_stmt pos:start="349:13" pos:end="349:45"><expr pos:start="349:13" pos:end="349:44"><call pos:start="349:13" pos:end="349:44"><name pos:start="349:13" pos:end="349:20">get_word</name><argument_list pos:start="349:21" pos:end="349:44">(<argument pos:start="349:22" pos:end="349:25"><expr pos:start="349:22" pos:end="349:25"><name pos:start="349:22" pos:end="349:25">buf1</name></expr></argument>, <argument pos:start="349:28" pos:end="349:39"><expr pos:start="349:28" pos:end="349:39"><sizeof pos:start="349:28" pos:end="349:39">sizeof<argument_list pos:start="349:34" pos:end="349:39">(<argument pos:start="349:35" pos:end="349:38"><expr pos:start="349:35" pos:end="349:38"><name pos:start="349:35" pos:end="349:38">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="349:42" pos:end="349:43"><expr pos:start="349:42" pos:end="349:43"><operator pos:start="349:42" pos:end="349:42">&amp;</operator><name pos:start="349:43" pos:end="349:43">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:38"><expr pos:start="351:13" pos:end="351:37"><name pos:start="351:13" pos:end="351:24">payload_type</name> <operator pos:start="351:26" pos:end="351:26">=</operator> <call pos:start="351:28" pos:end="351:37"><name pos:start="351:28" pos:end="351:31">atoi</name><argument_list pos:start="351:32" pos:end="351:37">(<argument pos:start="351:33" pos:end="351:36"><expr pos:start="351:33" pos:end="351:36"><name pos:start="351:33" pos:end="351:36">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="353:13" pos:end="353:64"><expr pos:start="353:13" pos:end="353:63"><name pos:start="353:13" pos:end="353:19">rtsp_st</name> <operator pos:start="353:21" pos:end="353:21">=</operator> <name pos:start="353:23" pos:end="353:63"><name pos:start="353:23" pos:end="353:24">rt</name><operator pos:start="353:25" pos:end="353:26">-&gt;</operator><name pos:start="353:27" pos:end="353:38">rtsp_streams</name><index pos:start="353:39" pos:end="353:63">[<expr pos:start="353:40" pos:end="353:62"><name pos:start="353:40" pos:end="353:58"><name pos:start="353:40" pos:end="353:41">rt</name><operator pos:start="353:42" pos:end="353:43">-&gt;</operator><name pos:start="353:44" pos:end="353:58">nb_rtsp_streams</name></name> <operator pos:start="353:60" pos:end="353:60">-</operator> <literal type="number" pos:start="353:62" pos:end="353:62">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="355:13" pos:end="361:13"><if pos:start="355:13" pos:end="361:13">if <condition pos:start="355:16" pos:end="355:43">(<expr pos:start="355:17" pos:end="355:42"><name pos:start="355:17" pos:end="355:37"><name pos:start="355:17" pos:end="355:23">rtsp_st</name><operator pos:start="355:24" pos:end="355:25">-&gt;</operator><name pos:start="355:26" pos:end="355:37">stream_index</name></name> <operator pos:start="355:39" pos:end="355:40">&gt;=</operator> <literal type="number" pos:start="355:42" pos:end="355:42">0</literal></expr>)</condition> <block pos:start="355:45" pos:end="361:13">{<block_content pos:start="357:17" pos:end="359:66">

                <expr_stmt pos:start="357:17" pos:end="357:55"><expr pos:start="357:17" pos:end="357:54"><name pos:start="357:17" pos:end="357:18">st</name> <operator pos:start="357:20" pos:end="357:20">=</operator> <name pos:start="357:22" pos:end="357:54"><name pos:start="357:22" pos:end="357:22">s</name><operator pos:start="357:23" pos:end="357:24">-&gt;</operator><name pos:start="357:25" pos:end="357:31">streams</name><index pos:start="357:32" pos:end="357:54">[<expr pos:start="357:33" pos:end="357:53"><name pos:start="357:33" pos:end="357:53"><name pos:start="357:33" pos:end="357:39">rtsp_st</name><operator pos:start="357:40" pos:end="357:41">-&gt;</operator><name pos:start="357:42" pos:end="357:53">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="359:17" pos:end="359:66"><expr pos:start="359:17" pos:end="359:65"><call pos:start="359:17" pos:end="359:65"><name pos:start="359:17" pos:end="359:32">sdp_parse_rtpmap</name><argument_list pos:start="359:33" pos:end="359:65">(<argument pos:start="359:34" pos:end="359:34"><expr pos:start="359:34" pos:end="359:34"><name pos:start="359:34" pos:end="359:34">s</name></expr></argument>, <argument pos:start="359:37" pos:end="359:38"><expr pos:start="359:37" pos:end="359:38"><name pos:start="359:37" pos:end="359:38">st</name></expr></argument>, <argument pos:start="359:41" pos:end="359:47"><expr pos:start="359:41" pos:end="359:47"><name pos:start="359:41" pos:end="359:47">rtsp_st</name></expr></argument>, <argument pos:start="359:50" pos:end="359:61"><expr pos:start="359:50" pos:end="359:61"><name pos:start="359:50" pos:end="359:61">payload_type</name></expr></argument>, <argument pos:start="359:64" pos:end="359:64"><expr pos:start="359:64" pos:end="359:64"><name pos:start="359:64" pos:end="359:64">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:32"><expr pos:start="363:13" pos:end="363:31"><name pos:start="363:13" pos:end="363:27"><name pos:start="363:13" pos:end="363:14">s1</name><operator pos:start="363:15" pos:end="363:16">-&gt;</operator><name pos:start="363:17" pos:end="363:27">seen_rtpmap</name></name> <operator pos:start="363:29" pos:end="363:29">=</operator> <literal type="number" pos:start="363:31" pos:end="363:31">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="365:13" pos:end="369:13"><if pos:start="365:13" pos:end="369:13">if <condition pos:start="365:16" pos:end="365:30">(<expr pos:start="365:17" pos:end="365:29"><name pos:start="365:17" pos:end="365:29"><name pos:start="365:17" pos:end="365:18">s1</name><operator pos:start="365:19" pos:end="365:20">-&gt;</operator><name pos:start="365:21" pos:end="365:29">seen_fmtp</name></name></expr>)</condition> <block pos:start="365:32" pos:end="369:13">{<block_content pos:start="367:17" pos:end="367:66">

                <expr_stmt pos:start="367:17" pos:end="367:66"><expr pos:start="367:17" pos:end="367:65"><call pos:start="367:17" pos:end="367:65"><name pos:start="367:17" pos:end="367:26">parse_fmtp</name><argument_list pos:start="367:27" pos:end="367:65">(<argument pos:start="367:28" pos:end="367:28"><expr pos:start="367:28" pos:end="367:28"><name pos:start="367:28" pos:end="367:28">s</name></expr></argument>, <argument pos:start="367:31" pos:end="367:32"><expr pos:start="367:31" pos:end="367:32"><name pos:start="367:31" pos:end="367:32">rt</name></expr></argument>, <argument pos:start="367:35" pos:end="367:46"><expr pos:start="367:35" pos:end="367:46"><name pos:start="367:35" pos:end="367:46">payload_type</name></expr></argument>, <argument pos:start="367:49" pos:end="367:64"><expr pos:start="367:49" pos:end="367:64"><name pos:start="367:49" pos:end="367:64"><name pos:start="367:49" pos:end="367:50">s1</name><operator pos:start="367:51" pos:end="367:52">-&gt;</operator><name pos:start="367:53" pos:end="367:64">delayed_fmtp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="371:11" pos:end="393:9">else if <condition pos:start="371:19" pos:end="373:52">(<expr pos:start="371:20" pos:end="373:51"><call pos:start="371:20" pos:end="371:46"><name pos:start="371:20" pos:end="371:30">av_strstart</name><argument_list pos:start="371:31" pos:end="371:46">(<argument pos:start="371:32" pos:end="371:32"><expr pos:start="371:32" pos:end="371:32"><name pos:start="371:32" pos:end="371:32">p</name></expr></argument>, <argument pos:start="371:35" pos:end="371:41"><expr pos:start="371:35" pos:end="371:41"><literal type="string" pos:start="371:35" pos:end="371:41">"fmtp:"</literal></expr></argument>, <argument pos:start="371:44" pos:end="371:45"><expr pos:start="371:44" pos:end="371:45"><operator pos:start="371:44" pos:end="371:44">&amp;</operator><name pos:start="371:45" pos:end="371:45">p</name></expr></argument>)</argument_list></call> <operator pos:start="371:48" pos:end="371:49">||</operator>

                   <call pos:start="373:20" pos:end="373:51"><name pos:start="373:20" pos:end="373:30">av_strstart</name><argument_list pos:start="373:31" pos:end="373:51">(<argument pos:start="373:32" pos:end="373:32"><expr pos:start="373:32" pos:end="373:32"><name pos:start="373:32" pos:end="373:32">p</name></expr></argument>, <argument pos:start="373:35" pos:end="373:46"><expr pos:start="373:35" pos:end="373:46"><literal type="string" pos:start="373:35" pos:end="373:46">"framesize:"</literal></expr></argument>, <argument pos:start="373:49" pos:end="373:50"><expr pos:start="373:49" pos:end="373:50"><operator pos:start="373:49" pos:end="373:49">&amp;</operator><name pos:start="373:50" pos:end="373:50">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="373:54" pos:end="393:9">{<block_content pos:start="377:13" pos:end="391:13">

            <comment type="line" pos:start="375:13" pos:end="375:69">// let dynamic protocol handlers have a stab at the line.</comment>

            <expr_stmt pos:start="377:13" pos:end="377:45"><expr pos:start="377:13" pos:end="377:44"><call pos:start="377:13" pos:end="377:44"><name pos:start="377:13" pos:end="377:20">get_word</name><argument_list pos:start="377:21" pos:end="377:44">(<argument pos:start="377:22" pos:end="377:25"><expr pos:start="377:22" pos:end="377:25"><name pos:start="377:22" pos:end="377:25">buf1</name></expr></argument>, <argument pos:start="377:28" pos:end="377:39"><expr pos:start="377:28" pos:end="377:39"><sizeof pos:start="377:28" pos:end="377:39">sizeof<argument_list pos:start="377:34" pos:end="377:39">(<argument pos:start="377:35" pos:end="377:38"><expr pos:start="377:35" pos:end="377:38"><name pos:start="377:35" pos:end="377:38">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="377:42" pos:end="377:43"><expr pos:start="377:42" pos:end="377:43"><operator pos:start="377:42" pos:end="377:42">&amp;</operator><name pos:start="377:43" pos:end="377:43">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="379:13" pos:end="379:38"><expr pos:start="379:13" pos:end="379:37"><name pos:start="379:13" pos:end="379:24">payload_type</name> <operator pos:start="379:26" pos:end="379:26">=</operator> <call pos:start="379:28" pos:end="379:37"><name pos:start="379:28" pos:end="379:31">atoi</name><argument_list pos:start="379:32" pos:end="379:37">(<argument pos:start="379:33" pos:end="379:36"><expr pos:start="379:33" pos:end="379:36"><name pos:start="379:33" pos:end="379:36">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="381:13" pos:end="391:13"><if pos:start="381:13" pos:end="385:13">if <condition pos:start="381:16" pos:end="381:32">(<expr pos:start="381:17" pos:end="381:31"><name pos:start="381:17" pos:end="381:31"><name pos:start="381:17" pos:end="381:18">s1</name><operator pos:start="381:19" pos:end="381:20">-&gt;</operator><name pos:start="381:21" pos:end="381:31">seen_rtpmap</name></name></expr>)</condition> <block pos:start="381:34" pos:end="385:13">{<block_content pos:start="383:17" pos:end="383:53">

                <expr_stmt pos:start="383:17" pos:end="383:53"><expr pos:start="383:17" pos:end="383:52"><call pos:start="383:17" pos:end="383:52"><name pos:start="383:17" pos:end="383:26">parse_fmtp</name><argument_list pos:start="383:27" pos:end="383:52">(<argument pos:start="383:28" pos:end="383:28"><expr pos:start="383:28" pos:end="383:28"><name pos:start="383:28" pos:end="383:28">s</name></expr></argument>, <argument pos:start="383:31" pos:end="383:32"><expr pos:start="383:31" pos:end="383:32"><name pos:start="383:31" pos:end="383:32">rt</name></expr></argument>, <argument pos:start="383:35" pos:end="383:46"><expr pos:start="383:35" pos:end="383:46"><name pos:start="383:35" pos:end="383:46">payload_type</name></expr></argument>, <argument pos:start="383:49" pos:end="383:51"><expr pos:start="383:49" pos:end="383:51"><name pos:start="383:49" pos:end="383:51">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="385:15" pos:end="391:13">else <block pos:start="385:20" pos:end="391:13">{<block_content pos:start="387:17" pos:end="389:76">

                <expr_stmt pos:start="387:17" pos:end="387:34"><expr pos:start="387:17" pos:end="387:33"><name pos:start="387:17" pos:end="387:29"><name pos:start="387:17" pos:end="387:18">s1</name><operator pos:start="387:19" pos:end="387:20">-&gt;</operator><name pos:start="387:21" pos:end="387:29">seen_fmtp</name></name> <operator pos:start="387:31" pos:end="387:31">=</operator> <literal type="number" pos:start="387:33" pos:end="387:33">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="389:17" pos:end="389:76"><expr pos:start="389:17" pos:end="389:75"><call pos:start="389:17" pos:end="389:75"><name pos:start="389:17" pos:end="389:26">av_strlcpy</name><argument_list pos:start="389:27" pos:end="389:75">(<argument pos:start="389:28" pos:end="389:43"><expr pos:start="389:28" pos:end="389:43"><name pos:start="389:28" pos:end="389:43"><name pos:start="389:28" pos:end="389:29">s1</name><operator pos:start="389:30" pos:end="389:31">-&gt;</operator><name pos:start="389:32" pos:end="389:43">delayed_fmtp</name></name></expr></argument>, <argument pos:start="389:46" pos:end="389:48"><expr pos:start="389:46" pos:end="389:48"><name pos:start="389:46" pos:end="389:48">buf</name></expr></argument>, <argument pos:start="389:51" pos:end="389:74"><expr pos:start="389:51" pos:end="389:74"><sizeof pos:start="389:51" pos:end="389:74">sizeof<argument_list pos:start="389:57" pos:end="389:74">(<argument pos:start="389:58" pos:end="389:73"><expr pos:start="389:58" pos:end="389:73"><name pos:start="389:58" pos:end="389:73"><name pos:start="389:58" pos:end="389:59">s1</name><operator pos:start="389:60" pos:end="389:61">-&gt;</operator><name pos:start="389:62" pos:end="389:73">delayed_fmtp</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="393:11" pos:end="411:9">else if <condition pos:start="393:19" pos:end="393:48">(<expr pos:start="393:20" pos:end="393:47"><call pos:start="393:20" pos:end="393:47"><name pos:start="393:20" pos:end="393:30">av_strstart</name><argument_list pos:start="393:31" pos:end="393:47">(<argument pos:start="393:32" pos:end="393:32"><expr pos:start="393:32" pos:end="393:32"><name pos:start="393:32" pos:end="393:32">p</name></expr></argument>, <argument pos:start="393:35" pos:end="393:42"><expr pos:start="393:35" pos:end="393:42"><literal type="string" pos:start="393:35" pos:end="393:42">"range:"</literal></expr></argument>, <argument pos:start="393:45" pos:end="393:46"><expr pos:start="393:45" pos:end="393:46"><operator pos:start="393:45" pos:end="393:45">&amp;</operator><name pos:start="393:46" pos:end="393:46">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="393:50" pos:end="411:9">{<block_content pos:start="395:13" pos:end="409:57">

            <decl_stmt pos:start="395:13" pos:end="395:31"><decl pos:start="395:13" pos:end="395:25"><type pos:start="395:13" pos:end="395:19"><name pos:start="395:13" pos:end="395:19">int64_t</name></type> <name pos:start="395:21" pos:end="395:25">start</name></decl>, <decl pos:start="395:28" pos:end="395:30"><type ref="prev" pos:start="395:13" pos:end="395:19"/><name pos:start="395:28" pos:end="395:30">end</name></decl>;</decl_stmt>



            <comment type="line" pos:start="399:13" pos:end="399:67">// this is so that seeking on a streamed file can work.</comment>

            <expr_stmt pos:start="401:13" pos:end="401:50"><expr pos:start="401:13" pos:end="401:49"><call pos:start="401:13" pos:end="401:49"><name pos:start="401:13" pos:end="401:32">rtsp_parse_range_npt</name><argument_list pos:start="401:33" pos:end="401:49">(<argument pos:start="401:34" pos:end="401:34"><expr pos:start="401:34" pos:end="401:34"><name pos:start="401:34" pos:end="401:34">p</name></expr></argument>, <argument pos:start="401:37" pos:end="401:42"><expr pos:start="401:37" pos:end="401:42"><operator pos:start="401:37" pos:end="401:37">&amp;</operator><name pos:start="401:38" pos:end="401:42">start</name></expr></argument>, <argument pos:start="401:45" pos:end="401:48"><expr pos:start="401:45" pos:end="401:48"><operator pos:start="401:45" pos:end="401:45">&amp;</operator><name pos:start="401:46" pos:end="401:48">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="403:13" pos:end="403:34"><expr pos:start="403:13" pos:end="403:33"><name pos:start="403:13" pos:end="403:25"><name pos:start="403:13" pos:end="403:13">s</name><operator pos:start="403:14" pos:end="403:15">-&gt;</operator><name pos:start="403:16" pos:end="403:25">start_time</name></name> <operator pos:start="403:27" pos:end="403:27">=</operator> <name pos:start="403:29" pos:end="403:33">start</name></expr>;</expr_stmt>

            <comment type="block" pos:start="405:13" pos:end="405:70">/* AV_NOPTS_VALUE means live broadcast (and can't seek) */</comment>

            <expr_stmt pos:start="407:13" pos:end="409:57"><expr pos:start="407:13" pos:end="409:56"><name pos:start="407:13" pos:end="407:23"><name pos:start="407:13" pos:end="407:13">s</name><operator pos:start="407:14" pos:end="407:15">-&gt;</operator><name pos:start="407:16" pos:end="407:23">duration</name></name>   <operator pos:start="407:27" pos:end="407:27">=</operator> <ternary pos:start="407:29" pos:end="409:56"><condition pos:start="407:29" pos:end="407:53"><expr pos:start="407:29" pos:end="407:51"><operator pos:start="407:29" pos:end="407:29">(</operator><name pos:start="407:30" pos:end="407:32">end</name> <operator pos:start="407:34" pos:end="407:35">==</operator> <name pos:start="407:37" pos:end="407:50">AV_NOPTS_VALUE</name><operator pos:start="407:51" pos:end="407:51">)</operator></expr> ?</condition><then pos:start="409:29" pos:end="409:42">

                            <expr pos:start="409:29" pos:end="409:42"><name pos:start="409:29" pos:end="409:42">AV_NOPTS_VALUE</name></expr> </then><else pos:start="409:44" pos:end="409:56">: <expr pos:start="409:46" pos:end="409:56"><name pos:start="409:46" pos:end="409:48">end</name> <operator pos:start="409:50" pos:end="409:50">-</operator> <name pos:start="409:52" pos:end="409:56">start</name></expr></else></ternary></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="411:11" pos:end="417:9">else if <condition pos:start="411:19" pos:end="411:64">(<expr pos:start="411:20" pos:end="411:63"><call pos:start="411:20" pos:end="411:63"><name pos:start="411:20" pos:end="411:30">av_strstart</name><argument_list pos:start="411:31" pos:end="411:63">(<argument pos:start="411:32" pos:end="411:32"><expr pos:start="411:32" pos:end="411:32"><name pos:start="411:32" pos:end="411:32">p</name></expr></argument>, <argument pos:start="411:35" pos:end="411:59"><expr pos:start="411:35" pos:end="411:59"><literal type="string" pos:start="411:35" pos:end="411:59">"IsRealDataType:integer;"</literal></expr></argument>,<argument pos:start="411:61" pos:end="411:62"><expr pos:start="411:61" pos:end="411:62"><operator pos:start="411:61" pos:end="411:61">&amp;</operator><name pos:start="411:62" pos:end="411:62">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="411:66" pos:end="417:9">{<block_content pos:start="413:13" pos:end="415:51">

            <if_stmt pos:start="413:13" pos:end="415:51"><if pos:start="413:13" pos:end="415:51">if <condition pos:start="413:16" pos:end="413:29">(<expr pos:start="413:17" pos:end="413:28"><call pos:start="413:17" pos:end="413:23"><name pos:start="413:17" pos:end="413:20">atoi</name><argument_list pos:start="413:21" pos:end="413:23">(<argument pos:start="413:22" pos:end="413:22"><expr pos:start="413:22" pos:end="413:22"><name pos:start="413:22" pos:end="413:22">p</name></expr></argument>)</argument_list></call> <operator pos:start="413:25" pos:end="413:26">==</operator> <literal type="number" pos:start="413:28" pos:end="413:28">1</literal></expr>)</condition><block type="pseudo" pos:start="415:17" pos:end="415:51"><block_content pos:start="415:17" pos:end="415:51">

                <expr_stmt pos:start="415:17" pos:end="415:51"><expr pos:start="415:17" pos:end="415:50"><name pos:start="415:17" pos:end="415:29"><name pos:start="415:17" pos:end="415:18">rt</name><operator pos:start="415:19" pos:end="415:20">-&gt;</operator><name pos:start="415:21" pos:end="415:29">transport</name></name> <operator pos:start="415:31" pos:end="415:31">=</operator> <name pos:start="415:33" pos:end="415:50">RTSP_TRANSPORT_RDT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="417:11" pos:end="425:9">else if <condition pos:start="417:19" pos:end="419:37">(<expr pos:start="417:20" pos:end="419:36"><call pos:start="417:20" pos:end="417:60"><name pos:start="417:20" pos:end="417:30">av_strstart</name><argument_list pos:start="417:31" pos:end="417:60">(<argument pos:start="417:32" pos:end="417:32"><expr pos:start="417:32" pos:end="417:32"><name pos:start="417:32" pos:end="417:32">p</name></expr></argument>, <argument pos:start="417:35" pos:end="417:55"><expr pos:start="417:35" pos:end="417:55"><literal type="string" pos:start="417:35" pos:end="417:55">"SampleRate:integer;"</literal></expr></argument>, <argument pos:start="417:58" pos:end="417:59"><expr pos:start="417:58" pos:end="417:59"><operator pos:start="417:58" pos:end="417:58">&amp;</operator><name pos:start="417:59" pos:end="417:59">p</name></expr></argument>)</argument_list></call> <operator pos:start="417:62" pos:end="417:63">&amp;&amp;</operator>

                   <name pos:start="419:20" pos:end="419:32"><name pos:start="419:20" pos:end="419:20">s</name><operator pos:start="419:21" pos:end="419:22">-&gt;</operator><name pos:start="419:23" pos:end="419:32">nb_streams</name></name> <operator pos:start="419:34" pos:end="419:34">&gt;</operator> <literal type="number" pos:start="419:36" pos:end="419:36">0</literal></expr>)</condition> <block pos:start="419:39" pos:end="425:9">{<block_content pos:start="421:13" pos:end="423:45">

            <expr_stmt pos:start="421:13" pos:end="421:47"><expr pos:start="421:13" pos:end="421:46"><name pos:start="421:13" pos:end="421:14">st</name> <operator pos:start="421:16" pos:end="421:16">=</operator> <name pos:start="421:18" pos:end="421:46"><name pos:start="421:18" pos:end="421:18">s</name><operator pos:start="421:19" pos:end="421:20">-&gt;</operator><name pos:start="421:21" pos:end="421:27">streams</name><index pos:start="421:28" pos:end="421:46">[<expr pos:start="421:29" pos:end="421:45"><name pos:start="421:29" pos:end="421:41"><name pos:start="421:29" pos:end="421:29">s</name><operator pos:start="421:30" pos:end="421:31">-&gt;</operator><name pos:start="421:32" pos:end="421:41">nb_streams</name></name> <operator pos:start="421:43" pos:end="421:43">-</operator> <literal type="number" pos:start="421:45" pos:end="421:45">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="423:13" pos:end="423:45"><expr pos:start="423:13" pos:end="423:44"><name pos:start="423:13" pos:end="423:34"><name pos:start="423:13" pos:end="423:14">st</name><operator pos:start="423:15" pos:end="423:16">-&gt;</operator><name pos:start="423:17" pos:end="423:21">codec</name><operator pos:start="423:22" pos:end="423:23">-&gt;</operator><name pos:start="423:24" pos:end="423:34">sample_rate</name></name> <operator pos:start="423:36" pos:end="423:36">=</operator> <call pos:start="423:38" pos:end="423:44"><name pos:start="423:38" pos:end="423:41">atoi</name><argument_list pos:start="423:42" pos:end="423:44">(<argument pos:start="423:43" pos:end="423:43"><expr pos:start="423:43" pos:end="423:43"><name pos:start="423:43" pos:end="423:43">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="425:11" pos:end="441:9">else if <condition pos:start="425:19" pos:end="425:70">(<expr pos:start="425:20" pos:end="425:69"><call pos:start="425:20" pos:end="425:48"><name pos:start="425:20" pos:end="425:30">av_strstart</name><argument_list pos:start="425:31" pos:end="425:48">(<argument pos:start="425:32" pos:end="425:32"><expr pos:start="425:32" pos:end="425:32"><name pos:start="425:32" pos:end="425:32">p</name></expr></argument>, <argument pos:start="425:35" pos:end="425:43"><expr pos:start="425:35" pos:end="425:43"><literal type="string" pos:start="425:35" pos:end="425:43">"crypto:"</literal></expr></argument>, <argument pos:start="425:46" pos:end="425:47"><expr pos:start="425:46" pos:end="425:47"><operator pos:start="425:46" pos:end="425:46">&amp;</operator><name pos:start="425:47" pos:end="425:47">p</name></expr></argument>)</argument_list></call> <operator pos:start="425:50" pos:end="425:51">&amp;&amp;</operator> <name pos:start="425:53" pos:end="425:65"><name pos:start="425:53" pos:end="425:53">s</name><operator pos:start="425:54" pos:end="425:55">-&gt;</operator><name pos:start="425:56" pos:end="425:65">nb_streams</name></name> <operator pos:start="425:67" pos:end="425:67">&gt;</operator> <literal type="number" pos:start="425:69" pos:end="425:69">0</literal></expr>)</condition> <block pos:start="425:72" pos:end="441:9">{<block_content pos:start="429:13" pos:end="439:85">

            <comment type="line" pos:start="427:13" pos:end="427:23">// RFC 4568</comment>

            <expr_stmt pos:start="429:13" pos:end="429:64"><expr pos:start="429:13" pos:end="429:63"><name pos:start="429:13" pos:end="429:19">rtsp_st</name> <operator pos:start="429:21" pos:end="429:21">=</operator> <name pos:start="429:23" pos:end="429:63"><name pos:start="429:23" pos:end="429:24">rt</name><operator pos:start="429:25" pos:end="429:26">-&gt;</operator><name pos:start="429:27" pos:end="429:38">rtsp_streams</name><index pos:start="429:39" pos:end="429:63">[<expr pos:start="429:40" pos:end="429:62"><name pos:start="429:40" pos:end="429:58"><name pos:start="429:40" pos:end="429:41">rt</name><operator pos:start="429:42" pos:end="429:43">-&gt;</operator><name pos:start="429:44" pos:end="429:58">nb_rtsp_streams</name></name> <operator pos:start="429:60" pos:end="429:60">-</operator> <literal type="number" pos:start="429:62" pos:end="429:62">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="431:13" pos:end="431:45"><expr pos:start="431:13" pos:end="431:44"><call pos:start="431:13" pos:end="431:44"><name pos:start="431:13" pos:end="431:20">get_word</name><argument_list pos:start="431:21" pos:end="431:44">(<argument pos:start="431:22" pos:end="431:25"><expr pos:start="431:22" pos:end="431:25"><name pos:start="431:22" pos:end="431:25">buf1</name></expr></argument>, <argument pos:start="431:28" pos:end="431:39"><expr pos:start="431:28" pos:end="431:39"><sizeof pos:start="431:28" pos:end="431:39">sizeof<argument_list pos:start="431:34" pos:end="431:39">(<argument pos:start="431:35" pos:end="431:38"><expr pos:start="431:35" pos:end="431:38"><name pos:start="431:35" pos:end="431:38">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="431:42" pos:end="431:43"><expr pos:start="431:42" pos:end="431:43"><operator pos:start="431:42" pos:end="431:42">&amp;</operator><name pos:start="431:43" pos:end="431:43">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="431:47" pos:end="431:59">// ignore tag</comment>

            <expr_stmt pos:start="433:13" pos:end="433:79"><expr pos:start="433:13" pos:end="433:78"><call pos:start="433:13" pos:end="433:78"><name pos:start="433:13" pos:end="433:20">get_word</name><argument_list pos:start="433:21" pos:end="433:78">(<argument pos:start="433:22" pos:end="433:42"><expr pos:start="433:22" pos:end="433:42"><name pos:start="433:22" pos:end="433:42"><name pos:start="433:22" pos:end="433:28">rtsp_st</name><operator pos:start="433:29" pos:end="433:30">-&gt;</operator><name pos:start="433:31" pos:end="433:42">crypto_suite</name></name></expr></argument>, <argument pos:start="433:45" pos:end="433:73"><expr pos:start="433:45" pos:end="433:73"><sizeof pos:start="433:45" pos:end="433:73">sizeof<argument_list pos:start="433:51" pos:end="433:73">(<argument pos:start="433:52" pos:end="433:72"><expr pos:start="433:52" pos:end="433:72"><name pos:start="433:52" pos:end="433:72"><name pos:start="433:52" pos:end="433:58">rtsp_st</name><operator pos:start="433:59" pos:end="433:60">-&gt;</operator><name pos:start="433:61" pos:end="433:72">crypto_suite</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="433:76" pos:end="433:77"><expr pos:start="433:76" pos:end="433:77"><operator pos:start="433:76" pos:end="433:76">&amp;</operator><name pos:start="433:77" pos:end="433:77">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="435:13" pos:end="435:40"><expr pos:start="435:13" pos:end="435:39"><name pos:start="435:13" pos:end="435:13">p</name> <operator pos:start="435:15" pos:end="435:16">+=</operator> <call pos:start="435:18" pos:end="435:39"><name pos:start="435:18" pos:end="435:23">strspn</name><argument_list pos:start="435:24" pos:end="435:39">(<argument pos:start="435:25" pos:end="435:25"><expr pos:start="435:25" pos:end="435:25"><name pos:start="435:25" pos:end="435:25">p</name></expr></argument>, <argument pos:start="435:28" pos:end="435:38"><expr pos:start="435:28" pos:end="435:38"><name pos:start="435:28" pos:end="435:38">SPACE_CHARS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="437:13" pos:end="439:85"><if pos:start="437:13" pos:end="439:85">if <condition pos:start="437:16" pos:end="437:46">(<expr pos:start="437:17" pos:end="437:45"><call pos:start="437:17" pos:end="437:45"><name pos:start="437:17" pos:end="437:27">av_strstart</name><argument_list pos:start="437:28" pos:end="437:45">(<argument pos:start="437:29" pos:end="437:29"><expr pos:start="437:29" pos:end="437:29"><name pos:start="437:29" pos:end="437:29">p</name></expr></argument>, <argument pos:start="437:32" pos:end="437:40"><expr pos:start="437:32" pos:end="437:40"><literal type="string" pos:start="437:32" pos:end="437:40">"inline:"</literal></expr></argument>, <argument pos:start="437:43" pos:end="437:44"><expr pos:start="437:43" pos:end="437:44"><operator pos:start="437:43" pos:end="437:43">&amp;</operator><name pos:start="437:44" pos:end="437:44">p</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="439:17" pos:end="439:85"><block_content pos:start="439:17" pos:end="439:85">

                <expr_stmt pos:start="439:17" pos:end="439:85"><expr pos:start="439:17" pos:end="439:84"><call pos:start="439:17" pos:end="439:84"><name pos:start="439:17" pos:end="439:24">get_word</name><argument_list pos:start="439:25" pos:end="439:84">(<argument pos:start="439:26" pos:end="439:47"><expr pos:start="439:26" pos:end="439:47"><name pos:start="439:26" pos:end="439:47"><name pos:start="439:26" pos:end="439:32">rtsp_st</name><operator pos:start="439:33" pos:end="439:34">-&gt;</operator><name pos:start="439:35" pos:end="439:47">crypto_params</name></name></expr></argument>, <argument pos:start="439:50" pos:end="439:79"><expr pos:start="439:50" pos:end="439:79"><sizeof pos:start="439:50" pos:end="439:79">sizeof<argument_list pos:start="439:56" pos:end="439:79">(<argument pos:start="439:57" pos:end="439:78"><expr pos:start="439:57" pos:end="439:78"><name pos:start="439:57" pos:end="439:78"><name pos:start="439:57" pos:end="439:63">rtsp_st</name><operator pos:start="439:64" pos:end="439:65">-&gt;</operator><name pos:start="439:66" pos:end="439:78">crypto_params</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="439:82" pos:end="439:83"><expr pos:start="439:82" pos:end="439:83"><operator pos:start="439:82" pos:end="439:82">&amp;</operator><name pos:start="439:83" pos:end="439:83">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="441:11" pos:end="515:9">else if <condition pos:start="441:19" pos:end="441:56">(<expr pos:start="441:20" pos:end="441:55"><call pos:start="441:20" pos:end="441:55"><name pos:start="441:20" pos:end="441:30">av_strstart</name><argument_list pos:start="441:31" pos:end="441:55">(<argument pos:start="441:32" pos:end="441:32"><expr pos:start="441:32" pos:end="441:32"><name pos:start="441:32" pos:end="441:32">p</name></expr></argument>, <argument pos:start="441:35" pos:end="441:50"><expr pos:start="441:35" pos:end="441:50"><literal type="string" pos:start="441:35" pos:end="441:50">"source-filter:"</literal></expr></argument>, <argument pos:start="441:53" pos:end="441:54"><expr pos:start="441:53" pos:end="441:54"><operator pos:start="441:53" pos:end="441:53">&amp;</operator><name pos:start="441:54" pos:end="441:54">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="441:58" pos:end="515:9">{<block_content pos:start="443:13" pos:end="513:13">

            <decl_stmt pos:start="443:13" pos:end="443:28"><decl pos:start="443:13" pos:end="443:27"><type pos:start="443:13" pos:end="443:15"><name pos:start="443:13" pos:end="443:15">int</name></type> <name pos:start="443:17" pos:end="443:23">exclude</name> <init pos:start="443:25" pos:end="443:27">= <expr pos:start="443:27" pos:end="443:27"><literal type="number" pos:start="443:27" pos:end="443:27">0</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="445:13" pos:end="445:45"><expr pos:start="445:13" pos:end="445:44"><call pos:start="445:13" pos:end="445:44"><name pos:start="445:13" pos:end="445:20">get_word</name><argument_list pos:start="445:21" pos:end="445:44">(<argument pos:start="445:22" pos:end="445:25"><expr pos:start="445:22" pos:end="445:25"><name pos:start="445:22" pos:end="445:25">buf1</name></expr></argument>, <argument pos:start="445:28" pos:end="445:39"><expr pos:start="445:28" pos:end="445:39"><sizeof pos:start="445:28" pos:end="445:39">sizeof<argument_list pos:start="445:34" pos:end="445:39">(<argument pos:start="445:35" pos:end="445:38"><expr pos:start="445:35" pos:end="445:38"><name pos:start="445:35" pos:end="445:38">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="445:42" pos:end="445:43"><expr pos:start="445:42" pos:end="445:43"><operator pos:start="445:42" pos:end="445:42">&amp;</operator><name pos:start="445:43" pos:end="445:43">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="447:13" pos:end="449:23"><if pos:start="447:13" pos:end="449:23">if <condition pos:start="447:16" pos:end="447:61">(<expr pos:start="447:17" pos:end="447:60"><call pos:start="447:17" pos:end="447:36"><name pos:start="447:17" pos:end="447:22">strcmp</name><argument_list pos:start="447:23" pos:end="447:36">(<argument pos:start="447:24" pos:end="447:27"><expr pos:start="447:24" pos:end="447:27"><name pos:start="447:24" pos:end="447:27">buf1</name></expr></argument>, <argument pos:start="447:30" pos:end="447:35"><expr pos:start="447:30" pos:end="447:35"><literal type="string" pos:start="447:30" pos:end="447:35">"incl"</literal></expr></argument>)</argument_list></call> <operator pos:start="447:38" pos:end="447:39">&amp;&amp;</operator> <call pos:start="447:41" pos:end="447:60"><name pos:start="447:41" pos:end="447:46">strcmp</name><argument_list pos:start="447:47" pos:end="447:60">(<argument pos:start="447:48" pos:end="447:51"><expr pos:start="447:48" pos:end="447:51"><name pos:start="447:48" pos:end="447:51">buf1</name></expr></argument>, <argument pos:start="447:54" pos:end="447:59"><expr pos:start="447:54" pos:end="447:59"><literal type="string" pos:start="447:54" pos:end="447:59">"excl"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="449:17" pos:end="449:23"><block_content pos:start="449:17" pos:end="449:23">

                <return pos:start="449:17" pos:end="449:23">return;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="451:13" pos:end="451:44"><expr pos:start="451:13" pos:end="451:43"><name pos:start="451:13" pos:end="451:19">exclude</name> <operator pos:start="451:21" pos:end="451:21">=</operator> <operator pos:start="451:23" pos:end="451:23">!</operator><call pos:start="451:24" pos:end="451:43"><name pos:start="451:24" pos:end="451:29">strcmp</name><argument_list pos:start="451:30" pos:end="451:43">(<argument pos:start="451:31" pos:end="451:34"><expr pos:start="451:31" pos:end="451:34"><name pos:start="451:31" pos:end="451:34">buf1</name></expr></argument>, <argument pos:start="451:37" pos:end="451:42"><expr pos:start="451:37" pos:end="451:42"><literal type="string" pos:start="451:37" pos:end="451:42">"excl"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="455:13" pos:end="455:45"><expr pos:start="455:13" pos:end="455:44"><call pos:start="455:13" pos:end="455:44"><name pos:start="455:13" pos:end="455:20">get_word</name><argument_list pos:start="455:21" pos:end="455:44">(<argument pos:start="455:22" pos:end="455:25"><expr pos:start="455:22" pos:end="455:25"><name pos:start="455:22" pos:end="455:25">buf1</name></expr></argument>, <argument pos:start="455:28" pos:end="455:39"><expr pos:start="455:28" pos:end="455:39"><sizeof pos:start="455:28" pos:end="455:39">sizeof<argument_list pos:start="455:34" pos:end="455:39">(<argument pos:start="455:35" pos:end="455:38"><expr pos:start="455:35" pos:end="455:38"><name pos:start="455:35" pos:end="455:38">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="455:42" pos:end="455:43"><expr pos:start="455:42" pos:end="455:43"><operator pos:start="455:42" pos:end="455:42">&amp;</operator><name pos:start="455:43" pos:end="455:43">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="457:13" pos:end="459:23"><if pos:start="457:13" pos:end="459:23">if <condition pos:start="457:16" pos:end="457:40">(<expr pos:start="457:17" pos:end="457:39"><call pos:start="457:17" pos:end="457:34"><name pos:start="457:17" pos:end="457:22">strcmp</name><argument_list pos:start="457:23" pos:end="457:34">(<argument pos:start="457:24" pos:end="457:27"><expr pos:start="457:24" pos:end="457:27"><name pos:start="457:24" pos:end="457:27">buf1</name></expr></argument>, <argument pos:start="457:30" pos:end="457:33"><expr pos:start="457:30" pos:end="457:33"><literal type="string" pos:start="457:30" pos:end="457:33">"IN"</literal></expr></argument>)</argument_list></call> <operator pos:start="457:36" pos:end="457:37">!=</operator> <literal type="number" pos:start="457:39" pos:end="457:39">0</literal></expr>)</condition><block type="pseudo" pos:start="459:17" pos:end="459:23"><block_content pos:start="459:17" pos:end="459:23">

                <return pos:start="459:17" pos:end="459:23">return;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="461:13" pos:end="461:45"><expr pos:start="461:13" pos:end="461:44"><call pos:start="461:13" pos:end="461:44"><name pos:start="461:13" pos:end="461:20">get_word</name><argument_list pos:start="461:21" pos:end="461:44">(<argument pos:start="461:22" pos:end="461:25"><expr pos:start="461:22" pos:end="461:25"><name pos:start="461:22" pos:end="461:25">buf1</name></expr></argument>, <argument pos:start="461:28" pos:end="461:39"><expr pos:start="461:28" pos:end="461:39"><sizeof pos:start="461:28" pos:end="461:39">sizeof<argument_list pos:start="461:34" pos:end="461:39">(<argument pos:start="461:35" pos:end="461:38"><expr pos:start="461:35" pos:end="461:38"><name pos:start="461:35" pos:end="461:38">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="461:42" pos:end="461:43"><expr pos:start="461:42" pos:end="461:43"><operator pos:start="461:42" pos:end="461:42">&amp;</operator><name pos:start="461:43" pos:end="461:43">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="463:13" pos:end="465:23"><if pos:start="463:13" pos:end="465:23">if <condition pos:start="463:16" pos:end="463:80">(<expr pos:start="463:17" pos:end="463:79"><call pos:start="463:17" pos:end="463:35"><name pos:start="463:17" pos:end="463:22">strcmp</name><argument_list pos:start="463:23" pos:end="463:35">(<argument pos:start="463:24" pos:end="463:27"><expr pos:start="463:24" pos:end="463:27"><name pos:start="463:24" pos:end="463:27">buf1</name></expr></argument>, <argument pos:start="463:30" pos:end="463:34"><expr pos:start="463:30" pos:end="463:34"><literal type="string" pos:start="463:30" pos:end="463:34">"IP4"</literal></expr></argument>)</argument_list></call> <operator pos:start="463:37" pos:end="463:38">&amp;&amp;</operator> <call pos:start="463:40" pos:end="463:58"><name pos:start="463:40" pos:end="463:45">strcmp</name><argument_list pos:start="463:46" pos:end="463:58">(<argument pos:start="463:47" pos:end="463:50"><expr pos:start="463:47" pos:end="463:50"><name pos:start="463:47" pos:end="463:50">buf1</name></expr></argument>, <argument pos:start="463:53" pos:end="463:57"><expr pos:start="463:53" pos:end="463:57"><literal type="string" pos:start="463:53" pos:end="463:57">"IP6"</literal></expr></argument>)</argument_list></call> <operator pos:start="463:60" pos:end="463:61">&amp;&amp;</operator> <call pos:start="463:63" pos:end="463:79"><name pos:start="463:63" pos:end="463:68">strcmp</name><argument_list pos:start="463:69" pos:end="463:79">(<argument pos:start="463:70" pos:end="463:73"><expr pos:start="463:70" pos:end="463:73"><name pos:start="463:70" pos:end="463:73">buf1</name></expr></argument>, <argument pos:start="463:76" pos:end="463:78"><expr pos:start="463:76" pos:end="463:78"><literal type="string" pos:start="463:76" pos:end="463:78">"*"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="465:17" pos:end="465:23"><block_content pos:start="465:17" pos:end="465:23">

                <return pos:start="465:17" pos:end="465:23">return;</return></block_content></block></if></if_stmt>

            <comment type="line" pos:start="467:13" pos:end="467:88">// not checking that the destination address actually matches or is wildcard</comment>

            <expr_stmt pos:start="469:13" pos:end="469:45"><expr pos:start="469:13" pos:end="469:44"><call pos:start="469:13" pos:end="469:44"><name pos:start="469:13" pos:end="469:20">get_word</name><argument_list pos:start="469:21" pos:end="469:44">(<argument pos:start="469:22" pos:end="469:25"><expr pos:start="469:22" pos:end="469:25"><name pos:start="469:22" pos:end="469:25">buf1</name></expr></argument>, <argument pos:start="469:28" pos:end="469:39"><expr pos:start="469:28" pos:end="469:39"><sizeof pos:start="469:28" pos:end="469:39">sizeof<argument_list pos:start="469:34" pos:end="469:39">(<argument pos:start="469:35" pos:end="469:38"><expr pos:start="469:35" pos:end="469:38"><name pos:start="469:35" pos:end="469:38">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="469:42" pos:end="469:43"><expr pos:start="469:42" pos:end="469:43"><operator pos:start="469:42" pos:end="469:42">&amp;</operator><name pos:start="469:43" pos:end="469:43">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <while pos:start="473:13" pos:end="513:13">while <condition pos:start="473:19" pos:end="473:30">(<expr pos:start="473:20" pos:end="473:29"><operator pos:start="473:20" pos:end="473:20">*</operator><name pos:start="473:21" pos:end="473:21">p</name> <operator pos:start="473:23" pos:end="473:24">!=</operator> <literal type="char" pos:start="473:26" pos:end="473:29">'\0'</literal></expr>)</condition> <block pos:start="473:32" pos:end="513:13">{<block_content pos:start="475:17" pos:end="511:17">

                <expr_stmt pos:start="475:17" pos:end="475:57"><expr pos:start="475:17" pos:end="475:56"><name pos:start="475:17" pos:end="475:24">rtsp_src</name> <operator pos:start="475:26" pos:end="475:26">=</operator> <call pos:start="475:28" pos:end="475:56"><name pos:start="475:28" pos:end="475:37">av_mallocz</name><argument_list pos:start="475:38" pos:end="475:56">(<argument pos:start="475:39" pos:end="475:55"><expr pos:start="475:39" pos:end="475:55"><sizeof pos:start="475:39" pos:end="475:55">sizeof<argument_list pos:start="475:45" pos:end="475:55">(<argument pos:start="475:46" pos:end="475:54"><expr pos:start="475:46" pos:end="475:54"><operator pos:start="475:46" pos:end="475:46">*</operator><name pos:start="475:47" pos:end="475:54">rtsp_src</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="477:17" pos:end="479:27"><if pos:start="477:17" pos:end="479:27">if <condition pos:start="477:20" pos:end="477:30">(<expr pos:start="477:21" pos:end="477:29"><operator pos:start="477:21" pos:end="477:21">!</operator><name pos:start="477:22" pos:end="477:29">rtsp_src</name></expr>)</condition><block type="pseudo" pos:start="479:21" pos:end="479:27"><block_content pos:start="479:21" pos:end="479:27">

                    <return pos:start="479:21" pos:end="479:27">return;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="481:17" pos:end="481:69"><expr pos:start="481:17" pos:end="481:68"><call pos:start="481:17" pos:end="481:68"><name pos:start="481:17" pos:end="481:24">get_word</name><argument_list pos:start="481:25" pos:end="481:68">(<argument pos:start="481:26" pos:end="481:39"><expr pos:start="481:26" pos:end="481:39"><name pos:start="481:26" pos:end="481:39"><name pos:start="481:26" pos:end="481:33">rtsp_src</name><operator pos:start="481:34" pos:end="481:35">-&gt;</operator><name pos:start="481:36" pos:end="481:39">addr</name></name></expr></argument>, <argument pos:start="481:42" pos:end="481:63"><expr pos:start="481:42" pos:end="481:63"><sizeof pos:start="481:42" pos:end="481:63">sizeof<argument_list pos:start="481:48" pos:end="481:63">(<argument pos:start="481:49" pos:end="481:62"><expr pos:start="481:49" pos:end="481:62"><name pos:start="481:49" pos:end="481:62"><name pos:start="481:49" pos:end="481:56">rtsp_src</name><operator pos:start="481:57" pos:end="481:58">-&gt;</operator><name pos:start="481:59" pos:end="481:62">addr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="481:66" pos:end="481:67"><expr pos:start="481:66" pos:end="481:67"><operator pos:start="481:66" pos:end="481:66">&amp;</operator><name pos:start="481:67" pos:end="481:67">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="483:17" pos:end="511:17"><if pos:start="483:17" pos:end="497:17">if <condition pos:start="483:20" pos:end="483:28">(<expr pos:start="483:21" pos:end="483:27"><name pos:start="483:21" pos:end="483:27">exclude</name></expr>)</condition> <block pos:start="483:30" pos:end="497:17">{<block_content pos:start="485:21" pos:end="495:21">

                    <if_stmt pos:start="485:21" pos:end="495:21"><if pos:start="485:21" pos:end="489:21">if <condition pos:start="485:24" pos:end="485:43">(<expr pos:start="485:25" pos:end="485:42"><name pos:start="485:25" pos:end="485:37"><name pos:start="485:25" pos:end="485:25">s</name><operator pos:start="485:26" pos:end="485:27">-&gt;</operator><name pos:start="485:28" pos:end="485:37">nb_streams</name></name> <operator pos:start="485:39" pos:end="485:40">==</operator> <literal type="number" pos:start="485:42" pos:end="485:42">0</literal></expr>)</condition> <block pos:start="485:45" pos:end="489:21">{<block_content pos:start="487:25" pos:end="487:120">

                        <expr_stmt pos:start="487:25" pos:end="487:120"><expr pos:start="487:25" pos:end="487:119"><call pos:start="487:25" pos:end="487:119"><name pos:start="487:25" pos:end="487:36">dynarray_add</name><argument_list pos:start="487:37" pos:end="487:119">(<argument pos:start="487:38" pos:end="487:70"><expr pos:start="487:38" pos:end="487:70"><operator pos:start="487:38" pos:end="487:38">&amp;</operator><name pos:start="487:39" pos:end="487:70"><name pos:start="487:39" pos:end="487:40">s1</name><operator pos:start="487:41" pos:end="487:42">-&gt;</operator><name pos:start="487:43" pos:end="487:70">default_exclude_source_addrs</name></name></expr></argument>, <argument pos:start="487:73" pos:end="487:108"><expr pos:start="487:73" pos:end="487:108"><operator pos:start="487:73" pos:end="487:73">&amp;</operator><name pos:start="487:74" pos:end="487:108"><name pos:start="487:74" pos:end="487:75">s1</name><operator pos:start="487:76" pos:end="487:77">-&gt;</operator><name pos:start="487:78" pos:end="487:108">nb_default_exclude_source_addrs</name></name></expr></argument>, <argument pos:start="487:111" pos:end="487:118"><expr pos:start="487:111" pos:end="487:118"><name pos:start="487:111" pos:end="487:118">rtsp_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="489:23" pos:end="495:21">else <block pos:start="489:28" pos:end="495:21">{<block_content pos:start="491:25" pos:end="493:114">

                        <expr_stmt pos:start="491:25" pos:end="491:76"><expr pos:start="491:25" pos:end="491:75"><name pos:start="491:25" pos:end="491:31">rtsp_st</name> <operator pos:start="491:33" pos:end="491:33">=</operator> <name pos:start="491:35" pos:end="491:75"><name pos:start="491:35" pos:end="491:36">rt</name><operator pos:start="491:37" pos:end="491:38">-&gt;</operator><name pos:start="491:39" pos:end="491:50">rtsp_streams</name><index pos:start="491:51" pos:end="491:75">[<expr pos:start="491:52" pos:end="491:74"><name pos:start="491:52" pos:end="491:70"><name pos:start="491:52" pos:end="491:53">rt</name><operator pos:start="491:54" pos:end="491:55">-&gt;</operator><name pos:start="491:56" pos:end="491:70">nb_rtsp_streams</name></name> <operator pos:start="491:72" pos:end="491:72">-</operator> <literal type="number" pos:start="491:74" pos:end="491:74">1</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="493:25" pos:end="493:114"><expr pos:start="493:25" pos:end="493:113"><call pos:start="493:25" pos:end="493:113"><name pos:start="493:25" pos:end="493:36">dynarray_add</name><argument_list pos:start="493:37" pos:end="493:113">(<argument pos:start="493:38" pos:end="493:67"><expr pos:start="493:38" pos:end="493:67"><operator pos:start="493:38" pos:end="493:38">&amp;</operator><name pos:start="493:39" pos:end="493:67"><name pos:start="493:39" pos:end="493:45">rtsp_st</name><operator pos:start="493:46" pos:end="493:47">-&gt;</operator><name pos:start="493:48" pos:end="493:67">exclude_source_addrs</name></name></expr></argument>, <argument pos:start="493:70" pos:end="493:102"><expr pos:start="493:70" pos:end="493:102"><operator pos:start="493:70" pos:end="493:70">&amp;</operator><name pos:start="493:71" pos:end="493:102"><name pos:start="493:71" pos:end="493:77">rtsp_st</name><operator pos:start="493:78" pos:end="493:79">-&gt;</operator><name pos:start="493:80" pos:end="493:102">nb_exclude_source_addrs</name></name></expr></argument>, <argument pos:start="493:105" pos:end="493:112"><expr pos:start="493:105" pos:end="493:112"><name pos:start="493:105" pos:end="493:112">rtsp_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="497:19" pos:end="511:17">else <block pos:start="497:24" pos:end="511:17">{<block_content pos:start="499:21" pos:end="509:21">

                    <if_stmt pos:start="499:21" pos:end="509:21"><if pos:start="499:21" pos:end="503:21">if <condition pos:start="499:24" pos:end="499:43">(<expr pos:start="499:25" pos:end="499:42"><name pos:start="499:25" pos:end="499:37"><name pos:start="499:25" pos:end="499:25">s</name><operator pos:start="499:26" pos:end="499:27">-&gt;</operator><name pos:start="499:28" pos:end="499:37">nb_streams</name></name> <operator pos:start="499:39" pos:end="499:40">==</operator> <literal type="number" pos:start="499:42" pos:end="499:42">0</literal></expr>)</condition> <block pos:start="499:45" pos:end="503:21">{<block_content pos:start="501:25" pos:end="501:120">

                        <expr_stmt pos:start="501:25" pos:end="501:120"><expr pos:start="501:25" pos:end="501:119"><call pos:start="501:25" pos:end="501:119"><name pos:start="501:25" pos:end="501:36">dynarray_add</name><argument_list pos:start="501:37" pos:end="501:119">(<argument pos:start="501:38" pos:end="501:70"><expr pos:start="501:38" pos:end="501:70"><operator pos:start="501:38" pos:end="501:38">&amp;</operator><name pos:start="501:39" pos:end="501:70"><name pos:start="501:39" pos:end="501:40">s1</name><operator pos:start="501:41" pos:end="501:42">-&gt;</operator><name pos:start="501:43" pos:end="501:70">default_include_source_addrs</name></name></expr></argument>, <argument pos:start="501:73" pos:end="501:108"><expr pos:start="501:73" pos:end="501:108"><operator pos:start="501:73" pos:end="501:73">&amp;</operator><name pos:start="501:74" pos:end="501:108"><name pos:start="501:74" pos:end="501:75">s1</name><operator pos:start="501:76" pos:end="501:77">-&gt;</operator><name pos:start="501:78" pos:end="501:108">nb_default_include_source_addrs</name></name></expr></argument>, <argument pos:start="501:111" pos:end="501:118"><expr pos:start="501:111" pos:end="501:118"><name pos:start="501:111" pos:end="501:118">rtsp_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="503:23" pos:end="509:21">else <block pos:start="503:28" pos:end="509:21">{<block_content pos:start="505:25" pos:end="507:114">

                        <expr_stmt pos:start="505:25" pos:end="505:76"><expr pos:start="505:25" pos:end="505:75"><name pos:start="505:25" pos:end="505:31">rtsp_st</name> <operator pos:start="505:33" pos:end="505:33">=</operator> <name pos:start="505:35" pos:end="505:75"><name pos:start="505:35" pos:end="505:36">rt</name><operator pos:start="505:37" pos:end="505:38">-&gt;</operator><name pos:start="505:39" pos:end="505:50">rtsp_streams</name><index pos:start="505:51" pos:end="505:75">[<expr pos:start="505:52" pos:end="505:74"><name pos:start="505:52" pos:end="505:70"><name pos:start="505:52" pos:end="505:53">rt</name><operator pos:start="505:54" pos:end="505:55">-&gt;</operator><name pos:start="505:56" pos:end="505:70">nb_rtsp_streams</name></name> <operator pos:start="505:72" pos:end="505:72">-</operator> <literal type="number" pos:start="505:74" pos:end="505:74">1</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="507:25" pos:end="507:114"><expr pos:start="507:25" pos:end="507:113"><call pos:start="507:25" pos:end="507:113"><name pos:start="507:25" pos:end="507:36">dynarray_add</name><argument_list pos:start="507:37" pos:end="507:113">(<argument pos:start="507:38" pos:end="507:67"><expr pos:start="507:38" pos:end="507:67"><operator pos:start="507:38" pos:end="507:38">&amp;</operator><name pos:start="507:39" pos:end="507:67"><name pos:start="507:39" pos:end="507:45">rtsp_st</name><operator pos:start="507:46" pos:end="507:47">-&gt;</operator><name pos:start="507:48" pos:end="507:67">include_source_addrs</name></name></expr></argument>, <argument pos:start="507:70" pos:end="507:102"><expr pos:start="507:70" pos:end="507:102"><operator pos:start="507:70" pos:end="507:70">&amp;</operator><name pos:start="507:71" pos:end="507:102"><name pos:start="507:71" pos:end="507:77">rtsp_st</name><operator pos:start="507:78" pos:end="507:79">-&gt;</operator><name pos:start="507:80" pos:end="507:102">nb_include_source_addrs</name></name></expr></argument>, <argument pos:start="507:105" pos:end="507:112"><expr pos:start="507:105" pos:end="507:112"><name pos:start="507:105" pos:end="507:112">rtsp_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></while>

        </block_content>}</block></if> <else pos:start="515:11" pos:end="545:9">else <block pos:start="515:16" pos:end="545:9">{<block_content pos:start="517:13" pos:end="543:13">

            <if_stmt pos:start="517:13" pos:end="519:46"><if pos:start="517:13" pos:end="519:46">if <condition pos:start="517:16" pos:end="517:51">(<expr pos:start="517:17" pos:end="517:50"><name pos:start="517:17" pos:end="517:31"><name pos:start="517:17" pos:end="517:18">rt</name><operator pos:start="517:19" pos:end="517:20">-&gt;</operator><name pos:start="517:21" pos:end="517:31">server_type</name></name> <operator pos:start="517:33" pos:end="517:34">==</operator> <name pos:start="517:36" pos:end="517:50">RTSP_SERVER_WMS</name></expr>)</condition><block type="pseudo" pos:start="519:17" pos:end="519:46"><block_content pos:start="519:17" pos:end="519:46">

                <expr_stmt pos:start="519:17" pos:end="519:46"><expr pos:start="519:17" pos:end="519:45"><call pos:start="519:17" pos:end="519:45"><name pos:start="519:17" pos:end="519:39">ff_wms_parse_sdp_a_line</name><argument_list pos:start="519:40" pos:end="519:45">(<argument pos:start="519:41" pos:end="519:41"><expr pos:start="519:41" pos:end="519:41"><name pos:start="519:41" pos:end="519:41">s</name></expr></argument>, <argument pos:start="519:44" pos:end="519:44"><expr pos:start="519:44" pos:end="519:44"><name pos:start="519:44" pos:end="519:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="521:13" pos:end="543:13"><if pos:start="521:13" pos:end="543:13">if <condition pos:start="521:16" pos:end="521:34">(<expr pos:start="521:17" pos:end="521:33"><name pos:start="521:17" pos:end="521:29"><name pos:start="521:17" pos:end="521:17">s</name><operator pos:start="521:18" pos:end="521:19">-&gt;</operator><name pos:start="521:20" pos:end="521:29">nb_streams</name></name> <operator pos:start="521:31" pos:end="521:31">&gt;</operator> <literal type="number" pos:start="521:33" pos:end="521:33">0</literal></expr>)</condition> <block pos:start="521:36" pos:end="543:13">{<block_content pos:start="523:17" pos:end="541:64">

                <expr_stmt pos:start="523:17" pos:end="523:68"><expr pos:start="523:17" pos:end="523:67"><name pos:start="523:17" pos:end="523:23">rtsp_st</name> <operator pos:start="523:25" pos:end="523:25">=</operator> <name pos:start="523:27" pos:end="523:67"><name pos:start="523:27" pos:end="523:28">rt</name><operator pos:start="523:29" pos:end="523:30">-&gt;</operator><name pos:start="523:31" pos:end="523:42">rtsp_streams</name><index pos:start="523:43" pos:end="523:67">[<expr pos:start="523:44" pos:end="523:66"><name pos:start="523:44" pos:end="523:62"><name pos:start="523:44" pos:end="523:45">rt</name><operator pos:start="523:46" pos:end="523:47">-&gt;</operator><name pos:start="523:48" pos:end="523:62">nb_rtsp_streams</name></name> <operator pos:start="523:64" pos:end="523:64">-</operator> <literal type="number" pos:start="523:66" pos:end="523:66">1</literal></expr>]</index></name></expr>;</expr_stmt>



                <if_stmt pos:start="527:17" pos:end="529:74"><if pos:start="527:17" pos:end="529:74">if <condition pos:start="527:20" pos:end="527:56">(<expr pos:start="527:21" pos:end="527:55"><name pos:start="527:21" pos:end="527:35"><name pos:start="527:21" pos:end="527:22">rt</name><operator pos:start="527:23" pos:end="527:24">-&gt;</operator><name pos:start="527:25" pos:end="527:35">server_type</name></name> <operator pos:start="527:37" pos:end="527:38">==</operator> <name pos:start="527:40" pos:end="527:55">RTSP_SERVER_REAL</name></expr>)</condition><block type="pseudo" pos:start="529:21" pos:end="529:74"><block_content pos:start="529:21" pos:end="529:74">

                    <expr_stmt pos:start="529:21" pos:end="529:74"><expr pos:start="529:21" pos:end="529:73"><call pos:start="529:21" pos:end="529:73"><name pos:start="529:21" pos:end="529:44">ff_real_parse_sdp_a_line</name><argument_list pos:start="529:45" pos:end="529:73">(<argument pos:start="529:46" pos:end="529:46"><expr pos:start="529:46" pos:end="529:46"><name pos:start="529:46" pos:end="529:46">s</name></expr></argument>, <argument pos:start="529:49" pos:end="529:69"><expr pos:start="529:49" pos:end="529:69"><name pos:start="529:49" pos:end="529:69"><name pos:start="529:49" pos:end="529:55">rtsp_st</name><operator pos:start="529:56" pos:end="529:57">-&gt;</operator><name pos:start="529:58" pos:end="529:69">stream_index</name></name></expr></argument>, <argument pos:start="529:72" pos:end="529:72"><expr pos:start="529:72" pos:end="529:72"><name pos:start="529:72" pos:end="529:72">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <if_stmt pos:start="533:17" pos:end="541:64"><if pos:start="533:17" pos:end="541:64">if <condition pos:start="533:20" pos:end="535:63">(<expr pos:start="533:21" pos:end="535:62"><name pos:start="533:21" pos:end="533:44"><name pos:start="533:21" pos:end="533:27">rtsp_st</name><operator pos:start="533:28" pos:end="533:29">-&gt;</operator><name pos:start="533:30" pos:end="533:44">dynamic_handler</name></name> <operator pos:start="533:46" pos:end="533:47">&amp;&amp;</operator>

                    <name pos:start="535:21" pos:end="535:62"><name pos:start="535:21" pos:end="535:27">rtsp_st</name><operator pos:start="535:28" pos:end="535:29">-&gt;</operator><name pos:start="535:30" pos:end="535:44">dynamic_handler</name><operator pos:start="535:45" pos:end="535:46">-&gt;</operator><name pos:start="535:47" pos:end="535:62">parse_sdp_a_line</name></name></expr>)</condition><block type="pseudo" pos:start="537:21" pos:end="541:64"><block_content pos:start="537:21" pos:end="541:64">

                    <expr_stmt pos:start="537:21" pos:end="541:64"><expr pos:start="537:21" pos:end="541:63"><call pos:start="537:21" pos:end="541:63"><name pos:start="537:21" pos:end="537:62"><name pos:start="537:21" pos:end="537:27">rtsp_st</name><operator pos:start="537:28" pos:end="537:29">-&gt;</operator><name pos:start="537:30" pos:end="537:44">dynamic_handler</name><operator pos:start="537:45" pos:end="537:46">-&gt;</operator><name pos:start="537:47" pos:end="537:62">parse_sdp_a_line</name></name><argument_list pos:start="537:63" pos:end="541:63">(<argument pos:start="537:64" pos:end="537:64"><expr pos:start="537:64" pos:end="537:64"><name pos:start="537:64" pos:end="537:64">s</name></expr></argument>,

                        <argument pos:start="539:25" pos:end="539:45"><expr pos:start="539:25" pos:end="539:45"><name pos:start="539:25" pos:end="539:45"><name pos:start="539:25" pos:end="539:31">rtsp_st</name><operator pos:start="539:32" pos:end="539:33">-&gt;</operator><name pos:start="539:34" pos:end="539:45">stream_index</name></name></expr></argument>,

                        <argument pos:start="541:25" pos:end="541:57"><expr pos:start="541:25" pos:end="541:57"><name pos:start="541:25" pos:end="541:57"><name pos:start="541:25" pos:end="541:31">rtsp_st</name><operator pos:start="541:32" pos:end="541:33">-&gt;</operator><name pos:start="541:34" pos:end="541:57">dynamic_protocol_context</name></name></expr></argument>, <argument pos:start="541:60" pos:end="541:62"><expr pos:start="541:60" pos:end="541:62"><name pos:start="541:60" pos:end="541:62">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="547:9" pos:end="547:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
