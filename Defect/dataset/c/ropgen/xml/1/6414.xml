<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6414.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:22"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:12">const</specifier> <name pos:start="1:14" pos:end="1:20">uint8_t</name> <modifier pos:start="1:22" pos:end="1:22">*</modifier></type><name pos:start="1:23" pos:end="1:42">parse_opus_ts_header</name><parameter_list pos:start="1:43" pos:end="1:95">(<parameter pos:start="1:44" pos:end="1:63"><decl pos:start="1:44" pos:end="1:63"><type pos:start="1:44" pos:end="1:63"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:56">uint8_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">start</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:81"><decl pos:start="1:66" pos:end="1:81"><type pos:start="1:66" pos:end="1:81"><name pos:start="1:66" pos:end="1:68">int</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:81">payload_len</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:94"><decl pos:start="1:84" pos:end="1:94"><type pos:start="1:84" pos:end="1:94"><name pos:start="1:84" pos:end="1:86">int</name></type> <name pos:start="1:88" pos:end="1:94">buf_len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:39">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">buf</name> <init pos:start="5:24" pos:end="5:34">= <expr pos:start="5:26" pos:end="5:34"><name pos:start="5:26" pos:end="5:30">start</name> <operator pos:start="5:32" pos:end="5:32">+</operator> <literal type="number" pos:start="5:34" pos:end="5:34">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:89"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:23">start_trim_flag</name></decl>, <decl pos:start="7:26" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:26" pos:end="7:38">end_trim_flag</name></decl>, <decl pos:start="7:41" pos:end="7:62"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:41" pos:end="7:62">control_extension_flag</name></decl>, <decl pos:start="7:65" pos:end="7:88"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:65" pos:end="7:88">control_extension_length</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:17">flags</name></decl>;</decl_stmt>



    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:18">GetByteContext</name></type> <name pos:start="13:20" pos:end="13:21">gb</name></decl>;</decl_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:40"><expr pos:start="15:5" pos:end="15:39"><call pos:start="15:5" pos:end="15:39"><name pos:start="15:5" pos:end="15:20">bytestream2_init</name><argument_list pos:start="15:21" pos:end="15:39">(<argument pos:start="15:22" pos:end="15:24"><expr pos:start="15:22" pos:end="15:24"><operator pos:start="15:22" pos:end="15:22">&amp;</operator><name pos:start="15:23" pos:end="15:24">gb</name></expr></argument>, <argument pos:start="15:27" pos:end="15:29"><expr pos:start="15:27" pos:end="15:29"><name pos:start="15:27" pos:end="15:29">buf</name></expr></argument>, <argument pos:start="15:32" pos:end="15:38"><expr pos:start="15:32" pos:end="15:38"><name pos:start="15:32" pos:end="15:38">buf_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:9">flags</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:37"><name pos:start="19:13" pos:end="19:32">bytestream2_get_byte</name><argument_list pos:start="19:33" pos:end="19:37">(<argument pos:start="19:34" pos:end="19:36"><expr pos:start="19:34" pos:end="19:36"><operator pos:start="19:34" pos:end="19:34">&amp;</operator><name pos:start="19:35" pos:end="19:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:46"><expr pos:start="21:5" pos:end="21:45"><name pos:start="21:5" pos:end="21:19">start_trim_flag</name>        <operator pos:start="21:28" pos:end="21:28">=</operator> <operator pos:start="21:30" pos:end="21:30">(</operator><name pos:start="21:31" pos:end="21:35">flags</name> <operator pos:start="21:37" pos:end="21:38">&gt;&gt;</operator> <literal type="number" pos:start="21:40" pos:end="21:40">4</literal><operator pos:start="21:41" pos:end="21:41">)</operator> <operator pos:start="21:43" pos:end="21:43">&amp;</operator> <literal type="number" pos:start="21:45" pos:end="21:45">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:46"><expr pos:start="23:5" pos:end="23:45"><name pos:start="23:5" pos:end="23:17">end_trim_flag</name>          <operator pos:start="23:28" pos:end="23:28">=</operator> <operator pos:start="23:30" pos:end="23:30">(</operator><name pos:start="23:31" pos:end="23:35">flags</name> <operator pos:start="23:37" pos:end="23:38">&gt;&gt;</operator> <literal type="number" pos:start="23:40" pos:end="23:40">3</literal><operator pos:start="23:41" pos:end="23:41">)</operator> <operator pos:start="23:43" pos:end="23:43">&amp;</operator> <literal type="number" pos:start="23:45" pos:end="23:45">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:46"><expr pos:start="25:5" pos:end="25:45"><name pos:start="25:5" pos:end="25:26">control_extension_flag</name> <operator pos:start="25:28" pos:end="25:28">=</operator> <operator pos:start="25:30" pos:end="25:30">(</operator><name pos:start="25:31" pos:end="25:35">flags</name> <operator pos:start="25:37" pos:end="25:38">&gt;&gt;</operator> <literal type="number" pos:start="25:40" pos:end="25:40">2</literal><operator pos:start="25:41" pos:end="25:41">)</operator> <operator pos:start="25:43" pos:end="25:43">&amp;</operator> <literal type="number" pos:start="25:45" pos:end="25:45">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:21"><expr pos:start="29:5" pos:end="29:20"><operator pos:start="29:5" pos:end="29:5">*</operator><name pos:start="29:6" pos:end="29:16">payload_len</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>;</expr_stmt>

    <while pos:start="31:5" pos:end="33:50">while <condition pos:start="31:11" pos:end="31:46">(<expr pos:start="31:12" pos:end="31:45"><call pos:start="31:12" pos:end="31:37"><name pos:start="31:12" pos:end="31:32">bytestream2_peek_byte</name><argument_list pos:start="31:33" pos:end="31:37">(<argument pos:start="31:34" pos:end="31:36"><expr pos:start="31:34" pos:end="31:36"><operator pos:start="31:34" pos:end="31:34">&amp;</operator><name pos:start="31:35" pos:end="31:36">gb</name></expr></argument>)</argument_list></call> <operator pos:start="31:39" pos:end="31:40">==</operator> <literal type="number" pos:start="31:42" pos:end="31:45">0xff</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:50"><block_content pos:start="33:9" pos:end="33:50">

        <expr_stmt pos:start="33:9" pos:end="33:50"><expr pos:start="33:9" pos:end="33:49"><operator pos:start="33:9" pos:end="33:9">*</operator><name pos:start="33:10" pos:end="33:20">payload_len</name> <operator pos:start="33:22" pos:end="33:23">+=</operator> <call pos:start="33:25" pos:end="33:49"><name pos:start="33:25" pos:end="33:44">bytestream2_get_byte</name><argument_list pos:start="33:45" pos:end="33:49">(<argument pos:start="33:46" pos:end="33:48"><expr pos:start="33:46" pos:end="33:48"><operator pos:start="33:46" pos:end="33:46">&amp;</operator><name pos:start="33:47" pos:end="33:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



    <expr_stmt pos:start="37:5" pos:end="37:46"><expr pos:start="37:5" pos:end="37:45"><operator pos:start="37:5" pos:end="37:5">*</operator><name pos:start="37:6" pos:end="37:16">payload_len</name> <operator pos:start="37:18" pos:end="37:19">+=</operator> <call pos:start="37:21" pos:end="37:45"><name pos:start="37:21" pos:end="37:40">bytestream2_get_byte</name><argument_list pos:start="37:41" pos:end="37:45">(<argument pos:start="37:42" pos:end="37:44"><expr pos:start="37:42" pos:end="37:44"><operator pos:start="37:42" pos:end="37:42">&amp;</operator><name pos:start="37:43" pos:end="37:44">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="43:33"><if pos:start="41:5" pos:end="43:33">if <condition pos:start="41:8" pos:end="41:24">(<expr pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:23">start_trim_flag</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:33"><block_content pos:start="43:9" pos:end="43:33">

        <expr_stmt pos:start="43:9" pos:end="43:33"><expr pos:start="43:9" pos:end="43:32"><call pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:24">bytestream2_skip</name><argument_list pos:start="43:25" pos:end="43:32">(<argument pos:start="43:26" pos:end="43:28"><expr pos:start="43:26" pos:end="43:28"><operator pos:start="43:26" pos:end="43:26">&amp;</operator><name pos:start="43:27" pos:end="43:28">gb</name></expr></argument>, <argument pos:start="43:31" pos:end="43:31"><expr pos:start="43:31" pos:end="43:31"><literal type="number" pos:start="43:31" pos:end="43:31">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="47:33"><if pos:start="45:5" pos:end="47:33">if <condition pos:start="45:8" pos:end="45:22">(<expr pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:21">end_trim_flag</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:33"><block_content pos:start="47:9" pos:end="47:33">

        <expr_stmt pos:start="47:9" pos:end="47:33"><expr pos:start="47:9" pos:end="47:32"><call pos:start="47:9" pos:end="47:32"><name pos:start="47:9" pos:end="47:24">bytestream2_skip</name><argument_list pos:start="47:25" pos:end="47:32">(<argument pos:start="47:26" pos:end="47:28"><expr pos:start="47:26" pos:end="47:28"><operator pos:start="47:26" pos:end="47:26">&amp;</operator><name pos:start="47:27" pos:end="47:28">gb</name></expr></argument>, <argument pos:start="47:31" pos:end="47:31"><expr pos:start="47:31" pos:end="47:31"><literal type="number" pos:start="47:31" pos:end="47:31">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:31">(<expr pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:30">control_extension_flag</name></expr>)</condition> <block pos:start="49:33" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:56">

        <expr_stmt pos:start="51:9" pos:end="51:61"><expr pos:start="51:9" pos:end="51:60"><name pos:start="51:9" pos:end="51:32">control_extension_length</name> <operator pos:start="51:34" pos:end="51:34">=</operator> <call pos:start="51:36" pos:end="51:60"><name pos:start="51:36" pos:end="51:55">bytestream2_get_byte</name><argument_list pos:start="51:56" pos:end="51:60">(<argument pos:start="51:57" pos:end="51:59"><expr pos:start="51:57" pos:end="51:59"><operator pos:start="51:57" pos:end="51:57">&amp;</operator><name pos:start="51:58" pos:end="51:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:56"><expr pos:start="53:9" pos:end="53:55"><call pos:start="53:9" pos:end="53:55"><name pos:start="53:9" pos:end="53:24">bytestream2_skip</name><argument_list pos:start="53:25" pos:end="53:55">(<argument pos:start="53:26" pos:end="53:28"><expr pos:start="53:26" pos:end="53:28"><operator pos:start="53:26" pos:end="53:26">&amp;</operator><name pos:start="53:27" pos:end="53:28">gb</name></expr></argument>, <argument pos:start="53:31" pos:end="53:54"><expr pos:start="53:31" pos:end="53:54"><name pos:start="53:31" pos:end="53:54">control_extension_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="59:5" pos:end="59:39">return <expr pos:start="59:12" pos:end="59:38"><name pos:start="59:12" pos:end="59:14">buf</name> <operator pos:start="59:16" pos:end="59:16">+</operator> <call pos:start="59:18" pos:end="59:38"><name pos:start="59:18" pos:end="59:33">bytestream2_tell</name><argument_list pos:start="59:34" pos:end="59:38">(<argument pos:start="59:35" pos:end="59:37"><expr pos:start="59:35" pos:end="59:37"><operator pos:start="59:35" pos:end="59:35">&amp;</operator><name pos:start="59:36" pos:end="59:37">gb</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
