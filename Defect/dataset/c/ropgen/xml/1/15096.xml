<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15096.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">get_cod</name><parameter_list pos:start="1:19" pos:end="2:39">(<parameter pos:start="1:20" pos:end="1:44"><decl pos:start="1:20" pos:end="1:44"><type pos:start="1:20" pos:end="1:44"><name pos:start="1:20" pos:end="1:41">Jpeg2000DecoderContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:68"><decl pos:start="1:47" pos:end="1:68"><type pos:start="1:47" pos:end="1:68"><name pos:start="1:47" pos:end="1:65">Jpeg2000CodingStyle</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:68">c</name></decl></parameter>,
                   <parameter pos:start="2:20" pos:end="2:38"><decl pos:start="2:20" pos:end="2:38"><type pos:start="2:20" pos:end="2:38"><name pos:start="2:20" pos:end="2:26">uint8_t</name> <modifier pos:start="2:28" pos:end="2:28">*</modifier></type><name pos:start="2:29" pos:end="2:38">properties</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="17:13">{<block_content pos:start="4:5" pos:end="17:13">
    <decl_stmt pos:start="4:5" pos:end="4:28"><decl pos:start="4:5" pos:end="4:27"><type pos:start="4:5" pos:end="4:23"><name pos:start="4:5" pos:end="4:23">Jpeg2000CodingStyle</name></type> <name pos:start="4:25" pos:end="4:27">tmp</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">compno</name></decl>, <decl pos:start="5:17" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:19">ret</name></decl>;</decl_stmt>
    <if_stmt pos:start="6:5" pos:end="7:44"><if pos:start="6:5" pos:end="7:44">if <condition pos:start="6:8" pos:end="6:46">(<expr pos:start="6:9" pos:end="6:45"><call pos:start="6:9" pos:end="6:41"><name pos:start="6:9" pos:end="6:34">bytestream2_get_bytes_left</name><argument_list pos:start="6:35" pos:end="6:41">(<argument pos:start="6:36" pos:end="6:40"><expr pos:start="6:36" pos:end="6:40"><operator pos:start="6:36" pos:end="6:36">&amp;</operator><name pos:start="6:37" pos:end="6:40"><name pos:start="6:37" pos:end="6:37">s</name><operator pos:start="6:38" pos:end="6:39">-&gt;</operator><name pos:start="6:40" pos:end="6:40">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="6:43" pos:end="6:43">&lt;</operator> <literal type="number" pos:start="6:45" pos:end="6:45">5</literal></expr>)</condition><block type="pseudo" pos:start="7:5" pos:end="7:44"><block_content pos:start="7:5" pos:end="7:44">
    <expr_stmt pos:start="7:5" pos:end="7:44"><expr pos:start="7:5" pos:end="7:43"><name pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:7">tmp</name><operator pos:start="7:8" pos:end="7:8">.</operator><name pos:start="7:9" pos:end="7:12">csty</name></name> <operator pos:start="7:14" pos:end="7:14">=</operator> <call pos:start="7:16" pos:end="7:43"><name pos:start="7:16" pos:end="7:36">bytestream2_get_byteu</name><argument_list pos:start="7:37" pos:end="7:43">(<argument pos:start="7:38" pos:end="7:42"><expr pos:start="7:38" pos:end="7:42"><operator pos:start="7:38" pos:end="7:38">&amp;</operator><name pos:start="7:39" pos:end="7:42"><name pos:start="7:39" pos:end="7:39">s</name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:42">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <comment type="line" pos:start="8:5" pos:end="8:28">// get progression order</comment>
    <expr_stmt pos:start="9:5" pos:end="9:50"><expr pos:start="9:5" pos:end="9:49"><name pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:7">tmp</name><operator pos:start="9:8" pos:end="9:8">.</operator><name pos:start="9:9" pos:end="9:18">prog_order</name></name> <operator pos:start="9:20" pos:end="9:20">=</operator> <call pos:start="9:22" pos:end="9:49"><name pos:start="9:22" pos:end="9:42">bytestream2_get_byteu</name><argument_list pos:start="9:43" pos:end="9:49">(<argument pos:start="9:44" pos:end="9:48"><expr pos:start="9:44" pos:end="9:48"><operator pos:start="9:44" pos:end="9:44">&amp;</operator><name pos:start="9:45" pos:end="9:48"><name pos:start="9:45" pos:end="9:45">s</name><operator pos:start="9:46" pos:end="9:47">-&gt;</operator><name pos:start="9:48" pos:end="9:48">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:50"><expr pos:start="10:5" pos:end="10:49"><name pos:start="10:5" pos:end="10:15"><name pos:start="10:5" pos:end="10:7">tmp</name><operator pos:start="10:8" pos:end="10:8">.</operator><name pos:start="10:9" pos:end="10:15">nlayers</name></name>    <operator pos:start="10:20" pos:end="10:20">=</operator> <call pos:start="10:22" pos:end="10:49"><name pos:start="10:22" pos:end="10:42">bytestream2_get_be16u</name><argument_list pos:start="10:43" pos:end="10:49">(<argument pos:start="10:44" pos:end="10:48"><expr pos:start="10:44" pos:end="10:48"><operator pos:start="10:44" pos:end="10:44">&amp;</operator><name pos:start="10:45" pos:end="10:48"><name pos:start="10:45" pos:end="10:45">s</name><operator pos:start="10:46" pos:end="10:47">-&gt;</operator><name pos:start="10:48" pos:end="10:48">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:50"><expr pos:start="11:5" pos:end="11:49"><name pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:7">tmp</name><operator pos:start="11:8" pos:end="11:8">.</operator><name pos:start="11:9" pos:end="11:11">mct</name></name>        <operator pos:start="11:20" pos:end="11:20">=</operator> <call pos:start="11:22" pos:end="11:49"><name pos:start="11:22" pos:end="11:42">bytestream2_get_byteu</name><argument_list pos:start="11:43" pos:end="11:49">(<argument pos:start="11:44" pos:end="11:48"><expr pos:start="11:44" pos:end="11:48"><operator pos:start="11:44" pos:end="11:44">&amp;</operator><name pos:start="11:45" pos:end="11:48"><name pos:start="11:45" pos:end="11:45">s</name><operator pos:start="11:46" pos:end="11:47">-&gt;</operator><name pos:start="11:48" pos:end="11:48">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="11:52" pos:end="11:87">// multiple component transformation</comment>
    <if_stmt pos:start="12:5" pos:end="13:19"><if pos:start="12:5" pos:end="13:19">if <condition pos:start="12:8" pos:end="12:37">(<expr pos:start="12:9" pos:end="12:36"><operator pos:start="12:9" pos:end="12:9">(</operator><name pos:start="12:10" pos:end="12:12">ret</name> <operator pos:start="12:14" pos:end="12:14">=</operator> <call pos:start="12:16" pos:end="12:31"><name pos:start="12:16" pos:end="12:22">get_cox</name><argument_list pos:start="12:23" pos:end="12:31">(<argument pos:start="12:24" pos:end="12:24"><expr pos:start="12:24" pos:end="12:24"><name pos:start="12:24" pos:end="12:24">s</name></expr></argument>, <argument pos:start="12:27" pos:end="12:30"><expr pos:start="12:27" pos:end="12:30"><operator pos:start="12:27" pos:end="12:27">&amp;</operator><name pos:start="12:28" pos:end="12:30">tmp</name></expr></argument>)</argument_list></call><operator pos:start="12:32" pos:end="12:32">)</operator> <operator pos:start="12:34" pos:end="12:34">&lt;</operator> <literal type="number" pos:start="12:36" pos:end="12:36">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:19"><block_content pos:start="13:9" pos:end="13:19">
        <return pos:start="13:9" pos:end="13:19">return <expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <for pos:start="14:5" pos:end="16:50">for <control pos:start="14:9" pos:end="14:55">(<init pos:start="14:10" pos:end="14:20"><expr pos:start="14:10" pos:end="14:19"><name pos:start="14:10" pos:end="14:15">compno</name> <operator pos:start="14:17" pos:end="14:17">=</operator> <literal type="number" pos:start="14:19" pos:end="14:19">0</literal></expr>;</init> <condition pos:start="14:22" pos:end="14:45"><expr pos:start="14:22" pos:end="14:44"><name pos:start="14:22" pos:end="14:27">compno</name> <operator pos:start="14:29" pos:end="14:29">&lt;</operator> <name pos:start="14:31" pos:end="14:44"><name pos:start="14:31" pos:end="14:31">s</name><operator pos:start="14:32" pos:end="14:33">-&gt;</operator><name pos:start="14:34" pos:end="14:44">ncomponents</name></name></expr>;</condition> <incr pos:start="14:47" pos:end="14:54"><expr pos:start="14:47" pos:end="14:54"><name pos:start="14:47" pos:end="14:52">compno</name><operator pos:start="14:53" pos:end="14:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="15:9" pos:end="16:50"><block_content pos:start="15:9" pos:end="16:50">
        <if_stmt pos:start="15:9" pos:end="16:50"><if pos:start="15:9" pos:end="16:50">if <condition pos:start="15:12" pos:end="15:44">(<expr pos:start="15:13" pos:end="15:43"><operator pos:start="15:13" pos:end="15:13">!</operator><operator pos:start="15:14" pos:end="15:14">(</operator><name pos:start="15:15" pos:end="15:32"><name pos:start="15:15" pos:end="15:24">properties</name><index pos:start="15:25" pos:end="15:32">[<expr pos:start="15:26" pos:end="15:31"><name pos:start="15:26" pos:end="15:31">compno</name></expr>]</index></name> <operator pos:start="15:34" pos:end="15:34">&amp;</operator> <name pos:start="15:36" pos:end="15:42">HAD_COC</name><operator pos:start="15:43" pos:end="15:43">)</operator></expr>)</condition><block type="pseudo" pos:start="16:13" pos:end="16:50"><block_content pos:start="16:13" pos:end="16:50">
            <expr_stmt pos:start="16:13" pos:end="16:50"><expr pos:start="16:13" pos:end="16:49"><call pos:start="16:13" pos:end="16:49"><name pos:start="16:13" pos:end="16:18">memcpy</name><argument_list pos:start="16:19" pos:end="16:49">(<argument pos:start="16:20" pos:end="16:29"><expr pos:start="16:20" pos:end="16:29"><name pos:start="16:20" pos:end="16:20">c</name> <operator pos:start="16:22" pos:end="16:22">+</operator> <name pos:start="16:24" pos:end="16:29">compno</name></expr></argument>, <argument pos:start="16:32" pos:end="16:35"><expr pos:start="16:32" pos:end="16:35"><operator pos:start="16:32" pos:end="16:32">&amp;</operator><name pos:start="16:33" pos:end="16:35">tmp</name></expr></argument>, <argument pos:start="16:38" pos:end="16:48"><expr pos:start="16:38" pos:end="16:48"><sizeof pos:start="16:38" pos:end="16:48">sizeof<argument_list pos:start="16:44" pos:end="16:48">(<argument pos:start="16:45" pos:end="16:47"><expr pos:start="16:45" pos:end="16:47"><name pos:start="16:45" pos:end="16:47">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>
    <return pos:start="17:5" pos:end="17:13">return <expr pos:start="17:12" pos:end="17:12"><literal type="number" pos:start="17:12" pos:end="17:12">0</literal></expr>;</return></block_content></block></function></unit>
