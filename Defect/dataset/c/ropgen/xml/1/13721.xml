<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13721.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">spapr_drc_reset</name><parameter_list pos:start="1:21" pos:end="1:43">(<parameter pos:start="1:22" pos:end="1:42"><decl pos:start="1:22" pos:end="1:42"><type pos:start="1:22" pos:end="1:39"><name pos:start="1:22" pos:end="1:37">sPAPRDRConnector</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">drc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:5">

    <expr_stmt pos:start="5:5" pos:end="5:48"><expr pos:start="5:5" pos:end="5:47"><call pos:start="5:5" pos:end="5:47"><name pos:start="5:5" pos:end="5:25">trace_spapr_drc_reset</name><argument_list pos:start="5:26" pos:end="5:47">(<argument pos:start="5:27" pos:end="5:46"><expr pos:start="5:27" pos:end="5:46"><call pos:start="5:27" pos:end="5:46"><name pos:start="5:27" pos:end="5:41">spapr_drc_index</name><argument_list pos:start="5:42" pos:end="5:46">(<argument pos:start="5:43" pos:end="5:45"><expr pos:start="5:43" pos:end="5:45"><name pos:start="5:43" pos:end="5:45">drc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:21"><expr pos:start="9:5" pos:end="9:20"><call pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:10">g_free</name><argument_list pos:start="9:11" pos:end="9:20">(<argument pos:start="9:12" pos:end="9:19"><expr pos:start="9:12" pos:end="9:19"><name pos:start="9:12" pos:end="9:19"><name pos:start="9:12" pos:end="9:14">drc</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:19">ccs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:20"><expr pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:7">drc</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:12">ccs</name></name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:19">NULL</name></expr>;</expr_stmt>



    <comment type="block" pos:start="15:5" pos:end="19:7">/* immediately upon reset we can safely assume DRCs whose devices

     * are pending removal can be safely removed.

     */</comment>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:30">(<expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:11">drc</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:29">awaiting_release</name></name></expr>)</condition> <block pos:start="21:32" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:31">

        <expr_stmt pos:start="23:9" pos:end="23:31"><expr pos:start="23:9" pos:end="23:30"><call pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:25">spapr_drc_release</name><argument_list pos:start="23:26" pos:end="23:30">(<argument pos:start="23:27" pos:end="23:29"><expr pos:start="23:27" pos:end="23:29"><name pos:start="23:27" pos:end="23:29">drc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:37"><expr pos:start="29:5" pos:end="29:36"><name pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:7">drc</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:28">awaiting_allocation</name></name> <operator pos:start="29:30" pos:end="29:30">=</operator> <name pos:start="29:32" pos:end="29:36">false</name></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="61:5"><if pos:start="33:5" pos:end="47:5">if <condition pos:start="33:8" pos:end="33:17">(<expr pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:11">drc</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:16">dev</name></name></expr>)</condition> <block pos:start="33:19" pos:end="47:5">{<block_content pos:start="37:9" pos:end="45:54">

        <comment type="block" pos:start="35:9" pos:end="35:54">/* A device present at reset is coldplugged */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:67"><expr pos:start="37:9" pos:end="37:66"><name pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:11">drc</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:28">isolation_state</name></name> <operator pos:start="37:30" pos:end="37:30">=</operator> <name pos:start="37:32" pos:end="37:66">SPAPR_DR_ISOLATION_STATE_UNISOLATED</name></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:63">(<expr pos:start="39:13" pos:end="39:62"><call pos:start="39:13" pos:end="39:31"><name pos:start="39:13" pos:end="39:26">spapr_drc_type</name><argument_list pos:start="39:27" pos:end="39:31">(<argument pos:start="39:28" pos:end="39:30"><expr pos:start="39:28" pos:end="39:30"><name pos:start="39:28" pos:end="39:30">drc</name></expr></argument>)</argument_list></call> <operator pos:start="39:33" pos:end="39:34">!=</operator> <name pos:start="39:36" pos:end="39:62">SPAPR_DR_CONNECTOR_TYPE_PCI</name></expr>)</condition> <block pos:start="39:65" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:69">

            <expr_stmt pos:start="41:13" pos:end="41:69"><expr pos:start="41:13" pos:end="41:68"><name pos:start="41:13" pos:end="41:33"><name pos:start="41:13" pos:end="41:15">drc</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:33">allocation_state</name></name> <operator pos:start="41:35" pos:end="41:35">=</operator> <name pos:start="41:37" pos:end="41:68">SPAPR_DR_ALLOCATION_STATE_USABLE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:54"><expr pos:start="45:9" pos:end="45:53"><name pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:11">drc</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:25">dr_indicator</name></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:53">SPAPR_DR_INDICATOR_ACTIVE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="61:5">else <block pos:start="47:12" pos:end="61:5">{<block_content pos:start="51:9" pos:end="59:56">

        <comment type="block" pos:start="49:9" pos:end="49:65">/* Otherwise device is absent, but might be hotplugged */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:65"><expr pos:start="51:9" pos:end="51:64"><name pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:11">drc</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:28">isolation_state</name></name> <operator pos:start="51:30" pos:end="51:30">=</operator> <name pos:start="51:32" pos:end="51:64">SPAPR_DR_ISOLATION_STATE_ISOLATED</name></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:63">(<expr pos:start="53:13" pos:end="53:62"><call pos:start="53:13" pos:end="53:31"><name pos:start="53:13" pos:end="53:26">spapr_drc_type</name><argument_list pos:start="53:27" pos:end="53:31">(<argument pos:start="53:28" pos:end="53:30"><expr pos:start="53:28" pos:end="53:30"><name pos:start="53:28" pos:end="53:30">drc</name></expr></argument>)</argument_list></call> <operator pos:start="53:33" pos:end="53:34">!=</operator> <name pos:start="53:36" pos:end="53:62">SPAPR_DR_CONNECTOR_TYPE_PCI</name></expr>)</condition> <block pos:start="53:65" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:71">

            <expr_stmt pos:start="55:13" pos:end="55:71"><expr pos:start="55:13" pos:end="55:70"><name pos:start="55:13" pos:end="55:33"><name pos:start="55:13" pos:end="55:15">drc</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:33">allocation_state</name></name> <operator pos:start="55:35" pos:end="55:35">=</operator> <name pos:start="55:37" pos:end="55:70">SPAPR_DR_ALLOCATION_STATE_UNUSABLE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:56"><expr pos:start="59:9" pos:end="59:55"><name pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:11">drc</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:25">dr_indicator</name></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <name pos:start="59:29" pos:end="59:55">SPAPR_DR_INDICATOR_INACTIVE</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
