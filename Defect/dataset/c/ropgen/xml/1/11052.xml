<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11052.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:32">horizX1Filter</name><parameter_list pos:start="1:33" pos:end="1:66">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:40">uint8_t</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">src</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:57">stride</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:65"><decl pos:start="1:60" pos:end="1:65"><type pos:start="1:60" pos:end="1:65"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:65">QP</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="105:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:21"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <name pos:start="7:12" pos:end="7:19">uint64_t</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">lut</name><init pos:start="7:25" pos:end="7:30">= <expr pos:start="7:27" pos:end="7:30"><name pos:start="7:27" pos:end="7:30">NULL</name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="65:5"><if pos:start="9:5" pos:end="65:5">if<condition pos:start="9:7" pos:end="9:17">(<expr pos:start="9:8" pos:end="9:16"><name pos:start="9:8" pos:end="9:10">lut</name><operator pos:start="9:11" pos:end="9:12">==</operator><name pos:start="9:13" pos:end="9:16">NULL</name></expr>)</condition>

    <block pos:start="11:5" pos:end="65:5">{<block_content pos:start="13:9" pos:end="63:9">

        <decl_stmt pos:start="13:9" pos:end="13:14"><decl pos:start="13:9" pos:end="13:13"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:31"><expr pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:11">lut</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:30"><name pos:start="15:15" pos:end="15:23">av_malloc</name><argument_list pos:start="15:24" pos:end="15:30">(<argument pos:start="15:25" pos:end="15:29"><expr pos:start="15:25" pos:end="15:29"><literal type="number" pos:start="15:25" pos:end="15:27">256</literal><operator pos:start="15:28" pos:end="15:28">*</operator><literal type="number" pos:start="15:29" pos:end="15:29">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="17:9" pos:end="63:9">for<control pos:start="17:12" pos:end="17:28">(<init pos:start="17:13" pos:end="17:16"><expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:13">i</name><operator pos:start="17:14" pos:end="17:14">=</operator><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>;</init> <condition pos:start="17:18" pos:end="17:23"><expr pos:start="17:18" pos:end="17:22"><name pos:start="17:18" pos:end="17:18">i</name><operator pos:start="17:19" pos:end="17:19">&lt;</operator><literal type="number" pos:start="17:20" pos:end="17:22">256</literal></expr>;</condition> <incr pos:start="17:25" pos:end="17:27"><expr pos:start="17:25" pos:end="17:27"><name pos:start="17:25" pos:end="17:25">i</name><operator pos:start="17:26" pos:end="17:27">++</operator></expr></incr>)</control>

        <block pos:start="19:9" pos:end="63:9">{<block_content pos:start="21:13" pos:end="59:57">

            <decl_stmt pos:start="21:13" pos:end="21:45"><decl pos:start="21:13" pos:end="21:44"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:17">v</name><init pos:start="21:18" pos:end="21:44">= <expr pos:start="21:20" pos:end="21:44"><ternary pos:start="21:20" pos:end="21:44"><condition pos:start="21:20" pos:end="21:28"><expr pos:start="21:20" pos:end="21:26"><name pos:start="21:20" pos:end="21:20">i</name> <operator pos:start="21:22" pos:end="21:22">&lt;</operator> <literal type="number" pos:start="21:24" pos:end="21:26">128</literal></expr> ?</condition><then pos:start="21:30" pos:end="21:32"> <expr pos:start="21:30" pos:end="21:32"><literal type="number" pos:start="21:30" pos:end="21:30">2</literal><operator pos:start="21:31" pos:end="21:31">*</operator><name pos:start="21:32" pos:end="21:32">i</name></expr> </then><else pos:start="21:34" pos:end="21:44">: <expr pos:start="21:36" pos:end="21:44"><literal type="number" pos:start="21:36" pos:end="21:36">2</literal><operator pos:start="21:37" pos:end="21:37">*</operator><operator pos:start="21:38" pos:end="21:38">(</operator><name pos:start="21:39" pos:end="21:39">i</name><operator pos:start="21:40" pos:end="21:40">-</operator><literal type="number" pos:start="21:41" pos:end="21:43">256</literal><operator pos:start="21:44" pos:end="21:44">)</operator></expr></else></ternary></expr></init></decl>;</decl_stmt>

<comment type="block" pos:start="23:1" pos:end="35:2">/*

//Simulate 112242211 9-Tap filter

            uint64_t a= (v/16)  &amp; 0xFF;

            uint64_t b= (v/8)   &amp; 0xFF;

            uint64_t c= (v/4)   &amp; 0xFF;

            uint64_t d= (3*v/8) &amp; 0xFF;

*/</comment>

<comment type="line" pos:start="37:1" pos:end="37:41">//Simulate piecewise linear interpolation</comment>

            <decl_stmt pos:start="39:13" pos:end="39:40"><decl pos:start="39:13" pos:end="39:39"><type pos:start="39:13" pos:end="39:20"><name pos:start="39:13" pos:end="39:20">uint64_t</name></type> <name pos:start="39:22" pos:end="39:22">a</name><init pos:start="39:23" pos:end="39:39">= <expr pos:start="39:25" pos:end="39:39"><operator pos:start="39:25" pos:end="39:25">(</operator><name pos:start="39:26" pos:end="39:26">v</name><operator pos:start="39:27" pos:end="39:27">/</operator><literal type="number" pos:start="39:28" pos:end="39:29">16</literal><operator pos:start="39:30" pos:end="39:30">)</operator>   <operator pos:start="39:34" pos:end="39:34">&amp;</operator> <literal type="number" pos:start="39:36" pos:end="39:39">0xFF</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="41:13" pos:end="41:40"><decl pos:start="41:13" pos:end="41:39"><type pos:start="41:13" pos:end="41:20"><name pos:start="41:13" pos:end="41:20">uint64_t</name></type> <name pos:start="41:22" pos:end="41:22">b</name><init pos:start="41:23" pos:end="41:39">= <expr pos:start="41:25" pos:end="41:39"><operator pos:start="41:25" pos:end="41:25">(</operator><name pos:start="41:26" pos:end="41:26">v</name><operator pos:start="41:27" pos:end="41:27">*</operator><literal type="number" pos:start="41:28" pos:end="41:28">3</literal><operator pos:start="41:29" pos:end="41:29">/</operator><literal type="number" pos:start="41:30" pos:end="41:31">16</literal><operator pos:start="41:32" pos:end="41:32">)</operator> <operator pos:start="41:34" pos:end="41:34">&amp;</operator> <literal type="number" pos:start="41:36" pos:end="41:39">0xFF</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="43:13" pos:end="43:40"><decl pos:start="43:13" pos:end="43:39"><type pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:20">uint64_t</name></type> <name pos:start="43:22" pos:end="43:22">c</name><init pos:start="43:23" pos:end="43:39">= <expr pos:start="43:25" pos:end="43:39"><operator pos:start="43:25" pos:end="43:25">(</operator><name pos:start="43:26" pos:end="43:26">v</name><operator pos:start="43:27" pos:end="43:27">*</operator><literal type="number" pos:start="43:28" pos:end="43:28">5</literal><operator pos:start="43:29" pos:end="43:29">/</operator><literal type="number" pos:start="43:30" pos:end="43:31">16</literal><operator pos:start="43:32" pos:end="43:32">)</operator> <operator pos:start="43:34" pos:end="43:34">&amp;</operator> <literal type="number" pos:start="43:36" pos:end="43:39">0xFF</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="45:13" pos:end="45:40"><decl pos:start="45:13" pos:end="45:39"><type pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:20">uint64_t</name></type> <name pos:start="45:22" pos:end="45:22">d</name><init pos:start="45:23" pos:end="45:39">= <expr pos:start="45:25" pos:end="45:39"><operator pos:start="45:25" pos:end="45:25">(</operator><literal type="number" pos:start="45:26" pos:end="45:26">7</literal><operator pos:start="45:27" pos:end="45:27">*</operator><name pos:start="45:28" pos:end="45:28">v</name><operator pos:start="45:29" pos:end="45:29">/</operator><literal type="number" pos:start="45:30" pos:end="45:31">16</literal><operator pos:start="45:32" pos:end="45:32">)</operator> <operator pos:start="45:34" pos:end="45:34">&amp;</operator> <literal type="number" pos:start="45:36" pos:end="45:39">0xFF</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="47:13" pos:end="47:41"><decl pos:start="47:13" pos:end="47:40"><type pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:20">uint64_t</name></type> <name pos:start="47:22" pos:end="47:22">A</name><init pos:start="47:23" pos:end="47:40">= <expr pos:start="47:25" pos:end="47:40"><operator pos:start="47:25" pos:end="47:25">(</operator><literal type="number" pos:start="47:26" pos:end="47:32">0x100</literal> <operator pos:start="47:32" pos:end="47:32">-</operator> <name pos:start="47:34" pos:end="47:34">a</name><operator pos:start="47:35" pos:end="47:35">)</operator><operator pos:start="47:36" pos:end="47:36">&amp;</operator><literal type="number" pos:start="47:37" pos:end="47:40">0xFF</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="49:13" pos:end="49:41"><decl pos:start="49:13" pos:end="49:40"><type pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:20">uint64_t</name></type> <name pos:start="49:22" pos:end="49:22">B</name><init pos:start="49:23" pos:end="49:40">= <expr pos:start="49:25" pos:end="49:40"><operator pos:start="49:25" pos:end="49:25">(</operator><literal type="number" pos:start="49:26" pos:end="49:32">0x100</literal> <operator pos:start="49:32" pos:end="49:32">-</operator> <name pos:start="49:34" pos:end="49:34">b</name><operator pos:start="49:35" pos:end="49:35">)</operator><operator pos:start="49:36" pos:end="49:36">&amp;</operator><literal type="number" pos:start="49:37" pos:end="49:40">0xFF</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="51:13" pos:end="51:41"><decl pos:start="51:13" pos:end="51:40"><type pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:20">uint64_t</name></type> <name pos:start="51:22" pos:end="51:22">C</name><init pos:start="51:23" pos:end="51:40">= <expr pos:start="51:25" pos:end="51:40"><operator pos:start="51:25" pos:end="51:25">(</operator><literal type="number" pos:start="51:26" pos:end="51:32">0x100</literal> <operator pos:start="51:32" pos:end="51:32">-</operator> <name pos:start="51:34" pos:end="51:34">c</name><operator pos:start="51:35" pos:end="51:35">)</operator><operator pos:start="51:36" pos:end="51:36">&amp;</operator><literal type="number" pos:start="51:37" pos:end="51:40">0xFF</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="53:13" pos:end="53:41"><decl pos:start="53:13" pos:end="53:40"><type pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:20">uint64_t</name></type> <name pos:start="53:22" pos:end="53:22">D</name><init pos:start="53:23" pos:end="53:40">= <expr pos:start="53:25" pos:end="53:40"><operator pos:start="53:25" pos:end="53:25">(</operator><literal type="number" pos:start="53:26" pos:end="53:32">0x100</literal> <operator pos:start="53:32" pos:end="53:32">-</operator> <name pos:start="53:34" pos:end="53:34">c</name><operator pos:start="53:35" pos:end="53:35">)</operator><operator pos:start="53:36" pos:end="53:36">&amp;</operator><literal type="number" pos:start="53:37" pos:end="53:40">0xFF</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="57:13" pos:end="59:57"><expr pos:start="57:13" pos:end="59:56"><name pos:start="57:13" pos:end="57:18"><name pos:start="57:13" pos:end="57:15">lut</name><index pos:start="57:16" pos:end="57:18">[<expr pos:start="57:17" pos:end="57:17"><name pos:start="57:17" pos:end="57:17">i</name></expr>]</index></name>   <operator pos:start="57:22" pos:end="57:22">=</operator> <operator pos:start="57:24" pos:end="57:24">(</operator><name pos:start="57:25" pos:end="57:25">a</name><operator pos:start="57:26" pos:end="57:27">&lt;&lt;</operator><literal type="number" pos:start="57:28" pos:end="57:29">56</literal><operator pos:start="57:30" pos:end="57:30">)</operator> <operator pos:start="57:32" pos:end="57:32">|</operator> <operator pos:start="57:34" pos:end="57:34">(</operator><name pos:start="57:35" pos:end="57:35">b</name><operator pos:start="57:36" pos:end="57:37">&lt;&lt;</operator><literal type="number" pos:start="57:38" pos:end="57:39">48</literal><operator pos:start="57:40" pos:end="57:40">)</operator> <operator pos:start="57:42" pos:end="57:42">|</operator> <operator pos:start="57:44" pos:end="57:44">(</operator><name pos:start="57:45" pos:end="57:45">c</name><operator pos:start="57:46" pos:end="57:47">&lt;&lt;</operator><literal type="number" pos:start="57:48" pos:end="57:49">40</literal><operator pos:start="57:50" pos:end="57:50">)</operator> <operator pos:start="57:52" pos:end="57:52">|</operator> <operator pos:start="57:54" pos:end="57:54">(</operator><name pos:start="57:55" pos:end="57:55">d</name><operator pos:start="57:56" pos:end="57:57">&lt;&lt;</operator><literal type="number" pos:start="57:58" pos:end="57:59">32</literal><operator pos:start="57:60" pos:end="57:60">)</operator> <operator pos:start="57:62" pos:end="57:62">|</operator>

                       <operator pos:start="59:24" pos:end="59:24">(</operator><name pos:start="59:25" pos:end="59:25">D</name><operator pos:start="59:26" pos:end="59:27">&lt;&lt;</operator><literal type="number" pos:start="59:28" pos:end="59:29">24</literal><operator pos:start="59:30" pos:end="59:30">)</operator> <operator pos:start="59:32" pos:end="59:32">|</operator> <operator pos:start="59:34" pos:end="59:34">(</operator><name pos:start="59:35" pos:end="59:35">C</name><operator pos:start="59:36" pos:end="59:37">&lt;&lt;</operator><literal type="number" pos:start="59:38" pos:end="59:39">16</literal><operator pos:start="59:40" pos:end="59:40">)</operator> <operator pos:start="59:42" pos:end="59:42">|</operator> <operator pos:start="59:44" pos:end="59:44">(</operator><name pos:start="59:45" pos:end="59:45">B</name><operator pos:start="59:46" pos:end="59:47">&lt;&lt;</operator><literal type="number" pos:start="59:48" pos:end="59:48">8</literal><operator pos:start="59:49" pos:end="59:49">)</operator>  <operator pos:start="59:52" pos:end="59:52">|</operator> <operator pos:start="59:54" pos:end="59:54">(</operator><name pos:start="59:55" pos:end="59:55">A</name><operator pos:start="59:56" pos:end="59:56">)</operator></expr>;</expr_stmt>

            <comment type="line" pos:start="61:13" pos:end="61:41">//lut[i] = (v&lt;&lt;32) | (v&lt;&lt;24);</comment>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <for pos:start="69:5" pos:end="105:5">for<control pos:start="69:8" pos:end="69:31">(<init pos:start="69:9" pos:end="69:12"><expr pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:9">y</name><operator pos:start="69:10" pos:end="69:10">=</operator><literal type="number" pos:start="69:11" pos:end="69:11">0</literal></expr>;</init> <condition pos:start="69:14" pos:end="69:26"><expr pos:start="69:14" pos:end="69:25"><name pos:start="69:14" pos:end="69:14">y</name><operator pos:start="69:15" pos:end="69:15">&lt;</operator><name pos:start="69:16" pos:end="69:25">BLOCK_SIZE</name></expr>;</condition> <incr pos:start="69:28" pos:end="69:30"><expr pos:start="69:28" pos:end="69:30"><name pos:start="69:28" pos:end="69:28">y</name><operator pos:start="69:29" pos:end="69:30">++</operator></expr></incr>)</control><block pos:start="69:32" pos:end="105:5">{<block_content pos:start="71:9" pos:end="103:20">

        <decl_stmt pos:start="71:9" pos:end="71:31"><decl pos:start="71:9" pos:end="71:30"><type pos:start="71:9" pos:end="71:11"><name pos:start="71:9" pos:end="71:11">int</name></type> <name pos:start="71:13" pos:end="71:13">a</name><init pos:start="71:14" pos:end="71:30">= <expr pos:start="71:16" pos:end="71:30"><name pos:start="71:16" pos:end="71:21"><name pos:start="71:16" pos:end="71:18">src</name><index pos:start="71:19" pos:end="71:21">[<expr pos:start="71:20" pos:end="71:20"><literal type="number" pos:start="71:20" pos:end="71:20">1</literal></expr>]</index></name> <operator pos:start="71:23" pos:end="71:23">-</operator> <name pos:start="71:25" pos:end="71:30"><name pos:start="71:25" pos:end="71:27">src</name><index pos:start="71:28" pos:end="71:30">[<expr pos:start="71:29" pos:end="71:29"><literal type="number" pos:start="71:29" pos:end="71:29">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="73:9" pos:end="73:31"><decl pos:start="73:9" pos:end="73:30"><type pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:11">int</name></type> <name pos:start="73:13" pos:end="73:13">b</name><init pos:start="73:14" pos:end="73:30">= <expr pos:start="73:16" pos:end="73:30"><name pos:start="73:16" pos:end="73:21"><name pos:start="73:16" pos:end="73:18">src</name><index pos:start="73:19" pos:end="73:21">[<expr pos:start="73:20" pos:end="73:20"><literal type="number" pos:start="73:20" pos:end="73:20">3</literal></expr>]</index></name> <operator pos:start="73:23" pos:end="73:23">-</operator> <name pos:start="73:25" pos:end="73:30"><name pos:start="73:25" pos:end="73:27">src</name><index pos:start="73:28" pos:end="73:30">[<expr pos:start="73:29" pos:end="73:29"><literal type="number" pos:start="73:29" pos:end="73:29">4</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="75:9" pos:end="75:31"><decl pos:start="75:9" pos:end="75:30"><type pos:start="75:9" pos:end="75:11"><name pos:start="75:9" pos:end="75:11">int</name></type> <name pos:start="75:13" pos:end="75:13">c</name><init pos:start="75:14" pos:end="75:30">= <expr pos:start="75:16" pos:end="75:30"><name pos:start="75:16" pos:end="75:21"><name pos:start="75:16" pos:end="75:18">src</name><index pos:start="75:19" pos:end="75:21">[<expr pos:start="75:20" pos:end="75:20"><literal type="number" pos:start="75:20" pos:end="75:20">5</literal></expr>]</index></name> <operator pos:start="75:23" pos:end="75:23">-</operator> <name pos:start="75:25" pos:end="75:30"><name pos:start="75:25" pos:end="75:27">src</name><index pos:start="75:28" pos:end="75:30">[<expr pos:start="75:29" pos:end="75:29"><literal type="number" pos:start="75:29" pos:end="75:29">6</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <decl_stmt pos:start="79:9" pos:end="79:60"><decl pos:start="79:9" pos:end="79:59"><type pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">int</name></type> <name pos:start="79:13" pos:end="79:13">d</name><init pos:start="79:14" pos:end="79:59">= <expr pos:start="79:16" pos:end="79:59"><call pos:start="79:16" pos:end="79:59"><name pos:start="79:16" pos:end="79:20">FFMAX</name><argument_list pos:start="79:21" pos:end="79:59">(<argument pos:start="79:22" pos:end="79:55"><expr pos:start="79:22" pos:end="79:55"><call pos:start="79:22" pos:end="79:29"><name pos:start="79:22" pos:end="79:26">FFABS</name><argument_list pos:start="79:27" pos:end="79:29">(<argument pos:start="79:28" pos:end="79:28"><expr pos:start="79:28" pos:end="79:28"><name pos:start="79:28" pos:end="79:28">b</name></expr></argument>)</argument_list></call> <operator pos:start="79:31" pos:end="79:31">-</operator> <operator pos:start="79:33" pos:end="79:33">(</operator><call pos:start="79:34" pos:end="79:41"><name pos:start="79:34" pos:end="79:38">FFABS</name><argument_list pos:start="79:39" pos:end="79:41">(<argument pos:start="79:40" pos:end="79:40"><expr pos:start="79:40" pos:end="79:40"><name pos:start="79:40" pos:end="79:40">a</name></expr></argument>)</argument_list></call> <operator pos:start="79:43" pos:end="79:43">+</operator> <call pos:start="79:45" pos:end="79:52"><name pos:start="79:45" pos:end="79:49">FFABS</name><argument_list pos:start="79:50" pos:end="79:52">(<argument pos:start="79:51" pos:end="79:51"><expr pos:start="79:51" pos:end="79:51"><name pos:start="79:51" pos:end="79:51">c</name></expr></argument>)</argument_list></call><operator pos:start="79:53" pos:end="79:53">)</operator><operator pos:start="79:54" pos:end="79:54">/</operator><literal type="number" pos:start="79:55" pos:end="79:55">2</literal></expr></argument>, <argument pos:start="79:58" pos:end="79:58"><expr pos:start="79:58" pos:end="79:58"><literal type="number" pos:start="79:58" pos:end="79:58">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="83:9" pos:end="101:9"><if pos:start="83:9" pos:end="101:9">if<condition pos:start="83:11" pos:end="83:18">(<expr pos:start="83:12" pos:end="83:17"><name pos:start="83:12" pos:end="83:12">d</name> <operator pos:start="83:14" pos:end="83:14">&lt;</operator> <name pos:start="83:16" pos:end="83:17">QP</name></expr>)</condition><block pos:start="83:19" pos:end="101:9">{<block_content pos:start="85:13" pos:end="99:25">

            <decl_stmt pos:start="85:13" pos:end="85:35"><decl pos:start="85:13" pos:end="85:34"><type pos:start="85:13" pos:end="85:15"><name pos:start="85:13" pos:end="85:15">int</name></type> <name pos:start="85:17" pos:end="85:17">v</name> <init pos:start="85:19" pos:end="85:34">= <expr pos:start="85:21" pos:end="85:34"><name pos:start="85:21" pos:end="85:21">d</name> <operator pos:start="85:23" pos:end="85:23">*</operator> <call pos:start="85:25" pos:end="85:34"><name pos:start="85:25" pos:end="85:30">FFSIGN</name><argument_list pos:start="85:31" pos:end="85:34">(<argument pos:start="85:32" pos:end="85:33"><expr pos:start="85:32" pos:end="85:33"><operator pos:start="85:32" pos:end="85:32">-</operator><name pos:start="85:33" pos:end="85:33">b</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="89:13" pos:end="89:25"><expr pos:start="89:13" pos:end="89:24"><name pos:start="89:13" pos:end="89:18"><name pos:start="89:13" pos:end="89:15">src</name><index pos:start="89:16" pos:end="89:18">[<expr pos:start="89:17" pos:end="89:17"><literal type="number" pos:start="89:17" pos:end="89:17">1</literal></expr>]</index></name> <operator pos:start="89:20" pos:end="89:21">+=</operator><name pos:start="89:22" pos:end="89:22">v</name><operator pos:start="89:23" pos:end="89:23">/</operator><literal type="number" pos:start="89:24" pos:end="89:24">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:25"><expr pos:start="91:13" pos:end="91:24"><name pos:start="91:13" pos:end="91:18"><name pos:start="91:13" pos:end="91:15">src</name><index pos:start="91:16" pos:end="91:18">[<expr pos:start="91:17" pos:end="91:17"><literal type="number" pos:start="91:17" pos:end="91:17">2</literal></expr>]</index></name> <operator pos:start="91:20" pos:end="91:21">+=</operator><name pos:start="91:22" pos:end="91:22">v</name><operator pos:start="91:23" pos:end="91:23">/</operator><literal type="number" pos:start="91:24" pos:end="91:24">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:27"><expr pos:start="93:13" pos:end="93:26"><name pos:start="93:13" pos:end="93:18"><name pos:start="93:13" pos:end="93:15">src</name><index pos:start="93:16" pos:end="93:18">[<expr pos:start="93:17" pos:end="93:17"><literal type="number" pos:start="93:17" pos:end="93:17">3</literal></expr>]</index></name> <operator pos:start="93:20" pos:end="93:21">+=</operator><literal type="number" pos:start="93:22" pos:end="93:22">3</literal><operator pos:start="93:23" pos:end="93:23">*</operator><name pos:start="93:24" pos:end="93:24">v</name><operator pos:start="93:25" pos:end="93:25">/</operator><literal type="number" pos:start="93:26" pos:end="93:26">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:27"><expr pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:18"><name pos:start="95:13" pos:end="95:15">src</name><index pos:start="95:16" pos:end="95:18">[<expr pos:start="95:17" pos:end="95:17"><literal type="number" pos:start="95:17" pos:end="95:17">4</literal></expr>]</index></name> <operator pos:start="95:20" pos:end="95:21">-=</operator><literal type="number" pos:start="95:22" pos:end="95:22">3</literal><operator pos:start="95:23" pos:end="95:23">*</operator><name pos:start="95:24" pos:end="95:24">v</name><operator pos:start="95:25" pos:end="95:25">/</operator><literal type="number" pos:start="95:26" pos:end="95:26">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:25"><expr pos:start="97:13" pos:end="97:24"><name pos:start="97:13" pos:end="97:18"><name pos:start="97:13" pos:end="97:15">src</name><index pos:start="97:16" pos:end="97:18">[<expr pos:start="97:17" pos:end="97:17"><literal type="number" pos:start="97:17" pos:end="97:17">5</literal></expr>]</index></name> <operator pos:start="97:20" pos:end="97:21">-=</operator><name pos:start="97:22" pos:end="97:22">v</name><operator pos:start="97:23" pos:end="97:23">/</operator><literal type="number" pos:start="97:24" pos:end="97:24">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:25"><expr pos:start="99:13" pos:end="99:24"><name pos:start="99:13" pos:end="99:18"><name pos:start="99:13" pos:end="99:15">src</name><index pos:start="99:16" pos:end="99:18">[<expr pos:start="99:17" pos:end="99:17"><literal type="number" pos:start="99:17" pos:end="99:17">6</literal></expr>]</index></name> <operator pos:start="99:20" pos:end="99:21">-=</operator><name pos:start="99:22" pos:end="99:22">v</name><operator pos:start="99:23" pos:end="99:23">/</operator><literal type="number" pos:start="99:24" pos:end="99:24">8</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:20"><expr pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:11">src</name><operator pos:start="103:12" pos:end="103:13">+=</operator><name pos:start="103:14" pos:end="103:19">stride</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
