<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3966.c" pos:tabs="8"><function pos:start="1:1" pos:end="1148:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">avi_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1148:13">{<block_content pos:start="5:5" pos:end="1148:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AVIContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">avi</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:20">tag</name></decl>, <decl pos:start="9:23" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:23" pos:end="9:26">tag1</name></decl>, <decl pos:start="9:29" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:29" pos:end="9:35">handler</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">codec_type</name></decl>, <decl pos:start="11:21" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:32">stream_index</name></decl>, <decl pos:start="11:35" pos:end="11:46"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:35" pos:end="11:46">frame_period</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:21">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">AVStream</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:31"><decl pos:start="19:5" pos:end="19:30"><type pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:13">AVIStream</name> <modifier pos:start="19:15" pos:end="19:15">*</modifier></type><name pos:start="19:16" pos:end="19:18">ast</name>      <init pos:start="19:25" pos:end="19:30">= <expr pos:start="19:27" pos:end="19:30"><name pos:start="19:27" pos:end="19:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:45"><decl pos:start="21:5" pos:end="21:27"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:18">avih_width</name>      <init pos:start="21:25" pos:end="21:27">= <expr pos:start="21:27" pos:end="21:27"><literal type="number" pos:start="21:27" pos:end="21:27">0</literal></expr></init></decl>, <decl pos:start="21:30" pos:end="21:44"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:30" pos:end="21:40">avih_height</name> <init pos:start="21:42" pos:end="21:44">= <expr pos:start="21:44" pos:end="21:44"><literal type="number" pos:start="21:44" pos:end="21:44">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:27"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:23">amv_file_format</name> <init pos:start="23:25" pos:end="23:27">= <expr pos:start="23:27" pos:end="23:27"><literal type="number" pos:start="23:27" pos:end="23:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:28"><decl pos:start="25:5" pos:end="25:27"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint64_t</name></type> <name pos:start="25:14" pos:end="25:21">list_end</name>   <init pos:start="25:25" pos:end="25:27">= <expr pos:start="25:27" pos:end="25:27"><literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:16"><decl pos:start="27:5" pos:end="27:15"><type pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:11">int64_t</name></type> <name pos:start="27:13" pos:end="27:15">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:12"><decl pos:start="29:5" pos:end="29:11"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:34"><decl pos:start="31:5" pos:end="31:33"><type pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:21">AVDictionaryEntry</name> <modifier pos:start="31:23" pos:end="31:23">*</modifier></type><name pos:start="31:24" pos:end="31:33">dict_entry</name></decl>;</decl_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:7">avi</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:21">stream_index</name></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <operator pos:start="35:25" pos:end="35:25">-</operator><literal type="number" pos:start="35:26" pos:end="35:26">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:26"><expr pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:7">ret</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:25"><name pos:start="39:11" pos:end="39:18">get_riff</name><argument_list pos:start="39:19" pos:end="39:25">(<argument pos:start="39:20" pos:end="39:20"><expr pos:start="39:20" pos:end="39:20"><name pos:start="39:20" pos:end="39:20">s</name></expr></argument>, <argument pos:start="39:23" pos:end="39:24"><expr pos:start="39:23" pos:end="39:24"><name pos:start="39:23" pos:end="39:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:19"><if pos:start="41:5" pos:end="43:19">if <condition pos:start="41:8" pos:end="41:16">(<expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">&lt;</operator> <literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:19"><block_content pos:start="43:9" pos:end="43:19">

        <return pos:start="43:9" pos:end="43:19">return <expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:62"><expr pos:start="47:5" pos:end="47:61"><call pos:start="47:5" pos:end="47:61"><name pos:start="47:5" pos:end="47:10">av_log</name><argument_list pos:start="47:11" pos:end="47:61">(<argument pos:start="47:12" pos:end="47:14"><expr pos:start="47:12" pos:end="47:14"><name pos:start="47:12" pos:end="47:14">avi</name></expr></argument>, <argument pos:start="47:17" pos:end="47:28"><expr pos:start="47:17" pos:end="47:28"><name pos:start="47:17" pos:end="47:28">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="47:31" pos:end="47:45"><expr pos:start="47:31" pos:end="47:45"><literal type="string" pos:start="47:31" pos:end="47:45">"use odml:%d\n"</literal></expr></argument>, <argument pos:start="47:48" pos:end="47:60"><expr pos:start="47:48" pos:end="47:60"><name pos:start="47:48" pos:end="47:60"><name pos:start="47:48" pos:end="47:50">avi</name><operator pos:start="47:51" pos:end="47:52">-&gt;</operator><name pos:start="47:53" pos:end="47:60">use_odml</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:47"><expr pos:start="51:5" pos:end="51:46"><name pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:7">avi</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:17">io_fsize</name></name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:30"><name pos:start="51:21" pos:end="51:23">avi</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:30">fsize</name></name> <operator pos:start="51:32" pos:end="51:32">=</operator> <call pos:start="51:34" pos:end="51:46"><name pos:start="51:34" pos:end="51:42">avio_size</name><argument_list pos:start="51:43" pos:end="51:46">(<argument pos:start="51:44" pos:end="51:45"><expr pos:start="51:44" pos:end="51:45"><name pos:start="51:44" pos:end="51:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:68"><if pos:start="53:5" pos:end="55:68">if <condition pos:start="53:8" pos:end="53:54">(<expr pos:start="53:9" pos:end="53:53"><name pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:11">avi</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:18">fsize</name></name> <operator pos:start="53:20" pos:end="53:21">&lt;=</operator> <literal type="number" pos:start="53:23" pos:end="53:23">0</literal> <operator pos:start="53:25" pos:end="53:26">||</operator> <name pos:start="53:28" pos:end="53:37"><name pos:start="53:28" pos:end="53:30">avi</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:37">fsize</name></name> <operator pos:start="53:39" pos:end="53:39">&lt;</operator> <name pos:start="53:41" pos:end="53:53"><name pos:start="53:41" pos:end="53:43">avi</name><operator pos:start="53:44" pos:end="53:45">-&gt;</operator><name pos:start="53:46" pos:end="53:53">riff_end</name></name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:68"><block_content pos:start="55:9" pos:end="55:68">

        <expr_stmt pos:start="55:9" pos:end="55:68"><expr pos:start="55:9" pos:end="55:67"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:11">avi</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:18">fsize</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <ternary pos:start="55:22" pos:end="55:67"><condition pos:start="55:22" pos:end="55:41"><expr pos:start="55:22" pos:end="55:39"><name pos:start="55:22" pos:end="55:34"><name pos:start="55:22" pos:end="55:24">avi</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:34">riff_end</name></name> <operator pos:start="55:36" pos:end="55:37">==</operator> <literal type="number" pos:start="55:39" pos:end="55:39">8</literal></expr> ?</condition><then pos:start="55:43" pos:end="55:51"> <expr pos:start="55:43" pos:end="55:51"><name pos:start="55:43" pos:end="55:51">INT64_MAX</name></expr> </then><else pos:start="55:53" pos:end="55:67">: <expr pos:start="55:55" pos:end="55:67"><name pos:start="55:55" pos:end="55:67"><name pos:start="55:55" pos:end="55:57">avi</name><operator pos:start="55:58" pos:end="55:59">-&gt;</operator><name pos:start="55:60" pos:end="55:67">riff_end</name></name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:24">/* first list tag */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:22"><expr pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:16">stream_index</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <operator pos:start="61:20" pos:end="61:20">-</operator><literal type="number" pos:start="61:21" pos:end="61:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:22"><expr pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:14">codec_type</name>   <operator pos:start="63:18" pos:end="63:18">=</operator> <operator pos:start="63:20" pos:end="63:20">-</operator><literal type="number" pos:start="63:21" pos:end="63:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:21"><expr pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:16">frame_period</name> <operator pos:start="65:18" pos:end="65:18">=</operator> <literal type="number" pos:start="65:20" pos:end="65:20">0</literal></expr>;</expr_stmt>

    <for pos:start="67:5" pos:end="1148:13">for <control pos:start="67:9" pos:end="67:12">(<init pos:start="67:10" pos:end="67:10">;</init><condition pos:start="67:11" pos:end="67:11">;</condition><incr/>)</control> <block pos:start="67:14" pos:end="1148:13">{<block_content pos:start="69:9" pos:end="1148:13">

        <if_stmt pos:start="69:9" pos:end="71:22"><if pos:start="69:9" pos:end="71:22">if <condition pos:start="69:12" pos:end="69:26">(<expr pos:start="69:13" pos:end="69:25"><call pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:21">avio_feof</name><argument_list pos:start="69:22" pos:end="69:25">(<argument pos:start="69:23" pos:end="69:24"><expr pos:start="69:23" pos:end="69:24"><name pos:start="69:23" pos:end="69:24">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:22"><block_content pos:start="71:13" pos:end="71:22">

            <goto pos:start="71:13" pos:end="71:22">goto <name pos:start="71:18" pos:end="71:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:29"><expr pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:11">tag</name>  <operator pos:start="73:14" pos:end="73:14">=</operator> <call pos:start="73:16" pos:end="73:28"><name pos:start="73:16" pos:end="73:24">avio_rl32</name><argument_list pos:start="73:25" pos:end="73:28">(<argument pos:start="73:26" pos:end="73:27"><expr pos:start="73:26" pos:end="73:27"><name pos:start="73:26" pos:end="73:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:29"><expr pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:12">size</name> <operator pos:start="75:14" pos:end="75:14">=</operator> <call pos:start="75:16" pos:end="75:28"><name pos:start="75:16" pos:end="75:24">avio_rl32</name><argument_list pos:start="75:25" pos:end="75:28">(<argument pos:start="75:26" pos:end="75:27"><expr pos:start="75:26" pos:end="75:27"><name pos:start="75:26" pos:end="75:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:36"><expr pos:start="79:9" pos:end="79:35"><call pos:start="79:9" pos:end="79:35"><name pos:start="79:9" pos:end="79:17">print_tag</name><argument_list pos:start="79:18" pos:end="79:35">(<argument pos:start="79:19" pos:end="79:23"><expr pos:start="79:19" pos:end="79:23"><literal type="string" pos:start="79:19" pos:end="79:23">"tag"</literal></expr></argument>, <argument pos:start="79:26" pos:end="79:28"><expr pos:start="79:26" pos:end="79:28"><name pos:start="79:26" pos:end="79:28">tag</name></expr></argument>, <argument pos:start="79:31" pos:end="79:34"><expr pos:start="79:31" pos:end="79:34"><name pos:start="79:31" pos:end="79:34">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <switch pos:start="83:9" pos:end="1148:13">switch <condition pos:start="83:16" pos:end="83:20">(<expr pos:start="83:17" pos:end="83:19"><name pos:start="83:17" pos:end="83:19">tag</name></expr>)</condition> <block pos:start="83:22" pos:end="1148:13">{<block_content pos:start="85:9" pos:end="1148:13">

        <case pos:start="85:9" pos:end="85:39">case <expr pos:start="85:14" pos:end="85:38"><call pos:start="85:14" pos:end="85:38"><name pos:start="85:14" pos:end="85:18">MKTAG</name><argument_list pos:start="85:19" pos:end="85:38">(<argument pos:start="85:20" pos:end="85:22"><expr pos:start="85:20" pos:end="85:22"><literal type="char" pos:start="85:20" pos:end="85:22">'L'</literal></expr></argument>, <argument pos:start="85:25" pos:end="85:27"><expr pos:start="85:25" pos:end="85:27"><literal type="char" pos:start="85:25" pos:end="85:27">'I'</literal></expr></argument>, <argument pos:start="85:30" pos:end="85:32"><expr pos:start="85:30" pos:end="85:32"><literal type="char" pos:start="85:30" pos:end="85:32">'S'</literal></expr></argument>, <argument pos:start="85:35" pos:end="85:37"><expr pos:start="85:35" pos:end="85:37"><literal type="char" pos:start="85:35" pos:end="85:37">'T'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <expr_stmt pos:start="87:13" pos:end="87:44"><expr pos:start="87:13" pos:end="87:43"><name pos:start="87:13" pos:end="87:20">list_end</name> <operator pos:start="87:22" pos:end="87:22">=</operator> <call pos:start="87:24" pos:end="87:36"><name pos:start="87:24" pos:end="87:32">avio_tell</name><argument_list pos:start="87:33" pos:end="87:36">(<argument pos:start="87:34" pos:end="87:35"><expr pos:start="87:34" pos:end="87:35"><name pos:start="87:34" pos:end="87:35">pb</name></expr></argument>)</argument_list></call> <operator pos:start="87:38" pos:end="87:38">+</operator> <name pos:start="87:40" pos:end="87:43">size</name></expr>;</expr_stmt>

            <comment type="block" pos:start="89:13" pos:end="89:60">/* Ignored, except at start of video packets. */</comment>

            <expr_stmt pos:start="91:13" pos:end="91:33"><expr pos:start="91:13" pos:end="91:32"><name pos:start="91:13" pos:end="91:16">tag1</name> <operator pos:start="91:18" pos:end="91:18">=</operator> <call pos:start="91:20" pos:end="91:32"><name pos:start="91:20" pos:end="91:28">avio_rl32</name><argument_list pos:start="91:29" pos:end="91:32">(<argument pos:start="91:30" pos:end="91:31"><expr pos:start="91:30" pos:end="91:31"><name pos:start="91:30" pos:end="91:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="95:13" pos:end="95:39"><expr pos:start="95:13" pos:end="95:38"><call pos:start="95:13" pos:end="95:38"><name pos:start="95:13" pos:end="95:21">print_tag</name><argument_list pos:start="95:22" pos:end="95:38">(<argument pos:start="95:23" pos:end="95:28"><expr pos:start="95:23" pos:end="95:28"><literal type="string" pos:start="95:23" pos:end="95:28">"list"</literal></expr></argument>, <argument pos:start="95:31" pos:end="95:34"><expr pos:start="95:31" pos:end="95:34"><name pos:start="95:31" pos:end="95:34">tag1</name></expr></argument>, <argument pos:start="95:37" pos:end="95:37"><expr pos:start="95:37" pos:end="95:37"><literal type="number" pos:start="95:37" pos:end="95:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="99:13" pos:end="121:44"><if pos:start="99:13" pos:end="115:13">if <condition pos:start="99:16" pos:end="99:50">(<expr pos:start="99:17" pos:end="99:49"><name pos:start="99:17" pos:end="99:20">tag1</name> <operator pos:start="99:22" pos:end="99:23">==</operator> <call pos:start="99:25" pos:end="99:49"><name pos:start="99:25" pos:end="99:29">MKTAG</name><argument_list pos:start="99:30" pos:end="99:49">(<argument pos:start="99:31" pos:end="99:33"><expr pos:start="99:31" pos:end="99:33"><literal type="char" pos:start="99:31" pos:end="99:33">'m'</literal></expr></argument>, <argument pos:start="99:36" pos:end="99:38"><expr pos:start="99:36" pos:end="99:38"><literal type="char" pos:start="99:36" pos:end="99:38">'o'</literal></expr></argument>, <argument pos:start="99:41" pos:end="99:43"><expr pos:start="99:41" pos:end="99:43"><literal type="char" pos:start="99:41" pos:end="99:43">'v'</literal></expr></argument>, <argument pos:start="99:46" pos:end="99:48"><expr pos:start="99:46" pos:end="99:48"><literal type="char" pos:start="99:46" pos:end="99:48">'i'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:52" pos:end="115:13">{<block_content pos:start="101:17" pos:end="113:35">

                <expr_stmt pos:start="101:17" pos:end="101:51"><expr pos:start="101:17" pos:end="101:50"><name pos:start="101:17" pos:end="101:30"><name pos:start="101:17" pos:end="101:19">avi</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:30">movi_list</name></name> <operator pos:start="101:32" pos:end="101:32">=</operator> <call pos:start="101:34" pos:end="101:46"><name pos:start="101:34" pos:end="101:42">avio_tell</name><argument_list pos:start="101:43" pos:end="101:46">(<argument pos:start="101:44" pos:end="101:45"><expr pos:start="101:44" pos:end="101:45"><name pos:start="101:44" pos:end="101:45">pb</name></expr></argument>)</argument_list></call> <operator pos:start="101:48" pos:end="101:48">-</operator> <literal type="number" pos:start="101:50" pos:end="101:50">4</literal></expr>;</expr_stmt>

                <if_stmt pos:start="103:17" pos:end="109:47"><if pos:start="103:17" pos:end="105:71">if <condition pos:start="103:20" pos:end="103:25">(<expr pos:start="103:21" pos:end="103:24"><name pos:start="103:21" pos:end="103:24">size</name></expr>)</condition><block type="pseudo" pos:start="105:21" pos:end="105:71"><block_content pos:start="105:21" pos:end="105:71">

                    <expr_stmt pos:start="105:21" pos:end="105:71"><expr pos:start="105:21" pos:end="105:70"><name pos:start="105:21" pos:end="105:33"><name pos:start="105:21" pos:end="105:23">avi</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:33">movi_end</name></name> <operator pos:start="105:35" pos:end="105:35">=</operator> <name pos:start="105:37" pos:end="105:50"><name pos:start="105:37" pos:end="105:39">avi</name><operator pos:start="105:40" pos:end="105:41">-&gt;</operator><name pos:start="105:42" pos:end="105:50">movi_list</name></name> <operator pos:start="105:52" pos:end="105:52">+</operator> <name pos:start="105:54" pos:end="105:57">size</name> <operator pos:start="105:59" pos:end="105:59">+</operator> <operator pos:start="105:61" pos:end="105:61">(</operator><name pos:start="105:62" pos:end="105:65">size</name> <operator pos:start="105:67" pos:end="105:67">&amp;</operator> <literal type="number" pos:start="105:69" pos:end="105:69">1</literal><operator pos:start="105:70" pos:end="105:70">)</operator></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="107:17" pos:end="109:47">else<block type="pseudo" pos:start="109:21" pos:end="109:47"><block_content pos:start="109:21" pos:end="109:47">

                    <expr_stmt pos:start="109:21" pos:end="109:47"><expr pos:start="109:21" pos:end="109:46"><name pos:start="109:21" pos:end="109:33"><name pos:start="109:21" pos:end="109:23">avi</name><operator pos:start="109:24" pos:end="109:25">-&gt;</operator><name pos:start="109:26" pos:end="109:33">movi_end</name></name> <operator pos:start="109:35" pos:end="109:35">=</operator> <name pos:start="109:37" pos:end="109:46"><name pos:start="109:37" pos:end="109:39">avi</name><operator pos:start="109:40" pos:end="109:41">-&gt;</operator><name pos:start="109:42" pos:end="109:46">fsize</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:82"><expr pos:start="111:17" pos:end="111:81"><call pos:start="111:17" pos:end="111:81"><name pos:start="111:17" pos:end="111:22">av_log</name><argument_list pos:start="111:23" pos:end="111:81">(<argument pos:start="111:24" pos:end="111:27"><expr pos:start="111:24" pos:end="111:27"><name pos:start="111:24" pos:end="111:27">NULL</name></expr></argument>, <argument pos:start="111:30" pos:end="111:41"><expr pos:start="111:30" pos:end="111:41"><name pos:start="111:30" pos:end="111:41">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="111:44" pos:end="111:65"><expr pos:start="111:44" pos:end="111:65"><literal type="string" pos:start="111:44" pos:end="111:55">"movi end=%"</literal><name pos:start="111:56" pos:end="111:61">PRIx64</name><literal type="string" pos:start="111:62" pos:end="111:65">"\n"</literal></expr></argument>, <argument pos:start="111:68" pos:end="111:80"><expr pos:start="111:68" pos:end="111:80"><name pos:start="111:68" pos:end="111:80"><name pos:start="111:68" pos:end="111:70">avi</name><operator pos:start="111:71" pos:end="111:72">-&gt;</operator><name pos:start="111:73" pos:end="111:80">movi_end</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="113:17" pos:end="113:35">goto <name pos:start="113:22" pos:end="113:34">end_of_header</name>;</goto>

            </block_content>}</block></if> <if type="elseif" pos:start="115:15" pos:end="117:47">else if <condition pos:start="115:23" pos:end="115:57">(<expr pos:start="115:24" pos:end="115:56"><name pos:start="115:24" pos:end="115:27">tag1</name> <operator pos:start="115:29" pos:end="115:30">==</operator> <call pos:start="115:32" pos:end="115:56"><name pos:start="115:32" pos:end="115:36">MKTAG</name><argument_list pos:start="115:37" pos:end="115:56">(<argument pos:start="115:38" pos:end="115:40"><expr pos:start="115:38" pos:end="115:40"><literal type="char" pos:start="115:38" pos:end="115:40">'I'</literal></expr></argument>, <argument pos:start="115:43" pos:end="115:45"><expr pos:start="115:43" pos:end="115:45"><literal type="char" pos:start="115:43" pos:end="115:45">'N'</literal></expr></argument>, <argument pos:start="115:48" pos:end="115:50"><expr pos:start="115:48" pos:end="115:50"><literal type="char" pos:start="115:48" pos:end="115:50">'F'</literal></expr></argument>, <argument pos:start="115:53" pos:end="115:55"><expr pos:start="115:53" pos:end="115:55"><literal type="char" pos:start="115:53" pos:end="115:55">'O'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:47"><block_content pos:start="117:17" pos:end="117:47">

                <expr_stmt pos:start="117:17" pos:end="117:47"><expr pos:start="117:17" pos:end="117:46"><call pos:start="117:17" pos:end="117:46"><name pos:start="117:17" pos:end="117:33">ff_read_riff_info</name><argument_list pos:start="117:34" pos:end="117:46">(<argument pos:start="117:35" pos:end="117:35"><expr pos:start="117:35" pos:end="117:35"><name pos:start="117:35" pos:end="117:35">s</name></expr></argument>, <argument pos:start="117:38" pos:end="117:45"><expr pos:start="117:38" pos:end="117:45"><name pos:start="117:38" pos:end="117:41">size</name> <operator pos:start="117:43" pos:end="117:43">-</operator> <literal type="number" pos:start="117:45" pos:end="117:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="119:13" pos:end="121:44">else if <condition pos:start="119:21" pos:end="119:55">(<expr pos:start="119:22" pos:end="119:54"><name pos:start="119:22" pos:end="119:25">tag1</name> <operator pos:start="119:27" pos:end="119:28">==</operator> <call pos:start="119:30" pos:end="119:54"><name pos:start="119:30" pos:end="119:34">MKTAG</name><argument_list pos:start="119:35" pos:end="119:54">(<argument pos:start="119:36" pos:end="119:38"><expr pos:start="119:36" pos:end="119:38"><literal type="char" pos:start="119:36" pos:end="119:38">'n'</literal></expr></argument>, <argument pos:start="119:41" pos:end="119:43"><expr pos:start="119:41" pos:end="119:43"><literal type="char" pos:start="119:41" pos:end="119:43">'c'</literal></expr></argument>, <argument pos:start="119:46" pos:end="119:48"><expr pos:start="119:46" pos:end="119:48"><literal type="char" pos:start="119:46" pos:end="119:48">'d'</literal></expr></argument>, <argument pos:start="119:51" pos:end="119:53"><expr pos:start="119:51" pos:end="119:53"><literal type="char" pos:start="119:51" pos:end="119:53">'t'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="121:17" pos:end="121:44"><block_content pos:start="121:17" pos:end="121:44">

                <expr_stmt pos:start="121:17" pos:end="121:44"><expr pos:start="121:17" pos:end="121:43"><call pos:start="121:17" pos:end="121:43"><name pos:start="121:17" pos:end="121:30">avi_read_nikon</name><argument_list pos:start="121:31" pos:end="121:43">(<argument pos:start="121:32" pos:end="121:32"><expr pos:start="121:32" pos:end="121:32"><name pos:start="121:32" pos:end="121:32">s</name></expr></argument>, <argument pos:start="121:35" pos:end="121:42"><expr pos:start="121:35" pos:end="121:42"><name pos:start="121:35" pos:end="121:42">list_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <break pos:start="125:13" pos:end="125:18">break;</break>

        <case pos:start="127:9" pos:end="127:39">case <expr pos:start="127:14" pos:end="127:38"><call pos:start="127:14" pos:end="127:38"><name pos:start="127:14" pos:end="127:18">MKTAG</name><argument_list pos:start="127:19" pos:end="127:38">(<argument pos:start="127:20" pos:end="127:22"><expr pos:start="127:20" pos:end="127:22"><literal type="char" pos:start="127:20" pos:end="127:22">'I'</literal></expr></argument>, <argument pos:start="127:25" pos:end="127:27"><expr pos:start="127:25" pos:end="127:27"><literal type="char" pos:start="127:25" pos:end="127:27">'D'</literal></expr></argument>, <argument pos:start="127:30" pos:end="127:32"><expr pos:start="127:30" pos:end="127:32"><literal type="char" pos:start="127:30" pos:end="127:32">'I'</literal></expr></argument>, <argument pos:start="127:35" pos:end="127:37"><expr pos:start="127:35" pos:end="127:37"><literal type="char" pos:start="127:35" pos:end="127:37">'T'</literal></expr></argument>)</argument_list></call></expr>:</case>

        <block pos:start="129:9" pos:end="1148:13">{<block_content pos:start="131:13" pos:end="1148:13">

            <decl_stmt pos:start="131:13" pos:end="131:43"><decl pos:start="131:13" pos:end="131:42"><type pos:start="131:13" pos:end="131:25"><name pos:start="131:13" pos:end="131:20">unsigned</name> <name pos:start="131:22" pos:end="131:25">char</name></type> <name pos:start="131:27" pos:end="131:34"><name pos:start="131:27" pos:end="131:30">date</name><index pos:start="131:31" pos:end="131:34">[<expr pos:start="131:32" pos:end="131:33"><literal type="number" pos:start="131:32" pos:end="131:33">64</literal></expr>]</index></name> <init pos:start="131:36" pos:end="131:42">= <expr pos:start="131:38" pos:end="131:42"><block pos:start="131:38" pos:end="131:42">{ <expr pos:start="131:40" pos:end="131:40"><literal type="number" pos:start="131:40" pos:end="131:40">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:31"><expr pos:start="133:13" pos:end="133:30"><name pos:start="133:13" pos:end="133:16">size</name> <operator pos:start="133:18" pos:end="133:19">+=</operator> <operator pos:start="133:21" pos:end="133:21">(</operator><name pos:start="133:22" pos:end="133:25">size</name> <operator pos:start="133:27" pos:end="133:27">&amp;</operator> <literal type="number" pos:start="133:29" pos:end="133:29">1</literal><operator pos:start="133:30" pos:end="133:30">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:71"><expr pos:start="135:13" pos:end="135:70"><name pos:start="135:13" pos:end="135:16">size</name> <operator pos:start="135:18" pos:end="135:19">-=</operator> <call pos:start="135:21" pos:end="135:70"><name pos:start="135:21" pos:end="135:29">avio_read</name><argument_list pos:start="135:30" pos:end="135:70">(<argument pos:start="135:31" pos:end="135:32"><expr pos:start="135:31" pos:end="135:32"><name pos:start="135:31" pos:end="135:32">pb</name></expr></argument>, <argument pos:start="135:35" pos:end="135:38"><expr pos:start="135:35" pos:end="135:38"><name pos:start="135:35" pos:end="135:38">date</name></expr></argument>, <argument pos:start="135:41" pos:end="135:69"><expr pos:start="135:41" pos:end="135:69"><call pos:start="135:41" pos:end="135:69"><name pos:start="135:41" pos:end="135:45">FFMIN</name><argument_list pos:start="135:46" pos:end="135:69">(<argument pos:start="135:47" pos:end="135:50"><expr pos:start="135:47" pos:end="135:50"><name pos:start="135:47" pos:end="135:50">size</name></expr></argument>, <argument pos:start="135:53" pos:end="135:68"><expr pos:start="135:53" pos:end="135:68"><sizeof pos:start="135:53" pos:end="135:64">sizeof<argument_list pos:start="135:59" pos:end="135:64">(<argument pos:start="135:60" pos:end="135:63"><expr pos:start="135:60" pos:end="135:63"><name pos:start="135:60" pos:end="135:63">date</name></expr></argument>)</argument_list></sizeof> <operator pos:start="135:66" pos:end="135:66">-</operator> <literal type="number" pos:start="135:68" pos:end="135:68">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:32"><expr pos:start="137:13" pos:end="137:31"><call pos:start="137:13" pos:end="137:31"><name pos:start="137:13" pos:end="137:21">avio_skip</name><argument_list pos:start="137:22" pos:end="137:31">(<argument pos:start="137:23" pos:end="137:24"><expr pos:start="137:23" pos:end="137:24"><name pos:start="137:23" pos:end="137:24">pb</name></expr></argument>, <argument pos:start="137:27" pos:end="137:30"><expr pos:start="137:27" pos:end="137:30"><name pos:start="137:27" pos:end="137:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:59"><expr pos:start="139:13" pos:end="139:58"><call pos:start="139:13" pos:end="139:58"><name pos:start="139:13" pos:end="139:38">avi_metadata_creation_time</name><argument_list pos:start="139:39" pos:end="139:58">(<argument pos:start="139:40" pos:end="139:51"><expr pos:start="139:40" pos:end="139:51"><operator pos:start="139:40" pos:end="139:40">&amp;</operator><name pos:start="139:41" pos:end="139:51"><name pos:start="139:41" pos:end="139:41">s</name><operator pos:start="139:42" pos:end="139:43">-&gt;</operator><name pos:start="139:44" pos:end="139:51">metadata</name></name></expr></argument>, <argument pos:start="139:54" pos:end="139:57"><expr pos:start="139:54" pos:end="139:57"><name pos:start="139:54" pos:end="139:57">date</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="141:13" pos:end="141:18">break;</break>


        <case pos:start="144:9" pos:end="144:39">case <expr pos:start="144:14" pos:end="144:38"><call pos:start="144:14" pos:end="144:38"><name pos:start="144:14" pos:end="144:18">MKTAG</name><argument_list pos:start="144:19" pos:end="144:38">(<argument pos:start="144:20" pos:end="144:22"><expr pos:start="144:20" pos:end="144:22"><literal type="char" pos:start="144:20" pos:end="144:22">'d'</literal></expr></argument>, <argument pos:start="144:25" pos:end="144:27"><expr pos:start="144:25" pos:end="144:27"><literal type="char" pos:start="144:25" pos:end="144:27">'m'</literal></expr></argument>, <argument pos:start="144:30" pos:end="144:32"><expr pos:start="144:30" pos:end="144:32"><literal type="char" pos:start="144:30" pos:end="144:32">'l'</literal></expr></argument>, <argument pos:start="144:35" pos:end="144:37"><expr pos:start="144:35" pos:end="144:37"><literal type="char" pos:start="144:35" pos:end="144:37">'h'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <expr_stmt pos:start="146:13" pos:end="146:29"><expr pos:start="146:13" pos:end="146:28"><name pos:start="146:13" pos:end="146:24"><name pos:start="146:13" pos:end="146:15">avi</name><operator pos:start="146:16" pos:end="146:17">-&gt;</operator><name pos:start="146:18" pos:end="146:24">is_odml</name></name> <operator pos:start="146:26" pos:end="146:26">=</operator> <literal type="number" pos:start="146:28" pos:end="146:28">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="148:13" pos:end="148:45"><expr pos:start="148:13" pos:end="148:44"><call pos:start="148:13" pos:end="148:44"><name pos:start="148:13" pos:end="148:21">avio_skip</name><argument_list pos:start="148:22" pos:end="148:44">(<argument pos:start="148:23" pos:end="148:24"><expr pos:start="148:23" pos:end="148:24"><name pos:start="148:23" pos:end="148:24">pb</name></expr></argument>, <argument pos:start="148:27" pos:end="148:43"><expr pos:start="148:27" pos:end="148:43"><name pos:start="148:27" pos:end="148:30">size</name> <operator pos:start="148:32" pos:end="148:32">+</operator> <operator pos:start="148:34" pos:end="148:34">(</operator><name pos:start="148:35" pos:end="148:38">size</name> <operator pos:start="148:40" pos:end="148:40">&amp;</operator> <literal type="number" pos:start="148:42" pos:end="148:42">1</literal><operator pos:start="148:43" pos:end="148:43">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="150:13" pos:end="150:18">break;</break>

        <case pos:start="152:9" pos:end="152:39">case <expr pos:start="152:14" pos:end="152:38"><call pos:start="152:14" pos:end="152:38"><name pos:start="152:14" pos:end="152:18">MKTAG</name><argument_list pos:start="152:19" pos:end="152:38">(<argument pos:start="152:20" pos:end="152:22"><expr pos:start="152:20" pos:end="152:22"><literal type="char" pos:start="152:20" pos:end="152:22">'a'</literal></expr></argument>, <argument pos:start="152:25" pos:end="152:27"><expr pos:start="152:25" pos:end="152:27"><literal type="char" pos:start="152:25" pos:end="152:27">'m'</literal></expr></argument>, <argument pos:start="152:30" pos:end="152:32"><expr pos:start="152:30" pos:end="152:32"><literal type="char" pos:start="152:30" pos:end="152:32">'v'</literal></expr></argument>, <argument pos:start="152:35" pos:end="152:37"><expr pos:start="152:35" pos:end="152:37"><literal type="char" pos:start="152:35" pos:end="152:37">'h'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <expr_stmt pos:start="154:13" pos:end="154:32"><expr pos:start="154:13" pos:end="154:31"><name pos:start="154:13" pos:end="154:27">amv_file_format</name> <operator pos:start="154:29" pos:end="154:29">=</operator> <literal type="number" pos:start="154:31" pos:end="154:31">1</literal></expr>;</expr_stmt>

        <case pos:start="156:9" pos:end="156:39">case <expr pos:start="156:14" pos:end="156:38"><call pos:start="156:14" pos:end="156:38"><name pos:start="156:14" pos:end="156:18">MKTAG</name><argument_list pos:start="156:19" pos:end="156:38">(<argument pos:start="156:20" pos:end="156:22"><expr pos:start="156:20" pos:end="156:22"><literal type="char" pos:start="156:20" pos:end="156:22">'a'</literal></expr></argument>, <argument pos:start="156:25" pos:end="156:27"><expr pos:start="156:25" pos:end="156:27"><literal type="char" pos:start="156:25" pos:end="156:27">'v'</literal></expr></argument>, <argument pos:start="156:30" pos:end="156:32"><expr pos:start="156:30" pos:end="156:32"><literal type="char" pos:start="156:30" pos:end="156:32">'i'</literal></expr></argument>, <argument pos:start="156:35" pos:end="156:37"><expr pos:start="156:35" pos:end="156:37"><literal type="char" pos:start="156:35" pos:end="156:37">'h'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <comment type="block" pos:start="158:13" pos:end="158:28">/* AVI header */</comment>

            <comment type="block" pos:start="160:13" pos:end="160:48">/* using frame_period is bad idea */</comment>

            <expr_stmt pos:start="162:13" pos:end="162:41"><expr pos:start="162:13" pos:end="162:40"><name pos:start="162:13" pos:end="162:24">frame_period</name> <operator pos:start="162:26" pos:end="162:26">=</operator> <call pos:start="162:28" pos:end="162:40"><name pos:start="162:28" pos:end="162:36">avio_rl32</name><argument_list pos:start="162:37" pos:end="162:40">(<argument pos:start="162:38" pos:end="162:39"><expr pos:start="162:38" pos:end="162:39"><name pos:start="162:38" pos:end="162:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="164:13" pos:end="164:26"><expr pos:start="164:13" pos:end="164:25"><call pos:start="164:13" pos:end="164:25"><name pos:start="164:13" pos:end="164:21">avio_rl32</name><argument_list pos:start="164:22" pos:end="164:25">(<argument pos:start="164:23" pos:end="164:24"><expr pos:start="164:23" pos:end="164:24"><name pos:start="164:23" pos:end="164:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="164:28" pos:end="164:54">/* max. bytes per second */</comment>

            <expr_stmt pos:start="166:13" pos:end="166:26"><expr pos:start="166:13" pos:end="166:25"><call pos:start="166:13" pos:end="166:25"><name pos:start="166:13" pos:end="166:21">avio_rl32</name><argument_list pos:start="166:22" pos:end="166:25">(<argument pos:start="166:23" pos:end="166:24"><expr pos:start="166:23" pos:end="166:24"><name pos:start="166:23" pos:end="166:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="168:13" pos:end="168:70"><expr pos:start="168:13" pos:end="168:69"><name pos:start="168:13" pos:end="168:32"><name pos:start="168:13" pos:end="168:15">avi</name><operator pos:start="168:16" pos:end="168:17">-&gt;</operator><name pos:start="168:18" pos:end="168:32">non_interleaved</name></name> <operator pos:start="168:34" pos:end="168:35">|=</operator> <call pos:start="168:37" pos:end="168:49"><name pos:start="168:37" pos:end="168:45">avio_rl32</name><argument_list pos:start="168:46" pos:end="168:49">(<argument pos:start="168:47" pos:end="168:48"><expr pos:start="168:47" pos:end="168:48"><name pos:start="168:47" pos:end="168:48">pb</name></expr></argument>)</argument_list></call> <operator pos:start="168:51" pos:end="168:51">&amp;</operator> <name pos:start="168:53" pos:end="168:69">AVIF_MUSTUSEINDEX</name></expr>;</expr_stmt>



            <expr_stmt pos:start="172:13" pos:end="172:33"><expr pos:start="172:13" pos:end="172:32"><call pos:start="172:13" pos:end="172:32"><name pos:start="172:13" pos:end="172:21">avio_skip</name><argument_list pos:start="172:22" pos:end="172:32">(<argument pos:start="172:23" pos:end="172:24"><expr pos:start="172:23" pos:end="172:24"><name pos:start="172:23" pos:end="172:24">pb</name></expr></argument>, <argument pos:start="172:27" pos:end="172:31"><expr pos:start="172:27" pos:end="172:31"><literal type="number" pos:start="172:27" pos:end="172:27">2</literal> <operator pos:start="172:29" pos:end="172:29">*</operator> <literal type="number" pos:start="172:31" pos:end="172:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="174:13" pos:end="174:26"><expr pos:start="174:13" pos:end="174:25"><call pos:start="174:13" pos:end="174:25"><name pos:start="174:13" pos:end="174:21">avio_rl32</name><argument_list pos:start="174:22" pos:end="174:25">(<argument pos:start="174:23" pos:end="174:24"><expr pos:start="174:23" pos:end="174:24"><name pos:start="174:23" pos:end="174:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="176:13" pos:end="176:26"><expr pos:start="176:13" pos:end="176:25"><call pos:start="176:13" pos:end="176:25"><name pos:start="176:13" pos:end="176:21">avio_rl32</name><argument_list pos:start="176:22" pos:end="176:25">(<argument pos:start="176:23" pos:end="176:24"><expr pos:start="176:23" pos:end="176:24"><name pos:start="176:23" pos:end="176:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="178:13" pos:end="178:40"><expr pos:start="178:13" pos:end="178:39"><name pos:start="178:13" pos:end="178:22">avih_width</name>  <operator pos:start="178:25" pos:end="178:25">=</operator> <call pos:start="178:27" pos:end="178:39"><name pos:start="178:27" pos:end="178:35">avio_rl32</name><argument_list pos:start="178:36" pos:end="178:39">(<argument pos:start="178:37" pos:end="178:38"><expr pos:start="178:37" pos:end="178:38"><name pos:start="178:37" pos:end="178:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="180:13" pos:end="180:40"><expr pos:start="180:13" pos:end="180:39"><name pos:start="180:13" pos:end="180:23">avih_height</name> <operator pos:start="180:25" pos:end="180:25">=</operator> <call pos:start="180:27" pos:end="180:39"><name pos:start="180:27" pos:end="180:35">avio_rl32</name><argument_list pos:start="180:36" pos:end="180:39">(<argument pos:start="180:37" pos:end="180:38"><expr pos:start="180:37" pos:end="180:38"><name pos:start="180:37" pos:end="180:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="184:13" pos:end="184:41"><expr pos:start="184:13" pos:end="184:40"><call pos:start="184:13" pos:end="184:40"><name pos:start="184:13" pos:end="184:21">avio_skip</name><argument_list pos:start="184:22" pos:end="184:40">(<argument pos:start="184:23" pos:end="184:24"><expr pos:start="184:23" pos:end="184:24"><name pos:start="184:23" pos:end="184:24">pb</name></expr></argument>, <argument pos:start="184:27" pos:end="184:39"><expr pos:start="184:27" pos:end="184:39"><name pos:start="184:27" pos:end="184:30">size</name> <operator pos:start="184:32" pos:end="184:32">-</operator> <literal type="number" pos:start="184:34" pos:end="184:35">10</literal> <operator pos:start="184:37" pos:end="184:37">*</operator> <literal type="number" pos:start="184:39" pos:end="184:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="186:13" pos:end="186:18">break;</break>

        <case pos:start="188:9" pos:end="188:39">case <expr pos:start="188:14" pos:end="188:38"><call pos:start="188:14" pos:end="188:38"><name pos:start="188:14" pos:end="188:18">MKTAG</name><argument_list pos:start="188:19" pos:end="188:38">(<argument pos:start="188:20" pos:end="188:22"><expr pos:start="188:20" pos:end="188:22"><literal type="char" pos:start="188:20" pos:end="188:22">'s'</literal></expr></argument>, <argument pos:start="188:25" pos:end="188:27"><expr pos:start="188:25" pos:end="188:27"><literal type="char" pos:start="188:25" pos:end="188:27">'t'</literal></expr></argument>, <argument pos:start="188:30" pos:end="188:32"><expr pos:start="188:30" pos:end="188:32"><literal type="char" pos:start="188:30" pos:end="188:32">'r'</literal></expr></argument>, <argument pos:start="188:35" pos:end="188:37"><expr pos:start="188:35" pos:end="188:37"><literal type="char" pos:start="188:35" pos:end="188:37">'h'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <comment type="block" pos:start="190:13" pos:end="190:31">/* stream header */</comment>



            <expr_stmt pos:start="194:13" pos:end="194:36"><expr pos:start="194:13" pos:end="194:35"><name pos:start="194:13" pos:end="194:16">tag1</name>    <operator pos:start="194:21" pos:end="194:21">=</operator> <call pos:start="194:23" pos:end="194:35"><name pos:start="194:23" pos:end="194:31">avio_rl32</name><argument_list pos:start="194:32" pos:end="194:35">(<argument pos:start="194:33" pos:end="194:34"><expr pos:start="194:33" pos:end="194:34"><name pos:start="194:33" pos:end="194:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="196:13" pos:end="196:36"><expr pos:start="196:13" pos:end="196:35"><name pos:start="196:13" pos:end="196:19">handler</name> <operator pos:start="196:21" pos:end="196:21">=</operator> <call pos:start="196:23" pos:end="196:35"><name pos:start="196:23" pos:end="196:31">avio_rl32</name><argument_list pos:start="196:32" pos:end="196:35">(<argument pos:start="196:33" pos:end="196:34"><expr pos:start="196:33" pos:end="196:34"><name pos:start="196:33" pos:end="196:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="196:38" pos:end="196:52">/* codec tag */</comment>



            <if_stmt pos:start="200:13" pos:end="1148:13"><if pos:start="200:13" pos:end="206:13">if <condition pos:start="200:16" pos:end="200:50">(<expr pos:start="200:17" pos:end="200:49"><name pos:start="200:17" pos:end="200:20">tag1</name> <operator pos:start="200:22" pos:end="200:23">==</operator> <call pos:start="200:25" pos:end="200:49"><name pos:start="200:25" pos:end="200:29">MKTAG</name><argument_list pos:start="200:30" pos:end="200:49">(<argument pos:start="200:31" pos:end="200:33"><expr pos:start="200:31" pos:end="200:33"><literal type="char" pos:start="200:31" pos:end="200:33">'p'</literal></expr></argument>, <argument pos:start="200:36" pos:end="200:38"><expr pos:start="200:36" pos:end="200:38"><literal type="char" pos:start="200:36" pos:end="200:38">'a'</literal></expr></argument>, <argument pos:start="200:41" pos:end="200:43"><expr pos:start="200:41" pos:end="200:43"><literal type="char" pos:start="200:41" pos:end="200:43">'d'</literal></expr></argument>, <argument pos:start="200:46" pos:end="200:48"><expr pos:start="200:46" pos:end="200:48"><literal type="char" pos:start="200:46" pos:end="200:48">'s'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="200:52" pos:end="206:13">{<block_content pos:start="202:17" pos:end="204:22">

                <expr_stmt pos:start="202:17" pos:end="202:40"><expr pos:start="202:17" pos:end="202:39"><call pos:start="202:17" pos:end="202:39"><name pos:start="202:17" pos:end="202:25">avio_skip</name><argument_list pos:start="202:26" pos:end="202:39">(<argument pos:start="202:27" pos:end="202:28"><expr pos:start="202:27" pos:end="202:28"><name pos:start="202:27" pos:end="202:28">pb</name></expr></argument>, <argument pos:start="202:31" pos:end="202:38"><expr pos:start="202:31" pos:end="202:38"><name pos:start="202:31" pos:end="202:34">size</name> <operator pos:start="202:36" pos:end="202:36">-</operator> <literal type="number" pos:start="202:38" pos:end="202:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="204:17" pos:end="204:22">break;</break>

            </block_content>}</block></if> <else pos:start="206:15" pos:end="1148:13">else <block pos:start="206:20" pos:end="1148:13">{<block_content pos:start="208:17" pos:end="1148:13">

                <expr_stmt pos:start="208:17" pos:end="208:31"><expr pos:start="208:17" pos:end="208:30"><name pos:start="208:17" pos:end="208:28">stream_index</name><operator pos:start="208:29" pos:end="208:30">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="210:17" pos:end="210:50"><expr pos:start="210:17" pos:end="210:49"><name pos:start="210:17" pos:end="210:18">st</name> <operator pos:start="210:20" pos:end="210:20">=</operator> <call pos:start="210:22" pos:end="210:49"><name pos:start="210:22" pos:end="210:40">avformat_new_stream</name><argument_list pos:start="210:41" pos:end="210:49">(<argument pos:start="210:42" pos:end="210:42"><expr pos:start="210:42" pos:end="210:42"><name pos:start="210:42" pos:end="210:42">s</name></expr></argument>, <argument pos:start="210:45" pos:end="210:48"><expr pos:start="210:45" pos:end="210:48"><name pos:start="210:45" pos:end="210:48">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="212:17" pos:end="214:30"><if pos:start="212:17" pos:end="214:30">if <condition pos:start="212:20" pos:end="212:24">(<expr pos:start="212:21" pos:end="212:23"><operator pos:start="212:21" pos:end="212:21">!</operator><name pos:start="212:22" pos:end="212:23">st</name></expr>)</condition><block type="pseudo" pos:start="214:21" pos:end="214:30"><block_content pos:start="214:21" pos:end="214:30">

                    <goto pos:start="214:21" pos:end="214:30">goto <name pos:start="214:26" pos:end="214:29">fail</name>;</goto></block_content></block></if></if_stmt>



                <expr_stmt pos:start="218:17" pos:end="218:38"><expr pos:start="218:17" pos:end="218:37"><name pos:start="218:17" pos:end="218:22"><name pos:start="218:17" pos:end="218:18">st</name><operator pos:start="218:19" pos:end="218:20">-&gt;</operator><name pos:start="218:21" pos:end="218:22">id</name></name> <operator pos:start="218:24" pos:end="218:24">=</operator> <name pos:start="218:26" pos:end="218:37">stream_index</name></expr>;</expr_stmt>

                <expr_stmt pos:start="220:17" pos:end="220:55"><expr pos:start="220:17" pos:end="220:54"><name pos:start="220:17" pos:end="220:19">ast</name>    <operator pos:start="220:24" pos:end="220:24">=</operator> <call pos:start="220:26" pos:end="220:54"><name pos:start="220:26" pos:end="220:35">av_mallocz</name><argument_list pos:start="220:36" pos:end="220:54">(<argument pos:start="220:37" pos:end="220:53"><expr pos:start="220:37" pos:end="220:53"><sizeof pos:start="220:37" pos:end="220:53">sizeof<argument_list pos:start="220:43" pos:end="220:53">(<argument pos:start="220:44" pos:end="220:52"><expr pos:start="220:44" pos:end="220:52"><name pos:start="220:44" pos:end="220:52">AVIStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="222:17" pos:end="224:30"><if pos:start="222:17" pos:end="224:30">if <condition pos:start="222:20" pos:end="222:25">(<expr pos:start="222:21" pos:end="222:24"><operator pos:start="222:21" pos:end="222:21">!</operator><name pos:start="222:22" pos:end="222:24">ast</name></expr>)</condition><block type="pseudo" pos:start="224:21" pos:end="224:30"><block_content pos:start="224:21" pos:end="224:30">

                    <goto pos:start="224:21" pos:end="224:30">goto <name pos:start="224:26" pos:end="224:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="226:17" pos:end="226:36"><expr pos:start="226:17" pos:end="226:35"><name pos:start="226:17" pos:end="226:29"><name pos:start="226:17" pos:end="226:18">st</name><operator pos:start="226:19" pos:end="226:20">-&gt;</operator><name pos:start="226:21" pos:end="226:29">priv_data</name></name> <operator pos:start="226:31" pos:end="226:31">=</operator> <name pos:start="226:33" pos:end="226:35">ast</name></expr>;</expr_stmt>


            <if_stmt pos:start="229:13" pos:end="233:64"><if pos:start="229:13" pos:end="233:64">if <condition pos:start="229:16" pos:end="229:32">(<expr pos:start="229:17" pos:end="229:31"><name pos:start="229:17" pos:end="229:31">amv_file_format</name></expr>)</condition><block type="pseudo" pos:start="231:17" pos:end="233:64"><block_content pos:start="231:17" pos:end="233:64">

                <expr_stmt pos:start="231:17" pos:end="233:64"><expr pos:start="231:17" pos:end="233:63"><name pos:start="231:17" pos:end="231:20">tag1</name> <operator pos:start="231:22" pos:end="231:22">=</operator> <ternary pos:start="231:24" pos:end="233:63"><condition pos:start="231:24" pos:end="231:37"><expr pos:start="231:24" pos:end="231:35"><name pos:start="231:24" pos:end="231:35">stream_index</name></expr> ?</condition><then pos:start="231:39" pos:end="231:63"> <expr pos:start="231:39" pos:end="231:63"><call pos:start="231:39" pos:end="231:63"><name pos:start="231:39" pos:end="231:43">MKTAG</name><argument_list pos:start="231:44" pos:end="231:63">(<argument pos:start="231:45" pos:end="231:47"><expr pos:start="231:45" pos:end="231:47"><literal type="char" pos:start="231:45" pos:end="231:47">'a'</literal></expr></argument>, <argument pos:start="231:50" pos:end="231:52"><expr pos:start="231:50" pos:end="231:52"><literal type="char" pos:start="231:50" pos:end="231:52">'u'</literal></expr></argument>, <argument pos:start="231:55" pos:end="231:57"><expr pos:start="231:55" pos:end="231:57"><literal type="char" pos:start="231:55" pos:end="231:57">'d'</literal></expr></argument>, <argument pos:start="231:60" pos:end="231:62"><expr pos:start="231:60" pos:end="231:62"><literal type="char" pos:start="231:60" pos:end="231:62">'s'</literal></expr></argument>)</argument_list></call></expr>

                                    </then><else pos:start="233:37" pos:end="233:63">: <expr pos:start="233:39" pos:end="233:63"><call pos:start="233:39" pos:end="233:63"><name pos:start="233:39" pos:end="233:43">MKTAG</name><argument_list pos:start="233:44" pos:end="233:63">(<argument pos:start="233:45" pos:end="233:47"><expr pos:start="233:45" pos:end="233:47"><literal type="char" pos:start="233:45" pos:end="233:47">'v'</literal></expr></argument>, <argument pos:start="233:50" pos:end="233:52"><expr pos:start="233:50" pos:end="233:52"><literal type="char" pos:start="233:50" pos:end="233:52">'i'</literal></expr></argument>, <argument pos:start="233:55" pos:end="233:57"><expr pos:start="233:55" pos:end="233:57"><literal type="char" pos:start="233:55" pos:end="233:57">'d'</literal></expr></argument>, <argument pos:start="233:60" pos:end="233:62"><expr pos:start="233:60" pos:end="233:62"><literal type="char" pos:start="233:60" pos:end="233:62">'s'</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="237:13" pos:end="237:40"><expr pos:start="237:13" pos:end="237:39"><call pos:start="237:13" pos:end="237:39"><name pos:start="237:13" pos:end="237:21">print_tag</name><argument_list pos:start="237:22" pos:end="237:39">(<argument pos:start="237:23" pos:end="237:28"><expr pos:start="237:23" pos:end="237:28"><literal type="string" pos:start="237:23" pos:end="237:28">"strh"</literal></expr></argument>, <argument pos:start="237:31" pos:end="237:34"><expr pos:start="237:31" pos:end="237:34"><name pos:start="237:31" pos:end="237:34">tag1</name></expr></argument>, <argument pos:start="237:37" pos:end="237:38"><expr pos:start="237:37" pos:end="237:38"><operator pos:start="237:37" pos:end="237:37">-</operator><literal type="number" pos:start="237:38" pos:end="237:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="241:13" pos:end="1148:13"><if pos:start="241:13" pos:end="1148:13">if <condition pos:start="241:16" pos:end="243:50">(<expr pos:start="241:17" pos:end="243:49"><name pos:start="241:17" pos:end="241:20">tag1</name> <operator pos:start="241:22" pos:end="241:23">==</operator> <call pos:start="241:25" pos:end="241:49"><name pos:start="241:25" pos:end="241:29">MKTAG</name><argument_list pos:start="241:30" pos:end="241:49">(<argument pos:start="241:31" pos:end="241:33"><expr pos:start="241:31" pos:end="241:33"><literal type="char" pos:start="241:31" pos:end="241:33">'i'</literal></expr></argument>, <argument pos:start="241:36" pos:end="241:38"><expr pos:start="241:36" pos:end="241:38"><literal type="char" pos:start="241:36" pos:end="241:38">'a'</literal></expr></argument>, <argument pos:start="241:41" pos:end="241:43"><expr pos:start="241:41" pos:end="241:43"><literal type="char" pos:start="241:41" pos:end="241:43">'v'</literal></expr></argument>, <argument pos:start="241:46" pos:end="241:48"><expr pos:start="241:46" pos:end="241:48"><literal type="char" pos:start="241:46" pos:end="241:48">'s'</literal></expr></argument>)</argument_list></call> <operator pos:start="241:51" pos:end="241:52">||</operator>

                <name pos:start="243:17" pos:end="243:20">tag1</name> <operator pos:start="243:22" pos:end="243:23">==</operator> <call pos:start="243:25" pos:end="243:49"><name pos:start="243:25" pos:end="243:29">MKTAG</name><argument_list pos:start="243:30" pos:end="243:49">(<argument pos:start="243:31" pos:end="243:33"><expr pos:start="243:31" pos:end="243:33"><literal type="char" pos:start="243:31" pos:end="243:33">'i'</literal></expr></argument>, <argument pos:start="243:36" pos:end="243:38"><expr pos:start="243:36" pos:end="243:38"><literal type="char" pos:start="243:36" pos:end="243:38">'v'</literal></expr></argument>, <argument pos:start="243:41" pos:end="243:43"><expr pos:start="243:41" pos:end="243:43"><literal type="char" pos:start="243:41" pos:end="243:43">'a'</literal></expr></argument>, <argument pos:start="243:46" pos:end="243:48"><expr pos:start="243:46" pos:end="243:48"><literal type="char" pos:start="243:46" pos:end="243:48">'s'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="243:52" pos:end="1148:13">{<block_content pos:start="245:17" pos:end="1148:13">

                <decl_stmt pos:start="245:17" pos:end="245:31"><decl pos:start="245:17" pos:end="245:30"><type pos:start="245:17" pos:end="245:23"><name pos:start="245:17" pos:end="245:23">int64_t</name></type> <name pos:start="245:25" pos:end="245:30">dv_dur</name></decl>;</decl_stmt>



                <comment type="block" pos:start="249:17" pos:end="251:68">/* After some consideration -- I don't think we

                 * have to support anything but DV in type1 AVIs. */</comment>

                <if_stmt pos:start="253:17" pos:end="255:30"><if pos:start="253:17" pos:end="255:30">if <condition pos:start="253:20" pos:end="253:39">(<expr pos:start="253:21" pos:end="253:38"><name pos:start="253:21" pos:end="253:33"><name pos:start="253:21" pos:end="253:21">s</name><operator pos:start="253:22" pos:end="253:23">-&gt;</operator><name pos:start="253:24" pos:end="253:33">nb_streams</name></name> <operator pos:start="253:35" pos:end="253:36">!=</operator> <literal type="number" pos:start="253:38" pos:end="253:38">1</literal></expr>)</condition><block type="pseudo" pos:start="255:21" pos:end="255:30"><block_content pos:start="255:21" pos:end="255:30">

                    <goto pos:start="255:21" pos:end="255:30">goto <name pos:start="255:26" pos:end="255:29">fail</name>;</goto></block_content></block></if></if_stmt>



                <if_stmt pos:start="259:17" pos:end="265:30"><if pos:start="259:17" pos:end="265:30">if <condition pos:start="259:20" pos:end="263:57">(<expr pos:start="259:21" pos:end="263:56"><name pos:start="259:21" pos:end="259:27">handler</name> <operator pos:start="259:29" pos:end="259:30">!=</operator> <call pos:start="259:32" pos:end="259:56"><name pos:start="259:32" pos:end="259:36">MKTAG</name><argument_list pos:start="259:37" pos:end="259:56">(<argument pos:start="259:38" pos:end="259:40"><expr pos:start="259:38" pos:end="259:40"><literal type="char" pos:start="259:38" pos:end="259:40">'d'</literal></expr></argument>, <argument pos:start="259:43" pos:end="259:45"><expr pos:start="259:43" pos:end="259:45"><literal type="char" pos:start="259:43" pos:end="259:45">'v'</literal></expr></argument>, <argument pos:start="259:48" pos:end="259:50"><expr pos:start="259:48" pos:end="259:50"><literal type="char" pos:start="259:48" pos:end="259:50">'s'</literal></expr></argument>, <argument pos:start="259:53" pos:end="259:55"><expr pos:start="259:53" pos:end="259:55"><literal type="char" pos:start="259:53" pos:end="259:55">'d'</literal></expr></argument>)</argument_list></call> <operator pos:start="259:58" pos:end="259:59">&amp;&amp;</operator>

                    <name pos:start="261:21" pos:end="261:27">handler</name> <operator pos:start="261:29" pos:end="261:30">!=</operator> <call pos:start="261:32" pos:end="261:56"><name pos:start="261:32" pos:end="261:36">MKTAG</name><argument_list pos:start="261:37" pos:end="261:56">(<argument pos:start="261:38" pos:end="261:40"><expr pos:start="261:38" pos:end="261:40"><literal type="char" pos:start="261:38" pos:end="261:40">'d'</literal></expr></argument>, <argument pos:start="261:43" pos:end="261:45"><expr pos:start="261:43" pos:end="261:45"><literal type="char" pos:start="261:43" pos:end="261:45">'v'</literal></expr></argument>, <argument pos:start="261:48" pos:end="261:50"><expr pos:start="261:48" pos:end="261:50"><literal type="char" pos:start="261:48" pos:end="261:50">'h'</literal></expr></argument>, <argument pos:start="261:53" pos:end="261:55"><expr pos:start="261:53" pos:end="261:55"><literal type="char" pos:start="261:53" pos:end="261:55">'d'</literal></expr></argument>)</argument_list></call> <operator pos:start="261:58" pos:end="261:59">&amp;&amp;</operator>

                    <name pos:start="263:21" pos:end="263:27">handler</name> <operator pos:start="263:29" pos:end="263:30">!=</operator> <call pos:start="263:32" pos:end="263:56"><name pos:start="263:32" pos:end="263:36">MKTAG</name><argument_list pos:start="263:37" pos:end="263:56">(<argument pos:start="263:38" pos:end="263:40"><expr pos:start="263:38" pos:end="263:40"><literal type="char" pos:start="263:38" pos:end="263:40">'d'</literal></expr></argument>, <argument pos:start="263:43" pos:end="263:45"><expr pos:start="263:43" pos:end="263:45"><literal type="char" pos:start="263:43" pos:end="263:45">'v'</literal></expr></argument>, <argument pos:start="263:48" pos:end="263:50"><expr pos:start="263:48" pos:end="263:50"><literal type="char" pos:start="263:48" pos:end="263:50">'s'</literal></expr></argument>, <argument pos:start="263:53" pos:end="263:55"><expr pos:start="263:53" pos:end="263:55"><literal type="char" pos:start="263:53" pos:end="263:55">'l'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="265:21" pos:end="265:30"><block_content pos:start="265:21" pos:end="265:30">

                    <goto pos:start="265:21" pos:end="265:30">goto <name pos:start="265:26" pos:end="265:29">fail</name>;</goto></block_content></block></if></if_stmt>



                <expr_stmt pos:start="269:17" pos:end="269:47"><expr pos:start="269:17" pos:end="269:46"><name pos:start="269:17" pos:end="269:19">ast</name> <operator pos:start="269:21" pos:end="269:21">=</operator> <name pos:start="269:23" pos:end="269:35"><name pos:start="269:23" pos:end="269:23">s</name><operator pos:start="269:24" pos:end="269:25">-&gt;</operator><name pos:start="269:26" pos:end="269:32">streams</name><index pos:start="269:33" pos:end="269:35">[<expr pos:start="269:34" pos:end="269:34"><literal type="number" pos:start="269:34" pos:end="269:34">0</literal></expr>]</index></name><operator pos:start="269:36" pos:end="269:37">-&gt;</operator><name pos:start="269:38" pos:end="269:46">priv_data</name></expr>;</expr_stmt>

                <expr_stmt pos:start="271:17" pos:end="271:62"><expr pos:start="271:17" pos:end="271:61"><call pos:start="271:17" pos:end="271:61"><name pos:start="271:17" pos:end="271:24">av_freep</name><argument_list pos:start="271:25" pos:end="271:61">(<argument pos:start="271:26" pos:end="271:60"><expr pos:start="271:26" pos:end="271:60"><operator pos:start="271:26" pos:end="271:26">&amp;</operator><name pos:start="271:27" pos:end="271:39"><name pos:start="271:27" pos:end="271:27">s</name><operator pos:start="271:28" pos:end="271:29">-&gt;</operator><name pos:start="271:30" pos:end="271:36">streams</name><index pos:start="271:37" pos:end="271:39">[<expr pos:start="271:38" pos:end="271:38"><literal type="number" pos:start="271:38" pos:end="271:38">0</literal></expr>]</index></name><operator pos:start="271:40" pos:end="271:41">-&gt;</operator><name pos:start="271:42" pos:end="271:60"><name pos:start="271:42" pos:end="271:49">codecpar</name><operator pos:start="271:50" pos:end="271:51">-&gt;</operator><name pos:start="271:52" pos:end="271:60">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="273:17" pos:end="276:0"><expr pos:start="273:17" pos:end="273:50"><call pos:start="273:17" pos:end="273:50"><name pos:start="273:17" pos:end="273:24">av_freep</name><argument_list pos:start="273:25" pos:end="273:50">(<argument pos:start="273:26" pos:end="273:49"><expr pos:start="273:26" pos:end="273:49"><operator pos:start="273:26" pos:end="273:26">&amp;</operator><name pos:start="273:27" pos:end="273:39"><name pos:start="273:27" pos:end="273:27">s</name><operator pos:start="273:28" pos:end="273:29">-&gt;</operator><name pos:start="273:30" pos:end="273:36">streams</name><index pos:start="273:37" pos:end="273:39">[<expr pos:start="273:38" pos:end="273:38"><literal type="number" pos:start="273:38" pos:end="273:38">0</literal></expr>]</index></name><operator pos:start="273:40" pos:end="273:41">-&gt;</operator><name pos:start="273:42" pos:end="273:49">codecpar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="275:1" pos:end="275:21">#<cpp:directive pos:start="275:2" pos:end="275:3">if</cpp:directive> <expr pos:start="275:5" pos:end="275:21"><name pos:start="275:5" pos:end="275:21">FF_API_LAVF_AVCTX</name></expr></cpp:if>

<decl_stmt pos:start="277:1" pos:end="279:48"><decl pos:start="277:1" pos:end="279:47"><type pos:start="277:1" pos:end="277:31"><name pos:start="277:1" pos:end="277:31">FF_DISABLE_DEPRECATION_WARNINGS</name></type>

                <name pos:start="279:17" pos:end="279:24">av_freep</name><argument_list pos:start="279:25" pos:end="279:47">(<argument pos:start="279:26" pos:end="279:46"><expr pos:start="279:26" pos:end="279:46"><operator pos:start="279:26" pos:end="279:26">&amp;</operator><name pos:start="279:27" pos:end="279:39"><name pos:start="279:27" pos:end="279:27">s</name><operator pos:start="279:28" pos:end="279:29">-&gt;</operator><name pos:start="279:30" pos:end="279:36">streams</name><index pos:start="279:37" pos:end="279:39">[<expr pos:start="279:38" pos:end="279:38"><literal type="number" pos:start="279:38" pos:end="279:38">0</literal></expr>]</index></name><operator pos:start="279:40" pos:end="279:41">-&gt;</operator><name pos:start="279:42" pos:end="279:46">codec</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<macro pos:start="281:1" pos:end="284:0"><name pos:start="281:1" pos:end="284:0">FF_ENABLE_DEPRECATION_WARNINGS</name></macro>

<cpp:endif pos:start="283:1" pos:end="283:6">#<cpp:directive pos:start="283:2" pos:end="283:6">endif</cpp:directive></cpp:endif>

                <if_stmt pos:start="285:17" pos:end="287:67"><if pos:start="285:17" pos:end="287:67">if <condition pos:start="285:20" pos:end="285:40">(<expr pos:start="285:21" pos:end="285:39"><name pos:start="285:21" pos:end="285:33"><name pos:start="285:21" pos:end="285:21">s</name><operator pos:start="285:22" pos:end="285:23">-&gt;</operator><name pos:start="285:24" pos:end="285:30">streams</name><index pos:start="285:31" pos:end="285:33">[<expr pos:start="285:32" pos:end="285:32"><literal type="number" pos:start="285:32" pos:end="285:32">0</literal></expr>]</index></name><operator pos:start="285:34" pos:end="285:35">-&gt;</operator><name pos:start="285:36" pos:end="285:39">info</name></expr>)</condition><block type="pseudo" pos:start="287:21" pos:end="287:67"><block_content pos:start="287:21" pos:end="287:67">

                    <expr_stmt pos:start="287:21" pos:end="287:67"><expr pos:start="287:21" pos:end="287:66"><call pos:start="287:21" pos:end="287:66"><name pos:start="287:21" pos:end="287:28">av_freep</name><argument_list pos:start="287:29" pos:end="287:66">(<argument pos:start="287:30" pos:end="287:65"><expr pos:start="287:30" pos:end="287:65"><operator pos:start="287:30" pos:end="287:30">&amp;</operator><name pos:start="287:31" pos:end="287:43"><name pos:start="287:31" pos:end="287:31">s</name><operator pos:start="287:32" pos:end="287:33">-&gt;</operator><name pos:start="287:34" pos:end="287:40">streams</name><index pos:start="287:41" pos:end="287:43">[<expr pos:start="287:42" pos:end="287:42"><literal type="number" pos:start="287:42" pos:end="287:42">0</literal></expr>]</index></name><operator pos:start="287:44" pos:end="287:45">-&gt;</operator><name pos:start="287:46" pos:end="287:65"><name pos:start="287:46" pos:end="287:49">info</name><operator pos:start="287:50" pos:end="287:51">-&gt;</operator><name pos:start="287:52" pos:end="287:65">duration_error</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:47"><expr pos:start="289:17" pos:end="289:46"><call pos:start="289:17" pos:end="289:46"><name pos:start="289:17" pos:end="289:24">av_freep</name><argument_list pos:start="289:25" pos:end="289:46">(<argument pos:start="289:26" pos:end="289:45"><expr pos:start="289:26" pos:end="289:45"><operator pos:start="289:26" pos:end="289:26">&amp;</operator><name pos:start="289:27" pos:end="289:39"><name pos:start="289:27" pos:end="289:27">s</name><operator pos:start="289:28" pos:end="289:29">-&gt;</operator><name pos:start="289:30" pos:end="289:36">streams</name><index pos:start="289:37" pos:end="289:39">[<expr pos:start="289:38" pos:end="289:38"><literal type="number" pos:start="289:38" pos:end="289:38">0</literal></expr>]</index></name><operator pos:start="289:40" pos:end="289:41">-&gt;</operator><name pos:start="289:42" pos:end="289:45">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="291:17" pos:end="293:62"><if pos:start="291:17" pos:end="293:62">if <condition pos:start="291:20" pos:end="291:44">(<expr pos:start="291:21" pos:end="291:43"><name pos:start="291:21" pos:end="291:33"><name pos:start="291:21" pos:end="291:21">s</name><operator pos:start="291:22" pos:end="291:23">-&gt;</operator><name pos:start="291:24" pos:end="291:30">streams</name><index pos:start="291:31" pos:end="291:33">[<expr pos:start="291:32" pos:end="291:32"><literal type="number" pos:start="291:32" pos:end="291:32">0</literal></expr>]</index></name><operator pos:start="291:34" pos:end="291:35">-&gt;</operator><name pos:start="291:36" pos:end="291:43">internal</name></expr>)</condition><block type="pseudo" pos:start="293:21" pos:end="293:62"><block_content pos:start="293:21" pos:end="293:62">

                    <expr_stmt pos:start="293:21" pos:end="293:62"><expr pos:start="293:21" pos:end="293:61"><call pos:start="293:21" pos:end="293:61"><name pos:start="293:21" pos:end="293:28">av_freep</name><argument_list pos:start="293:29" pos:end="293:61">(<argument pos:start="293:30" pos:end="293:60"><expr pos:start="293:30" pos:end="293:60"><operator pos:start="293:30" pos:end="293:30">&amp;</operator><name pos:start="293:31" pos:end="293:43"><name pos:start="293:31" pos:end="293:31">s</name><operator pos:start="293:32" pos:end="293:33">-&gt;</operator><name pos:start="293:34" pos:end="293:40">streams</name><index pos:start="293:41" pos:end="293:43">[<expr pos:start="293:42" pos:end="293:42"><literal type="number" pos:start="293:42" pos:end="293:42">0</literal></expr>]</index></name><operator pos:start="293:44" pos:end="293:45">-&gt;</operator><name pos:start="293:46" pos:end="293:60"><name pos:start="293:46" pos:end="293:53">internal</name><operator pos:start="293:54" pos:end="293:55">-&gt;</operator><name pos:start="293:56" pos:end="293:60">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="295:17" pos:end="295:51"><expr pos:start="295:17" pos:end="295:50"><call pos:start="295:17" pos:end="295:50"><name pos:start="295:17" pos:end="295:24">av_freep</name><argument_list pos:start="295:25" pos:end="295:50">(<argument pos:start="295:26" pos:end="295:49"><expr pos:start="295:26" pos:end="295:49"><operator pos:start="295:26" pos:end="295:26">&amp;</operator><name pos:start="295:27" pos:end="295:39"><name pos:start="295:27" pos:end="295:27">s</name><operator pos:start="295:28" pos:end="295:29">-&gt;</operator><name pos:start="295:30" pos:end="295:36">streams</name><index pos:start="295:37" pos:end="295:39">[<expr pos:start="295:38" pos:end="295:38"><literal type="number" pos:start="295:38" pos:end="295:38">0</literal></expr>]</index></name><operator pos:start="295:40" pos:end="295:41">-&gt;</operator><name pos:start="295:42" pos:end="295:49">internal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="297:17" pos:end="297:41"><expr pos:start="297:17" pos:end="297:40"><call pos:start="297:17" pos:end="297:40"><name pos:start="297:17" pos:end="297:24">av_freep</name><argument_list pos:start="297:25" pos:end="297:40">(<argument pos:start="297:26" pos:end="297:39"><expr pos:start="297:26" pos:end="297:39"><operator pos:start="297:26" pos:end="297:26">&amp;</operator><name pos:start="297:27" pos:end="297:39"><name pos:start="297:27" pos:end="297:27">s</name><operator pos:start="297:28" pos:end="297:29">-&gt;</operator><name pos:start="297:30" pos:end="297:36">streams</name><index pos:start="297:37" pos:end="297:39">[<expr pos:start="297:38" pos:end="297:38"><literal type="number" pos:start="297:38" pos:end="297:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="299:17" pos:end="299:34"><expr pos:start="299:17" pos:end="299:33"><name pos:start="299:17" pos:end="299:29"><name pos:start="299:17" pos:end="299:17">s</name><operator pos:start="299:18" pos:end="299:19">-&gt;</operator><name pos:start="299:20" pos:end="299:29">nb_streams</name></name> <operator pos:start="299:31" pos:end="299:31">=</operator> <literal type="number" pos:start="299:33" pos:end="299:33">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="301:17" pos:end="311:30"><if pos:start="301:17" pos:end="309:17">if <condition pos:start="301:20" pos:end="301:38">(<expr pos:start="301:21" pos:end="301:37"><name pos:start="301:21" pos:end="301:37">CONFIG_DV_DEMUXER</name></expr>)</condition> <block pos:start="301:40" pos:end="309:17">{<block_content pos:start="303:21" pos:end="307:34">

                    <expr_stmt pos:start="303:21" pos:end="303:60"><expr pos:start="303:21" pos:end="303:59"><name pos:start="303:21" pos:end="303:33"><name pos:start="303:21" pos:end="303:23">avi</name><operator pos:start="303:24" pos:end="303:25">-&gt;</operator><name pos:start="303:26" pos:end="303:33">dv_demux</name></name> <operator pos:start="303:35" pos:end="303:35">=</operator> <call pos:start="303:37" pos:end="303:59"><name pos:start="303:37" pos:end="303:56">avpriv_dv_init_demux</name><argument_list pos:start="303:57" pos:end="303:59">(<argument pos:start="303:58" pos:end="303:58"><expr pos:start="303:58" pos:end="303:58"><name pos:start="303:58" pos:end="303:58">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="305:21" pos:end="307:34"><if pos:start="305:21" pos:end="307:34">if <condition pos:start="305:24" pos:end="305:39">(<expr pos:start="305:25" pos:end="305:38"><operator pos:start="305:25" pos:end="305:25">!</operator><name pos:start="305:26" pos:end="305:38"><name pos:start="305:26" pos:end="305:28">avi</name><operator pos:start="305:29" pos:end="305:30">-&gt;</operator><name pos:start="305:31" pos:end="305:38">dv_demux</name></name></expr>)</condition><block type="pseudo" pos:start="307:25" pos:end="307:34"><block_content pos:start="307:25" pos:end="307:34">

                        <goto pos:start="307:25" pos:end="307:34">goto <name pos:start="307:30" pos:end="307:33">fail</name>;</goto></block_content></block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="309:19" pos:end="311:30">else<block type="pseudo" pos:start="311:21" pos:end="311:30"><block_content pos:start="311:21" pos:end="311:30">

                    <goto pos:start="311:21" pos:end="311:30">goto <name pos:start="311:26" pos:end="311:29">fail</name>;</goto></block_content></block></else></if_stmt>

                <expr_stmt pos:start="313:17" pos:end="313:47"><expr pos:start="313:17" pos:end="313:46"><name pos:start="313:17" pos:end="313:29"><name pos:start="313:17" pos:end="313:17">s</name><operator pos:start="313:18" pos:end="313:19">-&gt;</operator><name pos:start="313:20" pos:end="313:26">streams</name><index pos:start="313:27" pos:end="313:29">[<expr pos:start="313:28" pos:end="313:28"><literal type="number" pos:start="313:28" pos:end="313:28">0</literal></expr>]</index></name><operator pos:start="313:30" pos:end="313:31">-&gt;</operator><name pos:start="313:32" pos:end="313:40">priv_data</name> <operator pos:start="313:42" pos:end="313:42">=</operator> <name pos:start="313:44" pos:end="313:46">ast</name></expr>;</expr_stmt>

                <expr_stmt pos:start="315:17" pos:end="315:37"><expr pos:start="315:17" pos:end="315:36"><call pos:start="315:17" pos:end="315:36"><name pos:start="315:17" pos:end="315:25">avio_skip</name><argument_list pos:start="315:26" pos:end="315:36">(<argument pos:start="315:27" pos:end="315:28"><expr pos:start="315:27" pos:end="315:28"><name pos:start="315:27" pos:end="315:28">pb</name></expr></argument>, <argument pos:start="315:31" pos:end="315:35"><expr pos:start="315:31" pos:end="315:35"><literal type="number" pos:start="315:31" pos:end="315:31">3</literal> <operator pos:start="315:33" pos:end="315:33">*</operator> <literal type="number" pos:start="315:35" pos:end="315:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="317:17" pos:end="317:43"><expr pos:start="317:17" pos:end="317:42"><name pos:start="317:17" pos:end="317:26"><name pos:start="317:17" pos:end="317:19">ast</name><operator pos:start="317:20" pos:end="317:21">-&gt;</operator><name pos:start="317:22" pos:end="317:26">scale</name></name> <operator pos:start="317:28" pos:end="317:28">=</operator> <call pos:start="317:30" pos:end="317:42"><name pos:start="317:30" pos:end="317:38">avio_rl32</name><argument_list pos:start="317:39" pos:end="317:42">(<argument pos:start="317:40" pos:end="317:41"><expr pos:start="317:40" pos:end="317:41"><name pos:start="317:40" pos:end="317:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="319:17" pos:end="319:43"><expr pos:start="319:17" pos:end="319:42"><name pos:start="319:17" pos:end="319:25"><name pos:start="319:17" pos:end="319:19">ast</name><operator pos:start="319:20" pos:end="319:21">-&gt;</operator><name pos:start="319:22" pos:end="319:25">rate</name></name>  <operator pos:start="319:28" pos:end="319:28">=</operator> <call pos:start="319:30" pos:end="319:42"><name pos:start="319:30" pos:end="319:38">avio_rl32</name><argument_list pos:start="319:39" pos:end="319:42">(<argument pos:start="319:40" pos:end="319:41"><expr pos:start="319:40" pos:end="319:41"><name pos:start="319:40" pos:end="319:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="321:17" pos:end="321:33"><expr pos:start="321:17" pos:end="321:32"><call pos:start="321:17" pos:end="321:32"><name pos:start="321:17" pos:end="321:25">avio_skip</name><argument_list pos:start="321:26" pos:end="321:32">(<argument pos:start="321:27" pos:end="321:28"><expr pos:start="321:27" pos:end="321:28"><name pos:start="321:27" pos:end="321:28">pb</name></expr></argument>, <argument pos:start="321:31" pos:end="321:31"><expr pos:start="321:31" pos:end="321:31"><literal type="number" pos:start="321:31" pos:end="321:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="321:36" pos:end="321:51">/* start time */</comment>



                <expr_stmt pos:start="325:17" pos:end="325:39"><expr pos:start="325:17" pos:end="325:38"><name pos:start="325:17" pos:end="325:22">dv_dur</name> <operator pos:start="325:24" pos:end="325:24">=</operator> <call pos:start="325:26" pos:end="325:38"><name pos:start="325:26" pos:end="325:34">avio_rl32</name><argument_list pos:start="325:35" pos:end="325:38">(<argument pos:start="325:36" pos:end="325:37"><expr pos:start="325:36" pos:end="325:37"><name pos:start="325:36" pos:end="325:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="327:17" pos:end="1148:13"><if pos:start="327:17" pos:end="1148:13">if <condition pos:start="327:20" pos:end="327:66">(<expr pos:start="327:21" pos:end="327:65"><name pos:start="327:21" pos:end="327:30"><name pos:start="327:21" pos:end="327:23">ast</name><operator pos:start="327:24" pos:end="327:25">-&gt;</operator><name pos:start="327:26" pos:end="327:30">scale</name></name> <operator pos:start="327:32" pos:end="327:32">&gt;</operator> <literal type="number" pos:start="327:34" pos:end="327:34">0</literal> <operator pos:start="327:36" pos:end="327:37">&amp;&amp;</operator> <name pos:start="327:39" pos:end="327:47"><name pos:start="327:39" pos:end="327:41">ast</name><operator pos:start="327:42" pos:end="327:43">-&gt;</operator><name pos:start="327:44" pos:end="327:47">rate</name></name> <operator pos:start="327:49" pos:end="327:49">&gt;</operator> <literal type="number" pos:start="327:51" pos:end="327:51">0</literal> <operator pos:start="327:53" pos:end="327:54">&amp;&amp;</operator> <name pos:start="327:56" pos:end="327:61">dv_dur</name> <operator pos:start="327:63" pos:end="327:63">&gt;</operator> <literal type="number" pos:start="327:65" pos:end="327:65">0</literal></expr>)</condition> <block pos:start="327:68" pos:end="1148:13">{<block_content pos:start="329:21" pos:end="1148:13">

                    <expr_stmt pos:start="329:21" pos:end="329:47"><expr pos:start="329:21" pos:end="329:46"><name pos:start="329:21" pos:end="329:26">dv_dur</name>     <operator pos:start="329:32" pos:end="329:33">*=</operator> <name pos:start="329:35" pos:end="329:46">AV_TIME_BASE</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="331:21" pos:end="331:76"><expr pos:start="331:21" pos:end="331:75"><name pos:start="331:21" pos:end="331:31"><name pos:start="331:21" pos:end="331:21">s</name><operator pos:start="331:22" pos:end="331:23">-&gt;</operator><name pos:start="331:24" pos:end="331:31">duration</name></name> <operator pos:start="331:33" pos:end="331:33">=</operator> <call pos:start="331:35" pos:end="331:75"><name pos:start="331:35" pos:end="331:44">av_rescale</name><argument_list pos:start="331:45" pos:end="331:75">(<argument pos:start="331:46" pos:end="331:51"><expr pos:start="331:46" pos:end="331:51"><name pos:start="331:46" pos:end="331:51">dv_dur</name></expr></argument>, <argument pos:start="331:54" pos:end="331:63"><expr pos:start="331:54" pos:end="331:63"><name pos:start="331:54" pos:end="331:63"><name pos:start="331:54" pos:end="331:56">ast</name><operator pos:start="331:57" pos:end="331:58">-&gt;</operator><name pos:start="331:59" pos:end="331:63">scale</name></name></expr></argument>, <argument pos:start="331:66" pos:end="331:74"><expr pos:start="331:66" pos:end="331:74"><name pos:start="331:66" pos:end="331:74"><name pos:start="331:66" pos:end="331:68">ast</name><operator pos:start="331:69" pos:end="331:70">-&gt;</operator><name pos:start="331:71" pos:end="331:74">rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


                <comment type="block" pos:start="334:17" pos:end="336:57">/* else, leave duration alone; timing estimation in utils.c

                 * will make a guess based on bitrate. */</comment>



                <expr_stmt pos:start="340:17" pos:end="340:49"><expr pos:start="340:17" pos:end="340:48"><name pos:start="340:17" pos:end="340:28">stream_index</name> <operator pos:start="340:30" pos:end="340:30">=</operator> <name pos:start="340:32" pos:end="340:44"><name pos:start="340:32" pos:end="340:32">s</name><operator pos:start="340:33" pos:end="340:34">-&gt;</operator><name pos:start="340:35" pos:end="340:44">nb_streams</name></name> <operator pos:start="340:46" pos:end="340:46">-</operator> <literal type="number" pos:start="340:48" pos:end="340:48">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="342:17" pos:end="342:44"><expr pos:start="342:17" pos:end="342:43"><call pos:start="342:17" pos:end="342:43"><name pos:start="342:17" pos:end="342:25">avio_skip</name><argument_list pos:start="342:26" pos:end="342:43">(<argument pos:start="342:27" pos:end="342:28"><expr pos:start="342:27" pos:end="342:28"><name pos:start="342:27" pos:end="342:28">pb</name></expr></argument>, <argument pos:start="342:31" pos:end="342:42"><expr pos:start="342:31" pos:end="342:42"><name pos:start="342:31" pos:end="342:34">size</name> <operator pos:start="342:36" pos:end="342:36">-</operator> <literal type="number" pos:start="342:38" pos:end="342:38">9</literal> <operator pos:start="342:40" pos:end="342:40">*</operator> <literal type="number" pos:start="342:42" pos:end="342:42">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="344:17" pos:end="344:22">break;</break>




            <expr_stmt pos:start="349:13" pos:end="349:53"><expr pos:start="349:13" pos:end="349:52"><call pos:start="349:13" pos:end="349:52"><name pos:start="349:13" pos:end="349:22">av_assert0</name><argument_list pos:start="349:23" pos:end="349:52">(<argument pos:start="349:24" pos:end="349:51"><expr pos:start="349:24" pos:end="349:51"><name pos:start="349:24" pos:end="349:35">stream_index</name> <operator pos:start="349:37" pos:end="349:37">&lt;</operator> <name pos:start="349:39" pos:end="349:51"><name pos:start="349:39" pos:end="349:39">s</name><operator pos:start="349:40" pos:end="349:41">-&gt;</operator><name pos:start="349:42" pos:end="349:51">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:35"><expr pos:start="351:13" pos:end="351:34"><name pos:start="351:13" pos:end="351:24"><name pos:start="351:13" pos:end="351:15">ast</name><operator pos:start="351:16" pos:end="351:17">-&gt;</operator><name pos:start="351:18" pos:end="351:24">handler</name></name> <operator pos:start="351:26" pos:end="351:26">=</operator> <name pos:start="351:28" pos:end="351:34">handler</name></expr>;</expr_stmt>



            <expr_stmt pos:start="355:13" pos:end="355:26"><expr pos:start="355:13" pos:end="355:25"><call pos:start="355:13" pos:end="355:25"><name pos:start="355:13" pos:end="355:21">avio_rl32</name><argument_list pos:start="355:22" pos:end="355:25">(<argument pos:start="355:23" pos:end="355:24"><expr pos:start="355:23" pos:end="355:24"><name pos:start="355:23" pos:end="355:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="355:28" pos:end="355:38">/* flags */</comment>

            <expr_stmt pos:start="357:13" pos:end="357:26"><expr pos:start="357:13" pos:end="357:25"><call pos:start="357:13" pos:end="357:25"><name pos:start="357:13" pos:end="357:21">avio_rl16</name><argument_list pos:start="357:22" pos:end="357:25">(<argument pos:start="357:23" pos:end="357:24"><expr pos:start="357:23" pos:end="357:24"><name pos:start="357:23" pos:end="357:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="357:28" pos:end="357:41">/* priority */</comment>

            <expr_stmt pos:start="359:13" pos:end="359:26"><expr pos:start="359:13" pos:end="359:25"><call pos:start="359:13" pos:end="359:25"><name pos:start="359:13" pos:end="359:21">avio_rl16</name><argument_list pos:start="359:22" pos:end="359:25">(<argument pos:start="359:23" pos:end="359:24"><expr pos:start="359:23" pos:end="359:24"><name pos:start="359:23" pos:end="359:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="359:28" pos:end="359:41">/* language */</comment>

            <expr_stmt pos:start="361:13" pos:end="361:26"><expr pos:start="361:13" pos:end="361:25"><call pos:start="361:13" pos:end="361:25"><name pos:start="361:13" pos:end="361:21">avio_rl32</name><argument_list pos:start="361:22" pos:end="361:25">(<argument pos:start="361:23" pos:end="361:24"><expr pos:start="361:23" pos:end="361:24"><name pos:start="361:23" pos:end="361:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="361:28" pos:end="361:46">/* initial frame */</comment>

            <expr_stmt pos:start="363:13" pos:end="363:39"><expr pos:start="363:13" pos:end="363:38"><name pos:start="363:13" pos:end="363:22"><name pos:start="363:13" pos:end="363:15">ast</name><operator pos:start="363:16" pos:end="363:17">-&gt;</operator><name pos:start="363:18" pos:end="363:22">scale</name></name> <operator pos:start="363:24" pos:end="363:24">=</operator> <call pos:start="363:26" pos:end="363:38"><name pos:start="363:26" pos:end="363:34">avio_rl32</name><argument_list pos:start="363:35" pos:end="363:38">(<argument pos:start="363:36" pos:end="363:37"><expr pos:start="363:36" pos:end="363:37"><name pos:start="363:36" pos:end="363:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="365:13" pos:end="365:39"><expr pos:start="365:13" pos:end="365:38"><name pos:start="365:13" pos:end="365:21"><name pos:start="365:13" pos:end="365:15">ast</name><operator pos:start="365:16" pos:end="365:17">-&gt;</operator><name pos:start="365:18" pos:end="365:21">rate</name></name>  <operator pos:start="365:24" pos:end="365:24">=</operator> <call pos:start="365:26" pos:end="365:38"><name pos:start="365:26" pos:end="365:34">avio_rl32</name><argument_list pos:start="365:35" pos:end="365:38">(<argument pos:start="365:36" pos:end="365:37"><expr pos:start="365:36" pos:end="365:37"><name pos:start="365:36" pos:end="365:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="367:13" pos:end="1148:13"><if pos:start="367:13" pos:end="1148:13">if <condition pos:start="367:16" pos:end="367:43">(<expr pos:start="367:17" pos:end="367:42"><operator pos:start="367:17" pos:end="367:17">!</operator><operator pos:start="367:18" pos:end="367:18">(</operator><name pos:start="367:19" pos:end="367:28"><name pos:start="367:19" pos:end="367:21">ast</name><operator pos:start="367:22" pos:end="367:23">-&gt;</operator><name pos:start="367:24" pos:end="367:28">scale</name></name> <operator pos:start="367:30" pos:end="367:31">&amp;&amp;</operator> <name pos:start="367:33" pos:end="367:41"><name pos:start="367:33" pos:end="367:35">ast</name><operator pos:start="367:36" pos:end="367:37">-&gt;</operator><name pos:start="367:38" pos:end="367:41">rate</name></name><operator pos:start="367:42" pos:end="367:42">)</operator></expr>)</condition> <block pos:start="367:45" pos:end="1148:13">{<block_content pos:start="369:17" pos:end="1148:13">

                <expr_stmt pos:start="369:17" pos:end="377:34"><expr pos:start="369:17" pos:end="377:33"><call pos:start="369:17" pos:end="377:33"><name pos:start="369:17" pos:end="369:22">av_log</name><argument_list pos:start="369:23" pos:end="377:33">(<argument pos:start="369:24" pos:end="369:24"><expr pos:start="369:24" pos:end="369:24"><name pos:start="369:24" pos:end="369:24">s</name></expr></argument>, <argument pos:start="369:27" pos:end="369:40"><expr pos:start="369:27" pos:end="369:40"><name pos:start="369:27" pos:end="369:40">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="371:24" pos:end="373:77"><expr pos:start="371:24" pos:end="373:77"><literal type="string" pos:start="371:24" pos:end="371:40">"scale/rate is %"</literal><name pos:start="371:41" pos:end="371:46">PRIu32</name><literal type="string" pos:start="371:47" pos:end="371:50">"/%"</literal><name pos:start="371:51" pos:end="371:56">PRIu32</name><literal type="string" pos:start="371:57" pos:end="371:77">" which is invalid. "</literal>

                       <literal type="string" pos:start="373:24" pos:end="373:77">"(This file has been generated by broken software.)\n"</literal></expr></argument>,

                       <argument pos:start="375:24" pos:end="375:33"><expr pos:start="375:24" pos:end="375:33"><name pos:start="375:24" pos:end="375:33"><name pos:start="375:24" pos:end="375:26">ast</name><operator pos:start="375:27" pos:end="375:28">-&gt;</operator><name pos:start="375:29" pos:end="375:33">scale</name></name></expr></argument>,

                       <argument pos:start="377:24" pos:end="377:32"><expr pos:start="377:24" pos:end="377:32"><name pos:start="377:24" pos:end="377:32"><name pos:start="377:24" pos:end="377:26">ast</name><operator pos:start="377:27" pos:end="377:28">-&gt;</operator><name pos:start="377:29" pos:end="377:32">rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="379:17" pos:end="1148:13"><if pos:start="379:17" pos:end="385:17">if <condition pos:start="379:20" pos:end="379:33">(<expr pos:start="379:21" pos:end="379:32"><name pos:start="379:21" pos:end="379:32">frame_period</name></expr>)</condition> <block pos:start="379:35" pos:end="385:17">{<block_content pos:start="381:21" pos:end="383:46">

                    <expr_stmt pos:start="381:21" pos:end="381:41"><expr pos:start="381:21" pos:end="381:40"><name pos:start="381:21" pos:end="381:29"><name pos:start="381:21" pos:end="381:23">ast</name><operator pos:start="381:24" pos:end="381:25">-&gt;</operator><name pos:start="381:26" pos:end="381:29">rate</name></name>  <operator pos:start="381:32" pos:end="381:32">=</operator> <literal type="number" pos:start="381:34" pos:end="381:40">1000000</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="383:21" pos:end="383:46"><expr pos:start="383:21" pos:end="383:45"><name pos:start="383:21" pos:end="383:30"><name pos:start="383:21" pos:end="383:23">ast</name><operator pos:start="383:24" pos:end="383:25">-&gt;</operator><name pos:start="383:26" pos:end="383:30">scale</name></name> <operator pos:start="383:32" pos:end="383:32">=</operator> <name pos:start="383:34" pos:end="383:45">frame_period</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="385:19" pos:end="1148:13">else <block pos:start="385:24" pos:end="1148:13">{<block_content pos:start="387:21" pos:end="1148:13">

                    <expr_stmt pos:start="387:21" pos:end="387:36"><expr pos:start="387:21" pos:end="387:35"><name pos:start="387:21" pos:end="387:29"><name pos:start="387:21" pos:end="387:23">ast</name><operator pos:start="387:24" pos:end="387:25">-&gt;</operator><name pos:start="387:26" pos:end="387:29">rate</name></name>  <operator pos:start="387:32" pos:end="387:32">=</operator> <literal type="number" pos:start="387:34" pos:end="387:35">25</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="389:21" pos:end="389:35"><expr pos:start="389:21" pos:end="389:34"><name pos:start="389:21" pos:end="389:30"><name pos:start="389:21" pos:end="389:23">ast</name><operator pos:start="389:24" pos:end="389:25">-&gt;</operator><name pos:start="389:26" pos:end="389:30">scale</name></name> <operator pos:start="389:32" pos:end="389:32">=</operator> <literal type="number" pos:start="389:34" pos:end="389:34">1</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="393:13" pos:end="393:63"><expr pos:start="393:13" pos:end="393:62"><call pos:start="393:13" pos:end="393:62"><name pos:start="393:13" pos:end="393:31">avpriv_set_pts_info</name><argument_list pos:start="393:32" pos:end="393:62">(<argument pos:start="393:33" pos:end="393:34"><expr pos:start="393:33" pos:end="393:34"><name pos:start="393:33" pos:end="393:34">st</name></expr></argument>, <argument pos:start="393:37" pos:end="393:38"><expr pos:start="393:37" pos:end="393:38"><literal type="number" pos:start="393:37" pos:end="393:38">64</literal></expr></argument>, <argument pos:start="393:41" pos:end="393:50"><expr pos:start="393:41" pos:end="393:50"><name pos:start="393:41" pos:end="393:50"><name pos:start="393:41" pos:end="393:43">ast</name><operator pos:start="393:44" pos:end="393:45">-&gt;</operator><name pos:start="393:46" pos:end="393:50">scale</name></name></expr></argument>, <argument pos:start="393:53" pos:end="393:61"><expr pos:start="393:53" pos:end="393:61"><name pos:start="393:53" pos:end="393:61"><name pos:start="393:53" pos:end="393:55">ast</name><operator pos:start="393:56" pos:end="393:57">-&gt;</operator><name pos:start="393:58" pos:end="393:61">rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="397:13" pos:end="397:42"><expr pos:start="397:13" pos:end="397:41"><name pos:start="397:13" pos:end="397:24"><name pos:start="397:13" pos:end="397:15">ast</name><operator pos:start="397:16" pos:end="397:17">-&gt;</operator><name pos:start="397:18" pos:end="397:24">cum_len</name></name>  <operator pos:start="397:27" pos:end="397:27">=</operator> <call pos:start="397:29" pos:end="397:41"><name pos:start="397:29" pos:end="397:37">avio_rl32</name><argument_list pos:start="397:38" pos:end="397:41">(<argument pos:start="397:39" pos:end="397:40"><expr pos:start="397:39" pos:end="397:40"><name pos:start="397:39" pos:end="397:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="397:44" pos:end="397:54">/* start */</comment>

            <expr_stmt pos:start="399:13" pos:end="399:42"><expr pos:start="399:13" pos:end="399:41"><name pos:start="399:13" pos:end="399:25"><name pos:start="399:13" pos:end="399:14">st</name><operator pos:start="399:15" pos:end="399:16">-&gt;</operator><name pos:start="399:17" pos:end="399:25">nb_frames</name></name> <operator pos:start="399:27" pos:end="399:27">=</operator> <call pos:start="399:29" pos:end="399:41"><name pos:start="399:29" pos:end="399:37">avio_rl32</name><argument_list pos:start="399:38" pos:end="399:41">(<argument pos:start="399:39" pos:end="399:40"><expr pos:start="399:39" pos:end="399:40"><name pos:start="399:39" pos:end="399:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="403:13" pos:end="403:31"><expr pos:start="403:13" pos:end="403:30"><name pos:start="403:13" pos:end="403:26"><name pos:start="403:13" pos:end="403:14">st</name><operator pos:start="403:15" pos:end="403:16">-&gt;</operator><name pos:start="403:17" pos:end="403:26">start_time</name></name> <operator pos:start="403:28" pos:end="403:28">=</operator> <literal type="number" pos:start="403:30" pos:end="403:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="405:13" pos:end="405:26"><expr pos:start="405:13" pos:end="405:25"><call pos:start="405:13" pos:end="405:25"><name pos:start="405:13" pos:end="405:21">avio_rl32</name><argument_list pos:start="405:22" pos:end="405:25">(<argument pos:start="405:23" pos:end="405:24"><expr pos:start="405:23" pos:end="405:24"><name pos:start="405:23" pos:end="405:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="405:28" pos:end="405:44">/* buffer size */</comment>

            <expr_stmt pos:start="407:13" pos:end="407:26"><expr pos:start="407:13" pos:end="407:25"><call pos:start="407:13" pos:end="407:25"><name pos:start="407:13" pos:end="407:21">avio_rl32</name><argument_list pos:start="407:22" pos:end="407:25">(<argument pos:start="407:23" pos:end="407:24"><expr pos:start="407:23" pos:end="407:24"><name pos:start="407:23" pos:end="407:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="407:28" pos:end="407:40">/* quality */</comment>

            <if_stmt pos:start="409:13" pos:end="1148:13"><if pos:start="409:13" pos:end="1148:13">if <condition pos:start="409:16" pos:end="409:57">(<expr pos:start="409:17" pos:end="409:56"><name pos:start="409:17" pos:end="409:28"><name pos:start="409:17" pos:end="409:19">ast</name><operator pos:start="409:20" pos:end="409:21">-&gt;</operator><name pos:start="409:22" pos:end="409:28">cum_len</name></name><operator pos:start="409:29" pos:end="409:29">*</operator><name pos:start="409:30" pos:end="409:39"><name pos:start="409:30" pos:end="409:32">ast</name><operator pos:start="409:33" pos:end="409:34">-&gt;</operator><name pos:start="409:35" pos:end="409:39">scale</name></name><operator pos:start="409:40" pos:end="409:40">/</operator><name pos:start="409:41" pos:end="409:49"><name pos:start="409:41" pos:end="409:43">ast</name><operator pos:start="409:44" pos:end="409:45">-&gt;</operator><name pos:start="409:46" pos:end="409:49">rate</name></name> <operator pos:start="409:51" pos:end="409:51">&gt;</operator> <literal type="number" pos:start="409:53" pos:end="409:56">3600</literal></expr>)</condition> <block pos:start="409:59" pos:end="1148:13">{<block_content pos:start="411:17" pos:end="1148:13">

                <expr_stmt pos:start="411:17" pos:end="411:85"><expr pos:start="411:17" pos:end="411:84"><call pos:start="411:17" pos:end="411:84"><name pos:start="411:17" pos:end="411:22">av_log</name><argument_list pos:start="411:23" pos:end="411:84">(<argument pos:start="411:24" pos:end="411:24"><expr pos:start="411:24" pos:end="411:24"><name pos:start="411:24" pos:end="411:24">s</name></expr></argument>, <argument pos:start="411:27" pos:end="411:38"><expr pos:start="411:27" pos:end="411:38"><name pos:start="411:27" pos:end="411:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="411:41" pos:end="411:83"><expr pos:start="411:41" pos:end="411:83"><literal type="string" pos:start="411:41" pos:end="411:83">"crazy start time, iam scared, giving up\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="413:17" pos:end="413:33"><expr pos:start="413:17" pos:end="413:32"><name pos:start="413:17" pos:end="413:28"><name pos:start="413:17" pos:end="413:19">ast</name><operator pos:start="413:20" pos:end="413:21">-&gt;</operator><name pos:start="413:22" pos:end="413:28">cum_len</name></name> <operator pos:start="413:30" pos:end="413:30">=</operator> <literal type="number" pos:start="413:32" pos:end="413:32">0</literal></expr>;</expr_stmt>


            <expr_stmt pos:start="416:13" pos:end="416:45"><expr pos:start="416:13" pos:end="416:44"><name pos:start="416:13" pos:end="416:28"><name pos:start="416:13" pos:end="416:15">ast</name><operator pos:start="416:16" pos:end="416:17">-&gt;</operator><name pos:start="416:18" pos:end="416:28">sample_size</name></name> <operator pos:start="416:30" pos:end="416:30">=</operator> <call pos:start="416:32" pos:end="416:44"><name pos:start="416:32" pos:end="416:40">avio_rl32</name><argument_list pos:start="416:41" pos:end="416:44">(<argument pos:start="416:42" pos:end="416:43"><expr pos:start="416:42" pos:end="416:43"><name pos:start="416:42" pos:end="416:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="418:13" pos:end="418:58"><expr pos:start="418:13" pos:end="418:57"><name pos:start="418:13" pos:end="418:24"><name pos:start="418:13" pos:end="418:15">ast</name><operator pos:start="418:16" pos:end="418:17">-&gt;</operator><name pos:start="418:18" pos:end="418:24">cum_len</name></name>    <operator pos:start="418:29" pos:end="418:30">*=</operator> <call pos:start="418:32" pos:end="418:57"><name pos:start="418:32" pos:end="418:36">FFMAX</name><argument_list pos:start="418:37" pos:end="418:57">(<argument pos:start="418:38" pos:end="418:38"><expr pos:start="418:38" pos:end="418:38"><literal type="number" pos:start="418:38" pos:end="418:38">1</literal></expr></argument>, <argument pos:start="418:41" pos:end="418:56"><expr pos:start="418:41" pos:end="418:56"><name pos:start="418:41" pos:end="418:56"><name pos:start="418:41" pos:end="418:43">ast</name><operator pos:start="418:44" pos:end="418:45">-&gt;</operator><name pos:start="418:46" pos:end="418:56">sample_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="420:13" pos:end="422:61"><expr pos:start="420:13" pos:end="422:60"><call pos:start="420:13" pos:end="422:60"><name pos:start="420:13" pos:end="420:18">av_log</name><argument_list pos:start="420:19" pos:end="422:60">(<argument pos:start="420:20" pos:end="420:20"><expr pos:start="420:20" pos:end="420:20"><name pos:start="420:20" pos:end="420:20">s</name></expr></argument>, <argument pos:start="420:23" pos:end="420:34"><expr pos:start="420:23" pos:end="420:34"><name pos:start="420:23" pos:end="420:34">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="420:37" pos:end="420:62"><expr pos:start="420:37" pos:end="420:62"><literal type="string" pos:start="420:37" pos:end="420:39">"%"</literal><name pos:start="420:40" pos:end="420:45">PRIu32</name><literal type="string" pos:start="420:46" pos:end="420:49">" %"</literal><name pos:start="420:50" pos:end="420:55">PRIu32</name><literal type="string" pos:start="420:56" pos:end="420:62">" %d\n"</literal></expr></argument>,

                    <argument pos:start="422:21" pos:end="422:29"><expr pos:start="422:21" pos:end="422:29"><name pos:start="422:21" pos:end="422:29"><name pos:start="422:21" pos:end="422:23">ast</name><operator pos:start="422:24" pos:end="422:25">-&gt;</operator><name pos:start="422:26" pos:end="422:29">rate</name></name></expr></argument>, <argument pos:start="422:32" pos:end="422:41"><expr pos:start="422:32" pos:end="422:41"><name pos:start="422:32" pos:end="422:41"><name pos:start="422:32" pos:end="422:34">ast</name><operator pos:start="422:35" pos:end="422:36">-&gt;</operator><name pos:start="422:37" pos:end="422:41">scale</name></name></expr></argument>, <argument pos:start="422:44" pos:end="422:59"><expr pos:start="422:44" pos:end="422:59"><name pos:start="422:44" pos:end="422:59"><name pos:start="422:44" pos:end="422:46">ast</name><operator pos:start="422:47" pos:end="422:48">-&gt;</operator><name pos:start="422:49" pos:end="422:59">sample_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <switch pos:start="426:13" pos:end="1148:13">switch <condition pos:start="426:20" pos:end="426:25">(<expr pos:start="426:21" pos:end="426:24"><name pos:start="426:21" pos:end="426:24">tag1</name></expr>)</condition> <block pos:start="426:27" pos:end="1148:13">{<block_content pos:start="428:13" pos:end="1148:13">

            <case pos:start="428:13" pos:end="428:43">case <expr pos:start="428:18" pos:end="428:42"><call pos:start="428:18" pos:end="428:42"><name pos:start="428:18" pos:end="428:22">MKTAG</name><argument_list pos:start="428:23" pos:end="428:42">(<argument pos:start="428:24" pos:end="428:26"><expr pos:start="428:24" pos:end="428:26"><literal type="char" pos:start="428:24" pos:end="428:26">'v'</literal></expr></argument>, <argument pos:start="428:29" pos:end="428:31"><expr pos:start="428:29" pos:end="428:31"><literal type="char" pos:start="428:29" pos:end="428:31">'i'</literal></expr></argument>, <argument pos:start="428:34" pos:end="428:36"><expr pos:start="428:34" pos:end="428:36"><literal type="char" pos:start="428:34" pos:end="428:36">'d'</literal></expr></argument>, <argument pos:start="428:39" pos:end="428:41"><expr pos:start="428:39" pos:end="428:41"><literal type="char" pos:start="428:39" pos:end="428:41">'s'</literal></expr></argument>)</argument_list></call></expr>:</case>

                <expr_stmt pos:start="430:17" pos:end="430:48"><expr pos:start="430:17" pos:end="430:47"><name pos:start="430:17" pos:end="430:26">codec_type</name> <operator pos:start="430:28" pos:end="430:28">=</operator> <name pos:start="430:30" pos:end="430:47">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>



                <expr_stmt pos:start="434:17" pos:end="434:37"><expr pos:start="434:17" pos:end="434:36"><name pos:start="434:17" pos:end="434:32"><name pos:start="434:17" pos:end="434:19">ast</name><operator pos:start="434:20" pos:end="434:21">-&gt;</operator><name pos:start="434:22" pos:end="434:32">sample_size</name></name> <operator pos:start="434:34" pos:end="434:34">=</operator> <literal type="number" pos:start="434:36" pos:end="434:36">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="436:17" pos:end="436:61"><expr pos:start="436:17" pos:end="436:60"><name pos:start="436:17" pos:end="436:34"><name pos:start="436:17" pos:end="436:18">st</name><operator pos:start="436:19" pos:end="436:20">-&gt;</operator><name pos:start="436:21" pos:end="436:34">avg_frame_rate</name></name> <operator pos:start="436:36" pos:end="436:36">=</operator> <call pos:start="436:38" pos:end="436:60"><name pos:start="436:38" pos:end="436:45">av_inv_q</name><argument_list pos:start="436:46" pos:end="436:60">(<argument pos:start="436:47" pos:end="436:59"><expr pos:start="436:47" pos:end="436:59"><name pos:start="436:47" pos:end="436:59"><name pos:start="436:47" pos:end="436:48">st</name><operator pos:start="436:49" pos:end="436:50">-&gt;</operator><name pos:start="436:51" pos:end="436:59">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="438:17" pos:end="438:22">break;</break>

            <case pos:start="440:13" pos:end="440:43">case <expr pos:start="440:18" pos:end="440:42"><call pos:start="440:18" pos:end="440:42"><name pos:start="440:18" pos:end="440:22">MKTAG</name><argument_list pos:start="440:23" pos:end="440:42">(<argument pos:start="440:24" pos:end="440:26"><expr pos:start="440:24" pos:end="440:26"><literal type="char" pos:start="440:24" pos:end="440:26">'a'</literal></expr></argument>, <argument pos:start="440:29" pos:end="440:31"><expr pos:start="440:29" pos:end="440:31"><literal type="char" pos:start="440:29" pos:end="440:31">'u'</literal></expr></argument>, <argument pos:start="440:34" pos:end="440:36"><expr pos:start="440:34" pos:end="440:36"><literal type="char" pos:start="440:34" pos:end="440:36">'d'</literal></expr></argument>, <argument pos:start="440:39" pos:end="440:41"><expr pos:start="440:39" pos:end="440:41"><literal type="char" pos:start="440:39" pos:end="440:41">'s'</literal></expr></argument>)</argument_list></call></expr>:</case>

                <expr_stmt pos:start="442:17" pos:end="442:48"><expr pos:start="442:17" pos:end="442:47"><name pos:start="442:17" pos:end="442:26">codec_type</name> <operator pos:start="442:28" pos:end="442:28">=</operator> <name pos:start="442:30" pos:end="442:47">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

                <break pos:start="444:17" pos:end="444:22">break;</break>

            <case pos:start="446:13" pos:end="446:43">case <expr pos:start="446:18" pos:end="446:42"><call pos:start="446:18" pos:end="446:42"><name pos:start="446:18" pos:end="446:22">MKTAG</name><argument_list pos:start="446:23" pos:end="446:42">(<argument pos:start="446:24" pos:end="446:26"><expr pos:start="446:24" pos:end="446:26"><literal type="char" pos:start="446:24" pos:end="446:26">'t'</literal></expr></argument>, <argument pos:start="446:29" pos:end="446:31"><expr pos:start="446:29" pos:end="446:31"><literal type="char" pos:start="446:29" pos:end="446:31">'x'</literal></expr></argument>, <argument pos:start="446:34" pos:end="446:36"><expr pos:start="446:34" pos:end="446:36"><literal type="char" pos:start="446:34" pos:end="446:36">'t'</literal></expr></argument>, <argument pos:start="446:39" pos:end="446:41"><expr pos:start="446:39" pos:end="446:41"><literal type="char" pos:start="446:39" pos:end="446:41">'s'</literal></expr></argument>)</argument_list></call></expr>:</case>

                <expr_stmt pos:start="448:17" pos:end="448:51"><expr pos:start="448:17" pos:end="448:50"><name pos:start="448:17" pos:end="448:26">codec_type</name> <operator pos:start="448:28" pos:end="448:28">=</operator> <name pos:start="448:30" pos:end="448:50">AVMEDIA_TYPE_SUBTITLE</name></expr>;</expr_stmt>

                <break pos:start="450:17" pos:end="450:22">break;</break>

            <case pos:start="452:13" pos:end="452:43">case <expr pos:start="452:18" pos:end="452:42"><call pos:start="452:18" pos:end="452:42"><name pos:start="452:18" pos:end="452:22">MKTAG</name><argument_list pos:start="452:23" pos:end="452:42">(<argument pos:start="452:24" pos:end="452:26"><expr pos:start="452:24" pos:end="452:26"><literal type="char" pos:start="452:24" pos:end="452:26">'d'</literal></expr></argument>, <argument pos:start="452:29" pos:end="452:31"><expr pos:start="452:29" pos:end="452:31"><literal type="char" pos:start="452:29" pos:end="452:31">'a'</literal></expr></argument>, <argument pos:start="452:34" pos:end="452:36"><expr pos:start="452:34" pos:end="452:36"><literal type="char" pos:start="452:34" pos:end="452:36">'t'</literal></expr></argument>, <argument pos:start="452:39" pos:end="452:41"><expr pos:start="452:39" pos:end="452:41"><literal type="char" pos:start="452:39" pos:end="452:41">'s'</literal></expr></argument>)</argument_list></call></expr>:</case>

                <expr_stmt pos:start="454:17" pos:end="454:47"><expr pos:start="454:17" pos:end="454:46"><name pos:start="454:17" pos:end="454:26">codec_type</name> <operator pos:start="454:28" pos:end="454:28">=</operator> <name pos:start="454:30" pos:end="454:46">AVMEDIA_TYPE_DATA</name></expr>;</expr_stmt>

                <break pos:start="456:17" pos:end="456:22">break;</break>

            <default pos:start="458:13" pos:end="458:20">default:</default>

                <expr_stmt pos:start="460:17" pos:end="460:73"><expr pos:start="460:17" pos:end="460:72"><call pos:start="460:17" pos:end="460:72"><name pos:start="460:17" pos:end="460:22">av_log</name><argument_list pos:start="460:23" pos:end="460:72">(<argument pos:start="460:24" pos:end="460:24"><expr pos:start="460:24" pos:end="460:24"><name pos:start="460:24" pos:end="460:24">s</name></expr></argument>, <argument pos:start="460:27" pos:end="460:37"><expr pos:start="460:27" pos:end="460:37"><name pos:start="460:27" pos:end="460:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="460:40" pos:end="460:65"><expr pos:start="460:40" pos:end="460:65"><literal type="string" pos:start="460:40" pos:end="460:65">"unknown stream type %X\n"</literal></expr></argument>, <argument pos:start="460:68" pos:end="460:71"><expr pos:start="460:68" pos:end="460:71"><name pos:start="460:68" pos:end="460:71">tag1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




            <if_stmt pos:start="465:13" pos:end="1148:13"><if pos:start="465:13" pos:end="1148:13">if <condition pos:start="465:16" pos:end="465:37">(<expr pos:start="465:17" pos:end="465:36"><name pos:start="465:17" pos:end="465:32"><name pos:start="465:17" pos:end="465:19">ast</name><operator pos:start="465:20" pos:end="465:21">-&gt;</operator><name pos:start="465:22" pos:end="465:32">sample_size</name></name> <operator pos:start="465:34" pos:end="465:34">&lt;</operator> <literal type="number" pos:start="465:36" pos:end="465:36">0</literal></expr>)</condition> <block pos:start="465:39" pos:end="1148:13">{<block_content pos:start="467:17" pos:end="1148:13">

                <if_stmt pos:start="467:17" pos:end="1148:13"><if pos:start="467:17" pos:end="1148:13">if <condition pos:start="467:20" pos:end="467:57">(<expr pos:start="467:21" pos:end="467:56"><name pos:start="467:21" pos:end="467:40"><name pos:start="467:21" pos:end="467:21">s</name><operator pos:start="467:22" pos:end="467:23">-&gt;</operator><name pos:start="467:24" pos:end="467:40">error_recognition</name></name> <operator pos:start="467:42" pos:end="467:42">&amp;</operator> <name pos:start="467:44" pos:end="467:56">AV_EF_EXPLODE</name></expr>)</condition> <block pos:start="467:59" pos:end="1148:13">{<block_content pos:start="469:21" pos:end="1148:13">

                    <expr_stmt pos:start="469:21" pos:end="475:41"><expr pos:start="469:21" pos:end="475:40"><call pos:start="469:21" pos:end="475:40"><name pos:start="469:21" pos:end="469:26">av_log</name><argument_list pos:start="469:27" pos:end="475:40">(<argument pos:start="469:28" pos:end="469:28"><expr pos:start="469:28" pos:end="469:28"><name pos:start="469:28" pos:end="469:28">s</name></expr></argument>, <argument pos:start="469:31" pos:end="469:42"><expr pos:start="469:31" pos:end="469:42"><name pos:start="469:31" pos:end="469:42">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="471:28" pos:end="471:66"><expr pos:start="471:28" pos:end="471:66"><literal type="string" pos:start="471:28" pos:end="471:66">"Invalid sample_size %d at stream %d\n"</literal></expr></argument>,

                           <argument pos:start="473:28" pos:end="473:43"><expr pos:start="473:28" pos:end="473:43"><name pos:start="473:28" pos:end="473:43"><name pos:start="473:28" pos:end="473:30">ast</name><operator pos:start="473:31" pos:end="473:32">-&gt;</operator><name pos:start="473:33" pos:end="473:43">sample_size</name></name></expr></argument>,

                           <argument pos:start="475:28" pos:end="475:39"><expr pos:start="475:28" pos:end="475:39"><name pos:start="475:28" pos:end="475:39">stream_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="477:21" pos:end="477:30">goto <name pos:start="477:26" pos:end="477:29">fail</name>;</goto>


                <expr_stmt pos:start="480:17" pos:end="488:37"><expr pos:start="480:17" pos:end="488:36"><call pos:start="480:17" pos:end="488:36"><name pos:start="480:17" pos:end="480:22">av_log</name><argument_list pos:start="480:23" pos:end="488:36">(<argument pos:start="480:24" pos:end="480:24"><expr pos:start="480:24" pos:end="480:24"><name pos:start="480:24" pos:end="480:24">s</name></expr></argument>, <argument pos:start="480:27" pos:end="480:40"><expr pos:start="480:27" pos:end="480:40"><name pos:start="480:27" pos:end="480:40">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="482:24" pos:end="484:42"><expr pos:start="482:24" pos:end="484:42"><literal type="string" pos:start="482:24" pos:end="482:61">"Invalid sample_size %d at stream %d "</literal>

                       <literal type="string" pos:start="484:24" pos:end="484:42">"setting it to 0\n"</literal></expr></argument>,

                       <argument pos:start="486:24" pos:end="486:39"><expr pos:start="486:24" pos:end="486:39"><name pos:start="486:24" pos:end="486:39"><name pos:start="486:24" pos:end="486:26">ast</name><operator pos:start="486:27" pos:end="486:28">-&gt;</operator><name pos:start="486:29" pos:end="486:39">sample_size</name></name></expr></argument>,

                       <argument pos:start="488:24" pos:end="488:35"><expr pos:start="488:24" pos:end="488:35"><name pos:start="488:24" pos:end="488:35">stream_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="490:17" pos:end="490:37"><expr pos:start="490:17" pos:end="490:36"><name pos:start="490:17" pos:end="490:32"><name pos:start="490:17" pos:end="490:19">ast</name><operator pos:start="490:20" pos:end="490:21">-&gt;</operator><name pos:start="490:22" pos:end="490:32">sample_size</name></name> <operator pos:start="490:34" pos:end="490:34">=</operator> <literal type="number" pos:start="490:36" pos:end="490:36">0</literal></expr>;</expr_stmt>




            <if_stmt pos:start="495:13" pos:end="1148:13"><if pos:start="495:13" pos:end="1148:13">if <condition pos:start="495:16" pos:end="495:38">(<expr pos:start="495:17" pos:end="495:37"><name pos:start="495:17" pos:end="495:32"><name pos:start="495:17" pos:end="495:19">ast</name><operator pos:start="495:20" pos:end="495:21">-&gt;</operator><name pos:start="495:22" pos:end="495:32">sample_size</name></name> <operator pos:start="495:34" pos:end="495:35">==</operator> <literal type="number" pos:start="495:37" pos:end="495:37">0</literal></expr>)</condition> <block pos:start="495:40" pos:end="1148:13">{<block_content pos:start="497:17" pos:end="1148:13">

                <expr_stmt pos:start="497:17" pos:end="497:45"><expr pos:start="497:17" pos:end="497:44"><name pos:start="497:17" pos:end="497:28"><name pos:start="497:17" pos:end="497:18">st</name><operator pos:start="497:19" pos:end="497:20">-&gt;</operator><name pos:start="497:21" pos:end="497:28">duration</name></name> <operator pos:start="497:30" pos:end="497:30">=</operator> <name pos:start="497:32" pos:end="497:44"><name pos:start="497:32" pos:end="497:33">st</name><operator pos:start="497:34" pos:end="497:35">-&gt;</operator><name pos:start="497:36" pos:end="497:44">nb_frames</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="499:17" pos:end="1148:13"><if pos:start="499:17" pos:end="1148:13">if <condition pos:start="499:20" pos:end="499:91">(<expr pos:start="499:21" pos:end="499:90"><name pos:start="499:21" pos:end="499:32"><name pos:start="499:21" pos:end="499:22">st</name><operator pos:start="499:23" pos:end="499:24">-&gt;</operator><name pos:start="499:25" pos:end="499:32">duration</name></name> <operator pos:start="499:34" pos:end="499:34">&gt;</operator> <literal type="number" pos:start="499:36" pos:end="499:36">0</literal> <operator pos:start="499:38" pos:end="499:39">&amp;&amp;</operator> <name pos:start="499:41" pos:end="499:53"><name pos:start="499:41" pos:end="499:43">avi</name><operator pos:start="499:44" pos:end="499:45">-&gt;</operator><name pos:start="499:46" pos:end="499:53">io_fsize</name></name> <operator pos:start="499:55" pos:end="499:55">&gt;</operator> <literal type="number" pos:start="499:57" pos:end="499:57">0</literal> <operator pos:start="499:59" pos:end="499:60">&amp;&amp;</operator> <name pos:start="499:62" pos:end="499:74"><name pos:start="499:62" pos:end="499:64">avi</name><operator pos:start="499:65" pos:end="499:66">-&gt;</operator><name pos:start="499:67" pos:end="499:74">riff_end</name></name> <operator pos:start="499:76" pos:end="499:76">&gt;</operator> <name pos:start="499:78" pos:end="499:90"><name pos:start="499:78" pos:end="499:80">avi</name><operator pos:start="499:81" pos:end="499:82">-&gt;</operator><name pos:start="499:83" pos:end="499:90">io_fsize</name></name></expr>)</condition> <block pos:start="499:93" pos:end="1148:13">{<block_content pos:start="501:21" pos:end="1148:13">

                    <expr_stmt pos:start="501:21" pos:end="501:86"><expr pos:start="501:21" pos:end="501:85"><call pos:start="501:21" pos:end="501:85"><name pos:start="501:21" pos:end="501:26">av_log</name><argument_list pos:start="501:27" pos:end="501:85">(<argument pos:start="501:28" pos:end="501:28"><expr pos:start="501:28" pos:end="501:28"><name pos:start="501:28" pos:end="501:28">s</name></expr></argument>, <argument pos:start="501:31" pos:end="501:42"><expr pos:start="501:31" pos:end="501:42"><name pos:start="501:31" pos:end="501:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="501:45" pos:end="501:84"><expr pos:start="501:45" pos:end="501:84"><literal type="string" pos:start="501:45" pos:end="501:84">"File is truncated adjusting duration\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="503:21" pos:end="503:90"><expr pos:start="503:21" pos:end="503:89"><name pos:start="503:21" pos:end="503:32"><name pos:start="503:21" pos:end="503:22">st</name><operator pos:start="503:23" pos:end="503:24">-&gt;</operator><name pos:start="503:25" pos:end="503:32">duration</name></name> <operator pos:start="503:34" pos:end="503:34">=</operator> <call pos:start="503:36" pos:end="503:89"><name pos:start="503:36" pos:end="503:45">av_rescale</name><argument_list pos:start="503:46" pos:end="503:89">(<argument pos:start="503:47" pos:end="503:58"><expr pos:start="503:47" pos:end="503:58"><name pos:start="503:47" pos:end="503:58"><name pos:start="503:47" pos:end="503:48">st</name><operator pos:start="503:49" pos:end="503:50">-&gt;</operator><name pos:start="503:51" pos:end="503:58">duration</name></name></expr></argument>, <argument pos:start="503:61" pos:end="503:73"><expr pos:start="503:61" pos:end="503:73"><name pos:start="503:61" pos:end="503:73"><name pos:start="503:61" pos:end="503:63">avi</name><operator pos:start="503:64" pos:end="503:65">-&gt;</operator><name pos:start="503:66" pos:end="503:73">io_fsize</name></name></expr></argument>, <argument pos:start="503:76" pos:end="503:88"><expr pos:start="503:76" pos:end="503:88"><name pos:start="503:76" pos:end="503:88"><name pos:start="503:76" pos:end="503:78">avi</name><operator pos:start="503:79" pos:end="503:80">-&gt;</operator><name pos:start="503:81" pos:end="503:88">riff_end</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="507:13" pos:end="507:45"><expr pos:start="507:13" pos:end="507:44"><name pos:start="507:13" pos:end="507:29"><name pos:start="507:13" pos:end="507:15">ast</name><operator pos:start="507:16" pos:end="507:17">-&gt;</operator><name pos:start="507:18" pos:end="507:29">frame_offset</name></name> <operator pos:start="507:31" pos:end="507:31">=</operator> <name pos:start="507:33" pos:end="507:44"><name pos:start="507:33" pos:end="507:35">ast</name><operator pos:start="507:36" pos:end="507:37">-&gt;</operator><name pos:start="507:38" pos:end="507:44">cum_len</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="509:13" pos:end="509:41"><expr pos:start="509:13" pos:end="509:40"><call pos:start="509:13" pos:end="509:40"><name pos:start="509:13" pos:end="509:21">avio_skip</name><argument_list pos:start="509:22" pos:end="509:40">(<argument pos:start="509:23" pos:end="509:24"><expr pos:start="509:23" pos:end="509:24"><name pos:start="509:23" pos:end="509:24">pb</name></expr></argument>, <argument pos:start="509:27" pos:end="509:39"><expr pos:start="509:27" pos:end="509:39"><name pos:start="509:27" pos:end="509:30">size</name> <operator pos:start="509:32" pos:end="509:32">-</operator> <literal type="number" pos:start="509:34" pos:end="509:35">12</literal> <operator pos:start="509:37" pos:end="509:37">*</operator> <literal type="number" pos:start="509:39" pos:end="509:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="511:13" pos:end="511:18">break;</break>

        <case pos:start="513:9" pos:end="513:39">case <expr pos:start="513:14" pos:end="513:38"><call pos:start="513:14" pos:end="513:38"><name pos:start="513:14" pos:end="513:18">MKTAG</name><argument_list pos:start="513:19" pos:end="513:38">(<argument pos:start="513:20" pos:end="513:22"><expr pos:start="513:20" pos:end="513:22"><literal type="char" pos:start="513:20" pos:end="513:22">'s'</literal></expr></argument>, <argument pos:start="513:25" pos:end="513:27"><expr pos:start="513:25" pos:end="513:27"><literal type="char" pos:start="513:25" pos:end="513:27">'t'</literal></expr></argument>, <argument pos:start="513:30" pos:end="513:32"><expr pos:start="513:30" pos:end="513:32"><literal type="char" pos:start="513:30" pos:end="513:32">'r'</literal></expr></argument>, <argument pos:start="513:35" pos:end="513:37"><expr pos:start="513:35" pos:end="513:37"><literal type="char" pos:start="513:35" pos:end="513:37">'f'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <comment type="block" pos:start="515:13" pos:end="515:31">/* stream header */</comment>

            <if_stmt pos:start="517:13" pos:end="519:22"><if pos:start="517:13" pos:end="519:22">if <condition pos:start="517:16" pos:end="517:22">(<expr pos:start="517:17" pos:end="517:21"><operator pos:start="517:17" pos:end="517:17">!</operator><name pos:start="517:18" pos:end="517:21">size</name></expr>)</condition><block type="pseudo" pos:start="519:17" pos:end="519:22"><block_content pos:start="519:17" pos:end="519:22">

                <break pos:start="519:17" pos:end="519:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="521:13" pos:end="1148:13"><if pos:start="521:13" pos:end="525:13">if <condition pos:start="521:16" pos:end="521:73">(<expr pos:start="521:17" pos:end="521:72"><name pos:start="521:17" pos:end="521:28">stream_index</name> <operator pos:start="521:30" pos:end="521:31">&gt;=</operator> <operator pos:start="521:33" pos:end="521:33">(</operator><name pos:start="521:34" pos:end="521:41">unsigned</name><operator pos:start="521:42" pos:end="521:42">)</operator><name pos:start="521:43" pos:end="521:55"><name pos:start="521:43" pos:end="521:43">s</name><operator pos:start="521:44" pos:end="521:45">-&gt;</operator><name pos:start="521:46" pos:end="521:55">nb_streams</name></name> <operator pos:start="521:57" pos:end="521:58">||</operator> <name pos:start="521:60" pos:end="521:72"><name pos:start="521:60" pos:end="521:62">avi</name><operator pos:start="521:63" pos:end="521:64">-&gt;</operator><name pos:start="521:65" pos:end="521:72">dv_demux</name></name></expr>)</condition> <block pos:start="521:75" pos:end="525:13">{<block_content pos:start="523:17" pos:end="523:36">

                <expr_stmt pos:start="523:17" pos:end="523:36"><expr pos:start="523:17" pos:end="523:35"><call pos:start="523:17" pos:end="523:35"><name pos:start="523:17" pos:end="523:25">avio_skip</name><argument_list pos:start="523:26" pos:end="523:35">(<argument pos:start="523:27" pos:end="523:28"><expr pos:start="523:27" pos:end="523:28"><name pos:start="523:27" pos:end="523:28">pb</name></expr></argument>, <argument pos:start="523:31" pos:end="523:34"><expr pos:start="523:31" pos:end="523:34"><name pos:start="523:31" pos:end="523:34">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="525:15" pos:end="1148:13">else <block pos:start="525:20" pos:end="1148:13">{<block_content pos:start="527:17" pos:end="1148:13">

                <decl_stmt pos:start="527:17" pos:end="527:49"><decl pos:start="527:17" pos:end="527:48"><type pos:start="527:17" pos:end="527:24"><name pos:start="527:17" pos:end="527:24">uint64_t</name></type> <name pos:start="527:26" pos:end="527:32">cur_pos</name> <init pos:start="527:34" pos:end="527:48">= <expr pos:start="527:36" pos:end="527:48"><call pos:start="527:36" pos:end="527:48"><name pos:start="527:36" pos:end="527:44">avio_tell</name><argument_list pos:start="527:45" pos:end="527:48">(<argument pos:start="527:46" pos:end="527:47"><expr pos:start="527:46" pos:end="527:47"><name pos:start="527:46" pos:end="527:47">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="529:17" pos:end="529:31"><decl pos:start="529:17" pos:end="529:30"><type pos:start="529:17" pos:end="529:24"><name pos:start="529:17" pos:end="529:24">unsigned</name></type> <name pos:start="529:26" pos:end="529:30">esize</name></decl>;</decl_stmt>

                <if_stmt pos:start="531:17" pos:end="533:59"><if pos:start="531:17" pos:end="533:59">if <condition pos:start="531:20" pos:end="531:39">(<expr pos:start="531:21" pos:end="531:38"><name pos:start="531:21" pos:end="531:27">cur_pos</name> <operator pos:start="531:29" pos:end="531:29">&lt;</operator> <name pos:start="531:31" pos:end="531:38">list_end</name></expr>)</condition><block type="pseudo" pos:start="533:21" pos:end="533:59"><block_content pos:start="533:21" pos:end="533:59">

                    <expr_stmt pos:start="533:21" pos:end="533:59"><expr pos:start="533:21" pos:end="533:58"><name pos:start="533:21" pos:end="533:24">size</name> <operator pos:start="533:26" pos:end="533:26">=</operator> <call pos:start="533:28" pos:end="533:58"><name pos:start="533:28" pos:end="533:32">FFMIN</name><argument_list pos:start="533:33" pos:end="533:58">(<argument pos:start="533:34" pos:end="533:37"><expr pos:start="533:34" pos:end="533:37"><name pos:start="533:34" pos:end="533:37">size</name></expr></argument>, <argument pos:start="533:40" pos:end="533:57"><expr pos:start="533:40" pos:end="533:57"><name pos:start="533:40" pos:end="533:47">list_end</name> <operator pos:start="533:49" pos:end="533:49">-</operator> <name pos:start="533:51" pos:end="533:57">cur_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="535:17" pos:end="535:46"><expr pos:start="535:17" pos:end="535:45"><name pos:start="535:17" pos:end="535:18">st</name> <operator pos:start="535:20" pos:end="535:20">=</operator> <name pos:start="535:22" pos:end="535:45"><name pos:start="535:22" pos:end="535:22">s</name><operator pos:start="535:23" pos:end="535:24">-&gt;</operator><name pos:start="535:25" pos:end="535:31">streams</name><index pos:start="535:32" pos:end="535:45">[<expr pos:start="535:33" pos:end="535:44"><name pos:start="535:33" pos:end="535:44">stream_index</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="537:17" pos:end="1148:13"><if pos:start="537:17" pos:end="1148:13">if <condition pos:start="537:20" pos:end="537:69">(<expr pos:start="537:21" pos:end="537:68"><name pos:start="537:21" pos:end="537:44"><name pos:start="537:21" pos:end="537:22">st</name><operator pos:start="537:23" pos:end="537:24">-&gt;</operator><name pos:start="537:25" pos:end="537:32">codecpar</name><operator pos:start="537:33" pos:end="537:34">-&gt;</operator><name pos:start="537:35" pos:end="537:44">codec_type</name></name> <operator pos:start="537:46" pos:end="537:47">!=</operator> <name pos:start="537:49" pos:end="537:68">AVMEDIA_TYPE_UNKNOWN</name></expr>)</condition> <block pos:start="537:71" pos:end="1148:13">{<block_content pos:start="539:21" pos:end="1148:13">

                    <expr_stmt pos:start="539:21" pos:end="539:40"><expr pos:start="539:21" pos:end="539:39"><call pos:start="539:21" pos:end="539:39"><name pos:start="539:21" pos:end="539:29">avio_skip</name><argument_list pos:start="539:30" pos:end="539:39">(<argument pos:start="539:31" pos:end="539:32"><expr pos:start="539:31" pos:end="539:32"><name pos:start="539:31" pos:end="539:32">pb</name></expr></argument>, <argument pos:start="539:35" pos:end="539:38"><expr pos:start="539:35" pos:end="539:38"><name pos:start="539:35" pos:end="539:38">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="541:21" pos:end="541:26">break;</break>


                <switch pos:start="544:17" pos:end="1148:13">switch <condition pos:start="544:24" pos:end="544:35">(<expr pos:start="544:25" pos:end="544:34"><name pos:start="544:25" pos:end="544:34">codec_type</name></expr>)</condition> <block pos:start="544:37" pos:end="1148:13">{<block_content pos:start="546:17" pos:end="1148:13">

                <case pos:start="546:17" pos:end="546:40">case <expr pos:start="546:22" pos:end="546:39"><name pos:start="546:22" pos:end="546:39">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                    <if_stmt pos:start="548:21" pos:end="1148:13"><if pos:start="548:21" pos:end="1148:13">if <condition pos:start="548:24" pos:end="548:40">(<expr pos:start="548:25" pos:end="548:39"><name pos:start="548:25" pos:end="548:39">amv_file_format</name></expr>)</condition> <block pos:start="548:42" pos:end="1148:13">{<block_content pos:start="550:25" pos:end="1148:13">

                        <expr_stmt pos:start="550:25" pos:end="550:62"><expr pos:start="550:25" pos:end="550:61"><name pos:start="550:25" pos:end="550:43"><name pos:start="550:25" pos:end="550:26">st</name><operator pos:start="550:27" pos:end="550:28">-&gt;</operator><name pos:start="550:29" pos:end="550:36">codecpar</name><operator pos:start="550:37" pos:end="550:38">-&gt;</operator><name pos:start="550:39" pos:end="550:43">width</name></name>      <operator pos:start="550:50" pos:end="550:50">=</operator> <name pos:start="550:52" pos:end="550:61">avih_width</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="552:25" pos:end="552:63"><expr pos:start="552:25" pos:end="552:62"><name pos:start="552:25" pos:end="552:44"><name pos:start="552:25" pos:end="552:26">st</name><operator pos:start="552:27" pos:end="552:28">-&gt;</operator><name pos:start="552:29" pos:end="552:36">codecpar</name><operator pos:start="552:37" pos:end="552:38">-&gt;</operator><name pos:start="552:39" pos:end="552:44">height</name></name>     <operator pos:start="552:50" pos:end="552:50">=</operator> <name pos:start="552:52" pos:end="552:62">avih_height</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="554:25" pos:end="554:70"><expr pos:start="554:25" pos:end="554:69"><name pos:start="554:25" pos:end="554:48"><name pos:start="554:25" pos:end="554:26">st</name><operator pos:start="554:27" pos:end="554:28">-&gt;</operator><name pos:start="554:29" pos:end="554:36">codecpar</name><operator pos:start="554:37" pos:end="554:38">-&gt;</operator><name pos:start="554:39" pos:end="554:48">codec_type</name></name> <operator pos:start="554:50" pos:end="554:50">=</operator> <name pos:start="554:52" pos:end="554:69">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="556:25" pos:end="556:67"><expr pos:start="556:25" pos:end="556:66"><name pos:start="556:25" pos:end="556:46"><name pos:start="556:25" pos:end="556:26">st</name><operator pos:start="556:27" pos:end="556:28">-&gt;</operator><name pos:start="556:29" pos:end="556:36">codecpar</name><operator pos:start="556:37" pos:end="556:38">-&gt;</operator><name pos:start="556:39" pos:end="556:46">codec_id</name></name>   <operator pos:start="556:50" pos:end="556:50">=</operator> <name pos:start="556:52" pos:end="556:66">AV_CODEC_ID_AMV</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="558:25" pos:end="558:44"><expr pos:start="558:25" pos:end="558:43"><call pos:start="558:25" pos:end="558:43"><name pos:start="558:25" pos:end="558:33">avio_skip</name><argument_list pos:start="558:34" pos:end="558:43">(<argument pos:start="558:35" pos:end="558:36"><expr pos:start="558:35" pos:end="558:36"><name pos:start="558:35" pos:end="558:36">pb</name></expr></argument>, <argument pos:start="558:39" pos:end="558:42"><expr pos:start="558:39" pos:end="558:42"><name pos:start="558:39" pos:end="558:42">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="560:25" pos:end="560:30">break;</break>


                    <expr_stmt pos:start="563:21" pos:end="563:61"><expr pos:start="563:21" pos:end="563:60"><name pos:start="563:21" pos:end="563:24">tag1</name> <operator pos:start="563:26" pos:end="563:26">=</operator> <call pos:start="563:28" pos:end="563:60"><name pos:start="563:28" pos:end="563:44">ff_get_bmp_header</name><argument_list pos:start="563:45" pos:end="563:60">(<argument pos:start="563:46" pos:end="563:47"><expr pos:start="563:46" pos:end="563:47"><name pos:start="563:46" pos:end="563:47">pb</name></expr></argument>, <argument pos:start="563:50" pos:end="563:51"><expr pos:start="563:50" pos:end="563:51"><name pos:start="563:50" pos:end="563:51">st</name></expr></argument>, <argument pos:start="563:54" pos:end="563:59"><expr pos:start="563:54" pos:end="563:59"><operator pos:start="563:54" pos:end="563:54">&amp;</operator><name pos:start="563:55" pos:end="563:59">esize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="567:21" pos:end="1148:13"><if pos:start="567:21" pos:end="1148:13">if <condition pos:start="567:24" pos:end="569:58">(<expr pos:start="567:25" pos:end="569:57"><name pos:start="567:25" pos:end="567:28">tag1</name> <operator pos:start="567:30" pos:end="567:31">==</operator> <call pos:start="567:33" pos:end="567:57"><name pos:start="567:33" pos:end="567:37">MKTAG</name><argument_list pos:start="567:38" pos:end="567:57">(<argument pos:start="567:39" pos:end="567:41"><expr pos:start="567:39" pos:end="567:41"><literal type="char" pos:start="567:39" pos:end="567:41">'D'</literal></expr></argument>, <argument pos:start="567:44" pos:end="567:46"><expr pos:start="567:44" pos:end="567:46"><literal type="char" pos:start="567:44" pos:end="567:46">'X'</literal></expr></argument>, <argument pos:start="567:49" pos:end="567:51"><expr pos:start="567:49" pos:end="567:51"><literal type="char" pos:start="567:49" pos:end="567:51">'S'</literal></expr></argument>, <argument pos:start="567:54" pos:end="567:56"><expr pos:start="567:54" pos:end="567:56"><literal type="char" pos:start="567:54" pos:end="567:56">'B'</literal></expr></argument>)</argument_list></call> <operator pos:start="567:59" pos:end="567:60">||</operator>

                        <name pos:start="569:25" pos:end="569:28">tag1</name> <operator pos:start="569:30" pos:end="569:31">==</operator> <call pos:start="569:33" pos:end="569:57"><name pos:start="569:33" pos:end="569:37">MKTAG</name><argument_list pos:start="569:38" pos:end="569:57">(<argument pos:start="569:39" pos:end="569:41"><expr pos:start="569:39" pos:end="569:41"><literal type="char" pos:start="569:39" pos:end="569:41">'D'</literal></expr></argument>, <argument pos:start="569:44" pos:end="569:46"><expr pos:start="569:44" pos:end="569:46"><literal type="char" pos:start="569:44" pos:end="569:46">'X'</literal></expr></argument>, <argument pos:start="569:49" pos:end="569:51"><expr pos:start="569:49" pos:end="569:51"><literal type="char" pos:start="569:49" pos:end="569:51">'S'</literal></expr></argument>, <argument pos:start="569:54" pos:end="569:56"><expr pos:start="569:54" pos:end="569:56"><literal type="char" pos:start="569:54" pos:end="569:56">'A'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="569:60" pos:end="1148:13">{<block_content pos:start="571:25" pos:end="1148:13">

                        <expr_stmt pos:start="571:25" pos:end="571:73"><expr pos:start="571:25" pos:end="571:72"><name pos:start="571:25" pos:end="571:48"><name pos:start="571:25" pos:end="571:26">st</name><operator pos:start="571:27" pos:end="571:28">-&gt;</operator><name pos:start="571:29" pos:end="571:36">codecpar</name><operator pos:start="571:37" pos:end="571:38">-&gt;</operator><name pos:start="571:39" pos:end="571:48">codec_type</name></name> <operator pos:start="571:50" pos:end="571:50">=</operator> <name pos:start="571:52" pos:end="571:72">AVMEDIA_TYPE_SUBTITLE</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="573:25" pos:end="573:56"><expr pos:start="573:25" pos:end="573:55"><name pos:start="573:25" pos:end="573:47"><name pos:start="573:25" pos:end="573:26">st</name><operator pos:start="573:27" pos:end="573:28">-&gt;</operator><name pos:start="573:29" pos:end="573:36">codecpar</name><operator pos:start="573:37" pos:end="573:38">-&gt;</operator><name pos:start="573:39" pos:end="573:47">codec_tag</name></name>  <operator pos:start="573:50" pos:end="573:50">=</operator> <name pos:start="573:52" pos:end="573:55">tag1</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="575:25" pos:end="575:68"><expr pos:start="575:25" pos:end="575:67"><name pos:start="575:25" pos:end="575:46"><name pos:start="575:25" pos:end="575:26">st</name><operator pos:start="575:27" pos:end="575:28">-&gt;</operator><name pos:start="575:29" pos:end="575:36">codecpar</name><operator pos:start="575:37" pos:end="575:38">-&gt;</operator><name pos:start="575:39" pos:end="575:46">codec_id</name></name>   <operator pos:start="575:50" pos:end="575:50">=</operator> <name pos:start="575:52" pos:end="575:67">AV_CODEC_ID_XSUB</name></expr>;</expr_stmt>

                        <break pos:start="577:25" pos:end="577:30">break;</break>




                    <if_stmt pos:start="582:21" pos:end="1148:13"><if pos:start="582:21" pos:end="1148:13">if <condition pos:start="582:24" pos:end="582:79">(<expr pos:start="582:25" pos:end="582:78"><name pos:start="582:25" pos:end="582:28">size</name> <operator pos:start="582:30" pos:end="582:30">&gt;</operator> <literal type="number" pos:start="582:32" pos:end="582:33">10</literal> <operator pos:start="582:35" pos:end="582:35">*</operator> <literal type="number" pos:start="582:37" pos:end="582:37">4</literal> <operator pos:start="582:39" pos:end="582:40">&amp;&amp;</operator> <name pos:start="582:42" pos:end="582:45">size</name> <operator pos:start="582:47" pos:end="582:47">&lt;</operator> <operator pos:start="582:49" pos:end="582:49">(</operator><literal type="number" pos:start="582:50" pos:end="582:50">1</literal> <operator pos:start="582:52" pos:end="582:53">&lt;&lt;</operator> <literal type="number" pos:start="582:55" pos:end="582:56">30</literal><operator pos:start="582:57" pos:end="582:57">)</operator> <operator pos:start="582:59" pos:end="582:60">&amp;&amp;</operator> <name pos:start="582:62" pos:end="582:65">size</name> <operator pos:start="582:67" pos:end="582:67">&lt;</operator> <name pos:start="582:69" pos:end="582:78"><name pos:start="582:69" pos:end="582:71">avi</name><operator pos:start="582:72" pos:end="582:73">-&gt;</operator><name pos:start="582:74" pos:end="582:78">fsize</name></name></expr>)</condition> <block pos:start="582:81" pos:end="1148:13">{<block_content pos:start="584:25" pos:end="1148:13">

                        <if_stmt pos:start="584:25" pos:end="590:74"><if pos:start="584:25" pos:end="588:25">if <condition pos:start="584:28" pos:end="584:57">(<expr pos:start="584:29" pos:end="584:56"><name pos:start="584:29" pos:end="584:33">esize</name> <operator pos:start="584:35" pos:end="584:36">==</operator> <name pos:start="584:38" pos:end="584:41">size</name><operator pos:start="584:42" pos:end="584:42">-</operator><literal type="number" pos:start="584:43" pos:end="584:43">1</literal> <operator pos:start="584:45" pos:end="584:46">&amp;&amp;</operator> <operator pos:start="584:48" pos:end="584:48">(</operator><name pos:start="584:49" pos:end="584:53">esize</name><operator pos:start="584:54" pos:end="584:54">&amp;</operator><literal type="number" pos:start="584:55" pos:end="584:55">1</literal><operator pos:start="584:56" pos:end="584:56">)</operator></expr>)</condition> <block pos:start="584:59" pos:end="588:25">{<block_content pos:start="586:29" pos:end="586:74">

                            <expr_stmt pos:start="586:29" pos:end="586:74"><expr pos:start="586:29" pos:end="586:73"><name pos:start="586:29" pos:end="586:56"><name pos:start="586:29" pos:end="586:30">st</name><operator pos:start="586:31" pos:end="586:32">-&gt;</operator><name pos:start="586:33" pos:end="586:40">codecpar</name><operator pos:start="586:41" pos:end="586:42">-&gt;</operator><name pos:start="586:43" pos:end="586:56">extradata_size</name></name> <operator pos:start="586:58" pos:end="586:58">=</operator> <name pos:start="586:60" pos:end="586:64">esize</name> <operator pos:start="586:66" pos:end="586:66">-</operator> <literal type="number" pos:start="586:68" pos:end="586:69">10</literal> <operator pos:start="586:71" pos:end="586:71">*</operator> <literal type="number" pos:start="586:73" pos:end="586:73">4</literal></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="588:27" pos:end="590:74">else<block type="pseudo" pos:start="590:29" pos:end="590:74"><block_content pos:start="590:29" pos:end="590:74">

                            <expr_stmt pos:start="590:29" pos:end="590:74"><expr pos:start="590:29" pos:end="590:73"><name pos:start="590:29" pos:end="590:56"><name pos:start="590:29" pos:end="590:30">st</name><operator pos:start="590:31" pos:end="590:32">-&gt;</operator><name pos:start="590:33" pos:end="590:40">codecpar</name><operator pos:start="590:41" pos:end="590:42">-&gt;</operator><name pos:start="590:43" pos:end="590:56">extradata_size</name></name> <operator pos:start="590:58" pos:end="590:58">=</operator>  <name pos:start="590:61" pos:end="590:64">size</name> <operator pos:start="590:66" pos:end="590:66">-</operator> <literal type="number" pos:start="590:68" pos:end="590:69">10</literal> <operator pos:start="590:71" pos:end="590:71">*</operator> <literal type="number" pos:start="590:73" pos:end="590:73">4</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>





                        <if_stmt pos:start="596:25" pos:end="598:51"><if pos:start="596:25" pos:end="598:51">if <condition pos:start="596:28" pos:end="596:100">(<expr pos:start="596:29" pos:end="596:99"><call pos:start="596:29" pos:end="596:95"><name pos:start="596:29" pos:end="596:44">ff_get_extradata</name><argument_list pos:start="596:45" pos:end="596:95">(<argument pos:start="596:46" pos:end="596:46"><expr pos:start="596:46" pos:end="596:46"><name pos:start="596:46" pos:end="596:46">s</name></expr></argument>, <argument pos:start="596:49" pos:end="596:60"><expr pos:start="596:49" pos:end="596:60"><name pos:start="596:49" pos:end="596:60"><name pos:start="596:49" pos:end="596:50">st</name><operator pos:start="596:51" pos:end="596:52">-&gt;</operator><name pos:start="596:53" pos:end="596:60">codecpar</name></name></expr></argument>, <argument pos:start="596:63" pos:end="596:64"><expr pos:start="596:63" pos:end="596:64"><name pos:start="596:63" pos:end="596:64">pb</name></expr></argument>, <argument pos:start="596:67" pos:end="596:94"><expr pos:start="596:67" pos:end="596:94"><name pos:start="596:67" pos:end="596:94"><name pos:start="596:67" pos:end="596:68">st</name><operator pos:start="596:69" pos:end="596:70">-&gt;</operator><name pos:start="596:71" pos:end="596:78">codecpar</name><operator pos:start="596:79" pos:end="596:80">-&gt;</operator><name pos:start="596:81" pos:end="596:94">extradata_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="596:97" pos:end="596:97">&lt;</operator> <literal type="number" pos:start="596:99" pos:end="596:99">0</literal></expr>)</condition><block type="pseudo" pos:start="598:29" pos:end="598:51"><block_content pos:start="598:29" pos:end="598:51">

                            <return pos:start="598:29" pos:end="598:51">return <expr pos:start="598:36" pos:end="598:50"><call pos:start="598:36" pos:end="598:50"><name pos:start="598:36" pos:end="598:42">AVERROR</name><argument_list pos:start="598:43" pos:end="598:50">(<argument pos:start="598:44" pos:end="598:49"><expr pos:start="598:44" pos:end="598:49"><name pos:start="598:44" pos:end="598:49">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>




                    <comment type="line" pos:start="603:21" pos:end="603:76">// FIXME: check if the encoder really did this correctly</comment>

                    <if_stmt pos:start="605:21" pos:end="607:36"><if pos:start="605:21" pos:end="607:36">if <condition pos:start="605:24" pos:end="605:57">(<expr pos:start="605:25" pos:end="605:56"><name pos:start="605:25" pos:end="605:52"><name pos:start="605:25" pos:end="605:26">st</name><operator pos:start="605:27" pos:end="605:28">-&gt;</operator><name pos:start="605:29" pos:end="605:36">codecpar</name><operator pos:start="605:37" pos:end="605:38">-&gt;</operator><name pos:start="605:39" pos:end="605:52">extradata_size</name></name> <operator pos:start="605:54" pos:end="605:54">&amp;</operator> <literal type="number" pos:start="605:56" pos:end="605:56">1</literal></expr>)</condition><block type="pseudo" pos:start="607:25" pos:end="607:36"><block_content pos:start="607:25" pos:end="607:36">

                        <expr_stmt pos:start="607:25" pos:end="607:36"><expr pos:start="607:25" pos:end="607:35"><call pos:start="607:25" pos:end="607:35"><name pos:start="607:25" pos:end="607:31">avio_r8</name><argument_list pos:start="607:32" pos:end="607:35">(<argument pos:start="607:33" pos:end="607:34"><expr pos:start="607:33" pos:end="607:34"><name pos:start="607:33" pos:end="607:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <comment type="block" pos:start="611:21" pos:end="617:33">/* Extract palette from extradata if bpp &lt;= 8.

                     * This code assumes that extradata contains only palette.

                     * This is true for all paletted codecs implemented in

                     * FFmpeg. */</comment>

                    <if_stmt pos:start="619:21" pos:end="1148:13"><if pos:start="619:21" pos:end="1148:13">if <condition pos:start="619:24" pos:end="621:67">(<expr pos:start="619:25" pos:end="621:66"><name pos:start="619:25" pos:end="619:52"><name pos:start="619:25" pos:end="619:26">st</name><operator pos:start="619:27" pos:end="619:28">-&gt;</operator><name pos:start="619:29" pos:end="619:36">codecpar</name><operator pos:start="619:37" pos:end="619:38">-&gt;</operator><name pos:start="619:39" pos:end="619:52">extradata_size</name></name> <operator pos:start="619:54" pos:end="619:55">&amp;&amp;</operator>

                        <operator pos:start="621:25" pos:end="621:25">(</operator><name pos:start="621:26" pos:end="621:60"><name pos:start="621:26" pos:end="621:27">st</name><operator pos:start="621:28" pos:end="621:29">-&gt;</operator><name pos:start="621:30" pos:end="621:37">codecpar</name><operator pos:start="621:38" pos:end="621:39">-&gt;</operator><name pos:start="621:40" pos:end="621:60">bits_per_coded_sample</name></name> <operator pos:start="621:62" pos:end="621:63">&lt;=</operator> <literal type="number" pos:start="621:65" pos:end="621:65">8</literal><operator pos:start="621:66" pos:end="621:66">)</operator></expr>)</condition> <block pos:start="621:69" pos:end="1148:13">{<block_content pos:start="623:25" pos:end="1148:13">

                        <decl_stmt pos:start="623:25" pos:end="623:87"><decl pos:start="623:25" pos:end="623:86"><type pos:start="623:25" pos:end="623:27"><name pos:start="623:25" pos:end="623:27">int</name></type> <name pos:start="623:29" pos:end="623:36">pal_size</name> <init pos:start="623:38" pos:end="623:86">= <expr pos:start="623:40" pos:end="623:86"><operator pos:start="623:40" pos:end="623:40">(</operator><literal type="number" pos:start="623:41" pos:end="623:41">1</literal> <operator pos:start="623:43" pos:end="623:44">&lt;&lt;</operator> <name pos:start="623:46" pos:end="623:80"><name pos:start="623:46" pos:end="623:47">st</name><operator pos:start="623:48" pos:end="623:49">-&gt;</operator><name pos:start="623:50" pos:end="623:57">codecpar</name><operator pos:start="623:58" pos:end="623:59">-&gt;</operator><name pos:start="623:60" pos:end="623:80">bits_per_coded_sample</name></name><operator pos:start="623:81" pos:end="623:81">)</operator> <operator pos:start="623:83" pos:end="623:84">&lt;&lt;</operator> <literal type="number" pos:start="623:86" pos:end="623:86">2</literal></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="625:25" pos:end="625:47"><decl pos:start="625:25" pos:end="625:46"><type pos:start="625:25" pos:end="625:39"><specifier pos:start="625:25" pos:end="625:29">const</specifier> <name pos:start="625:31" pos:end="625:37">uint8_t</name> <modifier pos:start="625:39" pos:end="625:39">*</modifier></type><name pos:start="625:40" pos:end="625:46">pal_src</name></decl>;</decl_stmt>



                        <expr_stmt pos:start="629:25" pos:end="629:81"><expr pos:start="629:25" pos:end="629:80"><name pos:start="629:25" pos:end="629:32">pal_size</name> <operator pos:start="629:34" pos:end="629:34">=</operator> <call pos:start="629:36" pos:end="629:80"><name pos:start="629:36" pos:end="629:40">FFMIN</name><argument_list pos:start="629:41" pos:end="629:80">(<argument pos:start="629:42" pos:end="629:49"><expr pos:start="629:42" pos:end="629:49"><name pos:start="629:42" pos:end="629:49">pal_size</name></expr></argument>, <argument pos:start="629:52" pos:end="629:79"><expr pos:start="629:52" pos:end="629:79"><name pos:start="629:52" pos:end="629:79"><name pos:start="629:52" pos:end="629:53">st</name><operator pos:start="629:54" pos:end="629:55">-&gt;</operator><name pos:start="629:56" pos:end="629:63">codecpar</name><operator pos:start="629:64" pos:end="629:65">-&gt;</operator><name pos:start="629:66" pos:end="629:79">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="631:25" pos:end="633:75"><expr pos:start="631:25" pos:end="633:74"><name pos:start="631:25" pos:end="631:31">pal_src</name>  <operator pos:start="631:34" pos:end="631:34">=</operator> <name pos:start="631:36" pos:end="631:58"><name pos:start="631:36" pos:end="631:37">st</name><operator pos:start="631:38" pos:end="631:39">-&gt;</operator><name pos:start="631:40" pos:end="631:47">codecpar</name><operator pos:start="631:48" pos:end="631:49">-&gt;</operator><name pos:start="631:50" pos:end="631:58">extradata</name></name> <operator pos:start="631:60" pos:end="631:60">+</operator>

                                   <name pos:start="633:36" pos:end="633:63"><name pos:start="633:36" pos:end="633:37">st</name><operator pos:start="633:38" pos:end="633:39">-&gt;</operator><name pos:start="633:40" pos:end="633:47">codecpar</name><operator pos:start="633:48" pos:end="633:49">-&gt;</operator><name pos:start="633:50" pos:end="633:63">extradata_size</name></name> <operator pos:start="633:65" pos:end="633:65">-</operator> <name pos:start="633:67" pos:end="633:74">pal_size</name></expr>;</expr_stmt>

                        <comment type="block" pos:start="635:25" pos:end="635:75">/* Exclude the "BottomUp" field from the palette */</comment>

                        <if_stmt pos:start="637:25" pos:end="641:41"><if pos:start="637:25" pos:end="641:41">if <condition pos:start="637:28" pos:end="639:111">(<expr pos:start="637:29" pos:end="639:110"><name pos:start="637:29" pos:end="637:35">pal_src</name> <operator pos:start="637:37" pos:end="637:37">-</operator> <name pos:start="637:39" pos:end="637:61"><name pos:start="637:39" pos:end="637:40">st</name><operator pos:start="637:41" pos:end="637:42">-&gt;</operator><name pos:start="637:43" pos:end="637:50">codecpar</name><operator pos:start="637:51" pos:end="637:52">-&gt;</operator><name pos:start="637:53" pos:end="637:61">extradata</name></name> <operator pos:start="637:63" pos:end="637:64">&gt;=</operator> <literal type="number" pos:start="637:66" pos:end="637:66">9</literal> <operator pos:start="637:68" pos:end="637:69">&amp;&amp;</operator>

                            <operator pos:start="639:29" pos:end="639:29">!</operator><call pos:start="639:30" pos:end="639:110"><name pos:start="639:30" pos:end="639:35">memcmp</name><argument_list pos:start="639:36" pos:end="639:110">(<argument pos:start="639:37" pos:end="639:94"><expr pos:start="639:37" pos:end="639:94"><name pos:start="639:37" pos:end="639:59"><name pos:start="639:37" pos:end="639:38">st</name><operator pos:start="639:39" pos:end="639:40">-&gt;</operator><name pos:start="639:41" pos:end="639:48">codecpar</name><operator pos:start="639:49" pos:end="639:50">-&gt;</operator><name pos:start="639:51" pos:end="639:59">extradata</name></name> <operator pos:start="639:61" pos:end="639:61">+</operator> <name pos:start="639:63" pos:end="639:90"><name pos:start="639:63" pos:end="639:64">st</name><operator pos:start="639:65" pos:end="639:66">-&gt;</operator><name pos:start="639:67" pos:end="639:74">codecpar</name><operator pos:start="639:75" pos:end="639:76">-&gt;</operator><name pos:start="639:77" pos:end="639:90">extradata_size</name></name> <operator pos:start="639:92" pos:end="639:92">-</operator> <literal type="number" pos:start="639:94" pos:end="639:94">9</literal></expr></argument>, <argument pos:start="639:97" pos:end="639:106"><expr pos:start="639:97" pos:end="639:106"><literal type="string" pos:start="639:97" pos:end="639:106">"BottomUp"</literal></expr></argument>, <argument pos:start="639:109" pos:end="639:109"><expr pos:start="639:109" pos:end="639:109"><literal type="number" pos:start="639:109" pos:end="639:109">9</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="641:29" pos:end="641:41"><block_content pos:start="641:29" pos:end="641:41">

                            <expr_stmt pos:start="641:29" pos:end="641:41"><expr pos:start="641:29" pos:end="641:40"><name pos:start="641:29" pos:end="641:35">pal_src</name> <operator pos:start="641:37" pos:end="641:38">-=</operator> <literal type="number" pos:start="641:40" pos:end="641:40">9</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <for pos:start="643:25" pos:end="645:75">for <control pos:start="643:29" pos:end="643:58">(<init pos:start="643:30" pos:end="643:35"><expr pos:start="643:30" pos:end="643:34"><name pos:start="643:30" pos:end="643:30">i</name> <operator pos:start="643:32" pos:end="643:32">=</operator> <literal type="number" pos:start="643:34" pos:end="643:34">0</literal></expr>;</init> <condition pos:start="643:37" pos:end="643:53"><expr pos:start="643:37" pos:end="643:52"><name pos:start="643:37" pos:end="643:37">i</name> <operator pos:start="643:39" pos:end="643:39">&lt;</operator> <name pos:start="643:41" pos:end="643:48">pal_size</name> <operator pos:start="643:50" pos:end="643:50">/</operator> <literal type="number" pos:start="643:52" pos:end="643:52">4</literal></expr>;</condition> <incr pos:start="643:55" pos:end="643:57"><expr pos:start="643:55" pos:end="643:57"><name pos:start="643:55" pos:end="643:55">i</name><operator pos:start="643:56" pos:end="643:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="645:29" pos:end="645:75"><block_content pos:start="645:29" pos:end="645:75">

                            <expr_stmt pos:start="645:29" pos:end="645:75"><expr pos:start="645:29" pos:end="645:74"><name pos:start="645:29" pos:end="645:39"><name pos:start="645:29" pos:end="645:31">ast</name><operator pos:start="645:32" pos:end="645:33">-&gt;</operator><name pos:start="645:34" pos:end="645:36">pal</name><index pos:start="645:37" pos:end="645:39">[<expr pos:start="645:38" pos:end="645:38"><name pos:start="645:38" pos:end="645:38">i</name></expr>]</index></name> <operator pos:start="645:41" pos:end="645:41">=</operator> <literal type="number" pos:start="645:43" pos:end="645:47">0xFFU</literal><operator pos:start="645:48" pos:end="645:49">&lt;&lt;</operator><literal type="number" pos:start="645:50" pos:end="645:51">24</literal> <operator pos:start="645:53" pos:end="645:53">|</operator> <call pos:start="645:55" pos:end="645:74"><name pos:start="645:55" pos:end="645:61">AV_RL32</name><argument_list pos:start="645:62" pos:end="645:74">(<argument pos:start="645:63" pos:end="645:73"><expr pos:start="645:63" pos:end="645:73"><name pos:start="645:63" pos:end="645:69">pal_src</name><operator pos:start="645:70" pos:end="645:70">+</operator><literal type="number" pos:start="645:71" pos:end="645:71">4</literal><operator pos:start="645:72" pos:end="645:72">*</operator><name pos:start="645:73" pos:end="645:73">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                        <expr_stmt pos:start="647:25" pos:end="647:41"><expr pos:start="647:25" pos:end="647:40"><name pos:start="647:25" pos:end="647:36"><name pos:start="647:25" pos:end="647:27">ast</name><operator pos:start="647:28" pos:end="647:29">-&gt;</operator><name pos:start="647:30" pos:end="647:36">has_pal</name></name> <operator pos:start="647:38" pos:end="647:38">=</operator> <literal type="number" pos:start="647:40" pos:end="647:40">1</literal></expr>;</expr_stmt>




                    <expr_stmt pos:start="652:21" pos:end="652:48"><expr pos:start="652:21" pos:end="652:47"><call pos:start="652:21" pos:end="652:47"><name pos:start="652:21" pos:end="652:29">print_tag</name><argument_list pos:start="652:30" pos:end="652:47">(<argument pos:start="652:31" pos:end="652:37"><expr pos:start="652:31" pos:end="652:37"><literal type="string" pos:start="652:31" pos:end="652:37">"video"</literal></expr></argument>, <argument pos:start="652:40" pos:end="652:43"><expr pos:start="652:40" pos:end="652:43"><name pos:start="652:40" pos:end="652:43">tag1</name></expr></argument>, <argument pos:start="652:46" pos:end="652:46"><expr pos:start="652:46" pos:end="652:46"><literal type="number" pos:start="652:46" pos:end="652:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="656:21" pos:end="656:66"><expr pos:start="656:21" pos:end="656:65"><name pos:start="656:21" pos:end="656:44"><name pos:start="656:21" pos:end="656:22">st</name><operator pos:start="656:23" pos:end="656:24">-&gt;</operator><name pos:start="656:25" pos:end="656:32">codecpar</name><operator pos:start="656:33" pos:end="656:34">-&gt;</operator><name pos:start="656:35" pos:end="656:44">codec_type</name></name> <operator pos:start="656:46" pos:end="656:46">=</operator> <name pos:start="656:48" pos:end="656:65">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="658:21" pos:end="658:52"><expr pos:start="658:21" pos:end="658:51"><name pos:start="658:21" pos:end="658:43"><name pos:start="658:21" pos:end="658:22">st</name><operator pos:start="658:23" pos:end="658:24">-&gt;</operator><name pos:start="658:25" pos:end="658:32">codecpar</name><operator pos:start="658:33" pos:end="658:34">-&gt;</operator><name pos:start="658:35" pos:end="658:43">codec_tag</name></name>  <operator pos:start="658:46" pos:end="658:46">=</operator> <name pos:start="658:48" pos:end="658:51">tag1</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="660:21" pos:end="662:66"><expr pos:start="660:21" pos:end="662:65"><name pos:start="660:21" pos:end="660:42"><name pos:start="660:21" pos:end="660:22">st</name><operator pos:start="660:23" pos:end="660:24">-&gt;</operator><name pos:start="660:25" pos:end="660:32">codecpar</name><operator pos:start="660:33" pos:end="660:34">-&gt;</operator><name pos:start="660:35" pos:end="660:42">codec_id</name></name>   <operator pos:start="660:46" pos:end="660:46">=</operator> <call pos:start="660:48" pos:end="662:65"><name pos:start="660:48" pos:end="660:62">ff_codec_get_id</name><argument_list pos:start="660:63" pos:end="662:65">(<argument pos:start="660:64" pos:end="660:80"><expr pos:start="660:64" pos:end="660:80"><name pos:start="660:64" pos:end="660:80">ff_codec_bmp_tags</name></expr></argument>,

                                                            <argument pos:start="662:61" pos:end="662:64"><expr pos:start="662:61" pos:end="662:64"><name pos:start="662:61" pos:end="662:64">tag1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="664:21" pos:end="664:75">/* If codec is not found yet, try with the mov tags. */</comment>

                    <if_stmt pos:start="666:21" pos:end="1148:13"><if pos:start="666:21" pos:end="1148:13">if <condition pos:start="666:24" pos:end="666:48">(<expr pos:start="666:25" pos:end="666:47"><operator pos:start="666:25" pos:end="666:25">!</operator><name pos:start="666:26" pos:end="666:47"><name pos:start="666:26" pos:end="666:27">st</name><operator pos:start="666:28" pos:end="666:29">-&gt;</operator><name pos:start="666:30" pos:end="666:37">codecpar</name><operator pos:start="666:38" pos:end="666:39">-&gt;</operator><name pos:start="666:40" pos:end="666:47">codec_id</name></name></expr>)</condition> <block pos:start="666:50" pos:end="1148:13">{<block_content pos:start="668:25" pos:end="1148:13">

                        <decl_stmt pos:start="668:25" pos:end="668:41"><decl pos:start="668:25" pos:end="668:40"><type pos:start="668:25" pos:end="668:28"><name pos:start="668:25" pos:end="668:28">char</name></type> <name pos:start="668:30" pos:end="668:40"><name pos:start="668:30" pos:end="668:36">tag_buf</name><index pos:start="668:37" pos:end="668:40">[<expr pos:start="668:38" pos:end="668:39"><literal type="number" pos:start="668:38" pos:end="668:39">32</literal></expr>]</index></name></decl>;</decl_stmt>

                        <expr_stmt pos:start="670:25" pos:end="670:80"><expr pos:start="670:25" pos:end="670:79"><call pos:start="670:25" pos:end="670:79"><name pos:start="670:25" pos:end="670:47">av_get_codec_tag_string</name><argument_list pos:start="670:48" pos:end="670:79">(<argument pos:start="670:49" pos:end="670:55"><expr pos:start="670:49" pos:end="670:55"><name pos:start="670:49" pos:end="670:55">tag_buf</name></expr></argument>, <argument pos:start="670:58" pos:end="670:72"><expr pos:start="670:58" pos:end="670:72"><sizeof pos:start="670:58" pos:end="670:72">sizeof<argument_list pos:start="670:64" pos:end="670:72">(<argument pos:start="670:65" pos:end="670:71"><expr pos:start="670:65" pos:end="670:71"><name pos:start="670:65" pos:end="670:71">tag_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="670:75" pos:end="670:78"><expr pos:start="670:75" pos:end="670:78"><name pos:start="670:75" pos:end="670:78">tag1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="672:25" pos:end="674:74"><expr pos:start="672:25" pos:end="674:73"><name pos:start="672:25" pos:end="672:46"><name pos:start="672:25" pos:end="672:26">st</name><operator pos:start="672:27" pos:end="672:28">-&gt;</operator><name pos:start="672:29" pos:end="672:36">codecpar</name><operator pos:start="672:37" pos:end="672:38">-&gt;</operator><name pos:start="672:39" pos:end="672:46">codec_id</name></name> <operator pos:start="672:48" pos:end="672:48">=</operator>

                            <call pos:start="674:29" pos:end="674:73"><name pos:start="674:29" pos:end="674:43">ff_codec_get_id</name><argument_list pos:start="674:44" pos:end="674:73">(<argument pos:start="674:45" pos:end="674:66"><expr pos:start="674:45" pos:end="674:66"><name pos:start="674:45" pos:end="674:66">ff_codec_movvideo_tags</name></expr></argument>, <argument pos:start="674:69" pos:end="674:72"><expr pos:start="674:69" pos:end="674:72"><name pos:start="674:69" pos:end="674:72">tag1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="676:25" pos:end="682:43"><if pos:start="676:25" pos:end="682:43">if <condition pos:start="676:28" pos:end="676:51">(<expr pos:start="676:29" pos:end="676:50"><name pos:start="676:29" pos:end="676:50"><name pos:start="676:29" pos:end="676:30">st</name><operator pos:start="676:31" pos:end="676:32">-&gt;</operator><name pos:start="676:33" pos:end="676:40">codecpar</name><operator pos:start="676:41" pos:end="676:42">-&gt;</operator><name pos:start="676:43" pos:end="676:50">codec_id</name></name></expr>)</condition><block type="pseudo" pos:start="678:28" pos:end="682:43"><block_content pos:start="678:28" pos:end="682:43">

                           <expr_stmt pos:start="678:28" pos:end="682:43"><expr pos:start="678:28" pos:end="682:42"><call pos:start="678:28" pos:end="682:42"><name pos:start="678:28" pos:end="678:33">av_log</name><argument_list pos:start="678:34" pos:end="682:42">(<argument pos:start="678:35" pos:end="678:35"><expr pos:start="678:35" pos:end="678:35"><name pos:start="678:35" pos:end="678:35">s</name></expr></argument>, <argument pos:start="678:38" pos:end="678:51"><expr pos:start="678:38" pos:end="678:51"><name pos:start="678:38" pos:end="678:51">AV_LOG_WARNING</name></expr></argument>,

                                  <argument pos:start="680:35" pos:end="680:70"><expr pos:start="680:35" pos:end="680:70"><literal type="string" pos:start="680:35" pos:end="680:70">"mov tag found in avi (fourcc %s)\n"</literal></expr></argument>,

                                  <argument pos:start="682:35" pos:end="682:41"><expr pos:start="682:35" pos:end="682:41"><name pos:start="682:35" pos:end="682:41">tag_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>


                    <comment type="block" pos:start="685:21" pos:end="687:53">/* This is needed to get the pict type which is necessary

                     * for generating correct pts. */</comment>

                    <expr_stmt pos:start="689:21" pos:end="689:62"><expr pos:start="689:21" pos:end="689:61"><name pos:start="689:21" pos:end="689:36"><name pos:start="689:21" pos:end="689:22">st</name><operator pos:start="689:23" pos:end="689:24">-&gt;</operator><name pos:start="689:25" pos:end="689:36">need_parsing</name></name> <operator pos:start="689:38" pos:end="689:38">=</operator> <name pos:start="689:40" pos:end="689:61">AVSTREAM_PARSE_HEADERS</name></expr>;</expr_stmt>



                    <if_stmt pos:start="693:21" pos:end="697:76"><if pos:start="693:21" pos:end="697:76">if <condition pos:start="693:24" pos:end="695:66">(<expr pos:start="693:25" pos:end="695:65"><name pos:start="693:25" pos:end="693:46"><name pos:start="693:25" pos:end="693:26">st</name><operator pos:start="693:27" pos:end="693:28">-&gt;</operator><name pos:start="693:29" pos:end="693:36">codecpar</name><operator pos:start="693:37" pos:end="693:38">-&gt;</operator><name pos:start="693:39" pos:end="693:46">codec_id</name></name> <operator pos:start="693:48" pos:end="693:49">==</operator> <name pos:start="693:51" pos:end="693:67">AV_CODEC_ID_MPEG4</name> <operator pos:start="693:69" pos:end="693:70">&amp;&amp;</operator>

                        <name pos:start="695:25" pos:end="695:36"><name pos:start="695:25" pos:end="695:27">ast</name><operator pos:start="695:28" pos:end="695:29">-&gt;</operator><name pos:start="695:30" pos:end="695:36">handler</name></name> <operator pos:start="695:38" pos:end="695:39">==</operator> <call pos:start="695:41" pos:end="695:65"><name pos:start="695:41" pos:end="695:45">MKTAG</name><argument_list pos:start="695:46" pos:end="695:65">(<argument pos:start="695:47" pos:end="695:49"><expr pos:start="695:47" pos:end="695:49"><literal type="char" pos:start="695:47" pos:end="695:49">'X'</literal></expr></argument>, <argument pos:start="695:52" pos:end="695:54"><expr pos:start="695:52" pos:end="695:54"><literal type="char" pos:start="695:52" pos:end="695:54">'V'</literal></expr></argument>, <argument pos:start="695:57" pos:end="695:59"><expr pos:start="695:57" pos:end="695:59"><literal type="char" pos:start="695:57" pos:end="695:59">'I'</literal></expr></argument>, <argument pos:start="695:62" pos:end="695:64"><expr pos:start="695:62" pos:end="695:64"><literal type="char" pos:start="695:62" pos:end="695:64">'D'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="697:25" pos:end="697:76"><block_content pos:start="697:25" pos:end="697:76">

                        <expr_stmt pos:start="697:25" pos:end="697:76"><expr pos:start="697:25" pos:end="697:75"><name pos:start="697:25" pos:end="697:47"><name pos:start="697:25" pos:end="697:26">st</name><operator pos:start="697:27" pos:end="697:28">-&gt;</operator><name pos:start="697:29" pos:end="697:36">codecpar</name><operator pos:start="697:37" pos:end="697:38">-&gt;</operator><name pos:start="697:39" pos:end="697:47">codec_tag</name></name> <operator pos:start="697:49" pos:end="697:49">=</operator> <call pos:start="697:51" pos:end="697:75"><name pos:start="697:51" pos:end="697:55">MKTAG</name><argument_list pos:start="697:56" pos:end="697:75">(<argument pos:start="697:57" pos:end="697:59"><expr pos:start="697:57" pos:end="697:59"><literal type="char" pos:start="697:57" pos:end="697:59">'X'</literal></expr></argument>, <argument pos:start="697:62" pos:end="697:64"><expr pos:start="697:62" pos:end="697:64"><literal type="char" pos:start="697:62" pos:end="697:64">'V'</literal></expr></argument>, <argument pos:start="697:67" pos:end="697:69"><expr pos:start="697:67" pos:end="697:69"><literal type="char" pos:start="697:67" pos:end="697:69">'I'</literal></expr></argument>, <argument pos:start="697:72" pos:end="697:74"><expr pos:start="697:72" pos:end="697:74"><literal type="char" pos:start="697:72" pos:end="697:74">'D'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <if_stmt pos:start="701:21" pos:end="703:63"><if pos:start="701:21" pos:end="703:63">if <condition pos:start="701:24" pos:end="701:77">(<expr pos:start="701:25" pos:end="701:76"><name pos:start="701:25" pos:end="701:47"><name pos:start="701:25" pos:end="701:26">st</name><operator pos:start="701:27" pos:end="701:28">-&gt;</operator><name pos:start="701:29" pos:end="701:36">codecpar</name><operator pos:start="701:37" pos:end="701:38">-&gt;</operator><name pos:start="701:39" pos:end="701:47">codec_tag</name></name> <operator pos:start="701:49" pos:end="701:50">==</operator> <call pos:start="701:52" pos:end="701:76"><name pos:start="701:52" pos:end="701:56">MKTAG</name><argument_list pos:start="701:57" pos:end="701:76">(<argument pos:start="701:58" pos:end="701:60"><expr pos:start="701:58" pos:end="701:60"><literal type="char" pos:start="701:58" pos:end="701:60">'V'</literal></expr></argument>, <argument pos:start="701:63" pos:end="701:65"><expr pos:start="701:63" pos:end="701:65"><literal type="char" pos:start="701:63" pos:end="701:65">'S'</literal></expr></argument>, <argument pos:start="701:68" pos:end="701:70"><expr pos:start="701:68" pos:end="701:70"><literal type="char" pos:start="701:68" pos:end="701:70">'S'</literal></expr></argument>, <argument pos:start="701:73" pos:end="701:75"><expr pos:start="701:73" pos:end="701:75"><literal type="char" pos:start="701:73" pos:end="701:75">'H'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="703:25" pos:end="703:63"><block_content pos:start="703:25" pos:end="703:63">

                        <expr_stmt pos:start="703:25" pos:end="703:63"><expr pos:start="703:25" pos:end="703:62"><name pos:start="703:25" pos:end="703:40"><name pos:start="703:25" pos:end="703:26">st</name><operator pos:start="703:27" pos:end="703:28">-&gt;</operator><name pos:start="703:29" pos:end="703:40">need_parsing</name></name> <operator pos:start="703:42" pos:end="703:42">=</operator> <name pos:start="703:44" pos:end="703:62">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="705:21" pos:end="707:63"><if pos:start="705:21" pos:end="707:63">if <condition pos:start="705:24" pos:end="705:67">(<expr pos:start="705:25" pos:end="705:66"><name pos:start="705:25" pos:end="705:46"><name pos:start="705:25" pos:end="705:26">st</name><operator pos:start="705:27" pos:end="705:28">-&gt;</operator><name pos:start="705:29" pos:end="705:36">codecpar</name><operator pos:start="705:37" pos:end="705:38">-&gt;</operator><name pos:start="705:39" pos:end="705:46">codec_id</name></name> <operator pos:start="705:48" pos:end="705:49">==</operator> <name pos:start="705:51" pos:end="705:66">AV_CODEC_ID_RV40</name></expr>)</condition><block type="pseudo" pos:start="707:25" pos:end="707:63"><block_content pos:start="707:25" pos:end="707:63">

                        <expr_stmt pos:start="707:25" pos:end="707:63"><expr pos:start="707:25" pos:end="707:62"><name pos:start="707:25" pos:end="707:40"><name pos:start="707:25" pos:end="707:26">st</name><operator pos:start="707:27" pos:end="707:28">-&gt;</operator><name pos:start="707:29" pos:end="707:40">need_parsing</name></name> <operator pos:start="707:42" pos:end="707:42">=</operator> <name pos:start="707:44" pos:end="707:62">AVSTREAM_PARSE_NONE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <if_stmt pos:start="711:21" pos:end="1148:13"><if pos:start="711:21" pos:end="1148:13">if <condition pos:start="711:24" pos:end="713:64">(<expr pos:start="711:25" pos:end="713:63"><name pos:start="711:25" pos:end="711:47"><name pos:start="711:25" pos:end="711:26">st</name><operator pos:start="711:27" pos:end="711:28">-&gt;</operator><name pos:start="711:29" pos:end="711:36">codecpar</name><operator pos:start="711:37" pos:end="711:38">-&gt;</operator><name pos:start="711:39" pos:end="711:47">codec_tag</name></name> <operator pos:start="711:49" pos:end="711:50">==</operator> <literal type="number" pos:start="711:52" pos:end="711:52">0</literal> <operator pos:start="711:54" pos:end="711:55">&amp;&amp;</operator> <name pos:start="711:57" pos:end="711:76"><name pos:start="711:57" pos:end="711:58">st</name><operator pos:start="711:59" pos:end="711:60">-&gt;</operator><name pos:start="711:61" pos:end="711:68">codecpar</name><operator pos:start="711:69" pos:end="711:70">-&gt;</operator><name pos:start="711:71" pos:end="711:76">height</name></name> <operator pos:start="711:78" pos:end="711:78">&gt;</operator> <literal type="number" pos:start="711:80" pos:end="711:80">0</literal> <operator pos:start="711:82" pos:end="711:83">&amp;&amp;</operator>

                        <name pos:start="713:25" pos:end="713:52"><name pos:start="713:25" pos:end="713:26">st</name><operator pos:start="713:27" pos:end="713:28">-&gt;</operator><name pos:start="713:29" pos:end="713:36">codecpar</name><operator pos:start="713:37" pos:end="713:38">-&gt;</operator><name pos:start="713:39" pos:end="713:52">extradata_size</name></name> <operator pos:start="713:54" pos:end="713:54">&lt;</operator> <literal type="number" pos:start="713:56" pos:end="713:57">1U</literal> <operator pos:start="713:59" pos:end="713:60">&lt;&lt;</operator> <literal type="number" pos:start="713:62" pos:end="713:63">30</literal></expr>)</condition> <block pos:start="713:66" pos:end="1148:13">{<block_content pos:start="715:25" pos:end="1148:13">

                        <expr_stmt pos:start="715:25" pos:end="715:58"><expr pos:start="715:25" pos:end="715:57"><name pos:start="715:25" pos:end="715:52"><name pos:start="715:25" pos:end="715:26">st</name><operator pos:start="715:27" pos:end="715:28">-&gt;</operator><name pos:start="715:29" pos:end="715:36">codecpar</name><operator pos:start="715:37" pos:end="715:38">-&gt;</operator><name pos:start="715:39" pos:end="715:52">extradata_size</name></name> <operator pos:start="715:54" pos:end="715:55">+=</operator> <literal type="number" pos:start="715:57" pos:end="715:57">9</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="717:25" pos:end="731:50"><if pos:start="717:25" pos:end="727:25">if <condition pos:start="717:28" pos:end="721:82">(<expr pos:start="717:29" pos:end="721:81"><operator pos:start="717:29" pos:end="717:29">(</operator><name pos:start="717:30" pos:end="717:32">ret</name> <operator pos:start="717:34" pos:end="717:34">=</operator> <call pos:start="717:36" pos:end="721:76"><name pos:start="717:36" pos:end="717:46">av_reallocp</name><argument_list pos:start="717:47" pos:end="721:76">(<argument pos:start="717:48" pos:end="717:71"><expr pos:start="717:48" pos:end="717:71"><operator pos:start="717:48" pos:end="717:48">&amp;</operator><name pos:start="717:49" pos:end="717:71"><name pos:start="717:49" pos:end="717:50">st</name><operator pos:start="717:51" pos:end="717:52">-&gt;</operator><name pos:start="717:53" pos:end="717:60">codecpar</name><operator pos:start="717:61" pos:end="717:62">-&gt;</operator><name pos:start="717:63" pos:end="717:71">extradata</name></name></expr></argument>,

                                               <argument pos:start="719:48" pos:end="721:75"><expr pos:start="719:48" pos:end="721:75"><name pos:start="719:48" pos:end="719:75"><name pos:start="719:48" pos:end="719:49">st</name><operator pos:start="719:50" pos:end="719:51">-&gt;</operator><name pos:start="719:52" pos:end="719:59">codecpar</name><operator pos:start="719:60" pos:end="719:61">-&gt;</operator><name pos:start="719:62" pos:end="719:75">extradata_size</name></name> <operator pos:start="719:77" pos:end="719:77">+</operator>

                                               <name pos:start="721:48" pos:end="721:75">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="721:77" pos:end="721:77">)</operator> <operator pos:start="721:79" pos:end="721:79">&lt;</operator> <literal type="number" pos:start="721:81" pos:end="721:81">0</literal></expr>)</condition> <block pos:start="721:84" pos:end="727:25">{<block_content pos:start="723:29" pos:end="725:39">

                            <expr_stmt pos:start="723:29" pos:end="723:61"><expr pos:start="723:29" pos:end="723:60"><name pos:start="723:29" pos:end="723:56"><name pos:start="723:29" pos:end="723:30">st</name><operator pos:start="723:31" pos:end="723:32">-&gt;</operator><name pos:start="723:33" pos:end="723:40">codecpar</name><operator pos:start="723:41" pos:end="723:42">-&gt;</operator><name pos:start="723:43" pos:end="723:56">extradata_size</name></name> <operator pos:start="723:58" pos:end="723:58">=</operator> <literal type="number" pos:start="723:60" pos:end="723:60">0</literal></expr>;</expr_stmt>

                            <return pos:start="725:29" pos:end="725:39">return <expr pos:start="725:36" pos:end="725:38"><name pos:start="725:36" pos:end="725:38">ret</name></expr>;</return>

                        </block_content>}</block></if> <else pos:start="727:27" pos:end="731:50">else<block type="pseudo" pos:start="729:29" pos:end="731:50"><block_content pos:start="729:29" pos:end="731:50">

                            <expr_stmt pos:start="729:29" pos:end="731:50"><expr pos:start="729:29" pos:end="731:49"><call pos:start="729:29" pos:end="731:49"><name pos:start="729:29" pos:end="729:34">memcpy</name><argument_list pos:start="729:35" pos:end="731:49">(<argument pos:start="729:36" pos:end="729:93"><expr pos:start="729:36" pos:end="729:93"><name pos:start="729:36" pos:end="729:58"><name pos:start="729:36" pos:end="729:37">st</name><operator pos:start="729:38" pos:end="729:39">-&gt;</operator><name pos:start="729:40" pos:end="729:47">codecpar</name><operator pos:start="729:48" pos:end="729:49">-&gt;</operator><name pos:start="729:50" pos:end="729:58">extradata</name></name> <operator pos:start="729:60" pos:end="729:60">+</operator> <name pos:start="729:62" pos:end="729:89"><name pos:start="729:62" pos:end="729:63">st</name><operator pos:start="729:64" pos:end="729:65">-&gt;</operator><name pos:start="729:66" pos:end="729:73">codecpar</name><operator pos:start="729:74" pos:end="729:75">-&gt;</operator><name pos:start="729:76" pos:end="729:89">extradata_size</name></name> <operator pos:start="729:91" pos:end="729:91">-</operator> <literal type="number" pos:start="729:93" pos:end="729:93">9</literal></expr></argument>,

                                   <argument pos:start="731:36" pos:end="731:45"><expr pos:start="731:36" pos:end="731:45"><literal type="string" pos:start="731:36" pos:end="731:45">"BottomUp"</literal></expr></argument>, <argument pos:start="731:48" pos:end="731:48"><expr pos:start="731:48" pos:end="731:48"><literal type="number" pos:start="731:48" pos:end="731:48">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>


                    <expr_stmt pos:start="734:21" pos:end="734:71"><expr pos:start="734:21" pos:end="734:70"><name pos:start="734:21" pos:end="734:40"><name pos:start="734:21" pos:end="734:22">st</name><operator pos:start="734:23" pos:end="734:24">-&gt;</operator><name pos:start="734:25" pos:end="734:32">codecpar</name><operator pos:start="734:33" pos:end="734:34">-&gt;</operator><name pos:start="734:35" pos:end="734:40">height</name></name> <operator pos:start="734:42" pos:end="734:42">=</operator> <call pos:start="734:44" pos:end="734:70"><name pos:start="734:44" pos:end="734:48">FFABS</name><argument_list pos:start="734:49" pos:end="734:70">(<argument pos:start="734:50" pos:end="734:69"><expr pos:start="734:50" pos:end="734:69"><name pos:start="734:50" pos:end="734:69"><name pos:start="734:50" pos:end="734:51">st</name><operator pos:start="734:52" pos:end="734:53">-&gt;</operator><name pos:start="734:54" pos:end="734:61">codecpar</name><operator pos:start="734:62" pos:end="734:63">-&gt;</operator><name pos:start="734:64" pos:end="734:69">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<comment type="line" pos:start="738:1" pos:end="738:50">//                    avio_skip(pb, size - 5 * 4);</comment>

                    <break pos:start="740:21" pos:end="740:26">break;</break>

                <case pos:start="742:17" pos:end="742:40">case <expr pos:start="742:22" pos:end="742:39"><name pos:start="742:22" pos:end="742:39">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                    <expr_stmt pos:start="744:21" pos:end="744:74"><expr pos:start="744:21" pos:end="744:73"><name pos:start="744:21" pos:end="744:23">ret</name> <operator pos:start="744:25" pos:end="744:25">=</operator> <call pos:start="744:27" pos:end="744:73"><name pos:start="744:27" pos:end="744:43">ff_get_wav_header</name><argument_list pos:start="744:44" pos:end="744:73">(<argument pos:start="744:45" pos:end="744:45"><expr pos:start="744:45" pos:end="744:45"><name pos:start="744:45" pos:end="744:45">s</name></expr></argument>, <argument pos:start="744:48" pos:end="744:49"><expr pos:start="744:48" pos:end="744:49"><name pos:start="744:48" pos:end="744:49">pb</name></expr></argument>, <argument pos:start="744:52" pos:end="744:63"><expr pos:start="744:52" pos:end="744:63"><name pos:start="744:52" pos:end="744:63"><name pos:start="744:52" pos:end="744:53">st</name><operator pos:start="744:54" pos:end="744:55">-&gt;</operator><name pos:start="744:56" pos:end="744:63">codecpar</name></name></expr></argument>, <argument pos:start="744:66" pos:end="744:69"><expr pos:start="744:66" pos:end="744:69"><name pos:start="744:66" pos:end="744:69">size</name></expr></argument>, <argument pos:start="744:72" pos:end="744:72"><expr pos:start="744:72" pos:end="744:72"><literal type="number" pos:start="744:72" pos:end="744:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="746:21" pos:end="748:35"><if pos:start="746:21" pos:end="748:35">if <condition pos:start="746:24" pos:end="746:32">(<expr pos:start="746:25" pos:end="746:31"><name pos:start="746:25" pos:end="746:27">ret</name> <operator pos:start="746:29" pos:end="746:29">&lt;</operator> <literal type="number" pos:start="746:31" pos:end="746:31">0</literal></expr>)</condition><block type="pseudo" pos:start="748:25" pos:end="748:35"><block_content pos:start="748:25" pos:end="748:35">

                        <return pos:start="748:25" pos:end="748:35">return <expr pos:start="748:32" pos:end="748:34"><name pos:start="748:32" pos:end="748:34">ret</name></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="750:21" pos:end="750:71"><expr pos:start="750:21" pos:end="750:70"><name pos:start="750:21" pos:end="750:42"><name pos:start="750:21" pos:end="750:23">ast</name><operator pos:start="750:24" pos:end="750:25">-&gt;</operator><name pos:start="750:26" pos:end="750:42">dshow_block_align</name></name> <operator pos:start="750:44" pos:end="750:44">=</operator> <name pos:start="750:46" pos:end="750:70"><name pos:start="750:46" pos:end="750:47">st</name><operator pos:start="750:48" pos:end="750:49">-&gt;</operator><name pos:start="750:50" pos:end="750:57">codecpar</name><operator pos:start="750:58" pos:end="750:59">-&gt;</operator><name pos:start="750:60" pos:end="750:70">block_align</name></name></expr>;</expr_stmt>

                    <if_stmt pos:start="752:21" pos:end="1148:13"><if pos:start="752:21" pos:end="1148:13">if <condition pos:start="752:24" pos:end="754:70">(<expr pos:start="752:25" pos:end="754:69"><name pos:start="752:25" pos:end="752:40"><name pos:start="752:25" pos:end="752:27">ast</name><operator pos:start="752:28" pos:end="752:29">-&gt;</operator><name pos:start="752:30" pos:end="752:40">sample_size</name></name> <operator pos:start="752:42" pos:end="752:43">&amp;&amp;</operator> <name pos:start="752:45" pos:end="752:69"><name pos:start="752:45" pos:end="752:46">st</name><operator pos:start="752:47" pos:end="752:48">-&gt;</operator><name pos:start="752:49" pos:end="752:56">codecpar</name><operator pos:start="752:57" pos:end="752:58">-&gt;</operator><name pos:start="752:59" pos:end="752:69">block_align</name></name> <operator pos:start="752:71" pos:end="752:72">&amp;&amp;</operator>

                        <name pos:start="754:25" pos:end="754:40"><name pos:start="754:25" pos:end="754:27">ast</name><operator pos:start="754:28" pos:end="754:29">-&gt;</operator><name pos:start="754:30" pos:end="754:40">sample_size</name></name> <operator pos:start="754:42" pos:end="754:43">!=</operator> <name pos:start="754:45" pos:end="754:69"><name pos:start="754:45" pos:end="754:46">st</name><operator pos:start="754:47" pos:end="754:48">-&gt;</operator><name pos:start="754:49" pos:end="754:56">codecpar</name><operator pos:start="754:57" pos:end="754:58">-&gt;</operator><name pos:start="754:59" pos:end="754:69">block_align</name></name></expr>)</condition> <block pos:start="754:72" pos:end="1148:13">{<block_content pos:start="756:25" pos:end="1148:13">

                        <expr_stmt pos:start="756:25" pos:end="764:58"><expr pos:start="756:25" pos:end="764:57"><call pos:start="756:25" pos:end="764:57"><name pos:start="756:25" pos:end="756:30">av_log</name><argument_list pos:start="756:31" pos:end="764:57">(<argument pos:start="756:32" pos:end="756:32"><expr pos:start="756:32" pos:end="756:32"><name pos:start="756:32" pos:end="756:32">s</name></expr></argument>,

                               <argument pos:start="758:32" pos:end="758:45"><expr pos:start="758:32" pos:end="758:45"><name pos:start="758:32" pos:end="758:45">AV_LOG_WARNING</name></expr></argument>,

                               <argument pos:start="760:32" pos:end="760:71"><expr pos:start="760:32" pos:end="760:71"><literal type="string" pos:start="760:32" pos:end="760:71">"sample size (%d) != block align (%d)\n"</literal></expr></argument>,

                               <argument pos:start="762:32" pos:end="762:47"><expr pos:start="762:32" pos:end="762:47"><name pos:start="762:32" pos:end="762:47"><name pos:start="762:32" pos:end="762:34">ast</name><operator pos:start="762:35" pos:end="762:36">-&gt;</operator><name pos:start="762:37" pos:end="762:47">sample_size</name></name></expr></argument>,

                               <argument pos:start="764:32" pos:end="764:56"><expr pos:start="764:32" pos:end="764:56"><name pos:start="764:32" pos:end="764:56"><name pos:start="764:32" pos:end="764:33">st</name><operator pos:start="764:34" pos:end="764:35">-&gt;</operator><name pos:start="764:36" pos:end="764:43">codecpar</name><operator pos:start="764:44" pos:end="764:45">-&gt;</operator><name pos:start="764:46" pos:end="764:56">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="766:25" pos:end="766:69"><expr pos:start="766:25" pos:end="766:68"><name pos:start="766:25" pos:end="766:40"><name pos:start="766:25" pos:end="766:27">ast</name><operator pos:start="766:28" pos:end="766:29">-&gt;</operator><name pos:start="766:30" pos:end="766:40">sample_size</name></name> <operator pos:start="766:42" pos:end="766:42">=</operator> <name pos:start="766:44" pos:end="766:68"><name pos:start="766:44" pos:end="766:45">st</name><operator pos:start="766:46" pos:end="766:47">-&gt;</operator><name pos:start="766:48" pos:end="766:55">codecpar</name><operator pos:start="766:56" pos:end="766:57">-&gt;</operator><name pos:start="766:58" pos:end="766:68">block_align</name></name></expr>;</expr_stmt>


                    <comment type="block" pos:start="769:21" pos:end="771:77">/* 2-aligned

                     * (fix for Stargate SG-1 - 3x18 - Shades of Grey.avi) */</comment>

                    <if_stmt pos:start="773:21" pos:end="775:41"><if pos:start="773:21" pos:end="775:41">if <condition pos:start="773:24" pos:end="773:33">(<expr pos:start="773:25" pos:end="773:32"><name pos:start="773:25" pos:end="773:28">size</name> <operator pos:start="773:30" pos:end="773:30">&amp;</operator> <literal type="number" pos:start="773:32" pos:end="773:32">1</literal></expr>)</condition><block type="pseudo" pos:start="775:25" pos:end="775:41"><block_content pos:start="775:25" pos:end="775:41">

                        <expr_stmt pos:start="775:25" pos:end="775:41"><expr pos:start="775:25" pos:end="775:40"><call pos:start="775:25" pos:end="775:40"><name pos:start="775:25" pos:end="775:33">avio_skip</name><argument_list pos:start="775:34" pos:end="775:40">(<argument pos:start="775:35" pos:end="775:36"><expr pos:start="775:35" pos:end="775:36"><name pos:start="775:35" pos:end="775:36">pb</name></expr></argument>, <argument pos:start="775:39" pos:end="775:39"><expr pos:start="775:39" pos:end="775:39"><literal type="number" pos:start="775:39" pos:end="775:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <comment type="block" pos:start="777:21" pos:end="779:74">/* Force parsing as several audio frames can be in

                     * one packet and timestamps refer to packet start. */</comment>

                    <expr_stmt pos:start="781:21" pos:end="781:65"><expr pos:start="781:21" pos:end="781:64"><name pos:start="781:21" pos:end="781:36"><name pos:start="781:21" pos:end="781:22">st</name><operator pos:start="781:23" pos:end="781:24">-&gt;</operator><name pos:start="781:25" pos:end="781:36">need_parsing</name></name> <operator pos:start="781:38" pos:end="781:38">=</operator> <name pos:start="781:40" pos:end="781:64">AVSTREAM_PARSE_TIMESTAMPS</name></expr>;</expr_stmt>

                    <comment type="block" pos:start="783:21" pos:end="787:31">/* ADTS header is in extradata, AAC without header must be

                     * stored as exact frames. Parser not needed and it will

                     * fail. */</comment>

                    <if_stmt pos:start="789:21" pos:end="793:63"><if pos:start="789:21" pos:end="793:63">if <condition pos:start="789:24" pos:end="791:53">(<expr pos:start="789:25" pos:end="791:52"><name pos:start="789:25" pos:end="789:46"><name pos:start="789:25" pos:end="789:26">st</name><operator pos:start="789:27" pos:end="789:28">-&gt;</operator><name pos:start="789:29" pos:end="789:36">codecpar</name><operator pos:start="789:37" pos:end="789:38">-&gt;</operator><name pos:start="789:39" pos:end="789:46">codec_id</name></name> <operator pos:start="789:48" pos:end="789:49">==</operator> <name pos:start="789:51" pos:end="789:65">AV_CODEC_ID_AAC</name> <operator pos:start="789:67" pos:end="789:68">&amp;&amp;</operator>

                        <name pos:start="791:25" pos:end="791:52"><name pos:start="791:25" pos:end="791:26">st</name><operator pos:start="791:27" pos:end="791:28">-&gt;</operator><name pos:start="791:29" pos:end="791:36">codecpar</name><operator pos:start="791:37" pos:end="791:38">-&gt;</operator><name pos:start="791:39" pos:end="791:52">extradata_size</name></name></expr>)</condition><block type="pseudo" pos:start="793:25" pos:end="793:63"><block_content pos:start="793:25" pos:end="793:63">

                        <expr_stmt pos:start="793:25" pos:end="793:63"><expr pos:start="793:25" pos:end="793:62"><name pos:start="793:25" pos:end="793:40"><name pos:start="793:25" pos:end="793:26">st</name><operator pos:start="793:27" pos:end="793:28">-&gt;</operator><name pos:start="793:29" pos:end="793:40">need_parsing</name></name> <operator pos:start="793:42" pos:end="793:42">=</operator> <name pos:start="793:44" pos:end="793:62">AVSTREAM_PARSE_NONE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <comment type="line" pos:start="795:21" pos:end="795:83">// The flac parser does not work with AVSTREAM_PARSE_TIMESTAMPS</comment>

                    <if_stmt pos:start="797:21" pos:end="799:63"><if pos:start="797:21" pos:end="799:63">if <condition pos:start="797:24" pos:end="797:67">(<expr pos:start="797:25" pos:end="797:66"><name pos:start="797:25" pos:end="797:46"><name pos:start="797:25" pos:end="797:26">st</name><operator pos:start="797:27" pos:end="797:28">-&gt;</operator><name pos:start="797:29" pos:end="797:36">codecpar</name><operator pos:start="797:37" pos:end="797:38">-&gt;</operator><name pos:start="797:39" pos:end="797:46">codec_id</name></name> <operator pos:start="797:48" pos:end="797:49">==</operator> <name pos:start="797:51" pos:end="797:66">AV_CODEC_ID_FLAC</name></expr>)</condition><block type="pseudo" pos:start="799:25" pos:end="799:63"><block_content pos:start="799:25" pos:end="799:63">

                        <expr_stmt pos:start="799:25" pos:end="799:63"><expr pos:start="799:25" pos:end="799:62"><name pos:start="799:25" pos:end="799:40"><name pos:start="799:25" pos:end="799:26">st</name><operator pos:start="799:27" pos:end="799:28">-&gt;</operator><name pos:start="799:29" pos:end="799:40">need_parsing</name></name> <operator pos:start="799:42" pos:end="799:42">=</operator> <name pos:start="799:44" pos:end="799:62">AVSTREAM_PARSE_NONE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <comment type="block" pos:start="801:21" pos:end="803:79">/* AVI files with Xan DPCM audio (wrongly) declare PCM

                     * audio in the header but have Axan as stream_code_tag. */</comment>

                    <if_stmt pos:start="805:21" pos:end="1148:13"><if pos:start="805:21" pos:end="1148:13">if <condition pos:start="805:24" pos:end="805:56">(<expr pos:start="805:25" pos:end="805:55"><name pos:start="805:25" pos:end="805:36"><name pos:start="805:25" pos:end="805:27">ast</name><operator pos:start="805:28" pos:end="805:29">-&gt;</operator><name pos:start="805:30" pos:end="805:36">handler</name></name> <operator pos:start="805:38" pos:end="805:39">==</operator> <call pos:start="805:41" pos:end="805:55"><name pos:start="805:41" pos:end="805:47">AV_RL32</name><argument_list pos:start="805:48" pos:end="805:55">(<argument pos:start="805:49" pos:end="805:54"><expr pos:start="805:49" pos:end="805:54"><literal type="string" pos:start="805:49" pos:end="805:54">"Axan"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="805:58" pos:end="1148:13">{<block_content pos:start="807:25" pos:end="1148:13">

                        <expr_stmt pos:start="807:25" pos:end="807:71"><expr pos:start="807:25" pos:end="807:70"><name pos:start="807:25" pos:end="807:46"><name pos:start="807:25" pos:end="807:26">st</name><operator pos:start="807:27" pos:end="807:28">-&gt;</operator><name pos:start="807:29" pos:end="807:36">codecpar</name><operator pos:start="807:37" pos:end="807:38">-&gt;</operator><name pos:start="807:39" pos:end="807:46">codec_id</name></name>  <operator pos:start="807:49" pos:end="807:49">=</operator> <name pos:start="807:51" pos:end="807:70">AV_CODEC_ID_XAN_DPCM</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="809:25" pos:end="809:52"><expr pos:start="809:25" pos:end="809:51"><name pos:start="809:25" pos:end="809:47"><name pos:start="809:25" pos:end="809:26">st</name><operator pos:start="809:27" pos:end="809:28">-&gt;</operator><name pos:start="809:29" pos:end="809:36">codecpar</name><operator pos:start="809:37" pos:end="809:38">-&gt;</operator><name pos:start="809:39" pos:end="809:47">codec_tag</name></name> <operator pos:start="809:49" pos:end="809:49">=</operator> <literal type="number" pos:start="809:51" pos:end="809:51">0</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="811:25" pos:end="811:51"><expr pos:start="811:25" pos:end="811:50"><name pos:start="811:25" pos:end="811:46"><name pos:start="811:25" pos:end="811:27">ast</name><operator pos:start="811:28" pos:end="811:29">-&gt;</operator><name pos:start="811:30" pos:end="811:46">dshow_block_align</name></name> <operator pos:start="811:48" pos:end="811:48">=</operator> <literal type="number" pos:start="811:50" pos:end="811:50">0</literal></expr>;</expr_stmt>


                    <if_stmt pos:start="814:21" pos:end="1148:13"><if pos:start="814:21" pos:end="1148:13">if <condition pos:start="814:24" pos:end="814:40">(<expr pos:start="814:25" pos:end="814:39"><name pos:start="814:25" pos:end="814:39">amv_file_format</name></expr>)</condition> <block pos:start="814:42" pos:end="1148:13">{<block_content pos:start="816:25" pos:end="1148:13">

                        <expr_stmt pos:start="816:25" pos:end="816:78"><expr pos:start="816:25" pos:end="816:77"><name pos:start="816:25" pos:end="816:46"><name pos:start="816:25" pos:end="816:26">st</name><operator pos:start="816:27" pos:end="816:28">-&gt;</operator><name pos:start="816:29" pos:end="816:36">codecpar</name><operator pos:start="816:37" pos:end="816:38">-&gt;</operator><name pos:start="816:39" pos:end="816:46">codec_id</name></name>    <operator pos:start="816:51" pos:end="816:51">=</operator> <name pos:start="816:53" pos:end="816:77">AV_CODEC_ID_ADPCM_IMA_AMV</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="818:25" pos:end="818:51"><expr pos:start="818:25" pos:end="818:50"><name pos:start="818:25" pos:end="818:46"><name pos:start="818:25" pos:end="818:27">ast</name><operator pos:start="818:28" pos:end="818:29">-&gt;</operator><name pos:start="818:30" pos:end="818:46">dshow_block_align</name></name> <operator pos:start="818:48" pos:end="818:48">=</operator> <literal type="number" pos:start="818:50" pos:end="818:50">0</literal></expr>;</expr_stmt>


                    <if_stmt pos:start="821:21" pos:end="1148:13"><if pos:start="821:21" pos:end="1148:13">if <condition pos:start="821:24" pos:end="825:126">(<expr pos:start="821:25" pos:end="825:125"><operator pos:start="821:25" pos:end="821:25">(</operator><name pos:start="821:26" pos:end="821:47"><name pos:start="821:26" pos:end="821:27">st</name><operator pos:start="821:28" pos:end="821:29">-&gt;</operator><name pos:start="821:30" pos:end="821:37">codecpar</name><operator pos:start="821:38" pos:end="821:39">-&gt;</operator><name pos:start="821:40" pos:end="821:47">codec_id</name></name> <operator pos:start="821:49" pos:end="821:50">==</operator> <name pos:start="821:52" pos:end="821:66">AV_CODEC_ID_AAC</name>  <operator pos:start="821:69" pos:end="821:70">||</operator>

                         <name pos:start="823:26" pos:end="823:47"><name pos:start="823:26" pos:end="823:27">st</name><operator pos:start="823:28" pos:end="823:29">-&gt;</operator><name pos:start="823:30" pos:end="823:37">codecpar</name><operator pos:start="823:38" pos:end="823:39">-&gt;</operator><name pos:start="823:40" pos:end="823:47">codec_id</name></name> <operator pos:start="823:49" pos:end="823:50">==</operator> <name pos:start="823:52" pos:end="823:67">AV_CODEC_ID_FLAC</name> <operator pos:start="823:69" pos:end="823:70">||</operator>

                         <name pos:start="825:26" pos:end="825:47"><name pos:start="825:26" pos:end="825:27">st</name><operator pos:start="825:28" pos:end="825:29">-&gt;</operator><name pos:start="825:30" pos:end="825:37">codecpar</name><operator pos:start="825:38" pos:end="825:39">-&gt;</operator><name pos:start="825:40" pos:end="825:47">codec_id</name></name> <operator pos:start="825:49" pos:end="825:50">==</operator> <name pos:start="825:52" pos:end="825:66">AV_CODEC_ID_MP2</name> <operator pos:start="825:68" pos:end="825:68">)</operator> <operator pos:start="825:70" pos:end="825:71">&amp;&amp;</operator> <name pos:start="825:73" pos:end="825:94"><name pos:start="825:73" pos:end="825:75">ast</name><operator pos:start="825:76" pos:end="825:77">-&gt;</operator><name pos:start="825:78" pos:end="825:94">dshow_block_align</name></name> <operator pos:start="825:96" pos:end="825:97">&lt;=</operator> <literal type="number" pos:start="825:99" pos:end="825:99">4</literal> <operator pos:start="825:101" pos:end="825:102">&amp;&amp;</operator> <name pos:start="825:104" pos:end="825:125"><name pos:start="825:104" pos:end="825:106">ast</name><operator pos:start="825:107" pos:end="825:108">-&gt;</operator><name pos:start="825:109" pos:end="825:125">dshow_block_align</name></name></expr>)</condition> <block pos:start="825:128" pos:end="1148:13">{<block_content pos:start="827:25" pos:end="1148:13">

                        <expr_stmt pos:start="827:25" pos:end="827:120"><expr pos:start="827:25" pos:end="827:119"><call pos:start="827:25" pos:end="827:119"><name pos:start="827:25" pos:end="827:30">av_log</name><argument_list pos:start="827:31" pos:end="827:119">(<argument pos:start="827:32" pos:end="827:32"><expr pos:start="827:32" pos:end="827:32"><name pos:start="827:32" pos:end="827:32">s</name></expr></argument>, <argument pos:start="827:35" pos:end="827:46"><expr pos:start="827:35" pos:end="827:46"><name pos:start="827:35" pos:end="827:46">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="827:49" pos:end="827:94"><expr pos:start="827:49" pos:end="827:94"><literal type="string" pos:start="827:49" pos:end="827:94">"overriding invalid dshow_block_align of %d\n"</literal></expr></argument>, <argument pos:start="827:97" pos:end="827:118"><expr pos:start="827:97" pos:end="827:118"><name pos:start="827:97" pos:end="827:118"><name pos:start="827:97" pos:end="827:99">ast</name><operator pos:start="827:100" pos:end="827:101">-&gt;</operator><name pos:start="827:102" pos:end="827:118">dshow_block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="829:25" pos:end="829:51"><expr pos:start="829:25" pos:end="829:50"><name pos:start="829:25" pos:end="829:46"><name pos:start="829:25" pos:end="829:27">ast</name><operator pos:start="829:28" pos:end="829:29">-&gt;</operator><name pos:start="829:30" pos:end="829:46">dshow_block_align</name></name> <operator pos:start="829:48" pos:end="829:48">=</operator> <literal type="number" pos:start="829:50" pos:end="829:50">0</literal></expr>;</expr_stmt>


                    <if_stmt pos:start="832:21" pos:end="1148:13"><if pos:start="832:21" pos:end="1148:13">if <condition pos:start="832:24" pos:end="836:127">(<expr pos:start="832:25" pos:end="836:126"><name pos:start="832:25" pos:end="832:46"><name pos:start="832:25" pos:end="832:26">st</name><operator pos:start="832:27" pos:end="832:28">-&gt;</operator><name pos:start="832:29" pos:end="832:36">codecpar</name><operator pos:start="832:37" pos:end="832:38">-&gt;</operator><name pos:start="832:39" pos:end="832:46">codec_id</name></name> <operator pos:start="832:48" pos:end="832:49">==</operator> <name pos:start="832:51" pos:end="832:65">AV_CODEC_ID_AAC</name> <operator pos:start="832:67" pos:end="832:68">&amp;&amp;</operator> <name pos:start="832:70" pos:end="832:91"><name pos:start="832:70" pos:end="832:72">ast</name><operator pos:start="832:73" pos:end="832:74">-&gt;</operator><name pos:start="832:75" pos:end="832:91">dshow_block_align</name></name> <operator pos:start="832:93" pos:end="832:94">==</operator> <literal type="number" pos:start="832:96" pos:end="832:99">1024</literal> <operator pos:start="832:101" pos:end="832:102">&amp;&amp;</operator> <name pos:start="832:104" pos:end="832:119"><name pos:start="832:104" pos:end="832:106">ast</name><operator pos:start="832:107" pos:end="832:108">-&gt;</operator><name pos:start="832:109" pos:end="832:119">sample_size</name></name> <operator pos:start="832:121" pos:end="832:122">==</operator> <literal type="number" pos:start="832:124" pos:end="832:127">1024</literal> <operator pos:start="832:129" pos:end="832:130">||</operator>

                       <name pos:start="834:24" pos:end="834:45"><name pos:start="834:24" pos:end="834:25">st</name><operator pos:start="834:26" pos:end="834:27">-&gt;</operator><name pos:start="834:28" pos:end="834:35">codecpar</name><operator pos:start="834:36" pos:end="834:37">-&gt;</operator><name pos:start="834:38" pos:end="834:45">codec_id</name></name> <operator pos:start="834:47" pos:end="834:48">==</operator> <name pos:start="834:50" pos:end="834:64">AV_CODEC_ID_AAC</name> <operator pos:start="834:66" pos:end="834:67">&amp;&amp;</operator> <name pos:start="834:69" pos:end="834:90"><name pos:start="834:69" pos:end="834:71">ast</name><operator pos:start="834:72" pos:end="834:73">-&gt;</operator><name pos:start="834:74" pos:end="834:90">dshow_block_align</name></name> <operator pos:start="834:92" pos:end="834:93">==</operator> <literal type="number" pos:start="834:95" pos:end="834:98">4096</literal> <operator pos:start="834:100" pos:end="834:101">&amp;&amp;</operator> <name pos:start="834:103" pos:end="834:118"><name pos:start="834:103" pos:end="834:105">ast</name><operator pos:start="834:106" pos:end="834:107">-&gt;</operator><name pos:start="834:108" pos:end="834:118">sample_size</name></name> <operator pos:start="834:120" pos:end="834:121">==</operator> <literal type="number" pos:start="834:123" pos:end="834:126">4096</literal> <operator pos:start="834:128" pos:end="834:129">||</operator>

                       <name pos:start="836:24" pos:end="836:45"><name pos:start="836:24" pos:end="836:25">st</name><operator pos:start="836:26" pos:end="836:27">-&gt;</operator><name pos:start="836:28" pos:end="836:35">codecpar</name><operator pos:start="836:36" pos:end="836:37">-&gt;</operator><name pos:start="836:38" pos:end="836:45">codec_id</name></name> <operator pos:start="836:47" pos:end="836:48">==</operator> <name pos:start="836:50" pos:end="836:64">AV_CODEC_ID_MP3</name> <operator pos:start="836:66" pos:end="836:67">&amp;&amp;</operator> <name pos:start="836:69" pos:end="836:90"><name pos:start="836:69" pos:end="836:71">ast</name><operator pos:start="836:72" pos:end="836:73">-&gt;</operator><name pos:start="836:74" pos:end="836:90">dshow_block_align</name></name> <operator pos:start="836:92" pos:end="836:93">==</operator> <literal type="number" pos:start="836:95" pos:end="836:98">1152</literal> <operator pos:start="836:100" pos:end="836:101">&amp;&amp;</operator> <name pos:start="836:103" pos:end="836:118"><name pos:start="836:103" pos:end="836:105">ast</name><operator pos:start="836:106" pos:end="836:107">-&gt;</operator><name pos:start="836:108" pos:end="836:118">sample_size</name></name> <operator pos:start="836:120" pos:end="836:121">==</operator> <literal type="number" pos:start="836:123" pos:end="836:126">1152</literal></expr>)</condition> <block pos:start="836:129" pos:end="1148:13">{<block_content pos:start="838:25" pos:end="1148:13">

                        <expr_stmt pos:start="838:25" pos:end="838:76"><expr pos:start="838:25" pos:end="838:75"><call pos:start="838:25" pos:end="838:75"><name pos:start="838:25" pos:end="838:30">av_log</name><argument_list pos:start="838:31" pos:end="838:75">(<argument pos:start="838:32" pos:end="838:32"><expr pos:start="838:32" pos:end="838:32"><name pos:start="838:32" pos:end="838:32">s</name></expr></argument>, <argument pos:start="838:35" pos:end="838:46"><expr pos:start="838:35" pos:end="838:46"><name pos:start="838:35" pos:end="838:46">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="838:49" pos:end="838:74"><expr pos:start="838:49" pos:end="838:74"><literal type="string" pos:start="838:49" pos:end="838:74">"overriding sample_size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="840:25" pos:end="840:45"><expr pos:start="840:25" pos:end="840:44"><name pos:start="840:25" pos:end="840:40"><name pos:start="840:25" pos:end="840:27">ast</name><operator pos:start="840:28" pos:end="840:29">-&gt;</operator><name pos:start="840:30" pos:end="840:40">sample_size</name></name> <operator pos:start="840:42" pos:end="840:42">=</operator> <literal type="number" pos:start="840:44" pos:end="840:44">0</literal></expr>;</expr_stmt>


                    <break pos:start="843:21" pos:end="843:26">break;</break>

                <case pos:start="845:17" pos:end="845:43">case <expr pos:start="845:22" pos:end="845:42"><name pos:start="845:22" pos:end="845:42">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                    <expr_stmt pos:start="847:21" pos:end="847:69"><expr pos:start="847:21" pos:end="847:68"><name pos:start="847:21" pos:end="847:44"><name pos:start="847:21" pos:end="847:22">st</name><operator pos:start="847:23" pos:end="847:24">-&gt;</operator><name pos:start="847:25" pos:end="847:32">codecpar</name><operator pos:start="847:33" pos:end="847:34">-&gt;</operator><name pos:start="847:35" pos:end="847:44">codec_type</name></name> <operator pos:start="847:46" pos:end="847:46">=</operator> <name pos:start="847:48" pos:end="847:68">AVMEDIA_TYPE_SUBTITLE</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="849:21" pos:end="849:41"><expr pos:start="849:21" pos:end="849:40"><name pos:start="849:21" pos:end="849:37"><name pos:start="849:21" pos:end="849:22">st</name><operator pos:start="849:23" pos:end="849:24">-&gt;</operator><name pos:start="849:25" pos:end="849:37">request_probe</name></name><operator pos:start="849:38" pos:end="849:38">=</operator> <literal type="number" pos:start="849:40" pos:end="849:40">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="851:21" pos:end="851:40"><expr pos:start="851:21" pos:end="851:39"><call pos:start="851:21" pos:end="851:39"><name pos:start="851:21" pos:end="851:29">avio_skip</name><argument_list pos:start="851:30" pos:end="851:39">(<argument pos:start="851:31" pos:end="851:32"><expr pos:start="851:31" pos:end="851:32"><name pos:start="851:31" pos:end="851:32">pb</name></expr></argument>, <argument pos:start="851:35" pos:end="851:38"><expr pos:start="851:35" pos:end="851:38"><name pos:start="851:35" pos:end="851:38">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="853:21" pos:end="853:26">break;</break>

                <default pos:start="855:17" pos:end="855:24">default:</default>

                    <expr_stmt pos:start="857:21" pos:end="857:65"><expr pos:start="857:21" pos:end="857:64"><name pos:start="857:21" pos:end="857:44"><name pos:start="857:21" pos:end="857:22">st</name><operator pos:start="857:23" pos:end="857:24">-&gt;</operator><name pos:start="857:25" pos:end="857:32">codecpar</name><operator pos:start="857:33" pos:end="857:34">-&gt;</operator><name pos:start="857:35" pos:end="857:44">codec_type</name></name> <operator pos:start="857:46" pos:end="857:46">=</operator> <name pos:start="857:48" pos:end="857:64">AVMEDIA_TYPE_DATA</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="859:21" pos:end="859:64"><expr pos:start="859:21" pos:end="859:63"><name pos:start="859:21" pos:end="859:42"><name pos:start="859:21" pos:end="859:22">st</name><operator pos:start="859:23" pos:end="859:24">-&gt;</operator><name pos:start="859:25" pos:end="859:32">codecpar</name><operator pos:start="859:33" pos:end="859:34">-&gt;</operator><name pos:start="859:35" pos:end="859:42">codec_id</name></name>   <operator pos:start="859:46" pos:end="859:46">=</operator> <name pos:start="859:48" pos:end="859:63">AV_CODEC_ID_NONE</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="861:21" pos:end="861:49"><expr pos:start="861:21" pos:end="861:48"><name pos:start="861:21" pos:end="861:43"><name pos:start="861:21" pos:end="861:22">st</name><operator pos:start="861:23" pos:end="861:24">-&gt;</operator><name pos:start="861:25" pos:end="861:32">codecpar</name><operator pos:start="861:33" pos:end="861:34">-&gt;</operator><name pos:start="861:35" pos:end="861:43">codec_tag</name></name>  <operator pos:start="861:46" pos:end="861:46">=</operator> <literal type="number" pos:start="861:48" pos:end="861:48">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="863:21" pos:end="863:40"><expr pos:start="863:21" pos:end="863:39"><call pos:start="863:21" pos:end="863:39"><name pos:start="863:21" pos:end="863:29">avio_skip</name><argument_list pos:start="863:30" pos:end="863:39">(<argument pos:start="863:31" pos:end="863:32"><expr pos:start="863:31" pos:end="863:32"><name pos:start="863:31" pos:end="863:32">pb</name></expr></argument>, <argument pos:start="863:35" pos:end="863:38"><expr pos:start="863:35" pos:end="863:38"><name pos:start="863:35" pos:end="863:38">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="865:21" pos:end="865:26">break;</break>



            <break pos:start="869:13" pos:end="869:18">break;</break>

        <case pos:start="871:9" pos:end="871:39">case <expr pos:start="871:14" pos:end="871:38"><call pos:start="871:14" pos:end="871:38"><name pos:start="871:14" pos:end="871:18">MKTAG</name><argument_list pos:start="871:19" pos:end="871:38">(<argument pos:start="871:20" pos:end="871:22"><expr pos:start="871:20" pos:end="871:22"><literal type="char" pos:start="871:20" pos:end="871:22">'s'</literal></expr></argument>, <argument pos:start="871:25" pos:end="871:27"><expr pos:start="871:25" pos:end="871:27"><literal type="char" pos:start="871:25" pos:end="871:27">'t'</literal></expr></argument>, <argument pos:start="871:30" pos:end="871:32"><expr pos:start="871:30" pos:end="871:32"><literal type="char" pos:start="871:30" pos:end="871:32">'r'</literal></expr></argument>, <argument pos:start="871:35" pos:end="871:37"><expr pos:start="871:35" pos:end="871:37"><literal type="char" pos:start="871:35" pos:end="871:37">'d'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="873:13" pos:end="1148:13"><if pos:start="873:13" pos:end="881:13">if <condition pos:start="873:16" pos:end="877:91">(<expr pos:start="873:17" pos:end="877:90"><name pos:start="873:17" pos:end="873:28">stream_index</name> <operator pos:start="873:30" pos:end="873:31">&gt;=</operator> <operator pos:start="873:33" pos:end="873:33">(</operator><name pos:start="873:34" pos:end="873:41">unsigned</name><operator pos:start="873:42" pos:end="873:42">)</operator><name pos:start="873:43" pos:end="873:55"><name pos:start="873:43" pos:end="873:43">s</name><operator pos:start="873:44" pos:end="873:45">-&gt;</operator><name pos:start="873:46" pos:end="873:55">nb_streams</name></name>

                <operator pos:start="875:17" pos:end="875:18">||</operator> <name pos:start="875:20" pos:end="875:43"><name pos:start="875:20" pos:end="875:20">s</name><operator pos:start="875:21" pos:end="875:22">-&gt;</operator><name pos:start="875:23" pos:end="875:29">streams</name><index pos:start="875:30" pos:end="875:43">[<expr pos:start="875:31" pos:end="875:42"><name pos:start="875:31" pos:end="875:42">stream_index</name></expr>]</index></name><operator pos:start="875:44" pos:end="875:45">-&gt;</operator><name pos:start="875:46" pos:end="875:69"><name pos:start="875:46" pos:end="875:53">codecpar</name><operator pos:start="875:54" pos:end="875:55">-&gt;</operator><name pos:start="875:56" pos:end="875:69">extradata_size</name></name>

                <operator pos:start="877:17" pos:end="877:18">||</operator> <name pos:start="877:20" pos:end="877:43"><name pos:start="877:20" pos:end="877:20">s</name><operator pos:start="877:21" pos:end="877:22">-&gt;</operator><name pos:start="877:23" pos:end="877:29">streams</name><index pos:start="877:30" pos:end="877:43">[<expr pos:start="877:31" pos:end="877:42"><name pos:start="877:31" pos:end="877:42">stream_index</name></expr>]</index></name><operator pos:start="877:44" pos:end="877:45">-&gt;</operator><name pos:start="877:46" pos:end="877:64"><name pos:start="877:46" pos:end="877:53">codecpar</name><operator pos:start="877:54" pos:end="877:55">-&gt;</operator><name pos:start="877:56" pos:end="877:64">codec_tag</name></name> <operator pos:start="877:66" pos:end="877:67">==</operator> <call pos:start="877:69" pos:end="877:90"><name pos:start="877:69" pos:end="877:73">MKTAG</name><argument_list pos:start="877:74" pos:end="877:90">(<argument pos:start="877:75" pos:end="877:77"><expr pos:start="877:75" pos:end="877:77"><literal type="char" pos:start="877:75" pos:end="877:77">'H'</literal></expr></argument>,<argument pos:start="877:79" pos:end="877:81"><expr pos:start="877:79" pos:end="877:81"><literal type="char" pos:start="877:79" pos:end="877:81">'2'</literal></expr></argument>,<argument pos:start="877:83" pos:end="877:85"><expr pos:start="877:83" pos:end="877:85"><literal type="char" pos:start="877:83" pos:end="877:85">'6'</literal></expr></argument>,<argument pos:start="877:87" pos:end="877:89"><expr pos:start="877:87" pos:end="877:89"><literal type="char" pos:start="877:87" pos:end="877:89">'4'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="877:93" pos:end="881:13">{<block_content pos:start="879:17" pos:end="879:36">

                <expr_stmt pos:start="879:17" pos:end="879:36"><expr pos:start="879:17" pos:end="879:35"><call pos:start="879:17" pos:end="879:35"><name pos:start="879:17" pos:end="879:25">avio_skip</name><argument_list pos:start="879:26" pos:end="879:35">(<argument pos:start="879:27" pos:end="879:28"><expr pos:start="879:27" pos:end="879:28"><name pos:start="879:27" pos:end="879:28">pb</name></expr></argument>, <argument pos:start="879:31" pos:end="879:34"><expr pos:start="879:31" pos:end="879:34"><name pos:start="879:31" pos:end="879:34">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="881:15" pos:end="1148:13">else <block pos:start="881:20" pos:end="1148:13">{<block_content pos:start="883:17" pos:end="1148:13">

                <decl_stmt pos:start="883:17" pos:end="883:49"><decl pos:start="883:17" pos:end="883:48"><type pos:start="883:17" pos:end="883:24"><name pos:start="883:17" pos:end="883:24">uint64_t</name></type> <name pos:start="883:26" pos:end="883:32">cur_pos</name> <init pos:start="883:34" pos:end="883:48">= <expr pos:start="883:36" pos:end="883:48"><call pos:start="883:36" pos:end="883:48"><name pos:start="883:36" pos:end="883:44">avio_tell</name><argument_list pos:start="883:45" pos:end="883:48">(<argument pos:start="883:46" pos:end="883:47"><expr pos:start="883:46" pos:end="883:47"><name pos:start="883:46" pos:end="883:47">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="885:17" pos:end="887:59"><if pos:start="885:17" pos:end="887:59">if <condition pos:start="885:20" pos:end="885:39">(<expr pos:start="885:21" pos:end="885:38"><name pos:start="885:21" pos:end="885:27">cur_pos</name> <operator pos:start="885:29" pos:end="885:29">&lt;</operator> <name pos:start="885:31" pos:end="885:38">list_end</name></expr>)</condition><block type="pseudo" pos:start="887:21" pos:end="887:59"><block_content pos:start="887:21" pos:end="887:59">

                    <expr_stmt pos:start="887:21" pos:end="887:59"><expr pos:start="887:21" pos:end="887:58"><name pos:start="887:21" pos:end="887:24">size</name> <operator pos:start="887:26" pos:end="887:26">=</operator> <call pos:start="887:28" pos:end="887:58"><name pos:start="887:28" pos:end="887:32">FFMIN</name><argument_list pos:start="887:33" pos:end="887:58">(<argument pos:start="887:34" pos:end="887:37"><expr pos:start="887:34" pos:end="887:37"><name pos:start="887:34" pos:end="887:37">size</name></expr></argument>, <argument pos:start="887:40" pos:end="887:57"><expr pos:start="887:40" pos:end="887:57"><name pos:start="887:40" pos:end="887:47">list_end</name> <operator pos:start="887:49" pos:end="887:49">-</operator> <name pos:start="887:51" pos:end="887:57">cur_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="889:17" pos:end="889:46"><expr pos:start="889:17" pos:end="889:45"><name pos:start="889:17" pos:end="889:18">st</name> <operator pos:start="889:20" pos:end="889:20">=</operator> <name pos:start="889:22" pos:end="889:45"><name pos:start="889:22" pos:end="889:22">s</name><operator pos:start="889:23" pos:end="889:24">-&gt;</operator><name pos:start="889:25" pos:end="889:31">streams</name><index pos:start="889:32" pos:end="889:45">[<expr pos:start="889:33" pos:end="889:44"><name pos:start="889:33" pos:end="889:44">stream_index</name></expr>]</index></name></expr>;</expr_stmt>



                <if_stmt pos:start="893:17" pos:end="1148:13"><if pos:start="893:17" pos:end="1148:13">if <condition pos:start="893:20" pos:end="893:33">(<expr pos:start="893:21" pos:end="893:32"><name pos:start="893:21" pos:end="893:24">size</name><operator pos:start="893:25" pos:end="893:25">&lt;</operator><operator pos:start="893:26" pos:end="893:26">(</operator><literal type="number" pos:start="893:27" pos:end="893:27">1</literal><operator pos:start="893:28" pos:end="893:29">&lt;&lt;</operator><literal type="number" pos:start="893:30" pos:end="893:31">30</literal><operator pos:start="893:32" pos:end="893:32">)</operator></expr>)</condition> <block pos:start="893:35" pos:end="1148:13">{<block_content pos:start="896:25" pos:end="1148:13">


                        <expr_stmt pos:start="896:25" pos:end="896:106"><expr pos:start="896:25" pos:end="896:105"><call pos:start="896:25" pos:end="896:105"><name pos:start="896:25" pos:end="896:30">av_log</name><argument_list pos:start="896:31" pos:end="896:105">(<argument pos:start="896:32" pos:end="896:32"><expr pos:start="896:32" pos:end="896:32"><name pos:start="896:32" pos:end="896:32">s</name></expr></argument>, <argument pos:start="896:35" pos:end="896:48"><expr pos:start="896:35" pos:end="896:48"><name pos:start="896:35" pos:end="896:48">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="896:51" pos:end="896:104"><expr pos:start="896:51" pos:end="896:104"><literal type="string" pos:start="896:51" pos:end="896:104">"New extradata in strd chunk, freeing previous one.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="900:21" pos:end="902:47"><if pos:start="900:21" pos:end="902:47">if <condition pos:start="900:24" pos:end="900:72">(<expr pos:start="900:25" pos:end="900:71"><call pos:start="900:25" pos:end="900:67"><name pos:start="900:25" pos:end="900:40">ff_get_extradata</name><argument_list pos:start="900:41" pos:end="900:67">(<argument pos:start="900:42" pos:end="900:42"><expr pos:start="900:42" pos:end="900:42"><name pos:start="900:42" pos:end="900:42">s</name></expr></argument>, <argument pos:start="900:45" pos:end="900:56"><expr pos:start="900:45" pos:end="900:56"><name pos:start="900:45" pos:end="900:56"><name pos:start="900:45" pos:end="900:46">st</name><operator pos:start="900:47" pos:end="900:48">-&gt;</operator><name pos:start="900:49" pos:end="900:56">codecpar</name></name></expr></argument>, <argument pos:start="900:59" pos:end="900:60"><expr pos:start="900:59" pos:end="900:60"><name pos:start="900:59" pos:end="900:60">pb</name></expr></argument>, <argument pos:start="900:63" pos:end="900:66"><expr pos:start="900:63" pos:end="900:66"><name pos:start="900:63" pos:end="900:66">size</name></expr></argument>)</argument_list></call> <operator pos:start="900:69" pos:end="900:69">&lt;</operator> <literal type="number" pos:start="900:71" pos:end="900:71">0</literal></expr>)</condition><block type="pseudo" pos:start="902:25" pos:end="902:47"><block_content pos:start="902:25" pos:end="902:47">

                        <return pos:start="902:25" pos:end="902:47">return <expr pos:start="902:32" pos:end="902:46"><call pos:start="902:32" pos:end="902:46"><name pos:start="902:32" pos:end="902:38">AVERROR</name><argument_list pos:start="902:39" pos:end="902:46">(<argument pos:start="902:40" pos:end="902:45"><expr pos:start="902:40" pos:end="902:45"><name pos:start="902:40" pos:end="902:45">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>




                <if_stmt pos:start="907:17" pos:end="909:32"><if pos:start="907:17" pos:end="909:32">if <condition pos:start="907:20" pos:end="907:53">(<expr pos:start="907:21" pos:end="907:52"><name pos:start="907:21" pos:end="907:48"><name pos:start="907:21" pos:end="907:22">st</name><operator pos:start="907:23" pos:end="907:24">-&gt;</operator><name pos:start="907:25" pos:end="907:32">codecpar</name><operator pos:start="907:33" pos:end="907:34">-&gt;</operator><name pos:start="907:35" pos:end="907:48">extradata_size</name></name> <operator pos:start="907:50" pos:end="907:50">&amp;</operator> <literal type="number" pos:start="907:52" pos:end="907:52">1</literal></expr>)</condition><block type="pseudo" pos:start="909:21" pos:end="909:32"><block_content pos:start="909:21" pos:end="909:32"> <comment type="line" pos:start="907:55" pos:end="907:108">//FIXME check if the encoder really did this correctly</comment>

                    <expr_stmt pos:start="909:21" pos:end="909:32"><expr pos:start="909:21" pos:end="909:31"><call pos:start="909:21" pos:end="909:31"><name pos:start="909:21" pos:end="909:27">avio_r8</name><argument_list pos:start="909:28" pos:end="909:31">(<argument pos:start="909:29" pos:end="909:30"><expr pos:start="909:29" pos:end="909:30"><name pos:start="909:29" pos:end="909:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="913:17" pos:end="913:57"><expr pos:start="913:17" pos:end="913:56"><name pos:start="913:17" pos:end="913:19">ret</name> <operator pos:start="913:21" pos:end="913:21">=</operator> <call pos:start="913:23" pos:end="913:56"><name pos:start="913:23" pos:end="913:49">avi_extract_stream_metadata</name><argument_list pos:start="913:50" pos:end="913:56">(<argument pos:start="913:51" pos:end="913:51"><expr pos:start="913:51" pos:end="913:51"><name pos:start="913:51" pos:end="913:51">s</name></expr></argument>, <argument pos:start="913:54" pos:end="913:55"><expr pos:start="913:54" pos:end="913:55"><name pos:start="913:54" pos:end="913:55">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="915:17" pos:end="1148:13"><if pos:start="915:17" pos:end="1148:13">if <condition pos:start="915:20" pos:end="915:28">(<expr pos:start="915:21" pos:end="915:27"><name pos:start="915:21" pos:end="915:23">ret</name> <operator pos:start="915:25" pos:end="915:25">&lt;</operator> <literal type="number" pos:start="915:27" pos:end="915:27">0</literal></expr>)</condition> <block pos:start="915:30" pos:end="1148:13">{<block_content pos:start="917:21" pos:end="1148:13">

                    <expr_stmt pos:start="917:21" pos:end="917:98"><expr pos:start="917:21" pos:end="917:97"><call pos:start="917:21" pos:end="917:97"><name pos:start="917:21" pos:end="917:26">av_log</name><argument_list pos:start="917:27" pos:end="917:97">(<argument pos:start="917:28" pos:end="917:28"><expr pos:start="917:28" pos:end="917:28"><name pos:start="917:28" pos:end="917:28">s</name></expr></argument>, <argument pos:start="917:31" pos:end="917:44"><expr pos:start="917:31" pos:end="917:44"><name pos:start="917:31" pos:end="917:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="917:47" pos:end="917:96"><expr pos:start="917:47" pos:end="917:96"><literal type="string" pos:start="917:47" pos:end="917:96">"could not decoding EXIF data in stream header.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <break pos:start="921:13" pos:end="921:18">break;</break>

        <case pos:start="923:9" pos:end="923:39">case <expr pos:start="923:14" pos:end="923:38"><call pos:start="923:14" pos:end="923:38"><name pos:start="923:14" pos:end="923:18">MKTAG</name><argument_list pos:start="923:19" pos:end="923:38">(<argument pos:start="923:20" pos:end="923:22"><expr pos:start="923:20" pos:end="923:22"><literal type="char" pos:start="923:20" pos:end="923:22">'i'</literal></expr></argument>, <argument pos:start="923:25" pos:end="923:27"><expr pos:start="923:25" pos:end="923:27"><literal type="char" pos:start="923:25" pos:end="923:27">'n'</literal></expr></argument>, <argument pos:start="923:30" pos:end="923:32"><expr pos:start="923:30" pos:end="923:32"><literal type="char" pos:start="923:30" pos:end="923:32">'d'</literal></expr></argument>, <argument pos:start="923:35" pos:end="923:37"><expr pos:start="923:35" pos:end="923:37"><literal type="char" pos:start="923:35" pos:end="923:37">'x'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <expr_stmt pos:start="925:13" pos:end="925:32"><expr pos:start="925:13" pos:end="925:31"><name pos:start="925:13" pos:end="925:15">pos</name> <operator pos:start="925:17" pos:end="925:17">=</operator> <call pos:start="925:19" pos:end="925:31"><name pos:start="925:19" pos:end="925:27">avio_tell</name><argument_list pos:start="925:28" pos:end="925:31">(<argument pos:start="925:29" pos:end="925:30"><expr pos:start="925:29" pos:end="925:30"><name pos:start="925:29" pos:end="925:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="927:13" pos:end="935:26"><if pos:start="927:13" pos:end="935:26">if <condition pos:start="927:16" pos:end="933:55">(<expr pos:start="927:17" pos:end="933:54"><name pos:start="927:17" pos:end="927:28"><name pos:start="927:17" pos:end="927:18">pb</name><operator pos:start="927:19" pos:end="927:20">-&gt;</operator><name pos:start="927:21" pos:end="927:28">seekable</name></name> <operator pos:start="927:30" pos:end="927:31">&amp;&amp;</operator> <operator pos:start="927:33" pos:end="927:33">!</operator><operator pos:start="927:34" pos:end="927:34">(</operator><name pos:start="927:35" pos:end="927:42"><name pos:start="927:35" pos:end="927:35">s</name><operator pos:start="927:36" pos:end="927:37">-&gt;</operator><name pos:start="927:38" pos:end="927:42">flags</name></name> <operator pos:start="927:44" pos:end="927:44">&amp;</operator> <name pos:start="927:46" pos:end="927:62">AVFMT_FLAG_IGNIDX</name><operator pos:start="927:63" pos:end="927:63">)</operator> <operator pos:start="927:65" pos:end="927:66">&amp;&amp;</operator>

                <name pos:start="929:17" pos:end="929:29"><name pos:start="929:17" pos:end="929:19">avi</name><operator pos:start="929:20" pos:end="929:21">-&gt;</operator><name pos:start="929:22" pos:end="929:29">use_odml</name></name> <operator pos:start="929:31" pos:end="929:32">&amp;&amp;</operator>

                <call pos:start="931:17" pos:end="931:46"><name pos:start="931:17" pos:end="931:40">read_braindead_odml_indx</name><argument_list pos:start="931:41" pos:end="931:46">(<argument pos:start="931:42" pos:end="931:42"><expr pos:start="931:42" pos:end="931:42"><name pos:start="931:42" pos:end="931:42">s</name></expr></argument>, <argument pos:start="931:45" pos:end="931:45"><expr pos:start="931:45" pos:end="931:45"><literal type="number" pos:start="931:45" pos:end="931:45">0</literal></expr></argument>)</argument_list></call> <operator pos:start="931:48" pos:end="931:48">&lt;</operator> <literal type="number" pos:start="931:50" pos:end="931:50">0</literal> <operator pos:start="931:52" pos:end="931:53">&amp;&amp;</operator>

                <operator pos:start="933:17" pos:end="933:17">(</operator><name pos:start="933:18" pos:end="933:37"><name pos:start="933:18" pos:end="933:18">s</name><operator pos:start="933:19" pos:end="933:20">-&gt;</operator><name pos:start="933:21" pos:end="933:37">error_recognition</name></name> <operator pos:start="933:39" pos:end="933:39">&amp;</operator> <name pos:start="933:41" pos:end="933:53">AV_EF_EXPLODE</name><operator pos:start="933:54" pos:end="933:54">)</operator></expr>)</condition><block type="pseudo" pos:start="935:17" pos:end="935:26"><block_content pos:start="935:17" pos:end="935:26">

                <goto pos:start="935:17" pos:end="935:26">goto <name pos:start="935:22" pos:end="935:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="937:13" pos:end="937:48"><expr pos:start="937:13" pos:end="937:47"><call pos:start="937:13" pos:end="937:47"><name pos:start="937:13" pos:end="937:21">avio_seek</name><argument_list pos:start="937:22" pos:end="937:47">(<argument pos:start="937:23" pos:end="937:24"><expr pos:start="937:23" pos:end="937:24"><name pos:start="937:23" pos:end="937:24">pb</name></expr></argument>, <argument pos:start="937:27" pos:end="937:36"><expr pos:start="937:27" pos:end="937:36"><name pos:start="937:27" pos:end="937:29">pos</name> <operator pos:start="937:31" pos:end="937:31">+</operator> <name pos:start="937:33" pos:end="937:36">size</name></expr></argument>, <argument pos:start="937:39" pos:end="937:46"><expr pos:start="937:39" pos:end="937:46"><name pos:start="937:39" pos:end="937:46">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="939:13" pos:end="939:18">break;</break>

        <case pos:start="941:9" pos:end="941:39">case <expr pos:start="941:14" pos:end="941:38"><call pos:start="941:14" pos:end="941:38"><name pos:start="941:14" pos:end="941:18">MKTAG</name><argument_list pos:start="941:19" pos:end="941:38">(<argument pos:start="941:20" pos:end="941:22"><expr pos:start="941:20" pos:end="941:22"><literal type="char" pos:start="941:20" pos:end="941:22">'v'</literal></expr></argument>, <argument pos:start="941:25" pos:end="941:27"><expr pos:start="941:25" pos:end="941:27"><literal type="char" pos:start="941:25" pos:end="941:27">'p'</literal></expr></argument>, <argument pos:start="941:30" pos:end="941:32"><expr pos:start="941:30" pos:end="941:32"><literal type="char" pos:start="941:30" pos:end="941:32">'r'</literal></expr></argument>, <argument pos:start="941:35" pos:end="941:37"><expr pos:start="941:35" pos:end="941:37"><literal type="char" pos:start="941:35" pos:end="941:37">'p'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="943:13" pos:end="1148:13"><if pos:start="943:13" pos:end="1148:13">if <condition pos:start="943:16" pos:end="943:71">(<expr pos:start="943:17" pos:end="943:70"><name pos:start="943:17" pos:end="943:64"><name pos:start="943:17" pos:end="943:28">stream_index</name> <argument_list type="generic" pos:start="943:30" pos:end="943:64">&lt; <argument pos:start="943:32" pos:end="943:62"><expr pos:start="943:32" pos:end="943:62"><operator pos:start="943:32" pos:end="943:32">(</operator><name pos:start="943:33" pos:end="943:40">unsigned</name><operator pos:start="943:41" pos:end="943:41">)</operator><name pos:start="943:42" pos:end="943:54"><name pos:start="943:42" pos:end="943:42">s</name><operator pos:start="943:43" pos:end="943:44">-&gt;</operator><name pos:start="943:45" pos:end="943:54">nb_streams</name></name> <operator pos:start="943:56" pos:end="943:57">&amp;&amp;</operator> <name pos:start="943:59" pos:end="943:62">size</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="943:66" pos:end="943:66">9</literal> <operator pos:start="943:68" pos:end="943:68">*</operator> <literal type="number" pos:start="943:70" pos:end="943:70">4</literal></expr>)</condition> <block pos:start="943:73" pos:end="1148:13">{<block_content pos:start="945:17" pos:end="1148:13">

                <decl_stmt pos:start="945:17" pos:end="945:49"><decl pos:start="945:17" pos:end="945:33"><type pos:start="945:17" pos:end="945:26"><name pos:start="945:17" pos:end="945:26">AVRational</name></type> <name pos:start="945:28" pos:end="945:33">active</name></decl>, <decl pos:start="945:36" pos:end="945:48"><type ref="prev" pos:start="945:17" pos:end="945:26"/><name pos:start="945:36" pos:end="945:48">active_aspect</name></decl>;</decl_stmt>



                <expr_stmt pos:start="949:17" pos:end="949:46"><expr pos:start="949:17" pos:end="949:45"><name pos:start="949:17" pos:end="949:18">st</name> <operator pos:start="949:20" pos:end="949:20">=</operator> <name pos:start="949:22" pos:end="949:45"><name pos:start="949:22" pos:end="949:22">s</name><operator pos:start="949:23" pos:end="949:24">-&gt;</operator><name pos:start="949:25" pos:end="949:31">streams</name><index pos:start="949:32" pos:end="949:45">[<expr pos:start="949:33" pos:end="949:44"><name pos:start="949:33" pos:end="949:44">stream_index</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="951:17" pos:end="951:30"><expr pos:start="951:17" pos:end="951:29"><call pos:start="951:17" pos:end="951:29"><name pos:start="951:17" pos:end="951:25">avio_rl32</name><argument_list pos:start="951:26" pos:end="951:29">(<argument pos:start="951:27" pos:end="951:28"><expr pos:start="951:27" pos:end="951:28"><name pos:start="951:27" pos:end="951:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="953:17" pos:end="953:30"><expr pos:start="953:17" pos:end="953:29"><call pos:start="953:17" pos:end="953:29"><name pos:start="953:17" pos:end="953:25">avio_rl32</name><argument_list pos:start="953:26" pos:end="953:29">(<argument pos:start="953:27" pos:end="953:28"><expr pos:start="953:27" pos:end="953:28"><name pos:start="953:27" pos:end="953:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="955:17" pos:end="955:30"><expr pos:start="955:17" pos:end="955:29"><call pos:start="955:17" pos:end="955:29"><name pos:start="955:17" pos:end="955:25">avio_rl32</name><argument_list pos:start="955:26" pos:end="955:29">(<argument pos:start="955:27" pos:end="955:28"><expr pos:start="955:27" pos:end="955:28"><name pos:start="955:27" pos:end="955:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="957:17" pos:end="957:30"><expr pos:start="957:17" pos:end="957:29"><call pos:start="957:17" pos:end="957:29"><name pos:start="957:17" pos:end="957:25">avio_rl32</name><argument_list pos:start="957:26" pos:end="957:29">(<argument pos:start="957:27" pos:end="957:28"><expr pos:start="957:27" pos:end="957:28"><name pos:start="957:27" pos:end="957:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="959:17" pos:end="959:30"><expr pos:start="959:17" pos:end="959:29"><call pos:start="959:17" pos:end="959:29"><name pos:start="959:17" pos:end="959:25">avio_rl32</name><argument_list pos:start="959:26" pos:end="959:29">(<argument pos:start="959:27" pos:end="959:28"><expr pos:start="959:27" pos:end="959:28"><name pos:start="959:27" pos:end="959:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="963:17" pos:end="963:50"><expr pos:start="963:17" pos:end="963:49"><name pos:start="963:17" pos:end="963:33"><name pos:start="963:17" pos:end="963:29">active_aspect</name><operator pos:start="963:30" pos:end="963:30">.</operator><name pos:start="963:31" pos:end="963:33">den</name></name> <operator pos:start="963:35" pos:end="963:35">=</operator> <call pos:start="963:37" pos:end="963:49"><name pos:start="963:37" pos:end="963:45">avio_rl16</name><argument_list pos:start="963:46" pos:end="963:49">(<argument pos:start="963:47" pos:end="963:48"><expr pos:start="963:47" pos:end="963:48"><name pos:start="963:47" pos:end="963:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="965:17" pos:end="965:50"><expr pos:start="965:17" pos:end="965:49"><name pos:start="965:17" pos:end="965:33"><name pos:start="965:17" pos:end="965:29">active_aspect</name><operator pos:start="965:30" pos:end="965:30">.</operator><name pos:start="965:31" pos:end="965:33">num</name></name> <operator pos:start="965:35" pos:end="965:35">=</operator> <call pos:start="965:37" pos:end="965:49"><name pos:start="965:37" pos:end="965:45">avio_rl16</name><argument_list pos:start="965:46" pos:end="965:49">(<argument pos:start="965:47" pos:end="965:48"><expr pos:start="965:47" pos:end="965:48"><name pos:start="965:47" pos:end="965:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="967:17" pos:end="967:50"><expr pos:start="967:17" pos:end="967:49"><name pos:start="967:17" pos:end="967:26"><name pos:start="967:17" pos:end="967:22">active</name><operator pos:start="967:23" pos:end="967:23">.</operator><name pos:start="967:24" pos:end="967:26">num</name></name>        <operator pos:start="967:35" pos:end="967:35">=</operator> <call pos:start="967:37" pos:end="967:49"><name pos:start="967:37" pos:end="967:45">avio_rl32</name><argument_list pos:start="967:46" pos:end="967:49">(<argument pos:start="967:47" pos:end="967:48"><expr pos:start="967:47" pos:end="967:48"><name pos:start="967:47" pos:end="967:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="969:17" pos:end="969:50"><expr pos:start="969:17" pos:end="969:49"><name pos:start="969:17" pos:end="969:26"><name pos:start="969:17" pos:end="969:22">active</name><operator pos:start="969:23" pos:end="969:23">.</operator><name pos:start="969:24" pos:end="969:26">den</name></name>        <operator pos:start="969:35" pos:end="969:35">=</operator> <call pos:start="969:37" pos:end="969:49"><name pos:start="969:37" pos:end="969:45">avio_rl32</name><argument_list pos:start="969:46" pos:end="969:49">(<argument pos:start="969:47" pos:end="969:48"><expr pos:start="969:47" pos:end="969:48"><name pos:start="969:47" pos:end="969:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="971:17" pos:end="971:30"><expr pos:start="971:17" pos:end="971:29"><call pos:start="971:17" pos:end="971:29"><name pos:start="971:17" pos:end="971:25">avio_rl32</name><argument_list pos:start="971:26" pos:end="971:29">(<argument pos:start="971:27" pos:end="971:28"><expr pos:start="971:27" pos:end="971:28"><name pos:start="971:27" pos:end="971:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="971:32" pos:end="971:50">// nbFieldsPerFrame</comment>



                <if_stmt pos:start="975:17" pos:end="1148:13"><if pos:start="975:17" pos:end="1148:13">if <condition pos:start="975:20" pos:end="977:45">(<expr pos:start="975:21" pos:end="977:44"><name pos:start="975:21" pos:end="975:37"><name pos:start="975:21" pos:end="975:33">active_aspect</name><operator pos:start="975:34" pos:end="975:34">.</operator><name pos:start="975:35" pos:end="975:37">num</name></name> <operator pos:start="975:39" pos:end="975:40">&amp;&amp;</operator> <name pos:start="975:42" pos:end="975:58"><name pos:start="975:42" pos:end="975:54">active_aspect</name><operator pos:start="975:55" pos:end="975:55">.</operator><name pos:start="975:56" pos:end="975:58">den</name></name> <operator pos:start="975:60" pos:end="975:61">&amp;&amp;</operator>

                    <name pos:start="977:21" pos:end="977:30"><name pos:start="977:21" pos:end="977:26">active</name><operator pos:start="977:27" pos:end="977:27">.</operator><name pos:start="977:28" pos:end="977:30">num</name></name> <operator pos:start="977:32" pos:end="977:33">&amp;&amp;</operator> <name pos:start="977:35" pos:end="977:44"><name pos:start="977:35" pos:end="977:40">active</name><operator pos:start="977:41" pos:end="977:41">.</operator><name pos:start="977:42" pos:end="977:44">den</name></name></expr>)</condition> <block pos:start="977:47" pos:end="1148:13">{<block_content pos:start="979:21" pos:end="1148:13">

                    <expr_stmt pos:start="979:21" pos:end="979:78"><expr pos:start="979:21" pos:end="979:77"><name pos:start="979:21" pos:end="979:43"><name pos:start="979:21" pos:end="979:22">st</name><operator pos:start="979:23" pos:end="979:24">-&gt;</operator><name pos:start="979:25" pos:end="979:43">sample_aspect_ratio</name></name> <operator pos:start="979:45" pos:end="979:45">=</operator> <call pos:start="979:47" pos:end="979:77"><name pos:start="979:47" pos:end="979:54">av_div_q</name><argument_list pos:start="979:55" pos:end="979:77">(<argument pos:start="979:56" pos:end="979:68"><expr pos:start="979:56" pos:end="979:68"><name pos:start="979:56" pos:end="979:68">active_aspect</name></expr></argument>, <argument pos:start="979:71" pos:end="979:76"><expr pos:start="979:71" pos:end="979:76"><name pos:start="979:71" pos:end="979:76">active</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="981:21" pos:end="985:52"><expr pos:start="981:21" pos:end="985:51"><call pos:start="981:21" pos:end="985:51"><name pos:start="981:21" pos:end="981:26">av_log</name><argument_list pos:start="981:27" pos:end="985:51">(<argument pos:start="981:28" pos:end="981:28"><expr pos:start="981:28" pos:end="981:28"><name pos:start="981:28" pos:end="981:28">s</name></expr></argument>, <argument pos:start="981:31" pos:end="981:42"><expr pos:start="981:31" pos:end="981:42"><name pos:start="981:31" pos:end="981:42">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="981:45" pos:end="981:64"><expr pos:start="981:45" pos:end="981:64"><literal type="string" pos:start="981:45" pos:end="981:64">"vprp %d/%d %d/%d\n"</literal></expr></argument>,

                            <argument pos:start="983:29" pos:end="983:45"><expr pos:start="983:29" pos:end="983:45"><name pos:start="983:29" pos:end="983:45"><name pos:start="983:29" pos:end="983:41">active_aspect</name><operator pos:start="983:42" pos:end="983:42">.</operator><name pos:start="983:43" pos:end="983:45">num</name></name></expr></argument>, <argument pos:start="983:48" pos:end="983:64"><expr pos:start="983:48" pos:end="983:64"><name pos:start="983:48" pos:end="983:64"><name pos:start="983:48" pos:end="983:60">active_aspect</name><operator pos:start="983:61" pos:end="983:61">.</operator><name pos:start="983:62" pos:end="983:64">den</name></name></expr></argument>,

                            <argument pos:start="985:29" pos:end="985:38"><expr pos:start="985:29" pos:end="985:38"><name pos:start="985:29" pos:end="985:38"><name pos:start="985:29" pos:end="985:34">active</name><operator pos:start="985:35" pos:end="985:35">.</operator><name pos:start="985:36" pos:end="985:38">num</name></name></expr></argument>, <argument pos:start="985:41" pos:end="985:50"><expr pos:start="985:41" pos:end="985:50"><name pos:start="985:41" pos:end="985:50"><name pos:start="985:41" pos:end="985:46">active</name><operator pos:start="985:47" pos:end="985:47">.</operator><name pos:start="985:48" pos:end="985:50">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


                <expr_stmt pos:start="988:17" pos:end="988:30"><expr pos:start="988:17" pos:end="988:29"><name pos:start="988:17" pos:end="988:20">size</name> <operator pos:start="988:22" pos:end="988:23">-=</operator> <literal type="number" pos:start="988:25" pos:end="988:25">9</literal> <operator pos:start="988:27" pos:end="988:27">*</operator> <literal type="number" pos:start="988:29" pos:end="988:29">4</literal></expr>;</expr_stmt>


            <expr_stmt pos:start="991:13" pos:end="991:32"><expr pos:start="991:13" pos:end="991:31"><call pos:start="991:13" pos:end="991:31"><name pos:start="991:13" pos:end="991:21">avio_skip</name><argument_list pos:start="991:22" pos:end="991:31">(<argument pos:start="991:23" pos:end="991:24"><expr pos:start="991:23" pos:end="991:24"><name pos:start="991:23" pos:end="991:24">pb</name></expr></argument>, <argument pos:start="991:27" pos:end="991:30"><expr pos:start="991:27" pos:end="991:30"><name pos:start="991:27" pos:end="991:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="993:13" pos:end="993:18">break;</break>

        <case pos:start="995:9" pos:end="995:39">case <expr pos:start="995:14" pos:end="995:38"><call pos:start="995:14" pos:end="995:38"><name pos:start="995:14" pos:end="995:18">MKTAG</name><argument_list pos:start="995:19" pos:end="995:38">(<argument pos:start="995:20" pos:end="995:22"><expr pos:start="995:20" pos:end="995:22"><literal type="char" pos:start="995:20" pos:end="995:22">'s'</literal></expr></argument>, <argument pos:start="995:25" pos:end="995:27"><expr pos:start="995:25" pos:end="995:27"><literal type="char" pos:start="995:25" pos:end="995:27">'t'</literal></expr></argument>, <argument pos:start="995:30" pos:end="995:32"><expr pos:start="995:30" pos:end="995:32"><literal type="char" pos:start="995:30" pos:end="995:32">'r'</literal></expr></argument>, <argument pos:start="995:35" pos:end="995:37"><expr pos:start="995:35" pos:end="995:37"><literal type="char" pos:start="995:35" pos:end="995:37">'n'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="997:13" pos:end="1148:13"><if pos:start="997:13" pos:end="1148:13">if <condition pos:start="997:16" pos:end="997:30">(<expr pos:start="997:17" pos:end="997:29"><name pos:start="997:17" pos:end="997:29"><name pos:start="997:17" pos:end="997:17">s</name><operator pos:start="997:18" pos:end="997:19">-&gt;</operator><name pos:start="997:20" pos:end="997:29">nb_streams</name></name></expr>)</condition> <block pos:start="997:32" pos:end="1148:13">{<block_content pos:start="999:17" pos:end="1148:13">

                <expr_stmt pos:start="999:17" pos:end="999:80"><expr pos:start="999:17" pos:end="999:79"><name pos:start="999:17" pos:end="999:19">ret</name> <operator pos:start="999:21" pos:end="999:21">=</operator> <call pos:start="999:23" pos:end="999:79"><name pos:start="999:23" pos:end="999:34">avi_read_tag</name><argument_list pos:start="999:35" pos:end="999:79">(<argument pos:start="999:36" pos:end="999:36"><expr pos:start="999:36" pos:end="999:36"><name pos:start="999:36" pos:end="999:36">s</name></expr></argument>, <argument pos:start="999:39" pos:end="999:67"><expr pos:start="999:39" pos:end="999:67"><name pos:start="999:39" pos:end="999:67"><name pos:start="999:39" pos:end="999:39">s</name><operator pos:start="999:40" pos:end="999:41">-&gt;</operator><name pos:start="999:42" pos:end="999:48">streams</name><index pos:start="999:49" pos:end="999:67">[<expr pos:start="999:50" pos:end="999:66"><name pos:start="999:50" pos:end="999:62"><name pos:start="999:50" pos:end="999:50">s</name><operator pos:start="999:51" pos:end="999:52">-&gt;</operator><name pos:start="999:53" pos:end="999:62">nb_streams</name></name> <operator pos:start="999:64" pos:end="999:64">-</operator> <literal type="number" pos:start="999:66" pos:end="999:66">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="999:70" pos:end="999:72"><expr pos:start="999:70" pos:end="999:72"><name pos:start="999:70" pos:end="999:72">tag</name></expr></argument>, <argument pos:start="999:75" pos:end="999:78"><expr pos:start="999:75" pos:end="999:78"><name pos:start="999:75" pos:end="999:78">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1001:17" pos:end="1003:31"><if pos:start="1001:17" pos:end="1003:31">if <condition pos:start="1001:20" pos:end="1001:28">(<expr pos:start="1001:21" pos:end="1001:27"><name pos:start="1001:21" pos:end="1001:23">ret</name> <operator pos:start="1001:25" pos:end="1001:25">&lt;</operator> <literal type="number" pos:start="1001:27" pos:end="1001:27">0</literal></expr>)</condition><block type="pseudo" pos:start="1003:21" pos:end="1003:31"><block_content pos:start="1003:21" pos:end="1003:31">

                    <return pos:start="1003:21" pos:end="1003:31">return <expr pos:start="1003:28" pos:end="1003:30"><name pos:start="1003:28" pos:end="1003:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <break pos:start="1005:17" pos:end="1005:22">break;</break>


        <default pos:start="1008:9" pos:end="1008:16">default:</default>

            <if_stmt pos:start="1010:13" pos:end="1148:13"><if pos:start="1010:13" pos:end="1148:13">if <condition pos:start="1010:16" pos:end="1010:31">(<expr pos:start="1010:17" pos:end="1010:30"><name pos:start="1010:17" pos:end="1010:20">size</name> <operator pos:start="1010:22" pos:end="1010:22">&gt;</operator> <literal type="number" pos:start="1010:24" pos:end="1010:30">1000000</literal></expr>)</condition> <block pos:start="1010:33" pos:end="1148:13">{<block_content pos:start="1012:17" pos:end="1148:13">

                <decl_stmt pos:start="1012:17" pos:end="1012:33"><decl pos:start="1012:17" pos:end="1012:32"><type pos:start="1012:17" pos:end="1012:20"><name pos:start="1012:17" pos:end="1012:20">char</name></type> <name pos:start="1012:22" pos:end="1012:32"><name pos:start="1012:22" pos:end="1012:28">tag_buf</name><index pos:start="1012:29" pos:end="1012:32">[<expr pos:start="1012:30" pos:end="1012:31"><literal type="number" pos:start="1012:30" pos:end="1012:31">32</literal></expr>]</index></name></decl>;</decl_stmt>

                <expr_stmt pos:start="1014:17" pos:end="1014:71"><expr pos:start="1014:17" pos:end="1014:70"><call pos:start="1014:17" pos:end="1014:70"><name pos:start="1014:17" pos:end="1014:39">av_get_codec_tag_string</name><argument_list pos:start="1014:40" pos:end="1014:70">(<argument pos:start="1014:41" pos:end="1014:47"><expr pos:start="1014:41" pos:end="1014:47"><name pos:start="1014:41" pos:end="1014:47">tag_buf</name></expr></argument>, <argument pos:start="1014:50" pos:end="1014:64"><expr pos:start="1014:50" pos:end="1014:64"><sizeof pos:start="1014:50" pos:end="1014:64">sizeof<argument_list pos:start="1014:56" pos:end="1014:64">(<argument pos:start="1014:57" pos:end="1014:63"><expr pos:start="1014:57" pos:end="1014:63"><name pos:start="1014:57" pos:end="1014:63">tag_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1014:67" pos:end="1014:69"><expr pos:start="1014:67" pos:end="1014:69"><name pos:start="1014:67" pos:end="1014:69">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1016:17" pos:end="1024:38"><expr pos:start="1016:17" pos:end="1024:37"><call pos:start="1016:17" pos:end="1024:37"><name pos:start="1016:17" pos:end="1016:22">av_log</name><argument_list pos:start="1016:23" pos:end="1024:37">(<argument pos:start="1016:24" pos:end="1016:24"><expr pos:start="1016:24" pos:end="1016:24"><name pos:start="1016:24" pos:end="1016:24">s</name></expr></argument>, <argument pos:start="1016:27" pos:end="1016:38"><expr pos:start="1016:27" pos:end="1016:38"><name pos:start="1016:27" pos:end="1016:38">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="1018:24" pos:end="1022:71"><expr pos:start="1018:24" pos:end="1022:71"><literal type="string" pos:start="1018:24" pos:end="1018:69">"Something went wrong during header parsing, "</literal>

                       <literal type="string" pos:start="1020:24" pos:end="1020:45">"tag %s has size %u, "</literal>

                       <literal type="string" pos:start="1022:24" pos:end="1022:71">"I will ignore it and try to continue anyway.\n"</literal></expr></argument>,

                       <argument pos:start="1024:24" pos:end="1024:30"><expr pos:start="1024:24" pos:end="1024:30"><name pos:start="1024:24" pos:end="1024:30">tag_buf</name></expr></argument>, <argument pos:start="1024:33" pos:end="1024:36"><expr pos:start="1024:33" pos:end="1024:36"><name pos:start="1024:33" pos:end="1024:36">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1026:17" pos:end="1028:30"><if pos:start="1026:17" pos:end="1028:30">if <condition pos:start="1026:20" pos:end="1026:57">(<expr pos:start="1026:21" pos:end="1026:56"><name pos:start="1026:21" pos:end="1026:40"><name pos:start="1026:21" pos:end="1026:21">s</name><operator pos:start="1026:22" pos:end="1026:23">-&gt;</operator><name pos:start="1026:24" pos:end="1026:40">error_recognition</name></name> <operator pos:start="1026:42" pos:end="1026:42">&amp;</operator> <name pos:start="1026:44" pos:end="1026:56">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="1028:21" pos:end="1028:30"><block_content pos:start="1028:21" pos:end="1028:30">

                    <goto pos:start="1028:21" pos:end="1028:30">goto <name pos:start="1028:26" pos:end="1028:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1030:17" pos:end="1030:51"><expr pos:start="1030:17" pos:end="1030:50"><name pos:start="1030:17" pos:end="1030:30"><name pos:start="1030:17" pos:end="1030:19">avi</name><operator pos:start="1030:20" pos:end="1030:21">-&gt;</operator><name pos:start="1030:22" pos:end="1030:30">movi_list</name></name> <operator pos:start="1030:32" pos:end="1030:32">=</operator> <call pos:start="1030:34" pos:end="1030:46"><name pos:start="1030:34" pos:end="1030:42">avio_tell</name><argument_list pos:start="1030:43" pos:end="1030:46">(<argument pos:start="1030:44" pos:end="1030:45"><expr pos:start="1030:44" pos:end="1030:45"><name pos:start="1030:44" pos:end="1030:45">pb</name></expr></argument>)</argument_list></call> <operator pos:start="1030:48" pos:end="1030:48">-</operator> <literal type="number" pos:start="1030:50" pos:end="1030:50">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1032:17" pos:end="1032:44"><expr pos:start="1032:17" pos:end="1032:43"><name pos:start="1032:17" pos:end="1032:29"><name pos:start="1032:17" pos:end="1032:19">avi</name><operator pos:start="1032:20" pos:end="1032:21">-&gt;</operator><name pos:start="1032:22" pos:end="1032:29">movi_end</name></name>  <operator pos:start="1032:32" pos:end="1032:32">=</operator> <name pos:start="1032:34" pos:end="1032:43"><name pos:start="1032:34" pos:end="1032:36">avi</name><operator pos:start="1032:37" pos:end="1032:38">-&gt;</operator><name pos:start="1032:39" pos:end="1032:43">fsize</name></name></expr>;</expr_stmt>

                <goto pos:start="1034:17" pos:end="1034:35">goto <name pos:start="1034:22" pos:end="1034:34">end_of_header</name>;</goto>


        <comment type="block" pos:start="1037:9" pos:end="1037:50">/* Do not fail for very large idx1 tags */</comment>

        <case pos:start="1039:9" pos:end="1039:39">case <expr pos:start="1039:14" pos:end="1039:38"><call pos:start="1039:14" pos:end="1039:38"><name pos:start="1039:14" pos:end="1039:18">MKTAG</name><argument_list pos:start="1039:19" pos:end="1039:38">(<argument pos:start="1039:20" pos:end="1039:22"><expr pos:start="1039:20" pos:end="1039:22"><literal type="char" pos:start="1039:20" pos:end="1039:22">'i'</literal></expr></argument>, <argument pos:start="1039:25" pos:end="1039:27"><expr pos:start="1039:25" pos:end="1039:27"><literal type="char" pos:start="1039:25" pos:end="1039:27">'d'</literal></expr></argument>, <argument pos:start="1039:30" pos:end="1039:32"><expr pos:start="1039:30" pos:end="1039:32"><literal type="char" pos:start="1039:30" pos:end="1039:32">'x'</literal></expr></argument>, <argument pos:start="1039:35" pos:end="1039:37"><expr pos:start="1039:35" pos:end="1039:37"><literal type="char" pos:start="1039:35" pos:end="1039:37">'1'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <comment type="block" pos:start="1041:13" pos:end="1041:26">/* skip tag */</comment>

            <expr_stmt pos:start="1043:13" pos:end="1043:31"><expr pos:start="1043:13" pos:end="1043:30"><name pos:start="1043:13" pos:end="1043:16">size</name> <operator pos:start="1043:18" pos:end="1043:19">+=</operator> <operator pos:start="1043:21" pos:end="1043:21">(</operator><name pos:start="1043:22" pos:end="1043:25">size</name> <operator pos:start="1043:27" pos:end="1043:27">&amp;</operator> <literal type="number" pos:start="1043:29" pos:end="1043:29">1</literal><operator pos:start="1043:30" pos:end="1043:30">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="1045:13" pos:end="1045:32"><expr pos:start="1045:13" pos:end="1045:31"><call pos:start="1045:13" pos:end="1045:31"><name pos:start="1045:13" pos:end="1045:21">avio_skip</name><argument_list pos:start="1045:22" pos:end="1045:31">(<argument pos:start="1045:23" pos:end="1045:24"><expr pos:start="1045:23" pos:end="1045:24"><name pos:start="1045:23" pos:end="1045:24">pb</name></expr></argument>, <argument pos:start="1045:27" pos:end="1045:30"><expr pos:start="1045:27" pos:end="1045:30"><name pos:start="1045:27" pos:end="1045:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1047:13" pos:end="1047:18">break;</break>





<label pos:start="1053:1" pos:end="1053:14"><name pos:start="1053:1" pos:end="1053:13">end_of_header</name>:</label>

    <comment type="block" pos:start="1055:5" pos:end="1055:29">/* check stream number */</comment>

    <if_stmt pos:start="1057:5" pos:end="1148:13"><if pos:start="1057:5" pos:end="1148:13">if <condition pos:start="1057:8" pos:end="1057:42">(<expr pos:start="1057:9" pos:end="1057:41"><name pos:start="1057:9" pos:end="1057:20">stream_index</name> <operator pos:start="1057:22" pos:end="1057:23">!=</operator> <name pos:start="1057:25" pos:end="1057:37"><name pos:start="1057:25" pos:end="1057:25">s</name><operator pos:start="1057:26" pos:end="1057:27">-&gt;</operator><name pos:start="1057:28" pos:end="1057:37">nb_streams</name></name> <operator pos:start="1057:39" pos:end="1057:39">-</operator> <literal type="number" pos:start="1057:41" pos:end="1057:41">1</literal></expr>)</condition> <block pos:start="1057:44" pos:end="1148:13">{<block_content pos:start="1061:1" pos:end="1148:13">



<label pos:start="1061:1" pos:end="1061:5"><name pos:start="1061:1" pos:end="1061:4">fail</name>:</label>

        <return pos:start="1063:9" pos:end="1063:35">return <expr pos:start="1063:16" pos:end="1063:34"><name pos:start="1063:16" pos:end="1063:34">AVERROR_INVALIDDATA</name></expr>;</return>




    <if_stmt pos:start="1068:5" pos:end="1070:26"><if pos:start="1068:5" pos:end="1070:26">if <condition pos:start="1068:8" pos:end="1068:43">(<expr pos:start="1068:9" pos:end="1068:42"><operator pos:start="1068:9" pos:end="1068:9">!</operator><name pos:start="1068:10" pos:end="1068:26"><name pos:start="1068:10" pos:end="1068:12">avi</name><operator pos:start="1068:13" pos:end="1068:14">-&gt;</operator><name pos:start="1068:15" pos:end="1068:26">index_loaded</name></name> <operator pos:start="1068:28" pos:end="1068:29">&amp;&amp;</operator> <name pos:start="1068:31" pos:end="1068:42"><name pos:start="1068:31" pos:end="1068:32">pb</name><operator pos:start="1068:33" pos:end="1068:34">-&gt;</operator><name pos:start="1068:35" pos:end="1068:42">seekable</name></name></expr>)</condition><block type="pseudo" pos:start="1070:9" pos:end="1070:26"><block_content pos:start="1070:9" pos:end="1070:26">

        <expr_stmt pos:start="1070:9" pos:end="1070:26"><expr pos:start="1070:9" pos:end="1070:25"><call pos:start="1070:9" pos:end="1070:25"><name pos:start="1070:9" pos:end="1070:22">avi_load_index</name><argument_list pos:start="1070:23" pos:end="1070:25">(<argument pos:start="1070:24" pos:end="1070:24"><expr pos:start="1070:24" pos:end="1070:24"><name pos:start="1070:24" pos:end="1070:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="1072:5" pos:end="1072:25"><expr pos:start="1072:5" pos:end="1072:24"><call pos:start="1072:5" pos:end="1072:24"><name pos:start="1072:5" pos:end="1072:21">calculate_bitrate</name><argument_list pos:start="1072:22" pos:end="1072:24">(<argument pos:start="1072:23" pos:end="1072:23"><expr pos:start="1072:23" pos:end="1072:23"><name pos:start="1072:23" pos:end="1072:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1074:5" pos:end="1074:30"><expr pos:start="1074:5" pos:end="1074:29"><name pos:start="1074:5" pos:end="1074:21"><name pos:start="1074:5" pos:end="1074:7">avi</name><operator pos:start="1074:8" pos:end="1074:9">-&gt;</operator><name pos:start="1074:10" pos:end="1074:21">index_loaded</name></name>    <operator pos:start="1074:26" pos:end="1074:27">|=</operator> <literal type="number" pos:start="1074:29" pos:end="1074:29">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="1078:5" pos:end="1080:19"><if pos:start="1078:5" pos:end="1080:19">if <condition pos:start="1078:8" pos:end="1078:37">(<expr pos:start="1078:9" pos:end="1078:36"><operator pos:start="1078:9" pos:end="1078:9">(</operator><name pos:start="1078:10" pos:end="1078:12">ret</name> <operator pos:start="1078:14" pos:end="1078:14">=</operator> <call pos:start="1078:16" pos:end="1078:31"><name pos:start="1078:16" pos:end="1078:28">guess_ni_flag</name><argument_list pos:start="1078:29" pos:end="1078:31">(<argument pos:start="1078:30" pos:end="1078:30"><expr pos:start="1078:30" pos:end="1078:30"><name pos:start="1078:30" pos:end="1078:30">s</name></expr></argument>)</argument_list></call><operator pos:start="1078:32" pos:end="1078:32">)</operator> <operator pos:start="1078:34" pos:end="1078:34">&lt;</operator> <literal type="number" pos:start="1078:36" pos:end="1078:36">0</literal></expr>)</condition><block type="pseudo" pos:start="1080:9" pos:end="1080:19"><block_content pos:start="1080:9" pos:end="1080:19">

        <return pos:start="1080:9" pos:end="1080:19">return <expr pos:start="1080:16" pos:end="1080:18"><name pos:start="1080:16" pos:end="1080:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="1084:5" pos:end="1084:67"><expr pos:start="1084:5" pos:end="1084:66"><name pos:start="1084:5" pos:end="1084:24"><name pos:start="1084:5" pos:end="1084:7">avi</name><operator pos:start="1084:8" pos:end="1084:9">-&gt;</operator><name pos:start="1084:10" pos:end="1084:24">non_interleaved</name></name> <operator pos:start="1084:26" pos:end="1084:27">|=</operator> <name pos:start="1084:29" pos:end="1084:31">ret</name> <operator pos:start="1084:33" pos:end="1084:33">|</operator> <operator pos:start="1084:35" pos:end="1084:35">(</operator><name pos:start="1084:36" pos:end="1084:43"><name pos:start="1084:36" pos:end="1084:36">s</name><operator pos:start="1084:37" pos:end="1084:38">-&gt;</operator><name pos:start="1084:39" pos:end="1084:43">flags</name></name> <operator pos:start="1084:45" pos:end="1084:45">&amp;</operator> <name pos:start="1084:47" pos:end="1084:65">AVFMT_FLAG_SORT_DTS</name><operator pos:start="1084:66" pos:end="1084:66">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="1088:5" pos:end="1088:59"><expr pos:start="1088:5" pos:end="1088:58"><name pos:start="1088:5" pos:end="1088:14">dict_entry</name> <operator pos:start="1088:16" pos:end="1088:16">=</operator> <call pos:start="1088:18" pos:end="1088:58"><name pos:start="1088:18" pos:end="1088:28">av_dict_get</name><argument_list pos:start="1088:29" pos:end="1088:58">(<argument pos:start="1088:30" pos:end="1088:40"><expr pos:start="1088:30" pos:end="1088:40"><name pos:start="1088:30" pos:end="1088:40"><name pos:start="1088:30" pos:end="1088:30">s</name><operator pos:start="1088:31" pos:end="1088:32">-&gt;</operator><name pos:start="1088:33" pos:end="1088:40">metadata</name></name></expr></argument>, <argument pos:start="1088:43" pos:end="1088:48"><expr pos:start="1088:43" pos:end="1088:48"><literal type="string" pos:start="1088:43" pos:end="1088:48">"ISFT"</literal></expr></argument>, <argument pos:start="1088:51" pos:end="1088:54"><expr pos:start="1088:51" pos:end="1088:54"><name pos:start="1088:51" pos:end="1088:54">NULL</name></expr></argument>, <argument pos:start="1088:57" pos:end="1088:57"><expr pos:start="1088:57" pos:end="1088:57"><literal type="number" pos:start="1088:57" pos:end="1088:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="1090:5" pos:end="1148:13"><if pos:start="1090:5" pos:end="1148:13">if <condition pos:start="1090:8" pos:end="1090:63">(<expr pos:start="1090:9" pos:end="1090:62"><name pos:start="1090:9" pos:end="1090:18">dict_entry</name> <operator pos:start="1090:20" pos:end="1090:21">&amp;&amp;</operator> <operator pos:start="1090:23" pos:end="1090:23">!</operator><call pos:start="1090:24" pos:end="1090:62"><name pos:start="1090:24" pos:end="1090:29">strcmp</name><argument_list pos:start="1090:30" pos:end="1090:62">(<argument pos:start="1090:31" pos:end="1090:47"><expr pos:start="1090:31" pos:end="1090:47"><name pos:start="1090:31" pos:end="1090:47"><name pos:start="1090:31" pos:end="1090:40">dict_entry</name><operator pos:start="1090:41" pos:end="1090:42">-&gt;</operator><name pos:start="1090:43" pos:end="1090:47">value</name></name></expr></argument>, <argument pos:start="1090:50" pos:end="1090:61"><expr pos:start="1090:50" pos:end="1090:61"><literal type="string" pos:start="1090:50" pos:end="1090:61">"PotEncoder"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1092:9" pos:end="1148:13"><block_content pos:start="1092:9" pos:end="1148:13">

        <for pos:start="1092:9" pos:end="1148:13">for <control pos:start="1092:13" pos:end="1092:43">(<init pos:start="1092:14" pos:end="1092:19"><expr pos:start="1092:14" pos:end="1092:18"><name pos:start="1092:14" pos:end="1092:14">i</name> <operator pos:start="1092:16" pos:end="1092:16">=</operator> <literal type="number" pos:start="1092:18" pos:end="1092:18">0</literal></expr>;</init> <condition pos:start="1092:21" pos:end="1092:38"><expr pos:start="1092:21" pos:end="1092:37"><name pos:start="1092:21" pos:end="1092:21">i</name> <operator pos:start="1092:23" pos:end="1092:23">&lt;</operator> <name pos:start="1092:25" pos:end="1092:37"><name pos:start="1092:25" pos:end="1092:25">s</name><operator pos:start="1092:26" pos:end="1092:27">-&gt;</operator><name pos:start="1092:28" pos:end="1092:37">nb_streams</name></name></expr>;</condition> <incr pos:start="1092:40" pos:end="1092:42"><expr pos:start="1092:40" pos:end="1092:42"><name pos:start="1092:40" pos:end="1092:40">i</name><operator pos:start="1092:41" pos:end="1092:42">++</operator></expr></incr>)</control> <block pos:start="1092:45" pos:end="1148:13">{<block_content pos:start="1094:13" pos:end="1148:13">

            <decl_stmt pos:start="1094:13" pos:end="1094:41"><decl pos:start="1094:13" pos:end="1094:40"><type pos:start="1094:13" pos:end="1094:22"><name pos:start="1094:13" pos:end="1094:20">AVStream</name> <modifier pos:start="1094:22" pos:end="1094:22">*</modifier></type><name pos:start="1094:23" pos:end="1094:24">st</name> <init pos:start="1094:26" pos:end="1094:40">= <expr pos:start="1094:28" pos:end="1094:40"><name pos:start="1094:28" pos:end="1094:40"><name pos:start="1094:28" pos:end="1094:28">s</name><operator pos:start="1094:29" pos:end="1094:30">-&gt;</operator><name pos:start="1094:31" pos:end="1094:37">streams</name><index pos:start="1094:38" pos:end="1094:40">[<expr pos:start="1094:39" pos:end="1094:39"><name pos:start="1094:39" pos:end="1094:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="1096:13" pos:end="1100:55"><if pos:start="1096:13" pos:end="1100:55">if <condition pos:start="1096:16" pos:end="1098:68">(   <expr pos:start="1096:20" pos:end="1098:67"><name pos:start="1096:20" pos:end="1096:41"><name pos:start="1096:20" pos:end="1096:21">st</name><operator pos:start="1096:22" pos:end="1096:23">-&gt;</operator><name pos:start="1096:24" pos:end="1096:31">codecpar</name><operator pos:start="1096:32" pos:end="1096:33">-&gt;</operator><name pos:start="1096:34" pos:end="1096:41">codec_id</name></name> <operator pos:start="1096:43" pos:end="1096:44">==</operator> <name pos:start="1096:46" pos:end="1096:67">AV_CODEC_ID_MPEG1VIDEO</name>

                <operator pos:start="1098:17" pos:end="1098:18">||</operator> <name pos:start="1098:20" pos:end="1098:41"><name pos:start="1098:20" pos:end="1098:21">st</name><operator pos:start="1098:22" pos:end="1098:23">-&gt;</operator><name pos:start="1098:24" pos:end="1098:31">codecpar</name><operator pos:start="1098:32" pos:end="1098:33">-&gt;</operator><name pos:start="1098:34" pos:end="1098:41">codec_id</name></name> <operator pos:start="1098:43" pos:end="1098:44">==</operator> <name pos:start="1098:46" pos:end="1098:67">AV_CODEC_ID_MPEG2VIDEO</name></expr>)</condition><block type="pseudo" pos:start="1100:17" pos:end="1100:55"><block_content pos:start="1100:17" pos:end="1100:55">

                <expr_stmt pos:start="1100:17" pos:end="1100:55"><expr pos:start="1100:17" pos:end="1100:54"><name pos:start="1100:17" pos:end="1100:32"><name pos:start="1100:17" pos:end="1100:18">st</name><operator pos:start="1100:19" pos:end="1100:20">-&gt;</operator><name pos:start="1100:21" pos:end="1100:32">need_parsing</name></name> <operator pos:start="1100:34" pos:end="1100:34">=</operator> <name pos:start="1100:36" pos:end="1100:54">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>




    <for pos:start="1105:5" pos:end="1148:13">for <control pos:start="1105:9" pos:end="1105:39">(<init pos:start="1105:10" pos:end="1105:15"><expr pos:start="1105:10" pos:end="1105:14"><name pos:start="1105:10" pos:end="1105:10">i</name> <operator pos:start="1105:12" pos:end="1105:12">=</operator> <literal type="number" pos:start="1105:14" pos:end="1105:14">0</literal></expr>;</init> <condition pos:start="1105:17" pos:end="1105:34"><expr pos:start="1105:17" pos:end="1105:33"><name pos:start="1105:17" pos:end="1105:17">i</name> <operator pos:start="1105:19" pos:end="1105:19">&lt;</operator> <name pos:start="1105:21" pos:end="1105:33"><name pos:start="1105:21" pos:end="1105:21">s</name><operator pos:start="1105:22" pos:end="1105:23">-&gt;</operator><name pos:start="1105:24" pos:end="1105:33">nb_streams</name></name></expr>;</condition> <incr pos:start="1105:36" pos:end="1105:38"><expr pos:start="1105:36" pos:end="1105:38"><name pos:start="1105:36" pos:end="1105:36">i</name><operator pos:start="1105:37" pos:end="1105:38">++</operator></expr></incr>)</control> <block pos:start="1105:41" pos:end="1148:13">{<block_content pos:start="1107:9" pos:end="1148:13">

        <decl_stmt pos:start="1107:9" pos:end="1107:37"><decl pos:start="1107:9" pos:end="1107:36"><type pos:start="1107:9" pos:end="1107:18"><name pos:start="1107:9" pos:end="1107:16">AVStream</name> <modifier pos:start="1107:18" pos:end="1107:18">*</modifier></type><name pos:start="1107:19" pos:end="1107:20">st</name> <init pos:start="1107:22" pos:end="1107:36">= <expr pos:start="1107:24" pos:end="1107:36"><name pos:start="1107:24" pos:end="1107:36"><name pos:start="1107:24" pos:end="1107:24">s</name><operator pos:start="1107:25" pos:end="1107:26">-&gt;</operator><name pos:start="1107:27" pos:end="1107:33">streams</name><index pos:start="1107:34" pos:end="1107:36">[<expr pos:start="1107:35" pos:end="1107:35"><name pos:start="1107:35" pos:end="1107:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="1109:9" pos:end="1111:18"><if pos:start="1109:9" pos:end="1111:18">if <condition pos:start="1109:12" pos:end="1109:33">(<expr pos:start="1109:13" pos:end="1109:32"><name pos:start="1109:13" pos:end="1109:32"><name pos:start="1109:13" pos:end="1109:14">st</name><operator pos:start="1109:15" pos:end="1109:16">-&gt;</operator><name pos:start="1109:17" pos:end="1109:32">nb_index_entries</name></name></expr>)</condition><block type="pseudo" pos:start="1111:13" pos:end="1111:18"><block_content pos:start="1111:13" pos:end="1111:18">

            <break pos:start="1111:13" pos:end="1111:18">break;</break></block_content></block></if></if_stmt>


    <comment type="line" pos:start="1114:5" pos:end="1114:63">// DV-in-AVI cannot be non-interleaved, if set this must be</comment>

    <comment type="line" pos:start="1116:5" pos:end="1116:23">// a mis-detection.</comment>

    <if_stmt pos:start="1118:5" pos:end="1120:33"><if pos:start="1118:5" pos:end="1120:33">if <condition pos:start="1118:8" pos:end="1118:22">(<expr pos:start="1118:9" pos:end="1118:21"><name pos:start="1118:9" pos:end="1118:21"><name pos:start="1118:9" pos:end="1118:11">avi</name><operator pos:start="1118:12" pos:end="1118:13">-&gt;</operator><name pos:start="1118:14" pos:end="1118:21">dv_demux</name></name></expr>)</condition><block type="pseudo" pos:start="1120:9" pos:end="1120:33"><block_content pos:start="1120:9" pos:end="1120:33">

        <expr_stmt pos:start="1120:9" pos:end="1120:33"><expr pos:start="1120:9" pos:end="1120:32"><name pos:start="1120:9" pos:end="1120:28"><name pos:start="1120:9" pos:end="1120:11">avi</name><operator pos:start="1120:12" pos:end="1120:13">-&gt;</operator><name pos:start="1120:14" pos:end="1120:28">non_interleaved</name></name> <operator pos:start="1120:30" pos:end="1120:30">=</operator> <literal type="number" pos:start="1120:32" pos:end="1120:32">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1122:5" pos:end="1148:13"><if pos:start="1122:5" pos:end="1148:13">if <condition pos:start="1122:8" pos:end="1122:51">(<expr pos:start="1122:9" pos:end="1122:50"><name pos:start="1122:9" pos:end="1122:9">i</name> <operator pos:start="1122:11" pos:end="1122:12">==</operator> <name pos:start="1122:14" pos:end="1122:26"><name pos:start="1122:14" pos:end="1122:14">s</name><operator pos:start="1122:15" pos:end="1122:16">-&gt;</operator><name pos:start="1122:17" pos:end="1122:26">nb_streams</name></name> <operator pos:start="1122:28" pos:end="1122:29">&amp;&amp;</operator> <name pos:start="1122:31" pos:end="1122:50"><name pos:start="1122:31" pos:end="1122:33">avi</name><operator pos:start="1122:34" pos:end="1122:35">-&gt;</operator><name pos:start="1122:36" pos:end="1122:50">non_interleaved</name></name></expr>)</condition> <block pos:start="1122:53" pos:end="1148:13">{<block_content pos:start="1124:9" pos:end="1148:13">

        <expr_stmt pos:start="1124:9" pos:end="1126:80"><expr pos:start="1124:9" pos:end="1126:79"><call pos:start="1124:9" pos:end="1126:79"><name pos:start="1124:9" pos:end="1124:14">av_log</name><argument_list pos:start="1124:15" pos:end="1126:79">(<argument pos:start="1124:16" pos:end="1124:16"><expr pos:start="1124:16" pos:end="1124:16"><name pos:start="1124:16" pos:end="1124:16">s</name></expr></argument>, <argument pos:start="1124:19" pos:end="1124:32"><expr pos:start="1124:19" pos:end="1124:32"><name pos:start="1124:19" pos:end="1124:32">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="1126:16" pos:end="1126:78"><expr pos:start="1126:16" pos:end="1126:78"><literal type="string" pos:start="1126:16" pos:end="1126:78">"Non-interleaved AVI without index, switching to interleaved\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1128:9" pos:end="1128:33"><expr pos:start="1128:9" pos:end="1128:32"><name pos:start="1128:9" pos:end="1128:28"><name pos:start="1128:9" pos:end="1128:11">avi</name><operator pos:start="1128:12" pos:end="1128:13">-&gt;</operator><name pos:start="1128:14" pos:end="1128:28">non_interleaved</name></name> <operator pos:start="1128:30" pos:end="1128:30">=</operator> <literal type="number" pos:start="1128:32" pos:end="1128:32">0</literal></expr>;</expr_stmt>




    <if_stmt pos:start="1133:5" pos:end="1148:13"><if pos:start="1133:5" pos:end="1148:13">if <condition pos:start="1133:8" pos:end="1133:29">(<expr pos:start="1133:9" pos:end="1133:28"><name pos:start="1133:9" pos:end="1133:28"><name pos:start="1133:9" pos:end="1133:11">avi</name><operator pos:start="1133:12" pos:end="1133:13">-&gt;</operator><name pos:start="1133:14" pos:end="1133:28">non_interleaved</name></name></expr>)</condition> <block pos:start="1133:31" pos:end="1148:13">{<block_content pos:start="1135:9" pos:end="1148:13">

        <expr_stmt pos:start="1135:9" pos:end="1135:56"><expr pos:start="1135:9" pos:end="1135:55"><call pos:start="1135:9" pos:end="1135:55"><name pos:start="1135:9" pos:end="1135:14">av_log</name><argument_list pos:start="1135:15" pos:end="1135:55">(<argument pos:start="1135:16" pos:end="1135:16"><expr pos:start="1135:16" pos:end="1135:16"><name pos:start="1135:16" pos:end="1135:16">s</name></expr></argument>, <argument pos:start="1135:19" pos:end="1135:29"><expr pos:start="1135:19" pos:end="1135:29"><name pos:start="1135:19" pos:end="1135:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="1135:32" pos:end="1135:54"><expr pos:start="1135:32" pos:end="1135:54"><literal type="string" pos:start="1135:32" pos:end="1135:54">"non-interleaved AVI\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1137:9" pos:end="1137:23"><expr pos:start="1137:9" pos:end="1137:22"><call pos:start="1137:9" pos:end="1137:22"><name pos:start="1137:9" pos:end="1137:19">clean_index</name><argument_list pos:start="1137:20" pos:end="1137:22">(<argument pos:start="1137:21" pos:end="1137:21"><expr pos:start="1137:21" pos:end="1137:21"><name pos:start="1137:21" pos:end="1137:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="1142:5" pos:end="1142:53"><expr pos:start="1142:5" pos:end="1142:52"><call pos:start="1142:5" pos:end="1142:52"><name pos:start="1142:5" pos:end="1142:24">ff_metadata_conv_ctx</name><argument_list pos:start="1142:25" pos:end="1142:52">(<argument pos:start="1142:26" pos:end="1142:26"><expr pos:start="1142:26" pos:end="1142:26"><name pos:start="1142:26" pos:end="1142:26">s</name></expr></argument>, <argument pos:start="1142:29" pos:end="1142:32"><expr pos:start="1142:29" pos:end="1142:32"><name pos:start="1142:29" pos:end="1142:32">NULL</name></expr></argument>, <argument pos:start="1142:35" pos:end="1142:51"><expr pos:start="1142:35" pos:end="1142:51"><name pos:start="1142:35" pos:end="1142:51">avi_metadata_conv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1144:5" pos:end="1144:53"><expr pos:start="1144:5" pos:end="1144:52"><call pos:start="1144:5" pos:end="1144:52"><name pos:start="1144:5" pos:end="1144:24">ff_metadata_conv_ctx</name><argument_list pos:start="1144:25" pos:end="1144:52">(<argument pos:start="1144:26" pos:end="1144:26"><expr pos:start="1144:26" pos:end="1144:26"><name pos:start="1144:26" pos:end="1144:26">s</name></expr></argument>, <argument pos:start="1144:29" pos:end="1144:32"><expr pos:start="1144:29" pos:end="1144:32"><name pos:start="1144:29" pos:end="1144:32">NULL</name></expr></argument>, <argument pos:start="1144:35" pos:end="1144:51"><expr pos:start="1144:35" pos:end="1144:51"><name pos:start="1144:35" pos:end="1144:51">ff_riff_info_conv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="1148:5" pos:end="1148:13">return <expr pos:start="1148:12" pos:end="1148:12"><literal type="number" pos:start="1148:12" pos:end="1148:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></block_content></block></switch></block_content></block></for></block_content></block></function>
</unit>
