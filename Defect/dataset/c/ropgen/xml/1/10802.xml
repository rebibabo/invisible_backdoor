<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10802.c" pos:tabs="8"><function pos:start="1:1" pos:end="495:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">BlockDriverState</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:42">bdrv_open_inherit</name><parameter_list pos:start="1:43" pos:end="11:56">(<parameter pos:start="1:44" pos:end="1:63"><decl pos:start="1:44" pos:end="1:63"><type pos:start="1:44" pos:end="1:63"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:53">char</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:63">filename</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:64"><decl pos:start="3:44" pos:end="3:64"><type pos:start="3:44" pos:end="3:64"><specifier pos:start="3:44" pos:end="3:48">const</specifier> <name pos:start="3:50" pos:end="3:53">char</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:64">reference</name></decl></parameter>,

                                           <parameter pos:start="5:44" pos:end="5:57"><decl pos:start="5:44" pos:end="5:57"><type pos:start="5:44" pos:end="5:57"><name pos:start="5:44" pos:end="5:48">QDict</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:57">options</name></decl></parameter>, <parameter pos:start="5:60" pos:end="5:68"><decl pos:start="5:60" pos:end="5:68"><type pos:start="5:60" pos:end="5:68"><name pos:start="5:60" pos:end="5:62">int</name></type> <name pos:start="5:64" pos:end="5:68">flags</name></decl></parameter>,

                                           <parameter pos:start="7:44" pos:end="7:67"><decl pos:start="7:44" pos:end="7:67"><type pos:start="7:44" pos:end="7:67"><name pos:start="7:44" pos:end="7:59">BlockDriverState</name> <modifier pos:start="7:61" pos:end="7:61">*</modifier></type><name pos:start="7:62" pos:end="7:67">parent</name></decl></parameter>,

                                           <parameter pos:start="9:44" pos:end="9:74"><decl pos:start="9:44" pos:end="9:74"><type pos:start="9:44" pos:end="9:74"><specifier pos:start="9:44" pos:end="9:48">const</specifier> <name pos:start="9:50" pos:end="9:62">BdrvChildRole</name> <modifier pos:start="9:64" pos:end="9:64">*</modifier></type><name pos:start="9:65" pos:end="9:74">child_role</name></decl></parameter>,

                                           <parameter pos:start="11:44" pos:end="11:55"><decl pos:start="11:44" pos:end="11:55"><type pos:start="11:44" pos:end="11:55"><name pos:start="11:44" pos:end="11:48">Error</name> <modifier pos:start="11:50" pos:end="11:50">*</modifier><modifier pos:start="11:51" pos:end="11:51">*</modifier></type><name pos:start="11:52" pos:end="11:55">errp</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="495:1">{<block_content pos:start="15:5" pos:end="493:16">

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:16">BlockBackend</name> <modifier pos:start="17:18" pos:end="17:18">*</modifier></type><name pos:start="17:19" pos:end="17:22">file</name> <init pos:start="17:24" pos:end="17:29">= <expr pos:start="17:26" pos:end="17:29"><name pos:start="17:26" pos:end="17:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:20">BlockDriverState</name> <modifier pos:start="19:22" pos:end="19:22">*</modifier></type><name pos:start="19:23" pos:end="19:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:28"><decl pos:start="21:5" pos:end="21:27"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:15">BlockDriver</name> <modifier pos:start="21:17" pos:end="21:17">*</modifier></type><name pos:start="21:18" pos:end="21:20">drv</name> <init pos:start="21:22" pos:end="21:27">= <expr pos:start="21:24" pos:end="21:27"><name pos:start="21:24" pos:end="21:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:24"><decl pos:start="23:5" pos:end="23:23"><type pos:start="23:5" pos:end="23:16"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:14">char</name> <modifier pos:start="23:16" pos:end="23:16">*</modifier></type><name pos:start="23:17" pos:end="23:23">drvname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:24"><decl pos:start="25:5" pos:end="25:23"><type pos:start="25:5" pos:end="25:16"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:14">char</name> <modifier pos:start="25:16" pos:end="25:16">*</modifier></type><name pos:start="25:17" pos:end="25:23">backing</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:28"><decl pos:start="27:5" pos:end="27:27"><type pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:9">Error</name> <modifier pos:start="27:11" pos:end="27:11">*</modifier></type><name pos:start="27:12" pos:end="27:20">local_err</name> <init pos:start="27:22" pos:end="27:27">= <expr pos:start="27:24" pos:end="27:27"><name pos:start="27:24" pos:end="27:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:35"><decl pos:start="29:5" pos:end="29:34"><type pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:9">QDict</name> <modifier pos:start="29:11" pos:end="29:11">*</modifier></type><name pos:start="29:12" pos:end="29:27">snapshot_options</name> <init pos:start="29:29" pos:end="29:34">= <expr pos:start="29:31" pos:end="29:34"><name pos:start="29:31" pos:end="29:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:27"><decl pos:start="31:5" pos:end="31:26"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:22">snapshot_flags</name> <init pos:start="31:24" pos:end="31:26">= <expr pos:start="31:26" pos:end="31:26"><literal type="number" pos:start="31:26" pos:end="31:26">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:34"><expr pos:start="35:5" pos:end="35:33"><call pos:start="35:5" pos:end="35:33"><name pos:start="35:5" pos:end="35:10">assert</name><argument_list pos:start="35:11" pos:end="35:33">(<argument pos:start="35:12" pos:end="35:32"><expr pos:start="35:12" pos:end="35:32"><operator pos:start="35:12" pos:end="35:12">!</operator><name pos:start="35:13" pos:end="35:22">child_role</name> <operator pos:start="35:24" pos:end="35:25">||</operator> <operator pos:start="35:27" pos:end="35:27">!</operator><name pos:start="35:28" pos:end="35:32">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:35"><expr pos:start="37:5" pos:end="37:34"><call pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:10">assert</name><argument_list pos:start="37:11" pos:end="37:34">(<argument pos:start="37:12" pos:end="37:33"><expr pos:start="37:12" pos:end="37:33"><operator pos:start="37:12" pos:end="37:12">!</operator><name pos:start="37:13" pos:end="37:22">child_role</name> <operator pos:start="37:24" pos:end="37:25">==</operator> <operator pos:start="37:27" pos:end="37:27">!</operator><name pos:start="37:28" pos:end="37:33">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="75:5"><if pos:start="41:5" pos:end="75:5">if <condition pos:start="41:8" pos:end="41:18">(<expr pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:17">reference</name></expr>)</condition> <block pos:start="41:20" pos:end="75:5">{<block_content pos:start="43:9" pos:end="73:18">

        <decl_stmt pos:start="43:9" pos:end="43:71"><decl pos:start="43:9" pos:end="43:70"><type pos:start="43:9" pos:end="43:12"><name pos:start="43:9" pos:end="43:12">bool</name></type> <name pos:start="43:14" pos:end="43:30">options_non_empty</name> <init pos:start="43:32" pos:end="43:70">= <expr pos:start="43:34" pos:end="43:70"><ternary pos:start="43:34" pos:end="43:70"><condition pos:start="43:34" pos:end="43:42"><expr pos:start="43:34" pos:end="43:40"><name pos:start="43:34" pos:end="43:40">options</name></expr> ?</condition><then pos:start="43:44" pos:end="43:62"> <expr pos:start="43:44" pos:end="43:62"><call pos:start="43:44" pos:end="43:62"><name pos:start="43:44" pos:end="43:53">qdict_size</name><argument_list pos:start="43:54" pos:end="43:62">(<argument pos:start="43:55" pos:end="43:61"><expr pos:start="43:55" pos:end="43:61"><name pos:start="43:55" pos:end="43:61">options</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="43:64" pos:end="43:70">: <expr pos:start="43:66" pos:end="43:70"><name pos:start="43:66" pos:end="43:70">false</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:25"><expr pos:start="45:9" pos:end="45:24"><call pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:15">QDECREF</name><argument_list pos:start="45:16" pos:end="45:24">(<argument pos:start="45:17" pos:end="45:23"><expr pos:start="45:17" pos:end="45:23"><name pos:start="45:17" pos:end="45:23">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="49:9" pos:end="57:9"><if pos:start="49:9" pos:end="57:9">if <condition pos:start="49:12" pos:end="49:42">(<expr pos:start="49:13" pos:end="49:41"><name pos:start="49:13" pos:end="49:20">filename</name> <operator pos:start="49:22" pos:end="49:23">||</operator> <name pos:start="49:25" pos:end="49:41">options_non_empty</name></expr>)</condition> <block pos:start="49:44" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:24">

            <expr_stmt pos:start="51:13" pos:end="53:63"><expr pos:start="51:13" pos:end="53:62"><call pos:start="51:13" pos:end="53:62"><name pos:start="51:13" pos:end="51:22">error_setg</name><argument_list pos:start="51:23" pos:end="53:62">(<argument pos:start="51:24" pos:end="51:27"><expr pos:start="51:24" pos:end="51:27"><name pos:start="51:24" pos:end="51:27">errp</name></expr></argument>, <argument pos:start="51:30" pos:end="53:61"><expr pos:start="51:30" pos:end="53:61"><literal type="string" pos:start="51:30" pos:end="51:78">"Cannot reference an existing block device with "</literal>

                       <literal type="string" pos:start="53:24" pos:end="53:61">"additional options or a new filename"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:24">return <expr pos:start="55:20" pos:end="55:23"><name pos:start="55:20" pos:end="55:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:56"><expr pos:start="61:9" pos:end="61:55"><name pos:start="61:9" pos:end="61:10">bs</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <call pos:start="61:14" pos:end="61:55"><name pos:start="61:14" pos:end="61:27">bdrv_lookup_bs</name><argument_list pos:start="61:28" pos:end="61:55">(<argument pos:start="61:29" pos:end="61:37"><expr pos:start="61:29" pos:end="61:37"><name pos:start="61:29" pos:end="61:37">reference</name></expr></argument>, <argument pos:start="61:40" pos:end="61:48"><expr pos:start="61:40" pos:end="61:48"><name pos:start="61:40" pos:end="61:48">reference</name></expr></argument>, <argument pos:start="61:51" pos:end="61:54"><expr pos:start="61:51" pos:end="61:54"><name pos:start="61:51" pos:end="61:54">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="67:9"><if pos:start="63:9" pos:end="67:9">if <condition pos:start="63:12" pos:end="63:16">(<expr pos:start="63:13" pos:end="63:15"><operator pos:start="63:13" pos:end="63:13">!</operator><name pos:start="63:14" pos:end="63:15">bs</name></expr>)</condition> <block pos:start="63:18" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:24">

            <return pos:start="65:13" pos:end="65:24">return <expr pos:start="65:20" pos:end="65:23"><name pos:start="65:20" pos:end="65:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:21"><expr pos:start="71:9" pos:end="71:20"><call pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:16">bdrv_ref</name><argument_list pos:start="71:17" pos:end="71:20">(<argument pos:start="71:18" pos:end="71:19"><expr pos:start="71:18" pos:end="71:19"><name pos:start="71:18" pos:end="71:19">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:18">return <expr pos:start="73:16" pos:end="73:17"><name pos:start="73:16" pos:end="73:17">bs</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:20"><expr pos:start="79:5" pos:end="79:19"><name pos:start="79:5" pos:end="79:6">bs</name> <operator pos:start="79:8" pos:end="79:8">=</operator> <call pos:start="79:10" pos:end="79:19"><name pos:start="79:10" pos:end="79:17">bdrv_new</name><argument_list pos:start="79:18" pos:end="79:19">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:44">/* NULL means an empty set of options */</comment>

    <if_stmt pos:start="85:5" pos:end="89:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:24">(<expr pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:15">options</name> <operator pos:start="85:17" pos:end="85:18">==</operator> <name pos:start="85:20" pos:end="85:23">NULL</name></expr>)</condition> <block pos:start="85:26" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:30">

        <expr_stmt pos:start="87:9" pos:end="87:30"><expr pos:start="87:9" pos:end="87:29"><name pos:start="87:9" pos:end="87:15">options</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <call pos:start="87:19" pos:end="87:29"><name pos:start="87:19" pos:end="87:27">qdict_new</name><argument_list pos:start="87:28" pos:end="87:29">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:69">/* json: syntax counts as explicit options, as if in the QDict */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:56"><expr pos:start="95:5" pos:end="95:55"><call pos:start="95:5" pos:end="95:55"><name pos:start="95:5" pos:end="95:23">parse_json_protocol</name><argument_list pos:start="95:24" pos:end="95:55">(<argument pos:start="95:25" pos:end="95:31"><expr pos:start="95:25" pos:end="95:31"><name pos:start="95:25" pos:end="95:31">options</name></expr></argument>, <argument pos:start="95:34" pos:end="95:42"><expr pos:start="95:34" pos:end="95:42"><operator pos:start="95:34" pos:end="95:34">&amp;</operator><name pos:start="95:35" pos:end="95:42">filename</name></expr></argument>, <argument pos:start="95:45" pos:end="95:54"><expr pos:start="95:45" pos:end="95:54"><operator pos:start="95:45" pos:end="95:45">&amp;</operator><name pos:start="95:46" pos:end="95:54">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="101:5"><if pos:start="97:5" pos:end="101:5">if <condition pos:start="97:8" pos:end="97:18">(<expr pos:start="97:9" pos:end="97:17"><name pos:start="97:9" pos:end="97:17">local_err</name></expr>)</condition> <block pos:start="97:20" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:18">

        <goto pos:start="99:9" pos:end="99:18">goto <name pos:start="99:14" pos:end="99:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:56"><expr pos:start="105:5" pos:end="105:55"><name pos:start="105:5" pos:end="105:24"><name pos:start="105:5" pos:end="105:6">bs</name><operator pos:start="105:7" pos:end="105:8">-&gt;</operator><name pos:start="105:9" pos:end="105:24">explicit_options</name></name> <operator pos:start="105:26" pos:end="105:26">=</operator> <call pos:start="105:28" pos:end="105:55"><name pos:start="105:28" pos:end="105:46">qdict_clone_shallow</name><argument_list pos:start="105:47" pos:end="105:55">(<argument pos:start="105:48" pos:end="105:54"><expr pos:start="105:48" pos:end="105:54"><name pos:start="105:48" pos:end="105:54">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="109:5" pos:end="117:5"><if pos:start="109:5" pos:end="117:5">if <condition pos:start="109:8" pos:end="109:19">(<expr pos:start="109:9" pos:end="109:18"><name pos:start="109:9" pos:end="109:18">child_role</name></expr>)</condition> <block pos:start="109:21" pos:end="117:5">{<block_content pos:start="111:9" pos:end="115:73">

        <expr_stmt pos:start="111:9" pos:end="111:35"><expr pos:start="111:9" pos:end="111:34"><name pos:start="111:9" pos:end="111:25"><name pos:start="111:9" pos:end="111:10">bs</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:25">inherits_from</name></name> <operator pos:start="111:27" pos:end="111:27">=</operator> <name pos:start="111:29" pos:end="111:34">parent</name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="115:73"><expr pos:start="113:9" pos:end="115:72"><call pos:start="113:9" pos:end="115:72"><name pos:start="113:9" pos:end="113:35"><name pos:start="113:9" pos:end="113:18">child_role</name><operator pos:start="113:19" pos:end="113:20">-&gt;</operator><name pos:start="113:21" pos:end="113:35">inherit_options</name></name><argument_list pos:start="113:36" pos:end="115:72">(<argument pos:start="113:37" pos:end="113:42"><expr pos:start="113:37" pos:end="113:42"><operator pos:start="113:37" pos:end="113:37">&amp;</operator><name pos:start="113:38" pos:end="113:42">flags</name></expr></argument>, <argument pos:start="113:45" pos:end="113:51"><expr pos:start="113:45" pos:end="113:51"><name pos:start="113:45" pos:end="113:51">options</name></expr></argument>,

                                    <argument pos:start="115:37" pos:end="115:54"><expr pos:start="115:37" pos:end="115:54"><name pos:start="115:37" pos:end="115:54"><name pos:start="115:37" pos:end="115:42">parent</name><operator pos:start="115:43" pos:end="115:44">-&gt;</operator><name pos:start="115:45" pos:end="115:54">open_flags</name></name></expr></argument>, <argument pos:start="115:57" pos:end="115:71"><expr pos:start="115:57" pos:end="115:71"><name pos:start="115:57" pos:end="115:71"><name pos:start="115:57" pos:end="115:62">parent</name><operator pos:start="115:63" pos:end="115:64">-&gt;</operator><name pos:start="115:65" pos:end="115:71">options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:68"><expr pos:start="121:5" pos:end="121:67"><name pos:start="121:5" pos:end="121:7">ret</name> <operator pos:start="121:9" pos:end="121:9">=</operator> <call pos:start="121:11" pos:end="121:67"><name pos:start="121:11" pos:end="121:27">bdrv_fill_options</name><argument_list pos:start="121:28" pos:end="121:67">(<argument pos:start="121:29" pos:end="121:36"><expr pos:start="121:29" pos:end="121:36"><operator pos:start="121:29" pos:end="121:29">&amp;</operator><name pos:start="121:30" pos:end="121:36">options</name></expr></argument>, <argument pos:start="121:39" pos:end="121:46"><expr pos:start="121:39" pos:end="121:46"><name pos:start="121:39" pos:end="121:46">filename</name></expr></argument>, <argument pos:start="121:49" pos:end="121:54"><expr pos:start="121:49" pos:end="121:54"><operator pos:start="121:49" pos:end="121:49">&amp;</operator><name pos:start="121:50" pos:end="121:54">flags</name></expr></argument>, <argument pos:start="121:57" pos:end="121:66"><expr pos:start="121:57" pos:end="121:66"><operator pos:start="121:57" pos:end="121:57">&amp;</operator><name pos:start="121:58" pos:end="121:66">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="123:5" pos:end="127:5"><if pos:start="123:5" pos:end="127:5">if <condition pos:start="123:8" pos:end="123:18">(<expr pos:start="123:9" pos:end="123:17"><name pos:start="123:9" pos:end="123:17">local_err</name></expr>)</condition> <block pos:start="123:20" pos:end="127:5">{<block_content pos:start="125:9" pos:end="125:18">

        <goto pos:start="125:9" pos:end="125:18">goto <name pos:start="125:14" pos:end="125:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="131:5" pos:end="143:7">/*

     * Set the BDRV_O_RDWR and BDRV_O_ALLOW_RDWR flags.

     * Caution: getting a boolean member of @options requires care.

     * When @options come from -blockdev or blockdev_add, members are

     * typed according to the QAPI schema, but when they come from

     * -drive, they're all QString.

     */</comment>

    <if_stmt pos:start="145:5" pos:end="155:5"><if pos:start="145:5" pos:end="151:5">if <condition pos:start="145:8" pos:end="147:64">(<expr pos:start="145:9" pos:end="147:63"><call pos:start="145:9" pos:end="145:71"><name pos:start="145:9" pos:end="145:17">g_strcmp0</name><argument_list pos:start="145:18" pos:end="145:71">(<argument pos:start="145:19" pos:end="145:64"><expr pos:start="145:19" pos:end="145:64"><call pos:start="145:19" pos:end="145:64"><name pos:start="145:19" pos:end="145:35">qdict_get_try_str</name><argument_list pos:start="145:36" pos:end="145:64">(<argument pos:start="145:37" pos:end="145:43"><expr pos:start="145:37" pos:end="145:43"><name pos:start="145:37" pos:end="145:43">options</name></expr></argument>, <argument pos:start="145:46" pos:end="145:63"><expr pos:start="145:46" pos:end="145:63"><name pos:start="145:46" pos:end="145:63">BDRV_OPT_READ_ONLY</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="145:67" pos:end="145:70"><expr pos:start="145:67" pos:end="145:70"><literal type="string" pos:start="145:67" pos:end="145:70">"on"</literal></expr></argument>)</argument_list></call> <operator pos:start="145:73" pos:end="145:74">&amp;&amp;</operator>

        <operator pos:start="147:9" pos:end="147:9">!</operator><call pos:start="147:10" pos:end="147:63"><name pos:start="147:10" pos:end="147:27">qdict_get_try_bool</name><argument_list pos:start="147:28" pos:end="147:63">(<argument pos:start="147:29" pos:end="147:35"><expr pos:start="147:29" pos:end="147:35"><name pos:start="147:29" pos:end="147:35">options</name></expr></argument>, <argument pos:start="147:38" pos:end="147:55"><expr pos:start="147:38" pos:end="147:55"><name pos:start="147:38" pos:end="147:55">BDRV_OPT_READ_ONLY</name></expr></argument>, <argument pos:start="147:58" pos:end="147:62"><expr pos:start="147:58" pos:end="147:62"><name pos:start="147:58" pos:end="147:62">false</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="147:66" pos:end="151:5">{<block_content pos:start="149:9" pos:end="149:51">

        <expr_stmt pos:start="149:9" pos:end="149:51"><expr pos:start="149:9" pos:end="149:50"><name pos:start="149:9" pos:end="149:13">flags</name> <operator pos:start="149:15" pos:end="149:16">|=</operator> <operator pos:start="149:18" pos:end="149:18">(</operator><name pos:start="149:19" pos:end="149:29">BDRV_O_RDWR</name> <operator pos:start="149:31" pos:end="149:31">|</operator> <name pos:start="149:33" pos:end="149:49">BDRV_O_ALLOW_RDWR</name><operator pos:start="149:50" pos:end="149:50">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="151:7" pos:end="155:5">else <block pos:start="151:12" pos:end="155:5">{<block_content pos:start="153:9" pos:end="153:30">

        <expr_stmt pos:start="153:9" pos:end="153:30"><expr pos:start="153:9" pos:end="153:29"><name pos:start="153:9" pos:end="153:13">flags</name> <operator pos:start="153:15" pos:end="153:16">&amp;=</operator> <operator pos:start="153:18" pos:end="153:18">~</operator><name pos:start="153:19" pos:end="153:29">BDRV_O_RDWR</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="159:5" pos:end="173:5"><if pos:start="159:5" pos:end="173:5">if <condition pos:start="159:8" pos:end="159:32">(<expr pos:start="159:9" pos:end="159:31"><name pos:start="159:9" pos:end="159:13">flags</name> <operator pos:start="159:15" pos:end="159:15">&amp;</operator> <name pos:start="159:17" pos:end="159:31">BDRV_O_SNAPSHOT</name></expr>)</condition> <block pos:start="159:34" pos:end="173:5">{<block_content pos:start="161:9" pos:end="171:62">

        <expr_stmt pos:start="161:9" pos:end="161:39"><expr pos:start="161:9" pos:end="161:38"><name pos:start="161:9" pos:end="161:24">snapshot_options</name> <operator pos:start="161:26" pos:end="161:26">=</operator> <call pos:start="161:28" pos:end="161:38"><name pos:start="161:28" pos:end="161:36">qdict_new</name><argument_list pos:start="161:37" pos:end="161:38">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="165:51"><expr pos:start="163:9" pos:end="165:50"><call pos:start="163:9" pos:end="165:50"><name pos:start="163:9" pos:end="163:34">bdrv_temp_snapshot_options</name><argument_list pos:start="163:35" pos:end="165:50">(<argument pos:start="163:36" pos:end="163:50"><expr pos:start="163:36" pos:end="163:50"><operator pos:start="163:36" pos:end="163:36">&amp;</operator><name pos:start="163:37" pos:end="163:50">snapshot_flags</name></expr></argument>, <argument pos:start="163:53" pos:end="163:68"><expr pos:start="163:53" pos:end="163:68"><name pos:start="163:53" pos:end="163:68">snapshot_options</name></expr></argument>,

                                   <argument pos:start="165:36" pos:end="165:40"><expr pos:start="165:36" pos:end="165:40"><name pos:start="165:36" pos:end="165:40">flags</name></expr></argument>, <argument pos:start="165:43" pos:end="165:49"><expr pos:start="165:43" pos:end="165:49"><name pos:start="165:43" pos:end="165:49">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="167:9" pos:end="167:61">/* Let bdrv_backing_options() override "read-only" */</comment>

        <expr_stmt pos:start="169:9" pos:end="169:47"><expr pos:start="169:9" pos:end="169:46"><call pos:start="169:9" pos:end="169:46"><name pos:start="169:9" pos:end="169:17">qdict_del</name><argument_list pos:start="169:18" pos:end="169:46">(<argument pos:start="169:19" pos:end="169:25"><expr pos:start="169:19" pos:end="169:25"><name pos:start="169:19" pos:end="169:25">options</name></expr></argument>, <argument pos:start="169:28" pos:end="169:45"><expr pos:start="169:28" pos:end="169:45"><name pos:start="169:28" pos:end="169:45">BDRV_OPT_READ_ONLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:62"><expr pos:start="171:9" pos:end="171:61"><call pos:start="171:9" pos:end="171:61"><name pos:start="171:9" pos:end="171:28">bdrv_backing_options</name><argument_list pos:start="171:29" pos:end="171:61">(<argument pos:start="171:30" pos:end="171:35"><expr pos:start="171:30" pos:end="171:35"><operator pos:start="171:30" pos:end="171:30">&amp;</operator><name pos:start="171:31" pos:end="171:35">flags</name></expr></argument>, <argument pos:start="171:38" pos:end="171:44"><expr pos:start="171:38" pos:end="171:44"><name pos:start="171:38" pos:end="171:44">options</name></expr></argument>, <argument pos:start="171:47" pos:end="171:51"><expr pos:start="171:47" pos:end="171:51"><name pos:start="171:47" pos:end="171:51">flags</name></expr></argument>, <argument pos:start="171:54" pos:end="171:60"><expr pos:start="171:54" pos:end="171:60"><name pos:start="171:54" pos:end="171:60">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="177:5" pos:end="177:27"><expr pos:start="177:5" pos:end="177:26"><name pos:start="177:5" pos:end="177:18"><name pos:start="177:5" pos:end="177:6">bs</name><operator pos:start="177:7" pos:end="177:8">-&gt;</operator><name pos:start="177:9" pos:end="177:18">open_flags</name></name> <operator pos:start="177:20" pos:end="177:20">=</operator> <name pos:start="177:22" pos:end="177:26">flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:26"><expr pos:start="179:5" pos:end="179:25"><name pos:start="179:5" pos:end="179:15"><name pos:start="179:5" pos:end="179:6">bs</name><operator pos:start="179:7" pos:end="179:8">-&gt;</operator><name pos:start="179:9" pos:end="179:15">options</name></name> <operator pos:start="179:17" pos:end="179:17">=</operator> <name pos:start="179:19" pos:end="179:25">options</name></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:43"><expr pos:start="181:5" pos:end="181:42"><name pos:start="181:5" pos:end="181:11">options</name> <operator pos:start="181:13" pos:end="181:13">=</operator> <call pos:start="181:15" pos:end="181:42"><name pos:start="181:15" pos:end="181:33">qdict_clone_shallow</name><argument_list pos:start="181:34" pos:end="181:42">(<argument pos:start="181:35" pos:end="181:41"><expr pos:start="181:35" pos:end="181:41"><name pos:start="181:35" pos:end="181:41">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="185:5" pos:end="185:44">/* Find the right image format driver */</comment>

    <comment type="block" pos:start="187:5" pos:end="187:57">/* See cautionary note on accessing @options above */</comment>

    <expr_stmt pos:start="189:5" pos:end="189:51"><expr pos:start="189:5" pos:end="189:50"><name pos:start="189:5" pos:end="189:11">drvname</name> <operator pos:start="189:13" pos:end="189:13">=</operator> <call pos:start="189:15" pos:end="189:50"><name pos:start="189:15" pos:end="189:31">qdict_get_try_str</name><argument_list pos:start="189:32" pos:end="189:50">(<argument pos:start="189:33" pos:end="189:39"><expr pos:start="189:33" pos:end="189:39"><name pos:start="189:33" pos:end="189:39">options</name></expr></argument>, <argument pos:start="189:42" pos:end="189:49"><expr pos:start="189:42" pos:end="189:49"><literal type="string" pos:start="189:42" pos:end="189:49">"driver"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="191:5" pos:end="203:5"><if pos:start="191:5" pos:end="203:5">if <condition pos:start="191:8" pos:end="191:16">(<expr pos:start="191:9" pos:end="191:15"><name pos:start="191:9" pos:end="191:15">drvname</name></expr>)</condition> <block pos:start="191:18" pos:end="203:5">{<block_content pos:start="193:9" pos:end="201:9">

        <expr_stmt pos:start="193:9" pos:end="193:40"><expr pos:start="193:9" pos:end="193:39"><name pos:start="193:9" pos:end="193:11">drv</name> <operator pos:start="193:13" pos:end="193:13">=</operator> <call pos:start="193:15" pos:end="193:39"><name pos:start="193:15" pos:end="193:30">bdrv_find_format</name><argument_list pos:start="193:31" pos:end="193:39">(<argument pos:start="193:32" pos:end="193:38"><expr pos:start="193:32" pos:end="193:38"><name pos:start="193:32" pos:end="193:38">drvname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="195:9" pos:end="201:9"><if pos:start="195:9" pos:end="201:9">if <condition pos:start="195:12" pos:end="195:17">(<expr pos:start="195:13" pos:end="195:16"><operator pos:start="195:13" pos:end="195:13">!</operator><name pos:start="195:14" pos:end="195:16">drv</name></expr>)</condition> <block pos:start="195:19" pos:end="201:9">{<block_content pos:start="197:13" pos:end="199:22">

            <expr_stmt pos:start="197:13" pos:end="197:62"><expr pos:start="197:13" pos:end="197:61"><call pos:start="197:13" pos:end="197:61"><name pos:start="197:13" pos:end="197:22">error_setg</name><argument_list pos:start="197:23" pos:end="197:61">(<argument pos:start="197:24" pos:end="197:27"><expr pos:start="197:24" pos:end="197:27"><name pos:start="197:24" pos:end="197:27">errp</name></expr></argument>, <argument pos:start="197:30" pos:end="197:51"><expr pos:start="197:30" pos:end="197:51"><literal type="string" pos:start="197:30" pos:end="197:51">"Unknown driver: '%s'"</literal></expr></argument>, <argument pos:start="197:54" pos:end="197:60"><expr pos:start="197:54" pos:end="197:60"><name pos:start="197:54" pos:end="197:60">drvname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="199:13" pos:end="199:22">goto <name pos:start="199:18" pos:end="199:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="207:5" pos:end="207:50"><expr pos:start="207:5" pos:end="207:49"><call pos:start="207:5" pos:end="207:49"><name pos:start="207:5" pos:end="207:10">assert</name><argument_list pos:start="207:11" pos:end="207:49">(<argument pos:start="207:12" pos:end="207:48"><expr pos:start="207:12" pos:end="207:48"><name pos:start="207:12" pos:end="207:18">drvname</name> <operator pos:start="207:20" pos:end="207:21">||</operator> <operator pos:start="207:23" pos:end="207:23">!</operator><operator pos:start="207:24" pos:end="207:24">(</operator><name pos:start="207:25" pos:end="207:29">flags</name> <operator pos:start="207:31" pos:end="207:31">&amp;</operator> <name pos:start="207:33" pos:end="207:47">BDRV_O_PROTOCOL</name><operator pos:start="207:48" pos:end="207:48">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="211:5" pos:end="211:57">/* See cautionary note on accessing @options above */</comment>

    <expr_stmt pos:start="213:5" pos:end="213:52"><expr pos:start="213:5" pos:end="213:51"><name pos:start="213:5" pos:end="213:11">backing</name> <operator pos:start="213:13" pos:end="213:13">=</operator> <call pos:start="213:15" pos:end="213:51"><name pos:start="213:15" pos:end="213:31">qdict_get_try_str</name><argument_list pos:start="213:32" pos:end="213:51">(<argument pos:start="213:33" pos:end="213:39"><expr pos:start="213:33" pos:end="213:39"><name pos:start="213:33" pos:end="213:39">options</name></expr></argument>, <argument pos:start="213:42" pos:end="213:50"><expr pos:start="213:42" pos:end="213:50"><literal type="string" pos:start="213:42" pos:end="213:50">"backing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="215:5" pos:end="221:5"><if pos:start="215:5" pos:end="221:5">if <condition pos:start="215:8" pos:end="215:36">(<expr pos:start="215:9" pos:end="215:35"><name pos:start="215:9" pos:end="215:15">backing</name> <operator pos:start="215:17" pos:end="215:18">&amp;&amp;</operator> <operator pos:start="215:20" pos:end="215:20">*</operator><name pos:start="215:21" pos:end="215:27">backing</name> <operator pos:start="215:29" pos:end="215:30">==</operator> <literal type="char" pos:start="215:32" pos:end="215:35">'\0'</literal></expr>)</condition> <block pos:start="215:38" pos:end="221:5">{<block_content pos:start="217:9" pos:end="219:38">

        <expr_stmt pos:start="217:9" pos:end="217:35"><expr pos:start="217:9" pos:end="217:34"><name pos:start="217:9" pos:end="217:13">flags</name> <operator pos:start="217:15" pos:end="217:16">|=</operator> <name pos:start="217:18" pos:end="217:34">BDRV_O_NO_BACKING</name></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:38"><expr pos:start="219:9" pos:end="219:37"><call pos:start="219:9" pos:end="219:37"><name pos:start="219:9" pos:end="219:17">qdict_del</name><argument_list pos:start="219:18" pos:end="219:37">(<argument pos:start="219:19" pos:end="219:25"><expr pos:start="219:19" pos:end="219:25"><name pos:start="219:19" pos:end="219:25">options</name></expr></argument>, <argument pos:start="219:28" pos:end="219:36"><expr pos:start="219:28" pos:end="219:36"><literal type="string" pos:start="219:28" pos:end="219:36">"backing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="225:5" pos:end="229:72">/* Open image file without format layer. This BlockBackend is only used for

     * probing, the block drivers will do their own bdrv_open_child() for the

     * same BDS, which is why we put the node name back into options. */</comment>

    <if_stmt pos:start="231:5" pos:end="267:5"><if pos:start="231:5" pos:end="267:5">if <condition pos:start="231:8" pos:end="231:39">(<expr pos:start="231:9" pos:end="231:38"><operator pos:start="231:9" pos:end="231:9">(</operator><name pos:start="231:10" pos:end="231:14">flags</name> <operator pos:start="231:16" pos:end="231:16">&amp;</operator> <name pos:start="231:18" pos:end="231:32">BDRV_O_PROTOCOL</name><operator pos:start="231:33" pos:end="231:33">)</operator> <operator pos:start="231:35" pos:end="231:36">==</operator> <literal type="number" pos:start="231:38" pos:end="231:38">0</literal></expr>)</condition> <block pos:start="231:41" pos:end="267:5">{<block_content pos:start="233:9" pos:end="265:9">

        <decl_stmt pos:start="233:9" pos:end="233:34"><decl pos:start="233:9" pos:end="233:33"><type pos:start="233:9" pos:end="233:26"><name pos:start="233:9" pos:end="233:24">BlockDriverState</name> <modifier pos:start="233:26" pos:end="233:26">*</modifier></type><name pos:start="233:27" pos:end="233:33">file_bs</name></decl>;</decl_stmt>



        <expr_stmt pos:start="237:9" pos:end="239:68"><expr pos:start="237:9" pos:end="239:67"><name pos:start="237:9" pos:end="237:15">file_bs</name> <operator pos:start="237:17" pos:end="237:17">=</operator> <call pos:start="237:19" pos:end="239:67"><name pos:start="237:19" pos:end="237:36">bdrv_open_child_bs</name><argument_list pos:start="237:37" pos:end="239:67">(<argument pos:start="237:38" pos:end="237:45"><expr pos:start="237:38" pos:end="237:45"><name pos:start="237:38" pos:end="237:45">filename</name></expr></argument>, <argument pos:start="237:48" pos:end="237:54"><expr pos:start="237:48" pos:end="237:54"><name pos:start="237:48" pos:end="237:54">options</name></expr></argument>, <argument pos:start="237:57" pos:end="237:62"><expr pos:start="237:57" pos:end="237:62"><literal type="string" pos:start="237:57" pos:end="237:62">"file"</literal></expr></argument>, <argument pos:start="237:65" pos:end="237:66"><expr pos:start="237:65" pos:end="237:66"><name pos:start="237:65" pos:end="237:66">bs</name></expr></argument>,

                                     <argument pos:start="239:38" pos:end="239:48"><expr pos:start="239:38" pos:end="239:48"><operator pos:start="239:38" pos:end="239:38">&amp;</operator><name pos:start="239:39" pos:end="239:48">child_file</name></expr></argument>, <argument pos:start="239:51" pos:end="239:54"><expr pos:start="239:51" pos:end="239:54"><name pos:start="239:51" pos:end="239:54">true</name></expr></argument>, <argument pos:start="239:57" pos:end="239:66"><expr pos:start="239:57" pos:end="239:66"><operator pos:start="239:57" pos:end="239:57">&amp;</operator><name pos:start="239:58" pos:end="239:66">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="241:9" pos:end="245:9"><if pos:start="241:9" pos:end="245:9">if <condition pos:start="241:12" pos:end="241:22">(<expr pos:start="241:13" pos:end="241:21"><name pos:start="241:13" pos:end="241:21">local_err</name></expr>)</condition> <block pos:start="241:24" pos:end="245:9">{<block_content pos:start="243:13" pos:end="243:22">

            <goto pos:start="243:13" pos:end="243:22">goto <name pos:start="243:18" pos:end="243:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="247:9" pos:end="265:9"><if pos:start="247:9" pos:end="265:9">if <condition pos:start="247:12" pos:end="247:28">(<expr pos:start="247:13" pos:end="247:27"><name pos:start="247:13" pos:end="247:19">file_bs</name> <operator pos:start="247:21" pos:end="247:22">!=</operator> <name pos:start="247:24" pos:end="247:27">NULL</name></expr>)</condition> <block pos:start="247:30" pos:end="265:9">{<block_content pos:start="249:13" pos:end="263:72">

            <expr_stmt pos:start="249:13" pos:end="249:67"><expr pos:start="249:13" pos:end="249:66"><name pos:start="249:13" pos:end="249:16">file</name> <operator pos:start="249:18" pos:end="249:18">=</operator> <call pos:start="249:20" pos:end="249:66"><name pos:start="249:20" pos:end="249:26">blk_new</name><argument_list pos:start="249:27" pos:end="249:66">(<argument pos:start="249:28" pos:end="249:51"><expr pos:start="249:28" pos:end="249:51"><name pos:start="249:28" pos:end="249:51">BLK_PERM_CONSISTENT_READ</name></expr></argument>, <argument pos:start="249:54" pos:end="249:65"><expr pos:start="249:54" pos:end="249:65"><name pos:start="249:54" pos:end="249:65">BLK_PERM_ALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:53"><expr pos:start="251:13" pos:end="251:52"><call pos:start="251:13" pos:end="251:52"><name pos:start="251:13" pos:end="251:25">blk_insert_bs</name><argument_list pos:start="251:26" pos:end="251:52">(<argument pos:start="251:27" pos:end="251:30"><expr pos:start="251:27" pos:end="251:30"><name pos:start="251:27" pos:end="251:30">file</name></expr></argument>, <argument pos:start="251:33" pos:end="251:39"><expr pos:start="251:33" pos:end="251:39"><name pos:start="251:33" pos:end="251:39">file_bs</name></expr></argument>, <argument pos:start="251:42" pos:end="251:51"><expr pos:start="251:42" pos:end="251:51"><operator pos:start="251:42" pos:end="251:42">&amp;</operator><name pos:start="251:43" pos:end="251:51">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:32"><expr pos:start="253:13" pos:end="253:31"><call pos:start="253:13" pos:end="253:31"><name pos:start="253:13" pos:end="253:22">bdrv_unref</name><argument_list pos:start="253:23" pos:end="253:31">(<argument pos:start="253:24" pos:end="253:30"><expr pos:start="253:24" pos:end="253:30"><name pos:start="253:24" pos:end="253:30">file_bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="255:13" pos:end="259:13"><if pos:start="255:13" pos:end="259:13">if <condition pos:start="255:16" pos:end="255:26">(<expr pos:start="255:17" pos:end="255:25"><name pos:start="255:17" pos:end="255:25">local_err</name></expr>)</condition> <block pos:start="255:28" pos:end="259:13">{<block_content pos:start="257:17" pos:end="257:26">

                <goto pos:start="257:17" pos:end="257:26">goto <name pos:start="257:22" pos:end="257:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="263:13" pos:end="263:72"><expr pos:start="263:13" pos:end="263:71"><call pos:start="263:13" pos:end="263:71"><name pos:start="263:13" pos:end="263:25">qdict_put_str</name><argument_list pos:start="263:26" pos:end="263:71">(<argument pos:start="263:27" pos:end="263:33"><expr pos:start="263:27" pos:end="263:33"><name pos:start="263:27" pos:end="263:33">options</name></expr></argument>, <argument pos:start="263:36" pos:end="263:41"><expr pos:start="263:36" pos:end="263:41"><literal type="string" pos:start="263:36" pos:end="263:41">"file"</literal></expr></argument>, <argument pos:start="263:44" pos:end="263:70"><expr pos:start="263:44" pos:end="263:70"><call pos:start="263:44" pos:end="263:70"><name pos:start="263:44" pos:end="263:61">bdrv_get_node_name</name><argument_list pos:start="263:62" pos:end="263:70">(<argument pos:start="263:63" pos:end="263:69"><expr pos:start="263:63" pos:end="263:69"><name pos:start="263:63" pos:end="263:69">file_bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="271:5" pos:end="271:30">/* Image format probing */</comment>

    <expr_stmt pos:start="273:5" pos:end="273:22"><expr pos:start="273:5" pos:end="273:21"><name pos:start="273:5" pos:end="273:14"><name pos:start="273:5" pos:end="273:6">bs</name><operator pos:start="273:7" pos:end="273:8">-&gt;</operator><name pos:start="273:9" pos:end="273:14">probed</name></name> <operator pos:start="273:16" pos:end="273:16">=</operator> <operator pos:start="273:18" pos:end="273:18">!</operator><name pos:start="273:19" pos:end="273:21">drv</name></expr>;</expr_stmt>

    <if_stmt pos:start="275:5" pos:end="317:5"><if pos:start="275:5" pos:end="311:5">if <condition pos:start="275:8" pos:end="275:21">(<expr pos:start="275:9" pos:end="275:20"><operator pos:start="275:9" pos:end="275:9">!</operator><name pos:start="275:10" pos:end="275:12">drv</name> <operator pos:start="275:14" pos:end="275:15">&amp;&amp;</operator> <name pos:start="275:17" pos:end="275:20">file</name></expr>)</condition> <block pos:start="275:23" pos:end="311:5">{<block_content pos:start="277:9" pos:end="309:59">

        <expr_stmt pos:start="277:9" pos:end="277:66"><expr pos:start="277:9" pos:end="277:65"><name pos:start="277:9" pos:end="277:11">ret</name> <operator pos:start="277:13" pos:end="277:13">=</operator> <call pos:start="277:15" pos:end="277:65"><name pos:start="277:15" pos:end="277:31">find_image_format</name><argument_list pos:start="277:32" pos:end="277:65">(<argument pos:start="277:33" pos:end="277:36"><expr pos:start="277:33" pos:end="277:36"><name pos:start="277:33" pos:end="277:36">file</name></expr></argument>, <argument pos:start="277:39" pos:end="277:46"><expr pos:start="277:39" pos:end="277:46"><name pos:start="277:39" pos:end="277:46">filename</name></expr></argument>, <argument pos:start="277:49" pos:end="277:52"><expr pos:start="277:49" pos:end="277:52"><operator pos:start="277:49" pos:end="277:49">&amp;</operator><name pos:start="277:50" pos:end="277:52">drv</name></expr></argument>, <argument pos:start="277:55" pos:end="277:64"><expr pos:start="277:55" pos:end="277:64"><operator pos:start="277:55" pos:end="277:55">&amp;</operator><name pos:start="277:56" pos:end="277:64">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="279:9" pos:end="283:9"><if pos:start="279:9" pos:end="283:9">if <condition pos:start="279:12" pos:end="279:20">(<expr pos:start="279:13" pos:end="279:19"><name pos:start="279:13" pos:end="279:15">ret</name> <operator pos:start="279:17" pos:end="279:17">&lt;</operator> <literal type="number" pos:start="279:19" pos:end="279:19">0</literal></expr>)</condition> <block pos:start="279:22" pos:end="283:9">{<block_content pos:start="281:13" pos:end="281:22">

            <goto pos:start="281:13" pos:end="281:22">goto <name pos:start="281:18" pos:end="281:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="285:9" pos:end="305:11">/*

         * This option update would logically belong in bdrv_fill_options(),

         * but we first need to open bs-&gt;file for the probing to work, while

         * opening bs-&gt;file already requires the (mostly) final set of options

         * so that cache mode etc. can be inherited.

         *

         * Adding the driver later is somewhat ugly, but it's not an option

         * that would ever be inherited, so it's correct. We just need to make

         * sure to update both bs-&gt;options (which has the full effective

         * options for bs) and options (which has file.* already removed).

         */</comment>

        <expr_stmt pos:start="307:9" pos:end="307:63"><expr pos:start="307:9" pos:end="307:62"><call pos:start="307:9" pos:end="307:62"><name pos:start="307:9" pos:end="307:21">qdict_put_str</name><argument_list pos:start="307:22" pos:end="307:62">(<argument pos:start="307:23" pos:end="307:33"><expr pos:start="307:23" pos:end="307:33"><name pos:start="307:23" pos:end="307:33"><name pos:start="307:23" pos:end="307:24">bs</name><operator pos:start="307:25" pos:end="307:26">-&gt;</operator><name pos:start="307:27" pos:end="307:33">options</name></name></expr></argument>, <argument pos:start="307:36" pos:end="307:43"><expr pos:start="307:36" pos:end="307:43"><literal type="string" pos:start="307:36" pos:end="307:43">"driver"</literal></expr></argument>, <argument pos:start="307:46" pos:end="307:61"><expr pos:start="307:46" pos:end="307:61"><name pos:start="307:46" pos:end="307:61"><name pos:start="307:46" pos:end="307:48">drv</name><operator pos:start="307:49" pos:end="307:50">-&gt;</operator><name pos:start="307:51" pos:end="307:61">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:59"><expr pos:start="309:9" pos:end="309:58"><call pos:start="309:9" pos:end="309:58"><name pos:start="309:9" pos:end="309:21">qdict_put_str</name><argument_list pos:start="309:22" pos:end="309:58">(<argument pos:start="309:23" pos:end="309:29"><expr pos:start="309:23" pos:end="309:29"><name pos:start="309:23" pos:end="309:29">options</name></expr></argument>, <argument pos:start="309:32" pos:end="309:39"><expr pos:start="309:32" pos:end="309:39"><literal type="string" pos:start="309:32" pos:end="309:39">"driver"</literal></expr></argument>, <argument pos:start="309:42" pos:end="309:57"><expr pos:start="309:42" pos:end="309:57"><name pos:start="309:42" pos:end="309:57"><name pos:start="309:42" pos:end="309:44">drv</name><operator pos:start="309:45" pos:end="309:46">-&gt;</operator><name pos:start="309:47" pos:end="309:57">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="311:7" pos:end="317:5">else if <condition pos:start="311:15" pos:end="311:20">(<expr pos:start="311:16" pos:end="311:19"><operator pos:start="311:16" pos:end="311:16">!</operator><name pos:start="311:17" pos:end="311:19">drv</name></expr>)</condition> <block pos:start="311:22" pos:end="317:5">{<block_content pos:start="313:9" pos:end="315:18">

        <expr_stmt pos:start="313:9" pos:end="313:63"><expr pos:start="313:9" pos:end="313:62"><call pos:start="313:9" pos:end="313:62"><name pos:start="313:9" pos:end="313:18">error_setg</name><argument_list pos:start="313:19" pos:end="313:62">(<argument pos:start="313:20" pos:end="313:23"><expr pos:start="313:20" pos:end="313:23"><name pos:start="313:20" pos:end="313:23">errp</name></expr></argument>, <argument pos:start="313:26" pos:end="313:61"><expr pos:start="313:26" pos:end="313:61"><literal type="string" pos:start="313:26" pos:end="313:61">"Must specify either driver or file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="315:9" pos:end="315:18">goto <name pos:start="315:14" pos:end="315:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="321:5" pos:end="321:79">/* BDRV_O_PROTOCOL must be set iff a protocol BDS is about to be created */</comment>

    <expr_stmt pos:start="323:5" pos:end="323:65"><expr pos:start="323:5" pos:end="323:64"><call pos:start="323:5" pos:end="323:64"><name pos:start="323:5" pos:end="323:10">assert</name><argument_list pos:start="323:11" pos:end="323:64">(<argument pos:start="323:12" pos:end="323:63"><expr pos:start="323:12" pos:end="323:63"><operator pos:start="323:12" pos:end="323:12">!</operator><operator pos:start="323:13" pos:end="323:13">!</operator><operator pos:start="323:14" pos:end="323:14">(</operator><name pos:start="323:15" pos:end="323:19">flags</name> <operator pos:start="323:21" pos:end="323:21">&amp;</operator> <name pos:start="323:23" pos:end="323:37">BDRV_O_PROTOCOL</name><operator pos:start="323:38" pos:end="323:38">)</operator> <operator pos:start="323:40" pos:end="323:41">==</operator> <operator pos:start="323:43" pos:end="323:43">!</operator><operator pos:start="323:44" pos:end="323:44">!</operator><name pos:start="323:45" pos:end="323:63"><name pos:start="323:45" pos:end="323:47">drv</name><operator pos:start="323:48" pos:end="323:49">-&gt;</operator><name pos:start="323:50" pos:end="323:63">bdrv_file_open</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="325:5" pos:end="327:75">/* file must be NULL if a protocol BDS is about to be created

     * (the inverse results in an error message from bdrv_open_common()) */</comment>

    <expr_stmt pos:start="329:5" pos:end="329:48"><expr pos:start="329:5" pos:end="329:47"><call pos:start="329:5" pos:end="329:47"><name pos:start="329:5" pos:end="329:10">assert</name><argument_list pos:start="329:11" pos:end="329:47">(<argument pos:start="329:12" pos:end="329:46"><expr pos:start="329:12" pos:end="329:46"><operator pos:start="329:12" pos:end="329:12">!</operator><operator pos:start="329:13" pos:end="329:13">(</operator><name pos:start="329:14" pos:end="329:18">flags</name> <operator pos:start="329:20" pos:end="329:20">&amp;</operator> <name pos:start="329:22" pos:end="329:36">BDRV_O_PROTOCOL</name><operator pos:start="329:37" pos:end="329:37">)</operator> <operator pos:start="329:39" pos:end="329:40">||</operator> <operator pos:start="329:42" pos:end="329:42">!</operator><name pos:start="329:43" pos:end="329:46">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="333:5" pos:end="333:24">/* Open the image */</comment>

    <expr_stmt pos:start="335:5" pos:end="335:58"><expr pos:start="335:5" pos:end="335:57"><name pos:start="335:5" pos:end="335:7">ret</name> <operator pos:start="335:9" pos:end="335:9">=</operator> <call pos:start="335:11" pos:end="335:57"><name pos:start="335:11" pos:end="335:26">bdrv_open_common</name><argument_list pos:start="335:27" pos:end="335:57">(<argument pos:start="335:28" pos:end="335:29"><expr pos:start="335:28" pos:end="335:29"><name pos:start="335:28" pos:end="335:29">bs</name></expr></argument>, <argument pos:start="335:32" pos:end="335:35"><expr pos:start="335:32" pos:end="335:35"><name pos:start="335:32" pos:end="335:35">file</name></expr></argument>, <argument pos:start="335:38" pos:end="335:44"><expr pos:start="335:38" pos:end="335:44"><name pos:start="335:38" pos:end="335:44">options</name></expr></argument>, <argument pos:start="335:47" pos:end="335:56"><expr pos:start="335:47" pos:end="335:56"><operator pos:start="335:47" pos:end="335:47">&amp;</operator><name pos:start="335:48" pos:end="335:56">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="337:5" pos:end="341:5"><if pos:start="337:5" pos:end="341:5">if <condition pos:start="337:8" pos:end="337:16">(<expr pos:start="337:9" pos:end="337:15"><name pos:start="337:9" pos:end="337:11">ret</name> <operator pos:start="337:13" pos:end="337:13">&lt;</operator> <literal type="number" pos:start="337:15" pos:end="337:15">0</literal></expr>)</condition> <block pos:start="337:18" pos:end="341:5">{<block_content pos:start="339:9" pos:end="339:18">

        <goto pos:start="339:9" pos:end="339:18">goto <name pos:start="339:14" pos:end="339:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="345:5" pos:end="351:5"><if pos:start="345:5" pos:end="351:5">if <condition pos:start="345:8" pos:end="345:13">(<expr pos:start="345:9" pos:end="345:12"><name pos:start="345:9" pos:end="345:12">file</name></expr>)</condition> <block pos:start="345:15" pos:end="351:5">{<block_content pos:start="347:9" pos:end="349:20">

        <expr_stmt pos:start="347:9" pos:end="347:24"><expr pos:start="347:9" pos:end="347:23"><call pos:start="347:9" pos:end="347:23"><name pos:start="347:9" pos:end="347:17">blk_unref</name><argument_list pos:start="347:18" pos:end="347:23">(<argument pos:start="347:19" pos:end="347:22"><expr pos:start="347:19" pos:end="347:22"><name pos:start="347:19" pos:end="347:22">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="349:9" pos:end="349:20"><expr pos:start="349:9" pos:end="349:19"><name pos:start="349:9" pos:end="349:12">file</name> <operator pos:start="349:14" pos:end="349:14">=</operator> <name pos:start="349:16" pos:end="349:19">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="355:5" pos:end="355:44">/* If there is a backing file, use it */</comment>

    <if_stmt pos:start="357:5" pos:end="367:5"><if pos:start="357:5" pos:end="367:5">if <condition pos:start="357:8" pos:end="357:41">(<expr pos:start="357:9" pos:end="357:40"><operator pos:start="357:9" pos:end="357:9">(</operator><name pos:start="357:10" pos:end="357:14">flags</name> <operator pos:start="357:16" pos:end="357:16">&amp;</operator> <name pos:start="357:18" pos:end="357:34">BDRV_O_NO_BACKING</name><operator pos:start="357:35" pos:end="357:35">)</operator> <operator pos:start="357:37" pos:end="357:38">==</operator> <literal type="number" pos:start="357:40" pos:end="357:40">0</literal></expr>)</condition> <block pos:start="357:43" pos:end="367:5">{<block_content pos:start="359:9" pos:end="365:9">

        <expr_stmt pos:start="359:9" pos:end="359:73"><expr pos:start="359:9" pos:end="359:72"><name pos:start="359:9" pos:end="359:11">ret</name> <operator pos:start="359:13" pos:end="359:13">=</operator> <call pos:start="359:15" pos:end="359:72"><name pos:start="359:15" pos:end="359:36">bdrv_open_backing_file</name><argument_list pos:start="359:37" pos:end="359:72">(<argument pos:start="359:38" pos:end="359:39"><expr pos:start="359:38" pos:end="359:39"><name pos:start="359:38" pos:end="359:39">bs</name></expr></argument>, <argument pos:start="359:42" pos:end="359:48"><expr pos:start="359:42" pos:end="359:48"><name pos:start="359:42" pos:end="359:48">options</name></expr></argument>, <argument pos:start="359:51" pos:end="359:59"><expr pos:start="359:51" pos:end="359:59"><literal type="string" pos:start="359:51" pos:end="359:59">"backing"</literal></expr></argument>, <argument pos:start="359:62" pos:end="359:71"><expr pos:start="359:62" pos:end="359:71"><operator pos:start="359:62" pos:end="359:62">&amp;</operator><name pos:start="359:63" pos:end="359:71">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="361:9" pos:end="365:9"><if pos:start="361:9" pos:end="365:9">if <condition pos:start="361:12" pos:end="361:20">(<expr pos:start="361:13" pos:end="361:19"><name pos:start="361:13" pos:end="361:15">ret</name> <operator pos:start="361:17" pos:end="361:17">&lt;</operator> <literal type="number" pos:start="361:19" pos:end="361:19">0</literal></expr>)</condition> <block pos:start="361:22" pos:end="365:9">{<block_content pos:start="363:13" pos:end="363:32">

            <goto pos:start="363:13" pos:end="363:32">goto <name pos:start="363:18" pos:end="363:31">close_and_fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="371:5" pos:end="371:30"><expr pos:start="371:5" pos:end="371:29"><call pos:start="371:5" pos:end="371:29"><name pos:start="371:5" pos:end="371:25">bdrv_refresh_filename</name><argument_list pos:start="371:26" pos:end="371:29">(<argument pos:start="371:27" pos:end="371:28"><expr pos:start="371:27" pos:end="371:28"><name pos:start="371:27" pos:end="371:28">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="375:5" pos:end="375:48">/* Check if any unknown options were used */</comment>

    <if_stmt pos:start="377:5" pos:end="401:5"><if pos:start="377:5" pos:end="401:5">if <condition pos:start="377:8" pos:end="377:33">(<expr pos:start="377:9" pos:end="377:32"><call pos:start="377:9" pos:end="377:27"><name pos:start="377:9" pos:end="377:18">qdict_size</name><argument_list pos:start="377:19" pos:end="377:27">(<argument pos:start="377:20" pos:end="377:26"><expr pos:start="377:20" pos:end="377:26"><name pos:start="377:20" pos:end="377:26">options</name></expr></argument>)</argument_list></call> <operator pos:start="377:29" pos:end="377:30">!=</operator> <literal type="number" pos:start="377:32" pos:end="377:32">0</literal></expr>)</condition> <block pos:start="377:35" pos:end="401:5">{<block_content pos:start="379:9" pos:end="399:28">

        <decl_stmt pos:start="379:9" pos:end="379:55"><decl pos:start="379:9" pos:end="379:54"><type pos:start="379:9" pos:end="379:26"><specifier pos:start="379:9" pos:end="379:13">const</specifier> <name pos:start="379:15" pos:end="379:24">QDictEntry</name> <modifier pos:start="379:26" pos:end="379:26">*</modifier></type><name pos:start="379:27" pos:end="379:31">entry</name> <init pos:start="379:33" pos:end="379:54">= <expr pos:start="379:35" pos:end="379:54"><call pos:start="379:35" pos:end="379:54"><name pos:start="379:35" pos:end="379:45">qdict_first</name><argument_list pos:start="379:46" pos:end="379:54">(<argument pos:start="379:47" pos:end="379:53"><expr pos:start="379:47" pos:end="379:53"><name pos:start="379:47" pos:end="379:53">options</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="381:9" pos:end="395:9"><if pos:start="381:9" pos:end="387:9">if <condition pos:start="381:12" pos:end="381:36">(<expr pos:start="381:13" pos:end="381:35"><name pos:start="381:13" pos:end="381:17">flags</name> <operator pos:start="381:19" pos:end="381:19">&amp;</operator> <name pos:start="381:21" pos:end="381:35">BDRV_O_PROTOCOL</name></expr>)</condition> <block pos:start="381:38" pos:end="387:9">{<block_content pos:start="383:13" pos:end="385:61">

            <expr_stmt pos:start="383:13" pos:end="385:61"><expr pos:start="383:13" pos:end="385:60"><call pos:start="383:13" pos:end="385:60"><name pos:start="383:13" pos:end="383:22">error_setg</name><argument_list pos:start="383:23" pos:end="385:60">(<argument pos:start="383:24" pos:end="383:27"><expr pos:start="383:24" pos:end="383:27"><name pos:start="383:24" pos:end="383:27">errp</name></expr></argument>, <argument pos:start="383:30" pos:end="385:29"><expr pos:start="383:30" pos:end="385:29"><literal type="string" pos:start="383:30" pos:end="383:78">"Block protocol '%s' doesn't support the option "</literal>

                       <literal type="string" pos:start="385:24" pos:end="385:29">"'%s'"</literal></expr></argument>, <argument pos:start="385:32" pos:end="385:47"><expr pos:start="385:32" pos:end="385:47"><name pos:start="385:32" pos:end="385:47"><name pos:start="385:32" pos:end="385:34">drv</name><operator pos:start="385:35" pos:end="385:36">-&gt;</operator><name pos:start="385:37" pos:end="385:47">format_name</name></name></expr></argument>, <argument pos:start="385:50" pos:end="385:59"><expr pos:start="385:50" pos:end="385:59"><name pos:start="385:50" pos:end="385:59"><name pos:start="385:50" pos:end="385:54">entry</name><operator pos:start="385:55" pos:end="385:56">-&gt;</operator><name pos:start="385:57" pos:end="385:59">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="387:11" pos:end="395:9">else <block pos:start="387:16" pos:end="395:9">{<block_content pos:start="389:13" pos:end="393:53">

            <expr_stmt pos:start="389:13" pos:end="393:53"><expr pos:start="389:13" pos:end="393:52"><call pos:start="389:13" pos:end="393:52"><name pos:start="389:13" pos:end="389:22">error_setg</name><argument_list pos:start="389:23" pos:end="393:52">(<argument pos:start="389:24" pos:end="389:27"><expr pos:start="389:24" pos:end="389:27"><name pos:start="389:24" pos:end="389:27">errp</name></expr></argument>,

                       <argument pos:start="391:24" pos:end="391:75"><expr pos:start="391:24" pos:end="391:75"><literal type="string" pos:start="391:24" pos:end="391:75">"Block format '%s' does not support the option '%s'"</literal></expr></argument>,

                       <argument pos:start="393:24" pos:end="393:39"><expr pos:start="393:24" pos:end="393:39"><name pos:start="393:24" pos:end="393:39"><name pos:start="393:24" pos:end="393:26">drv</name><operator pos:start="393:27" pos:end="393:28">-&gt;</operator><name pos:start="393:29" pos:end="393:39">format_name</name></name></expr></argument>, <argument pos:start="393:42" pos:end="393:51"><expr pos:start="393:42" pos:end="393:51"><name pos:start="393:42" pos:end="393:51"><name pos:start="393:42" pos:end="393:46">entry</name><operator pos:start="393:47" pos:end="393:48">-&gt;</operator><name pos:start="393:49" pos:end="393:51">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <goto pos:start="399:9" pos:end="399:28">goto <name pos:start="399:14" pos:end="399:27">close_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="405:5" pos:end="405:42"><expr pos:start="405:5" pos:end="405:41"><call pos:start="405:5" pos:end="405:41"><name pos:start="405:5" pos:end="405:31">bdrv_parent_cb_change_media</name><argument_list pos:start="405:32" pos:end="405:41">(<argument pos:start="405:33" pos:end="405:34"><expr pos:start="405:33" pos:end="405:34"><name pos:start="405:33" pos:end="405:34">bs</name></expr></argument>, <argument pos:start="405:37" pos:end="405:40"><expr pos:start="405:37" pos:end="405:40"><name pos:start="405:37" pos:end="405:40">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="409:5" pos:end="409:21"><expr pos:start="409:5" pos:end="409:20"><call pos:start="409:5" pos:end="409:20"><name pos:start="409:5" pos:end="409:11">QDECREF</name><argument_list pos:start="409:12" pos:end="409:20">(<argument pos:start="409:13" pos:end="409:19"><expr pos:start="409:13" pos:end="409:19"><name pos:start="409:13" pos:end="409:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="413:5" pos:end="415:40">/* For snapshot=on, create a temporary qcow2 overlay. bs points to the

     * temporary snapshot afterwards. */</comment>

    <if_stmt pos:start="417:5" pos:end="445:5"><if pos:start="417:5" pos:end="445:5">if <condition pos:start="417:8" pos:end="417:23">(<expr pos:start="417:9" pos:end="417:22"><name pos:start="417:9" pos:end="417:22">snapshot_flags</name></expr>)</condition> <block pos:start="417:25" pos:end="445:5">{<block_content pos:start="419:9" pos:end="443:25">

        <decl_stmt pos:start="419:9" pos:end="419:38"><decl pos:start="419:9" pos:end="419:37"><type pos:start="419:9" pos:end="419:26"><name pos:start="419:9" pos:end="419:24">BlockDriverState</name> <modifier pos:start="419:26" pos:end="419:26">*</modifier></type><name pos:start="419:27" pos:end="419:37">snapshot_bs</name></decl>;</decl_stmt>

        <expr_stmt pos:start="421:9" pos:end="423:78"><expr pos:start="421:9" pos:end="423:77"><name pos:start="421:9" pos:end="421:19">snapshot_bs</name> <operator pos:start="421:21" pos:end="421:21">=</operator> <call pos:start="421:23" pos:end="423:77"><name pos:start="421:23" pos:end="421:47">bdrv_append_temp_snapshot</name><argument_list pos:start="421:48" pos:end="423:77">(<argument pos:start="421:49" pos:end="421:50"><expr pos:start="421:49" pos:end="421:50"><name pos:start="421:49" pos:end="421:50">bs</name></expr></argument>, <argument pos:start="421:53" pos:end="421:66"><expr pos:start="421:53" pos:end="421:66"><name pos:start="421:53" pos:end="421:66">snapshot_flags</name></expr></argument>,

                                                <argument pos:start="423:49" pos:end="423:64"><expr pos:start="423:49" pos:end="423:64"><name pos:start="423:49" pos:end="423:64">snapshot_options</name></expr></argument>, <argument pos:start="423:67" pos:end="423:76"><expr pos:start="423:67" pos:end="423:76"><operator pos:start="423:67" pos:end="423:67">&amp;</operator><name pos:start="423:68" pos:end="423:76">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="425:9" pos:end="425:32"><expr pos:start="425:9" pos:end="425:31"><name pos:start="425:9" pos:end="425:24">snapshot_options</name> <operator pos:start="425:26" pos:end="425:26">=</operator> <name pos:start="425:28" pos:end="425:31">NULL</name></expr>;</expr_stmt>

        <if_stmt pos:start="427:9" pos:end="431:9"><if pos:start="427:9" pos:end="431:9">if <condition pos:start="427:12" pos:end="427:22">(<expr pos:start="427:13" pos:end="427:21"><name pos:start="427:13" pos:end="427:21">local_err</name></expr>)</condition> <block pos:start="427:24" pos:end="431:9">{<block_content pos:start="429:13" pos:end="429:32">

            <goto pos:start="429:13" pos:end="429:32">goto <name pos:start="429:18" pos:end="429:31">close_and_fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="433:9" pos:end="439:70">/* We are not going to return bs but the overlay on top of it

         * (snapshot_bs); thus, we have to drop the strong reference to bs

         * (which we obtained by calling bdrv_new()). bs will not be deleted,

         * though, because the overlay still has a reference to it. */</comment>

        <expr_stmt pos:start="441:9" pos:end="441:23"><expr pos:start="441:9" pos:end="441:22"><call pos:start="441:9" pos:end="441:22"><name pos:start="441:9" pos:end="441:18">bdrv_unref</name><argument_list pos:start="441:19" pos:end="441:22">(<argument pos:start="441:20" pos:end="441:21"><expr pos:start="441:20" pos:end="441:21"><name pos:start="441:20" pos:end="441:21">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="443:9" pos:end="443:25"><expr pos:start="443:9" pos:end="443:24"><name pos:start="443:9" pos:end="443:10">bs</name> <operator pos:start="443:12" pos:end="443:12">=</operator> <name pos:start="443:14" pos:end="443:24">snapshot_bs</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="449:5" pos:end="449:14">return <expr pos:start="449:12" pos:end="449:13"><name pos:start="449:12" pos:end="449:13">bs</name></expr>;</return>



<label pos:start="453:1" pos:end="453:5"><name pos:start="453:1" pos:end="453:4">fail</name>:</label>

    <expr_stmt pos:start="455:5" pos:end="455:20"><expr pos:start="455:5" pos:end="455:19"><call pos:start="455:5" pos:end="455:19"><name pos:start="455:5" pos:end="455:13">blk_unref</name><argument_list pos:start="455:14" pos:end="455:19">(<argument pos:start="455:15" pos:end="455:18"><expr pos:start="455:15" pos:end="455:18"><name pos:start="455:15" pos:end="455:18">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="457:5" pos:end="461:5"><if pos:start="457:5" pos:end="461:5">if <condition pos:start="457:8" pos:end="457:25">(<expr pos:start="457:9" pos:end="457:24"><name pos:start="457:9" pos:end="457:16"><name pos:start="457:9" pos:end="457:10">bs</name><operator pos:start="457:11" pos:end="457:12">-&gt;</operator><name pos:start="457:13" pos:end="457:16">file</name></name> <operator pos:start="457:18" pos:end="457:19">!=</operator> <name pos:start="457:21" pos:end="457:24">NULL</name></expr>)</condition> <block pos:start="457:27" pos:end="461:5">{<block_content pos:start="459:9" pos:end="459:39">

        <expr_stmt pos:start="459:9" pos:end="459:39"><expr pos:start="459:9" pos:end="459:38"><call pos:start="459:9" pos:end="459:38"><name pos:start="459:9" pos:end="459:24">bdrv_unref_child</name><argument_list pos:start="459:25" pos:end="459:38">(<argument pos:start="459:26" pos:end="459:27"><expr pos:start="459:26" pos:end="459:27"><name pos:start="459:26" pos:end="459:27">bs</name></expr></argument>, <argument pos:start="459:30" pos:end="459:37"><expr pos:start="459:30" pos:end="459:37"><name pos:start="459:30" pos:end="459:37"><name pos:start="459:30" pos:end="459:31">bs</name><operator pos:start="459:32" pos:end="459:33">-&gt;</operator><name pos:start="459:34" pos:end="459:37">file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="463:5" pos:end="463:30"><expr pos:start="463:5" pos:end="463:29"><call pos:start="463:5" pos:end="463:29"><name pos:start="463:5" pos:end="463:11">QDECREF</name><argument_list pos:start="463:12" pos:end="463:29">(<argument pos:start="463:13" pos:end="463:28"><expr pos:start="463:13" pos:end="463:28"><name pos:start="463:13" pos:end="463:28">snapshot_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="465:5" pos:end="465:34"><expr pos:start="465:5" pos:end="465:33"><call pos:start="465:5" pos:end="465:33"><name pos:start="465:5" pos:end="465:11">QDECREF</name><argument_list pos:start="465:12" pos:end="465:33">(<argument pos:start="465:13" pos:end="465:32"><expr pos:start="465:13" pos:end="465:32"><name pos:start="465:13" pos:end="465:32"><name pos:start="465:13" pos:end="465:14">bs</name><operator pos:start="465:15" pos:end="465:16">-&gt;</operator><name pos:start="465:17" pos:end="465:32">explicit_options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="467:5" pos:end="467:25"><expr pos:start="467:5" pos:end="467:24"><call pos:start="467:5" pos:end="467:24"><name pos:start="467:5" pos:end="467:11">QDECREF</name><argument_list pos:start="467:12" pos:end="467:24">(<argument pos:start="467:13" pos:end="467:23"><expr pos:start="467:13" pos:end="467:23"><name pos:start="467:13" pos:end="467:23"><name pos:start="467:13" pos:end="467:14">bs</name><operator pos:start="467:15" pos:end="467:16">-&gt;</operator><name pos:start="467:17" pos:end="467:23">options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="469:5" pos:end="469:21"><expr pos:start="469:5" pos:end="469:20"><call pos:start="469:5" pos:end="469:20"><name pos:start="469:5" pos:end="469:11">QDECREF</name><argument_list pos:start="469:12" pos:end="469:20">(<argument pos:start="469:13" pos:end="469:19"><expr pos:start="469:13" pos:end="469:19"><name pos:start="469:13" pos:end="469:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="471:5" pos:end="471:23"><expr pos:start="471:5" pos:end="471:22"><name pos:start="471:5" pos:end="471:15"><name pos:start="471:5" pos:end="471:6">bs</name><operator pos:start="471:7" pos:end="471:8">-&gt;</operator><name pos:start="471:9" pos:end="471:15">options</name></name> <operator pos:start="471:17" pos:end="471:17">=</operator> <name pos:start="471:19" pos:end="471:22">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="473:5" pos:end="473:32"><expr pos:start="473:5" pos:end="473:31"><name pos:start="473:5" pos:end="473:24"><name pos:start="473:5" pos:end="473:6">bs</name><operator pos:start="473:7" pos:end="473:8">-&gt;</operator><name pos:start="473:9" pos:end="473:24">explicit_options</name></name> <operator pos:start="473:26" pos:end="473:26">=</operator> <name pos:start="473:28" pos:end="473:31">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="475:5" pos:end="475:19"><expr pos:start="475:5" pos:end="475:18"><call pos:start="475:5" pos:end="475:18"><name pos:start="475:5" pos:end="475:14">bdrv_unref</name><argument_list pos:start="475:15" pos:end="475:18">(<argument pos:start="475:16" pos:end="475:17"><expr pos:start="475:16" pos:end="475:17"><name pos:start="475:16" pos:end="475:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="477:5" pos:end="477:37"><expr pos:start="477:5" pos:end="477:36"><call pos:start="477:5" pos:end="477:36"><name pos:start="477:5" pos:end="477:19">error_propagate</name><argument_list pos:start="477:20" pos:end="477:36">(<argument pos:start="477:21" pos:end="477:24"><expr pos:start="477:21" pos:end="477:24"><name pos:start="477:21" pos:end="477:24">errp</name></expr></argument>, <argument pos:start="477:27" pos:end="477:35"><expr pos:start="477:27" pos:end="477:35"><name pos:start="477:27" pos:end="477:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="479:5" pos:end="479:16">return <expr pos:start="479:12" pos:end="479:15"><name pos:start="479:12" pos:end="479:15">NULL</name></expr>;</return>



<label pos:start="483:1" pos:end="483:15"><name pos:start="483:1" pos:end="483:14">close_and_fail</name>:</label>

    <expr_stmt pos:start="485:5" pos:end="485:19"><expr pos:start="485:5" pos:end="485:18"><call pos:start="485:5" pos:end="485:18"><name pos:start="485:5" pos:end="485:14">bdrv_unref</name><argument_list pos:start="485:15" pos:end="485:18">(<argument pos:start="485:16" pos:end="485:17"><expr pos:start="485:16" pos:end="485:17"><name pos:start="485:16" pos:end="485:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="487:5" pos:end="487:30"><expr pos:start="487:5" pos:end="487:29"><call pos:start="487:5" pos:end="487:29"><name pos:start="487:5" pos:end="487:11">QDECREF</name><argument_list pos:start="487:12" pos:end="487:29">(<argument pos:start="487:13" pos:end="487:28"><expr pos:start="487:13" pos:end="487:28"><name pos:start="487:13" pos:end="487:28">snapshot_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="489:5" pos:end="489:21"><expr pos:start="489:5" pos:end="489:20"><call pos:start="489:5" pos:end="489:20"><name pos:start="489:5" pos:end="489:11">QDECREF</name><argument_list pos:start="489:12" pos:end="489:20">(<argument pos:start="489:13" pos:end="489:19"><expr pos:start="489:13" pos:end="489:19"><name pos:start="489:13" pos:end="489:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="491:5" pos:end="491:37"><expr pos:start="491:5" pos:end="491:36"><call pos:start="491:5" pos:end="491:36"><name pos:start="491:5" pos:end="491:19">error_propagate</name><argument_list pos:start="491:20" pos:end="491:36">(<argument pos:start="491:21" pos:end="491:24"><expr pos:start="491:21" pos:end="491:24"><name pos:start="491:21" pos:end="491:24">errp</name></expr></argument>, <argument pos:start="491:27" pos:end="491:35"><expr pos:start="491:27" pos:end="491:35"><name pos:start="491:27" pos:end="491:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="493:5" pos:end="493:16">return <expr pos:start="493:12" pos:end="493:15"><name pos:start="493:12" pos:end="493:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
