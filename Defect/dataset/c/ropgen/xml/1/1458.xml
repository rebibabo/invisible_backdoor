<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1458.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:31">omx_try_load</name><parameter_list pos:start="1:32" pos:end="3:72">(<parameter pos:start="1:33" pos:end="1:45"><decl pos:start="1:33" pos:end="1:45"><type pos:start="1:33" pos:end="1:45"><name pos:start="1:33" pos:end="1:42">OMXContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:51">void</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:59">logctx</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:51"><decl pos:start="3:33" pos:end="3:51"><type pos:start="3:33" pos:end="3:51"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:42">char</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:51">libname</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:71"><decl pos:start="3:54" pos:end="3:71"><type pos:start="3:54" pos:end="3:71"><specifier pos:start="3:54" pos:end="3:58">const</specifier> <name pos:start="3:60" pos:end="3:63">char</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier></type><name pos:start="3:66" pos:end="3:71">prefix</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:13">

    <expr_stmt pos:start="7:5" pos:end="7:53"><expr pos:start="7:5" pos:end="7:52"><name pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:5">s</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:10">lib</name></name> <operator pos:start="7:12" pos:end="7:12">=</operator> <call pos:start="7:14" pos:end="7:52"><name pos:start="7:14" pos:end="7:19">dlopen</name><argument_list pos:start="7:20" pos:end="7:52">(<argument pos:start="7:21" pos:end="7:27"><expr pos:start="7:21" pos:end="7:27"><name pos:start="7:21" pos:end="7:27">libname</name></expr></argument>, <argument pos:start="7:30" pos:end="7:51"><expr pos:start="7:30" pos:end="7:51"><name pos:start="7:30" pos:end="7:37">RTLD_NOW</name> <operator pos:start="7:39" pos:end="7:39">|</operator> <name pos:start="7:41" pos:end="7:51">RTLD_GLOBAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:16">(<expr pos:start="9:9" pos:end="9:15"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:15"><name pos:start="9:10" pos:end="9:10">s</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:15">lib</name></name></expr>)</condition> <block pos:start="9:18" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:41">

        <expr_stmt pos:start="11:9" pos:end="11:66"><expr pos:start="11:9" pos:end="11:65"><call pos:start="11:9" pos:end="11:65"><name pos:start="11:9" pos:end="11:14">av_log</name><argument_list pos:start="11:15" pos:end="11:65">(<argument pos:start="11:16" pos:end="11:21"><expr pos:start="11:16" pos:end="11:21"><name pos:start="11:16" pos:end="11:21">logctx</name></expr></argument>, <argument pos:start="11:24" pos:end="11:37"><expr pos:start="11:24" pos:end="11:37"><name pos:start="11:24" pos:end="11:37">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="11:40" pos:end="11:55"><expr pos:start="11:40" pos:end="11:55"><literal type="string" pos:start="11:40" pos:end="11:55">"%s not found\n"</literal></expr></argument>, <argument pos:start="11:58" pos:end="11:64"><expr pos:start="11:58" pos:end="11:64"><name pos:start="11:58" pos:end="11:64">libname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:41">return <expr pos:start="13:16" pos:end="13:40"><name pos:start="13:16" pos:end="13:40">AVERROR_ENCODER_NOT_FOUND</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:76"><expr pos:start="17:5" pos:end="17:75"><name pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:15">ptr_Init</name></name>                <operator pos:start="17:32" pos:end="17:32">=</operator> <call pos:start="17:34" pos:end="17:75"><name pos:start="17:34" pos:end="17:47">dlsym_prefixed</name><argument_list pos:start="17:48" pos:end="17:75">(<argument pos:start="17:49" pos:end="17:54"><expr pos:start="17:49" pos:end="17:54"><name pos:start="17:49" pos:end="17:54"><name pos:start="17:49" pos:end="17:49">s</name><operator pos:start="17:50" pos:end="17:51">-&gt;</operator><name pos:start="17:52" pos:end="17:54">lib</name></name></expr></argument>, <argument pos:start="17:57" pos:end="17:66"><expr pos:start="17:57" pos:end="17:66"><literal type="string" pos:start="17:57" pos:end="17:66">"OMX_Init"</literal></expr></argument>, <argument pos:start="17:69" pos:end="17:74"><expr pos:start="17:69" pos:end="17:74"><name pos:start="17:69" pos:end="17:74">prefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:78"><expr pos:start="19:5" pos:end="19:77"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:17">ptr_Deinit</name></name>              <operator pos:start="19:32" pos:end="19:32">=</operator> <call pos:start="19:34" pos:end="19:77"><name pos:start="19:34" pos:end="19:47">dlsym_prefixed</name><argument_list pos:start="19:48" pos:end="19:77">(<argument pos:start="19:49" pos:end="19:54"><expr pos:start="19:49" pos:end="19:54"><name pos:start="19:49" pos:end="19:54"><name pos:start="19:49" pos:end="19:49">s</name><operator pos:start="19:50" pos:end="19:51">-&gt;</operator><name pos:start="19:52" pos:end="19:54">lib</name></name></expr></argument>, <argument pos:start="19:57" pos:end="19:68"><expr pos:start="19:57" pos:end="19:68"><literal type="string" pos:start="19:57" pos:end="19:68">"OMX_Deinit"</literal></expr></argument>, <argument pos:start="19:71" pos:end="19:76"><expr pos:start="19:71" pos:end="19:76"><name pos:start="19:71" pos:end="19:76">prefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:89"><expr pos:start="21:5" pos:end="21:88"><name pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:28">ptr_ComponentNameEnum</name></name>   <operator pos:start="21:32" pos:end="21:32">=</operator> <call pos:start="21:34" pos:end="21:88"><name pos:start="21:34" pos:end="21:47">dlsym_prefixed</name><argument_list pos:start="21:48" pos:end="21:88">(<argument pos:start="21:49" pos:end="21:54"><expr pos:start="21:49" pos:end="21:54"><name pos:start="21:49" pos:end="21:54"><name pos:start="21:49" pos:end="21:49">s</name><operator pos:start="21:50" pos:end="21:51">-&gt;</operator><name pos:start="21:52" pos:end="21:54">lib</name></name></expr></argument>, <argument pos:start="21:57" pos:end="21:79"><expr pos:start="21:57" pos:end="21:79"><literal type="string" pos:start="21:57" pos:end="21:79">"OMX_ComponentNameEnum"</literal></expr></argument>, <argument pos:start="21:82" pos:end="21:87"><expr pos:start="21:82" pos:end="21:87"><name pos:start="21:82" pos:end="21:87">prefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:81"><expr pos:start="23:5" pos:end="23:80"><name pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:20">ptr_GetHandle</name></name>           <operator pos:start="23:32" pos:end="23:32">=</operator> <call pos:start="23:34" pos:end="23:80"><name pos:start="23:34" pos:end="23:47">dlsym_prefixed</name><argument_list pos:start="23:48" pos:end="23:80">(<argument pos:start="23:49" pos:end="23:54"><expr pos:start="23:49" pos:end="23:54"><name pos:start="23:49" pos:end="23:54"><name pos:start="23:49" pos:end="23:49">s</name><operator pos:start="23:50" pos:end="23:51">-&gt;</operator><name pos:start="23:52" pos:end="23:54">lib</name></name></expr></argument>, <argument pos:start="23:57" pos:end="23:71"><expr pos:start="23:57" pos:end="23:71"><literal type="string" pos:start="23:57" pos:end="23:71">"OMX_GetHandle"</literal></expr></argument>, <argument pos:start="23:74" pos:end="23:79"><expr pos:start="23:74" pos:end="23:79"><name pos:start="23:74" pos:end="23:79">prefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:82"><expr pos:start="25:5" pos:end="25:81"><name pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:21">ptr_FreeHandle</name></name>          <operator pos:start="25:32" pos:end="25:32">=</operator> <call pos:start="25:34" pos:end="25:81"><name pos:start="25:34" pos:end="25:47">dlsym_prefixed</name><argument_list pos:start="25:48" pos:end="25:81">(<argument pos:start="25:49" pos:end="25:54"><expr pos:start="25:49" pos:end="25:54"><name pos:start="25:49" pos:end="25:54"><name pos:start="25:49" pos:end="25:49">s</name><operator pos:start="25:50" pos:end="25:51">-&gt;</operator><name pos:start="25:52" pos:end="25:54">lib</name></name></expr></argument>, <argument pos:start="25:57" pos:end="25:72"><expr pos:start="25:57" pos:end="25:72"><literal type="string" pos:start="25:57" pos:end="25:72">"OMX_FreeHandle"</literal></expr></argument>, <argument pos:start="25:75" pos:end="25:80"><expr pos:start="25:75" pos:end="25:80"><name pos:start="25:75" pos:end="25:80">prefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:91"><expr pos:start="27:5" pos:end="27:90"><name pos:start="27:5" pos:end="27:30"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:30">ptr_GetComponentsOfRole</name></name> <operator pos:start="27:32" pos:end="27:32">=</operator> <call pos:start="27:34" pos:end="27:90"><name pos:start="27:34" pos:end="27:47">dlsym_prefixed</name><argument_list pos:start="27:48" pos:end="27:90">(<argument pos:start="27:49" pos:end="27:54"><expr pos:start="27:49" pos:end="27:54"><name pos:start="27:49" pos:end="27:54"><name pos:start="27:49" pos:end="27:49">s</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:54">lib</name></name></expr></argument>, <argument pos:start="27:57" pos:end="27:81"><expr pos:start="27:57" pos:end="27:81"><literal type="string" pos:start="27:57" pos:end="27:81">"OMX_GetComponentsOfRole"</literal></expr></argument>, <argument pos:start="27:84" pos:end="27:89"><expr pos:start="27:84" pos:end="27:89"><name pos:start="27:84" pos:end="27:89">prefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:91"><expr pos:start="29:5" pos:end="29:90"><name pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:30">ptr_GetRolesOfComponent</name></name> <operator pos:start="29:32" pos:end="29:32">=</operator> <call pos:start="29:34" pos:end="29:90"><name pos:start="29:34" pos:end="29:47">dlsym_prefixed</name><argument_list pos:start="29:48" pos:end="29:90">(<argument pos:start="29:49" pos:end="29:54"><expr pos:start="29:49" pos:end="29:54"><name pos:start="29:49" pos:end="29:54"><name pos:start="29:49" pos:end="29:49">s</name><operator pos:start="29:50" pos:end="29:51">-&gt;</operator><name pos:start="29:52" pos:end="29:54">lib</name></name></expr></argument>, <argument pos:start="29:57" pos:end="29:81"><expr pos:start="29:57" pos:end="29:81"><literal type="string" pos:start="29:57" pos:end="29:81">"OMX_GetRolesOfComponent"</literal></expr></argument>, <argument pos:start="29:84" pos:end="29:89"><expr pos:start="29:84" pos:end="29:89"><name pos:start="29:84" pos:end="29:89">prefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="45:5"><if pos:start="31:5" pos:end="45:5">if <condition pos:start="31:8" pos:end="35:67">(<expr pos:start="31:9" pos:end="35:66"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:20"><name pos:start="31:10" pos:end="31:10">s</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:20">ptr_Init</name></name> <operator pos:start="31:22" pos:end="31:23">||</operator> <operator pos:start="31:25" pos:end="31:25">!</operator><name pos:start="31:26" pos:end="31:38"><name pos:start="31:26" pos:end="31:26">s</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:38">ptr_Deinit</name></name> <operator pos:start="31:40" pos:end="31:41">||</operator> <operator pos:start="31:43" pos:end="31:43">!</operator><name pos:start="31:44" pos:end="31:67"><name pos:start="31:44" pos:end="31:44">s</name><operator pos:start="31:45" pos:end="31:46">-&gt;</operator><name pos:start="31:47" pos:end="31:67">ptr_ComponentNameEnum</name></name> <operator pos:start="31:69" pos:end="31:70">||</operator>

        <operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:25"><name pos:start="33:10" pos:end="33:10">s</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:25">ptr_GetHandle</name></name> <operator pos:start="33:27" pos:end="33:28">||</operator> <operator pos:start="33:30" pos:end="33:30">!</operator><name pos:start="33:31" pos:end="33:47"><name pos:start="33:31" pos:end="33:31">s</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:47">ptr_FreeHandle</name></name> <operator pos:start="33:49" pos:end="33:50">||</operator>

        <operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:35"><name pos:start="35:10" pos:end="35:10">s</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:35">ptr_GetComponentsOfRole</name></name> <operator pos:start="35:37" pos:end="35:38">||</operator> <operator pos:start="35:40" pos:end="35:40">!</operator><name pos:start="35:41" pos:end="35:66"><name pos:start="35:41" pos:end="35:41">s</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:66">ptr_GetRolesOfComponent</name></name></expr>)</condition> <block pos:start="35:69" pos:end="45:5">{<block_content pos:start="37:9" pos:end="43:41">

        <expr_stmt pos:start="37:9" pos:end="37:83"><expr pos:start="37:9" pos:end="37:82"><call pos:start="37:9" pos:end="37:82"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:82">(<argument pos:start="37:16" pos:end="37:21"><expr pos:start="37:16" pos:end="37:21"><name pos:start="37:16" pos:end="37:21">logctx</name></expr></argument>, <argument pos:start="37:24" pos:end="37:37"><expr pos:start="37:24" pos:end="37:37"><name pos:start="37:24" pos:end="37:37">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="37:40" pos:end="37:72"><expr pos:start="37:40" pos:end="37:72"><literal type="string" pos:start="37:40" pos:end="37:72">"Not all functions found in %s\n"</literal></expr></argument>, <argument pos:start="37:75" pos:end="37:81"><expr pos:start="37:75" pos:end="37:81"><name pos:start="37:75" pos:end="37:81">libname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:24"><expr pos:start="39:9" pos:end="39:23"><call pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:15">dlclose</name><argument_list pos:start="39:16" pos:end="39:23">(<argument pos:start="39:17" pos:end="39:22"><expr pos:start="39:17" pos:end="39:22"><name pos:start="39:17" pos:end="39:22"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:22">lib</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:22"><expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:14">lib</name></name> <operator pos:start="41:16" pos:end="41:16">=</operator> <name pos:start="41:18" pos:end="41:21">NULL</name></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:41">return <expr pos:start="43:16" pos:end="43:40"><name pos:start="43:16" pos:end="43:40">AVERROR_ENCODER_NOT_FOUND</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
