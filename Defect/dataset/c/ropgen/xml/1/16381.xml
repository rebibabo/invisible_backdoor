<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16381.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">cpu_x86_register</name><parameter_list pos:start="1:21" pos:end="1:56">(<parameter pos:start="1:22" pos:end="1:32"><decl pos:start="1:22" pos:end="1:32"><type pos:start="1:22" pos:end="1:32"><name pos:start="1:22" pos:end="1:27">X86CPU</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:32">cpu</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:55"><specifier pos:start="1:35" pos:end="1:39">const</specifier> <name pos:start="1:41" pos:end="1:44">char</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:55">cpu_model</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">CPUX86State</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">env</name> <init pos:start="5:22" pos:end="5:32">= <expr pos:start="5:24" pos:end="5:32"><operator pos:start="5:24" pos:end="5:24">&amp;</operator><name pos:start="5:25" pos:end="5:32"><name pos:start="5:25" pos:end="5:27">cpu</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">x86_def_t</name></type> <name pos:start="7:15" pos:end="7:18">def1</name></decl>, <decl pos:start="7:21" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">def</name> <init pos:start="7:26" pos:end="7:32">= <expr pos:start="7:28" pos:end="7:32"><operator pos:start="7:28" pos:end="7:28">&amp;</operator><name pos:start="7:29" pos:end="7:32">def1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:16">error</name> <init pos:start="9:18" pos:end="9:23">= <expr pos:start="9:20" pos:end="9:23"><name pos:start="9:20" pos:end="9:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:14">name</name></decl>, <decl pos:start="11:17" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:10"><modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:25">features</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:9">gchar</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier><modifier pos:start="13:12" pos:end="13:12">*</modifier></type><name pos:start="13:13" pos:end="13:24">model_pieces</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><call pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:32">(<argument pos:start="17:12" pos:end="17:14"><expr pos:start="17:12" pos:end="17:14"><name pos:start="17:12" pos:end="17:14">def</name></expr></argument>, <argument pos:start="17:17" pos:end="17:17"><expr pos:start="17:17" pos:end="17:17"><literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr></argument>, <argument pos:start="17:20" pos:end="17:31"><expr pos:start="17:20" pos:end="17:31"><sizeof pos:start="17:20" pos:end="17:31">sizeof<argument_list pos:start="17:26" pos:end="17:31">(<argument pos:start="17:27" pos:end="17:30"><expr pos:start="17:27" pos:end="17:30"><operator pos:start="17:27" pos:end="17:27">*</operator><name pos:start="17:28" pos:end="17:30">def</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:16">model_pieces</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:48"><name pos:start="21:20" pos:end="21:29">g_strsplit</name><argument_list pos:start="21:30" pos:end="21:48">(<argument pos:start="21:31" pos:end="21:39"><expr pos:start="21:31" pos:end="21:39"><name pos:start="21:31" pos:end="21:39">cpu_model</name></expr></argument>, <argument pos:start="21:42" pos:end="21:44"><expr pos:start="21:42" pos:end="21:44"><literal type="string" pos:start="21:42" pos:end="21:44">","</literal></expr></argument>, <argument pos:start="21:47" pos:end="21:47"><expr pos:start="21:47" pos:end="21:47"><literal type="number" pos:start="21:47" pos:end="21:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:25">(<expr pos:start="23:9" pos:end="23:24"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:24"><name pos:start="23:10" pos:end="23:21">model_pieces</name><index pos:start="23:22" pos:end="23:24">[<expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="23:27" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:17">

        <expr_stmt pos:start="25:9" pos:end="25:59"><expr pos:start="25:9" pos:end="25:58"><call pos:start="25:9" pos:end="25:58"><name pos:start="25:9" pos:end="25:18">error_setg</name><argument_list pos:start="25:19" pos:end="25:58">(<argument pos:start="25:20" pos:end="25:25"><expr pos:start="25:20" pos:end="25:25"><operator pos:start="25:20" pos:end="25:20">&amp;</operator><name pos:start="25:21" pos:end="25:25">error</name></expr></argument>, <argument pos:start="25:28" pos:end="25:57"><expr pos:start="25:28" pos:end="25:57"><literal type="string" pos:start="25:28" pos:end="25:57">"Invalid/empty CPU model name"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="27:9" pos:end="27:17">goto <name pos:start="27:14" pos:end="27:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:8">name</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <name pos:start="31:12" pos:end="31:26"><name pos:start="31:12" pos:end="31:23">model_pieces</name><index pos:start="31:24" pos:end="31:26">[<expr pos:start="31:25" pos:end="31:25"><literal type="number" pos:start="31:25" pos:end="31:25">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:12">features</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:30"><name pos:start="33:16" pos:end="33:27">model_pieces</name><index pos:start="33:28" pos:end="33:30">[<expr pos:start="33:29" pos:end="33:29"><literal type="number" pos:start="33:29" pos:end="33:29">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:44">(<expr pos:start="37:9" pos:end="37:43"><call pos:start="37:9" pos:end="37:39"><name pos:start="37:9" pos:end="37:28">cpu_x86_find_by_name</name><argument_list pos:start="37:29" pos:end="37:39">(<argument pos:start="37:30" pos:end="37:32"><expr pos:start="37:30" pos:end="37:32"><name pos:start="37:30" pos:end="37:32">def</name></expr></argument>, <argument pos:start="37:35" pos:end="37:38"><expr pos:start="37:35" pos:end="37:38"><name pos:start="37:35" pos:end="37:38">name</name></expr></argument>)</argument_list></call> <operator pos:start="37:41" pos:end="37:41">&lt;</operator> <literal type="number" pos:start="37:43" pos:end="37:43">0</literal></expr>)</condition> <block pos:start="37:46" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:17">

        <expr_stmt pos:start="39:9" pos:end="39:70"><expr pos:start="39:9" pos:end="39:69"><call pos:start="39:9" pos:end="39:69"><name pos:start="39:9" pos:end="39:18">error_setg</name><argument_list pos:start="39:19" pos:end="39:69">(<argument pos:start="39:20" pos:end="39:25"><expr pos:start="39:20" pos:end="39:25"><operator pos:start="39:20" pos:end="39:20">&amp;</operator><name pos:start="39:21" pos:end="39:25">error</name></expr></argument>, <argument pos:start="39:28" pos:end="39:62"><expr pos:start="39:28" pos:end="39:62"><literal type="string" pos:start="39:28" pos:end="39:62">"Unable to find CPU definition: %s"</literal></expr></argument>, <argument pos:start="39:65" pos:end="39:68"><expr pos:start="39:65" pos:end="39:68"><name pos:start="39:65" pos:end="39:68">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="41:9" pos:end="41:17">goto <name pos:start="41:14" pos:end="41:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:22">(<expr pos:start="47:9" pos:end="47:21"><call pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:19">kvm_enabled</name><argument_list pos:start="47:20" pos:end="47:21">()</argument_list></call></expr>)</condition> <block pos:start="47:24" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:50">

        <expr_stmt pos:start="49:9" pos:end="49:50"><expr pos:start="49:9" pos:end="49:49"><name pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:11">def</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:25">kvm_features</name></name> <operator pos:start="49:27" pos:end="49:28">|=</operator> <name pos:start="49:30" pos:end="49:49">kvm_default_features</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:46"><expr pos:start="53:5" pos:end="53:45"><name pos:start="53:5" pos:end="53:21"><name pos:start="53:5" pos:end="53:7">def</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:21">ext_features</name></name> <operator pos:start="53:23" pos:end="53:24">|=</operator> <name pos:start="53:26" pos:end="53:45">CPUID_EXT_HYPERVISOR</name></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:72"><expr pos:start="57:5" pos:end="57:71"><call pos:start="57:5" pos:end="57:71"><name pos:start="57:5" pos:end="57:27">object_property_set_str</name><argument_list pos:start="57:28" pos:end="57:71">(<argument pos:start="57:29" pos:end="57:39"><expr pos:start="57:29" pos:end="57:39"><call pos:start="57:29" pos:end="57:39"><name pos:start="57:29" pos:end="57:34">OBJECT</name><argument_list pos:start="57:35" pos:end="57:39">(<argument pos:start="57:36" pos:end="57:38"><expr pos:start="57:36" pos:end="57:38"><name pos:start="57:36" pos:end="57:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="57:42" pos:end="57:52"><expr pos:start="57:42" pos:end="57:52"><name pos:start="57:42" pos:end="57:52"><name pos:start="57:42" pos:end="57:44">def</name><operator pos:start="57:45" pos:end="57:46">-&gt;</operator><name pos:start="57:47" pos:end="57:52">vendor</name></name></expr></argument>, <argument pos:start="57:55" pos:end="57:62"><expr pos:start="57:55" pos:end="57:62"><literal type="string" pos:start="57:55" pos:end="57:62">"vendor"</literal></expr></argument>, <argument pos:start="57:65" pos:end="57:70"><expr pos:start="57:65" pos:end="57:70"><operator pos:start="57:65" pos:end="57:65">&amp;</operator><name pos:start="57:66" pos:end="57:70">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:70"><expr pos:start="59:5" pos:end="59:69"><call pos:start="59:5" pos:end="59:69"><name pos:start="59:5" pos:end="59:27">object_property_set_int</name><argument_list pos:start="59:28" pos:end="59:69">(<argument pos:start="59:29" pos:end="59:39"><expr pos:start="59:29" pos:end="59:39"><call pos:start="59:29" pos:end="59:39"><name pos:start="59:29" pos:end="59:34">OBJECT</name><argument_list pos:start="59:35" pos:end="59:39">(<argument pos:start="59:36" pos:end="59:38"><expr pos:start="59:36" pos:end="59:38"><name pos:start="59:36" pos:end="59:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="59:42" pos:end="59:51"><expr pos:start="59:42" pos:end="59:51"><name pos:start="59:42" pos:end="59:51"><name pos:start="59:42" pos:end="59:44">def</name><operator pos:start="59:45" pos:end="59:46">-&gt;</operator><name pos:start="59:47" pos:end="59:51">level</name></name></expr></argument>, <argument pos:start="59:54" pos:end="59:60"><expr pos:start="59:54" pos:end="59:60"><literal type="string" pos:start="59:54" pos:end="59:60">"level"</literal></expr></argument>, <argument pos:start="59:63" pos:end="59:68"><expr pos:start="59:63" pos:end="59:68"><operator pos:start="59:63" pos:end="59:63">&amp;</operator><name pos:start="59:64" pos:end="59:68">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:72"><expr pos:start="61:5" pos:end="61:71"><call pos:start="61:5" pos:end="61:71"><name pos:start="61:5" pos:end="61:27">object_property_set_int</name><argument_list pos:start="61:28" pos:end="61:71">(<argument pos:start="61:29" pos:end="61:39"><expr pos:start="61:29" pos:end="61:39"><call pos:start="61:29" pos:end="61:39"><name pos:start="61:29" pos:end="61:34">OBJECT</name><argument_list pos:start="61:35" pos:end="61:39">(<argument pos:start="61:36" pos:end="61:38"><expr pos:start="61:36" pos:end="61:38"><name pos:start="61:36" pos:end="61:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="61:42" pos:end="61:52"><expr pos:start="61:42" pos:end="61:52"><name pos:start="61:42" pos:end="61:52"><name pos:start="61:42" pos:end="61:44">def</name><operator pos:start="61:45" pos:end="61:46">-&gt;</operator><name pos:start="61:47" pos:end="61:52">family</name></name></expr></argument>, <argument pos:start="61:55" pos:end="61:62"><expr pos:start="61:55" pos:end="61:62"><literal type="string" pos:start="61:55" pos:end="61:62">"family"</literal></expr></argument>, <argument pos:start="61:65" pos:end="61:70"><expr pos:start="61:65" pos:end="61:70"><operator pos:start="61:65" pos:end="61:65">&amp;</operator><name pos:start="61:66" pos:end="61:70">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:70"><expr pos:start="63:5" pos:end="63:69"><call pos:start="63:5" pos:end="63:69"><name pos:start="63:5" pos:end="63:27">object_property_set_int</name><argument_list pos:start="63:28" pos:end="63:69">(<argument pos:start="63:29" pos:end="63:39"><expr pos:start="63:29" pos:end="63:39"><call pos:start="63:29" pos:end="63:39"><name pos:start="63:29" pos:end="63:34">OBJECT</name><argument_list pos:start="63:35" pos:end="63:39">(<argument pos:start="63:36" pos:end="63:38"><expr pos:start="63:36" pos:end="63:38"><name pos:start="63:36" pos:end="63:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="63:42" pos:end="63:51"><expr pos:start="63:42" pos:end="63:51"><name pos:start="63:42" pos:end="63:51"><name pos:start="63:42" pos:end="63:44">def</name><operator pos:start="63:45" pos:end="63:46">-&gt;</operator><name pos:start="63:47" pos:end="63:51">model</name></name></expr></argument>, <argument pos:start="63:54" pos:end="63:60"><expr pos:start="63:54" pos:end="63:60"><literal type="string" pos:start="63:54" pos:end="63:60">"model"</literal></expr></argument>, <argument pos:start="63:63" pos:end="63:68"><expr pos:start="63:63" pos:end="63:68"><operator pos:start="63:63" pos:end="63:63">&amp;</operator><name pos:start="63:64" pos:end="63:68">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:76"><expr pos:start="65:5" pos:end="65:75"><call pos:start="65:5" pos:end="65:75"><name pos:start="65:5" pos:end="65:27">object_property_set_int</name><argument_list pos:start="65:28" pos:end="65:75">(<argument pos:start="65:29" pos:end="65:39"><expr pos:start="65:29" pos:end="65:39"><call pos:start="65:29" pos:end="65:39"><name pos:start="65:29" pos:end="65:34">OBJECT</name><argument_list pos:start="65:35" pos:end="65:39">(<argument pos:start="65:36" pos:end="65:38"><expr pos:start="65:36" pos:end="65:38"><name pos:start="65:36" pos:end="65:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="65:42" pos:end="65:54"><expr pos:start="65:42" pos:end="65:54"><name pos:start="65:42" pos:end="65:54"><name pos:start="65:42" pos:end="65:44">def</name><operator pos:start="65:45" pos:end="65:46">-&gt;</operator><name pos:start="65:47" pos:end="65:54">stepping</name></name></expr></argument>, <argument pos:start="65:57" pos:end="65:66"><expr pos:start="65:57" pos:end="65:66"><literal type="string" pos:start="65:57" pos:end="65:66">"stepping"</literal></expr></argument>, <argument pos:start="65:69" pos:end="65:74"><expr pos:start="65:69" pos:end="65:74"><operator pos:start="65:69" pos:end="65:69">&amp;</operator><name pos:start="65:70" pos:end="65:74">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:40"><expr pos:start="67:5" pos:end="67:39"><name pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:7">env</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:23">cpuid_features</name></name> <operator pos:start="67:25" pos:end="67:25">=</operator> <name pos:start="67:27" pos:end="67:39"><name pos:start="67:27" pos:end="67:29">def</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:39">features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:48"><expr pos:start="69:5" pos:end="69:47"><name pos:start="69:5" pos:end="69:27"><name pos:start="69:5" pos:end="69:7">env</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:27">cpuid_ext_features</name></name> <operator pos:start="69:29" pos:end="69:29">=</operator> <name pos:start="69:31" pos:end="69:47"><name pos:start="69:31" pos:end="69:33">def</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:47">ext_features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:50"><expr pos:start="71:5" pos:end="71:49"><name pos:start="71:5" pos:end="71:28"><name pos:start="71:5" pos:end="71:7">env</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:28">cpuid_ext2_features</name></name> <operator pos:start="71:30" pos:end="71:30">=</operator> <name pos:start="71:32" pos:end="71:49"><name pos:start="71:32" pos:end="71:34">def</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:49">ext2_features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:50"><expr pos:start="73:5" pos:end="73:49"><name pos:start="73:5" pos:end="73:28"><name pos:start="73:5" pos:end="73:7">env</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:28">cpuid_ext3_features</name></name> <operator pos:start="73:30" pos:end="73:30">=</operator> <name pos:start="73:32" pos:end="73:49"><name pos:start="73:32" pos:end="73:34">def</name><operator pos:start="73:35" pos:end="73:36">-&gt;</operator><name pos:start="73:37" pos:end="73:49">ext3_features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:72"><expr pos:start="75:5" pos:end="75:71"><call pos:start="75:5" pos:end="75:71"><name pos:start="75:5" pos:end="75:27">object_property_set_int</name><argument_list pos:start="75:28" pos:end="75:71">(<argument pos:start="75:29" pos:end="75:39"><expr pos:start="75:29" pos:end="75:39"><call pos:start="75:29" pos:end="75:39"><name pos:start="75:29" pos:end="75:34">OBJECT</name><argument_list pos:start="75:35" pos:end="75:39">(<argument pos:start="75:36" pos:end="75:38"><expr pos:start="75:36" pos:end="75:38"><name pos:start="75:36" pos:end="75:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="75:42" pos:end="75:52"><expr pos:start="75:42" pos:end="75:52"><name pos:start="75:42" pos:end="75:52"><name pos:start="75:42" pos:end="75:44">def</name><operator pos:start="75:45" pos:end="75:46">-&gt;</operator><name pos:start="75:47" pos:end="75:52">xlevel</name></name></expr></argument>, <argument pos:start="75:55" pos:end="75:62"><expr pos:start="75:55" pos:end="75:62"><literal type="string" pos:start="75:55" pos:end="75:62">"xlevel"</literal></expr></argument>, <argument pos:start="75:65" pos:end="75:70"><expr pos:start="75:65" pos:end="75:70"><operator pos:start="75:65" pos:end="75:65">&amp;</operator><name pos:start="75:66" pos:end="75:70">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:48"><expr pos:start="77:5" pos:end="77:47"><name pos:start="77:5" pos:end="77:27"><name pos:start="77:5" pos:end="77:7">env</name><operator pos:start="77:8" pos:end="77:9">-&gt;</operator><name pos:start="77:10" pos:end="77:27">cpuid_kvm_features</name></name> <operator pos:start="77:29" pos:end="77:29">=</operator> <name pos:start="77:31" pos:end="77:47"><name pos:start="77:31" pos:end="77:33">def</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:47">kvm_features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:48"><expr pos:start="79:5" pos:end="79:47"><name pos:start="79:5" pos:end="79:27"><name pos:start="79:5" pos:end="79:7">env</name><operator pos:start="79:8" pos:end="79:9">-&gt;</operator><name pos:start="79:10" pos:end="79:27">cpuid_svm_features</name></name> <operator pos:start="79:29" pos:end="79:29">=</operator> <name pos:start="79:31" pos:end="79:47"><name pos:start="79:31" pos:end="79:33">def</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:47">svm_features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:50"><expr pos:start="81:5" pos:end="81:49"><name pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:7">env</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:28">cpuid_ext4_features</name></name> <operator pos:start="81:30" pos:end="81:30">=</operator> <name pos:start="81:32" pos:end="81:49"><name pos:start="81:32" pos:end="81:34">def</name><operator pos:start="81:35" pos:end="81:36">-&gt;</operator><name pos:start="81:37" pos:end="81:49">ext4_features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:62"><expr pos:start="83:5" pos:end="83:61"><name pos:start="83:5" pos:end="83:31"><name pos:start="83:5" pos:end="83:7">env</name><operator pos:start="83:8" pos:end="83:9">-&gt;</operator><name pos:start="83:10" pos:end="83:31">cpuid_7_0_ebx_features</name></name> <operator pos:start="83:33" pos:end="83:33">=</operator> <name pos:start="83:35" pos:end="83:61"><name pos:start="83:35" pos:end="83:37">def</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:61">cpuid_7_0_ebx_features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:38"><expr pos:start="85:5" pos:end="85:37"><name pos:start="85:5" pos:end="85:22"><name pos:start="85:5" pos:end="85:7">env</name><operator pos:start="85:8" pos:end="85:9">-&gt;</operator><name pos:start="85:10" pos:end="85:22">cpuid_xlevel2</name></name> <operator pos:start="85:24" pos:end="85:24">=</operator> <name pos:start="85:26" pos:end="85:37"><name pos:start="85:26" pos:end="85:28">def</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:37">xlevel2</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="89:53"><expr pos:start="87:5" pos:end="89:52"><call pos:start="87:5" pos:end="89:52"><name pos:start="87:5" pos:end="87:27">object_property_set_int</name><argument_list pos:start="87:28" pos:end="89:52">(<argument pos:start="87:29" pos:end="87:39"><expr pos:start="87:29" pos:end="87:39"><call pos:start="87:29" pos:end="87:39"><name pos:start="87:29" pos:end="87:34">OBJECT</name><argument_list pos:start="87:35" pos:end="87:39">(<argument pos:start="87:36" pos:end="87:38"><expr pos:start="87:36" pos:end="87:38"><name pos:start="87:36" pos:end="87:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="87:42" pos:end="87:69"><expr pos:start="87:42" pos:end="87:69"><operator pos:start="87:42" pos:end="87:42">(</operator><name pos:start="87:43" pos:end="87:49">int64_t</name><operator pos:start="87:50" pos:end="87:50">)</operator><name pos:start="87:51" pos:end="87:62"><name pos:start="87:51" pos:end="87:53">def</name><operator pos:start="87:54" pos:end="87:55">-&gt;</operator><name pos:start="87:56" pos:end="87:62">tsc_khz</name></name> <operator pos:start="87:64" pos:end="87:64">*</operator> <literal type="number" pos:start="87:66" pos:end="87:69">1000</literal></expr></argument>,

                            <argument pos:start="89:29" pos:end="89:43"><expr pos:start="89:29" pos:end="89:43"><literal type="string" pos:start="89:29" pos:end="89:43">"tsc-frequency"</literal></expr></argument>, <argument pos:start="89:46" pos:end="89:51"><expr pos:start="89:46" pos:end="89:51"><operator pos:start="89:46" pos:end="89:46">&amp;</operator><name pos:start="89:47" pos:end="89:51">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:76"><expr pos:start="93:5" pos:end="93:75"><call pos:start="93:5" pos:end="93:75"><name pos:start="93:5" pos:end="93:27">object_property_set_str</name><argument_list pos:start="93:28" pos:end="93:75">(<argument pos:start="93:29" pos:end="93:39"><expr pos:start="93:29" pos:end="93:39"><call pos:start="93:29" pos:end="93:39"><name pos:start="93:29" pos:end="93:34">OBJECT</name><argument_list pos:start="93:35" pos:end="93:39">(<argument pos:start="93:36" pos:end="93:38"><expr pos:start="93:36" pos:end="93:38"><name pos:start="93:36" pos:end="93:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="93:42" pos:end="93:54"><expr pos:start="93:42" pos:end="93:54"><name pos:start="93:42" pos:end="93:54"><name pos:start="93:42" pos:end="93:44">def</name><operator pos:start="93:45" pos:end="93:46">-&gt;</operator><name pos:start="93:47" pos:end="93:54">model_id</name></name></expr></argument>, <argument pos:start="93:57" pos:end="93:66"><expr pos:start="93:57" pos:end="93:66"><literal type="string" pos:start="93:57" pos:end="93:66">"model-id"</literal></expr></argument>, <argument pos:start="93:69" pos:end="93:74"><expr pos:start="93:69" pos:end="93:74"><operator pos:start="93:69" pos:end="93:69">&amp;</operator><name pos:start="93:70" pos:end="93:74">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="99:5"><if pos:start="95:5" pos:end="99:5">if <condition pos:start="95:8" pos:end="95:14">(<expr pos:start="95:9" pos:end="95:13"><name pos:start="95:9" pos:end="95:13">error</name></expr>)</condition> <block pos:start="95:16" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:17">

        <goto pos:start="97:9" pos:end="97:17">goto <name pos:start="97:14" pos:end="97:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:52"><expr pos:start="103:5" pos:end="103:51"><call pos:start="103:5" pos:end="103:51"><name pos:start="103:5" pos:end="103:28">cpu_x86_parse_featurestr</name><argument_list pos:start="103:29" pos:end="103:51">(<argument pos:start="103:30" pos:end="103:32"><expr pos:start="103:30" pos:end="103:32"><name pos:start="103:30" pos:end="103:32">cpu</name></expr></argument>, <argument pos:start="103:35" pos:end="103:42"><expr pos:start="103:35" pos:end="103:42"><name pos:start="103:35" pos:end="103:42">features</name></expr></argument>, <argument pos:start="103:45" pos:end="103:50"><expr pos:start="103:45" pos:end="103:50"><operator pos:start="103:45" pos:end="103:45">&amp;</operator><name pos:start="103:46" pos:end="103:50">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="105:1" pos:end="105:4"><name pos:start="105:1" pos:end="105:3">out</name>:</label>

    <expr_stmt pos:start="107:5" pos:end="107:29"><expr pos:start="107:5" pos:end="107:28"><call pos:start="107:5" pos:end="107:28"><name pos:start="107:5" pos:end="107:14">g_strfreev</name><argument_list pos:start="107:15" pos:end="107:28">(<argument pos:start="107:16" pos:end="107:27"><expr pos:start="107:16" pos:end="107:27"><name pos:start="107:16" pos:end="107:27">model_pieces</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="117:5"><if pos:start="109:5" pos:end="117:5">if <condition pos:start="109:8" pos:end="109:14">(<expr pos:start="109:9" pos:end="109:13"><name pos:start="109:9" pos:end="109:13">error</name></expr>)</condition> <block pos:start="109:16" pos:end="117:5">{<block_content pos:start="111:9" pos:end="115:18">

        <expr_stmt pos:start="111:9" pos:end="111:57"><expr pos:start="111:9" pos:end="111:56"><call pos:start="111:9" pos:end="111:56"><name pos:start="111:9" pos:end="111:15">fprintf</name><argument_list pos:start="111:16" pos:end="111:56">(<argument pos:start="111:17" pos:end="111:22"><expr pos:start="111:17" pos:end="111:22"><name pos:start="111:17" pos:end="111:22">stderr</name></expr></argument>, <argument pos:start="111:25" pos:end="111:30"><expr pos:start="111:25" pos:end="111:30"><literal type="string" pos:start="111:25" pos:end="111:30">"%s\n"</literal></expr></argument>, <argument pos:start="111:33" pos:end="111:55"><expr pos:start="111:33" pos:end="111:55"><call pos:start="111:33" pos:end="111:55"><name pos:start="111:33" pos:end="111:48">error_get_pretty</name><argument_list pos:start="111:49" pos:end="111:55">(<argument pos:start="111:50" pos:end="111:54"><expr pos:start="111:50" pos:end="111:54"><name pos:start="111:50" pos:end="111:54">error</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:26"><expr pos:start="113:9" pos:end="113:25"><call pos:start="113:9" pos:end="113:25"><name pos:start="113:9" pos:end="113:18">error_free</name><argument_list pos:start="113:19" pos:end="113:25">(<argument pos:start="113:20" pos:end="113:24"><expr pos:start="113:20" pos:end="113:24"><name pos:start="113:20" pos:end="113:24">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="115:9" pos:end="115:18">return <expr pos:start="115:16" pos:end="115:17"><operator pos:start="115:16" pos:end="115:16">-</operator><literal type="number" pos:start="115:17" pos:end="115:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="119:5" pos:end="119:13">return <expr pos:start="119:12" pos:end="119:12"><literal type="number" pos:start="119:12" pos:end="119:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
