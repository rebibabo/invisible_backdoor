<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14253.c" pos:tabs="8"><function pos:start="1:1" pos:end="295:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">ff_dca_xll_filter_frame</name><parameter_list pos:start="1:28" pos:end="1:61">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:41">DCAXllDecoder</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:60"><decl pos:start="1:47" pos:end="1:60"><type pos:start="1:47" pos:end="1:60"><name pos:start="1:47" pos:end="1:53">AVFrame</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:60">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="295:1">{<block_content pos:start="5:5" pos:end="293:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">AVCodecContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">avctx</name> <init pos:start="5:27" pos:end="5:36">= <expr pos:start="5:29" pos:end="5:36"><name pos:start="5:29" pos:end="5:36"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:36">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">DCAContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">dca</name> <init pos:start="7:21" pos:end="7:38">= <expr pos:start="7:23" pos:end="7:38"><name pos:start="7:23" pos:end="7:38"><name pos:start="7:23" pos:end="7:27">avctx</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">DCAExssAsset</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:23">asset</name> <init pos:start="9:25" pos:end="9:46">= <expr pos:start="9:27" pos:end="9:46"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:46"><name pos:start="9:28" pos:end="9:30">dca</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">exss</name><operator pos:start="9:37" pos:end="9:37">.</operator><name pos:start="9:38" pos:end="9:43">assets</name><index pos:start="9:44" pos:end="9:46">[<expr pos:start="9:45" pos:end="9:45"><literal type="number" pos:start="9:45" pos:end="9:45">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">DCAXllChSet</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:18">p</name> <init pos:start="11:20" pos:end="11:33">= <expr pos:start="11:22" pos:end="11:33"><operator pos:start="11:22" pos:end="11:22">&amp;</operator><name pos:start="11:23" pos:end="11:33"><name pos:start="11:23" pos:end="11:23">s</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:30">chset</name><index pos:start="11:31" pos:end="11:33">[<expr pos:start="11:32" pos:end="11:32"><literal type="number" pos:start="11:32" pos:end="11:32">0</literal></expr>]</index></name></expr></init></decl>, <decl pos:start="11:36" pos:end="11:37"><type ref="prev" pos:start="11:5" pos:end="11:17"><modifier pos:start="11:36" pos:end="11:36">*</modifier></type><name pos:start="11:37" pos:end="11:37">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:68"><decl pos:start="13:5" pos:end="13:67"><type pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:8">enum</name> <name pos:start="13:10" pos:end="13:25">AVMatrixEncoding</name></name></type> <name pos:start="13:27" pos:end="13:41">matrix_encoding</name> <init pos:start="13:43" pos:end="13:67">= <expr pos:start="13:45" pos:end="13:67"><name pos:start="13:45" pos:end="13:67">AV_MATRIX_ENCODING_NONE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:52"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">j</name></decl>, <decl pos:start="15:15" pos:end="15:15"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:15" pos:end="15:15">k</name></decl>, <decl pos:start="15:18" pos:end="15:20"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:18" pos:end="15:20">ret</name></decl>, <decl pos:start="15:23" pos:end="15:27"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:23" pos:end="15:27">shift</name></decl>, <decl pos:start="15:30" pos:end="15:37"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:30" pos:end="15:37">nsamples</name></decl>, <decl pos:start="15:40" pos:end="15:51"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:40" pos:end="15:51">request_mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:36"><decl pos:start="17:5" pos:end="17:35"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:35"><name pos:start="17:9" pos:end="17:16">ch_remap</name><index pos:start="17:17" pos:end="17:35">[<expr pos:start="17:18" pos:end="17:34"><name pos:start="17:18" pos:end="17:34">DCA_SPEAKER_COUNT</name></expr>]</index></name></decl>;</decl_stmt>



    <comment type="line" pos:start="21:5" pos:end="21:51">// Force lossy downmixed output during recovery</comment>

    <if_stmt pos:start="23:5" pos:end="45:5"><if pos:start="23:5" pos:end="45:5">if <condition pos:start="23:8" pos:end="23:42">(<expr pos:start="23:9" pos:end="23:41"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:11">dca</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:19">packet</name></name> <operator pos:start="23:21" pos:end="23:21">&amp;</operator> <name pos:start="23:23" pos:end="23:41">DCA_PACKET_RECOVERY</name></expr>)</condition> <block pos:start="23:44" pos:end="45:5">{<block_content pos:start="25:9" pos:end="43:31">

        <for pos:start="25:9" pos:end="37:9">for <control pos:start="25:13" pos:end="25:59">(<init pos:start="25:14" pos:end="25:33"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">i</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr><operator pos:start="25:19" pos:end="25:19">,</operator> <expr pos:start="25:21" pos:end="25:32"><name pos:start="25:21" pos:end="25:21">c</name> <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:32"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:32">chset</name></name></expr>;</init> <condition pos:start="25:35" pos:end="25:49"><expr pos:start="25:35" pos:end="25:48"><name pos:start="25:35" pos:end="25:35">i</name> <operator pos:start="25:37" pos:end="25:37">&lt;</operator> <name pos:start="25:39" pos:end="25:48"><name pos:start="25:39" pos:end="25:39">s</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:48">nchsets</name></name></expr>;</condition> <incr pos:start="25:51" pos:end="25:58"><expr pos:start="25:51" pos:end="25:53"><name pos:start="25:51" pos:end="25:51">i</name><operator pos:start="25:52" pos:end="25:53">++</operator></expr><operator pos:start="25:54" pos:end="25:54">,</operator> <expr pos:start="25:56" pos:end="25:58"><name pos:start="25:56" pos:end="25:56">c</name><operator pos:start="25:57" pos:end="25:58">++</operator></expr></incr>)</control> <block pos:start="25:61" pos:end="37:9">{<block_content pos:start="27:13" pos:end="35:37">

            <if_stmt pos:start="27:13" pos:end="29:41"><if pos:start="27:13" pos:end="29:41">if <condition pos:start="27:16" pos:end="27:37">(<expr pos:start="27:17" pos:end="27:36"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:36"><name pos:start="27:21" pos:end="27:21">s</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:36">nactivechsets</name></name></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:41"><block_content pos:start="29:17" pos:end="29:41">

                <expr_stmt pos:start="29:17" pos:end="29:41"><expr pos:start="29:17" pos:end="29:40"><call pos:start="29:17" pos:end="29:40"><name pos:start="29:17" pos:end="29:34">force_lossy_output</name><argument_list pos:start="29:35" pos:end="29:40">(<argument pos:start="29:36" pos:end="29:36"><expr pos:start="29:36" pos:end="29:36"><name pos:start="29:36" pos:end="29:36">s</name></expr></argument>, <argument pos:start="29:39" pos:end="29:39"><expr pos:start="29:39" pos:end="29:39"><name pos:start="29:39" pos:end="29:39">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="33:13" pos:end="35:37"><if pos:start="33:13" pos:end="35:37">if <condition pos:start="33:16" pos:end="33:34">(<expr pos:start="33:17" pos:end="33:33"><operator pos:start="33:17" pos:end="33:17">!</operator><name pos:start="33:18" pos:end="33:33"><name pos:start="33:18" pos:end="33:18">c</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:33">primary_chset</name></name></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:37"><block_content pos:start="35:17" pos:end="35:37">

                <expr_stmt pos:start="35:17" pos:end="35:37"><expr pos:start="35:17" pos:end="35:36"><name pos:start="35:17" pos:end="35:32"><name pos:start="35:17" pos:end="35:17">c</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:32">dmix_embedded</name></name> <operator pos:start="35:34" pos:end="35:34">=</operator> <literal type="number" pos:start="35:36" pos:end="35:36">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="41:9" pos:end="41:29"><expr pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:24">scalable_lsbs</name></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <literal type="number" pos:start="41:28" pos:end="41:28">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:31"><expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:26">fixed_lsb_width</name></name> <operator pos:start="43:28" pos:end="43:28">=</operator> <literal type="number" pos:start="43:30" pos:end="43:30">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="49:5" pos:end="49:53">// Filter frequency bands for active channel sets</comment>

    <expr_stmt pos:start="51:5" pos:end="51:23"><expr pos:start="51:5" pos:end="51:22"><name pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:18">output_mask</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <literal type="number" pos:start="51:22" pos:end="51:22">0</literal></expr>;</expr_stmt>

    <for pos:start="53:5" pos:end="85:5">for <control pos:start="53:9" pos:end="53:61">(<init pos:start="53:10" pos:end="53:29"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr><operator pos:start="53:15" pos:end="53:15">,</operator> <expr pos:start="53:17" pos:end="53:28"><name pos:start="53:17" pos:end="53:17">c</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:28"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:28">chset</name></name></expr>;</init> <condition pos:start="53:31" pos:end="53:51"><expr pos:start="53:31" pos:end="53:50"><name pos:start="53:31" pos:end="53:31">i</name> <operator pos:start="53:33" pos:end="53:33">&lt;</operator> <name pos:start="53:35" pos:end="53:50"><name pos:start="53:35" pos:end="53:35">s</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:50">nactivechsets</name></name></expr>;</condition> <incr pos:start="53:53" pos:end="53:60"><expr pos:start="53:53" pos:end="53:55"><name pos:start="53:53" pos:end="53:53">i</name><operator pos:start="53:54" pos:end="53:55">++</operator></expr><operator pos:start="53:56" pos:end="53:56">,</operator> <expr pos:start="53:58" pos:end="53:60"><name pos:start="53:58" pos:end="53:58">c</name><operator pos:start="53:59" pos:end="53:60">++</operator></expr></incr>)</control> <block pos:start="53:63" pos:end="85:5">{<block_content pos:start="55:9" pos:end="83:37">

        <expr_stmt pos:start="55:9" pos:end="55:38"><expr pos:start="55:9" pos:end="55:37"><call pos:start="55:9" pos:end="55:37"><name pos:start="55:9" pos:end="55:28">chs_filter_band_data</name><argument_list pos:start="55:29" pos:end="55:37">(<argument pos:start="55:30" pos:end="55:30"><expr pos:start="55:30" pos:end="55:30"><name pos:start="55:30" pos:end="55:30">s</name></expr></argument>, <argument pos:start="55:33" pos:end="55:33"><expr pos:start="55:33" pos:end="55:33"><name pos:start="55:33" pos:end="55:33">c</name></expr></argument>, <argument pos:start="55:36" pos:end="55:36"><expr pos:start="55:36" pos:end="55:36"><literal type="number" pos:start="55:36" pos:end="55:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="59:9" pos:end="63:23"><if pos:start="59:9" pos:end="63:23">if <condition pos:start="59:12" pos:end="61:56">(<expr pos:start="59:13" pos:end="61:55"><name pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:13">c</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:30">residual_encode</name></name> <operator pos:start="59:32" pos:end="59:33">!=</operator> <operator pos:start="59:35" pos:end="59:35">(</operator><literal type="number" pos:start="59:36" pos:end="59:36">1</literal> <operator pos:start="59:38" pos:end="59:39">&lt;&lt;</operator> <name pos:start="59:41" pos:end="59:52"><name pos:start="59:41" pos:end="59:41">c</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:52">nchannels</name></name><operator pos:start="59:53" pos:end="59:53">)</operator> <operator pos:start="59:55" pos:end="59:55">-</operator> <literal type="number" pos:start="59:57" pos:end="59:57">1</literal>

            <operator pos:start="61:13" pos:end="61:14">&amp;&amp;</operator> <operator pos:start="61:16" pos:end="61:16">(</operator><name pos:start="61:17" pos:end="61:19">ret</name> <operator pos:start="61:21" pos:end="61:21">=</operator> <call pos:start="61:23" pos:end="61:50"><name pos:start="61:23" pos:end="61:44">combine_residual_frame</name><argument_list pos:start="61:45" pos:end="61:50">(<argument pos:start="61:46" pos:end="61:46"><expr pos:start="61:46" pos:end="61:46"><name pos:start="61:46" pos:end="61:46">s</name></expr></argument>, <argument pos:start="61:49" pos:end="61:49"><expr pos:start="61:49" pos:end="61:49"><name pos:start="61:49" pos:end="61:49">c</name></expr></argument>)</argument_list></call><operator pos:start="61:51" pos:end="61:51">)</operator> <operator pos:start="61:53" pos:end="61:53">&lt;</operator> <literal type="number" pos:start="61:55" pos:end="61:55">0</literal></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:23"><block_content pos:start="63:13" pos:end="63:23">

            <return pos:start="63:13" pos:end="63:23">return <expr pos:start="63:20" pos:end="63:22"><name pos:start="63:20" pos:end="63:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="67:9" pos:end="69:44"><if pos:start="67:9" pos:end="69:44">if <condition pos:start="67:12" pos:end="67:29">(<expr pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:28">scalable_lsbs</name></name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:44"><block_content pos:start="69:13" pos:end="69:44">

            <expr_stmt pos:start="69:13" pos:end="69:44"><expr pos:start="69:13" pos:end="69:43"><call pos:start="69:13" pos:end="69:43"><name pos:start="69:13" pos:end="69:34">chs_assemble_msbs_lsbs</name><argument_list pos:start="69:35" pos:end="69:43">(<argument pos:start="69:36" pos:end="69:36"><expr pos:start="69:36" pos:end="69:36"><name pos:start="69:36" pos:end="69:36">s</name></expr></argument>, <argument pos:start="69:39" pos:end="69:39"><expr pos:start="69:39" pos:end="69:39"><name pos:start="69:39" pos:end="69:39">c</name></expr></argument>, <argument pos:start="69:42" pos:end="69:42"><expr pos:start="69:42" pos:end="69:42"><literal type="number" pos:start="69:42" pos:end="69:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="73:9" pos:end="79:9"><if pos:start="73:9" pos:end="79:9">if <condition pos:start="73:12" pos:end="73:30">(<expr pos:start="73:13" pos:end="73:29"><name pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:13">c</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:25">nfreqbands</name></name> <operator pos:start="73:27" pos:end="73:27">&gt;</operator> <literal type="number" pos:start="73:29" pos:end="73:29">1</literal></expr>)</condition> <block pos:start="73:32" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:44">

            <expr_stmt pos:start="75:13" pos:end="75:42"><expr pos:start="75:13" pos:end="75:41"><call pos:start="75:13" pos:end="75:41"><name pos:start="75:13" pos:end="75:32">chs_filter_band_data</name><argument_list pos:start="75:33" pos:end="75:41">(<argument pos:start="75:34" pos:end="75:34"><expr pos:start="75:34" pos:end="75:34"><name pos:start="75:34" pos:end="75:34">s</name></expr></argument>, <argument pos:start="75:37" pos:end="75:37"><expr pos:start="75:37" pos:end="75:37"><name pos:start="75:37" pos:end="75:37">c</name></expr></argument>, <argument pos:start="75:40" pos:end="75:40"><expr pos:start="75:40" pos:end="75:40"><literal type="number" pos:start="75:40" pos:end="75:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:44"><expr pos:start="77:13" pos:end="77:43"><call pos:start="77:13" pos:end="77:43"><name pos:start="77:13" pos:end="77:34">chs_assemble_msbs_lsbs</name><argument_list pos:start="77:35" pos:end="77:43">(<argument pos:start="77:36" pos:end="77:36"><expr pos:start="77:36" pos:end="77:36"><name pos:start="77:36" pos:end="77:36">s</name></expr></argument>, <argument pos:start="77:39" pos:end="77:39"><expr pos:start="77:39" pos:end="77:39"><name pos:start="77:39" pos:end="77:39">c</name></expr></argument>, <argument pos:start="77:42" pos:end="77:42"><expr pos:start="77:42" pos:end="77:42"><literal type="number" pos:start="77:42" pos:end="77:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:37"><expr pos:start="83:9" pos:end="83:36"><name pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:22">output_mask</name></name> <operator pos:start="83:24" pos:end="83:25">|=</operator> <name pos:start="83:27" pos:end="83:36"><name pos:start="83:27" pos:end="83:27">c</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:36">ch_mask</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="line" pos:start="89:5" pos:end="89:52">// Undo hierarchial downmix and/or apply scaling</comment>

    <for pos:start="91:5" pos:end="119:5">for <control pos:start="91:9" pos:end="91:59">(<init pos:start="91:10" pos:end="91:33"><expr pos:start="91:10" pos:end="91:14"><name pos:start="91:10" pos:end="91:10">i</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <literal type="number" pos:start="91:14" pos:end="91:14">1</literal></expr><operator pos:start="91:15" pos:end="91:15">,</operator> <expr pos:start="91:17" pos:end="91:32"><name pos:start="91:17" pos:end="91:17">c</name> <operator pos:start="91:19" pos:end="91:19">=</operator> <operator pos:start="91:21" pos:end="91:21">&amp;</operator><name pos:start="91:22" pos:end="91:32"><name pos:start="91:22" pos:end="91:22">s</name><operator pos:start="91:23" pos:end="91:24">-&gt;</operator><name pos:start="91:25" pos:end="91:29">chset</name><index pos:start="91:30" pos:end="91:32">[<expr pos:start="91:31" pos:end="91:31"><literal type="number" pos:start="91:31" pos:end="91:31">1</literal></expr>]</index></name></expr>;</init> <condition pos:start="91:35" pos:end="91:49"><expr pos:start="91:35" pos:end="91:48"><name pos:start="91:35" pos:end="91:35">i</name> <operator pos:start="91:37" pos:end="91:37">&lt;</operator> <name pos:start="91:39" pos:end="91:48"><name pos:start="91:39" pos:end="91:39">s</name><operator pos:start="91:40" pos:end="91:41">-&gt;</operator><name pos:start="91:42" pos:end="91:48">nchsets</name></name></expr>;</condition> <incr pos:start="91:51" pos:end="91:58"><expr pos:start="91:51" pos:end="91:53"><name pos:start="91:51" pos:end="91:51">i</name><operator pos:start="91:52" pos:end="91:53">++</operator></expr><operator pos:start="91:54" pos:end="91:54">,</operator> <expr pos:start="91:56" pos:end="91:58"><name pos:start="91:56" pos:end="91:56">c</name><operator pos:start="91:57" pos:end="91:58">++</operator></expr></incr>)</control> <block pos:start="91:61" pos:end="119:5">{<block_content pos:start="93:9" pos:end="117:39">

        <if_stmt pos:start="93:9" pos:end="95:21"><if pos:start="93:9" pos:end="95:21">if <condition pos:start="93:12" pos:end="93:35">(<expr pos:start="93:13" pos:end="93:34"><operator pos:start="93:13" pos:end="93:13">!</operator><call pos:start="93:14" pos:end="93:34"><name pos:start="93:14" pos:end="93:31">is_hier_dmix_chset</name><argument_list pos:start="93:32" pos:end="93:34">(<argument pos:start="93:33" pos:end="93:33"><expr pos:start="93:33" pos:end="93:33"><name pos:start="93:33" pos:end="93:33">c</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:21"><block_content pos:start="95:13" pos:end="95:21">

            <continue pos:start="95:13" pos:end="95:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="99:9" pos:end="109:9"><if pos:start="99:9" pos:end="109:9">if <condition pos:start="99:12" pos:end="99:34">(<expr pos:start="99:13" pos:end="99:33"><name pos:start="99:13" pos:end="99:13">i</name> <operator pos:start="99:15" pos:end="99:16">&gt;=</operator> <name pos:start="99:18" pos:end="99:33"><name pos:start="99:18" pos:end="99:18">s</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:33">nactivechsets</name></name></expr>)</condition> <block pos:start="99:36" pos:end="109:9">{<block_content pos:start="101:13" pos:end="107:18">

            <for pos:start="101:13" pos:end="105:44">for <control pos:start="101:17" pos:end="101:47">(<init pos:start="101:18" pos:end="101:23"><expr pos:start="101:18" pos:end="101:22"><name pos:start="101:18" pos:end="101:18">j</name> <operator pos:start="101:20" pos:end="101:20">=</operator> <literal type="number" pos:start="101:22" pos:end="101:22">0</literal></expr>;</init> <condition pos:start="101:25" pos:end="101:42"><expr pos:start="101:25" pos:end="101:41"><name pos:start="101:25" pos:end="101:25">j</name> <operator pos:start="101:27" pos:end="101:27">&lt;</operator> <name pos:start="101:29" pos:end="101:41"><name pos:start="101:29" pos:end="101:29">c</name><operator pos:start="101:30" pos:end="101:31">-&gt;</operator><name pos:start="101:32" pos:end="101:41">nfreqbands</name></name></expr>;</condition> <incr pos:start="101:44" pos:end="101:46"><expr pos:start="101:44" pos:end="101:46"><name pos:start="101:44" pos:end="101:44">j</name><operator pos:start="101:45" pos:end="101:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="103:17" pos:end="105:44"><block_content pos:start="103:17" pos:end="105:44">

                <if_stmt pos:start="103:17" pos:end="105:44"><if pos:start="103:17" pos:end="105:44">if <condition pos:start="103:20" pos:end="103:46">(<expr pos:start="103:21" pos:end="103:45"><name pos:start="103:21" pos:end="103:31"><name pos:start="103:21" pos:end="103:21">c</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:28">bands</name><index pos:start="103:29" pos:end="103:31">[<expr pos:start="103:30" pos:end="103:30"><name pos:start="103:30" pos:end="103:30">j</name></expr>]</index></name><operator pos:start="103:32" pos:end="103:32">.</operator><name pos:start="103:33" pos:end="103:45">dmix_embedded</name></expr>)</condition><block type="pseudo" pos:start="105:21" pos:end="105:44"><block_content pos:start="105:21" pos:end="105:44">

                    <expr_stmt pos:start="105:21" pos:end="105:44"><expr pos:start="105:21" pos:end="105:43"><call pos:start="105:21" pos:end="105:43"><name pos:start="105:21" pos:end="105:34">scale_down_mix</name><argument_list pos:start="105:35" pos:end="105:43">(<argument pos:start="105:36" pos:end="105:36"><expr pos:start="105:36" pos:end="105:36"><name pos:start="105:36" pos:end="105:36">s</name></expr></argument>, <argument pos:start="105:39" pos:end="105:39"><expr pos:start="105:39" pos:end="105:39"><name pos:start="105:39" pos:end="105:39">c</name></expr></argument>, <argument pos:start="105:42" pos:end="105:42"><expr pos:start="105:42" pos:end="105:42"><name pos:start="105:42" pos:end="105:42">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <for pos:start="113:9" pos:end="117:39">for <control pos:start="113:13" pos:end="113:43">(<init pos:start="113:14" pos:end="113:19"><expr pos:start="113:14" pos:end="113:18"><name pos:start="113:14" pos:end="113:14">j</name> <operator pos:start="113:16" pos:end="113:16">=</operator> <literal type="number" pos:start="113:18" pos:end="113:18">0</literal></expr>;</init> <condition pos:start="113:21" pos:end="113:38"><expr pos:start="113:21" pos:end="113:37"><name pos:start="113:21" pos:end="113:21">j</name> <operator pos:start="113:23" pos:end="113:23">&lt;</operator> <name pos:start="113:25" pos:end="113:37"><name pos:start="113:25" pos:end="113:25">c</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:37">nfreqbands</name></name></expr>;</condition> <incr pos:start="113:40" pos:end="113:42"><expr pos:start="113:40" pos:end="113:42"><name pos:start="113:40" pos:end="113:40">j</name><operator pos:start="113:41" pos:end="113:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="115:13" pos:end="117:39"><block_content pos:start="115:13" pos:end="117:39">

            <if_stmt pos:start="115:13" pos:end="117:39"><if pos:start="115:13" pos:end="117:39">if <condition pos:start="115:16" pos:end="115:42">(<expr pos:start="115:17" pos:end="115:41"><name pos:start="115:17" pos:end="115:27"><name pos:start="115:17" pos:end="115:17">c</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:24">bands</name><index pos:start="115:25" pos:end="115:27">[<expr pos:start="115:26" pos:end="115:26"><name pos:start="115:26" pos:end="115:26">j</name></expr>]</index></name><operator pos:start="115:28" pos:end="115:28">.</operator><name pos:start="115:29" pos:end="115:41">dmix_embedded</name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:39"><block_content pos:start="117:17" pos:end="117:39">

                <expr_stmt pos:start="117:17" pos:end="117:39"><expr pos:start="117:17" pos:end="117:38"><call pos:start="117:17" pos:end="117:38"><name pos:start="117:17" pos:end="117:29">undo_down_mix</name><argument_list pos:start="117:30" pos:end="117:38">(<argument pos:start="117:31" pos:end="117:31"><expr pos:start="117:31" pos:end="117:31"><name pos:start="117:31" pos:end="117:31">s</name></expr></argument>, <argument pos:start="117:34" pos:end="117:34"><expr pos:start="117:34" pos:end="117:34"><name pos:start="117:34" pos:end="117:34">c</name></expr></argument>, <argument pos:start="117:37" pos:end="117:37"><expr pos:start="117:37" pos:end="117:37"><name pos:start="117:37" pos:end="117:37">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

    </block_content>}</block></for>



    <comment type="line" pos:start="123:5" pos:end="123:55">// Assemble frequency bands for active channel sets</comment>

    <if_stmt pos:start="125:5" pos:end="133:5"><if pos:start="125:5" pos:end="133:5">if <condition pos:start="125:8" pos:end="125:26">(<expr pos:start="125:9" pos:end="125:25"><name pos:start="125:9" pos:end="125:21"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:21">nfreqbands</name></name> <operator pos:start="125:23" pos:end="125:23">&gt;</operator> <literal type="number" pos:start="125:25" pos:end="125:25">1</literal></expr>)</condition> <block pos:start="125:28" pos:end="133:5">{<block_content pos:start="127:9" pos:end="131:27">

        <for pos:start="127:9" pos:end="131:27">for <control pos:start="127:13" pos:end="127:46">(<init pos:start="127:14" pos:end="127:19"><expr pos:start="127:14" pos:end="127:18"><name pos:start="127:14" pos:end="127:14">i</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <literal type="number" pos:start="127:18" pos:end="127:18">0</literal></expr>;</init> <condition pos:start="127:21" pos:end="127:41"><expr pos:start="127:21" pos:end="127:40"><name pos:start="127:21" pos:end="127:21">i</name> <operator pos:start="127:23" pos:end="127:23">&lt;</operator> <name pos:start="127:25" pos:end="127:40"><name pos:start="127:25" pos:end="127:25">s</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:40">nactivechsets</name></name></expr>;</condition> <incr pos:start="127:43" pos:end="127:45"><expr pos:start="127:43" pos:end="127:45"><name pos:start="127:43" pos:end="127:43">i</name><operator pos:start="127:44" pos:end="127:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="129:13" pos:end="131:27"><block_content pos:start="129:13" pos:end="131:27">

            <if_stmt pos:start="129:13" pos:end="131:27"><if pos:start="129:13" pos:end="131:27">if <condition pos:start="129:16" pos:end="129:69">(<expr pos:start="129:17" pos:end="129:68"><operator pos:start="129:17" pos:end="129:17">(</operator><name pos:start="129:18" pos:end="129:20">ret</name> <operator pos:start="129:22" pos:end="129:22">=</operator> <call pos:start="129:24" pos:end="129:63"><name pos:start="129:24" pos:end="129:46">chs_assemble_freq_bands</name><argument_list pos:start="129:47" pos:end="129:63">(<argument pos:start="129:48" pos:end="129:48"><expr pos:start="129:48" pos:end="129:48"><name pos:start="129:48" pos:end="129:48">s</name></expr></argument>, <argument pos:start="129:51" pos:end="129:62"><expr pos:start="129:51" pos:end="129:62"><operator pos:start="129:51" pos:end="129:51">&amp;</operator><name pos:start="129:52" pos:end="129:62"><name pos:start="129:52" pos:end="129:52">s</name><operator pos:start="129:53" pos:end="129:54">-&gt;</operator><name pos:start="129:55" pos:end="129:59">chset</name><index pos:start="129:60" pos:end="129:62">[<expr pos:start="129:61" pos:end="129:61"><name pos:start="129:61" pos:end="129:61">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="129:64" pos:end="129:64">)</operator> <operator pos:start="129:66" pos:end="129:66">&lt;</operator> <literal type="number" pos:start="129:68" pos:end="129:68">0</literal></expr>)</condition><block type="pseudo" pos:start="131:17" pos:end="131:27"><block_content pos:start="131:17" pos:end="131:27">

                <return pos:start="131:17" pos:end="131:27">return <expr pos:start="131:24" pos:end="131:26"><name pos:start="131:24" pos:end="131:26">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="137:5" pos:end="137:52">// Normalize to regular 5.1 layout if downmixing</comment>

    <if_stmt pos:start="139:5" pos:end="157:5"><if pos:start="139:5" pos:end="157:5">if <condition pos:start="139:8" pos:end="139:36">(<expr pos:start="139:9" pos:end="139:35"><name pos:start="139:9" pos:end="139:35"><name pos:start="139:9" pos:end="139:11">dca</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:35">request_channel_layout</name></name></expr>)</condition> <block pos:start="139:38" pos:end="157:5">{<block_content pos:start="141:9" pos:end="155:9">

        <if_stmt pos:start="141:9" pos:end="147:9"><if pos:start="141:9" pos:end="147:9">if <condition pos:start="141:12" pos:end="141:50">(<expr pos:start="141:13" pos:end="141:49"><name pos:start="141:13" pos:end="141:26"><name pos:start="141:13" pos:end="141:13">s</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:26">output_mask</name></name> <operator pos:start="141:28" pos:end="141:28">&amp;</operator> <name pos:start="141:30" pos:end="141:49">DCA_SPEAKER_MASK_Lss</name></expr>)</condition> <block pos:start="141:52" pos:end="147:9">{<block_content pos:start="143:13" pos:end="145:92">

            <expr_stmt pos:start="143:13" pos:end="143:83"><expr pos:start="143:13" pos:end="143:82"><name pos:start="143:13" pos:end="143:45"><name pos:start="143:13" pos:end="143:13">s</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:29">output_samples</name><index pos:start="143:30" pos:end="143:45">[<expr pos:start="143:31" pos:end="143:44"><name pos:start="143:31" pos:end="143:44">DCA_SPEAKER_Ls</name></expr>]</index></name> <operator pos:start="143:47" pos:end="143:47">=</operator> <name pos:start="143:49" pos:end="143:82"><name pos:start="143:49" pos:end="143:49">s</name><operator pos:start="143:50" pos:end="143:51">-&gt;</operator><name pos:start="143:52" pos:end="143:65">output_samples</name><index pos:start="143:66" pos:end="143:82">[<expr pos:start="143:67" pos:end="143:81"><name pos:start="143:67" pos:end="143:81">DCA_SPEAKER_Lss</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:92"><expr pos:start="145:13" pos:end="145:91"><name pos:start="145:13" pos:end="145:26"><name pos:start="145:13" pos:end="145:13">s</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:26">output_mask</name></name> <operator pos:start="145:28" pos:end="145:28">=</operator> <operator pos:start="145:30" pos:end="145:30">(</operator><name pos:start="145:31" pos:end="145:44"><name pos:start="145:31" pos:end="145:31">s</name><operator pos:start="145:32" pos:end="145:33">-&gt;</operator><name pos:start="145:34" pos:end="145:44">output_mask</name></name> <operator pos:start="145:46" pos:end="145:46">&amp;</operator> <operator pos:start="145:48" pos:end="145:48">~</operator><name pos:start="145:49" pos:end="145:68">DCA_SPEAKER_MASK_Lss</name><operator pos:start="145:69" pos:end="145:69">)</operator> <operator pos:start="145:71" pos:end="145:71">|</operator> <name pos:start="145:73" pos:end="145:91">DCA_SPEAKER_MASK_Ls</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="149:9" pos:end="155:9"><if pos:start="149:9" pos:end="155:9">if <condition pos:start="149:12" pos:end="149:50">(<expr pos:start="149:13" pos:end="149:49"><name pos:start="149:13" pos:end="149:26"><name pos:start="149:13" pos:end="149:13">s</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:26">output_mask</name></name> <operator pos:start="149:28" pos:end="149:28">&amp;</operator> <name pos:start="149:30" pos:end="149:49">DCA_SPEAKER_MASK_Rss</name></expr>)</condition> <block pos:start="149:52" pos:end="155:9">{<block_content pos:start="151:13" pos:end="153:92">

            <expr_stmt pos:start="151:13" pos:end="151:83"><expr pos:start="151:13" pos:end="151:82"><name pos:start="151:13" pos:end="151:45"><name pos:start="151:13" pos:end="151:13">s</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:29">output_samples</name><index pos:start="151:30" pos:end="151:45">[<expr pos:start="151:31" pos:end="151:44"><name pos:start="151:31" pos:end="151:44">DCA_SPEAKER_Rs</name></expr>]</index></name> <operator pos:start="151:47" pos:end="151:47">=</operator> <name pos:start="151:49" pos:end="151:82"><name pos:start="151:49" pos:end="151:49">s</name><operator pos:start="151:50" pos:end="151:51">-&gt;</operator><name pos:start="151:52" pos:end="151:65">output_samples</name><index pos:start="151:66" pos:end="151:82">[<expr pos:start="151:67" pos:end="151:81"><name pos:start="151:67" pos:end="151:81">DCA_SPEAKER_Rss</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:92"><expr pos:start="153:13" pos:end="153:91"><name pos:start="153:13" pos:end="153:26"><name pos:start="153:13" pos:end="153:13">s</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:26">output_mask</name></name> <operator pos:start="153:28" pos:end="153:28">=</operator> <operator pos:start="153:30" pos:end="153:30">(</operator><name pos:start="153:31" pos:end="153:44"><name pos:start="153:31" pos:end="153:31">s</name><operator pos:start="153:32" pos:end="153:33">-&gt;</operator><name pos:start="153:34" pos:end="153:44">output_mask</name></name> <operator pos:start="153:46" pos:end="153:46">&amp;</operator> <operator pos:start="153:48" pos:end="153:48">~</operator><name pos:start="153:49" pos:end="153:68">DCA_SPEAKER_MASK_Rss</name><operator pos:start="153:69" pos:end="153:69">)</operator> <operator pos:start="153:71" pos:end="153:71">|</operator> <name pos:start="153:73" pos:end="153:91">DCA_SPEAKER_MASK_Rs</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="161:5" pos:end="161:42">// Handle downmixing to stereo request</comment>

    <if_stmt pos:start="163:5" pos:end="175:38"><if pos:start="163:5" pos:end="171:49">if <condition pos:start="163:8" pos:end="169:48">(<expr pos:start="163:9" pos:end="169:47"><name pos:start="163:9" pos:end="163:35"><name pos:start="163:9" pos:end="163:11">dca</name><operator pos:start="163:12" pos:end="163:13">-&gt;</operator><name pos:start="163:14" pos:end="163:35">request_channel_layout</name></name> <operator pos:start="163:37" pos:end="163:38">==</operator> <name pos:start="163:40" pos:end="163:64">DCA_SPEAKER_LAYOUT_STEREO</name>

        <operator pos:start="165:9" pos:end="165:10">&amp;&amp;</operator> <call pos:start="165:12" pos:end="165:41"><name pos:start="165:12" pos:end="165:25">DCA_HAS_STEREO</name><argument_list pos:start="165:26" pos:end="165:41">(<argument pos:start="165:27" pos:end="165:40"><expr pos:start="165:27" pos:end="165:40"><name pos:start="165:27" pos:end="165:40"><name pos:start="165:27" pos:end="165:27">s</name><operator pos:start="165:28" pos:end="165:29">-&gt;</operator><name pos:start="165:30" pos:end="165:40">output_mask</name></name></expr></argument>)</argument_list></call> <operator pos:start="165:43" pos:end="165:44">&amp;&amp;</operator> <name pos:start="165:46" pos:end="165:61"><name pos:start="165:46" pos:end="165:46">p</name><operator pos:start="165:47" pos:end="165:48">-&gt;</operator><name pos:start="165:49" pos:end="165:61">dmix_embedded</name></name>

        <operator pos:start="167:9" pos:end="167:10">&amp;&amp;</operator> <operator pos:start="167:12" pos:end="167:12">(</operator><name pos:start="167:13" pos:end="167:24"><name pos:start="167:13" pos:end="167:13">p</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:24">dmix_type</name></name> <operator pos:start="167:26" pos:end="167:27">==</operator> <name pos:start="167:29" pos:end="167:46">DCA_DMIX_TYPE_LoRo</name> <operator pos:start="167:48" pos:end="167:49">||</operator>

            <name pos:start="169:13" pos:end="169:24"><name pos:start="169:13" pos:end="169:13">p</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:24">dmix_type</name></name> <operator pos:start="169:26" pos:end="169:27">==</operator> <name pos:start="169:29" pos:end="169:46">DCA_DMIX_TYPE_LtRt</name><operator pos:start="169:47" pos:end="169:47">)</operator></expr>)</condition><block type="pseudo" pos:start="171:9" pos:end="171:49"><block_content pos:start="171:9" pos:end="171:49">

        <expr_stmt pos:start="171:9" pos:end="171:49"><expr pos:start="171:9" pos:end="171:48"><name pos:start="171:9" pos:end="171:20">request_mask</name> <operator pos:start="171:22" pos:end="171:22">=</operator> <name pos:start="171:24" pos:end="171:48">DCA_SPEAKER_LAYOUT_STEREO</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="173:5" pos:end="175:38">else<block type="pseudo" pos:start="175:9" pos:end="175:38"><block_content pos:start="175:9" pos:end="175:38">

        <expr_stmt pos:start="175:9" pos:end="175:38"><expr pos:start="175:9" pos:end="175:37"><name pos:start="175:9" pos:end="175:20">request_mask</name> <operator pos:start="175:22" pos:end="175:22">=</operator> <name pos:start="175:24" pos:end="175:37"><name pos:start="175:24" pos:end="175:24">s</name><operator pos:start="175:25" pos:end="175:26">-&gt;</operator><name pos:start="175:27" pos:end="175:37">output_mask</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="177:5" pos:end="179:31"><if pos:start="177:5" pos:end="179:31">if <condition pos:start="177:8" pos:end="177:66">(<expr pos:start="177:9" pos:end="177:65"><operator pos:start="177:9" pos:end="177:9">!</operator><call pos:start="177:10" pos:end="177:65"><name pos:start="177:10" pos:end="177:34">ff_dca_set_channel_layout</name><argument_list pos:start="177:35" pos:end="177:65">(<argument pos:start="177:36" pos:end="177:40"><expr pos:start="177:36" pos:end="177:40"><name pos:start="177:36" pos:end="177:40">avctx</name></expr></argument>, <argument pos:start="177:43" pos:end="177:50"><expr pos:start="177:43" pos:end="177:50"><name pos:start="177:43" pos:end="177:50">ch_remap</name></expr></argument>, <argument pos:start="177:53" pos:end="177:64"><expr pos:start="177:53" pos:end="177:64"><name pos:start="177:53" pos:end="177:64">request_mask</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="179:9" pos:end="179:31"><block_content pos:start="179:9" pos:end="179:31">

        <return pos:start="179:9" pos:end="179:31">return <expr pos:start="179:16" pos:end="179:30"><call pos:start="179:16" pos:end="179:30"><name pos:start="179:16" pos:end="179:22">AVERROR</name><argument_list pos:start="179:23" pos:end="179:30">(<argument pos:start="179:24" pos:end="179:29"><expr pos:start="179:24" pos:end="179:29"><name pos:start="179:24" pos:end="179:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:56"><expr pos:start="183:5" pos:end="183:55"><name pos:start="183:5" pos:end="183:22"><name pos:start="183:5" pos:end="183:9">avctx</name><operator pos:start="183:10" pos:end="183:11">-&gt;</operator><name pos:start="183:12" pos:end="183:22">sample_rate</name></name> <operator pos:start="183:24" pos:end="183:24">=</operator> <name pos:start="183:26" pos:end="183:32"><name pos:start="183:26" pos:end="183:26">p</name><operator pos:start="183:27" pos:end="183:28">-&gt;</operator><name pos:start="183:29" pos:end="183:32">freq</name></name> <operator pos:start="183:34" pos:end="183:35">&lt;&lt;</operator> <operator pos:start="183:37" pos:end="183:37">(</operator><name pos:start="183:38" pos:end="183:50"><name pos:start="183:38" pos:end="183:38">s</name><operator pos:start="183:39" pos:end="183:40">-&gt;</operator><name pos:start="183:41" pos:end="183:50">nfreqbands</name></name> <operator pos:start="183:52" pos:end="183:52">-</operator> <literal type="number" pos:start="183:54" pos:end="183:54">1</literal><operator pos:start="183:55" pos:end="183:55">)</operator></expr>;</expr_stmt>



    <switch pos:start="187:5" pos:end="211:5">switch <condition pos:start="187:12" pos:end="187:31">(<expr pos:start="187:13" pos:end="187:30"><name pos:start="187:13" pos:end="187:30"><name pos:start="187:13" pos:end="187:13">p</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:30">storage_bit_res</name></name></expr>)</condition> <block pos:start="187:33" pos:end="211:5">{<block_content pos:start="189:5" pos:end="209:31">

    <case pos:start="189:5" pos:end="189:12">case <expr pos:start="189:10" pos:end="189:11"><literal type="number" pos:start="189:10" pos:end="189:11">16</literal></expr>:</case>

        <expr_stmt pos:start="191:9" pos:end="191:47"><expr pos:start="191:9" pos:end="191:46"><name pos:start="191:9" pos:end="191:25"><name pos:start="191:9" pos:end="191:13">avctx</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:25">sample_fmt</name></name> <operator pos:start="191:27" pos:end="191:27">=</operator> <name pos:start="191:29" pos:end="191:46">AV_SAMPLE_FMT_S16P</name></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:36"><expr pos:start="193:9" pos:end="193:35"><name pos:start="193:9" pos:end="193:13">shift</name> <operator pos:start="193:15" pos:end="193:15">=</operator> <literal type="number" pos:start="193:17" pos:end="193:20">16</literal> <operator pos:start="193:20" pos:end="193:20">-</operator> <name pos:start="193:22" pos:end="193:35"><name pos:start="193:22" pos:end="193:22">p</name><operator pos:start="193:23" pos:end="193:24">-&gt;</operator><name pos:start="193:25" pos:end="193:35">pcm_bit_res</name></name></expr>;</expr_stmt>

        <break pos:start="195:9" pos:end="195:14">break;</break>

    <case pos:start="197:5" pos:end="197:12">case <expr pos:start="197:10" pos:end="197:11"><literal type="number" pos:start="197:10" pos:end="197:11">20</literal></expr>:</case>

    <case pos:start="199:5" pos:end="199:12">case <expr pos:start="199:10" pos:end="199:11"><literal type="number" pos:start="199:10" pos:end="199:11">24</literal></expr>:</case>

        <expr_stmt pos:start="201:9" pos:end="201:47"><expr pos:start="201:9" pos:end="201:46"><name pos:start="201:9" pos:end="201:25"><name pos:start="201:9" pos:end="201:13">avctx</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:25">sample_fmt</name></name> <operator pos:start="201:27" pos:end="201:27">=</operator> <name pos:start="201:29" pos:end="201:46">AV_SAMPLE_FMT_S32P</name></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:36"><expr pos:start="203:9" pos:end="203:35"><name pos:start="203:9" pos:end="203:13">shift</name> <operator pos:start="203:15" pos:end="203:15">=</operator> <literal type="number" pos:start="203:17" pos:end="203:20">24</literal> <operator pos:start="203:20" pos:end="203:20">-</operator> <name pos:start="203:22" pos:end="203:35"><name pos:start="203:22" pos:end="203:22">p</name><operator pos:start="203:23" pos:end="203:24">-&gt;</operator><name pos:start="203:25" pos:end="203:35">pcm_bit_res</name></name></expr>;</expr_stmt>

        <break pos:start="205:9" pos:end="205:14">break;</break>

    <default pos:start="207:5" pos:end="207:12">default:</default>

        <return pos:start="209:9" pos:end="209:31">return <expr pos:start="209:16" pos:end="209:30"><call pos:start="209:16" pos:end="209:30"><name pos:start="209:16" pos:end="209:22">AVERROR</name><argument_list pos:start="209:23" pos:end="209:30">(<argument pos:start="209:24" pos:end="209:29"><expr pos:start="209:24" pos:end="209:29"><name pos:start="209:24" pos:end="209:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="215:5" pos:end="215:52"><expr pos:start="215:5" pos:end="215:51"><name pos:start="215:5" pos:end="215:30"><name pos:start="215:5" pos:end="215:9">avctx</name><operator pos:start="215:10" pos:end="215:11">-&gt;</operator><name pos:start="215:12" pos:end="215:30">bits_per_raw_sample</name></name> <operator pos:start="215:32" pos:end="215:32">=</operator> <name pos:start="215:34" pos:end="215:51"><name pos:start="215:34" pos:end="215:34">p</name><operator pos:start="215:35" pos:end="215:36">-&gt;</operator><name pos:start="215:37" pos:end="215:51">storage_bit_res</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:42"><expr pos:start="217:5" pos:end="217:41"><name pos:start="217:5" pos:end="217:18"><name pos:start="217:5" pos:end="217:9">avctx</name><operator pos:start="217:10" pos:end="217:11">-&gt;</operator><name pos:start="217:12" pos:end="217:18">profile</name></name> <operator pos:start="217:20" pos:end="217:20">=</operator> <name pos:start="217:22" pos:end="217:41">FF_PROFILE_DTS_HD_MA</name></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:24"><expr pos:start="219:5" pos:end="219:23"><name pos:start="219:5" pos:end="219:19"><name pos:start="219:5" pos:end="219:9">avctx</name><operator pos:start="219:10" pos:end="219:11">-&gt;</operator><name pos:start="219:12" pos:end="219:19">bit_rate</name></name> <operator pos:start="219:21" pos:end="219:21">=</operator> <literal type="number" pos:start="219:23" pos:end="219:23">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="223:5" pos:end="223:75"><expr pos:start="223:5" pos:end="223:74"><name pos:start="223:5" pos:end="223:21"><name pos:start="223:5" pos:end="223:9">frame</name><operator pos:start="223:10" pos:end="223:11">-&gt;</operator><name pos:start="223:12" pos:end="223:21">nb_samples</name></name> <operator pos:start="223:23" pos:end="223:23">=</operator> <name pos:start="223:25" pos:end="223:32">nsamples</name> <operator pos:start="223:34" pos:end="223:34">=</operator> <name pos:start="223:36" pos:end="223:51"><name pos:start="223:36" pos:end="223:36">s</name><operator pos:start="223:37" pos:end="223:38">-&gt;</operator><name pos:start="223:39" pos:end="223:51">nframesamples</name></name> <operator pos:start="223:53" pos:end="223:54">&lt;&lt;</operator> <operator pos:start="223:56" pos:end="223:56">(</operator><name pos:start="223:57" pos:end="223:69"><name pos:start="223:57" pos:end="223:57">s</name><operator pos:start="223:58" pos:end="223:59">-&gt;</operator><name pos:start="223:60" pos:end="223:69">nfreqbands</name></name> <operator pos:start="223:71" pos:end="223:71">-</operator> <literal type="number" pos:start="223:73" pos:end="223:73">1</literal><operator pos:start="223:74" pos:end="223:74">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="225:5" pos:end="227:19"><if pos:start="225:5" pos:end="227:19">if <condition pos:start="225:8" pos:end="225:51">(<expr pos:start="225:9" pos:end="225:50"><operator pos:start="225:9" pos:end="225:9">(</operator><name pos:start="225:10" pos:end="225:12">ret</name> <operator pos:start="225:14" pos:end="225:14">=</operator> <call pos:start="225:16" pos:end="225:45"><name pos:start="225:16" pos:end="225:28">ff_get_buffer</name><argument_list pos:start="225:29" pos:end="225:45">(<argument pos:start="225:30" pos:end="225:34"><expr pos:start="225:30" pos:end="225:34"><name pos:start="225:30" pos:end="225:34">avctx</name></expr></argument>, <argument pos:start="225:37" pos:end="225:41"><expr pos:start="225:37" pos:end="225:41"><name pos:start="225:37" pos:end="225:41">frame</name></expr></argument>, <argument pos:start="225:44" pos:end="225:44"><expr pos:start="225:44" pos:end="225:44"><literal type="number" pos:start="225:44" pos:end="225:44">0</literal></expr></argument>)</argument_list></call><operator pos:start="225:46" pos:end="225:46">)</operator> <operator pos:start="225:48" pos:end="225:48">&lt;</operator> <literal type="number" pos:start="225:50" pos:end="225:50">0</literal></expr>)</condition><block type="pseudo" pos:start="227:9" pos:end="227:19"><block_content pos:start="227:9" pos:end="227:19">

        <return pos:start="227:9" pos:end="227:19">return <expr pos:start="227:16" pos:end="227:18"><name pos:start="227:16" pos:end="227:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="231:5" pos:end="231:44">// Downmix primary channel set to stereo</comment>

    <if_stmt pos:start="233:5" pos:end="241:5"><if pos:start="233:5" pos:end="241:5">if <condition pos:start="233:8" pos:end="233:39">(<expr pos:start="233:9" pos:end="233:38"><name pos:start="233:9" pos:end="233:20">request_mask</name> <operator pos:start="233:22" pos:end="233:23">!=</operator> <name pos:start="233:25" pos:end="233:38"><name pos:start="233:25" pos:end="233:25">s</name><operator pos:start="233:26" pos:end="233:27">-&gt;</operator><name pos:start="233:28" pos:end="233:38">output_mask</name></name></expr>)</condition> <block pos:start="233:41" pos:end="241:5">{<block_content pos:start="235:9" pos:end="239:55">

        <expr_stmt pos:start="235:9" pos:end="239:55"><expr pos:start="235:9" pos:end="239:54"><call pos:start="235:9" pos:end="239:54"><name pos:start="235:9" pos:end="235:38">ff_dca_downmix_to_stereo_fixed</name><argument_list pos:start="235:39" pos:end="239:54">(<argument pos:start="235:40" pos:end="235:48"><expr pos:start="235:40" pos:end="235:48"><name pos:start="235:40" pos:end="235:48"><name pos:start="235:40" pos:end="235:40">s</name><operator pos:start="235:41" pos:end="235:42">-&gt;</operator><name pos:start="235:43" pos:end="235:48">dcadsp</name></name></expr></argument>, <argument pos:start="235:51" pos:end="235:67"><expr pos:start="235:51" pos:end="235:67"><name pos:start="235:51" pos:end="235:67"><name pos:start="235:51" pos:end="235:51">s</name><operator pos:start="235:52" pos:end="235:53">-&gt;</operator><name pos:start="235:54" pos:end="235:67">output_samples</name></name></expr></argument>,

                                       <argument pos:start="237:40" pos:end="237:52"><expr pos:start="237:40" pos:end="237:52"><name pos:start="237:40" pos:end="237:52"><name pos:start="237:40" pos:end="237:40">p</name><operator pos:start="237:41" pos:end="237:42">-&gt;</operator><name pos:start="237:43" pos:end="237:52">dmix_coeff</name></name></expr></argument>, <argument pos:start="237:55" pos:end="237:62"><expr pos:start="237:55" pos:end="237:62"><name pos:start="237:55" pos:end="237:62">nsamples</name></expr></argument>,

                                       <argument pos:start="239:40" pos:end="239:53"><expr pos:start="239:40" pos:end="239:53"><name pos:start="239:40" pos:end="239:53"><name pos:start="239:40" pos:end="239:40">s</name><operator pos:start="239:41" pos:end="239:42">-&gt;</operator><name pos:start="239:43" pos:end="239:53">output_mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="245:5" pos:end="267:5">for <control pos:start="245:9" pos:end="245:41">(<init pos:start="245:10" pos:end="245:15"><expr pos:start="245:10" pos:end="245:14"><name pos:start="245:10" pos:end="245:10">i</name> <operator pos:start="245:12" pos:end="245:12">=</operator> <literal type="number" pos:start="245:14" pos:end="245:14">0</literal></expr>;</init> <condition pos:start="245:17" pos:end="245:36"><expr pos:start="245:17" pos:end="245:35"><name pos:start="245:17" pos:end="245:17">i</name> <operator pos:start="245:19" pos:end="245:19">&lt;</operator> <name pos:start="245:21" pos:end="245:35"><name pos:start="245:21" pos:end="245:25">avctx</name><operator pos:start="245:26" pos:end="245:27">-&gt;</operator><name pos:start="245:28" pos:end="245:35">channels</name></name></expr>;</condition> <incr pos:start="245:38" pos:end="245:40"><expr pos:start="245:38" pos:end="245:40"><name pos:start="245:38" pos:end="245:38">i</name><operator pos:start="245:39" pos:end="245:40">++</operator></expr></incr>)</control> <block pos:start="245:43" pos:end="267:5">{<block_content pos:start="247:9" pos:end="265:9">

        <decl_stmt pos:start="247:9" pos:end="247:58"><decl pos:start="247:9" pos:end="247:57"><type pos:start="247:9" pos:end="247:17"><name pos:start="247:9" pos:end="247:15">int32_t</name> <modifier pos:start="247:17" pos:end="247:17">*</modifier></type><name pos:start="247:18" pos:end="247:24">samples</name> <init pos:start="247:26" pos:end="247:57">= <expr pos:start="247:28" pos:end="247:57"><name pos:start="247:28" pos:end="247:57"><name pos:start="247:28" pos:end="247:28">s</name><operator pos:start="247:29" pos:end="247:30">-&gt;</operator><name pos:start="247:31" pos:end="247:44">output_samples</name><index pos:start="247:45" pos:end="247:57">[<expr pos:start="247:46" pos:end="247:56"><name pos:start="247:46" pos:end="247:56"><name pos:start="247:46" pos:end="247:53">ch_remap</name><index pos:start="247:54" pos:end="247:56">[<expr pos:start="247:55" pos:end="247:55"><name pos:start="247:55" pos:end="247:55">i</name></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="249:9" pos:end="265:9"><if pos:start="249:9" pos:end="257:9">if <condition pos:start="249:12" pos:end="249:48">(<expr pos:start="249:13" pos:end="249:47"><name pos:start="249:13" pos:end="249:25"><name pos:start="249:13" pos:end="249:17">frame</name><operator pos:start="249:18" pos:end="249:19">-&gt;</operator><name pos:start="249:20" pos:end="249:25">format</name></name> <operator pos:start="249:27" pos:end="249:28">==</operator> <name pos:start="249:30" pos:end="249:47">AV_SAMPLE_FMT_S16P</name></expr>)</condition> <block pos:start="249:50" pos:end="257:9">{<block_content pos:start="251:13" pos:end="255:68">

            <decl_stmt pos:start="251:13" pos:end="251:64"><decl pos:start="251:13" pos:end="251:63"><type pos:start="251:13" pos:end="251:21"><name pos:start="251:13" pos:end="251:19">int16_t</name> <modifier pos:start="251:21" pos:end="251:21">*</modifier></type><name pos:start="251:22" pos:end="251:26">plane</name> <init pos:start="251:28" pos:end="251:63">= <expr pos:start="251:30" pos:end="251:63"><operator pos:start="251:30" pos:end="251:30">(</operator><name pos:start="251:31" pos:end="251:37">int16_t</name> <operator pos:start="251:39" pos:end="251:39">*</operator><operator pos:start="251:40" pos:end="251:40">)</operator><name pos:start="251:41" pos:end="251:63"><name pos:start="251:41" pos:end="251:45">frame</name><operator pos:start="251:46" pos:end="251:47">-&gt;</operator><name pos:start="251:48" pos:end="251:60">extended_data</name><index pos:start="251:61" pos:end="251:63">[<expr pos:start="251:62" pos:end="251:62"><name pos:start="251:62" pos:end="251:62">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="253:13" pos:end="255:68">for <control pos:start="253:17" pos:end="253:42">(<init pos:start="253:18" pos:end="253:23"><expr pos:start="253:18" pos:end="253:22"><name pos:start="253:18" pos:end="253:18">k</name> <operator pos:start="253:20" pos:end="253:20">=</operator> <literal type="number" pos:start="253:22" pos:end="253:22">0</literal></expr>;</init> <condition pos:start="253:25" pos:end="253:37"><expr pos:start="253:25" pos:end="253:36"><name pos:start="253:25" pos:end="253:25">k</name> <operator pos:start="253:27" pos:end="253:27">&lt;</operator> <name pos:start="253:29" pos:end="253:36">nsamples</name></expr>;</condition> <incr pos:start="253:39" pos:end="253:41"><expr pos:start="253:39" pos:end="253:41"><name pos:start="253:39" pos:end="253:39">k</name><operator pos:start="253:40" pos:end="253:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="255:17" pos:end="255:68"><block_content pos:start="255:17" pos:end="255:68">

                <expr_stmt pos:start="255:17" pos:end="255:68"><expr pos:start="255:17" pos:end="255:67"><name pos:start="255:17" pos:end="255:24"><name pos:start="255:17" pos:end="255:21">plane</name><index pos:start="255:22" pos:end="255:24">[<expr pos:start="255:23" pos:end="255:23"><name pos:start="255:23" pos:end="255:23">k</name></expr>]</index></name> <operator pos:start="255:26" pos:end="255:26">=</operator> <call pos:start="255:28" pos:end="255:67"><name pos:start="255:28" pos:end="255:40">av_clip_int16</name><argument_list pos:start="255:41" pos:end="255:67">(<argument pos:start="255:42" pos:end="255:66"><expr pos:start="255:42" pos:end="255:66"><name pos:start="255:42" pos:end="255:51"><name pos:start="255:42" pos:end="255:48">samples</name><index pos:start="255:49" pos:end="255:51">[<expr pos:start="255:50" pos:end="255:50"><name pos:start="255:50" pos:end="255:50">k</name></expr>]</index></name> <operator pos:start="255:53" pos:end="255:53">*</operator> <operator pos:start="255:55" pos:end="255:55">(</operator><literal type="number" pos:start="255:56" pos:end="255:56">1</literal> <operator pos:start="255:58" pos:end="255:59">&lt;&lt;</operator> <name pos:start="255:61" pos:end="255:65">shift</name><operator pos:start="255:66" pos:end="255:66">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if> <else pos:start="257:11" pos:end="265:9">else <block pos:start="257:16" pos:end="265:9">{<block_content pos:start="259:13" pos:end="263:72">

            <decl_stmt pos:start="259:13" pos:end="259:64"><decl pos:start="259:13" pos:end="259:63"><type pos:start="259:13" pos:end="259:21"><name pos:start="259:13" pos:end="259:19">int32_t</name> <modifier pos:start="259:21" pos:end="259:21">*</modifier></type><name pos:start="259:22" pos:end="259:26">plane</name> <init pos:start="259:28" pos:end="259:63">= <expr pos:start="259:30" pos:end="259:63"><operator pos:start="259:30" pos:end="259:30">(</operator><name pos:start="259:31" pos:end="259:37">int32_t</name> <operator pos:start="259:39" pos:end="259:39">*</operator><operator pos:start="259:40" pos:end="259:40">)</operator><name pos:start="259:41" pos:end="259:63"><name pos:start="259:41" pos:end="259:45">frame</name><operator pos:start="259:46" pos:end="259:47">-&gt;</operator><name pos:start="259:48" pos:end="259:60">extended_data</name><index pos:start="259:61" pos:end="259:63">[<expr pos:start="259:62" pos:end="259:62"><name pos:start="259:62" pos:end="259:62">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="261:13" pos:end="263:72">for <control pos:start="261:17" pos:end="261:42">(<init pos:start="261:18" pos:end="261:23"><expr pos:start="261:18" pos:end="261:22"><name pos:start="261:18" pos:end="261:18">k</name> <operator pos:start="261:20" pos:end="261:20">=</operator> <literal type="number" pos:start="261:22" pos:end="261:22">0</literal></expr>;</init> <condition pos:start="261:25" pos:end="261:37"><expr pos:start="261:25" pos:end="261:36"><name pos:start="261:25" pos:end="261:25">k</name> <operator pos:start="261:27" pos:end="261:27">&lt;</operator> <name pos:start="261:29" pos:end="261:36">nsamples</name></expr>;</condition> <incr pos:start="261:39" pos:end="261:41"><expr pos:start="261:39" pos:end="261:41"><name pos:start="261:39" pos:end="261:39">k</name><operator pos:start="261:40" pos:end="261:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="263:17" pos:end="263:72"><block_content pos:start="263:17" pos:end="263:72">

                <expr_stmt pos:start="263:17" pos:end="263:72"><expr pos:start="263:17" pos:end="263:71"><name pos:start="263:17" pos:end="263:24"><name pos:start="263:17" pos:end="263:21">plane</name><index pos:start="263:22" pos:end="263:24">[<expr pos:start="263:23" pos:end="263:23"><name pos:start="263:23" pos:end="263:23">k</name></expr>]</index></name> <operator pos:start="263:26" pos:end="263:26">=</operator> <call pos:start="263:28" pos:end="263:60"><name pos:start="263:28" pos:end="263:33">clip23</name><argument_list pos:start="263:34" pos:end="263:60">(<argument pos:start="263:35" pos:end="263:59"><expr pos:start="263:35" pos:end="263:59"><name pos:start="263:35" pos:end="263:44"><name pos:start="263:35" pos:end="263:41">samples</name><index pos:start="263:42" pos:end="263:44">[<expr pos:start="263:43" pos:end="263:43"><name pos:start="263:43" pos:end="263:43">k</name></expr>]</index></name> <operator pos:start="263:46" pos:end="263:46">*</operator> <operator pos:start="263:48" pos:end="263:48">(</operator><literal type="number" pos:start="263:49" pos:end="263:49">1</literal> <operator pos:start="263:51" pos:end="263:52">&lt;&lt;</operator> <name pos:start="263:54" pos:end="263:58">shift</name><operator pos:start="263:59" pos:end="263:59">)</operator></expr></argument>)</argument_list></call> <operator pos:start="263:62" pos:end="263:62">*</operator> <operator pos:start="263:64" pos:end="263:64">(</operator><literal type="number" pos:start="263:65" pos:end="263:65">1</literal> <operator pos:start="263:67" pos:end="263:68">&lt;&lt;</operator> <literal type="number" pos:start="263:70" pos:end="263:70">8</literal><operator pos:start="263:71" pos:end="263:71">)</operator></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="271:5" pos:end="285:5"><if pos:start="271:5" pos:end="281:5">if <condition pos:start="271:8" pos:end="271:42">(<expr pos:start="271:9" pos:end="271:41"><operator pos:start="271:9" pos:end="271:9">!</operator><name pos:start="271:10" pos:end="271:41"><name pos:start="271:10" pos:end="271:14">asset</name><operator pos:start="271:15" pos:end="271:16">-&gt;</operator><name pos:start="271:17" pos:end="271:41">one_to_one_map_ch_to_spkr</name></name></expr>)</condition> <block pos:start="271:44" pos:end="281:5">{<block_content pos:start="273:9" pos:end="279:64">

        <if_stmt pos:start="273:9" pos:end="279:64"><if pos:start="273:9" pos:end="275:55">if <condition pos:start="273:12" pos:end="273:61">(<expr pos:start="273:13" pos:end="273:60"><name pos:start="273:13" pos:end="273:38"><name pos:start="273:13" pos:end="273:17">asset</name><operator pos:start="273:18" pos:end="273:19">-&gt;</operator><name pos:start="273:20" pos:end="273:38">representation_type</name></name> <operator pos:start="273:40" pos:end="273:41">==</operator> <name pos:start="273:43" pos:end="273:60">DCA_REPR_TYPE_LtRt</name></expr>)</condition><block type="pseudo" pos:start="275:13" pos:end="275:55"><block_content pos:start="275:13" pos:end="275:55">

            <expr_stmt pos:start="275:13" pos:end="275:55"><expr pos:start="275:13" pos:end="275:54"><name pos:start="275:13" pos:end="275:27">matrix_encoding</name> <operator pos:start="275:29" pos:end="275:29">=</operator> <name pos:start="275:31" pos:end="275:54">AV_MATRIX_ENCODING_DOLBY</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="277:9" pos:end="279:64">else if <condition pos:start="277:17" pos:end="277:66">(<expr pos:start="277:18" pos:end="277:65"><name pos:start="277:18" pos:end="277:43"><name pos:start="277:18" pos:end="277:22">asset</name><operator pos:start="277:23" pos:end="277:24">-&gt;</operator><name pos:start="277:25" pos:end="277:43">representation_type</name></name> <operator pos:start="277:45" pos:end="277:46">==</operator> <name pos:start="277:48" pos:end="277:65">DCA_REPR_TYPE_LhRh</name></expr>)</condition><block type="pseudo" pos:start="279:13" pos:end="279:64"><block_content pos:start="279:13" pos:end="279:64">

            <expr_stmt pos:start="279:13" pos:end="279:64"><expr pos:start="279:13" pos:end="279:63"><name pos:start="279:13" pos:end="279:27">matrix_encoding</name> <operator pos:start="279:29" pos:end="279:29">=</operator> <name pos:start="279:31" pos:end="279:63">AV_MATRIX_ENCODING_DOLBYHEADPHONE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="281:7" pos:end="285:5">else if <condition pos:start="281:15" pos:end="281:84">(<expr pos:start="281:16" pos:end="281:83"><name pos:start="281:16" pos:end="281:27">request_mask</name> <operator pos:start="281:29" pos:end="281:30">!=</operator> <name pos:start="281:32" pos:end="281:45"><name pos:start="281:32" pos:end="281:32">s</name><operator pos:start="281:33" pos:end="281:34">-&gt;</operator><name pos:start="281:35" pos:end="281:45">output_mask</name></name> <operator pos:start="281:47" pos:end="281:48">&amp;&amp;</operator> <name pos:start="281:50" pos:end="281:61"><name pos:start="281:50" pos:end="281:50">p</name><operator pos:start="281:51" pos:end="281:52">-&gt;</operator><name pos:start="281:53" pos:end="281:61">dmix_type</name></name> <operator pos:start="281:63" pos:end="281:64">==</operator> <name pos:start="281:66" pos:end="281:83">DCA_DMIX_TYPE_LtRt</name></expr>)</condition> <block pos:start="281:86" pos:end="285:5">{<block_content pos:start="283:9" pos:end="283:51">

        <expr_stmt pos:start="283:9" pos:end="283:51"><expr pos:start="283:9" pos:end="283:50"><name pos:start="283:9" pos:end="283:23">matrix_encoding</name> <operator pos:start="283:25" pos:end="283:25">=</operator> <name pos:start="283:27" pos:end="283:50">AV_MATRIX_ENCODING_DOLBY</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="287:5" pos:end="289:19"><if pos:start="287:5" pos:end="289:19">if <condition pos:start="287:8" pos:end="287:80">(<expr pos:start="287:9" pos:end="287:79"><operator pos:start="287:9" pos:end="287:9">(</operator><name pos:start="287:10" pos:end="287:12">ret</name> <operator pos:start="287:14" pos:end="287:14">=</operator> <call pos:start="287:16" pos:end="287:74"><name pos:start="287:16" pos:end="287:50">ff_side_data_update_matrix_encoding</name><argument_list pos:start="287:51" pos:end="287:74">(<argument pos:start="287:52" pos:end="287:56"><expr pos:start="287:52" pos:end="287:56"><name pos:start="287:52" pos:end="287:56">frame</name></expr></argument>, <argument pos:start="287:59" pos:end="287:73"><expr pos:start="287:59" pos:end="287:73"><name pos:start="287:59" pos:end="287:73">matrix_encoding</name></expr></argument>)</argument_list></call><operator pos:start="287:75" pos:end="287:75">)</operator> <operator pos:start="287:77" pos:end="287:77">&lt;</operator> <literal type="number" pos:start="287:79" pos:end="287:79">0</literal></expr>)</condition><block type="pseudo" pos:start="289:9" pos:end="289:19"><block_content pos:start="289:9" pos:end="289:19">

        <return pos:start="289:9" pos:end="289:19">return <expr pos:start="289:16" pos:end="289:18"><name pos:start="289:16" pos:end="289:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="293:5" pos:end="293:13">return <expr pos:start="293:12" pos:end="293:12"><literal type="number" pos:start="293:12" pos:end="293:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
