<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22024.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">bad_mode_switch</name><parameter_list pos:start="1:27" pos:end="1:54">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:38">CPUARMState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">env</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:53"><decl pos:start="1:46" pos:end="1:53"><type pos:start="1:46" pos:end="1:53"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:53">mode</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="13:5" pos:end="51:5">

    <comment type="block" pos:start="5:5" pos:end="11:7">/* Return true if it is not valid for us to switch to

     * this CPU mode (ie all the UNPREDICTABLE cases in

     * the ARM ARM CPSRWriteByInstr pseudocode).

     */</comment>

    <switch pos:start="13:5" pos:end="51:5">switch <condition pos:start="13:12" pos:end="13:17">(<expr pos:start="13:13" pos:end="13:16"><name pos:start="13:13" pos:end="13:16">mode</name></expr>)</condition> <block pos:start="13:19" pos:end="51:5">{<block_content pos:start="15:5" pos:end="49:17">

    <case pos:start="15:5" pos:end="15:26">case <expr pos:start="15:10" pos:end="15:25"><name pos:start="15:10" pos:end="15:25">ARM_CPU_MODE_USR</name></expr>:</case>

    <case pos:start="17:5" pos:end="17:26">case <expr pos:start="17:10" pos:end="17:25"><name pos:start="17:10" pos:end="17:25">ARM_CPU_MODE_SYS</name></expr>:</case>

    <case pos:start="19:5" pos:end="19:26">case <expr pos:start="19:10" pos:end="19:25"><name pos:start="19:10" pos:end="19:25">ARM_CPU_MODE_SVC</name></expr>:</case>

    <case pos:start="21:5" pos:end="21:26">case <expr pos:start="21:10" pos:end="21:25"><name pos:start="21:10" pos:end="21:25">ARM_CPU_MODE_ABT</name></expr>:</case>

    <case pos:start="23:5" pos:end="23:26">case <expr pos:start="23:10" pos:end="23:25"><name pos:start="23:10" pos:end="23:25">ARM_CPU_MODE_UND</name></expr>:</case>

    <case pos:start="25:5" pos:end="25:26">case <expr pos:start="25:10" pos:end="25:25"><name pos:start="25:10" pos:end="25:25">ARM_CPU_MODE_IRQ</name></expr>:</case>

    <case pos:start="27:5" pos:end="27:26">case <expr pos:start="27:10" pos:end="27:25"><name pos:start="27:10" pos:end="27:25">ARM_CPU_MODE_FIQ</name></expr>:</case>

        <comment type="block" pos:start="29:9" pos:end="33:11">/* Note that we don't implement the IMPDEF NSACR.RFR which in v7

         * allows FIQ mode to be Secure-only. (In v8 this doesn't exist.)

         */</comment>

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return>

    <case pos:start="37:5" pos:end="37:26">case <expr pos:start="37:10" pos:end="37:25"><name pos:start="37:10" pos:end="37:25">ARM_CPU_MODE_HYP</name></expr>:</case>

        <return pos:start="39:9" pos:end="41:61">return <expr pos:start="39:16" pos:end="41:60"><operator pos:start="39:16" pos:end="39:16">!</operator><call pos:start="39:17" pos:end="39:49"><name pos:start="39:17" pos:end="39:27">arm_feature</name><argument_list pos:start="39:28" pos:end="39:49">(<argument pos:start="39:29" pos:end="39:31"><expr pos:start="39:29" pos:end="39:31"><name pos:start="39:29" pos:end="39:31">env</name></expr></argument>, <argument pos:start="39:34" pos:end="39:48"><expr pos:start="39:34" pos:end="39:48"><name pos:start="39:34" pos:end="39:48">ARM_FEATURE_EL2</name></expr></argument>)</argument_list></call>

            <operator pos:start="41:13" pos:end="41:14">||</operator> <call pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:29">arm_current_el</name><argument_list pos:start="41:30" pos:end="41:34">(<argument pos:start="41:31" pos:end="41:33"><expr pos:start="41:31" pos:end="41:33"><name pos:start="41:31" pos:end="41:33">env</name></expr></argument>)</argument_list></call> <operator pos:start="41:36" pos:end="41:36">&lt;</operator> <literal type="number" pos:start="41:38" pos:end="41:38">2</literal> <operator pos:start="41:40" pos:end="41:41">||</operator> <call pos:start="41:43" pos:end="41:60"><name pos:start="41:43" pos:end="41:55">arm_is_secure</name><argument_list pos:start="41:56" pos:end="41:60">(<argument pos:start="41:57" pos:end="41:59"><expr pos:start="41:57" pos:end="41:59"><name pos:start="41:57" pos:end="41:59">env</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="43:5" pos:end="43:26">case <expr pos:start="43:10" pos:end="43:25"><name pos:start="43:10" pos:end="43:25">ARM_CPU_MODE_MON</name></expr>:</case>

        <return pos:start="45:9" pos:end="45:35">return <expr pos:start="45:16" pos:end="45:34"><operator pos:start="45:16" pos:end="45:16">!</operator><call pos:start="45:17" pos:end="45:34"><name pos:start="45:17" pos:end="45:29">arm_is_secure</name><argument_list pos:start="45:30" pos:end="45:34">(<argument pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:33">env</name></expr></argument>)</argument_list></call></expr>;</return>

    <default pos:start="47:5" pos:end="47:12">default:</default>

        <return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">1</literal></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
