<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3481.c" pos:tabs="8"><function pos:start="1:1" pos:end="218:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">poll_filters</name><parameter_list pos:start="1:24" pos:end="1:29">(<parameter pos:start="1:25" pos:end="1:28"><decl pos:start="1:25" pos:end="1:28"><type pos:start="1:25" pos:end="1:28"><name pos:start="1:25" pos:end="1:28">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="218:1">{<block_content pos:start="5:5" pos:end="216:61">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">AVFilterBufferRef</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:29">picref</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:27">filtered_frame</name> <init pos:start="7:29" pos:end="7:34">= <expr pos:start="7:31" pos:end="7:34"><name pos:start="7:31" pos:end="7:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">ret</name></decl>, <decl pos:start="9:17" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:23">ret_all</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:23">nb_success</name></decl>, <decl pos:start="11:26" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:26" pos:end="11:31">nb_eof</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:21">frame_pts</name></decl>;</decl_stmt>



    <while pos:start="17:5" pos:end="214:5">while <condition pos:start="17:11" pos:end="17:13">(<expr pos:start="17:12" pos:end="17:12"><literal type="number" pos:start="17:12" pos:end="17:12">1</literal></expr>)</condition> <block pos:start="17:15" pos:end="214:5">{<block_content pos:start="21:9" pos:end="210:18">

        <comment type="block" pos:start="19:9" pos:end="19:58">/* Reap all buffers present in the buffer sinks */</comment>

        <for pos:start="21:9" pos:end="174:9">for <control pos:start="21:13" pos:end="21:47">(<init pos:start="21:14" pos:end="21:19"><expr pos:start="21:14" pos:end="21:18"><name pos:start="21:14" pos:end="21:14">i</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>;</init> <condition pos:start="21:21" pos:end="21:42"><expr pos:start="21:21" pos:end="21:41"><name pos:start="21:21" pos:end="21:21">i</name> <operator pos:start="21:23" pos:end="21:23">&lt;</operator> <name pos:start="21:25" pos:end="21:41">nb_output_streams</name></expr>;</condition> <incr pos:start="21:44" pos:end="21:46"><expr pos:start="21:44" pos:end="21:46"><name pos:start="21:44" pos:end="21:44">i</name><operator pos:start="21:45" pos:end="21:46">++</operator></expr></incr>)</control> <block pos:start="21:49" pos:end="174:9">{<block_content pos:start="23:13" pos:end="172:13">

            <decl_stmt pos:start="23:13" pos:end="23:50"><decl pos:start="23:13" pos:end="23:49"><type pos:start="23:13" pos:end="23:26"><name pos:start="23:13" pos:end="23:24">OutputStream</name> <modifier pos:start="23:26" pos:end="23:26">*</modifier></type><name pos:start="23:27" pos:end="23:29">ost</name> <init pos:start="23:31" pos:end="23:49">= <expr pos:start="23:33" pos:end="23:49"><name pos:start="23:33" pos:end="23:49"><name pos:start="23:33" pos:end="23:46">output_streams</name><index pos:start="23:47" pos:end="23:49">[<expr pos:start="23:48" pos:end="23:48"><name pos:start="23:48" pos:end="23:48">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="25:13" pos:end="25:62"><decl pos:start="25:13" pos:end="25:61"><type pos:start="25:13" pos:end="25:27"><name pos:start="25:13" pos:end="25:22">OutputFile</name>    <modifier pos:start="25:27" pos:end="25:27">*</modifier></type><name pos:start="25:28" pos:end="25:29">of</name> <init pos:start="25:31" pos:end="25:61">= <expr pos:start="25:33" pos:end="25:61"><name pos:start="25:33" pos:end="25:61"><name pos:start="25:33" pos:end="25:44">output_files</name><index pos:start="25:45" pos:end="25:61">[<expr pos:start="25:46" pos:end="25:60"><name pos:start="25:46" pos:end="25:60"><name pos:start="25:46" pos:end="25:48">ost</name><operator pos:start="25:49" pos:end="25:50">-&gt;</operator><name pos:start="25:51" pos:end="25:60">file_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="27:13" pos:end="27:24"><decl pos:start="27:13" pos:end="27:23"><type pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">int</name></type> <name pos:start="27:17" pos:end="27:19">ret</name> <init pos:start="27:21" pos:end="27:23">= <expr pos:start="27:23" pos:end="27:23"><literal type="number" pos:start="27:23" pos:end="27:23">0</literal></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="31:13" pos:end="33:25"><if pos:start="31:13" pos:end="33:25">if <condition pos:start="31:16" pos:end="31:60">(<expr pos:start="31:17" pos:end="31:59"><operator pos:start="31:17" pos:end="31:17">!</operator><name pos:start="31:18" pos:end="31:28"><name pos:start="31:18" pos:end="31:20">ost</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:28">filter</name></name> <operator pos:start="31:30" pos:end="31:31">||</operator> <name pos:start="31:33" pos:end="31:59"><name pos:start="31:33" pos:end="31:35">ost</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:59">is_past_recording_time</name></name></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:25"><block_content pos:start="33:17" pos:end="33:25">

                <continue pos:start="33:17" pos:end="33:25">continue;</continue></block_content></block></if></if_stmt>



            <if_stmt pos:start="37:13" pos:end="43:64"><if pos:start="37:13" pos:end="41:13">if <condition pos:start="37:16" pos:end="37:87">(<expr pos:start="37:17" pos:end="37:86"><operator pos:start="37:17" pos:end="37:17">!</operator><name pos:start="37:18" pos:end="37:36"><name pos:start="37:18" pos:end="37:20">ost</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:36">filtered_frame</name></name> <operator pos:start="37:38" pos:end="37:39">&amp;&amp;</operator> <operator pos:start="37:41" pos:end="37:41">!</operator><operator pos:start="37:42" pos:end="37:42">(</operator><name pos:start="37:43" pos:end="37:61"><name pos:start="37:43" pos:end="37:45">ost</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:61">filtered_frame</name></name> <operator pos:start="37:63" pos:end="37:63">=</operator> <call pos:start="37:65" pos:end="37:85"><name pos:start="37:65" pos:end="37:83">avcodec_alloc_frame</name><argument_list pos:start="37:84" pos:end="37:85">()</argument_list></call><operator pos:start="37:86" pos:end="37:86">)</operator></expr>)</condition> <block pos:start="37:89" pos:end="41:13">{<block_content pos:start="39:17" pos:end="39:39">

                <return pos:start="39:17" pos:end="39:39">return <expr pos:start="39:24" pos:end="39:38"><call pos:start="39:24" pos:end="39:38"><name pos:start="39:24" pos:end="39:30">AVERROR</name><argument_list pos:start="39:31" pos:end="39:38">(<argument pos:start="39:32" pos:end="39:37"><expr pos:start="39:32" pos:end="39:37"><name pos:start="39:32" pos:end="39:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if> <else pos:start="41:15" pos:end="43:64">else<block type="pseudo" pos:start="43:17" pos:end="43:64"><block_content pos:start="43:17" pos:end="43:64">

                <expr_stmt pos:start="43:17" pos:end="43:64"><expr pos:start="43:17" pos:end="43:63"><call pos:start="43:17" pos:end="43:63"><name pos:start="43:17" pos:end="43:42">avcodec_get_frame_defaults</name><argument_list pos:start="43:43" pos:end="43:63">(<argument pos:start="43:44" pos:end="43:62"><expr pos:start="43:44" pos:end="43:62"><name pos:start="43:44" pos:end="43:62"><name pos:start="43:44" pos:end="43:46">ost</name><operator pos:start="43:47" pos:end="43:48">-&gt;</operator><name pos:start="43:49" pos:end="43:62">filtered_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:49"><expr pos:start="45:13" pos:end="45:48"><name pos:start="45:13" pos:end="45:26">filtered_frame</name> <operator pos:start="45:28" pos:end="45:28">=</operator> <name pos:start="45:30" pos:end="45:48"><name pos:start="45:30" pos:end="45:32">ost</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:48">filtered_frame</name></name></expr>;</expr_stmt>



            <while pos:start="49:13" pos:end="172:13">while <condition pos:start="49:19" pos:end="49:21">(<expr pos:start="49:20" pos:end="49:20"><literal type="number" pos:start="49:20" pos:end="49:20">1</literal></expr>)</condition> <block pos:start="49:23" pos:end="172:13">{<block_content pos:start="51:17" pos:end="170:46">

                <decl_stmt pos:start="51:17" pos:end="51:82"><decl pos:start="51:17" pos:end="51:81"><type pos:start="51:17" pos:end="51:26"><name pos:start="51:17" pos:end="51:26">AVRational</name></type> <name pos:start="51:28" pos:end="51:37">ist_pts_tb</name> <init pos:start="51:39" pos:end="51:81">= <expr pos:start="51:41" pos:end="51:81"><name pos:start="51:41" pos:end="51:70"><name pos:start="51:41" pos:end="51:43">ost</name><operator pos:start="51:44" pos:end="51:45">-&gt;</operator><name pos:start="51:46" pos:end="51:51">filter</name><operator pos:start="51:52" pos:end="51:53">-&gt;</operator><name pos:start="51:54" pos:end="51:59">filter</name><operator pos:start="51:60" pos:end="51:61">-&gt;</operator><name pos:start="51:62" pos:end="51:67">inputs</name><index pos:start="51:68" pos:end="51:70">[<expr pos:start="51:69" pos:end="51:69"><literal type="number" pos:start="51:69" pos:end="51:69">0</literal></expr>]</index></name><operator pos:start="51:71" pos:end="51:72">-&gt;</operator><name pos:start="51:73" pos:end="51:81">time_base</name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="53:17" pos:end="68:0"><if pos:start="53:17" pos:end="59:80">if <condition pos:start="53:20" pos:end="55:78">(<expr pos:start="53:21" pos:end="55:77"><name pos:start="53:21" pos:end="53:34"><name pos:start="53:21" pos:end="53:23">ost</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:28">enc</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:34">type</name></name> <operator pos:start="53:36" pos:end="53:37">==</operator> <name pos:start="53:39" pos:end="53:56">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="53:58" pos:end="53:59">&amp;&amp;</operator>

                    <operator pos:start="55:21" pos:end="55:21">!</operator><operator pos:start="55:22" pos:end="55:22">(</operator><name pos:start="55:23" pos:end="55:44"><name pos:start="55:23" pos:end="55:25">ost</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:30">enc</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:44">capabilities</name></name> <operator pos:start="55:46" pos:end="55:46">&amp;</operator> <name pos:start="55:48" pos:end="55:76">CODEC_CAP_VARIABLE_FRAME_SIZE</name><operator pos:start="55:77" pos:end="55:77">)</operator></expr>)</condition><block type="pseudo" pos:start="57:21" pos:end="59:80"><block_content pos:start="57:21" pos:end="59:80">

                    <expr_stmt pos:start="57:21" pos:end="59:80"><expr pos:start="57:21" pos:end="59:79"><name pos:start="57:21" pos:end="57:23">ret</name> <operator pos:start="57:25" pos:end="57:25">=</operator> <call pos:start="57:27" pos:end="59:79"><name pos:start="57:27" pos:end="57:52">av_buffersink_read_samples</name><argument_list pos:start="57:53" pos:end="59:79">(<argument pos:start="57:54" pos:end="57:72"><expr pos:start="57:54" pos:end="57:72"><name pos:start="57:54" pos:end="57:72"><name pos:start="57:54" pos:end="57:56">ost</name><operator pos:start="57:57" pos:end="57:58">-&gt;</operator><name pos:start="57:59" pos:end="57:64">filter</name><operator pos:start="57:65" pos:end="57:66">-&gt;</operator><name pos:start="57:67" pos:end="57:72">filter</name></name></expr></argument>, <argument pos:start="57:75" pos:end="57:81"><expr pos:start="57:75" pos:end="57:81"><operator pos:start="57:75" pos:end="57:75">&amp;</operator><name pos:start="57:76" pos:end="57:81">picref</name></expr></argument>,

                                                    <argument pos:start="59:53" pos:end="59:78"><expr pos:start="59:53" pos:end="59:78"><name pos:start="59:53" pos:end="59:78"><name pos:start="59:53" pos:end="59:55">ost</name><operator pos:start="59:56" pos:end="59:57">-&gt;</operator><name pos:start="59:58" pos:end="59:59">st</name><operator pos:start="59:60" pos:end="59:61">-&gt;</operator><name pos:start="59:62" pos:end="59:66">codec</name><operator pos:start="59:67" pos:end="59:68">-&gt;</operator><name pos:start="59:69" pos:end="59:78">frame_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="61:17" pos:end="68:0">else<block type="pseudo" pos:start="65:21" pos:end="68:0"><block_content pos:start="65:21" pos:end="68:0">

<cpp:ifdef pos:start="63:1" pos:end="63:12">#<cpp:directive pos:start="63:2" pos:end="63:6">ifdef</cpp:directive> <name pos:start="63:8" pos:end="63:12">SINKA</name></cpp:ifdef>

                    <expr_stmt pos:start="65:21" pos:end="68:0"><expr pos:start="65:21" pos:end="65:74"><name pos:start="65:21" pos:end="65:23">ret</name> <operator pos:start="65:25" pos:end="65:25">=</operator> <call pos:start="65:27" pos:end="65:74"><name pos:start="65:27" pos:end="65:44">av_buffersink_read</name><argument_list pos:start="65:45" pos:end="65:74">(<argument pos:start="65:46" pos:end="65:64"><expr pos:start="65:46" pos:end="65:64"><name pos:start="65:46" pos:end="65:64"><name pos:start="65:46" pos:end="65:48">ost</name><operator pos:start="65:49" pos:end="65:50">-&gt;</operator><name pos:start="65:51" pos:end="65:56">filter</name><operator pos:start="65:57" pos:end="65:58">-&gt;</operator><name pos:start="65:59" pos:end="65:64">filter</name></name></expr></argument>, <argument pos:start="65:67" pos:end="65:73"><expr pos:start="65:67" pos:end="65:73"><operator pos:start="65:67" pos:end="65:67">&amp;</operator><name pos:start="65:68" pos:end="65:73">picref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:else pos:start="67:1" pos:end="67:5">#<cpp:directive pos:start="67:2" pos:end="67:5">else</cpp:directive></cpp:else>

                    <expr_stmt pos:start="69:21" pos:end="74:0"><expr pos:start="69:21" pos:end="71:85"><name pos:start="69:21" pos:end="69:23">ret</name> <operator pos:start="69:25" pos:end="69:25">=</operator> <call pos:start="69:27" pos:end="71:85"><name pos:start="69:27" pos:end="69:54">av_buffersink_get_buffer_ref</name><argument_list pos:start="69:55" pos:end="71:85">(<argument pos:start="69:56" pos:end="69:74"><expr pos:start="69:56" pos:end="69:74"><name pos:start="69:56" pos:end="69:74"><name pos:start="69:56" pos:end="69:58">ost</name><operator pos:start="69:59" pos:end="69:60">-&gt;</operator><name pos:start="69:61" pos:end="69:66">filter</name><operator pos:start="69:67" pos:end="69:68">-&gt;</operator><name pos:start="69:69" pos:end="69:74">filter</name></name></expr></argument>, <argument pos:start="69:77" pos:end="69:83"><expr pos:start="69:77" pos:end="69:83"><operator pos:start="69:77" pos:end="69:77">&amp;</operator><name pos:start="69:78" pos:end="69:83">picref</name></expr></argument>,

                                                       <argument pos:start="71:56" pos:end="71:84"><expr pos:start="71:56" pos:end="71:84"><name pos:start="71:56" pos:end="71:84">AV_BUFFERSINK_FLAG_NO_REQUEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="73:1" pos:end="73:6">#<cpp:directive pos:start="73:2" pos:end="73:6">endif</cpp:directive></cpp:endif>

                <if_stmt pos:start="75:17" pos:end="91:17"><if pos:start="75:17" pos:end="91:17">if <condition pos:start="75:20" pos:end="75:28">(<expr pos:start="75:21" pos:end="75:27"><name pos:start="75:21" pos:end="75:23">ret</name> <operator pos:start="75:25" pos:end="75:25">&lt;</operator> <literal type="number" pos:start="75:27" pos:end="75:27">0</literal></expr>)</condition> <block pos:start="75:30" pos:end="91:17">{<block_content pos:start="77:21" pos:end="89:26">

                    <if_stmt pos:start="77:21" pos:end="87:21"><if pos:start="77:21" pos:end="87:21">if <condition pos:start="77:24" pos:end="77:69">(<expr pos:start="77:25" pos:end="77:68"><name pos:start="77:25" pos:end="77:27">ret</name> <operator pos:start="77:29" pos:end="77:30">!=</operator> <call pos:start="77:32" pos:end="77:46"><name pos:start="77:32" pos:end="77:38">AVERROR</name><argument_list pos:start="77:39" pos:end="77:46">(<argument pos:start="77:40" pos:end="77:45"><expr pos:start="77:40" pos:end="77:45"><name pos:start="77:40" pos:end="77:45">EAGAIN</name></expr></argument>)</argument_list></call> <operator pos:start="77:48" pos:end="77:49">&amp;&amp;</operator> <name pos:start="77:51" pos:end="77:53">ret</name> <operator pos:start="77:55" pos:end="77:56">!=</operator> <name pos:start="77:58" pos:end="77:68">AVERROR_EOF</name></expr>)</condition> <block pos:start="77:71" pos:end="87:21">{<block_content pos:start="79:25" pos:end="85:85">

                        <decl_stmt pos:start="79:25" pos:end="79:38"><decl pos:start="79:25" pos:end="79:37"><type pos:start="79:25" pos:end="79:28"><name pos:start="79:25" pos:end="79:28">char</name></type> <name pos:start="79:30" pos:end="79:37"><name pos:start="79:30" pos:end="79:32">buf</name><index pos:start="79:33" pos:end="79:37">[<expr pos:start="79:34" pos:end="79:36"><literal type="number" pos:start="79:34" pos:end="79:36">256</literal></expr>]</index></name></decl>;</decl_stmt>

                        <expr_stmt pos:start="81:25" pos:end="81:59"><expr pos:start="81:25" pos:end="81:58"><call pos:start="81:25" pos:end="81:58"><name pos:start="81:25" pos:end="81:35">av_strerror</name><argument_list pos:start="81:36" pos:end="81:58">(<argument pos:start="81:37" pos:end="81:39"><expr pos:start="81:37" pos:end="81:39"><name pos:start="81:37" pos:end="81:39">ret</name></expr></argument>, <argument pos:start="81:42" pos:end="81:44"><expr pos:start="81:42" pos:end="81:44"><name pos:start="81:42" pos:end="81:44">buf</name></expr></argument>, <argument pos:start="81:47" pos:end="81:57"><expr pos:start="81:47" pos:end="81:57"><sizeof pos:start="81:47" pos:end="81:57">sizeof<argument_list pos:start="81:53" pos:end="81:57">(<argument pos:start="81:54" pos:end="81:56"><expr pos:start="81:54" pos:end="81:56"><name pos:start="81:54" pos:end="81:56">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="83:25" pos:end="85:85"><expr pos:start="83:25" pos:end="85:84"><call pos:start="83:25" pos:end="85:84"><name pos:start="83:25" pos:end="83:30">av_log</name><argument_list pos:start="83:31" pos:end="85:84">(<argument pos:start="83:32" pos:end="83:35"><expr pos:start="83:32" pos:end="83:35"><name pos:start="83:32" pos:end="83:35">NULL</name></expr></argument>, <argument pos:start="83:38" pos:end="83:51"><expr pos:start="83:38" pos:end="83:51"><name pos:start="83:38" pos:end="83:51">AV_LOG_WARNING</name></expr></argument>,

                               <argument pos:start="85:32" pos:end="85:78"><expr pos:start="85:32" pos:end="85:78"><literal type="string" pos:start="85:32" pos:end="85:78">"Error in av_buffersink_get_buffer_ref(): %s\n"</literal></expr></argument>, <argument pos:start="85:81" pos:end="85:83"><expr pos:start="85:81" pos:end="85:83"><name pos:start="85:81" pos:end="85:83">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <break pos:start="89:21" pos:end="89:26">break;</break>

                </block_content>}</block></if></if_stmt>


                <if_stmt pos:start="94:17" pos:end="110:79"><if pos:start="94:17" pos:end="96:108">if <condition pos:start="94:20" pos:end="94:57">(<expr pos:start="94:21" pos:end="94:56"><name pos:start="94:21" pos:end="94:34"><name pos:start="94:21" pos:end="94:23">ost</name><operator pos:start="94:24" pos:end="94:25">-&gt;</operator><name pos:start="94:26" pos:end="94:28">enc</name><operator pos:start="94:29" pos:end="94:30">-&gt;</operator><name pos:start="94:31" pos:end="94:34">type</name></name> <operator pos:start="94:36" pos:end="94:37">==</operator> <name pos:start="94:39" pos:end="94:56">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="96:21" pos:end="96:108"><block_content pos:start="96:21" pos:end="96:108">

                    <expr_stmt pos:start="96:21" pos:end="96:108"><expr pos:start="96:21" pos:end="96:107"><name pos:start="96:21" pos:end="96:39"><name pos:start="96:21" pos:end="96:34">filtered_frame</name><operator pos:start="96:35" pos:end="96:36">-&gt;</operator><name pos:start="96:37" pos:end="96:39">pts</name></name> <operator pos:start="96:41" pos:end="96:41">=</operator> <name pos:start="96:43" pos:end="96:51">frame_pts</name> <operator pos:start="96:53" pos:end="96:53">=</operator> <call pos:start="96:55" pos:end="96:107"><name pos:start="96:55" pos:end="96:66">av_rescale_q</name><argument_list pos:start="96:67" pos:end="96:107">(<argument pos:start="96:68" pos:end="96:78"><expr pos:start="96:68" pos:end="96:78"><name pos:start="96:68" pos:end="96:78"><name pos:start="96:68" pos:end="96:73">picref</name><operator pos:start="96:74" pos:end="96:75">-&gt;</operator><name pos:start="96:76" pos:end="96:78">pts</name></name></expr></argument>, <argument pos:start="96:81" pos:end="96:90"><expr pos:start="96:81" pos:end="96:90"><name pos:start="96:81" pos:end="96:90">ist_pts_tb</name></expr></argument>, <argument pos:start="96:93" pos:end="96:106"><expr pos:start="96:93" pos:end="96:106"><name pos:start="96:93" pos:end="96:106">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="98:17" pos:end="110:79">else if <condition pos:start="98:25" pos:end="98:55">(<expr pos:start="98:26" pos:end="98:54"><name pos:start="98:26" pos:end="98:36"><name pos:start="98:26" pos:end="98:31">picref</name><operator pos:start="98:32" pos:end="98:33">-&gt;</operator><name pos:start="98:34" pos:end="98:36">pts</name></name> <operator pos:start="98:38" pos:end="98:39">!=</operator> <name pos:start="98:41" pos:end="98:54">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="100:21" pos:end="110:79"><block_content pos:start="100:21" pos:end="110:79">

                    <expr_stmt pos:start="100:21" pos:end="110:79"><expr pos:start="100:21" pos:end="110:78"><name pos:start="100:21" pos:end="100:39"><name pos:start="100:21" pos:end="100:34">filtered_frame</name><operator pos:start="100:35" pos:end="100:36">-&gt;</operator><name pos:start="100:37" pos:end="100:39">pts</name></name> <operator pos:start="100:41" pos:end="100:41">=</operator> <name pos:start="100:43" pos:end="100:51">frame_pts</name> <operator pos:start="100:53" pos:end="100:53">=</operator> <call pos:start="100:55" pos:end="104:78"><name pos:start="100:55" pos:end="100:66">av_rescale_q</name><argument_list pos:start="100:67" pos:end="104:78">(<argument pos:start="100:68" pos:end="100:78"><expr pos:start="100:68" pos:end="100:78"><name pos:start="100:68" pos:end="100:78"><name pos:start="100:68" pos:end="100:73">picref</name><operator pos:start="100:74" pos:end="100:75">-&gt;</operator><name pos:start="100:76" pos:end="100:78">pts</name></name></expr></argument>,

                                                    <argument pos:start="102:53" pos:end="102:93"><expr pos:start="102:53" pos:end="102:93"><name pos:start="102:53" pos:end="102:82"><name pos:start="102:53" pos:end="102:55">ost</name><operator pos:start="102:56" pos:end="102:57">-&gt;</operator><name pos:start="102:58" pos:end="102:63">filter</name><operator pos:start="102:64" pos:end="102:65">-&gt;</operator><name pos:start="102:66" pos:end="102:71">filter</name><operator pos:start="102:72" pos:end="102:73">-&gt;</operator><name pos:start="102:74" pos:end="102:79">inputs</name><index pos:start="102:80" pos:end="102:82">[<expr pos:start="102:81" pos:end="102:81"><literal type="number" pos:start="102:81" pos:end="102:81">0</literal></expr>]</index></name><operator pos:start="102:83" pos:end="102:84">-&gt;</operator><name pos:start="102:85" pos:end="102:93">time_base</name></expr></argument>,

                                                    <argument pos:start="104:53" pos:end="104:77"><expr pos:start="104:53" pos:end="104:77"><name pos:start="104:53" pos:end="104:77"><name pos:start="104:53" pos:end="104:55">ost</name><operator pos:start="104:56" pos:end="104:57">-&gt;</operator><name pos:start="104:58" pos:end="104:59">st</name><operator pos:start="104:60" pos:end="104:61">-&gt;</operator><name pos:start="104:62" pos:end="104:66">codec</name><operator pos:start="104:67" pos:end="104:68">-&gt;</operator><name pos:start="104:69" pos:end="104:77">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="104:80" pos:end="104:80">-</operator>

                                        <call pos:start="106:41" pos:end="110:78"><name pos:start="106:41" pos:end="106:52">av_rescale_q</name><argument_list pos:start="106:53" pos:end="110:78">(<argument pos:start="106:54" pos:end="106:67"><expr pos:start="106:54" pos:end="106:67"><name pos:start="106:54" pos:end="106:67"><name pos:start="106:54" pos:end="106:55">of</name><operator pos:start="106:56" pos:end="106:57">-&gt;</operator><name pos:start="106:58" pos:end="106:67">start_time</name></name></expr></argument>,

                                                    <argument pos:start="108:53" pos:end="108:66"><expr pos:start="108:53" pos:end="108:66"><name pos:start="108:53" pos:end="108:66">AV_TIME_BASE_Q</name></expr></argument>,

                                                    <argument pos:start="110:53" pos:end="110:77"><expr pos:start="110:53" pos:end="110:77"><name pos:start="110:53" pos:end="110:77"><name pos:start="110:53" pos:end="110:55">ost</name><operator pos:start="110:56" pos:end="110:57">-&gt;</operator><name pos:start="110:58" pos:end="110:59">st</name><operator pos:start="110:60" pos:end="110:61">-&gt;</operator><name pos:start="110:62" pos:end="110:66">codec</name><operator pos:start="110:67" pos:end="110:68">-&gt;</operator><name pos:start="110:69" pos:end="110:77">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <comment type="line" pos:start="112:17" pos:end="112:45">//if (ost-&gt;source_index &gt;= 0)</comment>

                <comment type="line" pos:start="114:17" pos:end="114:107">//    *filtered_frame= *input_streams[ost-&gt;source_index]-&gt;decoded_frame; //for me_threshold</comment>



                <if_stmt pos:start="118:17" pos:end="124:17"><if pos:start="118:17" pos:end="124:17">if <condition pos:start="118:20" pos:end="118:75">(<expr pos:start="118:21" pos:end="118:74"><name pos:start="118:21" pos:end="118:34"><name pos:start="118:21" pos:end="118:22">of</name><operator pos:start="118:23" pos:end="118:24">-&gt;</operator><name pos:start="118:25" pos:end="118:34">start_time</name></name> <operator pos:start="118:36" pos:end="118:37">&amp;&amp;</operator> <name pos:start="118:39" pos:end="118:57"><name pos:start="118:39" pos:end="118:52">filtered_frame</name><operator pos:start="118:53" pos:end="118:54">-&gt;</operator><name pos:start="118:55" pos:end="118:57">pts</name></name> <operator pos:start="118:59" pos:end="118:59">&lt;</operator> <name pos:start="118:61" pos:end="118:74"><name pos:start="118:61" pos:end="118:62">of</name><operator pos:start="118:63" pos:end="118:64">-&gt;</operator><name pos:start="118:65" pos:end="118:74">start_time</name></name></expr>)</condition> <block pos:start="118:77" pos:end="124:17">{<block_content pos:start="120:21" pos:end="122:29">

                    <expr_stmt pos:start="120:21" pos:end="120:50"><expr pos:start="120:21" pos:end="120:49"><call pos:start="120:21" pos:end="120:49"><name pos:start="120:21" pos:end="120:41">avfilter_unref_buffer</name><argument_list pos:start="120:42" pos:end="120:49">(<argument pos:start="120:43" pos:end="120:48"><expr pos:start="120:43" pos:end="120:48"><name pos:start="120:43" pos:end="120:48">picref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <continue pos:start="122:21" pos:end="122:29">continue;</continue>

                </block_content>}</block></if></if_stmt>



                <switch pos:start="128:17" pos:end="166:17">switch <condition pos:start="128:24" pos:end="128:61">(<expr pos:start="128:25" pos:end="128:60"><name pos:start="128:25" pos:end="128:54"><name pos:start="128:25" pos:end="128:27">ost</name><operator pos:start="128:28" pos:end="128:29">-&gt;</operator><name pos:start="128:30" pos:end="128:35">filter</name><operator pos:start="128:36" pos:end="128:37">-&gt;</operator><name pos:start="128:38" pos:end="128:43">filter</name><operator pos:start="128:44" pos:end="128:45">-&gt;</operator><name pos:start="128:46" pos:end="128:51">inputs</name><index pos:start="128:52" pos:end="128:54">[<expr pos:start="128:53" pos:end="128:53"><literal type="number" pos:start="128:53" pos:end="128:53">0</literal></expr>]</index></name><operator pos:start="128:55" pos:end="128:56">-&gt;</operator><name pos:start="128:57" pos:end="128:60">type</name></expr>)</condition> <block pos:start="128:63" pos:end="166:17">{<block_content pos:start="130:17" pos:end="164:34">

                <case pos:start="130:17" pos:end="130:40">case <expr pos:start="130:22" pos:end="130:39"><name pos:start="130:22" pos:end="130:39">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                    <expr_stmt pos:start="132:21" pos:end="132:86"><expr pos:start="132:21" pos:end="132:85"><call pos:start="132:21" pos:end="132:85"><name pos:start="132:21" pos:end="132:61">avfilter_fill_frame_from_video_buffer_ref</name><argument_list pos:start="132:62" pos:end="132:85">(<argument pos:start="132:63" pos:end="132:76"><expr pos:start="132:63" pos:end="132:76"><name pos:start="132:63" pos:end="132:76">filtered_frame</name></expr></argument>, <argument pos:start="132:79" pos:end="132:84"><expr pos:start="132:79" pos:end="132:84"><name pos:start="132:79" pos:end="132:84">picref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="134:21" pos:end="134:52"><expr pos:start="134:21" pos:end="134:51"><name pos:start="134:21" pos:end="134:39"><name pos:start="134:21" pos:end="134:34">filtered_frame</name><operator pos:start="134:35" pos:end="134:36">-&gt;</operator><name pos:start="134:37" pos:end="134:39">pts</name></name> <operator pos:start="134:41" pos:end="134:41">=</operator> <name pos:start="134:43" pos:end="134:51">frame_pts</name></expr>;</expr_stmt>

                    <if_stmt pos:start="136:21" pos:end="138:97"><if pos:start="136:21" pos:end="138:97">if <condition pos:start="136:24" pos:end="136:49">(<expr pos:start="136:25" pos:end="136:48"><operator pos:start="136:25" pos:end="136:25">!</operator><name pos:start="136:26" pos:end="136:48"><name pos:start="136:26" pos:end="136:28">ost</name><operator pos:start="136:29" pos:end="136:30">-&gt;</operator><name pos:start="136:31" pos:end="136:48">frame_aspect_ratio</name></name></expr>)</condition><block type="pseudo" pos:start="138:25" pos:end="138:97"><block_content pos:start="138:25" pos:end="138:97">

                        <expr_stmt pos:start="138:25" pos:end="138:97"><expr pos:start="138:25" pos:end="138:96"><name pos:start="138:25" pos:end="138:59"><name pos:start="138:25" pos:end="138:27">ost</name><operator pos:start="138:28" pos:end="138:29">-&gt;</operator><name pos:start="138:30" pos:end="138:31">st</name><operator pos:start="138:32" pos:end="138:33">-&gt;</operator><name pos:start="138:34" pos:end="138:38">codec</name><operator pos:start="138:39" pos:end="138:40">-&gt;</operator><name pos:start="138:41" pos:end="138:59">sample_aspect_ratio</name></name> <operator pos:start="138:61" pos:end="138:61">=</operator> <name pos:start="138:63" pos:end="138:96"><name pos:start="138:63" pos:end="138:68">picref</name><operator pos:start="138:69" pos:end="138:70">-&gt;</operator><name pos:start="138:71" pos:end="138:75">video</name><operator pos:start="138:76" pos:end="138:77">-&gt;</operator><name pos:start="138:78" pos:end="138:96">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <expr_stmt pos:start="142:21" pos:end="146:78"><expr pos:start="142:21" pos:end="146:77"><call pos:start="142:21" pos:end="146:77"><name pos:start="142:21" pos:end="142:32">do_video_out</name><argument_list pos:start="142:33" pos:end="146:77">(<argument pos:start="142:34" pos:end="142:40"><expr pos:start="142:34" pos:end="142:40"><name pos:start="142:34" pos:end="142:40"><name pos:start="142:34" pos:end="142:35">of</name><operator pos:start="142:36" pos:end="142:37">-&gt;</operator><name pos:start="142:38" pos:end="142:40">ctx</name></name></expr></argument>, <argument pos:start="142:43" pos:end="142:45"><expr pos:start="142:43" pos:end="142:45"><name pos:start="142:43" pos:end="142:45">ost</name></expr></argument>, <argument pos:start="142:48" pos:end="142:61"><expr pos:start="142:48" pos:end="142:61"><name pos:start="142:48" pos:end="142:61">filtered_frame</name></expr></argument>,

                                 <argument pos:start="144:34" pos:end="146:76"><expr pos:start="144:34" pos:end="146:76"><ternary pos:start="144:34" pos:end="146:76"><condition pos:start="144:34" pos:end="144:45"><expr pos:start="144:34" pos:end="144:43"><name pos:start="144:34" pos:end="144:43">same_quant</name></expr> ?</condition><then pos:start="144:47" pos:end="144:63"> <expr pos:start="144:47" pos:end="144:63"><name pos:start="144:47" pos:end="144:63"><name pos:start="144:47" pos:end="144:49">ost</name><operator pos:start="144:50" pos:end="144:51">-&gt;</operator><name pos:start="144:52" pos:end="144:63">last_quality</name></name></expr> </then><else pos:start="144:65" pos:end="146:76">:

                                              <expr pos:start="146:47" pos:end="146:76"><name pos:start="146:47" pos:end="146:76"><name pos:start="146:47" pos:end="146:49">ost</name><operator pos:start="146:50" pos:end="146:51">-&gt;</operator><name pos:start="146:52" pos:end="146:53">st</name><operator pos:start="146:54" pos:end="146:55">-&gt;</operator><name pos:start="146:56" pos:end="146:60">codec</name><operator pos:start="146:61" pos:end="146:62">-&gt;</operator><name pos:start="146:63" pos:end="146:76">global_quality</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="148:21" pos:end="148:26">break;</break>

                <case pos:start="150:17" pos:end="150:40">case <expr pos:start="150:22" pos:end="150:39"><name pos:start="150:22" pos:end="150:39">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                    <expr_stmt pos:start="152:21" pos:end="152:68"><expr pos:start="152:21" pos:end="152:67"><call pos:start="152:21" pos:end="152:67"><name pos:start="152:21" pos:end="152:43">avfilter_copy_buf_props</name><argument_list pos:start="152:44" pos:end="152:67">(<argument pos:start="152:45" pos:end="152:58"><expr pos:start="152:45" pos:end="152:58"><name pos:start="152:45" pos:end="152:58">filtered_frame</name></expr></argument>, <argument pos:start="152:61" pos:end="152:66"><expr pos:start="152:61" pos:end="152:66"><name pos:start="152:61" pos:end="152:66">picref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="154:21" pos:end="154:52"><expr pos:start="154:21" pos:end="154:51"><name pos:start="154:21" pos:end="154:39"><name pos:start="154:21" pos:end="154:34">filtered_frame</name><operator pos:start="154:35" pos:end="154:36">-&gt;</operator><name pos:start="154:37" pos:end="154:39">pts</name></name> <operator pos:start="154:41" pos:end="154:41">=</operator> <name pos:start="154:43" pos:end="154:51">frame_pts</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="156:21" pos:end="156:63"><expr pos:start="156:21" pos:end="156:62"><call pos:start="156:21" pos:end="156:62"><name pos:start="156:21" pos:end="156:32">do_audio_out</name><argument_list pos:start="156:33" pos:end="156:62">(<argument pos:start="156:34" pos:end="156:40"><expr pos:start="156:34" pos:end="156:40"><name pos:start="156:34" pos:end="156:40"><name pos:start="156:34" pos:end="156:35">of</name><operator pos:start="156:36" pos:end="156:37">-&gt;</operator><name pos:start="156:38" pos:end="156:40">ctx</name></name></expr></argument>, <argument pos:start="156:43" pos:end="156:45"><expr pos:start="156:43" pos:end="156:45"><name pos:start="156:43" pos:end="156:45">ost</name></expr></argument>, <argument pos:start="156:48" pos:end="156:61"><expr pos:start="156:48" pos:end="156:61"><name pos:start="156:48" pos:end="156:61">filtered_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="158:21" pos:end="158:26">break;</break>

                <default pos:start="160:17" pos:end="160:24">default:</default>

                    <comment type="line" pos:start="162:21" pos:end="162:52">// TODO support subtitle filters</comment>

                    <expr_stmt pos:start="164:21" pos:end="164:34"><expr pos:start="164:21" pos:end="164:33"><call pos:start="164:21" pos:end="164:33"><name pos:start="164:21" pos:end="164:30">av_assert0</name><argument_list pos:start="164:31" pos:end="164:33">(<argument pos:start="164:32" pos:end="164:32"><expr pos:start="164:32" pos:end="164:32"><literal type="number" pos:start="164:32" pos:end="164:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></switch>



                <expr_stmt pos:start="170:17" pos:end="170:46"><expr pos:start="170:17" pos:end="170:45"><call pos:start="170:17" pos:end="170:45"><name pos:start="170:17" pos:end="170:37">avfilter_unref_buffer</name><argument_list pos:start="170:38" pos:end="170:45">(<argument pos:start="170:39" pos:end="170:44"><expr pos:start="170:39" pos:end="170:44"><name pos:start="170:39" pos:end="170:44">picref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></for>

        <comment type="block" pos:start="176:9" pos:end="176:51">/* Request frames through all the graphs */</comment>

        <expr_stmt pos:start="178:9" pos:end="178:42"><expr pos:start="178:9" pos:end="178:41"><name pos:start="178:9" pos:end="178:15">ret_all</name> <operator pos:start="178:17" pos:end="178:17">=</operator> <name pos:start="178:19" pos:end="178:28">nb_success</name> <operator pos:start="178:30" pos:end="178:30">=</operator> <name pos:start="178:32" pos:end="178:37">nb_eof</name> <operator pos:start="178:39" pos:end="178:39">=</operator> <literal type="number" pos:start="178:41" pos:end="178:41">0</literal></expr>;</expr_stmt>

        <for pos:start="180:9" pos:end="206:9">for <control pos:start="180:13" pos:end="180:45">(<init pos:start="180:14" pos:end="180:19"><expr pos:start="180:14" pos:end="180:18"><name pos:start="180:14" pos:end="180:14">i</name> <operator pos:start="180:16" pos:end="180:16">=</operator> <literal type="number" pos:start="180:18" pos:end="180:18">0</literal></expr>;</init> <condition pos:start="180:21" pos:end="180:40"><expr pos:start="180:21" pos:end="180:39"><name pos:start="180:21" pos:end="180:21">i</name> <operator pos:start="180:23" pos:end="180:23">&lt;</operator> <name pos:start="180:25" pos:end="180:39">nb_filtergraphs</name></expr>;</condition> <incr pos:start="180:42" pos:end="180:44"><expr pos:start="180:42" pos:end="180:44"><name pos:start="180:42" pos:end="180:42">i</name><operator pos:start="180:43" pos:end="180:44">++</operator></expr></incr>)</control> <block pos:start="180:47" pos:end="206:9">{<block_content pos:start="182:13" pos:end="204:13">

            <expr_stmt pos:start="182:13" pos:end="182:72"><expr pos:start="182:13" pos:end="182:71"><name pos:start="182:13" pos:end="182:15">ret</name> <operator pos:start="182:17" pos:end="182:17">=</operator> <call pos:start="182:19" pos:end="182:71"><name pos:start="182:19" pos:end="182:47">avfilter_graph_request_oldest</name><argument_list pos:start="182:48" pos:end="182:71">(<argument pos:start="182:49" pos:end="182:70"><expr pos:start="182:49" pos:end="182:70"><name pos:start="182:49" pos:end="182:63"><name pos:start="182:49" pos:end="182:60">filtergraphs</name><index pos:start="182:61" pos:end="182:63">[<expr pos:start="182:62" pos:end="182:62"><name pos:start="182:62" pos:end="182:62">i</name></expr>]</index></name><operator pos:start="182:64" pos:end="182:65">-&gt;</operator><name pos:start="182:66" pos:end="182:70">graph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="184:13" pos:end="204:13"><if pos:start="184:13" pos:end="188:13">if <condition pos:start="184:16" pos:end="184:21">(<expr pos:start="184:17" pos:end="184:20"><operator pos:start="184:17" pos:end="184:17">!</operator><name pos:start="184:18" pos:end="184:20">ret</name></expr>)</condition> <block pos:start="184:23" pos:end="188:13">{<block_content pos:start="186:17" pos:end="186:29">

                <expr_stmt pos:start="186:17" pos:end="186:29"><expr pos:start="186:17" pos:end="186:28"><name pos:start="186:17" pos:end="186:26">nb_success</name><operator pos:start="186:27" pos:end="186:28">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="188:15" pos:end="192:13">else if <condition pos:start="188:23" pos:end="188:42">(<expr pos:start="188:24" pos:end="188:41"><name pos:start="188:24" pos:end="188:26">ret</name> <operator pos:start="188:28" pos:end="188:29">==</operator> <name pos:start="188:31" pos:end="188:41">AVERROR_EOF</name></expr>)</condition> <block pos:start="188:44" pos:end="192:13">{<block_content pos:start="190:17" pos:end="190:25">

                <expr_stmt pos:start="190:17" pos:end="190:25"><expr pos:start="190:17" pos:end="190:24"><name pos:start="190:17" pos:end="190:22">nb_eof</name><operator pos:start="190:23" pos:end="190:24">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="192:15" pos:end="204:13">else if <condition pos:start="192:23" pos:end="192:46">(<expr pos:start="192:24" pos:end="192:45"><name pos:start="192:24" pos:end="192:26">ret</name> <operator pos:start="192:28" pos:end="192:29">!=</operator> <call pos:start="192:31" pos:end="192:45"><name pos:start="192:31" pos:end="192:37">AVERROR</name><argument_list pos:start="192:38" pos:end="192:45">(<argument pos:start="192:39" pos:end="192:44"><expr pos:start="192:39" pos:end="192:44"><name pos:start="192:39" pos:end="192:44">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="192:48" pos:end="204:13">{<block_content pos:start="194:17" pos:end="202:30">

                <decl_stmt pos:start="194:17" pos:end="194:30"><decl pos:start="194:17" pos:end="194:29"><type pos:start="194:17" pos:end="194:20"><name pos:start="194:17" pos:end="194:20">char</name></type> <name pos:start="194:22" pos:end="194:29"><name pos:start="194:22" pos:end="194:24">buf</name><index pos:start="194:25" pos:end="194:29">[<expr pos:start="194:26" pos:end="194:28"><literal type="number" pos:start="194:26" pos:end="194:28">256</literal></expr>]</index></name></decl>;</decl_stmt>

                <expr_stmt pos:start="196:17" pos:end="196:51"><expr pos:start="196:17" pos:end="196:50"><call pos:start="196:17" pos:end="196:50"><name pos:start="196:17" pos:end="196:27">av_strerror</name><argument_list pos:start="196:28" pos:end="196:50">(<argument pos:start="196:29" pos:end="196:31"><expr pos:start="196:29" pos:end="196:31"><name pos:start="196:29" pos:end="196:31">ret</name></expr></argument>, <argument pos:start="196:34" pos:end="196:36"><expr pos:start="196:34" pos:end="196:36"><name pos:start="196:34" pos:end="196:36">buf</name></expr></argument>, <argument pos:start="196:39" pos:end="196:49"><expr pos:start="196:39" pos:end="196:49"><sizeof pos:start="196:39" pos:end="196:49">sizeof<argument_list pos:start="196:45" pos:end="196:49">(<argument pos:start="196:46" pos:end="196:48"><expr pos:start="196:46" pos:end="196:48"><name pos:start="196:46" pos:end="196:48">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="198:17" pos:end="200:62"><expr pos:start="198:17" pos:end="200:61"><call pos:start="198:17" pos:end="200:61"><name pos:start="198:17" pos:end="198:22">av_log</name><argument_list pos:start="198:23" pos:end="200:61">(<argument pos:start="198:24" pos:end="198:27"><expr pos:start="198:24" pos:end="198:27"><name pos:start="198:24" pos:end="198:27">NULL</name></expr></argument>, <argument pos:start="198:30" pos:end="198:43"><expr pos:start="198:30" pos:end="198:43"><name pos:start="198:30" pos:end="198:43">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="200:24" pos:end="200:55"><expr pos:start="200:24" pos:end="200:55"><literal type="string" pos:start="200:24" pos:end="200:55">"Error in request_frame(): %s\n"</literal></expr></argument>, <argument pos:start="200:58" pos:end="200:60"><expr pos:start="200:58" pos:end="200:60"><name pos:start="200:58" pos:end="200:60">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="202:17" pos:end="202:30"><expr pos:start="202:17" pos:end="202:29"><name pos:start="202:17" pos:end="202:23">ret_all</name> <operator pos:start="202:25" pos:end="202:25">=</operator> <name pos:start="202:27" pos:end="202:29">ret</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="208:9" pos:end="210:18"><if pos:start="208:9" pos:end="210:18">if <condition pos:start="208:12" pos:end="208:24">(<expr pos:start="208:13" pos:end="208:23"><operator pos:start="208:13" pos:end="208:13">!</operator><name pos:start="208:14" pos:end="208:23">nb_success</name></expr>)</condition><block type="pseudo" pos:start="210:13" pos:end="210:18"><block_content pos:start="210:13" pos:end="210:18">

            <break pos:start="210:13" pos:end="210:18">break;</break></block_content></block></if></if_stmt>

        <comment type="block" pos:start="212:9" pos:end="212:45">/* Try again if anything succeeded */</comment>

    </block_content>}</block></while>

    <return pos:start="216:5" pos:end="216:61">return <expr pos:start="216:12" pos:end="216:60"><ternary pos:start="216:12" pos:end="216:60"><condition pos:start="216:12" pos:end="216:38"><expr pos:start="216:12" pos:end="216:36"><name pos:start="216:12" pos:end="216:17">nb_eof</name> <operator pos:start="216:19" pos:end="216:20">==</operator> <name pos:start="216:22" pos:end="216:36">nb_filtergraphs</name></expr> ?</condition><then pos:start="216:40" pos:end="216:50"> <expr pos:start="216:40" pos:end="216:50"><name pos:start="216:40" pos:end="216:50">AVERROR_EOF</name></expr> </then><else pos:start="216:52" pos:end="216:60">: <expr pos:start="216:54" pos:end="216:60"><name pos:start="216:54" pos:end="216:60">ret_all</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function></unit>
