<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/629.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">ff_filter_frame_framed</name><parameter_list pos:start="1:34" pos:end="1:79">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:46">AVFilterLink</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">link</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:78"><decl pos:start="1:55" pos:end="1:78"><type pos:start="1:55" pos:end="1:78"><name pos:start="1:55" pos:end="1:71">AVFilterBufferRef</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:78">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="163:1">{<block_content pos:start="5:5" pos:end="161:15">

    <function_decl pos:start="5:5" pos:end="5:61"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> (<modifier pos:start="5:10" pos:end="5:10">*</modifier><name pos:start="5:11" pos:end="5:22">filter_frame</name>)<parameter_list pos:start="5:24" pos:end="5:60">(<parameter pos:start="5:25" pos:end="5:38"><decl pos:start="5:25" pos:end="5:38"><type pos:start="5:25" pos:end="5:38"><name pos:start="5:25" pos:end="5:36">AVFilterLink</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type></decl></parameter>, <parameter pos:start="5:41" pos:end="5:59"><decl pos:start="5:41" pos:end="5:59"><type pos:start="5:41" pos:end="5:59"><name pos:start="5:41" pos:end="5:57">AVFilterBufferRef</name> <modifier pos:start="5:59" pos:end="5:59">*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVFilterPad</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">src</name> <init pos:start="7:22" pos:end="7:35">= <expr pos:start="7:24" pos:end="7:35"><name pos:start="7:24" pos:end="7:35"><name pos:start="7:24" pos:end="7:27">link</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:35">srcpad</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVFilterPad</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">dst</name> <init pos:start="9:22" pos:end="9:35">= <expr pos:start="9:24" pos:end="9:35"><name pos:start="9:24" pos:end="9:35"><name pos:start="9:24" pos:end="9:27">link</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:35">dstpad</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">AVFilterBufferRef</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:26">out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">perms</name></decl>, <decl pos:start="13:16" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:18">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:51"><decl pos:start="15:5" pos:end="15:50"><type pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:19">AVFilterCommand</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:24">cmd</name><init pos:start="15:25" pos:end="15:50">= <expr pos:start="15:27" pos:end="15:50"><name pos:start="15:27" pos:end="15:50"><name pos:start="15:27" pos:end="15:30">link</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:35">dst</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:50">command_queue</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:15">pts</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:21">(<expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:12">link</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:20">closed</name></name></expr>)</condition> <block pos:start="21:23" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:27">

        <expr_stmt pos:start="23:9" pos:end="23:37"><expr pos:start="23:9" pos:end="23:36"><call pos:start="23:9" pos:end="23:36"><name pos:start="23:9" pos:end="23:29">avfilter_unref_buffer</name><argument_list pos:start="23:30" pos:end="23:36">(<argument pos:start="23:31" pos:end="23:35"><expr pos:start="23:31" pos:end="23:35"><name pos:start="23:31" pos:end="23:35">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:27">return <expr pos:start="25:16" pos:end="25:26"><name pos:start="25:16" pos:end="25:26">AVERROR_EOF</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="33:44"><if pos:start="31:5" pos:end="33:44">if <condition pos:start="31:8" pos:end="31:44">(<expr pos:start="31:9" pos:end="31:43"><operator pos:start="31:9" pos:end="31:9">!</operator><operator pos:start="31:10" pos:end="31:10">(</operator><name pos:start="31:11" pos:end="31:22">filter_frame</name> <operator pos:start="31:24" pos:end="31:24">=</operator> <name pos:start="31:26" pos:end="31:42"><name pos:start="31:26" pos:end="31:28">dst</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:42">filter_frame</name></name><operator pos:start="31:43" pos:end="31:43">)</operator></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:44"><block_content pos:start="33:9" pos:end="33:44">

        <expr_stmt pos:start="33:9" pos:end="33:44"><expr pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:20">filter_frame</name> <operator pos:start="33:22" pos:end="33:22">=</operator> <name pos:start="33:24" pos:end="33:43">default_filter_frame</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:66"><expr pos:start="37:5" pos:end="37:65"><call pos:start="37:5" pos:end="37:65"><name pos:start="37:5" pos:end="37:14">av_assert1</name><argument_list pos:start="37:15" pos:end="37:65">(<argument pos:start="37:16" pos:end="37:64"><expr pos:start="37:16" pos:end="37:64"><operator pos:start="37:16" pos:end="37:16">(</operator><name pos:start="37:17" pos:end="37:28"><name pos:start="37:17" pos:end="37:21">frame</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:28">perms</name></name> <operator pos:start="37:30" pos:end="37:30">&amp;</operator> <name pos:start="37:32" pos:end="37:45"><name pos:start="37:32" pos:end="37:34">src</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:45">min_perms</name></name><operator pos:start="37:46" pos:end="37:46">)</operator> <operator pos:start="37:48" pos:end="37:49">==</operator> <name pos:start="37:51" pos:end="37:64"><name pos:start="37:51" pos:end="37:53">src</name><operator pos:start="37:54" pos:end="37:55">-&gt;</operator><name pos:start="37:56" pos:end="37:64">min_perms</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:37"><expr pos:start="39:5" pos:end="39:36"><name pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:9">frame</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:16">perms</name></name> <operator pos:start="39:18" pos:end="39:19">&amp;=</operator> <operator pos:start="39:21" pos:end="39:21">~</operator> <name pos:start="39:23" pos:end="39:36"><name pos:start="39:23" pos:end="39:25">src</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:36">rej_perms</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:25"><expr pos:start="41:5" pos:end="41:24"><name pos:start="41:5" pos:end="41:9">perms</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <name pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:17">frame</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:24">perms</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="47:39"><if pos:start="45:5" pos:end="47:39">if <condition pos:start="45:8" pos:end="45:31">(<expr pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:13">frame</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:23">linesize</name><index pos:start="45:24" pos:end="45:26">[<expr pos:start="45:25" pos:end="45:25"><literal type="number" pos:start="45:25" pos:end="45:25">0</literal></expr>]</index></name> <operator pos:start="45:28" pos:end="45:28">&lt;</operator> <literal type="number" pos:start="45:30" pos:end="45:30">0</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:39"><block_content pos:start="47:9" pos:end="47:39">

        <expr_stmt pos:start="47:9" pos:end="47:39"><expr pos:start="47:9" pos:end="47:38"><name pos:start="47:9" pos:end="47:13">perms</name> <operator pos:start="47:15" pos:end="47:16">|=</operator> <name pos:start="47:18" pos:end="47:38">AV_PERM_NEG_LINESIZES</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:78">/* prepare to copy the frame if the buffer has insufficient permissions */</comment>

    <if_stmt pos:start="53:5" pos:end="133:20"><if pos:start="53:5" pos:end="131:5">if <condition pos:start="53:8" pos:end="55:31">(<expr pos:start="53:9" pos:end="55:30"><operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:23"><name pos:start="53:10" pos:end="53:12">dst</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:23">min_perms</name></name> <operator pos:start="53:25" pos:end="53:25">&amp;</operator> <name pos:start="53:27" pos:end="53:31">perms</name><operator pos:start="53:32" pos:end="53:32">)</operator> <operator pos:start="53:34" pos:end="53:35">!=</operator> <name pos:start="53:37" pos:end="53:50"><name pos:start="53:37" pos:end="53:39">dst</name><operator pos:start="53:40" pos:end="53:41">-&gt;</operator><name pos:start="53:42" pos:end="53:50">min_perms</name></name> <operator pos:start="53:52" pos:end="53:53">||</operator>

        <name pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:11">dst</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:22">rej_perms</name></name> <operator pos:start="55:24" pos:end="55:24">&amp;</operator> <name pos:start="55:26" pos:end="55:30">perms</name></expr>)</condition> <block pos:start="55:33" pos:end="131:5">{<block_content pos:start="57:9" pos:end="129:37">

        <expr_stmt pos:start="57:9" pos:end="61:72"><expr pos:start="57:9" pos:end="61:71"><call pos:start="57:9" pos:end="61:71"><name pos:start="57:9" pos:end="57:14">av_log</name><argument_list pos:start="57:15" pos:end="61:71">(<argument pos:start="57:16" pos:end="57:24"><expr pos:start="57:16" pos:end="57:24"><name pos:start="57:16" pos:end="57:24"><name pos:start="57:16" pos:end="57:19">link</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:24">dst</name></name></expr></argument>, <argument pos:start="57:27" pos:end="57:38"><expr pos:start="57:27" pos:end="57:38"><name pos:start="57:27" pos:end="57:38">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="59:16" pos:end="59:79"><expr pos:start="59:16" pos:end="59:79"><literal type="string" pos:start="59:16" pos:end="59:79">"Copying data in avfilter (have perms %x, need %x, reject %x)\n"</literal></expr></argument>,

               <argument pos:start="61:16" pos:end="61:20"><expr pos:start="61:16" pos:end="61:20"><name pos:start="61:16" pos:end="61:20">perms</name></expr></argument>, <argument pos:start="61:23" pos:end="61:45"><expr pos:start="61:23" pos:end="61:45"><name pos:start="61:23" pos:end="61:45"><name pos:start="61:23" pos:end="61:26">link</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:34">dstpad</name><operator pos:start="61:35" pos:end="61:36">-&gt;</operator><name pos:start="61:37" pos:end="61:45">min_perms</name></name></expr></argument>, <argument pos:start="61:48" pos:end="61:70"><expr pos:start="61:48" pos:end="61:70"><name pos:start="61:48" pos:end="61:70"><name pos:start="61:48" pos:end="61:51">link</name><operator pos:start="61:52" pos:end="61:53">-&gt;</operator><name pos:start="61:54" pos:end="61:59">dstpad</name><operator pos:start="61:60" pos:end="61:61">-&gt;</operator><name pos:start="61:62" pos:end="61:70">rej_perms</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="65:9" pos:end="65:51">/* Maybe use ff_copy_buffer_ref instead? */</comment>

        <switch pos:start="67:9" pos:end="87:9">switch <condition pos:start="67:16" pos:end="67:27">(<expr pos:start="67:17" pos:end="67:26"><name pos:start="67:17" pos:end="67:26"><name pos:start="67:17" pos:end="67:20">link</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:26">type</name></name></expr>)</condition> <block pos:start="67:29" pos:end="87:9">{<block_content pos:start="69:9" pos:end="85:40">

        <case pos:start="69:9" pos:end="69:32">case <expr pos:start="69:14" pos:end="69:31"><name pos:start="69:14" pos:end="69:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="71:13" pos:end="73:56"><expr pos:start="71:13" pos:end="73:55"><name pos:start="71:13" pos:end="71:15">out</name> <operator pos:start="71:17" pos:end="71:17">=</operator> <call pos:start="71:19" pos:end="73:55"><name pos:start="71:19" pos:end="71:37">ff_get_video_buffer</name><argument_list pos:start="71:38" pos:end="73:55">(<argument pos:start="71:39" pos:end="71:42"><expr pos:start="71:39" pos:end="71:42"><name pos:start="71:39" pos:end="71:42">link</name></expr></argument>, <argument pos:start="71:45" pos:end="71:58"><expr pos:start="71:45" pos:end="71:58"><name pos:start="71:45" pos:end="71:58"><name pos:start="71:45" pos:end="71:47">dst</name><operator pos:start="71:48" pos:end="71:49">-&gt;</operator><name pos:start="71:50" pos:end="71:58">min_perms</name></name></expr></argument>,

                                      <argument pos:start="73:39" pos:end="73:45"><expr pos:start="73:39" pos:end="73:45"><name pos:start="73:39" pos:end="73:45"><name pos:start="73:39" pos:end="73:42">link</name><operator pos:start="73:43" pos:end="73:44">-&gt;</operator><name pos:start="73:45" pos:end="73:45">w</name></name></expr></argument>, <argument pos:start="73:48" pos:end="73:54"><expr pos:start="73:48" pos:end="73:54"><name pos:start="73:48" pos:end="73:54"><name pos:start="73:48" pos:end="73:51">link</name><operator pos:start="73:52" pos:end="73:53">-&gt;</operator><name pos:start="73:54" pos:end="73:54">h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <case pos:start="77:9" pos:end="77:32">case <expr pos:start="77:14" pos:end="77:31"><name pos:start="77:14" pos:end="77:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="79:13" pos:end="81:64"><expr pos:start="79:13" pos:end="81:63"><name pos:start="79:13" pos:end="79:15">out</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <call pos:start="79:19" pos:end="81:63"><name pos:start="79:19" pos:end="79:37">ff_get_audio_buffer</name><argument_list pos:start="79:38" pos:end="81:63">(<argument pos:start="79:39" pos:end="79:42"><expr pos:start="79:39" pos:end="79:42"><name pos:start="79:39" pos:end="79:42">link</name></expr></argument>, <argument pos:start="79:45" pos:end="79:58"><expr pos:start="79:45" pos:end="79:58"><name pos:start="79:45" pos:end="79:58"><name pos:start="79:45" pos:end="79:47">dst</name><operator pos:start="79:48" pos:end="79:49">-&gt;</operator><name pos:start="79:50" pos:end="79:58">min_perms</name></name></expr></argument>,

                                      <argument pos:start="81:39" pos:end="81:62"><expr pos:start="81:39" pos:end="81:62"><name pos:start="81:39" pos:end="81:62"><name pos:start="81:39" pos:end="81:43">frame</name><operator pos:start="81:44" pos:end="81:45">-&gt;</operator><name pos:start="81:46" pos:end="81:50">audio</name><operator pos:start="81:51" pos:end="81:52">-&gt;</operator><name pos:start="81:53" pos:end="81:62">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="83:13" pos:end="83:18">break;</break>

        <default pos:start="85:9" pos:end="85:16">default:</default> <return pos:start="85:18" pos:end="85:40">return <expr pos:start="85:25" pos:end="85:39"><call pos:start="85:25" pos:end="85:39"><name pos:start="85:25" pos:end="85:31">AVERROR</name><argument_list pos:start="85:32" pos:end="85:39">(<argument pos:start="85:33" pos:end="85:38"><expr pos:start="85:33" pos:end="85:38"><name pos:start="85:33" pos:end="85:38">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></switch>

        <if_stmt pos:start="89:9" pos:end="95:9"><if pos:start="89:9" pos:end="95:9">if <condition pos:start="89:12" pos:end="89:17">(<expr pos:start="89:13" pos:end="89:16"><operator pos:start="89:13" pos:end="89:13">!</operator><name pos:start="89:14" pos:end="89:16">out</name></expr>)</condition> <block pos:start="89:19" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:35">

            <expr_stmt pos:start="91:13" pos:end="91:41"><expr pos:start="91:13" pos:end="91:40"><call pos:start="91:13" pos:end="91:40"><name pos:start="91:13" pos:end="91:33">avfilter_unref_buffer</name><argument_list pos:start="91:34" pos:end="91:40">(<argument pos:start="91:35" pos:end="91:39"><expr pos:start="91:35" pos:end="91:39"><name pos:start="91:35" pos:end="91:39">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="93:13" pos:end="93:35">return <expr pos:start="93:20" pos:end="93:34"><call pos:start="93:20" pos:end="93:34"><name pos:start="93:20" pos:end="93:26">AVERROR</name><argument_list pos:start="93:27" pos:end="93:34">(<argument pos:start="93:28" pos:end="93:33"><expr pos:start="93:28" pos:end="93:33"><name pos:start="93:28" pos:end="93:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:51"><expr pos:start="97:9" pos:end="97:50"><call pos:start="97:9" pos:end="97:50"><name pos:start="97:9" pos:end="97:38">avfilter_copy_buffer_ref_props</name><argument_list pos:start="97:39" pos:end="97:50">(<argument pos:start="97:40" pos:end="97:42"><expr pos:start="97:40" pos:end="97:42"><name pos:start="97:40" pos:end="97:42">out</name></expr></argument>, <argument pos:start="97:45" pos:end="97:49"><expr pos:start="97:45" pos:end="97:49"><name pos:start="97:45" pos:end="97:49">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <switch pos:start="101:9" pos:end="125:9">switch <condition pos:start="101:16" pos:end="101:27">(<expr pos:start="101:17" pos:end="101:26"><name pos:start="101:17" pos:end="101:26"><name pos:start="101:17" pos:end="101:20">link</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:26">type</name></name></expr>)</condition> <block pos:start="101:29" pos:end="125:9">{<block_content pos:start="103:9" pos:end="123:40">

        <case pos:start="103:9" pos:end="103:32">case <expr pos:start="103:14" pos:end="103:31"><name pos:start="103:14" pos:end="103:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="105:13" pos:end="107:75"><expr pos:start="105:13" pos:end="107:74"><call pos:start="105:13" pos:end="107:74"><name pos:start="105:13" pos:end="105:25">av_image_copy</name><argument_list pos:start="105:26" pos:end="107:74">(<argument pos:start="105:27" pos:end="105:35"><expr pos:start="105:27" pos:end="105:35"><name pos:start="105:27" pos:end="105:35"><name pos:start="105:27" pos:end="105:29">out</name><operator pos:start="105:30" pos:end="105:31">-&gt;</operator><name pos:start="105:32" pos:end="105:35">data</name></name></expr></argument>, <argument pos:start="105:38" pos:end="105:50"><expr pos:start="105:38" pos:end="105:50"><name pos:start="105:38" pos:end="105:50"><name pos:start="105:38" pos:end="105:40">out</name><operator pos:start="105:41" pos:end="105:42">-&gt;</operator><name pos:start="105:43" pos:end="105:50">linesize</name></name></expr></argument>, <argument pos:start="105:53" pos:end="105:63"><expr pos:start="105:53" pos:end="105:63"><name pos:start="105:53" pos:end="105:63"><name pos:start="105:53" pos:end="105:57">frame</name><operator pos:start="105:58" pos:end="105:59">-&gt;</operator><name pos:start="105:60" pos:end="105:63">data</name></name></expr></argument>, <argument pos:start="105:66" pos:end="105:80"><expr pos:start="105:66" pos:end="105:80"><name pos:start="105:66" pos:end="105:80"><name pos:start="105:66" pos:end="105:70">frame</name><operator pos:start="105:71" pos:end="105:72">-&gt;</operator><name pos:start="105:73" pos:end="105:80">linesize</name></name></expr></argument>,

                          <argument pos:start="107:27" pos:end="107:39"><expr pos:start="107:27" pos:end="107:39"><name pos:start="107:27" pos:end="107:39"><name pos:start="107:27" pos:end="107:31">frame</name><operator pos:start="107:32" pos:end="107:33">-&gt;</operator><name pos:start="107:34" pos:end="107:39">format</name></name></expr></argument>, <argument pos:start="107:42" pos:end="107:56"><expr pos:start="107:42" pos:end="107:56"><name pos:start="107:42" pos:end="107:56"><name pos:start="107:42" pos:end="107:46">frame</name><operator pos:start="107:47" pos:end="107:48">-&gt;</operator><name pos:start="107:49" pos:end="107:53">video</name><operator pos:start="107:54" pos:end="107:55">-&gt;</operator><name pos:start="107:56" pos:end="107:56">w</name></name></expr></argument>, <argument pos:start="107:59" pos:end="107:73"><expr pos:start="107:59" pos:end="107:73"><name pos:start="107:59" pos:end="107:73"><name pos:start="107:59" pos:end="107:63">frame</name><operator pos:start="107:64" pos:end="107:65">-&gt;</operator><name pos:start="107:66" pos:end="107:70">video</name><operator pos:start="107:71" pos:end="107:72">-&gt;</operator><name pos:start="107:73" pos:end="107:73">h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="109:13" pos:end="109:18">break;</break>

        <case pos:start="111:9" pos:end="111:32">case <expr pos:start="111:14" pos:end="111:31"><name pos:start="111:14" pos:end="111:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="113:13" pos:end="119:43"><expr pos:start="113:13" pos:end="119:42"><call pos:start="113:13" pos:end="119:42"><name pos:start="113:13" pos:end="113:27">av_samples_copy</name><argument_list pos:start="113:28" pos:end="119:42">(<argument pos:start="113:29" pos:end="113:46"><expr pos:start="113:29" pos:end="113:46"><name pos:start="113:29" pos:end="113:46"><name pos:start="113:29" pos:end="113:31">out</name><operator pos:start="113:32" pos:end="113:33">-&gt;</operator><name pos:start="113:34" pos:end="113:46">extended_data</name></name></expr></argument>, <argument pos:start="113:49" pos:end="113:68"><expr pos:start="113:49" pos:end="113:68"><name pos:start="113:49" pos:end="113:68"><name pos:start="113:49" pos:end="113:53">frame</name><operator pos:start="113:54" pos:end="113:55">-&gt;</operator><name pos:start="113:56" pos:end="113:68">extended_data</name></name></expr></argument>,

                            <argument pos:start="115:29" pos:end="115:29"><expr pos:start="115:29" pos:end="115:29"><literal type="number" pos:start="115:29" pos:end="115:29">0</literal></expr></argument>, <argument pos:start="115:32" pos:end="115:32"><expr pos:start="115:32" pos:end="115:32"><literal type="number" pos:start="115:32" pos:end="115:32">0</literal></expr></argument>, <argument pos:start="115:35" pos:end="115:58"><expr pos:start="115:35" pos:end="115:58"><name pos:start="115:35" pos:end="115:58"><name pos:start="115:35" pos:end="115:39">frame</name><operator pos:start="115:40" pos:end="115:41">-&gt;</operator><name pos:start="115:42" pos:end="115:46">audio</name><operator pos:start="115:47" pos:end="115:48">-&gt;</operator><name pos:start="115:49" pos:end="115:58">nb_samples</name></name></expr></argument>,

                            <argument pos:start="117:29" pos:end="117:91"><expr pos:start="117:29" pos:end="117:91"><call pos:start="117:29" pos:end="117:91"><name pos:start="117:29" pos:end="117:61">av_get_channel_layout_nb_channels</name><argument_list pos:start="117:62" pos:end="117:91">(<argument pos:start="117:63" pos:end="117:90"><expr pos:start="117:63" pos:end="117:90"><name pos:start="117:63" pos:end="117:90"><name pos:start="117:63" pos:end="117:67">frame</name><operator pos:start="117:68" pos:end="117:69">-&gt;</operator><name pos:start="117:70" pos:end="117:74">audio</name><operator pos:start="117:75" pos:end="117:76">-&gt;</operator><name pos:start="117:77" pos:end="117:90">channel_layout</name></name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="119:29" pos:end="119:41"><expr pos:start="119:29" pos:end="119:41"><name pos:start="119:29" pos:end="119:41"><name pos:start="119:29" pos:end="119:33">frame</name><operator pos:start="119:34" pos:end="119:35">-&gt;</operator><name pos:start="119:36" pos:end="119:41">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        <default pos:start="123:9" pos:end="123:16">default:</default> <return pos:start="123:18" pos:end="123:40">return <expr pos:start="123:25" pos:end="123:39"><call pos:start="123:25" pos:end="123:39"><name pos:start="123:25" pos:end="123:31">AVERROR</name><argument_list pos:start="123:32" pos:end="123:39">(<argument pos:start="123:33" pos:end="123:38"><expr pos:start="123:33" pos:end="123:38"><name pos:start="123:33" pos:end="123:38">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></switch>



        <expr_stmt pos:start="129:9" pos:end="129:37"><expr pos:start="129:9" pos:end="129:36"><call pos:start="129:9" pos:end="129:36"><name pos:start="129:9" pos:end="129:29">avfilter_unref_buffer</name><argument_list pos:start="129:30" pos:end="129:36">(<argument pos:start="129:31" pos:end="129:35"><expr pos:start="129:31" pos:end="129:35"><name pos:start="129:31" pos:end="129:35">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="131:7" pos:end="133:20">else<block type="pseudo" pos:start="133:9" pos:end="133:20"><block_content pos:start="133:9" pos:end="133:20">

        <expr_stmt pos:start="133:9" pos:end="133:20"><expr pos:start="133:9" pos:end="133:19"><name pos:start="133:9" pos:end="133:11">out</name> <operator pos:start="133:13" pos:end="133:13">=</operator> <name pos:start="133:15" pos:end="133:19">frame</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <while pos:start="137:5" pos:end="151:5">while<condition pos:start="137:10" pos:end="137:67">(<expr pos:start="137:11" pos:end="137:66"><name pos:start="137:11" pos:end="137:13">cmd</name> <operator pos:start="137:15" pos:end="137:16">&amp;&amp;</operator> <name pos:start="137:18" pos:end="137:26"><name pos:start="137:18" pos:end="137:20">cmd</name><operator pos:start="137:21" pos:end="137:22">-&gt;</operator><name pos:start="137:23" pos:end="137:26">time</name></name> <operator pos:start="137:28" pos:end="137:29">&lt;=</operator> <name pos:start="137:31" pos:end="137:40"><name pos:start="137:31" pos:end="137:35">frame</name><operator pos:start="137:36" pos:end="137:37">-&gt;</operator><name pos:start="137:38" pos:end="137:40">pts</name></name> <operator pos:start="137:42" pos:end="137:42">*</operator> <call pos:start="137:44" pos:end="137:66"><name pos:start="137:44" pos:end="137:49">av_q2d</name><argument_list pos:start="137:50" pos:end="137:66">(<argument pos:start="137:51" pos:end="137:65"><expr pos:start="137:51" pos:end="137:65"><name pos:start="137:51" pos:end="137:65"><name pos:start="137:51" pos:end="137:54">link</name><operator pos:start="137:55" pos:end="137:56">-&gt;</operator><name pos:start="137:57" pos:end="137:65">time_base</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="137:68" pos:end="151:5">{<block_content pos:start="139:9" pos:end="149:38">

        <expr_stmt pos:start="139:9" pos:end="143:50"><expr pos:start="139:9" pos:end="143:49"><call pos:start="139:9" pos:end="143:49"><name pos:start="139:9" pos:end="139:14">av_log</name><argument_list pos:start="139:15" pos:end="143:49">(<argument pos:start="139:16" pos:end="139:24"><expr pos:start="139:16" pos:end="139:24"><name pos:start="139:16" pos:end="139:24"><name pos:start="139:16" pos:end="139:19">link</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:24">dst</name></name></expr></argument>, <argument pos:start="139:27" pos:end="139:38"><expr pos:start="139:27" pos:end="139:38"><name pos:start="139:27" pos:end="139:38">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="141:16" pos:end="141:63"><expr pos:start="141:16" pos:end="141:63"><literal type="string" pos:start="141:16" pos:end="141:63">"Processing command time:%f command:%s arg:%s\n"</literal></expr></argument>,

               <argument pos:start="143:16" pos:end="143:24"><expr pos:start="143:16" pos:end="143:24"><name pos:start="143:16" pos:end="143:24"><name pos:start="143:16" pos:end="143:18">cmd</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:24">time</name></name></expr></argument>, <argument pos:start="143:27" pos:end="143:38"><expr pos:start="143:27" pos:end="143:38"><name pos:start="143:27" pos:end="143:38"><name pos:start="143:27" pos:end="143:29">cmd</name><operator pos:start="143:30" pos:end="143:31">-&gt;</operator><name pos:start="143:32" pos:end="143:38">command</name></name></expr></argument>, <argument pos:start="143:41" pos:end="143:48"><expr pos:start="143:41" pos:end="143:48"><name pos:start="143:41" pos:end="143:48"><name pos:start="143:41" pos:end="143:43">cmd</name><operator pos:start="143:44" pos:end="143:45">-&gt;</operator><name pos:start="143:46" pos:end="143:48">arg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:86"><expr pos:start="145:9" pos:end="145:85"><call pos:start="145:9" pos:end="145:85"><name pos:start="145:9" pos:end="145:32">avfilter_process_command</name><argument_list pos:start="145:33" pos:end="145:85">(<argument pos:start="145:34" pos:end="145:42"><expr pos:start="145:34" pos:end="145:42"><name pos:start="145:34" pos:end="145:42"><name pos:start="145:34" pos:end="145:37">link</name><operator pos:start="145:38" pos:end="145:39">-&gt;</operator><name pos:start="145:40" pos:end="145:42">dst</name></name></expr></argument>, <argument pos:start="145:45" pos:end="145:56"><expr pos:start="145:45" pos:end="145:56"><name pos:start="145:45" pos:end="145:56"><name pos:start="145:45" pos:end="145:47">cmd</name><operator pos:start="145:48" pos:end="145:49">-&gt;</operator><name pos:start="145:50" pos:end="145:56">command</name></name></expr></argument>, <argument pos:start="145:59" pos:end="145:66"><expr pos:start="145:59" pos:end="145:66"><name pos:start="145:59" pos:end="145:66"><name pos:start="145:59" pos:end="145:61">cmd</name><operator pos:start="145:62" pos:end="145:63">-&gt;</operator><name pos:start="145:64" pos:end="145:66">arg</name></name></expr></argument>, <argument pos:start="145:69" pos:end="145:69"><expr pos:start="145:69" pos:end="145:69"><literal type="number" pos:start="145:69" pos:end="145:69">0</literal></expr></argument>, <argument pos:start="145:72" pos:end="145:72"><expr pos:start="145:72" pos:end="145:72"><literal type="number" pos:start="145:72" pos:end="145:72">0</literal></expr></argument>, <argument pos:start="145:75" pos:end="145:84"><expr pos:start="145:75" pos:end="145:84"><name pos:start="145:75" pos:end="145:84"><name pos:start="145:75" pos:end="145:77">cmd</name><operator pos:start="145:78" pos:end="145:79">-&gt;</operator><name pos:start="145:80" pos:end="145:84">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:40"><expr pos:start="147:9" pos:end="147:39"><call pos:start="147:9" pos:end="147:39"><name pos:start="147:9" pos:end="147:28">ff_command_queue_pop</name><argument_list pos:start="147:29" pos:end="147:39">(<argument pos:start="147:30" pos:end="147:38"><expr pos:start="147:30" pos:end="147:38"><name pos:start="147:30" pos:end="147:38"><name pos:start="147:30" pos:end="147:33">link</name><operator pos:start="147:34" pos:end="147:35">-&gt;</operator><name pos:start="147:36" pos:end="147:38">dst</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:38"><expr pos:start="149:9" pos:end="149:37"><name pos:start="149:9" pos:end="149:11">cmd</name><operator pos:start="149:12" pos:end="149:12">=</operator> <name pos:start="149:14" pos:end="149:37"><name pos:start="149:14" pos:end="149:17">link</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:22">dst</name><operator pos:start="149:23" pos:end="149:24">-&gt;</operator><name pos:start="149:25" pos:end="149:37">command_queue</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="155:5" pos:end="155:19"><expr pos:start="155:5" pos:end="155:18"><name pos:start="155:5" pos:end="155:7">pts</name> <operator pos:start="155:9" pos:end="155:9">=</operator> <name pos:start="155:11" pos:end="155:18"><name pos:start="155:11" pos:end="155:13">out</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:18">pts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:34"><expr pos:start="157:5" pos:end="157:33"><name pos:start="157:5" pos:end="157:7">ret</name> <operator pos:start="157:9" pos:end="157:9">=</operator> <call pos:start="157:11" pos:end="157:33"><name pos:start="157:11" pos:end="157:22">filter_frame</name><argument_list pos:start="157:23" pos:end="157:33">(<argument pos:start="157:24" pos:end="157:27"><expr pos:start="157:24" pos:end="157:27"><name pos:start="157:24" pos:end="157:27">link</name></expr></argument>, <argument pos:start="157:30" pos:end="157:32"><expr pos:start="157:30" pos:end="157:32"><name pos:start="157:30" pos:end="157:32">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:42"><expr pos:start="159:5" pos:end="159:41"><call pos:start="159:5" pos:end="159:41"><name pos:start="159:5" pos:end="159:30">ff_update_link_current_pts</name><argument_list pos:start="159:31" pos:end="159:41">(<argument pos:start="159:32" pos:end="159:35"><expr pos:start="159:32" pos:end="159:35"><name pos:start="159:32" pos:end="159:35">link</name></expr></argument>, <argument pos:start="159:38" pos:end="159:40"><expr pos:start="159:38" pos:end="159:40"><name pos:start="159:38" pos:end="159:40">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="161:5" pos:end="161:15">return <expr pos:start="161:12" pos:end="161:14"><name pos:start="161:12" pos:end="161:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
