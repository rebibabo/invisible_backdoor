<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20762.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">vmdk_is_cid_valid</name><parameter_list pos:start="1:29" pos:end="1:50">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:45">BlockDriverState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVVmdkState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:21">cur_pcid</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="27:5"><if pos:start="11:5" pos:end="27:5">if <condition pos:start="11:8" pos:end="11:39">(<expr pos:start="11:9" pos:end="11:38"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:23"><name pos:start="11:10" pos:end="11:10">s</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:23">cid_checked</name></name> <operator pos:start="11:25" pos:end="11:26">&amp;&amp;</operator> <name pos:start="11:28" pos:end="11:38"><name pos:start="11:28" pos:end="11:29">bs</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:38">backing</name></name></expr>)</condition> <block pos:start="11:41" pos:end="27:5">{<block_content pos:start="13:9" pos:end="25:9">

        <decl_stmt pos:start="13:9" pos:end="13:49"><decl pos:start="13:9" pos:end="13:48"><type pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:24">BlockDriverState</name> <modifier pos:start="13:26" pos:end="13:26">*</modifier></type><name pos:start="13:27" pos:end="13:30">p_bs</name> <init pos:start="13:32" pos:end="13:48">= <expr pos:start="13:34" pos:end="13:48"><name pos:start="13:34" pos:end="13:48"><name pos:start="13:34" pos:end="13:35">bs</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:44">backing</name><operator pos:start="13:45" pos:end="13:46">-&gt;</operator><name pos:start="13:47" pos:end="13:48">bs</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="17:9" pos:end="17:42"><expr pos:start="17:9" pos:end="17:41"><name pos:start="17:9" pos:end="17:16">cur_pcid</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <call pos:start="17:20" pos:end="17:41"><name pos:start="17:20" pos:end="17:32">vmdk_read_cid</name><argument_list pos:start="17:33" pos:end="17:41">(<argument pos:start="17:34" pos:end="17:37"><expr pos:start="17:34" pos:end="17:37"><name pos:start="17:34" pos:end="17:37">p_bs</name></expr></argument>, <argument pos:start="17:40" pos:end="17:40"><expr pos:start="17:40" pos:end="17:40"><literal type="number" pos:start="17:40" pos:end="17:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="25:9"><if pos:start="19:9" pos:end="25:9">if <condition pos:start="19:12" pos:end="19:38">(<expr pos:start="19:13" pos:end="19:37"><name pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:25">parent_cid</name></name> <operator pos:start="19:27" pos:end="19:28">!=</operator> <name pos:start="19:30" pos:end="19:37">cur_pcid</name></expr>)</condition> <block pos:start="19:40" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:21">

            <comment type="block" pos:start="21:13" pos:end="21:31">/* CID not valid */</comment>

            <return pos:start="23:13" pos:end="23:21">return <expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:18">cid_checked</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:25">true</name></expr>;</expr_stmt>

    <comment type="block" pos:start="31:5" pos:end="31:19">/* CID valid */</comment>

    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
