<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9654.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint16_t</name></type> <name pos:start="1:17" pos:end="1:30">nvme_create_cq</name><parameter_list pos:start="1:31" pos:end="1:57">(<parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:42"><name pos:start="1:32" pos:end="1:39">NvmeCtrl</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">n</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:51">NvmeCmd</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">cmd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:24">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">NvmeCQueue</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">cq</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">NvmeCreateCq</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">c</name> <init pos:start="7:21" pos:end="7:41">= <expr pos:start="7:23" pos:end="7:41"><operator pos:start="7:23" pos:end="7:23">(</operator><name pos:start="7:24" pos:end="7:35">NvmeCreateCq</name> <operator pos:start="7:37" pos:end="7:37">*</operator><operator pos:start="7:38" pos:end="7:38">)</operator><name pos:start="7:39" pos:end="7:41">cmd</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:17">cqid</name> <init pos:start="9:19" pos:end="9:40">= <expr pos:start="9:21" pos:end="9:40"><call pos:start="9:21" pos:end="9:40"><name pos:start="9:21" pos:end="9:31">le16_to_cpu</name><argument_list pos:start="9:32" pos:end="9:40">(<argument pos:start="9:33" pos:end="9:39"><expr pos:start="9:33" pos:end="9:39"><name pos:start="9:33" pos:end="9:39"><name pos:start="9:33" pos:end="9:33">c</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:39">cqid</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint16_t</name></type> <name pos:start="11:14" pos:end="11:19">vector</name> <init pos:start="11:21" pos:end="11:48">= <expr pos:start="11:23" pos:end="11:48"><call pos:start="11:23" pos:end="11:48"><name pos:start="11:23" pos:end="11:33">le16_to_cpu</name><argument_list pos:start="11:34" pos:end="11:48">(<argument pos:start="11:35" pos:end="11:47"><expr pos:start="11:35" pos:end="11:47"><name pos:start="11:35" pos:end="11:47"><name pos:start="11:35" pos:end="11:35">c</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:47">irq_vector</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:42"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint16_t</name></type> <name pos:start="13:14" pos:end="13:18">qsize</name> <init pos:start="13:20" pos:end="13:42">= <expr pos:start="13:22" pos:end="13:42"><call pos:start="13:22" pos:end="13:42"><name pos:start="13:22" pos:end="13:32">le16_to_cpu</name><argument_list pos:start="13:33" pos:end="13:42">(<argument pos:start="13:34" pos:end="13:41"><expr pos:start="13:34" pos:end="13:41"><name pos:start="13:34" pos:end="13:41"><name pos:start="13:34" pos:end="13:34">c</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:41">qsize</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:47"><decl pos:start="15:5" pos:end="15:46"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint16_t</name></type> <name pos:start="15:14" pos:end="15:19">qflags</name> <init pos:start="15:21" pos:end="15:46">= <expr pos:start="15:23" pos:end="15:46"><call pos:start="15:23" pos:end="15:46"><name pos:start="15:23" pos:end="15:33">le16_to_cpu</name><argument_list pos:start="15:34" pos:end="15:46">(<argument pos:start="15:35" pos:end="15:45"><expr pos:start="15:35" pos:end="15:45"><name pos:start="15:35" pos:end="15:45"><name pos:start="15:35" pos:end="15:35">c</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:45">cq_flags</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:41"><decl pos:start="17:5" pos:end="17:40"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:17">prp1</name> <init pos:start="17:19" pos:end="17:40">= <expr pos:start="17:21" pos:end="17:40"><call pos:start="17:21" pos:end="17:40"><name pos:start="17:21" pos:end="17:31">le64_to_cpu</name><argument_list pos:start="17:32" pos:end="17:40">(<argument pos:start="17:33" pos:end="17:39"><expr pos:start="17:33" pos:end="17:39"><name pos:start="17:33" pos:end="17:39"><name pos:start="17:33" pos:end="17:33">c</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:39">prp1</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:43">(<expr pos:start="21:9" pos:end="21:42"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:13">cqid</name> <operator pos:start="21:15" pos:end="21:16">||</operator> <operator pos:start="21:18" pos:end="21:18">!</operator><call pos:start="21:19" pos:end="21:42"><name pos:start="21:19" pos:end="21:33">nvme_check_cqid</name><argument_list pos:start="21:34" pos:end="21:42">(<argument pos:start="21:35" pos:end="21:35"><expr pos:start="21:35" pos:end="21:35"><name pos:start="21:35" pos:end="21:35">n</name></expr></argument>, <argument pos:start="21:38" pos:end="21:41"><expr pos:start="21:38" pos:end="21:41"><name pos:start="21:38" pos:end="21:41">cqid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:45" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:44">

        <return pos:start="23:9" pos:end="23:44">return <expr pos:start="23:16" pos:end="23:43"><name pos:start="23:16" pos:end="23:32">NVME_INVALID_CQID</name> <operator pos:start="23:34" pos:end="23:34">|</operator> <name pos:start="23:36" pos:end="23:43">NVME_DNR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:52">(<expr pos:start="27:9" pos:end="27:51"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:14">qsize</name> <operator pos:start="27:16" pos:end="27:17">||</operator> <name pos:start="27:19" pos:end="27:23">qsize</name> <operator pos:start="27:25" pos:end="27:25">&gt;</operator> <call pos:start="27:27" pos:end="27:51"><name pos:start="27:27" pos:end="27:39">NVME_CAP_MQES</name><argument_list pos:start="27:40" pos:end="27:51">(<argument pos:start="27:41" pos:end="27:50"><expr pos:start="27:41" pos:end="27:50"><name pos:start="27:41" pos:end="27:50"><name pos:start="27:41" pos:end="27:41">n</name><operator pos:start="27:42" pos:end="27:43">-&gt;</operator><name pos:start="27:44" pos:end="27:46">bar</name><operator pos:start="27:47" pos:end="27:47">.</operator><name pos:start="27:48" pos:end="27:50">cap</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:54" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:50">

        <return pos:start="29:9" pos:end="29:50">return <expr pos:start="29:16" pos:end="29:49"><name pos:start="29:16" pos:end="29:38">NVME_MAX_QSIZE_EXCEEDED</name> <operator pos:start="29:40" pos:end="29:40">|</operator> <name pos:start="29:42" pos:end="29:49">NVME_DNR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:14">(<expr pos:start="33:9" pos:end="33:13"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:13">prp1</name></expr>)</condition> <block pos:start="33:16" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:45">

        <return pos:start="35:9" pos:end="35:45">return <expr pos:start="35:16" pos:end="35:44"><name pos:start="35:16" pos:end="35:33">NVME_INVALID_FIELD</name> <operator pos:start="35:35" pos:end="35:35">|</operator> <name pos:start="35:37" pos:end="35:44">NVME_DNR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:31">(<expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:14">vector</name> <operator pos:start="39:16" pos:end="39:16">&gt;</operator> <name pos:start="39:18" pos:end="39:30"><name pos:start="39:18" pos:end="39:18">n</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:30">num_queues</name></name></expr>)</condition> <block pos:start="39:33" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:50">

        <return pos:start="41:9" pos:end="41:50">return <expr pos:start="41:16" pos:end="41:49"><name pos:start="41:16" pos:end="41:38">NVME_INVALID_IRQ_VECTOR</name> <operator pos:start="41:40" pos:end="41:40">|</operator> <name pos:start="41:42" pos:end="41:49">NVME_DNR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:36">(<expr pos:start="45:9" pos:end="45:35"><operator pos:start="45:9" pos:end="45:9">!</operator><operator pos:start="45:10" pos:end="45:10">(</operator><call pos:start="45:11" pos:end="45:34"><name pos:start="45:11" pos:end="45:26">NVME_CQ_FLAGS_PC</name><argument_list pos:start="45:27" pos:end="45:34">(<argument pos:start="45:28" pos:end="45:33"><expr pos:start="45:28" pos:end="45:33"><name pos:start="45:28" pos:end="45:33">qflags</name></expr></argument>)</argument_list></call><operator pos:start="45:35" pos:end="45:35">)</operator></expr>)</condition> <block pos:start="45:38" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:45">

        <return pos:start="47:9" pos:end="47:45">return <expr pos:start="47:16" pos:end="47:44"><name pos:start="47:16" pos:end="47:33">NVME_INVALID_FIELD</name> <operator pos:start="47:35" pos:end="47:35">|</operator> <name pos:start="47:37" pos:end="47:44">NVME_DNR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:32"><expr pos:start="53:5" pos:end="53:31"><name pos:start="53:5" pos:end="53:6">cq</name> <operator pos:start="53:8" pos:end="53:8">=</operator> <call pos:start="53:10" pos:end="53:31"><name pos:start="53:10" pos:end="53:18">g_malloc0</name><argument_list pos:start="53:19" pos:end="53:31">(<argument pos:start="53:20" pos:end="53:30"><expr pos:start="53:20" pos:end="53:30"><sizeof pos:start="53:20" pos:end="53:30">sizeof<argument_list pos:start="53:26" pos:end="53:30">(<argument pos:start="53:27" pos:end="53:29"><expr pos:start="53:27" pos:end="53:29"><operator pos:start="53:27" pos:end="53:27">*</operator><name pos:start="53:28" pos:end="53:29">cq</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="57:35"><expr pos:start="55:5" pos:end="57:34"><call pos:start="55:5" pos:end="57:34"><name pos:start="55:5" pos:end="55:16">nvme_init_cq</name><argument_list pos:start="55:17" pos:end="57:34">(<argument pos:start="55:18" pos:end="55:19"><expr pos:start="55:18" pos:end="55:19"><name pos:start="55:18" pos:end="55:19">cq</name></expr></argument>, <argument pos:start="55:22" pos:end="55:22"><expr pos:start="55:22" pos:end="55:22"><name pos:start="55:22" pos:end="55:22">n</name></expr></argument>, <argument pos:start="55:25" pos:end="55:28"><expr pos:start="55:25" pos:end="55:28"><name pos:start="55:25" pos:end="55:28">prp1</name></expr></argument>, <argument pos:start="55:31" pos:end="55:34"><expr pos:start="55:31" pos:end="55:34"><name pos:start="55:31" pos:end="55:34">cqid</name></expr></argument>, <argument pos:start="55:37" pos:end="55:42"><expr pos:start="55:37" pos:end="55:42"><name pos:start="55:37" pos:end="55:42">vector</name></expr></argument>, <argument pos:start="55:45" pos:end="55:53"><expr pos:start="55:45" pos:end="55:53"><name pos:start="55:45" pos:end="55:49">qsize</name> <operator pos:start="55:51" pos:end="55:51">+</operator> <literal type="number" pos:start="55:53" pos:end="55:53">1</literal></expr></argument>,

        <argument pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:33"><call pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:25">NVME_CQ_FLAGS_IEN</name><argument_list pos:start="57:26" pos:end="57:33">(<argument pos:start="57:27" pos:end="57:32"><expr pos:start="57:27" pos:end="57:32"><name pos:start="57:27" pos:end="57:32">qflags</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="59:5" pos:end="59:24">return <expr pos:start="59:12" pos:end="59:23"><name pos:start="59:12" pos:end="59:23">NVME_SUCCESS</name></expr>;</return>

</block_content>}</block></function>
</unit>
