<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24834.c" pos:tabs="8"><function pos:start="1:1" pos:end="241:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">ff_hevc_decode_short_term_rps</name><parameter_list pos:start="1:34" pos:end="3:74">(<parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:48"><name pos:start="1:35" pos:end="1:45">HEVCContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:67"><decl pos:start="1:51" pos:end="1:67"><type pos:start="1:51" pos:end="1:67"><name pos:start="1:51" pos:end="1:62">ShortTermRPS</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">rps</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:52"><decl pos:start="3:35" pos:end="3:52"><type pos:start="3:35" pos:end="3:52"><specifier pos:start="3:35" pos:end="3:39">const</specifier> <name pos:start="3:41" pos:end="3:47">HEVCSPS</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:52">sps</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:73"><decl pos:start="3:55" pos:end="3:73"><type pos:start="3:55" pos:end="3:73"><name pos:start="3:55" pos:end="3:57">int</name></type> <name pos:start="3:59" pos:end="3:73">is_slice_header</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="241:1">{<block_content pos:start="7:5" pos:end="239:13">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">HEVCLocalContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">lc</name> <init pos:start="7:26" pos:end="7:36">= <expr pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:28">s</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:36">HEVClc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:23">rps_predict</name> <init pos:start="9:25" pos:end="9:27">= <expr pos:start="9:27" pos:end="9:27"><literal type="number" pos:start="9:27" pos:end="9:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">delta_poc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">k0</name> <init pos:start="13:12" pos:end="13:14">= <expr pos:start="13:14" pos:end="13:14"><literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">k1</name> <init pos:start="15:12" pos:end="15:14">= <expr pos:start="15:14" pos:end="15:14"><literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">k</name>  <init pos:start="17:12" pos:end="17:14">= <expr pos:start="17:14" pos:end="17:14"><literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>



    <decl_stmt pos:start="23:5" pos:end="23:32"><decl pos:start="23:5" pos:end="23:31"><type pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:17">GetBitContext</name> <modifier pos:start="23:19" pos:end="23:19">*</modifier></type><name pos:start="23:20" pos:end="23:21">gb</name> <init pos:start="23:23" pos:end="23:31">= <expr pos:start="23:25" pos:end="23:31"><operator pos:start="23:25" pos:end="23:25">&amp;</operator><name pos:start="23:26" pos:end="23:31"><name pos:start="23:26" pos:end="23:27">lc</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:31">gb</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="29:36"><if pos:start="27:5" pos:end="29:36">if <condition pos:start="27:8" pos:end="27:45">(<expr pos:start="27:9" pos:end="27:44"><name pos:start="27:9" pos:end="27:11">rps</name> <operator pos:start="27:13" pos:end="27:14">!=</operator> <name pos:start="27:16" pos:end="27:26"><name pos:start="27:16" pos:end="27:18">sps</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:26">st_rps</name></name> <operator pos:start="27:28" pos:end="27:29">&amp;&amp;</operator> <name pos:start="27:31" pos:end="27:44"><name pos:start="27:31" pos:end="27:33">sps</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:44">nb_st_rps</name></name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:36"><block_content pos:start="29:9" pos:end="29:36">

        <expr_stmt pos:start="29:9" pos:end="29:36"><expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:19">rps_predict</name> <operator pos:start="29:21" pos:end="29:21">=</operator> <call pos:start="29:23" pos:end="29:35"><name pos:start="29:23" pos:end="29:31">get_bits1</name><argument_list pos:start="29:32" pos:end="29:35">(<argument pos:start="29:33" pos:end="29:34"><expr pos:start="29:33" pos:end="29:34"><name pos:start="29:33" pos:end="29:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="237:5"><if pos:start="33:5" pos:end="181:5">if <condition pos:start="33:8" pos:end="33:20">(<expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:19">rps_predict</name></expr>)</condition> <block pos:start="33:22" pos:end="181:5">{<block_content pos:start="35:9" pos:end="179:9">

        <decl_stmt pos:start="35:9" pos:end="35:37"><decl pos:start="35:9" pos:end="35:36"><type pos:start="35:9" pos:end="35:28"><specifier pos:start="35:9" pos:end="35:13">const</specifier> <name pos:start="35:15" pos:end="35:26">ShortTermRPS</name> <modifier pos:start="35:28" pos:end="35:28">*</modifier></type><name pos:start="35:29" pos:end="35:36">rps_ridx</name></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:37"><decl pos:start="37:9" pos:end="37:21"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:21">delta_rps</name></decl>, <decl pos:start="37:24" pos:end="37:36"><type ref="prev" pos:start="37:9" pos:end="37:11"/><name pos:start="37:24" pos:end="37:36">abs_delta_rps</name></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:35"><decl pos:start="39:9" pos:end="39:34"><type pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:15">uint8_t</name></type> <name pos:start="39:17" pos:end="39:30">use_delta_flag</name> <init pos:start="39:32" pos:end="39:34">= <expr pos:start="39:34" pos:end="39:34"><literal type="number" pos:start="39:34" pos:end="39:34">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:31"><decl pos:start="41:9" pos:end="41:30"><type pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:15">uint8_t</name></type> <name pos:start="41:17" pos:end="41:30">delta_rps_sign</name></decl>;</decl_stmt>



        <if_stmt pos:start="45:9" pos:end="65:59"><if pos:start="45:9" pos:end="63:9">if <condition pos:start="45:12" pos:end="45:28">(<expr pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:27">is_slice_header</name></expr>)</condition> <block pos:start="45:30" pos:end="63:9">{<block_content pos:start="47:13" pos:end="61:64">

            <decl_stmt pos:start="47:13" pos:end="47:64"><decl pos:start="47:13" pos:end="47:63"><type pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:20">unsigned</name> <name pos:start="47:22" pos:end="47:24">int</name></type> <name pos:start="47:26" pos:end="47:34">delta_idx</name> <init pos:start="47:36" pos:end="47:63">= <expr pos:start="47:38" pos:end="47:63"><call pos:start="47:38" pos:end="47:59"><name pos:start="47:38" pos:end="47:55">get_ue_golomb_long</name><argument_list pos:start="47:56" pos:end="47:59">(<argument pos:start="47:57" pos:end="47:58"><expr pos:start="47:57" pos:end="47:58"><name pos:start="47:57" pos:end="47:58">gb</name></expr></argument>)</argument_list></call> <operator pos:start="47:61" pos:end="47:61">+</operator> <literal type="number" pos:start="47:63" pos:end="47:63">1</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="49:13" pos:end="59:13"><if pos:start="49:13" pos:end="59:13">if <condition pos:start="49:16" pos:end="49:43">(<expr pos:start="49:17" pos:end="49:42"><name pos:start="49:17" pos:end="49:25">delta_idx</name> <operator pos:start="49:27" pos:end="49:27">&gt;</operator> <name pos:start="49:29" pos:end="49:42"><name pos:start="49:29" pos:end="49:31">sps</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:42">nb_st_rps</name></name></expr>)</condition> <block pos:start="49:45" pos:end="59:13">{<block_content pos:start="51:17" pos:end="57:43">

                <expr_stmt pos:start="51:17" pos:end="55:50"><expr pos:start="51:17" pos:end="55:49"><call pos:start="51:17" pos:end="55:49"><name pos:start="51:17" pos:end="51:22">av_log</name><argument_list pos:start="51:23" pos:end="55:49">(<argument pos:start="51:24" pos:end="51:31"><expr pos:start="51:24" pos:end="51:31"><name pos:start="51:24" pos:end="51:31"><name pos:start="51:24" pos:end="51:24">s</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:31">avctx</name></name></expr></argument>, <argument pos:start="51:34" pos:end="51:45"><expr pos:start="51:34" pos:end="51:45"><name pos:start="51:34" pos:end="51:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="53:24" pos:end="53:83"><expr pos:start="53:24" pos:end="53:83"><literal type="string" pos:start="53:24" pos:end="53:83">"Invalid value of delta_idx in slice header RPS: %d &gt; %d.\n"</literal></expr></argument>,

                       <argument pos:start="55:24" pos:end="55:32"><expr pos:start="55:24" pos:end="55:32"><name pos:start="55:24" pos:end="55:32">delta_idx</name></expr></argument>, <argument pos:start="55:35" pos:end="55:48"><expr pos:start="55:35" pos:end="55:48"><name pos:start="55:35" pos:end="55:48"><name pos:start="55:35" pos:end="55:37">sps</name><operator pos:start="55:38" pos:end="55:39">-&gt;</operator><name pos:start="55:40" pos:end="55:48">nb_st_rps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="57:17" pos:end="57:43">return <expr pos:start="57:24" pos:end="57:42"><name pos:start="57:24" pos:end="57:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:64"><expr pos:start="61:13" pos:end="61:63"><name pos:start="61:13" pos:end="61:20">rps_ridx</name> <operator pos:start="61:22" pos:end="61:22">=</operator> <operator pos:start="61:24" pos:end="61:24">&amp;</operator><name pos:start="61:25" pos:end="61:63"><name pos:start="61:25" pos:end="61:27">sps</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:35">st_rps</name><index pos:start="61:36" pos:end="61:63">[<expr pos:start="61:37" pos:end="61:62"><name pos:start="61:37" pos:end="61:50"><name pos:start="61:37" pos:end="61:39">sps</name><operator pos:start="61:40" pos:end="61:41">-&gt;</operator><name pos:start="61:42" pos:end="61:50">nb_st_rps</name></name> <operator pos:start="61:52" pos:end="61:52">-</operator> <name pos:start="61:54" pos:end="61:62">delta_idx</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="65:59">else<block type="pseudo" pos:start="65:13" pos:end="65:59"><block_content pos:start="65:13" pos:end="65:59">

            <expr_stmt pos:start="65:13" pos:end="65:59"><expr pos:start="65:13" pos:end="65:58"><name pos:start="65:13" pos:end="65:20">rps_ridx</name> <operator pos:start="65:22" pos:end="65:22">=</operator> <operator pos:start="65:24" pos:end="65:24">&amp;</operator><name pos:start="65:25" pos:end="65:58"><name pos:start="65:25" pos:end="65:27">sps</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:35">st_rps</name><index pos:start="65:36" pos:end="65:58">[<expr pos:start="65:37" pos:end="65:57"><name pos:start="65:37" pos:end="65:39">rps</name> <operator pos:start="65:41" pos:end="65:41">-</operator> <name pos:start="65:43" pos:end="65:53"><name pos:start="65:43" pos:end="65:45">sps</name><operator pos:start="65:46" pos:end="65:47">-&gt;</operator><name pos:start="65:48" pos:end="65:53">st_rps</name></name> <operator pos:start="65:55" pos:end="65:55">-</operator> <literal type="number" pos:start="65:57" pos:end="65:57">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:39"><expr pos:start="69:9" pos:end="69:38"><name pos:start="69:9" pos:end="69:22">delta_rps_sign</name> <operator pos:start="69:24" pos:end="69:24">=</operator> <call pos:start="69:26" pos:end="69:38"><name pos:start="69:26" pos:end="69:34">get_bits1</name><argument_list pos:start="69:35" pos:end="69:38">(<argument pos:start="69:36" pos:end="69:37"><expr pos:start="69:36" pos:end="69:37"><name pos:start="69:36" pos:end="69:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:52"><expr pos:start="71:9" pos:end="71:51"><name pos:start="71:9" pos:end="71:21">abs_delta_rps</name>  <operator pos:start="71:24" pos:end="71:24">=</operator> <call pos:start="71:26" pos:end="71:47"><name pos:start="71:26" pos:end="71:43">get_ue_golomb_long</name><argument_list pos:start="71:44" pos:end="71:47">(<argument pos:start="71:45" pos:end="71:46"><expr pos:start="71:45" pos:end="71:46"><name pos:start="71:45" pos:end="71:46">gb</name></expr></argument>)</argument_list></call> <operator pos:start="71:49" pos:end="71:49">+</operator> <literal type="number" pos:start="71:51" pos:end="71:51">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:69"><expr pos:start="73:9" pos:end="73:68"><name pos:start="73:9" pos:end="73:17">delta_rps</name>      <operator pos:start="73:24" pos:end="73:24">=</operator> <operator pos:start="73:26" pos:end="73:26">(</operator><literal type="number" pos:start="73:27" pos:end="73:29">1</literal> <operator pos:start="73:29" pos:end="73:29">-</operator> <operator pos:start="73:31" pos:end="73:31">(</operator><name pos:start="73:32" pos:end="73:45">delta_rps_sign</name> <operator pos:start="73:47" pos:end="73:48">&lt;&lt;</operator> <literal type="number" pos:start="73:50" pos:end="73:50">1</literal><operator pos:start="73:51" pos:end="73:51">)</operator><operator pos:start="73:52" pos:end="73:52">)</operator> <operator pos:start="73:54" pos:end="73:54">*</operator> <name pos:start="73:56" pos:end="73:68">abs_delta_rps</name></expr>;</expr_stmt>

        <for pos:start="75:9" pos:end="111:9">for <control pos:start="75:13" pos:end="75:55">(<init pos:start="75:14" pos:end="75:19"><expr pos:start="75:14" pos:end="75:18"><name pos:start="75:14" pos:end="75:14">i</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <literal type="number" pos:start="75:18" pos:end="75:18">0</literal></expr>;</init> <condition pos:start="75:21" pos:end="75:50"><expr pos:start="75:21" pos:end="75:49"><name pos:start="75:21" pos:end="75:21">i</name> <operator pos:start="75:23" pos:end="75:24">&lt;=</operator> <name pos:start="75:26" pos:end="75:49"><name pos:start="75:26" pos:end="75:33">rps_ridx</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:49">num_delta_pocs</name></name></expr>;</condition> <incr pos:start="75:52" pos:end="75:54"><expr pos:start="75:52" pos:end="75:54"><name pos:start="75:52" pos:end="75:52">i</name><operator pos:start="75:53" pos:end="75:54">++</operator></expr></incr>)</control> <block pos:start="75:57" pos:end="111:9">{<block_content pos:start="77:13" pos:end="109:13">

            <decl_stmt pos:start="77:13" pos:end="77:52"><decl pos:start="77:13" pos:end="77:51"><type pos:start="77:13" pos:end="77:15"><name pos:start="77:13" pos:end="77:15">int</name></type> <name pos:start="77:17" pos:end="77:20">used</name> <init pos:start="77:22" pos:end="77:51">= <expr pos:start="77:24" pos:end="77:51"><name pos:start="77:24" pos:end="77:35"><name pos:start="77:24" pos:end="77:26">rps</name><operator pos:start="77:27" pos:end="77:28">-&gt;</operator><name pos:start="77:29" pos:end="77:32">used</name><index pos:start="77:33" pos:end="77:35">[<expr pos:start="77:34" pos:end="77:34"><name pos:start="77:34" pos:end="77:34">k</name></expr>]</index></name> <operator pos:start="77:37" pos:end="77:37">=</operator> <call pos:start="77:39" pos:end="77:51"><name pos:start="77:39" pos:end="77:47">get_bits1</name><argument_list pos:start="77:48" pos:end="77:51">(<argument pos:start="77:49" pos:end="77:50"><expr pos:start="77:49" pos:end="77:50"><name pos:start="77:49" pos:end="77:50">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="81:13" pos:end="83:47"><if pos:start="81:13" pos:end="83:47">if <condition pos:start="81:16" pos:end="81:22">(<expr pos:start="81:17" pos:end="81:21"><operator pos:start="81:17" pos:end="81:17">!</operator><name pos:start="81:18" pos:end="81:21">used</name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:47"><block_content pos:start="83:17" pos:end="83:47">

                <expr_stmt pos:start="83:17" pos:end="83:47"><expr pos:start="83:17" pos:end="83:46"><name pos:start="83:17" pos:end="83:30">use_delta_flag</name> <operator pos:start="83:32" pos:end="83:32">=</operator> <call pos:start="83:34" pos:end="83:46"><name pos:start="83:34" pos:end="83:42">get_bits1</name><argument_list pos:start="83:43" pos:end="83:46">(<argument pos:start="83:44" pos:end="83:45"><expr pos:start="83:44" pos:end="83:45"><name pos:start="83:44" pos:end="83:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="87:13" pos:end="109:13"><if pos:start="87:13" pos:end="109:13">if <condition pos:start="87:16" pos:end="87:39">(<expr pos:start="87:17" pos:end="87:38"><name pos:start="87:17" pos:end="87:20">used</name> <operator pos:start="87:22" pos:end="87:23">||</operator> <name pos:start="87:25" pos:end="87:38">use_delta_flag</name></expr>)</condition> <block pos:start="87:41" pos:end="109:13">{<block_content pos:start="89:17" pos:end="107:20">

                <if_stmt pos:start="89:17" pos:end="95:42"><if pos:start="89:17" pos:end="91:67">if <condition pos:start="89:20" pos:end="89:49">(<expr pos:start="89:21" pos:end="89:48"><name pos:start="89:21" pos:end="89:21">i</name> <operator pos:start="89:23" pos:end="89:23">&lt;</operator> <name pos:start="89:25" pos:end="89:48"><name pos:start="89:25" pos:end="89:32">rps_ridx</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:48">num_delta_pocs</name></name></expr>)</condition><block type="pseudo" pos:start="91:21" pos:end="91:67"><block_content pos:start="91:21" pos:end="91:67">

                    <expr_stmt pos:start="91:21" pos:end="91:67"><expr pos:start="91:21" pos:end="91:66"><name pos:start="91:21" pos:end="91:29">delta_poc</name> <operator pos:start="91:31" pos:end="91:31">=</operator> <name pos:start="91:33" pos:end="91:41">delta_rps</name> <operator pos:start="91:43" pos:end="91:43">+</operator> <name pos:start="91:45" pos:end="91:66"><name pos:start="91:45" pos:end="91:52">rps_ridx</name><operator pos:start="91:53" pos:end="91:54">-&gt;</operator><name pos:start="91:55" pos:end="91:63">delta_poc</name><index pos:start="91:64" pos:end="91:66">[<expr pos:start="91:65" pos:end="91:65"><name pos:start="91:65" pos:end="91:65">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="93:17" pos:end="95:42">else<block type="pseudo" pos:start="95:21" pos:end="95:42"><block_content pos:start="95:21" pos:end="95:42">

                    <expr_stmt pos:start="95:21" pos:end="95:42"><expr pos:start="95:21" pos:end="95:41"><name pos:start="95:21" pos:end="95:29">delta_poc</name> <operator pos:start="95:31" pos:end="95:31">=</operator> <name pos:start="95:33" pos:end="95:41">delta_rps</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:46"><expr pos:start="97:17" pos:end="97:45"><name pos:start="97:17" pos:end="97:33"><name pos:start="97:17" pos:end="97:19">rps</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:30">delta_poc</name><index pos:start="97:31" pos:end="97:33">[<expr pos:start="97:32" pos:end="97:32"><name pos:start="97:32" pos:end="97:32">k</name></expr>]</index></name> <operator pos:start="97:35" pos:end="97:35">=</operator> <name pos:start="97:37" pos:end="97:45">delta_poc</name></expr>;</expr_stmt>

                <if_stmt pos:start="99:17" pos:end="105:25"><if pos:start="99:17" pos:end="101:25">if <condition pos:start="99:20" pos:end="99:34">(<expr pos:start="99:21" pos:end="99:33"><name pos:start="99:21" pos:end="99:29">delta_poc</name> <operator pos:start="99:31" pos:end="99:31">&lt;</operator> <literal type="number" pos:start="99:33" pos:end="99:33">0</literal></expr>)</condition><block type="pseudo" pos:start="101:21" pos:end="101:25"><block_content pos:start="101:21" pos:end="101:25">

                    <expr_stmt pos:start="101:21" pos:end="101:25"><expr pos:start="101:21" pos:end="101:24"><name pos:start="101:21" pos:end="101:22">k0</name><operator pos:start="101:23" pos:end="101:24">++</operator></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="103:17" pos:end="105:25">else<block type="pseudo" pos:start="105:21" pos:end="105:25"><block_content pos:start="105:21" pos:end="105:25">

                    <expr_stmt pos:start="105:21" pos:end="105:25"><expr pos:start="105:21" pos:end="105:24"><name pos:start="105:21" pos:end="105:22">k1</name><operator pos:start="105:23" pos:end="105:24">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:20"><expr pos:start="107:17" pos:end="107:19"><name pos:start="107:17" pos:end="107:17">k</name><operator pos:start="107:18" pos:end="107:19">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="115:9" pos:end="115:35"><expr pos:start="115:9" pos:end="115:34"><name pos:start="115:9" pos:end="115:27"><name pos:start="115:9" pos:end="115:11">rps</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:27">num_delta_pocs</name></name>    <operator pos:start="115:32" pos:end="115:32">=</operator> <name pos:start="115:34" pos:end="115:34">k</name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:36"><expr pos:start="117:9" pos:end="117:35"><name pos:start="117:9" pos:end="117:30"><name pos:start="117:9" pos:end="117:11">rps</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:30">num_negative_pics</name></name> <operator pos:start="117:32" pos:end="117:32">=</operator> <name pos:start="117:34" pos:end="117:35">k0</name></expr>;</expr_stmt>

        <comment type="line" pos:start="119:9" pos:end="119:52">// sort in increasing order (smallest first)</comment>

        <if_stmt pos:start="121:9" pos:end="151:9"><if pos:start="121:9" pos:end="151:9">if <condition pos:start="121:12" pos:end="121:37">(<expr pos:start="121:13" pos:end="121:36"><name pos:start="121:13" pos:end="121:31"><name pos:start="121:13" pos:end="121:15">rps</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:31">num_delta_pocs</name></name> <operator pos:start="121:33" pos:end="121:34">!=</operator> <literal type="number" pos:start="121:36" pos:end="121:36">0</literal></expr>)</condition> <block pos:start="121:39" pos:end="151:9">{<block_content pos:start="123:13" pos:end="149:13">

            <decl_stmt pos:start="123:13" pos:end="123:26"><decl pos:start="123:13" pos:end="123:20"><type pos:start="123:13" pos:end="123:15"><name pos:start="123:13" pos:end="123:15">int</name></type> <name pos:start="123:17" pos:end="123:20">used</name></decl>, <decl pos:start="123:23" pos:end="123:25"><type ref="prev" pos:start="123:13" pos:end="123:15"/><name pos:start="123:23" pos:end="123:25">tmp</name></decl>;</decl_stmt>

            <for pos:start="125:13" pos:end="149:13">for <control pos:start="125:17" pos:end="125:53">(<init pos:start="125:18" pos:end="125:23"><expr pos:start="125:18" pos:end="125:22"><name pos:start="125:18" pos:end="125:18">i</name> <operator pos:start="125:20" pos:end="125:20">=</operator> <literal type="number" pos:start="125:22" pos:end="125:22">1</literal></expr>;</init> <condition pos:start="125:25" pos:end="125:48"><expr pos:start="125:25" pos:end="125:47"><name pos:start="125:25" pos:end="125:25">i</name> <operator pos:start="125:27" pos:end="125:27">&lt;</operator> <name pos:start="125:29" pos:end="125:47"><name pos:start="125:29" pos:end="125:31">rps</name><operator pos:start="125:32" pos:end="125:33">-&gt;</operator><name pos:start="125:34" pos:end="125:47">num_delta_pocs</name></name></expr>;</condition> <incr pos:start="125:50" pos:end="125:52"><expr pos:start="125:50" pos:end="125:52"><name pos:start="125:50" pos:end="125:50">i</name><operator pos:start="125:51" pos:end="125:52">++</operator></expr></incr>)</control> <block pos:start="125:55" pos:end="149:13">{<block_content pos:start="127:17" pos:end="147:17">

                <expr_stmt pos:start="127:17" pos:end="127:46"><expr pos:start="127:17" pos:end="127:45"><name pos:start="127:17" pos:end="127:25">delta_poc</name> <operator pos:start="127:27" pos:end="127:27">=</operator> <name pos:start="127:29" pos:end="127:45"><name pos:start="127:29" pos:end="127:31">rps</name><operator pos:start="127:32" pos:end="127:33">-&gt;</operator><name pos:start="127:34" pos:end="127:42">delta_poc</name><index pos:start="127:43" pos:end="127:45">[<expr pos:start="127:44" pos:end="127:44"><name pos:start="127:44" pos:end="127:44">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:41"><expr pos:start="129:17" pos:end="129:40"><name pos:start="129:17" pos:end="129:20">used</name>      <operator pos:start="129:27" pos:end="129:27">=</operator> <name pos:start="129:29" pos:end="129:40"><name pos:start="129:29" pos:end="129:31">rps</name><operator pos:start="129:32" pos:end="129:33">-&gt;</operator><name pos:start="129:34" pos:end="129:37">used</name><index pos:start="129:38" pos:end="129:40">[<expr pos:start="129:39" pos:end="129:39"><name pos:start="129:39" pos:end="129:39">i</name></expr>]</index></name></expr>;</expr_stmt>

                <for pos:start="131:17" pos:end="147:17">for <control pos:start="131:21" pos:end="131:44">(<init pos:start="131:22" pos:end="131:31"><expr pos:start="131:22" pos:end="131:30"><name pos:start="131:22" pos:end="131:22">k</name> <operator pos:start="131:24" pos:end="131:24">=</operator> <name pos:start="131:26" pos:end="131:26">i</name> <operator pos:start="131:28" pos:end="131:28">-</operator> <literal type="number" pos:start="131:30" pos:end="131:30">1</literal></expr>;</init> <condition pos:start="131:33" pos:end="131:39"><expr pos:start="131:33" pos:end="131:38"><name pos:start="131:33" pos:end="131:33">k</name> <operator pos:start="131:35" pos:end="131:36">&gt;=</operator> <literal type="number" pos:start="131:38" pos:end="131:38">0</literal></expr>;</condition> <incr pos:start="131:41" pos:end="131:43"><expr pos:start="131:41" pos:end="131:43"><name pos:start="131:41" pos:end="131:41">k</name><operator pos:start="131:42" pos:end="131:43">--</operator></expr></incr>)</control> <block pos:start="131:46" pos:end="147:17">{<block_content pos:start="133:21" pos:end="145:21">

                    <expr_stmt pos:start="133:21" pos:end="133:44"><expr pos:start="133:21" pos:end="133:43"><name pos:start="133:21" pos:end="133:23">tmp</name> <operator pos:start="133:25" pos:end="133:25">=</operator> <name pos:start="133:27" pos:end="133:43"><name pos:start="133:27" pos:end="133:29">rps</name><operator pos:start="133:30" pos:end="133:31">-&gt;</operator><name pos:start="133:32" pos:end="133:40">delta_poc</name><index pos:start="133:41" pos:end="133:43">[<expr pos:start="133:42" pos:end="133:42"><name pos:start="133:42" pos:end="133:42">k</name></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="135:21" pos:end="145:21"><if pos:start="135:21" pos:end="145:21">if <condition pos:start="135:24" pos:end="135:40">(<expr pos:start="135:25" pos:end="135:39"><name pos:start="135:25" pos:end="135:33">delta_poc</name> <operator pos:start="135:35" pos:end="135:35">&lt;</operator> <name pos:start="135:37" pos:end="135:39">tmp</name></expr>)</condition> <block pos:start="135:42" pos:end="145:21">{<block_content pos:start="137:25" pos:end="143:53">

                        <expr_stmt pos:start="137:25" pos:end="137:52"><expr pos:start="137:25" pos:end="137:51"><name pos:start="137:25" pos:end="137:45"><name pos:start="137:25" pos:end="137:27">rps</name><operator pos:start="137:28" pos:end="137:29">-&gt;</operator><name pos:start="137:30" pos:end="137:38">delta_poc</name><index pos:start="137:39" pos:end="137:45">[<expr pos:start="137:40" pos:end="137:44"><name pos:start="137:40" pos:end="137:40">k</name> <operator pos:start="137:42" pos:end="137:42">+</operator> <literal type="number" pos:start="137:44" pos:end="137:44">1</literal></expr>]</index></name> <operator pos:start="137:47" pos:end="137:47">=</operator> <name pos:start="137:49" pos:end="137:51">tmp</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="139:25" pos:end="139:61"><expr pos:start="139:25" pos:end="139:60"><name pos:start="139:25" pos:end="139:40"><name pos:start="139:25" pos:end="139:27">rps</name><operator pos:start="139:28" pos:end="139:29">-&gt;</operator><name pos:start="139:30" pos:end="139:33">used</name><index pos:start="139:34" pos:end="139:40">[<expr pos:start="139:35" pos:end="139:39"><name pos:start="139:35" pos:end="139:35">k</name> <operator pos:start="139:37" pos:end="139:37">+</operator> <literal type="number" pos:start="139:39" pos:end="139:39">1</literal></expr>]</index></name>      <operator pos:start="139:47" pos:end="139:47">=</operator> <name pos:start="139:49" pos:end="139:60"><name pos:start="139:49" pos:end="139:51">rps</name><operator pos:start="139:52" pos:end="139:53">-&gt;</operator><name pos:start="139:54" pos:end="139:57">used</name><index pos:start="139:58" pos:end="139:60">[<expr pos:start="139:59" pos:end="139:59"><name pos:start="139:59" pos:end="139:59">k</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="141:25" pos:end="141:58"><expr pos:start="141:25" pos:end="141:57"><name pos:start="141:25" pos:end="141:41"><name pos:start="141:25" pos:end="141:27">rps</name><operator pos:start="141:28" pos:end="141:29">-&gt;</operator><name pos:start="141:30" pos:end="141:38">delta_poc</name><index pos:start="141:39" pos:end="141:41">[<expr pos:start="141:40" pos:end="141:40"><name pos:start="141:40" pos:end="141:40">k</name></expr>]</index></name>     <operator pos:start="141:47" pos:end="141:47">=</operator> <name pos:start="141:49" pos:end="141:57">delta_poc</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="143:25" pos:end="143:53"><expr pos:start="143:25" pos:end="143:52"><name pos:start="143:25" pos:end="143:36"><name pos:start="143:25" pos:end="143:27">rps</name><operator pos:start="143:28" pos:end="143:29">-&gt;</operator><name pos:start="143:30" pos:end="143:33">used</name><index pos:start="143:34" pos:end="143:36">[<expr pos:start="143:35" pos:end="143:35"><name pos:start="143:35" pos:end="143:35">k</name></expr>]</index></name>          <operator pos:start="143:47" pos:end="143:47">=</operator> <name pos:start="143:49" pos:end="143:52">used</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="153:9" pos:end="179:9"><if pos:start="153:9" pos:end="179:9">if <condition pos:start="153:12" pos:end="153:47">(<expr pos:start="153:13" pos:end="153:46"><operator pos:start="153:13" pos:end="153:13">(</operator><name pos:start="153:14" pos:end="153:35"><name pos:start="153:14" pos:end="153:16">rps</name><operator pos:start="153:17" pos:end="153:18">-&gt;</operator><name pos:start="153:19" pos:end="153:35">num_negative_pics</name></name> <operator pos:start="153:37" pos:end="153:38">&gt;&gt;</operator> <literal type="number" pos:start="153:40" pos:end="153:40">1</literal><operator pos:start="153:41" pos:end="153:41">)</operator> <operator pos:start="153:43" pos:end="153:44">!=</operator> <literal type="number" pos:start="153:46" pos:end="153:46">0</literal></expr>)</condition> <block pos:start="153:49" pos:end="179:9">{<block_content pos:start="155:13" pos:end="177:13">

            <decl_stmt pos:start="155:13" pos:end="155:21"><decl pos:start="155:13" pos:end="155:20"><type pos:start="155:13" pos:end="155:15"><name pos:start="155:13" pos:end="155:15">int</name></type> <name pos:start="155:17" pos:end="155:20">used</name></decl>;</decl_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:43"><expr pos:start="157:13" pos:end="157:42"><name pos:start="157:13" pos:end="157:13">k</name> <operator pos:start="157:15" pos:end="157:15">=</operator> <name pos:start="157:17" pos:end="157:38"><name pos:start="157:17" pos:end="157:19">rps</name><operator pos:start="157:20" pos:end="157:21">-&gt;</operator><name pos:start="157:22" pos:end="157:38">num_negative_pics</name></name> <operator pos:start="157:40" pos:end="157:40">-</operator> <literal type="number" pos:start="157:42" pos:end="157:42">1</literal></expr>;</expr_stmt>

            <comment type="line" pos:start="159:13" pos:end="159:56">// flip the negative values to largest first</comment>

            <for pos:start="161:13" pos:end="177:13">for <control pos:start="161:17" pos:end="161:61">(<init pos:start="161:18" pos:end="161:23"><expr pos:start="161:18" pos:end="161:22"><name pos:start="161:18" pos:end="161:18">i</name> <operator pos:start="161:20" pos:end="161:20">=</operator> <literal type="number" pos:start="161:22" pos:end="161:22">0</literal></expr>;</init> <condition pos:start="161:25" pos:end="161:56"><expr pos:start="161:25" pos:end="161:55"><name pos:start="161:25" pos:end="161:52"><name pos:start="161:25" pos:end="161:25">i</name> <argument_list type="generic" pos:start="161:27" pos:end="161:52">&lt; <argument pos:start="161:29" pos:end="161:50"><expr pos:start="161:29" pos:end="161:50"><name pos:start="161:29" pos:end="161:50"><name pos:start="161:29" pos:end="161:31">rps</name><operator pos:start="161:32" pos:end="161:33">-&gt;</operator><name pos:start="161:34" pos:end="161:50">num_negative_pics</name></name></expr></argument> &gt;</argument_list></name><operator pos:start="161:53" pos:end="161:53">&gt;</operator> <literal type="number" pos:start="161:55" pos:end="161:55">1</literal></expr>;</condition> <incr pos:start="161:58" pos:end="161:60"><expr pos:start="161:58" pos:end="161:60"><name pos:start="161:58" pos:end="161:58">i</name><operator pos:start="161:59" pos:end="161:60">++</operator></expr></incr>)</control> <block pos:start="161:63" pos:end="177:13">{<block_content pos:start="163:17" pos:end="175:20">

                <expr_stmt pos:start="163:17" pos:end="163:54"><expr pos:start="163:17" pos:end="163:53"><name pos:start="163:17" pos:end="163:25">delta_poc</name>         <operator pos:start="163:35" pos:end="163:35">=</operator> <name pos:start="163:37" pos:end="163:53"><name pos:start="163:37" pos:end="163:39">rps</name><operator pos:start="163:40" pos:end="163:41">-&gt;</operator><name pos:start="163:42" pos:end="163:50">delta_poc</name><index pos:start="163:51" pos:end="163:53">[<expr pos:start="163:52" pos:end="163:52"><name pos:start="163:52" pos:end="163:52">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:49"><expr pos:start="165:17" pos:end="165:48"><name pos:start="165:17" pos:end="165:20">used</name>              <operator pos:start="165:35" pos:end="165:35">=</operator> <name pos:start="165:37" pos:end="165:48"><name pos:start="165:37" pos:end="165:39">rps</name><operator pos:start="165:40" pos:end="165:41">-&gt;</operator><name pos:start="165:42" pos:end="165:45">used</name><index pos:start="165:46" pos:end="165:48">[<expr pos:start="165:47" pos:end="165:47"><name pos:start="165:47" pos:end="165:47">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:54"><expr pos:start="167:17" pos:end="167:53"><name pos:start="167:17" pos:end="167:33"><name pos:start="167:17" pos:end="167:19">rps</name><operator pos:start="167:20" pos:end="167:21">-&gt;</operator><name pos:start="167:22" pos:end="167:30">delta_poc</name><index pos:start="167:31" pos:end="167:33">[<expr pos:start="167:32" pos:end="167:32"><name pos:start="167:32" pos:end="167:32">i</name></expr>]</index></name> <operator pos:start="167:35" pos:end="167:35">=</operator> <name pos:start="167:37" pos:end="167:53"><name pos:start="167:37" pos:end="167:39">rps</name><operator pos:start="167:40" pos:end="167:41">-&gt;</operator><name pos:start="167:42" pos:end="167:50">delta_poc</name><index pos:start="167:51" pos:end="167:53">[<expr pos:start="167:52" pos:end="167:52"><name pos:start="167:52" pos:end="167:52">k</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:49"><expr pos:start="169:17" pos:end="169:48"><name pos:start="169:17" pos:end="169:28"><name pos:start="169:17" pos:end="169:19">rps</name><operator pos:start="169:20" pos:end="169:21">-&gt;</operator><name pos:start="169:22" pos:end="169:25">used</name><index pos:start="169:26" pos:end="169:28">[<expr pos:start="169:27" pos:end="169:27"><name pos:start="169:27" pos:end="169:27">i</name></expr>]</index></name>      <operator pos:start="169:35" pos:end="169:35">=</operator> <name pos:start="169:37" pos:end="169:48"><name pos:start="169:37" pos:end="169:39">rps</name><operator pos:start="169:40" pos:end="169:41">-&gt;</operator><name pos:start="169:42" pos:end="169:45">used</name><index pos:start="169:46" pos:end="169:48">[<expr pos:start="169:47" pos:end="169:47"><name pos:start="169:47" pos:end="169:47">k</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:46"><expr pos:start="171:17" pos:end="171:45"><name pos:start="171:17" pos:end="171:33"><name pos:start="171:17" pos:end="171:19">rps</name><operator pos:start="171:20" pos:end="171:21">-&gt;</operator><name pos:start="171:22" pos:end="171:30">delta_poc</name><index pos:start="171:31" pos:end="171:33">[<expr pos:start="171:32" pos:end="171:32"><name pos:start="171:32" pos:end="171:32">k</name></expr>]</index></name> <operator pos:start="171:35" pos:end="171:35">=</operator> <name pos:start="171:37" pos:end="171:45">delta_poc</name></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:41"><expr pos:start="173:17" pos:end="173:40"><name pos:start="173:17" pos:end="173:28"><name pos:start="173:17" pos:end="173:19">rps</name><operator pos:start="173:20" pos:end="173:21">-&gt;</operator><name pos:start="173:22" pos:end="173:25">used</name><index pos:start="173:26" pos:end="173:28">[<expr pos:start="173:27" pos:end="173:27"><name pos:start="173:27" pos:end="173:27">k</name></expr>]</index></name>      <operator pos:start="173:35" pos:end="173:35">=</operator> <name pos:start="173:37" pos:end="173:40">used</name></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:20"><expr pos:start="175:17" pos:end="175:19"><name pos:start="175:17" pos:end="175:17">k</name><operator pos:start="175:18" pos:end="175:19">--</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="181:7" pos:end="237:5">else <block pos:start="181:12" pos:end="237:5">{<block_content pos:start="183:9" pos:end="235:9">

        <decl_stmt pos:start="183:9" pos:end="183:44"><decl pos:start="183:9" pos:end="183:25"><type pos:start="183:9" pos:end="183:20"><name pos:start="183:9" pos:end="183:16">unsigned</name> <name pos:start="183:18" pos:end="183:20">int</name></type> <name pos:start="183:22" pos:end="183:25">prev</name></decl>, <decl pos:start="183:28" pos:end="183:43"><type ref="prev" pos:start="183:9" pos:end="183:20"/><name pos:start="183:28" pos:end="183:43">nb_positive_pics</name></decl>;</decl_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:56"><expr pos:start="185:9" pos:end="185:55"><name pos:start="185:9" pos:end="185:30"><name pos:start="185:9" pos:end="185:11">rps</name><operator pos:start="185:12" pos:end="185:13">-&gt;</operator><name pos:start="185:14" pos:end="185:30">num_negative_pics</name></name> <operator pos:start="185:32" pos:end="185:32">=</operator> <call pos:start="185:34" pos:end="185:55"><name pos:start="185:34" pos:end="185:51">get_ue_golomb_long</name><argument_list pos:start="185:52" pos:end="185:55">(<argument pos:start="185:53" pos:end="185:54"><expr pos:start="185:53" pos:end="185:54"><name pos:start="185:53" pos:end="185:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:56"><expr pos:start="187:9" pos:end="187:55"><name pos:start="187:9" pos:end="187:24">nb_positive_pics</name>       <operator pos:start="187:32" pos:end="187:32">=</operator> <call pos:start="187:34" pos:end="187:55"><name pos:start="187:34" pos:end="187:51">get_ue_golomb_long</name><argument_list pos:start="187:52" pos:end="187:55">(<argument pos:start="187:53" pos:end="187:54"><expr pos:start="187:53" pos:end="187:54"><name pos:start="187:53" pos:end="187:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="191:9" pos:end="199:9"><if pos:start="191:9" pos:end="199:9">if <condition pos:start="191:12" pos:end="193:41">(<expr pos:start="191:13" pos:end="193:40"><name pos:start="191:13" pos:end="191:34"><name pos:start="191:13" pos:end="191:15">rps</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:34">num_negative_pics</name></name> <operator pos:start="191:36" pos:end="191:37">&gt;=</operator> <name pos:start="191:39" pos:end="191:46">MAX_REFS</name> <operator pos:start="191:48" pos:end="191:49">||</operator>

            <name pos:start="193:13" pos:end="193:28">nb_positive_pics</name> <operator pos:start="193:30" pos:end="193:31">&gt;=</operator> <name pos:start="193:33" pos:end="193:40">MAX_REFS</name></expr>)</condition> <block pos:start="193:43" pos:end="199:9">{<block_content pos:start="195:13" pos:end="197:39">

            <expr_stmt pos:start="195:13" pos:end="195:83"><expr pos:start="195:13" pos:end="195:82"><call pos:start="195:13" pos:end="195:82"><name pos:start="195:13" pos:end="195:18">av_log</name><argument_list pos:start="195:19" pos:end="195:82">(<argument pos:start="195:20" pos:end="195:27"><expr pos:start="195:20" pos:end="195:27"><name pos:start="195:20" pos:end="195:27"><name pos:start="195:20" pos:end="195:20">s</name><operator pos:start="195:21" pos:end="195:22">-&gt;</operator><name pos:start="195:23" pos:end="195:27">avctx</name></name></expr></argument>, <argument pos:start="195:30" pos:end="195:41"><expr pos:start="195:30" pos:end="195:41"><name pos:start="195:30" pos:end="195:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="195:44" pos:end="195:81"><expr pos:start="195:44" pos:end="195:81"><literal type="string" pos:start="195:44" pos:end="195:81">"Too many refs in a short term RPS.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="197:13" pos:end="197:39">return <expr pos:start="197:20" pos:end="197:38"><name pos:start="197:20" pos:end="197:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="203:9" pos:end="203:72"><expr pos:start="203:9" pos:end="203:71"><name pos:start="203:9" pos:end="203:27"><name pos:start="203:9" pos:end="203:11">rps</name><operator pos:start="203:12" pos:end="203:13">-&gt;</operator><name pos:start="203:14" pos:end="203:27">num_delta_pocs</name></name> <operator pos:start="203:29" pos:end="203:29">=</operator> <name pos:start="203:31" pos:end="203:52"><name pos:start="203:31" pos:end="203:33">rps</name><operator pos:start="203:34" pos:end="203:35">-&gt;</operator><name pos:start="203:36" pos:end="203:52">num_negative_pics</name></name> <operator pos:start="203:54" pos:end="203:54">+</operator> <name pos:start="203:56" pos:end="203:71">nb_positive_pics</name></expr>;</expr_stmt>

        <if_stmt pos:start="205:9" pos:end="235:9"><if pos:start="205:9" pos:end="235:9">if <condition pos:start="205:12" pos:end="205:32">(<expr pos:start="205:13" pos:end="205:31"><name pos:start="205:13" pos:end="205:31"><name pos:start="205:13" pos:end="205:15">rps</name><operator pos:start="205:16" pos:end="205:17">-&gt;</operator><name pos:start="205:18" pos:end="205:31">num_delta_pocs</name></name></expr>)</condition> <block pos:start="205:34" pos:end="235:9">{<block_content pos:start="207:13" pos:end="233:13">

            <expr_stmt pos:start="207:13" pos:end="207:21"><expr pos:start="207:13" pos:end="207:20"><name pos:start="207:13" pos:end="207:16">prev</name> <operator pos:start="207:18" pos:end="207:18">=</operator> <literal type="number" pos:start="207:20" pos:end="207:20">0</literal></expr>;</expr_stmt>

            <for pos:start="209:13" pos:end="219:13">for <control pos:start="209:17" pos:end="209:56">(<init pos:start="209:18" pos:end="209:23"><expr pos:start="209:18" pos:end="209:22"><name pos:start="209:18" pos:end="209:18">i</name> <operator pos:start="209:20" pos:end="209:20">=</operator> <literal type="number" pos:start="209:22" pos:end="209:22">0</literal></expr>;</init> <condition pos:start="209:25" pos:end="209:51"><expr pos:start="209:25" pos:end="209:50"><name pos:start="209:25" pos:end="209:25">i</name> <operator pos:start="209:27" pos:end="209:27">&lt;</operator> <name pos:start="209:29" pos:end="209:50"><name pos:start="209:29" pos:end="209:31">rps</name><operator pos:start="209:32" pos:end="209:33">-&gt;</operator><name pos:start="209:34" pos:end="209:50">num_negative_pics</name></name></expr>;</condition> <incr pos:start="209:53" pos:end="209:55"><expr pos:start="209:53" pos:end="209:55"><name pos:start="209:53" pos:end="209:53">i</name><operator pos:start="209:54" pos:end="209:55">++</operator></expr></incr>)</control> <block pos:start="209:58" pos:end="219:13">{<block_content pos:start="211:17" pos:end="217:50">

                <expr_stmt pos:start="211:17" pos:end="211:55"><expr pos:start="211:17" pos:end="211:54"><name pos:start="211:17" pos:end="211:25">delta_poc</name> <operator pos:start="211:27" pos:end="211:27">=</operator> <call pos:start="211:29" pos:end="211:50"><name pos:start="211:29" pos:end="211:46">get_ue_golomb_long</name><argument_list pos:start="211:47" pos:end="211:50">(<argument pos:start="211:48" pos:end="211:49"><expr pos:start="211:48" pos:end="211:49"><name pos:start="211:48" pos:end="211:49">gb</name></expr></argument>)</argument_list></call> <operator pos:start="211:52" pos:end="211:52">+</operator> <literal type="number" pos:start="211:54" pos:end="211:54">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:34"><expr pos:start="213:17" pos:end="213:33"><name pos:start="213:17" pos:end="213:20">prev</name> <operator pos:start="213:22" pos:end="213:23">-=</operator> <name pos:start="213:25" pos:end="213:33">delta_poc</name></expr>;</expr_stmt>

                <expr_stmt pos:start="215:17" pos:end="215:41"><expr pos:start="215:17" pos:end="215:40"><name pos:start="215:17" pos:end="215:33"><name pos:start="215:17" pos:end="215:19">rps</name><operator pos:start="215:20" pos:end="215:21">-&gt;</operator><name pos:start="215:22" pos:end="215:30">delta_poc</name><index pos:start="215:31" pos:end="215:33">[<expr pos:start="215:32" pos:end="215:32"><name pos:start="215:32" pos:end="215:32">i</name></expr>]</index></name> <operator pos:start="215:35" pos:end="215:35">=</operator> <name pos:start="215:37" pos:end="215:40">prev</name></expr>;</expr_stmt>

                <expr_stmt pos:start="217:17" pos:end="217:50"><expr pos:start="217:17" pos:end="217:49"><name pos:start="217:17" pos:end="217:28"><name pos:start="217:17" pos:end="217:19">rps</name><operator pos:start="217:20" pos:end="217:21">-&gt;</operator><name pos:start="217:22" pos:end="217:25">used</name><index pos:start="217:26" pos:end="217:28">[<expr pos:start="217:27" pos:end="217:27"><name pos:start="217:27" pos:end="217:27">i</name></expr>]</index></name>      <operator pos:start="217:35" pos:end="217:35">=</operator> <call pos:start="217:37" pos:end="217:49"><name pos:start="217:37" pos:end="217:45">get_bits1</name><argument_list pos:start="217:46" pos:end="217:49">(<argument pos:start="217:47" pos:end="217:48"><expr pos:start="217:47" pos:end="217:48"><name pos:start="217:47" pos:end="217:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="221:13" pos:end="221:21"><expr pos:start="221:13" pos:end="221:20"><name pos:start="221:13" pos:end="221:16">prev</name> <operator pos:start="221:18" pos:end="221:18">=</operator> <literal type="number" pos:start="221:20" pos:end="221:20">0</literal></expr>;</expr_stmt>

            <for pos:start="223:13" pos:end="233:13">for <control pos:start="223:17" pos:end="223:50">(<init pos:start="223:18" pos:end="223:23"><expr pos:start="223:18" pos:end="223:22"><name pos:start="223:18" pos:end="223:18">i</name> <operator pos:start="223:20" pos:end="223:20">=</operator> <literal type="number" pos:start="223:22" pos:end="223:22">0</literal></expr>;</init> <condition pos:start="223:25" pos:end="223:45"><expr pos:start="223:25" pos:end="223:44"><name pos:start="223:25" pos:end="223:25">i</name> <operator pos:start="223:27" pos:end="223:27">&lt;</operator> <name pos:start="223:29" pos:end="223:44">nb_positive_pics</name></expr>;</condition> <incr pos:start="223:47" pos:end="223:49"><expr pos:start="223:47" pos:end="223:49"><name pos:start="223:47" pos:end="223:47">i</name><operator pos:start="223:48" pos:end="223:49">++</operator></expr></incr>)</control> <block pos:start="223:52" pos:end="233:13">{<block_content pos:start="225:17" pos:end="231:75">

                <expr_stmt pos:start="225:17" pos:end="225:55"><expr pos:start="225:17" pos:end="225:54"><name pos:start="225:17" pos:end="225:25">delta_poc</name> <operator pos:start="225:27" pos:end="225:27">=</operator> <call pos:start="225:29" pos:end="225:50"><name pos:start="225:29" pos:end="225:46">get_ue_golomb_long</name><argument_list pos:start="225:47" pos:end="225:50">(<argument pos:start="225:48" pos:end="225:49"><expr pos:start="225:48" pos:end="225:49"><name pos:start="225:48" pos:end="225:49">gb</name></expr></argument>)</argument_list></call> <operator pos:start="225:52" pos:end="225:52">+</operator> <literal type="number" pos:start="225:54" pos:end="225:54">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="227:17" pos:end="227:34"><expr pos:start="227:17" pos:end="227:33"><name pos:start="227:17" pos:end="227:20">prev</name> <operator pos:start="227:22" pos:end="227:23">+=</operator> <name pos:start="227:25" pos:end="227:33">delta_poc</name></expr>;</expr_stmt>

                <expr_stmt pos:start="229:17" pos:end="229:66"><expr pos:start="229:17" pos:end="229:65"><name pos:start="229:17" pos:end="229:58"><name pos:start="229:17" pos:end="229:19">rps</name><operator pos:start="229:20" pos:end="229:21">-&gt;</operator><name pos:start="229:22" pos:end="229:30">delta_poc</name><index pos:start="229:31" pos:end="229:58">[<expr pos:start="229:32" pos:end="229:57"><name pos:start="229:32" pos:end="229:53"><name pos:start="229:32" pos:end="229:34">rps</name><operator pos:start="229:35" pos:end="229:36">-&gt;</operator><name pos:start="229:37" pos:end="229:53">num_negative_pics</name></name> <operator pos:start="229:55" pos:end="229:55">+</operator> <name pos:start="229:57" pos:end="229:57">i</name></expr>]</index></name> <operator pos:start="229:60" pos:end="229:60">=</operator> <name pos:start="229:62" pos:end="229:65">prev</name></expr>;</expr_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:75"><expr pos:start="231:17" pos:end="231:74"><name pos:start="231:17" pos:end="231:53"><name pos:start="231:17" pos:end="231:19">rps</name><operator pos:start="231:20" pos:end="231:21">-&gt;</operator><name pos:start="231:22" pos:end="231:25">used</name><index pos:start="231:26" pos:end="231:53">[<expr pos:start="231:27" pos:end="231:52"><name pos:start="231:27" pos:end="231:48"><name pos:start="231:27" pos:end="231:29">rps</name><operator pos:start="231:30" pos:end="231:31">-&gt;</operator><name pos:start="231:32" pos:end="231:48">num_negative_pics</name></name> <operator pos:start="231:50" pos:end="231:50">+</operator> <name pos:start="231:52" pos:end="231:52">i</name></expr>]</index></name>      <operator pos:start="231:60" pos:end="231:60">=</operator> <call pos:start="231:62" pos:end="231:74"><name pos:start="231:62" pos:end="231:70">get_bits1</name><argument_list pos:start="231:71" pos:end="231:74">(<argument pos:start="231:72" pos:end="231:73"><expr pos:start="231:72" pos:end="231:73"><name pos:start="231:72" pos:end="231:73">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="239:5" pos:end="239:13">return <expr pos:start="239:12" pos:end="239:12"><literal type="number" pos:start="239:12" pos:end="239:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
