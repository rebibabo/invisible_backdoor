<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18470.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">compat_read</name><parameter_list pos:start="1:23" pos:end="1:86">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:43"><name pos:start="1:24" pos:end="1:38">AVFilterContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">ctx</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:69"><decl pos:start="1:46" pos:end="1:69"><type pos:start="1:46" pos:end="1:69"><name pos:start="1:46" pos:end="1:62">AVFilterBufferRef</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier><modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">pbuf</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:85"><decl pos:start="1:72" pos:end="1:85"><type pos:start="1:72" pos:end="1:85"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:85">nb_samples</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:15">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">AVFilterBufferRef</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:45"><if pos:start="13:5" pos:end="15:45">if <condition pos:start="13:8" pos:end="13:14">(<expr pos:start="13:9" pos:end="13:13"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:13">pbuf</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:45"><block_content pos:start="15:9" pos:end="15:45">

        <return pos:start="15:9" pos:end="15:45">return <expr pos:start="15:16" pos:end="15:44"><call pos:start="15:16" pos:end="15:44"><name pos:start="15:16" pos:end="15:28">ff_poll_frame</name><argument_list pos:start="15:29" pos:end="15:44">(<argument pos:start="15:30" pos:end="15:43"><expr pos:start="15:30" pos:end="15:43"><name pos:start="15:30" pos:end="15:43"><name pos:start="15:30" pos:end="15:32">ctx</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:40">inputs</name><index pos:start="15:41" pos:end="15:43">[<expr pos:start="15:42" pos:end="15:42"><literal type="number" pos:start="15:42" pos:end="15:42">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:9">frame</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:26">av_frame_alloc</name><argument_list pos:start="19:27" pos:end="19:28">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:31"><if pos:start="21:5" pos:end="23:31">if <condition pos:start="21:8" pos:end="21:15">(<expr pos:start="21:9" pos:end="21:14"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:14">frame</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:31"><block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="33:64"><if pos:start="27:5" pos:end="29:50">if <condition pos:start="27:8" pos:end="27:20">(<expr pos:start="27:9" pos:end="27:19"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:19">nb_samples</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:50"><block_content pos:start="29:9" pos:end="29:50">

        <expr_stmt pos:start="29:9" pos:end="29:50"><expr pos:start="29:9" pos:end="29:49"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:49"><name pos:start="29:15" pos:end="29:37">av_buffersink_get_frame</name><argument_list pos:start="29:38" pos:end="29:49">(<argument pos:start="29:39" pos:end="29:41"><expr pos:start="29:39" pos:end="29:41"><name pos:start="29:39" pos:end="29:41">ctx</name></expr></argument>, <argument pos:start="29:44" pos:end="29:48"><expr pos:start="29:44" pos:end="29:48"><name pos:start="29:44" pos:end="29:48">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="31:5" pos:end="33:64">else<block type="pseudo" pos:start="33:9" pos:end="33:64"><block_content pos:start="33:9" pos:end="33:64">

        <expr_stmt pos:start="33:9" pos:end="33:64"><expr pos:start="33:9" pos:end="33:63"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:63"><name pos:start="33:15" pos:end="33:39">av_buffersink_get_samples</name><argument_list pos:start="33:40" pos:end="33:63">(<argument pos:start="33:41" pos:end="33:43"><expr pos:start="33:41" pos:end="33:43"><name pos:start="33:41" pos:end="33:43">ctx</name></expr></argument>, <argument pos:start="33:46" pos:end="33:50"><expr pos:start="33:46" pos:end="33:50"><name pos:start="33:46" pos:end="33:50">frame</name></expr></argument>, <argument pos:start="33:53" pos:end="33:62"><expr pos:start="33:53" pos:end="33:62"><name pos:start="33:53" pos:end="33:62">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="37:5" pos:end="39:18"><if pos:start="37:5" pos:end="39:18">if <condition pos:start="37:8" pos:end="37:16">(<expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">&lt;</operator> <literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <goto pos:start="39:9" pos:end="39:18">goto <name pos:start="39:14" pos:end="39:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="65:5"><if pos:start="43:5" pos:end="53:5">if <condition pos:start="43:8" pos:end="43:51">(<expr pos:start="43:9" pos:end="43:50"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:11">ctx</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:19">inputs</name><index pos:start="43:20" pos:end="43:22">[<expr pos:start="43:21" pos:end="43:21"><literal type="number" pos:start="43:21" pos:end="43:21">0</literal></expr>]</index></name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:28">type</name> <operator pos:start="43:30" pos:end="43:31">==</operator> <name pos:start="43:33" pos:end="43:50">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="43:53" pos:end="53:5">{<block_content pos:start="45:9" pos:end="51:71">

        <expr_stmt pos:start="45:9" pos:end="51:71"><expr pos:start="45:9" pos:end="51:70"><name pos:start="45:9" pos:end="45:11">buf</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="51:70"><name pos:start="45:15" pos:end="45:55">avfilter_get_video_buffer_ref_from_arrays</name><argument_list pos:start="45:56" pos:end="51:70">(<argument pos:start="45:57" pos:end="45:67"><expr pos:start="45:57" pos:end="45:67"><name pos:start="45:57" pos:end="45:67"><name pos:start="45:57" pos:end="45:61">frame</name><operator pos:start="45:62" pos:end="45:63">-&gt;</operator><name pos:start="45:64" pos:end="45:67">data</name></name></expr></argument>, <argument pos:start="45:70" pos:end="45:84"><expr pos:start="45:70" pos:end="45:84"><name pos:start="45:70" pos:end="45:84"><name pos:start="45:70" pos:end="45:74">frame</name><operator pos:start="45:75" pos:end="45:76">-&gt;</operator><name pos:start="45:77" pos:end="45:84">linesize</name></name></expr></argument>,

                                                        <argument pos:start="47:57" pos:end="47:68"><expr pos:start="47:57" pos:end="47:68"><name pos:start="47:57" pos:end="47:68">AV_PERM_READ</name></expr></argument>,

                                                        <argument pos:start="49:57" pos:end="49:68"><expr pos:start="49:57" pos:end="49:68"><name pos:start="49:57" pos:end="49:68"><name pos:start="49:57" pos:end="49:61">frame</name><operator pos:start="49:62" pos:end="49:63">-&gt;</operator><name pos:start="49:64" pos:end="49:68">width</name></name></expr></argument>, <argument pos:start="49:71" pos:end="49:83"><expr pos:start="49:71" pos:end="49:83"><name pos:start="49:71" pos:end="49:83"><name pos:start="49:71" pos:end="49:75">frame</name><operator pos:start="49:76" pos:end="49:77">-&gt;</operator><name pos:start="49:78" pos:end="49:83">height</name></name></expr></argument>,

                                                        <argument pos:start="51:57" pos:end="51:69"><expr pos:start="51:57" pos:end="51:69"><name pos:start="51:57" pos:end="51:69"><name pos:start="51:57" pos:end="51:61">frame</name><operator pos:start="51:62" pos:end="51:63">-&gt;</operator><name pos:start="51:64" pos:end="51:69">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="65:5">else <block pos:start="53:12" pos:end="65:5">{<block_content pos:start="55:9" pos:end="63:79">

        <expr_stmt pos:start="55:9" pos:end="63:79"><expr pos:start="55:9" pos:end="63:78"><name pos:start="55:9" pos:end="55:11">buf</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="63:78"><name pos:start="55:15" pos:end="55:55">avfilter_get_audio_buffer_ref_from_arrays</name><argument_list pos:start="55:56" pos:end="63:78">(<argument pos:start="55:57" pos:end="55:76"><expr pos:start="55:57" pos:end="55:76"><name pos:start="55:57" pos:end="55:76"><name pos:start="55:57" pos:end="55:61">frame</name><operator pos:start="55:62" pos:end="55:63">-&gt;</operator><name pos:start="55:64" pos:end="55:76">extended_data</name></name></expr></argument>,

                                                        <argument pos:start="57:57" pos:end="57:74"><expr pos:start="57:57" pos:end="57:74"><name pos:start="57:57" pos:end="57:74"><name pos:start="57:57" pos:end="57:61">frame</name><operator pos:start="57:62" pos:end="57:63">-&gt;</operator><name pos:start="57:64" pos:end="57:71">linesize</name><index pos:start="57:72" pos:end="57:74">[<expr pos:start="57:73" pos:end="57:73"><literal type="number" pos:start="57:73" pos:end="57:73">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="57:77" pos:end="57:88"><expr pos:start="57:77" pos:end="57:88"><name pos:start="57:77" pos:end="57:88">AV_PERM_READ</name></expr></argument>,

                                                        <argument pos:start="59:57" pos:end="59:73"><expr pos:start="59:57" pos:end="59:73"><name pos:start="59:57" pos:end="59:73"><name pos:start="59:57" pos:end="59:61">frame</name><operator pos:start="59:62" pos:end="59:63">-&gt;</operator><name pos:start="59:64" pos:end="59:73">nb_samples</name></name></expr></argument>,

                                                        <argument pos:start="61:57" pos:end="61:69"><expr pos:start="61:57" pos:end="61:69"><name pos:start="61:57" pos:end="61:69"><name pos:start="61:57" pos:end="61:61">frame</name><operator pos:start="61:62" pos:end="61:63">-&gt;</operator><name pos:start="61:64" pos:end="61:69">format</name></name></expr></argument>,

                                                        <argument pos:start="63:57" pos:end="63:77"><expr pos:start="63:57" pos:end="63:77"><name pos:start="63:57" pos:end="63:77"><name pos:start="63:57" pos:end="63:61">frame</name><operator pos:start="63:62" pos:end="63:63">-&gt;</operator><name pos:start="63:64" pos:end="63:77">channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:13">(<expr pos:start="67:9" pos:end="67:12"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:12">buf</name></expr>)</condition> <block pos:start="67:15" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:18">

        <expr_stmt pos:start="69:9" pos:end="69:30"><expr pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <call pos:start="69:15" pos:end="69:29"><name pos:start="69:15" pos:end="69:21">AVERROR</name><argument_list pos:start="69:22" pos:end="69:29">(<argument pos:start="69:23" pos:end="69:28"><expr pos:start="69:23" pos:end="69:28"><name pos:start="69:23" pos:end="69:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="71:9" pos:end="71:18">goto <name pos:start="71:14" pos:end="71:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:42"><expr pos:start="77:5" pos:end="77:41"><call pos:start="77:5" pos:end="77:41"><name pos:start="77:5" pos:end="77:29">avfilter_copy_frame_props</name><argument_list pos:start="77:30" pos:end="77:41">(<argument pos:start="77:31" pos:end="77:33"><expr pos:start="77:31" pos:end="77:33"><name pos:start="77:31" pos:end="77:33">buf</name></expr></argument>, <argument pos:start="77:36" pos:end="77:40"><expr pos:start="77:36" pos:end="77:40"><name pos:start="77:36" pos:end="77:40">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:27"><expr pos:start="81:5" pos:end="81:26"><name pos:start="81:5" pos:end="81:18"><name pos:start="81:5" pos:end="81:7">buf</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:12">buf</name><operator pos:start="81:13" pos:end="81:14">-&gt;</operator><name pos:start="81:15" pos:end="81:18">priv</name></name> <operator pos:start="81:20" pos:end="81:20">=</operator> <name pos:start="81:22" pos:end="81:26">frame</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:40"><expr pos:start="83:5" pos:end="83:39"><name pos:start="83:5" pos:end="83:18"><name pos:start="83:5" pos:end="83:7">buf</name><operator pos:start="83:8" pos:end="83:9">-&gt;</operator><name pos:start="83:10" pos:end="83:12">buf</name><operator pos:start="83:13" pos:end="83:14">-&gt;</operator><name pos:start="83:15" pos:end="83:18">free</name></name> <operator pos:start="83:20" pos:end="83:20">=</operator> <name pos:start="83:22" pos:end="83:39">compat_free_buffer</name></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:16"><expr pos:start="87:5" pos:end="87:15"><operator pos:start="87:5" pos:end="87:5">*</operator><name pos:start="87:6" pos:end="87:9">pbuf</name> <operator pos:start="87:11" pos:end="87:11">=</operator> <name pos:start="87:13" pos:end="87:15">buf</name></expr>;</expr_stmt>



    <return pos:start="91:5" pos:end="91:13">return <expr pos:start="91:12" pos:end="91:12"><literal type="number" pos:start="91:12" pos:end="91:12">0</literal></expr>;</return>

<label pos:start="93:1" pos:end="93:5"><name pos:start="93:1" pos:end="93:4">fail</name>:</label>

    <expr_stmt pos:start="95:5" pos:end="95:26"><expr pos:start="95:5" pos:end="95:25"><call pos:start="95:5" pos:end="95:25"><name pos:start="95:5" pos:end="95:17">av_frame_free</name><argument_list pos:start="95:18" pos:end="95:25">(<argument pos:start="95:19" pos:end="95:24"><expr pos:start="95:19" pos:end="95:24"><operator pos:start="95:19" pos:end="95:19">&amp;</operator><name pos:start="95:20" pos:end="95:24">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="97:5" pos:end="97:15">return <expr pos:start="97:12" pos:end="97:14"><name pos:start="97:12" pos:end="97:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
