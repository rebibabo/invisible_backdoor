<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17401.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:14">do_commit</name><parameter_list pos:start="1:15" pos:end="1:48">(<parameter pos:start="1:16" pos:end="1:27"><decl pos:start="1:16" pos:end="1:27"><type pos:start="1:16" pos:end="1:27"><name pos:start="1:16" pos:end="1:22">Monitor</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:27">mon</name></decl></parameter>, <parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><specifier pos:start="1:30" pos:end="1:34">const</specifier> <name pos:start="1:36" pos:end="1:40">QDict</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:47">qdict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:22">device</name> <init pos:start="5:24" pos:end="5:55">= <expr pos:start="5:26" pos:end="5:55"><call pos:start="5:26" pos:end="5:55"><name pos:start="5:26" pos:end="5:38">qdict_get_str</name><argument_list pos:start="5:39" pos:end="5:55">(<argument pos:start="5:40" pos:end="5:44"><expr pos:start="5:40" pos:end="5:44"><name pos:start="5:40" pos:end="5:44">qdict</name></expr></argument>, <argument pos:start="5:47" pos:end="5:54"><expr pos:start="5:47" pos:end="5:54"><literal type="string" pos:start="5:47" pos:end="5:54">"device"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BlockDriverState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">bs</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="41:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:31">(<expr pos:start="11:9" pos:end="11:30"><operator pos:start="11:9" pos:end="11:9">!</operator><call pos:start="11:10" pos:end="11:30"><name pos:start="11:10" pos:end="11:15">strcmp</name><argument_list pos:start="11:16" pos:end="11:30">(<argument pos:start="11:17" pos:end="11:22"><expr pos:start="11:17" pos:end="11:22"><name pos:start="11:17" pos:end="11:22">device</name></expr></argument>, <argument pos:start="11:25" pos:end="11:29"><expr pos:start="11:25" pos:end="11:29"><literal type="string" pos:start="11:25" pos:end="11:29">"all"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:33" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:26">

        <expr_stmt pos:start="13:9" pos:end="13:26"><expr pos:start="13:9" pos:end="13:25"><call pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:23">bdrv_commit_all</name><argument_list pos:start="13:24" pos:end="13:25">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="41:5">else <block pos:start="15:12" pos:end="41:5">{<block_content pos:start="17:9" pos:end="39:9">

        <decl_stmt pos:start="17:9" pos:end="17:16"><decl pos:start="17:9" pos:end="17:15"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:15">ret</name></decl>;</decl_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:31"><expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:10">bs</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <call pos:start="21:14" pos:end="21:30"><name pos:start="21:14" pos:end="21:22">bdrv_find</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:16">(<expr pos:start="23:13" pos:end="23:15"><operator pos:start="23:13" pos:end="23:13">!</operator><name pos:start="23:14" pos:end="23:15">bs</name></expr>)</condition> <block pos:start="23:18" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:19">

            <expr_stmt pos:start="25:13" pos:end="25:57"><expr pos:start="25:13" pos:end="25:56"><call pos:start="25:13" pos:end="25:56"><name pos:start="25:13" pos:end="25:25">qerror_report</name><argument_list pos:start="25:26" pos:end="25:56">(<argument pos:start="25:27" pos:end="25:47"><expr pos:start="25:27" pos:end="25:47"><name pos:start="25:27" pos:end="25:47">QERR_DEVICE_NOT_FOUND</name></expr></argument>, <argument pos:start="25:50" pos:end="25:55"><expr pos:start="25:50" pos:end="25:55"><name pos:start="25:50" pos:end="25:55">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:30"><expr pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:29"><name pos:start="31:15" pos:end="31:25">bdrv_commit</name><argument_list pos:start="31:26" pos:end="31:29">(<argument pos:start="31:27" pos:end="31:28"><expr pos:start="31:27" pos:end="31:28"><name pos:start="31:27" pos:end="31:28">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:26">(<expr pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:15">ret</name> <operator pos:start="33:17" pos:end="33:18">==</operator> <operator pos:start="33:20" pos:end="33:20">-</operator><name pos:start="33:21" pos:end="33:25">EBUSY</name></expr>)</condition> <block pos:start="33:28" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:19">

            <expr_stmt pos:start="35:13" pos:end="35:54"><expr pos:start="35:13" pos:end="35:53"><call pos:start="35:13" pos:end="35:53"><name pos:start="35:13" pos:end="35:25">qerror_report</name><argument_list pos:start="35:26" pos:end="35:53">(<argument pos:start="35:27" pos:end="35:44"><expr pos:start="35:27" pos:end="35:44"><name pos:start="35:27" pos:end="35:44">QERR_DEVICE_IN_USE</name></expr></argument>, <argument pos:start="35:47" pos:end="35:52"><expr pos:start="35:47" pos:end="35:52"><name pos:start="35:47" pos:end="35:52">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="37:13" pos:end="37:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
