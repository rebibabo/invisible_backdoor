<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5132.c" pos:tabs="8"><function pos:start="1:1" pos:end="337:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">unpack_vectors</name><parameter_list pos:start="1:26" pos:end="1:65">(<parameter pos:start="1:27" pos:end="1:45"><decl pos:start="1:27" pos:end="1:45"><type pos:start="1:27" pos:end="1:45"><name pos:start="1:27" pos:end="1:42">Vp3DecodeContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:64"><decl pos:start="1:48" pos:end="1:64"><type pos:start="1:48" pos:end="1:64"><name pos:start="1:48" pos:end="1:60">GetBitContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:64">gb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="337:1">{<block_content pos:start="5:5" pos:end="335:13">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">coding_mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19"><name pos:start="9:9" pos:end="9:16">motion_x</name><index pos:start="9:17" pos:end="9:19">[<expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">6</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:16">motion_y</name><index pos:start="11:17" pos:end="11:19">[<expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">6</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:21">last_motion_x</name> <init pos:start="13:23" pos:end="13:25">= <expr pos:start="13:25" pos:end="13:25"><literal type="number" pos:start="13:25" pos:end="13:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:21">last_motion_y</name> <init pos:start="15:23" pos:end="15:25">= <expr pos:start="15:25" pos:end="15:25"><literal type="number" pos:start="15:25" pos:end="15:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:27">prior_last_motion_x</name> <init pos:start="17:29" pos:end="17:31">= <expr pos:start="17:31" pos:end="17:31"><literal type="number" pos:start="17:31" pos:end="17:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:32"><decl pos:start="19:5" pos:end="19:31"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:27">prior_last_motion_y</name> <init pos:start="19:29" pos:end="19:31">= <expr pos:start="19:31" pos:end="19:31"><literal type="number" pos:start="19:31" pos:end="19:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:27"><decl pos:start="21:5" pos:end="21:26"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:26">current_macroblock</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:25"><decl pos:start="23:5" pos:end="23:24"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:24">current_fragment</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:51"><expr pos:start="27:5" pos:end="27:50"><call pos:start="27:5" pos:end="27:50"><name pos:start="27:5" pos:end="27:13">debug_vp3</name><argument_list pos:start="27:14" pos:end="27:50">(<argument pos:start="27:15" pos:end="27:49"><expr pos:start="27:15" pos:end="27:49"><literal type="string" pos:start="27:15" pos:end="27:49">"  vp3: unpacking motion vectors\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="331:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:20">(<expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:19">keyframe</name></name></expr>)</condition> <block pos:start="29:22" pos:end="37:5">{<block_content pos:start="33:9" pos:end="33:66">



        <expr_stmt pos:start="33:9" pos:end="33:66"><expr pos:start="33:9" pos:end="33:65"><call pos:start="33:9" pos:end="33:65"><name pos:start="33:9" pos:end="33:17">debug_vp3</name><argument_list pos:start="33:18" pos:end="33:65">(<argument pos:start="33:19" pos:end="33:64"><expr pos:start="33:19" pos:end="33:64"><literal type="string" pos:start="33:19" pos:end="33:64">"    keyframe-- there are no motion vectors\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    </block_content>}</block></if> <else pos:start="37:7" pos:end="331:5">else <block pos:start="37:12" pos:end="331:5">{<block_content pos:start="41:9" pos:end="329:9">



        <expr_stmt pos:start="41:9" pos:end="41:45"><expr pos:start="41:9" pos:end="41:44"><call pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:14">memset</name><argument_list pos:start="41:15" pos:end="41:44">(<argument pos:start="41:16" pos:end="41:23"><expr pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:23">motion_x</name></expr></argument>, <argument pos:start="41:26" pos:end="41:26"><expr pos:start="41:26" pos:end="41:26"><literal type="number" pos:start="41:26" pos:end="41:26">0</literal></expr></argument>, <argument pos:start="41:29" pos:end="41:43"><expr pos:start="41:29" pos:end="41:43"><literal type="number" pos:start="41:29" pos:end="41:29">6</literal> <operator pos:start="41:31" pos:end="41:31">*</operator> <sizeof pos:start="41:33" pos:end="41:43">sizeof<argument_list pos:start="41:39" pos:end="41:43">(<argument pos:start="41:40" pos:end="41:42"><expr pos:start="41:40" pos:end="41:42"><name pos:start="41:40" pos:end="41:42">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:45"><expr pos:start="43:9" pos:end="43:44"><call pos:start="43:9" pos:end="43:44"><name pos:start="43:9" pos:end="43:14">memset</name><argument_list pos:start="43:15" pos:end="43:44">(<argument pos:start="43:16" pos:end="43:23"><expr pos:start="43:16" pos:end="43:23"><name pos:start="43:16" pos:end="43:23">motion_y</name></expr></argument>, <argument pos:start="43:26" pos:end="43:26"><expr pos:start="43:26" pos:end="43:26"><literal type="number" pos:start="43:26" pos:end="43:26">0</literal></expr></argument>, <argument pos:start="43:29" pos:end="43:43"><expr pos:start="43:29" pos:end="43:43"><literal type="number" pos:start="43:29" pos:end="43:29">6</literal> <operator pos:start="43:31" pos:end="43:31">*</operator> <sizeof pos:start="43:33" pos:end="43:43">sizeof<argument_list pos:start="43:39" pos:end="43:43">(<argument pos:start="43:40" pos:end="43:42"><expr pos:start="43:40" pos:end="43:42"><name pos:start="43:40" pos:end="43:42">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="47:9" pos:end="47:73">/* coding mode 0 is the VLC scheme; 1 is the fixed code scheme */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:36"><expr pos:start="49:9" pos:end="49:35"><name pos:start="49:9" pos:end="49:19">coding_mode</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <call pos:start="49:23" pos:end="49:35"><name pos:start="49:23" pos:end="49:31">get_bits1</name><argument_list pos:start="49:32" pos:end="49:35">(<argument pos:start="49:33" pos:end="49:34"><expr pos:start="49:33" pos:end="49:34"><name pos:start="49:33" pos:end="49:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="53:57"><expr pos:start="51:9" pos:end="53:56"><call pos:start="51:9" pos:end="53:56"><name pos:start="51:9" pos:end="51:21">debug_vectors</name><argument_list pos:start="51:22" pos:end="53:56">(<argument pos:start="51:23" pos:end="51:74"><expr pos:start="51:23" pos:end="51:74"><literal type="string" pos:start="51:23" pos:end="51:74">"    using %s scheme for unpacking motion vectors\n"</literal></expr></argument>,

            <argument pos:start="53:13" pos:end="53:55"><expr pos:start="53:13" pos:end="53:55"><ternary pos:start="53:13" pos:end="53:55"><condition pos:start="53:13" pos:end="53:32"><expr pos:start="53:13" pos:end="53:30"><operator pos:start="53:13" pos:end="53:13">(</operator><name pos:start="53:14" pos:end="53:24">coding_mode</name> <operator pos:start="53:26" pos:end="53:27">==</operator> <literal type="number" pos:start="53:29" pos:end="53:29">0</literal><operator pos:start="53:30" pos:end="53:30">)</operator></expr> ?</condition><then pos:start="53:34" pos:end="53:38"> <expr pos:start="53:34" pos:end="53:38"><literal type="string" pos:start="53:34" pos:end="53:38">"VLC"</literal></expr> </then><else pos:start="53:40" pos:end="53:55">: <expr pos:start="53:42" pos:end="53:55"><literal type="string" pos:start="53:42" pos:end="53:55">"fixed-length"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="57:9" pos:end="59:29">/* iterate through all of the macroblocks that contain 1 or more

         * coded fragments */</comment>

        <for pos:start="61:9" pos:end="329:9">for <control pos:start="61:13" pos:end="61:51">(<init pos:start="61:14" pos:end="61:19"><expr pos:start="61:14" pos:end="61:18"><name pos:start="61:14" pos:end="61:14">i</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>;</init> <condition pos:start="61:21" pos:end="61:46"><expr pos:start="61:21" pos:end="61:45"><name pos:start="61:21" pos:end="61:21">i</name> <operator pos:start="61:23" pos:end="61:23">&lt;</operator> <name pos:start="61:25" pos:end="61:45"><name pos:start="61:25" pos:end="61:25">s</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:45">u_superblock_start</name></name></expr>;</condition> <incr pos:start="61:48" pos:end="61:50"><expr pos:start="61:48" pos:end="61:50"><name pos:start="61:48" pos:end="61:48">i</name><operator pos:start="61:49" pos:end="61:50">++</operator></expr></incr>)</control> <block pos:start="61:53" pos:end="329:9">{<block_content pos:start="65:13" pos:end="327:13">



            <for pos:start="65:13" pos:end="327:13">for <control pos:start="65:17" pos:end="65:35">(<init pos:start="65:18" pos:end="65:23"><expr pos:start="65:18" pos:end="65:22"><name pos:start="65:18" pos:end="65:18">j</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>;</init> <condition pos:start="65:25" pos:end="65:30"><expr pos:start="65:25" pos:end="65:29"><name pos:start="65:25" pos:end="65:25">j</name> <operator pos:start="65:27" pos:end="65:27">&lt;</operator> <literal type="number" pos:start="65:29" pos:end="65:29">4</literal></expr>;</condition> <incr pos:start="65:32" pos:end="65:34"><expr pos:start="65:32" pos:end="65:34"><name pos:start="65:32" pos:end="65:32">j</name><operator pos:start="65:33" pos:end="65:34">++</operator></expr></incr>)</control> <block pos:start="65:37" pos:end="327:13">{<block_content pos:start="67:17" pos:end="325:17">

                <expr_stmt pos:start="67:17" pos:end="67:74"><expr pos:start="67:17" pos:end="67:73"><name pos:start="67:17" pos:end="67:34">current_macroblock</name> <operator pos:start="67:36" pos:end="67:36">=</operator> <name pos:start="67:38" pos:end="67:73"><name pos:start="67:38" pos:end="67:38">s</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:62">superblock_macroblocks</name><index pos:start="67:63" pos:end="67:73">[<expr pos:start="67:64" pos:end="67:72"><name pos:start="67:64" pos:end="67:64">i</name> <operator pos:start="67:66" pos:end="67:66">*</operator> <literal type="number" pos:start="67:68" pos:end="67:70">4</literal> <operator pos:start="67:70" pos:end="67:70">+</operator> <name pos:start="67:72" pos:end="67:72">j</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="69:17" pos:end="73:29"><if pos:start="69:17" pos:end="73:29">if <condition pos:start="69:20" pos:end="71:76">(<expr pos:start="69:21" pos:end="71:75"><operator pos:start="69:21" pos:end="69:21">(</operator><name pos:start="69:22" pos:end="69:39">current_macroblock</name> <operator pos:start="69:41" pos:end="69:42">==</operator> <operator pos:start="69:44" pos:end="69:44">-</operator><literal type="number" pos:start="69:45" pos:end="69:45">1</literal><operator pos:start="69:46" pos:end="69:46">)</operator> <operator pos:start="69:48" pos:end="69:49">||</operator>

                    <operator pos:start="71:21" pos:end="71:21">(</operator><name pos:start="71:22" pos:end="71:61"><name pos:start="71:22" pos:end="71:22">s</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:41">macroblock_coding</name><index pos:start="71:42" pos:end="71:61">[<expr pos:start="71:43" pos:end="71:60"><name pos:start="71:43" pos:end="71:60">current_macroblock</name></expr>]</index></name> <operator pos:start="71:63" pos:end="71:64">==</operator> <name pos:start="71:66" pos:end="71:74">MODE_COPY</name><operator pos:start="71:75" pos:end="71:75">)</operator></expr>)</condition><block type="pseudo" pos:start="73:21" pos:end="73:29"><block_content pos:start="73:21" pos:end="73:29">

                    <continue pos:start="73:21" pos:end="73:29">continue;</continue></block_content></block></if></if_stmt>

                <if_stmt pos:start="75:17" pos:end="83:17"><if pos:start="75:17" pos:end="83:17">if <condition pos:start="75:20" pos:end="75:62">(<expr pos:start="75:21" pos:end="75:61"><name pos:start="75:21" pos:end="75:38">current_macroblock</name> <operator pos:start="75:40" pos:end="75:41">&gt;=</operator> <name pos:start="75:43" pos:end="75:61"><name pos:start="75:43" pos:end="75:43">s</name><operator pos:start="75:44" pos:end="75:45">-&gt;</operator><name pos:start="75:46" pos:end="75:61">macroblock_count</name></name></expr>)</condition> <block pos:start="75:64" pos:end="83:17">{<block_content pos:start="77:21" pos:end="81:29">

                    <expr_stmt pos:start="77:21" pos:end="79:65"><expr pos:start="77:21" pos:end="79:64"><call pos:start="77:21" pos:end="79:64"><name pos:start="77:21" pos:end="77:26">av_log</name><argument_list pos:start="77:27" pos:end="79:64">(<argument pos:start="77:28" pos:end="77:35"><expr pos:start="77:28" pos:end="77:35"><name pos:start="77:28" pos:end="77:35"><name pos:start="77:28" pos:end="77:28">s</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:35">avctx</name></name></expr></argument>, <argument pos:start="77:38" pos:end="77:49"><expr pos:start="77:38" pos:end="77:49"><name pos:start="77:38" pos:end="77:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:52" pos:end="77:111"><expr pos:start="77:52" pos:end="77:111"><literal type="string" pos:start="77:52" pos:end="77:111">"  vp3:unpack_vectors(): bad macroblock number (%d &gt;= %d)\n"</literal></expr></argument>,

                        <argument pos:start="79:25" pos:end="79:42"><expr pos:start="79:25" pos:end="79:42"><name pos:start="79:25" pos:end="79:42">current_macroblock</name></expr></argument>, <argument pos:start="79:45" pos:end="79:63"><expr pos:start="79:45" pos:end="79:63"><name pos:start="79:45" pos:end="79:63"><name pos:start="79:45" pos:end="79:45">s</name><operator pos:start="79:46" pos:end="79:47">-&gt;</operator><name pos:start="79:48" pos:end="79:63">macroblock_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="81:21" pos:end="81:29">return <expr pos:start="81:28" pos:end="81:28"><literal type="number" pos:start="81:28" pos:end="81:28">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="87:17" pos:end="87:83"><expr pos:start="87:17" pos:end="87:82"><name pos:start="87:17" pos:end="87:32">current_fragment</name> <operator pos:start="87:34" pos:end="87:34">=</operator> <name pos:start="87:36" pos:end="87:82"><name pos:start="87:36" pos:end="87:36">s</name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:58">macroblock_fragments</name><index pos:start="87:59" pos:end="87:82">[<expr pos:start="87:60" pos:end="87:81"><name pos:start="87:60" pos:end="87:77">current_macroblock</name> <operator pos:start="87:79" pos:end="87:79">*</operator> <literal type="number" pos:start="87:81" pos:end="87:81">6</literal></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="89:17" pos:end="97:17"><if pos:start="89:17" pos:end="97:17">if <condition pos:start="89:20" pos:end="89:58">(<expr pos:start="89:21" pos:end="89:57"><name pos:start="89:21" pos:end="89:36">current_fragment</name> <operator pos:start="89:38" pos:end="89:39">&gt;=</operator> <name pos:start="89:41" pos:end="89:57"><name pos:start="89:41" pos:end="89:41">s</name><operator pos:start="89:42" pos:end="89:43">-&gt;</operator><name pos:start="89:44" pos:end="89:57">fragment_count</name></name></expr>)</condition> <block pos:start="89:60" pos:end="97:17">{<block_content pos:start="91:21" pos:end="95:29">

                    <expr_stmt pos:start="91:21" pos:end="93:61"><expr pos:start="91:21" pos:end="93:60"><call pos:start="91:21" pos:end="93:60"><name pos:start="91:21" pos:end="91:26">av_log</name><argument_list pos:start="91:27" pos:end="93:60">(<argument pos:start="91:28" pos:end="91:35"><expr pos:start="91:28" pos:end="91:35"><name pos:start="91:28" pos:end="91:35"><name pos:start="91:28" pos:end="91:28">s</name><operator pos:start="91:29" pos:end="91:30">-&gt;</operator><name pos:start="91:31" pos:end="91:35">avctx</name></name></expr></argument>, <argument pos:start="91:38" pos:end="91:49"><expr pos:start="91:38" pos:end="91:49"><name pos:start="91:38" pos:end="91:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:52" pos:end="91:108"><expr pos:start="91:52" pos:end="91:108"><literal type="string" pos:start="91:52" pos:end="91:108">"  vp3:unpack_vectors(): bad fragment number (%d &gt;= %d\n"</literal></expr></argument>,

                        <argument pos:start="93:25" pos:end="93:40"><expr pos:start="93:25" pos:end="93:40"><name pos:start="93:25" pos:end="93:40">current_fragment</name></expr></argument>, <argument pos:start="93:43" pos:end="93:59"><expr pos:start="93:43" pos:end="93:59"><name pos:start="93:43" pos:end="93:59"><name pos:start="93:43" pos:end="93:43">s</name><operator pos:start="93:44" pos:end="93:45">-&gt;</operator><name pos:start="93:46" pos:end="93:59">fragment_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="95:21" pos:end="95:29">return <expr pos:start="95:28" pos:end="95:28"><literal type="number" pos:start="95:28" pos:end="95:28">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <switch pos:start="99:17" pos:end="285:17">switch <condition pos:start="99:24" pos:end="99:65">(<expr pos:start="99:25" pos:end="99:64"><name pos:start="99:25" pos:end="99:64"><name pos:start="99:25" pos:end="99:25">s</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:44">macroblock_coding</name><index pos:start="99:45" pos:end="99:64">[<expr pos:start="99:46" pos:end="99:63"><name pos:start="99:46" pos:end="99:63">current_macroblock</name></expr>]</index></name></expr>)</condition> <block pos:start="99:67" pos:end="285:17">{<block_content pos:start="103:17" pos:end="283:26">



                <case pos:start="103:17" pos:end="103:40">case <expr pos:start="103:22" pos:end="103:39"><name pos:start="103:22" pos:end="103:39">MODE_INTER_PLUS_MV</name></expr>:</case>

                <case pos:start="105:17" pos:end="105:36">case <expr pos:start="105:22" pos:end="105:35"><name pos:start="105:22" pos:end="105:35">MODE_GOLDEN_MV</name></expr>:</case>

                    <comment type="block" pos:start="107:21" pos:end="107:68">/* all 6 fragments use the same motion vector */</comment>

                    <if_stmt pos:start="109:21" pos:end="121:21"><if pos:start="109:21" pos:end="115:21">if <condition pos:start="109:24" pos:end="109:41">(<expr pos:start="109:25" pos:end="109:40"><name pos:start="109:25" pos:end="109:35">coding_mode</name> <operator pos:start="109:37" pos:end="109:38">==</operator> <literal type="number" pos:start="109:40" pos:end="109:40">0</literal></expr>)</condition> <block pos:start="109:43" pos:end="115:21">{<block_content pos:start="111:25" pos:end="113:106">

                        <expr_stmt pos:start="111:25" pos:end="111:106"><expr pos:start="111:25" pos:end="111:105"><name pos:start="111:25" pos:end="111:35"><name pos:start="111:25" pos:end="111:32">motion_x</name><index pos:start="111:33" pos:end="111:35">[<expr pos:start="111:34" pos:end="111:34"><literal type="number" pos:start="111:34" pos:end="111:34">0</literal></expr>]</index></name> <operator pos:start="111:37" pos:end="111:37">=</operator> <name pos:start="111:39" pos:end="111:105"><name pos:start="111:39" pos:end="111:57">motion_vector_table</name><index pos:start="111:58" pos:end="111:105">[<expr pos:start="111:59" pos:end="111:104"><call pos:start="111:59" pos:end="111:104"><name pos:start="111:59" pos:end="111:66">get_vlc2</name><argument_list pos:start="111:67" pos:end="111:104">(<argument pos:start="111:68" pos:end="111:69"><expr pos:start="111:68" pos:end="111:69"><name pos:start="111:68" pos:end="111:69">gb</name></expr></argument>, <argument pos:start="111:72" pos:end="111:97"><expr pos:start="111:72" pos:end="111:97"><name pos:start="111:72" pos:end="111:97"><name pos:start="111:72" pos:end="111:72">s</name><operator pos:start="111:73" pos:end="111:74">-&gt;</operator><name pos:start="111:75" pos:end="111:91">motion_vector_vlc</name><operator pos:start="111:92" pos:end="111:92">.</operator><name pos:start="111:93" pos:end="111:97">table</name></name></expr></argument>, <argument pos:start="111:100" pos:end="111:100"><expr pos:start="111:100" pos:end="111:100"><literal type="number" pos:start="111:100" pos:end="111:100">6</literal></expr></argument>, <argument pos:start="111:103" pos:end="111:103"><expr pos:start="111:103" pos:end="111:103"><literal type="number" pos:start="111:103" pos:end="111:103">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="113:25" pos:end="113:106"><expr pos:start="113:25" pos:end="113:105"><name pos:start="113:25" pos:end="113:35"><name pos:start="113:25" pos:end="113:32">motion_y</name><index pos:start="113:33" pos:end="113:35">[<expr pos:start="113:34" pos:end="113:34"><literal type="number" pos:start="113:34" pos:end="113:34">0</literal></expr>]</index></name> <operator pos:start="113:37" pos:end="113:37">=</operator> <name pos:start="113:39" pos:end="113:105"><name pos:start="113:39" pos:end="113:57">motion_vector_table</name><index pos:start="113:58" pos:end="113:105">[<expr pos:start="113:59" pos:end="113:104"><call pos:start="113:59" pos:end="113:104"><name pos:start="113:59" pos:end="113:66">get_vlc2</name><argument_list pos:start="113:67" pos:end="113:104">(<argument pos:start="113:68" pos:end="113:69"><expr pos:start="113:68" pos:end="113:69"><name pos:start="113:68" pos:end="113:69">gb</name></expr></argument>, <argument pos:start="113:72" pos:end="113:97"><expr pos:start="113:72" pos:end="113:97"><name pos:start="113:72" pos:end="113:97"><name pos:start="113:72" pos:end="113:72">s</name><operator pos:start="113:73" pos:end="113:74">-&gt;</operator><name pos:start="113:75" pos:end="113:91">motion_vector_vlc</name><operator pos:start="113:92" pos:end="113:92">.</operator><name pos:start="113:93" pos:end="113:97">table</name></name></expr></argument>, <argument pos:start="113:100" pos:end="113:100"><expr pos:start="113:100" pos:end="113:100"><literal type="number" pos:start="113:100" pos:end="113:100">6</literal></expr></argument>, <argument pos:start="113:103" pos:end="113:103"><expr pos:start="113:103" pos:end="113:103"><literal type="number" pos:start="113:103" pos:end="113:103">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="115:23" pos:end="121:21">else <block pos:start="115:28" pos:end="121:21">{<block_content pos:start="117:25" pos:end="119:81">

                        <expr_stmt pos:start="117:25" pos:end="117:81"><expr pos:start="117:25" pos:end="117:80"><name pos:start="117:25" pos:end="117:35"><name pos:start="117:25" pos:end="117:32">motion_x</name><index pos:start="117:33" pos:end="117:35">[<expr pos:start="117:34" pos:end="117:34"><literal type="number" pos:start="117:34" pos:end="117:34">0</literal></expr>]</index></name> <operator pos:start="117:37" pos:end="117:37">=</operator> <name pos:start="117:39" pos:end="117:80"><name pos:start="117:39" pos:end="117:63">fixed_motion_vector_table</name><index pos:start="117:64" pos:end="117:80">[<expr pos:start="117:65" pos:end="117:79"><call pos:start="117:65" pos:end="117:79"><name pos:start="117:65" pos:end="117:72">get_bits</name><argument_list pos:start="117:73" pos:end="117:79">(<argument pos:start="117:74" pos:end="117:75"><expr pos:start="117:74" pos:end="117:75"><name pos:start="117:74" pos:end="117:75">gb</name></expr></argument>, <argument pos:start="117:78" pos:end="117:78"><expr pos:start="117:78" pos:end="117:78"><literal type="number" pos:start="117:78" pos:end="117:78">6</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="119:25" pos:end="119:81"><expr pos:start="119:25" pos:end="119:80"><name pos:start="119:25" pos:end="119:35"><name pos:start="119:25" pos:end="119:32">motion_y</name><index pos:start="119:33" pos:end="119:35">[<expr pos:start="119:34" pos:end="119:34"><literal type="number" pos:start="119:34" pos:end="119:34">0</literal></expr>]</index></name> <operator pos:start="119:37" pos:end="119:37">=</operator> <name pos:start="119:39" pos:end="119:80"><name pos:start="119:39" pos:end="119:63">fixed_motion_vector_table</name><index pos:start="119:64" pos:end="119:80">[<expr pos:start="119:65" pos:end="119:79"><call pos:start="119:65" pos:end="119:79"><name pos:start="119:65" pos:end="119:72">get_bits</name><argument_list pos:start="119:73" pos:end="119:79">(<argument pos:start="119:74" pos:end="119:75"><expr pos:start="119:74" pos:end="119:75"><name pos:start="119:74" pos:end="119:75">gb</name></expr></argument>, <argument pos:start="119:78" pos:end="119:78"><expr pos:start="119:78" pos:end="119:78"><literal type="number" pos:start="119:78" pos:end="119:78">6</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>



                    <for pos:start="125:21" pos:end="131:21">for <control pos:start="125:25" pos:end="125:43">(<init pos:start="125:26" pos:end="125:31"><expr pos:start="125:26" pos:end="125:30"><name pos:start="125:26" pos:end="125:26">k</name> <operator pos:start="125:28" pos:end="125:28">=</operator> <literal type="number" pos:start="125:30" pos:end="125:30">1</literal></expr>;</init> <condition pos:start="125:33" pos:end="125:38"><expr pos:start="125:33" pos:end="125:37"><name pos:start="125:33" pos:end="125:33">k</name> <operator pos:start="125:35" pos:end="125:35">&lt;</operator> <literal type="number" pos:start="125:37" pos:end="125:37">6</literal></expr>;</condition> <incr pos:start="125:40" pos:end="125:42"><expr pos:start="125:40" pos:end="125:42"><name pos:start="125:40" pos:end="125:40">k</name><operator pos:start="125:41" pos:end="125:42">++</operator></expr></incr>)</control> <block pos:start="125:45" pos:end="131:21">{<block_content pos:start="127:25" pos:end="129:50">

                        <expr_stmt pos:start="127:25" pos:end="127:50"><expr pos:start="127:25" pos:end="127:49"><name pos:start="127:25" pos:end="127:35"><name pos:start="127:25" pos:end="127:32">motion_x</name><index pos:start="127:33" pos:end="127:35">[<expr pos:start="127:34" pos:end="127:34"><name pos:start="127:34" pos:end="127:34">k</name></expr>]</index></name> <operator pos:start="127:37" pos:end="127:37">=</operator> <name pos:start="127:39" pos:end="127:49"><name pos:start="127:39" pos:end="127:46">motion_x</name><index pos:start="127:47" pos:end="127:49">[<expr pos:start="127:48" pos:end="127:48"><literal type="number" pos:start="127:48" pos:end="127:48">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="129:25" pos:end="129:50"><expr pos:start="129:25" pos:end="129:49"><name pos:start="129:25" pos:end="129:35"><name pos:start="129:25" pos:end="129:32">motion_y</name><index pos:start="129:33" pos:end="129:35">[<expr pos:start="129:34" pos:end="129:34"><name pos:start="129:34" pos:end="129:34">k</name></expr>]</index></name> <operator pos:start="129:37" pos:end="129:37">=</operator> <name pos:start="129:39" pos:end="129:49"><name pos:start="129:39" pos:end="129:46">motion_y</name><index pos:start="129:47" pos:end="129:49">[<expr pos:start="129:48" pos:end="129:48"><literal type="number" pos:start="129:48" pos:end="129:48">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></for>



                    <comment type="block" pos:start="135:21" pos:end="135:72">/* vector maintenance, only on MODE_INTER_PLUS_MV */</comment>

                    <if_stmt pos:start="137:21" pos:end="149:21"><if pos:start="137:21" pos:end="149:21">if <condition pos:start="137:24" pos:end="139:43">(<expr pos:start="137:25" pos:end="139:42"><name pos:start="137:25" pos:end="137:64"><name pos:start="137:25" pos:end="137:25">s</name><operator pos:start="137:26" pos:end="137:27">-&gt;</operator><name pos:start="137:28" pos:end="137:44">macroblock_coding</name><index pos:start="137:45" pos:end="137:64">[<expr pos:start="137:46" pos:end="137:63"><name pos:start="137:46" pos:end="137:63">current_macroblock</name></expr>]</index></name> <operator pos:start="137:66" pos:end="137:67">==</operator>

                        <name pos:start="139:25" pos:end="139:42">MODE_INTER_PLUS_MV</name></expr>)</condition> <block pos:start="139:45" pos:end="149:21">{<block_content pos:start="141:25" pos:end="147:52">

                        <expr_stmt pos:start="141:25" pos:end="141:60"><expr pos:start="141:25" pos:end="141:59"><name pos:start="141:25" pos:end="141:43">prior_last_motion_x</name> <operator pos:start="141:45" pos:end="141:45">=</operator> <name pos:start="141:47" pos:end="141:59">last_motion_x</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="143:25" pos:end="143:60"><expr pos:start="143:25" pos:end="143:59"><name pos:start="143:25" pos:end="143:43">prior_last_motion_y</name> <operator pos:start="143:45" pos:end="143:45">=</operator> <name pos:start="143:47" pos:end="143:59">last_motion_y</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="145:25" pos:end="145:52"><expr pos:start="145:25" pos:end="145:51"><name pos:start="145:25" pos:end="145:37">last_motion_x</name> <operator pos:start="145:39" pos:end="145:39">=</operator> <name pos:start="145:41" pos:end="145:51"><name pos:start="145:41" pos:end="145:48">motion_x</name><index pos:start="145:49" pos:end="145:51">[<expr pos:start="145:50" pos:end="145:50"><literal type="number" pos:start="145:50" pos:end="145:50">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="147:25" pos:end="147:52"><expr pos:start="147:25" pos:end="147:51"><name pos:start="147:25" pos:end="147:37">last_motion_y</name> <operator pos:start="147:39" pos:end="147:39">=</operator> <name pos:start="147:41" pos:end="147:51"><name pos:start="147:41" pos:end="147:48">motion_y</name><index pos:start="147:49" pos:end="147:51">[<expr pos:start="147:50" pos:end="147:50"><literal type="number" pos:start="147:50" pos:end="147:50">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <break pos:start="151:21" pos:end="151:26">break;</break>



                <case pos:start="155:17" pos:end="155:39">case <expr pos:start="155:22" pos:end="155:38"><name pos:start="155:22" pos:end="155:38">MODE_INTER_FOURMV</name></expr>:</case>

                    <comment type="block" pos:start="157:21" pos:end="157:44">/* vector maintenance */</comment>

                    <expr_stmt pos:start="159:21" pos:end="159:56"><expr pos:start="159:21" pos:end="159:55"><name pos:start="159:21" pos:end="159:39">prior_last_motion_x</name> <operator pos:start="159:41" pos:end="159:41">=</operator> <name pos:start="159:43" pos:end="159:55">last_motion_x</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="161:21" pos:end="161:56"><expr pos:start="161:21" pos:end="161:55"><name pos:start="161:21" pos:end="161:39">prior_last_motion_y</name> <operator pos:start="161:41" pos:end="161:41">=</operator> <name pos:start="161:43" pos:end="161:55">last_motion_y</name></expr>;</expr_stmt>



                    <comment type="block" pos:start="165:21" pos:end="167:77">/* fetch 4 vectors from the bitstream, one for each

                     * Y fragment, then average for the C fragment vectors */</comment>

                    <expr_stmt pos:start="169:21" pos:end="169:50"><expr pos:start="169:21" pos:end="169:49"><name pos:start="169:21" pos:end="169:31"><name pos:start="169:21" pos:end="169:28">motion_x</name><index pos:start="169:29" pos:end="169:31">[<expr pos:start="169:30" pos:end="169:30"><literal type="number" pos:start="169:30" pos:end="169:30">4</literal></expr>]</index></name> <operator pos:start="169:33" pos:end="169:33">=</operator> <name pos:start="169:35" pos:end="169:45"><name pos:start="169:35" pos:end="169:42">motion_y</name><index pos:start="169:43" pos:end="169:45">[<expr pos:start="169:44" pos:end="169:44"><literal type="number" pos:start="169:44" pos:end="169:44">4</literal></expr>]</index></name> <operator pos:start="169:47" pos:end="169:47">=</operator> <literal type="number" pos:start="169:49" pos:end="169:49">0</literal></expr>;</expr_stmt>

                    <for pos:start="171:21" pos:end="195:21">for <control pos:start="171:25" pos:end="171:43">(<init pos:start="171:26" pos:end="171:31"><expr pos:start="171:26" pos:end="171:30"><name pos:start="171:26" pos:end="171:26">k</name> <operator pos:start="171:28" pos:end="171:28">=</operator> <literal type="number" pos:start="171:30" pos:end="171:30">0</literal></expr>;</init> <condition pos:start="171:33" pos:end="171:38"><expr pos:start="171:33" pos:end="171:37"><name pos:start="171:33" pos:end="171:33">k</name> <operator pos:start="171:35" pos:end="171:35">&lt;</operator> <literal type="number" pos:start="171:37" pos:end="171:37">4</literal></expr>;</condition> <incr pos:start="171:40" pos:end="171:42"><expr pos:start="171:40" pos:end="171:42"><name pos:start="171:40" pos:end="171:40">k</name><operator pos:start="171:41" pos:end="171:42">++</operator></expr></incr>)</control> <block pos:start="171:45" pos:end="195:21">{<block_content pos:start="173:25" pos:end="193:51">

                        <if_stmt pos:start="173:25" pos:end="185:25"><if pos:start="173:25" pos:end="179:25">if <condition pos:start="173:28" pos:end="173:45">(<expr pos:start="173:29" pos:end="173:44"><name pos:start="173:29" pos:end="173:39">coding_mode</name> <operator pos:start="173:41" pos:end="173:42">==</operator> <literal type="number" pos:start="173:44" pos:end="173:44">0</literal></expr>)</condition> <block pos:start="173:47" pos:end="179:25">{<block_content pos:start="175:29" pos:end="177:110">

                            <expr_stmt pos:start="175:29" pos:end="175:110"><expr pos:start="175:29" pos:end="175:109"><name pos:start="175:29" pos:end="175:39"><name pos:start="175:29" pos:end="175:36">motion_x</name><index pos:start="175:37" pos:end="175:39">[<expr pos:start="175:38" pos:end="175:38"><name pos:start="175:38" pos:end="175:38">k</name></expr>]</index></name> <operator pos:start="175:41" pos:end="175:41">=</operator> <name pos:start="175:43" pos:end="175:109"><name pos:start="175:43" pos:end="175:61">motion_vector_table</name><index pos:start="175:62" pos:end="175:109">[<expr pos:start="175:63" pos:end="175:108"><call pos:start="175:63" pos:end="175:108"><name pos:start="175:63" pos:end="175:70">get_vlc2</name><argument_list pos:start="175:71" pos:end="175:108">(<argument pos:start="175:72" pos:end="175:73"><expr pos:start="175:72" pos:end="175:73"><name pos:start="175:72" pos:end="175:73">gb</name></expr></argument>, <argument pos:start="175:76" pos:end="175:101"><expr pos:start="175:76" pos:end="175:101"><name pos:start="175:76" pos:end="175:101"><name pos:start="175:76" pos:end="175:76">s</name><operator pos:start="175:77" pos:end="175:78">-&gt;</operator><name pos:start="175:79" pos:end="175:95">motion_vector_vlc</name><operator pos:start="175:96" pos:end="175:96">.</operator><name pos:start="175:97" pos:end="175:101">table</name></name></expr></argument>, <argument pos:start="175:104" pos:end="175:104"><expr pos:start="175:104" pos:end="175:104"><literal type="number" pos:start="175:104" pos:end="175:104">6</literal></expr></argument>, <argument pos:start="175:107" pos:end="175:107"><expr pos:start="175:107" pos:end="175:107"><literal type="number" pos:start="175:107" pos:end="175:107">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="177:29" pos:end="177:110"><expr pos:start="177:29" pos:end="177:109"><name pos:start="177:29" pos:end="177:39"><name pos:start="177:29" pos:end="177:36">motion_y</name><index pos:start="177:37" pos:end="177:39">[<expr pos:start="177:38" pos:end="177:38"><name pos:start="177:38" pos:end="177:38">k</name></expr>]</index></name> <operator pos:start="177:41" pos:end="177:41">=</operator> <name pos:start="177:43" pos:end="177:109"><name pos:start="177:43" pos:end="177:61">motion_vector_table</name><index pos:start="177:62" pos:end="177:109">[<expr pos:start="177:63" pos:end="177:108"><call pos:start="177:63" pos:end="177:108"><name pos:start="177:63" pos:end="177:70">get_vlc2</name><argument_list pos:start="177:71" pos:end="177:108">(<argument pos:start="177:72" pos:end="177:73"><expr pos:start="177:72" pos:end="177:73"><name pos:start="177:72" pos:end="177:73">gb</name></expr></argument>, <argument pos:start="177:76" pos:end="177:101"><expr pos:start="177:76" pos:end="177:101"><name pos:start="177:76" pos:end="177:101"><name pos:start="177:76" pos:end="177:76">s</name><operator pos:start="177:77" pos:end="177:78">-&gt;</operator><name pos:start="177:79" pos:end="177:95">motion_vector_vlc</name><operator pos:start="177:96" pos:end="177:96">.</operator><name pos:start="177:97" pos:end="177:101">table</name></name></expr></argument>, <argument pos:start="177:104" pos:end="177:104"><expr pos:start="177:104" pos:end="177:104"><literal type="number" pos:start="177:104" pos:end="177:104">6</literal></expr></argument>, <argument pos:start="177:107" pos:end="177:107"><expr pos:start="177:107" pos:end="177:107"><literal type="number" pos:start="177:107" pos:end="177:107">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="179:27" pos:end="185:25">else <block pos:start="179:32" pos:end="185:25">{<block_content pos:start="181:29" pos:end="183:85">

                            <expr_stmt pos:start="181:29" pos:end="181:85"><expr pos:start="181:29" pos:end="181:84"><name pos:start="181:29" pos:end="181:39"><name pos:start="181:29" pos:end="181:36">motion_x</name><index pos:start="181:37" pos:end="181:39">[<expr pos:start="181:38" pos:end="181:38"><name pos:start="181:38" pos:end="181:38">k</name></expr>]</index></name> <operator pos:start="181:41" pos:end="181:41">=</operator> <name pos:start="181:43" pos:end="181:84"><name pos:start="181:43" pos:end="181:67">fixed_motion_vector_table</name><index pos:start="181:68" pos:end="181:84">[<expr pos:start="181:69" pos:end="181:83"><call pos:start="181:69" pos:end="181:83"><name pos:start="181:69" pos:end="181:76">get_bits</name><argument_list pos:start="181:77" pos:end="181:83">(<argument pos:start="181:78" pos:end="181:79"><expr pos:start="181:78" pos:end="181:79"><name pos:start="181:78" pos:end="181:79">gb</name></expr></argument>, <argument pos:start="181:82" pos:end="181:82"><expr pos:start="181:82" pos:end="181:82"><literal type="number" pos:start="181:82" pos:end="181:82">6</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="183:29" pos:end="183:85"><expr pos:start="183:29" pos:end="183:84"><name pos:start="183:29" pos:end="183:39"><name pos:start="183:29" pos:end="183:36">motion_y</name><index pos:start="183:37" pos:end="183:39">[<expr pos:start="183:38" pos:end="183:38"><name pos:start="183:38" pos:end="183:38">k</name></expr>]</index></name> <operator pos:start="183:41" pos:end="183:41">=</operator> <name pos:start="183:43" pos:end="183:84"><name pos:start="183:43" pos:end="183:67">fixed_motion_vector_table</name><index pos:start="183:68" pos:end="183:84">[<expr pos:start="183:69" pos:end="183:83"><call pos:start="183:69" pos:end="183:83"><name pos:start="183:69" pos:end="183:76">get_bits</name><argument_list pos:start="183:77" pos:end="183:83">(<argument pos:start="183:78" pos:end="183:79"><expr pos:start="183:78" pos:end="183:79"><name pos:start="183:78" pos:end="183:79">gb</name></expr></argument>, <argument pos:start="183:82" pos:end="183:82"><expr pos:start="183:82" pos:end="183:82"><literal type="number" pos:start="183:82" pos:end="183:82">6</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="187:25" pos:end="187:52"><expr pos:start="187:25" pos:end="187:51"><name pos:start="187:25" pos:end="187:37">last_motion_x</name> <operator pos:start="187:39" pos:end="187:39">=</operator> <name pos:start="187:41" pos:end="187:51"><name pos:start="187:41" pos:end="187:48">motion_x</name><index pos:start="187:49" pos:end="187:51">[<expr pos:start="187:50" pos:end="187:50"><name pos:start="187:50" pos:end="187:50">k</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="189:25" pos:end="189:52"><expr pos:start="189:25" pos:end="189:51"><name pos:start="189:25" pos:end="189:37">last_motion_y</name> <operator pos:start="189:39" pos:end="189:39">=</operator> <name pos:start="189:41" pos:end="189:51"><name pos:start="189:41" pos:end="189:48">motion_y</name><index pos:start="189:49" pos:end="189:51">[<expr pos:start="189:50" pos:end="189:50"><name pos:start="189:50" pos:end="189:50">k</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="191:25" pos:end="191:51"><expr pos:start="191:25" pos:end="191:50"><name pos:start="191:25" pos:end="191:35"><name pos:start="191:25" pos:end="191:32">motion_x</name><index pos:start="191:33" pos:end="191:35">[<expr pos:start="191:34" pos:end="191:34"><literal type="number" pos:start="191:34" pos:end="191:34">4</literal></expr>]</index></name> <operator pos:start="191:37" pos:end="191:38">+=</operator> <name pos:start="191:40" pos:end="191:50"><name pos:start="191:40" pos:end="191:47">motion_x</name><index pos:start="191:48" pos:end="191:50">[<expr pos:start="191:49" pos:end="191:49"><name pos:start="191:49" pos:end="191:49">k</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="193:25" pos:end="193:51"><expr pos:start="193:25" pos:end="193:50"><name pos:start="193:25" pos:end="193:35"><name pos:start="193:25" pos:end="193:32">motion_y</name><index pos:start="193:33" pos:end="193:35">[<expr pos:start="193:34" pos:end="193:34"><literal type="number" pos:start="193:34" pos:end="193:34">4</literal></expr>]</index></name> <operator pos:start="193:37" pos:end="193:38">+=</operator> <name pos:start="193:40" pos:end="193:50"><name pos:start="193:40" pos:end="193:47">motion_y</name><index pos:start="193:48" pos:end="193:50">[<expr pos:start="193:49" pos:end="193:49"><name pos:start="193:49" pos:end="193:49">k</name></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></for>



                    <expr_stmt pos:start="199:21" pos:end="201:56"><expr pos:start="199:21" pos:end="201:55"><name pos:start="199:21" pos:end="199:31"><name pos:start="199:21" pos:end="199:28">motion_x</name><index pos:start="199:29" pos:end="199:31">[<expr pos:start="199:30" pos:end="199:30"><literal type="number" pos:start="199:30" pos:end="199:30">5</literal></expr>]</index></name><operator pos:start="199:32" pos:end="199:32">=</operator>

                    <name pos:start="201:21" pos:end="201:31"><name pos:start="201:21" pos:end="201:28">motion_x</name><index pos:start="201:29" pos:end="201:31">[<expr pos:start="201:30" pos:end="201:30"><literal type="number" pos:start="201:30" pos:end="201:30">4</literal></expr>]</index></name><operator pos:start="201:32" pos:end="201:32">=</operator> <call pos:start="201:34" pos:end="201:55"><name pos:start="201:34" pos:end="201:39">RSHIFT</name><argument_list pos:start="201:40" pos:end="201:55">(<argument pos:start="201:41" pos:end="201:51"><expr pos:start="201:41" pos:end="201:51"><name pos:start="201:41" pos:end="201:51"><name pos:start="201:41" pos:end="201:48">motion_x</name><index pos:start="201:49" pos:end="201:51">[<expr pos:start="201:50" pos:end="201:50"><literal type="number" pos:start="201:50" pos:end="201:50">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="201:54" pos:end="201:54"><expr pos:start="201:54" pos:end="201:54"><literal type="number" pos:start="201:54" pos:end="201:54">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="203:21" pos:end="205:56"><expr pos:start="203:21" pos:end="205:55"><name pos:start="203:21" pos:end="203:31"><name pos:start="203:21" pos:end="203:28">motion_y</name><index pos:start="203:29" pos:end="203:31">[<expr pos:start="203:30" pos:end="203:30"><literal type="number" pos:start="203:30" pos:end="203:30">5</literal></expr>]</index></name><operator pos:start="203:32" pos:end="203:32">=</operator>

                    <name pos:start="205:21" pos:end="205:31"><name pos:start="205:21" pos:end="205:28">motion_y</name><index pos:start="205:29" pos:end="205:31">[<expr pos:start="205:30" pos:end="205:30"><literal type="number" pos:start="205:30" pos:end="205:30">4</literal></expr>]</index></name><operator pos:start="205:32" pos:end="205:32">=</operator> <call pos:start="205:34" pos:end="205:55"><name pos:start="205:34" pos:end="205:39">RSHIFT</name><argument_list pos:start="205:40" pos:end="205:55">(<argument pos:start="205:41" pos:end="205:51"><expr pos:start="205:41" pos:end="205:51"><name pos:start="205:41" pos:end="205:51"><name pos:start="205:41" pos:end="205:48">motion_y</name><index pos:start="205:49" pos:end="205:51">[<expr pos:start="205:50" pos:end="205:50"><literal type="number" pos:start="205:50" pos:end="205:50">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="205:54" pos:end="205:54"><expr pos:start="205:54" pos:end="205:54"><literal type="number" pos:start="205:54" pos:end="205:54">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="207:21" pos:end="207:26">break;</break>



                <case pos:start="211:17" pos:end="211:40">case <expr pos:start="211:22" pos:end="211:39"><name pos:start="211:22" pos:end="211:39">MODE_INTER_LAST_MV</name></expr>:</case>

                    <comment type="block" pos:start="213:21" pos:end="213:68">/* all 6 fragments use the last motion vector */</comment>

                    <expr_stmt pos:start="215:21" pos:end="215:48"><expr pos:start="215:21" pos:end="215:47"><name pos:start="215:21" pos:end="215:31"><name pos:start="215:21" pos:end="215:28">motion_x</name><index pos:start="215:29" pos:end="215:31">[<expr pos:start="215:30" pos:end="215:30"><literal type="number" pos:start="215:30" pos:end="215:30">0</literal></expr>]</index></name> <operator pos:start="215:33" pos:end="215:33">=</operator> <name pos:start="215:35" pos:end="215:47">last_motion_x</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="217:21" pos:end="217:48"><expr pos:start="217:21" pos:end="217:47"><name pos:start="217:21" pos:end="217:31"><name pos:start="217:21" pos:end="217:28">motion_y</name><index pos:start="217:29" pos:end="217:31">[<expr pos:start="217:30" pos:end="217:30"><literal type="number" pos:start="217:30" pos:end="217:30">0</literal></expr>]</index></name> <operator pos:start="217:33" pos:end="217:33">=</operator> <name pos:start="217:35" pos:end="217:47">last_motion_y</name></expr>;</expr_stmt>

                    <for pos:start="219:21" pos:end="225:21">for <control pos:start="219:25" pos:end="219:43">(<init pos:start="219:26" pos:end="219:31"><expr pos:start="219:26" pos:end="219:30"><name pos:start="219:26" pos:end="219:26">k</name> <operator pos:start="219:28" pos:end="219:28">=</operator> <literal type="number" pos:start="219:30" pos:end="219:30">1</literal></expr>;</init> <condition pos:start="219:33" pos:end="219:38"><expr pos:start="219:33" pos:end="219:37"><name pos:start="219:33" pos:end="219:33">k</name> <operator pos:start="219:35" pos:end="219:35">&lt;</operator> <literal type="number" pos:start="219:37" pos:end="219:37">6</literal></expr>;</condition> <incr pos:start="219:40" pos:end="219:42"><expr pos:start="219:40" pos:end="219:42"><name pos:start="219:40" pos:end="219:40">k</name><operator pos:start="219:41" pos:end="219:42">++</operator></expr></incr>)</control> <block pos:start="219:45" pos:end="225:21">{<block_content pos:start="221:25" pos:end="223:50">

                        <expr_stmt pos:start="221:25" pos:end="221:50"><expr pos:start="221:25" pos:end="221:49"><name pos:start="221:25" pos:end="221:35"><name pos:start="221:25" pos:end="221:32">motion_x</name><index pos:start="221:33" pos:end="221:35">[<expr pos:start="221:34" pos:end="221:34"><name pos:start="221:34" pos:end="221:34">k</name></expr>]</index></name> <operator pos:start="221:37" pos:end="221:37">=</operator> <name pos:start="221:39" pos:end="221:49"><name pos:start="221:39" pos:end="221:46">motion_x</name><index pos:start="221:47" pos:end="221:49">[<expr pos:start="221:48" pos:end="221:48"><literal type="number" pos:start="221:48" pos:end="221:48">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="223:25" pos:end="223:50"><expr pos:start="223:25" pos:end="223:49"><name pos:start="223:25" pos:end="223:35"><name pos:start="223:25" pos:end="223:32">motion_y</name><index pos:start="223:33" pos:end="223:35">[<expr pos:start="223:34" pos:end="223:34"><name pos:start="223:34" pos:end="223:34">k</name></expr>]</index></name> <operator pos:start="223:37" pos:end="223:37">=</operator> <name pos:start="223:39" pos:end="223:49"><name pos:start="223:39" pos:end="223:46">motion_y</name><index pos:start="223:47" pos:end="223:49">[<expr pos:start="223:48" pos:end="223:48"><literal type="number" pos:start="223:48" pos:end="223:48">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></for>



                    <comment type="block" pos:start="229:21" pos:end="231:38">/* no vector maintenance (last vector remains the

                     * last vector) */</comment>

                    <break pos:start="233:21" pos:end="233:26">break;</break>



                <case pos:start="237:17" pos:end="237:43">case <expr pos:start="237:22" pos:end="237:42"><name pos:start="237:22" pos:end="237:42">MODE_INTER_PRIOR_LAST</name></expr>:</case>

                    <comment type="block" pos:start="239:21" pos:end="241:44">/* all 6 fragments use the motion vector prior to the

                     * last motion vector */</comment>

                    <expr_stmt pos:start="243:21" pos:end="243:54"><expr pos:start="243:21" pos:end="243:53"><name pos:start="243:21" pos:end="243:31"><name pos:start="243:21" pos:end="243:28">motion_x</name><index pos:start="243:29" pos:end="243:31">[<expr pos:start="243:30" pos:end="243:30"><literal type="number" pos:start="243:30" pos:end="243:30">0</literal></expr>]</index></name> <operator pos:start="243:33" pos:end="243:33">=</operator> <name pos:start="243:35" pos:end="243:53">prior_last_motion_x</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="245:21" pos:end="245:54"><expr pos:start="245:21" pos:end="245:53"><name pos:start="245:21" pos:end="245:31"><name pos:start="245:21" pos:end="245:28">motion_y</name><index pos:start="245:29" pos:end="245:31">[<expr pos:start="245:30" pos:end="245:30"><literal type="number" pos:start="245:30" pos:end="245:30">0</literal></expr>]</index></name> <operator pos:start="245:33" pos:end="245:33">=</operator> <name pos:start="245:35" pos:end="245:53">prior_last_motion_y</name></expr>;</expr_stmt>

                    <for pos:start="247:21" pos:end="253:21">for <control pos:start="247:25" pos:end="247:43">(<init pos:start="247:26" pos:end="247:31"><expr pos:start="247:26" pos:end="247:30"><name pos:start="247:26" pos:end="247:26">k</name> <operator pos:start="247:28" pos:end="247:28">=</operator> <literal type="number" pos:start="247:30" pos:end="247:30">1</literal></expr>;</init> <condition pos:start="247:33" pos:end="247:38"><expr pos:start="247:33" pos:end="247:37"><name pos:start="247:33" pos:end="247:33">k</name> <operator pos:start="247:35" pos:end="247:35">&lt;</operator> <literal type="number" pos:start="247:37" pos:end="247:37">6</literal></expr>;</condition> <incr pos:start="247:40" pos:end="247:42"><expr pos:start="247:40" pos:end="247:42"><name pos:start="247:40" pos:end="247:40">k</name><operator pos:start="247:41" pos:end="247:42">++</operator></expr></incr>)</control> <block pos:start="247:45" pos:end="253:21">{<block_content pos:start="249:25" pos:end="251:50">

                        <expr_stmt pos:start="249:25" pos:end="249:50"><expr pos:start="249:25" pos:end="249:49"><name pos:start="249:25" pos:end="249:35"><name pos:start="249:25" pos:end="249:32">motion_x</name><index pos:start="249:33" pos:end="249:35">[<expr pos:start="249:34" pos:end="249:34"><name pos:start="249:34" pos:end="249:34">k</name></expr>]</index></name> <operator pos:start="249:37" pos:end="249:37">=</operator> <name pos:start="249:39" pos:end="249:49"><name pos:start="249:39" pos:end="249:46">motion_x</name><index pos:start="249:47" pos:end="249:49">[<expr pos:start="249:48" pos:end="249:48"><literal type="number" pos:start="249:48" pos:end="249:48">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="251:25" pos:end="251:50"><expr pos:start="251:25" pos:end="251:49"><name pos:start="251:25" pos:end="251:35"><name pos:start="251:25" pos:end="251:32">motion_y</name><index pos:start="251:33" pos:end="251:35">[<expr pos:start="251:34" pos:end="251:34"><name pos:start="251:34" pos:end="251:34">k</name></expr>]</index></name> <operator pos:start="251:37" pos:end="251:37">=</operator> <name pos:start="251:39" pos:end="251:49"><name pos:start="251:39" pos:end="251:46">motion_y</name><index pos:start="251:47" pos:end="251:49">[<expr pos:start="251:48" pos:end="251:48"><literal type="number" pos:start="251:48" pos:end="251:48">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></for>



                    <comment type="block" pos:start="257:21" pos:end="257:44">/* vector maintenance */</comment>

                    <expr_stmt pos:start="259:21" pos:end="259:56"><expr pos:start="259:21" pos:end="259:55"><name pos:start="259:21" pos:end="259:39">prior_last_motion_x</name> <operator pos:start="259:41" pos:end="259:41">=</operator> <name pos:start="259:43" pos:end="259:55">last_motion_x</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="261:21" pos:end="261:56"><expr pos:start="261:21" pos:end="261:55"><name pos:start="261:21" pos:end="261:39">prior_last_motion_y</name> <operator pos:start="261:41" pos:end="261:41">=</operator> <name pos:start="261:43" pos:end="261:55">last_motion_y</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="263:21" pos:end="263:48"><expr pos:start="263:21" pos:end="263:47"><name pos:start="263:21" pos:end="263:33">last_motion_x</name> <operator pos:start="263:35" pos:end="263:35">=</operator> <name pos:start="263:37" pos:end="263:47"><name pos:start="263:37" pos:end="263:44">motion_x</name><index pos:start="263:45" pos:end="263:47">[<expr pos:start="263:46" pos:end="263:46"><literal type="number" pos:start="263:46" pos:end="263:46">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="265:21" pos:end="265:48"><expr pos:start="265:21" pos:end="265:47"><name pos:start="265:21" pos:end="265:33">last_motion_y</name> <operator pos:start="265:35" pos:end="265:35">=</operator> <name pos:start="265:37" pos:end="265:47"><name pos:start="265:37" pos:end="265:44">motion_y</name><index pos:start="265:45" pos:end="265:47">[<expr pos:start="265:46" pos:end="265:46"><literal type="number" pos:start="265:46" pos:end="265:46">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <break pos:start="267:21" pos:end="267:26">break;</break>



                <default pos:start="271:17" pos:end="271:24">default:</default>

                    <comment type="block" pos:start="273:21" pos:end="273:75">/* covers intra, inter without MV, golden without MV */</comment>

                    <expr_stmt pos:start="275:21" pos:end="275:57"><expr pos:start="275:21" pos:end="275:56"><call pos:start="275:21" pos:end="275:56"><name pos:start="275:21" pos:end="275:26">memset</name><argument_list pos:start="275:27" pos:end="275:56">(<argument pos:start="275:28" pos:end="275:35"><expr pos:start="275:28" pos:end="275:35"><name pos:start="275:28" pos:end="275:35">motion_x</name></expr></argument>, <argument pos:start="275:38" pos:end="275:38"><expr pos:start="275:38" pos:end="275:38"><literal type="number" pos:start="275:38" pos:end="275:38">0</literal></expr></argument>, <argument pos:start="275:41" pos:end="275:55"><expr pos:start="275:41" pos:end="275:55"><literal type="number" pos:start="275:41" pos:end="275:41">6</literal> <operator pos:start="275:43" pos:end="275:43">*</operator> <sizeof pos:start="275:45" pos:end="275:55">sizeof<argument_list pos:start="275:51" pos:end="275:55">(<argument pos:start="275:52" pos:end="275:54"><expr pos:start="275:52" pos:end="275:54"><name pos:start="275:52" pos:end="275:54">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="277:21" pos:end="277:57"><expr pos:start="277:21" pos:end="277:56"><call pos:start="277:21" pos:end="277:56"><name pos:start="277:21" pos:end="277:26">memset</name><argument_list pos:start="277:27" pos:end="277:56">(<argument pos:start="277:28" pos:end="277:35"><expr pos:start="277:28" pos:end="277:35"><name pos:start="277:28" pos:end="277:35">motion_y</name></expr></argument>, <argument pos:start="277:38" pos:end="277:38"><expr pos:start="277:38" pos:end="277:38"><literal type="number" pos:start="277:38" pos:end="277:38">0</literal></expr></argument>, <argument pos:start="277:41" pos:end="277:55"><expr pos:start="277:41" pos:end="277:55"><literal type="number" pos:start="277:41" pos:end="277:41">6</literal> <operator pos:start="277:43" pos:end="277:43">*</operator> <sizeof pos:start="277:45" pos:end="277:55">sizeof<argument_list pos:start="277:51" pos:end="277:55">(<argument pos:start="277:52" pos:end="277:54"><expr pos:start="277:52" pos:end="277:54"><name pos:start="277:52" pos:end="277:54">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <comment type="block" pos:start="281:21" pos:end="281:47">/* no vector maintenance */</comment>

                    <break pos:start="283:21" pos:end="283:26">break;</break>

                </block_content>}</block></switch>



                <comment type="block" pos:start="289:17" pos:end="289:72">/* assign the motion vectors to the correct fragments */</comment>

                <expr_stmt pos:start="291:17" pos:end="295:62"><expr pos:start="291:17" pos:end="295:61"><call pos:start="291:17" pos:end="295:61"><name pos:start="291:17" pos:end="291:29">debug_vectors</name><argument_list pos:start="291:30" pos:end="295:61">(<argument pos:start="291:31" pos:end="291:103"><expr pos:start="291:31" pos:end="291:103"><literal type="string" pos:start="291:31" pos:end="291:103">"    vectors for macroblock starting @ fragment %d (coding method %d):\n"</literal></expr></argument>,

                    <argument pos:start="293:21" pos:end="293:36"><expr pos:start="293:21" pos:end="293:36"><name pos:start="293:21" pos:end="293:36">current_fragment</name></expr></argument>,

                    <argument pos:start="295:21" pos:end="295:60"><expr pos:start="295:21" pos:end="295:60"><name pos:start="295:21" pos:end="295:60"><name pos:start="295:21" pos:end="295:21">s</name><operator pos:start="295:22" pos:end="295:23">-&gt;</operator><name pos:start="295:24" pos:end="295:40">macroblock_coding</name><index pos:start="295:41" pos:end="295:60">[<expr pos:start="295:42" pos:end="295:59"><name pos:start="295:42" pos:end="295:59">current_macroblock</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="297:17" pos:end="325:17">for <control pos:start="297:21" pos:end="297:39">(<init pos:start="297:22" pos:end="297:27"><expr pos:start="297:22" pos:end="297:26"><name pos:start="297:22" pos:end="297:22">k</name> <operator pos:start="297:24" pos:end="297:24">=</operator> <literal type="number" pos:start="297:26" pos:end="297:26">0</literal></expr>;</init> <condition pos:start="297:29" pos:end="297:34"><expr pos:start="297:29" pos:end="297:33"><name pos:start="297:29" pos:end="297:29">k</name> <operator pos:start="297:31" pos:end="297:31">&lt;</operator> <literal type="number" pos:start="297:33" pos:end="297:33">6</literal></expr>;</condition> <incr pos:start="297:36" pos:end="297:38"><expr pos:start="297:36" pos:end="297:38"><name pos:start="297:36" pos:end="297:36">k</name><operator pos:start="297:37" pos:end="297:38">++</operator></expr></incr>)</control> <block pos:start="297:41" pos:end="325:17">{<block_content pos:start="299:21" pos:end="323:71">

                    <expr_stmt pos:start="299:21" pos:end="301:76"><expr pos:start="299:21" pos:end="301:75"><name pos:start="299:21" pos:end="299:36">current_fragment</name> <operator pos:start="299:38" pos:end="299:38">=</operator>

                        <name pos:start="301:25" pos:end="301:75"><name pos:start="301:25" pos:end="301:25">s</name><operator pos:start="301:26" pos:end="301:27">-&gt;</operator><name pos:start="301:28" pos:end="301:47">macroblock_fragments</name><index pos:start="301:48" pos:end="301:75">[<expr pos:start="301:49" pos:end="301:74"><name pos:start="301:49" pos:end="301:66">current_macroblock</name> <operator pos:start="301:68" pos:end="301:68">*</operator> <literal type="number" pos:start="301:70" pos:end="301:72">6</literal> <operator pos:start="301:72" pos:end="301:72">+</operator> <name pos:start="301:74" pos:end="301:74">k</name></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="303:21" pos:end="305:33"><if pos:start="303:21" pos:end="305:33">if <condition pos:start="303:24" pos:end="303:47">(<expr pos:start="303:25" pos:end="303:46"><name pos:start="303:25" pos:end="303:40">current_fragment</name> <operator pos:start="303:42" pos:end="303:43">==</operator> <operator pos:start="303:45" pos:end="303:45">-</operator><literal type="number" pos:start="303:46" pos:end="303:46">1</literal></expr>)</condition><block type="pseudo" pos:start="305:25" pos:end="305:33"><block_content pos:start="305:25" pos:end="305:33">

                        <continue pos:start="305:25" pos:end="305:33">continue;</continue></block_content></block></if></if_stmt>

                    <if_stmt pos:start="307:21" pos:end="315:21"><if pos:start="307:21" pos:end="315:21">if <condition pos:start="307:24" pos:end="307:62">(<expr pos:start="307:25" pos:end="307:61"><name pos:start="307:25" pos:end="307:40">current_fragment</name> <operator pos:start="307:42" pos:end="307:43">&gt;=</operator> <name pos:start="307:45" pos:end="307:61"><name pos:start="307:45" pos:end="307:45">s</name><operator pos:start="307:46" pos:end="307:47">-&gt;</operator><name pos:start="307:48" pos:end="307:61">fragment_count</name></name></expr>)</condition> <block pos:start="307:64" pos:end="315:21">{<block_content pos:start="309:25" pos:end="313:33">

                        <expr_stmt pos:start="309:25" pos:end="311:65"><expr pos:start="309:25" pos:end="311:64"><call pos:start="309:25" pos:end="311:64"><name pos:start="309:25" pos:end="309:30">av_log</name><argument_list pos:start="309:31" pos:end="311:64">(<argument pos:start="309:32" pos:end="309:39"><expr pos:start="309:32" pos:end="309:39"><name pos:start="309:32" pos:end="309:39"><name pos:start="309:32" pos:end="309:32">s</name><operator pos:start="309:33" pos:end="309:34">-&gt;</operator><name pos:start="309:35" pos:end="309:39">avctx</name></name></expr></argument>, <argument pos:start="309:42" pos:end="309:53"><expr pos:start="309:42" pos:end="309:53"><name pos:start="309:42" pos:end="309:53">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="309:56" pos:end="309:113"><expr pos:start="309:56" pos:end="309:113"><literal type="string" pos:start="309:56" pos:end="309:113">"  vp3:unpack_vectors(): bad fragment number (%d &gt;= %d)\n"</literal></expr></argument>,

                            <argument pos:start="311:29" pos:end="311:44"><expr pos:start="311:29" pos:end="311:44"><name pos:start="311:29" pos:end="311:44">current_fragment</name></expr></argument>, <argument pos:start="311:47" pos:end="311:63"><expr pos:start="311:47" pos:end="311:63"><name pos:start="311:47" pos:end="311:63"><name pos:start="311:47" pos:end="311:47">s</name><operator pos:start="311:48" pos:end="311:49">-&gt;</operator><name pos:start="311:50" pos:end="311:63">fragment_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="313:25" pos:end="313:33">return <expr pos:start="313:32" pos:end="313:32"><literal type="number" pos:start="313:32" pos:end="313:32">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="317:21" pos:end="317:78"><expr pos:start="317:21" pos:end="317:77"><name pos:start="317:21" pos:end="317:54"><name pos:start="317:21" pos:end="317:21">s</name><operator pos:start="317:22" pos:end="317:23">-&gt;</operator><name pos:start="317:24" pos:end="317:36">all_fragments</name><index pos:start="317:37" pos:end="317:54">[<expr pos:start="317:38" pos:end="317:53"><name pos:start="317:38" pos:end="317:53">current_fragment</name></expr>]</index></name><operator pos:start="317:55" pos:end="317:55">.</operator><name pos:start="317:56" pos:end="317:63">motion_x</name> <operator pos:start="317:65" pos:end="317:65">=</operator> <name pos:start="317:67" pos:end="317:77"><name pos:start="317:67" pos:end="317:74">motion_x</name><index pos:start="317:75" pos:end="317:77">[<expr pos:start="317:76" pos:end="317:76"><name pos:start="317:76" pos:end="317:76">k</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="319:21" pos:end="319:78"><expr pos:start="319:21" pos:end="319:77"><name pos:start="319:21" pos:end="319:54"><name pos:start="319:21" pos:end="319:21">s</name><operator pos:start="319:22" pos:end="319:23">-&gt;</operator><name pos:start="319:24" pos:end="319:36">all_fragments</name><index pos:start="319:37" pos:end="319:54">[<expr pos:start="319:38" pos:end="319:53"><name pos:start="319:38" pos:end="319:53">current_fragment</name></expr>]</index></name><operator pos:start="319:55" pos:end="319:55">.</operator><name pos:start="319:56" pos:end="319:63">motion_y</name> <operator pos:start="319:65" pos:end="319:65">=</operator> <name pos:start="319:67" pos:end="319:77"><name pos:start="319:67" pos:end="319:74">motion_y</name><index pos:start="319:75" pos:end="319:77">[<expr pos:start="319:76" pos:end="319:76"><name pos:start="319:76" pos:end="319:76">k</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="321:21" pos:end="323:71"><expr pos:start="321:21" pos:end="323:70"><call pos:start="321:21" pos:end="323:70"><name pos:start="321:21" pos:end="321:33">debug_vectors</name><argument_list pos:start="321:34" pos:end="323:70">(<argument pos:start="321:35" pos:end="321:75"><expr pos:start="321:35" pos:end="321:75"><literal type="string" pos:start="321:35" pos:end="321:75">"    vector %d: fragment %d = (%d, %d)\n"</literal></expr></argument>,

                        <argument pos:start="323:25" pos:end="323:25"><expr pos:start="323:25" pos:end="323:25"><name pos:start="323:25" pos:end="323:25">k</name></expr></argument>, <argument pos:start="323:28" pos:end="323:43"><expr pos:start="323:28" pos:end="323:43"><name pos:start="323:28" pos:end="323:43">current_fragment</name></expr></argument>, <argument pos:start="323:46" pos:end="323:56"><expr pos:start="323:46" pos:end="323:56"><name pos:start="323:46" pos:end="323:56"><name pos:start="323:46" pos:end="323:53">motion_x</name><index pos:start="323:54" pos:end="323:56">[<expr pos:start="323:55" pos:end="323:55"><name pos:start="323:55" pos:end="323:55">k</name></expr>]</index></name></expr></argument>, <argument pos:start="323:59" pos:end="323:69"><expr pos:start="323:59" pos:end="323:69"><name pos:start="323:59" pos:end="323:69"><name pos:start="323:59" pos:end="323:66">motion_y</name><index pos:start="323:67" pos:end="323:69">[<expr pos:start="323:68" pos:end="323:68"><name pos:start="323:68" pos:end="323:68">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <return pos:start="335:5" pos:end="335:13">return <expr pos:start="335:12" pos:end="335:12"><literal type="number" pos:start="335:12" pos:end="335:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
