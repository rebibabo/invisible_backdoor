<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25068.c" pos:tabs="8"><function pos:start="1:1" pos:end="205:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">ehci_process_itd</name><parameter_list pos:start="1:28" pos:end="3:41">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:37">EHCIState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">ehci</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:40"><decl pos:start="3:29" pos:end="3:40"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:35">EHCIitd</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">itd</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="205:1">{<block_content pos:start="7:5" pos:end="203:13">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">USBDevice</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">USBEndpoint</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">ep</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:45"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:14">i</name></decl>, <decl pos:start="13:17" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:17" pos:end="13:19">len</name></decl>, <decl pos:start="13:22" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:22" pos:end="13:24">pid</name></decl>, <decl pos:start="13:27" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:27" pos:end="13:29">dir</name></decl>, <decl pos:start="13:32" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:32" pos:end="13:38">devaddr</name></decl>, <decl pos:start="13:41" pos:end="13:44"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:41" pos:end="13:44">endp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:15">pg</name></decl>, <decl pos:start="15:18" pos:end="15:20"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:18" pos:end="15:20">off</name></decl>, <decl pos:start="15:23" pos:end="15:26"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:23" pos:end="15:26">ptr1</name></decl>, <decl pos:start="15:29" pos:end="15:32"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:29" pos:end="15:32">ptr2</name></decl>, <decl pos:start="15:35" pos:end="15:37"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:35" pos:end="15:37">max</name></decl>, <decl pos:start="15:40" pos:end="15:43"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:40" pos:end="15:43">mult</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:49"><expr pos:start="19:5" pos:end="19:48"><name pos:start="19:5" pos:end="19:7">dir</name> <operator pos:start="19:9" pos:end="19:9">=</operator><operator pos:start="19:10" pos:end="19:10">(</operator><name pos:start="19:11" pos:end="19:24"><name pos:start="19:11" pos:end="19:13">itd</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:21">bufptr</name><index pos:start="19:22" pos:end="19:24">[<expr pos:start="19:23" pos:end="19:23"><literal type="number" pos:start="19:23" pos:end="19:23">1</literal></expr>]</index></name> <operator pos:start="19:26" pos:end="19:26">&amp;</operator> <name pos:start="19:28" pos:end="19:47">ITD_BUFPTR_DIRECTION</name><operator pos:start="19:48" pos:end="19:48">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:60"><expr pos:start="21:5" pos:end="21:59"><name pos:start="21:5" pos:end="21:11">devaddr</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:59"><name pos:start="21:15" pos:end="21:23">get_field</name><argument_list pos:start="21:24" pos:end="21:59">(<argument pos:start="21:25" pos:end="21:38"><expr pos:start="21:25" pos:end="21:38"><name pos:start="21:25" pos:end="21:38"><name pos:start="21:25" pos:end="21:27">itd</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:35">bufptr</name><index pos:start="21:36" pos:end="21:38">[<expr pos:start="21:37" pos:end="21:37"><literal type="number" pos:start="21:37" pos:end="21:37">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="21:41" pos:end="21:58"><expr pos:start="21:41" pos:end="21:58"><name pos:start="21:41" pos:end="21:58">ITD_BUFPTR_DEVADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:52"><expr pos:start="23:5" pos:end="23:51"><name pos:start="23:5" pos:end="23:8">endp</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:51"><name pos:start="23:12" pos:end="23:20">get_field</name><argument_list pos:start="23:21" pos:end="23:51">(<argument pos:start="23:22" pos:end="23:35"><expr pos:start="23:22" pos:end="23:35"><name pos:start="23:22" pos:end="23:35"><name pos:start="23:22" pos:end="23:24">itd</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:32">bufptr</name><index pos:start="23:33" pos:end="23:35">[<expr pos:start="23:34" pos:end="23:34"><literal type="number" pos:start="23:34" pos:end="23:34">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="23:38" pos:end="23:50"><expr pos:start="23:38" pos:end="23:50"><name pos:start="23:38" pos:end="23:50">ITD_BUFPTR_EP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:55"><expr pos:start="25:5" pos:end="25:54"><name pos:start="25:5" pos:end="25:7">max</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:54"><name pos:start="25:11" pos:end="25:19">get_field</name><argument_list pos:start="25:20" pos:end="25:54">(<argument pos:start="25:21" pos:end="25:34"><expr pos:start="25:21" pos:end="25:34"><name pos:start="25:21" pos:end="25:34"><name pos:start="25:21" pos:end="25:23">itd</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:31">bufptr</name><index pos:start="25:32" pos:end="25:34">[<expr pos:start="25:33" pos:end="25:33"><literal type="number" pos:start="25:33" pos:end="25:33">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:37" pos:end="25:53"><expr pos:start="25:37" pos:end="25:53"><name pos:start="25:37" pos:end="25:53">ITD_BUFPTR_MAXPKT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:54"><expr pos:start="27:5" pos:end="27:53"><name pos:start="27:5" pos:end="27:8">mult</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:53"><name pos:start="27:12" pos:end="27:20">get_field</name><argument_list pos:start="27:21" pos:end="27:53">(<argument pos:start="27:22" pos:end="27:35"><expr pos:start="27:22" pos:end="27:35"><name pos:start="27:22" pos:end="27:35"><name pos:start="27:22" pos:end="27:24">itd</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:32">bufptr</name><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><literal type="number" pos:start="27:34" pos:end="27:34">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="27:38" pos:end="27:52"><expr pos:start="27:38" pos:end="27:52"><name pos:start="27:38" pos:end="27:52">ITD_BUFPTR_MULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="31:5" pos:end="201:5">for<control pos:start="31:8" pos:end="31:26">(<init pos:start="31:9" pos:end="31:14"><expr pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:9">i</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <literal type="number" pos:start="31:13" pos:end="31:13">0</literal></expr>;</init> <condition pos:start="31:16" pos:end="31:21"><expr pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:16">i</name> <operator pos:start="31:18" pos:end="31:18">&lt;</operator> <literal type="number" pos:start="31:20" pos:end="31:20">8</literal></expr>;</condition> <incr pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><name pos:start="31:23" pos:end="31:23">i</name><operator pos:start="31:24" pos:end="31:25">++</operator></expr></incr>)</control> <block pos:start="31:28" pos:end="201:5">{<block_content pos:start="33:9" pos:end="199:9">

        <if_stmt pos:start="33:9" pos:end="199:9"><if pos:start="33:9" pos:end="199:9">if <condition pos:start="33:12" pos:end="33:47">(<expr pos:start="33:13" pos:end="33:46"><name pos:start="33:13" pos:end="33:28"><name pos:start="33:13" pos:end="33:15">itd</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:25">transact</name><index pos:start="33:26" pos:end="33:28">[<expr pos:start="33:27" pos:end="33:27"><name pos:start="33:27" pos:end="33:27">i</name></expr>]</index></name> <operator pos:start="33:30" pos:end="33:30">&amp;</operator> <name pos:start="33:32" pos:end="33:46">ITD_XACT_ACTIVE</name></expr>)</condition> <block pos:start="33:49" pos:end="199:9">{<block_content pos:start="35:13" pos:end="197:49">

            <expr_stmt pos:start="35:13" pos:end="35:63"><expr pos:start="35:13" pos:end="35:62"><name pos:start="35:13" pos:end="35:14">pg</name>   <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="35:62"><name pos:start="35:20" pos:end="35:28">get_field</name><argument_list pos:start="35:29" pos:end="35:62">(<argument pos:start="35:30" pos:end="35:45"><expr pos:start="35:30" pos:end="35:45"><name pos:start="35:30" pos:end="35:45"><name pos:start="35:30" pos:end="35:32">itd</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:42">transact</name><index pos:start="35:43" pos:end="35:45">[<expr pos:start="35:44" pos:end="35:44"><name pos:start="35:44" pos:end="35:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="35:48" pos:end="35:61"><expr pos:start="35:48" pos:end="35:61"><name pos:start="35:48" pos:end="35:61">ITD_XACT_PGSEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:59"><expr pos:start="37:13" pos:end="37:58"><name pos:start="37:13" pos:end="37:15">off</name>  <operator pos:start="37:18" pos:end="37:18">=</operator> <name pos:start="37:20" pos:end="37:35"><name pos:start="37:20" pos:end="37:22">itd</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:32">transact</name><index pos:start="37:33" pos:end="37:35">[<expr pos:start="37:34" pos:end="37:34"><name pos:start="37:34" pos:end="37:34">i</name></expr>]</index></name> <operator pos:start="37:37" pos:end="37:37">&amp;</operator> <name pos:start="37:39" pos:end="37:58">ITD_XACT_OFFSET_MASK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:55"><expr pos:start="39:13" pos:end="39:54"><name pos:start="39:13" pos:end="39:16">ptr1</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <operator pos:start="39:20" pos:end="39:20">(</operator><name pos:start="39:21" pos:end="39:35"><name pos:start="39:21" pos:end="39:23">itd</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:31">bufptr</name><index pos:start="39:32" pos:end="39:35">[<expr pos:start="39:33" pos:end="39:34"><name pos:start="39:33" pos:end="39:34">pg</name></expr>]</index></name> <operator pos:start="39:37" pos:end="39:37">&amp;</operator> <name pos:start="39:39" pos:end="39:53">ITD_BUFPTR_MASK</name><operator pos:start="39:54" pos:end="39:54">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:57"><expr pos:start="41:13" pos:end="41:56"><name pos:start="41:13" pos:end="41:16">ptr2</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <operator pos:start="41:20" pos:end="41:20">(</operator><name pos:start="41:21" pos:end="41:37"><name pos:start="41:21" pos:end="41:23">itd</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:31">bufptr</name><index pos:start="41:32" pos:end="41:37">[<expr pos:start="41:33" pos:end="41:36"><name pos:start="41:33" pos:end="41:34">pg</name><operator pos:start="41:35" pos:end="41:35">+</operator><literal type="number" pos:start="41:36" pos:end="41:36">1</literal></expr>]</index></name> <operator pos:start="41:39" pos:end="41:39">&amp;</operator> <name pos:start="41:41" pos:end="41:55">ITD_BUFPTR_MASK</name><operator pos:start="41:56" pos:end="41:56">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:64"><expr pos:start="43:13" pos:end="43:63"><name pos:start="43:13" pos:end="43:15">len</name>  <operator pos:start="43:18" pos:end="43:18">=</operator> <call pos:start="43:20" pos:end="43:63"><name pos:start="43:20" pos:end="43:28">get_field</name><argument_list pos:start="43:29" pos:end="43:63">(<argument pos:start="43:30" pos:end="43:45"><expr pos:start="43:30" pos:end="43:45"><name pos:start="43:30" pos:end="43:45"><name pos:start="43:30" pos:end="43:32">itd</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:42">transact</name><index pos:start="43:43" pos:end="43:45">[<expr pos:start="43:44" pos:end="43:44"><name pos:start="43:44" pos:end="43:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="43:48" pos:end="43:62"><expr pos:start="43:48" pos:end="43:62"><name pos:start="43:48" pos:end="43:62">ITD_XACT_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="47:13" pos:end="51:13"><if pos:start="47:13" pos:end="51:13">if <condition pos:start="47:16" pos:end="47:33">(<expr pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:19">len</name> <operator pos:start="47:21" pos:end="47:21">&gt;</operator> <name pos:start="47:23" pos:end="47:25">max</name> <operator pos:start="47:27" pos:end="47:27">*</operator> <name pos:start="47:29" pos:end="47:32">mult</name></expr>)</condition> <block pos:start="47:35" pos:end="51:13">{<block_content pos:start="49:17" pos:end="49:33">

                <expr_stmt pos:start="49:17" pos:end="49:33"><expr pos:start="49:17" pos:end="49:32"><name pos:start="49:17" pos:end="49:19">len</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:25">max</name> <operator pos:start="49:27" pos:end="49:27">*</operator> <name pos:start="49:29" pos:end="49:32">mult</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="55:13" pos:end="59:13"><if pos:start="55:13" pos:end="59:13">if <condition pos:start="55:16" pos:end="55:32">(<expr pos:start="55:17" pos:end="55:31"><name pos:start="55:17" pos:end="55:19">len</name> <operator pos:start="55:21" pos:end="55:21">&gt;</operator> <name pos:start="55:23" pos:end="55:31">BUFF_SIZE</name></expr>)</condition> <block pos:start="55:34" pos:end="59:13">{<block_content pos:start="57:17" pos:end="57:39">

                <return pos:start="57:17" pos:end="57:39">return <expr pos:start="57:24" pos:end="57:38"><name pos:start="57:24" pos:end="57:38">USB_RET_PROCERR</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="63:13" pos:end="63:60"><expr pos:start="63:13" pos:end="63:59"><call pos:start="63:13" pos:end="63:59"><name pos:start="63:13" pos:end="63:31">pci_dma_sglist_init</name><argument_list pos:start="63:32" pos:end="63:59">(<argument pos:start="63:33" pos:end="63:43"><expr pos:start="63:33" pos:end="63:43"><operator pos:start="63:33" pos:end="63:33">&amp;</operator><name pos:start="63:34" pos:end="63:43"><name pos:start="63:34" pos:end="63:37">ehci</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:43">isgl</name></name></expr></argument>, <argument pos:start="63:46" pos:end="63:55"><expr pos:start="63:46" pos:end="63:55"><operator pos:start="63:46" pos:end="63:46">&amp;</operator><name pos:start="63:47" pos:end="63:55"><name pos:start="63:47" pos:end="63:50">ehci</name><operator pos:start="63:51" pos:end="63:52">-&gt;</operator><name pos:start="63:53" pos:end="63:55">dev</name></name></expr></argument>, <argument pos:start="63:58" pos:end="63:58"><expr pos:start="63:58" pos:end="63:58"><literal type="number" pos:start="63:58" pos:end="63:58">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="81:13"><if pos:start="65:13" pos:end="77:13">if <condition pos:start="65:16" pos:end="65:33">(<expr pos:start="65:17" pos:end="65:32"><name pos:start="65:17" pos:end="65:19">off</name> <operator pos:start="65:21" pos:end="65:21">+</operator> <name pos:start="65:23" pos:end="65:25">len</name> <operator pos:start="65:27" pos:end="65:27">&gt;</operator> <literal type="number" pos:start="65:29" pos:end="65:32">4096</literal></expr>)</condition> <block pos:start="65:35" pos:end="77:13">{<block_content pos:start="69:17" pos:end="75:57">

                <comment type="block" pos:start="67:17" pos:end="67:50">/* transfer crosses page border */</comment>

                <decl_stmt pos:start="69:17" pos:end="69:49"><decl pos:start="69:17" pos:end="69:48"><type pos:start="69:17" pos:end="69:24"><name pos:start="69:17" pos:end="69:24">uint32_t</name></type> <name pos:start="69:26" pos:end="69:29">len2</name> <init pos:start="69:31" pos:end="69:48">= <expr pos:start="69:33" pos:end="69:48"><name pos:start="69:33" pos:end="69:35">off</name> <operator pos:start="69:37" pos:end="69:37">+</operator> <name pos:start="69:39" pos:end="69:41">len</name> <operator pos:start="69:43" pos:end="69:43">-</operator> <literal type="number" pos:start="69:45" pos:end="69:48">4096</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="71:17" pos:end="71:43"><decl pos:start="71:17" pos:end="71:42"><type pos:start="71:17" pos:end="71:24"><name pos:start="71:17" pos:end="71:24">uint32_t</name></type> <name pos:start="71:26" pos:end="71:29">len1</name> <init pos:start="71:31" pos:end="71:42">= <expr pos:start="71:33" pos:end="71:42"><name pos:start="71:33" pos:end="71:35">len</name> <operator pos:start="71:37" pos:end="71:37">-</operator> <name pos:start="71:39" pos:end="71:42">len2</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:63"><expr pos:start="73:17" pos:end="73:62"><call pos:start="73:17" pos:end="73:62"><name pos:start="73:17" pos:end="73:31">qemu_sglist_add</name><argument_list pos:start="73:32" pos:end="73:62">(<argument pos:start="73:33" pos:end="73:43"><expr pos:start="73:33" pos:end="73:43"><operator pos:start="73:33" pos:end="73:33">&amp;</operator><name pos:start="73:34" pos:end="73:43"><name pos:start="73:34" pos:end="73:37">ehci</name><operator pos:start="73:38" pos:end="73:39">-&gt;</operator><name pos:start="73:40" pos:end="73:43">isgl</name></name></expr></argument>, <argument pos:start="73:46" pos:end="73:55"><expr pos:start="73:46" pos:end="73:55"><name pos:start="73:46" pos:end="73:49">ptr1</name> <operator pos:start="73:51" pos:end="73:51">+</operator> <name pos:start="73:53" pos:end="73:55">off</name></expr></argument>, <argument pos:start="73:58" pos:end="73:61"><expr pos:start="73:58" pos:end="73:61"><name pos:start="73:58" pos:end="73:61">len1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:57"><expr pos:start="75:17" pos:end="75:56"><call pos:start="75:17" pos:end="75:56"><name pos:start="75:17" pos:end="75:31">qemu_sglist_add</name><argument_list pos:start="75:32" pos:end="75:56">(<argument pos:start="75:33" pos:end="75:43"><expr pos:start="75:33" pos:end="75:43"><operator pos:start="75:33" pos:end="75:33">&amp;</operator><name pos:start="75:34" pos:end="75:43"><name pos:start="75:34" pos:end="75:37">ehci</name><operator pos:start="75:38" pos:end="75:39">-&gt;</operator><name pos:start="75:40" pos:end="75:43">isgl</name></name></expr></argument>, <argument pos:start="75:46" pos:end="75:49"><expr pos:start="75:46" pos:end="75:49"><name pos:start="75:46" pos:end="75:49">ptr2</name></expr></argument>, <argument pos:start="75:52" pos:end="75:55"><expr pos:start="75:52" pos:end="75:55"><name pos:start="75:52" pos:end="75:55">len2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="77:15" pos:end="81:13">else <block pos:start="77:20" pos:end="81:13">{<block_content pos:start="79:17" pos:end="79:62">

                <expr_stmt pos:start="79:17" pos:end="79:62"><expr pos:start="79:17" pos:end="79:61"><call pos:start="79:17" pos:end="79:61"><name pos:start="79:17" pos:end="79:31">qemu_sglist_add</name><argument_list pos:start="79:32" pos:end="79:61">(<argument pos:start="79:33" pos:end="79:43"><expr pos:start="79:33" pos:end="79:43"><operator pos:start="79:33" pos:end="79:33">&amp;</operator><name pos:start="79:34" pos:end="79:43"><name pos:start="79:34" pos:end="79:37">ehci</name><operator pos:start="79:38" pos:end="79:39">-&gt;</operator><name pos:start="79:40" pos:end="79:43">isgl</name></name></expr></argument>, <argument pos:start="79:46" pos:end="79:55"><expr pos:start="79:46" pos:end="79:55"><name pos:start="79:46" pos:end="79:49">ptr1</name> <operator pos:start="79:51" pos:end="79:51">+</operator> <name pos:start="79:53" pos:end="79:55">off</name></expr></argument>, <argument pos:start="79:58" pos:end="79:60"><expr pos:start="79:58" pos:end="79:60"><name pos:start="79:58" pos:end="79:60">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="85:13" pos:end="85:53"><expr pos:start="85:13" pos:end="85:52"><name pos:start="85:13" pos:end="85:15">pid</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <ternary pos:start="85:19" pos:end="85:52"><condition pos:start="85:19" pos:end="85:23"><expr pos:start="85:19" pos:end="85:21"><name pos:start="85:19" pos:end="85:21">dir</name></expr> ?</condition><then pos:start="85:25" pos:end="85:36"> <expr pos:start="85:25" pos:end="85:36"><name pos:start="85:25" pos:end="85:36">USB_TOKEN_IN</name></expr> </then><else pos:start="85:38" pos:end="85:52">: <expr pos:start="85:40" pos:end="85:52"><name pos:start="85:40" pos:end="85:52">USB_TOKEN_OUT</name></expr></else></ternary></expr>;</expr_stmt>



            <expr_stmt pos:start="89:13" pos:end="89:50"><expr pos:start="89:13" pos:end="89:49"><name pos:start="89:13" pos:end="89:15">dev</name> <operator pos:start="89:17" pos:end="89:17">=</operator> <call pos:start="89:19" pos:end="89:49"><name pos:start="89:19" pos:end="89:34">ehci_find_device</name><argument_list pos:start="89:35" pos:end="89:49">(<argument pos:start="89:36" pos:end="89:39"><expr pos:start="89:36" pos:end="89:39"><name pos:start="89:36" pos:end="89:39">ehci</name></expr></argument>, <argument pos:start="89:42" pos:end="89:48"><expr pos:start="89:42" pos:end="89:48"><name pos:start="89:42" pos:end="89:48">devaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:44"><expr pos:start="91:13" pos:end="91:43"><name pos:start="91:13" pos:end="91:14">ep</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <call pos:start="91:18" pos:end="91:43"><name pos:start="91:18" pos:end="91:27">usb_ep_get</name><argument_list pos:start="91:28" pos:end="91:43">(<argument pos:start="91:29" pos:end="91:31"><expr pos:start="91:29" pos:end="91:31"><name pos:start="91:29" pos:end="91:31">dev</name></expr></argument>, <argument pos:start="91:34" pos:end="91:36"><expr pos:start="91:34" pos:end="91:36"><name pos:start="91:34" pos:end="91:36">pid</name></expr></argument>, <argument pos:start="91:39" pos:end="91:42"><expr pos:start="91:39" pos:end="91:42"><name pos:start="91:39" pos:end="91:42">endp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:54"><expr pos:start="93:13" pos:end="93:53"><call pos:start="93:13" pos:end="93:53"><name pos:start="93:13" pos:end="93:28">usb_packet_setup</name><argument_list pos:start="93:29" pos:end="93:53">(<argument pos:start="93:30" pos:end="93:43"><expr pos:start="93:30" pos:end="93:43"><operator pos:start="93:30" pos:end="93:30">&amp;</operator><name pos:start="93:31" pos:end="93:43"><name pos:start="93:31" pos:end="93:34">ehci</name><operator pos:start="93:35" pos:end="93:36">-&gt;</operator><name pos:start="93:37" pos:end="93:43">ipacket</name></name></expr></argument>, <argument pos:start="93:46" pos:end="93:48"><expr pos:start="93:46" pos:end="93:48"><name pos:start="93:46" pos:end="93:48">pid</name></expr></argument>, <argument pos:start="93:51" pos:end="93:52"><expr pos:start="93:51" pos:end="93:52"><name pos:start="93:51" pos:end="93:52">ep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:56"><expr pos:start="95:13" pos:end="95:55"><call pos:start="95:13" pos:end="95:55"><name pos:start="95:13" pos:end="95:26">usb_packet_map</name><argument_list pos:start="95:27" pos:end="95:55">(<argument pos:start="95:28" pos:end="95:41"><expr pos:start="95:28" pos:end="95:41"><operator pos:start="95:28" pos:end="95:28">&amp;</operator><name pos:start="95:29" pos:end="95:41"><name pos:start="95:29" pos:end="95:32">ehci</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:41">ipacket</name></name></expr></argument>, <argument pos:start="95:44" pos:end="95:54"><expr pos:start="95:44" pos:end="95:54"><operator pos:start="95:44" pos:end="95:44">&amp;</operator><name pos:start="95:45" pos:end="95:54"><name pos:start="95:45" pos:end="95:48">ehci</name><operator pos:start="95:49" pos:end="95:50">-&gt;</operator><name pos:start="95:51" pos:end="95:54">isgl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="99:13" pos:end="99:57"><expr pos:start="99:13" pos:end="99:56"><name pos:start="99:13" pos:end="99:15">ret</name> <operator pos:start="99:17" pos:end="99:17">=</operator> <call pos:start="99:19" pos:end="99:56"><name pos:start="99:19" pos:end="99:35">usb_handle_packet</name><argument_list pos:start="99:36" pos:end="99:56">(<argument pos:start="99:37" pos:end="99:39"><expr pos:start="99:37" pos:end="99:39"><name pos:start="99:37" pos:end="99:39">dev</name></expr></argument>, <argument pos:start="99:42" pos:end="99:55"><expr pos:start="99:42" pos:end="99:55"><operator pos:start="99:42" pos:end="99:42">&amp;</operator><name pos:start="99:43" pos:end="99:55"><name pos:start="99:43" pos:end="99:46">ehci</name><operator pos:start="99:47" pos:end="99:48">-&gt;</operator><name pos:start="99:49" pos:end="99:55">ipacket</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="103:13" pos:end="103:45"><expr pos:start="103:13" pos:end="103:44"><call pos:start="103:13" pos:end="103:44"><name pos:start="103:13" pos:end="103:28">usb_packet_unmap</name><argument_list pos:start="103:29" pos:end="103:44">(<argument pos:start="103:30" pos:end="103:43"><expr pos:start="103:30" pos:end="103:43"><operator pos:start="103:30" pos:end="103:30">&amp;</operator><name pos:start="103:31" pos:end="103:43"><name pos:start="103:31" pos:end="103:34">ehci</name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:43">ipacket</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="160:0"><expr pos:start="105:13" pos:end="105:44"><call pos:start="105:13" pos:end="105:44"><name pos:start="105:13" pos:end="105:31">qemu_sglist_destroy</name><argument_list pos:start="105:32" pos:end="105:44">(<argument pos:start="105:33" pos:end="105:43"><expr pos:start="105:33" pos:end="105:43"><operator pos:start="105:33" pos:end="105:33">&amp;</operator><name pos:start="105:34" pos:end="105:43"><name pos:start="105:34" pos:end="105:37">ehci</name><operator pos:start="105:38" pos:end="105:39">-&gt;</operator><name pos:start="105:40" pos:end="105:43">isgl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="109:1" pos:end="109:5">#<cpp:directive pos:start="109:2" pos:end="109:3">if</cpp:directive> <expr pos:start="109:5" pos:end="109:5"><literal type="number" pos:start="109:5" pos:end="109:5">0</literal></expr></cpp:if>

            <comment type="block" pos:start="111:13" pos:end="117:15">/*  In isoch, there is no facility to indicate a NAK so let's

             *  instead just complete a zero-byte transaction.  Setting

             *  DBERR seems too draconian.

             */</comment>



            if (ret == USB_RET_NAK) {

                if (ehci-&gt;isoch_pause &gt; 0) {

                    DPRINTF("ISOCH: received a NAK but paused so returning\n");

                    ehci-&gt;isoch_pause--;

                    return 0;

                } else if (ehci-&gt;isoch_pause == -1) {

                    DPRINTF("ISOCH: recv NAK &amp; isoch pause inactive, setting\n");

                    <comment type="line" pos:start="135:21" pos:end="135:76">// Pause frindex for up to 50 msec waiting for data from</comment>

                    <comment type="line" pos:start="137:21" pos:end="137:29">// remote</comment>

                    ehci-&gt;isoch_pause = 50;

                    return 0;

                } else {

                    DPRINTF("ISOCH: isoch pause timeout! return 0\n");

                    ret = 0;

                }

            } else {

                DPRINTF("ISOCH: received ACK, clearing pause\n");

                ehci-&gt;isoch_pause = -1;

            }

<cpp:else pos:start="159:1" pos:end="159:5">#<cpp:directive pos:start="159:2" pos:end="159:5">else</cpp:directive></cpp:else>

            <if_stmt pos:start="161:13" pos:end="168:0"><if pos:start="161:13" pos:end="168:0">if <condition pos:start="161:16" pos:end="161:35">(<expr pos:start="161:17" pos:end="161:34"><name pos:start="161:17" pos:end="161:19">ret</name> <operator pos:start="161:21" pos:end="161:22">==</operator> <name pos:start="161:24" pos:end="161:34">USB_RET_NAK</name></expr>)</condition> <block pos:start="161:37" pos:end="168:0">{<block_content pos:start="163:17" pos:end="163:24">

                <expr_stmt pos:start="163:17" pos:end="163:24"><expr pos:start="163:17" pos:end="163:23"><name pos:start="163:17" pos:end="163:19">ret</name> <operator pos:start="163:21" pos:end="163:21">=</operator> <literal type="number" pos:start="163:23" pos:end="163:23">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="167:1" pos:end="167:6">#<cpp:directive pos:start="167:2" pos:end="167:6">endif</cpp:directive></cpp:endif>



            <if_stmt pos:start="171:13" pos:end="195:13"><if pos:start="171:13" pos:end="195:13">if <condition pos:start="171:16" pos:end="171:25">(<expr pos:start="171:17" pos:end="171:24"><name pos:start="171:17" pos:end="171:19">ret</name> <operator pos:start="171:21" pos:end="171:22">&gt;=</operator> <literal type="number" pos:start="171:24" pos:end="171:24">0</literal></expr>)</condition> <block pos:start="171:27" pos:end="195:13">{<block_content pos:start="173:17" pos:end="193:17">

                <if_stmt pos:start="173:17" pos:end="185:17"><if pos:start="173:17" pos:end="179:17">if <condition pos:start="173:20" pos:end="173:25">(<expr pos:start="173:21" pos:end="173:24"><operator pos:start="173:21" pos:end="173:21">!</operator><name pos:start="173:22" pos:end="173:24">dir</name></expr>)</condition> <block pos:start="173:27" pos:end="179:17">{<block_content pos:start="177:21" pos:end="177:77">

                    <comment type="block" pos:start="175:21" pos:end="175:29">/* OUT */</comment>

                    <expr_stmt pos:start="177:21" pos:end="177:77"><expr pos:start="177:21" pos:end="177:76"><call pos:start="177:21" pos:end="177:76"><name pos:start="177:21" pos:end="177:29">set_field</name><argument_list pos:start="177:30" pos:end="177:76">(<argument pos:start="177:31" pos:end="177:47"><expr pos:start="177:31" pos:end="177:47"><operator pos:start="177:31" pos:end="177:31">&amp;</operator><name pos:start="177:32" pos:end="177:47"><name pos:start="177:32" pos:end="177:34">itd</name><operator pos:start="177:35" pos:end="177:36">-&gt;</operator><name pos:start="177:37" pos:end="177:44">transact</name><index pos:start="177:45" pos:end="177:47">[<expr pos:start="177:46" pos:end="177:46"><name pos:start="177:46" pos:end="177:46">i</name></expr>]</index></name></expr></argument>, <argument pos:start="177:50" pos:end="177:58"><expr pos:start="177:50" pos:end="177:58"><name pos:start="177:50" pos:end="177:52">len</name> <operator pos:start="177:54" pos:end="177:54">-</operator> <name pos:start="177:56" pos:end="177:58">ret</name></expr></argument>, <argument pos:start="177:61" pos:end="177:75"><expr pos:start="177:61" pos:end="177:75"><name pos:start="177:61" pos:end="177:75">ITD_XACT_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="179:19" pos:end="185:17">else <block pos:start="179:24" pos:end="185:17">{<block_content pos:start="183:21" pos:end="183:71">

                    <comment type="block" pos:start="181:21" pos:end="181:28">/* IN */</comment>

                    <expr_stmt pos:start="183:21" pos:end="183:71"><expr pos:start="183:21" pos:end="183:70"><call pos:start="183:21" pos:end="183:70"><name pos:start="183:21" pos:end="183:29">set_field</name><argument_list pos:start="183:30" pos:end="183:70">(<argument pos:start="183:31" pos:end="183:47"><expr pos:start="183:31" pos:end="183:47"><operator pos:start="183:31" pos:end="183:31">&amp;</operator><name pos:start="183:32" pos:end="183:47"><name pos:start="183:32" pos:end="183:34">itd</name><operator pos:start="183:35" pos:end="183:36">-&gt;</operator><name pos:start="183:37" pos:end="183:44">transact</name><index pos:start="183:45" pos:end="183:47">[<expr pos:start="183:46" pos:end="183:46"><name pos:start="183:46" pos:end="183:46">i</name></expr>]</index></name></expr></argument>, <argument pos:start="183:50" pos:end="183:52"><expr pos:start="183:50" pos:end="183:52"><name pos:start="183:50" pos:end="183:52">ret</name></expr></argument>, <argument pos:start="183:55" pos:end="183:69"><expr pos:start="183:55" pos:end="183:69"><name pos:start="183:55" pos:end="183:69">ITD_XACT_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <if_stmt pos:start="189:17" pos:end="193:17"><if pos:start="189:17" pos:end="193:17">if <condition pos:start="189:20" pos:end="189:52">(<expr pos:start="189:21" pos:end="189:51"><name pos:start="189:21" pos:end="189:36"><name pos:start="189:21" pos:end="189:23">itd</name><operator pos:start="189:24" pos:end="189:25">-&gt;</operator><name pos:start="189:26" pos:end="189:33">transact</name><index pos:start="189:34" pos:end="189:36">[<expr pos:start="189:35" pos:end="189:35"><name pos:start="189:35" pos:end="189:35">i</name></expr>]</index></name> <operator pos:start="189:38" pos:end="189:38">&amp;</operator> <name pos:start="189:40" pos:end="189:51">ITD_XACT_IOC</name></expr>)</condition> <block pos:start="189:54" pos:end="193:17">{<block_content pos:start="191:21" pos:end="191:60">

                    <expr_stmt pos:start="191:21" pos:end="191:60"><expr pos:start="191:21" pos:end="191:59"><call pos:start="191:21" pos:end="191:59"><name pos:start="191:21" pos:end="191:41">ehci_record_interrupt</name><argument_list pos:start="191:42" pos:end="191:59">(<argument pos:start="191:43" pos:end="191:46"><expr pos:start="191:43" pos:end="191:46"><name pos:start="191:43" pos:end="191:46">ehci</name></expr></argument>, <argument pos:start="191:49" pos:end="191:58"><expr pos:start="191:49" pos:end="191:58"><name pos:start="191:49" pos:end="191:58">USBSTS_INT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:49"><expr pos:start="197:13" pos:end="197:48"><name pos:start="197:13" pos:end="197:28"><name pos:start="197:13" pos:end="197:15">itd</name><operator pos:start="197:16" pos:end="197:17">-&gt;</operator><name pos:start="197:18" pos:end="197:25">transact</name><index pos:start="197:26" pos:end="197:28">[<expr pos:start="197:27" pos:end="197:27"><name pos:start="197:27" pos:end="197:27">i</name></expr>]</index></name> <operator pos:start="197:30" pos:end="197:31">&amp;=</operator> <operator pos:start="197:33" pos:end="197:33">~</operator><name pos:start="197:34" pos:end="197:48">ITD_XACT_ACTIVE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="203:5" pos:end="203:13">return <expr pos:start="203:12" pos:end="203:12"><literal type="number" pos:start="203:12" pos:end="203:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
