<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15849.c" pos:tabs="8"><function pos:start="1:1" pos:end="173:21"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">v9fs_walk</name><parameter_list pos:start="1:22" pos:end="1:35">(<parameter pos:start="1:23" pos:end="1:34"><decl pos:start="1:23" pos:end="1:34"><type pos:start="1:23" pos:end="1:28"><name pos:start="1:23" pos:end="1:26">void</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:34">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="173:21">{<block_content pos:start="5:5" pos:end="173:21">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">name_idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">V9fsQID</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:17">qids</name> <init pos:start="7:19" pos:end="7:24">= <expr pos:start="7:21" pos:end="7:24"><name pos:start="7:21" pos:end="7:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">V9fsPath</name></type> <name pos:start="11:14" pos:end="11:18">dpath</name></decl>, <decl pos:start="11:21" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:21" pos:end="11:24">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint16_t</name></type> <name pos:start="13:14" pos:end="13:20">nwnames</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:15">stat</name></name></type> <name pos:start="15:17" pos:end="15:21">stbuf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">size_t</name></type> <name pos:start="17:12" pos:end="17:17">offset</name> <init pos:start="17:19" pos:end="17:21">= <expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int32_t</name></type> <name pos:start="19:13" pos:end="19:15">fid</name></decl>, <decl pos:start="19:18" pos:end="19:23"><type ref="prev" pos:start="19:5" pos:end="19:11"/><name pos:start="19:18" pos:end="19:23">newfid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:30"><decl pos:start="21:5" pos:end="21:29"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:14">V9fsString</name> <modifier pos:start="21:16" pos:end="21:16">*</modifier></type><name pos:start="21:17" pos:end="21:22">wnames</name> <init pos:start="21:24" pos:end="21:29">= <expr pos:start="21:26" pos:end="21:29"><name pos:start="21:26" pos:end="21:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:23"><decl pos:start="23:5" pos:end="23:22"><type pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:16">V9fsFidState</name> <modifier pos:start="23:18" pos:end="23:18">*</modifier></type><name pos:start="23:19" pos:end="23:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:33"><decl pos:start="25:5" pos:end="25:32"><type pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:16">V9fsFidState</name> <modifier pos:start="25:18" pos:end="25:18">*</modifier></type><name pos:start="25:19" pos:end="25:25">newfidp</name> <init pos:start="25:27" pos:end="25:32">= <expr pos:start="25:29" pos:end="25:32"><name pos:start="25:29" pos:end="25:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:26"><decl pos:start="27:5" pos:end="27:25"><type pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:11">V9fsPDU</name> <modifier pos:start="27:13" pos:end="27:13">*</modifier></type><name pos:start="27:14" pos:end="27:16">pdu</name> <init pos:start="27:18" pos:end="27:25">= <expr pos:start="27:20" pos:end="27:25"><name pos:start="27:20" pos:end="27:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:26"><decl pos:start="29:5" pos:end="29:25"><type pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:13">V9fsState</name> <modifier pos:start="29:15" pos:end="29:15">*</modifier></type><name pos:start="29:16" pos:end="29:16">s</name> <init pos:start="29:18" pos:end="29:25">= <expr pos:start="29:20" pos:end="29:25"><name pos:start="29:20" pos:end="29:25"><name pos:start="29:20" pos:end="29:22">pdu</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:25">s</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:69"><expr pos:start="33:5" pos:end="33:68"><name pos:start="33:5" pos:end="33:7">err</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:68"><name pos:start="33:11" pos:end="33:23">pdu_unmarshal</name><argument_list pos:start="33:24" pos:end="33:68">(<argument pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><name pos:start="33:25" pos:end="33:27">pdu</name></expr></argument>, <argument pos:start="33:30" pos:end="33:35"><expr pos:start="33:30" pos:end="33:35"><name pos:start="33:30" pos:end="33:35">offset</name></expr></argument>, <argument pos:start="33:38" pos:end="33:42"><expr pos:start="33:38" pos:end="33:42"><literal type="string" pos:start="33:38" pos:end="33:42">"ddw"</literal></expr></argument>, <argument pos:start="33:45" pos:end="33:48"><expr pos:start="33:45" pos:end="33:48"><operator pos:start="33:45" pos:end="33:45">&amp;</operator><name pos:start="33:46" pos:end="33:48">fid</name></expr></argument>, <argument pos:start="33:51" pos:end="33:57"><expr pos:start="33:51" pos:end="33:57"><operator pos:start="33:51" pos:end="33:51">&amp;</operator><name pos:start="33:52" pos:end="33:57">newfid</name></expr></argument>, <argument pos:start="33:60" pos:end="33:67"><expr pos:start="33:60" pos:end="33:67"><operator pos:start="33:60" pos:end="33:60">&amp;</operator><name pos:start="33:61" pos:end="33:67">nwnames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="173:21"><if pos:start="35:5" pos:end="173:21">if <condition pos:start="35:8" pos:end="35:16">(<expr pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:11">err</name> <operator pos:start="35:13" pos:end="35:13">&lt;</operator> <literal type="number" pos:start="35:15" pos:end="35:15">0</literal></expr>)</condition> <block pos:start="35:18" pos:end="173:21">{<block_content pos:start="37:9" pos:end="173:21">

        <expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><call pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:20">pdu_complete</name><argument_list pos:start="37:21" pos:end="37:30">(<argument pos:start="37:22" pos:end="37:24"><expr pos:start="37:22" pos:end="37:24"><name pos:start="37:22" pos:end="37:24">pdu</name></expr></argument>, <argument pos:start="37:27" pos:end="37:29"><expr pos:start="37:27" pos:end="37:29"><name pos:start="37:27" pos:end="37:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:16">return ;</return>


    <expr_stmt pos:start="42:5" pos:end="42:18"><expr pos:start="42:5" pos:end="42:17"><name pos:start="42:5" pos:end="42:10">offset</name> <operator pos:start="42:12" pos:end="42:13">+=</operator> <name pos:start="42:15" pos:end="42:17">err</name></expr>;</expr_stmt>



    <expr_stmt pos:start="46:5" pos:end="46:61"><expr pos:start="46:5" pos:end="46:60"><call pos:start="46:5" pos:end="46:60"><name pos:start="46:5" pos:end="46:19">trace_v9fs_walk</name><argument_list pos:start="46:20" pos:end="46:60">(<argument pos:start="46:21" pos:end="46:28"><expr pos:start="46:21" pos:end="46:28"><name pos:start="46:21" pos:end="46:28"><name pos:start="46:21" pos:end="46:23">pdu</name><operator pos:start="46:24" pos:end="46:25">-&gt;</operator><name pos:start="46:26" pos:end="46:28">tag</name></name></expr></argument>, <argument pos:start="46:31" pos:end="46:37"><expr pos:start="46:31" pos:end="46:37"><name pos:start="46:31" pos:end="46:37"><name pos:start="46:31" pos:end="46:33">pdu</name><operator pos:start="46:34" pos:end="46:35">-&gt;</operator><name pos:start="46:36" pos:end="46:37">id</name></name></expr></argument>, <argument pos:start="46:40" pos:end="46:42"><expr pos:start="46:40" pos:end="46:42"><name pos:start="46:40" pos:end="46:42">fid</name></expr></argument>, <argument pos:start="46:45" pos:end="46:50"><expr pos:start="46:45" pos:end="46:50"><name pos:start="46:45" pos:end="46:50">newfid</name></expr></argument>, <argument pos:start="46:53" pos:end="46:59"><expr pos:start="46:53" pos:end="46:59"><name pos:start="46:53" pos:end="46:59">nwnames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="50:5" pos:end="173:21"><if pos:start="50:5" pos:end="173:21">if <condition pos:start="50:8" pos:end="50:42">(<expr pos:start="50:9" pos:end="50:41"><name pos:start="50:9" pos:end="50:15">nwnames</name> <operator pos:start="50:17" pos:end="50:18">&amp;&amp;</operator> <name pos:start="50:20" pos:end="50:26">nwnames</name> <operator pos:start="50:28" pos:end="50:29">&lt;=</operator> <name pos:start="50:31" pos:end="50:41">P9_MAXWELEM</name></expr>)</condition> <block pos:start="50:44" pos:end="173:21">{<block_content pos:start="52:9" pos:end="173:21">

        <expr_stmt pos:start="52:9" pos:end="52:56"><expr pos:start="52:9" pos:end="52:55"><name pos:start="52:9" pos:end="52:14">wnames</name> <operator pos:start="52:16" pos:end="52:16">=</operator> <call pos:start="52:18" pos:end="52:55"><name pos:start="52:18" pos:end="52:26">g_malloc0</name><argument_list pos:start="52:27" pos:end="52:55">(<argument pos:start="52:28" pos:end="52:54"><expr pos:start="52:28" pos:end="52:54"><sizeof pos:start="52:28" pos:end="52:44">sizeof<argument_list pos:start="52:34" pos:end="52:44">(<argument pos:start="52:35" pos:end="52:43"><expr pos:start="52:35" pos:end="52:43"><name pos:start="52:35" pos:end="52:43"><name pos:start="52:35" pos:end="52:40">wnames</name><index pos:start="52:41" pos:end="52:43">[<expr pos:start="52:42" pos:end="52:42"><literal type="number" pos:start="52:42" pos:end="52:42">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="52:46" pos:end="52:46">*</operator> <name pos:start="52:48" pos:end="52:54">nwnames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="54:9" pos:end="54:54"><expr pos:start="54:9" pos:end="54:53"><name pos:start="54:9" pos:end="54:12">qids</name>   <operator pos:start="54:16" pos:end="54:16">=</operator> <call pos:start="54:18" pos:end="54:53"><name pos:start="54:18" pos:end="54:26">g_malloc0</name><argument_list pos:start="54:27" pos:end="54:53">(<argument pos:start="54:28" pos:end="54:52"><expr pos:start="54:28" pos:end="54:52"><sizeof pos:start="54:28" pos:end="54:42">sizeof<argument_list pos:start="54:34" pos:end="54:42">(<argument pos:start="54:35" pos:end="54:41"><expr pos:start="54:35" pos:end="54:41"><name pos:start="54:35" pos:end="54:41"><name pos:start="54:35" pos:end="54:38">qids</name><index pos:start="54:39" pos:end="54:41">[<expr pos:start="54:40" pos:end="54:40"><literal type="number" pos:start="54:40" pos:end="54:40">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="54:44" pos:end="54:44">*</operator> <name pos:start="54:46" pos:end="54:52">nwnames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="56:9" pos:end="173:21">for <control pos:start="56:13" pos:end="56:37">(<init pos:start="56:14" pos:end="56:19"><expr pos:start="56:14" pos:end="56:18"><name pos:start="56:14" pos:end="56:14">i</name> <operator pos:start="56:16" pos:end="56:16">=</operator> <literal type="number" pos:start="56:18" pos:end="56:18">0</literal></expr>;</init> <condition pos:start="56:21" pos:end="56:32"><expr pos:start="56:21" pos:end="56:31"><name pos:start="56:21" pos:end="56:21">i</name> <operator pos:start="56:23" pos:end="56:23">&lt;</operator> <name pos:start="56:25" pos:end="56:31">nwnames</name></expr>;</condition> <incr pos:start="56:34" pos:end="56:36"><expr pos:start="56:34" pos:end="56:36"><name pos:start="56:34" pos:end="56:34">i</name><operator pos:start="56:35" pos:end="56:36">++</operator></expr></incr>)</control> <block pos:start="56:39" pos:end="173:21">{<block_content pos:start="58:13" pos:end="173:21">

            <expr_stmt pos:start="58:13" pos:end="58:62"><expr pos:start="58:13" pos:end="58:61"><name pos:start="58:13" pos:end="58:15">err</name> <operator pos:start="58:17" pos:end="58:17">=</operator> <call pos:start="58:19" pos:end="58:61"><name pos:start="58:19" pos:end="58:31">pdu_unmarshal</name><argument_list pos:start="58:32" pos:end="58:61">(<argument pos:start="58:33" pos:end="58:35"><expr pos:start="58:33" pos:end="58:35"><name pos:start="58:33" pos:end="58:35">pdu</name></expr></argument>, <argument pos:start="58:38" pos:end="58:43"><expr pos:start="58:38" pos:end="58:43"><name pos:start="58:38" pos:end="58:43">offset</name></expr></argument>, <argument pos:start="58:46" pos:end="58:48"><expr pos:start="58:46" pos:end="58:48"><literal type="string" pos:start="58:46" pos:end="58:48">"s"</literal></expr></argument>, <argument pos:start="58:51" pos:end="58:60"><expr pos:start="58:51" pos:end="58:60"><operator pos:start="58:51" pos:end="58:51">&amp;</operator><name pos:start="58:52" pos:end="58:60"><name pos:start="58:52" pos:end="58:57">wnames</name><index pos:start="58:58" pos:end="58:60">[<expr pos:start="58:59" pos:end="58:59"><name pos:start="58:59" pos:end="58:59">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="60:13" pos:end="173:21"><if pos:start="60:13" pos:end="71:5">if <condition pos:start="60:16" pos:end="60:24">(<expr pos:start="60:17" pos:end="60:23"><name pos:start="60:17" pos:end="60:19">err</name> <operator pos:start="60:21" pos:end="60:21">&lt;</operator> <literal type="number" pos:start="60:23" pos:end="60:23">0</literal></expr>)</condition> <block pos:start="60:26" pos:end="71:5">{<block_content pos:start="68:13" pos:end="68:26">







            <expr_stmt pos:start="68:13" pos:end="68:26"><expr pos:start="68:13" pos:end="68:25"><name pos:start="68:13" pos:end="68:18">offset</name> <operator pos:start="68:20" pos:end="68:21">+=</operator> <name pos:start="68:23" pos:end="68:25">err</name></expr>;</expr_stmt>


    </block_content>}</block></if> <if type="elseif" pos:start="71:7" pos:end="173:21">else if <condition pos:start="71:15" pos:end="71:37">(<expr pos:start="71:16" pos:end="71:36"><name pos:start="71:16" pos:end="71:22">nwnames</name> <operator pos:start="71:24" pos:end="71:24">&gt;</operator> <name pos:start="71:26" pos:end="71:36">P9_MAXWELEM</name></expr>)</condition> <block pos:start="71:39" pos:end="173:21">{<block_content pos:start="73:9" pos:end="173:21">

        <expr_stmt pos:start="73:9" pos:end="73:22"><expr pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:11">err</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <operator pos:start="73:15" pos:end="73:15">-</operator><name pos:start="73:16" pos:end="73:21">EINVAL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:29"><expr pos:start="77:5" pos:end="77:28"><name pos:start="77:5" pos:end="77:8">fidp</name> <operator pos:start="77:10" pos:end="77:10">=</operator> <call pos:start="77:12" pos:end="77:28"><name pos:start="77:12" pos:end="77:18">get_fid</name><argument_list pos:start="77:19" pos:end="77:28">(<argument pos:start="77:20" pos:end="77:22"><expr pos:start="77:20" pos:end="77:22"><name pos:start="77:20" pos:end="77:22">pdu</name></expr></argument>, <argument pos:start="77:25" pos:end="77:27"><expr pos:start="77:25" pos:end="77:27"><name pos:start="77:25" pos:end="77:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="173:21"><if pos:start="79:5" pos:end="173:21">if <condition pos:start="79:8" pos:end="79:21">(<expr pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:12">fidp</name> <operator pos:start="79:14" pos:end="79:15">==</operator> <name pos:start="79:17" pos:end="79:20">NULL</name></expr>)</condition> <block pos:start="79:23" pos:end="173:21">{<block_content pos:start="84:5" pos:end="173:21">




    <expr_stmt pos:start="84:5" pos:end="84:27"><expr pos:start="84:5" pos:end="84:26"><call pos:start="84:5" pos:end="84:26"><name pos:start="84:5" pos:end="84:18">v9fs_path_init</name><argument_list pos:start="84:19" pos:end="84:26">(<argument pos:start="84:20" pos:end="84:25"><expr pos:start="84:20" pos:end="84:25"><operator pos:start="84:20" pos:end="84:20">&amp;</operator><name pos:start="84:21" pos:end="84:25">dpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="86:5" pos:end="86:26"><expr pos:start="86:5" pos:end="86:25"><call pos:start="86:5" pos:end="86:25"><name pos:start="86:5" pos:end="86:18">v9fs_path_init</name><argument_list pos:start="86:19" pos:end="86:25">(<argument pos:start="86:20" pos:end="86:24"><expr pos:start="86:20" pos:end="86:24"><operator pos:start="86:20" pos:end="86:20">&amp;</operator><name pos:start="86:21" pos:end="86:24">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="88:5" pos:end="94:7">/*

     * Both dpath and path initially poin to fidp.

     * Needed to handle request with nwnames == 0

     */</comment>

    <expr_stmt pos:start="96:5" pos:end="96:40"><expr pos:start="96:5" pos:end="96:39"><call pos:start="96:5" pos:end="96:39"><name pos:start="96:5" pos:end="96:18">v9fs_path_copy</name><argument_list pos:start="96:19" pos:end="96:39">(<argument pos:start="96:20" pos:end="96:25"><expr pos:start="96:20" pos:end="96:25"><operator pos:start="96:20" pos:end="96:20">&amp;</operator><name pos:start="96:21" pos:end="96:25">dpath</name></expr></argument>, <argument pos:start="96:28" pos:end="96:38"><expr pos:start="96:28" pos:end="96:38"><operator pos:start="96:28" pos:end="96:28">&amp;</operator><name pos:start="96:29" pos:end="96:38"><name pos:start="96:29" pos:end="96:32">fidp</name><operator pos:start="96:33" pos:end="96:34">-&gt;</operator><name pos:start="96:35" pos:end="96:38">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="98:5" pos:end="98:39"><expr pos:start="98:5" pos:end="98:38"><call pos:start="98:5" pos:end="98:38"><name pos:start="98:5" pos:end="98:18">v9fs_path_copy</name><argument_list pos:start="98:19" pos:end="98:38">(<argument pos:start="98:20" pos:end="98:24"><expr pos:start="98:20" pos:end="98:24"><operator pos:start="98:20" pos:end="98:20">&amp;</operator><name pos:start="98:21" pos:end="98:24">path</name></expr></argument>, <argument pos:start="98:27" pos:end="98:37"><expr pos:start="98:27" pos:end="98:37"><operator pos:start="98:27" pos:end="98:27">&amp;</operator><name pos:start="98:28" pos:end="98:37"><name pos:start="98:28" pos:end="98:31">fidp</name><operator pos:start="98:32" pos:end="98:33">-&gt;</operator><name pos:start="98:34" pos:end="98:37">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="100:5" pos:end="173:21">for <control pos:start="100:9" pos:end="100:54">(<init pos:start="100:10" pos:end="100:22"><expr pos:start="100:10" pos:end="100:21"><name pos:start="100:10" pos:end="100:17">name_idx</name> <operator pos:start="100:19" pos:end="100:19">=</operator> <literal type="number" pos:start="100:21" pos:end="100:21">0</literal></expr>;</init> <condition pos:start="100:24" pos:end="100:42"><expr pos:start="100:24" pos:end="100:41"><name pos:start="100:24" pos:end="100:31">name_idx</name> <operator pos:start="100:33" pos:end="100:33">&lt;</operator> <name pos:start="100:35" pos:end="100:41">nwnames</name></expr>;</condition> <incr pos:start="100:44" pos:end="100:53"><expr pos:start="100:44" pos:end="100:53"><name pos:start="100:44" pos:end="100:51">name_idx</name><operator pos:start="100:52" pos:end="100:53">++</operator></expr></incr>)</control> <block pos:start="100:56" pos:end="173:21">{<block_content pos:start="102:9" pos:end="173:21">

        <expr_stmt pos:start="102:9" pos:end="102:78"><expr pos:start="102:9" pos:end="102:77"><name pos:start="102:9" pos:end="102:11">err</name> <operator pos:start="102:13" pos:end="102:13">=</operator> <call pos:start="102:15" pos:end="102:77"><name pos:start="102:15" pos:end="102:34">v9fs_co_name_to_path</name><argument_list pos:start="102:35" pos:end="102:77">(<argument pos:start="102:36" pos:end="102:38"><expr pos:start="102:36" pos:end="102:38"><name pos:start="102:36" pos:end="102:38">pdu</name></expr></argument>, <argument pos:start="102:41" pos:end="102:46"><expr pos:start="102:41" pos:end="102:46"><operator pos:start="102:41" pos:end="102:41">&amp;</operator><name pos:start="102:42" pos:end="102:46">dpath</name></expr></argument>, <argument pos:start="102:49" pos:end="102:69"><expr pos:start="102:49" pos:end="102:69"><name pos:start="102:49" pos:end="102:64"><name pos:start="102:49" pos:end="102:54">wnames</name><index pos:start="102:55" pos:end="102:64">[<expr pos:start="102:56" pos:end="102:63"><name pos:start="102:56" pos:end="102:63">name_idx</name></expr>]</index></name><operator pos:start="102:65" pos:end="102:65">.</operator><name pos:start="102:66" pos:end="102:69">data</name></expr></argument>, <argument pos:start="102:72" pos:end="102:76"><expr pos:start="102:72" pos:end="102:76"><operator pos:start="102:72" pos:end="102:72">&amp;</operator><name pos:start="102:73" pos:end="102:76">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="104:9" pos:end="173:21"><if pos:start="104:9" pos:end="173:21">if <condition pos:start="104:12" pos:end="104:20">(<expr pos:start="104:13" pos:end="104:19"><name pos:start="104:13" pos:end="104:15">err</name> <operator pos:start="104:17" pos:end="104:17">&lt;</operator> <literal type="number" pos:start="104:19" pos:end="104:19">0</literal></expr>)</condition> <block pos:start="104:22" pos:end="173:21">{<block_content pos:start="106:13" pos:end="173:21">

            <goto pos:start="106:13" pos:end="106:21">goto <name pos:start="106:18" pos:end="106:20">out</name>;</goto>


        <expr_stmt pos:start="109:9" pos:end="109:48"><expr pos:start="109:9" pos:end="109:47"><name pos:start="109:9" pos:end="109:11">err</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <call pos:start="109:15" pos:end="109:47"><name pos:start="109:15" pos:end="109:27">v9fs_co_lstat</name><argument_list pos:start="109:28" pos:end="109:47">(<argument pos:start="109:29" pos:end="109:31"><expr pos:start="109:29" pos:end="109:31"><name pos:start="109:29" pos:end="109:31">pdu</name></expr></argument>, <argument pos:start="109:34" pos:end="109:38"><expr pos:start="109:34" pos:end="109:38"><operator pos:start="109:34" pos:end="109:34">&amp;</operator><name pos:start="109:35" pos:end="109:38">path</name></expr></argument>, <argument pos:start="109:41" pos:end="109:46"><expr pos:start="109:41" pos:end="109:46"><operator pos:start="109:41" pos:end="109:41">&amp;</operator><name pos:start="109:42" pos:end="109:46">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="173:21"><if pos:start="111:9" pos:end="173:21">if <condition pos:start="111:12" pos:end="111:20">(<expr pos:start="111:13" pos:end="111:19"><name pos:start="111:13" pos:end="111:15">err</name> <operator pos:start="111:17" pos:end="111:17">&lt;</operator> <literal type="number" pos:start="111:19" pos:end="111:19">0</literal></expr>)</condition> <block pos:start="111:22" pos:end="173:21">{<block_content pos:start="113:13" pos:end="173:21">

            <goto pos:start="113:13" pos:end="113:21">goto <name pos:start="113:18" pos:end="113:20">out</name>;</goto>


        <expr_stmt pos:start="116:9" pos:end="116:45"><expr pos:start="116:9" pos:end="116:44"><call pos:start="116:9" pos:end="116:44"><name pos:start="116:9" pos:end="116:19">stat_to_qid</name><argument_list pos:start="116:20" pos:end="116:44">(<argument pos:start="116:21" pos:end="116:26"><expr pos:start="116:21" pos:end="116:26"><operator pos:start="116:21" pos:end="116:21">&amp;</operator><name pos:start="116:22" pos:end="116:26">stbuf</name></expr></argument>, <argument pos:start="116:29" pos:end="116:43"><expr pos:start="116:29" pos:end="116:43"><operator pos:start="116:29" pos:end="116:29">&amp;</operator><name pos:start="116:30" pos:end="116:43"><name pos:start="116:30" pos:end="116:33">qids</name><index pos:start="116:34" pos:end="116:43">[<expr pos:start="116:35" pos:end="116:42"><name pos:start="116:35" pos:end="116:42">name_idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="118:9" pos:end="118:38"><expr pos:start="118:9" pos:end="118:37"><call pos:start="118:9" pos:end="118:37"><name pos:start="118:9" pos:end="118:22">v9fs_path_copy</name><argument_list pos:start="118:23" pos:end="118:37">(<argument pos:start="118:24" pos:end="118:29"><expr pos:start="118:24" pos:end="118:29"><operator pos:start="118:24" pos:end="118:24">&amp;</operator><name pos:start="118:25" pos:end="118:29">dpath</name></expr></argument>, <argument pos:start="118:32" pos:end="118:36"><expr pos:start="118:32" pos:end="118:36"><operator pos:start="118:32" pos:end="118:32">&amp;</operator><name pos:start="118:33" pos:end="118:36">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <if_stmt pos:start="121:5" pos:end="173:21"><if pos:start="121:5" pos:end="127:5">if <condition pos:start="121:8" pos:end="121:22">(<expr pos:start="121:9" pos:end="121:21"><name pos:start="121:9" pos:end="121:11">fid</name> <operator pos:start="121:13" pos:end="121:14">==</operator> <name pos:start="121:16" pos:end="121:21">newfid</name></expr>)</condition> <block pos:start="121:24" pos:end="127:5">{<block_content pos:start="123:9" pos:end="125:43">

        <expr_stmt pos:start="123:9" pos:end="123:46"><expr pos:start="123:9" pos:end="123:45"><call pos:start="123:9" pos:end="123:45"><name pos:start="123:9" pos:end="123:14">BUG_ON</name><argument_list pos:start="123:15" pos:end="123:45">(<argument pos:start="123:16" pos:end="123:44"><expr pos:start="123:16" pos:end="123:44"><name pos:start="123:16" pos:end="123:29"><name pos:start="123:16" pos:end="123:19">fidp</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:29">fid_type</name></name> <operator pos:start="123:31" pos:end="123:32">!=</operator> <name pos:start="123:34" pos:end="123:44">P9_FID_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:43"><expr pos:start="125:9" pos:end="125:42"><call pos:start="125:9" pos:end="125:42"><name pos:start="125:9" pos:end="125:22">v9fs_path_copy</name><argument_list pos:start="125:23" pos:end="125:42">(<argument pos:start="125:24" pos:end="125:34"><expr pos:start="125:24" pos:end="125:34"><operator pos:start="125:24" pos:end="125:24">&amp;</operator><name pos:start="125:25" pos:end="125:34"><name pos:start="125:25" pos:end="125:28">fidp</name><operator pos:start="125:29" pos:end="125:30">-&gt;</operator><name pos:start="125:31" pos:end="125:34">path</name></name></expr></argument>, <argument pos:start="125:37" pos:end="125:41"><expr pos:start="125:37" pos:end="125:41"><operator pos:start="125:37" pos:end="125:37">&amp;</operator><name pos:start="125:38" pos:end="125:41">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="127:7" pos:end="173:21">else <block pos:start="127:12" pos:end="173:21">{<block_content pos:start="129:9" pos:end="173:21">

        <expr_stmt pos:start="129:9" pos:end="129:39"><expr pos:start="129:9" pos:end="129:38"><name pos:start="129:9" pos:end="129:15">newfidp</name> <operator pos:start="129:17" pos:end="129:17">=</operator> <call pos:start="129:19" pos:end="129:38"><name pos:start="129:19" pos:end="129:27">alloc_fid</name><argument_list pos:start="129:28" pos:end="129:38">(<argument pos:start="129:29" pos:end="129:29"><expr pos:start="129:29" pos:end="129:29"><name pos:start="129:29" pos:end="129:29">s</name></expr></argument>, <argument pos:start="129:32" pos:end="129:37"><expr pos:start="129:32" pos:end="129:37"><name pos:start="129:32" pos:end="129:37">newfid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="131:9" pos:end="173:21"><if pos:start="131:9" pos:end="173:21">if <condition pos:start="131:12" pos:end="131:28">(<expr pos:start="131:13" pos:end="131:27"><name pos:start="131:13" pos:end="131:19">newfidp</name> <operator pos:start="131:21" pos:end="131:22">==</operator> <name pos:start="131:24" pos:end="131:27">NULL</name></expr>)</condition> <block pos:start="131:30" pos:end="173:21">{<block_content pos:start="133:13" pos:end="173:21">

            <expr_stmt pos:start="133:13" pos:end="133:26"><expr pos:start="133:13" pos:end="133:25"><name pos:start="133:13" pos:end="133:15">err</name> <operator pos:start="133:17" pos:end="133:17">=</operator> <operator pos:start="133:19" pos:end="133:19">-</operator><name pos:start="133:20" pos:end="133:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="135:13" pos:end="135:21">goto <name pos:start="135:18" pos:end="135:20">out</name>;</goto>


        <expr_stmt pos:start="138:9" pos:end="138:33"><expr pos:start="138:9" pos:end="138:32"><name pos:start="138:9" pos:end="138:20"><name pos:start="138:9" pos:end="138:15">newfidp</name><operator pos:start="138:16" pos:end="138:17">-&gt;</operator><name pos:start="138:18" pos:end="138:20">uid</name></name> <operator pos:start="138:22" pos:end="138:22">=</operator> <name pos:start="138:24" pos:end="138:32"><name pos:start="138:24" pos:end="138:27">fidp</name><operator pos:start="138:28" pos:end="138:29">-&gt;</operator><name pos:start="138:30" pos:end="138:32">uid</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="140:9" pos:end="140:46"><expr pos:start="140:9" pos:end="140:45"><call pos:start="140:9" pos:end="140:45"><name pos:start="140:9" pos:end="140:22">v9fs_path_copy</name><argument_list pos:start="140:23" pos:end="140:45">(<argument pos:start="140:24" pos:end="140:37"><expr pos:start="140:24" pos:end="140:37"><operator pos:start="140:24" pos:end="140:24">&amp;</operator><name pos:start="140:25" pos:end="140:37"><name pos:start="140:25" pos:end="140:31">newfidp</name><operator pos:start="140:32" pos:end="140:33">-&gt;</operator><name pos:start="140:34" pos:end="140:37">path</name></name></expr></argument>, <argument pos:start="140:40" pos:end="140:44"><expr pos:start="140:40" pos:end="140:44"><operator pos:start="140:40" pos:end="140:40">&amp;</operator><name pos:start="140:41" pos:end="140:44">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <expr_stmt pos:start="143:5" pos:end="143:48"><expr pos:start="143:5" pos:end="143:47"><name pos:start="143:5" pos:end="143:7">err</name> <operator pos:start="143:9" pos:end="143:9">=</operator> <call pos:start="143:11" pos:end="143:47"><name pos:start="143:11" pos:end="143:27">v9fs_walk_marshal</name><argument_list pos:start="143:28" pos:end="143:47">(<argument pos:start="143:29" pos:end="143:31"><expr pos:start="143:29" pos:end="143:31"><name pos:start="143:29" pos:end="143:31">pdu</name></expr></argument>, <argument pos:start="143:34" pos:end="143:40"><expr pos:start="143:34" pos:end="143:40"><name pos:start="143:34" pos:end="143:40">nwnames</name></expr></argument>, <argument pos:start="143:43" pos:end="143:46"><expr pos:start="143:43" pos:end="143:46"><name pos:start="143:43" pos:end="143:46">qids</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:61"><expr pos:start="145:5" pos:end="145:60"><call pos:start="145:5" pos:end="145:60"><name pos:start="145:5" pos:end="145:26">trace_v9fs_walk_return</name><argument_list pos:start="145:27" pos:end="145:60">(<argument pos:start="145:28" pos:end="145:35"><expr pos:start="145:28" pos:end="145:35"><name pos:start="145:28" pos:end="145:35"><name pos:start="145:28" pos:end="145:30">pdu</name><operator pos:start="145:31" pos:end="145:32">-&gt;</operator><name pos:start="145:33" pos:end="145:35">tag</name></name></expr></argument>, <argument pos:start="145:38" pos:end="145:44"><expr pos:start="145:38" pos:end="145:44"><name pos:start="145:38" pos:end="145:44"><name pos:start="145:38" pos:end="145:40">pdu</name><operator pos:start="145:41" pos:end="145:42">-&gt;</operator><name pos:start="145:43" pos:end="145:44">id</name></name></expr></argument>, <argument pos:start="145:47" pos:end="145:53"><expr pos:start="145:47" pos:end="145:53"><name pos:start="145:47" pos:end="145:53">nwnames</name></expr></argument>, <argument pos:start="145:56" pos:end="145:59"><expr pos:start="145:56" pos:end="145:59"><name pos:start="145:56" pos:end="145:59">qids</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="147:1" pos:end="147:4"><name pos:start="147:1" pos:end="147:3">out</name>:</label>

    <expr_stmt pos:start="149:5" pos:end="149:23"><expr pos:start="149:5" pos:end="149:22"><call pos:start="149:5" pos:end="149:22"><name pos:start="149:5" pos:end="149:11">put_fid</name><argument_list pos:start="149:12" pos:end="149:22">(<argument pos:start="149:13" pos:end="149:15"><expr pos:start="149:13" pos:end="149:15"><name pos:start="149:13" pos:end="149:15">pdu</name></expr></argument>, <argument pos:start="149:18" pos:end="149:21"><expr pos:start="149:18" pos:end="149:21"><name pos:start="149:18" pos:end="149:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="151:5" pos:end="173:21"><if pos:start="151:5" pos:end="173:21">if <condition pos:start="151:8" pos:end="151:16">(<expr pos:start="151:9" pos:end="151:15"><name pos:start="151:9" pos:end="151:15">newfidp</name></expr>)</condition> <block pos:start="151:18" pos:end="173:21">{<block_content pos:start="153:9" pos:end="173:21">

        <expr_stmt pos:start="153:9" pos:end="153:30"><expr pos:start="153:9" pos:end="153:29"><call pos:start="153:9" pos:end="153:29"><name pos:start="153:9" pos:end="153:15">put_fid</name><argument_list pos:start="153:16" pos:end="153:29">(<argument pos:start="153:17" pos:end="153:19"><expr pos:start="153:17" pos:end="153:19"><name pos:start="153:17" pos:end="153:19">pdu</name></expr></argument>, <argument pos:start="153:22" pos:end="153:28"><expr pos:start="153:22" pos:end="153:28"><name pos:start="153:22" pos:end="153:28">newfidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <expr_stmt pos:start="156:5" pos:end="156:27"><expr pos:start="156:5" pos:end="156:26"><call pos:start="156:5" pos:end="156:26"><name pos:start="156:5" pos:end="156:18">v9fs_path_free</name><argument_list pos:start="156:19" pos:end="156:26">(<argument pos:start="156:20" pos:end="156:25"><expr pos:start="156:20" pos:end="156:25"><operator pos:start="156:20" pos:end="156:20">&amp;</operator><name pos:start="156:21" pos:end="156:25">dpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="158:5" pos:end="158:26"><expr pos:start="158:5" pos:end="158:25"><call pos:start="158:5" pos:end="158:25"><name pos:start="158:5" pos:end="158:18">v9fs_path_free</name><argument_list pos:start="158:19" pos:end="158:25">(<argument pos:start="158:20" pos:end="158:24"><expr pos:start="158:20" pos:end="158:24"><operator pos:start="158:20" pos:end="158:20">&amp;</operator><name pos:start="158:21" pos:end="158:24">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="160:1" pos:end="160:10"><name pos:start="160:1" pos:end="160:9">out_nofid</name>:</label>

    <expr_stmt pos:start="162:5" pos:end="162:27"><expr pos:start="162:5" pos:end="162:26"><call pos:start="162:5" pos:end="162:26"><name pos:start="162:5" pos:end="162:16">pdu_complete</name><argument_list pos:start="162:17" pos:end="162:26">(<argument pos:start="162:18" pos:end="162:20"><expr pos:start="162:18" pos:end="162:20"><name pos:start="162:18" pos:end="162:20">pdu</name></expr></argument>, <argument pos:start="162:23" pos:end="162:25"><expr pos:start="162:23" pos:end="162:25"><name pos:start="162:23" pos:end="162:25">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="164:5" pos:end="173:21"><if pos:start="164:5" pos:end="173:21">if <condition pos:start="164:8" pos:end="164:42">(<expr pos:start="164:9" pos:end="164:41"><name pos:start="164:9" pos:end="164:15">nwnames</name> <operator pos:start="164:17" pos:end="164:18">&amp;&amp;</operator> <name pos:start="164:20" pos:end="164:26">nwnames</name> <operator pos:start="164:28" pos:end="164:29">&lt;=</operator> <name pos:start="164:31" pos:end="164:41">P9_MAXWELEM</name></expr>)</condition> <block pos:start="164:44" pos:end="173:21">{<block_content pos:start="166:9" pos:end="173:21">

        <for pos:start="166:9" pos:end="173:21">for <control pos:start="166:13" pos:end="166:58">(<init pos:start="166:14" pos:end="166:26"><expr pos:start="166:14" pos:end="166:25"><name pos:start="166:14" pos:end="166:21">name_idx</name> <operator pos:start="166:23" pos:end="166:23">=</operator> <literal type="number" pos:start="166:25" pos:end="166:25">0</literal></expr>;</init> <condition pos:start="166:28" pos:end="166:46"><expr pos:start="166:28" pos:end="166:45"><name pos:start="166:28" pos:end="166:35">name_idx</name> <operator pos:start="166:37" pos:end="166:37">&lt;</operator> <name pos:start="166:39" pos:end="166:45">nwnames</name></expr>;</condition> <incr pos:start="166:48" pos:end="166:57"><expr pos:start="166:48" pos:end="166:57"><name pos:start="166:48" pos:end="166:55">name_idx</name><operator pos:start="166:56" pos:end="166:57">++</operator></expr></incr>)</control> <block pos:start="166:60" pos:end="173:21">{<block_content pos:start="168:13" pos:end="173:21">

            <expr_stmt pos:start="168:13" pos:end="168:48"><expr pos:start="168:13" pos:end="168:47"><call pos:start="168:13" pos:end="168:47"><name pos:start="168:13" pos:end="168:28">v9fs_string_free</name><argument_list pos:start="168:29" pos:end="168:47">(<argument pos:start="168:30" pos:end="168:46"><expr pos:start="168:30" pos:end="168:46"><operator pos:start="168:30" pos:end="168:30">&amp;</operator><name pos:start="168:31" pos:end="168:46"><name pos:start="168:31" pos:end="168:36">wnames</name><index pos:start="168:37" pos:end="168:46">[<expr pos:start="168:38" pos:end="168:45"><name pos:start="168:38" pos:end="168:45">name_idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <expr_stmt pos:start="171:9" pos:end="171:23"><expr pos:start="171:9" pos:end="171:22"><call pos:start="171:9" pos:end="171:22"><name pos:start="171:9" pos:end="171:14">g_free</name><argument_list pos:start="171:15" pos:end="171:22">(<argument pos:start="171:16" pos:end="171:21"><expr pos:start="171:16" pos:end="171:21"><name pos:start="171:16" pos:end="171:21">wnames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:21"><expr pos:start="173:9" pos:end="173:20"><call pos:start="173:9" pos:end="173:20"><name pos:start="173:9" pos:end="173:14">g_free</name><argument_list pos:start="173:15" pos:end="173:20">(<argument pos:start="173:16" pos:end="173:19"><expr pos:start="173:16" pos:end="173:19"><name pos:start="173:16" pos:end="173:19">qids</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>

</unit>
