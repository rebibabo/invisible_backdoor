<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18704.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:39">virtser_port_device_realize</name><parameter_list pos:start="1:40" pos:end="1:71">(<parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:51">DeviceState</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">dev</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:70"><decl pos:start="1:59" pos:end="1:70"><type pos:start="1:59" pos:end="1:70"><name pos:start="1:59" pos:end="1:63">Error</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier><modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:70">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:27">

    <decl_stmt pos:start="5:5" pos:end="5:53"><decl pos:start="5:5" pos:end="5:52"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">VirtIOSerialPort</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:26">port</name> <init pos:start="5:28" pos:end="5:52">= <expr pos:start="5:30" pos:end="5:52"><call pos:start="5:30" pos:end="5:52"><name pos:start="5:30" pos:end="5:47">VIRTIO_SERIAL_PORT</name><argument_list pos:start="5:48" pos:end="5:52">(<argument pos:start="5:49" pos:end="5:51"><expr pos:start="5:49" pos:end="5:51"><name pos:start="5:49" pos:end="5:51">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:68"><decl pos:start="7:5" pos:end="7:67"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25">VirtIOSerialPortClass</name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:30">vsc</name> <init pos:start="7:32" pos:end="7:67">= <expr pos:start="7:34" pos:end="7:67"><call pos:start="7:34" pos:end="7:67"><name pos:start="7:34" pos:end="7:61">VIRTIO_SERIAL_PORT_GET_CLASS</name><argument_list pos:start="7:62" pos:end="7:67">(<argument pos:start="7:63" pos:end="7:66"><expr pos:start="7:63" pos:end="7:66"><name pos:start="7:63" pos:end="7:66">port</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:71"><decl pos:start="9:5" pos:end="9:70"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">VirtIOSerialBus</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">bus</name> <init pos:start="9:26" pos:end="9:70">= <expr pos:start="9:28" pos:end="9:70"><call pos:start="9:28" pos:end="9:70"><name pos:start="9:28" pos:end="9:44">VIRTIO_SERIAL_BUS</name><argument_list pos:start="9:45" pos:end="9:70">(<argument pos:start="9:46" pos:end="9:69"><expr pos:start="9:46" pos:end="9:69"><call pos:start="9:46" pos:end="9:69"><name pos:start="9:46" pos:end="9:64">qdev_get_parent_bus</name><argument_list pos:start="9:65" pos:end="9:69">(<argument pos:start="9:66" pos:end="9:68"><expr pos:start="9:66" pos:end="9:68"><name pos:start="9:66" pos:end="9:68">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:49"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">VirtIODevice</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:22">vdev</name> <init pos:start="11:24" pos:end="11:49">= <expr pos:start="11:26" pos:end="11:49"><call pos:start="11:26" pos:end="11:49"><name pos:start="11:26" pos:end="11:38">VIRTIO_DEVICE</name><argument_list pos:start="11:39" pos:end="11:49">(<argument pos:start="11:40" pos:end="11:48"><expr pos:start="11:40" pos:end="11:48"><name pos:start="11:40" pos:end="11:48"><name pos:start="11:40" pos:end="11:42">bus</name><operator pos:start="11:43" pos:end="11:44">-&gt;</operator><name pos:start="11:45" pos:end="11:48">vser</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:20">max_nr_ports</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">bool</name></type> <name pos:start="15:10" pos:end="15:23">plugging_port0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">Error</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:14">err</name> <init pos:start="17:16" pos:end="17:21">= <expr pos:start="17:18" pos:end="17:21"><name pos:start="17:18" pos:end="17:21">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:8">port</name><operator pos:start="21:9" pos:end="21:10">-&gt;</operator><name pos:start="21:11" pos:end="21:14">vser</name></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:26"><name pos:start="21:18" pos:end="21:20">bus</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:26">vser</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:55"><expr pos:start="23:5" pos:end="23:54"><name pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:8">port</name><operator pos:start="23:9" pos:end="23:10">-&gt;</operator><name pos:start="23:11" pos:end="23:12">bh</name></name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:54"><name pos:start="23:16" pos:end="23:26">qemu_bh_new</name><argument_list pos:start="23:27" pos:end="23:54">(<argument pos:start="23:28" pos:end="23:47"><expr pos:start="23:28" pos:end="23:47"><name pos:start="23:28" pos:end="23:47">flush_queued_data_bh</name></expr></argument>, <argument pos:start="23:50" pos:end="23:53"><expr pos:start="23:50" pos:end="23:53"><name pos:start="23:50" pos:end="23:53">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><call pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:10">assert</name><argument_list pos:start="27:11" pos:end="27:26">(<argument pos:start="27:12" pos:end="27:25"><expr pos:start="27:12" pos:end="27:25"><name pos:start="27:12" pos:end="27:25"><name pos:start="27:12" pos:end="27:14">vsc</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:25">have_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="39:7">/*

     * Is the first console port we're seeing? If so, put it up at

     * location 0. This is done for backward compatibility (old

     * kernel, new qemu).

     */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:72"><expr pos:start="41:5" pos:end="41:71"><name pos:start="41:5" pos:end="41:18">plugging_port0</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:36"><name pos:start="41:22" pos:end="41:24">vsc</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:36">is_console</name></name> <operator pos:start="41:38" pos:end="41:39">&amp;&amp;</operator> <operator pos:start="41:41" pos:end="41:41">!</operator><call pos:start="41:42" pos:end="41:71"><name pos:start="41:42" pos:end="41:56">find_port_by_id</name><argument_list pos:start="41:57" pos:end="41:71">(<argument pos:start="41:58" pos:end="41:67"><expr pos:start="41:58" pos:end="41:67"><name pos:start="41:58" pos:end="41:67"><name pos:start="41:58" pos:end="41:61">port</name><operator pos:start="41:62" pos:end="41:63">-&gt;</operator><name pos:start="41:64" pos:end="41:67">vser</name></name></expr></argument>, <argument pos:start="41:70" pos:end="41:70"><expr pos:start="41:70" pos:end="41:70"><literal type="number" pos:start="41:70" pos:end="41:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="45:46">(<expr pos:start="45:9" pos:end="45:45"><call pos:start="45:9" pos:end="45:45"><name pos:start="45:9" pos:end="45:23">find_port_by_id</name><argument_list pos:start="45:24" pos:end="45:45">(<argument pos:start="45:25" pos:end="45:34"><expr pos:start="45:25" pos:end="45:34"><name pos:start="45:25" pos:end="45:34"><name pos:start="45:25" pos:end="45:28">port</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:34">vser</name></name></expr></argument>, <argument pos:start="45:37" pos:end="45:44"><expr pos:start="45:37" pos:end="45:44"><name pos:start="45:37" pos:end="45:44"><name pos:start="45:37" pos:end="45:40">port</name><operator pos:start="45:41" pos:end="45:42">-&gt;</operator><name pos:start="45:43" pos:end="45:44">id</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:48" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:15">

        <expr_stmt pos:start="47:9" pos:end="49:29"><expr pos:start="47:9" pos:end="49:28"><call pos:start="47:9" pos:end="49:28"><name pos:start="47:9" pos:end="47:18">error_setg</name><argument_list pos:start="47:19" pos:end="49:28">(<argument pos:start="47:20" pos:end="47:23"><expr pos:start="47:20" pos:end="47:23"><name pos:start="47:20" pos:end="47:23">errp</name></expr></argument>, <argument pos:start="47:26" pos:end="47:76"><expr pos:start="47:26" pos:end="47:76"><literal type="string" pos:start="47:26" pos:end="47:76">"virtio-serial-bus: A port already exists at id %u"</literal></expr></argument>,

                   <argument pos:start="49:20" pos:end="49:27"><expr pos:start="49:20" pos:end="49:27"><name pos:start="49:20" pos:end="49:27"><name pos:start="49:20" pos:end="49:23">port</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:27">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="65:5"><if pos:start="57:5" pos:end="65:5">if <condition pos:start="57:8" pos:end="57:38">(<expr pos:start="57:9" pos:end="57:37"><call pos:start="57:9" pos:end="57:37"><name pos:start="57:9" pos:end="57:25">find_port_by_name</name><argument_list pos:start="57:26" pos:end="57:37">(<argument pos:start="57:27" pos:end="57:36"><expr pos:start="57:27" pos:end="57:36"><name pos:start="57:27" pos:end="57:36"><name pos:start="57:27" pos:end="57:30">port</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:36">name</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:40" pos:end="65:5">{<block_content pos:start="59:9" pos:end="63:15">

        <expr_stmt pos:start="59:9" pos:end="61:31"><expr pos:start="59:9" pos:end="61:30"><call pos:start="59:9" pos:end="61:30"><name pos:start="59:9" pos:end="59:18">error_setg</name><argument_list pos:start="59:19" pos:end="61:30">(<argument pos:start="59:20" pos:end="59:23"><expr pos:start="59:20" pos:end="59:23"><name pos:start="59:20" pos:end="59:23">errp</name></expr></argument>, <argument pos:start="59:26" pos:end="59:78"><expr pos:start="59:26" pos:end="59:78"><literal type="string" pos:start="59:26" pos:end="59:78">"virtio-serial-bus: A port already exists by name %s"</literal></expr></argument>,

                   <argument pos:start="61:20" pos:end="61:29"><expr pos:start="61:20" pos:end="61:29"><name pos:start="61:20" pos:end="61:29"><name pos:start="61:20" pos:end="61:23">port</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:29">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="91:5"><if pos:start="69:5" pos:end="91:5">if <condition pos:start="69:8" pos:end="69:42">(<expr pos:start="69:9" pos:end="69:41"><name pos:start="69:9" pos:end="69:16"><name pos:start="69:9" pos:end="69:12">port</name><operator pos:start="69:13" pos:end="69:14">-&gt;</operator><name pos:start="69:15" pos:end="69:16">id</name></name> <operator pos:start="69:18" pos:end="69:19">==</operator> <name pos:start="69:21" pos:end="69:41">VIRTIO_CONSOLE_BAD_ID</name></expr>)</condition> <block pos:start="69:44" pos:end="91:5">{<block_content pos:start="71:9" pos:end="89:9">

        <if_stmt pos:start="71:9" pos:end="89:9"><if pos:start="71:9" pos:end="75:9">if <condition pos:start="71:12" pos:end="71:27">(<expr pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:26">plugging_port0</name></expr>)</condition> <block pos:start="71:29" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:25">

            <expr_stmt pos:start="73:13" pos:end="73:25"><expr pos:start="73:13" pos:end="73:24"><name pos:start="73:13" pos:end="73:20"><name pos:start="73:13" pos:end="73:16">port</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:20">id</name></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <literal type="number" pos:start="73:24" pos:end="73:24">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="75:11" pos:end="89:9">else <block pos:start="75:16" pos:end="89:9">{<block_content pos:start="77:13" pos:end="87:13">

            <expr_stmt pos:start="77:13" pos:end="77:53"><expr pos:start="77:13" pos:end="77:52"><name pos:start="77:13" pos:end="77:20"><name pos:start="77:13" pos:end="77:16">port</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:20">id</name></name> <operator pos:start="77:22" pos:end="77:22">=</operator> <call pos:start="77:24" pos:end="77:52"><name pos:start="77:24" pos:end="77:40">find_free_port_id</name><argument_list pos:start="77:41" pos:end="77:52">(<argument pos:start="77:42" pos:end="77:51"><expr pos:start="77:42" pos:end="77:51"><name pos:start="77:42" pos:end="77:51"><name pos:start="77:42" pos:end="77:45">port</name><operator pos:start="77:46" pos:end="77:47">-&gt;</operator><name pos:start="77:48" pos:end="77:51">vser</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="79:13" pos:end="87:13"><if pos:start="79:13" pos:end="87:13">if <condition pos:start="79:16" pos:end="79:50">(<expr pos:start="79:17" pos:end="79:49"><name pos:start="79:17" pos:end="79:24"><name pos:start="79:17" pos:end="79:20">port</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:24">id</name></name> <operator pos:start="79:26" pos:end="79:27">==</operator> <name pos:start="79:29" pos:end="79:49">VIRTIO_CONSOLE_BAD_ID</name></expr>)</condition> <block pos:start="79:52" pos:end="87:13">{<block_content pos:start="81:17" pos:end="85:23">

                <expr_stmt pos:start="81:17" pos:end="83:56"><expr pos:start="81:17" pos:end="83:55"><call pos:start="81:17" pos:end="83:55"><name pos:start="81:17" pos:end="81:26">error_setg</name><argument_list pos:start="81:27" pos:end="83:55">(<argument pos:start="81:28" pos:end="81:31"><expr pos:start="81:28" pos:end="81:31"><name pos:start="81:28" pos:end="81:31">errp</name></expr></argument>, <argument pos:start="81:34" pos:end="83:54"><expr pos:start="81:34" pos:end="83:54"><literal type="string" pos:start="81:34" pos:end="81:77">"virtio-serial-bus: Maximum port limit for "</literal>

                                 <literal type="string" pos:start="83:34" pos:end="83:54">"this device reached"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="85:17" pos:end="85:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:73"><expr pos:start="95:5" pos:end="95:72"><name pos:start="95:5" pos:end="95:16">max_nr_ports</name> <operator pos:start="95:18" pos:end="95:18">=</operator> <call pos:start="95:20" pos:end="95:72"><name pos:start="95:20" pos:end="95:33">virtio_tswap32</name><argument_list pos:start="95:34" pos:end="95:72">(<argument pos:start="95:35" pos:end="95:38"><expr pos:start="95:35" pos:end="95:38"><name pos:start="95:35" pos:end="95:38">vdev</name></expr></argument>, <argument pos:start="95:41" pos:end="95:71"><expr pos:start="95:41" pos:end="95:71"><name pos:start="95:41" pos:end="95:71"><name pos:start="95:41" pos:end="95:44">port</name><operator pos:start="95:45" pos:end="95:46">-&gt;</operator><name pos:start="95:47" pos:end="95:50">vser</name><operator pos:start="95:51" pos:end="95:52">-&gt;</operator><name pos:start="95:53" pos:end="95:58">config</name><operator pos:start="95:59" pos:end="95:59">.</operator><name pos:start="95:60" pos:end="95:71">max_nr_ports</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="105:5"><if pos:start="97:5" pos:end="105:5">if <condition pos:start="97:8" pos:end="97:33">(<expr pos:start="97:9" pos:end="97:32"><name pos:start="97:9" pos:end="97:16"><name pos:start="97:9" pos:end="97:12">port</name><operator pos:start="97:13" pos:end="97:14">-&gt;</operator><name pos:start="97:15" pos:end="97:16">id</name></name> <operator pos:start="97:18" pos:end="97:19">&gt;=</operator> <name pos:start="97:21" pos:end="97:32">max_nr_ports</name></expr>)</condition> <block pos:start="97:35" pos:end="105:5">{<block_content pos:start="99:9" pos:end="103:15">

        <expr_stmt pos:start="99:9" pos:end="101:63"><expr pos:start="99:9" pos:end="101:62"><call pos:start="99:9" pos:end="101:62"><name pos:start="99:9" pos:end="99:18">error_setg</name><argument_list pos:start="99:19" pos:end="101:62">(<argument pos:start="99:20" pos:end="99:23"><expr pos:start="99:20" pos:end="99:23"><name pos:start="99:20" pos:end="99:23">errp</name></expr></argument>, <argument pos:start="99:26" pos:end="101:43"><expr pos:start="99:26" pos:end="101:43"><literal type="string" pos:start="99:26" pos:end="99:78">"virtio-serial-bus: Out-of-range port id specified, "</literal>

                         <literal type="string" pos:start="101:26" pos:end="101:43">"max. allowed: %u"</literal></expr></argument>, <argument pos:start="101:46" pos:end="101:61"><expr pos:start="101:46" pos:end="101:61"><name pos:start="101:46" pos:end="101:57">max_nr_ports</name> <operator pos:start="101:59" pos:end="101:59">-</operator> <literal type="number" pos:start="101:61" pos:end="101:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:28"><expr pos:start="109:5" pos:end="109:27"><call pos:start="109:5" pos:end="109:27"><name pos:start="109:5" pos:end="109:16"><name pos:start="109:5" pos:end="109:7">vsc</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:16">realize</name></name><argument_list pos:start="109:17" pos:end="109:27">(<argument pos:start="109:18" pos:end="109:20"><expr pos:start="109:18" pos:end="109:20"><name pos:start="109:18" pos:end="109:20">dev</name></expr></argument>, <argument pos:start="109:23" pos:end="109:26"><expr pos:start="109:23" pos:end="109:26"><operator pos:start="109:23" pos:end="109:23">&amp;</operator><name pos:start="109:24" pos:end="109:26">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="117:5"><if pos:start="111:5" pos:end="117:5">if <condition pos:start="111:8" pos:end="111:20">(<expr pos:start="111:9" pos:end="111:19"><name pos:start="111:9" pos:end="111:11">err</name> <operator pos:start="111:13" pos:end="111:14">!=</operator> <name pos:start="111:16" pos:end="111:19">NULL</name></expr>)</condition> <block pos:start="111:22" pos:end="117:5">{<block_content pos:start="113:9" pos:end="115:15">

        <expr_stmt pos:start="113:9" pos:end="113:35"><expr pos:start="113:9" pos:end="113:34"><call pos:start="113:9" pos:end="113:34"><name pos:start="113:9" pos:end="113:23">error_propagate</name><argument_list pos:start="113:24" pos:end="113:34">(<argument pos:start="113:25" pos:end="113:28"><expr pos:start="113:25" pos:end="113:28"><name pos:start="113:25" pos:end="113:28">errp</name></expr></argument>, <argument pos:start="113:31" pos:end="113:33"><expr pos:start="113:31" pos:end="113:33"><name pos:start="113:31" pos:end="113:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="115:9" pos:end="115:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:27"><expr pos:start="121:5" pos:end="121:26"><name pos:start="121:5" pos:end="121:22"><name pos:start="121:5" pos:end="121:8">port</name><operator pos:start="121:9" pos:end="121:10">-&gt;</operator><name pos:start="121:11" pos:end="121:14">elem</name><operator pos:start="121:15" pos:end="121:15">.</operator><name pos:start="121:16" pos:end="121:22">out_num</name></name> <operator pos:start="121:24" pos:end="121:24">=</operator> <literal type="number" pos:start="121:26" pos:end="121:26">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
