<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23979.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:22"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:12">const</specifier> <name pos:start="1:14" pos:end="1:20">uint8_t</name> <modifier pos:start="1:22" pos:end="1:22">*</modifier></type><name pos:start="1:23" pos:end="1:32">decode_nal</name><parameter_list pos:start="1:33" pos:end="1:112">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:44">H264Context</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">h</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:67"><decl pos:start="1:50" pos:end="1:67"><type pos:start="1:50" pos:end="1:67"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:62">uint8_t</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">src</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:84"><decl pos:start="1:70" pos:end="1:84"><type pos:start="1:70" pos:end="1:84"><name pos:start="1:70" pos:end="1:72">int</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:84">dst_length</name></decl></parameter>, <parameter pos:start="1:87" pos:end="1:99"><decl pos:start="1:87" pos:end="1:99"><type pos:start="1:87" pos:end="1:99"><name pos:start="1:87" pos:end="1:89">int</name> <modifier pos:start="1:91" pos:end="1:91">*</modifier></type><name pos:start="1:92" pos:end="1:99">consumed</name></decl></parameter>, <parameter pos:start="1:102" pos:end="1:111"><decl pos:start="1:102" pos:end="1:111"><type pos:start="1:102" pos:end="1:111"><name pos:start="1:102" pos:end="1:104">int</name></type> <name pos:start="1:106" pos:end="1:111">length</name></decl></parameter>)</parameter_list><block pos:start="1:113" pos:end="123:1">{<block_content pos:start="3:5" pos:end="121:15">

    <decl_stmt pos:start="3:5" pos:end="3:18"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:13"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:13">si</name></decl>, <decl pos:start="3:16" pos:end="3:17"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:16" pos:end="3:17">di</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">bufidx</name></decl>;</decl_stmt>



<comment type="line" pos:start="11:1" pos:end="11:49">//    src[0]&amp;0x80;                //forbidden bit</comment>

    <expr_stmt pos:start="13:5" pos:end="13:30"><expr pos:start="13:5" pos:end="13:29"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:5">h</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:18">nal_ref_idc</name></name><operator pos:start="13:19" pos:end="13:19">=</operator> <name pos:start="13:21" pos:end="13:26"><name pos:start="13:21" pos:end="13:23">src</name><index pos:start="13:24" pos:end="13:26">[<expr pos:start="13:25" pos:end="13:25"><literal type="number" pos:start="13:25" pos:end="13:25">0</literal></expr>]</index></name><operator pos:start="13:27" pos:end="13:28">&gt;&gt;</operator><literal type="number" pos:start="13:29" pos:end="13:29">5</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:34"><expr pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:5">h</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:20">nal_unit_type</name></name><operator pos:start="15:21" pos:end="15:21">=</operator> <name pos:start="15:23" pos:end="15:28"><name pos:start="15:23" pos:end="15:25">src</name><index pos:start="15:26" pos:end="15:28">[<expr pos:start="15:27" pos:end="15:27"><literal type="number" pos:start="15:27" pos:end="15:27">0</literal></expr>]</index></name><operator pos:start="15:29" pos:end="15:29">&amp;</operator><literal type="number" pos:start="15:30" pos:end="15:33">0x1F</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:10"><expr pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:7">src</name><operator pos:start="19:8" pos:end="19:9">++</operator></expr>;</expr_stmt> <expr_stmt pos:start="19:12" pos:end="28:0"><expr pos:start="19:12" pos:end="19:19"><name pos:start="19:12" pos:end="19:17">length</name><operator pos:start="19:18" pos:end="19:19">--</operator></expr>;</expr_stmt>

<cpp:if pos:start="21:1" pos:end="21:5">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:5"><literal type="number" pos:start="21:5" pos:end="21:5">0</literal></expr></cpp:if>

    for(i=0; i&lt;length; i++)

        printf("%2X ", src[i]);

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

    <for pos:start="29:5" pos:end="49:5">for<control pos:start="29:8" pos:end="29:30">(<init pos:start="29:9" pos:end="29:12"><expr pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:9">i</name><operator pos:start="29:10" pos:end="29:10">=</operator><literal type="number" pos:start="29:11" pos:end="29:11">0</literal></expr>;</init> <condition pos:start="29:14" pos:end="29:24"><expr pos:start="29:14" pos:end="29:23"><name pos:start="29:14" pos:end="29:14">i</name><operator pos:start="29:15" pos:end="29:15">+</operator><literal type="number" pos:start="29:16" pos:end="29:16">1</literal><operator pos:start="29:17" pos:end="29:17">&lt;</operator><name pos:start="29:18" pos:end="29:23">length</name></expr>;</condition> <incr pos:start="29:26" pos:end="29:29"><expr pos:start="29:26" pos:end="29:29"><name pos:start="29:26" pos:end="29:26">i</name><operator pos:start="29:27" pos:end="29:28">+=</operator><literal type="number" pos:start="29:29" pos:end="29:29">2</literal></expr></incr>)</control><block pos:start="29:31" pos:end="49:5">{<block_content pos:start="31:9" pos:end="47:9">

        <if_stmt pos:start="31:9" pos:end="31:28"><if pos:start="31:9" pos:end="31:28">if<condition pos:start="31:11" pos:end="31:18">(<expr pos:start="31:12" pos:end="31:17"><name pos:start="31:12" pos:end="31:17"><name pos:start="31:12" pos:end="31:14">src</name><index pos:start="31:15" pos:end="31:17">[<expr pos:start="31:16" pos:end="31:16"><name pos:start="31:16" pos:end="31:16">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="31:20" pos:end="31:28"><block_content pos:start="31:20" pos:end="31:28"> <continue pos:start="31:20" pos:end="31:28">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="33:35"><if pos:start="33:9" pos:end="33:35">if<condition pos:start="33:11" pos:end="33:30">(<expr pos:start="33:12" pos:end="33:29"><name pos:start="33:12" pos:end="33:12">i</name><operator pos:start="33:13" pos:end="33:13">&gt;</operator><literal type="number" pos:start="33:14" pos:end="33:14">0</literal> <operator pos:start="33:16" pos:end="33:17">&amp;&amp;</operator> <name pos:start="33:19" pos:end="33:26"><name pos:start="33:19" pos:end="33:21">src</name><index pos:start="33:22" pos:end="33:26">[<expr pos:start="33:23" pos:end="33:25"><name pos:start="33:23" pos:end="33:23">i</name><operator pos:start="33:24" pos:end="33:24">-</operator><literal type="number" pos:start="33:25" pos:end="33:25">1</literal></expr>]</index></name><operator pos:start="33:27" pos:end="33:28">==</operator><literal type="number" pos:start="33:29" pos:end="33:29">0</literal></expr>)</condition><block type="pseudo" pos:start="33:32" pos:end="33:35"><block_content pos:start="33:32" pos:end="33:35"> <expr_stmt pos:start="33:32" pos:end="33:35"><expr pos:start="33:32" pos:end="33:34"><name pos:start="33:32" pos:end="33:32">i</name><operator pos:start="33:33" pos:end="33:34">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="47:9"><if pos:start="35:9" pos:end="47:9">if<condition pos:start="35:11" pos:end="35:52">(<expr pos:start="35:12" pos:end="35:51"><name pos:start="35:12" pos:end="35:12">i</name><operator pos:start="35:13" pos:end="35:13">+</operator><literal type="number" pos:start="35:14" pos:end="35:14">2</literal><operator pos:start="35:15" pos:end="35:15">&lt;</operator><name pos:start="35:16" pos:end="35:21">length</name> <operator pos:start="35:23" pos:end="35:24">&amp;&amp;</operator> <name pos:start="35:26" pos:end="35:33"><name pos:start="35:26" pos:end="35:28">src</name><index pos:start="35:29" pos:end="35:33">[<expr pos:start="35:30" pos:end="35:32"><name pos:start="35:30" pos:end="35:30">i</name><operator pos:start="35:31" pos:end="35:31">+</operator><literal type="number" pos:start="35:32" pos:end="35:32">1</literal></expr>]</index></name><operator pos:start="35:34" pos:end="35:35">==</operator><literal type="number" pos:start="35:36" pos:end="35:36">0</literal> <operator pos:start="35:38" pos:end="35:39">&amp;&amp;</operator> <name pos:start="35:41" pos:end="35:48"><name pos:start="35:41" pos:end="35:43">src</name><index pos:start="35:44" pos:end="35:48">[<expr pos:start="35:45" pos:end="35:47"><name pos:start="35:45" pos:end="35:45">i</name><operator pos:start="35:46" pos:end="35:46">+</operator><literal type="number" pos:start="35:47" pos:end="35:47">2</literal></expr>]</index></name><operator pos:start="35:49" pos:end="35:50">&lt;=</operator><literal type="number" pos:start="35:51" pos:end="35:51">3</literal></expr>)</condition><block pos:start="35:53" pos:end="47:9">{<block_content pos:start="37:13" pos:end="45:18">

            <if_stmt pos:start="37:13" pos:end="43:13"><if pos:start="37:13" pos:end="43:13">if<condition pos:start="37:15" pos:end="37:27">(<expr pos:start="37:16" pos:end="37:26"><name pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:18">src</name><index pos:start="37:19" pos:end="37:23">[<expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:20">i</name><operator pos:start="37:21" pos:end="37:21">+</operator><literal type="number" pos:start="37:22" pos:end="37:22">2</literal></expr>]</index></name><operator pos:start="37:24" pos:end="37:25">!=</operator><literal type="number" pos:start="37:26" pos:end="37:26">3</literal></expr>)</condition><block pos:start="37:28" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:25">

                <comment type="block" pos:start="39:17" pos:end="39:59">/* startcode, so we must be past the end */</comment>

                <expr_stmt pos:start="41:17" pos:end="41:25"><expr pos:start="41:17" pos:end="41:24"><name pos:start="41:17" pos:end="41:22">length</name><operator pos:start="41:23" pos:end="41:23">=</operator><name pos:start="41:24" pos:end="41:24">i</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="53:5" pos:end="61:5"><if pos:start="53:5" pos:end="61:5">if<condition pos:start="53:7" pos:end="53:19">(<expr pos:start="53:8" pos:end="53:18"><name pos:start="53:8" pos:end="53:8">i</name><operator pos:start="53:9" pos:end="53:10">&gt;=</operator><name pos:start="53:11" pos:end="53:16">length</name><operator pos:start="53:17" pos:end="53:17">-</operator><literal type="number" pos:start="53:18" pos:end="53:18">1</literal></expr>)</condition><block pos:start="53:20" pos:end="61:5">{<block_content pos:start="55:9" pos:end="59:19"> <comment type="line" pos:start="53:22" pos:end="53:35">//no escaped 0</comment>

        <expr_stmt pos:start="55:9" pos:end="55:28"><expr pos:start="55:9" pos:end="55:27"><operator pos:start="55:9" pos:end="55:9">*</operator><name pos:start="55:10" pos:end="55:19">dst_length</name><operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:27">length</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:28"><expr pos:start="57:9" pos:end="57:27"><operator pos:start="57:9" pos:end="57:9">*</operator><name pos:start="57:10" pos:end="57:17">consumed</name><operator pos:start="57:18" pos:end="57:18">=</operator> <name pos:start="57:20" pos:end="57:25">length</name><operator pos:start="57:26" pos:end="57:26">+</operator><literal type="number" pos:start="57:27" pos:end="57:27">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="57:30" pos:end="57:48">//+1 for the header</comment>

        <return pos:start="59:9" pos:end="59:19">return <expr pos:start="59:16" pos:end="59:18"><name pos:start="59:16" pos:end="59:18">src</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:49"><expr pos:start="65:5" pos:end="65:48"><name pos:start="65:5" pos:end="65:10">bufidx</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <ternary pos:start="65:14" pos:end="65:48"><condition pos:start="65:14" pos:end="65:42"><expr pos:start="65:14" pos:end="65:40"><name pos:start="65:14" pos:end="65:29"><name pos:start="65:14" pos:end="65:14">h</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:29">nal_unit_type</name></name> <operator pos:start="65:31" pos:end="65:32">==</operator> <name pos:start="65:34" pos:end="65:40">NAL_DPC</name></expr> ?</condition><then pos:start="65:44" pos:end="65:44"> <expr pos:start="65:44" pos:end="65:44"><literal type="number" pos:start="65:44" pos:end="65:44">1</literal></expr> </then><else pos:start="65:46" pos:end="65:48">: <expr pos:start="65:48" pos:end="65:48"><literal type="number" pos:start="65:48" pos:end="65:48">0</literal></expr></else></ternary></expr>;</expr_stmt> <comment type="line" pos:start="65:51" pos:end="65:92">// use second escape buffer for inter data</comment>

    <expr_stmt pos:start="67:5" pos:end="67:106"><expr pos:start="67:5" pos:end="67:105"><name pos:start="67:5" pos:end="67:26"><name pos:start="67:5" pos:end="67:5">h</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:18">rbsp_buffer</name><index pos:start="67:19" pos:end="67:26">[<expr pos:start="67:20" pos:end="67:25"><name pos:start="67:20" pos:end="67:25">bufidx</name></expr>]</index></name><operator pos:start="67:27" pos:end="67:27">=</operator> <call pos:start="67:29" pos:end="67:105"><name pos:start="67:29" pos:end="67:43">av_fast_realloc</name><argument_list pos:start="67:44" pos:end="67:105">(<argument pos:start="67:45" pos:end="67:66"><expr pos:start="67:45" pos:end="67:66"><name pos:start="67:45" pos:end="67:66"><name pos:start="67:45" pos:end="67:45">h</name><operator pos:start="67:46" pos:end="67:47">-&gt;</operator><name pos:start="67:48" pos:end="67:58">rbsp_buffer</name><index pos:start="67:59" pos:end="67:66">[<expr pos:start="67:60" pos:end="67:65"><name pos:start="67:60" pos:end="67:65">bufidx</name></expr>]</index></name></expr></argument>, <argument pos:start="67:69" pos:end="67:96"><expr pos:start="67:69" pos:end="67:96"><operator pos:start="67:69" pos:end="67:69">&amp;</operator><name pos:start="67:70" pos:end="67:96"><name pos:start="67:70" pos:end="67:70">h</name><operator pos:start="67:71" pos:end="67:72">-&gt;</operator><name pos:start="67:73" pos:end="67:88">rbsp_buffer_size</name><index pos:start="67:89" pos:end="67:96">[<expr pos:start="67:90" pos:end="67:95"><name pos:start="67:90" pos:end="67:95">bufidx</name></expr>]</index></name></expr></argument>, <argument pos:start="67:99" pos:end="67:104"><expr pos:start="67:99" pos:end="67:104"><name pos:start="67:99" pos:end="67:104">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:32"><expr pos:start="69:5" pos:end="69:31"><name pos:start="69:5" pos:end="69:7">dst</name><operator pos:start="69:8" pos:end="69:8">=</operator> <name pos:start="69:10" pos:end="69:31"><name pos:start="69:10" pos:end="69:10">h</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:23">rbsp_buffer</name><index pos:start="69:24" pos:end="69:31">[<expr pos:start="69:25" pos:end="69:30"><name pos:start="69:25" pos:end="69:30">bufidx</name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:20">(<expr pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:11">dst</name> <operator pos:start="73:13" pos:end="73:14">==</operator> <name pos:start="73:16" pos:end="73:19">NULL</name></expr>)</condition><block pos:start="73:21" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:20">

        <return pos:start="75:9" pos:end="75:20">return <expr pos:start="75:16" pos:end="75:19"><name pos:start="75:16" pos:end="75:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



<comment type="line" pos:start="81:1" pos:end="81:27">//printf("decoding esc\n");</comment>

    <expr_stmt pos:start="83:5" pos:end="83:12"><expr pos:start="83:5" pos:end="83:11"><name pos:start="83:5" pos:end="83:6">si</name><operator pos:start="83:7" pos:end="83:7">=</operator><name pos:start="83:8" pos:end="83:9">di</name><operator pos:start="83:10" pos:end="83:10">=</operator><literal type="number" pos:start="83:11" pos:end="83:11">0</literal></expr>;</expr_stmt>

    <while pos:start="85:5" pos:end="111:5">while<condition pos:start="85:10" pos:end="85:20">(<expr pos:start="85:11" pos:end="85:19"><name pos:start="85:11" pos:end="85:12">si</name><operator pos:start="85:13" pos:end="85:13">&lt;</operator><name pos:start="85:14" pos:end="85:19">length</name></expr>)</condition><block pos:start="85:21" pos:end="111:5">{<block_content pos:start="89:9" pos:end="109:29">

        <comment type="line" pos:start="87:9" pos:end="87:43">//remove escapes (very rare 1:2^22)</comment>

        <if_stmt pos:start="89:9" pos:end="105:9"><if pos:start="89:9" pos:end="105:9">if<condition pos:start="89:11" pos:end="89:69">(<expr pos:start="89:12" pos:end="89:68"><name pos:start="89:12" pos:end="89:13">si</name><operator pos:start="89:14" pos:end="89:14">+</operator><literal type="number" pos:start="89:15" pos:end="89:15">2</literal><operator pos:start="89:16" pos:end="89:16">&lt;</operator><name pos:start="89:17" pos:end="89:22">length</name> <operator pos:start="89:24" pos:end="89:25">&amp;&amp;</operator> <name pos:start="89:27" pos:end="89:33"><name pos:start="89:27" pos:end="89:29">src</name><index pos:start="89:30" pos:end="89:33">[<expr pos:start="89:31" pos:end="89:32"><name pos:start="89:31" pos:end="89:32">si</name></expr>]</index></name><operator pos:start="89:34" pos:end="89:35">==</operator><literal type="number" pos:start="89:36" pos:end="89:36">0</literal> <operator pos:start="89:38" pos:end="89:39">&amp;&amp;</operator> <name pos:start="89:41" pos:end="89:49"><name pos:start="89:41" pos:end="89:43">src</name><index pos:start="89:44" pos:end="89:49">[<expr pos:start="89:45" pos:end="89:48"><name pos:start="89:45" pos:end="89:46">si</name><operator pos:start="89:47" pos:end="89:47">+</operator><literal type="number" pos:start="89:48" pos:end="89:48">1</literal></expr>]</index></name><operator pos:start="89:50" pos:end="89:51">==</operator><literal type="number" pos:start="89:52" pos:end="89:52">0</literal> <operator pos:start="89:54" pos:end="89:55">&amp;&amp;</operator> <name pos:start="89:57" pos:end="89:65"><name pos:start="89:57" pos:end="89:59">src</name><index pos:start="89:60" pos:end="89:65">[<expr pos:start="89:61" pos:end="89:64"><name pos:start="89:61" pos:end="89:62">si</name><operator pos:start="89:63" pos:end="89:63">+</operator><literal type="number" pos:start="89:64" pos:end="89:64">2</literal></expr>]</index></name><operator pos:start="89:66" pos:end="89:67">&lt;=</operator><literal type="number" pos:start="89:68" pos:end="89:68">3</literal></expr>)</condition><block pos:start="89:70" pos:end="105:9">{<block_content pos:start="91:13" pos:end="103:22">

            <if_stmt pos:start="91:13" pos:end="103:22"><if pos:start="91:13" pos:end="101:13">if<condition pos:start="91:15" pos:end="91:28">(<expr pos:start="91:16" pos:end="91:27"><name pos:start="91:16" pos:end="91:24"><name pos:start="91:16" pos:end="91:18">src</name><index pos:start="91:19" pos:end="91:24">[<expr pos:start="91:20" pos:end="91:23"><name pos:start="91:20" pos:end="91:21">si</name><operator pos:start="91:22" pos:end="91:22">+</operator><literal type="number" pos:start="91:23" pos:end="91:23">2</literal></expr>]</index></name><operator pos:start="91:25" pos:end="91:26">==</operator><literal type="number" pos:start="91:27" pos:end="91:27">3</literal></expr>)</condition><block pos:start="91:29" pos:end="101:13">{<block_content pos:start="93:17" pos:end="99:25"> <comment type="line" pos:start="91:31" pos:end="91:38">//escape</comment>

                <expr_stmt pos:start="93:17" pos:end="93:29"><expr pos:start="93:17" pos:end="93:28"><name pos:start="93:17" pos:end="93:25"><name pos:start="93:17" pos:end="93:19">dst</name><index pos:start="93:20" pos:end="93:25">[<expr pos:start="93:21" pos:end="93:24"><name pos:start="93:21" pos:end="93:22">di</name><operator pos:start="93:23" pos:end="93:24">++</operator></expr>]</index></name><operator pos:start="93:26" pos:end="93:26">=</operator> <literal type="number" pos:start="93:28" pos:end="93:28">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:29"><expr pos:start="95:17" pos:end="95:28"><name pos:start="95:17" pos:end="95:25"><name pos:start="95:17" pos:end="95:19">dst</name><index pos:start="95:20" pos:end="95:25">[<expr pos:start="95:21" pos:end="95:24"><name pos:start="95:21" pos:end="95:22">di</name><operator pos:start="95:23" pos:end="95:24">++</operator></expr>]</index></name><operator pos:start="95:26" pos:end="95:26">=</operator> <literal type="number" pos:start="95:28" pos:end="95:28">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:22"><expr pos:start="97:17" pos:end="97:21"><name pos:start="97:17" pos:end="97:18">si</name><operator pos:start="97:19" pos:end="97:20">+=</operator><literal type="number" pos:start="97:21" pos:end="97:21">3</literal></expr>;</expr_stmt>

                <continue pos:start="99:17" pos:end="99:25">continue;</continue>

            </block_content>}</block></if><else pos:start="101:14" pos:end="103:22">else<block type="pseudo" pos:start="103:17" pos:end="103:22"><block_content pos:start="103:17" pos:end="103:22"> <comment type="line" pos:start="101:19" pos:end="101:35">//next start code</comment>

                <break pos:start="103:17" pos:end="103:22">break;</break></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="109:9" pos:end="109:29"><expr pos:start="109:9" pos:end="109:28"><name pos:start="109:9" pos:end="109:17"><name pos:start="109:9" pos:end="109:11">dst</name><index pos:start="109:12" pos:end="109:17">[<expr pos:start="109:13" pos:end="109:16"><name pos:start="109:13" pos:end="109:14">di</name><operator pos:start="109:15" pos:end="109:16">++</operator></expr>]</index></name><operator pos:start="109:18" pos:end="109:18">=</operator> <name pos:start="109:20" pos:end="109:28"><name pos:start="109:20" pos:end="109:22">src</name><index pos:start="109:23" pos:end="109:28">[<expr pos:start="109:24" pos:end="109:27"><name pos:start="109:24" pos:end="109:25">si</name><operator pos:start="109:26" pos:end="109:27">++</operator></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="115:5" pos:end="115:20"><expr pos:start="115:5" pos:end="115:19"><operator pos:start="115:5" pos:end="115:5">*</operator><name pos:start="115:6" pos:end="115:15">dst_length</name><operator pos:start="115:16" pos:end="115:16">=</operator> <name pos:start="115:18" pos:end="115:19">di</name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:22"><expr pos:start="117:5" pos:end="117:21"><operator pos:start="117:5" pos:end="117:5">*</operator><name pos:start="117:6" pos:end="117:13">consumed</name><operator pos:start="117:14" pos:end="117:14">=</operator> <name pos:start="117:16" pos:end="117:17">si</name> <operator pos:start="117:19" pos:end="117:19">+</operator> <literal type="number" pos:start="117:21" pos:end="117:21">1</literal></expr>;</expr_stmt><comment type="line" pos:start="117:23" pos:end="117:41">//+1 for the header</comment>

<comment type="line" pos:start="119:1" pos:end="119:83">//FIXME store exact number of bits in the getbitcontext (it is needed for decoding)</comment>

    <return pos:start="121:5" pos:end="121:15">return <expr pos:start="121:12" pos:end="121:14"><name pos:start="121:12" pos:end="121:14">dst</name></expr>;</return>

</block_content>}</block></function>
</unit>
