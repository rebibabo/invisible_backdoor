<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17499.c" pos:tabs="8"><function pos:start="1:1" pos:end="585:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">aac_encode_frame</name><parameter_list pos:start="1:28" pos:end="3:70">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:66"><decl pos:start="1:52" pos:end="1:66"><type pos:start="1:52" pos:end="1:66"><name pos:start="1:52" pos:end="1:59">AVPacket</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:66">avpkt</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:48"><decl pos:start="3:29" pos:end="3:48"><type pos:start="3:29" pos:end="3:48"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:41">AVFrame</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:48">frame</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:69"><decl pos:start="3:51" pos:end="3:69"><type pos:start="3:51" pos:end="3:69"><name pos:start="3:51" pos:end="3:53">int</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:69">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="585:1">{<block_content pos:start="7:5" pos:end="583:13">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">AACEncContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:39">= <expr pos:start="7:24" pos:end="7:39"><name pos:start="7:24" pos:end="7:39"><name pos:start="7:24" pos:end="7:28">avctx</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:66"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:9">float</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier><modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:19">samples</name> <init pos:start="9:21" pos:end="9:39">= <expr pos:start="9:23" pos:end="9:39"><name pos:start="9:23" pos:end="9:39"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:39">planar_samples</name></name></expr></init></decl>, <decl pos:start="9:42" pos:end="9:50"><type ref="prev" pos:start="9:5" pos:end="9:12"><modifier pos:start="9:42" pos:end="9:42">*</modifier></type><name pos:start="9:43" pos:end="9:50">samples2</name></decl>, <decl pos:start="9:53" pos:end="9:55"><type ref="prev" pos:start="9:5" pos:end="9:12"><modifier pos:start="9:53" pos:end="9:53">*</modifier></type><name pos:start="9:54" pos:end="9:55">la</name></decl>, <decl pos:start="9:58" pos:end="9:65"><type ref="prev" pos:start="9:5" pos:end="9:12"><modifier pos:start="9:58" pos:end="9:58">*</modifier></type><name pos:start="9:59" pos:end="9:65">overlap</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">ChannelElement</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:23">cpe</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:24">SingleChannelElement</name> <modifier pos:start="13:26" pos:end="13:26">*</modifier></type><name pos:start="13:27" pos:end="13:29">sce</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:61"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:14">its</name></decl>, <decl pos:start="15:17" pos:end="15:18"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:17" pos:end="15:18">ch</name></decl>, <decl pos:start="15:21" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:21" pos:end="15:21">w</name></decl>, <decl pos:start="15:24" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:24" pos:end="15:28">chans</name></decl>, <decl pos:start="15:31" pos:end="15:33"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:31" pos:end="15:33">tag</name></decl>, <decl pos:start="15:36" pos:end="15:43"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:36" pos:end="15:43">start_ch</name></decl>, <decl pos:start="15:46" pos:end="15:48"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:46" pos:end="15:48">ret</name></decl>, <decl pos:start="15:51" pos:end="15:60"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:51" pos:end="15:60">frame_bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:62"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:15">ms_mode</name> <init pos:start="17:17" pos:end="17:19">= <expr pos:start="17:19" pos:end="17:19"><literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr></init></decl>, <decl pos:start="17:22" pos:end="17:32"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:22" pos:end="17:28">is_mode</name> <init pos:start="17:30" pos:end="17:32">= <expr pos:start="17:32" pos:end="17:32"><literal type="number" pos:start="17:32" pos:end="17:32">0</literal></expr></init></decl>, <decl pos:start="17:35" pos:end="17:46"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:35" pos:end="17:42">tns_mode</name> <init pos:start="17:44" pos:end="17:46">= <expr pos:start="17:46" pos:end="17:46"><literal type="number" pos:start="17:46" pos:end="17:46">0</literal></expr></init></decl>, <decl pos:start="17:49" pos:end="17:61"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:49" pos:end="17:57">pred_mode</name> <init pos:start="17:59" pos:end="17:61">= <expr pos:start="17:61" pos:end="17:61"><literal type="number" pos:start="17:61" pos:end="17:61">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:27"><decl pos:start="19:5" pos:end="19:26"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:23">chan_el_counter</name><index pos:start="19:24" pos:end="19:26">[<expr pos:start="19:25" pos:end="19:25"><literal type="number" pos:start="19:25" pos:end="19:25">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:46"><decl pos:start="21:5" pos:end="21:45"><type pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:19">FFPsyWindowInfo</name></type> <name pos:start="21:21" pos:end="21:45"><name pos:start="21:21" pos:end="21:27">windows</name><index pos:start="21:28" pos:end="21:45">[<expr pos:start="21:29" pos:end="21:44"><name pos:start="21:29" pos:end="21:44">AAC_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="27:17"><if pos:start="25:5" pos:end="27:17">if <condition pos:start="25:8" pos:end="25:27">(<expr pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:21">last_frame</name></name> <operator pos:start="25:23" pos:end="25:24">==</operator> <literal type="number" pos:start="25:26" pos:end="25:26">2</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:17"><block_content pos:start="27:9" pos:end="27:17">

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:36">/* add current frame to queue */</comment>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:14">(<expr pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:13">frame</name></expr>)</condition> <block pos:start="33:16" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:23">

        <if_stmt pos:start="35:9" pos:end="37:23"><if pos:start="35:9" pos:end="37:23">if <condition pos:start="35:12" pos:end="35:56">(<expr pos:start="35:13" pos:end="35:55"><operator pos:start="35:13" pos:end="35:13">(</operator><name pos:start="35:14" pos:end="35:16">ret</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="35:50"><name pos:start="35:20" pos:end="35:34">ff_af_queue_add</name><argument_list pos:start="35:35" pos:end="35:50">(<argument pos:start="35:36" pos:end="35:42"><expr pos:start="35:36" pos:end="35:42"><operator pos:start="35:36" pos:end="35:36">&amp;</operator><name pos:start="35:37" pos:end="35:42"><name pos:start="35:37" pos:end="35:37">s</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:42">afq</name></name></expr></argument>, <argument pos:start="35:45" pos:end="35:49"><expr pos:start="35:45" pos:end="35:49"><name pos:start="35:45" pos:end="35:49">frame</name></expr></argument>)</argument_list></call><operator pos:start="35:51" pos:end="35:51">)</operator> <operator pos:start="35:53" pos:end="35:53">&lt;</operator> <literal type="number" pos:start="35:55" pos:end="35:55">0</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:23"><block_content pos:start="37:13" pos:end="37:23">

            <return pos:start="37:13" pos:end="37:23">return <expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><call pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:22">copy_input_samples</name><argument_list pos:start="43:23" pos:end="43:32">(<argument pos:start="43:24" pos:end="43:24"><expr pos:start="43:24" pos:end="43:24"><name pos:start="43:24" pos:end="43:24">s</name></expr></argument>, <argument pos:start="43:27" pos:end="43:31"><expr pos:start="43:27" pos:end="43:31"><name pos:start="43:27" pos:end="43:31">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:68"><if pos:start="45:5" pos:end="47:68">if <condition pos:start="45:8" pos:end="45:17">(<expr pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:16">psypp</name></name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:68"><block_content pos:start="47:9" pos:end="47:68">

        <expr_stmt pos:start="47:9" pos:end="47:68"><expr pos:start="47:9" pos:end="47:67"><call pos:start="47:9" pos:end="47:67"><name pos:start="47:9" pos:end="47:25">ff_psy_preprocess</name><argument_list pos:start="47:26" pos:end="47:67">(<argument pos:start="47:27" pos:end="47:34"><expr pos:start="47:27" pos:end="47:34"><name pos:start="47:27" pos:end="47:34"><name pos:start="47:27" pos:end="47:27">s</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:34">psypp</name></name></expr></argument>, <argument pos:start="47:37" pos:end="47:53"><expr pos:start="47:37" pos:end="47:53"><name pos:start="47:37" pos:end="47:53"><name pos:start="47:37" pos:end="47:37">s</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:53">planar_samples</name></name></expr></argument>, <argument pos:start="47:56" pos:end="47:66"><expr pos:start="47:56" pos:end="47:66"><name pos:start="47:56" pos:end="47:66"><name pos:start="47:56" pos:end="47:56">s</name><operator pos:start="47:57" pos:end="47:58">-&gt;</operator><name pos:start="47:59" pos:end="47:66">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="53:17"><if pos:start="51:5" pos:end="53:17">if <condition pos:start="51:8" pos:end="51:29">(<expr pos:start="51:9" pos:end="51:28"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:28"><name pos:start="51:10" pos:end="51:14">avctx</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:28">frame_number</name></name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:17"><block_content pos:start="53:9" pos:end="53:17">

        <return pos:start="53:9" pos:end="53:17">return <expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:17"><expr pos:start="57:5" pos:end="57:16"><name pos:start="57:5" pos:end="57:12">start_ch</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <literal type="number" pos:start="57:16" pos:end="57:16">0</literal></expr>;</expr_stmt>

    <for pos:start="59:5" pos:end="193:5">for <control pos:start="59:9" pos:end="59:40">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">i</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:35"><expr pos:start="59:17" pos:end="59:34"><name pos:start="59:17" pos:end="59:17">i</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <name pos:start="59:21" pos:end="59:34"><name pos:start="59:21" pos:end="59:21">s</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:31">chan_map</name><index pos:start="59:32" pos:end="59:34">[<expr pos:start="59:33" pos:end="59:33"><literal type="number" pos:start="59:33" pos:end="59:33">0</literal></expr>]</index></name></expr>;</condition> <incr pos:start="59:37" pos:end="59:39"><expr pos:start="59:37" pos:end="59:39"><name pos:start="59:37" pos:end="59:37">i</name><operator pos:start="59:38" pos:end="59:39">++</operator></expr></incr>)</control> <block pos:start="59:42" pos:end="193:5">{<block_content pos:start="61:9" pos:end="191:26">

        <decl_stmt pos:start="61:9" pos:end="61:49"><decl pos:start="61:9" pos:end="61:48"><type pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:23">FFPsyWindowInfo</name><modifier pos:start="61:24" pos:end="61:24">*</modifier></type> <name pos:start="61:26" pos:end="61:27">wi</name> <init pos:start="61:29" pos:end="61:48">= <expr pos:start="61:31" pos:end="61:48"><name pos:start="61:31" pos:end="61:37">windows</name> <operator pos:start="61:39" pos:end="61:39">+</operator> <name pos:start="61:41" pos:end="61:48">start_ch</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:36"><expr pos:start="63:9" pos:end="63:35"><name pos:start="63:9" pos:end="63:11">tag</name>      <operator pos:start="63:18" pos:end="63:18">=</operator> <name pos:start="63:20" pos:end="63:35"><name pos:start="63:20" pos:end="63:20">s</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:30">chan_map</name><index pos:start="63:31" pos:end="63:35">[<expr pos:start="63:32" pos:end="63:34"><name pos:start="63:32" pos:end="63:32">i</name><operator pos:start="63:33" pos:end="63:33">+</operator><literal type="number" pos:start="63:34" pos:end="63:34">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:43"><expr pos:start="65:9" pos:end="65:42"><name pos:start="65:9" pos:end="65:13">chans</name>    <operator pos:start="65:18" pos:end="65:18">=</operator> <ternary pos:start="65:20" pos:end="65:42"><condition pos:start="65:20" pos:end="65:36"><expr pos:start="65:20" pos:end="65:34"><name pos:start="65:20" pos:end="65:22">tag</name> <operator pos:start="65:24" pos:end="65:25">==</operator> <name pos:start="65:27" pos:end="65:34">TYPE_CPE</name></expr> ?</condition><then pos:start="65:38" pos:end="65:38"> <expr pos:start="65:38" pos:end="65:38"><literal type="number" pos:start="65:38" pos:end="65:38">2</literal></expr> </then><else pos:start="65:40" pos:end="65:42">: <expr pos:start="65:42" pos:end="65:42"><literal type="number" pos:start="65:42" pos:end="65:42">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:30"><expr pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:11">cpe</name>      <operator pos:start="67:18" pos:end="67:18">=</operator> <operator pos:start="67:20" pos:end="67:20">&amp;</operator><name pos:start="67:21" pos:end="67:29"><name pos:start="67:21" pos:end="67:21">s</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:26">cpe</name><index pos:start="67:27" pos:end="67:29">[<expr pos:start="67:28" pos:end="67:28"><name pos:start="67:28" pos:end="67:28">i</name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="69:9" pos:end="189:9">for <control pos:start="69:13" pos:end="69:38">(<init pos:start="69:14" pos:end="69:20"><expr pos:start="69:14" pos:end="69:19"><name pos:start="69:14" pos:end="69:15">ch</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <literal type="number" pos:start="69:19" pos:end="69:19">0</literal></expr>;</init> <condition pos:start="69:22" pos:end="69:32"><expr pos:start="69:22" pos:end="69:31"><name pos:start="69:22" pos:end="69:23">ch</name> <operator pos:start="69:25" pos:end="69:25">&lt;</operator> <name pos:start="69:27" pos:end="69:31">chans</name></expr>;</condition> <incr pos:start="69:34" pos:end="69:37"><expr pos:start="69:34" pos:end="69:37"><name pos:start="69:34" pos:end="69:35">ch</name><operator pos:start="69:36" pos:end="69:37">++</operator></expr></incr>)</control> <block pos:start="69:40" pos:end="189:9">{<block_content pos:start="71:13" pos:end="187:44">

            <decl_stmt pos:start="71:13" pos:end="71:60"><decl pos:start="71:13" pos:end="71:59"><type pos:start="71:13" pos:end="71:37"><name pos:start="71:13" pos:end="71:35">IndividualChannelStream</name> <modifier pos:start="71:37" pos:end="71:37">*</modifier></type><name pos:start="71:38" pos:end="71:40">ics</name> <init pos:start="71:42" pos:end="71:59">= <expr pos:start="71:44" pos:end="71:59"><operator pos:start="71:44" pos:end="71:44">&amp;</operator><name pos:start="71:45" pos:end="71:55"><name pos:start="71:45" pos:end="71:47">cpe</name><operator pos:start="71:48" pos:end="71:49">-&gt;</operator><name pos:start="71:50" pos:end="71:51">ch</name><index pos:start="71:52" pos:end="71:55">[<expr pos:start="71:53" pos:end="71:54"><name pos:start="71:53" pos:end="71:54">ch</name></expr>]</index></name><operator pos:start="71:56" pos:end="71:56">.</operator><name pos:start="71:57" pos:end="71:59">ics</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="73:13" pos:end="73:44"><decl pos:start="73:13" pos:end="73:43"><type pos:start="73:13" pos:end="73:15"><name pos:start="73:13" pos:end="73:15">int</name></type> <name pos:start="73:17" pos:end="73:27">cur_channel</name> <init pos:start="73:29" pos:end="73:43">= <expr pos:start="73:31" pos:end="73:43"><name pos:start="73:31" pos:end="73:38">start_ch</name> <operator pos:start="73:40" pos:end="73:40">+</operator> <name pos:start="73:42" pos:end="73:43">ch</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="75:13" pos:end="75:40"><decl pos:start="75:13" pos:end="75:39"><type pos:start="75:13" pos:end="75:17"><name pos:start="75:13" pos:end="75:17">float</name></type> <name pos:start="75:19" pos:end="75:39">clip_avoidance_factor</name></decl>;</decl_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:48"><expr pos:start="77:13" pos:end="77:47"><name pos:start="77:13" pos:end="77:19">overlap</name>  <operator pos:start="77:22" pos:end="77:22">=</operator> <operator pos:start="77:24" pos:end="77:24">&amp;</operator><name pos:start="77:25" pos:end="77:47"><name pos:start="77:25" pos:end="77:31">samples</name><index pos:start="77:32" pos:end="77:44">[<expr pos:start="77:33" pos:end="77:43"><name pos:start="77:33" pos:end="77:43">cur_channel</name></expr>]</index><index pos:start="77:45" pos:end="77:47">[<expr pos:start="77:46" pos:end="77:46"><literal type="number" pos:start="77:46" pos:end="77:46">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:38"><expr pos:start="79:13" pos:end="79:37"><name pos:start="79:13" pos:end="79:20">samples2</name> <operator pos:start="79:22" pos:end="79:22">=</operator> <name pos:start="79:24" pos:end="79:30">overlap</name> <operator pos:start="79:32" pos:end="79:32">+</operator> <literal type="number" pos:start="79:34" pos:end="79:37">1024</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:43"><expr pos:start="81:13" pos:end="81:42"><name pos:start="81:13" pos:end="81:14">la</name>       <operator pos:start="81:22" pos:end="81:22">=</operator> <name pos:start="81:24" pos:end="81:31">samples2</name> <operator pos:start="81:33" pos:end="81:33">+</operator> <operator pos:start="81:35" pos:end="81:35">(</operator><literal type="number" pos:start="81:36" pos:end="81:39">448</literal><operator pos:start="81:39" pos:end="81:39">+</operator><literal type="number" pos:start="81:40" pos:end="81:41">64</literal><operator pos:start="81:42" pos:end="81:42">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="83:13" pos:end="85:26"><if pos:start="83:13" pos:end="85:26">if <condition pos:start="83:16" pos:end="83:23">(<expr pos:start="83:17" pos:end="83:22"><operator pos:start="83:17" pos:end="83:17">!</operator><name pos:start="83:18" pos:end="83:22">frame</name></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:26"><block_content pos:start="85:17" pos:end="85:26">

                <expr_stmt pos:start="85:17" pos:end="85:26"><expr pos:start="85:17" pos:end="85:25"><name pos:start="85:17" pos:end="85:18">la</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <name pos:start="85:22" pos:end="85:25">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="87:13" pos:end="115:13"><if pos:start="87:13" pos:end="109:13">if <condition pos:start="87:16" pos:end="87:32">(<expr pos:start="87:17" pos:end="87:31"><name pos:start="87:17" pos:end="87:19">tag</name> <operator pos:start="87:21" pos:end="87:22">==</operator> <name pos:start="87:24" pos:end="87:31">TYPE_LFE</name></expr>)</condition> <block pos:start="87:34" pos:end="109:13">{<block_content pos:start="89:17" pos:end="107:64">

                <expr_stmt pos:start="89:17" pos:end="89:59"><expr pos:start="89:17" pos:end="89:58"><name pos:start="89:17" pos:end="89:22"><name pos:start="89:17" pos:end="89:18">wi</name><index pos:start="89:19" pos:end="89:22">[<expr pos:start="89:20" pos:end="89:21"><name pos:start="89:20" pos:end="89:21">ch</name></expr>]</index></name><operator pos:start="89:23" pos:end="89:23">.</operator><name pos:start="89:24" pos:end="89:37"><name pos:start="89:24" pos:end="89:34">window_type</name><index pos:start="89:35" pos:end="89:37">[<expr pos:start="89:36" pos:end="89:36"><literal type="number" pos:start="89:36" pos:end="89:36">0</literal></expr>]</index></name> <operator pos:start="89:39" pos:end="89:39">=</operator> <name pos:start="89:41" pos:end="89:58">ONLY_LONG_SEQUENCE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:42"><expr pos:start="91:17" pos:end="91:41"><name pos:start="91:17" pos:end="91:22"><name pos:start="91:17" pos:end="91:18">wi</name><index pos:start="91:19" pos:end="91:22">[<expr pos:start="91:20" pos:end="91:21"><name pos:start="91:20" pos:end="91:21">ch</name></expr>]</index></name><operator pos:start="91:23" pos:end="91:23">.</operator><name pos:start="91:24" pos:end="91:35">window_shape</name>   <operator pos:start="91:39" pos:end="91:39">=</operator> <literal type="number" pos:start="91:41" pos:end="91:41">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:42"><expr pos:start="93:17" pos:end="93:41"><name pos:start="93:17" pos:end="93:22"><name pos:start="93:17" pos:end="93:18">wi</name><index pos:start="93:19" pos:end="93:22">[<expr pos:start="93:20" pos:end="93:21"><name pos:start="93:20" pos:end="93:21">ch</name></expr>]</index></name><operator pos:start="93:23" pos:end="93:23">.</operator><name pos:start="93:24" pos:end="93:34">num_windows</name>    <operator pos:start="93:39" pos:end="93:39">=</operator> <literal type="number" pos:start="93:41" pos:end="93:41">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:42"><expr pos:start="95:17" pos:end="95:41"><name pos:start="95:17" pos:end="95:22"><name pos:start="95:17" pos:end="95:18">wi</name><index pos:start="95:19" pos:end="95:22">[<expr pos:start="95:20" pos:end="95:21"><name pos:start="95:20" pos:end="95:21">ch</name></expr>]</index></name><operator pos:start="95:23" pos:end="95:23">.</operator><name pos:start="95:24" pos:end="95:34"><name pos:start="95:24" pos:end="95:31">grouping</name><index pos:start="95:32" pos:end="95:34">[<expr pos:start="95:33" pos:end="95:33"><literal type="number" pos:start="95:33" pos:end="95:33">0</literal></expr>]</index></name>    <operator pos:start="95:39" pos:end="95:39">=</operator> <literal type="number" pos:start="95:41" pos:end="95:41">1</literal></expr>;</expr_stmt>



                <comment type="block" pos:start="99:17" pos:end="105:19">/* Only the lowest 12 coefficients are used in a LFE channel.

                 * The expression below results in only the bottom 8 coefficients

                 * being used for 11.025kHz to 16kHz sample rates.

                 */</comment>

                <expr_stmt pos:start="107:17" pos:end="107:64"><expr pos:start="107:17" pos:end="107:63"><name pos:start="107:17" pos:end="107:28"><name pos:start="107:17" pos:end="107:19">ics</name><operator pos:start="107:20" pos:end="107:21">-&gt;</operator><name pos:start="107:22" pos:end="107:28">num_swb</name></name> <operator pos:start="107:30" pos:end="107:30">=</operator> <ternary pos:start="107:32" pos:end="107:63"><condition pos:start="107:32" pos:end="107:57"><expr pos:start="107:32" pos:end="107:55"><name pos:start="107:32" pos:end="107:50"><name pos:start="107:32" pos:end="107:32">s</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:50">samplerate_index</name></name> <operator pos:start="107:52" pos:end="107:53">&gt;=</operator> <literal type="number" pos:start="107:55" pos:end="107:55">8</literal></expr> ?</condition><then pos:start="107:59" pos:end="107:59"> <expr pos:start="107:59" pos:end="107:59"><literal type="number" pos:start="107:59" pos:end="107:59">1</literal></expr> </then><else pos:start="107:61" pos:end="107:63">: <expr pos:start="107:63" pos:end="107:63"><literal type="number" pos:start="107:63" pos:end="107:63">3</literal></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="109:15" pos:end="115:13">else <block pos:start="109:20" pos:end="115:13">{<block_content pos:start="111:17" pos:end="113:71">

                <expr_stmt pos:start="111:17" pos:end="113:71"><expr pos:start="111:17" pos:end="113:70"><name pos:start="111:17" pos:end="111:22"><name pos:start="111:17" pos:end="111:18">wi</name><index pos:start="111:19" pos:end="111:22">[<expr pos:start="111:20" pos:end="111:21"><name pos:start="111:20" pos:end="111:21">ch</name></expr>]</index></name> <operator pos:start="111:24" pos:end="111:24">=</operator> <call pos:start="111:26" pos:end="113:70"><name pos:start="111:26" pos:end="111:45"><name pos:start="111:26" pos:end="111:26">s</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:31">psy</name><operator pos:start="111:32" pos:end="111:32">.</operator><name pos:start="111:33" pos:end="111:37">model</name><operator pos:start="111:38" pos:end="111:39">-&gt;</operator><name pos:start="111:40" pos:end="111:45">window</name></name><argument_list pos:start="111:46" pos:end="113:70">(<argument pos:start="111:47" pos:end="111:53"><expr pos:start="111:47" pos:end="111:53"><operator pos:start="111:47" pos:end="111:47">&amp;</operator><name pos:start="111:48" pos:end="111:53"><name pos:start="111:48" pos:end="111:48">s</name><operator pos:start="111:49" pos:end="111:50">-&gt;</operator><name pos:start="111:51" pos:end="111:53">psy</name></name></expr></argument>, <argument pos:start="111:56" pos:end="111:63"><expr pos:start="111:56" pos:end="111:63"><name pos:start="111:56" pos:end="111:63">samples2</name></expr></argument>, <argument pos:start="111:66" pos:end="111:67"><expr pos:start="111:66" pos:end="111:67"><name pos:start="111:66" pos:end="111:67">la</name></expr></argument>, <argument pos:start="111:70" pos:end="111:80"><expr pos:start="111:70" pos:end="111:80"><name pos:start="111:70" pos:end="111:80">cur_channel</name></expr></argument>,

                                              <argument pos:start="113:47" pos:end="113:69"><expr pos:start="113:47" pos:end="113:69"><name pos:start="113:47" pos:end="113:69"><name pos:start="113:47" pos:end="113:49">ics</name><operator pos:start="113:50" pos:end="113:51">-&gt;</operator><name pos:start="113:52" pos:end="113:66">window_sequence</name><index pos:start="113:67" pos:end="113:69">[<expr pos:start="113:68" pos:end="113:68"><literal type="number" pos:start="113:68" pos:end="113:68">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:62"><expr pos:start="117:13" pos:end="117:61"><name pos:start="117:13" pos:end="117:35"><name pos:start="117:13" pos:end="117:15">ics</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:32">window_sequence</name><index pos:start="117:33" pos:end="117:35">[<expr pos:start="117:34" pos:end="117:34"><literal type="number" pos:start="117:34" pos:end="117:34">1</literal></expr>]</index></name> <operator pos:start="117:37" pos:end="117:37">=</operator> <name pos:start="117:39" pos:end="117:61"><name pos:start="117:39" pos:end="117:41">ics</name><operator pos:start="117:42" pos:end="117:43">-&gt;</operator><name pos:start="117:44" pos:end="117:58">window_sequence</name><index pos:start="117:59" pos:end="117:61">[<expr pos:start="117:60" pos:end="117:60"><literal type="number" pos:start="117:60" pos:end="117:60">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:60"><expr pos:start="119:13" pos:end="119:59"><name pos:start="119:13" pos:end="119:35"><name pos:start="119:13" pos:end="119:15">ics</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:32">window_sequence</name><index pos:start="119:33" pos:end="119:35">[<expr pos:start="119:34" pos:end="119:34"><literal type="number" pos:start="119:34" pos:end="119:34">0</literal></expr>]</index></name> <operator pos:start="119:37" pos:end="119:37">=</operator> <name pos:start="119:39" pos:end="119:44"><name pos:start="119:39" pos:end="119:40">wi</name><index pos:start="119:41" pos:end="119:44">[<expr pos:start="119:42" pos:end="119:43"><name pos:start="119:42" pos:end="119:43">ch</name></expr>]</index></name><operator pos:start="119:45" pos:end="119:45">.</operator><name pos:start="119:46" pos:end="119:59"><name pos:start="119:46" pos:end="119:56">window_type</name><index pos:start="119:57" pos:end="119:59">[<expr pos:start="119:58" pos:end="119:58"><literal type="number" pos:start="119:58" pos:end="119:58">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:60"><expr pos:start="121:13" pos:end="121:59"><name pos:start="121:13" pos:end="121:33"><name pos:start="121:13" pos:end="121:15">ics</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:30">use_kb_window</name><index pos:start="121:31" pos:end="121:33">[<expr pos:start="121:32" pos:end="121:32"><literal type="number" pos:start="121:32" pos:end="121:32">1</literal></expr>]</index></name>   <operator pos:start="121:37" pos:end="121:37">=</operator> <name pos:start="121:39" pos:end="121:59"><name pos:start="121:39" pos:end="121:41">ics</name><operator pos:start="121:42" pos:end="121:43">-&gt;</operator><name pos:start="121:44" pos:end="121:56">use_kb_window</name><index pos:start="121:57" pos:end="121:59">[<expr pos:start="121:58" pos:end="121:58"><literal type="number" pos:start="121:58" pos:end="121:58">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:58"><expr pos:start="123:13" pos:end="123:57"><name pos:start="123:13" pos:end="123:33"><name pos:start="123:13" pos:end="123:15">ics</name><operator pos:start="123:16" pos:end="123:17">-&gt;</operator><name pos:start="123:18" pos:end="123:30">use_kb_window</name><index pos:start="123:31" pos:end="123:33">[<expr pos:start="123:32" pos:end="123:32"><literal type="number" pos:start="123:32" pos:end="123:32">0</literal></expr>]</index></name>   <operator pos:start="123:37" pos:end="123:37">=</operator> <name pos:start="123:39" pos:end="123:44"><name pos:start="123:39" pos:end="123:40">wi</name><index pos:start="123:41" pos:end="123:44">[<expr pos:start="123:42" pos:end="123:43"><name pos:start="123:42" pos:end="123:43">ch</name></expr>]</index></name><operator pos:start="123:45" pos:end="123:45">.</operator><name pos:start="123:46" pos:end="123:57">window_shape</name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:57"><expr pos:start="125:13" pos:end="125:56"><name pos:start="125:13" pos:end="125:28"><name pos:start="125:13" pos:end="125:15">ics</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:28">num_windows</name></name>        <operator pos:start="125:37" pos:end="125:37">=</operator> <name pos:start="125:39" pos:end="125:44"><name pos:start="125:39" pos:end="125:40">wi</name><index pos:start="125:41" pos:end="125:44">[<expr pos:start="125:42" pos:end="125:43"><name pos:start="125:42" pos:end="125:43">ch</name></expr>]</index></name><operator pos:start="125:45" pos:end="125:45">.</operator><name pos:start="125:46" pos:end="125:56">num_windows</name></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:78"><expr pos:start="127:13" pos:end="127:77"><name pos:start="127:13" pos:end="127:26"><name pos:start="127:13" pos:end="127:15">ics</name><operator pos:start="127:16" pos:end="127:17">-&gt;</operator><name pos:start="127:18" pos:end="127:26">swb_sizes</name></name>          <operator pos:start="127:37" pos:end="127:37">=</operator> <name pos:start="127:39" pos:end="127:77"><name pos:start="127:39" pos:end="127:39">s</name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:44">psy</name><operator pos:start="127:45" pos:end="127:45">.</operator><name pos:start="127:46" pos:end="127:50">bands</name>    <index pos:start="127:55" pos:end="127:77">[<expr pos:start="127:56" pos:end="127:76"><name pos:start="127:56" pos:end="127:71"><name pos:start="127:56" pos:end="127:58">ics</name><operator pos:start="127:59" pos:end="127:60">-&gt;</operator><name pos:start="127:61" pos:end="127:71">num_windows</name></name> <operator pos:start="127:73" pos:end="127:74">==</operator> <literal type="number" pos:start="127:76" pos:end="127:76">8</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:111"><expr pos:start="129:13" pos:end="129:110"><name pos:start="129:13" pos:end="129:24"><name pos:start="129:13" pos:end="129:15">ics</name><operator pos:start="129:16" pos:end="129:17">-&gt;</operator><name pos:start="129:18" pos:end="129:24">num_swb</name></name>            <operator pos:start="129:37" pos:end="129:37">=</operator> <ternary pos:start="129:39" pos:end="129:110"><condition pos:start="129:39" pos:end="129:55"><expr pos:start="129:39" pos:end="129:53"><name pos:start="129:39" pos:end="129:41">tag</name> <operator pos:start="129:43" pos:end="129:44">==</operator> <name pos:start="129:46" pos:end="129:53">TYPE_LFE</name></expr> ?</condition><then pos:start="129:57" pos:end="129:68"> <expr pos:start="129:57" pos:end="129:68"><name pos:start="129:57" pos:end="129:68"><name pos:start="129:57" pos:end="129:59">ics</name><operator pos:start="129:60" pos:end="129:61">-&gt;</operator><name pos:start="129:62" pos:end="129:68">num_swb</name></name></expr> </then><else pos:start="129:70" pos:end="129:110">: <expr pos:start="129:72" pos:end="129:110"><name pos:start="129:72" pos:end="129:110"><name pos:start="129:72" pos:end="129:72">s</name><operator pos:start="129:73" pos:end="129:74">-&gt;</operator><name pos:start="129:75" pos:end="129:77">psy</name><operator pos:start="129:78" pos:end="129:78">.</operator><name pos:start="129:79" pos:end="129:87">num_bands</name><index pos:start="129:88" pos:end="129:110">[<expr pos:start="129:89" pos:end="129:109"><name pos:start="129:89" pos:end="129:104"><name pos:start="129:89" pos:end="129:91">ics</name><operator pos:start="129:92" pos:end="129:93">-&gt;</operator><name pos:start="129:94" pos:end="129:104">num_windows</name></name> <operator pos:start="129:106" pos:end="129:107">==</operator> <literal type="number" pos:start="129:109" pos:end="129:109">8</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="135:80"><expr pos:start="131:13" pos:end="135:79"><name pos:start="131:13" pos:end="131:27"><name pos:start="131:13" pos:end="131:15">ics</name><operator pos:start="131:16" pos:end="131:17">-&gt;</operator><name pos:start="131:18" pos:end="131:27">swb_offset</name></name>         <operator pos:start="131:37" pos:end="131:37">=</operator> <ternary pos:start="131:39" pos:end="135:79"><condition pos:start="131:39" pos:end="131:85"><expr pos:start="131:39" pos:end="131:83"><name pos:start="131:39" pos:end="131:44"><name pos:start="131:39" pos:end="131:40">wi</name><index pos:start="131:41" pos:end="131:44">[<expr pos:start="131:42" pos:end="131:43"><name pos:start="131:42" pos:end="131:43">ch</name></expr>]</index></name><operator pos:start="131:45" pos:end="131:45">.</operator><name pos:start="131:46" pos:end="131:59"><name pos:start="131:46" pos:end="131:56">window_type</name><index pos:start="131:57" pos:end="131:59">[<expr pos:start="131:58" pos:end="131:58"><literal type="number" pos:start="131:58" pos:end="131:58">0</literal></expr>]</index></name> <operator pos:start="131:61" pos:end="131:62">==</operator> <name pos:start="131:64" pos:end="131:83">EIGHT_SHORT_SEQUENCE</name></expr> ?</condition><then pos:start="133:41" pos:end="133:79">

                                        <expr pos:start="133:41" pos:end="133:79"><name pos:start="133:41" pos:end="133:79"><name pos:start="133:41" pos:end="133:57">ff_swb_offset_128</name> <index pos:start="133:59" pos:end="133:79">[<expr pos:start="133:60" pos:end="133:78"><name pos:start="133:60" pos:end="133:78"><name pos:start="133:60" pos:end="133:60">s</name><operator pos:start="133:61" pos:end="133:62">-&gt;</operator><name pos:start="133:63" pos:end="133:78">samplerate_index</name></name></expr>]</index></name></expr></then><else pos:start="133:80" pos:end="135:79">:

                                        <expr pos:start="135:41" pos:end="135:79"><name pos:start="135:41" pos:end="135:79"><name pos:start="135:41" pos:end="135:58">ff_swb_offset_1024</name><index pos:start="135:59" pos:end="135:79">[<expr pos:start="135:60" pos:end="135:78"><name pos:start="135:60" pos:end="135:78"><name pos:start="135:60" pos:end="135:60">s</name><operator pos:start="135:61" pos:end="135:62">-&gt;</operator><name pos:start="135:63" pos:end="135:78">samplerate_index</name></name></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="141:83"><expr pos:start="137:13" pos:end="141:82"><name pos:start="137:13" pos:end="137:30"><name pos:start="137:13" pos:end="137:15">ics</name><operator pos:start="137:16" pos:end="137:17">-&gt;</operator><name pos:start="137:18" pos:end="137:30">tns_max_bands</name></name>      <operator pos:start="137:37" pos:end="137:37">=</operator> <ternary pos:start="137:39" pos:end="141:82"><condition pos:start="137:39" pos:end="137:85"><expr pos:start="137:39" pos:end="137:83"><name pos:start="137:39" pos:end="137:44"><name pos:start="137:39" pos:end="137:40">wi</name><index pos:start="137:41" pos:end="137:44">[<expr pos:start="137:42" pos:end="137:43"><name pos:start="137:42" pos:end="137:43">ch</name></expr>]</index></name><operator pos:start="137:45" pos:end="137:45">.</operator><name pos:start="137:46" pos:end="137:59"><name pos:start="137:46" pos:end="137:56">window_type</name><index pos:start="137:57" pos:end="137:59">[<expr pos:start="137:58" pos:end="137:58"><literal type="number" pos:start="137:58" pos:end="137:58">0</literal></expr>]</index></name> <operator pos:start="137:61" pos:end="137:62">==</operator> <name pos:start="137:64" pos:end="137:83">EIGHT_SHORT_SEQUENCE</name></expr> ?</condition><then pos:start="139:41" pos:end="139:82">

                                        <expr pos:start="139:41" pos:end="139:82"><name pos:start="139:41" pos:end="139:82"><name pos:start="139:41" pos:end="139:60">ff_tns_max_bands_128</name> <index pos:start="139:62" pos:end="139:82">[<expr pos:start="139:63" pos:end="139:81"><name pos:start="139:63" pos:end="139:81"><name pos:start="139:63" pos:end="139:63">s</name><operator pos:start="139:64" pos:end="139:65">-&gt;</operator><name pos:start="139:66" pos:end="139:81">samplerate_index</name></name></expr>]</index></name></expr></then><else pos:start="139:83" pos:end="141:82">:

                                        <expr pos:start="141:41" pos:end="141:82"><name pos:start="141:41" pos:end="141:82"><name pos:start="141:41" pos:end="141:61">ff_tns_max_bands_1024</name><index pos:start="141:62" pos:end="141:82">[<expr pos:start="141:63" pos:end="141:81"><name pos:start="141:63" pos:end="141:81"><name pos:start="141:63" pos:end="141:63">s</name><operator pos:start="141:64" pos:end="141:65">-&gt;</operator><name pos:start="141:66" pos:end="141:81">samplerate_index</name></name></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:41"><expr pos:start="143:13" pos:end="143:40"><name pos:start="143:13" pos:end="143:33">clip_avoidance_factor</name> <operator pos:start="143:35" pos:end="143:35">=</operator> <literal type="number" pos:start="143:37" pos:end="143:40">0.0f</literal></expr>;</expr_stmt>

            <for pos:start="145:13" pos:end="147:55">for <control pos:start="145:17" pos:end="145:50">(<init pos:start="145:18" pos:end="145:23"><expr pos:start="145:18" pos:end="145:22"><name pos:start="145:18" pos:end="145:18">w</name> <operator pos:start="145:20" pos:end="145:20">=</operator> <literal type="number" pos:start="145:22" pos:end="145:22">0</literal></expr>;</init> <condition pos:start="145:25" pos:end="145:45"><expr pos:start="145:25" pos:end="145:44"><name pos:start="145:25" pos:end="145:25">w</name> <operator pos:start="145:27" pos:end="145:27">&lt;</operator> <name pos:start="145:29" pos:end="145:44"><name pos:start="145:29" pos:end="145:31">ics</name><operator pos:start="145:32" pos:end="145:33">-&gt;</operator><name pos:start="145:34" pos:end="145:44">num_windows</name></name></expr>;</condition> <incr pos:start="145:47" pos:end="145:49"><expr pos:start="145:47" pos:end="145:49"><name pos:start="145:47" pos:end="145:47">w</name><operator pos:start="145:48" pos:end="145:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="147:17" pos:end="147:55"><block_content pos:start="147:17" pos:end="147:55">

                <expr_stmt pos:start="147:17" pos:end="147:55"><expr pos:start="147:17" pos:end="147:54"><name pos:start="147:17" pos:end="147:33"><name pos:start="147:17" pos:end="147:19">ics</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:30">group_len</name><index pos:start="147:31" pos:end="147:33">[<expr pos:start="147:32" pos:end="147:32"><name pos:start="147:32" pos:end="147:32">w</name></expr>]</index></name> <operator pos:start="147:35" pos:end="147:35">=</operator> <name pos:start="147:37" pos:end="147:42"><name pos:start="147:37" pos:end="147:38">wi</name><index pos:start="147:39" pos:end="147:42">[<expr pos:start="147:40" pos:end="147:41"><name pos:start="147:40" pos:end="147:41">ch</name></expr>]</index></name><operator pos:start="147:43" pos:end="147:43">.</operator><name pos:start="147:44" pos:end="147:54"><name pos:start="147:44" pos:end="147:51">grouping</name><index pos:start="147:52" pos:end="147:54">[<expr pos:start="147:53" pos:end="147:53"><name pos:start="147:53" pos:end="147:53">w</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <for pos:start="149:13" pos:end="163:13">for <control pos:start="149:17" pos:end="149:50">(<init pos:start="149:18" pos:end="149:23"><expr pos:start="149:18" pos:end="149:22"><name pos:start="149:18" pos:end="149:18">w</name> <operator pos:start="149:20" pos:end="149:20">=</operator> <literal type="number" pos:start="149:22" pos:end="149:22">0</literal></expr>;</init> <condition pos:start="149:25" pos:end="149:45"><expr pos:start="149:25" pos:end="149:44"><name pos:start="149:25" pos:end="149:25">w</name> <operator pos:start="149:27" pos:end="149:27">&lt;</operator> <name pos:start="149:29" pos:end="149:44"><name pos:start="149:29" pos:end="149:31">ics</name><operator pos:start="149:32" pos:end="149:33">-&gt;</operator><name pos:start="149:34" pos:end="149:44">num_windows</name></name></expr>;</condition> <incr pos:start="149:47" pos:end="149:49"><expr pos:start="149:47" pos:end="149:49"><name pos:start="149:47" pos:end="149:47">w</name><operator pos:start="149:48" pos:end="149:49">++</operator></expr></incr>)</control> <block pos:start="149:52" pos:end="163:13">{<block_content pos:start="151:17" pos:end="161:17">

                <if_stmt pos:start="151:17" pos:end="161:17"><if pos:start="151:17" pos:end="157:17">if <condition pos:start="151:20" pos:end="151:63">(<expr pos:start="151:21" pos:end="151:62"><name pos:start="151:21" pos:end="151:26"><name pos:start="151:21" pos:end="151:22">wi</name><index pos:start="151:23" pos:end="151:26">[<expr pos:start="151:24" pos:end="151:25"><name pos:start="151:24" pos:end="151:25">ch</name></expr>]</index></name><operator pos:start="151:27" pos:end="151:27">.</operator><name pos:start="151:28" pos:end="151:38"><name pos:start="151:28" pos:end="151:35">clipping</name><index pos:start="151:36" pos:end="151:38">[<expr pos:start="151:37" pos:end="151:37"><name pos:start="151:37" pos:end="151:37">w</name></expr>]</index></name> <operator pos:start="151:40" pos:end="151:40">&gt;</operator> <name pos:start="151:42" pos:end="151:62">CLIP_AVOIDANCE_FACTOR</name></expr>)</condition> <block pos:start="151:65" pos:end="157:17">{<block_content pos:start="153:21" pos:end="155:93">

                    <expr_stmt pos:start="153:21" pos:end="153:48"><expr pos:start="153:21" pos:end="153:47"><name pos:start="153:21" pos:end="153:43"><name pos:start="153:21" pos:end="153:23">ics</name><operator pos:start="153:24" pos:end="153:25">-&gt;</operator><name pos:start="153:26" pos:end="153:40">window_clipping</name><index pos:start="153:41" pos:end="153:43">[<expr pos:start="153:42" pos:end="153:42"><name pos:start="153:42" pos:end="153:42">w</name></expr>]</index></name> <operator pos:start="153:45" pos:end="153:45">=</operator> <literal type="number" pos:start="153:47" pos:end="153:47">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="155:21" pos:end="155:93"><expr pos:start="155:21" pos:end="155:92"><name pos:start="155:21" pos:end="155:41">clip_avoidance_factor</name> <operator pos:start="155:43" pos:end="155:43">=</operator> <call pos:start="155:45" pos:end="155:92"><name pos:start="155:45" pos:end="155:49">FFMAX</name><argument_list pos:start="155:50" pos:end="155:92">(<argument pos:start="155:51" pos:end="155:71"><expr pos:start="155:51" pos:end="155:71"><name pos:start="155:51" pos:end="155:71">clip_avoidance_factor</name></expr></argument>, <argument pos:start="155:74" pos:end="155:91"><expr pos:start="155:74" pos:end="155:91"><name pos:start="155:74" pos:end="155:79"><name pos:start="155:74" pos:end="155:75">wi</name><index pos:start="155:76" pos:end="155:79">[<expr pos:start="155:77" pos:end="155:78"><name pos:start="155:77" pos:end="155:78">ch</name></expr>]</index></name><operator pos:start="155:80" pos:end="155:80">.</operator><name pos:start="155:81" pos:end="155:91"><name pos:start="155:81" pos:end="155:88">clipping</name><index pos:start="155:89" pos:end="155:91">[<expr pos:start="155:90" pos:end="155:90"><name pos:start="155:90" pos:end="155:90">w</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="157:19" pos:end="161:17">else <block pos:start="157:24" pos:end="161:17">{<block_content pos:start="159:21" pos:end="159:48">

                    <expr_stmt pos:start="159:21" pos:end="159:48"><expr pos:start="159:21" pos:end="159:47"><name pos:start="159:21" pos:end="159:43"><name pos:start="159:21" pos:end="159:23">ics</name><operator pos:start="159:24" pos:end="159:25">-&gt;</operator><name pos:start="159:26" pos:end="159:40">window_clipping</name><index pos:start="159:41" pos:end="159:43">[<expr pos:start="159:42" pos:end="159:42"><name pos:start="159:42" pos:end="159:42">w</name></expr>]</index></name> <operator pos:start="159:45" pos:end="159:45">=</operator> <literal type="number" pos:start="159:47" pos:end="159:47">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="165:13" pos:end="173:13"><if pos:start="165:13" pos:end="169:13">if <condition pos:start="165:16" pos:end="165:62">(<expr pos:start="165:17" pos:end="165:61"><name pos:start="165:17" pos:end="165:37">clip_avoidance_factor</name> <operator pos:start="165:39" pos:end="165:39">&gt;</operator> <name pos:start="165:41" pos:end="165:61">CLIP_AVOIDANCE_FACTOR</name></expr>)</condition> <block pos:start="165:64" pos:end="169:13">{<block_content pos:start="167:17" pos:end="167:91">

                <expr_stmt pos:start="167:17" pos:end="167:91"><expr pos:start="167:17" pos:end="167:90"><name pos:start="167:17" pos:end="167:42"><name pos:start="167:17" pos:end="167:19">ics</name><operator pos:start="167:20" pos:end="167:21">-&gt;</operator><name pos:start="167:22" pos:end="167:42">clip_avoidance_factor</name></name> <operator pos:start="167:44" pos:end="167:44">=</operator> <name pos:start="167:46" pos:end="167:66">CLIP_AVOIDANCE_FACTOR</name> <operator pos:start="167:68" pos:end="167:68">/</operator> <name pos:start="167:70" pos:end="167:90">clip_avoidance_factor</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="169:15" pos:end="173:13">else <block pos:start="169:20" pos:end="173:13">{<block_content pos:start="171:17" pos:end="171:50">

                <expr_stmt pos:start="171:17" pos:end="171:50"><expr pos:start="171:17" pos:end="171:49"><name pos:start="171:17" pos:end="171:42"><name pos:start="171:17" pos:end="171:19">ics</name><operator pos:start="171:20" pos:end="171:21">-&gt;</operator><name pos:start="171:22" pos:end="171:42">clip_avoidance_factor</name></name> <operator pos:start="171:44" pos:end="171:44">=</operator> <literal type="number" pos:start="171:46" pos:end="171:49">1.0f</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="177:13" pos:end="177:60"><expr pos:start="177:13" pos:end="177:59"><call pos:start="177:13" pos:end="177:59"><name pos:start="177:13" pos:end="177:33">apply_window_and_mdct</name><argument_list pos:start="177:34" pos:end="177:59">(<argument pos:start="177:35" pos:end="177:35"><expr pos:start="177:35" pos:end="177:35"><name pos:start="177:35" pos:end="177:35">s</name></expr></argument>, <argument pos:start="177:38" pos:end="177:49"><expr pos:start="177:38" pos:end="177:49"><operator pos:start="177:38" pos:end="177:38">&amp;</operator><name pos:start="177:39" pos:end="177:49"><name pos:start="177:39" pos:end="177:41">cpe</name><operator pos:start="177:42" pos:end="177:43">-&gt;</operator><name pos:start="177:44" pos:end="177:45">ch</name><index pos:start="177:46" pos:end="177:49">[<expr pos:start="177:47" pos:end="177:48"><name pos:start="177:47" pos:end="177:48">ch</name></expr>]</index></name></expr></argument>, <argument pos:start="177:52" pos:end="177:58"><expr pos:start="177:52" pos:end="177:58"><name pos:start="177:52" pos:end="177:58">overlap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="179:13" pos:end="185:13"><if pos:start="179:13" pos:end="185:13">if <condition pos:start="179:16" pos:end="179:42">(<expr pos:start="179:17" pos:end="179:41"><call pos:start="179:17" pos:end="179:41"><name pos:start="179:17" pos:end="179:21">isnan</name><argument_list pos:start="179:22" pos:end="179:41">(<argument pos:start="179:23" pos:end="179:40"><expr pos:start="179:23" pos:end="179:40"><name pos:start="179:23" pos:end="179:40"><name pos:start="179:23" pos:end="179:25">cpe</name><operator pos:start="179:26" pos:end="179:27">-&gt;</operator><name pos:start="179:28" pos:end="179:29">ch</name><operator pos:start="179:30" pos:end="179:31">-&gt;</operator><name pos:start="179:32" pos:end="179:37">coeffs</name><index pos:start="179:38" pos:end="179:40">[<expr pos:start="179:39" pos:end="179:39"><literal type="number" pos:start="179:39" pos:end="179:39">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="179:44" pos:end="185:13">{<block_content pos:start="181:17" pos:end="183:39">

                <expr_stmt pos:start="181:17" pos:end="181:68"><expr pos:start="181:17" pos:end="181:67"><call pos:start="181:17" pos:end="181:67"><name pos:start="181:17" pos:end="181:22">av_log</name><argument_list pos:start="181:23" pos:end="181:67">(<argument pos:start="181:24" pos:end="181:28"><expr pos:start="181:24" pos:end="181:28"><name pos:start="181:24" pos:end="181:28">avctx</name></expr></argument>, <argument pos:start="181:31" pos:end="181:42"><expr pos:start="181:31" pos:end="181:42"><name pos:start="181:31" pos:end="181:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="181:45" pos:end="181:66"><expr pos:start="181:45" pos:end="181:66"><literal type="string" pos:start="181:45" pos:end="181:66">"Input contains NaN\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="183:17" pos:end="183:39">return <expr pos:start="183:24" pos:end="183:38"><call pos:start="183:24" pos:end="183:38"><name pos:start="183:24" pos:end="183:30">AVERROR</name><argument_list pos:start="183:31" pos:end="183:38">(<argument pos:start="183:32" pos:end="183:37"><expr pos:start="183:32" pos:end="183:37"><name pos:start="183:32" pos:end="183:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:44"><expr pos:start="187:13" pos:end="187:43"><call pos:start="187:13" pos:end="187:43"><name pos:start="187:13" pos:end="187:26">avoid_clipping</name><argument_list pos:start="187:27" pos:end="187:43">(<argument pos:start="187:28" pos:end="187:28"><expr pos:start="187:28" pos:end="187:28"><name pos:start="187:28" pos:end="187:28">s</name></expr></argument>, <argument pos:start="187:31" pos:end="187:42"><expr pos:start="187:31" pos:end="187:42"><operator pos:start="187:31" pos:end="187:31">&amp;</operator><name pos:start="187:32" pos:end="187:42"><name pos:start="187:32" pos:end="187:34">cpe</name><operator pos:start="187:35" pos:end="187:36">-&gt;</operator><name pos:start="187:37" pos:end="187:38">ch</name><index pos:start="187:39" pos:end="187:42">[<expr pos:start="187:40" pos:end="187:41"><name pos:start="187:40" pos:end="187:41">ch</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="191:9" pos:end="191:26"><expr pos:start="191:9" pos:end="191:25"><name pos:start="191:9" pos:end="191:16">start_ch</name> <operator pos:start="191:18" pos:end="191:19">+=</operator> <name pos:start="191:21" pos:end="191:25">chans</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="195:5" pos:end="197:19"><if pos:start="195:5" pos:end="197:19">if <condition pos:start="195:8" pos:end="195:74">(<expr pos:start="195:9" pos:end="195:73"><operator pos:start="195:9" pos:end="195:9">(</operator><name pos:start="195:10" pos:end="195:12">ret</name> <operator pos:start="195:14" pos:end="195:14">=</operator> <call pos:start="195:16" pos:end="195:68"><name pos:start="195:16" pos:end="195:31">ff_alloc_packet2</name><argument_list pos:start="195:32" pos:end="195:68">(<argument pos:start="195:33" pos:end="195:37"><expr pos:start="195:33" pos:end="195:37"><name pos:start="195:33" pos:end="195:37">avctx</name></expr></argument>, <argument pos:start="195:40" pos:end="195:44"><expr pos:start="195:40" pos:end="195:44"><name pos:start="195:40" pos:end="195:44">avpkt</name></expr></argument>, <argument pos:start="195:47" pos:end="195:64"><expr pos:start="195:47" pos:end="195:64"><literal type="number" pos:start="195:47" pos:end="195:50">8192</literal> <operator pos:start="195:52" pos:end="195:52">*</operator> <name pos:start="195:54" pos:end="195:64"><name pos:start="195:54" pos:end="195:54">s</name><operator pos:start="195:55" pos:end="195:56">-&gt;</operator><name pos:start="195:57" pos:end="195:64">channels</name></name></expr></argument>, <argument pos:start="195:67" pos:end="195:67"><expr pos:start="195:67" pos:end="195:67"><literal type="number" pos:start="195:67" pos:end="195:67">0</literal></expr></argument>)</argument_list></call><operator pos:start="195:69" pos:end="195:69">)</operator> <operator pos:start="195:71" pos:end="195:71">&lt;</operator> <literal type="number" pos:start="195:73" pos:end="195:73">0</literal></expr>)</condition><block type="pseudo" pos:start="197:9" pos:end="197:19"><block_content pos:start="197:9" pos:end="197:19">

        <return pos:start="197:9" pos:end="197:19">return <expr pos:start="197:16" pos:end="197:18"><name pos:start="197:16" pos:end="197:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:25"><expr pos:start="199:5" pos:end="199:24"><name pos:start="199:5" pos:end="199:14">frame_bits</name> <operator pos:start="199:16" pos:end="199:16">=</operator> <name pos:start="199:18" pos:end="199:20">its</name> <operator pos:start="199:22" pos:end="199:22">=</operator> <literal type="number" pos:start="199:24" pos:end="199:24">0</literal></expr>;</expr_stmt>

    <do pos:start="201:5" pos:end="555:16">do <block pos:start="201:8" pos:end="555:5">{<block_content pos:start="203:9" pos:end="553:9">

        <decl_stmt pos:start="203:9" pos:end="203:53"><decl pos:start="203:9" pos:end="203:23"><type pos:start="203:9" pos:end="203:11"><name pos:start="203:9" pos:end="203:11">int</name></type> <name pos:start="203:13" pos:end="203:23">target_bits</name></decl>, <decl pos:start="203:26" pos:end="203:38"><type ref="prev" pos:start="203:9" pos:end="203:11"/><name pos:start="203:26" pos:end="203:38">too_many_bits</name></decl>, <decl pos:start="203:41" pos:end="203:52"><type ref="prev" pos:start="203:9" pos:end="203:11"/><name pos:start="203:41" pos:end="203:52">too_few_bits</name></decl>;</decl_stmt>



        <expr_stmt pos:start="207:9" pos:end="207:56"><expr pos:start="207:9" pos:end="207:55"><call pos:start="207:9" pos:end="207:55"><name pos:start="207:9" pos:end="207:21">init_put_bits</name><argument_list pos:start="207:22" pos:end="207:55">(<argument pos:start="207:23" pos:end="207:28"><expr pos:start="207:23" pos:end="207:28"><operator pos:start="207:23" pos:end="207:23">&amp;</operator><name pos:start="207:24" pos:end="207:28"><name pos:start="207:24" pos:end="207:24">s</name><operator pos:start="207:25" pos:end="207:26">-&gt;</operator><name pos:start="207:27" pos:end="207:28">pb</name></name></expr></argument>, <argument pos:start="207:31" pos:end="207:41"><expr pos:start="207:31" pos:end="207:41"><name pos:start="207:31" pos:end="207:41"><name pos:start="207:31" pos:end="207:35">avpkt</name><operator pos:start="207:36" pos:end="207:37">-&gt;</operator><name pos:start="207:38" pos:end="207:41">data</name></name></expr></argument>, <argument pos:start="207:44" pos:end="207:54"><expr pos:start="207:44" pos:end="207:54"><name pos:start="207:44" pos:end="207:54"><name pos:start="207:44" pos:end="207:48">avpkt</name><operator pos:start="207:49" pos:end="207:50">-&gt;</operator><name pos:start="207:51" pos:end="207:54">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="211:9" pos:end="213:52"><if pos:start="211:9" pos:end="213:52">if <condition pos:start="211:12" pos:end="211:88">(<expr pos:start="211:13" pos:end="211:87"><operator pos:start="211:13" pos:end="211:13">(</operator><name pos:start="211:14" pos:end="211:32"><name pos:start="211:14" pos:end="211:18">avctx</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:32">frame_number</name></name> <operator pos:start="211:34" pos:end="211:34">&amp;</operator> <literal type="number" pos:start="211:36" pos:end="211:39">0xFF</literal><operator pos:start="211:40" pos:end="211:40">)</operator><operator pos:start="211:41" pos:end="211:42">==</operator><literal type="number" pos:start="211:43" pos:end="211:43">1</literal> <operator pos:start="211:45" pos:end="211:46">&amp;&amp;</operator> <operator pos:start="211:48" pos:end="211:48">!</operator><operator pos:start="211:49" pos:end="211:49">(</operator><name pos:start="211:50" pos:end="211:61"><name pos:start="211:50" pos:end="211:54">avctx</name><operator pos:start="211:55" pos:end="211:56">-&gt;</operator><name pos:start="211:57" pos:end="211:61">flags</name></name> <operator pos:start="211:63" pos:end="211:63">&amp;</operator> <name pos:start="211:65" pos:end="211:86">AV_CODEC_FLAG_BITEXACT</name><operator pos:start="211:87" pos:end="211:87">)</operator></expr>)</condition><block type="pseudo" pos:start="213:13" pos:end="213:52"><block_content pos:start="213:13" pos:end="213:52">

            <expr_stmt pos:start="213:13" pos:end="213:52"><expr pos:start="213:13" pos:end="213:51"><call pos:start="213:13" pos:end="213:51"><name pos:start="213:13" pos:end="213:30">put_bitstream_info</name><argument_list pos:start="213:31" pos:end="213:51">(<argument pos:start="213:32" pos:end="213:32"><expr pos:start="213:32" pos:end="213:32"><name pos:start="213:32" pos:end="213:32">s</name></expr></argument>, <argument pos:start="213:35" pos:end="213:50"><expr pos:start="213:35" pos:end="213:50"><name pos:start="213:35" pos:end="213:50">LIBAVCODEC_IDENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:21"><expr pos:start="215:9" pos:end="215:20"><name pos:start="215:9" pos:end="215:16">start_ch</name> <operator pos:start="215:18" pos:end="215:18">=</operator> <literal type="number" pos:start="215:20" pos:end="215:20">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:24"><expr pos:start="217:9" pos:end="217:23"><name pos:start="217:9" pos:end="217:19">target_bits</name> <operator pos:start="217:21" pos:end="217:21">=</operator> <literal type="number" pos:start="217:23" pos:end="217:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:60"><expr pos:start="219:9" pos:end="219:59"><call pos:start="219:9" pos:end="219:59"><name pos:start="219:9" pos:end="219:14">memset</name><argument_list pos:start="219:15" pos:end="219:59">(<argument pos:start="219:16" pos:end="219:30"><expr pos:start="219:16" pos:end="219:30"><name pos:start="219:16" pos:end="219:30">chan_el_counter</name></expr></argument>, <argument pos:start="219:33" pos:end="219:33"><expr pos:start="219:33" pos:end="219:33"><literal type="number" pos:start="219:33" pos:end="219:33">0</literal></expr></argument>, <argument pos:start="219:36" pos:end="219:58"><expr pos:start="219:36" pos:end="219:58"><sizeof pos:start="219:36" pos:end="219:58">sizeof<argument_list pos:start="219:42" pos:end="219:58">(<argument pos:start="219:43" pos:end="219:57"><expr pos:start="219:43" pos:end="219:57"><name pos:start="219:43" pos:end="219:57">chan_el_counter</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="221:9" pos:end="437:9">for <control pos:start="221:13" pos:end="221:44">(<init pos:start="221:14" pos:end="221:19"><expr pos:start="221:14" pos:end="221:18"><name pos:start="221:14" pos:end="221:14">i</name> <operator pos:start="221:16" pos:end="221:16">=</operator> <literal type="number" pos:start="221:18" pos:end="221:18">0</literal></expr>;</init> <condition pos:start="221:21" pos:end="221:39"><expr pos:start="221:21" pos:end="221:38"><name pos:start="221:21" pos:end="221:21">i</name> <operator pos:start="221:23" pos:end="221:23">&lt;</operator> <name pos:start="221:25" pos:end="221:38"><name pos:start="221:25" pos:end="221:25">s</name><operator pos:start="221:26" pos:end="221:27">-&gt;</operator><name pos:start="221:28" pos:end="221:35">chan_map</name><index pos:start="221:36" pos:end="221:38">[<expr pos:start="221:37" pos:end="221:37"><literal type="number" pos:start="221:37" pos:end="221:37">0</literal></expr>]</index></name></expr>;</condition> <incr pos:start="221:41" pos:end="221:43"><expr pos:start="221:41" pos:end="221:43"><name pos:start="221:41" pos:end="221:41">i</name><operator pos:start="221:42" pos:end="221:43">++</operator></expr></incr>)</control> <block pos:start="221:46" pos:end="437:9">{<block_content pos:start="223:13" pos:end="435:30">

            <decl_stmt pos:start="223:13" pos:end="223:53"><decl pos:start="223:13" pos:end="223:52"><type pos:start="223:13" pos:end="223:28"><name pos:start="223:13" pos:end="223:27">FFPsyWindowInfo</name><modifier pos:start="223:28" pos:end="223:28">*</modifier></type> <name pos:start="223:30" pos:end="223:31">wi</name> <init pos:start="223:33" pos:end="223:52">= <expr pos:start="223:35" pos:end="223:52"><name pos:start="223:35" pos:end="223:41">windows</name> <operator pos:start="223:43" pos:end="223:43">+</operator> <name pos:start="223:45" pos:end="223:52">start_ch</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="225:13" pos:end="225:35"><decl pos:start="225:13" pos:end="225:34"><type pos:start="225:13" pos:end="225:25"><specifier pos:start="225:13" pos:end="225:17">const</specifier> <name pos:start="225:19" pos:end="225:23">float</name> <modifier pos:start="225:25" pos:end="225:25">*</modifier></type><name pos:start="225:26" pos:end="225:34"><name pos:start="225:26" pos:end="225:31">coeffs</name><index pos:start="225:32" pos:end="225:34">[<expr pos:start="225:33" pos:end="225:33"><literal type="number" pos:start="225:33" pos:end="225:33">2</literal></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:40"><expr pos:start="227:13" pos:end="227:39"><name pos:start="227:13" pos:end="227:15">tag</name>      <operator pos:start="227:22" pos:end="227:22">=</operator> <name pos:start="227:24" pos:end="227:39"><name pos:start="227:24" pos:end="227:24">s</name><operator pos:start="227:25" pos:end="227:26">-&gt;</operator><name pos:start="227:27" pos:end="227:34">chan_map</name><index pos:start="227:35" pos:end="227:39">[<expr pos:start="227:36" pos:end="227:38"><name pos:start="227:36" pos:end="227:36">i</name><operator pos:start="227:37" pos:end="227:37">+</operator><literal type="number" pos:start="227:38" pos:end="227:38">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:47"><expr pos:start="229:13" pos:end="229:46"><name pos:start="229:13" pos:end="229:17">chans</name>    <operator pos:start="229:22" pos:end="229:22">=</operator> <ternary pos:start="229:24" pos:end="229:46"><condition pos:start="229:24" pos:end="229:40"><expr pos:start="229:24" pos:end="229:38"><name pos:start="229:24" pos:end="229:26">tag</name> <operator pos:start="229:28" pos:end="229:29">==</operator> <name pos:start="229:31" pos:end="229:38">TYPE_CPE</name></expr> ?</condition><then pos:start="229:42" pos:end="229:42"> <expr pos:start="229:42" pos:end="229:42"><literal type="number" pos:start="229:42" pos:end="229:42">2</literal></expr> </then><else pos:start="229:44" pos:end="229:46">: <expr pos:start="229:46" pos:end="229:46"><literal type="number" pos:start="229:46" pos:end="229:46">1</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:34"><expr pos:start="231:13" pos:end="231:33"><name pos:start="231:13" pos:end="231:15">cpe</name>      <operator pos:start="231:22" pos:end="231:22">=</operator> <operator pos:start="231:24" pos:end="231:24">&amp;</operator><name pos:start="231:25" pos:end="231:33"><name pos:start="231:25" pos:end="231:25">s</name><operator pos:start="231:26" pos:end="231:27">-&gt;</operator><name pos:start="231:28" pos:end="231:30">cpe</name><index pos:start="231:31" pos:end="231:33">[<expr pos:start="231:32" pos:end="231:32"><name pos:start="231:32" pos:end="231:32">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:35"><expr pos:start="233:13" pos:end="233:34"><name pos:start="233:13" pos:end="233:30"><name pos:start="233:13" pos:end="233:15">cpe</name><operator pos:start="233:16" pos:end="233:17">-&gt;</operator><name pos:start="233:18" pos:end="233:30">common_window</name></name> <operator pos:start="233:32" pos:end="233:32">=</operator> <literal type="number" pos:start="233:34" pos:end="233:34">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:58"><expr pos:start="235:13" pos:end="235:57"><call pos:start="235:13" pos:end="235:57"><name pos:start="235:13" pos:end="235:18">memset</name><argument_list pos:start="235:19" pos:end="235:57">(<argument pos:start="235:20" pos:end="235:31"><expr pos:start="235:20" pos:end="235:31"><name pos:start="235:20" pos:end="235:31"><name pos:start="235:20" pos:end="235:22">cpe</name><operator pos:start="235:23" pos:end="235:24">-&gt;</operator><name pos:start="235:25" pos:end="235:31">is_mask</name></name></expr></argument>, <argument pos:start="235:34" pos:end="235:34"><expr pos:start="235:34" pos:end="235:34"><literal type="number" pos:start="235:34" pos:end="235:34">0</literal></expr></argument>, <argument pos:start="235:37" pos:end="235:56"><expr pos:start="235:37" pos:end="235:56"><sizeof pos:start="235:37" pos:end="235:56">sizeof<argument_list pos:start="235:43" pos:end="235:56">(<argument pos:start="235:44" pos:end="235:55"><expr pos:start="235:44" pos:end="235:55"><name pos:start="235:44" pos:end="235:55"><name pos:start="235:44" pos:end="235:46">cpe</name><operator pos:start="235:47" pos:end="235:48">-&gt;</operator><name pos:start="235:49" pos:end="235:55">is_mask</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:58"><expr pos:start="237:13" pos:end="237:57"><call pos:start="237:13" pos:end="237:57"><name pos:start="237:13" pos:end="237:18">memset</name><argument_list pos:start="237:19" pos:end="237:57">(<argument pos:start="237:20" pos:end="237:31"><expr pos:start="237:20" pos:end="237:31"><name pos:start="237:20" pos:end="237:31"><name pos:start="237:20" pos:end="237:22">cpe</name><operator pos:start="237:23" pos:end="237:24">-&gt;</operator><name pos:start="237:25" pos:end="237:31">ms_mask</name></name></expr></argument>, <argument pos:start="237:34" pos:end="237:34"><expr pos:start="237:34" pos:end="237:34"><literal type="number" pos:start="237:34" pos:end="237:34">0</literal></expr></argument>, <argument pos:start="237:37" pos:end="237:56"><expr pos:start="237:37" pos:end="237:56"><sizeof pos:start="237:37" pos:end="237:56">sizeof<argument_list pos:start="237:43" pos:end="237:56">(<argument pos:start="237:44" pos:end="237:55"><expr pos:start="237:44" pos:end="237:55"><name pos:start="237:44" pos:end="237:55"><name pos:start="237:44" pos:end="237:46">cpe</name><operator pos:start="237:47" pos:end="237:48">-&gt;</operator><name pos:start="237:49" pos:end="237:55">ms_mask</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:37"><expr pos:start="239:13" pos:end="239:36"><call pos:start="239:13" pos:end="239:36"><name pos:start="239:13" pos:end="239:20">put_bits</name><argument_list pos:start="239:21" pos:end="239:36">(<argument pos:start="239:22" pos:end="239:27"><expr pos:start="239:22" pos:end="239:27"><operator pos:start="239:22" pos:end="239:22">&amp;</operator><name pos:start="239:23" pos:end="239:27"><name pos:start="239:23" pos:end="239:23">s</name><operator pos:start="239:24" pos:end="239:25">-&gt;</operator><name pos:start="239:26" pos:end="239:27">pb</name></name></expr></argument>, <argument pos:start="239:30" pos:end="239:30"><expr pos:start="239:30" pos:end="239:30"><literal type="number" pos:start="239:30" pos:end="239:30">3</literal></expr></argument>, <argument pos:start="239:33" pos:end="239:35"><expr pos:start="239:33" pos:end="239:35"><name pos:start="239:33" pos:end="239:35">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:56"><expr pos:start="241:13" pos:end="241:55"><call pos:start="241:13" pos:end="241:55"><name pos:start="241:13" pos:end="241:20">put_bits</name><argument_list pos:start="241:21" pos:end="241:55">(<argument pos:start="241:22" pos:end="241:27"><expr pos:start="241:22" pos:end="241:27"><operator pos:start="241:22" pos:end="241:22">&amp;</operator><name pos:start="241:23" pos:end="241:27"><name pos:start="241:23" pos:end="241:23">s</name><operator pos:start="241:24" pos:end="241:25">-&gt;</operator><name pos:start="241:26" pos:end="241:27">pb</name></name></expr></argument>, <argument pos:start="241:30" pos:end="241:30"><expr pos:start="241:30" pos:end="241:30"><literal type="number" pos:start="241:30" pos:end="241:30">4</literal></expr></argument>, <argument pos:start="241:33" pos:end="241:54"><expr pos:start="241:33" pos:end="241:54"><name pos:start="241:33" pos:end="241:52"><name pos:start="241:33" pos:end="241:47">chan_el_counter</name><index pos:start="241:48" pos:end="241:52">[<expr pos:start="241:49" pos:end="241:51"><name pos:start="241:49" pos:end="241:51">tag</name></expr>]</index></name><operator pos:start="241:53" pos:end="241:54">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="243:13" pos:end="261:13">for <control pos:start="243:17" pos:end="243:42">(<init pos:start="243:18" pos:end="243:24"><expr pos:start="243:18" pos:end="243:23"><name pos:start="243:18" pos:end="243:19">ch</name> <operator pos:start="243:21" pos:end="243:21">=</operator> <literal type="number" pos:start="243:23" pos:end="243:23">0</literal></expr>;</init> <condition pos:start="243:26" pos:end="243:36"><expr pos:start="243:26" pos:end="243:35"><name pos:start="243:26" pos:end="243:27">ch</name> <operator pos:start="243:29" pos:end="243:29">&lt;</operator> <name pos:start="243:31" pos:end="243:35">chans</name></expr>;</condition> <incr pos:start="243:38" pos:end="243:41"><expr pos:start="243:38" pos:end="243:41"><name pos:start="243:38" pos:end="243:39">ch</name><operator pos:start="243:40" pos:end="243:41">++</operator></expr></incr>)</control> <block pos:start="243:44" pos:end="261:13">{<block_content pos:start="245:17" pos:end="259:46">

                <expr_stmt pos:start="245:17" pos:end="245:35"><expr pos:start="245:17" pos:end="245:34"><name pos:start="245:17" pos:end="245:19">sce</name> <operator pos:start="245:21" pos:end="245:21">=</operator> <operator pos:start="245:23" pos:end="245:23">&amp;</operator><name pos:start="245:24" pos:end="245:34"><name pos:start="245:24" pos:end="245:26">cpe</name><operator pos:start="245:27" pos:end="245:28">-&gt;</operator><name pos:start="245:29" pos:end="245:30">ch</name><index pos:start="245:31" pos:end="245:34">[<expr pos:start="245:32" pos:end="245:33"><name pos:start="245:32" pos:end="245:33">ch</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="247:17" pos:end="247:41"><expr pos:start="247:17" pos:end="247:40"><name pos:start="247:17" pos:end="247:26"><name pos:start="247:17" pos:end="247:22">coeffs</name><index pos:start="247:23" pos:end="247:26">[<expr pos:start="247:24" pos:end="247:25"><name pos:start="247:24" pos:end="247:25">ch</name></expr>]</index></name> <operator pos:start="247:28" pos:end="247:28">=</operator> <name pos:start="247:30" pos:end="247:40"><name pos:start="247:30" pos:end="247:32">sce</name><operator pos:start="247:33" pos:end="247:34">-&gt;</operator><name pos:start="247:35" pos:end="247:40">coeffs</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="249:17" pos:end="249:47"><expr pos:start="249:17" pos:end="249:46"><name pos:start="249:17" pos:end="249:42"><name pos:start="249:17" pos:end="249:19">sce</name><operator pos:start="249:20" pos:end="249:21">-&gt;</operator><name pos:start="249:22" pos:end="249:24">ics</name><operator pos:start="249:25" pos:end="249:25">.</operator><name pos:start="249:26" pos:end="249:42">predictor_present</name></name> <operator pos:start="249:44" pos:end="249:44">=</operator> <literal type="number" pos:start="249:46" pos:end="249:46">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="251:17" pos:end="251:87"><expr pos:start="251:17" pos:end="251:86"><call pos:start="251:17" pos:end="251:86"><name pos:start="251:17" pos:end="251:22">memset</name><argument_list pos:start="251:23" pos:end="251:86">(<argument pos:start="251:24" pos:end="251:48"><expr pos:start="251:24" pos:end="251:48"><operator pos:start="251:24" pos:end="251:24">&amp;</operator><name pos:start="251:25" pos:end="251:48"><name pos:start="251:25" pos:end="251:27">sce</name><operator pos:start="251:28" pos:end="251:29">-&gt;</operator><name pos:start="251:30" pos:end="251:32">ics</name><operator pos:start="251:33" pos:end="251:33">.</operator><name pos:start="251:34" pos:end="251:48">prediction_used</name></name></expr></argument>, <argument pos:start="251:51" pos:end="251:51"><expr pos:start="251:51" pos:end="251:51"><literal type="number" pos:start="251:51" pos:end="251:51">0</literal></expr></argument>, <argument pos:start="251:54" pos:end="251:85"><expr pos:start="251:54" pos:end="251:85"><sizeof pos:start="251:54" pos:end="251:85">sizeof<argument_list pos:start="251:60" pos:end="251:85">(<argument pos:start="251:61" pos:end="251:84"><expr pos:start="251:61" pos:end="251:84"><name pos:start="251:61" pos:end="251:84"><name pos:start="251:61" pos:end="251:63">sce</name><operator pos:start="251:64" pos:end="251:65">-&gt;</operator><name pos:start="251:66" pos:end="251:68">ics</name><operator pos:start="251:69" pos:end="251:69">.</operator><name pos:start="251:70" pos:end="251:84">prediction_used</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="253:17" pos:end="253:67"><expr pos:start="253:17" pos:end="253:66"><call pos:start="253:17" pos:end="253:66"><name pos:start="253:17" pos:end="253:22">memset</name><argument_list pos:start="253:23" pos:end="253:66">(<argument pos:start="253:24" pos:end="253:32"><expr pos:start="253:24" pos:end="253:32"><operator pos:start="253:24" pos:end="253:24">&amp;</operator><name pos:start="253:25" pos:end="253:32"><name pos:start="253:25" pos:end="253:27">sce</name><operator pos:start="253:28" pos:end="253:29">-&gt;</operator><name pos:start="253:30" pos:end="253:32">tns</name></name></expr></argument>, <argument pos:start="253:35" pos:end="253:35"><expr pos:start="253:35" pos:end="253:35"><literal type="number" pos:start="253:35" pos:end="253:35">0</literal></expr></argument>, <argument pos:start="253:38" pos:end="253:65"><expr pos:start="253:38" pos:end="253:65"><sizeof pos:start="253:38" pos:end="253:65">sizeof<argument_list pos:start="253:44" pos:end="253:65">(<argument pos:start="253:45" pos:end="253:64"><expr pos:start="253:45" pos:end="253:64"><name pos:start="253:45" pos:end="253:64">TemporalNoiseShaping</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="255:17" pos:end="259:46">for <control pos:start="255:21" pos:end="255:41">(<init pos:start="255:22" pos:end="255:27"><expr pos:start="255:22" pos:end="255:26"><name pos:start="255:22" pos:end="255:22">w</name> <operator pos:start="255:24" pos:end="255:24">=</operator> <literal type="number" pos:start="255:26" pos:end="255:26">0</literal></expr>;</init> <condition pos:start="255:29" pos:end="255:36"><expr pos:start="255:29" pos:end="255:35"><name pos:start="255:29" pos:end="255:29">w</name> <operator pos:start="255:31" pos:end="255:31">&lt;</operator> <literal type="number" pos:start="255:33" pos:end="255:35">128</literal></expr>;</condition> <incr pos:start="255:38" pos:end="255:40"><expr pos:start="255:38" pos:end="255:40"><name pos:start="255:38" pos:end="255:38">w</name><operator pos:start="255:39" pos:end="255:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="257:21" pos:end="259:46"><block_content pos:start="257:21" pos:end="259:46">

                    <if_stmt pos:start="257:21" pos:end="259:46"><if pos:start="257:21" pos:end="259:46">if <condition pos:start="257:24" pos:end="257:56">(<expr pos:start="257:25" pos:end="257:55"><name pos:start="257:25" pos:end="257:41"><name pos:start="257:25" pos:end="257:27">sce</name><operator pos:start="257:28" pos:end="257:29">-&gt;</operator><name pos:start="257:30" pos:end="257:38">band_type</name><index pos:start="257:39" pos:end="257:41">[<expr pos:start="257:40" pos:end="257:40"><name pos:start="257:40" pos:end="257:40">w</name></expr>]</index></name> <operator pos:start="257:43" pos:end="257:43">&gt;</operator> <name pos:start="257:45" pos:end="257:55">RESERVED_BT</name></expr>)</condition><block type="pseudo" pos:start="259:25" pos:end="259:46"><block_content pos:start="259:25" pos:end="259:46">

                        <expr_stmt pos:start="259:25" pos:end="259:46"><expr pos:start="259:25" pos:end="259:45"><name pos:start="259:25" pos:end="259:41"><name pos:start="259:25" pos:end="259:27">sce</name><operator pos:start="259:28" pos:end="259:29">-&gt;</operator><name pos:start="259:30" pos:end="259:38">band_type</name><index pos:start="259:39" pos:end="259:41">[<expr pos:start="259:40" pos:end="259:40"><name pos:start="259:40" pos:end="259:40">w</name></expr>]</index></name> <operator pos:start="259:43" pos:end="259:43">=</operator> <literal type="number" pos:start="259:45" pos:end="259:45">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

            </block_content>}</block></for>

            <expr_stmt pos:start="263:13" pos:end="263:37"><expr pos:start="263:13" pos:end="263:36"><name pos:start="263:13" pos:end="263:31"><name pos:start="263:13" pos:end="263:13">s</name><operator pos:start="263:14" pos:end="263:15">-&gt;</operator><name pos:start="263:16" pos:end="263:18">psy</name><operator pos:start="263:19" pos:end="263:19">.</operator><name pos:start="263:20" pos:end="263:25">bitres</name><operator pos:start="263:26" pos:end="263:26">.</operator><name pos:start="263:27" pos:end="263:31">alloc</name></name> <operator pos:start="263:33" pos:end="263:33">=</operator> <operator pos:start="263:35" pos:end="263:35">-</operator><literal type="number" pos:start="263:36" pos:end="263:36">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:65"><expr pos:start="265:13" pos:end="265:64"><name pos:start="265:13" pos:end="265:30"><name pos:start="265:13" pos:end="265:13">s</name><operator pos:start="265:14" pos:end="265:15">-&gt;</operator><name pos:start="265:16" pos:end="265:18">psy</name><operator pos:start="265:19" pos:end="265:19">.</operator><name pos:start="265:20" pos:end="265:25">bitres</name><operator pos:start="265:26" pos:end="265:26">.</operator><name pos:start="265:27" pos:end="265:30">bits</name></name> <operator pos:start="265:32" pos:end="265:32">=</operator> <name pos:start="265:34" pos:end="265:50"><name pos:start="265:34" pos:end="265:38">avctx</name><operator pos:start="265:39" pos:end="265:40">-&gt;</operator><name pos:start="265:41" pos:end="265:50">frame_bits</name></name> <operator pos:start="265:52" pos:end="265:52">/</operator> <name pos:start="265:54" pos:end="265:64"><name pos:start="265:54" pos:end="265:54">s</name><operator pos:start="265:55" pos:end="265:56">-&gt;</operator><name pos:start="265:57" pos:end="265:64">channels</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:65"><expr pos:start="267:13" pos:end="267:64"><call pos:start="267:13" pos:end="267:64"><name pos:start="267:13" pos:end="267:33"><name pos:start="267:13" pos:end="267:13">s</name><operator pos:start="267:14" pos:end="267:15">-&gt;</operator><name pos:start="267:16" pos:end="267:18">psy</name><operator pos:start="267:19" pos:end="267:19">.</operator><name pos:start="267:20" pos:end="267:24">model</name><operator pos:start="267:25" pos:end="267:26">-&gt;</operator><name pos:start="267:27" pos:end="267:33">analyze</name></name><argument_list pos:start="267:34" pos:end="267:64">(<argument pos:start="267:35" pos:end="267:41"><expr pos:start="267:35" pos:end="267:41"><operator pos:start="267:35" pos:end="267:35">&amp;</operator><name pos:start="267:36" pos:end="267:41"><name pos:start="267:36" pos:end="267:36">s</name><operator pos:start="267:37" pos:end="267:38">-&gt;</operator><name pos:start="267:39" pos:end="267:41">psy</name></name></expr></argument>, <argument pos:start="267:44" pos:end="267:51"><expr pos:start="267:44" pos:end="267:51"><name pos:start="267:44" pos:end="267:51">start_ch</name></expr></argument>, <argument pos:start="267:54" pos:end="267:59"><expr pos:start="267:54" pos:end="267:59"><name pos:start="267:54" pos:end="267:59">coeffs</name></expr></argument>, <argument pos:start="267:62" pos:end="267:63"><expr pos:start="267:62" pos:end="267:63"><name pos:start="267:62" pos:end="267:63">wi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="269:13" pos:end="277:13"><if pos:start="269:13" pos:end="277:13">if <condition pos:start="269:16" pos:end="269:40">(<expr pos:start="269:17" pos:end="269:39"><name pos:start="269:17" pos:end="269:35"><name pos:start="269:17" pos:end="269:17">s</name><operator pos:start="269:18" pos:end="269:19">-&gt;</operator><name pos:start="269:20" pos:end="269:22">psy</name><operator pos:start="269:23" pos:end="269:23">.</operator><name pos:start="269:24" pos:end="269:29">bitres</name><operator pos:start="269:30" pos:end="269:30">.</operator><name pos:start="269:31" pos:end="269:35">alloc</name></name> <operator pos:start="269:37" pos:end="269:37">&gt;</operator> <literal type="number" pos:start="269:39" pos:end="269:39">0</literal></expr>)</condition> <block pos:start="269:42" pos:end="277:13">{<block_content pos:start="273:17" pos:end="275:45">

                <comment type="block" pos:start="271:17" pos:end="271:94">/* Lambda unused here on purpose, we need to take psy's unscaled allocation */</comment>

                <expr_stmt pos:start="273:17" pos:end="273:51"><expr pos:start="273:17" pos:end="273:50"><name pos:start="273:17" pos:end="273:27">target_bits</name> <operator pos:start="273:29" pos:end="273:30">+=</operator> <name pos:start="273:32" pos:end="273:50"><name pos:start="273:32" pos:end="273:32">s</name><operator pos:start="273:33" pos:end="273:34">-&gt;</operator><name pos:start="273:35" pos:end="273:37">psy</name><operator pos:start="273:38" pos:end="273:38">.</operator><name pos:start="273:39" pos:end="273:44">bitres</name><operator pos:start="273:45" pos:end="273:45">.</operator><name pos:start="273:46" pos:end="273:50">alloc</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="275:17" pos:end="275:45"><expr pos:start="275:17" pos:end="275:44"><name pos:start="275:17" pos:end="275:35"><name pos:start="275:17" pos:end="275:17">s</name><operator pos:start="275:18" pos:end="275:19">-&gt;</operator><name pos:start="275:20" pos:end="275:22">psy</name><operator pos:start="275:23" pos:end="275:23">.</operator><name pos:start="275:24" pos:end="275:29">bitres</name><operator pos:start="275:30" pos:end="275:30">.</operator><name pos:start="275:31" pos:end="275:35">alloc</name></name> <operator pos:start="275:37" pos:end="275:38">/=</operator> <name pos:start="275:40" pos:end="275:44">chans</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="279:13" pos:end="279:30"><expr pos:start="279:13" pos:end="279:29"><name pos:start="279:13" pos:end="279:23"><name pos:start="279:13" pos:end="279:13">s</name><operator pos:start="279:14" pos:end="279:15">-&gt;</operator><name pos:start="279:16" pos:end="279:23">cur_type</name></name> <operator pos:start="279:25" pos:end="279:25">=</operator> <name pos:start="279:27" pos:end="279:29">tag</name></expr>;</expr_stmt>

            <for pos:start="281:13" pos:end="287:13">for <control pos:start="281:17" pos:end="281:42">(<init pos:start="281:18" pos:end="281:24"><expr pos:start="281:18" pos:end="281:23"><name pos:start="281:18" pos:end="281:19">ch</name> <operator pos:start="281:21" pos:end="281:21">=</operator> <literal type="number" pos:start="281:23" pos:end="281:23">0</literal></expr>;</init> <condition pos:start="281:26" pos:end="281:36"><expr pos:start="281:26" pos:end="281:35"><name pos:start="281:26" pos:end="281:27">ch</name> <operator pos:start="281:29" pos:end="281:29">&lt;</operator> <name pos:start="281:31" pos:end="281:35">chans</name></expr>;</condition> <incr pos:start="281:38" pos:end="281:41"><expr pos:start="281:38" pos:end="281:41"><name pos:start="281:38" pos:end="281:39">ch</name><operator pos:start="281:40" pos:end="281:41">++</operator></expr></incr>)</control> <block pos:start="281:44" pos:end="287:13">{<block_content pos:start="283:17" pos:end="285:83">

                <expr_stmt pos:start="283:17" pos:end="283:47"><expr pos:start="283:17" pos:end="283:46"><name pos:start="283:17" pos:end="283:30"><name pos:start="283:17" pos:end="283:17">s</name><operator pos:start="283:18" pos:end="283:19">-&gt;</operator><name pos:start="283:20" pos:end="283:30">cur_channel</name></name> <operator pos:start="283:32" pos:end="283:32">=</operator> <name pos:start="283:34" pos:end="283:41">start_ch</name> <operator pos:start="283:43" pos:end="283:43">+</operator> <name pos:start="283:45" pos:end="283:46">ch</name></expr>;</expr_stmt>

                <expr_stmt pos:start="285:17" pos:end="285:83"><expr pos:start="285:17" pos:end="285:82"><call pos:start="285:17" pos:end="285:82"><name pos:start="285:17" pos:end="285:47"><name pos:start="285:17" pos:end="285:17">s</name><operator pos:start="285:18" pos:end="285:19">-&gt;</operator><name pos:start="285:20" pos:end="285:24">coder</name><operator pos:start="285:25" pos:end="285:26">-&gt;</operator><name pos:start="285:27" pos:end="285:47">search_for_quantizers</name></name><argument_list pos:start="285:48" pos:end="285:82">(<argument pos:start="285:49" pos:end="285:53"><expr pos:start="285:49" pos:end="285:53"><name pos:start="285:49" pos:end="285:53">avctx</name></expr></argument>, <argument pos:start="285:56" pos:end="285:56"><expr pos:start="285:56" pos:end="285:56"><name pos:start="285:56" pos:end="285:56">s</name></expr></argument>, <argument pos:start="285:59" pos:end="285:70"><expr pos:start="285:59" pos:end="285:70"><operator pos:start="285:59" pos:end="285:59">&amp;</operator><name pos:start="285:60" pos:end="285:70"><name pos:start="285:60" pos:end="285:62">cpe</name><operator pos:start="285:63" pos:end="285:64">-&gt;</operator><name pos:start="285:65" pos:end="285:66">ch</name><index pos:start="285:67" pos:end="285:70">[<expr pos:start="285:68" pos:end="285:69"><name pos:start="285:68" pos:end="285:69">ch</name></expr>]</index></name></expr></argument>, <argument pos:start="285:73" pos:end="285:81"><expr pos:start="285:73" pos:end="285:81"><name pos:start="285:73" pos:end="285:81"><name pos:start="285:73" pos:end="285:73">s</name><operator pos:start="285:74" pos:end="285:75">-&gt;</operator><name pos:start="285:76" pos:end="285:81">lambda</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="289:13" pos:end="311:13"><if pos:start="289:13" pos:end="311:13">if <condition pos:start="289:16" pos:end="293:62">(<expr pos:start="289:17" pos:end="293:61"><name pos:start="289:17" pos:end="289:21">chans</name> <operator pos:start="289:23" pos:end="289:23">&gt;</operator> <literal type="number" pos:start="289:25" pos:end="289:25">1</literal>

                <operator pos:start="291:17" pos:end="291:18">&amp;&amp;</operator> <name pos:start="291:20" pos:end="291:24"><name pos:start="291:20" pos:end="291:21">wi</name><index pos:start="291:22" pos:end="291:24">[<expr pos:start="291:23" pos:end="291:23"><literal type="number" pos:start="291:23" pos:end="291:23">0</literal></expr>]</index></name><operator pos:start="291:25" pos:end="291:25">.</operator><name pos:start="291:26" pos:end="291:39"><name pos:start="291:26" pos:end="291:36">window_type</name><index pos:start="291:37" pos:end="291:39">[<expr pos:start="291:38" pos:end="291:38"><literal type="number" pos:start="291:38" pos:end="291:38">0</literal></expr>]</index></name> <operator pos:start="291:41" pos:end="291:42">==</operator> <name pos:start="291:44" pos:end="291:48"><name pos:start="291:44" pos:end="291:45">wi</name><index pos:start="291:46" pos:end="291:48">[<expr pos:start="291:47" pos:end="291:47"><literal type="number" pos:start="291:47" pos:end="291:47">1</literal></expr>]</index></name><operator pos:start="291:49" pos:end="291:49">.</operator><name pos:start="291:50" pos:end="291:63"><name pos:start="291:50" pos:end="291:60">window_type</name><index pos:start="291:61" pos:end="291:63">[<expr pos:start="291:62" pos:end="291:62"><literal type="number" pos:start="291:62" pos:end="291:62">0</literal></expr>]</index></name>

                <operator pos:start="293:17" pos:end="293:18">&amp;&amp;</operator> <name pos:start="293:20" pos:end="293:24"><name pos:start="293:20" pos:end="293:21">wi</name><index pos:start="293:22" pos:end="293:24">[<expr pos:start="293:23" pos:end="293:23"><literal type="number" pos:start="293:23" pos:end="293:23">0</literal></expr>]</index></name><operator pos:start="293:25" pos:end="293:25">.</operator><name pos:start="293:26" pos:end="293:37">window_shape</name>   <operator pos:start="293:41" pos:end="293:42">==</operator> <name pos:start="293:44" pos:end="293:48"><name pos:start="293:44" pos:end="293:45">wi</name><index pos:start="293:46" pos:end="293:48">[<expr pos:start="293:47" pos:end="293:47"><literal type="number" pos:start="293:47" pos:end="293:47">1</literal></expr>]</index></name><operator pos:start="293:49" pos:end="293:49">.</operator><name pos:start="293:50" pos:end="293:61">window_shape</name></expr>)</condition> <block pos:start="293:64" pos:end="311:13">{<block_content pos:start="297:17" pos:end="309:17">



                <expr_stmt pos:start="297:17" pos:end="297:39"><expr pos:start="297:17" pos:end="297:38"><name pos:start="297:17" pos:end="297:34"><name pos:start="297:17" pos:end="297:19">cpe</name><operator pos:start="297:20" pos:end="297:21">-&gt;</operator><name pos:start="297:22" pos:end="297:34">common_window</name></name> <operator pos:start="297:36" pos:end="297:36">=</operator> <literal type="number" pos:start="297:38" pos:end="297:38">1</literal></expr>;</expr_stmt>

                <for pos:start="299:17" pos:end="309:17">for <control pos:start="299:21" pos:end="299:55">(<init pos:start="299:22" pos:end="299:27"><expr pos:start="299:22" pos:end="299:26"><name pos:start="299:22" pos:end="299:22">w</name> <operator pos:start="299:24" pos:end="299:24">=</operator> <literal type="number" pos:start="299:26" pos:end="299:26">0</literal></expr>;</init> <condition pos:start="299:29" pos:end="299:50"><expr pos:start="299:29" pos:end="299:49"><name pos:start="299:29" pos:end="299:29">w</name> <operator pos:start="299:31" pos:end="299:31">&lt;</operator> <name pos:start="299:33" pos:end="299:37"><name pos:start="299:33" pos:end="299:34">wi</name><index pos:start="299:35" pos:end="299:37">[<expr pos:start="299:36" pos:end="299:36"><literal type="number" pos:start="299:36" pos:end="299:36">0</literal></expr>]</index></name><operator pos:start="299:38" pos:end="299:38">.</operator><name pos:start="299:39" pos:end="299:49">num_windows</name></expr>;</condition> <incr pos:start="299:52" pos:end="299:54"><expr pos:start="299:52" pos:end="299:54"><name pos:start="299:52" pos:end="299:52">w</name><operator pos:start="299:53" pos:end="299:54">++</operator></expr></incr>)</control> <block pos:start="299:57" pos:end="309:17">{<block_content pos:start="301:21" pos:end="307:21">

                    <if_stmt pos:start="301:21" pos:end="307:21"><if pos:start="301:21" pos:end="307:21">if <condition pos:start="301:24" pos:end="301:63">(<expr pos:start="301:25" pos:end="301:62"><name pos:start="301:25" pos:end="301:29"><name pos:start="301:25" pos:end="301:26">wi</name><index pos:start="301:27" pos:end="301:29">[<expr pos:start="301:28" pos:end="301:28"><literal type="number" pos:start="301:28" pos:end="301:28">0</literal></expr>]</index></name><operator pos:start="301:30" pos:end="301:30">.</operator><name pos:start="301:31" pos:end="301:41"><name pos:start="301:31" pos:end="301:38">grouping</name><index pos:start="301:39" pos:end="301:41">[<expr pos:start="301:40" pos:end="301:40"><name pos:start="301:40" pos:end="301:40">w</name></expr>]</index></name> <operator pos:start="301:43" pos:end="301:44">!=</operator> <name pos:start="301:46" pos:end="301:50"><name pos:start="301:46" pos:end="301:47">wi</name><index pos:start="301:48" pos:end="301:50">[<expr pos:start="301:49" pos:end="301:49"><literal type="number" pos:start="301:49" pos:end="301:49">1</literal></expr>]</index></name><operator pos:start="301:51" pos:end="301:51">.</operator><name pos:start="301:52" pos:end="301:62"><name pos:start="301:52" pos:end="301:59">grouping</name><index pos:start="301:60" pos:end="301:62">[<expr pos:start="301:61" pos:end="301:61"><name pos:start="301:61" pos:end="301:61">w</name></expr>]</index></name></expr>)</condition> <block pos:start="301:65" pos:end="307:21">{<block_content pos:start="303:25" pos:end="305:30">

                        <expr_stmt pos:start="303:25" pos:end="303:47"><expr pos:start="303:25" pos:end="303:46"><name pos:start="303:25" pos:end="303:42"><name pos:start="303:25" pos:end="303:27">cpe</name><operator pos:start="303:28" pos:end="303:29">-&gt;</operator><name pos:start="303:30" pos:end="303:42">common_window</name></name> <operator pos:start="303:44" pos:end="303:44">=</operator> <literal type="number" pos:start="303:46" pos:end="303:46">0</literal></expr>;</expr_stmt>

                        <break pos:start="305:25" pos:end="305:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <for pos:start="313:13" pos:end="335:13">for <control pos:start="313:17" pos:end="313:42">(<init pos:start="313:18" pos:end="313:24"><expr pos:start="313:18" pos:end="313:23"><name pos:start="313:18" pos:end="313:19">ch</name> <operator pos:start="313:21" pos:end="313:21">=</operator> <literal type="number" pos:start="313:23" pos:end="313:23">0</literal></expr>;</init> <condition pos:start="313:26" pos:end="313:36"><expr pos:start="313:26" pos:end="313:35"><name pos:start="313:26" pos:end="313:27">ch</name> <operator pos:start="313:29" pos:end="313:29">&lt;</operator> <name pos:start="313:31" pos:end="313:35">chans</name></expr>;</condition> <incr pos:start="313:38" pos:end="313:41"><expr pos:start="313:38" pos:end="313:41"><name pos:start="313:38" pos:end="313:39">ch</name><operator pos:start="313:40" pos:end="313:41">++</operator></expr></incr>)</control> <block pos:start="313:44" pos:end="335:13">{<block_content pos:start="315:17" pos:end="333:33"> <comment type="block" pos:start="313:46" pos:end="313:62">/* TNS and PNS */</comment>

                <expr_stmt pos:start="315:17" pos:end="315:35"><expr pos:start="315:17" pos:end="315:34"><name pos:start="315:17" pos:end="315:19">sce</name> <operator pos:start="315:21" pos:end="315:21">=</operator> <operator pos:start="315:23" pos:end="315:23">&amp;</operator><name pos:start="315:24" pos:end="315:34"><name pos:start="315:24" pos:end="315:26">cpe</name><operator pos:start="315:27" pos:end="315:28">-&gt;</operator><name pos:start="315:29" pos:end="315:30">ch</name><index pos:start="315:31" pos:end="315:34">[<expr pos:start="315:32" pos:end="315:33"><name pos:start="315:32" pos:end="315:33">ch</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="317:17" pos:end="317:47"><expr pos:start="317:17" pos:end="317:46"><name pos:start="317:17" pos:end="317:30"><name pos:start="317:17" pos:end="317:17">s</name><operator pos:start="317:18" pos:end="317:19">-&gt;</operator><name pos:start="317:20" pos:end="317:30">cur_channel</name></name> <operator pos:start="317:32" pos:end="317:32">=</operator> <name pos:start="317:34" pos:end="317:41">start_ch</name> <operator pos:start="317:43" pos:end="317:43">+</operator> <name pos:start="317:45" pos:end="317:46">ch</name></expr>;</expr_stmt>

                <if_stmt pos:start="319:17" pos:end="321:60"><if pos:start="319:17" pos:end="321:60">if <condition pos:start="319:20" pos:end="319:63">(<expr pos:start="319:21" pos:end="319:62"><name pos:start="319:21" pos:end="319:34"><name pos:start="319:21" pos:end="319:21">s</name><operator pos:start="319:22" pos:end="319:23">-&gt;</operator><name pos:start="319:24" pos:end="319:30">options</name><operator pos:start="319:31" pos:end="319:31">.</operator><name pos:start="319:32" pos:end="319:34">pns</name></name> <operator pos:start="319:36" pos:end="319:37">&amp;&amp;</operator> <name pos:start="319:39" pos:end="319:62"><name pos:start="319:39" pos:end="319:39">s</name><operator pos:start="319:40" pos:end="319:41">-&gt;</operator><name pos:start="319:42" pos:end="319:46">coder</name><operator pos:start="319:47" pos:end="319:48">-&gt;</operator><name pos:start="319:49" pos:end="319:62">search_for_pns</name></name></expr>)</condition><block type="pseudo" pos:start="321:21" pos:end="321:60"><block_content pos:start="321:21" pos:end="321:60">

                    <expr_stmt pos:start="321:21" pos:end="321:60"><expr pos:start="321:21" pos:end="321:59"><call pos:start="321:21" pos:end="321:59"><name pos:start="321:21" pos:end="321:44"><name pos:start="321:21" pos:end="321:21">s</name><operator pos:start="321:22" pos:end="321:23">-&gt;</operator><name pos:start="321:24" pos:end="321:28">coder</name><operator pos:start="321:29" pos:end="321:30">-&gt;</operator><name pos:start="321:31" pos:end="321:44">search_for_pns</name></name><argument_list pos:start="321:45" pos:end="321:59">(<argument pos:start="321:46" pos:end="321:46"><expr pos:start="321:46" pos:end="321:46"><name pos:start="321:46" pos:end="321:46">s</name></expr></argument>, <argument pos:start="321:49" pos:end="321:53"><expr pos:start="321:49" pos:end="321:53"><name pos:start="321:49" pos:end="321:53">avctx</name></expr></argument>, <argument pos:start="321:56" pos:end="321:58"><expr pos:start="321:56" pos:end="321:58"><name pos:start="321:56" pos:end="321:58">sce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="323:17" pos:end="325:53"><if pos:start="323:17" pos:end="325:53">if <condition pos:start="323:20" pos:end="323:63">(<expr pos:start="323:21" pos:end="323:62"><name pos:start="323:21" pos:end="323:34"><name pos:start="323:21" pos:end="323:21">s</name><operator pos:start="323:22" pos:end="323:23">-&gt;</operator><name pos:start="323:24" pos:end="323:30">options</name><operator pos:start="323:31" pos:end="323:31">.</operator><name pos:start="323:32" pos:end="323:34">tns</name></name> <operator pos:start="323:36" pos:end="323:37">&amp;&amp;</operator> <name pos:start="323:39" pos:end="323:62"><name pos:start="323:39" pos:end="323:39">s</name><operator pos:start="323:40" pos:end="323:41">-&gt;</operator><name pos:start="323:42" pos:end="323:46">coder</name><operator pos:start="323:47" pos:end="323:48">-&gt;</operator><name pos:start="323:49" pos:end="323:62">search_for_tns</name></name></expr>)</condition><block type="pseudo" pos:start="325:21" pos:end="325:53"><block_content pos:start="325:21" pos:end="325:53">

                    <expr_stmt pos:start="325:21" pos:end="325:53"><expr pos:start="325:21" pos:end="325:52"><call pos:start="325:21" pos:end="325:52"><name pos:start="325:21" pos:end="325:44"><name pos:start="325:21" pos:end="325:21">s</name><operator pos:start="325:22" pos:end="325:23">-&gt;</operator><name pos:start="325:24" pos:end="325:28">coder</name><operator pos:start="325:29" pos:end="325:30">-&gt;</operator><name pos:start="325:31" pos:end="325:44">search_for_tns</name></name><argument_list pos:start="325:45" pos:end="325:52">(<argument pos:start="325:46" pos:end="325:46"><expr pos:start="325:46" pos:end="325:46"><name pos:start="325:46" pos:end="325:46">s</name></expr></argument>, <argument pos:start="325:49" pos:end="325:51"><expr pos:start="325:49" pos:end="325:51"><name pos:start="325:49" pos:end="325:51">sce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="327:17" pos:end="329:53"><if pos:start="327:17" pos:end="329:53">if <condition pos:start="327:20" pos:end="327:63">(<expr pos:start="327:21" pos:end="327:62"><name pos:start="327:21" pos:end="327:34"><name pos:start="327:21" pos:end="327:21">s</name><operator pos:start="327:22" pos:end="327:23">-&gt;</operator><name pos:start="327:24" pos:end="327:30">options</name><operator pos:start="327:31" pos:end="327:31">.</operator><name pos:start="327:32" pos:end="327:34">tns</name></name> <operator pos:start="327:36" pos:end="327:37">&amp;&amp;</operator> <name pos:start="327:39" pos:end="327:62"><name pos:start="327:39" pos:end="327:39">s</name><operator pos:start="327:40" pos:end="327:41">-&gt;</operator><name pos:start="327:42" pos:end="327:46">coder</name><operator pos:start="327:47" pos:end="327:48">-&gt;</operator><name pos:start="327:49" pos:end="327:62">apply_tns_filt</name></name></expr>)</condition><block type="pseudo" pos:start="329:21" pos:end="329:53"><block_content pos:start="329:21" pos:end="329:53">

                    <expr_stmt pos:start="329:21" pos:end="329:53"><expr pos:start="329:21" pos:end="329:52"><call pos:start="329:21" pos:end="329:52"><name pos:start="329:21" pos:end="329:44"><name pos:start="329:21" pos:end="329:21">s</name><operator pos:start="329:22" pos:end="329:23">-&gt;</operator><name pos:start="329:24" pos:end="329:28">coder</name><operator pos:start="329:29" pos:end="329:30">-&gt;</operator><name pos:start="329:31" pos:end="329:44">apply_tns_filt</name></name><argument_list pos:start="329:45" pos:end="329:52">(<argument pos:start="329:46" pos:end="329:46"><expr pos:start="329:46" pos:end="329:46"><name pos:start="329:46" pos:end="329:46">s</name></expr></argument>, <argument pos:start="329:49" pos:end="329:51"><expr pos:start="329:49" pos:end="329:51"><name pos:start="329:49" pos:end="329:51">sce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="331:17" pos:end="333:33"><if pos:start="331:17" pos:end="333:33">if <condition pos:start="331:20" pos:end="331:37">(<expr pos:start="331:21" pos:end="331:36"><name pos:start="331:21" pos:end="331:36"><name pos:start="331:21" pos:end="331:23">sce</name><operator pos:start="331:24" pos:end="331:25">-&gt;</operator><name pos:start="331:26" pos:end="331:28">tns</name><operator pos:start="331:29" pos:end="331:29">.</operator><name pos:start="331:30" pos:end="331:36">present</name></name></expr>)</condition><block type="pseudo" pos:start="333:21" pos:end="333:33"><block_content pos:start="333:21" pos:end="333:33">

                    <expr_stmt pos:start="333:21" pos:end="333:33"><expr pos:start="333:21" pos:end="333:32"><name pos:start="333:21" pos:end="333:28">tns_mode</name> <operator pos:start="333:30" pos:end="333:30">=</operator> <literal type="number" pos:start="333:32" pos:end="333:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="337:13" pos:end="337:38"><expr pos:start="337:13" pos:end="337:37"><name pos:start="337:13" pos:end="337:26"><name pos:start="337:13" pos:end="337:13">s</name><operator pos:start="337:14" pos:end="337:15">-&gt;</operator><name pos:start="337:16" pos:end="337:26">cur_channel</name></name> <operator pos:start="337:28" pos:end="337:28">=</operator> <name pos:start="337:30" pos:end="337:37">start_ch</name></expr>;</expr_stmt>

            <if_stmt pos:start="339:13" pos:end="349:13"><if pos:start="339:13" pos:end="349:13">if <condition pos:start="339:16" pos:end="339:44">(<expr pos:start="339:17" pos:end="339:43"><name pos:start="339:17" pos:end="339:43"><name pos:start="339:17" pos:end="339:17">s</name><operator pos:start="339:18" pos:end="339:19">-&gt;</operator><name pos:start="339:20" pos:end="339:26">options</name><operator pos:start="339:27" pos:end="339:27">.</operator><name pos:start="339:28" pos:end="339:43">intensity_stereo</name></name></expr>)</condition> <block pos:start="339:46" pos:end="349:13">{<block_content pos:start="341:17" pos:end="347:44"> <comment type="block" pos:start="339:48" pos:end="339:69">/* Intensity Stereo */</comment>

                <if_stmt pos:start="341:17" pos:end="343:59"><if pos:start="341:17" pos:end="343:59">if <condition pos:start="341:20" pos:end="341:44">(<expr pos:start="341:21" pos:end="341:43"><name pos:start="341:21" pos:end="341:43"><name pos:start="341:21" pos:end="341:21">s</name><operator pos:start="341:22" pos:end="341:23">-&gt;</operator><name pos:start="341:24" pos:end="341:28">coder</name><operator pos:start="341:29" pos:end="341:30">-&gt;</operator><name pos:start="341:31" pos:end="341:43">search_for_is</name></name></expr>)</condition><block type="pseudo" pos:start="343:21" pos:end="343:59"><block_content pos:start="343:21" pos:end="343:59">

                    <expr_stmt pos:start="343:21" pos:end="343:59"><expr pos:start="343:21" pos:end="343:58"><call pos:start="343:21" pos:end="343:58"><name pos:start="343:21" pos:end="343:43"><name pos:start="343:21" pos:end="343:21">s</name><operator pos:start="343:22" pos:end="343:23">-&gt;</operator><name pos:start="343:24" pos:end="343:28">coder</name><operator pos:start="343:29" pos:end="343:30">-&gt;</operator><name pos:start="343:31" pos:end="343:43">search_for_is</name></name><argument_list pos:start="343:44" pos:end="343:58">(<argument pos:start="343:45" pos:end="343:45"><expr pos:start="343:45" pos:end="343:45"><name pos:start="343:45" pos:end="343:45">s</name></expr></argument>, <argument pos:start="343:48" pos:end="343:52"><expr pos:start="343:48" pos:end="343:52"><name pos:start="343:48" pos:end="343:52">avctx</name></expr></argument>, <argument pos:start="343:55" pos:end="343:57"><expr pos:start="343:55" pos:end="343:57"><name pos:start="343:55" pos:end="343:57">cpe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="345:17" pos:end="345:46"><if pos:start="345:17" pos:end="345:46">if <condition pos:start="345:20" pos:end="345:33">(<expr pos:start="345:21" pos:end="345:32"><name pos:start="345:21" pos:end="345:32"><name pos:start="345:21" pos:end="345:23">cpe</name><operator pos:start="345:24" pos:end="345:25">-&gt;</operator><name pos:start="345:26" pos:end="345:32">is_mode</name></name></expr>)</condition><block type="pseudo" pos:start="345:35" pos:end="345:46"><block_content pos:start="345:35" pos:end="345:46"> <expr_stmt pos:start="345:35" pos:end="345:46"><expr pos:start="345:35" pos:end="345:45"><name pos:start="345:35" pos:end="345:41">is_mode</name> <operator pos:start="345:43" pos:end="345:43">=</operator> <literal type="number" pos:start="345:45" pos:end="345:45">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="347:17" pos:end="347:44"><expr pos:start="347:17" pos:end="347:43"><call pos:start="347:17" pos:end="347:43"><name pos:start="347:17" pos:end="347:38">apply_intensity_stereo</name><argument_list pos:start="347:39" pos:end="347:43">(<argument pos:start="347:40" pos:end="347:42"><expr pos:start="347:40" pos:end="347:42"><name pos:start="347:40" pos:end="347:42">cpe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="351:13" pos:end="385:13"><if pos:start="351:13" pos:end="385:13">if <condition pos:start="351:16" pos:end="351:32">(<expr pos:start="351:17" pos:end="351:31"><name pos:start="351:17" pos:end="351:31"><name pos:start="351:17" pos:end="351:17">s</name><operator pos:start="351:18" pos:end="351:19">-&gt;</operator><name pos:start="351:20" pos:end="351:26">options</name><operator pos:start="351:27" pos:end="351:27">.</operator><name pos:start="351:28" pos:end="351:31">pred</name></name></expr>)</condition> <block pos:start="351:34" pos:end="385:13">{<block_content pos:start="353:17" pos:end="383:42"> <comment type="block" pos:start="351:36" pos:end="351:51">/* Prediction */</comment>

                <for pos:start="353:17" pos:end="365:17">for <control pos:start="353:21" pos:end="353:46">(<init pos:start="353:22" pos:end="353:28"><expr pos:start="353:22" pos:end="353:27"><name pos:start="353:22" pos:end="353:23">ch</name> <operator pos:start="353:25" pos:end="353:25">=</operator> <literal type="number" pos:start="353:27" pos:end="353:27">0</literal></expr>;</init> <condition pos:start="353:30" pos:end="353:40"><expr pos:start="353:30" pos:end="353:39"><name pos:start="353:30" pos:end="353:31">ch</name> <operator pos:start="353:33" pos:end="353:33">&lt;</operator> <name pos:start="353:35" pos:end="353:39">chans</name></expr>;</condition> <incr pos:start="353:42" pos:end="353:45"><expr pos:start="353:42" pos:end="353:45"><name pos:start="353:42" pos:end="353:43">ch</name><operator pos:start="353:44" pos:end="353:45">++</operator></expr></incr>)</control> <block pos:start="353:48" pos:end="365:17">{<block_content pos:start="355:21" pos:end="363:73">

                    <expr_stmt pos:start="355:21" pos:end="355:39"><expr pos:start="355:21" pos:end="355:38"><name pos:start="355:21" pos:end="355:23">sce</name> <operator pos:start="355:25" pos:end="355:25">=</operator> <operator pos:start="355:27" pos:end="355:27">&amp;</operator><name pos:start="355:28" pos:end="355:38"><name pos:start="355:28" pos:end="355:30">cpe</name><operator pos:start="355:31" pos:end="355:32">-&gt;</operator><name pos:start="355:33" pos:end="355:34">ch</name><index pos:start="355:35" pos:end="355:38">[<expr pos:start="355:36" pos:end="355:37"><name pos:start="355:36" pos:end="355:37">ch</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="357:21" pos:end="357:51"><expr pos:start="357:21" pos:end="357:50"><name pos:start="357:21" pos:end="357:34"><name pos:start="357:21" pos:end="357:21">s</name><operator pos:start="357:22" pos:end="357:23">-&gt;</operator><name pos:start="357:24" pos:end="357:34">cur_channel</name></name> <operator pos:start="357:36" pos:end="357:36">=</operator> <name pos:start="357:38" pos:end="357:45">start_ch</name> <operator pos:start="357:47" pos:end="357:47">+</operator> <name pos:start="357:49" pos:end="357:50">ch</name></expr>;</expr_stmt>

                    <if_stmt pos:start="359:21" pos:end="361:58"><if pos:start="359:21" pos:end="361:58">if <condition pos:start="359:24" pos:end="359:69">(<expr pos:start="359:25" pos:end="359:68"><name pos:start="359:25" pos:end="359:39"><name pos:start="359:25" pos:end="359:25">s</name><operator pos:start="359:26" pos:end="359:27">-&gt;</operator><name pos:start="359:28" pos:end="359:34">options</name><operator pos:start="359:35" pos:end="359:35">.</operator><name pos:start="359:36" pos:end="359:39">pred</name></name> <operator pos:start="359:41" pos:end="359:42">&amp;&amp;</operator> <name pos:start="359:44" pos:end="359:68"><name pos:start="359:44" pos:end="359:44">s</name><operator pos:start="359:45" pos:end="359:46">-&gt;</operator><name pos:start="359:47" pos:end="359:51">coder</name><operator pos:start="359:52" pos:end="359:53">-&gt;</operator><name pos:start="359:54" pos:end="359:68">search_for_pred</name></name></expr>)</condition><block type="pseudo" pos:start="361:25" pos:end="361:58"><block_content pos:start="361:25" pos:end="361:58">

                        <expr_stmt pos:start="361:25" pos:end="361:58"><expr pos:start="361:25" pos:end="361:57"><call pos:start="361:25" pos:end="361:57"><name pos:start="361:25" pos:end="361:49"><name pos:start="361:25" pos:end="361:25">s</name><operator pos:start="361:26" pos:end="361:27">-&gt;</operator><name pos:start="361:28" pos:end="361:32">coder</name><operator pos:start="361:33" pos:end="361:34">-&gt;</operator><name pos:start="361:35" pos:end="361:49">search_for_pred</name></name><argument_list pos:start="361:50" pos:end="361:57">(<argument pos:start="361:51" pos:end="361:51"><expr pos:start="361:51" pos:end="361:51"><name pos:start="361:51" pos:end="361:51">s</name></expr></argument>, <argument pos:start="361:54" pos:end="361:56"><expr pos:start="361:54" pos:end="361:56"><name pos:start="361:54" pos:end="361:56">sce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="363:21" pos:end="363:73"><if pos:start="363:21" pos:end="363:73">if <condition pos:start="363:24" pos:end="363:58">(<expr pos:start="363:25" pos:end="363:57"><name pos:start="363:25" pos:end="363:35"><name pos:start="363:25" pos:end="363:27">cpe</name><operator pos:start="363:28" pos:end="363:29">-&gt;</operator><name pos:start="363:30" pos:end="363:31">ch</name><index pos:start="363:32" pos:end="363:35">[<expr pos:start="363:33" pos:end="363:34"><name pos:start="363:33" pos:end="363:34">ch</name></expr>]</index></name><operator pos:start="363:36" pos:end="363:36">.</operator><name pos:start="363:37" pos:end="363:57"><name pos:start="363:37" pos:end="363:39">ics</name><operator pos:start="363:40" pos:end="363:40">.</operator><name pos:start="363:41" pos:end="363:57">predictor_present</name></name></expr>)</condition><block type="pseudo" pos:start="363:60" pos:end="363:73"><block_content pos:start="363:60" pos:end="363:73"> <expr_stmt pos:start="363:60" pos:end="363:73"><expr pos:start="363:60" pos:end="363:72"><name pos:start="363:60" pos:end="363:68">pred_mode</name> <operator pos:start="363:70" pos:end="363:70">=</operator> <literal type="number" pos:start="363:72" pos:end="363:72">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="367:17" pos:end="369:63"><if pos:start="367:17" pos:end="369:63">if <condition pos:start="367:20" pos:end="367:55">(<expr pos:start="367:21" pos:end="367:54"><name pos:start="367:21" pos:end="367:54"><name pos:start="367:21" pos:end="367:21">s</name><operator pos:start="367:22" pos:end="367:23">-&gt;</operator><name pos:start="367:24" pos:end="367:28">coder</name><operator pos:start="367:29" pos:end="367:30">-&gt;</operator><name pos:start="367:31" pos:end="367:54">adjust_common_prediction</name></name></expr>)</condition><block type="pseudo" pos:start="369:21" pos:end="369:63"><block_content pos:start="369:21" pos:end="369:63">

                    <expr_stmt pos:start="369:21" pos:end="369:63"><expr pos:start="369:21" pos:end="369:62"><call pos:start="369:21" pos:end="369:62"><name pos:start="369:21" pos:end="369:54"><name pos:start="369:21" pos:end="369:21">s</name><operator pos:start="369:22" pos:end="369:23">-&gt;</operator><name pos:start="369:24" pos:end="369:28">coder</name><operator pos:start="369:29" pos:end="369:30">-&gt;</operator><name pos:start="369:31" pos:end="369:54">adjust_common_prediction</name></name><argument_list pos:start="369:55" pos:end="369:62">(<argument pos:start="369:56" pos:end="369:56"><expr pos:start="369:56" pos:end="369:56"><name pos:start="369:56" pos:end="369:56">s</name></expr></argument>, <argument pos:start="369:59" pos:end="369:61"><expr pos:start="369:59" pos:end="369:61"><name pos:start="369:59" pos:end="369:61">cpe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <for pos:start="371:17" pos:end="381:17">for <control pos:start="371:21" pos:end="371:46">(<init pos:start="371:22" pos:end="371:28"><expr pos:start="371:22" pos:end="371:27"><name pos:start="371:22" pos:end="371:23">ch</name> <operator pos:start="371:25" pos:end="371:25">=</operator> <literal type="number" pos:start="371:27" pos:end="371:27">0</literal></expr>;</init> <condition pos:start="371:30" pos:end="371:40"><expr pos:start="371:30" pos:end="371:39"><name pos:start="371:30" pos:end="371:31">ch</name> <operator pos:start="371:33" pos:end="371:33">&lt;</operator> <name pos:start="371:35" pos:end="371:39">chans</name></expr>;</condition> <incr pos:start="371:42" pos:end="371:45"><expr pos:start="371:42" pos:end="371:45"><name pos:start="371:42" pos:end="371:43">ch</name><operator pos:start="371:44" pos:end="371:45">++</operator></expr></incr>)</control> <block pos:start="371:48" pos:end="381:17">{<block_content pos:start="373:21" pos:end="379:58">

                    <expr_stmt pos:start="373:21" pos:end="373:39"><expr pos:start="373:21" pos:end="373:38"><name pos:start="373:21" pos:end="373:23">sce</name> <operator pos:start="373:25" pos:end="373:25">=</operator> <operator pos:start="373:27" pos:end="373:27">&amp;</operator><name pos:start="373:28" pos:end="373:38"><name pos:start="373:28" pos:end="373:30">cpe</name><operator pos:start="373:31" pos:end="373:32">-&gt;</operator><name pos:start="373:33" pos:end="373:34">ch</name><index pos:start="373:35" pos:end="373:38">[<expr pos:start="373:36" pos:end="373:37"><name pos:start="373:36" pos:end="373:37">ch</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="375:21" pos:end="375:51"><expr pos:start="375:21" pos:end="375:50"><name pos:start="375:21" pos:end="375:34"><name pos:start="375:21" pos:end="375:21">s</name><operator pos:start="375:22" pos:end="375:23">-&gt;</operator><name pos:start="375:24" pos:end="375:34">cur_channel</name></name> <operator pos:start="375:36" pos:end="375:36">=</operator> <name pos:start="375:38" pos:end="375:45">start_ch</name> <operator pos:start="375:47" pos:end="375:47">+</operator> <name pos:start="375:49" pos:end="375:50">ch</name></expr>;</expr_stmt>

                    <if_stmt pos:start="377:21" pos:end="379:58"><if pos:start="377:21" pos:end="379:58">if <condition pos:start="377:24" pos:end="377:69">(<expr pos:start="377:25" pos:end="377:68"><name pos:start="377:25" pos:end="377:39"><name pos:start="377:25" pos:end="377:25">s</name><operator pos:start="377:26" pos:end="377:27">-&gt;</operator><name pos:start="377:28" pos:end="377:34">options</name><operator pos:start="377:35" pos:end="377:35">.</operator><name pos:start="377:36" pos:end="377:39">pred</name></name> <operator pos:start="377:41" pos:end="377:42">&amp;&amp;</operator> <name pos:start="377:44" pos:end="377:68"><name pos:start="377:44" pos:end="377:44">s</name><operator pos:start="377:45" pos:end="377:46">-&gt;</operator><name pos:start="377:47" pos:end="377:51">coder</name><operator pos:start="377:52" pos:end="377:53">-&gt;</operator><name pos:start="377:54" pos:end="377:68">apply_main_pred</name></name></expr>)</condition><block type="pseudo" pos:start="379:25" pos:end="379:58"><block_content pos:start="379:25" pos:end="379:58">

                        <expr_stmt pos:start="379:25" pos:end="379:58"><expr pos:start="379:25" pos:end="379:57"><call pos:start="379:25" pos:end="379:57"><name pos:start="379:25" pos:end="379:49"><name pos:start="379:25" pos:end="379:25">s</name><operator pos:start="379:26" pos:end="379:27">-&gt;</operator><name pos:start="379:28" pos:end="379:32">coder</name><operator pos:start="379:33" pos:end="379:34">-&gt;</operator><name pos:start="379:35" pos:end="379:49">apply_main_pred</name></name><argument_list pos:start="379:50" pos:end="379:57">(<argument pos:start="379:51" pos:end="379:51"><expr pos:start="379:51" pos:end="379:51"><name pos:start="379:51" pos:end="379:51">s</name></expr></argument>, <argument pos:start="379:54" pos:end="379:56"><expr pos:start="379:54" pos:end="379:56"><name pos:start="379:54" pos:end="379:56">sce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="383:17" pos:end="383:42"><expr pos:start="383:17" pos:end="383:41"><name pos:start="383:17" pos:end="383:30"><name pos:start="383:17" pos:end="383:17">s</name><operator pos:start="383:18" pos:end="383:19">-&gt;</operator><name pos:start="383:20" pos:end="383:30">cur_channel</name></name> <operator pos:start="383:32" pos:end="383:32">=</operator> <name pos:start="383:34" pos:end="383:41">start_ch</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="387:13" pos:end="403:13"><if pos:start="387:13" pos:end="403:13">if <condition pos:start="387:16" pos:end="387:39">(<expr pos:start="387:17" pos:end="387:38"><name pos:start="387:17" pos:end="387:38"><name pos:start="387:17" pos:end="387:17">s</name><operator pos:start="387:18" pos:end="387:19">-&gt;</operator><name pos:start="387:20" pos:end="387:26">options</name><operator pos:start="387:27" pos:end="387:27">.</operator><name pos:start="387:28" pos:end="387:38">stereo_mode</name></name></expr>)</condition> <block pos:start="387:41" pos:end="403:13">{<block_content pos:start="389:17" pos:end="401:43"> <comment type="block" pos:start="387:43" pos:end="387:63">/* Mid/Side stereo */</comment>

                <if_stmt pos:start="389:17" pos:end="395:66"><if pos:start="389:17" pos:end="391:52">if <condition pos:start="389:20" pos:end="389:76">(<expr pos:start="389:21" pos:end="389:75"><name pos:start="389:21" pos:end="389:42"><name pos:start="389:21" pos:end="389:21">s</name><operator pos:start="389:22" pos:end="389:23">-&gt;</operator><name pos:start="389:24" pos:end="389:30">options</name><operator pos:start="389:31" pos:end="389:31">.</operator><name pos:start="389:32" pos:end="389:42">stereo_mode</name></name> <operator pos:start="389:44" pos:end="389:45">==</operator> <operator pos:start="389:47" pos:end="389:47">-</operator><literal type="number" pos:start="389:48" pos:end="389:48">1</literal> <operator pos:start="389:50" pos:end="389:51">&amp;&amp;</operator> <name pos:start="389:53" pos:end="389:75"><name pos:start="389:53" pos:end="389:53">s</name><operator pos:start="389:54" pos:end="389:55">-&gt;</operator><name pos:start="389:56" pos:end="389:60">coder</name><operator pos:start="389:61" pos:end="389:62">-&gt;</operator><name pos:start="389:63" pos:end="389:75">search_for_ms</name></name></expr>)</condition><block type="pseudo" pos:start="391:21" pos:end="391:52"><block_content pos:start="391:21" pos:end="391:52">

                    <expr_stmt pos:start="391:21" pos:end="391:52"><expr pos:start="391:21" pos:end="391:51"><call pos:start="391:21" pos:end="391:51"><name pos:start="391:21" pos:end="391:43"><name pos:start="391:21" pos:end="391:21">s</name><operator pos:start="391:22" pos:end="391:23">-&gt;</operator><name pos:start="391:24" pos:end="391:28">coder</name><operator pos:start="391:29" pos:end="391:30">-&gt;</operator><name pos:start="391:31" pos:end="391:43">search_for_ms</name></name><argument_list pos:start="391:44" pos:end="391:51">(<argument pos:start="391:45" pos:end="391:45"><expr pos:start="391:45" pos:end="391:45"><name pos:start="391:45" pos:end="391:45">s</name></expr></argument>, <argument pos:start="391:48" pos:end="391:50"><expr pos:start="391:48" pos:end="391:50"><name pos:start="391:48" pos:end="391:50">cpe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="393:17" pos:end="395:66">else if <condition pos:start="393:25" pos:end="393:44">(<expr pos:start="393:26" pos:end="393:43"><name pos:start="393:26" pos:end="393:43"><name pos:start="393:26" pos:end="393:28">cpe</name><operator pos:start="393:29" pos:end="393:30">-&gt;</operator><name pos:start="393:31" pos:end="393:43">common_window</name></name></expr>)</condition><block type="pseudo" pos:start="395:21" pos:end="395:66"><block_content pos:start="395:21" pos:end="395:66">

                    <expr_stmt pos:start="395:21" pos:end="395:66"><expr pos:start="395:21" pos:end="395:65"><call pos:start="395:21" pos:end="395:65"><name pos:start="395:21" pos:end="395:26">memset</name><argument_list pos:start="395:27" pos:end="395:65">(<argument pos:start="395:28" pos:end="395:39"><expr pos:start="395:28" pos:end="395:39"><name pos:start="395:28" pos:end="395:39"><name pos:start="395:28" pos:end="395:30">cpe</name><operator pos:start="395:31" pos:end="395:32">-&gt;</operator><name pos:start="395:33" pos:end="395:39">ms_mask</name></name></expr></argument>, <argument pos:start="395:42" pos:end="395:42"><expr pos:start="395:42" pos:end="395:42"><literal type="number" pos:start="395:42" pos:end="395:42">1</literal></expr></argument>, <argument pos:start="395:45" pos:end="395:64"><expr pos:start="395:45" pos:end="395:64"><sizeof pos:start="395:45" pos:end="395:64">sizeof<argument_list pos:start="395:51" pos:end="395:64">(<argument pos:start="395:52" pos:end="395:63"><expr pos:start="395:52" pos:end="395:63"><name pos:start="395:52" pos:end="395:63"><name pos:start="395:52" pos:end="395:54">cpe</name><operator pos:start="395:55" pos:end="395:56">-&gt;</operator><name pos:start="395:57" pos:end="395:63">ms_mask</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <for pos:start="397:17" pos:end="399:76">for <control pos:start="397:21" pos:end="397:41">(<init pos:start="397:22" pos:end="397:27"><expr pos:start="397:22" pos:end="397:26"><name pos:start="397:22" pos:end="397:22">w</name> <operator pos:start="397:24" pos:end="397:24">=</operator> <literal type="number" pos:start="397:26" pos:end="397:26">0</literal></expr>;</init> <condition pos:start="397:29" pos:end="397:36"><expr pos:start="397:29" pos:end="397:35"><name pos:start="397:29" pos:end="397:29">w</name> <operator pos:start="397:31" pos:end="397:31">&lt;</operator> <literal type="number" pos:start="397:33" pos:end="397:35">128</literal></expr>;</condition> <incr pos:start="397:38" pos:end="397:40"><expr pos:start="397:38" pos:end="397:40"><name pos:start="397:38" pos:end="397:38">w</name><operator pos:start="397:39" pos:end="397:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="399:21" pos:end="399:76"><block_content pos:start="399:21" pos:end="399:76">

                    <expr_stmt pos:start="399:21" pos:end="399:76"><expr pos:start="399:21" pos:end="399:75"><name pos:start="399:21" pos:end="399:35"><name pos:start="399:21" pos:end="399:23">cpe</name><operator pos:start="399:24" pos:end="399:25">-&gt;</operator><name pos:start="399:26" pos:end="399:32">ms_mask</name><index pos:start="399:33" pos:end="399:35">[<expr pos:start="399:34" pos:end="399:34"><name pos:start="399:34" pos:end="399:34">w</name></expr>]</index></name> <operator pos:start="399:37" pos:end="399:37">=</operator> <ternary pos:start="399:39" pos:end="399:75"><condition pos:start="399:39" pos:end="399:55"><expr pos:start="399:39" pos:end="399:53"><name pos:start="399:39" pos:end="399:53"><name pos:start="399:39" pos:end="399:41">cpe</name><operator pos:start="399:42" pos:end="399:43">-&gt;</operator><name pos:start="399:44" pos:end="399:50">is_mask</name><index pos:start="399:51" pos:end="399:53">[<expr pos:start="399:52" pos:end="399:52"><name pos:start="399:52" pos:end="399:52">w</name></expr>]</index></name></expr> ?</condition><then pos:start="399:57" pos:end="399:57"> <expr pos:start="399:57" pos:end="399:57"><literal type="number" pos:start="399:57" pos:end="399:57">0</literal></expr> </then><else pos:start="399:59" pos:end="399:75">: <expr pos:start="399:61" pos:end="399:75"><name pos:start="399:61" pos:end="399:75"><name pos:start="399:61" pos:end="399:63">cpe</name><operator pos:start="399:64" pos:end="399:65">-&gt;</operator><name pos:start="399:66" pos:end="399:72">ms_mask</name><index pos:start="399:73" pos:end="399:75">[<expr pos:start="399:74" pos:end="399:74"><name pos:start="399:74" pos:end="399:74">w</name></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="401:17" pos:end="401:43"><expr pos:start="401:17" pos:end="401:42"><call pos:start="401:17" pos:end="401:42"><name pos:start="401:17" pos:end="401:37">apply_mid_side_stereo</name><argument_list pos:start="401:38" pos:end="401:42">(<argument pos:start="401:39" pos:end="401:41"><expr pos:start="401:39" pos:end="401:41"><name pos:start="401:39" pos:end="401:41">cpe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="405:13" pos:end="405:49"><expr pos:start="405:13" pos:end="405:48"><call pos:start="405:13" pos:end="405:48"><name pos:start="405:13" pos:end="405:36">adjust_frame_information</name><argument_list pos:start="405:37" pos:end="405:48">(<argument pos:start="405:38" pos:end="405:40"><expr pos:start="405:38" pos:end="405:40"><name pos:start="405:38" pos:end="405:40">cpe</name></expr></argument>, <argument pos:start="405:43" pos:end="405:47"><expr pos:start="405:43" pos:end="405:47"><name pos:start="405:43" pos:end="405:47">chans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="407:13" pos:end="425:13"><if pos:start="407:13" pos:end="425:13">if <condition pos:start="407:16" pos:end="407:27">(<expr pos:start="407:17" pos:end="407:26"><name pos:start="407:17" pos:end="407:21">chans</name> <operator pos:start="407:23" pos:end="407:24">==</operator> <literal type="number" pos:start="407:26" pos:end="407:26">2</literal></expr>)</condition> <block pos:start="407:29" pos:end="425:13">{<block_content pos:start="409:17" pos:end="423:17">

                <expr_stmt pos:start="409:17" pos:end="409:56"><expr pos:start="409:17" pos:end="409:55"><call pos:start="409:17" pos:end="409:55"><name pos:start="409:17" pos:end="409:24">put_bits</name><argument_list pos:start="409:25" pos:end="409:55">(<argument pos:start="409:26" pos:end="409:31"><expr pos:start="409:26" pos:end="409:31"><operator pos:start="409:26" pos:end="409:26">&amp;</operator><name pos:start="409:27" pos:end="409:31"><name pos:start="409:27" pos:end="409:27">s</name><operator pos:start="409:28" pos:end="409:29">-&gt;</operator><name pos:start="409:30" pos:end="409:31">pb</name></name></expr></argument>, <argument pos:start="409:34" pos:end="409:34"><expr pos:start="409:34" pos:end="409:34"><literal type="number" pos:start="409:34" pos:end="409:34">1</literal></expr></argument>, <argument pos:start="409:37" pos:end="409:54"><expr pos:start="409:37" pos:end="409:54"><name pos:start="409:37" pos:end="409:54"><name pos:start="409:37" pos:end="409:39">cpe</name><operator pos:start="409:40" pos:end="409:41">-&gt;</operator><name pos:start="409:42" pos:end="409:54">common_window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="411:17" pos:end="423:17"><if pos:start="411:17" pos:end="423:17">if <condition pos:start="411:20" pos:end="411:39">(<expr pos:start="411:21" pos:end="411:38"><name pos:start="411:21" pos:end="411:38"><name pos:start="411:21" pos:end="411:23">cpe</name><operator pos:start="411:24" pos:end="411:25">-&gt;</operator><name pos:start="411:26" pos:end="411:38">common_window</name></name></expr>)</condition> <block pos:start="411:41" pos:end="423:17">{<block_content pos:start="413:21" pos:end="421:50">

                    <expr_stmt pos:start="413:21" pos:end="413:53"><expr pos:start="413:21" pos:end="413:52"><call pos:start="413:21" pos:end="413:52"><name pos:start="413:21" pos:end="413:32">put_ics_info</name><argument_list pos:start="413:33" pos:end="413:52">(<argument pos:start="413:34" pos:end="413:34"><expr pos:start="413:34" pos:end="413:34"><name pos:start="413:34" pos:end="413:34">s</name></expr></argument>, <argument pos:start="413:37" pos:end="413:51"><expr pos:start="413:37" pos:end="413:51"><operator pos:start="413:37" pos:end="413:37">&amp;</operator><name pos:start="413:38" pos:end="413:47"><name pos:start="413:38" pos:end="413:40">cpe</name><operator pos:start="413:41" pos:end="413:42">-&gt;</operator><name pos:start="413:43" pos:end="413:44">ch</name><index pos:start="413:45" pos:end="413:47">[<expr pos:start="413:46" pos:end="413:46"><literal type="number" pos:start="413:46" pos:end="413:46">0</literal></expr>]</index></name><operator pos:start="413:48" pos:end="413:48">.</operator><name pos:start="413:49" pos:end="413:51">ics</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="415:21" pos:end="417:67"><if pos:start="415:21" pos:end="417:67">if <condition pos:start="415:24" pos:end="415:51">(<expr pos:start="415:25" pos:end="415:50"><name pos:start="415:25" pos:end="415:50"><name pos:start="415:25" pos:end="415:25">s</name><operator pos:start="415:26" pos:end="415:27">-&gt;</operator><name pos:start="415:28" pos:end="415:32">coder</name><operator pos:start="415:33" pos:end="415:34">-&gt;</operator><name pos:start="415:35" pos:end="415:50">encode_main_pred</name></name></expr>)</condition><block type="pseudo" pos:start="417:25" pos:end="417:67"><block_content pos:start="417:25" pos:end="417:67">

                        <expr_stmt pos:start="417:25" pos:end="417:67"><expr pos:start="417:25" pos:end="417:66"><call pos:start="417:25" pos:end="417:66"><name pos:start="417:25" pos:end="417:50"><name pos:start="417:25" pos:end="417:25">s</name><operator pos:start="417:26" pos:end="417:27">-&gt;</operator><name pos:start="417:28" pos:end="417:32">coder</name><operator pos:start="417:33" pos:end="417:34">-&gt;</operator><name pos:start="417:35" pos:end="417:50">encode_main_pred</name></name><argument_list pos:start="417:51" pos:end="417:66">(<argument pos:start="417:52" pos:end="417:52"><expr pos:start="417:52" pos:end="417:52"><name pos:start="417:52" pos:end="417:52">s</name></expr></argument>, <argument pos:start="417:55" pos:end="417:65"><expr pos:start="417:55" pos:end="417:65"><operator pos:start="417:55" pos:end="417:55">&amp;</operator><name pos:start="417:56" pos:end="417:65"><name pos:start="417:56" pos:end="417:58">cpe</name><operator pos:start="417:59" pos:end="417:60">-&gt;</operator><name pos:start="417:61" pos:end="417:62">ch</name><index pos:start="417:63" pos:end="417:65">[<expr pos:start="417:64" pos:end="417:64"><literal type="number" pos:start="417:64" pos:end="417:64">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="419:21" pos:end="419:48"><expr pos:start="419:21" pos:end="419:47"><call pos:start="419:21" pos:end="419:47"><name pos:start="419:21" pos:end="419:34">encode_ms_info</name><argument_list pos:start="419:35" pos:end="419:47">(<argument pos:start="419:36" pos:end="419:41"><expr pos:start="419:36" pos:end="419:41"><operator pos:start="419:36" pos:end="419:36">&amp;</operator><name pos:start="419:37" pos:end="419:41"><name pos:start="419:37" pos:end="419:37">s</name><operator pos:start="419:38" pos:end="419:39">-&gt;</operator><name pos:start="419:40" pos:end="419:41">pb</name></name></expr></argument>, <argument pos:start="419:44" pos:end="419:46"><expr pos:start="419:44" pos:end="419:46"><name pos:start="419:44" pos:end="419:46">cpe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="421:21" pos:end="421:50"><if pos:start="421:21" pos:end="421:50">if <condition pos:start="421:24" pos:end="421:37">(<expr pos:start="421:25" pos:end="421:36"><name pos:start="421:25" pos:end="421:36"><name pos:start="421:25" pos:end="421:27">cpe</name><operator pos:start="421:28" pos:end="421:29">-&gt;</operator><name pos:start="421:30" pos:end="421:36">ms_mode</name></name></expr>)</condition><block type="pseudo" pos:start="421:39" pos:end="421:50"><block_content pos:start="421:39" pos:end="421:50"> <expr_stmt pos:start="421:39" pos:end="421:50"><expr pos:start="421:39" pos:end="421:49"><name pos:start="421:39" pos:end="421:45">ms_mode</name> <operator pos:start="421:47" pos:end="421:47">=</operator> <literal type="number" pos:start="421:49" pos:end="421:49">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <for pos:start="427:13" pos:end="433:13">for <control pos:start="427:17" pos:end="427:42">(<init pos:start="427:18" pos:end="427:24"><expr pos:start="427:18" pos:end="427:23"><name pos:start="427:18" pos:end="427:19">ch</name> <operator pos:start="427:21" pos:end="427:21">=</operator> <literal type="number" pos:start="427:23" pos:end="427:23">0</literal></expr>;</init> <condition pos:start="427:26" pos:end="427:36"><expr pos:start="427:26" pos:end="427:35"><name pos:start="427:26" pos:end="427:27">ch</name> <operator pos:start="427:29" pos:end="427:29">&lt;</operator> <name pos:start="427:31" pos:end="427:35">chans</name></expr>;</condition> <incr pos:start="427:38" pos:end="427:41"><expr pos:start="427:38" pos:end="427:41"><name pos:start="427:38" pos:end="427:39">ch</name><operator pos:start="427:40" pos:end="427:41">++</operator></expr></incr>)</control> <block pos:start="427:44" pos:end="433:13">{<block_content pos:start="429:17" pos:end="431:86">

                <expr_stmt pos:start="429:17" pos:end="429:47"><expr pos:start="429:17" pos:end="429:46"><name pos:start="429:17" pos:end="429:30"><name pos:start="429:17" pos:end="429:17">s</name><operator pos:start="429:18" pos:end="429:19">-&gt;</operator><name pos:start="429:20" pos:end="429:30">cur_channel</name></name> <operator pos:start="429:32" pos:end="429:32">=</operator> <name pos:start="429:34" pos:end="429:41">start_ch</name> <operator pos:start="429:43" pos:end="429:43">+</operator> <name pos:start="429:45" pos:end="429:46">ch</name></expr>;</expr_stmt>

                <expr_stmt pos:start="431:17" pos:end="431:86"><expr pos:start="431:17" pos:end="431:85"><call pos:start="431:17" pos:end="431:85"><name pos:start="431:17" pos:end="431:41">encode_individual_channel</name><argument_list pos:start="431:42" pos:end="431:85">(<argument pos:start="431:43" pos:end="431:47"><expr pos:start="431:43" pos:end="431:47"><name pos:start="431:43" pos:end="431:47">avctx</name></expr></argument>, <argument pos:start="431:50" pos:end="431:50"><expr pos:start="431:50" pos:end="431:50"><name pos:start="431:50" pos:end="431:50">s</name></expr></argument>, <argument pos:start="431:53" pos:end="431:64"><expr pos:start="431:53" pos:end="431:64"><operator pos:start="431:53" pos:end="431:53">&amp;</operator><name pos:start="431:54" pos:end="431:64"><name pos:start="431:54" pos:end="431:56">cpe</name><operator pos:start="431:57" pos:end="431:58">-&gt;</operator><name pos:start="431:59" pos:end="431:60">ch</name><index pos:start="431:61" pos:end="431:64">[<expr pos:start="431:62" pos:end="431:63"><name pos:start="431:62" pos:end="431:63">ch</name></expr>]</index></name></expr></argument>, <argument pos:start="431:67" pos:end="431:84"><expr pos:start="431:67" pos:end="431:84"><name pos:start="431:67" pos:end="431:84"><name pos:start="431:67" pos:end="431:69">cpe</name><operator pos:start="431:70" pos:end="431:71">-&gt;</operator><name pos:start="431:72" pos:end="431:84">common_window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="435:13" pos:end="435:30"><expr pos:start="435:13" pos:end="435:29"><name pos:start="435:13" pos:end="435:20">start_ch</name> <operator pos:start="435:22" pos:end="435:23">+=</operator> <name pos:start="435:25" pos:end="435:29">chans</name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="441:9" pos:end="447:9"><if pos:start="441:9" pos:end="447:9">if <condition pos:start="441:12" pos:end="441:45">(<expr pos:start="441:13" pos:end="441:44"><name pos:start="441:13" pos:end="441:24"><name pos:start="441:13" pos:end="441:17">avctx</name><operator pos:start="441:18" pos:end="441:19">-&gt;</operator><name pos:start="441:20" pos:end="441:24">flags</name></name> <operator pos:start="441:26" pos:end="441:26">&amp;</operator> <name pos:start="441:28" pos:end="441:44">CODEC_FLAG_QSCALE</name></expr>)</condition> <block pos:start="441:47" pos:end="447:9">{<block_content pos:start="445:13" pos:end="445:18">

            <comment type="block" pos:start="443:13" pos:end="443:71">/* When using a constant Q-scale, don't mess with lambda */</comment>

            <break pos:start="445:13" pos:end="445:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="451:9" pos:end="457:11">/* rate control stuff

         * target either the nominal bitrate, or what psy's bit reservoir says to target

         * whichever is greatest

         */</comment>



        <expr_stmt pos:start="461:9" pos:end="461:44"><expr pos:start="461:9" pos:end="461:43"><name pos:start="461:9" pos:end="461:18">frame_bits</name> <operator pos:start="461:20" pos:end="461:20">=</operator> <call pos:start="461:22" pos:end="461:43"><name pos:start="461:22" pos:end="461:35">put_bits_count</name><argument_list pos:start="461:36" pos:end="461:43">(<argument pos:start="461:37" pos:end="461:42"><expr pos:start="461:37" pos:end="461:42"><operator pos:start="461:37" pos:end="461:37">&amp;</operator><name pos:start="461:38" pos:end="461:42"><name pos:start="461:38" pos:end="461:38">s</name><operator pos:start="461:39" pos:end="461:40">-&gt;</operator><name pos:start="461:41" pos:end="461:42">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="463:9" pos:end="463:86"><expr pos:start="463:9" pos:end="463:85"><name pos:start="463:9" pos:end="463:19">target_bits</name> <operator pos:start="463:21" pos:end="463:21">=</operator> <call pos:start="463:23" pos:end="463:85"><name pos:start="463:23" pos:end="463:27">FFMAX</name><argument_list pos:start="463:28" pos:end="463:85">(<argument pos:start="463:29" pos:end="463:39"><expr pos:start="463:29" pos:end="463:39"><name pos:start="463:29" pos:end="463:39">target_bits</name></expr></argument>, <argument pos:start="463:42" pos:end="463:84"><expr pos:start="463:42" pos:end="463:84"><name pos:start="463:42" pos:end="463:56"><name pos:start="463:42" pos:end="463:46">avctx</name><operator pos:start="463:47" pos:end="463:48">-&gt;</operator><name pos:start="463:49" pos:end="463:56">bit_rate</name></name> <operator pos:start="463:58" pos:end="463:58">*</operator> <literal type="number" pos:start="463:60" pos:end="463:63">1024</literal> <operator pos:start="463:65" pos:end="463:65">/</operator> <name pos:start="463:67" pos:end="463:84"><name pos:start="463:67" pos:end="463:71">avctx</name><operator pos:start="463:72" pos:end="463:73">-&gt;</operator><name pos:start="463:74" pos:end="463:84">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="465:9" pos:end="465:65"><expr pos:start="465:9" pos:end="465:64"><name pos:start="465:9" pos:end="465:19">target_bits</name> <operator pos:start="465:21" pos:end="465:21">=</operator> <call pos:start="465:23" pos:end="465:64"><name pos:start="465:23" pos:end="465:27">FFMIN</name><argument_list pos:start="465:28" pos:end="465:64">(<argument pos:start="465:29" pos:end="465:39"><expr pos:start="465:29" pos:end="465:39"><name pos:start="465:29" pos:end="465:39">target_bits</name></expr></argument>, <argument pos:start="465:42" pos:end="465:63"><expr pos:start="465:42" pos:end="465:63"><literal type="number" pos:start="465:42" pos:end="465:45">6144</literal> <operator pos:start="465:47" pos:end="465:47">*</operator> <name pos:start="465:49" pos:end="465:59"><name pos:start="465:49" pos:end="465:49">s</name><operator pos:start="465:50" pos:end="465:51">-&gt;</operator><name pos:start="465:52" pos:end="465:59">channels</name></name> <operator pos:start="465:61" pos:end="465:61">-</operator> <literal type="number" pos:start="465:63" pos:end="465:63">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="469:9" pos:end="469:65">/* When using ABR, be strict (but only for increasing) */</comment>

        <expr_stmt pos:start="471:9" pos:end="471:52"><expr pos:start="471:9" pos:end="471:51"><name pos:start="471:9" pos:end="471:21">too_many_bits</name> <operator pos:start="471:23" pos:end="471:23">=</operator> <name pos:start="471:25" pos:end="471:35">target_bits</name> <operator pos:start="471:37" pos:end="471:37">+</operator> <name pos:start="471:39" pos:end="471:49">target_bits</name><operator pos:start="471:50" pos:end="471:50">/</operator><literal type="number" pos:start="471:51" pos:end="471:51">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="473:9" pos:end="473:51"><expr pos:start="473:9" pos:end="473:50"><name pos:start="473:9" pos:end="473:20">too_few_bits</name> <operator pos:start="473:22" pos:end="473:22">=</operator> <name pos:start="473:24" pos:end="473:34">target_bits</name> <operator pos:start="473:36" pos:end="473:36">-</operator> <name pos:start="473:38" pos:end="473:48">target_bits</name><operator pos:start="473:49" pos:end="473:49">/</operator><literal type="number" pos:start="473:50" pos:end="473:50">8</literal></expr>;</expr_stmt>



        <if_stmt pos:start="477:9" pos:end="553:9"><if pos:start="477:9" pos:end="549:9">if <condition pos:start="477:12" pos:end="481:54">(   <expr pos:start="477:16" pos:end="481:51"><name pos:start="477:16" pos:end="477:18">its</name> <operator pos:start="477:20" pos:end="477:21">==</operator> <literal type="number" pos:start="477:23" pos:end="477:23">0</literal> <comment type="block" pos:start="477:25" pos:end="477:63">/* for steady-state Q-scale tracking */</comment>

            <operator pos:start="479:13" pos:end="479:14">||</operator> <operator pos:start="479:16" pos:end="479:16">(</operator><name pos:start="479:17" pos:end="479:19">its</name> <operator pos:start="479:21" pos:end="479:21">&lt;</operator> <literal type="number" pos:start="479:23" pos:end="479:23">5</literal> <operator pos:start="479:25" pos:end="479:26">&amp;&amp;</operator> <operator pos:start="479:28" pos:end="479:28">(</operator><name pos:start="479:29" pos:end="479:69"><name pos:start="479:29" pos:end="479:38">frame_bits</name> <argument_list type="generic" pos:start="479:40" pos:end="479:69">&lt; <argument pos:start="479:42" pos:end="479:67"><expr pos:start="479:42" pos:end="479:67"><name pos:start="479:42" pos:end="479:53">too_few_bits</name> <operator pos:start="479:55" pos:end="479:56">||</operator> <name pos:start="479:58" pos:end="479:67">frame_bits</name></expr></argument> &gt;</argument_list></name> <name pos:start="479:71" pos:end="479:83">too_many_bits</name><operator pos:start="479:84" pos:end="479:84">)</operator><operator pos:start="479:85" pos:end="479:85">)</operator>

            <operator pos:start="481:13" pos:end="481:14">||</operator> <name pos:start="481:16" pos:end="481:25">frame_bits</name> <operator pos:start="481:27" pos:end="481:28">&gt;=</operator> <literal type="number" pos:start="481:30" pos:end="481:33">6144</literal> <operator pos:start="481:35" pos:end="481:35">*</operator> <name pos:start="481:37" pos:end="481:47"><name pos:start="481:37" pos:end="481:37">s</name><operator pos:start="481:38" pos:end="481:39">-&gt;</operator><name pos:start="481:40" pos:end="481:47">channels</name></name> <operator pos:start="481:49" pos:end="481:49">-</operator> <literal type="number" pos:start="481:51" pos:end="481:51">3</literal></expr>  )</condition>

        <block pos:start="483:9" pos:end="549:9">{<block_content pos:start="485:13" pos:end="547:13">

            <decl_stmt pos:start="485:13" pos:end="485:60"><decl pos:start="485:13" pos:end="485:59"><type pos:start="485:13" pos:end="485:17"><name pos:start="485:13" pos:end="485:17">float</name></type> <name pos:start="485:19" pos:end="485:23">ratio</name> <init pos:start="485:25" pos:end="485:59">= <expr pos:start="485:27" pos:end="485:59"><operator pos:start="485:27" pos:end="485:27">(</operator><operator pos:start="485:28" pos:end="485:28">(</operator><name pos:start="485:29" pos:end="485:33">float</name><operator pos:start="485:34" pos:end="485:34">)</operator><name pos:start="485:35" pos:end="485:45">target_bits</name><operator pos:start="485:46" pos:end="485:46">)</operator> <operator pos:start="485:48" pos:end="485:48">/</operator> <name pos:start="485:50" pos:end="485:59">frame_bits</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="489:13" pos:end="513:13"><if pos:start="489:13" pos:end="507:13">if <condition pos:start="489:16" pos:end="489:74">(<expr pos:start="489:17" pos:end="489:73"><name pos:start="489:17" pos:end="489:26">frame_bits</name> <operator pos:start="489:28" pos:end="489:29">&gt;=</operator> <name pos:start="489:31" pos:end="489:42">too_few_bits</name> <operator pos:start="489:44" pos:end="489:45">&amp;&amp;</operator> <name pos:start="489:47" pos:end="489:56">frame_bits</name> <operator pos:start="489:58" pos:end="489:59">&lt;=</operator> <name pos:start="489:61" pos:end="489:73">too_many_bits</name></expr>)</condition> <block pos:start="489:76" pos:end="507:13">{<block_content pos:start="503:17" pos:end="505:52">

                <comment type="block" pos:start="491:17" pos:end="501:19">/*

                 * This path is for steady-state Q-scale tracking

                 * When frame bits fall within the stable range, we still need to adjust

                 * lambda to maintain it like so in a stable fashion (large jumps in lambda

                 * create artifacts and should be avoided), but slowly

                 */</comment>

                <expr_stmt pos:start="503:17" pos:end="503:44"><expr pos:start="503:17" pos:end="503:43"><name pos:start="503:17" pos:end="503:21">ratio</name> <operator pos:start="503:23" pos:end="503:23">=</operator> <call pos:start="503:25" pos:end="503:43"><name pos:start="503:25" pos:end="503:29">sqrtf</name><argument_list pos:start="503:30" pos:end="503:43">(<argument pos:start="503:31" pos:end="503:42"><expr pos:start="503:31" pos:end="503:42"><call pos:start="503:31" pos:end="503:42"><name pos:start="503:31" pos:end="503:35">sqrtf</name><argument_list pos:start="503:36" pos:end="503:42">(<argument pos:start="503:37" pos:end="503:41"><expr pos:start="503:37" pos:end="503:41"><name pos:start="503:37" pos:end="503:41">ratio</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="505:17" pos:end="505:52"><expr pos:start="505:17" pos:end="505:51"><name pos:start="505:17" pos:end="505:21">ratio</name> <operator pos:start="505:23" pos:end="505:23">=</operator> <call pos:start="505:25" pos:end="505:51"><name pos:start="505:25" pos:end="505:32">av_clipf</name><argument_list pos:start="505:33" pos:end="505:51">(<argument pos:start="505:34" pos:end="505:38"><expr pos:start="505:34" pos:end="505:38"><name pos:start="505:34" pos:end="505:38">ratio</name></expr></argument>, <argument pos:start="505:41" pos:end="505:44"><expr pos:start="505:41" pos:end="505:44"><literal type="number" pos:start="505:41" pos:end="505:44">0.9f</literal></expr></argument>, <argument pos:start="505:47" pos:end="505:50"><expr pos:start="505:47" pos:end="505:50"><literal type="number" pos:start="505:47" pos:end="505:50">1.1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="507:15" pos:end="513:13">else <block pos:start="507:20" pos:end="513:13">{<block_content pos:start="511:17" pos:end="511:37">

                <comment type="block" pos:start="509:17" pos:end="509:40">/* Not so fast though */</comment>

                <expr_stmt pos:start="511:17" pos:end="511:37"><expr pos:start="511:17" pos:end="511:36"><name pos:start="511:17" pos:end="511:21">ratio</name> <operator pos:start="511:23" pos:end="511:23">=</operator> <call pos:start="511:25" pos:end="511:36"><name pos:start="511:25" pos:end="511:29">sqrtf</name><argument_list pos:start="511:30" pos:end="511:36">(<argument pos:start="511:31" pos:end="511:35"><expr pos:start="511:31" pos:end="511:35"><name pos:start="511:31" pos:end="511:35">ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="515:13" pos:end="515:58"><expr pos:start="515:13" pos:end="515:57"><name pos:start="515:13" pos:end="515:21"><name pos:start="515:13" pos:end="515:13">s</name><operator pos:start="515:14" pos:end="515:15">-&gt;</operator><name pos:start="515:16" pos:end="515:21">lambda</name></name> <operator pos:start="515:23" pos:end="515:23">=</operator> <call pos:start="515:25" pos:end="515:57"><name pos:start="515:25" pos:end="515:29">FFMIN</name><argument_list pos:start="515:30" pos:end="515:57">(<argument pos:start="515:31" pos:end="515:47"><expr pos:start="515:31" pos:end="515:47"><name pos:start="515:31" pos:end="515:39"><name pos:start="515:31" pos:end="515:31">s</name><operator pos:start="515:32" pos:end="515:33">-&gt;</operator><name pos:start="515:34" pos:end="515:39">lambda</name></name> <operator pos:start="515:41" pos:end="515:41">*</operator> <name pos:start="515:43" pos:end="515:47">ratio</name></expr></argument>, <argument pos:start="515:50" pos:end="515:56"><expr pos:start="515:50" pos:end="515:56"><literal type="number" pos:start="515:50" pos:end="515:56">65536.f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="519:13" pos:end="519:75">/* Keep iterating if we must reduce and lambda is in the sky */</comment>

            <if_stmt pos:start="521:13" pos:end="547:13"><if pos:start="521:13" pos:end="525:13">if <condition pos:start="521:16" pos:end="521:50">(<expr pos:start="521:17" pos:end="521:49"><name pos:start="521:17" pos:end="521:25"><name pos:start="521:17" pos:end="521:17">s</name><operator pos:start="521:18" pos:end="521:19">-&gt;</operator><name pos:start="521:20" pos:end="521:25">lambda</name></name> <operator pos:start="521:27" pos:end="521:27">&lt;</operator> <literal type="number" pos:start="521:29" pos:end="521:33">300.f</literal> <operator pos:start="521:35" pos:end="521:36">||</operator> <name pos:start="521:38" pos:end="521:42">ratio</name> <operator pos:start="521:44" pos:end="521:44">&gt;</operator> <literal type="number" pos:start="521:46" pos:end="521:49">0.9f</literal></expr>)</condition> <block pos:start="521:52" pos:end="525:13">{<block_content pos:start="523:17" pos:end="523:22">

                <break pos:start="523:17" pos:end="523:22">break;</break>

            </block_content>}</block></if> <else pos:start="525:15" pos:end="547:13">else <block pos:start="525:20" pos:end="547:13">{<block_content pos:start="527:17" pos:end="545:22">

                <if_stmt pos:start="527:17" pos:end="543:17"><if pos:start="527:17" pos:end="543:17">if <condition pos:start="527:20" pos:end="527:64">(<expr pos:start="527:21" pos:end="527:63"><name pos:start="527:21" pos:end="527:27">is_mode</name> <operator pos:start="527:29" pos:end="527:30">||</operator> <name pos:start="527:32" pos:end="527:38">ms_mode</name> <operator pos:start="527:40" pos:end="527:41">||</operator> <name pos:start="527:43" pos:end="527:50">tns_mode</name> <operator pos:start="527:52" pos:end="527:53">||</operator> <name pos:start="527:55" pos:end="527:63">pred_mode</name></expr>)</condition> <block pos:start="527:66" pos:end="543:17">{<block_content pos:start="529:21" pos:end="541:21">

                    <for pos:start="529:21" pos:end="541:21">for <control pos:start="529:25" pos:end="529:56">(<init pos:start="529:26" pos:end="529:31"><expr pos:start="529:26" pos:end="529:30"><name pos:start="529:26" pos:end="529:26">i</name> <operator pos:start="529:28" pos:end="529:28">=</operator> <literal type="number" pos:start="529:30" pos:end="529:30">0</literal></expr>;</init> <condition pos:start="529:33" pos:end="529:51"><expr pos:start="529:33" pos:end="529:50"><name pos:start="529:33" pos:end="529:33">i</name> <operator pos:start="529:35" pos:end="529:35">&lt;</operator> <name pos:start="529:37" pos:end="529:50"><name pos:start="529:37" pos:end="529:37">s</name><operator pos:start="529:38" pos:end="529:39">-&gt;</operator><name pos:start="529:40" pos:end="529:47">chan_map</name><index pos:start="529:48" pos:end="529:50">[<expr pos:start="529:49" pos:end="529:49"><literal type="number" pos:start="529:49" pos:end="529:49">0</literal></expr>]</index></name></expr>;</condition> <incr pos:start="529:53" pos:end="529:55"><expr pos:start="529:53" pos:end="529:55"><name pos:start="529:53" pos:end="529:53">i</name><operator pos:start="529:54" pos:end="529:55">++</operator></expr></incr>)</control> <block pos:start="529:58" pos:end="541:21">{<block_content pos:start="533:25" pos:end="539:104">

                        <comment type="line" pos:start="531:25" pos:end="531:46">// Must restore coeffs</comment>

                        <expr_stmt pos:start="533:25" pos:end="533:56"><expr pos:start="533:25" pos:end="533:55"><name pos:start="533:25" pos:end="533:29">chans</name> <operator pos:start="533:31" pos:end="533:31">=</operator> <ternary pos:start="533:33" pos:end="533:55"><condition pos:start="533:33" pos:end="533:49"><expr pos:start="533:33" pos:end="533:47"><name pos:start="533:33" pos:end="533:35">tag</name> <operator pos:start="533:37" pos:end="533:38">==</operator> <name pos:start="533:40" pos:end="533:47">TYPE_CPE</name></expr> ?</condition><then pos:start="533:51" pos:end="533:51"> <expr pos:start="533:51" pos:end="533:51"><literal type="number" pos:start="533:51" pos:end="533:51">2</literal></expr> </then><else pos:start="533:53" pos:end="533:55">: <expr pos:start="533:55" pos:end="533:55"><literal type="number" pos:start="533:55" pos:end="533:55">1</literal></expr></else></ternary></expr>;</expr_stmt>

                        <expr_stmt pos:start="535:25" pos:end="535:41"><expr pos:start="535:25" pos:end="535:40"><name pos:start="535:25" pos:end="535:27">cpe</name> <operator pos:start="535:29" pos:end="535:29">=</operator> <operator pos:start="535:31" pos:end="535:31">&amp;</operator><name pos:start="535:32" pos:end="535:40"><name pos:start="535:32" pos:end="535:32">s</name><operator pos:start="535:33" pos:end="535:34">-&gt;</operator><name pos:start="535:35" pos:end="535:37">cpe</name><index pos:start="535:38" pos:end="535:40">[<expr pos:start="535:39" pos:end="535:39"><name pos:start="535:39" pos:end="535:39">i</name></expr>]</index></name></expr>;</expr_stmt>

                        <for pos:start="537:25" pos:end="539:104">for <control pos:start="537:29" pos:end="537:54">(<init pos:start="537:30" pos:end="537:36"><expr pos:start="537:30" pos:end="537:35"><name pos:start="537:30" pos:end="537:31">ch</name> <operator pos:start="537:33" pos:end="537:33">=</operator> <literal type="number" pos:start="537:35" pos:end="537:35">0</literal></expr>;</init> <condition pos:start="537:38" pos:end="537:48"><expr pos:start="537:38" pos:end="537:47"><name pos:start="537:38" pos:end="537:39">ch</name> <operator pos:start="537:41" pos:end="537:41">&lt;</operator> <name pos:start="537:43" pos:end="537:47">chans</name></expr>;</condition> <incr pos:start="537:50" pos:end="537:53"><expr pos:start="537:50" pos:end="537:53"><name pos:start="537:50" pos:end="537:51">ch</name><operator pos:start="537:52" pos:end="537:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="539:29" pos:end="539:104"><block_content pos:start="539:29" pos:end="539:104">

                            <expr_stmt pos:start="539:29" pos:end="539:104"><expr pos:start="539:29" pos:end="539:103"><call pos:start="539:29" pos:end="539:103"><name pos:start="539:29" pos:end="539:34">memcpy</name><argument_list pos:start="539:35" pos:end="539:103">(<argument pos:start="539:36" pos:end="539:53"><expr pos:start="539:36" pos:end="539:53"><name pos:start="539:36" pos:end="539:46"><name pos:start="539:36" pos:end="539:38">cpe</name><operator pos:start="539:39" pos:end="539:40">-&gt;</operator><name pos:start="539:41" pos:end="539:42">ch</name><index pos:start="539:43" pos:end="539:46">[<expr pos:start="539:44" pos:end="539:45"><name pos:start="539:44" pos:end="539:45">ch</name></expr>]</index></name><operator pos:start="539:47" pos:end="539:47">.</operator><name pos:start="539:48" pos:end="539:53">coeffs</name></expr></argument>, <argument pos:start="539:56" pos:end="539:74"><expr pos:start="539:56" pos:end="539:74"><name pos:start="539:56" pos:end="539:66"><name pos:start="539:56" pos:end="539:58">cpe</name><operator pos:start="539:59" pos:end="539:60">-&gt;</operator><name pos:start="539:61" pos:end="539:62">ch</name><index pos:start="539:63" pos:end="539:66">[<expr pos:start="539:64" pos:end="539:65"><name pos:start="539:64" pos:end="539:65">ch</name></expr>]</index></name><operator pos:start="539:67" pos:end="539:67">.</operator><name pos:start="539:68" pos:end="539:74">pcoeffs</name></expr></argument>, <argument pos:start="539:77" pos:end="539:102"><expr pos:start="539:77" pos:end="539:102"><sizeof pos:start="539:77" pos:end="539:102">sizeof<argument_list pos:start="539:83" pos:end="539:102">(<argument pos:start="539:84" pos:end="539:101"><expr pos:start="539:84" pos:end="539:101"><name pos:start="539:84" pos:end="539:94"><name pos:start="539:84" pos:end="539:86">cpe</name><operator pos:start="539:87" pos:end="539:88">-&gt;</operator><name pos:start="539:89" pos:end="539:90">ch</name><index pos:start="539:91" pos:end="539:94">[<expr pos:start="539:92" pos:end="539:93"><name pos:start="539:92" pos:end="539:93">ch</name></expr>]</index></name><operator pos:start="539:95" pos:end="539:95">.</operator><name pos:start="539:96" pos:end="539:101">coeffs</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                    </block_content>}</block></for>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="545:17" pos:end="545:22"><expr pos:start="545:17" pos:end="545:21"><name pos:start="545:17" pos:end="545:19">its</name><operator pos:start="545:20" pos:end="545:21">++</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="549:11" pos:end="553:9">else <block pos:start="549:16" pos:end="553:9">{<block_content pos:start="551:13" pos:end="551:18">

            <break pos:start="551:13" pos:end="551:18">break;</break>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block> while <condition pos:start="555:13" pos:end="555:15">(<expr pos:start="555:14" pos:end="555:14"><literal type="number" pos:start="555:14" pos:end="555:14">1</literal></expr>)</condition>;</do>



    <expr_stmt pos:start="559:5" pos:end="559:34"><expr pos:start="559:5" pos:end="559:33"><call pos:start="559:5" pos:end="559:33"><name pos:start="559:5" pos:end="559:12">put_bits</name><argument_list pos:start="559:13" pos:end="559:33">(<argument pos:start="559:14" pos:end="559:19"><expr pos:start="559:14" pos:end="559:19"><operator pos:start="559:14" pos:end="559:14">&amp;</operator><name pos:start="559:15" pos:end="559:19"><name pos:start="559:15" pos:end="559:15">s</name><operator pos:start="559:16" pos:end="559:17">-&gt;</operator><name pos:start="559:18" pos:end="559:19">pb</name></name></expr></argument>, <argument pos:start="559:22" pos:end="559:22"><expr pos:start="559:22" pos:end="559:22"><literal type="number" pos:start="559:22" pos:end="559:22">3</literal></expr></argument>, <argument pos:start="559:25" pos:end="559:32"><expr pos:start="559:25" pos:end="559:32"><name pos:start="559:25" pos:end="559:32">TYPE_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="561:5" pos:end="561:27"><expr pos:start="561:5" pos:end="561:26"><call pos:start="561:5" pos:end="561:26"><name pos:start="561:5" pos:end="561:18">flush_put_bits</name><argument_list pos:start="561:19" pos:end="561:26">(<argument pos:start="561:20" pos:end="561:25"><expr pos:start="561:20" pos:end="561:25"><operator pos:start="561:20" pos:end="561:20">&amp;</operator><name pos:start="561:21" pos:end="561:25"><name pos:start="561:21" pos:end="561:21">s</name><operator pos:start="561:22" pos:end="561:23">-&gt;</operator><name pos:start="561:24" pos:end="561:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="563:5" pos:end="563:47"><expr pos:start="563:5" pos:end="563:46"><name pos:start="563:5" pos:end="563:21"><name pos:start="563:5" pos:end="563:9">avctx</name><operator pos:start="563:10" pos:end="563:11">-&gt;</operator><name pos:start="563:12" pos:end="563:21">frame_bits</name></name> <operator pos:start="563:23" pos:end="563:23">=</operator> <call pos:start="563:25" pos:end="563:46"><name pos:start="563:25" pos:end="563:38">put_bits_count</name><argument_list pos:start="563:39" pos:end="563:46">(<argument pos:start="563:40" pos:end="563:45"><expr pos:start="563:40" pos:end="563:45"><operator pos:start="563:40" pos:end="563:40">&amp;</operator><name pos:start="563:41" pos:end="563:45"><name pos:start="563:41" pos:end="563:41">s</name><operator pos:start="563:42" pos:end="563:43">-&gt;</operator><name pos:start="563:44" pos:end="563:45">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="567:5" pos:end="569:24"><if pos:start="567:5" pos:end="569:24">if <condition pos:start="567:8" pos:end="567:15">(<expr pos:start="567:9" pos:end="567:14"><operator pos:start="567:9" pos:end="567:9">!</operator><name pos:start="567:10" pos:end="567:14">frame</name></expr>)</condition><block type="pseudo" pos:start="569:9" pos:end="569:24"><block_content pos:start="569:9" pos:end="569:24">

        <expr_stmt pos:start="569:9" pos:end="569:24"><expr pos:start="569:9" pos:end="569:23"><name pos:start="569:9" pos:end="569:21"><name pos:start="569:9" pos:end="569:9">s</name><operator pos:start="569:10" pos:end="569:11">-&gt;</operator><name pos:start="569:12" pos:end="569:21">last_frame</name></name><operator pos:start="569:22" pos:end="569:23">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="573:5" pos:end="575:41"><expr pos:start="573:5" pos:end="575:40"><call pos:start="573:5" pos:end="575:40"><name pos:start="573:5" pos:end="573:22">ff_af_queue_remove</name><argument_list pos:start="573:23" pos:end="575:40">(<argument pos:start="573:24" pos:end="573:30"><expr pos:start="573:24" pos:end="573:30"><operator pos:start="573:24" pos:end="573:24">&amp;</operator><name pos:start="573:25" pos:end="573:30"><name pos:start="573:25" pos:end="573:25">s</name><operator pos:start="573:26" pos:end="573:27">-&gt;</operator><name pos:start="573:28" pos:end="573:30">afq</name></name></expr></argument>, <argument pos:start="573:33" pos:end="573:49"><expr pos:start="573:33" pos:end="573:49"><name pos:start="573:33" pos:end="573:49"><name pos:start="573:33" pos:end="573:37">avctx</name><operator pos:start="573:38" pos:end="573:39">-&gt;</operator><name pos:start="573:40" pos:end="573:49">frame_size</name></name></expr></argument>, <argument pos:start="573:52" pos:end="573:62"><expr pos:start="573:52" pos:end="573:62"><operator pos:start="573:52" pos:end="573:52">&amp;</operator><name pos:start="573:53" pos:end="573:62"><name pos:start="573:53" pos:end="573:57">avpkt</name><operator pos:start="573:58" pos:end="573:59">-&gt;</operator><name pos:start="573:60" pos:end="573:62">pts</name></name></expr></argument>,

                       <argument pos:start="575:24" pos:end="575:39"><expr pos:start="575:24" pos:end="575:39"><operator pos:start="575:24" pos:end="575:24">&amp;</operator><name pos:start="575:25" pos:end="575:39"><name pos:start="575:25" pos:end="575:29">avpkt</name><operator pos:start="575:30" pos:end="575:31">-&gt;</operator><name pos:start="575:32" pos:end="575:39">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="579:5" pos:end="579:46"><expr pos:start="579:5" pos:end="579:45"><name pos:start="579:5" pos:end="579:15"><name pos:start="579:5" pos:end="579:9">avpkt</name><operator pos:start="579:10" pos:end="579:11">-&gt;</operator><name pos:start="579:12" pos:end="579:15">size</name></name> <operator pos:start="579:17" pos:end="579:17">=</operator> <call pos:start="579:19" pos:end="579:40"><name pos:start="579:19" pos:end="579:32">put_bits_count</name><argument_list pos:start="579:33" pos:end="579:40">(<argument pos:start="579:34" pos:end="579:39"><expr pos:start="579:34" pos:end="579:39"><operator pos:start="579:34" pos:end="579:34">&amp;</operator><name pos:start="579:35" pos:end="579:39"><name pos:start="579:35" pos:end="579:35">s</name><operator pos:start="579:36" pos:end="579:37">-&gt;</operator><name pos:start="579:38" pos:end="579:39">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="579:42" pos:end="579:43">&gt;&gt;</operator> <literal type="number" pos:start="579:45" pos:end="579:45">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="581:5" pos:end="581:24"><expr pos:start="581:5" pos:end="581:23"><operator pos:start="581:5" pos:end="581:5">*</operator><name pos:start="581:6" pos:end="581:19">got_packet_ptr</name> <operator pos:start="581:21" pos:end="581:21">=</operator> <literal type="number" pos:start="581:23" pos:end="581:23">1</literal></expr>;</expr_stmt>

    <return pos:start="583:5" pos:end="583:13">return <expr pos:start="583:12" pos:end="583:12"><literal type="number" pos:start="583:12" pos:end="583:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
