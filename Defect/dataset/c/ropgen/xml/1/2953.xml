<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2953.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">bdrv_close</name><parameter_list pos:start="1:23" pos:end="1:44">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:41"><name pos:start="1:24" pos:end="1:39">BlockDriverState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:25">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">BdrvAioNotifier</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ban</name></decl>, <decl pos:start="5:27" pos:end="5:35"><type ref="prev" pos:start="5:5" pos:end="5:21"><modifier pos:start="5:27" pos:end="5:27">*</modifier></type><name pos:start="5:28" pos:end="5:35">ban_next</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:21"><expr pos:start="9:5" pos:end="9:20"><call pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:10">assert</name><argument_list pos:start="9:11" pos:end="9:20">(<argument pos:start="9:12" pos:end="9:19"><expr pos:start="9:12" pos:end="9:19"><operator pos:start="9:12" pos:end="9:12">!</operator><name pos:start="9:13" pos:end="9:19"><name pos:start="9:13" pos:end="9:14">bs</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:19">job</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><call pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:23">(<argument pos:start="11:12" pos:end="11:22"><expr pos:start="11:12" pos:end="11:22"><operator pos:start="11:12" pos:end="11:12">!</operator><name pos:start="11:13" pos:end="11:22"><name pos:start="11:13" pos:end="11:14">bs</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:22">refcnt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><call pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:22">bdrv_drained_begin</name><argument_list pos:start="15:23" pos:end="15:26">(<argument pos:start="15:24" pos:end="15:25"><expr pos:start="15:24" pos:end="15:25"><name pos:start="15:24" pos:end="15:25">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="15:29" pos:end="15:46">/* complete I/O */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><call pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:14">bdrv_flush</name><argument_list pos:start="17:15" pos:end="17:18">(<argument pos:start="17:16" pos:end="17:17"><expr pos:start="17:16" pos:end="17:17"><name pos:start="17:16" pos:end="17:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><call pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:14">bdrv_drain</name><argument_list pos:start="19:15" pos:end="19:18">(<argument pos:start="19:16" pos:end="19:17"><expr pos:start="19:16" pos:end="19:17"><name pos:start="19:16" pos:end="19:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="19:21" pos:end="19:56">/* in case flush left pending I/O */</comment>



    <if_stmt pos:start="23:5" pos:end="95:5"><if pos:start="23:5" pos:end="95:5">if <condition pos:start="23:8" pos:end="23:16">(<expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:10">bs</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:15">drv</name></name></expr>)</condition> <block pos:start="23:18" pos:end="95:5">{<block_content pos:start="25:9" pos:end="93:37">

        <decl_stmt pos:start="25:9" pos:end="25:32"><decl pos:start="25:9" pos:end="25:24"><type pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:17">BdrvChild</name> <modifier pos:start="25:19" pos:end="25:19">*</modifier></type><name pos:start="25:20" pos:end="25:24">child</name></decl>, <decl pos:start="25:27" pos:end="25:31"><type ref="prev" pos:start="25:9" pos:end="25:19"><modifier pos:start="25:27" pos:end="25:27">*</modifier></type><name pos:start="25:28" pos:end="25:31">next</name></decl>;</decl_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:31"><call pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:10">bs</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:15">drv</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:27">bdrv_close</name></name><argument_list pos:start="29:28" pos:end="29:31">(<argument pos:start="29:29" pos:end="29:30"><expr pos:start="29:29" pos:end="29:30"><name pos:start="29:29" pos:end="29:30">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:23"><expr pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:10">bs</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:15">drv</name></name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:22">NULL</name></expr>;</expr_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:52"><expr pos:start="35:9" pos:end="35:51"><call pos:start="35:9" pos:end="35:51"><name pos:start="35:9" pos:end="35:27">bdrv_set_backing_hd</name><argument_list pos:start="35:28" pos:end="35:51">(<argument pos:start="35:29" pos:end="35:30"><expr pos:start="35:29" pos:end="35:30"><name pos:start="35:29" pos:end="35:30">bs</name></expr></argument>, <argument pos:start="35:33" pos:end="35:36"><expr pos:start="35:33" pos:end="35:36"><name pos:start="35:33" pos:end="35:36">NULL</name></expr></argument>, <argument pos:start="35:39" pos:end="35:50"><expr pos:start="35:39" pos:end="35:50"><operator pos:start="35:39" pos:end="35:39">&amp;</operator><name pos:start="35:40" pos:end="35:50">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:29">(<expr pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:20"><name pos:start="39:13" pos:end="39:14">bs</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:20">file</name></name> <operator pos:start="39:22" pos:end="39:23">!=</operator> <name pos:start="39:25" pos:end="39:28">NULL</name></expr>)</condition> <block pos:start="39:31" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:28">

            <expr_stmt pos:start="41:13" pos:end="41:43"><expr pos:start="41:13" pos:end="41:42"><call pos:start="41:13" pos:end="41:42"><name pos:start="41:13" pos:end="41:28">bdrv_unref_child</name><argument_list pos:start="41:29" pos:end="41:42">(<argument pos:start="41:30" pos:end="41:31"><expr pos:start="41:30" pos:end="41:31"><name pos:start="41:30" pos:end="41:31">bs</name></expr></argument>, <argument pos:start="41:34" pos:end="41:41"><expr pos:start="41:34" pos:end="41:41"><name pos:start="41:34" pos:end="41:41"><name pos:start="41:34" pos:end="41:35">bs</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:41">file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:28"><expr pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:14">bs</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:20">file</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:27">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <macro pos:start="49:9" pos:end="49:60"><name pos:start="49:9" pos:end="49:26">QLIST_FOREACH_SAFE</name><argument_list pos:start="49:27" pos:end="49:60">(<argument pos:start="49:28" pos:end="49:32">child</argument>, <argument pos:start="49:35" pos:end="49:47">&amp;bs-&gt;children</argument>, <argument pos:start="49:50" pos:end="49:53">next</argument>, <argument pos:start="49:56" pos:end="49:59">next</argument>)</argument_list></macro> <block pos:start="49:62" pos:end="63:9">{<block_content pos:start="55:13" pos:end="61:37">

            <comment type="block" pos:start="51:13" pos:end="53:41">/* TODO Remove bdrv_unref() from drivers' close function and use

             * bdrv_unref_child() here */</comment>

            <if_stmt pos:start="55:13" pos:end="59:13"><if pos:start="55:13" pos:end="59:13">if <condition pos:start="55:16" pos:end="55:47">(<expr pos:start="55:17" pos:end="55:46"><name pos:start="55:17" pos:end="55:40"><name pos:start="55:17" pos:end="55:21">child</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:25">bs</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:40">inherits_from</name></name> <operator pos:start="55:42" pos:end="55:43">==</operator> <name pos:start="55:45" pos:end="55:46">bs</name></expr>)</condition> <block pos:start="55:49" pos:end="59:13">{<block_content pos:start="57:17" pos:end="57:48">

                <expr_stmt pos:start="57:17" pos:end="57:48"><expr pos:start="57:17" pos:end="57:47"><name pos:start="57:17" pos:end="57:40"><name pos:start="57:17" pos:end="57:21">child</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:25">bs</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:40">inherits_from</name></name> <operator pos:start="57:42" pos:end="57:42">=</operator> <name pos:start="57:44" pos:end="57:47">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:37"><expr pos:start="61:13" pos:end="61:36"><call pos:start="61:13" pos:end="61:36"><name pos:start="61:13" pos:end="61:29">bdrv_detach_child</name><argument_list pos:start="61:30" pos:end="61:36">(<argument pos:start="61:31" pos:end="61:35"><expr pos:start="61:31" pos:end="61:35"><name pos:start="61:31" pos:end="61:35">child</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>



        <expr_stmt pos:start="67:9" pos:end="67:27"><expr pos:start="67:9" pos:end="67:26"><call pos:start="67:9" pos:end="67:26"><name pos:start="67:9" pos:end="67:14">g_free</name><argument_list pos:start="67:15" pos:end="67:26">(<argument pos:start="67:16" pos:end="67:25"><expr pos:start="67:16" pos:end="67:25"><name pos:start="67:16" pos:end="67:25"><name pos:start="67:16" pos:end="67:17">bs</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:25">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:26"><expr pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:18"><name pos:start="69:9" pos:end="69:10">bs</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:18">opaque</name></name> <operator pos:start="69:20" pos:end="69:20">=</operator> <name pos:start="69:22" pos:end="69:25">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:41"><expr pos:start="71:9" pos:end="71:40"><call pos:start="71:9" pos:end="71:40"><name pos:start="71:9" pos:end="71:18">atomic_set</name><argument_list pos:start="71:19" pos:end="71:40">(<argument pos:start="71:20" pos:end="71:36"><expr pos:start="71:20" pos:end="71:36"><operator pos:start="71:20" pos:end="71:20">&amp;</operator><name pos:start="71:21" pos:end="71:36"><name pos:start="71:21" pos:end="71:22">bs</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:36">copy_on_read</name></name></expr></argument>, <argument pos:start="71:39" pos:end="71:39"><expr pos:start="71:39" pos:end="71:39"><literal type="number" pos:start="71:39" pos:end="71:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:35"><expr pos:start="73:9" pos:end="73:34"><name pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:10">bs</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:24">backing_file</name><index pos:start="73:25" pos:end="73:27">[<expr pos:start="73:26" pos:end="73:26"><literal type="number" pos:start="73:26" pos:end="73:26">0</literal></expr>]</index></name> <operator pos:start="73:29" pos:end="73:29">=</operator> <literal type="char" pos:start="73:31" pos:end="73:34">'\0'</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:37"><expr pos:start="75:9" pos:end="75:36"><name pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:10">bs</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:26">backing_format</name><index pos:start="75:27" pos:end="75:29">[<expr pos:start="75:28" pos:end="75:28"><literal type="number" pos:start="75:28" pos:end="75:28">0</literal></expr>]</index></name> <operator pos:start="75:31" pos:end="75:31">=</operator> <literal type="char" pos:start="75:33" pos:end="75:36">'\0'</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:30"><expr pos:start="77:9" pos:end="77:29"><name pos:start="77:9" pos:end="77:25"><name pos:start="77:9" pos:end="77:10">bs</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:25">total_sectors</name></name> <operator pos:start="77:27" pos:end="77:27">=</operator> <literal type="number" pos:start="77:29" pos:end="77:29">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:30"><expr pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:21"><name pos:start="79:9" pos:end="79:10">bs</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:21">encrypted</name></name> <operator pos:start="79:23" pos:end="79:23">=</operator> <name pos:start="79:25" pos:end="79:29">false</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:23"><expr pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:14"><name pos:start="81:9" pos:end="81:10">bs</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:14">sg</name></name> <operator pos:start="81:16" pos:end="81:16">=</operator> <name pos:start="81:18" pos:end="81:22">false</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:29"><expr pos:start="83:9" pos:end="83:28"><call pos:start="83:9" pos:end="83:28"><name pos:start="83:9" pos:end="83:15">QDECREF</name><argument_list pos:start="83:16" pos:end="83:28">(<argument pos:start="83:17" pos:end="83:27"><expr pos:start="83:17" pos:end="83:27"><name pos:start="83:17" pos:end="83:27"><name pos:start="83:17" pos:end="83:18">bs</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:27">options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:38"><expr pos:start="85:9" pos:end="85:37"><call pos:start="85:9" pos:end="85:37"><name pos:start="85:9" pos:end="85:15">QDECREF</name><argument_list pos:start="85:16" pos:end="85:37">(<argument pos:start="85:17" pos:end="85:36"><expr pos:start="85:17" pos:end="85:36"><name pos:start="85:17" pos:end="85:36"><name pos:start="85:17" pos:end="85:18">bs</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:36">explicit_options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:27"><expr pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:10">bs</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:19">options</name></name> <operator pos:start="87:21" pos:end="87:21">=</operator> <name pos:start="87:23" pos:end="87:26">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:36"><expr pos:start="89:9" pos:end="89:35"><name pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:10">bs</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:28">explicit_options</name></name> <operator pos:start="89:30" pos:end="89:30">=</operator> <name pos:start="89:32" pos:end="89:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:39"><expr pos:start="91:9" pos:end="91:38"><call pos:start="91:9" pos:end="91:38"><name pos:start="91:9" pos:end="91:15">QDECREF</name><argument_list pos:start="91:16" pos:end="91:38">(<argument pos:start="91:17" pos:end="91:37"><expr pos:start="91:17" pos:end="91:37"><name pos:start="91:17" pos:end="91:37"><name pos:start="91:17" pos:end="91:18">bs</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:37">full_open_options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:37"><expr pos:start="93:9" pos:end="93:36"><name pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:10">bs</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:29">full_open_options</name></name> <operator pos:start="93:31" pos:end="93:31">=</operator> <name pos:start="93:33" pos:end="93:36">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:41"><expr pos:start="99:5" pos:end="99:40"><call pos:start="99:5" pos:end="99:40"><name pos:start="99:5" pos:end="99:36">bdrv_release_named_dirty_bitmaps</name><argument_list pos:start="99:37" pos:end="99:40">(<argument pos:start="99:38" pos:end="99:39"><expr pos:start="99:38" pos:end="99:39"><name pos:start="99:38" pos:end="99:39">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:44"><expr pos:start="101:5" pos:end="101:43"><call pos:start="101:5" pos:end="101:43"><name pos:start="101:5" pos:end="101:10">assert</name><argument_list pos:start="101:11" pos:end="101:43">(<argument pos:start="101:12" pos:end="101:42"><expr pos:start="101:12" pos:end="101:42"><call pos:start="101:12" pos:end="101:42"><name pos:start="101:12" pos:end="101:22">QLIST_EMPTY</name><argument_list pos:start="101:23" pos:end="101:42">(<argument pos:start="101:24" pos:end="101:41"><expr pos:start="101:24" pos:end="101:41"><operator pos:start="101:24" pos:end="101:24">&amp;</operator><name pos:start="101:25" pos:end="101:41"><name pos:start="101:25" pos:end="101:26">bs</name><operator pos:start="101:27" pos:end="101:28">-&gt;</operator><name pos:start="101:29" pos:end="101:41">dirty_bitmaps</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <macro pos:start="105:5" pos:end="105:63"><name pos:start="105:5" pos:end="105:22">QLIST_FOREACH_SAFE</name><argument_list pos:start="105:23" pos:end="105:63">(<argument pos:start="105:24" pos:end="105:26">ban</argument>, <argument pos:start="105:29" pos:end="105:46">&amp;bs-&gt;aio_notifiers</argument>, <argument pos:start="105:49" pos:end="105:52">list</argument>, <argument pos:start="105:55" pos:end="105:62">ban_next</argument>)</argument_list></macro> <block pos:start="105:65" pos:end="109:5">{<block_content pos:start="107:9" pos:end="107:20">

        <expr_stmt pos:start="107:9" pos:end="107:20"><expr pos:start="107:9" pos:end="107:19"><call pos:start="107:9" pos:end="107:19"><name pos:start="107:9" pos:end="107:14">g_free</name><argument_list pos:start="107:15" pos:end="107:19">(<argument pos:start="107:16" pos:end="107:18"><expr pos:start="107:16" pos:end="107:18"><name pos:start="107:16" pos:end="107:18">ban</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="111:5" pos:end="111:35"><expr pos:start="111:5" pos:end="111:34"><call pos:start="111:5" pos:end="111:34"><name pos:start="111:5" pos:end="111:14">QLIST_INIT</name><argument_list pos:start="111:15" pos:end="111:34">(<argument pos:start="111:16" pos:end="111:33"><expr pos:start="111:16" pos:end="111:33"><operator pos:start="111:16" pos:end="111:16">&amp;</operator><name pos:start="111:17" pos:end="111:33"><name pos:start="111:17" pos:end="111:18">bs</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:33">aio_notifiers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:25"><expr pos:start="113:5" pos:end="113:24"><call pos:start="113:5" pos:end="113:24"><name pos:start="113:5" pos:end="113:20">bdrv_drained_end</name><argument_list pos:start="113:21" pos:end="113:24">(<argument pos:start="113:22" pos:end="113:23"><expr pos:start="113:22" pos:end="113:23"><name pos:start="113:22" pos:end="113:23">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
