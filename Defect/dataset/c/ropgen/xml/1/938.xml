<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/938.c" pos:tabs="8"><function pos:start="1:1" pos:end="241:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:26">ff_h264_build_ref_list</name><parameter_list pos:start="1:27" pos:end="1:64">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:38">H264Context</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">h</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:63"><decl pos:start="1:44" pos:end="1:63"><type pos:start="1:44" pos:end="1:63"><name pos:start="1:44" pos:end="1:59">H264SliceContext</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">sl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="241:1">{<block_content pos:start="5:5" pos:end="239:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">list</name></decl>, <decl pos:start="5:15" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:19">index</name></decl>, <decl pos:start="5:22" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:34">pic_structure</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:24"><expr pos:start="9:5" pos:end="9:23"><call pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:20">print_short_term</name><argument_list pos:start="9:21" pos:end="9:23">(<argument pos:start="9:22" pos:end="9:22"><expr pos:start="9:22" pos:end="9:22"><name pos:start="9:22" pos:end="9:22">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:23"><expr pos:start="11:5" pos:end="11:22"><call pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:19">print_long_term</name><argument_list pos:start="11:20" pos:end="11:22">(<argument pos:start="11:21" pos:end="11:21"><expr pos:start="11:21" pos:end="11:21"><name pos:start="11:21" pos:end="11:21">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><call pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:28">h264_initialise_ref_list</name><argument_list pos:start="15:29" pos:end="15:35">(<argument pos:start="15:30" pos:end="15:30"><expr pos:start="15:30" pos:end="15:30"><name pos:start="15:30" pos:end="15:30">h</name></expr></argument>, <argument pos:start="15:33" pos:end="15:34"><expr pos:start="15:33" pos:end="15:34"><name pos:start="15:33" pos:end="15:34">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="19:5" pos:end="195:5">for <control pos:start="19:9" pos:end="19:49">(<init pos:start="19:10" pos:end="19:18"><expr pos:start="19:10" pos:end="19:17"><name pos:start="19:10" pos:end="19:13">list</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr>;</init> <condition pos:start="19:20" pos:end="19:41"><expr pos:start="19:20" pos:end="19:40"><name pos:start="19:20" pos:end="19:23">list</name> <operator pos:start="19:25" pos:end="19:25">&lt;</operator> <name pos:start="19:27" pos:end="19:40"><name pos:start="19:27" pos:end="19:28">sl</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:40">list_count</name></name></expr>;</condition> <incr pos:start="19:43" pos:end="19:48"><expr pos:start="19:43" pos:end="19:48"><name pos:start="19:43" pos:end="19:46">list</name><operator pos:start="19:47" pos:end="19:48">++</operator></expr></incr>)</control> <block pos:start="19:51" pos:end="195:5">{<block_content pos:start="21:9" pos:end="193:9">

        <decl_stmt pos:start="21:9" pos:end="21:36"><decl pos:start="21:9" pos:end="21:35"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:16">pred</name> <init pos:start="21:18" pos:end="21:35">= <expr pos:start="21:20" pos:end="21:35"><name pos:start="21:20" pos:end="21:35"><name pos:start="21:20" pos:end="21:21">sl</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:35">curr_pic_num</name></name></expr></init></decl>;</decl_stmt>



        <for pos:start="25:9" pos:end="193:9">for <control pos:start="25:13" pos:end="25:72">(<init pos:start="25:14" pos:end="25:23"><expr pos:start="25:14" pos:end="25:22"><name pos:start="25:14" pos:end="25:18">index</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr>;</init> <condition pos:start="25:25" pos:end="25:63"><expr pos:start="25:25" pos:end="25:62"><name pos:start="25:25" pos:end="25:29">index</name> <operator pos:start="25:31" pos:end="25:31">&lt;</operator> <name pos:start="25:33" pos:end="25:62"><name pos:start="25:33" pos:end="25:34">sl</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:56">nb_ref_modifications</name><index pos:start="25:57" pos:end="25:62">[<expr pos:start="25:58" pos:end="25:61"><name pos:start="25:58" pos:end="25:61">list</name></expr>]</index></name></expr>;</condition> <incr pos:start="25:65" pos:end="25:71"><expr pos:start="25:65" pos:end="25:71"><name pos:start="25:65" pos:end="25:69">index</name><operator pos:start="25:70" pos:end="25:71">++</operator></expr></incr>)</control> <block pos:start="25:74" pos:end="193:9">{<block_content pos:start="27:13" pos:end="191:13">

            <decl_stmt pos:start="27:13" pos:end="27:94"><decl pos:start="27:13" pos:end="27:93"><type pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:20">unsigned</name> <name pos:start="27:22" pos:end="27:24">int</name></type> <name pos:start="27:26" pos:end="27:53">modification_of_pic_nums_idc</name> <init pos:start="27:55" pos:end="27:93">= <expr pos:start="27:57" pos:end="27:93"><name pos:start="27:57" pos:end="27:90"><name pos:start="27:57" pos:end="27:58">sl</name><operator pos:start="27:59" pos:end="27:60">-&gt;</operator><name pos:start="27:61" pos:end="27:77">ref_modifications</name><index pos:start="27:78" pos:end="27:83">[<expr pos:start="27:79" pos:end="27:82"><name pos:start="27:79" pos:end="27:82">list</name></expr>]</index><index pos:start="27:84" pos:end="27:90">[<expr pos:start="27:85" pos:end="27:89"><name pos:start="27:85" pos:end="27:89">index</name></expr>]</index></name><operator pos:start="27:91" pos:end="27:91">.</operator><name pos:start="27:92" pos:end="27:93">op</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="29:13" pos:end="29:95"><decl pos:start="29:13" pos:end="29:94"><type pos:start="29:13" pos:end="29:24"><name pos:start="29:13" pos:end="29:20">unsigned</name> <name pos:start="29:22" pos:end="29:24">int</name></type>                          <name pos:start="29:51" pos:end="29:53">val</name> <init pos:start="29:55" pos:end="29:94">= <expr pos:start="29:57" pos:end="29:94"><name pos:start="29:57" pos:end="29:90"><name pos:start="29:57" pos:end="29:58">sl</name><operator pos:start="29:59" pos:end="29:60">-&gt;</operator><name pos:start="29:61" pos:end="29:77">ref_modifications</name><index pos:start="29:78" pos:end="29:83">[<expr pos:start="29:79" pos:end="29:82"><name pos:start="29:79" pos:end="29:82">list</name></expr>]</index><index pos:start="29:84" pos:end="29:90">[<expr pos:start="29:85" pos:end="29:89"><name pos:start="29:85" pos:end="29:89">index</name></expr>]</index></name><operator pos:start="29:91" pos:end="29:91">.</operator><name pos:start="29:92" pos:end="29:94">val</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="31:13" pos:end="31:32"><decl pos:start="31:13" pos:end="31:31"><type pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:20">unsigned</name> <name pos:start="31:22" pos:end="31:24">int</name></type> <name pos:start="31:26" pos:end="31:31">pic_id</name></decl>;</decl_stmt>

            <decl_stmt pos:start="33:13" pos:end="33:18"><decl pos:start="33:13" pos:end="33:17"><type pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">int</name></type> <name pos:start="33:17" pos:end="33:17">i</name></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:36"><decl pos:start="35:13" pos:end="35:35"><type pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:23">H264Picture</name> <modifier pos:start="35:25" pos:end="35:25">*</modifier></type><name pos:start="35:26" pos:end="35:28">ref</name> <init pos:start="35:30" pos:end="35:35">= <expr pos:start="35:32" pos:end="35:35"><name pos:start="35:32" pos:end="35:35">NULL</name></expr></init></decl>;</decl_stmt>



            <switch pos:start="39:13" pos:end="151:13">switch <condition pos:start="39:20" pos:end="39:49">(<expr pos:start="39:21" pos:end="39:48"><name pos:start="39:21" pos:end="39:48">modification_of_pic_nums_idc</name></expr>)</condition> <block pos:start="39:51" pos:end="151:13">{<block_content pos:start="41:13" pos:end="149:30">

            <case pos:start="41:13" pos:end="41:19">case <expr pos:start="41:18" pos:end="41:18"><literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>:</case>

            <case pos:start="43:13" pos:end="43:19">case <expr pos:start="43:18" pos:end="43:18"><literal type="number" pos:start="43:18" pos:end="43:18">1</literal></expr>:</case> <block pos:start="43:21" pos:end="101:13">{<block_content pos:start="45:17" pos:end="99:22">

                <decl_stmt pos:start="45:17" pos:end="45:62"><decl pos:start="45:17" pos:end="45:61"><type pos:start="45:17" pos:end="45:34"><specifier pos:start="45:17" pos:end="45:21">const</specifier> <name pos:start="45:23" pos:end="45:30">unsigned</name> <name pos:start="45:32" pos:end="45:34">int</name></type> <name pos:start="45:36" pos:end="45:51">abs_diff_pic_num</name> <init pos:start="45:53" pos:end="45:61">= <expr pos:start="45:55" pos:end="45:61"><name pos:start="45:55" pos:end="45:57">val</name> <operator pos:start="45:59" pos:end="45:59">+</operator> <literal type="number" pos:start="45:61" pos:end="45:61">1</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="47:17" pos:end="47:30"><decl pos:start="47:17" pos:end="47:29"><type pos:start="47:17" pos:end="47:19"><name pos:start="47:17" pos:end="47:19">int</name></type> <name pos:start="47:21" pos:end="47:29">frame_num</name></decl>;</decl_stmt>



                <if_stmt pos:start="51:17" pos:end="59:17"><if pos:start="51:17" pos:end="59:17">if <condition pos:start="51:20" pos:end="51:55">(<expr pos:start="51:21" pos:end="51:54"><name pos:start="51:21" pos:end="51:36">abs_diff_pic_num</name> <operator pos:start="51:38" pos:end="51:38">&gt;</operator> <name pos:start="51:40" pos:end="51:54"><name pos:start="51:40" pos:end="51:41">sl</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:54">max_pic_num</name></name></expr>)</condition> <block pos:start="51:57" pos:end="59:17">{<block_content pos:start="53:21" pos:end="57:47">

                    <expr_stmt pos:start="53:21" pos:end="55:58"><expr pos:start="53:21" pos:end="55:57"><call pos:start="53:21" pos:end="55:57"><name pos:start="53:21" pos:end="53:26">av_log</name><argument_list pos:start="53:27" pos:end="55:57">(<argument pos:start="53:28" pos:end="53:35"><expr pos:start="53:28" pos:end="53:35"><name pos:start="53:28" pos:end="53:35"><name pos:start="53:28" pos:end="53:28">h</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:35">avctx</name></name></expr></argument>, <argument pos:start="53:38" pos:end="53:49"><expr pos:start="53:38" pos:end="53:49"><name pos:start="53:38" pos:end="53:49">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="55:28" pos:end="55:56"><expr pos:start="55:28" pos:end="55:56"><literal type="string" pos:start="55:28" pos:end="55:56">"abs_diff_pic_num overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="57:21" pos:end="57:47">return <expr pos:start="57:28" pos:end="57:46"><name pos:start="57:28" pos:end="57:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="63:17" pos:end="69:45"><if pos:start="63:17" pos:end="65:45">if <condition pos:start="63:20" pos:end="63:54">(<expr pos:start="63:21" pos:end="63:53"><name pos:start="63:21" pos:end="63:48">modification_of_pic_nums_idc</name> <operator pos:start="63:50" pos:end="63:51">==</operator> <literal type="number" pos:start="63:53" pos:end="63:53">0</literal></expr>)</condition><block type="pseudo" pos:start="65:21" pos:end="65:45"><block_content pos:start="65:21" pos:end="65:45">

                    <expr_stmt pos:start="65:21" pos:end="65:45"><expr pos:start="65:21" pos:end="65:44"><name pos:start="65:21" pos:end="65:24">pred</name> <operator pos:start="65:26" pos:end="65:27">-=</operator> <name pos:start="65:29" pos:end="65:44">abs_diff_pic_num</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="67:17" pos:end="69:45">else<block type="pseudo" pos:start="69:21" pos:end="69:45"><block_content pos:start="69:21" pos:end="69:45">

                    <expr_stmt pos:start="69:21" pos:end="69:45"><expr pos:start="69:21" pos:end="69:44"><name pos:start="69:21" pos:end="69:24">pred</name> <operator pos:start="69:26" pos:end="69:27">+=</operator> <name pos:start="69:29" pos:end="69:44">abs_diff_pic_num</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:44"><expr pos:start="71:17" pos:end="71:43"><name pos:start="71:17" pos:end="71:20">pred</name> <operator pos:start="71:22" pos:end="71:23">&amp;=</operator> <name pos:start="71:25" pos:end="71:39"><name pos:start="71:25" pos:end="71:26">sl</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:39">max_pic_num</name></name> <operator pos:start="71:41" pos:end="71:41">-</operator> <literal type="number" pos:start="71:43" pos:end="71:43">1</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="75:17" pos:end="75:69"><expr pos:start="75:17" pos:end="75:68"><name pos:start="75:17" pos:end="75:25">frame_num</name> <operator pos:start="75:27" pos:end="75:27">=</operator> <call pos:start="75:29" pos:end="75:68"><name pos:start="75:29" pos:end="75:43">pic_num_extract</name><argument_list pos:start="75:44" pos:end="75:68">(<argument pos:start="75:45" pos:end="75:45"><expr pos:start="75:45" pos:end="75:45"><name pos:start="75:45" pos:end="75:45">h</name></expr></argument>, <argument pos:start="75:48" pos:end="75:51"><expr pos:start="75:48" pos:end="75:51"><name pos:start="75:48" pos:end="75:51">pred</name></expr></argument>, <argument pos:start="75:54" pos:end="75:67"><expr pos:start="75:54" pos:end="75:67"><operator pos:start="75:54" pos:end="75:54">&amp;</operator><name pos:start="75:55" pos:end="75:67">pic_structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <for pos:start="79:17" pos:end="93:17">for <control pos:start="79:21" pos:end="79:61">(<init pos:start="79:22" pos:end="79:48"><expr pos:start="79:22" pos:end="79:47"><name pos:start="79:22" pos:end="79:22">i</name> <operator pos:start="79:24" pos:end="79:24">=</operator> <name pos:start="79:26" pos:end="79:43"><name pos:start="79:26" pos:end="79:26">h</name><operator pos:start="79:27" pos:end="79:28">-&gt;</operator><name pos:start="79:29" pos:end="79:43">short_ref_count</name></name> <operator pos:start="79:45" pos:end="79:45">-</operator> <literal type="number" pos:start="79:47" pos:end="79:47">1</literal></expr>;</init> <condition pos:start="79:50" pos:end="79:56"><expr pos:start="79:50" pos:end="79:55"><name pos:start="79:50" pos:end="79:50">i</name> <operator pos:start="79:52" pos:end="79:53">&gt;=</operator> <literal type="number" pos:start="79:55" pos:end="79:55">0</literal></expr>;</condition> <incr pos:start="79:58" pos:end="79:60"><expr pos:start="79:58" pos:end="79:60"><name pos:start="79:58" pos:end="79:58">i</name><operator pos:start="79:59" pos:end="79:60">--</operator></expr></incr>)</control> <block pos:start="79:63" pos:end="93:17">{<block_content pos:start="81:21" pos:end="91:30">

                    <expr_stmt pos:start="81:21" pos:end="81:42"><expr pos:start="81:21" pos:end="81:41"><name pos:start="81:21" pos:end="81:23">ref</name> <operator pos:start="81:25" pos:end="81:25">=</operator> <name pos:start="81:27" pos:end="81:41"><name pos:start="81:27" pos:end="81:27">h</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:38">short_ref</name><index pos:start="81:39" pos:end="81:41">[<expr pos:start="81:40" pos:end="81:40"><name pos:start="81:40" pos:end="81:40">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:43"><expr pos:start="83:21" pos:end="83:42"><call pos:start="83:21" pos:end="83:42"><name pos:start="83:21" pos:end="83:26">assert</name><argument_list pos:start="83:27" pos:end="83:42">(<argument pos:start="83:28" pos:end="83:41"><expr pos:start="83:28" pos:end="83:41"><name pos:start="83:28" pos:end="83:41"><name pos:start="83:28" pos:end="83:30">ref</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:41">reference</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:43"><expr pos:start="85:21" pos:end="85:42"><call pos:start="85:21" pos:end="85:42"><name pos:start="85:21" pos:end="85:26">assert</name><argument_list pos:start="85:27" pos:end="85:42">(<argument pos:start="85:28" pos:end="85:41"><expr pos:start="85:28" pos:end="85:41"><operator pos:start="85:28" pos:end="85:28">!</operator><name pos:start="85:29" pos:end="85:41"><name pos:start="85:29" pos:end="85:31">ref</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:41">long_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="87:21" pos:end="91:30"><if pos:start="87:21" pos:end="91:30">if <condition pos:start="87:24" pos:end="89:57">(<expr pos:start="87:25" pos:end="89:56"><name pos:start="87:25" pos:end="87:38"><name pos:start="87:25" pos:end="87:27">ref</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:38">frame_num</name></name> <operator pos:start="87:40" pos:end="87:41">==</operator> <name pos:start="87:43" pos:end="87:51">frame_num</name> <operator pos:start="87:53" pos:end="87:54">&amp;&amp;</operator>

                        <operator pos:start="89:25" pos:end="89:25">(</operator><name pos:start="89:26" pos:end="89:39"><name pos:start="89:26" pos:end="89:28">ref</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:39">reference</name></name> <operator pos:start="89:41" pos:end="89:41">&amp;</operator> <name pos:start="89:43" pos:end="89:55">pic_structure</name><operator pos:start="89:56" pos:end="89:56">)</operator></expr>)</condition><block type="pseudo" pos:start="91:25" pos:end="91:30"><block_content pos:start="91:25" pos:end="91:30">

                        <break pos:start="91:25" pos:end="91:30">break;</break></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="95:17" pos:end="97:39"><if pos:start="95:17" pos:end="97:39">if <condition pos:start="95:20" pos:end="95:27">(<expr pos:start="95:21" pos:end="95:26"><name pos:start="95:21" pos:end="95:21">i</name> <operator pos:start="95:23" pos:end="95:24">&gt;=</operator> <literal type="number" pos:start="95:26" pos:end="95:26">0</literal></expr>)</condition><block type="pseudo" pos:start="97:21" pos:end="97:39"><block_content pos:start="97:21" pos:end="97:39">

                    <expr_stmt pos:start="97:21" pos:end="97:39"><expr pos:start="97:21" pos:end="97:38"><name pos:start="97:21" pos:end="97:31"><name pos:start="97:21" pos:end="97:23">ref</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:31">pic_id</name></name> <operator pos:start="97:33" pos:end="97:33">=</operator> <name pos:start="97:35" pos:end="97:38">pred</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="99:17" pos:end="99:22">break;</break>

            </block_content>}</block>

            <case pos:start="103:13" pos:end="103:19">case <expr pos:start="103:18" pos:end="103:18"><literal type="number" pos:start="103:18" pos:end="103:18">2</literal></expr>:</case> <block pos:start="103:21" pos:end="145:13">{<block_content pos:start="105:17" pos:end="143:22">

                <decl_stmt pos:start="105:17" pos:end="105:29"><decl pos:start="105:17" pos:end="105:28"><type pos:start="105:17" pos:end="105:19"><name pos:start="105:17" pos:end="105:19">int</name></type> <name pos:start="105:21" pos:end="105:28">long_idx</name></decl>;</decl_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:29"><expr pos:start="107:17" pos:end="107:28"><name pos:start="107:17" pos:end="107:22">pic_id</name> <operator pos:start="107:24" pos:end="107:24">=</operator> <name pos:start="107:26" pos:end="107:28">val</name></expr>;</expr_stmt> <comment type="line" pos:start="107:31" pos:end="107:50">// long_term_pic_idx</comment>



                <expr_stmt pos:start="111:17" pos:end="111:70"><expr pos:start="111:17" pos:end="111:69"><name pos:start="111:17" pos:end="111:24">long_idx</name> <operator pos:start="111:26" pos:end="111:26">=</operator> <call pos:start="111:28" pos:end="111:69"><name pos:start="111:28" pos:end="111:42">pic_num_extract</name><argument_list pos:start="111:43" pos:end="111:69">(<argument pos:start="111:44" pos:end="111:44"><expr pos:start="111:44" pos:end="111:44"><name pos:start="111:44" pos:end="111:44">h</name></expr></argument>, <argument pos:start="111:47" pos:end="111:52"><expr pos:start="111:47" pos:end="111:52"><name pos:start="111:47" pos:end="111:52">pic_id</name></expr></argument>, <argument pos:start="111:55" pos:end="111:68"><expr pos:start="111:55" pos:end="111:68"><operator pos:start="111:55" pos:end="111:55">&amp;</operator><name pos:start="111:56" pos:end="111:68">pic_structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="115:17" pos:end="123:17"><if pos:start="115:17" pos:end="123:17">if <condition pos:start="115:20" pos:end="115:35">(<expr pos:start="115:21" pos:end="115:34"><name pos:start="115:21" pos:end="115:28">long_idx</name> <operator pos:start="115:30" pos:end="115:30">&gt;</operator> <literal type="number" pos:start="115:32" pos:end="115:34">31U</literal></expr>)</condition> <block pos:start="115:37" pos:end="123:17">{<block_content pos:start="117:21" pos:end="121:47">

                    <expr_stmt pos:start="117:21" pos:end="119:59"><expr pos:start="117:21" pos:end="119:58"><call pos:start="117:21" pos:end="119:58"><name pos:start="117:21" pos:end="117:26">av_log</name><argument_list pos:start="117:27" pos:end="119:58">(<argument pos:start="117:28" pos:end="117:35"><expr pos:start="117:28" pos:end="117:35"><name pos:start="117:28" pos:end="117:35"><name pos:start="117:28" pos:end="117:28">h</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:35">avctx</name></name></expr></argument>, <argument pos:start="117:38" pos:end="117:49"><expr pos:start="117:38" pos:end="117:49"><name pos:start="117:38" pos:end="117:49">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="119:28" pos:end="119:57"><expr pos:start="119:28" pos:end="119:57"><literal type="string" pos:start="119:28" pos:end="119:57">"long_term_pic_idx overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="121:21" pos:end="121:47">return <expr pos:start="121:28" pos:end="121:46"><name pos:start="121:28" pos:end="121:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:44"><expr pos:start="125:17" pos:end="125:43"><name pos:start="125:17" pos:end="125:19">ref</name> <operator pos:start="125:21" pos:end="125:21">=</operator> <name pos:start="125:23" pos:end="125:43"><name pos:start="125:23" pos:end="125:23">h</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:33">long_ref</name><index pos:start="125:34" pos:end="125:43">[<expr pos:start="125:35" pos:end="125:42"><name pos:start="125:35" pos:end="125:42">long_idx</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:50"><expr pos:start="127:17" pos:end="127:49"><call pos:start="127:17" pos:end="127:49"><name pos:start="127:17" pos:end="127:22">assert</name><argument_list pos:start="127:23" pos:end="127:49">(<argument pos:start="127:24" pos:end="127:48"><expr pos:start="127:24" pos:end="127:48"><operator pos:start="127:24" pos:end="127:24">!</operator><operator pos:start="127:25" pos:end="127:25">(</operator><name pos:start="127:26" pos:end="127:28">ref</name> <operator pos:start="127:30" pos:end="127:31">&amp;&amp;</operator> <operator pos:start="127:33" pos:end="127:33">!</operator><name pos:start="127:34" pos:end="127:47"><name pos:start="127:34" pos:end="127:36">ref</name><operator pos:start="127:37" pos:end="127:38">-&gt;</operator><name pos:start="127:39" pos:end="127:47">reference</name></name><operator pos:start="127:48" pos:end="127:48">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="129:17" pos:end="141:17"><if pos:start="129:17" pos:end="137:17">if <condition pos:start="129:20" pos:end="129:60">(<expr pos:start="129:21" pos:end="129:59"><name pos:start="129:21" pos:end="129:23">ref</name> <operator pos:start="129:25" pos:end="129:26">&amp;&amp;</operator> <operator pos:start="129:28" pos:end="129:28">(</operator><name pos:start="129:29" pos:end="129:42"><name pos:start="129:29" pos:end="129:31">ref</name><operator pos:start="129:32" pos:end="129:33">-&gt;</operator><name pos:start="129:34" pos:end="129:42">reference</name></name> <operator pos:start="129:44" pos:end="129:44">&amp;</operator> <name pos:start="129:46" pos:end="129:58">pic_structure</name><operator pos:start="129:59" pos:end="129:59">)</operator></expr>)</condition> <block pos:start="129:62" pos:end="137:17">{<block_content pos:start="131:21" pos:end="135:26">

                    <expr_stmt pos:start="131:21" pos:end="131:41"><expr pos:start="131:21" pos:end="131:40"><name pos:start="131:21" pos:end="131:31"><name pos:start="131:21" pos:end="131:23">ref</name><operator pos:start="131:24" pos:end="131:25">-&gt;</operator><name pos:start="131:26" pos:end="131:31">pic_id</name></name> <operator pos:start="131:33" pos:end="131:33">=</operator> <name pos:start="131:35" pos:end="131:40">pic_id</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="133:21" pos:end="133:42"><expr pos:start="133:21" pos:end="133:41"><call pos:start="133:21" pos:end="133:41"><name pos:start="133:21" pos:end="133:26">assert</name><argument_list pos:start="133:27" pos:end="133:41">(<argument pos:start="133:28" pos:end="133:40"><expr pos:start="133:28" pos:end="133:40"><name pos:start="133:28" pos:end="133:40"><name pos:start="133:28" pos:end="133:30">ref</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:40">long_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="135:21" pos:end="135:26"><expr pos:start="135:21" pos:end="135:25"><name pos:start="135:21" pos:end="135:21">i</name> <operator pos:start="135:23" pos:end="135:23">=</operator> <literal type="number" pos:start="135:25" pos:end="135:25">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="137:19" pos:end="141:17">else <block pos:start="137:24" pos:end="141:17">{<block_content pos:start="139:21" pos:end="139:27">

                    <expr_stmt pos:start="139:21" pos:end="139:27"><expr pos:start="139:21" pos:end="139:26"><name pos:start="139:21" pos:end="139:21">i</name> <operator pos:start="139:23" pos:end="139:23">=</operator> <operator pos:start="139:25" pos:end="139:25">-</operator><literal type="number" pos:start="139:26" pos:end="139:26">1</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="143:17" pos:end="143:22">break;</break>

            </block_content>}</block>

            <default pos:start="147:13" pos:end="147:20">default:</default>

                <expr_stmt pos:start="149:17" pos:end="149:30"><expr pos:start="149:17" pos:end="149:29"><call pos:start="149:17" pos:end="149:29"><name pos:start="149:17" pos:end="149:26">av_assert1</name><argument_list pos:start="149:27" pos:end="149:29">(<argument pos:start="149:28" pos:end="149:28"><expr pos:start="149:28" pos:end="149:28"><literal type="number" pos:start="149:28" pos:end="149:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>



            <if_stmt pos:start="155:13" pos:end="191:13"><if pos:start="155:13" pos:end="163:13">if <condition pos:start="155:16" pos:end="155:22">(<expr pos:start="155:17" pos:end="155:21"><name pos:start="155:17" pos:end="155:17">i</name> <operator pos:start="155:19" pos:end="155:19">&lt;</operator> <literal type="number" pos:start="155:21" pos:end="155:21">0</literal></expr>)</condition> <block pos:start="155:24" pos:end="163:13">{<block_content pos:start="157:17" pos:end="161:82">

                <expr_stmt pos:start="157:17" pos:end="159:69"><expr pos:start="157:17" pos:end="159:68"><call pos:start="157:17" pos:end="159:68"><name pos:start="157:17" pos:end="157:22">av_log</name><argument_list pos:start="157:23" pos:end="159:68">(<argument pos:start="157:24" pos:end="157:31"><expr pos:start="157:24" pos:end="157:31"><name pos:start="157:24" pos:end="157:31"><name pos:start="157:24" pos:end="157:24">h</name><operator pos:start="157:25" pos:end="157:26">-&gt;</operator><name pos:start="157:27" pos:end="157:31">avctx</name></name></expr></argument>, <argument pos:start="157:34" pos:end="157:45"><expr pos:start="157:34" pos:end="157:45"><name pos:start="157:34" pos:end="157:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="159:24" pos:end="159:67"><expr pos:start="159:24" pos:end="159:67"><literal type="string" pos:start="159:24" pos:end="159:67">"reference picture missing during reorder\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:82"><expr pos:start="161:17" pos:end="161:81"><call pos:start="161:17" pos:end="161:81"><name pos:start="161:17" pos:end="161:22">memset</name><argument_list pos:start="161:23" pos:end="161:81">(<argument pos:start="161:24" pos:end="161:49"><expr pos:start="161:24" pos:end="161:49"><operator pos:start="161:24" pos:end="161:24">&amp;</operator><name pos:start="161:25" pos:end="161:49"><name pos:start="161:25" pos:end="161:26">sl</name><operator pos:start="161:27" pos:end="161:28">-&gt;</operator><name pos:start="161:29" pos:end="161:36">ref_list</name><index pos:start="161:37" pos:end="161:42">[<expr pos:start="161:38" pos:end="161:41"><name pos:start="161:38" pos:end="161:41">list</name></expr>]</index><index pos:start="161:43" pos:end="161:49">[<expr pos:start="161:44" pos:end="161:48"><name pos:start="161:44" pos:end="161:48">index</name></expr>]</index></name></expr></argument>, <argument pos:start="161:52" pos:end="161:52"><expr pos:start="161:52" pos:end="161:52"><literal type="number" pos:start="161:52" pos:end="161:52">0</literal></expr></argument>, <argument pos:start="161:55" pos:end="161:80"><expr pos:start="161:55" pos:end="161:80"><sizeof pos:start="161:55" pos:end="161:80">sizeof<argument_list pos:start="161:61" pos:end="161:80">(<argument pos:start="161:62" pos:end="161:79"><expr pos:start="161:62" pos:end="161:79"><name pos:start="161:62" pos:end="161:79"><name pos:start="161:62" pos:end="161:63">sl</name><operator pos:start="161:64" pos:end="161:65">-&gt;</operator><name pos:start="161:66" pos:end="161:73">ref_list</name><index pos:start="161:74" pos:end="161:76">[<expr pos:start="161:75" pos:end="161:75"><literal type="number" pos:start="161:75" pos:end="161:75">0</literal></expr>]</index><index pos:start="161:77" pos:end="161:79">[<expr pos:start="161:78" pos:end="161:78"><literal type="number" pos:start="161:78" pos:end="161:78">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="161:84" pos:end="161:91">// FIXME</comment>

            </block_content>}</block></if> <else pos:start="163:15" pos:end="191:13">else <block pos:start="163:20" pos:end="191:13">{<block_content pos:start="165:17" pos:end="189:17">

                <for pos:start="165:17" pos:end="175:17">for <control pos:start="165:21" pos:end="165:65">(<init pos:start="165:22" pos:end="165:31"><expr pos:start="165:22" pos:end="165:30"><name pos:start="165:22" pos:end="165:22">i</name> <operator pos:start="165:24" pos:end="165:24">=</operator> <name pos:start="165:26" pos:end="165:30">index</name></expr>;</init> <condition pos:start="165:33" pos:end="165:60"><expr pos:start="165:33" pos:end="165:59"><name pos:start="165:33" pos:end="165:33">i</name> <operator pos:start="165:35" pos:end="165:35">+</operator> <literal type="number" pos:start="165:37" pos:end="165:37">1</literal> <operator pos:start="165:39" pos:end="165:39">&lt;</operator> <name pos:start="165:41" pos:end="165:59"><name pos:start="165:41" pos:end="165:42">sl</name><operator pos:start="165:43" pos:end="165:44">-&gt;</operator><name pos:start="165:45" pos:end="165:53">ref_count</name><index pos:start="165:54" pos:end="165:59">[<expr pos:start="165:55" pos:end="165:58"><name pos:start="165:55" pos:end="165:58">list</name></expr>]</index></name></expr>;</condition> <incr pos:start="165:62" pos:end="165:64"><expr pos:start="165:62" pos:end="165:64"><name pos:start="165:62" pos:end="165:62">i</name><operator pos:start="165:63" pos:end="165:64">++</operator></expr></incr>)</control> <block pos:start="165:67" pos:end="175:17">{<block_content pos:start="167:21" pos:end="173:30">

                    <if_stmt pos:start="167:21" pos:end="173:30"><if pos:start="167:21" pos:end="173:30">if <condition pos:start="167:24" pos:end="171:70">(<expr pos:start="167:25" pos:end="171:69"><name pos:start="167:25" pos:end="167:45"><name pos:start="167:25" pos:end="167:26">sl</name><operator pos:start="167:27" pos:end="167:28">-&gt;</operator><name pos:start="167:29" pos:end="167:36">ref_list</name><index pos:start="167:37" pos:end="167:42">[<expr pos:start="167:38" pos:end="167:41"><name pos:start="167:38" pos:end="167:41">list</name></expr>]</index><index pos:start="167:43" pos:end="167:45">[<expr pos:start="167:44" pos:end="167:44"><name pos:start="167:44" pos:end="167:44">i</name></expr>]</index></name><operator pos:start="167:46" pos:end="167:46">.</operator><name pos:start="167:47" pos:end="167:52">parent</name> <operator pos:start="167:54" pos:end="167:55">&amp;&amp;</operator>

                        <name pos:start="169:25" pos:end="169:37"><name pos:start="169:25" pos:end="169:27">ref</name><operator pos:start="169:28" pos:end="169:29">-&gt;</operator><name pos:start="169:30" pos:end="169:37">long_ref</name></name> <operator pos:start="169:39" pos:end="169:40">==</operator> <name pos:start="169:42" pos:end="169:62"><name pos:start="169:42" pos:end="169:43">sl</name><operator pos:start="169:44" pos:end="169:45">-&gt;</operator><name pos:start="169:46" pos:end="169:53">ref_list</name><index pos:start="169:54" pos:end="169:59">[<expr pos:start="169:55" pos:end="169:58"><name pos:start="169:55" pos:end="169:58">list</name></expr>]</index><index pos:start="169:60" pos:end="169:62">[<expr pos:start="169:61" pos:end="169:61"><name pos:start="169:61" pos:end="169:61">i</name></expr>]</index></name><operator pos:start="169:63" pos:end="169:63">.</operator><name pos:start="169:64" pos:end="169:79"><name pos:start="169:64" pos:end="169:69">parent</name><operator pos:start="169:70" pos:end="169:71">-&gt;</operator><name pos:start="169:72" pos:end="169:79">long_ref</name></name> <operator pos:start="169:81" pos:end="169:82">&amp;&amp;</operator>

                        <name pos:start="171:25" pos:end="171:35"><name pos:start="171:25" pos:end="171:27">ref</name><operator pos:start="171:28" pos:end="171:29">-&gt;</operator><name pos:start="171:30" pos:end="171:35">pic_id</name></name>   <operator pos:start="171:39" pos:end="171:40">==</operator> <name pos:start="171:42" pos:end="171:62"><name pos:start="171:42" pos:end="171:43">sl</name><operator pos:start="171:44" pos:end="171:45">-&gt;</operator><name pos:start="171:46" pos:end="171:53">ref_list</name><index pos:start="171:54" pos:end="171:59">[<expr pos:start="171:55" pos:end="171:58"><name pos:start="171:55" pos:end="171:58">list</name></expr>]</index><index pos:start="171:60" pos:end="171:62">[<expr pos:start="171:61" pos:end="171:61"><name pos:start="171:61" pos:end="171:61">i</name></expr>]</index></name><operator pos:start="171:63" pos:end="171:63">.</operator><name pos:start="171:64" pos:end="171:69">pic_id</name></expr>)</condition><block type="pseudo" pos:start="173:25" pos:end="173:30"><block_content pos:start="173:25" pos:end="173:30">

                        <break pos:start="173:25" pos:end="173:30">break;</break></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <for pos:start="177:17" pos:end="181:17">for <control pos:start="177:21" pos:end="177:38">(<init pos:start="177:22" pos:end="177:22">;</init> <condition pos:start="177:24" pos:end="177:33"><expr pos:start="177:24" pos:end="177:32"><name pos:start="177:24" pos:end="177:24">i</name> <operator pos:start="177:26" pos:end="177:26">&gt;</operator> <name pos:start="177:28" pos:end="177:32">index</name></expr>;</condition> <incr pos:start="177:35" pos:end="177:37"><expr pos:start="177:35" pos:end="177:37"><name pos:start="177:35" pos:end="177:35">i</name><operator pos:start="177:36" pos:end="177:37">--</operator></expr></incr>)</control> <block pos:start="177:40" pos:end="181:17">{<block_content pos:start="179:21" pos:end="179:70">

                    <expr_stmt pos:start="179:21" pos:end="179:70"><expr pos:start="179:21" pos:end="179:69"><name pos:start="179:21" pos:end="179:41"><name pos:start="179:21" pos:end="179:22">sl</name><operator pos:start="179:23" pos:end="179:24">-&gt;</operator><name pos:start="179:25" pos:end="179:32">ref_list</name><index pos:start="179:33" pos:end="179:38">[<expr pos:start="179:34" pos:end="179:37"><name pos:start="179:34" pos:end="179:37">list</name></expr>]</index><index pos:start="179:39" pos:end="179:41">[<expr pos:start="179:40" pos:end="179:40"><name pos:start="179:40" pos:end="179:40">i</name></expr>]</index></name> <operator pos:start="179:43" pos:end="179:43">=</operator> <name pos:start="179:45" pos:end="179:69"><name pos:start="179:45" pos:end="179:46">sl</name><operator pos:start="179:47" pos:end="179:48">-&gt;</operator><name pos:start="179:49" pos:end="179:56">ref_list</name><index pos:start="179:57" pos:end="179:62">[<expr pos:start="179:58" pos:end="179:61"><name pos:start="179:58" pos:end="179:61">list</name></expr>]</index><index pos:start="179:63" pos:end="179:69">[<expr pos:start="179:64" pos:end="179:68"><name pos:start="179:64" pos:end="179:64">i</name> <operator pos:start="179:66" pos:end="179:66">-</operator> <literal type="number" pos:start="179:68" pos:end="179:68">1</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="183:17" pos:end="183:66"><expr pos:start="183:17" pos:end="183:65"><call pos:start="183:17" pos:end="183:65"><name pos:start="183:17" pos:end="183:32">ref_from_h264pic</name><argument_list pos:start="183:33" pos:end="183:65">(<argument pos:start="183:34" pos:end="183:59"><expr pos:start="183:34" pos:end="183:59"><operator pos:start="183:34" pos:end="183:34">&amp;</operator><name pos:start="183:35" pos:end="183:59"><name pos:start="183:35" pos:end="183:36">sl</name><operator pos:start="183:37" pos:end="183:38">-&gt;</operator><name pos:start="183:39" pos:end="183:46">ref_list</name><index pos:start="183:47" pos:end="183:52">[<expr pos:start="183:48" pos:end="183:51"><name pos:start="183:48" pos:end="183:51">list</name></expr>]</index><index pos:start="183:53" pos:end="183:59">[<expr pos:start="183:54" pos:end="183:58"><name pos:start="183:54" pos:end="183:58">index</name></expr>]</index></name></expr></argument>, <argument pos:start="183:62" pos:end="183:64"><expr pos:start="183:62" pos:end="183:64"><name pos:start="183:62" pos:end="183:64">ref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="185:17" pos:end="189:17"><if pos:start="185:17" pos:end="189:17">if <condition pos:start="185:20" pos:end="185:37">(<expr pos:start="185:21" pos:end="185:36"><call pos:start="185:21" pos:end="185:36"><name pos:start="185:21" pos:end="185:33">FIELD_PICTURE</name><argument_list pos:start="185:34" pos:end="185:36">(<argument pos:start="185:35" pos:end="185:35"><expr pos:start="185:35" pos:end="185:35"><name pos:start="185:35" pos:end="185:35">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="185:39" pos:end="189:17">{<block_content pos:start="187:21" pos:end="187:76">

                    <expr_stmt pos:start="187:21" pos:end="187:76"><expr pos:start="187:21" pos:end="187:75"><call pos:start="187:21" pos:end="187:75"><name pos:start="187:21" pos:end="187:32">pic_as_field</name><argument_list pos:start="187:33" pos:end="187:75">(<argument pos:start="187:34" pos:end="187:59"><expr pos:start="187:34" pos:end="187:59"><operator pos:start="187:34" pos:end="187:34">&amp;</operator><name pos:start="187:35" pos:end="187:59"><name pos:start="187:35" pos:end="187:36">sl</name><operator pos:start="187:37" pos:end="187:38">-&gt;</operator><name pos:start="187:39" pos:end="187:46">ref_list</name><index pos:start="187:47" pos:end="187:52">[<expr pos:start="187:48" pos:end="187:51"><name pos:start="187:48" pos:end="187:51">list</name></expr>]</index><index pos:start="187:53" pos:end="187:59">[<expr pos:start="187:54" pos:end="187:58"><name pos:start="187:54" pos:end="187:58">index</name></expr>]</index></name></expr></argument>, <argument pos:start="187:62" pos:end="187:74"><expr pos:start="187:62" pos:end="187:74"><name pos:start="187:62" pos:end="187:74">pic_structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <for pos:start="197:5" pos:end="229:5">for <control pos:start="197:9" pos:end="197:49">(<init pos:start="197:10" pos:end="197:18"><expr pos:start="197:10" pos:end="197:17"><name pos:start="197:10" pos:end="197:13">list</name> <operator pos:start="197:15" pos:end="197:15">=</operator> <literal type="number" pos:start="197:17" pos:end="197:17">0</literal></expr>;</init> <condition pos:start="197:20" pos:end="197:41"><expr pos:start="197:20" pos:end="197:40"><name pos:start="197:20" pos:end="197:23">list</name> <operator pos:start="197:25" pos:end="197:25">&lt;</operator> <name pos:start="197:27" pos:end="197:40"><name pos:start="197:27" pos:end="197:28">sl</name><operator pos:start="197:29" pos:end="197:30">-&gt;</operator><name pos:start="197:31" pos:end="197:40">list_count</name></name></expr>;</condition> <incr pos:start="197:43" pos:end="197:48"><expr pos:start="197:43" pos:end="197:48"><name pos:start="197:43" pos:end="197:46">list</name><operator pos:start="197:47" pos:end="197:48">++</operator></expr></incr>)</control> <block pos:start="197:51" pos:end="229:5">{<block_content pos:start="199:9" pos:end="227:9">

        <for pos:start="199:9" pos:end="227:9">for <control pos:start="199:13" pos:end="199:61">(<init pos:start="199:14" pos:end="199:23"><expr pos:start="199:14" pos:end="199:22"><name pos:start="199:14" pos:end="199:18">index</name> <operator pos:start="199:20" pos:end="199:20">=</operator> <literal type="number" pos:start="199:22" pos:end="199:22">0</literal></expr>;</init> <condition pos:start="199:25" pos:end="199:52"><expr pos:start="199:25" pos:end="199:51"><name pos:start="199:25" pos:end="199:29">index</name> <operator pos:start="199:31" pos:end="199:31">&lt;</operator> <name pos:start="199:33" pos:end="199:51"><name pos:start="199:33" pos:end="199:34">sl</name><operator pos:start="199:35" pos:end="199:36">-&gt;</operator><name pos:start="199:37" pos:end="199:45">ref_count</name><index pos:start="199:46" pos:end="199:51">[<expr pos:start="199:47" pos:end="199:50"><name pos:start="199:47" pos:end="199:50">list</name></expr>]</index></name></expr>;</condition> <incr pos:start="199:54" pos:end="199:60"><expr pos:start="199:54" pos:end="199:60"><name pos:start="199:54" pos:end="199:58">index</name><operator pos:start="199:59" pos:end="199:60">++</operator></expr></incr>)</control> <block pos:start="199:63" pos:end="227:9">{<block_content pos:start="201:13" pos:end="225:97">

            <if_stmt pos:start="201:13" pos:end="223:13"><if pos:start="201:13" pos:end="223:13">if <condition pos:start="201:16" pos:end="203:87">(   <expr pos:start="201:20" pos:end="203:86"><operator pos:start="201:20" pos:end="201:20">!</operator><name pos:start="201:21" pos:end="201:45"><name pos:start="201:21" pos:end="201:22">sl</name><operator pos:start="201:23" pos:end="201:24">-&gt;</operator><name pos:start="201:25" pos:end="201:32">ref_list</name><index pos:start="201:33" pos:end="201:38">[<expr pos:start="201:34" pos:end="201:37"><name pos:start="201:34" pos:end="201:37">list</name></expr>]</index><index pos:start="201:39" pos:end="201:45">[<expr pos:start="201:40" pos:end="201:44"><name pos:start="201:40" pos:end="201:44">index</name></expr>]</index></name><operator pos:start="201:46" pos:end="201:46">.</operator><name pos:start="201:47" pos:end="201:52">parent</name>

                <operator pos:start="203:17" pos:end="203:18">||</operator> <operator pos:start="203:20" pos:end="203:20">(</operator><operator pos:start="203:21" pos:end="203:21">!</operator><call pos:start="203:22" pos:end="203:37"><name pos:start="203:22" pos:end="203:34">FIELD_PICTURE</name><argument_list pos:start="203:35" pos:end="203:37">(<argument pos:start="203:36" pos:end="203:36"><expr pos:start="203:36" pos:end="203:36"><name pos:start="203:36" pos:end="203:36">h</name></expr></argument>)</argument_list></call> <operator pos:start="203:39" pos:end="203:40">&amp;&amp;</operator> <operator pos:start="203:42" pos:end="203:42">(</operator><name pos:start="203:43" pos:end="203:67"><name pos:start="203:43" pos:end="203:44">sl</name><operator pos:start="203:45" pos:end="203:46">-&gt;</operator><name pos:start="203:47" pos:end="203:54">ref_list</name><index pos:start="203:55" pos:end="203:60">[<expr pos:start="203:56" pos:end="203:59"><name pos:start="203:56" pos:end="203:59">list</name></expr>]</index><index pos:start="203:61" pos:end="203:67">[<expr pos:start="203:62" pos:end="203:66"><name pos:start="203:62" pos:end="203:66">index</name></expr>]</index></name><operator pos:start="203:68" pos:end="203:68">.</operator><name pos:start="203:69" pos:end="203:77">reference</name><operator pos:start="203:78" pos:end="203:78">&amp;</operator><literal type="number" pos:start="203:79" pos:end="203:79">3</literal><operator pos:start="203:80" pos:end="203:80">)</operator> <operator pos:start="203:82" pos:end="203:83">!=</operator> <literal type="number" pos:start="203:85" pos:end="203:85">3</literal><operator pos:start="203:86" pos:end="203:86">)</operator></expr>)</condition> <block pos:start="203:89" pos:end="223:13">{<block_content pos:start="205:17" pos:end="221:30">

                <decl_stmt pos:start="205:17" pos:end="205:22"><decl pos:start="205:17" pos:end="205:21"><type pos:start="205:17" pos:end="205:19"><name pos:start="205:17" pos:end="205:19">int</name></type> <name pos:start="205:21" pos:end="205:21">i</name></decl>;</decl_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:119"><expr pos:start="207:17" pos:end="207:118"><call pos:start="207:17" pos:end="207:118"><name pos:start="207:17" pos:end="207:22">av_log</name><argument_list pos:start="207:23" pos:end="207:118">(<argument pos:start="207:24" pos:end="207:31"><expr pos:start="207:24" pos:end="207:31"><name pos:start="207:24" pos:end="207:31"><name pos:start="207:24" pos:end="207:24">h</name><operator pos:start="207:25" pos:end="207:26">-&gt;</operator><name pos:start="207:27" pos:end="207:31">avctx</name></name></expr></argument>, <argument pos:start="207:34" pos:end="207:45"><expr pos:start="207:34" pos:end="207:45"><name pos:start="207:34" pos:end="207:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="207:48" pos:end="207:91"><expr pos:start="207:48" pos:end="207:91"><literal type="string" pos:start="207:48" pos:end="207:91">"Missing reference picture, default is %d\n"</literal></expr></argument>, <argument pos:start="207:94" pos:end="207:117"><expr pos:start="207:94" pos:end="207:117"><name pos:start="207:94" pos:end="207:113"><name pos:start="207:94" pos:end="207:94">h</name><operator pos:start="207:95" pos:end="207:96">-&gt;</operator><name pos:start="207:97" pos:end="207:107">default_ref</name><index pos:start="207:108" pos:end="207:113">[<expr pos:start="207:109" pos:end="207:112"><name pos:start="207:109" pos:end="207:112">list</name></expr>]</index></name><operator pos:start="207:114" pos:end="207:114">.</operator><name pos:start="207:115" pos:end="207:117">poc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="209:17" pos:end="211:46">for <control pos:start="209:21" pos:end="209:66">(<init pos:start="209:22" pos:end="209:27"><expr pos:start="209:22" pos:end="209:26"><name pos:start="209:22" pos:end="209:22">i</name> <operator pos:start="209:24" pos:end="209:24">=</operator> <literal type="number" pos:start="209:26" pos:end="209:26">0</literal></expr>;</init> <condition pos:start="209:29" pos:end="209:61"><expr pos:start="209:29" pos:end="209:60"><name pos:start="209:29" pos:end="209:29">i</name> <operator pos:start="209:31" pos:end="209:31">&lt;</operator> <call pos:start="209:33" pos:end="209:60"><name pos:start="209:33" pos:end="209:46">FF_ARRAY_ELEMS</name><argument_list pos:start="209:47" pos:end="209:60">(<argument pos:start="209:48" pos:end="209:59"><expr pos:start="209:48" pos:end="209:59"><name pos:start="209:48" pos:end="209:59"><name pos:start="209:48" pos:end="209:48">h</name><operator pos:start="209:49" pos:end="209:50">-&gt;</operator><name pos:start="209:51" pos:end="209:59">last_pocs</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="209:63" pos:end="209:65"><expr pos:start="209:63" pos:end="209:65"><name pos:start="209:63" pos:end="209:63">i</name><operator pos:start="209:64" pos:end="209:65">++</operator></expr></incr>)</control><block type="pseudo" pos:start="211:21" pos:end="211:46"><block_content pos:start="211:21" pos:end="211:46">

                    <expr_stmt pos:start="211:21" pos:end="211:46"><expr pos:start="211:21" pos:end="211:45"><name pos:start="211:21" pos:end="211:35"><name pos:start="211:21" pos:end="211:21">h</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:32">last_pocs</name><index pos:start="211:33" pos:end="211:35">[<expr pos:start="211:34" pos:end="211:34"><name pos:start="211:34" pos:end="211:34">i</name></expr>]</index></name> <operator pos:start="211:37" pos:end="211:37">=</operator> <name pos:start="211:39" pos:end="211:45">INT_MIN</name></expr>;</expr_stmt></block_content></block></for>

                <if_stmt pos:start="213:17" pos:end="221:30"><if pos:start="213:17" pos:end="217:69">if <condition pos:start="213:20" pos:end="215:87">(<expr pos:start="213:21" pos:end="215:86"><name pos:start="213:21" pos:end="213:40"><name pos:start="213:21" pos:end="213:21">h</name><operator pos:start="213:22" pos:end="213:23">-&gt;</operator><name pos:start="213:24" pos:end="213:34">default_ref</name><index pos:start="213:35" pos:end="213:40">[<expr pos:start="213:36" pos:end="213:39"><name pos:start="213:36" pos:end="213:39">list</name></expr>]</index></name><operator pos:start="213:41" pos:end="213:41">.</operator><name pos:start="213:42" pos:end="213:47">parent</name>

                    <operator pos:start="215:21" pos:end="215:22">&amp;&amp;</operator> <operator pos:start="215:24" pos:end="215:24">!</operator><operator pos:start="215:25" pos:end="215:25">(</operator><operator pos:start="215:26" pos:end="215:26">!</operator><call pos:start="215:27" pos:end="215:42"><name pos:start="215:27" pos:end="215:39">FIELD_PICTURE</name><argument_list pos:start="215:40" pos:end="215:42">(<argument pos:start="215:41" pos:end="215:41"><expr pos:start="215:41" pos:end="215:41"><name pos:start="215:41" pos:end="215:41">h</name></expr></argument>)</argument_list></call> <operator pos:start="215:44" pos:end="215:45">&amp;&amp;</operator> <operator pos:start="215:47" pos:end="215:47">(</operator><name pos:start="215:48" pos:end="215:67"><name pos:start="215:48" pos:end="215:48">h</name><operator pos:start="215:49" pos:end="215:50">-&gt;</operator><name pos:start="215:51" pos:end="215:61">default_ref</name><index pos:start="215:62" pos:end="215:67">[<expr pos:start="215:63" pos:end="215:66"><name pos:start="215:63" pos:end="215:66">list</name></expr>]</index></name><operator pos:start="215:68" pos:end="215:68">.</operator><name pos:start="215:69" pos:end="215:77">reference</name><operator pos:start="215:78" pos:end="215:78">&amp;</operator><literal type="number" pos:start="215:79" pos:end="215:79">3</literal><operator pos:start="215:80" pos:end="215:80">)</operator> <operator pos:start="215:82" pos:end="215:83">!=</operator> <literal type="number" pos:start="215:85" pos:end="215:85">3</literal><operator pos:start="215:86" pos:end="215:86">)</operator></expr>)</condition><block type="pseudo" pos:start="217:21" pos:end="217:69"><block_content pos:start="217:21" pos:end="217:69">

                    <expr_stmt pos:start="217:21" pos:end="217:69"><expr pos:start="217:21" pos:end="217:68"><name pos:start="217:21" pos:end="217:45"><name pos:start="217:21" pos:end="217:22">sl</name><operator pos:start="217:23" pos:end="217:24">-&gt;</operator><name pos:start="217:25" pos:end="217:32">ref_list</name><index pos:start="217:33" pos:end="217:38">[<expr pos:start="217:34" pos:end="217:37"><name pos:start="217:34" pos:end="217:37">list</name></expr>]</index><index pos:start="217:39" pos:end="217:45">[<expr pos:start="217:40" pos:end="217:44"><name pos:start="217:40" pos:end="217:44">index</name></expr>]</index></name> <operator pos:start="217:47" pos:end="217:47">=</operator> <name pos:start="217:49" pos:end="217:68"><name pos:start="217:49" pos:end="217:49">h</name><operator pos:start="217:50" pos:end="217:51">-&gt;</operator><name pos:start="217:52" pos:end="217:62">default_ref</name><index pos:start="217:63" pos:end="217:68">[<expr pos:start="217:64" pos:end="217:67"><name pos:start="217:64" pos:end="217:67">list</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="219:17" pos:end="221:30">else<block type="pseudo" pos:start="221:21" pos:end="221:30"><block_content pos:start="221:21" pos:end="221:30">

                    <return pos:start="221:21" pos:end="221:30">return <expr pos:start="221:28" pos:end="221:29"><operator pos:start="221:28" pos:end="221:28">-</operator><literal type="number" pos:start="221:29" pos:end="221:29">1</literal></expr>;</return></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:97"><expr pos:start="225:13" pos:end="225:96"><call pos:start="225:13" pos:end="225:96"><name pos:start="225:13" pos:end="225:22">av_assert0</name><argument_list pos:start="225:23" pos:end="225:96">(<argument pos:start="225:24" pos:end="225:95"><expr pos:start="225:24" pos:end="225:95"><call pos:start="225:24" pos:end="225:91"><name pos:start="225:24" pos:end="225:46">av_buffer_get_ref_count</name><argument_list pos:start="225:47" pos:end="225:91">(<argument pos:start="225:48" pos:end="225:90"><expr pos:start="225:48" pos:end="225:90"><name pos:start="225:48" pos:end="225:72"><name pos:start="225:48" pos:end="225:49">sl</name><operator pos:start="225:50" pos:end="225:51">-&gt;</operator><name pos:start="225:52" pos:end="225:59">ref_list</name><index pos:start="225:60" pos:end="225:65">[<expr pos:start="225:61" pos:end="225:64"><name pos:start="225:61" pos:end="225:64">list</name></expr>]</index><index pos:start="225:66" pos:end="225:72">[<expr pos:start="225:67" pos:end="225:71"><name pos:start="225:67" pos:end="225:71">index</name></expr>]</index></name><operator pos:start="225:73" pos:end="225:73">.</operator><name pos:start="225:74" pos:end="225:90"><name pos:start="225:74" pos:end="225:79">parent</name><operator pos:start="225:80" pos:end="225:81">-&gt;</operator><name pos:start="225:82" pos:end="225:82">f</name><operator pos:start="225:83" pos:end="225:84">-&gt;</operator><name pos:start="225:85" pos:end="225:87">buf</name><index pos:start="225:88" pos:end="225:90">[<expr pos:start="225:89" pos:end="225:89"><literal type="number" pos:start="225:89" pos:end="225:89">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="225:93" pos:end="225:93">&gt;</operator> <literal type="number" pos:start="225:95" pos:end="225:95">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="233:5" pos:end="235:37"><if pos:start="233:5" pos:end="235:37">if <condition pos:start="233:8" pos:end="233:23">(<expr pos:start="233:9" pos:end="233:22"><call pos:start="233:9" pos:end="233:22"><name pos:start="233:9" pos:end="233:19">FRAME_MBAFF</name><argument_list pos:start="233:20" pos:end="233:22">(<argument pos:start="233:21" pos:end="233:21"><expr pos:start="233:21" pos:end="233:21"><name pos:start="233:21" pos:end="233:21">h</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="235:9" pos:end="235:37"><block_content pos:start="235:9" pos:end="235:37">

        <expr_stmt pos:start="235:9" pos:end="235:37"><expr pos:start="235:9" pos:end="235:36"><call pos:start="235:9" pos:end="235:36"><name pos:start="235:9" pos:end="235:32">h264_fill_mbaff_ref_list</name><argument_list pos:start="235:33" pos:end="235:36">(<argument pos:start="235:34" pos:end="235:35"><expr pos:start="235:34" pos:end="235:35"><name pos:start="235:34" pos:end="235:35">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="239:5" pos:end="239:13">return <expr pos:start="239:12" pos:end="239:12"><literal type="number" pos:start="239:12" pos:end="239:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
