<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9438.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">avformat_open_input</name><parameter_list pos:start="1:24" pos:end="1:111">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:39">AVFormatContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier><modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">ps</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:66"><decl pos:start="1:47" pos:end="1:66"><type pos:start="1:47" pos:end="1:66"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:66">filename</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:86"><decl pos:start="1:69" pos:end="1:86"><type pos:start="1:69" pos:end="1:86"><name pos:start="1:69" pos:end="1:81">AVInputFormat</name> <modifier pos:start="1:83" pos:end="1:83">*</modifier></type><name pos:start="1:84" pos:end="1:86">fmt</name></decl></parameter>, <parameter pos:start="1:89" pos:end="1:110"><decl pos:start="1:89" pos:end="1:110"><type pos:start="1:89" pos:end="1:110"><name pos:start="1:89" pos:end="1:100">AVDictionary</name> <modifier pos:start="1:102" pos:end="1:102">*</modifier><modifier pos:start="1:103" pos:end="1:103">*</modifier></type><name pos:start="1:104" pos:end="1:110">options</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="147:1">{<block_content pos:start="5:5" pos:end="145:15">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:28">= <expr pos:start="5:26" pos:end="5:28"><operator pos:start="5:26" pos:end="5:26">*</operator><name pos:start="5:27" pos:end="5:28">ps</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22">AVFormatParameters</name></type> <name pos:start="9:24" pos:end="9:25">ap</name> <init pos:start="9:27" pos:end="9:33">= <expr pos:start="9:29" pos:end="9:33"><block pos:start="9:29" pos:end="9:33">{ <expr pos:start="9:31" pos:end="9:31"><literal type="number" pos:start="9:31" pos:end="9:31">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">AVDictionary</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:21">tmp</name> <init pos:start="11:23" pos:end="11:28">= <expr pos:start="11:25" pos:end="11:28"><name pos:start="11:25" pos:end="11:28">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:31"><if pos:start="15:5" pos:end="17:31">if <condition pos:start="15:8" pos:end="15:46">(<expr pos:start="15:9" pos:end="15:45"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:10">s</name> <operator pos:start="15:12" pos:end="15:13">&amp;&amp;</operator> <operator pos:start="15:15" pos:end="15:15">!</operator><operator pos:start="15:16" pos:end="15:16">(</operator><name pos:start="15:17" pos:end="15:17">s</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <call pos:start="15:21" pos:end="15:44"><name pos:start="15:21" pos:end="15:42">avformat_alloc_context</name><argument_list pos:start="15:43" pos:end="15:44">()</argument_list></call><operator pos:start="15:45" pos:end="15:45">)</operator></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="21:25"><if pos:start="19:5" pos:end="21:25">if <condition pos:start="19:8" pos:end="19:12">(<expr pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">fmt</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:25"><block_content pos:start="21:9" pos:end="21:25">

        <expr_stmt pos:start="21:9" pos:end="21:25"><expr pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:18">iformat</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:24">fmt</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="27:40"><if pos:start="25:5" pos:end="27:40">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:15">options</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:40"><block_content pos:start="27:9" pos:end="27:40">

        <expr_stmt pos:start="27:9" pos:end="27:40"><expr pos:start="27:9" pos:end="27:39"><call pos:start="27:9" pos:end="27:39"><name pos:start="27:9" pos:end="27:20">av_dict_copy</name><argument_list pos:start="27:21" pos:end="27:39">(<argument pos:start="27:22" pos:end="27:25"><expr pos:start="27:22" pos:end="27:25"><operator pos:start="27:22" pos:end="27:22">&amp;</operator><name pos:start="27:23" pos:end="27:25">tmp</name></expr></argument>, <argument pos:start="27:28" pos:end="27:35"><expr pos:start="27:28" pos:end="27:35"><operator pos:start="27:28" pos:end="27:28">*</operator><name pos:start="27:29" pos:end="27:35">options</name></expr></argument>, <argument pos:start="27:38" pos:end="27:38"><expr pos:start="27:38" pos:end="27:38"><literal type="number" pos:start="27:38" pos:end="27:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="33:18"><if pos:start="31:5" pos:end="33:18">if <condition pos:start="31:8" pos:end="31:45">(<expr pos:start="31:9" pos:end="31:44"><operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:12">ret</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:39"><name pos:start="31:16" pos:end="31:30">av_opt_set_dict</name><argument_list pos:start="31:31" pos:end="31:39">(<argument pos:start="31:32" pos:end="31:32"><expr pos:start="31:32" pos:end="31:32"><name pos:start="31:32" pos:end="31:32">s</name></expr></argument>, <argument pos:start="31:35" pos:end="31:38"><expr pos:start="31:35" pos:end="31:38"><operator pos:start="31:35" pos:end="31:35">&amp;</operator><name pos:start="31:36" pos:end="31:38">tmp</name></expr></argument>)</argument_list></call><operator pos:start="31:40" pos:end="31:40">)</operator> <operator pos:start="31:42" pos:end="31:42">&lt;</operator> <literal type="number" pos:start="31:44" pos:end="31:44">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:18"><block_content pos:start="33:9" pos:end="33:18">

        <goto pos:start="33:9" pos:end="33:18">goto <name pos:start="33:14" pos:end="33:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="39:18"><if pos:start="37:5" pos:end="39:18">if <condition pos:start="37:8" pos:end="37:44">(<expr pos:start="37:9" pos:end="37:43"><operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:12">ret</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="37:38"><name pos:start="37:16" pos:end="37:25">init_input</name><argument_list pos:start="37:26" pos:end="37:38">(<argument pos:start="37:27" pos:end="37:27"><expr pos:start="37:27" pos:end="37:27"><name pos:start="37:27" pos:end="37:27">s</name></expr></argument>, <argument pos:start="37:30" pos:end="37:37"><expr pos:start="37:30" pos:end="37:37"><name pos:start="37:30" pos:end="37:37">filename</name></expr></argument>)</argument_list></call><operator pos:start="37:39" pos:end="37:39">)</operator> <operator pos:start="37:41" pos:end="37:41">&lt;</operator> <literal type="number" pos:start="37:43" pos:end="37:43">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <goto pos:start="39:9" pos:end="39:18">goto <name pos:start="39:14" pos:end="39:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:60">/* check filename in case an image number is expected */</comment>

    <if_stmt pos:start="45:5" pos:end="55:5"><if pos:start="45:5" pos:end="55:5">if <condition pos:start="45:8" pos:end="45:45">(<expr pos:start="45:9" pos:end="45:44"><name pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:18">iformat</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:25">flags</name></name> <operator pos:start="45:27" pos:end="45:27">&amp;</operator> <name pos:start="45:29" pos:end="45:44">AVFMT_NEEDNUMBER</name></expr>)</condition> <block pos:start="45:47" pos:end="55:5">{<block_content pos:start="47:9" pos:end="53:9">

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:47">(<expr pos:start="47:13" pos:end="47:46"><operator pos:start="47:13" pos:end="47:13">!</operator><call pos:start="47:14" pos:end="47:46"><name pos:start="47:14" pos:end="47:36">av_filename_number_test</name><argument_list pos:start="47:37" pos:end="47:46">(<argument pos:start="47:38" pos:end="47:45"><expr pos:start="47:38" pos:end="47:45"><name pos:start="47:38" pos:end="47:45">filename</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:49" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:22">

            <expr_stmt pos:start="49:13" pos:end="49:34"><expr pos:start="49:13" pos:end="49:33"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <call pos:start="49:19" pos:end="49:33"><name pos:start="49:19" pos:end="49:25">AVERROR</name><argument_list pos:start="49:26" pos:end="49:33">(<argument pos:start="49:27" pos:end="49:32"><expr pos:start="49:27" pos:end="49:32"><name pos:start="49:27" pos:end="49:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="51:13" pos:end="51:22">goto <name pos:start="51:18" pos:end="51:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:49"><expr pos:start="59:5" pos:end="59:48"><name pos:start="59:5" pos:end="59:15"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:15">duration</name></name> <operator pos:start="59:17" pos:end="59:17">=</operator> <name pos:start="59:19" pos:end="59:31"><name pos:start="59:19" pos:end="59:19">s</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:31">start_time</name></name> <operator pos:start="59:33" pos:end="59:33">=</operator> <name pos:start="59:35" pos:end="59:48">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:59"><expr pos:start="61:5" pos:end="61:58"><call pos:start="61:5" pos:end="61:58"><name pos:start="61:5" pos:end="61:14">av_strlcpy</name><argument_list pos:start="61:15" pos:end="61:58">(<argument pos:start="61:16" pos:end="61:26"><expr pos:start="61:16" pos:end="61:26"><name pos:start="61:16" pos:end="61:26"><name pos:start="61:16" pos:end="61:16">s</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:26">filename</name></name></expr></argument>, <argument pos:start="61:29" pos:end="61:36"><expr pos:start="61:29" pos:end="61:36"><name pos:start="61:29" pos:end="61:36">filename</name></expr></argument>, <argument pos:start="61:39" pos:end="61:57"><expr pos:start="61:39" pos:end="61:57"><sizeof pos:start="61:39" pos:end="61:57">sizeof<argument_list pos:start="61:45" pos:end="61:57">(<argument pos:start="61:46" pos:end="61:56"><expr pos:start="61:46" pos:end="61:56"><name pos:start="61:46" pos:end="61:56"><name pos:start="61:46" pos:end="61:46">s</name><operator pos:start="61:47" pos:end="61:48">-&gt;</operator><name pos:start="61:49" pos:end="61:56">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:31">/* allocate private data */</comment>

    <if_stmt pos:start="67:5" pos:end="89:5"><if pos:start="67:5" pos:end="89:5">if <condition pos:start="67:8" pos:end="67:39">(<expr pos:start="67:9" pos:end="67:38"><name pos:start="67:9" pos:end="67:34"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:18">iformat</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:34">priv_data_size</name></name> <operator pos:start="67:36" pos:end="67:36">&gt;</operator> <literal type="number" pos:start="67:38" pos:end="67:38">0</literal></expr>)</condition> <block pos:start="67:41" pos:end="89:5">{<block_content pos:start="69:9" pos:end="87:9">

        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:69">(<expr pos:start="69:13" pos:end="69:68"><operator pos:start="69:13" pos:end="69:13">!</operator><operator pos:start="69:14" pos:end="69:14">(</operator><name pos:start="69:15" pos:end="69:26"><name pos:start="69:15" pos:end="69:15">s</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:26">priv_data</name></name> <operator pos:start="69:28" pos:end="69:28">=</operator> <call pos:start="69:30" pos:end="69:67"><name pos:start="69:30" pos:end="69:39">av_mallocz</name><argument_list pos:start="69:40" pos:end="69:67">(<argument pos:start="69:41" pos:end="69:66"><expr pos:start="69:41" pos:end="69:66"><name pos:start="69:41" pos:end="69:66"><name pos:start="69:41" pos:end="69:41">s</name><operator pos:start="69:42" pos:end="69:43">-&gt;</operator><name pos:start="69:44" pos:end="69:50">iformat</name><operator pos:start="69:51" pos:end="69:52">-&gt;</operator><name pos:start="69:53" pos:end="69:66">priv_data_size</name></name></expr></argument>)</argument_list></call><operator pos:start="69:68" pos:end="69:68">)</operator></expr>)</condition> <block pos:start="69:71" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:22">

            <expr_stmt pos:start="71:13" pos:end="71:34"><expr pos:start="71:13" pos:end="71:33"><name pos:start="71:13" pos:end="71:15">ret</name> <operator pos:start="71:17" pos:end="71:17">=</operator> <call pos:start="71:19" pos:end="71:33"><name pos:start="71:19" pos:end="71:25">AVERROR</name><argument_list pos:start="71:26" pos:end="71:33">(<argument pos:start="71:27" pos:end="71:32"><expr pos:start="71:27" pos:end="71:32"><name pos:start="71:27" pos:end="71:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="73:13" pos:end="73:22">goto <name pos:start="73:18" pos:end="73:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="77:9" pos:end="87:9"><if pos:start="77:9" pos:end="87:9">if <condition pos:start="77:12" pos:end="77:35">(<expr pos:start="77:13" pos:end="77:34"><name pos:start="77:13" pos:end="77:34"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:22">iformat</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:34">priv_class</name></name></expr>)</condition> <block pos:start="77:37" pos:end="87:9">{<block_content pos:start="79:13" pos:end="85:26">

            <expr_stmt pos:start="79:13" pos:end="79:68"><expr pos:start="79:13" pos:end="79:67"><operator pos:start="79:13" pos:end="79:13">*</operator><operator pos:start="79:14" pos:end="79:14">(</operator><specifier pos:start="79:15" pos:end="79:19">const</specifier> <name pos:start="79:21" pos:end="79:27">AVClass</name><operator pos:start="79:28" pos:end="79:28">*</operator><operator pos:start="79:29" pos:end="79:29">*</operator><operator pos:start="79:30" pos:end="79:30">)</operator><name pos:start="79:31" pos:end="79:42"><name pos:start="79:31" pos:end="79:31">s</name><operator pos:start="79:32" pos:end="79:33">-&gt;</operator><name pos:start="79:34" pos:end="79:42">priv_data</name></name> <operator pos:start="79:44" pos:end="79:44">=</operator> <name pos:start="79:46" pos:end="79:67"><name pos:start="79:46" pos:end="79:46">s</name><operator pos:start="79:47" pos:end="79:48">-&gt;</operator><name pos:start="79:49" pos:end="79:55">iformat</name><operator pos:start="79:56" pos:end="79:57">-&gt;</operator><name pos:start="79:58" pos:end="79:67">priv_class</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:46"><expr pos:start="81:13" pos:end="81:45"><call pos:start="81:13" pos:end="81:45"><name pos:start="81:13" pos:end="81:31">av_opt_set_defaults</name><argument_list pos:start="81:32" pos:end="81:45">(<argument pos:start="81:33" pos:end="81:44"><expr pos:start="81:33" pos:end="81:44"><name pos:start="81:33" pos:end="81:44"><name pos:start="81:33" pos:end="81:33">s</name><operator pos:start="81:34" pos:end="81:35">-&gt;</operator><name pos:start="81:36" pos:end="81:44">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="83:13" pos:end="85:26"><if pos:start="83:13" pos:end="85:26">if <condition pos:start="83:16" pos:end="83:64">(<expr pos:start="83:17" pos:end="83:63"><operator pos:start="83:17" pos:end="83:17">(</operator><name pos:start="83:18" pos:end="83:20">ret</name> <operator pos:start="83:22" pos:end="83:22">=</operator> <call pos:start="83:24" pos:end="83:58"><name pos:start="83:24" pos:end="83:38">av_opt_set_dict</name><argument_list pos:start="83:39" pos:end="83:58">(<argument pos:start="83:40" pos:end="83:51"><expr pos:start="83:40" pos:end="83:51"><name pos:start="83:40" pos:end="83:51"><name pos:start="83:40" pos:end="83:40">s</name><operator pos:start="83:41" pos:end="83:42">-&gt;</operator><name pos:start="83:43" pos:end="83:51">priv_data</name></name></expr></argument>, <argument pos:start="83:54" pos:end="83:57"><expr pos:start="83:54" pos:end="83:57"><operator pos:start="83:54" pos:end="83:54">&amp;</operator><name pos:start="83:55" pos:end="83:57">tmp</name></expr></argument>)</argument_list></call><operator pos:start="83:59" pos:end="83:59">)</operator> <operator pos:start="83:61" pos:end="83:61">&lt;</operator> <literal type="number" pos:start="83:63" pos:end="83:63">0</literal></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:26"><block_content pos:start="85:17" pos:end="85:26">

                <goto pos:start="85:17" pos:end="85:26">goto <name pos:start="85:22" pos:end="85:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:63">/* e.g. AVFMT_NOFILE formats will not have a AVIOContext */</comment>

    <if_stmt pos:start="95:5" pos:end="97:46"><if pos:start="95:5" pos:end="97:46">if <condition pos:start="95:8" pos:end="95:14">(<expr pos:start="95:9" pos:end="95:13"><name pos:start="95:9" pos:end="95:13"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:13">pb</name></name></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:46"><block_content pos:start="97:9" pos:end="97:46">

        <expr_stmt pos:start="97:9" pos:end="97:46"><expr pos:start="97:9" pos:end="97:45"><call pos:start="97:9" pos:end="97:45"><name pos:start="97:9" pos:end="97:21">ff_id3v2_read</name><argument_list pos:start="97:22" pos:end="97:45">(<argument pos:start="97:23" pos:end="97:23"><expr pos:start="97:23" pos:end="97:23"><name pos:start="97:23" pos:end="97:23">s</name></expr></argument>, <argument pos:start="97:26" pos:end="97:44"><expr pos:start="97:26" pos:end="97:44"><name pos:start="97:26" pos:end="97:44">ID3v2_DEFAULT_MAGIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="105:22"><if pos:start="101:5" pos:end="105:22">if <condition pos:start="101:8" pos:end="101:32">(<expr pos:start="101:9" pos:end="101:31"><name pos:start="101:9" pos:end="101:31"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:18">iformat</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:31">read_header</name></name></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="105:22"><block_content pos:start="103:9" pos:end="105:22">

        <if_stmt pos:start="103:9" pos:end="105:22"><if pos:start="103:9" pos:end="105:22">if <condition pos:start="103:12" pos:end="103:56">(<expr pos:start="103:13" pos:end="103:55"><operator pos:start="103:13" pos:end="103:13">(</operator><name pos:start="103:14" pos:end="103:16">ret</name> <operator pos:start="103:18" pos:end="103:18">=</operator> <call pos:start="103:20" pos:end="103:50"><name pos:start="103:20" pos:end="103:42"><name pos:start="103:20" pos:end="103:20">s</name><operator pos:start="103:21" pos:end="103:22">-&gt;</operator><name pos:start="103:23" pos:end="103:29">iformat</name><operator pos:start="103:30" pos:end="103:31">-&gt;</operator><name pos:start="103:32" pos:end="103:42">read_header</name></name><argument_list pos:start="103:43" pos:end="103:50">(<argument pos:start="103:44" pos:end="103:44"><expr pos:start="103:44" pos:end="103:44"><name pos:start="103:44" pos:end="103:44">s</name></expr></argument>, <argument pos:start="103:47" pos:end="103:49"><expr pos:start="103:47" pos:end="103:49"><operator pos:start="103:47" pos:end="103:47">&amp;</operator><name pos:start="103:48" pos:end="103:49">ap</name></expr></argument>)</argument_list></call><operator pos:start="103:51" pos:end="103:51">)</operator> <operator pos:start="103:53" pos:end="103:53">&lt;</operator> <literal type="number" pos:start="103:55" pos:end="103:55">0</literal></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:22"><block_content pos:start="105:13" pos:end="105:22">

            <goto pos:start="105:13" pos:end="105:22">goto <name pos:start="105:18" pos:end="105:21">fail</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="109:5" pos:end="111:42"><if pos:start="109:5" pos:end="111:42">if <condition pos:start="109:8" pos:end="109:33">(<expr pos:start="109:9" pos:end="109:32"><name pos:start="109:9" pos:end="109:13"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:13">pb</name></name> <operator pos:start="109:15" pos:end="109:16">&amp;&amp;</operator> <operator pos:start="109:18" pos:end="109:18">!</operator><name pos:start="109:19" pos:end="109:32"><name pos:start="109:19" pos:end="109:19">s</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:32">data_offset</name></name></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:42"><block_content pos:start="111:9" pos:end="111:42">

        <expr_stmt pos:start="111:9" pos:end="111:42"><expr pos:start="111:9" pos:end="111:41"><name pos:start="111:9" pos:end="111:22"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:22">data_offset</name></name> <operator pos:start="111:24" pos:end="111:24">=</operator> <call pos:start="111:26" pos:end="111:41"><name pos:start="111:26" pos:end="111:34">avio_tell</name><argument_list pos:start="111:35" pos:end="111:41">(<argument pos:start="111:36" pos:end="111:40"><expr pos:start="111:36" pos:end="111:40"><name pos:start="111:36" pos:end="111:40"><name pos:start="111:36" pos:end="111:36">s</name><operator pos:start="111:37" pos:end="111:38">-&gt;</operator><name pos:start="111:39" pos:end="111:40">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:65"><expr pos:start="115:5" pos:end="115:64"><name pos:start="115:5" pos:end="115:39"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:39">raw_packet_buffer_remaining_size</name></name> <operator pos:start="115:41" pos:end="115:41">=</operator> <name pos:start="115:43" pos:end="115:64">RAW_PACKET_BUFFER_SIZE</name></expr>;</expr_stmt>



    <if_stmt pos:start="119:5" pos:end="125:5"><if pos:start="119:5" pos:end="125:5">if <condition pos:start="119:8" pos:end="119:16">(<expr pos:start="119:9" pos:end="119:15"><name pos:start="119:9" pos:end="119:15">options</name></expr>)</condition> <block pos:start="119:18" pos:end="125:5">{<block_content pos:start="121:9" pos:end="123:23">

        <expr_stmt pos:start="121:9" pos:end="121:30"><expr pos:start="121:9" pos:end="121:29"><call pos:start="121:9" pos:end="121:29"><name pos:start="121:9" pos:end="121:20">av_dict_free</name><argument_list pos:start="121:21" pos:end="121:29">(<argument pos:start="121:22" pos:end="121:28"><expr pos:start="121:22" pos:end="121:28"><name pos:start="121:22" pos:end="121:28">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:23"><expr pos:start="123:9" pos:end="123:22"><operator pos:start="123:9" pos:end="123:9">*</operator><name pos:start="123:10" pos:end="123:16">options</name> <operator pos:start="123:18" pos:end="123:18">=</operator> <name pos:start="123:20" pos:end="123:22">tmp</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:12"><expr pos:start="127:5" pos:end="127:11"><operator pos:start="127:5" pos:end="127:5">*</operator><name pos:start="127:6" pos:end="127:7">ps</name> <operator pos:start="127:9" pos:end="127:9">=</operator> <name pos:start="127:11" pos:end="127:11">s</name></expr>;</expr_stmt>

    <return pos:start="129:5" pos:end="129:13">return <expr pos:start="129:12" pos:end="129:12"><literal type="number" pos:start="129:12" pos:end="129:12">0</literal></expr>;</return>



<label pos:start="133:1" pos:end="133:5"><name pos:start="133:1" pos:end="133:4">fail</name>:</label>

    <expr_stmt pos:start="135:5" pos:end="135:23"><expr pos:start="135:5" pos:end="135:22"><call pos:start="135:5" pos:end="135:22"><name pos:start="135:5" pos:end="135:16">av_dict_free</name><argument_list pos:start="135:17" pos:end="135:22">(<argument pos:start="135:18" pos:end="135:21"><expr pos:start="135:18" pos:end="135:21"><operator pos:start="135:18" pos:end="135:18">&amp;</operator><name pos:start="135:19" pos:end="135:21">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="139:26"><if pos:start="137:5" pos:end="139:26">if <condition pos:start="137:8" pos:end="137:52">(<expr pos:start="137:9" pos:end="137:51"><name pos:start="137:9" pos:end="137:13"><name pos:start="137:9" pos:end="137:9">s</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:13">pb</name></name> <operator pos:start="137:15" pos:end="137:16">&amp;&amp;</operator> <operator pos:start="137:18" pos:end="137:18">!</operator><operator pos:start="137:19" pos:end="137:19">(</operator><name pos:start="137:20" pos:end="137:27"><name pos:start="137:20" pos:end="137:20">s</name><operator pos:start="137:21" pos:end="137:22">-&gt;</operator><name pos:start="137:23" pos:end="137:27">flags</name></name> <operator pos:start="137:29" pos:end="137:29">&amp;</operator> <name pos:start="137:31" pos:end="137:50">AVFMT_FLAG_CUSTOM_IO</name><operator pos:start="137:51" pos:end="137:51">)</operator></expr>)</condition><block type="pseudo" pos:start="139:9" pos:end="139:26"><block_content pos:start="139:9" pos:end="139:26">

        <expr_stmt pos:start="139:9" pos:end="139:26"><expr pos:start="139:9" pos:end="139:25"><call pos:start="139:9" pos:end="139:25"><name pos:start="139:9" pos:end="139:18">avio_close</name><argument_list pos:start="139:19" pos:end="139:25">(<argument pos:start="139:20" pos:end="139:24"><expr pos:start="139:20" pos:end="139:24"><name pos:start="139:20" pos:end="139:24"><name pos:start="139:20" pos:end="139:20">s</name><operator pos:start="139:21" pos:end="139:22">-&gt;</operator><name pos:start="139:23" pos:end="139:24">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:29"><expr pos:start="141:5" pos:end="141:28"><call pos:start="141:5" pos:end="141:28"><name pos:start="141:5" pos:end="141:25">avformat_free_context</name><argument_list pos:start="141:26" pos:end="141:28">(<argument pos:start="141:27" pos:end="141:27"><expr pos:start="141:27" pos:end="141:27"><name pos:start="141:27" pos:end="141:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:15"><expr pos:start="143:5" pos:end="143:14"><operator pos:start="143:5" pos:end="143:5">*</operator><name pos:start="143:6" pos:end="143:7">ps</name> <operator pos:start="143:9" pos:end="143:9">=</operator> <name pos:start="143:11" pos:end="143:14">NULL</name></expr>;</expr_stmt>

    <return pos:start="145:5" pos:end="145:15">return <expr pos:start="145:12" pos:end="145:14"><name pos:start="145:12" pos:end="145:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
