<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13092.c" pos:tabs="8"><function pos:start="1:1" pos:end="239:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">smacker_decode_header_tree</name><parameter_list pos:start="1:38" pos:end="3:73">(<parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:56"><name pos:start="1:39" pos:end="1:51">SmackVContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">smk</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:78"><decl pos:start="1:59" pos:end="1:78"><type pos:start="1:59" pos:end="1:78"><name pos:start="1:59" pos:end="1:74">BitstreamContext</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:78">bc</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:51"><decl pos:start="3:39" pos:end="3:51"><type pos:start="3:39" pos:end="3:51"><name pos:start="3:39" pos:end="3:41">int</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier><modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:51">recodes</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:62"><decl pos:start="3:54" pos:end="3:62"><type pos:start="3:54" pos:end="3:62"><name pos:start="3:54" pos:end="3:56">int</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:62">last</name></decl></parameter>, <parameter pos:start="3:65" pos:end="3:72"><decl pos:start="3:65" pos:end="3:72"><type pos:start="3:65" pos:end="3:72"><name pos:start="3:65" pos:end="3:67">int</name></type> <name pos:start="3:69" pos:end="3:72">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="239:1">{<block_content pos:start="7:5" pos:end="237:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15">HuffContext</name></type> <name pos:start="9:17" pos:end="9:20">huff</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:15">HuffContext</name></type> <name pos:start="11:17" pos:end="11:20">tmp1</name></decl>, <decl pos:start="11:23" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:15"/><name pos:start="11:23" pos:end="11:26">tmp2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">VLC</name></type> <name pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:11">vlc</name><index pos:start="13:12" pos:end="13:14">[<expr pos:start="13:13" pos:end="13:13"><literal type="number" pos:start="13:13" pos:end="13:13">2</literal></expr>]</index></name> <init pos:start="13:16" pos:end="13:26">= <expr pos:start="13:18" pos:end="13:26"><block pos:start="13:18" pos:end="13:26">{ <expr pos:start="13:20" pos:end="13:24"><block pos:start="13:20" pos:end="13:24">{ <expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:15">escapes</name><index pos:start="15:16" pos:end="15:18">[<expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:14"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:9">DBCtx</name></type> <name pos:start="17:11" pos:end="17:13">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">err</name> <init pos:start="19:13" pos:end="19:15">= <expr pos:start="19:15" pos:end="19:15"><literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if<condition pos:start="23:7" pos:end="23:27">(<expr pos:start="23:8" pos:end="23:26"><name pos:start="23:8" pos:end="23:11">size</name> <operator pos:start="23:13" pos:end="23:14">&gt;=</operator> <name pos:start="23:16" pos:end="23:23">UINT_MAX</name><operator pos:start="23:24" pos:end="23:25">&gt;&gt;</operator><literal type="number" pos:start="23:26" pos:end="23:26">4</literal></expr>)</condition><block pos:start="23:28" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:35"> <comment type="line" pos:start="23:30" pos:end="23:78">// (((size + 3) &gt;&gt; 2) + 3) &lt;&lt; 2 must not overflow</comment>

        <expr_stmt pos:start="25:9" pos:end="25:61"><expr pos:start="25:9" pos:end="25:60"><call pos:start="25:9" pos:end="25:60"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:60">(<argument pos:start="25:16" pos:end="25:25"><expr pos:start="25:16" pos:end="25:25"><name pos:start="25:16" pos:end="25:25"><name pos:start="25:16" pos:end="25:18">smk</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:25">avctx</name></name></expr></argument>, <argument pos:start="25:28" pos:end="25:39"><expr pos:start="25:28" pos:end="25:39"><name pos:start="25:28" pos:end="25:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:42" pos:end="25:59"><expr pos:start="25:42" pos:end="25:59"><literal type="string" pos:start="25:42" pos:end="25:59">"size too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:35">return <expr pos:start="27:16" pos:end="27:34"><name pos:start="27:16" pos:end="27:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:22"><expr pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:8">tmp1</name><operator pos:start="33:9" pos:end="33:9">.</operator><name pos:start="33:10" pos:end="33:15">length</name></name> <operator pos:start="33:17" pos:end="33:17">=</operator> <literal type="number" pos:start="33:19" pos:end="33:21">256</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:23"><expr pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:8">tmp1</name><operator pos:start="35:9" pos:end="35:9">.</operator><name pos:start="35:10" pos:end="35:18">maxlength</name></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <literal type="number" pos:start="35:22" pos:end="35:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:21"><expr pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:8">tmp1</name><operator pos:start="37:9" pos:end="37:9">.</operator><name pos:start="37:10" pos:end="37:16">current</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:36"><expr pos:start="39:5" pos:end="39:35"><name pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:8">tmp1</name><operator pos:start="39:9" pos:end="39:9">.</operator><name pos:start="39:10" pos:end="39:13">bits</name></name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:35"><name pos:start="39:17" pos:end="39:26">av_mallocz</name><argument_list pos:start="39:27" pos:end="39:35">(<argument pos:start="39:28" pos:end="39:34"><expr pos:start="39:28" pos:end="39:34"><literal type="number" pos:start="39:28" pos:end="39:30">256</literal> <operator pos:start="39:32" pos:end="39:32">*</operator> <literal type="number" pos:start="39:34" pos:end="39:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:49"><expr pos:start="41:5" pos:end="41:48"><name pos:start="41:5" pos:end="41:16"><name pos:start="41:5" pos:end="41:8">tmp1</name><operator pos:start="41:9" pos:end="41:9">.</operator><name pos:start="41:10" pos:end="41:16">lengths</name></name> <operator pos:start="41:18" pos:end="41:18">=</operator> <call pos:start="41:20" pos:end="41:48"><name pos:start="41:20" pos:end="41:29">av_mallocz</name><argument_list pos:start="41:30" pos:end="41:48">(<argument pos:start="41:31" pos:end="41:47"><expr pos:start="41:31" pos:end="41:47"><literal type="number" pos:start="41:31" pos:end="41:33">256</literal> <operator pos:start="41:35" pos:end="41:35">*</operator> <sizeof pos:start="41:37" pos:end="41:47">sizeof<argument_list pos:start="41:43" pos:end="41:47">(<argument pos:start="41:44" pos:end="41:46"><expr pos:start="41:44" pos:end="41:46"><name pos:start="41:44" pos:end="41:46">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:48"><expr pos:start="43:5" pos:end="43:47"><name pos:start="43:5" pos:end="43:15"><name pos:start="43:5" pos:end="43:8">tmp1</name><operator pos:start="43:9" pos:end="43:9">.</operator><name pos:start="43:10" pos:end="43:15">values</name></name> <operator pos:start="43:17" pos:end="43:17">=</operator> <call pos:start="43:19" pos:end="43:47"><name pos:start="43:19" pos:end="43:28">av_mallocz</name><argument_list pos:start="43:29" pos:end="43:47">(<argument pos:start="43:30" pos:end="43:46"><expr pos:start="43:30" pos:end="43:46"><literal type="number" pos:start="43:30" pos:end="43:32">256</literal> <operator pos:start="43:34" pos:end="43:34">*</operator> <sizeof pos:start="43:36" pos:end="43:46">sizeof<argument_list pos:start="43:42" pos:end="43:46">(<argument pos:start="43:43" pos:end="43:45"><expr pos:start="43:43" pos:end="43:45"><name pos:start="43:43" pos:end="43:45">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:22"><expr pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:15"><name pos:start="47:5" pos:end="47:8">tmp2</name><operator pos:start="47:9" pos:end="47:9">.</operator><name pos:start="47:10" pos:end="47:15">length</name></name> <operator pos:start="47:17" pos:end="47:17">=</operator> <literal type="number" pos:start="47:19" pos:end="47:21">256</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:23"><expr pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:18"><name pos:start="49:5" pos:end="49:8">tmp2</name><operator pos:start="49:9" pos:end="49:9">.</operator><name pos:start="49:10" pos:end="49:18">maxlength</name></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="number" pos:start="49:22" pos:end="49:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:21"><expr pos:start="51:5" pos:end="51:20"><name pos:start="51:5" pos:end="51:16"><name pos:start="51:5" pos:end="51:8">tmp2</name><operator pos:start="51:9" pos:end="51:9">.</operator><name pos:start="51:10" pos:end="51:16">current</name></name> <operator pos:start="51:18" pos:end="51:18">=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:36"><expr pos:start="53:5" pos:end="53:35"><name pos:start="53:5" pos:end="53:13"><name pos:start="53:5" pos:end="53:8">tmp2</name><operator pos:start="53:9" pos:end="53:9">.</operator><name pos:start="53:10" pos:end="53:13">bits</name></name> <operator pos:start="53:15" pos:end="53:15">=</operator> <call pos:start="53:17" pos:end="53:35"><name pos:start="53:17" pos:end="53:26">av_mallocz</name><argument_list pos:start="53:27" pos:end="53:35">(<argument pos:start="53:28" pos:end="53:34"><expr pos:start="53:28" pos:end="53:34"><literal type="number" pos:start="53:28" pos:end="53:30">256</literal> <operator pos:start="53:32" pos:end="53:32">*</operator> <literal type="number" pos:start="53:34" pos:end="53:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:49"><expr pos:start="55:5" pos:end="55:48"><name pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:8">tmp2</name><operator pos:start="55:9" pos:end="55:9">.</operator><name pos:start="55:10" pos:end="55:16">lengths</name></name> <operator pos:start="55:18" pos:end="55:18">=</operator> <call pos:start="55:20" pos:end="55:48"><name pos:start="55:20" pos:end="55:29">av_mallocz</name><argument_list pos:start="55:30" pos:end="55:48">(<argument pos:start="55:31" pos:end="55:47"><expr pos:start="55:31" pos:end="55:47"><literal type="number" pos:start="55:31" pos:end="55:33">256</literal> <operator pos:start="55:35" pos:end="55:35">*</operator> <sizeof pos:start="55:37" pos:end="55:47">sizeof<argument_list pos:start="55:43" pos:end="55:47">(<argument pos:start="55:44" pos:end="55:46"><expr pos:start="55:44" pos:end="55:46"><name pos:start="55:44" pos:end="55:46">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:48"><expr pos:start="57:5" pos:end="57:47"><name pos:start="57:5" pos:end="57:15"><name pos:start="57:5" pos:end="57:8">tmp2</name><operator pos:start="57:9" pos:end="57:9">.</operator><name pos:start="57:10" pos:end="57:15">values</name></name> <operator pos:start="57:17" pos:end="57:17">=</operator> <call pos:start="57:19" pos:end="57:47"><name pos:start="57:19" pos:end="57:28">av_mallocz</name><argument_list pos:start="57:29" pos:end="57:47">(<argument pos:start="57:30" pos:end="57:46"><expr pos:start="57:30" pos:end="57:46"><literal type="number" pos:start="57:30" pos:end="57:32">256</literal> <operator pos:start="57:34" pos:end="57:34">*</operator> <sizeof pos:start="57:36" pos:end="57:46">sizeof<argument_list pos:start="57:42" pos:end="57:46">(<argument pos:start="57:43" pos:end="57:45"><expr pos:start="57:43" pos:end="57:45"><name pos:start="57:43" pos:end="57:45">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="61:52">(<expr pos:start="59:9" pos:end="61:51"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:18"><name pos:start="59:10" pos:end="59:13">tmp1</name><operator pos:start="59:14" pos:end="59:14">.</operator><name pos:start="59:15" pos:end="59:18">bits</name></name> <operator pos:start="59:20" pos:end="59:21">||</operator> <operator pos:start="59:23" pos:end="59:23">!</operator><name pos:start="59:24" pos:end="59:35"><name pos:start="59:24" pos:end="59:27">tmp1</name><operator pos:start="59:28" pos:end="59:28">.</operator><name pos:start="59:29" pos:end="59:35">lengths</name></name> <operator pos:start="59:37" pos:end="59:38">||</operator> <operator pos:start="59:40" pos:end="59:40">!</operator><name pos:start="59:41" pos:end="59:51"><name pos:start="59:41" pos:end="59:44">tmp1</name><operator pos:start="59:45" pos:end="59:45">.</operator><name pos:start="59:46" pos:end="59:51">values</name></name> <operator pos:start="59:53" pos:end="59:54">||</operator>

        <operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:18"><name pos:start="61:10" pos:end="61:13">tmp2</name><operator pos:start="61:14" pos:end="61:14">.</operator><name pos:start="61:15" pos:end="61:18">bits</name></name> <operator pos:start="61:20" pos:end="61:21">||</operator> <operator pos:start="61:23" pos:end="61:23">!</operator><name pos:start="61:24" pos:end="61:35"><name pos:start="61:24" pos:end="61:27">tmp2</name><operator pos:start="61:28" pos:end="61:28">.</operator><name pos:start="61:29" pos:end="61:35">lengths</name></name> <operator pos:start="61:37" pos:end="61:38">||</operator> <operator pos:start="61:40" pos:end="61:40">!</operator><name pos:start="61:41" pos:end="61:51"><name pos:start="61:41" pos:end="61:44">tmp2</name><operator pos:start="61:45" pos:end="61:45">.</operator><name pos:start="61:46" pos:end="61:51">values</name></name></expr>)</condition> <block pos:start="61:54" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:19">

        <expr_stmt pos:start="63:9" pos:end="63:30"><expr pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:11">err</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <call pos:start="63:15" pos:end="63:29"><name pos:start="63:15" pos:end="63:21">AVERROR</name><argument_list pos:start="63:22" pos:end="63:29">(<argument pos:start="63:23" pos:end="63:28"><expr pos:start="63:23" pos:end="63:28"><name pos:start="63:23" pos:end="63:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:19">goto <name pos:start="65:14" pos:end="65:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="97:5"><if pos:start="71:5" pos:end="93:5">if <condition pos:start="71:8" pos:end="71:31">(<expr pos:start="71:9" pos:end="71:30"><call pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:26">bitstream_read_bit</name><argument_list pos:start="71:27" pos:end="71:30">(<argument pos:start="71:28" pos:end="71:29"><expr pos:start="71:28" pos:end="71:29"><name pos:start="71:28" pos:end="71:29">bc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:33" pos:end="93:5">{<block_content pos:start="73:9" pos:end="91:9">

        <expr_stmt pos:start="73:9" pos:end="73:45"><expr pos:start="73:9" pos:end="73:44"><call pos:start="73:9" pos:end="73:44"><name pos:start="73:9" pos:end="73:27">smacker_decode_tree</name><argument_list pos:start="73:28" pos:end="73:44">(<argument pos:start="73:29" pos:end="73:30"><expr pos:start="73:29" pos:end="73:30"><name pos:start="73:29" pos:end="73:30">bc</name></expr></argument>, <argument pos:start="73:33" pos:end="73:37"><expr pos:start="73:33" pos:end="73:37"><operator pos:start="73:33" pos:end="73:33">&amp;</operator><name pos:start="73:34" pos:end="73:37">tmp1</name></expr></argument>, <argument pos:start="73:40" pos:end="73:40"><expr pos:start="73:40" pos:end="73:40"><literal type="number" pos:start="73:40" pos:end="73:40">0</literal></expr></argument>, <argument pos:start="73:43" pos:end="73:43"><expr pos:start="73:43" pos:end="73:43"><literal type="number" pos:start="73:43" pos:end="73:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:30"><expr pos:start="75:9" pos:end="75:29"><call pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:22">bitstream_skip</name><argument_list pos:start="75:23" pos:end="75:29">(<argument pos:start="75:24" pos:end="75:25"><expr pos:start="75:24" pos:end="75:25"><name pos:start="75:24" pos:end="75:25">bc</name></expr></argument>, <argument pos:start="75:28" pos:end="75:28"><expr pos:start="75:28" pos:end="75:28"><literal type="number" pos:start="75:28" pos:end="75:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="81:80"><expr pos:start="77:9" pos:end="81:79"><name pos:start="77:9" pos:end="77:11">res</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <call pos:start="77:15" pos:end="81:79"><name pos:start="77:15" pos:end="77:22">init_vlc</name><argument_list pos:start="77:23" pos:end="81:79">(<argument pos:start="77:24" pos:end="77:30"><expr pos:start="77:24" pos:end="77:30"><operator pos:start="77:24" pos:end="77:24">&amp;</operator><name pos:start="77:25" pos:end="77:30"><name pos:start="77:25" pos:end="77:27">vlc</name><index pos:start="77:28" pos:end="77:30">[<expr pos:start="77:29" pos:end="77:29"><literal type="number" pos:start="77:29" pos:end="77:29">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="77:33" pos:end="77:44"><expr pos:start="77:33" pos:end="77:44"><name pos:start="77:33" pos:end="77:44">SMKTREE_BITS</name></expr></argument>, <argument pos:start="77:47" pos:end="77:57"><expr pos:start="77:47" pos:end="77:57"><name pos:start="77:47" pos:end="77:57"><name pos:start="77:47" pos:end="77:50">tmp1</name><operator pos:start="77:51" pos:end="77:51">.</operator><name pos:start="77:52" pos:end="77:57">length</name></name></expr></argument>,

                    <argument pos:start="79:21" pos:end="79:32"><expr pos:start="79:21" pos:end="79:32"><name pos:start="79:21" pos:end="79:32"><name pos:start="79:21" pos:end="79:24">tmp1</name><operator pos:start="79:25" pos:end="79:25">.</operator><name pos:start="79:26" pos:end="79:32">lengths</name></name></expr></argument>, <argument pos:start="79:35" pos:end="79:45"><expr pos:start="79:35" pos:end="79:45"><sizeof pos:start="79:35" pos:end="79:45">sizeof<argument_list pos:start="79:41" pos:end="79:45">(<argument pos:start="79:42" pos:end="79:44"><expr pos:start="79:42" pos:end="79:44"><name pos:start="79:42" pos:end="79:44">int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="79:48" pos:end="79:58"><expr pos:start="79:48" pos:end="79:58"><sizeof pos:start="79:48" pos:end="79:58">sizeof<argument_list pos:start="79:54" pos:end="79:58">(<argument pos:start="79:55" pos:end="79:57"><expr pos:start="79:55" pos:end="79:57"><name pos:start="79:55" pos:end="79:57">int</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                    <argument pos:start="81:21" pos:end="81:29"><expr pos:start="81:21" pos:end="81:29"><name pos:start="81:21" pos:end="81:29"><name pos:start="81:21" pos:end="81:24">tmp1</name><operator pos:start="81:25" pos:end="81:25">.</operator><name pos:start="81:26" pos:end="81:29">bits</name></name></expr></argument>, <argument pos:start="81:32" pos:end="81:47"><expr pos:start="81:32" pos:end="81:47"><sizeof pos:start="81:32" pos:end="81:47">sizeof<argument_list pos:start="81:38" pos:end="81:47">(<argument pos:start="81:39" pos:end="81:46"><expr pos:start="81:39" pos:end="81:46"><name pos:start="81:39" pos:end="81:46">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="81:50" pos:end="81:65"><expr pos:start="81:50" pos:end="81:65"><sizeof pos:start="81:50" pos:end="81:65">sizeof<argument_list pos:start="81:56" pos:end="81:65">(<argument pos:start="81:57" pos:end="81:64"><expr pos:start="81:57" pos:end="81:64"><name pos:start="81:57" pos:end="81:64">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="81:68" pos:end="81:78"><expr pos:start="81:68" pos:end="81:78"><name pos:start="81:68" pos:end="81:78">INIT_VLC_LE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="91:9"><if pos:start="83:9" pos:end="91:9">if<condition pos:start="83:11" pos:end="83:19">(<expr pos:start="83:12" pos:end="83:18"><name pos:start="83:12" pos:end="83:14">res</name> <operator pos:start="83:16" pos:end="83:16">&lt;</operator> <literal type="number" pos:start="83:18" pos:end="83:18">0</literal></expr>)</condition> <block pos:start="83:21" pos:end="91:9">{<block_content pos:start="85:13" pos:end="89:23">

            <expr_stmt pos:start="85:13" pos:end="85:73"><expr pos:start="85:13" pos:end="85:72"><call pos:start="85:13" pos:end="85:72"><name pos:start="85:13" pos:end="85:18">av_log</name><argument_list pos:start="85:19" pos:end="85:72">(<argument pos:start="85:20" pos:end="85:29"><expr pos:start="85:20" pos:end="85:29"><name pos:start="85:20" pos:end="85:29"><name pos:start="85:20" pos:end="85:22">smk</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:29">avctx</name></name></expr></argument>, <argument pos:start="85:32" pos:end="85:43"><expr pos:start="85:32" pos:end="85:43"><name pos:start="85:32" pos:end="85:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:46" pos:end="85:71"><expr pos:start="85:46" pos:end="85:71"><literal type="string" pos:start="85:46" pos:end="85:71">"Cannot build VLC table\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:22"><expr pos:start="87:13" pos:end="87:21"><name pos:start="87:13" pos:end="87:15">err</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <name pos:start="87:19" pos:end="87:21">res</name></expr>;</expr_stmt>

            <goto pos:start="89:13" pos:end="89:23">goto <name pos:start="89:18" pos:end="89:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="93:7" pos:end="97:5">else <block pos:start="93:12" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:70">

        <expr_stmt pos:start="95:9" pos:end="95:70"><expr pos:start="95:9" pos:end="95:69"><call pos:start="95:9" pos:end="95:69"><name pos:start="95:9" pos:end="95:14">av_log</name><argument_list pos:start="95:15" pos:end="95:69">(<argument pos:start="95:16" pos:end="95:25"><expr pos:start="95:16" pos:end="95:25"><name pos:start="95:16" pos:end="95:25"><name pos:start="95:16" pos:end="95:18">smk</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:25">avctx</name></name></expr></argument>, <argument pos:start="95:28" pos:end="95:39"><expr pos:start="95:28" pos:end="95:39"><name pos:start="95:28" pos:end="95:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="95:42" pos:end="95:68"><expr pos:start="95:42" pos:end="95:68"><literal type="string" pos:start="95:42" pos:end="95:68">"Skipping low bytes tree\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="99:5" pos:end="125:5"><if pos:start="99:5" pos:end="121:5">if <condition pos:start="99:8" pos:end="99:31">(<expr pos:start="99:9" pos:end="99:30"><call pos:start="99:9" pos:end="99:30"><name pos:start="99:9" pos:end="99:26">bitstream_read_bit</name><argument_list pos:start="99:27" pos:end="99:30">(<argument pos:start="99:28" pos:end="99:29"><expr pos:start="99:28" pos:end="99:29"><name pos:start="99:28" pos:end="99:29">bc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:33" pos:end="121:5">{<block_content pos:start="101:9" pos:end="119:9">

        <expr_stmt pos:start="101:9" pos:end="101:45"><expr pos:start="101:9" pos:end="101:44"><call pos:start="101:9" pos:end="101:44"><name pos:start="101:9" pos:end="101:27">smacker_decode_tree</name><argument_list pos:start="101:28" pos:end="101:44">(<argument pos:start="101:29" pos:end="101:30"><expr pos:start="101:29" pos:end="101:30"><name pos:start="101:29" pos:end="101:30">bc</name></expr></argument>, <argument pos:start="101:33" pos:end="101:37"><expr pos:start="101:33" pos:end="101:37"><operator pos:start="101:33" pos:end="101:33">&amp;</operator><name pos:start="101:34" pos:end="101:37">tmp2</name></expr></argument>, <argument pos:start="101:40" pos:end="101:40"><expr pos:start="101:40" pos:end="101:40"><literal type="number" pos:start="101:40" pos:end="101:40">0</literal></expr></argument>, <argument pos:start="101:43" pos:end="101:43"><expr pos:start="101:43" pos:end="101:43"><literal type="number" pos:start="101:43" pos:end="101:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:30"><expr pos:start="103:9" pos:end="103:29"><call pos:start="103:9" pos:end="103:29"><name pos:start="103:9" pos:end="103:22">bitstream_skip</name><argument_list pos:start="103:23" pos:end="103:29">(<argument pos:start="103:24" pos:end="103:25"><expr pos:start="103:24" pos:end="103:25"><name pos:start="103:24" pos:end="103:25">bc</name></expr></argument>, <argument pos:start="103:28" pos:end="103:28"><expr pos:start="103:28" pos:end="103:28"><literal type="number" pos:start="103:28" pos:end="103:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="109:80"><expr pos:start="105:9" pos:end="109:79"><name pos:start="105:9" pos:end="105:11">res</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <call pos:start="105:15" pos:end="109:79"><name pos:start="105:15" pos:end="105:22">init_vlc</name><argument_list pos:start="105:23" pos:end="109:79">(<argument pos:start="105:24" pos:end="105:30"><expr pos:start="105:24" pos:end="105:30"><operator pos:start="105:24" pos:end="105:24">&amp;</operator><name pos:start="105:25" pos:end="105:30"><name pos:start="105:25" pos:end="105:27">vlc</name><index pos:start="105:28" pos:end="105:30">[<expr pos:start="105:29" pos:end="105:29"><literal type="number" pos:start="105:29" pos:end="105:29">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="105:33" pos:end="105:44"><expr pos:start="105:33" pos:end="105:44"><name pos:start="105:33" pos:end="105:44">SMKTREE_BITS</name></expr></argument>, <argument pos:start="105:47" pos:end="105:57"><expr pos:start="105:47" pos:end="105:57"><name pos:start="105:47" pos:end="105:57"><name pos:start="105:47" pos:end="105:50">tmp2</name><operator pos:start="105:51" pos:end="105:51">.</operator><name pos:start="105:52" pos:end="105:57">length</name></name></expr></argument>,

                    <argument pos:start="107:21" pos:end="107:32"><expr pos:start="107:21" pos:end="107:32"><name pos:start="107:21" pos:end="107:32"><name pos:start="107:21" pos:end="107:24">tmp2</name><operator pos:start="107:25" pos:end="107:25">.</operator><name pos:start="107:26" pos:end="107:32">lengths</name></name></expr></argument>, <argument pos:start="107:35" pos:end="107:45"><expr pos:start="107:35" pos:end="107:45"><sizeof pos:start="107:35" pos:end="107:45">sizeof<argument_list pos:start="107:41" pos:end="107:45">(<argument pos:start="107:42" pos:end="107:44"><expr pos:start="107:42" pos:end="107:44"><name pos:start="107:42" pos:end="107:44">int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="107:48" pos:end="107:58"><expr pos:start="107:48" pos:end="107:58"><sizeof pos:start="107:48" pos:end="107:58">sizeof<argument_list pos:start="107:54" pos:end="107:58">(<argument pos:start="107:55" pos:end="107:57"><expr pos:start="107:55" pos:end="107:57"><name pos:start="107:55" pos:end="107:57">int</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                    <argument pos:start="109:21" pos:end="109:29"><expr pos:start="109:21" pos:end="109:29"><name pos:start="109:21" pos:end="109:29"><name pos:start="109:21" pos:end="109:24">tmp2</name><operator pos:start="109:25" pos:end="109:25">.</operator><name pos:start="109:26" pos:end="109:29">bits</name></name></expr></argument>, <argument pos:start="109:32" pos:end="109:47"><expr pos:start="109:32" pos:end="109:47"><sizeof pos:start="109:32" pos:end="109:47">sizeof<argument_list pos:start="109:38" pos:end="109:47">(<argument pos:start="109:39" pos:end="109:46"><expr pos:start="109:39" pos:end="109:46"><name pos:start="109:39" pos:end="109:46">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="109:50" pos:end="109:65"><expr pos:start="109:50" pos:end="109:65"><sizeof pos:start="109:50" pos:end="109:65">sizeof<argument_list pos:start="109:56" pos:end="109:65">(<argument pos:start="109:57" pos:end="109:64"><expr pos:start="109:57" pos:end="109:64"><name pos:start="109:57" pos:end="109:64">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="109:68" pos:end="109:78"><expr pos:start="109:68" pos:end="109:78"><name pos:start="109:68" pos:end="109:78">INIT_VLC_LE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="119:9"><if pos:start="111:9" pos:end="119:9">if<condition pos:start="111:11" pos:end="111:19">(<expr pos:start="111:12" pos:end="111:18"><name pos:start="111:12" pos:end="111:14">res</name> <operator pos:start="111:16" pos:end="111:16">&lt;</operator> <literal type="number" pos:start="111:18" pos:end="111:18">0</literal></expr>)</condition> <block pos:start="111:21" pos:end="119:9">{<block_content pos:start="113:13" pos:end="117:23">

            <expr_stmt pos:start="113:13" pos:end="113:73"><expr pos:start="113:13" pos:end="113:72"><call pos:start="113:13" pos:end="113:72"><name pos:start="113:13" pos:end="113:18">av_log</name><argument_list pos:start="113:19" pos:end="113:72">(<argument pos:start="113:20" pos:end="113:29"><expr pos:start="113:20" pos:end="113:29"><name pos:start="113:20" pos:end="113:29"><name pos:start="113:20" pos:end="113:22">smk</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:29">avctx</name></name></expr></argument>, <argument pos:start="113:32" pos:end="113:43"><expr pos:start="113:32" pos:end="113:43"><name pos:start="113:32" pos:end="113:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="113:46" pos:end="113:71"><expr pos:start="113:46" pos:end="113:71"><literal type="string" pos:start="113:46" pos:end="113:71">"Cannot build VLC table\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:22"><expr pos:start="115:13" pos:end="115:21"><name pos:start="115:13" pos:end="115:15">err</name> <operator pos:start="115:17" pos:end="115:17">=</operator> <name pos:start="115:19" pos:end="115:21">res</name></expr>;</expr_stmt>

            <goto pos:start="117:13" pos:end="117:23">goto <name pos:start="117:18" pos:end="117:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="121:7" pos:end="125:5">else <block pos:start="121:12" pos:end="125:5">{<block_content pos:start="123:9" pos:end="123:71">

        <expr_stmt pos:start="123:9" pos:end="123:71"><expr pos:start="123:9" pos:end="123:70"><call pos:start="123:9" pos:end="123:70"><name pos:start="123:9" pos:end="123:14">av_log</name><argument_list pos:start="123:15" pos:end="123:70">(<argument pos:start="123:16" pos:end="123:25"><expr pos:start="123:16" pos:end="123:25"><name pos:start="123:16" pos:end="123:25"><name pos:start="123:16" pos:end="123:18">smk</name><operator pos:start="123:19" pos:end="123:20">-&gt;</operator><name pos:start="123:21" pos:end="123:25">avctx</name></name></expr></argument>, <argument pos:start="123:28" pos:end="123:39"><expr pos:start="123:28" pos:end="123:39"><name pos:start="123:28" pos:end="123:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="123:42" pos:end="123:69"><expr pos:start="123:42" pos:end="123:69"><literal type="string" pos:start="123:42" pos:end="123:69">"Skipping high bytes tree\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:40"><expr pos:start="129:5" pos:end="129:39"><name pos:start="129:5" pos:end="129:14"><name pos:start="129:5" pos:end="129:11">escapes</name><index pos:start="129:12" pos:end="129:14">[<expr pos:start="129:13" pos:end="129:13"><literal type="number" pos:start="129:13" pos:end="129:13">0</literal></expr>]</index></name>  <operator pos:start="129:17" pos:end="129:17">=</operator> <call pos:start="129:19" pos:end="129:39"><name pos:start="129:19" pos:end="129:32">bitstream_read</name><argument_list pos:start="129:33" pos:end="129:39">(<argument pos:start="129:34" pos:end="129:35"><expr pos:start="129:34" pos:end="129:35"><name pos:start="129:34" pos:end="129:35">bc</name></expr></argument>, <argument pos:start="129:38" pos:end="129:38"><expr pos:start="129:38" pos:end="129:38"><literal type="number" pos:start="129:38" pos:end="129:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:45"><expr pos:start="131:5" pos:end="131:44"><name pos:start="131:5" pos:end="131:14"><name pos:start="131:5" pos:end="131:11">escapes</name><index pos:start="131:12" pos:end="131:14">[<expr pos:start="131:13" pos:end="131:13"><literal type="number" pos:start="131:13" pos:end="131:13">0</literal></expr>]</index></name> <operator pos:start="131:16" pos:end="131:17">|=</operator> <call pos:start="131:19" pos:end="131:39"><name pos:start="131:19" pos:end="131:32">bitstream_read</name><argument_list pos:start="131:33" pos:end="131:39">(<argument pos:start="131:34" pos:end="131:35"><expr pos:start="131:34" pos:end="131:35"><name pos:start="131:34" pos:end="131:35">bc</name></expr></argument>, <argument pos:start="131:38" pos:end="131:38"><expr pos:start="131:38" pos:end="131:38"><literal type="number" pos:start="131:38" pos:end="131:38">8</literal></expr></argument>)</argument_list></call> <operator pos:start="131:41" pos:end="131:42">&lt;&lt;</operator> <literal type="number" pos:start="131:44" pos:end="131:44">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:40"><expr pos:start="133:5" pos:end="133:39"><name pos:start="133:5" pos:end="133:14"><name pos:start="133:5" pos:end="133:11">escapes</name><index pos:start="133:12" pos:end="133:14">[<expr pos:start="133:13" pos:end="133:13"><literal type="number" pos:start="133:13" pos:end="133:13">1</literal></expr>]</index></name>  <operator pos:start="133:17" pos:end="133:17">=</operator> <call pos:start="133:19" pos:end="133:39"><name pos:start="133:19" pos:end="133:32">bitstream_read</name><argument_list pos:start="133:33" pos:end="133:39">(<argument pos:start="133:34" pos:end="133:35"><expr pos:start="133:34" pos:end="133:35"><name pos:start="133:34" pos:end="133:35">bc</name></expr></argument>, <argument pos:start="133:38" pos:end="133:38"><expr pos:start="133:38" pos:end="133:38"><literal type="number" pos:start="133:38" pos:end="133:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:45"><expr pos:start="135:5" pos:end="135:44"><name pos:start="135:5" pos:end="135:14"><name pos:start="135:5" pos:end="135:11">escapes</name><index pos:start="135:12" pos:end="135:14">[<expr pos:start="135:13" pos:end="135:13"><literal type="number" pos:start="135:13" pos:end="135:13">1</literal></expr>]</index></name> <operator pos:start="135:16" pos:end="135:17">|=</operator> <call pos:start="135:19" pos:end="135:39"><name pos:start="135:19" pos:end="135:32">bitstream_read</name><argument_list pos:start="135:33" pos:end="135:39">(<argument pos:start="135:34" pos:end="135:35"><expr pos:start="135:34" pos:end="135:35"><name pos:start="135:34" pos:end="135:35">bc</name></expr></argument>, <argument pos:start="135:38" pos:end="135:38"><expr pos:start="135:38" pos:end="135:38"><literal type="number" pos:start="135:38" pos:end="135:38">8</literal></expr></argument>)</argument_list></call> <operator pos:start="135:41" pos:end="135:42">&lt;&lt;</operator> <literal type="number" pos:start="135:44" pos:end="135:44">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:40"><expr pos:start="137:5" pos:end="137:39"><name pos:start="137:5" pos:end="137:14"><name pos:start="137:5" pos:end="137:11">escapes</name><index pos:start="137:12" pos:end="137:14">[<expr pos:start="137:13" pos:end="137:13"><literal type="number" pos:start="137:13" pos:end="137:13">2</literal></expr>]</index></name>  <operator pos:start="137:17" pos:end="137:17">=</operator> <call pos:start="137:19" pos:end="137:39"><name pos:start="137:19" pos:end="137:32">bitstream_read</name><argument_list pos:start="137:33" pos:end="137:39">(<argument pos:start="137:34" pos:end="137:35"><expr pos:start="137:34" pos:end="137:35"><name pos:start="137:34" pos:end="137:35">bc</name></expr></argument>, <argument pos:start="137:38" pos:end="137:38"><expr pos:start="137:38" pos:end="137:38"><literal type="number" pos:start="137:38" pos:end="137:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:45"><expr pos:start="139:5" pos:end="139:44"><name pos:start="139:5" pos:end="139:14"><name pos:start="139:5" pos:end="139:11">escapes</name><index pos:start="139:12" pos:end="139:14">[<expr pos:start="139:13" pos:end="139:13"><literal type="number" pos:start="139:13" pos:end="139:13">2</literal></expr>]</index></name> <operator pos:start="139:16" pos:end="139:17">|=</operator> <call pos:start="139:19" pos:end="139:39"><name pos:start="139:19" pos:end="139:32">bitstream_read</name><argument_list pos:start="139:33" pos:end="139:39">(<argument pos:start="139:34" pos:end="139:35"><expr pos:start="139:34" pos:end="139:35"><name pos:start="139:34" pos:end="139:35">bc</name></expr></argument>, <argument pos:start="139:38" pos:end="139:38"><expr pos:start="139:38" pos:end="139:38"><literal type="number" pos:start="139:38" pos:end="139:38">8</literal></expr></argument>)</argument_list></call> <operator pos:start="139:41" pos:end="139:42">&lt;&lt;</operator> <literal type="number" pos:start="139:44" pos:end="139:44">8</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:37"><expr pos:start="143:5" pos:end="143:36"><name pos:start="143:5" pos:end="143:11"><name pos:start="143:5" pos:end="143:8">last</name><index pos:start="143:9" pos:end="143:11">[<expr pos:start="143:10" pos:end="143:10"><literal type="number" pos:start="143:10" pos:end="143:10">0</literal></expr>]</index></name> <operator pos:start="143:13" pos:end="143:13">=</operator> <name pos:start="143:15" pos:end="143:21"><name pos:start="143:15" pos:end="143:18">last</name><index pos:start="143:19" pos:end="143:21">[<expr pos:start="143:20" pos:end="143:20"><literal type="number" pos:start="143:20" pos:end="143:20">1</literal></expr>]</index></name> <operator pos:start="143:23" pos:end="143:23">=</operator> <name pos:start="143:25" pos:end="143:31"><name pos:start="143:25" pos:end="143:28">last</name><index pos:start="143:29" pos:end="143:31">[<expr pos:start="143:30" pos:end="143:30"><literal type="number" pos:start="143:30" pos:end="143:30">2</literal></expr>]</index></name> <operator pos:start="143:33" pos:end="143:33">=</operator> <operator pos:start="143:35" pos:end="143:35">-</operator><literal type="number" pos:start="143:36" pos:end="143:36">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:32"><expr pos:start="147:5" pos:end="147:31"><name pos:start="147:5" pos:end="147:18"><name pos:start="147:5" pos:end="147:7">ctx</name><operator pos:start="147:8" pos:end="147:8">.</operator><name pos:start="147:9" pos:end="147:15">escapes</name><index pos:start="147:16" pos:end="147:18">[<expr pos:start="147:17" pos:end="147:17"><literal type="number" pos:start="147:17" pos:end="147:17">0</literal></expr>]</index></name> <operator pos:start="147:20" pos:end="147:20">=</operator> <name pos:start="147:22" pos:end="147:31"><name pos:start="147:22" pos:end="147:28">escapes</name><index pos:start="147:29" pos:end="147:31">[<expr pos:start="147:30" pos:end="147:30"><literal type="number" pos:start="147:30" pos:end="147:30">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:32"><expr pos:start="149:5" pos:end="149:31"><name pos:start="149:5" pos:end="149:18"><name pos:start="149:5" pos:end="149:7">ctx</name><operator pos:start="149:8" pos:end="149:8">.</operator><name pos:start="149:9" pos:end="149:15">escapes</name><index pos:start="149:16" pos:end="149:18">[<expr pos:start="149:17" pos:end="149:17"><literal type="number" pos:start="149:17" pos:end="149:17">1</literal></expr>]</index></name> <operator pos:start="149:20" pos:end="149:20">=</operator> <name pos:start="149:22" pos:end="149:31"><name pos:start="149:22" pos:end="149:28">escapes</name><index pos:start="149:29" pos:end="149:31">[<expr pos:start="149:30" pos:end="149:30"><literal type="number" pos:start="149:30" pos:end="149:30">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:32"><expr pos:start="151:5" pos:end="151:31"><name pos:start="151:5" pos:end="151:18"><name pos:start="151:5" pos:end="151:7">ctx</name><operator pos:start="151:8" pos:end="151:8">.</operator><name pos:start="151:9" pos:end="151:15">escapes</name><index pos:start="151:16" pos:end="151:18">[<expr pos:start="151:17" pos:end="151:17"><literal type="number" pos:start="151:17" pos:end="151:17">2</literal></expr>]</index></name> <operator pos:start="151:20" pos:end="151:20">=</operator> <name pos:start="151:22" pos:end="151:31"><name pos:start="151:22" pos:end="151:28">escapes</name><index pos:start="151:29" pos:end="151:31">[<expr pos:start="151:30" pos:end="151:30"><literal type="number" pos:start="151:30" pos:end="151:30">2</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:21"><expr pos:start="153:5" pos:end="153:20"><name pos:start="153:5" pos:end="153:10"><name pos:start="153:5" pos:end="153:7">ctx</name><operator pos:start="153:8" pos:end="153:8">.</operator><name pos:start="153:9" pos:end="153:10">v1</name></name> <operator pos:start="153:12" pos:end="153:12">=</operator> <operator pos:start="153:14" pos:end="153:14">&amp;</operator><name pos:start="153:15" pos:end="153:20"><name pos:start="153:15" pos:end="153:17">vlc</name><index pos:start="153:18" pos:end="153:20">[<expr pos:start="153:19" pos:end="153:19"><literal type="number" pos:start="153:19" pos:end="153:19">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:21"><expr pos:start="155:5" pos:end="155:20"><name pos:start="155:5" pos:end="155:10"><name pos:start="155:5" pos:end="155:7">ctx</name><operator pos:start="155:8" pos:end="155:8">.</operator><name pos:start="155:9" pos:end="155:10">v2</name></name> <operator pos:start="155:12" pos:end="155:12">=</operator> <operator pos:start="155:14" pos:end="155:14">&amp;</operator><name pos:start="155:15" pos:end="155:20"><name pos:start="155:15" pos:end="155:17">vlc</name><index pos:start="155:18" pos:end="155:20">[<expr pos:start="155:19" pos:end="155:19"><literal type="number" pos:start="155:19" pos:end="155:19">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:30"><expr pos:start="157:5" pos:end="157:29"><name pos:start="157:5" pos:end="157:15"><name pos:start="157:5" pos:end="157:7">ctx</name><operator pos:start="157:8" pos:end="157:8">.</operator><name pos:start="157:9" pos:end="157:15">recode1</name></name> <operator pos:start="157:17" pos:end="157:17">=</operator> <name pos:start="157:19" pos:end="157:29"><name pos:start="157:19" pos:end="157:22">tmp1</name><operator pos:start="157:23" pos:end="157:23">.</operator><name pos:start="157:24" pos:end="157:29">values</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:30"><expr pos:start="159:5" pos:end="159:29"><name pos:start="159:5" pos:end="159:15"><name pos:start="159:5" pos:end="159:7">ctx</name><operator pos:start="159:8" pos:end="159:8">.</operator><name pos:start="159:9" pos:end="159:15">recode2</name></name> <operator pos:start="159:17" pos:end="159:17">=</operator> <name pos:start="159:19" pos:end="159:29"><name pos:start="159:19" pos:end="159:22">tmp2</name><operator pos:start="159:23" pos:end="159:23">.</operator><name pos:start="159:24" pos:end="159:29">values</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:20"><expr pos:start="161:5" pos:end="161:19"><name pos:start="161:5" pos:end="161:12"><name pos:start="161:5" pos:end="161:7">ctx</name><operator pos:start="161:8" pos:end="161:8">.</operator><name pos:start="161:9" pos:end="161:12">last</name></name> <operator pos:start="161:14" pos:end="161:14">=</operator> <name pos:start="161:16" pos:end="161:19">last</name></expr>;</expr_stmt>



    <expr_stmt pos:start="165:5" pos:end="165:40"><expr pos:start="165:5" pos:end="165:39"><name pos:start="165:5" pos:end="165:15"><name pos:start="165:5" pos:end="165:8">huff</name><operator pos:start="165:9" pos:end="165:9">.</operator><name pos:start="165:10" pos:end="165:15">length</name></name> <operator pos:start="165:17" pos:end="165:17">=</operator> <operator pos:start="165:19" pos:end="165:19">(</operator><operator pos:start="165:20" pos:end="165:20">(</operator><name pos:start="165:21" pos:end="165:24">size</name> <operator pos:start="165:26" pos:end="165:26">+</operator> <literal type="number" pos:start="165:28" pos:end="165:28">3</literal><operator pos:start="165:29" pos:end="165:29">)</operator> <operator pos:start="165:31" pos:end="165:32">&gt;&gt;</operator> <literal type="number" pos:start="165:34" pos:end="165:34">2</literal><operator pos:start="165:35" pos:end="165:35">)</operator> <operator pos:start="165:37" pos:end="165:37">+</operator> <literal type="number" pos:start="165:39" pos:end="165:39">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:23"><expr pos:start="167:5" pos:end="167:22"><name pos:start="167:5" pos:end="167:18"><name pos:start="167:5" pos:end="167:8">huff</name><operator pos:start="167:9" pos:end="167:9">.</operator><name pos:start="167:10" pos:end="167:18">maxlength</name></name> <operator pos:start="167:20" pos:end="167:20">=</operator> <literal type="number" pos:start="167:22" pos:end="167:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:21"><expr pos:start="169:5" pos:end="169:20"><name pos:start="169:5" pos:end="169:16"><name pos:start="169:5" pos:end="169:8">huff</name><operator pos:start="169:9" pos:end="169:9">.</operator><name pos:start="169:10" pos:end="169:16">current</name></name> <operator pos:start="169:18" pos:end="169:18">=</operator> <literal type="number" pos:start="169:20" pos:end="169:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:56"><expr pos:start="171:5" pos:end="171:55"><name pos:start="171:5" pos:end="171:15"><name pos:start="171:5" pos:end="171:8">huff</name><operator pos:start="171:9" pos:end="171:9">.</operator><name pos:start="171:10" pos:end="171:15">values</name></name> <operator pos:start="171:17" pos:end="171:17">=</operator> <call pos:start="171:19" pos:end="171:55"><name pos:start="171:19" pos:end="171:28">av_mallocz</name><argument_list pos:start="171:29" pos:end="171:55">(<argument pos:start="171:30" pos:end="171:54"><expr pos:start="171:30" pos:end="171:54"><name pos:start="171:30" pos:end="171:40"><name pos:start="171:30" pos:end="171:33">huff</name><operator pos:start="171:34" pos:end="171:34">.</operator><name pos:start="171:35" pos:end="171:40">length</name></name> <operator pos:start="171:42" pos:end="171:42">*</operator> <sizeof pos:start="171:44" pos:end="171:54">sizeof<argument_list pos:start="171:50" pos:end="171:54">(<argument pos:start="171:51" pos:end="171:53"><expr pos:start="171:51" pos:end="171:53"><name pos:start="171:51" pos:end="171:53">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="173:5" pos:end="179:5"><if pos:start="173:5" pos:end="179:5">if <condition pos:start="173:8" pos:end="173:21">(<expr pos:start="173:9" pos:end="173:20"><operator pos:start="173:9" pos:end="173:9">!</operator><name pos:start="173:10" pos:end="173:20"><name pos:start="173:10" pos:end="173:13">huff</name><operator pos:start="173:14" pos:end="173:14">.</operator><name pos:start="173:15" pos:end="173:20">values</name></name></expr>)</condition> <block pos:start="173:23" pos:end="179:5">{<block_content pos:start="175:9" pos:end="177:19">

        <expr_stmt pos:start="175:9" pos:end="175:30"><expr pos:start="175:9" pos:end="175:29"><name pos:start="175:9" pos:end="175:11">err</name> <operator pos:start="175:13" pos:end="175:13">=</operator> <call pos:start="175:15" pos:end="175:29"><name pos:start="175:15" pos:end="175:21">AVERROR</name><argument_list pos:start="175:22" pos:end="175:29">(<argument pos:start="175:23" pos:end="175:28"><expr pos:start="175:23" pos:end="175:28"><name pos:start="175:23" pos:end="175:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="177:9" pos:end="177:19">goto <name pos:start="177:14" pos:end="177:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="183:5" pos:end="185:18"><if pos:start="183:5" pos:end="185:18">if <condition pos:start="183:8" pos:end="183:60">(<expr pos:start="183:9" pos:end="183:59"><operator pos:start="183:9" pos:end="183:9">(</operator><name pos:start="183:10" pos:end="183:12">res</name> <operator pos:start="183:14" pos:end="183:14">=</operator> <call pos:start="183:16" pos:end="183:54"><name pos:start="183:16" pos:end="183:37">smacker_decode_bigtree</name><argument_list pos:start="183:38" pos:end="183:54">(<argument pos:start="183:39" pos:end="183:40"><expr pos:start="183:39" pos:end="183:40"><name pos:start="183:39" pos:end="183:40">bc</name></expr></argument>, <argument pos:start="183:43" pos:end="183:47"><expr pos:start="183:43" pos:end="183:47"><operator pos:start="183:43" pos:end="183:43">&amp;</operator><name pos:start="183:44" pos:end="183:47">huff</name></expr></argument>, <argument pos:start="183:50" pos:end="183:53"><expr pos:start="183:50" pos:end="183:53"><operator pos:start="183:50" pos:end="183:50">&amp;</operator><name pos:start="183:51" pos:end="183:53">ctx</name></expr></argument>)</argument_list></call><operator pos:start="183:55" pos:end="183:55">)</operator> <operator pos:start="183:57" pos:end="183:57">&lt;</operator> <literal type="number" pos:start="183:59" pos:end="183:59">0</literal></expr>)</condition><block type="pseudo" pos:start="185:9" pos:end="185:18"><block_content pos:start="185:9" pos:end="185:18">

        <expr_stmt pos:start="185:9" pos:end="185:18"><expr pos:start="185:9" pos:end="185:17"><name pos:start="185:9" pos:end="185:11">err</name> <operator pos:start="185:13" pos:end="185:13">=</operator> <name pos:start="185:15" pos:end="185:17">res</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:26"><expr pos:start="187:5" pos:end="187:25"><call pos:start="187:5" pos:end="187:25"><name pos:start="187:5" pos:end="187:18">bitstream_skip</name><argument_list pos:start="187:19" pos:end="187:25">(<argument pos:start="187:20" pos:end="187:21"><expr pos:start="187:20" pos:end="187:21"><name pos:start="187:20" pos:end="187:21">bc</name></expr></argument>, <argument pos:start="187:24" pos:end="187:24"><expr pos:start="187:24" pos:end="187:24"><literal type="number" pos:start="187:24" pos:end="187:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="189:5" pos:end="189:55"><if pos:start="189:5" pos:end="189:55">if<condition pos:start="189:7" pos:end="189:25">(<expr pos:start="189:8" pos:end="189:24"><name pos:start="189:8" pos:end="189:18"><name pos:start="189:8" pos:end="189:10">ctx</name><operator pos:start="189:11" pos:end="189:11">.</operator><name pos:start="189:12" pos:end="189:15">last</name><index pos:start="189:16" pos:end="189:18">[<expr pos:start="189:17" pos:end="189:17"><literal type="number" pos:start="189:17" pos:end="189:17">0</literal></expr>]</index></name> <operator pos:start="189:20" pos:end="189:21">==</operator> <operator pos:start="189:23" pos:end="189:23">-</operator><literal type="number" pos:start="189:24" pos:end="189:24">1</literal></expr>)</condition><block type="pseudo" pos:start="189:27" pos:end="189:55"><block_content pos:start="189:27" pos:end="189:55"> <expr_stmt pos:start="189:27" pos:end="189:55"><expr pos:start="189:27" pos:end="189:54"><name pos:start="189:27" pos:end="189:37"><name pos:start="189:27" pos:end="189:29">ctx</name><operator pos:start="189:30" pos:end="189:30">.</operator><name pos:start="189:31" pos:end="189:34">last</name><index pos:start="189:35" pos:end="189:37">[<expr pos:start="189:36" pos:end="189:36"><literal type="number" pos:start="189:36" pos:end="189:36">0</literal></expr>]</index></name> <operator pos:start="189:39" pos:end="189:39">=</operator> <name pos:start="189:41" pos:end="189:52"><name pos:start="189:41" pos:end="189:44">huff</name><operator pos:start="189:45" pos:end="189:45">.</operator><name pos:start="189:46" pos:end="189:52">current</name></name><operator pos:start="189:53" pos:end="189:54">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="191:5" pos:end="191:55"><if pos:start="191:5" pos:end="191:55">if<condition pos:start="191:7" pos:end="191:25">(<expr pos:start="191:8" pos:end="191:24"><name pos:start="191:8" pos:end="191:18"><name pos:start="191:8" pos:end="191:10">ctx</name><operator pos:start="191:11" pos:end="191:11">.</operator><name pos:start="191:12" pos:end="191:15">last</name><index pos:start="191:16" pos:end="191:18">[<expr pos:start="191:17" pos:end="191:17"><literal type="number" pos:start="191:17" pos:end="191:17">1</literal></expr>]</index></name> <operator pos:start="191:20" pos:end="191:21">==</operator> <operator pos:start="191:23" pos:end="191:23">-</operator><literal type="number" pos:start="191:24" pos:end="191:24">1</literal></expr>)</condition><block type="pseudo" pos:start="191:27" pos:end="191:55"><block_content pos:start="191:27" pos:end="191:55"> <expr_stmt pos:start="191:27" pos:end="191:55"><expr pos:start="191:27" pos:end="191:54"><name pos:start="191:27" pos:end="191:37"><name pos:start="191:27" pos:end="191:29">ctx</name><operator pos:start="191:30" pos:end="191:30">.</operator><name pos:start="191:31" pos:end="191:34">last</name><index pos:start="191:35" pos:end="191:37">[<expr pos:start="191:36" pos:end="191:36"><literal type="number" pos:start="191:36" pos:end="191:36">1</literal></expr>]</index></name> <operator pos:start="191:39" pos:end="191:39">=</operator> <name pos:start="191:41" pos:end="191:52"><name pos:start="191:41" pos:end="191:44">huff</name><operator pos:start="191:45" pos:end="191:45">.</operator><name pos:start="191:46" pos:end="191:52">current</name></name><operator pos:start="191:53" pos:end="191:54">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="193:5" pos:end="193:55"><if pos:start="193:5" pos:end="193:55">if<condition pos:start="193:7" pos:end="193:25">(<expr pos:start="193:8" pos:end="193:24"><name pos:start="193:8" pos:end="193:18"><name pos:start="193:8" pos:end="193:10">ctx</name><operator pos:start="193:11" pos:end="193:11">.</operator><name pos:start="193:12" pos:end="193:15">last</name><index pos:start="193:16" pos:end="193:18">[<expr pos:start="193:17" pos:end="193:17"><literal type="number" pos:start="193:17" pos:end="193:17">2</literal></expr>]</index></name> <operator pos:start="193:20" pos:end="193:21">==</operator> <operator pos:start="193:23" pos:end="193:23">-</operator><literal type="number" pos:start="193:24" pos:end="193:24">1</literal></expr>)</condition><block type="pseudo" pos:start="193:27" pos:end="193:55"><block_content pos:start="193:27" pos:end="193:55"> <expr_stmt pos:start="193:27" pos:end="193:55"><expr pos:start="193:27" pos:end="193:54"><name pos:start="193:27" pos:end="193:37"><name pos:start="193:27" pos:end="193:29">ctx</name><operator pos:start="193:30" pos:end="193:30">.</operator><name pos:start="193:31" pos:end="193:34">last</name><index pos:start="193:35" pos:end="193:37">[<expr pos:start="193:36" pos:end="193:36"><literal type="number" pos:start="193:36" pos:end="193:36">2</literal></expr>]</index></name> <operator pos:start="193:39" pos:end="193:39">=</operator> <name pos:start="193:41" pos:end="193:52"><name pos:start="193:41" pos:end="193:44">huff</name><operator pos:start="193:45" pos:end="193:45">.</operator><name pos:start="193:46" pos:end="193:52">current</name></name><operator pos:start="193:53" pos:end="193:54">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="195:5" pos:end="205:5"><if pos:start="195:5" pos:end="205:5">if <condition pos:start="195:8" pos:end="199:35">(<expr pos:start="195:9" pos:end="199:34"><name pos:start="195:9" pos:end="195:19"><name pos:start="195:9" pos:end="195:11">ctx</name><operator pos:start="195:12" pos:end="195:12">.</operator><name pos:start="195:13" pos:end="195:16">last</name><index pos:start="195:17" pos:end="195:19">[<expr pos:start="195:18" pos:end="195:18"><literal type="number" pos:start="195:18" pos:end="195:18">0</literal></expr>]</index></name> <operator pos:start="195:21" pos:end="195:22">&gt;=</operator> <name pos:start="195:24" pos:end="195:34"><name pos:start="195:24" pos:end="195:27">huff</name><operator pos:start="195:28" pos:end="195:28">.</operator><name pos:start="195:29" pos:end="195:34">length</name></name> <operator pos:start="195:36" pos:end="195:37">||</operator>

        <name pos:start="197:9" pos:end="197:19"><name pos:start="197:9" pos:end="197:11">ctx</name><operator pos:start="197:12" pos:end="197:12">.</operator><name pos:start="197:13" pos:end="197:16">last</name><index pos:start="197:17" pos:end="197:19">[<expr pos:start="197:18" pos:end="197:18"><literal type="number" pos:start="197:18" pos:end="197:18">1</literal></expr>]</index></name> <operator pos:start="197:21" pos:end="197:22">&gt;=</operator> <name pos:start="197:24" pos:end="197:34"><name pos:start="197:24" pos:end="197:27">huff</name><operator pos:start="197:28" pos:end="197:28">.</operator><name pos:start="197:29" pos:end="197:34">length</name></name> <operator pos:start="197:36" pos:end="197:37">||</operator>

        <name pos:start="199:9" pos:end="199:19"><name pos:start="199:9" pos:end="199:11">ctx</name><operator pos:start="199:12" pos:end="199:12">.</operator><name pos:start="199:13" pos:end="199:16">last</name><index pos:start="199:17" pos:end="199:19">[<expr pos:start="199:18" pos:end="199:18"><literal type="number" pos:start="199:18" pos:end="199:18">2</literal></expr>]</index></name> <operator pos:start="199:21" pos:end="199:22">&gt;=</operator> <name pos:start="199:24" pos:end="199:34"><name pos:start="199:24" pos:end="199:27">huff</name><operator pos:start="199:28" pos:end="199:28">.</operator><name pos:start="199:29" pos:end="199:34">length</name></name></expr>)</condition> <block pos:start="199:37" pos:end="205:5">{<block_content pos:start="201:9" pos:end="203:34">

        <expr_stmt pos:start="201:9" pos:end="201:73"><expr pos:start="201:9" pos:end="201:72"><call pos:start="201:9" pos:end="201:72"><name pos:start="201:9" pos:end="201:14">av_log</name><argument_list pos:start="201:15" pos:end="201:72">(<argument pos:start="201:16" pos:end="201:25"><expr pos:start="201:16" pos:end="201:25"><name pos:start="201:16" pos:end="201:25"><name pos:start="201:16" pos:end="201:18">smk</name><operator pos:start="201:19" pos:end="201:20">-&gt;</operator><name pos:start="201:21" pos:end="201:25">avctx</name></name></expr></argument>, <argument pos:start="201:28" pos:end="201:39"><expr pos:start="201:28" pos:end="201:39"><name pos:start="201:28" pos:end="201:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="201:42" pos:end="201:71"><expr pos:start="201:42" pos:end="201:71"><literal type="string" pos:start="201:42" pos:end="201:71">"Huffman codes out of range\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:34"><expr pos:start="203:9" pos:end="203:33"><name pos:start="203:9" pos:end="203:11">err</name> <operator pos:start="203:13" pos:end="203:13">=</operator> <name pos:start="203:15" pos:end="203:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="209:5" pos:end="209:27"><expr pos:start="209:5" pos:end="209:26"><operator pos:start="209:5" pos:end="209:5">*</operator><name pos:start="209:6" pos:end="209:12">recodes</name> <operator pos:start="209:14" pos:end="209:14">=</operator> <name pos:start="209:16" pos:end="209:26"><name pos:start="209:16" pos:end="209:19">huff</name><operator pos:start="209:20" pos:end="209:20">.</operator><name pos:start="209:21" pos:end="209:26">values</name></name></expr>;</expr_stmt>



<label pos:start="213:1" pos:end="213:6"><name pos:start="213:1" pos:end="213:5">error</name>:</label>

    <if_stmt pos:start="215:5" pos:end="217:29"><if pos:start="215:5" pos:end="217:29">if<condition pos:start="215:7" pos:end="215:20">(<expr pos:start="215:8" pos:end="215:19"><name pos:start="215:8" pos:end="215:13"><name pos:start="215:8" pos:end="215:10">vlc</name><index pos:start="215:11" pos:end="215:13">[<expr pos:start="215:12" pos:end="215:12"><literal type="number" pos:start="215:12" pos:end="215:12">0</literal></expr>]</index></name><operator pos:start="215:14" pos:end="215:14">.</operator><name pos:start="215:15" pos:end="215:19">table</name></expr>)</condition><block type="pseudo" pos:start="217:9" pos:end="217:29"><block_content pos:start="217:9" pos:end="217:29">

        <expr_stmt pos:start="217:9" pos:end="217:29"><expr pos:start="217:9" pos:end="217:28"><call pos:start="217:9" pos:end="217:28"><name pos:start="217:9" pos:end="217:19">ff_free_vlc</name><argument_list pos:start="217:20" pos:end="217:28">(<argument pos:start="217:21" pos:end="217:27"><expr pos:start="217:21" pos:end="217:27"><operator pos:start="217:21" pos:end="217:21">&amp;</operator><name pos:start="217:22" pos:end="217:27"><name pos:start="217:22" pos:end="217:24">vlc</name><index pos:start="217:25" pos:end="217:27">[<expr pos:start="217:26" pos:end="217:26"><literal type="number" pos:start="217:26" pos:end="217:26">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="219:5" pos:end="221:29"><if pos:start="219:5" pos:end="221:29">if<condition pos:start="219:7" pos:end="219:20">(<expr pos:start="219:8" pos:end="219:19"><name pos:start="219:8" pos:end="219:13"><name pos:start="219:8" pos:end="219:10">vlc</name><index pos:start="219:11" pos:end="219:13">[<expr pos:start="219:12" pos:end="219:12"><literal type="number" pos:start="219:12" pos:end="219:12">1</literal></expr>]</index></name><operator pos:start="219:14" pos:end="219:14">.</operator><name pos:start="219:15" pos:end="219:19">table</name></expr>)</condition><block type="pseudo" pos:start="221:9" pos:end="221:29"><block_content pos:start="221:9" pos:end="221:29">

        <expr_stmt pos:start="221:9" pos:end="221:29"><expr pos:start="221:9" pos:end="221:28"><call pos:start="221:9" pos:end="221:28"><name pos:start="221:9" pos:end="221:19">ff_free_vlc</name><argument_list pos:start="221:20" pos:end="221:28">(<argument pos:start="221:21" pos:end="221:27"><expr pos:start="221:21" pos:end="221:27"><operator pos:start="221:21" pos:end="221:21">&amp;</operator><name pos:start="221:22" pos:end="221:27"><name pos:start="221:22" pos:end="221:24">vlc</name><index pos:start="221:25" pos:end="221:27">[<expr pos:start="221:26" pos:end="221:26"><literal type="number" pos:start="221:26" pos:end="221:26">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="223:5" pos:end="223:23"><expr pos:start="223:5" pos:end="223:22"><call pos:start="223:5" pos:end="223:22"><name pos:start="223:5" pos:end="223:11">av_free</name><argument_list pos:start="223:12" pos:end="223:22">(<argument pos:start="223:13" pos:end="223:21"><expr pos:start="223:13" pos:end="223:21"><name pos:start="223:13" pos:end="223:21"><name pos:start="223:13" pos:end="223:16">tmp1</name><operator pos:start="223:17" pos:end="223:17">.</operator><name pos:start="223:18" pos:end="223:21">bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="225:5" pos:end="225:26"><expr pos:start="225:5" pos:end="225:25"><call pos:start="225:5" pos:end="225:25"><name pos:start="225:5" pos:end="225:11">av_free</name><argument_list pos:start="225:12" pos:end="225:25">(<argument pos:start="225:13" pos:end="225:24"><expr pos:start="225:13" pos:end="225:24"><name pos:start="225:13" pos:end="225:24"><name pos:start="225:13" pos:end="225:16">tmp1</name><operator pos:start="225:17" pos:end="225:17">.</operator><name pos:start="225:18" pos:end="225:24">lengths</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:25"><expr pos:start="227:5" pos:end="227:24"><call pos:start="227:5" pos:end="227:24"><name pos:start="227:5" pos:end="227:11">av_free</name><argument_list pos:start="227:12" pos:end="227:24">(<argument pos:start="227:13" pos:end="227:23"><expr pos:start="227:13" pos:end="227:23"><name pos:start="227:13" pos:end="227:23"><name pos:start="227:13" pos:end="227:16">tmp1</name><operator pos:start="227:17" pos:end="227:17">.</operator><name pos:start="227:18" pos:end="227:23">values</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="229:5" pos:end="229:23"><expr pos:start="229:5" pos:end="229:22"><call pos:start="229:5" pos:end="229:22"><name pos:start="229:5" pos:end="229:11">av_free</name><argument_list pos:start="229:12" pos:end="229:22">(<argument pos:start="229:13" pos:end="229:21"><expr pos:start="229:13" pos:end="229:21"><name pos:start="229:13" pos:end="229:21"><name pos:start="229:13" pos:end="229:16">tmp2</name><operator pos:start="229:17" pos:end="229:17">.</operator><name pos:start="229:18" pos:end="229:21">bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="231:5" pos:end="231:26"><expr pos:start="231:5" pos:end="231:25"><call pos:start="231:5" pos:end="231:25"><name pos:start="231:5" pos:end="231:11">av_free</name><argument_list pos:start="231:12" pos:end="231:25">(<argument pos:start="231:13" pos:end="231:24"><expr pos:start="231:13" pos:end="231:24"><name pos:start="231:13" pos:end="231:24"><name pos:start="231:13" pos:end="231:16">tmp2</name><operator pos:start="231:17" pos:end="231:17">.</operator><name pos:start="231:18" pos:end="231:24">lengths</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:25"><expr pos:start="233:5" pos:end="233:24"><call pos:start="233:5" pos:end="233:24"><name pos:start="233:5" pos:end="233:11">av_free</name><argument_list pos:start="233:12" pos:end="233:24">(<argument pos:start="233:13" pos:end="233:23"><expr pos:start="233:13" pos:end="233:23"><name pos:start="233:13" pos:end="233:23"><name pos:start="233:13" pos:end="233:16">tmp2</name><operator pos:start="233:17" pos:end="233:17">.</operator><name pos:start="233:18" pos:end="233:23">values</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="237:5" pos:end="237:15">return <expr pos:start="237:12" pos:end="237:14"><name pos:start="237:12" pos:end="237:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
