<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1537.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">event_test_emit</name><parameter_list pos:start="1:28" pos:end="1:73">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:42">test_QAPIEvent</name></type> <name pos:start="1:44" pos:end="1:48">event</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:58"><decl pos:start="1:51" pos:end="1:58"><type pos:start="1:51" pos:end="1:58"><name pos:start="1:51" pos:end="1:55">QDict</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:58">d</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:65">Error</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier><modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:72">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="53:59">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">QObject</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">obj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">QDict</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:12">t</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:13">s</name></decl>, <decl pos:start="9:16" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:16" pos:end="9:17">ms</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:79">/* Verify that we have timestamp, then remove it to compare other fields */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:7">obj</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:35"><name pos:start="15:11" pos:end="15:19">qdict_get</name><argument_list pos:start="15:20" pos:end="15:35">(<argument pos:start="15:21" pos:end="15:21"><expr pos:start="15:21" pos:end="15:21"><name pos:start="15:21" pos:end="15:21">d</name></expr></argument>, <argument pos:start="15:24" pos:end="15:34"><expr pos:start="15:24" pos:end="15:34"><literal type="string" pos:start="15:24" pos:end="15:34">"timestamp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:18"><expr pos:start="17:5" pos:end="17:17"><call pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:12">g_assert</name><argument_list pos:start="17:13" pos:end="17:17">(<argument pos:start="17:14" pos:end="17:16"><expr pos:start="17:14" pos:end="17:16"><name pos:start="17:14" pos:end="17:16">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:30"><expr pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:5">t</name> <operator pos:start="19:7" pos:end="19:7">=</operator> <call pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:24">qobject_to_qdict</name><argument_list pos:start="19:25" pos:end="19:29">(<argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:16"><expr pos:start="21:5" pos:end="21:15"><call pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:12">g_assert</name><argument_list pos:start="21:13" pos:end="21:15">(<argument pos:start="21:14" pos:end="21:14"><expr pos:start="21:14" pos:end="21:14"><name pos:start="21:14" pos:end="21:14">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:7">obj</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:33"><name pos:start="23:11" pos:end="23:19">qdict_get</name><argument_list pos:start="23:20" pos:end="23:33">(<argument pos:start="23:21" pos:end="23:21"><expr pos:start="23:21" pos:end="23:21"><name pos:start="23:21" pos:end="23:21">t</name></expr></argument>, <argument pos:start="23:24" pos:end="23:32"><expr pos:start="23:24" pos:end="23:32"><literal type="string" pos:start="23:24" pos:end="23:32">"seconds"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:53"><expr pos:start="25:5" pos:end="25:52"><call pos:start="25:5" pos:end="25:52"><name pos:start="25:5" pos:end="25:12">g_assert</name><argument_list pos:start="25:13" pos:end="25:52">(<argument pos:start="25:14" pos:end="25:51"><expr pos:start="25:14" pos:end="25:51"><name pos:start="25:14" pos:end="25:16">obj</name> <operator pos:start="25:18" pos:end="25:19">&amp;&amp;</operator> <call pos:start="25:21" pos:end="25:37"><name pos:start="25:21" pos:end="25:32">qobject_type</name><argument_list pos:start="25:33" pos:end="25:37">(<argument pos:start="25:34" pos:end="25:36"><expr pos:start="25:34" pos:end="25:36"><name pos:start="25:34" pos:end="25:36">obj</name></expr></argument>)</argument_list></call> <operator pos:start="25:39" pos:end="25:40">==</operator> <name pos:start="25:42" pos:end="25:51">QTYPE_QINT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:43"><expr pos:start="27:5" pos:end="27:42"><name pos:start="27:5" pos:end="27:5">s</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <call pos:start="27:9" pos:end="27:42"><name pos:start="27:9" pos:end="27:20">qint_get_int</name><argument_list pos:start="27:21" pos:end="27:42">(<argument pos:start="27:22" pos:end="27:41"><expr pos:start="27:22" pos:end="27:41"><call pos:start="27:22" pos:end="27:41"><name pos:start="27:22" pos:end="27:36">qobject_to_qint</name><argument_list pos:start="27:37" pos:end="27:41">(<argument pos:start="27:38" pos:end="27:40"><expr pos:start="27:38" pos:end="27:40"><name pos:start="27:38" pos:end="27:40">obj</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:7">obj</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:38"><name pos:start="29:11" pos:end="29:19">qdict_get</name><argument_list pos:start="29:20" pos:end="29:38">(<argument pos:start="29:21" pos:end="29:21"><expr pos:start="29:21" pos:end="29:21"><name pos:start="29:21" pos:end="29:21">t</name></expr></argument>, <argument pos:start="29:24" pos:end="29:37"><expr pos:start="29:24" pos:end="29:37"><literal type="string" pos:start="29:24" pos:end="29:37">"microseconds"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:53"><expr pos:start="31:5" pos:end="31:52"><call pos:start="31:5" pos:end="31:52"><name pos:start="31:5" pos:end="31:12">g_assert</name><argument_list pos:start="31:13" pos:end="31:52">(<argument pos:start="31:14" pos:end="31:51"><expr pos:start="31:14" pos:end="31:51"><name pos:start="31:14" pos:end="31:16">obj</name> <operator pos:start="31:18" pos:end="31:19">&amp;&amp;</operator> <call pos:start="31:21" pos:end="31:37"><name pos:start="31:21" pos:end="31:32">qobject_type</name><argument_list pos:start="31:33" pos:end="31:37">(<argument pos:start="31:34" pos:end="31:36"><expr pos:start="31:34" pos:end="31:36"><name pos:start="31:34" pos:end="31:36">obj</name></expr></argument>)</argument_list></call> <operator pos:start="31:39" pos:end="31:40">==</operator> <name pos:start="31:42" pos:end="31:51">QTYPE_QINT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:44"><expr pos:start="33:5" pos:end="33:43"><name pos:start="33:5" pos:end="33:6">ms</name> <operator pos:start="33:8" pos:end="33:8">=</operator> <call pos:start="33:10" pos:end="33:43"><name pos:start="33:10" pos:end="33:21">qint_get_int</name><argument_list pos:start="33:22" pos:end="33:43">(<argument pos:start="33:23" pos:end="33:42"><expr pos:start="33:23" pos:end="33:42"><call pos:start="33:23" pos:end="33:42"><name pos:start="33:23" pos:end="33:37">qobject_to_qint</name><argument_list pos:start="33:38" pos:end="33:42">(<argument pos:start="33:39" pos:end="33:41"><expr pos:start="33:39" pos:end="33:41"><name pos:start="33:39" pos:end="33:41">obj</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:16">(<expr pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:9">s</name> <operator pos:start="35:11" pos:end="35:12">==</operator> <operator pos:start="35:14" pos:end="35:14">-</operator><literal type="number" pos:start="35:15" pos:end="35:15">1</literal></expr>)</condition> <block pos:start="35:18" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:27">

        <expr_stmt pos:start="37:9" pos:end="37:27"><expr pos:start="37:9" pos:end="37:26"><call pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:16">g_assert</name><argument_list pos:start="37:17" pos:end="37:26">(<argument pos:start="37:18" pos:end="37:25"><expr pos:start="37:18" pos:end="37:25"><name pos:start="37:18" pos:end="37:19">ms</name> <operator pos:start="37:21" pos:end="37:22">==</operator> <operator pos:start="37:24" pos:end="37:24">-</operator><literal type="number" pos:start="37:25" pos:end="37:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="43:5">else <block pos:start="39:12" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:42">

        <expr_stmt pos:start="41:9" pos:end="41:42"><expr pos:start="41:9" pos:end="41:41"><call pos:start="41:9" pos:end="41:41"><name pos:start="41:9" pos:end="41:16">g_assert</name><argument_list pos:start="41:17" pos:end="41:41">(<argument pos:start="41:18" pos:end="41:40"><expr pos:start="41:18" pos:end="41:40"><name pos:start="41:18" pos:end="41:19">ms</name> <operator pos:start="41:21" pos:end="41:22">&gt;=</operator> <literal type="number" pos:start="41:24" pos:end="41:24">0</literal> <operator pos:start="41:26" pos:end="41:27">&amp;&amp;</operator> <name pos:start="41:29" pos:end="41:30">ms</name> <operator pos:start="41:32" pos:end="41:33">&lt;=</operator> <literal type="number" pos:start="41:35" pos:end="41:40">999999</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:33"><expr pos:start="45:5" pos:end="45:32"><call pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:12">g_assert</name><argument_list pos:start="45:13" pos:end="45:32">(<argument pos:start="45:14" pos:end="45:31"><expr pos:start="45:14" pos:end="45:31"><call pos:start="45:14" pos:end="45:26"><name pos:start="45:14" pos:end="45:23">qdict_size</name><argument_list pos:start="45:24" pos:end="45:26">(<argument pos:start="45:25" pos:end="45:25"><expr pos:start="45:25" pos:end="45:25"><name pos:start="45:25" pos:end="45:25">t</name></expr></argument>)</argument_list></call> <operator pos:start="45:28" pos:end="45:29">==</operator> <literal type="number" pos:start="45:31" pos:end="45:31">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:30"><expr pos:start="49:5" pos:end="49:29"><call pos:start="49:5" pos:end="49:29"><name pos:start="49:5" pos:end="49:13">qdict_del</name><argument_list pos:start="49:14" pos:end="49:29">(<argument pos:start="49:15" pos:end="49:15"><expr pos:start="49:15" pos:end="49:15"><name pos:start="49:15" pos:end="49:15">d</name></expr></argument>, <argument pos:start="49:18" pos:end="49:28"><expr pos:start="49:18" pos:end="49:28"><literal type="string" pos:start="49:18" pos:end="49:28">"timestamp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:59"><expr pos:start="53:5" pos:end="53:58"><call pos:start="53:5" pos:end="53:58"><name pos:start="53:5" pos:end="53:12">g_assert</name><argument_list pos:start="53:13" pos:end="53:58">(<argument pos:start="53:14" pos:end="53:57"><expr pos:start="53:14" pos:end="53:57"><call pos:start="53:14" pos:end="53:57"><name pos:start="53:14" pos:end="53:29">qdict_cmp_simple</name><argument_list pos:start="53:30" pos:end="53:57">(<argument pos:start="53:31" pos:end="53:31"><expr pos:start="53:31" pos:end="53:31"><name pos:start="53:31" pos:end="53:31">d</name></expr></argument>, <argument pos:start="53:34" pos:end="53:56"><expr pos:start="53:34" pos:end="53:56"><name pos:start="53:34" pos:end="53:56"><name pos:start="53:34" pos:end="53:48">test_event_data</name><operator pos:start="53:49" pos:end="53:50">-&gt;</operator><name pos:start="53:51" pos:end="53:56">expect</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



</block_content>}</block></function>
</unit>
