<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7604.c" pos:tabs="8"><function pos:start="1:1" pos:end="64:20"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">size_t</name></type> <name pos:start="1:15" pos:end="1:26">curl_read_cb</name><parameter_list pos:start="1:27" pos:end="1:78">(<parameter pos:start="1:28" pos:end="1:36"><decl pos:start="1:28" pos:end="1:36"><type pos:start="1:28" pos:end="1:36"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">ptr</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:49"><decl pos:start="1:39" pos:end="1:49"><type pos:start="1:39" pos:end="1:49"><name pos:start="1:39" pos:end="1:44">size_t</name></type> <name pos:start="1:46" pos:end="1:49">size</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:57">size_t</name></type> <name pos:start="1:59" pos:end="1:63">nmemb</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:69">void</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:77">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="64:20">{<block_content pos:start="5:5" pos:end="64:20">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">CURLState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:39">= <expr pos:start="5:20" pos:end="5:39"><operator pos:start="5:20" pos:end="5:20">(</operator><operator pos:start="5:21" pos:end="5:21">(</operator><name pos:start="5:22" pos:end="5:30">CURLState</name><operator pos:start="5:31" pos:end="5:31">*</operator><operator pos:start="5:32" pos:end="5:32">)</operator><name pos:start="5:33" pos:end="5:38">opaque</name><operator pos:start="5:39" pos:end="5:39">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:19">realsize</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:26">size</name> <operator pos:start="7:28" pos:end="7:28">*</operator> <name pos:start="7:30" pos:end="7:34">nmemb</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:56"><expr pos:start="13:5" pos:end="13:55"><call pos:start="13:5" pos:end="13:55"><name pos:start="13:5" pos:end="13:11">DPRINTF</name><argument_list pos:start="13:12" pos:end="13:55">(<argument pos:start="13:13" pos:end="13:44"><expr pos:start="13:13" pos:end="13:44"><literal type="string" pos:start="13:13" pos:end="13:44">"CURL: Just reading %zd bytes\n"</literal></expr></argument>, <argument pos:start="13:47" pos:end="13:54"><expr pos:start="13:47" pos:end="13:54"><name pos:start="13:47" pos:end="13:54">realsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="19:22"><if pos:start="17:5" pos:end="19:22">if <condition pos:start="17:8" pos:end="17:27">(<expr pos:start="17:9" pos:end="17:26"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:10">s</name> <operator pos:start="17:12" pos:end="17:13">||</operator> <operator pos:start="17:15" pos:end="17:15">!</operator><name pos:start="17:16" pos:end="17:26"><name pos:start="17:16" pos:end="17:16">s</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:26">orig_buf</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:22"><block_content pos:start="19:9" pos:end="19:22">

        <goto pos:start="19:9" pos:end="19:22">goto <name pos:start="19:14" pos:end="19:21">read_end</name>;</goto></block_content></block></if></if_stmt>








    <expr_stmt pos:start="28:5" pos:end="28:52"><expr pos:start="28:5" pos:end="28:51"><call pos:start="28:5" pos:end="28:51"><name pos:start="28:5" pos:end="28:10">memcpy</name><argument_list pos:start="28:11" pos:end="28:51">(<argument pos:start="28:12" pos:end="28:35"><expr pos:start="28:12" pos:end="28:35"><name pos:start="28:12" pos:end="28:22"><name pos:start="28:12" pos:end="28:12">s</name><operator pos:start="28:13" pos:end="28:14">-&gt;</operator><name pos:start="28:15" pos:end="28:22">orig_buf</name></name> <operator pos:start="28:24" pos:end="28:24">+</operator> <name pos:start="28:26" pos:end="28:35"><name pos:start="28:26" pos:end="28:26">s</name><operator pos:start="28:27" pos:end="28:28">-&gt;</operator><name pos:start="28:29" pos:end="28:35">buf_off</name></name></expr></argument>, <argument pos:start="28:38" pos:end="28:40"><expr pos:start="28:38" pos:end="28:40"><name pos:start="28:38" pos:end="28:40">ptr</name></expr></argument>, <argument pos:start="28:43" pos:end="28:50"><expr pos:start="28:43" pos:end="28:50"><name pos:start="28:43" pos:end="28:50">realsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="30:5" pos:end="30:27"><expr pos:start="30:5" pos:end="30:26"><name pos:start="30:5" pos:end="30:14"><name pos:start="30:5" pos:end="30:5">s</name><operator pos:start="30:6" pos:end="30:7">-&gt;</operator><name pos:start="30:8" pos:end="30:14">buf_off</name></name> <operator pos:start="30:16" pos:end="30:17">+=</operator> <name pos:start="30:19" pos:end="30:26">realsize</name></expr>;</expr_stmt>



    <for pos:start="34:5" pos:end="64:20">for<control pos:start="34:8" pos:end="34:33">(<init pos:start="34:9" pos:end="34:12"><expr pos:start="34:9" pos:end="34:11"><name pos:start="34:9" pos:end="34:9">i</name><operator pos:start="34:10" pos:end="34:10">=</operator><literal type="number" pos:start="34:11" pos:end="34:11">0</literal></expr>;</init> <condition pos:start="34:14" pos:end="34:28"><expr pos:start="34:14" pos:end="34:27"><name pos:start="34:14" pos:end="34:14">i</name><operator pos:start="34:15" pos:end="34:15">&lt;</operator><name pos:start="34:16" pos:end="34:27">CURL_NUM_ACB</name></expr>;</condition> <incr pos:start="34:30" pos:end="34:32"><expr pos:start="34:30" pos:end="34:32"><name pos:start="34:30" pos:end="34:30">i</name><operator pos:start="34:31" pos:end="34:32">++</operator></expr></incr>)</control> <block pos:start="34:35" pos:end="64:20">{<block_content pos:start="36:9" pos:end="64:20">

        <decl_stmt pos:start="36:9" pos:end="36:35"><decl pos:start="36:9" pos:end="36:34"><type pos:start="36:9" pos:end="36:19"><name pos:start="36:9" pos:end="36:17">CURLAIOCB</name> <modifier pos:start="36:19" pos:end="36:19">*</modifier></type><name pos:start="36:20" pos:end="36:22">acb</name> <init pos:start="36:24" pos:end="36:34">= <expr pos:start="36:26" pos:end="36:34"><name pos:start="36:26" pos:end="36:34"><name pos:start="36:26" pos:end="36:26">s</name><operator pos:start="36:27" pos:end="36:28">-&gt;</operator><name pos:start="36:29" pos:end="36:31">acb</name><index pos:start="36:32" pos:end="36:34">[<expr pos:start="36:33" pos:end="36:33"><name pos:start="36:33" pos:end="36:33">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="40:9" pos:end="42:21"><if pos:start="40:9" pos:end="42:21">if <condition pos:start="40:12" pos:end="40:17">(<expr pos:start="40:13" pos:end="40:16"><operator pos:start="40:13" pos:end="40:13">!</operator><name pos:start="40:14" pos:end="40:16">acb</name></expr>)</condition><block type="pseudo" pos:start="42:13" pos:end="42:21"><block_content pos:start="42:13" pos:end="42:21">

            <continue pos:start="42:13" pos:end="42:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="46:9" pos:end="64:20"><if pos:start="46:9" pos:end="64:20">if <condition pos:start="46:12" pos:end="46:37">(<expr pos:start="46:13" pos:end="46:36"><operator pos:start="46:13" pos:end="46:13">(</operator><name pos:start="46:14" pos:end="46:23"><name pos:start="46:14" pos:end="46:14">s</name><operator pos:start="46:15" pos:end="46:16">-&gt;</operator><name pos:start="46:17" pos:end="46:23">buf_off</name></name> <operator pos:start="46:25" pos:end="46:26">&gt;=</operator> <name pos:start="46:28" pos:end="46:35"><name pos:start="46:28" pos:end="46:30">acb</name><operator pos:start="46:31" pos:end="46:32">-&gt;</operator><name pos:start="46:33" pos:end="46:35">end</name></name><operator pos:start="46:36" pos:end="46:36">)</operator></expr>)</condition> <block pos:start="46:39" pos:end="64:20">{<block_content pos:start="48:13" pos:end="64:20">

            <expr_stmt pos:start="48:13" pos:end="50:55"><expr pos:start="48:13" pos:end="50:54"><call pos:start="48:13" pos:end="50:54"><name pos:start="48:13" pos:end="48:31">qemu_iovec_from_buf</name><argument_list pos:start="48:32" pos:end="50:54">(<argument pos:start="48:33" pos:end="48:41"><expr pos:start="48:33" pos:end="48:41"><name pos:start="48:33" pos:end="48:41"><name pos:start="48:33" pos:end="48:35">acb</name><operator pos:start="48:36" pos:end="48:37">-&gt;</operator><name pos:start="48:38" pos:end="48:41">qiov</name></name></expr></argument>, <argument pos:start="48:44" pos:end="48:44"><expr pos:start="48:44" pos:end="48:44"><literal type="number" pos:start="48:44" pos:end="48:44">0</literal></expr></argument>, <argument pos:start="48:47" pos:end="48:70"><expr pos:start="48:47" pos:end="48:70"><name pos:start="48:47" pos:end="48:57"><name pos:start="48:47" pos:end="48:47">s</name><operator pos:start="48:48" pos:end="48:49">-&gt;</operator><name pos:start="48:50" pos:end="48:57">orig_buf</name></name> <operator pos:start="48:59" pos:end="48:59">+</operator> <name pos:start="48:61" pos:end="48:70"><name pos:start="48:61" pos:end="48:63">acb</name><operator pos:start="48:64" pos:end="48:65">-&gt;</operator><name pos:start="48:66" pos:end="48:70">start</name></name></expr></argument>,

                                <argument pos:start="50:33" pos:end="50:53"><expr pos:start="50:33" pos:end="50:53"><name pos:start="50:33" pos:end="50:40"><name pos:start="50:33" pos:end="50:35">acb</name><operator pos:start="50:36" pos:end="50:37">-&gt;</operator><name pos:start="50:38" pos:end="50:40">end</name></name> <operator pos:start="50:42" pos:end="50:42">-</operator> <name pos:start="50:44" pos:end="50:53"><name pos:start="50:44" pos:end="50:46">acb</name><operator pos:start="50:47" pos:end="50:48">-&gt;</operator><name pos:start="50:49" pos:end="50:53">start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="52:13" pos:end="52:50"><expr pos:start="52:13" pos:end="52:49"><call pos:start="52:13" pos:end="52:49"><name pos:start="52:13" pos:end="52:26"><name pos:start="52:13" pos:end="52:15">acb</name><operator pos:start="52:16" pos:end="52:17">-&gt;</operator><name pos:start="52:18" pos:end="52:23">common</name><operator pos:start="52:24" pos:end="52:24">.</operator><name pos:start="52:25" pos:end="52:26">cb</name></name><argument_list pos:start="52:27" pos:end="52:49">(<argument pos:start="52:28" pos:end="52:45"><expr pos:start="52:28" pos:end="52:45"><name pos:start="52:28" pos:end="52:45"><name pos:start="52:28" pos:end="52:30">acb</name><operator pos:start="52:31" pos:end="52:32">-&gt;</operator><name pos:start="52:33" pos:end="52:38">common</name><operator pos:start="52:39" pos:end="52:39">.</operator><name pos:start="52:40" pos:end="52:45">opaque</name></name></expr></argument>, <argument pos:start="52:48" pos:end="52:48"><expr pos:start="52:48" pos:end="52:48"><literal type="number" pos:start="52:48" pos:end="52:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="54:13" pos:end="54:34"><expr pos:start="54:13" pos:end="54:33"><call pos:start="54:13" pos:end="54:33"><name pos:start="54:13" pos:end="54:28">qemu_aio_release</name><argument_list pos:start="54:29" pos:end="54:33">(<argument pos:start="54:30" pos:end="54:32"><expr pos:start="54:30" pos:end="54:32"><name pos:start="54:30" pos:end="54:32">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="56:13" pos:end="56:29"><expr pos:start="56:13" pos:end="56:28"><name pos:start="56:13" pos:end="56:21"><name pos:start="56:13" pos:end="56:13">s</name><operator pos:start="56:14" pos:end="56:15">-&gt;</operator><name pos:start="56:16" pos:end="56:18">acb</name><index pos:start="56:19" pos:end="56:21">[<expr pos:start="56:20" pos:end="56:20"><name pos:start="56:20" pos:end="56:20">i</name></expr>]</index></name> <operator pos:start="56:23" pos:end="56:23">=</operator> <name pos:start="56:25" pos:end="56:28">NULL</name></expr>;</expr_stmt>





<label pos:start="62:1" pos:end="62:9"><name pos:start="62:1" pos:end="62:8">read_end</name>:</label>

    <return pos:start="64:5" pos:end="64:20">return <expr pos:start="64:12" pos:end="64:19"><name pos:start="64:12" pos:end="64:19">realsize</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for></block_content></block></function>
</unit>
