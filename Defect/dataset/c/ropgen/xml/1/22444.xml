<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22444.c" pos:tabs="8"><function pos:start="1:1" pos:end="28:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">bool</name></type> <name pos:start="1:6" pos:end="1:39">kvmppc_is_mem_backend_page_size_ok</name><parameter_list pos:start="1:40" pos:end="1:61">(<parameter pos:start="1:41" pos:end="1:60"><decl pos:start="1:41" pos:end="1:60"><type pos:start="1:41" pos:end="1:52"><specifier pos:start="1:41" pos:end="1:45">const</specifier> <name pos:start="1:47" pos:end="1:50">char</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:60">obj_path</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="28:1">{<block_content pos:start="5:5" pos:end="26:41">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:57"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">Object</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:19">mem_obj</name> <init pos:start="5:21" pos:end="5:57">= <expr pos:start="5:23" pos:end="5:57"><call pos:start="5:23" pos:end="5:57"><name pos:start="5:23" pos:end="5:41">object_resolve_path</name><argument_list pos:start="5:42" pos:end="5:57">(<argument pos:start="5:43" pos:end="5:50"><expr pos:start="5:43" pos:end="5:50"><name pos:start="5:43" pos:end="5:50">obj_path</name></expr></argument>, <argument pos:start="5:53" pos:end="5:56"><expr pos:start="5:53" pos:end="5:56"><name pos:start="5:53" pos:end="5:56">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:71"><decl pos:start="7:5" pos:end="7:70"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:17">mempath</name> <init pos:start="7:19" pos:end="7:70">= <expr pos:start="7:21" pos:end="7:70"><call pos:start="7:21" pos:end="7:70"><name pos:start="7:21" pos:end="7:43">object_property_get_str</name><argument_list pos:start="7:44" pos:end="7:70">(<argument pos:start="7:45" pos:end="7:51"><expr pos:start="7:45" pos:end="7:51"><name pos:start="7:45" pos:end="7:51">mem_obj</name></expr></argument>, <argument pos:start="7:54" pos:end="7:63"><expr pos:start="7:54" pos:end="7:63"><literal type="string" pos:start="7:54" pos:end="7:63">"mem-path"</literal></expr></argument>, <argument pos:start="7:66" pos:end="7:69"><expr pos:start="7:66" pos:end="7:69"><name pos:start="7:66" pos:end="7:69">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">long</name></type> <name pos:start="9:10" pos:end="9:17">pagesize</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="22:5"><if pos:start="13:5" pos:end="18:5">if <condition pos:start="13:8" pos:end="13:16">(<expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:15">mempath</name></expr>)</condition> <block pos:start="13:18" pos:end="18:5">{<block_content pos:start="15:9" pos:end="15:53">

        <expr_stmt pos:start="15:9" pos:end="15:53"><expr pos:start="15:9" pos:end="15:52"><name pos:start="15:9" pos:end="15:16">pagesize</name> <operator pos:start="15:18" pos:end="15:18">=</operator> <call pos:start="15:20" pos:end="15:52"><name pos:start="15:20" pos:end="15:43">qemu_mempath_getpagesize</name><argument_list pos:start="15:44" pos:end="15:52">(<argument pos:start="15:45" pos:end="15:51"><expr pos:start="15:45" pos:end="15:51"><name pos:start="15:45" pos:end="15:51">mempath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></if> <else pos:start="18:7" pos:end="22:5">else <block pos:start="18:12" pos:end="22:5">{<block_content pos:start="20:9" pos:end="20:33">

        <expr_stmt pos:start="20:9" pos:end="20:33"><expr pos:start="20:9" pos:end="20:32"><name pos:start="20:9" pos:end="20:16">pagesize</name> <operator pos:start="20:18" pos:end="20:18">=</operator> <call pos:start="20:20" pos:end="20:32"><name pos:start="20:20" pos:end="20:30">getpagesize</name><argument_list pos:start="20:31" pos:end="20:32">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="26:5" pos:end="26:41">return <expr pos:start="26:12" pos:end="26:40"><name pos:start="26:12" pos:end="26:19">pagesize</name> <operator pos:start="26:21" pos:end="26:22">&gt;=</operator> <name pos:start="26:24" pos:end="26:40">max_cpu_page_size</name></expr>;</return>

</block_content>}</block></function></unit>
