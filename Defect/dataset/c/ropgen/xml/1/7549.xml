<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7549.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">extract_exponents</name><parameter_list pos:start="1:30" pos:end="1:50">(<parameter pos:start="1:31" pos:end="1:49"><decl pos:start="1:31" pos:end="1:49"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:46">AC3EncodeContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">blk</name></decl>, <decl pos:start="5:14" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:15">ch</name></decl>, <decl pos:start="5:18" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:18">i</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="53:5">for <control pos:start="9:9" pos:end="9:40">(<init pos:start="9:10" pos:end="9:16"><expr pos:start="9:10" pos:end="9:15"><name pos:start="9:10" pos:end="9:11">ch</name> <operator pos:start="9:13" pos:end="9:13">=</operator> <literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr>;</init> <condition pos:start="9:18" pos:end="9:34"><expr pos:start="9:18" pos:end="9:33"><name pos:start="9:18" pos:end="9:19">ch</name> <operator pos:start="9:21" pos:end="9:21">&lt;</operator> <name pos:start="9:23" pos:end="9:33"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:33">channels</name></name></expr>;</condition> <incr pos:start="9:36" pos:end="9:39"><expr pos:start="9:36" pos:end="9:39"><name pos:start="9:36" pos:end="9:37">ch</name><operator pos:start="9:38" pos:end="9:39">++</operator></expr></incr>)</control> <block pos:start="9:42" pos:end="53:5">{<block_content pos:start="11:9" pos:end="51:9">

        <for pos:start="11:9" pos:end="51:9">for <control pos:start="11:13" pos:end="11:50">(<init pos:start="11:14" pos:end="11:21"><expr pos:start="11:14" pos:end="11:20"><name pos:start="11:14" pos:end="11:16">blk</name> <operator pos:start="11:18" pos:end="11:18">=</operator> <literal type="number" pos:start="11:20" pos:end="11:20">0</literal></expr>;</init> <condition pos:start="11:23" pos:end="11:43"><expr pos:start="11:23" pos:end="11:42"><name pos:start="11:23" pos:end="11:25">blk</name> <operator pos:start="11:27" pos:end="11:27">&lt;</operator> <name pos:start="11:29" pos:end="11:42">AC3_MAX_BLOCKS</name></expr>;</condition> <incr pos:start="11:45" pos:end="11:49"><expr pos:start="11:45" pos:end="11:49"><name pos:start="11:45" pos:end="11:47">blk</name><operator pos:start="11:48" pos:end="11:49">++</operator></expr></incr>)</control> <block pos:start="11:52" pos:end="51:9">{<block_content pos:start="13:13" pos:end="49:13">

            <decl_stmt pos:start="13:13" pos:end="13:46"><decl pos:start="13:13" pos:end="13:45"><type pos:start="13:13" pos:end="13:22"><name pos:start="13:13" pos:end="13:20">AC3Block</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:27">block</name> <init pos:start="13:29" pos:end="13:45">= <expr pos:start="13:31" pos:end="13:45"><operator pos:start="13:31" pos:end="13:31">&amp;</operator><name pos:start="13:32" pos:end="13:45"><name pos:start="13:32" pos:end="13:32">s</name><operator pos:start="13:33" pos:end="13:34">-&gt;</operator><name pos:start="13:35" pos:end="13:40">blocks</name><index pos:start="13:41" pos:end="13:45">[<expr pos:start="13:42" pos:end="13:44"><name pos:start="13:42" pos:end="13:44">blk</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="15:13" pos:end="15:44"><decl pos:start="15:13" pos:end="15:43"><type pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:19">uint8_t</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:24">exp</name>   <init pos:start="15:28" pos:end="15:43">= <expr pos:start="15:30" pos:end="15:43"><name pos:start="15:30" pos:end="15:43"><name pos:start="15:30" pos:end="15:34">block</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:39">exp</name><index pos:start="15:40" pos:end="15:43">[<expr pos:start="15:41" pos:end="15:42"><name pos:start="15:41" pos:end="15:42">ch</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="17:13" pos:end="17:50"><decl pos:start="17:13" pos:end="17:49"><type pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:19">int32_t</name> <modifier pos:start="17:21" pos:end="17:21">*</modifier></type><name pos:start="17:22" pos:end="17:25">coef</name> <init pos:start="17:27" pos:end="17:49">= <expr pos:start="17:29" pos:end="17:49"><name pos:start="17:29" pos:end="17:49"><name pos:start="17:29" pos:end="17:33">block</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:45">fixed_coef</name><index pos:start="17:46" pos:end="17:49">[<expr pos:start="17:47" pos:end="17:48"><name pos:start="17:47" pos:end="17:48">ch</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="19:13" pos:end="19:50"><decl pos:start="19:13" pos:end="19:49"><type pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">int</name></type> <name pos:start="19:17" pos:end="19:25">exp_shift</name>  <init pos:start="19:28" pos:end="19:49">= <expr pos:start="19:30" pos:end="19:49"><name pos:start="19:30" pos:end="19:49"><name pos:start="19:30" pos:end="19:34">block</name><operator pos:start="19:35" pos:end="19:36">-&gt;</operator><name pos:start="19:37" pos:end="19:45">exp_shift</name><index pos:start="19:46" pos:end="19:49">[<expr pos:start="19:47" pos:end="19:48"><name pos:start="19:47" pos:end="19:48">ch</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="21:13" pos:end="49:13">for <control pos:start="21:17" pos:end="21:47">(<init pos:start="21:18" pos:end="21:23"><expr pos:start="21:18" pos:end="21:22"><name pos:start="21:18" pos:end="21:18">i</name> <operator pos:start="21:20" pos:end="21:20">=</operator> <literal type="number" pos:start="21:22" pos:end="21:22">0</literal></expr>;</init> <condition pos:start="21:25" pos:end="21:42"><expr pos:start="21:25" pos:end="21:41"><name pos:start="21:25" pos:end="21:25">i</name> <operator pos:start="21:27" pos:end="21:27">&lt;</operator> <name pos:start="21:29" pos:end="21:41">AC3_MAX_COEFS</name></expr>;</condition> <incr pos:start="21:44" pos:end="21:46"><expr pos:start="21:44" pos:end="21:46"><name pos:start="21:44" pos:end="21:44">i</name><operator pos:start="21:45" pos:end="21:46">++</operator></expr></incr>)</control> <block pos:start="21:49" pos:end="49:13">{<block_content pos:start="23:17" pos:end="47:27">

                <decl_stmt pos:start="23:17" pos:end="23:22"><decl pos:start="23:17" pos:end="23:21"><type pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:19">int</name></type> <name pos:start="23:21" pos:end="23:21">e</name></decl>;</decl_stmt>

                <decl_stmt pos:start="25:17" pos:end="25:37"><decl pos:start="25:17" pos:end="25:36"><type pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:19">int</name></type> <name pos:start="25:21" pos:end="25:21">v</name> <init pos:start="25:23" pos:end="25:36">= <expr pos:start="25:25" pos:end="25:36"><call pos:start="25:25" pos:end="25:36"><name pos:start="25:25" pos:end="25:27">abs</name><argument_list pos:start="25:28" pos:end="25:36">(<argument pos:start="25:29" pos:end="25:35"><expr pos:start="25:29" pos:end="25:35"><name pos:start="25:29" pos:end="25:35"><name pos:start="25:29" pos:end="25:32">coef</name><index pos:start="25:33" pos:end="25:35">[<expr pos:start="25:34" pos:end="25:34"><name pos:start="25:34" pos:end="25:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="27:17" pos:end="45:17"><if pos:start="27:17" pos:end="29:27">if <condition pos:start="27:20" pos:end="27:27">(<expr pos:start="27:21" pos:end="27:26"><name pos:start="27:21" pos:end="27:21">v</name> <operator pos:start="27:23" pos:end="27:24">==</operator> <literal type="number" pos:start="27:26" pos:end="27:26">0</literal></expr>)</condition><block type="pseudo" pos:start="29:21" pos:end="29:27"><block_content pos:start="29:21" pos:end="29:27">

                    <expr_stmt pos:start="29:21" pos:end="29:27"><expr pos:start="29:21" pos:end="29:26"><name pos:start="29:21" pos:end="29:21">e</name> <operator pos:start="29:23" pos:end="29:23">=</operator> <literal type="number" pos:start="29:25" pos:end="29:26">24</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="31:17" pos:end="45:17">else <block pos:start="31:22" pos:end="45:17">{<block_content pos:start="33:21" pos:end="43:39">

                    <expr_stmt pos:start="33:21" pos:end="33:52"><expr pos:start="33:21" pos:end="33:51"><name pos:start="33:21" pos:end="33:21">e</name> <operator pos:start="33:23" pos:end="33:23">=</operator> <literal type="number" pos:start="33:25" pos:end="33:28">23</literal> <operator pos:start="33:28" pos:end="33:28">-</operator> <call pos:start="33:30" pos:end="33:39"><name pos:start="33:30" pos:end="33:36">av_log2</name><argument_list pos:start="33:37" pos:end="33:39">(<argument pos:start="33:38" pos:end="33:38"><expr pos:start="33:38" pos:end="33:38"><name pos:start="33:38" pos:end="33:38">v</name></expr></argument>)</argument_list></call> <operator pos:start="33:41" pos:end="33:41">+</operator> <name pos:start="33:43" pos:end="33:51">exp_shift</name></expr>;</expr_stmt>

                    <if_stmt pos:start="35:21" pos:end="41:21"><if pos:start="35:21" pos:end="41:21">if <condition pos:start="35:24" pos:end="35:32">(<expr pos:start="35:25" pos:end="35:31"><name pos:start="35:25" pos:end="35:25">e</name> <operator pos:start="35:27" pos:end="35:28">&gt;=</operator> <literal type="number" pos:start="35:30" pos:end="35:31">24</literal></expr>)</condition> <block pos:start="35:34" pos:end="41:21">{<block_content pos:start="37:25" pos:end="39:36">

                        <expr_stmt pos:start="37:25" pos:end="37:31"><expr pos:start="37:25" pos:end="37:30"><name pos:start="37:25" pos:end="37:25">e</name> <operator pos:start="37:27" pos:end="37:27">=</operator> <literal type="number" pos:start="37:29" pos:end="37:30">24</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="39:25" pos:end="39:36"><expr pos:start="39:25" pos:end="39:35"><name pos:start="39:25" pos:end="39:31"><name pos:start="39:25" pos:end="39:28">coef</name><index pos:start="39:29" pos:end="39:31">[<expr pos:start="39:30" pos:end="39:30"><name pos:start="39:30" pos:end="39:30">i</name></expr>]</index></name> <operator pos:start="39:33" pos:end="39:33">=</operator> <literal type="number" pos:start="39:35" pos:end="39:35">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="43:21" pos:end="43:39"><expr pos:start="43:21" pos:end="43:38"><call pos:start="43:21" pos:end="43:38"><name pos:start="43:21" pos:end="43:30">av_assert2</name><argument_list pos:start="43:31" pos:end="43:38">(<argument pos:start="43:32" pos:end="43:37"><expr pos:start="43:32" pos:end="43:37"><name pos:start="43:32" pos:end="43:32">e</name> <operator pos:start="43:34" pos:end="43:35">&gt;=</operator> <literal type="number" pos:start="43:37" pos:end="43:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:27"><expr pos:start="47:17" pos:end="47:26"><name pos:start="47:17" pos:end="47:22"><name pos:start="47:17" pos:end="47:19">exp</name><index pos:start="47:20" pos:end="47:22">[<expr pos:start="47:21" pos:end="47:21"><name pos:start="47:21" pos:end="47:21">i</name></expr>]</index></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <name pos:start="47:26" pos:end="47:26">e</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
