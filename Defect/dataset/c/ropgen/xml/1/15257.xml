<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15257.c" pos:tabs="8"><function pos:start="1:1" pos:end="50:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">mp3_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="50:1">{<block_content pos:start="5:5" pos:end="48:15">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:17">size</name></decl>;</decl_stmt>

    <comment type="line" pos:start="7:5" pos:end="7:39">//    AVStream *st = s-&gt;streams[0];</comment>



    <expr_stmt pos:start="11:5" pos:end="11:26"><expr pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:8">size</name><operator pos:start="11:9" pos:end="11:9">=</operator> <name pos:start="11:11" pos:end="11:25">MP3_PACKET_SIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:41"><expr pos:start="15:5" pos:end="15:40"><name pos:start="15:5" pos:end="15:7">ret</name><operator pos:start="15:8" pos:end="15:8">=</operator> <call pos:start="15:10" pos:end="15:40"><name pos:start="15:10" pos:end="15:22">av_get_packet</name><argument_list pos:start="15:23" pos:end="15:40">(<argument pos:start="15:24" pos:end="15:28"><expr pos:start="15:24" pos:end="15:28"><name pos:start="15:24" pos:end="15:28"><name pos:start="15:24" pos:end="15:24">s</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:28">pb</name></name></expr></argument>, <argument pos:start="15:31" pos:end="15:33"><expr pos:start="15:31" pos:end="15:33"><name pos:start="15:31" pos:end="15:33">pkt</name></expr></argument>, <argument pos:start="15:36" pos:end="15:39"><expr pos:start="15:36" pos:end="15:39"><name pos:start="15:36" pos:end="15:39">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="20:5" pos:end="20:26"><expr pos:start="20:5" pos:end="20:25"><name pos:start="20:5" pos:end="20:21"><name pos:start="20:5" pos:end="20:7">pkt</name><operator pos:start="20:8" pos:end="20:9">-&gt;</operator><name pos:start="20:10" pos:end="20:21">stream_index</name></name> <operator pos:start="20:23" pos:end="20:23">=</operator> <literal type="number" pos:start="20:25" pos:end="20:25">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="22:5" pos:end="30:5"><if pos:start="22:5" pos:end="30:5">if <condition pos:start="22:8" pos:end="22:17">(<expr pos:start="22:9" pos:end="22:16"><name pos:start="22:9" pos:end="22:11">ret</name> <operator pos:start="22:13" pos:end="22:14">&lt;=</operator> <literal type="number" pos:start="22:16" pos:end="22:16">0</literal></expr>)</condition> <block pos:start="22:19" pos:end="30:5">{<block_content pos:start="24:9" pos:end="28:27">

        <if_stmt pos:start="24:9" pos:end="26:23"><if pos:start="24:9" pos:end="26:23">if<condition pos:start="24:11" pos:end="24:17">(<expr pos:start="24:12" pos:end="24:16"><name pos:start="24:12" pos:end="24:14">ret</name><operator pos:start="24:15" pos:end="24:15">&lt;</operator><literal type="number" pos:start="24:16" pos:end="24:16">0</literal></expr>)</condition><block type="pseudo" pos:start="26:13" pos:end="26:23"><block_content pos:start="26:13" pos:end="26:23">

            <return pos:start="26:13" pos:end="26:23">return <expr pos:start="26:20" pos:end="26:22"><name pos:start="26:20" pos:end="26:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <return pos:start="28:9" pos:end="28:27">return <expr pos:start="28:16" pos:end="28:26"><name pos:start="28:16" pos:end="28:26">AVERROR_EOF</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="34:5" pos:end="38:30"><if pos:start="34:5" pos:end="38:30">if <condition pos:start="34:8" pos:end="36:64">(<expr pos:start="34:9" pos:end="36:63"><name pos:start="34:9" pos:end="34:11">ret</name> <operator pos:start="34:13" pos:end="34:13">&gt;</operator> <name pos:start="34:15" pos:end="34:28">ID3v1_TAG_SIZE</name> <operator pos:start="34:30" pos:end="34:31">&amp;&amp;</operator>

        <call pos:start="36:9" pos:end="36:58"><name pos:start="36:9" pos:end="36:14">memcmp</name><argument_list pos:start="36:15" pos:end="36:58">(<argument pos:start="36:16" pos:end="36:47"><expr pos:start="36:16" pos:end="36:47"><operator pos:start="36:16" pos:end="36:16">&amp;</operator><name pos:start="36:17" pos:end="36:47"><name pos:start="36:17" pos:end="36:19">pkt</name><operator pos:start="36:20" pos:end="36:21">-&gt;</operator><name pos:start="36:22" pos:end="36:25">data</name><index pos:start="36:26" pos:end="36:47">[<expr pos:start="36:27" pos:end="36:46"><name pos:start="36:27" pos:end="36:29">ret</name> <operator pos:start="36:31" pos:end="36:31">-</operator> <name pos:start="36:33" pos:end="36:46">ID3v1_TAG_SIZE</name></expr>]</index></name></expr></argument>, <argument pos:start="36:50" pos:end="36:54"><expr pos:start="36:50" pos:end="36:54"><literal type="string" pos:start="36:50" pos:end="36:54">"TAG"</literal></expr></argument>, <argument pos:start="36:57" pos:end="36:57"><expr pos:start="36:57" pos:end="36:57"><literal type="number" pos:start="36:57" pos:end="36:57">3</literal></expr></argument>)</argument_list></call> <operator pos:start="36:60" pos:end="36:61">==</operator> <literal type="number" pos:start="36:63" pos:end="36:63">0</literal></expr>)</condition><block type="pseudo" pos:start="38:9" pos:end="38:30"><block_content pos:start="38:9" pos:end="38:30">

        <expr_stmt pos:start="38:9" pos:end="38:30"><expr pos:start="38:9" pos:end="38:29"><name pos:start="38:9" pos:end="38:11">ret</name> <operator pos:start="38:13" pos:end="38:14">-=</operator> <name pos:start="38:16" pos:end="38:29">ID3v1_TAG_SIZE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="42:5" pos:end="44:16">/* note: we need to modify the packet size here to handle the last

       packet */</comment>

    <expr_stmt pos:start="46:5" pos:end="46:20"><expr pos:start="46:5" pos:end="46:19"><name pos:start="46:5" pos:end="46:13"><name pos:start="46:5" pos:end="46:7">pkt</name><operator pos:start="46:8" pos:end="46:9">-&gt;</operator><name pos:start="46:10" pos:end="46:13">size</name></name> <operator pos:start="46:15" pos:end="46:15">=</operator> <name pos:start="46:17" pos:end="46:19">ret</name></expr>;</expr_stmt>

    <return pos:start="48:5" pos:end="48:15">return <expr pos:start="48:12" pos:end="48:14"><name pos:start="48:12" pos:end="48:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
