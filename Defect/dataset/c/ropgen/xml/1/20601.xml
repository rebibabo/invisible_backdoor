<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20601.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">omap2_gpio_init</name><parameter_list pos:start="1:27" pos:end="1:45">(<parameter pos:start="1:28" pos:end="1:44"><decl pos:start="1:28" pos:end="1:44"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:39">SysBusDevice</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">sbd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">dev</name> <init pos:start="5:22" pos:end="5:34">= <expr pos:start="5:24" pos:end="5:34"><call pos:start="5:24" pos:end="5:34"><name pos:start="5:24" pos:end="5:29">DEVICE</name><argument_list pos:start="5:30" pos:end="5:34">(<argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">sbd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:23">omap2_gpif_s</name></name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:26">s</name> <init pos:start="7:28" pos:end="7:44">= <expr pos:start="7:30" pos:end="7:44"><call pos:start="7:30" pos:end="7:44"><name pos:start="7:30" pos:end="7:39">OMAP2_GPIO</name><argument_list pos:start="7:40" pos:end="7:44">(<argument pos:start="7:41" pos:end="7:43"><expr pos:start="7:41" pos:end="7:43"><name pos:start="7:41" pos:end="7:43">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:17">(<expr pos:start="13:9" pos:end="13:16"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:16"><name pos:start="13:10" pos:end="13:10">s</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:16">iclk</name></name></expr>)</condition> <block pos:start="13:19" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:53">

        <expr_stmt pos:start="15:9" pos:end="15:53"><expr pos:start="15:9" pos:end="15:52"><call pos:start="15:9" pos:end="15:52"><name pos:start="15:9" pos:end="15:16">hw_error</name><argument_list pos:start="15:17" pos:end="15:52">(<argument pos:start="15:18" pos:end="15:51"><expr pos:start="15:18" pos:end="15:51"><literal type="string" pos:start="15:18" pos:end="15:51">"omap2-gpio: iclk not connected\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="33:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:32">(<expr pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:20">mpu_model</name></name> <operator pos:start="19:22" pos:end="19:22">&lt;</operator> <name pos:start="19:24" pos:end="19:31">omap3430</name></expr>)</condition> <block pos:start="19:34" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:41">

        <expr_stmt pos:start="21:9" pos:end="21:59"><expr pos:start="21:9" pos:end="21:58"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:22">modulecount</name></name> <operator pos:start="21:24" pos:end="21:24">=</operator> <ternary pos:start="21:26" pos:end="21:58"><condition pos:start="21:26" pos:end="21:52"><expr pos:start="21:26" pos:end="21:50"><operator pos:start="21:26" pos:end="21:26">(</operator><name pos:start="21:27" pos:end="21:38"><name pos:start="21:27" pos:end="21:27">s</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:38">mpu_model</name></name> <operator pos:start="21:40" pos:end="21:40">&lt;</operator> <name pos:start="21:42" pos:end="21:49">omap2430</name><operator pos:start="21:50" pos:end="21:50">)</operator></expr> ?</condition><then pos:start="21:54" pos:end="21:54"> <expr pos:start="21:54" pos:end="21:54"><literal type="number" pos:start="21:54" pos:end="21:54">4</literal></expr> </then><else pos:start="21:56" pos:end="21:58">: <expr pos:start="21:58" pos:end="21:58"><literal type="number" pos:start="21:58" pos:end="21:58">5</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="25:52"><expr pos:start="23:9" pos:end="25:51"><call pos:start="23:9" pos:end="25:51"><name pos:start="23:9" pos:end="23:29">memory_region_init_io</name><argument_list pos:start="23:30" pos:end="25:51">(<argument pos:start="23:31" pos:end="23:39"><expr pos:start="23:31" pos:end="23:39"><operator pos:start="23:31" pos:end="23:31">&amp;</operator><name pos:start="23:32" pos:end="23:39"><name pos:start="23:32" pos:end="23:32">s</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:39">iomem</name></name></expr></argument>, <argument pos:start="23:42" pos:end="23:50"><expr pos:start="23:42" pos:end="23:50"><call pos:start="23:42" pos:end="23:50"><name pos:start="23:42" pos:end="23:47">OBJECT</name><argument_list pos:start="23:48" pos:end="23:50">(<argument pos:start="23:49" pos:end="23:49"><expr pos:start="23:49" pos:end="23:49"><name pos:start="23:49" pos:end="23:49">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:53" pos:end="23:71"><expr pos:start="23:53" pos:end="23:71"><operator pos:start="23:53" pos:end="23:53">&amp;</operator><name pos:start="23:54" pos:end="23:71">omap2_gpif_top_ops</name></expr></argument>, <argument pos:start="23:74" pos:end="23:74"><expr pos:start="23:74" pos:end="23:74"><name pos:start="23:74" pos:end="23:74">s</name></expr></argument>,

                              <argument pos:start="25:31" pos:end="25:42"><expr pos:start="25:31" pos:end="25:42"><literal type="string" pos:start="25:31" pos:end="25:42">"omap2.gpio"</literal></expr></argument>, <argument pos:start="25:45" pos:end="25:50"><expr pos:start="25:45" pos:end="25:50"><literal type="number" pos:start="25:45" pos:end="25:50">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:41"><expr pos:start="27:9" pos:end="27:40"><call pos:start="27:9" pos:end="27:40"><name pos:start="27:9" pos:end="27:24">sysbus_init_mmio</name><argument_list pos:start="27:25" pos:end="27:40">(<argument pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:28">sbd</name></expr></argument>, <argument pos:start="27:31" pos:end="27:39"><expr pos:start="27:31" pos:end="27:39"><operator pos:start="27:31" pos:end="27:31">&amp;</operator><name pos:start="27:32" pos:end="27:39"><name pos:start="27:32" pos:end="27:32">s</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:39">iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="33:5">else <block pos:start="29:12" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:27">

        <expr_stmt pos:start="31:9" pos:end="31:27"><expr pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:22">modulecount</name></name> <operator pos:start="31:24" pos:end="31:24">=</operator> <literal type="number" pos:start="31:26" pos:end="31:26">6</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:61"><expr pos:start="35:5" pos:end="35:60"><name pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:14">modules</name></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <call pos:start="35:18" pos:end="35:60"><name pos:start="35:18" pos:end="35:23">g_new0</name><argument_list pos:start="35:24" pos:end="35:60">(<argument pos:start="35:25" pos:end="35:43"><expr pos:start="35:25" pos:end="35:43">struct <name pos:start="35:32" pos:end="35:43">omap2_gpio_s</name></expr></argument>, <argument pos:start="35:46" pos:end="35:59"><expr pos:start="35:46" pos:end="35:59"><name pos:start="35:46" pos:end="35:59"><name pos:start="35:46" pos:end="35:46">s</name><operator pos:start="35:47" pos:end="35:48">-&gt;</operator><name pos:start="35:49" pos:end="35:59">modulecount</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:55"><expr pos:start="37:5" pos:end="37:54"><name pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:14">handler</name></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <call pos:start="37:18" pos:end="37:54"><name pos:start="37:18" pos:end="37:23">g_new0</name><argument_list pos:start="37:24" pos:end="37:54">(<argument pos:start="37:25" pos:end="37:32"><expr pos:start="37:25" pos:end="37:32"><name pos:start="37:25" pos:end="37:32">qemu_irq</name></expr></argument>, <argument pos:start="37:35" pos:end="37:53"><expr pos:start="37:35" pos:end="37:53"><name pos:start="37:35" pos:end="37:48"><name pos:start="37:35" pos:end="37:35">s</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:48">modulecount</name></name> <operator pos:start="37:50" pos:end="37:50">*</operator> <literal type="number" pos:start="37:52" pos:end="37:53">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:64"><expr pos:start="39:5" pos:end="39:63"><call pos:start="39:5" pos:end="39:63"><name pos:start="39:5" pos:end="39:21">qdev_init_gpio_in</name><argument_list pos:start="39:22" pos:end="39:63">(<argument pos:start="39:23" pos:end="39:25"><expr pos:start="39:23" pos:end="39:25"><name pos:start="39:23" pos:end="39:25">dev</name></expr></argument>, <argument pos:start="39:28" pos:end="39:41"><expr pos:start="39:28" pos:end="39:41"><name pos:start="39:28" pos:end="39:41">omap2_gpio_set</name></expr></argument>, <argument pos:start="39:44" pos:end="39:62"><expr pos:start="39:44" pos:end="39:62"><name pos:start="39:44" pos:end="39:57"><name pos:start="39:44" pos:end="39:44">s</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:57">modulecount</name></name> <operator pos:start="39:59" pos:end="39:59">*</operator> <literal type="number" pos:start="39:61" pos:end="39:62">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:61"><expr pos:start="41:5" pos:end="41:60"><call pos:start="41:5" pos:end="41:60"><name pos:start="41:5" pos:end="41:22">qdev_init_gpio_out</name><argument_list pos:start="41:23" pos:end="41:60">(<argument pos:start="41:24" pos:end="41:26"><expr pos:start="41:24" pos:end="41:26"><name pos:start="41:24" pos:end="41:26">dev</name></expr></argument>, <argument pos:start="41:29" pos:end="41:38"><expr pos:start="41:29" pos:end="41:38"><name pos:start="41:29" pos:end="41:38"><name pos:start="41:29" pos:end="41:29">s</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:38">handler</name></name></expr></argument>, <argument pos:start="41:41" pos:end="41:59"><expr pos:start="41:41" pos:end="41:59"><name pos:start="41:41" pos:end="41:54"><name pos:start="41:41" pos:end="41:41">s</name><operator pos:start="41:42" pos:end="41:43">-&gt;</operator><name pos:start="41:44" pos:end="41:54">modulecount</name></name> <operator pos:start="41:56" pos:end="41:56">*</operator> <literal type="number" pos:start="41:58" pos:end="41:59">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="43:5" pos:end="69:5">for <control pos:start="43:9" pos:end="43:40">(<init pos:start="43:10" pos:end="43:15"><expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:10">i</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>;</init> <condition pos:start="43:17" pos:end="43:35"><expr pos:start="43:17" pos:end="43:34"><name pos:start="43:17" pos:end="43:17">i</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <name pos:start="43:21" pos:end="43:34"><name pos:start="43:21" pos:end="43:21">s</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:34">modulecount</name></name></expr>;</condition> <incr pos:start="43:37" pos:end="43:39"><expr pos:start="43:37" pos:end="43:39"><name pos:start="43:37" pos:end="43:37">i</name><operator pos:start="43:38" pos:end="43:39">++</operator></expr></incr>)</control> <block pos:start="43:42" pos:end="69:5">{<block_content pos:start="45:9" pos:end="67:41">

        <decl_stmt pos:start="45:9" pos:end="45:48"><decl pos:start="45:9" pos:end="45:47"><type pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:14">struct</name> <name pos:start="45:16" pos:end="45:27">omap2_gpio_s</name></name> <modifier pos:start="45:29" pos:end="45:29">*</modifier></type><name pos:start="45:30" pos:end="45:30">m</name> <init pos:start="45:32" pos:end="45:47">= <expr pos:start="45:34" pos:end="45:47"><operator pos:start="45:34" pos:end="45:34">&amp;</operator><name pos:start="45:35" pos:end="45:47"><name pos:start="45:35" pos:end="45:35">s</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:44">modules</name><index pos:start="45:45" pos:end="45:47">[<expr pos:start="45:46" pos:end="45:46"><name pos:start="45:46" pos:end="45:46">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:24">(<expr pos:start="47:13" pos:end="47:23"><operator pos:start="47:13" pos:end="47:13">!</operator><name pos:start="47:14" pos:end="47:23"><name pos:start="47:14" pos:end="47:14">s</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:20">fclk</name><index pos:start="47:21" pos:end="47:23">[<expr pos:start="47:22" pos:end="47:22"><name pos:start="47:22" pos:end="47:22">i</name></expr>]</index></name></expr>)</condition> <block pos:start="47:26" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:62">

            <expr_stmt pos:start="49:13" pos:end="49:62"><expr pos:start="49:13" pos:end="49:61"><call pos:start="49:13" pos:end="49:61"><name pos:start="49:13" pos:end="49:20">hw_error</name><argument_list pos:start="49:21" pos:end="49:61">(<argument pos:start="49:22" pos:end="49:57"><expr pos:start="49:22" pos:end="49:57"><literal type="string" pos:start="49:22" pos:end="49:57">"omap2-gpio: fclk%d not connected\n"</literal></expr></argument>, <argument pos:start="49:60" pos:end="49:60"><expr pos:start="49:60" pos:end="49:60"><name pos:start="49:60" pos:end="49:60">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:62"><expr pos:start="53:9" pos:end="53:61"><name pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:9">m</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:19">revision</name></name> <operator pos:start="53:21" pos:end="53:21">=</operator> <ternary pos:start="53:23" pos:end="53:61"><condition pos:start="53:23" pos:end="53:49"><expr pos:start="53:23" pos:end="53:47"><operator pos:start="53:23" pos:end="53:23">(</operator><name pos:start="53:24" pos:end="53:35"><name pos:start="53:24" pos:end="53:24">s</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:35">mpu_model</name></name> <operator pos:start="53:37" pos:end="53:37">&lt;</operator> <name pos:start="53:39" pos:end="53:46">omap3430</name><operator pos:start="53:47" pos:end="53:47">)</operator></expr> ?</condition><then pos:start="53:51" pos:end="53:54"> <expr pos:start="53:51" pos:end="53:54"><literal type="number" pos:start="53:51" pos:end="53:54">0x18</literal></expr> </then><else pos:start="53:56" pos:end="53:61">: <expr pos:start="53:58" pos:end="53:61"><literal type="number" pos:start="53:58" pos:end="53:61">0x25</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:41"><expr pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:9">m</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:18">handler</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <operator pos:start="55:22" pos:end="55:22">&amp;</operator><name pos:start="55:23" pos:end="55:40"><name pos:start="55:23" pos:end="55:23">s</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:32">handler</name><index pos:start="55:33" pos:end="55:40">[<expr pos:start="55:34" pos:end="55:39"><name pos:start="55:34" pos:end="55:34">i</name> <operator pos:start="55:36" pos:end="55:36">*</operator> <literal type="number" pos:start="55:38" pos:end="55:39">32</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:41"><expr pos:start="57:9" pos:end="57:40"><call pos:start="57:9" pos:end="57:40"><name pos:start="57:9" pos:end="57:23">sysbus_init_irq</name><argument_list pos:start="57:24" pos:end="57:40">(<argument pos:start="57:25" pos:end="57:27"><expr pos:start="57:25" pos:end="57:27"><name pos:start="57:25" pos:end="57:27">sbd</name></expr></argument>, <argument pos:start="57:30" pos:end="57:39"><expr pos:start="57:30" pos:end="57:39"><operator pos:start="57:30" pos:end="57:30">&amp;</operator><name pos:start="57:31" pos:end="57:39"><name pos:start="57:31" pos:end="57:31">m</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:36">irq</name><index pos:start="57:37" pos:end="57:39">[<expr pos:start="57:38" pos:end="57:38"><literal type="number" pos:start="57:38" pos:end="57:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="57:43" pos:end="57:55">/* mpu irq */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:41"><expr pos:start="59:9" pos:end="59:40"><call pos:start="59:9" pos:end="59:40"><name pos:start="59:9" pos:end="59:23">sysbus_init_irq</name><argument_list pos:start="59:24" pos:end="59:40">(<argument pos:start="59:25" pos:end="59:27"><expr pos:start="59:25" pos:end="59:27"><name pos:start="59:25" pos:end="59:27">sbd</name></expr></argument>, <argument pos:start="59:30" pos:end="59:39"><expr pos:start="59:30" pos:end="59:39"><operator pos:start="59:30" pos:end="59:30">&amp;</operator><name pos:start="59:31" pos:end="59:39"><name pos:start="59:31" pos:end="59:31">m</name><operator pos:start="59:32" pos:end="59:33">-&gt;</operator><name pos:start="59:34" pos:end="59:36">irq</name><index pos:start="59:37" pos:end="59:39">[<expr pos:start="59:38" pos:end="59:38"><literal type="number" pos:start="59:38" pos:end="59:38">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="59:43" pos:end="59:55">/* dsp irq */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:39"><expr pos:start="61:9" pos:end="61:38"><call pos:start="61:9" pos:end="61:38"><name pos:start="61:9" pos:end="61:23">sysbus_init_irq</name><argument_list pos:start="61:24" pos:end="61:38">(<argument pos:start="61:25" pos:end="61:27"><expr pos:start="61:25" pos:end="61:27"><name pos:start="61:25" pos:end="61:27">sbd</name></expr></argument>, <argument pos:start="61:30" pos:end="61:37"><expr pos:start="61:30" pos:end="61:37"><operator pos:start="61:30" pos:end="61:30">&amp;</operator><name pos:start="61:31" pos:end="61:37"><name pos:start="61:31" pos:end="61:31">m</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:37">wkup</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="65:58"><expr pos:start="63:9" pos:end="65:57"><call pos:start="63:9" pos:end="65:57"><name pos:start="63:9" pos:end="63:29">memory_region_init_io</name><argument_list pos:start="63:30" pos:end="65:57">(<argument pos:start="63:31" pos:end="63:39"><expr pos:start="63:31" pos:end="63:39"><operator pos:start="63:31" pos:end="63:31">&amp;</operator><name pos:start="63:32" pos:end="63:39"><name pos:start="63:32" pos:end="63:32">m</name><operator pos:start="63:33" pos:end="63:34">-&gt;</operator><name pos:start="63:35" pos:end="63:39">iomem</name></name></expr></argument>, <argument pos:start="63:42" pos:end="63:50"><expr pos:start="63:42" pos:end="63:50"><call pos:start="63:42" pos:end="63:50"><name pos:start="63:42" pos:end="63:47">OBJECT</name><argument_list pos:start="63:48" pos:end="63:50">(<argument pos:start="63:49" pos:end="63:49"><expr pos:start="63:49" pos:end="63:49"><name pos:start="63:49" pos:end="63:49">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="63:53" pos:end="63:74"><expr pos:start="63:53" pos:end="63:74"><operator pos:start="63:53" pos:end="63:53">&amp;</operator><name pos:start="63:54" pos:end="63:74">omap2_gpio_module_ops</name></expr></argument>, <argument pos:start="63:77" pos:end="63:77"><expr pos:start="63:77" pos:end="63:77"><name pos:start="63:77" pos:end="63:77">m</name></expr></argument>,

                              <argument pos:start="65:31" pos:end="65:48"><expr pos:start="65:31" pos:end="65:48"><literal type="string" pos:start="65:31" pos:end="65:48">"omap.gpio-module"</literal></expr></argument>, <argument pos:start="65:51" pos:end="65:56"><expr pos:start="65:51" pos:end="65:56"><literal type="number" pos:start="65:51" pos:end="65:56">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:41"><expr pos:start="67:9" pos:end="67:40"><call pos:start="67:9" pos:end="67:40"><name pos:start="67:9" pos:end="67:24">sysbus_init_mmio</name><argument_list pos:start="67:25" pos:end="67:40">(<argument pos:start="67:26" pos:end="67:28"><expr pos:start="67:26" pos:end="67:28"><name pos:start="67:26" pos:end="67:28">sbd</name></expr></argument>, <argument pos:start="67:31" pos:end="67:39"><expr pos:start="67:31" pos:end="67:39"><operator pos:start="67:31" pos:end="67:31">&amp;</operator><name pos:start="67:32" pos:end="67:39"><name pos:start="67:32" pos:end="67:32">m</name><operator pos:start="67:33" pos:end="67:34">-&gt;</operator><name pos:start="67:35" pos:end="67:39">iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
