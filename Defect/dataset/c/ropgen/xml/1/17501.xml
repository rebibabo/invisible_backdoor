<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17501.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">decode_dsw1</name><parameter_list pos:start="1:23" pos:end="3:66">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:30">uint8_t</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:37">frame</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:48"><decl pos:start="1:40" pos:end="1:48"><type pos:start="1:40" pos:end="1:48"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:48">width</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:60">height</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:41"><decl pos:start="3:24" pos:end="3:41"><type pos:start="3:24" pos:end="3:41"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:36">uint8_t</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:41">src</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:65"><decl pos:start="3:44" pos:end="3:65"><type pos:start="3:44" pos:end="3:65"><specifier pos:start="3:44" pos:end="3:48">const</specifier> <name pos:start="3:50" pos:end="3:56">uint8_t</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:65">src_end</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="77:1">{<block_content pos:start="7:5" pos:end="75:13">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:30">frame_start</name> <init pos:start="7:32" pos:end="7:38">= <expr pos:start="7:34" pos:end="7:38"><name pos:start="7:34" pos:end="7:38">frame</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:56"><decl pos:start="9:5" pos:end="9:55"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:28">frame_end</name>   <init pos:start="9:32" pos:end="9:55">= <expr pos:start="9:34" pos:end="9:55"><name pos:start="9:34" pos:end="9:38">frame</name> <operator pos:start="9:40" pos:end="9:40">+</operator> <name pos:start="9:42" pos:end="9:46">width</name> <operator pos:start="9:48" pos:end="9:48">*</operator> <name pos:start="9:50" pos:end="9:55">height</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">mask</name> <init pos:start="11:14" pos:end="11:22">= <expr pos:start="11:16" pos:end="11:22"><literal type="number" pos:start="11:16" pos:end="11:22">0x10000</literal></expr></init></decl>, <decl pos:start="11:25" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:30">bitbuf</name> <init pos:start="11:32" pos:end="11:34">= <expr pos:start="11:34" pos:end="11:34"><literal type="number" pos:start="11:34" pos:end="11:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">v</name></decl>, <decl pos:start="13:12" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:17">offset</name></decl>, <decl pos:start="13:20" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:20" pos:end="13:24">count</name></decl>, <decl pos:start="13:27" pos:end="13:34"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:27" pos:end="13:34">segments</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:41"><expr pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:12">segments</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:40"><name pos:start="17:16" pos:end="17:34">bytestream_get_le16</name><argument_list pos:start="17:35" pos:end="17:40">(<argument pos:start="17:36" pos:end="17:39"><expr pos:start="17:36" pos:end="17:39"><operator pos:start="17:36" pos:end="17:36">&amp;</operator><name pos:start="17:37" pos:end="17:39">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="19:5" pos:end="71:5">while <condition pos:start="19:11" pos:end="19:22">(<expr pos:start="19:12" pos:end="19:21"><name pos:start="19:12" pos:end="19:19">segments</name><operator pos:start="19:20" pos:end="19:21">--</operator></expr>)</condition> <block pos:start="19:24" pos:end="71:5">{<block_content pos:start="21:9" pos:end="69:19">

        <if_stmt pos:start="21:9" pos:end="31:9"><if pos:start="21:9" pos:end="31:9">if <condition pos:start="21:12" pos:end="21:28">(<expr pos:start="21:13" pos:end="21:27"><name pos:start="21:13" pos:end="21:16">mask</name> <operator pos:start="21:18" pos:end="21:19">==</operator> <literal type="number" pos:start="21:21" pos:end="21:27">0x10000</literal></expr>)</condition> <block pos:start="21:30" pos:end="31:9">{<block_content pos:start="23:13" pos:end="29:21">

            <if_stmt pos:start="23:13" pos:end="25:26"><if pos:start="23:13" pos:end="25:26">if <condition pos:start="23:16" pos:end="23:31">(<expr pos:start="23:17" pos:end="23:30"><name pos:start="23:17" pos:end="23:19">src</name> <operator pos:start="23:21" pos:end="23:22">&gt;=</operator> <name pos:start="23:24" pos:end="23:30">src_end</name></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:26"><block_content pos:start="25:17" pos:end="25:26">

                <return pos:start="25:17" pos:end="25:26">return <expr pos:start="25:24" pos:end="25:25"><operator pos:start="25:24" pos:end="25:24">-</operator><literal type="number" pos:start="25:25" pos:end="25:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:47"><expr pos:start="27:13" pos:end="27:46"><name pos:start="27:13" pos:end="27:18">bitbuf</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <call pos:start="27:22" pos:end="27:46"><name pos:start="27:22" pos:end="27:40">bytestream_get_le16</name><argument_list pos:start="27:41" pos:end="27:46">(<argument pos:start="27:42" pos:end="27:45"><expr pos:start="27:42" pos:end="27:45"><operator pos:start="27:42" pos:end="27:42">&amp;</operator><name pos:start="27:43" pos:end="27:45">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:21"><expr pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:16">mask</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <literal type="number" pos:start="29:20" pos:end="29:20">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="35:22"><if pos:start="33:9" pos:end="35:22">if <condition pos:start="33:12" pos:end="33:55">(<expr pos:start="33:13" pos:end="33:54"><name pos:start="33:13" pos:end="33:19">src_end</name> <operator pos:start="33:21" pos:end="33:21">-</operator> <name pos:start="33:23" pos:end="33:25">src</name> <operator pos:start="33:27" pos:end="33:27">&lt;</operator> <literal type="number" pos:start="33:29" pos:end="33:29">2</literal> <operator pos:start="33:31" pos:end="33:32">||</operator> <name pos:start="33:34" pos:end="33:42">frame_end</name> <operator pos:start="33:44" pos:end="33:44">-</operator> <name pos:start="33:46" pos:end="33:50">frame</name> <operator pos:start="33:52" pos:end="33:52">&lt;</operator> <literal type="number" pos:start="33:54" pos:end="33:54">2</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:22"><block_content pos:start="35:13" pos:end="35:22">

            <return pos:start="35:13" pos:end="35:22">return <expr pos:start="35:20" pos:end="35:21"><operator pos:start="35:20" pos:end="35:20">-</operator><literal type="number" pos:start="35:21" pos:end="35:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="67:9"><if pos:start="37:9" pos:end="57:9">if <condition pos:start="37:12" pos:end="37:26">(<expr pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:18">bitbuf</name> <operator pos:start="37:20" pos:end="37:20">&amp;</operator> <name pos:start="37:22" pos:end="37:25">mask</name></expr>)</condition> <block pos:start="37:28" pos:end="57:9">{<block_content pos:start="39:13" pos:end="55:27">

            <expr_stmt pos:start="39:13" pos:end="39:42"><expr pos:start="39:13" pos:end="39:41"><name pos:start="39:13" pos:end="39:13">v</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:41"><name pos:start="39:17" pos:end="39:35">bytestream_get_le16</name><argument_list pos:start="39:36" pos:end="39:41">(<argument pos:start="39:37" pos:end="39:40"><expr pos:start="39:37" pos:end="39:40"><operator pos:start="39:37" pos:end="39:37">&amp;</operator><name pos:start="39:38" pos:end="39:40">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:39"><expr pos:start="41:13" pos:end="41:38"><name pos:start="41:13" pos:end="41:18">offset</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <operator pos:start="41:22" pos:end="41:22">(</operator><name pos:start="41:23" pos:end="41:23">v</name> <operator pos:start="41:25" pos:end="41:25">&amp;</operator> <literal type="number" pos:start="41:27" pos:end="41:32">0x1FFF</literal><operator pos:start="41:33" pos:end="41:33">)</operator> <operator pos:start="41:35" pos:end="41:36">&lt;&lt;</operator> <literal type="number" pos:start="41:38" pos:end="41:38">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:41"><expr pos:start="43:13" pos:end="43:40"><name pos:start="43:13" pos:end="43:17">count</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <operator pos:start="43:21" pos:end="43:21">(</operator><operator pos:start="43:22" pos:end="43:22">(</operator><name pos:start="43:23" pos:end="43:23">v</name> <operator pos:start="43:25" pos:end="43:26">&gt;&gt;</operator> <literal type="number" pos:start="43:28" pos:end="43:29">13</literal><operator pos:start="43:30" pos:end="43:30">)</operator> <operator pos:start="43:32" pos:end="43:32">+</operator> <literal type="number" pos:start="43:34" pos:end="43:34">2</literal><operator pos:start="43:35" pos:end="43:35">)</operator> <operator pos:start="43:37" pos:end="43:38">&lt;&lt;</operator> <literal type="number" pos:start="43:40" pos:end="43:40">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="47:26"><if pos:start="45:13" pos:end="47:26">if <condition pos:start="45:16" pos:end="45:74">(<expr pos:start="45:17" pos:end="45:73"><name pos:start="45:17" pos:end="45:21">frame</name> <operator pos:start="45:23" pos:end="45:23">-</operator> <name pos:start="45:25" pos:end="45:30">offset</name> <operator pos:start="45:32" pos:end="45:32">&lt;</operator> <name pos:start="45:34" pos:end="45:44">frame_start</name> <operator pos:start="45:46" pos:end="45:47">||</operator> <name pos:start="45:49" pos:end="45:57">frame_end</name> <operator pos:start="45:59" pos:end="45:59">-</operator> <name pos:start="45:61" pos:end="45:65">frame</name> <operator pos:start="45:67" pos:end="45:67">&lt;</operator> <name pos:start="45:69" pos:end="45:73">count</name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:26"><block_content pos:start="47:17" pos:end="47:26">

                <return pos:start="47:17" pos:end="47:26">return <expr pos:start="47:24" pos:end="47:25"><operator pos:start="47:24" pos:end="47:24">-</operator><literal type="number" pos:start="47:25" pos:end="47:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <comment type="line" pos:start="49:13" pos:end="49:84">// can't use av_memcpy_backptr() since it can overwrite following pixels</comment>

            <for pos:start="51:13" pos:end="53:45">for <control pos:start="51:17" pos:end="51:39">(<init pos:start="51:18" pos:end="51:23"><expr pos:start="51:18" pos:end="51:22"><name pos:start="51:18" pos:end="51:18">v</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <literal type="number" pos:start="51:22" pos:end="51:22">0</literal></expr>;</init> <condition pos:start="51:25" pos:end="51:34"><expr pos:start="51:25" pos:end="51:33"><name pos:start="51:25" pos:end="51:25">v</name> <operator pos:start="51:27" pos:end="51:27">&lt;</operator> <name pos:start="51:29" pos:end="51:33">count</name></expr>;</condition> <incr pos:start="51:36" pos:end="51:38"><expr pos:start="51:36" pos:end="51:38"><name pos:start="51:36" pos:end="51:36">v</name><operator pos:start="51:37" pos:end="51:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="53:17" pos:end="53:45"><block_content pos:start="53:17" pos:end="53:45">

                <expr_stmt pos:start="53:17" pos:end="53:45"><expr pos:start="53:17" pos:end="53:44"><name pos:start="53:17" pos:end="53:24"><name pos:start="53:17" pos:end="53:21">frame</name><index pos:start="53:22" pos:end="53:24">[<expr pos:start="53:23" pos:end="53:23"><name pos:start="53:23" pos:end="53:23">v</name></expr>]</index></name> <operator pos:start="53:26" pos:end="53:26">=</operator> <name pos:start="53:28" pos:end="53:44"><name pos:start="53:28" pos:end="53:32">frame</name><index pos:start="53:33" pos:end="53:44">[<expr pos:start="53:34" pos:end="53:43"><name pos:start="53:34" pos:end="53:34">v</name> <operator pos:start="53:36" pos:end="53:36">-</operator> <name pos:start="53:38" pos:end="53:43">offset</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="55:13" pos:end="55:27"><expr pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:17">frame</name> <operator pos:start="55:19" pos:end="55:20">+=</operator> <name pos:start="55:22" pos:end="55:26">count</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="57:11" pos:end="61:9">else if <condition pos:start="57:19" pos:end="57:40">(<expr pos:start="57:20" pos:end="57:39"><name pos:start="57:20" pos:end="57:25">bitbuf</name> <operator pos:start="57:27" pos:end="57:27">&amp;</operator> <operator pos:start="57:29" pos:end="57:29">(</operator><name pos:start="57:30" pos:end="57:33">mask</name> <operator pos:start="57:35" pos:end="57:36">&lt;&lt;</operator> <literal type="number" pos:start="57:38" pos:end="57:38">1</literal><operator pos:start="57:39" pos:end="57:39">)</operator></expr>)</condition> <block pos:start="57:42" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:47">

            <expr_stmt pos:start="59:13" pos:end="59:47"><expr pos:start="59:13" pos:end="59:46"><name pos:start="59:13" pos:end="59:17">frame</name> <operator pos:start="59:19" pos:end="59:20">+=</operator> <call pos:start="59:22" pos:end="59:46"><name pos:start="59:22" pos:end="59:40">bytestream_get_le16</name><argument_list pos:start="59:41" pos:end="59:46">(<argument pos:start="59:42" pos:end="59:45"><expr pos:start="59:42" pos:end="59:45"><operator pos:start="59:42" pos:end="59:42">&amp;</operator><name pos:start="59:43" pos:end="59:45">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="67:9">else <block pos:start="61:16" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:30">

            <expr_stmt pos:start="63:13" pos:end="63:30"><expr pos:start="63:13" pos:end="63:29"><operator pos:start="63:13" pos:end="63:13">*</operator><name pos:start="63:14" pos:end="63:18">frame</name><operator pos:start="63:19" pos:end="63:20">++</operator> <operator pos:start="63:22" pos:end="63:22">=</operator> <operator pos:start="63:24" pos:end="63:24">*</operator><name pos:start="63:25" pos:end="63:27">src</name><operator pos:start="63:28" pos:end="63:29">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:30"><expr pos:start="65:13" pos:end="65:29"><operator pos:start="65:13" pos:end="65:13">*</operator><name pos:start="65:14" pos:end="65:18">frame</name><operator pos:start="65:19" pos:end="65:20">++</operator> <operator pos:start="65:22" pos:end="65:22">=</operator> <operator pos:start="65:24" pos:end="65:24">*</operator><name pos:start="65:25" pos:end="65:27">src</name><operator pos:start="65:28" pos:end="65:29">++</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:19"><expr pos:start="69:9" pos:end="69:18"><name pos:start="69:9" pos:end="69:12">mask</name> <operator pos:start="69:14" pos:end="69:16">&lt;&lt;=</operator> <literal type="number" pos:start="69:18" pos:end="69:18">2</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="75:5" pos:end="75:13">return <expr pos:start="75:12" pos:end="75:12"><literal type="number" pos:start="75:12" pos:end="75:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
