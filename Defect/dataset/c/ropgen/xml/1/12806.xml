<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12806.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">h264_slice_header_init</name><parameter_list pos:start="1:34" pos:end="1:61">(<parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:48"><name pos:start="1:35" pos:end="1:45">H264Context</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">h</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:60">reinit</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="165:1">{<block_content pos:start="5:5" pos:end="163:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier><specifier pos:start="5:21" pos:end="5:25">const</specifier></type> <name pos:start="5:27" pos:end="5:27">s</name>  <init pos:start="5:30" pos:end="5:36">= <expr pos:start="5:32" pos:end="5:36"><operator pos:start="5:32" pos:end="5:32">&amp;</operator><name pos:start="5:33" pos:end="5:36"><name pos:start="5:33" pos:end="5:33">h</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="35:5"><if pos:start="11:5" pos:end="27:5">if<condition pos:start="11:7" pos:end="19:5">(   <expr pos:start="11:11" pos:end="17:73"><call pos:start="11:11" pos:end="11:72"><name pos:start="11:11" pos:end="11:17">FFALIGN</name><argument_list pos:start="11:18" pos:end="11:72">(<argument pos:start="11:19" pos:end="11:33"><expr pos:start="11:19" pos:end="11:33"><name pos:start="11:19" pos:end="11:33"><name pos:start="11:19" pos:end="11:19">s</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:26">avctx</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:33">width</name></name></expr></argument> , <argument pos:start="11:37" pos:end="11:38"><expr pos:start="11:37" pos:end="11:38"><literal type="number" pos:start="11:37" pos:end="11:38">16</literal></expr></argument>                                 )</argument_list></call> <operator pos:start="11:74" pos:end="11:75">==</operator> <name pos:start="11:77" pos:end="11:84"><name pos:start="11:77" pos:end="11:77">s</name><operator pos:start="11:78" pos:end="11:79">-&gt;</operator><name pos:start="11:80" pos:end="11:84">width</name></name>

        <operator pos:start="13:9" pos:end="13:10">&amp;&amp;</operator> <call pos:start="13:12" pos:end="13:73"><name pos:start="13:12" pos:end="13:18">FFALIGN</name><argument_list pos:start="13:19" pos:end="13:73">(<argument pos:start="13:20" pos:end="13:35"><expr pos:start="13:20" pos:end="13:35"><name pos:start="13:20" pos:end="13:35"><name pos:start="13:20" pos:end="13:20">s</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:27">avctx</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:35">height</name></name></expr></argument>, <argument pos:start="13:38" pos:end="13:72"><expr pos:start="13:38" pos:end="13:72"><literal type="number" pos:start="13:38" pos:end="13:39">16</literal><operator pos:start="13:40" pos:end="13:40">*</operator><operator pos:start="13:41" pos:end="13:41">(</operator><literal type="number" pos:start="13:42" pos:end="13:44">2</literal> <operator pos:start="13:44" pos:end="13:44">-</operator> <name pos:start="13:46" pos:end="13:71"><name pos:start="13:46" pos:end="13:46">h</name><operator pos:start="13:47" pos:end="13:48">-&gt;</operator><name pos:start="13:49" pos:end="13:51">sps</name><operator pos:start="13:52" pos:end="13:52">.</operator><name pos:start="13:53" pos:end="13:71">frame_mbs_only_flag</name></name><operator pos:start="13:72" pos:end="13:72">)</operator></expr></argument>)</argument_list></call> <operator pos:start="13:75" pos:end="13:76">==</operator> <name pos:start="13:78" pos:end="13:86"><name pos:start="13:78" pos:end="13:78">s</name><operator pos:start="13:79" pos:end="13:80">-&gt;</operator><name pos:start="13:81" pos:end="13:86">height</name></name>

        <operator pos:start="15:9" pos:end="15:10">&amp;&amp;</operator> <operator pos:start="15:12" pos:end="15:12">!</operator><name pos:start="15:13" pos:end="15:29"><name pos:start="15:13" pos:end="15:13">h</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:18">sps</name><operator pos:start="15:19" pos:end="15:19">.</operator><name pos:start="15:20" pos:end="15:29">crop_right</name></name> <operator pos:start="15:31" pos:end="15:32">&amp;&amp;</operator> <operator pos:start="15:34" pos:end="15:34">!</operator><name pos:start="15:35" pos:end="15:52"><name pos:start="15:35" pos:end="15:35">h</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:40">sps</name><operator pos:start="15:41" pos:end="15:41">.</operator><name pos:start="15:42" pos:end="15:52">crop_bottom</name></name>

        <operator pos:start="17:9" pos:end="17:10">&amp;&amp;</operator> <operator pos:start="17:12" pos:end="17:12">(</operator><name pos:start="17:13" pos:end="17:27"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:20">avctx</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:27">width</name></name> <operator pos:start="17:29" pos:end="17:30">!=</operator> <name pos:start="17:32" pos:end="17:39"><name pos:start="17:32" pos:end="17:32">s</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:39">width</name></name> <operator pos:start="17:41" pos:end="17:42">||</operator> <name pos:start="17:44" pos:end="17:59"><name pos:start="17:44" pos:end="17:44">s</name><operator pos:start="17:45" pos:end="17:46">-&gt;</operator><name pos:start="17:47" pos:end="17:51">avctx</name><operator pos:start="17:52" pos:end="17:53">-&gt;</operator><name pos:start="17:54" pos:end="17:59">height</name></name> <operator pos:start="17:61" pos:end="17:62">&amp;&amp;</operator> <name pos:start="17:64" pos:end="17:72"><name pos:start="17:64" pos:end="17:64">s</name><operator pos:start="17:65" pos:end="17:66">-&gt;</operator><name pos:start="17:67" pos:end="17:72">height</name></name><operator pos:start="17:73" pos:end="17:73">)</operator></expr>

    )</condition> <block pos:start="19:7" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:43">

        <expr_stmt pos:start="21:9" pos:end="21:83"><expr pos:start="21:9" pos:end="21:82"><call pos:start="21:9" pos:end="21:82"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:82">(<argument pos:start="21:16" pos:end="21:25"><expr pos:start="21:16" pos:end="21:25"><name pos:start="21:16" pos:end="21:25"><name pos:start="21:16" pos:end="21:16">h</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:19">s</name><operator pos:start="21:20" pos:end="21:20">.</operator><name pos:start="21:21" pos:end="21:25">avctx</name></name></expr></argument>, <argument pos:start="21:28" pos:end="21:39"><expr pos:start="21:28" pos:end="21:39"><name pos:start="21:28" pos:end="21:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="21:42" pos:end="21:81"><expr pos:start="21:42" pos:end="21:81"><literal type="string" pos:start="21:42" pos:end="21:81">"Using externally provided dimensions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:42"><expr pos:start="23:9" pos:end="23:41"><name pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:16">avctx</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:29">coded_width</name></name>  <operator pos:start="23:32" pos:end="23:32">=</operator> <name pos:start="23:34" pos:end="23:41"><name pos:start="23:34" pos:end="23:34">s</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:41">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:16">avctx</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:30">coded_height</name></name> <operator pos:start="25:32" pos:end="25:32">=</operator> <name pos:start="25:34" pos:end="25:42"><name pos:start="25:34" pos:end="25:34">s</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:42">height</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="35:5">else<block pos:start="27:11" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:139">

        <expr_stmt pos:start="29:9" pos:end="29:62"><expr pos:start="29:9" pos:end="29:61"><call pos:start="29:9" pos:end="29:61"><name pos:start="29:9" pos:end="29:30">avcodec_set_dimensions</name><argument_list pos:start="29:31" pos:end="29:61">(<argument pos:start="29:32" pos:end="29:39"><expr pos:start="29:32" pos:end="29:39"><name pos:start="29:32" pos:end="29:39"><name pos:start="29:32" pos:end="29:32">s</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:39">avctx</name></name></expr></argument>, <argument pos:start="29:42" pos:end="29:49"><expr pos:start="29:42" pos:end="29:49"><name pos:start="29:42" pos:end="29:49"><name pos:start="29:42" pos:end="29:42">s</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:49">width</name></name></expr></argument>, <argument pos:start="29:52" pos:end="29:60"><expr pos:start="29:52" pos:end="29:60"><name pos:start="29:52" pos:end="29:60"><name pos:start="29:52" pos:end="29:52">s</name><operator pos:start="29:53" pos:end="29:54">-&gt;</operator><name pos:start="29:55" pos:end="29:60">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:86"><expr pos:start="31:9" pos:end="31:85"><name pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:16">avctx</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:23">width</name></name>  <operator pos:start="31:26" pos:end="31:27">-=</operator> <operator pos:start="31:29" pos:end="31:29">(</operator><literal type="number" pos:start="31:30" pos:end="31:30">2</literal><operator pos:start="31:31" pos:end="31:32">&gt;&gt;</operator><name pos:start="31:33" pos:end="31:41">CHROMA444</name><operator pos:start="31:42" pos:end="31:42">)</operator><operator pos:start="31:43" pos:end="31:43">*</operator><call pos:start="31:44" pos:end="31:85"><name pos:start="31:44" pos:end="31:48">FFMIN</name><argument_list pos:start="31:49" pos:end="31:85">(<argument pos:start="31:50" pos:end="31:66"><expr pos:start="31:50" pos:end="31:66"><name pos:start="31:50" pos:end="31:66"><name pos:start="31:50" pos:end="31:50">h</name><operator pos:start="31:51" pos:end="31:52">-&gt;</operator><name pos:start="31:53" pos:end="31:55">sps</name><operator pos:start="31:56" pos:end="31:56">.</operator><name pos:start="31:57" pos:end="31:66">crop_right</name></name></expr></argument>, <argument pos:start="31:69" pos:end="31:84"><expr pos:start="31:69" pos:end="31:84"><operator pos:start="31:69" pos:end="31:69">(</operator><literal type="number" pos:start="31:70" pos:end="31:70">8</literal><operator pos:start="31:71" pos:end="31:72">&lt;&lt;</operator><name pos:start="31:73" pos:end="31:81">CHROMA444</name><operator pos:start="31:82" pos:end="31:82">)</operator><operator pos:start="31:83" pos:end="31:83">-</operator><literal type="number" pos:start="31:84" pos:end="31:84">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:139"><expr pos:start="33:9" pos:end="33:138"><name pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:16">avctx</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:24">height</name></name> <operator pos:start="33:26" pos:end="33:27">-=</operator> <operator pos:start="33:29" pos:end="33:29">(</operator><literal type="number" pos:start="33:30" pos:end="33:30">1</literal><operator pos:start="33:31" pos:end="33:32">&lt;&lt;</operator><name pos:start="33:33" pos:end="33:49"><name pos:start="33:33" pos:end="33:33">s</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:49">chroma_y_shift</name></name><operator pos:start="33:50" pos:end="33:50">)</operator><operator pos:start="33:51" pos:end="33:51">*</operator><call pos:start="33:52" pos:end="33:103"><name pos:start="33:52" pos:end="33:56">FFMIN</name><argument_list pos:start="33:57" pos:end="33:103">(<argument pos:start="33:58" pos:end="33:75"><expr pos:start="33:58" pos:end="33:75"><name pos:start="33:58" pos:end="33:75"><name pos:start="33:58" pos:end="33:58">h</name><operator pos:start="33:59" pos:end="33:60">-&gt;</operator><name pos:start="33:61" pos:end="33:63">sps</name><operator pos:start="33:64" pos:end="33:64">.</operator><name pos:start="33:65" pos:end="33:75">crop_bottom</name></name></expr></argument>, <argument pos:start="33:78" pos:end="33:102"><expr pos:start="33:78" pos:end="33:102"><operator pos:start="33:78" pos:end="33:78">(</operator><literal type="number" pos:start="33:79" pos:end="33:80">16</literal><operator pos:start="33:81" pos:end="33:82">&gt;&gt;</operator><name pos:start="33:83" pos:end="33:99"><name pos:start="33:83" pos:end="33:83">s</name><operator pos:start="33:84" pos:end="33:85">-&gt;</operator><name pos:start="33:86" pos:end="33:99">chroma_y_shift</name></name><operator pos:start="33:100" pos:end="33:100">)</operator><operator pos:start="33:101" pos:end="33:101">-</operator><literal type="number" pos:start="33:102" pos:end="33:102">1</literal></expr></argument>)</argument_list></call> <operator pos:start="33:105" pos:end="33:105">*</operator> <operator pos:start="33:107" pos:end="33:107">(</operator><literal type="number" pos:start="33:108" pos:end="33:110">2</literal> <operator pos:start="33:110" pos:end="33:110">-</operator> <name pos:start="33:112" pos:end="33:137"><name pos:start="33:112" pos:end="33:112">h</name><operator pos:start="33:113" pos:end="33:114">-&gt;</operator><name pos:start="33:115" pos:end="33:117">sps</name><operator pos:start="33:118" pos:end="33:118">.</operator><name pos:start="33:119" pos:end="33:137">frame_mbs_only_flag</name></name><operator pos:start="33:138" pos:end="33:138">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:47"><expr pos:start="39:5" pos:end="39:46"><name pos:start="39:5" pos:end="39:33"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:12">avctx</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:33">sample_aspect_ratio</name></name> <operator pos:start="39:35" pos:end="39:35">=</operator> <name pos:start="39:37" pos:end="39:46"><name pos:start="39:37" pos:end="39:37">h</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:42">sps</name><operator pos:start="39:43" pos:end="39:43">.</operator><name pos:start="39:44" pos:end="39:46">sar</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:50"><expr pos:start="41:5" pos:end="41:49"><call pos:start="41:5" pos:end="41:49"><name pos:start="41:5" pos:end="41:14">av_assert0</name><argument_list pos:start="41:15" pos:end="41:49">(<argument pos:start="41:16" pos:end="41:48"><expr pos:start="41:16" pos:end="41:48"><name pos:start="41:16" pos:end="41:48"><name pos:start="41:16" pos:end="41:16">s</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:23">avctx</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:44">sample_aspect_ratio</name><operator pos:start="41:45" pos:end="41:45">.</operator><name pos:start="41:46" pos:end="41:48">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="57:5"><if pos:start="45:5" pos:end="57:5">if <condition pos:start="45:8" pos:end="45:40">(<expr pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:9">h</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:14">sps</name><operator pos:start="45:15" pos:end="45:15">.</operator><name pos:start="45:16" pos:end="45:39">timing_info_present_flag</name></name></expr>)</condition> <block pos:start="45:42" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:58">

        <decl_stmt pos:start="47:9" pos:end="47:40"><decl pos:start="47:9" pos:end="47:39"><type pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:15">int64_t</name></type> <name pos:start="47:17" pos:end="47:19">den</name> <init pos:start="47:21" pos:end="47:39">= <expr pos:start="47:23" pos:end="47:39"><name pos:start="47:23" pos:end="47:39"><name pos:start="47:23" pos:end="47:23">h</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:28">sps</name><operator pos:start="47:29" pos:end="47:29">.</operator><name pos:start="47:30" pos:end="47:39">time_scale</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="49:9" pos:end="51:21"><if pos:start="49:9" pos:end="51:21">if <condition pos:start="49:12" pos:end="49:32">(<expr pos:start="49:13" pos:end="49:31"><name pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:13">h</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:25">x264_build</name></name> <operator pos:start="49:27" pos:end="49:27">&lt;</operator> <literal type="number" pos:start="49:29" pos:end="49:31">44U</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:21"><block_content pos:start="51:13" pos:end="51:21">

            <expr_stmt pos:start="51:13" pos:end="51:21"><expr pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:15">den</name> <operator pos:start="51:17" pos:end="51:18">*=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="55:58"><expr pos:start="53:9" pos:end="55:57"><call pos:start="53:9" pos:end="55:57"><name pos:start="53:9" pos:end="53:17">av_reduce</name><argument_list pos:start="53:18" pos:end="55:57">(<argument pos:start="53:19" pos:end="53:42"><expr pos:start="53:19" pos:end="53:42"><operator pos:start="53:19" pos:end="53:19">&amp;</operator><name pos:start="53:20" pos:end="53:42"><name pos:start="53:20" pos:end="53:20">s</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:27">avctx</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:38">time_base</name><operator pos:start="53:39" pos:end="53:39">.</operator><name pos:start="53:40" pos:end="53:42">num</name></name></expr></argument>, <argument pos:start="53:45" pos:end="53:68"><expr pos:start="53:45" pos:end="53:68"><operator pos:start="53:45" pos:end="53:45">&amp;</operator><name pos:start="53:46" pos:end="53:68"><name pos:start="53:46" pos:end="53:46">s</name><operator pos:start="53:47" pos:end="53:48">-&gt;</operator><name pos:start="53:49" pos:end="53:53">avctx</name><operator pos:start="53:54" pos:end="53:55">-&gt;</operator><name pos:start="53:56" pos:end="53:64">time_base</name><operator pos:start="53:65" pos:end="53:65">.</operator><name pos:start="53:66" pos:end="53:68">den</name></name></expr></argument>,

                  <argument pos:start="55:19" pos:end="55:42"><expr pos:start="55:19" pos:end="55:42"><name pos:start="55:19" pos:end="55:42"><name pos:start="55:19" pos:end="55:19">h</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:24">sps</name><operator pos:start="55:25" pos:end="55:25">.</operator><name pos:start="55:26" pos:end="55:42">num_units_in_tick</name></name></expr></argument>, <argument pos:start="55:45" pos:end="55:47"><expr pos:start="55:45" pos:end="55:47"><name pos:start="55:45" pos:end="55:47">den</name></expr></argument>, <argument pos:start="55:50" pos:end="55:56"><expr pos:start="55:50" pos:end="55:56"><literal type="number" pos:start="55:50" pos:end="55:50">1</literal> <operator pos:start="55:52" pos:end="55:53">&lt;&lt;</operator> <literal type="number" pos:start="55:55" pos:end="55:56">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:80"><expr pos:start="61:5" pos:end="61:79"><name pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:12">avctx</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:21">hwaccel</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <call pos:start="61:25" pos:end="61:79"><name pos:start="61:25" pos:end="61:39">ff_find_hwaccel</name><argument_list pos:start="61:40" pos:end="61:79">(<argument pos:start="61:41" pos:end="61:59"><expr pos:start="61:41" pos:end="61:59"><name pos:start="61:41" pos:end="61:59"><name pos:start="61:41" pos:end="61:41">s</name><operator pos:start="61:42" pos:end="61:43">-&gt;</operator><name pos:start="61:44" pos:end="61:48">avctx</name><operator pos:start="61:49" pos:end="61:50">-&gt;</operator><name pos:start="61:51" pos:end="61:55">codec</name><operator pos:start="61:56" pos:end="61:57">-&gt;</operator><name pos:start="61:58" pos:end="61:59">id</name></name></expr></argument>, <argument pos:start="61:62" pos:end="61:78"><expr pos:start="61:62" pos:end="61:78"><name pos:start="61:62" pos:end="61:78"><name pos:start="61:62" pos:end="61:62">s</name><operator pos:start="61:63" pos:end="61:64">-&gt;</operator><name pos:start="61:65" pos:end="61:69">avctx</name><operator pos:start="61:70" pos:end="61:71">-&gt;</operator><name pos:start="61:72" pos:end="61:78">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="65:5" pos:end="87:5"><if pos:start="65:5" pos:end="77:5">if <condition pos:start="65:8" pos:end="65:15">(<expr pos:start="65:9" pos:end="65:14"><name pos:start="65:9" pos:end="65:14">reinit</name></expr>)</condition> <block pos:start="65:17" pos:end="77:5">{<block_content pos:start="67:9" pos:end="75:9">

        <expr_stmt pos:start="67:9" pos:end="67:26"><expr pos:start="67:9" pos:end="67:25"><call pos:start="67:9" pos:end="67:25"><name pos:start="67:9" pos:end="67:19">free_tables</name><argument_list pos:start="67:20" pos:end="67:25">(<argument pos:start="67:21" pos:end="67:21"><expr pos:start="67:21" pos:end="67:21"><name pos:start="67:21" pos:end="67:21">h</name></expr></argument>, <argument pos:start="67:24" pos:end="67:24"><expr pos:start="67:24" pos:end="67:24"><literal type="number" pos:start="67:24" pos:end="67:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:59">(<expr pos:start="69:13" pos:end="69:58"><operator pos:start="69:13" pos:end="69:13">(</operator><name pos:start="69:14" pos:end="69:16">ret</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <call pos:start="69:20" pos:end="69:53"><name pos:start="69:20" pos:end="69:50">ff_MPV_common_frame_size_change</name><argument_list pos:start="69:51" pos:end="69:53">(<argument pos:start="69:52" pos:end="69:52"><expr pos:start="69:52" pos:end="69:52"><name pos:start="69:52" pos:end="69:52">s</name></expr></argument>)</argument_list></call><operator pos:start="69:54" pos:end="69:54">)</operator> <operator pos:start="69:56" pos:end="69:56">&lt;</operator> <literal type="number" pos:start="69:58" pos:end="69:58">0</literal></expr>)</condition> <block pos:start="69:61" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:23">

            <expr_stmt pos:start="71:13" pos:end="71:92"><expr pos:start="71:13" pos:end="71:91"><call pos:start="71:13" pos:end="71:91"><name pos:start="71:13" pos:end="71:18">av_log</name><argument_list pos:start="71:19" pos:end="71:91">(<argument pos:start="71:20" pos:end="71:29"><expr pos:start="71:20" pos:end="71:29"><name pos:start="71:20" pos:end="71:29"><name pos:start="71:20" pos:end="71:20">h</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:23">s</name><operator pos:start="71:24" pos:end="71:24">.</operator><name pos:start="71:25" pos:end="71:29">avctx</name></name></expr></argument>, <argument pos:start="71:32" pos:end="71:43"><expr pos:start="71:32" pos:end="71:43"><name pos:start="71:32" pos:end="71:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:46" pos:end="71:90"><expr pos:start="71:46" pos:end="71:90"><literal type="string" pos:start="71:46" pos:end="71:90">"ff_MPV_common_frame_size_change() failed.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="73:13" pos:end="73:23">return <expr pos:start="73:20" pos:end="73:22"><name pos:start="73:20" pos:end="73:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="87:5">else <block pos:start="77:12" pos:end="87:5">{<block_content pos:start="79:9" pos:end="85:9">

        <if_stmt pos:start="79:9" pos:end="85:9"><if pos:start="79:9" pos:end="85:9">if <condition pos:start="79:12" pos:end="79:46">(<expr pos:start="79:13" pos:end="79:45"><operator pos:start="79:13" pos:end="79:13">(</operator><name pos:start="79:14" pos:end="79:16">ret</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <call pos:start="79:20" pos:end="79:40"><name pos:start="79:20" pos:end="79:37">ff_MPV_common_init</name><argument_list pos:start="79:38" pos:end="79:40">(<argument pos:start="79:39" pos:end="79:39"><expr pos:start="79:39" pos:end="79:39"><name pos:start="79:39" pos:end="79:39">s</name></expr></argument>)</argument_list></call> <operator pos:start="79:42" pos:end="79:42">&lt;</operator> <literal type="number" pos:start="79:44" pos:end="79:44">0</literal><operator pos:start="79:45" pos:end="79:45">)</operator></expr>)</condition> <block pos:start="79:48" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:23">

            <expr_stmt pos:start="81:13" pos:end="81:79"><expr pos:start="81:13" pos:end="81:78"><call pos:start="81:13" pos:end="81:78"><name pos:start="81:13" pos:end="81:18">av_log</name><argument_list pos:start="81:19" pos:end="81:78">(<argument pos:start="81:20" pos:end="81:29"><expr pos:start="81:20" pos:end="81:29"><name pos:start="81:20" pos:end="81:29"><name pos:start="81:20" pos:end="81:20">h</name><operator pos:start="81:21" pos:end="81:22">-&gt;</operator><name pos:start="81:23" pos:end="81:23">s</name><operator pos:start="81:24" pos:end="81:24">.</operator><name pos:start="81:25" pos:end="81:29">avctx</name></name></expr></argument>, <argument pos:start="81:32" pos:end="81:43"><expr pos:start="81:32" pos:end="81:43"><name pos:start="81:32" pos:end="81:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:46" pos:end="81:77"><expr pos:start="81:46" pos:end="81:77"><literal type="string" pos:start="81:46" pos:end="81:77">"ff_MPV_common_init() failed.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="83:13" pos:end="83:23">return <expr pos:start="83:20" pos:end="83:22"><name pos:start="83:20" pos:end="83:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:23"><expr pos:start="89:5" pos:end="89:22"><name pos:start="89:5" pos:end="89:18"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:18">first_field</name></name> <operator pos:start="89:20" pos:end="89:20">=</operator> <literal type="number" pos:start="89:22" pos:end="89:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:33"><expr pos:start="91:5" pos:end="91:32"><name pos:start="91:5" pos:end="91:28"><name pos:start="91:5" pos:end="91:5">h</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:28">prev_interlaced_frame</name></name> <operator pos:start="91:30" pos:end="91:30">=</operator> <literal type="number" pos:start="91:32" pos:end="91:32">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:24"><expr pos:start="95:5" pos:end="95:23"><call pos:start="95:5" pos:end="95:23"><name pos:start="95:5" pos:end="95:20">init_scan_tables</name><argument_list pos:start="95:21" pos:end="95:23">(<argument pos:start="95:22" pos:end="95:22"><expr pos:start="95:22" pos:end="95:22"><name pos:start="95:22" pos:end="95:22">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="105:5"><if pos:start="97:5" pos:end="105:5">if <condition pos:start="97:8" pos:end="97:36">(<expr pos:start="97:9" pos:end="97:35"><call pos:start="97:9" pos:end="97:31"><name pos:start="97:9" pos:end="97:28">ff_h264_alloc_tables</name><argument_list pos:start="97:29" pos:end="97:31">(<argument pos:start="97:30" pos:end="97:30"><expr pos:start="97:30" pos:end="97:30"><name pos:start="97:30" pos:end="97:30">h</name></expr></argument>)</argument_list></call> <operator pos:start="97:33" pos:end="97:33">&lt;</operator> <literal type="number" pos:start="97:35" pos:end="97:35">0</literal></expr>)</condition> <block pos:start="97:38" pos:end="105:5">{<block_content pos:start="99:9" pos:end="103:31">

        <expr_stmt pos:start="99:9" pos:end="101:55"><expr pos:start="99:9" pos:end="101:54"><call pos:start="99:9" pos:end="101:54"><name pos:start="99:9" pos:end="99:14">av_log</name><argument_list pos:start="99:15" pos:end="101:54">(<argument pos:start="99:16" pos:end="99:25"><expr pos:start="99:16" pos:end="99:25"><name pos:start="99:16" pos:end="99:25"><name pos:start="99:16" pos:end="99:16">h</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:19">s</name><operator pos:start="99:20" pos:end="99:20">.</operator><name pos:start="99:21" pos:end="99:25">avctx</name></name></expr></argument>, <argument pos:start="99:28" pos:end="99:39"><expr pos:start="99:28" pos:end="99:39"><name pos:start="99:28" pos:end="99:39">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="101:16" pos:end="101:53"><expr pos:start="101:16" pos:end="101:53"><literal type="string" pos:start="101:16" pos:end="101:53">"Could not allocate memory for h264\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:31">return <expr pos:start="103:16" pos:end="103:30"><call pos:start="103:16" pos:end="103:30"><name pos:start="103:16" pos:end="103:22">AVERROR</name><argument_list pos:start="103:23" pos:end="103:30">(<argument pos:start="103:24" pos:end="103:29"><expr pos:start="103:24" pos:end="103:29"><name pos:start="103:24" pos:end="103:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="109:5" pos:end="159:5"><if pos:start="109:5" pos:end="119:5">if <condition pos:start="109:8" pos:end="109:75">(<expr pos:start="109:9" pos:end="109:74"><operator pos:start="109:9" pos:end="109:9">!</operator><name pos:start="109:10" pos:end="109:21">HAVE_THREADS</name> <operator pos:start="109:23" pos:end="109:24">||</operator> <operator pos:start="109:26" pos:end="109:26">!</operator><operator pos:start="109:27" pos:end="109:27">(</operator><name pos:start="109:28" pos:end="109:55"><name pos:start="109:28" pos:end="109:28">s</name><operator pos:start="109:29" pos:end="109:30">-&gt;</operator><name pos:start="109:31" pos:end="109:35">avctx</name><operator pos:start="109:36" pos:end="109:37">-&gt;</operator><name pos:start="109:38" pos:end="109:55">active_thread_type</name></name> <operator pos:start="109:57" pos:end="109:57">&amp;</operator> <name pos:start="109:59" pos:end="109:73">FF_THREAD_SLICE</name><operator pos:start="109:74" pos:end="109:74">)</operator></expr>)</condition> <block pos:start="109:77" pos:end="119:5">{<block_content pos:start="111:9" pos:end="117:9">

        <if_stmt pos:start="111:9" pos:end="117:9"><if pos:start="111:9" pos:end="117:9">if <condition pos:start="111:12" pos:end="111:32">(<expr pos:start="111:13" pos:end="111:31"><call pos:start="111:13" pos:end="111:27"><name pos:start="111:13" pos:end="111:24">context_init</name><argument_list pos:start="111:25" pos:end="111:27">(<argument pos:start="111:26" pos:end="111:26"><expr pos:start="111:26" pos:end="111:26"><name pos:start="111:26" pos:end="111:26">h</name></expr></argument>)</argument_list></call> <operator pos:start="111:29" pos:end="111:29">&lt;</operator> <literal type="number" pos:start="111:31" pos:end="111:31">0</literal></expr>)</condition> <block pos:start="111:34" pos:end="117:9">{<block_content pos:start="113:13" pos:end="115:22">

            <expr_stmt pos:start="113:13" pos:end="113:73"><expr pos:start="113:13" pos:end="113:72"><call pos:start="113:13" pos:end="113:72"><name pos:start="113:13" pos:end="113:18">av_log</name><argument_list pos:start="113:19" pos:end="113:72">(<argument pos:start="113:20" pos:end="113:29"><expr pos:start="113:20" pos:end="113:29"><name pos:start="113:20" pos:end="113:29"><name pos:start="113:20" pos:end="113:20">h</name><operator pos:start="113:21" pos:end="113:22">-&gt;</operator><name pos:start="113:23" pos:end="113:23">s</name><operator pos:start="113:24" pos:end="113:24">.</operator><name pos:start="113:25" pos:end="113:29">avctx</name></name></expr></argument>, <argument pos:start="113:32" pos:end="113:43"><expr pos:start="113:32" pos:end="113:43"><name pos:start="113:32" pos:end="113:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="113:46" pos:end="113:71"><expr pos:start="113:46" pos:end="113:71"><literal type="string" pos:start="113:46" pos:end="113:71">"context_init() failed.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="115:13" pos:end="115:22">return <expr pos:start="115:20" pos:end="115:21"><operator pos:start="115:20" pos:end="115:20">-</operator><literal type="number" pos:start="115:21" pos:end="115:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="119:7" pos:end="159:5">else <block pos:start="119:12" pos:end="159:5">{<block_content pos:start="121:9" pos:end="157:13">

        <for pos:start="121:9" pos:end="145:9">for <control pos:start="121:13" pos:end="121:52">(<init pos:start="121:14" pos:end="121:19"><expr pos:start="121:14" pos:end="121:18"><name pos:start="121:14" pos:end="121:14">i</name> <operator pos:start="121:16" pos:end="121:16">=</operator> <literal type="number" pos:start="121:18" pos:end="121:18">1</literal></expr>;</init> <condition pos:start="121:21" pos:end="121:47"><expr pos:start="121:21" pos:end="121:46"><name pos:start="121:21" pos:end="121:21">i</name> <operator pos:start="121:23" pos:end="121:23">&lt;</operator> <name pos:start="121:25" pos:end="121:46"><name pos:start="121:25" pos:end="121:25">s</name><operator pos:start="121:26" pos:end="121:27">-&gt;</operator><name pos:start="121:28" pos:end="121:46">slice_context_count</name></name></expr>;</condition> <incr pos:start="121:49" pos:end="121:51"><expr pos:start="121:49" pos:end="121:51"><name pos:start="121:49" pos:end="121:49">i</name><operator pos:start="121:50" pos:end="121:51">++</operator></expr></incr>)</control> <block pos:start="121:54" pos:end="145:9">{<block_content pos:start="123:13" pos:end="143:34">

            <decl_stmt pos:start="123:13" pos:end="123:27"><decl pos:start="123:13" pos:end="123:26"><type pos:start="123:13" pos:end="123:25"><name pos:start="123:13" pos:end="123:23">H264Context</name> <modifier pos:start="123:25" pos:end="123:25">*</modifier></type><name pos:start="123:26" pos:end="123:26">c</name></decl>;</decl_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:70"><expr pos:start="125:13" pos:end="125:69"><name pos:start="125:13" pos:end="125:13">c</name> <operator pos:start="125:15" pos:end="125:15">=</operator> <name pos:start="125:17" pos:end="125:36"><name pos:start="125:17" pos:end="125:17">h</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:33">thread_context</name><index pos:start="125:34" pos:end="125:36">[<expr pos:start="125:35" pos:end="125:35"><name pos:start="125:35" pos:end="125:35">i</name></expr>]</index></name> <operator pos:start="125:38" pos:end="125:38">=</operator> <call pos:start="125:40" pos:end="125:69"><name pos:start="125:40" pos:end="125:48">av_malloc</name><argument_list pos:start="125:49" pos:end="125:69">(<argument pos:start="125:50" pos:end="125:68"><expr pos:start="125:50" pos:end="125:68"><sizeof pos:start="125:50" pos:end="125:68">sizeof<argument_list pos:start="125:56" pos:end="125:68">(<argument pos:start="125:57" pos:end="125:67"><expr pos:start="125:57" pos:end="125:67"><name pos:start="125:57" pos:end="125:67">H264Context</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:70"><expr pos:start="127:13" pos:end="127:69"><call pos:start="127:13" pos:end="127:69"><name pos:start="127:13" pos:end="127:18">memcpy</name><argument_list pos:start="127:19" pos:end="127:69">(<argument pos:start="127:20" pos:end="127:20"><expr pos:start="127:20" pos:end="127:20"><name pos:start="127:20" pos:end="127:20">c</name></expr></argument>, <argument pos:start="127:23" pos:end="127:44"><expr pos:start="127:23" pos:end="127:44"><name pos:start="127:23" pos:end="127:44"><name pos:start="127:23" pos:end="127:23">h</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:26">s</name><operator pos:start="127:27" pos:end="127:27">.</operator><name pos:start="127:28" pos:end="127:41">thread_context</name><index pos:start="127:42" pos:end="127:44">[<expr pos:start="127:43" pos:end="127:43"><name pos:start="127:43" pos:end="127:43">i</name></expr>]</index></name></expr></argument>, <argument pos:start="127:47" pos:end="127:68"><expr pos:start="127:47" pos:end="127:68"><sizeof pos:start="127:47" pos:end="127:68">sizeof<argument_list pos:start="127:53" pos:end="127:68">(<argument pos:start="127:54" pos:end="127:67"><expr pos:start="127:54" pos:end="127:67"><name pos:start="127:54" pos:end="127:67">MpegEncContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:79"><expr pos:start="129:13" pos:end="129:78"><call pos:start="129:13" pos:end="129:78"><name pos:start="129:13" pos:end="129:18">memset</name><argument_list pos:start="129:19" pos:end="129:78">(<argument pos:start="129:20" pos:end="129:28"><expr pos:start="129:20" pos:end="129:28"><operator pos:start="129:20" pos:end="129:20">&amp;</operator><name pos:start="129:21" pos:end="129:24"><name pos:start="129:21" pos:end="129:21">c</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:24">s</name></name> <operator pos:start="129:26" pos:end="129:26">+</operator> <literal type="number" pos:start="129:28" pos:end="129:28">1</literal></expr></argument>, <argument pos:start="129:31" pos:end="129:31"><expr pos:start="129:31" pos:end="129:31"><literal type="number" pos:start="129:31" pos:end="129:31">0</literal></expr></argument>, <argument pos:start="129:34" pos:end="129:77"><expr pos:start="129:34" pos:end="129:77"><sizeof pos:start="129:34" pos:end="129:52">sizeof<argument_list pos:start="129:40" pos:end="129:52">(<argument pos:start="129:41" pos:end="129:51"><expr pos:start="129:41" pos:end="129:51"><name pos:start="129:41" pos:end="129:51">H264Context</name></expr></argument>)</argument_list></sizeof> <operator pos:start="129:54" pos:end="129:54">-</operator> <sizeof pos:start="129:56" pos:end="129:77">sizeof<argument_list pos:start="129:62" pos:end="129:77">(<argument pos:start="129:63" pos:end="129:76"><expr pos:start="129:63" pos:end="129:76"><name pos:start="129:63" pos:end="129:76">MpegEncContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:40"><expr pos:start="131:13" pos:end="131:39"><name pos:start="131:13" pos:end="131:22"><name pos:start="131:13" pos:end="131:13">c</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:22">h264dsp</name></name>     <operator pos:start="131:28" pos:end="131:28">=</operator> <name pos:start="131:30" pos:end="131:39"><name pos:start="131:30" pos:end="131:30">h</name><operator pos:start="131:31" pos:end="131:32">-&gt;</operator><name pos:start="131:33" pos:end="131:39">h264dsp</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:36"><expr pos:start="133:13" pos:end="133:35"><name pos:start="133:13" pos:end="133:18"><name pos:start="133:13" pos:end="133:13">c</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:18">sps</name></name>         <operator pos:start="133:28" pos:end="133:28">=</operator> <name pos:start="133:30" pos:end="133:35"><name pos:start="133:30" pos:end="133:30">h</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:35">sps</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:36"><expr pos:start="135:13" pos:end="135:35"><name pos:start="135:13" pos:end="135:18"><name pos:start="135:13" pos:end="135:13">c</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:18">pps</name></name>         <operator pos:start="135:28" pos:end="135:28">=</operator> <name pos:start="135:30" pos:end="135:35"><name pos:start="135:30" pos:end="135:30">h</name><operator pos:start="135:31" pos:end="135:32">-&gt;</operator><name pos:start="135:33" pos:end="135:35">pps</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:44"><expr pos:start="137:13" pos:end="137:43"><name pos:start="137:13" pos:end="137:26"><name pos:start="137:13" pos:end="137:13">c</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:26">pixel_shift</name></name> <operator pos:start="137:28" pos:end="137:28">=</operator> <name pos:start="137:30" pos:end="137:43"><name pos:start="137:30" pos:end="137:30">h</name><operator pos:start="137:31" pos:end="137:32">-&gt;</operator><name pos:start="137:33" pos:end="137:43">pixel_shift</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:64"><expr pos:start="139:13" pos:end="139:63"><name pos:start="139:13" pos:end="139:36"><name pos:start="139:13" pos:end="139:13">c</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:36">cur_chroma_format_idc</name></name> <operator pos:start="139:38" pos:end="139:38">=</operator> <name pos:start="139:40" pos:end="139:63"><name pos:start="139:40" pos:end="139:40">h</name><operator pos:start="139:41" pos:end="139:42">-&gt;</operator><name pos:start="139:43" pos:end="139:63">cur_chroma_format_idc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:32"><expr pos:start="141:13" pos:end="141:31"><call pos:start="141:13" pos:end="141:31"><name pos:start="141:13" pos:end="141:28">init_scan_tables</name><argument_list pos:start="141:29" pos:end="141:31">(<argument pos:start="141:30" pos:end="141:30"><expr pos:start="141:30" pos:end="141:30"><name pos:start="141:30" pos:end="141:30">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:34"><expr pos:start="143:13" pos:end="143:33"><call pos:start="143:13" pos:end="143:33"><name pos:start="143:13" pos:end="143:24">clone_tables</name><argument_list pos:start="143:25" pos:end="143:33">(<argument pos:start="143:26" pos:end="143:26"><expr pos:start="143:26" pos:end="143:26"><name pos:start="143:26" pos:end="143:26">c</name></expr></argument>, <argument pos:start="143:29" pos:end="143:29"><expr pos:start="143:29" pos:end="143:29"><name pos:start="143:29" pos:end="143:29">h</name></expr></argument>, <argument pos:start="143:32" pos:end="143:32"><expr pos:start="143:32" pos:end="143:32"><name pos:start="143:32" pos:end="143:32">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <for pos:start="149:9" pos:end="157:13">for <control pos:start="149:13" pos:end="149:52">(<init pos:start="149:14" pos:end="149:19"><expr pos:start="149:14" pos:end="149:18"><name pos:start="149:14" pos:end="149:14">i</name> <operator pos:start="149:16" pos:end="149:16">=</operator> <literal type="number" pos:start="149:18" pos:end="149:18">0</literal></expr>;</init> <condition pos:start="149:21" pos:end="149:47"><expr pos:start="149:21" pos:end="149:46"><name pos:start="149:21" pos:end="149:21">i</name> <operator pos:start="149:23" pos:end="149:23">&lt;</operator> <name pos:start="149:25" pos:end="149:46"><name pos:start="149:25" pos:end="149:25">s</name><operator pos:start="149:26" pos:end="149:27">-&gt;</operator><name pos:start="149:28" pos:end="149:46">slice_context_count</name></name></expr>;</condition> <incr pos:start="149:49" pos:end="149:51"><expr pos:start="149:49" pos:end="149:51"><name pos:start="149:49" pos:end="149:49">i</name><operator pos:start="149:50" pos:end="149:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="151:13" pos:end="157:13"><block_content pos:start="151:13" pos:end="157:13">

            <if_stmt pos:start="151:13" pos:end="157:13"><if pos:start="151:13" pos:end="157:13">if <condition pos:start="151:16" pos:end="151:55">(<expr pos:start="151:17" pos:end="151:54"><call pos:start="151:17" pos:end="151:50"><name pos:start="151:17" pos:end="151:28">context_init</name><argument_list pos:start="151:29" pos:end="151:50">(<argument pos:start="151:30" pos:end="151:49"><expr pos:start="151:30" pos:end="151:49"><name pos:start="151:30" pos:end="151:49"><name pos:start="151:30" pos:end="151:30">h</name><operator pos:start="151:31" pos:end="151:32">-&gt;</operator><name pos:start="151:33" pos:end="151:46">thread_context</name><index pos:start="151:47" pos:end="151:49">[<expr pos:start="151:48" pos:end="151:48"><name pos:start="151:48" pos:end="151:48">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="151:52" pos:end="151:52">&lt;</operator> <literal type="number" pos:start="151:54" pos:end="151:54">0</literal></expr>)</condition> <block pos:start="151:57" pos:end="157:13">{<block_content pos:start="153:17" pos:end="155:26">

                <expr_stmt pos:start="153:17" pos:end="153:77"><expr pos:start="153:17" pos:end="153:76"><call pos:start="153:17" pos:end="153:76"><name pos:start="153:17" pos:end="153:22">av_log</name><argument_list pos:start="153:23" pos:end="153:76">(<argument pos:start="153:24" pos:end="153:33"><expr pos:start="153:24" pos:end="153:33"><name pos:start="153:24" pos:end="153:33"><name pos:start="153:24" pos:end="153:24">h</name><operator pos:start="153:25" pos:end="153:26">-&gt;</operator><name pos:start="153:27" pos:end="153:27">s</name><operator pos:start="153:28" pos:end="153:28">.</operator><name pos:start="153:29" pos:end="153:33">avctx</name></name></expr></argument>, <argument pos:start="153:36" pos:end="153:47"><expr pos:start="153:36" pos:end="153:47"><name pos:start="153:36" pos:end="153:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="153:50" pos:end="153:75"><expr pos:start="153:50" pos:end="153:75"><literal type="string" pos:start="153:50" pos:end="153:75">"context_init() failed.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="155:17" pos:end="155:26">return <expr pos:start="155:24" pos:end="155:25"><operator pos:start="155:24" pos:end="155:24">-</operator><literal type="number" pos:start="155:25" pos:end="155:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt></block_content></block></for>

    </block_content>}</block></else></if_stmt>



    <return pos:start="163:5" pos:end="163:13">return <expr pos:start="163:12" pos:end="163:12"><literal type="number" pos:start="163:12" pos:end="163:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
