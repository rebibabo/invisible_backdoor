<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22989.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">hwaddr</name></type> <name pos:start="1:15" pos:end="1:36">ppc_hash64_pteg_search</name><parameter_list pos:start="1:37" pos:end="5:78">(<parameter pos:start="1:38" pos:end="1:52"><decl pos:start="1:38" pos:end="1:52"><type pos:start="1:38" pos:end="1:52"><name pos:start="1:38" pos:end="1:47">PowerPCCPU</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">cpu</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:65"><decl pos:start="1:55" pos:end="1:65"><type pos:start="1:55" pos:end="1:65"><name pos:start="1:55" pos:end="1:60">hwaddr</name></type> <name pos:start="1:62" pos:end="1:65">hash</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:56"><decl pos:start="3:38" pos:end="3:56"><type pos:start="3:38" pos:end="3:56"><name pos:start="3:38" pos:end="3:45">uint32_t</name></type> <name pos:start="3:47" pos:end="3:56">slb_pshift</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:72"><decl pos:start="3:59" pos:end="3:72"><type pos:start="3:59" pos:end="3:72"><name pos:start="3:59" pos:end="3:62">bool</name></type> <name pos:start="3:64" pos:end="3:72">secondary</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:54"><decl pos:start="5:38" pos:end="5:54"><type pos:start="5:38" pos:end="5:54"><name pos:start="5:38" pos:end="5:49">target_ulong</name></type> <name pos:start="5:51" pos:end="5:54">ptem</name></decl></parameter>, <parameter pos:start="5:57" pos:end="5:77"><decl pos:start="5:57" pos:end="5:77"><type pos:start="5:57" pos:end="5:77"><name pos:start="5:57" pos:end="5:72">ppc_hash_pte64_t</name> <modifier pos:start="5:74" pos:end="5:74">*</modifier></type><name pos:start="5:75" pos:end="5:77">pte</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="81:1">{<block_content pos:start="9:5" pos:end="79:14">

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">CPUPPCState</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">env</name> <init pos:start="9:22" pos:end="9:32">= <expr pos:start="9:24" pos:end="9:32"><operator pos:start="9:24" pos:end="9:24">&amp;</operator><name pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:27">cpu</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:18">token</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">target_ulong</name></type> <name pos:start="15:18" pos:end="15:21">pte0</name></decl>, <decl pos:start="15:24" pos:end="15:27"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:24" pos:end="15:27">pte1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:16">target_ulong</name></type> <name pos:start="17:18" pos:end="17:26">pte_index</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:58"><expr pos:start="21:5" pos:end="21:57"><name pos:start="21:5" pos:end="21:13">pte_index</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <operator pos:start="21:17" pos:end="21:17">(</operator><name pos:start="21:18" pos:end="21:21">hash</name> <operator pos:start="21:23" pos:end="21:23">&amp;</operator> <name pos:start="21:25" pos:end="21:38"><name pos:start="21:25" pos:end="21:27">env</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:38">htab_mask</name></name><operator pos:start="21:39" pos:end="21:39">)</operator> <operator pos:start="21:41" pos:end="21:41">*</operator> <name pos:start="21:43" pos:end="21:57">HPTES_PER_GROUP</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:52"><expr pos:start="23:5" pos:end="23:51"><name pos:start="23:5" pos:end="23:9">token</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:51"><name pos:start="23:13" pos:end="23:35">ppc_hash64_start_access</name><argument_list pos:start="23:36" pos:end="23:51">(<argument pos:start="23:37" pos:end="23:39"><expr pos:start="23:37" pos:end="23:39"><name pos:start="23:37" pos:end="23:39">cpu</name></expr></argument>, <argument pos:start="23:42" pos:end="23:50"><expr pos:start="23:42" pos:end="23:50"><name pos:start="23:42" pos:end="23:50">pte_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:15">(<expr pos:start="25:9" pos:end="25:14"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:14">token</name></expr>)</condition> <block pos:start="25:17" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="31:5" pos:end="69:5">for <control pos:start="31:9" pos:end="31:41">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:36"><expr pos:start="31:17" pos:end="31:35"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:35">HPTES_PER_GROUP</name></expr>;</condition> <incr pos:start="31:38" pos:end="31:40"><expr pos:start="31:38" pos:end="31:40"><name pos:start="31:38" pos:end="31:38">i</name><operator pos:start="31:39" pos:end="31:40">++</operator></expr></incr>)</control> <block pos:start="31:43" pos:end="69:5">{<block_content pos:start="33:9" pos:end="67:9">

        <expr_stmt pos:start="33:9" pos:end="33:52"><expr pos:start="33:9" pos:end="33:51"><name pos:start="33:9" pos:end="33:12">pte0</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:51"><name pos:start="33:16" pos:end="33:36">ppc_hash64_load_hpte0</name><argument_list pos:start="33:37" pos:end="33:51">(<argument pos:start="33:38" pos:end="33:40"><expr pos:start="33:38" pos:end="33:40"><name pos:start="33:38" pos:end="33:40">cpu</name></expr></argument>, <argument pos:start="33:43" pos:end="33:47"><expr pos:start="33:43" pos:end="33:47"><name pos:start="33:43" pos:end="33:47">token</name></expr></argument>, <argument pos:start="33:50" pos:end="33:50"><expr pos:start="33:50" pos:end="33:50"><name pos:start="33:50" pos:end="33:50">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:52"><expr pos:start="35:9" pos:end="35:51"><name pos:start="35:9" pos:end="35:12">pte1</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:51"><name pos:start="35:16" pos:end="35:36">ppc_hash64_load_hpte1</name><argument_list pos:start="35:37" pos:end="35:51">(<argument pos:start="35:38" pos:end="35:40"><expr pos:start="35:38" pos:end="35:40"><name pos:start="35:38" pos:end="35:40">cpu</name></expr></argument>, <argument pos:start="35:43" pos:end="35:47"><expr pos:start="35:43" pos:end="35:47"><name pos:start="35:43" pos:end="35:47">token</name></expr></argument>, <argument pos:start="35:50" pos:end="35:50"><expr pos:start="35:50" pos:end="35:50"><name pos:start="35:50" pos:end="35:50">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="39:9" pos:end="67:9"><if pos:start="39:9" pos:end="67:9">if <condition pos:start="39:12" pos:end="43:44">(<expr pos:start="39:13" pos:end="43:43"><operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:17">pte0</name> <operator pos:start="39:19" pos:end="39:19">&amp;</operator> <name pos:start="39:21" pos:end="39:34">HPTE64_V_VALID</name><operator pos:start="39:35" pos:end="39:35">)</operator>

            <operator pos:start="41:13" pos:end="41:14">&amp;&amp;</operator> <operator pos:start="41:16" pos:end="41:16">(</operator><name pos:start="41:17" pos:end="41:25">secondary</name> <operator pos:start="41:27" pos:end="41:28">==</operator> <operator pos:start="41:30" pos:end="41:30">!</operator><operator pos:start="41:31" pos:end="41:31">!</operator><operator pos:start="41:32" pos:end="41:32">(</operator><name pos:start="41:33" pos:end="41:36">pte0</name> <operator pos:start="41:38" pos:end="41:38">&amp;</operator> <name pos:start="41:40" pos:end="41:57">HPTE64_V_SECONDARY</name><operator pos:start="41:58" pos:end="41:58">)</operator><operator pos:start="41:59" pos:end="41:59">)</operator>

            <operator pos:start="43:13" pos:end="43:14">&amp;&amp;</operator> <call pos:start="43:16" pos:end="43:43"><name pos:start="43:16" pos:end="43:31">HPTE64_V_COMPARE</name><argument_list pos:start="43:32" pos:end="43:43">(<argument pos:start="43:33" pos:end="43:36"><expr pos:start="43:33" pos:end="43:36"><name pos:start="43:33" pos:end="43:36">pte0</name></expr></argument>, <argument pos:start="43:39" pos:end="43:42"><expr pos:start="43:39" pos:end="43:42"><name pos:start="43:39" pos:end="43:42">ptem</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:46" pos:end="67:9">{<block_content pos:start="45:13" pos:end="65:54">

            <decl_stmt pos:start="45:13" pos:end="45:75"><decl pos:start="45:13" pos:end="45:74"><type pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:20">uint32_t</name></type> <name pos:start="45:22" pos:end="45:27">pshift</name> <init pos:start="45:29" pos:end="45:74">= <expr pos:start="45:31" pos:end="45:74"><call pos:start="45:31" pos:end="45:74"><name pos:start="45:31" pos:end="45:56">ppc_hash64_pte_size_decode</name><argument_list pos:start="45:57" pos:end="45:74">(<argument pos:start="45:58" pos:end="45:61"><expr pos:start="45:58" pos:end="45:61"><name pos:start="45:58" pos:end="45:61">pte1</name></expr></argument>, <argument pos:start="45:64" pos:end="45:73"><expr pos:start="45:64" pos:end="45:73"><name pos:start="45:64" pos:end="45:73">slb_pshift</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="47:13" pos:end="51:13"><if pos:start="47:13" pos:end="51:13">if <condition pos:start="47:16" pos:end="47:28">(<expr pos:start="47:17" pos:end="47:27"><name pos:start="47:17" pos:end="47:22">pshift</name> <operator pos:start="47:24" pos:end="47:25">==</operator> <literal type="number" pos:start="47:27" pos:end="47:27">0</literal></expr>)</condition> <block pos:start="47:30" pos:end="51:13">{<block_content pos:start="49:17" pos:end="49:25">

                <continue pos:start="49:17" pos:end="49:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="53:13" pos:end="57:15">/* We don't do anything with pshift yet as qemu TLB only deals

             * with 4K pages anyway

             */</comment>

            <expr_stmt pos:start="59:13" pos:end="59:29"><expr pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:15">pte</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:21">pte0</name></name> <operator pos:start="59:23" pos:end="59:23">=</operator> <name pos:start="59:25" pos:end="59:28">pte0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:29"><expr pos:start="61:13" pos:end="61:28"><name pos:start="61:13" pos:end="61:21"><name pos:start="61:13" pos:end="61:15">pte</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:21">pte1</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <name pos:start="61:25" pos:end="61:28">pte1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:47"><expr pos:start="63:13" pos:end="63:46"><call pos:start="63:13" pos:end="63:46"><name pos:start="63:13" pos:end="63:34">ppc_hash64_stop_access</name><argument_list pos:start="63:35" pos:end="63:46">(<argument pos:start="63:36" pos:end="63:38"><expr pos:start="63:36" pos:end="63:38"><name pos:start="63:36" pos:end="63:38">cpu</name></expr></argument>, <argument pos:start="63:41" pos:end="63:45"><expr pos:start="63:41" pos:end="63:45"><name pos:start="63:41" pos:end="63:45">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:54">return <expr pos:start="65:20" pos:end="65:53"><operator pos:start="65:20" pos:end="65:20">(</operator><name pos:start="65:21" pos:end="65:29">pte_index</name> <operator pos:start="65:31" pos:end="65:31">+</operator> <name pos:start="65:33" pos:end="65:33">i</name><operator pos:start="65:34" pos:end="65:34">)</operator> <operator pos:start="65:36" pos:end="65:36">*</operator> <name pos:start="65:38" pos:end="65:53">HASH_PTE_SIZE_64</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="71:5" pos:end="71:39"><expr pos:start="71:5" pos:end="71:38"><call pos:start="71:5" pos:end="71:38"><name pos:start="71:5" pos:end="71:26">ppc_hash64_stop_access</name><argument_list pos:start="71:27" pos:end="71:38">(<argument pos:start="71:28" pos:end="71:30"><expr pos:start="71:28" pos:end="71:30"><name pos:start="71:28" pos:end="71:30">cpu</name></expr></argument>, <argument pos:start="71:33" pos:end="71:37"><expr pos:start="71:33" pos:end="71:37"><name pos:start="71:33" pos:end="71:37">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="73:5" pos:end="77:7">/*

     * We didn't find a valid entry.

     */</comment>

    <return pos:start="79:5" pos:end="79:14">return <expr pos:start="79:12" pos:end="79:13"><operator pos:start="79:12" pos:end="79:12">-</operator><literal type="number" pos:start="79:13" pos:end="79:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
