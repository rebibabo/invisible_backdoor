<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2780.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:13">av_reduce</name><parameter_list pos:start="1:14" pos:end="1:80">(<parameter pos:start="1:15" pos:end="1:26"><decl pos:start="1:15" pos:end="1:26"><type pos:start="1:15" pos:end="1:26"><name pos:start="1:15" pos:end="1:17">int</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:26">dst_nom</name></decl></parameter>, <parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:31">int</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:40">dst_den</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:49">int64_t</name></type> <name pos:start="1:51" pos:end="1:53">nom</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:66"><decl pos:start="1:56" pos:end="1:66"><type pos:start="1:56" pos:end="1:66"><name pos:start="1:56" pos:end="1:62">int64_t</name></type> <name pos:start="1:64" pos:end="1:66">den</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:79"><decl pos:start="1:69" pos:end="1:79"><type pos:start="1:69" pos:end="1:79"><name pos:start="1:69" pos:end="1:75">int64_t</name></type> <name pos:start="1:77" pos:end="1:79">max</name></decl></parameter>)</parameter_list><block pos:start="1:81" pos:end="79:1">{<block_content pos:start="3:5" pos:end="77:18">

    <decl_stmt pos:start="3:5" pos:end="3:34"><decl pos:start="3:5" pos:end="3:23"><type pos:start="3:5" pos:end="3:14"><name pos:start="3:5" pos:end="3:14">AVRational</name></type> <name pos:start="3:16" pos:end="3:17">a0</name><init pos:start="3:18" pos:end="3:23">=<expr pos:start="3:19" pos:end="3:23"><block pos:start="3:19" pos:end="3:23">{<expr pos:start="3:20" pos:end="3:20"><literal type="number" pos:start="3:20" pos:end="3:20">0</literal></expr>,<expr pos:start="3:22" pos:end="3:22"><literal type="number" pos:start="3:22" pos:end="3:22">1</literal></expr>}</block></expr></init></decl>, <decl pos:start="3:26" pos:end="3:33"><type ref="prev" pos:start="3:5" pos:end="3:14"/><name pos:start="3:26" pos:end="3:27">a1</name><init pos:start="3:28" pos:end="3:33">=<expr pos:start="3:29" pos:end="3:33"><block pos:start="3:29" pos:end="3:33">{<expr pos:start="3:30" pos:end="3:30"><literal type="number" pos:start="3:30" pos:end="3:30">1</literal></expr>,<expr pos:start="3:32" pos:end="3:32"><literal type="number" pos:start="3:32" pos:end="3:32">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">sign</name><init pos:start="5:13" pos:end="5:31">= <expr pos:start="5:15" pos:end="5:31"><operator pos:start="5:15" pos:end="5:15">(</operator><name pos:start="5:16" pos:end="5:18">nom</name><operator pos:start="5:19" pos:end="5:19">&lt;</operator><literal type="number" pos:start="5:20" pos:end="5:20">0</literal><operator pos:start="5:21" pos:end="5:21">)</operator> <operator pos:start="5:23" pos:end="5:23">^</operator> <operator pos:start="5:25" pos:end="5:25">(</operator><name pos:start="5:26" pos:end="5:28">den</name><operator pos:start="5:29" pos:end="5:29">&lt;</operator><literal type="number" pos:start="5:30" pos:end="5:30">0</literal><operator pos:start="5:31" pos:end="5:31">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">gcd</name><init pos:start="7:16" pos:end="7:47">= <expr pos:start="7:18" pos:end="7:47"><call pos:start="7:18" pos:end="7:47"><name pos:start="7:18" pos:end="7:23">ff_gcd</name><argument_list pos:start="7:24" pos:end="7:47">(<argument pos:start="7:25" pos:end="7:34"><expr pos:start="7:25" pos:end="7:34"><call pos:start="7:25" pos:end="7:34"><name pos:start="7:25" pos:end="7:29">FFABS</name><argument_list pos:start="7:30" pos:end="7:34">(<argument pos:start="7:31" pos:end="7:33"><expr pos:start="7:31" pos:end="7:33"><name pos:start="7:31" pos:end="7:33">nom</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="7:37" pos:end="7:46"><expr pos:start="7:37" pos:end="7:46"><call pos:start="7:37" pos:end="7:46"><name pos:start="7:37" pos:end="7:41">FFABS</name><argument_list pos:start="7:42" pos:end="7:46">(<argument pos:start="7:43" pos:end="7:45"><expr pos:start="7:43" pos:end="7:45"><name pos:start="7:43" pos:end="7:45">den</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:25"><expr pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:7">nom</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:20"><name pos:start="11:11" pos:end="11:15">FFABS</name><argument_list pos:start="11:16" pos:end="11:20">(<argument pos:start="11:17" pos:end="11:19"><expr pos:start="11:17" pos:end="11:19"><name pos:start="11:17" pos:end="11:19">nom</name></expr></argument>)</argument_list></call><operator pos:start="11:21" pos:end="11:21">/</operator><name pos:start="11:22" pos:end="11:24">gcd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:7">den</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:20"><name pos:start="13:11" pos:end="13:15">FFABS</name><argument_list pos:start="13:16" pos:end="13:20">(<argument pos:start="13:17" pos:end="13:19"><expr pos:start="13:17" pos:end="13:19"><name pos:start="13:17" pos:end="13:19">den</name></expr></argument>)</argument_list></call><operator pos:start="13:21" pos:end="13:21">/</operator><name pos:start="13:22" pos:end="13:24">gcd</name></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if<condition pos:start="15:7" pos:end="15:28">(<expr pos:start="15:8" pos:end="15:27"><name pos:start="15:8" pos:end="15:10">nom</name><operator pos:start="15:11" pos:end="15:12">&lt;=</operator><name pos:start="15:13" pos:end="15:15">max</name> <operator pos:start="15:17" pos:end="15:18">&amp;&amp;</operator> <name pos:start="15:20" pos:end="15:22">den</name><operator pos:start="15:23" pos:end="15:24">&lt;=</operator><name pos:start="15:25" pos:end="15:27">max</name></expr>)</condition><block pos:start="15:29" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:14">

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:10">a1</name><operator pos:start="17:11" pos:end="17:11">=</operator> <operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:23">AVRational</name><operator pos:start="17:24" pos:end="17:24">)</operator><block pos:start="17:25" pos:end="17:34">{<expr pos:start="17:26" pos:end="17:28"><name pos:start="17:26" pos:end="17:28">nom</name></expr>, <expr pos:start="17:31" pos:end="17:33"><name pos:start="17:31" pos:end="17:33">den</name></expr>}</block></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:14"><expr pos:start="19:9" pos:end="19:13"><name pos:start="19:9" pos:end="19:11">den</name><operator pos:start="19:12" pos:end="19:12">=</operator><literal type="number" pos:start="19:13" pos:end="19:13">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <while pos:start="25:5" pos:end="65:5">while<condition pos:start="25:10" pos:end="25:14">(<expr pos:start="25:11" pos:end="25:13"><name pos:start="25:11" pos:end="25:13">den</name></expr>)</condition><block pos:start="25:15" pos:end="65:5">{<block_content pos:start="27:9" pos:end="63:22">

        <decl_stmt pos:start="27:9" pos:end="27:36"><decl pos:start="27:9" pos:end="27:35"><type pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:15">int64_t</name></type> <name pos:start="27:17" pos:end="27:17">x</name>       <init pos:start="27:25" pos:end="27:35">= <expr pos:start="27:27" pos:end="27:35"><name pos:start="27:27" pos:end="27:29">nom</name> <operator pos:start="27:31" pos:end="27:31">/</operator> <name pos:start="27:33" pos:end="27:35">den</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:38"><decl pos:start="29:9" pos:end="29:37"><type pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:15">int64_t</name></type> <name pos:start="29:17" pos:end="29:24">next_den</name><init pos:start="29:25" pos:end="29:37">= <expr pos:start="29:27" pos:end="29:37"><name pos:start="29:27" pos:end="29:29">nom</name> <operator pos:start="29:31" pos:end="29:31">-</operator> <name pos:start="29:33" pos:end="29:35">den</name><operator pos:start="29:36" pos:end="29:36">*</operator><name pos:start="29:37" pos:end="29:37">x</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:39"><decl pos:start="31:9" pos:end="31:38"><type pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:15">int64_t</name></type> <name pos:start="31:17" pos:end="31:19">a2n</name><init pos:start="31:20" pos:end="31:38">= <expr pos:start="31:22" pos:end="31:38"><name pos:start="31:22" pos:end="31:22">x</name><operator pos:start="31:23" pos:end="31:23">*</operator><name pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:25">a1</name><operator pos:start="31:26" pos:end="31:26">.</operator><name pos:start="31:27" pos:end="31:29">num</name></name> <operator pos:start="31:31" pos:end="31:31">+</operator> <name pos:start="31:33" pos:end="31:38"><name pos:start="31:33" pos:end="31:34">a0</name><operator pos:start="31:35" pos:end="31:35">.</operator><name pos:start="31:36" pos:end="31:38">num</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:39"><decl pos:start="33:9" pos:end="33:38"><type pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:15">int64_t</name></type> <name pos:start="33:17" pos:end="33:19">a2d</name><init pos:start="33:20" pos:end="33:38">= <expr pos:start="33:22" pos:end="33:38"><name pos:start="33:22" pos:end="33:22">x</name><operator pos:start="33:23" pos:end="33:23">*</operator><name pos:start="33:24" pos:end="33:29"><name pos:start="33:24" pos:end="33:25">a1</name><operator pos:start="33:26" pos:end="33:26">.</operator><name pos:start="33:27" pos:end="33:29">den</name></name> <operator pos:start="33:31" pos:end="33:31">+</operator> <name pos:start="33:33" pos:end="33:38"><name pos:start="33:33" pos:end="33:34">a0</name><operator pos:start="33:35" pos:end="33:35">.</operator><name pos:start="33:36" pos:end="33:38">den</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="37:9" pos:end="53:9"><if pos:start="37:9" pos:end="53:9">if<condition pos:start="37:11" pos:end="37:34">(<expr pos:start="37:12" pos:end="37:33"><name pos:start="37:12" pos:end="37:14">a2n</name> <operator pos:start="37:16" pos:end="37:16">&gt;</operator> <name pos:start="37:18" pos:end="37:20">max</name> <operator pos:start="37:22" pos:end="37:23">||</operator> <name pos:start="37:25" pos:end="37:27">a2d</name> <operator pos:start="37:29" pos:end="37:29">&gt;</operator> <name pos:start="37:31" pos:end="37:33">max</name></expr>)</condition><block pos:start="37:35" pos:end="53:9">{<block_content pos:start="39:13" pos:end="51:18">

            <if_stmt pos:start="39:13" pos:end="39:50"><if pos:start="39:13" pos:end="39:50">if<condition pos:start="39:15" pos:end="39:22">(<expr pos:start="39:16" pos:end="39:21"><name pos:start="39:16" pos:end="39:21"><name pos:start="39:16" pos:end="39:17">a1</name><operator pos:start="39:18" pos:end="39:18">.</operator><name pos:start="39:19" pos:end="39:21">num</name></name></expr>)</condition><block type="pseudo" pos:start="39:24" pos:end="39:50"><block_content pos:start="39:24" pos:end="39:50"> <expr_stmt pos:start="39:24" pos:end="39:50"><expr pos:start="39:24" pos:end="39:49"><name pos:start="39:24" pos:end="39:24">x</name><operator pos:start="39:25" pos:end="39:25">=</operator> <operator pos:start="39:27" pos:end="39:27">(</operator><name pos:start="39:28" pos:end="39:30">max</name> <operator pos:start="39:32" pos:end="39:32">-</operator> <name pos:start="39:34" pos:end="39:39"><name pos:start="39:34" pos:end="39:35">a0</name><operator pos:start="39:36" pos:end="39:36">.</operator><name pos:start="39:37" pos:end="39:39">num</name></name><operator pos:start="39:40" pos:end="39:40">)</operator> <operator pos:start="39:42" pos:end="39:42">/</operator> <name pos:start="39:44" pos:end="39:49"><name pos:start="39:44" pos:end="39:45">a1</name><operator pos:start="39:46" pos:end="39:46">.</operator><name pos:start="39:47" pos:end="39:49">num</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="41:13" pos:end="41:60"><if pos:start="41:13" pos:end="41:60">if<condition pos:start="41:15" pos:end="41:22">(<expr pos:start="41:16" pos:end="41:21"><name pos:start="41:16" pos:end="41:21"><name pos:start="41:16" pos:end="41:17">a1</name><operator pos:start="41:18" pos:end="41:18">.</operator><name pos:start="41:19" pos:end="41:21">den</name></name></expr>)</condition><block type="pseudo" pos:start="41:24" pos:end="41:60"><block_content pos:start="41:24" pos:end="41:60"> <expr_stmt pos:start="41:24" pos:end="41:60"><expr pos:start="41:24" pos:end="41:59"><name pos:start="41:24" pos:end="41:24">x</name><operator pos:start="41:25" pos:end="41:25">=</operator> <call pos:start="41:27" pos:end="41:59"><name pos:start="41:27" pos:end="41:31">FFMIN</name><argument_list pos:start="41:32" pos:end="41:59">(<argument pos:start="41:33" pos:end="41:33"><expr pos:start="41:33" pos:end="41:33"><name pos:start="41:33" pos:end="41:33">x</name></expr></argument>, <argument pos:start="41:36" pos:end="41:58"><expr pos:start="41:36" pos:end="41:58"><operator pos:start="41:36" pos:end="41:36">(</operator><name pos:start="41:37" pos:end="41:39">max</name> <operator pos:start="41:41" pos:end="41:41">-</operator> <name pos:start="41:43" pos:end="41:48"><name pos:start="41:43" pos:end="41:44">a0</name><operator pos:start="41:45" pos:end="41:45">.</operator><name pos:start="41:46" pos:end="41:48">den</name></name><operator pos:start="41:49" pos:end="41:49">)</operator> <operator pos:start="41:51" pos:end="41:51">/</operator> <name pos:start="41:53" pos:end="41:58"><name pos:start="41:53" pos:end="41:54">a1</name><operator pos:start="41:55" pos:end="41:55">.</operator><name pos:start="41:56" pos:end="41:58">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="line" pos:start="45:13" pos:end="45:58">// Won't overflow, sum == original denominator</comment>

            <if_stmt pos:start="47:13" pos:end="49:72"><if pos:start="47:13" pos:end="49:72">if <condition pos:start="47:16" pos:end="47:55">(<expr pos:start="47:17" pos:end="47:54"><name pos:start="47:17" pos:end="47:19">den</name><operator pos:start="47:20" pos:end="47:20">*</operator><operator pos:start="47:21" pos:end="47:21">(</operator><literal type="number" pos:start="47:22" pos:end="47:22">2</literal><operator pos:start="47:23" pos:end="47:23">*</operator><name pos:start="47:24" pos:end="47:24">x</name><operator pos:start="47:25" pos:end="47:25">*</operator><name pos:start="47:26" pos:end="47:31"><name pos:start="47:26" pos:end="47:27">a1</name><operator pos:start="47:28" pos:end="47:28">.</operator><name pos:start="47:29" pos:end="47:31">den</name></name> <operator pos:start="47:33" pos:end="47:33">+</operator> <name pos:start="47:35" pos:end="47:40"><name pos:start="47:35" pos:end="47:36">a0</name><operator pos:start="47:37" pos:end="47:37">.</operator><name pos:start="47:38" pos:end="47:40">den</name></name><operator pos:start="47:41" pos:end="47:41">)</operator> <operator pos:start="47:43" pos:end="47:43">&gt;</operator> <name pos:start="47:45" pos:end="47:47">nom</name><operator pos:start="47:48" pos:end="47:48">*</operator><name pos:start="47:49" pos:end="47:54"><name pos:start="47:49" pos:end="47:50">a1</name><operator pos:start="47:51" pos:end="47:51">.</operator><name pos:start="47:52" pos:end="47:54">den</name></name></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:72"><block_content pos:start="49:17" pos:end="49:72">

                <expr_stmt pos:start="49:17" pos:end="49:72"><expr pos:start="49:17" pos:end="49:71"><name pos:start="49:17" pos:end="49:18">a1</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <operator pos:start="49:22" pos:end="49:22">(</operator><name pos:start="49:23" pos:end="49:32">AVRational</name><operator pos:start="49:33" pos:end="49:33">)</operator><block pos:start="49:34" pos:end="49:71">{<expr pos:start="49:35" pos:end="49:51"><name pos:start="49:35" pos:end="49:35">x</name><operator pos:start="49:36" pos:end="49:36">*</operator><name pos:start="49:37" pos:end="49:42"><name pos:start="49:37" pos:end="49:38">a1</name><operator pos:start="49:39" pos:end="49:39">.</operator><name pos:start="49:40" pos:end="49:42">num</name></name> <operator pos:start="49:44" pos:end="49:44">+</operator> <name pos:start="49:46" pos:end="49:51"><name pos:start="49:46" pos:end="49:47">a0</name><operator pos:start="49:48" pos:end="49:48">.</operator><name pos:start="49:49" pos:end="49:51">num</name></name></expr>, <expr pos:start="49:54" pos:end="49:70"><name pos:start="49:54" pos:end="49:54">x</name><operator pos:start="49:55" pos:end="49:55">*</operator><name pos:start="49:56" pos:end="49:61"><name pos:start="49:56" pos:end="49:57">a1</name><operator pos:start="49:58" pos:end="49:58">.</operator><name pos:start="49:59" pos:end="49:61">den</name></name> <operator pos:start="49:63" pos:end="49:63">+</operator> <name pos:start="49:65" pos:end="49:70"><name pos:start="49:65" pos:end="49:66">a0</name><operator pos:start="49:67" pos:end="49:67">.</operator><name pos:start="49:68" pos:end="49:70">den</name></name></expr>}</block></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:15"><expr pos:start="57:9" pos:end="57:14"><name pos:start="57:9" pos:end="57:10">a0</name><operator pos:start="57:11" pos:end="57:11">=</operator> <name pos:start="57:13" pos:end="57:14">a1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:35"><expr pos:start="59:9" pos:end="59:34"><name pos:start="59:9" pos:end="59:10">a1</name><operator pos:start="59:11" pos:end="59:11">=</operator> <operator pos:start="59:13" pos:end="59:13">(</operator><name pos:start="59:14" pos:end="59:23">AVRational</name><operator pos:start="59:24" pos:end="59:24">)</operator><block pos:start="59:25" pos:end="59:34">{<expr pos:start="59:26" pos:end="59:28"><name pos:start="59:26" pos:end="59:28">a2n</name></expr>, <expr pos:start="59:31" pos:end="59:33"><name pos:start="59:31" pos:end="59:33">a2d</name></expr>}</block></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:17"><expr pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:11">nom</name><operator pos:start="61:12" pos:end="61:12">=</operator> <name pos:start="61:14" pos:end="61:16">den</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:22"><expr pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:11">den</name><operator pos:start="63:12" pos:end="63:12">=</operator> <name pos:start="63:14" pos:end="63:21">next_den</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="67:5" pos:end="67:40"><expr pos:start="67:5" pos:end="67:39"><call pos:start="67:5" pos:end="67:39"><name pos:start="67:5" pos:end="67:10">assert</name><argument_list pos:start="67:11" pos:end="67:39">(<argument pos:start="67:12" pos:end="67:38"><expr pos:start="67:12" pos:end="67:38"><call pos:start="67:12" pos:end="67:33"><name pos:start="67:12" pos:end="67:17">ff_gcd</name><argument_list pos:start="67:18" pos:end="67:33">(<argument pos:start="67:19" pos:end="67:24"><expr pos:start="67:19" pos:end="67:24"><name pos:start="67:19" pos:end="67:24"><name pos:start="67:19" pos:end="67:20">a1</name><operator pos:start="67:21" pos:end="67:21">.</operator><name pos:start="67:22" pos:end="67:24">num</name></name></expr></argument>, <argument pos:start="67:27" pos:end="67:32"><expr pos:start="67:27" pos:end="67:32"><name pos:start="67:27" pos:end="67:32"><name pos:start="67:27" pos:end="67:28">a1</name><operator pos:start="67:29" pos:end="67:29">.</operator><name pos:start="67:30" pos:end="67:32">den</name></name></expr></argument>)</argument_list></call> <operator pos:start="67:35" pos:end="67:36">==</operator> <literal type="number" pos:start="67:38" pos:end="67:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:39"><expr pos:start="71:5" pos:end="71:38"><operator pos:start="71:5" pos:end="71:5">*</operator><name pos:start="71:6" pos:end="71:12">dst_nom</name> <operator pos:start="71:14" pos:end="71:14">=</operator> <ternary pos:start="71:16" pos:end="71:38"><condition pos:start="71:16" pos:end="71:21"><expr pos:start="71:16" pos:end="71:19"><name pos:start="71:16" pos:end="71:19">sign</name></expr> ?</condition><then pos:start="71:23" pos:end="71:29"> <expr pos:start="71:23" pos:end="71:29"><operator pos:start="71:23" pos:end="71:23">-</operator><name pos:start="71:24" pos:end="71:29"><name pos:start="71:24" pos:end="71:25">a1</name><operator pos:start="71:26" pos:end="71:26">.</operator><name pos:start="71:27" pos:end="71:29">num</name></name></expr> </then><else pos:start="71:31" pos:end="71:38">: <expr pos:start="71:33" pos:end="71:38"><name pos:start="71:33" pos:end="71:38"><name pos:start="71:33" pos:end="71:34">a1</name><operator pos:start="71:35" pos:end="71:35">.</operator><name pos:start="71:36" pos:end="71:38">num</name></name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:22"><expr pos:start="73:5" pos:end="73:21"><operator pos:start="73:5" pos:end="73:5">*</operator><name pos:start="73:6" pos:end="73:12">dst_den</name> <operator pos:start="73:14" pos:end="73:14">=</operator> <name pos:start="73:16" pos:end="73:21"><name pos:start="73:16" pos:end="73:17">a1</name><operator pos:start="73:18" pos:end="73:18">.</operator><name pos:start="73:19" pos:end="73:21">den</name></name></expr>;</expr_stmt>



    <return pos:start="77:5" pos:end="77:18">return <expr pos:start="77:12" pos:end="77:17"><name pos:start="77:12" pos:end="77:14">den</name><operator pos:start="77:15" pos:end="77:16">==</operator><literal type="number" pos:start="77:17" pos:end="77:17">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
