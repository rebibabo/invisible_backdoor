<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16345.c" pos:tabs="8"><function pos:start="1:1" pos:end="24:18"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:14">qtest_qmp</name><parameter_list pos:start="1:15" pos:end="1:51">(<parameter pos:start="1:16" pos:end="1:28"><decl pos:start="1:16" pos:end="1:28"><type pos:start="1:16" pos:end="1:28"><name pos:start="1:16" pos:end="1:25">QTestState</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:28">s</name></decl></parameter>, <parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><specifier pos:start="1:31" pos:end="1:35">const</specifier> <name pos:start="1:37" pos:end="1:40">char</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">fmt</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:50"><decl pos:start="1:48" pos:end="1:50"><type pos:start="1:48" pos:end="1:50"><modifier pos:start="1:48" pos:end="1:50">...</modifier></type></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="24:18">{<block_content pos:start="3:5" pos:end="24:18">
    <decl_stmt pos:start="3:5" pos:end="3:15"><decl pos:start="3:5" pos:end="3:14"><type pos:start="3:5" pos:end="3:11"><name pos:start="3:5" pos:end="3:11">va_list</name></type> <name pos:start="3:13" pos:end="3:14">ap</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:27"><decl pos:start="4:5" pos:end="4:26"><type pos:start="4:5" pos:end="4:8"><name pos:start="4:5" pos:end="4:8">bool</name></type> <name pos:start="4:10" pos:end="4:18">has_reply</name> <init pos:start="4:20" pos:end="4:26">= <expr pos:start="4:22" pos:end="4:26"><name pos:start="4:22" pos:end="4:26">false</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:15">nesting</name> <init pos:start="5:17" pos:end="5:19">= <expr pos:start="5:19" pos:end="5:19"><literal type="number" pos:start="5:19" pos:end="5:19">0</literal></expr></init></decl>;</decl_stmt>
    <comment type="block" pos:start="6:5" pos:end="6:26">/* Send QMP request */</comment>
    <expr_stmt pos:start="7:5" pos:end="7:22"><expr pos:start="7:5" pos:end="7:21"><call pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:12">va_start</name><argument_list pos:start="7:13" pos:end="7:21">(<argument pos:start="7:14" pos:end="7:15"><expr pos:start="7:14" pos:end="7:15"><name pos:start="7:14" pos:end="7:15">ap</name></expr></argument>, <argument pos:start="7:18" pos:end="7:20"><expr pos:start="7:18" pos:end="7:20"><name pos:start="7:18" pos:end="7:20">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:37"><expr pos:start="8:5" pos:end="8:36"><call pos:start="8:5" pos:end="8:36"><name pos:start="8:5" pos:end="8:16">socket_sendf</name><argument_list pos:start="8:17" pos:end="8:36">(<argument pos:start="8:18" pos:end="8:26"><expr pos:start="8:18" pos:end="8:26"><name pos:start="8:18" pos:end="8:26"><name pos:start="8:18" pos:end="8:18">s</name><operator pos:start="8:19" pos:end="8:20">-&gt;</operator><name pos:start="8:21" pos:end="8:26">qmp_fd</name></name></expr></argument>, <argument pos:start="8:29" pos:end="8:31"><expr pos:start="8:29" pos:end="8:31"><name pos:start="8:29" pos:end="8:31">fmt</name></expr></argument>, <argument pos:start="8:34" pos:end="8:35"><expr pos:start="8:34" pos:end="8:35"><name pos:start="8:34" pos:end="8:35">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:15"><expr pos:start="9:5" pos:end="9:14"><call pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:10">va_end</name><argument_list pos:start="9:11" pos:end="9:14">(<argument pos:start="9:12" pos:end="9:13"><expr pos:start="9:12" pos:end="9:13"><name pos:start="9:12" pos:end="9:13">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="10:5" pos:end="10:23">/* Receive reply */</comment>
    <while pos:start="11:5" pos:end="24:18">while <condition pos:start="11:11" pos:end="11:37">(<expr pos:start="11:12" pos:end="11:36"><operator pos:start="11:12" pos:end="11:12">!</operator><name pos:start="11:13" pos:end="11:21">has_reply</name> <operator pos:start="11:23" pos:end="11:24">||</operator> <name pos:start="11:26" pos:end="11:32">nesting</name> <operator pos:start="11:34" pos:end="11:34">&gt;</operator> <literal type="number" pos:start="11:36" pos:end="11:36">0</literal></expr>)</condition> <block pos:start="11:39" pos:end="24:18">{<block_content pos:start="12:9" pos:end="24:18">
        <decl_stmt pos:start="12:9" pos:end="12:20"><decl pos:start="12:9" pos:end="12:19"><type pos:start="12:9" pos:end="12:15"><name pos:start="12:9" pos:end="12:15">ssize_t</name></type> <name pos:start="12:17" pos:end="12:19">len</name></decl>;</decl_stmt>
        <decl_stmt pos:start="13:9" pos:end="13:15"><decl pos:start="13:9" pos:end="13:14"><type pos:start="13:9" pos:end="13:12"><name pos:start="13:9" pos:end="13:12">char</name></type> <name pos:start="13:14" pos:end="13:14">c</name></decl>;</decl_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:37"><expr pos:start="14:9" pos:end="14:36"><name pos:start="14:9" pos:end="14:11">len</name> <operator pos:start="14:13" pos:end="14:13">=</operator> <call pos:start="14:15" pos:end="14:36"><name pos:start="14:15" pos:end="14:18">read</name><argument_list pos:start="14:19" pos:end="14:36">(<argument pos:start="14:20" pos:end="14:28"><expr pos:start="14:20" pos:end="14:28"><name pos:start="14:20" pos:end="14:28"><name pos:start="14:20" pos:end="14:20">s</name><operator pos:start="14:21" pos:end="14:22">-&gt;</operator><name pos:start="14:23" pos:end="14:28">qmp_fd</name></name></expr></argument>, <argument pos:start="14:31" pos:end="14:32"><expr pos:start="14:31" pos:end="14:32"><operator pos:start="14:31" pos:end="14:31">&amp;</operator><name pos:start="14:32" pos:end="14:32">c</name></expr></argument>, <argument pos:start="14:35" pos:end="14:35"><expr pos:start="14:35" pos:end="14:35"><literal type="number" pos:start="14:35" pos:end="14:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="15:9" pos:end="24:18"><if pos:start="15:9" pos:end="24:18">if <condition pos:start="15:12" pos:end="15:40">(<expr pos:start="15:13" pos:end="15:39"><name pos:start="15:13" pos:end="15:15">len</name> <operator pos:start="15:17" pos:end="15:18">==</operator> <operator pos:start="15:20" pos:end="15:20">-</operator><literal type="number" pos:start="15:21" pos:end="15:21">1</literal> <operator pos:start="15:23" pos:end="15:24">&amp;&amp;</operator> <name pos:start="15:26" pos:end="15:30">errno</name> <operator pos:start="15:32" pos:end="15:33">==</operator> <name pos:start="15:35" pos:end="15:39">EINTR</name></expr>)</condition> <block pos:start="15:42" pos:end="24:18">{<block_content pos:start="16:13" pos:end="24:18">
            <continue pos:start="16:13" pos:end="16:21">continue;</continue>
        <switch pos:start="17:9" pos:end="24:18">switch <condition pos:start="17:16" pos:end="17:18">(<expr pos:start="17:17" pos:end="17:17"><name pos:start="17:17" pos:end="17:17">c</name></expr>)</condition> <block pos:start="17:20" pos:end="24:18">{<block_content pos:start="18:9" pos:end="24:18">
        <case pos:start="18:9" pos:end="18:17">case <expr pos:start="18:14" pos:end="18:16"><literal type="char" pos:start="18:14" pos:end="18:16">'{'</literal></expr>:</case>
            <expr_stmt pos:start="19:13" pos:end="19:22"><expr pos:start="19:13" pos:end="19:21"><name pos:start="19:13" pos:end="19:19">nesting</name><operator pos:start="19:20" pos:end="19:21">++</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:29"><expr pos:start="20:13" pos:end="20:28"><name pos:start="20:13" pos:end="20:21">has_reply</name> <operator pos:start="20:23" pos:end="20:23">=</operator> <name pos:start="20:25" pos:end="20:28">true</name></expr>;</expr_stmt>
            <break pos:start="21:13" pos:end="21:18">break;</break>
        <case pos:start="22:9" pos:end="22:17">case <expr pos:start="22:14" pos:end="22:16"><literal type="char" pos:start="22:14" pos:end="22:16">'}'</literal></expr>:</case>
            <expr_stmt pos:start="23:13" pos:end="23:22"><expr pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:19">nesting</name><operator pos:start="23:20" pos:end="23:21">--</operator></expr>;</expr_stmt>
            <break pos:start="24:13" pos:end="24:18">break;</break></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></while></block_content></block></function></unit>
