<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19529.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:16">net_cleanup</name><parameter_list pos:start="1:17" pos:end="1:22">(<parameter pos:start="1:18" pos:end="1:21"><decl pos:start="1:18" pos:end="1:21"><type pos:start="1:18" pos:end="1:21"><name pos:start="1:18" pos:end="1:21">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="50:0">

<cpp:if pos:start="5:1" pos:end="5:20">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:20"><operator pos:start="5:5" pos:end="5:5">!</operator><call pos:start="5:6" pos:end="5:20"><name pos:start="5:6" pos:end="5:12">defined</name><argument_list pos:start="5:13" pos:end="5:20">(<argument pos:start="5:14" pos:end="5:19"><expr pos:start="5:14" pos:end="5:19"><name pos:start="5:14" pos:end="5:19">_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">VLANState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:19">vlan</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:31">/* close network clients */</comment>

    <for pos:start="13:5" pos:end="50:0">for<control pos:start="13:8" pos:end="13:59">(<init pos:start="13:9" pos:end="13:26"><expr pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:12">vlan</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:25">first_vlan</name></expr>;</init> <condition pos:start="13:28" pos:end="13:40"><expr pos:start="13:28" pos:end="13:39"><name pos:start="13:28" pos:end="13:31">vlan</name> <operator pos:start="13:33" pos:end="13:34">!=</operator> <name pos:start="13:36" pos:end="13:39">NULL</name></expr>;</condition> <incr pos:start="13:42" pos:end="13:58"><expr pos:start="13:42" pos:end="13:58"><name pos:start="13:42" pos:end="13:45">vlan</name> <operator pos:start="13:47" pos:end="13:47">=</operator> <name pos:start="13:49" pos:end="13:58"><name pos:start="13:49" pos:end="13:52">vlan</name><operator pos:start="13:53" pos:end="13:54">-&gt;</operator><name pos:start="13:55" pos:end="13:58">next</name></name></expr></incr>)</control> <block pos:start="13:61" pos:end="50:0">{<block_content pos:start="15:9" pos:end="45:9">

        <decl_stmt pos:start="15:9" pos:end="15:28"><decl pos:start="15:9" pos:end="15:27"><type pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:23">VLANClientState</name> <modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:27">vc</name></decl>;</decl_stmt>



        <for pos:start="19:9" pos:end="45:9">for<control pos:start="19:12" pos:end="19:63">(<init pos:start="19:13" pos:end="19:36"><expr pos:start="19:13" pos:end="19:35"><name pos:start="19:13" pos:end="19:14">vc</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <name pos:start="19:18" pos:end="19:35"><name pos:start="19:18" pos:end="19:21">vlan</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:35">first_client</name></name></expr>;</init> <condition pos:start="19:38" pos:end="19:48"><expr pos:start="19:38" pos:end="19:47"><name pos:start="19:38" pos:end="19:39">vc</name> <operator pos:start="19:41" pos:end="19:42">!=</operator> <name pos:start="19:44" pos:end="19:47">NULL</name></expr>;</condition> <incr pos:start="19:50" pos:end="19:62"><expr pos:start="19:50" pos:end="19:62"><name pos:start="19:50" pos:end="19:51">vc</name> <operator pos:start="19:53" pos:end="19:53">=</operator> <name pos:start="19:55" pos:end="19:62"><name pos:start="19:55" pos:end="19:56">vc</name><operator pos:start="19:57" pos:end="19:58">-&gt;</operator><name pos:start="19:59" pos:end="19:62">next</name></name></expr></incr>)</control> <block pos:start="19:65" pos:end="45:9">{<block_content pos:start="21:13" pos:end="44:0">

            <if_stmt pos:start="21:13" pos:end="34:0"><if pos:start="21:13" pos:end="34:0">if <condition pos:start="21:16" pos:end="21:43">(<expr pos:start="21:17" pos:end="21:42"><name pos:start="21:17" pos:end="21:27"><name pos:start="21:17" pos:end="21:18">vc</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:27">fd_read</name></name> <operator pos:start="21:29" pos:end="21:30">==</operator> <name pos:start="21:32" pos:end="21:42">tap_receive</name></expr>)</condition> <block pos:start="21:45" pos:end="34:0">{<block_content pos:start="23:17" pos:end="29:77">

                <decl_stmt pos:start="23:17" pos:end="23:41"><decl pos:start="23:17" pos:end="23:40"><type pos:start="23:17" pos:end="23:26"><name pos:start="23:17" pos:end="23:24">TAPState</name> <modifier pos:start="23:26" pos:end="23:26">*</modifier></type><name pos:start="23:27" pos:end="23:27">s</name> <init pos:start="23:29" pos:end="23:40">= <expr pos:start="23:31" pos:end="23:40"><name pos:start="23:31" pos:end="23:40"><name pos:start="23:31" pos:end="23:32">vc</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:40">opaque</name></name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="27:17" pos:end="29:77"><if pos:start="27:17" pos:end="29:77">if <condition pos:start="27:20" pos:end="27:38">(<expr pos:start="27:21" pos:end="27:37"><name pos:start="27:21" pos:end="27:37"><name pos:start="27:21" pos:end="27:21">s</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:34">down_script</name><index pos:start="27:35" pos:end="27:37">[<expr pos:start="27:36" pos:end="27:36"><literal type="number" pos:start="27:36" pos:end="27:36">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="29:21" pos:end="29:77"><block_content pos:start="29:21" pos:end="29:77">

                    <expr_stmt pos:start="29:21" pos:end="29:77"><expr pos:start="29:21" pos:end="29:76"><call pos:start="29:21" pos:end="29:76"><name pos:start="29:21" pos:end="29:33">launch_script</name><argument_list pos:start="29:34" pos:end="29:76">(<argument pos:start="29:35" pos:end="29:48"><expr pos:start="29:35" pos:end="29:48"><name pos:start="29:35" pos:end="29:48"><name pos:start="29:35" pos:end="29:35">s</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:48">down_script</name></name></expr></argument>, <argument pos:start="29:51" pos:end="29:68"><expr pos:start="29:51" pos:end="29:68"><name pos:start="29:51" pos:end="29:68"><name pos:start="29:51" pos:end="29:51">s</name><operator pos:start="29:52" pos:end="29:53">-&gt;</operator><name pos:start="29:54" pos:end="29:68">down_script_arg</name></name></expr></argument>, <argument pos:start="29:71" pos:end="29:75"><expr pos:start="29:71" pos:end="29:75"><name pos:start="29:71" pos:end="29:75"><name pos:start="29:71" pos:end="29:71">s</name><operator pos:start="29:72" pos:end="29:73">-&gt;</operator><name pos:start="29:74" pos:end="29:75">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:if pos:start="33:1" pos:end="33:23">#<cpp:directive pos:start="33:2" pos:end="33:3">if</cpp:directive> <expr pos:start="33:5" pos:end="33:23"><call pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:11">defined</name><argument_list pos:start="33:12" pos:end="33:23">(<argument pos:start="33:13" pos:end="33:22"><expr pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:22">CONFIG_VDE</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="35:13" pos:end="44:0"><if pos:start="35:13" pos:end="44:0">if <condition pos:start="35:16" pos:end="35:45">(<expr pos:start="35:17" pos:end="35:44"><name pos:start="35:17" pos:end="35:27"><name pos:start="35:17" pos:end="35:18">vc</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:27">fd_read</name></name> <operator pos:start="35:29" pos:end="35:30">==</operator> <name pos:start="35:32" pos:end="35:44">vde_from_qemu</name></expr>)</condition> <block pos:start="35:47" pos:end="44:0">{<block_content pos:start="37:17" pos:end="39:34">

                <decl_stmt pos:start="37:17" pos:end="37:41"><decl pos:start="37:17" pos:end="37:40"><type pos:start="37:17" pos:end="37:26"><name pos:start="37:17" pos:end="37:24">VDEState</name> <modifier pos:start="37:26" pos:end="37:26">*</modifier></type><name pos:start="37:27" pos:end="37:27">s</name> <init pos:start="37:29" pos:end="37:40">= <expr pos:start="37:31" pos:end="37:40"><name pos:start="37:31" pos:end="37:40"><name pos:start="37:31" pos:end="37:32">vc</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:40">opaque</name></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:34"><expr pos:start="39:17" pos:end="39:33"><call pos:start="39:17" pos:end="39:33"><name pos:start="39:17" pos:end="39:25">vde_close</name><argument_list pos:start="39:26" pos:end="39:33">(<argument pos:start="39:27" pos:end="39:32"><expr pos:start="39:27" pos:end="39:32"><name pos:start="39:27" pos:end="39:32"><name pos:start="39:27" pos:end="39:27">s</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:32">vde</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></for>

    </block_content>}</block></for>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
