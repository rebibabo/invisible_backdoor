<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18410.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:37">rtl8139_TxStatus_read</name><parameter_list pos:start="1:38" pos:end="1:78">(<parameter pos:start="1:39" pos:end="1:53"><decl pos:start="1:39" pos:end="1:53"><type pos:start="1:39" pos:end="1:53"><name pos:start="1:39" pos:end="1:50">RTL8139State</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:62">uint8_t</name></type> <name pos:start="1:64" pos:end="1:67">addr</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:77"><decl pos:start="1:70" pos:end="1:77"><type pos:start="1:70" pos:end="1:77"><name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:77">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:15">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:16">reg</name> <init pos:start="5:18" pos:end="5:41">= <expr pos:start="5:20" pos:end="5:41"><operator pos:start="5:20" pos:end="5:20">(</operator><name pos:start="5:21" pos:end="5:24">addr</name> <operator pos:start="5:26" pos:end="5:26">-</operator> <name pos:start="5:28" pos:end="5:36">TxStatus0</name><operator pos:start="5:37" pos:end="5:37">)</operator> <operator pos:start="5:39" pos:end="5:39">/</operator> <literal type="number" pos:start="5:41" pos:end="5:41">4</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:19">offset</name> <init pos:start="7:21" pos:end="7:32">= <expr pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:26">addr</name> <operator pos:start="7:28" pos:end="7:28">&amp;</operator> <literal type="number" pos:start="7:30" pos:end="7:32">0x3</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">ret</name> <init pos:start="9:18" pos:end="9:20">= <expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:26">(<expr pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:12">addr</name> <operator pos:start="13:14" pos:end="13:14">&amp;</operator> <operator pos:start="13:16" pos:end="13:16">(</operator><name pos:start="13:17" pos:end="13:20">size</name> <operator pos:start="13:22" pos:end="13:22">-</operator> <literal type="number" pos:start="13:24" pos:end="13:24">1</literal><operator pos:start="13:25" pos:end="13:25">)</operator></expr>)</condition> <block pos:start="13:28" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:19">

        <expr_stmt pos:start="15:9" pos:end="17:22"><expr pos:start="15:9" pos:end="17:21"><call pos:start="15:9" pos:end="17:21"><name pos:start="15:9" pos:end="15:15">DPRINTF</name><argument_list pos:start="15:16" pos:end="17:21">(<argument pos:start="15:17" pos:end="15:73"><expr pos:start="15:17" pos:end="15:73"><literal type="string" pos:start="15:17" pos:end="15:73">"not implemented read for TxStatus addr=0x%x size=0x%x\n"</literal></expr></argument>, <argument pos:start="15:76" pos:end="15:79"><expr pos:start="15:76" pos:end="15:79"><name pos:start="15:76" pos:end="15:79">addr</name></expr></argument>,

                <argument pos:start="17:17" pos:end="17:20"><expr pos:start="17:17" pos:end="17:20"><name pos:start="17:17" pos:end="17:20">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:19">return <expr pos:start="19:16" pos:end="19:18"><name pos:start="19:16" pos:end="19:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="25:5" pos:end="47:5">switch <condition pos:start="25:12" pos:end="25:17">(<expr pos:start="25:13" pos:end="25:16"><name pos:start="25:13" pos:end="25:16">size</name></expr>)</condition> <block pos:start="25:19" pos:end="47:5">{<block_content pos:start="27:5" pos:end="45:14">

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">1</literal></expr>:</case> <comment type="block" pos:start="27:13" pos:end="27:30">/* fall through */</comment>

    <case pos:start="29:5" pos:end="29:11">case <expr pos:start="29:10" pos:end="29:10"><literal type="number" pos:start="29:10" pos:end="29:10">2</literal></expr>:</case> <comment type="block" pos:start="29:13" pos:end="29:30">/* fall through */</comment>

    <case pos:start="31:5" pos:end="31:11">case <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">4</literal></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:73"><expr pos:start="33:9" pos:end="33:72"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <operator pos:start="33:15" pos:end="33:15">(</operator><name pos:start="33:16" pos:end="33:31"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:26">TxStatus</name><index pos:start="33:27" pos:end="33:31">[<expr pos:start="33:28" pos:end="33:30"><name pos:start="33:28" pos:end="33:30">reg</name></expr>]</index></name> <operator pos:start="33:33" pos:end="33:34">&gt;&gt;</operator> <name pos:start="33:36" pos:end="33:41">offset</name> <operator pos:start="33:43" pos:end="33:43">*</operator> <literal type="number" pos:start="33:45" pos:end="33:45">8</literal><operator pos:start="33:46" pos:end="33:46">)</operator> <operator pos:start="33:48" pos:end="33:48">&amp;</operator> <operator pos:start="33:50" pos:end="33:50">(</operator><operator pos:start="33:51" pos:end="33:51">(</operator><literal type="number" pos:start="33:52" pos:end="33:52">1</literal> <operator pos:start="33:54" pos:end="33:55">&lt;&lt;</operator> <operator pos:start="33:57" pos:end="33:57">(</operator><name pos:start="33:58" pos:end="33:61">size</name> <operator pos:start="33:63" pos:end="33:63">*</operator> <literal type="number" pos:start="33:65" pos:end="33:65">8</literal><operator pos:start="33:66" pos:end="33:66">)</operator><operator pos:start="33:67" pos:end="33:67">)</operator> <operator pos:start="33:69" pos:end="33:69">-</operator> <literal type="number" pos:start="33:71" pos:end="33:71">1</literal><operator pos:start="33:72" pos:end="33:72">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="37:27"><expr pos:start="35:9" pos:end="37:26"><call pos:start="35:9" pos:end="37:26"><name pos:start="35:9" pos:end="35:15">DPRINTF</name><argument_list pos:start="35:16" pos:end="37:26">(<argument pos:start="35:17" pos:end="35:68"><expr pos:start="35:17" pos:end="35:68"><literal type="string" pos:start="35:17" pos:end="35:68">"TxStatus[%d] read addr=0x%x size=0x%x val=0x%08x\n"</literal></expr></argument>, <argument pos:start="35:71" pos:end="35:73"><expr pos:start="35:71" pos:end="35:73"><name pos:start="35:71" pos:end="35:73">reg</name></expr></argument>, <argument pos:start="35:76" pos:end="35:79"><expr pos:start="35:76" pos:end="35:79"><name pos:start="35:76" pos:end="35:79">addr</name></expr></argument>,

                <argument pos:start="37:17" pos:end="37:20"><expr pos:start="37:17" pos:end="37:20"><name pos:start="37:17" pos:end="37:20">size</name></expr></argument>, <argument pos:start="37:23" pos:end="37:25"><expr pos:start="37:23" pos:end="37:25"><name pos:start="37:23" pos:end="37:25">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <default pos:start="41:5" pos:end="41:12">default:</default>

        <expr_stmt pos:start="43:9" pos:end="43:69"><expr pos:start="43:9" pos:end="43:68"><call pos:start="43:9" pos:end="43:68"><name pos:start="43:9" pos:end="43:15">DPRINTF</name><argument_list pos:start="43:16" pos:end="43:68">(<argument pos:start="43:17" pos:end="43:61"><expr pos:start="43:17" pos:end="43:61"><literal type="string" pos:start="43:17" pos:end="43:61">"unsupported size 0x%x of TxStatus reading\n"</literal></expr></argument>, <argument pos:start="43:64" pos:end="43:67"><expr pos:start="43:64" pos:end="43:67"><name pos:start="43:64" pos:end="43:67">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="51:5" pos:end="51:15">return <expr pos:start="51:12" pos:end="51:14"><name pos:start="51:12" pos:end="51:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
