<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9498.c" pos:tabs="8"><function pos:start="1:1" pos:end="653:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">matroska_read_header</name><parameter_list pos:start="1:32" pos:end="1:75">(<parameter pos:start="1:33" pos:end="1:50"><decl pos:start="1:33" pos:end="1:50"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:47">AVFormatContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:74"><decl pos:start="1:53" pos:end="1:74"><type pos:start="1:53" pos:end="1:74"><name pos:start="1:53" pos:end="1:70">AVFormatParameters</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:74">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="653:1">{<block_content pos:start="5:5" pos:end="651:13">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24">MatroskaDemuxContext</name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:34">matroska</name> <init pos:start="5:36" pos:end="5:49">= <expr pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:38">s</name><operator pos:start="5:39" pos:end="5:40">-&gt;</operator><name pos:start="5:41" pos:end="5:49">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:57"><decl pos:start="7:5" pos:end="7:56"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">EbmlList</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:31">attachements_list</name> <init pos:start="7:33" pos:end="7:56">= <expr pos:start="7:35" pos:end="7:56"><operator pos:start="7:35" pos:end="7:35">&amp;</operator><name pos:start="7:36" pos:end="7:56"><name pos:start="7:36" pos:end="7:43">matroska</name><operator pos:start="7:44" pos:end="7:45">-&gt;</operator><name pos:start="7:46" pos:end="7:56">attachments</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23">MatroskaAttachement</name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:37">attachements</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:49"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">EbmlList</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:27">chapters_list</name> <init pos:start="11:29" pos:end="11:49">= <expr pos:start="11:31" pos:end="11:49"><operator pos:start="11:31" pos:end="11:31">&amp;</operator><name pos:start="11:32" pos:end="11:49"><name pos:start="11:32" pos:end="11:39">matroska</name><operator pos:start="11:40" pos:end="11:41">-&gt;</operator><name pos:start="11:42" pos:end="11:49">chapters</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:19">MatroskaChapter</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:29">chapters</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:17">MatroskaTrack</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:25">tracks</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">EbmlList</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:24">index_list</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:17">MatroskaIndex</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:24">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:24"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:19">index_scale</name> <init pos:start="21:21" pos:end="21:23">= <expr pos:start="21:23" pos:end="21:23"><literal type="number" pos:start="21:23" pos:end="21:23">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:22"><decl pos:start="23:5" pos:end="23:21"><type pos:start="23:5" pos:end="23:8"><name pos:start="23:5" pos:end="23:8">Ebml</name></type> <name pos:start="23:10" pos:end="23:13">ebml</name> <init pos:start="23:15" pos:end="23:21">= <expr pos:start="23:17" pos:end="23:21"><block pos:start="23:17" pos:end="23:21">{ <expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:17"><decl pos:start="25:5" pos:end="25:16"><type pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:12">AVStream</name> <modifier pos:start="25:14" pos:end="25:14">*</modifier></type><name pos:start="25:15" pos:end="25:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:13"><decl pos:start="27:5" pos:end="27:9"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:9">i</name></decl>, <decl pos:start="27:12" pos:end="27:12"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:12" pos:end="27:12">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:12">matroska</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:17">ctx</name></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:21">s</name></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:37">/* First read the EBML header. */</comment>

    <if_stmt pos:start="37:5" pos:end="55:5"><if pos:start="37:5" pos:end="55:5">if <condition pos:start="37:8" pos:end="43:36">(<expr pos:start="37:9" pos:end="43:35"><call pos:start="37:9" pos:end="37:48"><name pos:start="37:9" pos:end="37:18">ebml_parse</name><argument_list pos:start="37:19" pos:end="37:48">(<argument pos:start="37:20" pos:end="37:27"><expr pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:27">matroska</name></expr></argument>, <argument pos:start="37:30" pos:end="37:40"><expr pos:start="37:30" pos:end="37:40"><name pos:start="37:30" pos:end="37:40">ebml_syntax</name></expr></argument>, <argument pos:start="37:43" pos:end="37:47"><expr pos:start="37:43" pos:end="37:47"><operator pos:start="37:43" pos:end="37:43">&amp;</operator><name pos:start="37:44" pos:end="37:47">ebml</name></expr></argument>)</argument_list></call>

        <operator pos:start="39:9" pos:end="39:10">||</operator> <name pos:start="39:12" pos:end="39:23"><name pos:start="39:12" pos:end="39:15">ebml</name><operator pos:start="39:16" pos:end="39:16">.</operator><name pos:start="39:17" pos:end="39:23">version</name></name> <operator pos:start="39:25" pos:end="39:25">&gt;</operator> <name pos:start="39:27" pos:end="39:38">EBML_VERSION</name>       <operator pos:start="39:46" pos:end="39:47">||</operator> <name pos:start="39:49" pos:end="39:61"><name pos:start="39:49" pos:end="39:52">ebml</name><operator pos:start="39:53" pos:end="39:53">.</operator><name pos:start="39:54" pos:end="39:61">max_size</name></name> <operator pos:start="39:63" pos:end="39:63">&gt;</operator> <sizeof pos:start="39:65" pos:end="39:80">sizeof<argument_list pos:start="39:71" pos:end="39:80">(<argument pos:start="39:72" pos:end="39:79"><expr pos:start="39:72" pos:end="39:79"><name pos:start="39:72" pos:end="39:79">uint64_t</name></expr></argument>)</argument_list></sizeof>

        <operator pos:start="41:9" pos:end="41:10">||</operator> <name pos:start="41:12" pos:end="41:25"><name pos:start="41:12" pos:end="41:15">ebml</name><operator pos:start="41:16" pos:end="41:16">.</operator><name pos:start="41:17" pos:end="41:25">id_length</name></name> <operator pos:start="41:27" pos:end="41:27">&gt;</operator> <sizeof pos:start="41:29" pos:end="41:44">sizeof<argument_list pos:start="41:35" pos:end="41:44">(<argument pos:start="41:36" pos:end="41:43"><expr pos:start="41:36" pos:end="41:43"><name pos:start="41:36" pos:end="41:43">uint32_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="41:46" pos:end="41:47">||</operator> <call pos:start="41:49" pos:end="41:80"><name pos:start="41:49" pos:end="41:54">strcmp</name><argument_list pos:start="41:55" pos:end="41:80">(<argument pos:start="41:56" pos:end="41:67"><expr pos:start="41:56" pos:end="41:67"><name pos:start="41:56" pos:end="41:67"><name pos:start="41:56" pos:end="41:59">ebml</name><operator pos:start="41:60" pos:end="41:60">.</operator><name pos:start="41:61" pos:end="41:67">doctype</name></name></expr></argument>, <argument pos:start="41:70" pos:end="41:79"><expr pos:start="41:70" pos:end="41:79"><literal type="string" pos:start="41:70" pos:end="41:79">"matroska"</literal></expr></argument>)</argument_list></call>

        <operator pos:start="43:9" pos:end="43:10">||</operator> <name pos:start="43:12" pos:end="43:31"><name pos:start="43:12" pos:end="43:15">ebml</name><operator pos:start="43:16" pos:end="43:16">.</operator><name pos:start="43:17" pos:end="43:31">doctype_version</name></name> <operator pos:start="43:33" pos:end="43:33">&gt;</operator> <literal type="number" pos:start="43:35" pos:end="43:35">2</literal></expr>)</condition> <block pos:start="43:38" pos:end="55:5">{<block_content pos:start="45:9" pos:end="53:29">

        <expr_stmt pos:start="45:9" pos:end="51:65"><expr pos:start="45:9" pos:end="51:64"><call pos:start="45:9" pos:end="51:64"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="51:64">(<argument pos:start="45:16" pos:end="45:28"><expr pos:start="45:16" pos:end="45:28"><name pos:start="45:16" pos:end="45:28"><name pos:start="45:16" pos:end="45:23">matroska</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:28">ctx</name></name></expr></argument>, <argument pos:start="45:31" pos:end="45:42"><expr pos:start="45:31" pos:end="45:42"><name pos:start="45:31" pos:end="45:42">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="47:16" pos:end="49:78"><expr pos:start="47:16" pos:end="49:78"><literal type="string" pos:start="47:16" pos:end="47:57">"EBML header using unsupported features\n"</literal>

               <literal type="string" pos:start="49:16" pos:end="49:32">"(EBML version %"</literal><name pos:start="49:33" pos:end="49:38">PRIu64</name><literal type="string" pos:start="49:39" pos:end="49:67">", doctype %s, doc version %"</literal><name pos:start="49:68" pos:end="49:73">PRIu64</name><literal type="string" pos:start="49:74" pos:end="49:78">")\n"</literal></expr></argument>,

               <argument pos:start="51:16" pos:end="51:27"><expr pos:start="51:16" pos:end="51:27"><name pos:start="51:16" pos:end="51:27"><name pos:start="51:16" pos:end="51:19">ebml</name><operator pos:start="51:20" pos:end="51:20">.</operator><name pos:start="51:21" pos:end="51:27">version</name></name></expr></argument>, <argument pos:start="51:30" pos:end="51:41"><expr pos:start="51:30" pos:end="51:41"><name pos:start="51:30" pos:end="51:41"><name pos:start="51:30" pos:end="51:33">ebml</name><operator pos:start="51:34" pos:end="51:34">.</operator><name pos:start="51:35" pos:end="51:41">doctype</name></name></expr></argument>, <argument pos:start="51:44" pos:end="51:63"><expr pos:start="51:44" pos:end="51:63"><name pos:start="51:44" pos:end="51:63"><name pos:start="51:44" pos:end="51:47">ebml</name><operator pos:start="51:48" pos:end="51:48">.</operator><name pos:start="51:49" pos:end="51:63">doctype_version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:29">return <expr pos:start="53:16" pos:end="53:28"><name pos:start="53:16" pos:end="53:28">AVERROR_NOFMT</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:34"><expr pos:start="57:5" pos:end="57:33"><call pos:start="57:5" pos:end="57:33"><name pos:start="57:5" pos:end="57:13">ebml_free</name><argument_list pos:start="57:14" pos:end="57:33">(<argument pos:start="57:15" pos:end="57:25"><expr pos:start="57:15" pos:end="57:25"><name pos:start="57:15" pos:end="57:25">ebml_syntax</name></expr></argument>, <argument pos:start="57:28" pos:end="57:32"><expr pos:start="57:28" pos:end="57:32"><operator pos:start="57:28" pos:end="57:28">&amp;</operator><name pos:start="57:29" pos:end="57:32">ebml</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:38">/* The next thing is a segment. */</comment>

    <if_stmt pos:start="63:5" pos:end="65:18"><if pos:start="63:5" pos:end="65:18">if <condition pos:start="63:8" pos:end="63:62">(<expr pos:start="63:9" pos:end="63:61"><call pos:start="63:9" pos:end="63:57"><name pos:start="63:9" pos:end="63:18">ebml_parse</name><argument_list pos:start="63:19" pos:end="63:57">(<argument pos:start="63:20" pos:end="63:27"><expr pos:start="63:20" pos:end="63:27"><name pos:start="63:20" pos:end="63:27">matroska</name></expr></argument>, <argument pos:start="63:30" pos:end="63:46"><expr pos:start="63:30" pos:end="63:46"><name pos:start="63:30" pos:end="63:46">matroska_segments</name></expr></argument>, <argument pos:start="63:49" pos:end="63:56"><expr pos:start="63:49" pos:end="63:56"><name pos:start="63:49" pos:end="63:56">matroska</name></expr></argument>)</argument_list></call> <operator pos:start="63:59" pos:end="63:59">&lt;</operator> <literal type="number" pos:start="63:61" pos:end="63:61">0</literal></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:18"><block_content pos:start="65:9" pos:end="65:18">

        <return pos:start="65:9" pos:end="65:18">return <expr pos:start="65:16" pos:end="65:17"><operator pos:start="65:16" pos:end="65:16">-</operator><literal type="number" pos:start="65:17" pos:end="65:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:40"><expr pos:start="67:5" pos:end="67:39"><call pos:start="67:5" pos:end="67:39"><name pos:start="67:5" pos:end="67:29">matroska_execute_seekhead</name><argument_list pos:start="67:30" pos:end="67:39">(<argument pos:start="67:31" pos:end="67:38"><expr pos:start="67:31" pos:end="67:38"><name pos:start="67:31" pos:end="67:38">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="71:5" pos:end="75:56"><if pos:start="71:5" pos:end="75:56">if <condition pos:start="71:8" pos:end="71:27">(<expr pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:16">matroska</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:26">duration</name></name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="75:56"><block_content pos:start="73:9" pos:end="75:56">

        <expr_stmt pos:start="73:9" pos:end="75:56"><expr pos:start="73:9" pos:end="75:55"><name pos:start="73:9" pos:end="73:31"><name pos:start="73:9" pos:end="73:16">matroska</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:21">ctx</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:31">duration</name></name> <operator pos:start="73:33" pos:end="73:33">=</operator> <name pos:start="73:35" pos:end="73:52"><name pos:start="73:35" pos:end="73:42">matroska</name><operator pos:start="73:43" pos:end="73:44">-&gt;</operator><name pos:start="73:45" pos:end="73:52">duration</name></name> <operator pos:start="73:54" pos:end="73:54">*</operator> <name pos:start="73:56" pos:end="73:75"><name pos:start="73:56" pos:end="73:63">matroska</name><operator pos:start="73:64" pos:end="73:65">-&gt;</operator><name pos:start="73:66" pos:end="73:75">time_scale</name></name>

                                  <operator pos:start="75:35" pos:end="75:35">*</operator> <literal type="number" pos:start="75:37" pos:end="75:40">1000</literal> <operator pos:start="75:42" pos:end="75:42">/</operator> <name pos:start="75:44" pos:end="75:55">AV_TIME_BASE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="77:5" pos:end="81:48"><if pos:start="77:5" pos:end="81:48">if <condition pos:start="77:8" pos:end="77:24">(<expr pos:start="77:9" pos:end="77:23"><name pos:start="77:9" pos:end="77:23"><name pos:start="77:9" pos:end="77:16">matroska</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:23">title</name></name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="81:48"><block_content pos:start="79:9" pos:end="81:48">

        <expr_stmt pos:start="79:9" pos:end="81:48"><expr pos:start="79:9" pos:end="81:47"><call pos:start="79:9" pos:end="81:47"><name pos:start="79:9" pos:end="79:15">strncpy</name><argument_list pos:start="79:16" pos:end="81:47">(<argument pos:start="79:17" pos:end="79:36"><expr pos:start="79:17" pos:end="79:36"><name pos:start="79:17" pos:end="79:36"><name pos:start="79:17" pos:end="79:24">matroska</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:29">ctx</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:36">title</name></name></expr></argument>, <argument pos:start="79:39" pos:end="79:53"><expr pos:start="79:39" pos:end="79:53"><name pos:start="79:39" pos:end="79:53"><name pos:start="79:39" pos:end="79:46">matroska</name><operator pos:start="79:47" pos:end="79:48">-&gt;</operator><name pos:start="79:49" pos:end="79:53">title</name></name></expr></argument>,

                <argument pos:start="81:17" pos:end="81:46"><expr pos:start="81:17" pos:end="81:46"><sizeof pos:start="81:17" pos:end="81:44">sizeof<argument_list pos:start="81:23" pos:end="81:44">(<argument pos:start="81:24" pos:end="81:43"><expr pos:start="81:24" pos:end="81:43"><name pos:start="81:24" pos:end="81:43"><name pos:start="81:24" pos:end="81:31">matroska</name><operator pos:start="81:32" pos:end="81:33">-&gt;</operator><name pos:start="81:34" pos:end="81:36">ctx</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:43">title</name></name></expr></argument>)</argument_list></sizeof><operator pos:start="81:45" pos:end="81:45">-</operator><literal type="number" pos:start="81:46" pos:end="81:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:46"><expr pos:start="83:5" pos:end="83:45"><call pos:start="83:5" pos:end="83:45"><name pos:start="83:5" pos:end="83:25">matroska_convert_tags</name><argument_list pos:start="83:26" pos:end="83:45">(<argument pos:start="83:27" pos:end="83:27"><expr pos:start="83:27" pos:end="83:27"><name pos:start="83:27" pos:end="83:27">s</name></expr></argument>, <argument pos:start="83:30" pos:end="83:44"><expr pos:start="83:30" pos:end="83:44"><operator pos:start="83:30" pos:end="83:30">&amp;</operator><name pos:start="83:31" pos:end="83:44"><name pos:start="83:31" pos:end="83:38">matroska</name><operator pos:start="83:39" pos:end="83:40">-&gt;</operator><name pos:start="83:41" pos:end="83:44">tags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:35"><expr pos:start="87:5" pos:end="87:34"><name pos:start="87:5" pos:end="87:10">tracks</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <name pos:start="87:14" pos:end="87:34"><name pos:start="87:14" pos:end="87:21">matroska</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:29">tracks</name><operator pos:start="87:30" pos:end="87:30">.</operator><name pos:start="87:31" pos:end="87:34">elem</name></name></expr>;</expr_stmt>

    <for pos:start="89:5" pos:end="535:5">for <control pos:start="89:9" pos:end="89:48">(<init pos:start="89:10" pos:end="89:13"><expr pos:start="89:10" pos:end="89:12"><name pos:start="89:10" pos:end="89:10">i</name><operator pos:start="89:11" pos:end="89:11">=</operator><literal type="number" pos:start="89:12" pos:end="89:12">0</literal></expr>;</init> <condition pos:start="89:15" pos:end="89:43"><expr pos:start="89:15" pos:end="89:42"><name pos:start="89:15" pos:end="89:15">i</name> <operator pos:start="89:17" pos:end="89:17">&lt;</operator> <name pos:start="89:19" pos:end="89:42"><name pos:start="89:19" pos:end="89:26">matroska</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:34">tracks</name><operator pos:start="89:35" pos:end="89:35">.</operator><name pos:start="89:36" pos:end="89:42">nb_elem</name></name></expr>;</condition> <incr pos:start="89:45" pos:end="89:47"><expr pos:start="89:45" pos:end="89:47"><name pos:start="89:45" pos:end="89:45">i</name><operator pos:start="89:46" pos:end="89:47">++</operator></expr></incr>)</control> <block pos:start="89:50" pos:end="535:5">{<block_content pos:start="91:9" pos:end="533:9">

        <decl_stmt pos:start="91:9" pos:end="91:42"><decl pos:start="91:9" pos:end="91:41"><type pos:start="91:9" pos:end="91:23"><name pos:start="91:9" pos:end="91:21">MatroskaTrack</name> <modifier pos:start="91:23" pos:end="91:23">*</modifier></type><name pos:start="91:24" pos:end="91:28">track</name> <init pos:start="91:30" pos:end="91:41">= <expr pos:start="91:32" pos:end="91:41"><operator pos:start="91:32" pos:end="91:32">&amp;</operator><name pos:start="91:33" pos:end="91:41"><name pos:start="91:33" pos:end="91:38">tracks</name><index pos:start="91:39" pos:end="91:41">[<expr pos:start="91:40" pos:end="91:40"><name pos:start="91:40" pos:end="91:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="93:9" pos:end="93:46"><decl pos:start="93:9" pos:end="93:45"><type pos:start="93:9" pos:end="93:20"><name pos:start="93:9" pos:end="93:20"><name pos:start="93:9" pos:end="93:12">enum</name> <name pos:start="93:14" pos:end="93:20">CodecID</name></name></type> <name pos:start="93:22" pos:end="93:29">codec_id</name> <init pos:start="93:31" pos:end="93:45">= <expr pos:start="93:33" pos:end="93:45"><name pos:start="93:33" pos:end="93:45">CODEC_ID_NONE</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="95:9" pos:end="95:54"><decl pos:start="95:9" pos:end="95:53"><type pos:start="95:9" pos:end="95:18"><name pos:start="95:9" pos:end="95:16">EbmlList</name> <modifier pos:start="95:18" pos:end="95:18">*</modifier></type><name pos:start="95:19" pos:end="95:32">encodings_list</name> <init pos:start="95:34" pos:end="95:53">= <expr pos:start="95:36" pos:end="95:53"><operator pos:start="95:36" pos:end="95:36">&amp;</operator><name pos:start="95:37" pos:end="95:53"><name pos:start="95:37" pos:end="95:42">tracks</name><operator pos:start="95:43" pos:end="95:44">-&gt;</operator><name pos:start="95:45" pos:end="95:53">encodings</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="97:9" pos:end="97:64"><decl pos:start="97:9" pos:end="97:63"><type pos:start="97:9" pos:end="97:31"><name pos:start="97:9" pos:end="97:29">MatroskaTrackEncoding</name> <modifier pos:start="97:31" pos:end="97:31">*</modifier></type><name pos:start="97:32" pos:end="97:40">encodings</name> <init pos:start="97:42" pos:end="97:63">= <expr pos:start="97:44" pos:end="97:63"><name pos:start="97:44" pos:end="97:63"><name pos:start="97:44" pos:end="97:57">encodings_list</name><operator pos:start="97:58" pos:end="97:59">-&gt;</operator><name pos:start="97:60" pos:end="97:63">elem</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="99:9" pos:end="99:34"><decl pos:start="99:9" pos:end="99:33"><type pos:start="99:9" pos:end="99:17"><name pos:start="99:9" pos:end="99:15">uint8_t</name> <modifier pos:start="99:17" pos:end="99:17">*</modifier></type><name pos:start="99:18" pos:end="99:26">extradata</name> <init pos:start="99:28" pos:end="99:33">= <expr pos:start="99:30" pos:end="99:33"><name pos:start="99:30" pos:end="99:33">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="101:9" pos:end="101:31"><decl pos:start="101:9" pos:end="101:30"><type pos:start="101:9" pos:end="101:11"><name pos:start="101:9" pos:end="101:11">int</name></type> <name pos:start="101:13" pos:end="101:26">extradata_size</name> <init pos:start="101:28" pos:end="101:30">= <expr pos:start="101:30" pos:end="101:30"><literal type="number" pos:start="101:30" pos:end="101:30">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="103:9" pos:end="103:33"><decl pos:start="103:9" pos:end="103:32"><type pos:start="103:9" pos:end="103:11"><name pos:start="103:9" pos:end="103:11">int</name></type> <name pos:start="103:13" pos:end="103:28">extradata_offset</name> <init pos:start="103:30" pos:end="103:32">= <expr pos:start="103:32" pos:end="103:32"><literal type="number" pos:start="103:32" pos:end="103:32">0</literal></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="107:9" pos:end="107:39">/* Apply some sanity checks. */</comment>

        <if_stmt pos:start="109:9" pos:end="123:9"><if pos:start="109:9" pos:end="123:9">if <condition pos:start="109:12" pos:end="113:56">(<expr pos:start="109:13" pos:end="113:55"><name pos:start="109:13" pos:end="109:23"><name pos:start="109:13" pos:end="109:17">track</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:23">type</name></name> <operator pos:start="109:25" pos:end="109:26">!=</operator> <name pos:start="109:28" pos:end="109:52">MATROSKA_TRACK_TYPE_VIDEO</name> <operator pos:start="109:54" pos:end="109:55">&amp;&amp;</operator>

            <name pos:start="111:13" pos:end="111:23"><name pos:start="111:13" pos:end="111:17">track</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:23">type</name></name> <operator pos:start="111:25" pos:end="111:26">!=</operator> <name pos:start="111:28" pos:end="111:52">MATROSKA_TRACK_TYPE_AUDIO</name> <operator pos:start="111:54" pos:end="111:55">&amp;&amp;</operator>

            <name pos:start="113:13" pos:end="113:23"><name pos:start="113:13" pos:end="113:17">track</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:23">type</name></name> <operator pos:start="113:25" pos:end="113:26">!=</operator> <name pos:start="113:28" pos:end="113:55">MATROSKA_TRACK_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="113:58" pos:end="123:9">{<block_content pos:start="115:13" pos:end="121:21">

            <expr_stmt pos:start="115:13" pos:end="119:32"><expr pos:start="115:13" pos:end="119:31"><call pos:start="115:13" pos:end="119:31"><name pos:start="115:13" pos:end="115:18">av_log</name><argument_list pos:start="115:19" pos:end="119:31">(<argument pos:start="115:20" pos:end="115:32"><expr pos:start="115:20" pos:end="115:32"><name pos:start="115:20" pos:end="115:32"><name pos:start="115:20" pos:end="115:27">matroska</name><operator pos:start="115:28" pos:end="115:29">-&gt;</operator><name pos:start="115:30" pos:end="115:32">ctx</name></name></expr></argument>, <argument pos:start="115:35" pos:end="115:45"><expr pos:start="115:35" pos:end="115:45"><name pos:start="115:35" pos:end="115:45">AV_LOG_INFO</name></expr></argument>,

                   <argument pos:start="117:20" pos:end="117:66"><expr pos:start="117:20" pos:end="117:66"><literal type="string" pos:start="117:20" pos:end="117:56">"Unknown or unsupported track type %"</literal><name pos:start="117:57" pos:end="117:62">PRIu64</name><literal type="string" pos:start="117:63" pos:end="117:66">"\n"</literal></expr></argument>,

                   <argument pos:start="119:20" pos:end="119:30"><expr pos:start="119:20" pos:end="119:30"><name pos:start="119:20" pos:end="119:30"><name pos:start="119:20" pos:end="119:24">track</name><operator pos:start="119:25" pos:end="119:26">-&gt;</operator><name pos:start="119:27" pos:end="119:30">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="121:13" pos:end="121:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="125:9" pos:end="127:21"><if pos:start="125:9" pos:end="127:21">if <condition pos:start="125:12" pos:end="125:36">(<expr pos:start="125:13" pos:end="125:35"><name pos:start="125:13" pos:end="125:27"><name pos:start="125:13" pos:end="125:17">track</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:27">codec_id</name></name> <operator pos:start="125:29" pos:end="125:30">==</operator> <name pos:start="125:32" pos:end="125:35">NULL</name></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:21"><block_content pos:start="127:13" pos:end="127:21">

            <continue pos:start="127:13" pos:end="127:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="131:9" pos:end="151:9"><if pos:start="131:9" pos:end="145:9">if <condition pos:start="131:12" pos:end="131:53">(<expr pos:start="131:13" pos:end="131:52"><name pos:start="131:13" pos:end="131:23"><name pos:start="131:13" pos:end="131:17">track</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:23">type</name></name> <operator pos:start="131:25" pos:end="131:26">==</operator> <name pos:start="131:28" pos:end="131:52">MATROSKA_TRACK_TYPE_VIDEO</name></expr>)</condition> <block pos:start="131:55" pos:end="145:9">{<block_content pos:start="133:13" pos:end="143:72">

            <if_stmt pos:start="133:13" pos:end="135:77"><if pos:start="133:13" pos:end="135:77">if <condition pos:start="133:16" pos:end="133:41">(<expr pos:start="133:17" pos:end="133:40"><operator pos:start="133:17" pos:end="133:17">!</operator><name pos:start="133:18" pos:end="133:40"><name pos:start="133:18" pos:end="133:22">track</name><operator pos:start="133:23" pos:end="133:24">-&gt;</operator><name pos:start="133:25" pos:end="133:40">default_duration</name></name></expr>)</condition><block type="pseudo" pos:start="135:17" pos:end="135:77"><block_content pos:start="135:17" pos:end="135:77">

                <expr_stmt pos:start="135:17" pos:end="135:77"><expr pos:start="135:17" pos:end="135:76"><name pos:start="135:17" pos:end="135:39"><name pos:start="135:17" pos:end="135:21">track</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:39">default_duration</name></name> <operator pos:start="135:41" pos:end="135:41">=</operator> <literal type="number" pos:start="135:43" pos:end="135:52">1000000000</literal><operator pos:start="135:53" pos:end="135:53">/</operator><name pos:start="135:54" pos:end="135:76"><name pos:start="135:54" pos:end="135:58">track</name><operator pos:start="135:59" pos:end="135:60">-&gt;</operator><name pos:start="135:61" pos:end="135:65">video</name><operator pos:start="135:66" pos:end="135:66">.</operator><name pos:start="135:67" pos:end="135:76">frame_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="137:13" pos:end="139:70"><if pos:start="137:13" pos:end="139:70">if <condition pos:start="137:16" pos:end="137:44">(<expr pos:start="137:17" pos:end="137:43"><operator pos:start="137:17" pos:end="137:17">!</operator><name pos:start="137:18" pos:end="137:43"><name pos:start="137:18" pos:end="137:22">track</name><operator pos:start="137:23" pos:end="137:24">-&gt;</operator><name pos:start="137:25" pos:end="137:29">video</name><operator pos:start="137:30" pos:end="137:30">.</operator><name pos:start="137:31" pos:end="137:43">display_width</name></name></expr>)</condition><block type="pseudo" pos:start="139:17" pos:end="139:70"><block_content pos:start="139:17" pos:end="139:70">

                <expr_stmt pos:start="139:17" pos:end="139:70"><expr pos:start="139:17" pos:end="139:69"><name pos:start="139:17" pos:end="139:42"><name pos:start="139:17" pos:end="139:21">track</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:28">video</name><operator pos:start="139:29" pos:end="139:29">.</operator><name pos:start="139:30" pos:end="139:42">display_width</name></name> <operator pos:start="139:44" pos:end="139:44">=</operator> <name pos:start="139:46" pos:end="139:69"><name pos:start="139:46" pos:end="139:50">track</name><operator pos:start="139:51" pos:end="139:52">-&gt;</operator><name pos:start="139:53" pos:end="139:57">video</name><operator pos:start="139:58" pos:end="139:58">.</operator><name pos:start="139:59" pos:end="139:69">pixel_width</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="141:13" pos:end="143:72"><if pos:start="141:13" pos:end="143:72">if <condition pos:start="141:16" pos:end="141:45">(<expr pos:start="141:17" pos:end="141:44"><operator pos:start="141:17" pos:end="141:17">!</operator><name pos:start="141:18" pos:end="141:44"><name pos:start="141:18" pos:end="141:22">track</name><operator pos:start="141:23" pos:end="141:24">-&gt;</operator><name pos:start="141:25" pos:end="141:29">video</name><operator pos:start="141:30" pos:end="141:30">.</operator><name pos:start="141:31" pos:end="141:44">display_height</name></name></expr>)</condition><block type="pseudo" pos:start="143:17" pos:end="143:72"><block_content pos:start="143:17" pos:end="143:72">

                <expr_stmt pos:start="143:17" pos:end="143:72"><expr pos:start="143:17" pos:end="143:71"><name pos:start="143:17" pos:end="143:43"><name pos:start="143:17" pos:end="143:21">track</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:28">video</name><operator pos:start="143:29" pos:end="143:29">.</operator><name pos:start="143:30" pos:end="143:43">display_height</name></name> <operator pos:start="143:45" pos:end="143:45">=</operator> <name pos:start="143:47" pos:end="143:71"><name pos:start="143:47" pos:end="143:51">track</name><operator pos:start="143:52" pos:end="143:53">-&gt;</operator><name pos:start="143:54" pos:end="143:58">video</name><operator pos:start="143:59" pos:end="143:59">.</operator><name pos:start="143:60" pos:end="143:71">pixel_height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="145:11" pos:end="151:9">else if <condition pos:start="145:19" pos:end="145:60">(<expr pos:start="145:20" pos:end="145:59"><name pos:start="145:20" pos:end="145:30"><name pos:start="145:20" pos:end="145:24">track</name><operator pos:start="145:25" pos:end="145:26">-&gt;</operator><name pos:start="145:27" pos:end="145:30">type</name></name> <operator pos:start="145:32" pos:end="145:33">==</operator> <name pos:start="145:35" pos:end="145:59">MATROSKA_TRACK_TYPE_AUDIO</name></expr>)</condition> <block pos:start="145:62" pos:end="151:9">{<block_content pos:start="147:13" pos:end="149:70">

            <if_stmt pos:start="147:13" pos:end="149:70"><if pos:start="147:13" pos:end="149:70">if <condition pos:start="147:16" pos:end="147:45">(<expr pos:start="147:17" pos:end="147:44"><operator pos:start="147:17" pos:end="147:17">!</operator><name pos:start="147:18" pos:end="147:44"><name pos:start="147:18" pos:end="147:22">track</name><operator pos:start="147:23" pos:end="147:24">-&gt;</operator><name pos:start="147:25" pos:end="147:29">audio</name><operator pos:start="147:30" pos:end="147:30">.</operator><name pos:start="147:31" pos:end="147:44">out_samplerate</name></name></expr>)</condition><block type="pseudo" pos:start="149:17" pos:end="149:70"><block_content pos:start="149:17" pos:end="149:70">

                <expr_stmt pos:start="149:17" pos:end="149:70"><expr pos:start="149:17" pos:end="149:69"><name pos:start="149:17" pos:end="149:43"><name pos:start="149:17" pos:end="149:21">track</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:28">audio</name><operator pos:start="149:29" pos:end="149:29">.</operator><name pos:start="149:30" pos:end="149:43">out_samplerate</name></name> <operator pos:start="149:45" pos:end="149:45">=</operator> <name pos:start="149:47" pos:end="149:69"><name pos:start="149:47" pos:end="149:51">track</name><operator pos:start="149:52" pos:end="149:53">-&gt;</operator><name pos:start="149:54" pos:end="149:58">audio</name><operator pos:start="149:59" pos:end="149:59">.</operator><name pos:start="149:60" pos:end="149:69">samplerate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="153:9" pos:end="227:9"><if pos:start="153:9" pos:end="159:9">if <condition pos:start="153:12" pos:end="153:40">(<expr pos:start="153:13" pos:end="153:39"><name pos:start="153:13" pos:end="153:35"><name pos:start="153:13" pos:end="153:26">encodings_list</name><operator pos:start="153:27" pos:end="153:28">-&gt;</operator><name pos:start="153:29" pos:end="153:35">nb_elem</name></name> <operator pos:start="153:37" pos:end="153:37">&gt;</operator> <literal type="number" pos:start="153:39" pos:end="153:39">1</literal></expr>)</condition> <block pos:start="153:42" pos:end="159:9">{<block_content pos:start="155:13" pos:end="157:63">

            <expr_stmt pos:start="155:13" pos:end="157:63"><expr pos:start="155:13" pos:end="157:62"><call pos:start="155:13" pos:end="157:62"><name pos:start="155:13" pos:end="155:18">av_log</name><argument_list pos:start="155:19" pos:end="157:62">(<argument pos:start="155:20" pos:end="155:32"><expr pos:start="155:20" pos:end="155:32"><name pos:start="155:20" pos:end="155:32"><name pos:start="155:20" pos:end="155:27">matroska</name><operator pos:start="155:28" pos:end="155:29">-&gt;</operator><name pos:start="155:30" pos:end="155:32">ctx</name></name></expr></argument>, <argument pos:start="155:35" pos:end="155:46"><expr pos:start="155:35" pos:end="155:46"><name pos:start="155:35" pos:end="155:46">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="157:20" pos:end="157:61"><expr pos:start="157:20" pos:end="157:61"><literal type="string" pos:start="157:20" pos:end="157:61">"Multiple combined encodings no supported"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="159:11" pos:end="227:9">else if <condition pos:start="159:19" pos:end="159:48">(<expr pos:start="159:20" pos:end="159:47"><name pos:start="159:20" pos:end="159:42"><name pos:start="159:20" pos:end="159:33">encodings_list</name><operator pos:start="159:34" pos:end="159:35">-&gt;</operator><name pos:start="159:36" pos:end="159:42">nb_elem</name></name> <operator pos:start="159:44" pos:end="159:45">==</operator> <literal type="number" pos:start="159:47" pos:end="159:47">1</literal></expr>)</condition> <block pos:start="159:50" pos:end="227:9">{<block_content pos:start="161:13" pos:end="225:13">

            <if_stmt pos:start="161:13" pos:end="225:13"><if pos:start="161:13" pos:end="185:13">if <condition pos:start="161:16" pos:end="177:84">(<expr pos:start="161:17" pos:end="177:83"><name pos:start="161:17" pos:end="161:28"><name pos:start="161:17" pos:end="161:25">encodings</name><index pos:start="161:26" pos:end="161:28">[<expr pos:start="161:27" pos:end="161:27"><literal type="number" pos:start="161:27" pos:end="161:27">0</literal></expr>]</index></name><operator pos:start="161:29" pos:end="161:29">.</operator><name pos:start="161:30" pos:end="161:33">type</name> <operator pos:start="161:35" pos:end="161:36">||</operator>

                <operator pos:start="163:17" pos:end="163:17">(</operator><name pos:start="163:18" pos:end="163:29"><name pos:start="163:18" pos:end="163:26">encodings</name><index pos:start="163:27" pos:end="163:29">[<expr pos:start="163:28" pos:end="163:28"><literal type="number" pos:start="163:28" pos:end="163:28">0</literal></expr>]</index></name><operator pos:start="163:30" pos:end="163:30">.</operator><name pos:start="163:31" pos:end="163:46"><name pos:start="163:31" pos:end="163:41">compression</name><operator pos:start="163:42" pos:end="163:42">.</operator><name pos:start="163:43" pos:end="163:46">algo</name></name> <operator pos:start="163:48" pos:end="163:49">!=</operator> <name pos:start="163:51" pos:end="163:90">MATROSKA_TRACK_ENCODING_COMP_HEADERSTRIP</name> <operator pos:start="163:92" pos:end="166:0">&amp;&amp;</operator>

<cpp:ifdef pos:start="165:1" pos:end="165:18">#<cpp:directive pos:start="165:2" pos:end="165:6">ifdef</cpp:directive> <name pos:start="165:8" pos:end="165:18">CONFIG_ZLIB</name></cpp:ifdef>

                 <name pos:start="167:18" pos:end="167:29"><name pos:start="167:18" pos:end="167:26">encodings</name><index pos:start="167:27" pos:end="167:29">[<expr pos:start="167:28" pos:end="167:28"><literal type="number" pos:start="167:28" pos:end="167:28">0</literal></expr>]</index></name><operator pos:start="167:30" pos:end="167:30">.</operator><name pos:start="167:31" pos:end="167:46"><name pos:start="167:31" pos:end="167:41">compression</name><operator pos:start="167:42" pos:end="167:42">.</operator><name pos:start="167:43" pos:end="167:46">algo</name></name> <operator pos:start="167:48" pos:end="167:49">!=</operator> <name pos:start="167:51" pos:end="167:83">MATROSKA_TRACK_ENCODING_COMP_ZLIB</name> <operator pos:start="167:85" pos:end="172:0">&amp;&amp;</operator>

<cpp:endif pos:start="169:1" pos:end="169:6">#<cpp:directive pos:start="169:2" pos:end="169:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="171:1" pos:end="171:19">#<cpp:directive pos:start="171:2" pos:end="171:6">ifdef</cpp:directive> <name pos:start="171:8" pos:end="171:19">CONFIG_BZLIB</name></cpp:ifdef>

                 <name pos:start="173:18" pos:end="173:29"><name pos:start="173:18" pos:end="173:26">encodings</name><index pos:start="173:27" pos:end="173:29">[<expr pos:start="173:28" pos:end="173:28"><literal type="number" pos:start="173:28" pos:end="173:28">0</literal></expr>]</index></name><operator pos:start="173:30" pos:end="173:30">.</operator><name pos:start="173:31" pos:end="173:46"><name pos:start="173:31" pos:end="173:41">compression</name><operator pos:start="173:42" pos:end="173:42">.</operator><name pos:start="173:43" pos:end="173:46">algo</name></name> <operator pos:start="173:48" pos:end="173:49">!=</operator> <name pos:start="173:51" pos:end="173:84">MATROSKA_TRACK_ENCODING_COMP_BZLIB</name> <operator pos:start="173:86" pos:end="176:0">&amp;&amp;</operator>

<cpp:endif pos:start="175:1" pos:end="175:6">#<cpp:directive pos:start="175:2" pos:end="175:6">endif</cpp:directive></cpp:endif>

                 <name pos:start="177:18" pos:end="177:29"><name pos:start="177:18" pos:end="177:26">encodings</name><index pos:start="177:27" pos:end="177:29">[<expr pos:start="177:28" pos:end="177:28"><literal type="number" pos:start="177:28" pos:end="177:28">0</literal></expr>]</index></name><operator pos:start="177:30" pos:end="177:30">.</operator><name pos:start="177:31" pos:end="177:46"><name pos:start="177:31" pos:end="177:41">compression</name><operator pos:start="177:42" pos:end="177:42">.</operator><name pos:start="177:43" pos:end="177:46">algo</name></name> <operator pos:start="177:48" pos:end="177:49">!=</operator> <name pos:start="177:51" pos:end="177:82">MATROSKA_TRACK_ENCODING_COMP_LZO</name><operator pos:start="177:83" pos:end="177:83">)</operator></expr>)</condition> <block pos:start="177:86" pos:end="185:13">{<block_content pos:start="179:17" pos:end="183:52">

                <expr_stmt pos:start="179:17" pos:end="179:39"><expr pos:start="179:17" pos:end="179:38"><name pos:start="179:17" pos:end="179:28"><name pos:start="179:17" pos:end="179:25">encodings</name><index pos:start="179:26" pos:end="179:28">[<expr pos:start="179:27" pos:end="179:27"><literal type="number" pos:start="179:27" pos:end="179:27">0</literal></expr>]</index></name><operator pos:start="179:29" pos:end="179:29">.</operator><name pos:start="179:30" pos:end="179:34">scope</name> <operator pos:start="179:36" pos:end="179:36">=</operator> <literal type="number" pos:start="179:38" pos:end="179:38">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="181:17" pos:end="183:52"><expr pos:start="181:17" pos:end="183:51"><call pos:start="181:17" pos:end="183:51"><name pos:start="181:17" pos:end="181:22">av_log</name><argument_list pos:start="181:23" pos:end="183:51">(<argument pos:start="181:24" pos:end="181:36"><expr pos:start="181:24" pos:end="181:36"><name pos:start="181:24" pos:end="181:36"><name pos:start="181:24" pos:end="181:31">matroska</name><operator pos:start="181:32" pos:end="181:33">-&gt;</operator><name pos:start="181:34" pos:end="181:36">ctx</name></name></expr></argument>, <argument pos:start="181:39" pos:end="181:50"><expr pos:start="181:39" pos:end="181:50"><name pos:start="181:39" pos:end="181:50">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="183:24" pos:end="183:50"><expr pos:start="183:24" pos:end="183:50"><literal type="string" pos:start="183:24" pos:end="183:50">"Unsupported encoding type"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="185:15" pos:end="225:13">else if <condition pos:start="185:23" pos:end="185:70">(<expr pos:start="185:24" pos:end="185:69"><name pos:start="185:24" pos:end="185:45"><name pos:start="185:24" pos:end="185:28">track</name><operator pos:start="185:29" pos:end="185:30">-&gt;</operator><name pos:start="185:31" pos:end="185:40">codec_priv</name><operator pos:start="185:41" pos:end="185:41">.</operator><name pos:start="185:42" pos:end="185:45">size</name></name> <operator pos:start="185:47" pos:end="185:48">&amp;&amp;</operator> <name pos:start="185:50" pos:end="185:61"><name pos:start="185:50" pos:end="185:58">encodings</name><index pos:start="185:59" pos:end="185:61">[<expr pos:start="185:60" pos:end="185:60"><literal type="number" pos:start="185:60" pos:end="185:60">0</literal></expr>]</index></name><operator pos:start="185:62" pos:end="185:62">.</operator><name pos:start="185:63" pos:end="185:67">scope</name><operator pos:start="185:68" pos:end="185:68">&amp;</operator><literal type="number" pos:start="185:69" pos:end="185:69">2</literal></expr>)</condition> <block pos:start="185:72" pos:end="225:13">{<block_content pos:start="187:17" pos:end="223:40">

                <decl_stmt pos:start="187:17" pos:end="187:61"><decl pos:start="187:17" pos:end="187:60"><type pos:start="187:17" pos:end="187:25"><name pos:start="187:17" pos:end="187:23">uint8_t</name> <modifier pos:start="187:25" pos:end="187:25">*</modifier></type><name pos:start="187:26" pos:end="187:35">codec_priv</name> <init pos:start="187:37" pos:end="187:60">= <expr pos:start="187:39" pos:end="187:60"><name pos:start="187:39" pos:end="187:60"><name pos:start="187:39" pos:end="187:43">track</name><operator pos:start="187:44" pos:end="187:45">-&gt;</operator><name pos:start="187:46" pos:end="187:55">codec_priv</name><operator pos:start="187:56" pos:end="187:56">.</operator><name pos:start="187:57" pos:end="187:60">data</name></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="189:17" pos:end="193:59"><decl pos:start="189:17" pos:end="193:58"><type pos:start="189:17" pos:end="189:19"><name pos:start="189:17" pos:end="189:19">int</name></type> <name pos:start="189:21" pos:end="189:26">offset</name> <init pos:start="189:28" pos:end="193:58">= <expr pos:start="189:30" pos:end="193:58"><call pos:start="189:30" pos:end="193:58"><name pos:start="189:30" pos:end="189:51">matroska_decode_buffer</name><argument_list pos:start="189:52" pos:end="193:58">(<argument pos:start="189:53" pos:end="189:75"><expr pos:start="189:53" pos:end="189:75"><operator pos:start="189:53" pos:end="189:53">&amp;</operator><name pos:start="189:54" pos:end="189:75"><name pos:start="189:54" pos:end="189:58">track</name><operator pos:start="189:59" pos:end="189:60">-&gt;</operator><name pos:start="189:61" pos:end="189:70">codec_priv</name><operator pos:start="189:71" pos:end="189:71">.</operator><name pos:start="189:72" pos:end="189:75">data</name></name></expr></argument>,

                                                    <argument pos:start="191:53" pos:end="191:75"><expr pos:start="191:53" pos:end="191:75"><operator pos:start="191:53" pos:end="191:53">&amp;</operator><name pos:start="191:54" pos:end="191:75"><name pos:start="191:54" pos:end="191:58">track</name><operator pos:start="191:59" pos:end="191:60">-&gt;</operator><name pos:start="191:61" pos:end="191:70">codec_priv</name><operator pos:start="191:71" pos:end="191:71">.</operator><name pos:start="191:72" pos:end="191:75">size</name></name></expr></argument>,

                                                    <argument pos:start="193:53" pos:end="193:57"><expr pos:start="193:53" pos:end="193:57"><name pos:start="193:53" pos:end="193:57">track</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="195:17" pos:end="219:17"><if pos:start="195:17" pos:end="205:17">if <condition pos:start="195:20" pos:end="195:31">(<expr pos:start="195:21" pos:end="195:30"><name pos:start="195:21" pos:end="195:26">offset</name> <operator pos:start="195:28" pos:end="195:28">&lt;</operator> <literal type="number" pos:start="195:30" pos:end="195:30">0</literal></expr>)</condition> <block pos:start="195:33" pos:end="205:17">{<block_content pos:start="197:21" pos:end="203:68">

                    <expr_stmt pos:start="197:21" pos:end="197:50"><expr pos:start="197:21" pos:end="197:49"><name pos:start="197:21" pos:end="197:42"><name pos:start="197:21" pos:end="197:25">track</name><operator pos:start="197:26" pos:end="197:27">-&gt;</operator><name pos:start="197:28" pos:end="197:37">codec_priv</name><operator pos:start="197:38" pos:end="197:38">.</operator><name pos:start="197:39" pos:end="197:42">data</name></name> <operator pos:start="197:44" pos:end="197:44">=</operator> <name pos:start="197:46" pos:end="197:49">NULL</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="199:21" pos:end="199:47"><expr pos:start="199:21" pos:end="199:46"><name pos:start="199:21" pos:end="199:42"><name pos:start="199:21" pos:end="199:25">track</name><operator pos:start="199:26" pos:end="199:27">-&gt;</operator><name pos:start="199:28" pos:end="199:37">codec_priv</name><operator pos:start="199:38" pos:end="199:38">.</operator><name pos:start="199:39" pos:end="199:42">size</name></name> <operator pos:start="199:44" pos:end="199:44">=</operator> <literal type="number" pos:start="199:46" pos:end="199:46">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="201:21" pos:end="203:68"><expr pos:start="201:21" pos:end="203:67"><call pos:start="201:21" pos:end="203:67"><name pos:start="201:21" pos:end="201:26">av_log</name><argument_list pos:start="201:27" pos:end="203:67">(<argument pos:start="201:28" pos:end="201:40"><expr pos:start="201:28" pos:end="201:40"><name pos:start="201:28" pos:end="201:40"><name pos:start="201:28" pos:end="201:35">matroska</name><operator pos:start="201:36" pos:end="201:37">-&gt;</operator><name pos:start="201:38" pos:end="201:40">ctx</name></name></expr></argument>, <argument pos:start="201:43" pos:end="201:54"><expr pos:start="201:43" pos:end="201:54"><name pos:start="201:43" pos:end="201:54">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="203:28" pos:end="203:66"><expr pos:start="203:28" pos:end="203:66"><literal type="string" pos:start="203:28" pos:end="203:66">"Failed to decode codec private data\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="205:19" pos:end="219:17">else if <condition pos:start="205:27" pos:end="205:38">(<expr pos:start="205:28" pos:end="205:37"><name pos:start="205:28" pos:end="205:33">offset</name> <operator pos:start="205:35" pos:end="205:35">&gt;</operator> <literal type="number" pos:start="205:37" pos:end="205:37">0</literal></expr>)</condition> <block pos:start="205:40" pos:end="219:17">{<block_content pos:start="207:21" pos:end="217:53">

                    <expr_stmt pos:start="207:21" pos:end="207:88"><expr pos:start="207:21" pos:end="207:87"><name pos:start="207:21" pos:end="207:42"><name pos:start="207:21" pos:end="207:25">track</name><operator pos:start="207:26" pos:end="207:27">-&gt;</operator><name pos:start="207:28" pos:end="207:37">codec_priv</name><operator pos:start="207:38" pos:end="207:38">.</operator><name pos:start="207:39" pos:end="207:42">data</name></name> <operator pos:start="207:44" pos:end="207:44">=</operator> <call pos:start="207:46" pos:end="207:87"><name pos:start="207:46" pos:end="207:54">av_malloc</name><argument_list pos:start="207:55" pos:end="207:87">(<argument pos:start="207:56" pos:end="207:86"><expr pos:start="207:56" pos:end="207:86"><name pos:start="207:56" pos:end="207:77"><name pos:start="207:56" pos:end="207:60">track</name><operator pos:start="207:61" pos:end="207:62">-&gt;</operator><name pos:start="207:63" pos:end="207:72">codec_priv</name><operator pos:start="207:73" pos:end="207:73">.</operator><name pos:start="207:74" pos:end="207:77">size</name></name> <operator pos:start="207:79" pos:end="207:79">+</operator> <name pos:start="207:81" pos:end="207:86">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="209:21" pos:end="211:75"><expr pos:start="209:21" pos:end="211:74"><call pos:start="209:21" pos:end="211:74"><name pos:start="209:21" pos:end="209:26">memcpy</name><argument_list pos:start="209:27" pos:end="211:74">(<argument pos:start="209:28" pos:end="209:49"><expr pos:start="209:28" pos:end="209:49"><name pos:start="209:28" pos:end="209:49"><name pos:start="209:28" pos:end="209:32">track</name><operator pos:start="209:33" pos:end="209:34">-&gt;</operator><name pos:start="209:35" pos:end="209:44">codec_priv</name><operator pos:start="209:45" pos:end="209:45">.</operator><name pos:start="209:46" pos:end="209:49">data</name></name></expr></argument>,

                           <argument pos:start="211:28" pos:end="211:65"><expr pos:start="211:28" pos:end="211:65"><name pos:start="211:28" pos:end="211:39"><name pos:start="211:28" pos:end="211:36">encodings</name><index pos:start="211:37" pos:end="211:39">[<expr pos:start="211:38" pos:end="211:38"><literal type="number" pos:start="211:38" pos:end="211:38">0</literal></expr>]</index></name><operator pos:start="211:40" pos:end="211:40">.</operator><name pos:start="211:41" pos:end="211:65"><name pos:start="211:41" pos:end="211:51">compression</name><operator pos:start="211:52" pos:end="211:52">.</operator><name pos:start="211:53" pos:end="211:60">settings</name><operator pos:start="211:61" pos:end="211:61">.</operator><name pos:start="211:62" pos:end="211:65">data</name></name></expr></argument>, <argument pos:start="211:68" pos:end="211:73"><expr pos:start="211:68" pos:end="211:73"><name pos:start="211:68" pos:end="211:73">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="213:21" pos:end="215:51"><expr pos:start="213:21" pos:end="215:50"><call pos:start="213:21" pos:end="215:50"><name pos:start="213:21" pos:end="213:26">memcpy</name><argument_list pos:start="213:27" pos:end="215:50">(<argument pos:start="213:28" pos:end="213:56"><expr pos:start="213:28" pos:end="213:56"><name pos:start="213:28" pos:end="213:49"><name pos:start="213:28" pos:end="213:32">track</name><operator pos:start="213:33" pos:end="213:34">-&gt;</operator><name pos:start="213:35" pos:end="213:44">codec_priv</name><operator pos:start="213:45" pos:end="213:45">.</operator><name pos:start="213:46" pos:end="213:49">data</name></name><operator pos:start="213:50" pos:end="213:50">+</operator><name pos:start="213:51" pos:end="213:56">offset</name></expr></argument>, <argument pos:start="213:59" pos:end="213:68"><expr pos:start="213:59" pos:end="213:68"><name pos:start="213:59" pos:end="213:68">codec_priv</name></expr></argument>,

                           <argument pos:start="215:28" pos:end="215:49"><expr pos:start="215:28" pos:end="215:49"><name pos:start="215:28" pos:end="215:49"><name pos:start="215:28" pos:end="215:32">track</name><operator pos:start="215:33" pos:end="215:34">-&gt;</operator><name pos:start="215:35" pos:end="215:44">codec_priv</name><operator pos:start="215:45" pos:end="215:45">.</operator><name pos:start="215:46" pos:end="215:49">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="217:21" pos:end="217:53"><expr pos:start="217:21" pos:end="217:52"><name pos:start="217:21" pos:end="217:42"><name pos:start="217:21" pos:end="217:25">track</name><operator pos:start="217:26" pos:end="217:27">-&gt;</operator><name pos:start="217:28" pos:end="217:37">codec_priv</name><operator pos:start="217:38" pos:end="217:38">.</operator><name pos:start="217:39" pos:end="217:42">size</name></name> <operator pos:start="217:44" pos:end="217:45">+=</operator> <name pos:start="217:47" pos:end="217:52">offset</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="221:17" pos:end="223:40"><if pos:start="221:17" pos:end="223:40">if <condition pos:start="221:20" pos:end="221:57">(<expr pos:start="221:21" pos:end="221:56"><name pos:start="221:21" pos:end="221:30">codec_priv</name> <operator pos:start="221:32" pos:end="221:33">!=</operator> <name pos:start="221:35" pos:end="221:56"><name pos:start="221:35" pos:end="221:39">track</name><operator pos:start="221:40" pos:end="221:41">-&gt;</operator><name pos:start="221:42" pos:end="221:51">codec_priv</name><operator pos:start="221:52" pos:end="221:52">.</operator><name pos:start="221:53" pos:end="221:56">data</name></name></expr>)</condition><block type="pseudo" pos:start="223:21" pos:end="223:40"><block_content pos:start="223:21" pos:end="223:40">

                    <expr_stmt pos:start="223:21" pos:end="223:40"><expr pos:start="223:21" pos:end="223:39"><call pos:start="223:21" pos:end="223:39"><name pos:start="223:21" pos:end="223:27">av_free</name><argument_list pos:start="223:28" pos:end="223:39">(<argument pos:start="223:29" pos:end="223:38"><expr pos:start="223:29" pos:end="223:38"><name pos:start="223:29" pos:end="223:38">codec_priv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="231:9" pos:end="243:9">for<control pos:start="231:12" pos:end="231:63">(<init pos:start="231:13" pos:end="231:16"><expr pos:start="231:13" pos:end="231:15"><name pos:start="231:13" pos:end="231:13">j</name><operator pos:start="231:14" pos:end="231:14">=</operator><literal type="number" pos:start="231:15" pos:end="231:15">0</literal></expr>;</init> <condition pos:start="231:18" pos:end="231:58"><expr pos:start="231:18" pos:end="231:57"><name pos:start="231:18" pos:end="231:37"><name pos:start="231:18" pos:end="231:34">ff_mkv_codec_tags</name><index pos:start="231:35" pos:end="231:37">[<expr pos:start="231:36" pos:end="231:36"><name pos:start="231:36" pos:end="231:36">j</name></expr>]</index></name><operator pos:start="231:38" pos:end="231:38">.</operator><name pos:start="231:39" pos:end="231:40">id</name> <operator pos:start="231:42" pos:end="231:43">!=</operator> <name pos:start="231:45" pos:end="231:57">CODEC_ID_NONE</name></expr>;</condition> <incr pos:start="231:60" pos:end="231:62"><expr pos:start="231:60" pos:end="231:62"><name pos:start="231:60" pos:end="231:60">j</name><operator pos:start="231:61" pos:end="231:62">++</operator></expr></incr>)</control><block pos:start="231:64" pos:end="243:9">{<block_content pos:start="233:13" pos:end="241:13">

            <if_stmt pos:start="233:13" pos:end="241:13"><if pos:start="233:13" pos:end="241:13">if<condition pos:start="233:15" pos:end="235:58">(<expr pos:start="233:16" pos:end="235:57"><operator pos:start="233:16" pos:end="233:16">!</operator><call pos:start="233:17" pos:end="235:57"><name pos:start="233:17" pos:end="233:23">strncmp</name><argument_list pos:start="233:24" pos:end="235:57">(<argument pos:start="233:25" pos:end="233:48"><expr pos:start="233:25" pos:end="233:48"><name pos:start="233:25" pos:end="233:44"><name pos:start="233:25" pos:end="233:41">ff_mkv_codec_tags</name><index pos:start="233:42" pos:end="233:44">[<expr pos:start="233:43" pos:end="233:43"><name pos:start="233:43" pos:end="233:43">j</name></expr>]</index></name><operator pos:start="233:45" pos:end="233:45">.</operator><name pos:start="233:46" pos:end="233:48">str</name></expr></argument>, <argument pos:start="233:51" pos:end="233:65"><expr pos:start="233:51" pos:end="233:65"><name pos:start="233:51" pos:end="233:65"><name pos:start="233:51" pos:end="233:55">track</name><operator pos:start="233:56" pos:end="233:57">-&gt;</operator><name pos:start="233:58" pos:end="233:65">codec_id</name></name></expr></argument>,

                        <argument pos:start="235:25" pos:end="235:56"><expr pos:start="235:25" pos:end="235:56"><call pos:start="235:25" pos:end="235:56"><name pos:start="235:25" pos:end="235:30">strlen</name><argument_list pos:start="235:31" pos:end="235:56">(<argument pos:start="235:32" pos:end="235:55"><expr pos:start="235:32" pos:end="235:55"><name pos:start="235:32" pos:end="235:51"><name pos:start="235:32" pos:end="235:48">ff_mkv_codec_tags</name><index pos:start="235:49" pos:end="235:51">[<expr pos:start="235:50" pos:end="235:50"><name pos:start="235:50" pos:end="235:50">j</name></expr>]</index></name><operator pos:start="235:52" pos:end="235:52">.</operator><name pos:start="235:53" pos:end="235:55">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="235:59" pos:end="241:13">{<block_content pos:start="237:17" pos:end="239:22">

                <expr_stmt pos:start="237:17" pos:end="237:50"><expr pos:start="237:17" pos:end="237:49"><name pos:start="237:17" pos:end="237:24">codec_id</name><operator pos:start="237:25" pos:end="237:25">=</operator> <name pos:start="237:27" pos:end="237:46"><name pos:start="237:27" pos:end="237:43">ff_mkv_codec_tags</name><index pos:start="237:44" pos:end="237:46">[<expr pos:start="237:45" pos:end="237:45"><name pos:start="237:45" pos:end="237:45">j</name></expr>]</index></name><operator pos:start="237:47" pos:end="237:47">.</operator><name pos:start="237:48" pos:end="237:49">id</name></expr>;</expr_stmt>

                <break pos:start="239:17" pos:end="239:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="247:9" pos:end="247:49"><expr pos:start="247:9" pos:end="247:48"><name pos:start="247:9" pos:end="247:10">st</name> <operator pos:start="247:12" pos:end="247:12">=</operator> <name pos:start="247:14" pos:end="247:26"><name pos:start="247:14" pos:end="247:18">track</name><operator pos:start="247:19" pos:end="247:20">-&gt;</operator><name pos:start="247:21" pos:end="247:26">stream</name></name> <operator pos:start="247:28" pos:end="247:28">=</operator> <call pos:start="247:30" pos:end="247:48"><name pos:start="247:30" pos:end="247:42">av_new_stream</name><argument_list pos:start="247:43" pos:end="247:48">(<argument pos:start="247:44" pos:end="247:44"><expr pos:start="247:44" pos:end="247:44"><name pos:start="247:44" pos:end="247:44">s</name></expr></argument>, <argument pos:start="247:47" pos:end="247:47"><expr pos:start="247:47" pos:end="247:47"><literal type="number" pos:start="247:47" pos:end="247:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="249:9" pos:end="251:35"><if pos:start="249:9" pos:end="251:35">if <condition pos:start="249:12" pos:end="249:23">(<expr pos:start="249:13" pos:end="249:22"><name pos:start="249:13" pos:end="249:14">st</name> <operator pos:start="249:16" pos:end="249:17">==</operator> <name pos:start="249:19" pos:end="249:22">NULL</name></expr>)</condition><block type="pseudo" pos:start="251:13" pos:end="251:35"><block_content pos:start="251:13" pos:end="251:35">

            <return pos:start="251:13" pos:end="251:35">return <expr pos:start="251:20" pos:end="251:34"><call pos:start="251:20" pos:end="251:34"><name pos:start="251:20" pos:end="251:26">AVERROR</name><argument_list pos:start="251:27" pos:end="251:34">(<argument pos:start="251:28" pos:end="251:33"><expr pos:start="251:28" pos:end="251:33"><name pos:start="251:28" pos:end="251:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="255:9" pos:end="429:9"><if pos:start="255:9" pos:end="265:9">if <condition pos:start="255:12" pos:end="259:46">(<expr pos:start="255:13" pos:end="259:45"><operator pos:start="255:13" pos:end="255:13">!</operator><call pos:start="255:14" pos:end="255:55"><name pos:start="255:14" pos:end="255:19">strcmp</name><argument_list pos:start="255:20" pos:end="255:55">(<argument pos:start="255:21" pos:end="255:35"><expr pos:start="255:21" pos:end="255:35"><name pos:start="255:21" pos:end="255:35"><name pos:start="255:21" pos:end="255:25">track</name><operator pos:start="255:26" pos:end="255:27">-&gt;</operator><name pos:start="255:28" pos:end="255:35">codec_id</name></name></expr></argument>, <argument pos:start="255:38" pos:end="255:54"><expr pos:start="255:38" pos:end="255:54"><literal type="string" pos:start="255:38" pos:end="255:54">"V_MS/VFW/FOURCC"</literal></expr></argument>)</argument_list></call>

            <operator pos:start="257:13" pos:end="257:14">&amp;&amp;</operator> <name pos:start="257:16" pos:end="257:37"><name pos:start="257:16" pos:end="257:20">track</name><operator pos:start="257:21" pos:end="257:22">-&gt;</operator><name pos:start="257:23" pos:end="257:32">codec_priv</name><operator pos:start="257:33" pos:end="257:33">.</operator><name pos:start="257:34" pos:end="257:37">size</name></name> <operator pos:start="257:39" pos:end="257:40">&gt;=</operator> <literal type="number" pos:start="257:42" pos:end="257:43">40</literal>

            <operator pos:start="259:13" pos:end="259:14">&amp;&amp;</operator> <name pos:start="259:16" pos:end="259:37"><name pos:start="259:16" pos:end="259:20">track</name><operator pos:start="259:21" pos:end="259:22">-&gt;</operator><name pos:start="259:23" pos:end="259:32">codec_priv</name><operator pos:start="259:33" pos:end="259:33">.</operator><name pos:start="259:34" pos:end="259:37">data</name></name> <operator pos:start="259:39" pos:end="259:40">!=</operator> <name pos:start="259:42" pos:end="259:45">NULL</name></expr>)</condition> <block pos:start="259:48" pos:end="265:9">{<block_content pos:start="261:13" pos:end="263:73">

            <expr_stmt pos:start="261:13" pos:end="261:71"><expr pos:start="261:13" pos:end="261:70"><name pos:start="261:13" pos:end="261:31"><name pos:start="261:13" pos:end="261:17">track</name><operator pos:start="261:18" pos:end="261:19">-&gt;</operator><name pos:start="261:20" pos:end="261:24">video</name><operator pos:start="261:25" pos:end="261:25">.</operator><name pos:start="261:26" pos:end="261:31">fourcc</name></name> <operator pos:start="261:33" pos:end="261:33">=</operator> <call pos:start="261:35" pos:end="261:70"><name pos:start="261:35" pos:end="261:41">AV_RL32</name><argument_list pos:start="261:42" pos:end="261:70">(<argument pos:start="261:43" pos:end="261:69"><expr pos:start="261:43" pos:end="261:69"><name pos:start="261:43" pos:end="261:64"><name pos:start="261:43" pos:end="261:47">track</name><operator pos:start="261:48" pos:end="261:49">-&gt;</operator><name pos:start="261:50" pos:end="261:59">codec_priv</name><operator pos:start="261:60" pos:end="261:60">.</operator><name pos:start="261:61" pos:end="261:64">data</name></name> <operator pos:start="261:66" pos:end="261:66">+</operator> <literal type="number" pos:start="261:68" pos:end="261:69">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:73"><expr pos:start="263:13" pos:end="263:72"><name pos:start="263:13" pos:end="263:20">codec_id</name> <operator pos:start="263:22" pos:end="263:22">=</operator> <call pos:start="263:24" pos:end="263:72"><name pos:start="263:24" pos:end="263:35">codec_get_id</name><argument_list pos:start="263:36" pos:end="263:72">(<argument pos:start="263:37" pos:end="263:50"><expr pos:start="263:37" pos:end="263:50"><name pos:start="263:37" pos:end="263:50">codec_bmp_tags</name></expr></argument>, <argument pos:start="263:53" pos:end="263:71"><expr pos:start="263:53" pos:end="263:71"><name pos:start="263:53" pos:end="263:71"><name pos:start="263:53" pos:end="263:57">track</name><operator pos:start="263:58" pos:end="263:59">-&gt;</operator><name pos:start="263:60" pos:end="263:64">video</name><operator pos:start="263:65" pos:end="263:65">.</operator><name pos:start="263:66" pos:end="263:71">fourcc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="265:11" pos:end="275:9">else if <condition pos:start="265:19" pos:end="269:53">(<expr pos:start="265:20" pos:end="269:52"><operator pos:start="265:20" pos:end="265:20">!</operator><call pos:start="265:21" pos:end="265:55"><name pos:start="265:21" pos:end="265:26">strcmp</name><argument_list pos:start="265:27" pos:end="265:55">(<argument pos:start="265:28" pos:end="265:42"><expr pos:start="265:28" pos:end="265:42"><name pos:start="265:28" pos:end="265:42"><name pos:start="265:28" pos:end="265:32">track</name><operator pos:start="265:33" pos:end="265:34">-&gt;</operator><name pos:start="265:35" pos:end="265:42">codec_id</name></name></expr></argument>, <argument pos:start="265:45" pos:end="265:54"><expr pos:start="265:45" pos:end="265:54"><literal type="string" pos:start="265:45" pos:end="265:54">"A_MS/ACM"</literal></expr></argument>)</argument_list></call>

                   <operator pos:start="267:20" pos:end="267:21">&amp;&amp;</operator> <name pos:start="267:23" pos:end="267:44"><name pos:start="267:23" pos:end="267:27">track</name><operator pos:start="267:28" pos:end="267:29">-&gt;</operator><name pos:start="267:30" pos:end="267:39">codec_priv</name><operator pos:start="267:40" pos:end="267:40">.</operator><name pos:start="267:41" pos:end="267:44">size</name></name> <operator pos:start="267:46" pos:end="267:47">&gt;=</operator> <literal type="number" pos:start="267:49" pos:end="267:50">18</literal>

                   <operator pos:start="269:20" pos:end="269:21">&amp;&amp;</operator> <name pos:start="269:23" pos:end="269:44"><name pos:start="269:23" pos:end="269:27">track</name><operator pos:start="269:28" pos:end="269:29">-&gt;</operator><name pos:start="269:30" pos:end="269:39">codec_priv</name><operator pos:start="269:40" pos:end="269:40">.</operator><name pos:start="269:41" pos:end="269:44">data</name></name> <operator pos:start="269:46" pos:end="269:47">!=</operator> <name pos:start="269:49" pos:end="269:52">NULL</name></expr>)</condition> <block pos:start="269:55" pos:end="275:9">{<block_content pos:start="271:13" pos:end="273:57">

            <decl_stmt pos:start="271:13" pos:end="271:59"><decl pos:start="271:13" pos:end="271:58"><type pos:start="271:13" pos:end="271:20"><name pos:start="271:13" pos:end="271:20">uint16_t</name></type> <name pos:start="271:22" pos:end="271:24">tag</name> <init pos:start="271:26" pos:end="271:58">= <expr pos:start="271:28" pos:end="271:58"><call pos:start="271:28" pos:end="271:58"><name pos:start="271:28" pos:end="271:34">AV_RL16</name><argument_list pos:start="271:35" pos:end="271:58">(<argument pos:start="271:36" pos:end="271:57"><expr pos:start="271:36" pos:end="271:57"><name pos:start="271:36" pos:end="271:57"><name pos:start="271:36" pos:end="271:40">track</name><operator pos:start="271:41" pos:end="271:42">-&gt;</operator><name pos:start="271:43" pos:end="271:52">codec_priv</name><operator pos:start="271:53" pos:end="271:53">.</operator><name pos:start="271:54" pos:end="271:57">data</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:57"><expr pos:start="273:13" pos:end="273:56"><name pos:start="273:13" pos:end="273:20">codec_id</name> <operator pos:start="273:22" pos:end="273:22">=</operator> <call pos:start="273:24" pos:end="273:56"><name pos:start="273:24" pos:end="273:35">codec_get_id</name><argument_list pos:start="273:36" pos:end="273:56">(<argument pos:start="273:37" pos:end="273:50"><expr pos:start="273:37" pos:end="273:50"><name pos:start="273:37" pos:end="273:50">codec_wav_tags</name></expr></argument>, <argument pos:start="273:53" pos:end="273:55"><expr pos:start="273:53" pos:end="273:55"><name pos:start="273:53" pos:end="273:55">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="275:11" pos:end="285:9">else if <condition pos:start="275:19" pos:end="279:55">(<expr pos:start="275:20" pos:end="279:54"><operator pos:start="275:20" pos:end="275:20">!</operator><call pos:start="275:21" pos:end="275:58"><name pos:start="275:21" pos:end="275:26">strcmp</name><argument_list pos:start="275:27" pos:end="275:58">(<argument pos:start="275:28" pos:end="275:42"><expr pos:start="275:28" pos:end="275:42"><name pos:start="275:28" pos:end="275:42"><name pos:start="275:28" pos:end="275:32">track</name><operator pos:start="275:33" pos:end="275:34">-&gt;</operator><name pos:start="275:35" pos:end="275:42">codec_id</name></name></expr></argument>, <argument pos:start="275:45" pos:end="275:57"><expr pos:start="275:45" pos:end="275:57"><literal type="string" pos:start="275:45" pos:end="275:57">"V_QUICKTIME"</literal></expr></argument>)</argument_list></call>

                   <operator pos:start="277:20" pos:end="277:21">&amp;&amp;</operator> <operator pos:start="277:23" pos:end="277:23">(</operator><name pos:start="277:24" pos:end="277:45"><name pos:start="277:24" pos:end="277:28">track</name><operator pos:start="277:29" pos:end="277:30">-&gt;</operator><name pos:start="277:31" pos:end="277:40">codec_priv</name><operator pos:start="277:41" pos:end="277:41">.</operator><name pos:start="277:42" pos:end="277:45">size</name></name> <operator pos:start="277:47" pos:end="277:48">&gt;=</operator> <literal type="number" pos:start="277:50" pos:end="277:51">86</literal><operator pos:start="277:52" pos:end="277:52">)</operator>

                   <operator pos:start="279:20" pos:end="279:21">&amp;&amp;</operator> <operator pos:start="279:23" pos:end="279:23">(</operator><name pos:start="279:24" pos:end="279:45"><name pos:start="279:24" pos:end="279:28">track</name><operator pos:start="279:29" pos:end="279:30">-&gt;</operator><name pos:start="279:31" pos:end="279:40">codec_priv</name><operator pos:start="279:41" pos:end="279:41">.</operator><name pos:start="279:42" pos:end="279:45">data</name></name> <operator pos:start="279:47" pos:end="279:48">!=</operator> <name pos:start="279:50" pos:end="279:53">NULL</name><operator pos:start="279:54" pos:end="279:54">)</operator></expr>)</condition> <block pos:start="279:57" pos:end="285:9">{<block_content pos:start="281:13" pos:end="283:76">

            <expr_stmt pos:start="281:13" pos:end="281:66"><expr pos:start="281:13" pos:end="281:65"><name pos:start="281:13" pos:end="281:31"><name pos:start="281:13" pos:end="281:17">track</name><operator pos:start="281:18" pos:end="281:19">-&gt;</operator><name pos:start="281:20" pos:end="281:24">video</name><operator pos:start="281:25" pos:end="281:25">.</operator><name pos:start="281:26" pos:end="281:31">fourcc</name></name> <operator pos:start="281:33" pos:end="281:33">=</operator> <call pos:start="281:35" pos:end="281:65"><name pos:start="281:35" pos:end="281:41">AV_RL32</name><argument_list pos:start="281:42" pos:end="281:65">(<argument pos:start="281:43" pos:end="281:64"><expr pos:start="281:43" pos:end="281:64"><name pos:start="281:43" pos:end="281:64"><name pos:start="281:43" pos:end="281:47">track</name><operator pos:start="281:48" pos:end="281:49">-&gt;</operator><name pos:start="281:50" pos:end="281:59">codec_priv</name><operator pos:start="281:60" pos:end="281:60">.</operator><name pos:start="281:61" pos:end="281:64">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="283:13" pos:end="283:76"><expr pos:start="283:13" pos:end="283:75"><name pos:start="283:13" pos:end="283:20">codec_id</name><operator pos:start="283:21" pos:end="283:21">=</operator><call pos:start="283:22" pos:end="283:75"><name pos:start="283:22" pos:end="283:33">codec_get_id</name><argument_list pos:start="283:34" pos:end="283:75">(<argument pos:start="283:35" pos:end="283:53"><expr pos:start="283:35" pos:end="283:53"><name pos:start="283:35" pos:end="283:53">codec_movvideo_tags</name></expr></argument>, <argument pos:start="283:56" pos:end="283:74"><expr pos:start="283:56" pos:end="283:74"><name pos:start="283:56" pos:end="283:74"><name pos:start="283:56" pos:end="283:60">track</name><operator pos:start="283:61" pos:end="283:62">-&gt;</operator><name pos:start="283:63" pos:end="283:67">video</name><operator pos:start="283:68" pos:end="283:68">.</operator><name pos:start="283:69" pos:end="283:74">fourcc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="285:11" pos:end="297:9">else if <condition pos:start="285:19" pos:end="285:50">(<expr pos:start="285:20" pos:end="285:49"><name pos:start="285:20" pos:end="285:27">codec_id</name> <operator pos:start="285:29" pos:end="285:30">==</operator> <name pos:start="285:32" pos:end="285:49">CODEC_ID_PCM_S16BE</name></expr>)</condition> <block pos:start="285:52" pos:end="297:9">{<block_content pos:start="287:13" pos:end="295:13">

            <switch pos:start="287:13" pos:end="295:13">switch <condition pos:start="287:20" pos:end="287:42">(<expr pos:start="287:21" pos:end="287:41"><name pos:start="287:21" pos:end="287:41"><name pos:start="287:21" pos:end="287:25">track</name><operator pos:start="287:26" pos:end="287:27">-&gt;</operator><name pos:start="287:28" pos:end="287:32">audio</name><operator pos:start="287:33" pos:end="287:33">.</operator><name pos:start="287:34" pos:end="287:41">bitdepth</name></name></expr>)</condition> <block pos:start="287:44" pos:end="295:13">{<block_content pos:start="289:13" pos:end="293:60">

            <case pos:start="289:13" pos:end="289:20">case  <expr pos:start="289:19" pos:end="289:19"><literal type="number" pos:start="289:19" pos:end="289:19">8</literal></expr>:</case>  <expr_stmt pos:start="289:23" pos:end="289:49"><expr pos:start="289:23" pos:end="289:48"><name pos:start="289:23" pos:end="289:30">codec_id</name> <operator pos:start="289:32" pos:end="289:32">=</operator> <name pos:start="289:34" pos:end="289:48">CODEC_ID_PCM_U8</name></expr>;</expr_stmt>     <break pos:start="289:55" pos:end="289:60">break;</break>

            <case pos:start="291:13" pos:end="291:20">case <expr pos:start="291:18" pos:end="291:19"><literal type="number" pos:start="291:18" pos:end="291:19">24</literal></expr>:</case>  <expr_stmt pos:start="291:23" pos:end="291:52"><expr pos:start="291:23" pos:end="291:51"><name pos:start="291:23" pos:end="291:30">codec_id</name> <operator pos:start="291:32" pos:end="291:32">=</operator> <name pos:start="291:34" pos:end="291:51">CODEC_ID_PCM_S24BE</name></expr>;</expr_stmt>  <break pos:start="291:55" pos:end="291:60">break;</break>

            <case pos:start="293:13" pos:end="293:20">case <expr pos:start="293:18" pos:end="293:19"><literal type="number" pos:start="293:18" pos:end="293:19">32</literal></expr>:</case>  <expr_stmt pos:start="293:23" pos:end="293:52"><expr pos:start="293:23" pos:end="293:51"><name pos:start="293:23" pos:end="293:30">codec_id</name> <operator pos:start="293:32" pos:end="293:32">=</operator> <name pos:start="293:34" pos:end="293:51">CODEC_ID_PCM_S32BE</name></expr>;</expr_stmt>  <break pos:start="293:55" pos:end="293:60">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <if type="elseif" pos:start="297:11" pos:end="309:9">else if <condition pos:start="297:19" pos:end="297:50">(<expr pos:start="297:20" pos:end="297:49"><name pos:start="297:20" pos:end="297:27">codec_id</name> <operator pos:start="297:29" pos:end="297:30">==</operator> <name pos:start="297:32" pos:end="297:49">CODEC_ID_PCM_S16LE</name></expr>)</condition> <block pos:start="297:52" pos:end="309:9">{<block_content pos:start="299:13" pos:end="307:13">

            <switch pos:start="299:13" pos:end="307:13">switch <condition pos:start="299:20" pos:end="299:42">(<expr pos:start="299:21" pos:end="299:41"><name pos:start="299:21" pos:end="299:41"><name pos:start="299:21" pos:end="299:25">track</name><operator pos:start="299:26" pos:end="299:27">-&gt;</operator><name pos:start="299:28" pos:end="299:32">audio</name><operator pos:start="299:33" pos:end="299:33">.</operator><name pos:start="299:34" pos:end="299:41">bitdepth</name></name></expr>)</condition> <block pos:start="299:44" pos:end="307:13">{<block_content pos:start="301:13" pos:end="305:60">

            <case pos:start="301:13" pos:end="301:20">case  <expr pos:start="301:19" pos:end="301:19"><literal type="number" pos:start="301:19" pos:end="301:19">8</literal></expr>:</case>  <expr_stmt pos:start="301:23" pos:end="301:49"><expr pos:start="301:23" pos:end="301:48"><name pos:start="301:23" pos:end="301:30">codec_id</name> <operator pos:start="301:32" pos:end="301:32">=</operator> <name pos:start="301:34" pos:end="301:48">CODEC_ID_PCM_U8</name></expr>;</expr_stmt>     <break pos:start="301:55" pos:end="301:60">break;</break>

            <case pos:start="303:13" pos:end="303:20">case <expr pos:start="303:18" pos:end="303:19"><literal type="number" pos:start="303:18" pos:end="303:19">24</literal></expr>:</case>  <expr_stmt pos:start="303:23" pos:end="303:52"><expr pos:start="303:23" pos:end="303:51"><name pos:start="303:23" pos:end="303:30">codec_id</name> <operator pos:start="303:32" pos:end="303:32">=</operator> <name pos:start="303:34" pos:end="303:51">CODEC_ID_PCM_S24LE</name></expr>;</expr_stmt>  <break pos:start="303:55" pos:end="303:60">break;</break>

            <case pos:start="305:13" pos:end="305:20">case <expr pos:start="305:18" pos:end="305:19"><literal type="number" pos:start="305:18" pos:end="305:19">32</literal></expr>:</case>  <expr_stmt pos:start="305:23" pos:end="305:52"><expr pos:start="305:23" pos:end="305:51"><name pos:start="305:23" pos:end="305:30">codec_id</name> <operator pos:start="305:32" pos:end="305:32">=</operator> <name pos:start="305:34" pos:end="305:51">CODEC_ID_PCM_S32LE</name></expr>;</expr_stmt>  <break pos:start="305:55" pos:end="305:60">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <if type="elseif" pos:start="309:11" pos:end="313:9">else if <condition pos:start="309:19" pos:end="309:77">(<expr pos:start="309:20" pos:end="309:76"><name pos:start="309:20" pos:end="309:27">codec_id</name><operator pos:start="309:28" pos:end="309:29">==</operator><name pos:start="309:30" pos:end="309:47">CODEC_ID_PCM_F32LE</name> <operator pos:start="309:49" pos:end="309:50">&amp;&amp;</operator> <name pos:start="309:52" pos:end="309:72"><name pos:start="309:52" pos:end="309:56">track</name><operator pos:start="309:57" pos:end="309:58">-&gt;</operator><name pos:start="309:59" pos:end="309:63">audio</name><operator pos:start="309:64" pos:end="309:64">.</operator><name pos:start="309:65" pos:end="309:72">bitdepth</name></name><operator pos:start="309:73" pos:end="309:74">==</operator><literal type="number" pos:start="309:75" pos:end="309:76">64</literal></expr>)</condition> <block pos:start="309:79" pos:end="313:9">{<block_content pos:start="311:13" pos:end="311:42">

            <expr_stmt pos:start="311:13" pos:end="311:42"><expr pos:start="311:13" pos:end="311:41"><name pos:start="311:13" pos:end="311:20">codec_id</name> <operator pos:start="311:22" pos:end="311:22">=</operator> <name pos:start="311:24" pos:end="311:41">CODEC_ID_PCM_F64LE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="313:11" pos:end="345:9">else if <condition pos:start="313:19" pos:end="313:71">(<expr pos:start="313:20" pos:end="313:70"><name pos:start="313:20" pos:end="313:27">codec_id</name> <operator pos:start="313:29" pos:end="313:30">==</operator> <name pos:start="313:32" pos:end="313:43">CODEC_ID_AAC</name> <operator pos:start="313:45" pos:end="313:46">&amp;&amp;</operator> <operator pos:start="313:48" pos:end="313:48">!</operator><name pos:start="313:49" pos:end="313:70"><name pos:start="313:49" pos:end="313:53">track</name><operator pos:start="313:54" pos:end="313:55">-&gt;</operator><name pos:start="313:56" pos:end="313:65">codec_priv</name><operator pos:start="313:66" pos:end="313:66">.</operator><name pos:start="313:67" pos:end="313:70">size</name></name></expr>)</condition> <block pos:start="313:73" pos:end="345:9">{<block_content pos:start="315:13" pos:end="343:35">

            <decl_stmt pos:start="315:13" pos:end="315:64"><decl pos:start="315:13" pos:end="315:63"><type pos:start="315:13" pos:end="315:15"><name pos:start="315:13" pos:end="315:15">int</name></type> <name pos:start="315:17" pos:end="315:23">profile</name> <init pos:start="315:25" pos:end="315:63">= <expr pos:start="315:27" pos:end="315:63"><call pos:start="315:27" pos:end="315:63"><name pos:start="315:27" pos:end="315:46">matroska_aac_profile</name><argument_list pos:start="315:47" pos:end="315:63">(<argument pos:start="315:48" pos:end="315:62"><expr pos:start="315:48" pos:end="315:62"><name pos:start="315:48" pos:end="315:62"><name pos:start="315:48" pos:end="315:52">track</name><operator pos:start="315:53" pos:end="315:54">-&gt;</operator><name pos:start="315:55" pos:end="315:62">codec_id</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="317:13" pos:end="317:64"><decl pos:start="317:13" pos:end="317:63"><type pos:start="317:13" pos:end="317:15"><name pos:start="317:13" pos:end="317:15">int</name></type> <name pos:start="317:17" pos:end="317:19">sri</name> <init pos:start="317:21" pos:end="317:63">= <expr pos:start="317:23" pos:end="317:63"><call pos:start="317:23" pos:end="317:63"><name pos:start="317:23" pos:end="317:38">matroska_aac_sri</name><argument_list pos:start="317:39" pos:end="317:63">(<argument pos:start="317:40" pos:end="317:62"><expr pos:start="317:40" pos:end="317:62"><name pos:start="317:40" pos:end="317:62"><name pos:start="317:40" pos:end="317:44">track</name><operator pos:start="317:45" pos:end="317:46">-&gt;</operator><name pos:start="317:47" pos:end="317:51">audio</name><operator pos:start="317:52" pos:end="317:52">.</operator><name pos:start="317:53" pos:end="317:62">samplerate</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="319:13" pos:end="319:37"><expr pos:start="319:13" pos:end="319:36"><name pos:start="319:13" pos:end="319:21">extradata</name> <operator pos:start="319:23" pos:end="319:23">=</operator> <call pos:start="319:25" pos:end="319:36"><name pos:start="319:25" pos:end="319:33">av_malloc</name><argument_list pos:start="319:34" pos:end="319:36">(<argument pos:start="319:35" pos:end="319:35"><expr pos:start="319:35" pos:end="319:35"><literal type="number" pos:start="319:35" pos:end="319:35">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="321:13" pos:end="323:39"><if pos:start="321:13" pos:end="323:39">if <condition pos:start="321:16" pos:end="321:34">(<expr pos:start="321:17" pos:end="321:33"><name pos:start="321:17" pos:end="321:25">extradata</name> <operator pos:start="321:27" pos:end="321:28">==</operator> <name pos:start="321:30" pos:end="321:33">NULL</name></expr>)</condition><block type="pseudo" pos:start="323:17" pos:end="323:39"><block_content pos:start="323:17" pos:end="323:39">

                <return pos:start="323:17" pos:end="323:39">return <expr pos:start="323:24" pos:end="323:38"><call pos:start="323:24" pos:end="323:38"><name pos:start="323:24" pos:end="323:30">AVERROR</name><argument_list pos:start="323:31" pos:end="323:38">(<argument pos:start="323:32" pos:end="323:37"><expr pos:start="323:32" pos:end="323:37"><name pos:start="323:32" pos:end="323:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="325:13" pos:end="325:62"><expr pos:start="325:13" pos:end="325:61"><name pos:start="325:13" pos:end="325:24"><name pos:start="325:13" pos:end="325:21">extradata</name><index pos:start="325:22" pos:end="325:24">[<expr pos:start="325:23" pos:end="325:23"><literal type="number" pos:start="325:23" pos:end="325:23">0</literal></expr>]</index></name> <operator pos:start="325:26" pos:end="325:26">=</operator> <operator pos:start="325:28" pos:end="325:28">(</operator><name pos:start="325:29" pos:end="325:35">profile</name> <operator pos:start="325:37" pos:end="325:38">&lt;&lt;</operator> <literal type="number" pos:start="325:40" pos:end="325:40">3</literal><operator pos:start="325:41" pos:end="325:41">)</operator> <operator pos:start="325:43" pos:end="325:43">|</operator> <operator pos:start="325:45" pos:end="325:45">(</operator><operator pos:start="325:46" pos:end="325:46">(</operator><name pos:start="325:47" pos:end="325:49">sri</name><operator pos:start="325:50" pos:end="325:50">&amp;</operator><literal type="number" pos:start="325:51" pos:end="325:54">0x0E</literal><operator pos:start="325:55" pos:end="325:55">)</operator> <operator pos:start="325:57" pos:end="325:58">&gt;&gt;</operator> <literal type="number" pos:start="325:60" pos:end="325:60">1</literal><operator pos:start="325:61" pos:end="325:61">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="327:13" pos:end="327:74"><expr pos:start="327:13" pos:end="327:73"><name pos:start="327:13" pos:end="327:24"><name pos:start="327:13" pos:end="327:21">extradata</name><index pos:start="327:22" pos:end="327:24">[<expr pos:start="327:23" pos:end="327:23"><literal type="number" pos:start="327:23" pos:end="327:23">1</literal></expr>]</index></name> <operator pos:start="327:26" pos:end="327:26">=</operator> <operator pos:start="327:28" pos:end="327:28">(</operator><operator pos:start="327:29" pos:end="327:29">(</operator><name pos:start="327:30" pos:end="327:32">sri</name><operator pos:start="327:33" pos:end="327:33">&amp;</operator><literal type="number" pos:start="327:34" pos:end="327:37">0x01</literal><operator pos:start="327:38" pos:end="327:38">)</operator> <operator pos:start="327:40" pos:end="327:41">&lt;&lt;</operator> <literal type="number" pos:start="327:43" pos:end="327:43">7</literal><operator pos:start="327:44" pos:end="327:44">)</operator> <operator pos:start="327:46" pos:end="327:46">|</operator> <operator pos:start="327:48" pos:end="327:48">(</operator><name pos:start="327:49" pos:end="327:69"><name pos:start="327:49" pos:end="327:53">track</name><operator pos:start="327:54" pos:end="327:55">-&gt;</operator><name pos:start="327:56" pos:end="327:60">audio</name><operator pos:start="327:61" pos:end="327:61">.</operator><name pos:start="327:62" pos:end="327:69">channels</name></name><operator pos:start="327:70" pos:end="327:71">&lt;&lt;</operator><literal type="number" pos:start="327:72" pos:end="327:72">3</literal><operator pos:start="327:73" pos:end="327:73">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="329:13" pos:end="343:35"><if pos:start="329:13" pos:end="341:13">if <condition pos:start="329:16" pos:end="329:47">(<expr pos:start="329:17" pos:end="329:46"><call pos:start="329:17" pos:end="329:46"><name pos:start="329:17" pos:end="329:22">strstr</name><argument_list pos:start="329:23" pos:end="329:46">(<argument pos:start="329:24" pos:end="329:38"><expr pos:start="329:24" pos:end="329:38"><name pos:start="329:24" pos:end="329:38"><name pos:start="329:24" pos:end="329:28">track</name><operator pos:start="329:29" pos:end="329:30">-&gt;</operator><name pos:start="329:31" pos:end="329:38">codec_id</name></name></expr></argument>, <argument pos:start="329:41" pos:end="329:45"><expr pos:start="329:41" pos:end="329:45"><literal type="string" pos:start="329:41" pos:end="329:45">"SBR"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="329:49" pos:end="341:13">{<block_content pos:start="331:17" pos:end="339:35">

                <expr_stmt pos:start="331:17" pos:end="331:68"><expr pos:start="331:17" pos:end="331:67"><name pos:start="331:17" pos:end="331:19">sri</name> <operator pos:start="331:21" pos:end="331:21">=</operator> <call pos:start="331:23" pos:end="331:67"><name pos:start="331:23" pos:end="331:38">matroska_aac_sri</name><argument_list pos:start="331:39" pos:end="331:67">(<argument pos:start="331:40" pos:end="331:66"><expr pos:start="331:40" pos:end="331:66"><name pos:start="331:40" pos:end="331:66"><name pos:start="331:40" pos:end="331:44">track</name><operator pos:start="331:45" pos:end="331:46">-&gt;</operator><name pos:start="331:47" pos:end="331:51">audio</name><operator pos:start="331:52" pos:end="331:52">.</operator><name pos:start="331:53" pos:end="331:66">out_samplerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="333:17" pos:end="333:36"><expr pos:start="333:17" pos:end="333:35"><name pos:start="333:17" pos:end="333:28"><name pos:start="333:17" pos:end="333:25">extradata</name><index pos:start="333:26" pos:end="333:28">[<expr pos:start="333:27" pos:end="333:27"><literal type="number" pos:start="333:27" pos:end="333:27">2</literal></expr>]</index></name> <operator pos:start="333:30" pos:end="333:30">=</operator> <literal type="number" pos:start="333:32" pos:end="333:35">0x56</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="335:17" pos:end="335:36"><expr pos:start="335:17" pos:end="335:35"><name pos:start="335:17" pos:end="335:28"><name pos:start="335:17" pos:end="335:25">extradata</name><index pos:start="335:26" pos:end="335:28">[<expr pos:start="335:27" pos:end="335:27"><literal type="number" pos:start="335:27" pos:end="335:27">3</literal></expr>]</index></name> <operator pos:start="335:30" pos:end="335:30">=</operator> <literal type="number" pos:start="335:32" pos:end="335:35">0xE5</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="337:17" pos:end="337:47"><expr pos:start="337:17" pos:end="337:46"><name pos:start="337:17" pos:end="337:28"><name pos:start="337:17" pos:end="337:25">extradata</name><index pos:start="337:26" pos:end="337:28">[<expr pos:start="337:27" pos:end="337:27"><literal type="number" pos:start="337:27" pos:end="337:27">4</literal></expr>]</index></name> <operator pos:start="337:30" pos:end="337:30">=</operator> <literal type="number" pos:start="337:32" pos:end="337:35">0x80</literal> <operator pos:start="337:37" pos:end="337:37">|</operator> <operator pos:start="337:39" pos:end="337:39">(</operator><name pos:start="337:40" pos:end="337:42">sri</name><operator pos:start="337:43" pos:end="337:44">&lt;&lt;</operator><literal type="number" pos:start="337:45" pos:end="337:45">3</literal><operator pos:start="337:46" pos:end="337:46">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="339:17" pos:end="339:35"><expr pos:start="339:17" pos:end="339:34"><name pos:start="339:17" pos:end="339:30">extradata_size</name> <operator pos:start="339:32" pos:end="339:32">=</operator> <literal type="number" pos:start="339:34" pos:end="339:34">5</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="341:15" pos:end="343:35">else<block type="pseudo" pos:start="343:17" pos:end="343:35"><block_content pos:start="343:17" pos:end="343:35">

                <expr_stmt pos:start="343:17" pos:end="343:35"><expr pos:start="343:17" pos:end="343:34"><name pos:start="343:17" pos:end="343:30">extradata_size</name> <operator pos:start="343:32" pos:end="343:32">=</operator> <literal type="number" pos:start="343:34" pos:end="343:34">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="345:11" pos:end="373:9">else if <condition pos:start="345:19" pos:end="345:44">(<expr pos:start="345:20" pos:end="345:43"><name pos:start="345:20" pos:end="345:27">codec_id</name> <operator pos:start="345:29" pos:end="345:30">==</operator> <name pos:start="345:32" pos:end="345:43">CODEC_ID_TTA</name></expr>)</condition> <block pos:start="345:46" pos:end="373:9">{<block_content pos:start="347:13" pos:end="371:80">

            <decl_stmt pos:start="347:13" pos:end="347:28"><decl pos:start="347:13" pos:end="347:27"><type pos:start="347:13" pos:end="347:25"><name pos:start="347:13" pos:end="347:25">ByteIOContext</name></type> <name pos:start="347:27" pos:end="347:27">b</name></decl>;</decl_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:32"><expr pos:start="349:13" pos:end="349:31"><name pos:start="349:13" pos:end="349:26">extradata_size</name> <operator pos:start="349:28" pos:end="349:28">=</operator> <literal type="number" pos:start="349:30" pos:end="349:31">30</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:51"><expr pos:start="351:13" pos:end="351:50"><name pos:start="351:13" pos:end="351:21">extradata</name> <operator pos:start="351:23" pos:end="351:23">=</operator> <call pos:start="351:25" pos:end="351:50"><name pos:start="351:25" pos:end="351:34">av_mallocz</name><argument_list pos:start="351:35" pos:end="351:50">(<argument pos:start="351:36" pos:end="351:49"><expr pos:start="351:36" pos:end="351:49"><name pos:start="351:36" pos:end="351:49">extradata_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="353:13" pos:end="355:39"><if pos:start="353:13" pos:end="355:39">if <condition pos:start="353:16" pos:end="353:34">(<expr pos:start="353:17" pos:end="353:33"><name pos:start="353:17" pos:end="353:25">extradata</name> <operator pos:start="353:27" pos:end="353:28">==</operator> <name pos:start="353:30" pos:end="353:33">NULL</name></expr>)</condition><block type="pseudo" pos:start="355:17" pos:end="355:39"><block_content pos:start="355:17" pos:end="355:39">

                <return pos:start="355:17" pos:end="355:39">return <expr pos:start="355:24" pos:end="355:38"><call pos:start="355:24" pos:end="355:38"><name pos:start="355:24" pos:end="355:30">AVERROR</name><argument_list pos:start="355:31" pos:end="355:38">(<argument pos:start="355:32" pos:end="355:37"><expr pos:start="355:32" pos:end="355:37"><name pos:start="355:32" pos:end="355:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="357:13" pos:end="359:50"><expr pos:start="357:13" pos:end="359:49"><call pos:start="357:13" pos:end="359:49"><name pos:start="357:13" pos:end="357:25">init_put_byte</name><argument_list pos:start="357:26" pos:end="359:49">(<argument pos:start="357:27" pos:end="357:28"><expr pos:start="357:27" pos:end="357:28"><operator pos:start="357:27" pos:end="357:27">&amp;</operator><name pos:start="357:28" pos:end="357:28">b</name></expr></argument>, <argument pos:start="357:31" pos:end="357:39"><expr pos:start="357:31" pos:end="357:39"><name pos:start="357:31" pos:end="357:39">extradata</name></expr></argument>, <argument pos:start="357:42" pos:end="357:55"><expr pos:start="357:42" pos:end="357:55"><name pos:start="357:42" pos:end="357:55">extradata_size</name></expr></argument>, <argument pos:start="357:58" pos:end="357:58"><expr pos:start="357:58" pos:end="357:58"><literal type="number" pos:start="357:58" pos:end="357:58">1</literal></expr></argument>,

                          <argument pos:start="359:27" pos:end="359:30"><expr pos:start="359:27" pos:end="359:30"><name pos:start="359:27" pos:end="359:30">NULL</name></expr></argument>, <argument pos:start="359:33" pos:end="359:36"><expr pos:start="359:33" pos:end="359:36"><name pos:start="359:33" pos:end="359:36">NULL</name></expr></argument>, <argument pos:start="359:39" pos:end="359:42"><expr pos:start="359:39" pos:end="359:42"><name pos:start="359:39" pos:end="359:42">NULL</name></expr></argument>, <argument pos:start="359:45" pos:end="359:48"><expr pos:start="359:45" pos:end="359:48"><name pos:start="359:45" pos:end="359:48">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="361:13" pos:end="361:38"><expr pos:start="361:13" pos:end="361:37"><call pos:start="361:13" pos:end="361:37"><name pos:start="361:13" pos:end="361:22">put_buffer</name><argument_list pos:start="361:23" pos:end="361:37">(<argument pos:start="361:24" pos:end="361:25"><expr pos:start="361:24" pos:end="361:25"><operator pos:start="361:24" pos:end="361:24">&amp;</operator><name pos:start="361:25" pos:end="361:25">b</name></expr></argument>, <argument pos:start="361:28" pos:end="361:33"><expr pos:start="361:28" pos:end="361:33"><literal type="string" pos:start="361:28" pos:end="361:33">"TTA1"</literal></expr></argument>, <argument pos:start="361:36" pos:end="361:36"><expr pos:start="361:36" pos:end="361:36"><literal type="number" pos:start="361:36" pos:end="361:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:28"><expr pos:start="363:13" pos:end="363:27"><call pos:start="363:13" pos:end="363:27"><name pos:start="363:13" pos:end="363:20">put_le16</name><argument_list pos:start="363:21" pos:end="363:27">(<argument pos:start="363:22" pos:end="363:23"><expr pos:start="363:22" pos:end="363:23"><operator pos:start="363:22" pos:end="363:22">&amp;</operator><name pos:start="363:23" pos:end="363:23">b</name></expr></argument>, <argument pos:start="363:26" pos:end="363:26"><expr pos:start="363:26" pos:end="363:26"><literal type="number" pos:start="363:26" pos:end="363:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="365:13" pos:end="365:48"><expr pos:start="365:13" pos:end="365:47"><call pos:start="365:13" pos:end="365:47"><name pos:start="365:13" pos:end="365:20">put_le16</name><argument_list pos:start="365:21" pos:end="365:47">(<argument pos:start="365:22" pos:end="365:23"><expr pos:start="365:22" pos:end="365:23"><operator pos:start="365:22" pos:end="365:22">&amp;</operator><name pos:start="365:23" pos:end="365:23">b</name></expr></argument>, <argument pos:start="365:26" pos:end="365:46"><expr pos:start="365:26" pos:end="365:46"><name pos:start="365:26" pos:end="365:46"><name pos:start="365:26" pos:end="365:30">track</name><operator pos:start="365:31" pos:end="365:32">-&gt;</operator><name pos:start="365:33" pos:end="365:37">audio</name><operator pos:start="365:38" pos:end="365:38">.</operator><name pos:start="365:39" pos:end="365:46">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="367:13" pos:end="367:48"><expr pos:start="367:13" pos:end="367:47"><call pos:start="367:13" pos:end="367:47"><name pos:start="367:13" pos:end="367:20">put_le16</name><argument_list pos:start="367:21" pos:end="367:47">(<argument pos:start="367:22" pos:end="367:23"><expr pos:start="367:22" pos:end="367:23"><operator pos:start="367:22" pos:end="367:22">&amp;</operator><name pos:start="367:23" pos:end="367:23">b</name></expr></argument>, <argument pos:start="367:26" pos:end="367:46"><expr pos:start="367:26" pos:end="367:46"><name pos:start="367:26" pos:end="367:46"><name pos:start="367:26" pos:end="367:30">track</name><operator pos:start="367:31" pos:end="367:32">-&gt;</operator><name pos:start="367:33" pos:end="367:37">audio</name><operator pos:start="367:38" pos:end="367:38">.</operator><name pos:start="367:39" pos:end="367:46">bitdepth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:54"><expr pos:start="369:13" pos:end="369:53"><call pos:start="369:13" pos:end="369:53"><name pos:start="369:13" pos:end="369:20">put_le32</name><argument_list pos:start="369:21" pos:end="369:53">(<argument pos:start="369:22" pos:end="369:23"><expr pos:start="369:22" pos:end="369:23"><operator pos:start="369:22" pos:end="369:22">&amp;</operator><name pos:start="369:23" pos:end="369:23">b</name></expr></argument>, <argument pos:start="369:26" pos:end="369:52"><expr pos:start="369:26" pos:end="369:52"><name pos:start="369:26" pos:end="369:52"><name pos:start="369:26" pos:end="369:30">track</name><operator pos:start="369:31" pos:end="369:32">-&gt;</operator><name pos:start="369:33" pos:end="369:37">audio</name><operator pos:start="369:38" pos:end="369:38">.</operator><name pos:start="369:39" pos:end="369:52">out_samplerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="371:13" pos:end="371:80"><expr pos:start="371:13" pos:end="371:79"><call pos:start="371:13" pos:end="371:79"><name pos:start="371:13" pos:end="371:20">put_le32</name><argument_list pos:start="371:21" pos:end="371:79">(<argument pos:start="371:22" pos:end="371:23"><expr pos:start="371:22" pos:end="371:23"><operator pos:start="371:22" pos:end="371:22">&amp;</operator><name pos:start="371:23" pos:end="371:23">b</name></expr></argument>, <argument pos:start="371:26" pos:end="371:78"><expr pos:start="371:26" pos:end="371:78"><name pos:start="371:26" pos:end="371:48"><name pos:start="371:26" pos:end="371:33">matroska</name><operator pos:start="371:34" pos:end="371:35">-&gt;</operator><name pos:start="371:36" pos:end="371:38">ctx</name><operator pos:start="371:39" pos:end="371:40">-&gt;</operator><name pos:start="371:41" pos:end="371:48">duration</name></name> <operator pos:start="371:50" pos:end="371:50">*</operator> <name pos:start="371:52" pos:end="371:78"><name pos:start="371:52" pos:end="371:56">track</name><operator pos:start="371:57" pos:end="371:58">-&gt;</operator><name pos:start="371:59" pos:end="371:63">audio</name><operator pos:start="371:64" pos:end="371:64">.</operator><name pos:start="371:65" pos:end="371:78">out_samplerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="373:11" pos:end="381:9">else if <condition pos:start="373:19" pos:end="375:74">(<expr pos:start="373:20" pos:end="375:73"><name pos:start="373:20" pos:end="373:27">codec_id</name> <operator pos:start="373:29" pos:end="373:30">==</operator> <name pos:start="373:32" pos:end="373:44">CODEC_ID_RV10</name> <operator pos:start="373:46" pos:end="373:47">||</operator> <name pos:start="373:49" pos:end="373:56">codec_id</name> <operator pos:start="373:58" pos:end="373:59">==</operator> <name pos:start="373:61" pos:end="373:73">CODEC_ID_RV20</name> <operator pos:start="373:75" pos:end="373:76">||</operator>

                   <name pos:start="375:20" pos:end="375:27">codec_id</name> <operator pos:start="375:29" pos:end="375:30">==</operator> <name pos:start="375:32" pos:end="375:44">CODEC_ID_RV30</name> <operator pos:start="375:46" pos:end="375:47">||</operator> <name pos:start="375:49" pos:end="375:56">codec_id</name> <operator pos:start="375:58" pos:end="375:59">==</operator> <name pos:start="375:61" pos:end="375:73">CODEC_ID_RV40</name></expr>)</condition> <block pos:start="375:76" pos:end="381:9">{<block_content pos:start="377:13" pos:end="379:55">

            <expr_stmt pos:start="377:13" pos:end="377:34"><expr pos:start="377:13" pos:end="377:33"><name pos:start="377:13" pos:end="377:28">extradata_offset</name> <operator pos:start="377:30" pos:end="377:30">=</operator> <literal type="number" pos:start="377:32" pos:end="377:33">26</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="379:13" pos:end="379:55"><expr pos:start="379:13" pos:end="379:54"><name pos:start="379:13" pos:end="379:34"><name pos:start="379:13" pos:end="379:17">track</name><operator pos:start="379:18" pos:end="379:19">-&gt;</operator><name pos:start="379:20" pos:end="379:29">codec_priv</name><operator pos:start="379:30" pos:end="379:30">.</operator><name pos:start="379:31" pos:end="379:34">size</name></name> <operator pos:start="379:36" pos:end="379:37">-=</operator> <name pos:start="379:39" pos:end="379:54">extradata_offset</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="381:11" pos:end="387:9">else if <condition pos:start="381:19" pos:end="381:47">(<expr pos:start="381:20" pos:end="381:46"><name pos:start="381:20" pos:end="381:27">codec_id</name> <operator pos:start="381:29" pos:end="381:30">==</operator> <name pos:start="381:32" pos:end="381:46">CODEC_ID_RA_144</name></expr>)</condition> <block pos:start="381:49" pos:end="387:9">{<block_content pos:start="383:13" pos:end="385:38">

            <expr_stmt pos:start="383:13" pos:end="383:47"><expr pos:start="383:13" pos:end="383:46"><name pos:start="383:13" pos:end="383:39"><name pos:start="383:13" pos:end="383:17">track</name><operator pos:start="383:18" pos:end="383:19">-&gt;</operator><name pos:start="383:20" pos:end="383:24">audio</name><operator pos:start="383:25" pos:end="383:25">.</operator><name pos:start="383:26" pos:end="383:39">out_samplerate</name></name> <operator pos:start="383:41" pos:end="383:41">=</operator> <literal type="number" pos:start="383:43" pos:end="383:46">8000</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="385:13" pos:end="385:38"><expr pos:start="385:13" pos:end="385:37"><name pos:start="385:13" pos:end="385:33"><name pos:start="385:13" pos:end="385:17">track</name><operator pos:start="385:18" pos:end="385:19">-&gt;</operator><name pos:start="385:20" pos:end="385:24">audio</name><operator pos:start="385:25" pos:end="385:25">.</operator><name pos:start="385:26" pos:end="385:33">channels</name></name> <operator pos:start="385:35" pos:end="385:35">=</operator> <literal type="number" pos:start="385:37" pos:end="385:37">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="387:11" pos:end="429:9">else if <condition pos:start="387:19" pos:end="389:47">(<expr pos:start="387:20" pos:end="389:46"><name pos:start="387:20" pos:end="387:27">codec_id</name> <operator pos:start="387:29" pos:end="387:30">==</operator> <name pos:start="387:32" pos:end="387:46">CODEC_ID_RA_288</name> <operator pos:start="387:48" pos:end="387:49">||</operator> <name pos:start="387:51" pos:end="387:58">codec_id</name> <operator pos:start="387:60" pos:end="387:61">==</operator> <name pos:start="387:63" pos:end="387:75">CODEC_ID_COOK</name> <operator pos:start="387:77" pos:end="387:78">||</operator>

                   <name pos:start="389:20" pos:end="389:27">codec_id</name> <operator pos:start="389:29" pos:end="389:30">==</operator> <name pos:start="389:32" pos:end="389:46">CODEC_ID_ATRAC3</name></expr>)</condition> <block pos:start="389:49" pos:end="429:9">{<block_content pos:start="391:13" pos:end="427:13">

            <decl_stmt pos:start="391:13" pos:end="391:28"><decl pos:start="391:13" pos:end="391:27"><type pos:start="391:13" pos:end="391:25"><name pos:start="391:13" pos:end="391:25">ByteIOContext</name></type> <name pos:start="391:27" pos:end="391:27">b</name></decl>;</decl_stmt>



            <expr_stmt pos:start="395:13" pos:end="397:53"><expr pos:start="395:13" pos:end="397:52"><call pos:start="395:13" pos:end="397:52"><name pos:start="395:13" pos:end="395:25">init_put_byte</name><argument_list pos:start="395:26" pos:end="397:52">(<argument pos:start="395:27" pos:end="395:28"><expr pos:start="395:27" pos:end="395:28"><operator pos:start="395:27" pos:end="395:27">&amp;</operator><name pos:start="395:28" pos:end="395:28">b</name></expr></argument>, <argument pos:start="395:31" pos:end="395:52"><expr pos:start="395:31" pos:end="395:52"><name pos:start="395:31" pos:end="395:52"><name pos:start="395:31" pos:end="395:35">track</name><operator pos:start="395:36" pos:end="395:37">-&gt;</operator><name pos:start="395:38" pos:end="395:47">codec_priv</name><operator pos:start="395:48" pos:end="395:48">.</operator><name pos:start="395:49" pos:end="395:52">data</name></name></expr></argument>,<argument pos:start="395:54" pos:end="395:75"><expr pos:start="395:54" pos:end="395:75"><name pos:start="395:54" pos:end="395:75"><name pos:start="395:54" pos:end="395:58">track</name><operator pos:start="395:59" pos:end="395:60">-&gt;</operator><name pos:start="395:61" pos:end="395:70">codec_priv</name><operator pos:start="395:71" pos:end="395:71">.</operator><name pos:start="395:72" pos:end="395:75">size</name></name></expr></argument>,

                          <argument pos:start="397:27" pos:end="397:27"><expr pos:start="397:27" pos:end="397:27"><literal type="number" pos:start="397:27" pos:end="397:27">0</literal></expr></argument>, <argument pos:start="397:30" pos:end="397:33"><expr pos:start="397:30" pos:end="397:33"><name pos:start="397:30" pos:end="397:33">NULL</name></expr></argument>, <argument pos:start="397:36" pos:end="397:39"><expr pos:start="397:36" pos:end="397:39"><name pos:start="397:36" pos:end="397:39">NULL</name></expr></argument>, <argument pos:start="397:42" pos:end="397:45"><expr pos:start="397:42" pos:end="397:45"><name pos:start="397:42" pos:end="397:45">NULL</name></expr></argument>, <argument pos:start="397:48" pos:end="397:51"><expr pos:start="397:48" pos:end="397:51"><name pos:start="397:48" pos:end="397:51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="399:13" pos:end="399:30"><expr pos:start="399:13" pos:end="399:29"><call pos:start="399:13" pos:end="399:29"><name pos:start="399:13" pos:end="399:21">url_fskip</name><argument_list pos:start="399:22" pos:end="399:29">(<argument pos:start="399:23" pos:end="399:24"><expr pos:start="399:23" pos:end="399:24"><operator pos:start="399:23" pos:end="399:23">&amp;</operator><name pos:start="399:24" pos:end="399:24">b</name></expr></argument>, <argument pos:start="399:27" pos:end="399:28"><expr pos:start="399:27" pos:end="399:28"><literal type="number" pos:start="399:27" pos:end="399:28">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="401:13" pos:end="401:56"><expr pos:start="401:13" pos:end="401:55"><name pos:start="401:13" pos:end="401:40"><name pos:start="401:13" pos:end="401:17">track</name><operator pos:start="401:18" pos:end="401:19">-&gt;</operator><name pos:start="401:20" pos:end="401:24">audio</name><operator pos:start="401:25" pos:end="401:25">.</operator><name pos:start="401:26" pos:end="401:40">coded_framesize</name></name> <operator pos:start="401:42" pos:end="401:42">=</operator> <call pos:start="401:44" pos:end="401:55"><name pos:start="401:44" pos:end="401:51">get_be32</name><argument_list pos:start="401:52" pos:end="401:55">(<argument pos:start="401:53" pos:end="401:54"><expr pos:start="401:53" pos:end="401:54"><operator pos:start="401:53" pos:end="401:53">&amp;</operator><name pos:start="401:54" pos:end="401:54">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="403:13" pos:end="403:30"><expr pos:start="403:13" pos:end="403:29"><call pos:start="403:13" pos:end="403:29"><name pos:start="403:13" pos:end="403:21">url_fskip</name><argument_list pos:start="403:22" pos:end="403:29">(<argument pos:start="403:23" pos:end="403:24"><expr pos:start="403:23" pos:end="403:24"><operator pos:start="403:23" pos:end="403:23">&amp;</operator><name pos:start="403:24" pos:end="403:24">b</name></expr></argument>, <argument pos:start="403:27" pos:end="403:28"><expr pos:start="403:27" pos:end="403:28"><literal type="number" pos:start="403:27" pos:end="403:28">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="405:13" pos:end="405:56"><expr pos:start="405:13" pos:end="405:55"><name pos:start="405:13" pos:end="405:37"><name pos:start="405:13" pos:end="405:17">track</name><operator pos:start="405:18" pos:end="405:19">-&gt;</operator><name pos:start="405:20" pos:end="405:24">audio</name><operator pos:start="405:25" pos:end="405:25">.</operator><name pos:start="405:26" pos:end="405:37">sub_packet_h</name></name>    <operator pos:start="405:42" pos:end="405:42">=</operator> <call pos:start="405:44" pos:end="405:55"><name pos:start="405:44" pos:end="405:51">get_be16</name><argument_list pos:start="405:52" pos:end="405:55">(<argument pos:start="405:53" pos:end="405:54"><expr pos:start="405:53" pos:end="405:54"><operator pos:start="405:53" pos:end="405:53">&amp;</operator><name pos:start="405:54" pos:end="405:54">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="407:13" pos:end="407:56"><expr pos:start="407:13" pos:end="407:55"><name pos:start="407:13" pos:end="407:35"><name pos:start="407:13" pos:end="407:17">track</name><operator pos:start="407:18" pos:end="407:19">-&gt;</operator><name pos:start="407:20" pos:end="407:24">audio</name><operator pos:start="407:25" pos:end="407:25">.</operator><name pos:start="407:26" pos:end="407:35">frame_size</name></name>      <operator pos:start="407:42" pos:end="407:42">=</operator> <call pos:start="407:44" pos:end="407:55"><name pos:start="407:44" pos:end="407:51">get_be16</name><argument_list pos:start="407:52" pos:end="407:55">(<argument pos:start="407:53" pos:end="407:54"><expr pos:start="407:53" pos:end="407:54"><operator pos:start="407:53" pos:end="407:53">&amp;</operator><name pos:start="407:54" pos:end="407:54">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="409:13" pos:end="409:56"><expr pos:start="409:13" pos:end="409:55"><name pos:start="409:13" pos:end="409:40"><name pos:start="409:13" pos:end="409:17">track</name><operator pos:start="409:18" pos:end="409:19">-&gt;</operator><name pos:start="409:20" pos:end="409:24">audio</name><operator pos:start="409:25" pos:end="409:25">.</operator><name pos:start="409:26" pos:end="409:40">sub_packet_size</name></name> <operator pos:start="409:42" pos:end="409:42">=</operator> <call pos:start="409:44" pos:end="409:55"><name pos:start="409:44" pos:end="409:51">get_be16</name><argument_list pos:start="409:52" pos:end="409:55">(<argument pos:start="409:53" pos:end="409:54"><expr pos:start="409:53" pos:end="409:54"><operator pos:start="409:53" pos:end="409:53">&amp;</operator><name pos:start="409:54" pos:end="409:54">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="411:13" pos:end="411:94"><expr pos:start="411:13" pos:end="411:93"><name pos:start="411:13" pos:end="411:28"><name pos:start="411:13" pos:end="411:17">track</name><operator pos:start="411:18" pos:end="411:19">-&gt;</operator><name pos:start="411:20" pos:end="411:24">audio</name><operator pos:start="411:25" pos:end="411:25">.</operator><name pos:start="411:26" pos:end="411:28">buf</name></name> <operator pos:start="411:30" pos:end="411:30">=</operator> <call pos:start="411:32" pos:end="411:93"><name pos:start="411:32" pos:end="411:40">av_malloc</name><argument_list pos:start="411:41" pos:end="411:93">(<argument pos:start="411:42" pos:end="411:92"><expr pos:start="411:42" pos:end="411:92"><name pos:start="411:42" pos:end="411:64"><name pos:start="411:42" pos:end="411:46">track</name><operator pos:start="411:47" pos:end="411:48">-&gt;</operator><name pos:start="411:49" pos:end="411:53">audio</name><operator pos:start="411:54" pos:end="411:54">.</operator><name pos:start="411:55" pos:end="411:64">frame_size</name></name> <operator pos:start="411:66" pos:end="411:66">*</operator> <name pos:start="411:68" pos:end="411:92"><name pos:start="411:68" pos:end="411:72">track</name><operator pos:start="411:73" pos:end="411:74">-&gt;</operator><name pos:start="411:75" pos:end="411:79">audio</name><operator pos:start="411:80" pos:end="411:80">.</operator><name pos:start="411:81" pos:end="411:92">sub_packet_h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="413:13" pos:end="427:13"><if pos:start="413:13" pos:end="419:13">if <condition pos:start="413:16" pos:end="413:44">(<expr pos:start="413:17" pos:end="413:43"><name pos:start="413:17" pos:end="413:24">codec_id</name> <operator pos:start="413:26" pos:end="413:27">==</operator> <name pos:start="413:29" pos:end="413:43">CODEC_ID_RA_288</name></expr>)</condition> <block pos:start="413:46" pos:end="419:13">{<block_content pos:start="415:17" pos:end="417:43">

                <expr_stmt pos:start="415:17" pos:end="415:70"><expr pos:start="415:17" pos:end="415:69"><name pos:start="415:17" pos:end="415:38"><name pos:start="415:17" pos:end="415:18">st</name><operator pos:start="415:19" pos:end="415:20">-&gt;</operator><name pos:start="415:21" pos:end="415:25">codec</name><operator pos:start="415:26" pos:end="415:27">-&gt;</operator><name pos:start="415:28" pos:end="415:38">block_align</name></name> <operator pos:start="415:40" pos:end="415:40">=</operator> <name pos:start="415:42" pos:end="415:69"><name pos:start="415:42" pos:end="415:46">track</name><operator pos:start="415:47" pos:end="415:48">-&gt;</operator><name pos:start="415:49" pos:end="415:53">audio</name><operator pos:start="415:54" pos:end="415:54">.</operator><name pos:start="415:55" pos:end="415:69">coded_framesize</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="417:17" pos:end="417:43"><expr pos:start="417:17" pos:end="417:42"><name pos:start="417:17" pos:end="417:38"><name pos:start="417:17" pos:end="417:21">track</name><operator pos:start="417:22" pos:end="417:23">-&gt;</operator><name pos:start="417:24" pos:end="417:33">codec_priv</name><operator pos:start="417:34" pos:end="417:34">.</operator><name pos:start="417:35" pos:end="417:38">size</name></name> <operator pos:start="417:40" pos:end="417:40">=</operator> <literal type="number" pos:start="417:42" pos:end="417:42">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="419:15" pos:end="427:13">else <block pos:start="419:20" pos:end="427:13">{<block_content pos:start="421:17" pos:end="425:59">

                <expr_stmt pos:start="421:17" pos:end="421:70"><expr pos:start="421:17" pos:end="421:69"><name pos:start="421:17" pos:end="421:38"><name pos:start="421:17" pos:end="421:18">st</name><operator pos:start="421:19" pos:end="421:20">-&gt;</operator><name pos:start="421:21" pos:end="421:25">codec</name><operator pos:start="421:26" pos:end="421:27">-&gt;</operator><name pos:start="421:28" pos:end="421:38">block_align</name></name> <operator pos:start="421:40" pos:end="421:40">=</operator> <name pos:start="421:42" pos:end="421:69"><name pos:start="421:42" pos:end="421:46">track</name><operator pos:start="421:47" pos:end="421:48">-&gt;</operator><name pos:start="421:49" pos:end="421:53">audio</name><operator pos:start="421:54" pos:end="421:54">.</operator><name pos:start="421:55" pos:end="421:69">sub_packet_size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="423:17" pos:end="423:38"><expr pos:start="423:17" pos:end="423:37"><name pos:start="423:17" pos:end="423:32">extradata_offset</name> <operator pos:start="423:34" pos:end="423:34">=</operator> <literal type="number" pos:start="423:36" pos:end="423:37">78</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="425:17" pos:end="425:59"><expr pos:start="425:17" pos:end="425:58"><name pos:start="425:17" pos:end="425:38"><name pos:start="425:17" pos:end="425:21">track</name><operator pos:start="425:22" pos:end="425:23">-&gt;</operator><name pos:start="425:24" pos:end="425:33">codec_priv</name><operator pos:start="425:34" pos:end="425:34">.</operator><name pos:start="425:35" pos:end="425:38">size</name></name> <operator pos:start="425:40" pos:end="425:41">-=</operator> <name pos:start="425:43" pos:end="425:58">extradata_offset</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="433:9" pos:end="437:73"><if pos:start="433:9" pos:end="437:73">if <condition pos:start="433:12" pos:end="433:38">(<expr pos:start="433:13" pos:end="433:37"><name pos:start="433:13" pos:end="433:20">codec_id</name> <operator pos:start="433:22" pos:end="433:23">==</operator> <name pos:start="433:25" pos:end="433:37">CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="435:13" pos:end="437:73"><block_content pos:start="435:13" pos:end="437:73">

            <expr_stmt pos:start="435:13" pos:end="437:73"><expr pos:start="435:13" pos:end="437:72"><call pos:start="435:13" pos:end="437:72"><name pos:start="435:13" pos:end="435:18">av_log</name><argument_list pos:start="435:19" pos:end="437:72">(<argument pos:start="435:20" pos:end="435:32"><expr pos:start="435:20" pos:end="435:32"><name pos:start="435:20" pos:end="435:32"><name pos:start="435:20" pos:end="435:27">matroska</name><operator pos:start="435:28" pos:end="435:29">-&gt;</operator><name pos:start="435:30" pos:end="435:32">ctx</name></name></expr></argument>, <argument pos:start="435:35" pos:end="435:45"><expr pos:start="435:35" pos:end="435:45"><name pos:start="435:35" pos:end="435:45">AV_LOG_INFO</name></expr></argument>,

                   <argument pos:start="437:20" pos:end="437:54"><expr pos:start="437:20" pos:end="437:54"><literal type="string" pos:start="437:20" pos:end="437:54">"Unknown/unsupported CodecID %s.\n"</literal></expr></argument>, <argument pos:start="437:57" pos:end="437:71"><expr pos:start="437:57" pos:end="437:71"><name pos:start="437:57" pos:end="437:71"><name pos:start="437:57" pos:end="437:61">track</name><operator pos:start="437:62" pos:end="437:63">-&gt;</operator><name pos:start="437:64" pos:end="437:71">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="441:9" pos:end="443:36"><if pos:start="441:9" pos:end="443:36">if <condition pos:start="441:12" pos:end="441:37">(<expr pos:start="441:13" pos:end="441:36"><name pos:start="441:13" pos:end="441:29"><name pos:start="441:13" pos:end="441:17">track</name><operator pos:start="441:18" pos:end="441:19">-&gt;</operator><name pos:start="441:20" pos:end="441:29">time_scale</name></name> <operator pos:start="441:31" pos:end="441:31">&lt;</operator> <literal type="number" pos:start="441:33" pos:end="441:36">0.01</literal></expr>)</condition><block type="pseudo" pos:start="443:13" pos:end="443:36"><block_content pos:start="443:13" pos:end="443:36">

            <expr_stmt pos:start="443:13" pos:end="443:36"><expr pos:start="443:13" pos:end="443:35"><name pos:start="443:13" pos:end="443:29"><name pos:start="443:13" pos:end="443:17">track</name><operator pos:start="443:18" pos:end="443:19">-&gt;</operator><name pos:start="443:20" pos:end="443:29">time_scale</name></name> <operator pos:start="443:31" pos:end="443:31">=</operator> <literal type="number" pos:start="443:33" pos:end="443:35">1.0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="445:9" pos:end="445:88"><expr pos:start="445:9" pos:end="445:87"><call pos:start="445:9" pos:end="445:87"><name pos:start="445:9" pos:end="445:23">av_set_pts_info</name><argument_list pos:start="445:24" pos:end="445:87">(<argument pos:start="445:25" pos:end="445:26"><expr pos:start="445:25" pos:end="445:26"><name pos:start="445:25" pos:end="445:26">st</name></expr></argument>, <argument pos:start="445:29" pos:end="445:30"><expr pos:start="445:29" pos:end="445:30"><literal type="number" pos:start="445:29" pos:end="445:30">64</literal></expr></argument>, <argument pos:start="445:33" pos:end="445:70"><expr pos:start="445:33" pos:end="445:70"><name pos:start="445:33" pos:end="445:52"><name pos:start="445:33" pos:end="445:40">matroska</name><operator pos:start="445:41" pos:end="445:42">-&gt;</operator><name pos:start="445:43" pos:end="445:52">time_scale</name></name><operator pos:start="445:53" pos:end="445:53">*</operator><name pos:start="445:54" pos:end="445:70"><name pos:start="445:54" pos:end="445:58">track</name><operator pos:start="445:59" pos:end="445:60">-&gt;</operator><name pos:start="445:61" pos:end="445:70">time_scale</name></name></expr></argument>, <argument pos:start="445:73" pos:end="445:86"><expr pos:start="445:73" pos:end="445:86"><literal type="number" pos:start="445:73" pos:end="445:76">1000</literal><operator pos:start="445:77" pos:end="445:77">*</operator><literal type="number" pos:start="445:78" pos:end="445:81">1000</literal><operator pos:start="445:82" pos:end="445:82">*</operator><literal type="number" pos:start="445:83" pos:end="445:86">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="445:90" pos:end="445:111">/* 64 bit pts in ns */</comment>



        <expr_stmt pos:start="449:9" pos:end="449:39"><expr pos:start="449:9" pos:end="449:38"><name pos:start="449:9" pos:end="449:27"><name pos:start="449:9" pos:end="449:10">st</name><operator pos:start="449:11" pos:end="449:12">-&gt;</operator><name pos:start="449:13" pos:end="449:17">codec</name><operator pos:start="449:18" pos:end="449:19">-&gt;</operator><name pos:start="449:20" pos:end="449:27">codec_id</name></name> <operator pos:start="449:29" pos:end="449:29">=</operator> <name pos:start="449:31" pos:end="449:38">codec_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="451:9" pos:end="451:27"><expr pos:start="451:9" pos:end="451:26"><name pos:start="451:9" pos:end="451:22"><name pos:start="451:9" pos:end="451:10">st</name><operator pos:start="451:11" pos:end="451:12">-&gt;</operator><name pos:start="451:13" pos:end="451:22">start_time</name></name> <operator pos:start="451:24" pos:end="451:24">=</operator> <literal type="number" pos:start="451:26" pos:end="451:26">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="453:9" pos:end="455:57"><if pos:start="453:9" pos:end="455:57">if <condition pos:start="453:12" pos:end="453:43">(<expr pos:start="453:13" pos:end="453:42"><call pos:start="453:13" pos:end="453:42"><name pos:start="453:13" pos:end="453:18">strcmp</name><argument_list pos:start="453:19" pos:end="453:42">(<argument pos:start="453:20" pos:end="453:34"><expr pos:start="453:20" pos:end="453:34"><name pos:start="453:20" pos:end="453:34"><name pos:start="453:20" pos:end="453:24">track</name><operator pos:start="453:25" pos:end="453:26">-&gt;</operator><name pos:start="453:27" pos:end="453:34">language</name></name></expr></argument>, <argument pos:start="453:37" pos:end="453:41"><expr pos:start="453:37" pos:end="453:41"><literal type="string" pos:start="453:37" pos:end="453:41">"und"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="455:13" pos:end="455:57"><block_content pos:start="455:13" pos:end="455:57">

            <expr_stmt pos:start="455:13" pos:end="455:57"><expr pos:start="455:13" pos:end="455:56"><call pos:start="455:13" pos:end="455:56"><name pos:start="455:13" pos:end="455:22">av_strlcpy</name><argument_list pos:start="455:23" pos:end="455:56">(<argument pos:start="455:24" pos:end="455:35"><expr pos:start="455:24" pos:end="455:35"><name pos:start="455:24" pos:end="455:35"><name pos:start="455:24" pos:end="455:25">st</name><operator pos:start="455:26" pos:end="455:27">-&gt;</operator><name pos:start="455:28" pos:end="455:35">language</name></name></expr></argument>, <argument pos:start="455:38" pos:end="455:52"><expr pos:start="455:38" pos:end="455:52"><name pos:start="455:38" pos:end="455:52"><name pos:start="455:38" pos:end="455:42">track</name><operator pos:start="455:43" pos:end="455:44">-&gt;</operator><name pos:start="455:45" pos:end="455:52">language</name></name></expr></argument>, <argument pos:start="455:55" pos:end="455:55"><expr pos:start="455:55" pos:end="455:55"><literal type="number" pos:start="455:55" pos:end="455:55">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="459:9" pos:end="461:54"><if pos:start="459:9" pos:end="461:54">if <condition pos:start="459:12" pos:end="459:32">(<expr pos:start="459:13" pos:end="459:31"><name pos:start="459:13" pos:end="459:31"><name pos:start="459:13" pos:end="459:17">track</name><operator pos:start="459:18" pos:end="459:19">-&gt;</operator><name pos:start="459:20" pos:end="459:31">flag_default</name></name></expr>)</condition><block type="pseudo" pos:start="461:13" pos:end="461:54"><block_content pos:start="461:13" pos:end="461:54">

            <expr_stmt pos:start="461:13" pos:end="461:54"><expr pos:start="461:13" pos:end="461:53"><name pos:start="461:13" pos:end="461:27"><name pos:start="461:13" pos:end="461:14">st</name><operator pos:start="461:15" pos:end="461:16">-&gt;</operator><name pos:start="461:17" pos:end="461:27">disposition</name></name> <operator pos:start="461:29" pos:end="461:30">|=</operator> <name pos:start="461:32" pos:end="461:53">AV_DISPOSITION_DEFAULT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="465:9" pos:end="469:66"><if pos:start="465:9" pos:end="469:66">if <condition pos:start="465:12" pos:end="465:36">(<expr pos:start="465:13" pos:end="465:35"><name pos:start="465:13" pos:end="465:35"><name pos:start="465:13" pos:end="465:17">track</name><operator pos:start="465:18" pos:end="465:19">-&gt;</operator><name pos:start="465:20" pos:end="465:35">default_duration</name></name></expr>)</condition><block type="pseudo" pos:start="467:13" pos:end="469:66"><block_content pos:start="467:13" pos:end="469:66">

            <expr_stmt pos:start="467:13" pos:end="469:66"><expr pos:start="467:13" pos:end="469:65"><call pos:start="467:13" pos:end="469:65"><name pos:start="467:13" pos:end="467:21">av_reduce</name><argument_list pos:start="467:22" pos:end="469:65">(<argument pos:start="467:23" pos:end="467:47"><expr pos:start="467:23" pos:end="467:47"><operator pos:start="467:23" pos:end="467:23">&amp;</operator><name pos:start="467:24" pos:end="467:47"><name pos:start="467:24" pos:end="467:25">st</name><operator pos:start="467:26" pos:end="467:27">-&gt;</operator><name pos:start="467:28" pos:end="467:32">codec</name><operator pos:start="467:33" pos:end="467:34">-&gt;</operator><name pos:start="467:35" pos:end="467:43">time_base</name><operator pos:start="467:44" pos:end="467:44">.</operator><name pos:start="467:45" pos:end="467:47">num</name></name></expr></argument>, <argument pos:start="467:50" pos:end="467:74"><expr pos:start="467:50" pos:end="467:74"><operator pos:start="467:50" pos:end="467:50">&amp;</operator><name pos:start="467:51" pos:end="467:74"><name pos:start="467:51" pos:end="467:52">st</name><operator pos:start="467:53" pos:end="467:54">-&gt;</operator><name pos:start="467:55" pos:end="467:59">codec</name><operator pos:start="467:60" pos:end="467:61">-&gt;</operator><name pos:start="467:62" pos:end="467:70">time_base</name><operator pos:start="467:71" pos:end="467:71">.</operator><name pos:start="467:72" pos:end="467:74">den</name></name></expr></argument>,

                      <argument pos:start="469:23" pos:end="469:45"><expr pos:start="469:23" pos:end="469:45"><name pos:start="469:23" pos:end="469:45"><name pos:start="469:23" pos:end="469:27">track</name><operator pos:start="469:28" pos:end="469:29">-&gt;</operator><name pos:start="469:30" pos:end="469:45">default_duration</name></name></expr></argument>, <argument pos:start="469:48" pos:end="469:57"><expr pos:start="469:48" pos:end="469:57"><literal type="number" pos:start="469:48" pos:end="469:57">1000000000</literal></expr></argument>, <argument pos:start="469:60" pos:end="469:64"><expr pos:start="469:60" pos:end="469:64"><literal type="number" pos:start="469:60" pos:end="469:64">30000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="473:9" pos:end="495:9"><if pos:start="473:9" pos:end="479:9">if<condition pos:start="473:11" pos:end="473:21">(<expr pos:start="473:12" pos:end="473:20"><name pos:start="473:12" pos:end="473:20">extradata</name></expr>)</condition><block pos:start="473:22" pos:end="479:9">{<block_content pos:start="475:13" pos:end="477:55">

            <expr_stmt pos:start="475:13" pos:end="475:45"><expr pos:start="475:13" pos:end="475:44"><name pos:start="475:13" pos:end="475:32"><name pos:start="475:13" pos:end="475:14">st</name><operator pos:start="475:15" pos:end="475:16">-&gt;</operator><name pos:start="475:17" pos:end="475:21">codec</name><operator pos:start="475:22" pos:end="475:23">-&gt;</operator><name pos:start="475:24" pos:end="475:32">extradata</name></name> <operator pos:start="475:34" pos:end="475:34">=</operator> <name pos:start="475:36" pos:end="475:44">extradata</name></expr>;</expr_stmt>

            <expr_stmt pos:start="477:13" pos:end="477:55"><expr pos:start="477:13" pos:end="477:54"><name pos:start="477:13" pos:end="477:37"><name pos:start="477:13" pos:end="477:14">st</name><operator pos:start="477:15" pos:end="477:16">-&gt;</operator><name pos:start="477:17" pos:end="477:21">codec</name><operator pos:start="477:22" pos:end="477:23">-&gt;</operator><name pos:start="477:24" pos:end="477:37">extradata_size</name></name> <operator pos:start="477:39" pos:end="477:39">=</operator> <name pos:start="477:41" pos:end="477:54">extradata_size</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="479:11" pos:end="495:9">else if<condition pos:start="479:18" pos:end="479:71">(<expr pos:start="479:19" pos:end="479:70"><name pos:start="479:19" pos:end="479:40"><name pos:start="479:19" pos:end="479:23">track</name><operator pos:start="479:24" pos:end="479:25">-&gt;</operator><name pos:start="479:26" pos:end="479:35">codec_priv</name><operator pos:start="479:36" pos:end="479:36">.</operator><name pos:start="479:37" pos:end="479:40">data</name></name> <operator pos:start="479:42" pos:end="479:43">&amp;&amp;</operator> <name pos:start="479:45" pos:end="479:66"><name pos:start="479:45" pos:end="479:49">track</name><operator pos:start="479:50" pos:end="479:51">-&gt;</operator><name pos:start="479:52" pos:end="479:61">codec_priv</name><operator pos:start="479:62" pos:end="479:62">.</operator><name pos:start="479:63" pos:end="479:66">size</name></name> <operator pos:start="479:68" pos:end="479:68">&gt;</operator> <literal type="number" pos:start="479:70" pos:end="479:70">0</literal></expr>)</condition><block pos:start="479:72" pos:end="495:9">{<block_content pos:start="481:13" pos:end="493:43">

            <expr_stmt pos:start="481:13" pos:end="481:69"><expr pos:start="481:13" pos:end="481:68"><name pos:start="481:13" pos:end="481:32"><name pos:start="481:13" pos:end="481:14">st</name><operator pos:start="481:15" pos:end="481:16">-&gt;</operator><name pos:start="481:17" pos:end="481:21">codec</name><operator pos:start="481:22" pos:end="481:23">-&gt;</operator><name pos:start="481:24" pos:end="481:32">extradata</name></name> <operator pos:start="481:34" pos:end="481:34">=</operator> <call pos:start="481:36" pos:end="481:68"><name pos:start="481:36" pos:end="481:44">av_malloc</name><argument_list pos:start="481:45" pos:end="481:68">(<argument pos:start="481:46" pos:end="481:67"><expr pos:start="481:46" pos:end="481:67"><name pos:start="481:46" pos:end="481:67"><name pos:start="481:46" pos:end="481:50">track</name><operator pos:start="481:51" pos:end="481:52">-&gt;</operator><name pos:start="481:53" pos:end="481:62">codec_priv</name><operator pos:start="481:63" pos:end="481:63">.</operator><name pos:start="481:64" pos:end="481:67">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="483:13" pos:end="485:39"><if pos:start="483:13" pos:end="485:39">if<condition pos:start="483:15" pos:end="483:44">(<expr pos:start="483:16" pos:end="483:43"><name pos:start="483:16" pos:end="483:35"><name pos:start="483:16" pos:end="483:17">st</name><operator pos:start="483:18" pos:end="483:19">-&gt;</operator><name pos:start="483:20" pos:end="483:24">codec</name><operator pos:start="483:25" pos:end="483:26">-&gt;</operator><name pos:start="483:27" pos:end="483:35">extradata</name></name> <operator pos:start="483:37" pos:end="483:38">==</operator> <name pos:start="483:40" pos:end="483:43">NULL</name></expr>)</condition><block type="pseudo" pos:start="485:17" pos:end="485:39"><block_content pos:start="485:17" pos:end="485:39">

                <return pos:start="485:17" pos:end="485:39">return <expr pos:start="485:24" pos:end="485:38"><call pos:start="485:24" pos:end="485:38"><name pos:start="485:24" pos:end="485:30">AVERROR</name><argument_list pos:start="485:31" pos:end="485:38">(<argument pos:start="485:32" pos:end="485:37"><expr pos:start="485:32" pos:end="485:37"><name pos:start="485:32" pos:end="485:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="487:13" pos:end="487:63"><expr pos:start="487:13" pos:end="487:62"><name pos:start="487:13" pos:end="487:37"><name pos:start="487:13" pos:end="487:14">st</name><operator pos:start="487:15" pos:end="487:16">-&gt;</operator><name pos:start="487:17" pos:end="487:21">codec</name><operator pos:start="487:22" pos:end="487:23">-&gt;</operator><name pos:start="487:24" pos:end="487:37">extradata_size</name></name> <operator pos:start="487:39" pos:end="487:39">=</operator> <name pos:start="487:41" pos:end="487:62"><name pos:start="487:41" pos:end="487:45">track</name><operator pos:start="487:46" pos:end="487:47">-&gt;</operator><name pos:start="487:48" pos:end="487:57">codec_priv</name><operator pos:start="487:58" pos:end="487:58">.</operator><name pos:start="487:59" pos:end="487:62">size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="489:13" pos:end="493:43"><expr pos:start="489:13" pos:end="493:42"><call pos:start="489:13" pos:end="493:42"><name pos:start="489:13" pos:end="489:18">memcpy</name><argument_list pos:start="489:19" pos:end="493:42">(<argument pos:start="489:20" pos:end="489:39"><expr pos:start="489:20" pos:end="489:39"><name pos:start="489:20" pos:end="489:39"><name pos:start="489:20" pos:end="489:21">st</name><operator pos:start="489:22" pos:end="489:23">-&gt;</operator><name pos:start="489:24" pos:end="489:28">codec</name><operator pos:start="489:29" pos:end="489:30">-&gt;</operator><name pos:start="489:31" pos:end="489:39">extradata</name></name></expr></argument>,

                   <argument pos:start="491:20" pos:end="491:60"><expr pos:start="491:20" pos:end="491:60"><name pos:start="491:20" pos:end="491:41"><name pos:start="491:20" pos:end="491:24">track</name><operator pos:start="491:25" pos:end="491:26">-&gt;</operator><name pos:start="491:27" pos:end="491:36">codec_priv</name><operator pos:start="491:37" pos:end="491:37">.</operator><name pos:start="491:38" pos:end="491:41">data</name></name> <operator pos:start="491:43" pos:end="491:43">+</operator> <name pos:start="491:45" pos:end="491:60">extradata_offset</name></expr></argument>,

                   <argument pos:start="493:20" pos:end="493:41"><expr pos:start="493:20" pos:end="493:41"><name pos:start="493:20" pos:end="493:41"><name pos:start="493:20" pos:end="493:24">track</name><operator pos:start="493:25" pos:end="493:26">-&gt;</operator><name pos:start="493:27" pos:end="493:36">codec_priv</name><operator pos:start="493:37" pos:end="493:37">.</operator><name pos:start="493:38" pos:end="493:41">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="499:9" pos:end="533:9"><if pos:start="499:9" pos:end="521:9">if <condition pos:start="499:12" pos:end="499:53">(<expr pos:start="499:13" pos:end="499:52"><name pos:start="499:13" pos:end="499:23"><name pos:start="499:13" pos:end="499:17">track</name><operator pos:start="499:18" pos:end="499:19">-&gt;</operator><name pos:start="499:20" pos:end="499:23">type</name></name> <operator pos:start="499:25" pos:end="499:26">==</operator> <name pos:start="499:28" pos:end="499:52">MATROSKA_TRACK_TYPE_VIDEO</name></expr>)</condition> <block pos:start="499:55" pos:end="521:9">{<block_content pos:start="501:13" pos:end="519:54">

            <expr_stmt pos:start="501:13" pos:end="501:53"><expr pos:start="501:13" pos:end="501:52"><name pos:start="501:13" pos:end="501:33"><name pos:start="501:13" pos:end="501:14">st</name><operator pos:start="501:15" pos:end="501:16">-&gt;</operator><name pos:start="501:17" pos:end="501:21">codec</name><operator pos:start="501:22" pos:end="501:23">-&gt;</operator><name pos:start="501:24" pos:end="501:33">codec_type</name></name> <operator pos:start="501:35" pos:end="501:35">=</operator> <name pos:start="501:37" pos:end="501:52">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="503:13" pos:end="503:56"><expr pos:start="503:13" pos:end="503:55"><name pos:start="503:13" pos:end="503:32"><name pos:start="503:13" pos:end="503:14">st</name><operator pos:start="503:15" pos:end="503:16">-&gt;</operator><name pos:start="503:17" pos:end="503:21">codec</name><operator pos:start="503:22" pos:end="503:23">-&gt;</operator><name pos:start="503:24" pos:end="503:32">codec_tag</name></name>  <operator pos:start="503:35" pos:end="503:35">=</operator> <name pos:start="503:37" pos:end="503:55"><name pos:start="503:37" pos:end="503:41">track</name><operator pos:start="503:42" pos:end="503:43">-&gt;</operator><name pos:start="503:44" pos:end="503:48">video</name><operator pos:start="503:49" pos:end="503:49">.</operator><name pos:start="503:50" pos:end="503:55">fourcc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="505:13" pos:end="505:57"><expr pos:start="505:13" pos:end="505:56"><name pos:start="505:13" pos:end="505:28"><name pos:start="505:13" pos:end="505:14">st</name><operator pos:start="505:15" pos:end="505:16">-&gt;</operator><name pos:start="505:17" pos:end="505:21">codec</name><operator pos:start="505:22" pos:end="505:23">-&gt;</operator><name pos:start="505:24" pos:end="505:28">width</name></name>  <operator pos:start="505:31" pos:end="505:31">=</operator> <name pos:start="505:33" pos:end="505:56"><name pos:start="505:33" pos:end="505:37">track</name><operator pos:start="505:38" pos:end="505:39">-&gt;</operator><name pos:start="505:40" pos:end="505:44">video</name><operator pos:start="505:45" pos:end="505:45">.</operator><name pos:start="505:46" pos:end="505:56">pixel_width</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="507:13" pos:end="507:58"><expr pos:start="507:13" pos:end="507:57"><name pos:start="507:13" pos:end="507:29"><name pos:start="507:13" pos:end="507:14">st</name><operator pos:start="507:15" pos:end="507:16">-&gt;</operator><name pos:start="507:17" pos:end="507:21">codec</name><operator pos:start="507:22" pos:end="507:23">-&gt;</operator><name pos:start="507:24" pos:end="507:29">height</name></name> <operator pos:start="507:31" pos:end="507:31">=</operator> <name pos:start="507:33" pos:end="507:57"><name pos:start="507:33" pos:end="507:37">track</name><operator pos:start="507:38" pos:end="507:39">-&gt;</operator><name pos:start="507:40" pos:end="507:44">video</name><operator pos:start="507:45" pos:end="507:45">.</operator><name pos:start="507:46" pos:end="507:57">pixel_height</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="509:13" pos:end="517:27"><expr pos:start="509:13" pos:end="517:26"><call pos:start="509:13" pos:end="517:26"><name pos:start="509:13" pos:end="509:21">av_reduce</name><argument_list pos:start="509:22" pos:end="517:26">(<argument pos:start="509:23" pos:end="509:50"><expr pos:start="509:23" pos:end="509:50"><operator pos:start="509:23" pos:end="509:23">&amp;</operator><name pos:start="509:24" pos:end="509:50"><name pos:start="509:24" pos:end="509:25">st</name><operator pos:start="509:26" pos:end="509:27">-&gt;</operator><name pos:start="509:28" pos:end="509:46">sample_aspect_ratio</name><operator pos:start="509:47" pos:end="509:47">.</operator><name pos:start="509:48" pos:end="509:50">num</name></name></expr></argument>,

                      <argument pos:start="511:23" pos:end="511:50"><expr pos:start="511:23" pos:end="511:50"><operator pos:start="511:23" pos:end="511:23">&amp;</operator><name pos:start="511:24" pos:end="511:50"><name pos:start="511:24" pos:end="511:25">st</name><operator pos:start="511:26" pos:end="511:27">-&gt;</operator><name pos:start="511:28" pos:end="511:46">sample_aspect_ratio</name><operator pos:start="511:47" pos:end="511:47">.</operator><name pos:start="511:48" pos:end="511:50">den</name></name></expr></argument>,

                      <argument pos:start="513:23" pos:end="513:68"><expr pos:start="513:23" pos:end="513:68"><name pos:start="513:23" pos:end="513:39"><name pos:start="513:23" pos:end="513:24">st</name><operator pos:start="513:25" pos:end="513:26">-&gt;</operator><name pos:start="513:27" pos:end="513:31">codec</name><operator pos:start="513:32" pos:end="513:33">-&gt;</operator><name pos:start="513:34" pos:end="513:39">height</name></name> <operator pos:start="513:41" pos:end="513:41">*</operator> <name pos:start="513:43" pos:end="513:68"><name pos:start="513:43" pos:end="513:47">track</name><operator pos:start="513:48" pos:end="513:49">-&gt;</operator><name pos:start="513:50" pos:end="513:54">video</name><operator pos:start="513:55" pos:end="513:55">.</operator><name pos:start="513:56" pos:end="513:68">display_width</name></name></expr></argument>,

                      <argument pos:start="515:23" pos:end="515:69"><expr pos:start="515:23" pos:end="515:69"><name pos:start="515:23" pos:end="515:39"><name pos:start="515:23" pos:end="515:24">st</name><operator pos:start="515:25" pos:end="515:26">-&gt;</operator><name pos:start="515:27" pos:end="515:31">codec</name><operator pos:start="515:32" pos:end="515:33">-&gt;</operator> <name pos:start="515:35" pos:end="515:39">width</name></name> <operator pos:start="515:41" pos:end="515:41">*</operator> <name pos:start="515:43" pos:end="515:69"><name pos:start="515:43" pos:end="515:47">track</name><operator pos:start="515:48" pos:end="515:49">-&gt;</operator><name pos:start="515:50" pos:end="515:54">video</name><operator pos:start="515:55" pos:end="515:55">.</operator><name pos:start="515:56" pos:end="515:69">display_height</name></name></expr></argument>,

                      <argument pos:start="517:23" pos:end="517:25"><expr pos:start="517:23" pos:end="517:25"><literal type="number" pos:start="517:23" pos:end="517:25">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="519:13" pos:end="519:54"><expr pos:start="519:13" pos:end="519:53"><name pos:start="519:13" pos:end="519:28"><name pos:start="519:13" pos:end="519:14">st</name><operator pos:start="519:15" pos:end="519:16">-&gt;</operator><name pos:start="519:17" pos:end="519:28">need_parsing</name></name> <operator pos:start="519:30" pos:end="519:30">=</operator> <name pos:start="519:32" pos:end="519:53">AVSTREAM_PARSE_HEADERS</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="521:11" pos:end="529:9">else if <condition pos:start="521:19" pos:end="521:60">(<expr pos:start="521:20" pos:end="521:59"><name pos:start="521:20" pos:end="521:30"><name pos:start="521:20" pos:end="521:24">track</name><operator pos:start="521:25" pos:end="521:26">-&gt;</operator><name pos:start="521:27" pos:end="521:30">type</name></name> <operator pos:start="521:32" pos:end="521:33">==</operator> <name pos:start="521:35" pos:end="521:59">MATROSKA_TRACK_TYPE_AUDIO</name></expr>)</condition> <block pos:start="521:62" pos:end="529:9">{<block_content pos:start="523:13" pos:end="527:56">

            <expr_stmt pos:start="523:13" pos:end="523:53"><expr pos:start="523:13" pos:end="523:52"><name pos:start="523:13" pos:end="523:33"><name pos:start="523:13" pos:end="523:14">st</name><operator pos:start="523:15" pos:end="523:16">-&gt;</operator><name pos:start="523:17" pos:end="523:21">codec</name><operator pos:start="523:22" pos:end="523:23">-&gt;</operator><name pos:start="523:24" pos:end="523:33">codec_type</name></name> <operator pos:start="523:35" pos:end="523:35">=</operator> <name pos:start="523:37" pos:end="523:52">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="525:13" pos:end="525:65"><expr pos:start="525:13" pos:end="525:64"><name pos:start="525:13" pos:end="525:34"><name pos:start="525:13" pos:end="525:14">st</name><operator pos:start="525:15" pos:end="525:16">-&gt;</operator><name pos:start="525:17" pos:end="525:21">codec</name><operator pos:start="525:22" pos:end="525:23">-&gt;</operator><name pos:start="525:24" pos:end="525:34">sample_rate</name></name> <operator pos:start="525:36" pos:end="525:36">=</operator> <name pos:start="525:38" pos:end="525:64"><name pos:start="525:38" pos:end="525:42">track</name><operator pos:start="525:43" pos:end="525:44">-&gt;</operator><name pos:start="525:45" pos:end="525:49">audio</name><operator pos:start="525:50" pos:end="525:50">.</operator><name pos:start="525:51" pos:end="525:64">out_samplerate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="527:13" pos:end="527:56"><expr pos:start="527:13" pos:end="527:55"><name pos:start="527:13" pos:end="527:31"><name pos:start="527:13" pos:end="527:14">st</name><operator pos:start="527:15" pos:end="527:16">-&gt;</operator><name pos:start="527:17" pos:end="527:21">codec</name><operator pos:start="527:22" pos:end="527:23">-&gt;</operator><name pos:start="527:24" pos:end="527:31">channels</name></name> <operator pos:start="527:33" pos:end="527:33">=</operator> <name pos:start="527:35" pos:end="527:55"><name pos:start="527:35" pos:end="527:39">track</name><operator pos:start="527:40" pos:end="527:41">-&gt;</operator><name pos:start="527:42" pos:end="527:46">audio</name><operator pos:start="527:47" pos:end="527:47">.</operator><name pos:start="527:48" pos:end="527:55">channels</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="529:11" pos:end="533:9">else if <condition pos:start="529:19" pos:end="529:63">(<expr pos:start="529:20" pos:end="529:62"><name pos:start="529:20" pos:end="529:30"><name pos:start="529:20" pos:end="529:24">track</name><operator pos:start="529:25" pos:end="529:26">-&gt;</operator><name pos:start="529:27" pos:end="529:30">type</name></name> <operator pos:start="529:32" pos:end="529:33">==</operator> <name pos:start="529:35" pos:end="529:62">MATROSKA_TRACK_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="529:65" pos:end="533:9">{<block_content pos:start="531:13" pos:end="531:56">

            <expr_stmt pos:start="531:13" pos:end="531:56"><expr pos:start="531:13" pos:end="531:55"><name pos:start="531:13" pos:end="531:33"><name pos:start="531:13" pos:end="531:14">st</name><operator pos:start="531:15" pos:end="531:16">-&gt;</operator><name pos:start="531:17" pos:end="531:21">codec</name><operator pos:start="531:22" pos:end="531:23">-&gt;</operator><name pos:start="531:24" pos:end="531:33">codec_type</name></name> <operator pos:start="531:35" pos:end="531:35">=</operator> <name pos:start="531:37" pos:end="531:55">CODEC_TYPE_SUBTITLE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="539:5" pos:end="539:43"><expr pos:start="539:5" pos:end="539:42"><name pos:start="539:5" pos:end="539:16">attachements</name> <operator pos:start="539:18" pos:end="539:18">=</operator> <name pos:start="539:20" pos:end="539:42"><name pos:start="539:20" pos:end="539:36">attachements_list</name><operator pos:start="539:37" pos:end="539:38">-&gt;</operator><name pos:start="539:39" pos:end="539:42">elem</name></name></expr>;</expr_stmt>

    <for pos:start="541:5" pos:end="591:5">for <control pos:start="541:9" pos:end="541:48">(<init pos:start="541:10" pos:end="541:13"><expr pos:start="541:10" pos:end="541:12"><name pos:start="541:10" pos:end="541:10">j</name><operator pos:start="541:11" pos:end="541:11">=</operator><literal type="number" pos:start="541:12" pos:end="541:12">0</literal></expr>;</init> <condition pos:start="541:15" pos:end="541:43"><expr pos:start="541:15" pos:end="541:42"><name pos:start="541:15" pos:end="541:15">j</name><operator pos:start="541:16" pos:end="541:16">&lt;</operator><name pos:start="541:17" pos:end="541:42"><name pos:start="541:17" pos:end="541:33">attachements_list</name><operator pos:start="541:34" pos:end="541:35">-&gt;</operator><name pos:start="541:36" pos:end="541:42">nb_elem</name></name></expr>;</condition> <incr pos:start="541:45" pos:end="541:47"><expr pos:start="541:45" pos:end="541:47"><name pos:start="541:45" pos:end="541:45">j</name><operator pos:start="541:46" pos:end="541:47">++</operator></expr></incr>)</control> <block pos:start="541:50" pos:end="591:5">{<block_content pos:start="543:9" pos:end="589:9">

        <if_stmt pos:start="543:9" pos:end="589:9"><if pos:start="543:9" pos:end="549:9">if <condition pos:start="543:12" pos:end="545:72">(<expr pos:start="543:13" pos:end="545:71"><operator pos:start="543:13" pos:end="543:13">!</operator><operator pos:start="543:14" pos:end="543:14">(</operator><name pos:start="543:15" pos:end="543:29"><name pos:start="543:15" pos:end="543:26">attachements</name><index pos:start="543:27" pos:end="543:29">[<expr pos:start="543:28" pos:end="543:28"><name pos:start="543:28" pos:end="543:28">j</name></expr>]</index></name><operator pos:start="543:30" pos:end="543:30">.</operator><name pos:start="543:31" pos:end="543:38">filename</name> <operator pos:start="543:40" pos:end="543:41">&amp;&amp;</operator> <name pos:start="543:43" pos:end="543:57"><name pos:start="543:43" pos:end="543:54">attachements</name><index pos:start="543:55" pos:end="543:57">[<expr pos:start="543:56" pos:end="543:56"><name pos:start="543:56" pos:end="543:56">j</name></expr>]</index></name><operator pos:start="543:58" pos:end="543:58">.</operator><name pos:start="543:59" pos:end="543:62">mime</name> <operator pos:start="543:64" pos:end="543:65">&amp;&amp;</operator>

              <name pos:start="545:15" pos:end="545:29"><name pos:start="545:15" pos:end="545:26">attachements</name><index pos:start="545:27" pos:end="545:29">[<expr pos:start="545:28" pos:end="545:28"><name pos:start="545:28" pos:end="545:28">j</name></expr>]</index></name><operator pos:start="545:30" pos:end="545:30">.</operator><name pos:start="545:31" pos:end="545:38"><name pos:start="545:31" pos:end="545:33">bin</name><operator pos:start="545:34" pos:end="545:34">.</operator><name pos:start="545:35" pos:end="545:38">data</name></name> <operator pos:start="545:40" pos:end="545:41">&amp;&amp;</operator> <name pos:start="545:43" pos:end="545:57"><name pos:start="545:43" pos:end="545:54">attachements</name><index pos:start="545:55" pos:end="545:57">[<expr pos:start="545:56" pos:end="545:56"><name pos:start="545:56" pos:end="545:56">j</name></expr>]</index></name><operator pos:start="545:58" pos:end="545:58">.</operator><name pos:start="545:59" pos:end="545:66"><name pos:start="545:59" pos:end="545:61">bin</name><operator pos:start="545:62" pos:end="545:62">.</operator><name pos:start="545:63" pos:end="545:66">size</name></name> <operator pos:start="545:68" pos:end="545:68">&gt;</operator> <literal type="number" pos:start="545:70" pos:end="545:70">0</literal><operator pos:start="545:71" pos:end="545:71">)</operator></expr>)</condition> <block pos:start="545:74" pos:end="549:9">{<block_content pos:start="547:13" pos:end="547:75">

            <expr_stmt pos:start="547:13" pos:end="547:75"><expr pos:start="547:13" pos:end="547:74"><call pos:start="547:13" pos:end="547:74"><name pos:start="547:13" pos:end="547:18">av_log</name><argument_list pos:start="547:19" pos:end="547:74">(<argument pos:start="547:20" pos:end="547:32"><expr pos:start="547:20" pos:end="547:32"><name pos:start="547:20" pos:end="547:32"><name pos:start="547:20" pos:end="547:27">matroska</name><operator pos:start="547:28" pos:end="547:29">-&gt;</operator><name pos:start="547:30" pos:end="547:32">ctx</name></name></expr></argument>, <argument pos:start="547:35" pos:end="547:46"><expr pos:start="547:35" pos:end="547:46"><name pos:start="547:35" pos:end="547:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="547:49" pos:end="547:73"><expr pos:start="547:49" pos:end="547:73"><literal type="string" pos:start="547:49" pos:end="547:73">"incomplete attachment\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="549:11" pos:end="589:9">else <block pos:start="549:16" pos:end="589:9">{<block_content pos:start="551:13" pos:end="587:13">

            <decl_stmt pos:start="551:13" pos:end="551:47"><decl pos:start="551:13" pos:end="551:46"><type pos:start="551:13" pos:end="551:22"><name pos:start="551:13" pos:end="551:20">AVStream</name> <modifier pos:start="551:22" pos:end="551:22">*</modifier></type><name pos:start="551:23" pos:end="551:24">st</name> <init pos:start="551:26" pos:end="551:46">= <expr pos:start="551:28" pos:end="551:46"><call pos:start="551:28" pos:end="551:46"><name pos:start="551:28" pos:end="551:40">av_new_stream</name><argument_list pos:start="551:41" pos:end="551:46">(<argument pos:start="551:42" pos:end="551:42"><expr pos:start="551:42" pos:end="551:42"><name pos:start="551:42" pos:end="551:42">s</name></expr></argument>, <argument pos:start="551:45" pos:end="551:45"><expr pos:start="551:45" pos:end="551:45"><literal type="number" pos:start="551:45" pos:end="551:45">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="553:13" pos:end="555:22"><if pos:start="553:13" pos:end="555:22">if <condition pos:start="553:16" pos:end="553:27">(<expr pos:start="553:17" pos:end="553:26"><name pos:start="553:17" pos:end="553:18">st</name> <operator pos:start="553:20" pos:end="553:21">==</operator> <name pos:start="553:23" pos:end="553:26">NULL</name></expr>)</condition><block type="pseudo" pos:start="555:17" pos:end="555:22"><block_content pos:start="555:17" pos:end="555:22">

                <break pos:start="555:17" pos:end="555:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="557:13" pos:end="557:72"><expr pos:start="557:13" pos:end="557:71"><name pos:start="557:13" pos:end="557:24"><name pos:start="557:13" pos:end="557:14">st</name><operator pos:start="557:15" pos:end="557:16">-&gt;</operator><name pos:start="557:17" pos:end="557:24">filename</name></name>          <operator pos:start="557:35" pos:end="557:35">=</operator> <call pos:start="557:37" pos:end="557:71"><name pos:start="557:37" pos:end="557:45">av_strdup</name><argument_list pos:start="557:46" pos:end="557:71">(<argument pos:start="557:47" pos:end="557:70"><expr pos:start="557:47" pos:end="557:70"><name pos:start="557:47" pos:end="557:61"><name pos:start="557:47" pos:end="557:58">attachements</name><index pos:start="557:59" pos:end="557:61">[<expr pos:start="557:60" pos:end="557:60"><name pos:start="557:60" pos:end="557:60">j</name></expr>]</index></name><operator pos:start="557:62" pos:end="557:62">.</operator><name pos:start="557:63" pos:end="557:70">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="559:13" pos:end="559:48"><expr pos:start="559:13" pos:end="559:47"><name pos:start="559:13" pos:end="559:31"><name pos:start="559:13" pos:end="559:14">st</name><operator pos:start="559:15" pos:end="559:16">-&gt;</operator><name pos:start="559:17" pos:end="559:21">codec</name><operator pos:start="559:22" pos:end="559:23">-&gt;</operator><name pos:start="559:24" pos:end="559:31">codec_id</name></name> <operator pos:start="559:33" pos:end="559:33">=</operator> <name pos:start="559:35" pos:end="559:47">CODEC_ID_NONE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="561:13" pos:end="561:58"><expr pos:start="561:13" pos:end="561:57"><name pos:start="561:13" pos:end="561:33"><name pos:start="561:13" pos:end="561:14">st</name><operator pos:start="561:15" pos:end="561:16">-&gt;</operator><name pos:start="561:17" pos:end="561:21">codec</name><operator pos:start="561:22" pos:end="561:23">-&gt;</operator><name pos:start="561:24" pos:end="561:33">codec_type</name></name> <operator pos:start="561:35" pos:end="561:35">=</operator> <name pos:start="561:37" pos:end="561:57">CODEC_TYPE_ATTACHMENT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="563:13" pos:end="563:72"><expr pos:start="563:13" pos:end="563:71"><name pos:start="563:13" pos:end="563:32"><name pos:start="563:13" pos:end="563:14">st</name><operator pos:start="563:15" pos:end="563:16">-&gt;</operator><name pos:start="563:17" pos:end="563:21">codec</name><operator pos:start="563:22" pos:end="563:23">-&gt;</operator><name pos:start="563:24" pos:end="563:32">extradata</name></name>  <operator pos:start="563:35" pos:end="563:35">=</operator> <call pos:start="563:37" pos:end="563:71"><name pos:start="563:37" pos:end="563:45">av_malloc</name><argument_list pos:start="563:46" pos:end="563:71">(<argument pos:start="563:47" pos:end="563:70"><expr pos:start="563:47" pos:end="563:70"><name pos:start="563:47" pos:end="563:61"><name pos:start="563:47" pos:end="563:58">attachements</name><index pos:start="563:59" pos:end="563:61">[<expr pos:start="563:60" pos:end="563:60"><name pos:start="563:60" pos:end="563:60">j</name></expr>]</index></name><operator pos:start="563:62" pos:end="563:62">.</operator><name pos:start="563:63" pos:end="563:70"><name pos:start="563:63" pos:end="563:65">bin</name><operator pos:start="563:66" pos:end="563:66">.</operator><name pos:start="563:67" pos:end="563:70">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="565:13" pos:end="567:22"><if pos:start="565:13" pos:end="567:22">if<condition pos:start="565:15" pos:end="565:44">(<expr pos:start="565:16" pos:end="565:43"><name pos:start="565:16" pos:end="565:35"><name pos:start="565:16" pos:end="565:17">st</name><operator pos:start="565:18" pos:end="565:19">-&gt;</operator><name pos:start="565:20" pos:end="565:24">codec</name><operator pos:start="565:25" pos:end="565:26">-&gt;</operator><name pos:start="565:27" pos:end="565:35">extradata</name></name> <operator pos:start="565:37" pos:end="565:38">==</operator> <name pos:start="565:40" pos:end="565:43">NULL</name></expr>)</condition><block type="pseudo" pos:start="567:17" pos:end="567:22"><block_content pos:start="567:17" pos:end="567:22">

                <break pos:start="567:17" pos:end="567:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="569:13" pos:end="569:65"><expr pos:start="569:13" pos:end="569:64"><name pos:start="569:13" pos:end="569:37"><name pos:start="569:13" pos:end="569:14">st</name><operator pos:start="569:15" pos:end="569:16">-&gt;</operator><name pos:start="569:17" pos:end="569:21">codec</name><operator pos:start="569:22" pos:end="569:23">-&gt;</operator><name pos:start="569:24" pos:end="569:37">extradata_size</name></name> <operator pos:start="569:39" pos:end="569:39">=</operator> <name pos:start="569:41" pos:end="569:55"><name pos:start="569:41" pos:end="569:52">attachements</name><index pos:start="569:53" pos:end="569:55">[<expr pos:start="569:54" pos:end="569:54"><name pos:start="569:54" pos:end="569:54">j</name></expr>]</index></name><operator pos:start="569:56" pos:end="569:56">.</operator><name pos:start="569:57" pos:end="569:64"><name pos:start="569:57" pos:end="569:59">bin</name><operator pos:start="569:60" pos:end="569:60">.</operator><name pos:start="569:61" pos:end="569:64">size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="571:13" pos:end="571:93"><expr pos:start="571:13" pos:end="571:92"><call pos:start="571:13" pos:end="571:92"><name pos:start="571:13" pos:end="571:18">memcpy</name><argument_list pos:start="571:19" pos:end="571:92">(<argument pos:start="571:20" pos:end="571:39"><expr pos:start="571:20" pos:end="571:39"><name pos:start="571:20" pos:end="571:39"><name pos:start="571:20" pos:end="571:21">st</name><operator pos:start="571:22" pos:end="571:23">-&gt;</operator><name pos:start="571:24" pos:end="571:28">codec</name><operator pos:start="571:29" pos:end="571:30">-&gt;</operator><name pos:start="571:31" pos:end="571:39">extradata</name></name></expr></argument>, <argument pos:start="571:42" pos:end="571:65"><expr pos:start="571:42" pos:end="571:65"><name pos:start="571:42" pos:end="571:56"><name pos:start="571:42" pos:end="571:53">attachements</name><index pos:start="571:54" pos:end="571:56">[<expr pos:start="571:55" pos:end="571:55"><name pos:start="571:55" pos:end="571:55">j</name></expr>]</index></name><operator pos:start="571:57" pos:end="571:57">.</operator><name pos:start="571:58" pos:end="571:65"><name pos:start="571:58" pos:end="571:60">bin</name><operator pos:start="571:61" pos:end="571:61">.</operator><name pos:start="571:62" pos:end="571:65">data</name></name></expr></argument>, <argument pos:start="571:68" pos:end="571:91"><expr pos:start="571:68" pos:end="571:91"><name pos:start="571:68" pos:end="571:82"><name pos:start="571:68" pos:end="571:79">attachements</name><index pos:start="571:80" pos:end="571:82">[<expr pos:start="571:81" pos:end="571:81"><name pos:start="571:81" pos:end="571:81">j</name></expr>]</index></name><operator pos:start="571:83" pos:end="571:83">.</operator><name pos:start="571:84" pos:end="571:91"><name pos:start="571:84" pos:end="571:86">bin</name><operator pos:start="571:87" pos:end="571:87">.</operator><name pos:start="571:88" pos:end="571:91">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="575:13" pos:end="587:13">for <control pos:start="575:17" pos:end="575:67">(<init pos:start="575:18" pos:end="575:21"><expr pos:start="575:18" pos:end="575:20"><name pos:start="575:18" pos:end="575:18">i</name><operator pos:start="575:19" pos:end="575:19">=</operator><literal type="number" pos:start="575:20" pos:end="575:20">0</literal></expr>;</init> <condition pos:start="575:23" pos:end="575:62"><expr pos:start="575:23" pos:end="575:61"><name pos:start="575:23" pos:end="575:41"><name pos:start="575:23" pos:end="575:38">ff_mkv_mime_tags</name><index pos:start="575:39" pos:end="575:41">[<expr pos:start="575:40" pos:end="575:40"><name pos:start="575:40" pos:end="575:40">i</name></expr>]</index></name><operator pos:start="575:42" pos:end="575:42">.</operator><name pos:start="575:43" pos:end="575:44">id</name> <operator pos:start="575:46" pos:end="575:47">!=</operator> <name pos:start="575:49" pos:end="575:61">CODEC_ID_NONE</name></expr>;</condition> <incr pos:start="575:64" pos:end="575:66"><expr pos:start="575:64" pos:end="575:66"><name pos:start="575:64" pos:end="575:64">i</name><operator pos:start="575:65" pos:end="575:66">++</operator></expr></incr>)</control> <block pos:start="575:69" pos:end="587:13">{<block_content pos:start="577:17" pos:end="585:17">

                <if_stmt pos:start="577:17" pos:end="585:17"><if pos:start="577:17" pos:end="585:17">if <condition pos:start="577:20" pos:end="579:62">(<expr pos:start="577:21" pos:end="579:61"><operator pos:start="577:21" pos:end="577:21">!</operator><call pos:start="577:22" pos:end="579:61"><name pos:start="577:22" pos:end="577:28">strncmp</name><argument_list pos:start="577:29" pos:end="579:61">(<argument pos:start="577:30" pos:end="577:52"><expr pos:start="577:30" pos:end="577:52"><name pos:start="577:30" pos:end="577:48"><name pos:start="577:30" pos:end="577:45">ff_mkv_mime_tags</name><index pos:start="577:46" pos:end="577:48">[<expr pos:start="577:47" pos:end="577:47"><name pos:start="577:47" pos:end="577:47">i</name></expr>]</index></name><operator pos:start="577:49" pos:end="577:49">.</operator><name pos:start="577:50" pos:end="577:52">str</name></expr></argument>, <argument pos:start="577:55" pos:end="577:74"><expr pos:start="577:55" pos:end="577:74"><name pos:start="577:55" pos:end="577:69"><name pos:start="577:55" pos:end="577:66">attachements</name><index pos:start="577:67" pos:end="577:69">[<expr pos:start="577:68" pos:end="577:68"><name pos:start="577:68" pos:end="577:68">j</name></expr>]</index></name><operator pos:start="577:70" pos:end="577:70">.</operator><name pos:start="577:71" pos:end="577:74">mime</name></expr></argument>,

                             <argument pos:start="579:30" pos:end="579:60"><expr pos:start="579:30" pos:end="579:60"><call pos:start="579:30" pos:end="579:60"><name pos:start="579:30" pos:end="579:35">strlen</name><argument_list pos:start="579:36" pos:end="579:60">(<argument pos:start="579:37" pos:end="579:59"><expr pos:start="579:37" pos:end="579:59"><name pos:start="579:37" pos:end="579:55"><name pos:start="579:37" pos:end="579:52">ff_mkv_mime_tags</name><index pos:start="579:53" pos:end="579:55">[<expr pos:start="579:54" pos:end="579:54"><name pos:start="579:54" pos:end="579:54">i</name></expr>]</index></name><operator pos:start="579:56" pos:end="579:56">.</operator><name pos:start="579:57" pos:end="579:59">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="579:64" pos:end="585:17">{<block_content pos:start="581:21" pos:end="583:26">

                    <expr_stmt pos:start="581:21" pos:end="581:65"><expr pos:start="581:21" pos:end="581:64"><name pos:start="581:21" pos:end="581:39"><name pos:start="581:21" pos:end="581:22">st</name><operator pos:start="581:23" pos:end="581:24">-&gt;</operator><name pos:start="581:25" pos:end="581:29">codec</name><operator pos:start="581:30" pos:end="581:31">-&gt;</operator><name pos:start="581:32" pos:end="581:39">codec_id</name></name> <operator pos:start="581:41" pos:end="581:41">=</operator> <name pos:start="581:43" pos:end="581:61"><name pos:start="581:43" pos:end="581:58">ff_mkv_mime_tags</name><index pos:start="581:59" pos:end="581:61">[<expr pos:start="581:60" pos:end="581:60"><name pos:start="581:60" pos:end="581:60">i</name></expr>]</index></name><operator pos:start="581:62" pos:end="581:62">.</operator><name pos:start="581:63" pos:end="581:64">id</name></expr>;</expr_stmt>

                    <break pos:start="583:21" pos:end="583:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="595:5" pos:end="595:35"><expr pos:start="595:5" pos:end="595:34"><name pos:start="595:5" pos:end="595:12">chapters</name> <operator pos:start="595:14" pos:end="595:14">=</operator> <name pos:start="595:16" pos:end="595:34"><name pos:start="595:16" pos:end="595:28">chapters_list</name><operator pos:start="595:29" pos:end="595:30">-&gt;</operator><name pos:start="595:31" pos:end="595:34">elem</name></name></expr>;</expr_stmt>

    <for pos:start="597:5" pos:end="605:46">for <control pos:start="597:9" pos:end="597:44">(<init pos:start="597:10" pos:end="597:13"><expr pos:start="597:10" pos:end="597:12"><name pos:start="597:10" pos:end="597:10">i</name><operator pos:start="597:11" pos:end="597:11">=</operator><literal type="number" pos:start="597:12" pos:end="597:12">0</literal></expr>;</init> <condition pos:start="597:15" pos:end="597:39"><expr pos:start="597:15" pos:end="597:38"><name pos:start="597:15" pos:end="597:15">i</name><operator pos:start="597:16" pos:end="597:16">&lt;</operator><name pos:start="597:17" pos:end="597:38"><name pos:start="597:17" pos:end="597:29">chapters_list</name><operator pos:start="597:30" pos:end="597:31">-&gt;</operator><name pos:start="597:32" pos:end="597:38">nb_elem</name></name></expr>;</condition> <incr pos:start="597:41" pos:end="597:43"><expr pos:start="597:41" pos:end="597:43"><name pos:start="597:41" pos:end="597:41">i</name><operator pos:start="597:42" pos:end="597:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="599:9" pos:end="605:46"><block_content pos:start="599:9" pos:end="605:46">

        <if_stmt pos:start="599:9" pos:end="605:46"><if pos:start="599:9" pos:end="605:46">if <condition pos:start="599:12" pos:end="599:67">(<expr pos:start="599:13" pos:end="599:66"><name pos:start="599:13" pos:end="599:23"><name pos:start="599:13" pos:end="599:20">chapters</name><index pos:start="599:21" pos:end="599:23">[<expr pos:start="599:22" pos:end="599:22"><name pos:start="599:22" pos:end="599:22">i</name></expr>]</index></name><operator pos:start="599:24" pos:end="599:24">.</operator><name pos:start="599:25" pos:end="599:29">start</name> <operator pos:start="599:31" pos:end="599:32">!=</operator> <name pos:start="599:34" pos:end="599:47">AV_NOPTS_VALUE</name> <operator pos:start="599:49" pos:end="599:50">&amp;&amp;</operator> <name pos:start="599:52" pos:end="599:62"><name pos:start="599:52" pos:end="599:59">chapters</name><index pos:start="599:60" pos:end="599:62">[<expr pos:start="599:61" pos:end="599:61"><name pos:start="599:61" pos:end="599:61">i</name></expr>]</index></name><operator pos:start="599:63" pos:end="599:63">.</operator><name pos:start="599:64" pos:end="599:66">uid</name></expr>)</condition><block type="pseudo" pos:start="601:13" pos:end="605:46"><block_content pos:start="601:13" pos:end="605:46">

            <macro pos:start="601:13" pos:end="605:45"><name pos:start="601:13" pos:end="601:26">ff_new_chapter</name><argument_list pos:start="601:27" pos:end="605:45">(<argument pos:start="601:28" pos:end="601:28">s</argument>, <argument pos:start="601:31" pos:end="601:45">chapters[i].uid</argument>, <argument pos:start="601:48" pos:end="601:61">(AVRational){<literal type="number" pos:start="601:61" pos:end="601:61">1</literal></argument>, <argument pos:start="601:64" pos:end="601:74"><literal type="number" pos:start="601:64" pos:end="601:73">1000000000</literal>}</argument>,

                           <argument pos:start="603:28" pos:end="603:44">chapters[i].start</argument>, <argument pos:start="603:47" pos:end="603:61">chapters[i].end</argument>,

                           <argument pos:start="605:28" pos:end="605:44">chapters[i].title</argument>)</argument_list></macro><empty_stmt pos:start="605:46" pos:end="605:46">;</empty_stmt></block_content></block></if></if_stmt></block_content></block></for>



    <expr_stmt pos:start="609:5" pos:end="609:34"><expr pos:start="609:5" pos:end="609:33"><name pos:start="609:5" pos:end="609:14">index_list</name> <operator pos:start="609:16" pos:end="609:16">=</operator> <operator pos:start="609:18" pos:end="609:18">&amp;</operator><name pos:start="609:19" pos:end="609:33"><name pos:start="609:19" pos:end="609:26">matroska</name><operator pos:start="609:27" pos:end="609:28">-&gt;</operator><name pos:start="609:29" pos:end="609:33">index</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="611:5" pos:end="611:29"><expr pos:start="611:5" pos:end="611:28"><name pos:start="611:5" pos:end="611:9">index</name> <operator pos:start="611:11" pos:end="611:11">=</operator> <name pos:start="611:13" pos:end="611:28"><name pos:start="611:13" pos:end="611:22">index_list</name><operator pos:start="611:23" pos:end="611:24">-&gt;</operator><name pos:start="611:25" pos:end="611:28">elem</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="613:5" pos:end="621:5"><if pos:start="613:5" pos:end="621:5">if <condition pos:start="613:8" pos:end="615:64">(<expr pos:start="613:9" pos:end="615:63"><name pos:start="613:9" pos:end="613:27"><name pos:start="613:9" pos:end="613:18">index_list</name><operator pos:start="613:19" pos:end="613:20">-&gt;</operator><name pos:start="613:21" pos:end="613:27">nb_elem</name></name>

        <operator pos:start="615:9" pos:end="615:10">&amp;&amp;</operator> <name pos:start="615:12" pos:end="615:19"><name pos:start="615:12" pos:end="615:16">index</name><index pos:start="615:17" pos:end="615:19">[<expr pos:start="615:18" pos:end="615:18"><literal type="number" pos:start="615:18" pos:end="615:18">0</literal></expr>]</index></name><operator pos:start="615:20" pos:end="615:20">.</operator><name pos:start="615:21" pos:end="615:24">time</name> <operator pos:start="615:26" pos:end="615:26">&gt;</operator> <literal type="number" pos:start="615:28" pos:end="615:42">100000000000000</literal><operator pos:start="615:43" pos:end="615:43">/</operator><name pos:start="615:44" pos:end="615:63"><name pos:start="615:44" pos:end="615:51">matroska</name><operator pos:start="615:52" pos:end="615:53">-&gt;</operator><name pos:start="615:54" pos:end="615:63">time_scale</name></name></expr>)</condition> <block pos:start="615:66" pos:end="621:5">{<block_content pos:start="617:9" pos:end="619:43">

        <expr_stmt pos:start="617:9" pos:end="617:80"><expr pos:start="617:9" pos:end="617:79"><call pos:start="617:9" pos:end="617:79"><name pos:start="617:9" pos:end="617:14">av_log</name><argument_list pos:start="617:15" pos:end="617:79">(<argument pos:start="617:16" pos:end="617:28"><expr pos:start="617:16" pos:end="617:28"><name pos:start="617:16" pos:end="617:28"><name pos:start="617:16" pos:end="617:23">matroska</name><operator pos:start="617:24" pos:end="617:25">-&gt;</operator><name pos:start="617:26" pos:end="617:28">ctx</name></name></expr></argument>, <argument pos:start="617:31" pos:end="617:44"><expr pos:start="617:31" pos:end="617:44"><name pos:start="617:31" pos:end="617:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="617:47" pos:end="617:78"><expr pos:start="617:47" pos:end="617:78"><literal type="string" pos:start="617:47" pos:end="617:78">"Working around broken index.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="619:9" pos:end="619:43"><expr pos:start="619:9" pos:end="619:42"><name pos:start="619:9" pos:end="619:19">index_scale</name> <operator pos:start="619:21" pos:end="619:21">=</operator> <name pos:start="619:23" pos:end="619:42"><name pos:start="619:23" pos:end="619:30">matroska</name><operator pos:start="619:31" pos:end="619:32">-&gt;</operator><name pos:start="619:33" pos:end="619:42">time_scale</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="623:5" pos:end="647:5">for <control pos:start="623:9" pos:end="623:41">(<init pos:start="623:10" pos:end="623:13"><expr pos:start="623:10" pos:end="623:12"><name pos:start="623:10" pos:end="623:10">i</name><operator pos:start="623:11" pos:end="623:11">=</operator><literal type="number" pos:start="623:12" pos:end="623:12">0</literal></expr>;</init> <condition pos:start="623:15" pos:end="623:36"><expr pos:start="623:15" pos:end="623:35"><name pos:start="623:15" pos:end="623:15">i</name><operator pos:start="623:16" pos:end="623:16">&lt;</operator><name pos:start="623:17" pos:end="623:35"><name pos:start="623:17" pos:end="623:26">index_list</name><operator pos:start="623:27" pos:end="623:28">-&gt;</operator><name pos:start="623:29" pos:end="623:35">nb_elem</name></name></expr>;</condition> <incr pos:start="623:38" pos:end="623:40"><expr pos:start="623:38" pos:end="623:40"><name pos:start="623:38" pos:end="623:38">i</name><operator pos:start="623:39" pos:end="623:40">++</operator></expr></incr>)</control> <block pos:start="623:43" pos:end="647:5">{<block_content pos:start="625:9" pos:end="645:9">

        <decl_stmt pos:start="625:9" pos:end="625:43"><decl pos:start="625:9" pos:end="625:42"><type pos:start="625:9" pos:end="625:18"><name pos:start="625:9" pos:end="625:16">EbmlList</name> <modifier pos:start="625:18" pos:end="625:18">*</modifier></type><name pos:start="625:19" pos:end="625:26">pos_list</name> <init pos:start="625:28" pos:end="625:42">= <expr pos:start="625:30" pos:end="625:42"><operator pos:start="625:30" pos:end="625:30">&amp;</operator><name pos:start="625:31" pos:end="625:38"><name pos:start="625:31" pos:end="625:35">index</name><index pos:start="625:36" pos:end="625:38">[<expr pos:start="625:37" pos:end="625:37"><name pos:start="625:37" pos:end="625:37">i</name></expr>]</index></name><operator pos:start="625:39" pos:end="625:39">.</operator><name pos:start="625:40" pos:end="625:42">pos</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="627:9" pos:end="627:47"><decl pos:start="627:9" pos:end="627:46"><type pos:start="627:9" pos:end="627:26"><name pos:start="627:9" pos:end="627:24">MatroskaIndexPos</name> <modifier pos:start="627:26" pos:end="627:26">*</modifier></type><name pos:start="627:27" pos:end="627:29">pos</name> <init pos:start="627:31" pos:end="627:46">= <expr pos:start="627:33" pos:end="627:46"><name pos:start="627:33" pos:end="627:46"><name pos:start="627:33" pos:end="627:40">pos_list</name><operator pos:start="627:41" pos:end="627:42">-&gt;</operator><name pos:start="627:43" pos:end="627:46">elem</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="629:9" pos:end="645:9">for <control pos:start="629:13" pos:end="629:43">(<init pos:start="629:14" pos:end="629:17"><expr pos:start="629:14" pos:end="629:16"><name pos:start="629:14" pos:end="629:14">j</name><operator pos:start="629:15" pos:end="629:15">=</operator><literal type="number" pos:start="629:16" pos:end="629:16">0</literal></expr>;</init> <condition pos:start="629:19" pos:end="629:38"><expr pos:start="629:19" pos:end="629:37"><name pos:start="629:19" pos:end="629:19">j</name><operator pos:start="629:20" pos:end="629:20">&lt;</operator><name pos:start="629:21" pos:end="629:37"><name pos:start="629:21" pos:end="629:28">pos_list</name><operator pos:start="629:29" pos:end="629:30">-&gt;</operator><name pos:start="629:31" pos:end="629:37">nb_elem</name></name></expr>;</condition> <incr pos:start="629:40" pos:end="629:42"><expr pos:start="629:40" pos:end="629:42"><name pos:start="629:40" pos:end="629:40">j</name><operator pos:start="629:41" pos:end="629:42">++</operator></expr></incr>)</control> <block pos:start="629:45" pos:end="645:9">{<block_content pos:start="631:13" pos:end="643:53">

            <decl_stmt pos:start="631:13" pos:end="633:76"><decl pos:start="631:13" pos:end="633:75"><type pos:start="631:13" pos:end="631:27"><name pos:start="631:13" pos:end="631:25">MatroskaTrack</name> <modifier pos:start="631:27" pos:end="631:27">*</modifier></type><name pos:start="631:28" pos:end="631:32">track</name> <init pos:start="631:34" pos:end="633:75">= <expr pos:start="631:36" pos:end="633:75"><call pos:start="631:36" pos:end="633:75"><name pos:start="631:36" pos:end="631:61">matroska_find_track_by_num</name><argument_list pos:start="631:62" pos:end="633:75">(<argument pos:start="631:63" pos:end="631:70"><expr pos:start="631:63" pos:end="631:70"><name pos:start="631:63" pos:end="631:70">matroska</name></expr></argument>,

                                                              <argument pos:start="633:63" pos:end="633:74"><expr pos:start="633:63" pos:end="633:74"><name pos:start="633:63" pos:end="633:68"><name pos:start="633:63" pos:end="633:65">pos</name><index pos:start="633:66" pos:end="633:68">[<expr pos:start="633:67" pos:end="633:67"><name pos:start="633:67" pos:end="633:67">j</name></expr>]</index></name><operator pos:start="633:69" pos:end="633:69">.</operator><name pos:start="633:70" pos:end="633:74">track</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="635:13" pos:end="643:53"><if pos:start="635:13" pos:end="643:53">if <condition pos:start="635:16" pos:end="635:39">(<expr pos:start="635:17" pos:end="635:38"><name pos:start="635:17" pos:end="635:21">track</name> <operator pos:start="635:23" pos:end="635:24">&amp;&amp;</operator> <name pos:start="635:26" pos:end="635:38"><name pos:start="635:26" pos:end="635:30">track</name><operator pos:start="635:31" pos:end="635:32">-&gt;</operator><name pos:start="635:33" pos:end="635:38">stream</name></name></expr>)</condition><block type="pseudo" pos:start="637:17" pos:end="643:53"><block_content pos:start="637:17" pos:end="643:53">

                <expr_stmt pos:start="637:17" pos:end="643:53"><expr pos:start="637:17" pos:end="643:52"><call pos:start="637:17" pos:end="643:52"><name pos:start="637:17" pos:end="637:34">av_add_index_entry</name><argument_list pos:start="637:35" pos:end="643:52">(<argument pos:start="637:36" pos:end="637:48"><expr pos:start="637:36" pos:end="637:48"><name pos:start="637:36" pos:end="637:48"><name pos:start="637:36" pos:end="637:40">track</name><operator pos:start="637:41" pos:end="637:42">-&gt;</operator><name pos:start="637:43" pos:end="637:48">stream</name></name></expr></argument>,

                                   <argument pos:start="639:36" pos:end="639:71"><expr pos:start="639:36" pos:end="639:71"><name pos:start="639:36" pos:end="639:41"><name pos:start="639:36" pos:end="639:38">pos</name><index pos:start="639:39" pos:end="639:41">[<expr pos:start="639:40" pos:end="639:40"><name pos:start="639:40" pos:end="639:40">j</name></expr>]</index></name><operator pos:start="639:42" pos:end="639:42">.</operator><name pos:start="639:43" pos:end="639:45">pos</name> <operator pos:start="639:47" pos:end="639:47">+</operator> <name pos:start="639:49" pos:end="639:71"><name pos:start="639:49" pos:end="639:56">matroska</name><operator pos:start="639:57" pos:end="639:58">-&gt;</operator><name pos:start="639:59" pos:end="639:71">segment_start</name></name></expr></argument>,

                                   <argument pos:start="641:36" pos:end="641:60"><expr pos:start="641:36" pos:end="641:60"><name pos:start="641:36" pos:end="641:43"><name pos:start="641:36" pos:end="641:40">index</name><index pos:start="641:41" pos:end="641:43">[<expr pos:start="641:42" pos:end="641:42"><name pos:start="641:42" pos:end="641:42">i</name></expr>]</index></name><operator pos:start="641:44" pos:end="641:44">.</operator><name pos:start="641:45" pos:end="641:48">time</name><operator pos:start="641:49" pos:end="641:49">/</operator><name pos:start="641:50" pos:end="641:60">index_scale</name></expr></argument>, <argument pos:start="641:63" pos:end="641:63"><expr pos:start="641:63" pos:end="641:63"><literal type="number" pos:start="641:63" pos:end="641:63">0</literal></expr></argument>, <argument pos:start="641:66" pos:end="641:66"><expr pos:start="641:66" pos:end="641:66"><literal type="number" pos:start="641:66" pos:end="641:66">0</literal></expr></argument>,

                                   <argument pos:start="643:36" pos:end="643:51"><expr pos:start="643:36" pos:end="643:51"><name pos:start="643:36" pos:end="643:51">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <return pos:start="651:5" pos:end="651:13">return <expr pos:start="651:12" pos:end="651:12"><literal type="number" pos:start="651:12" pos:end="651:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
