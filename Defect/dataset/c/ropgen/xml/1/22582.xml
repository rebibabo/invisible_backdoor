<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22582.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">cpu_inject_x86_mce</name><parameter_list pos:start="1:24" pos:end="3:74">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:32">CPUState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:38">cenv</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:48"><decl pos:start="1:41" pos:end="1:48"><type pos:start="1:41" pos:end="1:48"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:48">bank</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:65"><decl pos:start="1:51" pos:end="1:65"><type pos:start="1:51" pos:end="1:65"><name pos:start="1:51" pos:end="1:58">uint64_t</name></type> <name pos:start="1:60" pos:end="1:65">status</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:43"><decl pos:start="3:25" pos:end="3:43"><type pos:start="3:25" pos:end="3:43"><name pos:start="3:25" pos:end="3:32">uint64_t</name></type> <name pos:start="3:34" pos:end="3:43">mcg_status</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:58"><decl pos:start="3:46" pos:end="3:58"><type pos:start="3:46" pos:end="3:58"><name pos:start="3:46" pos:end="3:53">uint64_t</name></type> <name pos:start="3:55" pos:end="3:58">addr</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:73"><decl pos:start="3:61" pos:end="3:73"><type pos:start="3:61" pos:end="3:73"><name pos:start="3:61" pos:end="3:68">uint64_t</name></type> <name pos:start="3:70" pos:end="3:73">misc</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="109:1">{<block_content pos:start="7:5" pos:end="107:36">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:20">mcg_cap</name> <init pos:start="7:22" pos:end="7:36">= <expr pos:start="7:24" pos:end="7:36"><name pos:start="7:24" pos:end="7:36"><name pos:start="7:24" pos:end="7:27">cenv</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:36">mcg_cap</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:21">bank_num</name> <init pos:start="9:23" pos:end="9:38">= <expr pos:start="9:25" pos:end="9:38"><name pos:start="9:25" pos:end="9:31">mcg_cap</name> <operator pos:start="9:33" pos:end="9:33">&amp;</operator> <literal type="number" pos:start="9:35" pos:end="9:38">0xff</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">uint64_t</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:19">banks</name> <init pos:start="11:21" pos:end="11:37">= <expr pos:start="11:23" pos:end="11:37"><name pos:start="11:23" pos:end="11:37"><name pos:start="11:23" pos:end="11:26">cenv</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:37">mce_banks</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:15"><if pos:start="15:5" pos:end="17:15">if <condition pos:start="15:8" pos:end="15:55">(<expr pos:start="15:9" pos:end="15:54"><name pos:start="15:9" pos:end="15:12">bank</name> <operator pos:start="15:14" pos:end="15:15">&gt;=</operator> <name pos:start="15:17" pos:end="15:24">bank_num</name> <operator pos:start="15:26" pos:end="15:27">||</operator> <operator pos:start="15:29" pos:end="15:29">!</operator><operator pos:start="15:30" pos:end="15:30">(</operator><name pos:start="15:31" pos:end="15:36">status</name> <operator pos:start="15:38" pos:end="15:38">&amp;</operator> <name pos:start="15:40" pos:end="15:53">MCI_STATUS_VAL</name><operator pos:start="15:54" pos:end="15:54">)</operator></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:15"><block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:22">(<expr pos:start="21:9" pos:end="21:21"><call pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:19">kvm_enabled</name><argument_list pos:start="21:20" pos:end="21:21">()</argument_list></call></expr>)</condition> <block pos:start="21:24" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <expr_stmt pos:start="23:9" pos:end="23:71"><expr pos:start="23:9" pos:end="23:70"><call pos:start="23:9" pos:end="23:70"><name pos:start="23:9" pos:end="23:26">kvm_inject_x86_mce</name><argument_list pos:start="23:27" pos:end="23:70">(<argument pos:start="23:28" pos:end="23:31"><expr pos:start="23:28" pos:end="23:31"><name pos:start="23:28" pos:end="23:31">cenv</name></expr></argument>, <argument pos:start="23:34" pos:end="23:37"><expr pos:start="23:34" pos:end="23:37"><name pos:start="23:34" pos:end="23:37">bank</name></expr></argument>, <argument pos:start="23:40" pos:end="23:45"><expr pos:start="23:40" pos:end="23:45"><name pos:start="23:40" pos:end="23:45">status</name></expr></argument>, <argument pos:start="23:48" pos:end="23:57"><expr pos:start="23:48" pos:end="23:57"><name pos:start="23:48" pos:end="23:57">mcg_status</name></expr></argument>, <argument pos:start="23:60" pos:end="23:63"><expr pos:start="23:60" pos:end="23:63"><name pos:start="23:60" pos:end="23:63">addr</name></expr></argument>, <argument pos:start="23:66" pos:end="23:69"><expr pos:start="23:66" pos:end="23:69"><name pos:start="23:66" pos:end="23:69">misc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="37:7">/*

     * if MSR_MCG_CTL is not all 1s, the uncorrected error

     * reporting is disabled

     */</comment>

    <if_stmt pos:start="39:5" pos:end="43:15"><if pos:start="39:5" pos:end="43:15">if <condition pos:start="39:8" pos:end="41:38">(<expr pos:start="39:9" pos:end="41:37"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:15">status</name> <operator pos:start="39:17" pos:end="39:17">&amp;</operator> <name pos:start="39:19" pos:end="39:31">MCI_STATUS_UC</name><operator pos:start="39:32" pos:end="39:32">)</operator> <operator pos:start="39:34" pos:end="39:35">&amp;&amp;</operator> <operator pos:start="39:37" pos:end="39:37">(</operator><name pos:start="39:38" pos:end="39:44">mcg_cap</name> <operator pos:start="39:46" pos:end="39:46">&amp;</operator> <name pos:start="39:48" pos:end="39:56">MCG_CTL_P</name><operator pos:start="39:57" pos:end="39:57">)</operator> <operator pos:start="39:59" pos:end="39:60">&amp;&amp;</operator>

        <name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:12">cenv</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:21">mcg_ctl</name></name> <operator pos:start="41:23" pos:end="41:24">!=</operator> <operator pos:start="41:26" pos:end="41:26">~</operator><operator pos:start="41:27" pos:end="41:27">(</operator><name pos:start="41:28" pos:end="41:35">uint64_t</name><operator pos:start="41:36" pos:end="41:36">)</operator><literal type="number" pos:start="41:37" pos:end="41:37">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:15"><block_content pos:start="43:9" pos:end="43:15">

        <return pos:start="43:9" pos:end="43:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:22"><expr pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:9">banks</name> <operator pos:start="45:11" pos:end="45:12">+=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">4</literal> <operator pos:start="45:16" pos:end="45:16">*</operator> <name pos:start="45:18" pos:end="45:21">bank</name></expr>;</expr_stmt>

    <comment type="block" pos:start="47:5" pos:end="53:7">/*

     * if MSR_MCi_CTL is not all 1s, the uncorrected error

     * reporting is disabled for the bank

     */</comment>

    <if_stmt pos:start="55:5" pos:end="57:15"><if pos:start="55:5" pos:end="57:15">if <condition pos:start="55:8" pos:end="55:61">(<expr pos:start="55:9" pos:end="55:60"><operator pos:start="55:9" pos:end="55:9">(</operator><name pos:start="55:10" pos:end="55:15">status</name> <operator pos:start="55:17" pos:end="55:17">&amp;</operator> <name pos:start="55:19" pos:end="55:31">MCI_STATUS_UC</name><operator pos:start="55:32" pos:end="55:32">)</operator> <operator pos:start="55:34" pos:end="55:35">&amp;&amp;</operator> <name pos:start="55:37" pos:end="55:44"><name pos:start="55:37" pos:end="55:41">banks</name><index pos:start="55:42" pos:end="55:44">[<expr pos:start="55:43" pos:end="55:43"><literal type="number" pos:start="55:43" pos:end="55:43">0</literal></expr>]</index></name> <operator pos:start="55:46" pos:end="55:47">!=</operator> <operator pos:start="55:49" pos:end="55:49">~</operator><operator pos:start="55:50" pos:end="55:50">(</operator><name pos:start="55:51" pos:end="55:58">uint64_t</name><operator pos:start="55:59" pos:end="55:59">)</operator><literal type="number" pos:start="55:60" pos:end="55:60">0</literal></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:15"><block_content pos:start="57:9" pos:end="57:15">

        <return pos:start="57:9" pos:end="57:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="59:5" pos:end="107:36"><if pos:start="59:5" pos:end="91:5">if <condition pos:start="59:8" pos:end="59:31">(<expr pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:14">status</name> <operator pos:start="59:16" pos:end="59:16">&amp;</operator> <name pos:start="59:18" pos:end="59:30">MCI_STATUS_UC</name></expr>)</condition> <block pos:start="59:33" pos:end="91:5">{<block_content pos:start="61:9" pos:end="89:47">

        <if_stmt pos:start="61:9" pos:end="75:9"><if pos:start="61:9" pos:end="75:9">if <condition pos:start="61:12" pos:end="63:42">(<expr pos:start="61:13" pos:end="63:41"><operator pos:start="61:13" pos:end="61:13">(</operator><name pos:start="61:14" pos:end="61:29"><name pos:start="61:14" pos:end="61:17">cenv</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:29">mcg_status</name></name> <operator pos:start="61:31" pos:end="61:31">&amp;</operator> <name pos:start="61:33" pos:end="61:47">MCG_STATUS_MCIP</name><operator pos:start="61:48" pos:end="61:48">)</operator> <operator pos:start="61:50" pos:end="61:51">||</operator>

            <operator pos:start="63:13" pos:end="63:13">!</operator><operator pos:start="63:14" pos:end="63:14">(</operator><name pos:start="63:15" pos:end="63:25"><name pos:start="63:15" pos:end="63:18">cenv</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:22">cr</name><index pos:start="63:23" pos:end="63:25">[<expr pos:start="63:24" pos:end="63:24"><literal type="number" pos:start="63:24" pos:end="63:24">4</literal></expr>]</index></name> <operator pos:start="63:27" pos:end="63:27">&amp;</operator> <name pos:start="63:29" pos:end="63:40">CR4_MCE_MASK</name><operator pos:start="63:41" pos:end="63:41">)</operator></expr>)</condition> <block pos:start="63:44" pos:end="75:9">{<block_content pos:start="65:13" pos:end="73:19">

            <expr_stmt pos:start="65:13" pos:end="67:45"><expr pos:start="65:13" pos:end="67:44"><call pos:start="65:13" pos:end="67:44"><name pos:start="65:13" pos:end="65:19">fprintf</name><argument_list pos:start="65:20" pos:end="67:44">(<argument pos:start="65:21" pos:end="65:26"><expr pos:start="65:21" pos:end="65:26"><name pos:start="65:21" pos:end="65:26">stderr</name></expr></argument>, <argument pos:start="65:29" pos:end="67:43"><expr pos:start="65:29" pos:end="67:43"><literal type="string" pos:start="65:29" pos:end="65:67">"injects mce exception while previous "</literal>

                    <literal type="string" pos:start="67:21" pos:end="67:43">"one is in progress!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:59"><expr pos:start="69:13" pos:end="69:58"><call pos:start="69:13" pos:end="69:58"><name pos:start="69:13" pos:end="69:25">qemu_log_mask</name><argument_list pos:start="69:26" pos:end="69:58">(<argument pos:start="69:27" pos:end="69:39"><expr pos:start="69:27" pos:end="69:39"><name pos:start="69:27" pos:end="69:39">CPU_LOG_RESET</name></expr></argument>, <argument pos:start="69:42" pos:end="69:57"><expr pos:start="69:42" pos:end="69:57"><literal type="string" pos:start="69:42" pos:end="69:57">"Triple fault\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:40"><expr pos:start="71:13" pos:end="71:39"><call pos:start="71:13" pos:end="71:39"><name pos:start="71:13" pos:end="71:37">qemu_system_reset_request</name><argument_list pos:start="71:38" pos:end="71:39">()</argument_list></call></expr>;</expr_stmt>

            <return pos:start="73:13" pos:end="73:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="77:9" pos:end="79:38"><if pos:start="77:9" pos:end="79:38">if <condition pos:start="77:12" pos:end="77:38">(<expr pos:start="77:13" pos:end="77:37"><name pos:start="77:13" pos:end="77:20"><name pos:start="77:13" pos:end="77:17">banks</name><index pos:start="77:18" pos:end="77:20">[<expr pos:start="77:19" pos:end="77:19"><literal type="number" pos:start="77:19" pos:end="77:19">1</literal></expr>]</index></name> <operator pos:start="77:22" pos:end="77:22">&amp;</operator> <name pos:start="77:24" pos:end="77:37">MCI_STATUS_VAL</name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:38"><block_content pos:start="79:13" pos:end="79:38">

            <expr_stmt pos:start="79:13" pos:end="79:38"><expr pos:start="79:13" pos:end="79:37"><name pos:start="79:13" pos:end="79:18">status</name> <operator pos:start="79:20" pos:end="79:21">|=</operator> <name pos:start="79:23" pos:end="79:37">MCI_STATUS_OVER</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:24"><expr pos:start="81:9" pos:end="81:23"><name pos:start="81:9" pos:end="81:16"><name pos:start="81:9" pos:end="81:13">banks</name><index pos:start="81:14" pos:end="81:16">[<expr pos:start="81:15" pos:end="81:15"><literal type="number" pos:start="81:15" pos:end="81:15">2</literal></expr>]</index></name> <operator pos:start="81:18" pos:end="81:18">=</operator> <name pos:start="81:20" pos:end="81:23">addr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:24"><expr pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:13">banks</name><index pos:start="83:14" pos:end="83:16">[<expr pos:start="83:15" pos:end="83:15"><literal type="number" pos:start="83:15" pos:end="83:15">3</literal></expr>]</index></name> <operator pos:start="83:18" pos:end="83:18">=</operator> <name pos:start="83:20" pos:end="83:23">misc</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:38"><expr pos:start="85:9" pos:end="85:37"><name pos:start="85:9" pos:end="85:24"><name pos:start="85:9" pos:end="85:12">cenv</name><operator pos:start="85:13" pos:end="85:14">-&gt;</operator><name pos:start="85:15" pos:end="85:24">mcg_status</name></name> <operator pos:start="85:26" pos:end="85:26">=</operator> <name pos:start="85:28" pos:end="85:37">mcg_status</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:26"><expr pos:start="87:9" pos:end="87:25"><name pos:start="87:9" pos:end="87:16"><name pos:start="87:9" pos:end="87:13">banks</name><index pos:start="87:14" pos:end="87:16">[<expr pos:start="87:15" pos:end="87:15"><literal type="number" pos:start="87:15" pos:end="87:15">1</literal></expr>]</index></name> <operator pos:start="87:18" pos:end="87:18">=</operator> <name pos:start="87:20" pos:end="87:25">status</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:47"><expr pos:start="89:9" pos:end="89:46"><call pos:start="89:9" pos:end="89:46"><name pos:start="89:9" pos:end="89:21">cpu_interrupt</name><argument_list pos:start="89:22" pos:end="89:46">(<argument pos:start="89:23" pos:end="89:26"><expr pos:start="89:23" pos:end="89:26"><name pos:start="89:23" pos:end="89:26">cenv</name></expr></argument>, <argument pos:start="89:29" pos:end="89:45"><expr pos:start="89:29" pos:end="89:45"><name pos:start="89:29" pos:end="89:45">CPU_INTERRUPT_MCE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="91:7" pos:end="105:5">else if <condition pos:start="91:15" pos:end="93:46">(<expr pos:start="91:16" pos:end="93:45"><operator pos:start="91:16" pos:end="91:16">!</operator><operator pos:start="91:17" pos:end="91:17">(</operator><name pos:start="91:18" pos:end="91:25"><name pos:start="91:18" pos:end="91:22">banks</name><index pos:start="91:23" pos:end="91:25">[<expr pos:start="91:24" pos:end="91:24"><literal type="number" pos:start="91:24" pos:end="91:24">1</literal></expr>]</index></name> <operator pos:start="91:27" pos:end="91:27">&amp;</operator> <name pos:start="91:29" pos:end="91:42">MCI_STATUS_VAL</name><operator pos:start="91:43" pos:end="91:43">)</operator>

               <operator pos:start="93:16" pos:end="93:17">||</operator> <operator pos:start="93:19" pos:end="93:19">!</operator><operator pos:start="93:20" pos:end="93:20">(</operator><name pos:start="93:21" pos:end="93:28"><name pos:start="93:21" pos:end="93:25">banks</name><index pos:start="93:26" pos:end="93:28">[<expr pos:start="93:27" pos:end="93:27"><literal type="number" pos:start="93:27" pos:end="93:27">1</literal></expr>]</index></name> <operator pos:start="93:30" pos:end="93:30">&amp;</operator> <name pos:start="93:32" pos:end="93:44">MCI_STATUS_UC</name><operator pos:start="93:45" pos:end="93:45">)</operator></expr>)</condition> <block pos:start="93:48" pos:end="105:5">{<block_content pos:start="95:9" pos:end="103:26">

        <if_stmt pos:start="95:9" pos:end="97:38"><if pos:start="95:9" pos:end="97:38">if <condition pos:start="95:12" pos:end="95:38">(<expr pos:start="95:13" pos:end="95:37"><name pos:start="95:13" pos:end="95:20"><name pos:start="95:13" pos:end="95:17">banks</name><index pos:start="95:18" pos:end="95:20">[<expr pos:start="95:19" pos:end="95:19"><literal type="number" pos:start="95:19" pos:end="95:19">1</literal></expr>]</index></name> <operator pos:start="95:22" pos:end="95:22">&amp;</operator> <name pos:start="95:24" pos:end="95:37">MCI_STATUS_VAL</name></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:38"><block_content pos:start="97:13" pos:end="97:38">

            <expr_stmt pos:start="97:13" pos:end="97:38"><expr pos:start="97:13" pos:end="97:37"><name pos:start="97:13" pos:end="97:18">status</name> <operator pos:start="97:20" pos:end="97:21">|=</operator> <name pos:start="97:23" pos:end="97:37">MCI_STATUS_OVER</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:24"><expr pos:start="99:9" pos:end="99:23"><name pos:start="99:9" pos:end="99:16"><name pos:start="99:9" pos:end="99:13">banks</name><index pos:start="99:14" pos:end="99:16">[<expr pos:start="99:15" pos:end="99:15"><literal type="number" pos:start="99:15" pos:end="99:15">2</literal></expr>]</index></name> <operator pos:start="99:18" pos:end="99:18">=</operator> <name pos:start="99:20" pos:end="99:23">addr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:24"><expr pos:start="101:9" pos:end="101:23"><name pos:start="101:9" pos:end="101:16"><name pos:start="101:9" pos:end="101:13">banks</name><index pos:start="101:14" pos:end="101:16">[<expr pos:start="101:15" pos:end="101:15"><literal type="number" pos:start="101:15" pos:end="101:15">3</literal></expr>]</index></name> <operator pos:start="101:18" pos:end="101:18">=</operator> <name pos:start="101:20" pos:end="101:23">misc</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:26"><expr pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:16"><name pos:start="103:9" pos:end="103:13">banks</name><index pos:start="103:14" pos:end="103:16">[<expr pos:start="103:15" pos:end="103:15"><literal type="number" pos:start="103:15" pos:end="103:15">1</literal></expr>]</index></name> <operator pos:start="103:18" pos:end="103:18">=</operator> <name pos:start="103:20" pos:end="103:25">status</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="105:7" pos:end="107:36">else<block type="pseudo" pos:start="107:9" pos:end="107:36"><block_content pos:start="107:9" pos:end="107:36">

        <expr_stmt pos:start="107:9" pos:end="107:36"><expr pos:start="107:9" pos:end="107:35"><name pos:start="107:9" pos:end="107:16"><name pos:start="107:9" pos:end="107:13">banks</name><index pos:start="107:14" pos:end="107:16">[<expr pos:start="107:15" pos:end="107:15"><literal type="number" pos:start="107:15" pos:end="107:15">1</literal></expr>]</index></name> <operator pos:start="107:18" pos:end="107:19">|=</operator> <name pos:start="107:21" pos:end="107:35">MCI_STATUS_OVER</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
