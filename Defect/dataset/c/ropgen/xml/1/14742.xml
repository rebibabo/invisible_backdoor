<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14742.c" pos:tabs="8"><function pos:start="1:1" pos:end="58:14"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:16">slirp_input</name><parameter_list pos:start="1:17" pos:end="1:49">(<parameter pos:start="1:18" pos:end="1:35"><decl pos:start="1:18" pos:end="1:35"><type pos:start="1:18" pos:end="1:35"><specifier pos:start="1:18" pos:end="1:22">const</specifier> <name pos:start="1:24" pos:end="1:30">uint8_t</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">pkt</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:48"><decl pos:start="1:38" pos:end="1:48"><type pos:start="1:38" pos:end="1:48"><name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:48">pkt_len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="58:14">{<block_content pos:start="5:5" pos:end="58:14">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:15">mbuf</name></name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">m</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">proto</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:15"><if pos:start="11:5" pos:end="13:15">if <condition pos:start="11:8" pos:end="11:27">(<expr pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:15">pkt_len</name> <operator pos:start="11:17" pos:end="11:17">&lt;</operator> <name pos:start="11:19" pos:end="11:26">ETH_HLEN</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:15"><block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:43"><expr pos:start="17:5" pos:end="17:42"><name pos:start="17:5" pos:end="17:9">proto</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <call pos:start="17:13" pos:end="17:42"><name pos:start="17:13" pos:end="17:17">ntohs</name><argument_list pos:start="17:18" pos:end="17:42">(<argument pos:start="17:19" pos:end="17:41"><expr pos:start="17:19" pos:end="17:41"><operator pos:start="17:19" pos:end="17:19">*</operator><operator pos:start="17:20" pos:end="17:20">(</operator><name pos:start="17:21" pos:end="17:28">uint16_t</name> <operator pos:start="17:30" pos:end="17:30">*</operator><operator pos:start="17:31" pos:end="17:31">)</operator><operator pos:start="17:32" pos:end="17:32">(</operator><name pos:start="17:33" pos:end="17:35">pkt</name> <operator pos:start="17:37" pos:end="17:37">+</operator> <literal type="number" pos:start="17:39" pos:end="17:40">12</literal><operator pos:start="17:41" pos:end="17:41">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="19:5" pos:end="58:14">switch<condition pos:start="19:11" pos:end="19:17">(<expr pos:start="19:12" pos:end="19:16"><name pos:start="19:12" pos:end="19:16">proto</name></expr>)</condition> <block pos:start="19:19" pos:end="58:14">{<block_content pos:start="21:5" pos:end="58:14">

    <case pos:start="21:5" pos:end="21:19">case <expr pos:start="21:10" pos:end="21:18"><name pos:start="21:10" pos:end="21:18">ETH_P_ARP</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:32"><expr pos:start="23:9" pos:end="23:31"><call pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:17">arp_input</name><argument_list pos:start="23:18" pos:end="23:31">(<argument pos:start="23:19" pos:end="23:21"><expr pos:start="23:19" pos:end="23:21"><name pos:start="23:19" pos:end="23:21">pkt</name></expr></argument>, <argument pos:start="23:24" pos:end="23:30"><expr pos:start="23:24" pos:end="23:30"><name pos:start="23:24" pos:end="23:30">pkt_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:18">case <expr pos:start="27:10" pos:end="27:17"><name pos:start="27:10" pos:end="27:17">ETH_P_IP</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:20"><expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:9">m</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <call pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:17">m_get</name><argument_list pos:start="29:18" pos:end="29:19">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:19"><if pos:start="31:9" pos:end="33:19">if <condition pos:start="31:12" pos:end="31:15">(<expr pos:start="31:13" pos:end="31:14"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:14">m</name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:19"><block_content pos:start="33:13" pos:end="33:19">

            <return pos:start="33:13" pos:end="33:19">return;</return></block_content></block></if></if_stmt>

        <comment type="block" pos:start="35:9" pos:end="35:49">/* Note: we add to align the IP header */</comment>




        <expr_stmt pos:start="40:9" pos:end="40:31"><expr pos:start="40:9" pos:end="40:30"><name pos:start="40:9" pos:end="40:16"><name pos:start="40:9" pos:end="40:9">m</name><operator pos:start="40:10" pos:end="40:11">-&gt;</operator><name pos:start="40:12" pos:end="40:16">m_len</name></name> <operator pos:start="40:18" pos:end="40:18">=</operator> <name pos:start="40:20" pos:end="40:26">pkt_len</name> <operator pos:start="40:28" pos:end="40:28">+</operator> <literal type="number" pos:start="40:30" pos:end="40:30">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="42:9" pos:end="42:44"><expr pos:start="42:9" pos:end="42:43"><call pos:start="42:9" pos:end="42:43"><name pos:start="42:9" pos:end="42:14">memcpy</name><argument_list pos:start="42:15" pos:end="42:43">(<argument pos:start="42:16" pos:end="42:28"><expr pos:start="42:16" pos:end="42:28"><name pos:start="42:16" pos:end="42:24"><name pos:start="42:16" pos:end="42:16">m</name><operator pos:start="42:17" pos:end="42:18">-&gt;</operator><name pos:start="42:19" pos:end="42:24">m_data</name></name> <operator pos:start="42:26" pos:end="42:26">+</operator> <literal type="number" pos:start="42:28" pos:end="42:28">2</literal></expr></argument>, <argument pos:start="42:31" pos:end="42:33"><expr pos:start="42:31" pos:end="42:33"><name pos:start="42:31" pos:end="42:33">pkt</name></expr></argument>, <argument pos:start="42:36" pos:end="42:42"><expr pos:start="42:36" pos:end="42:42"><name pos:start="42:36" pos:end="42:42">pkt_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="46:9" pos:end="46:34"><expr pos:start="46:9" pos:end="46:33"><name pos:start="46:9" pos:end="46:17"><name pos:start="46:9" pos:end="46:9">m</name><operator pos:start="46:10" pos:end="46:11">-&gt;</operator><name pos:start="46:12" pos:end="46:17">m_data</name></name> <operator pos:start="46:19" pos:end="46:20">+=</operator> <literal type="number" pos:start="46:22" pos:end="46:24">2</literal> <operator pos:start="46:24" pos:end="46:24">+</operator> <name pos:start="46:26" pos:end="46:33">ETH_HLEN</name></expr>;</expr_stmt>

        <expr_stmt pos:start="48:9" pos:end="48:33"><expr pos:start="48:9" pos:end="48:32"><name pos:start="48:9" pos:end="48:16"><name pos:start="48:9" pos:end="48:9">m</name><operator pos:start="48:10" pos:end="48:11">-&gt;</operator><name pos:start="48:12" pos:end="48:16">m_len</name></name> <operator pos:start="48:18" pos:end="48:19">-=</operator> <literal type="number" pos:start="48:21" pos:end="48:23">2</literal> <operator pos:start="48:23" pos:end="48:23">+</operator> <name pos:start="48:25" pos:end="48:32">ETH_HLEN</name></expr>;</expr_stmt>



        <expr_stmt pos:start="52:9" pos:end="52:20"><expr pos:start="52:9" pos:end="52:19"><call pos:start="52:9" pos:end="52:19"><name pos:start="52:9" pos:end="52:16">ip_input</name><argument_list pos:start="52:17" pos:end="52:19">(<argument pos:start="52:18" pos:end="52:18"><expr pos:start="52:18" pos:end="52:18"><name pos:start="52:18" pos:end="52:18">m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="54:9" pos:end="54:14">break;</break>

    <default pos:start="56:5" pos:end="56:12">default:</default>

        <break pos:start="58:9" pos:end="58:14">break;</break></block_content></block></switch></block_content></block></function>

</unit>
