<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12925.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">pci_piix3_xen_ide_unplug</name><parameter_list pos:start="1:29" pos:end="1:46">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:40">DeviceState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">PCIIDEState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:24">pci_ide</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">DriveInfo</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">di</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name> <init pos:start="9:11" pos:end="9:13">= <expr pos:start="9:13" pos:end="9:13"><literal type="number" pos:start="9:13" pos:end="9:13">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:11">pci_ide</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:26"><name pos:start="13:15" pos:end="13:21">PCI_IDE</name><argument_list pos:start="13:22" pos:end="13:26">(<argument pos:start="13:23" pos:end="13:25"><expr pos:start="13:23" pos:end="13:25"><name pos:start="13:23" pos:end="13:25">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="17:5" pos:end="39:5">for <control pos:start="17:9" pos:end="17:22">(<init pos:start="17:10" pos:end="17:10">;</init> <condition pos:start="17:12" pos:end="17:17"><expr pos:start="17:12" pos:end="17:16"><name pos:start="17:12" pos:end="17:12">i</name> <operator pos:start="17:14" pos:end="17:14">&lt;</operator> <literal type="number" pos:start="17:16" pos:end="17:16">3</literal></expr>;</condition> <incr pos:start="17:19" pos:end="17:21"><expr pos:start="17:19" pos:end="17:21"><name pos:start="17:19" pos:end="17:19">i</name><operator pos:start="17:20" pos:end="17:21">++</operator></expr></incr>)</control> <block pos:start="17:24" pos:end="39:5">{<block_content pos:start="19:9" pos:end="37:9">

        <expr_stmt pos:start="19:9" pos:end="19:43"><expr pos:start="19:9" pos:end="19:42"><name pos:start="19:9" pos:end="19:10">di</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <call pos:start="19:14" pos:end="19:42"><name pos:start="19:14" pos:end="19:31">drive_get_by_index</name><argument_list pos:start="19:32" pos:end="19:42">(<argument pos:start="19:33" pos:end="19:38"><expr pos:start="19:33" pos:end="19:38"><name pos:start="19:33" pos:end="19:38">IF_IDE</name></expr></argument>, <argument pos:start="19:41" pos:end="19:41"><expr pos:start="19:41" pos:end="19:41"><name pos:start="19:41" pos:end="19:41">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="37:9"><if pos:start="21:9" pos:end="37:9">if <condition pos:start="21:12" pos:end="21:40">(<expr pos:start="21:13" pos:end="21:39"><name pos:start="21:13" pos:end="21:14">di</name> <operator pos:start="21:16" pos:end="21:17">!=</operator> <name pos:start="21:19" pos:end="21:22">NULL</name> <operator pos:start="21:24" pos:end="21:25">&amp;&amp;</operator> <operator pos:start="21:27" pos:end="21:27">!</operator><name pos:start="21:28" pos:end="21:39"><name pos:start="21:28" pos:end="21:29">di</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:39">media_cd</name></name></expr>)</condition> <block pos:start="21:42" pos:end="37:9">{<block_content pos:start="23:13" pos:end="35:27">

            <decl_stmt pos:start="23:13" pos:end="23:56"><decl pos:start="23:13" pos:end="23:55"><type pos:start="23:13" pos:end="23:26"><name pos:start="23:13" pos:end="23:24">BlockBackend</name> <modifier pos:start="23:26" pos:end="23:26">*</modifier></type><name pos:start="23:27" pos:end="23:29">blk</name> <init pos:start="23:31" pos:end="23:55">= <expr pos:start="23:33" pos:end="23:55"><call pos:start="23:33" pos:end="23:55"><name pos:start="23:33" pos:end="23:51">blk_by_legacy_dinfo</name><argument_list pos:start="23:52" pos:end="23:55">(<argument pos:start="23:53" pos:end="23:54"><expr pos:start="23:53" pos:end="23:54"><name pos:start="23:53" pos:end="23:54">di</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="25:13" pos:end="25:56"><decl pos:start="25:13" pos:end="25:55"><type pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:23">DeviceState</name> <modifier pos:start="25:25" pos:end="25:25">*</modifier></type><name pos:start="25:26" pos:end="25:27">ds</name> <init pos:start="25:29" pos:end="25:55">= <expr pos:start="25:31" pos:end="25:55"><call pos:start="25:31" pos:end="25:55"><name pos:start="25:31" pos:end="25:50">blk_get_attached_dev</name><argument_list pos:start="25:51" pos:end="25:55">(<argument pos:start="25:52" pos:end="25:54"><expr pos:start="25:52" pos:end="25:54"><name pos:start="25:52" pos:end="25:54">blk</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="27:13" pos:end="31:13"><if pos:start="27:13" pos:end="31:13">if <condition pos:start="27:16" pos:end="27:19">(<expr pos:start="27:17" pos:end="27:18"><name pos:start="27:17" pos:end="27:18">ds</name></expr>)</condition> <block pos:start="27:21" pos:end="31:13">{<block_content pos:start="29:17" pos:end="29:40">

                <expr_stmt pos:start="29:17" pos:end="29:40"><expr pos:start="29:17" pos:end="29:39"><call pos:start="29:17" pos:end="29:39"><name pos:start="29:17" pos:end="29:30">blk_detach_dev</name><argument_list pos:start="29:31" pos:end="29:39">(<argument pos:start="29:32" pos:end="29:34"><expr pos:start="29:32" pos:end="29:34"><name pos:start="29:32" pos:end="29:34">blk</name></expr></argument>, <argument pos:start="29:37" pos:end="29:38"><expr pos:start="29:37" pos:end="29:38"><name pos:start="29:37" pos:end="29:38">ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:59"><expr pos:start="33:13" pos:end="33:58"><name pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:19">pci_ide</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:24">bus</name><index pos:start="33:25" pos:end="33:33">[<expr pos:start="33:26" pos:end="33:32"><name pos:start="33:26" pos:end="33:32"><name pos:start="33:26" pos:end="33:27">di</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:32">bus</name></name></expr>]</index></name><operator pos:start="33:34" pos:end="33:34">.</operator><name pos:start="33:35" pos:end="33:47"><name pos:start="33:35" pos:end="33:37">ifs</name><index pos:start="33:38" pos:end="33:47">[<expr pos:start="33:39" pos:end="33:46"><name pos:start="33:39" pos:end="33:46"><name pos:start="33:39" pos:end="33:40">di</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:46">unit</name></name></expr>]</index></name><operator pos:start="33:48" pos:end="33:48">.</operator><name pos:start="33:49" pos:end="33:51">blk</name> <operator pos:start="33:53" pos:end="33:53">=</operator> <name pos:start="33:55" pos:end="33:58">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:27"><expr pos:start="35:13" pos:end="35:26"><call pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:21">blk_unref</name><argument_list pos:start="35:22" pos:end="35:26">(<argument pos:start="35:23" pos:end="35:25"><expr pos:start="35:23" pos:end="35:25"><name pos:start="35:23" pos:end="35:25">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="41:5" pos:end="41:32"><expr pos:start="41:5" pos:end="41:31"><call pos:start="41:5" pos:end="41:31"><name pos:start="41:5" pos:end="41:18">qdev_reset_all</name><argument_list pos:start="41:19" pos:end="41:31">(<argument pos:start="41:20" pos:end="41:30"><expr pos:start="41:20" pos:end="41:30"><call pos:start="41:20" pos:end="41:30"><name pos:start="41:20" pos:end="41:25">DEVICE</name><argument_list pos:start="41:26" pos:end="41:30">(<argument pos:start="41:27" pos:end="41:29"><expr pos:start="41:27" pos:end="41:29"><name pos:start="41:27" pos:end="41:29">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
