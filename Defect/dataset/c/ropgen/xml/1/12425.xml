<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12425.c" pos:tabs="8"><function pos:start="1:1" pos:end="159:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">archipelago_aio_segmented_rw</name><parameter_list pos:start="1:40" pos:end="9:47">(<parameter pos:start="1:41" pos:end="1:63"><decl pos:start="1:41" pos:end="1:63"><type pos:start="1:41" pos:end="1:63"><name pos:start="1:41" pos:end="1:60">BDRVArchipelagoState</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:63">s</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:52"><decl pos:start="3:41" pos:end="3:52"><type pos:start="3:41" pos:end="3:52"><name pos:start="3:41" pos:end="3:46">size_t</name></type> <name pos:start="3:48" pos:end="3:52">count</name></decl></parameter>,

                                        <parameter pos:start="5:41" pos:end="5:52"><decl pos:start="5:41" pos:end="5:52"><type pos:start="5:41" pos:end="5:52"><name pos:start="5:41" pos:end="5:45">off_t</name></type> <name pos:start="5:47" pos:end="5:52">offset</name></decl></parameter>,

                                        <parameter pos:start="7:41" pos:end="7:64"><decl pos:start="7:41" pos:end="7:64"><type pos:start="7:41" pos:end="7:64"><name pos:start="7:41" pos:end="7:56">ArchipelagoAIOCB</name> <modifier pos:start="7:58" pos:end="7:58">*</modifier></type><name pos:start="7:59" pos:end="7:64">aio_cb</name></decl></parameter>,

                                        <parameter pos:start="9:41" pos:end="9:46"><decl pos:start="9:41" pos:end="9:46"><type pos:start="9:41" pos:end="9:46"><name pos:start="9:41" pos:end="9:43">int</name></type> <name pos:start="9:45" pos:end="9:46">op</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="159:1">{<block_content pos:start="13:5" pos:end="157:15">

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:14">ret</name></decl>, <decl pos:start="13:17" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:17" pos:end="13:27">segments_nr</name></decl>, <decl pos:start="13:30" pos:end="13:46"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:30" pos:end="13:46">last_segment_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:40"><decl pos:start="15:5" pos:end="15:39"><type pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:31">ArchipelagoSegmentedRequest</name> <modifier pos:start="15:33" pos:end="15:33">*</modifier></type><name pos:start="15:34" pos:end="15:39">segreq</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:59"><expr pos:start="19:5" pos:end="19:58"><name pos:start="19:5" pos:end="19:10">segreq</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <call pos:start="19:14" pos:end="19:58"><name pos:start="19:14" pos:end="19:21">g_malloc</name><argument_list pos:start="19:22" pos:end="19:58">(<argument pos:start="19:23" pos:end="19:57"><expr pos:start="19:23" pos:end="19:57"><sizeof pos:start="19:23" pos:end="19:57">sizeof<argument_list pos:start="19:29" pos:end="19:57">(<argument pos:start="19:30" pos:end="19:56"><expr pos:start="19:30" pos:end="19:56"><name pos:start="19:30" pos:end="19:56">ArchipelagoSegmentedRequest</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="47:5"><if pos:start="23:5" pos:end="47:5">if <condition pos:start="23:8" pos:end="23:30">(<expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:10">op</name> <operator pos:start="23:12" pos:end="23:13">==</operator> <name pos:start="23:15" pos:end="23:29">ARCHIP_OP_FLUSH</name></expr>)</condition> <block pos:start="23:32" pos:end="47:5">{<block_content pos:start="25:9" pos:end="45:17">

        <expr_stmt pos:start="25:9" pos:end="25:24"><expr pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:19">segments_nr</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <literal type="number" pos:start="25:23" pos:end="25:23">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:34"><expr pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:14">segreq</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:19">ref</name></name> <operator pos:start="27:21" pos:end="27:21">=</operator> <name pos:start="27:23" pos:end="27:33">segments_nr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:30"><expr pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:14">segreq</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:21">total</name></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:29">count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:26"><expr pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:14">segreq</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:21">count</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <literal type="number" pos:start="31:25" pos:end="31:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:27"><expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:14">segreq</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:22">failed</name></name> <operator pos:start="33:24" pos:end="33:24">=</operator> <literal type="number" pos:start="33:26" pos:end="33:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="37:68"><expr pos:start="35:9" pos:end="37:67"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="37:67"><name pos:start="35:15" pos:end="35:40">archipelago_submit_request</name><argument_list pos:start="35:41" pos:end="37:67">(<argument pos:start="35:42" pos:end="35:42"><expr pos:start="35:42" pos:end="35:42"><name pos:start="35:42" pos:end="35:42">s</name></expr></argument>, <argument pos:start="35:45" pos:end="35:45"><expr pos:start="35:45" pos:end="35:45"><literal type="number" pos:start="35:45" pos:end="35:45">0</literal></expr></argument>, <argument pos:start="35:48" pos:end="35:52"><expr pos:start="35:48" pos:end="35:52"><name pos:start="35:48" pos:end="35:52">count</name></expr></argument>, <argument pos:start="35:55" pos:end="35:60"><expr pos:start="35:55" pos:end="35:60"><name pos:start="35:55" pos:end="35:60">offset</name></expr></argument>, <argument pos:start="35:63" pos:end="35:68"><expr pos:start="35:63" pos:end="35:68"><name pos:start="35:63" pos:end="35:68">aio_cb</name></expr></argument>,

                                           <argument pos:start="37:44" pos:end="37:49"><expr pos:start="37:44" pos:end="37:49"><name pos:start="37:44" pos:end="37:49">segreq</name></expr></argument>, <argument pos:start="37:52" pos:end="37:66"><expr pos:start="37:52" pos:end="37:66"><name pos:start="37:52" pos:end="37:66">ARCHIP_OP_FLUSH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:20">(<expr pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:17">&lt;</operator> <literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>)</condition> <block pos:start="39:22" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:26">

            <goto pos:start="41:13" pos:end="41:26">goto <name pos:start="41:18" pos:end="41:25">err_exit</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <return pos:start="45:9" pos:end="45:17">return <expr pos:start="45:16" pos:end="45:16"><literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="53:55"><expr pos:start="51:5" pos:end="53:54"><name pos:start="51:5" pos:end="51:15">segments_nr</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <operator pos:start="51:19" pos:end="51:19">(</operator><name pos:start="51:20" pos:end="51:22">int</name><operator pos:start="51:23" pos:end="51:23">)</operator><operator pos:start="51:24" pos:end="51:24">(</operator><name pos:start="51:25" pos:end="51:29">count</name> <operator pos:start="51:31" pos:end="51:31">/</operator> <name pos:start="51:33" pos:end="51:48">MAX_REQUEST_SIZE</name><operator pos:start="51:49" pos:end="51:49">)</operator> <operator pos:start="51:51" pos:end="51:51">+</operator> \

                  <operator pos:start="53:19" pos:end="53:19">(</operator><ternary pos:start="53:20" pos:end="53:53"><condition pos:start="53:20" pos:end="53:47"><expr pos:start="53:20" pos:end="53:45"><operator pos:start="53:20" pos:end="53:20">(</operator><name pos:start="53:21" pos:end="53:25">count</name> <operator pos:start="53:27" pos:end="53:27">%</operator> <name pos:start="53:29" pos:end="53:44">MAX_REQUEST_SIZE</name><operator pos:start="53:45" pos:end="53:45">)</operator></expr> ?</condition><then pos:start="53:49" pos:end="53:49"> <expr pos:start="53:49" pos:end="53:49"><literal type="number" pos:start="53:49" pos:end="53:49">1</literal></expr> </then><else pos:start="53:51" pos:end="53:53">: <expr pos:start="53:53" pos:end="53:53"><literal type="number" pos:start="53:53" pos:end="53:53">0</literal></expr></else></ternary><operator pos:start="53:54" pos:end="53:54">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:56"><expr pos:start="55:5" pos:end="55:55"><name pos:start="55:5" pos:end="55:21">last_segment_size</name> <operator pos:start="55:23" pos:end="55:23">=</operator> <operator pos:start="55:25" pos:end="55:25">(</operator><name pos:start="55:26" pos:end="55:28">int</name><operator pos:start="55:29" pos:end="55:29">)</operator><operator pos:start="55:30" pos:end="55:30">(</operator><name pos:start="55:31" pos:end="55:35">count</name> <operator pos:start="55:37" pos:end="55:37">%</operator> <name pos:start="55:39" pos:end="55:54">MAX_REQUEST_SIZE</name><operator pos:start="55:55" pos:end="55:55">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:30"><expr pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:15"><name pos:start="59:5" pos:end="59:10">segreq</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:15">ref</name></name> <operator pos:start="59:17" pos:end="59:17">=</operator> <name pos:start="59:19" pos:end="59:29">segments_nr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:26"><expr pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:17"><name pos:start="61:5" pos:end="61:10">segreq</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:17">total</name></name> <operator pos:start="61:19" pos:end="61:19">=</operator> <name pos:start="61:21" pos:end="61:25">count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:22"><expr pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:17"><name pos:start="63:5" pos:end="63:10">segreq</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:17">count</name></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <literal type="number" pos:start="63:21" pos:end="63:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:23"><expr pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:18"><name pos:start="65:5" pos:end="65:10">segreq</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:18">failed</name></name> <operator pos:start="65:20" pos:end="65:20">=</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>;</expr_stmt>



    <for pos:start="69:5" pos:end="87:5">for <control pos:start="69:9" pos:end="69:41">(<init pos:start="69:10" pos:end="69:15"><expr pos:start="69:10" pos:end="69:14"><name pos:start="69:10" pos:end="69:10">i</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <literal type="number" pos:start="69:14" pos:end="69:14">0</literal></expr>;</init> <condition pos:start="69:17" pos:end="69:36"><expr pos:start="69:17" pos:end="69:35"><name pos:start="69:17" pos:end="69:17">i</name> <operator pos:start="69:19" pos:end="69:19">&lt;</operator> <name pos:start="69:21" pos:end="69:31">segments_nr</name> <operator pos:start="69:33" pos:end="69:33">-</operator> <literal type="number" pos:start="69:35" pos:end="69:35">1</literal></expr>;</condition> <incr pos:start="69:38" pos:end="69:40"><expr pos:start="69:38" pos:end="69:40"><name pos:start="69:38" pos:end="69:38">i</name><operator pos:start="69:39" pos:end="69:40">++</operator></expr></incr>)</control> <block pos:start="69:43" pos:end="87:5">{<block_content pos:start="71:9" pos:end="85:9">

        <expr_stmt pos:start="71:9" pos:end="77:63"><expr pos:start="71:9" pos:end="77:62"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="77:62"><name pos:start="71:15" pos:end="71:40">archipelago_submit_request</name><argument_list pos:start="71:41" pos:end="77:62">(<argument pos:start="71:42" pos:end="71:42"><expr pos:start="71:42" pos:end="71:42"><name pos:start="71:42" pos:end="71:42">s</name></expr></argument>, <argument pos:start="71:45" pos:end="71:64"><expr pos:start="71:45" pos:end="71:64"><name pos:start="71:45" pos:end="71:45">i</name> <operator pos:start="71:47" pos:end="71:47">*</operator> <name pos:start="71:49" pos:end="71:64">MAX_REQUEST_SIZE</name></expr></argument>,

                                           <argument pos:start="73:44" pos:end="73:59"><expr pos:start="73:44" pos:end="73:59"><name pos:start="73:44" pos:end="73:59">MAX_REQUEST_SIZE</name></expr></argument>,

                                           <argument pos:start="75:44" pos:end="75:72"><expr pos:start="75:44" pos:end="75:72"><name pos:start="75:44" pos:end="75:49">offset</name> <operator pos:start="75:51" pos:end="75:51">+</operator> <name pos:start="75:53" pos:end="75:53">i</name> <operator pos:start="75:55" pos:end="75:55">*</operator> <name pos:start="75:57" pos:end="75:72">MAX_REQUEST_SIZE</name></expr></argument>,

                                           <argument pos:start="77:44" pos:end="77:49"><expr pos:start="77:44" pos:end="77:49"><name pos:start="77:44" pos:end="77:49">aio_cb</name></expr></argument>, <argument pos:start="77:52" pos:end="77:57"><expr pos:start="77:52" pos:end="77:57"><name pos:start="77:52" pos:end="77:57">segreq</name></expr></argument>, <argument pos:start="77:60" pos:end="77:61"><expr pos:start="77:60" pos:end="77:61"><name pos:start="77:60" pos:end="77:61">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="81:9" pos:end="85:9"><if pos:start="81:9" pos:end="85:9">if <condition pos:start="81:12" pos:end="81:20">(<expr pos:start="81:13" pos:end="81:19"><name pos:start="81:13" pos:end="81:15">ret</name> <operator pos:start="81:17" pos:end="81:17">&lt;</operator> <literal type="number" pos:start="81:19" pos:end="81:19">0</literal></expr>)</condition> <block pos:start="81:22" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:26">

            <goto pos:start="83:13" pos:end="83:26">goto <name pos:start="83:18" pos:end="83:25">err_exit</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="91:5" pos:end="117:5"><if pos:start="91:5" pos:end="101:5">if <condition pos:start="91:8" pos:end="91:47">(<expr pos:start="91:9" pos:end="91:46"><operator pos:start="91:9" pos:end="91:9">(</operator><name pos:start="91:10" pos:end="91:20">segments_nr</name> <operator pos:start="91:22" pos:end="91:22">&gt;</operator> <literal type="number" pos:start="91:24" pos:end="91:24">1</literal><operator pos:start="91:25" pos:end="91:25">)</operator> <operator pos:start="91:27" pos:end="91:28">&amp;&amp;</operator> <name pos:start="91:30" pos:end="91:46">last_segment_size</name></expr>)</condition> <block pos:start="91:49" pos:end="101:5">{<block_content pos:start="93:9" pos:end="99:63">

        <expr_stmt pos:start="93:9" pos:end="99:63"><expr pos:start="93:9" pos:end="99:62"><name pos:start="93:9" pos:end="93:11">ret</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <call pos:start="93:15" pos:end="99:62"><name pos:start="93:15" pos:end="93:40">archipelago_submit_request</name><argument_list pos:start="93:41" pos:end="99:62">(<argument pos:start="93:42" pos:end="93:42"><expr pos:start="93:42" pos:end="93:42"><name pos:start="93:42" pos:end="93:42">s</name></expr></argument>, <argument pos:start="93:45" pos:end="93:64"><expr pos:start="93:45" pos:end="93:64"><name pos:start="93:45" pos:end="93:45">i</name> <operator pos:start="93:47" pos:end="93:47">*</operator> <name pos:start="93:49" pos:end="93:64">MAX_REQUEST_SIZE</name></expr></argument>,

                                           <argument pos:start="95:44" pos:end="95:60"><expr pos:start="95:44" pos:end="95:60"><name pos:start="95:44" pos:end="95:60">last_segment_size</name></expr></argument>,

                                           <argument pos:start="97:44" pos:end="97:72"><expr pos:start="97:44" pos:end="97:72"><name pos:start="97:44" pos:end="97:49">offset</name> <operator pos:start="97:51" pos:end="97:51">+</operator> <name pos:start="97:53" pos:end="97:53">i</name> <operator pos:start="97:55" pos:end="97:55">*</operator> <name pos:start="97:57" pos:end="97:72">MAX_REQUEST_SIZE</name></expr></argument>,

                                           <argument pos:start="99:44" pos:end="99:49"><expr pos:start="99:44" pos:end="99:49"><name pos:start="99:44" pos:end="99:49">aio_cb</name></expr></argument>, <argument pos:start="99:52" pos:end="99:57"><expr pos:start="99:52" pos:end="99:57"><name pos:start="99:52" pos:end="99:57">segreq</name></expr></argument>, <argument pos:start="99:60" pos:end="99:61"><expr pos:start="99:60" pos:end="99:61"><name pos:start="99:60" pos:end="99:61">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="101:7" pos:end="111:5">else if <condition pos:start="101:15" pos:end="101:55">(<expr pos:start="101:16" pos:end="101:54"><operator pos:start="101:16" pos:end="101:16">(</operator><name pos:start="101:17" pos:end="101:27">segments_nr</name> <operator pos:start="101:29" pos:end="101:29">&gt;</operator> <literal type="number" pos:start="101:31" pos:end="101:31">1</literal><operator pos:start="101:32" pos:end="101:32">)</operator> <operator pos:start="101:34" pos:end="101:35">&amp;&amp;</operator> <operator pos:start="101:37" pos:end="101:37">!</operator><name pos:start="101:38" pos:end="101:54">last_segment_size</name></expr>)</condition> <block pos:start="101:57" pos:end="111:5">{<block_content pos:start="103:9" pos:end="109:63">

        <expr_stmt pos:start="103:9" pos:end="109:63"><expr pos:start="103:9" pos:end="109:62"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <call pos:start="103:15" pos:end="109:62"><name pos:start="103:15" pos:end="103:40">archipelago_submit_request</name><argument_list pos:start="103:41" pos:end="109:62">(<argument pos:start="103:42" pos:end="103:42"><expr pos:start="103:42" pos:end="103:42"><name pos:start="103:42" pos:end="103:42">s</name></expr></argument>, <argument pos:start="103:45" pos:end="103:64"><expr pos:start="103:45" pos:end="103:64"><name pos:start="103:45" pos:end="103:45">i</name> <operator pos:start="103:47" pos:end="103:47">*</operator> <name pos:start="103:49" pos:end="103:64">MAX_REQUEST_SIZE</name></expr></argument>,

                                           <argument pos:start="105:44" pos:end="105:59"><expr pos:start="105:44" pos:end="105:59"><name pos:start="105:44" pos:end="105:59">MAX_REQUEST_SIZE</name></expr></argument>,

                                           <argument pos:start="107:44" pos:end="107:72"><expr pos:start="107:44" pos:end="107:72"><name pos:start="107:44" pos:end="107:49">offset</name> <operator pos:start="107:51" pos:end="107:51">+</operator> <name pos:start="107:53" pos:end="107:53">i</name> <operator pos:start="107:55" pos:end="107:55">*</operator> <name pos:start="107:57" pos:end="107:72">MAX_REQUEST_SIZE</name></expr></argument>,

                                           <argument pos:start="109:44" pos:end="109:49"><expr pos:start="109:44" pos:end="109:49"><name pos:start="109:44" pos:end="109:49">aio_cb</name></expr></argument>, <argument pos:start="109:52" pos:end="109:57"><expr pos:start="109:52" pos:end="109:57"><name pos:start="109:52" pos:end="109:57">segreq</name></expr></argument>, <argument pos:start="109:60" pos:end="109:61"><expr pos:start="109:60" pos:end="109:61"><name pos:start="109:60" pos:end="109:61">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="111:7" pos:end="117:5">else if <condition pos:start="111:15" pos:end="111:32">(<expr pos:start="111:16" pos:end="111:31"><name pos:start="111:16" pos:end="111:26">segments_nr</name> <operator pos:start="111:28" pos:end="111:29">==</operator> <literal type="number" pos:start="111:31" pos:end="111:31">1</literal></expr>)</condition> <block pos:start="111:34" pos:end="117:5">{<block_content pos:start="113:13" pos:end="115:59">

            <expr_stmt pos:start="113:13" pos:end="115:59"><expr pos:start="113:13" pos:end="115:58"><name pos:start="113:13" pos:end="113:15">ret</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <call pos:start="113:19" pos:end="115:58"><name pos:start="113:19" pos:end="113:44">archipelago_submit_request</name><argument_list pos:start="113:45" pos:end="115:58">(<argument pos:start="113:46" pos:end="113:46"><expr pos:start="113:46" pos:end="113:46"><name pos:start="113:46" pos:end="113:46">s</name></expr></argument>, <argument pos:start="113:49" pos:end="113:49"><expr pos:start="113:49" pos:end="113:49"><literal type="number" pos:start="113:49" pos:end="113:49">0</literal></expr></argument>, <argument pos:start="113:52" pos:end="113:56"><expr pos:start="113:52" pos:end="113:56"><name pos:start="113:52" pos:end="113:56">count</name></expr></argument>, <argument pos:start="113:59" pos:end="113:64"><expr pos:start="113:59" pos:end="113:64"><name pos:start="113:59" pos:end="113:64">offset</name></expr></argument>, <argument pos:start="113:67" pos:end="113:72"><expr pos:start="113:67" pos:end="113:72"><name pos:start="113:67" pos:end="113:72">aio_cb</name></expr></argument>,

                                               <argument pos:start="115:48" pos:end="115:53"><expr pos:start="115:48" pos:end="115:53"><name pos:start="115:48" pos:end="115:53">segreq</name></expr></argument>, <argument pos:start="115:56" pos:end="115:57"><expr pos:start="115:56" pos:end="115:57"><name pos:start="115:56" pos:end="115:57">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="121:5" pos:end="125:5"><if pos:start="121:5" pos:end="125:5">if <condition pos:start="121:8" pos:end="121:16">(<expr pos:start="121:9" pos:end="121:15"><name pos:start="121:9" pos:end="121:11">ret</name> <operator pos:start="121:13" pos:end="121:13">&lt;</operator> <literal type="number" pos:start="121:15" pos:end="121:15">0</literal></expr>)</condition> <block pos:start="121:18" pos:end="125:5">{<block_content pos:start="123:9" pos:end="123:22">

        <goto pos:start="123:9" pos:end="123:22">goto <name pos:start="123:14" pos:end="123:21">err_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <return pos:start="129:5" pos:end="129:13">return <expr pos:start="129:12" pos:end="129:12"><literal type="number" pos:start="129:12" pos:end="129:12">0</literal></expr>;</return>



<label pos:start="133:1" pos:end="133:9"><name pos:start="133:1" pos:end="133:8">err_exit</name>:</label>

    <expr_stmt pos:start="135:5" pos:end="135:45"><expr pos:start="135:5" pos:end="135:44"><call pos:start="135:5" pos:end="135:44"><name pos:start="135:5" pos:end="135:24">__sync_add_and_fetch</name><argument_list pos:start="135:25" pos:end="135:44">(<argument pos:start="135:26" pos:end="135:40"><expr pos:start="135:26" pos:end="135:40"><operator pos:start="135:26" pos:end="135:26">&amp;</operator><name pos:start="135:27" pos:end="135:40"><name pos:start="135:27" pos:end="135:32">segreq</name><operator pos:start="135:33" pos:end="135:34">-&gt;</operator><name pos:start="135:35" pos:end="135:40">failed</name></name></expr></argument>, <argument pos:start="135:43" pos:end="135:43"><expr pos:start="135:43" pos:end="135:43"><literal type="number" pos:start="135:43" pos:end="135:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="153:5"><if pos:start="137:5" pos:end="145:5">if <condition pos:start="137:8" pos:end="137:25">(<expr pos:start="137:9" pos:end="137:24"><name pos:start="137:9" pos:end="137:19">segments_nr</name> <operator pos:start="137:21" pos:end="137:22">==</operator> <literal type="number" pos:start="137:24" pos:end="137:24">1</literal></expr>)</condition> <block pos:start="137:27" pos:end="145:5">{<block_content pos:start="139:9" pos:end="143:9">

        <if_stmt pos:start="139:9" pos:end="143:9"><if pos:start="139:9" pos:end="143:9">if <condition pos:start="139:12" pos:end="139:56">(<expr pos:start="139:13" pos:end="139:55"><call pos:start="139:13" pos:end="139:50"><name pos:start="139:13" pos:end="139:32">__sync_add_and_fetch</name><argument_list pos:start="139:33" pos:end="139:50">(<argument pos:start="139:34" pos:end="139:45"><expr pos:start="139:34" pos:end="139:45"><operator pos:start="139:34" pos:end="139:34">&amp;</operator><name pos:start="139:35" pos:end="139:45"><name pos:start="139:35" pos:end="139:40">segreq</name><operator pos:start="139:41" pos:end="139:42">-&gt;</operator><name pos:start="139:43" pos:end="139:45">ref</name></name></expr></argument>, <argument pos:start="139:48" pos:end="139:49"><expr pos:start="139:48" pos:end="139:49"><operator pos:start="139:48" pos:end="139:48">-</operator><literal type="number" pos:start="139:49" pos:end="139:49">1</literal></expr></argument>)</argument_list></call> <operator pos:start="139:52" pos:end="139:53">==</operator> <literal type="number" pos:start="139:55" pos:end="139:55">0</literal></expr>)</condition> <block pos:start="139:58" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:27">

            <expr_stmt pos:start="141:13" pos:end="141:27"><expr pos:start="141:13" pos:end="141:26"><call pos:start="141:13" pos:end="141:26"><name pos:start="141:13" pos:end="141:18">g_free</name><argument_list pos:start="141:19" pos:end="141:26">(<argument pos:start="141:20" pos:end="141:25"><expr pos:start="141:20" pos:end="141:25"><name pos:start="141:20" pos:end="141:25">segreq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="145:7" pos:end="153:5">else <block pos:start="145:12" pos:end="153:5">{<block_content pos:start="147:9" pos:end="151:9">

        <if_stmt pos:start="147:9" pos:end="151:9"><if pos:start="147:9" pos:end="151:9">if <condition pos:start="147:12" pos:end="147:72">(<expr pos:start="147:13" pos:end="147:71"><operator pos:start="147:13" pos:end="147:13">(</operator><call pos:start="147:14" pos:end="147:65"><name pos:start="147:14" pos:end="147:33">__sync_add_and_fetch</name><argument_list pos:start="147:34" pos:end="147:65">(<argument pos:start="147:35" pos:end="147:46"><expr pos:start="147:35" pos:end="147:46"><operator pos:start="147:35" pos:end="147:35">&amp;</operator><name pos:start="147:36" pos:end="147:46"><name pos:start="147:36" pos:end="147:41">segreq</name><operator pos:start="147:42" pos:end="147:43">-&gt;</operator><name pos:start="147:44" pos:end="147:46">ref</name></name></expr></argument>, <argument pos:start="147:49" pos:end="147:64"><expr pos:start="147:49" pos:end="147:64"><operator pos:start="147:49" pos:end="147:49">-</operator><name pos:start="147:50" pos:end="147:60">segments_nr</name> <operator pos:start="147:62" pos:end="147:62">+</operator> <name pos:start="147:64" pos:end="147:64">i</name></expr></argument>)</argument_list></call><operator pos:start="147:66" pos:end="147:66">)</operator> <operator pos:start="147:68" pos:end="147:69">==</operator> <literal type="number" pos:start="147:71" pos:end="147:71">0</literal></expr>)</condition> <block pos:start="147:74" pos:end="151:9">{<block_content pos:start="149:13" pos:end="149:27">

            <expr_stmt pos:start="149:13" pos:end="149:27"><expr pos:start="149:13" pos:end="149:26"><call pos:start="149:13" pos:end="149:26"><name pos:start="149:13" pos:end="149:18">g_free</name><argument_list pos:start="149:19" pos:end="149:26">(<argument pos:start="149:20" pos:end="149:25"><expr pos:start="149:20" pos:end="149:25"><name pos:start="149:20" pos:end="149:25">segreq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="157:5" pos:end="157:15">return <expr pos:start="157:12" pos:end="157:14"><name pos:start="157:12" pos:end="157:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
