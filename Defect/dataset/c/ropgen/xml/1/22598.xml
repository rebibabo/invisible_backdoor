<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22598.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">of_dpa_cmd_group_add</name><parameter_list pos:start="1:32" pos:end="3:55">(<parameter pos:start="1:33" pos:end="1:45"><decl pos:start="1:33" pos:end="1:45"><type pos:start="1:33" pos:end="1:45"><name pos:start="1:33" pos:end="1:37">OfDpa</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">of_dpa</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:64"><decl pos:start="1:48" pos:end="1:64"><type pos:start="1:48" pos:end="1:64"><name pos:start="1:48" pos:end="1:55">uint32_t</name></type> <name pos:start="1:57" pos:end="1:64">group_id</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:54"><decl pos:start="3:33" pos:end="3:54"><type pos:start="3:33" pos:end="3:54"><name pos:start="3:33" pos:end="3:41">RockerTlv</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier><modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:54">group_tlvs</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:15">

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">OfDpaGroup</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:21">group</name> <init pos:start="7:23" pos:end="7:59">= <expr pos:start="7:25" pos:end="7:59"><call pos:start="7:25" pos:end="7:59"><name pos:start="7:25" pos:end="7:41">of_dpa_group_find</name><argument_list pos:start="7:42" pos:end="7:59">(<argument pos:start="7:43" pos:end="7:48"><expr pos:start="7:43" pos:end="7:48"><name pos:start="7:43" pos:end="7:48">of_dpa</name></expr></argument>, <argument pos:start="7:51" pos:end="7:58"><expr pos:start="7:51" pos:end="7:58"><name pos:start="7:51" pos:end="7:58">group_id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:14">(<expr pos:start="13:9" pos:end="13:13"><name pos:start="13:9" pos:end="13:13">group</name></expr>)</condition> <block pos:start="13:16" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:30">

        <return pos:start="15:9" pos:end="15:30">return <expr pos:start="15:16" pos:end="15:29"><operator pos:start="15:16" pos:end="15:16">-</operator><name pos:start="15:17" pos:end="15:29">ROCKER_EEXIST</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:9">group</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:30">of_dpa_group_alloc</name><argument_list pos:start="21:31" pos:end="21:40">(<argument pos:start="21:32" pos:end="21:39"><expr pos:start="21:32" pos:end="21:39"><name pos:start="21:32" pos:end="21:39">group_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:15">(<expr pos:start="23:9" pos:end="23:14"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:14">group</name></expr>)</condition> <block pos:start="23:17" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:30">

        <return pos:start="25:9" pos:end="25:30">return <expr pos:start="25:16" pos:end="25:29"><operator pos:start="25:16" pos:end="25:16">-</operator><name pos:start="25:17" pos:end="25:29">ROCKER_ENOMEM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:67"><expr pos:start="31:5" pos:end="31:66"><name pos:start="31:5" pos:end="31:7">err</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:66"><name pos:start="31:11" pos:end="31:29">of_dpa_cmd_group_do</name><argument_list pos:start="31:30" pos:end="31:66">(<argument pos:start="31:31" pos:end="31:36"><expr pos:start="31:31" pos:end="31:36"><name pos:start="31:31" pos:end="31:36">of_dpa</name></expr></argument>, <argument pos:start="31:39" pos:end="31:46"><expr pos:start="31:39" pos:end="31:46"><name pos:start="31:39" pos:end="31:46">group_id</name></expr></argument>, <argument pos:start="31:49" pos:end="31:53"><expr pos:start="31:49" pos:end="31:53"><name pos:start="31:49" pos:end="31:53">group</name></expr></argument>, <argument pos:start="31:56" pos:end="31:65"><expr pos:start="31:56" pos:end="31:65"><name pos:start="31:56" pos:end="31:65">group_tlvs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:12">(<expr pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">err</name></expr>)</condition> <block pos:start="33:14" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:25">

        <goto pos:start="35:9" pos:end="35:25">goto <name pos:start="35:14" pos:end="35:24">err_cmd_add</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:41"><name pos:start="41:5" pos:end="41:7">err</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:41"><name pos:start="41:11" pos:end="41:26">of_dpa_group_add</name><argument_list pos:start="41:27" pos:end="41:41">(<argument pos:start="41:28" pos:end="41:33"><expr pos:start="41:28" pos:end="41:33"><name pos:start="41:28" pos:end="41:33">of_dpa</name></expr></argument>, <argument pos:start="41:36" pos:end="41:40"><expr pos:start="41:36" pos:end="41:40"><name pos:start="41:36" pos:end="41:40">group</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:12">(<expr pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">err</name></expr>)</condition> <block pos:start="43:14" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:25">

        <goto pos:start="45:9" pos:end="45:25">goto <name pos:start="45:14" pos:end="45:24">err_cmd_add</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <return pos:start="51:5" pos:end="51:21">return <expr pos:start="51:12" pos:end="51:20"><name pos:start="51:12" pos:end="51:20">ROCKER_OK</name></expr>;</return>



<label pos:start="55:1" pos:end="55:12"><name pos:start="55:1" pos:end="55:11">err_cmd_add</name>:</label>

    <expr_stmt pos:start="57:5" pos:end="57:18"><expr pos:start="57:5" pos:end="57:17"><call pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:10">g_free</name><argument_list pos:start="57:11" pos:end="57:17">(<argument pos:start="57:12" pos:end="57:16"><expr pos:start="57:12" pos:end="57:16"><name pos:start="57:12" pos:end="57:16">group</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="59:5" pos:end="59:15">return <expr pos:start="59:12" pos:end="59:14"><name pos:start="59:12" pos:end="59:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
