<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21055.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">rm_assemble_video_frame</name><parameter_list pos:start="1:35" pos:end="5:58">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:50">AVFormatContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:72"><decl pos:start="1:56" pos:end="1:72"><type pos:start="1:56" pos:end="1:72"><name pos:start="1:56" pos:end="1:68">ByteIOContext</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:72">pb</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:53"><decl pos:start="3:36" pos:end="3:53"><type pos:start="3:36" pos:end="3:53"><name pos:start="3:36" pos:end="3:49">RMDemuxContext</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:53">rm</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:68"><decl pos:start="3:56" pos:end="3:68"><type pos:start="3:56" pos:end="3:68"><name pos:start="3:56" pos:end="3:63">RMStream</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier></type><name pos:start="3:66" pos:end="3:68">vst</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:48"><decl pos:start="5:36" pos:end="5:48"><type pos:start="5:36" pos:end="5:48"><name pos:start="5:36" pos:end="5:43">AVPacket</name> <modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:48">pkt</name></decl></parameter>, <parameter pos:start="5:51" pos:end="5:57"><decl pos:start="5:51" pos:end="5:57"><type pos:start="5:51" pos:end="5:57"><name pos:start="5:51" pos:end="5:53">int</name></type> <name pos:start="5:55" pos:end="5:57">len</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="155:1">{<block_content pos:start="9:5" pos:end="153:13">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">hdr</name></decl>, <decl pos:start="9:14" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:16">seq</name></decl>, <decl pos:start="9:19" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:25">pic_num</name></decl>, <decl pos:start="9:28" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:31">len2</name></decl>, <decl pos:start="9:34" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:34" pos:end="9:36">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">type</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:7">hdr</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:22"><name pos:start="15:11" pos:end="15:18">get_byte</name><argument_list pos:start="15:19" pos:end="15:22">(<argument pos:start="15:20" pos:end="15:21"><expr pos:start="15:20" pos:end="15:21"><name pos:start="15:20" pos:end="15:21">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="15:25" pos:end="15:30"><expr pos:start="15:25" pos:end="15:29"><name pos:start="15:25" pos:end="15:27">len</name><operator pos:start="15:28" pos:end="15:29">--</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:8">type</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <name pos:start="17:12" pos:end="17:14">hdr</name> <operator pos:start="17:16" pos:end="17:17">&gt;&gt;</operator> <literal type="number" pos:start="17:19" pos:end="17:19">6</literal></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if<condition pos:start="21:7" pos:end="21:17">(<expr pos:start="21:8" pos:end="21:16"><name pos:start="21:8" pos:end="21:11">type</name> <operator pos:start="21:13" pos:end="21:14">!=</operator> <literal type="number" pos:start="21:16" pos:end="21:16">3</literal></expr>)</condition><block pos:start="21:18" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:34">  <comment type="line" pos:start="21:21" pos:end="21:52">// not frame as a part of packet</comment>

        <expr_stmt pos:start="23:9" pos:end="23:27"><expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:11">seq</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:26"><name pos:start="23:15" pos:end="23:22">get_byte</name><argument_list pos:start="23:23" pos:end="23:26">(<argument pos:start="23:24" pos:end="23:25"><expr pos:start="23:24" pos:end="23:25"><name pos:start="23:24" pos:end="23:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="23:29" pos:end="23:34"><expr pos:start="23:29" pos:end="23:33"><name pos:start="23:29" pos:end="23:31">len</name><operator pos:start="23:32" pos:end="23:33">--</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if<condition pos:start="27:7" pos:end="27:17">(<expr pos:start="27:8" pos:end="27:16"><name pos:start="27:8" pos:end="27:11">type</name> <operator pos:start="27:13" pos:end="27:14">!=</operator> <literal type="number" pos:start="27:16" pos:end="27:16">1</literal></expr>)</condition><block pos:start="27:18" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:38">  <comment type="line" pos:start="27:21" pos:end="27:38">// not whole frame</comment>

        <expr_stmt pos:start="29:9" pos:end="29:33"><expr pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:12">len2</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:32"><name pos:start="29:16" pos:end="29:22">get_num</name><argument_list pos:start="29:23" pos:end="29:32">(<argument pos:start="29:24" pos:end="29:25"><expr pos:start="29:24" pos:end="29:25"><name pos:start="29:24" pos:end="29:25">pb</name></expr></argument>, <argument pos:start="29:28" pos:end="29:31"><expr pos:start="29:28" pos:end="29:31"><operator pos:start="29:28" pos:end="29:28">&amp;</operator><name pos:start="29:29" pos:end="29:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:33"><expr pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:11">pos</name>  <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:32"><name pos:start="31:16" pos:end="31:22">get_num</name><argument_list pos:start="31:23" pos:end="31:32">(<argument pos:start="31:24" pos:end="31:25"><expr pos:start="31:24" pos:end="31:25"><name pos:start="31:24" pos:end="31:25">pb</name></expr></argument>, <argument pos:start="31:28" pos:end="31:31"><expr pos:start="31:28" pos:end="31:31"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:31"><expr pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:15">pic_num</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:30"><name pos:start="33:19" pos:end="33:26">get_byte</name><argument_list pos:start="33:27" pos:end="33:30">(<argument pos:start="33:28" pos:end="33:29"><expr pos:start="33:28" pos:end="33:29"><name pos:start="33:28" pos:end="33:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="33:33" pos:end="33:38"><expr pos:start="33:33" pos:end="33:37"><name pos:start="33:33" pos:end="33:35">len</name><operator pos:start="33:36" pos:end="33:37">--</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="39:18"><if pos:start="37:5" pos:end="39:18">if<condition pos:start="37:7" pos:end="37:13">(<expr pos:start="37:8" pos:end="37:12"><name pos:start="37:8" pos:end="37:10">len</name><operator pos:start="37:11" pos:end="37:11">&lt;</operator><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:28"><expr pos:start="41:5" pos:end="41:27"><name pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:6">rm</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:21">remaining_len</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:27">len</name></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="69:5"><if pos:start="43:5" pos:end="69:5">if<condition pos:start="43:7" pos:end="43:14">(<expr pos:start="43:8" pos:end="43:13"><name pos:start="43:8" pos:end="43:11">type</name><operator pos:start="43:12" pos:end="43:12">&amp;</operator><literal type="number" pos:start="43:13" pos:end="43:13">1</literal></expr>)</condition><block pos:start="43:15" pos:end="69:5">{<block_content pos:start="45:9" pos:end="67:17">     <comment type="line" pos:start="43:21" pos:end="43:39">// frame, not slice</comment>

        <if_stmt pos:start="45:9" pos:end="47:22"><if pos:start="45:9" pos:end="47:22">if<condition pos:start="45:11" pos:end="45:21">(<expr pos:start="45:12" pos:end="45:20"><name pos:start="45:12" pos:end="45:15">type</name> <operator pos:start="45:17" pos:end="45:18">==</operator> <literal type="number" pos:start="45:20" pos:end="45:20">3</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:22"><block_content pos:start="47:13" pos:end="47:22">  <comment type="line" pos:start="45:24" pos:end="45:51">// frame as a part of packet</comment>

            <expr_stmt pos:start="47:13" pos:end="47:22"><expr pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:15">len</name><operator pos:start="47:16" pos:end="47:16">=</operator> <name pos:start="47:18" pos:end="47:21">len2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="51:22"><if pos:start="49:9" pos:end="51:22">if<condition pos:start="49:11" pos:end="49:35">(<expr pos:start="49:12" pos:end="49:34"><name pos:start="49:12" pos:end="49:28"><name pos:start="49:12" pos:end="49:13">rm</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:28">remaining_len</name></name> <operator pos:start="49:30" pos:end="49:30">&lt;</operator> <name pos:start="49:32" pos:end="49:34">len</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:22"><block_content pos:start="51:13" pos:end="51:22">

            <return pos:start="51:13" pos:end="51:22">return <expr pos:start="51:20" pos:end="51:21"><operator pos:start="51:20" pos:end="51:20">-</operator><literal type="number" pos:start="51:21" pos:end="51:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:33"><expr pos:start="53:9" pos:end="53:32"><name pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:10">rm</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:25">remaining_len</name></name> <operator pos:start="53:27" pos:end="53:28">-=</operator> <name pos:start="53:30" pos:end="53:32">len</name></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="57:32"><if pos:start="55:9" pos:end="57:32">if<condition pos:start="55:11" pos:end="55:43">(<expr pos:start="55:12" pos:end="55:42"><call pos:start="55:12" pos:end="55:38"><name pos:start="55:12" pos:end="55:24">av_new_packet</name><argument_list pos:start="55:25" pos:end="55:38">(<argument pos:start="55:26" pos:end="55:28"><expr pos:start="55:26" pos:end="55:28"><name pos:start="55:26" pos:end="55:28">pkt</name></expr></argument>, <argument pos:start="55:31" pos:end="55:37"><expr pos:start="55:31" pos:end="55:37"><name pos:start="55:31" pos:end="55:33">len</name> <operator pos:start="55:35" pos:end="55:35">+</operator> <literal type="number" pos:start="55:37" pos:end="55:37">9</literal></expr></argument>)</argument_list></call> <operator pos:start="55:40" pos:end="55:40">&lt;</operator> <literal type="number" pos:start="55:42" pos:end="55:42">0</literal></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:32"><block_content pos:start="57:13" pos:end="57:32">

            <return pos:start="57:13" pos:end="57:32">return <expr pos:start="57:20" pos:end="57:31"><call pos:start="57:20" pos:end="57:31"><name pos:start="57:20" pos:end="57:26">AVERROR</name><argument_list pos:start="57:27" pos:end="57:31">(<argument pos:start="57:28" pos:end="57:30"><expr pos:start="57:28" pos:end="57:30"><name pos:start="57:28" pos:end="57:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:25"><expr pos:start="59:9" pos:end="59:24"><name pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:11">pkt</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:17">data</name><index pos:start="59:18" pos:end="59:20">[<expr pos:start="59:19" pos:end="59:19"><literal type="number" pos:start="59:19" pos:end="59:19">0</literal></expr>]</index></name> <operator pos:start="59:22" pos:end="59:22">=</operator> <literal type="number" pos:start="59:24" pos:end="59:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:34"><expr pos:start="61:9" pos:end="61:33"><call pos:start="61:9" pos:end="61:33"><name pos:start="61:9" pos:end="61:15">AV_WL32</name><argument_list pos:start="61:16" pos:end="61:33">(<argument pos:start="61:17" pos:end="61:29"><expr pos:start="61:17" pos:end="61:29"><name pos:start="61:17" pos:end="61:25"><name pos:start="61:17" pos:end="61:19">pkt</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:25">data</name></name> <operator pos:start="61:27" pos:end="61:27">+</operator> <literal type="number" pos:start="61:29" pos:end="61:29">1</literal></expr></argument>, <argument pos:start="61:32" pos:end="61:32"><expr pos:start="61:32" pos:end="61:32"><literal type="number" pos:start="61:32" pos:end="61:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:34"><expr pos:start="63:9" pos:end="63:33"><call pos:start="63:9" pos:end="63:33"><name pos:start="63:9" pos:end="63:15">AV_WL32</name><argument_list pos:start="63:16" pos:end="63:33">(<argument pos:start="63:17" pos:end="63:29"><expr pos:start="63:17" pos:end="63:29"><name pos:start="63:17" pos:end="63:25"><name pos:start="63:17" pos:end="63:19">pkt</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:25">data</name></name> <operator pos:start="63:27" pos:end="63:27">+</operator> <literal type="number" pos:start="63:29" pos:end="63:29">5</literal></expr></argument>, <argument pos:start="63:32" pos:end="63:32"><expr pos:start="63:32" pos:end="63:32"><literal type="number" pos:start="63:32" pos:end="63:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:43"><expr pos:start="65:9" pos:end="65:42"><call pos:start="65:9" pos:end="65:42"><name pos:start="65:9" pos:end="65:18">get_buffer</name><argument_list pos:start="65:19" pos:end="65:42">(<argument pos:start="65:20" pos:end="65:21"><expr pos:start="65:20" pos:end="65:21"><name pos:start="65:20" pos:end="65:21">pb</name></expr></argument>, <argument pos:start="65:24" pos:end="65:36"><expr pos:start="65:24" pos:end="65:36"><name pos:start="65:24" pos:end="65:32"><name pos:start="65:24" pos:end="65:26">pkt</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:32">data</name></name> <operator pos:start="65:34" pos:end="65:34">+</operator> <literal type="number" pos:start="65:36" pos:end="65:36">9</literal></expr></argument>, <argument pos:start="65:39" pos:end="65:41"><expr pos:start="65:39" pos:end="65:41"><name pos:start="65:39" pos:end="65:41">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:17">return <expr pos:start="67:16" pos:end="67:16"><literal type="number" pos:start="67:16" pos:end="67:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="71:5" pos:end="71:43">//now we have to deal with single slice</comment>



    <if_stmt pos:start="75:5" pos:end="95:5"><if pos:start="75:5" pos:end="95:5">if<condition pos:start="75:7" pos:end="75:55">(<expr pos:start="75:8" pos:end="75:54"><operator pos:start="75:8" pos:end="75:8">(</operator><name pos:start="75:9" pos:end="75:11">seq</name> <operator pos:start="75:13" pos:end="75:13">&amp;</operator> <literal type="number" pos:start="75:15" pos:end="75:18">0x7F</literal><operator pos:start="75:19" pos:end="75:19">)</operator> <operator pos:start="75:21" pos:end="75:22">==</operator> <literal type="number" pos:start="75:24" pos:end="75:24">1</literal> <operator pos:start="75:26" pos:end="75:27">||</operator> <name pos:start="75:29" pos:end="75:43"><name pos:start="75:29" pos:end="75:31">vst</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:43">curpic_num</name></name> <operator pos:start="75:45" pos:end="75:46">!=</operator> <name pos:start="75:48" pos:end="75:54">pic_num</name></expr>)</condition><block pos:start="75:56" pos:end="95:5">{<block_content pos:start="77:9" pos:end="93:36">

        <expr_stmt pos:start="77:9" pos:end="77:46"><expr pos:start="77:9" pos:end="77:45"><name pos:start="77:9" pos:end="77:19"><name pos:start="77:9" pos:end="77:11">vst</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:19">slices</name></name> <operator pos:start="77:21" pos:end="77:21">=</operator> <operator pos:start="77:23" pos:end="77:23">(</operator><operator pos:start="77:24" pos:end="77:24">(</operator><name pos:start="77:25" pos:end="77:27">hdr</name> <operator pos:start="77:29" pos:end="77:29">&amp;</operator> <literal type="number" pos:start="77:31" pos:end="77:34">0x3F</literal><operator pos:start="77:35" pos:end="77:35">)</operator> <operator pos:start="77:37" pos:end="77:38">&lt;&lt;</operator> <literal type="number" pos:start="77:40" pos:end="77:40">1</literal><operator pos:start="77:41" pos:end="77:41">)</operator> <operator pos:start="77:43" pos:end="77:43">+</operator> <literal type="number" pos:start="77:45" pos:end="77:45">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:53"><expr pos:start="79:9" pos:end="79:52"><name pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:11">vst</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:25">videobufsize</name></name> <operator pos:start="79:27" pos:end="79:27">=</operator> <name pos:start="79:29" pos:end="79:32">len2</name> <operator pos:start="79:34" pos:end="79:34">+</operator> <literal type="number" pos:start="79:36" pos:end="79:36">8</literal><operator pos:start="79:37" pos:end="79:37">*</operator><name pos:start="79:38" pos:end="79:48"><name pos:start="79:38" pos:end="79:40">vst</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:48">slices</name></name> <operator pos:start="79:50" pos:end="79:50">+</operator> <literal type="number" pos:start="79:52" pos:end="79:52">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:34"><expr pos:start="81:9" pos:end="81:33"><call pos:start="81:9" pos:end="81:33"><name pos:start="81:9" pos:end="81:22">av_free_packet</name><argument_list pos:start="81:23" pos:end="81:33">(<argument pos:start="81:24" pos:end="81:32"><expr pos:start="81:24" pos:end="81:32"><operator pos:start="81:24" pos:end="81:24">&amp;</operator><name pos:start="81:25" pos:end="81:32"><name pos:start="81:25" pos:end="81:27">vst</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:32">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="81:36" pos:end="81:65">//FIXME this should be output.</comment>

        <if_stmt pos:start="83:9" pos:end="85:35"><if pos:start="83:9" pos:end="85:35">if<condition pos:start="83:11" pos:end="83:59">(<expr pos:start="83:12" pos:end="83:58"><call pos:start="83:12" pos:end="83:54"><name pos:start="83:12" pos:end="83:24">av_new_packet</name><argument_list pos:start="83:25" pos:end="83:54">(<argument pos:start="83:26" pos:end="83:34"><expr pos:start="83:26" pos:end="83:34"><operator pos:start="83:26" pos:end="83:26">&amp;</operator><name pos:start="83:27" pos:end="83:34"><name pos:start="83:27" pos:end="83:29">vst</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:34">pkt</name></name></expr></argument>, <argument pos:start="83:37" pos:end="83:53"><expr pos:start="83:37" pos:end="83:53"><name pos:start="83:37" pos:end="83:53"><name pos:start="83:37" pos:end="83:39">vst</name><operator pos:start="83:40" pos:end="83:41">-&gt;</operator><name pos:start="83:42" pos:end="83:53">videobufsize</name></name></expr></argument>)</argument_list></call> <operator pos:start="83:56" pos:end="83:56">&lt;</operator> <literal type="number" pos:start="83:58" pos:end="83:58">0</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:35"><block_content pos:start="85:13" pos:end="85:35">

            <return pos:start="85:13" pos:end="85:35">return <expr pos:start="85:20" pos:end="85:34"><call pos:start="85:20" pos:end="85:34"><name pos:start="85:20" pos:end="85:26">AVERROR</name><argument_list pos:start="85:27" pos:end="85:34">(<argument pos:start="85:28" pos:end="85:33"><expr pos:start="85:28" pos:end="85:33"><name pos:start="85:28" pos:end="85:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:45"><expr pos:start="87:9" pos:end="87:44"><name pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:11">vst</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:24">videobufpos</name></name> <operator pos:start="87:26" pos:end="87:26">=</operator> <literal type="number" pos:start="87:28" pos:end="87:28">8</literal><operator pos:start="87:29" pos:end="87:29">*</operator><name pos:start="87:30" pos:end="87:40"><name pos:start="87:30" pos:end="87:32">vst</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:40">slices</name></name> <operator pos:start="87:42" pos:end="87:42">+</operator> <literal type="number" pos:start="87:44" pos:end="87:44">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:27"><expr pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:11">vst</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:22">cur_slice</name></name> <operator pos:start="89:24" pos:end="89:24">=</operator> <literal type="number" pos:start="89:26" pos:end="89:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:34"><expr pos:start="91:9" pos:end="91:33"><name pos:start="91:9" pos:end="91:23"><name pos:start="91:9" pos:end="91:11">vst</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:23">curpic_num</name></name> <operator pos:start="91:25" pos:end="91:25">=</operator> <name pos:start="91:27" pos:end="91:33">pic_num</name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:36"><expr pos:start="93:9" pos:end="93:35"><name pos:start="93:9" pos:end="93:19"><name pos:start="93:9" pos:end="93:11">vst</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:19">pktpos</name></name> <operator pos:start="93:21" pos:end="93:21">=</operator> <call pos:start="93:23" pos:end="93:35"><name pos:start="93:23" pos:end="93:31">url_ftell</name><argument_list pos:start="93:32" pos:end="93:35">(<argument pos:start="93:33" pos:end="93:34"><expr pos:start="93:33" pos:end="93:34"><name pos:start="93:33" pos:end="93:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="97:5" pos:end="99:30"><if pos:start="97:5" pos:end="99:30">if<condition pos:start="97:7" pos:end="97:17">(<expr pos:start="97:8" pos:end="97:16"><name pos:start="97:8" pos:end="97:11">type</name> <operator pos:start="97:13" pos:end="97:14">==</operator> <literal type="number" pos:start="97:16" pos:end="97:16">2</literal></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:30"><block_content pos:start="99:9" pos:end="99:30">

        <expr_stmt pos:start="99:9" pos:end="99:30"><expr pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:11">len</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <call pos:start="99:15" pos:end="99:29"><name pos:start="99:15" pos:end="99:19">FFMIN</name><argument_list pos:start="99:20" pos:end="99:29">(<argument pos:start="99:21" pos:end="99:23"><expr pos:start="99:21" pos:end="99:23"><name pos:start="99:21" pos:end="99:23">len</name></expr></argument>, <argument pos:start="99:26" pos:end="99:28"><expr pos:start="99:26" pos:end="99:28"><name pos:start="99:26" pos:end="99:28">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="103:5" pos:end="105:17"><if pos:start="103:5" pos:end="105:17">if<condition pos:start="103:7" pos:end="103:38">(<expr pos:start="103:8" pos:end="103:37"><operator pos:start="103:8" pos:end="103:9">++</operator><name pos:start="103:10" pos:end="103:23"><name pos:start="103:10" pos:end="103:12">vst</name><operator pos:start="103:13" pos:end="103:14">-&gt;</operator><name pos:start="103:15" pos:end="103:23">cur_slice</name></name> <operator pos:start="103:25" pos:end="103:25">&gt;</operator> <name pos:start="103:27" pos:end="103:37"><name pos:start="103:27" pos:end="103:29">vst</name><operator pos:start="103:30" pos:end="103:31">-&gt;</operator><name pos:start="103:32" pos:end="103:37">slices</name></name></expr>)</condition><block type="pseudo" pos:start="105:9" pos:end="105:17"><block_content pos:start="105:9" pos:end="105:17">

        <return pos:start="105:9" pos:end="105:17">return <expr pos:start="105:16" pos:end="105:16"><literal type="number" pos:start="105:16" pos:end="105:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:53"><expr pos:start="107:5" pos:end="107:52"><call pos:start="107:5" pos:end="107:52"><name pos:start="107:5" pos:end="107:11">AV_WL32</name><argument_list pos:start="107:12" pos:end="107:52">(<argument pos:start="107:13" pos:end="107:48"><expr pos:start="107:13" pos:end="107:48"><name pos:start="107:13" pos:end="107:25"><name pos:start="107:13" pos:end="107:15">vst</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:20">pkt</name><operator pos:start="107:21" pos:end="107:21">.</operator><name pos:start="107:22" pos:end="107:25">data</name></name> <operator pos:start="107:27" pos:end="107:27">-</operator> <literal type="number" pos:start="107:29" pos:end="107:31">7</literal> <operator pos:start="107:31" pos:end="107:31">+</operator> <literal type="number" pos:start="107:33" pos:end="107:33">8</literal><operator pos:start="107:34" pos:end="107:34">*</operator><name pos:start="107:35" pos:end="107:48"><name pos:start="107:35" pos:end="107:37">vst</name><operator pos:start="107:38" pos:end="107:39">-&gt;</operator><name pos:start="107:40" pos:end="107:48">cur_slice</name></name></expr></argument>, <argument pos:start="107:51" pos:end="107:51"><expr pos:start="107:51" pos:end="107:51"><literal type="number" pos:start="107:51" pos:end="107:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:88"><expr pos:start="109:5" pos:end="109:87"><call pos:start="109:5" pos:end="109:87"><name pos:start="109:5" pos:end="109:11">AV_WL32</name><argument_list pos:start="109:12" pos:end="109:87">(<argument pos:start="109:13" pos:end="109:48"><expr pos:start="109:13" pos:end="109:48"><name pos:start="109:13" pos:end="109:25"><name pos:start="109:13" pos:end="109:15">vst</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:20">pkt</name><operator pos:start="109:21" pos:end="109:21">.</operator><name pos:start="109:22" pos:end="109:25">data</name></name> <operator pos:start="109:27" pos:end="109:27">-</operator> <literal type="number" pos:start="109:29" pos:end="109:31">3</literal> <operator pos:start="109:31" pos:end="109:31">+</operator> <literal type="number" pos:start="109:33" pos:end="109:33">8</literal><operator pos:start="109:34" pos:end="109:34">*</operator><name pos:start="109:35" pos:end="109:48"><name pos:start="109:35" pos:end="109:37">vst</name><operator pos:start="109:38" pos:end="109:39">-&gt;</operator><name pos:start="109:40" pos:end="109:48">cur_slice</name></name></expr></argument>, <argument pos:start="109:51" pos:end="109:86"><expr pos:start="109:51" pos:end="109:86"><name pos:start="109:51" pos:end="109:66"><name pos:start="109:51" pos:end="109:53">vst</name><operator pos:start="109:54" pos:end="109:55">-&gt;</operator><name pos:start="109:56" pos:end="109:66">videobufpos</name></name> <operator pos:start="109:68" pos:end="109:68">-</operator> <literal type="number" pos:start="109:70" pos:end="109:70">8</literal><operator pos:start="109:71" pos:end="109:71">*</operator><name pos:start="109:72" pos:end="109:82"><name pos:start="109:72" pos:end="109:74">vst</name><operator pos:start="109:75" pos:end="109:76">-&gt;</operator><name pos:start="109:77" pos:end="109:82">slices</name></name> <operator pos:start="109:84" pos:end="109:84">-</operator> <literal type="number" pos:start="109:86" pos:end="109:86">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="113:17"><if pos:start="111:5" pos:end="113:17">if<condition pos:start="111:7" pos:end="111:50">(<expr pos:start="111:8" pos:end="111:49"><name pos:start="111:8" pos:end="111:23"><name pos:start="111:8" pos:end="111:10">vst</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:23">videobufpos</name></name> <operator pos:start="111:25" pos:end="111:25">+</operator> <name pos:start="111:27" pos:end="111:29">len</name> <operator pos:start="111:31" pos:end="111:31">&gt;</operator> <name pos:start="111:33" pos:end="111:49"><name pos:start="111:33" pos:end="111:35">vst</name><operator pos:start="111:36" pos:end="111:37">-&gt;</operator><name pos:start="111:38" pos:end="111:49">videobufsize</name></name></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:17"><block_content pos:start="113:9" pos:end="113:17">

        <return pos:start="113:9" pos:end="113:17">return <expr pos:start="113:16" pos:end="113:16"><literal type="number" pos:start="113:16" pos:end="113:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="117:28"><if pos:start="115:5" pos:end="117:28">if <condition pos:start="115:8" pos:end="115:69">(<expr pos:start="115:9" pos:end="115:68"><call pos:start="115:9" pos:end="115:61"><name pos:start="115:9" pos:end="115:18">get_buffer</name><argument_list pos:start="115:19" pos:end="115:61">(<argument pos:start="115:20" pos:end="115:21"><expr pos:start="115:20" pos:end="115:21"><name pos:start="115:20" pos:end="115:21">pb</name></expr></argument>, <argument pos:start="115:24" pos:end="115:55"><expr pos:start="115:24" pos:end="115:55"><name pos:start="115:24" pos:end="115:36"><name pos:start="115:24" pos:end="115:26">vst</name><operator pos:start="115:27" pos:end="115:28">-&gt;</operator><name pos:start="115:29" pos:end="115:31">pkt</name><operator pos:start="115:32" pos:end="115:32">.</operator><name pos:start="115:33" pos:end="115:36">data</name></name> <operator pos:start="115:38" pos:end="115:38">+</operator> <name pos:start="115:40" pos:end="115:55"><name pos:start="115:40" pos:end="115:42">vst</name><operator pos:start="115:43" pos:end="115:44">-&gt;</operator><name pos:start="115:45" pos:end="115:55">videobufpos</name></name></expr></argument>, <argument pos:start="115:58" pos:end="115:60"><expr pos:start="115:58" pos:end="115:60"><name pos:start="115:58" pos:end="115:60">len</name></expr></argument>)</argument_list></call> <operator pos:start="115:63" pos:end="115:64">!=</operator> <name pos:start="115:66" pos:end="115:68">len</name></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:28"><block_content pos:start="117:9" pos:end="117:28">

        <return pos:start="117:9" pos:end="117:28">return <expr pos:start="117:16" pos:end="117:27"><call pos:start="117:16" pos:end="117:27"><name pos:start="117:16" pos:end="117:22">AVERROR</name><argument_list pos:start="117:23" pos:end="117:27">(<argument pos:start="117:24" pos:end="117:26"><expr pos:start="117:24" pos:end="117:26"><name pos:start="117:24" pos:end="117:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:28"><expr pos:start="119:5" pos:end="119:27"><name pos:start="119:5" pos:end="119:20"><name pos:start="119:5" pos:end="119:7">vst</name><operator pos:start="119:8" pos:end="119:9">-&gt;</operator><name pos:start="119:10" pos:end="119:20">videobufpos</name></name> <operator pos:start="119:22" pos:end="119:23">+=</operator> <name pos:start="119:25" pos:end="119:27">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:28"><expr pos:start="121:5" pos:end="121:27"><name pos:start="121:5" pos:end="121:21"><name pos:start="121:5" pos:end="121:6">rm</name><operator pos:start="121:7" pos:end="121:8">-&gt;</operator><name pos:start="121:9" pos:end="121:21">remaining_len</name></name><operator pos:start="121:22" pos:end="121:23">-=</operator> <name pos:start="121:25" pos:end="121:27">len</name></expr>;</expr_stmt>



    <if_stmt pos:start="125:5" pos:end="149:5"><if pos:start="125:5" pos:end="149:5">if<condition pos:start="125:7" pos:end="125:60">(<expr pos:start="125:8" pos:end="125:59"><name pos:start="125:8" pos:end="125:11">type</name> <operator pos:start="125:13" pos:end="125:14">==</operator> <literal type="number" pos:start="125:16" pos:end="125:16">2</literal> <operator pos:start="125:18" pos:end="125:19">||</operator> <operator pos:start="125:21" pos:end="125:21">(</operator><name pos:start="125:22" pos:end="125:37"><name pos:start="125:22" pos:end="125:24">vst</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:37">videobufpos</name></name><operator pos:start="125:38" pos:end="125:38">)</operator> <operator pos:start="125:40" pos:end="125:41">==</operator> <name pos:start="125:43" pos:end="125:59"><name pos:start="125:43" pos:end="125:45">vst</name><operator pos:start="125:46" pos:end="125:47">-&gt;</operator><name pos:start="125:48" pos:end="125:59">videobufsize</name></name></expr>)</condition><block pos:start="125:61" pos:end="149:5">{<block_content pos:start="127:9" pos:end="147:17">

        <expr_stmt pos:start="127:9" pos:end="127:44"><expr pos:start="127:9" pos:end="127:43"><name pos:start="127:9" pos:end="127:24"><name pos:start="127:9" pos:end="127:11">vst</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:16">pkt</name><operator pos:start="127:17" pos:end="127:17">.</operator><name pos:start="127:18" pos:end="127:21">data</name><index pos:start="127:22" pos:end="127:24">[<expr pos:start="127:23" pos:end="127:23"><literal type="number" pos:start="127:23" pos:end="127:23">0</literal></expr>]</index></name> <operator pos:start="127:26" pos:end="127:26">=</operator> <name pos:start="127:28" pos:end="127:41"><name pos:start="127:28" pos:end="127:30">vst</name><operator pos:start="127:31" pos:end="127:32">-&gt;</operator><name pos:start="127:33" pos:end="127:41">cur_slice</name></name><operator pos:start="127:42" pos:end="127:42">-</operator><literal type="number" pos:start="127:43" pos:end="127:43">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:23"><expr pos:start="129:9" pos:end="129:22"><operator pos:start="129:9" pos:end="129:9">*</operator><name pos:start="129:10" pos:end="129:12">pkt</name><operator pos:start="129:13" pos:end="129:13">=</operator> <name pos:start="129:15" pos:end="129:22"><name pos:start="129:15" pos:end="129:17">vst</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:22">pkt</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="133:25"><expr pos:start="131:9" pos:end="133:24"><name pos:start="131:9" pos:end="131:21"><name pos:start="131:9" pos:end="131:11">vst</name><operator pos:start="131:12" pos:end="131:13">-&gt;</operator><name pos:start="131:14" pos:end="131:16">pkt</name><operator pos:start="131:17" pos:end="131:17">.</operator><name pos:start="131:18" pos:end="131:21">data</name></name><operator pos:start="131:22" pos:end="131:22">=</operator>

        <name pos:start="133:9" pos:end="133:21"><name pos:start="133:9" pos:end="133:11">vst</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:16">pkt</name><operator pos:start="133:17" pos:end="133:17">.</operator><name pos:start="133:18" pos:end="133:21">size</name></name><operator pos:start="133:22" pos:end="133:22">=</operator> <literal type="number" pos:start="133:24" pos:end="133:24">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="135:9" pos:end="139:54"><if pos:start="135:9" pos:end="139:54">if<condition pos:start="135:11" pos:end="135:41">(<expr pos:start="135:12" pos:end="135:40"><name pos:start="135:12" pos:end="135:22"><name pos:start="135:12" pos:end="135:14">vst</name><operator pos:start="135:15" pos:end="135:16">-&gt;</operator><name pos:start="135:17" pos:end="135:22">slices</name></name> <operator pos:start="135:24" pos:end="135:25">!=</operator> <name pos:start="135:27" pos:end="135:40"><name pos:start="135:27" pos:end="135:29">vst</name><operator pos:start="135:30" pos:end="135:31">-&gt;</operator><name pos:start="135:32" pos:end="135:40">cur_slice</name></name></expr>)</condition><block type="pseudo" pos:start="137:13" pos:end="139:54"><block_content pos:start="137:13" pos:end="139:54"> <comment type="line" pos:start="135:43" pos:end="135:99">//FIXME find out how to set slices correct from the begin</comment>

            <expr_stmt pos:start="137:13" pos:end="139:54"><expr pos:start="137:13" pos:end="139:53"><call pos:start="137:13" pos:end="139:53"><name pos:start="137:13" pos:end="137:19">memmove</name><argument_list pos:start="137:20" pos:end="139:53">(<argument pos:start="137:21" pos:end="137:52"><expr pos:start="137:21" pos:end="137:52"><name pos:start="137:21" pos:end="137:29"><name pos:start="137:21" pos:end="137:23">pkt</name><operator pos:start="137:24" pos:end="137:25">-&gt;</operator><name pos:start="137:26" pos:end="137:29">data</name></name> <operator pos:start="137:31" pos:end="137:31">+</operator> <literal type="number" pos:start="137:33" pos:end="137:35">1</literal> <operator pos:start="137:35" pos:end="137:35">+</operator> <literal type="number" pos:start="137:37" pos:end="137:37">8</literal><operator pos:start="137:38" pos:end="137:38">*</operator><name pos:start="137:39" pos:end="137:52"><name pos:start="137:39" pos:end="137:41">vst</name><operator pos:start="137:42" pos:end="137:43">-&gt;</operator><name pos:start="137:44" pos:end="137:52">cur_slice</name></name></expr></argument>, <argument pos:start="137:55" pos:end="137:83"><expr pos:start="137:55" pos:end="137:83"><name pos:start="137:55" pos:end="137:63"><name pos:start="137:55" pos:end="137:57">pkt</name><operator pos:start="137:58" pos:end="137:59">-&gt;</operator><name pos:start="137:60" pos:end="137:63">data</name></name> <operator pos:start="137:65" pos:end="137:65">+</operator> <literal type="number" pos:start="137:67" pos:end="137:69">1</literal> <operator pos:start="137:69" pos:end="137:69">+</operator> <literal type="number" pos:start="137:71" pos:end="137:71">8</literal><operator pos:start="137:72" pos:end="137:72">*</operator><name pos:start="137:73" pos:end="137:83"><name pos:start="137:73" pos:end="137:75">vst</name><operator pos:start="137:76" pos:end="137:77">-&gt;</operator><name pos:start="137:78" pos:end="137:83">slices</name></name></expr></argument>,

                <argument pos:start="139:17" pos:end="139:52"><expr pos:start="139:17" pos:end="139:52"><name pos:start="139:17" pos:end="139:32"><name pos:start="139:17" pos:end="139:19">vst</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:32">videobufpos</name></name> <operator pos:start="139:34" pos:end="139:34">-</operator> <literal type="number" pos:start="139:36" pos:end="139:38">1</literal> <operator pos:start="139:38" pos:end="139:38">-</operator> <literal type="number" pos:start="139:40" pos:end="139:40">8</literal><operator pos:start="139:41" pos:end="139:41">*</operator><name pos:start="139:42" pos:end="139:52"><name pos:start="139:42" pos:end="139:44">vst</name><operator pos:start="139:45" pos:end="139:46">-&gt;</operator><name pos:start="139:47" pos:end="139:52">slices</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:54"><expr pos:start="141:9" pos:end="141:53"><name pos:start="141:9" pos:end="141:17"><name pos:start="141:9" pos:end="141:11">pkt</name><operator pos:start="141:12" pos:end="141:13">-&gt;</operator><name pos:start="141:14" pos:end="141:17">size</name></name> <operator pos:start="141:19" pos:end="141:20">+=</operator> <literal type="number" pos:start="141:22" pos:end="141:22">8</literal><operator pos:start="141:23" pos:end="141:23">*</operator><operator pos:start="141:24" pos:end="141:24">(</operator><name pos:start="141:25" pos:end="141:38"><name pos:start="141:25" pos:end="141:27">vst</name><operator pos:start="141:28" pos:end="141:29">-&gt;</operator><name pos:start="141:30" pos:end="141:38">cur_slice</name></name> <operator pos:start="141:40" pos:end="141:40">-</operator> <name pos:start="141:42" pos:end="141:52"><name pos:start="141:42" pos:end="141:44">vst</name><operator pos:start="141:45" pos:end="141:46">-&gt;</operator><name pos:start="141:47" pos:end="141:52">slices</name></name><operator pos:start="141:53" pos:end="141:53">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:34"><expr pos:start="143:9" pos:end="143:33"><name pos:start="143:9" pos:end="143:16"><name pos:start="143:9" pos:end="143:11">pkt</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:16">pts</name></name> <operator pos:start="143:18" pos:end="143:18">=</operator> <name pos:start="143:20" pos:end="143:33">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:31"><expr pos:start="145:9" pos:end="145:30"><name pos:start="145:9" pos:end="145:16"><name pos:start="145:9" pos:end="145:11">pkt</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:16">pos</name></name> <operator pos:start="145:18" pos:end="145:18">=</operator> <name pos:start="145:20" pos:end="145:30"><name pos:start="145:20" pos:end="145:22">vst</name><operator pos:start="145:23" pos:end="145:24">-&gt;</operator><name pos:start="145:25" pos:end="145:30">pktpos</name></name></expr>;</expr_stmt>

        <return pos:start="147:9" pos:end="147:17">return <expr pos:start="147:16" pos:end="147:16"><literal type="number" pos:start="147:16" pos:end="147:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="153:5" pos:end="153:13">return <expr pos:start="153:12" pos:end="153:12"><literal type="number" pos:start="153:12" pos:end="153:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
