<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19235.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">tgv_decode_frame</name><parameter_list pos:start="1:28" pos:end="5:44">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">got_frame</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:43"><decl pos:start="5:29" pos:end="5:43"><type pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:36">AVPacket</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:43">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="167:1">{<block_content pos:start="9:5" pos:end="165:20">

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name>     <init pos:start="9:28" pos:end="9:40">= <expr pos:start="9:30" pos:end="9:40"><name pos:start="9:30" pos:end="9:40"><name pos:start="9:30" pos:end="9:34">avpkt</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:40">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name>           <init pos:start="11:28" pos:end="11:40">= <expr pos:start="11:30" pos:end="11:40"><name pos:start="11:30" pos:end="11:40"><name pos:start="11:30" pos:end="11:34">avpkt</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:40">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:45"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">TgvContext</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:17">s</name>          <init pos:start="13:28" pos:end="13:45">= <expr pos:start="13:30" pos:end="13:45"><name pos:start="13:30" pos:end="13:45"><name pos:start="13:30" pos:end="13:34">avctx</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:43"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:26">buf_end</name> <init pos:start="15:28" pos:end="15:43">= <expr pos:start="15:30" pos:end="15:43"><name pos:start="15:30" pos:end="15:32">buf</name> <operator pos:start="15:34" pos:end="15:34">+</operator> <name pos:start="15:36" pos:end="15:43">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:34"><decl pos:start="17:5" pos:end="17:33"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">AVFrame</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:18">frame</name>         <init pos:start="17:28" pos:end="17:33">= <expr pos:start="17:30" pos:end="17:33"><name pos:start="17:30" pos:end="17:33">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:18">chunk_type</name></decl>, <decl pos:start="19:21" pos:end="19:23"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:21" pos:end="19:23">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:35"><if pos:start="23:5" pos:end="25:35">if <condition pos:start="23:8" pos:end="23:41">(<expr pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:15">buf_end</name> <operator pos:start="23:17" pos:end="23:17">-</operator> <name pos:start="23:19" pos:end="23:21">buf</name> <operator pos:start="23:23" pos:end="23:23">&lt;</operator> <name pos:start="23:25" pos:end="23:40">EA_PREAMBLE_SIZE</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:35"><block_content pos:start="25:9" pos:end="25:35">

        <return pos:start="25:9" pos:end="25:35">return <expr pos:start="25:16" pos:end="25:34"><name pos:start="25:16" pos:end="25:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:34"><expr pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:14">chunk_type</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:33"><name pos:start="29:18" pos:end="29:24">AV_RL32</name><argument_list pos:start="29:25" pos:end="29:33">(<argument pos:start="29:26" pos:end="29:32"><expr pos:start="29:26" pos:end="29:32"><operator pos:start="29:26" pos:end="29:26">&amp;</operator><name pos:start="29:27" pos:end="29:32"><name pos:start="29:27" pos:end="29:29">buf</name><index pos:start="29:30" pos:end="29:32">[<expr pos:start="29:31" pos:end="29:31"><literal type="number" pos:start="29:31" pos:end="29:31">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:7">buf</name>       <operator pos:start="31:15" pos:end="31:16">+=</operator> <name pos:start="31:18" pos:end="31:33">EA_PREAMBLE_SIZE</name></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="79:5"><if pos:start="35:5" pos:end="79:5">if <condition pos:start="35:8" pos:end="35:31">(<expr pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:18">chunk_type</name> <operator pos:start="35:20" pos:end="35:21">==</operator> <name pos:start="35:23" pos:end="35:30">kVGT_TAG</name></expr>)</condition> <block pos:start="35:33" pos:end="79:5">{<block_content pos:start="37:9" pos:end="77:9">

        <decl_stmt pos:start="37:9" pos:end="37:25"><decl pos:start="37:9" pos:end="37:21"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:21">pal_count</name></decl>, <decl pos:start="37:24" pos:end="37:24"><type ref="prev" pos:start="37:9" pos:end="37:11"/><name pos:start="37:24" pos:end="37:24">i</name></decl>;</decl_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if<condition pos:start="39:11" pos:end="39:30">(<expr pos:start="39:12" pos:end="39:29"><name pos:start="39:12" pos:end="39:18">buf_end</name> <operator pos:start="39:20" pos:end="39:20">-</operator> <name pos:start="39:22" pos:end="39:24">buf</name> <operator pos:start="39:26" pos:end="39:26">&lt;</operator> <literal type="number" pos:start="39:28" pos:end="39:29">12</literal></expr>)</condition> <block pos:start="39:32" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:39">

            <expr_stmt pos:start="41:13" pos:end="41:64"><expr pos:start="41:13" pos:end="41:63"><call pos:start="41:13" pos:end="41:63"><name pos:start="41:13" pos:end="41:18">av_log</name><argument_list pos:start="41:19" pos:end="41:63">(<argument pos:start="41:20" pos:end="41:24"><expr pos:start="41:20" pos:end="41:24"><name pos:start="41:20" pos:end="41:24">avctx</name></expr></argument>, <argument pos:start="41:27" pos:end="41:40"><expr pos:start="41:27" pos:end="41:40"><name pos:start="41:27" pos:end="41:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="41:43" pos:end="41:62"><expr pos:start="41:43" pos:end="41:62"><literal type="string" pos:start="41:43" pos:end="41:62">"truncated header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="43:13" pos:end="43:39">return <expr pos:start="43:20" pos:end="43:38"><name pos:start="43:20" pos:end="43:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:37"><expr pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:16">width</name></name>  <operator pos:start="49:19" pos:end="49:19">=</operator> <call pos:start="49:21" pos:end="49:36"><name pos:start="49:21" pos:end="49:27">AV_RL16</name><argument_list pos:start="49:28" pos:end="49:36">(<argument pos:start="49:29" pos:end="49:35"><expr pos:start="49:29" pos:end="49:35"><operator pos:start="49:29" pos:end="49:29">&amp;</operator><name pos:start="49:30" pos:end="49:35"><name pos:start="49:30" pos:end="49:32">buf</name><index pos:start="49:33" pos:end="49:35">[<expr pos:start="49:34" pos:end="49:34"><literal type="number" pos:start="49:34" pos:end="49:34">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:37"><expr pos:start="51:9" pos:end="51:36"><name pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:17">height</name></name> <operator pos:start="51:19" pos:end="51:19">=</operator> <call pos:start="51:21" pos:end="51:36"><name pos:start="51:21" pos:end="51:27">AV_RL16</name><argument_list pos:start="51:28" pos:end="51:36">(<argument pos:start="51:29" pos:end="51:35"><expr pos:start="51:29" pos:end="51:35"><operator pos:start="51:29" pos:end="51:29">&amp;</operator><name pos:start="51:30" pos:end="51:35"><name pos:start="51:30" pos:end="51:32">buf</name><index pos:start="51:33" pos:end="51:35">[<expr pos:start="51:34" pos:end="51:34"><literal type="number" pos:start="51:34" pos:end="51:34">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="63:9"><if pos:start="53:9" pos:end="63:9">if <condition pos:start="53:12" pos:end="53:73">(<expr pos:start="53:13" pos:end="53:72"><name pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:20">avctx</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:27">width</name></name> <operator pos:start="53:29" pos:end="53:30">!=</operator> <name pos:start="53:32" pos:end="53:39"><name pos:start="53:32" pos:end="53:32">s</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:39">width</name></name> <operator pos:start="53:41" pos:end="53:42">||</operator> <name pos:start="53:44" pos:end="53:59"><name pos:start="53:44" pos:end="53:44">s</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:51">avctx</name><operator pos:start="53:52" pos:end="53:53">-&gt;</operator><name pos:start="53:54" pos:end="53:59">height</name></name> <operator pos:start="53:61" pos:end="53:62">!=</operator> <name pos:start="53:64" pos:end="53:72"><name pos:start="53:64" pos:end="53:64">s</name><operator pos:start="53:65" pos:end="53:66">-&gt;</operator><name pos:start="53:67" pos:end="53:72">height</name></name></expr>)</condition> <block pos:start="53:75" pos:end="63:9">{<block_content pos:start="55:13" pos:end="61:27">

            <expr_stmt pos:start="55:13" pos:end="55:39"><expr pos:start="55:13" pos:end="55:38"><call pos:start="55:13" pos:end="55:38"><name pos:start="55:13" pos:end="55:20">av_freep</name><argument_list pos:start="55:21" pos:end="55:38">(<argument pos:start="55:22" pos:end="55:37"><expr pos:start="55:22" pos:end="55:37"><operator pos:start="55:22" pos:end="55:22">&amp;</operator><name pos:start="55:23" pos:end="55:37"><name pos:start="55:23" pos:end="55:23">s</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:37">frame_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:42"><expr pos:start="57:13" pos:end="57:41"><call pos:start="57:13" pos:end="57:41"><name pos:start="57:13" pos:end="57:26">av_frame_unref</name><argument_list pos:start="57:27" pos:end="57:41">(<argument pos:start="57:28" pos:end="57:40"><expr pos:start="57:28" pos:end="57:40"><name pos:start="57:28" pos:end="57:40"><name pos:start="57:28" pos:end="57:28">s</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:40">last_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="59:13" pos:end="61:27"><if pos:start="59:13" pos:end="61:27">if <condition pos:start="59:16" pos:end="59:77">(<expr pos:start="59:17" pos:end="59:76"><operator pos:start="59:17" pos:end="59:17">(</operator><name pos:start="59:18" pos:end="59:20">ret</name> <operator pos:start="59:22" pos:end="59:22">=</operator> <call pos:start="59:24" pos:end="59:71"><name pos:start="59:24" pos:end="59:40">ff_set_dimensions</name><argument_list pos:start="59:41" pos:end="59:71">(<argument pos:start="59:42" pos:end="59:49"><expr pos:start="59:42" pos:end="59:49"><name pos:start="59:42" pos:end="59:49"><name pos:start="59:42" pos:end="59:42">s</name><operator pos:start="59:43" pos:end="59:44">-&gt;</operator><name pos:start="59:45" pos:end="59:49">avctx</name></name></expr></argument>, <argument pos:start="59:52" pos:end="59:59"><expr pos:start="59:52" pos:end="59:59"><name pos:start="59:52" pos:end="59:59"><name pos:start="59:52" pos:end="59:52">s</name><operator pos:start="59:53" pos:end="59:54">-&gt;</operator><name pos:start="59:55" pos:end="59:59">width</name></name></expr></argument>, <argument pos:start="59:62" pos:end="59:70"><expr pos:start="59:62" pos:end="59:70"><name pos:start="59:62" pos:end="59:70"><name pos:start="59:62" pos:end="59:62">s</name><operator pos:start="59:63" pos:end="59:64">-&gt;</operator><name pos:start="59:65" pos:end="59:70">height</name></name></expr></argument>)</argument_list></call><operator pos:start="59:72" pos:end="59:72">)</operator> <operator pos:start="59:74" pos:end="59:74">&lt;</operator> <literal type="number" pos:start="59:76" pos:end="59:76">0</literal></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:27"><block_content pos:start="61:17" pos:end="61:27">

                <return pos:start="61:17" pos:end="61:27">return <expr pos:start="61:24" pos:end="61:26"><name pos:start="61:24" pos:end="61:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:37"><expr pos:start="67:9" pos:end="67:36"><name pos:start="67:9" pos:end="67:17">pal_count</name> <operator pos:start="67:19" pos:end="67:19">=</operator> <call pos:start="67:21" pos:end="67:36"><name pos:start="67:21" pos:end="67:27">AV_RL16</name><argument_list pos:start="67:28" pos:end="67:36">(<argument pos:start="67:29" pos:end="67:35"><expr pos:start="67:29" pos:end="67:35"><operator pos:start="67:29" pos:end="67:29">&amp;</operator><name pos:start="67:30" pos:end="67:35"><name pos:start="67:30" pos:end="67:32">buf</name><index pos:start="67:33" pos:end="67:35">[<expr pos:start="67:34" pos:end="67:34"><literal type="number" pos:start="67:34" pos:end="67:34">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:18"><expr pos:start="69:9" pos:end="69:17"><name pos:start="69:9" pos:end="69:11">buf</name> <operator pos:start="69:13" pos:end="69:14">+=</operator> <literal type="number" pos:start="69:16" pos:end="69:17">12</literal></expr>;</expr_stmt>

        <for pos:start="71:9" pos:end="77:9">for<control pos:start="71:12" pos:end="71:83">(<init pos:start="71:13" pos:end="71:18"><expr pos:start="71:13" pos:end="71:17"><name pos:start="71:13" pos:end="71:13">i</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <literal type="number" pos:start="71:17" pos:end="71:17">0</literal></expr>;</init> <condition pos:start="71:20" pos:end="71:78"><expr pos:start="71:20" pos:end="71:77"><name pos:start="71:20" pos:end="71:20">i</name> <operator pos:start="71:22" pos:end="71:22">&lt;</operator> <name pos:start="71:24" pos:end="71:32">pal_count</name> <operator pos:start="71:34" pos:end="71:35">&amp;&amp;</operator> <name pos:start="71:37" pos:end="71:37">i</name> <operator pos:start="71:39" pos:end="71:39">&lt;</operator> <name pos:start="71:41" pos:end="71:55">AVPALETTE_COUNT</name> <operator pos:start="71:57" pos:end="71:58">&amp;&amp;</operator> <name pos:start="71:60" pos:end="71:66">buf_end</name> <operator pos:start="71:68" pos:end="71:68">-</operator> <name pos:start="71:70" pos:end="71:72">buf</name> <operator pos:start="71:74" pos:end="71:75">&gt;=</operator> <literal type="number" pos:start="71:77" pos:end="71:77">3</literal></expr>;</condition> <incr pos:start="71:80" pos:end="71:82"><expr pos:start="71:80" pos:end="71:82"><name pos:start="71:80" pos:end="71:80">i</name><operator pos:start="71:81" pos:end="71:82">++</operator></expr></incr>)</control> <block pos:start="71:85" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:21">

            <expr_stmt pos:start="73:13" pos:end="73:55"><expr pos:start="73:13" pos:end="73:54"><name pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:22">palette</name><index pos:start="73:23" pos:end="73:25">[<expr pos:start="73:24" pos:end="73:24"><name pos:start="73:24" pos:end="73:24">i</name></expr>]</index></name> <operator pos:start="73:27" pos:end="73:27">=</operator> <literal type="number" pos:start="73:29" pos:end="73:33">0xFFU</literal> <operator pos:start="73:35" pos:end="73:36">&lt;&lt;</operator> <literal type="number" pos:start="73:38" pos:end="73:39">24</literal> <operator pos:start="73:41" pos:end="73:41">|</operator> <call pos:start="73:43" pos:end="73:54"><name pos:start="73:43" pos:end="73:49">AV_RB24</name><argument_list pos:start="73:50" pos:end="73:54">(<argument pos:start="73:51" pos:end="73:53"><expr pos:start="73:51" pos:end="73:53"><name pos:start="73:51" pos:end="73:53">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:21"><expr pos:start="75:13" pos:end="75:20"><name pos:start="75:13" pos:end="75:15">buf</name> <operator pos:start="75:17" pos:end="75:18">+=</operator> <literal type="number" pos:start="75:20" pos:end="75:20">3</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="85:19"><if pos:start="83:5" pos:end="85:19">if <condition pos:start="83:8" pos:end="83:72">(<expr pos:start="83:9" pos:end="83:71"><operator pos:start="83:9" pos:end="83:9">(</operator><name pos:start="83:10" pos:end="83:12">ret</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <call pos:start="83:16" pos:end="83:66"><name pos:start="83:16" pos:end="83:28">ff_get_buffer</name><argument_list pos:start="83:29" pos:end="83:66">(<argument pos:start="83:30" pos:end="83:34"><expr pos:start="83:30" pos:end="83:34"><name pos:start="83:30" pos:end="83:34">avctx</name></expr></argument>, <argument pos:start="83:37" pos:end="83:41"><expr pos:start="83:37" pos:end="83:41"><name pos:start="83:37" pos:end="83:41">frame</name></expr></argument>, <argument pos:start="83:44" pos:end="83:65"><expr pos:start="83:44" pos:end="83:65"><name pos:start="83:44" pos:end="83:65">AV_GET_BUFFER_FLAG_REF</name></expr></argument>)</argument_list></call><operator pos:start="83:67" pos:end="83:67">)</operator> <operator pos:start="83:69" pos:end="83:69">&lt;</operator> <literal type="number" pos:start="83:71" pos:end="83:71">0</literal></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:19"><block_content pos:start="85:9" pos:end="85:19">

        <return pos:start="85:9" pos:end="85:19">return <expr pos:start="85:16" pos:end="85:18"><name pos:start="85:16" pos:end="85:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:55"><expr pos:start="89:5" pos:end="89:54"><call pos:start="89:5" pos:end="89:54"><name pos:start="89:5" pos:end="89:10">memcpy</name><argument_list pos:start="89:11" pos:end="89:54">(<argument pos:start="89:12" pos:end="89:25"><expr pos:start="89:12" pos:end="89:25"><name pos:start="89:12" pos:end="89:25"><name pos:start="89:12" pos:end="89:16">frame</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:22">data</name><index pos:start="89:23" pos:end="89:25">[<expr pos:start="89:24" pos:end="89:24"><literal type="number" pos:start="89:24" pos:end="89:24">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="89:28" pos:end="89:37"><expr pos:start="89:28" pos:end="89:37"><name pos:start="89:28" pos:end="89:37"><name pos:start="89:28" pos:end="89:28">s</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:37">palette</name></name></expr></argument>, <argument pos:start="89:40" pos:end="89:53"><expr pos:start="89:40" pos:end="89:53"><name pos:start="89:40" pos:end="89:53">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="93:5" pos:end="149:5"><if pos:start="93:5" pos:end="127:5">if <condition pos:start="93:8" pos:end="93:31">(<expr pos:start="93:9" pos:end="93:30"><name pos:start="93:9" pos:end="93:18">chunk_type</name> <operator pos:start="93:20" pos:end="93:21">==</operator> <name pos:start="93:23" pos:end="93:30">kVGT_TAG</name></expr>)</condition> <block pos:start="93:33" pos:end="127:5">{<block_content pos:start="95:9" pos:end="125:29">

        <decl_stmt pos:start="95:9" pos:end="95:14"><decl pos:start="95:9" pos:end="95:13"><type pos:start="95:9" pos:end="95:11"><name pos:start="95:9" pos:end="95:11">int</name></type> <name pos:start="95:13" pos:end="95:13">y</name></decl>;</decl_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:29"><expr pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:13">frame</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:24">key_frame</name></name> <operator pos:start="97:26" pos:end="97:26">=</operator> <literal type="number" pos:start="97:28" pos:end="97:28">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:45"><expr pos:start="99:9" pos:end="99:44"><name pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:13">frame</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:24">pict_type</name></name> <operator pos:start="99:26" pos:end="99:26">=</operator> <name pos:start="99:28" pos:end="99:44">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>



        <if_stmt pos:start="103:9" pos:end="107:35"><if pos:start="103:9" pos:end="107:35">if <condition pos:start="103:12" pos:end="105:65">(<expr pos:start="103:13" pos:end="105:64"><operator pos:start="103:13" pos:end="103:13">!</operator><name pos:start="103:14" pos:end="103:28"><name pos:start="103:14" pos:end="103:14">s</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:28">frame_buffer</name></name> <operator pos:start="103:30" pos:end="103:31">&amp;&amp;</operator>

            <operator pos:start="105:13" pos:end="105:13">!</operator><operator pos:start="105:14" pos:end="105:14">(</operator><name pos:start="105:15" pos:end="105:29"><name pos:start="105:15" pos:end="105:15">s</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:29">frame_buffer</name></name> <operator pos:start="105:31" pos:end="105:31">=</operator> <call pos:start="105:33" pos:end="105:63"><name pos:start="105:33" pos:end="105:41">av_malloc</name><argument_list pos:start="105:42" pos:end="105:63">(<argument pos:start="105:43" pos:end="105:62"><expr pos:start="105:43" pos:end="105:62"><name pos:start="105:43" pos:end="105:50"><name pos:start="105:43" pos:end="105:43">s</name><operator pos:start="105:44" pos:end="105:45">-&gt;</operator><name pos:start="105:46" pos:end="105:50">width</name></name> <operator pos:start="105:52" pos:end="105:52">*</operator> <name pos:start="105:54" pos:end="105:62"><name pos:start="105:54" pos:end="105:54">s</name><operator pos:start="105:55" pos:end="105:56">-&gt;</operator><name pos:start="105:57" pos:end="105:62">height</name></name></expr></argument>)</argument_list></call><operator pos:start="105:64" pos:end="105:64">)</operator></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:35"><block_content pos:start="107:13" pos:end="107:35">

            <return pos:start="107:13" pos:end="107:35">return <expr pos:start="107:20" pos:end="107:34"><call pos:start="107:20" pos:end="107:34"><name pos:start="107:20" pos:end="107:26">AVERROR</name><argument_list pos:start="107:27" pos:end="107:34">(<argument pos:start="107:28" pos:end="107:33"><expr pos:start="107:28" pos:end="107:33"><name pos:start="107:28" pos:end="107:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="111:9" pos:end="117:9"><if pos:start="111:9" pos:end="117:9">if <condition pos:start="111:12" pos:end="111:89">(<expr pos:start="111:13" pos:end="111:88"><call pos:start="111:13" pos:end="111:84"><name pos:start="111:13" pos:end="111:18">unpack</name><argument_list pos:start="111:19" pos:end="111:84">(<argument pos:start="111:20" pos:end="111:22"><expr pos:start="111:20" pos:end="111:22"><name pos:start="111:20" pos:end="111:22">buf</name></expr></argument>, <argument pos:start="111:25" pos:end="111:31"><expr pos:start="111:25" pos:end="111:31"><name pos:start="111:25" pos:end="111:31">buf_end</name></expr></argument>, <argument pos:start="111:34" pos:end="111:48"><expr pos:start="111:34" pos:end="111:48"><name pos:start="111:34" pos:end="111:48"><name pos:start="111:34" pos:end="111:34">s</name><operator pos:start="111:35" pos:end="111:36">-&gt;</operator><name pos:start="111:37" pos:end="111:48">frame_buffer</name></name></expr></argument>, <argument pos:start="111:51" pos:end="111:65"><expr pos:start="111:51" pos:end="111:65"><name pos:start="111:51" pos:end="111:65"><name pos:start="111:51" pos:end="111:51">s</name><operator pos:start="111:52" pos:end="111:53">-&gt;</operator><name pos:start="111:54" pos:end="111:58">avctx</name><operator pos:start="111:59" pos:end="111:60">-&gt;</operator><name pos:start="111:61" pos:end="111:65">width</name></name></expr></argument>, <argument pos:start="111:68" pos:end="111:83"><expr pos:start="111:68" pos:end="111:83"><name pos:start="111:68" pos:end="111:83"><name pos:start="111:68" pos:end="111:68">s</name><operator pos:start="111:69" pos:end="111:70">-&gt;</operator><name pos:start="111:71" pos:end="111:75">avctx</name><operator pos:start="111:76" pos:end="111:77">-&gt;</operator><name pos:start="111:78" pos:end="111:83">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="111:86" pos:end="111:86">&lt;</operator> <literal type="number" pos:start="111:88" pos:end="111:88">0</literal></expr>)</condition> <block pos:start="111:91" pos:end="117:9">{<block_content pos:start="113:13" pos:end="115:39">

            <expr_stmt pos:start="113:13" pos:end="113:69"><expr pos:start="113:13" pos:end="113:68"><call pos:start="113:13" pos:end="113:68"><name pos:start="113:13" pos:end="113:18">av_log</name><argument_list pos:start="113:19" pos:end="113:68">(<argument pos:start="113:20" pos:end="113:24"><expr pos:start="113:20" pos:end="113:24"><name pos:start="113:20" pos:end="113:24">avctx</name></expr></argument>, <argument pos:start="113:27" pos:end="113:40"><expr pos:start="113:27" pos:end="113:40"><name pos:start="113:27" pos:end="113:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="113:43" pos:end="113:67"><expr pos:start="113:43" pos:end="113:67"><literal type="string" pos:start="113:43" pos:end="113:67">"truncated intra frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="115:13" pos:end="115:39">return <expr pos:start="115:20" pos:end="115:38"><name pos:start="115:20" pos:end="115:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <for pos:start="119:9" pos:end="125:29">for <control pos:start="119:13" pos:end="119:39">(<init pos:start="119:14" pos:end="119:19"><expr pos:start="119:14" pos:end="119:18"><name pos:start="119:14" pos:end="119:14">y</name> <operator pos:start="119:16" pos:end="119:16">=</operator> <literal type="number" pos:start="119:18" pos:end="119:18">0</literal></expr>;</init> <condition pos:start="119:21" pos:end="119:34"><expr pos:start="119:21" pos:end="119:33"><name pos:start="119:21" pos:end="119:21">y</name> <operator pos:start="119:23" pos:end="119:23">&lt;</operator> <name pos:start="119:25" pos:end="119:33"><name pos:start="119:25" pos:end="119:25">s</name><operator pos:start="119:26" pos:end="119:27">-&gt;</operator><name pos:start="119:28" pos:end="119:33">height</name></name></expr>;</condition> <incr pos:start="119:36" pos:end="119:38"><expr pos:start="119:36" pos:end="119:38"><name pos:start="119:36" pos:end="119:36">y</name><operator pos:start="119:37" pos:end="119:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="121:13" pos:end="125:29"><block_content pos:start="121:13" pos:end="125:29">

            <expr_stmt pos:start="121:13" pos:end="125:29"><expr pos:start="121:13" pos:end="125:28"><call pos:start="121:13" pos:end="125:28"><name pos:start="121:13" pos:end="121:18">memcpy</name><argument_list pos:start="121:19" pos:end="125:28">(<argument pos:start="121:20" pos:end="121:59"><expr pos:start="121:20" pos:end="121:59"><name pos:start="121:20" pos:end="121:33"><name pos:start="121:20" pos:end="121:24">frame</name><operator pos:start="121:25" pos:end="121:26">-&gt;</operator><name pos:start="121:27" pos:end="121:30">data</name><index pos:start="121:31" pos:end="121:33">[<expr pos:start="121:32" pos:end="121:32"><literal type="number" pos:start="121:32" pos:end="121:32">0</literal></expr>]</index></name>  <operator pos:start="121:36" pos:end="121:36">+</operator> <name pos:start="121:38" pos:end="121:38">y</name> <operator pos:start="121:40" pos:end="121:40">*</operator> <name pos:start="121:42" pos:end="121:59"><name pos:start="121:42" pos:end="121:46">frame</name><operator pos:start="121:47" pos:end="121:48">-&gt;</operator><name pos:start="121:49" pos:end="121:56">linesize</name><index pos:start="121:57" pos:end="121:59">[<expr pos:start="121:58" pos:end="121:58"><literal type="number" pos:start="121:58" pos:end="121:58">0</literal></expr>]</index></name></expr></argument>,

                   <argument pos:start="123:20" pos:end="123:49"><expr pos:start="123:20" pos:end="123:49"><name pos:start="123:20" pos:end="123:34"><name pos:start="123:20" pos:end="123:20">s</name><operator pos:start="123:21" pos:end="123:22">-&gt;</operator><name pos:start="123:23" pos:end="123:34">frame_buffer</name></name> <operator pos:start="123:36" pos:end="123:36">+</operator> <name pos:start="123:38" pos:end="123:38">y</name> <operator pos:start="123:40" pos:end="123:40">*</operator> <name pos:start="123:42" pos:end="123:49"><name pos:start="123:42" pos:end="123:42">s</name><operator pos:start="123:43" pos:end="123:44">-&gt;</operator><name pos:start="123:45" pos:end="123:49">width</name></name></expr></argument>,

                   <argument pos:start="125:20" pos:end="125:27"><expr pos:start="125:20" pos:end="125:27"><name pos:start="125:20" pos:end="125:27"><name pos:start="125:20" pos:end="125:20">s</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:27">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if> <else pos:start="127:7" pos:end="149:5">else <block pos:start="127:12" pos:end="149:5">{<block_content pos:start="129:9" pos:end="147:9">

        <if_stmt pos:start="129:9" pos:end="135:9"><if pos:start="129:9" pos:end="135:9">if <condition pos:start="129:12" pos:end="129:36">(<expr pos:start="129:13" pos:end="129:35"><operator pos:start="129:13" pos:end="129:13">!</operator><name pos:start="129:14" pos:end="129:35"><name pos:start="129:14" pos:end="129:14">s</name><operator pos:start="129:15" pos:end="129:16">-&gt;</operator><name pos:start="129:17" pos:end="129:26">last_frame</name><operator pos:start="129:27" pos:end="129:28">-&gt;</operator><name pos:start="129:29" pos:end="129:32">data</name><index pos:start="129:33" pos:end="129:35">[<expr pos:start="129:34" pos:end="129:34"><literal type="number" pos:start="129:34" pos:end="129:34">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="129:38" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:28">

            <expr_stmt pos:start="131:13" pos:end="131:93"><expr pos:start="131:13" pos:end="131:92"><call pos:start="131:13" pos:end="131:92"><name pos:start="131:13" pos:end="131:18">av_log</name><argument_list pos:start="131:19" pos:end="131:92">(<argument pos:start="131:20" pos:end="131:24"><expr pos:start="131:20" pos:end="131:24"><name pos:start="131:20" pos:end="131:24">avctx</name></expr></argument>, <argument pos:start="131:27" pos:end="131:40"><expr pos:start="131:27" pos:end="131:40"><name pos:start="131:27" pos:end="131:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="131:43" pos:end="131:91"><expr pos:start="131:43" pos:end="131:91"><literal type="string" pos:start="131:43" pos:end="131:91">"inter frame without corresponding intra frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="133:13" pos:end="133:28">return <expr pos:start="133:20" pos:end="133:27"><name pos:start="133:20" pos:end="133:27">buf_size</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:29"><expr pos:start="137:9" pos:end="137:28"><name pos:start="137:9" pos:end="137:24"><name pos:start="137:9" pos:end="137:13">frame</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:24">key_frame</name></name> <operator pos:start="137:26" pos:end="137:26">=</operator> <literal type="number" pos:start="137:28" pos:end="137:28">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:45"><expr pos:start="139:9" pos:end="139:44"><name pos:start="139:9" pos:end="139:24"><name pos:start="139:9" pos:end="139:13">frame</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:24">pict_type</name></name> <operator pos:start="139:26" pos:end="139:26">=</operator> <name pos:start="139:28" pos:end="139:44">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>

        <if_stmt pos:start="141:9" pos:end="147:9"><if pos:start="141:9" pos:end="147:9">if <condition pos:start="141:12" pos:end="141:57">(<expr pos:start="141:13" pos:end="141:56"><call pos:start="141:13" pos:end="141:52"><name pos:start="141:13" pos:end="141:28">tgv_decode_inter</name><argument_list pos:start="141:29" pos:end="141:52">(<argument pos:start="141:30" pos:end="141:30"><expr pos:start="141:30" pos:end="141:30"><name pos:start="141:30" pos:end="141:30">s</name></expr></argument>, <argument pos:start="141:33" pos:end="141:37"><expr pos:start="141:33" pos:end="141:37"><name pos:start="141:33" pos:end="141:37">frame</name></expr></argument>, <argument pos:start="141:40" pos:end="141:42"><expr pos:start="141:40" pos:end="141:42"><name pos:start="141:40" pos:end="141:42">buf</name></expr></argument>, <argument pos:start="141:45" pos:end="141:51"><expr pos:start="141:45" pos:end="141:51"><name pos:start="141:45" pos:end="141:51">buf_end</name></expr></argument>)</argument_list></call> <operator pos:start="141:54" pos:end="141:54">&lt;</operator> <literal type="number" pos:start="141:56" pos:end="141:56">0</literal></expr>)</condition> <block pos:start="141:59" pos:end="147:9">{<block_content pos:start="143:13" pos:end="145:39">

            <expr_stmt pos:start="143:13" pos:end="143:69"><expr pos:start="143:13" pos:end="143:68"><call pos:start="143:13" pos:end="143:68"><name pos:start="143:13" pos:end="143:18">av_log</name><argument_list pos:start="143:19" pos:end="143:68">(<argument pos:start="143:20" pos:end="143:24"><expr pos:start="143:20" pos:end="143:24"><name pos:start="143:20" pos:end="143:24">avctx</name></expr></argument>, <argument pos:start="143:27" pos:end="143:40"><expr pos:start="143:27" pos:end="143:40"><name pos:start="143:27" pos:end="143:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="143:43" pos:end="143:67"><expr pos:start="143:43" pos:end="143:67"><literal type="string" pos:start="143:43" pos:end="143:67">"truncated inter frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="145:13" pos:end="145:39">return <expr pos:start="145:20" pos:end="145:38"><name pos:start="145:20" pos:end="145:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="153:5" pos:end="153:34"><expr pos:start="153:5" pos:end="153:33"><call pos:start="153:5" pos:end="153:33"><name pos:start="153:5" pos:end="153:18">av_frame_unref</name><argument_list pos:start="153:19" pos:end="153:33">(<argument pos:start="153:20" pos:end="153:32"><expr pos:start="153:20" pos:end="153:32"><name pos:start="153:20" pos:end="153:32"><name pos:start="153:20" pos:end="153:20">s</name><operator pos:start="153:21" pos:end="153:22">-&gt;</operator><name pos:start="153:23" pos:end="153:32">last_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="155:5" pos:end="157:19"><if pos:start="155:5" pos:end="157:19">if <condition pos:start="155:8" pos:end="155:55">(<expr pos:start="155:9" pos:end="155:54"><operator pos:start="155:9" pos:end="155:9">(</operator><name pos:start="155:10" pos:end="155:12">ret</name> <operator pos:start="155:14" pos:end="155:14">=</operator> <call pos:start="155:16" pos:end="155:49"><name pos:start="155:16" pos:end="155:27">av_frame_ref</name><argument_list pos:start="155:28" pos:end="155:49">(<argument pos:start="155:29" pos:end="155:41"><expr pos:start="155:29" pos:end="155:41"><name pos:start="155:29" pos:end="155:41"><name pos:start="155:29" pos:end="155:29">s</name><operator pos:start="155:30" pos:end="155:31">-&gt;</operator><name pos:start="155:32" pos:end="155:41">last_frame</name></name></expr></argument>, <argument pos:start="155:44" pos:end="155:48"><expr pos:start="155:44" pos:end="155:48"><name pos:start="155:44" pos:end="155:48">frame</name></expr></argument>)</argument_list></call><operator pos:start="155:50" pos:end="155:50">)</operator> <operator pos:start="155:52" pos:end="155:52">&lt;</operator> <literal type="number" pos:start="155:54" pos:end="155:54">0</literal></expr>)</condition><block type="pseudo" pos:start="157:9" pos:end="157:19"><block_content pos:start="157:9" pos:end="157:19">

        <return pos:start="157:9" pos:end="157:19">return <expr pos:start="157:16" pos:end="157:18"><name pos:start="157:16" pos:end="157:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:19"><expr pos:start="161:5" pos:end="161:18"><operator pos:start="161:5" pos:end="161:5">*</operator><name pos:start="161:6" pos:end="161:14">got_frame</name> <operator pos:start="161:16" pos:end="161:16">=</operator> <literal type="number" pos:start="161:18" pos:end="161:18">1</literal></expr>;</expr_stmt>



    <return pos:start="165:5" pos:end="165:20">return <expr pos:start="165:12" pos:end="165:19"><name pos:start="165:12" pos:end="165:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
