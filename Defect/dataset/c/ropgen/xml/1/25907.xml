<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25907.c" pos:tabs="8"><function pos:start="1:1" pos:end="237:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">rv10_decode_packet</name><parameter_list pos:start="1:30" pos:end="3:77">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:47"><decl pos:start="3:30" pos:end="3:47"><type pos:start="3:30" pos:end="3:47"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">uint8_t</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:47">buf</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:61"><decl pos:start="3:50" pos:end="3:61"><type pos:start="3:50" pos:end="3:61"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:61">buf_size</name></decl></parameter>, <parameter pos:start="3:64" pos:end="3:76"><decl pos:start="3:64" pos:end="3:76"><type pos:start="3:64" pos:end="3:76"><name pos:start="3:64" pos:end="3:66">int</name></type> <name pos:start="3:68" pos:end="3:76">buf_size2</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="237:1">{<block_content pos:start="7:5" pos:end="235:30">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:40">= <expr pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:29">avctx</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">mb_count</name></decl>, <decl pos:start="9:19" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:24">mb_pos</name></decl>, <decl pos:start="9:27" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:30">left</name></decl>, <decl pos:start="9:33" pos:end="9:42"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:33" pos:end="9:42">start_mb_x</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:43"><expr pos:start="13:5" pos:end="13:42"><call pos:start="13:5" pos:end="13:42"><name pos:start="13:5" pos:end="13:17">init_get_bits</name><argument_list pos:start="13:18" pos:end="13:42">(<argument pos:start="13:19" pos:end="13:24"><expr pos:start="13:19" pos:end="13:24"><operator pos:start="13:19" pos:end="13:19">&amp;</operator><name pos:start="13:20" pos:end="13:24"><name pos:start="13:20" pos:end="13:20">s</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:24">gb</name></name></expr></argument>, <argument pos:start="13:27" pos:end="13:29"><expr pos:start="13:27" pos:end="13:29"><name pos:start="13:27" pos:end="13:29">buf</name></expr></argument>, <argument pos:start="13:32" pos:end="13:41"><expr pos:start="13:32" pos:end="13:41"><name pos:start="13:32" pos:end="13:39">buf_size</name><operator pos:start="13:40" pos:end="13:40">*</operator><literal type="number" pos:start="13:41" pos:end="13:41">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:49"><if pos:start="15:5" pos:end="17:49">if<condition pos:start="15:7" pos:end="15:35">(<expr pos:start="15:8" pos:end="15:34"><name pos:start="15:8" pos:end="15:18"><name pos:start="15:8" pos:end="15:8">s</name><operator pos:start="15:9" pos:end="15:10">-&gt;</operator><name pos:start="15:11" pos:end="15:18">codec_id</name></name> <operator pos:start="15:20" pos:end="15:21">==</operator><name pos:start="15:22" pos:end="15:34">CODEC_ID_RV10</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:49"><block_content pos:start="17:9" pos:end="17:49">

        <expr_stmt pos:start="17:9" pos:end="17:49"><expr pos:start="17:9" pos:end="17:48"><name pos:start="17:9" pos:end="17:16">mb_count</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <call pos:start="17:20" pos:end="17:48"><name pos:start="17:20" pos:end="17:45">rv10_decode_picture_header</name><argument_list pos:start="17:46" pos:end="17:48">(<argument pos:start="17:47" pos:end="17:47"><expr pos:start="17:47" pos:end="17:47"><name pos:start="17:47" pos:end="17:47">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="19:5" pos:end="21:49">else<block type="pseudo" pos:start="21:9" pos:end="21:49"><block_content pos:start="21:9" pos:end="21:49">

        <expr_stmt pos:start="21:9" pos:end="21:49"><expr pos:start="21:9" pos:end="21:48"><name pos:start="21:9" pos:end="21:16">mb_count</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:48"><name pos:start="21:20" pos:end="21:45">rv20_decode_picture_header</name><argument_list pos:start="21:46" pos:end="21:48">(<argument pos:start="21:47" pos:end="21:47"><expr pos:start="21:47" pos:end="21:47"><name pos:start="21:47" pos:end="21:47">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:16">mb_count</name> <operator pos:start="23:18" pos:end="23:18">&lt;</operator> <literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr>)</condition> <block pos:start="23:23" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:18">

        <expr_stmt pos:start="25:9" pos:end="25:57"><expr pos:start="25:9" pos:end="25:56"><call pos:start="25:9" pos:end="25:56"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:56">(<argument pos:start="25:16" pos:end="25:23"><expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:23">avctx</name></name></expr></argument>, <argument pos:start="25:26" pos:end="25:37"><expr pos:start="25:26" pos:end="25:37"><name pos:start="25:26" pos:end="25:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:40" pos:end="25:55"><expr pos:start="25:40" pos:end="25:55"><literal type="string" pos:start="25:40" pos:end="25:55">"HEADER ERROR\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="35:32">(<expr pos:start="33:9" pos:end="35:31"><name pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:15">mb_x</name></name> <operator pos:start="33:17" pos:end="33:18">&gt;=</operator> <name pos:start="33:20" pos:end="33:30"><name pos:start="33:20" pos:end="33:20">s</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:30">mb_width</name></name> <operator pos:start="33:32" pos:end="33:33">||</operator>

        <name pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:15">mb_y</name></name> <operator pos:start="35:17" pos:end="35:18">&gt;=</operator> <name pos:start="35:20" pos:end="35:31"><name pos:start="35:20" pos:end="35:20">s</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:31">mb_height</name></name></expr>)</condition> <block pos:start="35:34" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:18">

        <expr_stmt pos:start="37:9" pos:end="37:78"><expr pos:start="37:9" pos:end="37:77"><call pos:start="37:9" pos:end="37:77"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:77">(<argument pos:start="37:16" pos:end="37:23"><expr pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:23">avctx</name></name></expr></argument>, <argument pos:start="37:26" pos:end="37:37"><expr pos:start="37:26" pos:end="37:37"><name pos:start="37:26" pos:end="37:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:40" pos:end="37:58"><expr pos:start="37:40" pos:end="37:58"><literal type="string" pos:start="37:40" pos:end="37:58">"POS ERROR %d %d\n"</literal></expr></argument>, <argument pos:start="37:61" pos:end="37:67"><expr pos:start="37:61" pos:end="37:67"><name pos:start="37:61" pos:end="37:67"><name pos:start="37:61" pos:end="37:61">s</name><operator pos:start="37:62" pos:end="37:63">-&gt;</operator><name pos:start="37:64" pos:end="37:67">mb_x</name></name></expr></argument>, <argument pos:start="37:70" pos:end="37:76"><expr pos:start="37:70" pos:end="37:76"><name pos:start="37:70" pos:end="37:76"><name pos:start="37:70" pos:end="37:70">s</name><operator pos:start="37:71" pos:end="37:72">-&gt;</operator><name pos:start="37:73" pos:end="37:76">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:45"><expr pos:start="43:5" pos:end="43:44"><name pos:start="43:5" pos:end="43:10">mb_pos</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <name pos:start="43:14" pos:end="43:20"><name pos:start="43:14" pos:end="43:14">s</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:20">mb_y</name></name> <operator pos:start="43:22" pos:end="43:22">*</operator> <name pos:start="43:24" pos:end="43:34"><name pos:start="43:24" pos:end="43:24">s</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:34">mb_width</name></name> <operator pos:start="43:36" pos:end="43:36">+</operator> <name pos:start="43:38" pos:end="43:44"><name pos:start="43:38" pos:end="43:38">s</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:44">mb_x</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:47"><expr pos:start="45:5" pos:end="45:46"><name pos:start="45:5" pos:end="45:8">left</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <name pos:start="45:12" pos:end="45:22"><name pos:start="45:12" pos:end="45:12">s</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:22">mb_width</name></name> <operator pos:start="45:24" pos:end="45:24">*</operator> <name pos:start="45:26" pos:end="45:37"><name pos:start="45:26" pos:end="45:26">s</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:37">mb_height</name></name> <operator pos:start="45:39" pos:end="45:39">-</operator> <name pos:start="45:41" pos:end="45:46">mb_pos</name></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:24">(<expr pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:16">mb_count</name> <operator pos:start="47:18" pos:end="47:18">&gt;</operator> <name pos:start="47:20" pos:end="47:23">left</name></expr>)</condition> <block pos:start="47:26" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:18">

        <expr_stmt pos:start="49:9" pos:end="49:56"><expr pos:start="49:9" pos:end="49:55"><call pos:start="49:9" pos:end="49:55"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:55">(<argument pos:start="49:16" pos:end="49:23"><expr pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:16">s</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:23">avctx</name></name></expr></argument>, <argument pos:start="49:26" pos:end="49:37"><expr pos:start="49:26" pos:end="49:37"><name pos:start="49:26" pos:end="49:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:40" pos:end="49:54"><expr pos:start="49:40" pos:end="49:54"><literal type="string" pos:start="49:40" pos:end="49:54">"COUNT ERROR\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="85:5"><if pos:start="57:5" pos:end="75:5">if <condition pos:start="57:8" pos:end="57:71">(<expr pos:start="57:9" pos:end="57:70"><operator pos:start="57:9" pos:end="57:9">(</operator><name pos:start="57:10" pos:end="57:16"><name pos:start="57:10" pos:end="57:10">s</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:16">mb_x</name></name> <operator pos:start="57:18" pos:end="57:19">==</operator> <literal type="number" pos:start="57:21" pos:end="57:21">0</literal> <operator pos:start="57:23" pos:end="57:24">&amp;&amp;</operator> <name pos:start="57:26" pos:end="57:32"><name pos:start="57:26" pos:end="57:26">s</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:32">mb_y</name></name> <operator pos:start="57:34" pos:end="57:35">==</operator> <literal type="number" pos:start="57:37" pos:end="57:37">0</literal><operator pos:start="57:38" pos:end="57:38">)</operator> <operator pos:start="57:40" pos:end="57:41">||</operator> <name pos:start="57:43" pos:end="57:64"><name pos:start="57:43" pos:end="57:43">s</name><operator pos:start="57:44" pos:end="57:45">-&gt;</operator><name pos:start="57:46" pos:end="57:64">current_picture_ptr</name></name><operator pos:start="57:65" pos:end="57:66">==</operator><name pos:start="57:67" pos:end="57:70">NULL</name></expr>)</condition> <block pos:start="57:73" pos:end="75:5">{<block_content pos:start="59:9" pos:end="73:29">

        <if_stmt pos:start="59:9" pos:end="67:9"><if pos:start="59:9" pos:end="67:9">if<condition pos:start="59:11" pos:end="59:34">(<expr pos:start="59:12" pos:end="59:33"><name pos:start="59:12" pos:end="59:33"><name pos:start="59:12" pos:end="59:12">s</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:33">current_picture_ptr</name></name></expr>)</condition><block pos:start="59:35" pos:end="67:9">{<block_content pos:start="61:13" pos:end="65:66"> <comment type="line" pos:start="59:37" pos:end="59:91">//FIXME write parser so we always have complete frames?</comment>

            <expr_stmt pos:start="61:13" pos:end="61:31"><expr pos:start="61:13" pos:end="61:30"><call pos:start="61:13" pos:end="61:30"><name pos:start="61:13" pos:end="61:27">ff_er_frame_end</name><argument_list pos:start="61:28" pos:end="61:30">(<argument pos:start="61:29" pos:end="61:29"><expr pos:start="61:29" pos:end="61:29"><name pos:start="61:29" pos:end="61:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:32"><expr pos:start="63:13" pos:end="63:31"><call pos:start="63:13" pos:end="63:31"><name pos:start="63:13" pos:end="63:28">ff_MPV_frame_end</name><argument_list pos:start="63:29" pos:end="63:31">(<argument pos:start="63:30" pos:end="63:30"><expr pos:start="63:30" pos:end="63:30"><name pos:start="63:30" pos:end="63:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:66"><expr pos:start="65:13" pos:end="65:65"><name pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:19">mb_x</name></name><operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:28"><name pos:start="65:22" pos:end="65:22">s</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:28">mb_y</name></name> <operator pos:start="65:30" pos:end="65:30">=</operator> <name pos:start="65:32" pos:end="65:45"><name pos:start="65:32" pos:end="65:32">s</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:45">resync_mb_x</name></name> <operator pos:start="65:47" pos:end="65:47">=</operator> <name pos:start="65:49" pos:end="65:62"><name pos:start="65:49" pos:end="65:49">s</name><operator pos:start="65:50" pos:end="65:51">-&gt;</operator><name pos:start="65:52" pos:end="65:62">resync_mb_y</name></name><operator pos:start="65:63" pos:end="65:63">=</operator> <literal type="number" pos:start="65:65" pos:end="65:65">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="69:9" pos:end="71:22"><if pos:start="69:9" pos:end="71:22">if<condition pos:start="69:11" pos:end="69:44">(<expr pos:start="69:12" pos:end="69:43"><call pos:start="69:12" pos:end="69:39"><name pos:start="69:12" pos:end="69:29">ff_MPV_frame_start</name><argument_list pos:start="69:30" pos:end="69:39">(<argument pos:start="69:31" pos:end="69:31"><expr pos:start="69:31" pos:end="69:31"><name pos:start="69:31" pos:end="69:31">s</name></expr></argument>, <argument pos:start="69:34" pos:end="69:38"><expr pos:start="69:34" pos:end="69:38"><name pos:start="69:34" pos:end="69:38">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="69:41" pos:end="69:41">&lt;</operator> <literal type="number" pos:start="69:43" pos:end="69:43">0</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:22"><block_content pos:start="71:13" pos:end="71:22">

            <return pos:start="71:13" pos:end="71:22">return <expr pos:start="71:20" pos:end="71:21"><operator pos:start="71:20" pos:end="71:20">-</operator><literal type="number" pos:start="71:21" pos:end="71:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:29"><expr pos:start="73:9" pos:end="73:28"><call pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:25">ff_er_frame_start</name><argument_list pos:start="73:26" pos:end="73:28">(<argument pos:start="73:27" pos:end="73:27"><expr pos:start="73:27" pos:end="73:27"><name pos:start="73:27" pos:end="73:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="75:7" pos:end="85:5">else <block pos:start="75:12" pos:end="85:5">{<block_content pos:start="77:9" pos:end="83:9">

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:64">(<expr pos:start="77:13" pos:end="77:63"><name pos:start="77:13" pos:end="77:47"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:34">current_picture_ptr</name><operator pos:start="77:35" pos:end="77:36">-&gt;</operator><name pos:start="77:37" pos:end="77:37">f</name><operator pos:start="77:38" pos:end="77:38">.</operator><name pos:start="77:39" pos:end="77:47">pict_type</name></name> <operator pos:start="77:49" pos:end="77:50">!=</operator> <name pos:start="77:52" pos:end="77:63"><name pos:start="77:52" pos:end="77:52">s</name><operator pos:start="77:53" pos:end="77:54">-&gt;</operator><name pos:start="77:55" pos:end="77:63">pict_type</name></name></expr>)</condition> <block pos:start="77:66" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:22">

            <expr_stmt pos:start="79:13" pos:end="79:68"><expr pos:start="79:13" pos:end="79:67"><call pos:start="79:13" pos:end="79:67"><name pos:start="79:13" pos:end="79:18">av_log</name><argument_list pos:start="79:19" pos:end="79:67">(<argument pos:start="79:20" pos:end="79:27"><expr pos:start="79:20" pos:end="79:27"><name pos:start="79:20" pos:end="79:27"><name pos:start="79:20" pos:end="79:20">s</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:27">avctx</name></name></expr></argument>, <argument pos:start="79:30" pos:end="79:41"><expr pos:start="79:30" pos:end="79:41"><name pos:start="79:30" pos:end="79:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="79:44" pos:end="79:66"><expr pos:start="79:44" pos:end="79:66"><literal type="string" pos:start="79:44" pos:end="79:66">"Slice type mismatch\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="81:13" pos:end="81:22">return <expr pos:start="81:20" pos:end="81:21"><operator pos:start="81:20" pos:end="81:20">-</operator><literal type="number" pos:start="81:21" pos:end="81:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:45"><expr pos:start="89:5" pos:end="89:44"><call pos:start="89:5" pos:end="89:44"><name pos:start="89:5" pos:end="89:11">av_dlog</name><argument_list pos:start="89:12" pos:end="89:44">(<argument pos:start="89:13" pos:end="89:17"><expr pos:start="89:13" pos:end="89:17"><name pos:start="89:13" pos:end="89:17">avctx</name></expr></argument>, <argument pos:start="89:20" pos:end="89:32"><expr pos:start="89:20" pos:end="89:32"><literal type="string" pos:start="89:20" pos:end="89:32">"qscale=%d\n"</literal></expr></argument>, <argument pos:start="89:35" pos:end="89:43"><expr pos:start="89:35" pos:end="89:43"><name pos:start="89:35" pos:end="89:43"><name pos:start="89:35" pos:end="89:35">s</name><operator pos:start="89:36" pos:end="89:37">-&gt;</operator><name pos:start="89:38" pos:end="89:43">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:37">/* default quantization values */</comment>

    <if_stmt pos:start="95:5" pos:end="105:5"><if pos:start="95:5" pos:end="99:5">if<condition pos:start="95:7" pos:end="95:35">(<expr pos:start="95:8" pos:end="95:34"><name pos:start="95:8" pos:end="95:18"><name pos:start="95:8" pos:end="95:8">s</name><operator pos:start="95:9" pos:end="95:10">-&gt;</operator><name pos:start="95:11" pos:end="95:18">codec_id</name></name><operator pos:start="95:19" pos:end="95:20">==</operator> <name pos:start="95:22" pos:end="95:34">CODEC_ID_RV10</name></expr>)</condition><block pos:start="95:36" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:45">

        <if_stmt pos:start="97:9" pos:end="97:45"><if pos:start="97:9" pos:end="97:45">if<condition pos:start="97:11" pos:end="97:22">(<expr pos:start="97:12" pos:end="97:21"><name pos:start="97:12" pos:end="97:18"><name pos:start="97:12" pos:end="97:12">s</name><operator pos:start="97:13" pos:end="97:14">-&gt;</operator><name pos:start="97:15" pos:end="97:18">mb_y</name></name><operator pos:start="97:19" pos:end="97:20">==</operator><literal type="number" pos:start="97:21" pos:end="97:21">0</literal></expr>)</condition><block type="pseudo" pos:start="97:24" pos:end="97:45"><block_content pos:start="97:24" pos:end="97:45"> <expr_stmt pos:start="97:24" pos:end="97:45"><expr pos:start="97:24" pos:end="97:44"><name pos:start="97:24" pos:end="97:42"><name pos:start="97:24" pos:end="97:24">s</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:42">first_slice_line</name></name><operator pos:start="97:43" pos:end="97:43">=</operator><literal type="number" pos:start="97:44" pos:end="97:44">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if><else pos:start="99:6" pos:end="105:5">else<block pos:start="99:10" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:32">

        <expr_stmt pos:start="101:9" pos:end="101:30"><expr pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:27"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:27">first_slice_line</name></name><operator pos:start="101:28" pos:end="101:28">=</operator><literal type="number" pos:start="101:29" pos:end="101:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:32"><expr pos:start="103:9" pos:end="103:31"><name pos:start="103:9" pos:end="103:22"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:22">resync_mb_x</name></name><operator pos:start="103:23" pos:end="103:23">=</operator> <name pos:start="103:25" pos:end="103:31"><name pos:start="103:25" pos:end="103:25">s</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:31">mb_x</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:24"><expr pos:start="107:5" pos:end="107:23"><name pos:start="107:5" pos:end="107:14">start_mb_x</name><operator pos:start="107:15" pos:end="107:15">=</operator> <name pos:start="107:17" pos:end="107:23"><name pos:start="107:17" pos:end="107:17">s</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:23">mb_x</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:28"><expr pos:start="109:5" pos:end="109:27"><name pos:start="109:5" pos:end="109:18"><name pos:start="109:5" pos:end="109:5">s</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:18">resync_mb_y</name></name><operator pos:start="109:19" pos:end="109:19">=</operator> <name pos:start="109:21" pos:end="109:27"><name pos:start="109:21" pos:end="109:21">s</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:27">mb_y</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="123:5"><if pos:start="111:5" pos:end="117:5">if<condition pos:start="111:7" pos:end="111:19">(<expr pos:start="111:8" pos:end="111:18"><name pos:start="111:8" pos:end="111:18"><name pos:start="111:8" pos:end="111:8">s</name><operator pos:start="111:9" pos:end="111:10">-&gt;</operator><name pos:start="111:11" pos:end="111:18">h263_aic</name></name></expr>)</condition><block pos:start="111:20" pos:end="117:5">{<block_content pos:start="113:9" pos:end="115:51">

        <expr_stmt pos:start="113:9" pos:end="115:51"><expr pos:start="113:9" pos:end="115:50"><name pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:27">y_dc_scale_table</name></name><operator pos:start="113:28" pos:end="113:28">=</operator>

        <name pos:start="115:9" pos:end="115:27"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:27">c_dc_scale_table</name></name><operator pos:start="115:28" pos:end="115:28">=</operator> <name pos:start="115:30" pos:end="115:50">ff_aic_dc_scale_table</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="117:6" pos:end="123:5">else<block pos:start="117:10" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:53">

        <expr_stmt pos:start="119:9" pos:end="121:53"><expr pos:start="119:9" pos:end="121:52"><name pos:start="119:9" pos:end="119:27"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:27">y_dc_scale_table</name></name><operator pos:start="119:28" pos:end="119:28">=</operator>

        <name pos:start="121:9" pos:end="121:27"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:27">c_dc_scale_table</name></name><operator pos:start="121:28" pos:end="121:28">=</operator> <name pos:start="121:30" pos:end="121:52">ff_mpeg1_dc_scale_table</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="127:5" pos:end="129:60"><if pos:start="127:5" pos:end="129:60">if<condition pos:start="127:7" pos:end="127:25">(<expr pos:start="127:8" pos:end="127:24"><name pos:start="127:8" pos:end="127:24"><name pos:start="127:8" pos:end="127:8">s</name><operator pos:start="127:9" pos:end="127:10">-&gt;</operator><name pos:start="127:11" pos:end="127:24">modified_quant</name></name></expr>)</condition><block type="pseudo" pos:start="129:9" pos:end="129:60"><block_content pos:start="129:9" pos:end="129:60">

        <expr_stmt pos:start="129:9" pos:end="129:60"><expr pos:start="129:9" pos:end="129:59"><name pos:start="129:9" pos:end="129:30"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:30">chroma_qscale_table</name></name><operator pos:start="129:31" pos:end="129:31">=</operator> <name pos:start="129:33" pos:end="129:59">ff_h263_chroma_qscale_table</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:32"><expr pos:start="133:5" pos:end="133:31"><call pos:start="133:5" pos:end="133:31"><name pos:start="133:5" pos:end="133:17">ff_set_qscale</name><argument_list pos:start="133:18" pos:end="133:31">(<argument pos:start="133:19" pos:end="133:19"><expr pos:start="133:19" pos:end="133:19"><name pos:start="133:19" pos:end="133:19">s</name></expr></argument>, <argument pos:start="133:22" pos:end="133:30"><expr pos:start="133:22" pos:end="133:30"><name pos:start="133:22" pos:end="133:30"><name pos:start="133:22" pos:end="133:22">s</name><operator pos:start="133:23" pos:end="133:24">-&gt;</operator><name pos:start="133:25" pos:end="133:30">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:34"><expr pos:start="137:5" pos:end="137:33"><name pos:start="137:5" pos:end="137:29"><name pos:start="137:5" pos:end="137:5">s</name><operator pos:start="137:6" pos:end="137:7">-&gt;</operator><name pos:start="137:8" pos:end="137:26">rv10_first_dc_coded</name><index pos:start="137:27" pos:end="137:29">[<expr pos:start="137:28" pos:end="137:28"><literal type="number" pos:start="137:28" pos:end="137:28">0</literal></expr>]</index></name> <operator pos:start="137:31" pos:end="137:31">=</operator> <literal type="number" pos:start="137:33" pos:end="137:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:34"><expr pos:start="139:5" pos:end="139:33"><name pos:start="139:5" pos:end="139:29"><name pos:start="139:5" pos:end="139:5">s</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:26">rv10_first_dc_coded</name><index pos:start="139:27" pos:end="139:29">[<expr pos:start="139:28" pos:end="139:28"><literal type="number" pos:start="139:28" pos:end="139:28">1</literal></expr>]</index></name> <operator pos:start="139:31" pos:end="139:31">=</operator> <literal type="number" pos:start="139:33" pos:end="139:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:34"><expr pos:start="141:5" pos:end="141:33"><name pos:start="141:5" pos:end="141:29"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:26">rv10_first_dc_coded</name><index pos:start="141:27" pos:end="141:29">[<expr pos:start="141:28" pos:end="141:28"><literal type="number" pos:start="141:28" pos:end="141:28">2</literal></expr>]</index></name> <operator pos:start="141:31" pos:end="141:31">=</operator> <literal type="number" pos:start="141:33" pos:end="141:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="149:35"><expr pos:start="143:5" pos:end="149:34"><name pos:start="143:5" pos:end="143:20"><name pos:start="143:5" pos:end="143:5">s</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:17">block_wrap</name><index pos:start="143:18" pos:end="143:20">[<expr pos:start="143:19" pos:end="143:19"><literal type="number" pos:start="143:19" pos:end="143:19">0</literal></expr>]</index></name><operator pos:start="143:21" pos:end="143:21">=</operator>

    <name pos:start="145:5" pos:end="145:20"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:17">block_wrap</name><index pos:start="145:18" pos:end="145:20">[<expr pos:start="145:19" pos:end="145:19"><literal type="number" pos:start="145:19" pos:end="145:19">1</literal></expr>]</index></name><operator pos:start="145:21" pos:end="145:21">=</operator>

    <name pos:start="147:5" pos:end="147:20"><name pos:start="147:5" pos:end="147:5">s</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:17">block_wrap</name><index pos:start="147:18" pos:end="147:20">[<expr pos:start="147:19" pos:end="147:19"><literal type="number" pos:start="147:19" pos:end="147:19">2</literal></expr>]</index></name><operator pos:start="147:21" pos:end="147:21">=</operator>

    <name pos:start="149:5" pos:end="149:20"><name pos:start="149:5" pos:end="149:5">s</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:17">block_wrap</name><index pos:start="149:18" pos:end="149:20">[<expr pos:start="149:19" pos:end="149:19"><literal type="number" pos:start="149:19" pos:end="149:19">3</literal></expr>]</index></name><operator pos:start="149:21" pos:end="149:21">=</operator> <name pos:start="149:23" pos:end="149:34"><name pos:start="149:23" pos:end="149:23">s</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:34">b8_stride</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="153:35"><expr pos:start="151:5" pos:end="153:34"><name pos:start="151:5" pos:end="151:20"><name pos:start="151:5" pos:end="151:5">s</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:17">block_wrap</name><index pos:start="151:18" pos:end="151:20">[<expr pos:start="151:19" pos:end="151:19"><literal type="number" pos:start="151:19" pos:end="151:19">4</literal></expr>]</index></name><operator pos:start="151:21" pos:end="151:21">=</operator>

    <name pos:start="153:5" pos:end="153:20"><name pos:start="153:5" pos:end="153:5">s</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:17">block_wrap</name><index pos:start="153:18" pos:end="153:20">[<expr pos:start="153:19" pos:end="153:19"><literal type="number" pos:start="153:19" pos:end="153:19">5</literal></expr>]</index></name><operator pos:start="153:21" pos:end="153:21">=</operator> <name pos:start="153:23" pos:end="153:34"><name pos:start="153:23" pos:end="153:23">s</name><operator pos:start="153:24" pos:end="153:25">-&gt;</operator><name pos:start="153:26" pos:end="153:34">mb_stride</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:27"><expr pos:start="155:5" pos:end="155:26"><call pos:start="155:5" pos:end="155:26"><name pos:start="155:5" pos:end="155:23">ff_init_block_index</name><argument_list pos:start="155:24" pos:end="155:26">(<argument pos:start="155:25" pos:end="155:25"><expr pos:start="155:25" pos:end="155:25"><name pos:start="155:25" pos:end="155:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="157:5" pos:end="157:32">/* decode each macroblock */</comment>



    <for pos:start="161:5" pos:end="227:5">for<control pos:start="161:8" pos:end="161:69">(<init pos:start="161:9" pos:end="161:33"><expr pos:start="161:9" pos:end="161:32"><name pos:start="161:9" pos:end="161:22"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:22">mb_num_left</name></name><operator pos:start="161:23" pos:end="161:23">=</operator> <name pos:start="161:25" pos:end="161:32">mb_count</name></expr>;</init> <condition pos:start="161:35" pos:end="161:51"><expr pos:start="161:35" pos:end="161:50"><name pos:start="161:35" pos:end="161:48"><name pos:start="161:35" pos:end="161:35">s</name><operator pos:start="161:36" pos:end="161:37">-&gt;</operator><name pos:start="161:38" pos:end="161:48">mb_num_left</name></name><operator pos:start="161:49" pos:end="161:49">&gt;</operator><literal type="number" pos:start="161:50" pos:end="161:50">0</literal></expr>;</condition> <incr pos:start="161:53" pos:end="161:68"><expr pos:start="161:53" pos:end="161:68"><name pos:start="161:53" pos:end="161:66"><name pos:start="161:53" pos:end="161:53">s</name><operator pos:start="161:54" pos:end="161:55">-&gt;</operator><name pos:start="161:56" pos:end="161:66">mb_num_left</name></name><operator pos:start="161:67" pos:end="161:68">--</operator></expr></incr>)</control> <block pos:start="161:71" pos:end="227:5">{<block_content pos:start="163:9" pos:end="225:35">

        <decl_stmt pos:start="163:9" pos:end="163:16"><decl pos:start="163:9" pos:end="163:15"><type pos:start="163:9" pos:end="163:11"><name pos:start="163:9" pos:end="163:11">int</name></type> <name pos:start="163:13" pos:end="163:15">ret</name></decl>;</decl_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:33"><expr pos:start="165:9" pos:end="165:32"><call pos:start="165:9" pos:end="165:32"><name pos:start="165:9" pos:end="165:29">ff_update_block_index</name><argument_list pos:start="165:30" pos:end="165:32">(<argument pos:start="165:31" pos:end="165:31"><expr pos:start="165:31" pos:end="165:31"><name pos:start="165:31" pos:end="165:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:61"><expr pos:start="167:9" pos:end="167:60"><call pos:start="167:9" pos:end="167:60"><name pos:start="167:9" pos:end="167:15">av_dlog</name><argument_list pos:start="167:16" pos:end="167:60">(<argument pos:start="167:17" pos:end="167:21"><expr pos:start="167:17" pos:end="167:21"><name pos:start="167:17" pos:end="167:21">avctx</name></expr></argument>, <argument pos:start="167:24" pos:end="167:41"><expr pos:start="167:24" pos:end="167:41"><literal type="string" pos:start="167:24" pos:end="167:41">"**mb x=%d y=%d\n"</literal></expr></argument>, <argument pos:start="167:44" pos:end="167:50"><expr pos:start="167:44" pos:end="167:50"><name pos:start="167:44" pos:end="167:50"><name pos:start="167:44" pos:end="167:44">s</name><operator pos:start="167:45" pos:end="167:46">-&gt;</operator><name pos:start="167:47" pos:end="167:50">mb_x</name></name></expr></argument>, <argument pos:start="167:53" pos:end="167:59"><expr pos:start="167:53" pos:end="167:59"><name pos:start="167:53" pos:end="167:59"><name pos:start="167:53" pos:end="167:53">s</name><operator pos:start="167:54" pos:end="167:55">-&gt;</operator><name pos:start="167:56" pos:end="167:59">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="171:9" pos:end="171:35"><expr pos:start="171:9" pos:end="171:34"><name pos:start="171:9" pos:end="171:17"><name pos:start="171:9" pos:end="171:9">s</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:17">mv_dir</name></name> <operator pos:start="171:19" pos:end="171:19">=</operator> <name pos:start="171:21" pos:end="171:34">MV_DIR_FORWARD</name></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:35"><expr pos:start="173:9" pos:end="173:34"><name pos:start="173:9" pos:end="173:18"><name pos:start="173:9" pos:end="173:9">s</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:18">mv_type</name></name> <operator pos:start="173:20" pos:end="173:20">=</operator> <name pos:start="173:22" pos:end="173:34">MV_TYPE_16X16</name></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:43"><expr pos:start="175:9" pos:end="175:42"><name pos:start="175:9" pos:end="175:11">ret</name><operator pos:start="175:12" pos:end="175:12">=</operator><call pos:start="175:13" pos:end="175:42"><name pos:start="175:13" pos:end="175:29">ff_h263_decode_mb</name><argument_list pos:start="175:30" pos:end="175:42">(<argument pos:start="175:31" pos:end="175:31"><expr pos:start="175:31" pos:end="175:31"><name pos:start="175:31" pos:end="175:31">s</name></expr></argument>, <argument pos:start="175:34" pos:end="175:41"><expr pos:start="175:34" pos:end="175:41"><name pos:start="175:34" pos:end="175:41"><name pos:start="175:34" pos:end="175:34">s</name><operator pos:start="175:35" pos:end="175:36">-&gt;</operator><name pos:start="175:37" pos:end="175:41">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="179:9" pos:end="187:9"><if pos:start="179:9" pos:end="187:9">if <condition pos:start="179:12" pos:end="179:119">(<expr pos:start="179:13" pos:end="179:118"><name pos:start="179:13" pos:end="179:15">ret</name> <operator pos:start="179:17" pos:end="179:18">!=</operator> <name pos:start="179:20" pos:end="179:30">SLICE_ERROR</name> <operator pos:start="179:32" pos:end="179:33">&amp;&amp;</operator> <name pos:start="179:35" pos:end="179:52"><name pos:start="179:35" pos:end="179:35">s</name><operator pos:start="179:36" pos:end="179:37">-&gt;</operator><name pos:start="179:38" pos:end="179:39">gb</name><operator pos:start="179:40" pos:end="179:40">.</operator><name pos:start="179:41" pos:end="179:52">size_in_bits</name></name> <operator pos:start="179:54" pos:end="179:54">&lt;</operator> <call pos:start="179:56" pos:end="179:77"><name pos:start="179:56" pos:end="179:69">get_bits_count</name><argument_list pos:start="179:70" pos:end="179:77">(<argument pos:start="179:71" pos:end="179:76"><expr pos:start="179:71" pos:end="179:76"><operator pos:start="179:71" pos:end="179:71">&amp;</operator><name pos:start="179:72" pos:end="179:76"><name pos:start="179:72" pos:end="179:72">s</name><operator pos:start="179:73" pos:end="179:74">-&gt;</operator><name pos:start="179:75" pos:end="179:76">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="179:79" pos:end="179:80">&amp;&amp;</operator> <literal type="number" pos:start="179:82" pos:end="179:82">8</literal><operator pos:start="179:83" pos:end="179:83">*</operator><name pos:start="179:84" pos:end="179:92">buf_size2</name> <operator pos:start="179:94" pos:end="179:95">&gt;=</operator> <call pos:start="179:97" pos:end="179:118"><name pos:start="179:97" pos:end="179:110">get_bits_count</name><argument_list pos:start="179:111" pos:end="179:118">(<argument pos:start="179:112" pos:end="179:117"><expr pos:start="179:112" pos:end="179:117"><operator pos:start="179:112" pos:end="179:112">&amp;</operator><name pos:start="179:113" pos:end="179:117"><name pos:start="179:113" pos:end="179:113">s</name><operator pos:start="179:114" pos:end="179:115">-&gt;</operator><name pos:start="179:116" pos:end="179:117">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="179:120" pos:end="187:9">{<block_content pos:start="181:13" pos:end="185:26">

            <expr_stmt pos:start="181:13" pos:end="181:104"><expr pos:start="181:13" pos:end="181:103"><call pos:start="181:13" pos:end="181:103"><name pos:start="181:13" pos:end="181:18">av_log</name><argument_list pos:start="181:19" pos:end="181:103">(<argument pos:start="181:20" pos:end="181:24"><expr pos:start="181:20" pos:end="181:24"><name pos:start="181:20" pos:end="181:24">avctx</name></expr></argument>, <argument pos:start="181:27" pos:end="181:38"><expr pos:start="181:27" pos:end="181:38"><name pos:start="181:27" pos:end="181:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="181:41" pos:end="181:69"><expr pos:start="181:41" pos:end="181:69"><literal type="string" pos:start="181:41" pos:end="181:69">"update size from %d to %d\n"</literal></expr></argument>, <argument pos:start="181:72" pos:end="181:89"><expr pos:start="181:72" pos:end="181:89"><name pos:start="181:72" pos:end="181:89"><name pos:start="181:72" pos:end="181:72">s</name><operator pos:start="181:73" pos:end="181:74">-&gt;</operator><name pos:start="181:75" pos:end="181:76">gb</name><operator pos:start="181:77" pos:end="181:77">.</operator><name pos:start="181:78" pos:end="181:89">size_in_bits</name></name></expr></argument>, <argument pos:start="181:92" pos:end="181:102"><expr pos:start="181:92" pos:end="181:102"><literal type="number" pos:start="181:92" pos:end="181:92">8</literal><operator pos:start="181:93" pos:end="181:93">*</operator><name pos:start="181:94" pos:end="181:102">buf_size2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:44"><expr pos:start="183:13" pos:end="183:43"><name pos:start="183:13" pos:end="183:30"><name pos:start="183:13" pos:end="183:13">s</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:17">gb</name><operator pos:start="183:18" pos:end="183:18">.</operator><name pos:start="183:19" pos:end="183:30">size_in_bits</name></name><operator pos:start="183:31" pos:end="183:31">=</operator> <literal type="number" pos:start="183:33" pos:end="183:33">8</literal><operator pos:start="183:34" pos:end="183:34">*</operator><name pos:start="183:35" pos:end="183:43">buf_size2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:26"><expr pos:start="185:13" pos:end="185:25"><name pos:start="185:13" pos:end="185:15">ret</name><operator pos:start="185:16" pos:end="185:16">=</operator> <name pos:start="185:18" pos:end="185:25">SLICE_OK</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="191:9" pos:end="197:9"><if pos:start="191:9" pos:end="197:9">if <condition pos:start="191:12" pos:end="191:78">(<expr pos:start="191:13" pos:end="191:77"><name pos:start="191:13" pos:end="191:15">ret</name> <operator pos:start="191:17" pos:end="191:18">==</operator> <name pos:start="191:20" pos:end="191:30">SLICE_ERROR</name> <operator pos:start="191:32" pos:end="191:33">||</operator> <name pos:start="191:35" pos:end="191:52"><name pos:start="191:35" pos:end="191:35">s</name><operator pos:start="191:36" pos:end="191:37">-&gt;</operator><name pos:start="191:38" pos:end="191:39">gb</name><operator pos:start="191:40" pos:end="191:40">.</operator><name pos:start="191:41" pos:end="191:52">size_in_bits</name></name> <operator pos:start="191:54" pos:end="191:54">&lt;</operator> <call pos:start="191:56" pos:end="191:77"><name pos:start="191:56" pos:end="191:69">get_bits_count</name><argument_list pos:start="191:70" pos:end="191:77">(<argument pos:start="191:71" pos:end="191:76"><expr pos:start="191:71" pos:end="191:76"><operator pos:start="191:71" pos:end="191:71">&amp;</operator><name pos:start="191:72" pos:end="191:76"><name pos:start="191:72" pos:end="191:72">s</name><operator pos:start="191:73" pos:end="191:74">-&gt;</operator><name pos:start="191:75" pos:end="191:76">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="191:80" pos:end="197:9">{<block_content pos:start="193:13" pos:end="195:22">

            <expr_stmt pos:start="193:13" pos:end="193:84"><expr pos:start="193:13" pos:end="193:83"><call pos:start="193:13" pos:end="193:83"><name pos:start="193:13" pos:end="193:18">av_log</name><argument_list pos:start="193:19" pos:end="193:83">(<argument pos:start="193:20" pos:end="193:27"><expr pos:start="193:20" pos:end="193:27"><name pos:start="193:20" pos:end="193:27"><name pos:start="193:20" pos:end="193:20">s</name><operator pos:start="193:21" pos:end="193:22">-&gt;</operator><name pos:start="193:23" pos:end="193:27">avctx</name></name></expr></argument>, <argument pos:start="193:30" pos:end="193:41"><expr pos:start="193:30" pos:end="193:41"><name pos:start="193:30" pos:end="193:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="193:44" pos:end="193:64"><expr pos:start="193:44" pos:end="193:64"><literal type="string" pos:start="193:44" pos:end="193:64">"ERROR at MB %d %d\n"</literal></expr></argument>, <argument pos:start="193:67" pos:end="193:73"><expr pos:start="193:67" pos:end="193:73"><name pos:start="193:67" pos:end="193:73"><name pos:start="193:67" pos:end="193:67">s</name><operator pos:start="193:68" pos:end="193:69">-&gt;</operator><name pos:start="193:70" pos:end="193:73">mb_x</name></name></expr></argument>, <argument pos:start="193:76" pos:end="193:82"><expr pos:start="193:76" pos:end="193:82"><name pos:start="193:76" pos:end="193:82"><name pos:start="193:76" pos:end="193:76">s</name><operator pos:start="193:77" pos:end="193:78">-&gt;</operator><name pos:start="193:79" pos:end="193:82">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="195:13" pos:end="195:22">return <expr pos:start="195:20" pos:end="195:21"><operator pos:start="195:20" pos:end="195:20">-</operator><literal type="number" pos:start="195:21" pos:end="195:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="199:9" pos:end="201:41"><if pos:start="199:9" pos:end="201:41">if<condition pos:start="199:11" pos:end="199:45">(<expr pos:start="199:12" pos:end="199:44"><name pos:start="199:12" pos:end="199:23"><name pos:start="199:12" pos:end="199:12">s</name><operator pos:start="199:13" pos:end="199:14">-&gt;</operator><name pos:start="199:15" pos:end="199:23">pict_type</name></name> <operator pos:start="199:25" pos:end="199:26">!=</operator> <name pos:start="199:28" pos:end="199:44">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="201:13" pos:end="201:41"><block_content pos:start="201:13" pos:end="201:41">

            <expr_stmt pos:start="201:13" pos:end="201:41"><expr pos:start="201:13" pos:end="201:40"><call pos:start="201:13" pos:end="201:40"><name pos:start="201:13" pos:end="201:37">ff_h263_update_motion_val</name><argument_list pos:start="201:38" pos:end="201:40">(<argument pos:start="201:39" pos:end="201:39"><expr pos:start="201:39" pos:end="201:39"><name pos:start="201:39" pos:end="201:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:38"><expr pos:start="203:9" pos:end="203:37"><call pos:start="203:9" pos:end="203:37"><name pos:start="203:9" pos:end="203:24">ff_MPV_decode_mb</name><argument_list pos:start="203:25" pos:end="203:37">(<argument pos:start="203:26" pos:end="203:26"><expr pos:start="203:26" pos:end="203:26"><name pos:start="203:26" pos:end="203:26">s</name></expr></argument>, <argument pos:start="203:29" pos:end="203:36"><expr pos:start="203:29" pos:end="203:36"><name pos:start="203:29" pos:end="203:36"><name pos:start="203:29" pos:end="203:29">s</name><operator pos:start="203:30" pos:end="203:31">-&gt;</operator><name pos:start="203:32" pos:end="203:36">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="205:9" pos:end="207:35"><if pos:start="205:9" pos:end="207:35">if<condition pos:start="205:11" pos:end="205:26">(<expr pos:start="205:12" pos:end="205:25"><name pos:start="205:12" pos:end="205:25"><name pos:start="205:12" pos:end="205:12">s</name><operator pos:start="205:13" pos:end="205:14">-&gt;</operator><name pos:start="205:15" pos:end="205:25">loop_filter</name></name></expr>)</condition><block type="pseudo" pos:start="207:13" pos:end="207:35"><block_content pos:start="207:13" pos:end="207:35">

            <expr_stmt pos:start="207:13" pos:end="207:35"><expr pos:start="207:13" pos:end="207:34"><call pos:start="207:13" pos:end="207:34"><name pos:start="207:13" pos:end="207:31">ff_h263_loop_filter</name><argument_list pos:start="207:32" pos:end="207:34">(<argument pos:start="207:33" pos:end="207:33"><expr pos:start="207:33" pos:end="207:33"><name pos:start="207:33" pos:end="207:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="211:9" pos:end="219:9"><if pos:start="211:9" pos:end="219:9">if <condition pos:start="211:12" pos:end="211:37">(<expr pos:start="211:13" pos:end="211:36"><operator pos:start="211:13" pos:end="211:14">++</operator><name pos:start="211:15" pos:end="211:21"><name pos:start="211:15" pos:end="211:15">s</name><operator pos:start="211:16" pos:end="211:17">-&gt;</operator><name pos:start="211:18" pos:end="211:21">mb_x</name></name> <operator pos:start="211:23" pos:end="211:24">==</operator> <name pos:start="211:26" pos:end="211:36"><name pos:start="211:26" pos:end="211:26">s</name><operator pos:start="211:27" pos:end="211:28">-&gt;</operator><name pos:start="211:29" pos:end="211:36">mb_width</name></name></expr>)</condition> <block pos:start="211:39" pos:end="219:9">{<block_content pos:start="213:13" pos:end="217:35">

            <expr_stmt pos:start="213:13" pos:end="213:24"><expr pos:start="213:13" pos:end="213:23"><name pos:start="213:13" pos:end="213:19"><name pos:start="213:13" pos:end="213:13">s</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:19">mb_x</name></name> <operator pos:start="213:21" pos:end="213:21">=</operator> <literal type="number" pos:start="213:23" pos:end="213:23">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:22"><expr pos:start="215:13" pos:end="215:21"><name pos:start="215:13" pos:end="215:19"><name pos:start="215:13" pos:end="215:13">s</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:19">mb_y</name></name><operator pos:start="215:20" pos:end="215:21">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:35"><expr pos:start="217:13" pos:end="217:34"><call pos:start="217:13" pos:end="217:34"><name pos:start="217:13" pos:end="217:31">ff_init_block_index</name><argument_list pos:start="217:32" pos:end="217:34">(<argument pos:start="217:33" pos:end="217:33"><expr pos:start="217:33" pos:end="217:33"><name pos:start="217:33" pos:end="217:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="221:9" pos:end="223:34"><if pos:start="221:9" pos:end="223:34">if<condition pos:start="221:11" pos:end="221:37">(<expr pos:start="221:12" pos:end="221:36"><name pos:start="221:12" pos:end="221:18"><name pos:start="221:12" pos:end="221:12">s</name><operator pos:start="221:13" pos:end="221:14">-&gt;</operator><name pos:start="221:15" pos:end="221:18">mb_x</name></name> <operator pos:start="221:20" pos:end="221:21">==</operator> <name pos:start="221:23" pos:end="221:36"><name pos:start="221:23" pos:end="221:23">s</name><operator pos:start="221:24" pos:end="221:25">-&gt;</operator><name pos:start="221:26" pos:end="221:36">resync_mb_x</name></name></expr>)</condition><block type="pseudo" pos:start="223:13" pos:end="223:34"><block_content pos:start="223:13" pos:end="223:34">

            <expr_stmt pos:start="223:13" pos:end="223:34"><expr pos:start="223:13" pos:end="223:33"><name pos:start="223:13" pos:end="223:31"><name pos:start="223:13" pos:end="223:13">s</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:31">first_slice_line</name></name><operator pos:start="223:32" pos:end="223:32">=</operator><literal type="number" pos:start="223:33" pos:end="223:33">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="225:9" pos:end="225:35"><if pos:start="225:9" pos:end="225:35">if<condition pos:start="225:11" pos:end="225:28">(<expr pos:start="225:12" pos:end="225:27"><name pos:start="225:12" pos:end="225:14">ret</name> <operator pos:start="225:16" pos:end="225:17">==</operator> <name pos:start="225:19" pos:end="225:27">SLICE_END</name></expr>)</condition><block type="pseudo" pos:start="225:30" pos:end="225:35"><block_content pos:start="225:30" pos:end="225:35"> <break pos:start="225:30" pos:end="225:35">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="231:5" pos:end="231:82"><expr pos:start="231:5" pos:end="231:81"><call pos:start="231:5" pos:end="231:81"><name pos:start="231:5" pos:end="231:19">ff_er_add_slice</name><argument_list pos:start="231:20" pos:end="231:81">(<argument pos:start="231:21" pos:end="231:21"><expr pos:start="231:21" pos:end="231:21"><name pos:start="231:21" pos:end="231:21">s</name></expr></argument>, <argument pos:start="231:24" pos:end="231:33"><expr pos:start="231:24" pos:end="231:33"><name pos:start="231:24" pos:end="231:33">start_mb_x</name></expr></argument>, <argument pos:start="231:36" pos:end="231:49"><expr pos:start="231:36" pos:end="231:49"><name pos:start="231:36" pos:end="231:49"><name pos:start="231:36" pos:end="231:36">s</name><operator pos:start="231:37" pos:end="231:38">-&gt;</operator><name pos:start="231:39" pos:end="231:49">resync_mb_y</name></name></expr></argument>, <argument pos:start="231:52" pos:end="231:60"><expr pos:start="231:52" pos:end="231:60"><name pos:start="231:52" pos:end="231:58"><name pos:start="231:52" pos:end="231:52">s</name><operator pos:start="231:53" pos:end="231:54">-&gt;</operator><name pos:start="231:55" pos:end="231:58">mb_x</name></name><operator pos:start="231:59" pos:end="231:59">-</operator><literal type="number" pos:start="231:60" pos:end="231:60">1</literal></expr></argument>, <argument pos:start="231:63" pos:end="231:69"><expr pos:start="231:63" pos:end="231:69"><name pos:start="231:63" pos:end="231:69"><name pos:start="231:63" pos:end="231:63">s</name><operator pos:start="231:64" pos:end="231:65">-&gt;</operator><name pos:start="231:66" pos:end="231:69">mb_y</name></name></expr></argument>, <argument pos:start="231:72" pos:end="231:80"><expr pos:start="231:72" pos:end="231:80"><name pos:start="231:72" pos:end="231:80">ER_MB_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="235:5" pos:end="235:30">return <expr pos:start="235:12" pos:end="235:29"><name pos:start="235:12" pos:end="235:29"><name pos:start="235:12" pos:end="235:12">s</name><operator pos:start="235:13" pos:end="235:14">-&gt;</operator><name pos:start="235:15" pos:end="235:16">gb</name><operator pos:start="235:17" pos:end="235:17">.</operator><name pos:start="235:18" pos:end="235:29">size_in_bits</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
