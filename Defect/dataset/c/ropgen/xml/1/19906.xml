<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19906.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:38">xcbgrab_read_header</name><parameter_list pos:start="1:39" pos:end="1:58">(<parameter pos:start="1:40" pos:end="1:57"><decl pos:start="1:40" pos:end="1:57"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:54">AVFormatContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:5" pos:end="127:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">XCBGrabContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">c</name> <init pos:start="5:23" pos:end="5:36">= <expr pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:25">s</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">screen_num</name></decl>, <decl pos:start="7:21" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:23">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:23"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:21">xcb_setup_t</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:28">setup</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:60"><decl pos:start="11:5" pos:end="11:59"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:14">host</name>        <init pos:start="11:23" pos:end="11:59">= <expr pos:start="11:25" pos:end="11:59"><ternary pos:start="11:25" pos:end="11:59"><condition pos:start="11:25" pos:end="11:40"><expr pos:start="11:25" pos:end="11:38"><name pos:start="11:25" pos:end="11:38"><name pos:start="11:25" pos:end="11:25">s</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:35">filename</name><index pos:start="11:36" pos:end="11:38">[<expr pos:start="11:37" pos:end="11:37"><literal type="number" pos:start="11:37" pos:end="11:37">0</literal></expr>]</index></name></expr> ?</condition><then pos:start="11:42" pos:end="11:52"> <expr pos:start="11:42" pos:end="11:52"><name pos:start="11:42" pos:end="11:52"><name pos:start="11:42" pos:end="11:42">s</name><operator pos:start="11:43" pos:end="11:44">-&gt;</operator><name pos:start="11:45" pos:end="11:52">filename</name></name></expr> </then><else pos:start="11:54" pos:end="11:59">: <expr pos:start="11:56" pos:end="11:59"><name pos:start="11:56" pos:end="11:59">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:49"><decl pos:start="13:5" pos:end="13:48"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:20">opts</name>  <init pos:start="13:23" pos:end="13:48">= <expr pos:start="13:25" pos:end="13:48"><call pos:start="13:25" pos:end="13:48"><name pos:start="13:25" pos:end="13:30">strchr</name><argument_list pos:start="13:31" pos:end="13:48">(<argument pos:start="13:32" pos:end="13:42"><expr pos:start="13:32" pos:end="13:42"><name pos:start="13:32" pos:end="13:42"><name pos:start="13:32" pos:end="13:32">s</name><operator pos:start="13:33" pos:end="13:34">-&gt;</operator><name pos:start="13:35" pos:end="13:42">filename</name></name></expr></argument>, <argument pos:start="13:45" pos:end="13:47"><expr pos:start="13:45" pos:end="13:47"><literal type="char" pos:start="13:45" pos:end="13:47">'+'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:13">(<expr pos:start="17:9" pos:end="17:12"><name pos:start="17:9" pos:end="17:12">opts</name></expr>)</condition> <block pos:start="17:15" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:40">

        <expr_stmt pos:start="19:9" pos:end="19:44"><expr pos:start="19:9" pos:end="19:43"><call pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:14">sscanf</name><argument_list pos:start="19:15" pos:end="19:43">(<argument pos:start="19:16" pos:end="19:19"><expr pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:19">opts</name></expr></argument>, <argument pos:start="19:22" pos:end="19:28"><expr pos:start="19:22" pos:end="19:28"><literal type="string" pos:start="19:22" pos:end="19:28">"%d,%d"</literal></expr></argument>, <argument pos:start="19:31" pos:end="19:35"><expr pos:start="19:31" pos:end="19:35"><operator pos:start="19:31" pos:end="19:31">&amp;</operator><name pos:start="19:32" pos:end="19:35"><name pos:start="19:32" pos:end="19:32">c</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:35">x</name></name></expr></argument>, <argument pos:start="19:38" pos:end="19:42"><expr pos:start="19:38" pos:end="19:42"><operator pos:start="19:38" pos:end="19:38">&amp;</operator><name pos:start="19:39" pos:end="19:42"><name pos:start="19:39" pos:end="19:39">c</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:42">y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:38"><expr pos:start="21:9" pos:end="21:37"><name pos:start="21:9" pos:end="21:12">host</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:37"><name pos:start="21:16" pos:end="21:24">av_strdup</name><argument_list pos:start="21:25" pos:end="21:37">(<argument pos:start="21:26" pos:end="21:36"><expr pos:start="21:26" pos:end="21:36"><name pos:start="21:26" pos:end="21:36"><name pos:start="21:26" pos:end="21:26">s</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:36">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:12">host</name><index pos:start="23:13" pos:end="23:32">[<expr pos:start="23:14" pos:end="23:31"><name pos:start="23:14" pos:end="23:17">opts</name> <operator pos:start="23:19" pos:end="23:19">-</operator> <name pos:start="23:21" pos:end="23:31"><name pos:start="23:21" pos:end="23:21">s</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:31">filename</name></name></expr>]</index></name> <operator pos:start="23:34" pos:end="23:34">=</operator> <literal type="char" pos:start="23:36" pos:end="23:39">'\0'</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:5">c</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:11">conn</name></name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:44"><name pos:start="29:15" pos:end="29:25">xcb_connect</name><argument_list pos:start="29:26" pos:end="29:44">(<argument pos:start="29:27" pos:end="29:30"><expr pos:start="29:27" pos:end="29:30"><name pos:start="29:27" pos:end="29:30">host</name></expr></argument>, <argument pos:start="29:33" pos:end="29:43"><expr pos:start="29:33" pos:end="29:43"><operator pos:start="29:33" pos:end="29:33">&amp;</operator><name pos:start="29:34" pos:end="29:43">screen_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="35:22"><if pos:start="33:5" pos:end="35:22">if <condition pos:start="33:8" pos:end="33:13">(<expr pos:start="33:9" pos:end="33:12"><name pos:start="33:9" pos:end="33:12">opts</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:22"><block_content pos:start="35:9" pos:end="35:22">

        <expr_stmt pos:start="35:9" pos:end="35:22"><expr pos:start="35:9" pos:end="35:21"><call pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:15">av_free</name><argument_list pos:start="35:16" pos:end="35:21">(<argument pos:start="35:17" pos:end="35:20"><expr pos:start="35:17" pos:end="35:20"><name pos:start="35:17" pos:end="35:20">host</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:50">(<expr pos:start="39:9" pos:end="39:49"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:12">ret</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:48"><name pos:start="39:16" pos:end="39:39">xcb_connection_has_error</name><argument_list pos:start="39:40" pos:end="39:48">(<argument pos:start="39:41" pos:end="39:47"><expr pos:start="39:41" pos:end="39:47"><name pos:start="39:41" pos:end="39:47"><name pos:start="39:41" pos:end="39:41">c</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:47">conn</name></name></expr></argument>)</argument_list></call><operator pos:start="39:49" pos:end="39:49">)</operator></expr>)</condition> <block pos:start="39:52" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:28">

        <expr_stmt pos:start="41:9" pos:end="43:55"><expr pos:start="41:9" pos:end="43:54"><call pos:start="41:9" pos:end="43:54"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="43:54">(<argument pos:start="41:16" pos:end="41:16"><expr pos:start="41:16" pos:end="41:16"><name pos:start="41:16" pos:end="41:16">s</name></expr></argument>, <argument pos:start="41:19" pos:end="41:30"><expr pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:33" pos:end="41:69"><expr pos:start="41:33" pos:end="41:69"><literal type="string" pos:start="41:33" pos:end="41:69">"Cannot open display %s, error %d.\n"</literal></expr></argument>,

               <argument pos:start="43:16" pos:end="43:48"><expr pos:start="43:16" pos:end="43:48"><ternary pos:start="43:16" pos:end="43:48"><condition pos:start="43:16" pos:end="43:31"><expr pos:start="43:16" pos:end="43:29"><name pos:start="43:16" pos:end="43:29"><name pos:start="43:16" pos:end="43:16">s</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:26">filename</name><index pos:start="43:27" pos:end="43:29">[<expr pos:start="43:28" pos:end="43:28"><literal type="number" pos:start="43:28" pos:end="43:28">0</literal></expr>]</index></name></expr> ?</condition><then pos:start="43:33" pos:end="43:36"> <expr pos:start="43:33" pos:end="43:36"><name pos:start="43:33" pos:end="43:36">host</name></expr> </then><else pos:start="43:38" pos:end="43:48">: <expr pos:start="43:40" pos:end="43:48"><literal type="string" pos:start="43:40" pos:end="43:48">"default"</literal></expr></else></ternary></expr></argument>, <argument pos:start="43:51" pos:end="43:53"><expr pos:start="43:51" pos:end="43:53"><name pos:start="43:51" pos:end="43:53">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:28">return <expr pos:start="45:16" pos:end="45:27"><call pos:start="45:16" pos:end="45:27"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:27">(<argument pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:35"><expr pos:start="49:5" pos:end="49:34"><name pos:start="49:5" pos:end="49:9">setup</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <call pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:25">xcb_get_setup</name><argument_list pos:start="49:26" pos:end="49:34">(<argument pos:start="49:27" pos:end="49:33"><expr pos:start="49:27" pos:end="49:33"><name pos:start="49:27" pos:end="49:33"><name pos:start="49:27" pos:end="49:27">c</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:33">conn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:46"><expr pos:start="53:5" pos:end="53:45"><name pos:start="53:5" pos:end="53:13"><name pos:start="53:5" pos:end="53:5">c</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:13">screen</name></name> <operator pos:start="53:15" pos:end="53:15">=</operator> <call pos:start="53:17" pos:end="53:45"><name pos:start="53:17" pos:end="53:26">get_screen</name><argument_list pos:start="53:27" pos:end="53:45">(<argument pos:start="53:28" pos:end="53:32"><expr pos:start="53:28" pos:end="53:32"><name pos:start="53:28" pos:end="53:32">setup</name></expr></argument>, <argument pos:start="53:35" pos:end="53:44"><expr pos:start="53:35" pos:end="53:44"><name pos:start="53:35" pos:end="53:44">screen_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="65:5"><if pos:start="55:5" pos:end="65:5">if <condition pos:start="55:8" pos:end="55:19">(<expr pos:start="55:9" pos:end="55:18"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:18"><name pos:start="55:10" pos:end="55:10">c</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:18">screen</name></name></expr>)</condition> <block pos:start="55:21" pos:end="65:5">{<block_content pos:start="57:9" pos:end="63:28">

        <expr_stmt pos:start="57:9" pos:end="59:27"><expr pos:start="57:9" pos:end="59:26"><call pos:start="57:9" pos:end="59:26"><name pos:start="57:9" pos:end="57:14">av_log</name><argument_list pos:start="57:15" pos:end="59:26">(<argument pos:start="57:16" pos:end="57:16"><expr pos:start="57:16" pos:end="57:16"><name pos:start="57:16" pos:end="57:16">s</name></expr></argument>, <argument pos:start="57:19" pos:end="57:30"><expr pos:start="57:19" pos:end="57:30"><name pos:start="57:19" pos:end="57:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:33" pos:end="57:65"><expr pos:start="57:33" pos:end="57:65"><literal type="string" pos:start="57:33" pos:end="57:65">"The screen %d does not exist.\n"</literal></expr></argument>,

               <argument pos:start="59:16" pos:end="59:25"><expr pos:start="59:16" pos:end="59:25"><name pos:start="59:16" pos:end="59:25">screen_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:30"><expr pos:start="61:9" pos:end="61:29"><call pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:26">xcbgrab_read_close</name><argument_list pos:start="61:27" pos:end="61:29">(<argument pos:start="61:28" pos:end="61:28"><expr pos:start="61:28" pos:end="61:28"><name pos:start="61:28" pos:end="61:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:28">return <expr pos:start="63:16" pos:end="63:27"><call pos:start="63:16" pos:end="63:27"><name pos:start="63:16" pos:end="63:22">AVERROR</name><argument_list pos:start="63:23" pos:end="63:27">(<argument pos:start="63:24" pos:end="63:26"><expr pos:start="63:24" pos:end="63:26"><name pos:start="63:24" pos:end="63:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:27"><expr pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:7">ret</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <call pos:start="69:11" pos:end="69:26"><name pos:start="69:11" pos:end="69:23">create_stream</name><argument_list pos:start="69:24" pos:end="69:26">(<argument pos:start="69:25" pos:end="69:25"><expr pos:start="69:25" pos:end="69:25"><name pos:start="69:25" pos:end="69:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="84:0"><if pos:start="73:5" pos:end="84:0">if <condition pos:start="73:8" pos:end="73:16">(<expr pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">&lt;</operator> <literal type="number" pos:start="73:15" pos:end="73:15">0</literal></expr>)</condition> <block pos:start="73:18" pos:end="84:0">{<block_content pos:start="75:9" pos:end="77:19">

        <expr_stmt pos:start="75:9" pos:end="75:30"><expr pos:start="75:9" pos:end="75:29"><call pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:26">xcbgrab_read_close</name><argument_list pos:start="75:27" pos:end="75:29">(<argument pos:start="75:28" pos:end="75:28"><expr pos:start="75:28" pos:end="75:28"><name pos:start="75:28" pos:end="75:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:19">return <expr pos:start="77:16" pos:end="77:18"><name pos:start="77:16" pos:end="77:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="83:1" pos:end="83:21">#<cpp:directive pos:start="83:2" pos:end="83:3">if</cpp:directive> <expr pos:start="83:5" pos:end="83:21"><name pos:start="83:5" pos:end="83:21">CONFIG_LIBXCB_SHM</name></expr></cpp:if>

    <if_stmt pos:start="85:5" pos:end="94:0"><if pos:start="85:5" pos:end="94:0">if <condition pos:start="85:8" pos:end="85:42">(<expr pos:start="85:9" pos:end="85:41"><operator pos:start="85:9" pos:end="85:9">(</operator><name pos:start="85:10" pos:end="85:19"><name pos:start="85:10" pos:end="85:10">c</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:19">has_shm</name></name> <operator pos:start="85:21" pos:end="85:21">=</operator> <call pos:start="85:23" pos:end="85:40"><name pos:start="85:23" pos:end="85:31">check_shm</name><argument_list pos:start="85:32" pos:end="85:40">(<argument pos:start="85:33" pos:end="85:39"><expr pos:start="85:33" pos:end="85:39"><name pos:start="85:33" pos:end="85:39"><name pos:start="85:33" pos:end="85:33">c</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:39">conn</name></name></expr></argument>)</argument_list></call><operator pos:start="85:41" pos:end="85:41">)</operator></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="94:0"><block_content pos:start="87:9" pos:end="94:0">

        <expr_stmt pos:start="87:9" pos:end="94:0"><expr pos:start="87:9" pos:end="87:45"><name pos:start="87:9" pos:end="87:18"><name pos:start="87:9" pos:end="87:9">c</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:18">segment</name></name> <operator pos:start="87:20" pos:end="87:20">=</operator> <call pos:start="87:22" pos:end="87:45"><name pos:start="87:22" pos:end="87:36">xcb_generate_id</name><argument_list pos:start="87:37" pos:end="87:45">(<argument pos:start="87:38" pos:end="87:44"><expr pos:start="87:38" pos:end="87:44"><name pos:start="87:38" pos:end="87:44"><name pos:start="87:38" pos:end="87:38">c</name><operator pos:start="87:39" pos:end="87:40">-&gt;</operator><name pos:start="87:41" pos:end="87:44">conn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="93:1" pos:end="93:24">#<cpp:directive pos:start="93:2" pos:end="93:3">if</cpp:directive> <expr pos:start="93:5" pos:end="93:24"><name pos:start="93:5" pos:end="93:24">CONFIG_LIBXCB_XFIXES</name></expr></cpp:if>

    <if_stmt pos:start="95:5" pos:end="118:0"><if pos:start="95:5" pos:end="118:0">if <condition pos:start="95:8" pos:end="95:22">(<expr pos:start="95:9" pos:end="95:21"><name pos:start="95:9" pos:end="95:21"><name pos:start="95:9" pos:end="95:9">c</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:21">draw_mouse</name></name></expr>)</condition> <block pos:start="95:24" pos:end="118:0">{<block_content pos:start="97:9" pos:end="113:9">

        <if_stmt pos:start="97:9" pos:end="103:9"><if pos:start="97:9" pos:end="103:9">if <condition pos:start="97:12" pos:end="97:53">(<expr pos:start="97:13" pos:end="97:52"><operator pos:start="97:13" pos:end="97:13">!</operator><operator pos:start="97:14" pos:end="97:14">(</operator><name pos:start="97:15" pos:end="97:27"><name pos:start="97:15" pos:end="97:15">c</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:27">draw_mouse</name></name> <operator pos:start="97:29" pos:end="97:29">=</operator> <call pos:start="97:31" pos:end="97:51"><name pos:start="97:31" pos:end="97:42">check_xfixes</name><argument_list pos:start="97:43" pos:end="97:51">(<argument pos:start="97:44" pos:end="97:50"><expr pos:start="97:44" pos:end="97:50"><name pos:start="97:44" pos:end="97:50"><name pos:start="97:44" pos:end="97:44">c</name><operator pos:start="97:45" pos:end="97:46">-&gt;</operator><name pos:start="97:47" pos:end="97:50">conn</name></name></expr></argument>)</argument_list></call><operator pos:start="97:52" pos:end="97:52">)</operator></expr>)</condition> <block pos:start="97:55" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:69">

            <expr_stmt pos:start="99:13" pos:end="101:69"><expr pos:start="99:13" pos:end="101:68"><call pos:start="99:13" pos:end="101:68"><name pos:start="99:13" pos:end="99:18">av_log</name><argument_list pos:start="99:19" pos:end="101:68">(<argument pos:start="99:20" pos:end="99:20"><expr pos:start="99:20" pos:end="99:20"><name pos:start="99:20" pos:end="99:20">s</name></expr></argument>, <argument pos:start="99:23" pos:end="99:36"><expr pos:start="99:23" pos:end="99:36"><name pos:start="99:23" pos:end="99:36">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="101:20" pos:end="101:67"><expr pos:start="101:20" pos:end="101:67"><literal type="string" pos:start="101:20" pos:end="101:67">"XFixes not available, cannot draw the mouse.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="105:9" pos:end="113:9"><if pos:start="105:9" pos:end="113:9">if <condition pos:start="105:12" pos:end="105:24">(<expr pos:start="105:13" pos:end="105:23"><name pos:start="105:13" pos:end="105:18"><name pos:start="105:13" pos:end="105:13">c</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:18">bpp</name></name> <operator pos:start="105:20" pos:end="105:20">&lt;</operator> <literal type="number" pos:start="105:22" pos:end="105:23">24</literal></expr>)</condition> <block pos:start="105:26" pos:end="113:9">{<block_content pos:start="107:13" pos:end="111:30">

            <expr_stmt pos:start="107:13" pos:end="109:50"><expr pos:start="107:13" pos:end="109:49"><call pos:start="107:13" pos:end="109:49"><name pos:start="107:13" pos:end="107:41">avpriv_report_missing_feature</name><argument_list pos:start="107:42" pos:end="109:49">(<argument pos:start="107:43" pos:end="107:43"><expr pos:start="107:43" pos:end="107:43"><name pos:start="107:43" pos:end="107:43">s</name></expr></argument>, <argument pos:start="107:46" pos:end="107:71"><expr pos:start="107:46" pos:end="107:71"><literal type="string" pos:start="107:46" pos:end="107:71">"%d bits per pixel screen"</literal></expr></argument>,

                                          <argument pos:start="109:43" pos:end="109:48"><expr pos:start="109:43" pos:end="109:48"><name pos:start="109:43" pos:end="109:48"><name pos:start="109:43" pos:end="109:43">c</name><operator pos:start="109:44" pos:end="109:45">-&gt;</operator><name pos:start="109:46" pos:end="109:48">bpp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:30"><expr pos:start="111:13" pos:end="111:29"><name pos:start="111:13" pos:end="111:25"><name pos:start="111:13" pos:end="111:13">c</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:25">draw_mouse</name></name> <operator pos:start="111:27" pos:end="111:27">=</operator> <literal type="number" pos:start="111:29" pos:end="111:29">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="117:1" pos:end="117:6">#<cpp:directive pos:start="117:2" pos:end="117:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="121:5" pos:end="123:24"><if pos:start="121:5" pos:end="123:24">if <condition pos:start="121:8" pos:end="121:23">(<expr pos:start="121:9" pos:end="121:22"><name pos:start="121:9" pos:end="121:22"><name pos:start="121:9" pos:end="121:9">c</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:22">show_region</name></name></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:24"><block_content pos:start="123:9" pos:end="123:24">

        <expr_stmt pos:start="123:9" pos:end="123:24"><expr pos:start="123:9" pos:end="123:23"><call pos:start="123:9" pos:end="123:23"><name pos:start="123:9" pos:end="123:20">setup_window</name><argument_list pos:start="123:21" pos:end="123:23">(<argument pos:start="123:22" pos:end="123:22"><expr pos:start="123:22" pos:end="123:22"><name pos:start="123:22" pos:end="123:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="127:5" pos:end="127:13">return <expr pos:start="127:12" pos:end="127:12"><literal type="number" pos:start="127:12" pos:end="127:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
