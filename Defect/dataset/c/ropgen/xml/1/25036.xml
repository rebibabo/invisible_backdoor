<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25036.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">qmp_input_start_struct</name><parameter_list pos:start="1:35" pos:end="3:79">(<parameter pos:start="1:36" pos:end="1:45"><decl pos:start="1:36" pos:end="1:45"><type pos:start="1:36" pos:end="1:45"><name pos:start="1:36" pos:end="1:42">Visitor</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">v</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:51">void</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier><modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">obj</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:75"><decl pos:start="1:60" pos:end="1:75"><type pos:start="1:60" pos:end="1:75"><specifier pos:start="1:60" pos:end="1:64">const</specifier> <name pos:start="1:66" pos:end="1:69">char</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:75">kind</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:51"><decl pos:start="3:36" pos:end="3:51"><type pos:start="3:36" pos:end="3:51"><specifier pos:start="3:36" pos:end="3:40">const</specifier> <name pos:start="3:42" pos:end="3:45">char</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:51">name</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:64"><decl pos:start="3:54" pos:end="3:64"><type pos:start="3:54" pos:end="3:64"><name pos:start="3:54" pos:end="3:59">size_t</name></type> <name pos:start="3:61" pos:end="3:64">size</name></decl></parameter>, <parameter pos:start="3:67" pos:end="3:78"><decl pos:start="3:67" pos:end="3:78"><type pos:start="3:67" pos:end="3:78"><name pos:start="3:67" pos:end="3:71">Error</name> <modifier pos:start="3:73" pos:end="3:73">*</modifier><modifier pos:start="3:74" pos:end="3:74">*</modifier></type><name pos:start="3:75" pos:end="3:78">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:5">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">QmpInputVisitor</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">qiv</name> <init pos:start="7:26" pos:end="7:36">= <expr pos:start="7:28" pos:end="7:36"><call pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:33">to_qiv</name><argument_list pos:start="7:34" pos:end="7:36">(<argument pos:start="7:35" pos:end="7:35"><expr pos:start="7:35" pos:end="7:35"><name pos:start="7:35" pos:end="7:35">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:58"><decl pos:start="9:5" pos:end="9:57"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">QObject</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:23">qobj</name> <init pos:start="9:25" pos:end="9:57">= <expr pos:start="9:27" pos:end="9:57"><call pos:start="9:27" pos:end="9:57"><name pos:start="9:27" pos:end="9:46">qmp_input_get_object</name><argument_list pos:start="9:47" pos:end="9:57">(<argument pos:start="9:48" pos:end="9:50"><expr pos:start="9:48" pos:end="9:50"><name pos:start="9:48" pos:end="9:50">qiv</name></expr></argument>, <argument pos:start="9:53" pos:end="9:56"><expr pos:start="9:53" pos:end="9:56"><name pos:start="9:53" pos:end="9:56">name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:51">(<expr pos:start="13:9" pos:end="13:50"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:13">qobj</name> <operator pos:start="13:15" pos:end="13:16">||</operator> <call pos:start="13:18" pos:end="13:35"><name pos:start="13:18" pos:end="13:29">qobject_type</name><argument_list pos:start="13:30" pos:end="13:35">(<argument pos:start="13:31" pos:end="13:34"><expr pos:start="13:31" pos:end="13:34"><name pos:start="13:31" pos:end="13:34">qobj</name></expr></argument>)</argument_list></call> <operator pos:start="13:37" pos:end="13:38">!=</operator> <name pos:start="13:40" pos:end="13:50">QTYPE_QDICT</name></expr>)</condition> <block pos:start="13:53" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:15">

        <expr_stmt pos:start="15:9" pos:end="17:27"><expr pos:start="15:9" pos:end="17:26"><call pos:start="15:9" pos:end="17:26"><name pos:start="15:9" pos:end="15:17">error_set</name><argument_list pos:start="15:18" pos:end="17:26">(<argument pos:start="15:19" pos:end="15:22"><expr pos:start="15:19" pos:end="15:22"><name pos:start="15:19" pos:end="15:22">errp</name></expr></argument>, <argument pos:start="15:25" pos:end="15:51"><expr pos:start="15:25" pos:end="15:51"><name pos:start="15:25" pos:end="15:51">QERR_INVALID_PARAMETER_TYPE</name></expr></argument>, <argument pos:start="15:54" pos:end="15:73"><expr pos:start="15:54" pos:end="15:73"><ternary pos:start="15:54" pos:end="15:73"><condition pos:start="15:54" pos:end="15:59"><expr pos:start="15:54" pos:end="15:57"><name pos:start="15:54" pos:end="15:57">name</name></expr> ?</condition><then pos:start="15:61" pos:end="15:64"> <expr pos:start="15:61" pos:end="15:64"><name pos:start="15:61" pos:end="15:64">name</name></expr> </then><else pos:start="15:66" pos:end="15:73">: <expr pos:start="15:68" pos:end="15:73"><literal type="string" pos:start="15:68" pos:end="15:73">"null"</literal></expr></else></ternary></expr></argument>,

                  <argument pos:start="17:19" pos:end="17:25"><expr pos:start="17:19" pos:end="17:25"><literal type="string" pos:start="17:19" pos:end="17:25">"QDict"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:36"><expr pos:start="25:5" pos:end="25:35"><call pos:start="25:5" pos:end="25:35"><name pos:start="25:5" pos:end="25:18">qmp_input_push</name><argument_list pos:start="25:19" pos:end="25:35">(<argument pos:start="25:20" pos:end="25:22"><expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">qiv</name></expr></argument>, <argument pos:start="25:25" pos:end="25:28"><expr pos:start="25:25" pos:end="25:28"><name pos:start="25:25" pos:end="25:28">qobj</name></expr></argument>, <argument pos:start="25:31" pos:end="25:34"><expr pos:start="25:31" pos:end="25:34"><name pos:start="25:31" pos:end="25:34">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:27">(<expr pos:start="27:9" pos:end="27:26"><call pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:20">error_is_set</name><argument_list pos:start="27:21" pos:end="27:26">(<argument pos:start="27:22" pos:end="27:25"><expr pos:start="27:22" pos:end="27:25"><name pos:start="27:22" pos:end="27:25">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:29" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:15">

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:12">(<expr pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">obj</name></expr>)</condition> <block pos:start="35:14" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:31">

        <expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><operator pos:start="37:9" pos:end="37:9">*</operator><name pos:start="37:10" pos:end="37:12">obj</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:24">g_malloc0</name><argument_list pos:start="37:25" pos:end="37:30">(<argument pos:start="37:26" pos:end="37:29"><expr pos:start="37:26" pos:end="37:29"><name pos:start="37:26" pos:end="37:29">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
