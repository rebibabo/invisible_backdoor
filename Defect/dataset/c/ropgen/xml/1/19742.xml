<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19742.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">omap2_intc_init</name><parameter_list pos:start="1:27" pos:end="1:45">(<parameter pos:start="1:28" pos:end="1:44"><decl pos:start="1:28" pos:end="1:44"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:39">SysBusDevice</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">sbd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">dev</name> <init pos:start="5:22" pos:end="5:34">= <expr pos:start="5:24" pos:end="5:34"><call pos:start="5:24" pos:end="5:34"><name pos:start="5:24" pos:end="5:29">DEVICE</name><argument_list pos:start="5:30" pos:end="5:34">(<argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">sbd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:32"><name pos:start="7:5" pos:end="7:30"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:30">omap_intr_handler_s</name></name> <modifier pos:start="7:32" pos:end="7:32">*</modifier></type><name pos:start="7:33" pos:end="7:33">s</name> <init pos:start="7:35" pos:end="7:50">= <expr pos:start="7:37" pos:end="7:50"><call pos:start="7:37" pos:end="7:50"><name pos:start="7:37" pos:end="7:45">OMAP_INTC</name><argument_list pos:start="7:46" pos:end="7:50">(<argument pos:start="7:47" pos:end="7:49"><expr pos:start="7:47" pos:end="7:49"><name pos:start="7:47" pos:end="7:49">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:16"><name pos:start="11:10" pos:end="11:10">s</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:16">iclk</name></name></expr>)</condition> <block pos:start="11:19" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:53">

        <expr_stmt pos:start="13:9" pos:end="13:53"><expr pos:start="13:9" pos:end="13:52"><call pos:start="13:9" pos:end="13:52"><name pos:start="13:9" pos:end="13:16">hw_error</name><argument_list pos:start="13:17" pos:end="13:52">(<argument pos:start="13:18" pos:end="13:51"><expr pos:start="13:18" pos:end="13:51"><literal type="string" pos:start="13:18" pos:end="13:51">"omap2-intc: iclk not connected\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:17">(<expr pos:start="17:9" pos:end="17:16"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:16"><name pos:start="17:10" pos:end="17:10">s</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:16">fclk</name></name></expr>)</condition> <block pos:start="17:19" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:53">

        <expr_stmt pos:start="19:9" pos:end="19:53"><expr pos:start="19:9" pos:end="19:52"><call pos:start="19:9" pos:end="19:52"><name pos:start="19:9" pos:end="19:16">hw_error</name><argument_list pos:start="19:17" pos:end="19:52">(<argument pos:start="19:18" pos:end="19:51"><expr pos:start="19:18" pos:end="19:51"><literal type="string" pos:start="19:18" pos:end="19:51">"omap2-intc: fclk not connected\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:17">level_only</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <literal type="number" pos:start="23:21" pos:end="23:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:18"><expr pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:13">nbanks</name></name> <operator pos:start="25:15" pos:end="25:15">=</operator> <literal type="number" pos:start="25:17" pos:end="25:17">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><call pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:19">sysbus_init_irq</name><argument_list pos:start="27:20" pos:end="27:44">(<argument pos:start="27:21" pos:end="27:23"><expr pos:start="27:21" pos:end="27:23"><name pos:start="27:21" pos:end="27:23">sbd</name></expr></argument>, <argument pos:start="27:26" pos:end="27:43"><expr pos:start="27:26" pos:end="27:43"><operator pos:start="27:26" pos:end="27:26">&amp;</operator><name pos:start="27:27" pos:end="27:43"><name pos:start="27:27" pos:end="27:27">s</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:40">parent_intr</name><index pos:start="27:41" pos:end="27:43">[<expr pos:start="27:42" pos:end="27:42"><literal type="number" pos:start="27:42" pos:end="27:42">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><call pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:19">sysbus_init_irq</name><argument_list pos:start="29:20" pos:end="29:44">(<argument pos:start="29:21" pos:end="29:23"><expr pos:start="29:21" pos:end="29:23"><name pos:start="29:21" pos:end="29:23">sbd</name></expr></argument>, <argument pos:start="29:26" pos:end="29:43"><expr pos:start="29:26" pos:end="29:43"><operator pos:start="29:26" pos:end="29:26">&amp;</operator><name pos:start="29:27" pos:end="29:43"><name pos:start="29:27" pos:end="29:27">s</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:40">parent_intr</name><index pos:start="29:41" pos:end="29:43">[<expr pos:start="29:42" pos:end="29:42"><literal type="number" pos:start="29:42" pos:end="29:42">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:65"><expr pos:start="31:5" pos:end="31:64"><call pos:start="31:5" pos:end="31:64"><name pos:start="31:5" pos:end="31:21">qdev_init_gpio_in</name><argument_list pos:start="31:22" pos:end="31:64">(<argument pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><name pos:start="31:23" pos:end="31:25">dev</name></expr></argument>, <argument pos:start="31:28" pos:end="31:47"><expr pos:start="31:28" pos:end="31:47"><name pos:start="31:28" pos:end="31:47">omap_set_intr_noedge</name></expr></argument>, <argument pos:start="31:50" pos:end="31:63"><expr pos:start="31:50" pos:end="31:63"><name pos:start="31:50" pos:end="31:58"><name pos:start="31:50" pos:end="31:50">s</name><operator pos:start="31:51" pos:end="31:52">-&gt;</operator><name pos:start="31:53" pos:end="31:58">nbanks</name></name> <operator pos:start="31:60" pos:end="31:60">*</operator> <literal type="number" pos:start="31:62" pos:end="31:63">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="35:48"><expr pos:start="33:5" pos:end="35:47"><call pos:start="33:5" pos:end="35:47"><name pos:start="33:5" pos:end="33:25">memory_region_init_io</name><argument_list pos:start="33:26" pos:end="35:47">(<argument pos:start="33:27" pos:end="33:34"><expr pos:start="33:27" pos:end="33:34"><operator pos:start="33:27" pos:end="33:27">&amp;</operator><name pos:start="33:28" pos:end="33:34"><name pos:start="33:28" pos:end="33:28">s</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:34">mmio</name></name></expr></argument>, <argument pos:start="33:37" pos:end="33:45"><expr pos:start="33:37" pos:end="33:45"><call pos:start="33:37" pos:end="33:45"><name pos:start="33:37" pos:end="33:42">OBJECT</name><argument_list pos:start="33:43" pos:end="33:45">(<argument pos:start="33:44" pos:end="33:44"><expr pos:start="33:44" pos:end="33:44"><name pos:start="33:44" pos:end="33:44">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:48" pos:end="33:66"><expr pos:start="33:48" pos:end="33:66"><operator pos:start="33:48" pos:end="33:48">&amp;</operator><name pos:start="33:49" pos:end="33:66">omap2_inth_mem_ops</name></expr></argument>, <argument pos:start="33:69" pos:end="33:69"><expr pos:start="33:69" pos:end="33:69"><name pos:start="33:69" pos:end="33:69">s</name></expr></argument>,

                          <argument pos:start="35:27" pos:end="35:38"><expr pos:start="35:27" pos:end="35:38"><literal type="string" pos:start="35:27" pos:end="35:38">"omap2-intc"</literal></expr></argument>, <argument pos:start="35:41" pos:end="35:46"><expr pos:start="35:41" pos:end="35:46"><literal type="number" pos:start="35:41" pos:end="35:46">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:36"><expr pos:start="37:5" pos:end="37:35"><call pos:start="37:5" pos:end="37:35"><name pos:start="37:5" pos:end="37:20">sysbus_init_mmio</name><argument_list pos:start="37:21" pos:end="37:35">(<argument pos:start="37:22" pos:end="37:24"><expr pos:start="37:22" pos:end="37:24"><name pos:start="37:22" pos:end="37:24">sbd</name></expr></argument>, <argument pos:start="37:27" pos:end="37:34"><expr pos:start="37:27" pos:end="37:34"><operator pos:start="37:27" pos:end="37:27">&amp;</operator><name pos:start="37:28" pos:end="37:34"><name pos:start="37:28" pos:end="37:28">s</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:34">mmio</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
