<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3123.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">get_mmu_address</name><parameter_list pos:start="1:27" pos:end="5:51">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:35">CPUState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type> <name pos:start="1:39" pos:end="1:41">env</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:66"><decl pos:start="1:44" pos:end="1:66"><type pos:start="1:44" pos:end="1:66"><name pos:start="1:44" pos:end="1:55">target_ulong</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type> <name pos:start="1:59" pos:end="1:66">physical</name></decl></parameter>,

			   <parameter pos:start="3:28" pos:end="3:36"><decl pos:start="3:28" pos:end="3:36"><type pos:start="3:28" pos:end="3:36"><name pos:start="3:28" pos:end="3:30">int</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:36">prot</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:58"><decl pos:start="3:39" pos:end="3:58"><type pos:start="3:39" pos:end="3:58"><name pos:start="3:39" pos:end="3:50">target_ulong</name></type> <name pos:start="3:52" pos:end="3:58">address</name></decl></parameter>,

			   <parameter pos:start="5:28" pos:end="5:33"><decl pos:start="5:28" pos:end="5:33"><type pos:start="5:28" pos:end="5:33"><name pos:start="5:28" pos:end="5:30">int</name></type> <name pos:start="5:32" pos:end="5:33">rw</name></decl></parameter>, <parameter pos:start="5:36" pos:end="5:50"><decl pos:start="5:36" pos:end="5:50"><type pos:start="5:36" pos:end="5:50"><name pos:start="5:36" pos:end="5:38">int</name></type> <name pos:start="5:40" pos:end="5:50">access_type</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="117:1">{<block_content pos:start="9:5" pos:end="115:13">

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">use_asid</name></decl>, <decl pos:start="9:19" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:25">is_code</name></decl>, <decl pos:start="9:28" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:28">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">tlb_t</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:19">matching</name> <init pos:start="11:21" pos:end="11:26">= <expr pos:start="11:23" pos:end="11:26"><name pos:start="11:23" pos:end="11:26">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:70"><expr pos:start="15:5" pos:end="15:69"><name pos:start="15:5" pos:end="15:12">use_asid</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <operator pos:start="15:16" pos:end="15:16">(</operator><name pos:start="15:17" pos:end="15:26"><name pos:start="15:17" pos:end="15:19">env</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:26">mmucr</name></name> <operator pos:start="15:28" pos:end="15:28">&amp;</operator> <name pos:start="15:30" pos:end="15:37">MMUCR_SV</name><operator pos:start="15:38" pos:end="15:38">)</operator> <operator pos:start="15:40" pos:end="15:41">==</operator> <literal type="number" pos:start="15:43" pos:end="15:43">0</literal> <operator pos:start="15:45" pos:end="15:46">&amp;&amp;</operator> <operator pos:start="15:48" pos:end="15:48">(</operator><name pos:start="15:49" pos:end="15:55"><name pos:start="15:49" pos:end="15:51">env</name><operator pos:start="15:52" pos:end="15:53">-&gt;</operator><name pos:start="15:54" pos:end="15:55">sr</name></name> <operator pos:start="15:57" pos:end="15:57">&amp;</operator> <name pos:start="15:59" pos:end="15:63">SR_MD</name><operator pos:start="15:64" pos:end="15:64">)</operator> <operator pos:start="15:66" pos:end="15:67">==</operator> <literal type="number" pos:start="15:69" pos:end="15:69">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:11">is_code</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:21"><name pos:start="17:15" pos:end="17:17">env</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:21">pc</name></name> <operator pos:start="17:23" pos:end="17:24">==</operator> <name pos:start="17:26" pos:end="17:32">address</name></expr>;</expr_stmt>	<comment type="block" pos:start="17:41" pos:end="17:50">/* Hack */</comment>



    <comment type="block" pos:start="21:5" pos:end="21:69">/* Use a hack to find if this is an instruction or data access */</comment>

    <if_stmt pos:start="23:5" pos:end="97:5"><if pos:start="23:5" pos:end="41:5">if <condition pos:start="23:8" pos:end="23:49">(<expr pos:start="23:9" pos:end="23:48"><name pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">env</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:15">pc</name></name> <operator pos:start="23:17" pos:end="23:18">==</operator> <name pos:start="23:20" pos:end="23:26">address</name> <operator pos:start="23:28" pos:end="23:29">&amp;&amp;</operator> <operator pos:start="23:31" pos:end="23:31">!</operator><operator pos:start="23:32" pos:end="23:32">(</operator><name pos:start="23:33" pos:end="23:34">rw</name> <operator pos:start="23:36" pos:end="23:36">&amp;</operator> <name pos:start="23:38" pos:end="23:47">PAGE_WRITE</name><operator pos:start="23:48" pos:end="23:48">)</operator></expr>)</condition> <block pos:start="23:51" pos:end="41:5">{<block_content pos:start="25:9" pos:end="39:9">

	<expr_stmt pos:start="25:9" pos:end="25:55"><expr pos:start="25:9" pos:end="25:54"><name pos:start="25:9" pos:end="25:9">n</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:54"><name pos:start="25:13" pos:end="25:27">find_itlb_entry</name><argument_list pos:start="25:28" pos:end="25:54">(<argument pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><name pos:start="25:29" pos:end="25:31">env</name></expr></argument>, <argument pos:start="25:34" pos:end="25:40"><expr pos:start="25:34" pos:end="25:40"><name pos:start="25:34" pos:end="25:40">address</name></expr></argument>, <argument pos:start="25:43" pos:end="25:50"><expr pos:start="25:43" pos:end="25:50"><name pos:start="25:43" pos:end="25:50">use_asid</name></expr></argument>, <argument pos:start="25:53" pos:end="25:53"><expr pos:start="25:53" pos:end="25:53"><literal type="number" pos:start="25:53" pos:end="25:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="27:9" pos:end="39:9"><if pos:start="27:9" pos:end="39:9">if <condition pos:start="27:12" pos:end="27:19">(<expr pos:start="27:13" pos:end="27:18"><name pos:start="27:13" pos:end="27:13">n</name> <operator pos:start="27:15" pos:end="27:16">&gt;=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>)</condition> <block pos:start="27:21" pos:end="39:9">{<block_content pos:start="29:13" pos:end="37:34">

	    <expr_stmt pos:start="29:13" pos:end="29:37"><expr pos:start="29:13" pos:end="29:36"><name pos:start="29:13" pos:end="29:20">matching</name> <operator pos:start="29:22" pos:end="29:22">=</operator> <operator pos:start="29:24" pos:end="29:24">&amp;</operator><name pos:start="29:25" pos:end="29:36"><name pos:start="29:25" pos:end="29:27">env</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:33">itlb</name><index pos:start="29:34" pos:end="29:36">[<expr pos:start="29:35" pos:end="29:35"><name pos:start="29:35" pos:end="29:35">n</name></expr>]</index></name></expr>;</expr_stmt>

	    <if_stmt pos:start="31:13" pos:end="37:34"><if pos:start="31:13" pos:end="33:39">if <condition pos:start="31:16" pos:end="31:56">(<expr pos:start="31:17" pos:end="31:55"><operator pos:start="31:17" pos:end="31:17">(</operator><name pos:start="31:18" pos:end="31:24"><name pos:start="31:18" pos:end="31:20">env</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:24">sr</name></name> <operator pos:start="31:26" pos:end="31:26">&amp;</operator> <name pos:start="31:28" pos:end="31:32">SR_MD</name><operator pos:start="31:33" pos:end="31:33">)</operator> <operator pos:start="31:35" pos:end="31:35">&amp;</operator> <operator pos:start="31:37" pos:end="31:37">!</operator><operator pos:start="31:38" pos:end="31:38">(</operator><name pos:start="31:39" pos:end="31:50"><name pos:start="31:39" pos:end="31:46">matching</name><operator pos:start="31:47" pos:end="31:48">-&gt;</operator><name pos:start="31:49" pos:end="31:50">pr</name></name> <operator pos:start="31:52" pos:end="31:52">&amp;</operator> <literal type="number" pos:start="31:54" pos:end="31:54">2</literal><operator pos:start="31:55" pos:end="31:55">)</operator></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:39"><block_content pos:start="33:17" pos:end="33:39">

		<expr_stmt pos:start="33:17" pos:end="33:39"><expr pos:start="33:17" pos:end="33:38"><name pos:start="33:17" pos:end="33:17">n</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <name pos:start="33:21" pos:end="33:38">MMU_ITLB_VIOLATION</name></expr>;</expr_stmt></block_content></block></if>

	    <else pos:start="35:13" pos:end="37:34">else<block type="pseudo" pos:start="37:17" pos:end="37:34"><block_content pos:start="37:17" pos:end="37:34">

		<expr_stmt pos:start="37:17" pos:end="37:34"><expr pos:start="37:17" pos:end="37:33"><operator pos:start="37:17" pos:end="37:17">*</operator><name pos:start="37:18" pos:end="37:21">prot</name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:33">PAGE_READ</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="97:5">else <block pos:start="41:12" pos:end="97:5">{<block_content pos:start="43:9" pos:end="95:9">

	<expr_stmt pos:start="43:9" pos:end="43:52"><expr pos:start="43:9" pos:end="43:51"><name pos:start="43:9" pos:end="43:9">n</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <call pos:start="43:13" pos:end="43:51"><name pos:start="43:13" pos:end="43:27">find_utlb_entry</name><argument_list pos:start="43:28" pos:end="43:51">(<argument pos:start="43:29" pos:end="43:31"><expr pos:start="43:29" pos:end="43:31"><name pos:start="43:29" pos:end="43:31">env</name></expr></argument>, <argument pos:start="43:34" pos:end="43:40"><expr pos:start="43:34" pos:end="43:40"><name pos:start="43:34" pos:end="43:40">address</name></expr></argument>, <argument pos:start="43:43" pos:end="43:50"><expr pos:start="43:43" pos:end="43:50"><name pos:start="43:43" pos:end="43:50">use_asid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="45:9" pos:end="95:9"><if pos:start="45:9" pos:end="89:9">if <condition pos:start="45:12" pos:end="45:19">(<expr pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:13">n</name> <operator pos:start="45:15" pos:end="45:16">&gt;=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>)</condition> <block pos:start="45:21" pos:end="89:9">{<block_content pos:start="47:13" pos:end="87:13">

	    <expr_stmt pos:start="47:13" pos:end="47:37"><expr pos:start="47:13" pos:end="47:36"><name pos:start="47:13" pos:end="47:20">matching</name> <operator pos:start="47:22" pos:end="47:22">=</operator> <operator pos:start="47:24" pos:end="47:24">&amp;</operator><name pos:start="47:25" pos:end="47:36"><name pos:start="47:25" pos:end="47:27">env</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:33">utlb</name><index pos:start="47:34" pos:end="47:36">[<expr pos:start="47:35" pos:end="47:35"><name pos:start="47:35" pos:end="47:35">n</name></expr>]</index></name></expr>;</expr_stmt>

	    <switch pos:start="49:13" pos:end="87:13">switch <condition pos:start="49:20" pos:end="49:70">(<expr pos:start="49:21" pos:end="49:69"><operator pos:start="49:21" pos:end="49:21">(</operator><name pos:start="49:22" pos:end="49:33"><name pos:start="49:22" pos:end="49:29">matching</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:33">pr</name></name> <operator pos:start="49:35" pos:end="49:36">&lt;&lt;</operator> <literal type="number" pos:start="49:38" pos:end="49:38">1</literal><operator pos:start="49:39" pos:end="49:39">)</operator> <operator pos:start="49:41" pos:end="49:41">|</operator> <operator pos:start="49:43" pos:end="49:43">(</operator><ternary pos:start="49:44" pos:end="49:68"><condition pos:start="49:44" pos:end="49:62"><expr pos:start="49:44" pos:end="49:60"><operator pos:start="49:44" pos:end="49:44">(</operator><name pos:start="49:45" pos:end="49:51"><name pos:start="49:45" pos:end="49:47">env</name><operator pos:start="49:48" pos:end="49:49">-&gt;</operator><name pos:start="49:50" pos:end="49:51">sr</name></name> <operator pos:start="49:53" pos:end="49:53">&amp;</operator> <name pos:start="49:55" pos:end="49:59">SR_MD</name><operator pos:start="49:60" pos:end="49:60">)</operator></expr> ?</condition><then pos:start="49:64" pos:end="49:64"> <expr pos:start="49:64" pos:end="49:64"><literal type="number" pos:start="49:64" pos:end="49:64">1</literal></expr> </then><else pos:start="49:66" pos:end="49:68">: <expr pos:start="49:68" pos:end="49:68"><literal type="number" pos:start="49:68" pos:end="49:68">0</literal></expr></else></ternary><operator pos:start="49:69" pos:end="49:69">)</operator></expr>)</condition> <block pos:start="49:72" pos:end="87:13">{<block_content pos:start="51:13" pos:end="85:22">

	    <case pos:start="51:13" pos:end="51:19">case <expr pos:start="51:18" pos:end="51:18"><literal type="number" pos:start="51:18" pos:end="51:18">0</literal></expr>:</case>		<comment type="block" pos:start="51:33" pos:end="51:41">/* 000 */</comment>

	    <case pos:start="53:13" pos:end="53:19">case <expr pos:start="53:18" pos:end="53:18"><literal type="number" pos:start="53:18" pos:end="53:18">2</literal></expr>:</case>		<comment type="block" pos:start="53:33" pos:end="53:41">/* 010 */</comment>

		<expr_stmt pos:start="55:17" pos:end="57:44"><expr pos:start="55:17" pos:end="57:43"><name pos:start="55:17" pos:end="55:17">n</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <ternary pos:start="55:21" pos:end="57:43"><condition pos:start="55:21" pos:end="55:39"><expr pos:start="55:21" pos:end="55:37"><operator pos:start="55:21" pos:end="55:21">(</operator><name pos:start="55:22" pos:end="55:23">rw</name> <operator pos:start="55:25" pos:end="55:25">&amp;</operator> <name pos:start="55:27" pos:end="55:36">PAGE_WRITE</name><operator pos:start="55:37" pos:end="55:37">)</operator></expr> ?</condition><then pos:start="55:41" pos:end="55:64"> <expr pos:start="55:41" pos:end="55:64"><name pos:start="55:41" pos:end="55:64">MMU_DTLB_VIOLATION_WRITE</name></expr> </then><else pos:start="55:66" pos:end="57:43">:

		    <expr pos:start="57:21" pos:end="57:43"><name pos:start="57:21" pos:end="57:43">MMU_DTLB_VIOLATION_READ</name></expr></else></ternary></expr>;</expr_stmt>

		<break pos:start="59:17" pos:end="59:22">break;</break>

	    <case pos:start="61:13" pos:end="61:19">case <expr pos:start="61:18" pos:end="61:18"><literal type="number" pos:start="61:18" pos:end="61:18">1</literal></expr>:</case>		<comment type="block" pos:start="61:33" pos:end="61:41">/* 001 */</comment>

	    <case pos:start="63:13" pos:end="63:19">case <expr pos:start="63:18" pos:end="63:18"><literal type="number" pos:start="63:18" pos:end="63:18">4</literal></expr>:</case>		<comment type="block" pos:start="63:33" pos:end="63:41">/* 100 */</comment>

	    <case pos:start="65:13" pos:end="65:19">case <expr pos:start="65:18" pos:end="65:18"><literal type="number" pos:start="65:18" pos:end="65:18">5</literal></expr>:</case>		<comment type="block" pos:start="65:33" pos:end="65:41">/* 101 */</comment>

		<if_stmt pos:start="67:17" pos:end="73:38"><if pos:start="67:17" pos:end="69:49">if <condition pos:start="67:20" pos:end="67:36">(<expr pos:start="67:21" pos:end="67:35"><name pos:start="67:21" pos:end="67:22">rw</name> <operator pos:start="67:24" pos:end="67:24">&amp;</operator> <name pos:start="67:26" pos:end="67:35">PAGE_WRITE</name></expr>)</condition><block type="pseudo" pos:start="69:21" pos:end="69:49"><block_content pos:start="69:21" pos:end="69:49">

		    <expr_stmt pos:start="69:21" pos:end="69:49"><expr pos:start="69:21" pos:end="69:48"><name pos:start="69:21" pos:end="69:21">n</name> <operator pos:start="69:23" pos:end="69:23">=</operator> <name pos:start="69:25" pos:end="69:48">MMU_DTLB_VIOLATION_WRITE</name></expr>;</expr_stmt></block_content></block></if>

		<else pos:start="71:17" pos:end="73:38">else<block type="pseudo" pos:start="73:21" pos:end="73:38"><block_content pos:start="73:21" pos:end="73:38">

		    <expr_stmt pos:start="73:21" pos:end="73:38"><expr pos:start="73:21" pos:end="73:37"><operator pos:start="73:21" pos:end="73:21">*</operator><name pos:start="73:22" pos:end="73:25">prot</name> <operator pos:start="73:27" pos:end="73:27">=</operator> <name pos:start="73:29" pos:end="73:37">PAGE_READ</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

		<break pos:start="75:17" pos:end="75:22">break;</break>

	    <case pos:start="77:13" pos:end="77:19">case <expr pos:start="77:18" pos:end="77:18"><literal type="number" pos:start="77:18" pos:end="77:18">3</literal></expr>:</case>		<comment type="block" pos:start="77:33" pos:end="77:41">/* 011 */</comment>

	    <case pos:start="79:13" pos:end="79:19">case <expr pos:start="79:18" pos:end="79:18"><literal type="number" pos:start="79:18" pos:end="79:18">6</literal></expr>:</case>		<comment type="block" pos:start="79:33" pos:end="79:41">/* 110 */</comment>

	    <case pos:start="81:13" pos:end="81:19">case <expr pos:start="81:18" pos:end="81:18"><literal type="number" pos:start="81:18" pos:end="81:18">7</literal></expr>:</case>		<comment type="block" pos:start="81:33" pos:end="81:41">/* 111 */</comment>

		<expr_stmt pos:start="83:17" pos:end="83:54"><expr pos:start="83:17" pos:end="83:53"><operator pos:start="83:17" pos:end="83:17">*</operator><name pos:start="83:18" pos:end="83:21">prot</name> <operator pos:start="83:23" pos:end="83:23">=</operator> <name pos:start="83:25" pos:end="83:26">rw</name> <operator pos:start="83:28" pos:end="83:28">&amp;</operator> <operator pos:start="83:30" pos:end="83:30">(</operator><name pos:start="83:31" pos:end="83:39">PAGE_READ</name> <operator pos:start="83:41" pos:end="83:41">|</operator> <name pos:start="83:43" pos:end="83:52">PAGE_WRITE</name><operator pos:start="83:53" pos:end="83:53">)</operator></expr>;</expr_stmt>

		<break pos:start="85:17" pos:end="85:22">break;</break>

	    </block_content>}</block></switch>

	</block_content>}</block></if> <if type="elseif" pos:start="89:11" pos:end="95:9">else if <condition pos:start="89:19" pos:end="89:38">(<expr pos:start="89:20" pos:end="89:37"><name pos:start="89:20" pos:end="89:20">n</name> <operator pos:start="89:22" pos:end="89:23">==</operator> <name pos:start="89:25" pos:end="89:37">MMU_DTLB_MISS</name></expr>)</condition> <block pos:start="89:40" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:35">

	    <expr_stmt pos:start="91:13" pos:end="93:35"><expr pos:start="91:13" pos:end="93:34"><name pos:start="91:13" pos:end="91:13">n</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <ternary pos:start="91:17" pos:end="93:34"><condition pos:start="91:17" pos:end="91:35"><expr pos:start="91:17" pos:end="91:33"><operator pos:start="91:17" pos:end="91:17">(</operator><name pos:start="91:18" pos:end="91:19">rw</name> <operator pos:start="91:21" pos:end="91:21">&amp;</operator> <name pos:start="91:23" pos:end="91:32">PAGE_WRITE</name><operator pos:start="91:33" pos:end="91:33">)</operator></expr> ?</condition><then pos:start="91:37" pos:end="91:55"> <expr pos:start="91:37" pos:end="91:55"><name pos:start="91:37" pos:end="91:55">MMU_DTLB_MISS_WRITE</name></expr> </then><else pos:start="91:57" pos:end="93:34">:

		<expr pos:start="93:17" pos:end="93:34"><name pos:start="93:17" pos:end="93:34">MMU_DTLB_MISS_READ</name></expr></else></ternary></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="99:5" pos:end="113:5"><if pos:start="99:5" pos:end="113:5">if <condition pos:start="99:8" pos:end="99:15">(<expr pos:start="99:9" pos:end="99:14"><name pos:start="99:9" pos:end="99:9">n</name> <operator pos:start="99:11" pos:end="99:12">&gt;=</operator> <literal type="number" pos:start="99:14" pos:end="99:14">0</literal></expr>)</condition> <block pos:start="99:17" pos:end="113:5">{<block_content pos:start="101:9" pos:end="111:23">

	<expr_stmt pos:start="101:9" pos:end="103:45"><expr pos:start="101:9" pos:end="103:44"><operator pos:start="101:9" pos:end="101:9">*</operator><name pos:start="101:10" pos:end="101:17">physical</name> <operator pos:start="101:19" pos:end="101:19">=</operator> <operator pos:start="101:21" pos:end="101:21">(</operator><operator pos:start="101:22" pos:end="101:22">(</operator><name pos:start="101:23" pos:end="101:35"><name pos:start="101:23" pos:end="101:30">matching</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:35">ppn</name></name> <operator pos:start="101:37" pos:end="101:38">&lt;&lt;</operator> <literal type="number" pos:start="101:40" pos:end="101:41">10</literal><operator pos:start="101:42" pos:end="101:42">)</operator> <operator pos:start="101:44" pos:end="101:44">&amp;</operator> <operator pos:start="101:46" pos:end="101:46">~</operator><operator pos:start="101:47" pos:end="101:47">(</operator><name pos:start="101:48" pos:end="101:61"><name pos:start="101:48" pos:end="101:55">matching</name><operator pos:start="101:56" pos:end="101:57">-&gt;</operator><name pos:start="101:58" pos:end="101:61">size</name></name> <operator pos:start="101:63" pos:end="101:63">-</operator> <literal type="number" pos:start="101:65" pos:end="101:65">1</literal><operator pos:start="101:66" pos:end="101:66">)</operator><operator pos:start="101:67" pos:end="101:67">)</operator> <operator pos:start="101:69" pos:end="101:69">|</operator>

	    <operator pos:start="103:13" pos:end="103:13">(</operator><name pos:start="103:14" pos:end="103:20">address</name> <operator pos:start="103:22" pos:end="103:22">&amp;</operator> <operator pos:start="103:24" pos:end="103:24">(</operator><name pos:start="103:25" pos:end="103:38"><name pos:start="103:25" pos:end="103:32">matching</name><operator pos:start="103:33" pos:end="103:34">-&gt;</operator><name pos:start="103:35" pos:end="103:38">size</name></name> <operator pos:start="103:40" pos:end="103:40">-</operator> <literal type="number" pos:start="103:42" pos:end="103:42">1</literal><operator pos:start="103:43" pos:end="103:43">)</operator><operator pos:start="103:44" pos:end="103:44">)</operator></expr>;</expr_stmt>

	<if_stmt pos:start="105:9" pos:end="111:23"><if pos:start="105:9" pos:end="107:39">if <condition pos:start="105:12" pos:end="105:45">(<expr pos:start="105:13" pos:end="105:44"><operator pos:start="105:13" pos:end="105:13">(</operator><name pos:start="105:14" pos:end="105:15">rw</name> <operator pos:start="105:17" pos:end="105:17">&amp;</operator> <name pos:start="105:19" pos:end="105:28">PAGE_WRITE</name><operator pos:start="105:29" pos:end="105:29">)</operator> <operator pos:start="105:31" pos:end="105:31">&amp;</operator> <operator pos:start="105:33" pos:end="105:33">!</operator><name pos:start="105:34" pos:end="105:44"><name pos:start="105:34" pos:end="105:41">matching</name><operator pos:start="105:42" pos:end="105:43">-&gt;</operator><name pos:start="105:44" pos:end="105:44">d</name></name></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:39"><block_content pos:start="107:13" pos:end="107:39">

	    <expr_stmt pos:start="107:13" pos:end="107:39"><expr pos:start="107:13" pos:end="107:38"><name pos:start="107:13" pos:end="107:13">n</name> <operator pos:start="107:15" pos:end="107:15">=</operator> <name pos:start="107:17" pos:end="107:38">MMU_DTLB_INITIAL_WRITE</name></expr>;</expr_stmt></block_content></block></if>

	<else pos:start="109:9" pos:end="111:23">else<block type="pseudo" pos:start="111:13" pos:end="111:23"><block_content pos:start="111:13" pos:end="111:23">

	    <expr_stmt pos:start="111:13" pos:end="111:23"><expr pos:start="111:13" pos:end="111:22"><name pos:start="111:13" pos:end="111:13">n</name> <operator pos:start="111:15" pos:end="111:15">=</operator> <name pos:start="111:17" pos:end="111:22">MMU_OK</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="115:5" pos:end="115:13">return <expr pos:start="115:12" pos:end="115:12"><name pos:start="115:12" pos:end="115:12">n</name></expr>;</return>

</block_content>}</block></function>
</unit>
