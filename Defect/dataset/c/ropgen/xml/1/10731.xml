<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10731.c" pos:tabs="8"><function pos:start="1:1" pos:end="253:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">encode_init</name><parameter_list pos:start="1:23" pos:end="1:45">(<parameter pos:start="1:24" pos:end="1:44"><decl pos:start="1:24" pos:end="1:44"><type pos:start="1:24" pos:end="1:39"><name pos:start="1:24" pos:end="1:37">AVCodecContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:44">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="253:1">{<block_content pos:start="5:5" pos:end="251:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">HYuvContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:37">= <expr pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:26">avctx</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:19">width</name></decl>, <decl pos:start="7:22" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:27">height</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:20"><expr pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:12">avctx</name></name><operator pos:start="11:13" pos:end="11:13">=</operator> <name pos:start="11:15" pos:end="11:19">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:12">flags</name></name><operator pos:start="13:13" pos:end="13:13">=</operator> <name pos:start="13:15" pos:end="13:26"><name pos:start="13:15" pos:end="13:19">avctx</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:26">flags</name></name></expr>;</expr_stmt>

        

    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><call pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:16">dsputil_init</name><argument_list pos:start="17:17" pos:end="17:32">(<argument pos:start="17:18" pos:end="17:24"><expr pos:start="17:18" pos:end="17:24"><operator pos:start="17:18" pos:end="17:18">&amp;</operator><name pos:start="17:19" pos:end="17:24"><name pos:start="17:19" pos:end="17:19">s</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:24">dsp</name></name></expr></argument>, <argument pos:start="17:27" pos:end="17:31"><expr pos:start="17:27" pos:end="17:31"><name pos:start="17:27" pos:end="17:31">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:9">width</name><operator pos:start="21:10" pos:end="21:10">=</operator> <name pos:start="21:12" pos:end="21:19"><name pos:start="21:12" pos:end="21:12">s</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:19">width</name></name><operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:33"><name pos:start="21:22" pos:end="21:26">avctx</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:33">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:37"><expr pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:10">height</name><operator pos:start="23:11" pos:end="23:11">=</operator> <name pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:21">height</name></name><operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:36"><name pos:start="23:24" pos:end="23:28">avctx</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:36">height</name></name></expr>;</expr_stmt>

    

    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><call pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:10">assert</name><argument_list pos:start="27:11" pos:end="27:27">(<argument pos:start="27:12" pos:end="27:26"><expr pos:start="27:12" pos:end="27:26"><name pos:start="27:12" pos:end="27:16">width</name> <operator pos:start="27:18" pos:end="27:19">&amp;&amp;</operator> <name pos:start="27:21" pos:end="27:26">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="31:5" pos:end="31:42"><expr pos:start="31:5" pos:end="31:41"><name pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:9">avctx</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:20">extradata</name></name><operator pos:start="31:21" pos:end="31:21">=</operator> <call pos:start="31:23" pos:end="31:41"><name pos:start="31:23" pos:end="31:32">av_mallocz</name><argument_list pos:start="31:33" pos:end="31:41">(<argument pos:start="31:34" pos:end="31:40"><expr pos:start="31:34" pos:end="31:40"><literal type="number" pos:start="31:34" pos:end="31:37">1024</literal><operator pos:start="31:38" pos:end="31:38">*</operator><literal type="number" pos:start="31:39" pos:end="31:40">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:9">avctx</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:20">stats_out</name></name><operator pos:start="33:21" pos:end="33:21">=</operator> <call pos:start="33:23" pos:end="33:41"><name pos:start="33:23" pos:end="33:32">av_mallocz</name><argument_list pos:start="33:33" pos:end="33:41">(<argument pos:start="33:34" pos:end="33:40"><expr pos:start="33:34" pos:end="33:40"><literal type="number" pos:start="33:34" pos:end="33:37">1024</literal><operator pos:start="33:38" pos:end="33:38">*</operator><literal type="number" pos:start="33:39" pos:end="33:40">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:17"><expr pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:14">version</name></name><operator pos:start="35:15" pos:end="35:15">=</operator><literal type="number" pos:start="35:16" pos:end="35:16">2</literal></expr>;</expr_stmt>

    

    <expr_stmt pos:start="39:5" pos:end="39:36"><expr pos:start="39:5" pos:end="39:35"><name pos:start="39:5" pos:end="39:22"><name pos:start="39:5" pos:end="39:9">avctx</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:22">coded_frame</name></name><operator pos:start="39:23" pos:end="39:23">=</operator> <operator pos:start="39:25" pos:end="39:25">&amp;</operator><name pos:start="39:26" pos:end="39:35"><name pos:start="39:26" pos:end="39:26">s</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:35">picture</name></name></expr>;</expr_stmt>

    

    <switch pos:start="43:5" pos:end="63:5">switch<condition pos:start="43:11" pos:end="43:26">(<expr pos:start="43:12" pos:end="43:25"><name pos:start="43:12" pos:end="43:25"><name pos:start="43:12" pos:end="43:16">avctx</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:25">pix_fmt</name></name></expr>)</condition><block pos:start="43:27" pos:end="63:5">{<block_content pos:start="45:5" pos:end="61:18">

    <case pos:start="45:5" pos:end="45:25">case <expr pos:start="45:10" pos:end="45:24"><name pos:start="45:10" pos:end="45:24">PIX_FMT_YUV420P</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:29"><expr pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:24"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:24">bitstream_bpp</name></name><operator pos:start="47:25" pos:end="47:25">=</operator> <literal type="number" pos:start="47:27" pos:end="47:28">12</literal></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:25">case <expr pos:start="51:10" pos:end="51:24"><name pos:start="51:10" pos:end="51:24">PIX_FMT_YUV422P</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:29"><expr pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:24">bitstream_bpp</name></name><operator pos:start="53:25" pos:end="53:25">=</operator> <literal type="number" pos:start="53:27" pos:end="53:28">16</literal></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <default pos:start="57:5" pos:end="57:12">default:</default>

        <expr_stmt pos:start="59:9" pos:end="59:62"><expr pos:start="59:9" pos:end="59:61"><call pos:start="59:9" pos:end="59:61"><name pos:start="59:9" pos:end="59:14">av_log</name><argument_list pos:start="59:15" pos:end="59:61">(<argument pos:start="59:16" pos:end="59:20"><expr pos:start="59:16" pos:end="59:20"><name pos:start="59:16" pos:end="59:20">avctx</name></expr></argument>, <argument pos:start="59:23" pos:end="59:34"><expr pos:start="59:23" pos:end="59:34"><name pos:start="59:23" pos:end="59:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:37" pos:end="59:60"><expr pos:start="59:37" pos:end="59:60"><literal type="string" pos:start="59:37" pos:end="59:60">"format not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:18">return <expr pos:start="61:16" pos:end="61:17"><operator pos:start="61:16" pos:end="61:16">-</operator><literal type="number" pos:start="61:17" pos:end="61:17">1</literal></expr>;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="65:5" pos:end="65:45"><expr pos:start="65:5" pos:end="65:44"><name pos:start="65:5" pos:end="65:26"><name pos:start="65:5" pos:end="65:9">avctx</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:26">bits_per_sample</name></name><operator pos:start="65:27" pos:end="65:27">=</operator> <name pos:start="65:29" pos:end="65:44"><name pos:start="65:29" pos:end="65:29">s</name><operator pos:start="65:30" pos:end="65:31">-&gt;</operator><name pos:start="65:32" pos:end="65:44">bitstream_bpp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:43"><expr pos:start="67:5" pos:end="67:42"><name pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:18">decorrelate</name></name><operator pos:start="67:19" pos:end="67:19">=</operator> <name pos:start="67:21" pos:end="67:36"><name pos:start="67:21" pos:end="67:21">s</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:36">bitstream_bpp</name></name> <operator pos:start="67:38" pos:end="67:39">&gt;=</operator> <literal type="number" pos:start="67:41" pos:end="67:42">24</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:43"><expr pos:start="69:5" pos:end="69:42"><name pos:start="69:5" pos:end="69:16"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:16">predictor</name></name><operator pos:start="69:17" pos:end="69:17">=</operator> <name pos:start="69:19" pos:end="69:42"><name pos:start="69:19" pos:end="69:23">avctx</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:42">prediction_method</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:65"><expr pos:start="71:5" pos:end="71:64"><name pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:17">interlaced</name></name><operator pos:start="71:18" pos:end="71:18">=</operator> <ternary pos:start="71:20" pos:end="71:64"><condition pos:start="71:20" pos:end="71:58"><expr pos:start="71:20" pos:end="71:56"><name pos:start="71:20" pos:end="71:31"><name pos:start="71:20" pos:end="71:24">avctx</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:31">flags</name></name><operator pos:start="71:32" pos:end="71:32">&amp;</operator><name pos:start="71:33" pos:end="71:56">CODEC_FLAG_INTERLACED_ME</name></expr> ?</condition><then pos:start="71:60" pos:end="71:60"> <expr pos:start="71:60" pos:end="71:60"><literal type="number" pos:start="71:60" pos:end="71:60">1</literal></expr> </then><else pos:start="71:62" pos:end="71:64">: <expr pos:start="71:64" pos:end="71:64"><literal type="number" pos:start="71:64" pos:end="71:64">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="85:24"><if pos:start="73:5" pos:end="85:5">if<condition pos:start="73:7" pos:end="73:31">(<expr pos:start="73:8" pos:end="73:30"><name pos:start="73:8" pos:end="73:27"><name pos:start="73:8" pos:end="73:12">avctx</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:27">context_model</name></name><operator pos:start="73:28" pos:end="73:29">==</operator><literal type="number" pos:start="73:30" pos:end="73:30">1</literal></expr>)</condition><block pos:start="73:32" pos:end="85:5">{<block_content pos:start="75:9" pos:end="83:9">

        <expr_stmt pos:start="75:9" pos:end="75:41"><expr pos:start="75:9" pos:end="75:40"><name pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:18">context</name></name><operator pos:start="75:19" pos:end="75:19">=</operator> <name pos:start="75:21" pos:end="75:40"><name pos:start="75:21" pos:end="75:25">avctx</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:40">context_model</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if<condition pos:start="77:11" pos:end="77:58">(<expr pos:start="77:12" pos:end="77:57"><name pos:start="77:12" pos:end="77:19"><name pos:start="77:12" pos:end="77:12">s</name><operator pos:start="77:13" pos:end="77:14">-&gt;</operator><name pos:start="77:15" pos:end="77:19">flags</name></name> <operator pos:start="77:21" pos:end="77:21">&amp;</operator> <operator pos:start="77:23" pos:end="77:23">(</operator><name pos:start="77:24" pos:end="77:39">CODEC_FLAG_PASS1</name><operator pos:start="77:40" pos:end="77:40">|</operator><name pos:start="77:41" pos:end="77:56">CODEC_FLAG_PASS2</name><operator pos:start="77:57" pos:end="77:57">)</operator></expr>)</condition><block pos:start="77:59" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:22">

            <expr_stmt pos:start="79:13" pos:end="79:102"><expr pos:start="79:13" pos:end="79:101"><call pos:start="79:13" pos:end="79:101"><name pos:start="79:13" pos:end="79:18">av_log</name><argument_list pos:start="79:19" pos:end="79:101">(<argument pos:start="79:20" pos:end="79:24"><expr pos:start="79:20" pos:end="79:24"><name pos:start="79:20" pos:end="79:24">avctx</name></expr></argument>, <argument pos:start="79:27" pos:end="79:38"><expr pos:start="79:27" pos:end="79:38"><name pos:start="79:27" pos:end="79:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="79:41" pos:end="79:100"><expr pos:start="79:41" pos:end="79:100"><literal type="string" pos:start="79:41" pos:end="79:100">"context=1 is not compatible with 2 pass huffyuv encoding\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="81:13" pos:end="81:22">return <expr pos:start="81:20" pos:end="81:21"><operator pos:start="81:20" pos:end="81:20">-</operator><literal type="number" pos:start="81:21" pos:end="81:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="85:6" pos:end="85:24">else<block type="pseudo" pos:start="85:11" pos:end="85:24"><block_content pos:start="85:11" pos:end="85:24"> <expr_stmt pos:start="85:11" pos:end="85:24"><expr pos:start="85:11" pos:end="85:23"><name pos:start="85:11" pos:end="85:20"><name pos:start="85:11" pos:end="85:11">s</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:20">context</name></name><operator pos:start="85:21" pos:end="85:21">=</operator> <literal type="number" pos:start="85:23" pos:end="85:23">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    

    <if_stmt pos:start="89:5" pos:end="117:5"><if pos:start="89:5" pos:end="111:5">if<condition pos:start="89:7" pos:end="89:42">(<expr pos:start="89:8" pos:end="89:41"><name pos:start="89:8" pos:end="89:23"><name pos:start="89:8" pos:end="89:12">avctx</name><operator pos:start="89:13" pos:end="89:14">-&gt;</operator><name pos:start="89:15" pos:end="89:19">codec</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:23">id</name></name><operator pos:start="89:24" pos:end="89:25">==</operator><name pos:start="89:26" pos:end="89:41">CODEC_ID_HUFFYUV</name></expr>)</condition><block pos:start="89:43" pos:end="111:5">{<block_content pos:start="91:9" pos:end="109:90">

        <if_stmt pos:start="91:9" pos:end="97:9"><if pos:start="91:9" pos:end="97:9">if<condition pos:start="91:11" pos:end="91:43">(<expr pos:start="91:12" pos:end="91:42"><name pos:start="91:12" pos:end="91:25"><name pos:start="91:12" pos:end="91:16">avctx</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:25">pix_fmt</name></name><operator pos:start="91:26" pos:end="91:27">==</operator><name pos:start="91:28" pos:end="91:42">PIX_FMT_YUV420P</name></expr>)</condition><block pos:start="91:44" pos:end="97:9">{<block_content pos:start="93:13" pos:end="95:22">

            <expr_stmt pos:start="93:13" pos:end="93:120"><expr pos:start="93:13" pos:end="93:119"><call pos:start="93:13" pos:end="93:119"><name pos:start="93:13" pos:end="93:18">av_log</name><argument_list pos:start="93:19" pos:end="93:119">(<argument pos:start="93:20" pos:end="93:24"><expr pos:start="93:20" pos:end="93:24"><name pos:start="93:20" pos:end="93:24">avctx</name></expr></argument>, <argument pos:start="93:27" pos:end="93:38"><expr pos:start="93:27" pos:end="93:38"><name pos:start="93:27" pos:end="93:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:41" pos:end="93:118"><expr pos:start="93:41" pos:end="93:118"><literal type="string" pos:start="93:41" pos:end="93:118">"Error: YV12 is not supported by huffyuv; use vcodec=ffvhuff or format=422p\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="95:13" pos:end="95:22">return <expr pos:start="95:20" pos:end="95:21"><operator pos:start="95:20" pos:end="95:20">-</operator><literal type="number" pos:start="95:21" pos:end="95:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if<condition pos:start="99:11" pos:end="99:32">(<expr pos:start="99:12" pos:end="99:31"><name pos:start="99:12" pos:end="99:31"><name pos:start="99:12" pos:end="99:16">avctx</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:31">context_model</name></name></expr>)</condition><block pos:start="99:33" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:22">

            <expr_stmt pos:start="101:13" pos:end="101:126"><expr pos:start="101:13" pos:end="101:125"><call pos:start="101:13" pos:end="101:125"><name pos:start="101:13" pos:end="101:18">av_log</name><argument_list pos:start="101:19" pos:end="101:125">(<argument pos:start="101:20" pos:end="101:24"><expr pos:start="101:20" pos:end="101:24"><name pos:start="101:20" pos:end="101:24">avctx</name></expr></argument>, <argument pos:start="101:27" pos:end="101:38"><expr pos:start="101:27" pos:end="101:38"><name pos:start="101:27" pos:end="101:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:41" pos:end="101:124"><expr pos:start="101:41" pos:end="101:124"><literal type="string" pos:start="101:41" pos:end="101:124">"Error: per-frame huffman tables are not supported by huffyuv; use vcodec=ffvhuff\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="103:13" pos:end="103:22">return <expr pos:start="103:20" pos:end="103:21"><operator pos:start="103:20" pos:end="103:20">-</operator><literal type="number" pos:start="103:21" pos:end="103:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="107:9" pos:end="109:90"><if pos:start="107:9" pos:end="109:90">if<condition pos:start="107:11" pos:end="107:45">(<expr pos:start="107:12" pos:end="107:44"><name pos:start="107:12" pos:end="107:24"><name pos:start="107:12" pos:end="107:12">s</name><operator pos:start="107:13" pos:end="107:14">-&gt;</operator><name pos:start="107:15" pos:end="107:24">interlaced</name></name> <operator pos:start="107:26" pos:end="107:27">!=</operator> <operator pos:start="107:29" pos:end="107:29">(</operator> <name pos:start="107:31" pos:end="107:36">height</name> <operator pos:start="107:38" pos:end="107:38">&gt;</operator> <literal type="number" pos:start="107:40" pos:end="107:42">288</literal> <operator pos:start="107:44" pos:end="107:44">)</operator></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:90"><block_content pos:start="109:13" pos:end="109:90">

            <expr_stmt pos:start="109:13" pos:end="109:90"><expr pos:start="109:13" pos:end="109:89"><call pos:start="109:13" pos:end="109:89"><name pos:start="109:13" pos:end="109:18">av_log</name><argument_list pos:start="109:19" pos:end="109:89">(<argument pos:start="109:20" pos:end="109:24"><expr pos:start="109:20" pos:end="109:24"><name pos:start="109:20" pos:end="109:24">avctx</name></expr></argument>, <argument pos:start="109:27" pos:end="109:37"><expr pos:start="109:27" pos:end="109:37"><name pos:start="109:27" pos:end="109:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="109:40" pos:end="109:88"><expr pos:start="109:40" pos:end="109:88"><literal type="string" pos:start="109:40" pos:end="109:88">"using huffyuv 2.2.0 or newer interlacing flag\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="111:6" pos:end="117:5">else if<condition pos:start="111:13" pos:end="111:45">(<expr pos:start="111:14" pos:end="111:44"><name pos:start="111:14" pos:end="111:41"><name pos:start="111:14" pos:end="111:18">avctx</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:41">strict_std_compliance</name></name><operator pos:start="111:42" pos:end="111:43">&gt;=</operator><literal type="number" pos:start="111:44" pos:end="111:44">0</literal></expr>)</condition><block pos:start="111:46" pos:end="117:5">{<block_content pos:start="113:9" pos:end="115:18">

        <expr_stmt pos:start="113:9" pos:end="113:175"><expr pos:start="113:9" pos:end="113:174"><call pos:start="113:9" pos:end="113:174"><name pos:start="113:9" pos:end="113:14">av_log</name><argument_list pos:start="113:15" pos:end="113:174">(<argument pos:start="113:16" pos:end="113:20"><expr pos:start="113:16" pos:end="113:20"><name pos:start="113:16" pos:end="113:20">avctx</name></expr></argument>, <argument pos:start="113:23" pos:end="113:34"><expr pos:start="113:23" pos:end="113:34"><name pos:start="113:23" pos:end="113:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="113:37" pos:end="113:173"><expr pos:start="113:37" pos:end="113:173"><literal type="string" pos:start="113:37" pos:end="113:173">"This codec is under development; files encoded with it may not be decodeable with future versions!!! Set vstrict=-1 to use it anyway.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="115:9" pos:end="115:18">return <expr pos:start="115:16" pos:end="115:17"><operator pos:start="115:16" pos:end="115:16">-</operator><literal type="number" pos:start="115:17" pos:end="115:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    

    <expr_stmt pos:start="121:5" pos:end="121:50"><expr pos:start="121:5" pos:end="121:49"><operator pos:start="121:5" pos:end="121:5">(</operator><operator pos:start="121:6" pos:end="121:6">(</operator><name pos:start="121:7" pos:end="121:13">uint8_t</name><operator pos:start="121:14" pos:end="121:14">*</operator><operator pos:start="121:15" pos:end="121:15">)</operator><name pos:start="121:16" pos:end="121:31"><name pos:start="121:16" pos:end="121:20">avctx</name><operator pos:start="121:21" pos:end="121:22">-&gt;</operator><name pos:start="121:23" pos:end="121:31">extradata</name></name><operator pos:start="121:32" pos:end="121:32">)</operator><index pos:start="121:33" pos:end="121:35">[<expr pos:start="121:34" pos:end="121:34"><literal type="number" pos:start="121:34" pos:end="121:34">0</literal></expr>]</index><operator pos:start="121:36" pos:end="121:36">=</operator> <name pos:start="121:38" pos:end="121:49"><name pos:start="121:38" pos:end="121:38">s</name><operator pos:start="121:39" pos:end="121:40">-&gt;</operator><name pos:start="121:41" pos:end="121:49">predictor</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:54"><expr pos:start="123:5" pos:end="123:53"><operator pos:start="123:5" pos:end="123:5">(</operator><operator pos:start="123:6" pos:end="123:6">(</operator><name pos:start="123:7" pos:end="123:13">uint8_t</name><operator pos:start="123:14" pos:end="123:14">*</operator><operator pos:start="123:15" pos:end="123:15">)</operator><name pos:start="123:16" pos:end="123:31"><name pos:start="123:16" pos:end="123:20">avctx</name><operator pos:start="123:21" pos:end="123:22">-&gt;</operator><name pos:start="123:23" pos:end="123:31">extradata</name></name><operator pos:start="123:32" pos:end="123:32">)</operator><index pos:start="123:33" pos:end="123:35">[<expr pos:start="123:34" pos:end="123:34"><literal type="number" pos:start="123:34" pos:end="123:34">1</literal></expr>]</index><operator pos:start="123:36" pos:end="123:36">=</operator> <name pos:start="123:38" pos:end="123:53"><name pos:start="123:38" pos:end="123:38">s</name><operator pos:start="123:39" pos:end="123:40">-&gt;</operator><name pos:start="123:41" pos:end="123:53">bitstream_bpp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:65"><expr pos:start="125:5" pos:end="125:64"><operator pos:start="125:5" pos:end="125:5">(</operator><operator pos:start="125:6" pos:end="125:6">(</operator><name pos:start="125:7" pos:end="125:13">uint8_t</name><operator pos:start="125:14" pos:end="125:14">*</operator><operator pos:start="125:15" pos:end="125:15">)</operator><name pos:start="125:16" pos:end="125:31"><name pos:start="125:16" pos:end="125:20">avctx</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:31">extradata</name></name><operator pos:start="125:32" pos:end="125:32">)</operator><index pos:start="125:33" pos:end="125:35">[<expr pos:start="125:34" pos:end="125:34"><literal type="number" pos:start="125:34" pos:end="125:34">2</literal></expr>]</index><operator pos:start="125:36" pos:end="125:36">=</operator> <ternary pos:start="125:38" pos:end="125:64"><condition pos:start="125:38" pos:end="125:52"><expr pos:start="125:38" pos:end="125:50"><name pos:start="125:38" pos:end="125:50"><name pos:start="125:38" pos:end="125:38">s</name><operator pos:start="125:39" pos:end="125:40">-&gt;</operator><name pos:start="125:41" pos:end="125:50">interlaced</name></name></expr> ?</condition><then pos:start="125:54" pos:end="125:57"> <expr pos:start="125:54" pos:end="125:57"><literal type="number" pos:start="125:54" pos:end="125:57">0x10</literal></expr> </then><else pos:start="125:59" pos:end="125:64">: <expr pos:start="125:61" pos:end="125:64"><literal type="number" pos:start="125:61" pos:end="125:64">0x20</literal></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="127:5" pos:end="129:47"><if pos:start="127:5" pos:end="129:47">if<condition pos:start="127:7" pos:end="127:18">(<expr pos:start="127:8" pos:end="127:17"><name pos:start="127:8" pos:end="127:17"><name pos:start="127:8" pos:end="127:8">s</name><operator pos:start="127:9" pos:end="127:10">-&gt;</operator><name pos:start="127:11" pos:end="127:17">context</name></name></expr>)</condition><block type="pseudo" pos:start="129:9" pos:end="129:47"><block_content pos:start="129:9" pos:end="129:47">

        <expr_stmt pos:start="129:9" pos:end="129:47"><expr pos:start="129:9" pos:end="129:46"><operator pos:start="129:9" pos:end="129:9">(</operator><operator pos:start="129:10" pos:end="129:10">(</operator><name pos:start="129:11" pos:end="129:17">uint8_t</name><operator pos:start="129:18" pos:end="129:18">*</operator><operator pos:start="129:19" pos:end="129:19">)</operator><name pos:start="129:20" pos:end="129:35"><name pos:start="129:20" pos:end="129:24">avctx</name><operator pos:start="129:25" pos:end="129:26">-&gt;</operator><name pos:start="129:27" pos:end="129:35">extradata</name></name><operator pos:start="129:36" pos:end="129:36">)</operator><index pos:start="129:37" pos:end="129:39">[<expr pos:start="129:38" pos:end="129:38"><literal type="number" pos:start="129:38" pos:end="129:38">2</literal></expr>]</index><operator pos:start="129:40" pos:end="129:41">|=</operator> <literal type="number" pos:start="129:43" pos:end="129:46">0x40</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:39"><expr pos:start="131:5" pos:end="131:38"><operator pos:start="131:5" pos:end="131:5">(</operator><operator pos:start="131:6" pos:end="131:6">(</operator><name pos:start="131:7" pos:end="131:13">uint8_t</name><operator pos:start="131:14" pos:end="131:14">*</operator><operator pos:start="131:15" pos:end="131:15">)</operator><name pos:start="131:16" pos:end="131:31"><name pos:start="131:16" pos:end="131:20">avctx</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:31">extradata</name></name><operator pos:start="131:32" pos:end="131:32">)</operator><index pos:start="131:33" pos:end="131:35">[<expr pos:start="131:34" pos:end="131:34"><literal type="number" pos:start="131:34" pos:end="131:34">3</literal></expr>]</index><operator pos:start="131:36" pos:end="131:36">=</operator> <literal type="number" pos:start="131:38" pos:end="131:38">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:32"><expr pos:start="133:5" pos:end="133:31"><name pos:start="133:5" pos:end="133:28"><name pos:start="133:5" pos:end="133:5">s</name><operator pos:start="133:6" pos:end="133:7">-&gt;</operator><name pos:start="133:8" pos:end="133:12">avctx</name><operator pos:start="133:13" pos:end="133:14">-&gt;</operator><name pos:start="133:15" pos:end="133:28">extradata_size</name></name><operator pos:start="133:29" pos:end="133:29">=</operator> <literal type="number" pos:start="133:31" pos:end="133:31">4</literal></expr>;</expr_stmt>

    

    <if_stmt pos:start="137:5" pos:end="189:5"><if pos:start="137:5" pos:end="175:5">if<condition pos:start="137:7" pos:end="137:23">(<expr pos:start="137:8" pos:end="137:22"><name pos:start="137:8" pos:end="137:22"><name pos:start="137:8" pos:end="137:12">avctx</name><operator pos:start="137:13" pos:end="137:14">-&gt;</operator><name pos:start="137:15" pos:end="137:22">stats_in</name></name></expr>)</condition><block pos:start="137:24" pos:end="175:5">{<block_content pos:start="139:9" pos:end="173:9">

        <decl_stmt pos:start="139:9" pos:end="139:33"><decl pos:start="139:9" pos:end="139:32"><type pos:start="139:9" pos:end="139:14"><name pos:start="139:9" pos:end="139:12">char</name> <modifier pos:start="139:14" pos:end="139:14">*</modifier></type><name pos:start="139:15" pos:end="139:15">p</name><init pos:start="139:16" pos:end="139:32">= <expr pos:start="139:18" pos:end="139:32"><name pos:start="139:18" pos:end="139:32"><name pos:start="139:18" pos:end="139:22">avctx</name><operator pos:start="139:23" pos:end="139:24">-&gt;</operator><name pos:start="139:25" pos:end="139:32">stats_in</name></name></expr></init></decl>;</decl_stmt>

    

        <for pos:start="143:9" pos:end="147:34">for<control pos:start="143:12" pos:end="143:26">(<init pos:start="143:13" pos:end="143:16"><expr pos:start="143:13" pos:end="143:15"><name pos:start="143:13" pos:end="143:13">i</name><operator pos:start="143:14" pos:end="143:14">=</operator><literal type="number" pos:start="143:15" pos:end="143:15">0</literal></expr>;</init> <condition pos:start="143:18" pos:end="143:21"><expr pos:start="143:18" pos:end="143:20"><name pos:start="143:18" pos:end="143:18">i</name><operator pos:start="143:19" pos:end="143:19">&lt;</operator><literal type="number" pos:start="143:20" pos:end="143:20">3</literal></expr>;</condition> <incr pos:start="143:23" pos:end="143:25"><expr pos:start="143:23" pos:end="143:25"><name pos:start="143:23" pos:end="143:23">i</name><operator pos:start="143:24" pos:end="143:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="145:13" pos:end="147:34"><block_content pos:start="145:13" pos:end="147:34">

            <for pos:start="145:13" pos:end="147:34">for<control pos:start="145:16" pos:end="145:32">(<init pos:start="145:17" pos:end="145:20"><expr pos:start="145:17" pos:end="145:19"><name pos:start="145:17" pos:end="145:17">j</name><operator pos:start="145:18" pos:end="145:18">=</operator><literal type="number" pos:start="145:19" pos:end="145:19">0</literal></expr>;</init> <condition pos:start="145:22" pos:end="145:27"><expr pos:start="145:22" pos:end="145:26"><name pos:start="145:22" pos:end="145:22">j</name><operator pos:start="145:23" pos:end="145:23">&lt;</operator><literal type="number" pos:start="145:24" pos:end="145:26">256</literal></expr>;</condition> <incr pos:start="145:29" pos:end="145:31"><expr pos:start="145:29" pos:end="145:31"><name pos:start="145:29" pos:end="145:29">j</name><operator pos:start="145:30" pos:end="145:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="147:17" pos:end="147:34"><block_content pos:start="147:17" pos:end="147:34">

                <expr_stmt pos:start="147:17" pos:end="147:34"><expr pos:start="147:17" pos:end="147:33"><name pos:start="147:17" pos:end="147:30"><name pos:start="147:17" pos:end="147:17">s</name><operator pos:start="147:18" pos:end="147:19">-&gt;</operator><name pos:start="147:20" pos:end="147:24">stats</name><index pos:start="147:25" pos:end="147:27">[<expr pos:start="147:26" pos:end="147:26"><name pos:start="147:26" pos:end="147:26">i</name></expr>]</index><index pos:start="147:28" pos:end="147:30">[<expr pos:start="147:29" pos:end="147:29"><name pos:start="147:29" pos:end="147:29">j</name></expr>]</index></name><operator pos:start="147:31" pos:end="147:31">=</operator> <literal type="number" pos:start="147:33" pos:end="147:33">1</literal></expr>;</expr_stmt></block_content></block></for></block_content></block></for>



        <for pos:start="151:9" pos:end="173:9">for<control pos:start="151:12" pos:end="151:15">(<init pos:start="151:13" pos:end="151:13">;</init><condition pos:start="151:14" pos:end="151:14">;</condition><incr/>)</control><block pos:start="151:16" pos:end="173:9">{<block_content pos:start="153:13" pos:end="171:52">

            <for pos:start="153:13" pos:end="169:13">for<control pos:start="153:16" pos:end="153:30">(<init pos:start="153:17" pos:end="153:20"><expr pos:start="153:17" pos:end="153:19"><name pos:start="153:17" pos:end="153:17">i</name><operator pos:start="153:18" pos:end="153:18">=</operator><literal type="number" pos:start="153:19" pos:end="153:19">0</literal></expr>;</init> <condition pos:start="153:22" pos:end="153:25"><expr pos:start="153:22" pos:end="153:24"><name pos:start="153:22" pos:end="153:22">i</name><operator pos:start="153:23" pos:end="153:23">&lt;</operator><literal type="number" pos:start="153:24" pos:end="153:24">3</literal></expr>;</condition> <incr pos:start="153:27" pos:end="153:29"><expr pos:start="153:27" pos:end="153:29"><name pos:start="153:27" pos:end="153:27">i</name><operator pos:start="153:28" pos:end="153:29">++</operator></expr></incr>)</control><block pos:start="153:31" pos:end="169:13">{<block_content pos:start="155:17" pos:end="167:17">

                <decl_stmt pos:start="155:17" pos:end="155:27"><decl pos:start="155:17" pos:end="155:26"><type pos:start="155:17" pos:end="155:22"><name pos:start="155:17" pos:end="155:20">char</name> <modifier pos:start="155:22" pos:end="155:22">*</modifier></type><name pos:start="155:23" pos:end="155:26">next</name></decl>;</decl_stmt>



                <for pos:start="159:17" pos:end="167:17">for<control pos:start="159:20" pos:end="159:36">(<init pos:start="159:21" pos:end="159:24"><expr pos:start="159:21" pos:end="159:23"><name pos:start="159:21" pos:end="159:21">j</name><operator pos:start="159:22" pos:end="159:22">=</operator><literal type="number" pos:start="159:23" pos:end="159:23">0</literal></expr>;</init> <condition pos:start="159:26" pos:end="159:31"><expr pos:start="159:26" pos:end="159:30"><name pos:start="159:26" pos:end="159:26">j</name><operator pos:start="159:27" pos:end="159:27">&lt;</operator><literal type="number" pos:start="159:28" pos:end="159:30">256</literal></expr>;</condition> <incr pos:start="159:33" pos:end="159:35"><expr pos:start="159:33" pos:end="159:35"><name pos:start="159:33" pos:end="159:33">j</name><operator pos:start="159:34" pos:end="159:35">++</operator></expr></incr>)</control><block pos:start="159:37" pos:end="167:17">{<block_content pos:start="161:21" pos:end="165:27">

                    <expr_stmt pos:start="161:21" pos:end="161:57"><expr pos:start="161:21" pos:end="161:56"><name pos:start="161:21" pos:end="161:34"><name pos:start="161:21" pos:end="161:21">s</name><operator pos:start="161:22" pos:end="161:23">-&gt;</operator><name pos:start="161:24" pos:end="161:28">stats</name><index pos:start="161:29" pos:end="161:31">[<expr pos:start="161:30" pos:end="161:30"><name pos:start="161:30" pos:end="161:30">i</name></expr>]</index><index pos:start="161:32" pos:end="161:34">[<expr pos:start="161:33" pos:end="161:33"><name pos:start="161:33" pos:end="161:33">j</name></expr>]</index></name><operator pos:start="161:35" pos:end="161:36">+=</operator> <call pos:start="161:38" pos:end="161:56"><name pos:start="161:38" pos:end="161:43">strtol</name><argument_list pos:start="161:44" pos:end="161:56">(<argument pos:start="161:45" pos:end="161:45"><expr pos:start="161:45" pos:end="161:45"><name pos:start="161:45" pos:end="161:45">p</name></expr></argument>, <argument pos:start="161:48" pos:end="161:52"><expr pos:start="161:48" pos:end="161:52"><operator pos:start="161:48" pos:end="161:48">&amp;</operator><name pos:start="161:49" pos:end="161:52">next</name></expr></argument>, <argument pos:start="161:55" pos:end="161:55"><expr pos:start="161:55" pos:end="161:55"><literal type="number" pos:start="161:55" pos:end="161:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="163:21" pos:end="163:42"><if pos:start="163:21" pos:end="163:42">if<condition pos:start="163:23" pos:end="163:31">(<expr pos:start="163:24" pos:end="163:30"><name pos:start="163:24" pos:end="163:27">next</name><operator pos:start="163:28" pos:end="163:29">==</operator><name pos:start="163:30" pos:end="163:30">p</name></expr>)</condition><block type="pseudo" pos:start="163:33" pos:end="163:42"><block_content pos:start="163:33" pos:end="163:42"> <return pos:start="163:33" pos:end="163:42">return <expr pos:start="163:40" pos:end="163:41"><operator pos:start="163:40" pos:end="163:40">-</operator><literal type="number" pos:start="163:41" pos:end="163:41">1</literal></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="165:21" pos:end="165:27"><expr pos:start="165:21" pos:end="165:26"><name pos:start="165:21" pos:end="165:21">p</name><operator pos:start="165:22" pos:end="165:22">=</operator><name pos:start="165:23" pos:end="165:26">next</name></expr>;</expr_stmt>

                </block_content>}</block></for>        

            </block_content>}</block></for>

            <if_stmt pos:start="171:13" pos:end="171:52"><if pos:start="171:13" pos:end="171:52">if<condition pos:start="171:15" pos:end="171:45">(<expr pos:start="171:16" pos:end="171:44"><name pos:start="171:16" pos:end="171:19"><name pos:start="171:16" pos:end="171:16">p</name><index pos:start="171:17" pos:end="171:19">[<expr pos:start="171:18" pos:end="171:18"><literal type="number" pos:start="171:18" pos:end="171:18">0</literal></expr>]</index></name><operator pos:start="171:20" pos:end="171:21">==</operator><literal type="number" pos:start="171:22" pos:end="171:22">0</literal> <operator pos:start="171:24" pos:end="171:25">||</operator> <name pos:start="171:27" pos:end="171:30"><name pos:start="171:27" pos:end="171:27">p</name><index pos:start="171:28" pos:end="171:30">[<expr pos:start="171:29" pos:end="171:29"><literal type="number" pos:start="171:29" pos:end="171:29">1</literal></expr>]</index></name><operator pos:start="171:31" pos:end="171:32">==</operator><literal type="number" pos:start="171:33" pos:end="171:33">0</literal> <operator pos:start="171:35" pos:end="171:36">||</operator> <name pos:start="171:38" pos:end="171:41"><name pos:start="171:38" pos:end="171:38">p</name><index pos:start="171:39" pos:end="171:41">[<expr pos:start="171:40" pos:end="171:40"><literal type="number" pos:start="171:40" pos:end="171:40">2</literal></expr>]</index></name><operator pos:start="171:42" pos:end="171:43">==</operator><literal type="number" pos:start="171:44" pos:end="171:44">0</literal></expr>)</condition><block type="pseudo" pos:start="171:47" pos:end="171:52"><block_content pos:start="171:47" pos:end="171:52"> <break pos:start="171:47" pos:end="171:52">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if><else pos:start="175:6" pos:end="189:5">else<block pos:start="175:10" pos:end="189:5">{<block_content pos:start="177:9" pos:end="187:13">

        <for pos:start="177:9" pos:end="187:13">for<control pos:start="177:12" pos:end="177:26">(<init pos:start="177:13" pos:end="177:16"><expr pos:start="177:13" pos:end="177:15"><name pos:start="177:13" pos:end="177:13">i</name><operator pos:start="177:14" pos:end="177:14">=</operator><literal type="number" pos:start="177:15" pos:end="177:15">0</literal></expr>;</init> <condition pos:start="177:18" pos:end="177:21"><expr pos:start="177:18" pos:end="177:20"><name pos:start="177:18" pos:end="177:18">i</name><operator pos:start="177:19" pos:end="177:19">&lt;</operator><literal type="number" pos:start="177:20" pos:end="177:20">3</literal></expr>;</condition> <incr pos:start="177:23" pos:end="177:25"><expr pos:start="177:23" pos:end="177:25"><name pos:start="177:23" pos:end="177:23">i</name><operator pos:start="177:24" pos:end="177:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="179:13" pos:end="187:13"><block_content pos:start="179:13" pos:end="187:13">

            <for pos:start="179:13" pos:end="187:13">for<control pos:start="179:16" pos:end="179:32">(<init pos:start="179:17" pos:end="179:20"><expr pos:start="179:17" pos:end="179:19"><name pos:start="179:17" pos:end="179:17">j</name><operator pos:start="179:18" pos:end="179:18">=</operator><literal type="number" pos:start="179:19" pos:end="179:19">0</literal></expr>;</init> <condition pos:start="179:22" pos:end="179:27"><expr pos:start="179:22" pos:end="179:26"><name pos:start="179:22" pos:end="179:22">j</name><operator pos:start="179:23" pos:end="179:23">&lt;</operator><literal type="number" pos:start="179:24" pos:end="179:26">256</literal></expr>;</condition> <incr pos:start="179:29" pos:end="179:31"><expr pos:start="179:29" pos:end="179:31"><name pos:start="179:29" pos:end="179:29">j</name><operator pos:start="179:30" pos:end="179:31">++</operator></expr></incr>)</control><block pos:start="179:33" pos:end="187:13">{<block_content pos:start="181:17" pos:end="185:48">

                <decl_stmt pos:start="181:17" pos:end="181:39"><decl pos:start="181:17" pos:end="181:38"><type pos:start="181:17" pos:end="181:19"><name pos:start="181:17" pos:end="181:19">int</name></type> <name pos:start="181:21" pos:end="181:21">d</name><init pos:start="181:22" pos:end="181:38">= <expr pos:start="181:24" pos:end="181:38"><call pos:start="181:24" pos:end="181:38"><name pos:start="181:24" pos:end="181:28">FFMIN</name><argument_list pos:start="181:29" pos:end="181:38">(<argument pos:start="181:30" pos:end="181:30"><expr pos:start="181:30" pos:end="181:30"><name pos:start="181:30" pos:end="181:30">j</name></expr></argument>, <argument pos:start="181:33" pos:end="181:37"><expr pos:start="181:33" pos:end="181:37"><literal type="number" pos:start="181:33" pos:end="181:36">256</literal><operator pos:start="181:36" pos:end="181:36">-</operator><name pos:start="181:37" pos:end="181:37">j</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                

                <expr_stmt pos:start="185:17" pos:end="185:48"><expr pos:start="185:17" pos:end="185:47"><name pos:start="185:17" pos:end="185:30"><name pos:start="185:17" pos:end="185:17">s</name><operator pos:start="185:18" pos:end="185:19">-&gt;</operator><name pos:start="185:20" pos:end="185:24">stats</name><index pos:start="185:25" pos:end="185:27">[<expr pos:start="185:26" pos:end="185:26"><name pos:start="185:26" pos:end="185:26">i</name></expr>]</index><index pos:start="185:28" pos:end="185:30">[<expr pos:start="185:29" pos:end="185:29"><name pos:start="185:29" pos:end="185:29">j</name></expr>]</index></name><operator pos:start="185:31" pos:end="185:31">=</operator> <literal type="number" pos:start="185:33" pos:end="185:41">100000000</literal><operator pos:start="185:42" pos:end="185:42">/</operator><operator pos:start="185:43" pos:end="185:43">(</operator><name pos:start="185:44" pos:end="185:44">d</name><operator pos:start="185:45" pos:end="185:45">+</operator><literal type="number" pos:start="185:46" pos:end="185:46">1</literal><operator pos:start="185:47" pos:end="185:47">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for></block_content></block></for>

    </block_content>}</block></else></if_stmt>

    

    <for pos:start="193:5" pos:end="211:5">for<control pos:start="193:8" pos:end="193:22">(<init pos:start="193:9" pos:end="193:12"><expr pos:start="193:9" pos:end="193:11"><name pos:start="193:9" pos:end="193:9">i</name><operator pos:start="193:10" pos:end="193:10">=</operator><literal type="number" pos:start="193:11" pos:end="193:11">0</literal></expr>;</init> <condition pos:start="193:14" pos:end="193:17"><expr pos:start="193:14" pos:end="193:16"><name pos:start="193:14" pos:end="193:14">i</name><operator pos:start="193:15" pos:end="193:15">&lt;</operator><literal type="number" pos:start="193:16" pos:end="193:16">3</literal></expr>;</condition> <incr pos:start="193:19" pos:end="193:21"><expr pos:start="193:19" pos:end="193:21"><name pos:start="193:19" pos:end="193:19">i</name><operator pos:start="193:20" pos:end="193:21">++</operator></expr></incr>)</control><block pos:start="193:23" pos:end="211:5">{<block_content pos:start="195:9" pos:end="209:94">

        <expr_stmt pos:start="195:9" pos:end="195:56"><expr pos:start="195:9" pos:end="195:55"><call pos:start="195:9" pos:end="195:55"><name pos:start="195:9" pos:end="195:26">generate_len_table</name><argument_list pos:start="195:27" pos:end="195:55">(<argument pos:start="195:28" pos:end="195:36"><expr pos:start="195:28" pos:end="195:36"><name pos:start="195:28" pos:end="195:36"><name pos:start="195:28" pos:end="195:28">s</name><operator pos:start="195:29" pos:end="195:30">-&gt;</operator><name pos:start="195:31" pos:end="195:33">len</name><index pos:start="195:34" pos:end="195:36">[<expr pos:start="195:35" pos:end="195:35"><name pos:start="195:35" pos:end="195:35">i</name></expr>]</index></name></expr></argument>, <argument pos:start="195:39" pos:end="195:49"><expr pos:start="195:39" pos:end="195:49"><name pos:start="195:39" pos:end="195:49"><name pos:start="195:39" pos:end="195:39">s</name><operator pos:start="195:40" pos:end="195:41">-&gt;</operator><name pos:start="195:42" pos:end="195:46">stats</name><index pos:start="195:47" pos:end="195:49">[<expr pos:start="195:48" pos:end="195:48"><name pos:start="195:48" pos:end="195:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="195:52" pos:end="195:54"><expr pos:start="195:52" pos:end="195:54"><literal type="number" pos:start="195:52" pos:end="195:54">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="199:9" pos:end="203:9"><if pos:start="199:9" pos:end="203:9">if<condition pos:start="199:11" pos:end="199:56">(<expr pos:start="199:12" pos:end="199:55"><call pos:start="199:12" pos:end="199:53"><name pos:start="199:12" pos:end="199:30">generate_bits_table</name><argument_list pos:start="199:31" pos:end="199:53">(<argument pos:start="199:32" pos:end="199:41"><expr pos:start="199:32" pos:end="199:41"><name pos:start="199:32" pos:end="199:41"><name pos:start="199:32" pos:end="199:32">s</name><operator pos:start="199:33" pos:end="199:34">-&gt;</operator><name pos:start="199:35" pos:end="199:38">bits</name><index pos:start="199:39" pos:end="199:41">[<expr pos:start="199:40" pos:end="199:40"><name pos:start="199:40" pos:end="199:40">i</name></expr>]</index></name></expr></argument>, <argument pos:start="199:44" pos:end="199:52"><expr pos:start="199:44" pos:end="199:52"><name pos:start="199:44" pos:end="199:52"><name pos:start="199:44" pos:end="199:44">s</name><operator pos:start="199:45" pos:end="199:46">-&gt;</operator><name pos:start="199:47" pos:end="199:49">len</name><index pos:start="199:50" pos:end="199:52">[<expr pos:start="199:51" pos:end="199:51"><name pos:start="199:51" pos:end="199:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="199:54" pos:end="199:54">&lt;</operator><literal type="number" pos:start="199:55" pos:end="199:55">0</literal></expr>)</condition><block pos:start="199:57" pos:end="203:9">{<block_content pos:start="201:13" pos:end="201:22">

            <return pos:start="201:13" pos:end="201:22">return <expr pos:start="201:20" pos:end="201:21"><operator pos:start="201:20" pos:end="201:20">-</operator><literal type="number" pos:start="201:21" pos:end="201:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        

        <expr_stmt pos:start="207:9" pos:end="209:94"><expr pos:start="207:9" pos:end="209:93"><name pos:start="207:9" pos:end="207:32"><name pos:start="207:9" pos:end="207:9">s</name><operator pos:start="207:10" pos:end="207:11">-&gt;</operator><name pos:start="207:12" pos:end="207:16">avctx</name><operator pos:start="207:17" pos:end="207:18">-&gt;</operator><name pos:start="207:19" pos:end="207:32">extradata_size</name></name><operator pos:start="207:33" pos:end="207:34">+=</operator>

        <call pos:start="209:9" pos:end="209:93"><name pos:start="209:9" pos:end="209:19">store_table</name><argument_list pos:start="209:20" pos:end="209:93">(<argument pos:start="209:21" pos:end="209:21"><expr pos:start="209:21" pos:end="209:21"><name pos:start="209:21" pos:end="209:21">s</name></expr></argument>, <argument pos:start="209:24" pos:end="209:32"><expr pos:start="209:24" pos:end="209:32"><name pos:start="209:24" pos:end="209:32"><name pos:start="209:24" pos:end="209:24">s</name><operator pos:start="209:25" pos:end="209:26">-&gt;</operator><name pos:start="209:27" pos:end="209:29">len</name><index pos:start="209:30" pos:end="209:32">[<expr pos:start="209:31" pos:end="209:31"><name pos:start="209:31" pos:end="209:31">i</name></expr>]</index></name></expr></argument>, <argument pos:start="209:35" pos:end="209:92"><expr pos:start="209:35" pos:end="209:92"><operator pos:start="209:35" pos:end="209:35">&amp;</operator><operator pos:start="209:36" pos:end="209:36">(</operator><operator pos:start="209:37" pos:end="209:37">(</operator><name pos:start="209:38" pos:end="209:44">uint8_t</name><operator pos:start="209:45" pos:end="209:45">*</operator><operator pos:start="209:46" pos:end="209:46">)</operator><name pos:start="209:47" pos:end="209:65"><name pos:start="209:47" pos:end="209:47">s</name><operator pos:start="209:48" pos:end="209:49">-&gt;</operator><name pos:start="209:50" pos:end="209:54">avctx</name><operator pos:start="209:55" pos:end="209:56">-&gt;</operator><name pos:start="209:57" pos:end="209:65">extradata</name></name><operator pos:start="209:66" pos:end="209:66">)</operator><index pos:start="209:67" pos:end="209:92">[<expr pos:start="209:68" pos:end="209:91"><name pos:start="209:68" pos:end="209:91"><name pos:start="209:68" pos:end="209:68">s</name><operator pos:start="209:69" pos:end="209:70">-&gt;</operator><name pos:start="209:71" pos:end="209:75">avctx</name><operator pos:start="209:76" pos:end="209:77">-&gt;</operator><name pos:start="209:78" pos:end="209:91">extradata_size</name></name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="215:5" pos:end="239:5"><if pos:start="215:5" pos:end="231:5">if<condition pos:start="215:7" pos:end="215:18">(<expr pos:start="215:8" pos:end="215:17"><name pos:start="215:8" pos:end="215:17"><name pos:start="215:8" pos:end="215:8">s</name><operator pos:start="215:9" pos:end="215:10">-&gt;</operator><name pos:start="215:11" pos:end="215:17">context</name></name></expr>)</condition><block pos:start="215:19" pos:end="231:5">{<block_content pos:start="217:9" pos:end="229:9">

        <for pos:start="217:9" pos:end="229:9">for<control pos:start="217:12" pos:end="217:26">(<init pos:start="217:13" pos:end="217:16"><expr pos:start="217:13" pos:end="217:15"><name pos:start="217:13" pos:end="217:13">i</name><operator pos:start="217:14" pos:end="217:14">=</operator><literal type="number" pos:start="217:15" pos:end="217:15">0</literal></expr>;</init> <condition pos:start="217:18" pos:end="217:21"><expr pos:start="217:18" pos:end="217:20"><name pos:start="217:18" pos:end="217:18">i</name><operator pos:start="217:19" pos:end="217:19">&lt;</operator><literal type="number" pos:start="217:20" pos:end="217:20">3</literal></expr>;</condition> <incr pos:start="217:23" pos:end="217:25"><expr pos:start="217:23" pos:end="217:25"><name pos:start="217:23" pos:end="217:23">i</name><operator pos:start="217:24" pos:end="217:25">++</operator></expr></incr>)</control><block pos:start="217:27" pos:end="229:9">{<block_content pos:start="219:13" pos:end="227:13">

            <decl_stmt pos:start="219:13" pos:end="219:48"><decl pos:start="219:13" pos:end="219:47"><type pos:start="219:13" pos:end="219:15"><name pos:start="219:13" pos:end="219:15">int</name></type> <name pos:start="219:17" pos:end="219:20">pels</name> <init pos:start="219:22" pos:end="219:47">= <expr pos:start="219:24" pos:end="219:47"><name pos:start="219:24" pos:end="219:28">width</name><operator pos:start="219:29" pos:end="219:29">*</operator><name pos:start="219:30" pos:end="219:35">height</name> <operator pos:start="219:37" pos:end="219:37">/</operator> <operator pos:start="219:39" pos:end="219:39">(</operator><ternary pos:start="219:40" pos:end="219:46"><condition pos:start="219:40" pos:end="219:41"><expr pos:start="219:40" pos:end="219:40"><name pos:start="219:40" pos:end="219:40">i</name></expr>?</condition><then pos:start="219:42" pos:end="219:43"><expr pos:start="219:42" pos:end="219:43"><literal type="number" pos:start="219:42" pos:end="219:43">40</literal></expr></then><else pos:start="219:44" pos:end="219:46">:<expr pos:start="219:45" pos:end="219:46"><literal type="number" pos:start="219:45" pos:end="219:46">10</literal></expr></else></ternary><operator pos:start="219:47" pos:end="219:47">)</operator></expr></init></decl>;</decl_stmt>

            <for pos:start="221:13" pos:end="227:13">for<control pos:start="221:16" pos:end="221:32">(<init pos:start="221:17" pos:end="221:20"><expr pos:start="221:17" pos:end="221:19"><name pos:start="221:17" pos:end="221:17">j</name><operator pos:start="221:18" pos:end="221:18">=</operator><literal type="number" pos:start="221:19" pos:end="221:19">0</literal></expr>;</init> <condition pos:start="221:22" pos:end="221:27"><expr pos:start="221:22" pos:end="221:26"><name pos:start="221:22" pos:end="221:22">j</name><operator pos:start="221:23" pos:end="221:23">&lt;</operator><literal type="number" pos:start="221:24" pos:end="221:26">256</literal></expr>;</condition> <incr pos:start="221:29" pos:end="221:31"><expr pos:start="221:29" pos:end="221:31"><name pos:start="221:29" pos:end="221:29">j</name><operator pos:start="221:30" pos:end="221:31">++</operator></expr></incr>)</control><block pos:start="221:33" pos:end="227:13">{<block_content pos:start="223:17" pos:end="225:43">

                <decl_stmt pos:start="223:17" pos:end="223:39"><decl pos:start="223:17" pos:end="223:38"><type pos:start="223:17" pos:end="223:19"><name pos:start="223:17" pos:end="223:19">int</name></type> <name pos:start="223:21" pos:end="223:21">d</name><init pos:start="223:22" pos:end="223:38">= <expr pos:start="223:24" pos:end="223:38"><call pos:start="223:24" pos:end="223:38"><name pos:start="223:24" pos:end="223:28">FFMIN</name><argument_list pos:start="223:29" pos:end="223:38">(<argument pos:start="223:30" pos:end="223:30"><expr pos:start="223:30" pos:end="223:30"><name pos:start="223:30" pos:end="223:30">j</name></expr></argument>, <argument pos:start="223:33" pos:end="223:37"><expr pos:start="223:33" pos:end="223:37"><literal type="number" pos:start="223:33" pos:end="223:36">256</literal><operator pos:start="223:36" pos:end="223:36">-</operator><name pos:start="223:37" pos:end="223:37">j</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:43"><expr pos:start="225:17" pos:end="225:42"><name pos:start="225:17" pos:end="225:30"><name pos:start="225:17" pos:end="225:17">s</name><operator pos:start="225:18" pos:end="225:19">-&gt;</operator><name pos:start="225:20" pos:end="225:24">stats</name><index pos:start="225:25" pos:end="225:27">[<expr pos:start="225:26" pos:end="225:26"><name pos:start="225:26" pos:end="225:26">i</name></expr>]</index><index pos:start="225:28" pos:end="225:30">[<expr pos:start="225:29" pos:end="225:29"><name pos:start="225:29" pos:end="225:29">j</name></expr>]</index></name><operator pos:start="225:31" pos:end="225:31">=</operator> <name pos:start="225:33" pos:end="225:36">pels</name><operator pos:start="225:37" pos:end="225:37">/</operator><operator pos:start="225:38" pos:end="225:38">(</operator><name pos:start="225:39" pos:end="225:39">d</name><operator pos:start="225:40" pos:end="225:40">+</operator><literal type="number" pos:start="225:41" pos:end="225:41">1</literal><operator pos:start="225:42" pos:end="225:42">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if><else pos:start="231:6" pos:end="239:5">else<block pos:start="231:10" pos:end="239:5">{<block_content pos:start="233:9" pos:end="237:34">

        <for pos:start="233:9" pos:end="237:34">for<control pos:start="233:12" pos:end="233:26">(<init pos:start="233:13" pos:end="233:16"><expr pos:start="233:13" pos:end="233:15"><name pos:start="233:13" pos:end="233:13">i</name><operator pos:start="233:14" pos:end="233:14">=</operator><literal type="number" pos:start="233:15" pos:end="233:15">0</literal></expr>;</init> <condition pos:start="233:18" pos:end="233:21"><expr pos:start="233:18" pos:end="233:20"><name pos:start="233:18" pos:end="233:18">i</name><operator pos:start="233:19" pos:end="233:19">&lt;</operator><literal type="number" pos:start="233:20" pos:end="233:20">3</literal></expr>;</condition> <incr pos:start="233:23" pos:end="233:25"><expr pos:start="233:23" pos:end="233:25"><name pos:start="233:23" pos:end="233:23">i</name><operator pos:start="233:24" pos:end="233:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="235:13" pos:end="237:34"><block_content pos:start="235:13" pos:end="237:34">

            <for pos:start="235:13" pos:end="237:34">for<control pos:start="235:16" pos:end="235:32">(<init pos:start="235:17" pos:end="235:20"><expr pos:start="235:17" pos:end="235:19"><name pos:start="235:17" pos:end="235:17">j</name><operator pos:start="235:18" pos:end="235:18">=</operator><literal type="number" pos:start="235:19" pos:end="235:19">0</literal></expr>;</init> <condition pos:start="235:22" pos:end="235:27"><expr pos:start="235:22" pos:end="235:26"><name pos:start="235:22" pos:end="235:22">j</name><operator pos:start="235:23" pos:end="235:23">&lt;</operator><literal type="number" pos:start="235:24" pos:end="235:26">256</literal></expr>;</condition> <incr pos:start="235:29" pos:end="235:31"><expr pos:start="235:29" pos:end="235:31"><name pos:start="235:29" pos:end="235:29">j</name><operator pos:start="235:30" pos:end="235:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="237:17" pos:end="237:34"><block_content pos:start="237:17" pos:end="237:34">

                <expr_stmt pos:start="237:17" pos:end="237:34"><expr pos:start="237:17" pos:end="237:33"><name pos:start="237:17" pos:end="237:30"><name pos:start="237:17" pos:end="237:17">s</name><operator pos:start="237:18" pos:end="237:19">-&gt;</operator><name pos:start="237:20" pos:end="237:24">stats</name><index pos:start="237:25" pos:end="237:27">[<expr pos:start="237:26" pos:end="237:26"><name pos:start="237:26" pos:end="237:26">i</name></expr>]</index><index pos:start="237:28" pos:end="237:30">[<expr pos:start="237:29" pos:end="237:29"><name pos:start="237:29" pos:end="237:29">j</name></expr>]</index></name><operator pos:start="237:31" pos:end="237:31">=</operator> <literal type="number" pos:start="237:33" pos:end="237:33">0</literal></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

    </block_content>}</block></else></if_stmt>

    

<comment type="line" pos:start="243:1" pos:end="243:118">//    printf("pred:%d bpp:%d hbpp:%d il:%d\n", s-&gt;predictor, s-&gt;bitstream_bpp, avctx-&gt;bits_per_sample, s-&gt;interlaced);</comment>



    <expr_stmt pos:start="247:5" pos:end="247:24"><expr pos:start="247:5" pos:end="247:23"><name pos:start="247:5" pos:end="247:21"><name pos:start="247:5" pos:end="247:5">s</name><operator pos:start="247:6" pos:end="247:7">-&gt;</operator><name pos:start="247:8" pos:end="247:21">picture_number</name></name><operator pos:start="247:22" pos:end="247:22">=</operator><literal type="number" pos:start="247:23" pos:end="247:23">0</literal></expr>;</expr_stmt>



    <return pos:start="251:5" pos:end="251:13">return <expr pos:start="251:12" pos:end="251:12"><literal type="number" pos:start="251:12" pos:end="251:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
