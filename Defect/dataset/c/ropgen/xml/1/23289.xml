<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23289.c" pos:tabs="8"><function pos:start="1:1" pos:end="229:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:29">arm_v7m_cpu_do_interrupt</name><parameter_list pos:start="1:30" pos:end="1:43">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:40"><name pos:start="1:31" pos:end="1:38">CPUState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">cs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="229:1">{<block_content pos:start="5:5" pos:end="227:66">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">ARMCPU</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">cpu</name> <init pos:start="5:17" pos:end="5:29">= <expr pos:start="5:19" pos:end="5:29"><call pos:start="5:19" pos:end="5:29"><name pos:start="5:19" pos:end="5:25">ARM_CPU</name><argument_list pos:start="5:26" pos:end="5:29">(<argument pos:start="5:27" pos:end="5:28"><expr pos:start="5:27" pos:end="5:28"><name pos:start="5:27" pos:end="5:28">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">CPUARMState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">env</name> <init pos:start="7:22" pos:end="7:32">= <expr pos:start="7:24" pos:end="7:32"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:27">cpu</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:15">lr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:43"><expr pos:start="13:5" pos:end="13:42"><call pos:start="13:5" pos:end="13:42"><name pos:start="13:5" pos:end="13:21">arm_log_exception</name><argument_list pos:start="13:22" pos:end="13:42">(<argument pos:start="13:23" pos:end="13:41"><expr pos:start="13:23" pos:end="13:41"><name pos:start="13:23" pos:end="13:41"><name pos:start="13:23" pos:end="13:24">cs</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:41">exception_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="19:21">/* For exceptions we just mark as pending on the NVIC, and let that

       handle it.  */</comment>

    <switch pos:start="21:5" pos:end="195:5">switch <condition pos:start="21:12" pos:end="21:32">(<expr pos:start="21:13" pos:end="21:31"><name pos:start="21:13" pos:end="21:31"><name pos:start="21:13" pos:end="21:14">cs</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:31">exception_index</name></name></expr>)</condition> <block pos:start="21:34" pos:end="195:5">{<block_content pos:start="23:5" pos:end="193:15">

    <case pos:start="23:5" pos:end="23:19">case <expr pos:start="23:10" pos:end="23:18"><name pos:start="23:10" pos:end="23:18">EXCP_UDEF</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:79"><expr pos:start="25:9" pos:end="25:78"><call pos:start="25:9" pos:end="25:78"><name pos:start="25:9" pos:end="25:31">armv7m_nvic_set_pending</name><argument_list pos:start="25:32" pos:end="25:78">(<argument pos:start="25:33" pos:end="25:41"><expr pos:start="25:33" pos:end="25:41"><name pos:start="25:33" pos:end="25:41"><name pos:start="25:33" pos:end="25:35">env</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:41">nvic</name></name></expr></argument>, <argument pos:start="25:44" pos:end="25:60"><expr pos:start="25:44" pos:end="25:60"><name pos:start="25:44" pos:end="25:60">ARMV7M_EXCP_USAGE</name></expr></argument>, <argument pos:start="25:63" pos:end="25:77"><expr pos:start="25:63" pos:end="25:77"><name pos:start="25:63" pos:end="25:77"><name pos:start="25:63" pos:end="25:65">env</name><operator pos:start="25:66" pos:end="25:67">-&gt;</operator><name pos:start="25:68" pos:end="25:70">v7m</name><operator pos:start="25:71" pos:end="25:71">.</operator><name pos:start="25:72" pos:end="25:77">secure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:69"><expr pos:start="27:9" pos:end="27:68"><name pos:start="27:9" pos:end="27:38"><name pos:start="27:9" pos:end="27:11">env</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:16">v7m</name><operator pos:start="27:17" pos:end="27:17">.</operator><name pos:start="27:18" pos:end="27:21">cfsr</name><index pos:start="27:22" pos:end="27:38">[<expr pos:start="27:23" pos:end="27:37"><name pos:start="27:23" pos:end="27:37"><name pos:start="27:23" pos:end="27:25">env</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:30">v7m</name><operator pos:start="27:31" pos:end="27:31">.</operator><name pos:start="27:32" pos:end="27:37">secure</name></name></expr>]</index></name> <operator pos:start="27:40" pos:end="27:41">|=</operator> <name pos:start="27:43" pos:end="27:68">R_V7M_CFSR_UNDEFINSTR_MASK</name></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:19">case <expr pos:start="31:10" pos:end="31:18"><name pos:start="31:10" pos:end="31:18">EXCP_NOCP</name></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:79"><expr pos:start="33:9" pos:end="33:78"><call pos:start="33:9" pos:end="33:78"><name pos:start="33:9" pos:end="33:31">armv7m_nvic_set_pending</name><argument_list pos:start="33:32" pos:end="33:78">(<argument pos:start="33:33" pos:end="33:41"><expr pos:start="33:33" pos:end="33:41"><name pos:start="33:33" pos:end="33:41"><name pos:start="33:33" pos:end="33:35">env</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:41">nvic</name></name></expr></argument>, <argument pos:start="33:44" pos:end="33:60"><expr pos:start="33:44" pos:end="33:60"><name pos:start="33:44" pos:end="33:60">ARMV7M_EXCP_USAGE</name></expr></argument>, <argument pos:start="33:63" pos:end="33:77"><expr pos:start="33:63" pos:end="33:77"><name pos:start="33:63" pos:end="33:77"><name pos:start="33:63" pos:end="33:65">env</name><operator pos:start="33:66" pos:end="33:67">-&gt;</operator><name pos:start="33:68" pos:end="33:70">v7m</name><operator pos:start="33:71" pos:end="33:71">.</operator><name pos:start="33:72" pos:end="33:77">secure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:63"><expr pos:start="35:9" pos:end="35:62"><name pos:start="35:9" pos:end="35:38"><name pos:start="35:9" pos:end="35:11">env</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:16">v7m</name><operator pos:start="35:17" pos:end="35:17">.</operator><name pos:start="35:18" pos:end="35:21">cfsr</name><index pos:start="35:22" pos:end="35:38">[<expr pos:start="35:23" pos:end="35:37"><name pos:start="35:23" pos:end="35:37"><name pos:start="35:23" pos:end="35:25">env</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:30">v7m</name><operator pos:start="35:31" pos:end="35:31">.</operator><name pos:start="35:32" pos:end="35:37">secure</name></name></expr>]</index></name> <operator pos:start="35:40" pos:end="35:41">|=</operator> <name pos:start="35:43" pos:end="35:62">R_V7M_CFSR_NOCP_MASK</name></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:23">case <expr pos:start="39:10" pos:end="39:22"><name pos:start="39:10" pos:end="39:22">EXCP_INVSTATE</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:79"><expr pos:start="41:9" pos:end="41:78"><call pos:start="41:9" pos:end="41:78"><name pos:start="41:9" pos:end="41:31">armv7m_nvic_set_pending</name><argument_list pos:start="41:32" pos:end="41:78">(<argument pos:start="41:33" pos:end="41:41"><expr pos:start="41:33" pos:end="41:41"><name pos:start="41:33" pos:end="41:41"><name pos:start="41:33" pos:end="41:35">env</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:41">nvic</name></name></expr></argument>, <argument pos:start="41:44" pos:end="41:60"><expr pos:start="41:44" pos:end="41:60"><name pos:start="41:44" pos:end="41:60">ARMV7M_EXCP_USAGE</name></expr></argument>, <argument pos:start="41:63" pos:end="41:77"><expr pos:start="41:63" pos:end="41:77"><name pos:start="41:63" pos:end="41:77"><name pos:start="41:63" pos:end="41:65">env</name><operator pos:start="41:66" pos:end="41:67">-&gt;</operator><name pos:start="41:68" pos:end="41:70">v7m</name><operator pos:start="41:71" pos:end="41:71">.</operator><name pos:start="41:72" pos:end="41:77">secure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:67"><expr pos:start="43:9" pos:end="43:66"><name pos:start="43:9" pos:end="43:38"><name pos:start="43:9" pos:end="43:11">env</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:16">v7m</name><operator pos:start="43:17" pos:end="43:17">.</operator><name pos:start="43:18" pos:end="43:21">cfsr</name><index pos:start="43:22" pos:end="43:38">[<expr pos:start="43:23" pos:end="43:37"><name pos:start="43:23" pos:end="43:37"><name pos:start="43:23" pos:end="43:25">env</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:30">v7m</name><operator pos:start="43:31" pos:end="43:31">.</operator><name pos:start="43:32" pos:end="43:37">secure</name></name></expr>]</index></name> <operator pos:start="43:40" pos:end="43:41">|=</operator> <name pos:start="43:43" pos:end="43:66">R_V7M_CFSR_INVSTATE_MASK</name></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:18">case <expr pos:start="47:10" pos:end="47:17"><name pos:start="47:10" pos:end="47:17">EXCP_SWI</name></expr>:</case>

        <comment type="block" pos:start="49:9" pos:end="49:61">/* The PC already points to the next instruction.  */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:77"><expr pos:start="51:9" pos:end="51:76"><call pos:start="51:9" pos:end="51:76"><name pos:start="51:9" pos:end="51:31">armv7m_nvic_set_pending</name><argument_list pos:start="51:32" pos:end="51:76">(<argument pos:start="51:33" pos:end="51:41"><expr pos:start="51:33" pos:end="51:41"><name pos:start="51:33" pos:end="51:41"><name pos:start="51:33" pos:end="51:35">env</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:41">nvic</name></name></expr></argument>, <argument pos:start="51:44" pos:end="51:58"><expr pos:start="51:44" pos:end="51:58"><name pos:start="51:44" pos:end="51:58">ARMV7M_EXCP_SVC</name></expr></argument>, <argument pos:start="51:61" pos:end="51:75"><expr pos:start="51:61" pos:end="51:75"><name pos:start="51:61" pos:end="51:75"><name pos:start="51:61" pos:end="51:63">env</name><operator pos:start="51:64" pos:end="51:65">-&gt;</operator><name pos:start="51:66" pos:end="51:68">v7m</name><operator pos:start="51:69" pos:end="51:69">.</operator><name pos:start="51:70" pos:end="51:75">secure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:29">case <expr pos:start="55:10" pos:end="55:28"><name pos:start="55:10" pos:end="55:28">EXCP_PREFETCH_ABORT</name></expr>:</case>

    <case pos:start="57:5" pos:end="57:25">case <expr pos:start="57:10" pos:end="57:24"><name pos:start="57:10" pos:end="57:24">EXCP_DATA_ABORT</name></expr>:</case>

        <comment type="block" pos:start="59:9" pos:end="65:11">/* Note that for M profile we don't have a guest facing FSR, but

         * the env-&gt;exception.fsr will be populated by the code that

         * raises the fault, in the A profile short-descriptor format.

         */</comment>

        <switch pos:start="67:9" pos:end="145:9">switch <condition pos:start="67:16" pos:end="67:41">(<expr pos:start="67:17" pos:end="67:40"><name pos:start="67:17" pos:end="67:34"><name pos:start="67:17" pos:end="67:19">env</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:30">exception</name><operator pos:start="67:31" pos:end="67:31">.</operator><name pos:start="67:32" pos:end="67:34">fsr</name></name> <operator pos:start="67:36" pos:end="67:36">&amp;</operator> <literal type="number" pos:start="67:38" pos:end="67:40">0xf</literal></expr>)</condition> <block pos:start="67:43" pos:end="145:9">{<block_content pos:start="69:9" pos:end="143:18">

        <case pos:start="69:9" pos:end="69:17">case <expr pos:start="69:14" pos:end="69:16"><literal type="number" pos:start="69:14" pos:end="69:16">0x8</literal></expr>:</case> <comment type="block" pos:start="69:19" pos:end="69:38">/* External Abort */</comment>

            <switch pos:start="71:13" pos:end="97:13">switch <condition pos:start="71:20" pos:end="71:40">(<expr pos:start="71:21" pos:end="71:39"><name pos:start="71:21" pos:end="71:39"><name pos:start="71:21" pos:end="71:22">cs</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:39">exception_index</name></name></expr>)</condition> <block pos:start="71:42" pos:end="97:13">{<block_content pos:start="73:13" pos:end="95:22">

            <case pos:start="73:13" pos:end="73:37">case <expr pos:start="73:18" pos:end="73:36"><name pos:start="73:18" pos:end="73:36">EXCP_PREFETCH_ABORT</name></expr>:</case>

                <expr_stmt pos:start="75:17" pos:end="75:67"><expr pos:start="75:17" pos:end="75:66"><name pos:start="75:17" pos:end="75:39"><name pos:start="75:17" pos:end="75:19">env</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:24">v7m</name><operator pos:start="75:25" pos:end="75:25">.</operator><name pos:start="75:26" pos:end="75:29">cfsr</name><index pos:start="75:30" pos:end="75:39">[<expr pos:start="75:31" pos:end="75:38"><name pos:start="75:31" pos:end="75:38">M_REG_NS</name></expr>]</index></name> <operator pos:start="75:41" pos:end="75:42">|=</operator> <name pos:start="75:44" pos:end="75:66">R_V7M_CFSR_IBUSERR_MASK</name></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:69"><expr pos:start="77:17" pos:end="77:68"><call pos:start="77:17" pos:end="77:68"><name pos:start="77:17" pos:end="77:29">qemu_log_mask</name><argument_list pos:start="77:30" pos:end="77:68">(<argument pos:start="77:31" pos:end="77:41"><expr pos:start="77:31" pos:end="77:41"><name pos:start="77:31" pos:end="77:41">CPU_LOG_INT</name></expr></argument>, <argument pos:start="77:44" pos:end="77:67"><expr pos:start="77:44" pos:end="77:67"><literal type="string" pos:start="77:44" pos:end="77:67">"...with CFSR.IBUSERR\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="79:17" pos:end="79:22">break;</break>

            <case pos:start="81:13" pos:end="81:33">case <expr pos:start="81:18" pos:end="81:32"><name pos:start="81:18" pos:end="81:32">EXCP_DATA_ABORT</name></expr>:</case>

                <expr_stmt pos:start="83:17" pos:end="85:76"><expr pos:start="83:17" pos:end="85:75"><name pos:start="83:17" pos:end="83:39"><name pos:start="83:17" pos:end="83:19">env</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:24">v7m</name><operator pos:start="83:25" pos:end="83:25">.</operator><name pos:start="83:26" pos:end="83:29">cfsr</name><index pos:start="83:30" pos:end="83:39">[<expr pos:start="83:31" pos:end="83:38"><name pos:start="83:31" pos:end="83:38">M_REG_NS</name></expr>]</index></name> <operator pos:start="83:41" pos:end="83:42">|=</operator>

                    <operator pos:start="85:21" pos:end="85:21">(</operator><name pos:start="85:22" pos:end="85:46">R_V7M_CFSR_PRECISERR_MASK</name> <operator pos:start="85:48" pos:end="85:48">|</operator> <name pos:start="85:50" pos:end="85:74">R_V7M_CFSR_BFARVALID_MASK</name><operator pos:start="85:75" pos:end="85:75">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:56"><expr pos:start="87:17" pos:end="87:55"><name pos:start="87:17" pos:end="87:29"><name pos:start="87:17" pos:end="87:19">env</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:24">v7m</name><operator pos:start="87:25" pos:end="87:25">.</operator><name pos:start="87:26" pos:end="87:29">bfar</name></name> <operator pos:start="87:31" pos:end="87:31">=</operator> <name pos:start="87:33" pos:end="87:55"><name pos:start="87:33" pos:end="87:35">env</name><operator pos:start="87:36" pos:end="87:37">-&gt;</operator><name pos:start="87:38" pos:end="87:46">exception</name><operator pos:start="87:47" pos:end="87:47">.</operator><name pos:start="87:48" pos:end="87:55">vaddress</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="93:45"><expr pos:start="89:17" pos:end="93:44"><call pos:start="89:17" pos:end="93:44"><name pos:start="89:17" pos:end="89:29">qemu_log_mask</name><argument_list pos:start="89:30" pos:end="93:44">(<argument pos:start="89:31" pos:end="89:41"><expr pos:start="89:31" pos:end="89:41"><name pos:start="89:31" pos:end="89:41">CPU_LOG_INT</name></expr></argument>,

                              <argument pos:start="91:31" pos:end="91:70"><expr pos:start="91:31" pos:end="91:70"><literal type="string" pos:start="91:31" pos:end="91:70">"...with CFSR.PRECISERR and BFAR 0x%x\n"</literal></expr></argument>,

                              <argument pos:start="93:31" pos:end="93:43"><expr pos:start="93:31" pos:end="93:43"><name pos:start="93:31" pos:end="93:43"><name pos:start="93:31" pos:end="93:33">env</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:38">v7m</name><operator pos:start="93:39" pos:end="93:39">.</operator><name pos:start="93:40" pos:end="93:43">bfar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="95:17" pos:end="95:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="99:13" pos:end="99:71"><expr pos:start="99:13" pos:end="99:70"><call pos:start="99:13" pos:end="99:70"><name pos:start="99:13" pos:end="99:35">armv7m_nvic_set_pending</name><argument_list pos:start="99:36" pos:end="99:70">(<argument pos:start="99:37" pos:end="99:45"><expr pos:start="99:37" pos:end="99:45"><name pos:start="99:37" pos:end="99:45"><name pos:start="99:37" pos:end="99:39">env</name><operator pos:start="99:40" pos:end="99:41">-&gt;</operator><name pos:start="99:42" pos:end="99:45">nvic</name></name></expr></argument>, <argument pos:start="99:48" pos:end="99:62"><expr pos:start="99:48" pos:end="99:62"><name pos:start="99:48" pos:end="99:62">ARMV7M_EXCP_BUS</name></expr></argument>, <argument pos:start="99:65" pos:end="99:69"><expr pos:start="99:65" pos:end="99:69"><name pos:start="99:65" pos:end="99:69">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="101:13" pos:end="101:18">break;</break>

        <default pos:start="103:9" pos:end="103:16">default:</default>

            <comment type="block" pos:start="105:13" pos:end="109:15">/* All other FSR values are either MPU faults or "can't happen

             * for M profile" cases.

             */</comment>

            <switch pos:start="111:13" pos:end="137:13">switch <condition pos:start="111:20" pos:end="111:40">(<expr pos:start="111:21" pos:end="111:39"><name pos:start="111:21" pos:end="111:39"><name pos:start="111:21" pos:end="111:22">cs</name><operator pos:start="111:23" pos:end="111:24">-&gt;</operator><name pos:start="111:25" pos:end="111:39">exception_index</name></name></expr>)</condition> <block pos:start="111:42" pos:end="137:13">{<block_content pos:start="113:13" pos:end="135:22">

            <case pos:start="113:13" pos:end="113:37">case <expr pos:start="113:18" pos:end="113:36"><name pos:start="113:18" pos:end="113:36">EXCP_PREFETCH_ABORT</name></expr>:</case>

                <expr_stmt pos:start="115:17" pos:end="115:75"><expr pos:start="115:17" pos:end="115:74"><name pos:start="115:17" pos:end="115:46"><name pos:start="115:17" pos:end="115:19">env</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:24">v7m</name><operator pos:start="115:25" pos:end="115:25">.</operator><name pos:start="115:26" pos:end="115:29">cfsr</name><index pos:start="115:30" pos:end="115:46">[<expr pos:start="115:31" pos:end="115:45"><name pos:start="115:31" pos:end="115:45"><name pos:start="115:31" pos:end="115:33">env</name><operator pos:start="115:34" pos:end="115:35">-&gt;</operator><name pos:start="115:36" pos:end="115:38">v7m</name><operator pos:start="115:39" pos:end="115:39">.</operator><name pos:start="115:40" pos:end="115:45">secure</name></name></expr>]</index></name> <operator pos:start="115:48" pos:end="115:49">|=</operator> <name pos:start="115:51" pos:end="115:74">R_V7M_CFSR_IACCVIOL_MASK</name></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:70"><expr pos:start="117:17" pos:end="117:69"><call pos:start="117:17" pos:end="117:69"><name pos:start="117:17" pos:end="117:29">qemu_log_mask</name><argument_list pos:start="117:30" pos:end="117:69">(<argument pos:start="117:31" pos:end="117:41"><expr pos:start="117:31" pos:end="117:41"><name pos:start="117:31" pos:end="117:41">CPU_LOG_INT</name></expr></argument>, <argument pos:start="117:44" pos:end="117:68"><expr pos:start="117:44" pos:end="117:68"><literal type="string" pos:start="117:44" pos:end="117:68">"...with CFSR.IACCVIOL\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="119:17" pos:end="119:22">break;</break>

            <case pos:start="121:13" pos:end="121:33">case <expr pos:start="121:18" pos:end="121:32"><name pos:start="121:18" pos:end="121:32">EXCP_DATA_ABORT</name></expr>:</case>

                <expr_stmt pos:start="123:17" pos:end="125:75"><expr pos:start="123:17" pos:end="125:74"><name pos:start="123:17" pos:end="123:46"><name pos:start="123:17" pos:end="123:19">env</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:24">v7m</name><operator pos:start="123:25" pos:end="123:25">.</operator><name pos:start="123:26" pos:end="123:29">cfsr</name><index pos:start="123:30" pos:end="123:46">[<expr pos:start="123:31" pos:end="123:45"><name pos:start="123:31" pos:end="123:45"><name pos:start="123:31" pos:end="123:33">env</name><operator pos:start="123:34" pos:end="123:35">-&gt;</operator><name pos:start="123:36" pos:end="123:38">v7m</name><operator pos:start="123:39" pos:end="123:39">.</operator><name pos:start="123:40" pos:end="123:45">secure</name></name></expr>]</index></name> <operator pos:start="123:48" pos:end="123:49">|=</operator>

                    <operator pos:start="125:21" pos:end="125:21">(</operator><name pos:start="125:22" pos:end="125:45">R_V7M_CFSR_DACCVIOL_MASK</name> <operator pos:start="125:47" pos:end="125:47">|</operator> <name pos:start="125:49" pos:end="125:73">R_V7M_CFSR_MMARVALID_MASK</name><operator pos:start="125:74" pos:end="125:74">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:74"><expr pos:start="127:17" pos:end="127:73"><name pos:start="127:17" pos:end="127:47"><name pos:start="127:17" pos:end="127:19">env</name><operator pos:start="127:20" pos:end="127:21">-&gt;</operator><name pos:start="127:22" pos:end="127:24">v7m</name><operator pos:start="127:25" pos:end="127:25">.</operator><name pos:start="127:26" pos:end="127:30">mmfar</name><index pos:start="127:31" pos:end="127:47">[<expr pos:start="127:32" pos:end="127:46"><name pos:start="127:32" pos:end="127:46"><name pos:start="127:32" pos:end="127:34">env</name><operator pos:start="127:35" pos:end="127:36">-&gt;</operator><name pos:start="127:37" pos:end="127:39">v7m</name><operator pos:start="127:40" pos:end="127:40">.</operator><name pos:start="127:41" pos:end="127:46">secure</name></name></expr>]</index></name> <operator pos:start="127:49" pos:end="127:49">=</operator> <name pos:start="127:51" pos:end="127:73"><name pos:start="127:51" pos:end="127:53">env</name><operator pos:start="127:54" pos:end="127:55">-&gt;</operator><name pos:start="127:56" pos:end="127:64">exception</name><operator pos:start="127:65" pos:end="127:65">.</operator><name pos:start="127:66" pos:end="127:73">vaddress</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="133:63"><expr pos:start="129:17" pos:end="133:62"><call pos:start="129:17" pos:end="133:62"><name pos:start="129:17" pos:end="129:29">qemu_log_mask</name><argument_list pos:start="129:30" pos:end="133:62">(<argument pos:start="129:31" pos:end="129:41"><expr pos:start="129:31" pos:end="129:41"><name pos:start="129:31" pos:end="129:41">CPU_LOG_INT</name></expr></argument>,

                              <argument pos:start="131:31" pos:end="131:70"><expr pos:start="131:31" pos:end="131:70"><literal type="string" pos:start="131:31" pos:end="131:70">"...with CFSR.DACCVIOL and MMFAR 0x%x\n"</literal></expr></argument>,

                              <argument pos:start="133:31" pos:end="133:61"><expr pos:start="133:31" pos:end="133:61"><name pos:start="133:31" pos:end="133:61"><name pos:start="133:31" pos:end="133:33">env</name><operator pos:start="133:34" pos:end="133:35">-&gt;</operator><name pos:start="133:36" pos:end="133:38">v7m</name><operator pos:start="133:39" pos:end="133:39">.</operator><name pos:start="133:40" pos:end="133:44">mmfar</name><index pos:start="133:45" pos:end="133:61">[<expr pos:start="133:46" pos:end="133:60"><name pos:start="133:46" pos:end="133:60"><name pos:start="133:46" pos:end="133:48">env</name><operator pos:start="133:49" pos:end="133:50">-&gt;</operator><name pos:start="133:51" pos:end="133:53">v7m</name><operator pos:start="133:54" pos:end="133:54">.</operator><name pos:start="133:55" pos:end="133:60">secure</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="135:17" pos:end="135:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="139:13" pos:end="141:53"><expr pos:start="139:13" pos:end="141:52"><call pos:start="139:13" pos:end="141:52"><name pos:start="139:13" pos:end="139:35">armv7m_nvic_set_pending</name><argument_list pos:start="139:36" pos:end="141:52">(<argument pos:start="139:37" pos:end="139:45"><expr pos:start="139:37" pos:end="139:45"><name pos:start="139:37" pos:end="139:45"><name pos:start="139:37" pos:end="139:39">env</name><operator pos:start="139:40" pos:end="139:41">-&gt;</operator><name pos:start="139:42" pos:end="139:45">nvic</name></name></expr></argument>, <argument pos:start="139:48" pos:end="139:62"><expr pos:start="139:48" pos:end="139:62"><name pos:start="139:48" pos:end="139:62">ARMV7M_EXCP_MEM</name></expr></argument>,

                                    <argument pos:start="141:37" pos:end="141:51"><expr pos:start="141:37" pos:end="141:51"><name pos:start="141:37" pos:end="141:51"><name pos:start="141:37" pos:end="141:39">env</name><operator pos:start="141:40" pos:end="141:41">-&gt;</operator><name pos:start="141:42" pos:end="141:44">v7m</name><operator pos:start="141:45" pos:end="141:45">.</operator><name pos:start="141:46" pos:end="141:51">secure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="143:13" pos:end="143:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="147:9" pos:end="147:14">break;</break>

    <case pos:start="149:5" pos:end="149:19">case <expr pos:start="149:10" pos:end="149:18"><name pos:start="149:10" pos:end="149:18">EXCP_BKPT</name></expr>:</case>

        <if_stmt pos:start="151:9" pos:end="173:9"><if pos:start="151:9" pos:end="173:9">if <condition pos:start="151:12" pos:end="151:34">(<expr pos:start="151:13" pos:end="151:33"><call pos:start="151:13" pos:end="151:33"><name pos:start="151:13" pos:end="151:31">semihosting_enabled</name><argument_list pos:start="151:32" pos:end="151:33">()</argument_list></call></expr>)</condition> <block pos:start="151:36" pos:end="173:9">{<block_content pos:start="153:13" pos:end="171:13">

            <decl_stmt pos:start="153:13" pos:end="153:19"><decl pos:start="153:13" pos:end="153:18"><type pos:start="153:13" pos:end="153:15"><name pos:start="153:13" pos:end="153:15">int</name></type> <name pos:start="153:17" pos:end="153:18">nr</name></decl>;</decl_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:76"><expr pos:start="155:13" pos:end="155:75"><name pos:start="155:13" pos:end="155:14">nr</name> <operator pos:start="155:16" pos:end="155:16">=</operator> <call pos:start="155:18" pos:end="155:68"><name pos:start="155:18" pos:end="155:30">arm_lduw_code</name><argument_list pos:start="155:31" pos:end="155:68">(<argument pos:start="155:32" pos:end="155:34"><expr pos:start="155:32" pos:end="155:34"><name pos:start="155:32" pos:end="155:34">env</name></expr></argument>, <argument pos:start="155:37" pos:end="155:49"><expr pos:start="155:37" pos:end="155:49"><name pos:start="155:37" pos:end="155:49"><name pos:start="155:37" pos:end="155:39">env</name><operator pos:start="155:40" pos:end="155:41">-&gt;</operator><name pos:start="155:42" pos:end="155:45">regs</name><index pos:start="155:46" pos:end="155:49">[<expr pos:start="155:47" pos:end="155:48"><literal type="number" pos:start="155:47" pos:end="155:48">15</literal></expr>]</index></name></expr></argument>, <argument pos:start="155:52" pos:end="155:67"><expr pos:start="155:52" pos:end="155:67"><call pos:start="155:52" pos:end="155:67"><name pos:start="155:52" pos:end="155:62">arm_sctlr_b</name><argument_list pos:start="155:63" pos:end="155:67">(<argument pos:start="155:64" pos:end="155:66"><expr pos:start="155:64" pos:end="155:66"><name pos:start="155:64" pos:end="155:66">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="155:70" pos:end="155:70">&amp;</operator> <literal type="number" pos:start="155:72" pos:end="155:75">0xff</literal></expr>;</expr_stmt>

            <if_stmt pos:start="157:13" pos:end="171:13"><if pos:start="157:13" pos:end="171:13">if <condition pos:start="157:16" pos:end="157:27">(<expr pos:start="157:17" pos:end="157:26"><name pos:start="157:17" pos:end="157:18">nr</name> <operator pos:start="157:20" pos:end="157:21">==</operator> <literal type="number" pos:start="157:23" pos:end="157:26">0xab</literal></expr>)</condition> <block pos:start="157:29" pos:end="171:13">{<block_content pos:start="159:17" pos:end="169:23">

                <expr_stmt pos:start="159:17" pos:end="159:35"><expr pos:start="159:17" pos:end="159:34"><name pos:start="159:17" pos:end="159:29"><name pos:start="159:17" pos:end="159:19">env</name><operator pos:start="159:20" pos:end="159:21">-&gt;</operator><name pos:start="159:22" pos:end="159:25">regs</name><index pos:start="159:26" pos:end="159:29">[<expr pos:start="159:27" pos:end="159:28"><literal type="number" pos:start="159:27" pos:end="159:28">15</literal></expr>]</index></name> <operator pos:start="159:31" pos:end="159:32">+=</operator> <literal type="number" pos:start="159:34" pos:end="159:34">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="165:44"><expr pos:start="161:17" pos:end="165:43"><call pos:start="161:17" pos:end="165:43"><name pos:start="161:17" pos:end="161:29">qemu_log_mask</name><argument_list pos:start="161:30" pos:end="165:43">(<argument pos:start="161:31" pos:end="161:41"><expr pos:start="161:31" pos:end="161:41"><name pos:start="161:31" pos:end="161:41">CPU_LOG_INT</name></expr></argument>,

                              <argument pos:start="163:31" pos:end="163:70"><expr pos:start="163:31" pos:end="163:70"><literal type="string" pos:start="163:31" pos:end="163:70">"...handling as semihosting call 0x%x\n"</literal></expr></argument>,

                              <argument pos:start="165:31" pos:end="165:42"><expr pos:start="165:31" pos:end="165:42"><name pos:start="165:31" pos:end="165:42"><name pos:start="165:31" pos:end="165:33">env</name><operator pos:start="165:34" pos:end="165:35">-&gt;</operator><name pos:start="165:36" pos:end="165:39">regs</name><index pos:start="165:40" pos:end="165:42">[<expr pos:start="165:41" pos:end="165:41"><literal type="number" pos:start="165:41" pos:end="165:41">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:55"><expr pos:start="167:17" pos:end="167:54"><name pos:start="167:17" pos:end="167:28"><name pos:start="167:17" pos:end="167:19">env</name><operator pos:start="167:20" pos:end="167:21">-&gt;</operator><name pos:start="167:22" pos:end="167:25">regs</name><index pos:start="167:26" pos:end="167:28">[<expr pos:start="167:27" pos:end="167:27"><literal type="number" pos:start="167:27" pos:end="167:27">0</literal></expr>]</index></name> <operator pos:start="167:30" pos:end="167:30">=</operator> <call pos:start="167:32" pos:end="167:54"><name pos:start="167:32" pos:end="167:49">do_arm_semihosting</name><argument_list pos:start="167:50" pos:end="167:54">(<argument pos:start="167:51" pos:end="167:53"><expr pos:start="167:51" pos:end="167:53"><name pos:start="167:51" pos:end="167:53">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="169:17" pos:end="169:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:69"><expr pos:start="175:9" pos:end="175:68"><call pos:start="175:9" pos:end="175:68"><name pos:start="175:9" pos:end="175:31">armv7m_nvic_set_pending</name><argument_list pos:start="175:32" pos:end="175:68">(<argument pos:start="175:33" pos:end="175:41"><expr pos:start="175:33" pos:end="175:41"><name pos:start="175:33" pos:end="175:41"><name pos:start="175:33" pos:end="175:35">env</name><operator pos:start="175:36" pos:end="175:37">-&gt;</operator><name pos:start="175:38" pos:end="175:41">nvic</name></name></expr></argument>, <argument pos:start="175:44" pos:end="175:60"><expr pos:start="175:44" pos:end="175:60"><name pos:start="175:44" pos:end="175:60">ARMV7M_EXCP_DEBUG</name></expr></argument>, <argument pos:start="175:63" pos:end="175:67"><expr pos:start="175:63" pos:end="175:67"><name pos:start="175:63" pos:end="175:67">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="177:9" pos:end="177:14">break;</break>

    <case pos:start="179:5" pos:end="179:18">case <expr pos:start="179:10" pos:end="179:17"><name pos:start="179:10" pos:end="179:17">EXCP_IRQ</name></expr>:</case>

        <break pos:start="181:9" pos:end="181:14">break;</break>

    <case pos:start="183:5" pos:end="183:29">case <expr pos:start="183:10" pos:end="183:28"><name pos:start="183:10" pos:end="183:28">EXCP_EXCEPTION_EXIT</name></expr>:</case>

        <expr_stmt pos:start="185:9" pos:end="185:35"><expr pos:start="185:9" pos:end="185:34"><call pos:start="185:9" pos:end="185:34"><name pos:start="185:9" pos:end="185:29">do_v7m_exception_exit</name><argument_list pos:start="185:30" pos:end="185:34">(<argument pos:start="185:31" pos:end="185:33"><expr pos:start="185:31" pos:end="185:33"><name pos:start="185:31" pos:end="185:33">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="187:9" pos:end="187:15">return;</return>

    <default pos:start="189:5" pos:end="189:12">default:</default>

        <expr_stmt pos:start="191:9" pos:end="191:73"><expr pos:start="191:9" pos:end="191:72"><call pos:start="191:9" pos:end="191:72"><name pos:start="191:9" pos:end="191:17">cpu_abort</name><argument_list pos:start="191:18" pos:end="191:72">(<argument pos:start="191:19" pos:end="191:20"><expr pos:start="191:19" pos:end="191:20"><name pos:start="191:19" pos:end="191:20">cs</name></expr></argument>, <argument pos:start="191:23" pos:end="191:50"><expr pos:start="191:23" pos:end="191:50"><literal type="string" pos:start="191:23" pos:end="191:50">"Unhandled exception 0x%x\n"</literal></expr></argument>, <argument pos:start="191:53" pos:end="191:71"><expr pos:start="191:53" pos:end="191:71"><name pos:start="191:53" pos:end="191:71"><name pos:start="191:53" pos:end="191:54">cs</name><operator pos:start="191:55" pos:end="191:56">-&gt;</operator><name pos:start="191:57" pos:end="191:71">exception_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="193:9" pos:end="193:15">return;</return> <comment type="block" pos:start="193:17" pos:end="193:59">/* Never happens.  Keep compiler happy.  */</comment>

    </block_content>}</block></switch>



    <expr_stmt pos:start="199:5" pos:end="207:29"><expr pos:start="199:5" pos:end="207:28"><name pos:start="199:5" pos:end="199:6">lr</name> <operator pos:start="199:8" pos:end="199:8">=</operator> <name pos:start="199:10" pos:end="199:31">R_V7M_EXCRET_RES1_MASK</name> <operator pos:start="199:33" pos:end="199:33">|</operator>

        <name pos:start="201:9" pos:end="201:27">R_V7M_EXCRET_S_MASK</name> <operator pos:start="201:29" pos:end="201:29">|</operator>

        <name pos:start="203:9" pos:end="203:30">R_V7M_EXCRET_DCRS_MASK</name> <operator pos:start="203:32" pos:end="203:32">|</operator>

        <name pos:start="205:9" pos:end="205:31">R_V7M_EXCRET_FTYPE_MASK</name> <operator pos:start="205:33" pos:end="205:33">|</operator>

        <name pos:start="207:9" pos:end="207:28">R_V7M_EXCRET_ES_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="209:5" pos:end="213:5"><if pos:start="209:5" pos:end="213:5">if <condition pos:start="209:8" pos:end="209:69">(<expr pos:start="209:9" pos:end="209:68"><name pos:start="209:9" pos:end="209:41"><name pos:start="209:9" pos:end="209:11">env</name><operator pos:start="209:12" pos:end="209:13">-&gt;</operator><name pos:start="209:14" pos:end="209:16">v7m</name><operator pos:start="209:17" pos:end="209:17">.</operator><name pos:start="209:18" pos:end="209:24">control</name><index pos:start="209:25" pos:end="209:41">[<expr pos:start="209:26" pos:end="209:40"><name pos:start="209:26" pos:end="209:40"><name pos:start="209:26" pos:end="209:28">env</name><operator pos:start="209:29" pos:end="209:30">-&gt;</operator><name pos:start="209:31" pos:end="209:33">v7m</name><operator pos:start="209:34" pos:end="209:34">.</operator><name pos:start="209:35" pos:end="209:40">secure</name></name></expr>]</index></name> <operator pos:start="209:43" pos:end="209:43">&amp;</operator> <name pos:start="209:45" pos:end="209:68">R_V7M_CONTROL_SPSEL_MASK</name></expr>)</condition> <block pos:start="209:71" pos:end="213:5">{<block_content pos:start="211:9" pos:end="211:38">

        <expr_stmt pos:start="211:9" pos:end="211:38"><expr pos:start="211:9" pos:end="211:37"><name pos:start="211:9" pos:end="211:10">lr</name> <operator pos:start="211:12" pos:end="211:13">|=</operator> <name pos:start="211:15" pos:end="211:37">R_V7M_EXCRET_SPSEL_MASK</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="215:5" pos:end="219:5"><if pos:start="215:5" pos:end="219:5">if <condition pos:start="215:8" pos:end="215:38">(<expr pos:start="215:9" pos:end="215:37"><operator pos:start="215:9" pos:end="215:9">!</operator><call pos:start="215:10" pos:end="215:37"><name pos:start="215:10" pos:end="215:32">arm_v7m_is_handler_mode</name><argument_list pos:start="215:33" pos:end="215:37">(<argument pos:start="215:34" pos:end="215:36"><expr pos:start="215:34" pos:end="215:36"><name pos:start="215:34" pos:end="215:36">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="215:40" pos:end="219:5">{<block_content pos:start="217:9" pos:end="217:37">

        <expr_stmt pos:start="217:9" pos:end="217:37"><expr pos:start="217:9" pos:end="217:36"><name pos:start="217:9" pos:end="217:10">lr</name> <operator pos:start="217:12" pos:end="217:13">|=</operator> <name pos:start="217:15" pos:end="217:36">R_V7M_EXCRET_MODE_MASK</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="223:5" pos:end="223:24"><expr pos:start="223:5" pos:end="223:23"><call pos:start="223:5" pos:end="223:23"><name pos:start="223:5" pos:end="223:18">v7m_push_stack</name><argument_list pos:start="223:19" pos:end="223:23">(<argument pos:start="223:20" pos:end="223:22"><expr pos:start="223:20" pos:end="223:22"><name pos:start="223:20" pos:end="223:22">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="225:5" pos:end="225:33"><expr pos:start="225:5" pos:end="225:32"><call pos:start="225:5" pos:end="225:32"><name pos:start="225:5" pos:end="225:23">v7m_exception_taken</name><argument_list pos:start="225:24" pos:end="225:32">(<argument pos:start="225:25" pos:end="225:27"><expr pos:start="225:25" pos:end="225:27"><name pos:start="225:25" pos:end="225:27">cpu</name></expr></argument>, <argument pos:start="225:30" pos:end="225:31"><expr pos:start="225:30" pos:end="225:31"><name pos:start="225:30" pos:end="225:31">lr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:66"><expr pos:start="227:5" pos:end="227:65"><call pos:start="227:5" pos:end="227:65"><name pos:start="227:5" pos:end="227:17">qemu_log_mask</name><argument_list pos:start="227:18" pos:end="227:65">(<argument pos:start="227:19" pos:end="227:29"><expr pos:start="227:19" pos:end="227:29"><name pos:start="227:19" pos:end="227:29">CPU_LOG_INT</name></expr></argument>, <argument pos:start="227:32" pos:end="227:44"><expr pos:start="227:32" pos:end="227:44"><literal type="string" pos:start="227:32" pos:end="227:44">"... as %d\n"</literal></expr></argument>, <argument pos:start="227:47" pos:end="227:64"><expr pos:start="227:47" pos:end="227:64"><name pos:start="227:47" pos:end="227:64"><name pos:start="227:47" pos:end="227:49">env</name><operator pos:start="227:50" pos:end="227:51">-&gt;</operator><name pos:start="227:52" pos:end="227:54">v7m</name><operator pos:start="227:55" pos:end="227:55">.</operator><name pos:start="227:56" pos:end="227:64">exception</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
