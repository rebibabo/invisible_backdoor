<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26742.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">usb_ohci_init</name><parameter_list pos:start="1:26" pos:end="7:57">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:35">OHCIState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:41">ohci</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:59"><decl pos:start="1:44" pos:end="1:59"><type pos:start="1:44" pos:end="1:59"><name pos:start="1:44" pos:end="1:54">DeviceState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">dev</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:39"><decl pos:start="3:27" pos:end="3:39"><type pos:start="3:27" pos:end="3:39"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:39">num_ports</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:65"><decl pos:start="3:42" pos:end="3:65"><type pos:start="3:42" pos:end="3:65"><name pos:start="3:42" pos:end="3:51">dma_addr_t</name></type> <name pos:start="3:53" pos:end="3:65">localmem_base</name></decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:41"><decl pos:start="5:27" pos:end="5:41"><type pos:start="5:27" pos:end="5:41"><name pos:start="5:27" pos:end="5:30">char</name> <modifier pos:start="5:32" pos:end="5:32">*</modifier></type><name pos:start="5:33" pos:end="5:41">masterbus</name></decl></parameter>, <parameter pos:start="5:44" pos:end="5:61"><decl pos:start="5:44" pos:end="5:61"><type pos:start="5:44" pos:end="5:61"><name pos:start="5:44" pos:end="5:51">uint32_t</name></type> <name pos:start="5:53" pos:end="5:61">firstport</name></decl></parameter>,

                          <parameter pos:start="7:27" pos:end="7:42"><decl pos:start="7:27" pos:end="7:42"><type pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:38">AddressSpace</name> <modifier pos:start="7:40" pos:end="7:40">*</modifier></type><name pos:start="7:41" pos:end="7:42">as</name></decl></parameter>, <parameter pos:start="7:45" pos:end="7:56"><decl pos:start="7:45" pos:end="7:56"><type pos:start="7:45" pos:end="7:56"><name pos:start="7:45" pos:end="7:49">Error</name> <modifier pos:start="7:51" pos:end="7:51">*</modifier><modifier pos:start="7:52" pos:end="7:52">*</modifier></type><name pos:start="7:53" pos:end="7:56">errp</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="115:1">{<block_content pos:start="11:5" pos:end="113:42">

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:14">err</name> <init pos:start="11:16" pos:end="11:21">= <expr pos:start="11:18" pos:end="11:21"><name pos:start="11:18" pos:end="11:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:18"><expr pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:8">ohci</name><operator pos:start="17:9" pos:end="17:10">-&gt;</operator><name pos:start="17:11" pos:end="17:12">as</name></name> <operator pos:start="17:14" pos:end="17:14">=</operator> <name pos:start="17:16" pos:end="17:17">as</name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="47:5"><if pos:start="21:5" pos:end="47:5">if <condition pos:start="21:8" pos:end="21:28">(<expr pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:22">usb_frame_time</name> <operator pos:start="21:24" pos:end="21:25">==</operator> <literal type="number" pos:start="21:27" pos:end="21:27">0</literal></expr>)</condition> <block pos:start="21:30" pos:end="47:5">{<block_content pos:start="25:9" pos:end="45:63">

<cpp:ifdef pos:start="23:1" pos:end="23:21">#<cpp:directive pos:start="23:2" pos:end="23:6">ifdef</cpp:directive> <name pos:start="23:8" pos:end="23:21">OHCI_TIME_WARP</name></cpp:ifdef>

        <expr_stmt pos:start="25:9" pos:end="25:45"><expr pos:start="25:9" pos:end="25:44"><name pos:start="25:9" pos:end="25:22">usb_frame_time</name> <operator pos:start="25:24" pos:end="25:24">=</operator> <call pos:start="25:26" pos:end="25:44"><name pos:start="25:26" pos:end="25:42">get_ticks_per_sec</name><argument_list pos:start="25:43" pos:end="25:44">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="30:0"><expr pos:start="27:9" pos:end="27:68"><name pos:start="27:9" pos:end="27:20">usb_bit_time</name> <operator pos:start="27:22" pos:end="27:22">=</operator> <call pos:start="27:24" pos:end="27:68"><name pos:start="27:24" pos:end="27:31">muldiv64</name><argument_list pos:start="27:32" pos:end="27:68">(<argument pos:start="27:33" pos:end="27:33"><expr pos:start="27:33" pos:end="27:33"><literal type="number" pos:start="27:33" pos:end="27:33">1</literal></expr></argument>, <argument pos:start="27:36" pos:end="27:54"><expr pos:start="27:36" pos:end="27:54"><call pos:start="27:36" pos:end="27:54"><name pos:start="27:36" pos:end="27:52">get_ticks_per_sec</name><argument_list pos:start="27:53" pos:end="27:54">()</argument_list></call></expr></argument>, <argument pos:start="27:57" pos:end="27:67"><expr pos:start="27:57" pos:end="27:67"><name pos:start="27:57" pos:end="27:62">USB_HZ</name><operator pos:start="27:63" pos:end="27:63">/</operator><literal type="number" pos:start="27:64" pos:end="27:67">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="29:1" pos:end="29:5">#<cpp:directive pos:start="29:2" pos:end="29:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="31:9" pos:end="31:64"><expr pos:start="31:9" pos:end="31:63"><name pos:start="31:9" pos:end="31:22">usb_frame_time</name> <operator pos:start="31:24" pos:end="31:24">=</operator> <call pos:start="31:26" pos:end="31:63"><name pos:start="31:26" pos:end="31:33">muldiv64</name><argument_list pos:start="31:34" pos:end="31:63">(<argument pos:start="31:35" pos:end="31:35"><expr pos:start="31:35" pos:end="31:35"><literal type="number" pos:start="31:35" pos:end="31:35">1</literal></expr></argument>, <argument pos:start="31:38" pos:end="31:56"><expr pos:start="31:38" pos:end="31:56"><call pos:start="31:38" pos:end="31:56"><name pos:start="31:38" pos:end="31:54">get_ticks_per_sec</name><argument_list pos:start="31:55" pos:end="31:56">()</argument_list></call></expr></argument>, <argument pos:start="31:59" pos:end="31:62"><expr pos:start="31:59" pos:end="31:62"><literal type="number" pos:start="31:59" pos:end="31:62">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="44:0"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:42">(<expr pos:start="33:13" pos:end="33:41"><call pos:start="33:13" pos:end="33:31"><name pos:start="33:13" pos:end="33:29">get_ticks_per_sec</name><argument_list pos:start="33:30" pos:end="33:31">()</argument_list></call> <operator pos:start="33:33" pos:end="33:34">&gt;=</operator> <name pos:start="33:36" pos:end="33:41">USB_HZ</name></expr>)</condition> <block pos:start="33:44" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:68">

            <expr_stmt pos:start="35:13" pos:end="35:68"><expr pos:start="35:13" pos:end="35:67"><name pos:start="35:13" pos:end="35:24">usb_bit_time</name> <operator pos:start="35:26" pos:end="35:26">=</operator> <call pos:start="35:28" pos:end="35:67"><name pos:start="35:28" pos:end="35:35">muldiv64</name><argument_list pos:start="35:36" pos:end="35:67">(<argument pos:start="35:37" pos:end="35:37"><expr pos:start="35:37" pos:end="35:37"><literal type="number" pos:start="35:37" pos:end="35:37">1</literal></expr></argument>, <argument pos:start="35:40" pos:end="35:58"><expr pos:start="35:40" pos:end="35:58"><call pos:start="35:40" pos:end="35:58"><name pos:start="35:40" pos:end="35:56">get_ticks_per_sec</name><argument_list pos:start="35:57" pos:end="35:58">()</argument_list></call></expr></argument>, <argument pos:start="35:61" pos:end="35:66"><expr pos:start="35:61" pos:end="35:66"><name pos:start="35:61" pos:end="35:66">USB_HZ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="37:11" pos:end="44:0">else <block pos:start="37:16" pos:end="44:0">{<block_content pos:start="39:13" pos:end="39:29">

            <expr_stmt pos:start="39:13" pos:end="39:29"><expr pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:24">usb_bit_time</name> <operator pos:start="39:26" pos:end="39:26">=</operator> <literal type="number" pos:start="39:28" pos:end="39:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="45:9" pos:end="45:63"><expr pos:start="45:9" pos:end="45:62"><call pos:start="45:9" pos:end="45:62"><name pos:start="45:9" pos:end="45:32">trace_usb_ohci_init_time</name><argument_list pos:start="45:33" pos:end="45:62">(<argument pos:start="45:34" pos:end="45:47"><expr pos:start="45:34" pos:end="45:47"><name pos:start="45:34" pos:end="45:47">usb_frame_time</name></expr></argument>, <argument pos:start="45:50" pos:end="45:61"><expr pos:start="45:50" pos:end="45:61"><name pos:start="45:50" pos:end="45:61">usb_bit_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:32"><expr pos:start="51:5" pos:end="51:31"><name pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:8">ohci</name><operator pos:start="51:9" pos:end="51:10">-&gt;</operator><name pos:start="51:11" pos:end="51:19">num_ports</name></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:31">num_ports</name></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="93:5"><if pos:start="53:5" pos:end="79:5">if <condition pos:start="53:8" pos:end="53:18">(<expr pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:17">masterbus</name></expr>)</condition> <block pos:start="53:20" pos:end="79:5">{<block_content pos:start="55:9" pos:end="77:9">

        <decl_stmt pos:start="55:9" pos:end="55:39"><decl pos:start="55:9" pos:end="55:38"><type pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:15">USBPort</name> <modifier pos:start="55:17" pos:end="55:17">*</modifier></type><name pos:start="55:18" pos:end="55:38"><name pos:start="55:18" pos:end="55:22">ports</name><index pos:start="55:23" pos:end="55:38">[<expr pos:start="55:24" pos:end="55:37"><name pos:start="55:24" pos:end="55:37">OHCI_MAX_PORTS</name></expr>]</index></name></decl>;</decl_stmt>

        <for pos:start="57:9" pos:end="61:9">for<control pos:start="57:12" pos:end="57:38">(<init pos:start="57:13" pos:end="57:18"><expr pos:start="57:13" pos:end="57:17"><name pos:start="57:13" pos:end="57:13">i</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <literal type="number" pos:start="57:17" pos:end="57:17">0</literal></expr>;</init> <condition pos:start="57:20" pos:end="57:33"><expr pos:start="57:20" pos:end="57:32"><name pos:start="57:20" pos:end="57:20">i</name> <operator pos:start="57:22" pos:end="57:22">&lt;</operator> <name pos:start="57:24" pos:end="57:32">num_ports</name></expr>;</condition> <incr pos:start="57:35" pos:end="57:37"><expr pos:start="57:35" pos:end="57:37"><name pos:start="57:35" pos:end="57:35">i</name><operator pos:start="57:36" pos:end="57:37">++</operator></expr></incr>)</control> <block pos:start="57:40" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:45">

            <expr_stmt pos:start="59:13" pos:end="59:45"><expr pos:start="59:13" pos:end="59:44"><name pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:17">ports</name><index pos:start="59:18" pos:end="59:20">[<expr pos:start="59:19" pos:end="59:19"><name pos:start="59:19" pos:end="59:19">i</name></expr>]</index></name> <operator pos:start="59:22" pos:end="59:22">=</operator> <operator pos:start="59:24" pos:end="59:24">&amp;</operator><name pos:start="59:25" pos:end="59:39"><name pos:start="59:25" pos:end="59:28">ohci</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:36">rhport</name><index pos:start="59:37" pos:end="59:39">[<expr pos:start="59:38" pos:end="59:38"><name pos:start="59:38" pos:end="59:38">i</name></expr>]</index></name><operator pos:start="59:40" pos:end="59:40">.</operator><name pos:start="59:41" pos:end="59:44">port</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="63:9" pos:end="69:37"><expr pos:start="63:9" pos:end="69:36"><call pos:start="63:9" pos:end="69:36"><name pos:start="63:9" pos:end="63:30">usb_register_companion</name><argument_list pos:start="63:31" pos:end="69:36">(<argument pos:start="63:32" pos:end="63:40"><expr pos:start="63:32" pos:end="63:40"><name pos:start="63:32" pos:end="63:40">masterbus</name></expr></argument>, <argument pos:start="63:43" pos:end="63:47"><expr pos:start="63:43" pos:end="63:47"><name pos:start="63:43" pos:end="63:47">ports</name></expr></argument>, <argument pos:start="63:50" pos:end="63:58"><expr pos:start="63:50" pos:end="63:58"><name pos:start="63:50" pos:end="63:58">num_ports</name></expr></argument>,

                               <argument pos:start="65:32" pos:end="65:40"><expr pos:start="65:32" pos:end="65:40"><name pos:start="65:32" pos:end="65:40">firstport</name></expr></argument>, <argument pos:start="65:43" pos:end="65:46"><expr pos:start="65:43" pos:end="65:46"><name pos:start="65:43" pos:end="65:46">ohci</name></expr></argument>, <argument pos:start="65:49" pos:end="65:62"><expr pos:start="65:49" pos:end="65:62"><operator pos:start="65:49" pos:end="65:49">&amp;</operator><name pos:start="65:50" pos:end="65:62">ohci_port_ops</name></expr></argument>,

                               <argument pos:start="67:32" pos:end="67:71"><expr pos:start="67:32" pos:end="67:71"><name pos:start="67:32" pos:end="67:49">USB_SPEED_MASK_LOW</name> <operator pos:start="67:51" pos:end="67:51">|</operator> <name pos:start="67:53" pos:end="67:71">USB_SPEED_MASK_FULL</name></expr></argument>,

                               <argument pos:start="69:32" pos:end="69:35"><expr pos:start="69:32" pos:end="69:35"><operator pos:start="69:32" pos:end="69:32">&amp;</operator><name pos:start="69:33" pos:end="69:35">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="77:9"><if pos:start="71:9" pos:end="77:9">if <condition pos:start="71:12" pos:end="71:16">(<expr pos:start="71:13" pos:end="71:15"><name pos:start="71:13" pos:end="71:15">err</name></expr>)</condition> <block pos:start="71:18" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:19">

            <expr_stmt pos:start="73:13" pos:end="73:39"><expr pos:start="73:13" pos:end="73:38"><call pos:start="73:13" pos:end="73:38"><name pos:start="73:13" pos:end="73:27">error_propagate</name><argument_list pos:start="73:28" pos:end="73:38">(<argument pos:start="73:29" pos:end="73:32"><expr pos:start="73:29" pos:end="73:32"><name pos:start="73:29" pos:end="73:32">errp</name></expr></argument>, <argument pos:start="73:35" pos:end="73:37"><expr pos:start="73:35" pos:end="73:37"><name pos:start="73:35" pos:end="73:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="75:13" pos:end="75:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="93:5">else <block pos:start="79:12" pos:end="93:5">{<block_content pos:start="81:9" pos:end="91:9">

        <expr_stmt pos:start="81:9" pos:end="81:71"><expr pos:start="81:9" pos:end="81:70"><call pos:start="81:9" pos:end="81:70"><name pos:start="81:9" pos:end="81:19">usb_bus_new</name><argument_list pos:start="81:20" pos:end="81:70">(<argument pos:start="81:21" pos:end="81:30"><expr pos:start="81:21" pos:end="81:30"><operator pos:start="81:21" pos:end="81:21">&amp;</operator><name pos:start="81:22" pos:end="81:30"><name pos:start="81:22" pos:end="81:25">ohci</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:30">bus</name></name></expr></argument>, <argument pos:start="81:33" pos:end="81:49"><expr pos:start="81:33" pos:end="81:49"><sizeof pos:start="81:33" pos:end="81:49">sizeof<argument_list pos:start="81:39" pos:end="81:49">(<argument pos:start="81:40" pos:end="81:48"><expr pos:start="81:40" pos:end="81:48"><name pos:start="81:40" pos:end="81:48"><name pos:start="81:40" pos:end="81:43">ohci</name><operator pos:start="81:44" pos:end="81:45">-&gt;</operator><name pos:start="81:46" pos:end="81:48">bus</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="81:52" pos:end="81:64"><expr pos:start="81:52" pos:end="81:64"><operator pos:start="81:52" pos:end="81:52">&amp;</operator><name pos:start="81:53" pos:end="81:64">ohci_bus_ops</name></expr></argument>, <argument pos:start="81:67" pos:end="81:69"><expr pos:start="81:67" pos:end="81:69"><name pos:start="81:67" pos:end="81:69">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="83:9" pos:end="91:9">for <control pos:start="83:13" pos:end="83:39">(<init pos:start="83:14" pos:end="83:19"><expr pos:start="83:14" pos:end="83:18"><name pos:start="83:14" pos:end="83:14">i</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <literal type="number" pos:start="83:18" pos:end="83:18">0</literal></expr>;</init> <condition pos:start="83:21" pos:end="83:34"><expr pos:start="83:21" pos:end="83:33"><name pos:start="83:21" pos:end="83:21">i</name> <operator pos:start="83:23" pos:end="83:23">&lt;</operator> <name pos:start="83:25" pos:end="83:33">num_ports</name></expr>;</condition> <incr pos:start="83:36" pos:end="83:38"><expr pos:start="83:36" pos:end="83:38"><name pos:start="83:36" pos:end="83:36">i</name><operator pos:start="83:37" pos:end="83:38">++</operator></expr></incr>)</control> <block pos:start="83:41" pos:end="91:9">{<block_content pos:start="85:13" pos:end="89:72">

            <expr_stmt pos:start="85:13" pos:end="89:72"><expr pos:start="85:13" pos:end="89:71"><call pos:start="85:13" pos:end="89:71"><name pos:start="85:13" pos:end="85:29">usb_register_port</name><argument_list pos:start="85:30" pos:end="89:71">(<argument pos:start="85:31" pos:end="85:40"><expr pos:start="85:31" pos:end="85:40"><operator pos:start="85:31" pos:end="85:31">&amp;</operator><name pos:start="85:32" pos:end="85:40"><name pos:start="85:32" pos:end="85:35">ohci</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:40">bus</name></name></expr></argument>, <argument pos:start="85:43" pos:end="85:63"><expr pos:start="85:43" pos:end="85:63"><operator pos:start="85:43" pos:end="85:43">&amp;</operator><name pos:start="85:44" pos:end="85:58"><name pos:start="85:44" pos:end="85:47">ohci</name><operator pos:start="85:48" pos:end="85:49">-&gt;</operator><name pos:start="85:50" pos:end="85:55">rhport</name><index pos:start="85:56" pos:end="85:58">[<expr pos:start="85:57" pos:end="85:57"><name pos:start="85:57" pos:end="85:57">i</name></expr>]</index></name><operator pos:start="85:59" pos:end="85:59">.</operator><name pos:start="85:60" pos:end="85:63">port</name></expr></argument>,

                              <argument pos:start="87:31" pos:end="87:34"><expr pos:start="87:31" pos:end="87:34"><name pos:start="87:31" pos:end="87:34">ohci</name></expr></argument>, <argument pos:start="87:37" pos:end="87:37"><expr pos:start="87:37" pos:end="87:37"><name pos:start="87:37" pos:end="87:37">i</name></expr></argument>, <argument pos:start="87:40" pos:end="87:53"><expr pos:start="87:40" pos:end="87:53"><operator pos:start="87:40" pos:end="87:40">&amp;</operator><name pos:start="87:41" pos:end="87:53">ohci_port_ops</name></expr></argument>,

                              <argument pos:start="89:31" pos:end="89:70"><expr pos:start="89:31" pos:end="89:70"><name pos:start="89:31" pos:end="89:48">USB_SPEED_MASK_LOW</name> <operator pos:start="89:50" pos:end="89:50">|</operator> <name pos:start="89:52" pos:end="89:70">USB_SPEED_MASK_FULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="99:45"><expr pos:start="97:5" pos:end="99:44"><call pos:start="97:5" pos:end="99:44"><name pos:start="97:5" pos:end="97:25">memory_region_init_io</name><argument_list pos:start="97:26" pos:end="99:44">(<argument pos:start="97:27" pos:end="97:36"><expr pos:start="97:27" pos:end="97:36"><operator pos:start="97:27" pos:end="97:27">&amp;</operator><name pos:start="97:28" pos:end="97:36"><name pos:start="97:28" pos:end="97:31">ohci</name><operator pos:start="97:32" pos:end="97:33">-&gt;</operator><name pos:start="97:34" pos:end="97:36">mem</name></name></expr></argument>, <argument pos:start="97:39" pos:end="97:49"><expr pos:start="97:39" pos:end="97:49"><call pos:start="97:39" pos:end="97:49"><name pos:start="97:39" pos:end="97:44">OBJECT</name><argument_list pos:start="97:45" pos:end="97:49">(<argument pos:start="97:46" pos:end="97:48"><expr pos:start="97:46" pos:end="97:48"><name pos:start="97:46" pos:end="97:48">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="97:52" pos:end="97:64"><expr pos:start="97:52" pos:end="97:64"><operator pos:start="97:52" pos:end="97:52">&amp;</operator><name pos:start="97:53" pos:end="97:64">ohci_mem_ops</name></expr></argument>,

                          <argument pos:start="99:27" pos:end="99:30"><expr pos:start="99:27" pos:end="99:30"><name pos:start="99:27" pos:end="99:30">ohci</name></expr></argument>, <argument pos:start="99:33" pos:end="99:38"><expr pos:start="99:33" pos:end="99:38"><literal type="string" pos:start="99:33" pos:end="99:38">"ohci"</literal></expr></argument>, <argument pos:start="99:41" pos:end="99:43"><expr pos:start="99:41" pos:end="99:43"><literal type="number" pos:start="99:41" pos:end="99:43">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:40"><expr pos:start="101:5" pos:end="101:39"><name pos:start="101:5" pos:end="101:23"><name pos:start="101:5" pos:end="101:8">ohci</name><operator pos:start="101:9" pos:end="101:10">-&gt;</operator><name pos:start="101:11" pos:end="101:23">localmem_base</name></name> <operator pos:start="101:25" pos:end="101:25">=</operator> <name pos:start="101:27" pos:end="101:39">localmem_base</name></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:50"><expr pos:start="105:5" pos:end="105:49"><name pos:start="105:5" pos:end="105:14"><name pos:start="105:5" pos:end="105:8">ohci</name><operator pos:start="105:9" pos:end="105:10">-&gt;</operator><name pos:start="105:11" pos:end="105:14">name</name></name> <operator pos:start="105:16" pos:end="105:16">=</operator> <call pos:start="105:18" pos:end="105:49"><name pos:start="105:18" pos:end="105:36">object_get_typename</name><argument_list pos:start="105:37" pos:end="105:49">(<argument pos:start="105:38" pos:end="105:48"><expr pos:start="105:38" pos:end="105:48"><call pos:start="105:38" pos:end="105:48"><name pos:start="105:38" pos:end="105:43">OBJECT</name><argument_list pos:start="105:44" pos:end="105:48">(<argument pos:start="105:45" pos:end="105:47"><expr pos:start="105:45" pos:end="105:47"><name pos:start="105:45" pos:end="105:47">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:39"><expr pos:start="107:5" pos:end="107:38"><call pos:start="107:5" pos:end="107:38"><name pos:start="107:5" pos:end="107:19">usb_packet_init</name><argument_list pos:start="107:20" pos:end="107:38">(<argument pos:start="107:21" pos:end="107:37"><expr pos:start="107:21" pos:end="107:37"><operator pos:start="107:21" pos:end="107:21">&amp;</operator><name pos:start="107:22" pos:end="107:37"><name pos:start="107:22" pos:end="107:25">ohci</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:37">usb_packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:23"><expr pos:start="111:5" pos:end="111:22"><name pos:start="111:5" pos:end="111:18"><name pos:start="111:5" pos:end="111:8">ohci</name><operator pos:start="111:9" pos:end="111:10">-&gt;</operator><name pos:start="111:11" pos:end="111:18">async_td</name></name> <operator pos:start="111:20" pos:end="111:20">=</operator> <literal type="number" pos:start="111:22" pos:end="111:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:42"><expr pos:start="113:5" pos:end="113:41"><call pos:start="113:5" pos:end="113:41"><name pos:start="113:5" pos:end="113:23">qemu_register_reset</name><argument_list pos:start="113:24" pos:end="113:41">(<argument pos:start="113:25" pos:end="113:34"><expr pos:start="113:25" pos:end="113:34"><name pos:start="113:25" pos:end="113:34">ohci_reset</name></expr></argument>, <argument pos:start="113:37" pos:end="113:40"><expr pos:start="113:37" pos:end="113:40"><name pos:start="113:37" pos:end="113:40">ohci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
