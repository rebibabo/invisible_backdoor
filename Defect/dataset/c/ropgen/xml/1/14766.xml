<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14766.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">gif_parse_next_image</name><parameter_list pos:start="1:32" pos:end="1:44">(<parameter pos:start="1:33" pos:end="1:43"><decl pos:start="1:33" pos:end="1:43"><type pos:start="1:33" pos:end="1:42"><name pos:start="1:33" pos:end="1:40">GifState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:15">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ByteIOContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">f</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:24">s</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:27">f</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:17">code</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="61:5">for <control pos:start="11:9" pos:end="11:12">(<init pos:start="11:10" pos:end="11:10">;</init><condition pos:start="11:11" pos:end="11:11">;</condition><incr/>)</control> <block pos:start="11:14" pos:end="61:5">{<block_content pos:start="13:9" pos:end="59:9">

        <expr_stmt pos:start="13:9" pos:end="16:0"><expr pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:12">code</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <call pos:start="13:16" pos:end="13:27"><name pos:start="13:16" pos:end="13:24">url_fgetc</name><argument_list pos:start="13:25" pos:end="13:27">(<argument pos:start="13:26" pos:end="13:26"><expr pos:start="13:26" pos:end="13:26"><name pos:start="13:26" pos:end="13:26">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="15:1" pos:end="15:12">#<cpp:directive pos:start="15:2" pos:end="15:6">ifdef</cpp:directive> <name pos:start="15:8" pos:end="15:12">DEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="17:9" pos:end="20:0"><expr pos:start="17:9" pos:end="17:51"><call pos:start="17:9" pos:end="17:51"><name pos:start="17:9" pos:end="17:14">printf</name><argument_list pos:start="17:15" pos:end="17:51">(<argument pos:start="17:16" pos:end="17:38"><expr pos:start="17:16" pos:end="17:38"><literal type="string" pos:start="17:16" pos:end="17:38">"gif: code=%02x '%c'\n"</literal></expr></argument>, <argument pos:start="17:41" pos:end="17:44"><expr pos:start="17:41" pos:end="17:44"><name pos:start="17:41" pos:end="17:44">code</name></expr></argument>, <argument pos:start="17:47" pos:end="17:50"><expr pos:start="17:47" pos:end="17:50"><name pos:start="17:47" pos:end="17:50">code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>

        <switch pos:start="21:9" pos:end="59:9">switch <condition pos:start="21:16" pos:end="21:21">(<expr pos:start="21:17" pos:end="21:20"><name pos:start="21:17" pos:end="21:20">code</name></expr>)</condition> <block pos:start="21:23" pos:end="59:9">{<block_content pos:start="23:9" pos:end="57:25">

        <case pos:start="23:9" pos:end="23:17">case <expr pos:start="23:14" pos:end="23:16"><literal type="char" pos:start="23:14" pos:end="23:16">','</literal></expr>:</case>

            <if_stmt pos:start="25:13" pos:end="27:36"><if pos:start="25:13" pos:end="27:36">if <condition pos:start="25:16" pos:end="25:38">(<expr pos:start="25:17" pos:end="25:37"><call pos:start="25:17" pos:end="25:33"><name pos:start="25:17" pos:end="25:30">gif_read_image</name><argument_list pos:start="25:31" pos:end="25:33">(<argument pos:start="25:32" pos:end="25:32"><expr pos:start="25:32" pos:end="25:32"><name pos:start="25:32" pos:end="25:32">s</name></expr></argument>)</argument_list></call> <operator pos:start="25:35" pos:end="25:35">&lt;</operator> <literal type="number" pos:start="25:37" pos:end="25:37">0</literal></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:36"><block_content pos:start="27:17" pos:end="27:36">

                <return pos:start="27:17" pos:end="27:36">return <expr pos:start="27:24" pos:end="27:35"><call pos:start="27:24" pos:end="27:35"><name pos:start="27:24" pos:end="27:30">AVERROR</name><argument_list pos:start="27:31" pos:end="27:35">(<argument pos:start="27:32" pos:end="27:34"><expr pos:start="27:32" pos:end="27:34"><name pos:start="27:32" pos:end="27:34">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:20"><expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>;</expr_stmt>

            <goto pos:start="31:13" pos:end="31:25">goto <name pos:start="31:18" pos:end="31:24">the_end</name>;</goto>

        <case pos:start="33:9" pos:end="33:17">case <expr pos:start="33:14" pos:end="33:16"><literal type="char" pos:start="33:14" pos:end="33:16">';'</literal></expr>:</case>

            <comment type="block" pos:start="35:13" pos:end="35:30">/* end of image */</comment>

            <expr_stmt pos:start="37:13" pos:end="37:31"><expr pos:start="37:13" pos:end="37:30"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:30"><name pos:start="37:19" pos:end="37:25">AVERROR</name><argument_list pos:start="37:26" pos:end="37:30">(<argument pos:start="37:27" pos:end="37:29"><expr pos:start="37:27" pos:end="37:29"><name pos:start="37:27" pos:end="37:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="39:13" pos:end="39:25">goto <name pos:start="39:18" pos:end="39:24">the_end</name>;</goto>

        <case pos:start="41:9" pos:end="41:17">case <expr pos:start="41:14" pos:end="41:16"><literal type="char" pos:start="41:14" pos:end="41:16">'!'</literal></expr>:</case>

            <if_stmt pos:start="43:13" pos:end="45:36"><if pos:start="43:13" pos:end="45:36">if <condition pos:start="43:16" pos:end="43:42">(<expr pos:start="43:17" pos:end="43:41"><call pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:34">gif_read_extension</name><argument_list pos:start="43:35" pos:end="43:37">(<argument pos:start="43:36" pos:end="43:36"><expr pos:start="43:36" pos:end="43:36"><name pos:start="43:36" pos:end="43:36">s</name></expr></argument>)</argument_list></call> <operator pos:start="43:39" pos:end="43:39">&lt;</operator> <literal type="number" pos:start="43:41" pos:end="43:41">0</literal></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:36"><block_content pos:start="45:17" pos:end="45:36">

                <return pos:start="45:17" pos:end="45:36">return <expr pos:start="45:24" pos:end="45:35"><call pos:start="45:24" pos:end="45:35"><name pos:start="45:24" pos:end="45:30">AVERROR</name><argument_list pos:start="45:31" pos:end="45:35">(<argument pos:start="45:32" pos:end="45:34"><expr pos:start="45:32" pos:end="45:34"><name pos:start="45:32" pos:end="45:34">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        <case pos:start="49:9" pos:end="49:17">case <expr pos:start="49:14" pos:end="49:16"><name pos:start="49:14" pos:end="49:16">EOF</name></expr>:</case>

        <default pos:start="51:9" pos:end="51:16">default:</default>

            <comment type="block" pos:start="53:13" pos:end="53:39">/* error or errneous EOF */</comment>

            <expr_stmt pos:start="55:13" pos:end="55:31"><expr pos:start="55:13" pos:end="55:30"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:30"><name pos:start="55:19" pos:end="55:25">AVERROR</name><argument_list pos:start="55:26" pos:end="55:30">(<argument pos:start="55:27" pos:end="55:29"><expr pos:start="55:27" pos:end="55:29"><name pos:start="55:27" pos:end="55:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="57:13" pos:end="57:25">goto <name pos:start="57:18" pos:end="57:24">the_end</name>;</goto>

        </block_content>}</block></switch>

    </block_content>}</block></for>

  <label pos:start="63:3" pos:end="63:10"><name pos:start="63:3" pos:end="63:9">the_end</name>:</label>

    <return pos:start="65:5" pos:end="65:15">return <expr pos:start="65:12" pos:end="65:14"><name pos:start="65:12" pos:end="65:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
