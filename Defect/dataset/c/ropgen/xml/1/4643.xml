<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4643.c" pos:tabs="8"><function pos:start="1:1" pos:end="251:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:42">gen_intermediate_code_internal</name><parameter_list pos:start="1:43" pos:end="3:44">(<parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:55">CPULM32State</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">env</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:28"><decl pos:start="3:9" pos:end="3:28"><type pos:start="3:9" pos:end="3:28"><name pos:start="3:9" pos:end="3:24">TranslationBlock</name> <modifier pos:start="3:26" pos:end="3:26">*</modifier></type><name pos:start="3:27" pos:end="3:28">tb</name></decl></parameter>, <parameter pos:start="3:31" pos:end="3:43"><decl pos:start="3:31" pos:end="3:43"><type pos:start="3:31" pos:end="3:43"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:43">search_pc</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="251:1">{<block_content pos:start="7:5" pos:end="250:0">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:23">DisasContext</name></name></type> <name pos:start="7:25" pos:end="7:27">ctx</name></decl>, <decl pos:start="7:30" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:23"><modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:32">dc</name> <init pos:start="7:34" pos:end="7:39">= <expr pos:start="7:36" pos:end="7:39"><operator pos:start="7:36" pos:end="7:36">&amp;</operator><name pos:start="7:37" pos:end="7:39">ctx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">uint16_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:25">gen_opc_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:21">pc_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">j</name></decl>, <decl pos:start="13:12" pos:end="13:13"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:13">lj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:28">next_page_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:17">num_insns</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">max_insns</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><call pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:25">qemu_log_try_set_file</name><argument_list pos:start="23:26" pos:end="23:33">(<argument pos:start="23:27" pos:end="23:32"><expr pos:start="23:27" pos:end="23:32"><name pos:start="23:27" pos:end="23:32">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:12">pc_start</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:21"><name pos:start="27:16" pos:end="27:17">tb</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:21">pc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:6">dc</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:11">env</name></name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:17">env</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:16"><expr pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:10"><name pos:start="31:5" pos:end="31:6">dc</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:10">tb</name></name> <operator pos:start="31:12" pos:end="31:12">=</operator> <name pos:start="31:14" pos:end="31:15">tb</name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:15">gen_opc_end</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:37"><name pos:start="35:19" pos:end="35:25">tcg_ctx</name><operator pos:start="35:26" pos:end="35:26">.</operator><name pos:start="35:27" pos:end="35:37">gen_opc_buf</name></name> <operator pos:start="35:39" pos:end="35:39">+</operator> <name pos:start="35:41" pos:end="35:52">OPC_MAX_SIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:14"><name pos:start="39:5" pos:end="39:6">dc</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:14">is_jmp</name></name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:27">DISAS_NEXT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:22"><expr pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:10"><name pos:start="41:5" pos:end="41:6">dc</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:10">pc</name></name> <operator pos:start="41:12" pos:end="41:12">=</operator> <name pos:start="41:14" pos:end="41:21">pc_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:53"><expr pos:start="43:5" pos:end="43:52"><name pos:start="43:5" pos:end="43:26"><name pos:start="43:5" pos:end="43:6">dc</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:26">singlestep_enabled</name></name> <operator pos:start="43:28" pos:end="43:28">=</operator> <name pos:start="43:30" pos:end="43:52"><name pos:start="43:30" pos:end="43:32">env</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:52">singlestep_enabled</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:20"><expr pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:6">dc</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:15">nr_nops</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="53:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:21">(<expr pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:16">pc_start</name> <operator pos:start="49:18" pos:end="49:18">&amp;</operator> <literal type="number" pos:start="49:20" pos:end="49:20">3</literal></expr>)</condition> <block pos:start="49:23" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:60">

        <expr_stmt pos:start="51:9" pos:end="51:60"><expr pos:start="51:9" pos:end="51:59"><call pos:start="51:9" pos:end="51:59"><name pos:start="51:9" pos:end="51:17">cpu_abort</name><argument_list pos:start="51:18" pos:end="51:59">(<argument pos:start="51:19" pos:end="51:21"><expr pos:start="51:19" pos:end="51:21"><name pos:start="51:19" pos:end="51:21">env</name></expr></argument>, <argument pos:start="51:24" pos:end="51:48"><expr pos:start="51:24" pos:end="51:48"><literal type="string" pos:start="51:24" pos:end="51:48">"LM32: unaligned PC=%x\n"</literal></expr></argument>, <argument pos:start="51:51" pos:end="51:58"><expr pos:start="51:51" pos:end="51:58"><name pos:start="51:51" pos:end="51:58">pc_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:46">(<expr pos:start="57:9" pos:end="57:45"><call pos:start="57:9" pos:end="57:45"><name pos:start="57:9" pos:end="57:26">qemu_loglevel_mask</name><argument_list pos:start="57:27" pos:end="57:45">(<argument pos:start="57:28" pos:end="57:44"><expr pos:start="57:28" pos:end="57:44"><name pos:start="57:28" pos:end="57:44">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:48" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:30">

        <expr_stmt pos:start="59:9" pos:end="59:64"><expr pos:start="59:9" pos:end="59:63"><call pos:start="59:9" pos:end="59:63"><name pos:start="59:9" pos:end="59:16">qemu_log</name><argument_list pos:start="59:17" pos:end="59:63">(<argument pos:start="59:18" pos:end="59:62"><expr pos:start="59:18" pos:end="59:62"><literal type="string" pos:start="59:18" pos:end="59:62">"-----------------------------------------\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:30"><expr pos:start="61:9" pos:end="61:29"><call pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:21">log_cpu_state</name><argument_list pos:start="61:22" pos:end="61:29">(<argument pos:start="61:23" pos:end="61:25"><expr pos:start="61:23" pos:end="61:25"><name pos:start="61:23" pos:end="61:25">env</name></expr></argument>, <argument pos:start="61:28" pos:end="61:28"><expr pos:start="61:28" pos:end="61:28"><literal type="number" pos:start="61:28" pos:end="61:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:71"><expr pos:start="67:5" pos:end="67:70"><name pos:start="67:5" pos:end="67:19">next_page_start</name> <operator pos:start="67:21" pos:end="67:21">=</operator> <operator pos:start="67:23" pos:end="67:23">(</operator><name pos:start="67:24" pos:end="67:31">pc_start</name> <operator pos:start="67:33" pos:end="67:33">&amp;</operator> <name pos:start="67:35" pos:end="67:50">TARGET_PAGE_MASK</name><operator pos:start="67:51" pos:end="67:51">)</operator> <operator pos:start="67:53" pos:end="67:53">+</operator> <name pos:start="67:55" pos:end="67:70">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:12"><expr pos:start="69:5" pos:end="69:11"><name pos:start="69:5" pos:end="69:6">lj</name> <operator pos:start="69:8" pos:end="69:8">=</operator> <operator pos:start="69:10" pos:end="69:10">-</operator><literal type="number" pos:start="69:11" pos:end="69:11">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:18"><expr pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:13">num_insns</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <literal type="number" pos:start="71:17" pos:end="71:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:43"><expr pos:start="73:5" pos:end="73:42"><name pos:start="73:5" pos:end="73:13">max_insns</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <name pos:start="73:17" pos:end="73:26"><name pos:start="73:17" pos:end="73:18">tb</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:26">cflags</name></name> <operator pos:start="73:28" pos:end="73:28">&amp;</operator> <name pos:start="73:30" pos:end="73:42">CF_COUNT_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:23">(<expr pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:17">max_insns</name> <operator pos:start="75:19" pos:end="75:20">==</operator> <literal type="number" pos:start="75:22" pos:end="75:22">0</literal></expr>)</condition> <block pos:start="75:25" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:34">

        <expr_stmt pos:start="77:9" pos:end="77:34"><expr pos:start="77:9" pos:end="77:33"><name pos:start="77:9" pos:end="77:17">max_insns</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <name pos:start="77:21" pos:end="77:33">CF_COUNT_MASK</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:23"><expr pos:start="83:5" pos:end="83:22"><call pos:start="83:5" pos:end="83:22"><name pos:start="83:5" pos:end="83:20">gen_icount_start</name><argument_list pos:start="83:21" pos:end="83:22">()</argument_list></call></expr>;</expr_stmt>

    <do pos:start="85:5" pos:end="149:35">do <block pos:start="85:8" pos:end="139:5">{<block_content pos:start="87:9" pos:end="135:20">

        <expr_stmt pos:start="87:9" pos:end="87:34"><expr pos:start="87:9" pos:end="87:33"><call pos:start="87:9" pos:end="87:33"><name pos:start="87:9" pos:end="87:24">check_breakpoint</name><argument_list pos:start="87:25" pos:end="87:33">(<argument pos:start="87:26" pos:end="87:28"><expr pos:start="87:26" pos:end="87:28"><name pos:start="87:26" pos:end="87:28">env</name></expr></argument>, <argument pos:start="87:31" pos:end="87:32"><expr pos:start="87:31" pos:end="87:32"><name pos:start="87:31" pos:end="87:32">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="91:9" pos:end="113:9"><if pos:start="91:9" pos:end="113:9">if <condition pos:start="91:12" pos:end="91:22">(<expr pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:21">search_pc</name></expr>)</condition> <block pos:start="91:24" pos:end="113:9">{<block_content pos:start="93:13" pos:end="111:51">

            <expr_stmt pos:start="93:13" pos:end="93:58"><expr pos:start="93:13" pos:end="93:57"><name pos:start="93:13" pos:end="93:13">j</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <name pos:start="93:17" pos:end="93:35"><name pos:start="93:17" pos:end="93:23">tcg_ctx</name><operator pos:start="93:24" pos:end="93:24">.</operator><name pos:start="93:25" pos:end="93:35">gen_opc_ptr</name></name> <operator pos:start="93:37" pos:end="93:37">-</operator> <name pos:start="93:39" pos:end="93:57"><name pos:start="93:39" pos:end="93:45">tcg_ctx</name><operator pos:start="93:46" pos:end="93:46">.</operator><name pos:start="93:47" pos:end="93:57">gen_opc_buf</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="105:13"><if pos:start="95:13" pos:end="105:13">if <condition pos:start="95:16" pos:end="95:23">(<expr pos:start="95:17" pos:end="95:22"><name pos:start="95:17" pos:end="95:18">lj</name> <operator pos:start="95:20" pos:end="95:20">&lt;</operator> <name pos:start="95:22" pos:end="95:22">j</name></expr>)</condition> <block pos:start="95:25" pos:end="105:13">{<block_content pos:start="97:17" pos:end="103:17">

                <expr_stmt pos:start="97:17" pos:end="97:21"><expr pos:start="97:17" pos:end="97:20"><name pos:start="97:17" pos:end="97:18">lj</name><operator pos:start="97:19" pos:end="97:20">++</operator></expr>;</expr_stmt>

                <while pos:start="99:17" pos:end="103:17">while <condition pos:start="99:23" pos:end="99:30">(<expr pos:start="99:24" pos:end="99:29"><name pos:start="99:24" pos:end="99:25">lj</name> <operator pos:start="99:27" pos:end="99:27">&lt;</operator> <name pos:start="99:29" pos:end="99:29">j</name></expr>)</condition> <block pos:start="99:32" pos:end="103:17">{<block_content pos:start="101:21" pos:end="101:58">

                    <expr_stmt pos:start="101:21" pos:end="101:58"><expr pos:start="101:21" pos:end="101:57"><name pos:start="101:21" pos:end="101:53"><name pos:start="101:21" pos:end="101:27">tcg_ctx</name><operator pos:start="101:28" pos:end="101:28">.</operator><name pos:start="101:29" pos:end="101:47">gen_opc_instr_start</name><index pos:start="101:48" pos:end="101:53">[<expr pos:start="101:49" pos:end="101:52"><name pos:start="101:49" pos:end="101:50">lj</name><operator pos:start="101:51" pos:end="101:52">++</operator></expr>]</index></name> <operator pos:start="101:55" pos:end="101:55">=</operator> <literal type="number" pos:start="101:57" pos:end="101:57">0</literal></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:44"><expr pos:start="107:13" pos:end="107:43"><name pos:start="107:13" pos:end="107:34"><name pos:start="107:13" pos:end="107:19">tcg_ctx</name><operator pos:start="107:20" pos:end="107:20">.</operator><name pos:start="107:21" pos:end="107:30">gen_opc_pc</name><index pos:start="107:31" pos:end="107:34">[<expr pos:start="107:32" pos:end="107:33"><name pos:start="107:32" pos:end="107:33">lj</name></expr>]</index></name> <operator pos:start="107:36" pos:end="107:36">=</operator> <name pos:start="107:38" pos:end="107:43"><name pos:start="107:38" pos:end="107:39">dc</name><operator pos:start="107:40" pos:end="107:41">-&gt;</operator><name pos:start="107:42" pos:end="107:43">pc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:48"><expr pos:start="109:13" pos:end="109:47"><name pos:start="109:13" pos:end="109:43"><name pos:start="109:13" pos:end="109:19">tcg_ctx</name><operator pos:start="109:20" pos:end="109:20">.</operator><name pos:start="109:21" pos:end="109:39">gen_opc_instr_start</name><index pos:start="109:40" pos:end="109:43">[<expr pos:start="109:41" pos:end="109:42"><name pos:start="109:41" pos:end="109:42">lj</name></expr>]</index></name> <operator pos:start="109:45" pos:end="109:45">=</operator> <literal type="number" pos:start="109:47" pos:end="109:47">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:51"><expr pos:start="111:13" pos:end="111:50"><name pos:start="111:13" pos:end="111:38"><name pos:start="111:13" pos:end="111:19">tcg_ctx</name><operator pos:start="111:20" pos:end="111:20">.</operator><name pos:start="111:21" pos:end="111:34">gen_opc_icount</name><index pos:start="111:35" pos:end="111:38">[<expr pos:start="111:36" pos:end="111:37"><name pos:start="111:36" pos:end="111:37">lj</name></expr>]</index></name> <operator pos:start="111:40" pos:end="111:40">=</operator> <name pos:start="111:42" pos:end="111:50">num_insns</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="117:9" pos:end="117:28">/* Pretty disas.  */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:36"><expr pos:start="119:9" pos:end="119:35"><call pos:start="119:9" pos:end="119:35"><name pos:start="119:9" pos:end="119:15">LOG_DIS</name><argument_list pos:start="119:16" pos:end="119:35">(<argument pos:start="119:17" pos:end="119:26"><expr pos:start="119:17" pos:end="119:26"><literal type="string" pos:start="119:17" pos:end="119:26">"%8.8x:\t"</literal></expr></argument>, <argument pos:start="119:29" pos:end="119:34"><expr pos:start="119:29" pos:end="119:34"><name pos:start="119:29" pos:end="119:34"><name pos:start="119:29" pos:end="119:30">dc</name><operator pos:start="119:31" pos:end="119:32">-&gt;</operator><name pos:start="119:33" pos:end="119:34">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="123:9" pos:end="127:9"><if pos:start="123:9" pos:end="127:9">if <condition pos:start="123:12" pos:end="123:68">(<expr pos:start="123:13" pos:end="123:67"><name pos:start="123:13" pos:end="123:21">num_insns</name> <operator pos:start="123:23" pos:end="123:23">+</operator> <literal type="number" pos:start="123:25" pos:end="123:25">1</literal> <operator pos:start="123:27" pos:end="123:28">==</operator> <name pos:start="123:30" pos:end="123:38">max_insns</name> <operator pos:start="123:40" pos:end="123:41">&amp;&amp;</operator> <operator pos:start="123:43" pos:end="123:43">(</operator><name pos:start="123:44" pos:end="123:53"><name pos:start="123:44" pos:end="123:45">tb</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:53">cflags</name></name> <operator pos:start="123:55" pos:end="123:55">&amp;</operator> <name pos:start="123:57" pos:end="123:66">CF_LAST_IO</name><operator pos:start="123:67" pos:end="123:67">)</operator></expr>)</condition> <block pos:start="123:70" pos:end="127:9">{<block_content pos:start="125:13" pos:end="125:27">

            <expr_stmt pos:start="125:13" pos:end="125:27"><expr pos:start="125:13" pos:end="125:26"><call pos:start="125:13" pos:end="125:26"><name pos:start="125:13" pos:end="125:24">gen_io_start</name><argument_list pos:start="125:25" pos:end="125:26">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="131:9" pos:end="131:46"><expr pos:start="131:9" pos:end="131:45"><call pos:start="131:9" pos:end="131:45"><name pos:start="131:9" pos:end="131:14">decode</name><argument_list pos:start="131:15" pos:end="131:45">(<argument pos:start="131:16" pos:end="131:17"><expr pos:start="131:16" pos:end="131:17"><name pos:start="131:16" pos:end="131:17">dc</name></expr></argument>, <argument pos:start="131:20" pos:end="131:44"><expr pos:start="131:20" pos:end="131:44"><call pos:start="131:20" pos:end="131:44"><name pos:start="131:20" pos:end="131:31">cpu_ldl_code</name><argument_list pos:start="131:32" pos:end="131:44">(<argument pos:start="131:33" pos:end="131:35"><expr pos:start="131:33" pos:end="131:35"><name pos:start="131:33" pos:end="131:35">env</name></expr></argument>, <argument pos:start="131:38" pos:end="131:43"><expr pos:start="131:38" pos:end="131:43"><name pos:start="131:38" pos:end="131:43"><name pos:start="131:38" pos:end="131:39">dc</name><operator pos:start="131:40" pos:end="131:41">-&gt;</operator><name pos:start="131:42" pos:end="131:43">pc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:20"><expr pos:start="133:9" pos:end="133:19"><name pos:start="133:9" pos:end="133:14"><name pos:start="133:9" pos:end="133:10">dc</name><operator pos:start="133:11" pos:end="133:12">-&gt;</operator><name pos:start="133:13" pos:end="133:14">pc</name></name> <operator pos:start="133:16" pos:end="133:17">+=</operator> <literal type="number" pos:start="133:19" pos:end="133:19">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:20"><expr pos:start="135:9" pos:end="135:19"><name pos:start="135:9" pos:end="135:17">num_insns</name><operator pos:start="135:18" pos:end="135:19">++</operator></expr>;</expr_stmt>



    </block_content>}</block> while <condition pos:start="139:13" pos:end="149:34">(<expr pos:start="139:14" pos:end="149:33"><operator pos:start="139:14" pos:end="139:14">!</operator><name pos:start="139:15" pos:end="139:24"><name pos:start="139:15" pos:end="139:16">dc</name><operator pos:start="139:17" pos:end="139:18">-&gt;</operator><name pos:start="139:19" pos:end="139:24">is_jmp</name></name>

         <operator pos:start="141:10" pos:end="141:11">&amp;&amp;</operator> <name pos:start="141:13" pos:end="141:31"><name pos:start="141:13" pos:end="141:19">tcg_ctx</name><operator pos:start="141:20" pos:end="141:20">.</operator><name pos:start="141:21" pos:end="141:31">gen_opc_ptr</name></name> <operator pos:start="141:33" pos:end="141:33">&lt;</operator> <name pos:start="141:35" pos:end="141:45">gen_opc_end</name>

         <operator pos:start="143:10" pos:end="143:11">&amp;&amp;</operator> <operator pos:start="143:13" pos:end="143:13">!</operator><name pos:start="143:14" pos:end="143:36"><name pos:start="143:14" pos:end="143:16">env</name><operator pos:start="143:17" pos:end="143:18">-&gt;</operator><name pos:start="143:19" pos:end="143:36">singlestep_enabled</name></name>

         <operator pos:start="145:10" pos:end="145:11">&amp;&amp;</operator> <operator pos:start="145:13" pos:end="145:13">!</operator><name pos:start="145:14" pos:end="145:23">singlestep</name>

         <operator pos:start="147:10" pos:end="147:11">&amp;&amp;</operator> <operator pos:start="147:13" pos:end="147:13">(</operator><name pos:start="147:14" pos:end="147:19"><name pos:start="147:14" pos:end="147:15">dc</name><operator pos:start="147:16" pos:end="147:17">-&gt;</operator><name pos:start="147:18" pos:end="147:19">pc</name></name> <operator pos:start="147:21" pos:end="147:21">&lt;</operator> <name pos:start="147:23" pos:end="147:37">next_page_start</name><operator pos:start="147:38" pos:end="147:38">)</operator>

         <operator pos:start="149:10" pos:end="149:11">&amp;&amp;</operator> <name pos:start="149:13" pos:end="149:21">num_insns</name> <operator pos:start="149:23" pos:end="149:23">&lt;</operator> <name pos:start="149:25" pos:end="149:33">max_insns</name></expr>)</condition>;</do>



    <if_stmt pos:start="153:5" pos:end="157:5"><if pos:start="153:5" pos:end="157:5">if <condition pos:start="153:8" pos:end="153:32">(<expr pos:start="153:9" pos:end="153:31"><name pos:start="153:9" pos:end="153:18"><name pos:start="153:9" pos:end="153:10">tb</name><operator pos:start="153:11" pos:end="153:12">-&gt;</operator><name pos:start="153:13" pos:end="153:18">cflags</name></name> <operator pos:start="153:20" pos:end="153:20">&amp;</operator> <name pos:start="153:22" pos:end="153:31">CF_LAST_IO</name></expr>)</condition> <block pos:start="153:34" pos:end="157:5">{<block_content pos:start="155:9" pos:end="155:21">

        <expr_stmt pos:start="155:9" pos:end="155:21"><expr pos:start="155:9" pos:end="155:20"><call pos:start="155:9" pos:end="155:20"><name pos:start="155:9" pos:end="155:18">gen_io_end</name><argument_list pos:start="155:19" pos:end="155:20">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="161:5" pos:end="203:5"><if pos:start="161:5" pos:end="171:5">if <condition pos:start="161:8" pos:end="161:42">(<expr pos:start="161:9" pos:end="161:41"><call pos:start="161:9" pos:end="161:41"><name pos:start="161:9" pos:end="161:16">unlikely</name><argument_list pos:start="161:17" pos:end="161:41">(<argument pos:start="161:18" pos:end="161:40"><expr pos:start="161:18" pos:end="161:40"><name pos:start="161:18" pos:end="161:40"><name pos:start="161:18" pos:end="161:20">env</name><operator pos:start="161:21" pos:end="161:22">-&gt;</operator><name pos:start="161:23" pos:end="161:40">singlestep_enabled</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="161:44" pos:end="171:5">{<block_content pos:start="163:9" pos:end="169:46">

        <if_stmt pos:start="163:9" pos:end="167:9"><if pos:start="163:9" pos:end="167:9">if <condition pos:start="163:12" pos:end="163:37">(<expr pos:start="163:13" pos:end="163:36"><name pos:start="163:13" pos:end="163:22"><name pos:start="163:13" pos:end="163:14">dc</name><operator pos:start="163:15" pos:end="163:16">-&gt;</operator><name pos:start="163:17" pos:end="163:22">is_jmp</name></name> <operator pos:start="163:24" pos:end="163:25">==</operator> <name pos:start="163:27" pos:end="163:36">DISAS_NEXT</name></expr>)</condition> <block pos:start="163:39" pos:end="167:9">{<block_content pos:start="165:13" pos:end="165:44">

            <expr_stmt pos:start="165:13" pos:end="165:44"><expr pos:start="165:13" pos:end="165:43"><call pos:start="165:13" pos:end="165:43"><name pos:start="165:13" pos:end="165:27">tcg_gen_movi_tl</name><argument_list pos:start="165:28" pos:end="165:43">(<argument pos:start="165:29" pos:end="165:34"><expr pos:start="165:29" pos:end="165:34"><name pos:start="165:29" pos:end="165:34">cpu_pc</name></expr></argument>, <argument pos:start="165:37" pos:end="165:42"><expr pos:start="165:37" pos:end="165:42"><name pos:start="165:37" pos:end="165:42"><name pos:start="165:37" pos:end="165:38">dc</name><operator pos:start="165:39" pos:end="165:40">-&gt;</operator><name pos:start="165:41" pos:end="165:42">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:46"><expr pos:start="169:9" pos:end="169:45"><call pos:start="169:9" pos:end="169:45"><name pos:start="169:9" pos:end="169:29">t_gen_raise_exception</name><argument_list pos:start="169:30" pos:end="169:45">(<argument pos:start="169:31" pos:end="169:32"><expr pos:start="169:31" pos:end="169:32"><name pos:start="169:31" pos:end="169:32">dc</name></expr></argument>, <argument pos:start="169:35" pos:end="169:44"><expr pos:start="169:35" pos:end="169:44"><name pos:start="169:35" pos:end="169:44">EXCP_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="171:7" pos:end="203:5">else <block pos:start="171:12" pos:end="203:5">{<block_content pos:start="173:9" pos:end="201:9">

        <switch pos:start="173:9" pos:end="201:9">switch <condition pos:start="173:16" pos:end="173:27">(<expr pos:start="173:17" pos:end="173:26"><name pos:start="173:17" pos:end="173:26"><name pos:start="173:17" pos:end="173:18">dc</name><operator pos:start="173:19" pos:end="173:20">-&gt;</operator><name pos:start="173:21" pos:end="173:26">is_jmp</name></name></expr>)</condition> <block pos:start="173:29" pos:end="201:9">{<block_content pos:start="175:9" pos:end="199:18">

        <case pos:start="175:9" pos:end="175:24">case <expr pos:start="175:14" pos:end="175:23"><name pos:start="175:14" pos:end="175:23">DISAS_NEXT</name></expr>:</case>

            <expr_stmt pos:start="177:13" pos:end="177:39"><expr pos:start="177:13" pos:end="177:38"><call pos:start="177:13" pos:end="177:38"><name pos:start="177:13" pos:end="177:23">gen_goto_tb</name><argument_list pos:start="177:24" pos:end="177:38">(<argument pos:start="177:25" pos:end="177:26"><expr pos:start="177:25" pos:end="177:26"><name pos:start="177:25" pos:end="177:26">dc</name></expr></argument>, <argument pos:start="177:29" pos:end="177:29"><expr pos:start="177:29" pos:end="177:29"><literal type="number" pos:start="177:29" pos:end="177:29">1</literal></expr></argument>, <argument pos:start="177:32" pos:end="177:37"><expr pos:start="177:32" pos:end="177:37"><name pos:start="177:32" pos:end="177:37"><name pos:start="177:32" pos:end="177:33">dc</name><operator pos:start="177:34" pos:end="177:35">-&gt;</operator><name pos:start="177:36" pos:end="177:37">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="179:13" pos:end="179:18">break;</break>

        <default pos:start="181:9" pos:end="181:16">default:</default>

        <case pos:start="183:9" pos:end="183:24">case <expr pos:start="183:14" pos:end="183:23"><name pos:start="183:14" pos:end="183:23">DISAS_JUMP</name></expr>:</case>

        <case pos:start="185:9" pos:end="185:26">case <expr pos:start="185:14" pos:end="185:25"><name pos:start="185:14" pos:end="185:25">DISAS_UPDATE</name></expr>:</case>

            <comment type="block" pos:start="187:13" pos:end="189:37">/* indicate that the hash table must be used

               to find the next TB */</comment>

            <expr_stmt pos:start="191:13" pos:end="191:31"><expr pos:start="191:13" pos:end="191:30"><call pos:start="191:13" pos:end="191:30"><name pos:start="191:13" pos:end="191:27">tcg_gen_exit_tb</name><argument_list pos:start="191:28" pos:end="191:30">(<argument pos:start="191:29" pos:end="191:29"><expr pos:start="191:29" pos:end="191:29"><literal type="number" pos:start="191:29" pos:end="191:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="193:13" pos:end="193:18">break;</break>

        <case pos:start="195:9" pos:end="195:27">case <expr pos:start="195:14" pos:end="195:26"><name pos:start="195:14" pos:end="195:26">DISAS_TB_JUMP</name></expr>:</case>

            <comment type="block" pos:start="197:13" pos:end="197:42">/* nothing more to generate */</comment>

            <break pos:start="199:13" pos:end="199:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="207:5" pos:end="207:34"><expr pos:start="207:5" pos:end="207:33"><call pos:start="207:5" pos:end="207:33"><name pos:start="207:5" pos:end="207:18">gen_icount_end</name><argument_list pos:start="207:19" pos:end="207:33">(<argument pos:start="207:20" pos:end="207:21"><expr pos:start="207:20" pos:end="207:21"><name pos:start="207:20" pos:end="207:21">tb</name></expr></argument>, <argument pos:start="207:24" pos:end="207:32"><expr pos:start="207:24" pos:end="207:32"><name pos:start="207:24" pos:end="207:32">num_insns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:40"><expr pos:start="209:5" pos:end="209:39"><operator pos:start="209:5" pos:end="209:5">*</operator><name pos:start="209:6" pos:end="209:24"><name pos:start="209:6" pos:end="209:12">tcg_ctx</name><operator pos:start="209:13" pos:end="209:13">.</operator><name pos:start="209:14" pos:end="209:24">gen_opc_ptr</name></name> <operator pos:start="209:26" pos:end="209:26">=</operator> <name pos:start="209:28" pos:end="209:39">INDEX_op_end</name></expr>;</expr_stmt>

    <if_stmt pos:start="211:5" pos:end="234:0"><if pos:start="211:5" pos:end="223:5">if <condition pos:start="211:8" pos:end="211:18">(<expr pos:start="211:9" pos:end="211:17"><name pos:start="211:9" pos:end="211:17">search_pc</name></expr>)</condition> <block pos:start="211:20" pos:end="223:5">{<block_content pos:start="213:9" pos:end="221:9">

        <expr_stmt pos:start="213:9" pos:end="213:54"><expr pos:start="213:9" pos:end="213:53"><name pos:start="213:9" pos:end="213:9">j</name> <operator pos:start="213:11" pos:end="213:11">=</operator> <name pos:start="213:13" pos:end="213:31"><name pos:start="213:13" pos:end="213:19">tcg_ctx</name><operator pos:start="213:20" pos:end="213:20">.</operator><name pos:start="213:21" pos:end="213:31">gen_opc_ptr</name></name> <operator pos:start="213:33" pos:end="213:33">-</operator> <name pos:start="213:35" pos:end="213:53"><name pos:start="213:35" pos:end="213:41">tcg_ctx</name><operator pos:start="213:42" pos:end="213:42">.</operator><name pos:start="213:43" pos:end="213:53">gen_opc_buf</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:13"><expr pos:start="215:9" pos:end="215:12"><name pos:start="215:9" pos:end="215:10">lj</name><operator pos:start="215:11" pos:end="215:12">++</operator></expr>;</expr_stmt>

        <while pos:start="217:9" pos:end="221:9">while <condition pos:start="217:15" pos:end="217:23">(<expr pos:start="217:16" pos:end="217:22"><name pos:start="217:16" pos:end="217:17">lj</name> <operator pos:start="217:19" pos:end="217:20">&lt;=</operator> <name pos:start="217:22" pos:end="217:22">j</name></expr>)</condition> <block pos:start="217:25" pos:end="221:9">{<block_content pos:start="219:13" pos:end="219:50">

            <expr_stmt pos:start="219:13" pos:end="219:50"><expr pos:start="219:13" pos:end="219:49"><name pos:start="219:13" pos:end="219:45"><name pos:start="219:13" pos:end="219:19">tcg_ctx</name><operator pos:start="219:20" pos:end="219:20">.</operator><name pos:start="219:21" pos:end="219:39">gen_opc_instr_start</name><index pos:start="219:40" pos:end="219:45">[<expr pos:start="219:41" pos:end="219:44"><name pos:start="219:41" pos:end="219:42">lj</name><operator pos:start="219:43" pos:end="219:44">++</operator></expr>]</index></name> <operator pos:start="219:47" pos:end="219:47">=</operator> <literal type="number" pos:start="219:49" pos:end="219:49">0</literal></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if> <else pos:start="223:7" pos:end="234:0">else <block pos:start="223:12" pos:end="234:0">{<block_content pos:start="225:9" pos:end="227:31">

        <expr_stmt pos:start="225:9" pos:end="225:37"><expr pos:start="225:9" pos:end="225:36"><name pos:start="225:9" pos:end="225:16"><name pos:start="225:9" pos:end="225:10">tb</name><operator pos:start="225:11" pos:end="225:12">-&gt;</operator><name pos:start="225:13" pos:end="225:16">size</name></name> <operator pos:start="225:18" pos:end="225:18">=</operator> <name pos:start="225:20" pos:end="225:25"><name pos:start="225:20" pos:end="225:21">dc</name><operator pos:start="225:22" pos:end="225:23">-&gt;</operator><name pos:start="225:24" pos:end="225:25">pc</name></name> <operator pos:start="225:27" pos:end="225:27">-</operator> <name pos:start="225:29" pos:end="225:36">pc_start</name></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:31"><expr pos:start="227:9" pos:end="227:30"><name pos:start="227:9" pos:end="227:18"><name pos:start="227:9" pos:end="227:10">tb</name><operator pos:start="227:11" pos:end="227:12">-&gt;</operator><name pos:start="227:13" pos:end="227:18">icount</name></name> <operator pos:start="227:20" pos:end="227:20">=</operator> <name pos:start="227:22" pos:end="227:30">num_insns</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<cpp:ifdef pos:start="233:1" pos:end="233:18">#<cpp:directive pos:start="233:2" pos:end="233:6">ifdef</cpp:directive> <name pos:start="233:8" pos:end="233:18">DEBUG_DISAS</name></cpp:ifdef>

    <if_stmt pos:start="235:5" pos:end="250:0"><if pos:start="235:5" pos:end="250:0">if <condition pos:start="235:8" pos:end="235:46">(<expr pos:start="235:9" pos:end="235:45"><call pos:start="235:9" pos:end="235:45"><name pos:start="235:9" pos:end="235:26">qemu_loglevel_mask</name><argument_list pos:start="235:27" pos:end="235:45">(<argument pos:start="235:28" pos:end="235:44"><expr pos:start="235:28" pos:end="235:44"><name pos:start="235:28" pos:end="235:44">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="235:48" pos:end="250:0">{<block_content pos:start="237:9" pos:end="245:33">

        <expr_stmt pos:start="237:9" pos:end="237:23"><expr pos:start="237:9" pos:end="237:22"><call pos:start="237:9" pos:end="237:22"><name pos:start="237:9" pos:end="237:16">qemu_log</name><argument_list pos:start="237:17" pos:end="237:22">(<argument pos:start="237:18" pos:end="237:21"><expr pos:start="237:18" pos:end="237:21"><literal type="string" pos:start="237:18" pos:end="237:21">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:62"><expr pos:start="239:9" pos:end="239:61"><call pos:start="239:9" pos:end="239:61"><name pos:start="239:9" pos:end="239:24">log_target_disas</name><argument_list pos:start="239:25" pos:end="239:61">(<argument pos:start="239:26" pos:end="239:28"><expr pos:start="239:26" pos:end="239:28"><name pos:start="239:26" pos:end="239:28">env</name></expr></argument>, <argument pos:start="239:31" pos:end="239:38"><expr pos:start="239:31" pos:end="239:38"><name pos:start="239:31" pos:end="239:38">pc_start</name></expr></argument>, <argument pos:start="239:41" pos:end="239:57"><expr pos:start="239:41" pos:end="239:57"><name pos:start="239:41" pos:end="239:46"><name pos:start="239:41" pos:end="239:42">dc</name><operator pos:start="239:43" pos:end="239:44">-&gt;</operator><name pos:start="239:45" pos:end="239:46">pc</name></name> <operator pos:start="239:48" pos:end="239:48">-</operator> <name pos:start="239:50" pos:end="239:57">pc_start</name></expr></argument>, <argument pos:start="239:60" pos:end="239:60"><expr pos:start="239:60" pos:end="239:60"><literal type="number" pos:start="239:60" pos:end="239:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="245:33"><expr pos:start="241:9" pos:end="245:32"><call pos:start="241:9" pos:end="245:32"><name pos:start="241:9" pos:end="241:16">qemu_log</name><argument_list pos:start="241:17" pos:end="245:32">(<argument pos:start="241:18" pos:end="241:41"><expr pos:start="241:18" pos:end="241:41"><literal type="string" pos:start="241:18" pos:end="241:41">"\nisize=%d osize=%td\n"</literal></expr></argument>,

            <argument pos:start="243:13" pos:end="243:29"><expr pos:start="243:13" pos:end="243:29"><name pos:start="243:13" pos:end="243:18"><name pos:start="243:13" pos:end="243:14">dc</name><operator pos:start="243:15" pos:end="243:16">-&gt;</operator><name pos:start="243:17" pos:end="243:18">pc</name></name> <operator pos:start="243:20" pos:end="243:20">-</operator> <name pos:start="243:22" pos:end="243:29">pc_start</name></expr></argument>, <argument pos:start="243:32" pos:end="245:31"><expr pos:start="243:32" pos:end="245:31"><name pos:start="243:32" pos:end="243:50"><name pos:start="243:32" pos:end="243:38">tcg_ctx</name><operator pos:start="243:39" pos:end="243:39">.</operator><name pos:start="243:40" pos:end="243:50">gen_opc_ptr</name></name> <operator pos:start="243:52" pos:end="243:52">-</operator>

            <name pos:start="245:13" pos:end="245:31"><name pos:start="245:13" pos:end="245:19">tcg_ctx</name><operator pos:start="245:20" pos:end="245:20">.</operator><name pos:start="245:21" pos:end="245:31">gen_opc_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="249:1" pos:end="249:6">#<cpp:directive pos:start="249:2" pos:end="249:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
