<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3628.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">dv_extract_audio</name><parameter_list pos:start="1:28" pos:end="3:49">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:35">uint8_t</name><modifier pos:start="1:36" pos:end="1:36">*</modifier></type> <name pos:start="1:38" pos:end="1:42">frame</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:60"><decl pos:start="1:45" pos:end="1:60"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:51">uint8_t</name><modifier pos:start="1:52" pos:end="1:52">*</modifier></type> <name pos:start="1:54" pos:end="1:60"><name pos:start="1:54" pos:end="1:57">ppcm</name><index pos:start="1:58" pos:end="1:60">[<expr pos:start="1:59" pos:end="1:59"><literal type="number" pos:start="1:59" pos:end="1:59">4</literal></expr>]</index></name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:48"><decl pos:start="3:29" pos:end="3:48"><type pos:start="3:29" pos:end="3:48"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:43">DVprofile</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:48">sys</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="169:1">{<block_content pos:start="7:5" pos:end="167:16">

    <decl_stmt pos:start="7:5" pos:end="7:61"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">size</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:18">chan</name></decl>, <decl pos:start="7:21" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:21">i</name></decl>, <decl pos:start="7:24" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:24">j</name></decl>, <decl pos:start="7:27" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:27" pos:end="7:27">d</name></decl>, <decl pos:start="7:30" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:30" pos:end="7:31">of</name></decl>, <decl pos:start="7:34" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:34" pos:end="7:38">smpls</name></decl>, <decl pos:start="7:41" pos:end="7:44"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:41" pos:end="7:44">freq</name></decl>, <decl pos:start="7:47" pos:end="7:51"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:47" pos:end="7:51">quant</name></decl>, <decl pos:start="7:54" pos:end="7:60"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:54" pos:end="7:60">half_ch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:15">lc</name></decl>, <decl pos:start="9:18" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:18" pos:end="9:19">rc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:18"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name><modifier pos:start="11:18" pos:end="11:18">*</modifier></type> <name pos:start="11:20" pos:end="11:26">as_pack</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">pcm</name></decl>, <decl pos:start="13:19" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:13"/><name pos:start="13:19" pos:end="13:22">ipcm</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:11">as_pack</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:53"><name pos:start="17:15" pos:end="17:29">dv_extract_pack</name><argument_list pos:start="17:30" pos:end="17:53">(<argument pos:start="17:31" pos:end="17:35"><expr pos:start="17:31" pos:end="17:35"><name pos:start="17:31" pos:end="17:35">frame</name></expr></argument>, <argument pos:start="17:38" pos:end="17:52"><expr pos:start="17:38" pos:end="17:52"><name pos:start="17:38" pos:end="17:52">dv_audio_source</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:17"><if pos:start="19:5" pos:end="21:17">if <condition pos:start="19:8" pos:end="19:17">(<expr pos:start="19:9" pos:end="19:16"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:16">as_pack</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:17"><block_content pos:start="21:9" pos:end="21:17">    <comment type="block" pos:start="19:22" pos:end="19:37">/* No audio ? */</comment>

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:9">smpls</name> <operator pos:start="25:11" pos:end="25:11">=</operator>  <name pos:start="25:14" pos:end="25:23"><name pos:start="25:14" pos:end="25:20">as_pack</name><index pos:start="25:21" pos:end="25:23">[<expr pos:start="25:22" pos:end="25:22"><literal type="number" pos:start="25:22" pos:end="25:22">1</literal></expr>]</index></name> <operator pos:start="25:25" pos:end="25:25">&amp;</operator> <literal type="number" pos:start="25:27" pos:end="25:30">0x3f</literal></expr>;</expr_stmt>       <comment type="block" pos:start="25:39" pos:end="25:80">/* samples in this frame - min. samples */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:37"><expr pos:start="27:5" pos:end="27:36"><name pos:start="27:5" pos:end="27:8">freq</name>  <operator pos:start="27:11" pos:end="27:11">=</operator> <operator pos:start="27:13" pos:end="27:13">(</operator><name pos:start="27:14" pos:end="27:23"><name pos:start="27:14" pos:end="27:20">as_pack</name><index pos:start="27:21" pos:end="27:23">[<expr pos:start="27:22" pos:end="27:22"><literal type="number" pos:start="27:22" pos:end="27:22">4</literal></expr>]</index></name> <operator pos:start="27:25" pos:end="27:26">&gt;&gt;</operator> <literal type="number" pos:start="27:28" pos:end="27:28">3</literal><operator pos:start="27:29" pos:end="27:29">)</operator> <operator pos:start="27:31" pos:end="27:31">&amp;</operator> <literal type="number" pos:start="27:33" pos:end="27:36">0x07</literal></expr>;</expr_stmt> <comment type="block" pos:start="27:39" pos:end="27:77">/* 0 - 48kHz, 1 - 44,1kHz, 2 - 32kHz */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:9">quant</name> <operator pos:start="29:11" pos:end="29:11">=</operator>  <name pos:start="29:14" pos:end="29:23"><name pos:start="29:14" pos:end="29:20">as_pack</name><index pos:start="29:21" pos:end="29:23">[<expr pos:start="29:22" pos:end="29:22"><literal type="number" pos:start="29:22" pos:end="29:22">4</literal></expr>]</index></name> <operator pos:start="29:25" pos:end="29:25">&amp;</operator> <literal type="number" pos:start="29:27" pos:end="29:30">0x07</literal></expr>;</expr_stmt>       <comment type="block" pos:start="29:39" pos:end="29:81">/* 0 - 16bit linear, 1 - 12bit nonlinear */</comment>



    <if_stmt pos:start="33:5" pos:end="35:18"><if pos:start="33:5" pos:end="35:18">if <condition pos:start="33:8" pos:end="33:18">(<expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:13">quant</name> <operator pos:start="33:15" pos:end="33:15">&gt;</operator> <literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:18"><block_content pos:start="35:9" pos:end="35:18">

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="block" pos:start="35:20" pos:end="35:49">/* unsupported quantization */</comment>



    <expr_stmt pos:start="39:5" pos:end="39:54"><expr pos:start="39:5" pos:end="39:53"><name pos:start="39:5" pos:end="39:8">size</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <operator pos:start="39:12" pos:end="39:12">(</operator><name pos:start="39:13" pos:end="39:40"><name pos:start="39:13" pos:end="39:15">sys</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:34">audio_min_samples</name><index pos:start="39:35" pos:end="39:40">[<expr pos:start="39:36" pos:end="39:39"><name pos:start="39:36" pos:end="39:39">freq</name></expr>]</index></name> <operator pos:start="39:42" pos:end="39:42">+</operator> <name pos:start="39:44" pos:end="39:48">smpls</name><operator pos:start="39:49" pos:end="39:49">)</operator> <operator pos:start="39:51" pos:end="39:51">*</operator> <literal type="number" pos:start="39:53" pos:end="39:53">4</literal></expr>;</expr_stmt> <comment type="block" pos:start="39:56" pos:end="39:72">/* 2ch, 2bytes */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:35"><expr pos:start="41:5" pos:end="41:34"><name pos:start="41:5" pos:end="41:11">half_ch</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:30"><name pos:start="41:15" pos:end="41:17">sys</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:30">difseg_size</name></name> <operator pos:start="41:32" pos:end="41:32">/</operator> <literal type="number" pos:start="41:34" pos:end="41:34">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="47:35">/* We work with 720p frames split in half, thus even frames have

     * channels 0,1 and odd 2,3. */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:62"><expr pos:start="49:5" pos:end="49:61"><name pos:start="49:5" pos:end="49:8">ipcm</name> <operator pos:start="49:10" pos:end="49:10">=</operator> <ternary pos:start="49:12" pos:end="49:61"><condition pos:start="49:12" pos:end="49:55"><expr pos:start="49:12" pos:end="49:53"><operator pos:start="49:12" pos:end="49:12">(</operator><name pos:start="49:13" pos:end="49:23"><name pos:start="49:13" pos:end="49:15">sys</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:23">height</name></name> <operator pos:start="49:25" pos:end="49:26">==</operator> <literal type="number" pos:start="49:28" pos:end="49:30">720</literal> <operator pos:start="49:32" pos:end="49:33">&amp;&amp;</operator> <operator pos:start="49:35" pos:end="49:35">!</operator><operator pos:start="49:36" pos:end="49:36">(</operator><name pos:start="49:37" pos:end="49:44"><name pos:start="49:37" pos:end="49:41">frame</name><index pos:start="49:42" pos:end="49:44">[<expr pos:start="49:43" pos:end="49:43"><literal type="number" pos:start="49:43" pos:end="49:43">1</literal></expr>]</index></name> <operator pos:start="49:46" pos:end="49:46">&amp;</operator> <literal type="number" pos:start="49:48" pos:end="49:51">0x0C</literal><operator pos:start="49:52" pos:end="49:52">)</operator><operator pos:start="49:53" pos:end="49:53">)</operator></expr> ?</condition><then pos:start="49:57" pos:end="49:57"> <expr pos:start="49:57" pos:end="49:57"><literal type="number" pos:start="49:57" pos:end="49:57">2</literal></expr> </then><else pos:start="49:59" pos:end="49:61">: <expr pos:start="49:61" pos:end="49:61"><literal type="number" pos:start="49:61" pos:end="49:61">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:24"><expr pos:start="51:5" pos:end="51:23"><name pos:start="51:5" pos:end="51:7">pcm</name>  <operator pos:start="51:10" pos:end="51:10">=</operator> <name pos:start="51:12" pos:end="51:23"><name pos:start="51:12" pos:end="51:15">ppcm</name><index pos:start="51:16" pos:end="51:23">[<expr pos:start="51:17" pos:end="51:22"><name pos:start="51:17" pos:end="51:20">ipcm</name><operator pos:start="51:21" pos:end="51:22">++</operator></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:30">/* for each DIF channel */</comment>

    <for pos:start="57:5" pos:end="163:5">for <control pos:start="57:9" pos:end="57:49">(<init pos:start="57:10" pos:end="57:18"><expr pos:start="57:10" pos:end="57:17"><name pos:start="57:10" pos:end="57:13">chan</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <literal type="number" pos:start="57:17" pos:end="57:17">0</literal></expr>;</init> <condition pos:start="57:20" pos:end="57:41"><expr pos:start="57:20" pos:end="57:40"><name pos:start="57:20" pos:end="57:23">chan</name> <operator pos:start="57:25" pos:end="57:25">&lt;</operator> <name pos:start="57:27" pos:end="57:40"><name pos:start="57:27" pos:end="57:29">sys</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:40">n_difchan</name></name></expr>;</condition> <incr pos:start="57:43" pos:end="57:48"><expr pos:start="57:43" pos:end="57:48"><name pos:start="57:43" pos:end="57:46">chan</name><operator pos:start="57:47" pos:end="57:48">++</operator></expr></incr>)</control> <block pos:start="57:51" pos:end="163:5">{<block_content pos:start="61:9" pos:end="161:18">

        <comment type="block" pos:start="59:9" pos:end="59:34">/* for each DIF segment */</comment>

        <for pos:start="61:9" pos:end="151:9">for <control pos:start="61:13" pos:end="61:46">(<init pos:start="61:14" pos:end="61:19"><expr pos:start="61:14" pos:end="61:18"><name pos:start="61:14" pos:end="61:14">i</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>;</init> <condition pos:start="61:21" pos:end="61:41"><expr pos:start="61:21" pos:end="61:40"><name pos:start="61:21" pos:end="61:21">i</name> <operator pos:start="61:23" pos:end="61:23">&lt;</operator> <name pos:start="61:25" pos:end="61:40"><name pos:start="61:25" pos:end="61:27">sys</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:40">difseg_size</name></name></expr>;</condition> <incr pos:start="61:43" pos:end="61:45"><expr pos:start="61:43" pos:end="61:45"><name pos:start="61:43" pos:end="61:43">i</name><operator pos:start="61:44" pos:end="61:45">++</operator></expr></incr>)</control> <block pos:start="61:48" pos:end="151:9">{<block_content pos:start="63:13" pos:end="149:13">

            <expr_stmt pos:start="63:13" pos:end="63:28"><expr pos:start="63:13" pos:end="63:27"><name pos:start="63:13" pos:end="63:17">frame</name> <operator pos:start="63:19" pos:end="63:20">+=</operator> <literal type="number" pos:start="63:22" pos:end="63:22">6</literal> <operator pos:start="63:24" pos:end="63:24">*</operator> <literal type="number" pos:start="63:26" pos:end="63:27">80</literal></expr>;</expr_stmt> <comment type="block" pos:start="63:30" pos:end="63:58">/* skip DIF segment header */</comment>

            <if_stmt pos:start="65:13" pos:end="75:13"><if pos:start="65:13" pos:end="75:13">if <condition pos:start="65:16" pos:end="65:43">(<expr pos:start="65:17" pos:end="65:42"><name pos:start="65:17" pos:end="65:21">quant</name> <operator pos:start="65:23" pos:end="65:24">==</operator> <literal type="number" pos:start="65:26" pos:end="65:26">1</literal> <operator pos:start="65:28" pos:end="65:29">&amp;&amp;</operator> <name pos:start="65:31" pos:end="65:31">i</name> <operator pos:start="65:33" pos:end="65:34">==</operator> <name pos:start="65:36" pos:end="65:42">half_ch</name></expr>)</condition> <block pos:start="65:45" pos:end="75:13">{<block_content pos:start="69:17" pos:end="73:26">

                <comment type="block" pos:start="67:17" pos:end="67:59">/* next stereo channel (12bit mode only) */</comment>

                <expr_stmt pos:start="69:17" pos:end="69:35"><expr pos:start="69:17" pos:end="69:34"><name pos:start="69:17" pos:end="69:19">pcm</name> <operator pos:start="69:21" pos:end="69:21">=</operator> <name pos:start="69:23" pos:end="69:34"><name pos:start="69:23" pos:end="69:26">ppcm</name><index pos:start="69:27" pos:end="69:34">[<expr pos:start="69:28" pos:end="69:33"><name pos:start="69:28" pos:end="69:31">ipcm</name><operator pos:start="69:32" pos:end="69:33">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="71:17" pos:end="73:26"><if pos:start="71:17" pos:end="73:26">if <condition pos:start="71:20" pos:end="71:25">(<expr pos:start="71:21" pos:end="71:24"><operator pos:start="71:21" pos:end="71:21">!</operator><name pos:start="71:22" pos:end="71:24">pcm</name></expr>)</condition><block type="pseudo" pos:start="73:21" pos:end="73:26"><block_content pos:start="73:21" pos:end="73:26">

                    <break pos:start="73:21" pos:end="73:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="79:13" pos:end="79:38">/* for each AV sequence */</comment>

            <for pos:start="81:13" pos:end="149:13">for <control pos:start="81:17" pos:end="81:35">(<init pos:start="81:18" pos:end="81:23"><expr pos:start="81:18" pos:end="81:22"><name pos:start="81:18" pos:end="81:18">j</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">0</literal></expr>;</init> <condition pos:start="81:25" pos:end="81:30"><expr pos:start="81:25" pos:end="81:29"><name pos:start="81:25" pos:end="81:25">j</name> <operator pos:start="81:27" pos:end="81:27">&lt;</operator> <literal type="number" pos:start="81:29" pos:end="81:29">9</literal></expr>;</condition> <incr pos:start="81:32" pos:end="81:34"><expr pos:start="81:32" pos:end="81:34"><name pos:start="81:32" pos:end="81:32">j</name><operator pos:start="81:33" pos:end="81:34">++</operator></expr></incr>)</control> <block pos:start="81:37" pos:end="149:13">{<block_content pos:start="83:17" pos:end="147:33">

                <for pos:start="83:17" pos:end="143:17">for <control pos:start="83:21" pos:end="83:43">(<init pos:start="83:22" pos:end="83:27"><expr pos:start="83:22" pos:end="83:26"><name pos:start="83:22" pos:end="83:22">d</name> <operator pos:start="83:24" pos:end="83:24">=</operator> <literal type="number" pos:start="83:26" pos:end="83:26">8</literal></expr>;</init> <condition pos:start="83:29" pos:end="83:35"><expr pos:start="83:29" pos:end="83:34"><name pos:start="83:29" pos:end="83:29">d</name> <operator pos:start="83:31" pos:end="83:31">&lt;</operator> <literal type="number" pos:start="83:33" pos:end="83:34">80</literal></expr>;</condition> <incr pos:start="83:37" pos:end="83:42"><expr pos:start="83:37" pos:end="83:42"><name pos:start="83:37" pos:end="83:37">d</name> <operator pos:start="83:39" pos:end="83:40">+=</operator> <literal type="number" pos:start="83:42" pos:end="83:42">2</literal></expr></incr>)</control> <block pos:start="83:45" pos:end="143:17">{<block_content pos:start="85:21" pos:end="141:21">

                    <if_stmt pos:start="85:21" pos:end="141:21"><if pos:start="85:21" pos:end="103:21">if <condition pos:start="85:24" pos:end="85:35">(<expr pos:start="85:25" pos:end="85:34"><name pos:start="85:25" pos:end="85:29">quant</name> <operator pos:start="85:31" pos:end="85:32">==</operator> <literal type="number" pos:start="85:34" pos:end="85:34">0</literal></expr>)</condition> <block pos:start="85:37" pos:end="103:21">{<block_content pos:start="87:25" pos:end="101:44">  <comment type="block" pos:start="85:40" pos:end="85:63">/* 16bit quantization */</comment>

                        <expr_stmt pos:start="87:25" pos:end="87:88"><expr pos:start="87:25" pos:end="87:87"><name pos:start="87:25" pos:end="87:26">of</name> <operator pos:start="87:28" pos:end="87:28">=</operator> <name pos:start="87:30" pos:end="87:53"><name pos:start="87:30" pos:end="87:32">sys</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:47">audio_shuffle</name><index pos:start="87:48" pos:end="87:50">[<expr pos:start="87:49" pos:end="87:49"><name pos:start="87:49" pos:end="87:49">i</name></expr>]</index><index pos:start="87:51" pos:end="87:53">[<expr pos:start="87:52" pos:end="87:52"><name pos:start="87:52" pos:end="87:52">j</name></expr>]</index></name> <operator pos:start="87:55" pos:end="87:55">+</operator> <operator pos:start="87:57" pos:end="87:57">(</operator><name pos:start="87:58" pos:end="87:58">d</name> <operator pos:start="87:60" pos:end="87:60">-</operator> <literal type="number" pos:start="87:62" pos:end="87:62">8</literal><operator pos:start="87:63" pos:end="87:63">)</operator> <operator pos:start="87:65" pos:end="87:65">/</operator> <literal type="number" pos:start="87:67" pos:end="87:67">2</literal> <operator pos:start="87:69" pos:end="87:69">*</operator> <name pos:start="87:71" pos:end="87:87"><name pos:start="87:71" pos:end="87:73">sys</name><operator pos:start="87:74" pos:end="87:75">-&gt;</operator><name pos:start="87:76" pos:end="87:87">audio_stride</name></name></expr>;</expr_stmt>

                        <if_stmt pos:start="89:25" pos:end="91:37"><if pos:start="89:25" pos:end="91:37">if <condition pos:start="89:28" pos:end="89:41">(<expr pos:start="89:29" pos:end="89:40"><name pos:start="89:29" pos:end="89:30">of</name><operator pos:start="89:31" pos:end="89:31">*</operator><literal type="number" pos:start="89:32" pos:end="89:32">2</literal> <operator pos:start="89:34" pos:end="89:35">&gt;=</operator> <name pos:start="89:37" pos:end="89:40">size</name></expr>)</condition><block type="pseudo" pos:start="91:29" pos:end="91:37"><block_content pos:start="91:29" pos:end="91:37">

                            <continue pos:start="91:29" pos:end="91:37">continue;</continue></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="95:25" pos:end="95:49"><expr pos:start="95:25" pos:end="95:48"><name pos:start="95:25" pos:end="95:33"><name pos:start="95:25" pos:end="95:27">pcm</name><index pos:start="95:28" pos:end="95:33">[<expr pos:start="95:29" pos:end="95:32"><name pos:start="95:29" pos:end="95:30">of</name><operator pos:start="95:31" pos:end="95:31">*</operator><literal type="number" pos:start="95:32" pos:end="95:32">2</literal></expr>]</index></name>   <operator pos:start="95:37" pos:end="95:37">=</operator> <name pos:start="95:39" pos:end="95:48"><name pos:start="95:39" pos:end="95:43">frame</name><index pos:start="95:44" pos:end="95:48">[<expr pos:start="95:45" pos:end="95:47"><name pos:start="95:45" pos:end="95:45">d</name><operator pos:start="95:46" pos:end="95:46">+</operator><literal type="number" pos:start="95:47" pos:end="95:47">1</literal></expr>]</index></name></expr>;</expr_stmt> <comment type="line" pos:start="95:51" pos:end="95:82">// FIXME: maybe we have to admit</comment>

                        <expr_stmt pos:start="97:25" pos:end="97:47"><expr pos:start="97:25" pos:end="97:46"><name pos:start="97:25" pos:end="97:35"><name pos:start="97:25" pos:end="97:27">pcm</name><index pos:start="97:28" pos:end="97:35">[<expr pos:start="97:29" pos:end="97:34"><name pos:start="97:29" pos:end="97:30">of</name><operator pos:start="97:31" pos:end="97:31">*</operator><literal type="number" pos:start="97:32" pos:end="97:32">2</literal><operator pos:start="97:33" pos:end="97:33">+</operator><literal type="number" pos:start="97:34" pos:end="97:34">1</literal></expr>]</index></name> <operator pos:start="97:37" pos:end="97:37">=</operator> <name pos:start="97:39" pos:end="97:46"><name pos:start="97:39" pos:end="97:43">frame</name><index pos:start="97:44" pos:end="97:46">[<expr pos:start="97:45" pos:end="97:45"><name pos:start="97:45" pos:end="97:45">d</name></expr>]</index></name></expr>;</expr_stmt>   <comment type="line" pos:start="97:51" pos:end="97:87">//        that DV is a big-endian PCM</comment>

                        <if_stmt pos:start="99:25" pos:end="101:44"><if pos:start="99:25" pos:end="101:44">if <condition pos:start="99:28" pos:end="99:69">(<expr pos:start="99:29" pos:end="99:68"><name pos:start="99:29" pos:end="99:39"><name pos:start="99:29" pos:end="99:31">pcm</name><index pos:start="99:32" pos:end="99:39">[<expr pos:start="99:33" pos:end="99:38"><name pos:start="99:33" pos:end="99:34">of</name><operator pos:start="99:35" pos:end="99:35">*</operator><literal type="number" pos:start="99:36" pos:end="99:36">2</literal><operator pos:start="99:37" pos:end="99:37">+</operator><literal type="number" pos:start="99:38" pos:end="99:38">1</literal></expr>]</index></name> <operator pos:start="99:41" pos:end="99:42">==</operator> <literal type="number" pos:start="99:44" pos:end="99:47">0x80</literal> <operator pos:start="99:49" pos:end="99:50">&amp;&amp;</operator> <name pos:start="99:52" pos:end="99:60"><name pos:start="99:52" pos:end="99:54">pcm</name><index pos:start="99:55" pos:end="99:60">[<expr pos:start="99:56" pos:end="99:59"><name pos:start="99:56" pos:end="99:57">of</name><operator pos:start="99:58" pos:end="99:58">*</operator><literal type="number" pos:start="99:59" pos:end="99:59">2</literal></expr>]</index></name> <operator pos:start="99:62" pos:end="99:63">==</operator> <literal type="number" pos:start="99:65" pos:end="99:68">0x00</literal></expr>)</condition><block type="pseudo" pos:start="101:29" pos:end="101:44"><block_content pos:start="101:29" pos:end="101:44">

                            <expr_stmt pos:start="101:29" pos:end="101:44"><expr pos:start="101:29" pos:end="101:43"><name pos:start="101:29" pos:end="101:39"><name pos:start="101:29" pos:end="101:31">pcm</name><index pos:start="101:32" pos:end="101:39">[<expr pos:start="101:33" pos:end="101:38"><name pos:start="101:33" pos:end="101:34">of</name><operator pos:start="101:35" pos:end="101:35">*</operator><literal type="number" pos:start="101:36" pos:end="101:36">2</literal><operator pos:start="101:37" pos:end="101:37">+</operator><literal type="number" pos:start="101:38" pos:end="101:38">1</literal></expr>]</index></name> <operator pos:start="101:41" pos:end="101:41">=</operator> <literal type="number" pos:start="101:43" pos:end="101:43">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if> <else pos:start="103:23" pos:end="141:21">else <block pos:start="103:28" pos:end="141:21">{<block_content pos:start="105:25" pos:end="139:28">           <comment type="block" pos:start="103:40" pos:end="103:63">/* 12bit quantization */</comment>

                        <expr_stmt pos:start="105:25" pos:end="107:57"><expr pos:start="105:25" pos:end="107:56"><name pos:start="105:25" pos:end="105:26">lc</name> <operator pos:start="105:28" pos:end="105:28">=</operator> <operator pos:start="105:30" pos:end="105:30">(</operator><operator pos:start="105:31" pos:end="105:31">(</operator><name pos:start="105:32" pos:end="105:39">uint16_t</name><operator pos:start="105:40" pos:end="105:40">)</operator><name pos:start="105:41" pos:end="105:48"><name pos:start="105:41" pos:end="105:45">frame</name><index pos:start="105:46" pos:end="105:48">[<expr pos:start="105:47" pos:end="105:47"><name pos:start="105:47" pos:end="105:47">d</name></expr>]</index></name>   <operator pos:start="105:52" pos:end="105:53">&lt;&lt;</operator> <literal type="number" pos:start="105:55" pos:end="105:55">4</literal><operator pos:start="105:56" pos:end="105:56">)</operator> <operator pos:start="105:58" pos:end="105:58">|</operator>

                             <operator pos:start="107:30" pos:end="107:30">(</operator><operator pos:start="107:31" pos:end="107:31">(</operator><name pos:start="107:32" pos:end="107:39">uint16_t</name><operator pos:start="107:40" pos:end="107:40">)</operator><name pos:start="107:41" pos:end="107:50"><name pos:start="107:41" pos:end="107:45">frame</name><index pos:start="107:46" pos:end="107:50">[<expr pos:start="107:47" pos:end="107:49"><name pos:start="107:47" pos:end="107:47">d</name><operator pos:start="107:48" pos:end="107:48">+</operator><literal type="number" pos:start="107:49" pos:end="107:49">2</literal></expr>]</index></name> <operator pos:start="107:52" pos:end="107:53">&gt;&gt;</operator> <literal type="number" pos:start="107:55" pos:end="107:55">4</literal><operator pos:start="107:56" pos:end="107:56">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="109:25" pos:end="111:59"><expr pos:start="109:25" pos:end="111:58"><name pos:start="109:25" pos:end="109:26">rc</name> <operator pos:start="109:28" pos:end="109:28">=</operator> <operator pos:start="109:30" pos:end="109:30">(</operator><operator pos:start="109:31" pos:end="109:31">(</operator><name pos:start="109:32" pos:end="109:39">uint16_t</name><operator pos:start="109:40" pos:end="109:40">)</operator><name pos:start="109:41" pos:end="109:50"><name pos:start="109:41" pos:end="109:45">frame</name><index pos:start="109:46" pos:end="109:50">[<expr pos:start="109:47" pos:end="109:49"><name pos:start="109:47" pos:end="109:47">d</name><operator pos:start="109:48" pos:end="109:48">+</operator><literal type="number" pos:start="109:49" pos:end="109:49">1</literal></expr>]</index></name> <operator pos:start="109:52" pos:end="109:53">&lt;&lt;</operator> <literal type="number" pos:start="109:55" pos:end="109:55">4</literal><operator pos:start="109:56" pos:end="109:56">)</operator> <operator pos:start="109:58" pos:end="109:58">|</operator>

                             <operator pos:start="111:30" pos:end="111:30">(</operator><operator pos:start="111:31" pos:end="111:31">(</operator><name pos:start="111:32" pos:end="111:39">uint16_t</name><operator pos:start="111:40" pos:end="111:40">)</operator><name pos:start="111:41" pos:end="111:50"><name pos:start="111:41" pos:end="111:45">frame</name><index pos:start="111:46" pos:end="111:50">[<expr pos:start="111:47" pos:end="111:49"><name pos:start="111:47" pos:end="111:47">d</name><operator pos:start="111:48" pos:end="111:48">+</operator><literal type="number" pos:start="111:49" pos:end="111:49">2</literal></expr>]</index></name> <operator pos:start="111:52" pos:end="111:52">&amp;</operator> <literal type="number" pos:start="111:54" pos:end="111:57">0x0f</literal><operator pos:start="111:58" pos:end="111:58">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="113:25" pos:end="113:69"><expr pos:start="113:25" pos:end="113:68"><name pos:start="113:25" pos:end="113:26">lc</name> <operator pos:start="113:28" pos:end="113:28">=</operator> <operator pos:start="113:30" pos:end="113:30">(</operator><ternary pos:start="113:31" pos:end="113:67"><condition pos:start="113:31" pos:end="113:43"><expr pos:start="113:31" pos:end="113:41"><name pos:start="113:31" pos:end="113:32">lc</name> <operator pos:start="113:34" pos:end="113:35">==</operator> <literal type="number" pos:start="113:37" pos:end="113:41">0x800</literal></expr> ?</condition><then pos:start="113:45" pos:end="113:45"> <expr pos:start="113:45" pos:end="113:45"><literal type="number" pos:start="113:45" pos:end="113:45">0</literal></expr> </then><else pos:start="113:47" pos:end="113:67">: <expr pos:start="113:49" pos:end="113:67"><call pos:start="113:49" pos:end="113:67"><name pos:start="113:49" pos:end="113:63">dv_audio_12to16</name><argument_list pos:start="113:64" pos:end="113:67">(<argument pos:start="113:65" pos:end="113:66"><expr pos:start="113:65" pos:end="113:66"><name pos:start="113:65" pos:end="113:66">lc</name></expr></argument>)</argument_list></call></expr></else></ternary><operator pos:start="113:68" pos:end="113:68">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="115:25" pos:end="115:69"><expr pos:start="115:25" pos:end="115:68"><name pos:start="115:25" pos:end="115:26">rc</name> <operator pos:start="115:28" pos:end="115:28">=</operator> <operator pos:start="115:30" pos:end="115:30">(</operator><ternary pos:start="115:31" pos:end="115:67"><condition pos:start="115:31" pos:end="115:43"><expr pos:start="115:31" pos:end="115:41"><name pos:start="115:31" pos:end="115:32">rc</name> <operator pos:start="115:34" pos:end="115:35">==</operator> <literal type="number" pos:start="115:37" pos:end="115:41">0x800</literal></expr> ?</condition><then pos:start="115:45" pos:end="115:45"> <expr pos:start="115:45" pos:end="115:45"><literal type="number" pos:start="115:45" pos:end="115:45">0</literal></expr> </then><else pos:start="115:47" pos:end="115:67">: <expr pos:start="115:49" pos:end="115:67"><call pos:start="115:49" pos:end="115:67"><name pos:start="115:49" pos:end="115:63">dv_audio_12to16</name><argument_list pos:start="115:64" pos:end="115:67">(<argument pos:start="115:65" pos:end="115:66"><expr pos:start="115:65" pos:end="115:66"><name pos:start="115:65" pos:end="115:66">rc</name></expr></argument>)</argument_list></call></expr></else></ternary><operator pos:start="115:68" pos:end="115:68">)</operator></expr>;</expr_stmt>



                        <expr_stmt pos:start="119:25" pos:end="119:96"><expr pos:start="119:25" pos:end="119:95"><name pos:start="119:25" pos:end="119:26">of</name> <operator pos:start="119:28" pos:end="119:28">=</operator> <name pos:start="119:30" pos:end="119:61"><name pos:start="119:30" pos:end="119:32">sys</name><operator pos:start="119:33" pos:end="119:34">-&gt;</operator><name pos:start="119:35" pos:end="119:47">audio_shuffle</name><index pos:start="119:48" pos:end="119:58">[<expr pos:start="119:49" pos:end="119:57"><name pos:start="119:49" pos:end="119:49">i</name><operator pos:start="119:50" pos:end="119:50">%</operator><name pos:start="119:51" pos:end="119:57">half_ch</name></expr>]</index><index pos:start="119:59" pos:end="119:61">[<expr pos:start="119:60" pos:end="119:60"><name pos:start="119:60" pos:end="119:60">j</name></expr>]</index></name> <operator pos:start="119:63" pos:end="119:63">+</operator> <operator pos:start="119:65" pos:end="119:65">(</operator><name pos:start="119:66" pos:end="119:66">d</name> <operator pos:start="119:68" pos:end="119:68">-</operator> <literal type="number" pos:start="119:70" pos:end="119:70">8</literal><operator pos:start="119:71" pos:end="119:71">)</operator> <operator pos:start="119:73" pos:end="119:73">/</operator> <literal type="number" pos:start="119:75" pos:end="119:75">3</literal> <operator pos:start="119:77" pos:end="119:77">*</operator> <name pos:start="119:79" pos:end="119:95"><name pos:start="119:79" pos:end="119:81">sys</name><operator pos:start="119:82" pos:end="119:83">-&gt;</operator><name pos:start="119:84" pos:end="119:95">audio_stride</name></name></expr>;</expr_stmt>

                        <if_stmt pos:start="121:25" pos:end="123:37"><if pos:start="121:25" pos:end="123:37">if <condition pos:start="121:28" pos:end="121:41">(<expr pos:start="121:29" pos:end="121:40"><name pos:start="121:29" pos:end="121:30">of</name><operator pos:start="121:31" pos:end="121:31">*</operator><literal type="number" pos:start="121:32" pos:end="121:32">2</literal> <operator pos:start="121:34" pos:end="121:35">&gt;=</operator> <name pos:start="121:37" pos:end="121:40">size</name></expr>)</condition><block type="pseudo" pos:start="123:29" pos:end="123:37"><block_content pos:start="123:29" pos:end="123:37">

                            <continue pos:start="123:29" pos:end="123:37">continue;</continue></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="127:25" pos:end="127:48"><expr pos:start="127:25" pos:end="127:47"><name pos:start="127:25" pos:end="127:33"><name pos:start="127:25" pos:end="127:27">pcm</name><index pos:start="127:28" pos:end="127:33">[<expr pos:start="127:29" pos:end="127:32"><name pos:start="127:29" pos:end="127:30">of</name><operator pos:start="127:31" pos:end="127:31">*</operator><literal type="number" pos:start="127:32" pos:end="127:32">2</literal></expr>]</index></name>   <operator pos:start="127:37" pos:end="127:37">=</operator> <name pos:start="127:39" pos:end="127:40">lc</name> <operator pos:start="127:42" pos:end="127:42">&amp;</operator> <literal type="number" pos:start="127:44" pos:end="127:47">0xff</literal></expr>;</expr_stmt> <comment type="line" pos:start="127:50" pos:end="127:81">// FIXME: maybe we have to admit</comment>

                        <expr_stmt pos:start="129:25" pos:end="129:46"><expr pos:start="129:25" pos:end="129:45"><name pos:start="129:25" pos:end="129:35"><name pos:start="129:25" pos:end="129:27">pcm</name><index pos:start="129:28" pos:end="129:35">[<expr pos:start="129:29" pos:end="129:34"><name pos:start="129:29" pos:end="129:30">of</name><operator pos:start="129:31" pos:end="129:31">*</operator><literal type="number" pos:start="129:32" pos:end="129:32">2</literal><operator pos:start="129:33" pos:end="129:33">+</operator><literal type="number" pos:start="129:34" pos:end="129:34">1</literal></expr>]</index></name> <operator pos:start="129:37" pos:end="129:37">=</operator> <name pos:start="129:39" pos:end="129:40">lc</name> <operator pos:start="129:42" pos:end="129:43">&gt;&gt;</operator> <literal type="number" pos:start="129:45" pos:end="129:45">8</literal></expr>;</expr_stmt>   <comment type="line" pos:start="129:50" pos:end="129:86">//        that DV is a big-endian PCM</comment>

                        <expr_stmt pos:start="131:25" pos:end="133:60"><expr pos:start="131:25" pos:end="133:59"><name pos:start="131:25" pos:end="131:26">of</name> <operator pos:start="131:28" pos:end="131:28">=</operator> <name pos:start="131:30" pos:end="131:69"><name pos:start="131:30" pos:end="131:32">sys</name><operator pos:start="131:33" pos:end="131:34">-&gt;</operator><name pos:start="131:35" pos:end="131:47">audio_shuffle</name><index pos:start="131:48" pos:end="131:66">[<expr pos:start="131:49" pos:end="131:65"><name pos:start="131:49" pos:end="131:49">i</name><operator pos:start="131:50" pos:end="131:50">%</operator><name pos:start="131:51" pos:end="131:57">half_ch</name><operator pos:start="131:58" pos:end="131:58">+</operator><name pos:start="131:59" pos:end="131:65">half_ch</name></expr>]</index><index pos:start="131:67" pos:end="131:69">[<expr pos:start="131:68" pos:end="131:68"><name pos:start="131:68" pos:end="131:68">j</name></expr>]</index></name> <operator pos:start="131:71" pos:end="131:71">+</operator>

                            <operator pos:start="133:29" pos:end="133:29">(</operator><name pos:start="133:30" pos:end="133:30">d</name> <operator pos:start="133:32" pos:end="133:32">-</operator> <literal type="number" pos:start="133:34" pos:end="133:34">8</literal><operator pos:start="133:35" pos:end="133:35">)</operator> <operator pos:start="133:37" pos:end="133:37">/</operator> <literal type="number" pos:start="133:39" pos:end="133:39">3</literal> <operator pos:start="133:41" pos:end="133:41">*</operator> <name pos:start="133:43" pos:end="133:59"><name pos:start="133:43" pos:end="133:45">sys</name><operator pos:start="133:46" pos:end="133:47">-&gt;</operator><name pos:start="133:48" pos:end="133:59">audio_stride</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="135:25" pos:end="135:48"><expr pos:start="135:25" pos:end="135:47"><name pos:start="135:25" pos:end="135:33"><name pos:start="135:25" pos:end="135:27">pcm</name><index pos:start="135:28" pos:end="135:33">[<expr pos:start="135:29" pos:end="135:32"><name pos:start="135:29" pos:end="135:30">of</name><operator pos:start="135:31" pos:end="135:31">*</operator><literal type="number" pos:start="135:32" pos:end="135:32">2</literal></expr>]</index></name>   <operator pos:start="135:37" pos:end="135:37">=</operator> <name pos:start="135:39" pos:end="135:40">rc</name> <operator pos:start="135:42" pos:end="135:42">&amp;</operator> <literal type="number" pos:start="135:44" pos:end="135:47">0xff</literal></expr>;</expr_stmt> <comment type="line" pos:start="135:50" pos:end="135:81">// FIXME: maybe we have to admit</comment>

                        <expr_stmt pos:start="137:25" pos:end="137:46"><expr pos:start="137:25" pos:end="137:45"><name pos:start="137:25" pos:end="137:35"><name pos:start="137:25" pos:end="137:27">pcm</name><index pos:start="137:28" pos:end="137:35">[<expr pos:start="137:29" pos:end="137:34"><name pos:start="137:29" pos:end="137:30">of</name><operator pos:start="137:31" pos:end="137:31">*</operator><literal type="number" pos:start="137:32" pos:end="137:32">2</literal><operator pos:start="137:33" pos:end="137:33">+</operator><literal type="number" pos:start="137:34" pos:end="137:34">1</literal></expr>]</index></name> <operator pos:start="137:37" pos:end="137:37">=</operator> <name pos:start="137:39" pos:end="137:40">rc</name> <operator pos:start="137:42" pos:end="137:43">&gt;&gt;</operator> <literal type="number" pos:start="137:45" pos:end="137:45">8</literal></expr>;</expr_stmt>   <comment type="line" pos:start="137:50" pos:end="137:86">//        that DV is a big-endian PCM</comment>

                        <expr_stmt pos:start="139:25" pos:end="139:28"><expr pos:start="139:25" pos:end="139:27"><operator pos:start="139:25" pos:end="139:26">++</operator><name pos:start="139:27" pos:end="139:27">d</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></for>



                <expr_stmt pos:start="147:17" pos:end="147:33"><expr pos:start="147:17" pos:end="147:32"><name pos:start="147:17" pos:end="147:21">frame</name> <operator pos:start="147:23" pos:end="147:24">+=</operator> <literal type="number" pos:start="147:26" pos:end="147:27">16</literal> <operator pos:start="147:29" pos:end="147:29">*</operator> <literal type="number" pos:start="147:31" pos:end="147:32">80</literal></expr>;</expr_stmt> <comment type="block" pos:start="147:35" pos:end="147:67">/* 15 Video DIFs + 1 Audio DIF */</comment>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <comment type="block" pos:start="155:9" pos:end="155:59">/* next stereo channel (50Mbps and 100Mbps only) */</comment>

        <expr_stmt pos:start="157:9" pos:end="157:27"><expr pos:start="157:9" pos:end="157:26"><name pos:start="157:9" pos:end="157:11">pcm</name> <operator pos:start="157:13" pos:end="157:13">=</operator> <name pos:start="157:15" pos:end="157:26"><name pos:start="157:15" pos:end="157:18">ppcm</name><index pos:start="157:19" pos:end="157:26">[<expr pos:start="157:20" pos:end="157:25"><name pos:start="157:20" pos:end="157:23">ipcm</name><operator pos:start="157:24" pos:end="157:25">++</operator></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="159:9" pos:end="161:18"><if pos:start="159:9" pos:end="161:18">if <condition pos:start="159:12" pos:end="159:17">(<expr pos:start="159:13" pos:end="159:16"><operator pos:start="159:13" pos:end="159:13">!</operator><name pos:start="159:14" pos:end="159:16">pcm</name></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="161:18"><block_content pos:start="161:13" pos:end="161:18">

            <break pos:start="161:13" pos:end="161:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="167:5" pos:end="167:16">return <expr pos:start="167:12" pos:end="167:15"><name pos:start="167:12" pos:end="167:15">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
