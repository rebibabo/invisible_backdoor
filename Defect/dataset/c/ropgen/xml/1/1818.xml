<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1818.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">check_protocol_support</name><parameter_list pos:start="1:34" pos:end="1:65">(<parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:48"><name pos:start="1:35" pos:end="1:38">bool</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:48">has_ipv4</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:54">bool</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:64">has_ipv6</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:13">

    <decl_stmt pos:start="5:5" pos:end="11:6"><decl pos:start="5:5" pos:end="11:5"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:22">sockaddr_in</name></name></type> <name pos:start="5:24" pos:end="5:26">sin</name> <init pos:start="5:28" pos:end="11:5">= <expr pos:start="5:30" pos:end="11:5"><block pos:start="5:30" pos:end="11:5">{

        <expr pos:start="7:9" pos:end="7:29"><operator pos:start="7:9" pos:end="7:9">.</operator><name pos:start="7:10" pos:end="7:19">sin_family</name> <operator pos:start="7:21" pos:end="7:21">=</operator> <name pos:start="7:23" pos:end="7:29">AF_INET</name></expr>,

        <expr pos:start="9:9" pos:end="9:56"><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:17">sin_addr</name> <operator pos:start="9:19" pos:end="9:19">=</operator> <block pos:start="9:21" pos:end="9:56">{ <expr pos:start="9:23" pos:end="9:54"><operator pos:start="9:23" pos:end="9:23">.</operator><name pos:start="9:24" pos:end="9:29">s_addr</name> <operator pos:start="9:31" pos:end="9:31">=</operator> <macro pos:start="9:33" pos:end="9:54"><name pos:start="9:33" pos:end="9:37">htonl</name><argument_list pos:start="9:38" pos:end="9:54">(<argument pos:start="9:39" pos:end="9:53">INADDR_LOOPBACK</argument>)</argument_list></macro></expr> }</block></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="19:6"><decl pos:start="13:5" pos:end="19:5"><type pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:23">sockaddr_in6</name></name></type> <name pos:start="13:25" pos:end="13:28">sin6</name> <init pos:start="13:30" pos:end="19:5">= <expr pos:start="13:32" pos:end="19:5"><block pos:start="13:32" pos:end="19:5">{

        <expr pos:start="15:9" pos:end="15:31"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:20">sin6_family</name> <operator pos:start="15:22" pos:end="15:22">=</operator> <name pos:start="15:24" pos:end="15:31">AF_INET6</name></expr>,

        <expr pos:start="17:9" pos:end="17:42"><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:18">sin6_addr</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:42">IN6ADDR_LOOPBACK_INIT</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:71">(<expr pos:start="23:9" pos:end="23:70"><call pos:start="23:9" pos:end="23:66"><name pos:start="23:9" pos:end="23:18">check_bind</name><argument_list pos:start="23:19" pos:end="23:66">(<argument pos:start="23:20" pos:end="23:42"><expr pos:start="23:20" pos:end="23:42"><operator pos:start="23:20" pos:end="23:20">(</operator>struct <name pos:start="23:28" pos:end="23:35">sockaddr</name> <operator pos:start="23:37" pos:end="23:37">*</operator><operator pos:start="23:38" pos:end="23:38">)</operator><operator pos:start="23:39" pos:end="23:39">&amp;</operator><name pos:start="23:40" pos:end="23:42">sin</name></expr></argument>, <argument pos:start="23:45" pos:end="23:55"><expr pos:start="23:45" pos:end="23:55"><sizeof pos:start="23:45" pos:end="23:55">sizeof<argument_list pos:start="23:51" pos:end="23:55">(<argument pos:start="23:52" pos:end="23:54"><expr pos:start="23:52" pos:end="23:54"><name pos:start="23:52" pos:end="23:54">sin</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="23:58" pos:end="23:65"><expr pos:start="23:58" pos:end="23:65"><name pos:start="23:58" pos:end="23:65">has_ipv4</name></expr></argument>)</argument_list></call> <operator pos:start="23:68" pos:end="23:68">&lt;</operator> <literal type="number" pos:start="23:70" pos:end="23:70">0</literal></expr>)</condition> <block pos:start="23:73" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:73">(<expr pos:start="29:9" pos:end="29:72"><call pos:start="29:9" pos:end="29:68"><name pos:start="29:9" pos:end="29:18">check_bind</name><argument_list pos:start="29:19" pos:end="29:68">(<argument pos:start="29:20" pos:end="29:43"><expr pos:start="29:20" pos:end="29:43"><operator pos:start="29:20" pos:end="29:20">(</operator>struct <name pos:start="29:28" pos:end="29:35">sockaddr</name> <operator pos:start="29:37" pos:end="29:37">*</operator><operator pos:start="29:38" pos:end="29:38">)</operator><operator pos:start="29:39" pos:end="29:39">&amp;</operator><name pos:start="29:40" pos:end="29:43">sin6</name></expr></argument>, <argument pos:start="29:46" pos:end="29:57"><expr pos:start="29:46" pos:end="29:57"><sizeof pos:start="29:46" pos:end="29:57">sizeof<argument_list pos:start="29:52" pos:end="29:57">(<argument pos:start="29:53" pos:end="29:56"><expr pos:start="29:53" pos:end="29:56"><name pos:start="29:53" pos:end="29:56">sin6</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:60" pos:end="29:67"><expr pos:start="29:60" pos:end="29:67"><name pos:start="29:60" pos:end="29:67">has_ipv6</name></expr></argument>)</argument_list></call> <operator pos:start="29:70" pos:end="29:70">&lt;</operator> <literal type="number" pos:start="29:72" pos:end="29:72">0</literal></expr>)</condition> <block pos:start="29:75" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:18">

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
