<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7001.c" pos:tabs="8"><function pos:start="1:1" pos:end="270:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">str_read_packet</name><parameter_list pos:start="1:27" pos:end="3:45">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:44"><decl pos:start="3:28" pos:end="3:44"><type pos:start="3:28" pos:end="3:44"><name pos:start="3:28" pos:end="3:35">AVPacket</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:44">ret_pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="270:1">{<block_content pos:start="7:5" pos:end="268:5">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">StrDemuxContext</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">str</name> <init pos:start="9:26" pos:end="9:39">= <expr pos:start="9:28" pos:end="9:39"><name pos:start="9:28" pos:end="9:39"><name pos:start="9:28" pos:end="9:28">s</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">char</name></type> <name pos:start="11:19" pos:end="11:44"><name pos:start="11:19" pos:end="11:24">sector</name><index pos:start="11:25" pos:end="11:44">[<expr pos:start="11:26" pos:end="11:43"><name pos:start="11:26" pos:end="11:43">RAW_CD_SECTOR_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">channel</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">AVPacket</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:17">pkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">AVStream</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:16">st</name></decl>;</decl_stmt>



    <while pos:start="21:5" pos:end="268:5">while <condition pos:start="21:11" pos:end="21:13">(<expr pos:start="21:12" pos:end="21:12"><literal type="number" pos:start="21:12" pos:end="21:12">1</literal></expr>)</condition> <block pos:start="21:15" pos:end="268:5">{<block_content pos:start="25:9" pos:end="266:32">



        <if_stmt pos:start="25:9" pos:end="27:32"><if pos:start="25:9" pos:end="27:32">if <condition pos:start="25:12" pos:end="25:76">(<expr pos:start="25:13" pos:end="25:75"><call pos:start="25:13" pos:end="25:53"><name pos:start="25:13" pos:end="25:21">avio_read</name><argument_list pos:start="25:22" pos:end="25:53">(<argument pos:start="25:23" pos:end="25:24"><expr pos:start="25:23" pos:end="25:24"><name pos:start="25:23" pos:end="25:24">pb</name></expr></argument>, <argument pos:start="25:27" pos:end="25:32"><expr pos:start="25:27" pos:end="25:32"><name pos:start="25:27" pos:end="25:32">sector</name></expr></argument>, <argument pos:start="25:35" pos:end="25:52"><expr pos:start="25:35" pos:end="25:52"><name pos:start="25:35" pos:end="25:52">RAW_CD_SECTOR_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="25:55" pos:end="25:56">!=</operator> <name pos:start="25:58" pos:end="25:75">RAW_CD_SECTOR_SIZE</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:32"><block_content pos:start="27:13" pos:end="27:32">

            <return pos:start="27:13" pos:end="27:32">return <expr pos:start="27:20" pos:end="27:31"><call pos:start="27:20" pos:end="27:31"><name pos:start="27:20" pos:end="27:26">AVERROR</name><argument_list pos:start="27:27" pos:end="27:31">(<argument pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:31"><expr pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:15">channel</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:30"><name pos:start="31:19" pos:end="31:24">sector</name><index pos:start="31:25" pos:end="31:30">[<expr pos:start="31:26" pos:end="31:29"><literal type="number" pos:start="31:26" pos:end="31:29">0x11</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="35:39"><if pos:start="33:9" pos:end="35:39">if <condition pos:start="33:12" pos:end="33:26">(<expr pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:19">channel</name> <operator pos:start="33:21" pos:end="33:22">&gt;=</operator> <literal type="number" pos:start="33:24" pos:end="33:25">32</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:39"><block_content pos:start="35:13" pos:end="35:39">

            <return pos:start="35:13" pos:end="35:39">return <expr pos:start="35:20" pos:end="35:38"><name pos:start="35:20" pos:end="35:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <switch pos:start="39:9" pos:end="260:9">switch <condition pos:start="39:16" pos:end="39:46">(<expr pos:start="39:17" pos:end="39:45"><name pos:start="39:17" pos:end="39:28"><name pos:start="39:17" pos:end="39:22">sector</name><index pos:start="39:23" pos:end="39:28">[<expr pos:start="39:24" pos:end="39:27"><literal type="number" pos:start="39:24" pos:end="39:27">0x12</literal></expr>]</index></name> <operator pos:start="39:30" pos:end="39:30">&amp;</operator> <name pos:start="39:32" pos:end="39:45">CDXA_TYPE_MASK</name></expr>)</condition> <block pos:start="39:48" pos:end="260:9">{<block_content pos:start="43:9" pos:end="258:18">



        <case pos:start="43:9" pos:end="43:28">case <expr pos:start="43:14" pos:end="43:27"><name pos:start="43:14" pos:end="43:27">CDXA_TYPE_DATA</name></expr>:</case>

        <case pos:start="45:9" pos:end="45:29">case <expr pos:start="45:14" pos:end="45:28"><name pos:start="45:14" pos:end="45:28">CDXA_TYPE_VIDEO</name></expr>:</case>

            <block pos:start="47:13" pos:end="172:13">{<block_content pos:start="51:17" pos:end="168:17">



                <decl_stmt pos:start="51:17" pos:end="51:60"><decl pos:start="51:17" pos:end="51:59"><type pos:start="51:17" pos:end="51:19"><name pos:start="51:17" pos:end="51:19">int</name></type> <name pos:start="51:21" pos:end="51:34">current_sector</name> <init pos:start="51:36" pos:end="51:59">= <expr pos:start="51:38" pos:end="51:59"><call pos:start="51:38" pos:end="51:59"><name pos:start="51:38" pos:end="51:44">AV_RL16</name><argument_list pos:start="51:45" pos:end="51:59">(<argument pos:start="51:46" pos:end="51:58"><expr pos:start="51:46" pos:end="51:58"><operator pos:start="51:46" pos:end="51:46">&amp;</operator><name pos:start="51:47" pos:end="51:58"><name pos:start="51:47" pos:end="51:52">sector</name><index pos:start="51:53" pos:end="51:58">[<expr pos:start="51:54" pos:end="51:57"><literal type="number" pos:start="51:54" pos:end="51:57">0x1C</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="53:17" pos:end="53:60"><decl pos:start="53:17" pos:end="53:59"><type pos:start="53:17" pos:end="53:19"><name pos:start="53:17" pos:end="53:19">int</name></type> <name pos:start="53:21" pos:end="53:32">sector_count</name>   <init pos:start="53:36" pos:end="53:59">= <expr pos:start="53:38" pos:end="53:59"><call pos:start="53:38" pos:end="53:59"><name pos:start="53:38" pos:end="53:44">AV_RL16</name><argument_list pos:start="53:45" pos:end="53:59">(<argument pos:start="53:46" pos:end="53:58"><expr pos:start="53:46" pos:end="53:58"><operator pos:start="53:46" pos:end="53:46">&amp;</operator><name pos:start="53:47" pos:end="53:58"><name pos:start="53:47" pos:end="53:52">sector</name><index pos:start="53:53" pos:end="53:58">[<expr pos:start="53:54" pos:end="53:57"><literal type="number" pos:start="53:54" pos:end="53:57">0x1E</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="55:17" pos:end="55:56"><decl pos:start="55:17" pos:end="55:55"><type pos:start="55:17" pos:end="55:19"><name pos:start="55:17" pos:end="55:19">int</name></type> <name pos:start="55:21" pos:end="55:30">frame_size</name> <init pos:start="55:32" pos:end="55:55">= <expr pos:start="55:34" pos:end="55:55"><call pos:start="55:34" pos:end="55:55"><name pos:start="55:34" pos:end="55:40">AV_RL32</name><argument_list pos:start="55:41" pos:end="55:55">(<argument pos:start="55:42" pos:end="55:54"><expr pos:start="55:42" pos:end="55:54"><operator pos:start="55:42" pos:end="55:42">&amp;</operator><name pos:start="55:43" pos:end="55:54"><name pos:start="55:43" pos:end="55:48">sector</name><index pos:start="55:49" pos:end="55:54">[<expr pos:start="55:50" pos:end="55:53"><literal type="number" pos:start="55:50" pos:end="55:53">0x24</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="59:17" pos:end="69:17"><if pos:start="59:17" pos:end="69:17">if<condition pos:start="59:19" pos:end="63:73">(<expr pos:start="59:20" pos:end="63:72"><operator pos:start="59:20" pos:end="59:20">!</operator><operator pos:start="59:21" pos:end="59:21">(</operator>   <name pos:start="59:25" pos:end="59:34">frame_size</name><operator pos:start="59:35" pos:end="59:36">&gt;=</operator><literal type="number" pos:start="59:37" pos:end="59:37">0</literal>

                     <operator pos:start="61:22" pos:end="61:23">&amp;&amp;</operator> <name pos:start="61:25" pos:end="61:38">current_sector</name> <operator pos:start="61:40" pos:end="61:40">&lt;</operator> <name pos:start="61:42" pos:end="61:53">sector_count</name>

                     <operator pos:start="63:22" pos:end="63:23">&amp;&amp;</operator> <name pos:start="63:25" pos:end="63:36">sector_count</name><operator pos:start="63:37" pos:end="63:37">*</operator><name pos:start="63:38" pos:end="63:58">VIDEO_DATA_CHUNK_SIZE</name> <operator pos:start="63:60" pos:end="63:61">&gt;=</operator><name pos:start="63:62" pos:end="63:71">frame_size</name><operator pos:start="63:72" pos:end="63:72">)</operator></expr>)</condition><block pos:start="63:74" pos:end="69:17">{<block_content pos:start="65:21" pos:end="67:26">

                    <expr_stmt pos:start="65:21" pos:end="65:119"><expr pos:start="65:21" pos:end="65:118"><call pos:start="65:21" pos:end="65:118"><name pos:start="65:21" pos:end="65:26">av_log</name><argument_list pos:start="65:27" pos:end="65:118">(<argument pos:start="65:28" pos:end="65:28"><expr pos:start="65:28" pos:end="65:28"><name pos:start="65:28" pos:end="65:28">s</name></expr></argument>, <argument pos:start="65:31" pos:end="65:42"><expr pos:start="65:31" pos:end="65:42"><name pos:start="65:31" pos:end="65:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:45" pos:end="65:75"><expr pos:start="65:45" pos:end="65:75"><literal type="string" pos:start="65:45" pos:end="65:75">"Invalid parameters %d %d %d\n"</literal></expr></argument>, <argument pos:start="65:78" pos:end="65:91"><expr pos:start="65:78" pos:end="65:91"><name pos:start="65:78" pos:end="65:91">current_sector</name></expr></argument>, <argument pos:start="65:94" pos:end="65:105"><expr pos:start="65:94" pos:end="65:105"><name pos:start="65:94" pos:end="65:105">sector_count</name></expr></argument>, <argument pos:start="65:108" pos:end="65:117"><expr pos:start="65:108" pos:end="65:117"><name pos:start="65:108" pos:end="65:117">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="67:21" pos:end="67:26">break;</break>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="73:17" pos:end="101:17"><if pos:start="73:17" pos:end="101:17">if<condition pos:start="73:19" pos:end="73:65">(<expr pos:start="73:20" pos:end="73:64"><name pos:start="73:20" pos:end="73:41"><name pos:start="73:20" pos:end="73:22">str</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:32">channels</name><index pos:start="73:33" pos:end="73:41">[<expr pos:start="73:34" pos:end="73:40"><name pos:start="73:34" pos:end="73:40">channel</name></expr>]</index></name><operator pos:start="73:42" pos:end="73:42">.</operator><name pos:start="73:43" pos:end="73:60">video_stream_index</name> <operator pos:start="73:62" pos:end="73:62">&lt;</operator> <literal type="number" pos:start="73:64" pos:end="73:64">0</literal></expr>)</condition><block pos:start="73:66" pos:end="101:17">{<block_content pos:start="77:21" pos:end="99:67">

                    <comment type="block" pos:start="75:21" pos:end="75:49">/* allocate a new AVStream */</comment>

                    <expr_stmt pos:start="77:21" pos:end="77:54"><expr pos:start="77:21" pos:end="77:53"><name pos:start="77:21" pos:end="77:22">st</name> <operator pos:start="77:24" pos:end="77:24">=</operator> <call pos:start="77:26" pos:end="77:53"><name pos:start="77:26" pos:end="77:44">avformat_new_stream</name><argument_list pos:start="77:45" pos:end="77:53">(<argument pos:start="77:46" pos:end="77:46"><expr pos:start="77:46" pos:end="77:46"><name pos:start="77:46" pos:end="77:46">s</name></expr></argument>, <argument pos:start="77:49" pos:end="77:52"><expr pos:start="77:49" pos:end="77:52"><name pos:start="77:49" pos:end="77:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="79:21" pos:end="81:47"><if pos:start="79:21" pos:end="81:47">if <condition pos:start="79:24" pos:end="79:28">(<expr pos:start="79:25" pos:end="79:27"><operator pos:start="79:25" pos:end="79:25">!</operator><name pos:start="79:26" pos:end="79:27">st</name></expr>)</condition><block type="pseudo" pos:start="81:25" pos:end="81:47"><block_content pos:start="81:25" pos:end="81:47">

                        <return pos:start="81:25" pos:end="81:47">return <expr pos:start="81:32" pos:end="81:46"><call pos:start="81:32" pos:end="81:46"><name pos:start="81:32" pos:end="81:38">AVERROR</name><argument_list pos:start="81:39" pos:end="81:46">(<argument pos:start="81:40" pos:end="81:45"><expr pos:start="81:40" pos:end="81:45"><name pos:start="81:40" pos:end="81:45">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:55"><expr pos:start="83:21" pos:end="83:54"><call pos:start="83:21" pos:end="83:54"><name pos:start="83:21" pos:end="83:39">avpriv_set_pts_info</name><argument_list pos:start="83:40" pos:end="83:54">(<argument pos:start="83:41" pos:end="83:42"><expr pos:start="83:41" pos:end="83:42"><name pos:start="83:41" pos:end="83:42">st</name></expr></argument>, <argument pos:start="83:45" pos:end="83:46"><expr pos:start="83:45" pos:end="83:46"><literal type="number" pos:start="83:45" pos:end="83:46">64</literal></expr></argument>, <argument pos:start="83:49" pos:end="83:49"><expr pos:start="83:49" pos:end="83:49"><literal type="number" pos:start="83:49" pos:end="83:49">1</literal></expr></argument>, <argument pos:start="83:52" pos:end="83:53"><expr pos:start="83:52" pos:end="83:53"><literal type="number" pos:start="83:52" pos:end="83:53">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="87:21" pos:end="87:74"><expr pos:start="87:21" pos:end="87:73"><name pos:start="87:21" pos:end="87:42"><name pos:start="87:21" pos:end="87:23">str</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:33">channels</name><index pos:start="87:34" pos:end="87:42">[<expr pos:start="87:35" pos:end="87:41"><name pos:start="87:35" pos:end="87:41">channel</name></expr>]</index></name><operator pos:start="87:43" pos:end="87:43">.</operator><name pos:start="87:44" pos:end="87:61">video_stream_index</name> <operator pos:start="87:63" pos:end="87:63">=</operator> <name pos:start="87:65" pos:end="87:73"><name pos:start="87:65" pos:end="87:66">st</name><operator pos:start="87:67" pos:end="87:68">-&gt;</operator><name pos:start="87:69" pos:end="87:73">index</name></name></expr>;</expr_stmt>



                    <expr_stmt pos:start="91:21" pos:end="91:63"><expr pos:start="91:21" pos:end="91:62"><name pos:start="91:21" pos:end="91:41"><name pos:start="91:21" pos:end="91:22">st</name><operator pos:start="91:23" pos:end="91:24">-&gt;</operator><name pos:start="91:25" pos:end="91:29">codec</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:41">codec_type</name></name> <operator pos:start="91:43" pos:end="91:43">=</operator> <name pos:start="91:45" pos:end="91:62">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:61"><expr pos:start="93:21" pos:end="93:60"><name pos:start="93:21" pos:end="93:39"><name pos:start="93:21" pos:end="93:22">st</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:29">codec</name><operator pos:start="93:30" pos:end="93:31">-&gt;</operator><name pos:start="93:32" pos:end="93:39">codec_id</name></name>   <operator pos:start="93:43" pos:end="93:43">=</operator> <name pos:start="93:45" pos:end="93:60">AV_CODEC_ID_MDEC</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:46"><expr pos:start="95:21" pos:end="95:45"><name pos:start="95:21" pos:end="95:40"><name pos:start="95:21" pos:end="95:22">st</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:29">codec</name><operator pos:start="95:30" pos:end="95:31">-&gt;</operator><name pos:start="95:32" pos:end="95:40">codec_tag</name></name>  <operator pos:start="95:43" pos:end="95:43">=</operator> <literal type="number" pos:start="95:45" pos:end="95:45">0</literal></expr>;</expr_stmt>  <comment type="block" pos:start="95:49" pos:end="95:63">/* no fourcc */</comment>

                    <expr_stmt pos:start="97:21" pos:end="97:67"><expr pos:start="97:21" pos:end="97:66"><name pos:start="97:21" pos:end="97:36"><name pos:start="97:21" pos:end="97:22">st</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:29">codec</name><operator pos:start="97:30" pos:end="97:31">-&gt;</operator><name pos:start="97:32" pos:end="97:36">width</name></name>      <operator pos:start="97:43" pos:end="97:43">=</operator> <call pos:start="97:45" pos:end="97:66"><name pos:start="97:45" pos:end="97:51">AV_RL16</name><argument_list pos:start="97:52" pos:end="97:66">(<argument pos:start="97:53" pos:end="97:65"><expr pos:start="97:53" pos:end="97:65"><operator pos:start="97:53" pos:end="97:53">&amp;</operator><name pos:start="97:54" pos:end="97:65"><name pos:start="97:54" pos:end="97:59">sector</name><index pos:start="97:60" pos:end="97:65">[<expr pos:start="97:61" pos:end="97:64"><literal type="number" pos:start="97:61" pos:end="97:64">0x28</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="99:21" pos:end="99:67"><expr pos:start="99:21" pos:end="99:66"><name pos:start="99:21" pos:end="99:37"><name pos:start="99:21" pos:end="99:22">st</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:29">codec</name><operator pos:start="99:30" pos:end="99:31">-&gt;</operator><name pos:start="99:32" pos:end="99:37">height</name></name>     <operator pos:start="99:43" pos:end="99:43">=</operator> <call pos:start="99:45" pos:end="99:66"><name pos:start="99:45" pos:end="99:51">AV_RL16</name><argument_list pos:start="99:52" pos:end="99:66">(<argument pos:start="99:53" pos:end="99:65"><expr pos:start="99:53" pos:end="99:65"><operator pos:start="99:53" pos:end="99:53">&amp;</operator><name pos:start="99:54" pos:end="99:65"><name pos:start="99:54" pos:end="99:59">sector</name><index pos:start="99:60" pos:end="99:65">[<expr pos:start="99:61" pos:end="99:64"><literal type="number" pos:start="99:61" pos:end="99:64">0x2A</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="105:17" pos:end="105:78">/* if this is the first sector of the frame, allocate a pkt */</comment>

                <expr_stmt pos:start="107:17" pos:end="107:54"><expr pos:start="107:17" pos:end="107:53"><name pos:start="107:17" pos:end="107:19">pkt</name> <operator pos:start="107:21" pos:end="107:21">=</operator> <operator pos:start="107:23" pos:end="107:23">&amp;</operator><name pos:start="107:24" pos:end="107:45"><name pos:start="107:24" pos:end="107:26">str</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:36">channels</name><index pos:start="107:37" pos:end="107:45">[<expr pos:start="107:38" pos:end="107:44"><name pos:start="107:38" pos:end="107:44">channel</name></expr>]</index></name><operator pos:start="107:46" pos:end="107:46">.</operator><name pos:start="107:47" pos:end="107:53">tmp_pkt</name></expr>;</expr_stmt>



                <if_stmt pos:start="111:17" pos:end="132:17"><if pos:start="111:17" pos:end="132:17">if<condition pos:start="111:19" pos:end="111:67">(<expr pos:start="111:20" pos:end="111:66"><name pos:start="111:20" pos:end="111:28"><name pos:start="111:20" pos:end="111:22">pkt</name><operator pos:start="111:23" pos:end="111:24">-&gt;</operator><name pos:start="111:25" pos:end="111:28">size</name></name> <operator pos:start="111:30" pos:end="111:31">!=</operator> <name pos:start="111:33" pos:end="111:44">sector_count</name><operator pos:start="111:45" pos:end="111:45">*</operator><name pos:start="111:46" pos:end="111:66">VIDEO_DATA_CHUNK_SIZE</name></expr>)</condition><block pos:start="111:68" pos:end="132:17">{<block_content pos:start="113:21" pos:end="130:66">

                    <if_stmt pos:start="113:21" pos:end="115:79"><if pos:start="113:21" pos:end="115:79">if<condition pos:start="113:23" pos:end="113:33">(<expr pos:start="113:24" pos:end="113:32"><name pos:start="113:24" pos:end="113:32"><name pos:start="113:24" pos:end="113:26">pkt</name><operator pos:start="113:27" pos:end="113:28">-&gt;</operator><name pos:start="113:29" pos:end="113:32">data</name></name></expr>)</condition><block type="pseudo" pos:start="115:25" pos:end="115:79"><block_content pos:start="115:25" pos:end="115:79">

                        <expr_stmt pos:start="115:25" pos:end="115:79"><expr pos:start="115:25" pos:end="115:78"><call pos:start="115:25" pos:end="115:78"><name pos:start="115:25" pos:end="115:30">av_log</name><argument_list pos:start="115:31" pos:end="115:78">(<argument pos:start="115:32" pos:end="115:32"><expr pos:start="115:32" pos:end="115:32"><name pos:start="115:32" pos:end="115:32">s</name></expr></argument>, <argument pos:start="115:35" pos:end="115:46"><expr pos:start="115:35" pos:end="115:46"><name pos:start="115:35" pos:end="115:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="115:49" pos:end="115:77"><expr pos:start="115:49" pos:end="115:77"><literal type="string" pos:start="115:49" pos:end="115:77">"missmatching sector_count\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="117:21" pos:end="117:40"><expr pos:start="117:21" pos:end="117:39"><call pos:start="117:21" pos:end="117:39"><name pos:start="117:21" pos:end="117:34">av_free_packet</name><argument_list pos:start="117:35" pos:end="117:39">(<argument pos:start="117:36" pos:end="117:38"><expr pos:start="117:36" pos:end="117:38"><name pos:start="117:36" pos:end="117:38">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="119:21" pos:end="121:44"><if pos:start="119:21" pos:end="121:44">if <condition pos:start="119:24" pos:end="119:79">(<expr pos:start="119:25" pos:end="119:78"><call pos:start="119:25" pos:end="119:78"><name pos:start="119:25" pos:end="119:37">av_new_packet</name><argument_list pos:start="119:38" pos:end="119:78">(<argument pos:start="119:39" pos:end="119:41"><expr pos:start="119:39" pos:end="119:41"><name pos:start="119:39" pos:end="119:41">pkt</name></expr></argument>, <argument pos:start="119:44" pos:end="119:77"><expr pos:start="119:44" pos:end="119:77"><name pos:start="119:44" pos:end="119:55">sector_count</name><operator pos:start="119:56" pos:end="119:56">*</operator><name pos:start="119:57" pos:end="119:77">VIDEO_DATA_CHUNK_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="121:25" pos:end="121:44"><block_content pos:start="121:25" pos:end="121:44">

                        <return pos:start="121:25" pos:end="121:44">return <expr pos:start="121:32" pos:end="121:43"><call pos:start="121:32" pos:end="121:43"><name pos:start="121:32" pos:end="121:38">AVERROR</name><argument_list pos:start="121:39" pos:end="121:43">(<argument pos:start="121:40" pos:end="121:42"><expr pos:start="121:40" pos:end="121:42"><name pos:start="121:40" pos:end="121:42">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>




                    <expr_stmt pos:start="126:21" pos:end="126:65"><expr pos:start="126:21" pos:end="126:64"><name pos:start="126:21" pos:end="126:28"><name pos:start="126:21" pos:end="126:23">pkt</name><operator pos:start="126:24" pos:end="126:25">-&gt;</operator><name pos:start="126:26" pos:end="126:28">pos</name></name><operator pos:start="126:29" pos:end="126:29">=</operator> <call pos:start="126:31" pos:end="126:43"><name pos:start="126:31" pos:end="126:39">avio_tell</name><argument_list pos:start="126:40" pos:end="126:43">(<argument pos:start="126:41" pos:end="126:42"><expr pos:start="126:41" pos:end="126:42"><name pos:start="126:41" pos:end="126:42">pb</name></expr></argument>)</argument_list></call> <operator pos:start="126:45" pos:end="126:45">-</operator> <name pos:start="126:47" pos:end="126:64">RAW_CD_SECTOR_SIZE</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="128:21" pos:end="130:66"><expr pos:start="128:21" pos:end="130:65"><name pos:start="128:21" pos:end="128:37"><name pos:start="128:21" pos:end="128:23">pkt</name><operator pos:start="128:24" pos:end="128:25">-&gt;</operator><name pos:start="128:26" pos:end="128:37">stream_index</name></name> <operator pos:start="128:39" pos:end="128:39">=</operator>

                        <name pos:start="130:25" pos:end="130:46"><name pos:start="130:25" pos:end="130:27">str</name><operator pos:start="130:28" pos:end="130:29">-&gt;</operator><name pos:start="130:30" pos:end="130:37">channels</name><index pos:start="130:38" pos:end="130:46">[<expr pos:start="130:39" pos:end="130:45"><name pos:start="130:39" pos:end="130:45">channel</name></expr>]</index></name><operator pos:start="130:47" pos:end="130:47">.</operator><name pos:start="130:48" pos:end="130:65">video_stream_index</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="136:17" pos:end="140:46"><expr pos:start="136:17" pos:end="140:45"><call pos:start="136:17" pos:end="140:45"><name pos:start="136:17" pos:end="136:22">memcpy</name><argument_list pos:start="136:23" pos:end="140:45">(<argument pos:start="136:24" pos:end="136:71"><expr pos:start="136:24" pos:end="136:71"><name pos:start="136:24" pos:end="136:32"><name pos:start="136:24" pos:end="136:26">pkt</name><operator pos:start="136:27" pos:end="136:28">-&gt;</operator><name pos:start="136:29" pos:end="136:32">data</name></name> <operator pos:start="136:34" pos:end="136:34">+</operator> <name pos:start="136:36" pos:end="136:49">current_sector</name><operator pos:start="136:50" pos:end="136:50">*</operator><name pos:start="136:51" pos:end="136:71">VIDEO_DATA_CHUNK_SIZE</name></expr></argument>,

                       <argument pos:start="138:24" pos:end="138:54"><expr pos:start="138:24" pos:end="138:54"><name pos:start="138:24" pos:end="138:29">sector</name> <operator pos:start="138:31" pos:end="138:31">+</operator> <name pos:start="138:33" pos:end="138:54">VIDEO_DATA_HEADER_SIZE</name></expr></argument>,

                       <argument pos:start="140:24" pos:end="140:44"><expr pos:start="140:24" pos:end="140:44"><name pos:start="140:24" pos:end="140:44">VIDEO_DATA_CHUNK_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="144:17" pos:end="168:17"><if pos:start="144:17" pos:end="168:17">if <condition pos:start="144:20" pos:end="144:53">(<expr pos:start="144:21" pos:end="144:52"><name pos:start="144:21" pos:end="144:34">current_sector</name> <operator pos:start="144:36" pos:end="144:37">==</operator> <name pos:start="144:39" pos:end="144:50">sector_count</name><operator pos:start="144:51" pos:end="144:51">-</operator><literal type="number" pos:start="144:52" pos:end="144:52">1</literal></expr>)</condition> <block pos:start="144:55" pos:end="168:17">{<block_content pos:start="146:21" pos:end="166:29">

                    <expr_stmt pos:start="146:21" pos:end="146:42"><expr pos:start="146:21" pos:end="146:41"><name pos:start="146:21" pos:end="146:29"><name pos:start="146:21" pos:end="146:23">pkt</name><operator pos:start="146:24" pos:end="146:25">-&gt;</operator><name pos:start="146:26" pos:end="146:29">size</name></name><operator pos:start="146:30" pos:end="146:30">=</operator> <name pos:start="146:32" pos:end="146:41">frame_size</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="148:21" pos:end="148:36"><expr pos:start="148:21" pos:end="148:35"><operator pos:start="148:21" pos:end="148:21">*</operator><name pos:start="148:22" pos:end="148:28">ret_pkt</name> <operator pos:start="148:30" pos:end="148:30">=</operator> <operator pos:start="148:32" pos:end="148:32">*</operator><name pos:start="148:33" pos:end="148:35">pkt</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="150:21" pos:end="150:36"><expr pos:start="150:21" pos:end="150:35"><name pos:start="150:21" pos:end="150:29"><name pos:start="150:21" pos:end="150:23">pkt</name><operator pos:start="150:24" pos:end="150:25">-&gt;</operator><name pos:start="150:26" pos:end="150:29">data</name></name><operator pos:start="150:30" pos:end="150:30">=</operator> <name pos:start="150:32" pos:end="150:35">NULL</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="152:21" pos:end="152:34"><expr pos:start="152:21" pos:end="152:33"><name pos:start="152:21" pos:end="152:29"><name pos:start="152:21" pos:end="152:23">pkt</name><operator pos:start="152:24" pos:end="152:25">-&gt;</operator><name pos:start="152:26" pos:end="152:29">size</name></name><operator pos:start="152:30" pos:end="152:30">=</operator> <operator pos:start="152:32" pos:end="152:32">-</operator><literal type="number" pos:start="152:33" pos:end="152:33">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="154:21" pos:end="157:0"><expr pos:start="154:21" pos:end="154:35"><name pos:start="154:21" pos:end="154:28"><name pos:start="154:21" pos:end="154:23">pkt</name><operator pos:start="154:24" pos:end="154:25">-&gt;</operator><name pos:start="154:26" pos:end="154:28">buf</name></name> <operator pos:start="154:30" pos:end="154:30">=</operator> <name pos:start="154:32" pos:end="154:35">NULL</name></expr>;</expr_stmt>

<cpp:if pos:start="156:1" pos:end="156:26">#<cpp:directive pos:start="156:2" pos:end="156:3">if</cpp:directive> <expr pos:start="156:5" pos:end="156:26"><name pos:start="156:5" pos:end="156:26">FF_API_DESTRUCT_PACKET</name></expr></cpp:if>

<decl_stmt pos:start="158:1" pos:end="160:41"><decl pos:start="158:1" pos:end="160:40"><type pos:start="158:1" pos:end="158:31"><name pos:start="158:1" pos:end="158:31">FF_DISABLE_DEPRECATION_WARNINGS</name></type>

                    <name pos:start="160:21" pos:end="160:33"><name pos:start="160:21" pos:end="160:23">pkt</name><operator pos:start="160:24" pos:end="160:25">-&gt;</operator><name pos:start="160:26" pos:end="160:33">destruct</name></name> <init pos:start="160:35" pos:end="160:40">= <expr pos:start="160:37" pos:end="160:40"><name pos:start="160:37" pos:end="160:40">NULL</name></expr></init></decl>;</decl_stmt>

<macro pos:start="162:1" pos:end="165:0"><name pos:start="162:1" pos:end="165:0">FF_ENABLE_DEPRECATION_WARNINGS</name></macro>

<cpp:endif pos:start="164:1" pos:end="164:6">#<cpp:directive pos:start="164:2" pos:end="164:6">endif</cpp:directive></cpp:endif>

                    <return pos:start="166:21" pos:end="166:29">return <expr pos:start="166:28" pos:end="166:28"><literal type="number" pos:start="166:28" pos:end="166:28">0</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>



            </block_content>}</block>

            <break pos:start="174:13" pos:end="174:18">break;</break>



        <case pos:start="178:9" pos:end="178:29">case <expr pos:start="178:14" pos:end="178:28"><name pos:start="178:14" pos:end="178:28">CDXA_TYPE_AUDIO</name></expr>:</case>

            <if_stmt pos:start="180:13" pos:end="232:13"><if pos:start="180:13" pos:end="232:13">if<condition pos:start="180:15" pos:end="180:61">(<expr pos:start="180:16" pos:end="180:60"><name pos:start="180:16" pos:end="180:37"><name pos:start="180:16" pos:end="180:18">str</name><operator pos:start="180:19" pos:end="180:20">-&gt;</operator><name pos:start="180:21" pos:end="180:28">channels</name><index pos:start="180:29" pos:end="180:37">[<expr pos:start="180:30" pos:end="180:36"><name pos:start="180:30" pos:end="180:36">channel</name></expr>]</index></name><operator pos:start="180:38" pos:end="180:38">.</operator><name pos:start="180:39" pos:end="180:56">audio_stream_index</name> <operator pos:start="180:58" pos:end="180:58">&lt;</operator> <literal type="number" pos:start="180:60" pos:end="180:60">0</literal></expr>)</condition><block pos:start="180:62" pos:end="232:13">{<block_content pos:start="182:17" pos:end="230:35">

                <decl_stmt pos:start="182:17" pos:end="182:39"><decl pos:start="182:17" pos:end="182:38"><type pos:start="182:17" pos:end="182:19"><name pos:start="182:17" pos:end="182:19">int</name></type> <name pos:start="182:21" pos:end="182:23">fmt</name> <init pos:start="182:25" pos:end="182:38">= <expr pos:start="182:27" pos:end="182:38"><name pos:start="182:27" pos:end="182:38"><name pos:start="182:27" pos:end="182:32">sector</name><index pos:start="182:33" pos:end="182:38">[<expr pos:start="182:34" pos:end="182:37"><literal type="number" pos:start="182:34" pos:end="182:37">0x13</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <comment type="block" pos:start="184:17" pos:end="184:45">/* allocate a new AVStream */</comment>

                <expr_stmt pos:start="186:17" pos:end="186:50"><expr pos:start="186:17" pos:end="186:49"><name pos:start="186:17" pos:end="186:18">st</name> <operator pos:start="186:20" pos:end="186:20">=</operator> <call pos:start="186:22" pos:end="186:49"><name pos:start="186:22" pos:end="186:40">avformat_new_stream</name><argument_list pos:start="186:41" pos:end="186:49">(<argument pos:start="186:42" pos:end="186:42"><expr pos:start="186:42" pos:end="186:42"><name pos:start="186:42" pos:end="186:42">s</name></expr></argument>, <argument pos:start="186:45" pos:end="186:48"><expr pos:start="186:45" pos:end="186:48"><name pos:start="186:45" pos:end="186:48">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="188:17" pos:end="190:43"><if pos:start="188:17" pos:end="190:43">if <condition pos:start="188:20" pos:end="188:24">(<expr pos:start="188:21" pos:end="188:23"><operator pos:start="188:21" pos:end="188:21">!</operator><name pos:start="188:22" pos:end="188:23">st</name></expr>)</condition><block type="pseudo" pos:start="190:21" pos:end="190:43"><block_content pos:start="190:21" pos:end="190:43">

                    <return pos:start="190:21" pos:end="190:43">return <expr pos:start="190:28" pos:end="190:42"><call pos:start="190:28" pos:end="190:42"><name pos:start="190:28" pos:end="190:34">AVERROR</name><argument_list pos:start="190:35" pos:end="190:42">(<argument pos:start="190:36" pos:end="190:41"><expr pos:start="190:36" pos:end="190:41"><name pos:start="190:36" pos:end="190:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



                <expr_stmt pos:start="194:17" pos:end="194:70"><expr pos:start="194:17" pos:end="194:69"><name pos:start="194:17" pos:end="194:38"><name pos:start="194:17" pos:end="194:19">str</name><operator pos:start="194:20" pos:end="194:21">-&gt;</operator><name pos:start="194:22" pos:end="194:29">channels</name><index pos:start="194:30" pos:end="194:38">[<expr pos:start="194:31" pos:end="194:37"><name pos:start="194:31" pos:end="194:37">channel</name></expr>]</index></name><operator pos:start="194:39" pos:end="194:39">.</operator><name pos:start="194:40" pos:end="194:57">audio_stream_index</name> <operator pos:start="194:59" pos:end="194:59">=</operator> <name pos:start="194:61" pos:end="194:69"><name pos:start="194:61" pos:end="194:62">st</name><operator pos:start="194:63" pos:end="194:64">-&gt;</operator><name pos:start="194:65" pos:end="194:69">index</name></name></expr>;</expr_stmt>



                <expr_stmt pos:start="198:17" pos:end="198:60"><expr pos:start="198:17" pos:end="198:59"><name pos:start="198:17" pos:end="198:37"><name pos:start="198:17" pos:end="198:18">st</name><operator pos:start="198:19" pos:end="198:20">-&gt;</operator><name pos:start="198:21" pos:end="198:25">codec</name><operator pos:start="198:26" pos:end="198:27">-&gt;</operator><name pos:start="198:28" pos:end="198:37">codec_type</name></name>  <operator pos:start="198:40" pos:end="198:40">=</operator> <name pos:start="198:42" pos:end="198:59">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

                <expr_stmt pos:start="200:17" pos:end="200:62"><expr pos:start="200:17" pos:end="200:61"><name pos:start="200:17" pos:end="200:35"><name pos:start="200:17" pos:end="200:18">st</name><operator pos:start="200:19" pos:end="200:20">-&gt;</operator><name pos:start="200:21" pos:end="200:25">codec</name><operator pos:start="200:26" pos:end="200:27">-&gt;</operator><name pos:start="200:28" pos:end="200:35">codec_id</name></name>    <operator pos:start="200:40" pos:end="200:40">=</operator> <name pos:start="200:42" pos:end="200:61">AV_CODEC_ID_ADPCM_XA</name></expr>;</expr_stmt>

                <expr_stmt pos:start="202:17" pos:end="202:43"><expr pos:start="202:17" pos:end="202:42"><name pos:start="202:17" pos:end="202:36"><name pos:start="202:17" pos:end="202:18">st</name><operator pos:start="202:19" pos:end="202:20">-&gt;</operator><name pos:start="202:21" pos:end="202:25">codec</name><operator pos:start="202:26" pos:end="202:27">-&gt;</operator><name pos:start="202:28" pos:end="202:36">codec_tag</name></name>   <operator pos:start="202:40" pos:end="202:40">=</operator> <literal type="number" pos:start="202:42" pos:end="202:42">0</literal></expr>;</expr_stmt>  <comment type="block" pos:start="202:46" pos:end="202:60">/* no fourcc */</comment>

                <if_stmt pos:start="204:17" pos:end="216:17"><if pos:start="204:17" pos:end="210:17">if <condition pos:start="204:20" pos:end="204:28">(<expr pos:start="204:21" pos:end="204:27"><name pos:start="204:21" pos:end="204:23">fmt</name> <operator pos:start="204:25" pos:end="204:25">&amp;</operator> <literal type="number" pos:start="204:27" pos:end="204:27">1</literal></expr>)</condition> <block pos:start="204:30" pos:end="210:17">{<block_content pos:start="206:21" pos:end="208:68">

                    <expr_stmt pos:start="206:21" pos:end="206:50"><expr pos:start="206:21" pos:end="206:49"><name pos:start="206:21" pos:end="206:39"><name pos:start="206:21" pos:end="206:22">st</name><operator pos:start="206:23" pos:end="206:24">-&gt;</operator><name pos:start="206:25" pos:end="206:29">codec</name><operator pos:start="206:30" pos:end="206:31">-&gt;</operator><name pos:start="206:32" pos:end="206:39">channels</name></name>       <operator pos:start="206:47" pos:end="206:47">=</operator> <literal type="number" pos:start="206:49" pos:end="206:49">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="208:21" pos:end="208:68"><expr pos:start="208:21" pos:end="208:67"><name pos:start="208:21" pos:end="208:45"><name pos:start="208:21" pos:end="208:22">st</name><operator pos:start="208:23" pos:end="208:24">-&gt;</operator><name pos:start="208:25" pos:end="208:29">codec</name><operator pos:start="208:30" pos:end="208:31">-&gt;</operator><name pos:start="208:32" pos:end="208:45">channel_layout</name></name> <operator pos:start="208:47" pos:end="208:47">=</operator> <name pos:start="208:49" pos:end="208:67">AV_CH_LAYOUT_STEREO</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="210:19" pos:end="216:17">else <block pos:start="210:24" pos:end="216:17">{<block_content pos:start="212:21" pos:end="214:66">

                    <expr_stmt pos:start="212:21" pos:end="212:50"><expr pos:start="212:21" pos:end="212:49"><name pos:start="212:21" pos:end="212:39"><name pos:start="212:21" pos:end="212:22">st</name><operator pos:start="212:23" pos:end="212:24">-&gt;</operator><name pos:start="212:25" pos:end="212:29">codec</name><operator pos:start="212:30" pos:end="212:31">-&gt;</operator><name pos:start="212:32" pos:end="212:39">channels</name></name>       <operator pos:start="212:47" pos:end="212:47">=</operator> <literal type="number" pos:start="212:49" pos:end="212:49">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="214:21" pos:end="214:66"><expr pos:start="214:21" pos:end="214:65"><name pos:start="214:21" pos:end="214:45"><name pos:start="214:21" pos:end="214:22">st</name><operator pos:start="214:23" pos:end="214:24">-&gt;</operator><name pos:start="214:25" pos:end="214:29">codec</name><operator pos:start="214:30" pos:end="214:31">-&gt;</operator><name pos:start="214:32" pos:end="214:45">channel_layout</name></name> <operator pos:start="214:47" pos:end="214:47">=</operator> <name pos:start="214:49" pos:end="214:65">AV_CH_LAYOUT_MONO</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="218:17" pos:end="218:61"><expr pos:start="218:17" pos:end="218:60"><name pos:start="218:17" pos:end="218:38"><name pos:start="218:17" pos:end="218:18">st</name><operator pos:start="218:19" pos:end="218:20">-&gt;</operator><name pos:start="218:21" pos:end="218:25">codec</name><operator pos:start="218:26" pos:end="218:27">-&gt;</operator><name pos:start="218:28" pos:end="218:38">sample_rate</name></name> <operator pos:start="218:40" pos:end="218:40">=</operator> <ternary pos:start="218:42" pos:end="218:60"><condition pos:start="218:42" pos:end="218:49"><expr pos:start="218:42" pos:end="218:48"><operator pos:start="218:42" pos:end="218:42">(</operator><name pos:start="218:43" pos:end="218:45">fmt</name><operator pos:start="218:46" pos:end="218:46">&amp;</operator><literal type="number" pos:start="218:47" pos:end="218:47">4</literal><operator pos:start="218:48" pos:end="218:48">)</operator></expr>?</condition><then pos:start="218:50" pos:end="218:54"><expr pos:start="218:50" pos:end="218:54"><literal type="number" pos:start="218:50" pos:end="218:54">18900</literal></expr></then><else pos:start="218:55" pos:end="218:60">:<expr pos:start="218:56" pos:end="218:60"><literal type="number" pos:start="218:56" pos:end="218:60">37800</literal></expr></else></ternary></expr>;</expr_stmt>

            <comment type="line" pos:start="220:13" pos:end="220:51">//    st-&gt;codec-&gt;bit_rate = 0; //FIXME;</comment>

                <expr_stmt pos:start="222:17" pos:end="222:45"><expr pos:start="222:17" pos:end="222:44"><name pos:start="222:17" pos:end="222:38"><name pos:start="222:17" pos:end="222:18">st</name><operator pos:start="222:19" pos:end="222:20">-&gt;</operator><name pos:start="222:21" pos:end="222:25">codec</name><operator pos:start="222:26" pos:end="222:27">-&gt;</operator><name pos:start="222:28" pos:end="222:38">block_align</name></name> <operator pos:start="222:40" pos:end="222:40">=</operator> <literal type="number" pos:start="222:42" pos:end="222:44">128</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="226:17" pos:end="228:60"><expr pos:start="226:17" pos:end="228:59"><call pos:start="226:17" pos:end="228:59"><name pos:start="226:17" pos:end="226:35">avpriv_set_pts_info</name><argument_list pos:start="226:36" pos:end="228:59">(<argument pos:start="226:37" pos:end="226:38"><expr pos:start="226:37" pos:end="226:38"><name pos:start="226:37" pos:end="226:38">st</name></expr></argument>, <argument pos:start="226:41" pos:end="226:42"><expr pos:start="226:41" pos:end="226:42"><literal type="number" pos:start="226:41" pos:end="226:42">64</literal></expr></argument>, <argument pos:start="226:45" pos:end="226:74"><expr pos:start="226:45" pos:end="226:74"><literal type="number" pos:start="226:45" pos:end="226:46">18</literal> <operator pos:start="226:48" pos:end="226:48">*</operator> <literal type="number" pos:start="226:50" pos:end="226:52">224</literal> <operator pos:start="226:54" pos:end="226:54">/</operator> <name pos:start="226:56" pos:end="226:74"><name pos:start="226:56" pos:end="226:57">st</name><operator pos:start="226:58" pos:end="226:59">-&gt;</operator><name pos:start="226:60" pos:end="226:64">codec</name><operator pos:start="226:65" pos:end="226:66">-&gt;</operator><name pos:start="226:67" pos:end="226:74">channels</name></name></expr></argument>,

                                    <argument pos:start="228:37" pos:end="228:58"><expr pos:start="228:37" pos:end="228:58"><name pos:start="228:37" pos:end="228:58"><name pos:start="228:37" pos:end="228:38">st</name><operator pos:start="228:39" pos:end="228:40">-&gt;</operator><name pos:start="228:41" pos:end="228:45">codec</name><operator pos:start="228:46" pos:end="228:47">-&gt;</operator><name pos:start="228:48" pos:end="228:58">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="230:17" pos:end="230:35"><expr pos:start="230:17" pos:end="230:34"><name pos:start="230:17" pos:end="230:30"><name pos:start="230:17" pos:end="230:18">st</name><operator pos:start="230:19" pos:end="230:20">-&gt;</operator><name pos:start="230:21" pos:end="230:30">start_time</name></name> <operator pos:start="230:32" pos:end="230:32">=</operator> <literal type="number" pos:start="230:34" pos:end="230:34">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="234:13" pos:end="234:26"><expr pos:start="234:13" pos:end="234:25"><name pos:start="234:13" pos:end="234:15">pkt</name> <operator pos:start="234:17" pos:end="234:17">=</operator> <name pos:start="234:19" pos:end="234:25">ret_pkt</name></expr>;</expr_stmt>

            <if_stmt pos:start="236:13" pos:end="238:36"><if pos:start="236:13" pos:end="238:36">if <condition pos:start="236:16" pos:end="236:41">(<expr pos:start="236:17" pos:end="236:40"><call pos:start="236:17" pos:end="236:40"><name pos:start="236:17" pos:end="236:29">av_new_packet</name><argument_list pos:start="236:30" pos:end="236:40">(<argument pos:start="236:31" pos:end="236:33"><expr pos:start="236:31" pos:end="236:33"><name pos:start="236:31" pos:end="236:33">pkt</name></expr></argument>, <argument pos:start="236:36" pos:end="236:39"><expr pos:start="236:36" pos:end="236:39"><literal type="number" pos:start="236:36" pos:end="236:39">2304</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="238:17" pos:end="238:36"><block_content pos:start="238:17" pos:end="238:36">

                <return pos:start="238:17" pos:end="238:36">return <expr pos:start="238:24" pos:end="238:35"><call pos:start="238:24" pos:end="238:35"><name pos:start="238:24" pos:end="238:30">AVERROR</name><argument_list pos:start="238:31" pos:end="238:35">(<argument pos:start="238:32" pos:end="238:34"><expr pos:start="238:32" pos:end="238:34"><name pos:start="238:32" pos:end="238:34">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="240:13" pos:end="240:45"><expr pos:start="240:13" pos:end="240:44"><call pos:start="240:13" pos:end="240:44"><name pos:start="240:13" pos:end="240:18">memcpy</name><argument_list pos:start="240:19" pos:end="240:44">(<argument pos:start="240:20" pos:end="240:28"><expr pos:start="240:20" pos:end="240:28"><name pos:start="240:20" pos:end="240:28"><name pos:start="240:20" pos:end="240:22">pkt</name><operator pos:start="240:23" pos:end="240:24">-&gt;</operator><name pos:start="240:25" pos:end="240:28">data</name></name></expr></argument>,<argument pos:start="240:30" pos:end="240:38"><expr pos:start="240:30" pos:end="240:38"><name pos:start="240:30" pos:end="240:35">sector</name><operator pos:start="240:36" pos:end="240:36">+</operator><literal type="number" pos:start="240:37" pos:end="240:38">24</literal></expr></argument>,<argument pos:start="240:40" pos:end="240:43"><expr pos:start="240:40" pos:end="240:43"><literal type="number" pos:start="240:40" pos:end="240:43">2304</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="244:13" pos:end="246:58"><expr pos:start="244:13" pos:end="246:57"><name pos:start="244:13" pos:end="244:29"><name pos:start="244:13" pos:end="244:15">pkt</name><operator pos:start="244:16" pos:end="244:17">-&gt;</operator><name pos:start="244:18" pos:end="244:29">stream_index</name></name> <operator pos:start="244:31" pos:end="244:31">=</operator>

                <name pos:start="246:17" pos:end="246:38"><name pos:start="246:17" pos:end="246:19">str</name><operator pos:start="246:20" pos:end="246:21">-&gt;</operator><name pos:start="246:22" pos:end="246:29">channels</name><index pos:start="246:30" pos:end="246:38">[<expr pos:start="246:31" pos:end="246:37"><name pos:start="246:31" pos:end="246:37">channel</name></expr>]</index></name><operator pos:start="246:39" pos:end="246:39">.</operator><name pos:start="246:40" pos:end="246:57">audio_stream_index</name></expr>;</expr_stmt>

            <expr_stmt pos:start="248:13" pos:end="248:30"><expr pos:start="248:13" pos:end="248:29"><name pos:start="248:13" pos:end="248:25"><name pos:start="248:13" pos:end="248:15">pkt</name><operator pos:start="248:16" pos:end="248:17">-&gt;</operator><name pos:start="248:18" pos:end="248:25">duration</name></name> <operator pos:start="248:27" pos:end="248:27">=</operator> <literal type="number" pos:start="248:29" pos:end="248:29">1</literal></expr>;</expr_stmt>

            <return pos:start="250:13" pos:end="250:21">return <expr pos:start="250:20" pos:end="250:20"><literal type="number" pos:start="250:20" pos:end="250:20">0</literal></expr>;</return>

        <default pos:start="252:9" pos:end="252:16">default:</default>

            <expr_stmt pos:start="254:13" pos:end="254:82"><expr pos:start="254:13" pos:end="254:81"><call pos:start="254:13" pos:end="254:81"><name pos:start="254:13" pos:end="254:18">av_log</name><argument_list pos:start="254:19" pos:end="254:81">(<argument pos:start="254:20" pos:end="254:20"><expr pos:start="254:20" pos:end="254:20"><name pos:start="254:20" pos:end="254:20">s</name></expr></argument>, <argument pos:start="254:23" pos:end="254:36"><expr pos:start="254:23" pos:end="254:36"><name pos:start="254:23" pos:end="254:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="254:39" pos:end="254:66"><expr pos:start="254:39" pos:end="254:66"><literal type="string" pos:start="254:39" pos:end="254:66">"Unknown sector type %02X\n"</literal></expr></argument>, <argument pos:start="254:69" pos:end="254:80"><expr pos:start="254:69" pos:end="254:80"><name pos:start="254:69" pos:end="254:80"><name pos:start="254:69" pos:end="254:74">sector</name><index pos:start="254:75" pos:end="254:80">[<expr pos:start="254:76" pos:end="254:79"><literal type="number" pos:start="254:76" pos:end="254:79">0x12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="256:13" pos:end="256:45">/* drop the sector and move on */</comment>

            <break pos:start="258:13" pos:end="258:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="264:9" pos:end="266:32"><if pos:start="264:9" pos:end="266:32">if <condition pos:start="264:12" pos:end="264:25">(<expr pos:start="264:13" pos:end="264:24"><call pos:start="264:13" pos:end="264:24"><name pos:start="264:13" pos:end="264:20">url_feof</name><argument_list pos:start="264:21" pos:end="264:24">(<argument pos:start="264:22" pos:end="264:23"><expr pos:start="264:22" pos:end="264:23"><name pos:start="264:22" pos:end="264:23">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="266:13" pos:end="266:32"><block_content pos:start="266:13" pos:end="266:32">

            <return pos:start="266:13" pos:end="266:32">return <expr pos:start="266:20" pos:end="266:31"><call pos:start="266:20" pos:end="266:31"><name pos:start="266:20" pos:end="266:26">AVERROR</name><argument_list pos:start="266:27" pos:end="266:31">(<argument pos:start="266:28" pos:end="266:30"><expr pos:start="266:28" pos:end="266:30"><name pos:start="266:28" pos:end="266:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function></unit>
