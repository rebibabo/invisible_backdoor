<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23315.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:33"><name pos:start="1:1" pos:end="1:24">iscsi_readv_writev_bh_cb</name><argument_list pos:start="1:25" pos:end="1:33">(<argument pos:start="1:26" pos:end="1:32">void *p</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:21">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">IscsiAIOCB</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">acb</name> <init pos:start="5:21" pos:end="5:23">= <expr pos:start="5:23" pos:end="5:23"><name pos:start="5:23" pos:end="5:23">p</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:28"><expr pos:start="9:5" pos:end="9:27"><call pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:18">qemu_bh_delete</name><argument_list pos:start="9:19" pos:end="9:27">(<argument pos:start="9:20" pos:end="9:26"><expr pos:start="9:20" pos:end="9:26"><name pos:start="9:20" pos:end="9:26"><name pos:start="9:20" pos:end="9:22">acb</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:26">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:23">(<expr pos:start="13:9" pos:end="13:22"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:22"><name pos:start="13:10" pos:end="13:12">acb</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:22">canceled</name></name></expr>)</condition> <block pos:start="13:25" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:56">

        <expr_stmt pos:start="15:9" pos:end="15:56"><expr pos:start="15:9" pos:end="15:55"><call pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:11">acb</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:19">common</name><operator pos:start="15:20" pos:end="15:20">.</operator><name pos:start="15:21" pos:end="15:22">cb</name></name><argument_list pos:start="15:23" pos:end="15:55">(<argument pos:start="15:24" pos:end="15:41"><expr pos:start="15:24" pos:end="15:41"><name pos:start="15:24" pos:end="15:41"><name pos:start="15:24" pos:end="15:26">acb</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:34">common</name><operator pos:start="15:35" pos:end="15:35">.</operator><name pos:start="15:36" pos:end="15:41">opaque</name></name></expr></argument>, <argument pos:start="15:44" pos:end="15:54"><expr pos:start="15:44" pos:end="15:54"><name pos:start="15:44" pos:end="15:54"><name pos:start="15:44" pos:end="15:46">acb</name><operator pos:start="15:47" pos:end="15:48">-&gt;</operator><name pos:start="15:49" pos:end="15:54">status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><call pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:20">qemu_aio_release</name><argument_list pos:start="21:21" pos:end="21:25">(<argument pos:start="21:22" pos:end="21:24"><expr pos:start="21:22" pos:end="21:24"><name pos:start="21:22" pos:end="21:24">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:22">(<expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:11">acb</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:21">canceled</name></name></expr>)</condition> <block pos:start="25:24" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:15">

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:35"><expr pos:start="33:5" pos:end="33:34"><call pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:23">scsi_free_scsi_task</name><argument_list pos:start="33:24" pos:end="33:34">(<argument pos:start="33:25" pos:end="33:33"><expr pos:start="33:25" pos:end="33:33"><name pos:start="33:25" pos:end="33:33"><name pos:start="33:25" pos:end="33:27">acb</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:33">task</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:21"><expr pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:13"><name pos:start="35:5" pos:end="35:7">acb</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:13">task</name></name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:20">NULL</name></expr>;</expr_stmt>

</block_content>}</block>
</unit>
