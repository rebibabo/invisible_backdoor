<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6342.c" pos:tabs="8"><function pos:start="1:1" pos:end="48:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">usb_desc_create_serial</name><parameter_list pos:start="1:28" pos:end="1:43">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:39"><name pos:start="1:29" pos:end="1:37">USBDevice</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="48:1">{<block_content pos:start="5:5" pos:end="45:44">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">hcd</name> <init pos:start="5:22" pos:end="5:51">= <expr pos:start="5:24" pos:end="5:51"><name pos:start="5:24" pos:end="5:51"><name pos:start="5:24" pos:end="5:26">dev</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:32">qdev</name><operator pos:start="5:33" pos:end="5:33">.</operator><name pos:start="5:34" pos:end="5:43">parent_bus</name><operator pos:start="5:44" pos:end="5:45">-&gt;</operator><name pos:start="5:46" pos:end="5:51">parent</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">USBDesc</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:23">desc</name> <init pos:start="7:25" pos:end="7:54">= <expr pos:start="7:27" pos:end="7:54"><call pos:start="7:27" pos:end="7:54"><name pos:start="7:27" pos:end="7:49">usb_device_get_usb_desc</name><argument_list pos:start="7:50" pos:end="7:54">(<argument pos:start="7:51" pos:end="7:53"><expr pos:start="7:51" pos:end="7:53"><name pos:start="7:51" pos:end="7:53">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">index</name> <init pos:start="9:15" pos:end="9:38">= <expr pos:start="9:17" pos:end="9:38"><name pos:start="9:17" pos:end="9:38"><name pos:start="9:17" pos:end="9:20">desc</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:24">id</name><operator pos:start="9:25" pos:end="9:25">.</operator><name pos:start="9:26" pos:end="9:38">iSerialNumber</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:19"><name pos:start="11:10" pos:end="11:15">serial</name><index pos:start="11:16" pos:end="11:19">[<expr pos:start="11:17" pos:end="11:18"><literal type="number" pos:start="11:17" pos:end="11:18">64</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:14">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">dst</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:20">(<expr pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:11">dev</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:19">serial</name></name></expr>)</condition> <block pos:start="19:22" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <comment type="block" pos:start="21:9" pos:end="21:63">/* 'serial' usb bus property has priority if present */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:53"><expr pos:start="23:9" pos:end="23:52"><call pos:start="23:9" pos:end="23:52"><name pos:start="23:9" pos:end="23:27">usb_desc_set_string</name><argument_list pos:start="23:28" pos:end="23:52">(<argument pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:31">dev</name></expr></argument>, <argument pos:start="23:34" pos:end="23:38"><expr pos:start="23:34" pos:end="23:38"><name pos:start="23:34" pos:end="23:38">index</name></expr></argument>, <argument pos:start="23:41" pos:end="23:51"><expr pos:start="23:41" pos:end="23:51"><name pos:start="23:41" pos:end="23:51"><name pos:start="23:41" pos:end="23:43">dev</name><operator pos:start="23:44" pos:end="23:45">-&gt;</operator><name pos:start="23:46" pos:end="23:51">serial</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:51"><expr pos:start="31:5" pos:end="31:50"><call pos:start="31:5" pos:end="31:50"><name pos:start="31:5" pos:end="31:10">assert</name><argument_list pos:start="31:11" pos:end="31:50">(<argument pos:start="31:12" pos:end="31:49"><expr pos:start="31:12" pos:end="31:49"><name pos:start="31:12" pos:end="31:16">index</name> <operator pos:start="31:18" pos:end="31:19">!=</operator> <literal type="number" pos:start="31:21" pos:end="31:21">0</literal> <operator pos:start="31:23" pos:end="31:24">&amp;&amp;</operator> <name pos:start="31:26" pos:end="31:41"><name pos:start="31:26" pos:end="31:29">desc</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:34">str</name><index pos:start="31:35" pos:end="31:41">[<expr pos:start="31:36" pos:end="31:40"><name pos:start="31:36" pos:end="31:40">index</name></expr>]</index></name> <operator pos:start="31:43" pos:end="31:44">!=</operator> <name pos:start="31:46" pos:end="31:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:67"><expr pos:start="33:5" pos:end="33:66"><name pos:start="33:5" pos:end="33:7">dst</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:66"><name pos:start="33:11" pos:end="33:18">snprintf</name><argument_list pos:start="33:19" pos:end="33:66">(<argument pos:start="33:20" pos:end="33:25"><expr pos:start="33:20" pos:end="33:25"><name pos:start="33:20" pos:end="33:25">serial</name></expr></argument>, <argument pos:start="33:28" pos:end="33:41"><expr pos:start="33:28" pos:end="33:41"><sizeof pos:start="33:28" pos:end="33:41">sizeof<argument_list pos:start="33:34" pos:end="33:41">(<argument pos:start="33:35" pos:end="33:40"><expr pos:start="33:35" pos:end="33:40"><name pos:start="33:35" pos:end="33:40">serial</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:44" pos:end="33:47"><expr pos:start="33:44" pos:end="33:47"><literal type="string" pos:start="33:44" pos:end="33:47">"%s"</literal></expr></argument>, <argument pos:start="33:50" pos:end="33:65"><expr pos:start="33:50" pos:end="33:65"><name pos:start="33:50" pos:end="33:65"><name pos:start="33:50" pos:end="33:53">desc</name><operator pos:start="33:54" pos:end="33:55">-&gt;</operator><name pos:start="33:56" pos:end="33:58">str</name><index pos:start="33:59" pos:end="33:65">[<expr pos:start="33:60" pos:end="33:64"><name pos:start="33:60" pos:end="33:64">index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:34"><expr pos:start="35:5" pos:end="35:33"><name pos:start="35:5" pos:end="35:8">path</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <call pos:start="35:12" pos:end="35:33"><name pos:start="35:12" pos:end="35:28">qdev_get_dev_path</name><argument_list pos:start="35:29" pos:end="35:33">(<argument pos:start="35:30" pos:end="35:32"><expr pos:start="35:30" pos:end="35:32"><name pos:start="35:30" pos:end="35:32">hcd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:13">(<expr pos:start="37:9" pos:end="37:12"><name pos:start="37:9" pos:end="37:12">path</name></expr>)</condition> <block pos:start="37:15" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:69">

        <expr_stmt pos:start="39:9" pos:end="39:69"><expr pos:start="39:9" pos:end="39:68"><name pos:start="39:9" pos:end="39:11">dst</name> <operator pos:start="39:13" pos:end="39:14">+=</operator> <call pos:start="39:16" pos:end="39:68"><name pos:start="39:16" pos:end="39:23">snprintf</name><argument_list pos:start="39:24" pos:end="39:68">(<argument pos:start="39:25" pos:end="39:34"><expr pos:start="39:25" pos:end="39:34"><name pos:start="39:25" pos:end="39:30">serial</name><operator pos:start="39:31" pos:end="39:31">+</operator><name pos:start="39:32" pos:end="39:34">dst</name></expr></argument>, <argument pos:start="39:37" pos:end="39:54"><expr pos:start="39:37" pos:end="39:54"><sizeof pos:start="39:37" pos:end="39:50">sizeof<argument_list pos:start="39:43" pos:end="39:50">(<argument pos:start="39:44" pos:end="39:49"><expr pos:start="39:44" pos:end="39:49"><name pos:start="39:44" pos:end="39:49">serial</name></expr></argument>)</argument_list></sizeof><operator pos:start="39:51" pos:end="39:51">-</operator><name pos:start="39:52" pos:end="39:54">dst</name></expr></argument>, <argument pos:start="39:57" pos:end="39:61"><expr pos:start="39:57" pos:end="39:61"><literal type="string" pos:start="39:57" pos:end="39:61">"-%s"</literal></expr></argument>, <argument pos:start="39:64" pos:end="39:67"><expr pos:start="39:64" pos:end="39:67"><name pos:start="39:64" pos:end="39:67">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:76"><expr pos:start="43:5" pos:end="43:75"><name pos:start="43:5" pos:end="43:7">dst</name> <operator pos:start="43:9" pos:end="43:10">+=</operator> <call pos:start="43:12" pos:end="43:75"><name pos:start="43:12" pos:end="43:19">snprintf</name><argument_list pos:start="43:20" pos:end="43:75">(<argument pos:start="43:21" pos:end="43:30"><expr pos:start="43:21" pos:end="43:30"><name pos:start="43:21" pos:end="43:26">serial</name><operator pos:start="43:27" pos:end="43:27">+</operator><name pos:start="43:28" pos:end="43:30">dst</name></expr></argument>, <argument pos:start="43:33" pos:end="43:50"><expr pos:start="43:33" pos:end="43:50"><sizeof pos:start="43:33" pos:end="43:46">sizeof<argument_list pos:start="43:39" pos:end="43:46">(<argument pos:start="43:40" pos:end="43:45"><expr pos:start="43:40" pos:end="43:45"><name pos:start="43:40" pos:end="43:45">serial</name></expr></argument>)</argument_list></sizeof><operator pos:start="43:47" pos:end="43:47">-</operator><name pos:start="43:48" pos:end="43:50">dst</name></expr></argument>, <argument pos:start="43:53" pos:end="43:57"><expr pos:start="43:53" pos:end="43:57"><literal type="string" pos:start="43:53" pos:end="43:57">"-%s"</literal></expr></argument>, <argument pos:start="43:60" pos:end="43:74"><expr pos:start="43:60" pos:end="43:74"><name pos:start="43:60" pos:end="43:74"><name pos:start="43:60" pos:end="43:62">dev</name><operator pos:start="43:63" pos:end="43:64">-&gt;</operator><name pos:start="43:65" pos:end="43:68">port</name><operator pos:start="43:69" pos:end="43:70">-&gt;</operator><name pos:start="43:71" pos:end="43:74">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:44"><expr pos:start="45:5" pos:end="45:43"><call pos:start="45:5" pos:end="45:43"><name pos:start="45:5" pos:end="45:23">usb_desc_set_string</name><argument_list pos:start="45:24" pos:end="45:43">(<argument pos:start="45:25" pos:end="45:27"><expr pos:start="45:25" pos:end="45:27"><name pos:start="45:25" pos:end="45:27">dev</name></expr></argument>, <argument pos:start="45:30" pos:end="45:34"><expr pos:start="45:30" pos:end="45:34"><name pos:start="45:30" pos:end="45:34">index</name></expr></argument>, <argument pos:start="45:37" pos:end="45:42"><expr pos:start="45:37" pos:end="45:42"><name pos:start="45:37" pos:end="45:42">serial</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


</block_content>}</block></function></unit>
