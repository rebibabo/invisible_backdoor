<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15111.c" pos:tabs="8"><function pos:start="1:1" pos:end="527:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">asf_write_header1</name><parameter_list pos:start="1:29" pos:end="3:53">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:66"><decl pos:start="1:50" pos:end="1:66"><type pos:start="1:50" pos:end="1:66"><name pos:start="1:50" pos:end="1:56">int64_t</name></type> <name pos:start="1:58" pos:end="1:66">file_size</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:52"><decl pos:start="3:30" pos:end="3:52"><type pos:start="3:30" pos:end="3:52"><name pos:start="3:30" pos:end="3:36">int64_t</name></type> <name pos:start="3:38" pos:end="3:52">data_chunk_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="527:1">{<block_content pos:start="7:5" pos:end="525:13">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">ASFContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">asf</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">AVDictionaryEntry</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:30"><name pos:start="11:24" pos:end="11:27">tags</name><index pos:start="11:28" pos:end="11:30">[<expr pos:start="11:29" pos:end="11:29"><literal type="number" pos:start="11:29" pos:end="11:29">5</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:75"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">header_size</name></decl>, <decl pos:start="13:22" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:22">n</name></decl>, <decl pos:start="13:25" pos:end="13:34"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:25" pos:end="13:34">extra_size</name></decl>, <decl pos:start="13:37" pos:end="13:47"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:37" pos:end="13:47">extra_size2</name></decl>, <decl pos:start="13:50" pos:end="13:63"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:50" pos:end="13:63">wav_extra_size</name></decl>, <decl pos:start="13:66" pos:end="13:74"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:66" pos:end="13:74">file_time</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">has_title</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:22">metadata_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:27"><decl pos:start="19:5" pos:end="19:26"><type pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:21">AVCodecParameters</name> <modifier pos:start="19:23" pos:end="19:23">*</modifier></type><name pos:start="19:24" pos:end="19:26">par</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:41"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">int64_t</name></type> <name pos:start="21:13" pos:end="21:25">header_offset</name></decl>, <decl pos:start="21:28" pos:end="21:34"><type ref="prev" pos:start="21:5" pos:end="21:11"/><name pos:start="21:28" pos:end="21:34">cur_pos</name></decl>, <decl pos:start="21:37" pos:end="21:40"><type ref="prev" pos:start="21:5" pos:end="21:11"/><name pos:start="21:37" pos:end="21:40">hpos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:17"><decl pos:start="23:5" pos:end="23:16"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:16">bit_rate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:11">int64_t</name></type> <name pos:start="25:13" pos:end="25:20">duration</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:63"><expr pos:start="29:5" pos:end="29:62"><call pos:start="29:5" pos:end="29:62"><name pos:start="29:5" pos:end="29:20">ff_metadata_conv</name><argument_list pos:start="29:21" pos:end="29:62">(<argument pos:start="29:22" pos:end="29:33"><expr pos:start="29:22" pos:end="29:33"><operator pos:start="29:22" pos:end="29:22">&amp;</operator><name pos:start="29:23" pos:end="29:33"><name pos:start="29:23" pos:end="29:23">s</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:33">metadata</name></name></expr></argument>, <argument pos:start="29:36" pos:end="29:55"><expr pos:start="29:36" pos:end="29:55"><name pos:start="29:36" pos:end="29:55">ff_asf_metadata_conv</name></expr></argument>, <argument pos:start="29:58" pos:end="29:61"><expr pos:start="29:58" pos:end="29:61"><name pos:start="29:58" pos:end="29:61">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:57"><expr pos:start="33:5" pos:end="33:56"><name pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:8">tags</name><index pos:start="33:9" pos:end="33:11">[<expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">0</literal></expr>]</index></name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:56"><name pos:start="33:15" pos:end="33:25">av_dict_get</name><argument_list pos:start="33:26" pos:end="33:56">(<argument pos:start="33:27" pos:end="33:37"><expr pos:start="33:27" pos:end="33:37"><name pos:start="33:27" pos:end="33:37"><name pos:start="33:27" pos:end="33:27">s</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:37">metadata</name></name></expr></argument>, <argument pos:start="33:40" pos:end="33:46"><expr pos:start="33:40" pos:end="33:46"><literal type="string" pos:start="33:40" pos:end="33:46">"title"</literal></expr></argument>, <argument pos:start="33:49" pos:end="33:52"><expr pos:start="33:49" pos:end="33:52"><name pos:start="33:49" pos:end="33:52">NULL</name></expr></argument>, <argument pos:start="33:55" pos:end="33:55"><expr pos:start="33:55" pos:end="33:55"><literal type="number" pos:start="33:55" pos:end="33:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:58"><expr pos:start="35:5" pos:end="35:57"><name pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:8">tags</name><index pos:start="35:9" pos:end="35:11">[<expr pos:start="35:10" pos:end="35:10"><literal type="number" pos:start="35:10" pos:end="35:10">1</literal></expr>]</index></name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:57"><name pos:start="35:15" pos:end="35:25">av_dict_get</name><argument_list pos:start="35:26" pos:end="35:57">(<argument pos:start="35:27" pos:end="35:37"><expr pos:start="35:27" pos:end="35:37"><name pos:start="35:27" pos:end="35:37"><name pos:start="35:27" pos:end="35:27">s</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:37">metadata</name></name></expr></argument>, <argument pos:start="35:40" pos:end="35:47"><expr pos:start="35:40" pos:end="35:47"><literal type="string" pos:start="35:40" pos:end="35:47">"author"</literal></expr></argument>, <argument pos:start="35:50" pos:end="35:53"><expr pos:start="35:50" pos:end="35:53"><name pos:start="35:50" pos:end="35:53">NULL</name></expr></argument>, <argument pos:start="35:56" pos:end="35:56"><expr pos:start="35:56" pos:end="35:56"><literal type="number" pos:start="35:56" pos:end="35:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:61"><expr pos:start="37:5" pos:end="37:60"><name pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:8">tags</name><index pos:start="37:9" pos:end="37:11">[<expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">2</literal></expr>]</index></name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:60"><name pos:start="37:15" pos:end="37:25">av_dict_get</name><argument_list pos:start="37:26" pos:end="37:60">(<argument pos:start="37:27" pos:end="37:37"><expr pos:start="37:27" pos:end="37:37"><name pos:start="37:27" pos:end="37:37"><name pos:start="37:27" pos:end="37:27">s</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:37">metadata</name></name></expr></argument>, <argument pos:start="37:40" pos:end="37:50"><expr pos:start="37:40" pos:end="37:50"><literal type="string" pos:start="37:40" pos:end="37:50">"copyright"</literal></expr></argument>, <argument pos:start="37:53" pos:end="37:56"><expr pos:start="37:53" pos:end="37:56"><name pos:start="37:53" pos:end="37:56">NULL</name></expr></argument>, <argument pos:start="37:59" pos:end="37:59"><expr pos:start="37:59" pos:end="37:59"><literal type="number" pos:start="37:59" pos:end="37:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:59"><expr pos:start="39:5" pos:end="39:58"><name pos:start="39:5" pos:end="39:11"><name pos:start="39:5" pos:end="39:8">tags</name><index pos:start="39:9" pos:end="39:11">[<expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">3</literal></expr>]</index></name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:58"><name pos:start="39:15" pos:end="39:25">av_dict_get</name><argument_list pos:start="39:26" pos:end="39:58">(<argument pos:start="39:27" pos:end="39:37"><expr pos:start="39:27" pos:end="39:37"><name pos:start="39:27" pos:end="39:37"><name pos:start="39:27" pos:end="39:27">s</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:37">metadata</name></name></expr></argument>, <argument pos:start="39:40" pos:end="39:48"><expr pos:start="39:40" pos:end="39:48"><literal type="string" pos:start="39:40" pos:end="39:48">"comment"</literal></expr></argument>, <argument pos:start="39:51" pos:end="39:54"><expr pos:start="39:51" pos:end="39:54"><name pos:start="39:51" pos:end="39:54">NULL</name></expr></argument>, <argument pos:start="39:57" pos:end="39:57"><expr pos:start="39:57" pos:end="39:57"><literal type="number" pos:start="39:57" pos:end="39:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:58"><expr pos:start="41:5" pos:end="41:57"><name pos:start="41:5" pos:end="41:11"><name pos:start="41:5" pos:end="41:8">tags</name><index pos:start="41:9" pos:end="41:11">[<expr pos:start="41:10" pos:end="41:10"><literal type="number" pos:start="41:10" pos:end="41:10">4</literal></expr>]</index></name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:57"><name pos:start="41:15" pos:end="41:25">av_dict_get</name><argument_list pos:start="41:26" pos:end="41:57">(<argument pos:start="41:27" pos:end="41:37"><expr pos:start="41:27" pos:end="41:37"><name pos:start="41:27" pos:end="41:37"><name pos:start="41:27" pos:end="41:27">s</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:37">metadata</name></name></expr></argument>, <argument pos:start="41:40" pos:end="41:47"><expr pos:start="41:40" pos:end="41:47"><literal type="string" pos:start="41:40" pos:end="41:47">"rating"</literal></expr></argument>, <argument pos:start="41:50" pos:end="41:53"><expr pos:start="41:50" pos:end="41:53"><name pos:start="41:50" pos:end="41:53">NULL</name></expr></argument>, <argument pos:start="41:56" pos:end="41:56"><expr pos:start="41:56" pos:end="41:56"><literal type="number" pos:start="41:56" pos:end="41:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:58"><expr pos:start="45:5" pos:end="45:57"><name pos:start="45:5" pos:end="45:12">duration</name>       <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:34"><name pos:start="45:22" pos:end="45:24">asf</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:34">duration</name></name> <operator pos:start="45:36" pos:end="45:36">+</operator> <name pos:start="45:38" pos:end="45:49">PREROLL_TIME</name> <operator pos:start="45:51" pos:end="45:51">*</operator> <literal type="number" pos:start="45:53" pos:end="45:57">10000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:73"><expr pos:start="47:5" pos:end="47:72"><name pos:start="47:5" pos:end="47:13">has_title</name>      <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:28"><name pos:start="47:22" pos:end="47:25">tags</name><index pos:start="47:26" pos:end="47:28">[<expr pos:start="47:27" pos:end="47:27"><literal type="number" pos:start="47:27" pos:end="47:27">0</literal></expr>]</index></name> <operator pos:start="47:30" pos:end="47:31">||</operator> <name pos:start="47:33" pos:end="47:39"><name pos:start="47:33" pos:end="47:36">tags</name><index pos:start="47:37" pos:end="47:39">[<expr pos:start="47:38" pos:end="47:38"><literal type="number" pos:start="47:38" pos:end="47:38">1</literal></expr>]</index></name> <operator pos:start="47:41" pos:end="47:42">||</operator> <name pos:start="47:44" pos:end="47:50"><name pos:start="47:44" pos:end="47:47">tags</name><index pos:start="47:48" pos:end="47:50">[<expr pos:start="47:49" pos:end="47:49"><literal type="number" pos:start="47:49" pos:end="47:49">2</literal></expr>]</index></name> <operator pos:start="47:52" pos:end="47:53">||</operator> <name pos:start="47:55" pos:end="47:61"><name pos:start="47:55" pos:end="47:58">tags</name><index pos:start="47:59" pos:end="47:61">[<expr pos:start="47:60" pos:end="47:60"><literal type="number" pos:start="47:60" pos:end="47:60">3</literal></expr>]</index></name> <operator pos:start="47:63" pos:end="47:64">||</operator> <name pos:start="47:66" pos:end="47:72"><name pos:start="47:66" pos:end="47:69">tags</name><index pos:start="47:70" pos:end="47:72">[<expr pos:start="47:71" pos:end="47:71"><literal type="number" pos:start="47:71" pos:end="47:71">4</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:48"><expr pos:start="49:5" pos:end="49:47"><name pos:start="49:5" pos:end="49:18">metadata_count</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <call pos:start="49:22" pos:end="49:47"><name pos:start="49:22" pos:end="49:34">av_dict_count</name><argument_list pos:start="49:35" pos:end="49:47">(<argument pos:start="49:36" pos:end="49:46"><expr pos:start="49:36" pos:end="49:46"><name pos:start="49:36" pos:end="49:46"><name pos:start="49:36" pos:end="49:36">s</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:46">metadata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:17"><expr pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:12">bit_rate</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>;</expr_stmt>

    <for pos:start="55:5" pos:end="67:5">for <control pos:start="55:9" pos:end="55:39">(<init pos:start="55:10" pos:end="55:15"><expr pos:start="55:10" pos:end="55:14"><name pos:start="55:10" pos:end="55:10">n</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>;</init> <condition pos:start="55:17" pos:end="55:34"><expr pos:start="55:17" pos:end="55:33"><name pos:start="55:17" pos:end="55:17">n</name> <operator pos:start="55:19" pos:end="55:19">&lt;</operator> <name pos:start="55:21" pos:end="55:33"><name pos:start="55:21" pos:end="55:21">s</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:33">nb_streams</name></name></expr>;</condition> <incr pos:start="55:36" pos:end="55:38"><expr pos:start="55:36" pos:end="55:38"><name pos:start="55:36" pos:end="55:36">n</name><operator pos:start="55:37" pos:end="55:38">++</operator></expr></incr>)</control> <block pos:start="55:41" pos:end="67:5">{<block_content pos:start="57:9" pos:end="65:34">

        <expr_stmt pos:start="57:9" pos:end="57:38"><expr pos:start="57:9" pos:end="57:37"><name pos:start="57:9" pos:end="57:11">par</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:27"><name pos:start="57:15" pos:end="57:15">s</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:24">streams</name><index pos:start="57:25" pos:end="57:27">[<expr pos:start="57:26" pos:end="57:26"><name pos:start="57:26" pos:end="57:26">n</name></expr>]</index></name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:37">codecpar</name></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:56"><expr pos:start="61:9" pos:end="61:55"><call pos:start="61:9" pos:end="61:55"><name pos:start="61:9" pos:end="61:27">avpriv_set_pts_info</name><argument_list pos:start="61:28" pos:end="61:55">(<argument pos:start="61:29" pos:end="61:41"><expr pos:start="61:29" pos:end="61:41"><name pos:start="61:29" pos:end="61:41"><name pos:start="61:29" pos:end="61:29">s</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:38">streams</name><index pos:start="61:39" pos:end="61:41">[<expr pos:start="61:40" pos:end="61:40"><name pos:start="61:40" pos:end="61:40">n</name></expr>]</index></name></expr></argument>, <argument pos:start="61:44" pos:end="61:45"><expr pos:start="61:44" pos:end="61:45"><literal type="number" pos:start="61:44" pos:end="61:45">32</literal></expr></argument>, <argument pos:start="61:48" pos:end="61:48"><expr pos:start="61:48" pos:end="61:48"><literal type="number" pos:start="61:48" pos:end="61:48">1</literal></expr></argument>, <argument pos:start="61:51" pos:end="61:54"><expr pos:start="61:51" pos:end="61:54"><literal type="number" pos:start="61:51" pos:end="61:54">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="61:58" pos:end="61:79">/* 32 bit pts in ms */</comment>



        <expr_stmt pos:start="65:9" pos:end="65:34"><expr pos:start="65:9" pos:end="65:33"><name pos:start="65:9" pos:end="65:16">bit_rate</name> <operator pos:start="65:18" pos:end="65:19">+=</operator> <name pos:start="65:21" pos:end="65:33"><name pos:start="65:21" pos:end="65:23">par</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:33">bit_rate</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="71:5" pos:end="75:5"><if pos:start="71:5" pos:end="75:5">if <condition pos:start="71:8" pos:end="71:25">(<expr pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:11">asf</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:24">is_streamed</name></name></expr>)</condition> <block pos:start="71:27" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:39">

        <expr_stmt pos:start="73:9" pos:end="73:39"><expr pos:start="73:9" pos:end="73:38"><call pos:start="73:9" pos:end="73:38"><name pos:start="73:9" pos:end="73:17">put_chunk</name><argument_list pos:start="73:18" pos:end="73:38">(<argument pos:start="73:19" pos:end="73:19"><expr pos:start="73:19" pos:end="73:19"><name pos:start="73:19" pos:end="73:19">s</name></expr></argument>, <argument pos:start="73:22" pos:end="73:27"><expr pos:start="73:22" pos:end="73:27"><literal type="number" pos:start="73:22" pos:end="73:27">0x4824</literal></expr></argument>, <argument pos:start="73:30" pos:end="73:30"><expr pos:start="73:30" pos:end="73:30"><literal type="number" pos:start="73:30" pos:end="73:30">0</literal></expr></argument>, <argument pos:start="73:33" pos:end="73:37"><expr pos:start="73:33" pos:end="73:37"><literal type="number" pos:start="73:33" pos:end="73:37">0xc00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="73:41" pos:end="73:92">/* start of stream (length will be patched later) */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:33"><expr pos:start="79:5" pos:end="79:32"><call pos:start="79:5" pos:end="79:32"><name pos:start="79:5" pos:end="79:12">put_guid</name><argument_list pos:start="79:13" pos:end="79:32">(<argument pos:start="79:14" pos:end="79:15"><expr pos:start="79:14" pos:end="79:15"><name pos:start="79:14" pos:end="79:15">pb</name></expr></argument>, <argument pos:start="79:18" pos:end="79:31"><expr pos:start="79:18" pos:end="79:31"><operator pos:start="79:18" pos:end="79:18">&amp;</operator><name pos:start="79:19" pos:end="79:31">ff_asf_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:22"><expr pos:start="81:5" pos:end="81:21"><call pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:13">avio_wl64</name><argument_list pos:start="81:14" pos:end="81:21">(<argument pos:start="81:15" pos:end="81:16"><expr pos:start="81:15" pos:end="81:16"><name pos:start="81:15" pos:end="81:16">pb</name></expr></argument>, <argument pos:start="81:19" pos:end="81:20"><expr pos:start="81:19" pos:end="81:20"><operator pos:start="81:19" pos:end="81:19">-</operator><literal type="number" pos:start="81:20" pos:end="81:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="81:24" pos:end="81:65">/* header length, will be patched after */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:68"><expr pos:start="83:5" pos:end="83:67"><call pos:start="83:5" pos:end="83:67"><name pos:start="83:5" pos:end="83:13">avio_wl32</name><argument_list pos:start="83:14" pos:end="83:67">(<argument pos:start="83:15" pos:end="83:16"><expr pos:start="83:15" pos:end="83:16"><name pos:start="83:15" pos:end="83:16">pb</name></expr></argument>, <argument pos:start="83:19" pos:end="83:66"><expr pos:start="83:19" pos:end="83:66"><literal type="number" pos:start="83:19" pos:end="83:21">3</literal> <operator pos:start="83:21" pos:end="83:21">+</operator> <name pos:start="83:23" pos:end="83:31">has_title</name> <operator pos:start="83:33" pos:end="83:33">+</operator> <operator pos:start="83:35" pos:end="83:35">!</operator><operator pos:start="83:36" pos:end="83:36">!</operator><name pos:start="83:37" pos:end="83:50">metadata_count</name> <operator pos:start="83:52" pos:end="83:52">+</operator> <name pos:start="83:54" pos:end="83:66"><name pos:start="83:54" pos:end="83:54">s</name><operator pos:start="83:55" pos:end="83:56">-&gt;</operator><name pos:start="83:57" pos:end="83:66">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="83:70" pos:end="83:101">/* number of chunks in header */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:19"><expr pos:start="85:5" pos:end="85:18"><call pos:start="85:5" pos:end="85:18"><name pos:start="85:5" pos:end="85:11">avio_w8</name><argument_list pos:start="85:12" pos:end="85:18">(<argument pos:start="85:13" pos:end="85:14"><expr pos:start="85:13" pos:end="85:14"><name pos:start="85:13" pos:end="85:14">pb</name></expr></argument>, <argument pos:start="85:17" pos:end="85:17"><expr pos:start="85:17" pos:end="85:17"><literal type="number" pos:start="85:17" pos:end="85:17">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="85:21" pos:end="85:29">/* ??? */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:19"><expr pos:start="87:5" pos:end="87:18"><call pos:start="87:5" pos:end="87:18"><name pos:start="87:5" pos:end="87:11">avio_w8</name><argument_list pos:start="87:12" pos:end="87:18">(<argument pos:start="87:13" pos:end="87:14"><expr pos:start="87:13" pos:end="87:14"><name pos:start="87:13" pos:end="87:14">pb</name></expr></argument>, <argument pos:start="87:17" pos:end="87:17"><expr pos:start="87:17" pos:end="87:17"><literal type="number" pos:start="87:17" pos:end="87:17">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="87:21" pos:end="87:29">/* ??? */</comment>



    <comment type="block" pos:start="91:5" pos:end="91:21">/* file header */</comment>

    <expr_stmt pos:start="93:5" pos:end="93:34"><expr pos:start="93:5" pos:end="93:33"><name pos:start="93:5" pos:end="93:17">header_offset</name> <operator pos:start="93:19" pos:end="93:19">=</operator> <call pos:start="93:21" pos:end="93:33"><name pos:start="93:21" pos:end="93:29">avio_tell</name><argument_list pos:start="93:30" pos:end="93:33">(<argument pos:start="93:31" pos:end="93:32"><expr pos:start="93:31" pos:end="93:32"><name pos:start="93:31" pos:end="93:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:56"><expr pos:start="95:5" pos:end="95:55"><name pos:start="95:5" pos:end="95:8">hpos</name>          <operator pos:start="95:19" pos:end="95:19">=</operator> <call pos:start="95:21" pos:end="95:55"><name pos:start="95:21" pos:end="95:30">put_header</name><argument_list pos:start="95:31" pos:end="95:55">(<argument pos:start="95:32" pos:end="95:33"><expr pos:start="95:32" pos:end="95:33"><name pos:start="95:32" pos:end="95:33">pb</name></expr></argument>, <argument pos:start="95:36" pos:end="95:54"><expr pos:start="95:36" pos:end="95:54"><operator pos:start="95:36" pos:end="95:36">&amp;</operator><name pos:start="95:37" pos:end="95:54">ff_asf_file_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:34"><expr pos:start="97:5" pos:end="97:33"><call pos:start="97:5" pos:end="97:33"><name pos:start="97:5" pos:end="97:12">put_guid</name><argument_list pos:start="97:13" pos:end="97:33">(<argument pos:start="97:14" pos:end="97:15"><expr pos:start="97:14" pos:end="97:15"><name pos:start="97:14" pos:end="97:15">pb</name></expr></argument>, <argument pos:start="97:18" pos:end="97:32"><expr pos:start="97:18" pos:end="97:32"><operator pos:start="97:18" pos:end="97:18">&amp;</operator><name pos:start="97:19" pos:end="97:32">ff_asf_my_guid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:29"><expr pos:start="99:5" pos:end="99:28"><call pos:start="99:5" pos:end="99:28"><name pos:start="99:5" pos:end="99:13">avio_wl64</name><argument_list pos:start="99:14" pos:end="99:28">(<argument pos:start="99:15" pos:end="99:16"><expr pos:start="99:15" pos:end="99:16"><name pos:start="99:15" pos:end="99:16">pb</name></expr></argument>, <argument pos:start="99:19" pos:end="99:27"><expr pos:start="99:19" pos:end="99:27"><name pos:start="99:19" pos:end="99:27">file_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:18"><expr pos:start="101:5" pos:end="101:17"><name pos:start="101:5" pos:end="101:13">file_time</name> <operator pos:start="101:15" pos:end="101:15">=</operator> <literal type="number" pos:start="101:17" pos:end="101:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:48"><expr pos:start="103:5" pos:end="103:47"><call pos:start="103:5" pos:end="103:47"><name pos:start="103:5" pos:end="103:13">avio_wl64</name><argument_list pos:start="103:14" pos:end="103:47">(<argument pos:start="103:15" pos:end="103:16"><expr pos:start="103:15" pos:end="103:16"><name pos:start="103:15" pos:end="103:16">pb</name></expr></argument>, <argument pos:start="103:19" pos:end="103:46"><expr pos:start="103:19" pos:end="103:46"><call pos:start="103:19" pos:end="103:46"><name pos:start="103:19" pos:end="103:35">unix_to_file_time</name><argument_list pos:start="103:36" pos:end="103:46">(<argument pos:start="103:37" pos:end="103:45"><expr pos:start="103:37" pos:end="103:45"><name pos:start="103:37" pos:end="103:45">file_time</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:35"><expr pos:start="105:5" pos:end="105:34"><call pos:start="105:5" pos:end="105:34"><name pos:start="105:5" pos:end="105:13">avio_wl64</name><argument_list pos:start="105:14" pos:end="105:34">(<argument pos:start="105:15" pos:end="105:16"><expr pos:start="105:15" pos:end="105:16"><name pos:start="105:15" pos:end="105:16">pb</name></expr></argument>, <argument pos:start="105:19" pos:end="105:33"><expr pos:start="105:19" pos:end="105:33"><name pos:start="105:19" pos:end="105:33"><name pos:start="105:19" pos:end="105:21">asf</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:33">nb_packets</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="105:37" pos:end="105:59">/* number of packets */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:28"><expr pos:start="107:5" pos:end="107:27"><call pos:start="107:5" pos:end="107:27"><name pos:start="107:5" pos:end="107:13">avio_wl64</name><argument_list pos:start="107:14" pos:end="107:27">(<argument pos:start="107:15" pos:end="107:16"><expr pos:start="107:15" pos:end="107:16"><name pos:start="107:15" pos:end="107:16">pb</name></expr></argument>, <argument pos:start="107:19" pos:end="107:26"><expr pos:start="107:19" pos:end="107:26"><name pos:start="107:19" pos:end="107:26">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="107:30" pos:end="107:66">/* end time stamp (in 100ns units) */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:33"><expr pos:start="109:5" pos:end="109:32"><call pos:start="109:5" pos:end="109:32"><name pos:start="109:5" pos:end="109:13">avio_wl64</name><argument_list pos:start="109:14" pos:end="109:32">(<argument pos:start="109:15" pos:end="109:16"><expr pos:start="109:15" pos:end="109:16"><name pos:start="109:15" pos:end="109:16">pb</name></expr></argument>, <argument pos:start="109:19" pos:end="109:31"><expr pos:start="109:19" pos:end="109:31"><name pos:start="109:19" pos:end="109:31"><name pos:start="109:19" pos:end="109:21">asf</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:31">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="109:35" pos:end="109:65">/* duration (in 100ns units) */</comment>

    <expr_stmt pos:start="111:5" pos:end="111:32"><expr pos:start="111:5" pos:end="111:31"><call pos:start="111:5" pos:end="111:31"><name pos:start="111:5" pos:end="111:13">avio_wl64</name><argument_list pos:start="111:14" pos:end="111:31">(<argument pos:start="111:15" pos:end="111:16"><expr pos:start="111:15" pos:end="111:16"><name pos:start="111:15" pos:end="111:16">pb</name></expr></argument>, <argument pos:start="111:19" pos:end="111:30"><expr pos:start="111:19" pos:end="111:30"><name pos:start="111:19" pos:end="111:30">PREROLL_TIME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="111:34" pos:end="111:55">/* start time stamp */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:63"><expr pos:start="113:5" pos:end="113:62"><call pos:start="113:5" pos:end="113:62"><name pos:start="113:5" pos:end="113:13">avio_wl32</name><argument_list pos:start="113:14" pos:end="113:62">(<argument pos:start="113:15" pos:end="113:16"><expr pos:start="113:15" pos:end="113:16"><name pos:start="113:15" pos:end="113:16">pb</name></expr></argument>, <argument pos:start="113:19" pos:end="113:61"><expr pos:start="113:19" pos:end="113:61"><ternary pos:start="113:19" pos:end="113:61"><condition pos:start="113:19" pos:end="113:55"><expr pos:start="113:19" pos:end="113:53"><operator pos:start="113:19" pos:end="113:19">(</operator><name pos:start="113:20" pos:end="113:35"><name pos:start="113:20" pos:end="113:22">asf</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:35">is_streamed</name></name> <operator pos:start="113:37" pos:end="113:38">||</operator> <operator pos:start="113:40" pos:end="113:40">!</operator><name pos:start="113:41" pos:end="113:52"><name pos:start="113:41" pos:end="113:42">pb</name><operator pos:start="113:43" pos:end="113:44">-&gt;</operator><name pos:start="113:45" pos:end="113:52">seekable</name></name><operator pos:start="113:53" pos:end="113:53">)</operator></expr> ?</condition><then pos:start="113:57" pos:end="113:57"> <expr pos:start="113:57" pos:end="113:57"><literal type="number" pos:start="113:57" pos:end="113:57">3</literal></expr> </then><else pos:start="113:59" pos:end="113:61">: <expr pos:start="113:61" pos:end="113:61"><literal type="number" pos:start="113:61" pos:end="113:61">2</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="113:66" pos:end="113:74">/* ??? */</comment>

    <expr_stmt pos:start="115:5" pos:end="115:34"><expr pos:start="115:5" pos:end="115:33"><call pos:start="115:5" pos:end="115:33"><name pos:start="115:5" pos:end="115:13">avio_wl32</name><argument_list pos:start="115:14" pos:end="115:33">(<argument pos:start="115:15" pos:end="115:16"><expr pos:start="115:15" pos:end="115:16"><name pos:start="115:15" pos:end="115:16">pb</name></expr></argument>, <argument pos:start="115:19" pos:end="115:32"><expr pos:start="115:19" pos:end="115:32"><name pos:start="115:19" pos:end="115:32"><name pos:start="115:19" pos:end="115:19">s</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:32">packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="115:36" pos:end="115:52">/* packet size */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:34"><expr pos:start="117:5" pos:end="117:33"><call pos:start="117:5" pos:end="117:33"><name pos:start="117:5" pos:end="117:13">avio_wl32</name><argument_list pos:start="117:14" pos:end="117:33">(<argument pos:start="117:15" pos:end="117:16"><expr pos:start="117:15" pos:end="117:16"><name pos:start="117:15" pos:end="117:16">pb</name></expr></argument>, <argument pos:start="117:19" pos:end="117:32"><expr pos:start="117:19" pos:end="117:32"><name pos:start="117:19" pos:end="117:32"><name pos:start="117:19" pos:end="117:19">s</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:32">packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="117:36" pos:end="117:52">/* packet size */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:28"><expr pos:start="119:5" pos:end="119:27"><call pos:start="119:5" pos:end="119:27"><name pos:start="119:5" pos:end="119:13">avio_wl32</name><argument_list pos:start="119:14" pos:end="119:27">(<argument pos:start="119:15" pos:end="119:16"><expr pos:start="119:15" pos:end="119:16"><name pos:start="119:15" pos:end="119:16">pb</name></expr></argument>, <argument pos:start="119:19" pos:end="119:26"><expr pos:start="119:19" pos:end="119:26"><name pos:start="119:19" pos:end="119:26">bit_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="119:30" pos:end="119:59">/* Nominal data rate in bps */</comment>

    <expr_stmt pos:start="121:5" pos:end="121:25"><expr pos:start="121:5" pos:end="121:24"><call pos:start="121:5" pos:end="121:24"><name pos:start="121:5" pos:end="121:14">end_header</name><argument_list pos:start="121:15" pos:end="121:24">(<argument pos:start="121:16" pos:end="121:17"><expr pos:start="121:16" pos:end="121:17"><name pos:start="121:16" pos:end="121:17">pb</name></expr></argument>, <argument pos:start="121:20" pos:end="121:23"><expr pos:start="121:20" pos:end="121:23"><name pos:start="121:20" pos:end="121:23">hpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="125:5" pos:end="125:25">/* unknown headers */</comment>

    <expr_stmt pos:start="127:5" pos:end="127:46"><expr pos:start="127:5" pos:end="127:45"><name pos:start="127:5" pos:end="127:8">hpos</name> <operator pos:start="127:10" pos:end="127:10">=</operator> <call pos:start="127:12" pos:end="127:45"><name pos:start="127:12" pos:end="127:21">put_header</name><argument_list pos:start="127:22" pos:end="127:45">(<argument pos:start="127:23" pos:end="127:24"><expr pos:start="127:23" pos:end="127:24"><name pos:start="127:23" pos:end="127:24">pb</name></expr></argument>, <argument pos:start="127:27" pos:end="127:44"><expr pos:start="127:27" pos:end="127:44"><operator pos:start="127:27" pos:end="127:27">&amp;</operator><name pos:start="127:28" pos:end="127:44">ff_asf_head1_guid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:37"><expr pos:start="129:5" pos:end="129:36"><call pos:start="129:5" pos:end="129:36"><name pos:start="129:5" pos:end="129:12">put_guid</name><argument_list pos:start="129:13" pos:end="129:36">(<argument pos:start="129:14" pos:end="129:15"><expr pos:start="129:14" pos:end="129:15"><name pos:start="129:14" pos:end="129:15">pb</name></expr></argument>, <argument pos:start="129:18" pos:end="129:35"><expr pos:start="129:18" pos:end="129:35"><operator pos:start="129:18" pos:end="129:18">&amp;</operator><name pos:start="129:19" pos:end="129:35">ff_asf_head2_guid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:21"><expr pos:start="131:5" pos:end="131:20"><call pos:start="131:5" pos:end="131:20"><name pos:start="131:5" pos:end="131:13">avio_wl32</name><argument_list pos:start="131:14" pos:end="131:20">(<argument pos:start="131:15" pos:end="131:16"><expr pos:start="131:15" pos:end="131:16"><name pos:start="131:15" pos:end="131:16">pb</name></expr></argument>, <argument pos:start="131:19" pos:end="131:19"><expr pos:start="131:19" pos:end="131:19"><literal type="number" pos:start="131:19" pos:end="131:19">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:21"><expr pos:start="133:5" pos:end="133:20"><call pos:start="133:5" pos:end="133:20"><name pos:start="133:5" pos:end="133:13">avio_wl16</name><argument_list pos:start="133:14" pos:end="133:20">(<argument pos:start="133:15" pos:end="133:16"><expr pos:start="133:15" pos:end="133:16"><name pos:start="133:15" pos:end="133:16">pb</name></expr></argument>, <argument pos:start="133:19" pos:end="133:19"><expr pos:start="133:19" pos:end="133:19"><literal type="number" pos:start="133:19" pos:end="133:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:25"><expr pos:start="135:5" pos:end="135:24"><call pos:start="135:5" pos:end="135:24"><name pos:start="135:5" pos:end="135:14">end_header</name><argument_list pos:start="135:15" pos:end="135:24">(<argument pos:start="135:16" pos:end="135:17"><expr pos:start="135:16" pos:end="135:17"><name pos:start="135:16" pos:end="135:17">pb</name></expr></argument>, <argument pos:start="135:20" pos:end="135:23"><expr pos:start="135:20" pos:end="135:23"><name pos:start="135:20" pos:end="135:23">hpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="139:5" pos:end="139:31">/* title and other infos */</comment>

    <if_stmt pos:start="141:5" pos:end="177:5"><if pos:start="141:5" pos:end="177:5">if <condition pos:start="141:8" pos:end="141:18">(<expr pos:start="141:9" pos:end="141:17"><name pos:start="141:9" pos:end="141:17">has_title</name></expr>)</condition> <block pos:start="141:20" pos:end="177:5">{<block_content pos:start="143:9" pos:end="175:29">

        <decl_stmt pos:start="143:9" pos:end="143:16"><decl pos:start="143:9" pos:end="143:15"><type pos:start="143:9" pos:end="143:11"><name pos:start="143:9" pos:end="143:11">int</name></type> <name pos:start="143:13" pos:end="143:15">len</name></decl>;</decl_stmt>

        <decl_stmt pos:start="145:9" pos:end="145:21"><decl pos:start="145:9" pos:end="145:20"><type pos:start="145:9" pos:end="145:17"><name pos:start="145:9" pos:end="145:15">uint8_t</name> <modifier pos:start="145:17" pos:end="145:17">*</modifier></type><name pos:start="145:18" pos:end="145:20">buf</name></decl>;</decl_stmt>

        <decl_stmt pos:start="147:9" pos:end="147:29"><decl pos:start="147:9" pos:end="147:28"><type pos:start="147:9" pos:end="147:21"><name pos:start="147:9" pos:end="147:19">AVIOContext</name> <modifier pos:start="147:21" pos:end="147:21">*</modifier></type><name pos:start="147:22" pos:end="147:28">dyn_buf</name></decl>;</decl_stmt>



        <if_stmt pos:start="151:9" pos:end="153:35"><if pos:start="151:9" pos:end="153:35">if <condition pos:start="151:12" pos:end="151:44">(<expr pos:start="151:13" pos:end="151:43"><call pos:start="151:13" pos:end="151:39"><name pos:start="151:13" pos:end="151:29">avio_open_dyn_buf</name><argument_list pos:start="151:30" pos:end="151:39">(<argument pos:start="151:31" pos:end="151:38"><expr pos:start="151:31" pos:end="151:38"><operator pos:start="151:31" pos:end="151:31">&amp;</operator><name pos:start="151:32" pos:end="151:38">dyn_buf</name></expr></argument>)</argument_list></call> <operator pos:start="151:41" pos:end="151:41">&lt;</operator> <literal type="number" pos:start="151:43" pos:end="151:43">0</literal></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:35"><block_content pos:start="153:13" pos:end="153:35">

            <return pos:start="153:13" pos:end="153:35">return <expr pos:start="153:20" pos:end="153:34"><call pos:start="153:20" pos:end="153:34"><name pos:start="153:20" pos:end="153:26">AVERROR</name><argument_list pos:start="153:27" pos:end="153:34">(<argument pos:start="153:28" pos:end="153:33"><expr pos:start="153:28" pos:end="153:33"><name pos:start="153:28" pos:end="153:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:54"><expr pos:start="157:9" pos:end="157:53"><name pos:start="157:9" pos:end="157:12">hpos</name> <operator pos:start="157:14" pos:end="157:14">=</operator> <call pos:start="157:16" pos:end="157:53"><name pos:start="157:16" pos:end="157:25">put_header</name><argument_list pos:start="157:26" pos:end="157:53">(<argument pos:start="157:27" pos:end="157:28"><expr pos:start="157:27" pos:end="157:28"><name pos:start="157:27" pos:end="157:28">pb</name></expr></argument>, <argument pos:start="157:31" pos:end="157:52"><expr pos:start="157:31" pos:end="157:52"><operator pos:start="157:31" pos:end="157:31">&amp;</operator><name pos:start="157:32" pos:end="157:52">ff_asf_comment_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="161:9" pos:end="167:9">for <control pos:start="161:13" pos:end="161:50">(<init pos:start="161:14" pos:end="161:19"><expr pos:start="161:14" pos:end="161:18"><name pos:start="161:14" pos:end="161:14">n</name> <operator pos:start="161:16" pos:end="161:16">=</operator> <literal type="number" pos:start="161:18" pos:end="161:18">0</literal></expr>;</init> <condition pos:start="161:21" pos:end="161:45"><expr pos:start="161:21" pos:end="161:44"><name pos:start="161:21" pos:end="161:21">n</name> <operator pos:start="161:23" pos:end="161:23">&lt;</operator> <call pos:start="161:25" pos:end="161:44"><name pos:start="161:25" pos:end="161:38">FF_ARRAY_ELEMS</name><argument_list pos:start="161:39" pos:end="161:44">(<argument pos:start="161:40" pos:end="161:43"><expr pos:start="161:40" pos:end="161:43"><name pos:start="161:40" pos:end="161:43">tags</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="161:47" pos:end="161:49"><expr pos:start="161:47" pos:end="161:49"><name pos:start="161:47" pos:end="161:47">n</name><operator pos:start="161:48" pos:end="161:49">++</operator></expr></incr>)</control> <block pos:start="161:52" pos:end="167:9">{<block_content pos:start="163:13" pos:end="165:31">

            <expr_stmt pos:start="163:13" pos:end="163:74"><expr pos:start="163:13" pos:end="163:73"><name pos:start="163:13" pos:end="163:15">len</name> <operator pos:start="163:17" pos:end="163:17">=</operator> <ternary pos:start="163:19" pos:end="163:73"><condition pos:start="163:19" pos:end="163:27"><expr pos:start="163:19" pos:end="163:25"><name pos:start="163:19" pos:end="163:25"><name pos:start="163:19" pos:end="163:22">tags</name><index pos:start="163:23" pos:end="163:25">[<expr pos:start="163:24" pos:end="163:24"><name pos:start="163:24" pos:end="163:24">n</name></expr>]</index></name></expr> ?</condition><then pos:start="163:29" pos:end="163:69"> <expr pos:start="163:29" pos:end="163:69"><call pos:start="163:29" pos:end="163:69"><name pos:start="163:29" pos:end="163:44">avio_put_str16le</name><argument_list pos:start="163:45" pos:end="163:69">(<argument pos:start="163:46" pos:end="163:52"><expr pos:start="163:46" pos:end="163:52"><name pos:start="163:46" pos:end="163:52">dyn_buf</name></expr></argument>, <argument pos:start="163:55" pos:end="163:68"><expr pos:start="163:55" pos:end="163:68"><name pos:start="163:55" pos:end="163:61"><name pos:start="163:55" pos:end="163:58">tags</name><index pos:start="163:59" pos:end="163:61">[<expr pos:start="163:60" pos:end="163:60"><name pos:start="163:60" pos:end="163:60">n</name></expr>]</index></name><operator pos:start="163:62" pos:end="163:63">-&gt;</operator><name pos:start="163:64" pos:end="163:68">value</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="163:71" pos:end="163:73">: <expr pos:start="163:73" pos:end="163:73"><literal type="number" pos:start="163:73" pos:end="163:73">0</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:31"><expr pos:start="165:13" pos:end="165:30"><call pos:start="165:13" pos:end="165:30"><name pos:start="165:13" pos:end="165:21">avio_wl16</name><argument_list pos:start="165:22" pos:end="165:30">(<argument pos:start="165:23" pos:end="165:24"><expr pos:start="165:23" pos:end="165:24"><name pos:start="165:23" pos:end="165:24">pb</name></expr></argument>, <argument pos:start="165:27" pos:end="165:29"><expr pos:start="165:27" pos:end="165:29"><name pos:start="165:27" pos:end="165:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="169:9" pos:end="169:48"><expr pos:start="169:9" pos:end="169:47"><name pos:start="169:9" pos:end="169:11">len</name> <operator pos:start="169:13" pos:end="169:13">=</operator> <call pos:start="169:15" pos:end="169:47"><name pos:start="169:15" pos:end="169:32">avio_close_dyn_buf</name><argument_list pos:start="169:33" pos:end="169:47">(<argument pos:start="169:34" pos:end="169:40"><expr pos:start="169:34" pos:end="169:40"><name pos:start="169:34" pos:end="169:40">dyn_buf</name></expr></argument>, <argument pos:start="169:43" pos:end="169:46"><expr pos:start="169:43" pos:end="169:46"><operator pos:start="169:43" pos:end="169:43">&amp;</operator><name pos:start="169:44" pos:end="169:46">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:33"><expr pos:start="171:9" pos:end="171:32"><call pos:start="171:9" pos:end="171:32"><name pos:start="171:9" pos:end="171:18">avio_write</name><argument_list pos:start="171:19" pos:end="171:32">(<argument pos:start="171:20" pos:end="171:21"><expr pos:start="171:20" pos:end="171:21"><name pos:start="171:20" pos:end="171:21">pb</name></expr></argument>, <argument pos:start="171:24" pos:end="171:26"><expr pos:start="171:24" pos:end="171:26"><name pos:start="171:24" pos:end="171:26">buf</name></expr></argument>, <argument pos:start="171:29" pos:end="171:31"><expr pos:start="171:29" pos:end="171:31"><name pos:start="171:29" pos:end="171:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:23"><expr pos:start="173:9" pos:end="173:22"><call pos:start="173:9" pos:end="173:22"><name pos:start="173:9" pos:end="173:16">av_freep</name><argument_list pos:start="173:17" pos:end="173:22">(<argument pos:start="173:18" pos:end="173:21"><expr pos:start="173:18" pos:end="173:21"><operator pos:start="173:18" pos:end="173:18">&amp;</operator><name pos:start="173:19" pos:end="173:21">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:29"><expr pos:start="175:9" pos:end="175:28"><call pos:start="175:9" pos:end="175:28"><name pos:start="175:9" pos:end="175:18">end_header</name><argument_list pos:start="175:19" pos:end="175:28">(<argument pos:start="175:20" pos:end="175:21"><expr pos:start="175:20" pos:end="175:21"><name pos:start="175:20" pos:end="175:21">pb</name></expr></argument>, <argument pos:start="175:24" pos:end="175:27"><expr pos:start="175:24" pos:end="175:27"><name pos:start="175:24" pos:end="175:27">hpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="179:5" pos:end="199:5"><if pos:start="179:5" pos:end="199:5">if <condition pos:start="179:8" pos:end="179:23">(<expr pos:start="179:9" pos:end="179:22"><name pos:start="179:9" pos:end="179:22">metadata_count</name></expr>)</condition> <block pos:start="179:25" pos:end="199:5">{<block_content pos:start="181:9" pos:end="197:29">

        <decl_stmt pos:start="181:9" pos:end="181:38"><decl pos:start="181:9" pos:end="181:37"><type pos:start="181:9" pos:end="181:27"><name pos:start="181:9" pos:end="181:25">AVDictionaryEntry</name> <modifier pos:start="181:27" pos:end="181:27">*</modifier></type><name pos:start="181:28" pos:end="181:30">tag</name> <init pos:start="181:32" pos:end="181:37">= <expr pos:start="181:34" pos:end="181:37"><name pos:start="181:34" pos:end="181:37">NULL</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:63"><expr pos:start="183:9" pos:end="183:62"><name pos:start="183:9" pos:end="183:12">hpos</name> <operator pos:start="183:14" pos:end="183:14">=</operator> <call pos:start="183:16" pos:end="183:62"><name pos:start="183:16" pos:end="183:25">put_header</name><argument_list pos:start="183:26" pos:end="183:62">(<argument pos:start="183:27" pos:end="183:28"><expr pos:start="183:27" pos:end="183:28"><name pos:start="183:27" pos:end="183:28">pb</name></expr></argument>, <argument pos:start="183:31" pos:end="183:61"><expr pos:start="183:31" pos:end="183:61"><operator pos:start="183:31" pos:end="183:31">&amp;</operator><name pos:start="183:32" pos:end="183:61">ff_asf_extended_content_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:38"><expr pos:start="185:9" pos:end="185:37"><call pos:start="185:9" pos:end="185:37"><name pos:start="185:9" pos:end="185:17">avio_wl16</name><argument_list pos:start="185:18" pos:end="185:37">(<argument pos:start="185:19" pos:end="185:20"><expr pos:start="185:19" pos:end="185:20"><name pos:start="185:19" pos:end="185:20">pb</name></expr></argument>, <argument pos:start="185:23" pos:end="185:36"><expr pos:start="185:23" pos:end="185:36"><name pos:start="185:23" pos:end="185:36">metadata_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="187:9" pos:end="195:9">while <condition pos:start="187:15" pos:end="187:80">(<expr pos:start="187:16" pos:end="187:79"><operator pos:start="187:16" pos:end="187:16">(</operator><name pos:start="187:17" pos:end="187:19">tag</name> <operator pos:start="187:21" pos:end="187:21">=</operator> <call pos:start="187:23" pos:end="187:78"><name pos:start="187:23" pos:end="187:33">av_dict_get</name><argument_list pos:start="187:34" pos:end="187:78">(<argument pos:start="187:35" pos:end="187:45"><expr pos:start="187:35" pos:end="187:45"><name pos:start="187:35" pos:end="187:45"><name pos:start="187:35" pos:end="187:35">s</name><operator pos:start="187:36" pos:end="187:37">-&gt;</operator><name pos:start="187:38" pos:end="187:45">metadata</name></name></expr></argument>, <argument pos:start="187:48" pos:end="187:49"><expr pos:start="187:48" pos:end="187:49"><literal type="string" pos:start="187:48" pos:end="187:49">""</literal></expr></argument>, <argument pos:start="187:52" pos:end="187:54"><expr pos:start="187:52" pos:end="187:54"><name pos:start="187:52" pos:end="187:54">tag</name></expr></argument>, <argument pos:start="187:57" pos:end="187:77"><expr pos:start="187:57" pos:end="187:77"><name pos:start="187:57" pos:end="187:77">AV_DICT_IGNORE_SUFFIX</name></expr></argument>)</argument_list></call><operator pos:start="187:79" pos:end="187:79">)</operator></expr>)</condition> <block pos:start="187:82" pos:end="195:9">{<block_content pos:start="189:13" pos:end="193:38">

            <expr_stmt pos:start="189:13" pos:end="189:36"><expr pos:start="189:13" pos:end="189:35"><call pos:start="189:13" pos:end="189:35"><name pos:start="189:13" pos:end="189:21">put_str16</name><argument_list pos:start="189:22" pos:end="189:35">(<argument pos:start="189:23" pos:end="189:24"><expr pos:start="189:23" pos:end="189:24"><name pos:start="189:23" pos:end="189:24">pb</name></expr></argument>, <argument pos:start="189:27" pos:end="189:34"><expr pos:start="189:27" pos:end="189:34"><name pos:start="189:27" pos:end="189:34"><name pos:start="189:27" pos:end="189:29">tag</name><operator pos:start="189:30" pos:end="189:31">-&gt;</operator><name pos:start="189:32" pos:end="189:34">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:29"><expr pos:start="191:13" pos:end="191:28"><call pos:start="191:13" pos:end="191:28"><name pos:start="191:13" pos:end="191:21">avio_wl16</name><argument_list pos:start="191:22" pos:end="191:28">(<argument pos:start="191:23" pos:end="191:24"><expr pos:start="191:23" pos:end="191:24"><name pos:start="191:23" pos:end="191:24">pb</name></expr></argument>, <argument pos:start="191:27" pos:end="191:27"><expr pos:start="191:27" pos:end="191:27"><literal type="number" pos:start="191:27" pos:end="191:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:38"><expr pos:start="193:13" pos:end="193:37"><call pos:start="193:13" pos:end="193:37"><name pos:start="193:13" pos:end="193:21">put_str16</name><argument_list pos:start="193:22" pos:end="193:37">(<argument pos:start="193:23" pos:end="193:24"><expr pos:start="193:23" pos:end="193:24"><name pos:start="193:23" pos:end="193:24">pb</name></expr></argument>, <argument pos:start="193:27" pos:end="193:36"><expr pos:start="193:27" pos:end="193:36"><name pos:start="193:27" pos:end="193:36"><name pos:start="193:27" pos:end="193:29">tag</name><operator pos:start="193:30" pos:end="193:31">-&gt;</operator><name pos:start="193:32" pos:end="193:36">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="197:9" pos:end="197:29"><expr pos:start="197:9" pos:end="197:28"><call pos:start="197:9" pos:end="197:28"><name pos:start="197:9" pos:end="197:18">end_header</name><argument_list pos:start="197:19" pos:end="197:28">(<argument pos:start="197:20" pos:end="197:21"><expr pos:start="197:20" pos:end="197:21"><name pos:start="197:20" pos:end="197:21">pb</name></expr></argument>, <argument pos:start="197:24" pos:end="197:27"><expr pos:start="197:24" pos:end="197:27"><name pos:start="197:24" pos:end="197:27">hpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="201:5" pos:end="201:36">/* chapters using ASF markers */</comment>

    <if_stmt pos:start="203:5" pos:end="211:5"><if pos:start="203:5" pos:end="211:5">if <condition pos:start="203:8" pos:end="203:44">(<expr pos:start="203:9" pos:end="203:43"><operator pos:start="203:9" pos:end="203:9">!</operator><name pos:start="203:10" pos:end="203:25"><name pos:start="203:10" pos:end="203:12">asf</name><operator pos:start="203:13" pos:end="203:14">-&gt;</operator><name pos:start="203:15" pos:end="203:25">is_streamed</name></name> <operator pos:start="203:27" pos:end="203:28">&amp;&amp;</operator> <name pos:start="203:30" pos:end="203:43"><name pos:start="203:30" pos:end="203:30">s</name><operator pos:start="203:31" pos:end="203:32">-&gt;</operator><name pos:start="203:33" pos:end="203:43">nb_chapters</name></name></expr>)</condition> <block pos:start="203:46" pos:end="211:5">{<block_content pos:start="205:9" pos:end="209:23">

        <decl_stmt pos:start="205:9" pos:end="205:16"><decl pos:start="205:9" pos:end="205:15"><type pos:start="205:9" pos:end="205:11"><name pos:start="205:9" pos:end="205:11">int</name></type> <name pos:start="205:13" pos:end="205:15">ret</name></decl>;</decl_stmt>

        <if_stmt pos:start="207:9" pos:end="209:23"><if pos:start="207:9" pos:end="209:23">if <condition pos:start="207:12" pos:end="207:39">(<expr pos:start="207:13" pos:end="207:38"><name pos:start="207:13" pos:end="207:15">ret</name> <operator pos:start="207:17" pos:end="207:17">=</operator> <call pos:start="207:19" pos:end="207:38"><name pos:start="207:19" pos:end="207:35">asf_write_markers</name><argument_list pos:start="207:36" pos:end="207:38">(<argument pos:start="207:37" pos:end="207:37"><expr pos:start="207:37" pos:end="207:37"><name pos:start="207:37" pos:end="207:37">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="209:13" pos:end="209:23"><block_content pos:start="209:13" pos:end="209:23">

            <return pos:start="209:13" pos:end="209:23">return <expr pos:start="209:20" pos:end="209:22"><name pos:start="209:20" pos:end="209:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="213:5" pos:end="213:24">/* stream headers */</comment>

    <for pos:start="215:5" pos:end="355:5">for <control pos:start="215:9" pos:end="215:39">(<init pos:start="215:10" pos:end="215:15"><expr pos:start="215:10" pos:end="215:14"><name pos:start="215:10" pos:end="215:10">n</name> <operator pos:start="215:12" pos:end="215:12">=</operator> <literal type="number" pos:start="215:14" pos:end="215:14">0</literal></expr>;</init> <condition pos:start="215:17" pos:end="215:34"><expr pos:start="215:17" pos:end="215:33"><name pos:start="215:17" pos:end="215:17">n</name> <operator pos:start="215:19" pos:end="215:19">&lt;</operator> <name pos:start="215:21" pos:end="215:33"><name pos:start="215:21" pos:end="215:21">s</name><operator pos:start="215:22" pos:end="215:23">-&gt;</operator><name pos:start="215:24" pos:end="215:33">nb_streams</name></name></expr>;</condition> <incr pos:start="215:36" pos:end="215:38"><expr pos:start="215:36" pos:end="215:38"><name pos:start="215:36" pos:end="215:36">n</name><operator pos:start="215:37" pos:end="215:38">++</operator></expr></incr>)</control> <block pos:start="215:41" pos:end="355:5">{<block_content pos:start="217:9" pos:end="353:29">

        <decl_stmt pos:start="217:9" pos:end="217:23"><decl pos:start="217:9" pos:end="217:22"><type pos:start="217:9" pos:end="217:15"><name pos:start="217:9" pos:end="217:15">int64_t</name></type> <name pos:start="217:17" pos:end="217:22">es_pos</name></decl>;</decl_stmt>

        <comment type="line" pos:start="219:9" pos:end="219:55">//        ASFStream *stream = &amp;asf-&gt;streams[n];</comment>



        <expr_stmt pos:start="223:9" pos:end="223:54"><expr pos:start="223:9" pos:end="223:53"><name pos:start="223:9" pos:end="223:11">par</name>                 <operator pos:start="223:29" pos:end="223:29">=</operator> <name pos:start="223:31" pos:end="223:43"><name pos:start="223:31" pos:end="223:31">s</name><operator pos:start="223:32" pos:end="223:33">-&gt;</operator><name pos:start="223:34" pos:end="223:40">streams</name><index pos:start="223:41" pos:end="223:43">[<expr pos:start="223:42" pos:end="223:42"><name pos:start="223:42" pos:end="223:42">n</name></expr>]</index></name><operator pos:start="223:44" pos:end="223:45">-&gt;</operator><name pos:start="223:46" pos:end="223:53">codecpar</name></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:36"><expr pos:start="225:9" pos:end="225:35"><name pos:start="225:9" pos:end="225:23"><name pos:start="225:9" pos:end="225:11">asf</name><operator pos:start="225:12" pos:end="225:13">-&gt;</operator><name pos:start="225:14" pos:end="225:20">streams</name><index pos:start="225:21" pos:end="225:23">[<expr pos:start="225:22" pos:end="225:22"><name pos:start="225:22" pos:end="225:22">n</name></expr>]</index></name><operator pos:start="225:24" pos:end="225:24">.</operator><name pos:start="225:25" pos:end="225:27">num</name> <operator pos:start="225:29" pos:end="225:29">=</operator> <name pos:start="225:31" pos:end="225:31">n</name> <operator pos:start="225:33" pos:end="225:33">+</operator> <literal type="number" pos:start="225:35" pos:end="225:35">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:32"><expr pos:start="227:9" pos:end="227:31"><name pos:start="227:9" pos:end="227:23"><name pos:start="227:9" pos:end="227:11">asf</name><operator pos:start="227:12" pos:end="227:13">-&gt;</operator><name pos:start="227:14" pos:end="227:20">streams</name><index pos:start="227:21" pos:end="227:23">[<expr pos:start="227:22" pos:end="227:22"><name pos:start="227:22" pos:end="227:22">n</name></expr>]</index></name><operator pos:start="227:24" pos:end="227:24">.</operator><name pos:start="227:25" pos:end="227:27">seq</name> <operator pos:start="227:29" pos:end="227:29">=</operator> <literal type="number" pos:start="227:31" pos:end="227:31">0</literal></expr>;</expr_stmt>



        <switch pos:start="231:9" pos:end="255:9">switch <condition pos:start="231:16" pos:end="231:32">(<expr pos:start="231:17" pos:end="231:31"><name pos:start="231:17" pos:end="231:31"><name pos:start="231:17" pos:end="231:19">par</name><operator pos:start="231:20" pos:end="231:21">-&gt;</operator><name pos:start="231:22" pos:end="231:31">codec_type</name></name></expr>)</condition> <block pos:start="231:34" pos:end="255:9">{<block_content pos:start="233:9" pos:end="253:18">

        <case pos:start="233:9" pos:end="233:32">case <expr pos:start="233:14" pos:end="233:31"><name pos:start="233:14" pos:end="233:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="235:13" pos:end="235:31"><expr pos:start="235:13" pos:end="235:30"><name pos:start="235:13" pos:end="235:26">wav_extra_size</name> <operator pos:start="235:28" pos:end="235:28">=</operator> <literal type="number" pos:start="235:30" pos:end="235:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:49"><expr pos:start="237:13" pos:end="237:48"><name pos:start="237:13" pos:end="237:22">extra_size</name>     <operator pos:start="237:28" pos:end="237:28">=</operator> <literal type="number" pos:start="237:30" pos:end="237:33">18</literal> <operator pos:start="237:33" pos:end="237:33">+</operator> <name pos:start="237:35" pos:end="237:48">wav_extra_size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:31"><expr pos:start="239:13" pos:end="239:30"><name pos:start="239:13" pos:end="239:23">extra_size2</name>    <operator pos:start="239:28" pos:end="239:28">=</operator> <literal type="number" pos:start="239:30" pos:end="239:30">8</literal></expr>;</expr_stmt>

            <break pos:start="241:13" pos:end="241:18">break;</break>

        <default pos:start="243:9" pos:end="243:16">default:</default>

        <case pos:start="245:9" pos:end="245:32">case <expr pos:start="245:14" pos:end="245:31"><name pos:start="245:14" pos:end="245:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="247:13" pos:end="247:49"><expr pos:start="247:13" pos:end="247:48"><name pos:start="247:13" pos:end="247:26">wav_extra_size</name> <operator pos:start="247:28" pos:end="247:28">=</operator> <name pos:start="247:30" pos:end="247:48"><name pos:start="247:30" pos:end="247:32">par</name><operator pos:start="247:33" pos:end="247:34">-&gt;</operator><name pos:start="247:35" pos:end="247:48">extradata_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:51"><expr pos:start="249:13" pos:end="249:50"><name pos:start="249:13" pos:end="249:22">extra_size</name>     <operator pos:start="249:28" pos:end="249:28">=</operator> <literal type="number" pos:start="249:30" pos:end="249:35">0x33</literal> <operator pos:start="249:35" pos:end="249:35">+</operator> <name pos:start="249:37" pos:end="249:50">wav_extra_size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:31"><expr pos:start="251:13" pos:end="251:30"><name pos:start="251:13" pos:end="251:23">extra_size2</name>    <operator pos:start="251:28" pos:end="251:28">=</operator> <literal type="number" pos:start="251:30" pos:end="251:30">0</literal></expr>;</expr_stmt>

            <break pos:start="253:13" pos:end="253:18">break;</break>

        </block_content>}</block></switch>



        <expr_stmt pos:start="259:9" pos:end="259:53"><expr pos:start="259:9" pos:end="259:52"><name pos:start="259:9" pos:end="259:12">hpos</name> <operator pos:start="259:14" pos:end="259:14">=</operator> <call pos:start="259:16" pos:end="259:52"><name pos:start="259:16" pos:end="259:25">put_header</name><argument_list pos:start="259:26" pos:end="259:52">(<argument pos:start="259:27" pos:end="259:28"><expr pos:start="259:27" pos:end="259:28"><name pos:start="259:27" pos:end="259:28">pb</name></expr></argument>, <argument pos:start="259:31" pos:end="259:51"><expr pos:start="259:31" pos:end="259:51"><operator pos:start="259:31" pos:end="259:31">&amp;</operator><name pos:start="259:32" pos:end="259:51">ff_asf_stream_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="261:9" pos:end="273:9"><if pos:start="261:9" pos:end="267:9">if <condition pos:start="261:12" pos:end="261:50">(<expr pos:start="261:13" pos:end="261:49"><name pos:start="261:13" pos:end="261:27"><name pos:start="261:13" pos:end="261:15">par</name><operator pos:start="261:16" pos:end="261:17">-&gt;</operator><name pos:start="261:18" pos:end="261:27">codec_type</name></name> <operator pos:start="261:29" pos:end="261:30">==</operator> <name pos:start="261:32" pos:end="261:49">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="261:52" pos:end="267:9">{<block_content pos:start="263:13" pos:end="265:55">

            <expr_stmt pos:start="263:13" pos:end="263:47"><expr pos:start="263:13" pos:end="263:46"><call pos:start="263:13" pos:end="263:46"><name pos:start="263:13" pos:end="263:20">put_guid</name><argument_list pos:start="263:21" pos:end="263:46">(<argument pos:start="263:22" pos:end="263:23"><expr pos:start="263:22" pos:end="263:23"><name pos:start="263:22" pos:end="263:23">pb</name></expr></argument>, <argument pos:start="263:26" pos:end="263:45"><expr pos:start="263:26" pos:end="263:45"><operator pos:start="263:26" pos:end="263:26">&amp;</operator><name pos:start="263:27" pos:end="263:45">ff_asf_audio_stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:55"><expr pos:start="265:13" pos:end="265:54"><call pos:start="265:13" pos:end="265:54"><name pos:start="265:13" pos:end="265:20">put_guid</name><argument_list pos:start="265:21" pos:end="265:54">(<argument pos:start="265:22" pos:end="265:23"><expr pos:start="265:22" pos:end="265:23"><name pos:start="265:22" pos:end="265:23">pb</name></expr></argument>, <argument pos:start="265:26" pos:end="265:53"><expr pos:start="265:26" pos:end="265:53"><operator pos:start="265:26" pos:end="265:26">&amp;</operator><name pos:start="265:27" pos:end="265:53">ff_asf_audio_conceal_spread</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="267:11" pos:end="273:9">else <block pos:start="267:16" pos:end="273:9">{<block_content pos:start="269:13" pos:end="271:53">

            <expr_stmt pos:start="269:13" pos:end="269:47"><expr pos:start="269:13" pos:end="269:46"><call pos:start="269:13" pos:end="269:46"><name pos:start="269:13" pos:end="269:20">put_guid</name><argument_list pos:start="269:21" pos:end="269:46">(<argument pos:start="269:22" pos:end="269:23"><expr pos:start="269:22" pos:end="269:23"><name pos:start="269:22" pos:end="269:23">pb</name></expr></argument>, <argument pos:start="269:26" pos:end="269:45"><expr pos:start="269:26" pos:end="269:45"><operator pos:start="269:26" pos:end="269:26">&amp;</operator><name pos:start="269:27" pos:end="269:45">ff_asf_video_stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:53"><expr pos:start="271:13" pos:end="271:52"><call pos:start="271:13" pos:end="271:52"><name pos:start="271:13" pos:end="271:20">put_guid</name><argument_list pos:start="271:21" pos:end="271:52">(<argument pos:start="271:22" pos:end="271:23"><expr pos:start="271:22" pos:end="271:23"><name pos:start="271:22" pos:end="271:23">pb</name></expr></argument>, <argument pos:start="271:26" pos:end="271:51"><expr pos:start="271:26" pos:end="271:51"><operator pos:start="271:26" pos:end="271:26">&amp;</operator><name pos:start="271:27" pos:end="271:51">ff_asf_video_conceal_none</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:25"><expr pos:start="275:9" pos:end="275:24"><call pos:start="275:9" pos:end="275:24"><name pos:start="275:9" pos:end="275:17">avio_wl64</name><argument_list pos:start="275:18" pos:end="275:24">(<argument pos:start="275:19" pos:end="275:20"><expr pos:start="275:19" pos:end="275:20"><name pos:start="275:19" pos:end="275:20">pb</name></expr></argument>, <argument pos:start="275:23" pos:end="275:23"><expr pos:start="275:23" pos:end="275:23"><literal type="number" pos:start="275:23" pos:end="275:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="275:27" pos:end="275:35">/* ??? */</comment>

        <expr_stmt pos:start="277:9" pos:end="277:31"><expr pos:start="277:9" pos:end="277:30"><name pos:start="277:9" pos:end="277:14">es_pos</name> <operator pos:start="277:16" pos:end="277:16">=</operator> <call pos:start="277:18" pos:end="277:30"><name pos:start="277:18" pos:end="277:26">avio_tell</name><argument_list pos:start="277:27" pos:end="277:30">(<argument pos:start="277:28" pos:end="277:29"><expr pos:start="277:28" pos:end="277:29"><name pos:start="277:28" pos:end="277:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:34"><expr pos:start="279:9" pos:end="279:33"><call pos:start="279:9" pos:end="279:33"><name pos:start="279:9" pos:end="279:17">avio_wl32</name><argument_list pos:start="279:18" pos:end="279:33">(<argument pos:start="279:19" pos:end="279:20"><expr pos:start="279:19" pos:end="279:20"><name pos:start="279:19" pos:end="279:20">pb</name></expr></argument>, <argument pos:start="279:23" pos:end="279:32"><expr pos:start="279:23" pos:end="279:32"><name pos:start="279:23" pos:end="279:32">extra_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="279:36" pos:end="279:55">/* wav header len */</comment>

        <expr_stmt pos:start="281:9" pos:end="281:35"><expr pos:start="281:9" pos:end="281:34"><call pos:start="281:9" pos:end="281:34"><name pos:start="281:9" pos:end="281:17">avio_wl32</name><argument_list pos:start="281:18" pos:end="281:34">(<argument pos:start="281:19" pos:end="281:20"><expr pos:start="281:19" pos:end="281:20"><name pos:start="281:19" pos:end="281:20">pb</name></expr></argument>, <argument pos:start="281:23" pos:end="281:33"><expr pos:start="281:23" pos:end="281:33"><name pos:start="281:23" pos:end="281:33">extra_size2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="281:37" pos:end="281:61">/* additional data len */</comment>

        <expr_stmt pos:start="283:9" pos:end="283:29"><expr pos:start="283:9" pos:end="283:28"><call pos:start="283:9" pos:end="283:28"><name pos:start="283:9" pos:end="283:17">avio_wl16</name><argument_list pos:start="283:18" pos:end="283:28">(<argument pos:start="283:19" pos:end="283:20"><expr pos:start="283:19" pos:end="283:20"><name pos:start="283:19" pos:end="283:20">pb</name></expr></argument>, <argument pos:start="283:23" pos:end="283:27"><expr pos:start="283:23" pos:end="283:27"><name pos:start="283:23" pos:end="283:23">n</name> <operator pos:start="283:25" pos:end="283:25">+</operator> <literal type="number" pos:start="283:27" pos:end="283:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="283:31" pos:end="283:49">/* stream number */</comment>

        <expr_stmt pos:start="285:9" pos:end="285:25"><expr pos:start="285:9" pos:end="285:24"><call pos:start="285:9" pos:end="285:24"><name pos:start="285:9" pos:end="285:17">avio_wl32</name><argument_list pos:start="285:18" pos:end="285:24">(<argument pos:start="285:19" pos:end="285:20"><expr pos:start="285:19" pos:end="285:20"><name pos:start="285:19" pos:end="285:20">pb</name></expr></argument>, <argument pos:start="285:23" pos:end="285:23"><expr pos:start="285:23" pos:end="285:23"><literal type="number" pos:start="285:23" pos:end="285:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="285:27" pos:end="285:35">/* ??? */</comment>



        <if_stmt pos:start="289:9" pos:end="351:9"><if pos:start="289:9" pos:end="335:9">if <condition pos:start="289:12" pos:end="289:50">(<expr pos:start="289:13" pos:end="289:49"><name pos:start="289:13" pos:end="289:27"><name pos:start="289:13" pos:end="289:15">par</name><operator pos:start="289:16" pos:end="289:17">-&gt;</operator><name pos:start="289:18" pos:end="289:27">codec_type</name></name> <operator pos:start="289:29" pos:end="289:30">==</operator> <name pos:start="289:32" pos:end="289:49">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="289:52" pos:end="335:9">{<block_content pos:start="293:13" pos:end="333:30">

            <comment type="block" pos:start="291:13" pos:end="291:37">/* WAVEFORMATEX header */</comment>

            <decl_stmt pos:start="293:13" pos:end="293:56"><decl pos:start="293:13" pos:end="293:55"><type pos:start="293:13" pos:end="293:15"><name pos:start="293:13" pos:end="293:15">int</name></type> <name pos:start="293:17" pos:end="293:23">wavsize</name> <init pos:start="293:25" pos:end="293:55">= <expr pos:start="293:27" pos:end="293:55"><call pos:start="293:27" pos:end="293:55"><name pos:start="293:27" pos:end="293:43">ff_put_wav_header</name><argument_list pos:start="293:44" pos:end="293:55">(<argument pos:start="293:45" pos:end="293:45"><expr pos:start="293:45" pos:end="293:45"><name pos:start="293:45" pos:end="293:45">s</name></expr></argument>, <argument pos:start="293:48" pos:end="293:49"><expr pos:start="293:48" pos:end="293:49"><name pos:start="293:48" pos:end="293:49">pb</name></expr></argument>, <argument pos:start="293:52" pos:end="293:54"><expr pos:start="293:52" pos:end="293:54"><name pos:start="293:52" pos:end="293:54">par</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="297:13" pos:end="299:26"><if pos:start="297:13" pos:end="299:26">if <condition pos:start="297:16" pos:end="297:28">(<expr pos:start="297:17" pos:end="297:27"><name pos:start="297:17" pos:end="297:23">wavsize</name> <operator pos:start="297:25" pos:end="297:25">&lt;</operator> <literal type="number" pos:start="297:27" pos:end="297:27">0</literal></expr>)</condition><block type="pseudo" pos:start="299:17" pos:end="299:26"><block_content pos:start="299:17" pos:end="299:26">

                <return pos:start="299:17" pos:end="299:26">return <expr pos:start="299:24" pos:end="299:25"><operator pos:start="299:24" pos:end="299:24">-</operator><literal type="number" pos:start="299:25" pos:end="299:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="301:13" pos:end="311:13"><if pos:start="301:13" pos:end="311:13">if <condition pos:start="301:16" pos:end="301:38">(<expr pos:start="301:17" pos:end="301:37"><name pos:start="301:17" pos:end="301:23">wavsize</name> <operator pos:start="301:25" pos:end="301:26">!=</operator> <name pos:start="301:28" pos:end="301:37">extra_size</name></expr>)</condition> <block pos:start="301:40" pos:end="311:13">{<block_content pos:start="303:17" pos:end="309:49">

                <expr_stmt pos:start="303:17" pos:end="303:40"><expr pos:start="303:17" pos:end="303:39"><name pos:start="303:17" pos:end="303:23">cur_pos</name> <operator pos:start="303:25" pos:end="303:25">=</operator> <call pos:start="303:27" pos:end="303:39"><name pos:start="303:27" pos:end="303:35">avio_tell</name><argument_list pos:start="303:36" pos:end="303:39">(<argument pos:start="303:37" pos:end="303:38"><expr pos:start="303:37" pos:end="303:38"><name pos:start="303:37" pos:end="303:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="305:17" pos:end="305:48"><expr pos:start="305:17" pos:end="305:47"><call pos:start="305:17" pos:end="305:47"><name pos:start="305:17" pos:end="305:25">avio_seek</name><argument_list pos:start="305:26" pos:end="305:47">(<argument pos:start="305:27" pos:end="305:28"><expr pos:start="305:27" pos:end="305:28"><name pos:start="305:27" pos:end="305:28">pb</name></expr></argument>, <argument pos:start="305:31" pos:end="305:36"><expr pos:start="305:31" pos:end="305:36"><name pos:start="305:31" pos:end="305:36">es_pos</name></expr></argument>, <argument pos:start="305:39" pos:end="305:46"><expr pos:start="305:39" pos:end="305:46"><name pos:start="305:39" pos:end="305:46">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="307:17" pos:end="307:39"><expr pos:start="307:17" pos:end="307:38"><call pos:start="307:17" pos:end="307:38"><name pos:start="307:17" pos:end="307:25">avio_wl32</name><argument_list pos:start="307:26" pos:end="307:38">(<argument pos:start="307:27" pos:end="307:28"><expr pos:start="307:27" pos:end="307:28"><name pos:start="307:27" pos:end="307:28">pb</name></expr></argument>, <argument pos:start="307:31" pos:end="307:37"><expr pos:start="307:31" pos:end="307:37"><name pos:start="307:31" pos:end="307:37">wavsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="307:41" pos:end="307:60">/* wav header len */</comment>

                <expr_stmt pos:start="309:17" pos:end="309:49"><expr pos:start="309:17" pos:end="309:48"><call pos:start="309:17" pos:end="309:48"><name pos:start="309:17" pos:end="309:25">avio_seek</name><argument_list pos:start="309:26" pos:end="309:48">(<argument pos:start="309:27" pos:end="309:28"><expr pos:start="309:27" pos:end="309:28"><name pos:start="309:27" pos:end="309:28">pb</name></expr></argument>, <argument pos:start="309:31" pos:end="309:37"><expr pos:start="309:31" pos:end="309:37"><name pos:start="309:31" pos:end="309:37">cur_pos</name></expr></argument>, <argument pos:start="309:40" pos:end="309:47"><expr pos:start="309:40" pos:end="309:47"><name pos:start="309:40" pos:end="309:47">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="313:13" pos:end="313:34">/* ERROR Correction */</comment>

            <expr_stmt pos:start="315:13" pos:end="315:30"><expr pos:start="315:13" pos:end="315:29"><call pos:start="315:13" pos:end="315:29"><name pos:start="315:13" pos:end="315:19">avio_w8</name><argument_list pos:start="315:20" pos:end="315:29">(<argument pos:start="315:21" pos:end="315:22"><expr pos:start="315:21" pos:end="315:22"><name pos:start="315:21" pos:end="315:22">pb</name></expr></argument>, <argument pos:start="315:25" pos:end="315:28"><expr pos:start="315:25" pos:end="315:28"><literal type="number" pos:start="315:25" pos:end="315:28">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="317:13" pos:end="329:13"><if pos:start="317:13" pos:end="323:13">if <condition pos:start="317:16" pos:end="317:77">(<expr pos:start="317:17" pos:end="317:76"><name pos:start="317:17" pos:end="317:29"><name pos:start="317:17" pos:end="317:19">par</name><operator pos:start="317:20" pos:end="317:21">-&gt;</operator><name pos:start="317:22" pos:end="317:29">codec_id</name></name> <operator pos:start="317:31" pos:end="317:32">==</operator> <name pos:start="317:34" pos:end="317:55">AV_CODEC_ID_ADPCM_G726</name> <operator pos:start="317:57" pos:end="317:58">||</operator> <operator pos:start="317:60" pos:end="317:60">!</operator><name pos:start="317:61" pos:end="317:76"><name pos:start="317:61" pos:end="317:63">par</name><operator pos:start="317:64" pos:end="317:65">-&gt;</operator><name pos:start="317:66" pos:end="317:76">block_align</name></name></expr>)</condition> <block pos:start="317:79" pos:end="323:13">{<block_content pos:start="319:17" pos:end="321:38">

                <expr_stmt pos:start="319:17" pos:end="319:38"><expr pos:start="319:17" pos:end="319:37"><call pos:start="319:17" pos:end="319:37"><name pos:start="319:17" pos:end="319:25">avio_wl16</name><argument_list pos:start="319:26" pos:end="319:37">(<argument pos:start="319:27" pos:end="319:28"><expr pos:start="319:27" pos:end="319:28"><name pos:start="319:27" pos:end="319:28">pb</name></expr></argument>, <argument pos:start="319:31" pos:end="319:36"><expr pos:start="319:31" pos:end="319:36"><literal type="number" pos:start="319:31" pos:end="319:36">0x0190</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="321:17" pos:end="321:38"><expr pos:start="321:17" pos:end="321:37"><call pos:start="321:17" pos:end="321:37"><name pos:start="321:17" pos:end="321:25">avio_wl16</name><argument_list pos:start="321:26" pos:end="321:37">(<argument pos:start="321:27" pos:end="321:28"><expr pos:start="321:27" pos:end="321:28"><name pos:start="321:27" pos:end="321:28">pb</name></expr></argument>, <argument pos:start="321:31" pos:end="321:36"><expr pos:start="321:31" pos:end="321:36"><literal type="number" pos:start="321:31" pos:end="321:36">0x0190</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="323:15" pos:end="329:13">else <block pos:start="323:20" pos:end="329:13">{<block_content pos:start="325:17" pos:end="327:48">

                <expr_stmt pos:start="325:17" pos:end="325:48"><expr pos:start="325:17" pos:end="325:47"><call pos:start="325:17" pos:end="325:47"><name pos:start="325:17" pos:end="325:25">avio_wl16</name><argument_list pos:start="325:26" pos:end="325:47">(<argument pos:start="325:27" pos:end="325:28"><expr pos:start="325:27" pos:end="325:28"><name pos:start="325:27" pos:end="325:28">pb</name></expr></argument>, <argument pos:start="325:31" pos:end="325:46"><expr pos:start="325:31" pos:end="325:46"><name pos:start="325:31" pos:end="325:46"><name pos:start="325:31" pos:end="325:33">par</name><operator pos:start="325:34" pos:end="325:35">-&gt;</operator><name pos:start="325:36" pos:end="325:46">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="327:17" pos:end="327:48"><expr pos:start="327:17" pos:end="327:47"><call pos:start="327:17" pos:end="327:47"><name pos:start="327:17" pos:end="327:25">avio_wl16</name><argument_list pos:start="327:26" pos:end="327:47">(<argument pos:start="327:27" pos:end="327:28"><expr pos:start="327:27" pos:end="327:28"><name pos:start="327:27" pos:end="327:28">pb</name></expr></argument>, <argument pos:start="327:31" pos:end="327:46"><expr pos:start="327:31" pos:end="327:46"><name pos:start="327:31" pos:end="327:46"><name pos:start="327:31" pos:end="327:33">par</name><operator pos:start="327:34" pos:end="327:35">-&gt;</operator><name pos:start="327:36" pos:end="327:46">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="331:13" pos:end="331:32"><expr pos:start="331:13" pos:end="331:31"><call pos:start="331:13" pos:end="331:31"><name pos:start="331:13" pos:end="331:21">avio_wl16</name><argument_list pos:start="331:22" pos:end="331:31">(<argument pos:start="331:23" pos:end="331:24"><expr pos:start="331:23" pos:end="331:24"><name pos:start="331:23" pos:end="331:24">pb</name></expr></argument>, <argument pos:start="331:27" pos:end="331:30"><expr pos:start="331:27" pos:end="331:30"><literal type="number" pos:start="331:27" pos:end="331:30">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:30"><expr pos:start="333:13" pos:end="333:29"><call pos:start="333:13" pos:end="333:29"><name pos:start="333:13" pos:end="333:19">avio_w8</name><argument_list pos:start="333:20" pos:end="333:29">(<argument pos:start="333:21" pos:end="333:22"><expr pos:start="333:21" pos:end="333:22"><name pos:start="333:21" pos:end="333:22">pb</name></expr></argument>, <argument pos:start="333:25" pos:end="333:28"><expr pos:start="333:25" pos:end="333:28"><literal type="number" pos:start="333:25" pos:end="333:28">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="335:11" pos:end="351:9">else <block pos:start="335:16" pos:end="351:9">{<block_content pos:start="337:13" pos:end="349:61">

            <expr_stmt pos:start="337:13" pos:end="337:38"><expr pos:start="337:13" pos:end="337:37"><call pos:start="337:13" pos:end="337:37"><name pos:start="337:13" pos:end="337:21">avio_wl32</name><argument_list pos:start="337:22" pos:end="337:37">(<argument pos:start="337:23" pos:end="337:24"><expr pos:start="337:23" pos:end="337:24"><name pos:start="337:23" pos:end="337:24">pb</name></expr></argument>, <argument pos:start="337:27" pos:end="337:36"><expr pos:start="337:27" pos:end="337:36"><name pos:start="337:27" pos:end="337:36"><name pos:start="337:27" pos:end="337:29">par</name><operator pos:start="337:30" pos:end="337:31">-&gt;</operator><name pos:start="337:32" pos:end="337:36">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:39"><expr pos:start="339:13" pos:end="339:38"><call pos:start="339:13" pos:end="339:38"><name pos:start="339:13" pos:end="339:21">avio_wl32</name><argument_list pos:start="339:22" pos:end="339:38">(<argument pos:start="339:23" pos:end="339:24"><expr pos:start="339:23" pos:end="339:24"><name pos:start="339:23" pos:end="339:24">pb</name></expr></argument>, <argument pos:start="339:27" pos:end="339:37"><expr pos:start="339:27" pos:end="339:37"><name pos:start="339:27" pos:end="339:37"><name pos:start="339:27" pos:end="339:29">par</name><operator pos:start="339:30" pos:end="339:31">-&gt;</operator><name pos:start="339:32" pos:end="339:37">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="341:13" pos:end="341:27"><expr pos:start="341:13" pos:end="341:26"><call pos:start="341:13" pos:end="341:26"><name pos:start="341:13" pos:end="341:19">avio_w8</name><argument_list pos:start="341:20" pos:end="341:26">(<argument pos:start="341:21" pos:end="341:22"><expr pos:start="341:21" pos:end="341:22"><name pos:start="341:21" pos:end="341:22">pb</name></expr></argument>, <argument pos:start="341:25" pos:end="341:25"><expr pos:start="341:25" pos:end="341:25"><literal type="number" pos:start="341:25" pos:end="341:25">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="341:29" pos:end="341:37">/* ??? */</comment>

            <expr_stmt pos:start="343:13" pos:end="343:52"><expr pos:start="343:13" pos:end="343:51"><call pos:start="343:13" pos:end="343:51"><name pos:start="343:13" pos:end="343:21">avio_wl16</name><argument_list pos:start="343:22" pos:end="343:51">(<argument pos:start="343:23" pos:end="343:24"><expr pos:start="343:23" pos:end="343:24"><name pos:start="343:23" pos:end="343:24">pb</name></expr></argument>, <argument pos:start="343:27" pos:end="343:50"><expr pos:start="343:27" pos:end="343:50"><literal type="number" pos:start="343:27" pos:end="343:30">40</literal> <operator pos:start="343:30" pos:end="343:30">+</operator> <name pos:start="343:32" pos:end="343:50"><name pos:start="343:32" pos:end="343:34">par</name><operator pos:start="343:35" pos:end="343:36">-&gt;</operator><name pos:start="343:37" pos:end="343:50">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="343:54" pos:end="343:63">/* size */</comment>



            <comment type="block" pos:start="347:13" pos:end="347:41">/* BITMAPINFOHEADER header */</comment>

            <expr_stmt pos:start="349:13" pos:end="349:61"><expr pos:start="349:13" pos:end="349:60"><call pos:start="349:13" pos:end="349:60"><name pos:start="349:13" pos:end="349:29">ff_put_bmp_header</name><argument_list pos:start="349:30" pos:end="349:60">(<argument pos:start="349:31" pos:end="349:32"><expr pos:start="349:31" pos:end="349:32"><name pos:start="349:31" pos:end="349:32">pb</name></expr></argument>, <argument pos:start="349:35" pos:end="349:37"><expr pos:start="349:35" pos:end="349:37"><name pos:start="349:35" pos:end="349:37">par</name></expr></argument>, <argument pos:start="349:40" pos:end="349:56"><expr pos:start="349:40" pos:end="349:56"><name pos:start="349:40" pos:end="349:56">ff_codec_bmp_tags</name></expr></argument>, <argument pos:start="349:59" pos:end="349:59"><expr pos:start="349:59" pos:end="349:59"><literal type="number" pos:start="349:59" pos:end="349:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="353:9" pos:end="353:29"><expr pos:start="353:9" pos:end="353:28"><call pos:start="353:9" pos:end="353:28"><name pos:start="353:9" pos:end="353:18">end_header</name><argument_list pos:start="353:19" pos:end="353:28">(<argument pos:start="353:20" pos:end="353:21"><expr pos:start="353:20" pos:end="353:21"><name pos:start="353:20" pos:end="353:21">pb</name></expr></argument>, <argument pos:start="353:24" pos:end="353:27"><expr pos:start="353:24" pos:end="353:27"><name pos:start="353:24" pos:end="353:27">hpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="359:5" pos:end="359:24">/* media comments */</comment>



    <expr_stmt pos:start="363:5" pos:end="363:56"><expr pos:start="363:5" pos:end="363:55"><name pos:start="363:5" pos:end="363:8">hpos</name> <operator pos:start="363:10" pos:end="363:10">=</operator> <call pos:start="363:12" pos:end="363:55"><name pos:start="363:12" pos:end="363:21">put_header</name><argument_list pos:start="363:22" pos:end="363:55">(<argument pos:start="363:23" pos:end="363:24"><expr pos:start="363:23" pos:end="363:24"><name pos:start="363:23" pos:end="363:24">pb</name></expr></argument>, <argument pos:start="363:27" pos:end="363:54"><expr pos:start="363:27" pos:end="363:54"><operator pos:start="363:27" pos:end="363:27">&amp;</operator><name pos:start="363:28" pos:end="363:54">ff_asf_codec_comment_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="365:5" pos:end="365:48"><expr pos:start="365:5" pos:end="365:47"><call pos:start="365:5" pos:end="365:47"><name pos:start="365:5" pos:end="365:12">put_guid</name><argument_list pos:start="365:13" pos:end="365:47">(<argument pos:start="365:14" pos:end="365:15"><expr pos:start="365:14" pos:end="365:15"><name pos:start="365:14" pos:end="365:15">pb</name></expr></argument>, <argument pos:start="365:18" pos:end="365:46"><expr pos:start="365:18" pos:end="365:46"><operator pos:start="365:18" pos:end="365:18">&amp;</operator><name pos:start="365:19" pos:end="365:46">ff_asf_codec_comment1_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="367:5" pos:end="367:33"><expr pos:start="367:5" pos:end="367:32"><call pos:start="367:5" pos:end="367:32"><name pos:start="367:5" pos:end="367:13">avio_wl32</name><argument_list pos:start="367:14" pos:end="367:32">(<argument pos:start="367:15" pos:end="367:16"><expr pos:start="367:15" pos:end="367:16"><name pos:start="367:15" pos:end="367:16">pb</name></expr></argument>, <argument pos:start="367:19" pos:end="367:31"><expr pos:start="367:19" pos:end="367:31"><name pos:start="367:19" pos:end="367:31"><name pos:start="367:19" pos:end="367:19">s</name><operator pos:start="367:20" pos:end="367:21">-&gt;</operator><name pos:start="367:22" pos:end="367:31">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="369:5" pos:end="465:5">for <control pos:start="369:9" pos:end="369:39">(<init pos:start="369:10" pos:end="369:15"><expr pos:start="369:10" pos:end="369:14"><name pos:start="369:10" pos:end="369:10">n</name> <operator pos:start="369:12" pos:end="369:12">=</operator> <literal type="number" pos:start="369:14" pos:end="369:14">0</literal></expr>;</init> <condition pos:start="369:17" pos:end="369:34"><expr pos:start="369:17" pos:end="369:33"><name pos:start="369:17" pos:end="369:17">n</name> <operator pos:start="369:19" pos:end="369:19">&lt;</operator> <name pos:start="369:21" pos:end="369:33"><name pos:start="369:21" pos:end="369:21">s</name><operator pos:start="369:22" pos:end="369:23">-&gt;</operator><name pos:start="369:24" pos:end="369:33">nb_streams</name></name></expr>;</condition> <incr pos:start="369:36" pos:end="369:38"><expr pos:start="369:36" pos:end="369:38"><name pos:start="369:36" pos:end="369:36">n</name><operator pos:start="369:37" pos:end="369:38">++</operator></expr></incr>)</control> <block pos:start="369:41" pos:end="465:5">{<block_content pos:start="371:9" pos:end="463:22">

        <decl_stmt pos:start="371:9" pos:end="371:44"><decl pos:start="371:9" pos:end="371:43"><type pos:start="371:9" pos:end="371:33"><specifier pos:start="371:9" pos:end="371:13">const</specifier> <name pos:start="371:15" pos:end="371:31">AVCodecDescriptor</name> <modifier pos:start="371:33" pos:end="371:33">*</modifier></type><name pos:start="371:34" pos:end="371:43">codec_desc</name></decl>;</decl_stmt>

        <decl_stmt pos:start="373:9" pos:end="373:25"><decl pos:start="373:9" pos:end="373:24"><type pos:start="373:9" pos:end="373:20"><specifier pos:start="373:9" pos:end="373:13">const</specifier> <name pos:start="373:15" pos:end="373:18">char</name> <modifier pos:start="373:20" pos:end="373:20">*</modifier></type><name pos:start="373:21" pos:end="373:24">desc</name></decl>;</decl_stmt>



        <expr_stmt pos:start="377:9" pos:end="377:39"><expr pos:start="377:9" pos:end="377:38"><name pos:start="377:9" pos:end="377:11">par</name>  <operator pos:start="377:14" pos:end="377:14">=</operator> <name pos:start="377:16" pos:end="377:28"><name pos:start="377:16" pos:end="377:16">s</name><operator pos:start="377:17" pos:end="377:18">-&gt;</operator><name pos:start="377:19" pos:end="377:25">streams</name><index pos:start="377:26" pos:end="377:28">[<expr pos:start="377:27" pos:end="377:27"><name pos:start="377:27" pos:end="377:27">n</name></expr>]</index></name><operator pos:start="377:29" pos:end="377:30">-&gt;</operator><name pos:start="377:31" pos:end="377:38">codecpar</name></expr>;</expr_stmt>

        <expr_stmt pos:start="379:9" pos:end="379:59"><expr pos:start="379:9" pos:end="379:58"><name pos:start="379:9" pos:end="379:18">codec_desc</name> <operator pos:start="379:20" pos:end="379:20">=</operator> <call pos:start="379:22" pos:end="379:58"><name pos:start="379:22" pos:end="379:43">avcodec_descriptor_get</name><argument_list pos:start="379:44" pos:end="379:58">(<argument pos:start="379:45" pos:end="379:57"><expr pos:start="379:45" pos:end="379:57"><name pos:start="379:45" pos:end="379:57"><name pos:start="379:45" pos:end="379:47">par</name><operator pos:start="379:48" pos:end="379:49">-&gt;</operator><name pos:start="379:50" pos:end="379:57">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="383:9" pos:end="393:30"><if pos:start="383:9" pos:end="385:29">if <condition pos:start="383:12" pos:end="383:50">(<expr pos:start="383:13" pos:end="383:49"><name pos:start="383:13" pos:end="383:27"><name pos:start="383:13" pos:end="383:15">par</name><operator pos:start="383:16" pos:end="383:17">-&gt;</operator><name pos:start="383:18" pos:end="383:27">codec_type</name></name> <operator pos:start="383:29" pos:end="383:30">==</operator> <name pos:start="383:32" pos:end="383:49">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="385:13" pos:end="385:29"><block_content pos:start="385:13" pos:end="385:29">

            <expr_stmt pos:start="385:13" pos:end="385:29"><expr pos:start="385:13" pos:end="385:28"><call pos:start="385:13" pos:end="385:28"><name pos:start="385:13" pos:end="385:21">avio_wl16</name><argument_list pos:start="385:22" pos:end="385:28">(<argument pos:start="385:23" pos:end="385:24"><expr pos:start="385:23" pos:end="385:24"><name pos:start="385:23" pos:end="385:24">pb</name></expr></argument>, <argument pos:start="385:27" pos:end="385:27"><expr pos:start="385:27" pos:end="385:27"><literal type="number" pos:start="385:27" pos:end="385:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="387:9" pos:end="389:29">else if <condition pos:start="387:17" pos:end="387:55">(<expr pos:start="387:18" pos:end="387:54"><name pos:start="387:18" pos:end="387:32"><name pos:start="387:18" pos:end="387:20">par</name><operator pos:start="387:21" pos:end="387:22">-&gt;</operator><name pos:start="387:23" pos:end="387:32">codec_type</name></name> <operator pos:start="387:34" pos:end="387:35">==</operator> <name pos:start="387:37" pos:end="387:54">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="389:13" pos:end="389:29"><block_content pos:start="389:13" pos:end="389:29">

            <expr_stmt pos:start="389:13" pos:end="389:29"><expr pos:start="389:13" pos:end="389:28"><call pos:start="389:13" pos:end="389:28"><name pos:start="389:13" pos:end="389:21">avio_wl16</name><argument_list pos:start="389:22" pos:end="389:28">(<argument pos:start="389:23" pos:end="389:24"><expr pos:start="389:23" pos:end="389:24"><name pos:start="389:23" pos:end="389:24">pb</name></expr></argument>, <argument pos:start="389:27" pos:end="389:27"><expr pos:start="389:27" pos:end="389:27"><literal type="number" pos:start="389:27" pos:end="389:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="391:9" pos:end="393:30">else<block type="pseudo" pos:start="393:13" pos:end="393:30"><block_content pos:start="393:13" pos:end="393:30">

            <expr_stmt pos:start="393:13" pos:end="393:30"><expr pos:start="393:13" pos:end="393:29"><call pos:start="393:13" pos:end="393:29"><name pos:start="393:13" pos:end="393:21">avio_wl16</name><argument_list pos:start="393:22" pos:end="393:29">(<argument pos:start="393:23" pos:end="393:24"><expr pos:start="393:23" pos:end="393:24"><name pos:start="393:23" pos:end="393:24">pb</name></expr></argument>, <argument pos:start="393:27" pos:end="393:28"><expr pos:start="393:27" pos:end="393:28"><operator pos:start="393:27" pos:end="393:27">-</operator><literal type="number" pos:start="393:28" pos:end="393:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="397:9" pos:end="403:56"><if pos:start="397:9" pos:end="399:44">if <condition pos:start="397:12" pos:end="397:47">(<expr pos:start="397:13" pos:end="397:46"><name pos:start="397:13" pos:end="397:25"><name pos:start="397:13" pos:end="397:15">par</name><operator pos:start="397:16" pos:end="397:17">-&gt;</operator><name pos:start="397:18" pos:end="397:25">codec_id</name></name> <operator pos:start="397:27" pos:end="397:28">==</operator> <name pos:start="397:30" pos:end="397:46">AV_CODEC_ID_WMAV2</name></expr>)</condition><block type="pseudo" pos:start="399:13" pos:end="399:44"><block_content pos:start="399:13" pos:end="399:44">

            <expr_stmt pos:start="399:13" pos:end="399:44"><expr pos:start="399:13" pos:end="399:43"><name pos:start="399:13" pos:end="399:16">desc</name> <operator pos:start="399:18" pos:end="399:18">=</operator> <literal type="string" pos:start="399:20" pos:end="399:43">"Windows Media Audio V8"</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="401:9" pos:end="403:56">else<block type="pseudo" pos:start="403:13" pos:end="403:56"><block_content pos:start="403:13" pos:end="403:56">

            <expr_stmt pos:start="403:13" pos:end="403:56"><expr pos:start="403:13" pos:end="403:55"><name pos:start="403:13" pos:end="403:16">desc</name> <operator pos:start="403:18" pos:end="403:18">=</operator> <ternary pos:start="403:20" pos:end="403:55"><condition pos:start="403:20" pos:end="403:31"><expr pos:start="403:20" pos:end="403:29"><name pos:start="403:20" pos:end="403:29">codec_desc</name></expr> ?</condition><then pos:start="403:33" pos:end="403:48"> <expr pos:start="403:33" pos:end="403:48"><name pos:start="403:33" pos:end="403:48"><name pos:start="403:33" pos:end="403:42">codec_desc</name><operator pos:start="403:43" pos:end="403:44">-&gt;</operator><name pos:start="403:45" pos:end="403:48">name</name></name></expr> </then><else pos:start="403:50" pos:end="403:55">: <expr pos:start="403:52" pos:end="403:55"><name pos:start="403:52" pos:end="403:55">NULL</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="407:9" pos:end="437:29"><if pos:start="407:9" pos:end="435:9">if <condition pos:start="407:12" pos:end="407:17">(<expr pos:start="407:13" pos:end="407:16"><name pos:start="407:13" pos:end="407:16">desc</name></expr>)</condition> <block pos:start="407:19" pos:end="435:9">{<block_content pos:start="409:13" pos:end="433:27">

            <decl_stmt pos:start="409:13" pos:end="409:33"><decl pos:start="409:13" pos:end="409:32"><type pos:start="409:13" pos:end="409:25"><name pos:start="409:13" pos:end="409:23">AVIOContext</name> <modifier pos:start="409:25" pos:end="409:25">*</modifier></type><name pos:start="409:26" pos:end="409:32">dyn_buf</name></decl>;</decl_stmt>

            <decl_stmt pos:start="411:13" pos:end="411:25"><decl pos:start="411:13" pos:end="411:24"><type pos:start="411:13" pos:end="411:21"><name pos:start="411:13" pos:end="411:19">uint8_t</name> <modifier pos:start="411:21" pos:end="411:21">*</modifier></type><name pos:start="411:22" pos:end="411:24">buf</name></decl>;</decl_stmt>

            <decl_stmt pos:start="413:13" pos:end="413:20"><decl pos:start="413:13" pos:end="413:19"><type pos:start="413:13" pos:end="413:15"><name pos:start="413:13" pos:end="413:15">int</name></type> <name pos:start="413:17" pos:end="413:19">len</name></decl>;</decl_stmt>



            <if_stmt pos:start="417:13" pos:end="419:39"><if pos:start="417:13" pos:end="419:39">if <condition pos:start="417:16" pos:end="417:48">(<expr pos:start="417:17" pos:end="417:47"><call pos:start="417:17" pos:end="417:43"><name pos:start="417:17" pos:end="417:33">avio_open_dyn_buf</name><argument_list pos:start="417:34" pos:end="417:43">(<argument pos:start="417:35" pos:end="417:42"><expr pos:start="417:35" pos:end="417:42"><operator pos:start="417:35" pos:end="417:35">&amp;</operator><name pos:start="417:36" pos:end="417:42">dyn_buf</name></expr></argument>)</argument_list></call> <operator pos:start="417:45" pos:end="417:45">&lt;</operator> <literal type="number" pos:start="417:47" pos:end="417:47">0</literal></expr>)</condition><block type="pseudo" pos:start="419:17" pos:end="419:39"><block_content pos:start="419:17" pos:end="419:39">

                <return pos:start="419:17" pos:end="419:39">return <expr pos:start="419:24" pos:end="419:38"><call pos:start="419:24" pos:end="419:38"><name pos:start="419:24" pos:end="419:30">AVERROR</name><argument_list pos:start="419:31" pos:end="419:38">(<argument pos:start="419:32" pos:end="419:37"><expr pos:start="419:32" pos:end="419:37"><name pos:start="419:32" pos:end="419:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="423:13" pos:end="423:44"><expr pos:start="423:13" pos:end="423:43"><call pos:start="423:13" pos:end="423:43"><name pos:start="423:13" pos:end="423:28">avio_put_str16le</name><argument_list pos:start="423:29" pos:end="423:43">(<argument pos:start="423:30" pos:end="423:36"><expr pos:start="423:30" pos:end="423:36"><name pos:start="423:30" pos:end="423:36">dyn_buf</name></expr></argument>, <argument pos:start="423:39" pos:end="423:42"><expr pos:start="423:39" pos:end="423:42"><name pos:start="423:39" pos:end="423:42">desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="425:13" pos:end="425:52"><expr pos:start="425:13" pos:end="425:51"><name pos:start="425:13" pos:end="425:15">len</name> <operator pos:start="425:17" pos:end="425:17">=</operator> <call pos:start="425:19" pos:end="425:51"><name pos:start="425:19" pos:end="425:36">avio_close_dyn_buf</name><argument_list pos:start="425:37" pos:end="425:51">(<argument pos:start="425:38" pos:end="425:44"><expr pos:start="425:38" pos:end="425:44"><name pos:start="425:38" pos:end="425:44">dyn_buf</name></expr></argument>, <argument pos:start="425:47" pos:end="425:50"><expr pos:start="425:47" pos:end="425:50"><operator pos:start="425:47" pos:end="425:47">&amp;</operator><name pos:start="425:48" pos:end="425:50">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="427:13" pos:end="427:35"><expr pos:start="427:13" pos:end="427:34"><call pos:start="427:13" pos:end="427:34"><name pos:start="427:13" pos:end="427:21">avio_wl16</name><argument_list pos:start="427:22" pos:end="427:34">(<argument pos:start="427:23" pos:end="427:24"><expr pos:start="427:23" pos:end="427:24"><name pos:start="427:23" pos:end="427:24">pb</name></expr></argument>, <argument pos:start="427:27" pos:end="427:33"><expr pos:start="427:27" pos:end="427:33"><name pos:start="427:27" pos:end="427:29">len</name> <operator pos:start="427:31" pos:end="427:31">/</operator> <literal type="number" pos:start="427:33" pos:end="427:33">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="427:37" pos:end="427:83">// "number of characters" = length in bytes / 2</comment>



            <expr_stmt pos:start="431:13" pos:end="431:37"><expr pos:start="431:13" pos:end="431:36"><call pos:start="431:13" pos:end="431:36"><name pos:start="431:13" pos:end="431:22">avio_write</name><argument_list pos:start="431:23" pos:end="431:36">(<argument pos:start="431:24" pos:end="431:25"><expr pos:start="431:24" pos:end="431:25"><name pos:start="431:24" pos:end="431:25">pb</name></expr></argument>, <argument pos:start="431:28" pos:end="431:30"><expr pos:start="431:28" pos:end="431:30"><name pos:start="431:28" pos:end="431:30">buf</name></expr></argument>, <argument pos:start="431:33" pos:end="431:35"><expr pos:start="431:33" pos:end="431:35"><name pos:start="431:33" pos:end="431:35">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="433:13" pos:end="433:27"><expr pos:start="433:13" pos:end="433:26"><call pos:start="433:13" pos:end="433:26"><name pos:start="433:13" pos:end="433:20">av_freep</name><argument_list pos:start="433:21" pos:end="433:26">(<argument pos:start="433:22" pos:end="433:25"><expr pos:start="433:22" pos:end="433:25"><operator pos:start="433:22" pos:end="433:22">&amp;</operator><name pos:start="433:23" pos:end="433:25">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="435:11" pos:end="437:29">else<block type="pseudo" pos:start="437:13" pos:end="437:29"><block_content pos:start="437:13" pos:end="437:29">

            <expr_stmt pos:start="437:13" pos:end="437:29"><expr pos:start="437:13" pos:end="437:28"><call pos:start="437:13" pos:end="437:28"><name pos:start="437:13" pos:end="437:21">avio_wl16</name><argument_list pos:start="437:22" pos:end="437:28">(<argument pos:start="437:23" pos:end="437:24"><expr pos:start="437:23" pos:end="437:24"><name pos:start="437:23" pos:end="437:24">pb</name></expr></argument>, <argument pos:start="437:27" pos:end="437:27"><expr pos:start="437:27" pos:end="437:27"><literal type="number" pos:start="437:27" pos:end="437:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="441:9" pos:end="441:25"><expr pos:start="441:9" pos:end="441:24"><call pos:start="441:9" pos:end="441:24"><name pos:start="441:9" pos:end="441:17">avio_wl16</name><argument_list pos:start="441:18" pos:end="441:24">(<argument pos:start="441:19" pos:end="441:20"><expr pos:start="441:19" pos:end="441:20"><name pos:start="441:19" pos:end="441:20">pb</name></expr></argument>, <argument pos:start="441:23" pos:end="441:23"><expr pos:start="441:23" pos:end="441:23"><literal type="number" pos:start="441:23" pos:end="441:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="441:27" pos:end="441:45">/* no parameters */</comment>



        <comment type="block" pos:start="445:9" pos:end="445:16">/* id */</comment>

        <if_stmt pos:start="447:9" pos:end="459:9"><if pos:start="447:9" pos:end="453:9">if <condition pos:start="447:12" pos:end="447:50">(<expr pos:start="447:13" pos:end="447:49"><name pos:start="447:13" pos:end="447:27"><name pos:start="447:13" pos:end="447:15">par</name><operator pos:start="447:16" pos:end="447:17">-&gt;</operator><name pos:start="447:18" pos:end="447:27">codec_type</name></name> <operator pos:start="447:29" pos:end="447:30">==</operator> <name pos:start="447:32" pos:end="447:49">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="447:52" pos:end="453:9">{<block_content pos:start="449:13" pos:end="451:42">

            <expr_stmt pos:start="449:13" pos:end="449:29"><expr pos:start="449:13" pos:end="449:28"><call pos:start="449:13" pos:end="449:28"><name pos:start="449:13" pos:end="449:21">avio_wl16</name><argument_list pos:start="449:22" pos:end="449:28">(<argument pos:start="449:23" pos:end="449:24"><expr pos:start="449:23" pos:end="449:24"><name pos:start="449:23" pos:end="449:24">pb</name></expr></argument>, <argument pos:start="449:27" pos:end="449:27"><expr pos:start="449:27" pos:end="449:27"><literal type="number" pos:start="449:27" pos:end="449:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="451:13" pos:end="451:42"><expr pos:start="451:13" pos:end="451:41"><call pos:start="451:13" pos:end="451:41"><name pos:start="451:13" pos:end="451:21">avio_wl16</name><argument_list pos:start="451:22" pos:end="451:41">(<argument pos:start="451:23" pos:end="451:24"><expr pos:start="451:23" pos:end="451:24"><name pos:start="451:23" pos:end="451:24">pb</name></expr></argument>, <argument pos:start="451:27" pos:end="451:40"><expr pos:start="451:27" pos:end="451:40"><name pos:start="451:27" pos:end="451:40"><name pos:start="451:27" pos:end="451:29">par</name><operator pos:start="451:30" pos:end="451:31">-&gt;</operator><name pos:start="451:32" pos:end="451:40">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="453:11" pos:end="459:9">else <block pos:start="453:16" pos:end="459:9">{<block_content pos:start="455:13" pos:end="457:42">

            <expr_stmt pos:start="455:13" pos:end="455:29"><expr pos:start="455:13" pos:end="455:28"><call pos:start="455:13" pos:end="455:28"><name pos:start="455:13" pos:end="455:21">avio_wl16</name><argument_list pos:start="455:22" pos:end="455:28">(<argument pos:start="455:23" pos:end="455:24"><expr pos:start="455:23" pos:end="455:24"><name pos:start="455:23" pos:end="455:24">pb</name></expr></argument>, <argument pos:start="455:27" pos:end="455:27"><expr pos:start="455:27" pos:end="455:27"><literal type="number" pos:start="455:27" pos:end="455:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="457:13" pos:end="457:42"><expr pos:start="457:13" pos:end="457:41"><call pos:start="457:13" pos:end="457:41"><name pos:start="457:13" pos:end="457:21">avio_wl32</name><argument_list pos:start="457:22" pos:end="457:41">(<argument pos:start="457:23" pos:end="457:24"><expr pos:start="457:23" pos:end="457:24"><name pos:start="457:23" pos:end="457:24">pb</name></expr></argument>, <argument pos:start="457:27" pos:end="457:40"><expr pos:start="457:27" pos:end="457:40"><name pos:start="457:27" pos:end="457:40"><name pos:start="457:27" pos:end="457:29">par</name><operator pos:start="457:30" pos:end="457:31">-&gt;</operator><name pos:start="457:32" pos:end="457:40">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="461:9" pos:end="463:22"><if pos:start="461:9" pos:end="463:22">if <condition pos:start="461:12" pos:end="461:28">(<expr pos:start="461:13" pos:end="461:27"><operator pos:start="461:13" pos:end="461:13">!</operator><name pos:start="461:14" pos:end="461:27"><name pos:start="461:14" pos:end="461:16">par</name><operator pos:start="461:17" pos:end="461:18">-&gt;</operator><name pos:start="461:19" pos:end="461:27">codec_tag</name></name></expr>)</condition><block type="pseudo" pos:start="463:13" pos:end="463:22"><block_content pos:start="463:13" pos:end="463:22">

            <return pos:start="463:13" pos:end="463:22">return <expr pos:start="463:20" pos:end="463:21"><operator pos:start="463:20" pos:end="463:20">-</operator><literal type="number" pos:start="463:21" pos:end="463:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="467:5" pos:end="467:25"><expr pos:start="467:5" pos:end="467:24"><call pos:start="467:5" pos:end="467:24"><name pos:start="467:5" pos:end="467:14">end_header</name><argument_list pos:start="467:15" pos:end="467:24">(<argument pos:start="467:16" pos:end="467:17"><expr pos:start="467:16" pos:end="467:17"><name pos:start="467:16" pos:end="467:17">pb</name></expr></argument>, <argument pos:start="467:20" pos:end="467:23"><expr pos:start="467:20" pos:end="467:23"><name pos:start="467:20" pos:end="467:23">hpos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="471:5" pos:end="471:38">/* patch the header size fields */</comment>



    <expr_stmt pos:start="475:5" pos:end="475:32"><expr pos:start="475:5" pos:end="475:31"><name pos:start="475:5" pos:end="475:11">cur_pos</name>     <operator pos:start="475:17" pos:end="475:17">=</operator> <call pos:start="475:19" pos:end="475:31"><name pos:start="475:19" pos:end="475:27">avio_tell</name><argument_list pos:start="475:28" pos:end="475:31">(<argument pos:start="475:29" pos:end="475:30"><expr pos:start="475:29" pos:end="475:30"><name pos:start="475:29" pos:end="475:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="477:5" pos:end="477:42"><expr pos:start="477:5" pos:end="477:41"><name pos:start="477:5" pos:end="477:15">header_size</name> <operator pos:start="477:17" pos:end="477:17">=</operator> <name pos:start="477:19" pos:end="477:25">cur_pos</name> <operator pos:start="477:27" pos:end="477:27">-</operator> <name pos:start="477:29" pos:end="477:41">header_offset</name></expr>;</expr_stmt>

    <if_stmt pos:start="479:5" pos:end="497:5"><if pos:start="479:5" pos:end="497:5">if <condition pos:start="479:8" pos:end="479:25">(<expr pos:start="479:9" pos:end="479:24"><name pos:start="479:9" pos:end="479:24"><name pos:start="479:9" pos:end="479:11">asf</name><operator pos:start="479:12" pos:end="479:13">-&gt;</operator><name pos:start="479:14" pos:end="479:24">is_streamed</name></name></expr>)</condition> <block pos:start="479:27" pos:end="497:5">{<block_content pos:start="481:9" pos:end="495:49">

        <expr_stmt pos:start="481:9" pos:end="481:49"><expr pos:start="481:9" pos:end="481:48"><name pos:start="481:9" pos:end="481:19">header_size</name> <operator pos:start="481:21" pos:end="481:22">+=</operator> <literal type="number" pos:start="481:24" pos:end="481:26">8</literal> <operator pos:start="481:26" pos:end="481:26">+</operator> <literal type="number" pos:start="481:28" pos:end="481:31">30</literal> <operator pos:start="481:31" pos:end="481:31">+</operator> <name pos:start="481:33" pos:end="481:48">DATA_HEADER_SIZE</name></expr>;</expr_stmt>



        <expr_stmt pos:start="485:9" pos:end="485:57"><expr pos:start="485:9" pos:end="485:56"><call pos:start="485:9" pos:end="485:56"><name pos:start="485:9" pos:end="485:17">avio_seek</name><argument_list pos:start="485:18" pos:end="485:56">(<argument pos:start="485:19" pos:end="485:20"><expr pos:start="485:19" pos:end="485:20"><name pos:start="485:19" pos:end="485:20">pb</name></expr></argument>, <argument pos:start="485:23" pos:end="485:45"><expr pos:start="485:23" pos:end="485:45"><name pos:start="485:23" pos:end="485:35">header_offset</name> <operator pos:start="485:37" pos:end="485:37">-</operator> <literal type="number" pos:start="485:39" pos:end="485:42">10</literal> <operator pos:start="485:42" pos:end="485:42">-</operator> <literal type="number" pos:start="485:44" pos:end="485:45">30</literal></expr></argument>, <argument pos:start="485:48" pos:end="485:55"><expr pos:start="485:48" pos:end="485:55"><name pos:start="485:48" pos:end="485:55">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="487:9" pos:end="487:35"><expr pos:start="487:9" pos:end="487:34"><call pos:start="487:9" pos:end="487:34"><name pos:start="487:9" pos:end="487:17">avio_wl16</name><argument_list pos:start="487:18" pos:end="487:34">(<argument pos:start="487:19" pos:end="487:20"><expr pos:start="487:19" pos:end="487:20"><name pos:start="487:19" pos:end="487:20">pb</name></expr></argument>, <argument pos:start="487:23" pos:end="487:33"><expr pos:start="487:23" pos:end="487:33"><name pos:start="487:23" pos:end="487:33">header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="489:9" pos:end="489:56"><expr pos:start="489:9" pos:end="489:55"><call pos:start="489:9" pos:end="489:55"><name pos:start="489:9" pos:end="489:17">avio_seek</name><argument_list pos:start="489:18" pos:end="489:55">(<argument pos:start="489:19" pos:end="489:20"><expr pos:start="489:19" pos:end="489:20"><name pos:start="489:19" pos:end="489:20">pb</name></expr></argument>, <argument pos:start="489:23" pos:end="489:44"><expr pos:start="489:23" pos:end="489:44"><name pos:start="489:23" pos:end="489:35">header_offset</name> <operator pos:start="489:37" pos:end="489:37">-</operator> <literal type="number" pos:start="489:39" pos:end="489:41">2</literal> <operator pos:start="489:41" pos:end="489:41">-</operator> <literal type="number" pos:start="489:43" pos:end="489:44">30</literal></expr></argument>, <argument pos:start="489:47" pos:end="489:54"><expr pos:start="489:47" pos:end="489:54"><name pos:start="489:47" pos:end="489:54">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="491:9" pos:end="491:35"><expr pos:start="491:9" pos:end="491:34"><call pos:start="491:9" pos:end="491:34"><name pos:start="491:9" pos:end="491:17">avio_wl16</name><argument_list pos:start="491:18" pos:end="491:34">(<argument pos:start="491:19" pos:end="491:20"><expr pos:start="491:19" pos:end="491:20"><name pos:start="491:19" pos:end="491:20">pb</name></expr></argument>, <argument pos:start="491:23" pos:end="491:33"><expr pos:start="491:23" pos:end="491:33"><name pos:start="491:23" pos:end="491:33">header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="495:9" pos:end="495:49"><expr pos:start="495:9" pos:end="495:48"><name pos:start="495:9" pos:end="495:19">header_size</name> <operator pos:start="495:21" pos:end="495:22">-=</operator> <literal type="number" pos:start="495:24" pos:end="495:26">8</literal> <operator pos:start="495:26" pos:end="495:26">+</operator> <literal type="number" pos:start="495:28" pos:end="495:31">30</literal> <operator pos:start="495:31" pos:end="495:31">+</operator> <name pos:start="495:33" pos:end="495:48">DATA_HEADER_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="499:5" pos:end="499:26"><expr pos:start="499:5" pos:end="499:25"><name pos:start="499:5" pos:end="499:15">header_size</name> <operator pos:start="499:17" pos:end="499:18">+=</operator> <literal type="number" pos:start="499:20" pos:end="499:23">24</literal> <operator pos:start="499:23" pos:end="499:23">+</operator> <literal type="number" pos:start="499:25" pos:end="499:25">6</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="501:5" pos:end="501:48"><expr pos:start="501:5" pos:end="501:47"><call pos:start="501:5" pos:end="501:47"><name pos:start="501:5" pos:end="501:13">avio_seek</name><argument_list pos:start="501:14" pos:end="501:47">(<argument pos:start="501:15" pos:end="501:16"><expr pos:start="501:15" pos:end="501:16"><name pos:start="501:15" pos:end="501:16">pb</name></expr></argument>, <argument pos:start="501:19" pos:end="501:36"><expr pos:start="501:19" pos:end="501:36"><name pos:start="501:19" pos:end="501:31">header_offset</name> <operator pos:start="501:33" pos:end="501:33">-</operator> <literal type="number" pos:start="501:35" pos:end="501:36">14</literal></expr></argument>, <argument pos:start="501:39" pos:end="501:46"><expr pos:start="501:39" pos:end="501:46"><name pos:start="501:39" pos:end="501:46">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="503:5" pos:end="503:31"><expr pos:start="503:5" pos:end="503:30"><call pos:start="503:5" pos:end="503:30"><name pos:start="503:5" pos:end="503:13">avio_wl64</name><argument_list pos:start="503:14" pos:end="503:30">(<argument pos:start="503:15" pos:end="503:16"><expr pos:start="503:15" pos:end="503:16"><name pos:start="503:15" pos:end="503:16">pb</name></expr></argument>, <argument pos:start="503:19" pos:end="503:29"><expr pos:start="503:19" pos:end="503:29"><name pos:start="503:19" pos:end="503:29">header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="505:5" pos:end="505:37"><expr pos:start="505:5" pos:end="505:36"><call pos:start="505:5" pos:end="505:36"><name pos:start="505:5" pos:end="505:13">avio_seek</name><argument_list pos:start="505:14" pos:end="505:36">(<argument pos:start="505:15" pos:end="505:16"><expr pos:start="505:15" pos:end="505:16"><name pos:start="505:15" pos:end="505:16">pb</name></expr></argument>, <argument pos:start="505:19" pos:end="505:25"><expr pos:start="505:19" pos:end="505:25"><name pos:start="505:19" pos:end="505:25">cur_pos</name></expr></argument>, <argument pos:start="505:28" pos:end="505:35"><expr pos:start="505:28" pos:end="505:35"><name pos:start="505:28" pos:end="505:35">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="509:5" pos:end="509:57">/* movie chunk, followed by packets of packet_size */</comment>

    <expr_stmt pos:start="511:5" pos:end="511:31"><expr pos:start="511:5" pos:end="511:30"><name pos:start="511:5" pos:end="511:20"><name pos:start="511:5" pos:end="511:7">asf</name><operator pos:start="511:8" pos:end="511:9">-&gt;</operator><name pos:start="511:10" pos:end="511:20">data_offset</name></name> <operator pos:start="511:22" pos:end="511:22">=</operator> <name pos:start="511:24" pos:end="511:30">cur_pos</name></expr>;</expr_stmt>

    <expr_stmt pos:start="513:5" pos:end="513:38"><expr pos:start="513:5" pos:end="513:37"><call pos:start="513:5" pos:end="513:37"><name pos:start="513:5" pos:end="513:12">put_guid</name><argument_list pos:start="513:13" pos:end="513:37">(<argument pos:start="513:14" pos:end="513:15"><expr pos:start="513:14" pos:end="513:15"><name pos:start="513:14" pos:end="513:15">pb</name></expr></argument>, <argument pos:start="513:18" pos:end="513:36"><expr pos:start="513:18" pos:end="513:36"><operator pos:start="513:18" pos:end="513:18">&amp;</operator><name pos:start="513:19" pos:end="513:36">ff_asf_data_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="515:5" pos:end="515:35"><expr pos:start="515:5" pos:end="515:34"><call pos:start="515:5" pos:end="515:34"><name pos:start="515:5" pos:end="515:13">avio_wl64</name><argument_list pos:start="515:14" pos:end="515:34">(<argument pos:start="515:15" pos:end="515:16"><expr pos:start="515:15" pos:end="515:16"><name pos:start="515:15" pos:end="515:16">pb</name></expr></argument>, <argument pos:start="515:19" pos:end="515:33"><expr pos:start="515:19" pos:end="515:33"><name pos:start="515:19" pos:end="515:33">data_chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="517:5" pos:end="517:34"><expr pos:start="517:5" pos:end="517:33"><call pos:start="517:5" pos:end="517:33"><name pos:start="517:5" pos:end="517:12">put_guid</name><argument_list pos:start="517:13" pos:end="517:33">(<argument pos:start="517:14" pos:end="517:15"><expr pos:start="517:14" pos:end="517:15"><name pos:start="517:14" pos:end="517:15">pb</name></expr></argument>, <argument pos:start="517:18" pos:end="517:32"><expr pos:start="517:18" pos:end="517:32"><operator pos:start="517:18" pos:end="517:18">&amp;</operator><name pos:start="517:19" pos:end="517:32">ff_asf_my_guid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="519:5" pos:end="519:35"><expr pos:start="519:5" pos:end="519:34"><call pos:start="519:5" pos:end="519:34"><name pos:start="519:5" pos:end="519:13">avio_wl64</name><argument_list pos:start="519:14" pos:end="519:34">(<argument pos:start="519:15" pos:end="519:16"><expr pos:start="519:15" pos:end="519:16"><name pos:start="519:15" pos:end="519:16">pb</name></expr></argument>, <argument pos:start="519:19" pos:end="519:33"><expr pos:start="519:19" pos:end="519:33"><name pos:start="519:19" pos:end="519:33"><name pos:start="519:19" pos:end="519:21">asf</name><operator pos:start="519:22" pos:end="519:23">-&gt;</operator><name pos:start="519:24" pos:end="519:33">nb_packets</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="519:37" pos:end="519:52">/* nb packets */</comment>

    <expr_stmt pos:start="521:5" pos:end="521:19"><expr pos:start="521:5" pos:end="521:18"><call pos:start="521:5" pos:end="521:18"><name pos:start="521:5" pos:end="521:11">avio_w8</name><argument_list pos:start="521:12" pos:end="521:18">(<argument pos:start="521:13" pos:end="521:14"><expr pos:start="521:13" pos:end="521:14"><name pos:start="521:13" pos:end="521:14">pb</name></expr></argument>, <argument pos:start="521:17" pos:end="521:17"><expr pos:start="521:17" pos:end="521:17"><literal type="number" pos:start="521:17" pos:end="521:17">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="521:21" pos:end="521:29">/* ??? */</comment>

    <expr_stmt pos:start="523:5" pos:end="523:19"><expr pos:start="523:5" pos:end="523:18"><call pos:start="523:5" pos:end="523:18"><name pos:start="523:5" pos:end="523:11">avio_w8</name><argument_list pos:start="523:12" pos:end="523:18">(<argument pos:start="523:13" pos:end="523:14"><expr pos:start="523:13" pos:end="523:14"><name pos:start="523:13" pos:end="523:14">pb</name></expr></argument>, <argument pos:start="523:17" pos:end="523:17"><expr pos:start="523:17" pos:end="523:17"><literal type="number" pos:start="523:17" pos:end="523:17">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="523:21" pos:end="523:29">/* ??? */</comment>

    <return pos:start="525:5" pos:end="525:13">return <expr pos:start="525:12" pos:end="525:12"><literal type="number" pos:start="525:12" pos:end="525:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
