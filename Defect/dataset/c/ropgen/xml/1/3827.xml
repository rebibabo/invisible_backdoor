<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3827.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">put_bitmap</name><parameter_list pos:start="1:23" pos:end="1:58">(<parameter pos:start="1:24" pos:end="1:34"><decl pos:start="1:24" pos:end="1:34"><type pos:start="1:24" pos:end="1:34"><name pos:start="1:24" pos:end="1:31">QEMUFile</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">f</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:44"><decl pos:start="1:37" pos:end="1:44"><type pos:start="1:37" pos:end="1:44"><name pos:start="1:37" pos:end="1:40">void</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">pv</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:57"><decl pos:start="1:47" pos:end="1:57"><type pos:start="1:47" pos:end="1:57"><name pos:start="1:47" pos:end="1:52">size_t</name></type> <name pos:start="1:54" pos:end="1:57">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:17">long</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">bmp</name> <init pos:start="5:24" pos:end="5:27">= <expr pos:start="5:26" pos:end="5:27"><name pos:start="5:26" pos:end="5:27">pv</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">idx</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>

    <for pos:start="9:5" pos:end="21:5">for <control pos:start="9:9" pos:end="9:44">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:39"><expr pos:start="9:17" pos:end="9:38"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <call pos:start="9:21" pos:end="9:38"><name pos:start="9:21" pos:end="9:32">BITS_TO_U64S</name><argument_list pos:start="9:33" pos:end="9:38">(<argument pos:start="9:34" pos:end="9:37"><expr pos:start="9:34" pos:end="9:37"><name pos:start="9:34" pos:end="9:37">size</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="9:41" pos:end="9:43"><expr pos:start="9:41" pos:end="9:43"><name pos:start="9:41" pos:end="9:41">i</name><operator pos:start="9:42" pos:end="9:43">++</operator></expr></incr>)</control> <block pos:start="9:46" pos:end="21:5">{<block_content pos:start="11:9" pos:end="19:28">

        <decl_stmt pos:start="11:9" pos:end="11:32"><decl pos:start="11:9" pos:end="11:31"><type pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:16">uint64_t</name></type> <name pos:start="11:18" pos:end="11:18">w</name> <init pos:start="11:20" pos:end="11:31">= <expr pos:start="11:22" pos:end="11:31"><name pos:start="11:22" pos:end="11:31"><name pos:start="11:22" pos:end="11:24">bmp</name><index pos:start="11:25" pos:end="11:31">[<expr pos:start="11:26" pos:end="11:30"><name pos:start="11:26" pos:end="11:28">idx</name><operator pos:start="11:29" pos:end="11:30">++</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="13:9" pos:end="17:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:68">(<expr pos:start="13:13" pos:end="13:67">sizeof<operator pos:start="13:19" pos:end="13:19">(</operator><name pos:start="13:20" pos:end="13:27">unsigned</name> <name pos:start="13:29" pos:end="13:32">long</name><operator pos:start="13:33" pos:end="13:33">)</operator> <operator pos:start="13:35" pos:end="13:36">==</operator> <literal type="number" pos:start="13:38" pos:end="13:38">4</literal> <operator pos:start="13:40" pos:end="13:41">&amp;&amp;</operator> <name pos:start="13:43" pos:end="13:45">idx</name> <operator pos:start="13:47" pos:end="13:47">&lt;</operator> <call pos:start="13:49" pos:end="13:67"><name pos:start="13:49" pos:end="13:61">BITS_TO_LONGS</name><argument_list pos:start="13:62" pos:end="13:67">(<argument pos:start="13:63" pos:end="13:66"><expr pos:start="13:63" pos:end="13:66"><name pos:start="13:63" pos:end="13:66">size</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:70" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:46">

            <expr_stmt pos:start="15:13" pos:end="15:46"><expr pos:start="15:13" pos:end="15:45"><name pos:start="15:13" pos:end="15:13">w</name> <operator pos:start="15:15" pos:end="15:16">|=</operator> <operator pos:start="15:18" pos:end="15:18">(</operator><operator pos:start="15:19" pos:end="15:19">(</operator><name pos:start="15:20" pos:end="15:27">uint64_t</name><operator pos:start="15:28" pos:end="15:28">)</operator><name pos:start="15:29" pos:end="15:38"><name pos:start="15:29" pos:end="15:31">bmp</name><index pos:start="15:32" pos:end="15:38">[<expr pos:start="15:33" pos:end="15:37"><name pos:start="15:33" pos:end="15:35">idx</name><operator pos:start="15:36" pos:end="15:37">++</operator></expr>]</index></name><operator pos:start="15:39" pos:end="15:39">)</operator> <operator pos:start="15:41" pos:end="15:42">&lt;&lt;</operator> <literal type="number" pos:start="15:44" pos:end="15:45">32</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:28"><expr pos:start="19:9" pos:end="19:27"><call pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:21">qemu_put_be64</name><argument_list pos:start="19:22" pos:end="19:27">(<argument pos:start="19:23" pos:end="19:23"><expr pos:start="19:23" pos:end="19:23"><name pos:start="19:23" pos:end="19:23">f</name></expr></argument>, <argument pos:start="19:26" pos:end="19:26"><expr pos:start="19:26" pos:end="19:26"><name pos:start="19:26" pos:end="19:26">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
