<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14455.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">pc_cpu_plug</name><parameter_list pos:start="1:24" pos:end="3:55">(<parameter pos:start="1:25" pos:end="1:51"><decl pos:start="1:25" pos:end="1:51"><type pos:start="1:25" pos:end="1:51"><name pos:start="1:25" pos:end="1:38">HotplugHandler</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:51">hotplug_dev</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:40"><decl pos:start="3:25" pos:end="3:40"><type pos:start="3:25" pos:end="3:40"><name pos:start="3:25" pos:end="3:35">DeviceState</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">dev</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:54"><decl pos:start="3:43" pos:end="3:54"><type pos:start="3:43" pos:end="3:54"><name pos:start="3:43" pos:end="3:47">Error</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier><modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:54">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="55:1">{<block_content pos:start="7:5" pos:end="53:37">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">CPUArchId</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:24">found_cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23">HotplugHandlerClass</name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:28">hhc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:20">local_err</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:51"><decl pos:start="13:5" pos:end="13:50"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">PCMachineState</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:24">pcms</name> <init pos:start="13:26" pos:end="13:50">= <expr pos:start="13:28" pos:end="13:50"><call pos:start="13:28" pos:end="13:50"><name pos:start="13:28" pos:end="13:37">PC_MACHINE</name><argument_list pos:start="13:38" pos:end="13:50">(<argument pos:start="13:39" pos:end="13:49"><expr pos:start="13:39" pos:end="13:49"><name pos:start="13:39" pos:end="13:49">hotplug_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="29:5"><if pos:start="17:5" pos:end="29:5">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:12">pcms</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:22">acpi_dev</name></name></expr>)</condition> <block pos:start="17:25" pos:end="29:5">{<block_content pos:start="19:9" pos:end="27:9">

        <expr_stmt pos:start="19:9" pos:end="19:56"><expr pos:start="19:9" pos:end="19:55"><name pos:start="19:9" pos:end="19:11">hhc</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:55"><name pos:start="19:15" pos:end="19:39">HOTPLUG_HANDLER_GET_CLASS</name><argument_list pos:start="19:40" pos:end="19:55">(<argument pos:start="19:41" pos:end="19:54"><expr pos:start="19:41" pos:end="19:54"><name pos:start="19:41" pos:end="19:54"><name pos:start="19:41" pos:end="19:44">pcms</name><operator pos:start="19:45" pos:end="19:46">-&gt;</operator><name pos:start="19:47" pos:end="19:54">acpi_dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:68"><expr pos:start="21:9" pos:end="21:67"><call pos:start="21:9" pos:end="21:67"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:11">hhc</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:17">plug</name></name><argument_list pos:start="21:18" pos:end="21:67">(<argument pos:start="21:19" pos:end="21:49"><expr pos:start="21:19" pos:end="21:49"><call pos:start="21:19" pos:end="21:49"><name pos:start="21:19" pos:end="21:33">HOTPLUG_HANDLER</name><argument_list pos:start="21:34" pos:end="21:49">(<argument pos:start="21:35" pos:end="21:48"><expr pos:start="21:35" pos:end="21:48"><name pos:start="21:35" pos:end="21:48"><name pos:start="21:35" pos:end="21:38">pcms</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:48">acpi_dev</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:52" pos:end="21:54"><expr pos:start="21:52" pos:end="21:54"><name pos:start="21:52" pos:end="21:54">dev</name></expr></argument>, <argument pos:start="21:57" pos:end="21:66"><expr pos:start="21:57" pos:end="21:66"><operator pos:start="21:57" pos:end="21:57">&amp;</operator><name pos:start="21:58" pos:end="21:66">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:22">(<expr pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:21">local_err</name></expr>)</condition> <block pos:start="23:24" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:21">

            <goto pos:start="25:13" pos:end="25:21">goto <name pos:start="25:18" pos:end="25:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:38">/* increment the number of CPUs */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:22"><expr pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:8">pcms</name><operator pos:start="35:9" pos:end="35:10">-&gt;</operator><name pos:start="35:11" pos:end="35:19">boot_cpus</name></name><operator pos:start="35:20" pos:end="35:21">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:24">(<expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:11">dev</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:23">hotplugged</name></name></expr>)</condition> <block pos:start="37:26" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:73">

        <expr_stmt pos:start="39:9" pos:end="39:55"><expr pos:start="39:9" pos:end="39:54"><call pos:start="39:9" pos:end="39:54"><name pos:start="39:9" pos:end="39:26">rtc_set_cpus_count</name><argument_list pos:start="39:27" pos:end="39:54">(<argument pos:start="39:28" pos:end="39:36"><expr pos:start="39:28" pos:end="39:36"><name pos:start="39:28" pos:end="39:36"><name pos:start="39:28" pos:end="39:31">pcms</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:36">rtc</name></name></expr></argument>, <argument pos:start="39:39" pos:end="39:53"><expr pos:start="39:39" pos:end="39:53"><name pos:start="39:39" pos:end="39:53"><name pos:start="39:39" pos:end="39:42">pcms</name><operator pos:start="39:43" pos:end="39:44">-&gt;</operator><name pos:start="39:45" pos:end="39:53">boot_cpus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:73"><expr pos:start="41:9" pos:end="41:72"><call pos:start="41:9" pos:end="41:72"><name pos:start="41:9" pos:end="41:25">fw_cfg_modify_i16</name><argument_list pos:start="41:26" pos:end="41:72">(<argument pos:start="41:27" pos:end="41:38"><expr pos:start="41:27" pos:end="41:38"><name pos:start="41:27" pos:end="41:38"><name pos:start="41:27" pos:end="41:30">pcms</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:38">fw_cfg</name></name></expr></argument>, <argument pos:start="41:41" pos:end="41:54"><expr pos:start="41:41" pos:end="41:54"><name pos:start="41:41" pos:end="41:54">FW_CFG_NB_CPUS</name></expr></argument>, <argument pos:start="41:57" pos:end="41:71"><expr pos:start="41:57" pos:end="41:71"><name pos:start="41:57" pos:end="41:71"><name pos:start="41:57" pos:end="41:60">pcms</name><operator pos:start="41:61" pos:end="41:62">-&gt;</operator><name pos:start="41:63" pos:end="41:71">boot_cpus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:55"><expr pos:start="47:5" pos:end="47:54"><name pos:start="47:5" pos:end="47:13">found_cpu</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="47:54"><name pos:start="47:17" pos:end="47:32">pc_find_cpu_slot</name><argument_list pos:start="47:33" pos:end="47:54">(<argument pos:start="47:34" pos:end="47:37"><expr pos:start="47:34" pos:end="47:37"><name pos:start="47:34" pos:end="47:37">pcms</name></expr></argument>, <argument pos:start="47:40" pos:end="47:47"><expr pos:start="47:40" pos:end="47:47"><call pos:start="47:40" pos:end="47:47"><name pos:start="47:40" pos:end="47:42">CPU</name><argument_list pos:start="47:43" pos:end="47:47">(<argument pos:start="47:44" pos:end="47:46"><expr pos:start="47:44" pos:end="47:46"><name pos:start="47:44" pos:end="47:46">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:50" pos:end="47:53"><expr pos:start="47:50" pos:end="47:53"><name pos:start="47:50" pos:end="47:53">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:30"><expr pos:start="49:5" pos:end="49:29"><name pos:start="49:5" pos:end="49:18"><name pos:start="49:5" pos:end="49:13">found_cpu</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:18">cpu</name></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <call pos:start="49:22" pos:end="49:29"><name pos:start="49:22" pos:end="49:24">CPU</name><argument_list pos:start="49:25" pos:end="49:29">(<argument pos:start="49:26" pos:end="49:28"><expr pos:start="49:26" pos:end="49:28"><name pos:start="49:26" pos:end="49:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="51:1" pos:end="51:4"><name pos:start="51:1" pos:end="51:3">out</name>:</label>

    <expr_stmt pos:start="53:5" pos:end="53:37"><expr pos:start="53:5" pos:end="53:36"><call pos:start="53:5" pos:end="53:36"><name pos:start="53:5" pos:end="53:19">error_propagate</name><argument_list pos:start="53:20" pos:end="53:36">(<argument pos:start="53:21" pos:end="53:24"><expr pos:start="53:21" pos:end="53:24"><name pos:start="53:21" pos:end="53:24">errp</name></expr></argument>, <argument pos:start="53:27" pos:end="53:35"><expr pos:start="53:27" pos:end="53:35"><name pos:start="53:27" pos:end="53:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
