<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15503.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">ram_save_page</name><parameter_list pos:start="1:25" pos:end="1:78">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:33">RAMState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:37">rs</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:60"><decl pos:start="1:40" pos:end="1:60"><type pos:start="1:40" pos:end="1:60"><name pos:start="1:40" pos:end="1:55">PageSearchStatus</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pss</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:77"><decl pos:start="1:63" pos:end="1:77"><type pos:start="1:63" pos:end="1:77"><name pos:start="1:63" pos:end="1:66">bool</name></type> <name pos:start="1:68" pos:end="1:77">last_stage</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="151:1">{<block_content pos:start="5:5" pos:end="149:17">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">pages</name> <init pos:start="5:15" pos:end="5:18">= <expr pos:start="5:17" pos:end="5:18"><operator pos:start="5:17" pos:end="5:17">-</operator><literal type="number" pos:start="5:18" pos:end="5:18">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:23">bytes_xmit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14">ram_addr_t</name></type> <name pos:start="9:16" pos:end="9:27">current_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">bool</name></type> <name pos:start="15:10" pos:end="15:19">send_async</name> <init pos:start="15:21" pos:end="15:26">= <expr pos:start="15:23" pos:end="15:26"><name pos:start="15:23" pos:end="15:26">true</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">RAMBlock</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:19">block</name> <init pos:start="17:21" pos:end="17:32">= <expr pos:start="17:23" pos:end="17:32"><name pos:start="17:23" pos:end="17:32"><name pos:start="17:23" pos:end="17:25">pss</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:32">block</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:54"><decl pos:start="19:5" pos:end="19:53"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:14">ram_addr_t</name></type> <name pos:start="19:16" pos:end="19:21">offset</name> <init pos:start="19:23" pos:end="19:53">= <expr pos:start="19:25" pos:end="19:53"><name pos:start="19:25" pos:end="19:33"><name pos:start="19:25" pos:end="19:27">pss</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:33">page</name></name> <operator pos:start="19:35" pos:end="19:36">&lt;&lt;</operator> <name pos:start="19:38" pos:end="19:53">TARGET_PAGE_BITS</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:5">p</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:13">block</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:19">host</name></name> <operator pos:start="23:21" pos:end="23:21">+</operator> <name pos:start="23:23" pos:end="23:28">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:59"><expr pos:start="25:5" pos:end="25:58"><call pos:start="25:5" pos:end="25:58"><name pos:start="25:5" pos:end="25:23">trace_ram_save_page</name><argument_list pos:start="25:24" pos:end="25:58">(<argument pos:start="25:25" pos:end="25:36"><expr pos:start="25:25" pos:end="25:36"><name pos:start="25:25" pos:end="25:36"><name pos:start="25:25" pos:end="25:29">block</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:36">idstr</name></name></expr></argument>, <argument pos:start="25:39" pos:end="25:54"><expr pos:start="25:39" pos:end="25:54"><operator pos:start="25:39" pos:end="25:39">(</operator><name pos:start="25:40" pos:end="25:47">uint64_t</name><operator pos:start="25:48" pos:end="25:48">)</operator><name pos:start="25:49" pos:end="25:54">offset</name></expr></argument>, <argument pos:start="25:57" pos:end="25:57"><expr pos:start="25:57" pos:end="25:57"><name pos:start="25:57" pos:end="25:57">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:38">/* In doubt sent page as normal */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:19"><expr pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:14">bytes_xmit</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="35:66"><expr pos:start="33:5" pos:end="35:65"><name pos:start="33:5" pos:end="33:7">ret</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="35:65"><name pos:start="33:11" pos:end="33:31">ram_control_save_page</name><argument_list pos:start="33:32" pos:end="35:65">(<argument pos:start="33:33" pos:end="33:37"><expr pos:start="33:33" pos:end="33:37"><name pos:start="33:33" pos:end="33:37"><name pos:start="33:33" pos:end="33:34">rs</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:37">f</name></name></expr></argument>, <argument pos:start="33:40" pos:end="33:52"><expr pos:start="33:40" pos:end="33:52"><name pos:start="33:40" pos:end="33:52"><name pos:start="33:40" pos:end="33:44">block</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:52">offset</name></name></expr></argument>,

                           <argument pos:start="35:28" pos:end="35:33"><expr pos:start="35:28" pos:end="35:33"><name pos:start="35:28" pos:end="35:33">offset</name></expr></argument>, <argument pos:start="35:36" pos:end="35:51"><expr pos:start="35:36" pos:end="35:51"><name pos:start="35:36" pos:end="35:51">TARGET_PAGE_SIZE</name></expr></argument>, <argument pos:start="35:54" pos:end="35:64"><expr pos:start="35:54" pos:end="35:64"><operator pos:start="35:54" pos:end="35:54">&amp;</operator><name pos:start="35:55" pos:end="35:64">bytes_xmit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:19">(<expr pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:18">bytes_xmit</name></expr>)</condition> <block pos:start="37:21" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:18">

        <expr_stmt pos:start="39:9" pos:end="39:44"><expr pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:10">rs</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:29">bytes_transferred</name></name> <operator pos:start="39:31" pos:end="39:32">+=</operator> <name pos:start="39:34" pos:end="39:43">bytes_xmit</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:18"><expr pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:13">pages</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:24"><expr pos:start="47:5" pos:end="47:23"><call pos:start="47:5" pos:end="47:23"><name pos:start="47:5" pos:end="47:21">XBZRLE_cache_lock</name><argument_list pos:start="47:22" pos:end="47:23">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:42"><expr pos:start="51:5" pos:end="51:41"><name pos:start="51:5" pos:end="51:16">current_addr</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <name pos:start="51:20" pos:end="51:32"><name pos:start="51:20" pos:end="51:24">block</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:32">offset</name></name> <operator pos:start="51:34" pos:end="51:34">+</operator> <name pos:start="51:36" pos:end="51:41">offset</name></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="109:5"><if pos:start="55:5" pos:end="71:5">if <condition pos:start="55:8" pos:end="55:41">(<expr pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:11">ret</name> <operator pos:start="55:13" pos:end="55:14">!=</operator> <name pos:start="55:16" pos:end="55:40">RAM_SAVE_CONTROL_NOT_SUPP</name></expr>)</condition> <block pos:start="55:43" pos:end="71:5">{<block_content pos:start="57:9" pos:end="69:9">

        <if_stmt pos:start="57:9" pos:end="69:9"><if pos:start="57:9" pos:end="69:9">if <condition pos:start="57:12" pos:end="57:44">(<expr pos:start="57:13" pos:end="57:43"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:18">!=</operator> <name pos:start="57:20" pos:end="57:43">RAM_SAVE_CONTROL_DELAYED</name></expr>)</condition> <block pos:start="57:46" pos:end="69:9">{<block_content pos:start="59:13" pos:end="67:13">

            <if_stmt pos:start="59:13" pos:end="67:13"><if pos:start="59:13" pos:end="63:13">if <condition pos:start="59:16" pos:end="59:31">(<expr pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:26">bytes_xmit</name> <operator pos:start="59:28" pos:end="59:28">&gt;</operator> <literal type="number" pos:start="59:30" pos:end="59:30">0</literal></expr>)</condition> <block pos:start="59:33" pos:end="63:13">{<block_content pos:start="61:17" pos:end="61:33">

                <expr_stmt pos:start="61:17" pos:end="61:33"><expr pos:start="61:17" pos:end="61:32"><name pos:start="61:17" pos:end="61:30"><name pos:start="61:17" pos:end="61:18">rs</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:30">norm_pages</name></name><operator pos:start="61:31" pos:end="61:32">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="63:15" pos:end="67:13">else if <condition pos:start="63:23" pos:end="63:39">(<expr pos:start="63:24" pos:end="63:38"><name pos:start="63:24" pos:end="63:33">bytes_xmit</name> <operator pos:start="63:35" pos:end="63:36">==</operator> <literal type="number" pos:start="63:38" pos:end="63:38">0</literal></expr>)</condition> <block pos:start="63:41" pos:end="67:13">{<block_content pos:start="65:17" pos:end="65:33">

                <expr_stmt pos:start="65:17" pos:end="65:33"><expr pos:start="65:17" pos:end="65:32"><name pos:start="65:17" pos:end="65:30"><name pos:start="65:17" pos:end="65:18">rs</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:30">zero_pages</name></name><operator pos:start="65:31" pos:end="65:32">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="109:5">else <block pos:start="71:12" pos:end="109:5">{<block_content pos:start="73:9" pos:end="107:9">

        <expr_stmt pos:start="73:9" pos:end="73:53"><expr pos:start="73:9" pos:end="73:52"><name pos:start="73:9" pos:end="73:13">pages</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <call pos:start="73:17" pos:end="73:52"><name pos:start="73:17" pos:end="73:30">save_zero_page</name><argument_list pos:start="73:31" pos:end="73:52">(<argument pos:start="73:32" pos:end="73:33"><expr pos:start="73:32" pos:end="73:33"><name pos:start="73:32" pos:end="73:33">rs</name></expr></argument>, <argument pos:start="73:36" pos:end="73:40"><expr pos:start="73:36" pos:end="73:40"><name pos:start="73:36" pos:end="73:40">block</name></expr></argument>, <argument pos:start="73:43" pos:end="73:48"><expr pos:start="73:43" pos:end="73:48"><name pos:start="73:43" pos:end="73:48">offset</name></expr></argument>, <argument pos:start="73:51" pos:end="73:51"><expr pos:start="73:51" pos:end="73:51"><name pos:start="73:51" pos:end="73:51">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="107:9"><if pos:start="75:9" pos:end="87:9">if <condition pos:start="75:12" pos:end="75:22">(<expr pos:start="75:13" pos:end="75:21"><name pos:start="75:13" pos:end="75:17">pages</name> <operator pos:start="75:19" pos:end="75:19">&gt;</operator> <literal type="number" pos:start="75:21" pos:end="75:21">0</literal></expr>)</condition> <block pos:start="75:24" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:59">

            <comment type="block" pos:start="77:13" pos:end="81:15">/* Must let xbzrle know, otherwise a previous (now 0'd) cached

             * page would be stale

             */</comment>

            <expr_stmt pos:start="83:13" pos:end="83:53"><expr pos:start="83:13" pos:end="83:52"><call pos:start="83:13" pos:end="83:52"><name pos:start="83:13" pos:end="83:34">xbzrle_cache_zero_page</name><argument_list pos:start="83:35" pos:end="83:52">(<argument pos:start="83:36" pos:end="83:37"><expr pos:start="83:36" pos:end="83:37"><name pos:start="83:36" pos:end="83:37">rs</name></expr></argument>, <argument pos:start="83:40" pos:end="83:51"><expr pos:start="83:40" pos:end="83:51"><name pos:start="83:40" pos:end="83:51">current_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:59"><expr pos:start="85:13" pos:end="85:58"><call pos:start="85:13" pos:end="85:58"><name pos:start="85:13" pos:end="85:29">ram_release_pages</name><argument_list pos:start="85:30" pos:end="85:58">(<argument pos:start="85:31" pos:end="85:42"><expr pos:start="85:31" pos:end="85:42"><name pos:start="85:31" pos:end="85:42"><name pos:start="85:31" pos:end="85:35">block</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:42">idstr</name></name></expr></argument>, <argument pos:start="85:45" pos:end="85:50"><expr pos:start="85:45" pos:end="85:50"><name pos:start="85:45" pos:end="85:50">offset</name></expr></argument>, <argument pos:start="85:53" pos:end="85:57"><expr pos:start="85:53" pos:end="85:57"><name pos:start="85:53" pos:end="85:57">pages</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="87:11" pos:end="107:9">else if <condition pos:start="87:19" pos:end="89:68">(<expr pos:start="87:20" pos:end="89:67"><operator pos:start="87:20" pos:end="87:20">!</operator><name pos:start="87:21" pos:end="87:38"><name pos:start="87:21" pos:end="87:22">rs</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:38">ram_bulk_stage</name></name> <operator pos:start="87:40" pos:end="87:41">&amp;&amp;</operator>

                   <operator pos:start="89:20" pos:end="89:20">!</operator><call pos:start="89:21" pos:end="89:43"><name pos:start="89:21" pos:end="89:41">migration_in_postcopy</name><argument_list pos:start="89:42" pos:end="89:43">()</argument_list></call> <operator pos:start="89:45" pos:end="89:46">&amp;&amp;</operator> <call pos:start="89:48" pos:end="89:67"><name pos:start="89:48" pos:end="89:65">migrate_use_xbzrle</name><argument_list pos:start="89:66" pos:end="89:67">()</argument_list></call></expr>)</condition> <block pos:start="89:70" pos:end="107:9">{<block_content pos:start="91:13" pos:end="105:13">

            <expr_stmt pos:start="91:13" pos:end="93:57"><expr pos:start="91:13" pos:end="93:56"><name pos:start="91:13" pos:end="91:17">pages</name> <operator pos:start="91:19" pos:end="91:19">=</operator> <call pos:start="91:21" pos:end="93:56"><name pos:start="91:21" pos:end="91:36">save_xbzrle_page</name><argument_list pos:start="91:37" pos:end="93:56">(<argument pos:start="91:38" pos:end="91:39"><expr pos:start="91:38" pos:end="91:39"><name pos:start="91:38" pos:end="91:39">rs</name></expr></argument>, <argument pos:start="91:42" pos:end="91:43"><expr pos:start="91:42" pos:end="91:43"><operator pos:start="91:42" pos:end="91:42">&amp;</operator><name pos:start="91:43" pos:end="91:43">p</name></expr></argument>, <argument pos:start="91:46" pos:end="91:57"><expr pos:start="91:46" pos:end="91:57"><name pos:start="91:46" pos:end="91:57">current_addr</name></expr></argument>, <argument pos:start="91:60" pos:end="91:64"><expr pos:start="91:60" pos:end="91:64"><name pos:start="91:60" pos:end="91:64">block</name></expr></argument>,

                                     <argument pos:start="93:38" pos:end="93:43"><expr pos:start="93:38" pos:end="93:43"><name pos:start="93:38" pos:end="93:43">offset</name></expr></argument>, <argument pos:start="93:46" pos:end="93:55"><expr pos:start="93:46" pos:end="93:55"><name pos:start="93:46" pos:end="93:55">last_stage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="105:13"><if pos:start="95:13" pos:end="105:13">if <condition pos:start="95:16" pos:end="95:28">(<expr pos:start="95:17" pos:end="95:27"><operator pos:start="95:17" pos:end="95:17">!</operator><name pos:start="95:18" pos:end="95:27">last_stage</name></expr>)</condition> <block pos:start="95:30" pos:end="105:13">{<block_content pos:start="103:17" pos:end="103:35">

                <comment type="block" pos:start="97:17" pos:end="101:19">/* Can't send this cached data async, since the cache page

                 * might get updated before it gets to the wire

                 */</comment>

                <expr_stmt pos:start="103:17" pos:end="103:35"><expr pos:start="103:17" pos:end="103:34"><name pos:start="103:17" pos:end="103:26">send_async</name> <operator pos:start="103:28" pos:end="103:28">=</operator> <name pos:start="103:30" pos:end="103:34">false</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="113:5" pos:end="113:40">/* XBZRLE overflow or normal page */</comment>

    <if_stmt pos:start="115:5" pos:end="141:5"><if pos:start="115:5" pos:end="141:5">if <condition pos:start="115:8" pos:end="115:20">(<expr pos:start="115:9" pos:end="115:19"><name pos:start="115:9" pos:end="115:13">pages</name> <operator pos:start="115:15" pos:end="115:16">==</operator> <operator pos:start="115:18" pos:end="115:18">-</operator><literal type="number" pos:start="115:19" pos:end="115:19">1</literal></expr>)</condition> <block pos:start="115:22" pos:end="141:5">{<block_content pos:start="117:9" pos:end="139:25">

        <expr_stmt pos:start="117:9" pos:end="119:79"><expr pos:start="117:9" pos:end="119:78"><name pos:start="117:9" pos:end="117:29"><name pos:start="117:9" pos:end="117:10">rs</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:29">bytes_transferred</name></name> <operator pos:start="117:31" pos:end="117:32">+=</operator> <call pos:start="117:34" pos:end="119:78"><name pos:start="117:34" pos:end="117:49">save_page_header</name><argument_list pos:start="117:50" pos:end="119:78">(<argument pos:start="117:51" pos:end="117:52"><expr pos:start="117:51" pos:end="117:52"><name pos:start="117:51" pos:end="117:52">rs</name></expr></argument>, <argument pos:start="117:55" pos:end="117:59"><expr pos:start="117:55" pos:end="117:59"><name pos:start="117:55" pos:end="117:59">block</name></expr></argument>,

                                                  <argument pos:start="119:51" pos:end="119:77"><expr pos:start="119:51" pos:end="119:77"><name pos:start="119:51" pos:end="119:56">offset</name> <operator pos:start="119:58" pos:end="119:58">|</operator> <name pos:start="119:60" pos:end="119:77">RAM_SAVE_FLAG_PAGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="133:9"><if pos:start="121:9" pos:end="129:9">if <condition pos:start="121:12" pos:end="121:23">(<expr pos:start="121:13" pos:end="121:22"><name pos:start="121:13" pos:end="121:22">send_async</name></expr>)</condition> <block pos:start="121:25" pos:end="129:9">{<block_content pos:start="123:13" pos:end="127:59">

            <expr_stmt pos:start="123:13" pos:end="127:59"><expr pos:start="123:13" pos:end="127:58"><call pos:start="123:13" pos:end="127:58"><name pos:start="123:13" pos:end="123:33">qemu_put_buffer_async</name><argument_list pos:start="123:34" pos:end="127:58">(<argument pos:start="123:35" pos:end="123:39"><expr pos:start="123:35" pos:end="123:39"><name pos:start="123:35" pos:end="123:39"><name pos:start="123:35" pos:end="123:36">rs</name><operator pos:start="123:37" pos:end="123:38">-&gt;</operator><name pos:start="123:39" pos:end="123:39">f</name></name></expr></argument>, <argument pos:start="123:42" pos:end="123:42"><expr pos:start="123:42" pos:end="123:42"><name pos:start="123:42" pos:end="123:42">p</name></expr></argument>, <argument pos:start="123:45" pos:end="123:60"><expr pos:start="123:45" pos:end="123:60"><name pos:start="123:45" pos:end="123:60">TARGET_PAGE_SIZE</name></expr></argument>,

                                  <argument pos:start="125:35" pos:end="127:57"><expr pos:start="125:35" pos:end="127:57"><call pos:start="125:35" pos:end="125:55"><name pos:start="125:35" pos:end="125:53">migrate_release_ram</name><argument_list pos:start="125:54" pos:end="125:55">()</argument_list></call> <operator pos:start="125:57" pos:end="125:57">&amp;</operator>

                                  <call pos:start="127:35" pos:end="127:57"><name pos:start="127:35" pos:end="127:55">migration_in_postcopy</name><argument_list pos:start="127:56" pos:end="127:57">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="129:11" pos:end="133:9">else <block pos:start="129:16" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:56">

            <expr_stmt pos:start="131:13" pos:end="131:56"><expr pos:start="131:13" pos:end="131:55"><call pos:start="131:13" pos:end="131:55"><name pos:start="131:13" pos:end="131:27">qemu_put_buffer</name><argument_list pos:start="131:28" pos:end="131:55">(<argument pos:start="131:29" pos:end="131:33"><expr pos:start="131:29" pos:end="131:33"><name pos:start="131:29" pos:end="131:33"><name pos:start="131:29" pos:end="131:30">rs</name><operator pos:start="131:31" pos:end="131:32">-&gt;</operator><name pos:start="131:33" pos:end="131:33">f</name></name></expr></argument>, <argument pos:start="131:36" pos:end="131:36"><expr pos:start="131:36" pos:end="131:36"><name pos:start="131:36" pos:end="131:36">p</name></expr></argument>, <argument pos:start="131:39" pos:end="131:54"><expr pos:start="131:39" pos:end="131:54"><name pos:start="131:39" pos:end="131:54">TARGET_PAGE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:50"><expr pos:start="135:9" pos:end="135:49"><name pos:start="135:9" pos:end="135:29"><name pos:start="135:9" pos:end="135:10">rs</name><operator pos:start="135:11" pos:end="135:12">-&gt;</operator><name pos:start="135:13" pos:end="135:29">bytes_transferred</name></name> <operator pos:start="135:31" pos:end="135:32">+=</operator> <name pos:start="135:34" pos:end="135:49">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:18"><expr pos:start="137:9" pos:end="137:17"><name pos:start="137:9" pos:end="137:13">pages</name> <operator pos:start="137:15" pos:end="137:15">=</operator> <literal type="number" pos:start="137:17" pos:end="137:17">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:25"><expr pos:start="139:9" pos:end="139:24"><name pos:start="139:9" pos:end="139:22"><name pos:start="139:9" pos:end="139:10">rs</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:22">norm_pages</name></name><operator pos:start="139:23" pos:end="139:24">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:26"><expr pos:start="145:5" pos:end="145:25"><call pos:start="145:5" pos:end="145:25"><name pos:start="145:5" pos:end="145:23">XBZRLE_cache_unlock</name><argument_list pos:start="145:24" pos:end="145:25">()</argument_list></call></expr>;</expr_stmt>



    <return pos:start="149:5" pos:end="149:17">return <expr pos:start="149:12" pos:end="149:16"><name pos:start="149:12" pos:end="149:16">pages</name></expr>;</return>

</block_content>}</block></function>
</unit>
