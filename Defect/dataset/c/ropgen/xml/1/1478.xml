<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1478.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">decoder_decode_frame</name><parameter_list pos:start="1:32" pos:end="1:57">(<parameter pos:start="1:33" pos:end="1:42"><decl pos:start="1:33" pos:end="1:42"><type pos:start="1:33" pos:end="1:42"><name pos:start="1:33" pos:end="1:39">Decoder</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">d</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:48">void</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:56">fframe</name></decl></parameter>)</parameter_list> <block pos:start="1:59" pos:end="177:1">{<block_content pos:start="3:5" pos:end="175:21">

    <decl_stmt pos:start="3:5" pos:end="3:22"><decl pos:start="3:5" pos:end="3:21"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:17">got_frame</name> <init pos:start="3:19" pos:end="3:21">= <expr pos:start="3:21" pos:end="3:21"><literal type="number" pos:start="3:21" pos:end="3:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">AVFrame</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:18">frame</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">fframe</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:19"><expr pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:5">d</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:14">flushed</name></name> <operator pos:start="9:16" pos:end="9:16">=</operator> <literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr>;</expr_stmt>



    <do pos:start="13:5" pos:end="171:41">do <block pos:start="13:8" pos:end="171:5">{<block_content pos:start="15:9" pos:end="169:9">

        <decl_stmt pos:start="15:9" pos:end="15:21"><decl pos:start="15:9" pos:end="15:20"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:15">ret</name> <init pos:start="15:17" pos:end="15:20">= <expr pos:start="15:19" pos:end="15:20"><operator pos:start="15:19" pos:end="15:19">-</operator><literal type="number" pos:start="15:20" pos:end="15:20">1</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="19:9" pos:end="21:22"><if pos:start="19:9" pos:end="21:22">if <condition pos:start="19:12" pos:end="19:36">(<expr pos:start="19:13" pos:end="19:35"><name pos:start="19:13" pos:end="19:35"><name pos:start="19:13" pos:end="19:13">d</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:20">queue</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:35">abort_request</name></name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:22"><block_content pos:start="21:13" pos:end="21:22">

            <return pos:start="21:13" pos:end="21:22">return <expr pos:start="21:20" pos:end="21:21"><operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="25:9" pos:end="61:9"><if pos:start="25:9" pos:end="61:9">if <condition pos:start="25:12" pos:end="25:68">(<expr pos:start="25:13" pos:end="25:67"><operator pos:start="25:13" pos:end="25:13">!</operator><name pos:start="25:14" pos:end="25:30"><name pos:start="25:14" pos:end="25:14">d</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:30">packet_pending</name></name> <operator pos:start="25:32" pos:end="25:33">||</operator> <name pos:start="25:35" pos:end="25:50"><name pos:start="25:35" pos:end="25:35">d</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:42">queue</name><operator pos:start="25:43" pos:end="25:44">-&gt;</operator><name pos:start="25:45" pos:end="25:50">serial</name></name> <operator pos:start="25:52" pos:end="25:53">!=</operator> <name pos:start="25:55" pos:end="25:67"><name pos:start="25:55" pos:end="25:55">d</name><operator pos:start="25:56" pos:end="25:57">-&gt;</operator><name pos:start="25:58" pos:end="25:67">pkt_serial</name></name></expr>)</condition> <block pos:start="25:70" pos:end="61:9">{<block_content pos:start="27:13" pos:end="59:34">

            <decl_stmt pos:start="27:13" pos:end="27:25"><decl pos:start="27:13" pos:end="27:24"><type pos:start="27:13" pos:end="27:20"><name pos:start="27:13" pos:end="27:20">AVPacket</name></type> <name pos:start="27:22" pos:end="27:24">pkt</name></decl>;</decl_stmt>

            <do pos:start="29:13" pos:end="53:86">do <block pos:start="29:16" pos:end="53:13">{<block_content pos:start="31:17" pos:end="51:17">

                <if_stmt pos:start="31:17" pos:end="33:56"><if pos:start="31:17" pos:end="33:56">if <condition pos:start="31:20" pos:end="31:46">(<expr pos:start="31:21" pos:end="31:45"><name pos:start="31:21" pos:end="31:40"><name pos:start="31:21" pos:end="31:21">d</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:28">queue</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:40">nb_packets</name></name> <operator pos:start="31:42" pos:end="31:43">==</operator> <literal type="number" pos:start="31:45" pos:end="31:45">0</literal></expr>)</condition><block type="pseudo" pos:start="33:21" pos:end="33:56"><block_content pos:start="33:21" pos:end="33:56">

                    <expr_stmt pos:start="33:21" pos:end="33:56"><expr pos:start="33:21" pos:end="33:55"><call pos:start="33:21" pos:end="33:55"><name pos:start="33:21" pos:end="33:34">SDL_CondSignal</name><argument_list pos:start="33:35" pos:end="33:55">(<argument pos:start="33:36" pos:end="33:54"><expr pos:start="33:36" pos:end="33:54"><name pos:start="33:36" pos:end="33:54"><name pos:start="33:36" pos:end="33:36">d</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:54">empty_queue_cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="35:17" pos:end="37:30"><if pos:start="35:17" pos:end="37:30">if <condition pos:start="35:20" pos:end="35:76">(<expr pos:start="35:21" pos:end="35:75"><call pos:start="35:21" pos:end="35:71"><name pos:start="35:21" pos:end="35:36">packet_queue_get</name><argument_list pos:start="35:37" pos:end="35:71">(<argument pos:start="35:38" pos:end="35:45"><expr pos:start="35:38" pos:end="35:45"><name pos:start="35:38" pos:end="35:45"><name pos:start="35:38" pos:end="35:38">d</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:45">queue</name></name></expr></argument>, <argument pos:start="35:48" pos:end="35:51"><expr pos:start="35:48" pos:end="35:51"><operator pos:start="35:48" pos:end="35:48">&amp;</operator><name pos:start="35:49" pos:end="35:51">pkt</name></expr></argument>, <argument pos:start="35:54" pos:end="35:54"><expr pos:start="35:54" pos:end="35:54"><literal type="number" pos:start="35:54" pos:end="35:54">1</literal></expr></argument>, <argument pos:start="35:57" pos:end="35:70"><expr pos:start="35:57" pos:end="35:70"><operator pos:start="35:57" pos:end="35:57">&amp;</operator><name pos:start="35:58" pos:end="35:70"><name pos:start="35:58" pos:end="35:58">d</name><operator pos:start="35:59" pos:end="35:60">-&gt;</operator><name pos:start="35:61" pos:end="35:70">pkt_serial</name></name></expr></argument>)</argument_list></call> <operator pos:start="35:73" pos:end="35:73">&lt;</operator> <literal type="number" pos:start="35:75" pos:end="35:75">0</literal></expr>)</condition><block type="pseudo" pos:start="37:21" pos:end="37:30"><block_content pos:start="37:21" pos:end="37:30">

                    <return pos:start="37:21" pos:end="37:30">return <expr pos:start="37:28" pos:end="37:29"><operator pos:start="37:28" pos:end="37:28">-</operator><literal type="number" pos:start="37:29" pos:end="37:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <if_stmt pos:start="39:17" pos:end="51:17"><if pos:start="39:17" pos:end="51:17">if <condition pos:start="39:20" pos:end="39:47">(<expr pos:start="39:21" pos:end="39:46"><name pos:start="39:21" pos:end="39:28"><name pos:start="39:21" pos:end="39:23">pkt</name><operator pos:start="39:24" pos:end="39:24">.</operator><name pos:start="39:25" pos:end="39:28">data</name></name> <operator pos:start="39:30" pos:end="39:31">==</operator> <name pos:start="39:33" pos:end="39:46"><name pos:start="39:33" pos:end="39:41">flush_pkt</name><operator pos:start="39:42" pos:end="39:42">.</operator><name pos:start="39:43" pos:end="39:46">data</name></name></expr>)</condition> <block pos:start="39:49" pos:end="51:17">{<block_content pos:start="41:21" pos:end="49:53">

                    <expr_stmt pos:start="41:21" pos:end="41:52"><expr pos:start="41:21" pos:end="41:51"><call pos:start="41:21" pos:end="41:51"><name pos:start="41:21" pos:end="41:41">avcodec_flush_buffers</name><argument_list pos:start="41:42" pos:end="41:51">(<argument pos:start="41:43" pos:end="41:50"><expr pos:start="41:43" pos:end="41:50"><name pos:start="41:43" pos:end="41:50"><name pos:start="41:43" pos:end="41:43">d</name><operator pos:start="41:44" pos:end="41:45">-&gt;</operator><name pos:start="41:46" pos:end="41:50">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="43:21" pos:end="43:36"><expr pos:start="43:21" pos:end="43:35"><name pos:start="43:21" pos:end="43:31"><name pos:start="43:21" pos:end="43:21">d</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:31">finished</name></name> <operator pos:start="43:33" pos:end="43:33">=</operator> <literal type="number" pos:start="43:35" pos:end="43:35">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="45:21" pos:end="45:35"><expr pos:start="45:21" pos:end="45:34"><name pos:start="45:21" pos:end="45:30"><name pos:start="45:21" pos:end="45:21">d</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:30">flushed</name></name> <operator pos:start="45:32" pos:end="45:32">=</operator> <literal type="number" pos:start="45:34" pos:end="45:34">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="47:21" pos:end="47:47"><expr pos:start="47:21" pos:end="47:46"><name pos:start="47:21" pos:end="47:31"><name pos:start="47:21" pos:end="47:21">d</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:31">next_pts</name></name> <operator pos:start="47:33" pos:end="47:33">=</operator> <name pos:start="47:35" pos:end="47:46"><name pos:start="47:35" pos:end="47:35">d</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:46">start_pts</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="49:21" pos:end="49:53"><expr pos:start="49:21" pos:end="49:52"><name pos:start="49:21" pos:end="49:34"><name pos:start="49:21" pos:end="49:21">d</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:34">next_pts_tb</name></name> <operator pos:start="49:36" pos:end="49:36">=</operator> <name pos:start="49:38" pos:end="49:52"><name pos:start="49:38" pos:end="49:38">d</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:52">start_pts_tb</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block> while <condition pos:start="53:21" pos:end="53:85">(<expr pos:start="53:22" pos:end="53:84"><name pos:start="53:22" pos:end="53:29"><name pos:start="53:22" pos:end="53:24">pkt</name><operator pos:start="53:25" pos:end="53:25">.</operator><name pos:start="53:26" pos:end="53:29">data</name></name> <operator pos:start="53:31" pos:end="53:32">==</operator> <name pos:start="53:34" pos:end="53:47"><name pos:start="53:34" pos:end="53:42">flush_pkt</name><operator pos:start="53:43" pos:end="53:43">.</operator><name pos:start="53:44" pos:end="53:47">data</name></name> <operator pos:start="53:49" pos:end="53:50">||</operator> <name pos:start="53:52" pos:end="53:67"><name pos:start="53:52" pos:end="53:52">d</name><operator pos:start="53:53" pos:end="53:54">-&gt;</operator><name pos:start="53:55" pos:end="53:59">queue</name><operator pos:start="53:60" pos:end="53:61">-&gt;</operator><name pos:start="53:62" pos:end="53:67">serial</name></name> <operator pos:start="53:69" pos:end="53:70">!=</operator> <name pos:start="53:72" pos:end="53:84"><name pos:start="53:72" pos:end="53:72">d</name><operator pos:start="53:73" pos:end="53:74">-&gt;</operator><name pos:start="53:75" pos:end="53:84">pkt_serial</name></name></expr>)</condition>;</do>

            <expr_stmt pos:start="55:13" pos:end="55:36"><expr pos:start="55:13" pos:end="55:35"><call pos:start="55:13" pos:end="55:35"><name pos:start="55:13" pos:end="55:26">av_free_packet</name><argument_list pos:start="55:27" pos:end="55:35">(<argument pos:start="55:28" pos:end="55:34"><expr pos:start="55:28" pos:end="55:34"><operator pos:start="55:28" pos:end="55:28">&amp;</operator><name pos:start="55:29" pos:end="55:34"><name pos:start="55:29" pos:end="55:29">d</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:34">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:39"><expr pos:start="57:13" pos:end="57:38"><name pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:13">d</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:23">pkt_temp</name></name> <operator pos:start="57:25" pos:end="57:25">=</operator> <name pos:start="57:27" pos:end="57:32"><name pos:start="57:27" pos:end="57:27">d</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:32">pkt</name></name> <operator pos:start="57:34" pos:end="57:34">=</operator> <name pos:start="57:36" pos:end="57:38">pkt</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:34"><expr pos:start="59:13" pos:end="59:33"><name pos:start="59:13" pos:end="59:29"><name pos:start="59:13" pos:end="59:13">d</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:29">packet_pending</name></name> <operator pos:start="59:31" pos:end="59:31">=</operator> <literal type="number" pos:start="59:33" pos:end="59:33">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="65:9" pos:end="129:9">switch <condition pos:start="65:16" pos:end="65:37">(<expr pos:start="65:17" pos:end="65:36"><name pos:start="65:17" pos:end="65:36"><name pos:start="65:17" pos:end="65:17">d</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:24">avctx</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:36">codec_type</name></name></expr>)</condition> <block pos:start="65:39" pos:end="129:9">{<block_content pos:start="67:13" pos:end="127:22">

            <case pos:start="67:13" pos:end="67:36">case <expr pos:start="67:18" pos:end="67:35"><name pos:start="67:18" pos:end="67:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <expr_stmt pos:start="69:17" pos:end="69:87"><expr pos:start="69:17" pos:end="69:86"><name pos:start="69:17" pos:end="69:19">ret</name> <operator pos:start="69:21" pos:end="69:21">=</operator> <call pos:start="69:23" pos:end="69:86"><name pos:start="69:23" pos:end="69:43">avcodec_decode_video2</name><argument_list pos:start="69:44" pos:end="69:86">(<argument pos:start="69:45" pos:end="69:52"><expr pos:start="69:45" pos:end="69:52"><name pos:start="69:45" pos:end="69:52"><name pos:start="69:45" pos:end="69:45">d</name><operator pos:start="69:46" pos:end="69:47">-&gt;</operator><name pos:start="69:48" pos:end="69:52">avctx</name></name></expr></argument>, <argument pos:start="69:55" pos:end="69:59"><expr pos:start="69:55" pos:end="69:59"><name pos:start="69:55" pos:end="69:59">frame</name></expr></argument>, <argument pos:start="69:62" pos:end="69:71"><expr pos:start="69:62" pos:end="69:71"><operator pos:start="69:62" pos:end="69:62">&amp;</operator><name pos:start="69:63" pos:end="69:71">got_frame</name></expr></argument>, <argument pos:start="69:74" pos:end="69:85"><expr pos:start="69:74" pos:end="69:85"><operator pos:start="69:74" pos:end="69:74">&amp;</operator><name pos:start="69:75" pos:end="69:85"><name pos:start="69:75" pos:end="69:75">d</name><operator pos:start="69:76" pos:end="69:77">-&gt;</operator><name pos:start="69:78" pos:end="69:85">pkt_temp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="71:17" pos:end="87:17"><if pos:start="71:17" pos:end="87:17">if <condition pos:start="71:20" pos:end="71:30">(<expr pos:start="71:21" pos:end="71:29"><name pos:start="71:21" pos:end="71:29">got_frame</name></expr>)</condition> <block pos:start="71:32" pos:end="87:17">{<block_content pos:start="73:21" pos:end="85:21">

                    <if_stmt pos:start="73:21" pos:end="85:21"><if pos:start="73:21" pos:end="77:21">if <condition pos:start="73:24" pos:end="73:50">(<expr pos:start="73:25" pos:end="73:49"><name pos:start="73:25" pos:end="73:43">decoder_reorder_pts</name> <operator pos:start="73:45" pos:end="73:46">==</operator> <operator pos:start="73:48" pos:end="73:48">-</operator><literal type="number" pos:start="73:49" pos:end="73:49">1</literal></expr>)</condition> <block pos:start="73:52" pos:end="77:21">{<block_content pos:start="75:25" pos:end="75:79">

                        <expr_stmt pos:start="75:25" pos:end="75:79"><expr pos:start="75:25" pos:end="75:78"><name pos:start="75:25" pos:end="75:34"><name pos:start="75:25" pos:end="75:29">frame</name><operator pos:start="75:30" pos:end="75:31">-&gt;</operator><name pos:start="75:32" pos:end="75:34">pts</name></name> <operator pos:start="75:36" pos:end="75:36">=</operator> <call pos:start="75:38" pos:end="75:78"><name pos:start="75:38" pos:end="75:71">av_frame_get_best_effort_timestamp</name><argument_list pos:start="75:72" pos:end="75:78">(<argument pos:start="75:73" pos:end="75:77"><expr pos:start="75:73" pos:end="75:77"><name pos:start="75:73" pos:end="75:77">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="77:23" pos:end="81:21">else if <condition pos:start="77:31" pos:end="77:51">(<expr pos:start="77:32" pos:end="77:50"><name pos:start="77:32" pos:end="77:50">decoder_reorder_pts</name></expr>)</condition> <block pos:start="77:53" pos:end="81:21">{<block_content pos:start="79:25" pos:end="79:52">

                        <expr_stmt pos:start="79:25" pos:end="79:52"><expr pos:start="79:25" pos:end="79:51"><name pos:start="79:25" pos:end="79:34"><name pos:start="79:25" pos:end="79:29">frame</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:34">pts</name></name> <operator pos:start="79:36" pos:end="79:36">=</operator> <name pos:start="79:38" pos:end="79:51"><name pos:start="79:38" pos:end="79:42">frame</name><operator pos:start="79:43" pos:end="79:44">-&gt;</operator><name pos:start="79:45" pos:end="79:51">pkt_pts</name></name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="81:23" pos:end="85:21">else <block pos:start="81:28" pos:end="85:21">{<block_content pos:start="83:25" pos:end="83:52">

                        <expr_stmt pos:start="83:25" pos:end="83:52"><expr pos:start="83:25" pos:end="83:51"><name pos:start="83:25" pos:end="83:34"><name pos:start="83:25" pos:end="83:29">frame</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:34">pts</name></name> <operator pos:start="83:36" pos:end="83:36">=</operator> <name pos:start="83:38" pos:end="83:51"><name pos:start="83:38" pos:end="83:42">frame</name><operator pos:start="83:43" pos:end="83:44">-&gt;</operator><name pos:start="83:45" pos:end="83:51">pkt_dts</name></name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="89:17" pos:end="89:22">break;</break>

            <case pos:start="91:13" pos:end="91:36">case <expr pos:start="91:18" pos:end="91:35"><name pos:start="91:18" pos:end="91:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <expr_stmt pos:start="93:17" pos:end="93:87"><expr pos:start="93:17" pos:end="93:86"><name pos:start="93:17" pos:end="93:19">ret</name> <operator pos:start="93:21" pos:end="93:21">=</operator> <call pos:start="93:23" pos:end="93:86"><name pos:start="93:23" pos:end="93:43">avcodec_decode_audio4</name><argument_list pos:start="93:44" pos:end="93:86">(<argument pos:start="93:45" pos:end="93:52"><expr pos:start="93:45" pos:end="93:52"><name pos:start="93:45" pos:end="93:52"><name pos:start="93:45" pos:end="93:45">d</name><operator pos:start="93:46" pos:end="93:47">-&gt;</operator><name pos:start="93:48" pos:end="93:52">avctx</name></name></expr></argument>, <argument pos:start="93:55" pos:end="93:59"><expr pos:start="93:55" pos:end="93:59"><name pos:start="93:55" pos:end="93:59">frame</name></expr></argument>, <argument pos:start="93:62" pos:end="93:71"><expr pos:start="93:62" pos:end="93:71"><operator pos:start="93:62" pos:end="93:62">&amp;</operator><name pos:start="93:63" pos:end="93:71">got_frame</name></expr></argument>, <argument pos:start="93:74" pos:end="93:85"><expr pos:start="93:74" pos:end="93:85"><operator pos:start="93:74" pos:end="93:74">&amp;</operator><name pos:start="93:75" pos:end="93:85"><name pos:start="93:75" pos:end="93:75">d</name><operator pos:start="93:76" pos:end="93:77">-&gt;</operator><name pos:start="93:78" pos:end="93:85">pkt_temp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="95:17" pos:end="119:17"><if pos:start="95:17" pos:end="119:17">if <condition pos:start="95:20" pos:end="95:30">(<expr pos:start="95:21" pos:end="95:29"><name pos:start="95:21" pos:end="95:29">got_frame</name></expr>)</condition> <block pos:start="95:32" pos:end="119:17">{<block_content pos:start="97:21" pos:end="117:21">

                    <decl_stmt pos:start="97:21" pos:end="97:72"><decl pos:start="97:21" pos:end="97:71"><type pos:start="97:21" pos:end="97:30"><name pos:start="97:21" pos:end="97:30">AVRational</name></type> <name pos:start="97:32" pos:end="97:33">tb</name> <init pos:start="97:35" pos:end="97:71">= <expr pos:start="97:37" pos:end="97:71"><operator pos:start="97:37" pos:end="97:37">(</operator><name pos:start="97:38" pos:end="97:47">AVRational</name><operator pos:start="97:48" pos:end="97:48">)</operator><block pos:start="97:49" pos:end="97:71">{<expr pos:start="97:50" pos:end="97:50"><literal type="number" pos:start="97:50" pos:end="97:50">1</literal></expr>, <expr pos:start="97:53" pos:end="97:70"><name pos:start="97:53" pos:end="97:70"><name pos:start="97:53" pos:end="97:57">frame</name><operator pos:start="97:58" pos:end="97:59">-&gt;</operator><name pos:start="97:60" pos:end="97:70">sample_rate</name></name></expr>}</block></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="99:21" pos:end="109:83"><if pos:start="99:21" pos:end="101:87">if <condition pos:start="99:24" pos:end="99:53">(<expr pos:start="99:25" pos:end="99:52"><name pos:start="99:25" pos:end="99:34"><name pos:start="99:25" pos:end="99:29">frame</name><operator pos:start="99:30" pos:end="99:31">-&gt;</operator><name pos:start="99:32" pos:end="99:34">pts</name></name> <operator pos:start="99:36" pos:end="99:37">!=</operator> <name pos:start="99:39" pos:end="99:52">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="101:25" pos:end="101:87"><block_content pos:start="101:25" pos:end="101:87">

                        <expr_stmt pos:start="101:25" pos:end="101:87"><expr pos:start="101:25" pos:end="101:86"><name pos:start="101:25" pos:end="101:34"><name pos:start="101:25" pos:end="101:29">frame</name><operator pos:start="101:30" pos:end="101:31">-&gt;</operator><name pos:start="101:32" pos:end="101:34">pts</name></name> <operator pos:start="101:36" pos:end="101:36">=</operator> <call pos:start="101:38" pos:end="101:86"><name pos:start="101:38" pos:end="101:49">av_rescale_q</name><argument_list pos:start="101:50" pos:end="101:86">(<argument pos:start="101:51" pos:end="101:60"><expr pos:start="101:51" pos:end="101:60"><name pos:start="101:51" pos:end="101:60"><name pos:start="101:51" pos:end="101:55">frame</name><operator pos:start="101:56" pos:end="101:57">-&gt;</operator><name pos:start="101:58" pos:end="101:60">pts</name></name></expr></argument>, <argument pos:start="101:63" pos:end="101:81"><expr pos:start="101:63" pos:end="101:81"><name pos:start="101:63" pos:end="101:81"><name pos:start="101:63" pos:end="101:63">d</name><operator pos:start="101:64" pos:end="101:65">-&gt;</operator><name pos:start="101:66" pos:end="101:70">avctx</name><operator pos:start="101:71" pos:end="101:72">-&gt;</operator><name pos:start="101:73" pos:end="101:81">time_base</name></name></expr></argument>, <argument pos:start="101:84" pos:end="101:85"><expr pos:start="101:84" pos:end="101:85"><name pos:start="101:84" pos:end="101:85">tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="103:21" pos:end="105:107">else if <condition pos:start="103:29" pos:end="103:62">(<expr pos:start="103:30" pos:end="103:61"><name pos:start="103:30" pos:end="103:43"><name pos:start="103:30" pos:end="103:34">frame</name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:43">pkt_pts</name></name> <operator pos:start="103:45" pos:end="103:46">!=</operator> <name pos:start="103:48" pos:end="103:61">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="105:25" pos:end="105:107"><block_content pos:start="105:25" pos:end="105:107">

                        <expr_stmt pos:start="105:25" pos:end="105:107"><expr pos:start="105:25" pos:end="105:106"><name pos:start="105:25" pos:end="105:34"><name pos:start="105:25" pos:end="105:29">frame</name><operator pos:start="105:30" pos:end="105:31">-&gt;</operator><name pos:start="105:32" pos:end="105:34">pts</name></name> <operator pos:start="105:36" pos:end="105:36">=</operator> <call pos:start="105:38" pos:end="105:106"><name pos:start="105:38" pos:end="105:49">av_rescale_q</name><argument_list pos:start="105:50" pos:end="105:106">(<argument pos:start="105:51" pos:end="105:64"><expr pos:start="105:51" pos:end="105:64"><name pos:start="105:51" pos:end="105:64"><name pos:start="105:51" pos:end="105:55">frame</name><operator pos:start="105:56" pos:end="105:57">-&gt;</operator><name pos:start="105:58" pos:end="105:64">pkt_pts</name></name></expr></argument>, <argument pos:start="105:67" pos:end="105:101"><expr pos:start="105:67" pos:end="105:101"><call pos:start="105:67" pos:end="105:101"><name pos:start="105:67" pos:end="105:91">av_codec_get_pkt_timebase</name><argument_list pos:start="105:92" pos:end="105:101">(<argument pos:start="105:93" pos:end="105:100"><expr pos:start="105:93" pos:end="105:100"><name pos:start="105:93" pos:end="105:100"><name pos:start="105:93" pos:end="105:93">d</name><operator pos:start="105:94" pos:end="105:95">-&gt;</operator><name pos:start="105:96" pos:end="105:100">avctx</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="105:104" pos:end="105:105"><expr pos:start="105:104" pos:end="105:105"><name pos:start="105:104" pos:end="105:105">tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="107:21" pos:end="109:83">else if <condition pos:start="107:29" pos:end="107:59">(<expr pos:start="107:30" pos:end="107:58"><name pos:start="107:30" pos:end="107:40"><name pos:start="107:30" pos:end="107:30">d</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:40">next_pts</name></name> <operator pos:start="107:42" pos:end="107:43">!=</operator> <name pos:start="107:45" pos:end="107:58">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="109:25" pos:end="109:83"><block_content pos:start="109:25" pos:end="109:83">

                        <expr_stmt pos:start="109:25" pos:end="109:83"><expr pos:start="109:25" pos:end="109:82"><name pos:start="109:25" pos:end="109:34"><name pos:start="109:25" pos:end="109:29">frame</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:34">pts</name></name> <operator pos:start="109:36" pos:end="109:36">=</operator> <call pos:start="109:38" pos:end="109:82"><name pos:start="109:38" pos:end="109:49">av_rescale_q</name><argument_list pos:start="109:50" pos:end="109:82">(<argument pos:start="109:51" pos:end="109:61"><expr pos:start="109:51" pos:end="109:61"><name pos:start="109:51" pos:end="109:61"><name pos:start="109:51" pos:end="109:51">d</name><operator pos:start="109:52" pos:end="109:53">-&gt;</operator><name pos:start="109:54" pos:end="109:61">next_pts</name></name></expr></argument>, <argument pos:start="109:64" pos:end="109:77"><expr pos:start="109:64" pos:end="109:77"><name pos:start="109:64" pos:end="109:77"><name pos:start="109:64" pos:end="109:64">d</name><operator pos:start="109:65" pos:end="109:66">-&gt;</operator><name pos:start="109:67" pos:end="109:77">next_pts_tb</name></name></expr></argument>, <argument pos:start="109:80" pos:end="109:81"><expr pos:start="109:80" pos:end="109:81"><name pos:start="109:80" pos:end="109:81">tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="111:21" pos:end="117:21"><if pos:start="111:21" pos:end="117:21">if <condition pos:start="111:24" pos:end="111:53">(<expr pos:start="111:25" pos:end="111:52"><name pos:start="111:25" pos:end="111:34"><name pos:start="111:25" pos:end="111:29">frame</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:34">pts</name></name> <operator pos:start="111:36" pos:end="111:37">!=</operator> <name pos:start="111:39" pos:end="111:52">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="111:55" pos:end="117:21">{<block_content pos:start="113:25" pos:end="115:44">

                        <expr_stmt pos:start="113:25" pos:end="113:69"><expr pos:start="113:25" pos:end="113:68"><name pos:start="113:25" pos:end="113:35"><name pos:start="113:25" pos:end="113:25">d</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:35">next_pts</name></name> <operator pos:start="113:37" pos:end="113:37">=</operator> <name pos:start="113:39" pos:end="113:48"><name pos:start="113:39" pos:end="113:43">frame</name><operator pos:start="113:44" pos:end="113:45">-&gt;</operator><name pos:start="113:46" pos:end="113:48">pts</name></name> <operator pos:start="113:50" pos:end="113:50">+</operator> <name pos:start="113:52" pos:end="113:68"><name pos:start="113:52" pos:end="113:56">frame</name><operator pos:start="113:57" pos:end="113:58">-&gt;</operator><name pos:start="113:59" pos:end="113:68">nb_samples</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="115:25" pos:end="115:44"><expr pos:start="115:25" pos:end="115:43"><name pos:start="115:25" pos:end="115:38"><name pos:start="115:25" pos:end="115:25">d</name><operator pos:start="115:26" pos:end="115:27">-&gt;</operator><name pos:start="115:28" pos:end="115:38">next_pts_tb</name></name> <operator pos:start="115:40" pos:end="115:40">=</operator> <name pos:start="115:42" pos:end="115:43">tb</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="121:17" pos:end="121:22">break;</break>

            <case pos:start="123:13" pos:end="123:39">case <expr pos:start="123:18" pos:end="123:38"><name pos:start="123:18" pos:end="123:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="125:17" pos:end="125:91"><expr pos:start="125:17" pos:end="125:90"><name pos:start="125:17" pos:end="125:19">ret</name> <operator pos:start="125:21" pos:end="125:21">=</operator> <call pos:start="125:23" pos:end="125:90"><name pos:start="125:23" pos:end="125:46">avcodec_decode_subtitle2</name><argument_list pos:start="125:47" pos:end="125:90">(<argument pos:start="125:48" pos:end="125:55"><expr pos:start="125:48" pos:end="125:55"><name pos:start="125:48" pos:end="125:55"><name pos:start="125:48" pos:end="125:48">d</name><operator pos:start="125:49" pos:end="125:50">-&gt;</operator><name pos:start="125:51" pos:end="125:55">avctx</name></name></expr></argument>, <argument pos:start="125:58" pos:end="125:63"><expr pos:start="125:58" pos:end="125:63"><name pos:start="125:58" pos:end="125:63">fframe</name></expr></argument>, <argument pos:start="125:66" pos:end="125:75"><expr pos:start="125:66" pos:end="125:75"><operator pos:start="125:66" pos:end="125:66">&amp;</operator><name pos:start="125:67" pos:end="125:75">got_frame</name></expr></argument>, <argument pos:start="125:78" pos:end="125:89"><expr pos:start="125:78" pos:end="125:89"><operator pos:start="125:78" pos:end="125:78">&amp;</operator><name pos:start="125:79" pos:end="125:89"><name pos:start="125:79" pos:end="125:79">d</name><operator pos:start="125:80" pos:end="125:81">-&gt;</operator><name pos:start="125:82" pos:end="125:89">pkt_temp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="127:17" pos:end="127:22">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="133:9" pos:end="169:9"><if pos:start="133:9" pos:end="137:9">if <condition pos:start="133:12" pos:end="133:20">(<expr pos:start="133:13" pos:end="133:19"><name pos:start="133:13" pos:end="133:15">ret</name> <operator pos:start="133:17" pos:end="133:17">&lt;</operator> <literal type="number" pos:start="133:19" pos:end="133:19">0</literal></expr>)</condition> <block pos:start="133:22" pos:end="137:9">{<block_content pos:start="135:13" pos:end="135:34">

            <expr_stmt pos:start="135:13" pos:end="135:34"><expr pos:start="135:13" pos:end="135:33"><name pos:start="135:13" pos:end="135:29"><name pos:start="135:13" pos:end="135:13">d</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:29">packet_pending</name></name> <operator pos:start="135:31" pos:end="135:31">=</operator> <literal type="number" pos:start="135:33" pos:end="135:33">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="137:11" pos:end="169:9">else <block pos:start="137:16" pos:end="169:9">{<block_content pos:start="139:13" pos:end="167:13">

            <expr_stmt pos:start="139:13" pos:end="141:45"><expr pos:start="139:13" pos:end="141:44"><name pos:start="139:13" pos:end="139:27"><name pos:start="139:13" pos:end="139:13">d</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:23">pkt_temp</name><operator pos:start="139:24" pos:end="139:24">.</operator><name pos:start="139:25" pos:end="139:27">dts</name></name> <operator pos:start="139:29" pos:end="139:29">=</operator>

            <name pos:start="141:13" pos:end="141:27"><name pos:start="141:13" pos:end="141:13">d</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:23">pkt_temp</name><operator pos:start="141:24" pos:end="141:24">.</operator><name pos:start="141:25" pos:end="141:27">pts</name></name> <operator pos:start="141:29" pos:end="141:29">=</operator> <name pos:start="141:31" pos:end="141:44">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

            <if_stmt pos:start="143:13" pos:end="167:13"><if pos:start="143:13" pos:end="157:13">if <condition pos:start="143:16" pos:end="143:33">(<expr pos:start="143:17" pos:end="143:32"><name pos:start="143:17" pos:end="143:32"><name pos:start="143:17" pos:end="143:17">d</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:27">pkt_temp</name><operator pos:start="143:28" pos:end="143:28">.</operator><name pos:start="143:29" pos:end="143:32">data</name></name></expr>)</condition> <block pos:start="143:35" pos:end="157:13">{<block_content pos:start="145:17" pos:end="155:42">

                <if_stmt pos:start="145:17" pos:end="147:43"><if pos:start="145:17" pos:end="147:43">if <condition pos:start="145:20" pos:end="145:63">(<expr pos:start="145:21" pos:end="145:62"><name pos:start="145:21" pos:end="145:40"><name pos:start="145:21" pos:end="145:21">d</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:28">avctx</name><operator pos:start="145:29" pos:end="145:30">-&gt;</operator><name pos:start="145:31" pos:end="145:40">codec_type</name></name> <operator pos:start="145:42" pos:end="145:43">!=</operator> <name pos:start="145:45" pos:end="145:62">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="147:21" pos:end="147:43"><block_content pos:start="147:21" pos:end="147:43">

                    <expr_stmt pos:start="147:21" pos:end="147:43"><expr pos:start="147:21" pos:end="147:42"><name pos:start="147:21" pos:end="147:23">ret</name> <operator pos:start="147:25" pos:end="147:25">=</operator> <name pos:start="147:27" pos:end="147:42"><name pos:start="147:27" pos:end="147:27">d</name><operator pos:start="147:28" pos:end="147:29">-&gt;</operator><name pos:start="147:30" pos:end="147:37">pkt_temp</name><operator pos:start="147:38" pos:end="147:38">.</operator><name pos:start="147:39" pos:end="147:42">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:40"><expr pos:start="149:17" pos:end="149:39"><name pos:start="149:17" pos:end="149:32"><name pos:start="149:17" pos:end="149:17">d</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:27">pkt_temp</name><operator pos:start="149:28" pos:end="149:28">.</operator><name pos:start="149:29" pos:end="149:32">data</name></name> <operator pos:start="149:34" pos:end="149:35">+=</operator> <name pos:start="149:37" pos:end="149:39">ret</name></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:40"><expr pos:start="151:17" pos:end="151:39"><name pos:start="151:17" pos:end="151:32"><name pos:start="151:17" pos:end="151:17">d</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:27">pkt_temp</name><operator pos:start="151:28" pos:end="151:28">.</operator><name pos:start="151:29" pos:end="151:32">size</name></name> <operator pos:start="151:34" pos:end="151:35">-=</operator> <name pos:start="151:37" pos:end="151:39">ret</name></expr>;</expr_stmt>

                <if_stmt pos:start="153:17" pos:end="155:42"><if pos:start="153:17" pos:end="155:42">if <condition pos:start="153:20" pos:end="153:42">(<expr pos:start="153:21" pos:end="153:41"><name pos:start="153:21" pos:end="153:36"><name pos:start="153:21" pos:end="153:21">d</name><operator pos:start="153:22" pos:end="153:23">-&gt;</operator><name pos:start="153:24" pos:end="153:31">pkt_temp</name><operator pos:start="153:32" pos:end="153:32">.</operator><name pos:start="153:33" pos:end="153:36">size</name></name> <operator pos:start="153:38" pos:end="153:39">&lt;=</operator> <literal type="number" pos:start="153:41" pos:end="153:41">0</literal></expr>)</condition><block type="pseudo" pos:start="155:21" pos:end="155:42"><block_content pos:start="155:21" pos:end="155:42">

                    <expr_stmt pos:start="155:21" pos:end="155:42"><expr pos:start="155:21" pos:end="155:41"><name pos:start="155:21" pos:end="155:37"><name pos:start="155:21" pos:end="155:21">d</name><operator pos:start="155:22" pos:end="155:23">-&gt;</operator><name pos:start="155:24" pos:end="155:37">packet_pending</name></name> <operator pos:start="155:39" pos:end="155:39">=</operator> <literal type="number" pos:start="155:41" pos:end="155:41">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="157:15" pos:end="167:13">else <block pos:start="157:20" pos:end="167:13">{<block_content pos:start="159:17" pos:end="165:17">

                <if_stmt pos:start="159:17" pos:end="165:17"><if pos:start="159:17" pos:end="165:17">if <condition pos:start="159:20" pos:end="159:31">(<expr pos:start="159:21" pos:end="159:30"><operator pos:start="159:21" pos:end="159:21">!</operator><name pos:start="159:22" pos:end="159:30">got_frame</name></expr>)</condition> <block pos:start="159:33" pos:end="165:17">{<block_content pos:start="161:21" pos:end="163:48">

                    <expr_stmt pos:start="161:21" pos:end="161:42"><expr pos:start="161:21" pos:end="161:41"><name pos:start="161:21" pos:end="161:37"><name pos:start="161:21" pos:end="161:21">d</name><operator pos:start="161:22" pos:end="161:23">-&gt;</operator><name pos:start="161:24" pos:end="161:37">packet_pending</name></name> <operator pos:start="161:39" pos:end="161:39">=</operator> <literal type="number" pos:start="161:41" pos:end="161:41">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="163:21" pos:end="163:48"><expr pos:start="163:21" pos:end="163:47"><name pos:start="163:21" pos:end="163:31"><name pos:start="163:21" pos:end="163:21">d</name><operator pos:start="163:22" pos:end="163:23">-&gt;</operator><name pos:start="163:24" pos:end="163:31">finished</name></name> <operator pos:start="163:33" pos:end="163:33">=</operator> <name pos:start="163:35" pos:end="163:47"><name pos:start="163:35" pos:end="163:35">d</name><operator pos:start="163:36" pos:end="163:37">-&gt;</operator><name pos:start="163:38" pos:end="163:47">pkt_serial</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block> while <condition pos:start="171:13" pos:end="171:40">(<expr pos:start="171:14" pos:end="171:39"><operator pos:start="171:14" pos:end="171:14">!</operator><name pos:start="171:15" pos:end="171:23">got_frame</name> <operator pos:start="171:25" pos:end="171:26">&amp;&amp;</operator> <operator pos:start="171:28" pos:end="171:28">!</operator><name pos:start="171:29" pos:end="171:39"><name pos:start="171:29" pos:end="171:29">d</name><operator pos:start="171:30" pos:end="171:31">-&gt;</operator><name pos:start="171:32" pos:end="171:39">finished</name></name></expr>)</condition>;</do>



    <return pos:start="175:5" pos:end="175:21">return <expr pos:start="175:12" pos:end="175:20"><name pos:start="175:12" pos:end="175:20">got_frame</name></expr>;</return>

</block_content>}</block></function>
</unit>
