<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1823.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:15"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">asf_build_simple_index</name><parameter_list pos:start="1:34" pos:end="1:71">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:49">AVFormatContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:70"><decl pos:start="1:55" pos:end="1:70"><type pos:start="1:55" pos:end="1:70"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:70">stream_index</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="45:15">{<block_content pos:start="3:5" pos:end="45:15">
    <decl_stmt pos:start="3:5" pos:end="3:18"><decl pos:start="3:5" pos:end="3:17"><type pos:start="3:5" pos:end="3:15"><name pos:start="3:5" pos:end="3:15">ff_asf_guid</name></type> <name pos:start="3:17" pos:end="3:17">g</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:39"><decl pos:start="4:5" pos:end="4:38"><type pos:start="4:5" pos:end="4:16"><name pos:start="4:5" pos:end="4:14">ASFContext</name> <modifier pos:start="4:16" pos:end="4:16">*</modifier></type><name pos:start="4:17" pos:end="4:19">asf</name>     <init pos:start="4:25" pos:end="4:38">= <expr pos:start="4:27" pos:end="4:38"><name pos:start="4:27" pos:end="4:38"><name pos:start="4:27" pos:end="4:27">s</name><operator pos:start="4:28" pos:end="4:29">-&gt;</operator><name pos:start="4:30" pos:end="4:38">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:23">current_pos</name> <init pos:start="5:25" pos:end="5:42">= <expr pos:start="5:27" pos:end="5:42"><call pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:35">avio_tell</name><argument_list pos:start="5:36" pos:end="5:42">(<argument pos:start="5:37" pos:end="5:41"><expr pos:start="5:37" pos:end="5:41"><name pos:start="5:37" pos:end="5:41"><name pos:start="5:37" pos:end="5:37">s</name><operator pos:start="5:38" pos:end="5:39">-&gt;</operator><name pos:start="5:40" pos:end="5:41">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:16"><decl pos:start="6:5" pos:end="6:15"><type pos:start="6:5" pos:end="6:11"><name pos:start="6:5" pos:end="6:11">int64_t</name></type> <name pos:start="6:13" pos:end="6:15">ret</name></decl>;</decl_stmt>
    <if_stmt pos:start="7:5" pos:end="45:15"><if pos:start="7:5" pos:end="45:15">if<condition pos:start="7:7" pos:end="7:95">(<expr pos:start="7:8" pos:end="7:94"><operator pos:start="7:8" pos:end="7:8">(</operator><name pos:start="7:9" pos:end="7:11">ret</name> <operator pos:start="7:13" pos:end="7:13">=</operator> <call pos:start="7:15" pos:end="7:89"><name pos:start="7:15" pos:end="7:23">avio_seek</name><argument_list pos:start="7:24" pos:end="7:89">(<argument pos:start="7:25" pos:end="7:29"><expr pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:29">pb</name></name></expr></argument>, <argument pos:start="7:32" pos:end="7:78"><expr pos:start="7:32" pos:end="7:78"><name pos:start="7:32" pos:end="7:54"><name pos:start="7:32" pos:end="7:34">asf</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:54">data_object_offset</name></name> <operator pos:start="7:56" pos:end="7:56">+</operator> <name pos:start="7:58" pos:end="7:78"><name pos:start="7:58" pos:end="7:60">asf</name><operator pos:start="7:61" pos:end="7:62">-&gt;</operator><name pos:start="7:63" pos:end="7:78">data_object_size</name></name></expr></argument>, <argument pos:start="7:81" pos:end="7:88"><expr pos:start="7:81" pos:end="7:88"><name pos:start="7:81" pos:end="7:88">SEEK_SET</name></expr></argument>)</argument_list></call><operator pos:start="7:90" pos:end="7:90">)</operator> <operator pos:start="7:92" pos:end="7:92">&lt;</operator> <literal type="number" pos:start="7:94" pos:end="7:94">0</literal></expr>)</condition> <block pos:start="7:97" pos:end="45:15">{<block_content pos:start="8:9" pos:end="45:15">
        <return pos:start="8:9" pos:end="8:19">return <expr pos:start="8:16" pos:end="8:18"><name pos:start="8:16" pos:end="8:18">ret</name></expr>;</return>
    <if_stmt pos:start="9:5" pos:end="45:15"><if pos:start="9:5" pos:end="45:15">if <condition pos:start="9:8" pos:end="9:43">(<expr pos:start="9:9" pos:end="9:42"><operator pos:start="9:9" pos:end="9:9">(</operator><name pos:start="9:10" pos:end="9:12">ret</name> <operator pos:start="9:14" pos:end="9:14">=</operator> <call pos:start="9:16" pos:end="9:37"><name pos:start="9:16" pos:end="9:26">ff_get_guid</name><argument_list pos:start="9:27" pos:end="9:37">(<argument pos:start="9:28" pos:end="9:32"><expr pos:start="9:28" pos:end="9:32"><name pos:start="9:28" pos:end="9:32"><name pos:start="9:28" pos:end="9:28">s</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:32">pb</name></name></expr></argument>, <argument pos:start="9:35" pos:end="9:36"><expr pos:start="9:35" pos:end="9:36"><operator pos:start="9:35" pos:end="9:35">&amp;</operator><name pos:start="9:36" pos:end="9:36">g</name></expr></argument>)</argument_list></call><operator pos:start="9:38" pos:end="9:38">)</operator> <operator pos:start="9:40" pos:end="9:40">&lt;</operator> <literal type="number" pos:start="9:42" pos:end="9:42">0</literal></expr>)</condition><block type="pseudo" pos:start="12:5" pos:end="45:15"><block_content pos:start="12:5" pos:end="45:15">
    <comment type="block" pos:start="10:5" pos:end="11:60">/* the data object can be followed by other top-level objects,
     * skip them until the simple index object is reached */</comment>
    <while pos:start="12:5" pos:end="45:15">while <condition pos:start="12:11" pos:end="12:55">(<expr pos:start="12:12" pos:end="12:54"><call pos:start="12:12" pos:end="12:54"><name pos:start="12:12" pos:end="12:21">ff_guidcmp</name><argument_list pos:start="12:22" pos:end="12:54">(<argument pos:start="12:23" pos:end="12:24"><expr pos:start="12:23" pos:end="12:24"><operator pos:start="12:23" pos:end="12:23">&amp;</operator><name pos:start="12:24" pos:end="12:24">g</name></expr></argument>, <argument pos:start="12:27" pos:end="12:53"><expr pos:start="12:27" pos:end="12:53"><operator pos:start="12:27" pos:end="12:27">&amp;</operator><name pos:start="12:28" pos:end="12:53">ff_asf_simple_index_header</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="12:57" pos:end="45:15">{<block_content pos:start="13:9" pos:end="45:15">
        <decl_stmt pos:start="13:9" pos:end="13:41"><decl pos:start="13:9" pos:end="13:40"><type pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:15">int64_t</name></type> <name pos:start="13:17" pos:end="13:21">gsize</name> <init pos:start="13:23" pos:end="13:40">= <expr pos:start="13:25" pos:end="13:40"><call pos:start="13:25" pos:end="13:40"><name pos:start="13:25" pos:end="13:33">avio_rl64</name><argument_list pos:start="13:34" pos:end="13:40">(<argument pos:start="13:35" pos:end="13:39"><expr pos:start="13:35" pos:end="13:39"><name pos:start="13:35" pos:end="13:39"><name pos:start="13:35" pos:end="13:35">s</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:39">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="14:9" pos:end="45:15"><if pos:start="14:9" pos:end="45:15">if <condition pos:start="14:12" pos:end="14:43">(<expr pos:start="14:13" pos:end="14:42"><name pos:start="14:13" pos:end="14:17">gsize</name> <operator pos:start="14:19" pos:end="14:19">&lt;</operator> <literal type="number" pos:start="14:21" pos:end="14:22">24</literal> <operator pos:start="14:24" pos:end="14:25">||</operator> <call pos:start="14:27" pos:end="14:42"><name pos:start="14:27" pos:end="14:35">avio_feof</name><argument_list pos:start="14:36" pos:end="14:42">(<argument pos:start="14:37" pos:end="14:41"><expr pos:start="14:37" pos:end="14:41"><name pos:start="14:37" pos:end="14:41"><name pos:start="14:37" pos:end="14:37">s</name><operator pos:start="14:38" pos:end="14:39">-&gt;</operator><name pos:start="14:40" pos:end="14:41">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="14:45" pos:end="45:15">{<block_content pos:start="15:9" pos:end="45:15">
        <expr_stmt pos:start="15:9" pos:end="15:37"><expr pos:start="15:9" pos:end="15:36"><call pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:17">avio_skip</name><argument_list pos:start="15:18" pos:end="15:36">(<argument pos:start="15:19" pos:end="15:23"><expr pos:start="15:19" pos:end="15:23"><name pos:start="15:19" pos:end="15:23"><name pos:start="15:19" pos:end="15:19">s</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:23">pb</name></name></expr></argument>, <argument pos:start="15:26" pos:end="15:35"><expr pos:start="15:26" pos:end="15:35"><name pos:start="15:26" pos:end="15:30">gsize</name> <operator pos:start="15:32" pos:end="15:32">-</operator> <literal type="number" pos:start="15:34" pos:end="15:35">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="16:9" pos:end="45:15"><if pos:start="16:9" pos:end="45:15">if <condition pos:start="16:12" pos:end="16:47">(<expr pos:start="16:13" pos:end="16:46"><operator pos:start="16:13" pos:end="16:13">(</operator><name pos:start="16:14" pos:end="16:16">ret</name> <operator pos:start="16:18" pos:end="16:18">=</operator> <call pos:start="16:20" pos:end="16:41"><name pos:start="16:20" pos:end="16:30">ff_get_guid</name><argument_list pos:start="16:31" pos:end="16:41">(<argument pos:start="16:32" pos:end="16:36"><expr pos:start="16:32" pos:end="16:36"><name pos:start="16:32" pos:end="16:36"><name pos:start="16:32" pos:end="16:32">s</name><operator pos:start="16:33" pos:end="16:34">-&gt;</operator><name pos:start="16:35" pos:end="16:36">pb</name></name></expr></argument>, <argument pos:start="16:39" pos:end="16:40"><expr pos:start="16:39" pos:end="16:40"><operator pos:start="16:39" pos:end="16:39">&amp;</operator><name pos:start="16:40" pos:end="16:40">g</name></expr></argument>)</argument_list></call><operator pos:start="16:42" pos:end="16:42">)</operator> <operator pos:start="16:44" pos:end="16:44">&lt;</operator> <literal type="number" pos:start="16:46" pos:end="16:46">0</literal></expr>)</condition>
    <block pos:start="17:5" pos:end="45:15">{<block_content pos:start="18:9" pos:end="45:15">
        <decl_stmt pos:start="18:9" pos:end="18:37"><decl pos:start="18:9" pos:end="18:21"><type pos:start="18:9" pos:end="18:15"><name pos:start="18:9" pos:end="18:15">int64_t</name></type> <name pos:start="18:17" pos:end="18:21">itime</name></decl>, <decl pos:start="18:24" pos:end="18:36"><type ref="prev" pos:start="18:9" pos:end="18:15"/><name pos:start="18:24" pos:end="18:31">last_pos</name> <init pos:start="18:33" pos:end="18:36">= <expr pos:start="18:35" pos:end="18:36"><operator pos:start="18:35" pos:end="18:35">-</operator><literal type="number" pos:start="18:36" pos:end="18:36">1</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="19:9" pos:end="19:21"><decl pos:start="19:9" pos:end="19:15"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:15">pct</name></decl>, <decl pos:start="19:18" pos:end="19:20"><type ref="prev" pos:start="19:9" pos:end="19:11"/><name pos:start="19:18" pos:end="19:20">ict</name></decl>;</decl_stmt>
        <decl_stmt pos:start="20:9" pos:end="20:14"><decl pos:start="20:9" pos:end="20:13"><type pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:11">int</name></type> <name pos:start="20:13" pos:end="20:13">i</name></decl>;</decl_stmt>
        <decl_stmt pos:start="21:9" pos:end="21:51"><decl pos:start="21:9" pos:end="21:50"><type pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:15">int64_t</name> <name pos:start="21:17" pos:end="21:25">av_unused</name></type> <name pos:start="21:27" pos:end="21:31">gsize</name> <init pos:start="21:33" pos:end="21:50">= <expr pos:start="21:35" pos:end="21:50"><call pos:start="21:35" pos:end="21:50"><name pos:start="21:35" pos:end="21:43">avio_rl64</name><argument_list pos:start="21:44" pos:end="21:50">(<argument pos:start="21:45" pos:end="21:49"><expr pos:start="21:45" pos:end="21:49"><name pos:start="21:45" pos:end="21:49"><name pos:start="21:45" pos:end="21:45">s</name><operator pos:start="21:46" pos:end="21:47">-&gt;</operator><name pos:start="21:48" pos:end="21:49">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="22:9" pos:end="23:33"><if pos:start="22:9" pos:end="23:33">if <condition pos:start="22:12" pos:end="22:47">(<expr pos:start="22:13" pos:end="22:46"><operator pos:start="22:13" pos:end="22:13">(</operator><name pos:start="22:14" pos:end="22:16">ret</name> <operator pos:start="22:18" pos:end="22:18">=</operator> <call pos:start="22:20" pos:end="22:41"><name pos:start="22:20" pos:end="22:30">ff_get_guid</name><argument_list pos:start="22:31" pos:end="22:41">(<argument pos:start="22:32" pos:end="22:36"><expr pos:start="22:32" pos:end="22:36"><name pos:start="22:32" pos:end="22:36"><name pos:start="22:32" pos:end="22:32">s</name><operator pos:start="22:33" pos:end="22:34">-&gt;</operator><name pos:start="22:35" pos:end="22:36">pb</name></name></expr></argument>, <argument pos:start="22:39" pos:end="22:40"><expr pos:start="22:39" pos:end="22:40"><operator pos:start="22:39" pos:end="22:39">&amp;</operator><name pos:start="22:40" pos:end="22:40">g</name></expr></argument>)</argument_list></call><operator pos:start="22:42" pos:end="22:42">)</operator> <operator pos:start="22:44" pos:end="22:44">&lt;</operator> <literal type="number" pos:start="22:46" pos:end="22:46">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:33"><block_content pos:start="23:9" pos:end="23:33">
        <expr_stmt pos:start="23:9" pos:end="23:33"><expr pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:13">itime</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:32"><name pos:start="23:17" pos:end="23:25">avio_rl64</name><argument_list pos:start="23:26" pos:end="23:32">(<argument pos:start="23:27" pos:end="23:31"><expr pos:start="23:27" pos:end="23:31"><name pos:start="23:27" pos:end="23:31"><name pos:start="23:27" pos:end="23:27">s</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:31">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:33"><expr pos:start="24:9" pos:end="24:32"><name pos:start="24:9" pos:end="24:11">pct</name>   <operator pos:start="24:15" pos:end="24:15">=</operator> <call pos:start="24:17" pos:end="24:32"><name pos:start="24:17" pos:end="24:25">avio_rl32</name><argument_list pos:start="24:26" pos:end="24:32">(<argument pos:start="24:27" pos:end="24:31"><expr pos:start="24:27" pos:end="24:31"><name pos:start="24:27" pos:end="24:31"><name pos:start="24:27" pos:end="24:27">s</name><operator pos:start="24:28" pos:end="24:29">-&gt;</operator><name pos:start="24:30" pos:end="24:31">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="25:9" pos:end="25:33"><expr pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:11">ict</name>   <operator pos:start="25:15" pos:end="25:15">=</operator> <call pos:start="25:17" pos:end="25:32"><name pos:start="25:17" pos:end="25:25">avio_rl32</name><argument_list pos:start="25:26" pos:end="25:32">(<argument pos:start="25:27" pos:end="25:31"><expr pos:start="25:27" pos:end="25:31"><name pos:start="25:27" pos:end="25:31"><name pos:start="25:27" pos:end="25:27">s</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:31">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="26:9" pos:end="27:71"><expr pos:start="26:9" pos:end="27:70"><call pos:start="26:9" pos:end="27:70"><name pos:start="26:9" pos:end="26:14">av_log</name><argument_list pos:start="26:15" pos:end="27:70">(<argument pos:start="26:16" pos:end="26:16"><expr pos:start="26:16" pos:end="26:16"><name pos:start="26:16" pos:end="26:16">s</name></expr></argument>, <argument pos:start="26:19" pos:end="26:30"><expr pos:start="26:19" pos:end="26:30"><name pos:start="26:19" pos:end="26:30">AV_LOG_DEBUG</name></expr></argument>,
               <argument pos:start="27:16" pos:end="27:52"><expr pos:start="27:16" pos:end="27:52"><literal type="string" pos:start="27:16" pos:end="27:26">"itime:0x%"</literal><name pos:start="27:27" pos:end="27:32">PRIx64</name><literal type="string" pos:start="27:33" pos:end="27:52">", pct:%d, ict:%d\n"</literal></expr></argument>, <argument pos:start="27:55" pos:end="27:59"><expr pos:start="27:55" pos:end="27:59"><name pos:start="27:55" pos:end="27:59">itime</name></expr></argument>, <argument pos:start="27:62" pos:end="27:64"><expr pos:start="27:62" pos:end="27:64"><name pos:start="27:62" pos:end="27:64">pct</name></expr></argument>, <argument pos:start="27:67" pos:end="27:69"><expr pos:start="27:67" pos:end="27:69"><name pos:start="27:67" pos:end="27:69">ict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="28:9" pos:end="45:15">for <control pos:start="28:13" pos:end="28:33">(<init pos:start="28:14" pos:end="28:19"><expr pos:start="28:14" pos:end="28:18"><name pos:start="28:14" pos:end="28:14">i</name> <operator pos:start="28:16" pos:end="28:16">=</operator> <literal type="number" pos:start="28:18" pos:end="28:18">0</literal></expr>;</init> <condition pos:start="28:21" pos:end="28:28"><expr pos:start="28:21" pos:end="28:27"><name pos:start="28:21" pos:end="28:21">i</name> <operator pos:start="28:23" pos:end="28:23">&lt;</operator> <name pos:start="28:25" pos:end="28:27">ict</name></expr>;</condition> <incr pos:start="28:30" pos:end="28:32"><expr pos:start="28:30" pos:end="28:32"><name pos:start="28:30" pos:end="28:30">i</name><operator pos:start="28:31" pos:end="28:32">++</operator></expr></incr>)</control> <block pos:start="28:35" pos:end="45:15">{<block_content pos:start="29:13" pos:end="45:15">
            <decl_stmt pos:start="29:13" pos:end="29:49"><decl pos:start="29:13" pos:end="29:48"><type pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">int</name></type> <name pos:start="29:17" pos:end="29:22">pktnum</name>        <init pos:start="29:31" pos:end="29:48">= <expr pos:start="29:33" pos:end="29:48"><call pos:start="29:33" pos:end="29:48"><name pos:start="29:33" pos:end="29:41">avio_rl32</name><argument_list pos:start="29:42" pos:end="29:48">(<argument pos:start="29:43" pos:end="29:47"><expr pos:start="29:43" pos:end="29:47"><name pos:start="29:43" pos:end="29:47"><name pos:start="29:43" pos:end="29:43">s</name><operator pos:start="29:44" pos:end="29:45">-&gt;</operator><name pos:start="29:46" pos:end="29:47">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="30:13" pos:end="30:49"><decl pos:start="30:13" pos:end="30:48"><type pos:start="30:13" pos:end="30:15"><name pos:start="30:13" pos:end="30:15">int</name></type> <name pos:start="30:17" pos:end="30:21">pktct</name>         <init pos:start="30:31" pos:end="30:48">= <expr pos:start="30:33" pos:end="30:48"><call pos:start="30:33" pos:end="30:48"><name pos:start="30:33" pos:end="30:41">avio_rl16</name><argument_list pos:start="30:42" pos:end="30:48">(<argument pos:start="30:43" pos:end="30:47"><expr pos:start="30:43" pos:end="30:47"><name pos:start="30:43" pos:end="30:47"><name pos:start="30:43" pos:end="30:43">s</name><operator pos:start="30:44" pos:end="30:45">-&gt;</operator><name pos:start="30:46" pos:end="30:47">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="31:13" pos:end="31:92"><decl pos:start="31:13" pos:end="31:91"><type pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:19">int64_t</name></type> <name pos:start="31:21" pos:end="31:23">pos</name>       <init pos:start="31:31" pos:end="31:91">= <expr pos:start="31:33" pos:end="31:91"><name pos:start="31:33" pos:end="31:56"><name pos:start="31:33" pos:end="31:33">s</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:43">internal</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:56">data_offset</name></name> <operator pos:start="31:58" pos:end="31:58">+</operator> <name pos:start="31:60" pos:end="31:73"><name pos:start="31:60" pos:end="31:60">s</name><operator pos:start="31:61" pos:end="31:62">-&gt;</operator><name pos:start="31:63" pos:end="31:73">packet_size</name></name> <operator pos:start="31:75" pos:end="31:75">*</operator> <operator pos:start="31:77" pos:end="31:77">(</operator><name pos:start="31:78" pos:end="31:84">int64_t</name><operator pos:start="31:85" pos:end="31:85">)</operator><name pos:start="31:86" pos:end="31:91">pktnum</name></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="32:13" pos:end="32:89"><decl pos:start="32:13" pos:end="32:88"><type pos:start="32:13" pos:end="32:19"><name pos:start="32:13" pos:end="32:19">int64_t</name></type> <name pos:start="32:21" pos:end="32:29">index_pts</name> <init pos:start="32:31" pos:end="32:88">= <expr pos:start="32:33" pos:end="32:88"><call pos:start="32:33" pos:end="32:88"><name pos:start="32:33" pos:end="32:37">FFMAX</name><argument_list pos:start="32:38" pos:end="32:88">(<argument pos:start="32:39" pos:end="32:84"><expr pos:start="32:39" pos:end="32:84"><call pos:start="32:39" pos:end="32:65"><name pos:start="32:39" pos:end="32:48">av_rescale</name><argument_list pos:start="32:49" pos:end="32:65">(<argument pos:start="32:50" pos:end="32:54"><expr pos:start="32:50" pos:end="32:54"><name pos:start="32:50" pos:end="32:54">itime</name></expr></argument>, <argument pos:start="32:57" pos:end="32:57"><expr pos:start="32:57" pos:end="32:57"><name pos:start="32:57" pos:end="32:57">i</name></expr></argument>, <argument pos:start="32:60" pos:end="32:64"><expr pos:start="32:60" pos:end="32:64"><literal type="number" pos:start="32:60" pos:end="32:64">10000</literal></expr></argument>)</argument_list></call> <operator pos:start="32:67" pos:end="32:67">-</operator> <name pos:start="32:69" pos:end="32:84"><name pos:start="32:69" pos:end="32:71">asf</name><operator pos:start="32:72" pos:end="32:73">-&gt;</operator><name pos:start="32:74" pos:end="32:76">hdr</name><operator pos:start="32:77" pos:end="32:77">.</operator><name pos:start="32:78" pos:end="32:84">preroll</name></name></expr></argument>, <argument pos:start="32:87" pos:end="32:87"><expr pos:start="32:87" pos:end="32:87"><literal type="number" pos:start="32:87" pos:end="32:87">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="33:13" pos:end="45:15"><if pos:start="33:13" pos:end="45:15">if <condition pos:start="33:16" pos:end="33:32">(<expr pos:start="33:17" pos:end="33:31"><name pos:start="33:17" pos:end="33:19">pos</name> <operator pos:start="33:21" pos:end="33:22">!=</operator> <name pos:start="33:24" pos:end="33:31">last_pos</name></expr>)</condition> <block pos:start="33:34" pos:end="45:15">{<block_content pos:start="34:17" pos:end="45:15">
                <expr_stmt pos:start="34:17" pos:end="35:49"><expr pos:start="34:17" pos:end="35:48"><call pos:start="34:17" pos:end="35:48"><name pos:start="34:17" pos:end="34:22">av_log</name><argument_list pos:start="34:23" pos:end="35:48">(<argument pos:start="34:24" pos:end="34:24"><expr pos:start="34:24" pos:end="34:24"><name pos:start="34:24" pos:end="34:24">s</name></expr></argument>, <argument pos:start="34:27" pos:end="34:38"><expr pos:start="34:27" pos:end="34:38"><name pos:start="34:27" pos:end="34:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="34:41" pos:end="34:79"><expr pos:start="34:41" pos:end="34:79"><literal type="string" pos:start="34:41" pos:end="34:69">"pktnum:%d, pktct:%d  pts: %"</literal><name pos:start="34:70" pos:end="34:75">PRId64</name><literal type="string" pos:start="34:76" pos:end="34:79">"\n"</literal></expr></argument>,
                       <argument pos:start="35:24" pos:end="35:29"><expr pos:start="35:24" pos:end="35:29"><name pos:start="35:24" pos:end="35:29">pktnum</name></expr></argument>, <argument pos:start="35:32" pos:end="35:36"><expr pos:start="35:32" pos:end="35:36"><name pos:start="35:32" pos:end="35:36">pktct</name></expr></argument>, <argument pos:start="35:39" pos:end="35:47"><expr pos:start="35:39" pos:end="35:47"><name pos:start="35:39" pos:end="35:47">index_pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="36:17" pos:end="37:72"><expr pos:start="36:17" pos:end="37:71"><call pos:start="36:17" pos:end="37:71"><name pos:start="36:17" pos:end="36:34">av_add_index_entry</name><argument_list pos:start="36:35" pos:end="37:71">(<argument pos:start="36:36" pos:end="36:59"><expr pos:start="36:36" pos:end="36:59"><name pos:start="36:36" pos:end="36:59"><name pos:start="36:36" pos:end="36:36">s</name><operator pos:start="36:37" pos:end="36:38">-&gt;</operator><name pos:start="36:39" pos:end="36:45">streams</name><index pos:start="36:46" pos:end="36:59">[<expr pos:start="36:47" pos:end="36:58"><name pos:start="36:47" pos:end="36:58">stream_index</name></expr>]</index></name></expr></argument>, <argument pos:start="36:62" pos:end="36:64"><expr pos:start="36:62" pos:end="36:64"><name pos:start="36:62" pos:end="36:64">pos</name></expr></argument>, <argument pos:start="36:67" pos:end="36:75"><expr pos:start="36:67" pos:end="36:75"><name pos:start="36:67" pos:end="36:75">index_pts</name></expr></argument>,
                                   <argument pos:start="37:36" pos:end="37:49"><expr pos:start="37:36" pos:end="37:49"><name pos:start="37:36" pos:end="37:49"><name pos:start="37:36" pos:end="37:36">s</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:49">packet_size</name></name></expr></argument>, <argument pos:start="37:52" pos:end="37:52"><expr pos:start="37:52" pos:end="37:52"><literal type="number" pos:start="37:52" pos:end="37:52">0</literal></expr></argument>, <argument pos:start="37:55" pos:end="37:70"><expr pos:start="37:55" pos:end="37:70"><name pos:start="37:55" pos:end="37:70">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="38:17" pos:end="38:31"><expr pos:start="38:17" pos:end="38:30"><name pos:start="38:17" pos:end="38:24">last_pos</name> <operator pos:start="38:26" pos:end="38:26">=</operator> <name pos:start="38:28" pos:end="38:30">pos</name></expr>;</expr_stmt>
        <expr_stmt pos:start="39:9" pos:end="39:34"><expr pos:start="39:9" pos:end="39:33"><name pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:11">asf</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:23">index_read</name></name> <operator pos:start="39:25" pos:end="39:25">=</operator> <name pos:start="39:27" pos:end="39:29">ict</name> <operator pos:start="39:31" pos:end="39:31">&gt;</operator> <literal type="number" pos:start="39:33" pos:end="39:33">1</literal></expr>;</expr_stmt>
<label pos:start="40:1" pos:end="40:4"><name pos:start="40:1" pos:end="40:3">end</name>:</label>
<comment type="line" pos:start="41:1" pos:end="41:30">//     if (avio_feof(s-&gt;pb)) {</comment>
<comment type="line" pos:start="42:1" pos:end="42:19">//         ret = 0;</comment>
<comment type="line" pos:start="43:1" pos:end="43:8">//     }</comment>
    <expr_stmt pos:start="44:5" pos:end="44:44"><expr pos:start="44:5" pos:end="44:43"><call pos:start="44:5" pos:end="44:43"><name pos:start="44:5" pos:end="44:13">avio_seek</name><argument_list pos:start="44:14" pos:end="44:43">(<argument pos:start="44:15" pos:end="44:19"><expr pos:start="44:15" pos:end="44:19"><name pos:start="44:15" pos:end="44:19"><name pos:start="44:15" pos:end="44:15">s</name><operator pos:start="44:16" pos:end="44:17">-&gt;</operator><name pos:start="44:18" pos:end="44:19">pb</name></name></expr></argument>, <argument pos:start="44:22" pos:end="44:32"><expr pos:start="44:22" pos:end="44:32"><name pos:start="44:22" pos:end="44:32">current_pos</name></expr></argument>, <argument pos:start="44:35" pos:end="44:42"><expr pos:start="44:35" pos:end="44:42"><name pos:start="44:35" pos:end="44:42">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="45:5" pos:end="45:15">return <expr pos:start="45:12" pos:end="45:14"><name pos:start="45:12" pos:end="45:14">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></while></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
