<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7196.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:30">memory_region_del_eventfd</name><parameter_list pos:start="1:31" pos:end="11:48">(<parameter pos:start="1:32" pos:end="1:47"><decl pos:start="1:32" pos:end="1:47"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:43">MemoryRegion</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">mr</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:42"><decl pos:start="3:32" pos:end="3:42"><type pos:start="3:32" pos:end="3:42"><name pos:start="3:32" pos:end="3:37">hwaddr</name></type> <name pos:start="3:39" pos:end="3:42">addr</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:44"><decl pos:start="5:32" pos:end="5:44"><type pos:start="5:32" pos:end="5:44"><name pos:start="5:32" pos:end="5:39">unsigned</name></type> <name pos:start="5:41" pos:end="5:44">size</name></decl></parameter>,

                               <parameter pos:start="7:32" pos:end="7:46"><decl pos:start="7:32" pos:end="7:46"><type pos:start="7:32" pos:end="7:46"><name pos:start="7:32" pos:end="7:35">bool</name></type> <name pos:start="7:37" pos:end="7:46">match_data</name></decl></parameter>,

                               <parameter pos:start="9:32" pos:end="9:44"><decl pos:start="9:32" pos:end="9:44"><type pos:start="9:32" pos:end="9:44"><name pos:start="9:32" pos:end="9:39">uint64_t</name></type> <name pos:start="9:41" pos:end="9:44">data</name></decl></parameter>,

                               <parameter pos:start="11:32" pos:end="11:47"><decl pos:start="11:32" pos:end="11:47"><type pos:start="11:32" pos:end="11:47"><name pos:start="11:32" pos:end="11:44">EventNotifier</name> <modifier pos:start="11:46" pos:end="11:46">*</modifier></type><name pos:start="11:47" pos:end="11:47">e</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="63:1">{<block_content pos:start="15:5" pos:end="61:39">

    <decl_stmt pos:start="15:5" pos:end="27:6"><decl pos:start="15:5" pos:end="27:5"><type pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:25">MemoryRegionIoeventfd</name></type> <name pos:start="15:27" pos:end="15:30">mrfd</name> <init pos:start="15:32" pos:end="27:5">= <expr pos:start="15:34" pos:end="27:5"><block pos:start="15:34" pos:end="27:5">{

        <expr pos:start="17:9" pos:end="17:41"><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:19"><name pos:start="17:10" pos:end="17:13">addr</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:19">start</name></name> <operator pos:start="17:21" pos:end="17:21">=</operator> <call pos:start="17:23" pos:end="17:41"><name pos:start="17:23" pos:end="17:35">int128_make64</name><argument_list pos:start="17:36" pos:end="17:41">(<argument pos:start="17:37" pos:end="17:40"><expr pos:start="17:37" pos:end="17:40"><name pos:start="17:37" pos:end="17:40">addr</name></expr></argument>)</argument_list></call></expr>,

        <expr pos:start="19:9" pos:end="19:40"><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:18"><name pos:start="19:10" pos:end="19:13">addr</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:18">size</name></name> <operator pos:start="19:20" pos:end="19:20">=</operator> <call pos:start="19:22" pos:end="19:40"><name pos:start="19:22" pos:end="19:34">int128_make64</name><argument_list pos:start="19:35" pos:end="19:40">(<argument pos:start="19:36" pos:end="19:39"><expr pos:start="19:36" pos:end="19:39"><name pos:start="19:36" pos:end="19:39">size</name></expr></argument>)</argument_list></call></expr>,

        <expr pos:start="21:9" pos:end="21:32"><operator pos:start="21:9" pos:end="21:9">.</operator><name pos:start="21:10" pos:end="21:19">match_data</name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:32">match_data</name></expr>,

        <expr pos:start="23:9" pos:end="23:20"><operator pos:start="23:9" pos:end="23:9">.</operator><name pos:start="23:10" pos:end="23:13">data</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:20">data</name></expr>,

        <expr pos:start="25:9" pos:end="25:14"><operator pos:start="25:9" pos:end="25:9">.</operator><name pos:start="25:10" pos:end="25:10">e</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <name pos:start="25:14" pos:end="25:14">e</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:15"><decl pos:start="29:5" pos:end="29:14"><type pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:12">unsigned</name></type> <name pos:start="29:14" pos:end="29:14">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:44"><expr pos:start="33:5" pos:end="33:43"><call pos:start="33:5" pos:end="33:43"><name pos:start="33:5" pos:end="33:21">adjust_endianness</name><argument_list pos:start="33:22" pos:end="33:43">(<argument pos:start="33:23" pos:end="33:24"><expr pos:start="33:23" pos:end="33:24"><name pos:start="33:23" pos:end="33:24">mr</name></expr></argument>, <argument pos:start="33:27" pos:end="33:36"><expr pos:start="33:27" pos:end="33:36"><operator pos:start="33:27" pos:end="33:27">&amp;</operator><name pos:start="33:28" pos:end="33:36"><name pos:start="33:28" pos:end="33:31">mrfd</name><operator pos:start="33:32" pos:end="33:32">.</operator><name pos:start="33:33" pos:end="33:36">data</name></name></expr></argument>, <argument pos:start="33:39" pos:end="33:42"><expr pos:start="33:39" pos:end="33:42"><name pos:start="33:39" pos:end="33:42">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:38"><expr pos:start="35:5" pos:end="35:37"><call pos:start="35:5" pos:end="35:37"><name pos:start="35:5" pos:end="35:35">memory_region_transaction_begin</name><argument_list pos:start="35:36" pos:end="35:37">()</argument_list></call></expr>;</expr_stmt>

    <for pos:start="37:5" pos:end="45:5">for <control pos:start="37:9" pos:end="37:42">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:37"><expr pos:start="37:17" pos:end="37:36"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <name pos:start="37:21" pos:end="37:36"><name pos:start="37:21" pos:end="37:22">mr</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:36">ioeventfd_nb</name></name></expr>;</condition> <incr pos:start="37:39" pos:end="37:41"><expr pos:start="37:39" pos:end="37:41"><operator pos:start="37:39" pos:end="37:40">++</operator><name pos:start="37:41" pos:end="37:41">i</name></expr></incr>)</control> <block pos:start="37:44" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:9">

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:67">(<expr pos:start="39:13" pos:end="39:66"><call pos:start="39:13" pos:end="39:66"><name pos:start="39:13" pos:end="39:41">memory_region_ioeventfd_equal</name><argument_list pos:start="39:42" pos:end="39:66">(<argument pos:start="39:43" pos:end="39:46"><expr pos:start="39:43" pos:end="39:46"><name pos:start="39:43" pos:end="39:46">mrfd</name></expr></argument>, <argument pos:start="39:49" pos:end="39:65"><expr pos:start="39:49" pos:end="39:65"><name pos:start="39:49" pos:end="39:65"><name pos:start="39:49" pos:end="39:50">mr</name><operator pos:start="39:51" pos:end="39:52">-&gt;</operator><name pos:start="39:53" pos:end="39:62">ioeventfds</name><index pos:start="39:63" pos:end="39:65">[<expr pos:start="39:64" pos:end="39:64"><name pos:start="39:64" pos:end="39:64">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:69" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:18">

            <break pos:start="41:13" pos:end="41:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="47:5" pos:end="47:34"><expr pos:start="47:5" pos:end="47:33"><call pos:start="47:5" pos:end="47:33"><name pos:start="47:5" pos:end="47:10">assert</name><argument_list pos:start="47:11" pos:end="47:33">(<argument pos:start="47:12" pos:end="47:32"><expr pos:start="47:12" pos:end="47:32"><name pos:start="47:12" pos:end="47:12">i</name> <operator pos:start="47:14" pos:end="47:15">!=</operator> <name pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:18">mr</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:32">ioeventfd_nb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="51:66"><expr pos:start="49:5" pos:end="51:65"><call pos:start="49:5" pos:end="51:65"><name pos:start="49:5" pos:end="49:11">memmove</name><argument_list pos:start="49:12" pos:end="51:65">(<argument pos:start="49:13" pos:end="49:30"><expr pos:start="49:13" pos:end="49:30"><operator pos:start="49:13" pos:end="49:13">&amp;</operator><name pos:start="49:14" pos:end="49:30"><name pos:start="49:14" pos:end="49:15">mr</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:27">ioeventfds</name><index pos:start="49:28" pos:end="49:30">[<expr pos:start="49:29" pos:end="49:29"><name pos:start="49:29" pos:end="49:29">i</name></expr>]</index></name></expr></argument>, <argument pos:start="49:33" pos:end="49:52"><expr pos:start="49:33" pos:end="49:52"><operator pos:start="49:33" pos:end="49:33">&amp;</operator><name pos:start="49:34" pos:end="49:52"><name pos:start="49:34" pos:end="49:35">mr</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:47">ioeventfds</name><index pos:start="49:48" pos:end="49:52">[<expr pos:start="49:49" pos:end="49:51"><name pos:start="49:49" pos:end="49:49">i</name><operator pos:start="49:50" pos:end="49:50">+</operator><literal type="number" pos:start="49:51" pos:end="49:51">1</literal></expr>]</index></name></expr></argument>,

            <argument pos:start="51:13" pos:end="51:64"><expr pos:start="51:13" pos:end="51:64"><sizeof pos:start="51:13" pos:end="51:35">sizeof<argument_list pos:start="51:19" pos:end="51:35">(<argument pos:start="51:20" pos:end="51:34"><expr pos:start="51:20" pos:end="51:34"><operator pos:start="51:20" pos:end="51:20">*</operator><name pos:start="51:21" pos:end="51:34"><name pos:start="51:21" pos:end="51:22">mr</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:34">ioeventfds</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="51:37" pos:end="51:37">*</operator> <operator pos:start="51:39" pos:end="51:39">(</operator><name pos:start="51:40" pos:end="51:55"><name pos:start="51:40" pos:end="51:41">mr</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:55">ioeventfd_nb</name></name> <operator pos:start="51:57" pos:end="51:57">-</operator> <operator pos:start="51:59" pos:end="51:59">(</operator><name pos:start="51:60" pos:end="51:60">i</name><operator pos:start="51:61" pos:end="51:61">+</operator><literal type="number" pos:start="51:62" pos:end="51:62">1</literal><operator pos:start="51:63" pos:end="51:63">)</operator><operator pos:start="51:64" pos:end="51:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:23"><expr pos:start="53:5" pos:end="53:22"><operator pos:start="53:5" pos:end="53:6">--</operator><name pos:start="53:7" pos:end="53:22"><name pos:start="53:7" pos:end="53:8">mr</name><operator pos:start="53:9" pos:end="53:10">-&gt;</operator><name pos:start="53:11" pos:end="53:22">ioeventfd_nb</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="57:80"><expr pos:start="55:5" pos:end="57:79"><name pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:6">mr</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:18">ioeventfds</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <call pos:start="55:22" pos:end="57:79"><name pos:start="55:22" pos:end="55:30">g_realloc</name><argument_list pos:start="55:31" pos:end="57:79">(<argument pos:start="55:32" pos:end="55:45"><expr pos:start="55:32" pos:end="55:45"><name pos:start="55:32" pos:end="55:45"><name pos:start="55:32" pos:end="55:33">mr</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:45">ioeventfds</name></name></expr></argument>,

                                  <argument pos:start="57:35" pos:end="57:78"><expr pos:start="57:35" pos:end="57:78"><sizeof pos:start="57:35" pos:end="57:57">sizeof<argument_list pos:start="57:41" pos:end="57:57">(<argument pos:start="57:42" pos:end="57:56"><expr pos:start="57:42" pos:end="57:56"><operator pos:start="57:42" pos:end="57:42">*</operator><name pos:start="57:43" pos:end="57:56"><name pos:start="57:43" pos:end="57:44">mr</name><operator pos:start="57:45" pos:end="57:46">-&gt;</operator><name pos:start="57:47" pos:end="57:56">ioeventfds</name></name></expr></argument>)</argument_list></sizeof><operator pos:start="57:58" pos:end="57:58">*</operator><name pos:start="57:59" pos:end="57:74"><name pos:start="57:59" pos:end="57:60">mr</name><operator pos:start="57:61" pos:end="57:62">-&gt;</operator><name pos:start="57:63" pos:end="57:74">ioeventfd_nb</name></name> <operator pos:start="57:76" pos:end="57:76">+</operator> <literal type="number" pos:start="57:78" pos:end="57:78">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:44"><expr pos:start="59:5" pos:end="59:43"><name pos:start="59:5" pos:end="59:28">ioeventfd_update_pending</name> <operator pos:start="59:30" pos:end="59:31">|=</operator> <name pos:start="59:33" pos:end="59:43"><name pos:start="59:33" pos:end="59:34">mr</name><operator pos:start="59:35" pos:end="59:36">-&gt;</operator><name pos:start="59:37" pos:end="59:43">enabled</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:39"><expr pos:start="61:5" pos:end="61:38"><call pos:start="61:5" pos:end="61:38"><name pos:start="61:5" pos:end="61:36">memory_region_transaction_commit</name><argument_list pos:start="61:37" pos:end="61:38">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
