<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16769.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:32">spapr_rtas_device_tree_setup</name><parameter_list pos:start="1:33" pos:end="3:50">(<parameter pos:start="1:34" pos:end="1:42"><decl pos:start="1:34" pos:end="1:42"><type pos:start="1:34" pos:end="1:42"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">fdt</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:60"><decl pos:start="1:45" pos:end="1:60"><type pos:start="1:45" pos:end="1:60"><name pos:start="1:45" pos:end="1:50">hwaddr</name></type> <name pos:start="1:52" pos:end="1:60">rtas_addr</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:49"><decl pos:start="3:34" pos:end="3:49"><type pos:start="3:34" pos:end="3:49"><name pos:start="3:34" pos:end="3:39">hwaddr</name></type> <name pos:start="3:41" pos:end="3:49">rtas_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="109:1">{<block_content pos:start="7:5" pos:end="107:13">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:53"><expr pos:start="13:5" pos:end="13:52"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:52"><name pos:start="13:11" pos:end="13:25">fdt_add_mem_rsv</name><argument_list pos:start="13:26" pos:end="13:52">(<argument pos:start="13:27" pos:end="13:29"><expr pos:start="13:27" pos:end="13:29"><name pos:start="13:27" pos:end="13:29">fdt</name></expr></argument>, <argument pos:start="13:32" pos:end="13:40"><expr pos:start="13:32" pos:end="13:40"><name pos:start="13:32" pos:end="13:40">rtas_addr</name></expr></argument>, <argument pos:start="13:43" pos:end="13:51"><expr pos:start="13:43" pos:end="13:51"><name pos:start="13:43" pos:end="13:51">rtas_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">&lt;</operator> <literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>)</condition> <block pos:start="15:18" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:19">

        <expr_stmt pos:start="17:9" pos:end="19:35"><expr pos:start="17:9" pos:end="19:34"><call pos:start="17:9" pos:end="19:34"><name pos:start="17:9" pos:end="17:15">fprintf</name><argument_list pos:start="17:16" pos:end="19:34">(<argument pos:start="17:17" pos:end="17:22"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22">stderr</name></expr></argument>, <argument pos:start="17:25" pos:end="17:63"><expr pos:start="17:25" pos:end="17:63"><literal type="string" pos:start="17:25" pos:end="17:63">"Couldn't add RTAS reserve entry: %s\n"</literal></expr></argument>,

                <argument pos:start="19:17" pos:end="19:33"><expr pos:start="19:17" pos:end="19:33"><call pos:start="19:17" pos:end="19:33"><name pos:start="19:17" pos:end="19:28">fdt_strerror</name><argument_list pos:start="19:29" pos:end="19:33">(<argument pos:start="19:30" pos:end="19:32"><expr pos:start="19:30" pos:end="19:32"><name pos:start="19:30" pos:end="19:32">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="29:43"><expr pos:start="27:5" pos:end="29:42"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="29:42"><name pos:start="27:11" pos:end="27:31">qemu_fdt_setprop_cell</name><argument_list pos:start="27:32" pos:end="29:42">(<argument pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><name pos:start="27:33" pos:end="27:35">fdt</name></expr></argument>, <argument pos:start="27:38" pos:end="27:44"><expr pos:start="27:38" pos:end="27:44"><literal type="string" pos:start="27:38" pos:end="27:44">"/rtas"</literal></expr></argument>, <argument pos:start="27:47" pos:end="27:63"><expr pos:start="27:47" pos:end="27:63"><literal type="string" pos:start="27:47" pos:end="27:63">"linux,rtas-base"</literal></expr></argument>,

                                <argument pos:start="29:33" pos:end="29:41"><expr pos:start="29:33" pos:end="29:41"><name pos:start="29:33" pos:end="29:41">rtas_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:16">(<expr pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">&lt;</operator> <literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>)</condition> <block pos:start="31:18" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:19">

        <expr_stmt pos:start="33:9" pos:end="35:35"><expr pos:start="33:9" pos:end="35:34"><call pos:start="33:9" pos:end="35:34"><name pos:start="33:9" pos:end="33:15">fprintf</name><argument_list pos:start="33:16" pos:end="35:34">(<argument pos:start="33:17" pos:end="33:22"><expr pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:22">stderr</name></expr></argument>, <argument pos:start="33:25" pos:end="33:69"><expr pos:start="33:25" pos:end="33:69"><literal type="string" pos:start="33:25" pos:end="33:69">"Couldn't add linux,rtas-base property: %s\n"</literal></expr></argument>,

                <argument pos:start="35:17" pos:end="35:33"><expr pos:start="35:17" pos:end="35:33"><call pos:start="35:17" pos:end="35:33"><name pos:start="35:17" pos:end="35:28">fdt_strerror</name><argument_list pos:start="35:29" pos:end="35:33">(<argument pos:start="35:30" pos:end="35:32"><expr pos:start="35:30" pos:end="35:32"><name pos:start="35:30" pos:end="35:32">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:19">return <expr pos:start="37:16" pos:end="37:18"><name pos:start="37:16" pos:end="37:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="45:43"><expr pos:start="43:5" pos:end="45:42"><name pos:start="43:5" pos:end="43:7">ret</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="45:42"><name pos:start="43:11" pos:end="43:31">qemu_fdt_setprop_cell</name><argument_list pos:start="43:32" pos:end="45:42">(<argument pos:start="43:33" pos:end="43:35"><expr pos:start="43:33" pos:end="43:35"><name pos:start="43:33" pos:end="43:35">fdt</name></expr></argument>, <argument pos:start="43:38" pos:end="43:44"><expr pos:start="43:38" pos:end="43:44"><literal type="string" pos:start="43:38" pos:end="43:44">"/rtas"</literal></expr></argument>, <argument pos:start="43:47" pos:end="43:64"><expr pos:start="43:47" pos:end="43:64"><literal type="string" pos:start="43:47" pos:end="43:64">"linux,rtas-entry"</literal></expr></argument>,

                                <argument pos:start="45:33" pos:end="45:41"><expr pos:start="45:33" pos:end="45:41"><name pos:start="45:33" pos:end="45:41">rtas_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:16">(<expr pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">&lt;</operator> <literal type="number" pos:start="47:15" pos:end="47:15">0</literal></expr>)</condition> <block pos:start="47:18" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:19">

        <expr_stmt pos:start="49:9" pos:end="51:35"><expr pos:start="49:9" pos:end="51:34"><call pos:start="49:9" pos:end="51:34"><name pos:start="49:9" pos:end="49:15">fprintf</name><argument_list pos:start="49:16" pos:end="51:34">(<argument pos:start="49:17" pos:end="49:22"><expr pos:start="49:17" pos:end="49:22"><name pos:start="49:17" pos:end="49:22">stderr</name></expr></argument>, <argument pos:start="49:25" pos:end="49:70"><expr pos:start="49:25" pos:end="49:70"><literal type="string" pos:start="49:25" pos:end="49:70">"Couldn't add linux,rtas-entry property: %s\n"</literal></expr></argument>,

                <argument pos:start="51:17" pos:end="51:33"><expr pos:start="51:17" pos:end="51:33"><call pos:start="51:17" pos:end="51:33"><name pos:start="51:17" pos:end="51:28">fdt_strerror</name><argument_list pos:start="51:29" pos:end="51:33">(<argument pos:start="51:30" pos:end="51:32"><expr pos:start="51:30" pos:end="51:32"><name pos:start="51:30" pos:end="51:32">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:19">return <expr pos:start="53:16" pos:end="53:18"><name pos:start="53:16" pos:end="53:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="61:43"><expr pos:start="59:5" pos:end="61:42"><name pos:start="59:5" pos:end="59:7">ret</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <call pos:start="59:11" pos:end="61:42"><name pos:start="59:11" pos:end="59:31">qemu_fdt_setprop_cell</name><argument_list pos:start="59:32" pos:end="61:42">(<argument pos:start="59:33" pos:end="59:35"><expr pos:start="59:33" pos:end="59:35"><name pos:start="59:33" pos:end="59:35">fdt</name></expr></argument>, <argument pos:start="59:38" pos:end="59:44"><expr pos:start="59:38" pos:end="59:44"><literal type="string" pos:start="59:38" pos:end="59:44">"/rtas"</literal></expr></argument>, <argument pos:start="59:47" pos:end="59:57"><expr pos:start="59:47" pos:end="59:57"><literal type="string" pos:start="59:47" pos:end="59:57">"rtas-size"</literal></expr></argument>,

                                <argument pos:start="61:33" pos:end="61:41"><expr pos:start="61:33" pos:end="61:41"><name pos:start="61:33" pos:end="61:41">rtas_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="71:5"><if pos:start="63:5" pos:end="71:5">if <condition pos:start="63:8" pos:end="63:16">(<expr pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">&lt;</operator> <literal type="number" pos:start="63:15" pos:end="63:15">0</literal></expr>)</condition> <block pos:start="63:18" pos:end="71:5">{<block_content pos:start="65:9" pos:end="69:19">

        <expr_stmt pos:start="65:9" pos:end="67:35"><expr pos:start="65:9" pos:end="67:34"><call pos:start="65:9" pos:end="67:34"><name pos:start="65:9" pos:end="65:15">fprintf</name><argument_list pos:start="65:16" pos:end="67:34">(<argument pos:start="65:17" pos:end="65:22"><expr pos:start="65:17" pos:end="65:22"><name pos:start="65:17" pos:end="65:22">stderr</name></expr></argument>, <argument pos:start="65:25" pos:end="65:63"><expr pos:start="65:25" pos:end="65:63"><literal type="string" pos:start="65:25" pos:end="65:63">"Couldn't add rtas-size property: %s\n"</literal></expr></argument>,

                <argument pos:start="67:17" pos:end="67:33"><expr pos:start="67:17" pos:end="67:33"><call pos:start="67:17" pos:end="67:33"><name pos:start="67:17" pos:end="67:28">fdt_strerror</name><argument_list pos:start="67:29" pos:end="67:33">(<argument pos:start="67:30" pos:end="67:32"><expr pos:start="67:30" pos:end="67:32"><name pos:start="67:30" pos:end="67:32">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:19">return <expr pos:start="69:16" pos:end="69:18"><name pos:start="69:16" pos:end="69:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="75:5" pos:end="105:5">for <control pos:start="75:9" pos:end="75:35">(<init pos:start="75:10" pos:end="75:15"><expr pos:start="75:10" pos:end="75:14"><name pos:start="75:10" pos:end="75:10">i</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <literal type="number" pos:start="75:14" pos:end="75:14">0</literal></expr>;</init> <condition pos:start="75:17" pos:end="75:30"><expr pos:start="75:17" pos:end="75:29"><name pos:start="75:17" pos:end="75:17">i</name> <operator pos:start="75:19" pos:end="75:19">&lt;</operator> <name pos:start="75:21" pos:end="75:29">TOKEN_MAX</name></expr>;</condition> <incr pos:start="75:32" pos:end="75:34"><expr pos:start="75:32" pos:end="75:34"><name pos:start="75:32" pos:end="75:32">i</name><operator pos:start="75:33" pos:end="75:34">++</operator></expr></incr>)</control> <block pos:start="75:37" pos:end="105:5">{<block_content pos:start="77:9" pos:end="101:9">

        <decl_stmt pos:start="77:9" pos:end="77:48"><decl pos:start="77:9" pos:end="77:47"><type pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:24"><name pos:start="77:9" pos:end="77:14">struct</name> <name pos:start="77:16" pos:end="77:24">rtas_call</name></name> <modifier pos:start="77:26" pos:end="77:26">*</modifier></type><name pos:start="77:27" pos:end="77:30">call</name> <init pos:start="77:32" pos:end="77:47">= <expr pos:start="77:34" pos:end="77:47"><operator pos:start="77:34" pos:end="77:34">&amp;</operator><name pos:start="77:35" pos:end="77:47"><name pos:start="77:35" pos:end="77:44">rtas_table</name><index pos:start="77:45" pos:end="77:47">[<expr pos:start="77:46" pos:end="77:46"><name pos:start="77:46" pos:end="77:46">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="81:9" pos:end="85:9"><if pos:start="81:9" pos:end="85:9">if <condition pos:start="81:12" pos:end="81:24">(<expr pos:start="81:13" pos:end="81:23"><operator pos:start="81:13" pos:end="81:13">!</operator><name pos:start="81:14" pos:end="81:23"><name pos:start="81:14" pos:end="81:17">call</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:23">name</name></name></expr>)</condition> <block pos:start="81:26" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:21">

            <continue pos:start="83:13" pos:end="83:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="89:9" pos:end="91:52"><expr pos:start="89:9" pos:end="91:51"><name pos:start="89:9" pos:end="89:11">ret</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="91:51"><name pos:start="89:15" pos:end="89:35">qemu_fdt_setprop_cell</name><argument_list pos:start="89:36" pos:end="91:51">(<argument pos:start="89:37" pos:end="89:39"><expr pos:start="89:37" pos:end="89:39"><name pos:start="89:37" pos:end="89:39">fdt</name></expr></argument>, <argument pos:start="89:42" pos:end="89:48"><expr pos:start="89:42" pos:end="89:48"><literal type="string" pos:start="89:42" pos:end="89:48">"/rtas"</literal></expr></argument>, <argument pos:start="89:51" pos:end="89:60"><expr pos:start="89:51" pos:end="89:60"><name pos:start="89:51" pos:end="89:60"><name pos:start="89:51" pos:end="89:54">call</name><operator pos:start="89:55" pos:end="89:56">-&gt;</operator><name pos:start="89:57" pos:end="89:60">name</name></name></expr></argument>,

                                    <argument pos:start="91:37" pos:end="91:50"><expr pos:start="91:37" pos:end="91:50"><name pos:start="91:37" pos:end="91:37">i</name> <operator pos:start="91:39" pos:end="91:39">+</operator> <name pos:start="91:41" pos:end="91:50">TOKEN_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="101:9"><if pos:start="93:9" pos:end="101:9">if <condition pos:start="93:12" pos:end="93:20">(<expr pos:start="93:13" pos:end="93:19"><name pos:start="93:13" pos:end="93:15">ret</name> <operator pos:start="93:17" pos:end="93:17">&lt;</operator> <literal type="number" pos:start="93:19" pos:end="93:19">0</literal></expr>)</condition> <block pos:start="93:22" pos:end="101:9">{<block_content pos:start="95:13" pos:end="99:23">

            <expr_stmt pos:start="95:13" pos:end="97:51"><expr pos:start="95:13" pos:end="97:50"><call pos:start="95:13" pos:end="97:50"><name pos:start="95:13" pos:end="95:19">fprintf</name><argument_list pos:start="95:20" pos:end="97:50">(<argument pos:start="95:21" pos:end="95:26"><expr pos:start="95:21" pos:end="95:26"><name pos:start="95:21" pos:end="95:26">stderr</name></expr></argument>, <argument pos:start="95:29" pos:end="95:66"><expr pos:start="95:29" pos:end="95:66"><literal type="string" pos:start="95:29" pos:end="95:66">"Couldn't add rtas token for %s: %s\n"</literal></expr></argument>,

                    <argument pos:start="97:21" pos:end="97:30"><expr pos:start="97:21" pos:end="97:30"><name pos:start="97:21" pos:end="97:30"><name pos:start="97:21" pos:end="97:24">call</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:30">name</name></name></expr></argument>, <argument pos:start="97:33" pos:end="97:49"><expr pos:start="97:33" pos:end="97:49"><call pos:start="97:33" pos:end="97:49"><name pos:start="97:33" pos:end="97:44">fdt_strerror</name><argument_list pos:start="97:45" pos:end="97:49">(<argument pos:start="97:46" pos:end="97:48"><expr pos:start="97:46" pos:end="97:48"><name pos:start="97:46" pos:end="97:48">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="99:13" pos:end="99:23">return <expr pos:start="99:20" pos:end="99:22"><name pos:start="99:20" pos:end="99:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



    </block_content>}</block></for>

    <return pos:start="107:5" pos:end="107:13">return <expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
