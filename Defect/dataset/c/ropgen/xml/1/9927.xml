<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9927.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:39">test_keyval_visit_alternate</name><parameter_list pos:start="1:40" pos:end="1:45">(<parameter pos:start="1:41" pos:end="1:44"><decl pos:start="1:41" pos:end="1:44"><type pos:start="1:41" pos:end="1:44"><name pos:start="1:41" pos:end="1:44">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:18">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:14">err</name> <init pos:start="5:16" pos:end="5:21">= <expr pos:start="5:18" pos:end="5:21"><name pos:start="5:18" pos:end="5:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">Visitor</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">QDict</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:16">qdict</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">AltNumStr</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:18">ans</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">AltNumInt</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:18">ani</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="23:7">/*

     * Can't do scalar alternate variants other than string.  You get

     * the string variant if there is one, else an error.

     */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:56"><expr pos:start="25:5" pos:end="25:55"><name pos:start="25:5" pos:end="25:9">qdict</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:55"><name pos:start="25:13" pos:end="25:24">keyval_parse</name><argument_list pos:start="25:25" pos:end="25:55">(<argument pos:start="25:26" pos:end="25:34"><expr pos:start="25:26" pos:end="25:34"><literal type="string" pos:start="25:26" pos:end="25:34">"a=1,b=2"</literal></expr></argument>, <argument pos:start="25:37" pos:end="25:40"><expr pos:start="25:37" pos:end="25:40"><name pos:start="25:37" pos:end="25:40">NULL</name></expr></argument>, <argument pos:start="25:43" pos:end="25:54"><expr pos:start="25:43" pos:end="25:54"><operator pos:start="25:43" pos:end="25:43">&amp;</operator><name pos:start="25:44" pos:end="25:54">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:57"><expr pos:start="27:5" pos:end="27:56"><name pos:start="27:5" pos:end="27:5">v</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <call pos:start="27:9" pos:end="27:56"><name pos:start="27:9" pos:end="27:40">qobject_input_visitor_new_keyval</name><argument_list pos:start="27:41" pos:end="27:56">(<argument pos:start="27:42" pos:end="27:55"><expr pos:start="27:42" pos:end="27:55"><call pos:start="27:42" pos:end="27:55"><name pos:start="27:42" pos:end="27:48">QOBJECT</name><argument_list pos:start="27:49" pos:end="27:55">(<argument pos:start="27:50" pos:end="27:54"><expr pos:start="27:50" pos:end="27:54"><name pos:start="27:50" pos:end="27:54">qdict</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:19"><expr pos:start="29:5" pos:end="29:18"><call pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:11">QDECREF</name><argument_list pos:start="29:12" pos:end="29:18">(<argument pos:start="29:13" pos:end="29:17"><expr pos:start="29:13" pos:end="29:17"><name pos:start="29:13" pos:end="29:17">qdict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:55"><expr pos:start="31:5" pos:end="31:54"><call pos:start="31:5" pos:end="31:54"><name pos:start="31:5" pos:end="31:22">visit_start_struct</name><argument_list pos:start="31:23" pos:end="31:54">(<argument pos:start="31:24" pos:end="31:24"><expr pos:start="31:24" pos:end="31:24"><name pos:start="31:24" pos:end="31:24">v</name></expr></argument>, <argument pos:start="31:27" pos:end="31:30"><expr pos:start="31:27" pos:end="31:30"><name pos:start="31:27" pos:end="31:30">NULL</name></expr></argument>, <argument pos:start="31:33" pos:end="31:36"><expr pos:start="31:33" pos:end="31:36"><name pos:start="31:33" pos:end="31:36">NULL</name></expr></argument>, <argument pos:start="31:39" pos:end="31:39"><expr pos:start="31:39" pos:end="31:39"><literal type="number" pos:start="31:39" pos:end="31:39">0</literal></expr></argument>, <argument pos:start="31:42" pos:end="31:53"><expr pos:start="31:42" pos:end="31:53"><operator pos:start="31:42" pos:end="31:42">&amp;</operator><name pos:start="31:43" pos:end="31:53">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:53"><expr pos:start="33:5" pos:end="33:52"><call pos:start="33:5" pos:end="33:52"><name pos:start="33:5" pos:end="33:24">visit_type_AltNumStr</name><argument_list pos:start="33:25" pos:end="33:52">(<argument pos:start="33:26" pos:end="33:26"><expr pos:start="33:26" pos:end="33:26"><name pos:start="33:26" pos:end="33:26">v</name></expr></argument>, <argument pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><literal type="string" pos:start="33:29" pos:end="33:31">"a"</literal></expr></argument>, <argument pos:start="33:34" pos:end="33:37"><expr pos:start="33:34" pos:end="33:37"><operator pos:start="33:34" pos:end="33:34">&amp;</operator><name pos:start="33:35" pos:end="33:37">ans</name></expr></argument>, <argument pos:start="33:40" pos:end="33:51"><expr pos:start="33:40" pos:end="33:51"><operator pos:start="33:40" pos:end="33:40">&amp;</operator><name pos:start="33:41" pos:end="33:51">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:50"><expr pos:start="35:5" pos:end="35:49"><call pos:start="35:5" pos:end="35:49"><name pos:start="35:5" pos:end="35:19">g_assert_cmpint</name><argument_list pos:start="35:20" pos:end="35:49">(<argument pos:start="35:21" pos:end="35:29"><expr pos:start="35:21" pos:end="35:29"><name pos:start="35:21" pos:end="35:29"><name pos:start="35:21" pos:end="35:23">ans</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:29">type</name></name></expr></argument>, <argument pos:start="35:32" pos:end="35:33"><expr pos:start="35:32" pos:end="35:33"><operator pos:start="35:32" pos:end="35:33">==</operator></expr></argument>, <argument pos:start="35:36" pos:end="35:48"><expr pos:start="35:36" pos:end="35:48"><name pos:start="35:36" pos:end="35:48">QTYPE_QSTRING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:39"><expr pos:start="37:5" pos:end="37:38"><call pos:start="37:5" pos:end="37:38"><name pos:start="37:5" pos:end="37:19">g_assert_cmpstr</name><argument_list pos:start="37:20" pos:end="37:38">(<argument pos:start="37:21" pos:end="37:28"><expr pos:start="37:21" pos:end="37:28"><name pos:start="37:21" pos:end="37:28"><name pos:start="37:21" pos:end="37:23">ans</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:26">u</name><operator pos:start="37:27" pos:end="37:27">.</operator><name pos:start="37:28" pos:end="37:28">s</name></name></expr></argument>, <argument pos:start="37:31" pos:end="37:32"><expr pos:start="37:31" pos:end="37:32"><operator pos:start="37:31" pos:end="37:32">==</operator></expr></argument>, <argument pos:start="37:35" pos:end="37:37"><expr pos:start="37:35" pos:end="37:37"><literal type="string" pos:start="37:35" pos:end="37:37">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><call pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:23">qapi_free_AltNumStr</name><argument_list pos:start="39:24" pos:end="39:28">(<argument pos:start="39:25" pos:end="39:27"><expr pos:start="39:25" pos:end="39:27"><name pos:start="39:25" pos:end="39:27">ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:45"><expr pos:start="41:5" pos:end="41:44"><call pos:start="41:5" pos:end="41:44"><name pos:start="41:5" pos:end="41:24">visit_type_AltNumInt</name><argument_list pos:start="41:25" pos:end="41:44">(<argument pos:start="41:26" pos:end="41:26"><expr pos:start="41:26" pos:end="41:26"><name pos:start="41:26" pos:end="41:26">v</name></expr></argument>, <argument pos:start="41:29" pos:end="41:31"><expr pos:start="41:29" pos:end="41:31"><literal type="string" pos:start="41:29" pos:end="41:31">"a"</literal></expr></argument>, <argument pos:start="41:34" pos:end="41:37"><expr pos:start="41:34" pos:end="41:37"><operator pos:start="41:34" pos:end="41:34">&amp;</operator><name pos:start="41:35" pos:end="41:37">ani</name></expr></argument>, <argument pos:start="41:40" pos:end="41:43"><expr pos:start="41:40" pos:end="41:43"><operator pos:start="41:40" pos:end="41:40">&amp;</operator><name pos:start="41:41" pos:end="41:43">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:30"><expr pos:start="43:5" pos:end="43:29"><call pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:23">error_free_or_abort</name><argument_list pos:start="43:24" pos:end="43:29">(<argument pos:start="43:25" pos:end="43:28"><expr pos:start="43:25" pos:end="43:28"><operator pos:start="43:25" pos:end="43:25">&amp;</operator><name pos:start="43:26" pos:end="43:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:30"><expr pos:start="45:5" pos:end="45:29"><call pos:start="45:5" pos:end="45:29"><name pos:start="45:5" pos:end="45:20">visit_end_struct</name><argument_list pos:start="45:21" pos:end="45:29">(<argument pos:start="45:22" pos:end="45:22"><expr pos:start="45:22" pos:end="45:22"><name pos:start="45:22" pos:end="45:22">v</name></expr></argument>, <argument pos:start="45:25" pos:end="45:28"><expr pos:start="45:25" pos:end="45:28"><name pos:start="45:25" pos:end="45:28">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:18"><expr pos:start="47:5" pos:end="47:17"><call pos:start="47:5" pos:end="47:17"><name pos:start="47:5" pos:end="47:14">visit_free</name><argument_list pos:start="47:15" pos:end="47:17">(<argument pos:start="47:16" pos:end="47:16"><expr pos:start="47:16" pos:end="47:16"><name pos:start="47:16" pos:end="47:16">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
