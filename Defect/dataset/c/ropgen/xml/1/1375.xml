<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1375.c" pos:tabs="8"><function pos:start="1:1" pos:end="337:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">svq3_decode_frame</name><parameter_list pos:start="1:29" pos:end="5:45">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:39"><decl pos:start="3:30" pos:end="3:39"><type pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:33">void</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">data</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:44">int</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:55">data_size</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:44"><decl pos:start="5:30" pos:end="5:44"><type pos:start="5:30" pos:end="5:44"><name pos:start="5:30" pos:end="5:37">AVPacket</name> <modifier pos:start="5:39" pos:end="5:39">*</modifier></type><name pos:start="5:40" pos:end="5:44">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="337:1">{<block_content pos:start="9:5" pos:end="335:20">

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">SVQ3Context</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:21">svq3</name> <init pos:start="9:23" pos:end="9:40">= <expr pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:29">avctx</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">H264Context</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:18">h</name> <init pos:start="11:20" pos:end="11:29">= <expr pos:start="11:22" pos:end="11:29"><operator pos:start="11:22" pos:end="11:22">&amp;</operator><name pos:start="11:23" pos:end="11:29"><name pos:start="11:23" pos:end="11:26">svq3</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:29">h</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">MpegEncContext</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:21">s</name> <init pos:start="13:23" pos:end="13:29">= <expr pos:start="13:25" pos:end="13:29"><operator pos:start="13:25" pos:end="13:25">&amp;</operator><name pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:26">h</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">buf_size</name> <init pos:start="15:18" pos:end="15:30">= <expr pos:start="15:20" pos:end="15:30"><name pos:start="15:20" pos:end="15:30"><name pos:start="15:20" pos:end="15:24">avpkt</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">m</name></decl>, <decl pos:start="17:12" pos:end="17:18"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:18">mb_type</name></decl>, <decl pos:start="17:21" pos:end="17:24"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:21" pos:end="17:24">left</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:16">buf</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:39">/* special case for last picture */</comment>

    <if_stmt pos:start="25:5" pos:end="39:5"><if pos:start="25:5" pos:end="39:5">if <condition pos:start="25:8" pos:end="25:22">(<expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:16">buf_size</name> <operator pos:start="25:18" pos:end="25:19">==</operator> <literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr>)</condition> <block pos:start="25:24" pos:end="39:5">{<block_content pos:start="27:9" pos:end="37:17">

        <if_stmt pos:start="27:9" pos:end="35:9"><if pos:start="27:9" pos:end="35:9">if <condition pos:start="27:12" pos:end="27:49">(<expr pos:start="27:13" pos:end="27:48"><name pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:31">next_picture_ptr</name></name> <operator pos:start="27:33" pos:end="27:34">&amp;&amp;</operator> <operator pos:start="27:36" pos:end="27:36">!</operator><name pos:start="27:37" pos:end="27:48"><name pos:start="27:37" pos:end="27:37">s</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:48">low_delay</name></name></expr>)</condition> <block pos:start="27:51" pos:end="35:9">{<block_content pos:start="29:13" pos:end="33:41">

            <expr_stmt pos:start="29:13" pos:end="29:62"><expr pos:start="29:13" pos:end="29:61"><operator pos:start="29:13" pos:end="29:13">*</operator><operator pos:start="29:14" pos:end="29:14">(</operator><name pos:start="29:15" pos:end="29:21">AVFrame</name> <operator pos:start="29:23" pos:end="29:23">*</operator><operator pos:start="29:24" pos:end="29:24">)</operator> <name pos:start="29:26" pos:end="29:29">data</name> <operator pos:start="29:31" pos:end="29:31">=</operator> <operator pos:start="29:33" pos:end="29:33">*</operator><operator pos:start="29:34" pos:end="29:34">(</operator><name pos:start="29:35" pos:end="29:41">AVFrame</name> <operator pos:start="29:43" pos:end="29:43">*</operator><operator pos:start="29:44" pos:end="29:44">)</operator> <operator pos:start="29:46" pos:end="29:46">&amp;</operator><name pos:start="29:47" pos:end="29:61"><name pos:start="29:47" pos:end="29:47">s</name><operator pos:start="29:48" pos:end="29:49">-&gt;</operator><name pos:start="29:50" pos:end="29:61">next_picture</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:39"><expr pos:start="31:13" pos:end="31:38"><name pos:start="31:13" pos:end="31:31"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:31">next_picture_ptr</name></name> <operator pos:start="31:33" pos:end="31:33">=</operator> <name pos:start="31:35" pos:end="31:38">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:41"><expr pos:start="33:13" pos:end="33:40"><operator pos:start="33:13" pos:end="33:13">*</operator><name pos:start="33:14" pos:end="33:22">data_size</name> <operator pos:start="33:24" pos:end="33:24">=</operator> <sizeof pos:start="33:26" pos:end="33:40">sizeof<argument_list pos:start="33:32" pos:end="33:40">(<argument pos:start="33:33" pos:end="33:39"><expr pos:start="33:33" pos:end="33:39"><name pos:start="33:33" pos:end="33:39">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:37"><expr pos:start="43:5" pos:end="43:36"><name pos:start="43:5" pos:end="43:11"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:11">mb_x</name></name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:21"><name pos:start="43:15" pos:end="43:15">s</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:21">mb_y</name></name> <operator pos:start="43:23" pos:end="43:23">=</operator> <name pos:start="43:25" pos:end="43:32"><name pos:start="43:25" pos:end="43:25">h</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:32">mb_xy</name></name> <operator pos:start="43:34" pos:end="43:34">=</operator> <literal type="number" pos:start="43:36" pos:end="43:36">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="65:5"><if pos:start="47:5" pos:end="61:5">if <condition pos:start="47:8" pos:end="47:28">(<expr pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:12">svq3</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:27">watermark_key</name></name></expr>)</condition> <block pos:start="47:30" pos:end="61:5">{<block_content pos:start="49:9" pos:end="59:24">

        <expr_stmt pos:start="49:9" pos:end="51:75"><expr pos:start="49:9" pos:end="51:74"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:12">svq3</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:17">buf</name></name> <operator pos:start="49:19" pos:end="49:19">=</operator> <call pos:start="49:21" pos:end="51:74"><name pos:start="49:21" pos:end="49:35">av_fast_realloc</name><argument_list pos:start="49:36" pos:end="51:74">(<argument pos:start="49:37" pos:end="49:45"><expr pos:start="49:37" pos:end="49:45"><name pos:start="49:37" pos:end="49:45"><name pos:start="49:37" pos:end="49:40">svq3</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:45">buf</name></name></expr></argument>, <argument pos:start="49:48" pos:end="49:62"><expr pos:start="49:48" pos:end="49:62"><operator pos:start="49:48" pos:end="49:48">&amp;</operator><name pos:start="49:49" pos:end="49:62"><name pos:start="49:49" pos:end="49:52">svq3</name><operator pos:start="49:53" pos:end="49:54">-&gt;</operator><name pos:start="49:55" pos:end="49:62">buf_size</name></name></expr></argument>,

                                    <argument pos:start="51:37" pos:end="51:73"><expr pos:start="51:37" pos:end="51:73"><name pos:start="51:37" pos:end="51:44">buf_size</name><operator pos:start="51:45" pos:end="51:45">+</operator><name pos:start="51:46" pos:end="51:73">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="55:35"><if pos:start="53:9" pos:end="55:35">if <condition pos:start="53:12" pos:end="53:23">(<expr pos:start="53:13" pos:end="53:22"><operator pos:start="53:13" pos:end="53:13">!</operator><name pos:start="53:14" pos:end="53:22"><name pos:start="53:14" pos:end="53:17">svq3</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:22">buf</name></name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:35"><block_content pos:start="55:13" pos:end="55:35">

            <return pos:start="55:13" pos:end="55:35">return <expr pos:start="55:20" pos:end="55:34"><call pos:start="55:20" pos:end="55:34"><name pos:start="55:20" pos:end="55:26">AVERROR</name><argument_list pos:start="55:27" pos:end="55:34">(<argument pos:start="55:28" pos:end="55:33"><expr pos:start="55:28" pos:end="55:33"><name pos:start="55:28" pos:end="55:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:49"><expr pos:start="57:9" pos:end="57:48"><call pos:start="57:9" pos:end="57:48"><name pos:start="57:9" pos:end="57:14">memcpy</name><argument_list pos:start="57:15" pos:end="57:48">(<argument pos:start="57:16" pos:end="57:24"><expr pos:start="57:16" pos:end="57:24"><name pos:start="57:16" pos:end="57:24"><name pos:start="57:16" pos:end="57:19">svq3</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:24">buf</name></name></expr></argument>, <argument pos:start="57:27" pos:end="57:37"><expr pos:start="57:27" pos:end="57:37"><name pos:start="57:27" pos:end="57:37"><name pos:start="57:27" pos:end="57:31">avpkt</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:37">data</name></name></expr></argument>, <argument pos:start="57:40" pos:end="57:47"><expr pos:start="57:40" pos:end="57:47"><name pos:start="57:40" pos:end="57:47">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:24"><expr pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:11">buf</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <name pos:start="59:15" pos:end="59:23"><name pos:start="59:15" pos:end="59:18">svq3</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:23">buf</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="61:7" pos:end="65:5">else <block pos:start="61:12" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:26">

        <expr_stmt pos:start="63:9" pos:end="63:26"><expr pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:11">buf</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <name pos:start="63:15" pos:end="63:25"><name pos:start="63:15" pos:end="63:19">avpkt</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:25">data</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:43"><expr pos:start="69:5" pos:end="69:42"><call pos:start="69:5" pos:end="69:42"><name pos:start="69:5" pos:end="69:17">init_get_bits</name><argument_list pos:start="69:18" pos:end="69:42">(<argument pos:start="69:19" pos:end="69:24"><expr pos:start="69:19" pos:end="69:24"><operator pos:start="69:19" pos:end="69:19">&amp;</operator><name pos:start="69:20" pos:end="69:24"><name pos:start="69:20" pos:end="69:20">s</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:24">gb</name></name></expr></argument>, <argument pos:start="69:27" pos:end="69:29"><expr pos:start="69:27" pos:end="69:29"><name pos:start="69:27" pos:end="69:29">buf</name></expr></argument>, <argument pos:start="69:32" pos:end="69:41"><expr pos:start="69:32" pos:end="69:41"><literal type="number" pos:start="69:32" pos:end="69:32">8</literal><operator pos:start="69:33" pos:end="69:33">*</operator><name pos:start="69:34" pos:end="69:41">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="75:18"><if pos:start="73:5" pos:end="75:18">if <condition pos:start="73:8" pos:end="73:40">(<expr pos:start="73:9" pos:end="73:39"><call pos:start="73:9" pos:end="73:39"><name pos:start="73:9" pos:end="73:32">svq3_decode_slice_header</name><argument_list pos:start="73:33" pos:end="73:39">(<argument pos:start="73:34" pos:end="73:38"><expr pos:start="73:34" pos:end="73:38"><name pos:start="73:34" pos:end="73:38">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:18"><block_content pos:start="75:9" pos:end="75:18">

        <return pos:start="75:9" pos:end="75:18">return <expr pos:start="75:16" pos:end="75:17"><operator pos:start="75:16" pos:end="75:16">-</operator><literal type="number" pos:start="75:17" pos:end="75:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:33"><expr pos:start="79:5" pos:end="79:32"><name pos:start="79:5" pos:end="79:16"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:16">pict_type</name></name> <operator pos:start="79:18" pos:end="79:18">=</operator> <name pos:start="79:20" pos:end="79:32"><name pos:start="79:20" pos:end="79:20">h</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:32">slice_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:37"><expr pos:start="81:5" pos:end="81:36"><name pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:21">picture_number</name></name> <operator pos:start="81:23" pos:end="81:23">=</operator> <name pos:start="81:25" pos:end="81:36"><name pos:start="81:25" pos:end="81:25">h</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:36">slice_num</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="85:5" pos:end="93:5"><if pos:start="85:5" pos:end="93:5">if <condition pos:start="85:8" pos:end="85:40">(<expr pos:start="85:9" pos:end="85:39"><name pos:start="85:9" pos:end="85:20"><name pos:start="85:9" pos:end="85:13">avctx</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:20">debug</name></name><operator pos:start="85:21" pos:end="85:21">&amp;</operator><name pos:start="85:22" pos:end="85:39">FF_DEBUG_PICT_INFO</name></expr>)</condition><block pos:start="85:41" pos:end="93:5">{<block_content pos:start="87:9" pos:end="91:59">

        <expr_stmt pos:start="87:9" pos:end="91:59"><expr pos:start="87:9" pos:end="91:58"><call pos:start="87:9" pos:end="91:58"><name pos:start="87:9" pos:end="87:14">av_log</name><argument_list pos:start="87:15" pos:end="91:58">(<argument pos:start="87:16" pos:end="87:25"><expr pos:start="87:16" pos:end="87:25"><name pos:start="87:16" pos:end="87:25"><name pos:start="87:16" pos:end="87:16">h</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:19">s</name><operator pos:start="87:20" pos:end="87:20">.</operator><name pos:start="87:21" pos:end="87:25">avctx</name></name></expr></argument>, <argument pos:start="87:28" pos:end="87:39"><expr pos:start="87:28" pos:end="87:39"><name pos:start="87:28" pos:end="87:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="87:42" pos:end="87:93"><expr pos:start="87:42" pos:end="87:93"><literal type="string" pos:start="87:42" pos:end="87:93">"%c hpel:%d, tpel:%d aqp:%d qp:%d, slice_num:%02X\n"</literal></expr></argument>,

               <argument pos:start="89:16" pos:end="89:53"><expr pos:start="89:16" pos:end="89:53"><call pos:start="89:16" pos:end="89:53"><name pos:start="89:16" pos:end="89:39">av_get_picture_type_char</name><argument_list pos:start="89:40" pos:end="89:53">(<argument pos:start="89:41" pos:end="89:52"><expr pos:start="89:41" pos:end="89:52"><name pos:start="89:41" pos:end="89:52"><name pos:start="89:41" pos:end="89:41">s</name><operator pos:start="89:42" pos:end="89:43">-&gt;</operator><name pos:start="89:44" pos:end="89:52">pict_type</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="89:56" pos:end="89:73"><expr pos:start="89:56" pos:end="89:73"><name pos:start="89:56" pos:end="89:73"><name pos:start="89:56" pos:end="89:59">svq3</name><operator pos:start="89:60" pos:end="89:61">-&gt;</operator><name pos:start="89:62" pos:end="89:73">halfpel_flag</name></name></expr></argument>, <argument pos:start="89:76" pos:end="89:94"><expr pos:start="89:76" pos:end="89:94"><name pos:start="89:76" pos:end="89:94"><name pos:start="89:76" pos:end="89:79">svq3</name><operator pos:start="89:80" pos:end="89:81">-&gt;</operator><name pos:start="89:82" pos:end="89:94">thirdpel_flag</name></name></expr></argument>,

               <argument pos:start="91:16" pos:end="91:32"><expr pos:start="91:16" pos:end="91:32"><name pos:start="91:16" pos:end="91:32"><name pos:start="91:16" pos:end="91:16">s</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:32">adaptive_quant</name></name></expr></argument>, <argument pos:start="91:35" pos:end="91:43"><expr pos:start="91:35" pos:end="91:43"><name pos:start="91:35" pos:end="91:43"><name pos:start="91:35" pos:end="91:35">s</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:43">qscale</name></name></expr></argument>, <argument pos:start="91:46" pos:end="91:57"><expr pos:start="91:46" pos:end="91:57"><name pos:start="91:46" pos:end="91:57"><name pos:start="91:46" pos:end="91:46">h</name><operator pos:start="91:47" pos:end="91:48">-&gt;</operator><name pos:start="91:49" pos:end="91:57">slice_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:32">/* for skipping the frame */</comment>

    <expr_stmt pos:start="99:5" pos:end="99:48"><expr pos:start="99:5" pos:end="99:47"><name pos:start="99:5" pos:end="99:32"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:22">current_picture</name><operator pos:start="99:23" pos:end="99:23">.</operator><name pos:start="99:24" pos:end="99:32">pict_type</name></name> <operator pos:start="99:34" pos:end="99:34">=</operator> <name pos:start="99:36" pos:end="99:47"><name pos:start="99:36" pos:end="99:36">s</name><operator pos:start="99:37" pos:end="99:38">-&gt;</operator><name pos:start="99:39" pos:end="99:47">pict_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:71"><expr pos:start="101:5" pos:end="101:70"><name pos:start="101:5" pos:end="101:32"><name pos:start="101:5" pos:end="101:5">s</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:22">current_picture</name><operator pos:start="101:23" pos:end="101:23">.</operator><name pos:start="101:24" pos:end="101:32">key_frame</name></name> <operator pos:start="101:34" pos:end="101:34">=</operator> <operator pos:start="101:36" pos:end="101:36">(</operator><name pos:start="101:37" pos:end="101:48"><name pos:start="101:37" pos:end="101:37">s</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:48">pict_type</name></name> <operator pos:start="101:50" pos:end="101:51">==</operator> <name pos:start="101:53" pos:end="101:69">AV_PICTURE_TYPE_I</name><operator pos:start="101:70" pos:end="101:70">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="105:5" pos:end="105:59">/* Skip B-frames if we do not have reference frames. */</comment>

    <if_stmt pos:start="107:5" pos:end="109:17"><if pos:start="107:5" pos:end="109:17">if <condition pos:start="107:8" pos:end="107:73">(<expr pos:start="107:9" pos:end="107:72"><name pos:start="107:9" pos:end="107:27"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:27">last_picture_ptr</name></name> <operator pos:start="107:29" pos:end="107:30">==</operator> <name pos:start="107:32" pos:end="107:35">NULL</name> <operator pos:start="107:37" pos:end="107:38">&amp;&amp;</operator> <name pos:start="107:40" pos:end="107:51"><name pos:start="107:40" pos:end="107:40">s</name><operator pos:start="107:41" pos:end="107:42">-&gt;</operator><name pos:start="107:43" pos:end="107:51">pict_type</name></name> <operator pos:start="107:53" pos:end="107:54">==</operator> <name pos:start="107:56" pos:end="107:72">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:17"><block_content pos:start="109:9" pos:end="109:17">

        <return pos:start="109:9" pos:end="109:17">return <expr pos:start="109:16" pos:end="109:16"><literal type="number" pos:start="109:16" pos:end="109:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="111:5" pos:end="117:17"><if pos:start="111:5" pos:end="117:17">if <condition pos:start="111:8" pos:end="115:46">(  <expr pos:start="111:11" pos:end="115:45"><operator pos:start="111:11" pos:end="111:11">(</operator><name pos:start="111:12" pos:end="111:28"><name pos:start="111:12" pos:end="111:16">avctx</name><operator pos:start="111:17" pos:end="111:18">-&gt;</operator><name pos:start="111:19" pos:end="111:28">skip_frame</name></name> <operator pos:start="111:30" pos:end="111:31">&gt;=</operator> <name pos:start="111:33" pos:end="111:48">AVDISCARD_NONREF</name> <operator pos:start="111:50" pos:end="111:51">&amp;&amp;</operator> <name pos:start="111:53" pos:end="111:64"><name pos:start="111:53" pos:end="111:53">s</name><operator pos:start="111:54" pos:end="111:55">-&gt;</operator><name pos:start="111:56" pos:end="111:64">pict_type</name></name> <operator pos:start="111:66" pos:end="111:67">==</operator> <name pos:start="111:69" pos:end="111:85">AV_PICTURE_TYPE_B</name><operator pos:start="111:86" pos:end="111:86">)</operator>

        <operator pos:start="113:9" pos:end="113:10">||</operator><operator pos:start="113:11" pos:end="113:11">(</operator><name pos:start="113:12" pos:end="113:28"><name pos:start="113:12" pos:end="113:16">avctx</name><operator pos:start="113:17" pos:end="113:18">-&gt;</operator><name pos:start="113:19" pos:end="113:28">skip_frame</name></name> <operator pos:start="113:30" pos:end="113:31">&gt;=</operator> <name pos:start="113:33" pos:end="113:48">AVDISCARD_NONKEY</name> <operator pos:start="113:50" pos:end="113:51">&amp;&amp;</operator> <name pos:start="113:53" pos:end="113:64"><name pos:start="113:53" pos:end="113:53">s</name><operator pos:start="113:54" pos:end="113:55">-&gt;</operator><name pos:start="113:56" pos:end="113:64">pict_type</name></name> <operator pos:start="113:66" pos:end="113:67">!=</operator> <name pos:start="113:69" pos:end="113:85">AV_PICTURE_TYPE_I</name><operator pos:start="113:86" pos:end="113:86">)</operator>

        <operator pos:start="115:9" pos:end="115:10">||</operator> <name pos:start="115:12" pos:end="115:28"><name pos:start="115:12" pos:end="115:16">avctx</name><operator pos:start="115:17" pos:end="115:18">-&gt;</operator><name pos:start="115:19" pos:end="115:28">skip_frame</name></name> <operator pos:start="115:30" pos:end="115:31">&gt;=</operator> <name pos:start="115:33" pos:end="115:45">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:17"><block_content pos:start="117:9" pos:end="117:17">

        <return pos:start="117:9" pos:end="117:17">return <expr pos:start="117:16" pos:end="117:16"><literal type="number" pos:start="117:16" pos:end="117:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="121:5" pos:end="131:5"><if pos:start="121:5" pos:end="131:5">if <condition pos:start="121:8" pos:end="121:32">(<expr pos:start="121:9" pos:end="121:31"><name pos:start="121:9" pos:end="121:31"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:31">next_p_frame_damaged</name></name></expr>)</condition> <block pos:start="121:34" pos:end="131:5">{<block_content pos:start="123:9" pos:end="129:40">

        <if_stmt pos:start="123:9" pos:end="129:40"><if pos:start="123:9" pos:end="125:21">if <condition pos:start="123:12" pos:end="123:46">(<expr pos:start="123:13" pos:end="123:45"><name pos:start="123:13" pos:end="123:24"><name pos:start="123:13" pos:end="123:13">s</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:24">pict_type</name></name> <operator pos:start="123:26" pos:end="123:27">==</operator> <name pos:start="123:29" pos:end="123:45">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:21"><block_content pos:start="125:13" pos:end="125:21">

            <return pos:start="125:13" pos:end="125:21">return <expr pos:start="125:20" pos:end="125:20"><literal type="number" pos:start="125:20" pos:end="125:20">0</literal></expr>;</return></block_content></block></if>

        <else pos:start="127:9" pos:end="129:40">else<block type="pseudo" pos:start="129:13" pos:end="129:40"><block_content pos:start="129:13" pos:end="129:40">

            <expr_stmt pos:start="129:13" pos:end="129:40"><expr pos:start="129:13" pos:end="129:39"><name pos:start="129:13" pos:end="129:35"><name pos:start="129:13" pos:end="129:13">s</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:35">next_p_frame_damaged</name></name> <operator pos:start="129:37" pos:end="129:37">=</operator> <literal type="number" pos:start="129:39" pos:end="129:39">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="135:5" pos:end="137:18"><if pos:start="135:5" pos:end="137:18">if <condition pos:start="135:8" pos:end="135:35">(<expr pos:start="135:9" pos:end="135:34"><call pos:start="135:9" pos:end="135:30"><name pos:start="135:9" pos:end="135:27">ff_h264_frame_start</name><argument_list pos:start="135:28" pos:end="135:30">(<argument pos:start="135:29" pos:end="135:29"><expr pos:start="135:29" pos:end="135:29"><name pos:start="135:29" pos:end="135:29">h</name></expr></argument>)</argument_list></call> <operator pos:start="135:32" pos:end="135:32">&lt;</operator> <literal type="number" pos:start="135:34" pos:end="135:34">0</literal></expr>)</condition><block type="pseudo" pos:start="137:9" pos:end="137:18"><block_content pos:start="137:9" pos:end="137:18">

        <return pos:start="137:9" pos:end="137:18">return <expr pos:start="137:16" pos:end="137:17"><operator pos:start="137:16" pos:end="137:16">-</operator><literal type="number" pos:start="137:17" pos:end="137:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="141:5" pos:end="177:5"><if pos:start="141:5" pos:end="161:5">if <condition pos:start="141:8" pos:end="141:42">(<expr pos:start="141:9" pos:end="141:41"><name pos:start="141:9" pos:end="141:20"><name pos:start="141:9" pos:end="141:9">s</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:20">pict_type</name></name> <operator pos:start="141:22" pos:end="141:23">==</operator> <name pos:start="141:25" pos:end="141:41">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="141:44" pos:end="161:5">{<block_content pos:start="143:9" pos:end="159:9">

        <expr_stmt pos:start="143:9" pos:end="143:65"><expr pos:start="143:9" pos:end="143:64"><name pos:start="143:9" pos:end="143:27"><name pos:start="143:9" pos:end="143:9">h</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:27">frame_num_offset</name></name> <operator pos:start="143:29" pos:end="143:29">=</operator> <operator pos:start="143:31" pos:end="143:31">(</operator><name pos:start="143:32" pos:end="143:43"><name pos:start="143:32" pos:end="143:32">h</name><operator pos:start="143:33" pos:end="143:34">-&gt;</operator><name pos:start="143:35" pos:end="143:43">slice_num</name></name> <operator pos:start="143:45" pos:end="143:45">-</operator> <name pos:start="143:47" pos:end="143:63"><name pos:start="143:47" pos:end="143:47">h</name><operator pos:start="143:48" pos:end="143:49">-&gt;</operator><name pos:start="143:50" pos:end="143:63">prev_frame_num</name></name><operator pos:start="143:64" pos:end="143:64">)</operator></expr>;</expr_stmt>



        <if_stmt pos:start="147:9" pos:end="151:9"><if pos:start="147:9" pos:end="151:9">if <condition pos:start="147:12" pos:end="147:36">(<expr pos:start="147:13" pos:end="147:35"><name pos:start="147:13" pos:end="147:31"><name pos:start="147:13" pos:end="147:13">h</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:31">frame_num_offset</name></name> <operator pos:start="147:33" pos:end="147:33">&lt;</operator> <literal type="number" pos:start="147:35" pos:end="147:35">0</literal></expr>)</condition> <block pos:start="147:38" pos:end="151:9">{<block_content pos:start="149:13" pos:end="149:39">

            <expr_stmt pos:start="149:13" pos:end="149:39"><expr pos:start="149:13" pos:end="149:38"><name pos:start="149:13" pos:end="149:31"><name pos:start="149:13" pos:end="149:13">h</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:31">frame_num_offset</name></name> <operator pos:start="149:33" pos:end="149:34">+=</operator> <literal type="number" pos:start="149:36" pos:end="149:38">256</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="153:9" pos:end="159:9"><if pos:start="153:9" pos:end="159:9">if <condition pos:start="153:12" pos:end="153:88">(<expr pos:start="153:13" pos:end="153:87"><name pos:start="153:13" pos:end="153:31"><name pos:start="153:13" pos:end="153:13">h</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:31">frame_num_offset</name></name> <operator pos:start="153:33" pos:end="153:34">==</operator> <literal type="number" pos:start="153:36" pos:end="153:36">0</literal> <operator pos:start="153:38" pos:end="153:39">||</operator> <name pos:start="153:41" pos:end="153:59"><name pos:start="153:41" pos:end="153:41">h</name><operator pos:start="153:42" pos:end="153:43">-&gt;</operator><name pos:start="153:44" pos:end="153:59">frame_num_offset</name></name> <operator pos:start="153:61" pos:end="153:62">&gt;=</operator> <name pos:start="153:64" pos:end="153:87"><name pos:start="153:64" pos:end="153:64">h</name><operator pos:start="153:65" pos:end="153:66">-&gt;</operator><name pos:start="153:67" pos:end="153:87">prev_frame_num_offset</name></name></expr>)</condition> <block pos:start="153:90" pos:end="159:9">{<block_content pos:start="155:13" pos:end="157:22">

            <expr_stmt pos:start="155:13" pos:end="155:78"><expr pos:start="155:13" pos:end="155:77"><call pos:start="155:13" pos:end="155:77"><name pos:start="155:13" pos:end="155:18">av_log</name><argument_list pos:start="155:19" pos:end="155:77">(<argument pos:start="155:20" pos:end="155:29"><expr pos:start="155:20" pos:end="155:29"><name pos:start="155:20" pos:end="155:29"><name pos:start="155:20" pos:end="155:20">h</name><operator pos:start="155:21" pos:end="155:22">-&gt;</operator><name pos:start="155:23" pos:end="155:23">s</name><operator pos:start="155:24" pos:end="155:24">.</operator><name pos:start="155:25" pos:end="155:29">avctx</name></name></expr></argument>, <argument pos:start="155:32" pos:end="155:43"><expr pos:start="155:32" pos:end="155:43"><name pos:start="155:32" pos:end="155:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="155:46" pos:end="155:76"><expr pos:start="155:46" pos:end="155:76"><literal type="string" pos:start="155:46" pos:end="155:76">"error in B-frame picture id\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="157:13" pos:end="157:22">return <expr pos:start="157:20" pos:end="157:21"><operator pos:start="157:20" pos:end="157:20">-</operator><literal type="number" pos:start="157:21" pos:end="157:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="161:7" pos:end="177:5">else <block pos:start="161:12" pos:end="177:5">{<block_content pos:start="163:9" pos:end="175:9">

        <expr_stmt pos:start="163:9" pos:end="163:41"><expr pos:start="163:9" pos:end="163:40"><name pos:start="163:9" pos:end="163:25"><name pos:start="163:9" pos:end="163:9">h</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:25">prev_frame_num</name></name> <operator pos:start="163:27" pos:end="163:27">=</operator> <name pos:start="163:29" pos:end="163:40"><name pos:start="163:29" pos:end="163:29">h</name><operator pos:start="163:30" pos:end="163:31">-&gt;</operator><name pos:start="163:32" pos:end="163:40">frame_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:36"><expr pos:start="165:9" pos:end="165:35"><name pos:start="165:9" pos:end="165:20"><name pos:start="165:9" pos:end="165:9">h</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:20">frame_num</name></name> <operator pos:start="165:22" pos:end="165:22">=</operator> <name pos:start="165:24" pos:end="165:35"><name pos:start="165:24" pos:end="165:24">h</name><operator pos:start="165:25" pos:end="165:26">-&gt;</operator><name pos:start="165:27" pos:end="165:35">slice_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:70"><expr pos:start="167:9" pos:end="167:69"><name pos:start="167:9" pos:end="167:32"><name pos:start="167:9" pos:end="167:9">h</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:32">prev_frame_num_offset</name></name> <operator pos:start="167:34" pos:end="167:34">=</operator> <operator pos:start="167:36" pos:end="167:36">(</operator><name pos:start="167:37" pos:end="167:48"><name pos:start="167:37" pos:end="167:37">h</name><operator pos:start="167:38" pos:end="167:39">-&gt;</operator><name pos:start="167:40" pos:end="167:48">frame_num</name></name> <operator pos:start="167:50" pos:end="167:50">-</operator> <name pos:start="167:52" pos:end="167:68"><name pos:start="167:52" pos:end="167:52">h</name><operator pos:start="167:53" pos:end="167:54">-&gt;</operator><name pos:start="167:55" pos:end="167:68">prev_frame_num</name></name><operator pos:start="167:69" pos:end="167:69">)</operator></expr>;</expr_stmt>



        <if_stmt pos:start="171:9" pos:end="175:9"><if pos:start="171:9" pos:end="175:9">if <condition pos:start="171:12" pos:end="171:41">(<expr pos:start="171:13" pos:end="171:40"><name pos:start="171:13" pos:end="171:36"><name pos:start="171:13" pos:end="171:13">h</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:36">prev_frame_num_offset</name></name> <operator pos:start="171:38" pos:end="171:38">&lt;</operator> <literal type="number" pos:start="171:40" pos:end="171:40">0</literal></expr>)</condition> <block pos:start="171:43" pos:end="175:9">{<block_content pos:start="173:13" pos:end="173:44">

            <expr_stmt pos:start="173:13" pos:end="173:44"><expr pos:start="173:13" pos:end="173:43"><name pos:start="173:13" pos:end="173:36"><name pos:start="173:13" pos:end="173:13">h</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:36">prev_frame_num_offset</name></name> <operator pos:start="173:38" pos:end="173:39">+=</operator> <literal type="number" pos:start="173:41" pos:end="173:43">256</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="181:5" pos:end="199:5">for <control pos:start="181:9" pos:end="181:27">(<init pos:start="181:10" pos:end="181:15"><expr pos:start="181:10" pos:end="181:14"><name pos:start="181:10" pos:end="181:10">m</name> <operator pos:start="181:12" pos:end="181:12">=</operator> <literal type="number" pos:start="181:14" pos:end="181:14">0</literal></expr>;</init> <condition pos:start="181:17" pos:end="181:22"><expr pos:start="181:17" pos:end="181:21"><name pos:start="181:17" pos:end="181:17">m</name> <operator pos:start="181:19" pos:end="181:19">&lt;</operator> <literal type="number" pos:start="181:21" pos:end="181:21">2</literal></expr>;</condition> <incr pos:start="181:24" pos:end="181:26"><expr pos:start="181:24" pos:end="181:26"><name pos:start="181:24" pos:end="181:24">m</name><operator pos:start="181:25" pos:end="181:26">++</operator></expr></incr>)</control><block pos:start="181:28" pos:end="199:5">{<block_content pos:start="183:9" pos:end="197:9">

        <decl_stmt pos:start="183:9" pos:end="183:14"><decl pos:start="183:9" pos:end="183:13"><type pos:start="183:9" pos:end="183:11"><name pos:start="183:9" pos:end="183:11">int</name></type> <name pos:start="183:13" pos:end="183:13">i</name></decl>;</decl_stmt>

        <for pos:start="185:9" pos:end="197:9">for <control pos:start="185:13" pos:end="185:31">(<init pos:start="185:14" pos:end="185:19"><expr pos:start="185:14" pos:end="185:18"><name pos:start="185:14" pos:end="185:14">i</name> <operator pos:start="185:16" pos:end="185:16">=</operator> <literal type="number" pos:start="185:18" pos:end="185:18">0</literal></expr>;</init> <condition pos:start="185:21" pos:end="185:26"><expr pos:start="185:21" pos:end="185:25"><name pos:start="185:21" pos:end="185:21">i</name> <operator pos:start="185:23" pos:end="185:23">&lt;</operator> <literal type="number" pos:start="185:25" pos:end="185:25">4</literal></expr>;</condition> <incr pos:start="185:28" pos:end="185:30"><expr pos:start="185:28" pos:end="185:30"><name pos:start="185:28" pos:end="185:28">i</name><operator pos:start="185:29" pos:end="185:30">++</operator></expr></incr>)</control><block pos:start="185:32" pos:end="197:9">{<block_content pos:start="187:13" pos:end="195:72">

            <decl_stmt pos:start="187:13" pos:end="187:18"><decl pos:start="187:13" pos:end="187:17"><type pos:start="187:13" pos:end="187:15"><name pos:start="187:13" pos:end="187:15">int</name></type> <name pos:start="187:17" pos:end="187:17">j</name></decl>;</decl_stmt>

            <for pos:start="189:13" pos:end="191:55">for <control pos:start="189:17" pos:end="189:36">(<init pos:start="189:18" pos:end="189:24"><expr pos:start="189:18" pos:end="189:23"><name pos:start="189:18" pos:end="189:18">j</name> <operator pos:start="189:20" pos:end="189:20">=</operator> <operator pos:start="189:22" pos:end="189:22">-</operator><literal type="number" pos:start="189:23" pos:end="189:23">1</literal></expr>;</init> <condition pos:start="189:26" pos:end="189:31"><expr pos:start="189:26" pos:end="189:30"><name pos:start="189:26" pos:end="189:26">j</name> <operator pos:start="189:28" pos:end="189:28">&lt;</operator> <literal type="number" pos:start="189:30" pos:end="189:30">4</literal></expr>;</condition> <incr pos:start="189:33" pos:end="189:35"><expr pos:start="189:33" pos:end="189:35"><name pos:start="189:33" pos:end="189:33">j</name><operator pos:start="189:34" pos:end="189:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="191:17" pos:end="191:55"><block_content pos:start="191:17" pos:end="191:55">

                <expr_stmt pos:start="191:17" pos:end="191:55"><expr pos:start="191:17" pos:end="191:54"><name pos:start="191:17" pos:end="191:51"><name pos:start="191:17" pos:end="191:17">h</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:28">ref_cache</name><index pos:start="191:29" pos:end="191:31">[<expr pos:start="191:30" pos:end="191:30"><name pos:start="191:30" pos:end="191:30">m</name></expr>]</index><index pos:start="191:32" pos:end="191:51">[<expr pos:start="191:33" pos:end="191:50"><name pos:start="191:33" pos:end="191:40"><name pos:start="191:33" pos:end="191:37">scan8</name><index pos:start="191:38" pos:end="191:40">[<expr pos:start="191:39" pos:end="191:39"><literal type="number" pos:start="191:39" pos:end="191:39">0</literal></expr>]</index></name> <operator pos:start="191:42" pos:end="191:42">+</operator> <literal type="number" pos:start="191:44" pos:end="191:44">8</literal><operator pos:start="191:45" pos:end="191:45">*</operator><name pos:start="191:46" pos:end="191:46">i</name> <operator pos:start="191:48" pos:end="191:48">+</operator> <name pos:start="191:50" pos:end="191:50">j</name></expr>]</index></name><operator pos:start="191:52" pos:end="191:52">=</operator> <literal type="number" pos:start="191:54" pos:end="191:54">1</literal></expr>;</expr_stmt></block_content></block></for>

            <if_stmt pos:start="193:13" pos:end="195:72"><if pos:start="193:13" pos:end="195:72">if <condition pos:start="193:16" pos:end="193:22">(<expr pos:start="193:17" pos:end="193:21"><name pos:start="193:17" pos:end="193:17">i</name> <operator pos:start="193:19" pos:end="193:19">&lt;</operator> <literal type="number" pos:start="193:21" pos:end="193:21">3</literal></expr>)</condition><block type="pseudo" pos:start="195:17" pos:end="195:72"><block_content pos:start="195:17" pos:end="195:72">

                <expr_stmt pos:start="195:17" pos:end="195:72"><expr pos:start="195:17" pos:end="195:71"><name pos:start="195:17" pos:end="195:51"><name pos:start="195:17" pos:end="195:17">h</name><operator pos:start="195:18" pos:end="195:19">-&gt;</operator><name pos:start="195:20" pos:end="195:28">ref_cache</name><index pos:start="195:29" pos:end="195:31">[<expr pos:start="195:30" pos:end="195:30"><name pos:start="195:30" pos:end="195:30">m</name></expr>]</index><index pos:start="195:32" pos:end="195:51">[<expr pos:start="195:33" pos:end="195:50"><name pos:start="195:33" pos:end="195:40"><name pos:start="195:33" pos:end="195:37">scan8</name><index pos:start="195:38" pos:end="195:40">[<expr pos:start="195:39" pos:end="195:39"><literal type="number" pos:start="195:39" pos:end="195:39">0</literal></expr>]</index></name> <operator pos:start="195:42" pos:end="195:42">+</operator> <literal type="number" pos:start="195:44" pos:end="195:44">8</literal><operator pos:start="195:45" pos:end="195:45">*</operator><name pos:start="195:46" pos:end="195:46">i</name> <operator pos:start="195:48" pos:end="195:48">+</operator> <name pos:start="195:50" pos:end="195:50">j</name></expr>]</index></name><operator pos:start="195:52" pos:end="195:52">=</operator> <name pos:start="195:54" pos:end="195:71">PART_NOT_AVAILABLE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <for pos:start="203:5" pos:end="281:5">for <control pos:start="203:9" pos:end="203:56">(<init pos:start="203:10" pos:end="203:21"><expr pos:start="203:10" pos:end="203:20"><name pos:start="203:10" pos:end="203:16"><name pos:start="203:10" pos:end="203:10">s</name><operator pos:start="203:11" pos:end="203:12">-&gt;</operator><name pos:start="203:13" pos:end="203:16">mb_y</name></name> <operator pos:start="203:18" pos:end="203:18">=</operator> <literal type="number" pos:start="203:20" pos:end="203:20">0</literal></expr>;</init> <condition pos:start="203:23" pos:end="203:45"><expr pos:start="203:23" pos:end="203:44"><name pos:start="203:23" pos:end="203:29"><name pos:start="203:23" pos:end="203:23">s</name><operator pos:start="203:24" pos:end="203:25">-&gt;</operator><name pos:start="203:26" pos:end="203:29">mb_y</name></name> <operator pos:start="203:31" pos:end="203:31">&lt;</operator> <name pos:start="203:33" pos:end="203:44"><name pos:start="203:33" pos:end="203:33">s</name><operator pos:start="203:34" pos:end="203:35">-&gt;</operator><name pos:start="203:36" pos:end="203:44">mb_height</name></name></expr>;</condition> <incr pos:start="203:47" pos:end="203:55"><expr pos:start="203:47" pos:end="203:55"><name pos:start="203:47" pos:end="203:53"><name pos:start="203:47" pos:end="203:47">s</name><operator pos:start="203:48" pos:end="203:49">-&gt;</operator><name pos:start="203:50" pos:end="203:53">mb_y</name></name><operator pos:start="203:54" pos:end="203:55">++</operator></expr></incr>)</control> <block pos:start="203:58" pos:end="281:5">{<block_content pos:start="205:9" pos:end="279:46">

        <for pos:start="205:9" pos:end="275:9">for <control pos:start="205:13" pos:end="205:59">(<init pos:start="205:14" pos:end="205:25"><expr pos:start="205:14" pos:end="205:24"><name pos:start="205:14" pos:end="205:20"><name pos:start="205:14" pos:end="205:14">s</name><operator pos:start="205:15" pos:end="205:16">-&gt;</operator><name pos:start="205:17" pos:end="205:20">mb_x</name></name> <operator pos:start="205:22" pos:end="205:22">=</operator> <literal type="number" pos:start="205:24" pos:end="205:24">0</literal></expr>;</init> <condition pos:start="205:27" pos:end="205:48"><expr pos:start="205:27" pos:end="205:47"><name pos:start="205:27" pos:end="205:33"><name pos:start="205:27" pos:end="205:27">s</name><operator pos:start="205:28" pos:end="205:29">-&gt;</operator><name pos:start="205:30" pos:end="205:33">mb_x</name></name> <operator pos:start="205:35" pos:end="205:35">&lt;</operator> <name pos:start="205:37" pos:end="205:47"><name pos:start="205:37" pos:end="205:37">s</name><operator pos:start="205:38" pos:end="205:39">-&gt;</operator><name pos:start="205:40" pos:end="205:47">mb_width</name></name></expr>;</condition> <incr pos:start="205:50" pos:end="205:58"><expr pos:start="205:50" pos:end="205:58"><name pos:start="205:50" pos:end="205:56"><name pos:start="205:50" pos:end="205:50">s</name><operator pos:start="205:51" pos:end="205:52">-&gt;</operator><name pos:start="205:53" pos:end="205:56">mb_x</name></name><operator pos:start="205:57" pos:end="205:58">++</operator></expr></incr>)</control> <block pos:start="205:61" pos:end="275:9">{<block_content pos:start="207:13" pos:end="273:13">

            <expr_stmt pos:start="207:13" pos:end="207:54"><expr pos:start="207:13" pos:end="207:53"><name pos:start="207:13" pos:end="207:20"><name pos:start="207:13" pos:end="207:13">h</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:20">mb_xy</name></name> <operator pos:start="207:22" pos:end="207:22">=</operator> <name pos:start="207:24" pos:end="207:30"><name pos:start="207:24" pos:end="207:24">s</name><operator pos:start="207:25" pos:end="207:26">-&gt;</operator><name pos:start="207:27" pos:end="207:30">mb_x</name></name> <operator pos:start="207:32" pos:end="207:32">+</operator> <name pos:start="207:34" pos:end="207:40"><name pos:start="207:34" pos:end="207:34">s</name><operator pos:start="207:35" pos:end="207:36">-&gt;</operator><name pos:start="207:37" pos:end="207:40">mb_y</name></name><operator pos:start="207:41" pos:end="207:41">*</operator><name pos:start="207:42" pos:end="207:53"><name pos:start="207:42" pos:end="207:42">s</name><operator pos:start="207:43" pos:end="207:44">-&gt;</operator><name pos:start="207:45" pos:end="207:53">mb_stride</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="211:13" pos:end="231:13"><if pos:start="211:13" pos:end="231:13">if <condition pos:start="211:16" pos:end="213:109">( <expr pos:start="211:18" pos:end="213:108"><operator pos:start="211:18" pos:end="211:18">(</operator><call pos:start="211:19" pos:end="211:40"><name pos:start="211:19" pos:end="211:32">get_bits_count</name><argument_list pos:start="211:33" pos:end="211:40">(<argument pos:start="211:34" pos:end="211:39"><expr pos:start="211:34" pos:end="211:39"><operator pos:start="211:34" pos:end="211:34">&amp;</operator><name pos:start="211:35" pos:end="211:39"><name pos:start="211:35" pos:end="211:35">s</name><operator pos:start="211:36" pos:end="211:37">-&gt;</operator><name pos:start="211:38" pos:end="211:39">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="211:42" pos:end="211:42">+</operator> <literal type="number" pos:start="211:44" pos:end="211:44">7</literal><operator pos:start="211:45" pos:end="211:45">)</operator> <operator pos:start="211:47" pos:end="211:48">&gt;=</operator> <name pos:start="211:50" pos:end="211:67"><name pos:start="211:50" pos:end="211:50">s</name><operator pos:start="211:51" pos:end="211:52">-&gt;</operator><name pos:start="211:53" pos:end="211:54">gb</name><operator pos:start="211:55" pos:end="211:55">.</operator><name pos:start="211:56" pos:end="211:67">size_in_bits</name></name> <operator pos:start="211:69" pos:end="211:70">&amp;&amp;</operator>

                <operator pos:start="213:17" pos:end="213:17">(</operator><operator pos:start="213:18" pos:end="213:18">(</operator><call pos:start="213:19" pos:end="213:40"><name pos:start="213:19" pos:end="213:32">get_bits_count</name><argument_list pos:start="213:33" pos:end="213:40">(<argument pos:start="213:34" pos:end="213:39"><expr pos:start="213:34" pos:end="213:39"><operator pos:start="213:34" pos:end="213:34">&amp;</operator><name pos:start="213:35" pos:end="213:39"><name pos:start="213:35" pos:end="213:35">s</name><operator pos:start="213:36" pos:end="213:37">-&gt;</operator><name pos:start="213:38" pos:end="213:39">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="213:42" pos:end="213:42">&amp;</operator> <literal type="number" pos:start="213:44" pos:end="213:44">7</literal><operator pos:start="213:45" pos:end="213:45">)</operator> <operator pos:start="213:47" pos:end="213:48">==</operator> <literal type="number" pos:start="213:50" pos:end="213:50">0</literal> <operator pos:start="213:52" pos:end="213:53">||</operator> <call pos:start="213:55" pos:end="213:102"><name pos:start="213:55" pos:end="213:63">show_bits</name><argument_list pos:start="213:64" pos:end="213:102">(<argument pos:start="213:65" pos:end="213:70"><expr pos:start="213:65" pos:end="213:70"><operator pos:start="213:65" pos:end="213:65">&amp;</operator><name pos:start="213:66" pos:end="213:70"><name pos:start="213:66" pos:end="213:66">s</name><operator pos:start="213:67" pos:end="213:68">-&gt;</operator><name pos:start="213:69" pos:end="213:70">gb</name></name></expr></argument>, <argument pos:start="213:73" pos:end="213:101"><expr pos:start="213:73" pos:end="213:101"><operator pos:start="213:73" pos:end="213:73">(</operator><operator pos:start="213:74" pos:end="213:74">-</operator><call pos:start="213:75" pos:end="213:96"><name pos:start="213:75" pos:end="213:88">get_bits_count</name><argument_list pos:start="213:89" pos:end="213:96">(<argument pos:start="213:90" pos:end="213:95"><expr pos:start="213:90" pos:end="213:95"><operator pos:start="213:90" pos:end="213:90">&amp;</operator><name pos:start="213:91" pos:end="213:95"><name pos:start="213:91" pos:end="213:91">s</name><operator pos:start="213:92" pos:end="213:93">-&gt;</operator><name pos:start="213:94" pos:end="213:95">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="213:98" pos:end="213:98">&amp;</operator> <literal type="number" pos:start="213:100" pos:end="213:100">7</literal><operator pos:start="213:101" pos:end="213:101">)</operator></expr></argument>)</argument_list></call> <operator pos:start="213:104" pos:end="213:105">==</operator> <literal type="number" pos:start="213:107" pos:end="213:107">0</literal><operator pos:start="213:108" pos:end="213:108">)</operator></expr>)</condition> <block pos:start="213:111" pos:end="231:13">{<block_content pos:start="217:17" pos:end="225:30">



                <expr_stmt pos:start="217:17" pos:end="217:83"><expr pos:start="217:17" pos:end="217:82"><call pos:start="217:17" pos:end="217:82"><name pos:start="217:17" pos:end="217:25">skip_bits</name><argument_list pos:start="217:26" pos:end="217:82">(<argument pos:start="217:27" pos:end="217:32"><expr pos:start="217:27" pos:end="217:32"><operator pos:start="217:27" pos:end="217:27">&amp;</operator><name pos:start="217:28" pos:end="217:32"><name pos:start="217:28" pos:end="217:28">s</name><operator pos:start="217:29" pos:end="217:30">-&gt;</operator><name pos:start="217:31" pos:end="217:32">gb</name></name></expr></argument>, <argument pos:start="217:35" pos:end="217:81"><expr pos:start="217:35" pos:end="217:81"><name pos:start="217:35" pos:end="217:56"><name pos:start="217:35" pos:end="217:38">svq3</name><operator pos:start="217:39" pos:end="217:40">-&gt;</operator><name pos:start="217:41" pos:end="217:56">next_slice_index</name></name> <operator pos:start="217:58" pos:end="217:58">-</operator> <call pos:start="217:60" pos:end="217:81"><name pos:start="217:60" pos:end="217:73">get_bits_count</name><argument_list pos:start="217:74" pos:end="217:81">(<argument pos:start="217:75" pos:end="217:80"><expr pos:start="217:75" pos:end="217:80"><operator pos:start="217:75" pos:end="217:75">&amp;</operator><name pos:start="217:76" pos:end="217:80"><name pos:start="217:76" pos:end="217:76">s</name><operator pos:start="217:77" pos:end="217:78">-&gt;</operator><name pos:start="217:79" pos:end="217:80">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="219:17" pos:end="219:48"><expr pos:start="219:17" pos:end="219:47"><name pos:start="219:17" pos:end="219:34"><name pos:start="219:17" pos:end="219:17">s</name><operator pos:start="219:18" pos:end="219:19">-&gt;</operator><name pos:start="219:20" pos:end="219:21">gb</name><operator pos:start="219:22" pos:end="219:22">.</operator><name pos:start="219:23" pos:end="219:34">size_in_bits</name></name> <operator pos:start="219:36" pos:end="219:36">=</operator> <literal type="number" pos:start="219:38" pos:end="219:38">8</literal><operator pos:start="219:39" pos:end="219:39">*</operator><name pos:start="219:40" pos:end="219:47">buf_size</name></expr>;</expr_stmt>



                <if_stmt pos:start="223:17" pos:end="225:30"><if pos:start="223:17" pos:end="225:30">if <condition pos:start="223:20" pos:end="223:52">(<expr pos:start="223:21" pos:end="223:51"><call pos:start="223:21" pos:end="223:51"><name pos:start="223:21" pos:end="223:44">svq3_decode_slice_header</name><argument_list pos:start="223:45" pos:end="223:51">(<argument pos:start="223:46" pos:end="223:50"><expr pos:start="223:46" pos:end="223:50"><name pos:start="223:46" pos:end="223:50">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="225:21" pos:end="225:30"><block_content pos:start="225:21" pos:end="225:30">

                    <return pos:start="225:21" pos:end="225:30">return <expr pos:start="225:28" pos:end="225:29"><operator pos:start="225:28" pos:end="225:28">-</operator><literal type="number" pos:start="225:29" pos:end="225:29">1</literal></expr>;</return></block_content></block></if></if_stmt>



                <comment type="block" pos:start="229:17" pos:end="229:50">/* TODO: support s-&gt;mb_skip_run */</comment>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="235:13" pos:end="235:49"><expr pos:start="235:13" pos:end="235:48"><name pos:start="235:13" pos:end="235:19">mb_type</name> <operator pos:start="235:21" pos:end="235:21">=</operator> <call pos:start="235:23" pos:end="235:48"><name pos:start="235:23" pos:end="235:40">svq3_get_ue_golomb</name><argument_list pos:start="235:41" pos:end="235:48">(<argument pos:start="235:42" pos:end="235:47"><expr pos:start="235:42" pos:end="235:47"><operator pos:start="235:42" pos:end="235:42">&amp;</operator><name pos:start="235:43" pos:end="235:47"><name pos:start="235:43" pos:end="235:43">s</name><operator pos:start="235:44" pos:end="235:45">-&gt;</operator><name pos:start="235:46" pos:end="235:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="239:13" pos:end="247:13"><if pos:start="239:13" pos:end="243:13">if <condition pos:start="239:16" pos:end="239:50">(<expr pos:start="239:17" pos:end="239:49"><name pos:start="239:17" pos:end="239:28"><name pos:start="239:17" pos:end="239:17">s</name><operator pos:start="239:18" pos:end="239:19">-&gt;</operator><name pos:start="239:20" pos:end="239:28">pict_type</name></name> <operator pos:start="239:30" pos:end="239:31">==</operator> <name pos:start="239:33" pos:end="239:49">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="239:52" pos:end="243:13">{<block_content pos:start="241:17" pos:end="241:29">

                <expr_stmt pos:start="241:17" pos:end="241:29"><expr pos:start="241:17" pos:end="241:28"><name pos:start="241:17" pos:end="241:23">mb_type</name> <operator pos:start="241:25" pos:end="241:26">+=</operator> <literal type="number" pos:start="241:28" pos:end="241:28">8</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="243:15" pos:end="247:13">else if <condition pos:start="243:23" pos:end="243:73">(<expr pos:start="243:24" pos:end="243:72"><name pos:start="243:24" pos:end="243:35"><name pos:start="243:24" pos:end="243:24">s</name><operator pos:start="243:25" pos:end="243:26">-&gt;</operator><name pos:start="243:27" pos:end="243:35">pict_type</name></name> <operator pos:start="243:37" pos:end="243:38">==</operator> <name pos:start="243:40" pos:end="243:56">AV_PICTURE_TYPE_B</name> <operator pos:start="243:58" pos:end="243:59">&amp;&amp;</operator> <name pos:start="243:61" pos:end="243:67">mb_type</name> <operator pos:start="243:69" pos:end="243:70">&gt;=</operator> <literal type="number" pos:start="243:72" pos:end="243:72">4</literal></expr>)</condition> <block pos:start="243:75" pos:end="247:13">{<block_content pos:start="245:17" pos:end="245:29">

                <expr_stmt pos:start="245:17" pos:end="245:29"><expr pos:start="245:17" pos:end="245:28"><name pos:start="245:17" pos:end="245:23">mb_type</name> <operator pos:start="245:25" pos:end="245:26">+=</operator> <literal type="number" pos:start="245:28" pos:end="245:28">4</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="249:13" pos:end="255:13"><if pos:start="249:13" pos:end="255:13">if <condition pos:start="249:16" pos:end="249:62">(<expr pos:start="249:17" pos:end="249:61"><name pos:start="249:17" pos:end="249:23">mb_type</name> <operator pos:start="249:25" pos:end="249:25">&gt;</operator> <literal type="number" pos:start="249:27" pos:end="249:28">33</literal> <operator pos:start="249:30" pos:end="249:31">||</operator> <call pos:start="249:33" pos:end="249:61"><name pos:start="249:33" pos:end="249:46">svq3_decode_mb</name><argument_list pos:start="249:47" pos:end="249:61">(<argument pos:start="249:48" pos:end="249:51"><expr pos:start="249:48" pos:end="249:51"><name pos:start="249:48" pos:end="249:51">svq3</name></expr></argument>, <argument pos:start="249:54" pos:end="249:60"><expr pos:start="249:54" pos:end="249:60"><name pos:start="249:54" pos:end="249:60">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="249:64" pos:end="255:13">{<block_content pos:start="251:17" pos:end="253:26">

                <expr_stmt pos:start="251:17" pos:end="251:102"><expr pos:start="251:17" pos:end="251:101"><call pos:start="251:17" pos:end="251:101"><name pos:start="251:17" pos:end="251:22">av_log</name><argument_list pos:start="251:23" pos:end="251:101">(<argument pos:start="251:24" pos:end="251:33"><expr pos:start="251:24" pos:end="251:33"><name pos:start="251:24" pos:end="251:33"><name pos:start="251:24" pos:end="251:24">h</name><operator pos:start="251:25" pos:end="251:26">-&gt;</operator><name pos:start="251:27" pos:end="251:27">s</name><operator pos:start="251:28" pos:end="251:28">.</operator><name pos:start="251:29" pos:end="251:33">avctx</name></name></expr></argument>, <argument pos:start="251:36" pos:end="251:47"><expr pos:start="251:36" pos:end="251:47"><name pos:start="251:36" pos:end="251:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="251:50" pos:end="251:82"><expr pos:start="251:50" pos:end="251:82"><literal type="string" pos:start="251:50" pos:end="251:82">"error while decoding MB %d %d\n"</literal></expr></argument>, <argument pos:start="251:85" pos:end="251:91"><expr pos:start="251:85" pos:end="251:91"><name pos:start="251:85" pos:end="251:91"><name pos:start="251:85" pos:end="251:85">s</name><operator pos:start="251:86" pos:end="251:87">-&gt;</operator><name pos:start="251:88" pos:end="251:91">mb_x</name></name></expr></argument>, <argument pos:start="251:94" pos:end="251:100"><expr pos:start="251:94" pos:end="251:100"><name pos:start="251:94" pos:end="251:100"><name pos:start="251:94" pos:end="251:94">s</name><operator pos:start="251:95" pos:end="251:96">-&gt;</operator><name pos:start="251:97" pos:end="251:100">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="253:17" pos:end="253:26">return <expr pos:start="253:24" pos:end="253:25"><operator pos:start="253:24" pos:end="253:24">-</operator><literal type="number" pos:start="253:25" pos:end="253:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="259:13" pos:end="263:13"><if pos:start="259:13" pos:end="263:13">if <condition pos:start="259:16" pos:end="259:29">(<expr pos:start="259:17" pos:end="259:28"><name pos:start="259:17" pos:end="259:23">mb_type</name> <operator pos:start="259:25" pos:end="259:26">!=</operator> <literal type="number" pos:start="259:28" pos:end="259:28">0</literal></expr>)</condition> <block pos:start="259:31" pos:end="263:13">{<block_content pos:start="261:17" pos:end="261:41">

                <expr_stmt pos:start="261:17" pos:end="261:41"><expr pos:start="261:17" pos:end="261:40"><call pos:start="261:17" pos:end="261:40"><name pos:start="261:17" pos:end="261:36">ff_h264_hl_decode_mb</name> <argument_list pos:start="261:38" pos:end="261:40">(<argument pos:start="261:39" pos:end="261:39"><expr pos:start="261:39" pos:end="261:39"><name pos:start="261:39" pos:end="261:39">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="267:13" pos:end="273:13"><if pos:start="267:13" pos:end="273:13">if <condition pos:start="267:16" pos:end="267:67">(<expr pos:start="267:17" pos:end="267:66"><name pos:start="267:17" pos:end="267:28"><name pos:start="267:17" pos:end="267:17">s</name><operator pos:start="267:18" pos:end="267:19">-&gt;</operator><name pos:start="267:20" pos:end="267:28">pict_type</name></name> <operator pos:start="267:30" pos:end="267:31">!=</operator> <name pos:start="267:33" pos:end="267:49">AV_PICTURE_TYPE_B</name> <operator pos:start="267:51" pos:end="267:52">&amp;&amp;</operator> <operator pos:start="267:54" pos:end="267:54">!</operator><name pos:start="267:55" pos:end="267:66"><name pos:start="267:55" pos:end="267:55">s</name><operator pos:start="267:56" pos:end="267:57">-&gt;</operator><name pos:start="267:58" pos:end="267:66">low_delay</name></name></expr>)</condition> <block pos:start="267:69" pos:end="273:13">{<block_content pos:start="269:17" pos:end="271:92">

                <expr_stmt pos:start="269:17" pos:end="271:92"><expr pos:start="269:17" pos:end="271:91"><name pos:start="269:17" pos:end="269:74"><name pos:start="269:17" pos:end="269:17">s</name><operator pos:start="269:18" pos:end="269:19">-&gt;</operator><name pos:start="269:20" pos:end="269:34">current_picture</name><operator pos:start="269:35" pos:end="269:35">.</operator><name pos:start="269:36" pos:end="269:42">mb_type</name><index pos:start="269:43" pos:end="269:74">[<expr pos:start="269:44" pos:end="269:73"><name pos:start="269:44" pos:end="269:50"><name pos:start="269:44" pos:end="269:44">s</name><operator pos:start="269:45" pos:end="269:46">-&gt;</operator><name pos:start="269:47" pos:end="269:50">mb_x</name></name> <operator pos:start="269:52" pos:end="269:52">+</operator> <name pos:start="269:54" pos:end="269:60"><name pos:start="269:54" pos:end="269:54">s</name><operator pos:start="269:55" pos:end="269:56">-&gt;</operator><name pos:start="269:57" pos:end="269:60">mb_y</name></name><operator pos:start="269:61" pos:end="269:61">*</operator><name pos:start="269:62" pos:end="269:73"><name pos:start="269:62" pos:end="269:62">s</name><operator pos:start="269:63" pos:end="269:64">-&gt;</operator><name pos:start="269:65" pos:end="269:73">mb_stride</name></name></expr>]</index></name> <operator pos:start="269:76" pos:end="269:76">=</operator>

                    <ternary pos:start="271:21" pos:end="271:91"><condition pos:start="271:21" pos:end="271:72"><expr pos:start="271:21" pos:end="271:70"><operator pos:start="271:21" pos:end="271:21">(</operator><name pos:start="271:22" pos:end="271:33"><name pos:start="271:22" pos:end="271:22">s</name><operator pos:start="271:23" pos:end="271:24">-&gt;</operator><name pos:start="271:25" pos:end="271:33">pict_type</name></name> <operator pos:start="271:35" pos:end="271:36">==</operator> <name pos:start="271:38" pos:end="271:54">AV_PICTURE_TYPE_P</name> <operator pos:start="271:56" pos:end="271:57">&amp;&amp;</operator> <name pos:start="271:59" pos:end="271:65">mb_type</name> <operator pos:start="271:67" pos:end="271:67">&lt;</operator> <literal type="number" pos:start="271:69" pos:end="271:69">8</literal><operator pos:start="271:70" pos:end="271:70">)</operator></expr> ?</condition><then pos:start="271:74" pos:end="271:86"> <expr pos:start="271:74" pos:end="271:86"><operator pos:start="271:74" pos:end="271:74">(</operator><name pos:start="271:75" pos:end="271:81">mb_type</name> <operator pos:start="271:83" pos:end="271:83">-</operator> <literal type="number" pos:start="271:85" pos:end="271:85">1</literal><operator pos:start="271:86" pos:end="271:86">)</operator></expr> </then><else pos:start="271:88" pos:end="271:91">: <expr pos:start="271:90" pos:end="271:91"><operator pos:start="271:90" pos:end="271:90">-</operator><literal type="number" pos:start="271:91" pos:end="271:91">1</literal></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="279:9" pos:end="279:46"><expr pos:start="279:9" pos:end="279:45"><call pos:start="279:9" pos:end="279:45"><name pos:start="279:9" pos:end="279:26">ff_draw_horiz_band</name><argument_list pos:start="279:27" pos:end="279:45">(<argument pos:start="279:28" pos:end="279:28"><expr pos:start="279:28" pos:end="279:28"><name pos:start="279:28" pos:end="279:28">s</name></expr></argument>, <argument pos:start="279:31" pos:end="279:40"><expr pos:start="279:31" pos:end="279:40"><literal type="number" pos:start="279:31" pos:end="279:32">16</literal><operator pos:start="279:33" pos:end="279:33">*</operator><name pos:start="279:34" pos:end="279:40"><name pos:start="279:34" pos:end="279:34">s</name><operator pos:start="279:35" pos:end="279:36">-&gt;</operator><name pos:start="279:37" pos:end="279:40">mb_y</name></name></expr></argument>, <argument pos:start="279:43" pos:end="279:44"><expr pos:start="279:43" pos:end="279:44"><literal type="number" pos:start="279:43" pos:end="279:44">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="285:5" pos:end="285:47"><expr pos:start="285:5" pos:end="285:46"><name pos:start="285:5" pos:end="285:8">left</name> <operator pos:start="285:10" pos:end="285:10">=</operator> <name pos:start="285:12" pos:end="285:19">buf_size</name><operator pos:start="285:20" pos:end="285:20">*</operator><literal type="number" pos:start="285:21" pos:end="285:23">8</literal> <operator pos:start="285:23" pos:end="285:23">-</operator> <call pos:start="285:25" pos:end="285:46"><name pos:start="285:25" pos:end="285:38">get_bits_count</name><argument_list pos:start="285:39" pos:end="285:46">(<argument pos:start="285:40" pos:end="285:45"><expr pos:start="285:40" pos:end="285:45"><operator pos:start="285:40" pos:end="285:40">&amp;</operator><name pos:start="285:41" pos:end="285:45"><name pos:start="285:41" pos:end="285:41">s</name><operator pos:start="285:42" pos:end="285:43">-&gt;</operator><name pos:start="285:44" pos:end="285:45">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="289:5" pos:end="295:5"><if pos:start="289:5" pos:end="295:5">if <condition pos:start="289:8" pos:end="289:58">(<expr pos:start="289:9" pos:end="289:57"><name pos:start="289:9" pos:end="289:15"><name pos:start="289:9" pos:end="289:9">s</name><operator pos:start="289:10" pos:end="289:11">-&gt;</operator><name pos:start="289:12" pos:end="289:15">mb_y</name></name> <operator pos:start="289:17" pos:end="289:18">!=</operator> <name pos:start="289:20" pos:end="289:31"><name pos:start="289:20" pos:end="289:20">s</name><operator pos:start="289:21" pos:end="289:22">-&gt;</operator><name pos:start="289:23" pos:end="289:31">mb_height</name></name> <operator pos:start="289:33" pos:end="289:34">||</operator> <name pos:start="289:36" pos:end="289:42"><name pos:start="289:36" pos:end="289:36">s</name><operator pos:start="289:37" pos:end="289:38">-&gt;</operator><name pos:start="289:39" pos:end="289:42">mb_x</name></name> <operator pos:start="289:44" pos:end="289:45">!=</operator> <name pos:start="289:47" pos:end="289:57"><name pos:start="289:47" pos:end="289:47">s</name><operator pos:start="289:48" pos:end="289:49">-&gt;</operator><name pos:start="289:50" pos:end="289:57">mb_width</name></name></expr>)</condition> <block pos:start="289:60" pos:end="295:5">{<block_content pos:start="291:9" pos:end="291:131">

        <expr_stmt pos:start="291:9" pos:end="291:131"><expr pos:start="291:9" pos:end="291:130"><call pos:start="291:9" pos:end="291:130"><name pos:start="291:9" pos:end="291:14">av_log</name><argument_list pos:start="291:15" pos:end="291:130">(<argument pos:start="291:16" pos:end="291:20"><expr pos:start="291:16" pos:end="291:20"><name pos:start="291:16" pos:end="291:20">avctx</name></expr></argument>, <argument pos:start="291:23" pos:end="291:33"><expr pos:start="291:23" pos:end="291:33"><name pos:start="291:23" pos:end="291:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="291:36" pos:end="291:84"><expr pos:start="291:36" pos:end="291:84"><literal type="string" pos:start="291:36" pos:end="291:84">"frame num %d incomplete pic x %d y %d left %d\n"</literal></expr></argument>, <argument pos:start="291:87" pos:end="291:105"><expr pos:start="291:87" pos:end="291:105"><name pos:start="291:87" pos:end="291:105"><name pos:start="291:87" pos:end="291:91">avctx</name><operator pos:start="291:92" pos:end="291:93">-&gt;</operator><name pos:start="291:94" pos:end="291:105">frame_number</name></name></expr></argument>, <argument pos:start="291:108" pos:end="291:114"><expr pos:start="291:108" pos:end="291:114"><name pos:start="291:108" pos:end="291:114"><name pos:start="291:108" pos:end="291:108">s</name><operator pos:start="291:109" pos:end="291:110">-&gt;</operator><name pos:start="291:111" pos:end="291:114">mb_y</name></name></expr></argument>, <argument pos:start="291:117" pos:end="291:123"><expr pos:start="291:117" pos:end="291:123"><name pos:start="291:117" pos:end="291:123"><name pos:start="291:117" pos:end="291:117">s</name><operator pos:start="291:118" pos:end="291:119">-&gt;</operator><name pos:start="291:120" pos:end="291:123">mb_x</name></name></expr></argument>, <argument pos:start="291:126" pos:end="291:129"><expr pos:start="291:126" pos:end="291:129"><name pos:start="291:126" pos:end="291:129">left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="293:9" pos:end="293:49">//av_hex_dump(stderr, buf+buf_size-8, 8);</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="299:5" pos:end="305:5"><if pos:start="299:5" pos:end="305:5">if <condition pos:start="299:8" pos:end="299:17">(<expr pos:start="299:9" pos:end="299:16"><name pos:start="299:9" pos:end="299:12">left</name> <operator pos:start="299:14" pos:end="299:14">&lt;</operator> <literal type="number" pos:start="299:16" pos:end="299:16">0</literal></expr>)</condition> <block pos:start="299:19" pos:end="305:5">{<block_content pos:start="301:9" pos:end="303:18">

        <expr_stmt pos:start="301:9" pos:end="301:89"><expr pos:start="301:9" pos:end="301:88"><call pos:start="301:9" pos:end="301:88"><name pos:start="301:9" pos:end="301:14">av_log</name><argument_list pos:start="301:15" pos:end="301:88">(<argument pos:start="301:16" pos:end="301:20"><expr pos:start="301:16" pos:end="301:20"><name pos:start="301:16" pos:end="301:20">avctx</name></expr></argument>, <argument pos:start="301:23" pos:end="301:34"><expr pos:start="301:23" pos:end="301:34"><name pos:start="301:23" pos:end="301:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="301:37" pos:end="301:60"><expr pos:start="301:37" pos:end="301:60"><literal type="string" pos:start="301:37" pos:end="301:60">"frame num %d left %d\n"</literal></expr></argument>, <argument pos:start="301:63" pos:end="301:81"><expr pos:start="301:63" pos:end="301:81"><name pos:start="301:63" pos:end="301:81"><name pos:start="301:63" pos:end="301:67">avctx</name><operator pos:start="301:68" pos:end="301:69">-&gt;</operator><name pos:start="301:70" pos:end="301:81">frame_number</name></name></expr></argument>, <argument pos:start="301:84" pos:end="301:87"><expr pos:start="301:84" pos:end="301:87"><name pos:start="301:84" pos:end="301:87">left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="303:9" pos:end="303:18">return <expr pos:start="303:16" pos:end="303:17"><operator pos:start="303:16" pos:end="303:16">-</operator><literal type="number" pos:start="303:17" pos:end="303:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="309:5" pos:end="309:21"><expr pos:start="309:5" pos:end="309:20"><call pos:start="309:5" pos:end="309:20"><name pos:start="309:5" pos:end="309:17">MPV_frame_end</name><argument_list pos:start="309:18" pos:end="309:20">(<argument pos:start="309:19" pos:end="309:19"><expr pos:start="309:19" pos:end="309:19"><name pos:start="309:19" pos:end="309:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="313:5" pos:end="321:5"><if pos:start="313:5" pos:end="317:5">if <condition pos:start="313:8" pos:end="313:58">(<expr pos:start="313:9" pos:end="313:57"><name pos:start="313:9" pos:end="313:20"><name pos:start="313:9" pos:end="313:9">s</name><operator pos:start="313:10" pos:end="313:11">-&gt;</operator><name pos:start="313:12" pos:end="313:20">pict_type</name></name> <operator pos:start="313:22" pos:end="313:23">==</operator> <name pos:start="313:25" pos:end="313:41">AV_PICTURE_TYPE_B</name> <operator pos:start="313:43" pos:end="313:44">||</operator> <name pos:start="313:46" pos:end="313:57"><name pos:start="313:46" pos:end="313:46">s</name><operator pos:start="313:47" pos:end="313:48">-&gt;</operator><name pos:start="313:49" pos:end="313:57">low_delay</name></name></expr>)</condition> <block pos:start="313:60" pos:end="317:5">{<block_content pos:start="315:9" pos:end="315:61">

        <expr_stmt pos:start="315:9" pos:end="315:61"><expr pos:start="315:9" pos:end="315:60"><operator pos:start="315:9" pos:end="315:9">*</operator><operator pos:start="315:10" pos:end="315:10">(</operator><name pos:start="315:11" pos:end="315:17">AVFrame</name> <operator pos:start="315:19" pos:end="315:19">*</operator><operator pos:start="315:20" pos:end="315:20">)</operator> <name pos:start="315:22" pos:end="315:25">data</name> <operator pos:start="315:27" pos:end="315:27">=</operator> <operator pos:start="315:29" pos:end="315:29">*</operator><operator pos:start="315:30" pos:end="315:30">(</operator><name pos:start="315:31" pos:end="315:37">AVFrame</name> <operator pos:start="315:39" pos:end="315:39">*</operator><operator pos:start="315:40" pos:end="315:40">)</operator> <operator pos:start="315:42" pos:end="315:42">&amp;</operator><name pos:start="315:43" pos:end="315:60"><name pos:start="315:43" pos:end="315:43">s</name><operator pos:start="315:44" pos:end="315:45">-&gt;</operator><name pos:start="315:46" pos:end="315:60">current_picture</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="317:7" pos:end="321:5">else <block pos:start="317:12" pos:end="321:5">{<block_content pos:start="319:9" pos:end="319:58">

        <expr_stmt pos:start="319:9" pos:end="319:58"><expr pos:start="319:9" pos:end="319:57"><operator pos:start="319:9" pos:end="319:9">*</operator><operator pos:start="319:10" pos:end="319:10">(</operator><name pos:start="319:11" pos:end="319:17">AVFrame</name> <operator pos:start="319:19" pos:end="319:19">*</operator><operator pos:start="319:20" pos:end="319:20">)</operator> <name pos:start="319:22" pos:end="319:25">data</name> <operator pos:start="319:27" pos:end="319:27">=</operator> <operator pos:start="319:29" pos:end="319:29">*</operator><operator pos:start="319:30" pos:end="319:30">(</operator><name pos:start="319:31" pos:end="319:37">AVFrame</name> <operator pos:start="319:39" pos:end="319:39">*</operator><operator pos:start="319:40" pos:end="319:40">)</operator> <operator pos:start="319:42" pos:end="319:42">&amp;</operator><name pos:start="319:43" pos:end="319:57"><name pos:start="319:43" pos:end="319:43">s</name><operator pos:start="319:44" pos:end="319:45">-&gt;</operator><name pos:start="319:46" pos:end="319:57">last_picture</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="325:5" pos:end="325:51">/* Do not output the last pic after seeking. */</comment>

    <if_stmt pos:start="327:5" pos:end="331:5"><if pos:start="327:5" pos:end="331:5">if <condition pos:start="327:8" pos:end="327:44">(<expr pos:start="327:9" pos:end="327:43"><name pos:start="327:9" pos:end="327:27"><name pos:start="327:9" pos:end="327:9">s</name><operator pos:start="327:10" pos:end="327:11">-&gt;</operator><name pos:start="327:12" pos:end="327:27">last_picture_ptr</name></name> <operator pos:start="327:29" pos:end="327:30">||</operator> <name pos:start="327:32" pos:end="327:43"><name pos:start="327:32" pos:end="327:32">s</name><operator pos:start="327:33" pos:end="327:34">-&gt;</operator><name pos:start="327:35" pos:end="327:43">low_delay</name></name></expr>)</condition> <block pos:start="327:46" pos:end="331:5">{<block_content pos:start="329:9" pos:end="329:37">

        <expr_stmt pos:start="329:9" pos:end="329:37"><expr pos:start="329:9" pos:end="329:36"><operator pos:start="329:9" pos:end="329:9">*</operator><name pos:start="329:10" pos:end="329:18">data_size</name> <operator pos:start="329:20" pos:end="329:20">=</operator> <sizeof pos:start="329:22" pos:end="329:36">sizeof<argument_list pos:start="329:28" pos:end="329:36">(<argument pos:start="329:29" pos:end="329:35"><expr pos:start="329:29" pos:end="329:35"><name pos:start="329:29" pos:end="329:35">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="335:5" pos:end="335:20">return <expr pos:start="335:12" pos:end="335:19"><name pos:start="335:12" pos:end="335:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
