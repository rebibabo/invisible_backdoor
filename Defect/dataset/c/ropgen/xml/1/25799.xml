<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25799.c" pos:tabs="8"><function pos:start="1:1" pos:end="241:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">dvbsub_parse</name><parameter_list pos:start="1:24" pos:end="7:57">(<parameter pos:start="1:25" pos:end="1:47"><decl pos:start="1:25" pos:end="1:47"><type pos:start="1:25" pos:end="1:47"><name pos:start="1:25" pos:end="1:44">AVCodecParserContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:45"><decl pos:start="3:25" pos:end="3:45"><type pos:start="3:25" pos:end="3:45"><name pos:start="3:25" pos:end="3:38">AVCodecContext</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:45">avctx</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:47"><decl pos:start="5:25" pos:end="5:47"><type pos:start="5:25" pos:end="5:47"><specifier pos:start="5:25" pos:end="5:29">const</specifier> <name pos:start="5:31" pos:end="5:37">uint8_t</name> <modifier pos:start="5:39" pos:end="5:39">*</modifier><modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:47">poutbuf</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:66"><decl pos:start="5:50" pos:end="5:66"><type pos:start="5:50" pos:end="5:66"><name pos:start="5:50" pos:end="5:52">int</name> <modifier pos:start="5:54" pos:end="5:54">*</modifier></type><name pos:start="5:55" pos:end="5:66">poutbuf_size</name></decl></parameter>,

                        <parameter pos:start="7:25" pos:end="7:42"><decl pos:start="7:25" pos:end="7:42"><type pos:start="7:25" pos:end="7:42"><specifier pos:start="7:25" pos:end="7:29">const</specifier> <name pos:start="7:31" pos:end="7:37">uint8_t</name> <modifier pos:start="7:39" pos:end="7:39">*</modifier></type><name pos:start="7:40" pos:end="7:42">buf</name></decl></parameter>, <parameter pos:start="7:45" pos:end="7:56"><decl pos:start="7:45" pos:end="7:56"><type pos:start="7:45" pos:end="7:56"><name pos:start="7:45" pos:end="7:47">int</name></type> <name pos:start="7:49" pos:end="7:56">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="241:1">{<block_content pos:start="11:5" pos:end="239:20">

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:22">DVBSubParseContext</name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:26">pc</name> <init pos:start="11:28" pos:end="11:41">= <expr pos:start="11:30" pos:end="11:41"><name pos:start="11:30" pos:end="11:41"><name pos:start="11:30" pos:end="11:30">s</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:14">p</name></decl>, <decl pos:start="13:17" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:22">p_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:14">len</name></decl>, <decl pos:start="15:17" pos:end="15:27"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:17" pos:end="15:23">buf_pos</name> <init pos:start="15:25" pos:end="15:27">= <expr pos:start="15:27" pos:end="15:27"><literal type="number" pos:start="15:27" pos:end="15:27">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="21:77"><expr pos:start="19:5" pos:end="21:76"><call pos:start="19:5" pos:end="21:76"><name pos:start="19:5" pos:end="19:11">av_dlog</name><argument_list pos:start="19:12" pos:end="21:76">(<argument pos:start="19:13" pos:end="19:17"><expr pos:start="19:13" pos:end="19:17"><name pos:start="19:13" pos:end="19:17">avctx</name></expr></argument>, <argument pos:start="19:20" pos:end="19:86"><expr pos:start="19:20" pos:end="19:86"><literal type="string" pos:start="19:20" pos:end="19:43">"DVB parse packet pts=%"</literal><name pos:start="19:44" pos:end="19:49">PRIx64</name><literal type="string" pos:start="19:50" pos:end="19:59">", lpts=%"</literal><name pos:start="19:60" pos:end="19:65">PRIx64</name><literal type="string" pos:start="19:66" pos:end="19:75">", cpts=%"</literal><name pos:start="19:76" pos:end="19:81">PRIx64</name><literal type="string" pos:start="19:82" pos:end="19:86">":\n"</literal></expr></argument>,

            <argument pos:start="21:13" pos:end="21:18"><expr pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:18">pts</name></name></expr></argument>, <argument pos:start="21:21" pos:end="21:31"><expr pos:start="21:21" pos:end="21:31"><name pos:start="21:21" pos:end="21:31"><name pos:start="21:21" pos:end="21:21">s</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:31">last_pts</name></name></expr></argument>, <argument pos:start="21:34" pos:end="21:75"><expr pos:start="21:34" pos:end="21:75"><name pos:start="21:34" pos:end="21:75"><name pos:start="21:34" pos:end="21:34">s</name><operator pos:start="21:35" pos:end="21:36">-&gt;</operator><name pos:start="21:37" pos:end="21:49">cur_frame_pts</name><index pos:start="21:50" pos:end="21:75">[<expr pos:start="21:51" pos:end="21:74"><name pos:start="21:51" pos:end="21:74"><name pos:start="21:51" pos:end="21:51">s</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:74">cur_frame_start_index</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="25:5" pos:end="35:5">for <control pos:start="25:9" pos:end="25:32">(<init pos:start="25:10" pos:end="25:13"><expr pos:start="25:10" pos:end="25:12"><name pos:start="25:10" pos:end="25:10">i</name><operator pos:start="25:11" pos:end="25:11">=</operator><literal type="number" pos:start="25:12" pos:end="25:12">0</literal></expr>;</init> <condition pos:start="25:15" pos:end="25:27"><expr pos:start="25:15" pos:end="25:26"><name pos:start="25:15" pos:end="25:15">i</name> <operator pos:start="25:17" pos:end="25:17">&lt;</operator> <name pos:start="25:19" pos:end="25:26">buf_size</name></expr>;</condition> <incr pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><name pos:start="25:29" pos:end="25:29">i</name><operator pos:start="25:30" pos:end="25:31">++</operator></expr></incr>)</control>

    <block pos:start="27:5" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:33">

        <expr_stmt pos:start="29:9" pos:end="29:40"><expr pos:start="29:9" pos:end="29:39"><call pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:15">av_dlog</name><argument_list pos:start="29:16" pos:end="29:39">(<argument pos:start="29:17" pos:end="29:21"><expr pos:start="29:17" pos:end="29:21"><name pos:start="29:17" pos:end="29:21">avctx</name></expr></argument>, <argument pos:start="29:24" pos:end="29:30"><expr pos:start="29:24" pos:end="29:30"><literal type="string" pos:start="29:24" pos:end="29:30">"%02x "</literal></expr></argument>, <argument pos:start="29:33" pos:end="29:38"><expr pos:start="29:33" pos:end="29:38"><name pos:start="29:33" pos:end="29:38"><name pos:start="29:33" pos:end="29:35">buf</name><index pos:start="29:36" pos:end="29:38">[<expr pos:start="29:37" pos:end="29:37"><name pos:start="29:37" pos:end="29:37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:33"><if pos:start="31:9" pos:end="33:33">if <condition pos:start="31:12" pos:end="31:25">(<expr pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:13">i</name> <operator pos:start="31:15" pos:end="31:15">%</operator> <literal type="number" pos:start="31:17" pos:end="31:18">16</literal> <operator pos:start="31:20" pos:end="31:21">==</operator> <literal type="number" pos:start="31:23" pos:end="31:24">15</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:33"><block_content pos:start="33:13" pos:end="33:33">

            <expr_stmt pos:start="33:13" pos:end="33:33"><expr pos:start="33:13" pos:end="33:32"><call pos:start="33:13" pos:end="33:32"><name pos:start="33:13" pos:end="33:19">av_dlog</name><argument_list pos:start="33:20" pos:end="33:32">(<argument pos:start="33:21" pos:end="33:25"><expr pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:25">avctx</name></expr></argument>, <argument pos:start="33:28" pos:end="33:31"><expr pos:start="33:28" pos:end="33:31"><literal type="string" pos:start="33:28" pos:end="33:31">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="39:5" pos:end="41:29"><if pos:start="39:5" pos:end="41:29">if <condition pos:start="39:8" pos:end="39:20">(<expr pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:9">i</name> <operator pos:start="39:11" pos:end="39:11">%</operator> <literal type="number" pos:start="39:13" pos:end="39:14">16</literal> <operator pos:start="39:16" pos:end="39:17">!=</operator> <literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:29"><block_content pos:start="41:9" pos:end="41:29">

        <expr_stmt pos:start="41:9" pos:end="41:29"><expr pos:start="41:9" pos:end="41:28"><call pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:15">av_dlog</name><argument_list pos:start="41:16" pos:end="41:28">(<argument pos:start="41:17" pos:end="41:21"><expr pos:start="41:17" pos:end="41:21"><name pos:start="41:17" pos:end="41:21">avctx</name></expr></argument>, <argument pos:start="41:24" pos:end="41:27"><expr pos:start="41:24" pos:end="41:27"><literal type="string" pos:start="41:24" pos:end="41:27">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:20"><expr pos:start="45:5" pos:end="45:19"><operator pos:start="45:5" pos:end="45:5">*</operator><name pos:start="45:6" pos:end="45:12">poutbuf</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <name pos:start="45:16" pos:end="45:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:22"><expr pos:start="47:5" pos:end="47:21"><operator pos:start="47:5" pos:end="47:5">*</operator><name pos:start="47:6" pos:end="47:17">poutbuf_size</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <literal type="number" pos:start="47:21" pos:end="47:21">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:27"><expr pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:22"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:22">fetch_timestamp</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <literal type="number" pos:start="51:26" pos:end="51:26">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="123:5"><if pos:start="55:5" pos:end="93:5">if <condition pos:start="55:8" pos:end="55:58">(<expr pos:start="55:9" pos:end="55:57"><name pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:19">last_pts</name></name> <operator pos:start="55:21" pos:end="55:22">!=</operator> <name pos:start="55:24" pos:end="55:29"><name pos:start="55:24" pos:end="55:24">s</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:29">pts</name></name> <operator pos:start="55:31" pos:end="55:32">&amp;&amp;</operator> <name pos:start="55:34" pos:end="55:39"><name pos:start="55:34" pos:end="55:34">s</name><operator pos:start="55:35" pos:end="55:36">-&gt;</operator><name pos:start="55:37" pos:end="55:39">pts</name></name> <operator pos:start="55:41" pos:end="55:42">!=</operator> <name pos:start="55:44" pos:end="55:57">AV_NOPTS_VALUE</name></expr>)</condition> <comment type="block" pos:start="55:60" pos:end="55:86">/* Start of a new packet */</comment>

    <block pos:start="57:5" pos:end="93:5">{<block_content pos:start="59:9" pos:end="91:26">

        <if_stmt pos:start="59:9" pos:end="67:9"><if pos:start="59:9" pos:end="67:9">if <condition pos:start="59:12" pos:end="59:49">(<expr pos:start="59:13" pos:end="59:48"><name pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:14">pc</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:28">packet_index</name></name> <operator pos:start="59:30" pos:end="59:31">!=</operator> <name pos:start="59:33" pos:end="59:48"><name pos:start="59:33" pos:end="59:34">pc</name><operator pos:start="59:35" pos:end="59:36">-&gt;</operator><name pos:start="59:37" pos:end="59:48">packet_start</name></name></expr>)</condition>

        <block pos:start="61:9" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:57">

            <expr_stmt pos:start="63:13" pos:end="65:57"><expr pos:start="63:13" pos:end="65:56"><call pos:start="63:13" pos:end="65:56"><name pos:start="63:13" pos:end="63:19">av_dlog</name><argument_list pos:start="63:20" pos:end="65:56">(<argument pos:start="63:21" pos:end="63:25"><expr pos:start="63:21" pos:end="63:25"><name pos:start="63:21" pos:end="63:25">avctx</name></expr></argument>, <argument pos:start="63:28" pos:end="63:50"><expr pos:start="63:28" pos:end="63:50"><literal type="string" pos:start="63:28" pos:end="63:50">"Discarding %d bytes\n"</literal></expr></argument>,

                    <argument pos:start="65:21" pos:end="65:55"><expr pos:start="65:21" pos:end="65:55"><name pos:start="65:21" pos:end="65:36"><name pos:start="65:21" pos:end="65:22">pc</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:36">packet_index</name></name> <operator pos:start="65:38" pos:end="65:38">-</operator> <name pos:start="65:40" pos:end="65:55"><name pos:start="65:40" pos:end="65:41">pc</name><operator pos:start="65:42" pos:end="65:43">-&gt;</operator><name pos:start="65:44" pos:end="65:55">packet_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:29"><expr pos:start="71:9" pos:end="71:28"><name pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:10">pc</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:24">packet_start</name></name> <operator pos:start="71:26" pos:end="71:26">=</operator> <literal type="number" pos:start="71:28" pos:end="71:28">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:29"><expr pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:10">pc</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:24">packet_index</name></name> <operator pos:start="73:26" pos:end="73:26">=</operator> <literal type="number" pos:start="73:28" pos:end="73:28">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:61">(<expr pos:start="77:13" pos:end="77:60"><name pos:start="77:13" pos:end="77:20">buf_size</name> <operator pos:start="77:22" pos:end="77:22">&lt;</operator> <literal type="number" pos:start="77:24" pos:end="77:24">2</literal> <operator pos:start="77:26" pos:end="77:27">||</operator> <name pos:start="77:29" pos:end="77:34"><name pos:start="77:29" pos:end="77:31">buf</name><index pos:start="77:32" pos:end="77:34">[<expr pos:start="77:33" pos:end="77:33"><literal type="number" pos:start="77:33" pos:end="77:33">0</literal></expr>]</index></name> <operator pos:start="77:36" pos:end="77:37">!=</operator> <literal type="number" pos:start="77:39" pos:end="77:42">0x20</literal> <operator pos:start="77:44" pos:end="77:45">||</operator> <name pos:start="77:47" pos:end="77:52"><name pos:start="77:47" pos:end="77:49">buf</name><index pos:start="77:50" pos:end="77:52">[<expr pos:start="77:51" pos:end="77:51"><literal type="number" pos:start="77:51" pos:end="77:51">1</literal></expr>]</index></name> <operator pos:start="77:54" pos:end="77:55">!=</operator> <literal type="number" pos:start="77:57" pos:end="77:60">0x00</literal></expr>)</condition> <block pos:start="77:63" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:22">

            <expr_stmt pos:start="79:13" pos:end="79:50"><expr pos:start="79:13" pos:end="79:49"><call pos:start="79:13" pos:end="79:49"><name pos:start="79:13" pos:end="79:19">av_dlog</name><argument_list pos:start="79:20" pos:end="79:49">(<argument pos:start="79:21" pos:end="79:25"><expr pos:start="79:21" pos:end="79:25"><name pos:start="79:21" pos:end="79:25">avctx</name></expr></argument>, <argument pos:start="79:28" pos:end="79:48"><expr pos:start="79:28" pos:end="79:48"><literal type="string" pos:start="79:28" pos:end="79:48">"Bad packet header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="81:13" pos:end="81:22">return <expr pos:start="81:20" pos:end="81:21"><operator pos:start="81:20" pos:end="81:20">-</operator><literal type="number" pos:start="81:21" pos:end="81:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:20"><expr pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:15">buf_pos</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <literal type="number" pos:start="87:19" pos:end="87:19">2</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:26"><expr pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:21"><name pos:start="91:9" pos:end="91:10">pc</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:21">in_packet</name></name> <operator pos:start="91:23" pos:end="91:23">=</operator> <literal type="number" pos:start="91:25" pos:end="91:25">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="93:7" pos:end="123:5">else <block pos:start="93:12" pos:end="123:5">{<block_content pos:start="95:9" pos:end="121:9">

        <if_stmt pos:start="95:9" pos:end="121:9"><if pos:start="95:9" pos:end="121:9">if <condition pos:start="95:12" pos:end="95:34">(<expr pos:start="95:13" pos:end="95:33"><name pos:start="95:13" pos:end="95:28"><name pos:start="95:13" pos:end="95:14">pc</name><operator pos:start="95:15" pos:end="95:16">-&gt;</operator><name pos:start="95:17" pos:end="95:28">packet_start</name></name> <operator pos:start="95:30" pos:end="95:31">!=</operator> <literal type="number" pos:start="95:33" pos:end="95:33">0</literal></expr>)</condition>

        <block pos:start="97:9" pos:end="121:9">{<block_content pos:start="99:13" pos:end="119:13">

            <if_stmt pos:start="99:13" pos:end="119:13"><if pos:start="99:13" pos:end="113:13">if <condition pos:start="99:16" pos:end="99:53">(<expr pos:start="99:17" pos:end="99:52"><name pos:start="99:17" pos:end="99:32"><name pos:start="99:17" pos:end="99:18">pc</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:32">packet_index</name></name> <operator pos:start="99:34" pos:end="99:35">!=</operator> <name pos:start="99:37" pos:end="99:52"><name pos:start="99:37" pos:end="99:38">pc</name><operator pos:start="99:39" pos:end="99:40">-&gt;</operator><name pos:start="99:41" pos:end="99:52">packet_start</name></name></expr>)</condition>

            <block pos:start="101:13" pos:end="113:13">{<block_content pos:start="103:17" pos:end="111:37">

                <expr_stmt pos:start="103:17" pos:end="105:65"><expr pos:start="103:17" pos:end="105:64"><call pos:start="103:17" pos:end="105:64"><name pos:start="103:17" pos:end="103:23">memmove</name><argument_list pos:start="103:24" pos:end="105:64">(<argument pos:start="103:25" pos:end="103:38"><expr pos:start="103:25" pos:end="103:38"><name pos:start="103:25" pos:end="103:38"><name pos:start="103:25" pos:end="103:26">pc</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:38">packet_buf</name></name></expr></argument>, <argument pos:start="103:41" pos:end="103:73"><expr pos:start="103:41" pos:end="103:73"><name pos:start="103:41" pos:end="103:54"><name pos:start="103:41" pos:end="103:42">pc</name><operator pos:start="103:43" pos:end="103:44">-&gt;</operator><name pos:start="103:45" pos:end="103:54">packet_buf</name></name> <operator pos:start="103:56" pos:end="103:56">+</operator> <name pos:start="103:58" pos:end="103:73"><name pos:start="103:58" pos:end="103:59">pc</name><operator pos:start="103:60" pos:end="103:61">-&gt;</operator><name pos:start="103:62" pos:end="103:73">packet_start</name></name></expr></argument>,

                            <argument pos:start="105:29" pos:end="105:63"><expr pos:start="105:29" pos:end="105:63"><name pos:start="105:29" pos:end="105:44"><name pos:start="105:29" pos:end="105:30">pc</name><operator pos:start="105:31" pos:end="105:32">-&gt;</operator><name pos:start="105:33" pos:end="105:44">packet_index</name></name> <operator pos:start="105:46" pos:end="105:46">-</operator> <name pos:start="105:48" pos:end="105:63"><name pos:start="105:48" pos:end="105:49">pc</name><operator pos:start="105:50" pos:end="105:51">-&gt;</operator><name pos:start="105:52" pos:end="105:63">packet_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="109:17" pos:end="109:53"><expr pos:start="109:17" pos:end="109:52"><name pos:start="109:17" pos:end="109:32"><name pos:start="109:17" pos:end="109:18">pc</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:32">packet_index</name></name> <operator pos:start="109:34" pos:end="109:35">-=</operator> <name pos:start="109:37" pos:end="109:52"><name pos:start="109:37" pos:end="109:38">pc</name><operator pos:start="109:39" pos:end="109:40">-&gt;</operator><name pos:start="109:41" pos:end="109:52">packet_start</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:37"><expr pos:start="111:17" pos:end="111:36"><name pos:start="111:17" pos:end="111:32"><name pos:start="111:17" pos:end="111:18">pc</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:32">packet_start</name></name> <operator pos:start="111:34" pos:end="111:34">=</operator> <literal type="number" pos:start="111:36" pos:end="111:36">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="113:15" pos:end="119:13">else <block pos:start="113:20" pos:end="119:13">{<block_content pos:start="115:17" pos:end="117:37">

                <expr_stmt pos:start="115:17" pos:end="115:37"><expr pos:start="115:17" pos:end="115:36"><name pos:start="115:17" pos:end="115:32"><name pos:start="115:17" pos:end="115:18">pc</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:32">packet_start</name></name> <operator pos:start="115:34" pos:end="115:34">=</operator> <literal type="number" pos:start="115:36" pos:end="115:36">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:37"><expr pos:start="117:17" pos:end="117:36"><name pos:start="117:17" pos:end="117:32"><name pos:start="117:17" pos:end="117:18">pc</name><operator pos:start="117:19" pos:end="117:20">-&gt;</operator><name pos:start="117:21" pos:end="117:32">packet_index</name></name> <operator pos:start="117:34" pos:end="117:34">=</operator> <literal type="number" pos:start="117:36" pos:end="117:36">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="127:5" pos:end="129:18"><if pos:start="127:5" pos:end="129:18">if <condition pos:start="127:8" pos:end="127:63">(<expr pos:start="127:9" pos:end="127:62"><name pos:start="127:9" pos:end="127:16">buf_size</name> <operator pos:start="127:18" pos:end="127:18">-</operator> <name pos:start="127:20" pos:end="127:26">buf_pos</name> <operator pos:start="127:28" pos:end="127:28">+</operator> <name pos:start="127:30" pos:end="127:45"><name pos:start="127:30" pos:end="127:31">pc</name><operator pos:start="127:32" pos:end="127:33">-&gt;</operator><name pos:start="127:34" pos:end="127:45">packet_index</name></name> <operator pos:start="127:47" pos:end="127:47">&gt;</operator> <name pos:start="127:49" pos:end="127:62">PARSE_BUF_SIZE</name></expr>)</condition><block type="pseudo" pos:start="129:9" pos:end="129:18"><block_content pos:start="129:9" pos:end="129:18">

        <return pos:start="129:9" pos:end="129:18">return <expr pos:start="129:16" pos:end="129:17"><operator pos:start="129:16" pos:end="129:16">-</operator><literal type="number" pos:start="129:17" pos:end="129:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



<comment type="block" pos:start="133:1" pos:end="133:48">/* if not currently in a packet, discard data */</comment>

    <if_stmt pos:start="135:5" pos:end="137:24"><if pos:start="135:5" pos:end="137:24">if <condition pos:start="135:8" pos:end="135:27">(<expr pos:start="135:9" pos:end="135:26"><name pos:start="135:9" pos:end="135:21"><name pos:start="135:9" pos:end="135:10">pc</name><operator pos:start="135:11" pos:end="135:12">-&gt;</operator><name pos:start="135:13" pos:end="135:21">in_packet</name></name> <operator pos:start="135:23" pos:end="135:24">==</operator> <literal type="number" pos:start="135:26" pos:end="135:26">0</literal></expr>)</condition><block type="pseudo" pos:start="137:9" pos:end="137:24"><block_content pos:start="137:9" pos:end="137:24">

        <return pos:start="137:9" pos:end="137:24">return <expr pos:start="137:16" pos:end="137:23"><name pos:start="137:16" pos:end="137:23">buf_size</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:81"><expr pos:start="141:5" pos:end="141:80"><call pos:start="141:5" pos:end="141:80"><name pos:start="141:5" pos:end="141:10">memcpy</name><argument_list pos:start="141:11" pos:end="141:80">(<argument pos:start="141:12" pos:end="141:44"><expr pos:start="141:12" pos:end="141:44"><name pos:start="141:12" pos:end="141:25"><name pos:start="141:12" pos:end="141:13">pc</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:25">packet_buf</name></name> <operator pos:start="141:27" pos:end="141:27">+</operator> <name pos:start="141:29" pos:end="141:44"><name pos:start="141:29" pos:end="141:30">pc</name><operator pos:start="141:31" pos:end="141:32">-&gt;</operator><name pos:start="141:33" pos:end="141:44">packet_index</name></name></expr></argument>, <argument pos:start="141:47" pos:end="141:59"><expr pos:start="141:47" pos:end="141:59"><name pos:start="141:47" pos:end="141:49">buf</name> <operator pos:start="141:51" pos:end="141:51">+</operator> <name pos:start="141:53" pos:end="141:59">buf_pos</name></expr></argument>, <argument pos:start="141:62" pos:end="141:79"><expr pos:start="141:62" pos:end="141:79"><name pos:start="141:62" pos:end="141:69">buf_size</name> <operator pos:start="141:71" pos:end="141:71">-</operator> <name pos:start="141:73" pos:end="141:79">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:43"><expr pos:start="143:5" pos:end="143:42"><name pos:start="143:5" pos:end="143:20"><name pos:start="143:5" pos:end="143:6">pc</name><operator pos:start="143:7" pos:end="143:8">-&gt;</operator><name pos:start="143:9" pos:end="143:20">packet_index</name></name> <operator pos:start="143:22" pos:end="143:23">+=</operator> <name pos:start="143:25" pos:end="143:32">buf_size</name> <operator pos:start="143:34" pos:end="143:34">-</operator> <name pos:start="143:36" pos:end="143:42">buf_pos</name></expr>;</expr_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:23"><expr pos:start="147:5" pos:end="147:22"><name pos:start="147:5" pos:end="147:5">p</name> <operator pos:start="147:7" pos:end="147:7">=</operator> <name pos:start="147:9" pos:end="147:22"><name pos:start="147:9" pos:end="147:10">pc</name><operator pos:start="147:11" pos:end="147:12">-&gt;</operator><name pos:start="147:13" pos:end="147:22">packet_buf</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:46"><expr pos:start="149:5" pos:end="149:45"><name pos:start="149:5" pos:end="149:9">p_end</name> <operator pos:start="149:11" pos:end="149:11">=</operator> <name pos:start="149:13" pos:end="149:26"><name pos:start="149:13" pos:end="149:14">pc</name><operator pos:start="149:15" pos:end="149:16">-&gt;</operator><name pos:start="149:17" pos:end="149:26">packet_buf</name></name> <operator pos:start="149:28" pos:end="149:28">+</operator> <name pos:start="149:30" pos:end="149:45"><name pos:start="149:30" pos:end="149:31">pc</name><operator pos:start="149:32" pos:end="149:33">-&gt;</operator><name pos:start="149:34" pos:end="149:45">packet_index</name></name></expr>;</expr_stmt>



    <while pos:start="153:5" pos:end="217:5">while <condition pos:start="153:11" pos:end="153:21">(<expr pos:start="153:12" pos:end="153:20"><name pos:start="153:12" pos:end="153:12">p</name> <operator pos:start="153:14" pos:end="153:14">&lt;</operator> <name pos:start="153:16" pos:end="153:20">p_end</name></expr>)</condition>

    <block pos:start="155:5" pos:end="217:5">{<block_content pos:start="157:9" pos:end="215:9">

        <if_stmt pos:start="157:9" pos:end="215:9"><if pos:start="157:9" pos:end="187:9">if <condition pos:start="157:12" pos:end="157:23">(<expr pos:start="157:13" pos:end="157:22"><operator pos:start="157:13" pos:end="157:13">*</operator><name pos:start="157:14" pos:end="157:14">p</name> <operator pos:start="157:16" pos:end="157:17">==</operator> <literal type="number" pos:start="157:19" pos:end="157:22">0x0f</literal></expr>)</condition>

        <block pos:start="159:9" pos:end="187:9">{<block_content pos:start="161:13" pos:end="185:22">

            <if_stmt pos:start="161:13" pos:end="185:22"><if pos:start="161:13" pos:end="183:13">if <condition pos:start="161:16" pos:end="161:31">(<expr pos:start="161:17" pos:end="161:30"><name pos:start="161:17" pos:end="161:17">p</name> <operator pos:start="161:19" pos:end="161:19">+</operator> <literal type="number" pos:start="161:21" pos:end="161:21">6</literal> <operator pos:start="161:23" pos:end="161:24">&lt;=</operator> <name pos:start="161:26" pos:end="161:30">p_end</name></expr>)</condition>

            <block pos:start="163:13" pos:end="183:13">{<block_content pos:start="165:17" pos:end="181:26">

                <expr_stmt pos:start="165:17" pos:end="165:37"><expr pos:start="165:17" pos:end="165:36"><name pos:start="165:17" pos:end="165:19">len</name> <operator pos:start="165:21" pos:end="165:21">=</operator> <call pos:start="165:23" pos:end="165:36"><name pos:start="165:23" pos:end="165:29">AV_RB16</name><argument_list pos:start="165:30" pos:end="165:36">(<argument pos:start="165:31" pos:end="165:35"><expr pos:start="165:31" pos:end="165:35"><name pos:start="165:31" pos:end="165:31">p</name> <operator pos:start="165:33" pos:end="165:33">+</operator> <literal type="number" pos:start="165:35" pos:end="165:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="169:17" pos:end="181:26"><if pos:start="169:17" pos:end="179:17">if <condition pos:start="169:20" pos:end="169:41">(<expr pos:start="169:21" pos:end="169:40"><name pos:start="169:21" pos:end="169:21">p</name> <operator pos:start="169:23" pos:end="169:23">+</operator> <name pos:start="169:25" pos:end="169:27">len</name> <operator pos:start="169:29" pos:end="169:29">+</operator> <literal type="number" pos:start="169:31" pos:end="169:31">6</literal> <operator pos:start="169:33" pos:end="169:34">&lt;=</operator> <name pos:start="169:36" pos:end="169:40">p_end</name></expr>)</condition>

                <block pos:start="171:17" pos:end="179:17">{<block_content pos:start="173:21" pos:end="177:33">

                    <expr_stmt pos:start="173:21" pos:end="173:45"><expr pos:start="173:21" pos:end="173:44"><operator pos:start="173:21" pos:end="173:21">*</operator><name pos:start="173:22" pos:end="173:33">poutbuf_size</name> <operator pos:start="173:35" pos:end="173:36">+=</operator> <name pos:start="173:38" pos:end="173:40">len</name> <operator pos:start="173:42" pos:end="173:42">+</operator> <literal type="number" pos:start="173:44" pos:end="173:44">6</literal></expr>;</expr_stmt>



                    <expr_stmt pos:start="177:21" pos:end="177:33"><expr pos:start="177:21" pos:end="177:32"><name pos:start="177:21" pos:end="177:21">p</name> <operator pos:start="177:23" pos:end="177:24">+=</operator> <name pos:start="177:26" pos:end="177:28">len</name> <operator pos:start="177:30" pos:end="177:30">+</operator> <literal type="number" pos:start="177:32" pos:end="177:32">6</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="179:19" pos:end="181:26">else<block type="pseudo" pos:start="181:21" pos:end="181:26"><block_content pos:start="181:21" pos:end="181:26">

                    <break pos:start="181:21" pos:end="181:26">break;</break></block_content></block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="183:15" pos:end="185:22">else<block type="pseudo" pos:start="185:17" pos:end="185:22"><block_content pos:start="185:17" pos:end="185:22">

                <break pos:start="185:17" pos:end="185:22">break;</break></block_content></block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="187:11" pos:end="203:9">else if <condition pos:start="187:19" pos:end="187:30">(<expr pos:start="187:20" pos:end="187:29"><operator pos:start="187:20" pos:end="187:20">*</operator><name pos:start="187:21" pos:end="187:21">p</name> <operator pos:start="187:23" pos:end="187:24">==</operator> <literal type="number" pos:start="187:26" pos:end="187:29">0xff</literal></expr>)</condition> <block pos:start="187:32" pos:end="203:9">{<block_content pos:start="189:13" pos:end="201:18">

            <if_stmt pos:start="189:13" pos:end="195:13"><if pos:start="189:13" pos:end="195:13">if <condition pos:start="189:16" pos:end="189:30">(<expr pos:start="189:17" pos:end="189:29"><name pos:start="189:17" pos:end="189:17">p</name> <operator pos:start="189:19" pos:end="189:19">+</operator> <literal type="number" pos:start="189:21" pos:end="189:21">1</literal> <operator pos:start="189:23" pos:end="189:23">&lt;</operator> <name pos:start="189:25" pos:end="189:29">p_end</name></expr>)</condition>

            <block pos:start="191:13" pos:end="195:13">{<block_content pos:start="193:17" pos:end="193:58">

                <expr_stmt pos:start="193:17" pos:end="193:58"><expr pos:start="193:17" pos:end="193:57"><call pos:start="193:17" pos:end="193:57"><name pos:start="193:17" pos:end="193:23">av_dlog</name><argument_list pos:start="193:24" pos:end="193:57">(<argument pos:start="193:25" pos:end="193:29"><expr pos:start="193:25" pos:end="193:29"><name pos:start="193:25" pos:end="193:29">avctx</name></expr></argument>, <argument pos:start="193:32" pos:end="193:56"><expr pos:start="193:32" pos:end="193:56"><literal type="string" pos:start="193:32" pos:end="193:56">"Junk at end of packet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:50"><expr pos:start="197:13" pos:end="197:49"><name pos:start="197:13" pos:end="197:28"><name pos:start="197:13" pos:end="197:14">pc</name><operator pos:start="197:15" pos:end="197:16">-&gt;</operator><name pos:start="197:17" pos:end="197:28">packet_index</name></name> <operator pos:start="197:30" pos:end="197:30">=</operator> <name pos:start="197:32" pos:end="197:32">p</name> <operator pos:start="197:34" pos:end="197:34">-</operator> <name pos:start="197:36" pos:end="197:49"><name pos:start="197:36" pos:end="197:37">pc</name><operator pos:start="197:38" pos:end="197:39">-&gt;</operator><name pos:start="197:40" pos:end="197:49">packet_buf</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:30"><expr pos:start="199:13" pos:end="199:29"><name pos:start="199:13" pos:end="199:25"><name pos:start="199:13" pos:end="199:14">pc</name><operator pos:start="199:15" pos:end="199:16">-&gt;</operator><name pos:start="199:17" pos:end="199:25">in_packet</name></name> <operator pos:start="199:27" pos:end="199:27">=</operator> <literal type="number" pos:start="199:29" pos:end="199:29">0</literal></expr>;</expr_stmt>

            <break pos:start="201:13" pos:end="201:18">break;</break>

        </block_content>}</block></if> <else pos:start="203:11" pos:end="215:9">else <block pos:start="203:16" pos:end="215:9">{<block_content pos:start="205:13" pos:end="213:18">

            <expr_stmt pos:start="205:13" pos:end="205:60"><expr pos:start="205:13" pos:end="205:59"><call pos:start="205:13" pos:end="205:59"><name pos:start="205:13" pos:end="205:18">av_log</name><argument_list pos:start="205:19" pos:end="205:59">(<argument pos:start="205:20" pos:end="205:24"><expr pos:start="205:20" pos:end="205:24"><name pos:start="205:20" pos:end="205:24">avctx</name></expr></argument>, <argument pos:start="205:27" pos:end="205:38"><expr pos:start="205:27" pos:end="205:38"><name pos:start="205:27" pos:end="205:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="205:41" pos:end="205:58"><expr pos:start="205:41" pos:end="205:58"><literal type="string" pos:start="205:41" pos:end="205:58">"Junk in packet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="209:13" pos:end="209:50"><expr pos:start="209:13" pos:end="209:49"><name pos:start="209:13" pos:end="209:28"><name pos:start="209:13" pos:end="209:14">pc</name><operator pos:start="209:15" pos:end="209:16">-&gt;</operator><name pos:start="209:17" pos:end="209:28">packet_index</name></name> <operator pos:start="209:30" pos:end="209:30">=</operator> <name pos:start="209:32" pos:end="209:32">p</name> <operator pos:start="209:34" pos:end="209:34">-</operator> <name pos:start="209:36" pos:end="209:49"><name pos:start="209:36" pos:end="209:37">pc</name><operator pos:start="209:38" pos:end="209:39">-&gt;</operator><name pos:start="209:40" pos:end="209:49">packet_buf</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:30"><expr pos:start="211:13" pos:end="211:29"><name pos:start="211:13" pos:end="211:25"><name pos:start="211:13" pos:end="211:14">pc</name><operator pos:start="211:15" pos:end="211:16">-&gt;</operator><name pos:start="211:17" pos:end="211:25">in_packet</name></name> <operator pos:start="211:27" pos:end="211:27">=</operator> <literal type="number" pos:start="211:29" pos:end="211:29">0</literal></expr>;</expr_stmt>

            <break pos:start="213:13" pos:end="213:18">break;</break>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="221:5" pos:end="229:5"><if pos:start="221:5" pos:end="229:5">if <condition pos:start="221:8" pos:end="221:26">(<expr pos:start="221:9" pos:end="221:25"><operator pos:start="221:9" pos:end="221:9">*</operator><name pos:start="221:10" pos:end="221:21">poutbuf_size</name> <operator pos:start="221:23" pos:end="221:23">&gt;</operator> <literal type="number" pos:start="221:25" pos:end="221:25">0</literal></expr>)</condition>

    <block pos:start="223:5" pos:end="229:5">{<block_content pos:start="225:9" pos:end="227:41">

        <expr_stmt pos:start="225:9" pos:end="225:34"><expr pos:start="225:9" pos:end="225:33"><operator pos:start="225:9" pos:end="225:9">*</operator><name pos:start="225:10" pos:end="225:16">poutbuf</name> <operator pos:start="225:18" pos:end="225:18">=</operator> <name pos:start="225:20" pos:end="225:33"><name pos:start="225:20" pos:end="225:21">pc</name><operator pos:start="225:22" pos:end="225:23">-&gt;</operator><name pos:start="225:24" pos:end="225:33">packet_buf</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:41"><expr pos:start="227:9" pos:end="227:40"><name pos:start="227:9" pos:end="227:24"><name pos:start="227:9" pos:end="227:10">pc</name><operator pos:start="227:11" pos:end="227:12">-&gt;</operator><name pos:start="227:13" pos:end="227:24">packet_start</name></name> <operator pos:start="227:26" pos:end="227:26">=</operator> <operator pos:start="227:28" pos:end="227:28">*</operator><name pos:start="227:29" pos:end="227:40">poutbuf_size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="233:5" pos:end="235:29"><if pos:start="233:5" pos:end="235:29">if <condition pos:start="233:8" pos:end="233:33">(<expr pos:start="233:9" pos:end="233:32"><name pos:start="233:9" pos:end="233:14"><name pos:start="233:9" pos:end="233:9">s</name><operator pos:start="233:10" pos:end="233:11">-&gt;</operator><name pos:start="233:12" pos:end="233:14">pts</name></name> <operator pos:start="233:16" pos:end="233:17">==</operator> <name pos:start="233:19" pos:end="233:32">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="235:9" pos:end="235:29"><block_content pos:start="235:9" pos:end="235:29">

        <expr_stmt pos:start="235:9" pos:end="235:29"><expr pos:start="235:9" pos:end="235:28"><name pos:start="235:9" pos:end="235:14"><name pos:start="235:9" pos:end="235:9">s</name><operator pos:start="235:10" pos:end="235:11">-&gt;</operator><name pos:start="235:12" pos:end="235:14">pts</name></name> <operator pos:start="235:16" pos:end="235:16">=</operator> <name pos:start="235:18" pos:end="235:28"><name pos:start="235:18" pos:end="235:18">s</name><operator pos:start="235:19" pos:end="235:20">-&gt;</operator><name pos:start="235:21" pos:end="235:28">last_pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="239:5" pos:end="239:20">return <expr pos:start="239:12" pos:end="239:19"><name pos:start="239:12" pos:end="239:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
