<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2001.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:16">IMLT</name><parameter_list pos:start="1:17" pos:end="1:61">(<parameter pos:start="1:18" pos:end="1:30"><decl pos:start="1:18" pos:end="1:30"><type pos:start="1:18" pos:end="1:30"><name pos:start="1:18" pos:end="1:22">float</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:30">pInput</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:46"><decl pos:start="1:33" pos:end="1:46"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:37">float</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:46">pOutput</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:60">odd_band</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="43:45">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type>     <name pos:start="5:13" pos:end="5:13">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="33:5"><if pos:start="9:5" pos:end="33:5">if <condition pos:start="9:8" pos:end="9:17">(<expr pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:16">odd_band</name></expr>)</condition> <block pos:start="9:19" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:52">

        <comment type="block" format="doxygen" pos:start="11:9" pos:end="25:10">/**

        * Reverse the odd bands before IMDCT, this is an effect of the QMF transform

        * or it gives better compression to do it this way.

        * FIXME: It should be possible to handle this in ff_imdct_calc

        * for that to happen a modification of the prerotation step of

        * all SIMD code and C code is needed.

        * Or fix the functions before so they generate a pre reversed spectrum.

        */</comment>



        <for pos:start="29:9" pos:end="31:52">for <control pos:start="29:13" pos:end="29:29">(<init pos:start="29:14" pos:end="29:17"><expr pos:start="29:14" pos:end="29:16"><name pos:start="29:14" pos:end="29:14">i</name><operator pos:start="29:15" pos:end="29:15">=</operator><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</init> <condition pos:start="29:19" pos:end="29:24"><expr pos:start="29:19" pos:end="29:23"><name pos:start="29:19" pos:end="29:19">i</name><operator pos:start="29:20" pos:end="29:20">&lt;</operator><literal type="number" pos:start="29:21" pos:end="29:23">128</literal></expr>;</condition> <incr pos:start="29:26" pos:end="29:28"><expr pos:start="29:26" pos:end="29:28"><name pos:start="29:26" pos:end="29:26">i</name><operator pos:start="29:27" pos:end="29:28">++</operator></expr></incr>)</control><block type="pseudo" pos:start="31:13" pos:end="31:52"><block_content pos:start="31:13" pos:end="31:52">

            <expr_stmt pos:start="31:13" pos:end="31:52"><expr pos:start="31:13" pos:end="31:51"><call pos:start="31:13" pos:end="31:51"><name pos:start="31:13" pos:end="31:18">FFSWAP</name><argument_list pos:start="31:19" pos:end="31:51">(<argument pos:start="31:20" pos:end="31:24"><expr pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:24">float</name></expr></argument>, <argument pos:start="31:27" pos:end="31:35"><expr pos:start="31:27" pos:end="31:35"><name pos:start="31:27" pos:end="31:35"><name pos:start="31:27" pos:end="31:32">pInput</name><index pos:start="31:33" pos:end="31:35">[<expr pos:start="31:34" pos:end="31:34"><name pos:start="31:34" pos:end="31:34">i</name></expr>]</index></name></expr></argument>, <argument pos:start="31:38" pos:end="31:50"><expr pos:start="31:38" pos:end="31:50"><name pos:start="31:38" pos:end="31:50"><name pos:start="31:38" pos:end="31:43">pInput</name><index pos:start="31:44" pos:end="31:50">[<expr pos:start="31:45" pos:end="31:49"><literal type="number" pos:start="31:45" pos:end="31:48">255</literal><operator pos:start="31:48" pos:end="31:48">-</operator><name pos:start="31:49" pos:end="31:49">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:44"><expr pos:start="37:5" pos:end="37:43"><call pos:start="37:5" pos:end="37:43"><name pos:start="37:5" pos:end="37:17">ff_imdct_calc</name><argument_list pos:start="37:18" pos:end="37:43">(<argument pos:start="37:19" pos:end="37:27"><expr pos:start="37:19" pos:end="37:27"><operator pos:start="37:19" pos:end="37:19">&amp;</operator><name pos:start="37:20" pos:end="37:27">mdct_ctx</name></expr></argument>,<argument pos:start="37:29" pos:end="37:35"><expr pos:start="37:29" pos:end="37:35"><name pos:start="37:29" pos:end="37:35">pOutput</name></expr></argument>,<argument pos:start="37:37" pos:end="37:42"><expr pos:start="37:37" pos:end="37:42"><name pos:start="37:37" pos:end="37:42">pInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:42">/* Perform windowing on the output. */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:45"><expr pos:start="43:5" pos:end="43:44"><call pos:start="43:5" pos:end="43:44"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:7">dsp</name><operator pos:start="43:8" pos:end="43:8">.</operator><name pos:start="43:9" pos:end="43:19">vector_fmul</name></name><argument_list pos:start="43:20" pos:end="43:44">(<argument pos:start="43:21" pos:end="43:27"><expr pos:start="43:21" pos:end="43:27"><name pos:start="43:21" pos:end="43:27">pOutput</name></expr></argument>,<argument pos:start="43:29" pos:end="43:39"><expr pos:start="43:29" pos:end="43:39"><name pos:start="43:29" pos:end="43:39">mdct_window</name></expr></argument>,<argument pos:start="43:41" pos:end="43:43"><expr pos:start="43:41" pos:end="43:43"><literal type="number" pos:start="43:41" pos:end="43:43">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



</block_content>}</block></function>
</unit>
