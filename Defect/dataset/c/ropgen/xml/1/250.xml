<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/250.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">mxf_packet_timestamps</name><parameter_list pos:start="1:34" pos:end="1:65">(<parameter pos:start="1:35" pos:end="1:49"><decl pos:start="1:35" pos:end="1:49"><type pos:start="1:35" pos:end="1:49"><name pos:start="1:35" pos:end="1:44">MXFContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">mxf</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:64"><decl pos:start="1:52" pos:end="1:64"><type pos:start="1:52" pos:end="1:64"><name pos:start="1:52" pos:end="1:59">AVPacket</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:48">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:20">last_ofs</name> <init pos:start="5:22" pos:end="5:25">= <expr pos:start="5:24" pos:end="5:25"><operator pos:start="5:24" pos:end="5:24">-</operator><literal type="number" pos:start="5:25" pos:end="5:25">1</literal></expr></init></decl>, <decl pos:start="5:28" pos:end="5:35"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:28" pos:end="5:35">next_ofs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MXFIndexTable</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">t</name> <init pos:start="7:22" pos:end="7:44">= <expr pos:start="7:24" pos:end="7:44"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:44"><name pos:start="7:25" pos:end="7:27">mxf</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:41">index_tables</name><index pos:start="7:42" pos:end="7:44">[<expr pos:start="7:43" pos:end="7:43"><literal type="number" pos:start="7:43" pos:end="7:43">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="13:32">/* this is called from the OP1a demuxing logic, which means there

     * may be no index tables */</comment>

    <if_stmt pos:start="15:5" pos:end="17:15"><if pos:start="15:5" pos:end="17:15">if <condition pos:start="15:8" pos:end="15:34">(<expr pos:start="15:9" pos:end="15:33"><name pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:11">mxf</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:28">nb_index_tables</name></name> <operator pos:start="15:30" pos:end="15:31">&lt;=</operator> <literal type="number" pos:start="15:33" pos:end="15:33">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:15"><block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:89">/* find mxf-&gt;current_edit_unit so that the next edit unit starts ahead of pkt-&gt;pos */</comment>

    <for pos:start="23:5" pos:end="57:5">for <control pos:start="23:9" pos:end="23:12">(<init pos:start="23:10" pos:end="23:10">;</init><condition pos:start="23:11" pos:end="23:11">;</condition><incr/>)</control> <block pos:start="23:14" pos:end="57:5">{<block_content pos:start="25:9" pos:end="55:33">

        <if_stmt pos:start="25:9" pos:end="27:18"><if pos:start="25:9" pos:end="27:18">if <condition pos:start="25:12" pos:end="25:102">(<expr pos:start="25:13" pos:end="25:101"><call pos:start="25:13" pos:end="25:97"><name pos:start="25:13" pos:end="25:41">mxf_edit_unit_absolute_offset</name><argument_list pos:start="25:42" pos:end="25:97">(<argument pos:start="25:43" pos:end="25:45"><expr pos:start="25:43" pos:end="25:45"><name pos:start="25:43" pos:end="25:45">mxf</name></expr></argument>, <argument pos:start="25:48" pos:end="25:48"><expr pos:start="25:48" pos:end="25:48"><name pos:start="25:48" pos:end="25:48">t</name></expr></argument>, <argument pos:start="25:51" pos:end="25:76"><expr pos:start="25:51" pos:end="25:76"><name pos:start="25:51" pos:end="25:72"><name pos:start="25:51" pos:end="25:53">mxf</name><operator pos:start="25:54" pos:end="25:55">-&gt;</operator><name pos:start="25:56" pos:end="25:72">current_edit_unit</name></name> <operator pos:start="25:74" pos:end="25:74">+</operator> <literal type="number" pos:start="25:76" pos:end="25:76">1</literal></expr></argument>, <argument pos:start="25:79" pos:end="25:82"><expr pos:start="25:79" pos:end="25:82"><name pos:start="25:79" pos:end="25:82">NULL</name></expr></argument>, <argument pos:start="25:85" pos:end="25:93"><expr pos:start="25:85" pos:end="25:93"><operator pos:start="25:85" pos:end="25:85">&amp;</operator><name pos:start="25:86" pos:end="25:93">next_ofs</name></expr></argument>, <argument pos:start="25:96" pos:end="25:96"><expr pos:start="25:96" pos:end="25:96"><literal type="number" pos:start="25:96" pos:end="25:96">0</literal></expr></argument>)</argument_list></call> <operator pos:start="25:99" pos:end="25:99">&lt;</operator> <literal type="number" pos:start="25:101" pos:end="25:101">0</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:18"><block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break></block_content></block></if></if_stmt>



        <if_stmt pos:start="31:9" pos:end="43:9"><if pos:start="31:9" pos:end="43:9">if <condition pos:start="31:12" pos:end="31:33">(<expr pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:20">next_ofs</name> <operator pos:start="31:22" pos:end="31:23">&lt;=</operator> <name pos:start="31:25" pos:end="31:32">last_ofs</name></expr>)</condition> <block pos:start="31:35" pos:end="43:9">{<block_content pos:start="37:13" pos:end="41:19">

            <comment type="block" pos:start="33:13" pos:end="35:66">/* large next_ofs didn't change or current_edit_unit wrapped

             * around this fixes the infinite loop on zzuf3.mxf */</comment>

            <expr_stmt pos:start="37:13" pos:end="39:79"><expr pos:start="37:13" pos:end="39:78"><call pos:start="37:13" pos:end="39:78"><name pos:start="37:13" pos:end="37:18">av_log</name><argument_list pos:start="37:19" pos:end="39:78">(<argument pos:start="37:20" pos:end="37:26"><expr pos:start="37:20" pos:end="37:26"><name pos:start="37:20" pos:end="37:26"><name pos:start="37:20" pos:end="37:22">mxf</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:26">fc</name></name></expr></argument>, <argument pos:start="37:29" pos:end="37:40"><expr pos:start="37:29" pos:end="37:40"><name pos:start="37:29" pos:end="37:40">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="39:20" pos:end="39:77"><expr pos:start="39:20" pos:end="39:77"><literal type="string" pos:start="39:20" pos:end="39:77">"next_ofs didn't change. not deriving packet timestamps\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="47:9" pos:end="49:18"><if pos:start="47:9" pos:end="49:18">if <condition pos:start="47:12" pos:end="47:32">(<expr pos:start="47:13" pos:end="47:31"><name pos:start="47:13" pos:end="47:20">next_ofs</name> <operator pos:start="47:22" pos:end="47:22">&gt;</operator> <name pos:start="47:24" pos:end="47:31"><name pos:start="47:24" pos:end="47:26">pkt</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:31">pos</name></name></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:18"><block_content pos:start="49:13" pos:end="49:18">

            <break pos:start="49:13" pos:end="49:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:16">last_ofs</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:27">next_ofs</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:33"><expr pos:start="55:9" pos:end="55:32"><name pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:11">mxf</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:30">current_edit_unit</name></name><operator pos:start="55:31" pos:end="55:32">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="61:5" pos:end="63:15"><if pos:start="61:5" pos:end="63:15">if <condition pos:start="61:8" pos:end="61:46">(<expr pos:start="61:9" pos:end="61:45"><name pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:11">mxf</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:30">current_edit_unit</name></name> <operator pos:start="61:32" pos:end="61:33">&gt;=</operator> <name pos:start="61:35" pos:end="61:45"><name pos:start="61:35" pos:end="61:35">t</name><operator pos:start="61:36" pos:end="61:37">-&gt;</operator><name pos:start="61:38" pos:end="61:45">nb_ptses</name></name></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:15"><block_content pos:start="63:9" pos:end="63:15">

        <return pos:start="63:9" pos:end="63:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:53"><expr pos:start="67:5" pos:end="67:52"><name pos:start="67:5" pos:end="67:12"><name pos:start="67:5" pos:end="67:7">pkt</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:12">dts</name></name> <operator pos:start="67:14" pos:end="67:14">=</operator> <name pos:start="67:16" pos:end="67:37"><name pos:start="67:16" pos:end="67:18">mxf</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:37">current_edit_unit</name></name> <operator pos:start="67:39" pos:end="67:39">+</operator> <name pos:start="67:41" pos:end="67:52"><name pos:start="67:41" pos:end="67:41">t</name><operator pos:start="67:42" pos:end="67:43">-&gt;</operator><name pos:start="67:44" pos:end="67:52">first_dts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:48"><expr pos:start="69:5" pos:end="69:47"><name pos:start="69:5" pos:end="69:12"><name pos:start="69:5" pos:end="69:7">pkt</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:12">pts</name></name> <operator pos:start="69:14" pos:end="69:14">=</operator> <name pos:start="69:16" pos:end="69:47"><name pos:start="69:16" pos:end="69:16">t</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:23">ptses</name><index pos:start="69:24" pos:end="69:47">[<expr pos:start="69:25" pos:end="69:46"><name pos:start="69:25" pos:end="69:46"><name pos:start="69:25" pos:end="69:27">mxf</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:46">current_edit_unit</name></name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
