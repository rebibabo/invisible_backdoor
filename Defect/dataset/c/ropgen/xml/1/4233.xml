<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4233.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:35">ff_rv34_decode_init_thread_copy</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">RV34DecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">r</name> <init pos:start="7:23" pos:end="7:40">= <expr pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:29">avctx</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:23"><expr pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:5">r</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:8">s</name><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:14">avctx</name></name> <operator pos:start="11:16" pos:end="11:16">=</operator> <name pos:start="11:18" pos:end="11:22">avctx</name></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="27:5"><if pos:start="15:5" pos:end="27:5">if <condition pos:start="15:8" pos:end="15:33">(<expr pos:start="15:9" pos:end="15:32"><name pos:start="15:9" pos:end="15:32"><name pos:start="15:9" pos:end="15:13">avctx</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:23">internal</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:32">is_copy</name></name></expr>)</condition> <block pos:start="15:35" pos:end="27:5">{<block_content pos:start="17:9" pos:end="25:23">

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:9">r</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:27">tmp_b_block_base</name></name> <operator pos:start="17:29" pos:end="17:29">=</operator> <name pos:start="17:31" pos:end="17:34">NULL</name></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="21:23"><if pos:start="19:9" pos:end="21:23">if <condition pos:start="19:12" pos:end="19:50">(<expr pos:start="19:13" pos:end="19:49"><operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:16">err</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <call pos:start="19:20" pos:end="19:44"><name pos:start="19:20" pos:end="19:37">ff_MPV_common_init</name><argument_list pos:start="19:38" pos:end="19:44">(<argument pos:start="19:39" pos:end="19:43"><expr pos:start="19:39" pos:end="19:43"><operator pos:start="19:39" pos:end="19:39">&amp;</operator><name pos:start="19:40" pos:end="19:43"><name pos:start="19:40" pos:end="19:40">r</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:43">s</name></name></expr></argument>)</argument_list></call><operator pos:start="19:45" pos:end="19:45">)</operator> <operator pos:start="19:47" pos:end="19:47">&lt;</operator> <literal type="number" pos:start="19:49" pos:end="19:49">0</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:23"><block_content pos:start="21:13" pos:end="21:23">

            <return pos:start="21:13" pos:end="21:23">return <expr pos:start="21:20" pos:end="21:22"><name pos:start="21:20" pos:end="21:22">err</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="23:9" pos:end="25:23"><if pos:start="23:9" pos:end="25:23">if <condition pos:start="23:12" pos:end="23:46">(<expr pos:start="23:13" pos:end="23:45"><operator pos:start="23:13" pos:end="23:13">(</operator><name pos:start="23:14" pos:end="23:16">err</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <call pos:start="23:20" pos:end="23:40"><name pos:start="23:20" pos:end="23:37">rv34_decoder_alloc</name><argument_list pos:start="23:38" pos:end="23:40">(<argument pos:start="23:39" pos:end="23:39"><expr pos:start="23:39" pos:end="23:39"><name pos:start="23:39" pos:end="23:39">r</name></expr></argument>)</argument_list></call><operator pos:start="23:41" pos:end="23:41">)</operator> <operator pos:start="23:43" pos:end="23:43">&lt;</operator> <literal type="number" pos:start="23:45" pos:end="23:45">0</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:23"><block_content pos:start="25:13" pos:end="25:23">

            <return pos:start="25:13" pos:end="25:23">return <expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">err</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="31:5" pos:end="31:13">return <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
