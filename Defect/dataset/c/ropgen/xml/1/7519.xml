<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7519.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">twolame_encode_frame</name><parameter_list pos:start="1:32" pos:end="3:74">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:70"><decl pos:start="1:56" pos:end="1:70"><type pos:start="1:56" pos:end="1:70"><name pos:start="1:56" pos:end="1:63">AVPacket</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:70">avpkt</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:52"><decl pos:start="3:33" pos:end="3:52"><type pos:start="3:33" pos:end="3:52"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:45">AVFrame</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:52">frame</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:73"><decl pos:start="3:55" pos:end="3:73"><type pos:start="3:55" pos:end="3:73"><name pos:start="3:55" pos:end="3:57">int</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:73">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="133:1">{<block_content pos:start="7:5" pos:end="131:13">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">TWOLAMEContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:40">= <expr pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:29">avctx</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:19"><if pos:start="13:5" pos:end="15:19">if <condition pos:start="13:8" pos:end="13:69">(<expr pos:start="13:9" pos:end="13:68"><operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:12">ret</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <call pos:start="13:16" pos:end="13:63"><name pos:start="13:16" pos:end="13:30">ff_alloc_packet</name><argument_list pos:start="13:31" pos:end="13:63">(<argument pos:start="13:32" pos:end="13:36"><expr pos:start="13:32" pos:end="13:36"><name pos:start="13:32" pos:end="13:36">avpkt</name></expr></argument>, <argument pos:start="13:39" pos:end="13:62"><expr pos:start="13:39" pos:end="13:62"><name pos:start="13:39" pos:end="13:62">MPA_MAX_CODED_FRAME_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="13:64" pos:end="13:64">)</operator> <operator pos:start="13:66" pos:end="13:66">&lt;</operator> <literal type="number" pos:start="13:68" pos:end="13:68">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:19"><block_content pos:start="15:9" pos:end="15:19">

        <return pos:start="15:9" pos:end="15:19">return <expr pos:start="15:16" pos:end="15:18"><name pos:start="15:16" pos:end="15:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="91:5"><if pos:start="19:5" pos:end="87:5">if <condition pos:start="19:8" pos:end="19:14">(<expr pos:start="19:9" pos:end="19:13"><name pos:start="19:9" pos:end="19:13">frame</name></expr>)</condition> <block pos:start="19:16" pos:end="87:5">{<block_content pos:start="21:9" pos:end="85:9">

        <switch pos:start="21:9" pos:end="85:9">switch <condition pos:start="21:16" pos:end="21:34">(<expr pos:start="21:17" pos:end="21:33"><name pos:start="21:17" pos:end="21:33"><name pos:start="21:17" pos:end="21:21">avctx</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:33">sample_fmt</name></name></expr>)</condition> <block pos:start="21:36" pos:end="85:9">{<block_content pos:start="23:9" pos:end="83:31">

        <case pos:start="23:9" pos:end="23:31">case <expr pos:start="23:14" pos:end="23:30"><name pos:start="23:14" pos:end="23:30">AV_SAMPLE_FMT_FLT</name></expr>:</case>

            <expr_stmt pos:start="25:13" pos:end="33:73"><expr pos:start="25:13" pos:end="33:72"><name pos:start="25:13" pos:end="25:15">ret</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="33:72"><name pos:start="25:19" pos:end="25:59">twolame_encode_buffer_float32_interleaved</name><argument_list pos:start="25:60" pos:end="33:72">(<argument pos:start="25:61" pos:end="25:69"><expr pos:start="25:61" pos:end="25:69"><name pos:start="25:61" pos:end="25:69"><name pos:start="25:61" pos:end="25:61">s</name><operator pos:start="25:62" pos:end="25:63">-&gt;</operator><name pos:start="25:64" pos:end="25:69">glopts</name></name></expr></argument>,

                                                            <argument pos:start="27:61" pos:end="27:89"><expr pos:start="27:61" pos:end="27:89"><operator pos:start="27:61" pos:end="27:61">(</operator><specifier pos:start="27:62" pos:end="27:66">const</specifier> <name pos:start="27:68" pos:end="27:72">float</name> <operator pos:start="27:74" pos:end="27:74">*</operator><operator pos:start="27:75" pos:end="27:75">)</operator><name pos:start="27:76" pos:end="27:89"><name pos:start="27:76" pos:end="27:80">frame</name><operator pos:start="27:81" pos:end="27:82">-&gt;</operator><name pos:start="27:83" pos:end="27:86">data</name><index pos:start="27:87" pos:end="27:89">[<expr pos:start="27:88" pos:end="27:88"><literal type="number" pos:start="27:88" pos:end="27:88">0</literal></expr>]</index></name></expr></argument>,

                                                            <argument pos:start="29:61" pos:end="29:77"><expr pos:start="29:61" pos:end="29:77"><name pos:start="29:61" pos:end="29:77"><name pos:start="29:61" pos:end="29:65">frame</name><operator pos:start="29:66" pos:end="29:67">-&gt;</operator><name pos:start="29:68" pos:end="29:77">nb_samples</name></name></expr></argument>,

                                                            <argument pos:start="31:61" pos:end="31:71"><expr pos:start="31:61" pos:end="31:71"><name pos:start="31:61" pos:end="31:71"><name pos:start="31:61" pos:end="31:65">avpkt</name><operator pos:start="31:66" pos:end="31:67">-&gt;</operator><name pos:start="31:68" pos:end="31:71">data</name></name></expr></argument>,

                                                            <argument pos:start="33:61" pos:end="33:71"><expr pos:start="33:61" pos:end="33:71"><name pos:start="33:61" pos:end="33:71"><name pos:start="33:61" pos:end="33:65">avpkt</name><operator pos:start="33:66" pos:end="33:67">-&gt;</operator><name pos:start="33:68" pos:end="33:71">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        <case pos:start="37:9" pos:end="37:32">case <expr pos:start="37:14" pos:end="37:31"><name pos:start="37:14" pos:end="37:31">AV_SAMPLE_FMT_FLTP</name></expr>:</case>

            <expr_stmt pos:start="39:13" pos:end="47:74"><expr pos:start="39:13" pos:end="47:73"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="47:73"><name pos:start="39:19" pos:end="39:47">twolame_encode_buffer_float32</name><argument_list pos:start="39:48" pos:end="47:73">(<argument pos:start="39:49" pos:end="39:57"><expr pos:start="39:49" pos:end="39:57"><name pos:start="39:49" pos:end="39:57"><name pos:start="39:49" pos:end="39:49">s</name><operator pos:start="39:50" pos:end="39:51">-&gt;</operator><name pos:start="39:52" pos:end="39:57">glopts</name></name></expr></argument>,

                                                <argument pos:start="41:49" pos:end="41:77"><expr pos:start="41:49" pos:end="41:77"><operator pos:start="41:49" pos:end="41:49">(</operator><specifier pos:start="41:50" pos:end="41:54">const</specifier> <name pos:start="41:56" pos:end="41:60">float</name> <operator pos:start="41:62" pos:end="41:62">*</operator><operator pos:start="41:63" pos:end="41:63">)</operator><name pos:start="41:64" pos:end="41:77"><name pos:start="41:64" pos:end="41:68">frame</name><operator pos:start="41:69" pos:end="41:70">-&gt;</operator><name pos:start="41:71" pos:end="41:74">data</name><index pos:start="41:75" pos:end="41:77">[<expr pos:start="41:76" pos:end="41:76"><literal type="number" pos:start="41:76" pos:end="41:76">0</literal></expr>]</index></name></expr></argument>,

                                                <argument pos:start="43:49" pos:end="43:77"><expr pos:start="43:49" pos:end="43:77"><operator pos:start="43:49" pos:end="43:49">(</operator><specifier pos:start="43:50" pos:end="43:54">const</specifier> <name pos:start="43:56" pos:end="43:60">float</name> <operator pos:start="43:62" pos:end="43:62">*</operator><operator pos:start="43:63" pos:end="43:63">)</operator><name pos:start="43:64" pos:end="43:77"><name pos:start="43:64" pos:end="43:68">frame</name><operator pos:start="43:69" pos:end="43:70">-&gt;</operator><name pos:start="43:71" pos:end="43:74">data</name><index pos:start="43:75" pos:end="43:77">[<expr pos:start="43:76" pos:end="43:76"><literal type="number" pos:start="43:76" pos:end="43:76">1</literal></expr>]</index></name></expr></argument>,

                                                <argument pos:start="45:49" pos:end="45:65"><expr pos:start="45:49" pos:end="45:65"><name pos:start="45:49" pos:end="45:65"><name pos:start="45:49" pos:end="45:53">frame</name><operator pos:start="45:54" pos:end="45:55">-&gt;</operator><name pos:start="45:56" pos:end="45:65">nb_samples</name></name></expr></argument>,

                                                <argument pos:start="47:49" pos:end="47:59"><expr pos:start="47:49" pos:end="47:59"><name pos:start="47:49" pos:end="47:59"><name pos:start="47:49" pos:end="47:53">avpkt</name><operator pos:start="47:54" pos:end="47:55">-&gt;</operator><name pos:start="47:56" pos:end="47:59">data</name></name></expr></argument>, <argument pos:start="47:62" pos:end="47:72"><expr pos:start="47:62" pos:end="47:72"><name pos:start="47:62" pos:end="47:72"><name pos:start="47:62" pos:end="47:66">avpkt</name><operator pos:start="47:67" pos:end="47:68">-&gt;</operator><name pos:start="47:69" pos:end="47:72">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        <case pos:start="51:9" pos:end="51:31">case <expr pos:start="51:14" pos:end="51:30"><name pos:start="51:14" pos:end="51:30">AV_SAMPLE_FMT_S16</name></expr>:</case>

            <expr_stmt pos:start="53:13" pos:end="59:78"><expr pos:start="53:13" pos:end="59:77"><name pos:start="53:13" pos:end="53:15">ret</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <call pos:start="53:19" pos:end="59:77"><name pos:start="53:19" pos:end="53:51">twolame_encode_buffer_interleaved</name><argument_list pos:start="53:52" pos:end="59:77">(<argument pos:start="53:53" pos:end="53:61"><expr pos:start="53:53" pos:end="53:61"><name pos:start="53:53" pos:end="53:61"><name pos:start="53:53" pos:end="53:53">s</name><operator pos:start="53:54" pos:end="53:55">-&gt;</operator><name pos:start="53:56" pos:end="53:61">glopts</name></name></expr></argument>,

                                                    <argument pos:start="55:53" pos:end="55:85"><expr pos:start="55:53" pos:end="55:85"><operator pos:start="55:53" pos:end="55:53">(</operator><specifier pos:start="55:54" pos:end="55:58">const</specifier> <name pos:start="55:60" pos:end="55:64">short</name> <name pos:start="55:66" pos:end="55:68">int</name> <operator pos:start="55:70" pos:end="55:70">*</operator><operator pos:start="55:71" pos:end="55:71">)</operator><name pos:start="55:72" pos:end="55:85"><name pos:start="55:72" pos:end="55:76">frame</name><operator pos:start="55:77" pos:end="55:78">-&gt;</operator><name pos:start="55:79" pos:end="55:82">data</name><index pos:start="55:83" pos:end="55:85">[<expr pos:start="55:84" pos:end="55:84"><literal type="number" pos:start="55:84" pos:end="55:84">0</literal></expr>]</index></name></expr></argument>,

                                                    <argument pos:start="57:53" pos:end="57:69"><expr pos:start="57:53" pos:end="57:69"><name pos:start="57:53" pos:end="57:69"><name pos:start="57:53" pos:end="57:57">frame</name><operator pos:start="57:58" pos:end="57:59">-&gt;</operator><name pos:start="57:60" pos:end="57:69">nb_samples</name></name></expr></argument>,

                                                    <argument pos:start="59:53" pos:end="59:63"><expr pos:start="59:53" pos:end="59:63"><name pos:start="59:53" pos:end="59:63"><name pos:start="59:53" pos:end="59:57">avpkt</name><operator pos:start="59:58" pos:end="59:59">-&gt;</operator><name pos:start="59:60" pos:end="59:63">data</name></name></expr></argument>, <argument pos:start="59:66" pos:end="59:76"><expr pos:start="59:66" pos:end="59:76"><name pos:start="59:66" pos:end="59:76"><name pos:start="59:66" pos:end="59:70">avpkt</name><operator pos:start="59:71" pos:end="59:72">-&gt;</operator><name pos:start="59:73" pos:end="59:76">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="61:13" pos:end="61:18">break;</break>

        <case pos:start="63:9" pos:end="63:32">case <expr pos:start="63:14" pos:end="63:31"><name pos:start="63:14" pos:end="63:31">AV_SAMPLE_FMT_S16P</name></expr>:</case>

            <expr_stmt pos:start="65:13" pos:end="73:66"><expr pos:start="65:13" pos:end="73:65"><name pos:start="65:13" pos:end="65:15">ret</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <call pos:start="65:19" pos:end="73:65"><name pos:start="65:19" pos:end="65:39">twolame_encode_buffer</name><argument_list pos:start="65:40" pos:end="73:65">(<argument pos:start="65:41" pos:end="65:49"><expr pos:start="65:41" pos:end="65:49"><name pos:start="65:41" pos:end="65:49"><name pos:start="65:41" pos:end="65:41">s</name><operator pos:start="65:42" pos:end="65:43">-&gt;</operator><name pos:start="65:44" pos:end="65:49">glopts</name></name></expr></argument>,

                                        <argument pos:start="67:41" pos:end="67:73"><expr pos:start="67:41" pos:end="67:73"><operator pos:start="67:41" pos:end="67:41">(</operator><specifier pos:start="67:42" pos:end="67:46">const</specifier> <name pos:start="67:48" pos:end="67:52">short</name> <name pos:start="67:54" pos:end="67:56">int</name> <operator pos:start="67:58" pos:end="67:58">*</operator><operator pos:start="67:59" pos:end="67:59">)</operator><name pos:start="67:60" pos:end="67:73"><name pos:start="67:60" pos:end="67:64">frame</name><operator pos:start="67:65" pos:end="67:66">-&gt;</operator><name pos:start="67:67" pos:end="67:70">data</name><index pos:start="67:71" pos:end="67:73">[<expr pos:start="67:72" pos:end="67:72"><literal type="number" pos:start="67:72" pos:end="67:72">0</literal></expr>]</index></name></expr></argument>,

                                        <argument pos:start="69:41" pos:end="69:73"><expr pos:start="69:41" pos:end="69:73"><operator pos:start="69:41" pos:end="69:41">(</operator><specifier pos:start="69:42" pos:end="69:46">const</specifier> <name pos:start="69:48" pos:end="69:52">short</name> <name pos:start="69:54" pos:end="69:56">int</name> <operator pos:start="69:58" pos:end="69:58">*</operator><operator pos:start="69:59" pos:end="69:59">)</operator><name pos:start="69:60" pos:end="69:73"><name pos:start="69:60" pos:end="69:64">frame</name><operator pos:start="69:65" pos:end="69:66">-&gt;</operator><name pos:start="69:67" pos:end="69:70">data</name><index pos:start="69:71" pos:end="69:73">[<expr pos:start="69:72" pos:end="69:72"><literal type="number" pos:start="69:72" pos:end="69:72">1</literal></expr>]</index></name></expr></argument>,

                                        <argument pos:start="71:41" pos:end="71:57"><expr pos:start="71:41" pos:end="71:57"><name pos:start="71:41" pos:end="71:57"><name pos:start="71:41" pos:end="71:45">frame</name><operator pos:start="71:46" pos:end="71:47">-&gt;</operator><name pos:start="71:48" pos:end="71:57">nb_samples</name></name></expr></argument>,

                                        <argument pos:start="73:41" pos:end="73:51"><expr pos:start="73:41" pos:end="73:51"><name pos:start="73:41" pos:end="73:51"><name pos:start="73:41" pos:end="73:45">avpkt</name><operator pos:start="73:46" pos:end="73:47">-&gt;</operator><name pos:start="73:48" pos:end="73:51">data</name></name></expr></argument>, <argument pos:start="73:54" pos:end="73:64"><expr pos:start="73:54" pos:end="73:64"><name pos:start="73:54" pos:end="73:64"><name pos:start="73:54" pos:end="73:58">avpkt</name><operator pos:start="73:59" pos:end="73:60">-&gt;</operator><name pos:start="73:61" pos:end="73:64">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <default pos:start="77:9" pos:end="77:16">default:</default>

            <expr_stmt pos:start="79:13" pos:end="81:73"><expr pos:start="79:13" pos:end="81:72"><call pos:start="79:13" pos:end="81:72"><name pos:start="79:13" pos:end="79:18">av_log</name><argument_list pos:start="79:19" pos:end="81:72">(<argument pos:start="79:20" pos:end="79:24"><expr pos:start="79:20" pos:end="79:24"><name pos:start="79:20" pos:end="79:24">avctx</name></expr></argument>, <argument pos:start="79:27" pos:end="79:38"><expr pos:start="79:27" pos:end="79:38"><name pos:start="79:27" pos:end="79:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="81:20" pos:end="81:52"><expr pos:start="81:20" pos:end="81:52"><literal type="string" pos:start="81:20" pos:end="81:52">"Unsupported sample format %d.\n"</literal></expr></argument>, <argument pos:start="81:55" pos:end="81:71"><expr pos:start="81:55" pos:end="81:71"><name pos:start="81:55" pos:end="81:71"><name pos:start="81:55" pos:end="81:59">avctx</name><operator pos:start="81:60" pos:end="81:61">-&gt;</operator><name pos:start="81:62" pos:end="81:71">sample_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="83:13" pos:end="83:31">return <expr pos:start="83:20" pos:end="83:30"><name pos:start="83:20" pos:end="83:30">AVERROR_BUG</name></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></if> <else pos:start="87:7" pos:end="91:5">else <block pos:start="87:12" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:72">

        <expr_stmt pos:start="89:9" pos:end="89:72"><expr pos:start="89:9" pos:end="89:71"><name pos:start="89:9" pos:end="89:11">ret</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="89:71"><name pos:start="89:15" pos:end="89:34">twolame_encode_flush</name><argument_list pos:start="89:35" pos:end="89:71">(<argument pos:start="89:36" pos:end="89:44"><expr pos:start="89:36" pos:end="89:44"><name pos:start="89:36" pos:end="89:44"><name pos:start="89:36" pos:end="89:36">s</name><operator pos:start="89:37" pos:end="89:38">-&gt;</operator><name pos:start="89:39" pos:end="89:44">glopts</name></name></expr></argument>, <argument pos:start="89:47" pos:end="89:57"><expr pos:start="89:47" pos:end="89:57"><name pos:start="89:47" pos:end="89:57"><name pos:start="89:47" pos:end="89:51">avpkt</name><operator pos:start="89:52" pos:end="89:53">-&gt;</operator><name pos:start="89:54" pos:end="89:57">data</name></name></expr></argument>, <argument pos:start="89:60" pos:end="89:70"><expr pos:start="89:60" pos:end="89:70"><name pos:start="89:60" pos:end="89:70"><name pos:start="89:60" pos:end="89:64">avpkt</name><operator pos:start="89:65" pos:end="89:66">-&gt;</operator><name pos:start="89:67" pos:end="89:70">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="95:5" pos:end="97:17"><if pos:start="95:5" pos:end="97:17">if <condition pos:start="95:8" pos:end="95:13">(<expr pos:start="95:9" pos:end="95:12"><operator pos:start="95:9" pos:end="95:9">!</operator><name pos:start="95:10" pos:end="95:12">ret</name></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:17"><block_content pos:start="97:9" pos:end="97:17">     <comment type="line" pos:start="95:19" pos:end="95:37">// no bytes written</comment>

        <return pos:start="97:9" pos:end="97:17">return <expr pos:start="97:16" pos:end="97:16"><literal type="number" pos:start="97:16" pos:end="97:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="99:5" pos:end="101:31"><if pos:start="99:5" pos:end="101:31">if <condition pos:start="99:8" pos:end="99:16">(<expr pos:start="99:9" pos:end="99:15"><name pos:start="99:9" pos:end="99:11">ret</name> <operator pos:start="99:13" pos:end="99:13">&lt;</operator> <literal type="number" pos:start="99:15" pos:end="99:15">0</literal></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:31"><block_content pos:start="101:9" pos:end="101:31">  <comment type="line" pos:start="99:19" pos:end="99:34">// twolame error</comment>

        <return pos:start="101:9" pos:end="101:31">return <expr pos:start="101:16" pos:end="101:30"><name pos:start="101:16" pos:end="101:30">AVERROR_UNKNOWN</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:72"><expr pos:start="105:5" pos:end="105:71"><name pos:start="105:5" pos:end="105:19"><name pos:start="105:5" pos:end="105:9">avpkt</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:19">duration</name></name> <operator pos:start="105:21" pos:end="105:21">=</operator> <call pos:start="105:23" pos:end="105:71"><name pos:start="105:23" pos:end="105:45">ff_samples_to_time_base</name><argument_list pos:start="105:46" pos:end="105:71">(<argument pos:start="105:47" pos:end="105:51"><expr pos:start="105:47" pos:end="105:51"><name pos:start="105:47" pos:end="105:51">avctx</name></expr></argument>, <argument pos:start="105:54" pos:end="105:70"><expr pos:start="105:54" pos:end="105:70"><name pos:start="105:54" pos:end="105:70"><name pos:start="105:54" pos:end="105:58">frame</name><operator pos:start="105:59" pos:end="105:60">-&gt;</operator><name pos:start="105:61" pos:end="105:70">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="117:5"><if pos:start="107:5" pos:end="113:5">if <condition pos:start="107:8" pos:end="107:14">(<expr pos:start="107:9" pos:end="107:13"><name pos:start="107:9" pos:end="107:13">frame</name></expr>)</condition> <block pos:start="107:16" pos:end="113:5">{<block_content pos:start="109:9" pos:end="111:93">

        <if_stmt pos:start="109:9" pos:end="111:93"><if pos:start="109:9" pos:end="111:93">if <condition pos:start="109:12" pos:end="109:41">(<expr pos:start="109:13" pos:end="109:40"><name pos:start="109:13" pos:end="109:22"><name pos:start="109:13" pos:end="109:17">frame</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:22">pts</name></name> <operator pos:start="109:24" pos:end="109:25">!=</operator> <name pos:start="109:27" pos:end="109:40">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:93"><block_content pos:start="111:13" pos:end="111:93">

            <expr_stmt pos:start="111:13" pos:end="111:93"><expr pos:start="111:13" pos:end="111:92"><name pos:start="111:13" pos:end="111:22"><name pos:start="111:13" pos:end="111:17">avpkt</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:22">pts</name></name> <operator pos:start="111:24" pos:end="111:24">=</operator> <name pos:start="111:26" pos:end="111:35"><name pos:start="111:26" pos:end="111:30">frame</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:35">pts</name></name> <operator pos:start="111:37" pos:end="111:37">-</operator> <call pos:start="111:39" pos:end="111:92"><name pos:start="111:39" pos:end="111:61">ff_samples_to_time_base</name><argument_list pos:start="111:62" pos:end="111:92">(<argument pos:start="111:63" pos:end="111:67"><expr pos:start="111:63" pos:end="111:67"><name pos:start="111:63" pos:end="111:67">avctx</name></expr></argument>, <argument pos:start="111:70" pos:end="111:91"><expr pos:start="111:70" pos:end="111:91"><name pos:start="111:70" pos:end="111:91"><name pos:start="111:70" pos:end="111:74">avctx</name><operator pos:start="111:75" pos:end="111:76">-&gt;</operator><name pos:start="111:77" pos:end="111:91">initial_padding</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="113:7" pos:end="117:5">else <block pos:start="113:12" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:33">

        <expr_stmt pos:start="115:9" pos:end="115:33"><expr pos:start="115:9" pos:end="115:32"><name pos:start="115:9" pos:end="115:18"><name pos:start="115:9" pos:end="115:13">avpkt</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:18">pts</name></name> <operator pos:start="115:20" pos:end="115:20">=</operator> <name pos:start="115:22" pos:end="115:32"><name pos:start="115:22" pos:end="115:22">s</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:32">next_pts</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="line" pos:start="119:5" pos:end="119:53">// this is for setting pts for flushed packet(s).</comment>

    <if_stmt pos:start="121:5" pos:end="123:51"><if pos:start="121:5" pos:end="123:51">if <condition pos:start="121:8" pos:end="121:37">(<expr pos:start="121:9" pos:end="121:36"><name pos:start="121:9" pos:end="121:18"><name pos:start="121:9" pos:end="121:13">avpkt</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:18">pts</name></name> <operator pos:start="121:20" pos:end="121:21">!=</operator> <name pos:start="121:23" pos:end="121:36">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:51"><block_content pos:start="123:9" pos:end="123:51">

        <expr_stmt pos:start="123:9" pos:end="123:51"><expr pos:start="123:9" pos:end="123:50"><name pos:start="123:9" pos:end="123:19"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:19">next_pts</name></name> <operator pos:start="123:21" pos:end="123:21">=</operator> <name pos:start="123:23" pos:end="123:32"><name pos:start="123:23" pos:end="123:27">avpkt</name><operator pos:start="123:28" pos:end="123:29">-&gt;</operator><name pos:start="123:30" pos:end="123:32">pts</name></name> <operator pos:start="123:34" pos:end="123:34">+</operator> <name pos:start="123:36" pos:end="123:50"><name pos:start="123:36" pos:end="123:40">avpkt</name><operator pos:start="123:41" pos:end="123:42">-&gt;</operator><name pos:start="123:43" pos:end="123:50">duration</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:33"><expr pos:start="127:5" pos:end="127:32"><call pos:start="127:5" pos:end="127:32"><name pos:start="127:5" pos:end="127:20">av_shrink_packet</name><argument_list pos:start="127:21" pos:end="127:32">(<argument pos:start="127:22" pos:end="127:26"><expr pos:start="127:22" pos:end="127:26"><name pos:start="127:22" pos:end="127:26">avpkt</name></expr></argument>, <argument pos:start="127:29" pos:end="127:31"><expr pos:start="127:29" pos:end="127:31"><name pos:start="127:29" pos:end="127:31">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:24"><expr pos:start="129:5" pos:end="129:23"><operator pos:start="129:5" pos:end="129:5">*</operator><name pos:start="129:6" pos:end="129:19">got_packet_ptr</name> <operator pos:start="129:21" pos:end="129:21">=</operator> <literal type="number" pos:start="129:23" pos:end="129:23">1</literal></expr>;</expr_stmt>

    <return pos:start="131:5" pos:end="131:13">return <expr pos:start="131:12" pos:end="131:12"><literal type="number" pos:start="131:12" pos:end="131:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
