<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25436.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">rtp_asf_fix_header</name><parameter_list pos:start="1:30" pos:end="1:52">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:37">uint8_t</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">buf</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:51"><decl pos:start="1:45" pos:end="1:51"><type pos:start="1:45" pos:end="1:51"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:51">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:14">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:14">p</name> <init pos:start="5:16" pos:end="5:20">= <expr pos:start="5:18" pos:end="5:20"><name pos:start="5:18" pos:end="5:20">buf</name></expr></init></decl>, <decl pos:start="5:23" pos:end="5:38"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">end</name> <init pos:start="5:28" pos:end="5:38">= <expr pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:32">buf</name> <operator pos:start="5:34" pos:end="5:34">+</operator> <name pos:start="5:36" pos:end="5:38">len</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="11:54">(<expr pos:start="9:9" pos:end="11:53"><name pos:start="9:9" pos:end="9:11">len</name> <operator pos:start="9:13" pos:end="9:13">&lt;</operator> <sizeof pos:start="9:15" pos:end="9:33">sizeof<argument_list pos:start="9:21" pos:end="9:33">(<argument pos:start="9:22" pos:end="9:32"><expr pos:start="9:22" pos:end="9:32"><name pos:start="9:22" pos:end="9:32">ff_asf_guid</name></expr></argument>)</argument_list></sizeof> <operator pos:start="9:35" pos:end="9:35">*</operator> <literal type="number" pos:start="9:37" pos:end="9:39">2</literal> <operator pos:start="9:39" pos:end="9:39">+</operator> <literal type="number" pos:start="9:41" pos:end="9:42">22</literal> <operator pos:start="9:44" pos:end="9:45">||</operator>

        <call pos:start="11:9" pos:end="11:53"><name pos:start="11:9" pos:end="11:14">memcmp</name><argument_list pos:start="11:15" pos:end="11:53">(<argument pos:start="11:16" pos:end="11:16"><expr pos:start="11:16" pos:end="11:16"><name pos:start="11:16" pos:end="11:16">p</name></expr></argument>, <argument pos:start="11:19" pos:end="11:31"><expr pos:start="11:19" pos:end="11:31"><name pos:start="11:19" pos:end="11:31">ff_asf_header</name></expr></argument>, <argument pos:start="11:34" pos:end="11:52"><expr pos:start="11:34" pos:end="11:52"><sizeof pos:start="11:34" pos:end="11:52">sizeof<argument_list pos:start="11:40" pos:end="11:52">(<argument pos:start="11:41" pos:end="11:51"><expr pos:start="11:41" pos:end="11:51"><name pos:start="11:41" pos:end="11:51">ff_asf_guid</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:56" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:18">

        <return pos:start="13:9" pos:end="13:18">return <expr pos:start="13:16" pos:end="13:17"><operator pos:start="13:16" pos:end="13:16">-</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:5">p</name> <operator pos:start="17:7" pos:end="17:8">+=</operator> <sizeof pos:start="17:10" pos:end="17:28">sizeof<argument_list pos:start="17:16" pos:end="17:28">(<argument pos:start="17:17" pos:end="17:27"><expr pos:start="17:17" pos:end="17:27"><name pos:start="17:17" pos:end="17:27">ff_asf_guid</name></expr></argument>)</argument_list></sizeof> <operator pos:start="17:30" pos:end="17:30">+</operator> <literal type="number" pos:start="17:32" pos:end="17:33">14</literal></expr>;</expr_stmt>

    <do pos:start="19:5" pos:end="53:49">do <block pos:start="19:8" pos:end="53:5">{<block_content pos:start="21:9" pos:end="51:14">

        <decl_stmt pos:start="21:9" pos:end="21:62"><decl pos:start="21:9" pos:end="21:61"><type pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:16">uint64_t</name></type> <name pos:start="21:18" pos:end="21:26">chunksize</name> <init pos:start="21:28" pos:end="21:61">= <expr pos:start="21:30" pos:end="21:61"><call pos:start="21:30" pos:end="21:61"><name pos:start="21:30" pos:end="21:36">AV_RL64</name><argument_list pos:start="21:37" pos:end="21:61">(<argument pos:start="21:38" pos:end="21:60"><expr pos:start="21:38" pos:end="21:60"><name pos:start="21:38" pos:end="21:38">p</name> <operator pos:start="21:40" pos:end="21:40">+</operator> <sizeof pos:start="21:42" pos:end="21:60">sizeof<argument_list pos:start="21:48" pos:end="21:60">(<argument pos:start="21:49" pos:end="21:59"><expr pos:start="21:49" pos:end="21:59"><name pos:start="21:49" pos:end="21:59">ff_asf_guid</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="23:9" pos:end="33:9"><if pos:start="23:9" pos:end="33:9">if <condition pos:start="23:12" pos:end="23:63">(<expr pos:start="23:13" pos:end="23:62"><call pos:start="23:13" pos:end="23:62"><name pos:start="23:13" pos:end="23:18">memcmp</name><argument_list pos:start="23:19" pos:end="23:62">(<argument pos:start="23:20" pos:end="23:20"><expr pos:start="23:20" pos:end="23:20"><name pos:start="23:20" pos:end="23:20">p</name></expr></argument>, <argument pos:start="23:23" pos:end="23:40"><expr pos:start="23:23" pos:end="23:40"><name pos:start="23:23" pos:end="23:40">ff_asf_file_header</name></expr></argument>, <argument pos:start="23:43" pos:end="23:61"><expr pos:start="23:43" pos:end="23:61"><sizeof pos:start="23:43" pos:end="23:61">sizeof<argument_list pos:start="23:49" pos:end="23:61">(<argument pos:start="23:50" pos:end="23:60"><expr pos:start="23:50" pos:end="23:60"><name pos:start="23:50" pos:end="23:60">ff_asf_guid</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:65" pos:end="33:9">{<block_content pos:start="25:13" pos:end="31:21">

            <if_stmt pos:start="25:13" pos:end="27:26"><if pos:start="25:13" pos:end="27:26">if <condition pos:start="25:16" pos:end="25:36">(<expr pos:start="25:17" pos:end="25:35"><name pos:start="25:17" pos:end="25:25">chunksize</name> <operator pos:start="25:27" pos:end="25:27">&gt;</operator> <name pos:start="25:29" pos:end="25:31">end</name> <operator pos:start="25:33" pos:end="25:33">-</operator> <name pos:start="25:35" pos:end="25:35">p</name></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:26"><block_content pos:start="27:17" pos:end="27:26">

                <return pos:start="27:17" pos:end="27:26">return <expr pos:start="27:24" pos:end="27:25"><operator pos:start="27:24" pos:end="27:24">-</operator><literal type="number" pos:start="27:25" pos:end="27:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:27"><expr pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:13">p</name> <operator pos:start="29:15" pos:end="29:16">+=</operator> <name pos:start="29:18" pos:end="29:26">chunksize</name></expr>;</expr_stmt>

            <continue pos:start="31:13" pos:end="31:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="37:9" pos:end="37:58">/* skip most of the file header, to min_pktsize */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:53"><expr pos:start="39:9" pos:end="39:52"><name pos:start="39:9" pos:end="39:9">p</name> <operator pos:start="39:11" pos:end="39:12">+=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">6</literal> <operator pos:start="39:16" pos:end="39:16">*</operator> <literal type="number" pos:start="39:18" pos:end="39:20">8</literal> <operator pos:start="39:20" pos:end="39:20">+</operator> <literal type="number" pos:start="39:22" pos:end="39:22">3</literal> <operator pos:start="39:24" pos:end="39:24">*</operator> <literal type="number" pos:start="39:26" pos:end="39:28">4</literal> <operator pos:start="39:28" pos:end="39:28">+</operator> <sizeof pos:start="39:30" pos:end="39:48">sizeof<argument_list pos:start="39:36" pos:end="39:48">(<argument pos:start="39:37" pos:end="39:47"><expr pos:start="39:37" pos:end="39:47"><name pos:start="39:37" pos:end="39:47">ff_asf_guid</name></expr></argument>)</argument_list></sizeof> <operator pos:start="39:50" pos:end="39:50">*</operator> <literal type="number" pos:start="39:52" pos:end="39:52">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="49:9"><if pos:start="41:9" pos:end="49:9">if <condition pos:start="41:12" pos:end="41:57">(<expr pos:start="41:13" pos:end="41:56"><name pos:start="41:13" pos:end="41:13">p</name> <operator pos:start="41:15" pos:end="41:15">+</operator> <literal type="number" pos:start="41:17" pos:end="41:17">8</literal> <operator pos:start="41:19" pos:end="41:20">&lt;=</operator> <name pos:start="41:22" pos:end="41:24">end</name> <operator pos:start="41:26" pos:end="41:27">&amp;&amp;</operator> <call pos:start="41:29" pos:end="41:38"><name pos:start="41:29" pos:end="41:35">AV_RL32</name><argument_list pos:start="41:36" pos:end="41:38">(<argument pos:start="41:37" pos:end="41:37"><expr pos:start="41:37" pos:end="41:37"><name pos:start="41:37" pos:end="41:37">p</name></expr></argument>)</argument_list></call> <operator pos:start="41:40" pos:end="41:41">==</operator> <call pos:start="41:43" pos:end="41:56"><name pos:start="41:43" pos:end="41:49">AV_RL32</name><argument_list pos:start="41:50" pos:end="41:56">(<argument pos:start="41:51" pos:end="41:55"><expr pos:start="41:51" pos:end="41:55"><name pos:start="41:51" pos:end="41:51">p</name> <operator pos:start="41:53" pos:end="41:53">+</operator> <literal type="number" pos:start="41:55" pos:end="41:55">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:59" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:21">

            <comment type="block" pos:start="43:13" pos:end="43:38">/* and set that to zero */</comment>

            <expr_stmt pos:start="45:13" pos:end="45:26"><expr pos:start="45:13" pos:end="45:25"><call pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:19">AV_WL32</name><argument_list pos:start="45:20" pos:end="45:25">(<argument pos:start="45:21" pos:end="45:21"><expr pos:start="45:21" pos:end="45:21"><name pos:start="45:21" pos:end="45:21">p</name></expr></argument>, <argument pos:start="45:24" pos:end="45:24"><expr pos:start="45:24" pos:end="45:24"><literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="47:13" pos:end="47:21">return <expr pos:start="47:20" pos:end="47:20"><literal type="number" pos:start="47:20" pos:end="47:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    </block_content>}</block> while <condition pos:start="53:13" pos:end="53:48">(<expr pos:start="53:14" pos:end="53:47"><name pos:start="53:14" pos:end="53:16">end</name> <operator pos:start="53:18" pos:end="53:18">-</operator> <name pos:start="53:20" pos:end="53:20">p</name> <operator pos:start="53:22" pos:end="53:23">&gt;=</operator> <sizeof pos:start="53:25" pos:end="53:43">sizeof<argument_list pos:start="53:31" pos:end="53:43">(<argument pos:start="53:32" pos:end="53:42"><expr pos:start="53:32" pos:end="53:42"><name pos:start="53:32" pos:end="53:42">ff_asf_guid</name></expr></argument>)</argument_list></sizeof> <operator pos:start="53:45" pos:end="53:45">+</operator> <literal type="number" pos:start="53:47" pos:end="53:47">8</literal></expr>)</condition>;</do>



    <return pos:start="57:5" pos:end="57:14">return <expr pos:start="57:12" pos:end="57:13"><operator pos:start="57:12" pos:end="57:12">-</operator><literal type="number" pos:start="57:13" pos:end="57:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
