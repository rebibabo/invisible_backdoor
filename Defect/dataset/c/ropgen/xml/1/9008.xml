<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9008.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">target_ulong</name></type> <name pos:start="1:21" pos:end="1:36">compute_tlbie_rb</name><parameter_list pos:start="1:37" pos:end="3:60">(<parameter pos:start="1:38" pos:end="1:51"><decl pos:start="1:38" pos:end="1:51"><type pos:start="1:38" pos:end="1:51"><name pos:start="1:38" pos:end="1:49">target_ulong</name></type> <name pos:start="1:51" pos:end="1:51">v</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:67"><decl pos:start="1:54" pos:end="1:67"><type pos:start="1:54" pos:end="1:67"><name pos:start="1:54" pos:end="1:65">target_ulong</name></type> <name pos:start="1:67" pos:end="1:67">r</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:59"><decl pos:start="3:38" pos:end="3:59"><type pos:start="3:38" pos:end="3:59"><name pos:start="3:38" pos:end="3:49">target_ulong</name></type> <name pos:start="3:51" pos:end="3:59">pte_index</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:14">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:19">rb</name></decl>, <decl pos:start="7:22" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:22" pos:end="7:27">va_low</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:30"><expr pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:6">rb</name> <operator pos:start="11:8" pos:end="11:8">=</operator> <operator pos:start="11:10" pos:end="11:10">(</operator><name pos:start="11:11" pos:end="11:11">v</name> <operator pos:start="11:13" pos:end="11:13">&amp;</operator> <operator pos:start="11:15" pos:end="11:15">~</operator><literal type="number" pos:start="11:16" pos:end="11:22">0x7fULL</literal><operator pos:start="11:23" pos:end="11:23">)</operator> <operator pos:start="11:25" pos:end="11:26">&lt;&lt;</operator> <literal type="number" pos:start="11:28" pos:end="11:29">16</literal></expr>;</expr_stmt> <comment type="block" pos:start="11:32" pos:end="11:46">/* AVA field */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:28"><expr pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:10">va_low</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <name pos:start="13:14" pos:end="13:22">pte_index</name> <operator pos:start="13:24" pos:end="13:25">&gt;&gt;</operator> <literal type="number" pos:start="13:27" pos:end="13:27">3</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:31">(<expr pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:9">v</name> <operator pos:start="15:11" pos:end="15:11">&amp;</operator> <name pos:start="15:13" pos:end="15:30">HPTE64_V_SECONDARY</name></expr>)</condition> <block pos:start="15:33" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:25">

        <expr_stmt pos:start="17:9" pos:end="17:25"><expr pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:14">va_low</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <operator pos:start="17:18" pos:end="17:18">~</operator><name pos:start="17:19" pos:end="17:24">va_low</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="21:5" pos:end="21:27">/* xor vsid from AVA */</comment>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:32">(<expr pos:start="23:9" pos:end="23:31"><operator pos:start="23:9" pos:end="23:9">!</operator><operator pos:start="23:10" pos:end="23:10">(</operator><name pos:start="23:11" pos:end="23:11">v</name> <operator pos:start="23:13" pos:end="23:13">&amp;</operator> <name pos:start="23:15" pos:end="23:30">HPTE64_V_1TB_SEG</name><operator pos:start="23:31" pos:end="23:31">)</operator></expr>)</condition> <block pos:start="23:34" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:26">

        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:14">va_low</name> <operator pos:start="25:16" pos:end="25:17">^=</operator> <name pos:start="25:19" pos:end="25:19">v</name> <operator pos:start="25:21" pos:end="25:22">&gt;&gt;</operator> <literal type="number" pos:start="25:24" pos:end="25:25">12</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="31:5">else <block pos:start="27:12" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:26">

        <expr_stmt pos:start="29:9" pos:end="29:26"><expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:14">va_low</name> <operator pos:start="29:16" pos:end="29:17">^=</operator> <name pos:start="29:19" pos:end="29:19">v</name> <operator pos:start="29:21" pos:end="29:22">&gt;&gt;</operator> <literal type="number" pos:start="29:24" pos:end="29:25">24</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:20"><expr pos:start="33:5" pos:end="33:19"><name pos:start="33:5" pos:end="33:10">va_low</name> <operator pos:start="33:12" pos:end="33:13">&amp;=</operator> <literal type="number" pos:start="33:15" pos:end="33:19">0x7ff</literal></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="63:5"><if pos:start="35:5" pos:end="57:5">if <condition pos:start="35:8" pos:end="35:27">(<expr pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:9">v</name> <operator pos:start="35:11" pos:end="35:11">&amp;</operator> <name pos:start="35:13" pos:end="35:26">HPTE64_V_LARGE</name></expr>)</condition> <block pos:start="35:29" pos:end="57:5">{<block_content pos:start="37:9" pos:end="56:0">

        <expr_stmt pos:start="37:9" pos:end="56:0"><expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:10">rb</name> <operator pos:start="37:12" pos:end="37:13">|=</operator> <literal type="number" pos:start="37:15" pos:end="37:15">1</literal></expr>;</expr_stmt>                         <comment type="block" pos:start="37:42" pos:end="37:54">/* L field */</comment>

<cpp:if pos:start="39:1" pos:end="39:5">#<cpp:directive pos:start="39:2" pos:end="39:3">if</cpp:directive> <expr pos:start="39:5" pos:end="39:5"><literal type="number" pos:start="39:5" pos:end="39:5">0</literal></expr></cpp:if> <comment type="block" pos:start="39:7" pos:end="39:48">/* Disable that P7 specific bit for now */</comment>

        if (r &amp; 0xff000) {

            <comment type="block" pos:start="43:13" pos:end="43:50">/* non-16MB large page, must be 64k */</comment>

            <comment type="block" pos:start="45:13" pos:end="45:45">/* (masks depend on page size) */</comment>

            rb |= 0x1000;                <comment type="block" pos:start="47:42" pos:end="47:72">/* page encoding in LP field */</comment>

            rb |= (va_low &amp; 0x7f) &lt;&lt; 16; <comment type="block" pos:start="49:42" pos:end="49:71">/* 7b of VA in AVA/LP field */</comment>

            rb |= (va_low &amp; 0xfe);       <comment type="block" pos:start="51:42" pos:end="51:57">/* AVAL field */</comment>

        }

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="63:5">else <block pos:start="57:12" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:37">

        <comment type="block" pos:start="59:9" pos:end="59:22">/* 4kB page */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:37"><expr pos:start="61:9" pos:end="61:36"><name pos:start="61:9" pos:end="61:10">rb</name> <operator pos:start="61:12" pos:end="61:13">|=</operator> <operator pos:start="61:15" pos:end="61:15">(</operator><name pos:start="61:16" pos:end="61:21">va_low</name> <operator pos:start="61:23" pos:end="61:23">&amp;</operator> <literal type="number" pos:start="61:25" pos:end="61:29">0x7ff</literal><operator pos:start="61:30" pos:end="61:30">)</operator> <operator pos:start="61:32" pos:end="61:33">&lt;&lt;</operator> <literal type="number" pos:start="61:35" pos:end="61:36">12</literal></expr>;</expr_stmt>   <comment type="block" pos:start="61:41" pos:end="61:66">/* remaining 11b of AVA */</comment>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:28"><expr pos:start="65:5" pos:end="65:27"><name pos:start="65:5" pos:end="65:6">rb</name> <operator pos:start="65:8" pos:end="65:9">|=</operator> <operator pos:start="65:11" pos:end="65:11">(</operator><name pos:start="65:12" pos:end="65:12">v</name> <operator pos:start="65:14" pos:end="65:15">&gt;&gt;</operator> <literal type="number" pos:start="65:17" pos:end="65:18">54</literal><operator pos:start="65:19" pos:end="65:19">)</operator> <operator pos:start="65:21" pos:end="65:21">&amp;</operator> <literal type="number" pos:start="65:23" pos:end="65:27">0x300</literal></expr>;</expr_stmt>            <comment type="block" pos:start="65:41" pos:end="65:53">/* B field */</comment>

    <return pos:start="67:5" pos:end="67:14">return <expr pos:start="67:12" pos:end="67:13"><name pos:start="67:12" pos:end="67:13">rb</name></expr>;</return>

</block_content>}</block></function>
</unit>
