<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15623.c" pos:tabs="8"><function pos:start="1:1" pos:end="90:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mpeg_decode_frame</name><parameter_list pos:start="1:29" pos:end="5:45">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:39"><decl pos:start="3:30" pos:end="3:39"><type pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:33">void</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">data</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:44">int</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:55">data_size</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:44"><decl pos:start="5:30" pos:end="5:44"><type pos:start="5:30" pos:end="5:44"><name pos:start="5:30" pos:end="5:37">AVPacket</name> <modifier pos:start="5:39" pos:end="5:39">*</modifier></type><name pos:start="5:40" pos:end="5:44">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="90:1">{<block_content pos:start="9:5" pos:end="88:67">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">Mpeg1Context</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:19">s</name> <init pos:start="13:21" pos:end="13:38">= <expr pos:start="13:23" pos:end="13:38"><name pos:start="13:23" pos:end="13:38"><name pos:start="13:23" pos:end="13:27">avctx</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">AVFrame</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:20">picture</name> <init pos:start="15:22" pos:end="15:27">= <expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:42"><decl pos:start="17:5" pos:end="17:41"><type pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:18">MpegEncContext</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:22">s2</name> <init pos:start="17:24" pos:end="17:41">= <expr pos:start="17:26" pos:end="17:41"><operator pos:start="17:26" pos:end="17:26">&amp;</operator><name pos:start="17:27" pos:end="17:41"><name pos:start="17:27" pos:end="17:27">s</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:41">mpeg_enc_ctx</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><call pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:11">av_dlog</name><argument_list pos:start="19:12" pos:end="19:35">(<argument pos:start="19:13" pos:end="19:17"><expr pos:start="19:13" pos:end="19:17"><name pos:start="19:13" pos:end="19:17">avctx</name></expr></argument>, <argument pos:start="19:20" pos:end="19:34"><expr pos:start="19:20" pos:end="19:34"><literal type="string" pos:start="19:20" pos:end="19:34">"fill_buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="41:5"><if pos:start="23:5" pos:end="41:5">if <condition pos:start="23:8" pos:end="23:73">(<expr pos:start="23:9" pos:end="23:72"><name pos:start="23:9" pos:end="23:16">buf_size</name> <operator pos:start="23:18" pos:end="23:19">==</operator> <literal type="number" pos:start="23:21" pos:end="23:21">0</literal> <operator pos:start="23:23" pos:end="23:24">||</operator> <operator pos:start="23:26" pos:end="23:26">(</operator><name pos:start="23:27" pos:end="23:34">buf_size</name> <operator pos:start="23:36" pos:end="23:37">==</operator> <literal type="number" pos:start="23:39" pos:end="23:39">4</literal> <operator pos:start="23:41" pos:end="23:42">&amp;&amp;</operator> <call pos:start="23:44" pos:end="23:55"><name pos:start="23:44" pos:end="23:50">AV_RB32</name><argument_list pos:start="23:51" pos:end="23:55">(<argument pos:start="23:52" pos:end="23:54"><expr pos:start="23:52" pos:end="23:54"><name pos:start="23:52" pos:end="23:54">buf</name></expr></argument>)</argument_list></call> <operator pos:start="23:57" pos:end="23:58">==</operator> <name pos:start="23:60" pos:end="23:71">SEQ_END_CODE</name><operator pos:start="23:72" pos:end="23:72">)</operator></expr>)</condition> <block pos:start="23:75" pos:end="41:5">{<block_content pos:start="27:9" pos:end="39:24">

        <comment type="block" pos:start="25:9" pos:end="25:43">/* special case for last picture */</comment>

        <if_stmt pos:start="27:9" pos:end="37:9"><if pos:start="27:9" pos:end="37:9">if <condition pos:start="27:12" pos:end="27:55">(<expr pos:start="27:13" pos:end="27:54"><name pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:14">s2</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:25">low_delay</name></name> <operator pos:start="27:27" pos:end="27:28">==</operator> <literal type="number" pos:start="27:30" pos:end="27:30">0</literal> <operator pos:start="27:32" pos:end="27:33">&amp;&amp;</operator> <name pos:start="27:35" pos:end="27:54"><name pos:start="27:35" pos:end="27:36">s2</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:54">next_picture_ptr</name></name></expr>)</condition> <block pos:start="27:57" pos:end="37:9">{<block_content pos:start="29:13" pos:end="35:41">

            <expr_stmt pos:start="29:13" pos:end="29:47"><expr pos:start="29:13" pos:end="29:46"><operator pos:start="29:13" pos:end="29:13">*</operator><name pos:start="29:14" pos:end="29:20">picture</name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:46"><name pos:start="29:24" pos:end="29:25">s2</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:43">next_picture_ptr</name><operator pos:start="29:44" pos:end="29:45">-&gt;</operator><name pos:start="29:46" pos:end="29:46">f</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:40"><expr pos:start="31:13" pos:end="31:39"><name pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:14">s2</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:32">next_picture_ptr</name></name> <operator pos:start="31:34" pos:end="31:34">=</operator> <name pos:start="31:36" pos:end="31:39">NULL</name></expr>;</expr_stmt>



            <expr_stmt pos:start="35:13" pos:end="35:41"><expr pos:start="35:13" pos:end="35:40"><operator pos:start="35:13" pos:end="35:13">*</operator><name pos:start="35:14" pos:end="35:22">data_size</name> <operator pos:start="35:24" pos:end="35:24">=</operator> <sizeof pos:start="35:26" pos:end="35:40">sizeof<argument_list pos:start="35:32" pos:end="35:40">(<argument pos:start="35:33" pos:end="35:39"><expr pos:start="35:33" pos:end="35:39"><name pos:start="35:33" pos:end="35:39">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="39:9" pos:end="39:24">return <expr pos:start="39:16" pos:end="39:23"><name pos:start="39:16" pos:end="39:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="55:5"><if pos:start="45:5" pos:end="55:5">if <condition pos:start="45:8" pos:end="45:41">(<expr pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:10">s2</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:17">flags</name></name> <operator pos:start="45:19" pos:end="45:19">&amp;</operator> <name pos:start="45:21" pos:end="45:40">CODEC_FLAG_TRUNCATED</name></expr>)</condition> <block pos:start="45:43" pos:end="55:5">{<block_content pos:start="47:9" pos:end="53:28">

        <decl_stmt pos:start="47:9" pos:end="47:84"><decl pos:start="47:9" pos:end="47:83"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:16">next</name> <init pos:start="47:18" pos:end="47:83">= <expr pos:start="47:20" pos:end="47:83"><call pos:start="47:20" pos:end="47:83"><name pos:start="47:20" pos:end="47:42">ff_mpeg1_find_frame_end</name><argument_list pos:start="47:43" pos:end="47:83">(<argument pos:start="47:44" pos:end="47:61"><expr pos:start="47:44" pos:end="47:61"><operator pos:start="47:44" pos:end="47:44">&amp;</operator><name pos:start="47:45" pos:end="47:61"><name pos:start="47:45" pos:end="47:46">s2</name><operator pos:start="47:47" pos:end="47:48">-&gt;</operator><name pos:start="47:49" pos:end="47:61">parse_context</name></name></expr></argument>, <argument pos:start="47:64" pos:end="47:66"><expr pos:start="47:64" pos:end="47:66"><name pos:start="47:64" pos:end="47:66">buf</name></expr></argument>, <argument pos:start="47:69" pos:end="47:76"><expr pos:start="47:69" pos:end="47:76"><name pos:start="47:69" pos:end="47:76">buf_size</name></expr></argument>, <argument pos:start="47:79" pos:end="47:82"><expr pos:start="47:79" pos:end="47:82"><name pos:start="47:79" pos:end="47:82">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="51:9" pos:end="53:28"><if pos:start="51:9" pos:end="53:28">if <condition pos:start="51:12" pos:end="51:94">(<expr pos:start="51:13" pos:end="51:93"><call pos:start="51:13" pos:end="51:89"><name pos:start="51:13" pos:end="51:28">ff_combine_frame</name><argument_list pos:start="51:29" pos:end="51:89">(<argument pos:start="51:30" pos:end="51:47"><expr pos:start="51:30" pos:end="51:47"><operator pos:start="51:30" pos:end="51:30">&amp;</operator><name pos:start="51:31" pos:end="51:47"><name pos:start="51:31" pos:end="51:32">s2</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:47">parse_context</name></name></expr></argument>, <argument pos:start="51:50" pos:end="51:53"><expr pos:start="51:50" pos:end="51:53"><name pos:start="51:50" pos:end="51:53">next</name></expr></argument>, <argument pos:start="51:56" pos:end="51:77"><expr pos:start="51:56" pos:end="51:77"><operator pos:start="51:56" pos:end="51:56">(</operator><specifier pos:start="51:57" pos:end="51:61">const</specifier> <name pos:start="51:63" pos:end="51:69">uint8_t</name> <operator pos:start="51:71" pos:end="51:71">*</operator><operator pos:start="51:72" pos:end="51:72">*</operator><operator pos:start="51:73" pos:end="51:73">)</operator><operator pos:start="51:74" pos:end="51:74">&amp;</operator><name pos:start="51:75" pos:end="51:77">buf</name></expr></argument>, <argument pos:start="51:80" pos:end="51:88"><expr pos:start="51:80" pos:end="51:88"><operator pos:start="51:80" pos:end="51:80">&amp;</operator><name pos:start="51:81" pos:end="51:88">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="51:91" pos:end="51:91">&lt;</operator> <literal type="number" pos:start="51:93" pos:end="51:93">0</literal></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:28"><block_content pos:start="53:13" pos:end="53:28">

            <return pos:start="53:13" pos:end="53:28">return <expr pos:start="53:20" pos:end="53:27"><name pos:start="53:20" pos:end="53:27">buf_size</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:54"><expr pos:start="59:5" pos:end="59:53"><name pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:6">s2</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:17">codec_tag</name></name> <operator pos:start="59:19" pos:end="59:19">=</operator> <call pos:start="59:21" pos:end="59:53"><name pos:start="59:21" pos:end="59:35">avpriv_toupper4</name><argument_list pos:start="59:36" pos:end="59:53">(<argument pos:start="59:37" pos:end="59:52"><expr pos:start="59:37" pos:end="59:52"><name pos:start="59:37" pos:end="59:52"><name pos:start="59:37" pos:end="59:41">avctx</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:52">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="67:34"><if pos:start="61:5" pos:end="67:34">if <condition pos:start="61:8" pos:end="65:44">(<expr pos:start="61:9" pos:end="65:43"><name pos:start="61:9" pos:end="61:33"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:33">mpeg_enc_ctx_allocated</name></name> <operator pos:start="61:35" pos:end="61:36">==</operator> <literal type="number" pos:start="61:38" pos:end="61:38">0</literal> <operator pos:start="61:40" pos:end="61:41">&amp;&amp;</operator> <operator pos:start="61:43" pos:end="61:43">(</operator>   <name pos:start="61:47" pos:end="61:59"><name pos:start="61:47" pos:end="61:48">s2</name><operator pos:start="61:49" pos:end="61:50">-&gt;</operator><name pos:start="61:51" pos:end="61:59">codec_tag</name></name> <operator pos:start="61:61" pos:end="61:62">==</operator> <call pos:start="61:64" pos:end="61:78"><name pos:start="61:64" pos:end="61:70">AV_RL32</name><argument_list pos:start="61:71" pos:end="61:78">(<argument pos:start="61:72" pos:end="61:77"><expr pos:start="61:72" pos:end="61:77"><literal type="string" pos:start="61:72" pos:end="61:77">"VCR2"</literal></expr></argument>)</argument_list></call>

                                           <operator pos:start="63:44" pos:end="63:45">||</operator> <name pos:start="63:47" pos:end="63:59"><name pos:start="63:47" pos:end="63:48">s2</name><operator pos:start="63:49" pos:end="63:50">-&gt;</operator><name pos:start="63:51" pos:end="63:59">codec_tag</name></name> <operator pos:start="63:61" pos:end="63:62">==</operator> <call pos:start="63:64" pos:end="63:78"><name pos:start="63:64" pos:end="63:70">AV_RL32</name><argument_list pos:start="63:71" pos:end="63:78">(<argument pos:start="63:72" pos:end="63:77"><expr pos:start="63:72" pos:end="63:77"><literal type="string" pos:start="63:72" pos:end="63:77">"BW10"</literal></expr></argument>)</argument_list></call>

                                          <operator pos:start="65:43" pos:end="65:43">)</operator></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:34"><block_content pos:start="67:9" pos:end="67:34">

        <expr_stmt pos:start="67:9" pos:end="67:34"><expr pos:start="67:9" pos:end="67:33"><call pos:start="67:9" pos:end="67:33"><name pos:start="67:9" pos:end="67:26">vcr2_init_sequence</name><argument_list pos:start="67:27" pos:end="67:33">(<argument pos:start="67:28" pos:end="67:32"><expr pos:start="67:28" pos:end="67:32"><name pos:start="67:28" pos:end="67:32">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:23"><expr pos:start="71:5" pos:end="71:22"><name pos:start="71:5" pos:end="71:18"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:18">slice_count</name></name> <operator pos:start="71:20" pos:end="71:20">=</operator> <literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="75:5" pos:end="84:5"><if pos:start="75:5" pos:end="84:5">if <condition pos:start="75:8" pos:end="75:49">(<expr pos:start="75:9" pos:end="75:48"><name pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:13">avctx</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:24">extradata</name></name> <operator pos:start="75:26" pos:end="75:27">&amp;&amp;</operator> <operator pos:start="75:29" pos:end="75:29">!</operator><name pos:start="75:30" pos:end="75:48"><name pos:start="75:30" pos:end="75:34">avctx</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:48">frame_number</name></name></expr>)</condition> <block pos:start="75:51" pos:end="84:5">{<block_content pos:start="77:9" pos:end="82:23">

        <decl_stmt pos:start="77:9" pos:end="77:100"><decl pos:start="77:9" pos:end="77:99"><type pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:11">int</name></type> <name pos:start="77:13" pos:end="77:15">ret</name> <init pos:start="77:17" pos:end="77:99">= <expr pos:start="77:19" pos:end="77:99"><call pos:start="77:19" pos:end="77:99"><name pos:start="77:19" pos:end="77:31">decode_chunks</name><argument_list pos:start="77:32" pos:end="77:99">(<argument pos:start="77:33" pos:end="77:37"><expr pos:start="77:33" pos:end="77:37"><name pos:start="77:33" pos:end="77:37">avctx</name></expr></argument>, <argument pos:start="77:40" pos:end="77:46"><expr pos:start="77:40" pos:end="77:46"><name pos:start="77:40" pos:end="77:46">picture</name></expr></argument>, <argument pos:start="77:49" pos:end="77:57"><expr pos:start="77:49" pos:end="77:57"><name pos:start="77:49" pos:end="77:57">data_size</name></expr></argument>, <argument pos:start="77:60" pos:end="77:75"><expr pos:start="77:60" pos:end="77:75"><name pos:start="77:60" pos:end="77:75"><name pos:start="77:60" pos:end="77:64">avctx</name><operator pos:start="77:65" pos:end="77:66">-&gt;</operator><name pos:start="77:67" pos:end="77:75">extradata</name></name></expr></argument>, <argument pos:start="77:78" pos:end="77:98"><expr pos:start="77:78" pos:end="77:98"><name pos:start="77:78" pos:end="77:98"><name pos:start="77:78" pos:end="77:82">avctx</name><operator pos:start="77:83" pos:end="77:84">-&gt;</operator><name pos:start="77:85" pos:end="77:98">extradata_size</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


        <if_stmt pos:start="80:9" pos:end="82:23"><if pos:start="80:9" pos:end="82:23">if <condition pos:start="80:12" pos:end="80:64">(<expr pos:start="80:13" pos:end="80:63"><name pos:start="80:13" pos:end="80:15">ret</name> <operator pos:start="80:17" pos:end="80:17">&lt;</operator> <literal type="number" pos:start="80:19" pos:end="80:19">0</literal> <operator pos:start="80:21" pos:end="80:22">&amp;&amp;</operator> <operator pos:start="80:24" pos:end="80:24">(</operator><name pos:start="80:25" pos:end="80:46"><name pos:start="80:25" pos:end="80:29">avctx</name><operator pos:start="80:30" pos:end="80:31">-&gt;</operator><name pos:start="80:32" pos:end="80:46">err_recognition</name></name> <operator pos:start="80:48" pos:end="80:48">&amp;</operator> <name pos:start="80:50" pos:end="80:62">AV_EF_EXPLODE</name><operator pos:start="80:63" pos:end="80:63">)</operator></expr>)</condition><block type="pseudo" pos:start="82:13" pos:end="82:23"><block_content pos:start="82:13" pos:end="82:23">

            <return pos:start="82:13" pos:end="82:23">return <expr pos:start="82:20" pos:end="82:22"><name pos:start="82:20" pos:end="82:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="88:5" pos:end="88:67">return <expr pos:start="88:12" pos:end="88:66"><call pos:start="88:12" pos:end="88:66"><name pos:start="88:12" pos:end="88:24">decode_chunks</name><argument_list pos:start="88:25" pos:end="88:66">(<argument pos:start="88:26" pos:end="88:30"><expr pos:start="88:26" pos:end="88:30"><name pos:start="88:26" pos:end="88:30">avctx</name></expr></argument>, <argument pos:start="88:33" pos:end="88:39"><expr pos:start="88:33" pos:end="88:39"><name pos:start="88:33" pos:end="88:39">picture</name></expr></argument>, <argument pos:start="88:42" pos:end="88:50"><expr pos:start="88:42" pos:end="88:50"><name pos:start="88:42" pos:end="88:50">data_size</name></expr></argument>, <argument pos:start="88:53" pos:end="88:55"><expr pos:start="88:53" pos:end="88:55"><name pos:start="88:53" pos:end="88:55">buf</name></expr></argument>, <argument pos:start="88:58" pos:end="88:65"><expr pos:start="88:58" pos:end="88:65"><name pos:start="88:58" pos:end="88:65">buf_size</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function></unit>
