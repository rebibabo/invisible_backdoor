<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24951.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">ff_er_add_slice</name><parameter_list pos:start="1:21" pos:end="3:52">(<parameter pos:start="1:22" pos:end="1:33"><decl pos:start="1:22" pos:end="1:33"><type pos:start="1:22" pos:end="1:33"><name pos:start="1:22" pos:end="1:30">ERContext</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:33">s</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:45"><decl pos:start="1:36" pos:end="1:45"><type pos:start="1:36" pos:end="1:45"><name pos:start="1:36" pos:end="1:38">int</name></type> <name pos:start="1:40" pos:end="1:45">startx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:57">starty</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:29"><decl pos:start="3:22" pos:end="3:29"><type pos:start="3:22" pos:end="3:29"><name pos:start="3:22" pos:end="3:24">int</name></type> <name pos:start="3:26" pos:end="3:29">endx</name></decl></parameter>, <parameter pos:start="3:32" pos:end="3:39"><decl pos:start="3:32" pos:end="3:39"><type pos:start="3:32" pos:end="3:39"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:39">endy</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:51"><decl pos:start="3:42" pos:end="3:51"><type pos:start="3:42" pos:end="3:51"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:51">status</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="137:1">{<block_content pos:start="7:5" pos:end="135:5">

    <decl_stmt pos:start="7:5" pos:end="7:82"><decl pos:start="7:5" pos:end="7:81"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:21">start_i</name>  <init pos:start="7:24" pos:end="7:81">= <expr pos:start="7:26" pos:end="7:81"><call pos:start="7:26" pos:end="7:81"><name pos:start="7:26" pos:end="7:32">av_clip</name><argument_list pos:start="7:33" pos:end="7:81">(<argument pos:start="7:34" pos:end="7:62"><expr pos:start="7:34" pos:end="7:62"><name pos:start="7:34" pos:end="7:39">startx</name> <operator pos:start="7:41" pos:end="7:41">+</operator> <name pos:start="7:43" pos:end="7:48">starty</name> <operator pos:start="7:50" pos:end="7:50">*</operator> <name pos:start="7:52" pos:end="7:62"><name pos:start="7:52" pos:end="7:52">s</name><operator pos:start="7:53" pos:end="7:54">-&gt;</operator><name pos:start="7:55" pos:end="7:62">mb_width</name></name></expr></argument>, <argument pos:start="7:65" pos:end="7:65"><expr pos:start="7:65" pos:end="7:65"><literal type="number" pos:start="7:65" pos:end="7:65">0</literal></expr></argument>, <argument pos:start="7:68" pos:end="7:80"><expr pos:start="7:68" pos:end="7:80"><name pos:start="7:68" pos:end="7:76"><name pos:start="7:68" pos:end="7:68">s</name><operator pos:start="7:69" pos:end="7:70">-&gt;</operator><name pos:start="7:71" pos:end="7:76">mb_num</name></name> <operator pos:start="7:78" pos:end="7:78">-</operator> <literal type="number" pos:start="7:80" pos:end="7:80">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:78"><decl pos:start="9:5" pos:end="9:77"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:19">end_i</name>    <init pos:start="9:24" pos:end="9:77">= <expr pos:start="9:26" pos:end="9:77"><call pos:start="9:26" pos:end="9:77"><name pos:start="9:26" pos:end="9:32">av_clip</name><argument_list pos:start="9:33" pos:end="9:77">(<argument pos:start="9:34" pos:end="9:62"><expr pos:start="9:34" pos:end="9:62"><name pos:start="9:34" pos:end="9:37">endx</name>   <operator pos:start="9:41" pos:end="9:41">+</operator> <name pos:start="9:43" pos:end="9:46">endy</name>   <operator pos:start="9:50" pos:end="9:50">*</operator> <name pos:start="9:52" pos:end="9:62"><name pos:start="9:52" pos:end="9:52">s</name><operator pos:start="9:53" pos:end="9:54">-&gt;</operator><name pos:start="9:55" pos:end="9:62">mb_width</name></name></expr></argument>, <argument pos:start="9:65" pos:end="9:65"><expr pos:start="9:65" pos:end="9:65"><literal type="number" pos:start="9:65" pos:end="9:65">0</literal></expr></argument>, <argument pos:start="9:68" pos:end="9:76"><expr pos:start="9:68" pos:end="9:76"><name pos:start="9:68" pos:end="9:76"><name pos:start="9:68" pos:end="9:68">s</name><operator pos:start="9:69" pos:end="9:70">-&gt;</operator><name pos:start="9:71" pos:end="9:76">mb_num</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:22">start_xy</name> <init pos:start="11:24" pos:end="11:48">= <expr pos:start="11:26" pos:end="11:48"><name pos:start="11:26" pos:end="11:48"><name pos:start="11:26" pos:end="11:26">s</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:39">mb_index2xy</name><index pos:start="11:40" pos:end="11:48">[<expr pos:start="11:41" pos:end="11:47"><name pos:start="11:41" pos:end="11:47">start_i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:46"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:20">end_xy</name>   <init pos:start="13:24" pos:end="13:46">= <expr pos:start="13:26" pos:end="13:46"><name pos:start="13:26" pos:end="13:46"><name pos:start="13:26" pos:end="13:26">s</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:39">mb_index2xy</name><index pos:start="13:40" pos:end="13:46">[<expr pos:start="13:41" pos:end="13:45"><name pos:start="13:41" pos:end="13:45">end_i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">mask</name>           <init pos:start="15:24" pos:end="15:27">= <expr pos:start="15:26" pos:end="15:27"><operator pos:start="15:26" pos:end="15:26">-</operator><literal type="number" pos:start="15:27" pos:end="15:27">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:15"><if pos:start="19:5" pos:end="21:15">if <condition pos:start="19:8" pos:end="19:61">(<expr pos:start="19:9" pos:end="19:60"><name pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:16">avctx</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:25">hwaccel</name></name> <operator pos:start="19:27" pos:end="19:28">&amp;&amp;</operator> <name pos:start="19:30" pos:end="19:60"><name pos:start="19:30" pos:end="19:30">s</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:37">avctx</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:46">hwaccel</name><operator pos:start="19:47" pos:end="19:48">-&gt;</operator><name pos:start="19:49" pos:end="19:60">decode_slice</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:15"><block_content pos:start="21:9" pos:end="21:15">

        <return pos:start="21:9" pos:end="21:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:45">(<expr pos:start="25:9" pos:end="25:44"><name pos:start="25:9" pos:end="25:15">start_i</name> <operator pos:start="25:17" pos:end="25:17">&gt;</operator> <name pos:start="25:19" pos:end="25:23">end_i</name> <operator pos:start="25:25" pos:end="25:26">||</operator> <name pos:start="25:28" pos:end="25:35">start_xy</name> <operator pos:start="25:37" pos:end="25:37">&gt;</operator> <name pos:start="25:39" pos:end="25:44">end_xy</name></expr>)</condition> <block pos:start="25:47" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:15">

        <expr_stmt pos:start="27:9" pos:end="29:59"><expr pos:start="27:9" pos:end="29:58"><call pos:start="27:9" pos:end="29:58"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="29:58">(<argument pos:start="27:16" pos:end="27:23"><expr pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:16">s</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:23">avctx</name></name></expr></argument>, <argument pos:start="27:26" pos:end="27:37"><expr pos:start="27:26" pos:end="27:37"><name pos:start="27:26" pos:end="27:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="29:16" pos:end="29:57"><expr pos:start="29:16" pos:end="29:57"><literal type="string" pos:start="29:16" pos:end="29:57">"internal error, slice end before start\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="39:15"><if pos:start="37:5" pos:end="39:15">if <condition pos:start="37:8" pos:end="37:37">(<expr pos:start="37:9" pos:end="37:36"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:36"><name pos:start="37:10" pos:end="37:10">s</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:17">avctx</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:36">error_concealment</name></name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:15"><block_content pos:start="39:9" pos:end="39:15">

        <return pos:start="39:9" pos:end="39:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:22"><expr pos:start="43:5" pos:end="43:21"><name pos:start="43:5" pos:end="43:8">mask</name> <operator pos:start="43:10" pos:end="43:11">&amp;=</operator> <operator pos:start="43:13" pos:end="43:13">~</operator><name pos:start="43:14" pos:end="43:21">VP_START</name></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:43">(<expr pos:start="45:9" pos:end="45:42"><name pos:start="45:9" pos:end="45:14">status</name> <operator pos:start="45:16" pos:end="45:16">&amp;</operator> <operator pos:start="45:18" pos:end="45:18">(</operator><name pos:start="45:19" pos:end="45:29">ER_AC_ERROR</name> <operator pos:start="45:31" pos:end="45:31">|</operator> <name pos:start="45:33" pos:end="45:41">ER_AC_END</name><operator pos:start="45:42" pos:end="45:42">)</operator></expr>)</condition> <block pos:start="45:45" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:46">

        <expr_stmt pos:start="47:9" pos:end="47:53"><expr pos:start="47:9" pos:end="47:52"><name pos:start="47:9" pos:end="47:12">mask</name>           <operator pos:start="47:24" pos:end="47:25">&amp;=</operator> <operator pos:start="47:27" pos:end="47:27">~</operator><operator pos:start="47:28" pos:end="47:28">(</operator><name pos:start="47:29" pos:end="47:39">ER_AC_ERROR</name> <operator pos:start="47:41" pos:end="47:41">|</operator> <name pos:start="47:43" pos:end="47:51">ER_AC_END</name><operator pos:start="47:52" pos:end="47:52">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:46"><expr pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:22">error_count</name></name> <operator pos:start="49:24" pos:end="49:25">-=</operator> <name pos:start="49:27" pos:end="49:31">end_i</name> <operator pos:start="49:33" pos:end="49:33">-</operator> <name pos:start="49:35" pos:end="49:41">start_i</name> <operator pos:start="49:43" pos:end="49:43">+</operator> <literal type="number" pos:start="49:45" pos:end="49:45">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:43">(<expr pos:start="53:9" pos:end="53:42"><name pos:start="53:9" pos:end="53:14">status</name> <operator pos:start="53:16" pos:end="53:16">&amp;</operator> <operator pos:start="53:18" pos:end="53:18">(</operator><name pos:start="53:19" pos:end="53:29">ER_DC_ERROR</name> <operator pos:start="53:31" pos:end="53:31">|</operator> <name pos:start="53:33" pos:end="53:41">ER_DC_END</name><operator pos:start="53:42" pos:end="53:42">)</operator></expr>)</condition> <block pos:start="53:45" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:46">

        <expr_stmt pos:start="55:9" pos:end="55:53"><expr pos:start="55:9" pos:end="55:52"><name pos:start="55:9" pos:end="55:12">mask</name>           <operator pos:start="55:24" pos:end="55:25">&amp;=</operator> <operator pos:start="55:27" pos:end="55:27">~</operator><operator pos:start="55:28" pos:end="55:28">(</operator><name pos:start="55:29" pos:end="55:39">ER_DC_ERROR</name> <operator pos:start="55:41" pos:end="55:41">|</operator> <name pos:start="55:43" pos:end="55:51">ER_DC_END</name><operator pos:start="55:52" pos:end="55:52">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:46"><expr pos:start="57:9" pos:end="57:45"><name pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:22">error_count</name></name> <operator pos:start="57:24" pos:end="57:25">-=</operator> <name pos:start="57:27" pos:end="57:31">end_i</name> <operator pos:start="57:33" pos:end="57:33">-</operator> <name pos:start="57:35" pos:end="57:41">start_i</name> <operator pos:start="57:43" pos:end="57:43">+</operator> <literal type="number" pos:start="57:45" pos:end="57:45">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:43">(<expr pos:start="61:9" pos:end="61:42"><name pos:start="61:9" pos:end="61:14">status</name> <operator pos:start="61:16" pos:end="61:16">&amp;</operator> <operator pos:start="61:18" pos:end="61:18">(</operator><name pos:start="61:19" pos:end="61:29">ER_MV_ERROR</name> <operator pos:start="61:31" pos:end="61:31">|</operator> <name pos:start="61:33" pos:end="61:41">ER_MV_END</name><operator pos:start="61:42" pos:end="61:42">)</operator></expr>)</condition> <block pos:start="61:45" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:46">

        <expr_stmt pos:start="63:9" pos:end="63:53"><expr pos:start="63:9" pos:end="63:52"><name pos:start="63:9" pos:end="63:12">mask</name>           <operator pos:start="63:24" pos:end="63:25">&amp;=</operator> <operator pos:start="63:27" pos:end="63:27">~</operator><operator pos:start="63:28" pos:end="63:28">(</operator><name pos:start="63:29" pos:end="63:39">ER_MV_ERROR</name> <operator pos:start="63:41" pos:end="63:41">|</operator> <name pos:start="63:43" pos:end="63:51">ER_MV_END</name><operator pos:start="63:52" pos:end="63:52">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:46"><expr pos:start="65:9" pos:end="65:45"><name pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:22">error_count</name></name> <operator pos:start="65:24" pos:end="65:25">-=</operator> <name pos:start="65:27" pos:end="65:31">end_i</name> <operator pos:start="65:33" pos:end="65:33">-</operator> <name pos:start="65:35" pos:end="65:41">start_i</name> <operator pos:start="65:43" pos:end="65:43">+</operator> <literal type="number" pos:start="65:45" pos:end="65:45">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:29">(<expr pos:start="71:9" pos:end="71:28"><name pos:start="71:9" pos:end="71:14">status</name> <operator pos:start="71:16" pos:end="71:16">&amp;</operator> <name pos:start="71:18" pos:end="71:28">ER_MB_ERROR</name></expr>)</condition> <block pos:start="71:31" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:36">

        <expr_stmt pos:start="73:9" pos:end="73:30"><expr pos:start="73:9" pos:end="73:29"><name pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:25">error_occurred</name></name> <operator pos:start="73:27" pos:end="73:27">=</operator> <literal type="number" pos:start="73:29" pos:end="73:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:36"><expr pos:start="75:9" pos:end="75:35"><name pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:22">error_count</name></name>    <operator pos:start="75:27" pos:end="75:27">=</operator> <name pos:start="75:29" pos:end="75:35">INT_MAX</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="95:5"><if pos:start="81:5" pos:end="87:5">if <condition pos:start="81:8" pos:end="81:22">(<expr pos:start="81:9" pos:end="81:21"><name pos:start="81:9" pos:end="81:12">mask</name> <operator pos:start="81:14" pos:end="81:15">==</operator> <operator pos:start="81:17" pos:end="81:17">~</operator><literal type="number" pos:start="81:18" pos:end="81:21">0x7F</literal></expr>)</condition> <block pos:start="81:24" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:54">

        <expr_stmt pos:start="83:9" pos:end="85:54"><expr pos:start="83:9" pos:end="85:53"><call pos:start="83:9" pos:end="85:53"><name pos:start="83:9" pos:end="83:14">memset</name><argument_list pos:start="83:15" pos:end="85:53">(<argument pos:start="83:16" pos:end="83:47"><expr pos:start="83:16" pos:end="83:47"><operator pos:start="83:16" pos:end="83:16">&amp;</operator><name pos:start="83:17" pos:end="83:47"><name pos:start="83:17" pos:end="83:17">s</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:37">error_status_table</name><index pos:start="83:38" pos:end="83:47">[<expr pos:start="83:39" pos:end="83:46"><name pos:start="83:39" pos:end="83:46">start_xy</name></expr>]</index></name></expr></argument>, <argument pos:start="83:50" pos:end="83:50"><expr pos:start="83:50" pos:end="83:50"><literal type="number" pos:start="83:50" pos:end="83:50">0</literal></expr></argument>,

               <argument pos:start="85:16" pos:end="85:52"><expr pos:start="85:16" pos:end="85:52"><operator pos:start="85:16" pos:end="85:16">(</operator><name pos:start="85:17" pos:end="85:22">end_xy</name> <operator pos:start="85:24" pos:end="85:24">-</operator> <name pos:start="85:26" pos:end="85:33">start_xy</name><operator pos:start="85:34" pos:end="85:34">)</operator> <operator pos:start="85:36" pos:end="85:36">*</operator> <sizeof pos:start="85:38" pos:end="85:52">sizeof<argument_list pos:start="85:44" pos:end="85:52">(<argument pos:start="85:45" pos:end="85:51"><expr pos:start="85:45" pos:end="85:51"><name pos:start="85:45" pos:end="85:51">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="87:7" pos:end="95:5">else <block pos:start="87:12" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:45">

        <decl_stmt pos:start="89:9" pos:end="89:14"><decl pos:start="89:9" pos:end="89:13"><type pos:start="89:9" pos:end="89:11"><name pos:start="89:9" pos:end="89:11">int</name></type> <name pos:start="89:13" pos:end="89:13">i</name></decl>;</decl_stmt>

        <for pos:start="91:9" pos:end="93:45">for <control pos:start="91:13" pos:end="91:43">(<init pos:start="91:14" pos:end="91:26"><expr pos:start="91:14" pos:end="91:25"><name pos:start="91:14" pos:end="91:14">i</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <name pos:start="91:18" pos:end="91:25">start_xy</name></expr>;</init> <condition pos:start="91:28" pos:end="91:38"><expr pos:start="91:28" pos:end="91:37"><name pos:start="91:28" pos:end="91:28">i</name> <operator pos:start="91:30" pos:end="91:30">&lt;</operator> <name pos:start="91:32" pos:end="91:37">end_xy</name></expr>;</condition> <incr pos:start="91:40" pos:end="91:42"><expr pos:start="91:40" pos:end="91:42"><name pos:start="91:40" pos:end="91:40">i</name><operator pos:start="91:41" pos:end="91:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="93:13" pos:end="93:45"><block_content pos:start="93:13" pos:end="93:45">

            <expr_stmt pos:start="93:13" pos:end="93:45"><expr pos:start="93:13" pos:end="93:44"><name pos:start="93:13" pos:end="93:36"><name pos:start="93:13" pos:end="93:13">s</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:33">error_status_table</name><index pos:start="93:34" pos:end="93:36">[<expr pos:start="93:35" pos:end="93:35"><name pos:start="93:35" pos:end="93:35">i</name></expr>]</index></name> <operator pos:start="93:38" pos:end="93:39">&amp;=</operator> <name pos:start="93:41" pos:end="93:44">mask</name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="99:5" pos:end="109:5"><if pos:start="99:5" pos:end="101:33">if <condition pos:start="99:8" pos:end="99:27">(<expr pos:start="99:9" pos:end="99:26"><name pos:start="99:9" pos:end="99:13">end_i</name> <operator pos:start="99:15" pos:end="99:16">==</operator> <name pos:start="99:18" pos:end="99:26"><name pos:start="99:18" pos:end="99:18">s</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:26">mb_num</name></name></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:33"><block_content pos:start="101:9" pos:end="101:33">

        <expr_stmt pos:start="101:9" pos:end="101:33"><expr pos:start="101:9" pos:end="101:32"><name pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:22">error_count</name></name> <operator pos:start="101:24" pos:end="101:24">=</operator> <name pos:start="101:26" pos:end="101:32">INT_MAX</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="103:5" pos:end="109:5">else <block pos:start="103:10" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:48">

        <expr_stmt pos:start="105:9" pos:end="105:46"><expr pos:start="105:9" pos:end="105:45"><name pos:start="105:9" pos:end="105:37"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:29">error_status_table</name><index pos:start="105:30" pos:end="105:37">[<expr pos:start="105:31" pos:end="105:36"><name pos:start="105:31" pos:end="105:36">end_xy</name></expr>]</index></name> <operator pos:start="105:39" pos:end="105:40">&amp;=</operator> <name pos:start="105:42" pos:end="105:45">mask</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:48"><expr pos:start="107:9" pos:end="107:47"><name pos:start="107:9" pos:end="107:37"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:29">error_status_table</name><index pos:start="107:30" pos:end="107:37">[<expr pos:start="107:31" pos:end="107:36"><name pos:start="107:31" pos:end="107:36">end_xy</name></expr>]</index></name> <operator pos:start="107:39" pos:end="107:40">|=</operator> <name pos:start="107:42" pos:end="107:47">status</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:48"><expr pos:start="113:5" pos:end="113:47"><name pos:start="113:5" pos:end="113:35"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:25">error_status_table</name><index pos:start="113:26" pos:end="113:35">[<expr pos:start="113:27" pos:end="113:34"><name pos:start="113:27" pos:end="113:34">start_xy</name></expr>]</index></name> <operator pos:start="113:37" pos:end="113:38">|=</operator> <name pos:start="113:40" pos:end="113:47">VP_START</name></expr>;</expr_stmt>



    <if_stmt pos:start="117:5" pos:end="135:5"><if pos:start="117:5" pos:end="135:5">if <condition pos:start="117:8" pos:end="119:70">(<expr pos:start="117:9" pos:end="119:69"><name pos:start="117:9" pos:end="117:16">start_xy</name> <operator pos:start="117:18" pos:end="117:18">&gt;</operator> <literal type="number" pos:start="117:20" pos:end="117:20">0</literal> <operator pos:start="117:22" pos:end="117:23">&amp;&amp;</operator> <operator pos:start="117:25" pos:end="117:25">!</operator><operator pos:start="117:26" pos:end="117:26">(</operator><name pos:start="117:27" pos:end="117:54"><name pos:start="117:27" pos:end="117:27">s</name><operator pos:start="117:28" pos:end="117:29">-&gt;</operator><name pos:start="117:30" pos:end="117:34">avctx</name><operator pos:start="117:35" pos:end="117:36">-&gt;</operator><name pos:start="117:37" pos:end="117:54">active_thread_type</name></name> <operator pos:start="117:56" pos:end="117:56">&amp;</operator> <name pos:start="117:58" pos:end="117:72">FF_THREAD_SLICE</name><operator pos:start="117:73" pos:end="117:73">)</operator> <operator pos:start="117:75" pos:end="117:76">&amp;&amp;</operator>

        <call pos:start="119:9" pos:end="119:23"><name pos:start="119:9" pos:end="119:20">er_supported</name><argument_list pos:start="119:21" pos:end="119:23">(<argument pos:start="119:22" pos:end="119:22"><expr pos:start="119:22" pos:end="119:22"><name pos:start="119:22" pos:end="119:22">s</name></expr></argument>)</argument_list></call> <operator pos:start="119:25" pos:end="119:26">&amp;&amp;</operator> <name pos:start="119:28" pos:end="119:45"><name pos:start="119:28" pos:end="119:28">s</name><operator pos:start="119:29" pos:end="119:30">-&gt;</operator><name pos:start="119:31" pos:end="119:35">avctx</name><operator pos:start="119:36" pos:end="119:37">-&gt;</operator><name pos:start="119:38" pos:end="119:45">skip_top</name></name> <operator pos:start="119:47" pos:end="119:47">*</operator> <name pos:start="119:49" pos:end="119:59"><name pos:start="119:49" pos:end="119:49">s</name><operator pos:start="119:50" pos:end="119:51">-&gt;</operator><name pos:start="119:52" pos:end="119:59">mb_width</name></name> <operator pos:start="119:61" pos:end="119:61">&lt;</operator> <name pos:start="119:63" pos:end="119:69">start_i</name></expr>)</condition> <block pos:start="119:72" pos:end="135:5">{<block_content pos:start="121:9" pos:end="133:9">

        <decl_stmt pos:start="121:9" pos:end="121:77"><decl pos:start="121:9" pos:end="121:76"><type pos:start="121:9" pos:end="121:11"><name pos:start="121:9" pos:end="121:11">int</name></type> <name pos:start="121:13" pos:end="121:23">prev_status</name> <init pos:start="121:25" pos:end="121:76">= <expr pos:start="121:27" pos:end="121:76"><name pos:start="121:27" pos:end="121:76"><name pos:start="121:27" pos:end="121:27">s</name><operator pos:start="121:28" pos:end="121:29">-&gt;</operator><name pos:start="121:30" pos:end="121:47">error_status_table</name><index pos:start="121:48" pos:end="121:76">[<expr pos:start="121:49" pos:end="121:75"><name pos:start="121:49" pos:end="121:75"><name pos:start="121:49" pos:end="121:49">s</name><operator pos:start="121:50" pos:end="121:51">-&gt;</operator><name pos:start="121:52" pos:end="121:62">mb_index2xy</name><index pos:start="121:63" pos:end="121:75">[<expr pos:start="121:64" pos:end="121:74"><name pos:start="121:64" pos:end="121:70">start_i</name> <operator pos:start="121:72" pos:end="121:72">-</operator> <literal type="number" pos:start="121:74" pos:end="121:74">1</literal></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="125:9" pos:end="125:34"><expr pos:start="125:9" pos:end="125:33"><name pos:start="125:9" pos:end="125:19">prev_status</name> <operator pos:start="125:21" pos:end="125:22">&amp;=</operator> <operator pos:start="125:24" pos:end="125:24">~</operator> <name pos:start="125:26" pos:end="125:33">VP_START</name></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="133:9"><if pos:start="127:9" pos:end="133:9">if <condition pos:start="127:12" pos:end="127:63">(<expr pos:start="127:13" pos:end="127:62"><name pos:start="127:13" pos:end="127:23">prev_status</name> <operator pos:start="127:25" pos:end="127:26">!=</operator> <operator pos:start="127:28" pos:end="127:28">(</operator><name pos:start="127:29" pos:end="127:37">ER_MV_END</name> <operator pos:start="127:39" pos:end="127:39">|</operator> <name pos:start="127:41" pos:end="127:49">ER_DC_END</name> <operator pos:start="127:51" pos:end="127:51">|</operator> <name pos:start="127:53" pos:end="127:61">ER_AC_END</name><operator pos:start="127:62" pos:end="127:62">)</operator></expr>)</condition> <block pos:start="127:65" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:37">

            <expr_stmt pos:start="129:13" pos:end="129:34"><expr pos:start="129:13" pos:end="129:33"><name pos:start="129:13" pos:end="129:29"><name pos:start="129:13" pos:end="129:13">s</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:29">error_occurred</name></name> <operator pos:start="129:31" pos:end="129:31">=</operator> <literal type="number" pos:start="129:33" pos:end="129:33">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:37"><expr pos:start="131:13" pos:end="131:36"><name pos:start="131:13" pos:end="131:26"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:26">error_count</name></name> <operator pos:start="131:28" pos:end="131:28">=</operator> <name pos:start="131:30" pos:end="131:36">INT_MAX</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
