<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14204.c" pos:tabs="8"><function pos:start="1:1" pos:end="207:15"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:34">spapr_create_fdt_skel</name><parameter_list pos:start="1:35" pos:end="8:51">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:56"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:56">cpu_model</name></decl></parameter>,
                                   <parameter pos:start="2:36" pos:end="2:62"><decl pos:start="2:36" pos:end="2:62"><type pos:start="2:36" pos:end="2:62"><name pos:start="2:36" pos:end="2:53">target_phys_addr_t</name></type> <name pos:start="2:55" pos:end="2:62">rma_size</name></decl></parameter>,
                                   <parameter pos:start="3:36" pos:end="3:65"><decl pos:start="3:36" pos:end="3:65"><type pos:start="3:36" pos:end="3:65"><name pos:start="3:36" pos:end="3:53">target_phys_addr_t</name></type> <name pos:start="3:55" pos:end="3:65">initrd_base</name></decl></parameter>,
                                   <parameter pos:start="4:36" pos:end="4:65"><decl pos:start="4:36" pos:end="4:65"><type pos:start="4:36" pos:end="4:65"><name pos:start="4:36" pos:end="4:53">target_phys_addr_t</name></type> <name pos:start="4:55" pos:end="4:65">initrd_size</name></decl></parameter>,
                                   <parameter pos:start="5:36" pos:end="5:65"><decl pos:start="5:36" pos:end="5:65"><type pos:start="5:36" pos:end="5:65"><name pos:start="5:36" pos:end="5:53">target_phys_addr_t</name></type> <name pos:start="5:55" pos:end="5:65">kernel_size</name></decl></parameter>,
                                   <parameter pos:start="6:36" pos:end="6:58"><decl pos:start="6:36" pos:end="6:58"><type pos:start="6:36" pos:end="6:58"><specifier pos:start="6:36" pos:end="6:40">const</specifier> <name pos:start="6:42" pos:end="6:45">char</name> <modifier pos:start="6:47" pos:end="6:47">*</modifier></type><name pos:start="6:48" pos:end="6:58">boot_device</name></decl></parameter>,
                                   <parameter pos:start="7:36" pos:end="7:61"><decl pos:start="7:36" pos:end="7:61"><type pos:start="7:36" pos:end="7:61"><specifier pos:start="7:36" pos:end="7:40">const</specifier> <name pos:start="7:42" pos:end="7:45">char</name> <modifier pos:start="7:47" pos:end="7:47">*</modifier></type><name pos:start="7:48" pos:end="7:61">kernel_cmdline</name></decl></parameter>,
                                   <parameter pos:start="8:36" pos:end="8:50"><decl pos:start="8:36" pos:end="8:50"><type pos:start="8:36" pos:end="8:50"><name pos:start="8:36" pos:end="8:39">long</name></type> <name pos:start="8:41" pos:end="8:50">hash_shift</name></decl></parameter>)</parameter_list>
<block pos:start="9:1" pos:end="207:15">{<block_content pos:start="10:5" pos:end="207:15">
    <decl_stmt pos:start="10:5" pos:end="10:14"><decl pos:start="10:5" pos:end="10:13"><type pos:start="10:5" pos:end="10:10"><name pos:start="10:5" pos:end="10:8">void</name> <modifier pos:start="10:10" pos:end="10:10">*</modifier></type><name pos:start="10:11" pos:end="10:13">fdt</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">CPUPPCState</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">env</name></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:33"><decl pos:start="12:5" pos:end="12:32"><type pos:start="12:5" pos:end="12:12"><name pos:start="12:5" pos:end="12:12">uint64_t</name></type> <name pos:start="12:14" pos:end="12:32"><name pos:start="12:14" pos:end="12:29">mem_reg_property</name><index pos:start="12:30" pos:end="12:32">[<expr pos:start="12:31" pos:end="12:31"><literal type="number" pos:start="12:31" pos:end="12:31">2</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="13:5" pos:end="13:51"><decl pos:start="13:5" pos:end="13:50"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:23">start_prop</name> <init pos:start="13:25" pos:end="13:50">= <expr pos:start="13:27" pos:end="13:50"><call pos:start="13:27" pos:end="13:50"><name pos:start="13:27" pos:end="13:37">cpu_to_be32</name><argument_list pos:start="13:38" pos:end="13:50">(<argument pos:start="13:39" pos:end="13:49"><expr pos:start="13:39" pos:end="13:49"><name pos:start="13:39" pos:end="13:49">initrd_base</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="14:5" pos:end="14:63"><decl pos:start="14:5" pos:end="14:62"><type pos:start="14:5" pos:end="14:12"><name pos:start="14:5" pos:end="14:12">uint32_t</name></type> <name pos:start="14:14" pos:end="14:21">end_prop</name> <init pos:start="14:23" pos:end="14:62">= <expr pos:start="14:25" pos:end="14:62"><call pos:start="14:25" pos:end="14:62"><name pos:start="14:25" pos:end="14:35">cpu_to_be32</name><argument_list pos:start="14:36" pos:end="14:62">(<argument pos:start="14:37" pos:end="14:61"><expr pos:start="14:37" pos:end="14:61"><name pos:start="14:37" pos:end="14:47">initrd_base</name> <operator pos:start="14:49" pos:end="14:49">+</operator> <name pos:start="14:51" pos:end="14:61">initrd_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="15:5" pos:end="15:60"><decl pos:start="15:5" pos:end="15:59"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:28"><name pos:start="15:14" pos:end="15:26">pft_size_prop</name><index pos:start="15:27" pos:end="15:28">[]</index></name> <init pos:start="15:30" pos:end="15:59">= <expr pos:start="15:32" pos:end="15:59"><block pos:start="15:32" pos:end="15:59">{<expr pos:start="15:33" pos:end="15:33"><literal type="number" pos:start="15:33" pos:end="15:33">0</literal></expr>, <macro pos:start="15:36" pos:end="15:58"><name pos:start="15:36" pos:end="15:46">cpu_to_be32</name><argument_list pos:start="15:47" pos:end="15:58">(<argument pos:start="15:48" pos:end="15:57">hash_shift</argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="16:5" pos:end="17:59"><decl pos:start="16:5" pos:end="17:58"><type pos:start="16:5" pos:end="16:8"><name pos:start="16:5" pos:end="16:8">char</name></type> <name pos:start="16:10" pos:end="16:24"><name pos:start="16:10" pos:end="16:22">hypertas_prop</name><index pos:start="16:23" pos:end="16:24">[]</index></name> <init pos:start="16:26" pos:end="17:58">= <expr pos:start="16:28" pos:end="17:58"><literal type="string" pos:start="16:28" pos:end="16:79">"hcall-pft\0hcall-term\0hcall-dabr\0hcall-interrupt"</literal>
        <literal type="string" pos:start="17:9" pos:end="17:58">"\0hcall-tce\0hcall-vio\0hcall-splpar\0hcall-bulk"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="18:5" pos:end="18:73"><decl pos:start="18:5" pos:end="18:72"><type pos:start="18:5" pos:end="18:12"><name pos:start="18:5" pos:end="18:12">uint32_t</name></type> <name pos:start="18:14" pos:end="18:43"><name pos:start="18:14" pos:end="18:41">interrupt_server_ranges_prop</name><index pos:start="18:42" pos:end="18:43">[]</index></name> <init pos:start="18:45" pos:end="18:72">= <expr pos:start="18:47" pos:end="18:72"><block pos:start="18:47" pos:end="18:72">{<expr pos:start="18:48" pos:end="18:48"><literal type="number" pos:start="18:48" pos:end="18:48">0</literal></expr>, <macro pos:start="18:51" pos:end="18:71"><name pos:start="18:51" pos:end="18:61">cpu_to_be32</name><argument_list pos:start="18:62" pos:end="18:71">(<argument pos:start="18:63" pos:end="18:70">smp_cpus</argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>
    <decl_stmt pos:start="20:5" pos:end="20:20"><decl pos:start="20:5" pos:end="20:19"><type pos:start="20:5" pos:end="20:10"><name pos:start="20:5" pos:end="20:8">char</name> <modifier pos:start="20:10" pos:end="20:10">*</modifier></type><name pos:start="20:11" pos:end="20:19">modelname</name></decl>;</decl_stmt>
    <decl_stmt pos:start="21:5" pos:end="21:35"><decl pos:start="21:5" pos:end="21:34"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">smt</name> <init pos:start="21:13" pos:end="21:34">= <expr pos:start="21:15" pos:end="21:34"><call pos:start="21:15" pos:end="21:34"><name pos:start="21:15" pos:end="21:32">kvmppc_smt_threads</name><argument_list pos:start="21:33" pos:end="21:34">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="22:5" pos:end="22:59"><decl pos:start="22:5" pos:end="22:58"><type pos:start="22:5" pos:end="22:17"><name pos:start="22:5" pos:end="22:12">unsigned</name> <name pos:start="22:14" pos:end="22:17">char</name></type> <name pos:start="22:19" pos:end="22:24"><name pos:start="22:19" pos:end="22:22">vec5</name><index pos:start="22:23" pos:end="22:24">[]</index></name> <init pos:start="22:26" pos:end="22:58">= <expr pos:start="22:28" pos:end="22:58"><block pos:start="22:28" pos:end="22:58">{<expr pos:start="22:29" pos:end="22:31"><literal type="number" pos:start="22:29" pos:end="22:31">0x0</literal></expr>, <expr pos:start="22:34" pos:end="22:36"><literal type="number" pos:start="22:34" pos:end="22:36">0x0</literal></expr>, <expr pos:start="22:39" pos:end="22:41"><literal type="number" pos:start="22:39" pos:end="22:41">0x0</literal></expr>, <expr pos:start="22:44" pos:end="22:46"><literal type="number" pos:start="22:44" pos:end="22:46">0x0</literal></expr>, <expr pos:start="22:49" pos:end="22:51"><literal type="number" pos:start="22:49" pos:end="22:51">0x0</literal></expr>, <expr pos:start="22:54" pos:end="22:57"><literal type="number" pos:start="22:54" pos:end="22:57">0x80</literal></expr>}</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="23:5" pos:end="23:64"><decl pos:start="23:5" pos:end="23:63"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint32_t</name></type> <name pos:start="23:14" pos:end="23:24"><name pos:start="23:14" pos:end="23:22">refpoints</name><index pos:start="23:23" pos:end="23:24">[]</index></name> <init pos:start="23:26" pos:end="23:63">= <expr pos:start="23:28" pos:end="23:63"><block pos:start="23:28" pos:end="23:63">{<expr pos:start="23:29" pos:end="23:44"><call pos:start="23:29" pos:end="23:44"><name pos:start="23:29" pos:end="23:39">cpu_to_be32</name><argument_list pos:start="23:40" pos:end="23:44">(<argument pos:start="23:41" pos:end="23:43"><expr pos:start="23:41" pos:end="23:43"><literal type="number" pos:start="23:41" pos:end="23:43">0x4</literal></expr></argument>)</argument_list></call></expr>, <macro pos:start="23:47" pos:end="23:62"><name pos:start="23:47" pos:end="23:57">cpu_to_be32</name><argument_list pos:start="23:58" pos:end="23:62">(<argument pos:start="23:59" pos:end="23:61"><literal type="number" pos:start="23:59" pos:end="23:61">0x4</literal></argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="24:5" pos:end="26:50"><decl pos:start="24:5" pos:end="26:49"><type pos:start="24:5" pos:end="24:12"><name pos:start="24:5" pos:end="24:12">uint32_t</name></type> <name pos:start="24:14" pos:end="24:28"><name pos:start="24:14" pos:end="24:26">associativity</name><index pos:start="24:27" pos:end="24:28">[]</index></name> <init pos:start="24:30" pos:end="26:49">= <expr pos:start="24:32" pos:end="26:49"><block pos:start="24:32" pos:end="26:49">{<expr pos:start="24:33" pos:end="24:48"><call pos:start="24:33" pos:end="24:48"><name pos:start="24:33" pos:end="24:43">cpu_to_be32</name><argument_list pos:start="24:44" pos:end="24:48">(<argument pos:start="24:45" pos:end="24:47"><expr pos:start="24:45" pos:end="24:47"><literal type="number" pos:start="24:45" pos:end="24:47">0x4</literal></expr></argument>)</argument_list></call></expr>, <expr pos:start="24:51" pos:end="24:66"><call pos:start="24:51" pos:end="24:66"><name pos:start="24:51" pos:end="24:61">cpu_to_be32</name><argument_list pos:start="24:62" pos:end="24:66">(<argument pos:start="24:63" pos:end="24:65"><expr pos:start="24:63" pos:end="24:65"><literal type="number" pos:start="24:63" pos:end="24:65">0x0</literal></expr></argument>)</argument_list></call></expr>,
                                <expr pos:start="25:33" pos:end="25:48"><call pos:start="25:33" pos:end="25:48"><name pos:start="25:33" pos:end="25:43">cpu_to_be32</name><argument_list pos:start="25:44" pos:end="25:48">(<argument pos:start="25:45" pos:end="25:47"><expr pos:start="25:45" pos:end="25:47"><literal type="number" pos:start="25:45" pos:end="25:47">0x0</literal></expr></argument>)</argument_list></call></expr>, <expr pos:start="25:51" pos:end="25:66"><call pos:start="25:51" pos:end="25:66"><name pos:start="25:51" pos:end="25:61">cpu_to_be32</name><argument_list pos:start="25:62" pos:end="25:66">(<argument pos:start="25:63" pos:end="25:65"><expr pos:start="25:63" pos:end="25:65"><literal type="number" pos:start="25:63" pos:end="25:65">0x0</literal></expr></argument>)</argument_list></call></expr>,
                                <macro pos:start="26:33" pos:end="26:48"><name pos:start="26:33" pos:end="26:43">cpu_to_be32</name><argument_list pos:start="26:44" pos:end="26:48">(<argument pos:start="26:45" pos:end="26:47"><literal type="number" pos:start="26:45" pos:end="26:47">0x0</literal></argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="27:5" pos:end="27:22"><decl pos:start="27:5" pos:end="27:21"><type pos:start="27:5" pos:end="27:8"><name pos:start="27:5" pos:end="27:8">char</name></type> <name pos:start="27:10" pos:end="27:21"><name pos:start="27:10" pos:end="27:17">mem_name</name><index pos:start="27:18" pos:end="27:21">[<expr pos:start="27:19" pos:end="27:20"><literal type="number" pos:start="27:19" pos:end="27:20">32</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="28:5" pos:end="38:0"><decl pos:start="28:5" pos:end="28:33"><type pos:start="28:5" pos:end="28:22"><name pos:start="28:5" pos:end="28:22">target_phys_addr_t</name></type> <name pos:start="28:24" pos:end="28:33">node0_size</name></decl>, <decl pos:start="28:36" pos:end="28:44"><type ref="prev" pos:start="28:5" pos:end="28:22"/><name pos:start="28:36" pos:end="28:44">mem_start</name></decl>;</decl_stmt>
<cpp:define pos:start="29:1" pos:end="37:15">#<cpp:directive pos:start="29:2" pos:end="29:7">define</cpp:directive> <cpp:macro pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:12">_FDT</name><parameter_list pos:start="29:13" pos:end="29:17">(<parameter pos:start="29:14" pos:end="29:16"><type pos:start="29:14" pos:end="29:16"><name pos:start="29:14" pos:end="29:16">exp</name></type></parameter>)</parameter_list></cpp:macro> \
    <cpp:value pos:start="30:5" pos:end="37:15">do { \
        int ret = (exp);                                           \
        if (ret &lt; 0) {                                             \
            fprintf(stderr, "qemu: error creating device tree: %s: %s\n", \
                    #exp, fdt_strerror(ret));                      \
            exit(1);                                               \
        }                                                          \
    } while (0)</cpp:value></cpp:define>
    <expr_stmt pos:start="38:5" pos:end="38:34"><expr pos:start="38:5" pos:end="38:33"><name pos:start="38:5" pos:end="38:7">fdt</name> <operator pos:start="38:9" pos:end="38:9">=</operator> <call pos:start="38:11" pos:end="38:33"><name pos:start="38:11" pos:end="38:19">g_malloc0</name><argument_list pos:start="38:20" pos:end="38:33">(<argument pos:start="38:21" pos:end="38:32"><expr pos:start="38:21" pos:end="38:32"><name pos:start="38:21" pos:end="38:32">FDT_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:42"><expr pos:start="39:5" pos:end="39:41"><call pos:start="39:5" pos:end="39:41"><name pos:start="39:5" pos:end="39:8">_FDT</name><argument_list pos:start="39:9" pos:end="39:41">(<argument pos:start="39:10" pos:end="39:40"><expr pos:start="39:10" pos:end="39:40"><operator pos:start="39:10" pos:end="39:10">(</operator><call pos:start="39:11" pos:end="39:39"><name pos:start="39:11" pos:end="39:20">fdt_create</name><argument_list pos:start="39:21" pos:end="39:39">(<argument pos:start="39:22" pos:end="39:24"><expr pos:start="39:22" pos:end="39:24"><name pos:start="39:22" pos:end="39:24">fdt</name></expr></argument>, <argument pos:start="39:27" pos:end="39:38"><expr pos:start="39:27" pos:end="39:38"><name pos:start="39:27" pos:end="39:38">FDT_MAX_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="39:40" pos:end="39:40">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="40:5" pos:end="207:15"><if pos:start="40:5" pos:end="207:15">if <condition pos:start="40:8" pos:end="40:20">(<expr pos:start="40:9" pos:end="40:19"><name pos:start="40:9" pos:end="40:19">kernel_size</name></expr>)</condition> <block pos:start="40:22" pos:end="207:15">{<block_content pos:start="41:9" pos:end="207:15">
        <expr_stmt pos:start="41:9" pos:end="41:77"><expr pos:start="41:9" pos:end="41:76"><call pos:start="41:9" pos:end="41:76"><name pos:start="41:9" pos:end="41:12">_FDT</name><argument_list pos:start="41:13" pos:end="41:76">(<argument pos:start="41:14" pos:end="41:75"><expr pos:start="41:14" pos:end="41:75"><operator pos:start="41:14" pos:end="41:14">(</operator><call pos:start="41:15" pos:end="41:74"><name pos:start="41:15" pos:end="41:38">fdt_add_reservemap_entry</name><argument_list pos:start="41:39" pos:end="41:74">(<argument pos:start="41:40" pos:end="41:42"><expr pos:start="41:40" pos:end="41:42"><name pos:start="41:40" pos:end="41:42">fdt</name></expr></argument>, <argument pos:start="41:45" pos:end="41:60"><expr pos:start="41:45" pos:end="41:60"><name pos:start="41:45" pos:end="41:60">KERNEL_LOAD_ADDR</name></expr></argument>, <argument pos:start="41:63" pos:end="41:73"><expr pos:start="41:63" pos:end="41:73"><name pos:start="41:63" pos:end="41:73">kernel_size</name></expr></argument>)</argument_list></call><operator pos:start="41:75" pos:end="41:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="42:5" pos:end="207:15"><if pos:start="42:5" pos:end="207:15">if <condition pos:start="42:8" pos:end="42:20">(<expr pos:start="42:9" pos:end="42:19"><name pos:start="42:9" pos:end="42:19">initrd_size</name></expr>)</condition> <block pos:start="42:22" pos:end="207:15">{<block_content pos:start="43:9" pos:end="207:15">
        <expr_stmt pos:start="43:9" pos:end="43:72"><expr pos:start="43:9" pos:end="43:71"><call pos:start="43:9" pos:end="43:71"><name pos:start="43:9" pos:end="43:12">_FDT</name><argument_list pos:start="43:13" pos:end="43:71">(<argument pos:start="43:14" pos:end="43:70"><expr pos:start="43:14" pos:end="43:70"><operator pos:start="43:14" pos:end="43:14">(</operator><call pos:start="43:15" pos:end="43:69"><name pos:start="43:15" pos:end="43:38">fdt_add_reservemap_entry</name><argument_list pos:start="43:39" pos:end="43:69">(<argument pos:start="43:40" pos:end="43:42"><expr pos:start="43:40" pos:end="43:42"><name pos:start="43:40" pos:end="43:42">fdt</name></expr></argument>, <argument pos:start="43:45" pos:end="43:55"><expr pos:start="43:45" pos:end="43:55"><name pos:start="43:45" pos:end="43:55">initrd_base</name></expr></argument>, <argument pos:start="43:58" pos:end="43:68"><expr pos:start="43:58" pos:end="43:68"><name pos:start="43:58" pos:end="43:68">initrd_size</name></expr></argument>)</argument_list></call><operator pos:start="43:70" pos:end="43:70">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="44:5" pos:end="44:39"><expr pos:start="44:5" pos:end="44:38"><call pos:start="44:5" pos:end="44:38"><name pos:start="44:5" pos:end="44:8">_FDT</name><argument_list pos:start="44:9" pos:end="44:38">(<argument pos:start="44:10" pos:end="44:37"><expr pos:start="44:10" pos:end="44:37"><operator pos:start="44:10" pos:end="44:10">(</operator><call pos:start="44:11" pos:end="44:36"><name pos:start="44:11" pos:end="44:31">fdt_finish_reservemap</name><argument_list pos:start="44:32" pos:end="44:36">(<argument pos:start="44:33" pos:end="44:35"><expr pos:start="44:33" pos:end="44:35"><name pos:start="44:33" pos:end="44:35">fdt</name></expr></argument>)</argument_list></call><operator pos:start="44:37" pos:end="44:37">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="45:5" pos:end="45:19">/* Root node */</comment>
    <expr_stmt pos:start="46:5" pos:end="46:36"><expr pos:start="46:5" pos:end="46:35"><call pos:start="46:5" pos:end="46:35"><name pos:start="46:5" pos:end="46:8">_FDT</name><argument_list pos:start="46:9" pos:end="46:35">(<argument pos:start="46:10" pos:end="46:34"><expr pos:start="46:10" pos:end="46:34"><operator pos:start="46:10" pos:end="46:10">(</operator><call pos:start="46:11" pos:end="46:33"><name pos:start="46:11" pos:end="46:24">fdt_begin_node</name><argument_list pos:start="46:25" pos:end="46:33">(<argument pos:start="46:26" pos:end="46:28"><expr pos:start="46:26" pos:end="46:28"><name pos:start="46:26" pos:end="46:28">fdt</name></expr></argument>, <argument pos:start="46:31" pos:end="46:32"><expr pos:start="46:31" pos:end="46:32"><literal type="string" pos:start="46:31" pos:end="46:32">""</literal></expr></argument>)</argument_list></call><operator pos:start="46:34" pos:end="46:34">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="47:5" pos:end="47:60"><expr pos:start="47:5" pos:end="47:59"><call pos:start="47:5" pos:end="47:59"><name pos:start="47:5" pos:end="47:8">_FDT</name><argument_list pos:start="47:9" pos:end="47:59">(<argument pos:start="47:10" pos:end="47:58"><expr pos:start="47:10" pos:end="47:58"><operator pos:start="47:10" pos:end="47:10">(</operator><call pos:start="47:11" pos:end="47:57"><name pos:start="47:11" pos:end="47:29">fdt_property_string</name><argument_list pos:start="47:30" pos:end="47:57">(<argument pos:start="47:31" pos:end="47:33"><expr pos:start="47:31" pos:end="47:33"><name pos:start="47:31" pos:end="47:33">fdt</name></expr></argument>, <argument pos:start="47:36" pos:end="47:48"><expr pos:start="47:36" pos:end="47:48"><literal type="string" pos:start="47:36" pos:end="47:48">"device_type"</literal></expr></argument>, <argument pos:start="47:51" pos:end="47:56"><expr pos:start="47:51" pos:end="47:56"><literal type="string" pos:start="47:51" pos:end="47:56">"chrp"</literal></expr></argument>)</argument_list></call><operator pos:start="47:58" pos:end="47:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="48:5" pos:end="48:80"><expr pos:start="48:5" pos:end="48:79"><call pos:start="48:5" pos:end="48:79"><name pos:start="48:5" pos:end="48:8">_FDT</name><argument_list pos:start="48:9" pos:end="48:79">(<argument pos:start="48:10" pos:end="48:78"><expr pos:start="48:10" pos:end="48:78"><operator pos:start="48:10" pos:end="48:10">(</operator><call pos:start="48:11" pos:end="48:77"><name pos:start="48:11" pos:end="48:29">fdt_property_string</name><argument_list pos:start="48:30" pos:end="48:77">(<argument pos:start="48:31" pos:end="48:33"><expr pos:start="48:31" pos:end="48:33"><name pos:start="48:31" pos:end="48:33">fdt</name></expr></argument>, <argument pos:start="48:36" pos:end="48:42"><expr pos:start="48:36" pos:end="48:42"><literal type="string" pos:start="48:36" pos:end="48:42">"model"</literal></expr></argument>, <argument pos:start="48:45" pos:end="48:76"><expr pos:start="48:45" pos:end="48:76"><literal type="string" pos:start="48:45" pos:end="48:76">"IBM pSeries (emulated by qemu)"</literal></expr></argument>)</argument_list></call><operator pos:start="48:78" pos:end="48:78">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="49:5" pos:end="49:58"><expr pos:start="49:5" pos:end="49:57"><call pos:start="49:5" pos:end="49:57"><name pos:start="49:5" pos:end="49:8">_FDT</name><argument_list pos:start="49:9" pos:end="49:57">(<argument pos:start="49:10" pos:end="49:56"><expr pos:start="49:10" pos:end="49:56"><operator pos:start="49:10" pos:end="49:10">(</operator><call pos:start="49:11" pos:end="49:55"><name pos:start="49:11" pos:end="49:27">fdt_property_cell</name><argument_list pos:start="49:28" pos:end="49:55">(<argument pos:start="49:29" pos:end="49:31"><expr pos:start="49:29" pos:end="49:31"><name pos:start="49:29" pos:end="49:31">fdt</name></expr></argument>, <argument pos:start="49:34" pos:end="49:49"><expr pos:start="49:34" pos:end="49:49"><literal type="string" pos:start="49:34" pos:end="49:49">"#address-cells"</literal></expr></argument>, <argument pos:start="49:52" pos:end="49:54"><expr pos:start="49:52" pos:end="49:54"><literal type="number" pos:start="49:52" pos:end="49:54">0x2</literal></expr></argument>)</argument_list></call><operator pos:start="49:56" pos:end="49:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="50:5" pos:end="50:55"><expr pos:start="50:5" pos:end="50:54"><call pos:start="50:5" pos:end="50:54"><name pos:start="50:5" pos:end="50:8">_FDT</name><argument_list pos:start="50:9" pos:end="50:54">(<argument pos:start="50:10" pos:end="50:53"><expr pos:start="50:10" pos:end="50:53"><operator pos:start="50:10" pos:end="50:10">(</operator><call pos:start="50:11" pos:end="50:52"><name pos:start="50:11" pos:end="50:27">fdt_property_cell</name><argument_list pos:start="50:28" pos:end="50:52">(<argument pos:start="50:29" pos:end="50:31"><expr pos:start="50:29" pos:end="50:31"><name pos:start="50:29" pos:end="50:31">fdt</name></expr></argument>, <argument pos:start="50:34" pos:end="50:46"><expr pos:start="50:34" pos:end="50:46"><literal type="string" pos:start="50:34" pos:end="50:46">"#size-cells"</literal></expr></argument>, <argument pos:start="50:49" pos:end="50:51"><expr pos:start="50:49" pos:end="50:51"><literal type="number" pos:start="50:49" pos:end="50:51">0x2</literal></expr></argument>)</argument_list></call><operator pos:start="50:53" pos:end="50:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="51:5" pos:end="51:17">/* /chosen */</comment>
    <expr_stmt pos:start="52:5" pos:end="52:42"><expr pos:start="52:5" pos:end="52:41"><call pos:start="52:5" pos:end="52:41"><name pos:start="52:5" pos:end="52:8">_FDT</name><argument_list pos:start="52:9" pos:end="52:41">(<argument pos:start="52:10" pos:end="52:40"><expr pos:start="52:10" pos:end="52:40"><operator pos:start="52:10" pos:end="52:10">(</operator><call pos:start="52:11" pos:end="52:39"><name pos:start="52:11" pos:end="52:24">fdt_begin_node</name><argument_list pos:start="52:25" pos:end="52:39">(<argument pos:start="52:26" pos:end="52:28"><expr pos:start="52:26" pos:end="52:28"><name pos:start="52:26" pos:end="52:28">fdt</name></expr></argument>, <argument pos:start="52:31" pos:end="52:38"><expr pos:start="52:31" pos:end="52:38"><literal type="string" pos:start="52:31" pos:end="52:38">"chosen"</literal></expr></argument>)</argument_list></call><operator pos:start="52:40" pos:end="52:40">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="53:5" pos:end="53:28">/* Set Form1_affinity */</comment>
    <expr_stmt pos:start="54:5" pos:end="54:76"><expr pos:start="54:5" pos:end="54:75"><call pos:start="54:5" pos:end="54:75"><name pos:start="54:5" pos:end="54:8">_FDT</name><argument_list pos:start="54:9" pos:end="54:75">(<argument pos:start="54:10" pos:end="54:74"><expr pos:start="54:10" pos:end="54:74"><operator pos:start="54:10" pos:end="54:10">(</operator><call pos:start="54:11" pos:end="54:73"><name pos:start="54:11" pos:end="54:22">fdt_property</name><argument_list pos:start="54:23" pos:end="54:73">(<argument pos:start="54:24" pos:end="54:26"><expr pos:start="54:24" pos:end="54:26"><name pos:start="54:24" pos:end="54:26">fdt</name></expr></argument>, <argument pos:start="54:29" pos:end="54:52"><expr pos:start="54:29" pos:end="54:52"><literal type="string" pos:start="54:29" pos:end="54:52">"ibm,architecture-vec-5"</literal></expr></argument>, <argument pos:start="54:55" pos:end="54:58"><expr pos:start="54:55" pos:end="54:58"><name pos:start="54:55" pos:end="54:58">vec5</name></expr></argument>, <argument pos:start="54:61" pos:end="54:72"><expr pos:start="54:61" pos:end="54:72"><sizeof pos:start="54:61" pos:end="54:72">sizeof<argument_list pos:start="54:67" pos:end="54:72">(<argument pos:start="54:68" pos:end="54:71"><expr pos:start="54:68" pos:end="54:71"><name pos:start="54:68" pos:end="54:71">vec5</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="54:74" pos:end="54:74">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="55:5" pos:end="55:65"><expr pos:start="55:5" pos:end="55:64"><call pos:start="55:5" pos:end="55:64"><name pos:start="55:5" pos:end="55:8">_FDT</name><argument_list pos:start="55:9" pos:end="55:64">(<argument pos:start="55:10" pos:end="55:63"><expr pos:start="55:10" pos:end="55:63"><operator pos:start="55:10" pos:end="55:10">(</operator><call pos:start="55:11" pos:end="55:62"><name pos:start="55:11" pos:end="55:29">fdt_property_string</name><argument_list pos:start="55:30" pos:end="55:62">(<argument pos:start="55:31" pos:end="55:33"><expr pos:start="55:31" pos:end="55:33"><name pos:start="55:31" pos:end="55:33">fdt</name></expr></argument>, <argument pos:start="55:36" pos:end="55:45"><expr pos:start="55:36" pos:end="55:45"><literal type="string" pos:start="55:36" pos:end="55:45">"bootargs"</literal></expr></argument>, <argument pos:start="55:48" pos:end="55:61"><expr pos:start="55:48" pos:end="55:61"><name pos:start="55:48" pos:end="55:61">kernel_cmdline</name></expr></argument>)</argument_list></call><operator pos:start="55:63" pos:end="55:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="56:5" pos:end="57:58"><expr pos:start="56:5" pos:end="57:57"><call pos:start="56:5" pos:end="57:57"><name pos:start="56:5" pos:end="56:8">_FDT</name><argument_list pos:start="56:9" pos:end="57:57">(<argument pos:start="56:10" pos:end="57:56"><expr pos:start="56:10" pos:end="57:56"><operator pos:start="56:10" pos:end="56:10">(</operator><call pos:start="56:11" pos:end="57:55"><name pos:start="56:11" pos:end="56:22">fdt_property</name><argument_list pos:start="56:23" pos:end="57:55">(<argument pos:start="56:24" pos:end="56:26"><expr pos:start="56:24" pos:end="56:26"><name pos:start="56:24" pos:end="56:26">fdt</name></expr></argument>, <argument pos:start="56:29" pos:end="56:48"><expr pos:start="56:29" pos:end="56:48"><literal type="string" pos:start="56:29" pos:end="56:48">"linux,initrd-start"</literal></expr></argument>,
                       <argument pos:start="57:24" pos:end="57:34"><expr pos:start="57:24" pos:end="57:34"><operator pos:start="57:24" pos:end="57:24">&amp;</operator><name pos:start="57:25" pos:end="57:34">start_prop</name></expr></argument>, <argument pos:start="57:37" pos:end="57:54"><expr pos:start="57:37" pos:end="57:54"><sizeof pos:start="57:37" pos:end="57:54">sizeof<argument_list pos:start="57:43" pos:end="57:54">(<argument pos:start="57:44" pos:end="57:53"><expr pos:start="57:44" pos:end="57:53"><name pos:start="57:44" pos:end="57:53">start_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="57:56" pos:end="57:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="58:5" pos:end="59:54"><expr pos:start="58:5" pos:end="59:53"><call pos:start="58:5" pos:end="59:53"><name pos:start="58:5" pos:end="58:8">_FDT</name><argument_list pos:start="58:9" pos:end="59:53">(<argument pos:start="58:10" pos:end="59:52"><expr pos:start="58:10" pos:end="59:52"><operator pos:start="58:10" pos:end="58:10">(</operator><call pos:start="58:11" pos:end="59:51"><name pos:start="58:11" pos:end="58:22">fdt_property</name><argument_list pos:start="58:23" pos:end="59:51">(<argument pos:start="58:24" pos:end="58:26"><expr pos:start="58:24" pos:end="58:26"><name pos:start="58:24" pos:end="58:26">fdt</name></expr></argument>, <argument pos:start="58:29" pos:end="58:46"><expr pos:start="58:29" pos:end="58:46"><literal type="string" pos:start="58:29" pos:end="58:46">"linux,initrd-end"</literal></expr></argument>,
                       <argument pos:start="59:24" pos:end="59:32"><expr pos:start="59:24" pos:end="59:32"><operator pos:start="59:24" pos:end="59:24">&amp;</operator><name pos:start="59:25" pos:end="59:32">end_prop</name></expr></argument>, <argument pos:start="59:35" pos:end="59:50"><expr pos:start="59:35" pos:end="59:50"><sizeof pos:start="59:35" pos:end="59:50">sizeof<argument_list pos:start="59:41" pos:end="59:50">(<argument pos:start="59:42" pos:end="59:49"><expr pos:start="59:42" pos:end="59:49"><name pos:start="59:42" pos:end="59:49">end_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="59:52" pos:end="59:52">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="60:5" pos:end="207:15"><if pos:start="60:5" pos:end="207:15">if <condition pos:start="60:8" pos:end="60:20">(<expr pos:start="60:9" pos:end="60:19"><name pos:start="60:9" pos:end="60:19">kernel_size</name></expr>)</condition> <block pos:start="60:22" pos:end="207:15">{<block_content pos:start="61:9" pos:end="207:15">
        <decl_stmt pos:start="61:9" pos:end="62:57"><decl pos:start="61:9" pos:end="62:56"><type pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:16">uint64_t</name></type> <name pos:start="61:18" pos:end="61:25"><name pos:start="61:18" pos:end="61:22">kprop</name><index pos:start="61:23" pos:end="61:25">[<expr pos:start="61:24" pos:end="61:24"><literal type="number" pos:start="61:24" pos:end="61:24">2</literal></expr>]</index></name> <init pos:start="61:27" pos:end="62:56">= <expr pos:start="61:29" pos:end="62:56"><block pos:start="61:29" pos:end="62:56">{ <expr pos:start="61:31" pos:end="61:59"><call pos:start="61:31" pos:end="61:59"><name pos:start="61:31" pos:end="61:41">cpu_to_be64</name><argument_list pos:start="61:42" pos:end="61:59">(<argument pos:start="61:43" pos:end="61:58"><expr pos:start="61:43" pos:end="61:58"><name pos:start="61:43" pos:end="61:58">KERNEL_LOAD_ADDR</name></expr></argument>)</argument_list></call></expr>,
                              <macro pos:start="62:31" pos:end="62:54"><name pos:start="62:31" pos:end="62:41">cpu_to_be64</name><argument_list pos:start="62:42" pos:end="62:54">(<argument pos:start="62:43" pos:end="62:53">kernel_size</argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="63:9" pos:end="63:77"><expr pos:start="63:9" pos:end="63:76"><call pos:start="63:9" pos:end="63:76"><name pos:start="63:9" pos:end="63:12">_FDT</name><argument_list pos:start="63:13" pos:end="63:76">(<argument pos:start="63:14" pos:end="63:75"><expr pos:start="63:14" pos:end="63:75"><operator pos:start="63:14" pos:end="63:14">(</operator><call pos:start="63:15" pos:end="63:74"><name pos:start="63:15" pos:end="63:26">fdt_property</name><argument_list pos:start="63:27" pos:end="63:74">(<argument pos:start="63:28" pos:end="63:30"><expr pos:start="63:28" pos:end="63:30"><name pos:start="63:28" pos:end="63:30">fdt</name></expr></argument>, <argument pos:start="63:33" pos:end="63:50"><expr pos:start="63:33" pos:end="63:50"><literal type="string" pos:start="63:33" pos:end="63:50">"qemu,boot-kernel"</literal></expr></argument>, <argument pos:start="63:53" pos:end="63:58"><expr pos:start="63:53" pos:end="63:58"><operator pos:start="63:53" pos:end="63:53">&amp;</operator><name pos:start="63:54" pos:end="63:58">kprop</name></expr></argument>, <argument pos:start="63:61" pos:end="63:73"><expr pos:start="63:61" pos:end="63:73"><sizeof pos:start="63:61" pos:end="63:73">sizeof<argument_list pos:start="63:67" pos:end="63:73">(<argument pos:start="63:68" pos:end="63:72"><expr pos:start="63:68" pos:end="63:72"><name pos:start="63:68" pos:end="63:72">kprop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="63:75" pos:end="63:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="64:5" pos:end="64:70"><expr pos:start="64:5" pos:end="64:69"><call pos:start="64:5" pos:end="64:69"><name pos:start="64:5" pos:end="64:8">_FDT</name><argument_list pos:start="64:9" pos:end="64:69">(<argument pos:start="64:10" pos:end="64:68"><expr pos:start="64:10" pos:end="64:68"><operator pos:start="64:10" pos:end="64:10">(</operator><call pos:start="64:11" pos:end="64:67"><name pos:start="64:11" pos:end="64:29">fdt_property_string</name><argument_list pos:start="64:30" pos:end="64:67">(<argument pos:start="64:31" pos:end="64:33"><expr pos:start="64:31" pos:end="64:33"><name pos:start="64:31" pos:end="64:33">fdt</name></expr></argument>, <argument pos:start="64:36" pos:end="64:53"><expr pos:start="64:36" pos:end="64:53"><literal type="string" pos:start="64:36" pos:end="64:53">"qemu,boot-device"</literal></expr></argument>, <argument pos:start="64:56" pos:end="64:66"><expr pos:start="64:56" pos:end="64:66"><name pos:start="64:56" pos:end="64:66">boot_device</name></expr></argument>)</argument_list></call><operator pos:start="64:68" pos:end="64:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="65:5" pos:end="65:30"><expr pos:start="65:5" pos:end="65:29"><call pos:start="65:5" pos:end="65:29"><name pos:start="65:5" pos:end="65:8">_FDT</name><argument_list pos:start="65:9" pos:end="65:29">(<argument pos:start="65:10" pos:end="65:28"><expr pos:start="65:10" pos:end="65:28"><operator pos:start="65:10" pos:end="65:10">(</operator><call pos:start="65:11" pos:end="65:27"><name pos:start="65:11" pos:end="65:22">fdt_end_node</name><argument_list pos:start="65:23" pos:end="65:27">(<argument pos:start="65:24" pos:end="65:26"><expr pos:start="65:24" pos:end="65:26"><name pos:start="65:24" pos:end="65:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="65:28" pos:end="65:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="66:5" pos:end="66:24">/* memory node(s) */</comment>
    <expr_stmt pos:start="67:5" pos:end="67:62"><expr pos:start="67:5" pos:end="67:61"><name pos:start="67:5" pos:end="67:14">node0_size</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <ternary pos:start="67:18" pos:end="67:61"><condition pos:start="67:18" pos:end="67:38"><expr pos:start="67:18" pos:end="67:36"><operator pos:start="67:18" pos:end="67:18">(</operator><name pos:start="67:19" pos:end="67:31">nb_numa_nodes</name> <operator pos:start="67:33" pos:end="67:33">&gt;</operator> <literal type="number" pos:start="67:35" pos:end="67:35">1</literal><operator pos:start="67:36" pos:end="67:36">)</operator></expr> ?</condition><then pos:start="67:40" pos:end="67:50"> <expr pos:start="67:40" pos:end="67:50"><name pos:start="67:40" pos:end="67:50"><name pos:start="67:40" pos:end="67:47">node_mem</name><index pos:start="67:48" pos:end="67:50">[<expr pos:start="67:49" pos:end="67:49"><literal type="number" pos:start="67:49" pos:end="67:49">0</literal></expr>]</index></name></expr> </then><else pos:start="67:52" pos:end="67:61">: <expr pos:start="67:54" pos:end="67:61"><name pos:start="67:54" pos:end="67:61">ram_size</name></expr></else></ternary></expr>;</expr_stmt>
    <if_stmt pos:start="68:5" pos:end="207:15"><if pos:start="68:5" pos:end="207:15">if <condition pos:start="68:8" pos:end="68:30">(<expr pos:start="68:9" pos:end="68:29"><name pos:start="68:9" pos:end="68:16">rma_size</name> <operator pos:start="68:18" pos:end="68:18">&gt;</operator> <name pos:start="68:20" pos:end="68:29">node0_size</name></expr>)</condition> <block pos:start="68:32" pos:end="207:15">{<block_content pos:start="69:9" pos:end="207:15">
        <expr_stmt pos:start="69:9" pos:end="69:30"><expr pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:16">rma_size</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:29">node0_size</name></expr>;</expr_stmt>
    <comment type="block" pos:start="70:5" pos:end="70:13">/* RMA */</comment>
    <expr_stmt pos:start="71:5" pos:end="71:28"><expr pos:start="71:5" pos:end="71:27"><name pos:start="71:5" pos:end="71:23"><name pos:start="71:5" pos:end="71:20">mem_reg_property</name><index pos:start="71:21" pos:end="71:23">[<expr pos:start="71:22" pos:end="71:22"><literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr>]</index></name> <operator pos:start="71:25" pos:end="71:25">=</operator> <literal type="number" pos:start="71:27" pos:end="71:27">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="72:5" pos:end="72:48"><expr pos:start="72:5" pos:end="72:47"><name pos:start="72:5" pos:end="72:23"><name pos:start="72:5" pos:end="72:20">mem_reg_property</name><index pos:start="72:21" pos:end="72:23">[<expr pos:start="72:22" pos:end="72:22"><literal type="number" pos:start="72:22" pos:end="72:22">1</literal></expr>]</index></name> <operator pos:start="72:25" pos:end="72:25">=</operator> <call pos:start="72:27" pos:end="72:47"><name pos:start="72:27" pos:end="72:37">cpu_to_be64</name><argument_list pos:start="72:38" pos:end="72:47">(<argument pos:start="72:39" pos:end="72:46"><expr pos:start="72:39" pos:end="72:46"><name pos:start="72:39" pos:end="72:46">rma_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="73:5" pos:end="73:44"><expr pos:start="73:5" pos:end="73:43"><call pos:start="73:5" pos:end="73:43"><name pos:start="73:5" pos:end="73:8">_FDT</name><argument_list pos:start="73:9" pos:end="73:43">(<argument pos:start="73:10" pos:end="73:42"><expr pos:start="73:10" pos:end="73:42"><operator pos:start="73:10" pos:end="73:10">(</operator><call pos:start="73:11" pos:end="73:41"><name pos:start="73:11" pos:end="73:24">fdt_begin_node</name><argument_list pos:start="73:25" pos:end="73:41">(<argument pos:start="73:26" pos:end="73:28"><expr pos:start="73:26" pos:end="73:28"><name pos:start="73:26" pos:end="73:28">fdt</name></expr></argument>, <argument pos:start="73:31" pos:end="73:40"><expr pos:start="73:31" pos:end="73:40"><literal type="string" pos:start="73:31" pos:end="73:40">"memory@0"</literal></expr></argument>)</argument_list></call><operator pos:start="73:42" pos:end="73:42">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="74:5" pos:end="74:62"><expr pos:start="74:5" pos:end="74:61"><call pos:start="74:5" pos:end="74:61"><name pos:start="74:5" pos:end="74:8">_FDT</name><argument_list pos:start="74:9" pos:end="74:61">(<argument pos:start="74:10" pos:end="74:60"><expr pos:start="74:10" pos:end="74:60"><operator pos:start="74:10" pos:end="74:10">(</operator><call pos:start="74:11" pos:end="74:59"><name pos:start="74:11" pos:end="74:29">fdt_property_string</name><argument_list pos:start="74:30" pos:end="74:59">(<argument pos:start="74:31" pos:end="74:33"><expr pos:start="74:31" pos:end="74:33"><name pos:start="74:31" pos:end="74:33">fdt</name></expr></argument>, <argument pos:start="74:36" pos:end="74:48"><expr pos:start="74:36" pos:end="74:48"><literal type="string" pos:start="74:36" pos:end="74:48">"device_type"</literal></expr></argument>, <argument pos:start="74:51" pos:end="74:58"><expr pos:start="74:51" pos:end="74:58"><literal type="string" pos:start="74:51" pos:end="74:58">"memory"</literal></expr></argument>)</argument_list></call><operator pos:start="74:60" pos:end="74:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="75:5" pos:end="76:36"><expr pos:start="75:5" pos:end="76:35"><call pos:start="75:5" pos:end="76:35"><name pos:start="75:5" pos:end="75:8">_FDT</name><argument_list pos:start="75:9" pos:end="76:35">(<argument pos:start="75:10" pos:end="76:34"><expr pos:start="75:10" pos:end="76:34"><operator pos:start="75:10" pos:end="75:10">(</operator><call pos:start="75:11" pos:end="76:33"><name pos:start="75:11" pos:end="75:22">fdt_property</name><argument_list pos:start="75:23" pos:end="76:33">(<argument pos:start="75:24" pos:end="75:26"><expr pos:start="75:24" pos:end="75:26"><name pos:start="75:24" pos:end="75:26">fdt</name></expr></argument>, <argument pos:start="75:29" pos:end="75:33"><expr pos:start="75:29" pos:end="75:33"><literal type="string" pos:start="75:29" pos:end="75:33">"reg"</literal></expr></argument>, <argument pos:start="75:36" pos:end="75:51"><expr pos:start="75:36" pos:end="75:51"><name pos:start="75:36" pos:end="75:51">mem_reg_property</name></expr></argument>,
        <argument pos:start="76:9" pos:end="76:32"><expr pos:start="76:9" pos:end="76:32"><sizeof pos:start="76:9" pos:end="76:32">sizeof<argument_list pos:start="76:15" pos:end="76:32">(<argument pos:start="76:16" pos:end="76:31"><expr pos:start="76:16" pos:end="76:31"><name pos:start="76:16" pos:end="76:31">mem_reg_property</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="76:34" pos:end="76:34">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="77:5" pos:end="78:33"><expr pos:start="77:5" pos:end="78:32"><call pos:start="77:5" pos:end="78:32"><name pos:start="77:5" pos:end="77:8">_FDT</name><argument_list pos:start="77:9" pos:end="78:32">(<argument pos:start="77:10" pos:end="78:31"><expr pos:start="77:10" pos:end="78:31"><operator pos:start="77:10" pos:end="77:10">(</operator><call pos:start="77:11" pos:end="78:30"><name pos:start="77:11" pos:end="77:22">fdt_property</name><argument_list pos:start="77:23" pos:end="78:30">(<argument pos:start="77:24" pos:end="77:26"><expr pos:start="77:24" pos:end="77:26"><name pos:start="77:24" pos:end="77:26">fdt</name></expr></argument>, <argument pos:start="77:29" pos:end="77:47"><expr pos:start="77:29" pos:end="77:47"><literal type="string" pos:start="77:29" pos:end="77:47">"ibm,associativity"</literal></expr></argument>, <argument pos:start="77:50" pos:end="77:62"><expr pos:start="77:50" pos:end="77:62"><name pos:start="77:50" pos:end="77:62">associativity</name></expr></argument>,
        <argument pos:start="78:9" pos:end="78:29"><expr pos:start="78:9" pos:end="78:29"><sizeof pos:start="78:9" pos:end="78:29">sizeof<argument_list pos:start="78:15" pos:end="78:29">(<argument pos:start="78:16" pos:end="78:28"><expr pos:start="78:16" pos:end="78:28"><name pos:start="78:16" pos:end="78:28">associativity</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="78:31" pos:end="78:31">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="79:5" pos:end="79:30"><expr pos:start="79:5" pos:end="79:29"><call pos:start="79:5" pos:end="79:29"><name pos:start="79:5" pos:end="79:8">_FDT</name><argument_list pos:start="79:9" pos:end="79:29">(<argument pos:start="79:10" pos:end="79:28"><expr pos:start="79:10" pos:end="79:28"><operator pos:start="79:10" pos:end="79:10">(</operator><call pos:start="79:11" pos:end="79:27"><name pos:start="79:11" pos:end="79:22">fdt_end_node</name><argument_list pos:start="79:23" pos:end="79:27">(<argument pos:start="79:24" pos:end="79:26"><expr pos:start="79:24" pos:end="79:26"><name pos:start="79:24" pos:end="79:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="79:28" pos:end="79:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="80:5" pos:end="80:21">/* RAM: Node 0 */</comment>
    <if_stmt pos:start="81:5" pos:end="207:15"><if pos:start="81:5" pos:end="207:15">if <condition pos:start="81:8" pos:end="81:30">(<expr pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:18">node0_size</name> <operator pos:start="81:20" pos:end="81:20">&gt;</operator> <name pos:start="81:22" pos:end="81:29">rma_size</name></expr>)</condition> <block pos:start="81:32" pos:end="207:15">{<block_content pos:start="82:9" pos:end="207:15">
        <expr_stmt pos:start="82:9" pos:end="82:52"><expr pos:start="82:9" pos:end="82:51"><name pos:start="82:9" pos:end="82:27"><name pos:start="82:9" pos:end="82:24">mem_reg_property</name><index pos:start="82:25" pos:end="82:27">[<expr pos:start="82:26" pos:end="82:26"><literal type="number" pos:start="82:26" pos:end="82:26">0</literal></expr>]</index></name> <operator pos:start="82:29" pos:end="82:29">=</operator> <call pos:start="82:31" pos:end="82:51"><name pos:start="82:31" pos:end="82:41">cpu_to_be64</name><argument_list pos:start="82:42" pos:end="82:51">(<argument pos:start="82:43" pos:end="82:50"><expr pos:start="82:43" pos:end="82:50"><name pos:start="82:43" pos:end="82:50">rma_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="83:9" pos:end="83:65"><expr pos:start="83:9" pos:end="83:64"><name pos:start="83:9" pos:end="83:27"><name pos:start="83:9" pos:end="83:24">mem_reg_property</name><index pos:start="83:25" pos:end="83:27">[<expr pos:start="83:26" pos:end="83:26"><literal type="number" pos:start="83:26" pos:end="83:26">1</literal></expr>]</index></name> <operator pos:start="83:29" pos:end="83:29">=</operator> <call pos:start="83:31" pos:end="83:64"><name pos:start="83:31" pos:end="83:41">cpu_to_be64</name><argument_list pos:start="83:42" pos:end="83:64">(<argument pos:start="83:43" pos:end="83:63"><expr pos:start="83:43" pos:end="83:63"><name pos:start="83:43" pos:end="83:52">node0_size</name> <operator pos:start="83:54" pos:end="83:54">-</operator> <name pos:start="83:56" pos:end="83:63">rma_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="84:9" pos:end="84:61"><expr pos:start="84:9" pos:end="84:60"><call pos:start="84:9" pos:end="84:60"><name pos:start="84:9" pos:end="84:15">sprintf</name><argument_list pos:start="84:16" pos:end="84:60">(<argument pos:start="84:17" pos:end="84:24"><expr pos:start="84:17" pos:end="84:24"><name pos:start="84:17" pos:end="84:24">mem_name</name></expr></argument>, <argument pos:start="84:27" pos:end="84:49"><expr pos:start="84:27" pos:end="84:49"><literal type="string" pos:start="84:27" pos:end="84:35">"memory@"</literal> <name pos:start="84:37" pos:end="84:49">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="84:52" pos:end="84:59"><expr pos:start="84:52" pos:end="84:59"><name pos:start="84:52" pos:end="84:59">rma_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="85:9" pos:end="85:46"><expr pos:start="85:9" pos:end="85:45"><call pos:start="85:9" pos:end="85:45"><name pos:start="85:9" pos:end="85:12">_FDT</name><argument_list pos:start="85:13" pos:end="85:45">(<argument pos:start="85:14" pos:end="85:44"><expr pos:start="85:14" pos:end="85:44"><operator pos:start="85:14" pos:end="85:14">(</operator><call pos:start="85:15" pos:end="85:43"><name pos:start="85:15" pos:end="85:28">fdt_begin_node</name><argument_list pos:start="85:29" pos:end="85:43">(<argument pos:start="85:30" pos:end="85:32"><expr pos:start="85:30" pos:end="85:32"><name pos:start="85:30" pos:end="85:32">fdt</name></expr></argument>, <argument pos:start="85:35" pos:end="85:42"><expr pos:start="85:35" pos:end="85:42"><name pos:start="85:35" pos:end="85:42">mem_name</name></expr></argument>)</argument_list></call><operator pos:start="85:44" pos:end="85:44">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="86:9" pos:end="86:66"><expr pos:start="86:9" pos:end="86:65"><call pos:start="86:9" pos:end="86:65"><name pos:start="86:9" pos:end="86:12">_FDT</name><argument_list pos:start="86:13" pos:end="86:65">(<argument pos:start="86:14" pos:end="86:64"><expr pos:start="86:14" pos:end="86:64"><operator pos:start="86:14" pos:end="86:14">(</operator><call pos:start="86:15" pos:end="86:63"><name pos:start="86:15" pos:end="86:33">fdt_property_string</name><argument_list pos:start="86:34" pos:end="86:63">(<argument pos:start="86:35" pos:end="86:37"><expr pos:start="86:35" pos:end="86:37"><name pos:start="86:35" pos:end="86:37">fdt</name></expr></argument>, <argument pos:start="86:40" pos:end="86:52"><expr pos:start="86:40" pos:end="86:52"><literal type="string" pos:start="86:40" pos:end="86:52">"device_type"</literal></expr></argument>, <argument pos:start="86:55" pos:end="86:62"><expr pos:start="86:55" pos:end="86:62"><literal type="string" pos:start="86:55" pos:end="86:62">"memory"</literal></expr></argument>)</argument_list></call><operator pos:start="86:64" pos:end="86:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="87:9" pos:end="88:55"><expr pos:start="87:9" pos:end="88:54"><call pos:start="87:9" pos:end="88:54"><name pos:start="87:9" pos:end="87:12">_FDT</name><argument_list pos:start="87:13" pos:end="88:54">(<argument pos:start="87:14" pos:end="88:53"><expr pos:start="87:14" pos:end="88:53"><operator pos:start="87:14" pos:end="87:14">(</operator><call pos:start="87:15" pos:end="88:52"><name pos:start="87:15" pos:end="87:26">fdt_property</name><argument_list pos:start="87:27" pos:end="88:52">(<argument pos:start="87:28" pos:end="87:30"><expr pos:start="87:28" pos:end="87:30"><name pos:start="87:28" pos:end="87:30">fdt</name></expr></argument>, <argument pos:start="87:33" pos:end="87:37"><expr pos:start="87:33" pos:end="87:37"><literal type="string" pos:start="87:33" pos:end="87:37">"reg"</literal></expr></argument>, <argument pos:start="87:40" pos:end="87:55"><expr pos:start="87:40" pos:end="87:55"><name pos:start="87:40" pos:end="87:55">mem_reg_property</name></expr></argument>,
                           <argument pos:start="88:28" pos:end="88:51"><expr pos:start="88:28" pos:end="88:51"><sizeof pos:start="88:28" pos:end="88:51">sizeof<argument_list pos:start="88:34" pos:end="88:51">(<argument pos:start="88:35" pos:end="88:50"><expr pos:start="88:35" pos:end="88:50"><name pos:start="88:35" pos:end="88:50">mem_reg_property</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="88:53" pos:end="88:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="89:9" pos:end="90:52"><expr pos:start="89:9" pos:end="90:51"><call pos:start="89:9" pos:end="90:51"><name pos:start="89:9" pos:end="89:12">_FDT</name><argument_list pos:start="89:13" pos:end="90:51">(<argument pos:start="89:14" pos:end="90:50"><expr pos:start="89:14" pos:end="90:50"><operator pos:start="89:14" pos:end="89:14">(</operator><call pos:start="89:15" pos:end="90:49"><name pos:start="89:15" pos:end="89:26">fdt_property</name><argument_list pos:start="89:27" pos:end="90:49">(<argument pos:start="89:28" pos:end="89:30"><expr pos:start="89:28" pos:end="89:30"><name pos:start="89:28" pos:end="89:30">fdt</name></expr></argument>, <argument pos:start="89:33" pos:end="89:51"><expr pos:start="89:33" pos:end="89:51"><literal type="string" pos:start="89:33" pos:end="89:51">"ibm,associativity"</literal></expr></argument>, <argument pos:start="89:54" pos:end="89:66"><expr pos:start="89:54" pos:end="89:66"><name pos:start="89:54" pos:end="89:66">associativity</name></expr></argument>,
                           <argument pos:start="90:28" pos:end="90:48"><expr pos:start="90:28" pos:end="90:48"><sizeof pos:start="90:28" pos:end="90:48">sizeof<argument_list pos:start="90:34" pos:end="90:48">(<argument pos:start="90:35" pos:end="90:47"><expr pos:start="90:35" pos:end="90:47"><name pos:start="90:35" pos:end="90:47">associativity</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="90:50" pos:end="90:50">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="91:9" pos:end="91:34"><expr pos:start="91:9" pos:end="91:33"><call pos:start="91:9" pos:end="91:33"><name pos:start="91:9" pos:end="91:12">_FDT</name><argument_list pos:start="91:13" pos:end="91:33">(<argument pos:start="91:14" pos:end="91:32"><expr pos:start="91:14" pos:end="91:32"><operator pos:start="91:14" pos:end="91:14">(</operator><call pos:start="91:15" pos:end="91:31"><name pos:start="91:15" pos:end="91:26">fdt_end_node</name><argument_list pos:start="91:27" pos:end="91:31">(<argument pos:start="91:28" pos:end="91:30"><expr pos:start="91:28" pos:end="91:30"><name pos:start="91:28" pos:end="91:30">fdt</name></expr></argument>)</argument_list></call><operator pos:start="91:32" pos:end="91:32">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="92:5" pos:end="92:32">/* RAM: Node 1 and beyond */</comment>
    <expr_stmt pos:start="93:5" pos:end="93:27"><expr pos:start="93:5" pos:end="93:26"><name pos:start="93:5" pos:end="93:13">mem_start</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <name pos:start="93:17" pos:end="93:26">node0_size</name></expr>;</expr_stmt>
    <for pos:start="94:5" pos:end="207:15">for <control pos:start="94:9" pos:end="94:39">(<init pos:start="94:10" pos:end="94:15"><expr pos:start="94:10" pos:end="94:14"><name pos:start="94:10" pos:end="94:10">i</name> <operator pos:start="94:12" pos:end="94:12">=</operator> <literal type="number" pos:start="94:14" pos:end="94:14">1</literal></expr>;</init> <condition pos:start="94:17" pos:end="94:34"><expr pos:start="94:17" pos:end="94:33"><name pos:start="94:17" pos:end="94:17">i</name> <operator pos:start="94:19" pos:end="94:19">&lt;</operator> <name pos:start="94:21" pos:end="94:33">nb_numa_nodes</name></expr>;</condition> <incr pos:start="94:36" pos:end="94:38"><expr pos:start="94:36" pos:end="94:38"><name pos:start="94:36" pos:end="94:36">i</name><operator pos:start="94:37" pos:end="94:38">++</operator></expr></incr>)</control> <block pos:start="94:41" pos:end="207:15">{<block_content pos:start="95:9" pos:end="207:15">
        <expr_stmt pos:start="95:9" pos:end="95:53"><expr pos:start="95:9" pos:end="95:52"><name pos:start="95:9" pos:end="95:27"><name pos:start="95:9" pos:end="95:24">mem_reg_property</name><index pos:start="95:25" pos:end="95:27">[<expr pos:start="95:26" pos:end="95:26"><literal type="number" pos:start="95:26" pos:end="95:26">0</literal></expr>]</index></name> <operator pos:start="95:29" pos:end="95:29">=</operator> <call pos:start="95:31" pos:end="95:52"><name pos:start="95:31" pos:end="95:41">cpu_to_be64</name><argument_list pos:start="95:42" pos:end="95:52">(<argument pos:start="95:43" pos:end="95:51"><expr pos:start="95:43" pos:end="95:51"><name pos:start="95:43" pos:end="95:51">mem_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="96:9" pos:end="96:55"><expr pos:start="96:9" pos:end="96:54"><name pos:start="96:9" pos:end="96:27"><name pos:start="96:9" pos:end="96:24">mem_reg_property</name><index pos:start="96:25" pos:end="96:27">[<expr pos:start="96:26" pos:end="96:26"><literal type="number" pos:start="96:26" pos:end="96:26">1</literal></expr>]</index></name> <operator pos:start="96:29" pos:end="96:29">=</operator> <call pos:start="96:31" pos:end="96:54"><name pos:start="96:31" pos:end="96:41">cpu_to_be64</name><argument_list pos:start="96:42" pos:end="96:54">(<argument pos:start="96:43" pos:end="96:53"><expr pos:start="96:43" pos:end="96:53"><name pos:start="96:43" pos:end="96:53"><name pos:start="96:43" pos:end="96:50">node_mem</name><index pos:start="96:51" pos:end="96:53">[<expr pos:start="96:52" pos:end="96:52"><name pos:start="96:52" pos:end="96:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="97:9" pos:end="97:61"><expr pos:start="97:9" pos:end="97:60"><name pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:21">associativity</name><index pos:start="97:22" pos:end="97:24">[<expr pos:start="97:23" pos:end="97:23"><literal type="number" pos:start="97:23" pos:end="97:23">3</literal></expr>]</index></name> <operator pos:start="97:26" pos:end="97:26">=</operator> <name pos:start="97:28" pos:end="97:43"><name pos:start="97:28" pos:end="97:40">associativity</name><index pos:start="97:41" pos:end="97:43">[<expr pos:start="97:42" pos:end="97:42"><literal type="number" pos:start="97:42" pos:end="97:42">4</literal></expr>]</index></name> <operator pos:start="97:45" pos:end="97:45">=</operator> <call pos:start="97:47" pos:end="97:60"><name pos:start="97:47" pos:end="97:57">cpu_to_be32</name><argument_list pos:start="97:58" pos:end="97:60">(<argument pos:start="97:59" pos:end="97:59"><expr pos:start="97:59" pos:end="97:59"><name pos:start="97:59" pos:end="97:59">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="98:9" pos:end="98:62"><expr pos:start="98:9" pos:end="98:61"><call pos:start="98:9" pos:end="98:61"><name pos:start="98:9" pos:end="98:15">sprintf</name><argument_list pos:start="98:16" pos:end="98:61">(<argument pos:start="98:17" pos:end="98:24"><expr pos:start="98:17" pos:end="98:24"><name pos:start="98:17" pos:end="98:24">mem_name</name></expr></argument>, <argument pos:start="98:27" pos:end="98:49"><expr pos:start="98:27" pos:end="98:49"><literal type="string" pos:start="98:27" pos:end="98:35">"memory@"</literal> <name pos:start="98:37" pos:end="98:49">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="98:52" pos:end="98:60"><expr pos:start="98:52" pos:end="98:60"><name pos:start="98:52" pos:end="98:60">mem_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="99:9" pos:end="99:46"><expr pos:start="99:9" pos:end="99:45"><call pos:start="99:9" pos:end="99:45"><name pos:start="99:9" pos:end="99:12">_FDT</name><argument_list pos:start="99:13" pos:end="99:45">(<argument pos:start="99:14" pos:end="99:44"><expr pos:start="99:14" pos:end="99:44"><operator pos:start="99:14" pos:end="99:14">(</operator><call pos:start="99:15" pos:end="99:43"><name pos:start="99:15" pos:end="99:28">fdt_begin_node</name><argument_list pos:start="99:29" pos:end="99:43">(<argument pos:start="99:30" pos:end="99:32"><expr pos:start="99:30" pos:end="99:32"><name pos:start="99:30" pos:end="99:32">fdt</name></expr></argument>, <argument pos:start="99:35" pos:end="99:42"><expr pos:start="99:35" pos:end="99:42"><name pos:start="99:35" pos:end="99:42">mem_name</name></expr></argument>)</argument_list></call><operator pos:start="99:44" pos:end="99:44">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="100:9" pos:end="100:66"><expr pos:start="100:9" pos:end="100:65"><call pos:start="100:9" pos:end="100:65"><name pos:start="100:9" pos:end="100:12">_FDT</name><argument_list pos:start="100:13" pos:end="100:65">(<argument pos:start="100:14" pos:end="100:64"><expr pos:start="100:14" pos:end="100:64"><operator pos:start="100:14" pos:end="100:14">(</operator><call pos:start="100:15" pos:end="100:63"><name pos:start="100:15" pos:end="100:33">fdt_property_string</name><argument_list pos:start="100:34" pos:end="100:63">(<argument pos:start="100:35" pos:end="100:37"><expr pos:start="100:35" pos:end="100:37"><name pos:start="100:35" pos:end="100:37">fdt</name></expr></argument>, <argument pos:start="100:40" pos:end="100:52"><expr pos:start="100:40" pos:end="100:52"><literal type="string" pos:start="100:40" pos:end="100:52">"device_type"</literal></expr></argument>, <argument pos:start="100:55" pos:end="100:62"><expr pos:start="100:55" pos:end="100:62"><literal type="string" pos:start="100:55" pos:end="100:62">"memory"</literal></expr></argument>)</argument_list></call><operator pos:start="100:64" pos:end="100:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="101:9" pos:end="102:40"><expr pos:start="101:9" pos:end="102:39"><call pos:start="101:9" pos:end="102:39"><name pos:start="101:9" pos:end="101:12">_FDT</name><argument_list pos:start="101:13" pos:end="102:39">(<argument pos:start="101:14" pos:end="102:38"><expr pos:start="101:14" pos:end="102:38"><operator pos:start="101:14" pos:end="101:14">(</operator><call pos:start="101:15" pos:end="102:37"><name pos:start="101:15" pos:end="101:26">fdt_property</name><argument_list pos:start="101:27" pos:end="102:37">(<argument pos:start="101:28" pos:end="101:30"><expr pos:start="101:28" pos:end="101:30"><name pos:start="101:28" pos:end="101:30">fdt</name></expr></argument>, <argument pos:start="101:33" pos:end="101:37"><expr pos:start="101:33" pos:end="101:37"><literal type="string" pos:start="101:33" pos:end="101:37">"reg"</literal></expr></argument>, <argument pos:start="101:40" pos:end="101:55"><expr pos:start="101:40" pos:end="101:55"><name pos:start="101:40" pos:end="101:55">mem_reg_property</name></expr></argument>,
            <argument pos:start="102:13" pos:end="102:36"><expr pos:start="102:13" pos:end="102:36"><sizeof pos:start="102:13" pos:end="102:36">sizeof<argument_list pos:start="102:19" pos:end="102:36">(<argument pos:start="102:20" pos:end="102:35"><expr pos:start="102:20" pos:end="102:35"><name pos:start="102:20" pos:end="102:35">mem_reg_property</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="102:38" pos:end="102:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="103:9" pos:end="104:37"><expr pos:start="103:9" pos:end="104:36"><call pos:start="103:9" pos:end="104:36"><name pos:start="103:9" pos:end="103:12">_FDT</name><argument_list pos:start="103:13" pos:end="104:36">(<argument pos:start="103:14" pos:end="104:35"><expr pos:start="103:14" pos:end="104:35"><operator pos:start="103:14" pos:end="103:14">(</operator><call pos:start="103:15" pos:end="104:34"><name pos:start="103:15" pos:end="103:26">fdt_property</name><argument_list pos:start="103:27" pos:end="104:34">(<argument pos:start="103:28" pos:end="103:30"><expr pos:start="103:28" pos:end="103:30"><name pos:start="103:28" pos:end="103:30">fdt</name></expr></argument>, <argument pos:start="103:33" pos:end="103:51"><expr pos:start="103:33" pos:end="103:51"><literal type="string" pos:start="103:33" pos:end="103:51">"ibm,associativity"</literal></expr></argument>, <argument pos:start="103:54" pos:end="103:66"><expr pos:start="103:54" pos:end="103:66"><name pos:start="103:54" pos:end="103:66">associativity</name></expr></argument>,
            <argument pos:start="104:13" pos:end="104:33"><expr pos:start="104:13" pos:end="104:33"><sizeof pos:start="104:13" pos:end="104:33">sizeof<argument_list pos:start="104:19" pos:end="104:33">(<argument pos:start="104:20" pos:end="104:32"><expr pos:start="104:20" pos:end="104:32"><name pos:start="104:20" pos:end="104:32">associativity</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="104:35" pos:end="104:35">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="105:9" pos:end="105:34"><expr pos:start="105:9" pos:end="105:33"><call pos:start="105:9" pos:end="105:33"><name pos:start="105:9" pos:end="105:12">_FDT</name><argument_list pos:start="105:13" pos:end="105:33">(<argument pos:start="105:14" pos:end="105:32"><expr pos:start="105:14" pos:end="105:32"><operator pos:start="105:14" pos:end="105:14">(</operator><call pos:start="105:15" pos:end="105:31"><name pos:start="105:15" pos:end="105:26">fdt_end_node</name><argument_list pos:start="105:27" pos:end="105:31">(<argument pos:start="105:28" pos:end="105:30"><expr pos:start="105:28" pos:end="105:30"><name pos:start="105:28" pos:end="105:30">fdt</name></expr></argument>)</argument_list></call><operator pos:start="105:32" pos:end="105:32">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="106:9" pos:end="106:33"><expr pos:start="106:9" pos:end="106:32"><name pos:start="106:9" pos:end="106:17">mem_start</name> <operator pos:start="106:19" pos:end="106:20">+=</operator> <name pos:start="106:22" pos:end="106:32"><name pos:start="106:22" pos:end="106:29">node_mem</name><index pos:start="106:30" pos:end="106:32">[<expr pos:start="106:31" pos:end="106:31"><name pos:start="106:31" pos:end="106:31">i</name></expr>]</index></name></expr>;</expr_stmt>
    <comment type="block" pos:start="107:5" pos:end="107:14">/* cpus */</comment>
    <expr_stmt pos:start="108:5" pos:end="108:40"><expr pos:start="108:5" pos:end="108:39"><call pos:start="108:5" pos:end="108:39"><name pos:start="108:5" pos:end="108:8">_FDT</name><argument_list pos:start="108:9" pos:end="108:39">(<argument pos:start="108:10" pos:end="108:38"><expr pos:start="108:10" pos:end="108:38"><operator pos:start="108:10" pos:end="108:10">(</operator><call pos:start="108:11" pos:end="108:37"><name pos:start="108:11" pos:end="108:24">fdt_begin_node</name><argument_list pos:start="108:25" pos:end="108:37">(<argument pos:start="108:26" pos:end="108:28"><expr pos:start="108:26" pos:end="108:28"><name pos:start="108:26" pos:end="108:28">fdt</name></expr></argument>, <argument pos:start="108:31" pos:end="108:36"><expr pos:start="108:31" pos:end="108:36"><literal type="string" pos:start="108:31" pos:end="108:36">"cpus"</literal></expr></argument>)</argument_list></call><operator pos:start="108:38" pos:end="108:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="109:5" pos:end="109:58"><expr pos:start="109:5" pos:end="109:57"><call pos:start="109:5" pos:end="109:57"><name pos:start="109:5" pos:end="109:8">_FDT</name><argument_list pos:start="109:9" pos:end="109:57">(<argument pos:start="109:10" pos:end="109:56"><expr pos:start="109:10" pos:end="109:56"><operator pos:start="109:10" pos:end="109:10">(</operator><call pos:start="109:11" pos:end="109:55"><name pos:start="109:11" pos:end="109:27">fdt_property_cell</name><argument_list pos:start="109:28" pos:end="109:55">(<argument pos:start="109:29" pos:end="109:31"><expr pos:start="109:29" pos:end="109:31"><name pos:start="109:29" pos:end="109:31">fdt</name></expr></argument>, <argument pos:start="109:34" pos:end="109:49"><expr pos:start="109:34" pos:end="109:49"><literal type="string" pos:start="109:34" pos:end="109:49">"#address-cells"</literal></expr></argument>, <argument pos:start="109:52" pos:end="109:54"><expr pos:start="109:52" pos:end="109:54"><literal type="number" pos:start="109:52" pos:end="109:54">0x1</literal></expr></argument>)</argument_list></call><operator pos:start="109:56" pos:end="109:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="110:5" pos:end="110:55"><expr pos:start="110:5" pos:end="110:54"><call pos:start="110:5" pos:end="110:54"><name pos:start="110:5" pos:end="110:8">_FDT</name><argument_list pos:start="110:9" pos:end="110:54">(<argument pos:start="110:10" pos:end="110:53"><expr pos:start="110:10" pos:end="110:53"><operator pos:start="110:10" pos:end="110:10">(</operator><call pos:start="110:11" pos:end="110:52"><name pos:start="110:11" pos:end="110:27">fdt_property_cell</name><argument_list pos:start="110:28" pos:end="110:52">(<argument pos:start="110:29" pos:end="110:31"><expr pos:start="110:29" pos:end="110:31"><name pos:start="110:29" pos:end="110:31">fdt</name></expr></argument>, <argument pos:start="110:34" pos:end="110:46"><expr pos:start="110:34" pos:end="110:46"><literal type="string" pos:start="110:34" pos:end="110:46">"#size-cells"</literal></expr></argument>, <argument pos:start="110:49" pos:end="110:51"><expr pos:start="110:49" pos:end="110:51"><literal type="number" pos:start="110:49" pos:end="110:51">0x0</literal></expr></argument>)</argument_list></call><operator pos:start="110:53" pos:end="110:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="111:5" pos:end="111:36"><expr pos:start="111:5" pos:end="111:35"><name pos:start="111:5" pos:end="111:13">modelname</name> <operator pos:start="111:15" pos:end="111:15">=</operator> <call pos:start="111:17" pos:end="111:35"><name pos:start="111:17" pos:end="111:24">g_strdup</name><argument_list pos:start="111:25" pos:end="111:35">(<argument pos:start="111:26" pos:end="111:34"><expr pos:start="111:26" pos:end="111:34"><name pos:start="111:26" pos:end="111:34">cpu_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="112:5" pos:end="207:15">for <control pos:start="112:9" pos:end="112:43">(<init pos:start="112:10" pos:end="112:15"><expr pos:start="112:10" pos:end="112:14"><name pos:start="112:10" pos:end="112:10">i</name> <operator pos:start="112:12" pos:end="112:12">=</operator> <literal type="number" pos:start="112:14" pos:end="112:14">0</literal></expr>;</init> <condition pos:start="112:17" pos:end="112:38"><expr pos:start="112:17" pos:end="112:37"><name pos:start="112:17" pos:end="112:17">i</name> <operator pos:start="112:19" pos:end="112:19">&lt;</operator> <call pos:start="112:21" pos:end="112:37"><name pos:start="112:21" pos:end="112:26">strlen</name><argument_list pos:start="112:27" pos:end="112:37">(<argument pos:start="112:28" pos:end="112:36"><expr pos:start="112:28" pos:end="112:36"><name pos:start="112:28" pos:end="112:36">modelname</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="112:40" pos:end="112:42"><expr pos:start="112:40" pos:end="112:42"><name pos:start="112:40" pos:end="112:40">i</name><operator pos:start="112:41" pos:end="112:42">++</operator></expr></incr>)</control> <block pos:start="112:45" pos:end="207:15">{<block_content pos:start="113:9" pos:end="207:15">
        <expr_stmt pos:start="113:9" pos:end="113:45"><expr pos:start="113:9" pos:end="113:44"><name pos:start="113:9" pos:end="113:20"><name pos:start="113:9" pos:end="113:17">modelname</name><index pos:start="113:18" pos:end="113:20">[<expr pos:start="113:19" pos:end="113:19"><name pos:start="113:19" pos:end="113:19">i</name></expr>]</index></name> <operator pos:start="113:22" pos:end="113:22">=</operator> <call pos:start="113:24" pos:end="113:44"><name pos:start="113:24" pos:end="113:30">toupper</name><argument_list pos:start="113:31" pos:end="113:44">(<argument pos:start="113:32" pos:end="113:43"><expr pos:start="113:32" pos:end="113:43"><name pos:start="113:32" pos:end="113:43"><name pos:start="113:32" pos:end="113:40">modelname</name><index pos:start="113:41" pos:end="113:43">[<expr pos:start="113:42" pos:end="113:42"><name pos:start="113:42" pos:end="113:42">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="114:5" pos:end="114:48">/* This is needed during FDT finalization */</comment>
    <expr_stmt pos:start="115:5" pos:end="115:43"><expr pos:start="115:5" pos:end="115:42"><name pos:start="115:5" pos:end="115:20"><name pos:start="115:5" pos:end="115:9">spapr</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:20">cpu_model</name></name> <operator pos:start="115:22" pos:end="115:22">=</operator> <call pos:start="115:24" pos:end="115:42"><name pos:start="115:24" pos:end="115:31">g_strdup</name><argument_list pos:start="115:32" pos:end="115:42">(<argument pos:start="115:33" pos:end="115:41"><expr pos:start="115:33" pos:end="115:41"><name pos:start="115:33" pos:end="115:41">modelname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="116:5" pos:end="207:15">for <control pos:start="116:9" pos:end="116:59">(<init pos:start="116:10" pos:end="116:25"><expr pos:start="116:10" pos:end="116:24"><name pos:start="116:10" pos:end="116:12">env</name> <operator pos:start="116:14" pos:end="116:14">=</operator> <name pos:start="116:16" pos:end="116:24">first_cpu</name></expr>;</init> <condition pos:start="116:27" pos:end="116:38"><expr pos:start="116:27" pos:end="116:37"><name pos:start="116:27" pos:end="116:29">env</name> <operator pos:start="116:31" pos:end="116:32">!=</operator> <name pos:start="116:34" pos:end="116:37">NULL</name></expr>;</condition> <incr pos:start="116:40" pos:end="116:58"><expr pos:start="116:40" pos:end="116:58"><name pos:start="116:40" pos:end="116:42">env</name> <operator pos:start="116:44" pos:end="116:44">=</operator> <name pos:start="116:46" pos:end="116:58"><name pos:start="116:46" pos:end="116:48">env</name><operator pos:start="116:49" pos:end="116:50">-&gt;</operator><name pos:start="116:51" pos:end="116:58">next_cpu</name></name></expr></incr>)</control> <block pos:start="116:61" pos:end="207:15">{<block_content pos:start="117:9" pos:end="207:15">
        <decl_stmt pos:start="117:9" pos:end="117:35"><decl pos:start="117:9" pos:end="117:34"><type pos:start="117:9" pos:end="117:11"><name pos:start="117:9" pos:end="117:11">int</name></type> <name pos:start="117:13" pos:end="117:17">index</name> <init pos:start="117:19" pos:end="117:34">= <expr pos:start="117:21" pos:end="117:34"><name pos:start="117:21" pos:end="117:34"><name pos:start="117:21" pos:end="117:23">env</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:34">cpu_index</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="118:9" pos:end="118:43"><decl pos:start="118:9" pos:end="118:42"><type pos:start="118:9" pos:end="118:16"><name pos:start="118:9" pos:end="118:16">uint32_t</name></type> <name pos:start="118:18" pos:end="118:42"><name pos:start="118:18" pos:end="118:29">servers_prop</name><index pos:start="118:30" pos:end="118:42">[<expr pos:start="118:31" pos:end="118:41"><name pos:start="118:31" pos:end="118:41">smp_threads</name></expr>]</index></name></decl>;</decl_stmt>
        <decl_stmt pos:start="119:9" pos:end="119:48"><decl pos:start="119:9" pos:end="119:47"><type pos:start="119:9" pos:end="119:16"><name pos:start="119:9" pos:end="119:16">uint32_t</name></type> <name pos:start="119:18" pos:end="119:47"><name pos:start="119:18" pos:end="119:30">gservers_prop</name><index pos:start="119:31" pos:end="119:47">[<expr pos:start="119:32" pos:end="119:46"><name pos:start="119:32" pos:end="119:42">smp_threads</name> <operator pos:start="119:44" pos:end="119:44">*</operator> <literal type="number" pos:start="119:46" pos:end="119:46">2</literal></expr>]</index></name></decl>;</decl_stmt>
        <decl_stmt pos:start="120:9" pos:end="120:23"><decl pos:start="120:9" pos:end="120:22"><type pos:start="120:9" pos:end="120:14"><name pos:start="120:9" pos:end="120:12">char</name> <modifier pos:start="120:14" pos:end="120:14">*</modifier></type><name pos:start="120:15" pos:end="120:22">nodename</name></decl>;</decl_stmt>
        <decl_stmt pos:start="121:9" pos:end="122:51"><decl pos:start="121:9" pos:end="122:50"><type pos:start="121:9" pos:end="121:16"><name pos:start="121:9" pos:end="121:16">uint32_t</name></type> <name pos:start="121:18" pos:end="121:23"><name pos:start="121:18" pos:end="121:21">segs</name><index pos:start="121:22" pos:end="121:23">[]</index></name> <init pos:start="121:25" pos:end="122:50">= <expr pos:start="121:27" pos:end="122:50"><block pos:start="121:27" pos:end="122:50">{<expr pos:start="121:28" pos:end="121:42"><call pos:start="121:28" pos:end="121:42"><name pos:start="121:28" pos:end="121:38">cpu_to_be32</name><argument_list pos:start="121:39" pos:end="121:42">(<argument pos:start="121:40" pos:end="121:41"><expr pos:start="121:40" pos:end="121:41"><literal type="number" pos:start="121:40" pos:end="121:41">28</literal></expr></argument>)</argument_list></call></expr>, <expr pos:start="121:45" pos:end="121:59"><call pos:start="121:45" pos:end="121:59"><name pos:start="121:45" pos:end="121:55">cpu_to_be32</name><argument_list pos:start="121:56" pos:end="121:59">(<argument pos:start="121:57" pos:end="121:58"><expr pos:start="121:57" pos:end="121:58"><literal type="number" pos:start="121:57" pos:end="121:58">40</literal></expr></argument>)</argument_list></call></expr>,
                           <expr pos:start="122:28" pos:end="122:37"><literal type="number" pos:start="122:28" pos:end="122:37">0xffffffff</literal></expr>, <expr pos:start="122:40" pos:end="122:49"><literal type="number" pos:start="122:40" pos:end="122:49">0xffffffff</literal></expr>}</block></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="123:9" pos:end="123:78"><decl pos:start="123:9" pos:end="123:77"><type pos:start="123:9" pos:end="123:16"><name pos:start="123:9" pos:end="123:16">uint32_t</name></type> <name pos:start="123:18" pos:end="123:23">tbfreq</name> <init pos:start="123:25" pos:end="123:77">= <expr pos:start="123:27" pos:end="123:77"><ternary pos:start="123:27" pos:end="123:77"><condition pos:start="123:27" pos:end="123:41"><expr pos:start="123:27" pos:end="123:39"><call pos:start="123:27" pos:end="123:39"><name pos:start="123:27" pos:end="123:37">kvm_enabled</name><argument_list pos:start="123:38" pos:end="123:39">()</argument_list></call></expr> ?</condition><then pos:start="123:43" pos:end="123:61"> <expr pos:start="123:43" pos:end="123:61"><call pos:start="123:43" pos:end="123:61"><name pos:start="123:43" pos:end="123:59">kvmppc_get_tbfreq</name><argument_list pos:start="123:60" pos:end="123:61">()</argument_list></call></expr> </then><else pos:start="123:63" pos:end="123:77">: <expr pos:start="123:65" pos:end="123:77"><name pos:start="123:65" pos:end="123:77">TIMEBASE_FREQ</name></expr></else></ternary></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="124:9" pos:end="124:79"><decl pos:start="124:9" pos:end="124:78"><type pos:start="124:9" pos:end="124:16"><name pos:start="124:9" pos:end="124:16">uint32_t</name></type> <name pos:start="124:18" pos:end="124:24">cpufreq</name> <init pos:start="124:26" pos:end="124:78">= <expr pos:start="124:28" pos:end="124:78"><ternary pos:start="124:28" pos:end="124:78"><condition pos:start="124:28" pos:end="124:42"><expr pos:start="124:28" pos:end="124:40"><call pos:start="124:28" pos:end="124:40"><name pos:start="124:28" pos:end="124:38">kvm_enabled</name><argument_list pos:start="124:39" pos:end="124:40">()</argument_list></call></expr> ?</condition><then pos:start="124:44" pos:end="124:65"> <expr pos:start="124:44" pos:end="124:65"><call pos:start="124:44" pos:end="124:65"><name pos:start="124:44" pos:end="124:63">kvmppc_get_clockfreq</name><argument_list pos:start="124:64" pos:end="124:65">()</argument_list></call></expr> </then><else pos:start="124:67" pos:end="124:78">: <expr pos:start="124:69" pos:end="124:78"><literal type="number" pos:start="124:69" pos:end="124:78">1000000000</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="125:9" pos:end="125:37"><decl pos:start="125:9" pos:end="125:36"><type pos:start="125:9" pos:end="125:16"><name pos:start="125:9" pos:end="125:16">uint32_t</name></type> <name pos:start="125:18" pos:end="125:36"><name pos:start="125:18" pos:end="125:32">page_sizes_prop</name><index pos:start="125:33" pos:end="125:36">[<expr pos:start="125:34" pos:end="125:35"><literal type="number" pos:start="125:34" pos:end="125:35">64</literal></expr>]</index></name></decl>;</decl_stmt>
        <decl_stmt pos:start="126:9" pos:end="126:36"><decl pos:start="126:9" pos:end="126:35"><type pos:start="126:9" pos:end="126:14"><name pos:start="126:9" pos:end="126:14">size_t</name></type> <name pos:start="126:16" pos:end="126:35">page_sizes_prop_size</name></decl>;</decl_stmt>
        <if_stmt pos:start="127:9" pos:end="207:15"><if pos:start="127:9" pos:end="207:15">if <condition pos:start="127:12" pos:end="127:31">(<expr pos:start="127:13" pos:end="127:30"><operator pos:start="127:13" pos:end="127:13">(</operator><name pos:start="127:14" pos:end="127:18">index</name> <operator pos:start="127:20" pos:end="127:20">%</operator> <name pos:start="127:22" pos:end="127:24">smt</name><operator pos:start="127:25" pos:end="127:25">)</operator> <operator pos:start="127:27" pos:end="127:28">!=</operator> <literal type="number" pos:start="127:30" pos:end="127:30">0</literal></expr>)</condition> <block pos:start="127:33" pos:end="207:15">{<block_content pos:start="128:13" pos:end="207:15">
            <continue pos:start="128:13" pos:end="128:21">continue;</continue>
        <if_stmt pos:start="129:9" pos:end="207:15"><if pos:start="129:9" pos:end="207:15">if <condition pos:start="129:12" pos:end="129:63">(<expr pos:start="129:13" pos:end="129:62"><call pos:start="129:13" pos:end="129:58"><name pos:start="129:13" pos:end="129:20">asprintf</name><argument_list pos:start="129:21" pos:end="129:58">(<argument pos:start="129:22" pos:end="129:30"><expr pos:start="129:22" pos:end="129:30"><operator pos:start="129:22" pos:end="129:22">&amp;</operator><name pos:start="129:23" pos:end="129:30">nodename</name></expr></argument>, <argument pos:start="129:33" pos:end="129:39"><expr pos:start="129:33" pos:end="129:39"><literal type="string" pos:start="129:33" pos:end="129:39">"%s@%x"</literal></expr></argument>, <argument pos:start="129:42" pos:end="129:50"><expr pos:start="129:42" pos:end="129:50"><name pos:start="129:42" pos:end="129:50">modelname</name></expr></argument>, <argument pos:start="129:53" pos:end="129:57"><expr pos:start="129:53" pos:end="129:57"><name pos:start="129:53" pos:end="129:57">index</name></expr></argument>)</argument_list></call> <operator pos:start="129:60" pos:end="129:60">&lt;</operator> <literal type="number" pos:start="129:62" pos:end="129:62">0</literal></expr>)</condition> <block pos:start="129:65" pos:end="207:15">{<block_content pos:start="130:13" pos:end="207:15">
            <expr_stmt pos:start="130:13" pos:end="130:52"><expr pos:start="130:13" pos:end="130:51"><call pos:start="130:13" pos:end="130:51"><name pos:start="130:13" pos:end="130:19">fprintf</name><argument_list pos:start="130:20" pos:end="130:51">(<argument pos:start="130:21" pos:end="130:26"><expr pos:start="130:21" pos:end="130:26"><name pos:start="130:21" pos:end="130:26">stderr</name></expr></argument>, <argument pos:start="130:29" pos:end="130:50"><expr pos:start="130:29" pos:end="130:50"><literal type="string" pos:start="130:29" pos:end="130:50">"Allocation failure\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="131:13" pos:end="131:20"><expr pos:start="131:13" pos:end="131:19"><call pos:start="131:13" pos:end="131:19"><name pos:start="131:13" pos:end="131:16">exit</name><argument_list pos:start="131:17" pos:end="131:19">(<argument pos:start="131:18" pos:end="131:18"><expr pos:start="131:18" pos:end="131:18"><literal type="number" pos:start="131:18" pos:end="131:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="132:9" pos:end="132:46"><expr pos:start="132:9" pos:end="132:45"><call pos:start="132:9" pos:end="132:45"><name pos:start="132:9" pos:end="132:12">_FDT</name><argument_list pos:start="132:13" pos:end="132:45">(<argument pos:start="132:14" pos:end="132:44"><expr pos:start="132:14" pos:end="132:44"><operator pos:start="132:14" pos:end="132:14">(</operator><call pos:start="132:15" pos:end="132:43"><name pos:start="132:15" pos:end="132:28">fdt_begin_node</name><argument_list pos:start="132:29" pos:end="132:43">(<argument pos:start="132:30" pos:end="132:32"><expr pos:start="132:30" pos:end="132:32"><name pos:start="132:30" pos:end="132:32">fdt</name></expr></argument>, <argument pos:start="132:35" pos:end="132:42"><expr pos:start="132:35" pos:end="132:42"><name pos:start="132:35" pos:end="132:42">nodename</name></expr></argument>)</argument_list></call><operator pos:start="132:44" pos:end="132:44">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="133:9" pos:end="133:23"><expr pos:start="133:9" pos:end="133:22"><call pos:start="133:9" pos:end="133:22"><name pos:start="133:9" pos:end="133:12">free</name><argument_list pos:start="133:13" pos:end="133:22">(<argument pos:start="133:14" pos:end="133:21"><expr pos:start="133:14" pos:end="133:21"><name pos:start="133:14" pos:end="133:21">nodename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="134:9" pos:end="134:53"><expr pos:start="134:9" pos:end="134:52"><call pos:start="134:9" pos:end="134:52"><name pos:start="134:9" pos:end="134:12">_FDT</name><argument_list pos:start="134:13" pos:end="134:52">(<argument pos:start="134:14" pos:end="134:51"><expr pos:start="134:14" pos:end="134:51"><operator pos:start="134:14" pos:end="134:14">(</operator><call pos:start="134:15" pos:end="134:50"><name pos:start="134:15" pos:end="134:31">fdt_property_cell</name><argument_list pos:start="134:32" pos:end="134:50">(<argument pos:start="134:33" pos:end="134:35"><expr pos:start="134:33" pos:end="134:35"><name pos:start="134:33" pos:end="134:35">fdt</name></expr></argument>, <argument pos:start="134:38" pos:end="134:42"><expr pos:start="134:38" pos:end="134:42"><literal type="string" pos:start="134:38" pos:end="134:42">"reg"</literal></expr></argument>, <argument pos:start="134:45" pos:end="134:49"><expr pos:start="134:45" pos:end="134:49"><name pos:start="134:45" pos:end="134:49">index</name></expr></argument>)</argument_list></call><operator pos:start="134:51" pos:end="134:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="135:9" pos:end="135:63"><expr pos:start="135:9" pos:end="135:62"><call pos:start="135:9" pos:end="135:62"><name pos:start="135:9" pos:end="135:12">_FDT</name><argument_list pos:start="135:13" pos:end="135:62">(<argument pos:start="135:14" pos:end="135:61"><expr pos:start="135:14" pos:end="135:61"><operator pos:start="135:14" pos:end="135:14">(</operator><call pos:start="135:15" pos:end="135:60"><name pos:start="135:15" pos:end="135:33">fdt_property_string</name><argument_list pos:start="135:34" pos:end="135:60">(<argument pos:start="135:35" pos:end="135:37"><expr pos:start="135:35" pos:end="135:37"><name pos:start="135:35" pos:end="135:37">fdt</name></expr></argument>, <argument pos:start="135:40" pos:end="135:52"><expr pos:start="135:40" pos:end="135:52"><literal type="string" pos:start="135:40" pos:end="135:52">"device_type"</literal></expr></argument>, <argument pos:start="135:55" pos:end="135:59"><expr pos:start="135:55" pos:end="135:59"><literal type="string" pos:start="135:55" pos:end="135:59">"cpu"</literal></expr></argument>)</argument_list></call><operator pos:start="135:61" pos:end="135:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="136:9" pos:end="136:73"><expr pos:start="136:9" pos:end="136:72"><call pos:start="136:9" pos:end="136:72"><name pos:start="136:9" pos:end="136:12">_FDT</name><argument_list pos:start="136:13" pos:end="136:72">(<argument pos:start="136:14" pos:end="136:71"><expr pos:start="136:14" pos:end="136:71"><operator pos:start="136:14" pos:end="136:14">(</operator><call pos:start="136:15" pos:end="136:70"><name pos:start="136:15" pos:end="136:31">fdt_property_cell</name><argument_list pos:start="136:32" pos:end="136:70">(<argument pos:start="136:33" pos:end="136:35"><expr pos:start="136:33" pos:end="136:35"><name pos:start="136:33" pos:end="136:35">fdt</name></expr></argument>, <argument pos:start="136:38" pos:end="136:50"><expr pos:start="136:38" pos:end="136:50"><literal type="string" pos:start="136:38" pos:end="136:50">"cpu-version"</literal></expr></argument>, <argument pos:start="136:53" pos:end="136:69"><expr pos:start="136:53" pos:end="136:69"><name pos:start="136:53" pos:end="136:69"><name pos:start="136:53" pos:end="136:55">env</name><operator pos:start="136:56" pos:end="136:57">-&gt;</operator><name pos:start="136:58" pos:end="136:60">spr</name><index pos:start="136:61" pos:end="136:69">[<expr pos:start="136:62" pos:end="136:68"><name pos:start="136:62" pos:end="136:68">SPR_PVR</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="136:71" pos:end="136:71">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="137:9" pos:end="138:57"><expr pos:start="137:9" pos:end="138:56"><call pos:start="137:9" pos:end="138:56"><name pos:start="137:9" pos:end="137:12">_FDT</name><argument_list pos:start="137:13" pos:end="138:56">(<argument pos:start="137:14" pos:end="138:55"><expr pos:start="137:14" pos:end="138:55"><operator pos:start="137:14" pos:end="137:14">(</operator><call pos:start="137:15" pos:end="138:54"><name pos:start="137:15" pos:end="137:31">fdt_property_cell</name><argument_list pos:start="137:32" pos:end="138:54">(<argument pos:start="137:33" pos:end="137:35"><expr pos:start="137:33" pos:end="137:35"><name pos:start="137:33" pos:end="137:35">fdt</name></expr></argument>, <argument pos:start="137:38" pos:end="137:56"><expr pos:start="137:38" pos:end="137:56"><literal type="string" pos:start="137:38" pos:end="137:56">"dcache-block-size"</literal></expr></argument>,
                                <argument pos:start="138:33" pos:end="138:53"><expr pos:start="138:33" pos:end="138:53"><name pos:start="138:33" pos:end="138:53"><name pos:start="138:33" pos:end="138:35">env</name><operator pos:start="138:36" pos:end="138:37">-&gt;</operator><name pos:start="138:38" pos:end="138:53">dcache_line_size</name></name></expr></argument>)</argument_list></call><operator pos:start="138:55" pos:end="138:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="139:9" pos:end="140:57"><expr pos:start="139:9" pos:end="140:56"><call pos:start="139:9" pos:end="140:56"><name pos:start="139:9" pos:end="139:12">_FDT</name><argument_list pos:start="139:13" pos:end="140:56">(<argument pos:start="139:14" pos:end="140:55"><expr pos:start="139:14" pos:end="140:55"><operator pos:start="139:14" pos:end="139:14">(</operator><call pos:start="139:15" pos:end="140:54"><name pos:start="139:15" pos:end="139:31">fdt_property_cell</name><argument_list pos:start="139:32" pos:end="140:54">(<argument pos:start="139:33" pos:end="139:35"><expr pos:start="139:33" pos:end="139:35"><name pos:start="139:33" pos:end="139:35">fdt</name></expr></argument>, <argument pos:start="139:38" pos:end="139:56"><expr pos:start="139:38" pos:end="139:56"><literal type="string" pos:start="139:38" pos:end="139:56">"icache-block-size"</literal></expr></argument>,
                                <argument pos:start="140:33" pos:end="140:53"><expr pos:start="140:33" pos:end="140:53"><name pos:start="140:33" pos:end="140:53"><name pos:start="140:33" pos:end="140:35">env</name><operator pos:start="140:36" pos:end="140:37">-&gt;</operator><name pos:start="140:38" pos:end="140:53">icache_line_size</name></name></expr></argument>)</argument_list></call><operator pos:start="140:55" pos:end="140:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="141:9" pos:end="141:69"><expr pos:start="141:9" pos:end="141:68"><call pos:start="141:9" pos:end="141:68"><name pos:start="141:9" pos:end="141:12">_FDT</name><argument_list pos:start="141:13" pos:end="141:68">(<argument pos:start="141:14" pos:end="141:67"><expr pos:start="141:14" pos:end="141:67"><operator pos:start="141:14" pos:end="141:14">(</operator><call pos:start="141:15" pos:end="141:66"><name pos:start="141:15" pos:end="141:31">fdt_property_cell</name><argument_list pos:start="141:32" pos:end="141:66">(<argument pos:start="141:33" pos:end="141:35"><expr pos:start="141:33" pos:end="141:35"><name pos:start="141:33" pos:end="141:35">fdt</name></expr></argument>, <argument pos:start="141:38" pos:end="141:57"><expr pos:start="141:38" pos:end="141:57"><literal type="string" pos:start="141:38" pos:end="141:57">"timebase-frequency"</literal></expr></argument>, <argument pos:start="141:60" pos:end="141:65"><expr pos:start="141:60" pos:end="141:65"><name pos:start="141:60" pos:end="141:65">tbfreq</name></expr></argument>)</argument_list></call><operator pos:start="141:67" pos:end="141:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="142:9" pos:end="142:67"><expr pos:start="142:9" pos:end="142:66"><call pos:start="142:9" pos:end="142:66"><name pos:start="142:9" pos:end="142:12">_FDT</name><argument_list pos:start="142:13" pos:end="142:66">(<argument pos:start="142:14" pos:end="142:65"><expr pos:start="142:14" pos:end="142:65"><operator pos:start="142:14" pos:end="142:14">(</operator><call pos:start="142:15" pos:end="142:64"><name pos:start="142:15" pos:end="142:31">fdt_property_cell</name><argument_list pos:start="142:32" pos:end="142:64">(<argument pos:start="142:33" pos:end="142:35"><expr pos:start="142:33" pos:end="142:35"><name pos:start="142:33" pos:end="142:35">fdt</name></expr></argument>, <argument pos:start="142:38" pos:end="142:54"><expr pos:start="142:38" pos:end="142:54"><literal type="string" pos:start="142:38" pos:end="142:54">"clock-frequency"</literal></expr></argument>, <argument pos:start="142:57" pos:end="142:63"><expr pos:start="142:57" pos:end="142:63"><name pos:start="142:57" pos:end="142:63">cpufreq</name></expr></argument>)</argument_list></call><operator pos:start="142:65" pos:end="142:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="143:9" pos:end="143:68"><expr pos:start="143:9" pos:end="143:67"><call pos:start="143:9" pos:end="143:67"><name pos:start="143:9" pos:end="143:12">_FDT</name><argument_list pos:start="143:13" pos:end="143:67">(<argument pos:start="143:14" pos:end="143:66"><expr pos:start="143:14" pos:end="143:66"><operator pos:start="143:14" pos:end="143:14">(</operator><call pos:start="143:15" pos:end="143:65"><name pos:start="143:15" pos:end="143:31">fdt_property_cell</name><argument_list pos:start="143:32" pos:end="143:65">(<argument pos:start="143:33" pos:end="143:35"><expr pos:start="143:33" pos:end="143:35"><name pos:start="143:33" pos:end="143:35">fdt</name></expr></argument>, <argument pos:start="143:38" pos:end="143:51"><expr pos:start="143:38" pos:end="143:51"><literal type="string" pos:start="143:38" pos:end="143:51">"ibm,slb-size"</literal></expr></argument>, <argument pos:start="143:54" pos:end="143:64"><expr pos:start="143:54" pos:end="143:64"><name pos:start="143:54" pos:end="143:64"><name pos:start="143:54" pos:end="143:56">env</name><operator pos:start="143:57" pos:end="143:58">-&gt;</operator><name pos:start="143:59" pos:end="143:64">slb_nr</name></name></expr></argument>)</argument_list></call><operator pos:start="143:66" pos:end="143:66">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="144:9" pos:end="145:67"><expr pos:start="144:9" pos:end="145:66"><call pos:start="144:9" pos:end="145:66"><name pos:start="144:9" pos:end="144:12">_FDT</name><argument_list pos:start="144:13" pos:end="145:66">(<argument pos:start="144:14" pos:end="145:65"><expr pos:start="144:14" pos:end="145:65"><operator pos:start="144:14" pos:end="144:14">(</operator><call pos:start="144:15" pos:end="145:64"><name pos:start="144:15" pos:end="144:26">fdt_property</name><argument_list pos:start="144:27" pos:end="145:64">(<argument pos:start="144:28" pos:end="144:30"><expr pos:start="144:28" pos:end="144:30"><name pos:start="144:28" pos:end="144:30">fdt</name></expr></argument>, <argument pos:start="144:33" pos:end="144:46"><expr pos:start="144:33" pos:end="144:46"><literal type="string" pos:start="144:33" pos:end="144:46">"ibm,pft-size"</literal></expr></argument>,
                           <argument pos:start="145:28" pos:end="145:40"><expr pos:start="145:28" pos:end="145:40"><name pos:start="145:28" pos:end="145:40">pft_size_prop</name></expr></argument>, <argument pos:start="145:43" pos:end="145:63"><expr pos:start="145:43" pos:end="145:63"><sizeof pos:start="145:43" pos:end="145:63">sizeof<argument_list pos:start="145:49" pos:end="145:63">(<argument pos:start="145:50" pos:end="145:62"><expr pos:start="145:50" pos:end="145:62"><name pos:start="145:50" pos:end="145:62">pft_size_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="145:65" pos:end="145:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="146:9" pos:end="146:59"><expr pos:start="146:9" pos:end="146:58"><call pos:start="146:9" pos:end="146:58"><name pos:start="146:9" pos:end="146:12">_FDT</name><argument_list pos:start="146:13" pos:end="146:58">(<argument pos:start="146:14" pos:end="146:57"><expr pos:start="146:14" pos:end="146:57"><operator pos:start="146:14" pos:end="146:14">(</operator><call pos:start="146:15" pos:end="146:56"><name pos:start="146:15" pos:end="146:33">fdt_property_string</name><argument_list pos:start="146:34" pos:end="146:56">(<argument pos:start="146:35" pos:end="146:37"><expr pos:start="146:35" pos:end="146:37"><name pos:start="146:35" pos:end="146:37">fdt</name></expr></argument>, <argument pos:start="146:40" pos:end="146:47"><expr pos:start="146:40" pos:end="146:47"><literal type="string" pos:start="146:40" pos:end="146:47">"status"</literal></expr></argument>, <argument pos:start="146:50" pos:end="146:55"><expr pos:start="146:50" pos:end="146:55"><literal type="string" pos:start="146:50" pos:end="146:55">"okay"</literal></expr></argument>)</argument_list></call><operator pos:start="146:57" pos:end="146:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="147:9" pos:end="147:53"><expr pos:start="147:9" pos:end="147:52"><call pos:start="147:9" pos:end="147:52"><name pos:start="147:9" pos:end="147:12">_FDT</name><argument_list pos:start="147:13" pos:end="147:52">(<argument pos:start="147:14" pos:end="147:51"><expr pos:start="147:14" pos:end="147:51"><operator pos:start="147:14" pos:end="147:14">(</operator><call pos:start="147:15" pos:end="147:50"><name pos:start="147:15" pos:end="147:26">fdt_property</name><argument_list pos:start="147:27" pos:end="147:50">(<argument pos:start="147:28" pos:end="147:30"><expr pos:start="147:28" pos:end="147:30"><name pos:start="147:28" pos:end="147:30">fdt</name></expr></argument>, <argument pos:start="147:33" pos:end="147:40"><expr pos:start="147:33" pos:end="147:40"><literal type="string" pos:start="147:33" pos:end="147:40">"64-bit"</literal></expr></argument>, <argument pos:start="147:43" pos:end="147:46"><expr pos:start="147:43" pos:end="147:46"><name pos:start="147:43" pos:end="147:46">NULL</name></expr></argument>, <argument pos:start="147:49" pos:end="147:49"><expr pos:start="147:49" pos:end="147:49"><literal type="number" pos:start="147:49" pos:end="147:49">0</literal></expr></argument>)</argument_list></call><operator pos:start="147:51" pos:end="147:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="148:9" pos:end="148:61">/* Build interrupt servers and gservers properties */</comment>
        <for pos:start="149:9" pos:end="207:15">for <control pos:start="149:13" pos:end="149:41">(<init pos:start="149:14" pos:end="149:19"><expr pos:start="149:14" pos:end="149:18"><name pos:start="149:14" pos:end="149:14">i</name> <operator pos:start="149:16" pos:end="149:16">=</operator> <literal type="number" pos:start="149:18" pos:end="149:18">0</literal></expr>;</init> <condition pos:start="149:21" pos:end="149:36"><expr pos:start="149:21" pos:end="149:35"><name pos:start="149:21" pos:end="149:21">i</name> <operator pos:start="149:23" pos:end="149:23">&lt;</operator> <name pos:start="149:25" pos:end="149:35">smp_threads</name></expr>;</condition> <incr pos:start="149:38" pos:end="149:40"><expr pos:start="149:38" pos:end="149:40"><name pos:start="149:38" pos:end="149:38">i</name><operator pos:start="149:39" pos:end="149:40">++</operator></expr></incr>)</control> <block pos:start="149:43" pos:end="207:15">{<block_content pos:start="150:13" pos:end="207:15">
            <expr_stmt pos:start="150:13" pos:end="150:53"><expr pos:start="150:13" pos:end="150:52"><name pos:start="150:13" pos:end="150:27"><name pos:start="150:13" pos:end="150:24">servers_prop</name><index pos:start="150:25" pos:end="150:27">[<expr pos:start="150:26" pos:end="150:26"><name pos:start="150:26" pos:end="150:26">i</name></expr>]</index></name> <operator pos:start="150:29" pos:end="150:29">=</operator> <call pos:start="150:31" pos:end="150:52"><name pos:start="150:31" pos:end="150:41">cpu_to_be32</name><argument_list pos:start="150:42" pos:end="150:52">(<argument pos:start="150:43" pos:end="150:51"><expr pos:start="150:43" pos:end="150:51"><name pos:start="150:43" pos:end="150:47">index</name> <operator pos:start="150:49" pos:end="150:49">+</operator> <name pos:start="150:51" pos:end="150:51">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="block" pos:start="151:13" pos:end="151:61">/* Hack, direct the group queues back to cpu 0 */</comment>
            <expr_stmt pos:start="152:13" pos:end="152:56"><expr pos:start="152:13" pos:end="152:55"><name pos:start="152:13" pos:end="152:30"><name pos:start="152:13" pos:end="152:25">gservers_prop</name><index pos:start="152:26" pos:end="152:30">[<expr pos:start="152:27" pos:end="152:29"><name pos:start="152:27" pos:end="152:27">i</name><operator pos:start="152:28" pos:end="152:28">*</operator><literal type="number" pos:start="152:29" pos:end="152:29">2</literal></expr>]</index></name> <operator pos:start="152:32" pos:end="152:32">=</operator> <call pos:start="152:34" pos:end="152:55"><name pos:start="152:34" pos:end="152:44">cpu_to_be32</name><argument_list pos:start="152:45" pos:end="152:55">(<argument pos:start="152:46" pos:end="152:54"><expr pos:start="152:46" pos:end="152:54"><name pos:start="152:46" pos:end="152:50">index</name> <operator pos:start="152:52" pos:end="152:52">+</operator> <name pos:start="152:54" pos:end="152:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="153:13" pos:end="153:39"><expr pos:start="153:13" pos:end="153:38"><name pos:start="153:13" pos:end="153:34"><name pos:start="153:13" pos:end="153:25">gservers_prop</name><index pos:start="153:26" pos:end="153:34">[<expr pos:start="153:27" pos:end="153:33"><name pos:start="153:27" pos:end="153:27">i</name><operator pos:start="153:28" pos:end="153:28">*</operator><literal type="number" pos:start="153:29" pos:end="153:29">2</literal> <operator pos:start="153:31" pos:end="153:31">+</operator> <literal type="number" pos:start="153:33" pos:end="153:33">1</literal></expr>]</index></name> <operator pos:start="153:36" pos:end="153:36">=</operator> <literal type="number" pos:start="153:38" pos:end="153:38">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="154:9" pos:end="155:65"><expr pos:start="154:9" pos:end="155:64"><call pos:start="154:9" pos:end="155:64"><name pos:start="154:9" pos:end="154:12">_FDT</name><argument_list pos:start="154:13" pos:end="155:64">(<argument pos:start="154:14" pos:end="155:63"><expr pos:start="154:14" pos:end="155:63"><operator pos:start="154:14" pos:end="154:14">(</operator><call pos:start="154:15" pos:end="155:62"><name pos:start="154:15" pos:end="154:26">fdt_property</name><argument_list pos:start="154:27" pos:end="155:62">(<argument pos:start="154:28" pos:end="154:30"><expr pos:start="154:28" pos:end="154:30"><name pos:start="154:28" pos:end="154:30">fdt</name></expr></argument>, <argument pos:start="154:33" pos:end="154:60"><expr pos:start="154:33" pos:end="154:60"><literal type="string" pos:start="154:33" pos:end="154:60">"ibm,ppc-interrupt-server#s"</literal></expr></argument>,
                           <argument pos:start="155:28" pos:end="155:39"><expr pos:start="155:28" pos:end="155:39"><name pos:start="155:28" pos:end="155:39">servers_prop</name></expr></argument>, <argument pos:start="155:42" pos:end="155:61"><expr pos:start="155:42" pos:end="155:61"><sizeof pos:start="155:42" pos:end="155:61">sizeof<argument_list pos:start="155:48" pos:end="155:61">(<argument pos:start="155:49" pos:end="155:60"><expr pos:start="155:49" pos:end="155:60"><name pos:start="155:49" pos:end="155:60">servers_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="155:63" pos:end="155:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="156:9" pos:end="157:67"><expr pos:start="156:9" pos:end="157:66"><call pos:start="156:9" pos:end="157:66"><name pos:start="156:9" pos:end="156:12">_FDT</name><argument_list pos:start="156:13" pos:end="157:66">(<argument pos:start="156:14" pos:end="157:65"><expr pos:start="156:14" pos:end="157:65"><operator pos:start="156:14" pos:end="156:14">(</operator><call pos:start="156:15" pos:end="157:64"><name pos:start="156:15" pos:end="156:26">fdt_property</name><argument_list pos:start="156:27" pos:end="157:64">(<argument pos:start="156:28" pos:end="156:30"><expr pos:start="156:28" pos:end="156:30"><name pos:start="156:28" pos:end="156:30">fdt</name></expr></argument>, <argument pos:start="156:33" pos:end="156:61"><expr pos:start="156:33" pos:end="156:61"><literal type="string" pos:start="156:33" pos:end="156:61">"ibm,ppc-interrupt-gserver#s"</literal></expr></argument>,
                           <argument pos:start="157:28" pos:end="157:40"><expr pos:start="157:28" pos:end="157:40"><name pos:start="157:28" pos:end="157:40">gservers_prop</name></expr></argument>, <argument pos:start="157:43" pos:end="157:63"><expr pos:start="157:43" pos:end="157:63"><sizeof pos:start="157:43" pos:end="157:63">sizeof<argument_list pos:start="157:49" pos:end="157:63">(<argument pos:start="157:50" pos:end="157:62"><expr pos:start="157:50" pos:end="157:62"><name pos:start="157:50" pos:end="157:62">gservers_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="157:65" pos:end="157:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="158:9" pos:end="207:15"><if pos:start="158:9" pos:end="207:15">if <condition pos:start="158:12" pos:end="158:47">(<expr pos:start="158:13" pos:end="158:46"><name pos:start="158:13" pos:end="158:26"><name pos:start="158:13" pos:end="158:15">env</name><operator pos:start="158:16" pos:end="158:17">-&gt;</operator><name pos:start="158:18" pos:end="158:26">mmu_model</name></name> <operator pos:start="158:28" pos:end="158:28">&amp;</operator> <name pos:start="158:30" pos:end="158:46">POWERPC_MMU_1TSEG</name></expr>)</condition> <block pos:start="158:49" pos:end="207:15">{<block_content pos:start="159:13" pos:end="207:15">
            <expr_stmt pos:start="159:13" pos:end="160:53"><expr pos:start="159:13" pos:end="160:52"><call pos:start="159:13" pos:end="160:52"><name pos:start="159:13" pos:end="159:16">_FDT</name><argument_list pos:start="159:17" pos:end="160:52">(<argument pos:start="159:18" pos:end="160:51"><expr pos:start="159:18" pos:end="160:51"><operator pos:start="159:18" pos:end="159:18">(</operator><call pos:start="159:19" pos:end="160:50"><name pos:start="159:19" pos:end="159:30">fdt_property</name><argument_list pos:start="159:31" pos:end="160:50">(<argument pos:start="159:32" pos:end="159:34"><expr pos:start="159:32" pos:end="159:34"><name pos:start="159:32" pos:end="159:34">fdt</name></expr></argument>, <argument pos:start="159:37" pos:end="159:65"><expr pos:start="159:37" pos:end="159:65"><literal type="string" pos:start="159:37" pos:end="159:65">"ibm,processor-segment-sizes"</literal></expr></argument>,
                               <argument pos:start="160:32" pos:end="160:35"><expr pos:start="160:32" pos:end="160:35"><name pos:start="160:32" pos:end="160:35">segs</name></expr></argument>, <argument pos:start="160:38" pos:end="160:49"><expr pos:start="160:38" pos:end="160:49"><sizeof pos:start="160:38" pos:end="160:49">sizeof<argument_list pos:start="160:44" pos:end="160:49">(<argument pos:start="160:45" pos:end="160:48"><expr pos:start="160:45" pos:end="160:48"><name pos:start="160:45" pos:end="160:48">segs</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="160:51" pos:end="160:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="161:9" pos:end="164:48">/* Advertise VMX/VSX (vector extensions) if available
         *   0 / no property == no vector extensions
         *   1               == VMX / Altivec available
         *   2               == VSX available */</comment>
        <if_stmt pos:start="165:9" pos:end="207:15"><if pos:start="165:9" pos:end="207:15">if <condition pos:start="165:12" pos:end="165:43">(<expr pos:start="165:13" pos:end="165:42"><name pos:start="165:13" pos:end="165:28"><name pos:start="165:13" pos:end="165:15">env</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:28">insns_flags</name></name> <operator pos:start="165:30" pos:end="165:30">&amp;</operator> <name pos:start="165:32" pos:end="165:42">PPC_ALTIVEC</name></expr>)</condition> <block pos:start="165:45" pos:end="207:15">{<block_content pos:start="166:13" pos:end="207:15">
            <decl_stmt pos:start="166:13" pos:end="166:66"><decl pos:start="166:13" pos:end="166:65"><type pos:start="166:13" pos:end="166:20"><name pos:start="166:13" pos:end="166:20">uint32_t</name></type> <name pos:start="166:22" pos:end="166:24">vmx</name> <init pos:start="166:26" pos:end="166:65">= <expr pos:start="166:28" pos:end="166:65"><ternary pos:start="166:28" pos:end="166:65"><condition pos:start="166:28" pos:end="166:59"><expr pos:start="166:28" pos:end="166:57"><operator pos:start="166:28" pos:end="166:28">(</operator><name pos:start="166:29" pos:end="166:45"><name pos:start="166:29" pos:end="166:31">env</name><operator pos:start="166:32" pos:end="166:33">-&gt;</operator><name pos:start="166:34" pos:end="166:45">insns_flags2</name></name> <operator pos:start="166:47" pos:end="166:47">&amp;</operator> <name pos:start="166:49" pos:end="166:56">PPC2_VSX</name><operator pos:start="166:57" pos:end="166:57">)</operator></expr> ?</condition><then pos:start="166:61" pos:end="166:61"> <expr pos:start="166:61" pos:end="166:61"><literal type="number" pos:start="166:61" pos:end="166:61">2</literal></expr> </then><else pos:start="166:63" pos:end="166:65">: <expr pos:start="166:65" pos:end="166:65"><literal type="number" pos:start="166:65" pos:end="166:65">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="167:13" pos:end="167:59"><expr pos:start="167:13" pos:end="167:58"><call pos:start="167:13" pos:end="167:58"><name pos:start="167:13" pos:end="167:16">_FDT</name><argument_list pos:start="167:17" pos:end="167:58">(<argument pos:start="167:18" pos:end="167:57"><expr pos:start="167:18" pos:end="167:57"><operator pos:start="167:18" pos:end="167:18">(</operator><call pos:start="167:19" pos:end="167:56"><name pos:start="167:19" pos:end="167:35">fdt_property_cell</name><argument_list pos:start="167:36" pos:end="167:56">(<argument pos:start="167:37" pos:end="167:39"><expr pos:start="167:37" pos:end="167:39"><name pos:start="167:37" pos:end="167:39">fdt</name></expr></argument>, <argument pos:start="167:42" pos:end="167:50"><expr pos:start="167:42" pos:end="167:50"><literal type="string" pos:start="167:42" pos:end="167:50">"ibm,vmx"</literal></expr></argument>, <argument pos:start="167:53" pos:end="167:55"><expr pos:start="167:53" pos:end="167:55"><name pos:start="167:53" pos:end="167:55">vmx</name></expr></argument>)</argument_list></call><operator pos:start="167:57" pos:end="167:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="168:9" pos:end="170:48">/* Advertise DFP (Decimal Floating Point) if available
         *   0 / no property == no DFP
         *   1               == DFP available */</comment>
        <if_stmt pos:start="171:9" pos:end="207:15"><if pos:start="171:9" pos:end="207:15">if <condition pos:start="171:12" pos:end="171:41">(<expr pos:start="171:13" pos:end="171:40"><name pos:start="171:13" pos:end="171:29"><name pos:start="171:13" pos:end="171:15">env</name><operator pos:start="171:16" pos:end="171:17">-&gt;</operator><name pos:start="171:18" pos:end="171:29">insns_flags2</name></name> <operator pos:start="171:31" pos:end="171:31">&amp;</operator> <name pos:start="171:33" pos:end="171:40">PPC2_DFP</name></expr>)</condition> <block pos:start="171:43" pos:end="207:15">{<block_content pos:start="172:13" pos:end="207:15">
            <expr_stmt pos:start="172:13" pos:end="172:57"><expr pos:start="172:13" pos:end="172:56"><call pos:start="172:13" pos:end="172:56"><name pos:start="172:13" pos:end="172:16">_FDT</name><argument_list pos:start="172:17" pos:end="172:56">(<argument pos:start="172:18" pos:end="172:55"><expr pos:start="172:18" pos:end="172:55"><operator pos:start="172:18" pos:end="172:18">(</operator><call pos:start="172:19" pos:end="172:54"><name pos:start="172:19" pos:end="172:35">fdt_property_cell</name><argument_list pos:start="172:36" pos:end="172:54">(<argument pos:start="172:37" pos:end="172:39"><expr pos:start="172:37" pos:end="172:39"><name pos:start="172:37" pos:end="172:39">fdt</name></expr></argument>, <argument pos:start="172:42" pos:end="172:50"><expr pos:start="172:42" pos:end="172:50"><literal type="string" pos:start="172:42" pos:end="172:50">"ibm,dfp"</literal></expr></argument>, <argument pos:start="172:53" pos:end="172:53"><expr pos:start="172:53" pos:end="172:53"><literal type="number" pos:start="172:53" pos:end="172:53">1</literal></expr></argument>)</argument_list></call><operator pos:start="172:55" pos:end="172:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="173:9" pos:end="173:34"><expr pos:start="173:9" pos:end="173:33"><call pos:start="173:9" pos:end="173:33"><name pos:start="173:9" pos:end="173:12">_FDT</name><argument_list pos:start="173:13" pos:end="173:33">(<argument pos:start="173:14" pos:end="173:32"><expr pos:start="173:14" pos:end="173:32"><operator pos:start="173:14" pos:end="173:14">(</operator><call pos:start="173:15" pos:end="173:31"><name pos:start="173:15" pos:end="173:26">fdt_end_node</name><argument_list pos:start="173:27" pos:end="173:31">(<argument pos:start="173:28" pos:end="173:30"><expr pos:start="173:28" pos:end="173:30"><name pos:start="173:28" pos:end="173:30">fdt</name></expr></argument>)</argument_list></call><operator pos:start="173:32" pos:end="173:32">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="174:5" pos:end="174:22"><expr pos:start="174:5" pos:end="174:21"><call pos:start="174:5" pos:end="174:21"><name pos:start="174:5" pos:end="174:10">g_free</name><argument_list pos:start="174:11" pos:end="174:21">(<argument pos:start="174:12" pos:end="174:20"><expr pos:start="174:12" pos:end="174:20"><name pos:start="174:12" pos:end="174:20">modelname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="175:5" pos:end="175:30"><expr pos:start="175:5" pos:end="175:29"><call pos:start="175:5" pos:end="175:29"><name pos:start="175:5" pos:end="175:8">_FDT</name><argument_list pos:start="175:9" pos:end="175:29">(<argument pos:start="175:10" pos:end="175:28"><expr pos:start="175:10" pos:end="175:28"><operator pos:start="175:10" pos:end="175:10">(</operator><call pos:start="175:11" pos:end="175:27"><name pos:start="175:11" pos:end="175:22">fdt_end_node</name><argument_list pos:start="175:23" pos:end="175:27">(<argument pos:start="175:24" pos:end="175:26"><expr pos:start="175:24" pos:end="175:26"><name pos:start="175:24" pos:end="175:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="175:28" pos:end="175:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="176:5" pos:end="176:14">/* RTAS */</comment>
    <expr_stmt pos:start="177:5" pos:end="177:40"><expr pos:start="177:5" pos:end="177:39"><call pos:start="177:5" pos:end="177:39"><name pos:start="177:5" pos:end="177:8">_FDT</name><argument_list pos:start="177:9" pos:end="177:39">(<argument pos:start="177:10" pos:end="177:38"><expr pos:start="177:10" pos:end="177:38"><operator pos:start="177:10" pos:end="177:10">(</operator><call pos:start="177:11" pos:end="177:37"><name pos:start="177:11" pos:end="177:24">fdt_begin_node</name><argument_list pos:start="177:25" pos:end="177:37">(<argument pos:start="177:26" pos:end="177:28"><expr pos:start="177:26" pos:end="177:28"><name pos:start="177:26" pos:end="177:28">fdt</name></expr></argument>, <argument pos:start="177:31" pos:end="177:36"><expr pos:start="177:31" pos:end="177:36"><literal type="string" pos:start="177:31" pos:end="177:36">"rtas"</literal></expr></argument>)</argument_list></call><operator pos:start="177:38" pos:end="177:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="178:5" pos:end="179:48"><expr pos:start="178:5" pos:end="179:47"><call pos:start="178:5" pos:end="179:47"><name pos:start="178:5" pos:end="178:8">_FDT</name><argument_list pos:start="178:9" pos:end="179:47">(<argument pos:start="178:10" pos:end="179:46"><expr pos:start="178:10" pos:end="179:46"><operator pos:start="178:10" pos:end="178:10">(</operator><call pos:start="178:11" pos:end="179:45"><name pos:start="178:11" pos:end="178:22">fdt_property</name><argument_list pos:start="178:23" pos:end="179:45">(<argument pos:start="178:24" pos:end="178:26"><expr pos:start="178:24" pos:end="178:26"><name pos:start="178:24" pos:end="178:26">fdt</name></expr></argument>, <argument pos:start="178:29" pos:end="178:52"><expr pos:start="178:29" pos:end="178:52"><literal type="string" pos:start="178:29" pos:end="178:52">"ibm,hypertas-functions"</literal></expr></argument>, <argument pos:start="178:55" pos:end="178:67"><expr pos:start="178:55" pos:end="178:67"><name pos:start="178:55" pos:end="178:67">hypertas_prop</name></expr></argument>,
                       <argument pos:start="179:24" pos:end="179:44"><expr pos:start="179:24" pos:end="179:44"><sizeof pos:start="179:24" pos:end="179:44">sizeof<argument_list pos:start="179:30" pos:end="179:44">(<argument pos:start="179:31" pos:end="179:43"><expr pos:start="179:31" pos:end="179:43"><name pos:start="179:31" pos:end="179:43">hypertas_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="179:46" pos:end="179:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="180:5" pos:end="181:40"><expr pos:start="180:5" pos:end="181:39"><call pos:start="180:5" pos:end="181:39"><name pos:start="180:5" pos:end="180:8">_FDT</name><argument_list pos:start="180:9" pos:end="181:39">(<argument pos:start="180:10" pos:end="181:38"><expr pos:start="180:10" pos:end="181:38"><operator pos:start="180:10" pos:end="180:10">(</operator><call pos:start="180:11" pos:end="181:37"><name pos:start="180:11" pos:end="180:22">fdt_property</name><argument_list pos:start="180:23" pos:end="181:37">(<argument pos:start="180:24" pos:end="180:26"><expr pos:start="180:24" pos:end="180:26"><name pos:start="180:24" pos:end="180:26">fdt</name></expr></argument>, <argument pos:start="180:29" pos:end="180:64"><expr pos:start="180:29" pos:end="180:64"><literal type="string" pos:start="180:29" pos:end="180:64">"ibm,associativity-reference-points"</literal></expr></argument>,
        <argument pos:start="181:9" pos:end="181:17"><expr pos:start="181:9" pos:end="181:17"><name pos:start="181:9" pos:end="181:17">refpoints</name></expr></argument>, <argument pos:start="181:20" pos:end="181:36"><expr pos:start="181:20" pos:end="181:36"><sizeof pos:start="181:20" pos:end="181:36">sizeof<argument_list pos:start="181:26" pos:end="181:36">(<argument pos:start="181:27" pos:end="181:35"><expr pos:start="181:27" pos:end="181:35"><name pos:start="181:27" pos:end="181:35">refpoints</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="181:38" pos:end="181:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="182:5" pos:end="182:30"><expr pos:start="182:5" pos:end="182:29"><call pos:start="182:5" pos:end="182:29"><name pos:start="182:5" pos:end="182:8">_FDT</name><argument_list pos:start="182:9" pos:end="182:29">(<argument pos:start="182:10" pos:end="182:28"><expr pos:start="182:10" pos:end="182:28"><operator pos:start="182:10" pos:end="182:10">(</operator><call pos:start="182:11" pos:end="182:27"><name pos:start="182:11" pos:end="182:22">fdt_end_node</name><argument_list pos:start="182:23" pos:end="182:27">(<argument pos:start="182:24" pos:end="182:26"><expr pos:start="182:24" pos:end="182:26"><name pos:start="182:24" pos:end="182:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="182:28" pos:end="182:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="183:5" pos:end="183:30">/* interrupt controller */</comment>
    <expr_stmt pos:start="184:5" pos:end="184:56"><expr pos:start="184:5" pos:end="184:55"><call pos:start="184:5" pos:end="184:55"><name pos:start="184:5" pos:end="184:8">_FDT</name><argument_list pos:start="184:9" pos:end="184:55">(<argument pos:start="184:10" pos:end="184:54"><expr pos:start="184:10" pos:end="184:54"><operator pos:start="184:10" pos:end="184:10">(</operator><call pos:start="184:11" pos:end="184:53"><name pos:start="184:11" pos:end="184:24">fdt_begin_node</name><argument_list pos:start="184:25" pos:end="184:53">(<argument pos:start="184:26" pos:end="184:28"><expr pos:start="184:26" pos:end="184:28"><name pos:start="184:26" pos:end="184:28">fdt</name></expr></argument>, <argument pos:start="184:31" pos:end="184:52"><expr pos:start="184:31" pos:end="184:52"><literal type="string" pos:start="184:31" pos:end="184:52">"interrupt-controller"</literal></expr></argument>)</argument_list></call><operator pos:start="184:54" pos:end="184:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="185:5" pos:end="186:75"><expr pos:start="185:5" pos:end="186:74"><call pos:start="185:5" pos:end="186:74"><name pos:start="185:5" pos:end="185:8">_FDT</name><argument_list pos:start="185:9" pos:end="186:74">(<argument pos:start="185:10" pos:end="186:73"><expr pos:start="185:10" pos:end="186:73"><operator pos:start="185:10" pos:end="185:10">(</operator><call pos:start="185:11" pos:end="186:72"><name pos:start="185:11" pos:end="185:29">fdt_property_string</name><argument_list pos:start="185:30" pos:end="186:72">(<argument pos:start="185:31" pos:end="185:33"><expr pos:start="185:31" pos:end="185:33"><name pos:start="185:31" pos:end="185:33">fdt</name></expr></argument>, <argument pos:start="185:36" pos:end="185:48"><expr pos:start="185:36" pos:end="185:48"><literal type="string" pos:start="185:36" pos:end="185:48">"device_type"</literal></expr></argument>,
                              <argument pos:start="186:31" pos:end="186:71"><expr pos:start="186:31" pos:end="186:71"><literal type="string" pos:start="186:31" pos:end="186:71">"PowerPC-External-Interrupt-Presentation"</literal></expr></argument>)</argument_list></call><operator pos:start="186:73" pos:end="186:73">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="187:5" pos:end="187:67"><expr pos:start="187:5" pos:end="187:66"><call pos:start="187:5" pos:end="187:66"><name pos:start="187:5" pos:end="187:8">_FDT</name><argument_list pos:start="187:9" pos:end="187:66">(<argument pos:start="187:10" pos:end="187:65"><expr pos:start="187:10" pos:end="187:65"><operator pos:start="187:10" pos:end="187:10">(</operator><call pos:start="187:11" pos:end="187:64"><name pos:start="187:11" pos:end="187:29">fdt_property_string</name><argument_list pos:start="187:30" pos:end="187:64">(<argument pos:start="187:31" pos:end="187:33"><expr pos:start="187:31" pos:end="187:33"><name pos:start="187:31" pos:end="187:33">fdt</name></expr></argument>, <argument pos:start="187:36" pos:end="187:47"><expr pos:start="187:36" pos:end="187:47"><literal type="string" pos:start="187:36" pos:end="187:47">"compatible"</literal></expr></argument>, <argument pos:start="187:50" pos:end="187:63"><expr pos:start="187:50" pos:end="187:63"><literal type="string" pos:start="187:50" pos:end="187:63">"IBM,ppc-xicp"</literal></expr></argument>)</argument_list></call><operator pos:start="187:65" pos:end="187:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="188:5" pos:end="188:63"><expr pos:start="188:5" pos:end="188:62"><call pos:start="188:5" pos:end="188:62"><name pos:start="188:5" pos:end="188:8">_FDT</name><argument_list pos:start="188:9" pos:end="188:62">(<argument pos:start="188:10" pos:end="188:61"><expr pos:start="188:10" pos:end="188:61"><operator pos:start="188:10" pos:end="188:10">(</operator><call pos:start="188:11" pos:end="188:60"><name pos:start="188:11" pos:end="188:22">fdt_property</name><argument_list pos:start="188:23" pos:end="188:60">(<argument pos:start="188:24" pos:end="188:26"><expr pos:start="188:24" pos:end="188:26"><name pos:start="188:24" pos:end="188:26">fdt</name></expr></argument>, <argument pos:start="188:29" pos:end="188:50"><expr pos:start="188:29" pos:end="188:50"><literal type="string" pos:start="188:29" pos:end="188:50">"interrupt-controller"</literal></expr></argument>, <argument pos:start="188:53" pos:end="188:56"><expr pos:start="188:53" pos:end="188:56"><name pos:start="188:53" pos:end="188:56">NULL</name></expr></argument>, <argument pos:start="188:59" pos:end="188:59"><expr pos:start="188:59" pos:end="188:59"><literal type="number" pos:start="188:59" pos:end="188:59">0</literal></expr></argument>)</argument_list></call><operator pos:start="188:61" pos:end="188:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="189:5" pos:end="191:63"><expr pos:start="189:5" pos:end="191:62"><call pos:start="189:5" pos:end="191:62"><name pos:start="189:5" pos:end="189:8">_FDT</name><argument_list pos:start="189:9" pos:end="191:62">(<argument pos:start="189:10" pos:end="191:61"><expr pos:start="189:10" pos:end="191:61"><operator pos:start="189:10" pos:end="189:10">(</operator><call pos:start="189:11" pos:end="191:60"><name pos:start="189:11" pos:end="189:22">fdt_property</name><argument_list pos:start="189:23" pos:end="191:60">(<argument pos:start="189:24" pos:end="189:26"><expr pos:start="189:24" pos:end="189:26"><name pos:start="189:24" pos:end="189:26">fdt</name></expr></argument>, <argument pos:start="189:29" pos:end="189:57"><expr pos:start="189:29" pos:end="189:57"><literal type="string" pos:start="189:29" pos:end="189:57">"ibm,interrupt-server-ranges"</literal></expr></argument>,
                       <argument pos:start="190:24" pos:end="190:51"><expr pos:start="190:24" pos:end="190:51"><name pos:start="190:24" pos:end="190:51">interrupt_server_ranges_prop</name></expr></argument>,
                       <argument pos:start="191:24" pos:end="191:59"><expr pos:start="191:24" pos:end="191:59"><sizeof pos:start="191:24" pos:end="191:59">sizeof<argument_list pos:start="191:30" pos:end="191:59">(<argument pos:start="191:31" pos:end="191:58"><expr pos:start="191:31" pos:end="191:58"><name pos:start="191:31" pos:end="191:58">interrupt_server_ranges_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="191:61" pos:end="191:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="192:5" pos:end="192:58"><expr pos:start="192:5" pos:end="192:57"><call pos:start="192:5" pos:end="192:57"><name pos:start="192:5" pos:end="192:8">_FDT</name><argument_list pos:start="192:9" pos:end="192:57">(<argument pos:start="192:10" pos:end="192:56"><expr pos:start="192:10" pos:end="192:56"><operator pos:start="192:10" pos:end="192:10">(</operator><call pos:start="192:11" pos:end="192:55"><name pos:start="192:11" pos:end="192:27">fdt_property_cell</name><argument_list pos:start="192:28" pos:end="192:55">(<argument pos:start="192:29" pos:end="192:31"><expr pos:start="192:29" pos:end="192:31"><name pos:start="192:29" pos:end="192:31">fdt</name></expr></argument>, <argument pos:start="192:34" pos:end="192:51"><expr pos:start="192:34" pos:end="192:51"><literal type="string" pos:start="192:34" pos:end="192:51">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="192:54" pos:end="192:54"><expr pos:start="192:54" pos:end="192:54"><literal type="number" pos:start="192:54" pos:end="192:54">2</literal></expr></argument>)</argument_list></call><operator pos:start="192:56" pos:end="192:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="193:5" pos:end="193:66"><expr pos:start="193:5" pos:end="193:65"><call pos:start="193:5" pos:end="193:65"><name pos:start="193:5" pos:end="193:8">_FDT</name><argument_list pos:start="193:9" pos:end="193:65">(<argument pos:start="193:10" pos:end="193:64"><expr pos:start="193:10" pos:end="193:64"><operator pos:start="193:10" pos:end="193:10">(</operator><call pos:start="193:11" pos:end="193:63"><name pos:start="193:11" pos:end="193:27">fdt_property_cell</name><argument_list pos:start="193:28" pos:end="193:63">(<argument pos:start="193:29" pos:end="193:31"><expr pos:start="193:29" pos:end="193:31"><name pos:start="193:29" pos:end="193:31">fdt</name></expr></argument>, <argument pos:start="193:34" pos:end="193:48"><expr pos:start="193:34" pos:end="193:48"><literal type="string" pos:start="193:34" pos:end="193:48">"linux,phandle"</literal></expr></argument>, <argument pos:start="193:51" pos:end="193:62"><expr pos:start="193:51" pos:end="193:62"><name pos:start="193:51" pos:end="193:62">PHANDLE_XICP</name></expr></argument>)</argument_list></call><operator pos:start="193:64" pos:end="193:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="194:5" pos:end="194:60"><expr pos:start="194:5" pos:end="194:59"><call pos:start="194:5" pos:end="194:59"><name pos:start="194:5" pos:end="194:8">_FDT</name><argument_list pos:start="194:9" pos:end="194:59">(<argument pos:start="194:10" pos:end="194:58"><expr pos:start="194:10" pos:end="194:58"><operator pos:start="194:10" pos:end="194:10">(</operator><call pos:start="194:11" pos:end="194:57"><name pos:start="194:11" pos:end="194:27">fdt_property_cell</name><argument_list pos:start="194:28" pos:end="194:57">(<argument pos:start="194:29" pos:end="194:31"><expr pos:start="194:29" pos:end="194:31"><name pos:start="194:29" pos:end="194:31">fdt</name></expr></argument>, <argument pos:start="194:34" pos:end="194:42"><expr pos:start="194:34" pos:end="194:42"><literal type="string" pos:start="194:34" pos:end="194:42">"phandle"</literal></expr></argument>, <argument pos:start="194:45" pos:end="194:56"><expr pos:start="194:45" pos:end="194:56"><name pos:start="194:45" pos:end="194:56">PHANDLE_XICP</name></expr></argument>)</argument_list></call><operator pos:start="194:58" pos:end="194:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="195:5" pos:end="195:30"><expr pos:start="195:5" pos:end="195:29"><call pos:start="195:5" pos:end="195:29"><name pos:start="195:5" pos:end="195:8">_FDT</name><argument_list pos:start="195:9" pos:end="195:29">(<argument pos:start="195:10" pos:end="195:28"><expr pos:start="195:10" pos:end="195:28"><operator pos:start="195:10" pos:end="195:10">(</operator><call pos:start="195:11" pos:end="195:27"><name pos:start="195:11" pos:end="195:22">fdt_end_node</name><argument_list pos:start="195:23" pos:end="195:27">(<argument pos:start="195:24" pos:end="195:26"><expr pos:start="195:24" pos:end="195:26"><name pos:start="195:24" pos:end="195:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="195:28" pos:end="195:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="196:5" pos:end="196:17">/* vdevice */</comment>
    <expr_stmt pos:start="197:5" pos:end="197:43"><expr pos:start="197:5" pos:end="197:42"><call pos:start="197:5" pos:end="197:42"><name pos:start="197:5" pos:end="197:8">_FDT</name><argument_list pos:start="197:9" pos:end="197:42">(<argument pos:start="197:10" pos:end="197:41"><expr pos:start="197:10" pos:end="197:41"><operator pos:start="197:10" pos:end="197:10">(</operator><call pos:start="197:11" pos:end="197:40"><name pos:start="197:11" pos:end="197:24">fdt_begin_node</name><argument_list pos:start="197:25" pos:end="197:40">(<argument pos:start="197:26" pos:end="197:28"><expr pos:start="197:26" pos:end="197:28"><name pos:start="197:26" pos:end="197:28">fdt</name></expr></argument>, <argument pos:start="197:31" pos:end="197:39"><expr pos:start="197:31" pos:end="197:39"><literal type="string" pos:start="197:31" pos:end="197:39">"vdevice"</literal></expr></argument>)</argument_list></call><operator pos:start="197:41" pos:end="197:41">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="198:5" pos:end="198:63"><expr pos:start="198:5" pos:end="198:62"><call pos:start="198:5" pos:end="198:62"><name pos:start="198:5" pos:end="198:8">_FDT</name><argument_list pos:start="198:9" pos:end="198:62">(<argument pos:start="198:10" pos:end="198:61"><expr pos:start="198:10" pos:end="198:61"><operator pos:start="198:10" pos:end="198:10">(</operator><call pos:start="198:11" pos:end="198:60"><name pos:start="198:11" pos:end="198:29">fdt_property_string</name><argument_list pos:start="198:30" pos:end="198:60">(<argument pos:start="198:31" pos:end="198:33"><expr pos:start="198:31" pos:end="198:33"><name pos:start="198:31" pos:end="198:33">fdt</name></expr></argument>, <argument pos:start="198:36" pos:end="198:48"><expr pos:start="198:36" pos:end="198:48"><literal type="string" pos:start="198:36" pos:end="198:48">"device_type"</literal></expr></argument>, <argument pos:start="198:51" pos:end="198:59"><expr pos:start="198:51" pos:end="198:59"><literal type="string" pos:start="198:51" pos:end="198:59">"vdevice"</literal></expr></argument>)</argument_list></call><operator pos:start="198:61" pos:end="198:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="199:5" pos:end="199:66"><expr pos:start="199:5" pos:end="199:65"><call pos:start="199:5" pos:end="199:65"><name pos:start="199:5" pos:end="199:8">_FDT</name><argument_list pos:start="199:9" pos:end="199:65">(<argument pos:start="199:10" pos:end="199:64"><expr pos:start="199:10" pos:end="199:64"><operator pos:start="199:10" pos:end="199:10">(</operator><call pos:start="199:11" pos:end="199:63"><name pos:start="199:11" pos:end="199:29">fdt_property_string</name><argument_list pos:start="199:30" pos:end="199:63">(<argument pos:start="199:31" pos:end="199:33"><expr pos:start="199:31" pos:end="199:33"><name pos:start="199:31" pos:end="199:33">fdt</name></expr></argument>, <argument pos:start="199:36" pos:end="199:47"><expr pos:start="199:36" pos:end="199:47"><literal type="string" pos:start="199:36" pos:end="199:47">"compatible"</literal></expr></argument>, <argument pos:start="199:50" pos:end="199:62"><expr pos:start="199:50" pos:end="199:62"><literal type="string" pos:start="199:50" pos:end="199:62">"IBM,vdevice"</literal></expr></argument>)</argument_list></call><operator pos:start="199:64" pos:end="199:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="200:5" pos:end="200:58"><expr pos:start="200:5" pos:end="200:57"><call pos:start="200:5" pos:end="200:57"><name pos:start="200:5" pos:end="200:8">_FDT</name><argument_list pos:start="200:9" pos:end="200:57">(<argument pos:start="200:10" pos:end="200:56"><expr pos:start="200:10" pos:end="200:56"><operator pos:start="200:10" pos:end="200:10">(</operator><call pos:start="200:11" pos:end="200:55"><name pos:start="200:11" pos:end="200:27">fdt_property_cell</name><argument_list pos:start="200:28" pos:end="200:55">(<argument pos:start="200:29" pos:end="200:31"><expr pos:start="200:29" pos:end="200:31"><name pos:start="200:29" pos:end="200:31">fdt</name></expr></argument>, <argument pos:start="200:34" pos:end="200:49"><expr pos:start="200:34" pos:end="200:49"><literal type="string" pos:start="200:34" pos:end="200:49">"#address-cells"</literal></expr></argument>, <argument pos:start="200:52" pos:end="200:54"><expr pos:start="200:52" pos:end="200:54"><literal type="number" pos:start="200:52" pos:end="200:54">0x1</literal></expr></argument>)</argument_list></call><operator pos:start="200:56" pos:end="200:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="201:5" pos:end="201:55"><expr pos:start="201:5" pos:end="201:54"><call pos:start="201:5" pos:end="201:54"><name pos:start="201:5" pos:end="201:8">_FDT</name><argument_list pos:start="201:9" pos:end="201:54">(<argument pos:start="201:10" pos:end="201:53"><expr pos:start="201:10" pos:end="201:53"><operator pos:start="201:10" pos:end="201:10">(</operator><call pos:start="201:11" pos:end="201:52"><name pos:start="201:11" pos:end="201:27">fdt_property_cell</name><argument_list pos:start="201:28" pos:end="201:52">(<argument pos:start="201:29" pos:end="201:31"><expr pos:start="201:29" pos:end="201:31"><name pos:start="201:29" pos:end="201:31">fdt</name></expr></argument>, <argument pos:start="201:34" pos:end="201:46"><expr pos:start="201:34" pos:end="201:46"><literal type="string" pos:start="201:34" pos:end="201:46">"#size-cells"</literal></expr></argument>, <argument pos:start="201:49" pos:end="201:51"><expr pos:start="201:49" pos:end="201:51"><literal type="number" pos:start="201:49" pos:end="201:51">0x0</literal></expr></argument>)</argument_list></call><operator pos:start="201:53" pos:end="201:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="202:5" pos:end="202:60"><expr pos:start="202:5" pos:end="202:59"><call pos:start="202:5" pos:end="202:59"><name pos:start="202:5" pos:end="202:8">_FDT</name><argument_list pos:start="202:9" pos:end="202:59">(<argument pos:start="202:10" pos:end="202:58"><expr pos:start="202:10" pos:end="202:58"><operator pos:start="202:10" pos:end="202:10">(</operator><call pos:start="202:11" pos:end="202:57"><name pos:start="202:11" pos:end="202:27">fdt_property_cell</name><argument_list pos:start="202:28" pos:end="202:57">(<argument pos:start="202:29" pos:end="202:31"><expr pos:start="202:29" pos:end="202:31"><name pos:start="202:29" pos:end="202:31">fdt</name></expr></argument>, <argument pos:start="202:34" pos:end="202:51"><expr pos:start="202:34" pos:end="202:51"><literal type="string" pos:start="202:34" pos:end="202:51">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="202:54" pos:end="202:56"><expr pos:start="202:54" pos:end="202:56"><literal type="number" pos:start="202:54" pos:end="202:56">0x2</literal></expr></argument>)</argument_list></call><operator pos:start="202:58" pos:end="202:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="203:5" pos:end="203:63"><expr pos:start="203:5" pos:end="203:62"><call pos:start="203:5" pos:end="203:62"><name pos:start="203:5" pos:end="203:8">_FDT</name><argument_list pos:start="203:9" pos:end="203:62">(<argument pos:start="203:10" pos:end="203:61"><expr pos:start="203:10" pos:end="203:61"><operator pos:start="203:10" pos:end="203:10">(</operator><call pos:start="203:11" pos:end="203:60"><name pos:start="203:11" pos:end="203:22">fdt_property</name><argument_list pos:start="203:23" pos:end="203:60">(<argument pos:start="203:24" pos:end="203:26"><expr pos:start="203:24" pos:end="203:26"><name pos:start="203:24" pos:end="203:26">fdt</name></expr></argument>, <argument pos:start="203:29" pos:end="203:50"><expr pos:start="203:29" pos:end="203:50"><literal type="string" pos:start="203:29" pos:end="203:50">"interrupt-controller"</literal></expr></argument>, <argument pos:start="203:53" pos:end="203:56"><expr pos:start="203:53" pos:end="203:56"><name pos:start="203:53" pos:end="203:56">NULL</name></expr></argument>, <argument pos:start="203:59" pos:end="203:59"><expr pos:start="203:59" pos:end="203:59"><literal type="number" pos:start="203:59" pos:end="203:59">0</literal></expr></argument>)</argument_list></call><operator pos:start="203:61" pos:end="203:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="204:5" pos:end="204:30"><expr pos:start="204:5" pos:end="204:29"><call pos:start="204:5" pos:end="204:29"><name pos:start="204:5" pos:end="204:8">_FDT</name><argument_list pos:start="204:9" pos:end="204:29">(<argument pos:start="204:10" pos:end="204:28"><expr pos:start="204:10" pos:end="204:28"><operator pos:start="204:10" pos:end="204:10">(</operator><call pos:start="204:11" pos:end="204:27"><name pos:start="204:11" pos:end="204:22">fdt_end_node</name><argument_list pos:start="204:23" pos:end="204:27">(<argument pos:start="204:24" pos:end="204:26"><expr pos:start="204:24" pos:end="204:26"><name pos:start="204:24" pos:end="204:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="204:28" pos:end="204:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="205:5" pos:end="205:30"><expr pos:start="205:5" pos:end="205:29"><call pos:start="205:5" pos:end="205:29"><name pos:start="205:5" pos:end="205:8">_FDT</name><argument_list pos:start="205:9" pos:end="205:29">(<argument pos:start="205:10" pos:end="205:28"><expr pos:start="205:10" pos:end="205:28"><operator pos:start="205:10" pos:end="205:10">(</operator><call pos:start="205:11" pos:end="205:27"><name pos:start="205:11" pos:end="205:22">fdt_end_node</name><argument_list pos:start="205:23" pos:end="205:27">(<argument pos:start="205:24" pos:end="205:26"><expr pos:start="205:24" pos:end="205:26"><name pos:start="205:24" pos:end="205:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="205:28" pos:end="205:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="205:32" pos:end="205:52">/* close root node */</comment>
    <expr_stmt pos:start="206:5" pos:end="206:28"><expr pos:start="206:5" pos:end="206:27"><call pos:start="206:5" pos:end="206:27"><name pos:start="206:5" pos:end="206:8">_FDT</name><argument_list pos:start="206:9" pos:end="206:27">(<argument pos:start="206:10" pos:end="206:26"><expr pos:start="206:10" pos:end="206:26"><operator pos:start="206:10" pos:end="206:10">(</operator><call pos:start="206:11" pos:end="206:25"><name pos:start="206:11" pos:end="206:20">fdt_finish</name><argument_list pos:start="206:21" pos:end="206:25">(<argument pos:start="206:22" pos:end="206:24"><expr pos:start="206:22" pos:end="206:24"><name pos:start="206:22" pos:end="206:24">fdt</name></expr></argument>)</argument_list></call><operator pos:start="206:26" pos:end="206:26">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="207:5" pos:end="207:15">return <expr pos:start="207:12" pos:end="207:14"><name pos:start="207:12" pos:end="207:14">fdt</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
