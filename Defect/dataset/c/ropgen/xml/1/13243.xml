<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13243.c" pos:tabs="8"><function pos:start="1:1" pos:end="683:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="1:102">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:51">void</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">data</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:73"><decl pos:start="1:60" pos:end="1:73"><type pos:start="1:60" pos:end="1:73"><name pos:start="1:60" pos:end="1:62">int</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:73">data_size</name></decl></parameter>, <parameter pos:start="1:76" pos:end="1:87"><decl pos:start="1:76" pos:end="1:87"><type pos:start="1:76" pos:end="1:87"><name pos:start="1:76" pos:end="1:82">uint8_t</name> <modifier pos:start="1:84" pos:end="1:84">*</modifier></type><name pos:start="1:85" pos:end="1:87">buf</name></decl></parameter>, <parameter pos:start="1:90" pos:end="1:101"><decl pos:start="1:90" pos:end="1:101"><type pos:start="1:90" pos:end="1:101"><name pos:start="1:90" pos:end="1:92">int</name></type> <name pos:start="1:94" pos:end="1:101">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="683:1">{<block_content pos:start="5:9" pos:end="681:20">

	<decl_stmt pos:start="5:9" pos:end="5:62"><decl pos:start="5:9" pos:end="5:61"><type pos:start="5:9" pos:end="5:26"><name pos:start="5:9" pos:end="5:18">LclContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier> <specifier pos:start="5:22" pos:end="5:26">const</specifier></type> <name pos:start="5:28" pos:end="5:28">c</name> <init pos:start="5:30" pos:end="5:61">= <expr pos:start="5:32" pos:end="5:61"><operator pos:start="5:32" pos:end="5:32">(</operator><name pos:start="5:33" pos:end="5:42">LclContext</name> <operator pos:start="5:44" pos:end="5:44">*</operator><operator pos:start="5:45" pos:end="5:45">)</operator><name pos:start="5:46" pos:end="5:61"><name pos:start="5:46" pos:end="5:50">avctx</name><operator pos:start="5:51" pos:end="5:52">-&gt;</operator><name pos:start="5:53" pos:end="5:61">priv_data</name></name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:54"><decl pos:start="7:9" pos:end="7:53"><type pos:start="7:9" pos:end="7:23"><name pos:start="7:9" pos:end="7:16">unsigned</name> <name pos:start="7:18" pos:end="7:21">char</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:30">encoded</name> <init pos:start="7:32" pos:end="7:53">= <expr pos:start="7:34" pos:end="7:53"><operator pos:start="7:34" pos:end="7:34">(</operator><name pos:start="7:35" pos:end="7:42">unsigned</name> <name pos:start="7:44" pos:end="7:47">char</name> <operator pos:start="7:49" pos:end="7:49">*</operator><operator pos:start="7:50" pos:end="7:50">)</operator><name pos:start="7:51" pos:end="7:53">buf</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">pixel_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">row</name></decl>, <decl pos:start="11:14" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:16">col</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">char</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:25">outptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:38"><decl pos:start="15:5" pos:end="15:37"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:22">width</name> <init pos:start="15:24" pos:end="15:37">= <expr pos:start="15:26" pos:end="15:37"><name pos:start="15:26" pos:end="15:37"><name pos:start="15:26" pos:end="15:30">avctx</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:37">width</name></name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="15:40" pos:end="15:58">// Real image width</comment>

    <decl_stmt pos:start="17:5" pos:end="17:40"><decl pos:start="17:5" pos:end="17:39"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:23">height</name> <init pos:start="17:25" pos:end="17:39">= <expr pos:start="17:27" pos:end="17:39"><name pos:start="17:27" pos:end="17:39"><name pos:start="17:27" pos:end="17:31">avctx</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:39">height</name></name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="17:42" pos:end="17:61">// Real image height</comment>

    <decl_stmt pos:start="19:5" pos:end="19:27"><decl pos:start="19:5" pos:end="19:26"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:16">int</name></type> <name pos:start="19:18" pos:end="19:26">mszh_dlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:34"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:17">char</name></type> <name pos:start="21:19" pos:end="21:20">yq</name></decl>, <decl pos:start="21:23" pos:end="21:25"><type ref="prev" pos:start="21:5" pos:end="21:17"/><name pos:start="21:23" pos:end="21:25">y1q</name></decl>, <decl pos:start="21:28" pos:end="21:29"><type ref="prev" pos:start="21:5" pos:end="21:17"/><name pos:start="21:28" pos:end="21:29">uq</name></decl>, <decl pos:start="21:32" pos:end="21:33"><type ref="prev" pos:start="21:5" pos:end="21:17"/><name pos:start="21:32" pos:end="21:33">vq</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:13"><decl pos:start="23:5" pos:end="23:12"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:12">uqvq</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="28:0"><decl pos:start="25:5" pos:end="25:30"><type pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:12">unsigned</name> <name pos:start="25:14" pos:end="25:16">int</name></type> <name pos:start="25:18" pos:end="25:30">mthread_inlen</name></decl>, <decl pos:start="25:33" pos:end="25:46"><type ref="prev" pos:start="25:5" pos:end="25:16"/><name pos:start="25:33" pos:end="25:46">mthread_outlen</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="27:1" pos:end="27:18">#<cpp:directive pos:start="27:2" pos:end="27:6">ifdef</cpp:directive> <name pos:start="27:8" pos:end="27:18">CONFIG_ZLIB</name></cpp:ifdef>

    <decl_stmt pos:start="29:5" pos:end="32:0"><decl pos:start="29:5" pos:end="29:12"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:12">zret</name></decl>;</decl_stmt> <comment type="line" pos:start="29:15" pos:end="29:33">// Zlib return code</comment>

<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif>

    <decl_stmt pos:start="33:5" pos:end="33:23"><decl pos:start="33:5" pos:end="33:22"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:11">len</name> <init pos:start="33:13" pos:end="33:22">= <expr pos:start="33:15" pos:end="33:22"><name pos:start="33:15" pos:end="33:22">buf_size</name></expr></init></decl>;</decl_stmt>



	<comment type="block" pos:start="37:9" pos:end="37:38">/* no supplementary picture */</comment>

	<if_stmt pos:start="39:9" pos:end="41:25"><if pos:start="39:9" pos:end="41:25">if <condition pos:start="39:12" pos:end="39:26">(<expr pos:start="39:13" pos:end="39:25"><name pos:start="39:13" pos:end="39:20">buf_size</name> <operator pos:start="39:22" pos:end="39:23">==</operator> <literal type="number" pos:start="39:25" pos:end="39:25">0</literal></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:25"><block_content pos:start="41:17" pos:end="41:25">

		<return pos:start="41:17" pos:end="41:25">return <expr pos:start="41:24" pos:end="41:24"><literal type="number" pos:start="41:24" pos:end="41:24">0</literal></expr>;</return></block_content></block></if></if_stmt>



	<if_stmt pos:start="45:9" pos:end="47:54"><if pos:start="45:9" pos:end="47:54">if<condition pos:start="45:11" pos:end="45:26">(<expr pos:start="45:12" pos:end="45:25"><name pos:start="45:12" pos:end="45:25"><name pos:start="45:12" pos:end="45:12">c</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:17">pic</name><operator pos:start="45:18" pos:end="45:18">.</operator><name pos:start="45:19" pos:end="45:22">data</name><index pos:start="45:23" pos:end="45:25">[<expr pos:start="45:24" pos:end="45:24"><literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:54"><block_content pos:start="47:17" pos:end="47:54">

		<expr_stmt pos:start="47:17" pos:end="47:54"><expr pos:start="47:17" pos:end="47:53"><call pos:start="47:17" pos:end="47:53"><name pos:start="47:17" pos:end="47:37"><name pos:start="47:17" pos:end="47:21">avctx</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:37">release_buffer</name></name><argument_list pos:start="47:38" pos:end="47:53">(<argument pos:start="47:39" pos:end="47:43"><expr pos:start="47:39" pos:end="47:43"><name pos:start="47:39" pos:end="47:43">avctx</name></expr></argument>, <argument pos:start="47:46" pos:end="47:52"><expr pos:start="47:46" pos:end="47:52"><operator pos:start="47:46" pos:end="47:46">&amp;</operator><name pos:start="47:47" pos:end="47:52"><name pos:start="47:47" pos:end="47:47">c</name><operator pos:start="47:48" pos:end="47:49">-&gt;</operator><name pos:start="47:50" pos:end="47:52">pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



	<expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:9">c</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:14">pic</name><operator pos:start="51:15" pos:end="51:15">.</operator><name pos:start="51:16" pos:end="51:24">reference</name></name> <operator pos:start="51:26" pos:end="51:26">=</operator> <literal type="number" pos:start="51:28" pos:end="51:28">0</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="53:9" pos:end="53:52"><expr pos:start="53:9" pos:end="53:51"><name pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:9">c</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:14">pic</name><operator pos:start="53:15" pos:end="53:15">.</operator><name pos:start="53:16" pos:end="53:27">buffer_hints</name></name> <operator pos:start="53:29" pos:end="53:29">=</operator> <name pos:start="53:31" pos:end="53:51">FF_BUFFER_HINTS_VALID</name></expr>;</expr_stmt>

	<if_stmt pos:start="55:9" pos:end="61:9"><if pos:start="55:9" pos:end="61:9">if<condition pos:start="55:11" pos:end="55:49">(<expr pos:start="55:12" pos:end="55:48"><call pos:start="55:12" pos:end="55:44"><name pos:start="55:12" pos:end="55:28"><name pos:start="55:12" pos:end="55:16">avctx</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:28">get_buffer</name></name><argument_list pos:start="55:29" pos:end="55:44">(<argument pos:start="55:30" pos:end="55:34"><expr pos:start="55:30" pos:end="55:34"><name pos:start="55:30" pos:end="55:34">avctx</name></expr></argument>, <argument pos:start="55:37" pos:end="55:43"><expr pos:start="55:37" pos:end="55:43"><operator pos:start="55:37" pos:end="55:37">&amp;</operator><name pos:start="55:38" pos:end="55:43"><name pos:start="55:38" pos:end="55:38">c</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:43">pic</name></name></expr></argument>)</argument_list></call> <operator pos:start="55:46" pos:end="55:46">&lt;</operator> <literal type="number" pos:start="55:48" pos:end="55:48">0</literal></expr>)</condition><block pos:start="55:50" pos:end="61:9">{<block_content pos:start="57:17" pos:end="59:26">

		<expr_stmt pos:start="57:17" pos:end="57:69"><expr pos:start="57:17" pos:end="57:68"><call pos:start="57:17" pos:end="57:68"><name pos:start="57:17" pos:end="57:22">av_log</name><argument_list pos:start="57:23" pos:end="57:68">(<argument pos:start="57:24" pos:end="57:28"><expr pos:start="57:24" pos:end="57:28"><name pos:start="57:24" pos:end="57:28">avctx</name></expr></argument>, <argument pos:start="57:31" pos:end="57:42"><expr pos:start="57:31" pos:end="57:42"><name pos:start="57:31" pos:end="57:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:45" pos:end="57:67"><expr pos:start="57:45" pos:end="57:67"><literal type="string" pos:start="57:45" pos:end="57:67">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="59:17" pos:end="59:26">return <expr pos:start="59:24" pos:end="59:25"><operator pos:start="59:24" pos:end="59:24">-</operator><literal type="number" pos:start="59:25" pos:end="59:25">1</literal></expr>;</return>

	</block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:28"><expr pos:start="65:5" pos:end="65:27"><name pos:start="65:5" pos:end="65:10">outptr</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <name pos:start="65:14" pos:end="65:27"><name pos:start="65:14" pos:end="65:14">c</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:19">pic</name><operator pos:start="65:20" pos:end="65:20">.</operator><name pos:start="65:21" pos:end="65:24">data</name><index pos:start="65:25" pos:end="65:27">[<expr pos:start="65:26" pos:end="65:26"><literal type="number" pos:start="65:26" pos:end="65:26">0</literal></expr>]</index></name></expr>;</expr_stmt> <comment type="line" pos:start="65:30" pos:end="65:52">// Output image pointer</comment>



    <comment type="block" pos:start="69:5" pos:end="69:26">/* Decompress frame */</comment>

    <switch pos:start="71:5" pos:end="289:5">switch <condition pos:start="71:12" pos:end="71:28">(<expr pos:start="71:13" pos:end="71:27"><name pos:start="71:13" pos:end="71:27"><name pos:start="71:13" pos:end="71:17">avctx</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:27">codec_id</name></name></expr>)</condition> <block pos:start="71:30" pos:end="289:5">{<block_content pos:start="73:9" pos:end="287:22">

        <case pos:start="73:9" pos:end="73:27">case <expr pos:start="73:14" pos:end="73:26"><name pos:start="73:14" pos:end="73:26">CODEC_ID_MSZH</name></expr>:</case>

            <switch pos:start="75:13" pos:end="141:13">switch <condition pos:start="75:20" pos:end="75:35">(<expr pos:start="75:21" pos:end="75:34"><name pos:start="75:21" pos:end="75:34"><name pos:start="75:21" pos:end="75:21">c</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:34">compression</name></name></expr>)</condition> <block pos:start="75:37" pos:end="141:13">{<block_content pos:start="77:17" pos:end="139:30">

                <case pos:start="77:17" pos:end="77:31">case <expr pos:start="77:22" pos:end="77:30"><name pos:start="77:22" pos:end="77:30">COMP_MSZH</name></expr>:</case>

                    <if_stmt pos:start="79:21" pos:end="127:21"><if pos:start="79:21" pos:end="111:21">if <condition pos:start="79:24" pos:end="79:52">(<expr pos:start="79:25" pos:end="79:51"><name pos:start="79:25" pos:end="79:32"><name pos:start="79:25" pos:end="79:25">c</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:32">flags</name></name> <operator pos:start="79:34" pos:end="79:34">&amp;</operator> <name pos:start="79:36" pos:end="79:51">FLAG_MULTITHREAD</name></expr>)</condition> <block pos:start="79:54" pos:end="111:21">{<block_content pos:start="81:25" pos:end="109:45">

                        <expr_stmt pos:start="81:25" pos:end="81:66"><expr pos:start="81:25" pos:end="81:65"><name pos:start="81:25" pos:end="81:37">mthread_inlen</name> <operator pos:start="81:39" pos:end="81:39">=</operator> <operator pos:start="81:41" pos:end="81:41">*</operator><operator pos:start="81:42" pos:end="81:42">(</operator><operator pos:start="81:43" pos:end="81:43">(</operator><name pos:start="81:44" pos:end="81:51">unsigned</name> <name pos:start="81:53" pos:end="81:55">int</name><operator pos:start="81:56" pos:end="81:56">*</operator><operator pos:start="81:57" pos:end="81:57">)</operator><name pos:start="81:58" pos:end="81:64">encoded</name><operator pos:start="81:65" pos:end="81:65">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="83:25" pos:end="83:71"><expr pos:start="83:25" pos:end="83:70"><name pos:start="83:25" pos:end="83:38">mthread_outlen</name> <operator pos:start="83:40" pos:end="83:40">=</operator> <operator pos:start="83:42" pos:end="83:42">*</operator><operator pos:start="83:43" pos:end="83:43">(</operator><operator pos:start="83:44" pos:end="83:44">(</operator><name pos:start="83:45" pos:end="83:52">unsigned</name> <name pos:start="83:54" pos:end="83:56">int</name><operator pos:start="83:57" pos:end="83:57">*</operator><operator pos:start="83:58" pos:end="83:58">)</operator><operator pos:start="83:59" pos:end="83:59">(</operator><name pos:start="83:60" pos:end="83:66">encoded</name><operator pos:start="83:67" pos:end="83:67">+</operator><literal type="number" pos:start="83:68" pos:end="83:68">4</literal><operator pos:start="83:69" pos:end="83:69">)</operator><operator pos:start="83:70" pos:end="83:70">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="85:25" pos:end="85:91"><expr pos:start="85:25" pos:end="85:90"><name pos:start="85:25" pos:end="85:33">mszh_dlen</name> <operator pos:start="85:35" pos:end="85:35">=</operator> <call pos:start="85:37" pos:end="85:90"><name pos:start="85:37" pos:end="85:47">mszh_decomp</name><argument_list pos:start="85:48" pos:end="85:90">(<argument pos:start="85:49" pos:end="85:59"><expr pos:start="85:49" pos:end="85:59"><name pos:start="85:49" pos:end="85:55">encoded</name> <operator pos:start="85:57" pos:end="85:57">+</operator> <literal type="number" pos:start="85:59" pos:end="85:59">8</literal></expr></argument>, <argument pos:start="85:62" pos:end="85:74"><expr pos:start="85:62" pos:end="85:74"><name pos:start="85:62" pos:end="85:74">mthread_inlen</name></expr></argument>, <argument pos:start="85:77" pos:end="85:89"><expr pos:start="85:77" pos:end="85:89"><name pos:start="85:77" pos:end="85:89"><name pos:start="85:77" pos:end="85:77">c</name><operator pos:start="85:78" pos:end="85:79">-&gt;</operator><name pos:start="85:80" pos:end="85:89">decomp_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="87:25" pos:end="93:25"><if pos:start="87:25" pos:end="93:25">if <condition pos:start="87:28" pos:end="87:56">(<expr pos:start="87:29" pos:end="87:55"><name pos:start="87:29" pos:end="87:42">mthread_outlen</name> <operator pos:start="87:44" pos:end="87:45">!=</operator> <name pos:start="87:47" pos:end="87:55">mszh_dlen</name></expr>)</condition> <block pos:start="87:58" pos:end="93:25">{<block_content pos:start="89:29" pos:end="91:62">

                            <expr_stmt pos:start="89:29" pos:end="91:62"><expr pos:start="89:29" pos:end="91:61"><call pos:start="89:29" pos:end="91:61"><name pos:start="89:29" pos:end="89:34">av_log</name><argument_list pos:start="89:35" pos:end="91:61">(<argument pos:start="89:36" pos:end="89:40"><expr pos:start="89:36" pos:end="89:40"><name pos:start="89:36" pos:end="89:40">avctx</name></expr></argument>, <argument pos:start="89:43" pos:end="89:54"><expr pos:start="89:43" pos:end="89:54"><name pos:start="89:43" pos:end="89:54">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:57" pos:end="89:100"><expr pos:start="89:57" pos:end="89:100"><literal type="string" pos:start="89:57" pos:end="89:100">"Mthread1 decoded size differs (%d != %d)\n"</literal></expr></argument>,

                                   <argument pos:start="91:36" pos:end="91:49"><expr pos:start="91:36" pos:end="91:49"><name pos:start="91:36" pos:end="91:49">mthread_outlen</name></expr></argument>, <argument pos:start="91:52" pos:end="91:60"><expr pos:start="91:52" pos:end="91:60"><name pos:start="91:52" pos:end="91:60">mszh_dlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="95:25" pos:end="97:80"><expr pos:start="95:25" pos:end="97:79"><name pos:start="95:25" pos:end="95:33">mszh_dlen</name> <operator pos:start="95:35" pos:end="95:35">=</operator> <call pos:start="95:37" pos:end="97:79"><name pos:start="95:37" pos:end="95:47">mszh_decomp</name><argument_list pos:start="95:48" pos:end="97:79">(<argument pos:start="95:49" pos:end="95:75"><expr pos:start="95:49" pos:end="95:75"><name pos:start="95:49" pos:end="95:55">encoded</name> <operator pos:start="95:57" pos:end="95:57">+</operator> <literal type="number" pos:start="95:59" pos:end="95:61">8</literal> <operator pos:start="95:61" pos:end="95:61">+</operator> <name pos:start="95:63" pos:end="95:75">mthread_inlen</name></expr></argument>, <argument pos:start="95:78" pos:end="95:96"><expr pos:start="95:78" pos:end="95:96"><name pos:start="95:78" pos:end="95:80">len</name> <operator pos:start="95:82" pos:end="95:82">-</operator> <name pos:start="95:84" pos:end="95:96">mthread_inlen</name></expr></argument>,

                                                <argument pos:start="97:49" pos:end="97:78"><expr pos:start="97:49" pos:end="97:78"><name pos:start="97:49" pos:end="97:61"><name pos:start="97:49" pos:end="97:49">c</name><operator pos:start="97:50" pos:end="97:51">-&gt;</operator><name pos:start="97:52" pos:end="97:61">decomp_buf</name></name> <operator pos:start="97:63" pos:end="97:63">+</operator> <name pos:start="97:65" pos:end="97:78">mthread_outlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="99:25" pos:end="105:25"><if pos:start="99:25" pos:end="105:25">if <condition pos:start="99:28" pos:end="99:75">(<expr pos:start="99:29" pos:end="99:74"><operator pos:start="99:29" pos:end="99:29">(</operator><name pos:start="99:30" pos:end="99:43"><name pos:start="99:30" pos:end="99:30">c</name><operator pos:start="99:31" pos:end="99:32">-&gt;</operator><name pos:start="99:33" pos:end="99:43">decomp_size</name></name> <operator pos:start="99:45" pos:end="99:45">-</operator> <name pos:start="99:47" pos:end="99:60">mthread_outlen</name><operator pos:start="99:61" pos:end="99:61">)</operator> <operator pos:start="99:63" pos:end="99:64">!=</operator> <name pos:start="99:66" pos:end="99:74">mszh_dlen</name></expr>)</condition> <block pos:start="99:77" pos:end="105:25">{<block_content pos:start="101:29" pos:end="103:79">

                            <expr_stmt pos:start="101:29" pos:end="103:79"><expr pos:start="101:29" pos:end="103:78"><call pos:start="101:29" pos:end="103:78"><name pos:start="101:29" pos:end="101:34">av_log</name><argument_list pos:start="101:35" pos:end="103:78">(<argument pos:start="101:36" pos:end="101:40"><expr pos:start="101:36" pos:end="101:40"><name pos:start="101:36" pos:end="101:40">avctx</name></expr></argument>, <argument pos:start="101:43" pos:end="101:54"><expr pos:start="101:43" pos:end="101:54"><name pos:start="101:43" pos:end="101:54">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:57" pos:end="101:100"><expr pos:start="101:57" pos:end="101:100"><literal type="string" pos:start="101:57" pos:end="101:100">"Mthread2 decoded size differs (%d != %d)\n"</literal></expr></argument>,

                                   <argument pos:start="103:36" pos:end="103:66"><expr pos:start="103:36" pos:end="103:66"><name pos:start="103:36" pos:end="103:49"><name pos:start="103:36" pos:end="103:36">c</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:49">decomp_size</name></name> <operator pos:start="103:51" pos:end="103:51">-</operator> <name pos:start="103:53" pos:end="103:66">mthread_outlen</name></expr></argument>, <argument pos:start="103:69" pos:end="103:77"><expr pos:start="103:69" pos:end="103:77"><name pos:start="103:69" pos:end="103:77">mszh_dlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="107:25" pos:end="107:48"><expr pos:start="107:25" pos:end="107:47"><name pos:start="107:25" pos:end="107:31">encoded</name> <operator pos:start="107:33" pos:end="107:33">=</operator> <name pos:start="107:35" pos:end="107:47"><name pos:start="107:35" pos:end="107:35">c</name><operator pos:start="107:36" pos:end="107:37">-&gt;</operator><name pos:start="107:38" pos:end="107:47">decomp_buf</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="109:25" pos:end="109:45"><expr pos:start="109:25" pos:end="109:44"><name pos:start="109:25" pos:end="109:27">len</name> <operator pos:start="109:29" pos:end="109:29">=</operator> <name pos:start="109:31" pos:end="109:44"><name pos:start="109:31" pos:end="109:31">c</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:44">decomp_size</name></name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="111:23" pos:end="127:21">else <block pos:start="111:28" pos:end="127:21">{<block_content pos:start="113:25" pos:end="125:40">

                        <expr_stmt pos:start="113:25" pos:end="113:77"><expr pos:start="113:25" pos:end="113:76"><name pos:start="113:25" pos:end="113:33">mszh_dlen</name> <operator pos:start="113:35" pos:end="113:35">=</operator> <call pos:start="113:37" pos:end="113:76"><name pos:start="113:37" pos:end="113:47">mszh_decomp</name><argument_list pos:start="113:48" pos:end="113:76">(<argument pos:start="113:49" pos:end="113:55"><expr pos:start="113:49" pos:end="113:55"><name pos:start="113:49" pos:end="113:55">encoded</name></expr></argument>, <argument pos:start="113:58" pos:end="113:60"><expr pos:start="113:58" pos:end="113:60"><name pos:start="113:58" pos:end="113:60">len</name></expr></argument>, <argument pos:start="113:63" pos:end="113:75"><expr pos:start="113:63" pos:end="113:75"><name pos:start="113:63" pos:end="113:75"><name pos:start="113:63" pos:end="113:63">c</name><operator pos:start="113:64" pos:end="113:65">-&gt;</operator><name pos:start="113:66" pos:end="113:75">decomp_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="115:25" pos:end="121:25"><if pos:start="115:25" pos:end="121:25">if <condition pos:start="115:28" pos:end="115:56">(<expr pos:start="115:29" pos:end="115:55"><name pos:start="115:29" pos:end="115:42"><name pos:start="115:29" pos:end="115:29">c</name><operator pos:start="115:30" pos:end="115:31">-&gt;</operator><name pos:start="115:32" pos:end="115:42">decomp_size</name></name> <operator pos:start="115:44" pos:end="115:45">!=</operator> <name pos:start="115:47" pos:end="115:55">mszh_dlen</name></expr>)</condition> <block pos:start="115:58" pos:end="121:25">{<block_content pos:start="117:29" pos:end="119:62">

                            <expr_stmt pos:start="117:29" pos:end="119:62"><expr pos:start="117:29" pos:end="119:61"><call pos:start="117:29" pos:end="119:61"><name pos:start="117:29" pos:end="117:34">av_log</name><argument_list pos:start="117:35" pos:end="119:61">(<argument pos:start="117:36" pos:end="117:40"><expr pos:start="117:36" pos:end="117:40"><name pos:start="117:36" pos:end="117:40">avctx</name></expr></argument>, <argument pos:start="117:43" pos:end="117:54"><expr pos:start="117:43" pos:end="117:54"><name pos:start="117:43" pos:end="117:54">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="117:57" pos:end="117:91"><expr pos:start="117:57" pos:end="117:91"><literal type="string" pos:start="117:57" pos:end="117:91">"Decoded size differs (%d != %d)\n"</literal></expr></argument>,

                                   <argument pos:start="119:36" pos:end="119:49"><expr pos:start="119:36" pos:end="119:49"><name pos:start="119:36" pos:end="119:49"><name pos:start="119:36" pos:end="119:36">c</name><operator pos:start="119:37" pos:end="119:38">-&gt;</operator><name pos:start="119:39" pos:end="119:49">decomp_size</name></name></expr></argument>, <argument pos:start="119:52" pos:end="119:60"><expr pos:start="119:52" pos:end="119:60"><name pos:start="119:52" pos:end="119:60">mszh_dlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="123:25" pos:end="123:48"><expr pos:start="123:25" pos:end="123:47"><name pos:start="123:25" pos:end="123:31">encoded</name> <operator pos:start="123:33" pos:end="123:33">=</operator> <name pos:start="123:35" pos:end="123:47"><name pos:start="123:35" pos:end="123:35">c</name><operator pos:start="123:36" pos:end="123:37">-&gt;</operator><name pos:start="123:38" pos:end="123:47">decomp_buf</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="125:25" pos:end="125:40"><expr pos:start="125:25" pos:end="125:39"><name pos:start="125:25" pos:end="125:27">len</name> <operator pos:start="125:29" pos:end="125:29">=</operator> <name pos:start="125:31" pos:end="125:39">mszh_dlen</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <break pos:start="129:21" pos:end="129:26">break;</break>

                <case pos:start="131:17" pos:end="131:38">case <expr pos:start="131:22" pos:end="131:37"><name pos:start="131:22" pos:end="131:37">COMP_MSZH_NOCOMP</name></expr>:</case>

                    <break pos:start="133:21" pos:end="133:26">break;</break>

                <default pos:start="135:17" pos:end="135:24">default:</default>

                    <expr_stmt pos:start="137:21" pos:end="137:101"><expr pos:start="137:21" pos:end="137:100"><call pos:start="137:21" pos:end="137:100"><name pos:start="137:21" pos:end="137:26">av_log</name><argument_list pos:start="137:27" pos:end="137:100">(<argument pos:start="137:28" pos:end="137:32"><expr pos:start="137:28" pos:end="137:32"><name pos:start="137:28" pos:end="137:32">avctx</name></expr></argument>, <argument pos:start="137:35" pos:end="137:46"><expr pos:start="137:35" pos:end="137:46"><name pos:start="137:35" pos:end="137:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:49" pos:end="137:99"><expr pos:start="137:49" pos:end="137:99"><literal type="string" pos:start="137:49" pos:end="137:99">"BUG! Unknown MSZH compression in frame decoder.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="139:21" pos:end="139:30">return <expr pos:start="139:28" pos:end="139:29"><operator pos:start="139:28" pos:end="139:28">-</operator><literal type="number" pos:start="139:29" pos:end="139:29">1</literal></expr>;</return>

            </block_content>}</block></switch>

            <break pos:start="143:13" pos:end="143:18">break;</break>

        <case pos:start="145:9" pos:end="148:0">case <expr pos:start="145:14" pos:end="145:26"><name pos:start="145:14" pos:end="145:26">CODEC_ID_ZLIB</name></expr>:</case>

<cpp:ifdef pos:start="147:1" pos:end="147:18">#<cpp:directive pos:start="147:2" pos:end="147:6">ifdef</cpp:directive> <name pos:start="147:8" pos:end="147:18">CONFIG_ZLIB</name></cpp:ifdef>

            <comment type="block" pos:start="149:13" pos:end="153:62">/* Using the original dll with normal compression (-1) and RGB format

             * gives a file with ZLIB fourcc, but frame is really uncompressed.

             * To be sure that's true check also frame size */</comment>

            <if_stmt pos:start="155:13" pos:end="159:22"><if pos:start="155:13" pos:end="159:22">if <condition pos:start="155:16" pos:end="157:43">(<expr pos:start="155:17" pos:end="157:42"><operator pos:start="155:17" pos:end="155:17">(</operator><name pos:start="155:18" pos:end="155:31"><name pos:start="155:18" pos:end="155:18">c</name><operator pos:start="155:19" pos:end="155:20">-&gt;</operator><name pos:start="155:21" pos:end="155:31">compression</name></name> <operator pos:start="155:33" pos:end="155:34">==</operator> <name pos:start="155:36" pos:end="155:51">COMP_ZLIB_NORMAL</name><operator pos:start="155:52" pos:end="155:52">)</operator> <operator pos:start="155:54" pos:end="155:55">&amp;&amp;</operator> <operator pos:start="155:57" pos:end="155:57">(</operator><name pos:start="155:58" pos:end="155:67"><name pos:start="155:58" pos:end="155:58">c</name><operator pos:start="155:59" pos:end="155:60">-&gt;</operator><name pos:start="155:61" pos:end="155:67">imgtype</name></name> <operator pos:start="155:69" pos:end="155:70">==</operator> <name pos:start="155:72" pos:end="155:84">IMGTYPE_RGB24</name><operator pos:start="155:85" pos:end="155:85">)</operator> <operator pos:start="155:87" pos:end="155:88">&amp;&amp;</operator>

               <operator pos:start="157:16" pos:end="157:16">(</operator><name pos:start="157:17" pos:end="157:19">len</name> <operator pos:start="157:21" pos:end="157:22">==</operator> <name pos:start="157:24" pos:end="157:28">width</name> <operator pos:start="157:30" pos:end="157:30">*</operator> <name pos:start="157:32" pos:end="157:37">height</name> <operator pos:start="157:39" pos:end="157:39">*</operator> <literal type="number" pos:start="157:41" pos:end="157:41">3</literal><operator pos:start="157:42" pos:end="157:42">)</operator></expr>)</condition><block type="pseudo" pos:start="159:17" pos:end="159:22"><block_content pos:start="159:17" pos:end="159:22">

                <break pos:start="159:17" pos:end="159:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:47"><expr pos:start="161:13" pos:end="161:46"><name pos:start="161:13" pos:end="161:16">zret</name> <operator pos:start="161:18" pos:end="161:18">=</operator> <call pos:start="161:20" pos:end="161:46"><name pos:start="161:20" pos:end="161:31">inflateReset</name><argument_list pos:start="161:32" pos:end="161:46">(<argument pos:start="161:33" pos:end="161:45"><expr pos:start="161:33" pos:end="161:45"><operator pos:start="161:33" pos:end="161:33">&amp;</operator><operator pos:start="161:34" pos:end="161:34">(</operator><name pos:start="161:35" pos:end="161:44"><name pos:start="161:35" pos:end="161:35">c</name><operator pos:start="161:36" pos:end="161:37">-&gt;</operator><name pos:start="161:38" pos:end="161:44">zstream</name></name><operator pos:start="161:45" pos:end="161:45">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="163:13" pos:end="169:13"><if pos:start="163:13" pos:end="169:13">if <condition pos:start="163:16" pos:end="163:29">(<expr pos:start="163:17" pos:end="163:28"><name pos:start="163:17" pos:end="163:20">zret</name> <operator pos:start="163:22" pos:end="163:23">!=</operator> <name pos:start="163:25" pos:end="163:28">Z_OK</name></expr>)</condition> <block pos:start="163:31" pos:end="169:13">{<block_content pos:start="165:17" pos:end="167:26">

                <expr_stmt pos:start="165:17" pos:end="165:79"><expr pos:start="165:17" pos:end="165:78"><call pos:start="165:17" pos:end="165:78"><name pos:start="165:17" pos:end="165:22">av_log</name><argument_list pos:start="165:23" pos:end="165:78">(<argument pos:start="165:24" pos:end="165:28"><expr pos:start="165:24" pos:end="165:28"><name pos:start="165:24" pos:end="165:28">avctx</name></expr></argument>, <argument pos:start="165:31" pos:end="165:42"><expr pos:start="165:31" pos:end="165:42"><name pos:start="165:31" pos:end="165:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="165:45" pos:end="165:71"><expr pos:start="165:45" pos:end="165:71"><literal type="string" pos:start="165:45" pos:end="165:71">"Inflate reset error: %d\n"</literal></expr></argument>, <argument pos:start="165:74" pos:end="165:77"><expr pos:start="165:74" pos:end="165:77"><name pos:start="165:74" pos:end="165:77">zret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="167:17" pos:end="167:26">return <expr pos:start="167:24" pos:end="167:25"><operator pos:start="167:24" pos:end="167:24">-</operator><literal type="number" pos:start="167:25" pos:end="167:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="171:13" pos:end="267:13"><if pos:start="171:13" pos:end="239:13">if <condition pos:start="171:16" pos:end="171:44">(<expr pos:start="171:17" pos:end="171:43"><name pos:start="171:17" pos:end="171:24"><name pos:start="171:17" pos:end="171:17">c</name><operator pos:start="171:18" pos:end="171:19">-&gt;</operator><name pos:start="171:20" pos:end="171:24">flags</name></name> <operator pos:start="171:26" pos:end="171:26">&amp;</operator> <name pos:start="171:28" pos:end="171:43">FLAG_MULTITHREAD</name></expr>)</condition> <block pos:start="171:46" pos:end="239:13">{<block_content pos:start="173:17" pos:end="237:17">

                <expr_stmt pos:start="173:17" pos:end="173:58"><expr pos:start="173:17" pos:end="173:57"><name pos:start="173:17" pos:end="173:29">mthread_inlen</name> <operator pos:start="173:31" pos:end="173:31">=</operator> <operator pos:start="173:33" pos:end="173:33">*</operator><operator pos:start="173:34" pos:end="173:34">(</operator><operator pos:start="173:35" pos:end="173:35">(</operator><name pos:start="173:36" pos:end="173:43">unsigned</name> <name pos:start="173:45" pos:end="173:47">int</name><operator pos:start="173:48" pos:end="173:48">*</operator><operator pos:start="173:49" pos:end="173:49">)</operator><name pos:start="173:50" pos:end="173:56">encoded</name><operator pos:start="173:57" pos:end="173:57">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:63"><expr pos:start="175:17" pos:end="175:62"><name pos:start="175:17" pos:end="175:30">mthread_outlen</name> <operator pos:start="175:32" pos:end="175:32">=</operator> <operator pos:start="175:34" pos:end="175:34">*</operator><operator pos:start="175:35" pos:end="175:35">(</operator><operator pos:start="175:36" pos:end="175:36">(</operator><name pos:start="175:37" pos:end="175:44">unsigned</name> <name pos:start="175:46" pos:end="175:48">int</name><operator pos:start="175:49" pos:end="175:49">*</operator><operator pos:start="175:50" pos:end="175:50">)</operator><operator pos:start="175:51" pos:end="175:51">(</operator><name pos:start="175:52" pos:end="175:58">encoded</name><operator pos:start="175:59" pos:end="175:59">+</operator><literal type="number" pos:start="175:60" pos:end="175:60">4</literal><operator pos:start="175:61" pos:end="175:61">)</operator><operator pos:start="175:62" pos:end="175:62">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:49"><expr pos:start="177:17" pos:end="177:48"><name pos:start="177:17" pos:end="177:34"><name pos:start="177:17" pos:end="177:17">c</name><operator pos:start="177:18" pos:end="177:19">-&gt;</operator><name pos:start="177:20" pos:end="177:26">zstream</name><operator pos:start="177:27" pos:end="177:27">.</operator><name pos:start="177:28" pos:end="177:34">next_in</name></name> <operator pos:start="177:36" pos:end="177:36">=</operator> <name pos:start="177:38" pos:end="177:44">encoded</name> <operator pos:start="177:46" pos:end="177:46">+</operator> <literal type="number" pos:start="177:48" pos:end="177:48">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:52"><expr pos:start="179:17" pos:end="179:51"><name pos:start="179:17" pos:end="179:35"><name pos:start="179:17" pos:end="179:17">c</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:26">zstream</name><operator pos:start="179:27" pos:end="179:27">.</operator><name pos:start="179:28" pos:end="179:35">avail_in</name></name> <operator pos:start="179:37" pos:end="179:37">=</operator> <name pos:start="179:39" pos:end="179:51">mthread_inlen</name></expr>;</expr_stmt>

                <expr_stmt pos:start="181:17" pos:end="181:52"><expr pos:start="181:17" pos:end="181:51"><name pos:start="181:17" pos:end="181:35"><name pos:start="181:17" pos:end="181:17">c</name><operator pos:start="181:18" pos:end="181:19">-&gt;</operator><name pos:start="181:20" pos:end="181:26">zstream</name><operator pos:start="181:27" pos:end="181:27">.</operator><name pos:start="181:28" pos:end="181:35">next_out</name></name> <operator pos:start="181:37" pos:end="181:37">=</operator> <name pos:start="181:39" pos:end="181:51"><name pos:start="181:39" pos:end="181:39">c</name><operator pos:start="181:40" pos:end="181:41">-&gt;</operator><name pos:start="181:42" pos:end="181:51">decomp_buf</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:54"><expr pos:start="183:17" pos:end="183:53"><name pos:start="183:17" pos:end="183:36"><name pos:start="183:17" pos:end="183:17">c</name><operator pos:start="183:18" pos:end="183:19">-&gt;</operator><name pos:start="183:20" pos:end="183:26">zstream</name><operator pos:start="183:27" pos:end="183:27">.</operator><name pos:start="183:28" pos:end="183:36">avail_out</name></name> <operator pos:start="183:38" pos:end="183:38">=</operator> <name pos:start="183:40" pos:end="183:53">mthread_outlen</name></expr>;</expr_stmt>    

                <expr_stmt pos:start="185:17" pos:end="185:56"><expr pos:start="185:17" pos:end="185:55"><name pos:start="185:17" pos:end="185:20">zret</name> <operator pos:start="185:22" pos:end="185:22">=</operator> <call pos:start="185:24" pos:end="185:55"><name pos:start="185:24" pos:end="185:30">inflate</name><argument_list pos:start="185:31" pos:end="185:55">(<argument pos:start="185:32" pos:end="185:44"><expr pos:start="185:32" pos:end="185:44"><operator pos:start="185:32" pos:end="185:32">&amp;</operator><operator pos:start="185:33" pos:end="185:33">(</operator><name pos:start="185:34" pos:end="185:43"><name pos:start="185:34" pos:end="185:34">c</name><operator pos:start="185:35" pos:end="185:36">-&gt;</operator><name pos:start="185:37" pos:end="185:43">zstream</name></name><operator pos:start="185:44" pos:end="185:44">)</operator></expr></argument>, <argument pos:start="185:47" pos:end="185:54"><expr pos:start="185:47" pos:end="185:54"><name pos:start="185:47" pos:end="185:54">Z_FINISH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="187:17" pos:end="193:17"><if pos:start="187:17" pos:end="193:17">if <condition pos:start="187:20" pos:end="187:61">(<expr pos:start="187:21" pos:end="187:60"><operator pos:start="187:21" pos:end="187:21">(</operator><name pos:start="187:22" pos:end="187:25">zret</name> <operator pos:start="187:27" pos:end="187:28">!=</operator> <name pos:start="187:30" pos:end="187:33">Z_OK</name><operator pos:start="187:34" pos:end="187:34">)</operator> <operator pos:start="187:36" pos:end="187:37">&amp;&amp;</operator> <operator pos:start="187:39" pos:end="187:39">(</operator><name pos:start="187:40" pos:end="187:43">zret</name> <operator pos:start="187:45" pos:end="187:46">!=</operator> <name pos:start="187:48" pos:end="187:59">Z_STREAM_END</name><operator pos:start="187:60" pos:end="187:60">)</operator></expr>)</condition> <block pos:start="187:63" pos:end="193:17">{<block_content pos:start="189:21" pos:end="191:30">

                    <expr_stmt pos:start="189:21" pos:end="189:86"><expr pos:start="189:21" pos:end="189:85"><call pos:start="189:21" pos:end="189:85"><name pos:start="189:21" pos:end="189:26">av_log</name><argument_list pos:start="189:27" pos:end="189:85">(<argument pos:start="189:28" pos:end="189:32"><expr pos:start="189:28" pos:end="189:32"><name pos:start="189:28" pos:end="189:32">avctx</name></expr></argument>, <argument pos:start="189:35" pos:end="189:46"><expr pos:start="189:35" pos:end="189:46"><name pos:start="189:35" pos:end="189:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="189:49" pos:end="189:78"><expr pos:start="189:49" pos:end="189:78"><literal type="string" pos:start="189:49" pos:end="189:78">"Mthread1 inflate error: %d\n"</literal></expr></argument>, <argument pos:start="189:81" pos:end="189:84"><expr pos:start="189:81" pos:end="189:84"><name pos:start="189:81" pos:end="189:84">zret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="191:21" pos:end="191:30">return <expr pos:start="191:28" pos:end="191:29"><operator pos:start="191:28" pos:end="191:28">-</operator><literal type="number" pos:start="191:29" pos:end="191:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="195:17" pos:end="201:17"><if pos:start="195:17" pos:end="201:17">if <condition pos:start="195:20" pos:end="195:75">(<expr pos:start="195:21" pos:end="195:74"><name pos:start="195:21" pos:end="195:34">mthread_outlen</name> <operator pos:start="195:36" pos:end="195:37">!=</operator> <operator pos:start="195:39" pos:end="195:39">(</operator><name pos:start="195:40" pos:end="195:47">unsigned</name> <name pos:start="195:49" pos:end="195:51">int</name><operator pos:start="195:52" pos:end="195:52">)</operator><operator pos:start="195:53" pos:end="195:53">(</operator><name pos:start="195:54" pos:end="195:73"><name pos:start="195:54" pos:end="195:54">c</name><operator pos:start="195:55" pos:end="195:56">-&gt;</operator><name pos:start="195:57" pos:end="195:63">zstream</name><operator pos:start="195:64" pos:end="195:64">.</operator><name pos:start="195:65" pos:end="195:73">total_out</name></name><operator pos:start="195:74" pos:end="195:74">)</operator></expr>)</condition> <block pos:start="195:77" pos:end="201:17">{<block_content pos:start="197:21" pos:end="199:65">

                    <expr_stmt pos:start="197:21" pos:end="199:65"><expr pos:start="197:21" pos:end="199:64"><call pos:start="197:21" pos:end="199:64"><name pos:start="197:21" pos:end="197:26">av_log</name><argument_list pos:start="197:27" pos:end="199:64">(<argument pos:start="197:28" pos:end="197:32"><expr pos:start="197:28" pos:end="197:32"><name pos:start="197:28" pos:end="197:32">avctx</name></expr></argument>, <argument pos:start="197:35" pos:end="197:46"><expr pos:start="197:35" pos:end="197:46"><name pos:start="197:35" pos:end="197:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="197:49" pos:end="197:93"><expr pos:start="197:49" pos:end="197:93"><literal type="string" pos:start="197:49" pos:end="197:93">"Mthread1 decoded size differs (%u != %lu)\n"</literal></expr></argument>,

                           <argument pos:start="199:28" pos:end="199:41"><expr pos:start="199:28" pos:end="199:41"><name pos:start="199:28" pos:end="199:41">mthread_outlen</name></expr></argument>, <argument pos:start="199:44" pos:end="199:63"><expr pos:start="199:44" pos:end="199:63"><name pos:start="199:44" pos:end="199:63"><name pos:start="199:44" pos:end="199:44">c</name><operator pos:start="199:45" pos:end="199:46">-&gt;</operator><name pos:start="199:47" pos:end="199:53">zstream</name><operator pos:start="199:54" pos:end="199:54">.</operator><name pos:start="199:55" pos:end="199:63">total_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:51"><expr pos:start="203:17" pos:end="203:50"><name pos:start="203:17" pos:end="203:20">zret</name> <operator pos:start="203:22" pos:end="203:22">=</operator> <call pos:start="203:24" pos:end="203:50"><name pos:start="203:24" pos:end="203:35">inflateReset</name><argument_list pos:start="203:36" pos:end="203:50">(<argument pos:start="203:37" pos:end="203:49"><expr pos:start="203:37" pos:end="203:49"><operator pos:start="203:37" pos:end="203:37">&amp;</operator><operator pos:start="203:38" pos:end="203:38">(</operator><name pos:start="203:39" pos:end="203:48"><name pos:start="203:39" pos:end="203:39">c</name><operator pos:start="203:40" pos:end="203:41">-&gt;</operator><name pos:start="203:42" pos:end="203:48">zstream</name></name><operator pos:start="203:49" pos:end="203:49">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="205:17" pos:end="211:17"><if pos:start="205:17" pos:end="211:17">if <condition pos:start="205:20" pos:end="205:33">(<expr pos:start="205:21" pos:end="205:32"><name pos:start="205:21" pos:end="205:24">zret</name> <operator pos:start="205:26" pos:end="205:27">!=</operator> <name pos:start="205:29" pos:end="205:32">Z_OK</name></expr>)</condition> <block pos:start="205:35" pos:end="211:17">{<block_content pos:start="207:21" pos:end="209:30">

                    <expr_stmt pos:start="207:21" pos:end="207:92"><expr pos:start="207:21" pos:end="207:91"><call pos:start="207:21" pos:end="207:91"><name pos:start="207:21" pos:end="207:26">av_log</name><argument_list pos:start="207:27" pos:end="207:91">(<argument pos:start="207:28" pos:end="207:32"><expr pos:start="207:28" pos:end="207:32"><name pos:start="207:28" pos:end="207:32">avctx</name></expr></argument>, <argument pos:start="207:35" pos:end="207:46"><expr pos:start="207:35" pos:end="207:46"><name pos:start="207:35" pos:end="207:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="207:49" pos:end="207:84"><expr pos:start="207:49" pos:end="207:84"><literal type="string" pos:start="207:49" pos:end="207:84">"Mthread2 inflate reset error: %d\n"</literal></expr></argument>, <argument pos:start="207:87" pos:end="207:90"><expr pos:start="207:87" pos:end="207:90"><name pos:start="207:87" pos:end="207:90">zret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="209:21" pos:end="209:30">return <expr pos:start="209:28" pos:end="209:29"><operator pos:start="209:28" pos:end="209:28">-</operator><literal type="number" pos:start="209:29" pos:end="209:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:65"><expr pos:start="213:17" pos:end="213:64"><name pos:start="213:17" pos:end="213:34"><name pos:start="213:17" pos:end="213:17">c</name><operator pos:start="213:18" pos:end="213:19">-&gt;</operator><name pos:start="213:20" pos:end="213:26">zstream</name><operator pos:start="213:27" pos:end="213:27">.</operator><name pos:start="213:28" pos:end="213:34">next_in</name></name> <operator pos:start="213:36" pos:end="213:36">=</operator> <name pos:start="213:38" pos:end="213:44">encoded</name> <operator pos:start="213:46" pos:end="213:46">+</operator> <literal type="number" pos:start="213:48" pos:end="213:50">8</literal> <operator pos:start="213:50" pos:end="213:50">+</operator> <name pos:start="213:52" pos:end="213:64">mthread_inlen</name></expr>;</expr_stmt>

                <expr_stmt pos:start="215:17" pos:end="215:58"><expr pos:start="215:17" pos:end="215:57"><name pos:start="215:17" pos:end="215:35"><name pos:start="215:17" pos:end="215:17">c</name><operator pos:start="215:18" pos:end="215:19">-&gt;</operator><name pos:start="215:20" pos:end="215:26">zstream</name><operator pos:start="215:27" pos:end="215:27">.</operator><name pos:start="215:28" pos:end="215:35">avail_in</name></name> <operator pos:start="215:37" pos:end="215:37">=</operator> <name pos:start="215:39" pos:end="215:41">len</name> <operator pos:start="215:43" pos:end="215:43">-</operator> <name pos:start="215:45" pos:end="215:57">mthread_inlen</name></expr>;</expr_stmt>

                <expr_stmt pos:start="217:17" pos:end="217:69"><expr pos:start="217:17" pos:end="217:68"><name pos:start="217:17" pos:end="217:35"><name pos:start="217:17" pos:end="217:17">c</name><operator pos:start="217:18" pos:end="217:19">-&gt;</operator><name pos:start="217:20" pos:end="217:26">zstream</name><operator pos:start="217:27" pos:end="217:27">.</operator><name pos:start="217:28" pos:end="217:35">next_out</name></name> <operator pos:start="217:37" pos:end="217:37">=</operator> <name pos:start="217:39" pos:end="217:51"><name pos:start="217:39" pos:end="217:39">c</name><operator pos:start="217:40" pos:end="217:41">-&gt;</operator><name pos:start="217:42" pos:end="217:51">decomp_buf</name></name> <operator pos:start="217:53" pos:end="217:53">+</operator> <name pos:start="217:55" pos:end="217:68">mthread_outlen</name></expr>;</expr_stmt>

                <expr_stmt pos:start="219:17" pos:end="219:54"><expr pos:start="219:17" pos:end="219:53"><name pos:start="219:17" pos:end="219:36"><name pos:start="219:17" pos:end="219:17">c</name><operator pos:start="219:18" pos:end="219:19">-&gt;</operator><name pos:start="219:20" pos:end="219:26">zstream</name><operator pos:start="219:27" pos:end="219:27">.</operator><name pos:start="219:28" pos:end="219:36">avail_out</name></name> <operator pos:start="219:38" pos:end="219:38">=</operator> <name pos:start="219:40" pos:end="219:53">mthread_outlen</name></expr>;</expr_stmt>    

                <expr_stmt pos:start="221:17" pos:end="221:56"><expr pos:start="221:17" pos:end="221:55"><name pos:start="221:17" pos:end="221:20">zret</name> <operator pos:start="221:22" pos:end="221:22">=</operator> <call pos:start="221:24" pos:end="221:55"><name pos:start="221:24" pos:end="221:30">inflate</name><argument_list pos:start="221:31" pos:end="221:55">(<argument pos:start="221:32" pos:end="221:44"><expr pos:start="221:32" pos:end="221:44"><operator pos:start="221:32" pos:end="221:32">&amp;</operator><operator pos:start="221:33" pos:end="221:33">(</operator><name pos:start="221:34" pos:end="221:43"><name pos:start="221:34" pos:end="221:34">c</name><operator pos:start="221:35" pos:end="221:36">-&gt;</operator><name pos:start="221:37" pos:end="221:43">zstream</name></name><operator pos:start="221:44" pos:end="221:44">)</operator></expr></argument>, <argument pos:start="221:47" pos:end="221:54"><expr pos:start="221:47" pos:end="221:54"><name pos:start="221:47" pos:end="221:54">Z_FINISH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="223:17" pos:end="229:17"><if pos:start="223:17" pos:end="229:17">if <condition pos:start="223:20" pos:end="223:61">(<expr pos:start="223:21" pos:end="223:60"><operator pos:start="223:21" pos:end="223:21">(</operator><name pos:start="223:22" pos:end="223:25">zret</name> <operator pos:start="223:27" pos:end="223:28">!=</operator> <name pos:start="223:30" pos:end="223:33">Z_OK</name><operator pos:start="223:34" pos:end="223:34">)</operator> <operator pos:start="223:36" pos:end="223:37">&amp;&amp;</operator> <operator pos:start="223:39" pos:end="223:39">(</operator><name pos:start="223:40" pos:end="223:43">zret</name> <operator pos:start="223:45" pos:end="223:46">!=</operator> <name pos:start="223:48" pos:end="223:59">Z_STREAM_END</name><operator pos:start="223:60" pos:end="223:60">)</operator></expr>)</condition> <block pos:start="223:63" pos:end="229:17">{<block_content pos:start="225:21" pos:end="227:30">

                    <expr_stmt pos:start="225:21" pos:end="225:86"><expr pos:start="225:21" pos:end="225:85"><call pos:start="225:21" pos:end="225:85"><name pos:start="225:21" pos:end="225:26">av_log</name><argument_list pos:start="225:27" pos:end="225:85">(<argument pos:start="225:28" pos:end="225:32"><expr pos:start="225:28" pos:end="225:32"><name pos:start="225:28" pos:end="225:32">avctx</name></expr></argument>, <argument pos:start="225:35" pos:end="225:46"><expr pos:start="225:35" pos:end="225:46"><name pos:start="225:35" pos:end="225:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="225:49" pos:end="225:78"><expr pos:start="225:49" pos:end="225:78"><literal type="string" pos:start="225:49" pos:end="225:78">"Mthread2 inflate error: %d\n"</literal></expr></argument>, <argument pos:start="225:81" pos:end="225:84"><expr pos:start="225:81" pos:end="225:84"><name pos:start="225:81" pos:end="225:84">zret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="227:21" pos:end="227:30">return <expr pos:start="227:28" pos:end="227:29"><operator pos:start="227:28" pos:end="227:28">-</operator><literal type="number" pos:start="227:29" pos:end="227:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="231:17" pos:end="237:17"><if pos:start="231:17" pos:end="237:17">if <condition pos:start="231:20" pos:end="231:94">(<expr pos:start="231:21" pos:end="231:93"><operator pos:start="231:21" pos:end="231:21">(</operator><name pos:start="231:22" pos:end="231:35"><name pos:start="231:22" pos:end="231:22">c</name><operator pos:start="231:23" pos:end="231:24">-&gt;</operator><name pos:start="231:25" pos:end="231:35">decomp_size</name></name> <operator pos:start="231:37" pos:end="231:37">-</operator> <name pos:start="231:39" pos:end="231:52">mthread_outlen</name><operator pos:start="231:53" pos:end="231:53">)</operator> <operator pos:start="231:55" pos:end="231:56">!=</operator> <operator pos:start="231:58" pos:end="231:58">(</operator><name pos:start="231:59" pos:end="231:66">unsigned</name> <name pos:start="231:68" pos:end="231:70">int</name><operator pos:start="231:71" pos:end="231:71">)</operator><operator pos:start="231:72" pos:end="231:72">(</operator><name pos:start="231:73" pos:end="231:92"><name pos:start="231:73" pos:end="231:73">c</name><operator pos:start="231:74" pos:end="231:75">-&gt;</operator><name pos:start="231:76" pos:end="231:82">zstream</name><operator pos:start="231:83" pos:end="231:83">.</operator><name pos:start="231:84" pos:end="231:92">total_out</name></name><operator pos:start="231:93" pos:end="231:93">)</operator></expr>)</condition> <block pos:start="231:96" pos:end="237:17">{<block_content pos:start="233:21" pos:end="235:82">

                    <expr_stmt pos:start="233:21" pos:end="235:82"><expr pos:start="233:21" pos:end="235:81"><call pos:start="233:21" pos:end="235:81"><name pos:start="233:21" pos:end="233:26">av_log</name><argument_list pos:start="233:27" pos:end="235:81">(<argument pos:start="233:28" pos:end="233:32"><expr pos:start="233:28" pos:end="233:32"><name pos:start="233:28" pos:end="233:32">avctx</name></expr></argument>, <argument pos:start="233:35" pos:end="233:46"><expr pos:start="233:35" pos:end="233:46"><name pos:start="233:35" pos:end="233:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="233:49" pos:end="233:93"><expr pos:start="233:49" pos:end="233:93"><literal type="string" pos:start="233:49" pos:end="233:93">"Mthread2 decoded size differs (%d != %lu)\n"</literal></expr></argument>,

                           <argument pos:start="235:28" pos:end="235:58"><expr pos:start="235:28" pos:end="235:58"><name pos:start="235:28" pos:end="235:41"><name pos:start="235:28" pos:end="235:28">c</name><operator pos:start="235:29" pos:end="235:30">-&gt;</operator><name pos:start="235:31" pos:end="235:41">decomp_size</name></name> <operator pos:start="235:43" pos:end="235:43">-</operator> <name pos:start="235:45" pos:end="235:58">mthread_outlen</name></expr></argument>, <argument pos:start="235:61" pos:end="235:80"><expr pos:start="235:61" pos:end="235:80"><name pos:start="235:61" pos:end="235:80"><name pos:start="235:61" pos:end="235:61">c</name><operator pos:start="235:62" pos:end="235:63">-&gt;</operator><name pos:start="235:64" pos:end="235:70">zstream</name><operator pos:start="235:71" pos:end="235:71">.</operator><name pos:start="235:72" pos:end="235:80">total_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="239:15" pos:end="267:13">else <block pos:start="239:20" pos:end="267:13">{<block_content pos:start="241:17" pos:end="265:17">

                <expr_stmt pos:start="241:17" pos:end="241:45"><expr pos:start="241:17" pos:end="241:44"><name pos:start="241:17" pos:end="241:34"><name pos:start="241:17" pos:end="241:17">c</name><operator pos:start="241:18" pos:end="241:19">-&gt;</operator><name pos:start="241:20" pos:end="241:26">zstream</name><operator pos:start="241:27" pos:end="241:27">.</operator><name pos:start="241:28" pos:end="241:34">next_in</name></name> <operator pos:start="241:36" pos:end="241:36">=</operator> <name pos:start="241:38" pos:end="241:44">encoded</name></expr>;</expr_stmt>

                <expr_stmt pos:start="243:17" pos:end="243:42"><expr pos:start="243:17" pos:end="243:41"><name pos:start="243:17" pos:end="243:35"><name pos:start="243:17" pos:end="243:17">c</name><operator pos:start="243:18" pos:end="243:19">-&gt;</operator><name pos:start="243:20" pos:end="243:26">zstream</name><operator pos:start="243:27" pos:end="243:27">.</operator><name pos:start="243:28" pos:end="243:35">avail_in</name></name> <operator pos:start="243:37" pos:end="243:37">=</operator> <name pos:start="243:39" pos:end="243:41">len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="245:17" pos:end="245:52"><expr pos:start="245:17" pos:end="245:51"><name pos:start="245:17" pos:end="245:35"><name pos:start="245:17" pos:end="245:17">c</name><operator pos:start="245:18" pos:end="245:19">-&gt;</operator><name pos:start="245:20" pos:end="245:26">zstream</name><operator pos:start="245:27" pos:end="245:27">.</operator><name pos:start="245:28" pos:end="245:35">next_out</name></name> <operator pos:start="245:37" pos:end="245:37">=</operator> <name pos:start="245:39" pos:end="245:51"><name pos:start="245:39" pos:end="245:39">c</name><operator pos:start="245:40" pos:end="245:41">-&gt;</operator><name pos:start="245:42" pos:end="245:51">decomp_buf</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="247:17" pos:end="247:54"><expr pos:start="247:17" pos:end="247:53"><name pos:start="247:17" pos:end="247:36"><name pos:start="247:17" pos:end="247:17">c</name><operator pos:start="247:18" pos:end="247:19">-&gt;</operator><name pos:start="247:20" pos:end="247:26">zstream</name><operator pos:start="247:27" pos:end="247:27">.</operator><name pos:start="247:28" pos:end="247:36">avail_out</name></name> <operator pos:start="247:38" pos:end="247:38">=</operator> <name pos:start="247:40" pos:end="247:53"><name pos:start="247:40" pos:end="247:40">c</name><operator pos:start="247:41" pos:end="247:42">-&gt;</operator><name pos:start="247:43" pos:end="247:53">decomp_size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="249:17" pos:end="249:56"><expr pos:start="249:17" pos:end="249:55"><name pos:start="249:17" pos:end="249:20">zret</name> <operator pos:start="249:22" pos:end="249:22">=</operator> <call pos:start="249:24" pos:end="249:55"><name pos:start="249:24" pos:end="249:30">inflate</name><argument_list pos:start="249:31" pos:end="249:55">(<argument pos:start="249:32" pos:end="249:44"><expr pos:start="249:32" pos:end="249:44"><operator pos:start="249:32" pos:end="249:32">&amp;</operator><operator pos:start="249:33" pos:end="249:33">(</operator><name pos:start="249:34" pos:end="249:43"><name pos:start="249:34" pos:end="249:34">c</name><operator pos:start="249:35" pos:end="249:36">-&gt;</operator><name pos:start="249:37" pos:end="249:43">zstream</name></name><operator pos:start="249:44" pos:end="249:44">)</operator></expr></argument>, <argument pos:start="249:47" pos:end="249:54"><expr pos:start="249:47" pos:end="249:54"><name pos:start="249:47" pos:end="249:54">Z_FINISH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="251:17" pos:end="257:17"><if pos:start="251:17" pos:end="257:17">if <condition pos:start="251:20" pos:end="251:61">(<expr pos:start="251:21" pos:end="251:60"><operator pos:start="251:21" pos:end="251:21">(</operator><name pos:start="251:22" pos:end="251:25">zret</name> <operator pos:start="251:27" pos:end="251:28">!=</operator> <name pos:start="251:30" pos:end="251:33">Z_OK</name><operator pos:start="251:34" pos:end="251:34">)</operator> <operator pos:start="251:36" pos:end="251:37">&amp;&amp;</operator> <operator pos:start="251:39" pos:end="251:39">(</operator><name pos:start="251:40" pos:end="251:43">zret</name> <operator pos:start="251:45" pos:end="251:46">!=</operator> <name pos:start="251:48" pos:end="251:59">Z_STREAM_END</name><operator pos:start="251:60" pos:end="251:60">)</operator></expr>)</condition> <block pos:start="251:63" pos:end="257:17">{<block_content pos:start="253:21" pos:end="255:30">

                    <expr_stmt pos:start="253:21" pos:end="253:77"><expr pos:start="253:21" pos:end="253:76"><call pos:start="253:21" pos:end="253:76"><name pos:start="253:21" pos:end="253:26">av_log</name><argument_list pos:start="253:27" pos:end="253:76">(<argument pos:start="253:28" pos:end="253:32"><expr pos:start="253:28" pos:end="253:32"><name pos:start="253:28" pos:end="253:32">avctx</name></expr></argument>, <argument pos:start="253:35" pos:end="253:46"><expr pos:start="253:35" pos:end="253:46"><name pos:start="253:35" pos:end="253:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="253:49" pos:end="253:69"><expr pos:start="253:49" pos:end="253:69"><literal type="string" pos:start="253:49" pos:end="253:69">"Inflate error: %d\n"</literal></expr></argument>, <argument pos:start="253:72" pos:end="253:75"><expr pos:start="253:72" pos:end="253:75"><name pos:start="253:72" pos:end="253:75">zret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="255:21" pos:end="255:30">return <expr pos:start="255:28" pos:end="255:29"><operator pos:start="255:28" pos:end="255:28">-</operator><literal type="number" pos:start="255:29" pos:end="255:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="259:17" pos:end="265:17"><if pos:start="259:17" pos:end="265:17">if <condition pos:start="259:20" pos:end="259:75">(<expr pos:start="259:21" pos:end="259:74"><name pos:start="259:21" pos:end="259:34"><name pos:start="259:21" pos:end="259:21">c</name><operator pos:start="259:22" pos:end="259:23">-&gt;</operator><name pos:start="259:24" pos:end="259:34">decomp_size</name></name> <operator pos:start="259:36" pos:end="259:37">!=</operator> <operator pos:start="259:39" pos:end="259:39">(</operator><name pos:start="259:40" pos:end="259:47">unsigned</name> <name pos:start="259:49" pos:end="259:51">int</name><operator pos:start="259:52" pos:end="259:52">)</operator><operator pos:start="259:53" pos:end="259:53">(</operator><name pos:start="259:54" pos:end="259:73"><name pos:start="259:54" pos:end="259:54">c</name><operator pos:start="259:55" pos:end="259:56">-&gt;</operator><name pos:start="259:57" pos:end="259:63">zstream</name><operator pos:start="259:64" pos:end="259:64">.</operator><name pos:start="259:65" pos:end="259:73">total_out</name></name><operator pos:start="259:74" pos:end="259:74">)</operator></expr>)</condition> <block pos:start="259:77" pos:end="265:17">{<block_content pos:start="261:21" pos:end="263:65">

                    <expr_stmt pos:start="261:21" pos:end="263:65"><expr pos:start="261:21" pos:end="263:64"><call pos:start="261:21" pos:end="263:64"><name pos:start="261:21" pos:end="261:26">av_log</name><argument_list pos:start="261:27" pos:end="263:64">(<argument pos:start="261:28" pos:end="261:32"><expr pos:start="261:28" pos:end="261:32"><name pos:start="261:28" pos:end="261:32">avctx</name></expr></argument>, <argument pos:start="261:35" pos:end="261:46"><expr pos:start="261:35" pos:end="261:46"><name pos:start="261:35" pos:end="261:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="261:49" pos:end="261:84"><expr pos:start="261:49" pos:end="261:84"><literal type="string" pos:start="261:49" pos:end="261:84">"Decoded size differs (%d != %lu)\n"</literal></expr></argument>,

                           <argument pos:start="263:28" pos:end="263:41"><expr pos:start="263:28" pos:end="263:41"><name pos:start="263:28" pos:end="263:41"><name pos:start="263:28" pos:end="263:28">c</name><operator pos:start="263:29" pos:end="263:30">-&gt;</operator><name pos:start="263:31" pos:end="263:41">decomp_size</name></name></expr></argument>, <argument pos:start="263:44" pos:end="263:63"><expr pos:start="263:44" pos:end="263:63"><name pos:start="263:44" pos:end="263:63"><name pos:start="263:44" pos:end="263:44">c</name><operator pos:start="263:45" pos:end="263:46">-&gt;</operator><name pos:start="263:47" pos:end="263:53">zstream</name><operator pos:start="263:54" pos:end="263:54">.</operator><name pos:start="263:55" pos:end="263:63">total_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:36"><expr pos:start="269:13" pos:end="269:35"><name pos:start="269:13" pos:end="269:19">encoded</name> <operator pos:start="269:21" pos:end="269:21">=</operator> <name pos:start="269:23" pos:end="269:35"><name pos:start="269:23" pos:end="269:23">c</name><operator pos:start="269:24" pos:end="269:25">-&gt;</operator><name pos:start="269:26" pos:end="269:35">decomp_buf</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:33"><expr pos:start="271:13" pos:end="271:32"><name pos:start="271:13" pos:end="271:15">len</name> <operator pos:start="271:17" pos:end="271:17">=</operator> <name pos:start="271:19" pos:end="271:32"><name pos:start="271:19" pos:end="271:19">c</name><operator pos:start="271:20" pos:end="271:21">-&gt;</operator><name pos:start="271:22" pos:end="271:32">decomp_size</name></name></expr>;</expr_stmt><empty_stmt pos:start="271:34" pos:end="274:0">;</empty_stmt>

<cpp:else pos:start="273:1" pos:end="273:5">#<cpp:directive pos:start="273:2" pos:end="273:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="275:13" pos:end="275:94"><expr pos:start="275:13" pos:end="275:93"><call pos:start="275:13" pos:end="275:93"><name pos:start="275:13" pos:end="275:18">av_log</name><argument_list pos:start="275:19" pos:end="275:93">(<argument pos:start="275:20" pos:end="275:24"><expr pos:start="275:20" pos:end="275:24"><name pos:start="275:20" pos:end="275:24">avctx</name></expr></argument>, <argument pos:start="275:27" pos:end="275:38"><expr pos:start="275:27" pos:end="275:38"><name pos:start="275:27" pos:end="275:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="275:41" pos:end="275:92"><expr pos:start="275:41" pos:end="275:92"><literal type="string" pos:start="275:41" pos:end="275:92">"BUG! Zlib support not compiled in frame decoder.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="277:13" pos:end="280:0">return <expr pos:start="277:20" pos:end="277:21"><operator pos:start="277:20" pos:end="277:20">-</operator><literal type="number" pos:start="277:21" pos:end="277:21">1</literal></expr>;</return>

<cpp:endif pos:start="279:1" pos:end="279:6">#<cpp:directive pos:start="279:2" pos:end="279:6">endif</cpp:directive></cpp:endif>

            <break pos:start="281:13" pos:end="281:18">break;</break>

        <default pos:start="283:9" pos:end="283:16">default:</default>

            <expr_stmt pos:start="285:13" pos:end="285:101"><expr pos:start="285:13" pos:end="285:100"><call pos:start="285:13" pos:end="285:100"><name pos:start="285:13" pos:end="285:18">av_log</name><argument_list pos:start="285:19" pos:end="285:100">(<argument pos:start="285:20" pos:end="285:24"><expr pos:start="285:20" pos:end="285:24"><name pos:start="285:20" pos:end="285:24">avctx</name></expr></argument>, <argument pos:start="285:27" pos:end="285:38"><expr pos:start="285:27" pos:end="285:38"><name pos:start="285:27" pos:end="285:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="285:41" pos:end="285:99"><expr pos:start="285:41" pos:end="285:99"><literal type="string" pos:start="285:41" pos:end="285:99">"BUG! Unknown codec in frame decoder compression switch.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="287:13" pos:end="287:22">return <expr pos:start="287:20" pos:end="287:21"><operator pos:start="287:20" pos:end="287:20">-</operator><literal type="number" pos:start="287:21" pos:end="287:21">1</literal></expr>;</return>

    </block_content>}</block></switch>





    <comment type="block" pos:start="295:5" pos:end="295:26">/* Apply PNG filter */</comment>

    <if_stmt pos:start="297:5" pos:end="461:5"><if pos:start="297:5" pos:end="461:5">if <condition pos:start="297:8" pos:end="297:74">(<expr pos:start="297:9" pos:end="297:73"><operator pos:start="297:9" pos:end="297:9">(</operator><name pos:start="297:10" pos:end="297:24"><name pos:start="297:10" pos:end="297:14">avctx</name><operator pos:start="297:15" pos:end="297:16">-&gt;</operator><name pos:start="297:17" pos:end="297:24">codec_id</name></name> <operator pos:start="297:26" pos:end="297:27">==</operator> <name pos:start="297:29" pos:end="297:41">CODEC_ID_ZLIB</name><operator pos:start="297:42" pos:end="297:42">)</operator> <operator pos:start="297:44" pos:end="297:45">&amp;&amp;</operator> <operator pos:start="297:47" pos:end="297:47">(</operator><name pos:start="297:48" pos:end="297:55"><name pos:start="297:48" pos:end="297:48">c</name><operator pos:start="297:49" pos:end="297:50">-&gt;</operator><name pos:start="297:51" pos:end="297:55">flags</name></name> <operator pos:start="297:57" pos:end="297:57">&amp;</operator> <name pos:start="297:59" pos:end="297:72">FLAG_PNGFILTER</name><operator pos:start="297:73" pos:end="297:73">)</operator></expr>)</condition> <block pos:start="297:76" pos:end="461:5">{<block_content pos:start="299:9" pos:end="459:9">

        <switch pos:start="299:9" pos:end="459:9">switch <condition pos:start="299:16" pos:end="299:27">(<expr pos:start="299:17" pos:end="299:26"><name pos:start="299:17" pos:end="299:26"><name pos:start="299:17" pos:end="299:17">c</name><operator pos:start="299:18" pos:end="299:19">-&gt;</operator><name pos:start="299:20" pos:end="299:26">imgtype</name></name></expr>)</condition> <block pos:start="299:29" pos:end="459:9">{<block_content pos:start="301:13" pos:end="457:26">

            <case pos:start="301:13" pos:end="301:32">case <expr pos:start="301:18" pos:end="301:31"><name pos:start="301:18" pos:end="301:31">IMGTYPE_YUV111</name></expr>:</case>

            <case pos:start="303:13" pos:end="303:31">case <expr pos:start="303:18" pos:end="303:30"><name pos:start="303:18" pos:end="303:30">IMGTYPE_RGB24</name></expr>:</case>

                <for pos:start="305:17" pos:end="329:17">for <control pos:start="305:21" pos:end="305:50">(<init pos:start="305:22" pos:end="305:29"><expr pos:start="305:22" pos:end="305:28"><name pos:start="305:22" pos:end="305:24">row</name> <operator pos:start="305:26" pos:end="305:26">=</operator> <literal type="number" pos:start="305:28" pos:end="305:28">0</literal></expr>;</init> <condition pos:start="305:31" pos:end="305:43"><expr pos:start="305:31" pos:end="305:42"><name pos:start="305:31" pos:end="305:33">row</name> <operator pos:start="305:35" pos:end="305:35">&lt;</operator> <name pos:start="305:37" pos:end="305:42">height</name></expr>;</condition> <incr pos:start="305:45" pos:end="305:49"><expr pos:start="305:45" pos:end="305:49"><name pos:start="305:45" pos:end="305:47">row</name><operator pos:start="305:48" pos:end="305:49">++</operator></expr></incr>)</control> <block pos:start="305:52" pos:end="329:17">{<block_content pos:start="307:21" pos:end="327:21">

                    <expr_stmt pos:start="307:21" pos:end="307:48"><expr pos:start="307:21" pos:end="307:47"><name pos:start="307:21" pos:end="307:29">pixel_ptr</name> <operator pos:start="307:31" pos:end="307:31">=</operator> <name pos:start="307:33" pos:end="307:35">row</name> <operator pos:start="307:37" pos:end="307:37">*</operator> <name pos:start="307:39" pos:end="307:43">width</name> <operator pos:start="307:45" pos:end="307:45">*</operator> <literal type="number" pos:start="307:47" pos:end="307:47">3</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="309:21" pos:end="309:46"><expr pos:start="309:21" pos:end="309:45"><name pos:start="309:21" pos:end="309:22">yq</name> <operator pos:start="309:24" pos:end="309:24">=</operator> <name pos:start="309:26" pos:end="309:45"><name pos:start="309:26" pos:end="309:32">encoded</name><index pos:start="309:33" pos:end="309:45">[<expr pos:start="309:34" pos:end="309:44"><name pos:start="309:34" pos:end="309:42">pixel_ptr</name><operator pos:start="309:43" pos:end="309:44">++</operator></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="311:21" pos:end="311:48"><expr pos:start="311:21" pos:end="311:47"><name pos:start="311:21" pos:end="311:24">uqvq</name> <operator pos:start="311:26" pos:end="311:26">=</operator> <name pos:start="311:28" pos:end="311:47"><name pos:start="311:28" pos:end="311:34">encoded</name><index pos:start="311:35" pos:end="311:47">[<expr pos:start="311:36" pos:end="311:46"><name pos:start="311:36" pos:end="311:44">pixel_ptr</name><operator pos:start="311:45" pos:end="311:46">++</operator></expr>]</index></name></expr>;</expr_stmt>

              	  <expr_stmt pos:start="313:19" pos:end="313:52"><expr pos:start="313:19" pos:end="313:51"><name pos:start="313:19" pos:end="313:22">uqvq</name><operator pos:start="313:23" pos:end="313:24">+=</operator><operator pos:start="313:25" pos:end="313:25">(</operator><name pos:start="313:26" pos:end="313:45"><name pos:start="313:26" pos:end="313:32">encoded</name><index pos:start="313:33" pos:end="313:45">[<expr pos:start="313:34" pos:end="313:44"><name pos:start="313:34" pos:end="313:42">pixel_ptr</name><operator pos:start="313:43" pos:end="313:44">++</operator></expr>]</index></name> <operator pos:start="313:47" pos:end="313:48">&lt;&lt;</operator> <literal type="number" pos:start="313:50" pos:end="313:50">8</literal><operator pos:start="313:51" pos:end="313:51">)</operator></expr>;</expr_stmt>

                    <for pos:start="315:21" pos:end="327:21">for <control pos:start="315:25" pos:end="315:53">(<init pos:start="315:26" pos:end="315:33"><expr pos:start="315:26" pos:end="315:32"><name pos:start="315:26" pos:end="315:28">col</name> <operator pos:start="315:30" pos:end="315:30">=</operator> <literal type="number" pos:start="315:32" pos:end="315:32">1</literal></expr>;</init> <condition pos:start="315:35" pos:end="315:46"><expr pos:start="315:35" pos:end="315:45"><name pos:start="315:35" pos:end="315:37">col</name> <operator pos:start="315:39" pos:end="315:39">&lt;</operator> <name pos:start="315:41" pos:end="315:45">width</name></expr>;</condition> <incr pos:start="315:48" pos:end="315:52"><expr pos:start="315:48" pos:end="315:52"><name pos:start="315:48" pos:end="315:50">col</name><operator pos:start="315:51" pos:end="315:52">++</operator></expr></incr>)</control> <block pos:start="315:55" pos:end="327:21">{<block_content pos:start="317:25" pos:end="325:39">

                        <expr_stmt pos:start="317:25" pos:end="317:70"><expr pos:start="317:25" pos:end="317:69"><name pos:start="317:25" pos:end="317:42"><name pos:start="317:25" pos:end="317:31">encoded</name><index pos:start="317:32" pos:end="317:42">[<expr pos:start="317:33" pos:end="317:41"><name pos:start="317:33" pos:end="317:41">pixel_ptr</name></expr>]</index></name> <operator pos:start="317:44" pos:end="317:44">=</operator> <name pos:start="317:46" pos:end="317:47">yq</name> <operator pos:start="317:49" pos:end="317:50">-=</operator> <name pos:start="317:52" pos:end="317:69"><name pos:start="317:52" pos:end="317:58">encoded</name><index pos:start="317:59" pos:end="317:69">[<expr pos:start="317:60" pos:end="317:68"><name pos:start="317:60" pos:end="317:68">pixel_ptr</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="319:25" pos:end="319:83"><expr pos:start="319:25" pos:end="319:82"><name pos:start="319:25" pos:end="319:28">uqvq</name> <operator pos:start="319:30" pos:end="319:31">-=</operator> <operator pos:start="319:33" pos:end="319:33">(</operator><name pos:start="319:34" pos:end="319:53"><name pos:start="319:34" pos:end="319:40">encoded</name><index pos:start="319:41" pos:end="319:53">[<expr pos:start="319:42" pos:end="319:52"><name pos:start="319:42" pos:end="319:50">pixel_ptr</name><operator pos:start="319:51" pos:end="319:51">+</operator><literal type="number" pos:start="319:52" pos:end="319:52">1</literal></expr>]</index></name> <operator pos:start="319:55" pos:end="319:55">|</operator> <operator pos:start="319:57" pos:end="319:57">(</operator><name pos:start="319:58" pos:end="319:77"><name pos:start="319:58" pos:end="319:64">encoded</name><index pos:start="319:65" pos:end="319:77">[<expr pos:start="319:66" pos:end="319:76"><name pos:start="319:66" pos:end="319:74">pixel_ptr</name><operator pos:start="319:75" pos:end="319:75">+</operator><literal type="number" pos:start="319:76" pos:end="319:76">2</literal></expr>]</index></name><operator pos:start="319:78" pos:end="319:79">&lt;&lt;</operator><literal type="number" pos:start="319:80" pos:end="319:80">8</literal><operator pos:start="319:81" pos:end="319:81">)</operator><operator pos:start="319:82" pos:end="319:82">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="321:25" pos:end="321:61"><expr pos:start="321:25" pos:end="321:60"><name pos:start="321:25" pos:end="321:44"><name pos:start="321:25" pos:end="321:31">encoded</name><index pos:start="321:32" pos:end="321:44">[<expr pos:start="321:33" pos:end="321:43"><name pos:start="321:33" pos:end="321:41">pixel_ptr</name><operator pos:start="321:42" pos:end="321:42">+</operator><literal type="number" pos:start="321:43" pos:end="321:43">1</literal></expr>]</index></name> <operator pos:start="321:46" pos:end="321:46">=</operator> <operator pos:start="321:48" pos:end="321:48">(</operator><name pos:start="321:49" pos:end="321:52">uqvq</name><operator pos:start="321:53" pos:end="321:53">)</operator> <operator pos:start="321:55" pos:end="321:55">&amp;</operator> <literal type="number" pos:start="321:57" pos:end="321:60">0xff</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="323:25" pos:end="323:66"><expr pos:start="323:25" pos:end="323:65"><name pos:start="323:25" pos:end="323:44"><name pos:start="323:25" pos:end="323:31">encoded</name><index pos:start="323:32" pos:end="323:44">[<expr pos:start="323:33" pos:end="323:43"><name pos:start="323:33" pos:end="323:41">pixel_ptr</name><operator pos:start="323:42" pos:end="323:42">+</operator><literal type="number" pos:start="323:43" pos:end="323:43">2</literal></expr>]</index></name> <operator pos:start="323:46" pos:end="323:46">=</operator> <operator pos:start="323:48" pos:end="323:48">(</operator><operator pos:start="323:49" pos:end="323:49">(</operator><name pos:start="323:50" pos:end="323:53">uqvq</name><operator pos:start="323:54" pos:end="323:54">)</operator><operator pos:start="323:55" pos:end="323:56">&gt;&gt;</operator><literal type="number" pos:start="323:57" pos:end="323:57">8</literal><operator pos:start="323:58" pos:end="323:58">)</operator> <operator pos:start="323:60" pos:end="323:60">&amp;</operator> <literal type="number" pos:start="323:62" pos:end="323:65">0xff</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="325:25" pos:end="325:39"><expr pos:start="325:25" pos:end="325:38"><name pos:start="325:25" pos:end="325:33">pixel_ptr</name> <operator pos:start="325:35" pos:end="325:36">+=</operator> <literal type="number" pos:start="325:38" pos:end="325:38">3</literal></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

                <break pos:start="331:17" pos:end="331:22">break;</break>

            <case pos:start="333:13" pos:end="333:32">case <expr pos:start="333:18" pos:end="333:31"><name pos:start="333:18" pos:end="333:31">IMGTYPE_YUV422</name></expr>:</case>

                <for pos:start="335:17" pos:end="363:17">for <control pos:start="335:21" pos:end="335:50">(<init pos:start="335:22" pos:end="335:29"><expr pos:start="335:22" pos:end="335:28"><name pos:start="335:22" pos:end="335:24">row</name> <operator pos:start="335:26" pos:end="335:26">=</operator> <literal type="number" pos:start="335:28" pos:end="335:28">0</literal></expr>;</init> <condition pos:start="335:31" pos:end="335:43"><expr pos:start="335:31" pos:end="335:42"><name pos:start="335:31" pos:end="335:33">row</name> <operator pos:start="335:35" pos:end="335:35">&lt;</operator> <name pos:start="335:37" pos:end="335:42">height</name></expr>;</condition> <incr pos:start="335:45" pos:end="335:49"><expr pos:start="335:45" pos:end="335:49"><name pos:start="335:45" pos:end="335:47">row</name><operator pos:start="335:48" pos:end="335:49">++</operator></expr></incr>)</control> <block pos:start="335:52" pos:end="363:17">{<block_content pos:start="337:21" pos:end="361:21">

                    <expr_stmt pos:start="337:21" pos:end="337:48"><expr pos:start="337:21" pos:end="337:47"><name pos:start="337:21" pos:end="337:29">pixel_ptr</name> <operator pos:start="337:31" pos:end="337:31">=</operator> <name pos:start="337:33" pos:end="337:35">row</name> <operator pos:start="337:37" pos:end="337:37">*</operator> <name pos:start="337:39" pos:end="337:43">width</name> <operator pos:start="337:45" pos:end="337:45">*</operator> <literal type="number" pos:start="337:47" pos:end="337:47">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="339:21" pos:end="339:36"><expr pos:start="339:21" pos:end="339:35"><name pos:start="339:21" pos:end="339:22">yq</name> <operator pos:start="339:24" pos:end="339:24">=</operator> <name pos:start="339:26" pos:end="339:27">uq</name> <operator pos:start="339:29" pos:end="339:29">=</operator> <name pos:start="339:31" pos:end="339:32">vq</name> <operator pos:start="339:34" pos:end="339:34">=</operator><literal type="number" pos:start="339:35" pos:end="339:35">0</literal></expr>;</expr_stmt>

                    <for pos:start="341:21" pos:end="361:21">for <control pos:start="341:25" pos:end="341:55">(<init pos:start="341:26" pos:end="341:33"><expr pos:start="341:26" pos:end="341:32"><name pos:start="341:26" pos:end="341:28">col</name> <operator pos:start="341:30" pos:end="341:30">=</operator> <literal type="number" pos:start="341:32" pos:end="341:32">0</literal></expr>;</init> <condition pos:start="341:35" pos:end="341:48"><expr pos:start="341:35" pos:end="341:47"><name pos:start="341:35" pos:end="341:37">col</name> <operator pos:start="341:39" pos:end="341:39">&lt;</operator> <name pos:start="341:41" pos:end="341:45">width</name><operator pos:start="341:46" pos:end="341:46">/</operator><literal type="number" pos:start="341:47" pos:end="341:47">4</literal></expr>;</condition> <incr pos:start="341:50" pos:end="341:54"><expr pos:start="341:50" pos:end="341:54"><name pos:start="341:50" pos:end="341:52">col</name><operator pos:start="341:53" pos:end="341:54">++</operator></expr></incr>)</control> <block pos:start="341:57" pos:end="361:21">{<block_content pos:start="343:25" pos:end="359:39">

                        <expr_stmt pos:start="343:25" pos:end="343:70"><expr pos:start="343:25" pos:end="343:69"><name pos:start="343:25" pos:end="343:42"><name pos:start="343:25" pos:end="343:31">encoded</name><index pos:start="343:32" pos:end="343:42">[<expr pos:start="343:33" pos:end="343:41"><name pos:start="343:33" pos:end="343:41">pixel_ptr</name></expr>]</index></name> <operator pos:start="343:44" pos:end="343:44">=</operator> <name pos:start="343:46" pos:end="343:47">yq</name> <operator pos:start="343:49" pos:end="343:50">-=</operator> <name pos:start="343:52" pos:end="343:69"><name pos:start="343:52" pos:end="343:58">encoded</name><index pos:start="343:59" pos:end="343:69">[<expr pos:start="343:60" pos:end="343:68"><name pos:start="343:60" pos:end="343:68">pixel_ptr</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="345:25" pos:end="345:74"><expr pos:start="345:25" pos:end="345:73"><name pos:start="345:25" pos:end="345:44"><name pos:start="345:25" pos:end="345:31">encoded</name><index pos:start="345:32" pos:end="345:44">[<expr pos:start="345:33" pos:end="345:43"><name pos:start="345:33" pos:end="345:41">pixel_ptr</name><operator pos:start="345:42" pos:end="345:42">+</operator><literal type="number" pos:start="345:43" pos:end="345:43">1</literal></expr>]</index></name> <operator pos:start="345:46" pos:end="345:46">=</operator> <name pos:start="345:48" pos:end="345:49">yq</name> <operator pos:start="345:51" pos:end="345:52">-=</operator> <name pos:start="345:54" pos:end="345:73"><name pos:start="345:54" pos:end="345:60">encoded</name><index pos:start="345:61" pos:end="345:73">[<expr pos:start="345:62" pos:end="345:72"><name pos:start="345:62" pos:end="345:70">pixel_ptr</name><operator pos:start="345:71" pos:end="345:71">+</operator><literal type="number" pos:start="345:72" pos:end="345:72">1</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="347:25" pos:end="347:74"><expr pos:start="347:25" pos:end="347:73"><name pos:start="347:25" pos:end="347:44"><name pos:start="347:25" pos:end="347:31">encoded</name><index pos:start="347:32" pos:end="347:44">[<expr pos:start="347:33" pos:end="347:43"><name pos:start="347:33" pos:end="347:41">pixel_ptr</name><operator pos:start="347:42" pos:end="347:42">+</operator><literal type="number" pos:start="347:43" pos:end="347:43">2</literal></expr>]</index></name> <operator pos:start="347:46" pos:end="347:46">=</operator> <name pos:start="347:48" pos:end="347:49">yq</name> <operator pos:start="347:51" pos:end="347:52">-=</operator> <name pos:start="347:54" pos:end="347:73"><name pos:start="347:54" pos:end="347:60">encoded</name><index pos:start="347:61" pos:end="347:73">[<expr pos:start="347:62" pos:end="347:72"><name pos:start="347:62" pos:end="347:70">pixel_ptr</name><operator pos:start="347:71" pos:end="347:71">+</operator><literal type="number" pos:start="347:72" pos:end="347:72">2</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="349:25" pos:end="349:74"><expr pos:start="349:25" pos:end="349:73"><name pos:start="349:25" pos:end="349:44"><name pos:start="349:25" pos:end="349:31">encoded</name><index pos:start="349:32" pos:end="349:44">[<expr pos:start="349:33" pos:end="349:43"><name pos:start="349:33" pos:end="349:41">pixel_ptr</name><operator pos:start="349:42" pos:end="349:42">+</operator><literal type="number" pos:start="349:43" pos:end="349:43">3</literal></expr>]</index></name> <operator pos:start="349:46" pos:end="349:46">=</operator> <name pos:start="349:48" pos:end="349:49">yq</name> <operator pos:start="349:51" pos:end="349:52">-=</operator> <name pos:start="349:54" pos:end="349:73"><name pos:start="349:54" pos:end="349:60">encoded</name><index pos:start="349:61" pos:end="349:73">[<expr pos:start="349:62" pos:end="349:72"><name pos:start="349:62" pos:end="349:70">pixel_ptr</name><operator pos:start="349:71" pos:end="349:71">+</operator><literal type="number" pos:start="349:72" pos:end="349:72">3</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="351:25" pos:end="351:74"><expr pos:start="351:25" pos:end="351:73"><name pos:start="351:25" pos:end="351:44"><name pos:start="351:25" pos:end="351:31">encoded</name><index pos:start="351:32" pos:end="351:44">[<expr pos:start="351:33" pos:end="351:43"><name pos:start="351:33" pos:end="351:41">pixel_ptr</name><operator pos:start="351:42" pos:end="351:42">+</operator><literal type="number" pos:start="351:43" pos:end="351:43">4</literal></expr>]</index></name> <operator pos:start="351:46" pos:end="351:46">=</operator> <name pos:start="351:48" pos:end="351:49">uq</name> <operator pos:start="351:51" pos:end="351:52">-=</operator> <name pos:start="351:54" pos:end="351:73"><name pos:start="351:54" pos:end="351:60">encoded</name><index pos:start="351:61" pos:end="351:73">[<expr pos:start="351:62" pos:end="351:72"><name pos:start="351:62" pos:end="351:70">pixel_ptr</name><operator pos:start="351:71" pos:end="351:71">+</operator><literal type="number" pos:start="351:72" pos:end="351:72">4</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="353:25" pos:end="353:74"><expr pos:start="353:25" pos:end="353:73"><name pos:start="353:25" pos:end="353:44"><name pos:start="353:25" pos:end="353:31">encoded</name><index pos:start="353:32" pos:end="353:44">[<expr pos:start="353:33" pos:end="353:43"><name pos:start="353:33" pos:end="353:41">pixel_ptr</name><operator pos:start="353:42" pos:end="353:42">+</operator><literal type="number" pos:start="353:43" pos:end="353:43">5</literal></expr>]</index></name> <operator pos:start="353:46" pos:end="353:46">=</operator> <name pos:start="353:48" pos:end="353:49">uq</name> <operator pos:start="353:51" pos:end="353:52">-=</operator> <name pos:start="353:54" pos:end="353:73"><name pos:start="353:54" pos:end="353:60">encoded</name><index pos:start="353:61" pos:end="353:73">[<expr pos:start="353:62" pos:end="353:72"><name pos:start="353:62" pos:end="353:70">pixel_ptr</name><operator pos:start="353:71" pos:end="353:71">+</operator><literal type="number" pos:start="353:72" pos:end="353:72">5</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="355:25" pos:end="355:74"><expr pos:start="355:25" pos:end="355:73"><name pos:start="355:25" pos:end="355:44"><name pos:start="355:25" pos:end="355:31">encoded</name><index pos:start="355:32" pos:end="355:44">[<expr pos:start="355:33" pos:end="355:43"><name pos:start="355:33" pos:end="355:41">pixel_ptr</name><operator pos:start="355:42" pos:end="355:42">+</operator><literal type="number" pos:start="355:43" pos:end="355:43">6</literal></expr>]</index></name> <operator pos:start="355:46" pos:end="355:46">=</operator> <name pos:start="355:48" pos:end="355:49">vq</name> <operator pos:start="355:51" pos:end="355:52">-=</operator> <name pos:start="355:54" pos:end="355:73"><name pos:start="355:54" pos:end="355:60">encoded</name><index pos:start="355:61" pos:end="355:73">[<expr pos:start="355:62" pos:end="355:72"><name pos:start="355:62" pos:end="355:70">pixel_ptr</name><operator pos:start="355:71" pos:end="355:71">+</operator><literal type="number" pos:start="355:72" pos:end="355:72">6</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="357:25" pos:end="357:74"><expr pos:start="357:25" pos:end="357:73"><name pos:start="357:25" pos:end="357:44"><name pos:start="357:25" pos:end="357:31">encoded</name><index pos:start="357:32" pos:end="357:44">[<expr pos:start="357:33" pos:end="357:43"><name pos:start="357:33" pos:end="357:41">pixel_ptr</name><operator pos:start="357:42" pos:end="357:42">+</operator><literal type="number" pos:start="357:43" pos:end="357:43">7</literal></expr>]</index></name> <operator pos:start="357:46" pos:end="357:46">=</operator> <name pos:start="357:48" pos:end="357:49">vq</name> <operator pos:start="357:51" pos:end="357:52">-=</operator> <name pos:start="357:54" pos:end="357:73"><name pos:start="357:54" pos:end="357:60">encoded</name><index pos:start="357:61" pos:end="357:73">[<expr pos:start="357:62" pos:end="357:72"><name pos:start="357:62" pos:end="357:70">pixel_ptr</name><operator pos:start="357:71" pos:end="357:71">+</operator><literal type="number" pos:start="357:72" pos:end="357:72">7</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="359:25" pos:end="359:39"><expr pos:start="359:25" pos:end="359:38"><name pos:start="359:25" pos:end="359:33">pixel_ptr</name> <operator pos:start="359:35" pos:end="359:36">+=</operator> <literal type="number" pos:start="359:38" pos:end="359:38">8</literal></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

                <break pos:start="365:17" pos:end="365:22">break;</break>

            <case pos:start="367:13" pos:end="367:32">case <expr pos:start="367:18" pos:end="367:31"><name pos:start="367:18" pos:end="367:31">IMGTYPE_YUV411</name></expr>:</case>

                <for pos:start="369:17" pos:end="393:17">for <control pos:start="369:21" pos:end="369:50">(<init pos:start="369:22" pos:end="369:29"><expr pos:start="369:22" pos:end="369:28"><name pos:start="369:22" pos:end="369:24">row</name> <operator pos:start="369:26" pos:end="369:26">=</operator> <literal type="number" pos:start="369:28" pos:end="369:28">0</literal></expr>;</init> <condition pos:start="369:31" pos:end="369:43"><expr pos:start="369:31" pos:end="369:42"><name pos:start="369:31" pos:end="369:33">row</name> <operator pos:start="369:35" pos:end="369:35">&lt;</operator> <name pos:start="369:37" pos:end="369:42">height</name></expr>;</condition> <incr pos:start="369:45" pos:end="369:49"><expr pos:start="369:45" pos:end="369:49"><name pos:start="369:45" pos:end="369:47">row</name><operator pos:start="369:48" pos:end="369:49">++</operator></expr></incr>)</control> <block pos:start="369:52" pos:end="393:17">{<block_content pos:start="371:21" pos:end="391:21">

                    <expr_stmt pos:start="371:21" pos:end="371:52"><expr pos:start="371:21" pos:end="371:51"><name pos:start="371:21" pos:end="371:29">pixel_ptr</name> <operator pos:start="371:31" pos:end="371:31">=</operator> <name pos:start="371:33" pos:end="371:35">row</name> <operator pos:start="371:37" pos:end="371:37">*</operator> <name pos:start="371:39" pos:end="371:43">width</name> <operator pos:start="371:45" pos:end="371:45">/</operator> <literal type="number" pos:start="371:47" pos:end="371:47">2</literal> <operator pos:start="371:49" pos:end="371:49">*</operator> <literal type="number" pos:start="371:51" pos:end="371:51">3</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="373:21" pos:end="373:36"><expr pos:start="373:21" pos:end="373:35"><name pos:start="373:21" pos:end="373:22">yq</name> <operator pos:start="373:24" pos:end="373:24">=</operator> <name pos:start="373:26" pos:end="373:27">uq</name> <operator pos:start="373:29" pos:end="373:29">=</operator> <name pos:start="373:31" pos:end="373:32">vq</name> <operator pos:start="373:34" pos:end="373:34">=</operator><literal type="number" pos:start="373:35" pos:end="373:35">0</literal></expr>;</expr_stmt>

                    <for pos:start="375:21" pos:end="391:21">for <control pos:start="375:25" pos:end="375:55">(<init pos:start="375:26" pos:end="375:33"><expr pos:start="375:26" pos:end="375:32"><name pos:start="375:26" pos:end="375:28">col</name> <operator pos:start="375:30" pos:end="375:30">=</operator> <literal type="number" pos:start="375:32" pos:end="375:32">0</literal></expr>;</init> <condition pos:start="375:35" pos:end="375:48"><expr pos:start="375:35" pos:end="375:47"><name pos:start="375:35" pos:end="375:37">col</name> <operator pos:start="375:39" pos:end="375:39">&lt;</operator> <name pos:start="375:41" pos:end="375:45">width</name><operator pos:start="375:46" pos:end="375:46">/</operator><literal type="number" pos:start="375:47" pos:end="375:47">4</literal></expr>;</condition> <incr pos:start="375:50" pos:end="375:54"><expr pos:start="375:50" pos:end="375:54"><name pos:start="375:50" pos:end="375:52">col</name><operator pos:start="375:53" pos:end="375:54">++</operator></expr></incr>)</control> <block pos:start="375:57" pos:end="391:21">{<block_content pos:start="377:25" pos:end="389:39">

                        <expr_stmt pos:start="377:25" pos:end="377:70"><expr pos:start="377:25" pos:end="377:69"><name pos:start="377:25" pos:end="377:42"><name pos:start="377:25" pos:end="377:31">encoded</name><index pos:start="377:32" pos:end="377:42">[<expr pos:start="377:33" pos:end="377:41"><name pos:start="377:33" pos:end="377:41">pixel_ptr</name></expr>]</index></name> <operator pos:start="377:44" pos:end="377:44">=</operator> <name pos:start="377:46" pos:end="377:47">yq</name> <operator pos:start="377:49" pos:end="377:50">-=</operator> <name pos:start="377:52" pos:end="377:69"><name pos:start="377:52" pos:end="377:58">encoded</name><index pos:start="377:59" pos:end="377:69">[<expr pos:start="377:60" pos:end="377:68"><name pos:start="377:60" pos:end="377:68">pixel_ptr</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="379:25" pos:end="379:74"><expr pos:start="379:25" pos:end="379:73"><name pos:start="379:25" pos:end="379:44"><name pos:start="379:25" pos:end="379:31">encoded</name><index pos:start="379:32" pos:end="379:44">[<expr pos:start="379:33" pos:end="379:43"><name pos:start="379:33" pos:end="379:41">pixel_ptr</name><operator pos:start="379:42" pos:end="379:42">+</operator><literal type="number" pos:start="379:43" pos:end="379:43">1</literal></expr>]</index></name> <operator pos:start="379:46" pos:end="379:46">=</operator> <name pos:start="379:48" pos:end="379:49">yq</name> <operator pos:start="379:51" pos:end="379:52">-=</operator> <name pos:start="379:54" pos:end="379:73"><name pos:start="379:54" pos:end="379:60">encoded</name><index pos:start="379:61" pos:end="379:73">[<expr pos:start="379:62" pos:end="379:72"><name pos:start="379:62" pos:end="379:70">pixel_ptr</name><operator pos:start="379:71" pos:end="379:71">+</operator><literal type="number" pos:start="379:72" pos:end="379:72">1</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="381:25" pos:end="381:74"><expr pos:start="381:25" pos:end="381:73"><name pos:start="381:25" pos:end="381:44"><name pos:start="381:25" pos:end="381:31">encoded</name><index pos:start="381:32" pos:end="381:44">[<expr pos:start="381:33" pos:end="381:43"><name pos:start="381:33" pos:end="381:41">pixel_ptr</name><operator pos:start="381:42" pos:end="381:42">+</operator><literal type="number" pos:start="381:43" pos:end="381:43">2</literal></expr>]</index></name> <operator pos:start="381:46" pos:end="381:46">=</operator> <name pos:start="381:48" pos:end="381:49">yq</name> <operator pos:start="381:51" pos:end="381:52">-=</operator> <name pos:start="381:54" pos:end="381:73"><name pos:start="381:54" pos:end="381:60">encoded</name><index pos:start="381:61" pos:end="381:73">[<expr pos:start="381:62" pos:end="381:72"><name pos:start="381:62" pos:end="381:70">pixel_ptr</name><operator pos:start="381:71" pos:end="381:71">+</operator><literal type="number" pos:start="381:72" pos:end="381:72">2</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="383:25" pos:end="383:74"><expr pos:start="383:25" pos:end="383:73"><name pos:start="383:25" pos:end="383:44"><name pos:start="383:25" pos:end="383:31">encoded</name><index pos:start="383:32" pos:end="383:44">[<expr pos:start="383:33" pos:end="383:43"><name pos:start="383:33" pos:end="383:41">pixel_ptr</name><operator pos:start="383:42" pos:end="383:42">+</operator><literal type="number" pos:start="383:43" pos:end="383:43">3</literal></expr>]</index></name> <operator pos:start="383:46" pos:end="383:46">=</operator> <name pos:start="383:48" pos:end="383:49">yq</name> <operator pos:start="383:51" pos:end="383:52">-=</operator> <name pos:start="383:54" pos:end="383:73"><name pos:start="383:54" pos:end="383:60">encoded</name><index pos:start="383:61" pos:end="383:73">[<expr pos:start="383:62" pos:end="383:72"><name pos:start="383:62" pos:end="383:70">pixel_ptr</name><operator pos:start="383:71" pos:end="383:71">+</operator><literal type="number" pos:start="383:72" pos:end="383:72">3</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="385:25" pos:end="385:74"><expr pos:start="385:25" pos:end="385:73"><name pos:start="385:25" pos:end="385:44"><name pos:start="385:25" pos:end="385:31">encoded</name><index pos:start="385:32" pos:end="385:44">[<expr pos:start="385:33" pos:end="385:43"><name pos:start="385:33" pos:end="385:41">pixel_ptr</name><operator pos:start="385:42" pos:end="385:42">+</operator><literal type="number" pos:start="385:43" pos:end="385:43">4</literal></expr>]</index></name> <operator pos:start="385:46" pos:end="385:46">=</operator> <name pos:start="385:48" pos:end="385:49">uq</name> <operator pos:start="385:51" pos:end="385:52">-=</operator> <name pos:start="385:54" pos:end="385:73"><name pos:start="385:54" pos:end="385:60">encoded</name><index pos:start="385:61" pos:end="385:73">[<expr pos:start="385:62" pos:end="385:72"><name pos:start="385:62" pos:end="385:70">pixel_ptr</name><operator pos:start="385:71" pos:end="385:71">+</operator><literal type="number" pos:start="385:72" pos:end="385:72">4</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="387:25" pos:end="387:74"><expr pos:start="387:25" pos:end="387:73"><name pos:start="387:25" pos:end="387:44"><name pos:start="387:25" pos:end="387:31">encoded</name><index pos:start="387:32" pos:end="387:44">[<expr pos:start="387:33" pos:end="387:43"><name pos:start="387:33" pos:end="387:41">pixel_ptr</name><operator pos:start="387:42" pos:end="387:42">+</operator><literal type="number" pos:start="387:43" pos:end="387:43">5</literal></expr>]</index></name> <operator pos:start="387:46" pos:end="387:46">=</operator> <name pos:start="387:48" pos:end="387:49">vq</name> <operator pos:start="387:51" pos:end="387:52">-=</operator> <name pos:start="387:54" pos:end="387:73"><name pos:start="387:54" pos:end="387:60">encoded</name><index pos:start="387:61" pos:end="387:73">[<expr pos:start="387:62" pos:end="387:72"><name pos:start="387:62" pos:end="387:70">pixel_ptr</name><operator pos:start="387:71" pos:end="387:71">+</operator><literal type="number" pos:start="387:72" pos:end="387:72">5</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="389:25" pos:end="389:39"><expr pos:start="389:25" pos:end="389:38"><name pos:start="389:25" pos:end="389:33">pixel_ptr</name> <operator pos:start="389:35" pos:end="389:36">+=</operator> <literal type="number" pos:start="389:38" pos:end="389:38">6</literal></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

                <break pos:start="395:17" pos:end="395:22">break;</break>

            <case pos:start="397:13" pos:end="397:32">case <expr pos:start="397:18" pos:end="397:31"><name pos:start="397:18" pos:end="397:31">IMGTYPE_YUV211</name></expr>:</case>

                <for pos:start="399:17" pos:end="419:17">for <control pos:start="399:21" pos:end="399:50">(<init pos:start="399:22" pos:end="399:29"><expr pos:start="399:22" pos:end="399:28"><name pos:start="399:22" pos:end="399:24">row</name> <operator pos:start="399:26" pos:end="399:26">=</operator> <literal type="number" pos:start="399:28" pos:end="399:28">0</literal></expr>;</init> <condition pos:start="399:31" pos:end="399:43"><expr pos:start="399:31" pos:end="399:42"><name pos:start="399:31" pos:end="399:33">row</name> <operator pos:start="399:35" pos:end="399:35">&lt;</operator> <name pos:start="399:37" pos:end="399:42">height</name></expr>;</condition> <incr pos:start="399:45" pos:end="399:49"><expr pos:start="399:45" pos:end="399:49"><name pos:start="399:45" pos:end="399:47">row</name><operator pos:start="399:48" pos:end="399:49">++</operator></expr></incr>)</control> <block pos:start="399:52" pos:end="419:17">{<block_content pos:start="401:21" pos:end="417:21">

                    <expr_stmt pos:start="401:21" pos:end="401:48"><expr pos:start="401:21" pos:end="401:47"><name pos:start="401:21" pos:end="401:29">pixel_ptr</name> <operator pos:start="401:31" pos:end="401:31">=</operator> <name pos:start="401:33" pos:end="401:35">row</name> <operator pos:start="401:37" pos:end="401:37">*</operator> <name pos:start="401:39" pos:end="401:43">width</name> <operator pos:start="401:45" pos:end="401:45">*</operator> <literal type="number" pos:start="401:47" pos:end="401:47">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="403:21" pos:end="403:36"><expr pos:start="403:21" pos:end="403:35"><name pos:start="403:21" pos:end="403:22">yq</name> <operator pos:start="403:24" pos:end="403:24">=</operator> <name pos:start="403:26" pos:end="403:27">uq</name> <operator pos:start="403:29" pos:end="403:29">=</operator> <name pos:start="403:31" pos:end="403:32">vq</name> <operator pos:start="403:34" pos:end="403:34">=</operator><literal type="number" pos:start="403:35" pos:end="403:35">0</literal></expr>;</expr_stmt>

                    <for pos:start="405:21" pos:end="417:21">for <control pos:start="405:25" pos:end="405:55">(<init pos:start="405:26" pos:end="405:33"><expr pos:start="405:26" pos:end="405:32"><name pos:start="405:26" pos:end="405:28">col</name> <operator pos:start="405:30" pos:end="405:30">=</operator> <literal type="number" pos:start="405:32" pos:end="405:32">0</literal></expr>;</init> <condition pos:start="405:35" pos:end="405:48"><expr pos:start="405:35" pos:end="405:47"><name pos:start="405:35" pos:end="405:37">col</name> <operator pos:start="405:39" pos:end="405:39">&lt;</operator> <name pos:start="405:41" pos:end="405:45">width</name><operator pos:start="405:46" pos:end="405:46">/</operator><literal type="number" pos:start="405:47" pos:end="405:47">2</literal></expr>;</condition> <incr pos:start="405:50" pos:end="405:54"><expr pos:start="405:50" pos:end="405:54"><name pos:start="405:50" pos:end="405:52">col</name><operator pos:start="405:53" pos:end="405:54">++</operator></expr></incr>)</control> <block pos:start="405:57" pos:end="417:21">{<block_content pos:start="407:25" pos:end="415:39">

                        <expr_stmt pos:start="407:25" pos:end="407:70"><expr pos:start="407:25" pos:end="407:69"><name pos:start="407:25" pos:end="407:42"><name pos:start="407:25" pos:end="407:31">encoded</name><index pos:start="407:32" pos:end="407:42">[<expr pos:start="407:33" pos:end="407:41"><name pos:start="407:33" pos:end="407:41">pixel_ptr</name></expr>]</index></name> <operator pos:start="407:44" pos:end="407:44">=</operator> <name pos:start="407:46" pos:end="407:47">yq</name> <operator pos:start="407:49" pos:end="407:50">-=</operator> <name pos:start="407:52" pos:end="407:69"><name pos:start="407:52" pos:end="407:58">encoded</name><index pos:start="407:59" pos:end="407:69">[<expr pos:start="407:60" pos:end="407:68"><name pos:start="407:60" pos:end="407:68">pixel_ptr</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="409:25" pos:end="409:74"><expr pos:start="409:25" pos:end="409:73"><name pos:start="409:25" pos:end="409:44"><name pos:start="409:25" pos:end="409:31">encoded</name><index pos:start="409:32" pos:end="409:44">[<expr pos:start="409:33" pos:end="409:43"><name pos:start="409:33" pos:end="409:41">pixel_ptr</name><operator pos:start="409:42" pos:end="409:42">+</operator><literal type="number" pos:start="409:43" pos:end="409:43">1</literal></expr>]</index></name> <operator pos:start="409:46" pos:end="409:46">=</operator> <name pos:start="409:48" pos:end="409:49">yq</name> <operator pos:start="409:51" pos:end="409:52">-=</operator> <name pos:start="409:54" pos:end="409:73"><name pos:start="409:54" pos:end="409:60">encoded</name><index pos:start="409:61" pos:end="409:73">[<expr pos:start="409:62" pos:end="409:72"><name pos:start="409:62" pos:end="409:70">pixel_ptr</name><operator pos:start="409:71" pos:end="409:71">+</operator><literal type="number" pos:start="409:72" pos:end="409:72">1</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="411:25" pos:end="411:74"><expr pos:start="411:25" pos:end="411:73"><name pos:start="411:25" pos:end="411:44"><name pos:start="411:25" pos:end="411:31">encoded</name><index pos:start="411:32" pos:end="411:44">[<expr pos:start="411:33" pos:end="411:43"><name pos:start="411:33" pos:end="411:41">pixel_ptr</name><operator pos:start="411:42" pos:end="411:42">+</operator><literal type="number" pos:start="411:43" pos:end="411:43">2</literal></expr>]</index></name> <operator pos:start="411:46" pos:end="411:46">=</operator> <name pos:start="411:48" pos:end="411:49">uq</name> <operator pos:start="411:51" pos:end="411:52">-=</operator> <name pos:start="411:54" pos:end="411:73"><name pos:start="411:54" pos:end="411:60">encoded</name><index pos:start="411:61" pos:end="411:73">[<expr pos:start="411:62" pos:end="411:72"><name pos:start="411:62" pos:end="411:70">pixel_ptr</name><operator pos:start="411:71" pos:end="411:71">+</operator><literal type="number" pos:start="411:72" pos:end="411:72">2</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="413:25" pos:end="413:74"><expr pos:start="413:25" pos:end="413:73"><name pos:start="413:25" pos:end="413:44"><name pos:start="413:25" pos:end="413:31">encoded</name><index pos:start="413:32" pos:end="413:44">[<expr pos:start="413:33" pos:end="413:43"><name pos:start="413:33" pos:end="413:41">pixel_ptr</name><operator pos:start="413:42" pos:end="413:42">+</operator><literal type="number" pos:start="413:43" pos:end="413:43">3</literal></expr>]</index></name> <operator pos:start="413:46" pos:end="413:46">=</operator> <name pos:start="413:48" pos:end="413:49">vq</name> <operator pos:start="413:51" pos:end="413:52">-=</operator> <name pos:start="413:54" pos:end="413:73"><name pos:start="413:54" pos:end="413:60">encoded</name><index pos:start="413:61" pos:end="413:73">[<expr pos:start="413:62" pos:end="413:72"><name pos:start="413:62" pos:end="413:70">pixel_ptr</name><operator pos:start="413:71" pos:end="413:71">+</operator><literal type="number" pos:start="413:72" pos:end="413:72">3</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="415:25" pos:end="415:39"><expr pos:start="415:25" pos:end="415:38"><name pos:start="415:25" pos:end="415:33">pixel_ptr</name> <operator pos:start="415:35" pos:end="415:36">+=</operator> <literal type="number" pos:start="415:38" pos:end="415:38">4</literal></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

                <break pos:start="421:17" pos:end="421:22">break;</break>

            <case pos:start="423:13" pos:end="423:32">case <expr pos:start="423:18" pos:end="423:31"><name pos:start="423:18" pos:end="423:31">IMGTYPE_YUV420</name></expr>:</case>

                <for pos:start="425:17" pos:end="449:17">for <control pos:start="425:21" pos:end="425:52">(<init pos:start="425:22" pos:end="425:29"><expr pos:start="425:22" pos:end="425:28"><name pos:start="425:22" pos:end="425:24">row</name> <operator pos:start="425:26" pos:end="425:26">=</operator> <literal type="number" pos:start="425:28" pos:end="425:28">0</literal></expr>;</init> <condition pos:start="425:31" pos:end="425:45"><expr pos:start="425:31" pos:end="425:44"><name pos:start="425:31" pos:end="425:33">row</name> <operator pos:start="425:35" pos:end="425:35">&lt;</operator> <name pos:start="425:37" pos:end="425:42">height</name><operator pos:start="425:43" pos:end="425:43">/</operator><literal type="number" pos:start="425:44" pos:end="425:44">2</literal></expr>;</condition> <incr pos:start="425:47" pos:end="425:51"><expr pos:start="425:47" pos:end="425:51"><name pos:start="425:47" pos:end="425:49">row</name><operator pos:start="425:50" pos:end="425:51">++</operator></expr></incr>)</control> <block pos:start="425:54" pos:end="449:17">{<block_content pos:start="427:21" pos:end="447:21">

                    <expr_stmt pos:start="427:21" pos:end="427:48"><expr pos:start="427:21" pos:end="427:47"><name pos:start="427:21" pos:end="427:29">pixel_ptr</name> <operator pos:start="427:31" pos:end="427:31">=</operator> <name pos:start="427:33" pos:end="427:35">row</name> <operator pos:start="427:37" pos:end="427:37">*</operator> <name pos:start="427:39" pos:end="427:43">width</name> <operator pos:start="427:45" pos:end="427:45">*</operator> <literal type="number" pos:start="427:47" pos:end="427:47">3</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="429:21" pos:end="429:42"><expr pos:start="429:21" pos:end="429:41"><name pos:start="429:21" pos:end="429:22">yq</name> <operator pos:start="429:24" pos:end="429:24">=</operator> <name pos:start="429:26" pos:end="429:28">y1q</name> <operator pos:start="429:30" pos:end="429:30">=</operator> <name pos:start="429:32" pos:end="429:33">uq</name> <operator pos:start="429:35" pos:end="429:35">=</operator> <name pos:start="429:37" pos:end="429:38">vq</name> <operator pos:start="429:40" pos:end="429:40">=</operator><literal type="number" pos:start="429:41" pos:end="429:41">0</literal></expr>;</expr_stmt>

                    <for pos:start="431:21" pos:end="447:21">for <control pos:start="431:25" pos:end="431:55">(<init pos:start="431:26" pos:end="431:33"><expr pos:start="431:26" pos:end="431:32"><name pos:start="431:26" pos:end="431:28">col</name> <operator pos:start="431:30" pos:end="431:30">=</operator> <literal type="number" pos:start="431:32" pos:end="431:32">0</literal></expr>;</init> <condition pos:start="431:35" pos:end="431:48"><expr pos:start="431:35" pos:end="431:47"><name pos:start="431:35" pos:end="431:37">col</name> <operator pos:start="431:39" pos:end="431:39">&lt;</operator> <name pos:start="431:41" pos:end="431:45">width</name><operator pos:start="431:46" pos:end="431:46">/</operator><literal type="number" pos:start="431:47" pos:end="431:47">2</literal></expr>;</condition> <incr pos:start="431:50" pos:end="431:54"><expr pos:start="431:50" pos:end="431:54"><name pos:start="431:50" pos:end="431:52">col</name><operator pos:start="431:53" pos:end="431:54">++</operator></expr></incr>)</control> <block pos:start="431:57" pos:end="447:21">{<block_content pos:start="433:25" pos:end="445:39">

                        <expr_stmt pos:start="433:25" pos:end="433:70"><expr pos:start="433:25" pos:end="433:69"><name pos:start="433:25" pos:end="433:42"><name pos:start="433:25" pos:end="433:31">encoded</name><index pos:start="433:32" pos:end="433:42">[<expr pos:start="433:33" pos:end="433:41"><name pos:start="433:33" pos:end="433:41">pixel_ptr</name></expr>]</index></name> <operator pos:start="433:44" pos:end="433:44">=</operator> <name pos:start="433:46" pos:end="433:47">yq</name> <operator pos:start="433:49" pos:end="433:50">-=</operator> <name pos:start="433:52" pos:end="433:69"><name pos:start="433:52" pos:end="433:58">encoded</name><index pos:start="433:59" pos:end="433:69">[<expr pos:start="433:60" pos:end="433:68"><name pos:start="433:60" pos:end="433:68">pixel_ptr</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="435:25" pos:end="435:74"><expr pos:start="435:25" pos:end="435:73"><name pos:start="435:25" pos:end="435:44"><name pos:start="435:25" pos:end="435:31">encoded</name><index pos:start="435:32" pos:end="435:44">[<expr pos:start="435:33" pos:end="435:43"><name pos:start="435:33" pos:end="435:41">pixel_ptr</name><operator pos:start="435:42" pos:end="435:42">+</operator><literal type="number" pos:start="435:43" pos:end="435:43">1</literal></expr>]</index></name> <operator pos:start="435:46" pos:end="435:46">=</operator> <name pos:start="435:48" pos:end="435:49">yq</name> <operator pos:start="435:51" pos:end="435:52">-=</operator> <name pos:start="435:54" pos:end="435:73"><name pos:start="435:54" pos:end="435:60">encoded</name><index pos:start="435:61" pos:end="435:73">[<expr pos:start="435:62" pos:end="435:72"><name pos:start="435:62" pos:end="435:70">pixel_ptr</name><operator pos:start="435:71" pos:end="435:71">+</operator><literal type="number" pos:start="435:72" pos:end="435:72">1</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="437:25" pos:end="437:75"><expr pos:start="437:25" pos:end="437:74"><name pos:start="437:25" pos:end="437:44"><name pos:start="437:25" pos:end="437:31">encoded</name><index pos:start="437:32" pos:end="437:44">[<expr pos:start="437:33" pos:end="437:43"><name pos:start="437:33" pos:end="437:41">pixel_ptr</name><operator pos:start="437:42" pos:end="437:42">+</operator><literal type="number" pos:start="437:43" pos:end="437:43">2</literal></expr>]</index></name> <operator pos:start="437:46" pos:end="437:46">=</operator> <name pos:start="437:48" pos:end="437:50">y1q</name> <operator pos:start="437:52" pos:end="437:53">-=</operator> <name pos:start="437:55" pos:end="437:74"><name pos:start="437:55" pos:end="437:61">encoded</name><index pos:start="437:62" pos:end="437:74">[<expr pos:start="437:63" pos:end="437:73"><name pos:start="437:63" pos:end="437:71">pixel_ptr</name><operator pos:start="437:72" pos:end="437:72">+</operator><literal type="number" pos:start="437:73" pos:end="437:73">2</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="439:25" pos:end="439:75"><expr pos:start="439:25" pos:end="439:74"><name pos:start="439:25" pos:end="439:44"><name pos:start="439:25" pos:end="439:31">encoded</name><index pos:start="439:32" pos:end="439:44">[<expr pos:start="439:33" pos:end="439:43"><name pos:start="439:33" pos:end="439:41">pixel_ptr</name><operator pos:start="439:42" pos:end="439:42">+</operator><literal type="number" pos:start="439:43" pos:end="439:43">3</literal></expr>]</index></name> <operator pos:start="439:46" pos:end="439:46">=</operator> <name pos:start="439:48" pos:end="439:50">y1q</name> <operator pos:start="439:52" pos:end="439:53">-=</operator> <name pos:start="439:55" pos:end="439:74"><name pos:start="439:55" pos:end="439:61">encoded</name><index pos:start="439:62" pos:end="439:74">[<expr pos:start="439:63" pos:end="439:73"><name pos:start="439:63" pos:end="439:71">pixel_ptr</name><operator pos:start="439:72" pos:end="439:72">+</operator><literal type="number" pos:start="439:73" pos:end="439:73">3</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="441:25" pos:end="441:74"><expr pos:start="441:25" pos:end="441:73"><name pos:start="441:25" pos:end="441:44"><name pos:start="441:25" pos:end="441:31">encoded</name><index pos:start="441:32" pos:end="441:44">[<expr pos:start="441:33" pos:end="441:43"><name pos:start="441:33" pos:end="441:41">pixel_ptr</name><operator pos:start="441:42" pos:end="441:42">+</operator><literal type="number" pos:start="441:43" pos:end="441:43">4</literal></expr>]</index></name> <operator pos:start="441:46" pos:end="441:46">=</operator> <name pos:start="441:48" pos:end="441:49">uq</name> <operator pos:start="441:51" pos:end="441:52">-=</operator> <name pos:start="441:54" pos:end="441:73"><name pos:start="441:54" pos:end="441:60">encoded</name><index pos:start="441:61" pos:end="441:73">[<expr pos:start="441:62" pos:end="441:72"><name pos:start="441:62" pos:end="441:70">pixel_ptr</name><operator pos:start="441:71" pos:end="441:71">+</operator><literal type="number" pos:start="441:72" pos:end="441:72">4</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="443:25" pos:end="443:74"><expr pos:start="443:25" pos:end="443:73"><name pos:start="443:25" pos:end="443:44"><name pos:start="443:25" pos:end="443:31">encoded</name><index pos:start="443:32" pos:end="443:44">[<expr pos:start="443:33" pos:end="443:43"><name pos:start="443:33" pos:end="443:41">pixel_ptr</name><operator pos:start="443:42" pos:end="443:42">+</operator><literal type="number" pos:start="443:43" pos:end="443:43">5</literal></expr>]</index></name> <operator pos:start="443:46" pos:end="443:46">=</operator> <name pos:start="443:48" pos:end="443:49">vq</name> <operator pos:start="443:51" pos:end="443:52">-=</operator> <name pos:start="443:54" pos:end="443:73"><name pos:start="443:54" pos:end="443:60">encoded</name><index pos:start="443:61" pos:end="443:73">[<expr pos:start="443:62" pos:end="443:72"><name pos:start="443:62" pos:end="443:70">pixel_ptr</name><operator pos:start="443:71" pos:end="443:71">+</operator><literal type="number" pos:start="443:72" pos:end="443:72">5</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="445:25" pos:end="445:39"><expr pos:start="445:25" pos:end="445:38"><name pos:start="445:25" pos:end="445:33">pixel_ptr</name> <operator pos:start="445:35" pos:end="445:36">+=</operator> <literal type="number" pos:start="445:38" pos:end="445:38">6</literal></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

                <break pos:start="451:17" pos:end="451:22">break;</break>

            <default pos:start="453:13" pos:end="453:20">default:</default>

                <expr_stmt pos:start="455:17" pos:end="455:93"><expr pos:start="455:17" pos:end="455:92"><call pos:start="455:17" pos:end="455:92"><name pos:start="455:17" pos:end="455:22">av_log</name><argument_list pos:start="455:23" pos:end="455:92">(<argument pos:start="455:24" pos:end="455:28"><expr pos:start="455:24" pos:end="455:28"><name pos:start="455:24" pos:end="455:28">avctx</name></expr></argument>, <argument pos:start="455:31" pos:end="455:42"><expr pos:start="455:31" pos:end="455:42"><name pos:start="455:31" pos:end="455:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="455:45" pos:end="455:91"><expr pos:start="455:45" pos:end="455:91"><literal type="string" pos:start="455:45" pos:end="455:91">"BUG! Unknown imagetype in pngfilter switch.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="457:17" pos:end="457:26">return <expr pos:start="457:24" pos:end="457:25"><operator pos:start="457:24" pos:end="457:24">-</operator><literal type="number" pos:start="457:25" pos:end="457:25">1</literal></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="465:5" pos:end="465:28">/* Convert colorspace */</comment>

    <switch pos:start="467:5" pos:end="669:5">switch <condition pos:start="467:12" pos:end="467:23">(<expr pos:start="467:13" pos:end="467:22"><name pos:start="467:13" pos:end="467:22"><name pos:start="467:13" pos:end="467:13">c</name><operator pos:start="467:14" pos:end="467:15">-&gt;</operator><name pos:start="467:16" pos:end="467:22">imgtype</name></name></expr>)</condition> <block pos:start="467:25" pos:end="669:5">{<block_content pos:start="469:9" pos:end="667:22">

        <case pos:start="469:9" pos:end="469:28">case <expr pos:start="469:14" pos:end="469:27"><name pos:start="469:14" pos:end="469:27">IMGTYPE_YUV111</name></expr>:</case>

            <for pos:start="471:13" pos:end="487:13">for <control pos:start="471:17" pos:end="471:51">(<init pos:start="471:18" pos:end="471:34"><expr pos:start="471:18" pos:end="471:33"><name pos:start="471:18" pos:end="471:20">row</name> <operator pos:start="471:22" pos:end="471:22">=</operator> <name pos:start="471:24" pos:end="471:29">height</name> <operator pos:start="471:31" pos:end="471:31">-</operator> <literal type="number" pos:start="471:33" pos:end="471:33">1</literal></expr>;</init> <condition pos:start="471:36" pos:end="471:44"><expr pos:start="471:36" pos:end="471:43"><name pos:start="471:36" pos:end="471:38">row</name> <operator pos:start="471:40" pos:end="471:41">&gt;=</operator> <literal type="number" pos:start="471:43" pos:end="471:43">0</literal></expr>;</condition> <incr pos:start="471:46" pos:end="471:50"><expr pos:start="471:46" pos:end="471:50"><name pos:start="471:46" pos:end="471:48">row</name><operator pos:start="471:49" pos:end="471:50">--</operator></expr></incr>)</control> <block pos:start="471:53" pos:end="487:13">{<block_content pos:start="473:17" pos:end="485:17">

                <expr_stmt pos:start="473:17" pos:end="473:53"><expr pos:start="473:17" pos:end="473:52"><name pos:start="473:17" pos:end="473:25">pixel_ptr</name> <operator pos:start="473:27" pos:end="473:27">=</operator> <name pos:start="473:29" pos:end="473:31">row</name> <operator pos:start="473:33" pos:end="473:33">*</operator> <name pos:start="473:35" pos:end="473:52"><name pos:start="473:35" pos:end="473:35">c</name><operator pos:start="473:36" pos:end="473:37">-&gt;</operator><name pos:start="473:38" pos:end="473:40">pic</name><operator pos:start="473:41" pos:end="473:41">.</operator><name pos:start="473:42" pos:end="473:49">linesize</name><index pos:start="473:50" pos:end="473:52">[<expr pos:start="473:51" pos:end="473:51"><literal type="number" pos:start="473:51" pos:end="473:51">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <for pos:start="475:17" pos:end="485:17">for <control pos:start="475:21" pos:end="475:49">(<init pos:start="475:22" pos:end="475:29"><expr pos:start="475:22" pos:end="475:28"><name pos:start="475:22" pos:end="475:24">col</name> <operator pos:start="475:26" pos:end="475:26">=</operator> <literal type="number" pos:start="475:28" pos:end="475:28">0</literal></expr>;</init> <condition pos:start="475:31" pos:end="475:42"><expr pos:start="475:31" pos:end="475:41"><name pos:start="475:31" pos:end="475:33">col</name> <operator pos:start="475:35" pos:end="475:35">&lt;</operator> <name pos:start="475:37" pos:end="475:41">width</name></expr>;</condition> <incr pos:start="475:44" pos:end="475:48"><expr pos:start="475:44" pos:end="475:48"><name pos:start="475:44" pos:end="475:46">col</name><operator pos:start="475:47" pos:end="475:48">++</operator></expr></incr>)</control> <block pos:start="475:51" pos:end="485:17">{<block_content pos:start="477:21" pos:end="483:33">

                    <expr_stmt pos:start="477:21" pos:end="477:72"><expr pos:start="477:21" pos:end="477:71"><name pos:start="477:21" pos:end="477:39"><name pos:start="477:21" pos:end="477:26">outptr</name><index pos:start="477:27" pos:end="477:39">[<expr pos:start="477:28" pos:end="477:38"><name pos:start="477:28" pos:end="477:36">pixel_ptr</name><operator pos:start="477:37" pos:end="477:38">++</operator></expr>]</index></name> <operator pos:start="477:41" pos:end="477:41">=</operator> <call pos:start="477:43" pos:end="477:71"><name pos:start="477:43" pos:end="477:47">get_b</name><argument_list pos:start="477:48" pos:end="477:71">(<argument pos:start="477:49" pos:end="477:58"><expr pos:start="477:49" pos:end="477:58"><name pos:start="477:49" pos:end="477:58"><name pos:start="477:49" pos:end="477:55">encoded</name><index pos:start="477:56" pos:end="477:58">[<expr pos:start="477:57" pos:end="477:57"><literal type="number" pos:start="477:57" pos:end="477:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="477:61" pos:end="477:70"><expr pos:start="477:61" pos:end="477:70"><name pos:start="477:61" pos:end="477:70"><name pos:start="477:61" pos:end="477:67">encoded</name><index pos:start="477:68" pos:end="477:70">[<expr pos:start="477:69" pos:end="477:69"><literal type="number" pos:start="477:69" pos:end="477:69">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="479:21" pos:end="479:84"><expr pos:start="479:21" pos:end="479:83"><name pos:start="479:21" pos:end="479:39"><name pos:start="479:21" pos:end="479:26">outptr</name><index pos:start="479:27" pos:end="479:39">[<expr pos:start="479:28" pos:end="479:38"><name pos:start="479:28" pos:end="479:36">pixel_ptr</name><operator pos:start="479:37" pos:end="479:38">++</operator></expr>]</index></name> <operator pos:start="479:41" pos:end="479:41">=</operator> <call pos:start="479:43" pos:end="479:83"><name pos:start="479:43" pos:end="479:47">get_g</name><argument_list pos:start="479:48" pos:end="479:83">(<argument pos:start="479:49" pos:end="479:58"><expr pos:start="479:49" pos:end="479:58"><name pos:start="479:49" pos:end="479:58"><name pos:start="479:49" pos:end="479:55">encoded</name><index pos:start="479:56" pos:end="479:58">[<expr pos:start="479:57" pos:end="479:57"><literal type="number" pos:start="479:57" pos:end="479:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="479:61" pos:end="479:70"><expr pos:start="479:61" pos:end="479:70"><name pos:start="479:61" pos:end="479:70"><name pos:start="479:61" pos:end="479:67">encoded</name><index pos:start="479:68" pos:end="479:70">[<expr pos:start="479:69" pos:end="479:69"><literal type="number" pos:start="479:69" pos:end="479:69">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="479:73" pos:end="479:82"><expr pos:start="479:73" pos:end="479:82"><name pos:start="479:73" pos:end="479:82"><name pos:start="479:73" pos:end="479:79">encoded</name><index pos:start="479:80" pos:end="479:82">[<expr pos:start="479:81" pos:end="479:81"><literal type="number" pos:start="479:81" pos:end="479:81">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="481:21" pos:end="481:72"><expr pos:start="481:21" pos:end="481:71"><name pos:start="481:21" pos:end="481:39"><name pos:start="481:21" pos:end="481:26">outptr</name><index pos:start="481:27" pos:end="481:39">[<expr pos:start="481:28" pos:end="481:38"><name pos:start="481:28" pos:end="481:36">pixel_ptr</name><operator pos:start="481:37" pos:end="481:38">++</operator></expr>]</index></name> <operator pos:start="481:41" pos:end="481:41">=</operator> <call pos:start="481:43" pos:end="481:71"><name pos:start="481:43" pos:end="481:47">get_r</name><argument_list pos:start="481:48" pos:end="481:71">(<argument pos:start="481:49" pos:end="481:58"><expr pos:start="481:49" pos:end="481:58"><name pos:start="481:49" pos:end="481:58"><name pos:start="481:49" pos:end="481:55">encoded</name><index pos:start="481:56" pos:end="481:58">[<expr pos:start="481:57" pos:end="481:57"><literal type="number" pos:start="481:57" pos:end="481:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="481:61" pos:end="481:70"><expr pos:start="481:61" pos:end="481:70"><name pos:start="481:61" pos:end="481:70"><name pos:start="481:61" pos:end="481:67">encoded</name><index pos:start="481:68" pos:end="481:70">[<expr pos:start="481:69" pos:end="481:69"><literal type="number" pos:start="481:69" pos:end="481:69">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="483:21" pos:end="483:33"><expr pos:start="483:21" pos:end="483:32"><name pos:start="483:21" pos:end="483:27">encoded</name> <operator pos:start="483:29" pos:end="483:30">+=</operator> <literal type="number" pos:start="483:32" pos:end="483:32">3</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <break pos:start="489:13" pos:end="489:18">break;</break>

        <case pos:start="491:9" pos:end="491:28">case <expr pos:start="491:14" pos:end="491:27"><name pos:start="491:14" pos:end="491:27">IMGTYPE_YUV422</name></expr>:</case>

            <for pos:start="493:13" pos:end="527:13">for <control pos:start="493:17" pos:end="493:51">(<init pos:start="493:18" pos:end="493:34"><expr pos:start="493:18" pos:end="493:33"><name pos:start="493:18" pos:end="493:20">row</name> <operator pos:start="493:22" pos:end="493:22">=</operator> <name pos:start="493:24" pos:end="493:29">height</name> <operator pos:start="493:31" pos:end="493:31">-</operator> <literal type="number" pos:start="493:33" pos:end="493:33">1</literal></expr>;</init> <condition pos:start="493:36" pos:end="493:44"><expr pos:start="493:36" pos:end="493:43"><name pos:start="493:36" pos:end="493:38">row</name> <operator pos:start="493:40" pos:end="493:41">&gt;=</operator> <literal type="number" pos:start="493:43" pos:end="493:43">0</literal></expr>;</condition> <incr pos:start="493:46" pos:end="493:50"><expr pos:start="493:46" pos:end="493:50"><name pos:start="493:46" pos:end="493:48">row</name><operator pos:start="493:49" pos:end="493:50">--</operator></expr></incr>)</control> <block pos:start="493:53" pos:end="527:13">{<block_content pos:start="495:17" pos:end="525:17">

                <expr_stmt pos:start="495:17" pos:end="495:53"><expr pos:start="495:17" pos:end="495:52"><name pos:start="495:17" pos:end="495:25">pixel_ptr</name> <operator pos:start="495:27" pos:end="495:27">=</operator> <name pos:start="495:29" pos:end="495:31">row</name> <operator pos:start="495:33" pos:end="495:33">*</operator> <name pos:start="495:35" pos:end="495:52"><name pos:start="495:35" pos:end="495:35">c</name><operator pos:start="495:36" pos:end="495:37">-&gt;</operator><name pos:start="495:38" pos:end="495:40">pic</name><operator pos:start="495:41" pos:end="495:41">.</operator><name pos:start="495:42" pos:end="495:49">linesize</name><index pos:start="495:50" pos:end="495:52">[<expr pos:start="495:51" pos:end="495:51"><literal type="number" pos:start="495:51" pos:end="495:51">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <for pos:start="497:17" pos:end="525:17">for <control pos:start="497:21" pos:end="497:51">(<init pos:start="497:22" pos:end="497:29"><expr pos:start="497:22" pos:end="497:28"><name pos:start="497:22" pos:end="497:24">col</name> <operator pos:start="497:26" pos:end="497:26">=</operator> <literal type="number" pos:start="497:28" pos:end="497:28">0</literal></expr>;</init> <condition pos:start="497:31" pos:end="497:44"><expr pos:start="497:31" pos:end="497:43"><name pos:start="497:31" pos:end="497:33">col</name> <operator pos:start="497:35" pos:end="497:35">&lt;</operator> <name pos:start="497:37" pos:end="497:41">width</name><operator pos:start="497:42" pos:end="497:42">/</operator><literal type="number" pos:start="497:43" pos:end="497:43">4</literal></expr>;</condition> <incr pos:start="497:46" pos:end="497:50"><expr pos:start="497:46" pos:end="497:50"><name pos:start="497:46" pos:end="497:48">col</name><operator pos:start="497:49" pos:end="497:50">++</operator></expr></incr>)</control> <block pos:start="497:53" pos:end="525:17">{<block_content pos:start="499:21" pos:end="523:33">

                    <expr_stmt pos:start="499:21" pos:end="499:72"><expr pos:start="499:21" pos:end="499:71"><name pos:start="499:21" pos:end="499:39"><name pos:start="499:21" pos:end="499:26">outptr</name><index pos:start="499:27" pos:end="499:39">[<expr pos:start="499:28" pos:end="499:38"><name pos:start="499:28" pos:end="499:36">pixel_ptr</name><operator pos:start="499:37" pos:end="499:38">++</operator></expr>]</index></name> <operator pos:start="499:41" pos:end="499:41">=</operator> <call pos:start="499:43" pos:end="499:71"><name pos:start="499:43" pos:end="499:47">get_b</name><argument_list pos:start="499:48" pos:end="499:71">(<argument pos:start="499:49" pos:end="499:58"><expr pos:start="499:49" pos:end="499:58"><name pos:start="499:49" pos:end="499:58"><name pos:start="499:49" pos:end="499:55">encoded</name><index pos:start="499:56" pos:end="499:58">[<expr pos:start="499:57" pos:end="499:57"><literal type="number" pos:start="499:57" pos:end="499:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="499:61" pos:end="499:70"><expr pos:start="499:61" pos:end="499:70"><name pos:start="499:61" pos:end="499:70"><name pos:start="499:61" pos:end="499:67">encoded</name><index pos:start="499:68" pos:end="499:70">[<expr pos:start="499:69" pos:end="499:69"><literal type="number" pos:start="499:69" pos:end="499:69">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="501:21" pos:end="501:84"><expr pos:start="501:21" pos:end="501:83"><name pos:start="501:21" pos:end="501:39"><name pos:start="501:21" pos:end="501:26">outptr</name><index pos:start="501:27" pos:end="501:39">[<expr pos:start="501:28" pos:end="501:38"><name pos:start="501:28" pos:end="501:36">pixel_ptr</name><operator pos:start="501:37" pos:end="501:38">++</operator></expr>]</index></name> <operator pos:start="501:41" pos:end="501:41">=</operator> <call pos:start="501:43" pos:end="501:83"><name pos:start="501:43" pos:end="501:47">get_g</name><argument_list pos:start="501:48" pos:end="501:83">(<argument pos:start="501:49" pos:end="501:58"><expr pos:start="501:49" pos:end="501:58"><name pos:start="501:49" pos:end="501:58"><name pos:start="501:49" pos:end="501:55">encoded</name><index pos:start="501:56" pos:end="501:58">[<expr pos:start="501:57" pos:end="501:57"><literal type="number" pos:start="501:57" pos:end="501:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="501:61" pos:end="501:70"><expr pos:start="501:61" pos:end="501:70"><name pos:start="501:61" pos:end="501:70"><name pos:start="501:61" pos:end="501:67">encoded</name><index pos:start="501:68" pos:end="501:70">[<expr pos:start="501:69" pos:end="501:69"><literal type="number" pos:start="501:69" pos:end="501:69">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="501:73" pos:end="501:82"><expr pos:start="501:73" pos:end="501:82"><name pos:start="501:73" pos:end="501:82"><name pos:start="501:73" pos:end="501:79">encoded</name><index pos:start="501:80" pos:end="501:82">[<expr pos:start="501:81" pos:end="501:81"><literal type="number" pos:start="501:81" pos:end="501:81">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="503:21" pos:end="503:72"><expr pos:start="503:21" pos:end="503:71"><name pos:start="503:21" pos:end="503:39"><name pos:start="503:21" pos:end="503:26">outptr</name><index pos:start="503:27" pos:end="503:39">[<expr pos:start="503:28" pos:end="503:38"><name pos:start="503:28" pos:end="503:36">pixel_ptr</name><operator pos:start="503:37" pos:end="503:38">++</operator></expr>]</index></name> <operator pos:start="503:41" pos:end="503:41">=</operator> <call pos:start="503:43" pos:end="503:71"><name pos:start="503:43" pos:end="503:47">get_r</name><argument_list pos:start="503:48" pos:end="503:71">(<argument pos:start="503:49" pos:end="503:58"><expr pos:start="503:49" pos:end="503:58"><name pos:start="503:49" pos:end="503:58"><name pos:start="503:49" pos:end="503:55">encoded</name><index pos:start="503:56" pos:end="503:58">[<expr pos:start="503:57" pos:end="503:57"><literal type="number" pos:start="503:57" pos:end="503:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="503:61" pos:end="503:70"><expr pos:start="503:61" pos:end="503:70"><name pos:start="503:61" pos:end="503:70"><name pos:start="503:61" pos:end="503:67">encoded</name><index pos:start="503:68" pos:end="503:70">[<expr pos:start="503:69" pos:end="503:69"><literal type="number" pos:start="503:69" pos:end="503:69">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="505:21" pos:end="505:72"><expr pos:start="505:21" pos:end="505:71"><name pos:start="505:21" pos:end="505:39"><name pos:start="505:21" pos:end="505:26">outptr</name><index pos:start="505:27" pos:end="505:39">[<expr pos:start="505:28" pos:end="505:38"><name pos:start="505:28" pos:end="505:36">pixel_ptr</name><operator pos:start="505:37" pos:end="505:38">++</operator></expr>]</index></name> <operator pos:start="505:41" pos:end="505:41">=</operator> <call pos:start="505:43" pos:end="505:71"><name pos:start="505:43" pos:end="505:47">get_b</name><argument_list pos:start="505:48" pos:end="505:71">(<argument pos:start="505:49" pos:end="505:58"><expr pos:start="505:49" pos:end="505:58"><name pos:start="505:49" pos:end="505:58"><name pos:start="505:49" pos:end="505:55">encoded</name><index pos:start="505:56" pos:end="505:58">[<expr pos:start="505:57" pos:end="505:57"><literal type="number" pos:start="505:57" pos:end="505:57">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="505:61" pos:end="505:70"><expr pos:start="505:61" pos:end="505:70"><name pos:start="505:61" pos:end="505:70"><name pos:start="505:61" pos:end="505:67">encoded</name><index pos:start="505:68" pos:end="505:70">[<expr pos:start="505:69" pos:end="505:69"><literal type="number" pos:start="505:69" pos:end="505:69">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="507:21" pos:end="507:84"><expr pos:start="507:21" pos:end="507:83"><name pos:start="507:21" pos:end="507:39"><name pos:start="507:21" pos:end="507:26">outptr</name><index pos:start="507:27" pos:end="507:39">[<expr pos:start="507:28" pos:end="507:38"><name pos:start="507:28" pos:end="507:36">pixel_ptr</name><operator pos:start="507:37" pos:end="507:38">++</operator></expr>]</index></name> <operator pos:start="507:41" pos:end="507:41">=</operator> <call pos:start="507:43" pos:end="507:83"><name pos:start="507:43" pos:end="507:47">get_g</name><argument_list pos:start="507:48" pos:end="507:83">(<argument pos:start="507:49" pos:end="507:58"><expr pos:start="507:49" pos:end="507:58"><name pos:start="507:49" pos:end="507:58"><name pos:start="507:49" pos:end="507:55">encoded</name><index pos:start="507:56" pos:end="507:58">[<expr pos:start="507:57" pos:end="507:57"><literal type="number" pos:start="507:57" pos:end="507:57">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="507:61" pos:end="507:70"><expr pos:start="507:61" pos:end="507:70"><name pos:start="507:61" pos:end="507:70"><name pos:start="507:61" pos:end="507:67">encoded</name><index pos:start="507:68" pos:end="507:70">[<expr pos:start="507:69" pos:end="507:69"><literal type="number" pos:start="507:69" pos:end="507:69">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="507:73" pos:end="507:82"><expr pos:start="507:73" pos:end="507:82"><name pos:start="507:73" pos:end="507:82"><name pos:start="507:73" pos:end="507:79">encoded</name><index pos:start="507:80" pos:end="507:82">[<expr pos:start="507:81" pos:end="507:81"><literal type="number" pos:start="507:81" pos:end="507:81">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="509:21" pos:end="509:72"><expr pos:start="509:21" pos:end="509:71"><name pos:start="509:21" pos:end="509:39"><name pos:start="509:21" pos:end="509:26">outptr</name><index pos:start="509:27" pos:end="509:39">[<expr pos:start="509:28" pos:end="509:38"><name pos:start="509:28" pos:end="509:36">pixel_ptr</name><operator pos:start="509:37" pos:end="509:38">++</operator></expr>]</index></name> <operator pos:start="509:41" pos:end="509:41">=</operator> <call pos:start="509:43" pos:end="509:71"><name pos:start="509:43" pos:end="509:47">get_r</name><argument_list pos:start="509:48" pos:end="509:71">(<argument pos:start="509:49" pos:end="509:58"><expr pos:start="509:49" pos:end="509:58"><name pos:start="509:49" pos:end="509:58"><name pos:start="509:49" pos:end="509:55">encoded</name><index pos:start="509:56" pos:end="509:58">[<expr pos:start="509:57" pos:end="509:57"><literal type="number" pos:start="509:57" pos:end="509:57">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="509:61" pos:end="509:70"><expr pos:start="509:61" pos:end="509:70"><name pos:start="509:61" pos:end="509:70"><name pos:start="509:61" pos:end="509:67">encoded</name><index pos:start="509:68" pos:end="509:70">[<expr pos:start="509:69" pos:end="509:69"><literal type="number" pos:start="509:69" pos:end="509:69">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="511:21" pos:end="511:72"><expr pos:start="511:21" pos:end="511:71"><name pos:start="511:21" pos:end="511:39"><name pos:start="511:21" pos:end="511:26">outptr</name><index pos:start="511:27" pos:end="511:39">[<expr pos:start="511:28" pos:end="511:38"><name pos:start="511:28" pos:end="511:36">pixel_ptr</name><operator pos:start="511:37" pos:end="511:38">++</operator></expr>]</index></name> <operator pos:start="511:41" pos:end="511:41">=</operator> <call pos:start="511:43" pos:end="511:71"><name pos:start="511:43" pos:end="511:47">get_b</name><argument_list pos:start="511:48" pos:end="511:71">(<argument pos:start="511:49" pos:end="511:58"><expr pos:start="511:49" pos:end="511:58"><name pos:start="511:49" pos:end="511:58"><name pos:start="511:49" pos:end="511:55">encoded</name><index pos:start="511:56" pos:end="511:58">[<expr pos:start="511:57" pos:end="511:57"><literal type="number" pos:start="511:57" pos:end="511:57">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="511:61" pos:end="511:70"><expr pos:start="511:61" pos:end="511:70"><name pos:start="511:61" pos:end="511:70"><name pos:start="511:61" pos:end="511:67">encoded</name><index pos:start="511:68" pos:end="511:70">[<expr pos:start="511:69" pos:end="511:69"><literal type="number" pos:start="511:69" pos:end="511:69">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="513:21" pos:end="513:84"><expr pos:start="513:21" pos:end="513:83"><name pos:start="513:21" pos:end="513:39"><name pos:start="513:21" pos:end="513:26">outptr</name><index pos:start="513:27" pos:end="513:39">[<expr pos:start="513:28" pos:end="513:38"><name pos:start="513:28" pos:end="513:36">pixel_ptr</name><operator pos:start="513:37" pos:end="513:38">++</operator></expr>]</index></name> <operator pos:start="513:41" pos:end="513:41">=</operator> <call pos:start="513:43" pos:end="513:83"><name pos:start="513:43" pos:end="513:47">get_g</name><argument_list pos:start="513:48" pos:end="513:83">(<argument pos:start="513:49" pos:end="513:58"><expr pos:start="513:49" pos:end="513:58"><name pos:start="513:49" pos:end="513:58"><name pos:start="513:49" pos:end="513:55">encoded</name><index pos:start="513:56" pos:end="513:58">[<expr pos:start="513:57" pos:end="513:57"><literal type="number" pos:start="513:57" pos:end="513:57">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="513:61" pos:end="513:70"><expr pos:start="513:61" pos:end="513:70"><name pos:start="513:61" pos:end="513:70"><name pos:start="513:61" pos:end="513:67">encoded</name><index pos:start="513:68" pos:end="513:70">[<expr pos:start="513:69" pos:end="513:69"><literal type="number" pos:start="513:69" pos:end="513:69">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="513:73" pos:end="513:82"><expr pos:start="513:73" pos:end="513:82"><name pos:start="513:73" pos:end="513:82"><name pos:start="513:73" pos:end="513:79">encoded</name><index pos:start="513:80" pos:end="513:82">[<expr pos:start="513:81" pos:end="513:81"><literal type="number" pos:start="513:81" pos:end="513:81">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="515:21" pos:end="515:72"><expr pos:start="515:21" pos:end="515:71"><name pos:start="515:21" pos:end="515:39"><name pos:start="515:21" pos:end="515:26">outptr</name><index pos:start="515:27" pos:end="515:39">[<expr pos:start="515:28" pos:end="515:38"><name pos:start="515:28" pos:end="515:36">pixel_ptr</name><operator pos:start="515:37" pos:end="515:38">++</operator></expr>]</index></name> <operator pos:start="515:41" pos:end="515:41">=</operator> <call pos:start="515:43" pos:end="515:71"><name pos:start="515:43" pos:end="515:47">get_r</name><argument_list pos:start="515:48" pos:end="515:71">(<argument pos:start="515:49" pos:end="515:58"><expr pos:start="515:49" pos:end="515:58"><name pos:start="515:49" pos:end="515:58"><name pos:start="515:49" pos:end="515:55">encoded</name><index pos:start="515:56" pos:end="515:58">[<expr pos:start="515:57" pos:end="515:57"><literal type="number" pos:start="515:57" pos:end="515:57">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="515:61" pos:end="515:70"><expr pos:start="515:61" pos:end="515:70"><name pos:start="515:61" pos:end="515:70"><name pos:start="515:61" pos:end="515:67">encoded</name><index pos:start="515:68" pos:end="515:70">[<expr pos:start="515:69" pos:end="515:69"><literal type="number" pos:start="515:69" pos:end="515:69">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="517:21" pos:end="517:72"><expr pos:start="517:21" pos:end="517:71"><name pos:start="517:21" pos:end="517:39"><name pos:start="517:21" pos:end="517:26">outptr</name><index pos:start="517:27" pos:end="517:39">[<expr pos:start="517:28" pos:end="517:38"><name pos:start="517:28" pos:end="517:36">pixel_ptr</name><operator pos:start="517:37" pos:end="517:38">++</operator></expr>]</index></name> <operator pos:start="517:41" pos:end="517:41">=</operator> <call pos:start="517:43" pos:end="517:71"><name pos:start="517:43" pos:end="517:47">get_b</name><argument_list pos:start="517:48" pos:end="517:71">(<argument pos:start="517:49" pos:end="517:58"><expr pos:start="517:49" pos:end="517:58"><name pos:start="517:49" pos:end="517:58"><name pos:start="517:49" pos:end="517:55">encoded</name><index pos:start="517:56" pos:end="517:58">[<expr pos:start="517:57" pos:end="517:57"><literal type="number" pos:start="517:57" pos:end="517:57">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="517:61" pos:end="517:70"><expr pos:start="517:61" pos:end="517:70"><name pos:start="517:61" pos:end="517:70"><name pos:start="517:61" pos:end="517:67">encoded</name><index pos:start="517:68" pos:end="517:70">[<expr pos:start="517:69" pos:end="517:69"><literal type="number" pos:start="517:69" pos:end="517:69">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="519:21" pos:end="519:84"><expr pos:start="519:21" pos:end="519:83"><name pos:start="519:21" pos:end="519:39"><name pos:start="519:21" pos:end="519:26">outptr</name><index pos:start="519:27" pos:end="519:39">[<expr pos:start="519:28" pos:end="519:38"><name pos:start="519:28" pos:end="519:36">pixel_ptr</name><operator pos:start="519:37" pos:end="519:38">++</operator></expr>]</index></name> <operator pos:start="519:41" pos:end="519:41">=</operator> <call pos:start="519:43" pos:end="519:83"><name pos:start="519:43" pos:end="519:47">get_g</name><argument_list pos:start="519:48" pos:end="519:83">(<argument pos:start="519:49" pos:end="519:58"><expr pos:start="519:49" pos:end="519:58"><name pos:start="519:49" pos:end="519:58"><name pos:start="519:49" pos:end="519:55">encoded</name><index pos:start="519:56" pos:end="519:58">[<expr pos:start="519:57" pos:end="519:57"><literal type="number" pos:start="519:57" pos:end="519:57">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="519:61" pos:end="519:70"><expr pos:start="519:61" pos:end="519:70"><name pos:start="519:61" pos:end="519:70"><name pos:start="519:61" pos:end="519:67">encoded</name><index pos:start="519:68" pos:end="519:70">[<expr pos:start="519:69" pos:end="519:69"><literal type="number" pos:start="519:69" pos:end="519:69">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="519:73" pos:end="519:82"><expr pos:start="519:73" pos:end="519:82"><name pos:start="519:73" pos:end="519:82"><name pos:start="519:73" pos:end="519:79">encoded</name><index pos:start="519:80" pos:end="519:82">[<expr pos:start="519:81" pos:end="519:81"><literal type="number" pos:start="519:81" pos:end="519:81">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="521:21" pos:end="521:72"><expr pos:start="521:21" pos:end="521:71"><name pos:start="521:21" pos:end="521:39"><name pos:start="521:21" pos:end="521:26">outptr</name><index pos:start="521:27" pos:end="521:39">[<expr pos:start="521:28" pos:end="521:38"><name pos:start="521:28" pos:end="521:36">pixel_ptr</name><operator pos:start="521:37" pos:end="521:38">++</operator></expr>]</index></name> <operator pos:start="521:41" pos:end="521:41">=</operator> <call pos:start="521:43" pos:end="521:71"><name pos:start="521:43" pos:end="521:47">get_r</name><argument_list pos:start="521:48" pos:end="521:71">(<argument pos:start="521:49" pos:end="521:58"><expr pos:start="521:49" pos:end="521:58"><name pos:start="521:49" pos:end="521:58"><name pos:start="521:49" pos:end="521:55">encoded</name><index pos:start="521:56" pos:end="521:58">[<expr pos:start="521:57" pos:end="521:57"><literal type="number" pos:start="521:57" pos:end="521:57">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="521:61" pos:end="521:70"><expr pos:start="521:61" pos:end="521:70"><name pos:start="521:61" pos:end="521:70"><name pos:start="521:61" pos:end="521:67">encoded</name><index pos:start="521:68" pos:end="521:70">[<expr pos:start="521:69" pos:end="521:69"><literal type="number" pos:start="521:69" pos:end="521:69">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="523:21" pos:end="523:33"><expr pos:start="523:21" pos:end="523:32"><name pos:start="523:21" pos:end="523:27">encoded</name> <operator pos:start="523:29" pos:end="523:30">+=</operator> <literal type="number" pos:start="523:32" pos:end="523:32">8</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <break pos:start="529:13" pos:end="529:18">break;</break>

        <case pos:start="531:9" pos:end="531:27">case <expr pos:start="531:14" pos:end="531:26"><name pos:start="531:14" pos:end="531:26">IMGTYPE_RGB24</name></expr>:</case>

            <for pos:start="533:13" pos:end="549:13">for <control pos:start="533:17" pos:end="533:51">(<init pos:start="533:18" pos:end="533:34"><expr pos:start="533:18" pos:end="533:33"><name pos:start="533:18" pos:end="533:20">row</name> <operator pos:start="533:22" pos:end="533:22">=</operator> <name pos:start="533:24" pos:end="533:29">height</name> <operator pos:start="533:31" pos:end="533:31">-</operator> <literal type="number" pos:start="533:33" pos:end="533:33">1</literal></expr>;</init> <condition pos:start="533:36" pos:end="533:44"><expr pos:start="533:36" pos:end="533:43"><name pos:start="533:36" pos:end="533:38">row</name> <operator pos:start="533:40" pos:end="533:41">&gt;=</operator> <literal type="number" pos:start="533:43" pos:end="533:43">0</literal></expr>;</condition> <incr pos:start="533:46" pos:end="533:50"><expr pos:start="533:46" pos:end="533:50"><name pos:start="533:46" pos:end="533:48">row</name><operator pos:start="533:49" pos:end="533:50">--</operator></expr></incr>)</control> <block pos:start="533:53" pos:end="549:13">{<block_content pos:start="535:17" pos:end="547:17">

                <expr_stmt pos:start="535:17" pos:end="535:53"><expr pos:start="535:17" pos:end="535:52"><name pos:start="535:17" pos:end="535:25">pixel_ptr</name> <operator pos:start="535:27" pos:end="535:27">=</operator> <name pos:start="535:29" pos:end="535:31">row</name> <operator pos:start="535:33" pos:end="535:33">*</operator> <name pos:start="535:35" pos:end="535:52"><name pos:start="535:35" pos:end="535:35">c</name><operator pos:start="535:36" pos:end="535:37">-&gt;</operator><name pos:start="535:38" pos:end="535:40">pic</name><operator pos:start="535:41" pos:end="535:41">.</operator><name pos:start="535:42" pos:end="535:49">linesize</name><index pos:start="535:50" pos:end="535:52">[<expr pos:start="535:51" pos:end="535:51"><literal type="number" pos:start="535:51" pos:end="535:51">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <for pos:start="537:17" pos:end="547:17">for <control pos:start="537:21" pos:end="537:49">(<init pos:start="537:22" pos:end="537:29"><expr pos:start="537:22" pos:end="537:28"><name pos:start="537:22" pos:end="537:24">col</name> <operator pos:start="537:26" pos:end="537:26">=</operator> <literal type="number" pos:start="537:28" pos:end="537:28">0</literal></expr>;</init> <condition pos:start="537:31" pos:end="537:42"><expr pos:start="537:31" pos:end="537:41"><name pos:start="537:31" pos:end="537:33">col</name> <operator pos:start="537:35" pos:end="537:35">&lt;</operator> <name pos:start="537:37" pos:end="537:41">width</name></expr>;</condition> <incr pos:start="537:44" pos:end="537:48"><expr pos:start="537:44" pos:end="537:48"><name pos:start="537:44" pos:end="537:46">col</name><operator pos:start="537:47" pos:end="537:48">++</operator></expr></incr>)</control> <block pos:start="537:51" pos:end="547:17">{<block_content pos:start="539:21" pos:end="545:33">

                    <expr_stmt pos:start="539:21" pos:end="539:53"><expr pos:start="539:21" pos:end="539:52"><name pos:start="539:21" pos:end="539:39"><name pos:start="539:21" pos:end="539:26">outptr</name><index pos:start="539:27" pos:end="539:39">[<expr pos:start="539:28" pos:end="539:38"><name pos:start="539:28" pos:end="539:36">pixel_ptr</name><operator pos:start="539:37" pos:end="539:38">++</operator></expr>]</index></name> <operator pos:start="539:41" pos:end="539:41">=</operator> <name pos:start="539:43" pos:end="539:52"><name pos:start="539:43" pos:end="539:49">encoded</name><index pos:start="539:50" pos:end="539:52">[<expr pos:start="539:51" pos:end="539:51"><literal type="number" pos:start="539:51" pos:end="539:51">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="541:21" pos:end="541:53"><expr pos:start="541:21" pos:end="541:52"><name pos:start="541:21" pos:end="541:39"><name pos:start="541:21" pos:end="541:26">outptr</name><index pos:start="541:27" pos:end="541:39">[<expr pos:start="541:28" pos:end="541:38"><name pos:start="541:28" pos:end="541:36">pixel_ptr</name><operator pos:start="541:37" pos:end="541:38">++</operator></expr>]</index></name> <operator pos:start="541:41" pos:end="541:41">=</operator> <name pos:start="541:43" pos:end="541:52"><name pos:start="541:43" pos:end="541:49">encoded</name><index pos:start="541:50" pos:end="541:52">[<expr pos:start="541:51" pos:end="541:51"><literal type="number" pos:start="541:51" pos:end="541:51">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="543:21" pos:end="543:53"><expr pos:start="543:21" pos:end="543:52"><name pos:start="543:21" pos:end="543:39"><name pos:start="543:21" pos:end="543:26">outptr</name><index pos:start="543:27" pos:end="543:39">[<expr pos:start="543:28" pos:end="543:38"><name pos:start="543:28" pos:end="543:36">pixel_ptr</name><operator pos:start="543:37" pos:end="543:38">++</operator></expr>]</index></name> <operator pos:start="543:41" pos:end="543:41">=</operator> <name pos:start="543:43" pos:end="543:52"><name pos:start="543:43" pos:end="543:49">encoded</name><index pos:start="543:50" pos:end="543:52">[<expr pos:start="543:51" pos:end="543:51"><literal type="number" pos:start="543:51" pos:end="543:51">2</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="545:21" pos:end="545:33"><expr pos:start="545:21" pos:end="545:32"><name pos:start="545:21" pos:end="545:27">encoded</name> <operator pos:start="545:29" pos:end="545:30">+=</operator> <literal type="number" pos:start="545:32" pos:end="545:32">3</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <break pos:start="551:13" pos:end="551:18">break;</break>

        <case pos:start="553:9" pos:end="553:28">case <expr pos:start="553:14" pos:end="553:27"><name pos:start="553:14" pos:end="553:27">IMGTYPE_YUV411</name></expr>:</case>

            <for pos:start="555:13" pos:end="589:13">for <control pos:start="555:17" pos:end="555:51">(<init pos:start="555:18" pos:end="555:34"><expr pos:start="555:18" pos:end="555:33"><name pos:start="555:18" pos:end="555:20">row</name> <operator pos:start="555:22" pos:end="555:22">=</operator> <name pos:start="555:24" pos:end="555:29">height</name> <operator pos:start="555:31" pos:end="555:31">-</operator> <literal type="number" pos:start="555:33" pos:end="555:33">1</literal></expr>;</init> <condition pos:start="555:36" pos:end="555:44"><expr pos:start="555:36" pos:end="555:43"><name pos:start="555:36" pos:end="555:38">row</name> <operator pos:start="555:40" pos:end="555:41">&gt;=</operator> <literal type="number" pos:start="555:43" pos:end="555:43">0</literal></expr>;</condition> <incr pos:start="555:46" pos:end="555:50"><expr pos:start="555:46" pos:end="555:50"><name pos:start="555:46" pos:end="555:48">row</name><operator pos:start="555:49" pos:end="555:50">--</operator></expr></incr>)</control> <block pos:start="555:53" pos:end="589:13">{<block_content pos:start="557:17" pos:end="587:17">

                <expr_stmt pos:start="557:17" pos:end="557:53"><expr pos:start="557:17" pos:end="557:52"><name pos:start="557:17" pos:end="557:25">pixel_ptr</name> <operator pos:start="557:27" pos:end="557:27">=</operator> <name pos:start="557:29" pos:end="557:31">row</name> <operator pos:start="557:33" pos:end="557:33">*</operator> <name pos:start="557:35" pos:end="557:52"><name pos:start="557:35" pos:end="557:35">c</name><operator pos:start="557:36" pos:end="557:37">-&gt;</operator><name pos:start="557:38" pos:end="557:40">pic</name><operator pos:start="557:41" pos:end="557:41">.</operator><name pos:start="557:42" pos:end="557:49">linesize</name><index pos:start="557:50" pos:end="557:52">[<expr pos:start="557:51" pos:end="557:51"><literal type="number" pos:start="557:51" pos:end="557:51">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <for pos:start="559:17" pos:end="587:17">for <control pos:start="559:21" pos:end="559:51">(<init pos:start="559:22" pos:end="559:29"><expr pos:start="559:22" pos:end="559:28"><name pos:start="559:22" pos:end="559:24">col</name> <operator pos:start="559:26" pos:end="559:26">=</operator> <literal type="number" pos:start="559:28" pos:end="559:28">0</literal></expr>;</init> <condition pos:start="559:31" pos:end="559:44"><expr pos:start="559:31" pos:end="559:43"><name pos:start="559:31" pos:end="559:33">col</name> <operator pos:start="559:35" pos:end="559:35">&lt;</operator> <name pos:start="559:37" pos:end="559:41">width</name><operator pos:start="559:42" pos:end="559:42">/</operator><literal type="number" pos:start="559:43" pos:end="559:43">4</literal></expr>;</condition> <incr pos:start="559:46" pos:end="559:50"><expr pos:start="559:46" pos:end="559:50"><name pos:start="559:46" pos:end="559:48">col</name><operator pos:start="559:49" pos:end="559:50">++</operator></expr></incr>)</control> <block pos:start="559:53" pos:end="587:17">{<block_content pos:start="561:21" pos:end="585:33">

                    <expr_stmt pos:start="561:21" pos:end="561:72"><expr pos:start="561:21" pos:end="561:71"><name pos:start="561:21" pos:end="561:39"><name pos:start="561:21" pos:end="561:26">outptr</name><index pos:start="561:27" pos:end="561:39">[<expr pos:start="561:28" pos:end="561:38"><name pos:start="561:28" pos:end="561:36">pixel_ptr</name><operator pos:start="561:37" pos:end="561:38">++</operator></expr>]</index></name> <operator pos:start="561:41" pos:end="561:41">=</operator> <call pos:start="561:43" pos:end="561:71"><name pos:start="561:43" pos:end="561:47">get_b</name><argument_list pos:start="561:48" pos:end="561:71">(<argument pos:start="561:49" pos:end="561:58"><expr pos:start="561:49" pos:end="561:58"><name pos:start="561:49" pos:end="561:58"><name pos:start="561:49" pos:end="561:55">encoded</name><index pos:start="561:56" pos:end="561:58">[<expr pos:start="561:57" pos:end="561:57"><literal type="number" pos:start="561:57" pos:end="561:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="561:61" pos:end="561:70"><expr pos:start="561:61" pos:end="561:70"><name pos:start="561:61" pos:end="561:70"><name pos:start="561:61" pos:end="561:67">encoded</name><index pos:start="561:68" pos:end="561:70">[<expr pos:start="561:69" pos:end="561:69"><literal type="number" pos:start="561:69" pos:end="561:69">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="563:21" pos:end="563:84"><expr pos:start="563:21" pos:end="563:83"><name pos:start="563:21" pos:end="563:39"><name pos:start="563:21" pos:end="563:26">outptr</name><index pos:start="563:27" pos:end="563:39">[<expr pos:start="563:28" pos:end="563:38"><name pos:start="563:28" pos:end="563:36">pixel_ptr</name><operator pos:start="563:37" pos:end="563:38">++</operator></expr>]</index></name> <operator pos:start="563:41" pos:end="563:41">=</operator> <call pos:start="563:43" pos:end="563:83"><name pos:start="563:43" pos:end="563:47">get_g</name><argument_list pos:start="563:48" pos:end="563:83">(<argument pos:start="563:49" pos:end="563:58"><expr pos:start="563:49" pos:end="563:58"><name pos:start="563:49" pos:end="563:58"><name pos:start="563:49" pos:end="563:55">encoded</name><index pos:start="563:56" pos:end="563:58">[<expr pos:start="563:57" pos:end="563:57"><literal type="number" pos:start="563:57" pos:end="563:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="563:61" pos:end="563:70"><expr pos:start="563:61" pos:end="563:70"><name pos:start="563:61" pos:end="563:70"><name pos:start="563:61" pos:end="563:67">encoded</name><index pos:start="563:68" pos:end="563:70">[<expr pos:start="563:69" pos:end="563:69"><literal type="number" pos:start="563:69" pos:end="563:69">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="563:73" pos:end="563:82"><expr pos:start="563:73" pos:end="563:82"><name pos:start="563:73" pos:end="563:82"><name pos:start="563:73" pos:end="563:79">encoded</name><index pos:start="563:80" pos:end="563:82">[<expr pos:start="563:81" pos:end="563:81"><literal type="number" pos:start="563:81" pos:end="563:81">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="565:21" pos:end="565:72"><expr pos:start="565:21" pos:end="565:71"><name pos:start="565:21" pos:end="565:39"><name pos:start="565:21" pos:end="565:26">outptr</name><index pos:start="565:27" pos:end="565:39">[<expr pos:start="565:28" pos:end="565:38"><name pos:start="565:28" pos:end="565:36">pixel_ptr</name><operator pos:start="565:37" pos:end="565:38">++</operator></expr>]</index></name> <operator pos:start="565:41" pos:end="565:41">=</operator> <call pos:start="565:43" pos:end="565:71"><name pos:start="565:43" pos:end="565:47">get_r</name><argument_list pos:start="565:48" pos:end="565:71">(<argument pos:start="565:49" pos:end="565:58"><expr pos:start="565:49" pos:end="565:58"><name pos:start="565:49" pos:end="565:58"><name pos:start="565:49" pos:end="565:55">encoded</name><index pos:start="565:56" pos:end="565:58">[<expr pos:start="565:57" pos:end="565:57"><literal type="number" pos:start="565:57" pos:end="565:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="565:61" pos:end="565:70"><expr pos:start="565:61" pos:end="565:70"><name pos:start="565:61" pos:end="565:70"><name pos:start="565:61" pos:end="565:67">encoded</name><index pos:start="565:68" pos:end="565:70">[<expr pos:start="565:69" pos:end="565:69"><literal type="number" pos:start="565:69" pos:end="565:69">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="567:21" pos:end="567:72"><expr pos:start="567:21" pos:end="567:71"><name pos:start="567:21" pos:end="567:39"><name pos:start="567:21" pos:end="567:26">outptr</name><index pos:start="567:27" pos:end="567:39">[<expr pos:start="567:28" pos:end="567:38"><name pos:start="567:28" pos:end="567:36">pixel_ptr</name><operator pos:start="567:37" pos:end="567:38">++</operator></expr>]</index></name> <operator pos:start="567:41" pos:end="567:41">=</operator> <call pos:start="567:43" pos:end="567:71"><name pos:start="567:43" pos:end="567:47">get_b</name><argument_list pos:start="567:48" pos:end="567:71">(<argument pos:start="567:49" pos:end="567:58"><expr pos:start="567:49" pos:end="567:58"><name pos:start="567:49" pos:end="567:58"><name pos:start="567:49" pos:end="567:55">encoded</name><index pos:start="567:56" pos:end="567:58">[<expr pos:start="567:57" pos:end="567:57"><literal type="number" pos:start="567:57" pos:end="567:57">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="567:61" pos:end="567:70"><expr pos:start="567:61" pos:end="567:70"><name pos:start="567:61" pos:end="567:70"><name pos:start="567:61" pos:end="567:67">encoded</name><index pos:start="567:68" pos:end="567:70">[<expr pos:start="567:69" pos:end="567:69"><literal type="number" pos:start="567:69" pos:end="567:69">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="569:21" pos:end="569:84"><expr pos:start="569:21" pos:end="569:83"><name pos:start="569:21" pos:end="569:39"><name pos:start="569:21" pos:end="569:26">outptr</name><index pos:start="569:27" pos:end="569:39">[<expr pos:start="569:28" pos:end="569:38"><name pos:start="569:28" pos:end="569:36">pixel_ptr</name><operator pos:start="569:37" pos:end="569:38">++</operator></expr>]</index></name> <operator pos:start="569:41" pos:end="569:41">=</operator> <call pos:start="569:43" pos:end="569:83"><name pos:start="569:43" pos:end="569:47">get_g</name><argument_list pos:start="569:48" pos:end="569:83">(<argument pos:start="569:49" pos:end="569:58"><expr pos:start="569:49" pos:end="569:58"><name pos:start="569:49" pos:end="569:58"><name pos:start="569:49" pos:end="569:55">encoded</name><index pos:start="569:56" pos:end="569:58">[<expr pos:start="569:57" pos:end="569:57"><literal type="number" pos:start="569:57" pos:end="569:57">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="569:61" pos:end="569:70"><expr pos:start="569:61" pos:end="569:70"><name pos:start="569:61" pos:end="569:70"><name pos:start="569:61" pos:end="569:67">encoded</name><index pos:start="569:68" pos:end="569:70">[<expr pos:start="569:69" pos:end="569:69"><literal type="number" pos:start="569:69" pos:end="569:69">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="569:73" pos:end="569:82"><expr pos:start="569:73" pos:end="569:82"><name pos:start="569:73" pos:end="569:82"><name pos:start="569:73" pos:end="569:79">encoded</name><index pos:start="569:80" pos:end="569:82">[<expr pos:start="569:81" pos:end="569:81"><literal type="number" pos:start="569:81" pos:end="569:81">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="571:21" pos:end="571:72"><expr pos:start="571:21" pos:end="571:71"><name pos:start="571:21" pos:end="571:39"><name pos:start="571:21" pos:end="571:26">outptr</name><index pos:start="571:27" pos:end="571:39">[<expr pos:start="571:28" pos:end="571:38"><name pos:start="571:28" pos:end="571:36">pixel_ptr</name><operator pos:start="571:37" pos:end="571:38">++</operator></expr>]</index></name> <operator pos:start="571:41" pos:end="571:41">=</operator> <call pos:start="571:43" pos:end="571:71"><name pos:start="571:43" pos:end="571:47">get_r</name><argument_list pos:start="571:48" pos:end="571:71">(<argument pos:start="571:49" pos:end="571:58"><expr pos:start="571:49" pos:end="571:58"><name pos:start="571:49" pos:end="571:58"><name pos:start="571:49" pos:end="571:55">encoded</name><index pos:start="571:56" pos:end="571:58">[<expr pos:start="571:57" pos:end="571:57"><literal type="number" pos:start="571:57" pos:end="571:57">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="571:61" pos:end="571:70"><expr pos:start="571:61" pos:end="571:70"><name pos:start="571:61" pos:end="571:70"><name pos:start="571:61" pos:end="571:67">encoded</name><index pos:start="571:68" pos:end="571:70">[<expr pos:start="571:69" pos:end="571:69"><literal type="number" pos:start="571:69" pos:end="571:69">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="573:21" pos:end="573:72"><expr pos:start="573:21" pos:end="573:71"><name pos:start="573:21" pos:end="573:39"><name pos:start="573:21" pos:end="573:26">outptr</name><index pos:start="573:27" pos:end="573:39">[<expr pos:start="573:28" pos:end="573:38"><name pos:start="573:28" pos:end="573:36">pixel_ptr</name><operator pos:start="573:37" pos:end="573:38">++</operator></expr>]</index></name> <operator pos:start="573:41" pos:end="573:41">=</operator> <call pos:start="573:43" pos:end="573:71"><name pos:start="573:43" pos:end="573:47">get_b</name><argument_list pos:start="573:48" pos:end="573:71">(<argument pos:start="573:49" pos:end="573:58"><expr pos:start="573:49" pos:end="573:58"><name pos:start="573:49" pos:end="573:58"><name pos:start="573:49" pos:end="573:55">encoded</name><index pos:start="573:56" pos:end="573:58">[<expr pos:start="573:57" pos:end="573:57"><literal type="number" pos:start="573:57" pos:end="573:57">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="573:61" pos:end="573:70"><expr pos:start="573:61" pos:end="573:70"><name pos:start="573:61" pos:end="573:70"><name pos:start="573:61" pos:end="573:67">encoded</name><index pos:start="573:68" pos:end="573:70">[<expr pos:start="573:69" pos:end="573:69"><literal type="number" pos:start="573:69" pos:end="573:69">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="575:21" pos:end="575:84"><expr pos:start="575:21" pos:end="575:83"><name pos:start="575:21" pos:end="575:39"><name pos:start="575:21" pos:end="575:26">outptr</name><index pos:start="575:27" pos:end="575:39">[<expr pos:start="575:28" pos:end="575:38"><name pos:start="575:28" pos:end="575:36">pixel_ptr</name><operator pos:start="575:37" pos:end="575:38">++</operator></expr>]</index></name> <operator pos:start="575:41" pos:end="575:41">=</operator> <call pos:start="575:43" pos:end="575:83"><name pos:start="575:43" pos:end="575:47">get_g</name><argument_list pos:start="575:48" pos:end="575:83">(<argument pos:start="575:49" pos:end="575:58"><expr pos:start="575:49" pos:end="575:58"><name pos:start="575:49" pos:end="575:58"><name pos:start="575:49" pos:end="575:55">encoded</name><index pos:start="575:56" pos:end="575:58">[<expr pos:start="575:57" pos:end="575:57"><literal type="number" pos:start="575:57" pos:end="575:57">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="575:61" pos:end="575:70"><expr pos:start="575:61" pos:end="575:70"><name pos:start="575:61" pos:end="575:70"><name pos:start="575:61" pos:end="575:67">encoded</name><index pos:start="575:68" pos:end="575:70">[<expr pos:start="575:69" pos:end="575:69"><literal type="number" pos:start="575:69" pos:end="575:69">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="575:73" pos:end="575:82"><expr pos:start="575:73" pos:end="575:82"><name pos:start="575:73" pos:end="575:82"><name pos:start="575:73" pos:end="575:79">encoded</name><index pos:start="575:80" pos:end="575:82">[<expr pos:start="575:81" pos:end="575:81"><literal type="number" pos:start="575:81" pos:end="575:81">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="577:21" pos:end="577:72"><expr pos:start="577:21" pos:end="577:71"><name pos:start="577:21" pos:end="577:39"><name pos:start="577:21" pos:end="577:26">outptr</name><index pos:start="577:27" pos:end="577:39">[<expr pos:start="577:28" pos:end="577:38"><name pos:start="577:28" pos:end="577:36">pixel_ptr</name><operator pos:start="577:37" pos:end="577:38">++</operator></expr>]</index></name> <operator pos:start="577:41" pos:end="577:41">=</operator> <call pos:start="577:43" pos:end="577:71"><name pos:start="577:43" pos:end="577:47">get_r</name><argument_list pos:start="577:48" pos:end="577:71">(<argument pos:start="577:49" pos:end="577:58"><expr pos:start="577:49" pos:end="577:58"><name pos:start="577:49" pos:end="577:58"><name pos:start="577:49" pos:end="577:55">encoded</name><index pos:start="577:56" pos:end="577:58">[<expr pos:start="577:57" pos:end="577:57"><literal type="number" pos:start="577:57" pos:end="577:57">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="577:61" pos:end="577:70"><expr pos:start="577:61" pos:end="577:70"><name pos:start="577:61" pos:end="577:70"><name pos:start="577:61" pos:end="577:67">encoded</name><index pos:start="577:68" pos:end="577:70">[<expr pos:start="577:69" pos:end="577:69"><literal type="number" pos:start="577:69" pos:end="577:69">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="579:21" pos:end="579:72"><expr pos:start="579:21" pos:end="579:71"><name pos:start="579:21" pos:end="579:39"><name pos:start="579:21" pos:end="579:26">outptr</name><index pos:start="579:27" pos:end="579:39">[<expr pos:start="579:28" pos:end="579:38"><name pos:start="579:28" pos:end="579:36">pixel_ptr</name><operator pos:start="579:37" pos:end="579:38">++</operator></expr>]</index></name> <operator pos:start="579:41" pos:end="579:41">=</operator> <call pos:start="579:43" pos:end="579:71"><name pos:start="579:43" pos:end="579:47">get_b</name><argument_list pos:start="579:48" pos:end="579:71">(<argument pos:start="579:49" pos:end="579:58"><expr pos:start="579:49" pos:end="579:58"><name pos:start="579:49" pos:end="579:58"><name pos:start="579:49" pos:end="579:55">encoded</name><index pos:start="579:56" pos:end="579:58">[<expr pos:start="579:57" pos:end="579:57"><literal type="number" pos:start="579:57" pos:end="579:57">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="579:61" pos:end="579:70"><expr pos:start="579:61" pos:end="579:70"><name pos:start="579:61" pos:end="579:70"><name pos:start="579:61" pos:end="579:67">encoded</name><index pos:start="579:68" pos:end="579:70">[<expr pos:start="579:69" pos:end="579:69"><literal type="number" pos:start="579:69" pos:end="579:69">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="581:21" pos:end="581:84"><expr pos:start="581:21" pos:end="581:83"><name pos:start="581:21" pos:end="581:39"><name pos:start="581:21" pos:end="581:26">outptr</name><index pos:start="581:27" pos:end="581:39">[<expr pos:start="581:28" pos:end="581:38"><name pos:start="581:28" pos:end="581:36">pixel_ptr</name><operator pos:start="581:37" pos:end="581:38">++</operator></expr>]</index></name> <operator pos:start="581:41" pos:end="581:41">=</operator> <call pos:start="581:43" pos:end="581:83"><name pos:start="581:43" pos:end="581:47">get_g</name><argument_list pos:start="581:48" pos:end="581:83">(<argument pos:start="581:49" pos:end="581:58"><expr pos:start="581:49" pos:end="581:58"><name pos:start="581:49" pos:end="581:58"><name pos:start="581:49" pos:end="581:55">encoded</name><index pos:start="581:56" pos:end="581:58">[<expr pos:start="581:57" pos:end="581:57"><literal type="number" pos:start="581:57" pos:end="581:57">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="581:61" pos:end="581:70"><expr pos:start="581:61" pos:end="581:70"><name pos:start="581:61" pos:end="581:70"><name pos:start="581:61" pos:end="581:67">encoded</name><index pos:start="581:68" pos:end="581:70">[<expr pos:start="581:69" pos:end="581:69"><literal type="number" pos:start="581:69" pos:end="581:69">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="581:73" pos:end="581:82"><expr pos:start="581:73" pos:end="581:82"><name pos:start="581:73" pos:end="581:82"><name pos:start="581:73" pos:end="581:79">encoded</name><index pos:start="581:80" pos:end="581:82">[<expr pos:start="581:81" pos:end="581:81"><literal type="number" pos:start="581:81" pos:end="581:81">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="583:21" pos:end="583:72"><expr pos:start="583:21" pos:end="583:71"><name pos:start="583:21" pos:end="583:39"><name pos:start="583:21" pos:end="583:26">outptr</name><index pos:start="583:27" pos:end="583:39">[<expr pos:start="583:28" pos:end="583:38"><name pos:start="583:28" pos:end="583:36">pixel_ptr</name><operator pos:start="583:37" pos:end="583:38">++</operator></expr>]</index></name> <operator pos:start="583:41" pos:end="583:41">=</operator> <call pos:start="583:43" pos:end="583:71"><name pos:start="583:43" pos:end="583:47">get_r</name><argument_list pos:start="583:48" pos:end="583:71">(<argument pos:start="583:49" pos:end="583:58"><expr pos:start="583:49" pos:end="583:58"><name pos:start="583:49" pos:end="583:58"><name pos:start="583:49" pos:end="583:55">encoded</name><index pos:start="583:56" pos:end="583:58">[<expr pos:start="583:57" pos:end="583:57"><literal type="number" pos:start="583:57" pos:end="583:57">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="583:61" pos:end="583:70"><expr pos:start="583:61" pos:end="583:70"><name pos:start="583:61" pos:end="583:70"><name pos:start="583:61" pos:end="583:67">encoded</name><index pos:start="583:68" pos:end="583:70">[<expr pos:start="583:69" pos:end="583:69"><literal type="number" pos:start="583:69" pos:end="583:69">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="585:21" pos:end="585:33"><expr pos:start="585:21" pos:end="585:32"><name pos:start="585:21" pos:end="585:27">encoded</name> <operator pos:start="585:29" pos:end="585:30">+=</operator> <literal type="number" pos:start="585:32" pos:end="585:32">6</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <break pos:start="591:13" pos:end="591:18">break;</break>

        <case pos:start="593:9" pos:end="593:28">case <expr pos:start="593:14" pos:end="593:27"><name pos:start="593:14" pos:end="593:27">IMGTYPE_YUV211</name></expr>:</case>

            <for pos:start="595:13" pos:end="617:13">for <control pos:start="595:17" pos:end="595:51">(<init pos:start="595:18" pos:end="595:34"><expr pos:start="595:18" pos:end="595:33"><name pos:start="595:18" pos:end="595:20">row</name> <operator pos:start="595:22" pos:end="595:22">=</operator> <name pos:start="595:24" pos:end="595:29">height</name> <operator pos:start="595:31" pos:end="595:31">-</operator> <literal type="number" pos:start="595:33" pos:end="595:33">1</literal></expr>;</init> <condition pos:start="595:36" pos:end="595:44"><expr pos:start="595:36" pos:end="595:43"><name pos:start="595:36" pos:end="595:38">row</name> <operator pos:start="595:40" pos:end="595:41">&gt;=</operator> <literal type="number" pos:start="595:43" pos:end="595:43">0</literal></expr>;</condition> <incr pos:start="595:46" pos:end="595:50"><expr pos:start="595:46" pos:end="595:50"><name pos:start="595:46" pos:end="595:48">row</name><operator pos:start="595:49" pos:end="595:50">--</operator></expr></incr>)</control> <block pos:start="595:53" pos:end="617:13">{<block_content pos:start="597:17" pos:end="615:17">

                <expr_stmt pos:start="597:17" pos:end="597:53"><expr pos:start="597:17" pos:end="597:52"><name pos:start="597:17" pos:end="597:25">pixel_ptr</name> <operator pos:start="597:27" pos:end="597:27">=</operator> <name pos:start="597:29" pos:end="597:31">row</name> <operator pos:start="597:33" pos:end="597:33">*</operator> <name pos:start="597:35" pos:end="597:52"><name pos:start="597:35" pos:end="597:35">c</name><operator pos:start="597:36" pos:end="597:37">-&gt;</operator><name pos:start="597:38" pos:end="597:40">pic</name><operator pos:start="597:41" pos:end="597:41">.</operator><name pos:start="597:42" pos:end="597:49">linesize</name><index pos:start="597:50" pos:end="597:52">[<expr pos:start="597:51" pos:end="597:51"><literal type="number" pos:start="597:51" pos:end="597:51">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <for pos:start="599:17" pos:end="615:17">for <control pos:start="599:21" pos:end="599:51">(<init pos:start="599:22" pos:end="599:29"><expr pos:start="599:22" pos:end="599:28"><name pos:start="599:22" pos:end="599:24">col</name> <operator pos:start="599:26" pos:end="599:26">=</operator> <literal type="number" pos:start="599:28" pos:end="599:28">0</literal></expr>;</init> <condition pos:start="599:31" pos:end="599:44"><expr pos:start="599:31" pos:end="599:43"><name pos:start="599:31" pos:end="599:33">col</name> <operator pos:start="599:35" pos:end="599:35">&lt;</operator> <name pos:start="599:37" pos:end="599:41">width</name><operator pos:start="599:42" pos:end="599:42">/</operator><literal type="number" pos:start="599:43" pos:end="599:43">2</literal></expr>;</condition> <incr pos:start="599:46" pos:end="599:50"><expr pos:start="599:46" pos:end="599:50"><name pos:start="599:46" pos:end="599:48">col</name><operator pos:start="599:49" pos:end="599:50">++</operator></expr></incr>)</control> <block pos:start="599:53" pos:end="615:17">{<block_content pos:start="601:21" pos:end="613:33">

                    <expr_stmt pos:start="601:21" pos:end="601:72"><expr pos:start="601:21" pos:end="601:71"><name pos:start="601:21" pos:end="601:39"><name pos:start="601:21" pos:end="601:26">outptr</name><index pos:start="601:27" pos:end="601:39">[<expr pos:start="601:28" pos:end="601:38"><name pos:start="601:28" pos:end="601:36">pixel_ptr</name><operator pos:start="601:37" pos:end="601:38">++</operator></expr>]</index></name> <operator pos:start="601:41" pos:end="601:41">=</operator> <call pos:start="601:43" pos:end="601:71"><name pos:start="601:43" pos:end="601:47">get_b</name><argument_list pos:start="601:48" pos:end="601:71">(<argument pos:start="601:49" pos:end="601:58"><expr pos:start="601:49" pos:end="601:58"><name pos:start="601:49" pos:end="601:58"><name pos:start="601:49" pos:end="601:55">encoded</name><index pos:start="601:56" pos:end="601:58">[<expr pos:start="601:57" pos:end="601:57"><literal type="number" pos:start="601:57" pos:end="601:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="601:61" pos:end="601:70"><expr pos:start="601:61" pos:end="601:70"><name pos:start="601:61" pos:end="601:70"><name pos:start="601:61" pos:end="601:67">encoded</name><index pos:start="601:68" pos:end="601:70">[<expr pos:start="601:69" pos:end="601:69"><literal type="number" pos:start="601:69" pos:end="601:69">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="603:21" pos:end="603:84"><expr pos:start="603:21" pos:end="603:83"><name pos:start="603:21" pos:end="603:39"><name pos:start="603:21" pos:end="603:26">outptr</name><index pos:start="603:27" pos:end="603:39">[<expr pos:start="603:28" pos:end="603:38"><name pos:start="603:28" pos:end="603:36">pixel_ptr</name><operator pos:start="603:37" pos:end="603:38">++</operator></expr>]</index></name> <operator pos:start="603:41" pos:end="603:41">=</operator> <call pos:start="603:43" pos:end="603:83"><name pos:start="603:43" pos:end="603:47">get_g</name><argument_list pos:start="603:48" pos:end="603:83">(<argument pos:start="603:49" pos:end="603:58"><expr pos:start="603:49" pos:end="603:58"><name pos:start="603:49" pos:end="603:58"><name pos:start="603:49" pos:end="603:55">encoded</name><index pos:start="603:56" pos:end="603:58">[<expr pos:start="603:57" pos:end="603:57"><literal type="number" pos:start="603:57" pos:end="603:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="603:61" pos:end="603:70"><expr pos:start="603:61" pos:end="603:70"><name pos:start="603:61" pos:end="603:70"><name pos:start="603:61" pos:end="603:67">encoded</name><index pos:start="603:68" pos:end="603:70">[<expr pos:start="603:69" pos:end="603:69"><literal type="number" pos:start="603:69" pos:end="603:69">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="603:73" pos:end="603:82"><expr pos:start="603:73" pos:end="603:82"><name pos:start="603:73" pos:end="603:82"><name pos:start="603:73" pos:end="603:79">encoded</name><index pos:start="603:80" pos:end="603:82">[<expr pos:start="603:81" pos:end="603:81"><literal type="number" pos:start="603:81" pos:end="603:81">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="605:21" pos:end="605:72"><expr pos:start="605:21" pos:end="605:71"><name pos:start="605:21" pos:end="605:39"><name pos:start="605:21" pos:end="605:26">outptr</name><index pos:start="605:27" pos:end="605:39">[<expr pos:start="605:28" pos:end="605:38"><name pos:start="605:28" pos:end="605:36">pixel_ptr</name><operator pos:start="605:37" pos:end="605:38">++</operator></expr>]</index></name> <operator pos:start="605:41" pos:end="605:41">=</operator> <call pos:start="605:43" pos:end="605:71"><name pos:start="605:43" pos:end="605:47">get_r</name><argument_list pos:start="605:48" pos:end="605:71">(<argument pos:start="605:49" pos:end="605:58"><expr pos:start="605:49" pos:end="605:58"><name pos:start="605:49" pos:end="605:58"><name pos:start="605:49" pos:end="605:55">encoded</name><index pos:start="605:56" pos:end="605:58">[<expr pos:start="605:57" pos:end="605:57"><literal type="number" pos:start="605:57" pos:end="605:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="605:61" pos:end="605:70"><expr pos:start="605:61" pos:end="605:70"><name pos:start="605:61" pos:end="605:70"><name pos:start="605:61" pos:end="605:67">encoded</name><index pos:start="605:68" pos:end="605:70">[<expr pos:start="605:69" pos:end="605:69"><literal type="number" pos:start="605:69" pos:end="605:69">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="607:21" pos:end="607:72"><expr pos:start="607:21" pos:end="607:71"><name pos:start="607:21" pos:end="607:39"><name pos:start="607:21" pos:end="607:26">outptr</name><index pos:start="607:27" pos:end="607:39">[<expr pos:start="607:28" pos:end="607:38"><name pos:start="607:28" pos:end="607:36">pixel_ptr</name><operator pos:start="607:37" pos:end="607:38">++</operator></expr>]</index></name> <operator pos:start="607:41" pos:end="607:41">=</operator> <call pos:start="607:43" pos:end="607:71"><name pos:start="607:43" pos:end="607:47">get_b</name><argument_list pos:start="607:48" pos:end="607:71">(<argument pos:start="607:49" pos:end="607:58"><expr pos:start="607:49" pos:end="607:58"><name pos:start="607:49" pos:end="607:58"><name pos:start="607:49" pos:end="607:55">encoded</name><index pos:start="607:56" pos:end="607:58">[<expr pos:start="607:57" pos:end="607:57"><literal type="number" pos:start="607:57" pos:end="607:57">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="607:61" pos:end="607:70"><expr pos:start="607:61" pos:end="607:70"><name pos:start="607:61" pos:end="607:70"><name pos:start="607:61" pos:end="607:67">encoded</name><index pos:start="607:68" pos:end="607:70">[<expr pos:start="607:69" pos:end="607:69"><literal type="number" pos:start="607:69" pos:end="607:69">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="609:21" pos:end="609:84"><expr pos:start="609:21" pos:end="609:83"><name pos:start="609:21" pos:end="609:39"><name pos:start="609:21" pos:end="609:26">outptr</name><index pos:start="609:27" pos:end="609:39">[<expr pos:start="609:28" pos:end="609:38"><name pos:start="609:28" pos:end="609:36">pixel_ptr</name><operator pos:start="609:37" pos:end="609:38">++</operator></expr>]</index></name> <operator pos:start="609:41" pos:end="609:41">=</operator> <call pos:start="609:43" pos:end="609:83"><name pos:start="609:43" pos:end="609:47">get_g</name><argument_list pos:start="609:48" pos:end="609:83">(<argument pos:start="609:49" pos:end="609:58"><expr pos:start="609:49" pos:end="609:58"><name pos:start="609:49" pos:end="609:58"><name pos:start="609:49" pos:end="609:55">encoded</name><index pos:start="609:56" pos:end="609:58">[<expr pos:start="609:57" pos:end="609:57"><literal type="number" pos:start="609:57" pos:end="609:57">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="609:61" pos:end="609:70"><expr pos:start="609:61" pos:end="609:70"><name pos:start="609:61" pos:end="609:70"><name pos:start="609:61" pos:end="609:67">encoded</name><index pos:start="609:68" pos:end="609:70">[<expr pos:start="609:69" pos:end="609:69"><literal type="number" pos:start="609:69" pos:end="609:69">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="609:73" pos:end="609:82"><expr pos:start="609:73" pos:end="609:82"><name pos:start="609:73" pos:end="609:82"><name pos:start="609:73" pos:end="609:79">encoded</name><index pos:start="609:80" pos:end="609:82">[<expr pos:start="609:81" pos:end="609:81"><literal type="number" pos:start="609:81" pos:end="609:81">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="611:21" pos:end="611:72"><expr pos:start="611:21" pos:end="611:71"><name pos:start="611:21" pos:end="611:39"><name pos:start="611:21" pos:end="611:26">outptr</name><index pos:start="611:27" pos:end="611:39">[<expr pos:start="611:28" pos:end="611:38"><name pos:start="611:28" pos:end="611:36">pixel_ptr</name><operator pos:start="611:37" pos:end="611:38">++</operator></expr>]</index></name> <operator pos:start="611:41" pos:end="611:41">=</operator> <call pos:start="611:43" pos:end="611:71"><name pos:start="611:43" pos:end="611:47">get_r</name><argument_list pos:start="611:48" pos:end="611:71">(<argument pos:start="611:49" pos:end="611:58"><expr pos:start="611:49" pos:end="611:58"><name pos:start="611:49" pos:end="611:58"><name pos:start="611:49" pos:end="611:55">encoded</name><index pos:start="611:56" pos:end="611:58">[<expr pos:start="611:57" pos:end="611:57"><literal type="number" pos:start="611:57" pos:end="611:57">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="611:61" pos:end="611:70"><expr pos:start="611:61" pos:end="611:70"><name pos:start="611:61" pos:end="611:70"><name pos:start="611:61" pos:end="611:67">encoded</name><index pos:start="611:68" pos:end="611:70">[<expr pos:start="611:69" pos:end="611:69"><literal type="number" pos:start="611:69" pos:end="611:69">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="613:21" pos:end="613:33"><expr pos:start="613:21" pos:end="613:32"><name pos:start="613:21" pos:end="613:27">encoded</name> <operator pos:start="613:29" pos:end="613:30">+=</operator> <literal type="number" pos:start="613:32" pos:end="613:32">4</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <break pos:start="619:13" pos:end="619:18">break;</break>

        <case pos:start="621:9" pos:end="621:28">case <expr pos:start="621:14" pos:end="621:27"><name pos:start="621:14" pos:end="621:27">IMGTYPE_YUV420</name></expr>:</case>

            <for pos:start="623:13" pos:end="659:13">for <control pos:start="623:17" pos:end="623:55">(<init pos:start="623:18" pos:end="623:38"><expr pos:start="623:18" pos:end="623:37"><name pos:start="623:18" pos:end="623:20">row</name> <operator pos:start="623:22" pos:end="623:22">=</operator> <name pos:start="623:24" pos:end="623:29">height</name> <operator pos:start="623:31" pos:end="623:31">/</operator> <literal type="number" pos:start="623:33" pos:end="623:35">2</literal> <operator pos:start="623:35" pos:end="623:35">-</operator> <literal type="number" pos:start="623:37" pos:end="623:37">1</literal></expr>;</init> <condition pos:start="623:40" pos:end="623:48"><expr pos:start="623:40" pos:end="623:47"><name pos:start="623:40" pos:end="623:42">row</name> <operator pos:start="623:44" pos:end="623:45">&gt;=</operator> <literal type="number" pos:start="623:47" pos:end="623:47">0</literal></expr>;</condition> <incr pos:start="623:50" pos:end="623:54"><expr pos:start="623:50" pos:end="623:54"><name pos:start="623:50" pos:end="623:52">row</name><operator pos:start="623:53" pos:end="623:54">--</operator></expr></incr>)</control> <block pos:start="623:57" pos:end="659:13">{<block_content pos:start="625:17" pos:end="657:17">

                <expr_stmt pos:start="625:17" pos:end="625:57"><expr pos:start="625:17" pos:end="625:56"><name pos:start="625:17" pos:end="625:25">pixel_ptr</name> <operator pos:start="625:27" pos:end="625:27">=</operator> <literal type="number" pos:start="625:29" pos:end="625:29">2</literal> <operator pos:start="625:31" pos:end="625:31">*</operator> <name pos:start="625:33" pos:end="625:35">row</name> <operator pos:start="625:37" pos:end="625:37">*</operator> <name pos:start="625:39" pos:end="625:56"><name pos:start="625:39" pos:end="625:39">c</name><operator pos:start="625:40" pos:end="625:41">-&gt;</operator><name pos:start="625:42" pos:end="625:44">pic</name><operator pos:start="625:45" pos:end="625:45">.</operator><name pos:start="625:46" pos:end="625:53">linesize</name><index pos:start="625:54" pos:end="625:56">[<expr pos:start="625:55" pos:end="625:55"><literal type="number" pos:start="625:55" pos:end="625:55">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <for pos:start="627:17" pos:end="657:17">for <control pos:start="627:21" pos:end="627:51">(<init pos:start="627:22" pos:end="627:29"><expr pos:start="627:22" pos:end="627:28"><name pos:start="627:22" pos:end="627:24">col</name> <operator pos:start="627:26" pos:end="627:26">=</operator> <literal type="number" pos:start="627:28" pos:end="627:28">0</literal></expr>;</init> <condition pos:start="627:31" pos:end="627:44"><expr pos:start="627:31" pos:end="627:43"><name pos:start="627:31" pos:end="627:33">col</name> <operator pos:start="627:35" pos:end="627:35">&lt;</operator> <name pos:start="627:37" pos:end="627:41">width</name><operator pos:start="627:42" pos:end="627:42">/</operator><literal type="number" pos:start="627:43" pos:end="627:43">2</literal></expr>;</condition> <incr pos:start="627:46" pos:end="627:50"><expr pos:start="627:46" pos:end="627:50"><name pos:start="627:46" pos:end="627:48">col</name><operator pos:start="627:49" pos:end="627:50">++</operator></expr></incr>)</control> <block pos:start="627:53" pos:end="657:17">{<block_content pos:start="629:21" pos:end="655:33">

                    <expr_stmt pos:start="629:21" pos:end="629:70"><expr pos:start="629:21" pos:end="629:69"><name pos:start="629:21" pos:end="629:37"><name pos:start="629:21" pos:end="629:26">outptr</name><index pos:start="629:27" pos:end="629:37">[<expr pos:start="629:28" pos:end="629:36"><name pos:start="629:28" pos:end="629:36">pixel_ptr</name></expr>]</index></name> <operator pos:start="629:39" pos:end="629:39">=</operator> <call pos:start="629:41" pos:end="629:69"><name pos:start="629:41" pos:end="629:45">get_b</name><argument_list pos:start="629:46" pos:end="629:69">(<argument pos:start="629:47" pos:end="629:56"><expr pos:start="629:47" pos:end="629:56"><name pos:start="629:47" pos:end="629:56"><name pos:start="629:47" pos:end="629:53">encoded</name><index pos:start="629:54" pos:end="629:56">[<expr pos:start="629:55" pos:end="629:55"><literal type="number" pos:start="629:55" pos:end="629:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="629:59" pos:end="629:68"><expr pos:start="629:59" pos:end="629:68"><name pos:start="629:59" pos:end="629:68"><name pos:start="629:59" pos:end="629:65">encoded</name><index pos:start="629:66" pos:end="629:68">[<expr pos:start="629:67" pos:end="629:67"><literal type="number" pos:start="629:67" pos:end="629:67">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="631:21" pos:end="631:84"><expr pos:start="631:21" pos:end="631:83"><name pos:start="631:21" pos:end="631:39"><name pos:start="631:21" pos:end="631:26">outptr</name><index pos:start="631:27" pos:end="631:39">[<expr pos:start="631:28" pos:end="631:38"><name pos:start="631:28" pos:end="631:36">pixel_ptr</name><operator pos:start="631:37" pos:end="631:37">+</operator><literal type="number" pos:start="631:38" pos:end="631:38">1</literal></expr>]</index></name> <operator pos:start="631:41" pos:end="631:41">=</operator> <call pos:start="631:43" pos:end="631:83"><name pos:start="631:43" pos:end="631:47">get_g</name><argument_list pos:start="631:48" pos:end="631:83">(<argument pos:start="631:49" pos:end="631:58"><expr pos:start="631:49" pos:end="631:58"><name pos:start="631:49" pos:end="631:58"><name pos:start="631:49" pos:end="631:55">encoded</name><index pos:start="631:56" pos:end="631:58">[<expr pos:start="631:57" pos:end="631:57"><literal type="number" pos:start="631:57" pos:end="631:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="631:61" pos:end="631:70"><expr pos:start="631:61" pos:end="631:70"><name pos:start="631:61" pos:end="631:70"><name pos:start="631:61" pos:end="631:67">encoded</name><index pos:start="631:68" pos:end="631:70">[<expr pos:start="631:69" pos:end="631:69"><literal type="number" pos:start="631:69" pos:end="631:69">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="631:73" pos:end="631:82"><expr pos:start="631:73" pos:end="631:82"><name pos:start="631:73" pos:end="631:82"><name pos:start="631:73" pos:end="631:79">encoded</name><index pos:start="631:80" pos:end="631:82">[<expr pos:start="631:81" pos:end="631:81"><literal type="number" pos:start="631:81" pos:end="631:81">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="633:21" pos:end="633:72"><expr pos:start="633:21" pos:end="633:71"><name pos:start="633:21" pos:end="633:39"><name pos:start="633:21" pos:end="633:26">outptr</name><index pos:start="633:27" pos:end="633:39">[<expr pos:start="633:28" pos:end="633:38"><name pos:start="633:28" pos:end="633:36">pixel_ptr</name><operator pos:start="633:37" pos:end="633:37">+</operator><literal type="number" pos:start="633:38" pos:end="633:38">2</literal></expr>]</index></name> <operator pos:start="633:41" pos:end="633:41">=</operator> <call pos:start="633:43" pos:end="633:71"><name pos:start="633:43" pos:end="633:47">get_r</name><argument_list pos:start="633:48" pos:end="633:71">(<argument pos:start="633:49" pos:end="633:58"><expr pos:start="633:49" pos:end="633:58"><name pos:start="633:49" pos:end="633:58"><name pos:start="633:49" pos:end="633:55">encoded</name><index pos:start="633:56" pos:end="633:58">[<expr pos:start="633:57" pos:end="633:57"><literal type="number" pos:start="633:57" pos:end="633:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="633:61" pos:end="633:70"><expr pos:start="633:61" pos:end="633:70"><name pos:start="633:61" pos:end="633:70"><name pos:start="633:61" pos:end="633:67">encoded</name><index pos:start="633:68" pos:end="633:70">[<expr pos:start="633:69" pos:end="633:69"><literal type="number" pos:start="633:69" pos:end="633:69">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="635:21" pos:end="635:72"><expr pos:start="635:21" pos:end="635:71"><name pos:start="635:21" pos:end="635:39"><name pos:start="635:21" pos:end="635:26">outptr</name><index pos:start="635:27" pos:end="635:39">[<expr pos:start="635:28" pos:end="635:38"><name pos:start="635:28" pos:end="635:36">pixel_ptr</name><operator pos:start="635:37" pos:end="635:37">+</operator><literal type="number" pos:start="635:38" pos:end="635:38">3</literal></expr>]</index></name> <operator pos:start="635:41" pos:end="635:41">=</operator> <call pos:start="635:43" pos:end="635:71"><name pos:start="635:43" pos:end="635:47">get_b</name><argument_list pos:start="635:48" pos:end="635:71">(<argument pos:start="635:49" pos:end="635:58"><expr pos:start="635:49" pos:end="635:58"><name pos:start="635:49" pos:end="635:58"><name pos:start="635:49" pos:end="635:55">encoded</name><index pos:start="635:56" pos:end="635:58">[<expr pos:start="635:57" pos:end="635:57"><literal type="number" pos:start="635:57" pos:end="635:57">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="635:61" pos:end="635:70"><expr pos:start="635:61" pos:end="635:70"><name pos:start="635:61" pos:end="635:70"><name pos:start="635:61" pos:end="635:67">encoded</name><index pos:start="635:68" pos:end="635:70">[<expr pos:start="635:69" pos:end="635:69"><literal type="number" pos:start="635:69" pos:end="635:69">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="637:21" pos:end="637:84"><expr pos:start="637:21" pos:end="637:83"><name pos:start="637:21" pos:end="637:39"><name pos:start="637:21" pos:end="637:26">outptr</name><index pos:start="637:27" pos:end="637:39">[<expr pos:start="637:28" pos:end="637:38"><name pos:start="637:28" pos:end="637:36">pixel_ptr</name><operator pos:start="637:37" pos:end="637:37">+</operator><literal type="number" pos:start="637:38" pos:end="637:38">4</literal></expr>]</index></name> <operator pos:start="637:41" pos:end="637:41">=</operator> <call pos:start="637:43" pos:end="637:83"><name pos:start="637:43" pos:end="637:47">get_g</name><argument_list pos:start="637:48" pos:end="637:83">(<argument pos:start="637:49" pos:end="637:58"><expr pos:start="637:49" pos:end="637:58"><name pos:start="637:49" pos:end="637:58"><name pos:start="637:49" pos:end="637:55">encoded</name><index pos:start="637:56" pos:end="637:58">[<expr pos:start="637:57" pos:end="637:57"><literal type="number" pos:start="637:57" pos:end="637:57">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="637:61" pos:end="637:70"><expr pos:start="637:61" pos:end="637:70"><name pos:start="637:61" pos:end="637:70"><name pos:start="637:61" pos:end="637:67">encoded</name><index pos:start="637:68" pos:end="637:70">[<expr pos:start="637:69" pos:end="637:69"><literal type="number" pos:start="637:69" pos:end="637:69">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="637:73" pos:end="637:82"><expr pos:start="637:73" pos:end="637:82"><name pos:start="637:73" pos:end="637:82"><name pos:start="637:73" pos:end="637:79">encoded</name><index pos:start="637:80" pos:end="637:82">[<expr pos:start="637:81" pos:end="637:81"><literal type="number" pos:start="637:81" pos:end="637:81">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="639:21" pos:end="639:72"><expr pos:start="639:21" pos:end="639:71"><name pos:start="639:21" pos:end="639:39"><name pos:start="639:21" pos:end="639:26">outptr</name><index pos:start="639:27" pos:end="639:39">[<expr pos:start="639:28" pos:end="639:38"><name pos:start="639:28" pos:end="639:36">pixel_ptr</name><operator pos:start="639:37" pos:end="639:37">+</operator><literal type="number" pos:start="639:38" pos:end="639:38">5</literal></expr>]</index></name> <operator pos:start="639:41" pos:end="639:41">=</operator> <call pos:start="639:43" pos:end="639:71"><name pos:start="639:43" pos:end="639:47">get_r</name><argument_list pos:start="639:48" pos:end="639:71">(<argument pos:start="639:49" pos:end="639:58"><expr pos:start="639:49" pos:end="639:58"><name pos:start="639:49" pos:end="639:58"><name pos:start="639:49" pos:end="639:55">encoded</name><index pos:start="639:56" pos:end="639:58">[<expr pos:start="639:57" pos:end="639:57"><literal type="number" pos:start="639:57" pos:end="639:57">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="639:61" pos:end="639:70"><expr pos:start="639:61" pos:end="639:70"><name pos:start="639:61" pos:end="639:70"><name pos:start="639:61" pos:end="639:67">encoded</name><index pos:start="639:68" pos:end="639:70">[<expr pos:start="639:69" pos:end="639:69"><literal type="number" pos:start="639:69" pos:end="639:69">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="641:21" pos:end="641:89"><expr pos:start="641:21" pos:end="641:88"><name pos:start="641:21" pos:end="641:56"><name pos:start="641:21" pos:end="641:26">outptr</name><index pos:start="641:27" pos:end="641:56">[<expr pos:start="641:28" pos:end="641:55"><name pos:start="641:28" pos:end="641:36">pixel_ptr</name><operator pos:start="641:37" pos:end="641:37">-</operator><name pos:start="641:38" pos:end="641:55"><name pos:start="641:38" pos:end="641:38">c</name><operator pos:start="641:39" pos:end="641:40">-&gt;</operator><name pos:start="641:41" pos:end="641:43">pic</name><operator pos:start="641:44" pos:end="641:44">.</operator><name pos:start="641:45" pos:end="641:52">linesize</name><index pos:start="641:53" pos:end="641:55">[<expr pos:start="641:54" pos:end="641:54"><literal type="number" pos:start="641:54" pos:end="641:54">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="641:58" pos:end="641:58">=</operator> <call pos:start="641:60" pos:end="641:88"><name pos:start="641:60" pos:end="641:64">get_b</name><argument_list pos:start="641:65" pos:end="641:88">(<argument pos:start="641:66" pos:end="641:75"><expr pos:start="641:66" pos:end="641:75"><name pos:start="641:66" pos:end="641:75"><name pos:start="641:66" pos:end="641:72">encoded</name><index pos:start="641:73" pos:end="641:75">[<expr pos:start="641:74" pos:end="641:74"><literal type="number" pos:start="641:74" pos:end="641:74">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="641:78" pos:end="641:87"><expr pos:start="641:78" pos:end="641:87"><name pos:start="641:78" pos:end="641:87"><name pos:start="641:78" pos:end="641:84">encoded</name><index pos:start="641:85" pos:end="641:87">[<expr pos:start="641:86" pos:end="641:86"><literal type="number" pos:start="641:86" pos:end="641:86">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="643:21" pos:end="643:103"><expr pos:start="643:21" pos:end="643:102"><name pos:start="643:21" pos:end="643:58"><name pos:start="643:21" pos:end="643:26">outptr</name><index pos:start="643:27" pos:end="643:58">[<expr pos:start="643:28" pos:end="643:57"><name pos:start="643:28" pos:end="643:36">pixel_ptr</name><operator pos:start="643:37" pos:end="643:37">-</operator><name pos:start="643:38" pos:end="643:55"><name pos:start="643:38" pos:end="643:38">c</name><operator pos:start="643:39" pos:end="643:40">-&gt;</operator><name pos:start="643:41" pos:end="643:43">pic</name><operator pos:start="643:44" pos:end="643:44">.</operator><name pos:start="643:45" pos:end="643:52">linesize</name><index pos:start="643:53" pos:end="643:55">[<expr pos:start="643:54" pos:end="643:54"><literal type="number" pos:start="643:54" pos:end="643:54">0</literal></expr>]</index></name><operator pos:start="643:56" pos:end="643:56">+</operator><literal type="number" pos:start="643:57" pos:end="643:57">1</literal></expr>]</index></name> <operator pos:start="643:60" pos:end="643:60">=</operator> <call pos:start="643:62" pos:end="643:102"><name pos:start="643:62" pos:end="643:66">get_g</name><argument_list pos:start="643:67" pos:end="643:102">(<argument pos:start="643:68" pos:end="643:77"><expr pos:start="643:68" pos:end="643:77"><name pos:start="643:68" pos:end="643:77"><name pos:start="643:68" pos:end="643:74">encoded</name><index pos:start="643:75" pos:end="643:77">[<expr pos:start="643:76" pos:end="643:76"><literal type="number" pos:start="643:76" pos:end="643:76">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="643:80" pos:end="643:89"><expr pos:start="643:80" pos:end="643:89"><name pos:start="643:80" pos:end="643:89"><name pos:start="643:80" pos:end="643:86">encoded</name><index pos:start="643:87" pos:end="643:89">[<expr pos:start="643:88" pos:end="643:88"><literal type="number" pos:start="643:88" pos:end="643:88">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="643:92" pos:end="643:101"><expr pos:start="643:92" pos:end="643:101"><name pos:start="643:92" pos:end="643:101"><name pos:start="643:92" pos:end="643:98">encoded</name><index pos:start="643:99" pos:end="643:101">[<expr pos:start="643:100" pos:end="643:100"><literal type="number" pos:start="643:100" pos:end="643:100">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="645:21" pos:end="645:91"><expr pos:start="645:21" pos:end="645:90"><name pos:start="645:21" pos:end="645:58"><name pos:start="645:21" pos:end="645:26">outptr</name><index pos:start="645:27" pos:end="645:58">[<expr pos:start="645:28" pos:end="645:57"><name pos:start="645:28" pos:end="645:36">pixel_ptr</name><operator pos:start="645:37" pos:end="645:37">-</operator><name pos:start="645:38" pos:end="645:55"><name pos:start="645:38" pos:end="645:38">c</name><operator pos:start="645:39" pos:end="645:40">-&gt;</operator><name pos:start="645:41" pos:end="645:43">pic</name><operator pos:start="645:44" pos:end="645:44">.</operator><name pos:start="645:45" pos:end="645:52">linesize</name><index pos:start="645:53" pos:end="645:55">[<expr pos:start="645:54" pos:end="645:54"><literal type="number" pos:start="645:54" pos:end="645:54">0</literal></expr>]</index></name><operator pos:start="645:56" pos:end="645:56">+</operator><literal type="number" pos:start="645:57" pos:end="645:57">2</literal></expr>]</index></name> <operator pos:start="645:60" pos:end="645:60">=</operator> <call pos:start="645:62" pos:end="645:90"><name pos:start="645:62" pos:end="645:66">get_r</name><argument_list pos:start="645:67" pos:end="645:90">(<argument pos:start="645:68" pos:end="645:77"><expr pos:start="645:68" pos:end="645:77"><name pos:start="645:68" pos:end="645:77"><name pos:start="645:68" pos:end="645:74">encoded</name><index pos:start="645:75" pos:end="645:77">[<expr pos:start="645:76" pos:end="645:76"><literal type="number" pos:start="645:76" pos:end="645:76">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="645:80" pos:end="645:89"><expr pos:start="645:80" pos:end="645:89"><name pos:start="645:80" pos:end="645:89"><name pos:start="645:80" pos:end="645:86">encoded</name><index pos:start="645:87" pos:end="645:89">[<expr pos:start="645:88" pos:end="645:88"><literal type="number" pos:start="645:88" pos:end="645:88">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="647:21" pos:end="647:91"><expr pos:start="647:21" pos:end="647:90"><name pos:start="647:21" pos:end="647:58"><name pos:start="647:21" pos:end="647:26">outptr</name><index pos:start="647:27" pos:end="647:58">[<expr pos:start="647:28" pos:end="647:57"><name pos:start="647:28" pos:end="647:36">pixel_ptr</name><operator pos:start="647:37" pos:end="647:37">-</operator><name pos:start="647:38" pos:end="647:55"><name pos:start="647:38" pos:end="647:38">c</name><operator pos:start="647:39" pos:end="647:40">-&gt;</operator><name pos:start="647:41" pos:end="647:43">pic</name><operator pos:start="647:44" pos:end="647:44">.</operator><name pos:start="647:45" pos:end="647:52">linesize</name><index pos:start="647:53" pos:end="647:55">[<expr pos:start="647:54" pos:end="647:54"><literal type="number" pos:start="647:54" pos:end="647:54">0</literal></expr>]</index></name><operator pos:start="647:56" pos:end="647:56">+</operator><literal type="number" pos:start="647:57" pos:end="647:57">3</literal></expr>]</index></name> <operator pos:start="647:60" pos:end="647:60">=</operator> <call pos:start="647:62" pos:end="647:90"><name pos:start="647:62" pos:end="647:66">get_b</name><argument_list pos:start="647:67" pos:end="647:90">(<argument pos:start="647:68" pos:end="647:77"><expr pos:start="647:68" pos:end="647:77"><name pos:start="647:68" pos:end="647:77"><name pos:start="647:68" pos:end="647:74">encoded</name><index pos:start="647:75" pos:end="647:77">[<expr pos:start="647:76" pos:end="647:76"><literal type="number" pos:start="647:76" pos:end="647:76">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="647:80" pos:end="647:89"><expr pos:start="647:80" pos:end="647:89"><name pos:start="647:80" pos:end="647:89"><name pos:start="647:80" pos:end="647:86">encoded</name><index pos:start="647:87" pos:end="647:89">[<expr pos:start="647:88" pos:end="647:88"><literal type="number" pos:start="647:88" pos:end="647:88">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="649:21" pos:end="649:103"><expr pos:start="649:21" pos:end="649:102"><name pos:start="649:21" pos:end="649:58"><name pos:start="649:21" pos:end="649:26">outptr</name><index pos:start="649:27" pos:end="649:58">[<expr pos:start="649:28" pos:end="649:57"><name pos:start="649:28" pos:end="649:36">pixel_ptr</name><operator pos:start="649:37" pos:end="649:37">-</operator><name pos:start="649:38" pos:end="649:55"><name pos:start="649:38" pos:end="649:38">c</name><operator pos:start="649:39" pos:end="649:40">-&gt;</operator><name pos:start="649:41" pos:end="649:43">pic</name><operator pos:start="649:44" pos:end="649:44">.</operator><name pos:start="649:45" pos:end="649:52">linesize</name><index pos:start="649:53" pos:end="649:55">[<expr pos:start="649:54" pos:end="649:54"><literal type="number" pos:start="649:54" pos:end="649:54">0</literal></expr>]</index></name><operator pos:start="649:56" pos:end="649:56">+</operator><literal type="number" pos:start="649:57" pos:end="649:57">4</literal></expr>]</index></name> <operator pos:start="649:60" pos:end="649:60">=</operator> <call pos:start="649:62" pos:end="649:102"><name pos:start="649:62" pos:end="649:66">get_g</name><argument_list pos:start="649:67" pos:end="649:102">(<argument pos:start="649:68" pos:end="649:77"><expr pos:start="649:68" pos:end="649:77"><name pos:start="649:68" pos:end="649:77"><name pos:start="649:68" pos:end="649:74">encoded</name><index pos:start="649:75" pos:end="649:77">[<expr pos:start="649:76" pos:end="649:76"><literal type="number" pos:start="649:76" pos:end="649:76">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="649:80" pos:end="649:89"><expr pos:start="649:80" pos:end="649:89"><name pos:start="649:80" pos:end="649:89"><name pos:start="649:80" pos:end="649:86">encoded</name><index pos:start="649:87" pos:end="649:89">[<expr pos:start="649:88" pos:end="649:88"><literal type="number" pos:start="649:88" pos:end="649:88">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="649:92" pos:end="649:101"><expr pos:start="649:92" pos:end="649:101"><name pos:start="649:92" pos:end="649:101"><name pos:start="649:92" pos:end="649:98">encoded</name><index pos:start="649:99" pos:end="649:101">[<expr pos:start="649:100" pos:end="649:100"><literal type="number" pos:start="649:100" pos:end="649:100">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="651:21" pos:end="651:91"><expr pos:start="651:21" pos:end="651:90"><name pos:start="651:21" pos:end="651:58"><name pos:start="651:21" pos:end="651:26">outptr</name><index pos:start="651:27" pos:end="651:58">[<expr pos:start="651:28" pos:end="651:57"><name pos:start="651:28" pos:end="651:36">pixel_ptr</name><operator pos:start="651:37" pos:end="651:37">-</operator><name pos:start="651:38" pos:end="651:55"><name pos:start="651:38" pos:end="651:38">c</name><operator pos:start="651:39" pos:end="651:40">-&gt;</operator><name pos:start="651:41" pos:end="651:43">pic</name><operator pos:start="651:44" pos:end="651:44">.</operator><name pos:start="651:45" pos:end="651:52">linesize</name><index pos:start="651:53" pos:end="651:55">[<expr pos:start="651:54" pos:end="651:54"><literal type="number" pos:start="651:54" pos:end="651:54">0</literal></expr>]</index></name><operator pos:start="651:56" pos:end="651:56">+</operator><literal type="number" pos:start="651:57" pos:end="651:57">5</literal></expr>]</index></name> <operator pos:start="651:60" pos:end="651:60">=</operator> <call pos:start="651:62" pos:end="651:90"><name pos:start="651:62" pos:end="651:66">get_r</name><argument_list pos:start="651:67" pos:end="651:90">(<argument pos:start="651:68" pos:end="651:77"><expr pos:start="651:68" pos:end="651:77"><name pos:start="651:68" pos:end="651:77"><name pos:start="651:68" pos:end="651:74">encoded</name><index pos:start="651:75" pos:end="651:77">[<expr pos:start="651:76" pos:end="651:76"><literal type="number" pos:start="651:76" pos:end="651:76">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="651:80" pos:end="651:89"><expr pos:start="651:80" pos:end="651:89"><name pos:start="651:80" pos:end="651:89"><name pos:start="651:80" pos:end="651:86">encoded</name><index pos:start="651:87" pos:end="651:89">[<expr pos:start="651:88" pos:end="651:88"><literal type="number" pos:start="651:88" pos:end="651:88">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="653:21" pos:end="653:35"><expr pos:start="653:21" pos:end="653:34"><name pos:start="653:21" pos:end="653:29">pixel_ptr</name> <operator pos:start="653:31" pos:end="653:32">+=</operator> <literal type="number" pos:start="653:34" pos:end="653:34">6</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="655:21" pos:end="655:33"><expr pos:start="655:21" pos:end="655:32"><name pos:start="655:21" pos:end="655:27">encoded</name> <operator pos:start="655:29" pos:end="655:30">+=</operator> <literal type="number" pos:start="655:32" pos:end="655:32">6</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <break pos:start="661:13" pos:end="661:18">break;</break>

        <default pos:start="663:9" pos:end="663:16">default:</default>

            <expr_stmt pos:start="665:13" pos:end="665:86"><expr pos:start="665:13" pos:end="665:85"><call pos:start="665:13" pos:end="665:85"><name pos:start="665:13" pos:end="665:18">av_log</name><argument_list pos:start="665:19" pos:end="665:85">(<argument pos:start="665:20" pos:end="665:24"><expr pos:start="665:20" pos:end="665:24"><name pos:start="665:20" pos:end="665:24">avctx</name></expr></argument>, <argument pos:start="665:27" pos:end="665:38"><expr pos:start="665:27" pos:end="665:38"><name pos:start="665:27" pos:end="665:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="665:41" pos:end="665:84"><expr pos:start="665:41" pos:end="665:84"><literal type="string" pos:start="665:41" pos:end="665:84">"BUG! Unknown imagetype in image decoder.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="667:13" pos:end="667:22">return <expr pos:start="667:20" pos:end="667:21"><operator pos:start="667:20" pos:end="667:20">-</operator><literal type="number" pos:start="667:21" pos:end="667:21">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="673:5" pos:end="673:33"><expr pos:start="673:5" pos:end="673:32"><operator pos:start="673:5" pos:end="673:5">*</operator><name pos:start="673:6" pos:end="673:14">data_size</name> <operator pos:start="673:16" pos:end="673:16">=</operator> <sizeof pos:start="673:18" pos:end="673:32">sizeof<argument_list pos:start="673:24" pos:end="673:32">(<argument pos:start="673:25" pos:end="673:31"><expr pos:start="673:25" pos:end="673:31"><name pos:start="673:25" pos:end="673:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="675:5" pos:end="675:29"><expr pos:start="675:5" pos:end="675:28"><operator pos:start="675:5" pos:end="675:5">*</operator><operator pos:start="675:6" pos:end="675:6">(</operator><name pos:start="675:7" pos:end="675:13">AVFrame</name><operator pos:start="675:14" pos:end="675:14">*</operator><operator pos:start="675:15" pos:end="675:15">)</operator><name pos:start="675:16" pos:end="675:19">data</name> <operator pos:start="675:21" pos:end="675:21">=</operator> <name pos:start="675:23" pos:end="675:28"><name pos:start="675:23" pos:end="675:23">c</name><operator pos:start="675:24" pos:end="675:25">-&gt;</operator><name pos:start="675:26" pos:end="675:28">pic</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="679:5" pos:end="679:63">/* always report that the buffer was completely consumed */</comment>

    <return pos:start="681:5" pos:end="681:20">return <expr pos:start="681:12" pos:end="681:19"><name pos:start="681:12" pos:end="681:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
