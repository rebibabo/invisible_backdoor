<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4143.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:42">qdev_prop_set_globals_for_type</name><parameter_list pos:start="1:43" pos:end="3:53">(<parameter pos:start="1:44" pos:end="1:59"><decl pos:start="1:44" pos:end="1:59"><type pos:start="1:44" pos:end="1:59"><name pos:start="1:44" pos:end="1:54">DeviceState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">dev</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:52"><decl pos:start="3:33" pos:end="3:52"><type pos:start="3:33" pos:end="3:52"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:42">char</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:52">typename</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:5">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">GlobalProperty</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:24">prop</name></decl>;</decl_stmt>



    <macro pos:start="11:5" pos:end="11:45"><name pos:start="11:5" pos:end="11:18">QTAILQ_FOREACH</name><argument_list pos:start="11:19" pos:end="11:45">(<argument pos:start="11:20" pos:end="11:23">prop</argument>, <argument pos:start="11:26" pos:end="11:38">&amp;global_props</argument>, <argument pos:start="11:41" pos:end="11:44">next</argument>)</argument_list></macro> <block pos:start="11:47" pos:end="39:5">{<block_content pos:start="13:9" pos:end="37:9">

        <decl_stmt pos:start="13:9" pos:end="13:26"><decl pos:start="13:9" pos:end="13:25"><type pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:13">Error</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:18">err</name> <init pos:start="13:20" pos:end="13:25">= <expr pos:start="13:22" pos:end="13:25"><name pos:start="13:22" pos:end="13:25">NULL</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:48">(<expr pos:start="17:13" pos:end="17:47"><call pos:start="17:13" pos:end="17:42"><name pos:start="17:13" pos:end="17:18">strcmp</name><argument_list pos:start="17:19" pos:end="17:42">(<argument pos:start="17:20" pos:end="17:27"><expr pos:start="17:20" pos:end="17:27"><name pos:start="17:20" pos:end="17:27">typename</name></expr></argument>, <argument pos:start="17:30" pos:end="17:41"><expr pos:start="17:30" pos:end="17:41"><name pos:start="17:30" pos:end="17:41"><name pos:start="17:30" pos:end="17:33">prop</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:41">driver</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:44" pos:end="17:45">!=</operator> <literal type="number" pos:start="17:47" pos:end="17:47">0</literal></expr>)</condition> <block pos:start="17:50" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:21">

            <continue pos:start="19:13" pos:end="19:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:26"><expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:12">prop</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:18">used</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:25">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:78"><expr pos:start="25:9" pos:end="25:77"><call pos:start="25:9" pos:end="25:77"><name pos:start="25:9" pos:end="25:29">object_property_parse</name><argument_list pos:start="25:30" pos:end="25:77">(<argument pos:start="25:31" pos:end="25:41"><expr pos:start="25:31" pos:end="25:41"><call pos:start="25:31" pos:end="25:41"><name pos:start="25:31" pos:end="25:36">OBJECT</name><argument_list pos:start="25:37" pos:end="25:41">(<argument pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><name pos:start="25:38" pos:end="25:40">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:44" pos:end="25:54"><expr pos:start="25:44" pos:end="25:54"><name pos:start="25:44" pos:end="25:54"><name pos:start="25:44" pos:end="25:47">prop</name><operator pos:start="25:48" pos:end="25:49">-&gt;</operator><name pos:start="25:50" pos:end="25:54">value</name></name></expr></argument>, <argument pos:start="25:57" pos:end="25:70"><expr pos:start="25:57" pos:end="25:70"><name pos:start="25:57" pos:end="25:70"><name pos:start="25:57" pos:end="25:60">prop</name><operator pos:start="25:61" pos:end="25:62">-&gt;</operator><name pos:start="25:63" pos:end="25:70">property</name></name></expr></argument>, <argument pos:start="25:73" pos:end="25:76"><expr pos:start="25:73" pos:end="25:76"><operator pos:start="25:73" pos:end="25:73">&amp;</operator><name pos:start="25:74" pos:end="25:76">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="37:9"><if pos:start="27:9" pos:end="37:9">if <condition pos:start="27:12" pos:end="27:24">(<expr pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:15">err</name> <operator pos:start="27:17" pos:end="27:18">!=</operator> <name pos:start="27:20" pos:end="27:23">NULL</name></expr>)</condition> <block pos:start="27:26" pos:end="37:9">{<block_content pos:start="29:13" pos:end="35:19">

            <expr_stmt pos:start="29:13" pos:end="29:40"><expr pos:start="29:13" pos:end="29:39"><call pos:start="29:13" pos:end="29:39"><name pos:start="29:13" pos:end="29:18">assert</name><argument_list pos:start="29:19" pos:end="29:39">(<argument pos:start="29:20" pos:end="29:38"><expr pos:start="29:20" pos:end="29:38"><name pos:start="29:20" pos:end="29:38"><name pos:start="29:20" pos:end="29:23">prop</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:38">user_provided</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="33:73"><expr pos:start="31:13" pos:end="33:72"><call pos:start="31:13" pos:end="33:72"><name pos:start="31:13" pos:end="31:29">error_reportf_err</name><argument_list pos:start="31:30" pos:end="33:72">(<argument pos:start="31:31" pos:end="31:33"><expr pos:start="31:31" pos:end="31:33"><name pos:start="31:31" pos:end="31:33">err</name></expr></argument>, <argument pos:start="31:36" pos:end="31:71"><expr pos:start="31:36" pos:end="31:71"><literal type="string" pos:start="31:36" pos:end="31:71">"Warning: global %s.%s=%s ignored: "</literal></expr></argument>,

                              <argument pos:start="33:31" pos:end="33:42"><expr pos:start="33:31" pos:end="33:42"><name pos:start="33:31" pos:end="33:42"><name pos:start="33:31" pos:end="33:34">prop</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:42">driver</name></name></expr></argument>, <argument pos:start="33:45" pos:end="33:58"><expr pos:start="33:45" pos:end="33:58"><name pos:start="33:45" pos:end="33:58"><name pos:start="33:45" pos:end="33:48">prop</name><operator pos:start="33:49" pos:end="33:50">-&gt;</operator><name pos:start="33:51" pos:end="33:58">property</name></name></expr></argument>, <argument pos:start="33:61" pos:end="33:71"><expr pos:start="33:61" pos:end="33:71"><name pos:start="33:61" pos:end="33:71"><name pos:start="33:61" pos:end="33:64">prop</name><operator pos:start="33:65" pos:end="33:66">-&gt;</operator><name pos:start="33:67" pos:end="33:71">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
