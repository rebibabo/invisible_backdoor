<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25852.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">virtio_gpu_reset</name><parameter_list pos:start="1:29" pos:end="1:48">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:41">VirtIODevice</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:47">vdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="76:0">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VirtIOGPU</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">g</name> <init pos:start="5:18" pos:end="5:35">= <expr pos:start="5:20" pos:end="5:35"><call pos:start="5:20" pos:end="5:35"><name pos:start="5:20" pos:end="5:29">VIRTIO_GPU</name><argument_list pos:start="5:30" pos:end="5:35">(<argument pos:start="5:31" pos:end="5:34"><expr pos:start="5:31" pos:end="5:34"><name pos:start="5:31" pos:end="5:34">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:39"><name pos:start="7:5" pos:end="7:37"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:37">virtio_gpu_simple_resource</name></name> <modifier pos:start="7:39" pos:end="7:39">*</modifier></type><name pos:start="7:40" pos:end="7:42">res</name></decl>, <decl pos:start="7:45" pos:end="7:48"><type ref="prev" pos:start="7:5" pos:end="7:39"><modifier pos:start="7:45" pos:end="7:45">*</modifier></type><name pos:start="7:46" pos:end="7:48">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:18"><expr pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:5">g</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:13">enable</name></name> <operator pos:start="13:15" pos:end="13:15">=</operator> <literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr>;</expr_stmt>



    <macro pos:start="17:5" pos:end="17:52"><name pos:start="17:5" pos:end="17:23">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="17:24" pos:end="17:52">(<argument pos:start="17:25" pos:end="17:27">res</argument>, <argument pos:start="17:30" pos:end="17:40">&amp;g-&gt;reslist</argument>, <argument pos:start="17:43" pos:end="17:46">next</argument>, <argument pos:start="17:49" pos:end="17:51">tmp</argument>)</argument_list></macro> <block pos:start="17:54" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:44">

        <expr_stmt pos:start="19:9" pos:end="19:44"><expr pos:start="19:9" pos:end="19:43"><call pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:35">virtio_gpu_resource_destroy</name><argument_list pos:start="19:36" pos:end="19:43">(<argument pos:start="19:37" pos:end="19:37"><expr pos:start="19:37" pos:end="19:37"><name pos:start="19:37" pos:end="19:37">g</name></expr></argument>, <argument pos:start="19:40" pos:end="19:42"><expr pos:start="19:40" pos:end="19:42"><name pos:start="19:40" pos:end="19:42">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

    <for pos:start="23:5" pos:end="59:5">for <control pos:start="23:9" pos:end="23:45">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:40"><expr pos:start="23:17" pos:end="23:39"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:39"><name pos:start="23:21" pos:end="23:21">g</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:27">conf</name><operator pos:start="23:28" pos:end="23:28">.</operator><name pos:start="23:29" pos:end="23:39">max_outputs</name></name></expr>;</condition> <incr pos:start="23:42" pos:end="23:44"><expr pos:start="23:42" pos:end="23:44"><name pos:start="23:42" pos:end="23:42">i</name><operator pos:start="23:43" pos:end="23:44">++</operator></expr></incr>)</control> <block pos:start="23:47" pos:end="59:5">{<block_content pos:start="47:9" pos:end="57:32">

<cpp:if pos:start="25:1" pos:end="25:5">#<cpp:directive pos:start="25:2" pos:end="25:3">if</cpp:directive> <expr pos:start="25:5" pos:end="25:5"><literal type="number" pos:start="25:5" pos:end="25:5">0</literal></expr></cpp:if>

        g-&gt;req_state[i].x = 0;

        g-&gt;req_state[i].y = 0;

        if (i == 0) {

            g-&gt;req_state[0].width = 1024;

            g-&gt;req_state[0].height = 768;

        } else {

            g-&gt;req_state[i].width = 0;

            g-&gt;req_state[i].height = 0;

        }

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="47:9" pos:end="47:38"><expr pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:9">g</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:18">scanout</name><index pos:start="47:19" pos:end="47:21">[<expr pos:start="47:20" pos:end="47:20"><name pos:start="47:20" pos:end="47:20">i</name></expr>]</index></name><operator pos:start="47:22" pos:end="47:22">.</operator><name pos:start="47:23" pos:end="47:33">resource_id</name> <operator pos:start="47:35" pos:end="47:35">=</operator> <literal type="number" pos:start="47:37" pos:end="47:37">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:32"><expr pos:start="49:9" pos:end="49:31"><name pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:9">g</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:18">scanout</name><index pos:start="49:19" pos:end="49:21">[<expr pos:start="49:20" pos:end="49:20"><name pos:start="49:20" pos:end="49:20">i</name></expr>]</index></name><operator pos:start="49:22" pos:end="49:22">.</operator><name pos:start="49:23" pos:end="49:27">width</name> <operator pos:start="49:29" pos:end="49:29">=</operator> <literal type="number" pos:start="49:31" pos:end="49:31">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:33"><expr pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:9">g</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:18">scanout</name><index pos:start="51:19" pos:end="51:21">[<expr pos:start="51:20" pos:end="51:20"><name pos:start="51:20" pos:end="51:20">i</name></expr>]</index></name><operator pos:start="51:22" pos:end="51:22">.</operator><name pos:start="51:23" pos:end="51:28">height</name> <operator pos:start="51:30" pos:end="51:30">=</operator> <literal type="number" pos:start="51:32" pos:end="51:32">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:9">g</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:18">scanout</name><index pos:start="53:19" pos:end="53:21">[<expr pos:start="53:20" pos:end="53:20"><name pos:start="53:20" pos:end="53:20">i</name></expr>]</index></name><operator pos:start="53:22" pos:end="53:22">.</operator><name pos:start="53:23" pos:end="53:23">x</name> <operator pos:start="53:25" pos:end="53:25">=</operator> <literal type="number" pos:start="53:27" pos:end="53:27">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:28"><expr pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:9">g</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:18">scanout</name><index pos:start="55:19" pos:end="55:21">[<expr pos:start="55:20" pos:end="55:20"><name pos:start="55:20" pos:end="55:20">i</name></expr>]</index></name><operator pos:start="55:22" pos:end="55:22">.</operator><name pos:start="55:23" pos:end="55:23">y</name> <operator pos:start="55:25" pos:end="55:25">=</operator> <literal type="number" pos:start="55:27" pos:end="55:27">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:32"><expr pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:9">g</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:18">scanout</name><index pos:start="57:19" pos:end="57:21">[<expr pos:start="57:20" pos:end="57:20"><name pos:start="57:20" pos:end="57:20">i</name></expr>]</index></name><operator pos:start="57:22" pos:end="57:22">.</operator><name pos:start="57:23" pos:end="57:24">ds</name> <operator pos:start="57:26" pos:end="57:26">=</operator> <name pos:start="57:28" pos:end="57:31">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="61:5" pos:end="66:0"><expr pos:start="61:5" pos:end="61:33"><name pos:start="61:5" pos:end="61:29"><name pos:start="61:5" pos:end="61:5">g</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:29">enabled_output_bitmask</name></name> <operator pos:start="61:31" pos:end="61:31">=</operator> <literal type="number" pos:start="61:33" pos:end="61:33">1</literal></expr>;</expr_stmt>



<cpp:ifdef pos:start="65:1" pos:end="65:19">#<cpp:directive pos:start="65:2" pos:end="65:6">ifdef</cpp:directive> <name pos:start="65:8" pos:end="65:19">CONFIG_VIRGL</name></cpp:ifdef>

    <if_stmt pos:start="67:5" pos:end="76:0"><if pos:start="67:5" pos:end="76:0">if <condition pos:start="67:8" pos:end="67:30">(<expr pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:9">g</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:29">use_virgl_renderer</name></name></expr>)</condition> <block pos:start="67:32" pos:end="76:0">{<block_content pos:start="69:9" pos:end="71:34">

        <expr_stmt pos:start="69:9" pos:end="69:34"><expr pos:start="69:9" pos:end="69:33"><call pos:start="69:9" pos:end="69:33"><name pos:start="69:9" pos:end="69:30">virtio_gpu_virgl_reset</name><argument_list pos:start="69:31" pos:end="69:33">(<argument pos:start="69:32" pos:end="69:32"><expr pos:start="69:32" pos:end="69:32"><name pos:start="69:32" pos:end="69:32">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:34"><expr pos:start="71:9" pos:end="71:33"><name pos:start="71:9" pos:end="71:29"><name pos:start="71:9" pos:end="71:9">g</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:29">use_virgl_renderer</name></name> <operator pos:start="71:31" pos:end="71:31">=</operator> <literal type="number" pos:start="71:33" pos:end="71:33">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="75:1" pos:end="75:6">#<cpp:directive pos:start="75:2" pos:end="75:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
