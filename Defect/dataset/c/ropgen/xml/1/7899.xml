<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7899.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:51"><name pos:start="1:1" pos:end="1:37">qcrypto_tls_session_check_certificate</name><argument_list pos:start="1:38" pos:end="3:51">(<argument pos:start="1:39" pos:end="1:64">QCryptoTLSSession *session</argument>,

                                      <argument pos:start="3:39" pos:end="3:50">Error **errp</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="263:1">{<block_content pos:start="7:5" pos:end="261:14">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:23">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:26"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:24">gnutls_datum_t</name> <modifier pos:start="11:26" pos:end="11:26">*</modifier></type><name pos:start="11:27" pos:end="11:31">certs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:23">nCerts</name></decl>, <decl pos:start="13:26" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:26" pos:end="13:26">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">time_t</name></type> <name pos:start="15:12" pos:end="15:14">now</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:34"><decl pos:start="17:5" pos:end="17:33"><type pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:21">gnutls_x509_crt_t</name></type> <name pos:start="17:23" pos:end="17:26">cert</name> <init pos:start="17:28" pos:end="17:33">= <expr pos:start="17:30" pos:end="17:33"><name pos:start="17:30" pos:end="17:33">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:7">now</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:20"><name pos:start="21:11" pos:end="21:14">time</name><argument_list pos:start="21:15" pos:end="21:20">(<argument pos:start="21:16" pos:end="21:19"><expr pos:start="21:16" pos:end="21:19"><name pos:start="21:16" pos:end="21:19">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:28">(<expr pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:11">now</name> <operator pos:start="23:13" pos:end="23:14">==</operator> <operator pos:start="23:16" pos:end="23:16">(</operator><operator pos:start="23:17" pos:end="23:17">(</operator><name pos:start="23:18" pos:end="23:23">time_t</name><operator pos:start="23:24" pos:end="23:24">)</operator><operator pos:start="23:25" pos:end="23:25">-</operator><literal type="number" pos:start="23:26" pos:end="23:26">1</literal><operator pos:start="23:27" pos:end="23:27">)</operator></expr>)</condition> <block pos:start="23:30" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:18">

        <expr_stmt pos:start="25:9" pos:end="25:65"><expr pos:start="25:9" pos:end="25:64"><call pos:start="25:9" pos:end="25:64"><name pos:start="25:9" pos:end="25:24">error_setg_errno</name><argument_list pos:start="25:25" pos:end="25:64">(<argument pos:start="25:26" pos:end="25:29"><expr pos:start="25:26" pos:end="25:29"><name pos:start="25:26" pos:end="25:29">errp</name></expr></argument>, <argument pos:start="25:32" pos:end="25:36"><expr pos:start="25:32" pos:end="25:36"><name pos:start="25:32" pos:end="25:36">errno</name></expr></argument>, <argument pos:start="25:39" pos:end="25:63"><expr pos:start="25:39" pos:end="25:63"><literal type="string" pos:start="25:39" pos:end="25:63">"Cannot get current time"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:69"><expr pos:start="33:5" pos:end="33:68"><name pos:start="33:5" pos:end="33:7">ret</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:68"><name pos:start="33:11" pos:end="33:42">gnutls_certificate_verify_peers2</name><argument_list pos:start="33:43" pos:end="33:68">(<argument pos:start="33:44" pos:end="33:58"><expr pos:start="33:44" pos:end="33:58"><name pos:start="33:44" pos:end="33:58"><name pos:start="33:44" pos:end="33:50">session</name><operator pos:start="33:51" pos:end="33:52">-&gt;</operator><name pos:start="33:53" pos:end="33:58">handle</name></name></expr></argument>, <argument pos:start="33:61" pos:end="33:67"><expr pos:start="33:61" pos:end="33:67"><operator pos:start="33:61" pos:end="33:61">&amp;</operator><name pos:start="33:62" pos:end="33:67">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:16">(<expr pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">&lt;</operator> <literal type="number" pos:start="35:15" pos:end="35:15">0</literal></expr>)</condition> <block pos:start="35:18" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:18">

        <expr_stmt pos:start="37:9" pos:end="37:68"><expr pos:start="37:9" pos:end="37:67"><call pos:start="37:9" pos:end="37:67"><name pos:start="37:9" pos:end="37:18">error_setg</name><argument_list pos:start="37:19" pos:end="37:67">(<argument pos:start="37:20" pos:end="37:23"><expr pos:start="37:20" pos:end="37:23"><name pos:start="37:20" pos:end="37:23">errp</name></expr></argument>, <argument pos:start="37:26" pos:end="37:44"><expr pos:start="37:26" pos:end="37:44"><literal type="string" pos:start="37:26" pos:end="37:44">"Verify failed: %s"</literal></expr></argument>, <argument pos:start="37:47" pos:end="37:66"><expr pos:start="37:47" pos:end="37:66"><call pos:start="37:47" pos:end="37:66"><name pos:start="37:47" pos:end="37:61">gnutls_strerror</name><argument_list pos:start="37:62" pos:end="37:66">(<argument pos:start="37:63" pos:end="37:65"><expr pos:start="37:63" pos:end="37:65"><name pos:start="37:63" pos:end="37:65">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="87:5"><if pos:start="45:5" pos:end="87:5">if <condition pos:start="45:8" pos:end="45:20">(<expr pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:14">status</name> <operator pos:start="45:16" pos:end="45:17">!=</operator> <literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr>)</condition> <block pos:start="45:22" pos:end="87:5">{<block_content pos:start="47:9" pos:end="85:18">

        <decl_stmt pos:start="47:9" pos:end="47:51"><decl pos:start="47:9" pos:end="47:50"><type pos:start="47:9" pos:end="47:20"><specifier pos:start="47:9" pos:end="47:13">const</specifier> <name pos:start="47:15" pos:end="47:18">char</name> <modifier pos:start="47:20" pos:end="47:20">*</modifier></type><name pos:start="47:21" pos:end="47:26">reason</name> <init pos:start="47:28" pos:end="47:50">= <expr pos:start="47:30" pos:end="47:50"><literal type="string" pos:start="47:30" pos:end="47:50">"Invalid certificate"</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:41">(<expr pos:start="51:13" pos:end="51:40"><name pos:start="51:13" pos:end="51:18">status</name> <operator pos:start="51:20" pos:end="51:20">&amp;</operator> <name pos:start="51:22" pos:end="51:40">GNUTLS_CERT_INVALID</name></expr>)</condition> <block pos:start="51:43" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:54">

            <expr_stmt pos:start="53:13" pos:end="53:54"><expr pos:start="53:13" pos:end="53:53"><name pos:start="53:13" pos:end="53:18">reason</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <literal type="string" pos:start="53:22" pos:end="53:53">"The certificate is not trusted"</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="59:9" pos:end="63:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:50">(<expr pos:start="59:13" pos:end="59:49"><name pos:start="59:13" pos:end="59:18">status</name> <operator pos:start="59:20" pos:end="59:20">&amp;</operator> <name pos:start="59:22" pos:end="59:49">GNUTLS_CERT_SIGNER_NOT_FOUND</name></expr>)</condition> <block pos:start="59:52" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:65">

            <expr_stmt pos:start="61:13" pos:end="61:65"><expr pos:start="61:13" pos:end="61:64"><name pos:start="61:13" pos:end="61:18">reason</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <literal type="string" pos:start="61:22" pos:end="61:64">"The certificate hasn't got a known issuer"</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="67:9" pos:end="71:9"><if pos:start="67:9" pos:end="71:9">if <condition pos:start="67:12" pos:end="67:41">(<expr pos:start="67:13" pos:end="67:40"><name pos:start="67:13" pos:end="67:18">status</name> <operator pos:start="67:20" pos:end="67:20">&amp;</operator> <name pos:start="67:22" pos:end="67:40">GNUTLS_CERT_REVOKED</name></expr>)</condition> <block pos:start="67:43" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:56">

            <expr_stmt pos:start="69:13" pos:end="69:56"><expr pos:start="69:13" pos:end="69:55"><name pos:start="69:13" pos:end="69:18">reason</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <literal type="string" pos:start="69:22" pos:end="69:55">"The certificate has been revoked"</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="75:9" pos:end="79:9"><if pos:start="75:9" pos:end="79:9">if <condition pos:start="75:12" pos:end="75:52">(<expr pos:start="75:13" pos:end="75:51"><name pos:start="75:13" pos:end="75:18">status</name> <operator pos:start="75:20" pos:end="75:20">&amp;</operator> <name pos:start="75:22" pos:end="75:51">GNUTLS_CERT_INSECURE_ALGORITHM</name></expr>)</condition> <block pos:start="75:54" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:66">

            <expr_stmt pos:start="77:13" pos:end="77:66"><expr pos:start="77:13" pos:end="77:65"><name pos:start="77:13" pos:end="77:18">reason</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <literal type="string" pos:start="77:22" pos:end="77:65">"The certificate uses an insecure algorithm"</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:39"><expr pos:start="83:9" pos:end="83:38"><call pos:start="83:9" pos:end="83:38"><name pos:start="83:9" pos:end="83:18">error_setg</name><argument_list pos:start="83:19" pos:end="83:38">(<argument pos:start="83:20" pos:end="83:23"><expr pos:start="83:20" pos:end="83:23"><name pos:start="83:20" pos:end="83:23">errp</name></expr></argument>, <argument pos:start="83:26" pos:end="83:29"><expr pos:start="83:26" pos:end="83:29"><literal type="string" pos:start="83:26" pos:end="83:29">"%s"</literal></expr></argument>, <argument pos:start="83:32" pos:end="83:37"><expr pos:start="83:32" pos:end="83:37"><name pos:start="83:32" pos:end="83:37">reason</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="85:9" pos:end="85:18">return <expr pos:start="85:16" pos:end="85:17"><operator pos:start="85:16" pos:end="85:16">-</operator><literal type="number" pos:start="85:17" pos:end="85:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:67"><expr pos:start="91:5" pos:end="91:66"><name pos:start="91:5" pos:end="91:9">certs</name> <operator pos:start="91:11" pos:end="91:11">=</operator> <call pos:start="91:13" pos:end="91:66"><name pos:start="91:13" pos:end="91:40">gnutls_certificate_get_peers</name><argument_list pos:start="91:41" pos:end="91:66">(<argument pos:start="91:42" pos:end="91:56"><expr pos:start="91:42" pos:end="91:56"><name pos:start="91:42" pos:end="91:56"><name pos:start="91:42" pos:end="91:48">session</name><operator pos:start="91:49" pos:end="91:50">-&gt;</operator><name pos:start="91:51" pos:end="91:56">handle</name></name></expr></argument>, <argument pos:start="91:59" pos:end="91:65"><expr pos:start="91:59" pos:end="91:65"><operator pos:start="91:59" pos:end="91:59">&amp;</operator><name pos:start="91:60" pos:end="91:65">nCerts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:15">(<expr pos:start="93:9" pos:end="93:14"><operator pos:start="93:9" pos:end="93:9">!</operator><name pos:start="93:10" pos:end="93:14">certs</name></expr>)</condition> <block pos:start="93:17" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:18">

        <expr_stmt pos:start="95:9" pos:end="95:49"><expr pos:start="95:9" pos:end="95:48"><call pos:start="95:9" pos:end="95:48"><name pos:start="95:9" pos:end="95:18">error_setg</name><argument_list pos:start="95:19" pos:end="95:48">(<argument pos:start="95:20" pos:end="95:23"><expr pos:start="95:20" pos:end="95:23"><name pos:start="95:20" pos:end="95:23">errp</name></expr></argument>, <argument pos:start="95:26" pos:end="95:47"><expr pos:start="95:26" pos:end="95:47"><literal type="string" pos:start="95:26" pos:end="95:47">"No certificate peers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="97:9" pos:end="97:18">return <expr pos:start="97:16" pos:end="97:17"><operator pos:start="97:16" pos:end="97:16">-</operator><literal type="number" pos:start="97:17" pos:end="97:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="103:5" pos:end="249:5">for <control pos:start="103:9" pos:end="103:32">(<init pos:start="103:10" pos:end="103:15"><expr pos:start="103:10" pos:end="103:14"><name pos:start="103:10" pos:end="103:10">i</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <literal type="number" pos:start="103:14" pos:end="103:14">0</literal></expr>;</init> <condition pos:start="103:17" pos:end="103:27"><expr pos:start="103:17" pos:end="103:26"><name pos:start="103:17" pos:end="103:17">i</name> <operator pos:start="103:19" pos:end="103:19">&lt;</operator> <name pos:start="103:21" pos:end="103:26">nCerts</name></expr>;</condition> <incr pos:start="103:29" pos:end="103:31"><expr pos:start="103:29" pos:end="103:31"><name pos:start="103:29" pos:end="103:29">i</name><operator pos:start="103:30" pos:end="103:31">++</operator></expr></incr>)</control> <block pos:start="103:34" pos:end="249:5">{<block_content pos:start="105:9" pos:end="247:37">

        <expr_stmt pos:start="105:9" pos:end="105:42"><expr pos:start="105:9" pos:end="105:41"><name pos:start="105:9" pos:end="105:11">ret</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <call pos:start="105:15" pos:end="105:41"><name pos:start="105:15" pos:end="105:34">gnutls_x509_crt_init</name><argument_list pos:start="105:35" pos:end="105:41">(<argument pos:start="105:36" pos:end="105:40"><expr pos:start="105:36" pos:end="105:40"><operator pos:start="105:36" pos:end="105:36">&amp;</operator><name pos:start="105:37" pos:end="105:40">cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="115:9"><if pos:start="107:9" pos:end="115:9">if <condition pos:start="107:12" pos:end="107:20">(<expr pos:start="107:13" pos:end="107:19"><name pos:start="107:13" pos:end="107:15">ret</name> <operator pos:start="107:17" pos:end="107:17">&lt;</operator> <literal type="number" pos:start="107:19" pos:end="107:19">0</literal></expr>)</condition> <block pos:start="107:22" pos:end="115:9">{<block_content pos:start="109:13" pos:end="113:22">

            <expr_stmt pos:start="109:13" pos:end="111:45"><expr pos:start="109:13" pos:end="111:44"><call pos:start="109:13" pos:end="111:44"><name pos:start="109:13" pos:end="109:22">error_setg</name><argument_list pos:start="109:23" pos:end="111:44">(<argument pos:start="109:24" pos:end="109:27"><expr pos:start="109:24" pos:end="109:27"><name pos:start="109:24" pos:end="109:27">errp</name></expr></argument>, <argument pos:start="109:30" pos:end="109:64"><expr pos:start="109:30" pos:end="109:64"><literal type="string" pos:start="109:30" pos:end="109:64">"Cannot initialize certificate: %s"</literal></expr></argument>,

                       <argument pos:start="111:24" pos:end="111:43"><expr pos:start="111:24" pos:end="111:43"><call pos:start="111:24" pos:end="111:43"><name pos:start="111:24" pos:end="111:38">gnutls_strerror</name><argument_list pos:start="111:39" pos:end="111:43">(<argument pos:start="111:40" pos:end="111:42"><expr pos:start="111:40" pos:end="111:42"><name pos:start="111:40" pos:end="111:42">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="113:13" pos:end="113:22">return <expr pos:start="113:20" pos:end="113:21"><operator pos:start="113:20" pos:end="113:20">-</operator><literal type="number" pos:start="113:21" pos:end="113:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:75"><expr pos:start="119:9" pos:end="119:74"><name pos:start="119:9" pos:end="119:11">ret</name> <operator pos:start="119:13" pos:end="119:13">=</operator> <call pos:start="119:15" pos:end="119:74"><name pos:start="119:15" pos:end="119:36">gnutls_x509_crt_import</name><argument_list pos:start="119:37" pos:end="119:74">(<argument pos:start="119:38" pos:end="119:41"><expr pos:start="119:38" pos:end="119:41"><name pos:start="119:38" pos:end="119:41">cert</name></expr></argument>, <argument pos:start="119:44" pos:end="119:52"><expr pos:start="119:44" pos:end="119:52"><operator pos:start="119:44" pos:end="119:44">&amp;</operator><name pos:start="119:45" pos:end="119:52"><name pos:start="119:45" pos:end="119:49">certs</name><index pos:start="119:50" pos:end="119:52">[<expr pos:start="119:51" pos:end="119:51"><name pos:start="119:51" pos:end="119:51">i</name></expr>]</index></name></expr></argument>, <argument pos:start="119:55" pos:end="119:73"><expr pos:start="119:55" pos:end="119:73"><name pos:start="119:55" pos:end="119:73">GNUTLS_X509_FMT_DER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="129:9"><if pos:start="121:9" pos:end="129:9">if <condition pos:start="121:12" pos:end="121:20">(<expr pos:start="121:13" pos:end="121:19"><name pos:start="121:13" pos:end="121:15">ret</name> <operator pos:start="121:17" pos:end="121:17">&lt;</operator> <literal type="number" pos:start="121:19" pos:end="121:19">0</literal></expr>)</condition> <block pos:start="121:22" pos:end="129:9">{<block_content pos:start="123:13" pos:end="127:23">

            <expr_stmt pos:start="123:13" pos:end="125:45"><expr pos:start="123:13" pos:end="125:44"><call pos:start="123:13" pos:end="125:44"><name pos:start="123:13" pos:end="123:22">error_setg</name><argument_list pos:start="123:23" pos:end="125:44">(<argument pos:start="123:24" pos:end="123:27"><expr pos:start="123:24" pos:end="123:27"><name pos:start="123:24" pos:end="123:27">errp</name></expr></argument>, <argument pos:start="123:30" pos:end="123:60"><expr pos:start="123:30" pos:end="123:60"><literal type="string" pos:start="123:30" pos:end="123:60">"Cannot import certificate: %s"</literal></expr></argument>,

                       <argument pos:start="125:24" pos:end="125:43"><expr pos:start="125:24" pos:end="125:43"><call pos:start="125:24" pos:end="125:43"><name pos:start="125:24" pos:end="125:38">gnutls_strerror</name><argument_list pos:start="125:39" pos:end="125:43">(<argument pos:start="125:40" pos:end="125:42"><expr pos:start="125:40" pos:end="125:42"><name pos:start="125:40" pos:end="125:42">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="127:13" pos:end="127:23">goto <name pos:start="127:18" pos:end="127:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="133:9" pos:end="139:9"><if pos:start="133:9" pos:end="139:9">if <condition pos:start="133:12" pos:end="133:60">(<expr pos:start="133:13" pos:end="133:59"><call pos:start="133:13" pos:end="133:53"><name pos:start="133:13" pos:end="133:47">gnutls_x509_crt_get_expiration_time</name><argument_list pos:start="133:48" pos:end="133:53">(<argument pos:start="133:49" pos:end="133:52"><expr pos:start="133:49" pos:end="133:52"><name pos:start="133:49" pos:end="133:52">cert</name></expr></argument>)</argument_list></call> <operator pos:start="133:55" pos:end="133:55">&lt;</operator> <name pos:start="133:57" pos:end="133:59">now</name></expr>)</condition> <block pos:start="133:62" pos:end="139:9">{<block_content pos:start="135:13" pos:end="137:23">

            <expr_stmt pos:start="135:13" pos:end="135:60"><expr pos:start="135:13" pos:end="135:59"><call pos:start="135:13" pos:end="135:59"><name pos:start="135:13" pos:end="135:22">error_setg</name><argument_list pos:start="135:23" pos:end="135:59">(<argument pos:start="135:24" pos:end="135:27"><expr pos:start="135:24" pos:end="135:27"><name pos:start="135:24" pos:end="135:27">errp</name></expr></argument>, <argument pos:start="135:30" pos:end="135:58"><expr pos:start="135:30" pos:end="135:58"><literal type="string" pos:start="135:30" pos:end="135:58">"The certificate has expired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="137:13" pos:end="137:23">goto <name pos:start="137:18" pos:end="137:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="143:9" pos:end="149:9"><if pos:start="143:9" pos:end="149:9">if <condition pos:start="143:12" pos:end="143:60">(<expr pos:start="143:13" pos:end="143:59"><call pos:start="143:13" pos:end="143:53"><name pos:start="143:13" pos:end="143:47">gnutls_x509_crt_get_activation_time</name><argument_list pos:start="143:48" pos:end="143:53">(<argument pos:start="143:49" pos:end="143:52"><expr pos:start="143:49" pos:end="143:52"><name pos:start="143:49" pos:end="143:52">cert</name></expr></argument>)</argument_list></call> <operator pos:start="143:55" pos:end="143:55">&gt;</operator> <name pos:start="143:57" pos:end="143:59">now</name></expr>)</condition> <block pos:start="143:62" pos:end="149:9">{<block_content pos:start="145:13" pos:end="147:23">

            <expr_stmt pos:start="145:13" pos:end="145:69"><expr pos:start="145:13" pos:end="145:68"><call pos:start="145:13" pos:end="145:68"><name pos:start="145:13" pos:end="145:22">error_setg</name><argument_list pos:start="145:23" pos:end="145:68">(<argument pos:start="145:24" pos:end="145:27"><expr pos:start="145:24" pos:end="145:27"><name pos:start="145:24" pos:end="145:27">errp</name></expr></argument>, <argument pos:start="145:30" pos:end="145:67"><expr pos:start="145:30" pos:end="145:67"><literal type="string" pos:start="145:30" pos:end="145:67">"The certificate is not yet activated"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="147:13" pos:end="147:23">goto <name pos:start="147:18" pos:end="147:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="153:9" pos:end="159:9"><if pos:start="153:9" pos:end="159:9">if <condition pos:start="153:12" pos:end="153:60">(<expr pos:start="153:13" pos:end="153:59"><call pos:start="153:13" pos:end="153:53"><name pos:start="153:13" pos:end="153:47">gnutls_x509_crt_get_activation_time</name><argument_list pos:start="153:48" pos:end="153:53">(<argument pos:start="153:49" pos:end="153:52"><expr pos:start="153:49" pos:end="153:52"><name pos:start="153:49" pos:end="153:52">cert</name></expr></argument>)</argument_list></call> <operator pos:start="153:55" pos:end="153:55">&gt;</operator> <name pos:start="153:57" pos:end="153:59">now</name></expr>)</condition> <block pos:start="153:62" pos:end="159:9">{<block_content pos:start="155:13" pos:end="157:23">

            <expr_stmt pos:start="155:13" pos:end="155:69"><expr pos:start="155:13" pos:end="155:68"><call pos:start="155:13" pos:end="155:68"><name pos:start="155:13" pos:end="155:22">error_setg</name><argument_list pos:start="155:23" pos:end="155:68">(<argument pos:start="155:24" pos:end="155:27"><expr pos:start="155:24" pos:end="155:27"><name pos:start="155:24" pos:end="155:27">errp</name></expr></argument>, <argument pos:start="155:30" pos:end="155:67"><expr pos:start="155:30" pos:end="155:67"><literal type="string" pos:start="155:30" pos:end="155:67">"The certificate is not yet activated"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="157:13" pos:end="157:23">goto <name pos:start="157:18" pos:end="157:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="163:9" pos:end="243:9"><if pos:start="163:9" pos:end="243:9">if <condition pos:start="163:12" pos:end="163:19">(<expr pos:start="163:13" pos:end="163:18"><name pos:start="163:13" pos:end="163:13">i</name> <operator pos:start="163:15" pos:end="163:16">==</operator> <literal type="number" pos:start="163:18" pos:end="163:18">0</literal></expr>)</condition> <block pos:start="163:21" pos:end="243:9">{<block_content pos:start="165:13" pos:end="241:13">

            <decl_stmt pos:start="165:13" pos:end="165:36"><decl pos:start="165:13" pos:end="165:35"><type pos:start="165:13" pos:end="165:18"><name pos:start="165:13" pos:end="165:18">size_t</name></type> <name pos:start="165:20" pos:end="165:28">dnameSize</name> <init pos:start="165:30" pos:end="165:35">= <expr pos:start="165:32" pos:end="165:35"><literal type="number" pos:start="165:32" pos:end="165:35">1024</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:52"><expr pos:start="167:13" pos:end="167:51"><name pos:start="167:13" pos:end="167:29"><name pos:start="167:13" pos:end="167:19">session</name><operator pos:start="167:20" pos:end="167:21">-&gt;</operator><name pos:start="167:22" pos:end="167:29">peername</name></name> <operator pos:start="167:31" pos:end="167:31">=</operator> <call pos:start="167:33" pos:end="167:51"><name pos:start="167:33" pos:end="167:40">g_malloc</name><argument_list pos:start="167:41" pos:end="167:51">(<argument pos:start="167:42" pos:end="167:50"><expr pos:start="167:42" pos:end="167:50"><name pos:start="167:42" pos:end="167:50">dnameSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <label pos:start="169:9" pos:end="169:16"><name pos:start="169:9" pos:end="169:15">requery</name>:</label>

            <expr_stmt pos:start="171:13" pos:end="171:78"><expr pos:start="171:13" pos:end="171:77"><name pos:start="171:13" pos:end="171:15">ret</name> <operator pos:start="171:17" pos:end="171:17">=</operator> <call pos:start="171:19" pos:end="171:77"><name pos:start="171:19" pos:end="171:40">gnutls_x509_crt_get_dn</name><argument_list pos:start="171:41" pos:end="171:77">(<argument pos:start="171:42" pos:end="171:45"><expr pos:start="171:42" pos:end="171:45"><name pos:start="171:42" pos:end="171:45">cert</name></expr></argument>, <argument pos:start="171:48" pos:end="171:64"><expr pos:start="171:48" pos:end="171:64"><name pos:start="171:48" pos:end="171:64"><name pos:start="171:48" pos:end="171:54">session</name><operator pos:start="171:55" pos:end="171:56">-&gt;</operator><name pos:start="171:57" pos:end="171:64">peername</name></name></expr></argument>, <argument pos:start="171:67" pos:end="171:76"><expr pos:start="171:67" pos:end="171:76"><operator pos:start="171:67" pos:end="171:67">&amp;</operator><name pos:start="171:68" pos:end="171:76">dnameSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="173:13" pos:end="191:13"><if pos:start="173:13" pos:end="191:13">if <condition pos:start="173:16" pos:end="173:24">(<expr pos:start="173:17" pos:end="173:23"><name pos:start="173:17" pos:end="173:19">ret</name> <operator pos:start="173:21" pos:end="173:21">&lt;</operator> <literal type="number" pos:start="173:23" pos:end="173:23">0</literal></expr>)</condition> <block pos:start="173:26" pos:end="191:13">{<block_content pos:start="175:17" pos:end="189:27">

                <if_stmt pos:start="175:17" pos:end="183:17"><if pos:start="175:17" pos:end="183:17">if <condition pos:start="175:20" pos:end="175:56">(<expr pos:start="175:21" pos:end="175:55"><name pos:start="175:21" pos:end="175:23">ret</name> <operator pos:start="175:25" pos:end="175:26">==</operator> <name pos:start="175:28" pos:end="175:55">GNUTLS_E_SHORT_MEMORY_BUFFER</name></expr>)</condition> <block pos:start="175:58" pos:end="183:17">{<block_content pos:start="177:21" pos:end="181:33">

                    <expr_stmt pos:start="177:21" pos:end="179:61"><expr pos:start="177:21" pos:end="179:60"><name pos:start="177:21" pos:end="177:37"><name pos:start="177:21" pos:end="177:27">session</name><operator pos:start="177:28" pos:end="177:29">-&gt;</operator><name pos:start="177:30" pos:end="177:37">peername</name></name> <operator pos:start="177:39" pos:end="177:39">=</operator> <call pos:start="177:41" pos:end="179:60"><name pos:start="177:41" pos:end="177:49">g_realloc</name><argument_list pos:start="177:50" pos:end="179:60">(<argument pos:start="177:51" pos:end="177:67"><expr pos:start="177:51" pos:end="177:67"><name pos:start="177:51" pos:end="177:67"><name pos:start="177:51" pos:end="177:57">session</name><operator pos:start="177:58" pos:end="177:59">-&gt;</operator><name pos:start="177:60" pos:end="177:67">peername</name></name></expr></argument>,

                                                  <argument pos:start="179:51" pos:end="179:59"><expr pos:start="179:51" pos:end="179:59"><name pos:start="179:51" pos:end="179:59">dnameSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="181:21" pos:end="181:33">goto <name pos:start="181:26" pos:end="181:32">requery</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="185:17" pos:end="187:49"><expr pos:start="185:17" pos:end="187:48"><call pos:start="185:17" pos:end="187:48"><name pos:start="185:17" pos:end="185:26">error_setg</name><argument_list pos:start="185:27" pos:end="187:48">(<argument pos:start="185:28" pos:end="185:31"><expr pos:start="185:28" pos:end="185:31"><name pos:start="185:28" pos:end="185:31">errp</name></expr></argument>, <argument pos:start="185:34" pos:end="185:75"><expr pos:start="185:34" pos:end="185:75"><literal type="string" pos:start="185:34" pos:end="185:75">"Cannot get client distinguished name: %s"</literal></expr></argument>,

                           <argument pos:start="187:28" pos:end="187:47"><expr pos:start="187:28" pos:end="187:47"><call pos:start="187:28" pos:end="187:47"><name pos:start="187:28" pos:end="187:42">gnutls_strerror</name><argument_list pos:start="187:43" pos:end="187:47">(<argument pos:start="187:44" pos:end="187:46"><expr pos:start="187:44" pos:end="187:46"><name pos:start="187:44" pos:end="187:46">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="189:17" pos:end="189:27">goto <name pos:start="189:22" pos:end="189:26">error</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="193:13" pos:end="225:13"><if pos:start="193:13" pos:end="225:13">if <condition pos:start="193:16" pos:end="193:33">(<expr pos:start="193:17" pos:end="193:32"><name pos:start="193:17" pos:end="193:32"><name pos:start="193:17" pos:end="193:23">session</name><operator pos:start="193:24" pos:end="193:25">-&gt;</operator><name pos:start="193:26" pos:end="193:32">aclname</name></name></expr>)</condition> <block pos:start="193:35" pos:end="225:13">{<block_content pos:start="195:17" pos:end="223:17">

                <decl_stmt pos:start="195:17" pos:end="195:64"><decl pos:start="195:17" pos:end="195:63"><type pos:start="195:17" pos:end="195:26"><name pos:start="195:17" pos:end="195:24">qemu_acl</name> <modifier pos:start="195:26" pos:end="195:26">*</modifier></type><name pos:start="195:27" pos:end="195:29">acl</name> <init pos:start="195:31" pos:end="195:63">= <expr pos:start="195:33" pos:end="195:63"><call pos:start="195:33" pos:end="195:63"><name pos:start="195:33" pos:end="195:45">qemu_acl_find</name><argument_list pos:start="195:46" pos:end="195:63">(<argument pos:start="195:47" pos:end="195:62"><expr pos:start="195:47" pos:end="195:62"><name pos:start="195:47" pos:end="195:62"><name pos:start="195:47" pos:end="195:53">session</name><operator pos:start="195:54" pos:end="195:55">-&gt;</operator><name pos:start="195:56" pos:end="195:62">aclname</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="197:17" pos:end="197:26"><decl pos:start="197:17" pos:end="197:25"><type pos:start="197:17" pos:end="197:19"><name pos:start="197:17" pos:end="197:19">int</name></type> <name pos:start="197:21" pos:end="197:25">allow</name></decl>;</decl_stmt>

                <if_stmt pos:start="199:17" pos:end="207:17"><if pos:start="199:17" pos:end="207:17">if <condition pos:start="199:20" pos:end="199:25">(<expr pos:start="199:21" pos:end="199:24"><operator pos:start="199:21" pos:end="199:21">!</operator><name pos:start="199:22" pos:end="199:24">acl</name></expr>)</condition> <block pos:start="199:27" pos:end="207:17">{<block_content pos:start="201:21" pos:end="205:31">

                    <expr_stmt pos:start="201:21" pos:end="203:49"><expr pos:start="201:21" pos:end="203:48"><call pos:start="201:21" pos:end="203:48"><name pos:start="201:21" pos:end="201:30">error_setg</name><argument_list pos:start="201:31" pos:end="203:48">(<argument pos:start="201:32" pos:end="201:35"><expr pos:start="201:32" pos:end="201:35"><name pos:start="201:32" pos:end="201:35">errp</name></expr></argument>, <argument pos:start="201:38" pos:end="201:57"><expr pos:start="201:38" pos:end="201:57"><literal type="string" pos:start="201:38" pos:end="201:57">"Cannot find ACL %s"</literal></expr></argument>,

                               <argument pos:start="203:32" pos:end="203:47"><expr pos:start="203:32" pos:end="203:47"><name pos:start="203:32" pos:end="203:47"><name pos:start="203:32" pos:end="203:38">session</name><operator pos:start="203:39" pos:end="203:40">-&gt;</operator><name pos:start="203:41" pos:end="203:47">aclname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="205:21" pos:end="205:31">goto <name pos:start="205:26" pos:end="205:30">error</name>;</goto>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="211:17" pos:end="211:74"><expr pos:start="211:17" pos:end="211:73"><name pos:start="211:17" pos:end="211:21">allow</name> <operator pos:start="211:23" pos:end="211:23">=</operator> <call pos:start="211:25" pos:end="211:73"><name pos:start="211:25" pos:end="211:49">qemu_acl_party_is_allowed</name><argument_list pos:start="211:50" pos:end="211:73">(<argument pos:start="211:51" pos:end="211:53"><expr pos:start="211:51" pos:end="211:53"><name pos:start="211:51" pos:end="211:53">acl</name></expr></argument>, <argument pos:start="211:56" pos:end="211:72"><expr pos:start="211:56" pos:end="211:72"><name pos:start="211:56" pos:end="211:72"><name pos:start="211:56" pos:end="211:62">session</name><operator pos:start="211:63" pos:end="211:64">-&gt;</operator><name pos:start="211:65" pos:end="211:72">peername</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="215:17" pos:end="217:76"><expr pos:start="215:17" pos:end="217:75"><call pos:start="215:17" pos:end="217:75"><name pos:start="215:17" pos:end="215:26">error_setg</name><argument_list pos:start="215:27" pos:end="217:75">(<argument pos:start="215:28" pos:end="215:31"><expr pos:start="215:28" pos:end="215:31"><name pos:start="215:28" pos:end="215:31">errp</name></expr></argument>, <argument pos:start="215:34" pos:end="215:66"><expr pos:start="215:34" pos:end="215:66"><literal type="string" pos:start="215:34" pos:end="215:66">"TLS x509 ACL check for %s is %s"</literal></expr></argument>,

                           <argument pos:start="217:28" pos:end="217:44"><expr pos:start="217:28" pos:end="217:44"><name pos:start="217:28" pos:end="217:44"><name pos:start="217:28" pos:end="217:34">session</name><operator pos:start="217:35" pos:end="217:36">-&gt;</operator><name pos:start="217:37" pos:end="217:44">peername</name></name></expr></argument>, <argument pos:start="217:47" pos:end="217:74"><expr pos:start="217:47" pos:end="217:74"><ternary pos:start="217:47" pos:end="217:74"><condition pos:start="217:47" pos:end="217:53"><expr pos:start="217:47" pos:end="217:51"><name pos:start="217:47" pos:end="217:51">allow</name></expr> ?</condition><then pos:start="217:55" pos:end="217:63"> <expr pos:start="217:55" pos:end="217:63"><literal type="string" pos:start="217:55" pos:end="217:63">"allowed"</literal></expr> </then><else pos:start="217:65" pos:end="217:74">: <expr pos:start="217:67" pos:end="217:74"><literal type="string" pos:start="217:67" pos:end="217:74">"denied"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="219:17" pos:end="223:17"><if pos:start="219:17" pos:end="223:17">if <condition pos:start="219:20" pos:end="219:27">(<expr pos:start="219:21" pos:end="219:26"><operator pos:start="219:21" pos:end="219:21">!</operator><name pos:start="219:22" pos:end="219:26">allow</name></expr>)</condition> <block pos:start="219:29" pos:end="223:17">{<block_content pos:start="221:21" pos:end="221:31">

                    <goto pos:start="221:21" pos:end="221:31">goto <name pos:start="221:26" pos:end="221:30">error</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="227:13" pos:end="241:13"><if pos:start="227:13" pos:end="241:13">if <condition pos:start="227:16" pos:end="227:34">(<expr pos:start="227:17" pos:end="227:33"><name pos:start="227:17" pos:end="227:33"><name pos:start="227:17" pos:end="227:23">session</name><operator pos:start="227:24" pos:end="227:25">-&gt;</operator><name pos:start="227:26" pos:end="227:33">hostname</name></name></expr>)</condition> <block pos:start="227:36" pos:end="241:13">{<block_content pos:start="229:17" pos:end="239:17">

                <if_stmt pos:start="229:17" pos:end="239:17"><if pos:start="229:17" pos:end="239:17">if <condition pos:start="229:20" pos:end="229:77">(<expr pos:start="229:21" pos:end="229:76"><operator pos:start="229:21" pos:end="229:21">!</operator><call pos:start="229:22" pos:end="229:76"><name pos:start="229:22" pos:end="229:51">gnutls_x509_crt_check_hostname</name><argument_list pos:start="229:52" pos:end="229:76">(<argument pos:start="229:53" pos:end="229:56"><expr pos:start="229:53" pos:end="229:56"><name pos:start="229:53" pos:end="229:56">cert</name></expr></argument>, <argument pos:start="229:59" pos:end="229:75"><expr pos:start="229:59" pos:end="229:75"><name pos:start="229:59" pos:end="229:75"><name pos:start="229:59" pos:end="229:65">session</name><operator pos:start="229:66" pos:end="229:67">-&gt;</operator><name pos:start="229:68" pos:end="229:75">hostname</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="229:79" pos:end="239:17">{<block_content pos:start="231:21" pos:end="237:31">

                    <expr_stmt pos:start="231:21" pos:end="235:50"><expr pos:start="231:21" pos:end="235:49"><call pos:start="231:21" pos:end="235:49"><name pos:start="231:21" pos:end="231:30">error_setg</name><argument_list pos:start="231:31" pos:end="235:49">(<argument pos:start="231:32" pos:end="231:35"><expr pos:start="231:32" pos:end="231:35"><name pos:start="231:32" pos:end="231:35">errp</name></expr></argument>,

                               <argument pos:start="233:32" pos:end="233:75"><expr pos:start="233:32" pos:end="233:75"><literal type="string" pos:start="233:32" pos:end="233:75">"Certificate does not match the hostname %s"</literal></expr></argument>,

                               <argument pos:start="235:32" pos:end="235:48"><expr pos:start="235:32" pos:end="235:48"><name pos:start="235:32" pos:end="235:48"><name pos:start="235:32" pos:end="235:38">session</name><operator pos:start="235:39" pos:end="235:40">-&gt;</operator><name pos:start="235:41" pos:end="235:48">hostname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="237:21" pos:end="237:31">goto <name pos:start="237:26" pos:end="237:30">error</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="247:9" pos:end="247:37"><expr pos:start="247:9" pos:end="247:36"><call pos:start="247:9" pos:end="247:36"><name pos:start="247:9" pos:end="247:30">gnutls_x509_crt_deinit</name><argument_list pos:start="247:31" pos:end="247:36">(<argument pos:start="247:32" pos:end="247:35"><expr pos:start="247:32" pos:end="247:35"><name pos:start="247:32" pos:end="247:35">cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="253:5" pos:end="253:13">return <expr pos:start="253:12" pos:end="253:12"><literal type="number" pos:start="253:12" pos:end="253:12">0</literal></expr>;</return>



 <label pos:start="257:2" pos:end="257:7"><name pos:start="257:2" pos:end="257:6">error</name>:</label>

    <expr_stmt pos:start="259:5" pos:end="259:33"><expr pos:start="259:5" pos:end="259:32"><call pos:start="259:5" pos:end="259:32"><name pos:start="259:5" pos:end="259:26">gnutls_x509_crt_deinit</name><argument_list pos:start="259:27" pos:end="259:32">(<argument pos:start="259:28" pos:end="259:31"><expr pos:start="259:28" pos:end="259:31"><name pos:start="259:28" pos:end="259:31">cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="261:5" pos:end="261:14">return <expr pos:start="261:12" pos:end="261:13"><operator pos:start="261:12" pos:end="261:12">-</operator><literal type="number" pos:start="261:13" pos:end="261:13">1</literal></expr>;</return>

</block_content>}</block>
</unit>
