<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17888.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">opus_packet</name><parameter_list pos:start="1:23" pos:end="1:53">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:43"><name pos:start="1:24" pos:end="1:38">AVFormatContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">avf</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:52"><decl pos:start="1:46" pos:end="1:52"><type pos:start="1:46" pos:end="1:52"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:52">idx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="137:1">{<block_content pos:start="5:5" pos:end="135:13">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:14">ogg</name></name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">ogg</name>              <init pos:start="5:34" pos:end="5:49">= <expr pos:start="5:36" pos:end="5:49"><name pos:start="5:36" pos:end="5:49"><name pos:start="5:36" pos:end="5:38">avf</name><operator pos:start="5:39" pos:end="5:40">-&gt;</operator><name pos:start="5:41" pos:end="5:49">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:54"><decl pos:start="7:5" pos:end="7:53"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:21">ogg_stream</name></name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:25">os</name>        <init pos:start="7:34" pos:end="7:53">= <expr pos:start="7:36" pos:end="7:53"><operator pos:start="7:36" pos:end="7:36">&amp;</operator><name pos:start="7:37" pos:end="7:53"><name pos:start="7:37" pos:end="7:39">ogg</name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:48">streams</name><index pos:start="7:49" pos:end="7:53">[<expr pos:start="7:50" pos:end="7:52"><name pos:start="7:50" pos:end="7:52">idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:52"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name>                 <init pos:start="9:34" pos:end="9:52">= <expr pos:start="9:36" pos:end="9:52"><name pos:start="9:36" pos:end="9:52"><name pos:start="9:36" pos:end="9:38">avf</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:47">streams</name><index pos:start="9:48" pos:end="9:52">[<expr pos:start="9:49" pos:end="9:51"><name pos:start="9:49" pos:end="9:51">idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:46"><type pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:26">oggopus_private</name></name> <modifier pos:start="11:28" pos:end="11:28">*</modifier></type><name pos:start="11:29" pos:end="11:32">priv</name> <init pos:start="11:34" pos:end="11:46">= <expr pos:start="11:36" pos:end="11:46"><name pos:start="11:36" pos:end="11:46"><name pos:start="11:36" pos:end="11:37">os</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:46">private</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:55"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:19">packet</name>              <init pos:start="13:34" pos:end="13:55">= <expr pos:start="13:36" pos:end="13:55"><name pos:start="13:36" pos:end="13:42"><name pos:start="13:36" pos:end="13:37">os</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:42">buf</name></name> <operator pos:start="13:44" pos:end="13:44">+</operator> <name pos:start="13:46" pos:end="13:55"><name pos:start="13:46" pos:end="13:47">os</name><operator pos:start="13:48" pos:end="13:49">-&gt;</operator><name pos:start="13:50" pos:end="13:55">pstart</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:35"><if pos:start="19:5" pos:end="21:35">if <condition pos:start="19:8" pos:end="19:19">(<expr pos:start="19:9" pos:end="19:18"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:18"><name pos:start="19:10" pos:end="19:11">os</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:18">psize</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:35"><block_content pos:start="21:9" pos:end="21:35">

        <return pos:start="21:9" pos:end="21:35">return <expr pos:start="21:16" pos:end="21:34"><name pos:start="21:16" pos:end="21:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:45">(<expr pos:start="23:9" pos:end="23:44"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:10">os</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:19">granule</name></name> <operator pos:start="23:21" pos:end="23:21">&gt;</operator> <name pos:start="23:23" pos:end="23:31">INT64_MAX</name> <operator pos:start="23:33" pos:end="23:33">-</operator> <name pos:start="23:35" pos:end="23:44">UINT32_MAX</name></expr>)</condition> <block pos:start="23:47" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:35">

        <expr_stmt pos:start="25:9" pos:end="25:92"><expr pos:start="25:9" pos:end="25:91"><call pos:start="25:9" pos:end="25:91"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:91">(<argument pos:start="25:16" pos:end="25:18"><expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">avf</name></expr></argument>, <argument pos:start="25:21" pos:end="25:32"><expr pos:start="25:21" pos:end="25:32"><name pos:start="25:21" pos:end="25:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:35" pos:end="25:77"><expr pos:start="25:35" pos:end="25:77"><literal type="string" pos:start="25:35" pos:end="25:66">"Unsupported huge granule pos %"</literal><name pos:start="25:67" pos:end="25:72">PRId64</name> <literal type="string" pos:start="25:74" pos:end="25:77">"\n"</literal></expr></argument>, <argument pos:start="25:80" pos:end="25:90"><expr pos:start="25:80" pos:end="25:90"><name pos:start="25:80" pos:end="25:90"><name pos:start="25:80" pos:end="25:81">os</name><operator pos:start="25:82" pos:end="25:83">-&gt;</operator><name pos:start="25:84" pos:end="25:90">granule</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:35">return <expr pos:start="27:16" pos:end="27:34"><name pos:start="27:16" pos:end="27:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="85:5"><if pos:start="33:5" pos:end="85:5">if <condition pos:start="33:8" pos:end="33:87">(<expr pos:start="33:9" pos:end="33:86"><operator pos:start="33:9" pos:end="33:9">(</operator><operator pos:start="33:10" pos:end="33:10">!</operator><name pos:start="33:11" pos:end="33:21"><name pos:start="33:11" pos:end="33:12">os</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:21">lastpts</name></name> <operator pos:start="33:23" pos:end="33:24">||</operator> <name pos:start="33:26" pos:end="33:36"><name pos:start="33:26" pos:end="33:27">os</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:36">lastpts</name></name> <operator pos:start="33:38" pos:end="33:39">==</operator> <name pos:start="33:41" pos:end="33:54">AV_NOPTS_VALUE</name><operator pos:start="33:55" pos:end="33:55">)</operator> <operator pos:start="33:57" pos:end="33:58">&amp;&amp;</operator> <operator pos:start="33:60" pos:end="33:60">!</operator><operator pos:start="33:61" pos:end="33:61">(</operator><name pos:start="33:62" pos:end="33:70"><name pos:start="33:62" pos:end="33:63">os</name><operator pos:start="33:64" pos:end="33:65">-&gt;</operator><name pos:start="33:66" pos:end="33:70">flags</name></name> <operator pos:start="33:72" pos:end="33:72">&amp;</operator> <name pos:start="33:74" pos:end="33:85">OGG_FLAG_EOS</name><operator pos:start="33:86" pos:end="33:86">)</operator></expr>)</condition> <block pos:start="33:89" pos:end="85:5">{<block_content pos:start="35:9" pos:end="83:61">

        <decl_stmt pos:start="35:9" pos:end="35:19"><decl pos:start="35:9" pos:end="35:15"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:15">seg</name></decl>, <decl pos:start="35:18" pos:end="35:18"><type ref="prev" pos:start="35:9" pos:end="35:11"/><name pos:start="35:18" pos:end="35:18">d</name></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:21"><decl pos:start="37:9" pos:end="37:20"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:20">duration</name></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:50"><decl pos:start="39:9" pos:end="39:49"><type pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:15">uint8_t</name> <modifier pos:start="39:17" pos:end="39:17">*</modifier></type><name pos:start="39:18" pos:end="39:25">last_pkt</name>  <init pos:start="39:28" pos:end="39:49">= <expr pos:start="39:30" pos:end="39:49"><name pos:start="39:30" pos:end="39:36"><name pos:start="39:30" pos:end="39:31">os</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:36">buf</name></name> <operator pos:start="39:38" pos:end="39:38">+</operator> <name pos:start="39:40" pos:end="39:49"><name pos:start="39:40" pos:end="39:41">os</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:49">pstart</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:38"><decl pos:start="41:9" pos:end="41:37"><type pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:15">uint8_t</name> <modifier pos:start="41:17" pos:end="41:17">*</modifier></type><name pos:start="41:18" pos:end="41:25">next_pkt</name>  <init pos:start="41:28" pos:end="41:37">= <expr pos:start="41:30" pos:end="41:37"><name pos:start="41:30" pos:end="41:37">last_pkt</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:21"><expr pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:16">duration</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:23"><expr pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:11">seg</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <name pos:start="47:15" pos:end="47:22"><name pos:start="47:15" pos:end="47:16">os</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:22">segp</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:47"><expr pos:start="49:9" pos:end="49:46"><name pos:start="49:9" pos:end="49:9">d</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <call pos:start="49:13" pos:end="49:46"><name pos:start="49:13" pos:end="49:25">opus_duration</name><argument_list pos:start="49:26" pos:end="49:46">(<argument pos:start="49:27" pos:end="49:34"><expr pos:start="49:27" pos:end="49:34"><name pos:start="49:27" pos:end="49:34">last_pkt</name></expr></argument>, <argument pos:start="49:37" pos:end="49:45"><expr pos:start="49:37" pos:end="49:45"><name pos:start="49:37" pos:end="49:45"><name pos:start="49:37" pos:end="49:38">os</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:45">psize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="57:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:18">(<expr pos:start="51:13" pos:end="51:17"><name pos:start="51:13" pos:end="51:13">d</name> <operator pos:start="51:15" pos:end="51:15">&lt;</operator> <literal type="number" pos:start="51:17" pos:end="51:17">0</literal></expr>)</condition> <block pos:start="51:20" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:21">

            <expr_stmt pos:start="53:13" pos:end="53:46"><expr pos:start="53:13" pos:end="53:45"><name pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:14">os</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:22">pflags</name></name> <operator pos:start="53:24" pos:end="53:25">|=</operator> <name pos:start="53:27" pos:end="53:45">AV_PKT_FLAG_CORRUPT</name></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:21">return <expr pos:start="55:20" pos:end="55:20"><literal type="number" pos:start="55:20" pos:end="55:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:22"><expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:16">duration</name> <operator pos:start="59:18" pos:end="59:19">+=</operator> <name pos:start="59:21" pos:end="59:21">d</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:52"><expr pos:start="61:9" pos:end="61:51"><name pos:start="61:9" pos:end="61:16">last_pkt</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <name pos:start="61:20" pos:end="61:27">next_pkt</name> <operator pos:start="61:29" pos:end="61:29">=</operator>  <name pos:start="61:32" pos:end="61:39">next_pkt</name> <operator pos:start="61:41" pos:end="61:41">+</operator> <name pos:start="61:43" pos:end="61:51"><name pos:start="61:43" pos:end="61:44">os</name><operator pos:start="61:45" pos:end="61:46">-&gt;</operator><name pos:start="61:47" pos:end="61:51">psize</name></name></expr>;</expr_stmt>

        <for pos:start="63:9" pos:end="79:9">for <control pos:start="63:13" pos:end="63:38">(<init pos:start="63:14" pos:end="63:14">;</init> <condition pos:start="63:16" pos:end="63:31"><expr pos:start="63:16" pos:end="63:30"><name pos:start="63:16" pos:end="63:18">seg</name> <operator pos:start="63:20" pos:end="63:20">&lt;</operator> <name pos:start="63:22" pos:end="63:30"><name pos:start="63:22" pos:end="63:23">os</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:30">nsegs</name></name></expr>;</condition> <incr pos:start="63:33" pos:end="63:37"><expr pos:start="63:33" pos:end="63:37"><name pos:start="63:33" pos:end="63:35">seg</name><operator pos:start="63:36" pos:end="63:37">++</operator></expr></incr>)</control> <block pos:start="63:40" pos:end="79:9">{<block_content pos:start="65:13" pos:end="77:13">

            <expr_stmt pos:start="65:13" pos:end="65:42"><expr pos:start="65:13" pos:end="65:41"><name pos:start="65:13" pos:end="65:20">next_pkt</name> <operator pos:start="65:22" pos:end="65:23">+=</operator> <name pos:start="65:25" pos:end="65:41"><name pos:start="65:25" pos:end="65:26">os</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:36">segments</name><index pos:start="65:37" pos:end="65:41">[<expr pos:start="65:38" pos:end="65:40"><name pos:start="65:38" pos:end="65:40">seg</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="67:13" pos:end="77:13"><if pos:start="67:13" pos:end="77:13">if <condition pos:start="67:16" pos:end="67:64">(<expr pos:start="67:17" pos:end="67:63"><name pos:start="67:17" pos:end="67:33"><name pos:start="67:17" pos:end="67:18">os</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:28">segments</name><index pos:start="67:29" pos:end="67:33">[<expr pos:start="67:30" pos:end="67:32"><name pos:start="67:30" pos:end="67:32">seg</name></expr>]</index></name> <operator pos:start="67:35" pos:end="67:35">&lt;</operator> <literal type="number" pos:start="67:37" pos:end="67:39">255</literal> <operator pos:start="67:41" pos:end="67:42">&amp;&amp;</operator> <name pos:start="67:44" pos:end="67:51">next_pkt</name> <operator pos:start="67:53" pos:end="67:54">!=</operator> <name pos:start="67:56" pos:end="67:63">last_pkt</name></expr>)</condition> <block pos:start="67:66" pos:end="77:13">{<block_content pos:start="69:17" pos:end="75:36">

                <decl_stmt pos:start="69:17" pos:end="69:69"><decl pos:start="69:17" pos:end="69:68"><type pos:start="69:17" pos:end="69:19"><name pos:start="69:17" pos:end="69:19">int</name></type> <name pos:start="69:21" pos:end="69:21">d</name> <init pos:start="69:23" pos:end="69:68">= <expr pos:start="69:25" pos:end="69:68"><call pos:start="69:25" pos:end="69:68"><name pos:start="69:25" pos:end="69:37">opus_duration</name><argument_list pos:start="69:38" pos:end="69:68">(<argument pos:start="69:39" pos:end="69:46"><expr pos:start="69:39" pos:end="69:46"><name pos:start="69:39" pos:end="69:46">last_pkt</name></expr></argument>, <argument pos:start="69:49" pos:end="69:67"><expr pos:start="69:49" pos:end="69:67"><name pos:start="69:49" pos:end="69:56">next_pkt</name> <operator pos:start="69:58" pos:end="69:58">-</operator> <name pos:start="69:60" pos:end="69:67">last_pkt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="71:17" pos:end="73:34"><if pos:start="71:17" pos:end="73:34">if <condition pos:start="71:20" pos:end="71:26">(<expr pos:start="71:21" pos:end="71:25"><name pos:start="71:21" pos:end="71:21">d</name> <operator pos:start="71:23" pos:end="71:23">&gt;</operator> <literal type="number" pos:start="71:25" pos:end="71:25">0</literal></expr>)</condition><block type="pseudo" pos:start="73:21" pos:end="73:34"><block_content pos:start="73:21" pos:end="73:34">

                    <expr_stmt pos:start="73:21" pos:end="73:34"><expr pos:start="73:21" pos:end="73:33"><name pos:start="73:21" pos:end="73:28">duration</name> <operator pos:start="73:30" pos:end="73:31">+=</operator> <name pos:start="73:33" pos:end="73:33">d</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:36"><expr pos:start="75:17" pos:end="75:35"><name pos:start="75:17" pos:end="75:24">last_pkt</name> <operator pos:start="75:26" pos:end="75:26">=</operator> <name pos:start="75:28" pos:end="75:35">next_pkt</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="81:9" pos:end="83:61"><expr pos:start="81:9" pos:end="83:60"><name pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:10">os</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:19">lastpts</name></name>                 <operator pos:start="81:37" pos:end="81:37">=</operator>

        <name pos:start="83:9" pos:end="83:19"><name pos:start="83:9" pos:end="83:10">os</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:19">lastdts</name></name>                 <operator pos:start="83:37" pos:end="83:37">=</operator> <name pos:start="83:39" pos:end="83:49"><name pos:start="83:39" pos:end="83:40">os</name><operator pos:start="83:41" pos:end="83:42">-&gt;</operator><name pos:start="83:43" pos:end="83:49">granule</name></name> <operator pos:start="83:51" pos:end="83:51">-</operator> <name pos:start="83:53" pos:end="83:60">duration</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="91:19"><if pos:start="89:5" pos:end="91:19">if <condition pos:start="89:8" pos:end="89:53">(<expr pos:start="89:9" pos:end="89:52"><operator pos:start="89:9" pos:end="89:9">(</operator><name pos:start="89:10" pos:end="89:12">ret</name> <operator pos:start="89:14" pos:end="89:14">=</operator> <call pos:start="89:16" pos:end="89:47"><name pos:start="89:16" pos:end="89:28">opus_duration</name><argument_list pos:start="89:29" pos:end="89:47">(<argument pos:start="89:30" pos:end="89:35"><expr pos:start="89:30" pos:end="89:35"><name pos:start="89:30" pos:end="89:35">packet</name></expr></argument>, <argument pos:start="89:38" pos:end="89:46"><expr pos:start="89:38" pos:end="89:46"><name pos:start="89:38" pos:end="89:46"><name pos:start="89:38" pos:end="89:39">os</name><operator pos:start="89:40" pos:end="89:41">-&gt;</operator><name pos:start="89:42" pos:end="89:46">psize</name></name></expr></argument>)</argument_list></call><operator pos:start="89:48" pos:end="89:48">)</operator> <operator pos:start="89:50" pos:end="89:50">&lt;</operator> <literal type="number" pos:start="89:52" pos:end="89:52">0</literal></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:19"><block_content pos:start="91:9" pos:end="91:19">

        <return pos:start="91:9" pos:end="91:19">return <expr pos:start="91:16" pos:end="91:18"><name pos:start="91:16" pos:end="91:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:24"><expr pos:start="95:5" pos:end="95:23"><name pos:start="95:5" pos:end="95:17"><name pos:start="95:5" pos:end="95:6">os</name><operator pos:start="95:7" pos:end="95:8">-&gt;</operator><name pos:start="95:9" pos:end="95:17">pduration</name></name> <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:23">ret</name></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="105:5"><if pos:start="97:5" pos:end="105:5">if <condition pos:start="97:8" pos:end="97:38">(<expr pos:start="97:9" pos:end="97:37"><name pos:start="97:9" pos:end="97:19"><name pos:start="97:9" pos:end="97:10">os</name><operator pos:start="97:11" pos:end="97:12">-&gt;</operator><name pos:start="97:13" pos:end="97:19">lastpts</name></name> <operator pos:start="97:21" pos:end="97:22">!=</operator> <name pos:start="97:24" pos:end="97:37">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="97:40" pos:end="105:5">{<block_content pos:start="99:9" pos:end="103:68">

        <if_stmt pos:start="99:9" pos:end="101:41"><if pos:start="99:9" pos:end="101:41">if <condition pos:start="99:12" pos:end="99:45">(<expr pos:start="99:13" pos:end="99:44"><name pos:start="99:13" pos:end="99:26"><name pos:start="99:13" pos:end="99:14">st</name><operator pos:start="99:15" pos:end="99:16">-&gt;</operator><name pos:start="99:17" pos:end="99:26">start_time</name></name> <operator pos:start="99:28" pos:end="99:29">==</operator> <name pos:start="99:31" pos:end="99:44">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:41"><block_content pos:start="101:13" pos:end="101:41">

            <expr_stmt pos:start="101:13" pos:end="101:41"><expr pos:start="101:13" pos:end="101:40"><name pos:start="101:13" pos:end="101:26"><name pos:start="101:13" pos:end="101:14">st</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:26">start_time</name></name> <operator pos:start="101:28" pos:end="101:28">=</operator> <name pos:start="101:30" pos:end="101:40"><name pos:start="101:30" pos:end="101:31">os</name><operator pos:start="101:32" pos:end="101:33">-&gt;</operator><name pos:start="101:34" pos:end="101:40">lastpts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:68"><expr pos:start="103:9" pos:end="103:67"><name pos:start="103:9" pos:end="103:21"><name pos:start="103:9" pos:end="103:12">priv</name><operator pos:start="103:13" pos:end="103:14">-&gt;</operator><name pos:start="103:15" pos:end="103:21">cur_dts</name></name> <operator pos:start="103:23" pos:end="103:23">=</operator> <name pos:start="103:25" pos:end="103:35"><name pos:start="103:25" pos:end="103:26">os</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:35">lastdts</name></name> <operator pos:start="103:37" pos:end="103:37">=</operator> <name pos:start="103:39" pos:end="103:49"><name pos:start="103:39" pos:end="103:40">os</name><operator pos:start="103:41" pos:end="103:42">-&gt;</operator><name pos:start="103:43" pos:end="103:49">lastpts</name></name> <operator pos:start="103:51" pos:end="103:52">-=</operator> <name pos:start="103:54" pos:end="103:67"><name pos:start="103:54" pos:end="103:57">priv</name><operator pos:start="103:58" pos:end="103:59">-&gt;</operator><name pos:start="103:60" pos:end="103:67">pre_skip</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:35"><expr pos:start="109:5" pos:end="109:34"><name pos:start="109:5" pos:end="109:17"><name pos:start="109:5" pos:end="109:8">priv</name><operator pos:start="109:9" pos:end="109:10">-&gt;</operator><name pos:start="109:11" pos:end="109:17">cur_dts</name></name> <operator pos:start="109:19" pos:end="109:20">+=</operator> <name pos:start="109:22" pos:end="109:34"><name pos:start="109:22" pos:end="109:23">os</name><operator pos:start="109:24" pos:end="109:25">-&gt;</operator><name pos:start="109:26" pos:end="109:34">pduration</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="131:5"><if pos:start="111:5" pos:end="131:5">if <condition pos:start="111:8" pos:end="111:35">(<expr pos:start="111:9" pos:end="111:34"><operator pos:start="111:9" pos:end="111:9">(</operator><name pos:start="111:10" pos:end="111:18"><name pos:start="111:10" pos:end="111:11">os</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:18">flags</name></name> <operator pos:start="111:20" pos:end="111:20">&amp;</operator> <name pos:start="111:22" pos:end="111:33">OGG_FLAG_EOS</name><operator pos:start="111:34" pos:end="111:34">)</operator></expr>)</condition> <block pos:start="111:37" pos:end="131:5">{<block_content pos:start="113:9" pos:end="129:9">

        <decl_stmt pos:start="113:9" pos:end="113:68"><decl pos:start="113:9" pos:end="113:67"><type pos:start="113:9" pos:end="113:15"><name pos:start="113:9" pos:end="113:15">int64_t</name></type> <name pos:start="113:17" pos:end="113:20">skip</name> <init pos:start="113:22" pos:end="113:67">= <expr pos:start="113:24" pos:end="113:67"><name pos:start="113:24" pos:end="113:36"><name pos:start="113:24" pos:end="113:27">priv</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:36">cur_dts</name></name> <operator pos:start="113:38" pos:end="113:38">-</operator> <name pos:start="113:40" pos:end="113:50"><name pos:start="113:40" pos:end="113:41">os</name><operator pos:start="113:42" pos:end="113:43">-&gt;</operator><name pos:start="113:44" pos:end="113:50">granule</name></name> <operator pos:start="113:52" pos:end="113:52">+</operator> <name pos:start="113:54" pos:end="113:67"><name pos:start="113:54" pos:end="113:57">priv</name><operator pos:start="113:58" pos:end="113:59">-&gt;</operator><name pos:start="113:60" pos:end="113:67">pre_skip</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:42"><expr pos:start="115:9" pos:end="115:41"><name pos:start="115:9" pos:end="115:12">skip</name> <operator pos:start="115:14" pos:end="115:14">=</operator> <call pos:start="115:16" pos:end="115:41"><name pos:start="115:16" pos:end="115:20">FFMIN</name><argument_list pos:start="115:21" pos:end="115:41">(<argument pos:start="115:22" pos:end="115:25"><expr pos:start="115:22" pos:end="115:25"><name pos:start="115:22" pos:end="115:25">skip</name></expr></argument>, <argument pos:start="115:28" pos:end="115:40"><expr pos:start="115:28" pos:end="115:40"><name pos:start="115:28" pos:end="115:40"><name pos:start="115:28" pos:end="115:29">os</name><operator pos:start="115:30" pos:end="115:31">-&gt;</operator><name pos:start="115:32" pos:end="115:40">pduration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="129:9"><if pos:start="117:9" pos:end="129:9">if <condition pos:start="117:12" pos:end="117:21">(<expr pos:start="117:13" pos:end="117:20"><name pos:start="117:13" pos:end="117:16">skip</name> <operator pos:start="117:18" pos:end="117:18">&gt;</operator> <literal type="number" pos:start="117:20" pos:end="117:20">0</literal></expr>)</condition> <block pos:start="117:23" pos:end="129:9">{<block_content pos:start="119:13" pos:end="127:34">

            <expr_stmt pos:start="119:13" pos:end="119:76"><expr pos:start="119:13" pos:end="119:75"><name pos:start="119:13" pos:end="119:25"><name pos:start="119:13" pos:end="119:14">os</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:25">pduration</name></name> <operator pos:start="119:27" pos:end="119:27">=</operator> <ternary pos:start="119:29" pos:end="119:75"><condition pos:start="119:29" pos:end="119:50"><expr pos:start="119:29" pos:end="119:48"><name pos:start="119:29" pos:end="119:32">skip</name> <operator pos:start="119:34" pos:end="119:34">&lt;</operator> <name pos:start="119:36" pos:end="119:48"><name pos:start="119:36" pos:end="119:37">os</name><operator pos:start="119:38" pos:end="119:39">-&gt;</operator><name pos:start="119:40" pos:end="119:48">pduration</name></name></expr> ?</condition><then pos:start="119:52" pos:end="119:71"> <expr pos:start="119:52" pos:end="119:71"><name pos:start="119:52" pos:end="119:64"><name pos:start="119:52" pos:end="119:53">os</name><operator pos:start="119:54" pos:end="119:55">-&gt;</operator><name pos:start="119:56" pos:end="119:64">pduration</name></name> <operator pos:start="119:66" pos:end="119:66">-</operator> <name pos:start="119:68" pos:end="119:71">skip</name></expr> </then><else pos:start="119:73" pos:end="119:75">: <expr pos:start="119:75" pos:end="119:75"><literal type="number" pos:start="119:75" pos:end="119:75">1</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:36"><expr pos:start="121:13" pos:end="121:35"><name pos:start="121:13" pos:end="121:28"><name pos:start="121:13" pos:end="121:14">os</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:28">end_trimming</name></name> <operator pos:start="121:30" pos:end="121:30">=</operator> <name pos:start="121:32" pos:end="121:35">skip</name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="127:34"><expr pos:start="123:13" pos:end="127:33"><call pos:start="123:13" pos:end="127:33"><name pos:start="123:13" pos:end="123:18">av_log</name><argument_list pos:start="123:19" pos:end="127:33">(<argument pos:start="123:20" pos:end="123:22"><expr pos:start="123:20" pos:end="123:22"><name pos:start="123:20" pos:end="123:22">avf</name></expr></argument>, <argument pos:start="123:25" pos:end="123:36"><expr pos:start="123:25" pos:end="123:36"><name pos:start="123:25" pos:end="123:36">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="125:20" pos:end="125:75"><expr pos:start="125:20" pos:end="125:75"><literal type="string" pos:start="125:20" pos:end="125:75">"Last packet was truncated to %d due to end trimming.\n"</literal></expr></argument>,

                   <argument pos:start="127:20" pos:end="127:32"><expr pos:start="127:20" pos:end="127:32"><name pos:start="127:20" pos:end="127:32"><name pos:start="127:20" pos:end="127:21">os</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:32">pduration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="135:5" pos:end="135:13">return <expr pos:start="135:12" pos:end="135:12"><literal type="number" pos:start="135:12" pos:end="135:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
