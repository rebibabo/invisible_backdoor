<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10859.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">encode_frame</name><parameter_list pos:start="1:24" pos:end="5:35">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:36"><decl pos:start="3:25" pos:end="3:36"><type pos:start="3:25" pos:end="3:36"><name pos:start="3:25" pos:end="3:31">uint8_t</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:36">buf</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:50"><decl pos:start="3:39" pos:end="3:50"><type pos:start="3:39" pos:end="3:50"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:50">buf_size</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:34"><decl pos:start="5:25" pos:end="5:34"><type pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:28">void</name> <modifier pos:start="5:30" pos:end="5:30">*</modifier></type><name pos:start="5:31" pos:end="5:34">data</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="91:1">{<block_content pos:start="9:5" pos:end="89:33">

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">tileno</name></decl>, <decl pos:start="9:17" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:19">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">J2kEncoderContext</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:24">s</name> <init pos:start="11:26" pos:end="11:43">= <expr pos:start="11:28" pos:end="11:43"><name pos:start="11:28" pos:end="11:43"><name pos:start="11:28" pos:end="11:32">avctx</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:43">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <comment type="line" pos:start="15:5" pos:end="15:12">// init:</comment>

    <expr_stmt pos:start="17:5" pos:end="17:32"><expr pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:10">buf</name></name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:25"><name pos:start="17:14" pos:end="17:14">s</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:25">buf_start</name></name> <operator pos:start="17:27" pos:end="17:27">=</operator> <name pos:start="17:29" pos:end="17:31">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:14">buf_end</name></name> <operator pos:start="19:16" pos:end="19:16">=</operator> <name pos:start="19:18" pos:end="19:20">buf</name> <operator pos:start="19:22" pos:end="19:22">+</operator> <name pos:start="19:24" pos:end="19:31">buf_size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:14">picture</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:21">data</name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:51"><expr pos:start="27:5" pos:end="27:50"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:13">lambda</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:35"><name pos:start="27:17" pos:end="27:17">s</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:26">picture</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:35">quality</name></name> <operator pos:start="27:37" pos:end="27:37">*</operator> <name pos:start="27:39" pos:end="27:50">LAMBDA_SCALE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:18"><expr pos:start="31:5" pos:end="31:17"><call pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:14">copy_frame</name><argument_list pos:start="31:15" pos:end="31:17">(<argument pos:start="31:16" pos:end="31:16"><expr pos:start="31:16" pos:end="31:16"><name pos:start="31:16" pos:end="31:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:14"><expr pos:start="33:5" pos:end="33:13"><call pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:10">reinit</name><argument_list pos:start="33:11" pos:end="33:13">(<argument pos:start="33:12" pos:end="33:12"><expr pos:start="33:12" pos:end="33:12"><name pos:start="33:12" pos:end="33:12">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="39:18"><if pos:start="37:5" pos:end="39:18">if <condition pos:start="37:8" pos:end="37:32">(<expr pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:18">buf_end</name></name> <operator pos:start="37:20" pos:end="37:20">-</operator> <name pos:start="37:22" pos:end="37:27"><name pos:start="37:22" pos:end="37:22">s</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:27">buf</name></name> <operator pos:start="37:29" pos:end="37:29">&lt;</operator> <literal type="number" pos:start="37:31" pos:end="37:31">2</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:41"><call pos:start="41:5" pos:end="41:41"><name pos:start="41:5" pos:end="41:23">bytestream_put_be16</name><argument_list pos:start="41:24" pos:end="41:41">(<argument pos:start="41:25" pos:end="41:31"><expr pos:start="41:25" pos:end="41:31"><operator pos:start="41:25" pos:end="41:25">&amp;</operator><name pos:start="41:26" pos:end="41:31"><name pos:start="41:26" pos:end="41:26">s</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:31">buf</name></name></expr></argument>, <argument pos:start="41:34" pos:end="41:40"><expr pos:start="41:34" pos:end="41:40"><name pos:start="41:34" pos:end="41:40">J2K_SOC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:19"><if pos:start="43:5" pos:end="45:19">if <condition pos:start="43:8" pos:end="43:25">(<expr pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:24"><name pos:start="43:15" pos:end="43:21">put_siz</name><argument_list pos:start="43:22" pos:end="43:24">(<argument pos:start="43:23" pos:end="43:23"><expr pos:start="43:23" pos:end="43:23"><name pos:start="43:23" pos:end="43:23">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:19"><block_content pos:start="45:9" pos:end="45:19">

        <return pos:start="45:9" pos:end="45:19">return <expr pos:start="45:16" pos:end="45:18"><name pos:start="45:16" pos:end="45:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="49:19"><if pos:start="47:5" pos:end="49:19">if <condition pos:start="47:8" pos:end="47:25">(<expr pos:start="47:9" pos:end="47:24"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:24"><name pos:start="47:15" pos:end="47:21">put_cod</name><argument_list pos:start="47:22" pos:end="47:24">(<argument pos:start="47:23" pos:end="47:23"><expr pos:start="47:23" pos:end="47:23"><name pos:start="47:23" pos:end="47:23">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:19"><block_content pos:start="49:9" pos:end="49:19">

        <return pos:start="49:9" pos:end="49:19">return <expr pos:start="49:16" pos:end="49:18"><name pos:start="49:16" pos:end="49:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="51:5" pos:end="53:19"><if pos:start="51:5" pos:end="53:19">if <condition pos:start="51:8" pos:end="51:28">(<expr pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:27"><name pos:start="51:15" pos:end="51:21">put_qcd</name><argument_list pos:start="51:22" pos:end="51:27">(<argument pos:start="51:23" pos:end="51:23"><expr pos:start="51:23" pos:end="51:23"><name pos:start="51:23" pos:end="51:23">s</name></expr></argument>, <argument pos:start="51:26" pos:end="51:26"><expr pos:start="51:26" pos:end="51:26"><literal type="number" pos:start="51:26" pos:end="51:26">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:19"><block_content pos:start="53:9" pos:end="53:19">

        <return pos:start="53:9" pos:end="53:19">return <expr pos:start="53:16" pos:end="53:18"><name pos:start="53:16" pos:end="53:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="57:5" pos:end="77:5">for <control pos:start="57:9" pos:end="57:68">(<init pos:start="57:10" pos:end="57:20"><expr pos:start="57:10" pos:end="57:19"><name pos:start="57:10" pos:end="57:15">tileno</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>;</init> <condition pos:start="57:22" pos:end="57:58"><expr pos:start="57:22" pos:end="57:57"><name pos:start="57:22" pos:end="57:27">tileno</name> <operator pos:start="57:29" pos:end="57:29">&lt;</operator> <name pos:start="57:31" pos:end="57:42"><name pos:start="57:31" pos:end="57:31">s</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:42">numXtiles</name></name> <operator pos:start="57:44" pos:end="57:44">*</operator> <name pos:start="57:46" pos:end="57:57"><name pos:start="57:46" pos:end="57:46">s</name><operator pos:start="57:47" pos:end="57:48">-&gt;</operator><name pos:start="57:49" pos:end="57:57">numYtiles</name></name></expr>;</condition> <incr pos:start="57:60" pos:end="57:67"><expr pos:start="57:60" pos:end="57:67"><name pos:start="57:60" pos:end="57:65">tileno</name><operator pos:start="57:66" pos:end="57:67">++</operator></expr></incr>)</control><block pos:start="57:69" pos:end="77:5">{<block_content pos:start="59:9" pos:end="75:60">

        <decl_stmt pos:start="59:9" pos:end="59:25"><decl pos:start="59:9" pos:end="59:24"><type pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:15">uint8_t</name> <modifier pos:start="59:17" pos:end="59:17">*</modifier></type><name pos:start="59:18" pos:end="59:24">psotptr</name></decl>;</decl_stmt>

        <if_stmt pos:start="61:9" pos:end="63:27"><if pos:start="61:9" pos:end="63:27">if <condition pos:start="61:12" pos:end="61:47">(<expr pos:start="61:13" pos:end="61:46"><operator pos:start="61:13" pos:end="61:13">(</operator><name pos:start="61:14" pos:end="61:20">psotptr</name> <operator pos:start="61:22" pos:end="61:22">=</operator> <call pos:start="61:24" pos:end="61:41"><name pos:start="61:24" pos:end="61:30">put_sot</name><argument_list pos:start="61:31" pos:end="61:41">(<argument pos:start="61:32" pos:end="61:32"><expr pos:start="61:32" pos:end="61:32"><name pos:start="61:32" pos:end="61:32">s</name></expr></argument>, <argument pos:start="61:35" pos:end="61:40"><expr pos:start="61:35" pos:end="61:40"><name pos:start="61:35" pos:end="61:40">tileno</name></expr></argument>)</argument_list></call><operator pos:start="61:42" pos:end="61:42">)</operator> <operator pos:start="61:44" pos:end="61:44">&lt;</operator> <literal type="number" pos:start="61:46" pos:end="61:46">0</literal></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:27"><block_content pos:start="63:13" pos:end="63:27">

            <return pos:start="63:13" pos:end="63:27">return <expr pos:start="63:20" pos:end="63:26"><name pos:start="63:20" pos:end="63:26">psotptr</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="67:22"><if pos:start="65:9" pos:end="67:22">if <condition pos:start="65:12" pos:end="65:36">(<expr pos:start="65:13" pos:end="65:35"><name pos:start="65:13" pos:end="65:22"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:22">buf_end</name></name> <operator pos:start="65:24" pos:end="65:24">-</operator> <name pos:start="65:26" pos:end="65:31"><name pos:start="65:26" pos:end="65:26">s</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:31">buf</name></name> <operator pos:start="65:33" pos:end="65:33">&lt;</operator> <literal type="number" pos:start="65:35" pos:end="65:35">2</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:22"><block_content pos:start="67:13" pos:end="67:22">

            <return pos:start="67:13" pos:end="67:22">return <expr pos:start="67:20" pos:end="67:21"><operator pos:start="67:20" pos:end="67:20">-</operator><literal type="number" pos:start="67:21" pos:end="67:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:46"><expr pos:start="69:9" pos:end="69:45"><call pos:start="69:9" pos:end="69:45"><name pos:start="69:9" pos:end="69:27">bytestream_put_be16</name><argument_list pos:start="69:28" pos:end="69:45">(<argument pos:start="69:29" pos:end="69:35"><expr pos:start="69:29" pos:end="69:35"><operator pos:start="69:29" pos:end="69:29">&amp;</operator><name pos:start="69:30" pos:end="69:35"><name pos:start="69:30" pos:end="69:30">s</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:35">buf</name></name></expr></argument>, <argument pos:start="69:38" pos:end="69:44"><expr pos:start="69:38" pos:end="69:44"><name pos:start="69:38" pos:end="69:44">J2K_SOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="73:23"><if pos:start="71:9" pos:end="73:23">if <condition pos:start="71:12" pos:end="71:59">(<expr pos:start="71:13" pos:end="71:58"><name pos:start="71:13" pos:end="71:15">ret</name> <operator pos:start="71:17" pos:end="71:17">=</operator> <call pos:start="71:19" pos:end="71:58"><name pos:start="71:19" pos:end="71:29">encode_tile</name><argument_list pos:start="71:30" pos:end="71:58">(<argument pos:start="71:31" pos:end="71:31"><expr pos:start="71:31" pos:end="71:31"><name pos:start="71:31" pos:end="71:31">s</name></expr></argument>, <argument pos:start="71:34" pos:end="71:49"><expr pos:start="71:34" pos:end="71:49"><name pos:start="71:34" pos:end="71:40"><name pos:start="71:34" pos:end="71:34">s</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:40">tile</name></name> <operator pos:start="71:42" pos:end="71:42">+</operator> <name pos:start="71:44" pos:end="71:49">tileno</name></expr></argument>, <argument pos:start="71:52" pos:end="71:57"><expr pos:start="71:52" pos:end="71:57"><name pos:start="71:52" pos:end="71:57">tileno</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:23"><block_content pos:start="73:13" pos:end="73:23">

            <return pos:start="73:13" pos:end="73:23">return <expr pos:start="73:20" pos:end="73:22"><name pos:start="73:20" pos:end="73:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:60"><expr pos:start="75:9" pos:end="75:59"><call pos:start="75:9" pos:end="75:59"><name pos:start="75:9" pos:end="75:27">bytestream_put_be32</name><argument_list pos:start="75:28" pos:end="75:59">(<argument pos:start="75:29" pos:end="75:36"><expr pos:start="75:29" pos:end="75:36"><operator pos:start="75:29" pos:end="75:29">&amp;</operator><name pos:start="75:30" pos:end="75:36">psotptr</name></expr></argument>, <argument pos:start="75:39" pos:end="75:58"><expr pos:start="75:39" pos:end="75:58"><name pos:start="75:39" pos:end="75:44"><name pos:start="75:39" pos:end="75:39">s</name><operator pos:start="75:40" pos:end="75:41">-&gt;</operator><name pos:start="75:42" pos:end="75:44">buf</name></name> <operator pos:start="75:46" pos:end="75:46">-</operator> <name pos:start="75:48" pos:end="75:54">psotptr</name> <operator pos:start="75:56" pos:end="75:56">+</operator> <literal type="number" pos:start="75:58" pos:end="75:58">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="79:5" pos:end="81:18"><if pos:start="79:5" pos:end="81:18">if <condition pos:start="79:8" pos:end="79:32">(<expr pos:start="79:9" pos:end="79:31"><name pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:18">buf_end</name></name> <operator pos:start="79:20" pos:end="79:20">-</operator> <name pos:start="79:22" pos:end="79:27"><name pos:start="79:22" pos:end="79:22">s</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:27">buf</name></name> <operator pos:start="79:29" pos:end="79:29">&lt;</operator> <literal type="number" pos:start="79:31" pos:end="79:31">2</literal></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:18"><block_content pos:start="81:9" pos:end="81:18">

        <return pos:start="81:9" pos:end="81:18">return <expr pos:start="81:16" pos:end="81:17"><operator pos:start="81:16" pos:end="81:16">-</operator><literal type="number" pos:start="81:17" pos:end="81:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:42"><expr pos:start="83:5" pos:end="83:41"><call pos:start="83:5" pos:end="83:41"><name pos:start="83:5" pos:end="83:23">bytestream_put_be16</name><argument_list pos:start="83:24" pos:end="83:41">(<argument pos:start="83:25" pos:end="83:31"><expr pos:start="83:25" pos:end="83:31"><operator pos:start="83:25" pos:end="83:25">&amp;</operator><name pos:start="83:26" pos:end="83:31"><name pos:start="83:26" pos:end="83:26">s</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:31">buf</name></name></expr></argument>, <argument pos:start="83:34" pos:end="83:40"><expr pos:start="83:34" pos:end="83:40"><name pos:start="83:34" pos:end="83:40">J2K_EOC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:44"><expr pos:start="87:5" pos:end="87:43"><call pos:start="87:5" pos:end="87:43"><name pos:start="87:5" pos:end="87:10">av_log</name><argument_list pos:start="87:11" pos:end="87:43">(<argument pos:start="87:12" pos:end="87:19"><expr pos:start="87:12" pos:end="87:19"><name pos:start="87:12" pos:end="87:19"><name pos:start="87:12" pos:end="87:12">s</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:19">avctx</name></name></expr></argument>, <argument pos:start="87:22" pos:end="87:33"><expr pos:start="87:22" pos:end="87:33"><name pos:start="87:22" pos:end="87:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="87:36" pos:end="87:42"><expr pos:start="87:36" pos:end="87:42"><literal type="string" pos:start="87:36" pos:end="87:42">"end\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="89:5" pos:end="89:33">return <expr pos:start="89:12" pos:end="89:32"><name pos:start="89:12" pos:end="89:17"><name pos:start="89:12" pos:end="89:12">s</name><operator pos:start="89:13" pos:end="89:14">-&gt;</operator><name pos:start="89:15" pos:end="89:17">buf</name></name> <operator pos:start="89:19" pos:end="89:19">-</operator> <name pos:start="89:21" pos:end="89:32"><name pos:start="89:21" pos:end="89:21">s</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:32">buf_start</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
