<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4377.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">qemu_chr_open_spice</name><parameter_list pos:start="1:24" pos:end="1:63">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:32">QemuOpts</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:38">opts</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:62"><decl pos:start="1:41" pos:end="1:62"><type pos:start="1:41" pos:end="1:62"><name pos:start="1:41" pos:end="1:55">CharDriverState</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier><modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">_chr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">CharDriverState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">chr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">SpiceCharDriver</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:22">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:15"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name><modifier pos:start="9:15" pos:end="9:15">*</modifier></type> <name pos:start="9:17" pos:end="9:20">name</name> <init pos:start="9:22" pos:end="9:49">= <expr pos:start="9:24" pos:end="9:49"><call pos:start="9:24" pos:end="9:49"><name pos:start="9:24" pos:end="9:35">qemu_opt_get</name><argument_list pos:start="9:36" pos:end="9:49">(<argument pos:start="9:37" pos:end="9:40"><expr pos:start="9:37" pos:end="9:40"><name pos:start="9:37" pos:end="9:40">opts</name></expr></argument>, <argument pos:start="9:43" pos:end="9:48"><expr pos:start="9:43" pos:end="9:48"><literal type="string" pos:start="9:43" pos:end="9:48">"name"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:59"><decl pos:start="11:5" pos:end="11:58"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:18">debug</name> <init pos:start="11:20" pos:end="11:58">= <expr pos:start="11:22" pos:end="11:58"><call pos:start="11:22" pos:end="11:58"><name pos:start="11:22" pos:end="11:40">qemu_opt_get_number</name><argument_list pos:start="11:41" pos:end="11:58">(<argument pos:start="11:42" pos:end="11:45"><expr pos:start="11:42" pos:end="11:45"><name pos:start="11:42" pos:end="11:45">opts</name></expr></argument>, <argument pos:start="11:48" pos:end="11:54"><expr pos:start="11:48" pos:end="11:54"><literal type="string" pos:start="11:48" pos:end="11:54">"debug"</literal></expr></argument>, <argument pos:start="11:57" pos:end="11:57"><expr pos:start="11:57" pos:end="11:57"><literal type="number" pos:start="11:57" pos:end="11:57">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:75"><decl pos:start="13:5" pos:end="13:74"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name><modifier pos:start="13:15" pos:end="13:15">*</modifier><modifier pos:start="13:16" pos:end="13:16">*</modifier></type> <name pos:start="13:18" pos:end="13:25">psubtype</name> <init pos:start="13:27" pos:end="13:74">= <expr pos:start="13:29" pos:end="13:74"><call pos:start="13:29" pos:end="13:74"><name pos:start="13:29" pos:end="13:72">spice_server_char_device_recognized_subtypes</name><argument_list pos:start="13:73" pos:end="13:74">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:23">subtype</name> <init pos:start="15:25" pos:end="15:30">= <expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:30">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:21">(<expr pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:12">name</name> <operator pos:start="19:14" pos:end="19:15">==</operator> <name pos:start="19:17" pos:end="19:20">NULL</name></expr>)</condition> <block pos:start="19:23" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:23">

        <expr_stmt pos:start="21:9" pos:end="21:69"><expr pos:start="21:9" pos:end="21:68"><call pos:start="21:9" pos:end="21:68"><name pos:start="21:9" pos:end="21:15">fprintf</name><argument_list pos:start="21:16" pos:end="21:68">(<argument pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:22">stderr</name></expr></argument>, <argument pos:start="21:25" pos:end="21:67"><expr pos:start="21:25" pos:end="21:67"><literal type="string" pos:start="21:25" pos:end="21:67">"spice-qemu-char: missing name parameter\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:33"><expr pos:start="23:9" pos:end="23:32"><call pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:30">print_allowed_subtypes</name><argument_list pos:start="23:31" pos:end="23:32">()</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:23">return <expr pos:start="25:16" pos:end="25:22"><operator pos:start="25:16" pos:end="25:16">-</operator><name pos:start="25:17" pos:end="25:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="29:5" pos:end="39:5">for<control pos:start="29:8" pos:end="29:39">(<init pos:start="29:9" pos:end="29:9">;</init><condition pos:start="29:10" pos:end="29:27"><expr pos:start="29:10" pos:end="29:26"><operator pos:start="29:10" pos:end="29:10">*</operator><name pos:start="29:11" pos:end="29:18">psubtype</name> <operator pos:start="29:20" pos:end="29:21">!=</operator> <name pos:start="29:23" pos:end="29:26">NULL</name></expr>;</condition> <incr pos:start="29:29" pos:end="29:38"><expr pos:start="29:29" pos:end="29:38"><operator pos:start="29:29" pos:end="29:30">++</operator><name pos:start="29:31" pos:end="29:38">psubtype</name></expr></incr>)</control> <block pos:start="29:41" pos:end="39:5">{<block_content pos:start="31:9" pos:end="37:9">

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:41">(<expr pos:start="31:13" pos:end="31:40"><call pos:start="31:13" pos:end="31:35"><name pos:start="31:13" pos:end="31:18">strcmp</name><argument_list pos:start="31:19" pos:end="31:35">(<argument pos:start="31:20" pos:end="31:23"><expr pos:start="31:20" pos:end="31:23"><name pos:start="31:20" pos:end="31:23">name</name></expr></argument>, <argument pos:start="31:26" pos:end="31:34"><expr pos:start="31:26" pos:end="31:34"><operator pos:start="31:26" pos:end="31:26">*</operator><name pos:start="31:27" pos:end="31:34">psubtype</name></expr></argument>)</argument_list></call> <operator pos:start="31:37" pos:end="31:38">==</operator> <literal type="number" pos:start="31:40" pos:end="31:40">0</literal></expr>)</condition> <block pos:start="31:43" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:18">

            <expr_stmt pos:start="33:13" pos:end="33:32"><expr pos:start="33:13" pos:end="33:31"><name pos:start="33:13" pos:end="33:19">subtype</name> <operator pos:start="33:21" pos:end="33:21">=</operator> <operator pos:start="33:23" pos:end="33:23">*</operator><name pos:start="33:24" pos:end="33:31">psubtype</name></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:24">(<expr pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:15">subtype</name> <operator pos:start="41:17" pos:end="41:18">==</operator> <name pos:start="41:20" pos:end="41:23">NULL</name></expr>)</condition> <block pos:start="41:26" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:23">

        <expr_stmt pos:start="43:9" pos:end="43:63"><expr pos:start="43:9" pos:end="43:62"><call pos:start="43:9" pos:end="43:62"><name pos:start="43:9" pos:end="43:15">fprintf</name><argument_list pos:start="43:16" pos:end="43:62">(<argument pos:start="43:17" pos:end="43:22"><expr pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:22">stderr</name></expr></argument>, <argument pos:start="43:25" pos:end="43:61"><expr pos:start="43:25" pos:end="43:61"><literal type="string" pos:start="43:25" pos:end="43:61">"spice-qemu-char: unsupported name\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:33"><expr pos:start="45:9" pos:end="45:32"><call pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:30">print_allowed_subtypes</name><argument_list pos:start="45:31" pos:end="45:32">()</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:23">return <expr pos:start="47:16" pos:end="47:22"><operator pos:start="47:16" pos:end="47:16">-</operator><name pos:start="47:17" pos:end="47:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:45"><expr pos:start="53:5" pos:end="53:44"><name pos:start="53:5" pos:end="53:7">chr</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="53:44"><name pos:start="53:11" pos:end="53:19">g_malloc0</name><argument_list pos:start="53:20" pos:end="53:44">(<argument pos:start="53:21" pos:end="53:43"><expr pos:start="53:21" pos:end="53:43"><sizeof pos:start="53:21" pos:end="53:43">sizeof<argument_list pos:start="53:27" pos:end="53:43">(<argument pos:start="53:28" pos:end="53:42"><expr pos:start="53:28" pos:end="53:42"><name pos:start="53:28" pos:end="53:42">CharDriverState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:43"><expr pos:start="55:5" pos:end="55:42"><name pos:start="55:5" pos:end="55:5">s</name> <operator pos:start="55:7" pos:end="55:7">=</operator> <call pos:start="55:9" pos:end="55:42"><name pos:start="55:9" pos:end="55:17">g_malloc0</name><argument_list pos:start="55:18" pos:end="55:42">(<argument pos:start="55:19" pos:end="55:41"><expr pos:start="55:19" pos:end="55:41"><sizeof pos:start="55:19" pos:end="55:41">sizeof<argument_list pos:start="55:25" pos:end="55:41">(<argument pos:start="55:26" pos:end="55:40"><expr pos:start="55:26" pos:end="55:40"><name pos:start="55:26" pos:end="55:40">SpiceCharDriver</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:17"><expr pos:start="57:5" pos:end="57:16"><name pos:start="57:5" pos:end="57:10"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:10">chr</name></name> <operator pos:start="57:12" pos:end="57:12">=</operator> <name pos:start="57:14" pos:end="57:16">chr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:21"><expr pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:12"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:12">debug</name></name> <operator pos:start="59:14" pos:end="59:14">=</operator> <name pos:start="59:16" pos:end="59:20">debug</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:22"><expr pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:13"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:13">active</name></name> <operator pos:start="61:15" pos:end="61:15">=</operator> <name pos:start="61:17" pos:end="61:21">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:29"><expr pos:start="63:5" pos:end="63:28"><name pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:10">sin</name><operator pos:start="63:11" pos:end="63:11">.</operator><name pos:start="63:12" pos:end="63:18">subtype</name></name> <operator pos:start="63:20" pos:end="63:20">=</operator> <name pos:start="63:22" pos:end="63:28">subtype</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:20"><expr pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:15"><name pos:start="65:5" pos:end="65:7">chr</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:15">opaque</name></name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:19">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:37"><expr pos:start="67:5" pos:end="67:36"><name pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:7">chr</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:18">chr_write</name></name> <operator pos:start="67:20" pos:end="67:20">=</operator> <name pos:start="67:22" pos:end="67:36">spice_chr_write</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:37"><expr pos:start="69:5" pos:end="69:36"><name pos:start="69:5" pos:end="69:18"><name pos:start="69:5" pos:end="69:7">chr</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:18">chr_close</name></name> <operator pos:start="69:20" pos:end="69:20">=</operator> <name pos:start="69:22" pos:end="69:36">spice_chr_close</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:47"><expr pos:start="71:5" pos:end="71:46"><name pos:start="71:5" pos:end="71:23"><name pos:start="71:5" pos:end="71:7">chr</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:23">chr_guest_open</name></name> <operator pos:start="71:25" pos:end="71:25">=</operator> <name pos:start="71:27" pos:end="71:46">spice_chr_guest_open</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="78:0"><expr pos:start="73:5" pos:end="73:48"><name pos:start="73:5" pos:end="73:24"><name pos:start="73:5" pos:end="73:7">chr</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:24">chr_guest_close</name></name> <operator pos:start="73:26" pos:end="73:26">=</operator> <name pos:start="73:28" pos:end="73:48">spice_chr_guest_close</name></expr>;</expr_stmt>



<cpp:if pos:start="77:1" pos:end="77:35">#<cpp:directive pos:start="77:2" pos:end="77:3">if</cpp:directive> <expr pos:start="77:5" pos:end="77:35"><name pos:start="77:5" pos:end="77:24">SPICE_SERVER_VERSION</name> <operator pos:start="77:26" pos:end="77:26">&lt;</operator> <literal type="number" pos:start="77:28" pos:end="77:35">0x000901</literal></expr></cpp:if>

    <comment type="block" pos:start="79:5" pos:end="79:36">/* See comment in vmc_state() */</comment>

    <if_stmt pos:start="81:5" pos:end="88:0"><if pos:start="81:5" pos:end="88:0">if <condition pos:start="81:8" pos:end="81:40">(<expr pos:start="81:9" pos:end="81:39"><call pos:start="81:9" pos:end="81:34"><name pos:start="81:9" pos:end="81:14">strcmp</name><argument_list pos:start="81:15" pos:end="81:34">(<argument pos:start="81:16" pos:end="81:22"><expr pos:start="81:16" pos:end="81:22"><name pos:start="81:16" pos:end="81:22">subtype</name></expr></argument>, <argument pos:start="81:25" pos:end="81:33"><expr pos:start="81:25" pos:end="81:33"><literal type="string" pos:start="81:25" pos:end="81:33">"vdagent"</literal></expr></argument>)</argument_list></call> <operator pos:start="81:36" pos:end="81:37">==</operator> <literal type="number" pos:start="81:39" pos:end="81:39">0</literal></expr>)</condition> <block pos:start="81:42" pos:end="88:0">{<block_content pos:start="83:9" pos:end="83:35">

        <expr_stmt pos:start="83:9" pos:end="83:35"><expr pos:start="83:9" pos:end="83:34"><call pos:start="83:9" pos:end="83:34"><name pos:start="83:9" pos:end="83:29">qemu_chr_generic_open</name><argument_list pos:start="83:30" pos:end="83:34">(<argument pos:start="83:31" pos:end="83:33"><expr pos:start="83:31" pos:end="83:33"><name pos:start="83:31" pos:end="83:33">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="87:1" pos:end="87:6">#<cpp:directive pos:start="87:2" pos:end="87:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="91:5" pos:end="91:16"><expr pos:start="91:5" pos:end="91:15"><operator pos:start="91:5" pos:end="91:5">*</operator><name pos:start="91:6" pos:end="91:9">_chr</name> <operator pos:start="91:11" pos:end="91:11">=</operator> <name pos:start="91:13" pos:end="91:15">chr</name></expr>;</expr_stmt>

    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
