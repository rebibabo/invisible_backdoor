<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13203.c" pos:tabs="8"><function pos:start="1:1" pos:end="195:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">decode_mvs</name><parameter_list pos:start="1:16" pos:end="3:47">(<parameter pos:start="1:17" pos:end="1:29"><decl pos:start="1:17" pos:end="1:29"><type pos:start="1:17" pos:end="1:29"><name pos:start="1:17" pos:end="1:26">VP8Context</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:29">s</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:44">VP8Macroblock</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">mb</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:24"><decl pos:start="3:17" pos:end="3:24"><type pos:start="3:17" pos:end="3:24"><name pos:start="3:17" pos:end="3:19">int</name></type> <name pos:start="3:21" pos:end="3:24">mb_x</name></decl></parameter>, <parameter pos:start="3:27" pos:end="3:34"><decl pos:start="3:27" pos:end="3:34"><type pos:start="3:27" pos:end="3:34"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:34">mb_y</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:46"><decl pos:start="3:37" pos:end="3:46"><type pos:start="3:37" pos:end="3:46"><name pos:start="3:37" pos:end="3:39">int</name></type> <name pos:start="3:41" pos:end="3:46">layout</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="195:1">{<block_content pos:start="7:5" pos:end="193:5">

    <decl_stmt pos:start="7:5" pos:end="11:58"><decl pos:start="7:5" pos:end="11:57"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">VP8Macroblock</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:29"><name pos:start="7:20" pos:end="7:26">mb_edge</name><index pos:start="7:27" pos:end="7:29">[<expr pos:start="7:28" pos:end="7:28"><literal type="number" pos:start="7:28" pos:end="7:28">3</literal></expr>]</index></name> <init pos:start="7:31" pos:end="11:57">= <expr pos:start="7:33" pos:end="11:57"><block pos:start="7:33" pos:end="11:57">{ <expr pos:start="7:35" pos:end="7:35"><literal type="number" pos:start="7:35" pos:end="7:35">0</literal></expr>      <comment type="block" pos:start="7:42" pos:end="7:50">/* top */</comment>,

                                  <expr pos:start="9:35" pos:end="9:40"><name pos:start="9:35" pos:end="9:36">mb</name> <operator pos:start="9:38" pos:end="9:38">-</operator> <literal type="number" pos:start="9:40" pos:end="9:40">1</literal></expr> <comment type="block" pos:start="9:42" pos:end="9:51">/* left */</comment>,

                                  <expr pos:start="11:35" pos:end="11:35"><literal type="number" pos:start="11:35" pos:end="11:35">0</literal></expr>      <comment type="block" pos:start="11:42" pos:end="11:55">/* top-left */</comment> }</block></expr></init></decl>;</decl_stmt>

    <enum pos:start="13:5" pos:end="13:58">enum <block pos:start="13:10" pos:end="13:57">{ <decl pos:start="13:12" pos:end="13:19"><name pos:start="13:12" pos:end="13:19">CNT_ZERO</name></decl>, <decl pos:start="13:22" pos:end="13:32"><name pos:start="13:22" pos:end="13:32">CNT_NEAREST</name></decl>, <decl pos:start="13:35" pos:end="13:42"><name pos:start="13:35" pos:end="13:42">CNT_NEAR</name></decl>, <decl pos:start="13:45" pos:end="13:55"><name pos:start="13:45" pos:end="13:55">CNT_SPLITMV</name></decl> }</block>;</enum>

    <enum pos:start="15:5" pos:end="15:59">enum <block pos:start="15:10" pos:end="15:58">{ <decl pos:start="15:12" pos:end="15:23"><name pos:start="15:12" pos:end="15:23">VP8_EDGE_TOP</name></decl>, <decl pos:start="15:26" pos:end="15:38"><name pos:start="15:26" pos:end="15:38">VP8_EDGE_LEFT</name></decl>, <decl pos:start="15:41" pos:end="15:56"><name pos:start="15:41" pos:end="15:56">VP8_EDGE_TOPLEFT</name></decl> }</block>;</enum>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">idx</name> <init pos:start="17:13" pos:end="17:22">= <expr pos:start="17:15" pos:end="17:22"><name pos:start="17:15" pos:end="17:22">CNT_ZERO</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:52"><decl pos:start="19:5" pos:end="19:51"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:21">cur_sign_bias</name> <init pos:start="19:23" pos:end="19:51">= <expr pos:start="19:25" pos:end="19:51"><name pos:start="19:25" pos:end="19:51"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:36">sign_bias</name><index pos:start="19:37" pos:end="19:51">[<expr pos:start="19:38" pos:end="19:50"><name pos:start="19:38" pos:end="19:50"><name pos:start="19:38" pos:end="19:39">mb</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:50">ref_frame</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:37"><decl pos:start="21:5" pos:end="21:36"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:10">int8_t</name> <modifier pos:start="21:12" pos:end="21:12">*</modifier></type><name pos:start="21:13" pos:end="21:21">sign_bias</name> <init pos:start="21:23" pos:end="21:36">= <expr pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:25">s</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:36">sign_bias</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:22"><decl pos:start="23:5" pos:end="23:21"><type pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:10">VP56mv</name></type> <name pos:start="23:12" pos:end="23:21"><name pos:start="23:12" pos:end="23:18">near_mv</name><index pos:start="23:19" pos:end="23:21">[<expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:27"><decl pos:start="25:5" pos:end="25:26"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:11">uint8_t</name></type> <name pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:15">cnt</name><index pos:start="25:16" pos:end="25:18">[<expr pos:start="25:17" pos:end="25:17"><literal type="number" pos:start="25:17" pos:end="25:17">4</literal></expr>]</index></name> <init pos:start="25:20" pos:end="25:26">= <expr pos:start="25:22" pos:end="25:26"><block pos:start="25:22" pos:end="25:26">{ <expr pos:start="25:24" pos:end="25:24"><literal type="number" pos:start="25:24" pos:end="25:24">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:30"><decl pos:start="27:5" pos:end="27:29"><type pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:18">VP56RangeCoder</name> <modifier pos:start="27:20" pos:end="27:20">*</modifier></type><name pos:start="27:21" pos:end="27:21">c</name> <init pos:start="27:23" pos:end="27:29">= <expr pos:start="27:25" pos:end="27:29"><operator pos:start="27:25" pos:end="27:25">&amp;</operator><name pos:start="27:26" pos:end="27:29"><name pos:start="27:26" pos:end="27:26">s</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:29">c</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="43:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:16">(<expr pos:start="31:9" pos:end="31:15"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:15">layout</name></expr>)</condition> <block pos:start="31:18" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:28"> <comment type="line" pos:start="31:20" pos:end="31:61">// layout is inlined (s-&gt;mb_layout is not)</comment>

        <expr_stmt pos:start="33:9" pos:end="33:28"><expr pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:15">mb_edge</name><index pos:start="33:16" pos:end="33:18">[<expr pos:start="33:17" pos:end="33:17"><literal type="number" pos:start="33:17" pos:end="33:17">0</literal></expr>]</index></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:23">mb</name> <operator pos:start="33:25" pos:end="33:25">+</operator> <literal type="number" pos:start="33:27" pos:end="33:27">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:28"><expr pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:15">mb_edge</name><index pos:start="35:16" pos:end="35:18">[<expr pos:start="35:17" pos:end="35:17"><literal type="number" pos:start="35:17" pos:end="35:17">2</literal></expr>]</index></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:23">mb</name> <operator pos:start="35:25" pos:end="35:25">+</operator> <literal type="number" pos:start="35:27" pos:end="35:27">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="43:5">else <block pos:start="37:12" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:42">

        <expr_stmt pos:start="39:9" pos:end="39:42"><expr pos:start="39:9" pos:end="39:41"><name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:15">mb_edge</name><index pos:start="39:16" pos:end="39:18">[<expr pos:start="39:17" pos:end="39:17"><literal type="number" pos:start="39:17" pos:end="39:17">0</literal></expr>]</index></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:23">mb</name> <operator pos:start="39:25" pos:end="39:25">-</operator> <name pos:start="39:27" pos:end="39:37"><name pos:start="39:27" pos:end="39:27">s</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:37">mb_width</name></name> <operator pos:start="39:39" pos:end="39:39">-</operator> <literal type="number" pos:start="39:41" pos:end="39:41">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:42"><expr pos:start="41:9" pos:end="41:41"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:15">mb_edge</name><index pos:start="41:16" pos:end="41:18">[<expr pos:start="41:17" pos:end="41:17"><literal type="number" pos:start="41:17" pos:end="41:17">2</literal></expr>]</index></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:23">mb</name> <operator pos:start="41:25" pos:end="41:25">-</operator> <name pos:start="41:27" pos:end="41:37"><name pos:start="41:27" pos:end="41:27">s</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:37">mb_width</name></name> <operator pos:start="41:39" pos:end="41:39">-</operator> <literal type="number" pos:start="41:41" pos:end="41:41">2</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:27"><expr pos:start="47:5" pos:end="47:26"><call pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:13">AV_ZERO32</name><argument_list pos:start="47:14" pos:end="47:26">(<argument pos:start="47:15" pos:end="47:25"><expr pos:start="47:15" pos:end="47:25"><operator pos:start="47:15" pos:end="47:15">&amp;</operator><name pos:start="47:16" pos:end="47:25"><name pos:start="47:16" pos:end="47:22">near_mv</name><index pos:start="47:23" pos:end="47:25">[<expr pos:start="47:24" pos:end="47:24"><literal type="number" pos:start="47:24" pos:end="47:24">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:27"><expr pos:start="49:5" pos:end="49:26"><call pos:start="49:5" pos:end="49:26"><name pos:start="49:5" pos:end="49:13">AV_ZERO32</name><argument_list pos:start="49:14" pos:end="49:26">(<argument pos:start="49:15" pos:end="49:25"><expr pos:start="49:15" pos:end="49:25"><operator pos:start="49:15" pos:end="49:15">&amp;</operator><name pos:start="49:16" pos:end="49:25"><name pos:start="49:16" pos:end="49:22">near_mv</name><index pos:start="49:23" pos:end="49:25">[<expr pos:start="49:24" pos:end="49:24"><literal type="number" pos:start="49:24" pos:end="49:24">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="96:0"><expr pos:start="51:5" pos:end="51:26"><call pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:13">AV_ZERO32</name><argument_list pos:start="51:14" pos:end="51:26">(<argument pos:start="51:15" pos:end="51:25"><expr pos:start="51:15" pos:end="51:25"><operator pos:start="51:15" pos:end="51:15">&amp;</operator><name pos:start="51:16" pos:end="51:25"><name pos:start="51:16" pos:end="51:22">near_mv</name><index pos:start="51:23" pos:end="51:25">[<expr pos:start="51:24" pos:end="51:24"><literal type="number" pos:start="51:24" pos:end="51:24">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:46">/* Process MB on top, left and top-left */</comment>

<cpp:define pos:start="57:1" pos:end="95:5">#<cpp:directive pos:start="57:2" pos:end="57:7">define</cpp:directive> <cpp:macro pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:21">MV_EDGE_CHECK</name><parameter_list pos:start="57:22" pos:end="57:24">(<parameter pos:start="57:23" pos:end="57:23"><type pos:start="57:23" pos:end="57:23"><name pos:start="57:23" pos:end="57:23">n</name></type></parameter>)</parameter_list></cpp:macro>                                                      \

    <cpp:value pos:start="59:5" pos:end="95:5">{                                                                         \

        VP8Macroblock *edge = mb_edge[n];                                     \

        int edge_ref = edge-&gt;ref_frame;                                       \

        if (edge_ref != VP56_FRAME_CURRENT) {                                 \

            uint32_t mv = AV_RN32A(&amp;edge-&gt;mv);                                \

            if (mv) {                                                         \

                if (cur_sign_bias != sign_bias[edge_ref]) {                   \

                    <comment type="block" pos:start="73:21" pos:end="73:58">/* SWAR negate of the values in mv. */</comment>                    \

                    mv = ~mv;                                                 \

                    mv = ((mv &amp; 0x7fff7fff) +                                 \

                          0x00010001) ^ (mv &amp; 0x80008000);                    \

                }                                                             \

                if (!n || mv != AV_RN32A(&amp;near_mv[idx]))                      \

                    AV_WN32A(&amp;near_mv[++idx], mv);                            \

                cnt[idx] += 1 + (n != 2);                                     \

            } else                                                            \

                cnt[CNT_ZERO] += 1 + (n != 2);                                \

        }                                                                     \

    }</cpp:value></cpp:define>



    <macro pos:start="99:5" pos:end="99:20"><name pos:start="99:5" pos:end="99:17">MV_EDGE_CHECK</name><argument_list pos:start="99:18" pos:end="99:20">(<argument pos:start="99:19" pos:end="99:19"><literal type="number" pos:start="99:19" pos:end="99:19">0</literal></argument>)</argument_list></macro>

    <macro pos:start="101:5" pos:end="101:20"><name pos:start="101:5" pos:end="101:17">MV_EDGE_CHECK</name><argument_list pos:start="101:18" pos:end="101:20">(<argument pos:start="101:19" pos:end="101:19"><literal type="number" pos:start="101:19" pos:end="101:19">1</literal></argument>)</argument_list></macro>

    <macro pos:start="103:5" pos:end="103:20"><name pos:start="103:5" pos:end="103:17">MV_EDGE_CHECK</name><argument_list pos:start="103:18" pos:end="103:20">(<argument pos:start="103:19" pos:end="103:19"><literal type="number" pos:start="103:19" pos:end="103:19">2</literal></argument>)</argument_list></macro>



    <expr_stmt pos:start="107:5" pos:end="107:44"><expr pos:start="107:5" pos:end="107:43"><name pos:start="107:5" pos:end="107:20"><name pos:start="107:5" pos:end="107:6">mb</name><operator pos:start="107:7" pos:end="107:8">-&gt;</operator><name pos:start="107:9" pos:end="107:20">partitioning</name></name> <operator pos:start="107:22" pos:end="107:22">=</operator> <name pos:start="107:24" pos:end="107:43">VP8_SPLITMVMODE_NONE</name></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="193:5"><if pos:start="109:5" pos:end="185:5">if <condition pos:start="109:8" pos:end="109:74">(<expr pos:start="109:9" pos:end="109:73"><call pos:start="109:9" pos:end="109:73"><name pos:start="109:9" pos:end="109:33">vp56_rac_get_prob_branchy</name><argument_list pos:start="109:34" pos:end="109:73">(<argument pos:start="109:35" pos:end="109:35"><expr pos:start="109:35" pos:end="109:35"><name pos:start="109:35" pos:end="109:35">c</name></expr></argument>, <argument pos:start="109:38" pos:end="109:72"><expr pos:start="109:38" pos:end="109:72"><name pos:start="109:38" pos:end="109:72"><name pos:start="109:38" pos:end="109:54">vp8_mode_contexts</name><index pos:start="109:55" pos:end="109:69">[<expr pos:start="109:56" pos:end="109:68"><name pos:start="109:56" pos:end="109:68"><name pos:start="109:56" pos:end="109:58">cnt</name><index pos:start="109:59" pos:end="109:68">[<expr pos:start="109:60" pos:end="109:67"><name pos:start="109:60" pos:end="109:67">CNT_ZERO</name></expr>]</index></name></expr>]</index><index pos:start="109:70" pos:end="109:72">[<expr pos:start="109:71" pos:end="109:71"><literal type="number" pos:start="109:71" pos:end="109:71">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:76" pos:end="185:5">{<block_content pos:start="111:9" pos:end="183:9">

        <expr_stmt pos:start="111:9" pos:end="111:33"><expr pos:start="111:9" pos:end="111:32"><name pos:start="111:9" pos:end="111:16"><name pos:start="111:9" pos:end="111:10">mb</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:16">mode</name></name> <operator pos:start="111:18" pos:end="111:18">=</operator> <name pos:start="111:20" pos:end="111:32">VP8_MVMODE_MV</name></expr>;</expr_stmt>



        <comment type="block" pos:start="115:9" pos:end="115:85">/* If we have three distinct MVs, merge first and last if they're the same */</comment>

        <if_stmt pos:start="117:9" pos:end="121:34"><if pos:start="117:9" pos:end="121:34">if <condition pos:start="117:12" pos:end="119:93">(<expr pos:start="117:13" pos:end="119:92"><name pos:start="117:13" pos:end="117:28"><name pos:start="117:13" pos:end="117:15">cnt</name><index pos:start="117:16" pos:end="117:28">[<expr pos:start="117:17" pos:end="117:27"><name pos:start="117:17" pos:end="117:27">CNT_SPLITMV</name></expr>]</index></name> <operator pos:start="117:30" pos:end="117:31">&amp;&amp;</operator>

            <call pos:start="119:13" pos:end="119:48"><name pos:start="119:13" pos:end="119:20">AV_RN32A</name><argument_list pos:start="119:21" pos:end="119:48">(<argument pos:start="119:22" pos:end="119:47"><expr pos:start="119:22" pos:end="119:47"><operator pos:start="119:22" pos:end="119:22">&amp;</operator><name pos:start="119:23" pos:end="119:47"><name pos:start="119:23" pos:end="119:29">near_mv</name><index pos:start="119:30" pos:end="119:47">[<expr pos:start="119:31" pos:end="119:46"><literal type="number" pos:start="119:31" pos:end="119:33">1</literal> <operator pos:start="119:33" pos:end="119:33">+</operator> <name pos:start="119:35" pos:end="119:46">VP8_EDGE_TOP</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="119:50" pos:end="119:51">==</operator> <call pos:start="119:53" pos:end="119:92"><name pos:start="119:53" pos:end="119:60">AV_RN32A</name><argument_list pos:start="119:61" pos:end="119:92">(<argument pos:start="119:62" pos:end="119:91"><expr pos:start="119:62" pos:end="119:91"><operator pos:start="119:62" pos:end="119:62">&amp;</operator><name pos:start="119:63" pos:end="119:91"><name pos:start="119:63" pos:end="119:69">near_mv</name><index pos:start="119:70" pos:end="119:91">[<expr pos:start="119:71" pos:end="119:90"><literal type="number" pos:start="119:71" pos:end="119:73">1</literal> <operator pos:start="119:73" pos:end="119:73">+</operator> <name pos:start="119:75" pos:end="119:90">VP8_EDGE_TOPLEFT</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:34"><block_content pos:start="121:13" pos:end="121:34">

            <expr_stmt pos:start="121:13" pos:end="121:34"><expr pos:start="121:13" pos:end="121:33"><name pos:start="121:13" pos:end="121:28"><name pos:start="121:13" pos:end="121:15">cnt</name><index pos:start="121:16" pos:end="121:28">[<expr pos:start="121:17" pos:end="121:27"><name pos:start="121:17" pos:end="121:27">CNT_NEAREST</name></expr>]</index></name> <operator pos:start="121:30" pos:end="121:31">+=</operator> <literal type="number" pos:start="121:33" pos:end="121:33">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="125:9" pos:end="125:48">/* Swap near and nearest if necessary */</comment>

        <if_stmt pos:start="127:9" pos:end="133:9"><if pos:start="127:9" pos:end="133:9">if <condition pos:start="127:12" pos:end="127:45">(<expr pos:start="127:13" pos:end="127:44"><name pos:start="127:13" pos:end="127:25"><name pos:start="127:13" pos:end="127:15">cnt</name><index pos:start="127:16" pos:end="127:25">[<expr pos:start="127:17" pos:end="127:24"><name pos:start="127:17" pos:end="127:24">CNT_NEAR</name></expr>]</index></name> <operator pos:start="127:27" pos:end="127:27">&gt;</operator> <name pos:start="127:29" pos:end="127:44"><name pos:start="127:29" pos:end="127:31">cnt</name><index pos:start="127:32" pos:end="127:44">[<expr pos:start="127:33" pos:end="127:43"><name pos:start="127:33" pos:end="127:43">CNT_NEAREST</name></expr>]</index></name></expr>)</condition> <block pos:start="127:47" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:69">

            <expr_stmt pos:start="129:13" pos:end="129:69"><expr pos:start="129:13" pos:end="129:68"><call pos:start="129:13" pos:end="129:68"><name pos:start="129:13" pos:end="129:18">FFSWAP</name><argument_list pos:start="129:19" pos:end="129:68">(<argument pos:start="129:20" pos:end="129:26"><expr pos:start="129:20" pos:end="129:26"><name pos:start="129:20" pos:end="129:26">uint8_t</name></expr></argument>,     <argument pos:start="129:33" pos:end="129:48"><expr pos:start="129:33" pos:end="129:48"><name pos:start="129:33" pos:end="129:48"><name pos:start="129:33" pos:end="129:35">cnt</name><index pos:start="129:36" pos:end="129:48">[<expr pos:start="129:37" pos:end="129:47"><name pos:start="129:37" pos:end="129:47">CNT_NEAREST</name></expr>]</index></name></expr></argument>,     <argument pos:start="129:55" pos:end="129:67"><expr pos:start="129:55" pos:end="129:67"><name pos:start="129:55" pos:end="129:67"><name pos:start="129:55" pos:end="129:57">cnt</name><index pos:start="129:58" pos:end="129:67">[<expr pos:start="129:59" pos:end="129:66"><name pos:start="129:59" pos:end="129:66">CNT_NEAR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:69"><expr pos:start="131:13" pos:end="131:68"><call pos:start="131:13" pos:end="131:68"><name pos:start="131:13" pos:end="131:18">FFSWAP</name><argument_list pos:start="131:19" pos:end="131:68">( <argument pos:start="131:21" pos:end="131:26"><expr pos:start="131:21" pos:end="131:26"><name pos:start="131:21" pos:end="131:26">VP56mv</name></expr></argument>, <argument pos:start="131:29" pos:end="131:48"><expr pos:start="131:29" pos:end="131:48"><name pos:start="131:29" pos:end="131:48"><name pos:start="131:29" pos:end="131:35">near_mv</name><index pos:start="131:36" pos:end="131:48">[<expr pos:start="131:37" pos:end="131:47"><name pos:start="131:37" pos:end="131:47">CNT_NEAREST</name></expr>]</index></name></expr></argument>, <argument pos:start="131:51" pos:end="131:67"><expr pos:start="131:51" pos:end="131:67"><name pos:start="131:51" pos:end="131:67"><name pos:start="131:51" pos:end="131:57">near_mv</name><index pos:start="131:58" pos:end="131:67">[<expr pos:start="131:59" pos:end="131:66"><name pos:start="131:59" pos:end="131:66">CNT_NEAR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="137:9" pos:end="183:9"><if pos:start="137:9" pos:end="177:9">if <condition pos:start="137:12" pos:end="137:81">(<expr pos:start="137:13" pos:end="137:80"><call pos:start="137:13" pos:end="137:80"><name pos:start="137:13" pos:end="137:37">vp56_rac_get_prob_branchy</name><argument_list pos:start="137:38" pos:end="137:80">(<argument pos:start="137:39" pos:end="137:39"><expr pos:start="137:39" pos:end="137:39"><name pos:start="137:39" pos:end="137:39">c</name></expr></argument>, <argument pos:start="137:42" pos:end="137:79"><expr pos:start="137:42" pos:end="137:79"><name pos:start="137:42" pos:end="137:79"><name pos:start="137:42" pos:end="137:58">vp8_mode_contexts</name><index pos:start="137:59" pos:end="137:76">[<expr pos:start="137:60" pos:end="137:75"><name pos:start="137:60" pos:end="137:75"><name pos:start="137:60" pos:end="137:62">cnt</name><index pos:start="137:63" pos:end="137:75">[<expr pos:start="137:64" pos:end="137:74"><name pos:start="137:64" pos:end="137:74">CNT_NEAREST</name></expr>]</index></name></expr>]</index><index pos:start="137:77" pos:end="137:79">[<expr pos:start="137:78" pos:end="137:78"><literal type="number" pos:start="137:78" pos:end="137:78">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="137:83" pos:end="177:9">{<block_content pos:start="139:13" pos:end="175:13">

            <if_stmt pos:start="139:13" pos:end="175:13"><if pos:start="139:13" pos:end="169:13">if <condition pos:start="139:16" pos:end="139:82">(<expr pos:start="139:17" pos:end="139:81"><call pos:start="139:17" pos:end="139:81"><name pos:start="139:17" pos:end="139:41">vp56_rac_get_prob_branchy</name><argument_list pos:start="139:42" pos:end="139:81">(<argument pos:start="139:43" pos:end="139:43"><expr pos:start="139:43" pos:end="139:43"><name pos:start="139:43" pos:end="139:43">c</name></expr></argument>, <argument pos:start="139:46" pos:end="139:80"><expr pos:start="139:46" pos:end="139:80"><name pos:start="139:46" pos:end="139:80"><name pos:start="139:46" pos:end="139:62">vp8_mode_contexts</name><index pos:start="139:63" pos:end="139:77">[<expr pos:start="139:64" pos:end="139:76"><name pos:start="139:64" pos:end="139:76"><name pos:start="139:64" pos:end="139:66">cnt</name><index pos:start="139:67" pos:end="139:76">[<expr pos:start="139:68" pos:end="139:75"><name pos:start="139:68" pos:end="139:75">CNT_NEAR</name></expr>]</index></name></expr>]</index><index pos:start="139:78" pos:end="139:80">[<expr pos:start="139:79" pos:end="139:79"><literal type="number" pos:start="139:79" pos:end="139:79">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="139:84" pos:end="169:13">{<block_content pos:start="143:17" pos:end="167:17">

                <comment type="block" pos:start="141:17" pos:end="141:70">/* Choose the best mv out of 0,0 and the nearest mv */</comment>

                <expr_stmt pos:start="143:17" pos:end="143:95"><expr pos:start="143:17" pos:end="143:94"><call pos:start="143:17" pos:end="143:94"><name pos:start="143:17" pos:end="143:24">clamp_mv</name><argument_list pos:start="143:25" pos:end="143:94">(<argument pos:start="143:26" pos:end="143:26"><expr pos:start="143:26" pos:end="143:26"><name pos:start="143:26" pos:end="143:26">s</name></expr></argument>, <argument pos:start="143:29" pos:end="143:35"><expr pos:start="143:29" pos:end="143:35"><operator pos:start="143:29" pos:end="143:29">&amp;</operator><name pos:start="143:30" pos:end="143:35"><name pos:start="143:30" pos:end="143:31">mb</name><operator pos:start="143:32" pos:end="143:33">-&gt;</operator><name pos:start="143:34" pos:end="143:35">mv</name></name></expr></argument>, <argument pos:start="143:38" pos:end="143:93"><expr pos:start="143:38" pos:end="143:93"><operator pos:start="143:38" pos:end="143:38">&amp;</operator><name pos:start="143:39" pos:end="143:93"><name pos:start="143:39" pos:end="143:45">near_mv</name><index pos:start="143:46" pos:end="143:93">[<expr pos:start="143:47" pos:end="143:92"><name pos:start="143:47" pos:end="143:54">CNT_ZERO</name> <operator pos:start="143:56" pos:end="143:56">+</operator> <operator pos:start="143:58" pos:end="143:58">(</operator><name pos:start="143:59" pos:end="143:74"><name pos:start="143:59" pos:end="143:61">cnt</name><index pos:start="143:62" pos:end="143:74">[<expr pos:start="143:63" pos:end="143:73"><name pos:start="143:63" pos:end="143:73">CNT_NEAREST</name></expr>]</index></name> <operator pos:start="143:76" pos:end="143:77">&gt;=</operator> <name pos:start="143:79" pos:end="143:91"><name pos:start="143:79" pos:end="143:81">cnt</name><index pos:start="143:82" pos:end="143:91">[<expr pos:start="143:83" pos:end="143:90"><name pos:start="143:83" pos:end="143:90">CNT_ZERO</name></expr>]</index></name><operator pos:start="143:92" pos:end="143:92">)</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="149:90"><expr pos:start="145:17" pos:end="149:89"><name pos:start="145:17" pos:end="145:32"><name pos:start="145:17" pos:end="145:19">cnt</name><index pos:start="145:20" pos:end="145:32">[<expr pos:start="145:21" pos:end="145:31"><name pos:start="145:21" pos:end="145:31">CNT_SPLITMV</name></expr>]</index></name> <operator pos:start="145:34" pos:end="145:34">=</operator> <operator pos:start="145:36" pos:end="145:36">(</operator><operator pos:start="145:37" pos:end="145:37">(</operator><name pos:start="145:38" pos:end="145:59"><name pos:start="145:38" pos:end="145:44">mb_edge</name><index pos:start="145:45" pos:end="145:59">[<expr pos:start="145:46" pos:end="145:58"><name pos:start="145:46" pos:end="145:58">VP8_EDGE_LEFT</name></expr>]</index></name><operator pos:start="145:60" pos:end="145:61">-&gt;</operator><name pos:start="145:62" pos:end="145:65">mode</name>    <operator pos:start="145:70" pos:end="145:71">==</operator> <name pos:start="145:73" pos:end="145:88">VP8_MVMODE_SPLIT</name><operator pos:start="145:89" pos:end="145:89">)</operator> <operator pos:start="145:91" pos:end="145:91">+</operator>

                                    <operator pos:start="147:37" pos:end="147:37">(</operator><name pos:start="147:38" pos:end="147:58"><name pos:start="147:38" pos:end="147:44">mb_edge</name><index pos:start="147:45" pos:end="147:58">[<expr pos:start="147:46" pos:end="147:57"><name pos:start="147:46" pos:end="147:57">VP8_EDGE_TOP</name></expr>]</index></name><operator pos:start="147:59" pos:end="147:60">-&gt;</operator><name pos:start="147:61" pos:end="147:64">mode</name>     <operator pos:start="147:70" pos:end="147:71">==</operator> <name pos:start="147:73" pos:end="147:88">VP8_MVMODE_SPLIT</name><operator pos:start="147:89" pos:end="147:89">)</operator><operator pos:start="147:90" pos:end="147:90">)</operator> <operator pos:start="147:92" pos:end="147:92">*</operator> <literal type="number" pos:start="147:94" pos:end="147:96">2</literal> <operator pos:start="147:96" pos:end="147:96">+</operator>

                                    <operator pos:start="149:37" pos:end="149:37">(</operator><name pos:start="149:38" pos:end="149:62"><name pos:start="149:38" pos:end="149:44">mb_edge</name><index pos:start="149:45" pos:end="149:62">[<expr pos:start="149:46" pos:end="149:61"><name pos:start="149:46" pos:end="149:61">VP8_EDGE_TOPLEFT</name></expr>]</index></name><operator pos:start="149:63" pos:end="149:64">-&gt;</operator><name pos:start="149:65" pos:end="149:68">mode</name> <operator pos:start="149:70" pos:end="149:71">==</operator> <name pos:start="149:73" pos:end="149:88">VP8_MVMODE_SPLIT</name><operator pos:start="149:89" pos:end="149:89">)</operator></expr>;</expr_stmt>



                <if_stmt pos:start="153:17" pos:end="167:17"><if pos:start="153:17" pos:end="159:17">if <condition pos:start="153:20" pos:end="153:89">(<expr pos:start="153:21" pos:end="153:88"><call pos:start="153:21" pos:end="153:88"><name pos:start="153:21" pos:end="153:45">vp56_rac_get_prob_branchy</name><argument_list pos:start="153:46" pos:end="153:88">(<argument pos:start="153:47" pos:end="153:47"><expr pos:start="153:47" pos:end="153:47"><name pos:start="153:47" pos:end="153:47">c</name></expr></argument>, <argument pos:start="153:50" pos:end="153:87"><expr pos:start="153:50" pos:end="153:87"><name pos:start="153:50" pos:end="153:87"><name pos:start="153:50" pos:end="153:66">vp8_mode_contexts</name><index pos:start="153:67" pos:end="153:84">[<expr pos:start="153:68" pos:end="153:83"><name pos:start="153:68" pos:end="153:83"><name pos:start="153:68" pos:end="153:70">cnt</name><index pos:start="153:71" pos:end="153:83">[<expr pos:start="153:72" pos:end="153:82"><name pos:start="153:72" pos:end="153:82">CNT_SPLITMV</name></expr>]</index></name></expr>]</index><index pos:start="153:85" pos:end="153:87">[<expr pos:start="153:86" pos:end="153:86"><literal type="number" pos:start="153:86" pos:end="153:86">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="153:91" pos:end="159:17">{<block_content pos:start="155:21" pos:end="157:78">

                    <expr_stmt pos:start="155:21" pos:end="155:48"><expr pos:start="155:21" pos:end="155:47"><name pos:start="155:21" pos:end="155:28"><name pos:start="155:21" pos:end="155:22">mb</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:28">mode</name></name> <operator pos:start="155:30" pos:end="155:30">=</operator> <name pos:start="155:32" pos:end="155:47">VP8_MVMODE_SPLIT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="157:21" pos:end="157:78"><expr pos:start="157:21" pos:end="157:77"><name pos:start="157:21" pos:end="157:26"><name pos:start="157:21" pos:end="157:22">mb</name><operator pos:start="157:23" pos:end="157:24">-&gt;</operator><name pos:start="157:25" pos:end="157:26">mv</name></name>   <operator pos:start="157:30" pos:end="157:30">=</operator> <name pos:start="157:32" pos:end="157:77"><name pos:start="157:32" pos:end="157:33">mb</name><operator pos:start="157:34" pos:end="157:35">-&gt;</operator><name pos:start="157:36" pos:end="157:38">bmv</name><index pos:start="157:39" pos:end="157:77">[<expr pos:start="157:40" pos:end="157:76"><call pos:start="157:40" pos:end="157:72"><name pos:start="157:40" pos:end="157:54">decode_splitmvs</name><argument_list pos:start="157:55" pos:end="157:72">(<argument pos:start="157:56" pos:end="157:56"><expr pos:start="157:56" pos:end="157:56"><name pos:start="157:56" pos:end="157:56">s</name></expr></argument>, <argument pos:start="157:59" pos:end="157:59"><expr pos:start="157:59" pos:end="157:59"><name pos:start="157:59" pos:end="157:59">c</name></expr></argument>, <argument pos:start="157:62" pos:end="157:63"><expr pos:start="157:62" pos:end="157:63"><name pos:start="157:62" pos:end="157:63">mb</name></expr></argument>, <argument pos:start="157:66" pos:end="157:71"><expr pos:start="157:66" pos:end="157:71"><name pos:start="157:66" pos:end="157:71">layout</name></expr></argument>)</argument_list></call> <operator pos:start="157:74" pos:end="157:74">-</operator> <literal type="number" pos:start="157:76" pos:end="157:76">1</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="159:19" pos:end="167:17">else <block pos:start="159:24" pos:end="167:17">{<block_content pos:start="161:21" pos:end="165:40">

                    <expr_stmt pos:start="161:21" pos:end="161:71"><expr pos:start="161:21" pos:end="161:70"><name pos:start="161:21" pos:end="161:28"><name pos:start="161:21" pos:end="161:22">mb</name><operator pos:start="161:23" pos:end="161:24">-&gt;</operator><name pos:start="161:25" pos:end="161:26">mv</name><operator pos:start="161:27" pos:end="161:27">.</operator><name pos:start="161:28" pos:end="161:28">y</name></name>  <operator pos:start="161:31" pos:end="161:32">+=</operator> <call pos:start="161:34" pos:end="161:70"><name pos:start="161:34" pos:end="161:50">read_mv_component</name><argument_list pos:start="161:51" pos:end="161:70">(<argument pos:start="161:52" pos:end="161:52"><expr pos:start="161:52" pos:end="161:52"><name pos:start="161:52" pos:end="161:52">c</name></expr></argument>, <argument pos:start="161:55" pos:end="161:69"><expr pos:start="161:55" pos:end="161:69"><name pos:start="161:55" pos:end="161:69"><name pos:start="161:55" pos:end="161:55">s</name><operator pos:start="161:56" pos:end="161:57">-&gt;</operator><name pos:start="161:58" pos:end="161:61">prob</name><operator pos:start="161:62" pos:end="161:63">-&gt;</operator><name pos:start="161:64" pos:end="161:66">mvc</name><index pos:start="161:67" pos:end="161:69">[<expr pos:start="161:68" pos:end="161:68"><literal type="number" pos:start="161:68" pos:end="161:68">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="163:21" pos:end="163:71"><expr pos:start="163:21" pos:end="163:70"><name pos:start="163:21" pos:end="163:28"><name pos:start="163:21" pos:end="163:22">mb</name><operator pos:start="163:23" pos:end="163:24">-&gt;</operator><name pos:start="163:25" pos:end="163:26">mv</name><operator pos:start="163:27" pos:end="163:27">.</operator><name pos:start="163:28" pos:end="163:28">x</name></name>  <operator pos:start="163:31" pos:end="163:32">+=</operator> <call pos:start="163:34" pos:end="163:70"><name pos:start="163:34" pos:end="163:50">read_mv_component</name><argument_list pos:start="163:51" pos:end="163:70">(<argument pos:start="163:52" pos:end="163:52"><expr pos:start="163:52" pos:end="163:52"><name pos:start="163:52" pos:end="163:52">c</name></expr></argument>, <argument pos:start="163:55" pos:end="163:69"><expr pos:start="163:55" pos:end="163:69"><name pos:start="163:55" pos:end="163:69"><name pos:start="163:55" pos:end="163:55">s</name><operator pos:start="163:56" pos:end="163:57">-&gt;</operator><name pos:start="163:58" pos:end="163:61">prob</name><operator pos:start="163:62" pos:end="163:63">-&gt;</operator><name pos:start="163:64" pos:end="163:66">mvc</name><index pos:start="163:67" pos:end="163:69">[<expr pos:start="163:68" pos:end="163:68"><literal type="number" pos:start="163:68" pos:end="163:68">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="165:21" pos:end="165:40"><expr pos:start="165:21" pos:end="165:39"><name pos:start="165:21" pos:end="165:30"><name pos:start="165:21" pos:end="165:22">mb</name><operator pos:start="165:23" pos:end="165:24">-&gt;</operator><name pos:start="165:25" pos:end="165:27">bmv</name><index pos:start="165:28" pos:end="165:30">[<expr pos:start="165:29" pos:end="165:29"><literal type="number" pos:start="165:29" pos:end="165:29">0</literal></expr>]</index></name> <operator pos:start="165:32" pos:end="165:32">=</operator> <name pos:start="165:34" pos:end="165:39"><name pos:start="165:34" pos:end="165:35">mb</name><operator pos:start="165:36" pos:end="165:37">-&gt;</operator><name pos:start="165:38" pos:end="165:39">mv</name></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="169:15" pos:end="175:13">else <block pos:start="169:20" pos:end="175:13">{<block_content pos:start="171:17" pos:end="173:36">

                <expr_stmt pos:start="171:17" pos:end="171:57"><expr pos:start="171:17" pos:end="171:56"><call pos:start="171:17" pos:end="171:56"><name pos:start="171:17" pos:end="171:24">clamp_mv</name><argument_list pos:start="171:25" pos:end="171:56">(<argument pos:start="171:26" pos:end="171:26"><expr pos:start="171:26" pos:end="171:26"><name pos:start="171:26" pos:end="171:26">s</name></expr></argument>, <argument pos:start="171:29" pos:end="171:35"><expr pos:start="171:29" pos:end="171:35"><operator pos:start="171:29" pos:end="171:29">&amp;</operator><name pos:start="171:30" pos:end="171:35"><name pos:start="171:30" pos:end="171:31">mb</name><operator pos:start="171:32" pos:end="171:33">-&gt;</operator><name pos:start="171:34" pos:end="171:35">mv</name></name></expr></argument>, <argument pos:start="171:38" pos:end="171:55"><expr pos:start="171:38" pos:end="171:55"><operator pos:start="171:38" pos:end="171:38">&amp;</operator><name pos:start="171:39" pos:end="171:55"><name pos:start="171:39" pos:end="171:45">near_mv</name><index pos:start="171:46" pos:end="171:55">[<expr pos:start="171:47" pos:end="171:54"><name pos:start="171:47" pos:end="171:54">CNT_NEAR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:36"><expr pos:start="173:17" pos:end="173:35"><name pos:start="173:17" pos:end="173:26"><name pos:start="173:17" pos:end="173:18">mb</name><operator pos:start="173:19" pos:end="173:20">-&gt;</operator><name pos:start="173:21" pos:end="173:23">bmv</name><index pos:start="173:24" pos:end="173:26">[<expr pos:start="173:25" pos:end="173:25"><literal type="number" pos:start="173:25" pos:end="173:25">0</literal></expr>]</index></name> <operator pos:start="173:28" pos:end="173:28">=</operator> <name pos:start="173:30" pos:end="173:35"><name pos:start="173:30" pos:end="173:31">mb</name><operator pos:start="173:32" pos:end="173:33">-&gt;</operator><name pos:start="173:34" pos:end="173:35">mv</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="177:11" pos:end="183:9">else <block pos:start="177:16" pos:end="183:9">{<block_content pos:start="179:13" pos:end="181:32">

            <expr_stmt pos:start="179:13" pos:end="179:56"><expr pos:start="179:13" pos:end="179:55"><call pos:start="179:13" pos:end="179:55"><name pos:start="179:13" pos:end="179:20">clamp_mv</name><argument_list pos:start="179:21" pos:end="179:55">(<argument pos:start="179:22" pos:end="179:22"><expr pos:start="179:22" pos:end="179:22"><name pos:start="179:22" pos:end="179:22">s</name></expr></argument>, <argument pos:start="179:25" pos:end="179:31"><expr pos:start="179:25" pos:end="179:31"><operator pos:start="179:25" pos:end="179:25">&amp;</operator><name pos:start="179:26" pos:end="179:31"><name pos:start="179:26" pos:end="179:27">mb</name><operator pos:start="179:28" pos:end="179:29">-&gt;</operator><name pos:start="179:30" pos:end="179:31">mv</name></name></expr></argument>, <argument pos:start="179:34" pos:end="179:54"><expr pos:start="179:34" pos:end="179:54"><operator pos:start="179:34" pos:end="179:34">&amp;</operator><name pos:start="179:35" pos:end="179:54"><name pos:start="179:35" pos:end="179:41">near_mv</name><index pos:start="179:42" pos:end="179:54">[<expr pos:start="179:43" pos:end="179:53"><name pos:start="179:43" pos:end="179:53">CNT_NEAREST</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:32"><expr pos:start="181:13" pos:end="181:31"><name pos:start="181:13" pos:end="181:22"><name pos:start="181:13" pos:end="181:14">mb</name><operator pos:start="181:15" pos:end="181:16">-&gt;</operator><name pos:start="181:17" pos:end="181:19">bmv</name><index pos:start="181:20" pos:end="181:22">[<expr pos:start="181:21" pos:end="181:21"><literal type="number" pos:start="181:21" pos:end="181:21">0</literal></expr>]</index></name> <operator pos:start="181:24" pos:end="181:24">=</operator> <name pos:start="181:26" pos:end="181:31"><name pos:start="181:26" pos:end="181:27">mb</name><operator pos:start="181:28" pos:end="181:29">-&gt;</operator><name pos:start="181:30" pos:end="181:31">mv</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="185:7" pos:end="193:5">else <block pos:start="185:12" pos:end="193:5">{<block_content pos:start="187:9" pos:end="191:28">

        <expr_stmt pos:start="187:9" pos:end="187:35"><expr pos:start="187:9" pos:end="187:34"><name pos:start="187:9" pos:end="187:16"><name pos:start="187:9" pos:end="187:10">mb</name><operator pos:start="187:11" pos:end="187:12">-&gt;</operator><name pos:start="187:13" pos:end="187:16">mode</name></name> <operator pos:start="187:18" pos:end="187:18">=</operator> <name pos:start="187:20" pos:end="187:34">VP8_MVMODE_ZERO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:27"><expr pos:start="189:9" pos:end="189:26"><call pos:start="189:9" pos:end="189:26"><name pos:start="189:9" pos:end="189:17">AV_ZERO32</name><argument_list pos:start="189:18" pos:end="189:26">(<argument pos:start="189:19" pos:end="189:25"><expr pos:start="189:19" pos:end="189:25"><operator pos:start="189:19" pos:end="189:19">&amp;</operator><name pos:start="189:20" pos:end="189:25"><name pos:start="189:20" pos:end="189:21">mb</name><operator pos:start="189:22" pos:end="189:23">-&gt;</operator><name pos:start="189:24" pos:end="189:25">mv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:28"><expr pos:start="191:9" pos:end="191:27"><name pos:start="191:9" pos:end="191:18"><name pos:start="191:9" pos:end="191:10">mb</name><operator pos:start="191:11" pos:end="191:12">-&gt;</operator><name pos:start="191:13" pos:end="191:15">bmv</name><index pos:start="191:16" pos:end="191:18">[<expr pos:start="191:17" pos:end="191:17"><literal type="number" pos:start="191:17" pos:end="191:17">0</literal></expr>]</index></name> <operator pos:start="191:20" pos:end="191:20">=</operator> <name pos:start="191:22" pos:end="191:27"><name pos:start="191:22" pos:end="191:23">mb</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:27">mv</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
