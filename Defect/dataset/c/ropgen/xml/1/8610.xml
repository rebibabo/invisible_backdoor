<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8610.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">xhci_submit</name><parameter_list pos:start="1:23" pos:end="1:81">(<parameter pos:start="1:24" pos:end="1:38"><decl pos:start="1:24" pos:end="1:38"><type pos:start="1:24" pos:end="1:38"><name pos:start="1:24" pos:end="1:32">XHCIState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:38">xhci</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:58"><decl pos:start="1:41" pos:end="1:58"><type pos:start="1:41" pos:end="1:58"><name pos:start="1:41" pos:end="1:52">XHCITransfer</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">xfer</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:80"><decl pos:start="1:61" pos:end="1:80"><type pos:start="1:61" pos:end="1:80"><name pos:start="1:61" pos:end="1:73">XHCIEPContext</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:80">epctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:13">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:20">mfindex</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:74"><expr pos:start="9:5" pos:end="9:73"><call pos:start="9:5" pos:end="9:73"><name pos:start="9:5" pos:end="9:11">DPRINTF</name><argument_list pos:start="9:12" pos:end="9:73">(<argument pos:start="9:13" pos:end="9:46"><expr pos:start="9:13" pos:end="9:46"><literal type="string" pos:start="9:13" pos:end="9:46">"xhci_submit(slotid=%d,epid=%d)\n"</literal></expr></argument>, <argument pos:start="9:49" pos:end="9:60"><expr pos:start="9:49" pos:end="9:60"><name pos:start="9:49" pos:end="9:60"><name pos:start="9:49" pos:end="9:52">xfer</name><operator pos:start="9:53" pos:end="9:54">-&gt;</operator><name pos:start="9:55" pos:end="9:60">slotid</name></name></expr></argument>, <argument pos:start="9:63" pos:end="9:72"><expr pos:start="9:63" pos:end="9:72"><name pos:start="9:63" pos:end="9:72"><name pos:start="9:63" pos:end="9:66">xfer</name><operator pos:start="9:67" pos:end="9:68">-&gt;</operator><name pos:start="9:69" pos:end="9:72">epid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:8">xfer</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:17">in_xfer</name></name> <operator pos:start="13:19" pos:end="13:19">=</operator> <name pos:start="13:21" pos:end="13:31"><name pos:start="13:21" pos:end="13:25">epctx</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:31">type</name></name><operator pos:start="13:32" pos:end="13:33">&gt;&gt;</operator><literal type="number" pos:start="13:34" pos:end="13:34">2</literal></expr>;</expr_stmt>



    <switch pos:start="17:5" pos:end="65:5">switch<condition pos:start="17:11" pos:end="17:23">(<expr pos:start="17:12" pos:end="17:22"><name pos:start="17:12" pos:end="17:22"><name pos:start="17:12" pos:end="17:16">epctx</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:22">type</name></name></expr>)</condition> <block pos:start="17:25" pos:end="65:5">{<block_content pos:start="19:5" pos:end="63:18">

    <case pos:start="19:5" pos:end="19:21">case <expr pos:start="19:10" pos:end="19:20"><name pos:start="19:10" pos:end="19:20">ET_INTR_OUT</name></expr>:</case>

    <case pos:start="21:5" pos:end="21:20">case <expr pos:start="21:10" pos:end="21:19"><name pos:start="21:10" pos:end="21:19">ET_INTR_IN</name></expr>:</case>

    <case pos:start="23:5" pos:end="23:21">case <expr pos:start="23:10" pos:end="23:20"><name pos:start="23:10" pos:end="23:20">ET_BULK_OUT</name></expr>:</case>

    <case pos:start="25:5" pos:end="25:20">case <expr pos:start="25:10" pos:end="25:19"><name pos:start="25:10" pos:end="25:19">ET_BULK_IN</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:23"><expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:12">xfer</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:18">pkts</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="number" pos:start="27:22" pos:end="27:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:31"><expr pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:12">xfer</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:22">iso_xfer</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <name pos:start="29:26" pos:end="29:30">false</name></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:20">case <expr pos:start="33:10" pos:end="33:19"><name pos:start="33:10" pos:end="33:19">ET_ISO_OUT</name></expr>:</case>

    <case pos:start="35:5" pos:end="35:19">case <expr pos:start="35:10" pos:end="35:18"><name pos:start="35:10" pos:end="35:18">ET_ISO_IN</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:23"><expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:12">xfer</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:18">pkts</name></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:30"><expr pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:12">xfer</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:22">iso_xfer</name></name> <operator pos:start="39:24" pos:end="39:24">=</operator> <name pos:start="39:26" pos:end="39:29">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:41"><expr pos:start="41:9" pos:end="41:40"><name pos:start="41:9" pos:end="41:15">mfindex</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:40"><name pos:start="41:19" pos:end="41:34">xhci_mfindex_get</name><argument_list pos:start="41:35" pos:end="41:40">(<argument pos:start="41:36" pos:end="41:39"><expr pos:start="41:36" pos:end="41:39"><name pos:start="41:36" pos:end="41:39">xhci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:55"><expr pos:start="43:9" pos:end="43:54"><call pos:start="43:9" pos:end="43:54"><name pos:start="43:9" pos:end="43:26">xhci_calc_iso_kick</name><argument_list pos:start="43:27" pos:end="43:54">(<argument pos:start="43:28" pos:end="43:31"><expr pos:start="43:28" pos:end="43:31"><name pos:start="43:28" pos:end="43:31">xhci</name></expr></argument>, <argument pos:start="43:34" pos:end="43:37"><expr pos:start="43:34" pos:end="43:37"><name pos:start="43:34" pos:end="43:37">xfer</name></expr></argument>, <argument pos:start="43:40" pos:end="43:44"><expr pos:start="43:40" pos:end="43:44"><name pos:start="43:40" pos:end="43:44">epctx</name></expr></argument>, <argument pos:start="43:47" pos:end="43:53"><expr pos:start="43:47" pos:end="43:53"><name pos:start="43:47" pos:end="43:53">mfindex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:56"><expr pos:start="45:9" pos:end="45:55"><call pos:start="45:9" pos:end="45:55"><name pos:start="45:9" pos:end="45:27">xhci_check_iso_kick</name><argument_list pos:start="45:28" pos:end="45:55">(<argument pos:start="45:29" pos:end="45:32"><expr pos:start="45:29" pos:end="45:32"><name pos:start="45:29" pos:end="45:32">xhci</name></expr></argument>, <argument pos:start="45:35" pos:end="45:38"><expr pos:start="45:35" pos:end="45:38"><name pos:start="45:35" pos:end="45:38">xfer</name></expr></argument>, <argument pos:start="45:41" pos:end="45:45"><expr pos:start="45:41" pos:end="45:45"><name pos:start="45:41" pos:end="45:45">epctx</name></expr></argument>, <argument pos:start="45:48" pos:end="45:54"><expr pos:start="45:48" pos:end="45:54"><name pos:start="45:48" pos:end="45:54">mfindex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:32">(<expr pos:start="47:13" pos:end="47:31"><name pos:start="47:13" pos:end="47:31"><name pos:start="47:13" pos:end="47:16">xfer</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:31">running_retry</name></name></expr>)</condition> <block pos:start="47:34" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:22">

            <return pos:start="49:13" pos:end="49:22">return <expr pos:start="49:20" pos:end="49:21"><operator pos:start="49:20" pos:end="49:20">-</operator><literal type="number" pos:start="49:21" pos:end="49:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <default pos:start="55:5" pos:end="55:12">default:</default>

        <expr_stmt pos:start="57:9" pos:end="61:56"><expr pos:start="57:9" pos:end="61:55"><call pos:start="57:9" pos:end="61:55"><name pos:start="57:9" pos:end="57:15">fprintf</name><argument_list pos:start="57:16" pos:end="61:55">(<argument pos:start="57:17" pos:end="57:22"><expr pos:start="57:17" pos:end="57:22"><name pos:start="57:17" pos:end="57:22">stderr</name></expr></argument>, <argument pos:start="57:25" pos:end="59:45"><expr pos:start="57:25" pos:end="59:45"><literal type="string" pos:start="57:25" pos:end="57:56">"xhci: unknown or unhandled EP "</literal>

                <literal type="string" pos:start="59:17" pos:end="59:45">"(type %d, in %d, ep %02x)\n"</literal></expr></argument>,

                <argument pos:start="61:17" pos:end="61:27"><expr pos:start="61:17" pos:end="61:27"><name pos:start="61:17" pos:end="61:27"><name pos:start="61:17" pos:end="61:21">epctx</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:27">type</name></name></expr></argument>, <argument pos:start="61:30" pos:end="61:42"><expr pos:start="61:30" pos:end="61:42"><name pos:start="61:30" pos:end="61:42"><name pos:start="61:30" pos:end="61:33">xfer</name><operator pos:start="61:34" pos:end="61:35">-&gt;</operator><name pos:start="61:36" pos:end="61:42">in_xfer</name></name></expr></argument>, <argument pos:start="61:45" pos:end="61:54"><expr pos:start="61:45" pos:end="61:54"><name pos:start="61:45" pos:end="61:54"><name pos:start="61:45" pos:end="61:48">xfer</name><operator pos:start="61:49" pos:end="61:50">-&gt;</operator><name pos:start="61:51" pos:end="61:54">epid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:18">return <expr pos:start="63:16" pos:end="63:17"><operator pos:start="63:16" pos:end="63:16">-</operator><literal type="number" pos:start="63:17" pos:end="63:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="69:5" pos:end="73:5"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:36">(<expr pos:start="69:9" pos:end="69:35"><call pos:start="69:9" pos:end="69:31"><name pos:start="69:9" pos:end="69:25">xhci_setup_packet</name><argument_list pos:start="69:26" pos:end="69:31">(<argument pos:start="69:27" pos:end="69:30"><expr pos:start="69:27" pos:end="69:30"><name pos:start="69:27" pos:end="69:30">xfer</name></expr></argument>)</argument_list></call> <operator pos:start="69:33" pos:end="69:33">&lt;</operator> <literal type="number" pos:start="69:35" pos:end="69:35">0</literal></expr>)</condition> <block pos:start="69:38" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:18">

        <return pos:start="71:9" pos:end="71:18">return <expr pos:start="71:16" pos:end="71:17"><operator pos:start="71:16" pos:end="71:16">-</operator><literal type="number" pos:start="71:17" pos:end="71:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:59"><expr pos:start="75:5" pos:end="75:58"><call pos:start="75:5" pos:end="75:58"><name pos:start="75:5" pos:end="75:21">usb_handle_packet</name><argument_list pos:start="75:22" pos:end="75:58">(<argument pos:start="75:23" pos:end="75:42"><expr pos:start="75:23" pos:end="75:42"><name pos:start="75:23" pos:end="75:42"><name pos:start="75:23" pos:end="75:26">xfer</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:34">packet</name><operator pos:start="75:35" pos:end="75:35">.</operator><name pos:start="75:36" pos:end="75:37">ep</name><operator pos:start="75:38" pos:end="75:39">-&gt;</operator><name pos:start="75:40" pos:end="75:42">dev</name></name></expr></argument>, <argument pos:start="75:45" pos:end="75:57"><expr pos:start="75:45" pos:end="75:57"><operator pos:start="75:45" pos:end="75:45">&amp;</operator><name pos:start="75:46" pos:end="75:57"><name pos:start="75:46" pos:end="75:49">xfer</name><operator pos:start="75:50" pos:end="75:51">-&gt;</operator><name pos:start="75:52" pos:end="75:57">packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:31"><expr pos:start="79:5" pos:end="79:30"><call pos:start="79:5" pos:end="79:30"><name pos:start="79:5" pos:end="79:24">xhci_complete_packet</name><argument_list pos:start="79:25" pos:end="79:30">(<argument pos:start="79:26" pos:end="79:29"><expr pos:start="79:26" pos:end="79:29"><name pos:start="79:26" pos:end="79:29">xfer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="85:5"><if pos:start="81:5" pos:end="85:5">if <condition pos:start="81:8" pos:end="81:53">(<expr pos:start="81:9" pos:end="81:52"><operator pos:start="81:9" pos:end="81:9">!</operator><name pos:start="81:10" pos:end="81:28"><name pos:start="81:10" pos:end="81:13">xfer</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:28">running_async</name></name> <operator pos:start="81:30" pos:end="81:31">&amp;&amp;</operator> <operator pos:start="81:33" pos:end="81:33">!</operator><name pos:start="81:34" pos:end="81:52"><name pos:start="81:34" pos:end="81:37">xfer</name><operator pos:start="81:38" pos:end="81:39">-&gt;</operator><name pos:start="81:40" pos:end="81:52">running_retry</name></name></expr>)</condition> <block pos:start="81:55" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:69">

        <expr_stmt pos:start="83:9" pos:end="83:69"><expr pos:start="83:9" pos:end="83:68"><call pos:start="83:9" pos:end="83:68"><name pos:start="83:9" pos:end="83:20">xhci_kick_ep</name><argument_list pos:start="83:21" pos:end="83:68">(<argument pos:start="83:22" pos:end="83:25"><expr pos:start="83:22" pos:end="83:25"><name pos:start="83:22" pos:end="83:25">xhci</name></expr></argument>, <argument pos:start="83:28" pos:end="83:39"><expr pos:start="83:28" pos:end="83:39"><name pos:start="83:28" pos:end="83:39"><name pos:start="83:28" pos:end="83:31">xfer</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:39">slotid</name></name></expr></argument>, <argument pos:start="83:42" pos:end="83:51"><expr pos:start="83:42" pos:end="83:51"><name pos:start="83:42" pos:end="83:51"><name pos:start="83:42" pos:end="83:45">xfer</name><operator pos:start="83:46" pos:end="83:47">-&gt;</operator><name pos:start="83:48" pos:end="83:51">epid</name></name></expr></argument>, <argument pos:start="83:54" pos:end="83:67"><expr pos:start="83:54" pos:end="83:67"><name pos:start="83:54" pos:end="83:67"><name pos:start="83:54" pos:end="83:57">xfer</name><operator pos:start="83:58" pos:end="83:59">-&gt;</operator><name pos:start="83:60" pos:end="83:67">streamid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="87:5" pos:end="87:13">return <expr pos:start="87:12" pos:end="87:12"><literal type="number" pos:start="87:12" pos:end="87:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
