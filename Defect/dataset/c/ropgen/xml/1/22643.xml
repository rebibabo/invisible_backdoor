<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22643.c" pos:tabs="8"><function pos:start="1:1" pos:end="224:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">decode_lowdelay</name><parameter_list pos:start="1:27" pos:end="1:43">(<parameter pos:start="1:28" pos:end="1:42"><decl pos:start="1:28" pos:end="1:42"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:39">DiracContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="224:1">{<block_content pos:start="5:5" pos:end="222:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">AVCodecContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">avctx</name> <init pos:start="5:27" pos:end="5:36">= <expr pos:start="5:29" pos:end="5:36"><name pos:start="5:29" pos:end="5:36"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:36">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">slice_x</name></decl>, <decl pos:start="7:18" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:24">slice_y</name></decl>, <decl pos:start="7:27" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:27" pos:end="7:33">bufsize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:25">coef_buf_size</name></decl>, <decl pos:start="9:28" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:28" pos:end="9:32">bytes</name> <init pos:start="9:34" pos:end="9:36">= <expr pos:start="9:36" pos:end="9:36"><literal type="number" pos:start="9:36" pos:end="9:36">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">DiracSlice</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:22">slices</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:36"><decl pos:start="15:5" pos:end="15:35"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:15">SliceCoeffs</name></type> <name pos:start="15:17" pos:end="15:35"><name pos:start="15:17" pos:end="15:19">tmp</name><index pos:start="15:20" pos:end="15:35">[<expr pos:start="15:21" pos:end="15:34"><name pos:start="15:21" pos:end="15:34">MAX_DWT_LEVELS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:17">slice_num</name> <init pos:start="17:19" pos:end="17:21">= <expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="36:5"><if pos:start="21:5" pos:end="36:5">if <condition pos:start="21:8" pos:end="21:57">(<expr pos:start="21:9" pos:end="21:56"><name pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:31">slice_params_num_buf</name></name> <operator pos:start="21:33" pos:end="21:34">!=</operator> <operator pos:start="21:36" pos:end="21:36">(</operator><name pos:start="21:37" pos:end="21:44"><name pos:start="21:37" pos:end="21:37">s</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:44">num_x</name></name> <operator pos:start="21:46" pos:end="21:46">*</operator> <name pos:start="21:48" pos:end="21:55"><name pos:start="21:48" pos:end="21:48">s</name><operator pos:start="21:49" pos:end="21:50">-&gt;</operator><name pos:start="21:51" pos:end="21:55">num_y</name></name><operator pos:start="21:56" pos:end="21:56">)</operator></expr>)</condition> <block pos:start="21:59" pos:end="36:5">{<block_content pos:start="23:9" pos:end="34:54">

        <expr_stmt pos:start="23:9" pos:end="23:105"><expr pos:start="23:9" pos:end="23:104"><name pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:27">slice_params_buf</name></name> <operator pos:start="23:29" pos:end="23:29">=</operator> <call pos:start="23:31" pos:end="23:104"><name pos:start="23:31" pos:end="23:42">av_realloc_f</name><argument_list pos:start="23:43" pos:end="23:104">(<argument pos:start="23:44" pos:end="23:62"><expr pos:start="23:44" pos:end="23:62"><name pos:start="23:44" pos:end="23:62"><name pos:start="23:44" pos:end="23:44">s</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:62">slice_params_buf</name></name></expr></argument>, <argument pos:start="23:65" pos:end="23:83"><expr pos:start="23:65" pos:end="23:83"><name pos:start="23:65" pos:end="23:72"><name pos:start="23:65" pos:end="23:65">s</name><operator pos:start="23:66" pos:end="23:67">-&gt;</operator><name pos:start="23:68" pos:end="23:72">num_x</name></name> <operator pos:start="23:74" pos:end="23:74">*</operator> <name pos:start="23:76" pos:end="23:83"><name pos:start="23:76" pos:end="23:76">s</name><operator pos:start="23:77" pos:end="23:78">-&gt;</operator><name pos:start="23:79" pos:end="23:83">num_y</name></name></expr></argument>, <argument pos:start="23:86" pos:end="23:103"><expr pos:start="23:86" pos:end="23:103"><sizeof pos:start="23:86" pos:end="23:103">sizeof<argument_list pos:start="23:92" pos:end="23:103">(<argument pos:start="23:93" pos:end="23:102"><expr pos:start="23:93" pos:end="23:102"><name pos:start="23:93" pos:end="23:102">DiracSlice</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="32:9"><if pos:start="25:9" pos:end="32:9">if <condition pos:start="25:12" pos:end="25:33">(<expr pos:start="25:13" pos:end="25:32"><operator pos:start="25:13" pos:end="25:13">!</operator><name pos:start="25:14" pos:end="25:32"><name pos:start="25:14" pos:end="25:14">s</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:32">slice_params_buf</name></name></expr>)</condition> <block pos:start="25:35" pos:end="32:9">{<block_content pos:start="27:13" pos:end="30:35">

            <expr_stmt pos:start="27:13" pos:end="27:87"><expr pos:start="27:13" pos:end="27:86"><call pos:start="27:13" pos:end="27:86"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="27:86">(<argument pos:start="27:20" pos:end="27:27"><expr pos:start="27:20" pos:end="27:27"><name pos:start="27:20" pos:end="27:27"><name pos:start="27:20" pos:end="27:20">s</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:27">avctx</name></name></expr></argument>, <argument pos:start="27:30" pos:end="27:41"><expr pos:start="27:30" pos:end="27:41"><name pos:start="27:30" pos:end="27:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:44" pos:end="27:85"><expr pos:start="27:44" pos:end="27:85"><literal type="string" pos:start="27:44" pos:end="27:85">"slice params buffer allocation failure\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <return pos:start="30:13" pos:end="30:35">return <expr pos:start="30:20" pos:end="30:34"><call pos:start="30:20" pos:end="30:34"><name pos:start="30:20" pos:end="30:26">AVERROR</name><argument_list pos:start="30:27" pos:end="30:34">(<argument pos:start="30:28" pos:end="30:33"><expr pos:start="30:28" pos:end="30:33"><name pos:start="30:28" pos:end="30:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="34:9" pos:end="34:54"><expr pos:start="34:9" pos:end="34:53"><name pos:start="34:9" pos:end="34:31"><name pos:start="34:9" pos:end="34:9">s</name><operator pos:start="34:10" pos:end="34:11">-&gt;</operator><name pos:start="34:12" pos:end="34:31">slice_params_num_buf</name></name> <operator pos:start="34:33" pos:end="34:33">=</operator> <name pos:start="34:35" pos:end="34:42"><name pos:start="34:35" pos:end="34:35">s</name><operator pos:start="34:36" pos:end="34:37">-&gt;</operator><name pos:start="34:38" pos:end="34:42">num_x</name></name> <operator pos:start="34:44" pos:end="34:44">*</operator> <name pos:start="34:46" pos:end="34:53"><name pos:start="34:46" pos:end="34:46">s</name><operator pos:start="34:47" pos:end="34:48">-&gt;</operator><name pos:start="34:49" pos:end="34:53">num_y</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="38:5" pos:end="38:33"><expr pos:start="38:5" pos:end="38:32"><name pos:start="38:5" pos:end="38:10">slices</name> <operator pos:start="38:12" pos:end="38:12">=</operator> <name pos:start="38:14" pos:end="38:32"><name pos:start="38:14" pos:end="38:14">s</name><operator pos:start="38:15" pos:end="38:16">-&gt;</operator><name pos:start="38:17" pos:end="38:32">slice_params_buf</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="42:5" pos:end="44:64">/* 8 becacuse that's how much the golomb reader could overread junk data

     * from another plane/slice at most, and 512 because SIMD */</comment>

    <expr_stmt pos:start="46:5" pos:end="46:78"><expr pos:start="46:5" pos:end="46:77"><name pos:start="46:5" pos:end="46:17">coef_buf_size</name> <operator pos:start="46:19" pos:end="46:19">=</operator> <call pos:start="46:21" pos:end="46:73"><name pos:start="46:21" pos:end="46:34">subband_coeffs</name><argument_list pos:start="46:35" pos:end="46:73">(<argument pos:start="46:36" pos:end="46:36"><expr pos:start="46:36" pos:end="46:36"><name pos:start="46:36" pos:end="46:36">s</name></expr></argument>, <argument pos:start="46:39" pos:end="46:50"><expr pos:start="46:39" pos:end="46:50"><name pos:start="46:39" pos:end="46:46"><name pos:start="46:39" pos:end="46:39">s</name><operator pos:start="46:40" pos:end="46:41">-&gt;</operator><name pos:start="46:42" pos:end="46:46">num_x</name></name> <operator pos:start="46:48" pos:end="46:48">-</operator> <literal type="number" pos:start="46:50" pos:end="46:50">1</literal></expr></argument>, <argument pos:start="46:53" pos:end="46:64"><expr pos:start="46:53" pos:end="46:64"><name pos:start="46:53" pos:end="46:60"><name pos:start="46:53" pos:end="46:53">s</name><operator pos:start="46:54" pos:end="46:55">-&gt;</operator><name pos:start="46:56" pos:end="46:60">num_y</name></name> <operator pos:start="46:62" pos:end="46:62">-</operator> <literal type="number" pos:start="46:64" pos:end="46:64">1</literal></expr></argument>, <argument pos:start="46:67" pos:end="46:67"><expr pos:start="46:67" pos:end="46:67"><literal type="number" pos:start="46:67" pos:end="46:67">0</literal></expr></argument>, <argument pos:start="46:70" pos:end="46:72"><expr pos:start="46:70" pos:end="46:72"><name pos:start="46:70" pos:end="46:72">tmp</name></expr></argument>)</argument_list></call> <operator pos:start="46:75" pos:end="46:75">+</operator> <literal type="number" pos:start="46:77" pos:end="46:77">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="48:5" pos:end="48:61"><expr pos:start="48:5" pos:end="48:60"><name pos:start="48:5" pos:end="48:17">coef_buf_size</name> <operator pos:start="48:19" pos:end="48:19">=</operator> <operator pos:start="48:21" pos:end="48:21">(</operator><name pos:start="48:22" pos:end="48:34">coef_buf_size</name> <operator pos:start="48:36" pos:end="48:37">&lt;&lt;</operator> <operator pos:start="48:39" pos:end="48:39">(</operator><literal type="number" pos:start="48:40" pos:end="48:42">1</literal> <operator pos:start="48:42" pos:end="48:42">+</operator> <name pos:start="48:44" pos:end="48:52"><name pos:start="48:44" pos:end="48:44">s</name><operator pos:start="48:45" pos:end="48:46">-&gt;</operator><name pos:start="48:47" pos:end="48:52">pshift</name></name><operator pos:start="48:53" pos:end="48:53">)</operator><operator pos:start="48:54" pos:end="48:54">)</operator> <operator pos:start="48:56" pos:end="48:56">+</operator> <literal type="number" pos:start="48:58" pos:end="48:60">512</literal></expr>;</expr_stmt>



    <if_stmt pos:start="52:5" pos:end="70:5"><if pos:start="52:5" pos:end="70:5">if <condition pos:start="52:8" pos:end="54:44">(<expr pos:start="52:9" pos:end="54:43"><name pos:start="52:9" pos:end="52:26"><name pos:start="52:9" pos:end="52:9">s</name><operator pos:start="52:10" pos:end="52:11">-&gt;</operator><name pos:start="52:12" pos:end="52:26">threads_num_buf</name></name> <operator pos:start="52:28" pos:end="52:29">!=</operator> <name pos:start="52:31" pos:end="52:49"><name pos:start="52:31" pos:end="52:35">avctx</name><operator pos:start="52:36" pos:end="52:37">-&gt;</operator><name pos:start="52:38" pos:end="52:49">thread_count</name></name> <operator pos:start="52:51" pos:end="52:52">||</operator>

        <name pos:start="54:9" pos:end="54:26"><name pos:start="54:9" pos:end="54:9">s</name><operator pos:start="54:10" pos:end="54:11">-&gt;</operator><name pos:start="54:12" pos:end="54:26">thread_buf_size</name></name> <operator pos:start="54:28" pos:end="54:29">!=</operator> <name pos:start="54:31" pos:end="54:43">coef_buf_size</name></expr>)</condition> <block pos:start="54:46" pos:end="70:5">{<block_content pos:start="56:9" pos:end="68:9">

        <expr_stmt pos:start="56:9" pos:end="56:50"><expr pos:start="56:9" pos:end="56:49"><name pos:start="56:9" pos:end="56:26"><name pos:start="56:9" pos:end="56:9">s</name><operator pos:start="56:10" pos:end="56:11">-&gt;</operator><name pos:start="56:12" pos:end="56:26">threads_num_buf</name></name>  <operator pos:start="56:29" pos:end="56:29">=</operator> <name pos:start="56:31" pos:end="56:49"><name pos:start="56:31" pos:end="56:35">avctx</name><operator pos:start="56:36" pos:end="56:37">-&gt;</operator><name pos:start="56:38" pos:end="56:49">thread_count</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="58:9" pos:end="58:44"><expr pos:start="58:9" pos:end="58:43"><name pos:start="58:9" pos:end="58:26"><name pos:start="58:9" pos:end="58:9">s</name><operator pos:start="58:10" pos:end="58:11">-&gt;</operator><name pos:start="58:12" pos:end="58:26">thread_buf_size</name></name>  <operator pos:start="58:29" pos:end="58:29">=</operator> <name pos:start="58:31" pos:end="58:43">coef_buf_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="60:9" pos:end="60:99"><expr pos:start="60:9" pos:end="60:98"><name pos:start="60:9" pos:end="60:21"><name pos:start="60:9" pos:end="60:9">s</name><operator pos:start="60:10" pos:end="60:11">-&gt;</operator><name pos:start="60:12" pos:end="60:21">thread_buf</name></name>       <operator pos:start="60:29" pos:end="60:29">=</operator> <call pos:start="60:31" pos:end="60:98"><name pos:start="60:31" pos:end="60:42">av_realloc_f</name><argument_list pos:start="60:43" pos:end="60:98">(<argument pos:start="60:44" pos:end="60:56"><expr pos:start="60:44" pos:end="60:56"><name pos:start="60:44" pos:end="60:56"><name pos:start="60:44" pos:end="60:44">s</name><operator pos:start="60:45" pos:end="60:46">-&gt;</operator><name pos:start="60:47" pos:end="60:56">thread_buf</name></name></expr></argument>, <argument pos:start="60:59" pos:end="60:77"><expr pos:start="60:59" pos:end="60:77"><name pos:start="60:59" pos:end="60:77"><name pos:start="60:59" pos:end="60:63">avctx</name><operator pos:start="60:64" pos:end="60:65">-&gt;</operator><name pos:start="60:66" pos:end="60:77">thread_count</name></name></expr></argument>, <argument pos:start="60:80" pos:end="60:97"><expr pos:start="60:80" pos:end="60:97"><name pos:start="60:80" pos:end="60:97"><name pos:start="60:80" pos:end="60:80">s</name><operator pos:start="60:81" pos:end="60:82">-&gt;</operator><name pos:start="60:83" pos:end="60:97">thread_buf_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="62:9" pos:end="68:9"><if pos:start="62:9" pos:end="68:9">if <condition pos:start="62:12" pos:end="62:27">(<expr pos:start="62:13" pos:end="62:26"><operator pos:start="62:13" pos:end="62:13">!</operator><name pos:start="62:14" pos:end="62:26"><name pos:start="62:14" pos:end="62:14">s</name><operator pos:start="62:15" pos:end="62:16">-&gt;</operator><name pos:start="62:17" pos:end="62:26">thread_buf</name></name></expr>)</condition> <block pos:start="62:29" pos:end="68:9">{<block_content pos:start="64:13" pos:end="66:35">

            <expr_stmt pos:start="64:13" pos:end="64:81"><expr pos:start="64:13" pos:end="64:80"><call pos:start="64:13" pos:end="64:80"><name pos:start="64:13" pos:end="64:18">av_log</name><argument_list pos:start="64:19" pos:end="64:80">(<argument pos:start="64:20" pos:end="64:27"><expr pos:start="64:20" pos:end="64:27"><name pos:start="64:20" pos:end="64:27"><name pos:start="64:20" pos:end="64:20">s</name><operator pos:start="64:21" pos:end="64:22">-&gt;</operator><name pos:start="64:23" pos:end="64:27">avctx</name></name></expr></argument>, <argument pos:start="64:30" pos:end="64:41"><expr pos:start="64:30" pos:end="64:41"><name pos:start="64:30" pos:end="64:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="64:44" pos:end="64:79"><expr pos:start="64:44" pos:end="64:79"><literal type="string" pos:start="64:44" pos:end="64:79">"thread buffer allocation failure\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="66:13" pos:end="66:35">return <expr pos:start="66:20" pos:end="66:34"><call pos:start="66:20" pos:end="66:34"><name pos:start="66:20" pos:end="66:26">AVERROR</name><argument_list pos:start="66:27" pos:end="66:34">(<argument pos:start="66:28" pos:end="66:33"><expr pos:start="66:28" pos:end="66:33"><name pos:start="66:28" pos:end="66:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="74:5" pos:end="74:27"><expr pos:start="74:5" pos:end="74:26"><call pos:start="74:5" pos:end="74:26"><name pos:start="74:5" pos:end="74:18">align_get_bits</name><argument_list pos:start="74:19" pos:end="74:26">(<argument pos:start="74:20" pos:end="74:25"><expr pos:start="74:20" pos:end="74:25"><operator pos:start="74:20" pos:end="74:20">&amp;</operator><name pos:start="74:21" pos:end="74:25"><name pos:start="74:21" pos:end="74:21">s</name><operator pos:start="74:22" pos:end="74:23">-&gt;</operator><name pos:start="74:24" pos:end="74:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="76:5" pos:end="76:48">/*[DIRAC_STD] 13.5.2 Slices. slice(sx,sy) */</comment>

    <expr_stmt pos:start="78:5" pos:end="78:50"><expr pos:start="78:5" pos:end="78:49"><name pos:start="78:5" pos:end="78:7">buf</name> <operator pos:start="78:9" pos:end="78:9">=</operator> <name pos:start="78:11" pos:end="78:22"><name pos:start="78:11" pos:end="78:11">s</name><operator pos:start="78:12" pos:end="78:13">-&gt;</operator><name pos:start="78:14" pos:end="78:15">gb</name><operator pos:start="78:16" pos:end="78:16">.</operator><name pos:start="78:17" pos:end="78:22">buffer</name></name> <operator pos:start="78:24" pos:end="78:24">+</operator> <call pos:start="78:26" pos:end="78:47"><name pos:start="78:26" pos:end="78:39">get_bits_count</name><argument_list pos:start="78:40" pos:end="78:47">(<argument pos:start="78:41" pos:end="78:46"><expr pos:start="78:41" pos:end="78:46"><operator pos:start="78:41" pos:end="78:41">&amp;</operator><name pos:start="78:42" pos:end="78:46"><name pos:start="78:42" pos:end="78:42">s</name><operator pos:start="78:43" pos:end="78:44">-&gt;</operator><name pos:start="78:45" pos:end="78:46">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="78:48" pos:end="78:48">/</operator><literal type="number" pos:start="78:49" pos:end="78:49">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="80:5" pos:end="80:36"><expr pos:start="80:5" pos:end="80:35"><name pos:start="80:5" pos:end="80:11">bufsize</name> <operator pos:start="80:13" pos:end="80:13">=</operator> <call pos:start="80:15" pos:end="80:35"><name pos:start="80:15" pos:end="80:27">get_bits_left</name><argument_list pos:start="80:28" pos:end="80:35">(<argument pos:start="80:29" pos:end="80:34"><expr pos:start="80:29" pos:end="80:34"><operator pos:start="80:29" pos:end="80:29">&amp;</operator><name pos:start="80:30" pos:end="80:34"><name pos:start="80:30" pos:end="80:30">s</name><operator pos:start="80:31" pos:end="80:32">-&gt;</operator><name pos:start="80:33" pos:end="80:34">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="84:5" pos:end="194:5"><if pos:start="84:5" pos:end="154:5">if <condition pos:start="84:8" pos:end="84:22">(<expr pos:start="84:9" pos:end="84:21"><name pos:start="84:9" pos:end="84:21"><name pos:start="84:9" pos:end="84:9">s</name><operator pos:start="84:10" pos:end="84:11">-&gt;</operator><name pos:start="84:12" pos:end="84:21">hq_picture</name></name></expr>)</condition> <block pos:start="84:24" pos:end="154:5">{<block_content pos:start="86:9" pos:end="152:76">

        <decl_stmt pos:start="86:9" pos:end="86:14"><decl pos:start="86:9" pos:end="86:13"><type pos:start="86:9" pos:end="86:11"><name pos:start="86:9" pos:end="86:11">int</name></type> <name pos:start="86:13" pos:end="86:13">i</name></decl>;</decl_stmt>



        <for pos:start="90:9" pos:end="138:9">for <control pos:start="90:13" pos:end="90:71">(<init pos:start="90:14" pos:end="90:25"><expr pos:start="90:14" pos:end="90:24"><name pos:start="90:14" pos:end="90:20">slice_y</name> <operator pos:start="90:22" pos:end="90:22">=</operator> <literal type="number" pos:start="90:24" pos:end="90:24">0</literal></expr>;</init> <condition pos:start="90:27" pos:end="90:60"><expr pos:start="90:27" pos:end="90:59"><name pos:start="90:27" pos:end="90:33">bufsize</name> <operator pos:start="90:35" pos:end="90:35">&gt;</operator> <literal type="number" pos:start="90:37" pos:end="90:37">0</literal> <operator pos:start="90:39" pos:end="90:40">&amp;&amp;</operator> <name pos:start="90:42" pos:end="90:48">slice_y</name> <operator pos:start="90:50" pos:end="90:50">&lt;</operator> <name pos:start="90:52" pos:end="90:59"><name pos:start="90:52" pos:end="90:52">s</name><operator pos:start="90:53" pos:end="90:54">-&gt;</operator><name pos:start="90:55" pos:end="90:59">num_y</name></name></expr>;</condition> <incr pos:start="90:62" pos:end="90:70"><expr pos:start="90:62" pos:end="90:70"><name pos:start="90:62" pos:end="90:68">slice_y</name><operator pos:start="90:69" pos:end="90:70">++</operator></expr></incr>)</control> <block pos:start="90:73" pos:end="138:9">{<block_content pos:start="92:13" pos:end="136:13">

            <for pos:start="92:13" pos:end="136:13">for <control pos:start="92:17" pos:end="92:75">(<init pos:start="92:18" pos:end="92:29"><expr pos:start="92:18" pos:end="92:28"><name pos:start="92:18" pos:end="92:24">slice_x</name> <operator pos:start="92:26" pos:end="92:26">=</operator> <literal type="number" pos:start="92:28" pos:end="92:28">0</literal></expr>;</init> <condition pos:start="92:31" pos:end="92:64"><expr pos:start="92:31" pos:end="92:63"><name pos:start="92:31" pos:end="92:37">bufsize</name> <operator pos:start="92:39" pos:end="92:39">&gt;</operator> <literal type="number" pos:start="92:41" pos:end="92:41">0</literal> <operator pos:start="92:43" pos:end="92:44">&amp;&amp;</operator> <name pos:start="92:46" pos:end="92:52">slice_x</name> <operator pos:start="92:54" pos:end="92:54">&lt;</operator> <name pos:start="92:56" pos:end="92:63"><name pos:start="92:56" pos:end="92:56">s</name><operator pos:start="92:57" pos:end="92:58">-&gt;</operator><name pos:start="92:59" pos:end="92:63">num_x</name></name></expr>;</condition> <incr pos:start="92:66" pos:end="92:74"><expr pos:start="92:66" pos:end="92:74"><name pos:start="92:66" pos:end="92:72">slice_x</name><operator pos:start="92:73" pos:end="92:74">++</operator></expr></incr>)</control> <block pos:start="92:77" pos:end="136:13">{<block_content pos:start="94:17" pos:end="134:32">

                <expr_stmt pos:start="94:17" pos:end="94:56"><expr pos:start="94:17" pos:end="94:55"><name pos:start="94:17" pos:end="94:21">bytes</name> <operator pos:start="94:23" pos:end="94:23">=</operator> <name pos:start="94:25" pos:end="94:51"><name pos:start="94:25" pos:end="94:25">s</name><operator pos:start="94:26" pos:end="94:27">-&gt;</operator><name pos:start="94:28" pos:end="94:38">highquality</name><operator pos:start="94:39" pos:end="94:39">.</operator><name pos:start="94:40" pos:end="94:51">prefix_bytes</name></name> <operator pos:start="94:53" pos:end="94:53">+</operator> <literal type="number" pos:start="94:55" pos:end="94:55">1</literal></expr>;</expr_stmt>

                <for pos:start="96:17" pos:end="102:17">for <control pos:start="96:21" pos:end="96:39">(<init pos:start="96:22" pos:end="96:27"><expr pos:start="96:22" pos:end="96:26"><name pos:start="96:22" pos:end="96:22">i</name> <operator pos:start="96:24" pos:end="96:24">=</operator> <literal type="number" pos:start="96:26" pos:end="96:26">0</literal></expr>;</init> <condition pos:start="96:29" pos:end="96:34"><expr pos:start="96:29" pos:end="96:33"><name pos:start="96:29" pos:end="96:29">i</name> <operator pos:start="96:31" pos:end="96:31">&lt;</operator> <literal type="number" pos:start="96:33" pos:end="96:33">3</literal></expr>;</condition> <incr pos:start="96:36" pos:end="96:38"><expr pos:start="96:36" pos:end="96:38"><name pos:start="96:36" pos:end="96:36">i</name><operator pos:start="96:37" pos:end="96:38">++</operator></expr></incr>)</control> <block pos:start="96:41" pos:end="102:17">{<block_content pos:start="98:21" pos:end="100:77">

                    <if_stmt pos:start="98:21" pos:end="100:77"><if pos:start="98:21" pos:end="100:77">if <condition pos:start="98:24" pos:end="98:43">(<expr pos:start="98:25" pos:end="98:42"><name pos:start="98:25" pos:end="98:29">bytes</name> <operator pos:start="98:31" pos:end="98:32">&lt;=</operator> <name pos:start="98:34" pos:end="98:40">bufsize</name><operator pos:start="98:41" pos:end="98:41">/</operator><literal type="number" pos:start="98:42" pos:end="98:42">8</literal></expr>)</condition><block type="pseudo" pos:start="100:25" pos:end="100:77"><block_content pos:start="100:25" pos:end="100:77">

                        <expr_stmt pos:start="100:25" pos:end="100:77"><expr pos:start="100:25" pos:end="100:76"><name pos:start="100:25" pos:end="100:29">bytes</name> <operator pos:start="100:31" pos:end="100:32">+=</operator> <name pos:start="100:34" pos:end="100:43"><name pos:start="100:34" pos:end="100:36">buf</name><index pos:start="100:37" pos:end="100:43">[<expr pos:start="100:38" pos:end="100:42"><name pos:start="100:38" pos:end="100:42">bytes</name></expr>]</index></name> <operator pos:start="100:45" pos:end="100:45">*</operator> <name pos:start="100:47" pos:end="100:72"><name pos:start="100:47" pos:end="100:47">s</name><operator pos:start="100:48" pos:end="100:49">-&gt;</operator><name pos:start="100:50" pos:end="100:60">highquality</name><operator pos:start="100:61" pos:end="100:61">.</operator><name pos:start="100:62" pos:end="100:72">size_scaler</name></name> <operator pos:start="100:74" pos:end="100:74">+</operator> <literal type="number" pos:start="100:76" pos:end="100:76">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="104:17" pos:end="110:17"><if pos:start="104:17" pos:end="110:17">if <condition pos:start="104:20" pos:end="104:58">(<expr pos:start="104:21" pos:end="104:57"><name pos:start="104:21" pos:end="104:25">bytes</name> <operator pos:start="104:27" pos:end="104:28">&gt;=</operator> <name pos:start="104:30" pos:end="104:36">INT_MAX</name> <operator pos:start="104:38" pos:end="104:39">||</operator> <name pos:start="104:41" pos:end="104:45">bytes</name><operator pos:start="104:46" pos:end="104:46">*</operator><literal type="number" pos:start="104:47" pos:end="104:47">8</literal> <operator pos:start="104:49" pos:end="104:49">&gt;</operator> <name pos:start="104:51" pos:end="104:57">bufsize</name></expr>)</condition> <block pos:start="104:60" pos:end="110:17">{<block_content pos:start="106:21" pos:end="108:47">

                    <expr_stmt pos:start="106:21" pos:end="106:71"><expr pos:start="106:21" pos:end="106:70"><call pos:start="106:21" pos:end="106:70"><name pos:start="106:21" pos:end="106:26">av_log</name><argument_list pos:start="106:27" pos:end="106:70">(<argument pos:start="106:28" pos:end="106:35"><expr pos:start="106:28" pos:end="106:35"><name pos:start="106:28" pos:end="106:35"><name pos:start="106:28" pos:end="106:28">s</name><operator pos:start="106:29" pos:end="106:30">-&gt;</operator><name pos:start="106:31" pos:end="106:35">avctx</name></name></expr></argument>, <argument pos:start="106:38" pos:end="106:49"><expr pos:start="106:38" pos:end="106:49"><name pos:start="106:38" pos:end="106:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="106:52" pos:end="106:69"><expr pos:start="106:52" pos:end="106:69"><literal type="string" pos:start="106:52" pos:end="106:69">"too many bytes\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="108:21" pos:end="108:47">return <expr pos:start="108:28" pos:end="108:46"><name pos:start="108:28" pos:end="108:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="114:17" pos:end="114:50"><expr pos:start="114:17" pos:end="114:49"><name pos:start="114:17" pos:end="114:33"><name pos:start="114:17" pos:end="114:22">slices</name><index pos:start="114:23" pos:end="114:33">[<expr pos:start="114:24" pos:end="114:32"><name pos:start="114:24" pos:end="114:32">slice_num</name></expr>]</index></name><operator pos:start="114:34" pos:end="114:34">.</operator><name pos:start="114:35" pos:end="114:39">bytes</name>   <operator pos:start="114:43" pos:end="114:43">=</operator> <name pos:start="114:45" pos:end="114:49">bytes</name></expr>;</expr_stmt>

                <expr_stmt pos:start="116:17" pos:end="116:52"><expr pos:start="116:17" pos:end="116:51"><name pos:start="116:17" pos:end="116:33"><name pos:start="116:17" pos:end="116:22">slices</name><index pos:start="116:23" pos:end="116:33">[<expr pos:start="116:24" pos:end="116:32"><name pos:start="116:24" pos:end="116:32">slice_num</name></expr>]</index></name><operator pos:start="116:34" pos:end="116:34">.</operator><name pos:start="116:35" pos:end="116:41">slice_x</name> <operator pos:start="116:43" pos:end="116:43">=</operator> <name pos:start="116:45" pos:end="116:51">slice_x</name></expr>;</expr_stmt>

                <expr_stmt pos:start="118:17" pos:end="118:52"><expr pos:start="118:17" pos:end="118:51"><name pos:start="118:17" pos:end="118:33"><name pos:start="118:17" pos:end="118:22">slices</name><index pos:start="118:23" pos:end="118:33">[<expr pos:start="118:24" pos:end="118:32"><name pos:start="118:24" pos:end="118:32">slice_num</name></expr>]</index></name><operator pos:start="118:34" pos:end="118:34">.</operator><name pos:start="118:35" pos:end="118:41">slice_y</name> <operator pos:start="118:43" pos:end="118:43">=</operator> <name pos:start="118:45" pos:end="118:51">slice_y</name></expr>;</expr_stmt>

                <expr_stmt pos:start="120:17" pos:end="120:67"><expr pos:start="120:17" pos:end="120:66"><call pos:start="120:17" pos:end="120:66"><name pos:start="120:17" pos:end="120:29">init_get_bits</name><argument_list pos:start="120:30" pos:end="120:66">(<argument pos:start="120:31" pos:end="120:51"><expr pos:start="120:31" pos:end="120:51"><operator pos:start="120:31" pos:end="120:31">&amp;</operator><name pos:start="120:32" pos:end="120:48"><name pos:start="120:32" pos:end="120:37">slices</name><index pos:start="120:38" pos:end="120:48">[<expr pos:start="120:39" pos:end="120:47"><name pos:start="120:39" pos:end="120:47">slice_num</name></expr>]</index></name><operator pos:start="120:49" pos:end="120:49">.</operator><name pos:start="120:50" pos:end="120:51">gb</name></expr></argument>, <argument pos:start="120:54" pos:end="120:56"><expr pos:start="120:54" pos:end="120:56"><name pos:start="120:54" pos:end="120:56">buf</name></expr></argument>, <argument pos:start="120:59" pos:end="120:65"><expr pos:start="120:59" pos:end="120:65"><name pos:start="120:59" pos:end="120:65">bufsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="122:17" pos:end="122:28"><expr pos:start="122:17" pos:end="122:27"><name pos:start="122:17" pos:end="122:25">slice_num</name><operator pos:start="122:26" pos:end="122:27">++</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="126:17" pos:end="126:33"><expr pos:start="126:17" pos:end="126:32"><name pos:start="126:17" pos:end="126:19">buf</name>     <operator pos:start="126:25" pos:end="126:26">+=</operator> <name pos:start="126:28" pos:end="126:32">bytes</name></expr>;</expr_stmt>

                <if_stmt pos:start="128:17" pos:end="134:32"><if pos:start="128:17" pos:end="130:39">if <condition pos:start="128:20" pos:end="128:39">(<expr pos:start="128:21" pos:end="128:38"><name pos:start="128:21" pos:end="128:27">bufsize</name><operator pos:start="128:28" pos:end="128:28">/</operator><literal type="number" pos:start="128:29" pos:end="128:29">8</literal> <operator pos:start="128:31" pos:end="128:32">&gt;=</operator> <name pos:start="128:34" pos:end="128:38">bytes</name></expr>)</condition><block type="pseudo" pos:start="130:21" pos:end="130:39"><block_content pos:start="130:21" pos:end="130:39">

                    <expr_stmt pos:start="130:21" pos:end="130:39"><expr pos:start="130:21" pos:end="130:38"><name pos:start="130:21" pos:end="130:27">bufsize</name> <operator pos:start="130:29" pos:end="130:30">-=</operator> <name pos:start="130:32" pos:end="130:36">bytes</name><operator pos:start="130:37" pos:end="130:37">*</operator><literal type="number" pos:start="130:38" pos:end="130:38">8</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="132:17" pos:end="134:32">else<block type="pseudo" pos:start="134:21" pos:end="134:32"><block_content pos:start="134:21" pos:end="134:32">

                    <expr_stmt pos:start="134:21" pos:end="134:32"><expr pos:start="134:21" pos:end="134:31"><name pos:start="134:21" pos:end="134:27">bufsize</name> <operator pos:start="134:29" pos:end="134:29">=</operator> <literal type="number" pos:start="134:31" pos:end="134:31">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <if_stmt pos:start="142:9" pos:end="148:9"><if pos:start="142:9" pos:end="148:9">if <condition pos:start="142:12" pos:end="142:43">(<expr pos:start="142:13" pos:end="142:42"><name pos:start="142:13" pos:end="142:20"><name pos:start="142:13" pos:end="142:13">s</name><operator pos:start="142:14" pos:end="142:15">-&gt;</operator><name pos:start="142:16" pos:end="142:20">num_x</name></name><operator pos:start="142:21" pos:end="142:21">*</operator><name pos:start="142:22" pos:end="142:29"><name pos:start="142:22" pos:end="142:22">s</name><operator pos:start="142:23" pos:end="142:24">-&gt;</operator><name pos:start="142:25" pos:end="142:29">num_y</name></name> <operator pos:start="142:31" pos:end="142:32">!=</operator> <name pos:start="142:34" pos:end="142:42">slice_num</name></expr>)</condition> <block pos:start="142:45" pos:end="148:9">{<block_content pos:start="144:13" pos:end="146:39">

            <expr_stmt pos:start="144:13" pos:end="144:63"><expr pos:start="144:13" pos:end="144:62"><call pos:start="144:13" pos:end="144:62"><name pos:start="144:13" pos:end="144:18">av_log</name><argument_list pos:start="144:19" pos:end="144:62">(<argument pos:start="144:20" pos:end="144:27"><expr pos:start="144:20" pos:end="144:27"><name pos:start="144:20" pos:end="144:27"><name pos:start="144:20" pos:end="144:20">s</name><operator pos:start="144:21" pos:end="144:22">-&gt;</operator><name pos:start="144:23" pos:end="144:27">avctx</name></name></expr></argument>, <argument pos:start="144:30" pos:end="144:41"><expr pos:start="144:30" pos:end="144:41"><name pos:start="144:30" pos:end="144:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="144:44" pos:end="144:61"><expr pos:start="144:44" pos:end="144:61"><literal type="string" pos:start="144:44" pos:end="144:61">"too few slices\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="146:13" pos:end="146:39">return <expr pos:start="146:20" pos:end="146:38"><name pos:start="146:20" pos:end="146:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="152:9" pos:end="152:76"><expr pos:start="152:9" pos:end="152:75"><call pos:start="152:9" pos:end="152:75"><name pos:start="152:9" pos:end="152:23"><name pos:start="152:9" pos:end="152:13">avctx</name><operator pos:start="152:14" pos:end="152:15">-&gt;</operator><name pos:start="152:16" pos:end="152:23">execute2</name></name><argument_list pos:start="152:24" pos:end="152:75">(<argument pos:start="152:25" pos:end="152:29"><expr pos:start="152:25" pos:end="152:29"><name pos:start="152:25" pos:end="152:29">avctx</name></expr></argument>, <argument pos:start="152:32" pos:end="152:50"><expr pos:start="152:32" pos:end="152:50"><name pos:start="152:32" pos:end="152:50">decode_hq_slice_row</name></expr></argument>, <argument pos:start="152:53" pos:end="152:58"><expr pos:start="152:53" pos:end="152:58"><name pos:start="152:53" pos:end="152:58">slices</name></expr></argument>, <argument pos:start="152:61" pos:end="152:64"><expr pos:start="152:61" pos:end="152:64"><name pos:start="152:61" pos:end="152:64">NULL</name></expr></argument>, <argument pos:start="152:67" pos:end="152:74"><expr pos:start="152:67" pos:end="152:74"><name pos:start="152:67" pos:end="152:74"><name pos:start="152:67" pos:end="152:67">s</name><operator pos:start="152:68" pos:end="152:69">-&gt;</operator><name pos:start="152:70" pos:end="152:74">num_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="154:7" pos:end="194:5">else <block pos:start="154:12" pos:end="194:5">{<block_content pos:start="156:9" pos:end="192:43">

        <for pos:start="156:9" pos:end="188:9">for <control pos:start="156:13" pos:end="156:71">(<init pos:start="156:14" pos:end="156:25"><expr pos:start="156:14" pos:end="156:24"><name pos:start="156:14" pos:end="156:20">slice_y</name> <operator pos:start="156:22" pos:end="156:22">=</operator> <literal type="number" pos:start="156:24" pos:end="156:24">0</literal></expr>;</init> <condition pos:start="156:27" pos:end="156:60"><expr pos:start="156:27" pos:end="156:59"><name pos:start="156:27" pos:end="156:33">bufsize</name> <operator pos:start="156:35" pos:end="156:35">&gt;</operator> <literal type="number" pos:start="156:37" pos:end="156:37">0</literal> <operator pos:start="156:39" pos:end="156:40">&amp;&amp;</operator> <name pos:start="156:42" pos:end="156:48">slice_y</name> <operator pos:start="156:50" pos:end="156:50">&lt;</operator> <name pos:start="156:52" pos:end="156:59"><name pos:start="156:52" pos:end="156:52">s</name><operator pos:start="156:53" pos:end="156:54">-&gt;</operator><name pos:start="156:55" pos:end="156:59">num_y</name></name></expr>;</condition> <incr pos:start="156:62" pos:end="156:70"><expr pos:start="156:62" pos:end="156:70"><name pos:start="156:62" pos:end="156:68">slice_y</name><operator pos:start="156:69" pos:end="156:70">++</operator></expr></incr>)</control> <block pos:start="156:73" pos:end="188:9">{<block_content pos:start="158:13" pos:end="186:13">

            <for pos:start="158:13" pos:end="186:13">for <control pos:start="158:17" pos:end="158:75">(<init pos:start="158:18" pos:end="158:29"><expr pos:start="158:18" pos:end="158:28"><name pos:start="158:18" pos:end="158:24">slice_x</name> <operator pos:start="158:26" pos:end="158:26">=</operator> <literal type="number" pos:start="158:28" pos:end="158:28">0</literal></expr>;</init> <condition pos:start="158:31" pos:end="158:64"><expr pos:start="158:31" pos:end="158:63"><name pos:start="158:31" pos:end="158:37">bufsize</name> <operator pos:start="158:39" pos:end="158:39">&gt;</operator> <literal type="number" pos:start="158:41" pos:end="158:41">0</literal> <operator pos:start="158:43" pos:end="158:44">&amp;&amp;</operator> <name pos:start="158:46" pos:end="158:52">slice_x</name> <operator pos:start="158:54" pos:end="158:54">&lt;</operator> <name pos:start="158:56" pos:end="158:63"><name pos:start="158:56" pos:end="158:56">s</name><operator pos:start="158:57" pos:end="158:58">-&gt;</operator><name pos:start="158:59" pos:end="158:63">num_x</name></name></expr>;</condition> <incr pos:start="158:66" pos:end="158:74"><expr pos:start="158:66" pos:end="158:74"><name pos:start="158:66" pos:end="158:72">slice_x</name><operator pos:start="158:73" pos:end="158:74">++</operator></expr></incr>)</control> <block pos:start="158:77" pos:end="186:13">{<block_content pos:start="160:17" pos:end="184:32">

                <expr_stmt pos:start="160:17" pos:end="162:95"><expr pos:start="160:17" pos:end="162:94"><name pos:start="160:17" pos:end="160:21">bytes</name> <operator pos:start="160:23" pos:end="160:23">=</operator> <operator pos:start="160:25" pos:end="160:25">(</operator><name pos:start="160:26" pos:end="160:34">slice_num</name><operator pos:start="160:35" pos:end="160:35">+</operator><literal type="number" pos:start="160:36" pos:end="160:36">1</literal><operator pos:start="160:37" pos:end="160:37">)</operator> <operator pos:start="160:39" pos:end="160:39">*</operator> <operator pos:start="160:41" pos:end="160:41">(</operator><name pos:start="160:42" pos:end="160:48">int64_t</name><operator pos:start="160:49" pos:end="160:49">)</operator><name pos:start="160:50" pos:end="160:70"><name pos:start="160:50" pos:end="160:50">s</name><operator pos:start="160:51" pos:end="160:52">-&gt;</operator><name pos:start="160:53" pos:end="160:60">lowdelay</name><operator pos:start="160:61" pos:end="160:61">.</operator><name pos:start="160:62" pos:end="160:66">bytes</name><operator pos:start="160:67" pos:end="160:67">.</operator><name pos:start="160:68" pos:end="160:70">num</name></name> <operator pos:start="160:72" pos:end="160:72">/</operator> <name pos:start="160:74" pos:end="160:94"><name pos:start="160:74" pos:end="160:74">s</name><operator pos:start="160:75" pos:end="160:76">-&gt;</operator><name pos:start="160:77" pos:end="160:84">lowdelay</name><operator pos:start="160:85" pos:end="160:85">.</operator><name pos:start="160:86" pos:end="160:90">bytes</name><operator pos:start="160:91" pos:end="160:91">.</operator><name pos:start="160:92" pos:end="160:94">den</name></name>

                       <operator pos:start="162:24" pos:end="162:24">-</operator> <name pos:start="162:26" pos:end="162:34">slice_num</name>    <operator pos:start="162:39" pos:end="162:39">*</operator> <operator pos:start="162:41" pos:end="162:41">(</operator><name pos:start="162:42" pos:end="162:48">int64_t</name><operator pos:start="162:49" pos:end="162:49">)</operator><name pos:start="162:50" pos:end="162:70"><name pos:start="162:50" pos:end="162:50">s</name><operator pos:start="162:51" pos:end="162:52">-&gt;</operator><name pos:start="162:53" pos:end="162:60">lowdelay</name><operator pos:start="162:61" pos:end="162:61">.</operator><name pos:start="162:62" pos:end="162:66">bytes</name><operator pos:start="162:67" pos:end="162:67">.</operator><name pos:start="162:68" pos:end="162:70">num</name></name> <operator pos:start="162:72" pos:end="162:72">/</operator> <name pos:start="162:74" pos:end="162:94"><name pos:start="162:74" pos:end="162:74">s</name><operator pos:start="162:75" pos:end="162:76">-&gt;</operator><name pos:start="162:77" pos:end="162:84">lowdelay</name><operator pos:start="162:85" pos:end="162:85">.</operator><name pos:start="162:86" pos:end="162:90">bytes</name><operator pos:start="162:91" pos:end="162:91">.</operator><name pos:start="162:92" pos:end="162:94">den</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="164:17" pos:end="164:50"><expr pos:start="164:17" pos:end="164:49"><name pos:start="164:17" pos:end="164:33"><name pos:start="164:17" pos:end="164:22">slices</name><index pos:start="164:23" pos:end="164:33">[<expr pos:start="164:24" pos:end="164:32"><name pos:start="164:24" pos:end="164:32">slice_num</name></expr>]</index></name><operator pos:start="164:34" pos:end="164:34">.</operator><name pos:start="164:35" pos:end="164:39">bytes</name>   <operator pos:start="164:43" pos:end="164:43">=</operator> <name pos:start="164:45" pos:end="164:49">bytes</name></expr>;</expr_stmt>

                <expr_stmt pos:start="166:17" pos:end="166:52"><expr pos:start="166:17" pos:end="166:51"><name pos:start="166:17" pos:end="166:33"><name pos:start="166:17" pos:end="166:22">slices</name><index pos:start="166:23" pos:end="166:33">[<expr pos:start="166:24" pos:end="166:32"><name pos:start="166:24" pos:end="166:32">slice_num</name></expr>]</index></name><operator pos:start="166:34" pos:end="166:34">.</operator><name pos:start="166:35" pos:end="166:41">slice_x</name> <operator pos:start="166:43" pos:end="166:43">=</operator> <name pos:start="166:45" pos:end="166:51">slice_x</name></expr>;</expr_stmt>

                <expr_stmt pos:start="168:17" pos:end="168:52"><expr pos:start="168:17" pos:end="168:51"><name pos:start="168:17" pos:end="168:33"><name pos:start="168:17" pos:end="168:22">slices</name><index pos:start="168:23" pos:end="168:33">[<expr pos:start="168:24" pos:end="168:32"><name pos:start="168:24" pos:end="168:32">slice_num</name></expr>]</index></name><operator pos:start="168:34" pos:end="168:34">.</operator><name pos:start="168:35" pos:end="168:41">slice_y</name> <operator pos:start="168:43" pos:end="168:43">=</operator> <name pos:start="168:45" pos:end="168:51">slice_y</name></expr>;</expr_stmt>

                <expr_stmt pos:start="170:17" pos:end="170:67"><expr pos:start="170:17" pos:end="170:66"><call pos:start="170:17" pos:end="170:66"><name pos:start="170:17" pos:end="170:29">init_get_bits</name><argument_list pos:start="170:30" pos:end="170:66">(<argument pos:start="170:31" pos:end="170:51"><expr pos:start="170:31" pos:end="170:51"><operator pos:start="170:31" pos:end="170:31">&amp;</operator><name pos:start="170:32" pos:end="170:48"><name pos:start="170:32" pos:end="170:37">slices</name><index pos:start="170:38" pos:end="170:48">[<expr pos:start="170:39" pos:end="170:47"><name pos:start="170:39" pos:end="170:47">slice_num</name></expr>]</index></name><operator pos:start="170:49" pos:end="170:49">.</operator><name pos:start="170:50" pos:end="170:51">gb</name></expr></argument>, <argument pos:start="170:54" pos:end="170:56"><expr pos:start="170:54" pos:end="170:56"><name pos:start="170:54" pos:end="170:56">buf</name></expr></argument>, <argument pos:start="170:59" pos:end="170:65"><expr pos:start="170:59" pos:end="170:65"><name pos:start="170:59" pos:end="170:65">bufsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="172:17" pos:end="172:28"><expr pos:start="172:17" pos:end="172:27"><name pos:start="172:17" pos:end="172:25">slice_num</name><operator pos:start="172:26" pos:end="172:27">++</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="176:17" pos:end="176:33"><expr pos:start="176:17" pos:end="176:32"><name pos:start="176:17" pos:end="176:19">buf</name>     <operator pos:start="176:25" pos:end="176:26">+=</operator> <name pos:start="176:28" pos:end="176:32">bytes</name></expr>;</expr_stmt>

                <if_stmt pos:start="178:17" pos:end="184:32"><if pos:start="178:17" pos:end="180:39">if <condition pos:start="178:20" pos:end="178:39">(<expr pos:start="178:21" pos:end="178:38"><name pos:start="178:21" pos:end="178:27">bufsize</name><operator pos:start="178:28" pos:end="178:28">/</operator><literal type="number" pos:start="178:29" pos:end="178:29">8</literal> <operator pos:start="178:31" pos:end="178:32">&gt;=</operator> <name pos:start="178:34" pos:end="178:38">bytes</name></expr>)</condition><block type="pseudo" pos:start="180:21" pos:end="180:39"><block_content pos:start="180:21" pos:end="180:39">

                    <expr_stmt pos:start="180:21" pos:end="180:39"><expr pos:start="180:21" pos:end="180:38"><name pos:start="180:21" pos:end="180:27">bufsize</name> <operator pos:start="180:29" pos:end="180:30">-=</operator> <name pos:start="180:32" pos:end="180:36">bytes</name><operator pos:start="180:37" pos:end="180:37">*</operator><literal type="number" pos:start="180:38" pos:end="180:38">8</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="182:17" pos:end="184:32">else<block type="pseudo" pos:start="184:21" pos:end="184:32"><block_content pos:start="184:21" pos:end="184:32">

                    <expr_stmt pos:start="184:21" pos:end="184:32"><expr pos:start="184:21" pos:end="184:31"><name pos:start="184:21" pos:end="184:27">bufsize</name> <operator pos:start="184:29" pos:end="184:29">=</operator> <literal type="number" pos:start="184:31" pos:end="184:31">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="190:9" pos:end="192:43"><expr pos:start="190:9" pos:end="192:42"><call pos:start="190:9" pos:end="192:42"><name pos:start="190:9" pos:end="190:22"><name pos:start="190:9" pos:end="190:13">avctx</name><operator pos:start="190:14" pos:end="190:15">-&gt;</operator><name pos:start="190:16" pos:end="190:22">execute</name></name><argument_list pos:start="190:23" pos:end="192:42">(<argument pos:start="190:24" pos:end="190:28"><expr pos:start="190:24" pos:end="190:28"><name pos:start="190:24" pos:end="190:28">avctx</name></expr></argument>, <argument pos:start="190:31" pos:end="190:51"><expr pos:start="190:31" pos:end="190:51"><name pos:start="190:31" pos:end="190:51">decode_lowdelay_slice</name></expr></argument>, <argument pos:start="190:54" pos:end="190:59"><expr pos:start="190:54" pos:end="190:59"><name pos:start="190:54" pos:end="190:59">slices</name></expr></argument>, <argument pos:start="190:62" pos:end="190:65"><expr pos:start="190:62" pos:end="190:65"><name pos:start="190:62" pos:end="190:65">NULL</name></expr></argument>, <argument pos:start="190:68" pos:end="190:76"><expr pos:start="190:68" pos:end="190:76"><name pos:start="190:68" pos:end="190:76">slice_num</name></expr></argument>,

                       <argument pos:start="192:24" pos:end="192:41"><expr pos:start="192:24" pos:end="192:41"><sizeof pos:start="192:24" pos:end="192:41">sizeof<argument_list pos:start="192:30" pos:end="192:41">(<argument pos:start="192:31" pos:end="192:40"><expr pos:start="192:31" pos:end="192:40"><name pos:start="192:31" pos:end="192:40">DiracSlice</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="192:45" pos:end="192:75">/* [DIRAC_STD] 13.5.2 Slices */</comment>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="198:5" pos:end="218:5"><if pos:start="198:5" pos:end="218:5">if <condition pos:start="198:8" pos:end="198:25">(<expr pos:start="198:9" pos:end="198:24"><name pos:start="198:9" pos:end="198:24"><name pos:start="198:9" pos:end="198:9">s</name><operator pos:start="198:10" pos:end="198:11">-&gt;</operator><name pos:start="198:12" pos:end="198:24">dc_prediction</name></name></expr>)</condition> <block pos:start="198:27" pos:end="218:5">{<block_content pos:start="200:9" pos:end="216:9">

        <if_stmt pos:start="200:9" pos:end="216:9"><if pos:start="200:9" pos:end="208:9">if <condition pos:start="200:12" pos:end="200:22">(<expr pos:start="200:13" pos:end="200:21"><name pos:start="200:13" pos:end="200:21"><name pos:start="200:13" pos:end="200:13">s</name><operator pos:start="200:14" pos:end="200:15">-&gt;</operator><name pos:start="200:16" pos:end="200:21">pshift</name></name></expr>)</condition> <block pos:start="200:24" pos:end="208:9">{<block_content pos:start="202:13" pos:end="206:60">

            <expr_stmt pos:start="202:13" pos:end="202:60"><expr pos:start="202:13" pos:end="202:59"><call pos:start="202:13" pos:end="202:59"><name pos:start="202:13" pos:end="202:34">intra_dc_prediction_10</name><argument_list pos:start="202:35" pos:end="202:59">(<argument pos:start="202:36" pos:end="202:58"><expr pos:start="202:36" pos:end="202:58"><operator pos:start="202:36" pos:end="202:36">&amp;</operator><name pos:start="202:37" pos:end="202:47"><name pos:start="202:37" pos:end="202:37">s</name><operator pos:start="202:38" pos:end="202:39">-&gt;</operator><name pos:start="202:40" pos:end="202:44">plane</name><index pos:start="202:45" pos:end="202:47">[<expr pos:start="202:46" pos:end="202:46"><literal type="number" pos:start="202:46" pos:end="202:46">0</literal></expr>]</index></name><operator pos:start="202:48" pos:end="202:48">.</operator><name pos:start="202:49" pos:end="202:58"><name pos:start="202:49" pos:end="202:52">band</name><index pos:start="202:53" pos:end="202:55">[<expr pos:start="202:54" pos:end="202:54"><literal type="number" pos:start="202:54" pos:end="202:54">0</literal></expr>]</index><index pos:start="202:56" pos:end="202:58">[<expr pos:start="202:57" pos:end="202:57"><literal type="number" pos:start="202:57" pos:end="202:57">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="202:62" pos:end="202:105">/* [DIRAC_STD] 13.3 intra_dc_prediction() */</comment>

            <expr_stmt pos:start="204:13" pos:end="204:60"><expr pos:start="204:13" pos:end="204:59"><call pos:start="204:13" pos:end="204:59"><name pos:start="204:13" pos:end="204:34">intra_dc_prediction_10</name><argument_list pos:start="204:35" pos:end="204:59">(<argument pos:start="204:36" pos:end="204:58"><expr pos:start="204:36" pos:end="204:58"><operator pos:start="204:36" pos:end="204:36">&amp;</operator><name pos:start="204:37" pos:end="204:47"><name pos:start="204:37" pos:end="204:37">s</name><operator pos:start="204:38" pos:end="204:39">-&gt;</operator><name pos:start="204:40" pos:end="204:44">plane</name><index pos:start="204:45" pos:end="204:47">[<expr pos:start="204:46" pos:end="204:46"><literal type="number" pos:start="204:46" pos:end="204:46">1</literal></expr>]</index></name><operator pos:start="204:48" pos:end="204:48">.</operator><name pos:start="204:49" pos:end="204:58"><name pos:start="204:49" pos:end="204:52">band</name><index pos:start="204:53" pos:end="204:55">[<expr pos:start="204:54" pos:end="204:54"><literal type="number" pos:start="204:54" pos:end="204:54">0</literal></expr>]</index><index pos:start="204:56" pos:end="204:58">[<expr pos:start="204:57" pos:end="204:57"><literal type="number" pos:start="204:57" pos:end="204:57">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="204:62" pos:end="204:105">/* [DIRAC_STD] 13.3 intra_dc_prediction() */</comment>

            <expr_stmt pos:start="206:13" pos:end="206:60"><expr pos:start="206:13" pos:end="206:59"><call pos:start="206:13" pos:end="206:59"><name pos:start="206:13" pos:end="206:34">intra_dc_prediction_10</name><argument_list pos:start="206:35" pos:end="206:59">(<argument pos:start="206:36" pos:end="206:58"><expr pos:start="206:36" pos:end="206:58"><operator pos:start="206:36" pos:end="206:36">&amp;</operator><name pos:start="206:37" pos:end="206:47"><name pos:start="206:37" pos:end="206:37">s</name><operator pos:start="206:38" pos:end="206:39">-&gt;</operator><name pos:start="206:40" pos:end="206:44">plane</name><index pos:start="206:45" pos:end="206:47">[<expr pos:start="206:46" pos:end="206:46"><literal type="number" pos:start="206:46" pos:end="206:46">2</literal></expr>]</index></name><operator pos:start="206:48" pos:end="206:48">.</operator><name pos:start="206:49" pos:end="206:58"><name pos:start="206:49" pos:end="206:52">band</name><index pos:start="206:53" pos:end="206:55">[<expr pos:start="206:54" pos:end="206:54"><literal type="number" pos:start="206:54" pos:end="206:54">0</literal></expr>]</index><index pos:start="206:56" pos:end="206:58">[<expr pos:start="206:57" pos:end="206:57"><literal type="number" pos:start="206:57" pos:end="206:57">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="206:62" pos:end="206:105">/* [DIRAC_STD] 13.3 intra_dc_prediction() */</comment>

        </block_content>}</block></if> <else pos:start="208:11" pos:end="216:9">else <block pos:start="208:16" pos:end="216:9">{<block_content pos:start="210:13" pos:end="214:59">

            <expr_stmt pos:start="210:13" pos:end="210:59"><expr pos:start="210:13" pos:end="210:58"><call pos:start="210:13" pos:end="210:58"><name pos:start="210:13" pos:end="210:33">intra_dc_prediction_8</name><argument_list pos:start="210:34" pos:end="210:58">(<argument pos:start="210:35" pos:end="210:57"><expr pos:start="210:35" pos:end="210:57"><operator pos:start="210:35" pos:end="210:35">&amp;</operator><name pos:start="210:36" pos:end="210:46"><name pos:start="210:36" pos:end="210:36">s</name><operator pos:start="210:37" pos:end="210:38">-&gt;</operator><name pos:start="210:39" pos:end="210:43">plane</name><index pos:start="210:44" pos:end="210:46">[<expr pos:start="210:45" pos:end="210:45"><literal type="number" pos:start="210:45" pos:end="210:45">0</literal></expr>]</index></name><operator pos:start="210:47" pos:end="210:47">.</operator><name pos:start="210:48" pos:end="210:57"><name pos:start="210:48" pos:end="210:51">band</name><index pos:start="210:52" pos:end="210:54">[<expr pos:start="210:53" pos:end="210:53"><literal type="number" pos:start="210:53" pos:end="210:53">0</literal></expr>]</index><index pos:start="210:55" pos:end="210:57">[<expr pos:start="210:56" pos:end="210:56"><literal type="number" pos:start="210:56" pos:end="210:56">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="212:13" pos:end="212:59"><expr pos:start="212:13" pos:end="212:58"><call pos:start="212:13" pos:end="212:58"><name pos:start="212:13" pos:end="212:33">intra_dc_prediction_8</name><argument_list pos:start="212:34" pos:end="212:58">(<argument pos:start="212:35" pos:end="212:57"><expr pos:start="212:35" pos:end="212:57"><operator pos:start="212:35" pos:end="212:35">&amp;</operator><name pos:start="212:36" pos:end="212:46"><name pos:start="212:36" pos:end="212:36">s</name><operator pos:start="212:37" pos:end="212:38">-&gt;</operator><name pos:start="212:39" pos:end="212:43">plane</name><index pos:start="212:44" pos:end="212:46">[<expr pos:start="212:45" pos:end="212:45"><literal type="number" pos:start="212:45" pos:end="212:45">1</literal></expr>]</index></name><operator pos:start="212:47" pos:end="212:47">.</operator><name pos:start="212:48" pos:end="212:57"><name pos:start="212:48" pos:end="212:51">band</name><index pos:start="212:52" pos:end="212:54">[<expr pos:start="212:53" pos:end="212:53"><literal type="number" pos:start="212:53" pos:end="212:53">0</literal></expr>]</index><index pos:start="212:55" pos:end="212:57">[<expr pos:start="212:56" pos:end="212:56"><literal type="number" pos:start="212:56" pos:end="212:56">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="214:13" pos:end="214:59"><expr pos:start="214:13" pos:end="214:58"><call pos:start="214:13" pos:end="214:58"><name pos:start="214:13" pos:end="214:33">intra_dc_prediction_8</name><argument_list pos:start="214:34" pos:end="214:58">(<argument pos:start="214:35" pos:end="214:57"><expr pos:start="214:35" pos:end="214:57"><operator pos:start="214:35" pos:end="214:35">&amp;</operator><name pos:start="214:36" pos:end="214:46"><name pos:start="214:36" pos:end="214:36">s</name><operator pos:start="214:37" pos:end="214:38">-&gt;</operator><name pos:start="214:39" pos:end="214:43">plane</name><index pos:start="214:44" pos:end="214:46">[<expr pos:start="214:45" pos:end="214:45"><literal type="number" pos:start="214:45" pos:end="214:45">2</literal></expr>]</index></name><operator pos:start="214:47" pos:end="214:47">.</operator><name pos:start="214:48" pos:end="214:57"><name pos:start="214:48" pos:end="214:51">band</name><index pos:start="214:52" pos:end="214:54">[<expr pos:start="214:53" pos:end="214:53"><literal type="number" pos:start="214:53" pos:end="214:53">0</literal></expr>]</index><index pos:start="214:55" pos:end="214:57">[<expr pos:start="214:56" pos:end="214:56"><literal type="number" pos:start="214:56" pos:end="214:56">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="222:5" pos:end="222:13">return <expr pos:start="222:12" pos:end="222:12"><literal type="number" pos:start="222:12" pos:end="222:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
