<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2012.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">vp9_superframe_filter</name><parameter_list pos:start="1:33" pos:end="1:66">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:45">AVBSFContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:65"><decl pos:start="1:53" pos:end="1:65"><type pos:start="1:53" pos:end="1:65"><name pos:start="1:53" pos:end="1:60">AVPacket</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">out</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="155:1">{<block_content pos:start="5:5" pos:end="153:15">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:20">BitstreamContext</name></type> <name pos:start="5:22" pos:end="5:23">bc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">VP9BSFContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:37">= <expr pos:start="7:24" pos:end="7:37"><name pos:start="7:24" pos:end="7:37"><name pos:start="7:24" pos:end="7:26">ctx</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVPacket</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">in</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:71"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">res</name></decl>, <decl pos:start="11:14" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:22">invisible</name></decl>, <decl pos:start="11:25" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:31">profile</name></decl>, <decl pos:start="11:34" pos:end="11:39"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:34" pos:end="11:39">marker</name></decl>, <decl pos:start="11:42" pos:end="11:67"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:42" pos:end="11:63">uses_superframe_syntax</name> <init pos:start="11:65" pos:end="11:67">= <expr pos:start="11:67" pos:end="11:67"><literal type="number" pos:start="11:67" pos:end="11:67">0</literal></expr></init></decl>, <decl pos:start="11:70" pos:end="11:70"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:70" pos:end="11:70">n</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:7">res</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:37"><name pos:start="15:11" pos:end="15:27">ff_bsf_get_packet</name><argument_list pos:start="15:28" pos:end="15:37">(<argument pos:start="15:29" pos:end="15:31"><expr pos:start="15:29" pos:end="15:31"><name pos:start="15:29" pos:end="15:31">ctx</name></expr></argument>, <argument pos:start="15:34" pos:end="15:36"><expr pos:start="15:34" pos:end="15:36"><operator pos:start="15:34" pos:end="15:34">&amp;</operator><name pos:start="15:35" pos:end="15:36">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:19"><if pos:start="17:5" pos:end="19:19">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">res</name> <operator pos:start="17:13" pos:end="17:13">&lt;</operator> <literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:19"><block_content pos:start="19:9" pos:end="19:19">

        <return pos:start="19:9" pos:end="19:19">return <expr pos:start="19:16" pos:end="19:18"><name pos:start="19:16" pos:end="19:18">res</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:10">marker</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <name pos:start="23:14" pos:end="23:35"><name pos:start="23:14" pos:end="23:15">in</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:21">data</name><index pos:start="23:22" pos:end="23:35">[<expr pos:start="23:23" pos:end="23:34"><name pos:start="23:23" pos:end="23:30"><name pos:start="23:23" pos:end="23:24">in</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:30">size</name></name> <operator pos:start="23:32" pos:end="23:32">-</operator> <literal type="number" pos:start="23:34" pos:end="23:34">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="25:32">(<expr pos:start="25:9" pos:end="25:31"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:15">marker</name> <operator pos:start="25:17" pos:end="25:17">&amp;</operator> <literal type="number" pos:start="25:19" pos:end="25:22">0xe0</literal><operator pos:start="25:23" pos:end="25:23">)</operator> <operator pos:start="25:25" pos:end="25:26">==</operator> <literal type="number" pos:start="25:28" pos:end="25:31">0xc0</literal></expr>)</condition> <block pos:start="25:34" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:93">

        <decl_stmt pos:start="27:9" pos:end="27:47"><decl pos:start="27:9" pos:end="27:46"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:18">nbytes</name> <init pos:start="27:20" pos:end="27:46">= <expr pos:start="27:22" pos:end="27:46"><literal type="number" pos:start="27:22" pos:end="27:24">1</literal> <operator pos:start="27:24" pos:end="27:24">+</operator> <operator pos:start="27:26" pos:end="27:26">(</operator><operator pos:start="27:27" pos:end="27:27">(</operator><name pos:start="27:28" pos:end="27:33">marker</name> <operator pos:start="27:35" pos:end="27:36">&gt;&gt;</operator> <literal type="number" pos:start="27:38" pos:end="27:38">3</literal><operator pos:start="27:39" pos:end="27:39">)</operator> <operator pos:start="27:41" pos:end="27:41">&amp;</operator> <literal type="number" pos:start="27:43" pos:end="27:45">0x3</literal><operator pos:start="27:46" pos:end="27:46">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:74"><decl pos:start="29:9" pos:end="29:41"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:20">n_frames</name> <init pos:start="29:22" pos:end="29:41">= <expr pos:start="29:24" pos:end="29:41"><literal type="number" pos:start="29:24" pos:end="29:26">1</literal> <operator pos:start="29:26" pos:end="29:26">+</operator> <operator pos:start="29:28" pos:end="29:28">(</operator><name pos:start="29:29" pos:end="29:34">marker</name> <operator pos:start="29:36" pos:end="29:36">&amp;</operator> <literal type="number" pos:start="29:38" pos:end="29:40">0x7</literal><operator pos:start="29:41" pos:end="29:41">)</operator></expr></init></decl>, <decl pos:start="29:44" pos:end="29:73"><type ref="prev" pos:start="29:9" pos:end="29:11"/><name pos:start="29:44" pos:end="29:49">idx_sz</name> <init pos:start="29:51" pos:end="29:73">= <expr pos:start="29:53" pos:end="29:73"><literal type="number" pos:start="29:53" pos:end="29:55">2</literal> <operator pos:start="29:55" pos:end="29:55">+</operator> <name pos:start="29:57" pos:end="29:64">n_frames</name> <operator pos:start="29:66" pos:end="29:66">*</operator> <name pos:start="29:68" pos:end="29:73">nbytes</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:93"><expr pos:start="33:9" pos:end="33:92"><name pos:start="33:9" pos:end="33:30">uses_superframe_syntax</name> <operator pos:start="33:32" pos:end="33:32">=</operator> <name pos:start="33:34" pos:end="33:41"><name pos:start="33:34" pos:end="33:35">in</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:41">size</name></name> <operator pos:start="33:43" pos:end="33:44">&gt;=</operator> <name pos:start="33:46" pos:end="33:51">idx_sz</name> <operator pos:start="33:53" pos:end="33:54">&amp;&amp;</operator> <name pos:start="33:56" pos:end="33:82"><name pos:start="33:56" pos:end="33:57">in</name><operator pos:start="33:58" pos:end="33:59">-&gt;</operator><name pos:start="33:60" pos:end="33:63">data</name><index pos:start="33:64" pos:end="33:82">[<expr pos:start="33:65" pos:end="33:81"><name pos:start="33:65" pos:end="33:72"><name pos:start="33:65" pos:end="33:66">in</name><operator pos:start="33:67" pos:end="33:68">-&gt;</operator><name pos:start="33:69" pos:end="33:72">size</name></name> <operator pos:start="33:74" pos:end="33:74">-</operator> <name pos:start="33:76" pos:end="33:81">idx_sz</name></expr>]</index></name> <operator pos:start="33:84" pos:end="33:85">==</operator> <name pos:start="33:87" pos:end="33:92">marker</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:51"><expr pos:start="39:5" pos:end="39:50"><name pos:start="39:5" pos:end="39:7">res</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:50"><name pos:start="39:11" pos:end="39:25">bitstream_init8</name><argument_list pos:start="39:26" pos:end="39:50">(<argument pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><operator pos:start="39:27" pos:end="39:27">&amp;</operator><name pos:start="39:28" pos:end="39:29">bc</name></expr></argument>, <argument pos:start="39:32" pos:end="39:39"><expr pos:start="39:32" pos:end="39:39"><name pos:start="39:32" pos:end="39:39"><name pos:start="39:32" pos:end="39:33">in</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:39">data</name></name></expr></argument>, <argument pos:start="39:42" pos:end="39:49"><expr pos:start="39:42" pos:end="39:49"><name pos:start="39:42" pos:end="39:49"><name pos:start="39:42" pos:end="39:43">in</name><operator pos:start="39:44" pos:end="39:45">-&gt;</operator><name pos:start="39:46" pos:end="39:49">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:18"><if pos:start="41:5" pos:end="43:18">if <condition pos:start="41:8" pos:end="41:16">(<expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:11">res</name> <operator pos:start="41:13" pos:end="41:13">&lt;</operator> <literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:18"><block_content pos:start="43:9" pos:end="43:18">

        <goto pos:start="43:9" pos:end="43:18">goto <name pos:start="43:14" pos:end="43:17">done</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:27"><expr pos:start="47:5" pos:end="47:26"><call pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:18">bitstream_read</name><argument_list pos:start="47:19" pos:end="47:26">(<argument pos:start="47:20" pos:end="47:22"><expr pos:start="47:20" pos:end="47:22"><operator pos:start="47:20" pos:end="47:20">&amp;</operator><name pos:start="47:21" pos:end="47:22">bc</name></expr></argument>, <argument pos:start="47:25" pos:end="47:25"><expr pos:start="47:25" pos:end="47:25"><literal type="number" pos:start="47:25" pos:end="47:25">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="47:29" pos:end="47:43">// frame marker</comment>

    <expr_stmt pos:start="49:5" pos:end="49:38"><expr pos:start="49:5" pos:end="49:37"><name pos:start="49:5" pos:end="49:11">profile</name>  <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:37"><name pos:start="49:16" pos:end="49:29">bitstream_read</name><argument_list pos:start="49:30" pos:end="49:37">(<argument pos:start="49:31" pos:end="49:33"><expr pos:start="49:31" pos:end="49:33"><operator pos:start="49:31" pos:end="49:31">&amp;</operator><name pos:start="49:32" pos:end="49:33">bc</name></expr></argument>, <argument pos:start="49:36" pos:end="49:36"><expr pos:start="49:36" pos:end="49:36"><literal type="number" pos:start="49:36" pos:end="49:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:43"><expr pos:start="51:5" pos:end="51:42"><name pos:start="51:5" pos:end="51:11">profile</name> <operator pos:start="51:13" pos:end="51:14">|=</operator> <call pos:start="51:16" pos:end="51:37"><name pos:start="51:16" pos:end="51:29">bitstream_read</name><argument_list pos:start="51:30" pos:end="51:37">(<argument pos:start="51:31" pos:end="51:33"><expr pos:start="51:31" pos:end="51:33"><operator pos:start="51:31" pos:end="51:31">&amp;</operator><name pos:start="51:32" pos:end="51:33">bc</name></expr></argument>, <argument pos:start="51:36" pos:end="51:36"><expr pos:start="51:36" pos:end="51:36"><literal type="number" pos:start="51:36" pos:end="51:36">1</literal></expr></argument>)</argument_list></call> <operator pos:start="51:39" pos:end="51:40">&lt;&lt;</operator> <literal type="number" pos:start="51:42" pos:end="51:42">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:42"><if pos:start="53:5" pos:end="55:42">if <condition pos:start="53:8" pos:end="53:21">(<expr pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:15">profile</name> <operator pos:start="53:17" pos:end="53:18">==</operator> <literal type="number" pos:start="53:20" pos:end="53:20">3</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:42"><block_content pos:start="55:9" pos:end="55:42">

        <expr_stmt pos:start="55:9" pos:end="55:42"><expr pos:start="55:9" pos:end="55:41"><name pos:start="55:9" pos:end="55:15">profile</name> <operator pos:start="55:17" pos:end="55:18">+=</operator> <call pos:start="55:20" pos:end="55:41"><name pos:start="55:20" pos:end="55:33">bitstream_read</name><argument_list pos:start="55:34" pos:end="55:41">(<argument pos:start="55:35" pos:end="55:37"><expr pos:start="55:35" pos:end="55:37"><operator pos:start="55:35" pos:end="55:35">&amp;</operator><name pos:start="55:36" pos:end="55:37">bc</name></expr></argument>, <argument pos:start="55:40" pos:end="55:40"><expr pos:start="55:40" pos:end="55:40"><literal type="number" pos:start="55:40" pos:end="55:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="69:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:31">(<expr pos:start="59:9" pos:end="59:30"><call pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:22">bitstream_read</name><argument_list pos:start="59:23" pos:end="59:30">(<argument pos:start="59:24" pos:end="59:26"><expr pos:start="59:24" pos:end="59:26"><operator pos:start="59:24" pos:end="59:24">&amp;</operator><name pos:start="59:25" pos:end="59:26">bc</name></expr></argument>, <argument pos:start="59:29" pos:end="59:29"><expr pos:start="59:29" pos:end="59:29"><literal type="number" pos:start="59:29" pos:end="59:29">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:33" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:22">

        <expr_stmt pos:start="61:9" pos:end="61:22"><expr pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:17">invisible</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <literal type="number" pos:start="61:21" pos:end="61:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="63:7" pos:end="69:5">else <block pos:start="63:12" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:44">

        <expr_stmt pos:start="65:9" pos:end="65:31"><expr pos:start="65:9" pos:end="65:30"><call pos:start="65:9" pos:end="65:30"><name pos:start="65:9" pos:end="65:22">bitstream_read</name><argument_list pos:start="65:23" pos:end="65:30">(<argument pos:start="65:24" pos:end="65:26"><expr pos:start="65:24" pos:end="65:26"><operator pos:start="65:24" pos:end="65:24">&amp;</operator><name pos:start="65:25" pos:end="65:26">bc</name></expr></argument>, <argument pos:start="65:29" pos:end="65:29"><expr pos:start="65:29" pos:end="65:29"><literal type="number" pos:start="65:29" pos:end="65:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="65:33" pos:end="65:43">// keyframe</comment>

        <expr_stmt pos:start="67:9" pos:end="67:44"><expr pos:start="67:9" pos:end="67:43"><name pos:start="67:9" pos:end="67:17">invisible</name> <operator pos:start="67:19" pos:end="67:19">=</operator> <operator pos:start="67:21" pos:end="67:21">!</operator><call pos:start="67:22" pos:end="67:43"><name pos:start="67:22" pos:end="67:35">bitstream_read</name><argument_list pos:start="67:36" pos:end="67:43">(<argument pos:start="67:37" pos:end="67:39"><expr pos:start="67:37" pos:end="67:39"><operator pos:start="67:37" pos:end="67:37">&amp;</operator><name pos:start="67:38" pos:end="67:39">bc</name></expr></argument>, <argument pos:start="67:42" pos:end="67:42"><expr pos:start="67:42" pos:end="67:42"><literal type="number" pos:start="67:42" pos:end="67:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="73:5" pos:end="101:5"><if pos:start="73:5" pos:end="83:5">if <condition pos:start="73:8" pos:end="73:49">(<expr pos:start="73:9" pos:end="73:48"><name pos:start="73:9" pos:end="73:30">uses_superframe_syntax</name> <operator pos:start="73:32" pos:end="73:33">&amp;&amp;</operator> <name pos:start="73:35" pos:end="73:44"><name pos:start="73:35" pos:end="73:35">s</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:44">n_cache</name></name> <operator pos:start="73:46" pos:end="73:46">&gt;</operator> <literal type="number" pos:start="73:48" pos:end="73:48">0</literal></expr>)</condition> <block pos:start="73:51" pos:end="83:5">{<block_content pos:start="75:9" pos:end="81:18">

        <expr_stmt pos:start="75:9" pos:end="77:81"><expr pos:start="75:9" pos:end="77:80"><call pos:start="75:9" pos:end="77:80"><name pos:start="75:9" pos:end="75:14">av_log</name><argument_list pos:start="75:15" pos:end="77:80">(<argument pos:start="75:16" pos:end="75:18"><expr pos:start="75:16" pos:end="75:18"><name pos:start="75:16" pos:end="75:18">ctx</name></expr></argument>, <argument pos:start="75:21" pos:end="75:32"><expr pos:start="75:21" pos:end="75:32"><name pos:start="75:21" pos:end="75:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="77:16" pos:end="77:79"><expr pos:start="77:16" pos:end="77:79"><literal type="string" pos:start="77:16" pos:end="77:79">"Mixing of superframe syntax and naked VP9 frames not supported"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:30"><expr pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:11">res</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:29"><name pos:start="79:15" pos:end="79:21">AVERROR</name><argument_list pos:start="79:22" pos:end="79:29">(<argument pos:start="79:23" pos:end="79:28"><expr pos:start="79:23" pos:end="79:28"><name pos:start="79:23" pos:end="79:28">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="81:9" pos:end="81:18">goto <name pos:start="81:14" pos:end="81:17">done</name>;</goto>

    </block_content>}</block></if> <if type="elseif" pos:start="83:7" pos:end="91:5">else if <condition pos:start="83:15" pos:end="83:69">(<expr pos:start="83:16" pos:end="83:68"><operator pos:start="83:16" pos:end="83:16">(</operator><operator pos:start="83:17" pos:end="83:17">!</operator><name pos:start="83:18" pos:end="83:26">invisible</name> <operator pos:start="83:28" pos:end="83:29">||</operator> <name pos:start="83:31" pos:end="83:52">uses_superframe_syntax</name><operator pos:start="83:53" pos:end="83:53">)</operator> <operator pos:start="83:55" pos:end="83:56">&amp;&amp;</operator> <operator pos:start="83:58" pos:end="83:58">!</operator><name pos:start="83:59" pos:end="83:68"><name pos:start="83:59" pos:end="83:59">s</name><operator pos:start="83:60" pos:end="83:61">-&gt;</operator><name pos:start="83:62" pos:end="83:68">n_cache</name></name></expr>)</condition> <block pos:start="83:71" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:18">

        <comment type="line" pos:start="85:9" pos:end="85:22">// passthrough</comment>

        <expr_stmt pos:start="87:9" pos:end="87:36"><expr pos:start="87:9" pos:end="87:35"><call pos:start="87:9" pos:end="87:35"><name pos:start="87:9" pos:end="87:26">av_packet_move_ref</name><argument_list pos:start="87:27" pos:end="87:35">(<argument pos:start="87:28" pos:end="87:30"><expr pos:start="87:28" pos:end="87:30"><name pos:start="87:28" pos:end="87:30">out</name></expr></argument>, <argument pos:start="87:33" pos:end="87:34"><expr pos:start="87:33" pos:end="87:34"><name pos:start="87:33" pos:end="87:34">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="89:9" pos:end="89:18">goto <name pos:start="89:14" pos:end="89:17">done</name>;</goto>

    </block_content>}</block></if> <if type="elseif" pos:start="91:7" pos:end="101:5">else if <condition pos:start="91:15" pos:end="91:43">(<expr pos:start="91:16" pos:end="91:42"><name pos:start="91:16" pos:end="91:25"><name pos:start="91:16" pos:end="91:16">s</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:25">n_cache</name></name> <operator pos:start="91:27" pos:end="91:27">+</operator> <literal type="number" pos:start="91:29" pos:end="91:29">1</literal> <operator pos:start="91:31" pos:end="91:32">&gt;=</operator> <name pos:start="91:34" pos:end="91:42">MAX_CACHE</name></expr>)</condition> <block pos:start="91:45" pos:end="101:5">{<block_content pos:start="93:9" pos:end="99:18">

        <expr_stmt pos:start="93:9" pos:end="95:44"><expr pos:start="93:9" pos:end="95:43"><call pos:start="93:9" pos:end="95:43"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="95:43">(<argument pos:start="93:16" pos:end="93:18"><expr pos:start="93:16" pos:end="93:18"><name pos:start="93:16" pos:end="93:18">ctx</name></expr></argument>, <argument pos:start="93:21" pos:end="93:32"><expr pos:start="93:21" pos:end="93:32"><name pos:start="93:21" pos:end="93:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="95:16" pos:end="95:42"><expr pos:start="95:16" pos:end="95:42"><literal type="string" pos:start="95:16" pos:end="95:42">"Too many invisible frames"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:34"><expr pos:start="97:9" pos:end="97:33"><name pos:start="97:9" pos:end="97:11">res</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <name pos:start="97:15" pos:end="97:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="99:9" pos:end="99:18">goto <name pos:start="99:14" pos:end="99:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:32"><expr pos:start="105:5" pos:end="105:31"><name pos:start="105:5" pos:end="105:26"><name pos:start="105:5" pos:end="105:5">s</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:12">cache</name><index pos:start="105:13" pos:end="105:26">[<expr pos:start="105:14" pos:end="105:25"><name pos:start="105:14" pos:end="105:23"><name pos:start="105:14" pos:end="105:14">s</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:23">n_cache</name></name><operator pos:start="105:24" pos:end="105:25">++</operator></expr>]</index></name> <operator pos:start="105:28" pos:end="105:28">=</operator> <name pos:start="105:30" pos:end="105:31">in</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:34"><expr pos:start="107:5" pos:end="107:33"><name pos:start="107:5" pos:end="107:6">in</name>                     <operator pos:start="107:28" pos:end="107:28">=</operator> <name pos:start="107:30" pos:end="107:33">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="115:5"><if pos:start="109:5" pos:end="115:5">if <condition pos:start="109:8" pos:end="109:18">(<expr pos:start="109:9" pos:end="109:17"><name pos:start="109:9" pos:end="109:17">invisible</name></expr>)</condition> <block pos:start="109:20" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:18">

        <expr_stmt pos:start="111:9" pos:end="111:30"><expr pos:start="111:9" pos:end="111:29"><name pos:start="111:9" pos:end="111:11">res</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <call pos:start="111:15" pos:end="111:29"><name pos:start="111:15" pos:end="111:21">AVERROR</name><argument_list pos:start="111:22" pos:end="111:29">(<argument pos:start="111:23" pos:end="111:28"><expr pos:start="111:23" pos:end="111:28"><name pos:start="111:23" pos:end="111:28">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="113:9" pos:end="113:18">goto <name pos:start="113:14" pos:end="113:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:31"><expr pos:start="117:5" pos:end="117:30"><call pos:start="117:5" pos:end="117:30"><name pos:start="117:5" pos:end="117:14">av_assert0</name><argument_list pos:start="117:15" pos:end="117:30">(<argument pos:start="117:16" pos:end="117:29"><expr pos:start="117:16" pos:end="117:29"><name pos:start="117:16" pos:end="117:25"><name pos:start="117:16" pos:end="117:16">s</name><operator pos:start="117:17" pos:end="117:18">-&gt;</operator><name pos:start="117:19" pos:end="117:25">n_cache</name></name> <operator pos:start="117:27" pos:end="117:27">&gt;</operator> <literal type="number" pos:start="117:29" pos:end="117:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="121:5" pos:end="121:23">// build superframe</comment>

    <if_stmt pos:start="123:5" pos:end="125:18"><if pos:start="123:5" pos:end="125:18">if <condition pos:start="123:8" pos:end="123:64">(<expr pos:start="123:9" pos:end="123:63"><operator pos:start="123:9" pos:end="123:9">(</operator><name pos:start="123:10" pos:end="123:12">res</name> <operator pos:start="123:14" pos:end="123:14">=</operator> <call pos:start="123:16" pos:end="123:58"><name pos:start="123:16" pos:end="123:31">merge_superframe</name><argument_list pos:start="123:32" pos:end="123:58">(<argument pos:start="123:33" pos:end="123:40"><expr pos:start="123:33" pos:end="123:40"><name pos:start="123:33" pos:end="123:40"><name pos:start="123:33" pos:end="123:33">s</name><operator pos:start="123:34" pos:end="123:35">-&gt;</operator><name pos:start="123:36" pos:end="123:40">cache</name></name></expr></argument>, <argument pos:start="123:43" pos:end="123:52"><expr pos:start="123:43" pos:end="123:52"><name pos:start="123:43" pos:end="123:52"><name pos:start="123:43" pos:end="123:43">s</name><operator pos:start="123:44" pos:end="123:45">-&gt;</operator><name pos:start="123:46" pos:end="123:52">n_cache</name></name></expr></argument>, <argument pos:start="123:55" pos:end="123:57"><expr pos:start="123:55" pos:end="123:57"><name pos:start="123:55" pos:end="123:57">out</name></expr></argument>)</argument_list></call><operator pos:start="123:59" pos:end="123:59">)</operator> <operator pos:start="123:61" pos:end="123:61">&lt;</operator> <literal type="number" pos:start="123:63" pos:end="123:63">0</literal></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="125:18"><block_content pos:start="125:9" pos:end="125:18">

        <goto pos:start="125:9" pos:end="125:18">goto <name pos:start="125:14" pos:end="125:17">done</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:62"><expr pos:start="129:5" pos:end="129:61"><name pos:start="129:5" pos:end="129:7">res</name> <operator pos:start="129:9" pos:end="129:9">=</operator> <call pos:start="129:11" pos:end="129:61"><name pos:start="129:11" pos:end="129:30">av_packet_copy_props</name><argument_list pos:start="129:31" pos:end="129:61">(<argument pos:start="129:32" pos:end="129:34"><expr pos:start="129:32" pos:end="129:34"><name pos:start="129:32" pos:end="129:34">out</name></expr></argument>, <argument pos:start="129:37" pos:end="129:60"><expr pos:start="129:37" pos:end="129:60"><name pos:start="129:37" pos:end="129:60"><name pos:start="129:37" pos:end="129:37">s</name><operator pos:start="129:38" pos:end="129:39">-&gt;</operator><name pos:start="129:40" pos:end="129:44">cache</name><index pos:start="129:45" pos:end="129:60">[<expr pos:start="129:46" pos:end="129:59"><name pos:start="129:46" pos:end="129:55"><name pos:start="129:46" pos:end="129:46">s</name><operator pos:start="129:47" pos:end="129:48">-&gt;</operator><name pos:start="129:49" pos:end="129:55">n_cache</name></name> <operator pos:start="129:57" pos:end="129:57">-</operator> <literal type="number" pos:start="129:59" pos:end="129:59">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="131:5" pos:end="133:18"><if pos:start="131:5" pos:end="133:18">if <condition pos:start="131:8" pos:end="131:16">(<expr pos:start="131:9" pos:end="131:15"><name pos:start="131:9" pos:end="131:11">res</name> <operator pos:start="131:13" pos:end="131:13">&lt;</operator> <literal type="number" pos:start="131:15" pos:end="131:15">0</literal></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="133:18"><block_content pos:start="133:9" pos:end="133:18">

        <goto pos:start="133:9" pos:end="133:18">goto <name pos:start="133:14" pos:end="133:17">done</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="137:5" pos:end="139:37">for <control pos:start="137:9" pos:end="137:36">(<init pos:start="137:10" pos:end="137:15"><expr pos:start="137:10" pos:end="137:14"><name pos:start="137:10" pos:end="137:10">n</name> <operator pos:start="137:12" pos:end="137:12">=</operator> <literal type="number" pos:start="137:14" pos:end="137:14">0</literal></expr>;</init> <condition pos:start="137:17" pos:end="137:31"><expr pos:start="137:17" pos:end="137:30"><name pos:start="137:17" pos:end="137:17">n</name> <operator pos:start="137:19" pos:end="137:19">&lt;</operator> <name pos:start="137:21" pos:end="137:30"><name pos:start="137:21" pos:end="137:21">s</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:30">n_cache</name></name></expr>;</condition> <incr pos:start="137:33" pos:end="137:35"><expr pos:start="137:33" pos:end="137:35"><name pos:start="137:33" pos:end="137:33">n</name><operator pos:start="137:34" pos:end="137:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="139:9" pos:end="139:37"><block_content pos:start="139:9" pos:end="139:37">

        <expr_stmt pos:start="139:9" pos:end="139:37"><expr pos:start="139:9" pos:end="139:36"><call pos:start="139:9" pos:end="139:36"><name pos:start="139:9" pos:end="139:22">av_packet_free</name><argument_list pos:start="139:23" pos:end="139:36">(<argument pos:start="139:24" pos:end="139:35"><expr pos:start="139:24" pos:end="139:35"><operator pos:start="139:24" pos:end="139:24">&amp;</operator><name pos:start="139:25" pos:end="139:35"><name pos:start="139:25" pos:end="139:25">s</name><operator pos:start="139:26" pos:end="139:27">-&gt;</operator><name pos:start="139:28" pos:end="139:32">cache</name><index pos:start="139:33" pos:end="139:35">[<expr pos:start="139:34" pos:end="139:34"><name pos:start="139:34" pos:end="139:34">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="141:5" pos:end="141:19"><expr pos:start="141:5" pos:end="141:18"><name pos:start="141:5" pos:end="141:14"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:14">n_cache</name></name> <operator pos:start="141:16" pos:end="141:16">=</operator> <literal type="number" pos:start="141:18" pos:end="141:18">0</literal></expr>;</expr_stmt>



<label pos:start="145:1" pos:end="145:5"><name pos:start="145:1" pos:end="145:4">done</name>:</label>

    <if_stmt pos:start="147:5" pos:end="149:29"><if pos:start="147:5" pos:end="149:29">if <condition pos:start="147:8" pos:end="147:16">(<expr pos:start="147:9" pos:end="147:15"><name pos:start="147:9" pos:end="147:11">res</name> <operator pos:start="147:13" pos:end="147:13">&lt;</operator> <literal type="number" pos:start="147:15" pos:end="147:15">0</literal></expr>)</condition><block type="pseudo" pos:start="149:9" pos:end="149:29"><block_content pos:start="149:9" pos:end="149:29">

        <expr_stmt pos:start="149:9" pos:end="149:29"><expr pos:start="149:9" pos:end="149:28"><call pos:start="149:9" pos:end="149:28"><name pos:start="149:9" pos:end="149:23">av_packet_unref</name><argument_list pos:start="149:24" pos:end="149:28">(<argument pos:start="149:25" pos:end="149:27"><expr pos:start="149:25" pos:end="149:27"><name pos:start="149:25" pos:end="149:27">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:24"><expr pos:start="151:5" pos:end="151:23"><call pos:start="151:5" pos:end="151:23"><name pos:start="151:5" pos:end="151:18">av_packet_free</name><argument_list pos:start="151:19" pos:end="151:23">(<argument pos:start="151:20" pos:end="151:22"><expr pos:start="151:20" pos:end="151:22"><operator pos:start="151:20" pos:end="151:20">&amp;</operator><name pos:start="151:21" pos:end="151:22">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="153:5" pos:end="153:15">return <expr pos:start="153:12" pos:end="153:14"><name pos:start="153:12" pos:end="153:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
