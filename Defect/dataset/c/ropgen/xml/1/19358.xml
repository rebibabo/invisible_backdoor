<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19358.c" pos:tabs="8"><macro pos:start="1:1" pos:end="5:57"><name pos:start="1:1" pos:end="1:12">print_execve</name><argument_list pos:start="1:13" pos:end="5:57">(<argument pos:start="1:14" pos:end="1:43">const struct syscallname *name</argument>,

             <argument pos:start="3:14" pos:end="3:26">abi_long arg1</argument>, <argument pos:start="3:29" pos:end="3:41">abi_long arg2</argument>, <argument pos:start="3:44" pos:end="3:56">abi_long arg3</argument>,

             <argument pos:start="5:14" pos:end="5:26">abi_long arg4</argument>, <argument pos:start="5:29" pos:end="5:41">abi_long arg5</argument>, <argument pos:start="5:44" pos:end="5:56">abi_long arg6</argument>)</argument_list></macro>

<block pos:start="7:1" pos:end="59:1">{<block_content pos:start="9:5" pos:end="57:23">

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">abi_ulong</name></type> <name pos:start="9:15" pos:end="9:26">arg_ptr_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:11">s</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:15"><if pos:start="15:5" pos:end="17:15">if <condition pos:start="15:8" pos:end="15:38">(<expr pos:start="15:9" pos:end="15:37"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:11">s</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:36"><name pos:start="15:15" pos:end="15:30">lock_user_string</name><argument_list pos:start="15:31" pos:end="15:36">(<argument pos:start="15:32" pos:end="15:35"><expr pos:start="15:32" pos:end="15:35"><name pos:start="15:32" pos:end="15:35">arg1</name></expr></argument>)</argument_list></call><operator pos:start="15:37" pos:end="15:37">)</operator></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:15"><block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><call pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:12">gemu_log</name><argument_list pos:start="19:13" pos:end="19:42">(<argument pos:start="19:14" pos:end="19:26"><expr pos:start="19:14" pos:end="19:26"><literal type="string" pos:start="19:14" pos:end="19:26">"%s(\"%s\",{"</literal></expr></argument>, <argument pos:start="19:29" pos:end="19:38"><expr pos:start="19:29" pos:end="19:38"><name pos:start="19:29" pos:end="19:38"><name pos:start="19:29" pos:end="19:32">name</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:38">name</name></name></expr></argument>, <argument pos:start="19:41" pos:end="19:41"><expr pos:start="19:41" pos:end="19:41"><name pos:start="19:41" pos:end="19:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:28"><expr pos:start="21:5" pos:end="21:27"><call pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:15">unlock_user</name><argument_list pos:start="21:16" pos:end="21:27">(<argument pos:start="21:17" pos:end="21:17"><expr pos:start="21:17" pos:end="21:17"><name pos:start="21:17" pos:end="21:17">s</name></expr></argument>, <argument pos:start="21:20" pos:end="21:23"><expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">arg1</name></expr></argument>, <argument pos:start="21:26" pos:end="21:26"><expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="25:5" pos:end="53:5">for <control pos:start="25:9" pos:end="25:66">(<init pos:start="25:10" pos:end="25:29"><expr pos:start="25:10" pos:end="25:28"><name pos:start="25:10" pos:end="25:21">arg_ptr_addr</name> <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:28">arg2</name></expr>;</init> <condition pos:start="25:31" pos:end="25:31">;</condition> <incr pos:start="25:33" pos:end="25:65"><expr pos:start="25:33" pos:end="25:65"><name pos:start="25:33" pos:end="25:44">arg_ptr_addr</name> <operator pos:start="25:46" pos:end="25:47">+=</operator> <sizeof pos:start="25:49" pos:end="25:65">sizeof<argument_list pos:start="25:55" pos:end="25:65">(<argument pos:start="25:56" pos:end="25:64"><expr pos:start="25:56" pos:end="25:64"><name pos:start="25:56" pos:end="25:64">abi_ulong</name></expr></argument>)</argument_list></sizeof></expr></incr>)</control> <block pos:start="25:68" pos:end="53:5">{<block_content pos:start="27:9" pos:end="51:9">

        <decl_stmt pos:start="27:9" pos:end="27:45"><decl pos:start="27:9" pos:end="27:26"><type pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:17">abi_ulong</name> <modifier pos:start="27:19" pos:end="27:19">*</modifier></type><name pos:start="27:20" pos:end="27:26">arg_ptr</name></decl>, <decl pos:start="27:29" pos:end="27:36"><type ref="prev" pos:start="27:9" pos:end="27:19"/><name pos:start="27:29" pos:end="27:36">arg_addr</name></decl>, <decl pos:start="27:39" pos:end="27:44"><type ref="prev" pos:start="27:9" pos:end="27:19"/><name pos:start="27:39" pos:end="27:44">s_addr</name></decl>;</decl_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:77"><expr pos:start="31:9" pos:end="31:76"><name pos:start="31:9" pos:end="31:15">arg_ptr</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:76"><name pos:start="31:19" pos:end="31:27">lock_user</name><argument_list pos:start="31:28" pos:end="31:76">(<argument pos:start="31:29" pos:end="31:39"><expr pos:start="31:29" pos:end="31:39"><name pos:start="31:29" pos:end="31:39">VERIFY_READ</name></expr></argument>, <argument pos:start="31:42" pos:end="31:53"><expr pos:start="31:42" pos:end="31:53"><name pos:start="31:42" pos:end="31:53">arg_ptr_addr</name></expr></argument>, <argument pos:start="31:56" pos:end="31:72"><expr pos:start="31:56" pos:end="31:72"><sizeof pos:start="31:56" pos:end="31:72">sizeof<argument_list pos:start="31:62" pos:end="31:72">(<argument pos:start="31:63" pos:end="31:71"><expr pos:start="31:63" pos:end="31:71"><name pos:start="31:63" pos:end="31:71">abi_ulong</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="31:75" pos:end="31:75"><expr pos:start="31:75" pos:end="31:75"><literal type="number" pos:start="31:75" pos:end="31:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="35:19"><if pos:start="33:9" pos:end="35:19">if <condition pos:start="33:12" pos:end="33:21">(<expr pos:start="33:13" pos:end="33:20"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:20">arg_ptr</name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:19"><block_content pos:start="35:13" pos:end="35:19">

            <return pos:start="35:13" pos:end="35:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:36"><expr pos:start="37:9" pos:end="37:35"><name pos:start="37:9" pos:end="37:16">arg_addr</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:35"><name pos:start="37:20" pos:end="37:25">tswapl</name><argument_list pos:start="37:26" pos:end="37:35">(<argument pos:start="37:27" pos:end="37:34"><expr pos:start="37:27" pos:end="37:34"><operator pos:start="37:27" pos:end="37:27">*</operator><name pos:start="37:28" pos:end="37:34">arg_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:46"><expr pos:start="39:9" pos:end="39:45"><call pos:start="39:9" pos:end="39:45"><name pos:start="39:9" pos:end="39:19">unlock_user</name><argument_list pos:start="39:20" pos:end="39:45">(<argument pos:start="39:21" pos:end="39:27"><expr pos:start="39:21" pos:end="39:27"><name pos:start="39:21" pos:end="39:27">arg_ptr</name></expr></argument>, <argument pos:start="39:30" pos:end="39:41"><expr pos:start="39:30" pos:end="39:41"><name pos:start="39:30" pos:end="39:41">arg_ptr_addr</name></expr></argument>, <argument pos:start="39:44" pos:end="39:44"><expr pos:start="39:44" pos:end="39:44"><literal type="number" pos:start="39:44" pos:end="39:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="43:18"><if pos:start="41:9" pos:end="43:18">if <condition pos:start="41:12" pos:end="41:22">(<expr pos:start="41:13" pos:end="41:21"><operator pos:start="41:13" pos:end="41:13">!</operator><name pos:start="41:14" pos:end="41:21">arg_addr</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:18"><block_content pos:start="43:13" pos:end="43:18">

            <break pos:start="43:13" pos:end="43:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:45">(<expr pos:start="45:13" pos:end="45:44"><operator pos:start="45:13" pos:end="45:13">(</operator><name pos:start="45:14" pos:end="45:14">s</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <call pos:start="45:18" pos:end="45:43"><name pos:start="45:18" pos:end="45:33">lock_user_string</name><argument_list pos:start="45:34" pos:end="45:43">(<argument pos:start="45:35" pos:end="45:42"><expr pos:start="45:35" pos:end="45:42"><name pos:start="45:35" pos:end="45:42">arg_addr</name></expr></argument>)</argument_list></call><operator pos:start="45:44" pos:end="45:44">)</operator></expr>)</condition> <block pos:start="45:47" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:38">

            <expr_stmt pos:start="47:13" pos:end="47:35"><expr pos:start="47:13" pos:end="47:34"><call pos:start="47:13" pos:end="47:34"><name pos:start="47:13" pos:end="47:20">gemu_log</name><argument_list pos:start="47:21" pos:end="47:34">(<argument pos:start="47:22" pos:end="47:30"><expr pos:start="47:22" pos:end="47:30"><literal type="string" pos:start="47:22" pos:end="47:30">"\"%s\","</literal></expr></argument>, <argument pos:start="47:33" pos:end="47:33"><expr pos:start="47:33" pos:end="47:33"><name pos:start="47:33" pos:end="47:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:38"><expr pos:start="49:13" pos:end="49:37"><call pos:start="49:13" pos:end="49:37"><name pos:start="49:13" pos:end="49:23">unlock_user</name><argument_list pos:start="49:24" pos:end="49:37">(<argument pos:start="49:25" pos:end="49:25"><expr pos:start="49:25" pos:end="49:25"><name pos:start="49:25" pos:end="49:25">s</name></expr></argument>, <argument pos:start="49:28" pos:end="49:33"><expr pos:start="49:28" pos:end="49:33"><name pos:start="49:28" pos:end="49:33">s_addr</name></expr></argument>, <argument pos:start="49:36" pos:end="49:36"><expr pos:start="49:36" pos:end="49:36"><literal type="number" pos:start="49:36" pos:end="49:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="57:5" pos:end="57:23"><expr pos:start="57:5" pos:end="57:22"><call pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:12">gemu_log</name><argument_list pos:start="57:13" pos:end="57:22">(<argument pos:start="57:14" pos:end="57:21"><expr pos:start="57:14" pos:end="57:21"><literal type="string" pos:start="57:14" pos:end="57:21">"NULL})"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
