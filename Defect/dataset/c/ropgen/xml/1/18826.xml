<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18826.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">migrate_fd_cleanup</name><parameter_list pos:start="1:31" pos:end="1:44">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:37"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:56">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MigrationState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:34"><expr pos:start="9:5" pos:end="9:33"><call pos:start="9:5" pos:end="9:33"><name pos:start="9:5" pos:end="9:18">qemu_bh_delete</name><argument_list pos:start="9:19" pos:end="9:33">(<argument pos:start="9:20" pos:end="9:32"><expr pos:start="9:20" pos:end="9:32"><name pos:start="9:20" pos:end="9:32"><name pos:start="9:20" pos:end="9:20">s</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:32">cleanup_bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:25"><expr pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:17">cleanup_bh</name></name> <operator pos:start="11:19" pos:end="11:19">=</operator> <name pos:start="11:21" pos:end="11:24">NULL</name></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="31:5"><if pos:start="15:5" pos:end="31:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:15">file</name></name></expr>)</condition> <block pos:start="15:18" pos:end="31:5">{<block_content pos:start="17:9" pos:end="29:23">

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><call pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:32">trace_migrate_fd_cleanup</name><argument_list pos:start="17:33" pos:end="17:34">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:37"><expr pos:start="19:9" pos:end="19:36"><call pos:start="19:9" pos:end="19:36"><name pos:start="19:9" pos:end="19:34">qemu_mutex_unlock_iothread</name><argument_list pos:start="19:35" pos:end="19:36">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:37"><expr pos:start="21:9" pos:end="21:36"><call pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:24">qemu_thread_join</name><argument_list pos:start="21:25" pos:end="21:36">(<argument pos:start="21:26" pos:end="21:35"><expr pos:start="21:26" pos:end="21:35"><operator pos:start="21:26" pos:end="21:26">&amp;</operator><name pos:start="21:27" pos:end="21:35"><name pos:start="21:27" pos:end="21:27">s</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:35">thread</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:35"><expr pos:start="23:9" pos:end="23:34"><call pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:32">qemu_mutex_lock_iothread</name><argument_list pos:start="23:33" pos:end="23:34">()</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:29"><expr pos:start="27:9" pos:end="27:28"><call pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:19">qemu_fclose</name><argument_list pos:start="27:20" pos:end="27:28">(<argument pos:start="27:21" pos:end="27:27"><expr pos:start="27:21" pos:end="27:27"><name pos:start="27:21" pos:end="27:27"><name pos:start="27:21" pos:end="27:21">s</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:27">file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:23"><expr pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:15">file</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:22">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><call pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:10">assert</name><argument_list pos:start="35:11" pos:end="35:40">(<argument pos:start="35:12" pos:end="35:39"><expr pos:start="35:12" pos:end="35:39"><name pos:start="35:12" pos:end="35:19"><name pos:start="35:12" pos:end="35:12">s</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:19">state</name></name> <operator pos:start="35:21" pos:end="35:22">!=</operator> <name pos:start="35:24" pos:end="35:39">MIG_STATE_ACTIVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="49:5"><if pos:start="39:5" pos:end="49:5">if <condition pos:start="39:8" pos:end="39:40">(<expr pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:16">state</name></name> <operator pos:start="39:18" pos:end="39:19">!=</operator> <name pos:start="39:21" pos:end="39:39">MIG_STATE_COMPLETED</name></expr>)</condition> <block pos:start="39:42" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:9">

        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><call pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:32">qemu_savevm_state_cancel</name><argument_list pos:start="41:33" pos:end="41:34">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:45">(<expr pos:start="43:13" pos:end="43:44"><name pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:20">state</name></name> <operator pos:start="43:22" pos:end="43:23">==</operator> <name pos:start="43:25" pos:end="43:44">MIG_STATE_CANCELLING</name></expr>)</condition> <block pos:start="43:47" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:76">

            <expr_stmt pos:start="45:13" pos:end="45:76"><expr pos:start="45:13" pos:end="45:75"><call pos:start="45:13" pos:end="45:75"><name pos:start="45:13" pos:end="45:29">migrate_set_state</name><argument_list pos:start="45:30" pos:end="45:75">(<argument pos:start="45:31" pos:end="45:31"><expr pos:start="45:31" pos:end="45:31"><name pos:start="45:31" pos:end="45:31">s</name></expr></argument>, <argument pos:start="45:34" pos:end="45:53"><expr pos:start="45:34" pos:end="45:53"><name pos:start="45:34" pos:end="45:53">MIG_STATE_CANCELLING</name></expr></argument>, <argument pos:start="45:56" pos:end="45:74"><expr pos:start="45:56" pos:end="45:74"><name pos:start="45:56" pos:end="45:74">MIG_STATE_CANCELLED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:56"><expr pos:start="53:5" pos:end="53:55"><call pos:start="53:5" pos:end="53:55"><name pos:start="53:5" pos:end="53:24">notifier_list_notify</name><argument_list pos:start="53:25" pos:end="53:55">(<argument pos:start="53:26" pos:end="53:51"><expr pos:start="53:26" pos:end="53:51"><operator pos:start="53:26" pos:end="53:26">&amp;</operator><name pos:start="53:27" pos:end="53:51">migration_state_notifiers</name></expr></argument>, <argument pos:start="53:54" pos:end="53:54"><expr pos:start="53:54" pos:end="53:54"><name pos:start="53:54" pos:end="53:54">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
