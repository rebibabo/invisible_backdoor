<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4048.c" pos:tabs="8"><function pos:start="1:1" pos:end="102:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="5:40">(<parameter pos:start="1:25" pos:end="1:46"><decl pos:start="1:25" pos:end="1:46"><type pos:start="1:25" pos:end="1:46"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type> <name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:34"><decl pos:start="3:25" pos:end="3:34"><type pos:start="3:25" pos:end="3:34"><name pos:start="3:25" pos:end="3:28">void</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:34">data</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:50"><decl pos:start="3:37" pos:end="3:50"><type pos:start="3:37" pos:end="3:50"><name pos:start="3:37" pos:end="3:39">int</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:50">data_size</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:39"><decl pos:start="5:25" pos:end="5:39"><type pos:start="5:25" pos:end="5:39"><name pos:start="5:25" pos:end="5:32">AVPacket</name> <modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:39">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="102:1">{<block_content pos:start="9:5" pos:end="100:20">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:42"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">MPADecodeContext</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:23">s</name> <init pos:start="13:25" pos:end="13:42">= <expr pos:start="13:27" pos:end="13:42"><name pos:start="13:27" pos:end="13:42"><name pos:start="13:27" pos:end="13:31">avctx</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:19">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">out_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:32"><decl pos:start="19:5" pos:end="19:31"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">OUT_INT</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:24">out_samples</name> <init pos:start="19:26" pos:end="19:31">= <expr pos:start="19:28" pos:end="19:31"><name pos:start="19:28" pos:end="19:31">data</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if<condition pos:start="23:7" pos:end="23:30">(<expr pos:start="23:8" pos:end="23:29"><name pos:start="23:8" pos:end="23:15">buf_size</name> <operator pos:start="23:17" pos:end="23:17">&lt;</operator> <name pos:start="23:19" pos:end="23:29">HEADER_SIZE</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:10">header</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:25"><name pos:start="29:14" pos:end="29:20">AV_RB32</name><argument_list pos:start="29:21" pos:end="29:25">(<argument pos:start="29:22" pos:end="29:24"><expr pos:start="29:22" pos:end="29:24"><name pos:start="29:22" pos:end="29:24">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if<condition pos:start="31:7" pos:end="31:39">(<expr pos:start="31:8" pos:end="31:38"><call pos:start="31:8" pos:end="31:34"><name pos:start="31:8" pos:end="31:26">ff_mpa_check_header</name><argument_list pos:start="31:27" pos:end="31:34">(<argument pos:start="31:28" pos:end="31:33"><expr pos:start="31:28" pos:end="31:33"><name pos:start="31:28" pos:end="31:33">header</name></expr></argument>)</argument_list></call> <operator pos:start="31:36" pos:end="31:36">&lt;</operator> <literal type="number" pos:start="31:38" pos:end="31:38">0</literal></expr>)</condition><block pos:start="31:40" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:18">

        <expr_stmt pos:start="33:9" pos:end="33:56"><expr pos:start="33:9" pos:end="33:55"><call pos:start="33:9" pos:end="33:55"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:55">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:54"><expr pos:start="33:37" pos:end="33:54"><literal type="string" pos:start="33:37" pos:end="33:54">"Header missing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:70">(<expr pos:start="41:9" pos:end="41:69"><call pos:start="41:9" pos:end="41:64"><name pos:start="41:9" pos:end="41:34">ff_mpegaudio_decode_header</name><argument_list pos:start="41:35" pos:end="41:64">(<argument pos:start="41:36" pos:end="41:55"><expr pos:start="41:36" pos:end="41:55"><operator pos:start="41:36" pos:end="41:36">(</operator><name pos:start="41:37" pos:end="41:51">MPADecodeHeader</name> <operator pos:start="41:53" pos:end="41:53">*</operator><operator pos:start="41:54" pos:end="41:54">)</operator><name pos:start="41:55" pos:end="41:55">s</name></expr></argument>, <argument pos:start="41:58" pos:end="41:63"><expr pos:start="41:58" pos:end="41:63"><name pos:start="41:58" pos:end="41:63">header</name></expr></argument>)</argument_list></call> <operator pos:start="41:66" pos:end="41:67">==</operator> <literal type="number" pos:start="41:69" pos:end="41:69">1</literal></expr>)</condition> <block pos:start="41:72" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:18">

        <comment type="block" pos:start="43:9" pos:end="43:56">/* free format: prepare to compute frame size */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:27"><expr pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:21">frame_size</name></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <operator pos:start="45:25" pos:end="45:25">-</operator><literal type="number" pos:start="45:26" pos:end="45:26">1</literal></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="51:5" pos:end="51:27">/* update codec info */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:37"><expr pos:start="53:5" pos:end="53:36"><name pos:start="53:5" pos:end="53:19"><name pos:start="53:5" pos:end="53:9">avctx</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:19">channels</name></name> <operator pos:start="53:21" pos:end="53:21">=</operator> <name pos:start="53:23" pos:end="53:36"><name pos:start="53:23" pos:end="53:23">s</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:36">nb_channels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:34"><expr pos:start="55:5" pos:end="55:33"><name pos:start="55:5" pos:end="55:19"><name pos:start="55:5" pos:end="55:9">avctx</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:19">bit_rate</name></name> <operator pos:start="55:21" pos:end="55:21">=</operator> <name pos:start="55:23" pos:end="55:33"><name pos:start="55:23" pos:end="55:23">s</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:33">bit_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:29"><expr pos:start="57:5" pos:end="57:28"><name pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:9">avctx</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:17">sub_id</name></name> <operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:28"><name pos:start="57:21" pos:end="57:21">s</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:28">layer</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="63:18"><if pos:start="61:5" pos:end="63:18">if<condition pos:start="61:7" pos:end="61:57">(<expr pos:start="61:8" pos:end="61:56"><operator pos:start="61:8" pos:end="61:8">*</operator><name pos:start="61:9" pos:end="61:17">data_size</name> <operator pos:start="61:19" pos:end="61:19">&lt;</operator> <literal type="number" pos:start="61:21" pos:end="61:24">1152</literal><operator pos:start="61:25" pos:end="61:25">*</operator><name pos:start="61:26" pos:end="61:40"><name pos:start="61:26" pos:end="61:30">avctx</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:40">channels</name></name><operator pos:start="61:41" pos:end="61:41">*</operator><sizeof pos:start="61:42" pos:end="61:56">sizeof<argument_list pos:start="61:48" pos:end="61:56">(<argument pos:start="61:49" pos:end="61:55"><expr pos:start="61:49" pos:end="61:55"><name pos:start="61:49" pos:end="61:55">OUT_INT</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:18"><block_content pos:start="63:9" pos:end="63:18">

        <return pos:start="63:9" pos:end="63:18">return <expr pos:start="63:16" pos:end="63:17"><operator pos:start="63:16" pos:end="63:16">-</operator><literal type="number" pos:start="63:17" pos:end="63:17">1</literal></expr>;</return></block_content></block></if></if_stmt>




    <if_stmt pos:start="68:5" pos:end="80:5"><if pos:start="68:5" pos:end="74:5">if<condition pos:start="68:7" pos:end="68:52">(<expr pos:start="68:8" pos:end="68:51"><name pos:start="68:8" pos:end="68:20"><name pos:start="68:8" pos:end="68:8">s</name><operator pos:start="68:9" pos:end="68:10">-&gt;</operator><name pos:start="68:11" pos:end="68:20">frame_size</name></name><operator pos:start="68:21" pos:end="68:22">&lt;=</operator><literal type="number" pos:start="68:23" pos:end="68:23">0</literal> <operator pos:start="68:25" pos:end="68:26">||</operator> <name pos:start="68:28" pos:end="68:40"><name pos:start="68:28" pos:end="68:28">s</name><operator pos:start="68:29" pos:end="68:30">-&gt;</operator><name pos:start="68:31" pos:end="68:40">frame_size</name></name> <operator pos:start="68:42" pos:end="68:42">&gt;</operator> <name pos:start="68:44" pos:end="68:51">buf_size</name></expr>)</condition><block pos:start="68:53" pos:end="74:5">{<block_content pos:start="70:9" pos:end="72:18">

        <expr_stmt pos:start="70:9" pos:end="70:58"><expr pos:start="70:9" pos:end="70:57"><call pos:start="70:9" pos:end="70:57"><name pos:start="70:9" pos:end="70:14">av_log</name><argument_list pos:start="70:15" pos:end="70:57">(<argument pos:start="70:16" pos:end="70:20"><expr pos:start="70:16" pos:end="70:20"><name pos:start="70:16" pos:end="70:20">avctx</name></expr></argument>, <argument pos:start="70:23" pos:end="70:34"><expr pos:start="70:23" pos:end="70:34"><name pos:start="70:23" pos:end="70:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="70:37" pos:end="70:56"><expr pos:start="70:37" pos:end="70:56"><literal type="string" pos:start="70:37" pos:end="70:56">"incomplete frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="72:9" pos:end="72:18">return <expr pos:start="72:16" pos:end="72:17"><operator pos:start="72:16" pos:end="72:16">-</operator><literal type="number" pos:start="72:17" pos:end="72:17">1</literal></expr>;</return>

    </block_content>}</block></if><if type="elseif" pos:start="74:6" pos:end="80:5">else if<condition pos:start="74:13" pos:end="74:38">(<expr pos:start="74:14" pos:end="74:37"><name pos:start="74:14" pos:end="74:26"><name pos:start="74:14" pos:end="74:14">s</name><operator pos:start="74:15" pos:end="74:16">-&gt;</operator><name pos:start="74:17" pos:end="74:26">frame_size</name></name> <operator pos:start="74:28" pos:end="74:28">&lt;</operator> <name pos:start="74:30" pos:end="74:37">buf_size</name></expr>)</condition><block pos:start="74:39" pos:end="80:5">{<block_content pos:start="76:9" pos:end="78:32">

        <expr_stmt pos:start="76:9" pos:end="76:62"><expr pos:start="76:9" pos:end="76:61"><call pos:start="76:9" pos:end="76:61"><name pos:start="76:9" pos:end="76:14">av_log</name><argument_list pos:start="76:15" pos:end="76:61">(<argument pos:start="76:16" pos:end="76:20"><expr pos:start="76:16" pos:end="76:20"><name pos:start="76:16" pos:end="76:20">avctx</name></expr></argument>, <argument pos:start="76:23" pos:end="76:34"><expr pos:start="76:23" pos:end="76:34"><name pos:start="76:23" pos:end="76:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="76:37" pos:end="76:60"><expr pos:start="76:37" pos:end="76:60"><literal type="string" pos:start="76:37" pos:end="76:60">"incorrect frame size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="78:9" pos:end="78:32"><expr pos:start="78:9" pos:end="78:31"><name pos:start="78:9" pos:end="78:16">buf_size</name><operator pos:start="78:17" pos:end="78:17">=</operator> <name pos:start="78:19" pos:end="78:31"><name pos:start="78:19" pos:end="78:19">s</name><operator pos:start="78:20" pos:end="78:21">-&gt;</operator><name pos:start="78:22" pos:end="78:31">frame_size</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="84:5" pos:end="84:62"><expr pos:start="84:5" pos:end="84:61"><name pos:start="84:5" pos:end="84:12">out_size</name> <operator pos:start="84:14" pos:end="84:14">=</operator> <call pos:start="84:16" pos:end="84:61"><name pos:start="84:16" pos:end="84:30">mp_decode_frame</name><argument_list pos:start="84:31" pos:end="84:61">(<argument pos:start="84:32" pos:end="84:32"><expr pos:start="84:32" pos:end="84:32"><name pos:start="84:32" pos:end="84:32">s</name></expr></argument>, <argument pos:start="84:35" pos:end="84:45"><expr pos:start="84:35" pos:end="84:45"><name pos:start="84:35" pos:end="84:45">out_samples</name></expr></argument>, <argument pos:start="84:48" pos:end="84:50"><expr pos:start="84:48" pos:end="84:50"><name pos:start="84:48" pos:end="84:50">buf</name></expr></argument>, <argument pos:start="84:53" pos:end="84:60"><expr pos:start="84:53" pos:end="84:60"><name pos:start="84:53" pos:end="84:60">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="86:5" pos:end="96:80"><if pos:start="86:5" pos:end="94:5">if<condition pos:start="86:7" pos:end="86:19">(<expr pos:start="86:8" pos:end="86:18"><name pos:start="86:8" pos:end="86:15">out_size</name><operator pos:start="86:16" pos:end="86:17">&gt;=</operator><literal type="number" pos:start="86:18" pos:end="86:18">0</literal></expr>)</condition><block pos:start="86:20" pos:end="94:5">{<block_content pos:start="88:9" pos:end="90:44">

        <expr_stmt pos:start="88:9" pos:end="88:30"><expr pos:start="88:9" pos:end="88:29"><operator pos:start="88:9" pos:end="88:9">*</operator><name pos:start="88:10" pos:end="88:18">data_size</name> <operator pos:start="88:20" pos:end="88:20">=</operator> <name pos:start="88:22" pos:end="88:29">out_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="90:9" pos:end="90:44"><expr pos:start="90:9" pos:end="90:43"><name pos:start="90:9" pos:end="90:26"><name pos:start="90:9" pos:end="90:13">avctx</name><operator pos:start="90:14" pos:end="90:15">-&gt;</operator><name pos:start="90:16" pos:end="90:26">sample_rate</name></name> <operator pos:start="90:28" pos:end="90:28">=</operator> <name pos:start="90:30" pos:end="90:43"><name pos:start="90:30" pos:end="90:30">s</name><operator pos:start="90:31" pos:end="90:32">-&gt;</operator><name pos:start="90:33" pos:end="90:43">sample_rate</name></name></expr>;</expr_stmt>

        <comment type="line" pos:start="92:9" pos:end="92:73">//FIXME maybe move the other codec info stuff from above here too</comment>

    </block_content>}</block></if><else pos:start="94:6" pos:end="96:80">else<block type="pseudo" pos:start="96:9" pos:end="96:80"><block_content pos:start="96:9" pos:end="96:80">

        <expr_stmt pos:start="96:9" pos:end="96:80"><expr pos:start="96:9" pos:end="96:79"><call pos:start="96:9" pos:end="96:79"><name pos:start="96:9" pos:end="96:14">av_log</name><argument_list pos:start="96:15" pos:end="96:79">(<argument pos:start="96:16" pos:end="96:20"><expr pos:start="96:16" pos:end="96:20"><name pos:start="96:16" pos:end="96:20">avctx</name></expr></argument>, <argument pos:start="96:23" pos:end="96:34"><expr pos:start="96:23" pos:end="96:34"><name pos:start="96:23" pos:end="96:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="96:37" pos:end="96:78"><expr pos:start="96:37" pos:end="96:78"><literal type="string" pos:start="96:37" pos:end="96:78">"Error while decoding MPEG audio frame.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="96:82" pos:end="96:145">//FIXME return -1 / but also return the number of bytes consumed</comment>

    <expr_stmt pos:start="98:5" pos:end="98:22"><expr pos:start="98:5" pos:end="98:21"><name pos:start="98:5" pos:end="98:17"><name pos:start="98:5" pos:end="98:5">s</name><operator pos:start="98:6" pos:end="98:7">-&gt;</operator><name pos:start="98:8" pos:end="98:17">frame_size</name></name> <operator pos:start="98:19" pos:end="98:19">=</operator> <literal type="number" pos:start="98:21" pos:end="98:21">0</literal></expr>;</expr_stmt>

    <return pos:start="100:5" pos:end="100:20">return <expr pos:start="100:12" pos:end="100:19"><name pos:start="100:12" pos:end="100:19">buf_size</name></expr>;</return>

</block_content>}</block></function></unit>
