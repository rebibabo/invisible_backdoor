<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24242.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">display_picref</name><parameter_list pos:start="1:27" pos:end="1:75">(<parameter pos:start="1:28" pos:end="1:52"><decl pos:start="1:28" pos:end="1:52"><type pos:start="1:28" pos:end="1:52"><name pos:start="1:28" pos:end="1:44">AVFilterBufferRef</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:52">picref</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:74"><decl pos:start="1:55" pos:end="1:74"><type pos:start="1:55" pos:end="1:74"><name pos:start="1:55" pos:end="1:64">AVRational</name></type> <name pos:start="1:66" pos:end="1:74">time_base</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:19">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">x</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:15">p0</name></decl>, <decl pos:start="7:18" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:17">delay</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="33:5"><if pos:start="13:5" pos:end="33:5">if <condition pos:start="13:8" pos:end="13:38">(<expr pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:14">picref</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:19">pts</name></name> <operator pos:start="13:21" pos:end="13:22">!=</operator> <name pos:start="13:24" pos:end="13:37">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="13:40" pos:end="33:5">{<block_content pos:start="15:9" pos:end="31:31">

        <if_stmt pos:start="15:9" pos:end="29:9"><if pos:start="15:9" pos:end="29:9">if <condition pos:start="15:12" pos:end="15:39">(<expr pos:start="15:13" pos:end="15:38"><name pos:start="15:13" pos:end="15:20">last_pts</name> <operator pos:start="15:22" pos:end="15:23">!=</operator> <name pos:start="15:25" pos:end="15:38">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="15:41" pos:end="29:9">{<block_content pos:start="21:13" pos:end="27:30">

            <comment type="block" pos:start="17:13" pos:end="19:68">/* sleep roughly the right amount of time;

             * usleep is in microseconds, just like AV_TIME_BASE. */</comment>

            <expr_stmt pos:start="21:13" pos:end="23:60"><expr pos:start="21:13" pos:end="23:59"><name pos:start="21:13" pos:end="21:17">delay</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <call pos:start="21:21" pos:end="23:59"><name pos:start="21:21" pos:end="21:32">av_rescale_q</name><argument_list pos:start="21:33" pos:end="23:59">(<argument pos:start="21:34" pos:end="21:55"><expr pos:start="21:34" pos:end="21:55"><name pos:start="21:34" pos:end="21:44"><name pos:start="21:34" pos:end="21:39">picref</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:44">pts</name></name> <operator pos:start="21:46" pos:end="21:46">-</operator> <name pos:start="21:48" pos:end="21:55">last_pts</name></expr></argument>,

                                 <argument pos:start="23:34" pos:end="23:42"><expr pos:start="23:34" pos:end="23:42"><name pos:start="23:34" pos:end="23:42">time_base</name></expr></argument>, <argument pos:start="23:45" pos:end="23:58"><expr pos:start="23:45" pos:end="23:58"><name pos:start="23:45" pos:end="23:58">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="25:13" pos:end="27:30"><if pos:start="25:13" pos:end="27:30">if <condition pos:start="25:16" pos:end="25:45">(<expr pos:start="25:17" pos:end="25:44"><name pos:start="25:17" pos:end="25:21">delay</name> <operator pos:start="25:23" pos:end="25:23">&gt;</operator> <literal type="number" pos:start="25:25" pos:end="25:25">0</literal> <operator pos:start="25:27" pos:end="25:28">&amp;&amp;</operator> <name pos:start="25:30" pos:end="25:34">delay</name> <operator pos:start="25:36" pos:end="25:36">&lt;</operator> <literal type="number" pos:start="25:38" pos:end="25:44">1000000</literal></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:30"><block_content pos:start="27:17" pos:end="27:30">

                <expr_stmt pos:start="27:17" pos:end="27:30"><expr pos:start="27:17" pos:end="27:29"><call pos:start="27:17" pos:end="27:29"><name pos:start="27:17" pos:end="27:22">usleep</name><argument_list pos:start="27:23" pos:end="27:29">(<argument pos:start="27:24" pos:end="27:28"><expr pos:start="27:24" pos:end="27:28"><name pos:start="27:24" pos:end="27:28">delay</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:31"><expr pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:16">last_pts</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:30"><name pos:start="31:20" pos:end="31:25">picref</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:30">pts</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:42">/* Trivial ASCII grayscale display. */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:6">p0</name> <operator pos:start="39:8" pos:end="39:8">=</operator> <name pos:start="39:10" pos:end="39:24"><name pos:start="39:10" pos:end="39:15">picref</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:21">data</name><index pos:start="39:22" pos:end="39:24">[<expr pos:start="39:23" pos:end="39:23"><literal type="number" pos:start="39:23" pos:end="39:23">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:18"><expr pos:start="41:5" pos:end="41:17"><call pos:start="41:5" pos:end="41:17"><name pos:start="41:5" pos:end="41:8">puts</name><argument_list pos:start="41:9" pos:end="41:17">(<argument pos:start="41:10" pos:end="41:16"><expr pos:start="41:10" pos:end="41:16"><literal type="string" pos:start="41:10" pos:end="41:16">"\033c"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="43:5" pos:end="55:5">for <control pos:start="43:9" pos:end="43:42">(<init pos:start="43:10" pos:end="43:15"><expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:10">y</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>;</init> <condition pos:start="43:17" pos:end="43:37"><expr pos:start="43:17" pos:end="43:36"><name pos:start="43:17" pos:end="43:17">y</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <name pos:start="43:21" pos:end="43:36"><name pos:start="43:21" pos:end="43:26">picref</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:33">video</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:36">h</name></name></expr>;</condition> <incr pos:start="43:39" pos:end="43:41"><expr pos:start="43:39" pos:end="43:41"><name pos:start="43:39" pos:end="43:39">y</name><operator pos:start="43:40" pos:end="43:41">++</operator></expr></incr>)</control> <block pos:start="43:44" pos:end="55:5">{<block_content pos:start="45:9" pos:end="53:34">

        <expr_stmt pos:start="45:9" pos:end="45:15"><expr pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:9">p</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <name pos:start="45:13" pos:end="45:14">p0</name></expr>;</expr_stmt>

        <for pos:start="47:9" pos:end="49:42">for <control pos:start="47:13" pos:end="47:46">(<init pos:start="47:14" pos:end="47:19"><expr pos:start="47:14" pos:end="47:18"><name pos:start="47:14" pos:end="47:14">x</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr>;</init> <condition pos:start="47:21" pos:end="47:41"><expr pos:start="47:21" pos:end="47:40"><name pos:start="47:21" pos:end="47:21">x</name> <operator pos:start="47:23" pos:end="47:23">&lt;</operator> <name pos:start="47:25" pos:end="47:40"><name pos:start="47:25" pos:end="47:30">picref</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:37">video</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:40">w</name></name></expr>;</condition> <incr pos:start="47:43" pos:end="47:45"><expr pos:start="47:43" pos:end="47:45"><name pos:start="47:43" pos:end="47:43">x</name><operator pos:start="47:44" pos:end="47:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="49:13" pos:end="49:42"><block_content pos:start="49:13" pos:end="49:42">

            <expr_stmt pos:start="49:13" pos:end="49:42"><expr pos:start="49:13" pos:end="49:41"><call pos:start="49:13" pos:end="49:41"><name pos:start="49:13" pos:end="49:19">putchar</name><argument_list pos:start="49:20" pos:end="49:41">(<argument pos:start="49:21" pos:end="49:40"><expr pos:start="49:21" pos:end="49:40"><literal type="string" pos:start="49:21" pos:end="49:27">" .-+#"</literal><index pos:start="49:28" pos:end="49:40">[<expr pos:start="49:29" pos:end="49:39"><operator pos:start="49:29" pos:end="49:29">*</operator><operator pos:start="49:30" pos:end="49:30">(</operator><name pos:start="49:31" pos:end="49:31">p</name><operator pos:start="49:32" pos:end="49:33">++</operator><operator pos:start="49:34" pos:end="49:34">)</operator> <operator pos:start="49:36" pos:end="49:36">/</operator> <literal type="number" pos:start="49:38" pos:end="49:39">52</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="51:9" pos:end="51:22"><expr pos:start="51:9" pos:end="51:21"><call pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:15">putchar</name><argument_list pos:start="51:16" pos:end="51:21">(<argument pos:start="51:17" pos:end="51:20"><expr pos:start="51:17" pos:end="51:20"><literal type="char" pos:start="51:17" pos:end="51:20">'\n'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:34"><expr pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:10">p0</name> <operator pos:start="53:12" pos:end="53:13">+=</operator> <name pos:start="53:15" pos:end="53:33"><name pos:start="53:15" pos:end="53:20">picref</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:30">linesize</name><index pos:start="53:31" pos:end="53:33">[<expr pos:start="53:32" pos:end="53:32"><literal type="number" pos:start="53:32" pos:end="53:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="57:5" pos:end="57:19"><expr pos:start="57:5" pos:end="57:18"><call pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:10">fflush</name><argument_list pos:start="57:11" pos:end="57:18">(<argument pos:start="57:12" pos:end="57:17"><expr pos:start="57:12" pos:end="57:17"><name pos:start="57:12" pos:end="57:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
