<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17784.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:39">memory_region_dispatch_read</name><parameter_list pos:start="1:40" pos:end="7:54">(<parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:52">MemoryRegion</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:56">mr</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:51"><decl pos:start="3:41" pos:end="3:51"><type pos:start="3:41" pos:end="3:51"><name pos:start="3:41" pos:end="3:46">hwaddr</name></type> <name pos:start="3:48" pos:end="3:51">addr</name></decl></parameter>,

                                        <parameter pos:start="5:41" pos:end="5:54"><decl pos:start="5:41" pos:end="5:54"><type pos:start="5:41" pos:end="5:54"><name pos:start="5:41" pos:end="5:48">uint64_t</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:54">pval</name></decl></parameter>,

                                        <parameter pos:start="7:41" pos:end="7:53"><decl pos:start="7:41" pos:end="7:53"><type pos:start="7:41" pos:end="7:53"><name pos:start="7:41" pos:end="7:48">unsigned</name></type> <name pos:start="7:50" pos:end="7:53">size</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="27:1">{<block_content pos:start="11:5" pos:end="25:17">

    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:59">(<expr pos:start="11:9" pos:end="11:58"><operator pos:start="11:9" pos:end="11:9">!</operator><call pos:start="11:10" pos:end="11:58"><name pos:start="11:10" pos:end="11:35">memory_region_access_valid</name><argument_list pos:start="11:36" pos:end="11:58">(<argument pos:start="11:37" pos:end="11:38"><expr pos:start="11:37" pos:end="11:38"><name pos:start="11:37" pos:end="11:38">mr</name></expr></argument>, <argument pos:start="11:41" pos:end="11:44"><expr pos:start="11:41" pos:end="11:44"><name pos:start="11:41" pos:end="11:44">addr</name></expr></argument>, <argument pos:start="11:47" pos:end="11:50"><expr pos:start="11:47" pos:end="11:50"><name pos:start="11:47" pos:end="11:50">size</name></expr></argument>, <argument pos:start="11:53" pos:end="11:57"><expr pos:start="11:53" pos:end="11:57"><name pos:start="11:53" pos:end="11:57">false</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:61" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:20">

        <expr_stmt pos:start="13:9" pos:end="13:52"><expr pos:start="13:9" pos:end="13:51"><operator pos:start="13:9" pos:end="13:9">*</operator><name pos:start="13:10" pos:end="13:13">pval</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <call pos:start="13:17" pos:end="13:51"><name pos:start="13:17" pos:end="13:35">unassigned_mem_read</name><argument_list pos:start="13:36" pos:end="13:51">(<argument pos:start="13:37" pos:end="13:38"><expr pos:start="13:37" pos:end="13:38"><name pos:start="13:37" pos:end="13:38">mr</name></expr></argument>, <argument pos:start="13:41" pos:end="13:44"><expr pos:start="13:41" pos:end="13:44"><name pos:start="13:41" pos:end="13:44">addr</name></expr></argument>, <argument pos:start="13:47" pos:end="13:50"><expr pos:start="13:47" pos:end="13:50"><name pos:start="13:47" pos:end="13:50">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">true</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:57"><expr pos:start="21:5" pos:end="21:56"><operator pos:start="21:5" pos:end="21:5">*</operator><name pos:start="21:6" pos:end="21:9">pval</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:56"><name pos:start="21:13" pos:end="21:40">memory_region_dispatch_read1</name><argument_list pos:start="21:41" pos:end="21:56">(<argument pos:start="21:42" pos:end="21:43"><expr pos:start="21:42" pos:end="21:43"><name pos:start="21:42" pos:end="21:43">mr</name></expr></argument>, <argument pos:start="21:46" pos:end="21:49"><expr pos:start="21:46" pos:end="21:49"><name pos:start="21:46" pos:end="21:49">addr</name></expr></argument>, <argument pos:start="21:52" pos:end="21:55"><expr pos:start="21:52" pos:end="21:55"><name pos:start="21:52" pos:end="21:55">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><call pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:21">adjust_endianness</name><argument_list pos:start="23:22" pos:end="23:37">(<argument pos:start="23:23" pos:end="23:24"><expr pos:start="23:23" pos:end="23:24"><name pos:start="23:23" pos:end="23:24">mr</name></expr></argument>, <argument pos:start="23:27" pos:end="23:30"><expr pos:start="23:27" pos:end="23:30"><name pos:start="23:27" pos:end="23:30">pval</name></expr></argument>, <argument pos:start="23:33" pos:end="23:36"><expr pos:start="23:33" pos:end="23:36"><name pos:start="23:33" pos:end="23:36">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="25:5" pos:end="25:17">return <expr pos:start="25:12" pos:end="25:16"><name pos:start="25:12" pos:end="25:16">false</name></expr>;</return>

</block_content>}</block></function>
</unit>
