<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25337.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:21"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:21">int64_t</name></type> <name pos:start="1:23" pos:end="1:38">get_image_offset</name><parameter_list pos:start="1:39" pos:end="3:50">(<parameter pos:start="1:40" pos:end="1:59"><decl pos:start="1:40" pos:end="1:59"><type pos:start="1:40" pos:end="1:59"><name pos:start="1:40" pos:end="1:55">BlockDriverState</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:59">bs</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:76"><decl pos:start="1:62" pos:end="1:76"><type pos:start="1:62" pos:end="1:76"><name pos:start="1:62" pos:end="1:69">uint64_t</name></type> <name pos:start="1:71" pos:end="1:76">offset</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:49"><decl pos:start="3:40" pos:end="3:49"><type pos:start="3:40" pos:end="3:49"><name pos:start="3:40" pos:end="3:43">bool</name></type> <name pos:start="3:45" pos:end="3:49">write</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:24">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">BDRVVPCState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:32">= <expr pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:24">bs</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:26">bitmap_offset</name></decl>, <decl pos:start="9:29" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:29" pos:end="9:40">block_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:28">pagetable_index</name></decl>, <decl pos:start="11:31" pos:end="11:45"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:31" pos:end="11:45">offset_in_block</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:45"><expr pos:start="15:5" pos:end="15:44"><name pos:start="15:5" pos:end="15:19">pagetable_index</name> <operator pos:start="15:21" pos:end="15:21">=</operator> <name pos:start="15:23" pos:end="15:28">offset</name> <operator pos:start="15:30" pos:end="15:30">/</operator> <name pos:start="15:32" pos:end="15:44"><name pos:start="15:32" pos:end="15:32">s</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:44">block_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:19">offset_in_block</name> <operator pos:start="17:21" pos:end="17:21">=</operator> <name pos:start="17:23" pos:end="17:28">offset</name> <operator pos:start="17:30" pos:end="17:30">%</operator> <name pos:start="17:32" pos:end="17:44"><name pos:start="17:32" pos:end="17:32">s</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:44">block_size</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if <condition pos:start="21:8" pos:end="21:95">(<expr pos:start="21:9" pos:end="21:94"><name pos:start="21:9" pos:end="21:23">pagetable_index</name> <operator pos:start="21:25" pos:end="21:26">&gt;=</operator> <name pos:start="21:28" pos:end="21:47"><name pos:start="21:28" pos:end="21:28">s</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:47">max_table_entries</name></name> <operator pos:start="21:49" pos:end="21:50">||</operator> <name pos:start="21:52" pos:end="21:80"><name pos:start="21:52" pos:end="21:52">s</name><operator pos:start="21:53" pos:end="21:54">-&gt;</operator><name pos:start="21:55" pos:end="21:63">pagetable</name><index pos:start="21:64" pos:end="21:80">[<expr pos:start="21:65" pos:end="21:79"><name pos:start="21:65" pos:end="21:79">pagetable_index</name></expr>]</index></name> <operator pos:start="21:82" pos:end="21:83">==</operator> <literal type="number" pos:start="21:85" pos:end="21:94">0xffffffff</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="block" pos:start="23:20" pos:end="23:38">/* not allocated */</comment>



    <expr_stmt pos:start="27:5" pos:end="27:67"><expr pos:start="27:5" pos:end="27:66"><name pos:start="27:5" pos:end="27:17">bitmap_offset</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <literal type="number" pos:start="27:21" pos:end="27:23">512</literal> <operator pos:start="27:25" pos:end="27:25">*</operator> <operator pos:start="27:27" pos:end="27:27">(</operator><name pos:start="27:28" pos:end="27:35">uint64_t</name><operator pos:start="27:36" pos:end="27:36">)</operator> <name pos:start="27:38" pos:end="27:66"><name pos:start="27:38" pos:end="27:38">s</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:49">pagetable</name><index pos:start="27:50" pos:end="27:66">[<expr pos:start="27:51" pos:end="27:65"><name pos:start="27:51" pos:end="27:65">pagetable_index</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:68"><expr pos:start="29:5" pos:end="29:67"><name pos:start="29:5" pos:end="29:16">block_offset</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:32">bitmap_offset</name> <operator pos:start="29:34" pos:end="29:34">+</operator> <name pos:start="29:36" pos:end="29:49"><name pos:start="29:36" pos:end="29:36">s</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:49">bitmap_size</name></name> <operator pos:start="29:51" pos:end="29:51">+</operator> <name pos:start="29:53" pos:end="29:67">offset_in_block</name></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="41:22">/* We must ensure that we don't write to any sectors which are marked as

       unused in the bitmap. We get away with setting all bits in the block

       bitmap each time we write to a new block. This might cause Virtual PC to

       miss sparse read optimization, but it's not a problem in terms of

       correctness. */</comment>

    <if_stmt pos:start="43:5" pos:end="55:5"><if pos:start="43:5" pos:end="55:5">if <condition pos:start="43:8" pos:end="43:58">(<expr pos:start="43:9" pos:end="43:57"><name pos:start="43:9" pos:end="43:13">write</name> <operator pos:start="43:15" pos:end="43:16">&amp;&amp;</operator> <operator pos:start="43:18" pos:end="43:18">(</operator><name pos:start="43:19" pos:end="43:39"><name pos:start="43:19" pos:end="43:19">s</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:39">last_bitmap_offset</name></name> <operator pos:start="43:41" pos:end="43:42">!=</operator> <name pos:start="43:44" pos:end="43:56">bitmap_offset</name><operator pos:start="43:57" pos:end="43:57">)</operator></expr>)</condition> <block pos:start="43:60" pos:end="55:5">{<block_content pos:start="45:9" pos:end="53:74">

        <decl_stmt pos:start="45:9" pos:end="45:39"><decl pos:start="45:9" pos:end="45:38"><type pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:15">uint8_t</name></type> <name pos:start="45:17" pos:end="45:38"><name pos:start="45:17" pos:end="45:22">bitmap</name><index pos:start="45:23" pos:end="45:38">[<expr pos:start="45:24" pos:end="45:37"><name pos:start="45:24" pos:end="45:37"><name pos:start="45:24" pos:end="45:24">s</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:37">bitmap_size</name></name></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:46"><expr pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:29">last_bitmap_offset</name></name> <operator pos:start="49:31" pos:end="49:31">=</operator> <name pos:start="49:33" pos:end="49:45">bitmap_offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:45"><expr pos:start="51:9" pos:end="51:44"><call pos:start="51:9" pos:end="51:44"><name pos:start="51:9" pos:end="51:14">memset</name><argument_list pos:start="51:15" pos:end="51:44">(<argument pos:start="51:16" pos:end="51:21"><expr pos:start="51:16" pos:end="51:21"><name pos:start="51:16" pos:end="51:21">bitmap</name></expr></argument>, <argument pos:start="51:24" pos:end="51:27"><expr pos:start="51:24" pos:end="51:27"><literal type="number" pos:start="51:24" pos:end="51:27">0xff</literal></expr></argument>, <argument pos:start="51:30" pos:end="51:43"><expr pos:start="51:30" pos:end="51:43"><name pos:start="51:30" pos:end="51:43"><name pos:start="51:30" pos:end="51:30">s</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:43">bitmap_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:74"><expr pos:start="53:9" pos:end="53:73"><call pos:start="53:9" pos:end="53:73"><name pos:start="53:9" pos:end="53:24">bdrv_pwrite_sync</name><argument_list pos:start="53:25" pos:end="53:73">(<argument pos:start="53:26" pos:end="53:33"><expr pos:start="53:26" pos:end="53:33"><name pos:start="53:26" pos:end="53:33"><name pos:start="53:26" pos:end="53:27">bs</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:33">file</name></name></expr></argument>, <argument pos:start="53:36" pos:end="53:48"><expr pos:start="53:36" pos:end="53:48"><name pos:start="53:36" pos:end="53:48">bitmap_offset</name></expr></argument>, <argument pos:start="53:51" pos:end="53:56"><expr pos:start="53:51" pos:end="53:56"><name pos:start="53:51" pos:end="53:56">bitmap</name></expr></argument>, <argument pos:start="53:59" pos:end="53:72"><expr pos:start="53:59" pos:end="53:72"><name pos:start="53:59" pos:end="53:72"><name pos:start="53:59" pos:end="53:59">s</name><operator pos:start="53:60" pos:end="53:61">-&gt;</operator><name pos:start="53:62" pos:end="53:72">bitmap_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="59:5" pos:end="59:24">return <expr pos:start="59:12" pos:end="59:23"><name pos:start="59:12" pos:end="59:23">block_offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
