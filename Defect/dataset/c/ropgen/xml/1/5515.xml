<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5515.c" pos:tabs="8"><function pos:start="1:1" pos:end="247:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">vqf_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="247:13">{<block_content pos:start="5:5" pos:end="247:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VqfContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">c</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">s</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name>  <init pos:start="7:19" pos:end="7:48">= <expr pos:start="7:21" pos:end="7:48"><call pos:start="7:21" pos:end="7:48"><name pos:start="7:21" pos:end="7:39">avformat_new_stream</name><argument_list pos:start="7:40" pos:end="7:48">(<argument pos:start="7:41" pos:end="7:41"><expr pos:start="7:41" pos:end="7:41"><name pos:start="7:41" pos:end="7:41">s</name></expr></argument>, <argument pos:start="7:44" pos:end="7:47"><expr pos:start="7:44" pos:end="7:47"><name pos:start="7:44" pos:end="7:47">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">chunk_tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">rate_flag</name> <init pos:start="11:19" pos:end="11:22">= <expr pos:start="11:21" pos:end="11:22"><operator pos:start="11:21" pos:end="11:21">-</operator><literal type="number" pos:start="11:22" pos:end="11:22">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">header_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:20">read_bitrate</name> <init pos:start="15:22" pos:end="15:24">= <expr pos:start="15:24" pos:end="15:24"><literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:13"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:27"><decl pos:start="19:5" pos:end="19:26"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">uint8_t</name></type> <name pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:22">comm_chunk</name><index pos:start="19:23" pos:end="19:26">[<expr pos:start="19:24" pos:end="19:25"><literal type="number" pos:start="19:24" pos:end="19:25">12</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:31"><if pos:start="23:5" pos:end="25:31">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:11">st</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:31"><block_content pos:start="25:9" pos:end="25:31">

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:25"><expr pos:start="29:5" pos:end="29:24"><call pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:13">avio_skip</name><argument_list pos:start="29:14" pos:end="29:24">(<argument pos:start="29:15" pos:end="29:19"><expr pos:start="29:15" pos:end="29:19"><name pos:start="29:15" pos:end="29:19"><name pos:start="29:15" pos:end="29:15">s</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:19">pb</name></name></expr></argument>, <argument pos:start="29:22" pos:end="29:23"><expr pos:start="29:22" pos:end="29:23"><literal type="number" pos:start="29:22" pos:end="29:23">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:35"><expr pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:15">header_size</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:34"><name pos:start="33:19" pos:end="33:27">avio_rb32</name><argument_list pos:start="33:28" pos:end="33:34">(<argument pos:start="33:29" pos:end="33:33"><expr pos:start="33:29" pos:end="33:33"><name pos:start="33:29" pos:end="33:33"><name pos:start="33:29" pos:end="33:29">s</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:47"><expr pos:start="37:5" pos:end="37:46"><name pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:6">st</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:13">codec</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:25">codec_type</name></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <name pos:start="37:29" pos:end="37:46">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:47"><expr pos:start="39:5" pos:end="39:46"><name pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:6">st</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:13">codec</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:23">codec_id</name></name>   <operator pos:start="39:27" pos:end="39:27">=</operator> <name pos:start="39:29" pos:end="39:46">AV_CODEC_ID_TWINVQ</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:23"><expr pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:6">st</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:18">start_time</name></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <literal type="number" pos:start="41:22" pos:end="41:22">0</literal></expr>;</expr_stmt>



    <do pos:start="45:5" pos:end="247:13">do <block pos:start="45:8" pos:end="247:13">{<block_content pos:start="47:9" pos:end="247:13">

        <decl_stmt pos:start="47:9" pos:end="47:16"><decl pos:start="47:9" pos:end="47:15"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:15">len</name></decl>;</decl_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:37"><expr pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:17">chunk_tag</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <call pos:start="49:21" pos:end="49:36"><name pos:start="49:21" pos:end="49:29">avio_rl32</name><argument_list pos:start="49:30" pos:end="49:36">(<argument pos:start="49:31" pos:end="49:35"><expr pos:start="49:31" pos:end="49:35"><name pos:start="49:31" pos:end="49:35"><name pos:start="49:31" pos:end="49:31">s</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:35">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="53:9" pos:end="55:18"><if pos:start="53:9" pos:end="55:18">if <condition pos:start="53:12" pos:end="53:48">(<expr pos:start="53:13" pos:end="53:47"><name pos:start="53:13" pos:end="53:21">chunk_tag</name> <operator pos:start="53:23" pos:end="53:24">==</operator> <call pos:start="53:26" pos:end="53:47"><name pos:start="53:26" pos:end="53:30">MKTAG</name><argument_list pos:start="53:31" pos:end="53:47">(<argument pos:start="53:32" pos:end="53:34"><expr pos:start="53:32" pos:end="53:34"><literal type="char" pos:start="53:32" pos:end="53:34">'D'</literal></expr></argument>,<argument pos:start="53:36" pos:end="53:38"><expr pos:start="53:36" pos:end="53:38"><literal type="char" pos:start="53:36" pos:end="53:38">'A'</literal></expr></argument>,<argument pos:start="53:40" pos:end="53:42"><expr pos:start="53:40" pos:end="53:42"><literal type="char" pos:start="53:40" pos:end="53:42">'T'</literal></expr></argument>,<argument pos:start="53:44" pos:end="53:46"><expr pos:start="53:44" pos:end="53:46"><literal type="char" pos:start="53:44" pos:end="53:46">'A'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:18"><block_content pos:start="55:13" pos:end="55:18">

            <break pos:start="55:13" pos:end="55:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:31"><expr pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:11">len</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="59:30"><name pos:start="59:15" pos:end="59:23">avio_rb32</name><argument_list pos:start="59:24" pos:end="59:30">(<argument pos:start="59:25" pos:end="59:29"><expr pos:start="59:25" pos:end="59:29"><name pos:start="59:25" pos:end="59:29"><name pos:start="59:25" pos:end="59:25">s</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="63:9" pos:end="247:13"><if pos:start="63:9" pos:end="247:13">if <condition pos:start="63:12" pos:end="63:39">(<expr pos:start="63:13" pos:end="63:38"><operator pos:start="63:13" pos:end="63:13">(</operator><name pos:start="63:14" pos:end="63:21">unsigned</name><operator pos:start="63:22" pos:end="63:22">)</operator> <name pos:start="63:24" pos:end="63:26">len</name> <operator pos:start="63:28" pos:end="63:28">&gt;</operator> <name pos:start="63:30" pos:end="63:36">INT_MAX</name><operator pos:start="63:37" pos:end="63:37">/</operator><literal type="number" pos:start="63:38" pos:end="63:38">2</literal></expr>)</condition> <block pos:start="63:41" pos:end="247:13">{<block_content pos:start="65:13" pos:end="247:13">

            <expr_stmt pos:start="65:13" pos:end="65:58"><expr pos:start="65:13" pos:end="65:57"><call pos:start="65:13" pos:end="65:57"><name pos:start="65:13" pos:end="65:18">av_log</name><argument_list pos:start="65:19" pos:end="65:57">(<argument pos:start="65:20" pos:end="65:20"><expr pos:start="65:20" pos:end="65:20"><name pos:start="65:20" pos:end="65:20">s</name></expr></argument>, <argument pos:start="65:23" pos:end="65:34"><expr pos:start="65:23" pos:end="65:34"><name pos:start="65:23" pos:end="65:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:37" pos:end="65:56"><expr pos:start="65:37" pos:end="65:56"><literal type="string" pos:start="65:37" pos:end="65:56">"Malformed header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





        <expr_stmt pos:start="71:9" pos:end="71:25"><expr pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:19">header_size</name> <operator pos:start="71:21" pos:end="71:22">-=</operator> <literal type="number" pos:start="71:24" pos:end="71:24">8</literal></expr>;</expr_stmt>



        <switch pos:start="75:9" pos:end="247:13">switch<condition pos:start="75:15" pos:end="75:25">(<expr pos:start="75:16" pos:end="75:24"><name pos:start="75:16" pos:end="75:24">chunk_tag</name></expr>)</condition><block pos:start="75:26" pos:end="247:13">{<block_content pos:start="77:9" pos:end="247:13">

        <case pos:start="77:9" pos:end="77:36">case <expr pos:start="77:14" pos:end="77:35"><call pos:start="77:14" pos:end="77:35"><name pos:start="77:14" pos:end="77:18">MKTAG</name><argument_list pos:start="77:19" pos:end="77:35">(<argument pos:start="77:20" pos:end="77:22"><expr pos:start="77:20" pos:end="77:22"><literal type="char" pos:start="77:20" pos:end="77:22">'C'</literal></expr></argument>,<argument pos:start="77:24" pos:end="77:26"><expr pos:start="77:24" pos:end="77:26"><literal type="char" pos:start="77:24" pos:end="77:26">'O'</literal></expr></argument>,<argument pos:start="77:28" pos:end="77:30"><expr pos:start="77:28" pos:end="77:30"><literal type="char" pos:start="77:28" pos:end="77:30">'M'</literal></expr></argument>,<argument pos:start="77:32" pos:end="77:34"><expr pos:start="77:32" pos:end="77:34"><literal type="char" pos:start="77:32" pos:end="77:34">'M'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <expr_stmt pos:start="79:13" pos:end="79:45"><expr pos:start="79:13" pos:end="79:44"><call pos:start="79:13" pos:end="79:44"><name pos:start="79:13" pos:end="79:21">avio_read</name><argument_list pos:start="79:22" pos:end="79:44">(<argument pos:start="79:23" pos:end="79:27"><expr pos:start="79:23" pos:end="79:27"><name pos:start="79:23" pos:end="79:27"><name pos:start="79:23" pos:end="79:23">s</name><operator pos:start="79:24" pos:end="79:25">-&gt;</operator><name pos:start="79:26" pos:end="79:27">pb</name></name></expr></argument>, <argument pos:start="79:30" pos:end="79:39"><expr pos:start="79:30" pos:end="79:39"><name pos:start="79:30" pos:end="79:39">comm_chunk</name></expr></argument>, <argument pos:start="79:42" pos:end="79:43"><expr pos:start="79:42" pos:end="79:43"><literal type="number" pos:start="79:42" pos:end="79:43">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:62"><expr pos:start="81:13" pos:end="81:61"><name pos:start="81:13" pos:end="81:31"><name pos:start="81:13" pos:end="81:14">st</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:21">codec</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:31">channels</name></name> <operator pos:start="81:33" pos:end="81:33">=</operator> <call pos:start="81:35" pos:end="81:57"><name pos:start="81:35" pos:end="81:41">AV_RB32</name><argument_list pos:start="81:42" pos:end="81:57">(<argument pos:start="81:43" pos:end="81:52"><expr pos:start="81:43" pos:end="81:52"><name pos:start="81:43" pos:end="81:52">comm_chunk</name></expr></argument>    )</argument_list></call> <operator pos:start="81:59" pos:end="81:59">+</operator> <literal type="number" pos:start="81:61" pos:end="81:61">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:58"><expr pos:start="83:13" pos:end="83:57"><name pos:start="83:13" pos:end="83:24">read_bitrate</name>        <operator pos:start="83:33" pos:end="83:33">=</operator> <call pos:start="83:35" pos:end="83:57"><name pos:start="83:35" pos:end="83:41">AV_RB32</name><argument_list pos:start="83:42" pos:end="83:57">(<argument pos:start="83:43" pos:end="83:56"><expr pos:start="83:43" pos:end="83:56"><name pos:start="83:43" pos:end="83:52">comm_chunk</name> <operator pos:start="83:54" pos:end="83:54">+</operator> <literal type="number" pos:start="83:56" pos:end="83:56">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:58"><expr pos:start="85:13" pos:end="85:57"><name pos:start="85:13" pos:end="85:21">rate_flag</name>           <operator pos:start="85:33" pos:end="85:33">=</operator> <call pos:start="85:35" pos:end="85:57"><name pos:start="85:35" pos:end="85:41">AV_RB32</name><argument_list pos:start="85:42" pos:end="85:57">(<argument pos:start="85:43" pos:end="85:56"><expr pos:start="85:43" pos:end="85:56"><name pos:start="85:43" pos:end="85:52">comm_chunk</name> <operator pos:start="85:54" pos:end="85:54">+</operator> <literal type="number" pos:start="85:56" pos:end="85:56">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:37"><expr pos:start="87:13" pos:end="87:36"><call pos:start="87:13" pos:end="87:36"><name pos:start="87:13" pos:end="87:21">avio_skip</name><argument_list pos:start="87:22" pos:end="87:36">(<argument pos:start="87:23" pos:end="87:27"><expr pos:start="87:23" pos:end="87:27"><name pos:start="87:23" pos:end="87:27"><name pos:start="87:23" pos:end="87:23">s</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:27">pb</name></name></expr></argument>, <argument pos:start="87:30" pos:end="87:35"><expr pos:start="87:30" pos:end="87:35"><name pos:start="87:30" pos:end="87:32">len</name><operator pos:start="87:33" pos:end="87:33">-</operator><literal type="number" pos:start="87:34" pos:end="87:35">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="91:13" pos:end="91:65"><expr pos:start="91:13" pos:end="91:64"><name pos:start="91:13" pos:end="91:31"><name pos:start="91:13" pos:end="91:14">st</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:21">codec</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:31">bit_rate</name></name>              <operator pos:start="91:46" pos:end="91:46">=</operator> <name pos:start="91:48" pos:end="91:59">read_bitrate</name><operator pos:start="91:60" pos:end="91:60">*</operator><literal type="number" pos:start="91:61" pos:end="91:64">1000</literal></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:36">case <expr pos:start="95:14" pos:end="95:35"><call pos:start="95:14" pos:end="95:35"><name pos:start="95:14" pos:end="95:18">MKTAG</name><argument_list pos:start="95:19" pos:end="95:35">(<argument pos:start="95:20" pos:end="95:22"><expr pos:start="95:20" pos:end="95:22"><literal type="char" pos:start="95:20" pos:end="95:22">'D'</literal></expr></argument>,<argument pos:start="95:24" pos:end="95:26"><expr pos:start="95:24" pos:end="95:26"><literal type="char" pos:start="95:24" pos:end="95:26">'S'</literal></expr></argument>,<argument pos:start="95:28" pos:end="95:30"><expr pos:start="95:28" pos:end="95:30"><literal type="char" pos:start="95:28" pos:end="95:30">'I'</literal></expr></argument>,<argument pos:start="95:32" pos:end="95:34"><expr pos:start="95:32" pos:end="95:34"><literal type="char" pos:start="95:32" pos:end="95:34">'Z'</literal></expr></argument>)</argument_list></call></expr>:</case> <comment type="line" pos:start="95:38" pos:end="95:63">// size of compressed data</comment>

        <block pos:start="97:9" pos:end="141:5">{<block_content pos:start="99:13" pos:end="137:27">

            <decl_stmt pos:start="99:13" pos:end="99:30"><decl pos:start="99:13" pos:end="99:29"><type pos:start="99:13" pos:end="99:16"><name pos:start="99:13" pos:end="99:16">char</name></type> <name pos:start="99:18" pos:end="99:23"><name pos:start="99:18" pos:end="99:20">buf</name><index pos:start="99:21" pos:end="99:23">[<expr pos:start="99:22" pos:end="99:22"><literal type="number" pos:start="99:22" pos:end="99:22">8</literal></expr>]</index></name> <init pos:start="99:25" pos:end="99:29">= <expr pos:start="99:27" pos:end="99:29"><block pos:start="99:27" pos:end="99:29">{<expr pos:start="99:28" pos:end="99:28"><literal type="number" pos:start="99:28" pos:end="99:28">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="101:13" pos:end="101:40"><decl pos:start="101:13" pos:end="101:39"><type pos:start="101:13" pos:end="101:15"><name pos:start="101:13" pos:end="101:15">int</name></type> <name pos:start="101:17" pos:end="101:20">size</name> <init pos:start="101:22" pos:end="101:39">= <expr pos:start="101:24" pos:end="101:39"><call pos:start="101:24" pos:end="101:39"><name pos:start="101:24" pos:end="101:32">avio_rb32</name><argument_list pos:start="101:33" pos:end="101:39">(<argument pos:start="101:34" pos:end="101:38"><expr pos:start="101:34" pos:end="101:38"><name pos:start="101:34" pos:end="101:38"><name pos:start="101:34" pos:end="101:34">s</name><operator pos:start="101:35" pos:end="101:36">-&gt;</operator><name pos:start="101:37" pos:end="101:38">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="105:13" pos:end="105:51"><expr pos:start="105:13" pos:end="105:50"><call pos:start="105:13" pos:end="105:50"><name pos:start="105:13" pos:end="105:20">snprintf</name><argument_list pos:start="105:21" pos:end="105:50">(<argument pos:start="105:22" pos:end="105:24"><expr pos:start="105:22" pos:end="105:24"><name pos:start="105:22" pos:end="105:24">buf</name></expr></argument>, <argument pos:start="105:27" pos:end="105:37"><expr pos:start="105:27" pos:end="105:37"><sizeof pos:start="105:27" pos:end="105:37">sizeof<argument_list pos:start="105:33" pos:end="105:37">(<argument pos:start="105:34" pos:end="105:36"><expr pos:start="105:34" pos:end="105:36"><name pos:start="105:34" pos:end="105:36">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="105:40" pos:end="105:43"><expr pos:start="105:40" pos:end="105:43"><literal type="string" pos:start="105:40" pos:end="105:43">"%d"</literal></expr></argument>, <argument pos:start="105:46" pos:end="105:49"><expr pos:start="105:46" pos:end="105:49"><name pos:start="105:46" pos:end="105:49">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:54"><expr pos:start="107:13" pos:end="107:53"><call pos:start="107:13" pos:end="107:53"><name pos:start="107:13" pos:end="107:23">av_dict_set</name><argument_list pos:start="107:24" pos:end="107:53">(<argument pos:start="107:25" pos:end="107:36"><expr pos:start="107:25" pos:end="107:36"><operator pos:start="107:25" pos:end="107:25">&amp;</operator><name pos:start="107:26" pos:end="107:36"><name pos:start="107:26" pos:end="107:26">s</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:36">metadata</name></name></expr></argument>, <argument pos:start="107:39" pos:end="107:44"><expr pos:start="107:39" pos:end="107:44"><literal type="string" pos:start="107:39" pos:end="107:44">"size"</literal></expr></argument>, <argument pos:start="107:47" pos:end="107:49"><expr pos:start="107:47" pos:end="107:49"><name pos:start="107:47" pos:end="107:49">buf</name></expr></argument>, <argument pos:start="107:52" pos:end="107:52"><expr pos:start="107:52" pos:end="107:52"><literal type="number" pos:start="107:52" pos:end="107:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <break pos:start="110:13" pos:end="110:18">break;</break>

        <case pos:start="112:9" pos:end="112:36">case <expr pos:start="112:14" pos:end="112:35"><call pos:start="112:14" pos:end="112:35"><name pos:start="112:14" pos:end="112:18">MKTAG</name><argument_list pos:start="112:19" pos:end="112:35">(<argument pos:start="112:20" pos:end="112:22"><expr pos:start="112:20" pos:end="112:22"><literal type="char" pos:start="112:20" pos:end="112:22">'Y'</literal></expr></argument>,<argument pos:start="112:24" pos:end="112:26"><expr pos:start="112:24" pos:end="112:26"><literal type="char" pos:start="112:24" pos:end="112:26">'E'</literal></expr></argument>,<argument pos:start="112:28" pos:end="112:30"><expr pos:start="112:28" pos:end="112:30"><literal type="char" pos:start="112:28" pos:end="112:30">'A'</literal></expr></argument>,<argument pos:start="112:32" pos:end="112:34"><expr pos:start="112:32" pos:end="112:34"><literal type="char" pos:start="112:32" pos:end="112:34">'R'</literal></expr></argument>)</argument_list></call></expr>:</case> <comment type="line" pos:start="112:38" pos:end="112:54">// recording date</comment>

        <case pos:start="114:9" pos:end="114:36">case <expr pos:start="114:14" pos:end="114:35"><call pos:start="114:14" pos:end="114:35"><name pos:start="114:14" pos:end="114:18">MKTAG</name><argument_list pos:start="114:19" pos:end="114:35">(<argument pos:start="114:20" pos:end="114:22"><expr pos:start="114:20" pos:end="114:22"><literal type="char" pos:start="114:20" pos:end="114:22">'E'</literal></expr></argument>,<argument pos:start="114:24" pos:end="114:26"><expr pos:start="114:24" pos:end="114:26"><literal type="char" pos:start="114:24" pos:end="114:26">'N'</literal></expr></argument>,<argument pos:start="114:28" pos:end="114:30"><expr pos:start="114:28" pos:end="114:30"><literal type="char" pos:start="114:28" pos:end="114:30">'C'</literal></expr></argument>,<argument pos:start="114:32" pos:end="114:34"><expr pos:start="114:32" pos:end="114:34"><literal type="char" pos:start="114:32" pos:end="114:34">'D'</literal></expr></argument>)</argument_list></call></expr>:</case> <comment type="line" pos:start="114:38" pos:end="114:56">// compression date</comment>

        <case pos:start="116:9" pos:end="116:36">case <expr pos:start="116:14" pos:end="116:35"><call pos:start="116:14" pos:end="116:35"><name pos:start="116:14" pos:end="116:18">MKTAG</name><argument_list pos:start="116:19" pos:end="116:35">(<argument pos:start="116:20" pos:end="116:22"><expr pos:start="116:20" pos:end="116:22"><literal type="char" pos:start="116:20" pos:end="116:22">'E'</literal></expr></argument>,<argument pos:start="116:24" pos:end="116:26"><expr pos:start="116:24" pos:end="116:26"><literal type="char" pos:start="116:24" pos:end="116:26">'X'</literal></expr></argument>,<argument pos:start="116:28" pos:end="116:30"><expr pos:start="116:28" pos:end="116:30"><literal type="char" pos:start="116:28" pos:end="116:30">'T'</literal></expr></argument>,<argument pos:start="116:32" pos:end="116:34"><expr pos:start="116:32" pos:end="116:34"><literal type="char" pos:start="116:32" pos:end="116:34">'R'</literal></expr></argument>)</argument_list></call></expr>:</case> <comment type="line" pos:start="116:38" pos:end="116:48">// reserved</comment>

        <case pos:start="118:9" pos:end="118:36">case <expr pos:start="118:14" pos:end="118:35"><call pos:start="118:14" pos:end="118:35"><name pos:start="118:14" pos:end="118:18">MKTAG</name><argument_list pos:start="118:19" pos:end="118:35">(<argument pos:start="118:20" pos:end="118:22"><expr pos:start="118:20" pos:end="118:22"><literal type="char" pos:start="118:20" pos:end="118:22">'_'</literal></expr></argument>,<argument pos:start="118:24" pos:end="118:26"><expr pos:start="118:24" pos:end="118:26"><literal type="char" pos:start="118:24" pos:end="118:26">'Y'</literal></expr></argument>,<argument pos:start="118:28" pos:end="118:30"><expr pos:start="118:28" pos:end="118:30"><literal type="char" pos:start="118:28" pos:end="118:30">'M'</literal></expr></argument>,<argument pos:start="118:32" pos:end="118:34"><expr pos:start="118:32" pos:end="118:34"><literal type="char" pos:start="118:32" pos:end="118:34">'H'</literal></expr></argument>)</argument_list></call></expr>:</case> <comment type="line" pos:start="118:38" pos:end="118:48">// reserved</comment>

        <case pos:start="120:9" pos:end="120:36">case <expr pos:start="120:14" pos:end="120:35"><call pos:start="120:14" pos:end="120:35"><name pos:start="120:14" pos:end="120:18">MKTAG</name><argument_list pos:start="120:19" pos:end="120:35">(<argument pos:start="120:20" pos:end="120:22"><expr pos:start="120:20" pos:end="120:22"><literal type="char" pos:start="120:20" pos:end="120:22">'_'</literal></expr></argument>,<argument pos:start="120:24" pos:end="120:26"><expr pos:start="120:24" pos:end="120:26"><literal type="char" pos:start="120:24" pos:end="120:26">'N'</literal></expr></argument>,<argument pos:start="120:28" pos:end="120:30"><expr pos:start="120:28" pos:end="120:30"><literal type="char" pos:start="120:28" pos:end="120:30">'T'</literal></expr></argument>,<argument pos:start="120:32" pos:end="120:34"><expr pos:start="120:32" pos:end="120:34"><literal type="char" pos:start="120:32" pos:end="120:34">'T'</literal></expr></argument>)</argument_list></call></expr>:</case> <comment type="line" pos:start="120:38" pos:end="120:48">// reserved</comment>

        <case pos:start="122:9" pos:end="122:36">case <expr pos:start="122:14" pos:end="122:35"><call pos:start="122:14" pos:end="122:35"><name pos:start="122:14" pos:end="122:18">MKTAG</name><argument_list pos:start="122:19" pos:end="122:35">(<argument pos:start="122:20" pos:end="122:22"><expr pos:start="122:20" pos:end="122:22"><literal type="char" pos:start="122:20" pos:end="122:22">'_'</literal></expr></argument>,<argument pos:start="122:24" pos:end="122:26"><expr pos:start="122:24" pos:end="122:26"><literal type="char" pos:start="122:24" pos:end="122:26">'I'</literal></expr></argument>,<argument pos:start="122:28" pos:end="122:30"><expr pos:start="122:28" pos:end="122:30"><literal type="char" pos:start="122:28" pos:end="122:30">'D'</literal></expr></argument>,<argument pos:start="122:32" pos:end="122:34"><expr pos:start="122:32" pos:end="122:34"><literal type="char" pos:start="122:32" pos:end="122:34">'3'</literal></expr></argument>)</argument_list></call></expr>:</case> <comment type="line" pos:start="122:38" pos:end="122:61">// reserved for ID3 tags</comment>

            <expr_stmt pos:start="124:13" pos:end="124:54"><expr pos:start="124:13" pos:end="124:53"><call pos:start="124:13" pos:end="124:53"><name pos:start="124:13" pos:end="124:21">avio_skip</name><argument_list pos:start="124:22" pos:end="124:53">(<argument pos:start="124:23" pos:end="124:27"><expr pos:start="124:23" pos:end="124:27"><name pos:start="124:23" pos:end="124:27"><name pos:start="124:23" pos:end="124:23">s</name><operator pos:start="124:24" pos:end="124:25">-&gt;</operator><name pos:start="124:26" pos:end="124:27">pb</name></name></expr></argument>, <argument pos:start="124:30" pos:end="124:52"><expr pos:start="124:30" pos:end="124:52"><call pos:start="124:30" pos:end="124:52"><name pos:start="124:30" pos:end="124:34">FFMIN</name><argument_list pos:start="124:35" pos:end="124:52">(<argument pos:start="124:36" pos:end="124:38"><expr pos:start="124:36" pos:end="124:38"><name pos:start="124:36" pos:end="124:38">len</name></expr></argument>, <argument pos:start="124:41" pos:end="124:51"><expr pos:start="124:41" pos:end="124:51"><name pos:start="124:41" pos:end="124:51">header_size</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="126:13" pos:end="126:18">break;</break>

        <default pos:start="128:9" pos:end="128:16">default:</default>

            <expr_stmt pos:start="130:13" pos:end="130:57"><expr pos:start="130:13" pos:end="130:56"><call pos:start="130:13" pos:end="130:56"><name pos:start="130:13" pos:end="130:24">add_metadata</name><argument_list pos:start="130:25" pos:end="130:56">(<argument pos:start="130:26" pos:end="130:26"><expr pos:start="130:26" pos:end="130:26"><name pos:start="130:26" pos:end="130:26">s</name></expr></argument>, <argument pos:start="130:29" pos:end="130:37"><expr pos:start="130:29" pos:end="130:37"><name pos:start="130:29" pos:end="130:37">chunk_tag</name></expr></argument>, <argument pos:start="130:40" pos:end="130:42"><expr pos:start="130:40" pos:end="130:42"><name pos:start="130:40" pos:end="130:42">len</name></expr></argument>, <argument pos:start="130:45" pos:end="130:55"><expr pos:start="130:45" pos:end="130:55"><name pos:start="130:45" pos:end="130:55">header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="132:13" pos:end="132:18">break;</break>




        <expr_stmt pos:start="137:9" pos:end="137:27"><expr pos:start="137:9" pos:end="137:26"><name pos:start="137:9" pos:end="137:19">header_size</name> <operator pos:start="137:21" pos:end="137:22">-=</operator> <name pos:start="137:24" pos:end="137:26">len</name></expr>;</expr_stmt>



    </block_content>}</block> <while pos:start="141:7" pos:end="141:31">while <condition pos:start="141:13" pos:end="141:30">(<expr pos:start="141:14" pos:end="141:29"><name pos:start="141:14" pos:end="141:24">header_size</name> <operator pos:start="141:26" pos:end="141:27">&gt;=</operator> <literal type="number" pos:start="141:29" pos:end="141:29">0</literal></expr>)</condition><block type="pseudo" pos:start="141:31" pos:end="141:31"><block_content pos:start="141:31" pos:end="141:31"><empty_stmt pos:start="141:31" pos:end="141:31">;</empty_stmt></block_content></block></while>



    <switch pos:start="145:5" pos:end="247:13">switch <condition pos:start="145:12" pos:end="145:22">(<expr pos:start="145:13" pos:end="145:21"><name pos:start="145:13" pos:end="145:21">rate_flag</name></expr>)</condition> <block pos:start="145:24" pos:end="247:13">{<block_content pos:start="147:5" pos:end="247:13">

    <case pos:start="147:5" pos:end="147:12">case <expr pos:start="147:10" pos:end="147:11"><operator pos:start="147:10" pos:end="147:10">-</operator><literal type="number" pos:start="147:11" pos:end="147:11">1</literal></expr>:</case>

        <expr_stmt pos:start="149:9" pos:end="149:57"><expr pos:start="149:9" pos:end="149:56"><call pos:start="149:9" pos:end="149:56"><name pos:start="149:9" pos:end="149:14">av_log</name><argument_list pos:start="149:15" pos:end="149:56">(<argument pos:start="149:16" pos:end="149:16"><expr pos:start="149:16" pos:end="149:16"><name pos:start="149:16" pos:end="149:16">s</name></expr></argument>, <argument pos:start="149:19" pos:end="149:30"><expr pos:start="149:19" pos:end="149:30"><name pos:start="149:19" pos:end="149:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="149:33" pos:end="149:55"><expr pos:start="149:33" pos:end="149:55"><literal type="string" pos:start="149:33" pos:end="149:55">"COMM tag not found!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <case pos:start="152:5" pos:end="152:12">case <expr pos:start="152:10" pos:end="152:11"><literal type="number" pos:start="152:10" pos:end="152:11">44</literal></expr>:</case>

        <expr_stmt pos:start="154:9" pos:end="154:39"><expr pos:start="154:9" pos:end="154:38"><name pos:start="154:9" pos:end="154:30"><name pos:start="154:9" pos:end="154:10">st</name><operator pos:start="154:11" pos:end="154:12">-&gt;</operator><name pos:start="154:13" pos:end="154:17">codec</name><operator pos:start="154:18" pos:end="154:19">-&gt;</operator><name pos:start="154:20" pos:end="154:30">sample_rate</name></name> <operator pos:start="154:32" pos:end="154:32">=</operator> <literal type="number" pos:start="154:34" pos:end="154:38">44100</literal></expr>;</expr_stmt>

        <break pos:start="156:9" pos:end="156:14">break;</break>

    <case pos:start="158:5" pos:end="158:12">case <expr pos:start="158:10" pos:end="158:11"><literal type="number" pos:start="158:10" pos:end="158:11">22</literal></expr>:</case>

        <expr_stmt pos:start="160:9" pos:end="160:39"><expr pos:start="160:9" pos:end="160:38"><name pos:start="160:9" pos:end="160:30"><name pos:start="160:9" pos:end="160:10">st</name><operator pos:start="160:11" pos:end="160:12">-&gt;</operator><name pos:start="160:13" pos:end="160:17">codec</name><operator pos:start="160:18" pos:end="160:19">-&gt;</operator><name pos:start="160:20" pos:end="160:30">sample_rate</name></name> <operator pos:start="160:32" pos:end="160:32">=</operator> <literal type="number" pos:start="160:34" pos:end="160:38">22050</literal></expr>;</expr_stmt>

        <break pos:start="162:9" pos:end="162:14">break;</break>

    <case pos:start="164:5" pos:end="164:12">case <expr pos:start="164:10" pos:end="164:11"><literal type="number" pos:start="164:10" pos:end="164:11">11</literal></expr>:</case>

        <expr_stmt pos:start="166:9" pos:end="166:39"><expr pos:start="166:9" pos:end="166:38"><name pos:start="166:9" pos:end="166:30"><name pos:start="166:9" pos:end="166:10">st</name><operator pos:start="166:11" pos:end="166:12">-&gt;</operator><name pos:start="166:13" pos:end="166:17">codec</name><operator pos:start="166:18" pos:end="166:19">-&gt;</operator><name pos:start="166:20" pos:end="166:30">sample_rate</name></name> <operator pos:start="166:32" pos:end="166:32">=</operator> <literal type="number" pos:start="166:34" pos:end="166:38">11025</literal></expr>;</expr_stmt>

        <break pos:start="168:9" pos:end="168:14">break;</break>

    <default pos:start="170:5" pos:end="170:12">default:</default>

        <expr_stmt pos:start="172:9" pos:end="172:48"><expr pos:start="172:9" pos:end="172:47"><name pos:start="172:9" pos:end="172:30"><name pos:start="172:9" pos:end="172:10">st</name><operator pos:start="172:11" pos:end="172:12">-&gt;</operator><name pos:start="172:13" pos:end="172:17">codec</name><operator pos:start="172:18" pos:end="172:19">-&gt;</operator><name pos:start="172:20" pos:end="172:30">sample_rate</name></name> <operator pos:start="172:32" pos:end="172:32">=</operator> <name pos:start="172:34" pos:end="172:42">rate_flag</name><operator pos:start="172:43" pos:end="172:43">*</operator><literal type="number" pos:start="172:44" pos:end="172:47">1000</literal></expr>;</expr_stmt>





        <break pos:start="178:9" pos:end="178:14">break;</break>




    <switch pos:start="183:5" pos:end="247:13">switch <condition pos:start="183:12" pos:end="185:45">(<expr pos:start="183:13" pos:end="185:44"><operator pos:start="183:13" pos:end="183:13">(</operator><operator pos:start="183:14" pos:end="183:14">(</operator><name pos:start="183:15" pos:end="183:36"><name pos:start="183:15" pos:end="183:16">st</name><operator pos:start="183:17" pos:end="183:18">-&gt;</operator><name pos:start="183:19" pos:end="183:23">codec</name><operator pos:start="183:24" pos:end="183:25">-&gt;</operator><name pos:start="183:26" pos:end="183:36">sample_rate</name></name><operator pos:start="183:37" pos:end="183:37">/</operator><literal type="number" pos:start="183:38" pos:end="183:41">1000</literal><operator pos:start="183:42" pos:end="183:42">)</operator> <operator pos:start="183:44" pos:end="183:45">&lt;&lt;</operator> <literal type="number" pos:start="183:47" pos:end="183:47">8</literal><operator pos:start="183:48" pos:end="183:48">)</operator> <operator pos:start="183:50" pos:end="183:50">+</operator>

            <name pos:start="185:13" pos:end="185:24">read_bitrate</name><operator pos:start="185:25" pos:end="185:25">/</operator><name pos:start="185:26" pos:end="185:44"><name pos:start="185:26" pos:end="185:27">st</name><operator pos:start="185:28" pos:end="185:29">-&gt;</operator><name pos:start="185:30" pos:end="185:34">codec</name><operator pos:start="185:35" pos:end="185:36">-&gt;</operator><name pos:start="185:37" pos:end="185:44">channels</name></name></expr>)</condition> <block pos:start="185:47" pos:end="247:13">{<block_content pos:start="187:5" pos:end="247:13">

    <case pos:start="187:5" pos:end="187:22">case <expr pos:start="187:10" pos:end="187:20"><operator pos:start="187:10" pos:end="187:10">(</operator><literal type="number" pos:start="187:11" pos:end="187:12">11</literal><operator pos:start="187:13" pos:end="187:14">&lt;&lt;</operator><literal type="number" pos:start="187:15" pos:end="187:15">8</literal><operator pos:start="187:16" pos:end="187:16">)</operator> <operator pos:start="187:18" pos:end="187:18">+</operator> <literal type="number" pos:start="187:20" pos:end="187:20">8</literal></expr> :</case>

    <case pos:start="189:5" pos:end="189:22">case <expr pos:start="189:10" pos:end="189:20"><operator pos:start="189:10" pos:end="189:10">(</operator><literal type="number" pos:start="189:11" pos:end="189:11">8</literal> <operator pos:start="189:13" pos:end="189:14">&lt;&lt;</operator><literal type="number" pos:start="189:15" pos:end="189:15">8</literal><operator pos:start="189:16" pos:end="189:16">)</operator> <operator pos:start="189:18" pos:end="189:18">+</operator> <literal type="number" pos:start="189:20" pos:end="189:20">8</literal></expr> :</case>

    <case pos:start="191:5" pos:end="191:22">case <expr pos:start="191:10" pos:end="191:21"><operator pos:start="191:10" pos:end="191:10">(</operator><literal type="number" pos:start="191:11" pos:end="191:12">11</literal><operator pos:start="191:13" pos:end="191:14">&lt;&lt;</operator><literal type="number" pos:start="191:15" pos:end="191:15">8</literal><operator pos:start="191:16" pos:end="191:16">)</operator> <operator pos:start="191:18" pos:end="191:18">+</operator> <literal type="number" pos:start="191:20" pos:end="191:21">10</literal></expr>:</case>

    <case pos:start="193:5" pos:end="193:22">case <expr pos:start="193:10" pos:end="193:21"><operator pos:start="193:10" pos:end="193:10">(</operator><literal type="number" pos:start="193:11" pos:end="193:12">22</literal><operator pos:start="193:13" pos:end="193:14">&lt;&lt;</operator><literal type="number" pos:start="193:15" pos:end="193:15">8</literal><operator pos:start="193:16" pos:end="193:16">)</operator> <operator pos:start="193:18" pos:end="193:18">+</operator> <literal type="number" pos:start="193:20" pos:end="193:21">32</literal></expr>:</case>

        <expr_stmt pos:start="195:9" pos:end="195:19"><expr pos:start="195:9" pos:end="195:18"><name pos:start="195:9" pos:end="195:12">size</name> <operator pos:start="195:14" pos:end="195:14">=</operator> <literal type="number" pos:start="195:16" pos:end="195:18">512</literal></expr>;</expr_stmt>

        <break pos:start="197:9" pos:end="197:14">break;</break>

    <case pos:start="199:5" pos:end="199:22">case <expr pos:start="199:10" pos:end="199:21"><operator pos:start="199:10" pos:end="199:10">(</operator><literal type="number" pos:start="199:11" pos:end="199:12">16</literal><operator pos:start="199:13" pos:end="199:14">&lt;&lt;</operator><literal type="number" pos:start="199:15" pos:end="199:15">8</literal><operator pos:start="199:16" pos:end="199:16">)</operator> <operator pos:start="199:18" pos:end="199:18">+</operator> <literal type="number" pos:start="199:20" pos:end="199:21">16</literal></expr>:</case>

    <case pos:start="201:5" pos:end="201:22">case <expr pos:start="201:10" pos:end="201:21"><operator pos:start="201:10" pos:end="201:10">(</operator><literal type="number" pos:start="201:11" pos:end="201:12">22</literal><operator pos:start="201:13" pos:end="201:14">&lt;&lt;</operator><literal type="number" pos:start="201:15" pos:end="201:15">8</literal><operator pos:start="201:16" pos:end="201:16">)</operator> <operator pos:start="201:18" pos:end="201:18">+</operator> <literal type="number" pos:start="201:20" pos:end="201:21">20</literal></expr>:</case>

    <case pos:start="203:5" pos:end="203:22">case <expr pos:start="203:10" pos:end="203:21"><operator pos:start="203:10" pos:end="203:10">(</operator><literal type="number" pos:start="203:11" pos:end="203:12">22</literal><operator pos:start="203:13" pos:end="203:14">&lt;&lt;</operator><literal type="number" pos:start="203:15" pos:end="203:15">8</literal><operator pos:start="203:16" pos:end="203:16">)</operator> <operator pos:start="203:18" pos:end="203:18">+</operator> <literal type="number" pos:start="203:20" pos:end="203:21">24</literal></expr>:</case>

        <expr_stmt pos:start="205:9" pos:end="205:20"><expr pos:start="205:9" pos:end="205:19"><name pos:start="205:9" pos:end="205:12">size</name> <operator pos:start="205:14" pos:end="205:14">=</operator> <literal type="number" pos:start="205:16" pos:end="205:19">1024</literal></expr>;</expr_stmt>

        <break pos:start="207:9" pos:end="207:14">break;</break>

    <case pos:start="209:5" pos:end="209:22">case <expr pos:start="209:10" pos:end="209:21"><operator pos:start="209:10" pos:end="209:10">(</operator><literal type="number" pos:start="209:11" pos:end="209:12">44</literal><operator pos:start="209:13" pos:end="209:14">&lt;&lt;</operator><literal type="number" pos:start="209:15" pos:end="209:15">8</literal><operator pos:start="209:16" pos:end="209:16">)</operator> <operator pos:start="209:18" pos:end="209:18">+</operator> <literal type="number" pos:start="209:20" pos:end="209:21">40</literal></expr>:</case>

    <case pos:start="211:5" pos:end="211:22">case <expr pos:start="211:10" pos:end="211:21"><operator pos:start="211:10" pos:end="211:10">(</operator><literal type="number" pos:start="211:11" pos:end="211:12">44</literal><operator pos:start="211:13" pos:end="211:14">&lt;&lt;</operator><literal type="number" pos:start="211:15" pos:end="211:15">8</literal><operator pos:start="211:16" pos:end="211:16">)</operator> <operator pos:start="211:18" pos:end="211:18">+</operator> <literal type="number" pos:start="211:20" pos:end="211:21">48</literal></expr>:</case>

        <expr_stmt pos:start="213:9" pos:end="213:20"><expr pos:start="213:9" pos:end="213:19"><name pos:start="213:9" pos:end="213:12">size</name> <operator pos:start="213:14" pos:end="213:14">=</operator> <literal type="number" pos:start="213:16" pos:end="213:19">2048</literal></expr>;</expr_stmt>

        <break pos:start="215:9" pos:end="215:14">break;</break>

    <default pos:start="217:5" pos:end="217:12">default:</default>

        <expr_stmt pos:start="219:9" pos:end="221:60"><expr pos:start="219:9" pos:end="221:59"><call pos:start="219:9" pos:end="221:59"><name pos:start="219:9" pos:end="219:14">av_log</name><argument_list pos:start="219:15" pos:end="221:59">(<argument pos:start="219:16" pos:end="219:16"><expr pos:start="219:16" pos:end="219:16"><name pos:start="219:16" pos:end="219:16">s</name></expr></argument>, <argument pos:start="219:19" pos:end="219:30"><expr pos:start="219:19" pos:end="219:30"><name pos:start="219:19" pos:end="219:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="219:33" pos:end="219:70"><expr pos:start="219:33" pos:end="219:70"><literal type="string" pos:start="219:33" pos:end="219:70">"Mode not suported: %d Hz, %d kb/s.\n"</literal></expr></argument>,

               <argument pos:start="221:16" pos:end="221:37"><expr pos:start="221:16" pos:end="221:37"><name pos:start="221:16" pos:end="221:37"><name pos:start="221:16" pos:end="221:17">st</name><operator pos:start="221:18" pos:end="221:19">-&gt;</operator><name pos:start="221:20" pos:end="221:24">codec</name><operator pos:start="221:25" pos:end="221:26">-&gt;</operator><name pos:start="221:27" pos:end="221:37">sample_rate</name></name></expr></argument>, <argument pos:start="221:40" pos:end="221:58"><expr pos:start="221:40" pos:end="221:58"><name pos:start="221:40" pos:end="221:58"><name pos:start="221:40" pos:end="221:41">st</name><operator pos:start="221:42" pos:end="221:43">-&gt;</operator><name pos:start="221:44" pos:end="221:48">codec</name><operator pos:start="221:49" pos:end="221:50">-&gt;</operator><name pos:start="221:51" pos:end="221:58">bit_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:71"><expr pos:start="225:5" pos:end="225:70"><name pos:start="225:5" pos:end="225:20"><name pos:start="225:5" pos:end="225:5">c</name><operator pos:start="225:6" pos:end="225:7">-&gt;</operator><name pos:start="225:8" pos:end="225:20">frame_bit_len</name></name> <operator pos:start="225:22" pos:end="225:22">=</operator> <name pos:start="225:24" pos:end="225:42"><name pos:start="225:24" pos:end="225:25">st</name><operator pos:start="225:26" pos:end="225:27">-&gt;</operator><name pos:start="225:28" pos:end="225:32">codec</name><operator pos:start="225:33" pos:end="225:34">-&gt;</operator><name pos:start="225:35" pos:end="225:42">bit_rate</name></name><operator pos:start="225:43" pos:end="225:43">*</operator><name pos:start="225:44" pos:end="225:47">size</name><operator pos:start="225:48" pos:end="225:48">/</operator><name pos:start="225:49" pos:end="225:70"><name pos:start="225:49" pos:end="225:50">st</name><operator pos:start="225:51" pos:end="225:52">-&gt;</operator><name pos:start="225:53" pos:end="225:57">codec</name><operator pos:start="225:58" pos:end="225:59">-&gt;</operator><name pos:start="225:60" pos:end="225:70">sample_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:62"><expr pos:start="227:5" pos:end="227:61"><call pos:start="227:5" pos:end="227:61"><name pos:start="227:5" pos:end="227:23">avpriv_set_pts_info</name><argument_list pos:start="227:24" pos:end="227:61">(<argument pos:start="227:25" pos:end="227:26"><expr pos:start="227:25" pos:end="227:26"><name pos:start="227:25" pos:end="227:26">st</name></expr></argument>, <argument pos:start="227:29" pos:end="227:30"><expr pos:start="227:29" pos:end="227:30"><literal type="number" pos:start="227:29" pos:end="227:30">64</literal></expr></argument>, <argument pos:start="227:33" pos:end="227:36"><expr pos:start="227:33" pos:end="227:36"><name pos:start="227:33" pos:end="227:36">size</name></expr></argument>, <argument pos:start="227:39" pos:end="227:60"><expr pos:start="227:39" pos:end="227:60"><name pos:start="227:39" pos:end="227:60"><name pos:start="227:39" pos:end="227:40">st</name><operator pos:start="227:41" pos:end="227:42">-&gt;</operator><name pos:start="227:43" pos:end="227:47">codec</name><operator pos:start="227:48" pos:end="227:49">-&gt;</operator><name pos:start="227:50" pos:end="227:60">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="231:5" pos:end="231:55">/* put first 12 bytes of COMM chunk in extradata */</comment>

    <if_stmt pos:start="233:5" pos:end="235:31"><if pos:start="233:5" pos:end="235:31">if <condition pos:start="233:8" pos:end="233:79">(<expr pos:start="233:9" pos:end="233:78"><operator pos:start="233:9" pos:end="233:9">!</operator><operator pos:start="233:10" pos:end="233:10">(</operator><name pos:start="233:11" pos:end="233:30"><name pos:start="233:11" pos:end="233:12">st</name><operator pos:start="233:13" pos:end="233:14">-&gt;</operator><name pos:start="233:15" pos:end="233:19">codec</name><operator pos:start="233:20" pos:end="233:21">-&gt;</operator><name pos:start="233:22" pos:end="233:30">extradata</name></name> <operator pos:start="233:32" pos:end="233:32">=</operator> <call pos:start="233:34" pos:end="233:77"><name pos:start="233:34" pos:end="233:42">av_malloc</name><argument_list pos:start="233:43" pos:end="233:77">(<argument pos:start="233:44" pos:end="233:76"><expr pos:start="233:44" pos:end="233:76"><literal type="number" pos:start="233:44" pos:end="233:47">12</literal> <operator pos:start="233:47" pos:end="233:47">+</operator> <name pos:start="233:49" pos:end="233:76">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="233:78" pos:end="233:78">)</operator></expr>)</condition><block type="pseudo" pos:start="235:9" pos:end="235:31"><block_content pos:start="235:9" pos:end="235:31">

        <return pos:start="235:9" pos:end="235:31">return <expr pos:start="235:16" pos:end="235:30"><call pos:start="235:16" pos:end="235:30"><name pos:start="235:16" pos:end="235:22">AVERROR</name><argument_list pos:start="235:23" pos:end="235:30">(<argument pos:start="235:24" pos:end="235:29"><expr pos:start="235:24" pos:end="235:29"><name pos:start="235:24" pos:end="235:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:35"><expr pos:start="237:5" pos:end="237:34"><name pos:start="237:5" pos:end="237:29"><name pos:start="237:5" pos:end="237:6">st</name><operator pos:start="237:7" pos:end="237:8">-&gt;</operator><name pos:start="237:9" pos:end="237:13">codec</name><operator pos:start="237:14" pos:end="237:15">-&gt;</operator><name pos:start="237:16" pos:end="237:29">extradata_size</name></name> <operator pos:start="237:31" pos:end="237:31">=</operator> <literal type="number" pos:start="237:33" pos:end="237:34">12</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:49"><expr pos:start="239:5" pos:end="239:48"><call pos:start="239:5" pos:end="239:48"><name pos:start="239:5" pos:end="239:10">memcpy</name><argument_list pos:start="239:11" pos:end="239:48">(<argument pos:start="239:12" pos:end="239:31"><expr pos:start="239:12" pos:end="239:31"><name pos:start="239:12" pos:end="239:31"><name pos:start="239:12" pos:end="239:13">st</name><operator pos:start="239:14" pos:end="239:15">-&gt;</operator><name pos:start="239:16" pos:end="239:20">codec</name><operator pos:start="239:21" pos:end="239:22">-&gt;</operator><name pos:start="239:23" pos:end="239:31">extradata</name></name></expr></argument>, <argument pos:start="239:34" pos:end="239:43"><expr pos:start="239:34" pos:end="239:43"><name pos:start="239:34" pos:end="239:43">comm_chunk</name></expr></argument>, <argument pos:start="239:46" pos:end="239:47"><expr pos:start="239:46" pos:end="239:47"><literal type="number" pos:start="239:46" pos:end="239:47">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="243:5" pos:end="243:53"><expr pos:start="243:5" pos:end="243:52"><call pos:start="243:5" pos:end="243:52"><name pos:start="243:5" pos:end="243:24">ff_metadata_conv_ctx</name><argument_list pos:start="243:25" pos:end="243:52">(<argument pos:start="243:26" pos:end="243:26"><expr pos:start="243:26" pos:end="243:26"><name pos:start="243:26" pos:end="243:26">s</name></expr></argument>, <argument pos:start="243:29" pos:end="243:32"><expr pos:start="243:29" pos:end="243:32"><name pos:start="243:29" pos:end="243:32">NULL</name></expr></argument>, <argument pos:start="243:35" pos:end="243:51"><expr pos:start="243:35" pos:end="243:51"><name pos:start="243:35" pos:end="243:51">vqf_metadata_conv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="247:5" pos:end="247:13">return <expr pos:start="247:12" pos:end="247:12"><literal type="number" pos:start="247:12" pos:end="247:12">0</literal></expr>;</return></block_content></block></switch></block_content></block></switch></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></do></block_content></block></function>
</unit>
