<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15759.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:46">check_4block_inter</name><parameter_list pos:start="1:47" pos:end="1:121">(<parameter pos:start="1:48" pos:end="1:61"><decl pos:start="1:48" pos:end="1:61"><type pos:start="1:48" pos:end="1:61"><name pos:start="1:48" pos:end="1:58">SnowContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">s</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:71"><decl pos:start="1:64" pos:end="1:71"><type pos:start="1:64" pos:end="1:71"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:71">mb_x</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:81"><decl pos:start="1:74" pos:end="1:81"><type pos:start="1:74" pos:end="1:81"><name pos:start="1:74" pos:end="1:76">int</name></type> <name pos:start="1:78" pos:end="1:81">mb_y</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:89"><decl pos:start="1:84" pos:end="1:89"><type pos:start="1:84" pos:end="1:89"><name pos:start="1:84" pos:end="1:86">int</name></type> <name pos:start="1:88" pos:end="1:89">p0</name></decl></parameter>, <parameter pos:start="1:92" pos:end="1:97"><decl pos:start="1:92" pos:end="1:97"><type pos:start="1:92" pos:end="1:97"><name pos:start="1:92" pos:end="1:94">int</name></type> <name pos:start="1:96" pos:end="1:97">p1</name></decl></parameter>, <parameter pos:start="1:100" pos:end="1:106"><decl pos:start="1:100" pos:end="1:106"><type pos:start="1:100" pos:end="1:106"><name pos:start="1:100" pos:end="1:102">int</name></type> <name pos:start="1:104" pos:end="1:106">ref</name></decl></parameter>, <parameter pos:start="1:109" pos:end="1:120"><decl pos:start="1:109" pos:end="1:120"><type pos:start="1:109" pos:end="1:120"><name pos:start="1:109" pos:end="1:111">int</name> <modifier pos:start="1:113" pos:end="1:113">*</modifier></type><name pos:start="1:114" pos:end="1:120">best_rd</name></decl></parameter>)</parameter_list><block pos:start="1:122" pos:end="71:1">{<block_content pos:start="3:5" pos:end="69:5">

    <decl_stmt pos:start="3:5" pos:end="3:57"><decl pos:start="3:5" pos:end="3:56"><type pos:start="3:5" pos:end="3:13"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:13">int</name></type> <name pos:start="3:15" pos:end="3:22">b_stride</name><init pos:start="3:23" pos:end="3:56">= <expr pos:start="3:25" pos:end="3:56"><name pos:start="3:25" pos:end="3:34"><name pos:start="3:25" pos:end="3:25">s</name><operator pos:start="3:26" pos:end="3:27">-&gt;</operator><name pos:start="3:28" pos:end="3:34">b_width</name></name> <operator pos:start="3:36" pos:end="3:37">&lt;&lt;</operator> <name pos:start="3:39" pos:end="3:56"><name pos:start="3:39" pos:end="3:39">s</name><operator pos:start="3:40" pos:end="3:41">-&gt;</operator><name pos:start="3:42" pos:end="3:56">block_max_depth</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">BlockNode</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">block</name><init pos:start="5:21" pos:end="5:55">= <expr pos:start="5:23" pos:end="5:55"><operator pos:start="5:23" pos:end="5:23">&amp;</operator><name pos:start="5:24" pos:end="5:55"><name pos:start="5:24" pos:end="5:24">s</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:31">block</name><index pos:start="5:32" pos:end="5:55">[<expr pos:start="5:33" pos:end="5:54"><name pos:start="5:33" pos:end="5:36">mb_x</name> <operator pos:start="5:38" pos:end="5:38">+</operator> <name pos:start="5:40" pos:end="5:43">mb_y</name> <operator pos:start="5:45" pos:end="5:45">*</operator> <name pos:start="5:47" pos:end="5:54">b_stride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:82"><decl pos:start="7:5" pos:end="7:81"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">BlockNode</name></type> <name pos:start="7:15" pos:end="7:23"><name pos:start="7:15" pos:end="7:20">backup</name><index pos:start="7:21" pos:end="7:23">[<expr pos:start="7:22" pos:end="7:22"><literal type="number" pos:start="7:22" pos:end="7:22">4</literal></expr>]</index></name><init pos:start="7:24" pos:end="7:81">= <expr pos:start="7:26" pos:end="7:81"><block pos:start="7:26" pos:end="7:81">{<expr pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:31">block</name><index pos:start="7:32" pos:end="7:34">[<expr pos:start="7:33" pos:end="7:33"><literal type="number" pos:start="7:33" pos:end="7:33">0</literal></expr>]</index></name></expr>, <expr pos:start="7:37" pos:end="7:44"><name pos:start="7:37" pos:end="7:44"><name pos:start="7:37" pos:end="7:41">block</name><index pos:start="7:42" pos:end="7:44">[<expr pos:start="7:43" pos:end="7:43"><literal type="number" pos:start="7:43" pos:end="7:43">1</literal></expr>]</index></name></expr>, <expr pos:start="7:47" pos:end="7:61"><name pos:start="7:47" pos:end="7:61"><name pos:start="7:47" pos:end="7:51">block</name><index pos:start="7:52" pos:end="7:61">[<expr pos:start="7:53" pos:end="7:60"><name pos:start="7:53" pos:end="7:60">b_stride</name></expr>]</index></name></expr>, <expr pos:start="7:64" pos:end="7:80"><name pos:start="7:64" pos:end="7:80"><name pos:start="7:64" pos:end="7:68">block</name><index pos:start="7:69" pos:end="7:80">[<expr pos:start="7:70" pos:end="7:79"><name pos:start="7:70" pos:end="7:77">b_stride</name><operator pos:start="7:78" pos:end="7:78">+</operator><literal type="number" pos:start="7:79" pos:end="7:79">1</literal></expr>]</index></name></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">rd</name></decl>, <decl pos:start="9:13" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:17">index</name></decl>, <decl pos:start="9:20" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:24">value</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><call pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:30">(<argument pos:start="13:12" pos:end="13:29"><expr pos:start="13:12" pos:end="13:29"><name pos:start="13:12" pos:end="13:15">mb_x</name><operator pos:start="13:16" pos:end="13:17">&gt;=</operator><literal type="number" pos:start="13:18" pos:end="13:18">0</literal> <operator pos:start="13:20" pos:end="13:21">&amp;&amp;</operator> <name pos:start="13:23" pos:end="13:26">mb_y</name><operator pos:start="13:27" pos:end="13:28">&gt;=</operator><literal type="number" pos:start="13:29" pos:end="13:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><call pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:25">(<argument pos:start="15:12" pos:end="15:24"><expr pos:start="15:12" pos:end="15:24"><name pos:start="15:12" pos:end="15:15">mb_x</name><operator pos:start="15:16" pos:end="15:16">&lt;</operator><name pos:start="15:17" pos:end="15:24">b_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><call pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:32">(<argument pos:start="17:12" pos:end="17:31"><expr pos:start="17:12" pos:end="17:31"><operator pos:start="17:12" pos:end="17:12">(</operator><operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:17">mb_x</name><operator pos:start="17:18" pos:end="17:18">|</operator><name pos:start="17:19" pos:end="17:22">mb_y</name><operator pos:start="17:23" pos:end="17:23">)</operator><operator pos:start="17:24" pos:end="17:24">&amp;</operator><literal type="number" pos:start="17:25" pos:end="17:25">1</literal><operator pos:start="17:26" pos:end="17:26">)</operator> <operator pos:start="17:28" pos:end="17:29">==</operator> <literal type="number" pos:start="17:31" pos:end="17:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:44"><expr pos:start="21:5" pos:end="21:43"><name pos:start="21:5" pos:end="21:9">index</name><operator pos:start="21:10" pos:end="21:10">=</operator> <operator pos:start="21:12" pos:end="21:12">(</operator><name pos:start="21:13" pos:end="21:14">p0</name> <operator pos:start="21:16" pos:end="21:16">+</operator> <literal type="number" pos:start="21:18" pos:end="21:19">31</literal><operator pos:start="21:20" pos:end="21:20">*</operator><name pos:start="21:21" pos:end="21:22">p1</name><operator pos:start="21:23" pos:end="21:23">)</operator> <operator pos:start="21:25" pos:end="21:25">&amp;</operator> <operator pos:start="21:27" pos:end="21:27">(</operator><name pos:start="21:28" pos:end="21:40">ME_CACHE_SIZE</name><operator pos:start="21:41" pos:end="21:41">-</operator><literal type="number" pos:start="21:42" pos:end="21:42">1</literal><operator pos:start="21:43" pos:end="21:43">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:74"><expr pos:start="23:5" pos:end="23:73"><name pos:start="23:5" pos:end="23:9">value</name><operator pos:start="23:10" pos:end="23:10">=</operator> <name pos:start="23:12" pos:end="23:33"><name pos:start="23:12" pos:end="23:12">s</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:33">me_cache_generation</name></name> <operator pos:start="23:35" pos:end="23:35">+</operator> <operator pos:start="23:37" pos:end="23:37">(</operator><name pos:start="23:38" pos:end="23:39">p0</name><operator pos:start="23:40" pos:end="23:41">&gt;&gt;</operator><literal type="number" pos:start="23:42" pos:end="23:43">10</literal><operator pos:start="23:44" pos:end="23:44">)</operator> <operator pos:start="23:46" pos:end="23:46">+</operator> <operator pos:start="23:48" pos:end="23:48">(</operator><name pos:start="23:49" pos:end="23:50">p1</name><operator pos:start="23:51" pos:end="23:52">&lt;&lt;</operator><literal type="number" pos:start="23:53" pos:end="23:53">6</literal><operator pos:start="23:54" pos:end="23:54">)</operator> <operator pos:start="23:56" pos:end="23:56">+</operator> <operator pos:start="23:58" pos:end="23:58">(</operator><name pos:start="23:59" pos:end="23:68"><name pos:start="23:59" pos:end="23:63">block</name><operator pos:start="23:64" pos:end="23:65">-&gt;</operator><name pos:start="23:66" pos:end="23:68">ref</name></name><operator pos:start="23:69" pos:end="23:70">&lt;&lt;</operator><literal type="number" pos:start="23:71" pos:end="23:72">12</literal><operator pos:start="23:73" pos:end="23:73">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:17"><if pos:start="25:5" pos:end="27:17">if<condition pos:start="25:7" pos:end="25:35">(<expr pos:start="25:8" pos:end="25:34"><name pos:start="25:8" pos:end="25:25"><name pos:start="25:8" pos:end="25:8">s</name><operator pos:start="25:9" pos:end="25:10">-&gt;</operator><name pos:start="25:11" pos:end="25:18">me_cache</name><index pos:start="25:19" pos:end="25:25">[<expr pos:start="25:20" pos:end="25:24"><name pos:start="25:20" pos:end="25:24">index</name></expr>]</index></name> <operator pos:start="25:27" pos:end="25:28">==</operator> <name pos:start="25:30" pos:end="25:34">value</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:17"><block_content pos:start="27:9" pos:end="27:17">

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:15">me_cache</name><index pos:start="29:16" pos:end="29:22">[<expr pos:start="29:17" pos:end="29:21"><name pos:start="29:17" pos:end="29:21">index</name></expr>]</index></name><operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:29">value</name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:18"><expr pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:9">block</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:13">mx</name></name><operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:17">p0</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:18"><expr pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:13"><name pos:start="35:5" pos:end="35:9">block</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:13">my</name></name><operator pos:start="35:14" pos:end="35:14">=</operator> <name pos:start="35:16" pos:end="35:17">p1</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:20"><expr pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:9">block</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:14">ref</name></name><operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:19">ref</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:32"><expr pos:start="39:5" pos:end="39:31"><name pos:start="39:5" pos:end="39:15"><name pos:start="39:5" pos:end="39:9">block</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:15">type</name></name> <operator pos:start="39:17" pos:end="39:18">&amp;=</operator> <operator pos:start="39:20" pos:end="39:20">~</operator><name pos:start="39:21" pos:end="39:31">BLOCK_INTRA</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:57"><expr pos:start="41:5" pos:end="41:56"><name pos:start="41:5" pos:end="41:12"><name pos:start="41:5" pos:end="41:9">block</name><index pos:start="41:10" pos:end="41:12">[<expr pos:start="41:11" pos:end="41:11"><literal type="number" pos:start="41:11" pos:end="41:11">1</literal></expr>]</index></name><operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:29"><name pos:start="41:15" pos:end="41:19">block</name><index pos:start="41:20" pos:end="41:29">[<expr pos:start="41:21" pos:end="41:28"><name pos:start="41:21" pos:end="41:28">b_stride</name></expr>]</index></name><operator pos:start="41:30" pos:end="41:30">=</operator> <name pos:start="41:32" pos:end="41:48"><name pos:start="41:32" pos:end="41:36">block</name><index pos:start="41:37" pos:end="41:48">[<expr pos:start="41:38" pos:end="41:47"><name pos:start="41:38" pos:end="41:45">b_stride</name><operator pos:start="41:46" pos:end="41:46">+</operator><literal type="number" pos:start="41:47" pos:end="41:47">1</literal></expr>]</index></name><operator pos:start="41:49" pos:end="41:49">=</operator> <operator pos:start="41:51" pos:end="41:51">*</operator><name pos:start="41:52" pos:end="41:56">block</name></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:40"><expr pos:start="45:5" pos:end="45:39"><name pos:start="45:5" pos:end="45:6">rd</name><operator pos:start="45:7" pos:end="45:7">=</operator> <call pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:21">get_4block_rd</name><argument_list pos:start="45:22" pos:end="45:39">(<argument pos:start="45:23" pos:end="45:23"><expr pos:start="45:23" pos:end="45:23"><name pos:start="45:23" pos:end="45:23">s</name></expr></argument>, <argument pos:start="45:26" pos:end="45:29"><expr pos:start="45:26" pos:end="45:29"><name pos:start="45:26" pos:end="45:29">mb_x</name></expr></argument>, <argument pos:start="45:32" pos:end="45:35"><expr pos:start="45:32" pos:end="45:35"><name pos:start="45:32" pos:end="45:35">mb_y</name></expr></argument>, <argument pos:start="45:38" pos:end="45:38"><expr pos:start="45:38" pos:end="45:38"><literal type="number" pos:start="45:38" pos:end="45:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<comment type="line" pos:start="49:1" pos:end="49:14">//FIXME chroma</comment>

    <if_stmt pos:start="51:5" pos:end="69:5"><if pos:start="51:5" pos:end="57:5">if<condition pos:start="51:7" pos:end="51:21">(<expr pos:start="51:8" pos:end="51:20"><name pos:start="51:8" pos:end="51:9">rd</name> <operator pos:start="51:11" pos:end="51:11">&lt;</operator> <operator pos:start="51:13" pos:end="51:13">*</operator><name pos:start="51:14" pos:end="51:20">best_rd</name></expr>)</condition><block pos:start="51:22" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:17">

        <expr_stmt pos:start="53:9" pos:end="53:21"><expr pos:start="53:9" pos:end="53:20"><operator pos:start="53:9" pos:end="53:9">*</operator><name pos:start="53:10" pos:end="53:16">best_rd</name><operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:20">rd</name></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:17">return <expr pos:start="55:16" pos:end="55:16"><literal type="number" pos:start="55:16" pos:end="55:16">1</literal></expr>;</return>

    </block_content>}</block></if><else pos:start="57:6" pos:end="69:5">else<block pos:start="57:10" pos:end="69:5">{<block_content pos:start="59:9" pos:end="67:17">

        <expr_stmt pos:start="59:9" pos:end="59:28"><expr pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:16"><name pos:start="59:9" pos:end="59:13">block</name><index pos:start="59:14" pos:end="59:16">[<expr pos:start="59:15" pos:end="59:15"><literal type="number" pos:start="59:15" pos:end="59:15">0</literal></expr>]</index></name><operator pos:start="59:17" pos:end="59:17">=</operator> <name pos:start="59:19" pos:end="59:27"><name pos:start="59:19" pos:end="59:24">backup</name><index pos:start="59:25" pos:end="59:27">[<expr pos:start="59:26" pos:end="59:26"><literal type="number" pos:start="59:26" pos:end="59:26">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:28"><expr pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:13">block</name><index pos:start="61:14" pos:end="61:16">[<expr pos:start="61:15" pos:end="61:15"><literal type="number" pos:start="61:15" pos:end="61:15">1</literal></expr>]</index></name><operator pos:start="61:17" pos:end="61:17">=</operator> <name pos:start="61:19" pos:end="61:27"><name pos:start="61:19" pos:end="61:24">backup</name><index pos:start="61:25" pos:end="61:27">[<expr pos:start="61:26" pos:end="61:26"><literal type="number" pos:start="61:26" pos:end="61:26">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:35"><expr pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:13">block</name><index pos:start="63:14" pos:end="63:23">[<expr pos:start="63:15" pos:end="63:22"><name pos:start="63:15" pos:end="63:22">b_stride</name></expr>]</index></name><operator pos:start="63:24" pos:end="63:24">=</operator> <name pos:start="63:26" pos:end="63:34"><name pos:start="63:26" pos:end="63:31">backup</name><index pos:start="63:32" pos:end="63:34">[<expr pos:start="63:33" pos:end="63:33"><literal type="number" pos:start="63:33" pos:end="63:33">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:37"><expr pos:start="65:9" pos:end="65:36"><name pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:13">block</name><index pos:start="65:14" pos:end="65:25">[<expr pos:start="65:15" pos:end="65:24"><name pos:start="65:15" pos:end="65:22">b_stride</name><operator pos:start="65:23" pos:end="65:23">+</operator><literal type="number" pos:start="65:24" pos:end="65:24">1</literal></expr>]</index></name><operator pos:start="65:26" pos:end="65:26">=</operator> <name pos:start="65:28" pos:end="65:36"><name pos:start="65:28" pos:end="65:33">backup</name><index pos:start="65:34" pos:end="65:36">[<expr pos:start="65:35" pos:end="65:35"><literal type="number" pos:start="65:35" pos:end="65:35">3</literal></expr>]</index></name></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:17">return <expr pos:start="67:16" pos:end="67:16"><literal type="number" pos:start="67:16" pos:end="67:16">0</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
