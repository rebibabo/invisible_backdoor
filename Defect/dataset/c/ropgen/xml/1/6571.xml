<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6571.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">decode_scalefactors</name><parameter_list pos:start="1:31" pos:end="9:58">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:41">AACContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">ac</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:55"><name pos:start="1:48" pos:end="1:52">float</name></type> <name pos:start="1:54" pos:end="1:60"><name pos:start="1:54" pos:end="1:55">sf</name><index pos:start="1:56" pos:end="1:60">[<expr pos:start="1:57" pos:end="1:59"><literal type="number" pos:start="1:57" pos:end="1:59">120</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:79"><decl pos:start="1:63" pos:end="1:79"><type pos:start="1:63" pos:end="1:79"><name pos:start="1:63" pos:end="1:75">GetBitContext</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:79">gb</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:55"><decl pos:start="3:32" pos:end="3:55"><type pos:start="3:32" pos:end="3:55"><name pos:start="3:32" pos:end="3:39">unsigned</name> <name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:55">global_gain</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:59"><decl pos:start="5:32" pos:end="5:59"><type pos:start="5:32" pos:end="5:59"><name pos:start="5:32" pos:end="5:54">IndividualChannelStream</name> <modifier pos:start="5:56" pos:end="5:56">*</modifier></type><name pos:start="5:57" pos:end="5:59">ics</name></decl></parameter>,

                               <parameter pos:start="7:32" pos:end="7:59"><decl pos:start="7:32" pos:end="7:59"><type pos:start="7:32" pos:end="7:54"><name pos:start="7:32" pos:end="7:44"><name pos:start="7:32" pos:end="7:35">enum</name> <name pos:start="7:37" pos:end="7:44">BandType</name></name></type> <name pos:start="7:46" pos:end="7:59"><name pos:start="7:46" pos:end="7:54">band_type</name><index pos:start="7:55" pos:end="7:59">[<expr pos:start="7:56" pos:end="7:58"><literal type="number" pos:start="7:56" pos:end="7:58">120</literal></expr>]</index></name></decl></parameter>,

                               <parameter pos:start="9:32" pos:end="9:57"><decl pos:start="9:32" pos:end="9:57"><type pos:start="9:32" pos:end="9:52"><name pos:start="9:32" pos:end="9:34">int</name></type> <name pos:start="9:36" pos:end="9:57"><name pos:start="9:36" pos:end="9:52">band_type_run_end</name><index pos:start="9:53" pos:end="9:57">[<expr pos:start="9:54" pos:end="9:56"><literal type="number" pos:start="9:54" pos:end="9:56">120</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="117:1">{<block_content pos:start="13:5" pos:end="115:13">

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">g</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">i</name></decl>, <decl pos:start="13:15" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:17">idx</name> <init pos:start="13:19" pos:end="13:21">= <expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:57"><decl pos:start="15:5" pos:end="15:56"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:14">offset</name><index pos:start="15:15" pos:end="15:17">[<expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">3</literal></expr>]</index></name> <init pos:start="15:19" pos:end="15:56">= <expr pos:start="15:21" pos:end="15:56"><block pos:start="15:21" pos:end="15:56">{ <expr pos:start="15:23" pos:end="15:33"><name pos:start="15:23" pos:end="15:33">global_gain</name></expr>, <expr pos:start="15:36" pos:end="15:51"><name pos:start="15:36" pos:end="15:46">global_gain</name> <operator pos:start="15:48" pos:end="15:48">-</operator> <literal type="number" pos:start="15:50" pos:end="15:51">90</literal></expr>, <expr pos:start="15:54" pos:end="15:54"><literal type="number" pos:start="15:54" pos:end="15:54">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:22">clipped_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:18">noise_flag</name> <init pos:start="19:20" pos:end="19:22">= <expr pos:start="19:22" pos:end="19:22"><literal type="number" pos:start="19:22" pos:end="19:22">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:102"><decl pos:start="21:5" pos:end="21:101"><type pos:start="21:5" pos:end="21:28"><specifier pos:start="21:5" pos:end="21:10">static</specifier> <specifier pos:start="21:12" pos:end="21:16">const</specifier> <name pos:start="21:18" pos:end="21:21">char</name> <modifier pos:start="21:23" pos:end="21:23">*</modifier><specifier pos:start="21:24" pos:end="21:28">const</specifier></type> <name pos:start="21:30" pos:end="21:38"><name pos:start="21:30" pos:end="21:35">sf_str</name><index pos:start="21:36" pos:end="21:38">[<expr pos:start="21:37" pos:end="21:37"><literal type="number" pos:start="21:37" pos:end="21:37">3</literal></expr>]</index></name> <init pos:start="21:40" pos:end="21:101">= <expr pos:start="21:42" pos:end="21:101"><block pos:start="21:42" pos:end="21:101">{ <expr pos:start="21:44" pos:end="21:56"><literal type="string" pos:start="21:44" pos:end="21:56">"Global gain"</literal></expr>, <expr pos:start="21:59" pos:end="21:70"><literal type="string" pos:start="21:59" pos:end="21:70">"Noise gain"</literal></expr>, <expr pos:start="21:73" pos:end="21:99"><literal type="string" pos:start="21:73" pos:end="21:99">"Intensity stereo position"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <for pos:start="23:5" pos:end="113:5">for <control pos:start="23:9" pos:end="23:48">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">g</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:43"><expr pos:start="23:17" pos:end="23:42"><name pos:start="23:17" pos:end="23:17">g</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:42"><name pos:start="23:21" pos:end="23:23">ics</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:42">num_window_groups</name></name></expr>;</condition> <incr pos:start="23:45" pos:end="23:47"><expr pos:start="23:45" pos:end="23:47"><name pos:start="23:45" pos:end="23:45">g</name><operator pos:start="23:46" pos:end="23:47">++</operator></expr></incr>)</control> <block pos:start="23:50" pos:end="113:5">{<block_content pos:start="25:9" pos:end="111:9">

        <for pos:start="25:9" pos:end="111:9">for <control pos:start="25:13" pos:end="25:38">(<init pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">i</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init> <condition pos:start="25:21" pos:end="25:37"><expr pos:start="25:21" pos:end="25:36"><name pos:start="25:21" pos:end="25:21">i</name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <name pos:start="25:25" pos:end="25:36"><name pos:start="25:25" pos:end="25:27">ics</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:36">max_sfb</name></name></expr>;</condition><incr/>)</control> <block pos:start="25:40" pos:end="111:9">{<block_content pos:start="27:13" pos:end="109:13">

            <decl_stmt pos:start="27:13" pos:end="27:49"><decl pos:start="27:13" pos:end="27:48"><type pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">int</name></type> <name pos:start="27:17" pos:end="27:23">run_end</name> <init pos:start="27:25" pos:end="27:48">= <expr pos:start="27:27" pos:end="27:48"><name pos:start="27:27" pos:end="27:48"><name pos:start="27:27" pos:end="27:43">band_type_run_end</name><index pos:start="27:44" pos:end="27:48">[<expr pos:start="27:45" pos:end="27:47"><name pos:start="27:45" pos:end="27:47">idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="29:13" pos:end="109:13"><if pos:start="29:13" pos:end="35:13">if <condition pos:start="29:16" pos:end="29:42">(<expr pos:start="29:17" pos:end="29:41"><name pos:start="29:17" pos:end="29:30"><name pos:start="29:17" pos:end="29:25">band_type</name><index pos:start="29:26" pos:end="29:30">[<expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:29">idx</name></expr>]</index></name> <operator pos:start="29:32" pos:end="29:33">==</operator> <name pos:start="29:35" pos:end="29:41">ZERO_BT</name></expr>)</condition> <block pos:start="29:44" pos:end="35:13">{<block_content pos:start="31:17" pos:end="33:33">

                <for pos:start="31:17" pos:end="33:33">for <control pos:start="31:21" pos:end="31:47">(<init pos:start="31:22" pos:end="31:22">;</init> <condition pos:start="31:24" pos:end="31:35"><expr pos:start="31:24" pos:end="31:34"><name pos:start="31:24" pos:end="31:24">i</name> <operator pos:start="31:26" pos:end="31:26">&lt;</operator> <name pos:start="31:28" pos:end="31:34">run_end</name></expr>;</condition> <incr pos:start="31:37" pos:end="31:46"><expr pos:start="31:37" pos:end="31:39"><name pos:start="31:37" pos:end="31:37">i</name><operator pos:start="31:38" pos:end="31:39">++</operator></expr><operator pos:start="31:40" pos:end="31:40">,</operator> <expr pos:start="31:42" pos:end="31:46"><name pos:start="31:42" pos:end="31:44">idx</name><operator pos:start="31:45" pos:end="31:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="33:21" pos:end="33:33"><block_content pos:start="33:21" pos:end="33:33">

                    <expr_stmt pos:start="33:21" pos:end="33:33"><expr pos:start="33:21" pos:end="33:32"><name pos:start="33:21" pos:end="33:27"><name pos:start="33:21" pos:end="33:22">sf</name><index pos:start="33:23" pos:end="33:27">[<expr pos:start="33:24" pos:end="33:26"><name pos:start="33:24" pos:end="33:26">idx</name></expr>]</index></name> <operator pos:start="33:29" pos:end="33:29">=</operator> <literal type="number" pos:start="33:31" pos:end="33:32">0.</literal></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if> <if type="elseif" pos:start="35:15" pos:end="59:13">else if <condition pos:start="35:23" pos:end="35:93">(<expr pos:start="35:24" pos:end="35:92"><operator pos:start="35:24" pos:end="35:24">(</operator><name pos:start="35:25" pos:end="35:38"><name pos:start="35:25" pos:end="35:33">band_type</name><index pos:start="35:34" pos:end="35:38">[<expr pos:start="35:35" pos:end="35:37"><name pos:start="35:35" pos:end="35:37">idx</name></expr>]</index></name> <operator pos:start="35:40" pos:end="35:41">==</operator> <name pos:start="35:43" pos:end="35:54">INTENSITY_BT</name><operator pos:start="35:55" pos:end="35:55">)</operator> <operator pos:start="35:57" pos:end="35:58">||</operator> <operator pos:start="35:60" pos:end="35:60">(</operator><name pos:start="35:61" pos:end="35:74"><name pos:start="35:61" pos:end="35:69">band_type</name><index pos:start="35:70" pos:end="35:74">[<expr pos:start="35:71" pos:end="35:73"><name pos:start="35:71" pos:end="35:73">idx</name></expr>]</index></name> <operator pos:start="35:76" pos:end="35:77">==</operator> <name pos:start="35:79" pos:end="35:91">INTENSITY_BT2</name><operator pos:start="35:92" pos:end="35:92">)</operator></expr>)</condition> <block pos:start="35:95" pos:end="59:13">{<block_content pos:start="37:17" pos:end="57:17">

                <for pos:start="37:17" pos:end="57:17">for <control pos:start="37:21" pos:end="37:47">(<init pos:start="37:22" pos:end="37:22">;</init> <condition pos:start="37:24" pos:end="37:35"><expr pos:start="37:24" pos:end="37:34"><name pos:start="37:24" pos:end="37:24">i</name> <operator pos:start="37:26" pos:end="37:26">&lt;</operator> <name pos:start="37:28" pos:end="37:34">run_end</name></expr>;</condition> <incr pos:start="37:37" pos:end="37:46"><expr pos:start="37:37" pos:end="37:39"><name pos:start="37:37" pos:end="37:37">i</name><operator pos:start="37:38" pos:end="37:39">++</operator></expr><operator pos:start="37:40" pos:end="37:40">,</operator> <expr pos:start="37:42" pos:end="37:46"><name pos:start="37:42" pos:end="37:44">idx</name><operator pos:start="37:45" pos:end="37:46">++</operator></expr></incr>)</control> <block pos:start="37:49" pos:end="57:17">{<block_content pos:start="39:21" pos:end="55:80">

                    <expr_stmt pos:start="39:21" pos:end="39:81"><expr pos:start="39:21" pos:end="39:80"><name pos:start="39:21" pos:end="39:29"><name pos:start="39:21" pos:end="39:26">offset</name><index pos:start="39:27" pos:end="39:29">[<expr pos:start="39:28" pos:end="39:28"><literal type="number" pos:start="39:28" pos:end="39:28">2</literal></expr>]</index></name> <operator pos:start="39:31" pos:end="39:32">+=</operator> <call pos:start="39:34" pos:end="39:75"><name pos:start="39:34" pos:end="39:41">get_vlc2</name><argument_list pos:start="39:42" pos:end="39:75">(<argument pos:start="39:43" pos:end="39:44"><expr pos:start="39:43" pos:end="39:44"><name pos:start="39:43" pos:end="39:44">gb</name></expr></argument>, <argument pos:start="39:47" pos:end="39:68"><expr pos:start="39:47" pos:end="39:68"><name pos:start="39:47" pos:end="39:68"><name pos:start="39:47" pos:end="39:62">vlc_scalefactors</name><operator pos:start="39:63" pos:end="39:63">.</operator><name pos:start="39:64" pos:end="39:68">table</name></name></expr></argument>, <argument pos:start="39:71" pos:end="39:71"><expr pos:start="39:71" pos:end="39:71"><literal type="number" pos:start="39:71" pos:end="39:71">7</literal></expr></argument>, <argument pos:start="39:74" pos:end="39:74"><expr pos:start="39:74" pos:end="39:74"><literal type="number" pos:start="39:74" pos:end="39:74">3</literal></expr></argument>)</argument_list></call> <operator pos:start="39:77" pos:end="39:77">-</operator> <literal type="number" pos:start="39:79" pos:end="39:80">60</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="41:21" pos:end="41:67"><expr pos:start="41:21" pos:end="41:66"><name pos:start="41:21" pos:end="41:34">clipped_offset</name> <operator pos:start="41:36" pos:end="41:36">=</operator> <call pos:start="41:38" pos:end="41:66"><name pos:start="41:38" pos:end="41:44">av_clip</name><argument_list pos:start="41:45" pos:end="41:66">(<argument pos:start="41:46" pos:end="41:54"><expr pos:start="41:46" pos:end="41:54"><name pos:start="41:46" pos:end="41:54"><name pos:start="41:46" pos:end="41:51">offset</name><index pos:start="41:52" pos:end="41:54">[<expr pos:start="41:53" pos:end="41:53"><literal type="number" pos:start="41:53" pos:end="41:53">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="41:57" pos:end="41:60"><expr pos:start="41:57" pos:end="41:60"><operator pos:start="41:57" pos:end="41:57">-</operator><literal type="number" pos:start="41:58" pos:end="41:60">155</literal></expr></argument>, <argument pos:start="41:63" pos:end="41:65"><expr pos:start="41:63" pos:end="41:65"><literal type="number" pos:start="41:63" pos:end="41:65">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="43:21" pos:end="53:21"><if pos:start="43:21" pos:end="53:21">if <condition pos:start="43:24" pos:end="43:52">(<expr pos:start="43:25" pos:end="43:51"><name pos:start="43:25" pos:end="43:33"><name pos:start="43:25" pos:end="43:30">offset</name><index pos:start="43:31" pos:end="43:33">[<expr pos:start="43:32" pos:end="43:32"><literal type="number" pos:start="43:32" pos:end="43:32">2</literal></expr>]</index></name> <operator pos:start="43:35" pos:end="43:36">!=</operator> <name pos:start="43:38" pos:end="43:51">clipped_offset</name></expr>)</condition> <block pos:start="43:54" pos:end="53:21">{<block_content pos:start="45:25" pos:end="51:72">

                        <expr_stmt pos:start="45:25" pos:end="51:72"><expr pos:start="45:25" pos:end="51:71"><call pos:start="45:25" pos:end="51:71"><name pos:start="45:25" pos:end="45:45">av_log_ask_for_sample</name><argument_list pos:start="45:46" pos:end="51:71">(<argument pos:start="45:47" pos:end="45:55"><expr pos:start="45:47" pos:end="45:55"><name pos:start="45:47" pos:end="45:55"><name pos:start="45:47" pos:end="45:48">ac</name><operator pos:start="45:49" pos:end="45:50">-&gt;</operator><name pos:start="45:51" pos:end="45:55">avctx</name></name></expr></argument>, <argument pos:start="45:58" pos:end="51:43"><expr pos:start="45:58" pos:end="51:43"><literal type="string" pos:start="45:58" pos:end="45:76">"Intensity stereo "</literal>

                                <literal type="string" pos:start="47:33" pos:end="47:80">"position clipped (%d -&gt; %d).\nIf you heard an "</literal>

                                <literal type="string" pos:start="49:33" pos:end="49:78">"audible artifact, there may be a bug in the "</literal>

                                <literal type="string" pos:start="51:33" pos:end="51:43">"decoder. "</literal></expr></argument>, <argument pos:start="51:46" pos:end="51:54"><expr pos:start="51:46" pos:end="51:54"><name pos:start="51:46" pos:end="51:54"><name pos:start="51:46" pos:end="51:51">offset</name><index pos:start="51:52" pos:end="51:54">[<expr pos:start="51:53" pos:end="51:53"><literal type="number" pos:start="51:53" pos:end="51:53">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="51:57" pos:end="51:70"><expr pos:start="51:57" pos:end="51:70"><name pos:start="51:57" pos:end="51:70">clipped_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="55:21" pos:end="55:80"><expr pos:start="55:21" pos:end="55:79"><name pos:start="55:21" pos:end="55:27"><name pos:start="55:21" pos:end="55:22">sf</name><index pos:start="55:23" pos:end="55:27">[<expr pos:start="55:24" pos:end="55:26"><name pos:start="55:24" pos:end="55:26">idx</name></expr>]</index></name> <operator pos:start="55:29" pos:end="55:29">=</operator> <name pos:start="55:31" pos:end="55:79"><name pos:start="55:31" pos:end="55:47">ff_aac_pow2sf_tab</name><index pos:start="55:48" pos:end="55:79">[<expr pos:start="55:49" pos:end="55:78"><operator pos:start="55:49" pos:end="55:49">-</operator><name pos:start="55:50" pos:end="55:63">clipped_offset</name> <operator pos:start="55:65" pos:end="55:65">+</operator> <name pos:start="55:67" pos:end="55:78">POW_SF2_ZERO</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <if type="elseif" pos:start="59:15" pos:end="89:13">else if <condition pos:start="59:23" pos:end="59:50">(<expr pos:start="59:24" pos:end="59:49"><name pos:start="59:24" pos:end="59:37"><name pos:start="59:24" pos:end="59:32">band_type</name><index pos:start="59:33" pos:end="59:37">[<expr pos:start="59:34" pos:end="59:36"><name pos:start="59:34" pos:end="59:36">idx</name></expr>]</index></name> <operator pos:start="59:39" pos:end="59:40">==</operator> <name pos:start="59:42" pos:end="59:49">NOISE_BT</name></expr>)</condition> <block pos:start="59:52" pos:end="89:13">{<block_content pos:start="61:17" pos:end="87:17">

                <for pos:start="61:17" pos:end="87:17">for <control pos:start="61:21" pos:end="61:47">(<init pos:start="61:22" pos:end="61:22">;</init> <condition pos:start="61:24" pos:end="61:35"><expr pos:start="61:24" pos:end="61:34"><name pos:start="61:24" pos:end="61:24">i</name> <operator pos:start="61:26" pos:end="61:26">&lt;</operator> <name pos:start="61:28" pos:end="61:34">run_end</name></expr>;</condition> <incr pos:start="61:37" pos:end="61:46"><expr pos:start="61:37" pos:end="61:39"><name pos:start="61:37" pos:end="61:37">i</name><operator pos:start="61:38" pos:end="61:39">++</operator></expr><operator pos:start="61:40" pos:end="61:40">,</operator> <expr pos:start="61:42" pos:end="61:46"><name pos:start="61:42" pos:end="61:44">idx</name><operator pos:start="61:45" pos:end="61:46">++</operator></expr></incr>)</control> <block pos:start="61:49" pos:end="87:17">{<block_content pos:start="63:21" pos:end="85:80">

                    <if_stmt pos:start="63:21" pos:end="69:85"><if pos:start="63:21" pos:end="65:59">if <condition pos:start="63:24" pos:end="63:41">(<expr pos:start="63:25" pos:end="63:40"><name pos:start="63:25" pos:end="63:34">noise_flag</name><operator pos:start="63:35" pos:end="63:36">--</operator> <operator pos:start="63:38" pos:end="63:38">&gt;</operator> <literal type="number" pos:start="63:40" pos:end="63:40">0</literal></expr>)</condition><block type="pseudo" pos:start="65:25" pos:end="65:59"><block_content pos:start="65:25" pos:end="65:59">

                        <expr_stmt pos:start="65:25" pos:end="65:59"><expr pos:start="65:25" pos:end="65:58"><name pos:start="65:25" pos:end="65:33"><name pos:start="65:25" pos:end="65:30">offset</name><index pos:start="65:31" pos:end="65:33">[<expr pos:start="65:32" pos:end="65:32"><literal type="number" pos:start="65:32" pos:end="65:32">1</literal></expr>]</index></name> <operator pos:start="65:35" pos:end="65:36">+=</operator> <call pos:start="65:38" pos:end="65:52"><name pos:start="65:38" pos:end="65:45">get_bits</name><argument_list pos:start="65:46" pos:end="65:52">(<argument pos:start="65:47" pos:end="65:48"><expr pos:start="65:47" pos:end="65:48"><name pos:start="65:47" pos:end="65:48">gb</name></expr></argument>, <argument pos:start="65:51" pos:end="65:51"><expr pos:start="65:51" pos:end="65:51"><literal type="number" pos:start="65:51" pos:end="65:51">9</literal></expr></argument>)</argument_list></call> <operator pos:start="65:54" pos:end="65:54">-</operator> <literal type="number" pos:start="65:56" pos:end="65:58">256</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="67:21" pos:end="69:85">else<block type="pseudo" pos:start="69:25" pos:end="69:85"><block_content pos:start="69:25" pos:end="69:85">

                        <expr_stmt pos:start="69:25" pos:end="69:85"><expr pos:start="69:25" pos:end="69:84"><name pos:start="69:25" pos:end="69:33"><name pos:start="69:25" pos:end="69:30">offset</name><index pos:start="69:31" pos:end="69:33">[<expr pos:start="69:32" pos:end="69:32"><literal type="number" pos:start="69:32" pos:end="69:32">1</literal></expr>]</index></name> <operator pos:start="69:35" pos:end="69:36">+=</operator> <call pos:start="69:38" pos:end="69:79"><name pos:start="69:38" pos:end="69:45">get_vlc2</name><argument_list pos:start="69:46" pos:end="69:79">(<argument pos:start="69:47" pos:end="69:48"><expr pos:start="69:47" pos:end="69:48"><name pos:start="69:47" pos:end="69:48">gb</name></expr></argument>, <argument pos:start="69:51" pos:end="69:72"><expr pos:start="69:51" pos:end="69:72"><name pos:start="69:51" pos:end="69:72"><name pos:start="69:51" pos:end="69:66">vlc_scalefactors</name><operator pos:start="69:67" pos:end="69:67">.</operator><name pos:start="69:68" pos:end="69:72">table</name></name></expr></argument>, <argument pos:start="69:75" pos:end="69:75"><expr pos:start="69:75" pos:end="69:75"><literal type="number" pos:start="69:75" pos:end="69:75">7</literal></expr></argument>, <argument pos:start="69:78" pos:end="69:78"><expr pos:start="69:78" pos:end="69:78"><literal type="number" pos:start="69:78" pos:end="69:78">3</literal></expr></argument>)</argument_list></call> <operator pos:start="69:81" pos:end="69:81">-</operator> <literal type="number" pos:start="69:83" pos:end="69:84">60</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="71:21" pos:end="71:67"><expr pos:start="71:21" pos:end="71:66"><name pos:start="71:21" pos:end="71:34">clipped_offset</name> <operator pos:start="71:36" pos:end="71:36">=</operator> <call pos:start="71:38" pos:end="71:66"><name pos:start="71:38" pos:end="71:44">av_clip</name><argument_list pos:start="71:45" pos:end="71:66">(<argument pos:start="71:46" pos:end="71:54"><expr pos:start="71:46" pos:end="71:54"><name pos:start="71:46" pos:end="71:54"><name pos:start="71:46" pos:end="71:51">offset</name><index pos:start="71:52" pos:end="71:54">[<expr pos:start="71:53" pos:end="71:53"><literal type="number" pos:start="71:53" pos:end="71:53">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="71:57" pos:end="71:60"><expr pos:start="71:57" pos:end="71:60"><operator pos:start="71:57" pos:end="71:57">-</operator><literal type="number" pos:start="71:58" pos:end="71:60">100</literal></expr></argument>, <argument pos:start="71:63" pos:end="71:65"><expr pos:start="71:63" pos:end="71:65"><literal type="number" pos:start="71:63" pos:end="71:65">155</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="73:21" pos:end="83:21"><if pos:start="73:21" pos:end="83:21">if <condition pos:start="73:24" pos:end="73:52">(<expr pos:start="73:25" pos:end="73:51"><name pos:start="73:25" pos:end="73:33"><name pos:start="73:25" pos:end="73:30">offset</name><index pos:start="73:31" pos:end="73:33">[<expr pos:start="73:32" pos:end="73:32"><literal type="number" pos:start="73:32" pos:end="73:32">1</literal></expr>]</index></name> <operator pos:start="73:35" pos:end="73:36">!=</operator> <name pos:start="73:38" pos:end="73:51">clipped_offset</name></expr>)</condition> <block pos:start="73:54" pos:end="83:21">{<block_content pos:start="75:25" pos:end="81:59">

                        <expr_stmt pos:start="75:25" pos:end="81:59"><expr pos:start="75:25" pos:end="81:58"><call pos:start="75:25" pos:end="81:58"><name pos:start="75:25" pos:end="75:45">av_log_ask_for_sample</name><argument_list pos:start="75:46" pos:end="81:58">(<argument pos:start="75:47" pos:end="75:55"><expr pos:start="75:47" pos:end="75:55"><name pos:start="75:47" pos:end="75:55"><name pos:start="75:47" pos:end="75:48">ac</name><operator pos:start="75:49" pos:end="75:50">-&gt;</operator><name pos:start="75:51" pos:end="75:55">avctx</name></name></expr></argument>, <argument pos:start="75:58" pos:end="79:79"><expr pos:start="75:58" pos:end="79:79"><literal type="string" pos:start="75:58" pos:end="75:78">"Noise gain clipped "</literal>

                                <literal type="string" pos:start="77:33" pos:end="77:71">"(%d -&gt; %d).\nIf you heard an audible "</literal>

                                <literal type="string" pos:start="79:33" pos:end="79:79">"artifact, there may be a bug in the decoder. "</literal></expr></argument>,

                                <argument pos:start="81:33" pos:end="81:41"><expr pos:start="81:33" pos:end="81:41"><name pos:start="81:33" pos:end="81:41"><name pos:start="81:33" pos:end="81:38">offset</name><index pos:start="81:39" pos:end="81:41">[<expr pos:start="81:40" pos:end="81:40"><literal type="number" pos:start="81:40" pos:end="81:40">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="81:44" pos:end="81:57"><expr pos:start="81:44" pos:end="81:57"><name pos:start="81:44" pos:end="81:57">clipped_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:80"><expr pos:start="85:21" pos:end="85:79"><name pos:start="85:21" pos:end="85:27"><name pos:start="85:21" pos:end="85:22">sf</name><index pos:start="85:23" pos:end="85:27">[<expr pos:start="85:24" pos:end="85:26"><name pos:start="85:24" pos:end="85:26">idx</name></expr>]</index></name> <operator pos:start="85:29" pos:end="85:29">=</operator> <operator pos:start="85:31" pos:end="85:31">-</operator><name pos:start="85:32" pos:end="85:79"><name pos:start="85:32" pos:end="85:48">ff_aac_pow2sf_tab</name><index pos:start="85:49" pos:end="85:79">[<expr pos:start="85:50" pos:end="85:78"><name pos:start="85:50" pos:end="85:63">clipped_offset</name> <operator pos:start="85:65" pos:end="85:65">+</operator> <name pos:start="85:67" pos:end="85:78">POW_SF2_ZERO</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="89:15" pos:end="109:13">else <block pos:start="89:20" pos:end="109:13">{<block_content pos:start="91:17" pos:end="107:17">

                <for pos:start="91:17" pos:end="107:17">for <control pos:start="91:21" pos:end="91:47">(<init pos:start="91:22" pos:end="91:22">;</init> <condition pos:start="91:24" pos:end="91:35"><expr pos:start="91:24" pos:end="91:34"><name pos:start="91:24" pos:end="91:24">i</name> <operator pos:start="91:26" pos:end="91:26">&lt;</operator> <name pos:start="91:28" pos:end="91:34">run_end</name></expr>;</condition> <incr pos:start="91:37" pos:end="91:46"><expr pos:start="91:37" pos:end="91:39"><name pos:start="91:37" pos:end="91:37">i</name><operator pos:start="91:38" pos:end="91:39">++</operator></expr><operator pos:start="91:40" pos:end="91:40">,</operator> <expr pos:start="91:42" pos:end="91:46"><name pos:start="91:42" pos:end="91:44">idx</name><operator pos:start="91:45" pos:end="91:46">++</operator></expr></incr>)</control> <block pos:start="91:49" pos:end="107:17">{<block_content pos:start="93:21" pos:end="105:81">

                    <expr_stmt pos:start="93:21" pos:end="93:81"><expr pos:start="93:21" pos:end="93:80"><name pos:start="93:21" pos:end="93:29"><name pos:start="93:21" pos:end="93:26">offset</name><index pos:start="93:27" pos:end="93:29">[<expr pos:start="93:28" pos:end="93:28"><literal type="number" pos:start="93:28" pos:end="93:28">0</literal></expr>]</index></name> <operator pos:start="93:31" pos:end="93:32">+=</operator> <call pos:start="93:34" pos:end="93:75"><name pos:start="93:34" pos:end="93:41">get_vlc2</name><argument_list pos:start="93:42" pos:end="93:75">(<argument pos:start="93:43" pos:end="93:44"><expr pos:start="93:43" pos:end="93:44"><name pos:start="93:43" pos:end="93:44">gb</name></expr></argument>, <argument pos:start="93:47" pos:end="93:68"><expr pos:start="93:47" pos:end="93:68"><name pos:start="93:47" pos:end="93:68"><name pos:start="93:47" pos:end="93:62">vlc_scalefactors</name><operator pos:start="93:63" pos:end="93:63">.</operator><name pos:start="93:64" pos:end="93:68">table</name></name></expr></argument>, <argument pos:start="93:71" pos:end="93:71"><expr pos:start="93:71" pos:end="93:71"><literal type="number" pos:start="93:71" pos:end="93:71">7</literal></expr></argument>, <argument pos:start="93:74" pos:end="93:74"><expr pos:start="93:74" pos:end="93:74"><literal type="number" pos:start="93:74" pos:end="93:74">3</literal></expr></argument>)</argument_list></call> <operator pos:start="93:77" pos:end="93:77">-</operator> <literal type="number" pos:start="93:79" pos:end="93:80">60</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="95:21" pos:end="103:21"><if pos:start="95:21" pos:end="103:21">if <condition pos:start="95:24" pos:end="95:41">(<expr pos:start="95:25" pos:end="95:40"><name pos:start="95:25" pos:end="95:33"><name pos:start="95:25" pos:end="95:30">offset</name><index pos:start="95:31" pos:end="95:33">[<expr pos:start="95:32" pos:end="95:32"><literal type="number" pos:start="95:32" pos:end="95:32">0</literal></expr>]</index></name> <operator pos:start="95:35" pos:end="95:35">&gt;</operator> <literal type="number" pos:start="95:37" pos:end="95:40">255U</literal></expr>)</condition> <block pos:start="95:43" pos:end="103:21">{<block_content pos:start="97:25" pos:end="101:34">

                        <expr_stmt pos:start="97:25" pos:end="99:80"><expr pos:start="97:25" pos:end="99:79"><call pos:start="97:25" pos:end="99:79"><name pos:start="97:25" pos:end="97:30">av_log</name><argument_list pos:start="97:31" pos:end="99:79">(<argument pos:start="97:32" pos:end="97:40"><expr pos:start="97:32" pos:end="97:40"><name pos:start="97:32" pos:end="97:40"><name pos:start="97:32" pos:end="97:33">ac</name><operator pos:start="97:34" pos:end="97:35">-&gt;</operator><name pos:start="97:36" pos:end="97:40">avctx</name></name></expr></argument>, <argument pos:start="97:43" pos:end="97:54"><expr pos:start="97:43" pos:end="97:54"><name pos:start="97:43" pos:end="97:54">AV_LOG_ERROR</name></expr></argument>,

                               <argument pos:start="99:32" pos:end="99:56"><expr pos:start="99:32" pos:end="99:56"><literal type="string" pos:start="99:32" pos:end="99:56">"%s (%d) out of range.\n"</literal></expr></argument>, <argument pos:start="99:59" pos:end="99:67"><expr pos:start="99:59" pos:end="99:67"><name pos:start="99:59" pos:end="99:67"><name pos:start="99:59" pos:end="99:64">sf_str</name><index pos:start="99:65" pos:end="99:67">[<expr pos:start="99:66" pos:end="99:66"><literal type="number" pos:start="99:66" pos:end="99:66">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="99:70" pos:end="99:78"><expr pos:start="99:70" pos:end="99:78"><name pos:start="99:70" pos:end="99:78"><name pos:start="99:70" pos:end="99:75">offset</name><index pos:start="99:76" pos:end="99:78">[<expr pos:start="99:77" pos:end="99:77"><literal type="number" pos:start="99:77" pos:end="99:77">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="101:25" pos:end="101:34">return <expr pos:start="101:32" pos:end="101:33"><operator pos:start="101:32" pos:end="101:32">-</operator><literal type="number" pos:start="101:33" pos:end="101:33">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="105:21" pos:end="105:81"><expr pos:start="105:21" pos:end="105:80"><name pos:start="105:21" pos:end="105:27"><name pos:start="105:21" pos:end="105:22">sf</name><index pos:start="105:23" pos:end="105:27">[<expr pos:start="105:24" pos:end="105:26"><name pos:start="105:24" pos:end="105:26">idx</name></expr>]</index></name> <operator pos:start="105:29" pos:end="105:29">=</operator> <operator pos:start="105:31" pos:end="105:31">-</operator><name pos:start="105:32" pos:end="105:80"><name pos:start="105:32" pos:end="105:48">ff_aac_pow2sf_tab</name><index pos:start="105:49" pos:end="105:80">[<expr pos:start="105:50" pos:end="105:79"><name pos:start="105:50" pos:end="105:58"><name pos:start="105:50" pos:end="105:55">offset</name><index pos:start="105:56" pos:end="105:58">[<expr pos:start="105:57" pos:end="105:57"><literal type="number" pos:start="105:57" pos:end="105:57">0</literal></expr>]</index></name> <operator pos:start="105:60" pos:end="105:60">-</operator> <literal type="number" pos:start="105:62" pos:end="105:66">100</literal> <operator pos:start="105:66" pos:end="105:66">+</operator> <name pos:start="105:68" pos:end="105:79">POW_SF2_ZERO</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="115:5" pos:end="115:13">return <expr pos:start="115:12" pos:end="115:12"><literal type="number" pos:start="115:12" pos:end="115:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
