<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11809.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">adb_mouse_request</name><parameter_list pos:start="1:29" pos:end="3:57">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:38">ADBDevice</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">d</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:56"><decl pos:start="1:44" pos:end="1:56"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:50">uint8_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">obuf</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:47"><decl pos:start="3:30" pos:end="3:47"><type pos:start="3:30" pos:end="3:47"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">uint8_t</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:47">buf</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:56"><decl pos:start="3:50" pos:end="3:56"><type pos:start="3:50" pos:end="3:56"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:56">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="143:1">{<block_content pos:start="7:5" pos:end="141:16">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">MouseState</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">s</name> <init pos:start="7:19" pos:end="7:32">= <expr pos:start="7:21" pos:end="7:32"><call pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:29">ADB_MOUSE</name><argument_list pos:start="7:30" pos:end="7:32">(<argument pos:start="7:31" pos:end="7:31"><expr pos:start="7:31" pos:end="7:31"><name pos:start="7:31" pos:end="7:31">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">cmd</name></decl>, <decl pos:start="9:14" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:16">reg</name></decl>, <decl pos:start="9:19" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:22">olen</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="27:5"><if pos:start="13:5" pos:end="27:5">if <condition pos:start="13:8" pos:end="13:37">(<expr pos:start="13:9" pos:end="13:36"><operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:15"><name pos:start="13:10" pos:end="13:12">buf</name><index pos:start="13:13" pos:end="13:15">[<expr pos:start="13:14" pos:end="13:14"><literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>]</index></name> <operator pos:start="13:17" pos:end="13:17">&amp;</operator> <literal type="number" pos:start="13:19" pos:end="13:22">0x0f</literal><operator pos:start="13:23" pos:end="13:23">)</operator> <operator pos:start="13:25" pos:end="13:26">==</operator> <name pos:start="13:28" pos:end="13:36">ADB_FLUSH</name></expr>)</condition> <block pos:start="13:39" pos:end="27:5">{<block_content pos:start="17:9" pos:end="25:17">

        <comment type="block" pos:start="15:9" pos:end="15:30">/* flush mouse fifo */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:49"><expr pos:start="17:9" pos:end="17:48"><name pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:24">buttons_state</name></name> <operator pos:start="17:26" pos:end="17:26">=</operator> <name pos:start="17:28" pos:end="17:48"><name pos:start="17:28" pos:end="17:28">s</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:48">last_buttons_state</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:18"><expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:13"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:13">dx</name></name> <operator pos:start="19:15" pos:end="19:15">=</operator> <literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:18"><expr pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:13">dy</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator> <literal type="number" pos:start="21:17" pos:end="21:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:18"><expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:13">dz</name></name> <operator pos:start="23:15" pos:end="23:15">=</operator> <literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:7">cmd</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <name pos:start="31:11" pos:end="31:16"><name pos:start="31:11" pos:end="31:13">buf</name><index pos:start="31:14" pos:end="31:16">[<expr pos:start="31:15" pos:end="31:15"><literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>]</index></name> <operator pos:start="31:18" pos:end="31:18">&amp;</operator> <literal type="number" pos:start="31:20" pos:end="31:22">0xc</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:7">reg</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <name pos:start="33:11" pos:end="33:16"><name pos:start="33:11" pos:end="33:13">buf</name><index pos:start="33:14" pos:end="33:16">[<expr pos:start="33:15" pos:end="33:15"><literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>]</index></name> <operator pos:start="33:18" pos:end="33:18">&amp;</operator> <literal type="number" pos:start="33:20" pos:end="33:22">0x3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:13"><expr pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:8">olen</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</expr_stmt>

    <switch pos:start="37:5" pos:end="139:5">switch<condition pos:start="37:11" pos:end="37:15">(<expr pos:start="37:12" pos:end="37:14"><name pos:start="37:12" pos:end="37:14">cmd</name></expr>)</condition> <block pos:start="37:17" pos:end="139:5">{<block_content pos:start="39:5" pos:end="137:14">

    <case pos:start="39:5" pos:end="39:22">case <expr pos:start="39:10" pos:end="39:21"><name pos:start="39:10" pos:end="39:21">ADB_WRITEREG</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:63"><expr pos:start="41:9" pos:end="41:62"><call pos:start="41:9" pos:end="41:62"><name pos:start="41:9" pos:end="41:19">ADB_DPRINTF</name><argument_list pos:start="41:20" pos:end="41:62">(<argument pos:start="41:21" pos:end="41:48"><expr pos:start="41:21" pos:end="41:48"><literal type="string" pos:start="41:21" pos:end="41:48">"write reg %d val 0x%2.2x\n"</literal></expr></argument>, <argument pos:start="41:51" pos:end="41:53"><expr pos:start="41:51" pos:end="41:53"><name pos:start="41:51" pos:end="41:53">reg</name></expr></argument>, <argument pos:start="41:56" pos:end="41:61"><expr pos:start="41:56" pos:end="41:61"><name pos:start="41:56" pos:end="41:61"><name pos:start="41:56" pos:end="41:58">buf</name><index pos:start="41:59" pos:end="41:61">[<expr pos:start="41:60" pos:end="41:60"><literal type="number" pos:start="41:60" pos:end="41:60">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="43:9" pos:end="103:9">switch<condition pos:start="43:15" pos:end="43:19">(<expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">reg</name></expr>)</condition> <block pos:start="43:21" pos:end="103:9">{<block_content pos:start="45:9" pos:end="101:13">

        <case pos:start="45:9" pos:end="45:15">case <expr pos:start="45:14" pos:end="45:14"><literal type="number" pos:start="45:14" pos:end="45:14">2</literal></expr>:</case>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        <case pos:start="49:9" pos:end="49:15">case <expr pos:start="49:14" pos:end="49:14"><literal type="number" pos:start="49:14" pos:end="49:14">3</literal></expr>:</case>

            <switch pos:start="51:13" pos:end="101:13">switch<condition pos:start="51:19" pos:end="51:26">(<expr pos:start="51:20" pos:end="51:25"><name pos:start="51:20" pos:end="51:25"><name pos:start="51:20" pos:end="51:22">buf</name><index pos:start="51:23" pos:end="51:25">[<expr pos:start="51:24" pos:end="51:24"><literal type="number" pos:start="51:24" pos:end="51:24">2</literal></expr>]</index></name></expr>)</condition> <block pos:start="51:28" pos:end="101:13">{<block_content pos:start="53:13" pos:end="99:22">

            <case pos:start="53:13" pos:end="53:35">case <expr pos:start="53:18" pos:end="53:34"><name pos:start="53:18" pos:end="53:34">ADB_CMD_SELF_TEST</name></expr>:</case>

                <break pos:start="55:17" pos:end="55:22">break;</break>

            <case pos:start="57:13" pos:end="57:35">case <expr pos:start="57:18" pos:end="57:34"><name pos:start="57:18" pos:end="57:34">ADB_CMD_CHANGE_ID</name></expr>:</case>

            <case pos:start="59:13" pos:end="59:43">case <expr pos:start="59:18" pos:end="59:42"><name pos:start="59:18" pos:end="59:42">ADB_CMD_CHANGE_ID_AND_ACT</name></expr>:</case>

            <case pos:start="61:13" pos:end="61:46">case <expr pos:start="61:18" pos:end="61:45"><name pos:start="61:18" pos:end="61:45">ADB_CMD_CHANGE_ID_AND_ENABLE</name></expr>:</case>

                <expr_stmt pos:start="63:17" pos:end="63:42"><expr pos:start="63:17" pos:end="63:41"><name pos:start="63:17" pos:end="63:26"><name pos:start="63:17" pos:end="63:17">d</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:26">devaddr</name></name> <operator pos:start="63:28" pos:end="63:28">=</operator> <name pos:start="63:30" pos:end="63:35"><name pos:start="63:30" pos:end="63:32">buf</name><index pos:start="63:33" pos:end="63:35">[<expr pos:start="63:34" pos:end="63:34"><literal type="number" pos:start="63:34" pos:end="63:34">1</literal></expr>]</index></name> <operator pos:start="63:37" pos:end="63:37">&amp;</operator> <literal type="number" pos:start="63:39" pos:end="63:41">0xf</literal></expr>;</expr_stmt>

                <break pos:start="65:17" pos:end="65:22">break;</break>

            <default pos:start="67:13" pos:end="67:20">default:</default>

                <expr_stmt pos:start="69:17" pos:end="69:42"><expr pos:start="69:17" pos:end="69:41"><name pos:start="69:17" pos:end="69:26"><name pos:start="69:17" pos:end="69:17">d</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:26">devaddr</name></name> <operator pos:start="69:28" pos:end="69:28">=</operator> <name pos:start="69:30" pos:end="69:35"><name pos:start="69:30" pos:end="69:32">buf</name><index pos:start="69:33" pos:end="69:35">[<expr pos:start="69:34" pos:end="69:34"><literal type="number" pos:start="69:34" pos:end="69:34">1</literal></expr>]</index></name> <operator pos:start="69:37" pos:end="69:37">&amp;</operator> <literal type="number" pos:start="69:39" pos:end="69:41">0xf</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="71:17" pos:end="91:19">/* we support handlers:

                 * 0x01: Classic Apple Mouse Protocol / 100 cpi operations

                 * 0x02: Classic Apple Mouse Protocol / 200 cpi operations

                 * we don't support handlers (at least):

                 * 0x03: Mouse systems A3 trackball

                 * 0x04: Extended Apple Mouse Protocol

                 * 0x2f: Microspeed mouse

                 * 0x42: Macally

                 * 0x5f: Microspeed mouse

                 * 0x66: Microspeed mouse

                 */</comment>

                <if_stmt pos:start="93:17" pos:end="97:17"><if pos:start="93:17" pos:end="97:17">if <condition pos:start="93:20" pos:end="93:47">(<expr pos:start="93:21" pos:end="93:46"><name pos:start="93:21" pos:end="93:26"><name pos:start="93:21" pos:end="93:23">buf</name><index pos:start="93:24" pos:end="93:26">[<expr pos:start="93:25" pos:end="93:25"><literal type="number" pos:start="93:25" pos:end="93:25">2</literal></expr>]</index></name> <operator pos:start="93:28" pos:end="93:29">==</operator> <literal type="number" pos:start="93:31" pos:end="93:31">1</literal> <operator pos:start="93:33" pos:end="93:34">||</operator> <name pos:start="93:36" pos:end="93:41"><name pos:start="93:36" pos:end="93:38">buf</name><index pos:start="93:39" pos:end="93:41">[<expr pos:start="93:40" pos:end="93:40"><literal type="number" pos:start="93:40" pos:end="93:40">2</literal></expr>]</index></name> <operator pos:start="93:43" pos:end="93:44">==</operator> <literal type="number" pos:start="93:46" pos:end="93:46">2</literal></expr>)</condition> <block pos:start="93:49" pos:end="97:17">{<block_content pos:start="95:21" pos:end="95:40">

                    <expr_stmt pos:start="95:21" pos:end="95:40"><expr pos:start="95:21" pos:end="95:39"><name pos:start="95:21" pos:end="95:30"><name pos:start="95:21" pos:end="95:21">d</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:30">handler</name></name> <operator pos:start="95:32" pos:end="95:32">=</operator> <name pos:start="95:34" pos:end="95:39"><name pos:start="95:34" pos:end="95:36">buf</name><index pos:start="95:37" pos:end="95:39">[<expr pos:start="95:38" pos:end="95:38"><literal type="number" pos:start="95:38" pos:end="95:38">2</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="99:17" pos:end="99:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></switch>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    <case pos:start="107:5" pos:end="107:21">case <expr pos:start="107:10" pos:end="107:20"><name pos:start="107:10" pos:end="107:20">ADB_READREG</name></expr>:</case>

        <switch pos:start="109:9" pos:end="131:9">switch<condition pos:start="109:15" pos:end="109:19">(<expr pos:start="109:16" pos:end="109:18"><name pos:start="109:16" pos:end="109:18">reg</name></expr>)</condition> <block pos:start="109:21" pos:end="131:9">{<block_content pos:start="111:9" pos:end="129:18">

        <case pos:start="111:9" pos:end="111:15">case <expr pos:start="111:14" pos:end="111:14"><literal type="number" pos:start="111:14" pos:end="111:14">0</literal></expr>:</case>

            <expr_stmt pos:start="113:13" pos:end="113:43"><expr pos:start="113:13" pos:end="113:42"><name pos:start="113:13" pos:end="113:16">olen</name> <operator pos:start="113:18" pos:end="113:18">=</operator> <call pos:start="113:20" pos:end="113:42"><name pos:start="113:20" pos:end="113:33">adb_mouse_poll</name><argument_list pos:start="113:34" pos:end="113:42">(<argument pos:start="113:35" pos:end="113:35"><expr pos:start="113:35" pos:end="113:35"><name pos:start="113:35" pos:end="113:35">d</name></expr></argument>, <argument pos:start="113:38" pos:end="113:41"><expr pos:start="113:38" pos:end="113:41"><name pos:start="113:38" pos:end="113:41">obuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        <case pos:start="117:9" pos:end="117:15">case <expr pos:start="117:14" pos:end="117:14"><literal type="number" pos:start="117:14" pos:end="117:14">1</literal></expr>:</case>

            <break pos:start="119:13" pos:end="119:18">break;</break>

        <case pos:start="121:9" pos:end="121:15">case <expr pos:start="121:14" pos:end="121:14"><literal type="number" pos:start="121:14" pos:end="121:14">3</literal></expr>:</case>

            <expr_stmt pos:start="123:13" pos:end="123:33"><expr pos:start="123:13" pos:end="123:32"><name pos:start="123:13" pos:end="123:19"><name pos:start="123:13" pos:end="123:16">obuf</name><index pos:start="123:17" pos:end="123:19">[<expr pos:start="123:18" pos:end="123:18"><literal type="number" pos:start="123:18" pos:end="123:18">0</literal></expr>]</index></name> <operator pos:start="123:21" pos:end="123:21">=</operator> <name pos:start="123:23" pos:end="123:32"><name pos:start="123:23" pos:end="123:23">d</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:32">handler</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:33"><expr pos:start="125:13" pos:end="125:32"><name pos:start="125:13" pos:end="125:19"><name pos:start="125:13" pos:end="125:16">obuf</name><index pos:start="125:17" pos:end="125:19">[<expr pos:start="125:18" pos:end="125:18"><literal type="number" pos:start="125:18" pos:end="125:18">1</literal></expr>]</index></name> <operator pos:start="125:21" pos:end="125:21">=</operator> <name pos:start="125:23" pos:end="125:32"><name pos:start="125:23" pos:end="125:23">d</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:32">devaddr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:21"><expr pos:start="127:13" pos:end="127:20"><name pos:start="127:13" pos:end="127:16">olen</name> <operator pos:start="127:18" pos:end="127:18">=</operator> <literal type="number" pos:start="127:20" pos:end="127:20">2</literal></expr>;</expr_stmt>

            <break pos:start="129:13" pos:end="129:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="133:9" pos:end="135:38"><expr pos:start="133:9" pos:end="135:37"><call pos:start="133:9" pos:end="135:37"><name pos:start="133:9" pos:end="133:19">ADB_DPRINTF</name><argument_list pos:start="133:20" pos:end="135:37">(<argument pos:start="133:21" pos:end="133:67"><expr pos:start="133:21" pos:end="133:67"><literal type="string" pos:start="133:21" pos:end="133:67">"read reg %d obuf[0] 0x%2.2x obuf[1] 0x%2.2x\n"</literal></expr></argument>, <argument pos:start="133:70" pos:end="133:72"><expr pos:start="133:70" pos:end="133:72"><name pos:start="133:70" pos:end="133:72">reg</name></expr></argument>,

                    <argument pos:start="135:21" pos:end="135:27"><expr pos:start="135:21" pos:end="135:27"><name pos:start="135:21" pos:end="135:27"><name pos:start="135:21" pos:end="135:24">obuf</name><index pos:start="135:25" pos:end="135:27">[<expr pos:start="135:26" pos:end="135:26"><literal type="number" pos:start="135:26" pos:end="135:26">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="135:30" pos:end="135:36"><expr pos:start="135:30" pos:end="135:36"><name pos:start="135:30" pos:end="135:36"><name pos:start="135:30" pos:end="135:33">obuf</name><index pos:start="135:34" pos:end="135:36">[<expr pos:start="135:35" pos:end="135:35"><literal type="number" pos:start="135:35" pos:end="135:35">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="137:9" pos:end="137:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="141:5" pos:end="141:16">return <expr pos:start="141:12" pos:end="141:15"><name pos:start="141:12" pos:end="141:15">olen</name></expr>;</return>

</block_content>}</block></function>
</unit>
