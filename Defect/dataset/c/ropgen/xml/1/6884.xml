<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6884.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">net_socket_send</name><parameter_list pos:start="1:28" pos:end="1:41">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:34"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:5">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">NetSocketState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">l</name></decl>, <decl pos:start="7:12" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:15">size</name></decl>, <decl pos:start="7:18" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:20">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:22"><name pos:start="9:13" pos:end="9:16">buf1</name><index pos:start="9:17" pos:end="9:22">[<expr pos:start="9:18" pos:end="9:21"><literal type="number" pos:start="9:18" pos:end="9:21">4096</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">buf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:46"><expr pos:start="15:5" pos:end="15:45"><name pos:start="15:5" pos:end="15:8">size</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:45"><name pos:start="15:12" pos:end="15:15">recv</name><argument_list pos:start="15:16" pos:end="15:45">(<argument pos:start="15:17" pos:end="15:21"><expr pos:start="15:17" pos:end="15:21"><name pos:start="15:17" pos:end="15:21"><name pos:start="15:17" pos:end="15:17">s</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:21">fd</name></name></expr></argument>, <argument pos:start="15:24" pos:end="15:27"><expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">buf1</name></expr></argument>, <argument pos:start="15:30" pos:end="15:41"><expr pos:start="15:30" pos:end="15:41"><sizeof pos:start="15:30" pos:end="15:41">sizeof<argument_list pos:start="15:36" pos:end="15:41">(<argument pos:start="15:37" pos:end="15:40"><expr pos:start="15:37" pos:end="15:40"><name pos:start="15:37" pos:end="15:40">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="15:44" pos:end="15:44"><expr pos:start="15:44" pos:end="15:44"><literal type="number" pos:start="15:44" pos:end="15:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="37:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:17">(<expr pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:12">size</name> <operator pos:start="17:14" pos:end="17:14">&lt;</operator> <literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>)</condition> <block pos:start="17:19" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:21">

        <expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:11">err</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:28"><name pos:start="19:15" pos:end="19:26">socket_error</name><argument_list pos:start="19:27" pos:end="19:28">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:21"><if pos:start="21:9" pos:end="23:21">if <condition pos:start="21:12" pos:end="21:31">(<expr pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:15">err</name> <operator pos:start="21:17" pos:end="21:18">!=</operator> <name pos:start="21:20" pos:end="21:30">EWOULDBLOCK</name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:21"><block_content pos:start="23:13" pos:end="23:21">

            <goto pos:start="23:13" pos:end="23:21">goto <name pos:start="23:18" pos:end="23:20">eoc</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="25:7" pos:end="37:5">else if <condition pos:start="25:15" pos:end="25:25">(<expr pos:start="25:16" pos:end="25:24"><name pos:start="25:16" pos:end="25:19">size</name> <operator pos:start="25:21" pos:end="25:22">==</operator> <literal type="number" pos:start="25:24" pos:end="25:24">0</literal></expr>)</condition> <block pos:start="25:27" pos:end="37:5">{<block_content pos:start="29:5" pos:end="35:15">

        <comment type="block" pos:start="27:9" pos:end="27:31">/* end of connection */</comment>

    <label pos:start="29:5" pos:end="29:8"><name pos:start="29:5" pos:end="29:7">eoc</name>:</label>

        <expr_stmt pos:start="31:9" pos:end="31:53"><expr pos:start="31:9" pos:end="31:52"><call pos:start="31:9" pos:end="31:52"><name pos:start="31:9" pos:end="31:27">qemu_set_fd_handler</name><argument_list pos:start="31:28" pos:end="31:52">(<argument pos:start="31:29" pos:end="31:33"><expr pos:start="31:29" pos:end="31:33"><name pos:start="31:29" pos:end="31:33"><name pos:start="31:29" pos:end="31:29">s</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:33">fd</name></name></expr></argument>, <argument pos:start="31:36" pos:end="31:39"><expr pos:start="31:36" pos:end="31:39"><name pos:start="31:36" pos:end="31:39">NULL</name></expr></argument>, <argument pos:start="31:42" pos:end="31:45"><expr pos:start="31:42" pos:end="31:45"><name pos:start="31:42" pos:end="31:45">NULL</name></expr></argument>, <argument pos:start="31:48" pos:end="31:51"><expr pos:start="31:48" pos:end="31:51"><name pos:start="31:48" pos:end="31:51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:27"><expr pos:start="33:9" pos:end="33:26"><call pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:19">closesocket</name><argument_list pos:start="33:20" pos:end="33:26">(<argument pos:start="33:21" pos:end="33:25"><expr pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:21">s</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:25">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:15"><expr pos:start="39:5" pos:end="39:14"><name pos:start="39:5" pos:end="39:7">buf</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <name pos:start="39:11" pos:end="39:14">buf1</name></expr>;</expr_stmt>

    <while pos:start="41:5" pos:end="107:5">while <condition pos:start="41:11" pos:end="41:20">(<expr pos:start="41:12" pos:end="41:19"><name pos:start="41:12" pos:end="41:15">size</name> <operator pos:start="41:17" pos:end="41:17">&gt;</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>)</condition> <block pos:start="41:22" pos:end="107:5">{<block_content pos:start="45:9" pos:end="105:9">

        <comment type="block" pos:start="43:9" pos:end="43:50">/* reassemble a packet from the network */</comment>

        <switch pos:start="45:9" pos:end="105:9">switch<condition pos:start="45:15" pos:end="45:24">(<expr pos:start="45:16" pos:end="45:23"><name pos:start="45:16" pos:end="45:23"><name pos:start="45:16" pos:end="45:16">s</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:23">state</name></name></expr>)</condition> <block pos:start="45:26" pos:end="105:9">{<block_content pos:start="47:9" pos:end="103:18">

        <case pos:start="47:9" pos:end="47:15">case <expr pos:start="47:14" pos:end="47:14"><literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>:</case>

            <expr_stmt pos:start="49:13" pos:end="49:29"><expr pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:13">l</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <literal type="number" pos:start="49:17" pos:end="49:19">4</literal> <operator pos:start="49:19" pos:end="49:19">-</operator> <name pos:start="49:21" pos:end="49:28"><name pos:start="49:21" pos:end="49:21">s</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:28">index</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="53:25"><if pos:start="51:13" pos:end="53:25">if <condition pos:start="51:16" pos:end="51:25">(<expr pos:start="51:17" pos:end="51:24"><name pos:start="51:17" pos:end="51:17">l</name> <operator pos:start="51:19" pos:end="51:19">&gt;</operator> <name pos:start="51:21" pos:end="51:24">size</name></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:25"><block_content pos:start="53:17" pos:end="53:25">

                <expr_stmt pos:start="53:17" pos:end="53:25"><expr pos:start="53:17" pos:end="53:24"><name pos:start="53:17" pos:end="53:17">l</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:24">size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:46"><expr pos:start="55:13" pos:end="55:45"><call pos:start="55:13" pos:end="55:45"><name pos:start="55:13" pos:end="55:18">memcpy</name><argument_list pos:start="55:19" pos:end="55:45">(<argument pos:start="55:20" pos:end="55:36"><expr pos:start="55:20" pos:end="55:36"><name pos:start="55:20" pos:end="55:25"><name pos:start="55:20" pos:end="55:20">s</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:25">buf</name></name> <operator pos:start="55:27" pos:end="55:27">+</operator> <name pos:start="55:29" pos:end="55:36"><name pos:start="55:29" pos:end="55:29">s</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:36">index</name></name></expr></argument>, <argument pos:start="55:39" pos:end="55:41"><expr pos:start="55:39" pos:end="55:41"><name pos:start="55:39" pos:end="55:41">buf</name></expr></argument>, <argument pos:start="55:44" pos:end="55:44"><expr pos:start="55:44" pos:end="55:44"><name pos:start="55:44" pos:end="55:44">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:21"><expr pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:15">buf</name> <operator pos:start="57:17" pos:end="57:18">+=</operator> <name pos:start="57:20" pos:end="57:20">l</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:22"><expr pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:16">size</name> <operator pos:start="59:18" pos:end="59:19">-=</operator> <name pos:start="59:21" pos:end="59:21">l</name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:26"><expr pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:20">index</name></name> <operator pos:start="61:22" pos:end="61:23">+=</operator> <name pos:start="61:25" pos:end="61:25">l</name></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="73:13"><if pos:start="63:13" pos:end="73:13">if <condition pos:start="63:16" pos:end="63:30">(<expr pos:start="63:17" pos:end="63:29"><name pos:start="63:17" pos:end="63:24"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:24">index</name></name> <operator pos:start="63:26" pos:end="63:27">==</operator> <literal type="number" pos:start="63:29" pos:end="63:29">4</literal></expr>)</condition> <block pos:start="63:32" pos:end="73:13">{<block_content pos:start="67:17" pos:end="71:29">

                <comment type="block" pos:start="65:17" pos:end="65:32">/* got length */</comment>

                <expr_stmt pos:start="67:17" pos:end="67:59"><expr pos:start="67:17" pos:end="67:58"><name pos:start="67:17" pos:end="67:29"><name pos:start="67:17" pos:end="67:17">s</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:29">packet_len</name></name> <operator pos:start="67:31" pos:end="67:31">=</operator> <call pos:start="67:33" pos:end="67:58"><name pos:start="67:33" pos:end="67:37">ntohl</name><argument_list pos:start="67:38" pos:end="67:58">(<argument pos:start="67:39" pos:end="67:57"><expr pos:start="67:39" pos:end="67:57"><operator pos:start="67:39" pos:end="67:39">*</operator><operator pos:start="67:40" pos:end="67:40">(</operator><name pos:start="67:41" pos:end="67:48">uint32_t</name> <operator pos:start="67:50" pos:end="67:50">*</operator><operator pos:start="67:51" pos:end="67:51">)</operator><name pos:start="67:52" pos:end="67:57"><name pos:start="67:52" pos:end="67:52">s</name><operator pos:start="67:53" pos:end="67:54">-&gt;</operator><name pos:start="67:55" pos:end="67:57">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:29"><expr pos:start="69:17" pos:end="69:28"><name pos:start="69:17" pos:end="69:24"><name pos:start="69:17" pos:end="69:17">s</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:24">index</name></name> <operator pos:start="69:26" pos:end="69:26">=</operator> <literal type="number" pos:start="69:28" pos:end="69:28">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:29"><expr pos:start="71:17" pos:end="71:28"><name pos:start="71:17" pos:end="71:24"><name pos:start="71:17" pos:end="71:17">s</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:24">state</name></name> <operator pos:start="71:26" pos:end="71:26">=</operator> <literal type="number" pos:start="71:28" pos:end="71:28">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <case pos:start="77:9" pos:end="77:15">case <expr pos:start="77:14" pos:end="77:14"><literal type="number" pos:start="77:14" pos:end="77:14">1</literal></expr>:</case>

            <expr_stmt pos:start="79:13" pos:end="79:41"><expr pos:start="79:13" pos:end="79:40"><name pos:start="79:13" pos:end="79:13">l</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <name pos:start="79:17" pos:end="79:29"><name pos:start="79:17" pos:end="79:17">s</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:29">packet_len</name></name> <operator pos:start="79:31" pos:end="79:31">-</operator> <name pos:start="79:33" pos:end="79:40"><name pos:start="79:33" pos:end="79:33">s</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:40">index</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="81:13" pos:end="83:25"><if pos:start="81:13" pos:end="83:25">if <condition pos:start="81:16" pos:end="81:25">(<expr pos:start="81:17" pos:end="81:24"><name pos:start="81:17" pos:end="81:17">l</name> <operator pos:start="81:19" pos:end="81:19">&gt;</operator> <name pos:start="81:21" pos:end="81:24">size</name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:25"><block_content pos:start="83:17" pos:end="83:25">

                <expr_stmt pos:start="83:17" pos:end="83:25"><expr pos:start="83:17" pos:end="83:24"><name pos:start="83:17" pos:end="83:17">l</name> <operator pos:start="83:19" pos:end="83:19">=</operator> <name pos:start="83:21" pos:end="83:24">size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:46"><expr pos:start="85:13" pos:end="85:45"><call pos:start="85:13" pos:end="85:45"><name pos:start="85:13" pos:end="85:18">memcpy</name><argument_list pos:start="85:19" pos:end="85:45">(<argument pos:start="85:20" pos:end="85:36"><expr pos:start="85:20" pos:end="85:36"><name pos:start="85:20" pos:end="85:25"><name pos:start="85:20" pos:end="85:20">s</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:25">buf</name></name> <operator pos:start="85:27" pos:end="85:27">+</operator> <name pos:start="85:29" pos:end="85:36"><name pos:start="85:29" pos:end="85:29">s</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:36">index</name></name></expr></argument>, <argument pos:start="85:39" pos:end="85:41"><expr pos:start="85:39" pos:end="85:41"><name pos:start="85:39" pos:end="85:41">buf</name></expr></argument>, <argument pos:start="85:44" pos:end="85:44"><expr pos:start="85:44" pos:end="85:44"><name pos:start="85:44" pos:end="85:44">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:26"><expr pos:start="87:13" pos:end="87:25"><name pos:start="87:13" pos:end="87:20"><name pos:start="87:13" pos:end="87:13">s</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:20">index</name></name> <operator pos:start="87:22" pos:end="87:23">+=</operator> <name pos:start="87:25" pos:end="87:25">l</name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:21"><expr pos:start="89:13" pos:end="89:20"><name pos:start="89:13" pos:end="89:15">buf</name> <operator pos:start="89:17" pos:end="89:18">+=</operator> <name pos:start="89:20" pos:end="89:20">l</name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:22"><expr pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:16">size</name> <operator pos:start="91:18" pos:end="91:19">-=</operator> <name pos:start="91:21" pos:end="91:21">l</name></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="101:13"><if pos:start="93:13" pos:end="101:13">if <condition pos:start="93:16" pos:end="93:42">(<expr pos:start="93:17" pos:end="93:41"><name pos:start="93:17" pos:end="93:24"><name pos:start="93:17" pos:end="93:17">s</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:24">index</name></name> <operator pos:start="93:26" pos:end="93:27">&gt;=</operator> <name pos:start="93:29" pos:end="93:41"><name pos:start="93:29" pos:end="93:29">s</name><operator pos:start="93:30" pos:end="93:31">-&gt;</operator><name pos:start="93:32" pos:end="93:41">packet_len</name></name></expr>)</condition> <block pos:start="93:44" pos:end="101:13">{<block_content pos:start="95:17" pos:end="99:29">

                <expr_stmt pos:start="95:17" pos:end="95:63"><expr pos:start="95:17" pos:end="95:62"><call pos:start="95:17" pos:end="95:62"><name pos:start="95:17" pos:end="95:32">qemu_send_packet</name><argument_list pos:start="95:33" pos:end="95:62">(<argument pos:start="95:34" pos:end="95:38"><expr pos:start="95:34" pos:end="95:38"><name pos:start="95:34" pos:end="95:38"><name pos:start="95:34" pos:end="95:34">s</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:38">vc</name></name></expr></argument>, <argument pos:start="95:41" pos:end="95:46"><expr pos:start="95:41" pos:end="95:46"><name pos:start="95:41" pos:end="95:46"><name pos:start="95:41" pos:end="95:41">s</name><operator pos:start="95:42" pos:end="95:43">-&gt;</operator><name pos:start="95:44" pos:end="95:46">buf</name></name></expr></argument>, <argument pos:start="95:49" pos:end="95:61"><expr pos:start="95:49" pos:end="95:61"><name pos:start="95:49" pos:end="95:61"><name pos:start="95:49" pos:end="95:49">s</name><operator pos:start="95:50" pos:end="95:51">-&gt;</operator><name pos:start="95:52" pos:end="95:61">packet_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:29"><expr pos:start="97:17" pos:end="97:28"><name pos:start="97:17" pos:end="97:24"><name pos:start="97:17" pos:end="97:17">s</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:24">index</name></name> <operator pos:start="97:26" pos:end="97:26">=</operator> <literal type="number" pos:start="97:28" pos:end="97:28">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:29"><expr pos:start="99:17" pos:end="99:28"><name pos:start="99:17" pos:end="99:24"><name pos:start="99:17" pos:end="99:17">s</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:24">state</name></name> <operator pos:start="99:26" pos:end="99:26">=</operator> <literal type="number" pos:start="99:28" pos:end="99:28">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
