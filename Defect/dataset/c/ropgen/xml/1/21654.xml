<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21654.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">openpic_set_irq</name><parameter_list pos:start="1:28" pos:end="1:63">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:51"><decl pos:start="1:43" pos:end="1:51"><type pos:start="1:43" pos:end="1:51"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:51">n_IRQ</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:62"><decl pos:start="1:54" pos:end="1:62"><type pos:start="1:54" pos:end="1:62"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:62">level</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:35">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">OpenPICState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">opp</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">IRQSource</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">src</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:7">src</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <operator pos:start="11:11" pos:end="11:11">&amp;</operator><name pos:start="11:12" pos:end="11:26"><name pos:start="11:12" pos:end="11:14">opp</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:19">src</name><index pos:start="11:20" pos:end="11:26">[<expr pos:start="11:21" pos:end="11:25"><name pos:start="11:21" pos:end="11:25">n_IRQ</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="15:37"><expr pos:start="13:5" pos:end="15:36"><call pos:start="13:5" pos:end="15:36"><name pos:start="13:5" pos:end="13:11">DPRINTF</name><argument_list pos:start="13:12" pos:end="15:36">(<argument pos:start="13:13" pos:end="13:50"><expr pos:start="13:13" pos:end="13:50"><literal type="string" pos:start="13:13" pos:end="13:50">"openpic: set irq %d = %d ipvp=%08x\n"</literal></expr></argument>,

            <argument pos:start="15:13" pos:end="15:17"><expr pos:start="15:13" pos:end="15:17"><name pos:start="15:13" pos:end="15:17">n_IRQ</name></expr></argument>, <argument pos:start="15:20" pos:end="15:24"><expr pos:start="15:20" pos:end="15:24"><name pos:start="15:20" pos:end="15:24">level</name></expr></argument>, <argument pos:start="15:27" pos:end="15:35"><expr pos:start="15:27" pos:end="15:35"><name pos:start="15:27" pos:end="15:35"><name pos:start="15:27" pos:end="15:29">src</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:35">ipvp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="39:5"><if pos:start="17:5" pos:end="29:5">if <condition pos:start="17:8" pos:end="17:36">(<expr pos:start="17:9" pos:end="17:35"><name pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:11">src</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:17">ipvp</name></name> <operator pos:start="17:19" pos:end="17:19">&amp;</operator> <name pos:start="17:21" pos:end="17:35">IPVP_SENSE_MASK</name></expr>)</condition> <block pos:start="17:38" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:9">

        <comment type="block" pos:start="19:9" pos:end="19:33">/* level-sensitive irq */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:29"><expr pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:11">src</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:20">pending</name></name> <operator pos:start="21:22" pos:end="21:22">=</operator> <name pos:start="21:24" pos:end="21:28">level</name></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:19">(<expr pos:start="23:13" pos:end="23:18"><operator pos:start="23:13" pos:end="23:13">!</operator><name pos:start="23:14" pos:end="23:18">level</name></expr>)</condition> <block pos:start="23:21" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:45">

            <expr_stmt pos:start="25:13" pos:end="25:45"><expr pos:start="25:13" pos:end="25:44"><name pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:15">src</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:21">ipvp</name></name> <operator pos:start="25:23" pos:end="25:24">&amp;=</operator> <operator pos:start="25:26" pos:end="25:26">~</operator><name pos:start="25:27" pos:end="25:44">IPVP_ACTIVITY_MASK</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="39:5">else <block pos:start="29:12" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:9">

        <comment type="block" pos:start="31:9" pos:end="31:32">/* edge-sensitive irq */</comment>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:18">(<expr pos:start="33:13" pos:end="33:17"><name pos:start="33:13" pos:end="33:17">level</name></expr>)</condition> <block pos:start="33:20" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:29">

            <expr_stmt pos:start="35:13" pos:end="35:29"><expr pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:15">src</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:24">pending</name></name> <operator pos:start="35:26" pos:end="35:26">=</operator> <literal type="number" pos:start="35:28" pos:end="35:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:35"><expr pos:start="41:5" pos:end="41:34"><call pos:start="41:5" pos:end="41:34"><name pos:start="41:5" pos:end="41:22">openpic_update_irq</name><argument_list pos:start="41:23" pos:end="41:34">(<argument pos:start="41:24" pos:end="41:26"><expr pos:start="41:24" pos:end="41:26"><name pos:start="41:24" pos:end="41:26">opp</name></expr></argument>, <argument pos:start="41:29" pos:end="41:33"><expr pos:start="41:29" pos:end="41:33"><name pos:start="41:29" pos:end="41:33">n_IRQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
