<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6544.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:31">copy_backptr</name><parameter_list pos:start="1:32" pos:end="1:65">(<parameter pos:start="1:33" pos:end="1:45"><decl pos:start="1:33" pos:end="1:45"><type pos:start="1:33" pos:end="1:45"><name pos:start="1:33" pos:end="1:42">LZOContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">c</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:55"><decl pos:start="1:48" pos:end="1:55"><type pos:start="1:48" pos:end="1:55"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:55">back</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:64"><decl pos:start="1:58" pos:end="1:64"><type pos:start="1:58" pos:end="1:64"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:64">cnt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:23">

    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:48"><type pos:start="5:5" pos:end="5:28"><specifier pos:start="5:5" pos:end="5:12">register</specifier> <specifier pos:start="5:14" pos:end="5:18">const</specifier> <name pos:start="5:20" pos:end="5:26">uint8_t</name> <modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:31">src</name> <init pos:start="5:33" pos:end="5:48">= <expr pos:start="5:35" pos:end="5:48"><operator pos:start="5:35" pos:end="5:35">&amp;</operator><name pos:start="5:36" pos:end="5:48"><name pos:start="5:36" pos:end="5:36">c</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:41">out</name><index pos:start="5:42" pos:end="5:48">[<expr pos:start="5:43" pos:end="5:47"><operator pos:start="5:43" pos:end="5:43">-</operator><name pos:start="5:44" pos:end="5:47">back</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:22"><specifier pos:start="7:5" pos:end="7:12">register</specifier> <name pos:start="7:14" pos:end="7:20">uint8_t</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:25">dst</name>       <init pos:start="7:33" pos:end="7:40">= <expr pos:start="7:35" pos:end="7:40"><name pos:start="7:35" pos:end="7:40"><name pos:start="7:35" pos:end="7:35">c</name><operator pos:start="7:36" pos:end="7:37">-&gt;</operator><name pos:start="7:38" pos:end="7:40">out</name></name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:40">(<expr pos:start="9:9" pos:end="9:39"><name pos:start="9:9" pos:end="9:35"><name pos:start="9:9" pos:end="9:11">src</name> <argument_list type="generic" pos:start="9:13" pos:end="9:35">&lt; <argument pos:start="9:15" pos:end="9:33"><expr pos:start="9:15" pos:end="9:33"><name pos:start="9:15" pos:end="9:26"><name pos:start="9:15" pos:end="9:15">c</name><operator pos:start="9:16" pos:end="9:17">-&gt;</operator><name pos:start="9:18" pos:end="9:26">out_start</name></name> <operator pos:start="9:28" pos:end="9:29">||</operator> <name pos:start="9:31" pos:end="9:33">src</name></expr></argument> &gt;</argument_list></name> <name pos:start="9:37" pos:end="9:39">dst</name></expr>)</condition> <block pos:start="9:42" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:15">

        <expr_stmt pos:start="11:9" pos:end="11:43"><expr pos:start="11:9" pos:end="11:42"><name pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:9">c</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:16">error</name></name> <operator pos:start="11:18" pos:end="11:19">|=</operator> <name pos:start="11:21" pos:end="11:42">AV_LZO_INVALID_BACKPTR</name></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:31">(<expr pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:11">cnt</name> <operator pos:start="17:13" pos:end="17:13">&gt;</operator> <name pos:start="17:15" pos:end="17:24"><name pos:start="17:15" pos:end="17:15">c</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:24">out_end</name></name> <operator pos:start="17:26" pos:end="17:26">-</operator> <name pos:start="17:28" pos:end="17:30">dst</name></expr>)</condition> <block pos:start="17:33" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:39">

        <expr_stmt pos:start="19:9" pos:end="19:47"><expr pos:start="19:9" pos:end="19:46"><name pos:start="19:9" pos:end="19:11">cnt</name>       <operator pos:start="19:19" pos:end="19:19">=</operator> <call pos:start="19:21" pos:end="19:46"><name pos:start="19:21" pos:end="19:25">FFMAX</name><argument_list pos:start="19:26" pos:end="19:46">(<argument pos:start="19:27" pos:end="19:42"><expr pos:start="19:27" pos:end="19:42"><name pos:start="19:27" pos:end="19:36"><name pos:start="19:27" pos:end="19:27">c</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:36">out_end</name></name> <operator pos:start="19:38" pos:end="19:38">-</operator> <name pos:start="19:40" pos:end="19:42">dst</name></expr></argument>, <argument pos:start="19:45" pos:end="19:45"><expr pos:start="19:45" pos:end="19:45"><literal type="number" pos:start="19:45" pos:end="19:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:39"><expr pos:start="21:9" pos:end="21:38"><name pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:9">c</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:16">error</name></name> <operator pos:start="21:18" pos:end="21:19">|=</operator> <name pos:start="21:21" pos:end="21:38">AV_LZO_OUTPUT_FULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:38"><expr pos:start="25:5" pos:end="25:37"><call pos:start="25:5" pos:end="25:37"><name pos:start="25:5" pos:end="25:21">av_memcpy_backptr</name><argument_list pos:start="25:22" pos:end="25:37">(<argument pos:start="25:23" pos:end="25:25"><expr pos:start="25:23" pos:end="25:25"><name pos:start="25:23" pos:end="25:25">dst</name></expr></argument>, <argument pos:start="25:28" pos:end="25:31"><expr pos:start="25:28" pos:end="25:31"><name pos:start="25:28" pos:end="25:31">back</name></expr></argument>, <argument pos:start="25:34" pos:end="25:36"><expr pos:start="25:34" pos:end="25:36"><name pos:start="25:34" pos:end="25:36">cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:23"><expr pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:5">c</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:10">out</name></name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:16">dst</name> <operator pos:start="27:18" pos:end="27:18">+</operator> <name pos:start="27:20" pos:end="27:22">cnt</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
