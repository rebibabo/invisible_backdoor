<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4875.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">intel_hda_update_int_sts</name><parameter_list pos:start="1:37" pos:end="1:54">(<parameter pos:start="1:38" pos:end="1:53"><decl pos:start="1:38" pos:end="1:53"><type pos:start="1:38" pos:end="1:52"><name pos:start="1:38" pos:end="1:50">IntelHDAState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:21">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:16">sts</name> <init pos:start="5:18" pos:end="5:20">= <expr pos:start="5:20" pos:end="5:20"><literal type="number" pos:start="5:20" pos:end="5:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:14">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:34">/* update controller status */</comment>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:37">(<expr pos:start="13:9" pos:end="13:36"><name pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:9">d</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:19">rirb_sts</name></name> <operator pos:start="13:21" pos:end="13:21">&amp;</operator> <name pos:start="13:23" pos:end="13:36">ICH6_RBSTS_IRQ</name></expr>)</condition> <block pos:start="13:39" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:25">

        <expr_stmt pos:start="15:9" pos:end="15:25"><expr pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:11">sts</name> <operator pos:start="15:13" pos:end="15:14">|=</operator> <operator pos:start="15:16" pos:end="15:16">(</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal> <operator pos:start="15:19" pos:end="15:20">&lt;&lt;</operator> <literal type="number" pos:start="15:22" pos:end="15:23">30</literal><operator pos:start="15:24" pos:end="15:24">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:41">(<expr pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:9">d</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:19">rirb_sts</name></name> <operator pos:start="19:21" pos:end="19:21">&amp;</operator> <name pos:start="19:23" pos:end="19:40">ICH6_RBSTS_OVERRUN</name></expr>)</condition> <block pos:start="19:43" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:25">

        <expr_stmt pos:start="21:9" pos:end="21:25"><expr pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:11">sts</name> <operator pos:start="21:13" pos:end="21:14">|=</operator> <operator pos:start="21:16" pos:end="21:16">(</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal> <operator pos:start="21:19" pos:end="21:20">&lt;&lt;</operator> <literal type="number" pos:start="21:22" pos:end="21:23">30</literal><operator pos:start="21:24" pos:end="21:24">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:34">(<expr pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:9">d</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:20">state_sts</name></name> <operator pos:start="25:22" pos:end="25:22">&amp;</operator> <name pos:start="25:24" pos:end="25:33"><name pos:start="25:24" pos:end="25:24">d</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:33">wake_en</name></name></expr>)</condition> <block pos:start="25:36" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:25">

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:11">sts</name> <operator pos:start="27:13" pos:end="27:14">|=</operator> <operator pos:start="27:16" pos:end="27:16">(</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal> <operator pos:start="27:19" pos:end="27:20">&lt;&lt;</operator> <literal type="number" pos:start="27:22" pos:end="27:23">30</literal><operator pos:start="27:24" pos:end="27:24">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:30">/* update stream status */</comment>

    <for pos:start="35:5" pos:end="45:5">for <control pos:start="35:9" pos:end="35:27">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:22"><expr pos:start="35:17" pos:end="35:21"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <literal type="number" pos:start="35:21" pos:end="35:21">8</literal></expr>;</condition> <incr pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:24">i</name><operator pos:start="35:25" pos:end="35:26">++</operator></expr></incr>)</control> <block pos:start="35:29" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:9">

        <comment type="block" pos:start="37:9" pos:end="37:41">/* buffer completion interrupt */</comment>

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:37">(<expr pos:start="39:13" pos:end="39:36"><name pos:start="39:13" pos:end="39:20"><name pos:start="39:13" pos:end="39:13">d</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:17">st</name><index pos:start="39:18" pos:end="39:20">[<expr pos:start="39:19" pos:end="39:19"><name pos:start="39:19" pos:end="39:19">i</name></expr>]</index></name><operator pos:start="39:21" pos:end="39:21">.</operator><name pos:start="39:22" pos:end="39:24">ctl</name> <operator pos:start="39:26" pos:end="39:26">&amp;</operator> <operator pos:start="39:28" pos:end="39:28">(</operator><literal type="number" pos:start="39:29" pos:end="39:29">1</literal> <operator pos:start="39:31" pos:end="39:32">&lt;&lt;</operator> <literal type="number" pos:start="39:34" pos:end="39:35">26</literal><operator pos:start="39:36" pos:end="39:36">)</operator></expr>)</condition> <block pos:start="39:39" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:28">

            <expr_stmt pos:start="41:13" pos:end="41:28"><expr pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:15">sts</name> <operator pos:start="41:17" pos:end="41:18">|=</operator> <operator pos:start="41:20" pos:end="41:20">(</operator><literal type="number" pos:start="41:21" pos:end="41:21">1</literal> <operator pos:start="41:23" pos:end="41:24">&lt;&lt;</operator> <name pos:start="41:26" pos:end="41:26">i</name><operator pos:start="41:27" pos:end="41:27">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="49:5" pos:end="49:30">/* update global status */</comment>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:25">(<expr pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:11">sts</name> <operator pos:start="51:13" pos:end="51:13">&amp;</operator> <name pos:start="51:15" pos:end="51:24"><name pos:start="51:15" pos:end="51:15">d</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:24">int_ctl</name></name></expr>)</condition> <block pos:start="51:27" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:25">

        <expr_stmt pos:start="53:9" pos:end="53:25"><expr pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:11">sts</name> <operator pos:start="53:13" pos:end="53:14">|=</operator> <operator pos:start="53:16" pos:end="53:16">(</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal> <operator pos:start="53:19" pos:end="53:20">&lt;&lt;</operator> <literal type="number" pos:start="53:22" pos:end="53:23">31</literal><operator pos:start="53:24" pos:end="53:24">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:21"><expr pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:14"><name pos:start="59:5" pos:end="59:5">d</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:14">int_sts</name></name> <operator pos:start="59:16" pos:end="59:16">=</operator> <name pos:start="59:18" pos:end="59:20">sts</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
