<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17857.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:32"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name><modifier pos:start="1:12" pos:end="1:12">*</modifier> <name pos:start="1:14" pos:end="1:32">attribute_align_arg</name></type> <name pos:start="1:34" pos:end="1:39">worker</name><parameter_list pos:start="1:40" pos:end="1:48">(<parameter pos:start="1:41" pos:end="1:47"><decl pos:start="1:41" pos:end="1:47"><type pos:start="1:41" pos:end="1:46"><name pos:start="1:41" pos:end="1:44">void</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:5">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ThreadContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">c</name> <init pos:start="5:22" pos:end="5:24">= <expr pos:start="5:24" pos:end="5:24"><name pos:start="5:24" pos:end="5:24">v</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">our_job</name>      <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:24">c</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:33">nb_jobs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">nb_threads</name>   <init pos:start="9:22" pos:end="9:36">= <expr pos:start="9:24" pos:end="9:36"><name pos:start="9:24" pos:end="9:36"><name pos:start="9:24" pos:end="9:24">c</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:36">nb_threads</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:29">last_execute</name> <init pos:start="11:31" pos:end="11:33">= <expr pos:start="11:33" pos:end="11:33"><literal type="number" pos:start="11:33" pos:end="11:33">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">self_id</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><call pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:22">pthread_mutex_lock</name><argument_list pos:start="17:23" pos:end="17:44">(<argument pos:start="17:24" pos:end="17:43"><expr pos:start="17:24" pos:end="17:43"><operator pos:start="17:24" pos:end="17:24">&amp;</operator><name pos:start="17:25" pos:end="17:43"><name pos:start="17:25" pos:end="17:25">c</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:43">current_job_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:31"><expr pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:11">self_id</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <name pos:start="19:15" pos:end="19:28"><name pos:start="19:15" pos:end="19:15">c</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:28">current_job</name></name><operator pos:start="19:29" pos:end="19:30">++</operator></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="63:5">for <control pos:start="21:9" pos:end="21:12">(<init pos:start="21:10" pos:end="21:10">;</init><condition pos:start="21:11" pos:end="21:11">;</condition><incr/>)</control> <block pos:start="21:14" pos:end="63:5">{<block_content pos:start="23:9" pos:end="61:35">

        <while pos:start="23:9" pos:end="49:9">while <condition pos:start="23:15" pos:end="23:37">(<expr pos:start="23:16" pos:end="23:36"><name pos:start="23:16" pos:end="23:22">our_job</name> <operator pos:start="23:24" pos:end="23:25">&gt;=</operator> <name pos:start="23:27" pos:end="23:36"><name pos:start="23:27" pos:end="23:27">c</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:36">nb_jobs</name></name></expr>)</condition> <block pos:start="23:39" pos:end="49:9">{<block_content pos:start="25:13" pos:end="47:13">

            <if_stmt pos:start="25:13" pos:end="27:55"><if pos:start="25:13" pos:end="27:55">if <condition pos:start="25:16" pos:end="25:58">(<expr pos:start="25:17" pos:end="25:57"><name pos:start="25:17" pos:end="25:30"><name pos:start="25:17" pos:end="25:17">c</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:30">current_job</name></name> <operator pos:start="25:32" pos:end="25:33">==</operator> <name pos:start="25:35" pos:end="25:44">nb_threads</name> <operator pos:start="25:46" pos:end="25:46">+</operator> <name pos:start="25:48" pos:end="25:57"><name pos:start="25:48" pos:end="25:48">c</name><operator pos:start="25:49" pos:end="25:50">-&gt;</operator><name pos:start="25:51" pos:end="25:57">nb_jobs</name></name></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:55"><block_content pos:start="27:17" pos:end="27:55">

                <expr_stmt pos:start="27:17" pos:end="27:55"><expr pos:start="27:17" pos:end="27:54"><call pos:start="27:17" pos:end="27:54"><name pos:start="27:17" pos:end="27:35">pthread_cond_signal</name><argument_list pos:start="27:36" pos:end="27:54">(<argument pos:start="27:37" pos:end="27:53"><expr pos:start="27:37" pos:end="27:53"><operator pos:start="27:37" pos:end="27:37">&amp;</operator><name pos:start="27:38" pos:end="27:53"><name pos:start="27:38" pos:end="27:38">c</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:53">last_job_cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <while pos:start="31:13" pos:end="33:78">while <condition pos:start="31:19" pos:end="31:66">(<expr pos:start="31:20" pos:end="31:65"><name pos:start="31:20" pos:end="31:31">last_execute</name> <operator pos:start="31:33" pos:end="31:34">==</operator> <name pos:start="31:36" pos:end="31:53"><name pos:start="31:36" pos:end="31:36">c</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:53">current_execute</name></name> <operator pos:start="31:55" pos:end="31:56">&amp;&amp;</operator> <operator pos:start="31:58" pos:end="31:58">!</operator><name pos:start="31:59" pos:end="31:65"><name pos:start="31:59" pos:end="31:59">c</name><operator pos:start="31:60" pos:end="31:61">-&gt;</operator><name pos:start="31:62" pos:end="31:65">done</name></name></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:78"><block_content pos:start="33:17" pos:end="33:78">

                <expr_stmt pos:start="33:17" pos:end="33:78"><expr pos:start="33:17" pos:end="33:77"><call pos:start="33:17" pos:end="33:77"><name pos:start="33:17" pos:end="33:33">pthread_cond_wait</name><argument_list pos:start="33:34" pos:end="33:77">(<argument pos:start="33:35" pos:end="33:54"><expr pos:start="33:35" pos:end="33:54"><operator pos:start="33:35" pos:end="33:35">&amp;</operator><name pos:start="33:36" pos:end="33:54"><name pos:start="33:36" pos:end="33:36">c</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:54">current_job_cond</name></name></expr></argument>, <argument pos:start="33:57" pos:end="33:76"><expr pos:start="33:57" pos:end="33:76"><operator pos:start="33:57" pos:end="33:57">&amp;</operator><name pos:start="33:58" pos:end="33:76"><name pos:start="33:58" pos:end="33:58">c</name><operator pos:start="33:59" pos:end="33:60">-&gt;</operator><name pos:start="33:61" pos:end="33:76">current_job_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

            <expr_stmt pos:start="35:13" pos:end="35:46"><expr pos:start="35:13" pos:end="35:45"><name pos:start="35:13" pos:end="35:24">last_execute</name> <operator pos:start="35:26" pos:end="35:26">=</operator> <name pos:start="35:28" pos:end="35:45"><name pos:start="35:28" pos:end="35:28">c</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:45">current_execute</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:30"><expr pos:start="37:13" pos:end="37:29"><name pos:start="37:13" pos:end="37:19">our_job</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:29">self_id</name></expr>;</expr_stmt>



            <if_stmt pos:start="41:13" pos:end="47:13"><if pos:start="41:13" pos:end="47:13">if <condition pos:start="41:16" pos:end="41:24">(<expr pos:start="41:17" pos:end="41:23"><name pos:start="41:17" pos:end="41:23"><name pos:start="41:17" pos:end="41:17">c</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:23">done</name></name></expr>)</condition> <block pos:start="41:26" pos:end="47:13">{<block_content pos:start="43:17" pos:end="45:28">

                <expr_stmt pos:start="43:17" pos:end="43:59"><expr pos:start="43:17" pos:end="43:58"><call pos:start="43:17" pos:end="43:58"><name pos:start="43:17" pos:end="43:36">pthread_mutex_unlock</name><argument_list pos:start="43:37" pos:end="43:58">(<argument pos:start="43:38" pos:end="43:57"><expr pos:start="43:38" pos:end="43:57"><operator pos:start="43:38" pos:end="43:38">&amp;</operator><name pos:start="43:39" pos:end="43:57"><name pos:start="43:39" pos:end="43:39">c</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:57">current_job_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="45:17" pos:end="45:28">return <expr pos:start="45:24" pos:end="45:27"><name pos:start="45:24" pos:end="45:27">NULL</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="51:9" pos:end="51:51"><expr pos:start="51:9" pos:end="51:50"><call pos:start="51:9" pos:end="51:50"><name pos:start="51:9" pos:end="51:28">pthread_mutex_unlock</name><argument_list pos:start="51:29" pos:end="51:50">(<argument pos:start="51:30" pos:end="51:49"><expr pos:start="51:30" pos:end="51:49"><operator pos:start="51:30" pos:end="51:30">&amp;</operator><name pos:start="51:31" pos:end="51:49"><name pos:start="51:31" pos:end="51:31">c</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:49">current_job_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:85"><expr pos:start="55:9" pos:end="55:84"><name pos:start="55:9" pos:end="55:37"><name pos:start="55:9" pos:end="55:9">c</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:15">rets</name><index pos:start="55:16" pos:end="55:37">[<expr pos:start="55:17" pos:end="55:36"><name pos:start="55:17" pos:end="55:23">our_job</name> <operator pos:start="55:25" pos:end="55:25">%</operator> <name pos:start="55:27" pos:end="55:36"><name pos:start="55:27" pos:end="55:27">c</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:36">nb_rets</name></name></expr>]</index></name> <operator pos:start="55:39" pos:end="55:39">=</operator> <call pos:start="55:41" pos:end="55:84"><name pos:start="55:41" pos:end="55:47"><name pos:start="55:41" pos:end="55:41">c</name><operator pos:start="55:42" pos:end="55:43">-&gt;</operator><name pos:start="55:44" pos:end="55:47">func</name></name><argument_list pos:start="55:48" pos:end="55:84">(<argument pos:start="55:49" pos:end="55:54"><expr pos:start="55:49" pos:end="55:54"><name pos:start="55:49" pos:end="55:54"><name pos:start="55:49" pos:end="55:49">c</name><operator pos:start="55:50" pos:end="55:51">-&gt;</operator><name pos:start="55:52" pos:end="55:54">ctx</name></name></expr></argument>, <argument pos:start="55:57" pos:end="55:62"><expr pos:start="55:57" pos:end="55:62"><name pos:start="55:57" pos:end="55:62"><name pos:start="55:57" pos:end="55:57">c</name><operator pos:start="55:58" pos:end="55:59">-&gt;</operator><name pos:start="55:60" pos:end="55:62">arg</name></name></expr></argument>, <argument pos:start="55:65" pos:end="55:71"><expr pos:start="55:65" pos:end="55:71"><name pos:start="55:65" pos:end="55:71">our_job</name></expr></argument>, <argument pos:start="55:74" pos:end="55:83"><expr pos:start="55:74" pos:end="55:83"><name pos:start="55:74" pos:end="55:83"><name pos:start="55:74" pos:end="55:74">c</name><operator pos:start="55:75" pos:end="55:76">-&gt;</operator><name pos:start="55:77" pos:end="55:83">nb_jobs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:49"><expr pos:start="59:9" pos:end="59:48"><call pos:start="59:9" pos:end="59:48"><name pos:start="59:9" pos:end="59:26">pthread_mutex_lock</name><argument_list pos:start="59:27" pos:end="59:48">(<argument pos:start="59:28" pos:end="59:47"><expr pos:start="59:28" pos:end="59:47"><operator pos:start="59:28" pos:end="59:28">&amp;</operator><name pos:start="59:29" pos:end="59:47"><name pos:start="59:29" pos:end="59:29">c</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:47">current_job_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:35"><expr pos:start="61:9" pos:end="61:34"><name pos:start="61:9" pos:end="61:15">our_job</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <name pos:start="61:19" pos:end="61:32"><name pos:start="61:19" pos:end="61:19">c</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:32">current_job</name></name><operator pos:start="61:33" pos:end="61:34">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
