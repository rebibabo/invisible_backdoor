<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16448.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">mpeg1_encode_init</name><parameter_list pos:start="1:23" pos:end="1:41">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:39"><name pos:start="1:24" pos:end="1:37">MpegEncContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:28">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:14"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:14">int</name></type> <name pos:start="5:16" pos:end="5:19">done</name><init pos:start="5:20" pos:end="5:21">=<expr pos:start="5:21" pos:end="5:21"><literal type="number" pos:start="5:21" pos:end="5:21">0</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="83:5"><if pos:start="7:5" pos:end="83:5">if<condition pos:start="7:7" pos:end="7:13">(<expr pos:start="7:8" pos:end="7:12"><operator pos:start="7:8" pos:end="7:8">!</operator><name pos:start="7:9" pos:end="7:12">done</name></expr>)</condition><block pos:start="7:14" pos:end="83:5">{<block_content pos:start="9:9" pos:end="81:9">

        <decl_stmt pos:start="9:9" pos:end="9:19"><decl pos:start="9:9" pos:end="9:18"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:18">f_code</name></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:15"><decl pos:start="11:9" pos:end="11:14"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:14">mv</name></decl>;</decl_stmt>



        <expr_stmt pos:start="15:9" pos:end="15:15"><expr pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:12">done</name><operator pos:start="15:13" pos:end="15:13">=</operator><literal type="number" pos:start="15:14" pos:end="15:14">1</literal></expr>;</expr_stmt>

        <for pos:start="17:9" pos:end="67:9">for<control pos:start="17:12" pos:end="17:50">(<init pos:start="17:13" pos:end="17:21"><expr pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:18">f_code</name><operator pos:start="17:19" pos:end="17:19">=</operator><literal type="number" pos:start="17:20" pos:end="17:20">1</literal></expr>;</init> <condition pos:start="17:23" pos:end="17:40"><expr pos:start="17:23" pos:end="17:39"><name pos:start="17:23" pos:end="17:28">f_code</name><operator pos:start="17:29" pos:end="17:30">&lt;=</operator><name pos:start="17:31" pos:end="17:39">MAX_FCODE</name></expr>;</condition> <incr pos:start="17:42" pos:end="17:49"><expr pos:start="17:42" pos:end="17:49"><name pos:start="17:42" pos:end="17:47">f_code</name><operator pos:start="17:48" pos:end="17:49">++</operator></expr></incr>)</control><block pos:start="17:51" pos:end="67:9">{<block_content pos:start="19:13" pos:end="65:13">

            <for pos:start="19:13" pos:end="65:13">for<control pos:start="19:16" pos:end="19:45">(<init pos:start="19:17" pos:end="19:27"><expr pos:start="19:17" pos:end="19:26"><name pos:start="19:17" pos:end="19:18">mv</name><operator pos:start="19:19" pos:end="19:19">=</operator><operator pos:start="19:20" pos:end="19:20">-</operator><name pos:start="19:21" pos:end="19:26">MAX_MV</name></expr>;</init> <condition pos:start="19:29" pos:end="19:39"><expr pos:start="19:29" pos:end="19:38"><name pos:start="19:29" pos:end="19:30">mv</name><operator pos:start="19:31" pos:end="19:32">&lt;=</operator><name pos:start="19:33" pos:end="19:38">MAX_MV</name></expr>;</condition> <incr pos:start="19:41" pos:end="19:44"><expr pos:start="19:41" pos:end="19:44"><name pos:start="19:41" pos:end="19:42">mv</name><operator pos:start="19:43" pos:end="19:44">++</operator></expr></incr>)</control><block pos:start="19:46" pos:end="65:13">{<block_content pos:start="21:17" pos:end="63:51">

                <decl_stmt pos:start="21:17" pos:end="21:24"><decl pos:start="21:17" pos:end="21:23"><type pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:19">int</name></type> <name pos:start="21:21" pos:end="21:23">len</name></decl>;</decl_stmt>



                <if_stmt pos:start="25:17" pos:end="59:17"><if pos:start="25:17" pos:end="25:57">if<condition pos:start="25:19" pos:end="25:25">(<expr pos:start="25:20" pos:end="25:24"><name pos:start="25:20" pos:end="25:21">mv</name><operator pos:start="25:22" pos:end="25:23">==</operator><literal type="number" pos:start="25:24" pos:end="25:24">0</literal></expr>)</condition><block type="pseudo" pos:start="25:27" pos:end="25:57"><block_content pos:start="25:27" pos:end="25:57"> <expr_stmt pos:start="25:27" pos:end="25:57"><expr pos:start="25:27" pos:end="25:56"><name pos:start="25:27" pos:end="25:29">len</name><operator pos:start="25:30" pos:end="25:30">=</operator> <name pos:start="25:32" pos:end="25:56"><name pos:start="25:32" pos:end="25:50">mbMotionVectorTable</name><index pos:start="25:51" pos:end="25:53">[<expr pos:start="25:52" pos:end="25:52"><literal type="number" pos:start="25:52" pos:end="25:52">0</literal></expr>]</index><index pos:start="25:54" pos:end="25:56">[<expr pos:start="25:55" pos:end="25:55"><literal type="number" pos:start="25:55" pos:end="25:55">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="27:17" pos:end="59:17">else<block pos:start="27:21" pos:end="59:17">{<block_content pos:start="29:21" pos:end="57:21">

                    <decl_stmt pos:start="29:21" pos:end="29:51"><decl pos:start="29:21" pos:end="29:27"><type pos:start="29:21" pos:end="29:23"><name pos:start="29:21" pos:end="29:23">int</name></type> <name pos:start="29:25" pos:end="29:27">val</name></decl>, <decl pos:start="29:30" pos:end="29:37"><type ref="prev" pos:start="29:21" pos:end="29:23"/><name pos:start="29:30" pos:end="29:37">bit_size</name></decl>, <decl pos:start="29:40" pos:end="29:44"><type ref="prev" pos:start="29:21" pos:end="29:23"/><name pos:start="29:40" pos:end="29:44">range</name></decl>, <decl pos:start="29:47" pos:end="29:50"><type ref="prev" pos:start="29:21" pos:end="29:23"/><name pos:start="29:47" pos:end="29:50">code</name></decl>;</decl_stmt>



                    <expr_stmt pos:start="33:21" pos:end="33:45"><expr pos:start="33:21" pos:end="33:44"><name pos:start="33:21" pos:end="33:28">bit_size</name> <operator pos:start="33:30" pos:end="33:30">=</operator> <name pos:start="33:32" pos:end="33:40"><name pos:start="33:32" pos:end="33:32">s</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:40">f_code</name></name> <operator pos:start="33:42" pos:end="33:42">-</operator> <literal type="number" pos:start="33:44" pos:end="33:44">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="35:21" pos:end="35:42"><expr pos:start="35:21" pos:end="35:41"><name pos:start="35:21" pos:end="35:25">range</name> <operator pos:start="35:27" pos:end="35:27">=</operator> <literal type="number" pos:start="35:29" pos:end="35:29">1</literal> <operator pos:start="35:31" pos:end="35:32">&lt;&lt;</operator> <name pos:start="35:34" pos:end="35:41">bit_size</name></expr>;</expr_stmt>



                    <expr_stmt pos:start="39:21" pos:end="39:27"><expr pos:start="39:21" pos:end="39:26"><name pos:start="39:21" pos:end="39:23">val</name><operator pos:start="39:24" pos:end="39:24">=</operator><name pos:start="39:25" pos:end="39:26">mv</name></expr>;</expr_stmt>

                    <if_stmt pos:start="41:21" pos:end="43:35"><if pos:start="41:21" pos:end="43:35">if <condition pos:start="41:24" pos:end="41:32">(<expr pos:start="41:25" pos:end="41:31"><name pos:start="41:25" pos:end="41:27">val</name> <operator pos:start="41:29" pos:end="41:29">&lt;</operator> <literal type="number" pos:start="41:31" pos:end="41:31">0</literal></expr>)</condition><block type="pseudo" pos:start="43:25" pos:end="43:35"><block_content pos:start="43:25" pos:end="43:35"> 

                        <expr_stmt pos:start="43:25" pos:end="43:35"><expr pos:start="43:25" pos:end="43:34"><name pos:start="43:25" pos:end="43:27">val</name> <operator pos:start="43:29" pos:end="43:29">=</operator> <operator pos:start="43:31" pos:end="43:31">-</operator><name pos:start="43:32" pos:end="43:34">val</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="45:21" pos:end="45:26"><expr pos:start="45:21" pos:end="45:25"><name pos:start="45:21" pos:end="45:23">val</name><operator pos:start="45:24" pos:end="45:25">--</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="47:21" pos:end="47:49"><expr pos:start="47:21" pos:end="47:48"><name pos:start="47:21" pos:end="47:24">code</name> <operator pos:start="47:26" pos:end="47:26">=</operator> <operator pos:start="47:28" pos:end="47:28">(</operator><name pos:start="47:29" pos:end="47:31">val</name> <operator pos:start="47:33" pos:end="47:34">&gt;&gt;</operator> <name pos:start="47:36" pos:end="47:43">bit_size</name><operator pos:start="47:44" pos:end="47:44">)</operator> <operator pos:start="47:46" pos:end="47:46">+</operator> <literal type="number" pos:start="47:48" pos:end="47:48">1</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="49:21" pos:end="57:21"><if pos:start="49:21" pos:end="53:21">if<condition pos:start="49:23" pos:end="49:31">(<expr pos:start="49:24" pos:end="49:30"><name pos:start="49:24" pos:end="49:27">code</name><operator pos:start="49:28" pos:end="49:28">&lt;</operator><literal type="number" pos:start="49:29" pos:end="49:30">17</literal></expr>)</condition><block pos:start="49:32" pos:end="53:21">{<block_content pos:start="51:25" pos:end="51:73">

                        <expr_stmt pos:start="51:25" pos:end="51:73"><expr pos:start="51:25" pos:end="51:72"><name pos:start="51:25" pos:end="51:27">len</name><operator pos:start="51:28" pos:end="51:28">=</operator> <name pos:start="51:30" pos:end="51:57"><name pos:start="51:30" pos:end="51:48">mbMotionVectorTable</name><index pos:start="51:49" pos:end="51:54">[<expr pos:start="51:50" pos:end="51:53"><name pos:start="51:50" pos:end="51:53">code</name></expr>]</index><index pos:start="51:55" pos:end="51:57">[<expr pos:start="51:56" pos:end="51:56"><literal type="number" pos:start="51:56" pos:end="51:56">1</literal></expr>]</index></name> <operator pos:start="51:59" pos:end="51:59">+</operator> <literal type="number" pos:start="51:61" pos:end="51:63">1</literal> <operator pos:start="51:63" pos:end="51:63">+</operator> <name pos:start="51:65" pos:end="51:72">bit_size</name></expr>;</expr_stmt>

                    </block_content>}</block></if><else pos:start="53:22" pos:end="57:21">else<block pos:start="53:26" pos:end="57:21">{<block_content pos:start="55:25" pos:end="55:71">

                        <expr_stmt pos:start="55:25" pos:end="55:71"><expr pos:start="55:25" pos:end="55:70"><name pos:start="55:25" pos:end="55:27">len</name><operator pos:start="55:28" pos:end="55:28">=</operator> <name pos:start="55:30" pos:end="55:55"><name pos:start="55:30" pos:end="55:48">mbMotionVectorTable</name><index pos:start="55:49" pos:end="55:52">[<expr pos:start="55:50" pos:end="55:51"><literal type="number" pos:start="55:50" pos:end="55:51">16</literal></expr>]</index><index pos:start="55:53" pos:end="55:55">[<expr pos:start="55:54" pos:end="55:54"><literal type="number" pos:start="55:54" pos:end="55:54">1</literal></expr>]</index></name> <operator pos:start="55:57" pos:end="55:57">+</operator> <literal type="number" pos:start="55:59" pos:end="55:61">2</literal> <operator pos:start="55:61" pos:end="55:61">+</operator> <name pos:start="55:63" pos:end="55:70">bit_size</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>



                <expr_stmt pos:start="63:17" pos:end="63:51"><expr pos:start="63:17" pos:end="63:50"><name pos:start="63:17" pos:end="63:45"><name pos:start="63:17" pos:end="63:26">mv_penalty</name><index pos:start="63:27" pos:end="63:34">[<expr pos:start="63:28" pos:end="63:33"><name pos:start="63:28" pos:end="63:33">f_code</name></expr>]</index><index pos:start="63:35" pos:end="63:45">[<expr pos:start="63:36" pos:end="63:44"><name pos:start="63:36" pos:end="63:37">mv</name><operator pos:start="63:38" pos:end="63:38">+</operator><name pos:start="63:39" pos:end="63:44">MAX_MV</name></expr>]</index></name><operator pos:start="63:46" pos:end="63:46">=</operator> <name pos:start="63:48" pos:end="63:50">len</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        



        <for pos:start="73:9" pos:end="81:9">for<control pos:start="73:12" pos:end="73:49">(<init pos:start="73:13" pos:end="73:29"><expr pos:start="73:13" pos:end="73:28"><name pos:start="73:13" pos:end="73:18">f_code</name><operator pos:start="73:19" pos:end="73:19">=</operator><name pos:start="73:20" pos:end="73:28">MAX_FCODE</name></expr>;</init> <condition pos:start="73:31" pos:end="73:39"><expr pos:start="73:31" pos:end="73:38"><name pos:start="73:31" pos:end="73:36">f_code</name><operator pos:start="73:37" pos:end="73:37">&gt;</operator><literal type="number" pos:start="73:38" pos:end="73:38">0</literal></expr>;</condition> <incr pos:start="73:41" pos:end="73:48"><expr pos:start="73:41" pos:end="73:48"><name pos:start="73:41" pos:end="73:46">f_code</name><operator pos:start="73:47" pos:end="73:48">--</operator></expr></incr>)</control><block pos:start="73:50" pos:end="81:9">{<block_content pos:start="75:13" pos:end="79:13">

            <for pos:start="75:13" pos:end="79:13">for<control pos:start="75:16" pos:end="75:54">(<init pos:start="75:17" pos:end="75:32"><expr pos:start="75:17" pos:end="75:31"><name pos:start="75:17" pos:end="75:18">mv</name><operator pos:start="75:19" pos:end="75:19">=</operator><operator pos:start="75:20" pos:end="75:20">-</operator><operator pos:start="75:21" pos:end="75:21">(</operator><literal type="number" pos:start="75:22" pos:end="75:22">8</literal><operator pos:start="75:23" pos:end="75:24">&lt;&lt;</operator><name pos:start="75:25" pos:end="75:30">f_code</name><operator pos:start="75:31" pos:end="75:31">)</operator></expr>;</init> <condition pos:start="75:34" pos:end="75:48"><expr pos:start="75:34" pos:end="75:47"><name pos:start="75:34" pos:end="75:35">mv</name><operator pos:start="75:36" pos:end="75:36">&lt;</operator><operator pos:start="75:37" pos:end="75:37">(</operator><literal type="number" pos:start="75:38" pos:end="75:38">8</literal><operator pos:start="75:39" pos:end="75:40">&lt;&lt;</operator><name pos:start="75:41" pos:end="75:46">f_code</name><operator pos:start="75:47" pos:end="75:47">)</operator></expr>;</condition> <incr pos:start="75:50" pos:end="75:53"><expr pos:start="75:50" pos:end="75:53"><name pos:start="75:50" pos:end="75:51">mv</name><operator pos:start="75:52" pos:end="75:53">++</operator></expr></incr>)</control><block pos:start="75:55" pos:end="79:13">{<block_content pos:start="77:17" pos:end="77:45">

                <expr_stmt pos:start="77:17" pos:end="77:45"><expr pos:start="77:17" pos:end="77:44"><name pos:start="77:17" pos:end="77:36"><name pos:start="77:17" pos:end="77:25">fcode_tab</name><index pos:start="77:26" pos:end="77:36">[<expr pos:start="77:27" pos:end="77:35"><name pos:start="77:27" pos:end="77:28">mv</name><operator pos:start="77:29" pos:end="77:29">+</operator><name pos:start="77:30" pos:end="77:35">MAX_MV</name></expr>]</index></name><operator pos:start="77:37" pos:end="77:37">=</operator> <name pos:start="77:39" pos:end="77:44">f_code</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:30"><expr pos:start="85:5" pos:end="85:29"><name pos:start="85:5" pos:end="85:17"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:17">mv_penalty</name></name><operator pos:start="85:18" pos:end="85:18">=</operator> <name pos:start="85:20" pos:end="85:29">mv_penalty</name></expr>;</expr_stmt>

    

    <expr_stmt pos:start="89:5" pos:end="89:28"><expr pos:start="89:5" pos:end="89:27"><name pos:start="89:5" pos:end="89:16"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:16">fcode_tab</name></name><operator pos:start="89:17" pos:end="89:17">=</operator> <name pos:start="89:19" pos:end="89:27">fcode_tab</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
