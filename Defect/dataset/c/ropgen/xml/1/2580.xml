<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2580.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">parse_cube</name><parameter_list pos:start="1:22" pos:end="1:52">(<parameter pos:start="1:23" pos:end="1:42"><decl pos:start="1:23" pos:end="1:42"><type pos:start="1:23" pos:end="1:42"><name pos:start="1:23" pos:end="1:37">AVFilterContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">ctx</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:51"><decl pos:start="1:45" pos:end="1:51"><type pos:start="1:45" pos:end="1:51"><name pos:start="1:45" pos:end="1:48">FILE</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">LUT3DContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:23">lut3d</name> <init pos:start="5:25" pos:end="5:35">= <expr pos:start="5:27" pos:end="5:35"><name pos:start="5:27" pos:end="5:35"><name pos:start="5:27" pos:end="5:29">ctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:35">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:28"><name pos:start="7:10" pos:end="7:13">line</name><index pos:start="7:14" pos:end="7:28">[<expr pos:start="7:15" pos:end="7:27"><name pos:start="7:15" pos:end="7:27">MAX_LINE_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">float</name></type> <name pos:start="9:11" pos:end="9:16"><name pos:start="9:11" pos:end="9:13">min</name><index pos:start="9:14" pos:end="9:16">[<expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">3</literal></expr>]</index></name> <init pos:start="9:18" pos:end="9:34">= <expr pos:start="9:20" pos:end="9:34"><block pos:start="9:20" pos:end="9:34">{<expr pos:start="9:21" pos:end="9:23"><literal type="number" pos:start="9:21" pos:end="9:23">0.0</literal></expr>, <expr pos:start="9:26" pos:end="9:28"><literal type="number" pos:start="9:26" pos:end="9:28">0.0</literal></expr>, <expr pos:start="9:31" pos:end="9:33"><literal type="number" pos:start="9:31" pos:end="9:33">0.0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">float</name></type> <name pos:start="11:11" pos:end="11:16"><name pos:start="11:11" pos:end="11:13">max</name><index pos:start="11:14" pos:end="11:16">[<expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">3</literal></expr>]</index></name> <init pos:start="11:18" pos:end="11:34">= <expr pos:start="11:20" pos:end="11:34"><block pos:start="11:20" pos:end="11:34">{<expr pos:start="11:21" pos:end="11:23"><literal type="number" pos:start="11:21" pos:end="11:23">1.0</literal></expr>, <expr pos:start="11:26" pos:end="11:28"><literal type="number" pos:start="11:26" pos:end="11:28">1.0</literal></expr>, <expr pos:start="11:31" pos:end="11:33"><literal type="number" pos:start="11:31" pos:end="11:33">1.0</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <while pos:start="15:5" pos:end="93:5">while <condition pos:start="15:11" pos:end="15:40">(<expr pos:start="15:12" pos:end="15:39"><call pos:start="15:12" pos:end="15:39"><name pos:start="15:12" pos:end="15:16">fgets</name><argument_list pos:start="15:17" pos:end="15:39">(<argument pos:start="15:18" pos:end="15:21"><expr pos:start="15:18" pos:end="15:21"><name pos:start="15:18" pos:end="15:21">line</name></expr></argument>, <argument pos:start="15:24" pos:end="15:35"><expr pos:start="15:24" pos:end="15:35"><sizeof pos:start="15:24" pos:end="15:35">sizeof<argument_list pos:start="15:30" pos:end="15:35">(<argument pos:start="15:31" pos:end="15:34"><expr pos:start="15:31" pos:end="15:34"><name pos:start="15:31" pos:end="15:34">line</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="15:38" pos:end="15:38"><expr pos:start="15:38" pos:end="15:38"><name pos:start="15:38" pos:end="15:38">f</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:42" pos:end="93:5">{<block_content pos:start="17:9" pos:end="91:9">

        <if_stmt pos:start="17:9" pos:end="91:9"><if pos:start="17:9" pos:end="91:9">if <condition pos:start="17:12" pos:end="17:47">(<expr pos:start="17:13" pos:end="17:46"><operator pos:start="17:13" pos:end="17:13">!</operator><call pos:start="17:14" pos:end="17:46"><name pos:start="17:14" pos:end="17:20">strncmp</name><argument_list pos:start="17:21" pos:end="17:46">(<argument pos:start="17:22" pos:end="17:25"><expr pos:start="17:22" pos:end="17:25"><name pos:start="17:22" pos:end="17:25">line</name></expr></argument>, <argument pos:start="17:28" pos:end="17:41"><expr pos:start="17:28" pos:end="17:41"><literal type="string" pos:start="17:28" pos:end="17:41">"LUT_3D_SIZE "</literal></expr></argument>, <argument pos:start="17:44" pos:end="17:45"><expr pos:start="17:44" pos:end="17:45"><literal type="number" pos:start="17:44" pos:end="17:45">12</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:49" pos:end="91:9">{<block_content pos:start="19:13" pos:end="89:18">

            <decl_stmt pos:start="19:13" pos:end="19:24"><decl pos:start="19:13" pos:end="19:17"><type pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">int</name></type> <name pos:start="19:17" pos:end="19:17">i</name></decl>, <decl pos:start="19:20" pos:end="19:20"><type ref="prev" pos:start="19:13" pos:end="19:15"/><name pos:start="19:20" pos:end="19:20">j</name></decl>, <decl pos:start="19:23" pos:end="19:23"><type ref="prev" pos:start="19:13" pos:end="19:15"/><name pos:start="19:23" pos:end="19:23">k</name></decl>;</decl_stmt>

            <decl_stmt pos:start="21:13" pos:end="21:56"><decl pos:start="21:13" pos:end="21:55"><type pos:start="21:13" pos:end="21:21"><specifier pos:start="21:13" pos:end="21:17">const</specifier> <name pos:start="21:19" pos:end="21:21">int</name></type> <name pos:start="21:23" pos:end="21:26">size</name> <init pos:start="21:28" pos:end="21:55">= <expr pos:start="21:30" pos:end="21:55"><call pos:start="21:30" pos:end="21:55"><name pos:start="21:30" pos:end="21:35">strtol</name><argument_list pos:start="21:36" pos:end="21:55">(<argument pos:start="21:37" pos:end="21:45"><expr pos:start="21:37" pos:end="21:45"><name pos:start="21:37" pos:end="21:40">line</name> <operator pos:start="21:42" pos:end="21:42">+</operator> <literal type="number" pos:start="21:44" pos:end="21:45">12</literal></expr></argument>, <argument pos:start="21:48" pos:end="21:51"><expr pos:start="21:48" pos:end="21:51"><name pos:start="21:48" pos:end="21:51">NULL</name></expr></argument>, <argument pos:start="21:54" pos:end="21:54"><expr pos:start="21:54" pos:end="21:54"><literal type="number" pos:start="21:54" pos:end="21:54">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="25:13" pos:end="31:13"><if pos:start="25:13" pos:end="31:13">if <condition pos:start="25:16" pos:end="25:33">(<expr pos:start="25:17" pos:end="25:32"><name pos:start="25:17" pos:end="25:20">size</name> <operator pos:start="25:22" pos:end="25:22">&gt;</operator> <name pos:start="25:24" pos:end="25:32">MAX_LEVEL</name></expr>)</condition> <block pos:start="25:35" pos:end="31:13">{<block_content pos:start="27:17" pos:end="29:39">

                <expr_stmt pos:start="27:17" pos:end="27:64"><expr pos:start="27:17" pos:end="27:63"><call pos:start="27:17" pos:end="27:63"><name pos:start="27:17" pos:end="27:22">av_log</name><argument_list pos:start="27:23" pos:end="27:63">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">ctx</name></expr></argument>, <argument pos:start="27:29" pos:end="27:40"><expr pos:start="27:29" pos:end="27:40"><name pos:start="27:29" pos:end="27:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:43" pos:end="27:62"><expr pos:start="27:43" pos:end="27:62"><literal type="string" pos:start="27:43" pos:end="27:62">"Too large 3D LUT\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="29:17" pos:end="29:39">return <expr pos:start="29:24" pos:end="29:38"><call pos:start="29:24" pos:end="29:38"><name pos:start="29:24" pos:end="29:30">AVERROR</name><argument_list pos:start="29:31" pos:end="29:38">(<argument pos:start="29:32" pos:end="29:37"><expr pos:start="29:32" pos:end="29:37"><name pos:start="29:32" pos:end="29:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:34"><expr pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:17">lut3d</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:26">lutsize</name></name> <operator pos:start="33:28" pos:end="33:28">=</operator> <name pos:start="33:30" pos:end="33:33">size</name></expr>;</expr_stmt>

            <for pos:start="35:13" pos:end="87:13">for <control pos:start="35:17" pos:end="35:38">(<init pos:start="35:18" pos:end="35:23"><expr pos:start="35:18" pos:end="35:22"><name pos:start="35:18" pos:end="35:18">k</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <literal type="number" pos:start="35:22" pos:end="35:22">0</literal></expr>;</init> <condition pos:start="35:25" pos:end="35:33"><expr pos:start="35:25" pos:end="35:32"><name pos:start="35:25" pos:end="35:25">k</name> <operator pos:start="35:27" pos:end="35:27">&lt;</operator> <name pos:start="35:29" pos:end="35:32">size</name></expr>;</condition> <incr pos:start="35:35" pos:end="35:37"><expr pos:start="35:35" pos:end="35:37"><name pos:start="35:35" pos:end="35:35">k</name><operator pos:start="35:36" pos:end="35:37">++</operator></expr></incr>)</control> <block pos:start="35:40" pos:end="87:13">{<block_content pos:start="37:17" pos:end="85:17">

                <for pos:start="37:17" pos:end="85:17">for <control pos:start="37:21" pos:end="37:42">(<init pos:start="37:22" pos:end="37:27"><expr pos:start="37:22" pos:end="37:26"><name pos:start="37:22" pos:end="37:22">j</name> <operator pos:start="37:24" pos:end="37:24">=</operator> <literal type="number" pos:start="37:26" pos:end="37:26">0</literal></expr>;</init> <condition pos:start="37:29" pos:end="37:37"><expr pos:start="37:29" pos:end="37:36"><name pos:start="37:29" pos:end="37:29">j</name> <operator pos:start="37:31" pos:end="37:31">&lt;</operator> <name pos:start="37:33" pos:end="37:36">size</name></expr>;</condition> <incr pos:start="37:39" pos:end="37:41"><expr pos:start="37:39" pos:end="37:41"><name pos:start="37:39" pos:end="37:39">j</name><operator pos:start="37:40" pos:end="37:41">++</operator></expr></incr>)</control> <block pos:start="37:44" pos:end="85:17">{<block_content pos:start="39:21" pos:end="83:21">

                    <for pos:start="39:21" pos:end="83:21">for <control pos:start="39:25" pos:end="39:46">(<init pos:start="39:26" pos:end="39:31"><expr pos:start="39:26" pos:end="39:30"><name pos:start="39:26" pos:end="39:26">i</name> <operator pos:start="39:28" pos:end="39:28">=</operator> <literal type="number" pos:start="39:30" pos:end="39:30">0</literal></expr>;</init> <condition pos:start="39:33" pos:end="39:41"><expr pos:start="39:33" pos:end="39:40"><name pos:start="39:33" pos:end="39:33">i</name> <operator pos:start="39:35" pos:end="39:35">&lt;</operator> <name pos:start="39:37" pos:end="39:40">size</name></expr>;</condition> <incr pos:start="39:43" pos:end="39:45"><expr pos:start="39:43" pos:end="39:45"><name pos:start="39:43" pos:end="39:43">i</name><operator pos:start="39:44" pos:end="39:45">++</operator></expr></incr>)</control> <block pos:start="39:48" pos:end="83:21">{<block_content pos:start="41:25" pos:end="81:50">

                        <decl_stmt pos:start="41:25" pos:end="41:66"><decl pos:start="41:25" pos:end="41:65"><type pos:start="41:25" pos:end="41:39"><name pos:start="41:25" pos:end="41:37"><name pos:start="41:25" pos:end="41:30">struct</name> <name pos:start="41:32" pos:end="41:37">rgbvec</name></name> <modifier pos:start="41:39" pos:end="41:39">*</modifier></type><name pos:start="41:40" pos:end="41:42">vec</name> <init pos:start="41:44" pos:end="41:65">= <expr pos:start="41:46" pos:end="41:65"><operator pos:start="41:46" pos:end="41:46">&amp;</operator><name pos:start="41:47" pos:end="41:65"><name pos:start="41:47" pos:end="41:51">lut3d</name><operator pos:start="41:52" pos:end="41:53">-&gt;</operator><name pos:start="41:54" pos:end="41:56">lut</name><index pos:start="41:57" pos:end="41:59">[<expr pos:start="41:58" pos:end="41:58"><name pos:start="41:58" pos:end="41:58">k</name></expr>]</index><index pos:start="41:60" pos:end="41:62">[<expr pos:start="41:61" pos:end="41:61"><name pos:start="41:61" pos:end="41:61">j</name></expr>]</index><index pos:start="41:63" pos:end="41:65">[<expr pos:start="41:64" pos:end="41:64"><name pos:start="41:64" pos:end="41:64">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                        <do pos:start="45:25" pos:end="71:50">do <block pos:start="45:28" pos:end="71:25">{<block_content pos:start="47:29" pos:end="69:29">

                            <expr_stmt pos:start="47:29" pos:end="47:41"><expr pos:start="47:29" pos:end="47:40"><call pos:start="47:29" pos:end="47:40"><name pos:start="47:29" pos:end="47:37">NEXT_LINE</name><argument_list pos:start="47:38" pos:end="47:40">(<argument pos:start="47:39" pos:end="47:39"><expr pos:start="47:39" pos:end="47:39"><literal type="number" pos:start="47:39" pos:end="47:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="49:29" pos:end="69:29"><if pos:start="49:29" pos:end="69:29">if <condition pos:start="49:32" pos:end="49:61">(<expr pos:start="49:33" pos:end="49:60"><operator pos:start="49:33" pos:end="49:33">!</operator><call pos:start="49:34" pos:end="49:60"><name pos:start="49:34" pos:end="49:40">strncmp</name><argument_list pos:start="49:41" pos:end="49:60">(<argument pos:start="49:42" pos:end="49:45"><expr pos:start="49:42" pos:end="49:45"><name pos:start="49:42" pos:end="49:45">line</name></expr></argument>, <argument pos:start="49:48" pos:end="49:56"><expr pos:start="49:48" pos:end="49:56"><literal type="string" pos:start="49:48" pos:end="49:56">"DOMAIN_"</literal></expr></argument>, <argument pos:start="49:59" pos:end="49:59"><expr pos:start="49:59" pos:end="49:59"><literal type="number" pos:start="49:59" pos:end="49:59">7</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:63" pos:end="69:29">{<block_content pos:start="51:33" pos:end="67:41">

                                <decl_stmt pos:start="51:33" pos:end="51:51"><decl pos:start="51:33" pos:end="51:50"><type pos:start="51:33" pos:end="51:39"><name pos:start="51:33" pos:end="51:37">float</name> <modifier pos:start="51:39" pos:end="51:39">*</modifier></type><name pos:start="51:40" pos:end="51:43">vals</name> <init pos:start="51:45" pos:end="51:50">= <expr pos:start="51:47" pos:end="51:50"><name pos:start="51:47" pos:end="51:50">NULL</name></expr></init></decl>;</decl_stmt>

                                <if_stmt pos:start="53:33" pos:end="55:83"><if pos:start="53:33" pos:end="53:83">if      <condition pos:start="53:41" pos:end="53:71">(<expr pos:start="53:42" pos:end="53:70"><operator pos:start="53:42" pos:end="53:42">!</operator><call pos:start="53:43" pos:end="53:70"><name pos:start="53:43" pos:end="53:49">strncmp</name><argument_list pos:start="53:50" pos:end="53:70">(<argument pos:start="53:51" pos:end="53:58"><expr pos:start="53:51" pos:end="53:58"><name pos:start="53:51" pos:end="53:54">line</name> <operator pos:start="53:56" pos:end="53:56">+</operator> <literal type="number" pos:start="53:58" pos:end="53:58">7</literal></expr></argument>, <argument pos:start="53:61" pos:end="53:66"><expr pos:start="53:61" pos:end="53:66"><literal type="string" pos:start="53:61" pos:end="53:66">"MIN "</literal></expr></argument>, <argument pos:start="53:69" pos:end="53:69"><expr pos:start="53:69" pos:end="53:69"><literal type="number" pos:start="53:69" pos:end="53:69">4</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:73" pos:end="53:83"><block_content pos:start="53:73" pos:end="53:83"> <expr_stmt pos:start="53:73" pos:end="53:83"><expr pos:start="53:73" pos:end="53:82"><name pos:start="53:73" pos:end="53:76">vals</name> <operator pos:start="53:78" pos:end="53:78">=</operator> <name pos:start="53:80" pos:end="53:82">min</name></expr>;</expr_stmt></block_content></block></if>

                                <if type="elseif" pos:start="55:33" pos:end="55:83">else if <condition pos:start="55:41" pos:end="55:71">(<expr pos:start="55:42" pos:end="55:70"><operator pos:start="55:42" pos:end="55:42">!</operator><call pos:start="55:43" pos:end="55:70"><name pos:start="55:43" pos:end="55:49">strncmp</name><argument_list pos:start="55:50" pos:end="55:70">(<argument pos:start="55:51" pos:end="55:58"><expr pos:start="55:51" pos:end="55:58"><name pos:start="55:51" pos:end="55:54">line</name> <operator pos:start="55:56" pos:end="55:56">+</operator> <literal type="number" pos:start="55:58" pos:end="55:58">7</literal></expr></argument>, <argument pos:start="55:61" pos:end="55:66"><expr pos:start="55:61" pos:end="55:66"><literal type="string" pos:start="55:61" pos:end="55:66">"MAX "</literal></expr></argument>, <argument pos:start="55:69" pos:end="55:69"><expr pos:start="55:69" pos:end="55:69"><literal type="number" pos:start="55:69" pos:end="55:69">4</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="55:73" pos:end="55:83"><block_content pos:start="55:73" pos:end="55:83"> <expr_stmt pos:start="55:73" pos:end="55:83"><expr pos:start="55:73" pos:end="55:82"><name pos:start="55:73" pos:end="55:76">vals</name> <operator pos:start="55:78" pos:end="55:78">=</operator> <name pos:start="55:80" pos:end="55:82">max</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                                <if_stmt pos:start="57:33" pos:end="59:63"><if pos:start="57:33" pos:end="59:63">if <condition pos:start="57:36" pos:end="57:42">(<expr pos:start="57:37" pos:end="57:41"><operator pos:start="57:37" pos:end="57:37">!</operator><name pos:start="57:38" pos:end="57:41">vals</name></expr>)</condition><block type="pseudo" pos:start="59:37" pos:end="59:63"><block_content pos:start="59:37" pos:end="59:63">

                                    <return pos:start="59:37" pos:end="59:63">return <expr pos:start="59:44" pos:end="59:62"><name pos:start="59:44" pos:end="59:62">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                                <expr_stmt pos:start="61:33" pos:end="61:88"><expr pos:start="61:33" pos:end="61:87"><call pos:start="61:33" pos:end="61:87"><name pos:start="61:33" pos:end="61:38">sscanf</name><argument_list pos:start="61:39" pos:end="61:87">(<argument pos:start="61:40" pos:end="61:48"><expr pos:start="61:40" pos:end="61:48"><name pos:start="61:40" pos:end="61:43">line</name> <operator pos:start="61:45" pos:end="61:45">+</operator> <literal type="number" pos:start="61:47" pos:end="61:48">11</literal></expr></argument>, <argument pos:start="61:51" pos:end="61:60"><expr pos:start="61:51" pos:end="61:60"><literal type="string" pos:start="61:51" pos:end="61:60">"%f %f %f"</literal></expr></argument>, <argument pos:start="61:63" pos:end="61:66"><expr pos:start="61:63" pos:end="61:66"><name pos:start="61:63" pos:end="61:66">vals</name></expr></argument>, <argument pos:start="61:69" pos:end="61:76"><expr pos:start="61:69" pos:end="61:76"><name pos:start="61:69" pos:end="61:72">vals</name> <operator pos:start="61:74" pos:end="61:74">+</operator> <literal type="number" pos:start="61:76" pos:end="61:76">1</literal></expr></argument>, <argument pos:start="61:79" pos:end="61:86"><expr pos:start="61:79" pos:end="61:86"><name pos:start="61:79" pos:end="61:82">vals</name> <operator pos:start="61:84" pos:end="61:84">+</operator> <literal type="number" pos:start="61:86" pos:end="61:86">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="63:33" pos:end="65:87"><expr pos:start="63:33" pos:end="65:86"><call pos:start="63:33" pos:end="65:86"><name pos:start="63:33" pos:end="63:38">av_log</name><argument_list pos:start="63:39" pos:end="65:86">(<argument pos:start="63:40" pos:end="63:42"><expr pos:start="63:40" pos:end="63:42"><name pos:start="63:40" pos:end="63:42">ctx</name></expr></argument>, <argument pos:start="63:45" pos:end="63:56"><expr pos:start="63:45" pos:end="63:56"><name pos:start="63:45" pos:end="63:56">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="63:59" pos:end="63:91"><expr pos:start="63:59" pos:end="63:91"><literal type="string" pos:start="63:59" pos:end="63:91">"min: %f %f %f | max: %f %f %f\n"</literal></expr></argument>,

                                       <argument pos:start="65:40" pos:end="65:45"><expr pos:start="65:40" pos:end="65:45"><name pos:start="65:40" pos:end="65:45"><name pos:start="65:40" pos:end="65:42">min</name><index pos:start="65:43" pos:end="65:45">[<expr pos:start="65:44" pos:end="65:44"><literal type="number" pos:start="65:44" pos:end="65:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:48" pos:end="65:53"><expr pos:start="65:48" pos:end="65:53"><name pos:start="65:48" pos:end="65:53"><name pos:start="65:48" pos:end="65:50">min</name><index pos:start="65:51" pos:end="65:53">[<expr pos:start="65:52" pos:end="65:52"><literal type="number" pos:start="65:52" pos:end="65:52">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:56" pos:end="65:61"><expr pos:start="65:56" pos:end="65:61"><name pos:start="65:56" pos:end="65:61"><name pos:start="65:56" pos:end="65:58">min</name><index pos:start="65:59" pos:end="65:61">[<expr pos:start="65:60" pos:end="65:60"><literal type="number" pos:start="65:60" pos:end="65:60">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:64" pos:end="65:69"><expr pos:start="65:64" pos:end="65:69"><name pos:start="65:64" pos:end="65:69"><name pos:start="65:64" pos:end="65:66">max</name><index pos:start="65:67" pos:end="65:69">[<expr pos:start="65:68" pos:end="65:68"><literal type="number" pos:start="65:68" pos:end="65:68">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:72" pos:end="65:77"><expr pos:start="65:72" pos:end="65:77"><name pos:start="65:72" pos:end="65:77"><name pos:start="65:72" pos:end="65:74">max</name><index pos:start="65:75" pos:end="65:77">[<expr pos:start="65:76" pos:end="65:76"><literal type="number" pos:start="65:76" pos:end="65:76">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:80" pos:end="65:85"><expr pos:start="65:80" pos:end="65:85"><name pos:start="65:80" pos:end="65:85"><name pos:start="65:80" pos:end="65:82">max</name><index pos:start="65:83" pos:end="65:85">[<expr pos:start="65:84" pos:end="65:84"><literal type="number" pos:start="65:84" pos:end="65:84">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <continue pos:start="67:33" pos:end="67:41">continue;</continue>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block> while <condition pos:start="71:33" pos:end="71:49">(<expr pos:start="71:34" pos:end="71:48"><call pos:start="71:34" pos:end="71:48"><name pos:start="71:34" pos:end="71:42">skip_line</name><argument_list pos:start="71:43" pos:end="71:48">(<argument pos:start="71:44" pos:end="71:47"><expr pos:start="71:44" pos:end="71:47"><name pos:start="71:44" pos:end="71:47">line</name></expr></argument>)</argument_list></call></expr>)</condition>;</do>

                        <if_stmt pos:start="73:25" pos:end="75:55"><if pos:start="73:25" pos:end="75:55">if <condition pos:start="73:28" pos:end="73:85">(<expr pos:start="73:29" pos:end="73:84"><call pos:start="73:29" pos:end="73:79"><name pos:start="73:29" pos:end="73:34">sscanf</name><argument_list pos:start="73:35" pos:end="73:79">(<argument pos:start="73:36" pos:end="73:39"><expr pos:start="73:36" pos:end="73:39"><name pos:start="73:36" pos:end="73:39">line</name></expr></argument>, <argument pos:start="73:42" pos:end="73:51"><expr pos:start="73:42" pos:end="73:51"><literal type="string" pos:start="73:42" pos:end="73:51">"%f %f %f"</literal></expr></argument>, <argument pos:start="73:54" pos:end="73:60"><expr pos:start="73:54" pos:end="73:60"><operator pos:start="73:54" pos:end="73:54">&amp;</operator><name pos:start="73:55" pos:end="73:60"><name pos:start="73:55" pos:end="73:57">vec</name><operator pos:start="73:58" pos:end="73:59">-&gt;</operator><name pos:start="73:60" pos:end="73:60">r</name></name></expr></argument>, <argument pos:start="73:63" pos:end="73:69"><expr pos:start="73:63" pos:end="73:69"><operator pos:start="73:63" pos:end="73:63">&amp;</operator><name pos:start="73:64" pos:end="73:69"><name pos:start="73:64" pos:end="73:66">vec</name><operator pos:start="73:67" pos:end="73:68">-&gt;</operator><name pos:start="73:69" pos:end="73:69">g</name></name></expr></argument>, <argument pos:start="73:72" pos:end="73:78"><expr pos:start="73:72" pos:end="73:78"><operator pos:start="73:72" pos:end="73:72">&amp;</operator><name pos:start="73:73" pos:end="73:78"><name pos:start="73:73" pos:end="73:75">vec</name><operator pos:start="73:76" pos:end="73:77">-&gt;</operator><name pos:start="73:78" pos:end="73:78">b</name></name></expr></argument>)</argument_list></call> <operator pos:start="73:81" pos:end="73:82">!=</operator> <literal type="number" pos:start="73:84" pos:end="73:84">3</literal></expr>)</condition><block type="pseudo" pos:start="75:29" pos:end="75:55"><block_content pos:start="75:29" pos:end="75:55">

                            <return pos:start="75:29" pos:end="75:55">return <expr pos:start="75:36" pos:end="75:54"><name pos:start="75:36" pos:end="75:54">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="77:25" pos:end="77:50"><expr pos:start="77:25" pos:end="77:49"><name pos:start="77:25" pos:end="77:30"><name pos:start="77:25" pos:end="77:27">vec</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:30">r</name></name> <operator pos:start="77:32" pos:end="77:33">*=</operator> <name pos:start="77:35" pos:end="77:40"><name pos:start="77:35" pos:end="77:37">max</name><index pos:start="77:38" pos:end="77:40">[<expr pos:start="77:39" pos:end="77:39"><literal type="number" pos:start="77:39" pos:end="77:39">0</literal></expr>]</index></name> <operator pos:start="77:42" pos:end="77:42">-</operator> <name pos:start="77:44" pos:end="77:49"><name pos:start="77:44" pos:end="77:46">min</name><index pos:start="77:47" pos:end="77:49">[<expr pos:start="77:48" pos:end="77:48"><literal type="number" pos:start="77:48" pos:end="77:48">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="79:25" pos:end="79:50"><expr pos:start="79:25" pos:end="79:49"><name pos:start="79:25" pos:end="79:30"><name pos:start="79:25" pos:end="79:27">vec</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:30">g</name></name> <operator pos:start="79:32" pos:end="79:33">*=</operator> <name pos:start="79:35" pos:end="79:40"><name pos:start="79:35" pos:end="79:37">max</name><index pos:start="79:38" pos:end="79:40">[<expr pos:start="79:39" pos:end="79:39"><literal type="number" pos:start="79:39" pos:end="79:39">1</literal></expr>]</index></name> <operator pos:start="79:42" pos:end="79:42">-</operator> <name pos:start="79:44" pos:end="79:49"><name pos:start="79:44" pos:end="79:46">min</name><index pos:start="79:47" pos:end="79:49">[<expr pos:start="79:48" pos:end="79:48"><literal type="number" pos:start="79:48" pos:end="79:48">1</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="81:25" pos:end="81:50"><expr pos:start="81:25" pos:end="81:49"><name pos:start="81:25" pos:end="81:30"><name pos:start="81:25" pos:end="81:27">vec</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:30">b</name></name> <operator pos:start="81:32" pos:end="81:33">*=</operator> <name pos:start="81:35" pos:end="81:40"><name pos:start="81:35" pos:end="81:37">max</name><index pos:start="81:38" pos:end="81:40">[<expr pos:start="81:39" pos:end="81:39"><literal type="number" pos:start="81:39" pos:end="81:39">2</literal></expr>]</index></name> <operator pos:start="81:42" pos:end="81:42">-</operator> <name pos:start="81:44" pos:end="81:49"><name pos:start="81:44" pos:end="81:46">min</name><index pos:start="81:47" pos:end="81:49">[<expr pos:start="81:48" pos:end="81:48"><literal type="number" pos:start="81:48" pos:end="81:48">2</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <break pos:start="89:13" pos:end="89:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
