<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5856.c" pos:tabs="8"><function pos:start="1:1" pos:end="96:23"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">avi_sync</name><parameter_list pos:start="1:20" pos:end="1:55">(<parameter pos:start="1:21" pos:end="1:38"><decl pos:start="1:21" pos:end="1:38"><type pos:start="1:21" pos:end="1:38"><name pos:start="1:21" pos:end="1:35">AVFormatContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:54">exit_early</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="96:23">{<block_content pos:start="3:5" pos:end="96:23">
    <decl_stmt pos:start="3:5" pos:end="3:35"><decl pos:start="3:5" pos:end="3:34"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14">AVIContext</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type><name pos:start="3:17" pos:end="3:19">avi</name> <init pos:start="3:21" pos:end="3:34">= <expr pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:23">s</name><operator pos:start="3:24" pos:end="3:25">-&gt;</operator><name pos:start="3:26" pos:end="3:34">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:28"><decl pos:start="4:5" pos:end="4:27"><type pos:start="4:5" pos:end="4:17"><name pos:start="4:5" pos:end="4:15">AVIOContext</name> <modifier pos:start="4:17" pos:end="4:17">*</modifier></type><name pos:start="4:18" pos:end="4:19">pb</name> <init pos:start="4:21" pos:end="4:27">= <expr pos:start="4:23" pos:end="4:27"><name pos:start="4:23" pos:end="4:27"><name pos:start="4:23" pos:end="4:23">s</name><operator pos:start="4:24" pos:end="4:25">-&gt;</operator><name pos:start="4:26" pos:end="4:27">pb</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:22"><decl pos:start="6:5" pos:end="6:21"><type pos:start="6:5" pos:end="6:16"><name pos:start="6:5" pos:end="6:12">unsigned</name> <name pos:start="6:14" pos:end="6:16">int</name></type> <name pos:start="6:18" pos:end="6:21"><name pos:start="6:18" pos:end="6:18">d</name><index pos:start="6:19" pos:end="6:21">[<expr pos:start="6:20" pos:end="6:20"><literal type="number" pos:start="6:20" pos:end="6:20">8</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:21">size</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:20"><decl pos:start="8:5" pos:end="8:13"><type pos:start="8:5" pos:end="8:11"><name pos:start="8:5" pos:end="8:11">int64_t</name></type> <name pos:start="8:13" pos:end="8:13">i</name></decl>, <decl pos:start="8:16" pos:end="8:19"><type ref="prev" pos:start="8:5" pos:end="8:11"/><name pos:start="8:16" pos:end="8:19">sync</name></decl>;</decl_stmt>
<label pos:start="9:1" pos:end="9:11"><name pos:start="9:1" pos:end="9:10">start_sync</name>:</label>
    <expr_stmt pos:start="10:5" pos:end="10:29"><expr pos:start="10:5" pos:end="10:28"><call pos:start="10:5" pos:end="10:28"><name pos:start="10:5" pos:end="10:10">memset</name><argument_list pos:start="10:11" pos:end="10:28">(<argument pos:start="10:12" pos:end="10:12"><expr pos:start="10:12" pos:end="10:12"><name pos:start="10:12" pos:end="10:12">d</name></expr></argument>, <argument pos:start="10:15" pos:end="10:16"><expr pos:start="10:15" pos:end="10:16"><operator pos:start="10:15" pos:end="10:15">-</operator><literal type="number" pos:start="10:16" pos:end="10:16">1</literal></expr></argument>, <argument pos:start="10:19" pos:end="10:27"><expr pos:start="10:19" pos:end="10:27"><sizeof pos:start="10:19" pos:end="10:27">sizeof<argument_list pos:start="10:25" pos:end="10:27">(<argument pos:start="10:26" pos:end="10:26"><expr pos:start="10:26" pos:end="10:26"><name pos:start="10:26" pos:end="10:26">d</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="11:5" pos:end="96:23">for<control pos:start="11:8" pos:end="11:49">(<init pos:start="11:9" pos:end="11:29"><expr pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:9">i</name><operator pos:start="11:10" pos:end="11:10">=</operator><name pos:start="11:11" pos:end="11:14">sync</name><operator pos:start="11:15" pos:end="11:15">=</operator><call pos:start="11:16" pos:end="11:28"><name pos:start="11:16" pos:end="11:24">avio_tell</name><argument_list pos:start="11:25" pos:end="11:28">(<argument pos:start="11:26" pos:end="11:27"><expr pos:start="11:26" pos:end="11:27"><name pos:start="11:26" pos:end="11:27">pb</name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="11:31" pos:end="11:44"><expr pos:start="11:31" pos:end="11:43"><operator pos:start="11:31" pos:end="11:31">!</operator><call pos:start="11:32" pos:end="11:43"><name pos:start="11:32" pos:end="11:39">url_feof</name><argument_list pos:start="11:40" pos:end="11:43">(<argument pos:start="11:41" pos:end="11:42"><expr pos:start="11:41" pos:end="11:42"><name pos:start="11:41" pos:end="11:42">pb</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="11:46" pos:end="11:48"><expr pos:start="11:46" pos:end="11:48"><name pos:start="11:46" pos:end="11:46">i</name><operator pos:start="11:47" pos:end="11:48">++</operator></expr></incr>)</control> <block pos:start="11:51" pos:end="96:23">{<block_content pos:start="12:9" pos:end="96:23">
        <decl_stmt pos:start="12:9" pos:end="12:14"><decl pos:start="12:9" pos:end="12:13"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:13">j</name></decl>;</decl_stmt>
        <for pos:start="13:9" pos:end="14:25">for<control pos:start="13:12" pos:end="13:26">(<init pos:start="13:13" pos:end="13:16"><expr pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:13">j</name><operator pos:start="13:14" pos:end="13:14">=</operator><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr>;</init> <condition pos:start="13:18" pos:end="13:21"><expr pos:start="13:18" pos:end="13:20"><name pos:start="13:18" pos:end="13:18">j</name><operator pos:start="13:19" pos:end="13:19">&lt;</operator><literal type="number" pos:start="13:20" pos:end="13:20">7</literal></expr>;</condition> <incr pos:start="13:23" pos:end="13:25"><expr pos:start="13:23" pos:end="13:25"><name pos:start="13:23" pos:end="13:23">j</name><operator pos:start="13:24" pos:end="13:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="14:13" pos:end="14:25"><block_content pos:start="14:13" pos:end="14:25">
            <expr_stmt pos:start="14:13" pos:end="14:25"><expr pos:start="14:13" pos:end="14:24"><name pos:start="14:13" pos:end="14:16"><name pos:start="14:13" pos:end="14:13">d</name><index pos:start="14:14" pos:end="14:16">[<expr pos:start="14:15" pos:end="14:15"><name pos:start="14:15" pos:end="14:15">j</name></expr>]</index></name><operator pos:start="14:17" pos:end="14:17">=</operator> <name pos:start="14:19" pos:end="14:24"><name pos:start="14:19" pos:end="14:19">d</name><index pos:start="14:20" pos:end="14:24">[<expr pos:start="14:21" pos:end="14:23"><name pos:start="14:21" pos:end="14:21">j</name><operator pos:start="14:22" pos:end="14:22">+</operator><literal type="number" pos:start="14:23" pos:end="14:23">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
        <expr_stmt pos:start="15:9" pos:end="15:26"><expr pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:12"><name pos:start="15:9" pos:end="15:9">d</name><index pos:start="15:10" pos:end="15:12">[<expr pos:start="15:11" pos:end="15:11"><literal type="number" pos:start="15:11" pos:end="15:11">7</literal></expr>]</index></name><operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:25"><name pos:start="15:15" pos:end="15:21">avio_r8</name><argument_list pos:start="15:22" pos:end="15:25">(<argument pos:start="15:23" pos:end="15:24"><expr pos:start="15:23" pos:end="15:24"><name pos:start="15:23" pos:end="15:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:57"><expr pos:start="16:9" pos:end="16:56"><name pos:start="16:9" pos:end="16:12">size</name><operator pos:start="16:13" pos:end="16:13">=</operator> <name pos:start="16:15" pos:end="16:18"><name pos:start="16:15" pos:end="16:15">d</name><index pos:start="16:16" pos:end="16:18">[<expr pos:start="16:17" pos:end="16:17"><literal type="number" pos:start="16:17" pos:end="16:17">4</literal></expr>]</index></name> <operator pos:start="16:20" pos:end="16:20">+</operator> <operator pos:start="16:22" pos:end="16:22">(</operator><name pos:start="16:23" pos:end="16:26"><name pos:start="16:23" pos:end="16:23">d</name><index pos:start="16:24" pos:end="16:26">[<expr pos:start="16:25" pos:end="16:25"><literal type="number" pos:start="16:25" pos:end="16:25">5</literal></expr>]</index></name><operator pos:start="16:27" pos:end="16:28">&lt;&lt;</operator><literal type="number" pos:start="16:29" pos:end="16:29">8</literal><operator pos:start="16:30" pos:end="16:30">)</operator> <operator pos:start="16:32" pos:end="16:32">+</operator> <operator pos:start="16:34" pos:end="16:34">(</operator><name pos:start="16:35" pos:end="16:38"><name pos:start="16:35" pos:end="16:35">d</name><index pos:start="16:36" pos:end="16:38">[<expr pos:start="16:37" pos:end="16:37"><literal type="number" pos:start="16:37" pos:end="16:37">6</literal></expr>]</index></name><operator pos:start="16:39" pos:end="16:40">&lt;&lt;</operator><literal type="number" pos:start="16:41" pos:end="16:42">16</literal><operator pos:start="16:43" pos:end="16:43">)</operator> <operator pos:start="16:45" pos:end="16:45">+</operator> <operator pos:start="16:47" pos:end="16:47">(</operator><name pos:start="16:48" pos:end="16:51"><name pos:start="16:48" pos:end="16:48">d</name><index pos:start="16:49" pos:end="16:51">[<expr pos:start="16:50" pos:end="16:50"><literal type="number" pos:start="16:50" pos:end="16:50">7</literal></expr>]</index></name><operator pos:start="16:52" pos:end="16:53">&lt;&lt;</operator><literal type="number" pos:start="16:54" pos:end="16:55">24</literal><operator pos:start="16:56" pos:end="16:56">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:31"><expr pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:9">n</name><operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:30"><name pos:start="17:12" pos:end="17:25">get_stream_idx</name><argument_list pos:start="17:26" pos:end="17:30">(<argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><name pos:start="17:27" pos:end="17:27">d</name><operator pos:start="17:28" pos:end="17:28">+</operator><literal type="number" pos:start="17:29" pos:end="17:29">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="line" pos:start="18:1" pos:end="18:131">//av_log(s, AV_LOG_DEBUG, "%X %X %X %X %X %X %X %X %"PRId64" %d %d\n", d[0], d[1], d[2], d[3], d[4], d[5], d[6], d[7], i, size, n);</comment>
        <if_stmt pos:start="19:9" pos:end="96:23"><if pos:start="19:9" pos:end="96:23">if<condition pos:start="19:11" pos:end="19:57">(<expr pos:start="19:12" pos:end="19:56"><name pos:start="19:12" pos:end="19:12">i</name> <operator pos:start="19:14" pos:end="19:14">+</operator> <operator pos:start="19:16" pos:end="19:16">(</operator><name pos:start="19:17" pos:end="19:24">uint64_t</name><operator pos:start="19:25" pos:end="19:25">)</operator><name pos:start="19:26" pos:end="19:29">size</name> <operator pos:start="19:31" pos:end="19:31">&gt;</operator> <name pos:start="19:33" pos:end="19:42"><name pos:start="19:33" pos:end="19:35">avi</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:42">fsize</name></name> <operator pos:start="19:44" pos:end="19:45">||</operator> <name pos:start="19:47" pos:end="19:50"><name pos:start="19:47" pos:end="19:47">d</name><index pos:start="19:48" pos:end="19:50">[<expr pos:start="19:49" pos:end="19:49"><literal type="number" pos:start="19:49" pos:end="19:49">0</literal></expr>]</index></name> <operator pos:start="19:52" pos:end="19:52">&gt;</operator> <literal type="number" pos:start="19:54" pos:end="19:56">127</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="96:23"><block_content pos:start="21:9" pos:end="96:23">
        <comment type="line" pos:start="20:9" pos:end="20:20">//parse ix##</comment>
        <if_stmt pos:start="21:9" pos:end="96:23"><if pos:start="21:9" pos:end="96:23">if<condition pos:start="21:11" pos:end="24:72">(  <expr pos:start="21:14" pos:end="24:71"><operator pos:start="21:14" pos:end="21:14">(</operator><name pos:start="21:15" pos:end="21:18"><name pos:start="21:15" pos:end="21:15">d</name><index pos:start="21:16" pos:end="21:18">[<expr pos:start="21:17" pos:end="21:17"><literal type="number" pos:start="21:17" pos:end="21:17">0</literal></expr>]</index></name> <operator pos:start="21:20" pos:end="21:21">==</operator> <literal type="char" pos:start="21:23" pos:end="21:25">'i'</literal> <operator pos:start="21:27" pos:end="21:28">&amp;&amp;</operator> <name pos:start="21:30" pos:end="21:33"><name pos:start="21:30" pos:end="21:30">d</name><index pos:start="21:31" pos:end="21:33">[<expr pos:start="21:32" pos:end="21:32"><literal type="number" pos:start="21:32" pos:end="21:32">1</literal></expr>]</index></name> <operator pos:start="21:35" pos:end="21:36">==</operator> <literal type="char" pos:start="21:38" pos:end="21:40">'x'</literal> <operator pos:start="21:42" pos:end="21:43">&amp;&amp;</operator> <name pos:start="21:45" pos:end="21:45">n</name> <operator pos:start="21:47" pos:end="21:47">&lt;</operator> <name pos:start="21:49" pos:end="21:61"><name pos:start="21:49" pos:end="21:49">s</name><operator pos:start="21:50" pos:end="21:51">-&gt;</operator><name pos:start="21:52" pos:end="21:61">nb_streams</name></name><operator pos:start="21:62" pos:end="21:62">)</operator>
        <comment type="line" pos:start="22:9" pos:end="22:20">//parse JUNK</comment>
           <operator pos:start="23:12" pos:end="23:13">||</operator><operator pos:start="23:14" pos:end="23:14">(</operator><name pos:start="23:15" pos:end="23:18"><name pos:start="23:15" pos:end="23:15">d</name><index pos:start="23:16" pos:end="23:18">[<expr pos:start="23:17" pos:end="23:17"><literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr>]</index></name> <operator pos:start="23:20" pos:end="23:21">==</operator> <literal type="char" pos:start="23:23" pos:end="23:25">'J'</literal> <operator pos:start="23:27" pos:end="23:28">&amp;&amp;</operator> <name pos:start="23:30" pos:end="23:33"><name pos:start="23:30" pos:end="23:30">d</name><index pos:start="23:31" pos:end="23:33">[<expr pos:start="23:32" pos:end="23:32"><literal type="number" pos:start="23:32" pos:end="23:32">1</literal></expr>]</index></name> <operator pos:start="23:35" pos:end="23:36">==</operator> <literal type="char" pos:start="23:38" pos:end="23:40">'U'</literal> <operator pos:start="23:42" pos:end="23:43">&amp;&amp;</operator> <name pos:start="23:45" pos:end="23:48"><name pos:start="23:45" pos:end="23:45">d</name><index pos:start="23:46" pos:end="23:48">[<expr pos:start="23:47" pos:end="23:47"><literal type="number" pos:start="23:47" pos:end="23:47">2</literal></expr>]</index></name> <operator pos:start="23:50" pos:end="23:51">==</operator> <literal type="char" pos:start="23:53" pos:end="23:55">'N'</literal> <operator pos:start="23:57" pos:end="23:58">&amp;&amp;</operator> <name pos:start="23:60" pos:end="23:63"><name pos:start="23:60" pos:end="23:60">d</name><index pos:start="23:61" pos:end="23:63">[<expr pos:start="23:62" pos:end="23:62"><literal type="number" pos:start="23:62" pos:end="23:62">3</literal></expr>]</index></name> <operator pos:start="23:65" pos:end="23:66">==</operator> <literal type="char" pos:start="23:68" pos:end="23:70">'K'</literal><operator pos:start="23:71" pos:end="23:71">)</operator>
           <operator pos:start="24:12" pos:end="24:13">||</operator><operator pos:start="24:14" pos:end="24:14">(</operator><name pos:start="24:15" pos:end="24:18"><name pos:start="24:15" pos:end="24:15">d</name><index pos:start="24:16" pos:end="24:18">[<expr pos:start="24:17" pos:end="24:17"><literal type="number" pos:start="24:17" pos:end="24:17">0</literal></expr>]</index></name> <operator pos:start="24:20" pos:end="24:21">==</operator> <literal type="char" pos:start="24:23" pos:end="24:25">'i'</literal> <operator pos:start="24:27" pos:end="24:28">&amp;&amp;</operator> <name pos:start="24:30" pos:end="24:33"><name pos:start="24:30" pos:end="24:30">d</name><index pos:start="24:31" pos:end="24:33">[<expr pos:start="24:32" pos:end="24:32"><literal type="number" pos:start="24:32" pos:end="24:32">1</literal></expr>]</index></name> <operator pos:start="24:35" pos:end="24:36">==</operator> <literal type="char" pos:start="24:38" pos:end="24:40">'d'</literal> <operator pos:start="24:42" pos:end="24:43">&amp;&amp;</operator> <name pos:start="24:45" pos:end="24:48"><name pos:start="24:45" pos:end="24:45">d</name><index pos:start="24:46" pos:end="24:48">[<expr pos:start="24:47" pos:end="24:47"><literal type="number" pos:start="24:47" pos:end="24:47">2</literal></expr>]</index></name> <operator pos:start="24:50" pos:end="24:51">==</operator> <literal type="char" pos:start="24:53" pos:end="24:55">'x'</literal> <operator pos:start="24:57" pos:end="24:58">&amp;&amp;</operator> <name pos:start="24:60" pos:end="24:63"><name pos:start="24:60" pos:end="24:60">d</name><index pos:start="24:61" pos:end="24:63">[<expr pos:start="24:62" pos:end="24:62"><literal type="number" pos:start="24:62" pos:end="24:62">3</literal></expr>]</index></name> <operator pos:start="24:65" pos:end="24:66">==</operator> <literal type="char" pos:start="24:68" pos:end="24:70">'1'</literal><operator pos:start="24:71" pos:end="24:71">)</operator></expr>)</condition><block pos:start="24:73" pos:end="96:23">{<block_content pos:start="25:13" pos:end="96:23">
            <expr_stmt pos:start="25:13" pos:end="25:32"><expr pos:start="25:13" pos:end="25:31"><call pos:start="25:13" pos:end="25:31"><name pos:start="25:13" pos:end="25:21">avio_skip</name><argument_list pos:start="25:22" pos:end="25:31">(<argument pos:start="25:23" pos:end="25:24"><expr pos:start="25:23" pos:end="25:24"><name pos:start="25:23" pos:end="25:24">pb</name></expr></argument>, <argument pos:start="25:27" pos:end="25:30"><expr pos:start="25:27" pos:end="25:30"><name pos:start="25:27" pos:end="25:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="line" pos:start="26:1" pos:end="26:36">//av_log(s, AV_LOG_DEBUG, "SKIP\n");</comment>
            <goto pos:start="27:13" pos:end="27:28">goto <name pos:start="27:18" pos:end="27:27">start_sync</name>;</goto>
        <comment type="line" pos:start="28:9" pos:end="28:26">//parse stray LIST</comment>
        <if_stmt pos:start="29:9" pos:end="96:23"><if pos:start="29:9" pos:end="96:23">if<condition pos:start="29:11" pos:end="29:68">(<expr pos:start="29:12" pos:end="29:67"><name pos:start="29:12" pos:end="29:15"><name pos:start="29:12" pos:end="29:12">d</name><index pos:start="29:13" pos:end="29:15">[<expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>]</index></name> <operator pos:start="29:17" pos:end="29:18">==</operator> <literal type="char" pos:start="29:20" pos:end="29:22">'L'</literal> <operator pos:start="29:24" pos:end="29:25">&amp;&amp;</operator> <name pos:start="29:27" pos:end="29:30"><name pos:start="29:27" pos:end="29:27">d</name><index pos:start="29:28" pos:end="29:30">[<expr pos:start="29:29" pos:end="29:29"><literal type="number" pos:start="29:29" pos:end="29:29">1</literal></expr>]</index></name> <operator pos:start="29:32" pos:end="29:33">==</operator> <literal type="char" pos:start="29:35" pos:end="29:37">'I'</literal> <operator pos:start="29:39" pos:end="29:40">&amp;&amp;</operator> <name pos:start="29:42" pos:end="29:45"><name pos:start="29:42" pos:end="29:42">d</name><index pos:start="29:43" pos:end="29:45">[<expr pos:start="29:44" pos:end="29:44"><literal type="number" pos:start="29:44" pos:end="29:44">2</literal></expr>]</index></name> <operator pos:start="29:47" pos:end="29:48">==</operator> <literal type="char" pos:start="29:50" pos:end="29:52">'S'</literal> <operator pos:start="29:54" pos:end="29:55">&amp;&amp;</operator> <name pos:start="29:57" pos:end="29:60"><name pos:start="29:57" pos:end="29:57">d</name><index pos:start="29:58" pos:end="29:60">[<expr pos:start="29:59" pos:end="29:59"><literal type="number" pos:start="29:59" pos:end="29:59">3</literal></expr>]</index></name> <operator pos:start="29:62" pos:end="29:63">==</operator> <literal type="char" pos:start="29:65" pos:end="29:67">'T'</literal></expr>)</condition><block pos:start="29:69" pos:end="96:23">{<block_content pos:start="30:13" pos:end="96:23">
            <expr_stmt pos:start="30:13" pos:end="30:29"><expr pos:start="30:13" pos:end="30:28"><call pos:start="30:13" pos:end="30:28"><name pos:start="30:13" pos:end="30:21">avio_skip</name><argument_list pos:start="30:22" pos:end="30:28">(<argument pos:start="30:23" pos:end="30:24"><expr pos:start="30:23" pos:end="30:24"><name pos:start="30:23" pos:end="30:24">pb</name></expr></argument>, <argument pos:start="30:27" pos:end="30:27"><expr pos:start="30:27" pos:end="30:27"><literal type="number" pos:start="30:27" pos:end="30:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <goto pos:start="31:13" pos:end="31:28">goto <name pos:start="31:18" pos:end="31:27">start_sync</name>;</goto>
        <expr_stmt pos:start="32:9" pos:end="32:29"><expr pos:start="32:9" pos:end="32:28"><name pos:start="32:9" pos:end="32:9">n</name><operator pos:start="32:10" pos:end="32:10">=</operator> <call pos:start="32:12" pos:end="32:28"><name pos:start="32:12" pos:end="32:25">get_stream_idx</name><argument_list pos:start="32:26" pos:end="32:28">(<argument pos:start="32:27" pos:end="32:27"><expr pos:start="32:27" pos:end="32:27"><name pos:start="32:27" pos:end="32:27">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="33:9" pos:end="96:23"><if pos:start="33:9" pos:end="96:23">if<condition pos:start="33:11" pos:end="33:77">(<expr pos:start="33:12" pos:end="33:76"><operator pos:start="33:12" pos:end="33:12">!</operator><operator pos:start="33:13" pos:end="33:13">(</operator><operator pos:start="33:14" pos:end="33:14">(</operator><name pos:start="33:15" pos:end="33:15">i</name><operator pos:start="33:16" pos:end="33:16">-</operator><name pos:start="33:17" pos:end="33:33"><name pos:start="33:17" pos:end="33:19">avi</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:33">last_pkt_pos</name></name><operator pos:start="33:34" pos:end="33:34">)</operator><operator pos:start="33:35" pos:end="33:35">&amp;</operator><literal type="number" pos:start="33:36" pos:end="33:36">1</literal><operator pos:start="33:37" pos:end="33:37">)</operator> <operator pos:start="33:39" pos:end="33:40">&amp;&amp;</operator> <call pos:start="33:42" pos:end="33:60"><name pos:start="33:42" pos:end="33:55">get_stream_idx</name><argument_list pos:start="33:56" pos:end="33:60">(<argument pos:start="33:57" pos:end="33:59"><expr pos:start="33:57" pos:end="33:59"><name pos:start="33:57" pos:end="33:57">d</name><operator pos:start="33:58" pos:end="33:58">+</operator><literal type="number" pos:start="33:59" pos:end="33:59">1</literal></expr></argument>)</argument_list></call> <operator pos:start="33:62" pos:end="33:62">&lt;</operator> <name pos:start="33:64" pos:end="33:76"><name pos:start="33:64" pos:end="33:64">s</name><operator pos:start="33:65" pos:end="33:66">-&gt;</operator><name pos:start="33:67" pos:end="33:76">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="96:23"><block_content pos:start="35:9" pos:end="96:23">
        <comment type="line" pos:start="34:9" pos:end="34:36">//detect ##ix chunk and skip</comment>
        <if_stmt pos:start="35:9" pos:end="96:23"><if pos:start="35:9" pos:end="96:23">if<condition pos:start="35:11" pos:end="35:59">(<expr pos:start="35:12" pos:end="35:58"><name pos:start="35:12" pos:end="35:15"><name pos:start="35:12" pos:end="35:12">d</name><index pos:start="35:13" pos:end="35:15">[<expr pos:start="35:14" pos:end="35:14"><literal type="number" pos:start="35:14" pos:end="35:14">2</literal></expr>]</index></name> <operator pos:start="35:17" pos:end="35:18">==</operator> <literal type="char" pos:start="35:20" pos:end="35:22">'i'</literal> <operator pos:start="35:24" pos:end="35:25">&amp;&amp;</operator> <name pos:start="35:27" pos:end="35:30"><name pos:start="35:27" pos:end="35:27">d</name><index pos:start="35:28" pos:end="35:30">[<expr pos:start="35:29" pos:end="35:29"><literal type="number" pos:start="35:29" pos:end="35:29">3</literal></expr>]</index></name> <operator pos:start="35:32" pos:end="35:33">==</operator> <literal type="char" pos:start="35:35" pos:end="35:37">'x'</literal> <operator pos:start="35:39" pos:end="35:40">&amp;&amp;</operator> <name pos:start="35:42" pos:end="35:42">n</name> <operator pos:start="35:44" pos:end="35:44">&lt;</operator> <name pos:start="35:46" pos:end="35:58"><name pos:start="35:46" pos:end="35:46">s</name><operator pos:start="35:47" pos:end="35:48">-&gt;</operator><name pos:start="35:49" pos:end="35:58">nb_streams</name></name></expr>)</condition><block pos:start="35:60" pos:end="96:23">{<block_content pos:start="36:13" pos:end="96:23">
            <expr_stmt pos:start="36:13" pos:end="36:32"><expr pos:start="36:13" pos:end="36:31"><call pos:start="36:13" pos:end="36:31"><name pos:start="36:13" pos:end="36:21">avio_skip</name><argument_list pos:start="36:22" pos:end="36:31">(<argument pos:start="36:23" pos:end="36:24"><expr pos:start="36:23" pos:end="36:24"><name pos:start="36:23" pos:end="36:24">pb</name></expr></argument>, <argument pos:start="36:27" pos:end="36:30"><expr pos:start="36:27" pos:end="36:30"><name pos:start="36:27" pos:end="36:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <goto pos:start="37:13" pos:end="37:28">goto <name pos:start="37:18" pos:end="37:27">start_sync</name>;</goto>
        <comment type="line" pos:start="38:9" pos:end="38:25">//parse ##dc/##wb</comment>
        <if_stmt pos:start="39:9" pos:end="96:23"><if pos:start="39:9" pos:end="96:23">if<condition pos:start="39:11" pos:end="39:29">(<expr pos:start="39:12" pos:end="39:28"><name pos:start="39:12" pos:end="39:12">n</name> <operator pos:start="39:14" pos:end="39:14">&lt;</operator> <name pos:start="39:16" pos:end="39:28"><name pos:start="39:16" pos:end="39:16">s</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:28">nb_streams</name></name></expr>)</condition><block pos:start="39:30" pos:end="96:23">{<block_content pos:start="40:13" pos:end="96:23">
            <decl_stmt pos:start="40:13" pos:end="40:25"><decl pos:start="40:13" pos:end="40:24"><type pos:start="40:13" pos:end="40:22"><name pos:start="40:13" pos:end="40:20">AVStream</name> <modifier pos:start="40:22" pos:end="40:22">*</modifier></type><name pos:start="40:23" pos:end="40:24">st</name></decl>;</decl_stmt>
            <decl_stmt pos:start="41:13" pos:end="41:27"><decl pos:start="41:13" pos:end="41:26"><type pos:start="41:13" pos:end="41:23"><name pos:start="41:13" pos:end="41:21">AVIStream</name> <modifier pos:start="41:23" pos:end="41:23">*</modifier></type><name pos:start="41:24" pos:end="41:26">ast</name></decl>;</decl_stmt>
            <expr_stmt pos:start="42:13" pos:end="42:31"><expr pos:start="42:13" pos:end="42:30"><name pos:start="42:13" pos:end="42:14">st</name> <operator pos:start="42:16" pos:end="42:16">=</operator> <name pos:start="42:18" pos:end="42:30"><name pos:start="42:18" pos:end="42:18">s</name><operator pos:start="42:19" pos:end="42:20">-&gt;</operator><name pos:start="42:21" pos:end="42:27">streams</name><index pos:start="42:28" pos:end="42:30">[<expr pos:start="42:29" pos:end="42:29"><name pos:start="42:29" pos:end="42:29">n</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="43:13" pos:end="43:32"><expr pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:15">ast</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:31"><name pos:start="43:19" pos:end="43:20">st</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:31">priv_data</name></name></expr>;</expr_stmt>
            <if_stmt pos:start="44:13" pos:end="96:23"><if pos:start="44:13" pos:end="96:23">if<condition pos:start="44:15" pos:end="44:32">(<expr pos:start="44:16" pos:end="44:31"><name pos:start="44:16" pos:end="44:28"><name pos:start="44:16" pos:end="44:16">s</name><operator pos:start="44:17" pos:end="44:18">-&gt;</operator><name pos:start="44:19" pos:end="44:28">nb_streams</name></name><operator pos:start="44:29" pos:end="44:30">&gt;=</operator><literal type="number" pos:start="44:31" pos:end="44:31">2</literal></expr>)</condition><block pos:start="44:33" pos:end="96:23">{<block_content pos:start="45:17" pos:end="96:23">
                <decl_stmt pos:start="45:17" pos:end="45:47"><decl pos:start="45:17" pos:end="45:46"><type pos:start="45:17" pos:end="45:26"><name pos:start="45:17" pos:end="45:24">AVStream</name> <modifier pos:start="45:26" pos:end="45:26">*</modifier></type><name pos:start="45:27" pos:end="45:29">st1</name>  <init pos:start="45:32" pos:end="45:46">= <expr pos:start="45:34" pos:end="45:46"><name pos:start="45:34" pos:end="45:46"><name pos:start="45:34" pos:end="45:34">s</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:43">streams</name><index pos:start="45:44" pos:end="45:46">[<expr pos:start="45:45" pos:end="45:45"><literal type="number" pos:start="45:45" pos:end="45:45">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="46:17" pos:end="46:48"><decl pos:start="46:17" pos:end="46:47"><type pos:start="46:17" pos:end="46:27"><name pos:start="46:17" pos:end="46:25">AVIStream</name> <modifier pos:start="46:27" pos:end="46:27">*</modifier></type><name pos:start="46:28" pos:end="46:31">ast1</name><init pos:start="46:32" pos:end="46:47">= <expr pos:start="46:34" pos:end="46:47"><name pos:start="46:34" pos:end="46:47"><name pos:start="46:34" pos:end="46:36">st1</name><operator pos:start="46:37" pos:end="46:38">-&gt;</operator><name pos:start="46:39" pos:end="46:47">priv_data</name></name></expr></init></decl>;</decl_stmt>
                <comment type="line" pos:start="47:17" pos:end="47:61">//workaround for broken small-file-bug402.avi</comment>
                <if_stmt pos:start="48:17" pos:end="96:23"><if pos:start="48:17" pos:end="96:23">if<condition pos:start="48:19" pos:end="54:19">(   <expr pos:start="48:23" pos:end="53:76"><name pos:start="48:23" pos:end="48:26"><name pos:start="48:23" pos:end="48:23">d</name><index pos:start="48:24" pos:end="48:26">[<expr pos:start="48:25" pos:end="48:25"><literal type="number" pos:start="48:25" pos:end="48:25">2</literal></expr>]</index></name> <operator pos:start="48:28" pos:end="48:29">==</operator> <literal type="char" pos:start="48:31" pos:end="48:33">'w'</literal> <operator pos:start="48:35" pos:end="48:36">&amp;&amp;</operator> <name pos:start="48:38" pos:end="48:41"><name pos:start="48:38" pos:end="48:38">d</name><index pos:start="48:39" pos:end="48:41">[<expr pos:start="48:40" pos:end="48:40"><literal type="number" pos:start="48:40" pos:end="48:40">3</literal></expr>]</index></name> <operator pos:start="48:43" pos:end="48:44">==</operator> <literal type="char" pos:start="48:46" pos:end="48:48">'b'</literal>
                   <operator pos:start="49:20" pos:end="49:21">&amp;&amp;</operator> <name pos:start="49:23" pos:end="49:23">n</name><operator pos:start="49:24" pos:end="49:25">==</operator><literal type="number" pos:start="49:26" pos:end="49:26">0</literal>
                   <operator pos:start="50:20" pos:end="50:21">&amp;&amp;</operator> <name pos:start="50:23" pos:end="50:44"><name pos:start="50:23" pos:end="50:24">st</name> <operator pos:start="50:26" pos:end="50:27">-&gt;</operator><name pos:start="50:28" pos:end="50:32">codec</name><operator pos:start="50:33" pos:end="50:34">-&gt;</operator><name pos:start="50:35" pos:end="50:44">codec_type</name></name> <operator pos:start="50:46" pos:end="50:47">==</operator> <name pos:start="50:49" pos:end="50:66">AVMEDIA_TYPE_VIDEO</name>
                   <operator pos:start="51:20" pos:end="51:21">&amp;&amp;</operator> <name pos:start="51:23" pos:end="51:44"><name pos:start="51:23" pos:end="51:25">st1</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:32">codec</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:44">codec_type</name></name> <operator pos:start="51:46" pos:end="51:47">==</operator> <name pos:start="51:49" pos:end="51:66">AVMEDIA_TYPE_AUDIO</name>
                   <operator pos:start="52:20" pos:end="52:21">&amp;&amp;</operator> <name pos:start="52:23" pos:end="52:33"><name pos:start="52:23" pos:end="52:25">ast</name><operator pos:start="52:26" pos:end="52:27">-&gt;</operator><name pos:start="52:28" pos:end="52:33">prefix</name></name> <operator pos:start="52:35" pos:end="52:36">==</operator> <literal type="char" pos:start="52:38" pos:end="52:40">'d'</literal><operator pos:start="52:41" pos:end="52:41">*</operator><literal type="number" pos:start="52:42" pos:end="52:45">256</literal><operator pos:start="52:45" pos:end="52:45">+</operator><literal type="char" pos:start="52:46" pos:end="52:48">'c'</literal>
                   <operator pos:start="53:20" pos:end="53:21">&amp;&amp;</operator> <operator pos:start="53:23" pos:end="53:23">(</operator><name pos:start="53:24" pos:end="53:27"><name pos:start="53:24" pos:end="53:24">d</name><index pos:start="53:25" pos:end="53:27">[<expr pos:start="53:26" pos:end="53:26"><literal type="number" pos:start="53:26" pos:end="53:26">2</literal></expr>]</index></name><operator pos:start="53:28" pos:end="53:28">*</operator><literal type="number" pos:start="53:29" pos:end="53:32">256</literal><operator pos:start="53:32" pos:end="53:32">+</operator><name pos:start="53:33" pos:end="53:36"><name pos:start="53:33" pos:end="53:33">d</name><index pos:start="53:34" pos:end="53:36">[<expr pos:start="53:35" pos:end="53:35"><literal type="number" pos:start="53:35" pos:end="53:35">3</literal></expr>]</index></name> <operator pos:start="53:38" pos:end="53:39">==</operator> <name pos:start="53:41" pos:end="53:52"><name pos:start="53:41" pos:end="53:44">ast1</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:52">prefix</name></name> <operator pos:start="53:54" pos:end="53:55">||</operator> <operator pos:start="53:57" pos:end="53:57">!</operator><name pos:start="53:58" pos:end="53:75"><name pos:start="53:58" pos:end="53:61">ast1</name><operator pos:start="53:62" pos:end="53:63">-&gt;</operator><name pos:start="53:64" pos:end="53:75">prefix_count</name></name><operator pos:start="53:76" pos:end="53:76">)</operator></expr>
                  )</condition><block pos:start="54:20" pos:end="96:23">{<block_content pos:start="55:21" pos:end="96:23">
                    <expr_stmt pos:start="55:21" pos:end="55:24"><expr pos:start="55:21" pos:end="55:23"><name pos:start="55:21" pos:end="55:21">n</name><operator pos:start="55:22" pos:end="55:22">=</operator><literal type="number" pos:start="55:23" pos:end="55:23">1</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="56:21" pos:end="56:29"><expr pos:start="56:21" pos:end="56:28"><name pos:start="56:21" pos:end="56:22">st</name> <operator pos:start="56:24" pos:end="56:24">=</operator> <name pos:start="56:26" pos:end="56:28">st1</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="57:21" pos:end="57:31"><expr pos:start="57:21" pos:end="57:30"><name pos:start="57:21" pos:end="57:23">ast</name> <operator pos:start="57:25" pos:end="57:25">=</operator> <name pos:start="57:27" pos:end="57:30">ast1</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="58:21" pos:end="58:104"><expr pos:start="58:21" pos:end="58:103"><call pos:start="58:21" pos:end="58:103"><name pos:start="58:21" pos:end="58:26">av_log</name><argument_list pos:start="58:27" pos:end="58:103">(<argument pos:start="58:28" pos:end="58:28"><expr pos:start="58:28" pos:end="58:28"><name pos:start="58:28" pos:end="58:28">s</name></expr></argument>, <argument pos:start="58:31" pos:end="58:44"><expr pos:start="58:31" pos:end="58:44"><name pos:start="58:31" pos:end="58:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="58:47" pos:end="58:102"><expr pos:start="58:47" pos:end="58:102"><literal type="string" pos:start="58:47" pos:end="58:102">"Invalid stream + prefix combination, assuming audio.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="59:13" pos:end="96:23"><if pos:start="59:13" pos:end="96:23">if<condition pos:start="59:15" pos:end="61:47">(   <expr pos:start="59:19" pos:end="61:46"><operator pos:start="59:19" pos:end="59:19">(</operator><name pos:start="59:20" pos:end="59:30"><name pos:start="59:20" pos:end="59:21">st</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:30">discard</name></name> <operator pos:start="59:32" pos:end="59:33">&gt;=</operator> <name pos:start="59:35" pos:end="59:51">AVDISCARD_DEFAULT</name> <operator pos:start="59:53" pos:end="59:54">&amp;&amp;</operator> <name pos:start="59:56" pos:end="59:59">size</name><operator pos:start="59:60" pos:end="59:61">==</operator><literal type="number" pos:start="59:62" pos:end="59:62">0</literal><operator pos:start="59:63" pos:end="59:63">)</operator>
               <comment type="block" pos:start="60:16" pos:end="60:90">/*|| (st-&gt;discard &gt;= AVDISCARD_NONKEY &amp;&amp; !(pkt-&gt;flags &amp; AV_PKT_FLAG_KEY))*/</comment> <comment type="line" pos:start="60:92" pos:end="60:124">//FIXME needs a little reordering</comment>
               <operator pos:start="61:16" pos:end="61:17">||</operator> <name pos:start="61:19" pos:end="61:29"><name pos:start="61:19" pos:end="61:20">st</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:29">discard</name></name> <operator pos:start="61:31" pos:end="61:32">&gt;=</operator> <name pos:start="61:34" pos:end="61:46">AVDISCARD_ALL</name></expr>)</condition><block pos:start="61:48" pos:end="96:23">{<block_content pos:start="62:17" pos:end="96:23">
                <if_stmt pos:start="62:17" pos:end="96:23"><if pos:start="62:17" pos:end="96:23">if <condition pos:start="62:20" pos:end="62:32">(<expr pos:start="62:21" pos:end="62:31"><operator pos:start="62:21" pos:end="62:21">!</operator><name pos:start="62:22" pos:end="62:31">exit_early</name></expr>)</condition> <block pos:start="62:34" pos:end="96:23">{<block_content pos:start="63:21" pos:end="96:23">
                    <expr_stmt pos:start="63:21" pos:end="63:65"><expr pos:start="63:21" pos:end="63:64"><name pos:start="63:21" pos:end="63:37"><name pos:start="63:21" pos:end="63:23">ast</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:37">frame_offset</name></name> <operator pos:start="63:39" pos:end="63:40">+=</operator> <call pos:start="63:42" pos:end="63:64"><name pos:start="63:42" pos:end="63:53">get_duration</name><argument_list pos:start="63:54" pos:end="63:64">(<argument pos:start="63:55" pos:end="63:57"><expr pos:start="63:55" pos:end="63:57"><name pos:start="63:55" pos:end="63:57">ast</name></expr></argument>, <argument pos:start="63:60" pos:end="63:63"><expr pos:start="63:60" pos:end="63:63"><name pos:start="63:60" pos:end="63:63">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="64:17" pos:end="64:36"><expr pos:start="64:17" pos:end="64:35"><call pos:start="64:17" pos:end="64:35"><name pos:start="64:17" pos:end="64:25">avio_skip</name><argument_list pos:start="64:26" pos:end="64:35">(<argument pos:start="64:27" pos:end="64:28"><expr pos:start="64:27" pos:end="64:28"><name pos:start="64:27" pos:end="64:28">pb</name></expr></argument>, <argument pos:start="64:31" pos:end="64:34"><expr pos:start="64:31" pos:end="64:34"><name pos:start="64:31" pos:end="64:34">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <goto pos:start="65:17" pos:end="65:32">goto <name pos:start="65:22" pos:end="65:31">start_sync</name>;</goto>
            <if_stmt pos:start="66:13" pos:end="96:23"><if pos:start="66:13" pos:end="74:13">if <condition pos:start="66:16" pos:end="66:60">(<expr pos:start="66:17" pos:end="66:59"><name pos:start="66:17" pos:end="66:20"><name pos:start="66:17" pos:end="66:17">d</name><index pos:start="66:18" pos:end="66:20">[<expr pos:start="66:19" pos:end="66:19"><literal type="number" pos:start="66:19" pos:end="66:19">2</literal></expr>]</index></name> <operator pos:start="66:22" pos:end="66:23">==</operator> <literal type="char" pos:start="66:25" pos:end="66:27">'p'</literal> <operator pos:start="66:29" pos:end="66:30">&amp;&amp;</operator> <name pos:start="66:32" pos:end="66:35"><name pos:start="66:32" pos:end="66:32">d</name><index pos:start="66:33" pos:end="66:35">[<expr pos:start="66:34" pos:end="66:34"><literal type="number" pos:start="66:34" pos:end="66:34">3</literal></expr>]</index></name> <operator pos:start="66:37" pos:end="66:38">==</operator> <literal type="char" pos:start="66:40" pos:end="66:42">'c'</literal> <operator pos:start="66:44" pos:end="66:45">&amp;&amp;</operator> <name pos:start="66:47" pos:end="66:50">size</name><operator pos:start="66:51" pos:end="66:52">&lt;=</operator><literal type="number" pos:start="66:53" pos:end="66:53">4</literal><operator pos:start="66:54" pos:end="66:54">*</operator><literal type="number" pos:start="66:55" pos:end="66:58">256</literal><operator pos:start="66:58" pos:end="66:58">+</operator><literal type="number" pos:start="66:59" pos:end="66:59">4</literal></expr>)</condition> <block pos:start="66:62" pos:end="74:13">{<block_content pos:start="67:17" pos:end="73:32">
                <decl_stmt pos:start="67:17" pos:end="67:36"><decl pos:start="67:17" pos:end="67:35"><type pos:start="67:17" pos:end="67:19"><name pos:start="67:17" pos:end="67:19">int</name></type> <name pos:start="67:21" pos:end="67:21">k</name> <init pos:start="67:23" pos:end="67:35">= <expr pos:start="67:25" pos:end="67:35"><call pos:start="67:25" pos:end="67:35"><name pos:start="67:25" pos:end="67:31">avio_r8</name><argument_list pos:start="67:32" pos:end="67:35">(<argument pos:start="67:33" pos:end="67:34"><expr pos:start="67:33" pos:end="67:34"><name pos:start="67:33" pos:end="67:34">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="68:17" pos:end="68:56"><decl pos:start="68:17" pos:end="68:55"><type pos:start="68:17" pos:end="68:19"><name pos:start="68:17" pos:end="68:19">int</name></type> <name pos:start="68:21" pos:end="68:24">last</name> <init pos:start="68:26" pos:end="68:55">= <expr pos:start="68:28" pos:end="68:55"><operator pos:start="68:28" pos:end="68:28">(</operator><name pos:start="68:29" pos:end="68:29">k</name> <operator pos:start="68:31" pos:end="68:31">+</operator> <call pos:start="68:33" pos:end="68:43"><name pos:start="68:33" pos:end="68:39">avio_r8</name><argument_list pos:start="68:40" pos:end="68:43">(<argument pos:start="68:41" pos:end="68:42"><expr pos:start="68:41" pos:end="68:42"><name pos:start="68:41" pos:end="68:42">pb</name></expr></argument>)</argument_list></call> <operator pos:start="68:45" pos:end="68:45">-</operator> <literal type="number" pos:start="68:47" pos:end="68:47">1</literal><operator pos:start="68:48" pos:end="68:48">)</operator> <operator pos:start="68:50" pos:end="68:50">&amp;</operator> <literal type="number" pos:start="68:52" pos:end="68:55">0xFF</literal></expr></init></decl>;</decl_stmt>
                <expr_stmt pos:start="69:17" pos:end="69:30"><expr pos:start="69:17" pos:end="69:29"><call pos:start="69:17" pos:end="69:29"><name pos:start="69:17" pos:end="69:25">avio_rl16</name><argument_list pos:start="69:26" pos:end="69:29">(<argument pos:start="69:27" pos:end="69:28"><expr pos:start="69:27" pos:end="69:28"><name pos:start="69:27" pos:end="69:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="69:32" pos:end="69:38">//flags</comment>
                <for pos:start="70:17" pos:end="71:62">for <control pos:start="70:21" pos:end="70:38">(<init pos:start="70:22" pos:end="70:22">;</init> <condition pos:start="70:24" pos:end="70:33"><expr pos:start="70:24" pos:end="70:32"><name pos:start="70:24" pos:end="70:24">k</name> <operator pos:start="70:26" pos:end="70:27">&lt;=</operator> <name pos:start="70:29" pos:end="70:32">last</name></expr>;</condition> <incr pos:start="70:35" pos:end="70:37"><expr pos:start="70:35" pos:end="70:37"><name pos:start="70:35" pos:end="70:35">k</name><operator pos:start="70:36" pos:end="70:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="71:21" pos:end="71:62"><block_content pos:start="71:21" pos:end="71:62">
                    <expr_stmt pos:start="71:21" pos:end="71:62"><expr pos:start="71:21" pos:end="71:61"><name pos:start="71:21" pos:end="71:31"><name pos:start="71:21" pos:end="71:23">ast</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:28">pal</name><index pos:start="71:29" pos:end="71:31">[<expr pos:start="71:30" pos:end="71:30"><name pos:start="71:30" pos:end="71:30">k</name></expr>]</index></name> <operator pos:start="71:33" pos:end="71:33">=</operator> <literal type="number" pos:start="71:35" pos:end="71:38">0xFF</literal><operator pos:start="71:39" pos:end="71:40">&lt;&lt;</operator><literal type="number" pos:start="71:41" pos:end="71:42">24</literal> <operator pos:start="71:44" pos:end="71:44">|</operator> <call pos:start="71:46" pos:end="71:58"><name pos:start="71:46" pos:end="71:54">avio_rb32</name><argument_list pos:start="71:55" pos:end="71:58">(<argument pos:start="71:56" pos:end="71:57"><expr pos:start="71:56" pos:end="71:57"><name pos:start="71:56" pos:end="71:57">pb</name></expr></argument>)</argument_list></call><operator pos:start="71:59" pos:end="71:60">&gt;&gt;</operator><literal type="number" pos:start="71:61" pos:end="71:61">8</literal></expr>;</expr_stmt></block_content></block></for><comment type="line" pos:start="71:63" pos:end="71:90">// b + (g &lt;&lt; 8) + (r &lt;&lt; 16);</comment>
                <expr_stmt pos:start="72:17" pos:end="72:32"><expr pos:start="72:17" pos:end="72:31"><name pos:start="72:17" pos:end="72:28"><name pos:start="72:17" pos:end="72:19">ast</name><operator pos:start="72:20" pos:end="72:21">-&gt;</operator><name pos:start="72:22" pos:end="72:28">has_pal</name></name><operator pos:start="72:29" pos:end="72:29">=</operator> <literal type="number" pos:start="72:31" pos:end="72:31">1</literal></expr>;</expr_stmt>
                <goto pos:start="73:17" pos:end="73:32">goto <name pos:start="73:22" pos:end="73:31">start_sync</name>;</goto>
            </block_content>}</block></if> <if type="elseif" pos:start="74:15" pos:end="96:23">else if<condition pos:start="74:22" pos:end="77:56">(   <expr pos:start="74:26" pos:end="75:53"><operator pos:start="74:26" pos:end="74:26">(</operator><operator pos:start="74:27" pos:end="74:27">(</operator><name pos:start="74:28" pos:end="74:44"><name pos:start="74:28" pos:end="74:30">ast</name><operator pos:start="74:31" pos:end="74:32">-&gt;</operator><name pos:start="74:33" pos:end="74:44">prefix_count</name></name><operator pos:start="74:45" pos:end="74:45">&lt;</operator><literal type="number" pos:start="74:46" pos:end="74:46">5</literal> <operator pos:start="74:48" pos:end="74:49">||</operator> <name pos:start="74:51" pos:end="74:54">sync</name><operator pos:start="74:55" pos:end="74:55">+</operator><literal type="number" pos:start="74:56" pos:end="74:56">9</literal> <operator pos:start="74:58" pos:end="74:58">&gt;</operator> <name pos:start="74:60" pos:end="74:60">i</name><operator pos:start="74:61" pos:end="74:61">)</operator> <operator pos:start="74:63" pos:end="74:64">&amp;&amp;</operator> <name pos:start="74:66" pos:end="74:69"><name pos:start="74:66" pos:end="74:66">d</name><index pos:start="74:67" pos:end="74:69">[<expr pos:start="74:68" pos:end="74:68"><literal type="number" pos:start="74:68" pos:end="74:68">2</literal></expr>]</index></name><operator pos:start="74:70" pos:end="74:70">&lt;</operator><literal type="number" pos:start="74:71" pos:end="74:73">128</literal> <operator pos:start="74:75" pos:end="74:76">&amp;&amp;</operator> <name pos:start="74:78" pos:end="74:81"><name pos:start="74:78" pos:end="74:78">d</name><index pos:start="74:79" pos:end="74:81">[<expr pos:start="74:80" pos:end="74:80"><literal type="number" pos:start="74:80" pos:end="74:80">3</literal></expr>]</index></name><operator pos:start="74:82" pos:end="74:82">&lt;</operator><literal type="number" pos:start="74:83" pos:end="74:85">128</literal><operator pos:start="74:86" pos:end="74:86">)</operator> <operator pos:start="74:88" pos:end="74:89">||</operator>
                         <name pos:start="75:26" pos:end="75:29"><name pos:start="75:26" pos:end="75:26">d</name><index pos:start="75:27" pos:end="75:29">[<expr pos:start="75:28" pos:end="75:28"><literal type="number" pos:start="75:28" pos:end="75:28">2</literal></expr>]</index></name><operator pos:start="75:30" pos:end="75:30">*</operator><literal type="number" pos:start="75:31" pos:end="75:34">256</literal><operator pos:start="75:34" pos:end="75:34">+</operator><name pos:start="75:35" pos:end="75:38"><name pos:start="75:35" pos:end="75:35">d</name><index pos:start="75:36" pos:end="75:38">[<expr pos:start="75:37" pos:end="75:37"><literal type="number" pos:start="75:37" pos:end="75:37">3</literal></expr>]</index></name> <operator pos:start="75:40" pos:end="75:41">==</operator> <name pos:start="75:43" pos:end="75:53"><name pos:start="75:43" pos:end="75:45">ast</name><operator pos:start="75:46" pos:end="75:47">-&gt;</operator><name pos:start="75:48" pos:end="75:53">prefix</name></name></expr> <comment type="block" pos:start="75:55" pos:end="77:55">/*||
                         (d[2] == 'd' &amp;&amp; d[3] == 'c') ||
                         (d[2] == 'w' &amp;&amp; d[3] == 'b')*/</comment>)</condition> <block pos:start="77:58" pos:end="96:23">{<block_content pos:start="78:17" pos:end="96:23">
                <if_stmt pos:start="78:17" pos:end="79:29"><if pos:start="78:17" pos:end="79:29">if <condition pos:start="78:20" pos:end="78:31">(<expr pos:start="78:21" pos:end="78:30"><name pos:start="78:21" pos:end="78:30">exit_early</name></expr>)</condition><block type="pseudo" pos:start="79:21" pos:end="79:29"><block_content pos:start="79:21" pos:end="79:29">
                    <return pos:start="79:21" pos:end="79:29">return <expr pos:start="79:28" pos:end="79:28"><literal type="number" pos:start="79:28" pos:end="79:28">0</literal></expr>;</return></block_content></block></if></if_stmt>
<comment type="line" pos:start="80:1" pos:end="80:34">//av_log(s, AV_LOG_DEBUG, "OK\n");</comment>
                <if_stmt pos:start="81:17" pos:end="96:23"><if pos:start="81:17" pos:end="82:40">if<condition pos:start="81:19" pos:end="81:48">(<expr pos:start="81:20" pos:end="81:47"><name pos:start="81:20" pos:end="81:23"><name pos:start="81:20" pos:end="81:20">d</name><index pos:start="81:21" pos:end="81:23">[<expr pos:start="81:22" pos:end="81:22"><literal type="number" pos:start="81:22" pos:end="81:22">2</literal></expr>]</index></name><operator pos:start="81:24" pos:end="81:24">*</operator><literal type="number" pos:start="81:25" pos:end="81:28">256</literal><operator pos:start="81:28" pos:end="81:28">+</operator><name pos:start="81:29" pos:end="81:32"><name pos:start="81:29" pos:end="81:29">d</name><index pos:start="81:30" pos:end="81:32">[<expr pos:start="81:31" pos:end="81:31"><literal type="number" pos:start="81:31" pos:end="81:31">3</literal></expr>]</index></name> <operator pos:start="81:34" pos:end="81:35">==</operator> <name pos:start="81:37" pos:end="81:47"><name pos:start="81:37" pos:end="81:39">ast</name><operator pos:start="81:40" pos:end="81:41">-&gt;</operator><name pos:start="81:42" pos:end="81:47">prefix</name></name></expr>)</condition><block type="pseudo" pos:start="82:21" pos:end="82:40"><block_content pos:start="82:21" pos:end="82:40">
                    <expr_stmt pos:start="82:21" pos:end="82:40"><expr pos:start="82:21" pos:end="82:39"><name pos:start="82:21" pos:end="82:37"><name pos:start="82:21" pos:end="82:23">ast</name><operator pos:start="82:24" pos:end="82:25">-&gt;</operator><name pos:start="82:26" pos:end="82:37">prefix_count</name></name><operator pos:start="82:38" pos:end="82:39">++</operator></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="83:17" pos:end="96:23">else<block pos:start="83:21" pos:end="96:23">{<block_content pos:start="84:21" pos:end="96:23">
                    <expr_stmt pos:start="84:21" pos:end="84:47"><expr pos:start="84:21" pos:end="84:46"><name pos:start="84:21" pos:end="84:31"><name pos:start="84:21" pos:end="84:23">ast</name><operator pos:start="84:24" pos:end="84:25">-&gt;</operator><name pos:start="84:26" pos:end="84:31">prefix</name></name><operator pos:start="84:32" pos:end="84:32">=</operator> <name pos:start="84:34" pos:end="84:37"><name pos:start="84:34" pos:end="84:34">d</name><index pos:start="84:35" pos:end="84:37">[<expr pos:start="84:36" pos:end="84:36"><literal type="number" pos:start="84:36" pos:end="84:36">2</literal></expr>]</index></name><operator pos:start="84:38" pos:end="84:38">*</operator><literal type="number" pos:start="84:39" pos:end="84:42">256</literal><operator pos:start="84:42" pos:end="84:42">+</operator><name pos:start="84:43" pos:end="84:46"><name pos:start="84:43" pos:end="84:43">d</name><index pos:start="84:44" pos:end="84:46">[<expr pos:start="84:45" pos:end="84:45"><literal type="number" pos:start="84:45" pos:end="84:45">3</literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="85:21" pos:end="85:41"><expr pos:start="85:21" pos:end="85:40"><name pos:start="85:21" pos:end="85:37"><name pos:start="85:21" pos:end="85:23">ast</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:37">prefix_count</name></name><operator pos:start="85:38" pos:end="85:38">=</operator> <literal type="number" pos:start="85:40" pos:end="85:40">0</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="86:17" pos:end="86:37"><expr pos:start="86:17" pos:end="86:36"><name pos:start="86:17" pos:end="86:33"><name pos:start="86:17" pos:end="86:19">avi</name><operator pos:start="86:20" pos:end="86:21">-&gt;</operator><name pos:start="86:22" pos:end="86:33">stream_index</name></name><operator pos:start="86:34" pos:end="86:34">=</operator> <name pos:start="86:36" pos:end="86:36">n</name></expr>;</expr_stmt>
                <expr_stmt pos:start="87:17" pos:end="87:43"><expr pos:start="87:17" pos:end="87:42"><name pos:start="87:17" pos:end="87:32"><name pos:start="87:17" pos:end="87:19">ast</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:32">packet_size</name></name><operator pos:start="87:33" pos:end="87:33">=</operator> <name pos:start="87:35" pos:end="87:38">size</name> <operator pos:start="87:40" pos:end="87:40">+</operator> <literal type="number" pos:start="87:42" pos:end="87:42">8</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="88:17" pos:end="88:37"><expr pos:start="88:17" pos:end="88:36"><name pos:start="88:17" pos:end="88:30"><name pos:start="88:17" pos:end="88:19">ast</name><operator pos:start="88:20" pos:end="88:21">-&gt;</operator><name pos:start="88:22" pos:end="88:30">remaining</name></name><operator pos:start="88:31" pos:end="88:31">=</operator> <name pos:start="88:33" pos:end="88:36">size</name></expr>;</expr_stmt>
                <if_stmt pos:start="89:17" pos:end="96:23"><if pos:start="89:17" pos:end="96:23">if<condition pos:start="89:19" pos:end="89:45">(<expr pos:start="89:20" pos:end="89:44"><name pos:start="89:20" pos:end="89:23">size</name> <operator pos:start="89:25" pos:end="89:26">||</operator> <operator pos:start="89:28" pos:end="89:28">!</operator><name pos:start="89:29" pos:end="89:44"><name pos:start="89:29" pos:end="89:31">ast</name><operator pos:start="89:32" pos:end="89:33">-&gt;</operator><name pos:start="89:34" pos:end="89:44">sample_size</name></name></expr>)</condition><block pos:start="89:46" pos:end="96:23">{<block_content pos:start="90:21" pos:end="96:23">
                    <decl_stmt pos:start="90:21" pos:end="90:52"><decl pos:start="90:21" pos:end="90:51"><type pos:start="90:21" pos:end="90:28"><name pos:start="90:21" pos:end="90:28">uint64_t</name></type> <name pos:start="90:30" pos:end="90:32">pos</name><init pos:start="90:33" pos:end="90:51">= <expr pos:start="90:35" pos:end="90:51"><call pos:start="90:35" pos:end="90:47"><name pos:start="90:35" pos:end="90:43">avio_tell</name><argument_list pos:start="90:44" pos:end="90:47">(<argument pos:start="90:45" pos:end="90:46"><expr pos:start="90:45" pos:end="90:46"><name pos:start="90:45" pos:end="90:46">pb</name></expr></argument>)</argument_list></call> <operator pos:start="90:49" pos:end="90:49">-</operator> <literal type="number" pos:start="90:51" pos:end="90:51">8</literal></expr></init></decl>;</decl_stmt>
                    <if_stmt pos:start="91:21" pos:end="96:23"><if pos:start="91:21" pos:end="96:23">if<condition pos:start="91:23" pos:end="91:124">(<expr pos:start="91:24" pos:end="91:123"><operator pos:start="91:24" pos:end="91:24">!</operator><name pos:start="91:25" pos:end="91:41"><name pos:start="91:25" pos:end="91:26">st</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:41">index_entries</name></name> <operator pos:start="91:43" pos:end="91:44">||</operator> <operator pos:start="91:46" pos:end="91:46">!</operator><name pos:start="91:47" pos:end="91:66"><name pos:start="91:47" pos:end="91:48">st</name><operator pos:start="91:49" pos:end="91:50">-&gt;</operator><name pos:start="91:51" pos:end="91:66">nb_index_entries</name></name> <operator pos:start="91:68" pos:end="91:69">||</operator> <name pos:start="91:71" pos:end="91:113"><name pos:start="91:71" pos:end="91:72">st</name><operator pos:start="91:73" pos:end="91:74">-&gt;</operator><name pos:start="91:75" pos:end="91:87">index_entries</name><index pos:start="91:88" pos:end="91:113">[<expr pos:start="91:89" pos:end="91:112"><name pos:start="91:89" pos:end="91:108"><name pos:start="91:89" pos:end="91:90">st</name><operator pos:start="91:91" pos:end="91:92">-&gt;</operator><name pos:start="91:93" pos:end="91:108">nb_index_entries</name></name> <operator pos:start="91:110" pos:end="91:110">-</operator> <literal type="number" pos:start="91:112" pos:end="91:112">1</literal></expr>]</index></name><operator pos:start="91:114" pos:end="91:114">.</operator><name pos:start="91:115" pos:end="91:117">pos</name> <operator pos:start="91:119" pos:end="91:119">&lt;</operator> <name pos:start="91:121" pos:end="91:123">pos</name></expr>)</condition><block pos:start="91:125" pos:end="96:23">{<block_content pos:start="92:25" pos:end="96:23">
                        <expr_stmt pos:start="92:25" pos:end="92:98"><expr pos:start="92:25" pos:end="92:97"><call pos:start="92:25" pos:end="92:97"><name pos:start="92:25" pos:end="92:42">av_add_index_entry</name><argument_list pos:start="92:43" pos:end="92:97">(<argument pos:start="92:44" pos:end="92:45"><expr pos:start="92:44" pos:end="92:45"><name pos:start="92:44" pos:end="92:45">st</name></expr></argument>, <argument pos:start="92:48" pos:end="92:50"><expr pos:start="92:48" pos:end="92:50"><name pos:start="92:48" pos:end="92:50">pos</name></expr></argument>, <argument pos:start="92:53" pos:end="92:69"><expr pos:start="92:53" pos:end="92:69"><name pos:start="92:53" pos:end="92:69"><name pos:start="92:53" pos:end="92:55">ast</name><operator pos:start="92:56" pos:end="92:57">-&gt;</operator><name pos:start="92:58" pos:end="92:69">frame_offset</name></name></expr></argument>, <argument pos:start="92:72" pos:end="92:75"><expr pos:start="92:72" pos:end="92:75"><name pos:start="92:72" pos:end="92:75">size</name></expr></argument>, <argument pos:start="92:78" pos:end="92:78"><expr pos:start="92:78" pos:end="92:78"><literal type="number" pos:start="92:78" pos:end="92:78">0</literal></expr></argument>, <argument pos:start="92:81" pos:end="92:96"><expr pos:start="92:81" pos:end="92:96"><name pos:start="92:81" pos:end="92:96">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:start="93:17" pos:end="93:25">return <expr pos:start="93:24" pos:end="93:24"><literal type="number" pos:start="93:24" pos:end="93:24">0</literal></expr>;</return>
    <if_stmt pos:start="94:5" pos:end="95:25"><if pos:start="94:5" pos:end="95:25">if<condition pos:start="94:7" pos:end="94:17">(<expr pos:start="94:8" pos:end="94:16"><name pos:start="94:8" pos:end="94:16"><name pos:start="94:8" pos:end="94:9">pb</name><operator pos:start="94:10" pos:end="94:11">-&gt;</operator><name pos:start="94:12" pos:end="94:16">error</name></name></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:25"><block_content pos:start="95:9" pos:end="95:25">
        <return pos:start="95:9" pos:end="95:25">return <expr pos:start="95:16" pos:end="95:24"><name pos:start="95:16" pos:end="95:24"><name pos:start="95:16" pos:end="95:17">pb</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:24">error</name></name></expr>;</return></block_content></block></if></if_stmt>
    <return pos:start="96:5" pos:end="96:23">return <expr pos:start="96:12" pos:end="96:22"><name pos:start="96:12" pos:end="96:22">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></function></unit>
