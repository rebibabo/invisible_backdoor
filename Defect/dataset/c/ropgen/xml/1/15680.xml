<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15680.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">ppc_cpu_unrealizefn</name><parameter_list pos:start="1:32" pos:end="1:63">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:43">DeviceState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">dev</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:55">Error</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier><modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:5">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">PowerPCCPU</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">cpu</name> <init pos:start="5:21" pos:end="5:38">= <expr pos:start="5:23" pos:end="5:38"><call pos:start="5:23" pos:end="5:38"><name pos:start="5:23" pos:end="5:33">POWERPC_CPU</name><argument_list pos:start="5:34" pos:end="5:38">(<argument pos:start="5:35" pos:end="5:37"><expr pos:start="5:35" pos:end="5:37"><name pos:start="5:35" pos:end="5:37">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">CPUPPCState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">env</name> <init pos:start="7:22" pos:end="7:32">= <expr pos:start="7:24" pos:end="7:32"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:27">cpu</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:17">opc_handler_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier><modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:25">table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:28"><expr pos:start="15:5" pos:end="15:27"><call pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:17">cpu_exec_exit</name><argument_list pos:start="15:18" pos:end="15:27">(<argument pos:start="15:19" pos:end="15:26"><expr pos:start="15:19" pos:end="15:26"><call pos:start="15:19" pos:end="15:26"><name pos:start="15:19" pos:end="15:21">CPU</name><argument_list pos:start="15:22" pos:end="15:26">(<argument pos:start="15:23" pos:end="15:25"><expr pos:start="15:23" pos:end="15:25"><name pos:start="15:23" pos:end="15:25">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="19:5" pos:end="51:5">for <control pos:start="19:9" pos:end="19:45">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:40"><expr pos:start="19:17" pos:end="19:39"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:39">PPC_CPU_OPCODES_LEN</name></expr>;</condition> <incr pos:start="19:42" pos:end="19:44"><expr pos:start="19:42" pos:end="19:44"><name pos:start="19:42" pos:end="19:42">i</name><operator pos:start="19:43" pos:end="19:44">++</operator></expr></incr>)</control> <block pos:start="19:47" pos:end="51:5">{<block_content pos:start="21:9" pos:end="49:9">

        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:48">(<expr pos:start="21:13" pos:end="21:47"><name pos:start="21:13" pos:end="21:27"><name pos:start="21:13" pos:end="21:15">env</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:24">opcodes</name><index pos:start="21:25" pos:end="21:27">[<expr pos:start="21:26" pos:end="21:26"><name pos:start="21:26" pos:end="21:26">i</name></expr>]</index></name> <operator pos:start="21:29" pos:end="21:30">==</operator> <operator pos:start="21:32" pos:end="21:32">&amp;</operator><name pos:start="21:33" pos:end="21:47">invalid_handler</name></expr>)</condition> <block pos:start="21:50" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:21">

            <continue pos:start="23:13" pos:end="23:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="27:9" pos:end="49:9"><if pos:start="27:9" pos:end="49:9">if <condition pos:start="27:12" pos:end="27:48">(<expr pos:start="27:13" pos:end="27:47"><call pos:start="27:13" pos:end="27:47"><name pos:start="27:13" pos:end="27:30">is_indirect_opcode</name><argument_list pos:start="27:31" pos:end="27:47">(<argument pos:start="27:32" pos:end="27:46"><expr pos:start="27:32" pos:end="27:46"><name pos:start="27:32" pos:end="27:46"><name pos:start="27:32" pos:end="27:34">env</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:43">opcodes</name><index pos:start="27:44" pos:end="27:46">[<expr pos:start="27:45" pos:end="27:45"><name pos:start="27:45" pos:end="27:45">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:50" pos:end="49:9">{<block_content pos:start="29:13" pos:end="47:32">

            <expr_stmt pos:start="29:13" pos:end="29:47"><expr pos:start="29:13" pos:end="29:46"><name pos:start="29:13" pos:end="29:17">table</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <call pos:start="29:21" pos:end="29:46"><name pos:start="29:21" pos:end="29:29">ind_table</name><argument_list pos:start="29:30" pos:end="29:46">(<argument pos:start="29:31" pos:end="29:45"><expr pos:start="29:31" pos:end="29:45"><name pos:start="29:31" pos:end="29:45"><name pos:start="29:31" pos:end="29:33">env</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:42">opcodes</name><index pos:start="29:43" pos:end="29:45">[<expr pos:start="29:44" pos:end="29:44"><name pos:start="29:44" pos:end="29:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="31:13" pos:end="43:13">for <control pos:start="31:17" pos:end="31:62">(<init pos:start="31:18" pos:end="31:23"><expr pos:start="31:18" pos:end="31:22"><name pos:start="31:18" pos:end="31:18">j</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr>;</init> <condition pos:start="31:25" pos:end="31:57"><expr pos:start="31:25" pos:end="31:56"><name pos:start="31:25" pos:end="31:25">j</name> <operator pos:start="31:27" pos:end="31:27">&lt;</operator> <name pos:start="31:29" pos:end="31:56">PPC_CPU_INDIRECT_OPCODES_LEN</name></expr>;</condition> <incr pos:start="31:59" pos:end="31:61"><expr pos:start="31:59" pos:end="31:61"><name pos:start="31:59" pos:end="31:59">j</name><operator pos:start="31:60" pos:end="31:61">++</operator></expr></incr>)</control> <block pos:start="31:64" pos:end="43:13">{<block_content pos:start="33:17" pos:end="41:17">

                <if_stmt pos:start="33:17" pos:end="41:17"><if pos:start="33:17" pos:end="41:17">if <condition pos:start="33:20" pos:end="35:53">(<expr pos:start="33:21" pos:end="35:52"><name pos:start="33:21" pos:end="33:28"><name pos:start="33:21" pos:end="33:25">table</name><index pos:start="33:26" pos:end="33:28">[<expr pos:start="33:27" pos:end="33:27"><name pos:start="33:27" pos:end="33:27">j</name></expr>]</index></name> <operator pos:start="33:30" pos:end="33:31">!=</operator> <operator pos:start="33:33" pos:end="33:33">&amp;</operator><name pos:start="33:34" pos:end="33:48">invalid_handler</name> <operator pos:start="33:50" pos:end="33:51">&amp;&amp;</operator>

                        <call pos:start="35:25" pos:end="35:52"><name pos:start="35:25" pos:end="35:42">is_indirect_opcode</name><argument_list pos:start="35:43" pos:end="35:52">(<argument pos:start="35:44" pos:end="35:51"><expr pos:start="35:44" pos:end="35:51"><name pos:start="35:44" pos:end="35:51"><name pos:start="35:44" pos:end="35:48">table</name><index pos:start="35:49" pos:end="35:51">[<expr pos:start="35:50" pos:end="35:50"><name pos:start="35:50" pos:end="35:50">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:55" pos:end="41:17">{<block_content pos:start="37:21" pos:end="39:40">

                    <expr_stmt pos:start="37:21" pos:end="39:40"><expr pos:start="37:21" pos:end="39:39"><call pos:start="37:21" pos:end="39:39"><name pos:start="37:21" pos:end="37:26">g_free</name><argument_list pos:start="37:27" pos:end="39:39">(<argument pos:start="37:28" pos:end="39:38"><expr pos:start="37:28" pos:end="39:38"><operator pos:start="37:28" pos:end="37:28">(</operator><name pos:start="37:29" pos:end="37:41">opc_handler_t</name> <operator pos:start="37:43" pos:end="37:43">*</operator><operator pos:start="37:44" pos:end="37:44">)</operator><operator pos:start="37:45" pos:end="37:45">(</operator><operator pos:start="37:46" pos:end="37:46">(</operator><name pos:start="37:47" pos:end="37:55">uintptr_t</name><operator pos:start="37:56" pos:end="37:56">)</operator><name pos:start="37:57" pos:end="37:64"><name pos:start="37:57" pos:end="37:61">table</name><index pos:start="37:62" pos:end="37:64">[<expr pos:start="37:63" pos:end="37:63"><name pos:start="37:63" pos:end="37:63">j</name></expr>]</index></name> <operator pos:start="37:66" pos:end="37:66">&amp;</operator>

                        <operator pos:start="39:25" pos:end="39:25">~</operator><name pos:start="39:26" pos:end="39:37">PPC_INDIRECT</name><operator pos:start="39:38" pos:end="39:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="45:13" pos:end="47:32"><expr pos:start="45:13" pos:end="47:31"><call pos:start="45:13" pos:end="47:31"><name pos:start="45:13" pos:end="45:18">g_free</name><argument_list pos:start="45:19" pos:end="47:31">(<argument pos:start="45:20" pos:end="47:30"><expr pos:start="45:20" pos:end="47:30"><operator pos:start="45:20" pos:end="45:20">(</operator><name pos:start="45:21" pos:end="45:33">opc_handler_t</name> <operator pos:start="45:35" pos:end="45:35">*</operator><operator pos:start="45:36" pos:end="45:36">)</operator><operator pos:start="45:37" pos:end="45:37">(</operator><operator pos:start="45:38" pos:end="45:38">(</operator><name pos:start="45:39" pos:end="45:47">uintptr_t</name><operator pos:start="45:48" pos:end="45:48">)</operator><name pos:start="45:49" pos:end="45:63"><name pos:start="45:49" pos:end="45:51">env</name><operator pos:start="45:52" pos:end="45:53">-&gt;</operator><name pos:start="45:54" pos:end="45:60">opcodes</name><index pos:start="45:61" pos:end="45:63">[<expr pos:start="45:62" pos:end="45:62"><name pos:start="45:62" pos:end="45:62">i</name></expr>]</index></name> <operator pos:start="45:65" pos:end="45:65">&amp;</operator>

                <operator pos:start="47:17" pos:end="47:17">~</operator><name pos:start="47:18" pos:end="47:29">PPC_INDIRECT</name><operator pos:start="47:30" pos:end="47:30">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
