<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2132.c" pos:tabs="8"><function pos:start="1:1" pos:end="227:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">wma_decode_superframe</name><parameter_list pos:start="1:33" pos:end="3:69">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:66"><decl pos:start="1:57" pos:end="1:66"><type pos:start="1:57" pos:end="1:66"><name pos:start="1:57" pos:end="1:60">void</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">data</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:51"><decl pos:start="3:34" pos:end="3:51"><type pos:start="3:34" pos:end="3:51"><name pos:start="3:34" pos:end="3:36">int</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:51">got_frame_ptr</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:68"><decl pos:start="3:54" pos:end="3:68"><type pos:start="3:54" pos:end="3:68"><name pos:start="3:54" pos:end="3:61">AVPacket</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:68">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="227:1">{<block_content pos:start="7:5" pos:end="225:14">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name> <init pos:start="9:18" pos:end="9:30">= <expr pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:24">avpkt</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">WMACodecContext</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:22">s</name> <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:48"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">nb_frames</name></decl>, <decl pos:start="13:20" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:20" pos:end="13:29">bit_offset</name></decl>, <decl pos:start="13:32" pos:end="13:32"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:32" pos:end="13:32">i</name></decl>, <decl pos:start="13:35" pos:end="13:37"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:35" pos:end="13:37">pos</name></decl>, <decl pos:start="13:40" pos:end="13:42"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:40" pos:end="13:42">len</name></decl>, <decl pos:start="13:45" pos:end="13:47"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:45" pos:end="13:47">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:14">q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">int16_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:20">samples</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:46"><expr pos:start="21:5" pos:end="21:45"><call pos:start="21:5" pos:end="21:45"><name pos:start="21:5" pos:end="21:11">tprintf</name><argument_list pos:start="21:12" pos:end="21:45">(<argument pos:start="21:13" pos:end="21:17"><expr pos:start="21:13" pos:end="21:17"><name pos:start="21:13" pos:end="21:17">avctx</name></expr></argument>, <argument pos:start="21:20" pos:end="21:44"><expr pos:start="21:20" pos:end="21:44"><literal type="string" pos:start="21:20" pos:end="21:44">"***decode_superframe:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if<condition pos:start="25:7" pos:end="25:19">(<expr pos:start="25:8" pos:end="25:18"><name pos:start="25:8" pos:end="25:15">buf_size</name><operator pos:start="25:16" pos:end="25:17">==</operator><literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>)</condition><block pos:start="25:20" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:17">

        <expr_stmt pos:start="27:9" pos:end="27:35"><expr pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:30">last_superframe_len</name></name> <operator pos:start="27:32" pos:end="27:32">=</operator> <literal type="number" pos:start="27:34" pos:end="27:34">0</literal></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="35:17"><if pos:start="33:5" pos:end="35:17">if <condition pos:start="33:8" pos:end="33:34">(<expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:16">buf_size</name> <operator pos:start="33:18" pos:end="33:18">&lt;</operator> <name pos:start="33:20" pos:end="33:33"><name pos:start="33:20" pos:end="33:20">s</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:33">block_align</name></name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:17"><block_content pos:start="35:9" pos:end="35:17">

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:30"><expr pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:12">buf_size</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:29"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:29">block_align</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:43"><expr pos:start="41:5" pos:end="41:42"><call pos:start="41:5" pos:end="41:42"><name pos:start="41:5" pos:end="41:17">init_get_bits</name><argument_list pos:start="41:18" pos:end="41:42">(<argument pos:start="41:19" pos:end="41:24"><expr pos:start="41:19" pos:end="41:24"><operator pos:start="41:19" pos:end="41:19">&amp;</operator><name pos:start="41:20" pos:end="41:24"><name pos:start="41:20" pos:end="41:20">s</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:24">gb</name></name></expr></argument>, <argument pos:start="41:27" pos:end="41:29"><expr pos:start="41:27" pos:end="41:29"><name pos:start="41:27" pos:end="41:29">buf</name></expr></argument>, <argument pos:start="41:32" pos:end="41:41"><expr pos:start="41:32" pos:end="41:41"><name pos:start="41:32" pos:end="41:39">buf_size</name><operator pos:start="41:40" pos:end="41:40">*</operator><literal type="number" pos:start="41:41" pos:end="41:41">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="57:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="45:29">(<expr pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:28">use_bit_reservoir</name></name></expr>)</condition> <block pos:start="45:31" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:72">

        <comment type="block" pos:start="47:9" pos:end="47:37">/* read super frame header */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><call pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:17">skip_bits</name><argument_list pos:start="49:18" pos:end="49:28">(<argument pos:start="49:19" pos:end="49:24"><expr pos:start="49:19" pos:end="49:24"><operator pos:start="49:19" pos:end="49:19">&amp;</operator><name pos:start="49:20" pos:end="49:24"><name pos:start="49:20" pos:end="49:20">s</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:24">gb</name></name></expr></argument>, <argument pos:start="49:27" pos:end="49:27"><expr pos:start="49:27" pos:end="49:27"><literal type="number" pos:start="49:27" pos:end="49:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="49:31" pos:end="49:53">/* super frame index */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:72"><expr pos:start="51:9" pos:end="51:71"><name pos:start="51:9" pos:end="51:17">nb_frames</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <call pos:start="51:21" pos:end="51:39"><name pos:start="51:21" pos:end="51:28">get_bits</name><argument_list pos:start="51:29" pos:end="51:39">(<argument pos:start="51:30" pos:end="51:35"><expr pos:start="51:30" pos:end="51:35"><operator pos:start="51:30" pos:end="51:30">&amp;</operator><name pos:start="51:31" pos:end="51:35"><name pos:start="51:31" pos:end="51:31">s</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:35">gb</name></name></expr></argument>, <argument pos:start="51:38" pos:end="51:38"><expr pos:start="51:38" pos:end="51:38"><literal type="number" pos:start="51:38" pos:end="51:38">4</literal></expr></argument>)</argument_list></call> <operator pos:start="51:41" pos:end="51:41">-</operator> <operator pos:start="51:43" pos:end="51:43">(</operator><name pos:start="51:44" pos:end="51:65"><name pos:start="51:44" pos:end="51:44">s</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:65">last_superframe_len</name></name> <operator pos:start="51:67" pos:end="51:68">&lt;=</operator> <literal type="number" pos:start="51:70" pos:end="51:70">0</literal><operator pos:start="51:71" pos:end="51:71">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="57:5">else <block pos:start="53:12" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:22">

        <expr_stmt pos:start="55:9" pos:end="55:22"><expr pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:17">nb_frames</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <literal type="number" pos:start="55:21" pos:end="55:21">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:27">/* get output buffer */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:51"><expr pos:start="63:5" pos:end="63:50"><name pos:start="63:5" pos:end="63:23"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:12">frame</name><operator pos:start="63:13" pos:end="63:13">.</operator><name pos:start="63:14" pos:end="63:23">nb_samples</name></name> <operator pos:start="63:25" pos:end="63:25">=</operator> <name pos:start="63:27" pos:end="63:35">nb_frames</name> <operator pos:start="63:37" pos:end="63:37">*</operator> <name pos:start="63:39" pos:end="63:50"><name pos:start="63:39" pos:end="63:39">s</name><operator pos:start="63:40" pos:end="63:41">-&gt;</operator><name pos:start="63:42" pos:end="63:50">frame_len</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:56">(<expr pos:start="65:9" pos:end="65:55"><operator pos:start="65:9" pos:end="65:9">(</operator><name pos:start="65:10" pos:end="65:12">ret</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <call pos:start="65:16" pos:end="65:50"><name pos:start="65:16" pos:end="65:32"><name pos:start="65:16" pos:end="65:20">avctx</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:32">get_buffer</name></name><argument_list pos:start="65:33" pos:end="65:50">(<argument pos:start="65:34" pos:end="65:38"><expr pos:start="65:34" pos:end="65:38"><name pos:start="65:34" pos:end="65:38">avctx</name></expr></argument>, <argument pos:start="65:41" pos:end="65:49"><expr pos:start="65:41" pos:end="65:49"><operator pos:start="65:41" pos:end="65:41">&amp;</operator><name pos:start="65:42" pos:end="65:49"><name pos:start="65:42" pos:end="65:42">s</name><operator pos:start="65:43" pos:end="65:44">-&gt;</operator><name pos:start="65:45" pos:end="65:49">frame</name></name></expr></argument>)</argument_list></call><operator pos:start="65:51" pos:end="65:51">)</operator> <operator pos:start="65:53" pos:end="65:53">&lt;</operator> <literal type="number" pos:start="65:55" pos:end="65:55">0</literal></expr>)</condition> <block pos:start="65:58" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:19">

        <expr_stmt pos:start="67:9" pos:end="67:61"><expr pos:start="67:9" pos:end="67:60"><call pos:start="67:9" pos:end="67:60"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="67:60">(<argument pos:start="67:16" pos:end="67:20"><expr pos:start="67:16" pos:end="67:20"><name pos:start="67:16" pos:end="67:20">avctx</name></expr></argument>, <argument pos:start="67:23" pos:end="67:34"><expr pos:start="67:23" pos:end="67:34"><name pos:start="67:23" pos:end="67:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:37" pos:end="67:59"><expr pos:start="67:37" pos:end="67:59"><literal type="string" pos:start="67:37" pos:end="67:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:19">return <expr pos:start="69:16" pos:end="69:18"><name pos:start="69:16" pos:end="69:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:42"><expr pos:start="73:5" pos:end="73:41"><name pos:start="73:5" pos:end="73:11">samples</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <operator pos:start="73:15" pos:end="73:15">(</operator><name pos:start="73:16" pos:end="73:22">int16_t</name> <operator pos:start="73:24" pos:end="73:24">*</operator><operator pos:start="73:25" pos:end="73:25">)</operator><name pos:start="73:26" pos:end="73:41"><name pos:start="73:26" pos:end="73:26">s</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:33">frame</name><operator pos:start="73:34" pos:end="73:34">.</operator><name pos:start="73:35" pos:end="73:38">data</name><index pos:start="73:39" pos:end="73:41">[<expr pos:start="73:40" pos:end="73:40"><literal type="number" pos:start="73:40" pos:end="73:40">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="77:5" pos:end="203:5"><if pos:start="77:5" pos:end="193:5">if <condition pos:start="77:8" pos:end="77:29">(<expr pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:28">use_bit_reservoir</name></name></expr>)</condition> <block pos:start="77:31" pos:end="193:5">{<block_content pos:start="79:9" pos:end="191:51">

        <expr_stmt pos:start="79:9" pos:end="79:63"><expr pos:start="79:9" pos:end="79:62"><name pos:start="79:9" pos:end="79:18">bit_offset</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <call pos:start="79:22" pos:end="79:62"><name pos:start="79:22" pos:end="79:29">get_bits</name><argument_list pos:start="79:30" pos:end="79:62">(<argument pos:start="79:31" pos:end="79:36"><expr pos:start="79:31" pos:end="79:36"><operator pos:start="79:31" pos:end="79:31">&amp;</operator><name pos:start="79:32" pos:end="79:36"><name pos:start="79:32" pos:end="79:32">s</name><operator pos:start="79:33" pos:end="79:34">-&gt;</operator><name pos:start="79:35" pos:end="79:36">gb</name></name></expr></argument>, <argument pos:start="79:39" pos:end="79:61"><expr pos:start="79:39" pos:end="79:61"><name pos:start="79:39" pos:end="79:57"><name pos:start="79:39" pos:end="79:39">s</name><operator pos:start="79:40" pos:end="79:41">-&gt;</operator><name pos:start="79:42" pos:end="79:57">byte_offset_bits</name></name> <operator pos:start="79:59" pos:end="79:59">+</operator> <literal type="number" pos:start="79:61" pos:end="79:61">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="83:9" pos:end="137:9"><if pos:start="83:9" pos:end="137:9">if <condition pos:start="83:12" pos:end="83:39">(<expr pos:start="83:13" pos:end="83:38"><name pos:start="83:13" pos:end="83:34"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:34">last_superframe_len</name></name> <operator pos:start="83:36" pos:end="83:36">&gt;</operator> <literal type="number" pos:start="83:38" pos:end="83:38">0</literal></expr>)</condition> <block pos:start="83:41" pos:end="137:9">{<block_content pos:start="89:13" pos:end="135:24">

            <comment type="line" pos:start="85:13" pos:end="85:61">//        printf("skip=%d\n", s-&gt;last_bitoffset);</comment>

            <comment type="block" pos:start="87:13" pos:end="87:51">/* add bit_offset bits to last frame */</comment>

            <if_stmt pos:start="89:13" pos:end="93:26"><if pos:start="89:13" pos:end="93:26">if <condition pos:start="89:16" pos:end="91:42">(<expr pos:start="89:17" pos:end="91:41"><operator pos:start="89:17" pos:end="89:17">(</operator><name pos:start="89:18" pos:end="89:39"><name pos:start="89:18" pos:end="89:18">s</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:39">last_superframe_len</name></name> <operator pos:start="89:41" pos:end="89:41">+</operator> <operator pos:start="89:43" pos:end="89:43">(</operator><operator pos:start="89:44" pos:end="89:44">(</operator><name pos:start="89:45" pos:end="89:54">bit_offset</name> <operator pos:start="89:56" pos:end="89:56">+</operator> <literal type="number" pos:start="89:58" pos:end="89:58">7</literal><operator pos:start="89:59" pos:end="89:59">)</operator> <operator pos:start="89:61" pos:end="89:62">&gt;&gt;</operator> <literal type="number" pos:start="89:64" pos:end="89:64">3</literal><operator pos:start="89:65" pos:end="89:65">)</operator><operator pos:start="89:66" pos:end="89:66">)</operator> <operator pos:start="89:68" pos:end="89:68">&gt;</operator>

                <name pos:start="91:17" pos:end="91:41">MAX_CODED_SUPERFRAME_SIZE</name></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:26"><block_content pos:start="93:17" pos:end="93:26">

                <goto pos:start="93:17" pos:end="93:26">goto <name pos:start="93:22" pos:end="93:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:60"><expr pos:start="95:13" pos:end="95:59"><name pos:start="95:13" pos:end="95:13">q</name> <operator pos:start="95:15" pos:end="95:15">=</operator> <name pos:start="95:17" pos:end="95:34"><name pos:start="95:17" pos:end="95:17">s</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:34">last_superframe</name></name> <operator pos:start="95:36" pos:end="95:36">+</operator> <name pos:start="95:38" pos:end="95:59"><name pos:start="95:38" pos:end="95:38">s</name><operator pos:start="95:39" pos:end="95:40">-&gt;</operator><name pos:start="95:41" pos:end="95:59">last_superframe_len</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:29"><expr pos:start="97:13" pos:end="97:28"><name pos:start="97:13" pos:end="97:15">len</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <name pos:start="97:19" pos:end="97:28">bit_offset</name></expr>;</expr_stmt>

            <while pos:start="99:13" pos:end="105:13">while <condition pos:start="99:19" pos:end="99:27">(<expr pos:start="99:20" pos:end="99:26"><name pos:start="99:20" pos:end="99:22">len</name> <operator pos:start="99:24" pos:end="99:24">&gt;</operator> <literal type="number" pos:start="99:26" pos:end="99:26">7</literal></expr>)</condition> <block pos:start="99:29" pos:end="105:13">{<block_content pos:start="101:17" pos:end="103:25">

                <expr_stmt pos:start="101:17" pos:end="101:45"><expr pos:start="101:17" pos:end="101:44"><operator pos:start="101:17" pos:end="101:17">*</operator><name pos:start="101:18" pos:end="101:18">q</name><operator pos:start="101:19" pos:end="101:20">++</operator> <operator pos:start="101:22" pos:end="101:22">=</operator> <operator pos:start="101:24" pos:end="101:24">(</operator><name pos:start="101:25" pos:end="101:32">get_bits</name><operator pos:start="101:33" pos:end="101:33">)</operator><operator pos:start="101:34" pos:end="101:34">(</operator><operator pos:start="101:35" pos:end="101:35">&amp;</operator><name pos:start="101:36" pos:end="101:40"><name pos:start="101:36" pos:end="101:36">s</name><operator pos:start="101:37" pos:end="101:38">-&gt;</operator><name pos:start="101:39" pos:end="101:40">gb</name></name><operator pos:start="101:41" pos:end="101:41">,</operator> <literal type="number" pos:start="101:43" pos:end="101:43">8</literal><operator pos:start="101:44" pos:end="101:44">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:25"><expr pos:start="103:17" pos:end="103:24"><name pos:start="103:17" pos:end="103:19">len</name> <operator pos:start="103:21" pos:end="103:22">-=</operator> <literal type="number" pos:start="103:24" pos:end="103:24">8</literal></expr>;</expr_stmt>

            </block_content>}</block></while>

            <if_stmt pos:start="107:13" pos:end="111:13"><if pos:start="107:13" pos:end="111:13">if <condition pos:start="107:16" pos:end="107:24">(<expr pos:start="107:17" pos:end="107:23"><name pos:start="107:17" pos:end="107:19">len</name> <operator pos:start="107:21" pos:end="107:21">&gt;</operator> <literal type="number" pos:start="107:23" pos:end="107:23">0</literal></expr>)</condition> <block pos:start="107:26" pos:end="111:13">{<block_content pos:start="109:17" pos:end="109:60">

                <expr_stmt pos:start="109:17" pos:end="109:60"><expr pos:start="109:17" pos:end="109:59"><operator pos:start="109:17" pos:end="109:17">*</operator><name pos:start="109:18" pos:end="109:18">q</name><operator pos:start="109:19" pos:end="109:20">++</operator> <operator pos:start="109:22" pos:end="109:22">=</operator> <operator pos:start="109:24" pos:end="109:24">(</operator><name pos:start="109:25" pos:end="109:32">get_bits</name><operator pos:start="109:33" pos:end="109:33">)</operator><operator pos:start="109:34" pos:end="109:34">(</operator><operator pos:start="109:35" pos:end="109:35">&amp;</operator><name pos:start="109:36" pos:end="109:40"><name pos:start="109:36" pos:end="109:36">s</name><operator pos:start="109:37" pos:end="109:38">-&gt;</operator><name pos:start="109:39" pos:end="109:40">gb</name></name><operator pos:start="109:41" pos:end="109:41">,</operator> <name pos:start="109:43" pos:end="109:45">len</name><operator pos:start="109:46" pos:end="109:46">)</operator> <operator pos:start="109:48" pos:end="109:49">&lt;&lt;</operator> <operator pos:start="109:51" pos:end="109:51">(</operator><literal type="number" pos:start="109:52" pos:end="109:54">8</literal> <operator pos:start="109:54" pos:end="109:54">-</operator> <name pos:start="109:56" pos:end="109:58">len</name><operator pos:start="109:59" pos:end="109:59">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="115:13" pos:end="115:54">/* XXX: bit_offset bits into last frame */</comment>

            <expr_stmt pos:start="117:13" pos:end="117:83"><expr pos:start="117:13" pos:end="117:82"><call pos:start="117:13" pos:end="117:82"><name pos:start="117:13" pos:end="117:25">init_get_bits</name><argument_list pos:start="117:26" pos:end="117:82">(<argument pos:start="117:27" pos:end="117:32"><expr pos:start="117:27" pos:end="117:32"><operator pos:start="117:27" pos:end="117:27">&amp;</operator><name pos:start="117:28" pos:end="117:32"><name pos:start="117:28" pos:end="117:28">s</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:32">gb</name></name></expr></argument>, <argument pos:start="117:35" pos:end="117:52"><expr pos:start="117:35" pos:end="117:52"><name pos:start="117:35" pos:end="117:52"><name pos:start="117:35" pos:end="117:35">s</name><operator pos:start="117:36" pos:end="117:37">-&gt;</operator><name pos:start="117:38" pos:end="117:52">last_superframe</name></name></expr></argument>, <argument pos:start="117:55" pos:end="117:81"><expr pos:start="117:55" pos:end="117:81"><name pos:start="117:55" pos:end="117:79">MAX_CODED_SUPERFRAME_SIZE</name><operator pos:start="117:80" pos:end="117:80">*</operator><literal type="number" pos:start="117:81" pos:end="117:81">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="119:13" pos:end="119:34">/* skip unused bits */</comment>

            <if_stmt pos:start="121:13" pos:end="123:53"><if pos:start="121:13" pos:end="123:53">if <condition pos:start="121:16" pos:end="121:38">(<expr pos:start="121:17" pos:end="121:37"><name pos:start="121:17" pos:end="121:33"><name pos:start="121:17" pos:end="121:17">s</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:33">last_bitoffset</name></name> <operator pos:start="121:35" pos:end="121:35">&gt;</operator> <literal type="number" pos:start="121:37" pos:end="121:37">0</literal></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:53"><block_content pos:start="123:17" pos:end="123:53">

                <expr_stmt pos:start="123:17" pos:end="123:53"><expr pos:start="123:17" pos:end="123:52"><call pos:start="123:17" pos:end="123:52"><name pos:start="123:17" pos:end="123:25">skip_bits</name><argument_list pos:start="123:26" pos:end="123:52">(<argument pos:start="123:27" pos:end="123:32"><expr pos:start="123:27" pos:end="123:32"><operator pos:start="123:27" pos:end="123:27">&amp;</operator><name pos:start="123:28" pos:end="123:32"><name pos:start="123:28" pos:end="123:28">s</name><operator pos:start="123:29" pos:end="123:30">-&gt;</operator><name pos:start="123:31" pos:end="123:32">gb</name></name></expr></argument>, <argument pos:start="123:35" pos:end="123:51"><expr pos:start="123:35" pos:end="123:51"><name pos:start="123:35" pos:end="123:51"><name pos:start="123:35" pos:end="123:35">s</name><operator pos:start="123:36" pos:end="123:37">-&gt;</operator><name pos:start="123:38" pos:end="123:51">last_bitoffset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="125:13" pos:end="127:29">/* this frame is stored in the last superframe and in the

               current one */</comment>

            <if_stmt pos:start="129:13" pos:end="131:26"><if pos:start="129:13" pos:end="131:26">if <condition pos:start="129:16" pos:end="129:49">(<expr pos:start="129:17" pos:end="129:48"><call pos:start="129:17" pos:end="129:44"><name pos:start="129:17" pos:end="129:32">wma_decode_frame</name><argument_list pos:start="129:33" pos:end="129:44">(<argument pos:start="129:34" pos:end="129:34"><expr pos:start="129:34" pos:end="129:34"><name pos:start="129:34" pos:end="129:34">s</name></expr></argument>, <argument pos:start="129:37" pos:end="129:43"><expr pos:start="129:37" pos:end="129:43"><name pos:start="129:37" pos:end="129:43">samples</name></expr></argument>)</argument_list></call> <operator pos:start="129:46" pos:end="129:46">&lt;</operator> <literal type="number" pos:start="129:48" pos:end="129:48">0</literal></expr>)</condition><block type="pseudo" pos:start="131:17" pos:end="131:26"><block_content pos:start="131:17" pos:end="131:26">

                <goto pos:start="131:17" pos:end="131:26">goto <name pos:start="131:22" pos:end="131:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:53"><expr pos:start="133:13" pos:end="133:52"><name pos:start="133:13" pos:end="133:19">samples</name> <operator pos:start="133:21" pos:end="133:22">+=</operator> <name pos:start="133:24" pos:end="133:37"><name pos:start="133:24" pos:end="133:24">s</name><operator pos:start="133:25" pos:end="133:26">-&gt;</operator><name pos:start="133:27" pos:end="133:37">nb_channels</name></name> <operator pos:start="133:39" pos:end="133:39">*</operator> <name pos:start="133:41" pos:end="133:52"><name pos:start="133:41" pos:end="133:41">s</name><operator pos:start="133:42" pos:end="133:43">-&gt;</operator><name pos:start="133:44" pos:end="133:52">frame_len</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:24"><expr pos:start="135:13" pos:end="135:23"><name pos:start="135:13" pos:end="135:21">nb_frames</name><operator pos:start="135:22" pos:end="135:23">--</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="141:9" pos:end="141:54">/* read each frame starting from bit_offset */</comment>

        <expr_stmt pos:start="143:9" pos:end="143:59"><expr pos:start="143:9" pos:end="143:58"><name pos:start="143:9" pos:end="143:11">pos</name> <operator pos:start="143:13" pos:end="143:13">=</operator> <name pos:start="143:15" pos:end="143:24">bit_offset</name> <operator pos:start="143:26" pos:end="143:26">+</operator> <literal type="number" pos:start="143:28" pos:end="143:30">4</literal> <operator pos:start="143:30" pos:end="143:30">+</operator> <literal type="number" pos:start="143:32" pos:end="143:34">4</literal> <operator pos:start="143:34" pos:end="143:34">+</operator> <name pos:start="143:36" pos:end="143:54"><name pos:start="143:36" pos:end="143:36">s</name><operator pos:start="143:37" pos:end="143:38">-&gt;</operator><name pos:start="143:39" pos:end="143:54">byte_offset_bits</name></name> <operator pos:start="143:56" pos:end="143:56">+</operator> <literal type="number" pos:start="143:58" pos:end="143:58">3</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="147:9" pos:end="147:92"><expr pos:start="147:9" pos:end="147:91"><call pos:start="147:9" pos:end="147:91"><name pos:start="147:9" pos:end="147:21">init_get_bits</name><argument_list pos:start="147:22" pos:end="147:91">(<argument pos:start="147:23" pos:end="147:28"><expr pos:start="147:23" pos:end="147:28"><operator pos:start="147:23" pos:end="147:23">&amp;</operator><name pos:start="147:24" pos:end="147:28"><name pos:start="147:24" pos:end="147:24">s</name><operator pos:start="147:25" pos:end="147:26">-&gt;</operator><name pos:start="147:27" pos:end="147:28">gb</name></name></expr></argument>, <argument pos:start="147:31" pos:end="147:46"><expr pos:start="147:31" pos:end="147:46"><name pos:start="147:31" pos:end="147:33">buf</name> <operator pos:start="147:35" pos:end="147:35">+</operator> <operator pos:start="147:37" pos:end="147:37">(</operator><name pos:start="147:38" pos:end="147:40">pos</name> <operator pos:start="147:42" pos:end="147:43">&gt;&gt;</operator> <literal type="number" pos:start="147:45" pos:end="147:45">3</literal><operator pos:start="147:46" pos:end="147:46">)</operator></expr></argument>, <argument pos:start="147:49" pos:end="147:90"><expr pos:start="147:49" pos:end="147:90"><operator pos:start="147:49" pos:end="147:49">(</operator><name pos:start="147:50" pos:end="147:74">MAX_CODED_SUPERFRAME_SIZE</name> <operator pos:start="147:76" pos:end="147:76">-</operator> <operator pos:start="147:78" pos:end="147:78">(</operator><name pos:start="147:79" pos:end="147:81">pos</name> <operator pos:start="147:83" pos:end="147:84">&gt;&gt;</operator> <literal type="number" pos:start="147:86" pos:end="147:86">3</literal><operator pos:start="147:87" pos:end="147:87">)</operator><operator pos:start="147:88" pos:end="147:88">)</operator><operator pos:start="147:89" pos:end="147:89">*</operator><literal type="number" pos:start="147:90" pos:end="147:90">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:22"><expr pos:start="149:9" pos:end="149:21"><name pos:start="149:9" pos:end="149:11">len</name> <operator pos:start="149:13" pos:end="149:13">=</operator> <name pos:start="149:15" pos:end="149:17">pos</name> <operator pos:start="149:19" pos:end="149:19">&amp;</operator> <literal type="number" pos:start="149:21" pos:end="149:21">7</literal></expr>;</expr_stmt>

        <if_stmt pos:start="151:9" pos:end="153:35"><if pos:start="151:9" pos:end="153:35">if <condition pos:start="151:12" pos:end="151:20">(<expr pos:start="151:13" pos:end="151:19"><name pos:start="151:13" pos:end="151:15">len</name> <operator pos:start="151:17" pos:end="151:17">&gt;</operator> <literal type="number" pos:start="151:19" pos:end="151:19">0</literal></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:35"><block_content pos:start="153:13" pos:end="153:35">

            <expr_stmt pos:start="153:13" pos:end="153:35"><expr pos:start="153:13" pos:end="153:34"><call pos:start="153:13" pos:end="153:34"><name pos:start="153:13" pos:end="153:21">skip_bits</name><argument_list pos:start="153:22" pos:end="153:34">(<argument pos:start="153:23" pos:end="153:28"><expr pos:start="153:23" pos:end="153:28"><operator pos:start="153:23" pos:end="153:23">&amp;</operator><name pos:start="153:24" pos:end="153:28"><name pos:start="153:24" pos:end="153:24">s</name><operator pos:start="153:25" pos:end="153:26">-&gt;</operator><name pos:start="153:27" pos:end="153:28">gb</name></name></expr></argument>, <argument pos:start="153:31" pos:end="153:33"><expr pos:start="153:31" pos:end="153:33"><name pos:start="153:31" pos:end="153:33">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:35"><expr pos:start="157:9" pos:end="157:34"><name pos:start="157:9" pos:end="157:30"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:30">reset_block_lengths</name></name> <operator pos:start="157:32" pos:end="157:32">=</operator> <literal type="number" pos:start="157:34" pos:end="157:34">1</literal></expr>;</expr_stmt>

        <for pos:start="159:9" pos:end="167:9">for<control pos:start="159:12" pos:end="159:32">(<init pos:start="159:13" pos:end="159:16"><expr pos:start="159:13" pos:end="159:15"><name pos:start="159:13" pos:end="159:13">i</name><operator pos:start="159:14" pos:end="159:14">=</operator><literal type="number" pos:start="159:15" pos:end="159:15">0</literal></expr>;</init><condition pos:start="159:17" pos:end="159:28"><expr pos:start="159:17" pos:end="159:27"><name pos:start="159:17" pos:end="159:17">i</name><operator pos:start="159:18" pos:end="159:18">&lt;</operator><name pos:start="159:19" pos:end="159:27">nb_frames</name></expr>;</condition><incr pos:start="159:29" pos:end="159:31"><expr pos:start="159:29" pos:end="159:31"><name pos:start="159:29" pos:end="159:29">i</name><operator pos:start="159:30" pos:end="159:31">++</operator></expr></incr>)</control> <block pos:start="159:34" pos:end="167:9">{<block_content pos:start="161:13" pos:end="165:53">

            <if_stmt pos:start="161:13" pos:end="163:26"><if pos:start="161:13" pos:end="163:26">if <condition pos:start="161:16" pos:end="161:49">(<expr pos:start="161:17" pos:end="161:48"><call pos:start="161:17" pos:end="161:44"><name pos:start="161:17" pos:end="161:32">wma_decode_frame</name><argument_list pos:start="161:33" pos:end="161:44">(<argument pos:start="161:34" pos:end="161:34"><expr pos:start="161:34" pos:end="161:34"><name pos:start="161:34" pos:end="161:34">s</name></expr></argument>, <argument pos:start="161:37" pos:end="161:43"><expr pos:start="161:37" pos:end="161:43"><name pos:start="161:37" pos:end="161:43">samples</name></expr></argument>)</argument_list></call> <operator pos:start="161:46" pos:end="161:46">&lt;</operator> <literal type="number" pos:start="161:48" pos:end="161:48">0</literal></expr>)</condition><block type="pseudo" pos:start="163:17" pos:end="163:26"><block_content pos:start="163:17" pos:end="163:26">

                <goto pos:start="163:17" pos:end="163:26">goto <name pos:start="163:22" pos:end="163:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:53"><expr pos:start="165:13" pos:end="165:52"><name pos:start="165:13" pos:end="165:19">samples</name> <operator pos:start="165:21" pos:end="165:22">+=</operator> <name pos:start="165:24" pos:end="165:37"><name pos:start="165:24" pos:end="165:24">s</name><operator pos:start="165:25" pos:end="165:26">-&gt;</operator><name pos:start="165:27" pos:end="165:37">nb_channels</name></name> <operator pos:start="165:39" pos:end="165:39">*</operator> <name pos:start="165:41" pos:end="165:52"><name pos:start="165:41" pos:end="165:41">s</name><operator pos:start="165:42" pos:end="165:43">-&gt;</operator><name pos:start="165:44" pos:end="165:52">frame_len</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="171:9" pos:end="171:67">/* we copy the end of the frame in the last frame buffer */</comment>

        <expr_stmt pos:start="173:9" pos:end="173:93"><expr pos:start="173:9" pos:end="173:92"><name pos:start="173:9" pos:end="173:11">pos</name> <operator pos:start="173:13" pos:end="173:13">=</operator> <call pos:start="173:15" pos:end="173:36"><name pos:start="173:15" pos:end="173:28">get_bits_count</name><argument_list pos:start="173:29" pos:end="173:36">(<argument pos:start="173:30" pos:end="173:35"><expr pos:start="173:30" pos:end="173:35"><operator pos:start="173:30" pos:end="173:30">&amp;</operator><name pos:start="173:31" pos:end="173:35"><name pos:start="173:31" pos:end="173:31">s</name><operator pos:start="173:32" pos:end="173:33">-&gt;</operator><name pos:start="173:34" pos:end="173:35">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="173:38" pos:end="173:38">+</operator> <operator pos:start="173:40" pos:end="173:40">(</operator><operator pos:start="173:41" pos:end="173:41">(</operator><name pos:start="173:42" pos:end="173:51">bit_offset</name> <operator pos:start="173:53" pos:end="173:53">+</operator> <literal type="number" pos:start="173:55" pos:end="173:57">4</literal> <operator pos:start="173:57" pos:end="173:57">+</operator> <literal type="number" pos:start="173:59" pos:end="173:61">4</literal> <operator pos:start="173:61" pos:end="173:61">+</operator> <name pos:start="173:63" pos:end="173:81"><name pos:start="173:63" pos:end="173:63">s</name><operator pos:start="173:64" pos:end="173:65">-&gt;</operator><name pos:start="173:66" pos:end="173:81">byte_offset_bits</name></name> <operator pos:start="173:83" pos:end="173:83">+</operator> <literal type="number" pos:start="173:85" pos:end="173:85">3</literal><operator pos:start="173:86" pos:end="173:86">)</operator> <operator pos:start="173:88" pos:end="173:88">&amp;</operator> <operator pos:start="173:90" pos:end="173:90">~</operator><literal type="number" pos:start="173:91" pos:end="173:91">7</literal><operator pos:start="173:92" pos:end="173:92">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:36"><expr pos:start="175:9" pos:end="175:35"><name pos:start="175:9" pos:end="175:25"><name pos:start="175:9" pos:end="175:9">s</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:25">last_bitoffset</name></name> <operator pos:start="175:27" pos:end="175:27">=</operator> <name pos:start="175:29" pos:end="175:31">pos</name> <operator pos:start="175:33" pos:end="175:33">&amp;</operator> <literal type="number" pos:start="175:35" pos:end="175:35">7</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:18"><expr pos:start="177:9" pos:end="177:17"><name pos:start="177:9" pos:end="177:11">pos</name> <operator pos:start="177:13" pos:end="177:15">&gt;&gt;=</operator> <literal type="number" pos:start="177:17" pos:end="177:17">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:29"><expr pos:start="179:9" pos:end="179:28"><name pos:start="179:9" pos:end="179:11">len</name> <operator pos:start="179:13" pos:end="179:13">=</operator> <name pos:start="179:15" pos:end="179:22">buf_size</name> <operator pos:start="179:24" pos:end="179:24">-</operator> <name pos:start="179:26" pos:end="179:28">pos</name></expr>;</expr_stmt>

        <if_stmt pos:start="181:9" pos:end="187:9"><if pos:start="181:9" pos:end="187:9">if <condition pos:start="181:12" pos:end="181:55">(<expr pos:start="181:13" pos:end="181:54"><name pos:start="181:13" pos:end="181:15">len</name> <operator pos:start="181:17" pos:end="181:17">&gt;</operator> <name pos:start="181:19" pos:end="181:43">MAX_CODED_SUPERFRAME_SIZE</name> <operator pos:start="181:45" pos:end="181:46">||</operator> <name pos:start="181:48" pos:end="181:50">len</name> <operator pos:start="181:52" pos:end="181:52">&lt;</operator> <literal type="number" pos:start="181:54" pos:end="181:54">0</literal></expr>)</condition> <block pos:start="181:57" pos:end="187:9">{<block_content pos:start="183:13" pos:end="185:22">

            <expr_stmt pos:start="183:13" pos:end="183:68"><expr pos:start="183:13" pos:end="183:67"><call pos:start="183:13" pos:end="183:67"><name pos:start="183:13" pos:end="183:18">av_log</name><argument_list pos:start="183:19" pos:end="183:67">(<argument pos:start="183:20" pos:end="183:27"><expr pos:start="183:20" pos:end="183:27"><name pos:start="183:20" pos:end="183:27"><name pos:start="183:20" pos:end="183:20">s</name><operator pos:start="183:21" pos:end="183:22">-&gt;</operator><name pos:start="183:23" pos:end="183:27">avctx</name></name></expr></argument>, <argument pos:start="183:30" pos:end="183:41"><expr pos:start="183:30" pos:end="183:41"><name pos:start="183:30" pos:end="183:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="183:44" pos:end="183:61"><expr pos:start="183:44" pos:end="183:61"><literal type="string" pos:start="183:44" pos:end="183:61">"len %d invalid\n"</literal></expr></argument>, <argument pos:start="183:64" pos:end="183:66"><expr pos:start="183:64" pos:end="183:66"><name pos:start="183:64" pos:end="183:66">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="185:13" pos:end="185:22">goto <name pos:start="185:18" pos:end="185:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:37"><expr pos:start="189:9" pos:end="189:36"><name pos:start="189:9" pos:end="189:30"><name pos:start="189:9" pos:end="189:9">s</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:30">last_superframe_len</name></name> <operator pos:start="189:32" pos:end="189:32">=</operator> <name pos:start="189:34" pos:end="189:36">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:51"><expr pos:start="191:9" pos:end="191:50"><call pos:start="191:9" pos:end="191:50"><name pos:start="191:9" pos:end="191:14">memcpy</name><argument_list pos:start="191:15" pos:end="191:50">(<argument pos:start="191:16" pos:end="191:33"><expr pos:start="191:16" pos:end="191:33"><name pos:start="191:16" pos:end="191:33"><name pos:start="191:16" pos:end="191:16">s</name><operator pos:start="191:17" pos:end="191:18">-&gt;</operator><name pos:start="191:19" pos:end="191:33">last_superframe</name></name></expr></argument>, <argument pos:start="191:36" pos:end="191:44"><expr pos:start="191:36" pos:end="191:44"><name pos:start="191:36" pos:end="191:38">buf</name> <operator pos:start="191:40" pos:end="191:40">+</operator> <name pos:start="191:42" pos:end="191:44">pos</name></expr></argument>, <argument pos:start="191:47" pos:end="191:49"><expr pos:start="191:47" pos:end="191:49"><name pos:start="191:47" pos:end="191:49">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="193:7" pos:end="203:5">else <block pos:start="193:12" pos:end="203:5">{<block_content pos:start="197:9" pos:end="201:49">

        <comment type="block" pos:start="195:9" pos:end="195:33">/* single frame decode */</comment>

        <if_stmt pos:start="197:9" pos:end="199:22"><if pos:start="197:9" pos:end="199:22">if <condition pos:start="197:12" pos:end="197:45">(<expr pos:start="197:13" pos:end="197:44"><call pos:start="197:13" pos:end="197:40"><name pos:start="197:13" pos:end="197:28">wma_decode_frame</name><argument_list pos:start="197:29" pos:end="197:40">(<argument pos:start="197:30" pos:end="197:30"><expr pos:start="197:30" pos:end="197:30"><name pos:start="197:30" pos:end="197:30">s</name></expr></argument>, <argument pos:start="197:33" pos:end="197:39"><expr pos:start="197:33" pos:end="197:39"><name pos:start="197:33" pos:end="197:39">samples</name></expr></argument>)</argument_list></call> <operator pos:start="197:42" pos:end="197:42">&lt;</operator> <literal type="number" pos:start="197:44" pos:end="197:44">0</literal></expr>)</condition><block type="pseudo" pos:start="199:13" pos:end="199:22"><block_content pos:start="199:13" pos:end="199:22">

            <goto pos:start="199:13" pos:end="199:22">goto <name pos:start="199:18" pos:end="199:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:49"><expr pos:start="201:9" pos:end="201:48"><name pos:start="201:9" pos:end="201:15">samples</name> <operator pos:start="201:17" pos:end="201:18">+=</operator> <name pos:start="201:20" pos:end="201:33"><name pos:start="201:20" pos:end="201:20">s</name><operator pos:start="201:21" pos:end="201:22">-&gt;</operator><name pos:start="201:23" pos:end="201:33">nb_channels</name></name> <operator pos:start="201:35" pos:end="201:35">*</operator> <name pos:start="201:37" pos:end="201:48"><name pos:start="201:37" pos:end="201:37">s</name><operator pos:start="201:38" pos:end="201:39">-&gt;</operator><name pos:start="201:40" pos:end="201:48">frame_len</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<comment type="line" pos:start="207:1" pos:end="207:192">//av_log(NULL, AV_LOG_ERROR, "%d %d %d %d outbytes:%d eaten:%d\n", s-&gt;frame_len_bits, s-&gt;block_len_bits, s-&gt;frame_len, s-&gt;block_len,        (int8_t *)samples - (int8_t *)data, s-&gt;block_align);</comment>



    <expr_stmt pos:start="211:5" pos:end="211:25"><expr pos:start="211:5" pos:end="211:24"><operator pos:start="211:5" pos:end="211:5">*</operator><name pos:start="211:6" pos:end="211:18">got_frame_ptr</name>   <operator pos:start="211:22" pos:end="211:22">=</operator> <literal type="number" pos:start="211:24" pos:end="211:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:32"><expr pos:start="213:5" pos:end="213:31"><operator pos:start="213:5" pos:end="213:5">*</operator><operator pos:start="213:6" pos:end="213:6">(</operator><name pos:start="213:7" pos:end="213:13">AVFrame</name> <operator pos:start="213:15" pos:end="213:15">*</operator><operator pos:start="213:16" pos:end="213:16">)</operator><name pos:start="213:17" pos:end="213:20">data</name> <operator pos:start="213:22" pos:end="213:22">=</operator> <name pos:start="213:24" pos:end="213:31"><name pos:start="213:24" pos:end="213:24">s</name><operator pos:start="213:25" pos:end="213:26">-&gt;</operator><name pos:start="213:27" pos:end="213:31">frame</name></name></expr>;</expr_stmt>



    <return pos:start="217:5" pos:end="217:26">return <expr pos:start="217:12" pos:end="217:25"><name pos:start="217:12" pos:end="217:25"><name pos:start="217:12" pos:end="217:12">s</name><operator pos:start="217:13" pos:end="217:14">-&gt;</operator><name pos:start="217:15" pos:end="217:25">block_align</name></name></expr>;</return>

 <label pos:start="219:2" pos:end="219:6"><name pos:start="219:2" pos:end="219:5">fail</name>:</label>

    <comment type="block" pos:start="221:5" pos:end="221:48">/* when error, we reset the bit reservoir */</comment>

    <expr_stmt pos:start="223:5" pos:end="223:31"><expr pos:start="223:5" pos:end="223:30"><name pos:start="223:5" pos:end="223:26"><name pos:start="223:5" pos:end="223:5">s</name><operator pos:start="223:6" pos:end="223:7">-&gt;</operator><name pos:start="223:8" pos:end="223:26">last_superframe_len</name></name> <operator pos:start="223:28" pos:end="223:28">=</operator> <literal type="number" pos:start="223:30" pos:end="223:30">0</literal></expr>;</expr_stmt>

    <return pos:start="225:5" pos:end="225:14">return <expr pos:start="225:12" pos:end="225:13"><operator pos:start="225:12" pos:end="225:12">-</operator><literal type="number" pos:start="225:13" pos:end="225:13">1</literal></expr>;</return>

</block_content>}</block></function></unit>
