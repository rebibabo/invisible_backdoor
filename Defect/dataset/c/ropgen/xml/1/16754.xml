<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16754.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:28">get_symbol</name><parameter_list pos:start="1:29" pos:end="1:74">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:39">RangeCoder</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">c</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:58"><decl pos:start="1:45" pos:end="1:58"><type pos:start="1:45" pos:end="1:58"><name pos:start="1:45" pos:end="1:51">uint8_t</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">state</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:73"><decl pos:start="1:61" pos:end="1:73"><type pos:start="1:61" pos:end="1:73"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:73">is_signed</name></decl></parameter>)</parameter_list><block pos:start="1:75" pos:end="43:1">{<block_content pos:start="3:5" pos:end="41:5">

    <if_stmt pos:start="3:5" pos:end="41:5"><if pos:start="3:5" pos:end="5:17">if<condition pos:start="3:7" pos:end="3:27">(<expr pos:start="3:8" pos:end="3:26"><call pos:start="3:8" pos:end="3:26"><name pos:start="3:8" pos:end="3:14">get_rac</name><argument_list pos:start="3:15" pos:end="3:26">(<argument pos:start="3:16" pos:end="3:16"><expr pos:start="3:16" pos:end="3:16"><name pos:start="3:16" pos:end="3:16">c</name></expr></argument>, <argument pos:start="3:19" pos:end="3:25"><expr pos:start="3:19" pos:end="3:25"><name pos:start="3:19" pos:end="3:23">state</name><operator pos:start="3:24" pos:end="3:24">+</operator><literal type="number" pos:start="3:25" pos:end="3:25">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="5:9" pos:end="5:17"><block_content pos:start="5:9" pos:end="5:17">

        <return pos:start="5:9" pos:end="5:17">return <expr pos:start="5:16" pos:end="5:16"><literal type="number" pos:start="5:16" pos:end="5:16">0</literal></expr>;</return></block_content></block></if>

    <else pos:start="7:5" pos:end="41:5">else<block pos:start="7:9" pos:end="41:5">{<block_content pos:start="9:9" pos:end="39:21">

        <decl_stmt pos:start="9:9" pos:end="9:20"><decl pos:start="9:9" pos:end="9:13"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">i</name></decl>, <decl pos:start="9:16" pos:end="9:16"><type ref="prev" pos:start="9:9" pos:end="9:11"/><name pos:start="9:16" pos:end="9:16">e</name></decl>, <decl pos:start="9:19" pos:end="9:19"><type ref="prev" pos:start="9:9" pos:end="9:11"/><name pos:start="9:19" pos:end="9:19">a</name></decl>;</decl_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:13"><expr pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:9">e</name><operator pos:start="11:10" pos:end="11:10">=</operator> <literal type="number" pos:start="11:12" pos:end="11:12">0</literal></expr>;</expr_stmt>

        <while pos:start="13:9" pos:end="17:9">while<condition pos:start="13:14" pos:end="13:38">(<expr pos:start="13:15" pos:end="13:37"><call pos:start="13:15" pos:end="13:37"><name pos:start="13:15" pos:end="13:21">get_rac</name><argument_list pos:start="13:22" pos:end="13:37">(<argument pos:start="13:23" pos:end="13:23"><expr pos:start="13:23" pos:end="13:23"><name pos:start="13:23" pos:end="13:23">c</name></expr></argument>, <argument pos:start="13:26" pos:end="13:36"><expr pos:start="13:26" pos:end="13:36"><name pos:start="13:26" pos:end="13:30">state</name><operator pos:start="13:31" pos:end="13:31">+</operator><literal type="number" pos:start="13:32" pos:end="13:34">1</literal> <operator pos:start="13:34" pos:end="13:34">+</operator> <name pos:start="13:36" pos:end="13:36">e</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="13:39" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:16"> <comment type="line" pos:start="13:41" pos:end="13:47">//1..10</comment>

            <expr_stmt pos:start="15:13" pos:end="15:16"><expr pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:13">e</name><operator pos:start="15:14" pos:end="15:15">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="19:9" pos:end="19:21"><expr pos:start="19:9" pos:end="19:20"><call pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:14">assert</name><argument_list pos:start="19:15" pos:end="19:20">(<argument pos:start="19:16" pos:end="19:19"><expr pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:16">e</name><operator pos:start="19:17" pos:end="19:18">&lt;=</operator><literal type="number" pos:start="19:19" pos:end="19:19">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:13"><expr pos:start="23:9" pos:end="23:12"><name pos:start="23:9" pos:end="23:9">a</name><operator pos:start="23:10" pos:end="23:10">=</operator> <literal type="number" pos:start="23:12" pos:end="23:12">1</literal></expr>;</expr_stmt>

        <for pos:start="25:9" pos:end="29:9">for<control pos:start="25:12" pos:end="25:29">(<init pos:start="25:13" pos:end="25:18"><expr pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:13">i</name><operator pos:start="25:14" pos:end="25:14">=</operator><name pos:start="25:15" pos:end="25:15">e</name><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</init> <condition pos:start="25:20" pos:end="25:24"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:20">i</name><operator pos:start="25:21" pos:end="25:22">&gt;=</operator><literal type="number" pos:start="25:23" pos:end="25:23">0</literal></expr>;</condition> <incr pos:start="25:26" pos:end="25:28"><expr pos:start="25:26" pos:end="25:28"><name pos:start="25:26" pos:end="25:26">i</name><operator pos:start="25:27" pos:end="25:28">--</operator></expr></incr>)</control><block pos:start="25:30" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:46">

            <expr_stmt pos:start="27:13" pos:end="27:46"><expr pos:start="27:13" pos:end="27:45"><name pos:start="27:13" pos:end="27:13">a</name> <operator pos:start="27:15" pos:end="27:16">+=</operator> <name pos:start="27:18" pos:end="27:18">a</name> <operator pos:start="27:20" pos:end="27:20">+</operator> <call pos:start="27:22" pos:end="27:45"><name pos:start="27:22" pos:end="27:28">get_rac</name><argument_list pos:start="27:29" pos:end="27:45">(<argument pos:start="27:30" pos:end="27:30"><expr pos:start="27:30" pos:end="27:30"><name pos:start="27:30" pos:end="27:30">c</name></expr></argument>, <argument pos:start="27:33" pos:end="27:44"><expr pos:start="27:33" pos:end="27:44"><name pos:start="27:33" pos:end="27:37">state</name><operator pos:start="27:38" pos:end="27:38">+</operator><literal type="number" pos:start="27:39" pos:end="27:42">22</literal> <operator pos:start="27:42" pos:end="27:42">+</operator> <name pos:start="27:44" pos:end="27:44">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="27:48" pos:end="27:55">//22..31</comment>

        </block_content>}</block></for>



        <if_stmt pos:start="33:9" pos:end="39:21"><if pos:start="33:9" pos:end="35:22">if<condition pos:start="33:11" pos:end="33:49">(<expr pos:start="33:12" pos:end="33:48"><name pos:start="33:12" pos:end="33:20">is_signed</name> <operator pos:start="33:22" pos:end="33:23">&amp;&amp;</operator> <call pos:start="33:25" pos:end="33:48"><name pos:start="33:25" pos:end="33:31">get_rac</name><argument_list pos:start="33:32" pos:end="33:48">(<argument pos:start="33:33" pos:end="33:33"><expr pos:start="33:33" pos:end="33:33"><name pos:start="33:33" pos:end="33:33">c</name></expr></argument>, <argument pos:start="33:36" pos:end="33:47"><expr pos:start="33:36" pos:end="33:47"><name pos:start="33:36" pos:end="33:40">state</name><operator pos:start="33:41" pos:end="33:41">+</operator><literal type="number" pos:start="33:42" pos:end="33:45">11</literal> <operator pos:start="33:45" pos:end="33:45">+</operator> <name pos:start="33:47" pos:end="33:47">e</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:22"><block_content pos:start="35:13" pos:end="35:22"> <comment type="line" pos:start="33:51" pos:end="33:58">//11..21</comment>

            <return pos:start="35:13" pos:end="35:22">return <expr pos:start="35:20" pos:end="35:21"><operator pos:start="35:20" pos:end="35:20">-</operator><name pos:start="35:21" pos:end="35:21">a</name></expr>;</return></block_content></block></if>

        <else pos:start="37:9" pos:end="39:21">else<block type="pseudo" pos:start="39:13" pos:end="39:21"><block_content pos:start="39:13" pos:end="39:21">

            <return pos:start="39:13" pos:end="39:21">return <expr pos:start="39:20" pos:end="39:20"><name pos:start="39:20" pos:end="39:20">a</name></expr>;</return></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
