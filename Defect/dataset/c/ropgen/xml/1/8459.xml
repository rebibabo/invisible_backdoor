<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8459.c" pos:tabs="8"><function pos:start="1:1" pos:end="187:15"><type pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:23">attribute_align_arg</name></type> <name pos:start="1:25" pos:end="1:33">sws_scale</name><parameter_list pos:start="1:34" pos:end="5:56">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:54"><name pos:start="1:35" pos:end="1:51"><name pos:start="1:35" pos:end="1:40">struct</name> <name pos:start="1:42" pos:end="1:51">SwsContext</name></name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">c</name></decl></parameter>,
                                  <parameter pos:start="2:35" pos:end="2:66"><decl pos:start="2:35" pos:end="2:66"><type pos:start="2:35" pos:end="2:64"><specifier pos:start="2:35" pos:end="2:39">const</specifier> <name pos:start="2:41" pos:end="2:47">uint8_t</name> <modifier pos:start="2:49" pos:end="2:49">*</modifier> <specifier pos:start="2:51" pos:end="2:55">const</specifier></type> <name pos:start="2:57" pos:end="2:66"><name pos:start="2:57" pos:end="2:64">srcSlice</name><index pos:start="2:65" pos:end="2:66">[]</index></name></decl></parameter>,
                                  <parameter pos:start="3:35" pos:end="3:55"><decl pos:start="3:35" pos:end="3:55"><type pos:start="3:35" pos:end="3:53"><specifier pos:start="3:35" pos:end="3:39">const</specifier> <name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:55"><name pos:start="3:45" pos:end="3:53">srcStride</name><index pos:start="3:54" pos:end="3:55">[]</index></name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:70"><decl pos:start="3:58" pos:end="3:70"><type pos:start="3:58" pos:end="3:70"><name pos:start="3:58" pos:end="3:60">int</name></type> <name pos:start="3:62" pos:end="3:70">srcSliceY</name></decl></parameter>,
                                  <parameter pos:start="4:35" pos:end="4:47"><decl pos:start="4:35" pos:end="4:47"><type pos:start="4:35" pos:end="4:47"><name pos:start="4:35" pos:end="4:37">int</name></type> <name pos:start="4:39" pos:end="4:47">srcSliceH</name></decl></parameter>, <parameter pos:start="4:50" pos:end="4:69"><decl pos:start="4:50" pos:end="4:69"><type pos:start="4:50" pos:end="4:67"><name pos:start="4:50" pos:end="4:56">uint8_t</name> <modifier pos:start="4:58" pos:end="4:58">*</modifier><specifier pos:start="4:59" pos:end="4:63">const</specifier></type> <name pos:start="4:65" pos:end="4:69"><name pos:start="4:65" pos:end="4:67">dst</name><index pos:start="4:68" pos:end="4:69">[]</index></name></decl></parameter>,
                                  <parameter pos:start="5:35" pos:end="5:55"><decl pos:start="5:35" pos:end="5:55"><type pos:start="5:35" pos:end="5:53"><specifier pos:start="5:35" pos:end="5:39">const</specifier> <name pos:start="5:41" pos:end="5:43">int</name></type> <name pos:start="5:45" pos:end="5:55"><name pos:start="5:45" pos:end="5:53">dstStride</name><index pos:start="5:54" pos:end="5:55">[]</index></name></decl></parameter>)</parameter_list>
<block pos:start="6:1" pos:end="187:15">{<block_content pos:start="7:5" pos:end="187:15">
    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:27"><decl pos:start="8:5" pos:end="8:26"><type pos:start="8:5" pos:end="8:19"><specifier pos:start="8:5" pos:end="8:9">const</specifier> <name pos:start="8:11" pos:end="8:17">uint8_t</name> <modifier pos:start="8:19" pos:end="8:19">*</modifier></type><name pos:start="8:20" pos:end="8:26"><name pos:start="8:20" pos:end="8:23">src2</name><index pos:start="8:24" pos:end="8:26">[<expr pos:start="8:25" pos:end="8:25"><literal type="number" pos:start="8:25" pos:end="8:25">4</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:20"><name pos:start="9:14" pos:end="9:17">dst2</name><index pos:start="9:18" pos:end="9:20">[<expr pos:start="9:19" pos:end="9:19"><literal type="number" pos:start="9:19" pos:end="9:19">4</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:29"><decl pos:start="10:5" pos:end="10:28"><type pos:start="10:5" pos:end="10:13"><name pos:start="10:5" pos:end="10:11">uint8_t</name> <modifier pos:start="10:13" pos:end="10:13">*</modifier></type><name pos:start="10:14" pos:end="10:21">rgb0_tmp</name> <init pos:start="10:23" pos:end="10:28">= <expr pos:start="10:25" pos:end="10:28"><name pos:start="10:25" pos:end="10:28">NULL</name></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="11:5" pos:end="187:15"><if pos:start="11:5" pos:end="187:15">if <condition pos:start="11:8" pos:end="11:54">(<expr pos:start="11:9" pos:end="11:53"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:18">srcStride</name> <operator pos:start="11:20" pos:end="11:21">||</operator> <operator pos:start="11:23" pos:end="11:23">!</operator><name pos:start="11:24" pos:end="11:32">dstStride</name> <operator pos:start="11:34" pos:end="11:35">||</operator> <operator pos:start="11:37" pos:end="11:37">!</operator><name pos:start="11:38" pos:end="11:40">dst</name> <operator pos:start="11:42" pos:end="11:43">||</operator> <operator pos:start="11:45" pos:end="11:45">!</operator><name pos:start="11:46" pos:end="11:53">srcSlice</name></expr>)</condition> <block pos:start="11:56" pos:end="187:15">{<block_content pos:start="12:9" pos:end="187:15">
        <expr_stmt pos:start="12:9" pos:end="12:119"><expr pos:start="12:9" pos:end="12:118"><call pos:start="12:9" pos:end="12:118"><name pos:start="12:9" pos:end="12:14">av_log</name><argument_list pos:start="12:15" pos:end="12:118">(<argument pos:start="12:16" pos:end="12:16"><expr pos:start="12:16" pos:end="12:16"><name pos:start="12:16" pos:end="12:16">c</name></expr></argument>, <argument pos:start="12:19" pos:end="12:30"><expr pos:start="12:19" pos:end="12:30"><name pos:start="12:19" pos:end="12:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="12:33" pos:end="12:117"><expr pos:start="12:33" pos:end="12:117"><literal type="string" pos:start="12:33" pos:end="12:117">"One of the input parameters to sws_scale() is NULL, please check the calling code\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return>
    <if_stmt pos:start="14:5" pos:end="187:15"><if pos:start="14:5" pos:end="187:15">if <condition pos:start="14:8" pos:end="14:48">(<expr pos:start="14:9" pos:end="14:47"><name pos:start="14:9" pos:end="14:21"><name pos:start="14:9" pos:end="14:9">c</name><operator pos:start="14:10" pos:end="14:11">-&gt;</operator><name pos:start="14:12" pos:end="14:21">gamma_flag</name></name> <operator pos:start="14:23" pos:end="14:24">&amp;&amp;</operator> <name pos:start="14:26" pos:end="14:47"><name pos:start="14:26" pos:end="14:26">c</name><operator pos:start="14:27" pos:end="14:28">-&gt;</operator><name pos:start="14:29" pos:end="14:44">cascaded_context</name><index pos:start="14:45" pos:end="14:47">[<expr pos:start="14:46" pos:end="14:46"><literal type="number" pos:start="14:46" pos:end="14:46">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="14:50" pos:end="187:15">{<block_content pos:start="15:9" pos:end="187:15">
        <expr_stmt pos:start="15:9" pos:end="17:60"><expr pos:start="15:9" pos:end="17:59"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="17:59"><name pos:start="15:15" pos:end="15:23">sws_scale</name><argument_list pos:start="15:24" pos:end="17:59">(<argument pos:start="15:25" pos:end="15:46"><expr pos:start="15:25" pos:end="15:46"><name pos:start="15:25" pos:end="15:46"><name pos:start="15:25" pos:end="15:25">c</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:43">cascaded_context</name><index pos:start="15:44" pos:end="15:46">[<expr pos:start="15:45" pos:end="15:45"><literal type="number" pos:start="15:45" pos:end="15:45">0</literal></expr>]</index></name></expr></argument>,
                    <argument pos:start="16:21" pos:end="16:28"><expr pos:start="16:21" pos:end="16:28"><name pos:start="16:21" pos:end="16:28">srcSlice</name></expr></argument>, <argument pos:start="16:31" pos:end="16:39"><expr pos:start="16:31" pos:end="16:39"><name pos:start="16:31" pos:end="16:39">srcStride</name></expr></argument>, <argument pos:start="16:42" pos:end="16:50"><expr pos:start="16:42" pos:end="16:50"><name pos:start="16:42" pos:end="16:50">srcSliceY</name></expr></argument>, <argument pos:start="16:53" pos:end="16:61"><expr pos:start="16:53" pos:end="16:61"><name pos:start="16:53" pos:end="16:61">srcSliceH</name></expr></argument>,
                    <argument pos:start="17:21" pos:end="17:35"><expr pos:start="17:21" pos:end="17:35"><name pos:start="17:21" pos:end="17:35"><name pos:start="17:21" pos:end="17:21">c</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:35">cascaded_tmp</name></name></expr></argument>, <argument pos:start="17:38" pos:end="17:58"><expr pos:start="17:38" pos:end="17:58"><name pos:start="17:38" pos:end="17:58"><name pos:start="17:38" pos:end="17:38">c</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:58">cascaded_tmpStride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="18:9" pos:end="19:23"><if pos:start="18:9" pos:end="19:23">if <condition pos:start="18:12" pos:end="18:20">(<expr pos:start="18:13" pos:end="18:19"><name pos:start="18:13" pos:end="18:15">ret</name> <operator pos:start="18:17" pos:end="18:17">&lt;</operator> <literal type="number" pos:start="18:19" pos:end="18:19">0</literal></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:23"><block_content pos:start="19:13" pos:end="19:23">
            <return pos:start="19:13" pos:end="19:23">return <expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <if_stmt pos:start="20:9" pos:end="23:155"><if pos:start="20:9" pos:end="21:181">if <condition pos:start="20:12" pos:end="20:35">(<expr pos:start="20:13" pos:end="20:34"><name pos:start="20:13" pos:end="20:34"><name pos:start="20:13" pos:end="20:13">c</name><operator pos:start="20:14" pos:end="20:15">-&gt;</operator><name pos:start="20:16" pos:end="20:31">cascaded_context</name><index pos:start="20:32" pos:end="20:34">[<expr pos:start="20:33" pos:end="20:33"><literal type="number" pos:start="20:33" pos:end="20:33">2</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:181"><block_content pos:start="21:13" pos:end="21:181">
            <expr_stmt pos:start="21:13" pos:end="21:181"><expr pos:start="21:13" pos:end="21:180"><name pos:start="21:13" pos:end="21:15">ret</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <call pos:start="21:19" pos:end="21:180"><name pos:start="21:19" pos:end="21:27">sws_scale</name><argument_list pos:start="21:28" pos:end="21:180">(<argument pos:start="21:29" pos:end="21:50"><expr pos:start="21:29" pos:end="21:50"><name pos:start="21:29" pos:end="21:50"><name pos:start="21:29" pos:end="21:29">c</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:47">cascaded_context</name><index pos:start="21:48" pos:end="21:50">[<expr pos:start="21:49" pos:end="21:49"><literal type="number" pos:start="21:49" pos:end="21:49">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="21:53" pos:end="21:92"><expr pos:start="21:53" pos:end="21:92"><operator pos:start="21:53" pos:end="21:53">(</operator><specifier pos:start="21:54" pos:end="21:58">const</specifier> <name pos:start="21:60" pos:end="21:66">uint8_t</name> <operator pos:start="21:68" pos:end="21:68">*</operator> <specifier pos:start="21:70" pos:end="21:74">const</specifier> <operator pos:start="21:76" pos:end="21:76">*</operator><operator pos:start="21:77" pos:end="21:77">)</operator><name pos:start="21:78" pos:end="21:92"><name pos:start="21:78" pos:end="21:78">c</name><operator pos:start="21:79" pos:end="21:80">-&gt;</operator><name pos:start="21:81" pos:end="21:92">cascaded_tmp</name></name></expr></argument>, <argument pos:start="21:95" pos:end="21:115"><expr pos:start="21:95" pos:end="21:115"><name pos:start="21:95" pos:end="21:115"><name pos:start="21:95" pos:end="21:95">c</name><operator pos:start="21:96" pos:end="21:97">-&gt;</operator><name pos:start="21:98" pos:end="21:115">cascaded_tmpStride</name></name></expr></argument>, <argument pos:start="21:118" pos:end="21:126"><expr pos:start="21:118" pos:end="21:126"><name pos:start="21:118" pos:end="21:126">srcSliceY</name></expr></argument>, <argument pos:start="21:129" pos:end="21:137"><expr pos:start="21:129" pos:end="21:137"><name pos:start="21:129" pos:end="21:137">srcSliceH</name></expr></argument>, <argument pos:start="21:140" pos:end="21:155"><expr pos:start="21:140" pos:end="21:155"><name pos:start="21:140" pos:end="21:155"><name pos:start="21:140" pos:end="21:140">c</name><operator pos:start="21:141" pos:end="21:142">-&gt;</operator><name pos:start="21:143" pos:end="21:155">cascaded1_tmp</name></name></expr></argument>, <argument pos:start="21:158" pos:end="21:179"><expr pos:start="21:158" pos:end="21:179"><name pos:start="21:158" pos:end="21:179"><name pos:start="21:158" pos:end="21:158">c</name><operator pos:start="21:159" pos:end="21:160">-&gt;</operator><name pos:start="21:161" pos:end="21:179">cascaded1_tmpStride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="22:9" pos:end="23:155">else<block type="pseudo" pos:start="23:13" pos:end="23:155"><block_content pos:start="23:13" pos:end="23:155">
            <expr_stmt pos:start="23:13" pos:end="23:155"><expr pos:start="23:13" pos:end="23:154"><name pos:start="23:13" pos:end="23:15">ret</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:154"><name pos:start="23:19" pos:end="23:27">sws_scale</name><argument_list pos:start="23:28" pos:end="23:154">(<argument pos:start="23:29" pos:end="23:50"><expr pos:start="23:29" pos:end="23:50"><name pos:start="23:29" pos:end="23:50"><name pos:start="23:29" pos:end="23:29">c</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:47">cascaded_context</name><index pos:start="23:48" pos:end="23:50">[<expr pos:start="23:49" pos:end="23:49"><literal type="number" pos:start="23:49" pos:end="23:49">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="23:53" pos:end="23:92"><expr pos:start="23:53" pos:end="23:92"><operator pos:start="23:53" pos:end="23:53">(</operator><specifier pos:start="23:54" pos:end="23:58">const</specifier> <name pos:start="23:60" pos:end="23:66">uint8_t</name> <operator pos:start="23:68" pos:end="23:68">*</operator> <specifier pos:start="23:70" pos:end="23:74">const</specifier> <operator pos:start="23:76" pos:end="23:76">*</operator><operator pos:start="23:77" pos:end="23:77">)</operator><name pos:start="23:78" pos:end="23:92"><name pos:start="23:78" pos:end="23:78">c</name><operator pos:start="23:79" pos:end="23:80">-&gt;</operator><name pos:start="23:81" pos:end="23:92">cascaded_tmp</name></name></expr></argument>, <argument pos:start="23:95" pos:end="23:115"><expr pos:start="23:95" pos:end="23:115"><name pos:start="23:95" pos:end="23:115"><name pos:start="23:95" pos:end="23:95">c</name><operator pos:start="23:96" pos:end="23:97">-&gt;</operator><name pos:start="23:98" pos:end="23:115">cascaded_tmpStride</name></name></expr></argument>, <argument pos:start="23:118" pos:end="23:126"><expr pos:start="23:118" pos:end="23:126"><name pos:start="23:118" pos:end="23:126">srcSliceY</name></expr></argument>, <argument pos:start="23:129" pos:end="23:137"><expr pos:start="23:129" pos:end="23:137"><name pos:start="23:129" pos:end="23:137">srcSliceH</name></expr></argument>, <argument pos:start="23:140" pos:end="23:142"><expr pos:start="23:140" pos:end="23:142"><name pos:start="23:140" pos:end="23:142">dst</name></expr></argument>, <argument pos:start="23:145" pos:end="23:153"><expr pos:start="23:145" pos:end="23:153"><name pos:start="23:145" pos:end="23:153">dstStride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
        <if_stmt pos:start="24:9" pos:end="25:23"><if pos:start="24:9" pos:end="25:23">if <condition pos:start="24:12" pos:end="24:20">(<expr pos:start="24:13" pos:end="24:19"><name pos:start="24:13" pos:end="24:15">ret</name> <operator pos:start="24:17" pos:end="24:17">&lt;</operator> <literal type="number" pos:start="24:19" pos:end="24:19">0</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:23"><block_content pos:start="25:13" pos:end="25:23">
            <return pos:start="25:13" pos:end="25:23">return <expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <if_stmt pos:start="26:9" pos:end="187:15"><if pos:start="26:9" pos:end="187:15">if <condition pos:start="26:12" pos:end="26:35">(<expr pos:start="26:13" pos:end="26:34"><name pos:start="26:13" pos:end="26:34"><name pos:start="26:13" pos:end="26:13">c</name><operator pos:start="26:14" pos:end="26:15">-&gt;</operator><name pos:start="26:16" pos:end="26:31">cascaded_context</name><index pos:start="26:32" pos:end="26:34">[<expr pos:start="26:33" pos:end="26:33"><literal type="number" pos:start="26:33" pos:end="26:33">2</literal></expr>]</index></name></expr>)</condition> <block pos:start="26:37" pos:end="187:15">{<block_content pos:start="27:13" pos:end="187:15">
            <expr_stmt pos:start="27:13" pos:end="29:40"><expr pos:start="27:13" pos:end="29:39"><name pos:start="27:13" pos:end="27:15">ret</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="29:39"><name pos:start="27:19" pos:end="27:27">sws_scale</name><argument_list pos:start="27:28" pos:end="29:39">(<argument pos:start="27:29" pos:end="27:50"><expr pos:start="27:29" pos:end="27:50"><name pos:start="27:29" pos:end="27:50"><name pos:start="27:29" pos:end="27:29">c</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:47">cascaded_context</name><index pos:start="27:48" pos:end="27:50">[<expr pos:start="27:49" pos:end="27:49"><literal type="number" pos:start="27:49" pos:end="27:49">2</literal></expr>]</index></name></expr></argument>,
                        <argument pos:start="28:25" pos:end="28:65"><expr pos:start="28:25" pos:end="28:65"><operator pos:start="28:25" pos:end="28:25">(</operator><specifier pos:start="28:26" pos:end="28:30">const</specifier> <name pos:start="28:32" pos:end="28:38">uint8_t</name> <operator pos:start="28:40" pos:end="28:40">*</operator> <specifier pos:start="28:42" pos:end="28:46">const</specifier> <operator pos:start="28:48" pos:end="28:48">*</operator><operator pos:start="28:49" pos:end="28:49">)</operator><name pos:start="28:50" pos:end="28:65"><name pos:start="28:50" pos:end="28:50">c</name><operator pos:start="28:51" pos:end="28:52">-&gt;</operator><name pos:start="28:53" pos:end="28:65">cascaded1_tmp</name></name></expr></argument>, <argument pos:start="28:68" pos:end="28:89"><expr pos:start="28:68" pos:end="28:89"><name pos:start="28:68" pos:end="28:89"><name pos:start="28:68" pos:end="28:68">c</name><operator pos:start="28:69" pos:end="28:70">-&gt;</operator><name pos:start="28:71" pos:end="28:89">cascaded1_tmpStride</name></name></expr></argument>, <argument pos:start="28:92" pos:end="28:125"><expr pos:start="28:92" pos:end="28:125"><name pos:start="28:92" pos:end="28:113"><name pos:start="28:92" pos:end="28:92">c</name><operator pos:start="28:93" pos:end="28:94">-&gt;</operator><name pos:start="28:95" pos:end="28:110">cascaded_context</name><index pos:start="28:111" pos:end="28:113">[<expr pos:start="28:112" pos:end="28:112"><literal type="number" pos:start="28:112" pos:end="28:112">1</literal></expr>]</index></name><operator pos:start="28:114" pos:end="28:115">-&gt;</operator><name pos:start="28:116" pos:end="28:119">dstY</name> <operator pos:start="28:121" pos:end="28:121">-</operator> <name pos:start="28:123" pos:end="28:125">ret</name></expr></argument>, <argument pos:start="28:128" pos:end="28:155"><expr pos:start="28:128" pos:end="28:155"><name pos:start="28:128" pos:end="28:149"><name pos:start="28:128" pos:end="28:128">c</name><operator pos:start="28:129" pos:end="28:130">-&gt;</operator><name pos:start="28:131" pos:end="28:146">cascaded_context</name><index pos:start="28:147" pos:end="28:149">[<expr pos:start="28:148" pos:end="28:148"><literal type="number" pos:start="28:148" pos:end="28:148">1</literal></expr>]</index></name><operator pos:start="28:150" pos:end="28:151">-&gt;</operator><name pos:start="28:152" pos:end="28:155">dstY</name></expr></argument>,
                        <argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:27">dst</name></expr></argument>, <argument pos:start="29:30" pos:end="29:38"><expr pos:start="29:30" pos:end="29:38"><name pos:start="29:30" pos:end="29:38">dstStride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="30:9" pos:end="30:19">return <expr pos:start="30:16" pos:end="30:18"><name pos:start="30:16" pos:end="30:18">ret</name></expr>;</return>
    <if_stmt pos:start="31:5" pos:end="187:15"><if pos:start="31:5" pos:end="187:15">if <condition pos:start="31:8" pos:end="31:94">(<expr pos:start="31:9" pos:end="31:93"><name pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:9">c</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:27">cascaded_context</name><index pos:start="31:28" pos:end="31:30">[<expr pos:start="31:29" pos:end="31:29"><literal type="number" pos:start="31:29" pos:end="31:29">0</literal></expr>]</index></name> <operator pos:start="31:32" pos:end="31:33">&amp;&amp;</operator> <name pos:start="31:35" pos:end="31:43">srcSliceY</name> <operator pos:start="31:45" pos:end="31:46">==</operator> <literal type="number" pos:start="31:48" pos:end="31:48">0</literal> <operator pos:start="31:50" pos:end="31:51">&amp;&amp;</operator> <name pos:start="31:53" pos:end="31:61">srcSliceH</name> <operator pos:start="31:63" pos:end="31:64">==</operator> <name pos:start="31:66" pos:end="31:87"><name pos:start="31:66" pos:end="31:66">c</name><operator pos:start="31:67" pos:end="31:68">-&gt;</operator><name pos:start="31:69" pos:end="31:84">cascaded_context</name><index pos:start="31:85" pos:end="31:87">[<expr pos:start="31:86" pos:end="31:86"><literal type="number" pos:start="31:86" pos:end="31:86">0</literal></expr>]</index></name><operator pos:start="31:88" pos:end="31:89">-&gt;</operator><name pos:start="31:90" pos:end="31:93">srcH</name></expr>)</condition> <block pos:start="31:96" pos:end="187:15">{<block_content pos:start="32:9" pos:end="187:15">
        <expr_stmt pos:start="32:9" pos:end="34:64"><expr pos:start="32:9" pos:end="34:63"><name pos:start="32:9" pos:end="32:11">ret</name> <operator pos:start="32:13" pos:end="32:13">=</operator> <call pos:start="32:15" pos:end="34:63"><name pos:start="32:15" pos:end="32:23">sws_scale</name><argument_list pos:start="32:24" pos:end="34:63">(<argument pos:start="32:25" pos:end="32:46"><expr pos:start="32:25" pos:end="32:46"><name pos:start="32:25" pos:end="32:46"><name pos:start="32:25" pos:end="32:25">c</name><operator pos:start="32:26" pos:end="32:27">-&gt;</operator><name pos:start="32:28" pos:end="32:43">cascaded_context</name><index pos:start="32:44" pos:end="32:46">[<expr pos:start="32:45" pos:end="32:45"><literal type="number" pos:start="32:45" pos:end="32:45">0</literal></expr>]</index></name></expr></argument>,
                        <argument pos:start="33:25" pos:end="33:32"><expr pos:start="33:25" pos:end="33:32"><name pos:start="33:25" pos:end="33:32">srcSlice</name></expr></argument>, <argument pos:start="33:35" pos:end="33:43"><expr pos:start="33:35" pos:end="33:43"><name pos:start="33:35" pos:end="33:43">srcStride</name></expr></argument>, <argument pos:start="33:46" pos:end="33:54"><expr pos:start="33:46" pos:end="33:54"><name pos:start="33:46" pos:end="33:54">srcSliceY</name></expr></argument>, <argument pos:start="33:57" pos:end="33:65"><expr pos:start="33:57" pos:end="33:65"><name pos:start="33:57" pos:end="33:65">srcSliceH</name></expr></argument>,
                        <argument pos:start="34:25" pos:end="34:39"><expr pos:start="34:25" pos:end="34:39"><name pos:start="34:25" pos:end="34:39"><name pos:start="34:25" pos:end="34:25">c</name><operator pos:start="34:26" pos:end="34:27">-&gt;</operator><name pos:start="34:28" pos:end="34:39">cascaded_tmp</name></name></expr></argument>, <argument pos:start="34:42" pos:end="34:62"><expr pos:start="34:42" pos:end="34:62"><name pos:start="34:42" pos:end="34:62"><name pos:start="34:42" pos:end="34:42">c</name><operator pos:start="34:43" pos:end="34:44">-&gt;</operator><name pos:start="34:45" pos:end="34:62">cascaded_tmpStride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="35:9" pos:end="36:23"><if pos:start="35:9" pos:end="36:23">if <condition pos:start="35:12" pos:end="35:20">(<expr pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:17">&lt;</operator> <literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr>)</condition><block type="pseudo" pos:start="36:13" pos:end="36:23"><block_content pos:start="36:13" pos:end="36:23">
            <return pos:start="36:13" pos:end="36:23">return <expr pos:start="36:20" pos:end="36:22"><name pos:start="36:20" pos:end="36:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="37:9" pos:end="39:40"><expr pos:start="37:9" pos:end="39:39"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="39:39"><name pos:start="37:15" pos:end="37:23">sws_scale</name><argument_list pos:start="37:24" pos:end="39:39">(<argument pos:start="37:25" pos:end="37:46"><expr pos:start="37:25" pos:end="37:46"><name pos:start="37:25" pos:end="37:46"><name pos:start="37:25" pos:end="37:25">c</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:43">cascaded_context</name><index pos:start="37:44" pos:end="37:46">[<expr pos:start="37:45" pos:end="37:45"><literal type="number" pos:start="37:45" pos:end="37:45">1</literal></expr>]</index></name></expr></argument>,
                        <argument pos:start="38:25" pos:end="38:65"><expr pos:start="38:25" pos:end="38:65"><operator pos:start="38:25" pos:end="38:25">(</operator><specifier pos:start="38:26" pos:end="38:30">const</specifier> <name pos:start="38:32" pos:end="38:38">uint8_t</name> <operator pos:start="38:40" pos:end="38:40">*</operator> <specifier pos:start="38:42" pos:end="38:46">const</specifier> <operator pos:start="38:48" pos:end="38:48">*</operator> <operator pos:start="38:50" pos:end="38:50">)</operator><name pos:start="38:51" pos:end="38:65"><name pos:start="38:51" pos:end="38:51">c</name><operator pos:start="38:52" pos:end="38:53">-&gt;</operator><name pos:start="38:54" pos:end="38:65">cascaded_tmp</name></name></expr></argument>, <argument pos:start="38:68" pos:end="38:88"><expr pos:start="38:68" pos:end="38:88"><name pos:start="38:68" pos:end="38:88"><name pos:start="38:68" pos:end="38:68">c</name><operator pos:start="38:69" pos:end="38:70">-&gt;</operator><name pos:start="38:71" pos:end="38:88">cascaded_tmpStride</name></name></expr></argument>, <argument pos:start="38:91" pos:end="38:91"><expr pos:start="38:91" pos:end="38:91"><literal type="number" pos:start="38:91" pos:end="38:91">0</literal></expr></argument>, <argument pos:start="38:94" pos:end="38:121"><expr pos:start="38:94" pos:end="38:121"><name pos:start="38:94" pos:end="38:115"><name pos:start="38:94" pos:end="38:94">c</name><operator pos:start="38:95" pos:end="38:96">-&gt;</operator><name pos:start="38:97" pos:end="38:112">cascaded_context</name><index pos:start="38:113" pos:end="38:115">[<expr pos:start="38:114" pos:end="38:114"><literal type="number" pos:start="38:114" pos:end="38:114">0</literal></expr>]</index></name><operator pos:start="38:116" pos:end="38:117">-&gt;</operator><name pos:start="38:118" pos:end="38:121">dstH</name></expr></argument>,
                        <argument pos:start="39:25" pos:end="39:27"><expr pos:start="39:25" pos:end="39:27"><name pos:start="39:25" pos:end="39:27">dst</name></expr></argument>, <argument pos:start="39:30" pos:end="39:38"><expr pos:start="39:30" pos:end="39:38"><name pos:start="39:30" pos:end="39:38">dstStride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="40:9" pos:end="40:19">return <expr pos:start="40:16" pos:end="40:18"><name pos:start="40:16" pos:end="40:18">ret</name></expr>;</return>
    <expr_stmt pos:start="41:5" pos:end="41:41"><expr pos:start="41:5" pos:end="41:40"><call pos:start="41:5" pos:end="41:40"><name pos:start="41:5" pos:end="41:10">memcpy</name><argument_list pos:start="41:11" pos:end="41:40">(<argument pos:start="41:12" pos:end="41:15"><expr pos:start="41:12" pos:end="41:15"><name pos:start="41:12" pos:end="41:15">src2</name></expr></argument>, <argument pos:start="41:18" pos:end="41:25"><expr pos:start="41:18" pos:end="41:25"><name pos:start="41:18" pos:end="41:25">srcSlice</name></expr></argument>, <argument pos:start="41:28" pos:end="41:39"><expr pos:start="41:28" pos:end="41:39"><sizeof pos:start="41:28" pos:end="41:39">sizeof<argument_list pos:start="41:34" pos:end="41:39">(<argument pos:start="41:35" pos:end="41:38"><expr pos:start="41:35" pos:end="41:38"><name pos:start="41:35" pos:end="41:38">src2</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="42:5" pos:end="42:36"><expr pos:start="42:5" pos:end="42:35"><call pos:start="42:5" pos:end="42:35"><name pos:start="42:5" pos:end="42:10">memcpy</name><argument_list pos:start="42:11" pos:end="42:35">(<argument pos:start="42:12" pos:end="42:15"><expr pos:start="42:12" pos:end="42:15"><name pos:start="42:12" pos:end="42:15">dst2</name></expr></argument>, <argument pos:start="42:18" pos:end="42:20"><expr pos:start="42:18" pos:end="42:20"><name pos:start="42:18" pos:end="42:20">dst</name></expr></argument>, <argument pos:start="42:23" pos:end="42:34"><expr pos:start="42:23" pos:end="42:34"><sizeof pos:start="42:23" pos:end="42:34">sizeof<argument_list pos:start="42:29" pos:end="42:34">(<argument pos:start="42:30" pos:end="42:33"><expr pos:start="42:30" pos:end="42:33"><name pos:start="42:30" pos:end="42:33">dst2</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line" pos:start="43:5" pos:end="43:67">// do not mess up sliceDir if we have a "trailing" 0-size slice</comment>
    <if_stmt pos:start="44:5" pos:end="45:17"><if pos:start="44:5" pos:end="45:17">if <condition pos:start="44:8" pos:end="44:23">(<expr pos:start="44:9" pos:end="44:22"><name pos:start="44:9" pos:end="44:17">srcSliceH</name> <operator pos:start="44:19" pos:end="44:20">==</operator> <literal type="number" pos:start="44:22" pos:end="44:22">0</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:17"><block_content pos:start="45:9" pos:end="45:17">
        <return pos:start="45:9" pos:end="45:17">return <expr pos:start="45:16" pos:end="45:16"><literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="46:5" pos:end="187:15"><if pos:start="46:5" pos:end="187:15">if <condition pos:start="46:8" pos:end="46:65">(<expr pos:start="46:9" pos:end="46:64"><operator pos:start="46:9" pos:end="46:9">!</operator><call pos:start="46:10" pos:end="46:64"><name pos:start="46:10" pos:end="46:29">check_image_pointers</name><argument_list pos:start="46:30" pos:end="46:64">(<argument pos:start="46:31" pos:end="46:38"><expr pos:start="46:31" pos:end="46:38"><name pos:start="46:31" pos:end="46:38">srcSlice</name></expr></argument>, <argument pos:start="46:41" pos:end="46:52"><expr pos:start="46:41" pos:end="46:52"><name pos:start="46:41" pos:end="46:52"><name pos:start="46:41" pos:end="46:41">c</name><operator pos:start="46:42" pos:end="46:43">-&gt;</operator><name pos:start="46:44" pos:end="46:52">srcFormat</name></name></expr></argument>, <argument pos:start="46:55" pos:end="46:63"><expr pos:start="46:55" pos:end="46:63"><name pos:start="46:55" pos:end="46:63">srcStride</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="46:67" pos:end="187:15">{<block_content pos:start="47:9" pos:end="187:15">
        <expr_stmt pos:start="47:9" pos:end="47:60"><expr pos:start="47:9" pos:end="47:59"><call pos:start="47:9" pos:end="47:59"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="47:59">(<argument pos:start="47:16" pos:end="47:16"><expr pos:start="47:16" pos:end="47:16"><name pos:start="47:16" pos:end="47:16">c</name></expr></argument>, <argument pos:start="47:19" pos:end="47:30"><expr pos:start="47:19" pos:end="47:30"><name pos:start="47:19" pos:end="47:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:33" pos:end="47:58"><expr pos:start="47:33" pos:end="47:58"><literal type="string" pos:start="47:33" pos:end="47:58">"bad src image pointers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="48:9" pos:end="48:17">return <expr pos:start="48:16" pos:end="48:16"><literal type="number" pos:start="48:16" pos:end="48:16">0</literal></expr>;</return>
    <if_stmt pos:start="49:5" pos:end="187:15"><if pos:start="49:5" pos:end="187:15">if <condition pos:start="49:8" pos:end="49:83">(<expr pos:start="49:9" pos:end="49:82"><operator pos:start="49:9" pos:end="49:9">!</operator><call pos:start="49:10" pos:end="49:82"><name pos:start="49:10" pos:end="49:29">check_image_pointers</name><argument_list pos:start="49:30" pos:end="49:82">(<argument pos:start="49:31" pos:end="49:56"><expr pos:start="49:31" pos:end="49:56"><operator pos:start="49:31" pos:end="49:31">(</operator><specifier pos:start="49:32" pos:end="49:36">const</specifier> <name pos:start="49:38" pos:end="49:44">uint8_t</name><operator pos:start="49:45" pos:end="49:45">*</operator> <specifier pos:start="49:47" pos:end="49:51">const</specifier><operator pos:start="49:52" pos:end="49:52">*</operator><operator pos:start="49:53" pos:end="49:53">)</operator><name pos:start="49:54" pos:end="49:56">dst</name></expr></argument>, <argument pos:start="49:59" pos:end="49:70"><expr pos:start="49:59" pos:end="49:70"><name pos:start="49:59" pos:end="49:70"><name pos:start="49:59" pos:end="49:59">c</name><operator pos:start="49:60" pos:end="49:61">-&gt;</operator><name pos:start="49:62" pos:end="49:70">dstFormat</name></name></expr></argument>, <argument pos:start="49:73" pos:end="49:81"><expr pos:start="49:73" pos:end="49:81"><name pos:start="49:73" pos:end="49:81">dstStride</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:85" pos:end="187:15">{<block_content pos:start="50:9" pos:end="187:15">
        <expr_stmt pos:start="50:9" pos:end="50:60"><expr pos:start="50:9" pos:end="50:59"><call pos:start="50:9" pos:end="50:59"><name pos:start="50:9" pos:end="50:14">av_log</name><argument_list pos:start="50:15" pos:end="50:59">(<argument pos:start="50:16" pos:end="50:16"><expr pos:start="50:16" pos:end="50:16"><name pos:start="50:16" pos:end="50:16">c</name></expr></argument>, <argument pos:start="50:19" pos:end="50:30"><expr pos:start="50:19" pos:end="50:30"><name pos:start="50:19" pos:end="50:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="50:33" pos:end="50:58"><expr pos:start="50:33" pos:end="50:58"><literal type="string" pos:start="50:33" pos:end="50:58">"bad dst image pointers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="51:9" pos:end="51:17">return <expr pos:start="51:16" pos:end="51:16"><literal type="number" pos:start="51:16" pos:end="51:16">0</literal></expr>;</return>
    <if_stmt pos:start="52:5" pos:end="187:15"><if pos:start="52:5" pos:end="187:15">if <condition pos:start="52:8" pos:end="52:79">(<expr pos:start="52:9" pos:end="52:78"><name pos:start="52:9" pos:end="52:19"><name pos:start="52:9" pos:end="52:9">c</name><operator pos:start="52:10" pos:end="52:11">-&gt;</operator><name pos:start="52:12" pos:end="52:19">sliceDir</name></name> <operator pos:start="52:21" pos:end="52:22">==</operator> <literal type="number" pos:start="52:24" pos:end="52:24">0</literal> <operator pos:start="52:26" pos:end="52:27">&amp;&amp;</operator> <name pos:start="52:29" pos:end="52:37">srcSliceY</name> <operator pos:start="52:39" pos:end="52:40">!=</operator> <literal type="number" pos:start="52:42" pos:end="52:42">0</literal> <operator pos:start="52:44" pos:end="52:45">&amp;&amp;</operator> <name pos:start="52:47" pos:end="52:55">srcSliceY</name> <operator pos:start="52:57" pos:end="52:57">+</operator> <name pos:start="52:59" pos:end="52:67">srcSliceH</name> <operator pos:start="52:69" pos:end="52:70">!=</operator> <name pos:start="52:72" pos:end="52:78"><name pos:start="52:72" pos:end="52:72">c</name><operator pos:start="52:73" pos:end="52:74">-&gt;</operator><name pos:start="52:75" pos:end="52:78">srcH</name></name></expr>)</condition> <block pos:start="52:81" pos:end="187:15">{<block_content pos:start="53:9" pos:end="187:15">
        <expr_stmt pos:start="53:9" pos:end="53:65"><expr pos:start="53:9" pos:end="53:64"><call pos:start="53:9" pos:end="53:64"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="53:64">(<argument pos:start="53:16" pos:end="53:16"><expr pos:start="53:16" pos:end="53:16"><name pos:start="53:16" pos:end="53:16">c</name></expr></argument>, <argument pos:start="53:19" pos:end="53:30"><expr pos:start="53:19" pos:end="53:30"><name pos:start="53:19" pos:end="53:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:33" pos:end="53:63"><expr pos:start="53:33" pos:end="53:63"><literal type="string" pos:start="53:33" pos:end="53:63">"Slices start in the middle!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="54:9" pos:end="54:17">return <expr pos:start="54:16" pos:end="54:16"><literal type="number" pos:start="54:16" pos:end="54:16">0</literal></expr>;</return>
    <if_stmt pos:start="55:5" pos:end="187:15"><if pos:start="55:5" pos:end="187:15">if <condition pos:start="55:8" pos:end="55:25">(<expr pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:9">c</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:19">sliceDir</name></name> <operator pos:start="55:21" pos:end="55:22">==</operator> <literal type="number" pos:start="55:24" pos:end="55:24">0</literal></expr>)</condition> <block pos:start="55:27" pos:end="187:15">{<block_content pos:start="56:9" pos:end="187:15">
        <if_stmt pos:start="56:9" pos:end="56:67"><if pos:start="56:9" pos:end="56:44">if <condition pos:start="56:12" pos:end="56:27">(<expr pos:start="56:13" pos:end="56:26"><name pos:start="56:13" pos:end="56:21">srcSliceY</name> <operator pos:start="56:23" pos:end="56:24">==</operator> <literal type="number" pos:start="56:26" pos:end="56:26">0</literal></expr>)</condition><block type="pseudo" pos:start="56:29" pos:end="56:44"><block_content pos:start="56:29" pos:end="56:44"> <expr_stmt pos:start="56:29" pos:end="56:44"><expr pos:start="56:29" pos:end="56:43"><name pos:start="56:29" pos:end="56:39"><name pos:start="56:29" pos:end="56:29">c</name><operator pos:start="56:30" pos:end="56:31">-&gt;</operator><name pos:start="56:32" pos:end="56:39">sliceDir</name></name> <operator pos:start="56:41" pos:end="56:41">=</operator> <literal type="number" pos:start="56:43" pos:end="56:43">1</literal></expr>;</expr_stmt></block_content></block></if> <else pos:start="56:46" pos:end="56:67">else<block type="pseudo" pos:start="56:51" pos:end="56:67"><block_content pos:start="56:51" pos:end="56:67"> <expr_stmt pos:start="56:51" pos:end="56:67"><expr pos:start="56:51" pos:end="56:66"><name pos:start="56:51" pos:end="56:61"><name pos:start="56:51" pos:end="56:51">c</name><operator pos:start="56:52" pos:end="56:53">-&gt;</operator><name pos:start="56:54" pos:end="56:61">sliceDir</name></name> <operator pos:start="56:63" pos:end="56:63">=</operator> <operator pos:start="56:65" pos:end="56:65">-</operator><literal type="number" pos:start="56:66" pos:end="56:66">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <if_stmt pos:start="57:5" pos:end="187:15"><if pos:start="57:5" pos:end="187:15">if <condition pos:start="57:8" pos:end="57:29">(<expr pos:start="57:9" pos:end="57:28"><call pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:14">usePal</name><argument_list pos:start="57:15" pos:end="57:28">(<argument pos:start="57:16" pos:end="57:27"><expr pos:start="57:16" pos:end="57:27"><name pos:start="57:16" pos:end="57:27"><name pos:start="57:16" pos:end="57:16">c</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:27">srcFormat</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:31" pos:end="187:15">{<block_content pos:start="58:9" pos:end="187:15">
        <for pos:start="58:9" pos:end="187:15">for <control pos:start="58:13" pos:end="58:33">(<init pos:start="58:14" pos:end="58:19"><expr pos:start="58:14" pos:end="58:18"><name pos:start="58:14" pos:end="58:14">i</name> <operator pos:start="58:16" pos:end="58:16">=</operator> <literal type="number" pos:start="58:18" pos:end="58:18">0</literal></expr>;</init> <condition pos:start="58:21" pos:end="58:28"><expr pos:start="58:21" pos:end="58:27"><name pos:start="58:21" pos:end="58:21">i</name> <operator pos:start="58:23" pos:end="58:23">&lt;</operator> <literal type="number" pos:start="58:25" pos:end="58:27">256</literal></expr>;</condition> <incr pos:start="58:30" pos:end="58:32"><expr pos:start="58:30" pos:end="58:32"><name pos:start="58:30" pos:end="58:30">i</name><operator pos:start="58:31" pos:end="58:32">++</operator></expr></incr>)</control> <block pos:start="58:35" pos:end="187:15">{<block_content pos:start="59:13" pos:end="187:15">
            <decl_stmt pos:start="59:13" pos:end="59:43"><decl pos:start="59:13" pos:end="59:17"><type pos:start="59:13" pos:end="59:15"><name pos:start="59:13" pos:end="59:15">int</name></type> <name pos:start="59:17" pos:end="59:17">r</name></decl>, <decl pos:start="59:20" pos:end="59:20"><type ref="prev" pos:start="59:13" pos:end="59:15"/><name pos:start="59:20" pos:end="59:20">g</name></decl>, <decl pos:start="59:23" pos:end="59:23"><type ref="prev" pos:start="59:13" pos:end="59:15"/><name pos:start="59:23" pos:end="59:23">b</name></decl>, <decl pos:start="59:26" pos:end="59:26"><type ref="prev" pos:start="59:13" pos:end="59:15"/><name pos:start="59:26" pos:end="59:26">y</name></decl>, <decl pos:start="59:29" pos:end="59:29"><type ref="prev" pos:start="59:13" pos:end="59:15"/><name pos:start="59:29" pos:end="59:29">u</name></decl>, <decl pos:start="59:32" pos:end="59:32"><type ref="prev" pos:start="59:13" pos:end="59:15"/><name pos:start="59:32" pos:end="59:32">v</name></decl>, <decl pos:start="59:35" pos:end="59:42"><type ref="prev" pos:start="59:13" pos:end="59:15"/><name pos:start="59:35" pos:end="59:35">a</name> <init pos:start="59:37" pos:end="59:42">= <expr pos:start="59:39" pos:end="59:42"><literal type="number" pos:start="59:39" pos:end="59:42">0xff</literal></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="60:13" pos:end="187:15"><if pos:start="60:13" pos:end="66:13">if <condition pos:start="60:16" pos:end="60:48">(<expr pos:start="60:17" pos:end="60:47"><name pos:start="60:17" pos:end="60:28"><name pos:start="60:17" pos:end="60:17">c</name><operator pos:start="60:18" pos:end="60:19">-&gt;</operator><name pos:start="60:20" pos:end="60:28">srcFormat</name></name> <operator pos:start="60:30" pos:end="60:31">==</operator> <name pos:start="60:33" pos:end="60:47">AV_PIX_FMT_PAL8</name></expr>)</condition> <block pos:start="60:50" pos:end="66:13">{<block_content pos:start="61:17" pos:end="65:37">
                <decl_stmt pos:start="61:17" pos:end="61:66"><decl pos:start="61:17" pos:end="61:65"><type pos:start="61:17" pos:end="61:24"><name pos:start="61:17" pos:end="61:24">uint32_t</name></type> <name pos:start="61:26" pos:end="61:26">p</name> <init pos:start="61:28" pos:end="61:65">= <expr pos:start="61:30" pos:end="61:65"><operator pos:start="61:30" pos:end="61:30">(</operator><operator pos:start="61:31" pos:end="61:31">(</operator><specifier pos:start="61:32" pos:end="61:36">const</specifier> <name pos:start="61:38" pos:end="61:45">uint32_t</name> <operator pos:start="61:47" pos:end="61:47">*</operator><operator pos:start="61:48" pos:end="61:48">)</operator><operator pos:start="61:49" pos:end="61:49">(</operator><name pos:start="61:50" pos:end="61:60"><name pos:start="61:50" pos:end="61:57">srcSlice</name><index pos:start="61:58" pos:end="61:60">[<expr pos:start="61:59" pos:end="61:59"><literal type="number" pos:start="61:59" pos:end="61:59">1</literal></expr>]</index></name><operator pos:start="61:61" pos:end="61:61">)</operator><operator pos:start="61:62" pos:end="61:62">)</operator><index pos:start="61:63" pos:end="61:65">[<expr pos:start="61:64" pos:end="61:64"><name pos:start="61:64" pos:end="61:64">i</name></expr>]</index></expr></init></decl>;</decl_stmt>
                <expr_stmt pos:start="62:17" pos:end="62:37"><expr pos:start="62:17" pos:end="62:36"><name pos:start="62:17" pos:end="62:17">a</name> <operator pos:start="62:19" pos:end="62:19">=</operator> <operator pos:start="62:21" pos:end="62:21">(</operator><name pos:start="62:22" pos:end="62:22">p</name> <operator pos:start="62:24" pos:end="62:25">&gt;&gt;</operator> <literal type="number" pos:start="62:27" pos:end="62:28">24</literal><operator pos:start="62:29" pos:end="62:29">)</operator> <operator pos:start="62:31" pos:end="62:31">&amp;</operator> <literal type="number" pos:start="62:33" pos:end="62:36">0xFF</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="63:17" pos:end="63:37"><expr pos:start="63:17" pos:end="63:36"><name pos:start="63:17" pos:end="63:17">r</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <operator pos:start="63:21" pos:end="63:21">(</operator><name pos:start="63:22" pos:end="63:22">p</name> <operator pos:start="63:24" pos:end="63:25">&gt;&gt;</operator> <literal type="number" pos:start="63:27" pos:end="63:28">16</literal><operator pos:start="63:29" pos:end="63:29">)</operator> <operator pos:start="63:31" pos:end="63:31">&amp;</operator> <literal type="number" pos:start="63:33" pos:end="63:36">0xFF</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="64:17" pos:end="64:37"><expr pos:start="64:17" pos:end="64:36"><name pos:start="64:17" pos:end="64:17">g</name> <operator pos:start="64:19" pos:end="64:19">=</operator> <operator pos:start="64:21" pos:end="64:21">(</operator><name pos:start="64:22" pos:end="64:22">p</name> <operator pos:start="64:24" pos:end="64:25">&gt;&gt;</operator>  <literal type="number" pos:start="64:28" pos:end="64:28">8</literal><operator pos:start="64:29" pos:end="64:29">)</operator> <operator pos:start="64:31" pos:end="64:31">&amp;</operator> <literal type="number" pos:start="64:33" pos:end="64:36">0xFF</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="65:17" pos:end="65:37"><expr pos:start="65:17" pos:end="65:36"><name pos:start="65:17" pos:end="65:17">b</name> <operator pos:start="65:19" pos:end="65:19">=</operator>  <name pos:start="65:22" pos:end="65:22">p</name>        <operator pos:start="65:31" pos:end="65:31">&amp;</operator> <literal type="number" pos:start="65:33" pos:end="65:36">0xFF</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="66:15" pos:end="70:13">else if <condition pos:start="66:23" pos:end="66:55">(<expr pos:start="66:24" pos:end="66:54"><name pos:start="66:24" pos:end="66:35"><name pos:start="66:24" pos:end="66:24">c</name><operator pos:start="66:25" pos:end="66:26">-&gt;</operator><name pos:start="66:27" pos:end="66:35">srcFormat</name></name> <operator pos:start="66:37" pos:end="66:38">==</operator> <name pos:start="66:40" pos:end="66:54">AV_PIX_FMT_RGB8</name></expr>)</condition> <block pos:start="66:57" pos:end="70:13">{<block_content pos:start="67:17" pos:end="69:40">
                <expr_stmt pos:start="67:17" pos:end="67:40"><expr pos:start="67:17" pos:end="67:39"><name pos:start="67:17" pos:end="67:17">r</name> <operator pos:start="67:19" pos:end="67:19">=</operator> <operator pos:start="67:21" pos:end="67:21">(</operator> <name pos:start="67:23" pos:end="67:23">i</name> <operator pos:start="67:25" pos:end="67:26">&gt;&gt;</operator> <literal type="number" pos:start="67:28" pos:end="67:28">5</literal>     <operator pos:start="67:34" pos:end="67:34">)</operator> <operator pos:start="67:36" pos:end="67:36">*</operator> <literal type="number" pos:start="67:38" pos:end="67:39">36</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="68:17" pos:end="68:40"><expr pos:start="68:17" pos:end="68:39"><name pos:start="68:17" pos:end="68:17">g</name> <operator pos:start="68:19" pos:end="68:19">=</operator> <operator pos:start="68:21" pos:end="68:21">(</operator><operator pos:start="68:22" pos:end="68:22">(</operator><name pos:start="68:23" pos:end="68:23">i</name> <operator pos:start="68:25" pos:end="68:26">&gt;&gt;</operator> <literal type="number" pos:start="68:28" pos:end="68:28">2</literal><operator pos:start="68:29" pos:end="68:29">)</operator> <operator pos:start="68:31" pos:end="68:31">&amp;</operator> <literal type="number" pos:start="68:33" pos:end="68:33">7</literal><operator pos:start="68:34" pos:end="68:34">)</operator> <operator pos:start="68:36" pos:end="68:36">*</operator> <literal type="number" pos:start="68:38" pos:end="68:39">36</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="69:17" pos:end="69:40"><expr pos:start="69:17" pos:end="69:39"><name pos:start="69:17" pos:end="69:17">b</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <operator pos:start="69:21" pos:end="69:21">(</operator> <name pos:start="69:23" pos:end="69:23">i</name>       <operator pos:start="69:31" pos:end="69:31">&amp;</operator> <literal type="number" pos:start="69:33" pos:end="69:33">3</literal><operator pos:start="69:34" pos:end="69:34">)</operator> <operator pos:start="69:36" pos:end="69:36">*</operator> <literal type="number" pos:start="69:38" pos:end="69:39">85</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="70:15" pos:end="74:13">else if <condition pos:start="70:23" pos:end="70:55">(<expr pos:start="70:24" pos:end="70:54"><name pos:start="70:24" pos:end="70:35"><name pos:start="70:24" pos:end="70:24">c</name><operator pos:start="70:25" pos:end="70:26">-&gt;</operator><name pos:start="70:27" pos:end="70:35">srcFormat</name></name> <operator pos:start="70:37" pos:end="70:38">==</operator> <name pos:start="70:40" pos:end="70:54">AV_PIX_FMT_BGR8</name></expr>)</condition> <block pos:start="70:57" pos:end="74:13">{<block_content pos:start="71:17" pos:end="73:40">
                <expr_stmt pos:start="71:17" pos:end="71:40"><expr pos:start="71:17" pos:end="71:39"><name pos:start="71:17" pos:end="71:17">b</name> <operator pos:start="71:19" pos:end="71:19">=</operator> <operator pos:start="71:21" pos:end="71:21">(</operator> <name pos:start="71:23" pos:end="71:23">i</name> <operator pos:start="71:25" pos:end="71:26">&gt;&gt;</operator> <literal type="number" pos:start="71:28" pos:end="71:28">6</literal>     <operator pos:start="71:34" pos:end="71:34">)</operator> <operator pos:start="71:36" pos:end="71:36">*</operator> <literal type="number" pos:start="71:38" pos:end="71:39">85</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="72:17" pos:end="72:40"><expr pos:start="72:17" pos:end="72:39"><name pos:start="72:17" pos:end="72:17">g</name> <operator pos:start="72:19" pos:end="72:19">=</operator> <operator pos:start="72:21" pos:end="72:21">(</operator><operator pos:start="72:22" pos:end="72:22">(</operator><name pos:start="72:23" pos:end="72:23">i</name> <operator pos:start="72:25" pos:end="72:26">&gt;&gt;</operator> <literal type="number" pos:start="72:28" pos:end="72:28">3</literal><operator pos:start="72:29" pos:end="72:29">)</operator> <operator pos:start="72:31" pos:end="72:31">&amp;</operator> <literal type="number" pos:start="72:33" pos:end="72:33">7</literal><operator pos:start="72:34" pos:end="72:34">)</operator> <operator pos:start="72:36" pos:end="72:36">*</operator> <literal type="number" pos:start="72:38" pos:end="72:39">36</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="73:17" pos:end="73:40"><expr pos:start="73:17" pos:end="73:39"><name pos:start="73:17" pos:end="73:17">r</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <operator pos:start="73:21" pos:end="73:21">(</operator> <name pos:start="73:23" pos:end="73:23">i</name>       <operator pos:start="73:31" pos:end="73:31">&amp;</operator> <literal type="number" pos:start="73:33" pos:end="73:33">7</literal><operator pos:start="73:34" pos:end="73:34">)</operator> <operator pos:start="73:36" pos:end="73:36">*</operator> <literal type="number" pos:start="73:38" pos:end="73:39">36</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="74:15" pos:end="78:13">else if <condition pos:start="74:23" pos:end="74:60">(<expr pos:start="74:24" pos:end="74:59"><name pos:start="74:24" pos:end="74:35"><name pos:start="74:24" pos:end="74:24">c</name><operator pos:start="74:25" pos:end="74:26">-&gt;</operator><name pos:start="74:27" pos:end="74:35">srcFormat</name></name> <operator pos:start="74:37" pos:end="74:38">==</operator> <name pos:start="74:40" pos:end="74:59">AV_PIX_FMT_RGB4_BYTE</name></expr>)</condition> <block pos:start="74:62" pos:end="78:13">{<block_content pos:start="75:17" pos:end="77:41">
                <expr_stmt pos:start="75:17" pos:end="75:41"><expr pos:start="75:17" pos:end="75:40"><name pos:start="75:17" pos:end="75:17">r</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <operator pos:start="75:21" pos:end="75:21">(</operator> <name pos:start="75:23" pos:end="75:23">i</name> <operator pos:start="75:25" pos:end="75:26">&gt;&gt;</operator> <literal type="number" pos:start="75:28" pos:end="75:28">3</literal>     <operator pos:start="75:34" pos:end="75:34">)</operator> <operator pos:start="75:36" pos:end="75:36">*</operator> <literal type="number" pos:start="75:38" pos:end="75:40">255</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="76:17" pos:end="76:40"><expr pos:start="76:17" pos:end="76:39"><name pos:start="76:17" pos:end="76:17">g</name> <operator pos:start="76:19" pos:end="76:19">=</operator> <operator pos:start="76:21" pos:end="76:21">(</operator><operator pos:start="76:22" pos:end="76:22">(</operator><name pos:start="76:23" pos:end="76:23">i</name> <operator pos:start="76:25" pos:end="76:26">&gt;&gt;</operator> <literal type="number" pos:start="76:28" pos:end="76:28">1</literal><operator pos:start="76:29" pos:end="76:29">)</operator> <operator pos:start="76:31" pos:end="76:31">&amp;</operator> <literal type="number" pos:start="76:33" pos:end="76:33">3</literal><operator pos:start="76:34" pos:end="76:34">)</operator> <operator pos:start="76:36" pos:end="76:36">*</operator> <literal type="number" pos:start="76:38" pos:end="76:39">85</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="77:17" pos:end="77:41"><expr pos:start="77:17" pos:end="77:40"><name pos:start="77:17" pos:end="77:17">b</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <operator pos:start="77:21" pos:end="77:21">(</operator> <name pos:start="77:23" pos:end="77:23">i</name>       <operator pos:start="77:31" pos:end="77:31">&amp;</operator> <literal type="number" pos:start="77:33" pos:end="77:33">1</literal><operator pos:start="77:34" pos:end="77:34">)</operator> <operator pos:start="77:36" pos:end="77:36">*</operator> <literal type="number" pos:start="77:38" pos:end="77:40">255</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="78:15" pos:end="80:13">else if <condition pos:start="78:23" pos:end="78:93">(<expr pos:start="78:24" pos:end="78:92"><name pos:start="78:24" pos:end="78:35"><name pos:start="78:24" pos:end="78:24">c</name><operator pos:start="78:25" pos:end="78:26">-&gt;</operator><name pos:start="78:27" pos:end="78:35">srcFormat</name></name> <operator pos:start="78:37" pos:end="78:38">==</operator> <name pos:start="78:40" pos:end="78:55">AV_PIX_FMT_GRAY8</name> <operator pos:start="78:57" pos:end="78:58">||</operator> <name pos:start="78:60" pos:end="78:71"><name pos:start="78:60" pos:end="78:60">c</name><operator pos:start="78:61" pos:end="78:62">-&gt;</operator><name pos:start="78:63" pos:end="78:71">srcFormat</name></name> <operator pos:start="78:73" pos:end="78:74">==</operator> <name pos:start="78:76" pos:end="78:92">AV_PIX_FMT_GRAY8A</name></expr>)</condition> <block pos:start="78:95" pos:end="80:13">{<block_content pos:start="79:17" pos:end="79:30">
                <expr_stmt pos:start="79:17" pos:end="79:30"><expr pos:start="79:17" pos:end="79:29"><name pos:start="79:17" pos:end="79:17">r</name> <operator pos:start="79:19" pos:end="79:19">=</operator> <name pos:start="79:21" pos:end="79:21">g</name> <operator pos:start="79:23" pos:end="79:23">=</operator> <name pos:start="79:25" pos:end="79:25">b</name> <operator pos:start="79:27" pos:end="79:27">=</operator> <name pos:start="79:29" pos:end="79:29">i</name></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="80:15" pos:end="187:15">else <block pos:start="80:20" pos:end="187:15">{<block_content pos:start="81:17" pos:end="187:15">
                <expr_stmt pos:start="81:17" pos:end="81:65"><expr pos:start="81:17" pos:end="81:64"><call pos:start="81:17" pos:end="81:64"><name pos:start="81:17" pos:end="81:26">av_assert1</name><argument_list pos:start="81:27" pos:end="81:64">(<argument pos:start="81:28" pos:end="81:63"><expr pos:start="81:28" pos:end="81:63"><name pos:start="81:28" pos:end="81:39"><name pos:start="81:28" pos:end="81:28">c</name><operator pos:start="81:29" pos:end="81:30">-&gt;</operator><name pos:start="81:31" pos:end="81:39">srcFormat</name></name> <operator pos:start="81:41" pos:end="81:42">==</operator> <name pos:start="81:44" pos:end="81:63">AV_PIX_FMT_BGR4_BYTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="82:17" pos:end="82:41"><expr pos:start="82:17" pos:end="82:40"><name pos:start="82:17" pos:end="82:17">b</name> <operator pos:start="82:19" pos:end="82:19">=</operator> <operator pos:start="82:21" pos:end="82:21">(</operator> <name pos:start="82:23" pos:end="82:23">i</name> <operator pos:start="82:25" pos:end="82:26">&gt;&gt;</operator> <literal type="number" pos:start="82:28" pos:end="82:28">3</literal>     <operator pos:start="82:34" pos:end="82:34">)</operator> <operator pos:start="82:36" pos:end="82:36">*</operator> <literal type="number" pos:start="82:38" pos:end="82:40">255</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="83:17" pos:end="83:40"><expr pos:start="83:17" pos:end="83:39"><name pos:start="83:17" pos:end="83:17">g</name> <operator pos:start="83:19" pos:end="83:19">=</operator> <operator pos:start="83:21" pos:end="83:21">(</operator><operator pos:start="83:22" pos:end="83:22">(</operator><name pos:start="83:23" pos:end="83:23">i</name> <operator pos:start="83:25" pos:end="83:26">&gt;&gt;</operator> <literal type="number" pos:start="83:28" pos:end="83:28">1</literal><operator pos:start="83:29" pos:end="83:29">)</operator> <operator pos:start="83:31" pos:end="83:31">&amp;</operator> <literal type="number" pos:start="83:33" pos:end="83:33">3</literal><operator pos:start="83:34" pos:end="83:34">)</operator> <operator pos:start="83:36" pos:end="83:36">*</operator> <literal type="number" pos:start="83:38" pos:end="83:39">85</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="84:17" pos:end="95:0"><expr pos:start="84:17" pos:end="84:40"><name pos:start="84:17" pos:end="84:17">r</name> <operator pos:start="84:19" pos:end="84:19">=</operator> <operator pos:start="84:21" pos:end="84:21">(</operator> <name pos:start="84:23" pos:end="84:23">i</name>       <operator pos:start="84:31" pos:end="84:31">&amp;</operator> <literal type="number" pos:start="84:33" pos:end="84:33">1</literal><operator pos:start="84:34" pos:end="84:34">)</operator> <operator pos:start="84:36" pos:end="84:36">*</operator> <literal type="number" pos:start="84:38" pos:end="84:40">255</literal></expr>;</expr_stmt>
<cpp:define pos:start="85:1" pos:end="85:24">#<cpp:directive pos:start="85:2" pos:end="85:7">define</cpp:directive> <cpp:macro pos:start="85:9" pos:end="85:21"><name pos:start="85:9" pos:end="85:21">RGB2YUV_SHIFT</name></cpp:macro> <cpp:value pos:start="85:23" pos:end="85:24">15</cpp:value></cpp:define>
<cpp:define pos:start="86:1" pos:end="86:68">#<cpp:directive pos:start="86:2" pos:end="86:7">define</cpp:directive> <cpp:macro pos:start="86:9" pos:end="86:10"><name pos:start="86:9" pos:end="86:10">BY</name></cpp:macro> <cpp:value pos:start="86:12" pos:end="86:68">( (int) (0.114 * 219 / 255 * (1 &lt;&lt; RGB2YUV_SHIFT) + 0.5))</cpp:value></cpp:define>
<cpp:define pos:start="87:1" pos:end="87:68">#<cpp:directive pos:start="87:2" pos:end="87:7">define</cpp:directive> <cpp:macro pos:start="87:9" pos:end="87:10"><name pos:start="87:9" pos:end="87:10">BV</name></cpp:macro> <cpp:value pos:start="87:12" pos:end="87:68">(-(int) (0.081 * 224 / 255 * (1 &lt;&lt; RGB2YUV_SHIFT) + 0.5))</cpp:value></cpp:define>
<cpp:define pos:start="88:1" pos:end="88:68">#<cpp:directive pos:start="88:2" pos:end="88:7">define</cpp:directive> <cpp:macro pos:start="88:9" pos:end="88:10"><name pos:start="88:9" pos:end="88:10">BU</name></cpp:macro> <cpp:value pos:start="88:12" pos:end="88:68">( (int) (0.500 * 224 / 255 * (1 &lt;&lt; RGB2YUV_SHIFT) + 0.5))</cpp:value></cpp:define>
<cpp:define pos:start="89:1" pos:end="89:68">#<cpp:directive pos:start="89:2" pos:end="89:7">define</cpp:directive> <cpp:macro pos:start="89:9" pos:end="89:10"><name pos:start="89:9" pos:end="89:10">GY</name></cpp:macro> <cpp:value pos:start="89:12" pos:end="89:68">( (int) (0.587 * 219 / 255 * (1 &lt;&lt; RGB2YUV_SHIFT) + 0.5))</cpp:value></cpp:define>
<cpp:define pos:start="90:1" pos:end="90:68">#<cpp:directive pos:start="90:2" pos:end="90:7">define</cpp:directive> <cpp:macro pos:start="90:9" pos:end="90:10"><name pos:start="90:9" pos:end="90:10">GV</name></cpp:macro> <cpp:value pos:start="90:12" pos:end="90:68">(-(int) (0.419 * 224 / 255 * (1 &lt;&lt; RGB2YUV_SHIFT) + 0.5))</cpp:value></cpp:define>
<cpp:define pos:start="91:1" pos:end="91:68">#<cpp:directive pos:start="91:2" pos:end="91:7">define</cpp:directive> <cpp:macro pos:start="91:9" pos:end="91:10"><name pos:start="91:9" pos:end="91:10">GU</name></cpp:macro> <cpp:value pos:start="91:12" pos:end="91:68">(-(int) (0.331 * 224 / 255 * (1 &lt;&lt; RGB2YUV_SHIFT) + 0.5))</cpp:value></cpp:define>
<cpp:define pos:start="92:1" pos:end="92:68">#<cpp:directive pos:start="92:2" pos:end="92:7">define</cpp:directive> <cpp:macro pos:start="92:9" pos:end="92:10"><name pos:start="92:9" pos:end="92:10">RY</name></cpp:macro> <cpp:value pos:start="92:12" pos:end="92:68">( (int) (0.299 * 219 / 255 * (1 &lt;&lt; RGB2YUV_SHIFT) + 0.5))</cpp:value></cpp:define>
<cpp:define pos:start="93:1" pos:end="93:68">#<cpp:directive pos:start="93:2" pos:end="93:7">define</cpp:directive> <cpp:macro pos:start="93:9" pos:end="93:10"><name pos:start="93:9" pos:end="93:10">RV</name></cpp:macro> <cpp:value pos:start="93:12" pos:end="93:68">( (int) (0.500 * 224 / 255 * (1 &lt;&lt; RGB2YUV_SHIFT) + 0.5))</cpp:value></cpp:define>
<cpp:define pos:start="94:1" pos:end="94:68">#<cpp:directive pos:start="94:2" pos:end="94:7">define</cpp:directive> <cpp:macro pos:start="94:9" pos:end="94:10"><name pos:start="94:9" pos:end="94:10">RU</name></cpp:macro> <cpp:value pos:start="94:12" pos:end="94:68">(-(int) (0.169 * 224 / 255 * (1 &lt;&lt; RGB2YUV_SHIFT) + 0.5))</cpp:value></cpp:define>
            <expr_stmt pos:start="95:13" pos:end="95:106"><expr pos:start="95:13" pos:end="95:105"><name pos:start="95:13" pos:end="95:13">y</name> <operator pos:start="95:15" pos:end="95:15">=</operator> <call pos:start="95:17" pos:end="95:105"><name pos:start="95:17" pos:end="95:29">av_clip_uint8</name><argument_list pos:start="95:30" pos:end="95:105">(<argument pos:start="95:31" pos:end="95:104"><expr pos:start="95:31" pos:end="95:104"><operator pos:start="95:31" pos:end="95:31">(</operator><name pos:start="95:32" pos:end="95:33">RY</name> <operator pos:start="95:35" pos:end="95:35">*</operator> <name pos:start="95:37" pos:end="95:37">r</name> <operator pos:start="95:39" pos:end="95:39">+</operator> <name pos:start="95:41" pos:end="95:42">GY</name> <operator pos:start="95:44" pos:end="95:44">*</operator> <name pos:start="95:46" pos:end="95:46">g</name> <operator pos:start="95:48" pos:end="95:48">+</operator> <name pos:start="95:50" pos:end="95:51">BY</name> <operator pos:start="95:53" pos:end="95:53">*</operator> <name pos:start="95:55" pos:end="95:55">b</name> <operator pos:start="95:57" pos:end="95:57">+</operator> <operator pos:start="95:59" pos:end="95:59">(</operator> <literal type="number" pos:start="95:61" pos:end="95:62">33</literal> <operator pos:start="95:64" pos:end="95:65">&lt;&lt;</operator> <operator pos:start="95:67" pos:end="95:67">(</operator><name pos:start="95:68" pos:end="95:80">RGB2YUV_SHIFT</name> <operator pos:start="95:82" pos:end="95:82">-</operator> <literal type="number" pos:start="95:84" pos:end="95:84">1</literal><operator pos:start="95:85" pos:end="95:85">)</operator><operator pos:start="95:86" pos:end="95:86">)</operator><operator pos:start="95:87" pos:end="95:87">)</operator> <operator pos:start="95:89" pos:end="95:90">&gt;&gt;</operator> <name pos:start="95:92" pos:end="95:104">RGB2YUV_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="96:13" pos:end="96:106"><expr pos:start="96:13" pos:end="96:105"><name pos:start="96:13" pos:end="96:13">u</name> <operator pos:start="96:15" pos:end="96:15">=</operator> <call pos:start="96:17" pos:end="96:105"><name pos:start="96:17" pos:end="96:29">av_clip_uint8</name><argument_list pos:start="96:30" pos:end="96:105">(<argument pos:start="96:31" pos:end="96:104"><expr pos:start="96:31" pos:end="96:104"><operator pos:start="96:31" pos:end="96:31">(</operator><name pos:start="96:32" pos:end="96:33">RU</name> <operator pos:start="96:35" pos:end="96:35">*</operator> <name pos:start="96:37" pos:end="96:37">r</name> <operator pos:start="96:39" pos:end="96:39">+</operator> <name pos:start="96:41" pos:end="96:42">GU</name> <operator pos:start="96:44" pos:end="96:44">*</operator> <name pos:start="96:46" pos:end="96:46">g</name> <operator pos:start="96:48" pos:end="96:48">+</operator> <name pos:start="96:50" pos:end="96:51">BU</name> <operator pos:start="96:53" pos:end="96:53">*</operator> <name pos:start="96:55" pos:end="96:55">b</name> <operator pos:start="96:57" pos:end="96:57">+</operator> <operator pos:start="96:59" pos:end="96:59">(</operator><literal type="number" pos:start="96:60" pos:end="96:62">257</literal> <operator pos:start="96:64" pos:end="96:65">&lt;&lt;</operator> <operator pos:start="96:67" pos:end="96:67">(</operator><name pos:start="96:68" pos:end="96:80">RGB2YUV_SHIFT</name> <operator pos:start="96:82" pos:end="96:82">-</operator> <literal type="number" pos:start="96:84" pos:end="96:84">1</literal><operator pos:start="96:85" pos:end="96:85">)</operator><operator pos:start="96:86" pos:end="96:86">)</operator><operator pos:start="96:87" pos:end="96:87">)</operator> <operator pos:start="96:89" pos:end="96:90">&gt;&gt;</operator> <name pos:start="96:92" pos:end="96:104">RGB2YUV_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="97:13" pos:end="97:106"><expr pos:start="97:13" pos:end="97:105"><name pos:start="97:13" pos:end="97:13">v</name> <operator pos:start="97:15" pos:end="97:15">=</operator> <call pos:start="97:17" pos:end="97:105"><name pos:start="97:17" pos:end="97:29">av_clip_uint8</name><argument_list pos:start="97:30" pos:end="97:105">(<argument pos:start="97:31" pos:end="97:104"><expr pos:start="97:31" pos:end="97:104"><operator pos:start="97:31" pos:end="97:31">(</operator><name pos:start="97:32" pos:end="97:33">RV</name> <operator pos:start="97:35" pos:end="97:35">*</operator> <name pos:start="97:37" pos:end="97:37">r</name> <operator pos:start="97:39" pos:end="97:39">+</operator> <name pos:start="97:41" pos:end="97:42">GV</name> <operator pos:start="97:44" pos:end="97:44">*</operator> <name pos:start="97:46" pos:end="97:46">g</name> <operator pos:start="97:48" pos:end="97:48">+</operator> <name pos:start="97:50" pos:end="97:51">BV</name> <operator pos:start="97:53" pos:end="97:53">*</operator> <name pos:start="97:55" pos:end="97:55">b</name> <operator pos:start="97:57" pos:end="97:57">+</operator> <operator pos:start="97:59" pos:end="97:59">(</operator><literal type="number" pos:start="97:60" pos:end="97:62">257</literal> <operator pos:start="97:64" pos:end="97:65">&lt;&lt;</operator> <operator pos:start="97:67" pos:end="97:67">(</operator><name pos:start="97:68" pos:end="97:80">RGB2YUV_SHIFT</name> <operator pos:start="97:82" pos:end="97:82">-</operator> <literal type="number" pos:start="97:84" pos:end="97:84">1</literal><operator pos:start="97:85" pos:end="97:85">)</operator><operator pos:start="97:86" pos:end="97:86">)</operator><operator pos:start="97:87" pos:end="97:87">)</operator> <operator pos:start="97:89" pos:end="97:90">&gt;&gt;</operator> <name pos:start="97:92" pos:end="97:104">RGB2YUV_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="98:13" pos:end="98:68"><expr pos:start="98:13" pos:end="98:67"><name pos:start="98:13" pos:end="98:25"><name pos:start="98:13" pos:end="98:13">c</name><operator pos:start="98:14" pos:end="98:15">-&gt;</operator><name pos:start="98:16" pos:end="98:22">pal_yuv</name><index pos:start="98:23" pos:end="98:25">[<expr pos:start="98:24" pos:end="98:24"><name pos:start="98:24" pos:end="98:24">i</name></expr>]</index></name><operator pos:start="98:26" pos:end="98:26">=</operator> <name pos:start="98:28" pos:end="98:28">y</name> <operator pos:start="98:30" pos:end="98:30">+</operator> <operator pos:start="98:32" pos:end="98:32">(</operator><name pos:start="98:33" pos:end="98:33">u</name><operator pos:start="98:34" pos:end="98:35">&lt;&lt;</operator><literal type="number" pos:start="98:36" pos:end="98:36">8</literal><operator pos:start="98:37" pos:end="98:37">)</operator> <operator pos:start="98:39" pos:end="98:39">+</operator> <operator pos:start="98:41" pos:end="98:41">(</operator><name pos:start="98:42" pos:end="98:42">v</name><operator pos:start="98:43" pos:end="98:44">&lt;&lt;</operator><literal type="number" pos:start="98:45" pos:end="98:46">16</literal><operator pos:start="98:47" pos:end="98:47">)</operator> <operator pos:start="98:49" pos:end="98:49">+</operator> <operator pos:start="98:51" pos:end="98:51">(</operator><operator pos:start="98:52" pos:end="98:52">(</operator><name pos:start="98:53" pos:end="98:60">unsigned</name><operator pos:start="98:61" pos:end="98:61">)</operator><name pos:start="98:62" pos:end="98:62">a</name><operator pos:start="98:63" pos:end="98:64">&lt;&lt;</operator><literal type="number" pos:start="98:65" pos:end="98:66">24</literal><operator pos:start="98:67" pos:end="98:67">)</operator></expr>;</expr_stmt>
            <switch pos:start="99:13" pos:end="187:15">switch <condition pos:start="99:20" pos:end="99:33">(<expr pos:start="99:21" pos:end="99:32"><name pos:start="99:21" pos:end="99:32"><name pos:start="99:21" pos:end="99:21">c</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:32">dstFormat</name></name></expr>)</condition> <block pos:start="99:35" pos:end="187:15">{<block_content pos:start="100:13" pos:end="187:15">
            <case pos:start="100:13" pos:end="102:0">case <expr pos:start="100:18" pos:end="100:33"><name pos:start="100:18" pos:end="100:33">AV_PIX_FMT_BGR32</name></expr>:</case>
<cpp:if pos:start="101:1" pos:end="101:19">#<cpp:directive pos:start="101:2" pos:end="101:3">if</cpp:directive> <expr pos:start="101:5" pos:end="101:19"><operator pos:start="101:5" pos:end="101:5">!</operator><name pos:start="101:6" pos:end="101:19">HAVE_BIGENDIAN</name></expr></cpp:if>
            <case pos:start="102:13" pos:end="104:0">case <expr pos:start="102:18" pos:end="102:33"><name pos:start="102:18" pos:end="102:33">AV_PIX_FMT_RGB24</name></expr>:</case>
<cpp:endif pos:start="103:1" pos:end="103:6">#<cpp:directive pos:start="103:2" pos:end="103:6">endif</cpp:directive></cpp:endif>
                <expr_stmt pos:start="104:17" pos:end="104:73"><expr pos:start="104:17" pos:end="104:72"><name pos:start="104:17" pos:end="104:29"><name pos:start="104:17" pos:end="104:17">c</name><operator pos:start="104:18" pos:end="104:19">-&gt;</operator><name pos:start="104:20" pos:end="104:26">pal_rgb</name><index pos:start="104:27" pos:end="104:29">[<expr pos:start="104:28" pos:end="104:28"><name pos:start="104:28" pos:end="104:28">i</name></expr>]</index></name><operator pos:start="104:30" pos:end="104:30">=</operator>  <name pos:start="104:33" pos:end="104:33">r</name> <operator pos:start="104:35" pos:end="104:35">+</operator> <operator pos:start="104:37" pos:end="104:37">(</operator><name pos:start="104:38" pos:end="104:38">g</name><operator pos:start="104:39" pos:end="104:40">&lt;&lt;</operator><literal type="number" pos:start="104:41" pos:end="104:41">8</literal><operator pos:start="104:42" pos:end="104:42">)</operator> <operator pos:start="104:44" pos:end="104:44">+</operator> <operator pos:start="104:46" pos:end="104:46">(</operator><name pos:start="104:47" pos:end="104:47">b</name><operator pos:start="104:48" pos:end="104:49">&lt;&lt;</operator><literal type="number" pos:start="104:50" pos:end="104:51">16</literal><operator pos:start="104:52" pos:end="104:52">)</operator> <operator pos:start="104:54" pos:end="104:54">+</operator> <operator pos:start="104:56" pos:end="104:56">(</operator><operator pos:start="104:57" pos:end="104:57">(</operator><name pos:start="104:58" pos:end="104:65">unsigned</name><operator pos:start="104:66" pos:end="104:66">)</operator><name pos:start="104:67" pos:end="104:67">a</name><operator pos:start="104:68" pos:end="104:69">&lt;&lt;</operator><literal type="number" pos:start="104:70" pos:end="104:71">24</literal><operator pos:start="104:72" pos:end="104:72">)</operator></expr>;</expr_stmt>
                <break pos:start="105:17" pos:end="105:22">break;</break>
            <case pos:start="106:13" pos:end="108:0">case <expr pos:start="106:18" pos:end="106:35"><name pos:start="106:18" pos:end="106:35">AV_PIX_FMT_BGR32_1</name></expr>:</case>
<cpp:if pos:start="107:1" pos:end="107:18">#<cpp:directive pos:start="107:2" pos:end="107:3">if</cpp:directive> <expr pos:start="107:5" pos:end="107:18"><name pos:start="107:5" pos:end="107:18">HAVE_BIGENDIAN</name></expr></cpp:if>
            <case pos:start="108:13" pos:end="110:0">case <expr pos:start="108:18" pos:end="108:33"><name pos:start="108:18" pos:end="108:33">AV_PIX_FMT_BGR24</name></expr>:</case>
<cpp:endif pos:start="109:1" pos:end="109:6">#<cpp:directive pos:start="109:2" pos:end="109:6">endif</cpp:directive></cpp:endif>
                <expr_stmt pos:start="110:17" pos:end="110:72"><expr pos:start="110:17" pos:end="110:71"><name pos:start="110:17" pos:end="110:29"><name pos:start="110:17" pos:end="110:17">c</name><operator pos:start="110:18" pos:end="110:19">-&gt;</operator><name pos:start="110:20" pos:end="110:26">pal_rgb</name><index pos:start="110:27" pos:end="110:29">[<expr pos:start="110:28" pos:end="110:28"><name pos:start="110:28" pos:end="110:28">i</name></expr>]</index></name><operator pos:start="110:30" pos:end="110:30">=</operator> <name pos:start="110:32" pos:end="110:32">a</name> <operator pos:start="110:34" pos:end="110:34">+</operator> <operator pos:start="110:36" pos:end="110:36">(</operator><name pos:start="110:37" pos:end="110:37">r</name><operator pos:start="110:38" pos:end="110:39">&lt;&lt;</operator><literal type="number" pos:start="110:40" pos:end="110:40">8</literal><operator pos:start="110:41" pos:end="110:41">)</operator> <operator pos:start="110:43" pos:end="110:43">+</operator> <operator pos:start="110:45" pos:end="110:45">(</operator><name pos:start="110:46" pos:end="110:46">g</name><operator pos:start="110:47" pos:end="110:48">&lt;&lt;</operator><literal type="number" pos:start="110:49" pos:end="110:50">16</literal><operator pos:start="110:51" pos:end="110:51">)</operator> <operator pos:start="110:53" pos:end="110:53">+</operator> <operator pos:start="110:55" pos:end="110:55">(</operator><operator pos:start="110:56" pos:end="110:56">(</operator><name pos:start="110:57" pos:end="110:64">unsigned</name><operator pos:start="110:65" pos:end="110:65">)</operator><name pos:start="110:66" pos:end="110:66">b</name><operator pos:start="110:67" pos:end="110:68">&lt;&lt;</operator><literal type="number" pos:start="110:69" pos:end="110:70">24</literal><operator pos:start="110:71" pos:end="110:71">)</operator></expr>;</expr_stmt>
                <break pos:start="111:17" pos:end="111:22">break;</break>
            <case pos:start="112:13" pos:end="114:0">case <expr pos:start="112:18" pos:end="112:35"><name pos:start="112:18" pos:end="112:35">AV_PIX_FMT_RGB32_1</name></expr>:</case>
<cpp:if pos:start="113:1" pos:end="113:18">#<cpp:directive pos:start="113:2" pos:end="113:3">if</cpp:directive> <expr pos:start="113:5" pos:end="113:18"><name pos:start="113:5" pos:end="113:18">HAVE_BIGENDIAN</name></expr></cpp:if>
            <case pos:start="114:13" pos:end="116:0">case <expr pos:start="114:18" pos:end="114:33"><name pos:start="114:18" pos:end="114:33">AV_PIX_FMT_RGB24</name></expr>:</case>
<cpp:endif pos:start="115:1" pos:end="115:6">#<cpp:directive pos:start="115:2" pos:end="115:6">endif</cpp:directive></cpp:endif>
                <expr_stmt pos:start="116:17" pos:end="116:72"><expr pos:start="116:17" pos:end="116:71"><name pos:start="116:17" pos:end="116:29"><name pos:start="116:17" pos:end="116:17">c</name><operator pos:start="116:18" pos:end="116:19">-&gt;</operator><name pos:start="116:20" pos:end="116:26">pal_rgb</name><index pos:start="116:27" pos:end="116:29">[<expr pos:start="116:28" pos:end="116:28"><name pos:start="116:28" pos:end="116:28">i</name></expr>]</index></name><operator pos:start="116:30" pos:end="116:30">=</operator> <name pos:start="116:32" pos:end="116:32">a</name> <operator pos:start="116:34" pos:end="116:34">+</operator> <operator pos:start="116:36" pos:end="116:36">(</operator><name pos:start="116:37" pos:end="116:37">b</name><operator pos:start="116:38" pos:end="116:39">&lt;&lt;</operator><literal type="number" pos:start="116:40" pos:end="116:40">8</literal><operator pos:start="116:41" pos:end="116:41">)</operator> <operator pos:start="116:43" pos:end="116:43">+</operator> <operator pos:start="116:45" pos:end="116:45">(</operator><name pos:start="116:46" pos:end="116:46">g</name><operator pos:start="116:47" pos:end="116:48">&lt;&lt;</operator><literal type="number" pos:start="116:49" pos:end="116:50">16</literal><operator pos:start="116:51" pos:end="116:51">)</operator> <operator pos:start="116:53" pos:end="116:53">+</operator> <operator pos:start="116:55" pos:end="116:55">(</operator><operator pos:start="116:56" pos:end="116:56">(</operator><name pos:start="116:57" pos:end="116:64">unsigned</name><operator pos:start="116:65" pos:end="116:65">)</operator><name pos:start="116:66" pos:end="116:66">r</name><operator pos:start="116:67" pos:end="116:68">&lt;&lt;</operator><literal type="number" pos:start="116:69" pos:end="116:70">24</literal><operator pos:start="116:71" pos:end="116:71">)</operator></expr>;</expr_stmt>
                <break pos:start="117:17" pos:end="117:22">break;</break>
            <case pos:start="118:13" pos:end="120:0">case <expr pos:start="118:18" pos:end="118:33"><name pos:start="118:18" pos:end="118:33">AV_PIX_FMT_RGB32</name></expr>:</case>
<cpp:if pos:start="119:1" pos:end="119:19">#<cpp:directive pos:start="119:2" pos:end="119:3">if</cpp:directive> <expr pos:start="119:5" pos:end="119:19"><operator pos:start="119:5" pos:end="119:5">!</operator><name pos:start="119:6" pos:end="119:19">HAVE_BIGENDIAN</name></expr></cpp:if>
            <case pos:start="120:13" pos:end="122:0">case <expr pos:start="120:18" pos:end="120:33"><name pos:start="120:18" pos:end="120:33">AV_PIX_FMT_BGR24</name></expr>:</case>
<cpp:endif pos:start="121:1" pos:end="121:6">#<cpp:directive pos:start="121:2" pos:end="121:6">endif</cpp:directive></cpp:endif>
            <default pos:start="122:13" pos:end="122:20">default:</default>
                <expr_stmt pos:start="123:17" pos:end="123:73"><expr pos:start="123:17" pos:end="123:72"><name pos:start="123:17" pos:end="123:29"><name pos:start="123:17" pos:end="123:17">c</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:26">pal_rgb</name><index pos:start="123:27" pos:end="123:29">[<expr pos:start="123:28" pos:end="123:28"><name pos:start="123:28" pos:end="123:28">i</name></expr>]</index></name><operator pos:start="123:30" pos:end="123:30">=</operator>  <name pos:start="123:33" pos:end="123:33">b</name> <operator pos:start="123:35" pos:end="123:35">+</operator> <operator pos:start="123:37" pos:end="123:37">(</operator><name pos:start="123:38" pos:end="123:38">g</name><operator pos:start="123:39" pos:end="123:40">&lt;&lt;</operator><literal type="number" pos:start="123:41" pos:end="123:41">8</literal><operator pos:start="123:42" pos:end="123:42">)</operator> <operator pos:start="123:44" pos:end="123:44">+</operator> <operator pos:start="123:46" pos:end="123:46">(</operator><name pos:start="123:47" pos:end="123:47">r</name><operator pos:start="123:48" pos:end="123:49">&lt;&lt;</operator><literal type="number" pos:start="123:50" pos:end="123:51">16</literal><operator pos:start="123:52" pos:end="123:52">)</operator> <operator pos:start="123:54" pos:end="123:54">+</operator> <operator pos:start="123:56" pos:end="123:56">(</operator><operator pos:start="123:57" pos:end="123:57">(</operator><name pos:start="123:58" pos:end="123:65">unsigned</name><operator pos:start="123:66" pos:end="123:66">)</operator><name pos:start="123:67" pos:end="123:67">a</name><operator pos:start="123:68" pos:end="123:69">&lt;&lt;</operator><literal type="number" pos:start="123:70" pos:end="123:71">24</literal><operator pos:start="123:72" pos:end="123:72">)</operator></expr>;</expr_stmt>
    <if_stmt pos:start="124:5" pos:end="187:15"><if pos:start="124:5" pos:end="187:15">if <condition pos:start="124:8" pos:end="124:63">(<expr pos:start="124:9" pos:end="124:62"><name pos:start="124:9" pos:end="124:20"><name pos:start="124:9" pos:end="124:9">c</name><operator pos:start="124:10" pos:end="124:11">-&gt;</operator><name pos:start="124:12" pos:end="124:20">src0Alpha</name></name> <operator pos:start="124:22" pos:end="124:23">&amp;&amp;</operator> <operator pos:start="124:25" pos:end="124:25">!</operator><name pos:start="124:26" pos:end="124:37"><name pos:start="124:26" pos:end="124:26">c</name><operator pos:start="124:27" pos:end="124:28">-&gt;</operator><name pos:start="124:29" pos:end="124:37">dst0Alpha</name></name> <operator pos:start="124:39" pos:end="124:40">&amp;&amp;</operator> <call pos:start="124:42" pos:end="124:62"><name pos:start="124:42" pos:end="124:48">isALPHA</name><argument_list pos:start="124:49" pos:end="124:62">(<argument pos:start="124:50" pos:end="124:61"><expr pos:start="124:50" pos:end="124:61"><name pos:start="124:50" pos:end="124:61"><name pos:start="124:50" pos:end="124:50">c</name><operator pos:start="124:51" pos:end="124:52">-&gt;</operator><name pos:start="124:53" pos:end="124:61">dstFormat</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="124:65" pos:end="187:15">{<block_content pos:start="125:9" pos:end="187:15">
        <decl_stmt pos:start="125:9" pos:end="125:22"><decl pos:start="125:9" pos:end="125:21"><type pos:start="125:9" pos:end="125:17"><name pos:start="125:9" pos:end="125:15">uint8_t</name> <modifier pos:start="125:17" pos:end="125:17">*</modifier></type><name pos:start="125:18" pos:end="125:21">base</name></decl>;</decl_stmt>
        <decl_stmt pos:start="126:9" pos:end="126:16"><decl pos:start="126:9" pos:end="126:13"><type pos:start="126:9" pos:end="126:11"><name pos:start="126:9" pos:end="126:11">int</name></type> <name pos:start="126:13" pos:end="126:13">x</name></decl>,<decl pos:start="126:15" pos:end="126:15"><type ref="prev" pos:start="126:9" pos:end="126:11"/><name pos:start="126:15" pos:end="126:15">y</name></decl>;</decl_stmt>
        <expr_stmt pos:start="127:9" pos:end="127:67"><expr pos:start="127:9" pos:end="127:66"><name pos:start="127:9" pos:end="127:16">rgb0_tmp</name> <operator pos:start="127:18" pos:end="127:18">=</operator> <call pos:start="127:20" pos:end="127:66"><name pos:start="127:20" pos:end="127:28">av_malloc</name><argument_list pos:start="127:29" pos:end="127:66">(<argument pos:start="127:30" pos:end="127:65"><expr pos:start="127:30" pos:end="127:65"><call pos:start="127:30" pos:end="127:48"><name pos:start="127:30" pos:end="127:34">FFABS</name><argument_list pos:start="127:35" pos:end="127:48">(<argument pos:start="127:36" pos:end="127:47"><expr pos:start="127:36" pos:end="127:47"><name pos:start="127:36" pos:end="127:47"><name pos:start="127:36" pos:end="127:44">srcStride</name><index pos:start="127:45" pos:end="127:47">[<expr pos:start="127:46" pos:end="127:46"><literal type="number" pos:start="127:46" pos:end="127:46">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="127:50" pos:end="127:50">*</operator> <name pos:start="127:52" pos:end="127:60">srcSliceH</name> <operator pos:start="127:62" pos:end="127:62">+</operator> <literal type="number" pos:start="127:64" pos:end="127:65">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="128:9" pos:end="129:35"><if pos:start="128:9" pos:end="129:35">if <condition pos:start="128:12" pos:end="128:22">(<expr pos:start="128:13" pos:end="128:21"><operator pos:start="128:13" pos:end="128:13">!</operator><name pos:start="128:14" pos:end="128:21">rgb0_tmp</name></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:35"><block_content pos:start="129:13" pos:end="129:35">
            <return pos:start="129:13" pos:end="129:35">return <expr pos:start="129:20" pos:end="129:34"><call pos:start="129:20" pos:end="129:34"><name pos:start="129:20" pos:end="129:26">AVERROR</name><argument_list pos:start="129:27" pos:end="129:34">(<argument pos:start="129:28" pos:end="129:33"><expr pos:start="129:28" pos:end="129:33"><name pos:start="129:28" pos:end="129:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="130:9" pos:end="130:85"><expr pos:start="130:9" pos:end="130:84"><name pos:start="130:9" pos:end="130:12">base</name> <operator pos:start="130:14" pos:end="130:14">=</operator> <ternary pos:start="130:16" pos:end="130:84"><condition pos:start="130:16" pos:end="130:33"><expr pos:start="130:16" pos:end="130:31"><name pos:start="130:16" pos:end="130:27"><name pos:start="130:16" pos:end="130:24">srcStride</name><index pos:start="130:25" pos:end="130:27">[<expr pos:start="130:26" pos:end="130:26"><literal type="number" pos:start="130:26" pos:end="130:26">0</literal></expr>]</index></name> <operator pos:start="130:29" pos:end="130:29">&lt;</operator> <literal type="number" pos:start="130:31" pos:end="130:31">0</literal></expr> ?</condition><then pos:start="130:35" pos:end="130:73"> <expr pos:start="130:35" pos:end="130:73"><name pos:start="130:35" pos:end="130:42">rgb0_tmp</name> <operator pos:start="130:44" pos:end="130:44">-</operator> <name pos:start="130:46" pos:end="130:57"><name pos:start="130:46" pos:end="130:54">srcStride</name><index pos:start="130:55" pos:end="130:57">[<expr pos:start="130:56" pos:end="130:56"><literal type="number" pos:start="130:56" pos:end="130:56">0</literal></expr>]</index></name> <operator pos:start="130:59" pos:end="130:59">*</operator> <operator pos:start="130:61" pos:end="130:61">(</operator><name pos:start="130:62" pos:end="130:70">srcSliceH</name><operator pos:start="130:71" pos:end="130:71">-</operator><literal type="number" pos:start="130:72" pos:end="130:72">1</literal><operator pos:start="130:73" pos:end="130:73">)</operator></expr> </then><else pos:start="130:75" pos:end="130:84">: <expr pos:start="130:77" pos:end="130:84"><name pos:start="130:77" pos:end="130:84">rgb0_tmp</name></expr></else></ternary></expr>;</expr_stmt>
        <for pos:start="131:9" pos:end="187:15">for <control pos:start="131:13" pos:end="131:35">(<init pos:start="131:14" pos:end="131:17"><expr pos:start="131:14" pos:end="131:16"><name pos:start="131:14" pos:end="131:14">y</name><operator pos:start="131:15" pos:end="131:15">=</operator><literal type="number" pos:start="131:16" pos:end="131:16">0</literal></expr>;</init> <condition pos:start="131:19" pos:end="131:30"><expr pos:start="131:19" pos:end="131:29"><name pos:start="131:19" pos:end="131:19">y</name><operator pos:start="131:20" pos:end="131:20">&lt;</operator><name pos:start="131:21" pos:end="131:29">srcSliceH</name></expr>;</condition> <incr pos:start="131:32" pos:end="131:34"><expr pos:start="131:32" pos:end="131:34"><name pos:start="131:32" pos:end="131:32">y</name><operator pos:start="131:33" pos:end="131:34">++</operator></expr></incr>)</control><block pos:start="131:36" pos:end="187:15">{<block_content pos:start="132:13" pos:end="187:15">
            <expr_stmt pos:start="132:13" pos:end="132:79"><expr pos:start="132:13" pos:end="132:78"><call pos:start="132:13" pos:end="132:78"><name pos:start="132:13" pos:end="132:18">memcpy</name><argument_list pos:start="132:19" pos:end="132:78">(<argument pos:start="132:20" pos:end="132:40"><expr pos:start="132:20" pos:end="132:40"><name pos:start="132:20" pos:end="132:23">base</name> <operator pos:start="132:25" pos:end="132:25">+</operator> <name pos:start="132:27" pos:end="132:38"><name pos:start="132:27" pos:end="132:35">srcStride</name><index pos:start="132:36" pos:end="132:38">[<expr pos:start="132:37" pos:end="132:37"><literal type="number" pos:start="132:37" pos:end="132:37">0</literal></expr>]</index></name><operator pos:start="132:39" pos:end="132:39">*</operator><name pos:start="132:40" pos:end="132:40">y</name></expr></argument>, <argument pos:start="132:43" pos:end="132:66"><expr pos:start="132:43" pos:end="132:66"><name pos:start="132:43" pos:end="132:49"><name pos:start="132:43" pos:end="132:46">src2</name><index pos:start="132:47" pos:end="132:49">[<expr pos:start="132:48" pos:end="132:48"><literal type="number" pos:start="132:48" pos:end="132:48">0</literal></expr>]</index></name> <operator pos:start="132:51" pos:end="132:51">+</operator> <name pos:start="132:53" pos:end="132:64"><name pos:start="132:53" pos:end="132:61">srcStride</name><index pos:start="132:62" pos:end="132:64">[<expr pos:start="132:63" pos:end="132:63"><literal type="number" pos:start="132:63" pos:end="132:63">0</literal></expr>]</index></name><operator pos:start="132:65" pos:end="132:65">*</operator><name pos:start="132:66" pos:end="132:66">y</name></expr></argument>, <argument pos:start="132:69" pos:end="132:77"><expr pos:start="132:69" pos:end="132:77"><literal type="number" pos:start="132:69" pos:end="132:69">4</literal><operator pos:start="132:70" pos:end="132:70">*</operator><name pos:start="132:71" pos:end="132:77"><name pos:start="132:71" pos:end="132:71">c</name><operator pos:start="132:72" pos:end="132:73">-&gt;</operator><name pos:start="132:74" pos:end="132:77">srcW</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <for pos:start="133:13" pos:end="187:15">for <control pos:start="133:17" pos:end="133:53">(<init pos:start="133:18" pos:end="133:34"><expr pos:start="133:18" pos:end="133:33"><name pos:start="133:18" pos:end="133:18">x</name><operator pos:start="133:19" pos:end="133:19">=</operator><name pos:start="133:20" pos:end="133:31"><name pos:start="133:20" pos:end="133:20">c</name><operator pos:start="133:21" pos:end="133:22">-&gt;</operator><name pos:start="133:23" pos:end="133:31">src0Alpha</name></name><operator pos:start="133:32" pos:end="133:32">-</operator><literal type="number" pos:start="133:33" pos:end="133:33">1</literal></expr>;</init> <condition pos:start="133:36" pos:end="133:47"><expr pos:start="133:36" pos:end="133:46"><name pos:start="133:36" pos:end="133:36">x</name><operator pos:start="133:37" pos:end="133:37">&lt;</operator><literal type="number" pos:start="133:38" pos:end="133:38">4</literal><operator pos:start="133:39" pos:end="133:39">*</operator><name pos:start="133:40" pos:end="133:46"><name pos:start="133:40" pos:end="133:40">c</name><operator pos:start="133:41" pos:end="133:42">-&gt;</operator><name pos:start="133:43" pos:end="133:46">srcW</name></name></expr>;</condition> <incr pos:start="133:49" pos:end="133:52"><expr pos:start="133:49" pos:end="133:52"><name pos:start="133:49" pos:end="133:49">x</name><operator pos:start="133:50" pos:end="133:51">+=</operator><literal type="number" pos:start="133:52" pos:end="133:52">4</literal></expr></incr>)</control> <block pos:start="133:55" pos:end="187:15">{<block_content pos:start="134:17" pos:end="187:15">
                <expr_stmt pos:start="134:17" pos:end="134:49"><expr pos:start="134:17" pos:end="134:48"><name pos:start="134:17" pos:end="134:41"><name pos:start="134:17" pos:end="134:20">base</name><index pos:start="134:21" pos:end="134:41">[ <expr pos:start="134:23" pos:end="134:40"><name pos:start="134:23" pos:end="134:34"><name pos:start="134:23" pos:end="134:31">srcStride</name><index pos:start="134:32" pos:end="134:34">[<expr pos:start="134:33" pos:end="134:33"><literal type="number" pos:start="134:33" pos:end="134:33">0</literal></expr>]</index></name><operator pos:start="134:35" pos:end="134:35">*</operator><name pos:start="134:36" pos:end="134:36">y</name> <operator pos:start="134:38" pos:end="134:38">+</operator> <name pos:start="134:40" pos:end="134:40">x</name></expr>]</index></name> <operator pos:start="134:43" pos:end="134:43">=</operator> <literal type="number" pos:start="134:45" pos:end="134:48">0xFF</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="135:9" pos:end="135:23"><expr pos:start="135:9" pos:end="135:22"><name pos:start="135:9" pos:end="135:15"><name pos:start="135:9" pos:end="135:12">src2</name><index pos:start="135:13" pos:end="135:15">[<expr pos:start="135:14" pos:end="135:14"><literal type="number" pos:start="135:14" pos:end="135:14">0</literal></expr>]</index></name> <operator pos:start="135:17" pos:end="135:17">=</operator> <name pos:start="135:19" pos:end="135:22">base</name></expr>;</expr_stmt>
    <if_stmt pos:start="136:5" pos:end="187:15"><if pos:start="136:5" pos:end="187:15">if <condition pos:start="136:8" pos:end="136:74">(<expr pos:start="136:9" pos:end="136:73"><name pos:start="136:9" pos:end="136:17"><name pos:start="136:9" pos:end="136:9">c</name><operator pos:start="136:10" pos:end="136:11">-&gt;</operator><name pos:start="136:12" pos:end="136:17">srcXYZ</name></name> <operator pos:start="136:19" pos:end="136:20">&amp;&amp;</operator> <operator pos:start="136:22" pos:end="136:22">!</operator><operator pos:start="136:23" pos:end="136:23">(</operator><name pos:start="136:24" pos:end="136:32"><name pos:start="136:24" pos:end="136:24">c</name><operator pos:start="136:25" pos:end="136:26">-&gt;</operator><name pos:start="136:27" pos:end="136:32">dstXYZ</name></name> <operator pos:start="136:34" pos:end="136:35">&amp;&amp;</operator> <name pos:start="136:37" pos:end="136:43"><name pos:start="136:37" pos:end="136:37">c</name><operator pos:start="136:38" pos:end="136:39">-&gt;</operator><name pos:start="136:40" pos:end="136:43">srcW</name></name><operator pos:start="136:44" pos:end="136:45">==</operator><name pos:start="136:46" pos:end="136:52"><name pos:start="136:46" pos:end="136:46">c</name><operator pos:start="136:47" pos:end="136:48">-&gt;</operator><name pos:start="136:49" pos:end="136:52">dstW</name></name> <operator pos:start="136:54" pos:end="136:55">&amp;&amp;</operator> <name pos:start="136:57" pos:end="136:63"><name pos:start="136:57" pos:end="136:57">c</name><operator pos:start="136:58" pos:end="136:59">-&gt;</operator><name pos:start="136:60" pos:end="136:63">srcH</name></name><operator pos:start="136:64" pos:end="136:65">==</operator><name pos:start="136:66" pos:end="136:72"><name pos:start="136:66" pos:end="136:66">c</name><operator pos:start="136:67" pos:end="136:68">-&gt;</operator><name pos:start="136:69" pos:end="136:72">dstH</name></name><operator pos:start="136:73" pos:end="136:73">)</operator></expr>)</condition> <block pos:start="136:76" pos:end="187:15">{<block_content pos:start="137:9" pos:end="187:15">
        <decl_stmt pos:start="137:9" pos:end="137:22"><decl pos:start="137:9" pos:end="137:21"><type pos:start="137:9" pos:end="137:17"><name pos:start="137:9" pos:end="137:15">uint8_t</name> <modifier pos:start="137:17" pos:end="137:17">*</modifier></type><name pos:start="137:18" pos:end="137:21">base</name></decl>;</decl_stmt>
        <expr_stmt pos:start="138:9" pos:end="138:67"><expr pos:start="138:9" pos:end="138:66"><name pos:start="138:9" pos:end="138:16">rgb0_tmp</name> <operator pos:start="138:18" pos:end="138:18">=</operator> <call pos:start="138:20" pos:end="138:66"><name pos:start="138:20" pos:end="138:28">av_malloc</name><argument_list pos:start="138:29" pos:end="138:66">(<argument pos:start="138:30" pos:end="138:65"><expr pos:start="138:30" pos:end="138:65"><call pos:start="138:30" pos:end="138:48"><name pos:start="138:30" pos:end="138:34">FFABS</name><argument_list pos:start="138:35" pos:end="138:48">(<argument pos:start="138:36" pos:end="138:47"><expr pos:start="138:36" pos:end="138:47"><name pos:start="138:36" pos:end="138:47"><name pos:start="138:36" pos:end="138:44">srcStride</name><index pos:start="138:45" pos:end="138:47">[<expr pos:start="138:46" pos:end="138:46"><literal type="number" pos:start="138:46" pos:end="138:46">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="138:50" pos:end="138:50">*</operator> <name pos:start="138:52" pos:end="138:60">srcSliceH</name> <operator pos:start="138:62" pos:end="138:62">+</operator> <literal type="number" pos:start="138:64" pos:end="138:65">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="139:9" pos:end="140:35"><if pos:start="139:9" pos:end="140:35">if <condition pos:start="139:12" pos:end="139:22">(<expr pos:start="139:13" pos:end="139:21"><operator pos:start="139:13" pos:end="139:13">!</operator><name pos:start="139:14" pos:end="139:21">rgb0_tmp</name></expr>)</condition><block type="pseudo" pos:start="140:13" pos:end="140:35"><block_content pos:start="140:13" pos:end="140:35">
            <return pos:start="140:13" pos:end="140:35">return <expr pos:start="140:20" pos:end="140:34"><call pos:start="140:20" pos:end="140:34"><name pos:start="140:20" pos:end="140:26">AVERROR</name><argument_list pos:start="140:27" pos:end="140:34">(<argument pos:start="140:28" pos:end="140:33"><expr pos:start="140:28" pos:end="140:33"><name pos:start="140:28" pos:end="140:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="141:9" pos:end="141:85"><expr pos:start="141:9" pos:end="141:84"><name pos:start="141:9" pos:end="141:12">base</name> <operator pos:start="141:14" pos:end="141:14">=</operator> <ternary pos:start="141:16" pos:end="141:84"><condition pos:start="141:16" pos:end="141:33"><expr pos:start="141:16" pos:end="141:31"><name pos:start="141:16" pos:end="141:27"><name pos:start="141:16" pos:end="141:24">srcStride</name><index pos:start="141:25" pos:end="141:27">[<expr pos:start="141:26" pos:end="141:26"><literal type="number" pos:start="141:26" pos:end="141:26">0</literal></expr>]</index></name> <operator pos:start="141:29" pos:end="141:29">&lt;</operator> <literal type="number" pos:start="141:31" pos:end="141:31">0</literal></expr> ?</condition><then pos:start="141:35" pos:end="141:73"> <expr pos:start="141:35" pos:end="141:73"><name pos:start="141:35" pos:end="141:42">rgb0_tmp</name> <operator pos:start="141:44" pos:end="141:44">-</operator> <name pos:start="141:46" pos:end="141:57"><name pos:start="141:46" pos:end="141:54">srcStride</name><index pos:start="141:55" pos:end="141:57">[<expr pos:start="141:56" pos:end="141:56"><literal type="number" pos:start="141:56" pos:end="141:56">0</literal></expr>]</index></name> <operator pos:start="141:59" pos:end="141:59">*</operator> <operator pos:start="141:61" pos:end="141:61">(</operator><name pos:start="141:62" pos:end="141:70">srcSliceH</name><operator pos:start="141:71" pos:end="141:71">-</operator><literal type="number" pos:start="141:72" pos:end="141:72">1</literal><operator pos:start="141:73" pos:end="141:73">)</operator></expr> </then><else pos:start="141:75" pos:end="141:84">: <expr pos:start="141:77" pos:end="141:84"><name pos:start="141:77" pos:end="141:84">rgb0_tmp</name></expr></else></ternary></expr>;</expr_stmt>
        <expr_stmt pos:start="142:9" pos:end="142:94"><expr pos:start="142:9" pos:end="142:93"><call pos:start="142:9" pos:end="142:93"><name pos:start="142:9" pos:end="142:20">xyz12Torgb48</name><argument_list pos:start="142:21" pos:end="142:93">(<argument pos:start="142:22" pos:end="142:22"><expr pos:start="142:22" pos:end="142:22"><name pos:start="142:22" pos:end="142:22">c</name></expr></argument>, <argument pos:start="142:25" pos:end="142:39"><expr pos:start="142:25" pos:end="142:39"><operator pos:start="142:25" pos:end="142:25">(</operator><name pos:start="142:26" pos:end="142:33">uint16_t</name><operator pos:start="142:34" pos:end="142:34">*</operator><operator pos:start="142:35" pos:end="142:35">)</operator><name pos:start="142:36" pos:end="142:39">base</name></expr></argument>, <argument pos:start="142:42" pos:end="142:65"><expr pos:start="142:42" pos:end="142:65"><operator pos:start="142:42" pos:end="142:42">(</operator><specifier pos:start="142:43" pos:end="142:47">const</specifier> <name pos:start="142:49" pos:end="142:56">uint16_t</name><operator pos:start="142:57" pos:end="142:57">*</operator><operator pos:start="142:58" pos:end="142:58">)</operator><name pos:start="142:59" pos:end="142:65"><name pos:start="142:59" pos:end="142:62">src2</name><index pos:start="142:63" pos:end="142:65">[<expr pos:start="142:64" pos:end="142:64"><literal type="number" pos:start="142:64" pos:end="142:64">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="142:68" pos:end="142:81"><expr pos:start="142:68" pos:end="142:81"><name pos:start="142:68" pos:end="142:79"><name pos:start="142:68" pos:end="142:76">srcStride</name><index pos:start="142:77" pos:end="142:79">[<expr pos:start="142:78" pos:end="142:78"><literal type="number" pos:start="142:78" pos:end="142:78">0</literal></expr>]</index></name><operator pos:start="142:80" pos:end="142:80">/</operator><literal type="number" pos:start="142:81" pos:end="142:81">2</literal></expr></argument>, <argument pos:start="142:84" pos:end="142:92"><expr pos:start="142:84" pos:end="142:92"><name pos:start="142:84" pos:end="142:92">srcSliceH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="143:9" pos:end="143:23"><expr pos:start="143:9" pos:end="143:22"><name pos:start="143:9" pos:end="143:15"><name pos:start="143:9" pos:end="143:12">src2</name><index pos:start="143:13" pos:end="143:15">[<expr pos:start="143:14" pos:end="143:14"><literal type="number" pos:start="143:14" pos:end="143:14">0</literal></expr>]</index></name> <operator pos:start="143:17" pos:end="143:17">=</operator> <name pos:start="143:19" pos:end="143:22">base</name></expr>;</expr_stmt>
    <if_stmt pos:start="144:5" pos:end="146:87"><if pos:start="144:5" pos:end="146:87">if <condition pos:start="144:8" pos:end="144:100">(<expr pos:start="144:9" pos:end="144:99"><operator pos:start="144:9" pos:end="144:9">!</operator><name pos:start="144:10" pos:end="144:18">srcSliceY</name> <operator pos:start="144:20" pos:end="144:21">&amp;&amp;</operator> <operator pos:start="144:23" pos:end="144:23">(</operator><name pos:start="144:24" pos:end="144:31"><name pos:start="144:24" pos:end="144:24">c</name><operator pos:start="144:25" pos:end="144:26">-&gt;</operator><name pos:start="144:27" pos:end="144:31">flags</name></name> <operator pos:start="144:33" pos:end="144:33">&amp;</operator> <name pos:start="144:35" pos:end="144:46">SWS_BITEXACT</name><operator pos:start="144:47" pos:end="144:47">)</operator> <operator pos:start="144:49" pos:end="144:50">&amp;&amp;</operator> <name pos:start="144:52" pos:end="144:60"><name pos:start="144:52" pos:end="144:52">c</name><operator pos:start="144:53" pos:end="144:54">-&gt;</operator><name pos:start="144:55" pos:end="144:60">dither</name></name> <operator pos:start="144:62" pos:end="144:63">==</operator> <name pos:start="144:65" pos:end="144:77">SWS_DITHER_ED</name> <operator pos:start="144:79" pos:end="144:80">&amp;&amp;</operator> <name pos:start="144:82" pos:end="144:99"><name pos:start="144:82" pos:end="144:82">c</name><operator pos:start="144:83" pos:end="144:84">-&gt;</operator><name pos:start="144:85" pos:end="144:96">dither_error</name><index pos:start="144:97" pos:end="144:99">[<expr pos:start="144:98" pos:end="144:98"><literal type="number" pos:start="144:98" pos:end="144:98">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="146:87"><block_content pos:start="145:9" pos:end="146:87">
        <for pos:start="145:9" pos:end="146:87">for <control pos:start="145:13" pos:end="145:31">(<init pos:start="145:14" pos:end="145:19"><expr pos:start="145:14" pos:end="145:18"><name pos:start="145:14" pos:end="145:14">i</name> <operator pos:start="145:16" pos:end="145:16">=</operator> <literal type="number" pos:start="145:18" pos:end="145:18">0</literal></expr>;</init> <condition pos:start="145:21" pos:end="145:26"><expr pos:start="145:21" pos:end="145:25"><name pos:start="145:21" pos:end="145:21">i</name> <operator pos:start="145:23" pos:end="145:23">&lt;</operator> <literal type="number" pos:start="145:25" pos:end="145:25">4</literal></expr>;</condition> <incr pos:start="145:28" pos:end="145:30"><expr pos:start="145:28" pos:end="145:30"><name pos:start="145:28" pos:end="145:28">i</name><operator pos:start="145:29" pos:end="145:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="146:13" pos:end="146:87"><block_content pos:start="146:13" pos:end="146:87">
            <expr_stmt pos:start="146:13" pos:end="146:87"><expr pos:start="146:13" pos:end="146:86"><call pos:start="146:13" pos:end="146:86"><name pos:start="146:13" pos:end="146:18">memset</name><argument_list pos:start="146:19" pos:end="146:86">(<argument pos:start="146:20" pos:end="146:37"><expr pos:start="146:20" pos:end="146:37"><name pos:start="146:20" pos:end="146:37"><name pos:start="146:20" pos:end="146:20">c</name><operator pos:start="146:21" pos:end="146:22">-&gt;</operator><name pos:start="146:23" pos:end="146:34">dither_error</name><index pos:start="146:35" pos:end="146:37">[<expr pos:start="146:36" pos:end="146:36"><name pos:start="146:36" pos:end="146:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="146:40" pos:end="146:40"><expr pos:start="146:40" pos:end="146:40"><literal type="number" pos:start="146:40" pos:end="146:40">0</literal></expr></argument>, <argument pos:start="146:43" pos:end="146:85"><expr pos:start="146:43" pos:end="146:85"><sizeof pos:start="146:43" pos:end="146:71">sizeof<argument_list pos:start="146:49" pos:end="146:71">(<argument pos:start="146:50" pos:end="146:70"><expr pos:start="146:50" pos:end="146:70"><name pos:start="146:50" pos:end="146:70"><name pos:start="146:50" pos:end="146:50">c</name><operator pos:start="146:51" pos:end="146:52">-&gt;</operator><name pos:start="146:53" pos:end="146:64">dither_error</name><index pos:start="146:65" pos:end="146:67">[<expr pos:start="146:66" pos:end="146:66"><literal type="number" pos:start="146:66" pos:end="146:66">0</literal></expr>]</index><index pos:start="146:68" pos:end="146:70">[<expr pos:start="146:69" pos:end="146:69"><literal type="number" pos:start="146:69" pos:end="146:69">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="146:73" pos:end="146:73">*</operator> <operator pos:start="146:75" pos:end="146:75">(</operator><name pos:start="146:76" pos:end="146:82"><name pos:start="146:76" pos:end="146:76">c</name><operator pos:start="146:77" pos:end="146:78">-&gt;</operator><name pos:start="146:79" pos:end="146:82">dstW</name></name><operator pos:start="146:83" pos:end="146:83">+</operator><literal type="number" pos:start="146:84" pos:end="146:84">2</literal><operator pos:start="146:85" pos:end="146:85">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>
    <comment type="line" pos:start="147:5" pos:end="147:51">// copy strides, so they can safely be modified</comment>
    <if_stmt pos:start="148:5" pos:end="187:15"><if pos:start="148:5" pos:end="161:5">if <condition pos:start="148:8" pos:end="148:25">(<expr pos:start="148:9" pos:end="148:24"><name pos:start="148:9" pos:end="148:19"><name pos:start="148:9" pos:end="148:9">c</name><operator pos:start="148:10" pos:end="148:11">-&gt;</operator><name pos:start="148:12" pos:end="148:19">sliceDir</name></name> <operator pos:start="148:21" pos:end="148:22">==</operator> <literal type="number" pos:start="148:24" pos:end="148:24">1</literal></expr>)</condition> <block pos:start="148:27" pos:end="161:5">{<block_content pos:start="150:9" pos:end="160:38">
        <comment type="line" pos:start="149:9" pos:end="149:39">// slices go from top to bottom</comment>
        <decl_stmt pos:start="150:9" pos:end="151:45"><decl pos:start="150:9" pos:end="151:44"><type pos:start="150:9" pos:end="150:11"><name pos:start="150:9" pos:end="150:11">int</name></type> <name pos:start="150:13" pos:end="150:25"><name pos:start="150:13" pos:end="150:22">srcStride2</name><index pos:start="150:23" pos:end="150:25">[<expr pos:start="150:24" pos:end="150:24"><literal type="number" pos:start="150:24" pos:end="150:24">4</literal></expr>]</index></name> <init pos:start="150:27" pos:end="151:44">= <expr pos:start="150:29" pos:end="151:44"><block pos:start="150:29" pos:end="151:44">{ <expr pos:start="150:31" pos:end="150:42"><name pos:start="150:31" pos:end="150:42"><name pos:start="150:31" pos:end="150:39">srcStride</name><index pos:start="150:40" pos:end="150:42">[<expr pos:start="150:41" pos:end="150:41"><literal type="number" pos:start="150:41" pos:end="150:41">0</literal></expr>]</index></name></expr>, <expr pos:start="150:45" pos:end="150:56"><name pos:start="150:45" pos:end="150:56"><name pos:start="150:45" pos:end="150:53">srcStride</name><index pos:start="150:54" pos:end="150:56">[<expr pos:start="150:55" pos:end="150:55"><literal type="number" pos:start="150:55" pos:end="150:55">1</literal></expr>]</index></name></expr>, <expr pos:start="150:59" pos:end="150:70"><name pos:start="150:59" pos:end="150:70"><name pos:start="150:59" pos:end="150:67">srcStride</name><index pos:start="150:68" pos:end="150:70">[<expr pos:start="150:69" pos:end="150:69"><literal type="number" pos:start="150:69" pos:end="150:69">2</literal></expr>]</index></name></expr>,
                              <expr pos:start="151:31" pos:end="151:42"><name pos:start="151:31" pos:end="151:42"><name pos:start="151:31" pos:end="151:39">srcStride</name><index pos:start="151:40" pos:end="151:42">[<expr pos:start="151:41" pos:end="151:41"><literal type="number" pos:start="151:41" pos:end="151:41">3</literal></expr>]</index></name></expr> }</block></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="152:9" pos:end="153:45"><decl pos:start="152:9" pos:end="153:44"><type pos:start="152:9" pos:end="152:11"><name pos:start="152:9" pos:end="152:11">int</name></type> <name pos:start="152:13" pos:end="152:25"><name pos:start="152:13" pos:end="152:22">dstStride2</name><index pos:start="152:23" pos:end="152:25">[<expr pos:start="152:24" pos:end="152:24"><literal type="number" pos:start="152:24" pos:end="152:24">4</literal></expr>]</index></name> <init pos:start="152:27" pos:end="153:44">= <expr pos:start="152:29" pos:end="153:44"><block pos:start="152:29" pos:end="153:44">{ <expr pos:start="152:31" pos:end="152:42"><name pos:start="152:31" pos:end="152:42"><name pos:start="152:31" pos:end="152:39">dstStride</name><index pos:start="152:40" pos:end="152:42">[<expr pos:start="152:41" pos:end="152:41"><literal type="number" pos:start="152:41" pos:end="152:41">0</literal></expr>]</index></name></expr>, <expr pos:start="152:45" pos:end="152:56"><name pos:start="152:45" pos:end="152:56"><name pos:start="152:45" pos:end="152:53">dstStride</name><index pos:start="152:54" pos:end="152:56">[<expr pos:start="152:55" pos:end="152:55"><literal type="number" pos:start="152:55" pos:end="152:55">1</literal></expr>]</index></name></expr>, <expr pos:start="152:59" pos:end="152:70"><name pos:start="152:59" pos:end="152:70"><name pos:start="152:59" pos:end="152:67">dstStride</name><index pos:start="152:68" pos:end="152:70">[<expr pos:start="152:69" pos:end="152:69"><literal type="number" pos:start="152:69" pos:end="152:69">2</literal></expr>]</index></name></expr>,
                              <expr pos:start="153:31" pos:end="153:42"><name pos:start="153:31" pos:end="153:42"><name pos:start="153:31" pos:end="153:39">dstStride</name><index pos:start="153:40" pos:end="153:42">[<expr pos:start="153:41" pos:end="153:41"><literal type="number" pos:start="153:41" pos:end="153:41">3</literal></expr>]</index></name></expr> }</block></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="154:9" pos:end="154:38"><expr pos:start="154:9" pos:end="154:37"><call pos:start="154:9" pos:end="154:37"><name pos:start="154:9" pos:end="154:17">reset_ptr</name><argument_list pos:start="154:18" pos:end="154:37">(<argument pos:start="154:19" pos:end="154:22"><expr pos:start="154:19" pos:end="154:22"><name pos:start="154:19" pos:end="154:22">src2</name></expr></argument>, <argument pos:start="154:25" pos:end="154:36"><expr pos:start="154:25" pos:end="154:36"><name pos:start="154:25" pos:end="154:36"><name pos:start="154:25" pos:end="154:25">c</name><operator pos:start="154:26" pos:end="154:27">-&gt;</operator><name pos:start="154:28" pos:end="154:36">srcFormat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="155:9" pos:end="155:45"><expr pos:start="155:9" pos:end="155:44"><call pos:start="155:9" pos:end="155:44"><name pos:start="155:9" pos:end="155:17">reset_ptr</name><argument_list pos:start="155:18" pos:end="155:44">(<argument pos:start="155:19" pos:end="155:29"><expr pos:start="155:19" pos:end="155:29"><operator pos:start="155:19" pos:end="155:19">(</operator><name pos:start="155:20" pos:end="155:23">void</name><operator pos:start="155:24" pos:end="155:24">*</operator><operator pos:start="155:25" pos:end="155:25">)</operator><name pos:start="155:26" pos:end="155:29">dst2</name></expr></argument>, <argument pos:start="155:32" pos:end="155:43"><expr pos:start="155:32" pos:end="155:43"><name pos:start="155:32" pos:end="155:43"><name pos:start="155:32" pos:end="155:32">c</name><operator pos:start="155:33" pos:end="155:34">-&gt;</operator><name pos:start="155:35" pos:end="155:43">dstFormat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="156:9" pos:end="156:51">/* reset slice direction at end of frame */</comment>
        <if_stmt pos:start="157:9" pos:end="158:28"><if pos:start="157:9" pos:end="158:28">if <condition pos:start="157:12" pos:end="157:45">(<expr pos:start="157:13" pos:end="157:44"><name pos:start="157:13" pos:end="157:21">srcSliceY</name> <operator pos:start="157:23" pos:end="157:23">+</operator> <name pos:start="157:25" pos:end="157:33">srcSliceH</name> <operator pos:start="157:35" pos:end="157:36">==</operator> <name pos:start="157:38" pos:end="157:44"><name pos:start="157:38" pos:end="157:38">c</name><operator pos:start="157:39" pos:end="157:40">-&gt;</operator><name pos:start="157:41" pos:end="157:44">srcH</name></name></expr>)</condition><block type="pseudo" pos:start="158:13" pos:end="158:28"><block_content pos:start="158:13" pos:end="158:28">
            <expr_stmt pos:start="158:13" pos:end="158:28"><expr pos:start="158:13" pos:end="158:27"><name pos:start="158:13" pos:end="158:23"><name pos:start="158:13" pos:end="158:13">c</name><operator pos:start="158:14" pos:end="158:15">-&gt;</operator><name pos:start="158:16" pos:end="158:23">sliceDir</name></name> <operator pos:start="158:25" pos:end="158:25">=</operator> <literal type="number" pos:start="158:27" pos:end="158:27">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="159:9" pos:end="160:38"><expr pos:start="159:9" pos:end="160:37"><name pos:start="159:9" pos:end="159:11">ret</name> <operator pos:start="159:13" pos:end="159:13">=</operator> <call pos:start="159:15" pos:end="160:37"><name pos:start="159:15" pos:end="159:24"><name pos:start="159:15" pos:end="159:15">c</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:24">swscale</name></name><argument_list pos:start="159:25" pos:end="160:37">(<argument pos:start="159:26" pos:end="159:26"><expr pos:start="159:26" pos:end="159:26"><name pos:start="159:26" pos:end="159:26">c</name></expr></argument>, <argument pos:start="159:29" pos:end="159:32"><expr pos:start="159:29" pos:end="159:32"><name pos:start="159:29" pos:end="159:32">src2</name></expr></argument>, <argument pos:start="159:35" pos:end="159:44"><expr pos:start="159:35" pos:end="159:44"><name pos:start="159:35" pos:end="159:44">srcStride2</name></expr></argument>, <argument pos:start="159:47" pos:end="159:55"><expr pos:start="159:47" pos:end="159:55"><name pos:start="159:47" pos:end="159:55">srcSliceY</name></expr></argument>, <argument pos:start="159:58" pos:end="159:66"><expr pos:start="159:58" pos:end="159:66"><name pos:start="159:58" pos:end="159:66">srcSliceH</name></expr></argument>, <argument pos:start="159:69" pos:end="159:72"><expr pos:start="159:69" pos:end="159:72"><name pos:start="159:69" pos:end="159:72">dst2</name></expr></argument>,
                          <argument pos:start="160:27" pos:end="160:36"><expr pos:start="160:27" pos:end="160:36"><name pos:start="160:27" pos:end="160:36">dstStride2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="161:7" pos:end="187:15">else <block pos:start="161:12" pos:end="187:15">{<block_content pos:start="163:9" pos:end="187:15">
        <comment type="line" pos:start="162:9" pos:end="162:71">// slices go from bottom to top =&gt; we flip the image internally</comment>
        <decl_stmt pos:start="163:9" pos:end="164:46"><decl pos:start="163:9" pos:end="164:45"><type pos:start="163:9" pos:end="163:11"><name pos:start="163:9" pos:end="163:11">int</name></type> <name pos:start="163:13" pos:end="163:25"><name pos:start="163:13" pos:end="163:22">srcStride2</name><index pos:start="163:23" pos:end="163:25">[<expr pos:start="163:24" pos:end="163:24"><literal type="number" pos:start="163:24" pos:end="163:24">4</literal></expr>]</index></name> <init pos:start="163:27" pos:end="164:45">= <expr pos:start="163:29" pos:end="164:45"><block pos:start="163:29" pos:end="164:45">{ <expr pos:start="163:31" pos:end="163:43"><operator pos:start="163:31" pos:end="163:31">-</operator><name pos:start="163:32" pos:end="163:43"><name pos:start="163:32" pos:end="163:40">srcStride</name><index pos:start="163:41" pos:end="163:43">[<expr pos:start="163:42" pos:end="163:42"><literal type="number" pos:start="163:42" pos:end="163:42">0</literal></expr>]</index></name></expr>, <expr pos:start="163:46" pos:end="163:58"><operator pos:start="163:46" pos:end="163:46">-</operator><name pos:start="163:47" pos:end="163:58"><name pos:start="163:47" pos:end="163:55">srcStride</name><index pos:start="163:56" pos:end="163:58">[<expr pos:start="163:57" pos:end="163:57"><literal type="number" pos:start="163:57" pos:end="163:57">1</literal></expr>]</index></name></expr>, <expr pos:start="163:61" pos:end="163:73"><operator pos:start="163:61" pos:end="163:61">-</operator><name pos:start="163:62" pos:end="163:73"><name pos:start="163:62" pos:end="163:70">srcStride</name><index pos:start="163:71" pos:end="163:73">[<expr pos:start="163:72" pos:end="163:72"><literal type="number" pos:start="163:72" pos:end="163:72">2</literal></expr>]</index></name></expr>,
                              <expr pos:start="164:31" pos:end="164:43"><operator pos:start="164:31" pos:end="164:31">-</operator><name pos:start="164:32" pos:end="164:43"><name pos:start="164:32" pos:end="164:40">srcStride</name><index pos:start="164:41" pos:end="164:43">[<expr pos:start="164:42" pos:end="164:42"><literal type="number" pos:start="164:42" pos:end="164:42">3</literal></expr>]</index></name></expr> }</block></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="165:9" pos:end="166:46"><decl pos:start="165:9" pos:end="166:45"><type pos:start="165:9" pos:end="165:11"><name pos:start="165:9" pos:end="165:11">int</name></type> <name pos:start="165:13" pos:end="165:25"><name pos:start="165:13" pos:end="165:22">dstStride2</name><index pos:start="165:23" pos:end="165:25">[<expr pos:start="165:24" pos:end="165:24"><literal type="number" pos:start="165:24" pos:end="165:24">4</literal></expr>]</index></name> <init pos:start="165:27" pos:end="166:45">= <expr pos:start="165:29" pos:end="166:45"><block pos:start="165:29" pos:end="166:45">{ <expr pos:start="165:31" pos:end="165:43"><operator pos:start="165:31" pos:end="165:31">-</operator><name pos:start="165:32" pos:end="165:43"><name pos:start="165:32" pos:end="165:40">dstStride</name><index pos:start="165:41" pos:end="165:43">[<expr pos:start="165:42" pos:end="165:42"><literal type="number" pos:start="165:42" pos:end="165:42">0</literal></expr>]</index></name></expr>, <expr pos:start="165:46" pos:end="165:58"><operator pos:start="165:46" pos:end="165:46">-</operator><name pos:start="165:47" pos:end="165:58"><name pos:start="165:47" pos:end="165:55">dstStride</name><index pos:start="165:56" pos:end="165:58">[<expr pos:start="165:57" pos:end="165:57"><literal type="number" pos:start="165:57" pos:end="165:57">1</literal></expr>]</index></name></expr>, <expr pos:start="165:61" pos:end="165:73"><operator pos:start="165:61" pos:end="165:61">-</operator><name pos:start="165:62" pos:end="165:73"><name pos:start="165:62" pos:end="165:70">dstStride</name><index pos:start="165:71" pos:end="165:73">[<expr pos:start="165:72" pos:end="165:72"><literal type="number" pos:start="165:72" pos:end="165:72">2</literal></expr>]</index></name></expr>,
                              <expr pos:start="166:31" pos:end="166:43"><operator pos:start="166:31" pos:end="166:31">-</operator><name pos:start="166:32" pos:end="166:43"><name pos:start="166:32" pos:end="166:40">dstStride</name><index pos:start="166:41" pos:end="166:43">[<expr pos:start="166:42" pos:end="166:42"><literal type="number" pos:start="166:42" pos:end="166:42">3</literal></expr>]</index></name></expr> }</block></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="167:9" pos:end="167:50"><expr pos:start="167:9" pos:end="167:49"><name pos:start="167:9" pos:end="167:15"><name pos:start="167:9" pos:end="167:12">src2</name><index pos:start="167:13" pos:end="167:15">[<expr pos:start="167:14" pos:end="167:14"><literal type="number" pos:start="167:14" pos:end="167:14">0</literal></expr>]</index></name> <operator pos:start="167:17" pos:end="167:18">+=</operator> <operator pos:start="167:20" pos:end="167:20">(</operator><name pos:start="167:21" pos:end="167:29">srcSliceH</name> <operator pos:start="167:31" pos:end="167:31">-</operator> <literal type="number" pos:start="167:33" pos:end="167:33">1</literal><operator pos:start="167:34" pos:end="167:34">)</operator> <operator pos:start="167:36" pos:end="167:36">*</operator> <name pos:start="167:38" pos:end="167:49"><name pos:start="167:38" pos:end="167:46">srcStride</name><index pos:start="167:47" pos:end="167:49">[<expr pos:start="167:48" pos:end="167:48"><literal type="number" pos:start="167:48" pos:end="167:48">0</literal></expr>]</index></name></expr>;</expr_stmt>
        <if_stmt pos:start="168:9" pos:end="169:79"><if pos:start="168:9" pos:end="169:79">if <condition pos:start="168:12" pos:end="168:34">(<expr pos:start="168:13" pos:end="168:33"><operator pos:start="168:13" pos:end="168:13">!</operator><call pos:start="168:14" pos:end="168:33"><name pos:start="168:14" pos:end="168:19">usePal</name><argument_list pos:start="168:20" pos:end="168:33">(<argument pos:start="168:21" pos:end="168:32"><expr pos:start="168:21" pos:end="168:32"><name pos:start="168:21" pos:end="168:32"><name pos:start="168:21" pos:end="168:21">c</name><operator pos:start="168:22" pos:end="168:23">-&gt;</operator><name pos:start="168:24" pos:end="168:32">srcFormat</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="169:13" pos:end="169:79"><block_content pos:start="169:13" pos:end="169:79">
            <expr_stmt pos:start="169:13" pos:end="169:79"><expr pos:start="169:13" pos:end="169:78"><name pos:start="169:13" pos:end="169:19"><name pos:start="169:13" pos:end="169:16">src2</name><index pos:start="169:17" pos:end="169:19">[<expr pos:start="169:18" pos:end="169:18"><literal type="number" pos:start="169:18" pos:end="169:18">1</literal></expr>]</index></name> <operator pos:start="169:21" pos:end="169:22">+=</operator> <operator pos:start="169:24" pos:end="169:24">(</operator><operator pos:start="169:25" pos:end="169:25">(</operator><name pos:start="169:26" pos:end="169:34">srcSliceH</name> <operator pos:start="169:36" pos:end="169:37">&gt;&gt;</operator> <name pos:start="169:39" pos:end="169:57"><name pos:start="169:39" pos:end="169:39">c</name><operator pos:start="169:40" pos:end="169:41">-&gt;</operator><name pos:start="169:42" pos:end="169:57">chrSrcVSubSample</name></name><operator pos:start="169:58" pos:end="169:58">)</operator> <operator pos:start="169:60" pos:end="169:60">-</operator> <literal type="number" pos:start="169:62" pos:end="169:62">1</literal><operator pos:start="169:63" pos:end="169:63">)</operator> <operator pos:start="169:65" pos:end="169:65">*</operator> <name pos:start="169:67" pos:end="169:78"><name pos:start="169:67" pos:end="169:75">srcStride</name><index pos:start="169:76" pos:end="169:78">[<expr pos:start="169:77" pos:end="169:77"><literal type="number" pos:start="169:77" pos:end="169:77">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="170:9" pos:end="170:75"><expr pos:start="170:9" pos:end="170:74"><name pos:start="170:9" pos:end="170:15"><name pos:start="170:9" pos:end="170:12">src2</name><index pos:start="170:13" pos:end="170:15">[<expr pos:start="170:14" pos:end="170:14"><literal type="number" pos:start="170:14" pos:end="170:14">2</literal></expr>]</index></name> <operator pos:start="170:17" pos:end="170:18">+=</operator> <operator pos:start="170:20" pos:end="170:20">(</operator><operator pos:start="170:21" pos:end="170:21">(</operator><name pos:start="170:22" pos:end="170:30">srcSliceH</name> <operator pos:start="170:32" pos:end="170:33">&gt;&gt;</operator> <name pos:start="170:35" pos:end="170:53"><name pos:start="170:35" pos:end="170:35">c</name><operator pos:start="170:36" pos:end="170:37">-&gt;</operator><name pos:start="170:38" pos:end="170:53">chrSrcVSubSample</name></name><operator pos:start="170:54" pos:end="170:54">)</operator> <operator pos:start="170:56" pos:end="170:56">-</operator> <literal type="number" pos:start="170:58" pos:end="170:58">1</literal><operator pos:start="170:59" pos:end="170:59">)</operator> <operator pos:start="170:61" pos:end="170:61">*</operator> <name pos:start="170:63" pos:end="170:74"><name pos:start="170:63" pos:end="170:71">srcStride</name><index pos:start="170:72" pos:end="170:74">[<expr pos:start="170:73" pos:end="170:73"><literal type="number" pos:start="170:73" pos:end="170:73">2</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="171:9" pos:end="171:50"><expr pos:start="171:9" pos:end="171:49"><name pos:start="171:9" pos:end="171:15"><name pos:start="171:9" pos:end="171:12">src2</name><index pos:start="171:13" pos:end="171:15">[<expr pos:start="171:14" pos:end="171:14"><literal type="number" pos:start="171:14" pos:end="171:14">3</literal></expr>]</index></name> <operator pos:start="171:17" pos:end="171:18">+=</operator> <operator pos:start="171:20" pos:end="171:20">(</operator><name pos:start="171:21" pos:end="171:29">srcSliceH</name> <operator pos:start="171:31" pos:end="171:31">-</operator> <literal type="number" pos:start="171:33" pos:end="171:33">1</literal><operator pos:start="171:34" pos:end="171:34">)</operator> <operator pos:start="171:36" pos:end="171:36">*</operator> <name pos:start="171:38" pos:end="171:49"><name pos:start="171:38" pos:end="171:46">srcStride</name><index pos:start="171:47" pos:end="171:49">[<expr pos:start="171:48" pos:end="171:48"><literal type="number" pos:start="171:48" pos:end="171:48">3</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="172:9" pos:end="172:73"><expr pos:start="172:9" pos:end="172:72"><name pos:start="172:9" pos:end="172:15"><name pos:start="172:9" pos:end="172:12">dst2</name><index pos:start="172:13" pos:end="172:15">[<expr pos:start="172:14" pos:end="172:14"><literal type="number" pos:start="172:14" pos:end="172:14">0</literal></expr>]</index></name> <operator pos:start="172:17" pos:end="172:18">+=</operator> <operator pos:start="172:20" pos:end="172:20">(</operator> <name pos:start="172:22" pos:end="172:28"><name pos:start="172:22" pos:end="172:22">c</name><operator pos:start="172:23" pos:end="172:24">-&gt;</operator><name pos:start="172:25" pos:end="172:28">dstH</name></name>                         <operator pos:start="172:54" pos:end="172:54">-</operator> <literal type="number" pos:start="172:56" pos:end="172:56">1</literal><operator pos:start="172:57" pos:end="172:57">)</operator> <operator pos:start="172:59" pos:end="172:59">*</operator> <name pos:start="172:61" pos:end="172:72"><name pos:start="172:61" pos:end="172:69">dstStride</name><index pos:start="172:70" pos:end="172:72">[<expr pos:start="172:71" pos:end="172:71"><literal type="number" pos:start="172:71" pos:end="172:71">0</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="173:9" pos:end="173:73"><expr pos:start="173:9" pos:end="173:72"><name pos:start="173:9" pos:end="173:15"><name pos:start="173:9" pos:end="173:12">dst2</name><index pos:start="173:13" pos:end="173:15">[<expr pos:start="173:14" pos:end="173:14"><literal type="number" pos:start="173:14" pos:end="173:14">1</literal></expr>]</index></name> <operator pos:start="173:17" pos:end="173:18">+=</operator> <operator pos:start="173:20" pos:end="173:20">(</operator><operator pos:start="173:21" pos:end="173:21">(</operator><name pos:start="173:22" pos:end="173:28"><name pos:start="173:22" pos:end="173:22">c</name><operator pos:start="173:23" pos:end="173:24">-&gt;</operator><name pos:start="173:25" pos:end="173:28">dstH</name></name> <operator pos:start="173:30" pos:end="173:31">&gt;&gt;</operator> <name pos:start="173:33" pos:end="173:51"><name pos:start="173:33" pos:end="173:33">c</name><operator pos:start="173:34" pos:end="173:35">-&gt;</operator><name pos:start="173:36" pos:end="173:51">chrDstVSubSample</name></name><operator pos:start="173:52" pos:end="173:52">)</operator> <operator pos:start="173:54" pos:end="173:54">-</operator> <literal type="number" pos:start="173:56" pos:end="173:56">1</literal><operator pos:start="173:57" pos:end="173:57">)</operator> <operator pos:start="173:59" pos:end="173:59">*</operator> <name pos:start="173:61" pos:end="173:72"><name pos:start="173:61" pos:end="173:69">dstStride</name><index pos:start="173:70" pos:end="173:72">[<expr pos:start="173:71" pos:end="173:71"><literal type="number" pos:start="173:71" pos:end="173:71">1</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="174:9" pos:end="174:73"><expr pos:start="174:9" pos:end="174:72"><name pos:start="174:9" pos:end="174:15"><name pos:start="174:9" pos:end="174:12">dst2</name><index pos:start="174:13" pos:end="174:15">[<expr pos:start="174:14" pos:end="174:14"><literal type="number" pos:start="174:14" pos:end="174:14">2</literal></expr>]</index></name> <operator pos:start="174:17" pos:end="174:18">+=</operator> <operator pos:start="174:20" pos:end="174:20">(</operator><operator pos:start="174:21" pos:end="174:21">(</operator><name pos:start="174:22" pos:end="174:28"><name pos:start="174:22" pos:end="174:22">c</name><operator pos:start="174:23" pos:end="174:24">-&gt;</operator><name pos:start="174:25" pos:end="174:28">dstH</name></name> <operator pos:start="174:30" pos:end="174:31">&gt;&gt;</operator> <name pos:start="174:33" pos:end="174:51"><name pos:start="174:33" pos:end="174:33">c</name><operator pos:start="174:34" pos:end="174:35">-&gt;</operator><name pos:start="174:36" pos:end="174:51">chrDstVSubSample</name></name><operator pos:start="174:52" pos:end="174:52">)</operator> <operator pos:start="174:54" pos:end="174:54">-</operator> <literal type="number" pos:start="174:56" pos:end="174:56">1</literal><operator pos:start="174:57" pos:end="174:57">)</operator> <operator pos:start="174:59" pos:end="174:59">*</operator> <name pos:start="174:61" pos:end="174:72"><name pos:start="174:61" pos:end="174:69">dstStride</name><index pos:start="174:70" pos:end="174:72">[<expr pos:start="174:71" pos:end="174:71"><literal type="number" pos:start="174:71" pos:end="174:71">2</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="175:9" pos:end="175:73"><expr pos:start="175:9" pos:end="175:72"><name pos:start="175:9" pos:end="175:15"><name pos:start="175:9" pos:end="175:12">dst2</name><index pos:start="175:13" pos:end="175:15">[<expr pos:start="175:14" pos:end="175:14"><literal type="number" pos:start="175:14" pos:end="175:14">3</literal></expr>]</index></name> <operator pos:start="175:17" pos:end="175:18">+=</operator> <operator pos:start="175:20" pos:end="175:20">(</operator> <name pos:start="175:22" pos:end="175:28"><name pos:start="175:22" pos:end="175:22">c</name><operator pos:start="175:23" pos:end="175:24">-&gt;</operator><name pos:start="175:25" pos:end="175:28">dstH</name></name>                         <operator pos:start="175:54" pos:end="175:54">-</operator> <literal type="number" pos:start="175:56" pos:end="175:56">1</literal><operator pos:start="175:57" pos:end="175:57">)</operator> <operator pos:start="175:59" pos:end="175:59">*</operator> <name pos:start="175:61" pos:end="175:72"><name pos:start="175:61" pos:end="175:69">dstStride</name><index pos:start="175:70" pos:end="175:72">[<expr pos:start="175:71" pos:end="175:71"><literal type="number" pos:start="175:71" pos:end="175:71">3</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="176:9" pos:end="176:38"><expr pos:start="176:9" pos:end="176:37"><call pos:start="176:9" pos:end="176:37"><name pos:start="176:9" pos:end="176:17">reset_ptr</name><argument_list pos:start="176:18" pos:end="176:37">(<argument pos:start="176:19" pos:end="176:22"><expr pos:start="176:19" pos:end="176:22"><name pos:start="176:19" pos:end="176:22">src2</name></expr></argument>, <argument pos:start="176:25" pos:end="176:36"><expr pos:start="176:25" pos:end="176:36"><name pos:start="176:25" pos:end="176:36"><name pos:start="176:25" pos:end="176:25">c</name><operator pos:start="176:26" pos:end="176:27">-&gt;</operator><name pos:start="176:28" pos:end="176:36">srcFormat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="177:9" pos:end="177:45"><expr pos:start="177:9" pos:end="177:44"><call pos:start="177:9" pos:end="177:44"><name pos:start="177:9" pos:end="177:17">reset_ptr</name><argument_list pos:start="177:18" pos:end="177:44">(<argument pos:start="177:19" pos:end="177:29"><expr pos:start="177:19" pos:end="177:29"><operator pos:start="177:19" pos:end="177:19">(</operator><name pos:start="177:20" pos:end="177:23">void</name><operator pos:start="177:24" pos:end="177:24">*</operator><operator pos:start="177:25" pos:end="177:25">)</operator><name pos:start="177:26" pos:end="177:29">dst2</name></expr></argument>, <argument pos:start="177:32" pos:end="177:43"><expr pos:start="177:32" pos:end="177:43"><name pos:start="177:32" pos:end="177:43"><name pos:start="177:32" pos:end="177:32">c</name><operator pos:start="177:33" pos:end="177:34">-&gt;</operator><name pos:start="177:35" pos:end="177:43">dstFormat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="178:9" pos:end="178:51">/* reset slice direction at end of frame */</comment>
        <if_stmt pos:start="179:9" pos:end="180:28"><if pos:start="179:9" pos:end="180:28">if <condition pos:start="179:12" pos:end="179:23">(<expr pos:start="179:13" pos:end="179:22"><operator pos:start="179:13" pos:end="179:13">!</operator><name pos:start="179:14" pos:end="179:22">srcSliceY</name></expr>)</condition><block type="pseudo" pos:start="180:13" pos:end="180:28"><block_content pos:start="180:13" pos:end="180:28">
            <expr_stmt pos:start="180:13" pos:end="180:28"><expr pos:start="180:13" pos:end="180:27"><name pos:start="180:13" pos:end="180:23"><name pos:start="180:13" pos:end="180:13">c</name><operator pos:start="180:14" pos:end="180:15">-&gt;</operator><name pos:start="180:16" pos:end="180:23">sliceDir</name></name> <operator pos:start="180:25" pos:end="180:25">=</operator> <literal type="number" pos:start="180:27" pos:end="180:27">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="181:9" pos:end="182:55"><expr pos:start="181:9" pos:end="182:54"><name pos:start="181:9" pos:end="181:11">ret</name> <operator pos:start="181:13" pos:end="181:13">=</operator> <call pos:start="181:15" pos:end="182:54"><name pos:start="181:15" pos:end="181:24"><name pos:start="181:15" pos:end="181:15">c</name><operator pos:start="181:16" pos:end="181:17">-&gt;</operator><name pos:start="181:18" pos:end="181:24">swscale</name></name><argument_list pos:start="181:25" pos:end="182:54">(<argument pos:start="181:26" pos:end="181:26"><expr pos:start="181:26" pos:end="181:26"><name pos:start="181:26" pos:end="181:26">c</name></expr></argument>, <argument pos:start="181:29" pos:end="181:32"><expr pos:start="181:29" pos:end="181:32"><name pos:start="181:29" pos:end="181:32">src2</name></expr></argument>, <argument pos:start="181:35" pos:end="181:44"><expr pos:start="181:35" pos:end="181:44"><name pos:start="181:35" pos:end="181:44">srcStride2</name></expr></argument>, <argument pos:start="181:47" pos:end="181:73"><expr pos:start="181:47" pos:end="181:73"><name pos:start="181:47" pos:end="181:53"><name pos:start="181:47" pos:end="181:47">c</name><operator pos:start="181:48" pos:end="181:49">-&gt;</operator><name pos:start="181:50" pos:end="181:53">srcH</name></name><operator pos:start="181:54" pos:end="181:54">-</operator><name pos:start="181:55" pos:end="181:63">srcSliceY</name><operator pos:start="181:64" pos:end="181:64">-</operator><name pos:start="181:65" pos:end="181:73">srcSliceH</name></expr></argument>,
                          <argument pos:start="182:27" pos:end="182:35"><expr pos:start="182:27" pos:end="182:35"><name pos:start="182:27" pos:end="182:35">srcSliceH</name></expr></argument>, <argument pos:start="182:38" pos:end="182:41"><expr pos:start="182:38" pos:end="182:41"><name pos:start="182:38" pos:end="182:41">dst2</name></expr></argument>, <argument pos:start="182:44" pos:end="182:53"><expr pos:start="182:44" pos:end="182:53"><name pos:start="182:44" pos:end="182:53">dstStride2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="183:5" pos:end="187:15"><if pos:start="183:5" pos:end="187:15">if <condition pos:start="183:8" pos:end="183:74">(<expr pos:start="183:9" pos:end="183:73"><name pos:start="183:9" pos:end="183:17"><name pos:start="183:9" pos:end="183:9">c</name><operator pos:start="183:10" pos:end="183:11">-&gt;</operator><name pos:start="183:12" pos:end="183:17">dstXYZ</name></name> <operator pos:start="183:19" pos:end="183:20">&amp;&amp;</operator> <operator pos:start="183:22" pos:end="183:22">!</operator><operator pos:start="183:23" pos:end="183:23">(</operator><name pos:start="183:24" pos:end="183:32"><name pos:start="183:24" pos:end="183:24">c</name><operator pos:start="183:25" pos:end="183:26">-&gt;</operator><name pos:start="183:27" pos:end="183:32">srcXYZ</name></name> <operator pos:start="183:34" pos:end="183:35">&amp;&amp;</operator> <name pos:start="183:37" pos:end="183:43"><name pos:start="183:37" pos:end="183:37">c</name><operator pos:start="183:38" pos:end="183:39">-&gt;</operator><name pos:start="183:40" pos:end="183:43">srcW</name></name><operator pos:start="183:44" pos:end="183:45">==</operator><name pos:start="183:46" pos:end="183:52"><name pos:start="183:46" pos:end="183:46">c</name><operator pos:start="183:47" pos:end="183:48">-&gt;</operator><name pos:start="183:49" pos:end="183:52">dstW</name></name> <operator pos:start="183:54" pos:end="183:55">&amp;&amp;</operator> <name pos:start="183:57" pos:end="183:63"><name pos:start="183:57" pos:end="183:57">c</name><operator pos:start="183:58" pos:end="183:59">-&gt;</operator><name pos:start="183:60" pos:end="183:63">srcH</name></name><operator pos:start="183:64" pos:end="183:65">==</operator><name pos:start="183:66" pos:end="183:72"><name pos:start="183:66" pos:end="183:66">c</name><operator pos:start="183:67" pos:end="183:68">-&gt;</operator><name pos:start="183:69" pos:end="183:72">dstH</name></name><operator pos:start="183:73" pos:end="183:73">)</operator></expr>)</condition> <block pos:start="183:76" pos:end="187:15">{<block_content pos:start="185:9" pos:end="187:15">
        <comment type="block" pos:start="184:9" pos:end="184:38">/* replace on the same data */</comment>
        <expr_stmt pos:start="185:9" pos:end="185:91"><expr pos:start="185:9" pos:end="185:90"><call pos:start="185:9" pos:end="185:90"><name pos:start="185:9" pos:end="185:20">rgb48Toxyz12</name><argument_list pos:start="185:21" pos:end="185:90">(<argument pos:start="185:22" pos:end="185:22"><expr pos:start="185:22" pos:end="185:22"><name pos:start="185:22" pos:end="185:22">c</name></expr></argument>, <argument pos:start="185:25" pos:end="185:42"><expr pos:start="185:25" pos:end="185:42"><operator pos:start="185:25" pos:end="185:25">(</operator><name pos:start="185:26" pos:end="185:33">uint16_t</name><operator pos:start="185:34" pos:end="185:34">*</operator><operator pos:start="185:35" pos:end="185:35">)</operator><name pos:start="185:36" pos:end="185:42"><name pos:start="185:36" pos:end="185:39">dst2</name><index pos:start="185:40" pos:end="185:42">[<expr pos:start="185:41" pos:end="185:41"><literal type="number" pos:start="185:41" pos:end="185:41">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="185:45" pos:end="185:68"><expr pos:start="185:45" pos:end="185:68"><operator pos:start="185:45" pos:end="185:45">(</operator><specifier pos:start="185:46" pos:end="185:50">const</specifier> <name pos:start="185:52" pos:end="185:59">uint16_t</name><operator pos:start="185:60" pos:end="185:60">*</operator><operator pos:start="185:61" pos:end="185:61">)</operator><name pos:start="185:62" pos:end="185:68"><name pos:start="185:62" pos:end="185:65">dst2</name><index pos:start="185:66" pos:end="185:68">[<expr pos:start="185:67" pos:end="185:67"><literal type="number" pos:start="185:67" pos:end="185:67">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="185:71" pos:end="185:84"><expr pos:start="185:71" pos:end="185:84"><name pos:start="185:71" pos:end="185:82"><name pos:start="185:71" pos:end="185:79">dstStride</name><index pos:start="185:80" pos:end="185:82">[<expr pos:start="185:81" pos:end="185:81"><literal type="number" pos:start="185:81" pos:end="185:81">0</literal></expr>]</index></name><operator pos:start="185:83" pos:end="185:83">/</operator><literal type="number" pos:start="185:84" pos:end="185:84">2</literal></expr></argument>, <argument pos:start="185:87" pos:end="185:89"><expr pos:start="185:87" pos:end="185:89"><name pos:start="185:87" pos:end="185:89">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="186:5" pos:end="186:22"><expr pos:start="186:5" pos:end="186:21"><call pos:start="186:5" pos:end="186:21"><name pos:start="186:5" pos:end="186:11">av_free</name><argument_list pos:start="186:12" pos:end="186:21">(<argument pos:start="186:13" pos:end="186:20"><expr pos:start="186:13" pos:end="186:20"><name pos:start="186:13" pos:end="186:20">rgb0_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="187:5" pos:end="187:15">return <expr pos:start="187:12" pos:end="187:14"><name pos:start="187:12" pos:end="187:14">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></else></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
