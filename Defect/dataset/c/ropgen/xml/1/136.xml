<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/136.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:17">direntry_t</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:40">create_short_filename</name><parameter_list pos:start="1:41" pos:end="5:70">(<parameter pos:start="1:42" pos:end="1:58"><decl pos:start="1:42" pos:end="1:58"><type pos:start="1:42" pos:end="1:58"><name pos:start="1:42" pos:end="1:55">BDRVVVFATState</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:58">s</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:61"><decl pos:start="3:42" pos:end="3:61"><type pos:start="3:42" pos:end="3:61"><specifier pos:start="3:42" pos:end="3:46">const</specifier> <name pos:start="3:48" pos:end="3:51">char</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:61">filename</name></decl></parameter>,

                                         <parameter pos:start="5:42" pos:end="5:69"><decl pos:start="5:42" pos:end="5:69"><type pos:start="5:42" pos:end="5:69"><name pos:start="5:42" pos:end="5:49">unsigned</name> <name pos:start="5:51" pos:end="5:53">int</name></type> <name pos:start="5:55" pos:end="5:69">directory_start</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="181:1">{<block_content pos:start="9:5" pos:end="179:16">

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name> <init pos:start="9:14" pos:end="9:16">= <expr pos:start="9:16" pos:end="9:16"><literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:56"><decl pos:start="11:5" pos:end="11:55"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">direntry_t</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:21">entry</name> <init pos:start="11:23" pos:end="11:55">= <expr pos:start="11:25" pos:end="11:55"><call pos:start="11:25" pos:end="11:55"><name pos:start="11:25" pos:end="11:38">array_get_next</name><argument_list pos:start="11:39" pos:end="11:55">(<argument pos:start="11:40" pos:end="11:54"><expr pos:start="11:40" pos:end="11:54"><operator pos:start="11:40" pos:end="11:40">&amp;</operator><operator pos:start="11:41" pos:end="11:41">(</operator><name pos:start="11:42" pos:end="11:53"><name pos:start="11:42" pos:end="11:42">s</name><operator pos:start="11:43" pos:end="11:44">-&gt;</operator><name pos:start="11:45" pos:end="11:53">directory</name></name><operator pos:start="11:54" pos:end="11:54">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:17"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:15">gchar</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:18">p</name></decl>, <decl pos:start="13:21" pos:end="13:36"><type ref="prev" pos:start="13:5" pos:end="13:17"><modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:29">last_dot</name> <init pos:start="13:31" pos:end="13:36">= <expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">gunichar</name></type> <name pos:start="15:14" pos:end="15:14">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:34"><decl pos:start="17:5" pos:end="17:33"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">bool</name></type> <name pos:start="17:10" pos:end="17:25">lossy_conversion</name> <init pos:start="17:27" pos:end="17:33">= <expr pos:start="17:29" pos:end="17:33"><name pos:start="17:29" pos:end="17:33">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">char</name></type> <name pos:start="19:10" pos:end="19:17"><name pos:start="19:10" pos:end="19:13">tail</name><index pos:start="19:14" pos:end="19:17">[<expr pos:start="19:15" pos:end="19:16"><literal type="number" pos:start="19:15" pos:end="19:16">11</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:15">(<expr pos:start="23:9" pos:end="23:14"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:14">entry</name></expr>)</condition> <block pos:start="23:17" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:20">

        <return pos:start="25:9" pos:end="25:20">return <expr pos:start="25:16" pos:end="25:19"><name pos:start="25:16" pos:end="25:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:51"><expr pos:start="29:5" pos:end="29:50"><call pos:start="29:5" pos:end="29:50"><name pos:start="29:5" pos:end="29:10">memset</name><argument_list pos:start="29:11" pos:end="29:50">(<argument pos:start="29:12" pos:end="29:22"><expr pos:start="29:12" pos:end="29:22"><name pos:start="29:12" pos:end="29:22"><name pos:start="29:12" pos:end="29:16">entry</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:22">name</name></name></expr></argument>, <argument pos:start="29:25" pos:end="29:28"><expr pos:start="29:25" pos:end="29:28"><literal type="number" pos:start="29:25" pos:end="29:28">0x20</literal></expr></argument>, <argument pos:start="29:31" pos:end="29:49"><expr pos:start="29:31" pos:end="29:49"><sizeof pos:start="29:31" pos:end="29:49">sizeof<argument_list pos:start="29:37" pos:end="29:49">(<argument pos:start="29:38" pos:end="29:48"><expr pos:start="29:38" pos:end="29:48"><name pos:start="29:38" pos:end="29:48"><name pos:start="29:38" pos:end="29:42">entry</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:48">name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:43">/* copy filename and search last dot */</comment>

    <for pos:start="35:5" pos:end="81:5">for <control pos:start="35:9" pos:end="35:49">(<init pos:start="35:10" pos:end="35:22"><expr pos:start="35:10" pos:end="35:21"><name pos:start="35:10" pos:end="35:10">p</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <name pos:start="35:14" pos:end="35:21">filename</name></expr>;</init> <condition pos:start="35:24" pos:end="35:24">;</condition> <incr pos:start="35:26" pos:end="35:48"><expr pos:start="35:26" pos:end="35:48"><name pos:start="35:26" pos:end="35:26">p</name> <operator pos:start="35:28" pos:end="35:28">=</operator> <call pos:start="35:30" pos:end="35:48"><name pos:start="35:30" pos:end="35:45">g_utf8_next_char</name><argument_list pos:start="35:46" pos:end="35:48">(<argument pos:start="35:47" pos:end="35:47"><expr pos:start="35:47" pos:end="35:47"><name pos:start="35:47" pos:end="35:47">p</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block pos:start="35:51" pos:end="81:5">{<block_content pos:start="37:9" pos:end="79:9">

        <expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:9">c</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <call pos:start="37:13" pos:end="37:30"><name pos:start="37:13" pos:end="37:27">g_utf8_get_char</name><argument_list pos:start="37:28" pos:end="37:30">(<argument pos:start="37:29" pos:end="37:29"><expr pos:start="37:29" pos:end="37:29"><name pos:start="37:29" pos:end="37:29">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="79:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:22">(<expr pos:start="39:13" pos:end="39:21"><name pos:start="39:13" pos:end="39:13">c</name> <operator pos:start="39:15" pos:end="39:16">==</operator> <literal type="char" pos:start="39:18" pos:end="39:21">'\0'</literal></expr>)</condition> <block pos:start="39:24" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:18">

            <break pos:start="41:13" pos:end="41:18">break;</break>

        </block_content>}</block></if> <if type="elseif" pos:start="43:11" pos:end="63:9">else if <condition pos:start="43:19" pos:end="43:28">(<expr pos:start="43:20" pos:end="43:27"><name pos:start="43:20" pos:end="43:20">c</name> <operator pos:start="43:22" pos:end="43:23">==</operator> <literal type="char" pos:start="43:25" pos:end="43:27">'.'</literal></expr>)</condition> <block pos:start="43:30" pos:end="63:9">{<block_content pos:start="45:13" pos:end="61:13">

            <if_stmt pos:start="45:13" pos:end="61:13"><if pos:start="45:13" pos:end="51:13">if <condition pos:start="45:16" pos:end="45:23">(<expr pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:17">j</name> <operator pos:start="45:19" pos:end="45:20">==</operator> <literal type="number" pos:start="45:22" pos:end="45:22">0</literal></expr>)</condition> <block pos:start="45:25" pos:end="51:13">{<block_content pos:start="49:17" pos:end="49:40">

                <comment type="block" pos:start="47:17" pos:end="47:46">/* '.' at start of filename */</comment>

                <expr_stmt pos:start="49:17" pos:end="49:40"><expr pos:start="49:17" pos:end="49:39"><name pos:start="49:17" pos:end="49:32">lossy_conversion</name> <operator pos:start="49:34" pos:end="49:34">=</operator> <name pos:start="49:36" pos:end="49:39">true</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="51:15" pos:end="61:13">else <block pos:start="51:20" pos:end="61:13">{<block_content pos:start="53:17" pos:end="59:29">

                <if_stmt pos:start="53:17" pos:end="57:17"><if pos:start="53:17" pos:end="57:17">if <condition pos:start="53:20" pos:end="53:29">(<expr pos:start="53:21" pos:end="53:28"><name pos:start="53:21" pos:end="53:28">last_dot</name></expr>)</condition> <block pos:start="53:31" pos:end="57:17">{<block_content pos:start="55:21" pos:end="55:44">

                    <expr_stmt pos:start="55:21" pos:end="55:44"><expr pos:start="55:21" pos:end="55:43"><name pos:start="55:21" pos:end="55:36">lossy_conversion</name> <operator pos:start="55:38" pos:end="55:38">=</operator> <name pos:start="55:40" pos:end="55:43">true</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:29"><expr pos:start="59:17" pos:end="59:28"><name pos:start="59:17" pos:end="59:24">last_dot</name> <operator pos:start="59:26" pos:end="59:26">=</operator> <name pos:start="59:28" pos:end="59:28">p</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="63:11" pos:end="79:9">else if <condition pos:start="63:19" pos:end="63:29">(<expr pos:start="63:20" pos:end="63:28"><operator pos:start="63:20" pos:end="63:20">!</operator><name pos:start="63:21" pos:end="63:28">last_dot</name></expr>)</condition> <block pos:start="63:31" pos:end="79:9">{<block_content pos:start="67:13" pos:end="77:13">

            <comment type="block" pos:start="65:13" pos:end="65:49">/* first part of the name; copy it */</comment>

            <decl_stmt pos:start="67:13" pos:end="67:47"><decl pos:start="67:13" pos:end="67:46"><type pos:start="67:13" pos:end="67:19"><name pos:start="67:13" pos:end="67:19">uint8_t</name></type> <name pos:start="67:21" pos:end="67:21">v</name> <init pos:start="67:23" pos:end="67:46">= <expr pos:start="67:25" pos:end="67:46"><call pos:start="67:25" pos:end="67:46"><name pos:start="67:25" pos:end="67:43">to_valid_short_char</name><argument_list pos:start="67:44" pos:end="67:46">(<argument pos:start="67:45" pos:end="67:45"><expr pos:start="67:45" pos:end="67:45"><name pos:start="67:45" pos:end="67:45">c</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="69:13" pos:end="77:13"><if pos:start="69:13" pos:end="73:13">if <condition pos:start="69:16" pos:end="69:27">(<expr pos:start="69:17" pos:end="69:26"><name pos:start="69:17" pos:end="69:17">j</name> <operator pos:start="69:19" pos:end="69:19">&lt;</operator> <literal type="number" pos:start="69:21" pos:end="69:21">8</literal> <operator pos:start="69:23" pos:end="69:24">&amp;&amp;</operator> <name pos:start="69:26" pos:end="69:26">v</name></expr>)</condition> <block pos:start="69:29" pos:end="73:13">{<block_content pos:start="71:17" pos:end="71:37">

                <expr_stmt pos:start="71:17" pos:end="71:37"><expr pos:start="71:17" pos:end="71:36"><name pos:start="71:17" pos:end="71:32"><name pos:start="71:17" pos:end="71:21">entry</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:27">name</name><index pos:start="71:28" pos:end="71:32">[<expr pos:start="71:29" pos:end="71:31"><name pos:start="71:29" pos:end="71:29">j</name><operator pos:start="71:30" pos:end="71:31">++</operator></expr>]</index></name> <operator pos:start="71:34" pos:end="71:34">=</operator> <name pos:start="71:36" pos:end="71:36">v</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="73:15" pos:end="77:13">else <block pos:start="73:20" pos:end="77:13">{<block_content pos:start="75:17" pos:end="75:40">

                <expr_stmt pos:start="75:17" pos:end="75:40"><expr pos:start="75:17" pos:end="75:39"><name pos:start="75:17" pos:end="75:32">lossy_conversion</name> <operator pos:start="75:34" pos:end="75:34">=</operator> <name pos:start="75:36" pos:end="75:39">true</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="85:5" pos:end="85:33">/* copy extension (if any) */</comment>

    <if_stmt pos:start="87:5" pos:end="119:5"><if pos:start="87:5" pos:end="119:5">if <condition pos:start="87:8" pos:end="87:17">(<expr pos:start="87:9" pos:end="87:16"><name pos:start="87:9" pos:end="87:16">last_dot</name></expr>)</condition> <block pos:start="87:19" pos:end="119:5">{<block_content pos:start="89:9" pos:end="117:9">

        <expr_stmt pos:start="89:9" pos:end="89:14"><expr pos:start="89:9" pos:end="89:13"><name pos:start="89:9" pos:end="89:9">j</name> <operator pos:start="89:11" pos:end="89:11">=</operator> <literal type="number" pos:start="89:13" pos:end="89:13">0</literal></expr>;</expr_stmt>

        <for pos:start="91:9" pos:end="117:9">for <control pos:start="91:13" pos:end="91:71">(<init pos:start="91:14" pos:end="91:44"><expr pos:start="91:14" pos:end="91:43"><name pos:start="91:14" pos:end="91:14">p</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <call pos:start="91:18" pos:end="91:43"><name pos:start="91:18" pos:end="91:33">g_utf8_next_char</name><argument_list pos:start="91:34" pos:end="91:43">(<argument pos:start="91:35" pos:end="91:42"><expr pos:start="91:35" pos:end="91:42"><name pos:start="91:35" pos:end="91:42">last_dot</name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="91:46" pos:end="91:46">;</condition> <incr pos:start="91:48" pos:end="91:70"><expr pos:start="91:48" pos:end="91:70"><name pos:start="91:48" pos:end="91:48">p</name> <operator pos:start="91:50" pos:end="91:50">=</operator> <call pos:start="91:52" pos:end="91:70"><name pos:start="91:52" pos:end="91:67">g_utf8_next_char</name><argument_list pos:start="91:68" pos:end="91:70">(<argument pos:start="91:69" pos:end="91:69"><expr pos:start="91:69" pos:end="91:69"><name pos:start="91:69" pos:end="91:69">p</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block pos:start="91:73" pos:end="117:9">{<block_content pos:start="93:13" pos:end="115:13">

            <expr_stmt pos:start="93:13" pos:end="93:35"><expr pos:start="93:13" pos:end="93:34"><name pos:start="93:13" pos:end="93:13">c</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <call pos:start="93:17" pos:end="93:34"><name pos:start="93:17" pos:end="93:31">g_utf8_get_char</name><argument_list pos:start="93:32" pos:end="93:34">(<argument pos:start="93:33" pos:end="93:33"><expr pos:start="93:33" pos:end="93:33"><name pos:start="93:33" pos:end="93:33">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="115:13"><if pos:start="95:13" pos:end="99:13">if <condition pos:start="95:16" pos:end="95:26">(<expr pos:start="95:17" pos:end="95:25"><name pos:start="95:17" pos:end="95:17">c</name> <operator pos:start="95:19" pos:end="95:20">==</operator> <literal type="char" pos:start="95:22" pos:end="95:25">'\0'</literal></expr>)</condition> <block pos:start="95:28" pos:end="99:13">{<block_content pos:start="97:17" pos:end="97:22">

                <break pos:start="97:17" pos:end="97:22">break;</break>

            </block_content>}</block></if> <else pos:start="99:15" pos:end="115:13">else <block pos:start="99:20" pos:end="115:13">{<block_content pos:start="103:17" pos:end="113:17">

                <comment type="block" pos:start="101:17" pos:end="101:40">/* extension; copy it */</comment>

                <decl_stmt pos:start="103:17" pos:end="103:51"><decl pos:start="103:17" pos:end="103:50"><type pos:start="103:17" pos:end="103:23"><name pos:start="103:17" pos:end="103:23">uint8_t</name></type> <name pos:start="103:25" pos:end="103:25">v</name> <init pos:start="103:27" pos:end="103:50">= <expr pos:start="103:29" pos:end="103:50"><call pos:start="103:29" pos:end="103:50"><name pos:start="103:29" pos:end="103:47">to_valid_short_char</name><argument_list pos:start="103:48" pos:end="103:50">(<argument pos:start="103:49" pos:end="103:49"><expr pos:start="103:49" pos:end="103:49"><name pos:start="103:49" pos:end="103:49">c</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="105:17" pos:end="113:17"><if pos:start="105:17" pos:end="109:17">if <condition pos:start="105:20" pos:end="105:31">(<expr pos:start="105:21" pos:end="105:30"><name pos:start="105:21" pos:end="105:21">j</name> <operator pos:start="105:23" pos:end="105:23">&lt;</operator> <literal type="number" pos:start="105:25" pos:end="105:25">3</literal> <operator pos:start="105:27" pos:end="105:28">&amp;&amp;</operator> <name pos:start="105:30" pos:end="105:30">v</name></expr>)</condition> <block pos:start="105:33" pos:end="109:17">{<block_content pos:start="107:21" pos:end="107:47">

                    <expr_stmt pos:start="107:21" pos:end="107:47"><expr pos:start="107:21" pos:end="107:46"><name pos:start="107:21" pos:end="107:42"><name pos:start="107:21" pos:end="107:25">entry</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:31">name</name><index pos:start="107:32" pos:end="107:42">[<expr pos:start="107:33" pos:end="107:41"><literal type="number" pos:start="107:33" pos:end="107:33">8</literal> <operator pos:start="107:35" pos:end="107:35">+</operator> <operator pos:start="107:37" pos:end="107:37">(</operator><name pos:start="107:38" pos:end="107:38">j</name><operator pos:start="107:39" pos:end="107:40">++</operator><operator pos:start="107:41" pos:end="107:41">)</operator></expr>]</index></name> <operator pos:start="107:44" pos:end="107:44">=</operator> <name pos:start="107:46" pos:end="107:46">v</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="109:19" pos:end="113:17">else <block pos:start="109:24" pos:end="113:17">{<block_content pos:start="111:21" pos:end="111:44">

                    <expr_stmt pos:start="111:21" pos:end="111:44"><expr pos:start="111:21" pos:end="111:43"><name pos:start="111:21" pos:end="111:36">lossy_conversion</name> <operator pos:start="111:38" pos:end="111:38">=</operator> <name pos:start="111:40" pos:end="111:43">true</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="123:5" pos:end="127:5"><if pos:start="123:5" pos:end="127:5">if <condition pos:start="123:8" pos:end="123:36">(<expr pos:start="123:9" pos:end="123:35"><name pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:13">entry</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:19">name</name><index pos:start="123:20" pos:end="123:22">[<expr pos:start="123:21" pos:end="123:21"><literal type="number" pos:start="123:21" pos:end="123:21">0</literal></expr>]</index></name> <operator pos:start="123:24" pos:end="123:25">==</operator> <name pos:start="123:27" pos:end="123:35">DIR_KANJI</name></expr>)</condition> <block pos:start="123:38" pos:end="127:5">{<block_content pos:start="125:9" pos:end="125:40">

        <expr_stmt pos:start="125:9" pos:end="125:40"><expr pos:start="125:9" pos:end="125:39"><name pos:start="125:9" pos:end="125:22"><name pos:start="125:9" pos:end="125:13">entry</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:19">name</name><index pos:start="125:20" pos:end="125:22">[<expr pos:start="125:21" pos:end="125:21"><literal type="number" pos:start="125:21" pos:end="125:21">0</literal></expr>]</index></name> <operator pos:start="125:24" pos:end="125:24">=</operator> <name pos:start="125:26" pos:end="125:39">DIR_KANJI_FAKE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="131:5" pos:end="131:33">/* numeric-tail generation */</comment>

    <for pos:start="133:5" pos:end="141:5">for <control pos:start="133:9" pos:end="133:27">(<init pos:start="133:10" pos:end="133:15"><expr pos:start="133:10" pos:end="133:14"><name pos:start="133:10" pos:end="133:10">j</name> <operator pos:start="133:12" pos:end="133:12">=</operator> <literal type="number" pos:start="133:14" pos:end="133:14">0</literal></expr>;</init> <condition pos:start="133:17" pos:end="133:22"><expr pos:start="133:17" pos:end="133:21"><name pos:start="133:17" pos:end="133:17">j</name> <operator pos:start="133:19" pos:end="133:19">&lt;</operator> <literal type="number" pos:start="133:21" pos:end="133:21">8</literal></expr>;</condition> <incr pos:start="133:24" pos:end="133:26"><expr pos:start="133:24" pos:end="133:26"><name pos:start="133:24" pos:end="133:24">j</name><operator pos:start="133:25" pos:end="133:26">++</operator></expr></incr>)</control> <block pos:start="133:29" pos:end="141:5">{<block_content pos:start="135:9" pos:end="139:9">

        <if_stmt pos:start="135:9" pos:end="139:9"><if pos:start="135:9" pos:end="139:9">if <condition pos:start="135:12" pos:end="135:34">(<expr pos:start="135:13" pos:end="135:33"><name pos:start="135:13" pos:end="135:26"><name pos:start="135:13" pos:end="135:17">entry</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:23">name</name><index pos:start="135:24" pos:end="135:26">[<expr pos:start="135:25" pos:end="135:25"><name pos:start="135:25" pos:end="135:25">j</name></expr>]</index></name> <operator pos:start="135:28" pos:end="135:29">==</operator> <literal type="char" pos:start="135:31" pos:end="135:33">' '</literal></expr>)</condition> <block pos:start="135:36" pos:end="139:9">{<block_content pos:start="137:13" pos:end="137:18">

            <break pos:start="137:13" pos:end="137:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <for pos:start="143:5" pos:end="177:5">for <control pos:start="143:9" pos:end="143:55">(<init pos:start="143:10" pos:end="143:38"><expr pos:start="143:10" pos:end="143:37"><name pos:start="143:10" pos:end="143:10">i</name> <operator pos:start="143:12" pos:end="143:12">=</operator> <ternary pos:start="143:14" pos:end="143:37"><condition pos:start="143:14" pos:end="143:31"><expr pos:start="143:14" pos:end="143:29"><name pos:start="143:14" pos:end="143:29">lossy_conversion</name></expr> ?</condition><then pos:start="143:33" pos:end="143:33"> <expr pos:start="143:33" pos:end="143:33"><literal type="number" pos:start="143:33" pos:end="143:33">1</literal></expr> </then><else pos:start="143:35" pos:end="143:37">: <expr pos:start="143:37" pos:end="143:37"><literal type="number" pos:start="143:37" pos:end="143:37">0</literal></expr></else></ternary></expr>;</init> <condition pos:start="143:40" pos:end="143:50"><expr pos:start="143:40" pos:end="143:49"><name pos:start="143:40" pos:end="143:40">i</name> <operator pos:start="143:42" pos:end="143:42">&lt;</operator> <literal type="number" pos:start="143:44" pos:end="143:49">999999</literal></expr>;</condition> <incr pos:start="143:52" pos:end="143:54"><expr pos:start="143:52" pos:end="143:54"><name pos:start="143:52" pos:end="143:52">i</name><operator pos:start="143:53" pos:end="143:54">++</operator></expr></incr>)</control> <block pos:start="143:57" pos:end="177:5">{<block_content pos:start="145:9" pos:end="175:9">

        <decl_stmt pos:start="145:9" pos:end="145:27"><decl pos:start="145:9" pos:end="145:26"><type pos:start="145:9" pos:end="145:20"><name pos:start="145:9" pos:end="145:18">direntry_t</name> <modifier pos:start="145:20" pos:end="145:20">*</modifier></type><name pos:start="145:21" pos:end="145:26">entry1</name></decl>;</decl_stmt>

        <if_stmt pos:start="147:9" pos:end="153:9"><if pos:start="147:9" pos:end="153:9">if <condition pos:start="147:12" pos:end="147:18">(<expr pos:start="147:13" pos:end="147:17"><name pos:start="147:13" pos:end="147:13">i</name> <operator pos:start="147:15" pos:end="147:15">&gt;</operator> <literal type="number" pos:start="147:17" pos:end="147:17">0</literal></expr>)</condition> <block pos:start="147:20" pos:end="153:9">{<block_content pos:start="149:13" pos:end="151:61">

            <decl_stmt pos:start="149:13" pos:end="149:46"><decl pos:start="149:13" pos:end="149:45"><type pos:start="149:13" pos:end="149:15"><name pos:start="149:13" pos:end="149:15">int</name></type> <name pos:start="149:17" pos:end="149:19">len</name> <init pos:start="149:21" pos:end="149:45">= <expr pos:start="149:23" pos:end="149:45"><call pos:start="149:23" pos:end="149:45"><name pos:start="149:23" pos:end="149:29">sprintf</name><argument_list pos:start="149:30" pos:end="149:45">(<argument pos:start="149:31" pos:end="149:34"><expr pos:start="149:31" pos:end="149:34"><name pos:start="149:31" pos:end="149:34">tail</name></expr></argument>, <argument pos:start="149:37" pos:end="149:41"><expr pos:start="149:37" pos:end="149:41"><literal type="string" pos:start="149:37" pos:end="149:41">"~%d"</literal></expr></argument>, <argument pos:start="149:44" pos:end="149:44"><expr pos:start="149:44" pos:end="149:44"><name pos:start="149:44" pos:end="149:44">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:61"><expr pos:start="151:13" pos:end="151:60"><call pos:start="151:13" pos:end="151:60"><name pos:start="151:13" pos:end="151:18">memcpy</name><argument_list pos:start="151:19" pos:end="151:60">(<argument pos:start="151:20" pos:end="151:48"><expr pos:start="151:20" pos:end="151:48"><name pos:start="151:20" pos:end="151:30"><name pos:start="151:20" pos:end="151:24">entry</name><operator pos:start="151:25" pos:end="151:26">-&gt;</operator><name pos:start="151:27" pos:end="151:30">name</name></name> <operator pos:start="151:32" pos:end="151:32">+</operator> <call pos:start="151:34" pos:end="151:48"><name pos:start="151:34" pos:end="151:36">MIN</name><argument_list pos:start="151:37" pos:end="151:48">(<argument pos:start="151:38" pos:end="151:38"><expr pos:start="151:38" pos:end="151:38"><name pos:start="151:38" pos:end="151:38">j</name></expr></argument>, <argument pos:start="151:41" pos:end="151:47"><expr pos:start="151:41" pos:end="151:47"><literal type="number" pos:start="151:41" pos:end="151:43">8</literal> <operator pos:start="151:43" pos:end="151:43">-</operator> <name pos:start="151:45" pos:end="151:47">len</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="151:51" pos:end="151:54"><expr pos:start="151:51" pos:end="151:54"><name pos:start="151:51" pos:end="151:54">tail</name></expr></argument>, <argument pos:start="151:57" pos:end="151:59"><expr pos:start="151:57" pos:end="151:59"><name pos:start="151:57" pos:end="151:59">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <for pos:start="155:9" pos:end="167:9">for <control pos:start="155:13" pos:end="157:38">(<init pos:start="155:14" pos:end="155:66"><expr pos:start="155:14" pos:end="155:65"><name pos:start="155:14" pos:end="155:19">entry1</name> <operator pos:start="155:21" pos:end="155:21">=</operator> <call pos:start="155:23" pos:end="155:65"><name pos:start="155:23" pos:end="155:31">array_get</name><argument_list pos:start="155:32" pos:end="155:65">(<argument pos:start="155:33" pos:end="155:47"><expr pos:start="155:33" pos:end="155:47"><operator pos:start="155:33" pos:end="155:33">&amp;</operator><operator pos:start="155:34" pos:end="155:34">(</operator><name pos:start="155:35" pos:end="155:46"><name pos:start="155:35" pos:end="155:35">s</name><operator pos:start="155:36" pos:end="155:37">-&gt;</operator><name pos:start="155:38" pos:end="155:46">directory</name></name><operator pos:start="155:47" pos:end="155:47">)</operator></expr></argument>, <argument pos:start="155:50" pos:end="155:64"><expr pos:start="155:50" pos:end="155:64"><name pos:start="155:50" pos:end="155:64">directory_start</name></expr></argument>)</argument_list></call></expr>;</init>

             <condition pos:start="157:14" pos:end="157:28"><expr pos:start="157:14" pos:end="157:27"><name pos:start="157:14" pos:end="157:19">entry1</name> <operator pos:start="157:21" pos:end="157:21">&lt;</operator> <name pos:start="157:23" pos:end="157:27">entry</name></expr>;</condition> <incr pos:start="157:30" pos:end="157:37"><expr pos:start="157:30" pos:end="157:37"><name pos:start="157:30" pos:end="157:35">entry1</name><operator pos:start="157:36" pos:end="157:37">++</operator></expr></incr>)</control> <block pos:start="157:40" pos:end="167:9">{<block_content pos:start="159:13" pos:end="165:13">

            <if_stmt pos:start="159:13" pos:end="165:13"><if pos:start="159:13" pos:end="165:13">if <condition pos:start="159:16" pos:end="161:55">(<expr pos:start="159:17" pos:end="161:54"><operator pos:start="159:17" pos:end="159:17">!</operator><call pos:start="159:18" pos:end="159:37"><name pos:start="159:18" pos:end="159:29">is_long_name</name><argument_list pos:start="159:30" pos:end="159:37">(<argument pos:start="159:31" pos:end="159:36"><expr pos:start="159:31" pos:end="159:36"><name pos:start="159:31" pos:end="159:36">entry1</name></expr></argument>)</argument_list></call> <operator pos:start="159:39" pos:end="159:40">&amp;&amp;</operator>

                <operator pos:start="161:17" pos:end="161:17">!</operator><call pos:start="161:18" pos:end="161:54"><name pos:start="161:18" pos:end="161:23">memcmp</name><argument_list pos:start="161:24" pos:end="161:54">(<argument pos:start="161:25" pos:end="161:36"><expr pos:start="161:25" pos:end="161:36"><name pos:start="161:25" pos:end="161:36"><name pos:start="161:25" pos:end="161:30">entry1</name><operator pos:start="161:31" pos:end="161:32">-&gt;</operator><name pos:start="161:33" pos:end="161:36">name</name></name></expr></argument>, <argument pos:start="161:39" pos:end="161:49"><expr pos:start="161:39" pos:end="161:49"><name pos:start="161:39" pos:end="161:49"><name pos:start="161:39" pos:end="161:43">entry</name><operator pos:start="161:44" pos:end="161:45">-&gt;</operator><name pos:start="161:46" pos:end="161:49">name</name></name></expr></argument>, <argument pos:start="161:52" pos:end="161:53"><expr pos:start="161:52" pos:end="161:53"><literal type="number" pos:start="161:52" pos:end="161:53">11</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="161:57" pos:end="165:13">{<block_content pos:start="163:17" pos:end="163:22">

                <break pos:start="163:17" pos:end="163:22">break;</break> <comment type="block" pos:start="163:24" pos:end="163:39">/* found dupe */</comment>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="169:9" pos:end="175:9"><if pos:start="169:9" pos:end="175:9">if <condition pos:start="169:12" pos:end="169:28">(<expr pos:start="169:13" pos:end="169:27"><name pos:start="169:13" pos:end="169:18">entry1</name> <operator pos:start="169:20" pos:end="169:21">==</operator> <name pos:start="169:23" pos:end="169:27">entry</name></expr>)</condition> <block pos:start="169:30" pos:end="175:9">{<block_content pos:start="173:13" pos:end="173:25">

            <comment type="block" pos:start="171:13" pos:end="171:31">/* no dupe found */</comment>

            <return pos:start="173:13" pos:end="173:25">return <expr pos:start="173:20" pos:end="173:24"><name pos:start="173:20" pos:end="173:24">entry</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="179:5" pos:end="179:16">return <expr pos:start="179:12" pos:end="179:15"><name pos:start="179:12" pos:end="179:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
