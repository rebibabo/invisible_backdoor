<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17112.c" pos:tabs="8"><function pos:start="1:1" pos:end="262:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">svq1_decode_frame</name><parameter_list pos:start="1:29" pos:end="3:61">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:32">int</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:43">data_size</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:60"><decl pos:start="3:46" pos:end="3:60"><type pos:start="3:46" pos:end="3:60"><name pos:start="3:46" pos:end="3:53">AVPacket</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:60">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="262:1">{<block_content pos:start="7:5" pos:end="260:18">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name>       <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">MpegEncContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:21">s</name>  <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:20">current</name></decl>, <decl pos:start="13:23" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:31">previous</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:39"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">result</name></decl>, <decl pos:start="15:17" pos:end="15:17"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:17" pos:end="15:17">i</name></decl>, <decl pos:start="15:20" pos:end="15:20"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:20" pos:end="15:20">x</name></decl>, <decl pos:start="15:23" pos:end="15:23"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:23" pos:end="15:23">y</name></decl>, <decl pos:start="15:26" pos:end="15:30"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:26" pos:end="15:30">width</name></decl>, <decl pos:start="15:33" pos:end="15:38"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:33" pos:end="15:38">height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">AVFrame</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:17">pict</name> <init pos:start="17:19" pos:end="17:24">= <expr pos:start="17:21" pos:end="17:24"><name pos:start="17:21" pos:end="17:24">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">svq1_pmv</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:17">pmv</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:31">/* initialize bit buffer */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:45"><expr pos:start="25:5" pos:end="25:44"><call pos:start="25:5" pos:end="25:44"><name pos:start="25:5" pos:end="25:17">init_get_bits</name><argument_list pos:start="25:18" pos:end="25:44">(<argument pos:start="25:19" pos:end="25:24"><expr pos:start="25:19" pos:end="25:24"><operator pos:start="25:19" pos:end="25:19">&amp;</operator><name pos:start="25:20" pos:end="25:24"><name pos:start="25:20" pos:end="25:20">s</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:24">gb</name></name></expr></argument>, <argument pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><name pos:start="25:27" pos:end="25:29">buf</name></expr></argument>, <argument pos:start="25:32" pos:end="25:43"><expr pos:start="25:32" pos:end="25:43"><name pos:start="25:32" pos:end="25:39">buf_size</name> <operator pos:start="25:41" pos:end="25:41">*</operator> <literal type="number" pos:start="25:43" pos:end="25:43">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:29">/* decode frame header */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:13">f_code</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:36"><name pos:start="31:17" pos:end="31:24">get_bits</name><argument_list pos:start="31:25" pos:end="31:36">(<argument pos:start="31:26" pos:end="31:31"><expr pos:start="31:26" pos:end="31:31"><operator pos:start="31:26" pos:end="31:26">&amp;</operator><name pos:start="31:27" pos:end="31:31"><name pos:start="31:27" pos:end="31:27">s</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:31">gb</name></name></expr></argument>, <argument pos:start="31:34" pos:end="31:35"><expr pos:start="31:34" pos:end="31:35"><literal type="number" pos:start="31:34" pos:end="31:35">22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="37:35"><if pos:start="35:5" pos:end="37:35">if <condition pos:start="35:8" pos:end="35:51">(<expr pos:start="35:9" pos:end="35:50"><operator pos:start="35:9" pos:end="35:9">(</operator><name pos:start="35:10" pos:end="35:18"><name pos:start="35:10" pos:end="35:10">s</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:18">f_code</name></name> <operator pos:start="35:20" pos:end="35:20">&amp;</operator> <operator pos:start="35:22" pos:end="35:22">~</operator><literal type="number" pos:start="35:23" pos:end="35:26">0x70</literal><operator pos:start="35:27" pos:end="35:27">)</operator> <operator pos:start="35:29" pos:end="35:30">||</operator> <operator pos:start="35:32" pos:end="35:32">!</operator><operator pos:start="35:33" pos:end="35:33">(</operator><name pos:start="35:34" pos:end="35:42"><name pos:start="35:34" pos:end="35:34">s</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:42">f_code</name></name> <operator pos:start="35:44" pos:end="35:44">&amp;</operator> <literal type="number" pos:start="35:46" pos:end="35:49">0x60</literal><operator pos:start="35:50" pos:end="35:50">)</operator></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:35"><block_content pos:start="37:9" pos:end="37:35">

        <return pos:start="37:9" pos:end="37:35">return <expr pos:start="37:16" pos:end="37:34"><name pos:start="37:16" pos:end="37:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:39">/* swap some header bytes (why?) */</comment>

    <if_stmt pos:start="43:5" pos:end="59:5"><if pos:start="43:5" pos:end="59:5">if <condition pos:start="43:8" pos:end="43:26">(<expr pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:17">f_code</name></name> <operator pos:start="43:19" pos:end="43:20">!=</operator> <literal type="number" pos:start="43:22" pos:end="43:25">0x20</literal></expr>)</condition> <block pos:start="43:28" pos:end="59:5">{<block_content pos:start="45:9" pos:end="57:68">

        <decl_stmt pos:start="45:9" pos:end="45:46"><decl pos:start="45:9" pos:end="45:45"><type pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:16">uint32_t</name> <modifier pos:start="45:18" pos:end="45:18">*</modifier></type><name pos:start="45:19" pos:end="45:21">src</name> <init pos:start="45:23" pos:end="45:45">= <expr pos:start="45:25" pos:end="45:45"><operator pos:start="45:25" pos:end="45:25">(</operator><name pos:start="45:26" pos:end="45:33">uint32_t</name> <operator pos:start="45:35" pos:end="45:35">*</operator><operator pos:start="45:36" pos:end="45:36">)</operator><operator pos:start="45:37" pos:end="45:37">(</operator><name pos:start="45:38" pos:end="45:40">buf</name> <operator pos:start="45:42" pos:end="45:42">+</operator> <literal type="number" pos:start="45:44" pos:end="45:44">4</literal><operator pos:start="45:45" pos:end="45:45">)</operator></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="49:9" pos:end="51:39"><if pos:start="49:9" pos:end="51:39">if <condition pos:start="49:12" pos:end="49:26">(<expr pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:20">buf_size</name> <operator pos:start="49:22" pos:end="49:22">&lt;</operator> <literal type="number" pos:start="49:24" pos:end="49:25">36</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:39"><block_content pos:start="51:13" pos:end="51:39">

            <return pos:start="51:13" pos:end="51:39">return <expr pos:start="51:20" pos:end="51:38"><name pos:start="51:20" pos:end="51:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <for pos:start="55:9" pos:end="57:68">for <control pos:start="55:13" pos:end="55:31">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">i</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:26"><expr pos:start="55:21" pos:end="55:25"><name pos:start="55:21" pos:end="55:21">i</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <literal type="number" pos:start="55:25" pos:end="55:25">4</literal></expr>;</condition> <incr pos:start="55:28" pos:end="55:30"><expr pos:start="55:28" pos:end="55:30"><name pos:start="55:28" pos:end="55:28">i</name><operator pos:start="55:29" pos:end="55:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="57:13" pos:end="57:68"><block_content pos:start="57:13" pos:end="57:68">

            <expr_stmt pos:start="57:13" pos:end="57:68"><expr pos:start="57:13" pos:end="57:67"><name pos:start="57:13" pos:end="57:18"><name pos:start="57:13" pos:end="57:15">src</name><index pos:start="57:16" pos:end="57:18">[<expr pos:start="57:17" pos:end="57:17"><name pos:start="57:17" pos:end="57:17">i</name></expr>]</index></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <operator pos:start="57:22" pos:end="57:22">(</operator><operator pos:start="57:23" pos:end="57:23">(</operator><name pos:start="57:24" pos:end="57:29"><name pos:start="57:24" pos:end="57:26">src</name><index pos:start="57:27" pos:end="57:29">[<expr pos:start="57:28" pos:end="57:28"><name pos:start="57:28" pos:end="57:28">i</name></expr>]</index></name> <operator pos:start="57:31" pos:end="57:32">&lt;&lt;</operator> <literal type="number" pos:start="57:34" pos:end="57:35">16</literal><operator pos:start="57:36" pos:end="57:36">)</operator> <operator pos:start="57:38" pos:end="57:38">|</operator> <operator pos:start="57:40" pos:end="57:40">(</operator><name pos:start="57:41" pos:end="57:46"><name pos:start="57:41" pos:end="57:43">src</name><index pos:start="57:44" pos:end="57:46">[<expr pos:start="57:45" pos:end="57:45"><name pos:start="57:45" pos:end="57:45">i</name></expr>]</index></name> <operator pos:start="57:48" pos:end="57:49">&gt;&gt;</operator> <literal type="number" pos:start="57:51" pos:end="57:52">16</literal><operator pos:start="57:53" pos:end="57:53">)</operator><operator pos:start="57:54" pos:end="57:54">)</operator> <operator pos:start="57:56" pos:end="57:56">^</operator> <name pos:start="57:58" pos:end="57:67"><name pos:start="57:58" pos:end="57:60">src</name><index pos:start="57:61" pos:end="57:67">[<expr pos:start="57:62" pos:end="57:66"><literal type="number" pos:start="57:62" pos:end="57:62">7</literal> <operator pos:start="57:64" pos:end="57:64">-</operator> <name pos:start="57:66" pos:end="57:66">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:49"><expr pos:start="63:5" pos:end="63:48"><name pos:start="63:5" pos:end="63:10">result</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <call pos:start="63:14" pos:end="63:48"><name pos:start="63:14" pos:end="63:37">svq1_decode_frame_header</name><argument_list pos:start="63:38" pos:end="63:48">(<argument pos:start="63:39" pos:end="63:44"><expr pos:start="63:39" pos:end="63:44"><operator pos:start="63:39" pos:end="63:39">&amp;</operator><name pos:start="63:40" pos:end="63:44"><name pos:start="63:40" pos:end="63:40">s</name><operator pos:start="63:41" pos:end="63:42">-&gt;</operator><name pos:start="63:43" pos:end="63:44">gb</name></name></expr></argument>, <argument pos:start="63:47" pos:end="63:47"><expr pos:start="63:47" pos:end="63:47"><name pos:start="63:47" pos:end="63:47">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:15">(<expr pos:start="65:9" pos:end="65:14"><name pos:start="65:9" pos:end="65:14">result</name></expr>)</condition> <block pos:start="65:17" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:22">

        <expr_stmt pos:start="67:9" pos:end="67:76"><expr pos:start="67:9" pos:end="67:75"><call pos:start="67:9" pos:end="67:75"><name pos:start="67:9" pos:end="67:15">av_dlog</name><argument_list pos:start="67:16" pos:end="67:75">(<argument pos:start="67:17" pos:end="67:24"><expr pos:start="67:17" pos:end="67:24"><name pos:start="67:17" pos:end="67:24"><name pos:start="67:17" pos:end="67:17">s</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:24">avctx</name></name></expr></argument>, <argument pos:start="67:27" pos:end="67:66"><expr pos:start="67:27" pos:end="67:66"><literal type="string" pos:start="67:27" pos:end="67:66">"Error in svq1_decode_frame_header %i\n"</literal></expr></argument>, <argument pos:start="67:69" pos:end="67:74"><expr pos:start="67:69" pos:end="67:74"><name pos:start="67:69" pos:end="67:74">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:22">return <expr pos:start="69:16" pos:end="69:21"><name pos:start="69:16" pos:end="69:21">result</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:55"><expr pos:start="73:5" pos:end="73:54"><call pos:start="73:5" pos:end="73:54"><name pos:start="73:5" pos:end="73:26">avcodec_set_dimensions</name><argument_list pos:start="73:27" pos:end="73:54">(<argument pos:start="73:28" pos:end="73:32"><expr pos:start="73:28" pos:end="73:32"><name pos:start="73:28" pos:end="73:32">avctx</name></expr></argument>, <argument pos:start="73:35" pos:end="73:42"><expr pos:start="73:35" pos:end="73:42"><name pos:start="73:35" pos:end="73:42"><name pos:start="73:35" pos:end="73:35">s</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:42">width</name></name></expr></argument>, <argument pos:start="73:45" pos:end="73:53"><expr pos:start="73:45" pos:end="73:53"><name pos:start="73:45" pos:end="73:53"><name pos:start="73:45" pos:end="73:45">s</name><operator pos:start="73:46" pos:end="73:47">-&gt;</operator><name pos:start="73:48" pos:end="73:53">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="77:5" pos:end="81:34">/* FIXME: This avoids some confusion for "B frames" without 2 references.

     * This should be removed after libavcodec can handle more flexible

     * picture types &amp; ordering */</comment>

    <if_stmt pos:start="83:5" pos:end="85:24"><if pos:start="83:5" pos:end="85:24">if <condition pos:start="83:8" pos:end="83:73">(<expr pos:start="83:9" pos:end="83:72"><name pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:20">pict_type</name></name> <operator pos:start="83:22" pos:end="83:23">==</operator> <name pos:start="83:25" pos:end="83:41">AV_PICTURE_TYPE_B</name> <operator pos:start="83:43" pos:end="83:44">&amp;&amp;</operator> <name pos:start="83:46" pos:end="83:64"><name pos:start="83:46" pos:end="83:46">s</name><operator pos:start="83:47" pos:end="83:48">-&gt;</operator><name pos:start="83:49" pos:end="83:64">last_picture_ptr</name></name> <operator pos:start="83:66" pos:end="83:67">==</operator> <name pos:start="83:69" pos:end="83:72">NULL</name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:24"><block_content pos:start="85:9" pos:end="85:24">

        <return pos:start="85:9" pos:end="85:24">return <expr pos:start="85:16" pos:end="85:23"><name pos:start="85:16" pos:end="85:23">buf_size</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="99:24"><if pos:start="89:5" pos:end="99:24">if <condition pos:start="89:8" pos:end="97:43">(<expr pos:start="89:9" pos:end="97:42"><operator pos:start="89:9" pos:end="89:9">(</operator><name pos:start="89:10" pos:end="89:26"><name pos:start="89:10" pos:end="89:14">avctx</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:26">skip_frame</name></name> <operator pos:start="89:28" pos:end="89:29">&gt;=</operator> <name pos:start="89:31" pos:end="89:46">AVDISCARD_NONREF</name> <operator pos:start="89:48" pos:end="89:49">&amp;&amp;</operator>

         <name pos:start="91:10" pos:end="91:21"><name pos:start="91:10" pos:end="91:10">s</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:21">pict_type</name></name> <operator pos:start="91:23" pos:end="91:24">==</operator> <name pos:start="91:26" pos:end="91:42">AV_PICTURE_TYPE_B</name><operator pos:start="91:43" pos:end="91:43">)</operator>    <operator pos:start="91:48" pos:end="91:49">||</operator>

        <operator pos:start="93:9" pos:end="93:9">(</operator><name pos:start="93:10" pos:end="93:26"><name pos:start="93:10" pos:end="93:14">avctx</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:26">skip_frame</name></name> <operator pos:start="93:28" pos:end="93:29">&gt;=</operator> <name pos:start="93:31" pos:end="93:46">AVDISCARD_NONKEY</name> <operator pos:start="93:48" pos:end="93:49">&amp;&amp;</operator>

         <name pos:start="95:10" pos:end="95:21"><name pos:start="95:10" pos:end="95:10">s</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:21">pict_type</name></name> <operator pos:start="95:23" pos:end="95:24">!=</operator> <name pos:start="95:26" pos:end="95:42">AV_PICTURE_TYPE_I</name><operator pos:start="95:43" pos:end="95:43">)</operator>    <operator pos:start="95:48" pos:end="95:49">||</operator>

        <name pos:start="97:9" pos:end="97:25"><name pos:start="97:9" pos:end="97:13">avctx</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:25">skip_frame</name></name> <operator pos:start="97:27" pos:end="97:28">&gt;=</operator> <name pos:start="97:30" pos:end="97:42">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:24"><block_content pos:start="99:9" pos:end="99:24">

        <return pos:start="99:9" pos:end="99:24">return <expr pos:start="99:16" pos:end="99:23"><name pos:start="99:16" pos:end="99:23">buf_size</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="103:5" pos:end="105:22"><if pos:start="103:5" pos:end="105:22">if <condition pos:start="103:8" pos:end="103:52">(<expr pos:start="103:9" pos:end="103:51"><operator pos:start="103:9" pos:end="103:9">(</operator><name pos:start="103:10" pos:end="103:15">result</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <call pos:start="103:19" pos:end="103:46"><name pos:start="103:19" pos:end="103:36">ff_MPV_frame_start</name><argument_list pos:start="103:37" pos:end="103:46">(<argument pos:start="103:38" pos:end="103:38"><expr pos:start="103:38" pos:end="103:38"><name pos:start="103:38" pos:end="103:38">s</name></expr></argument>, <argument pos:start="103:41" pos:end="103:45"><expr pos:start="103:41" pos:end="103:45"><name pos:start="103:41" pos:end="103:45">avctx</name></expr></argument>)</argument_list></call><operator pos:start="103:47" pos:end="103:47">)</operator> <operator pos:start="103:49" pos:end="103:49">&lt;</operator> <literal type="number" pos:start="103:51" pos:end="103:51">0</literal></expr>)</condition><block type="pseudo" pos:start="105:9" pos:end="105:22"><block_content pos:start="105:9" pos:end="105:22">

        <return pos:start="105:9" pos:end="105:22">return <expr pos:start="105:16" pos:end="105:21"><name pos:start="105:16" pos:end="105:21">result</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:68"><expr pos:start="109:5" pos:end="109:67"><name pos:start="109:5" pos:end="109:7">pmv</name> <operator pos:start="109:9" pos:end="109:9">=</operator> <call pos:start="109:11" pos:end="109:67"><name pos:start="109:11" pos:end="109:19">av_malloc</name><argument_list pos:start="109:20" pos:end="109:67">(<argument pos:start="109:21" pos:end="109:66"><expr pos:start="109:21" pos:end="109:66"><operator pos:start="109:21" pos:end="109:21">(</operator><call pos:start="109:22" pos:end="109:42"><name pos:start="109:22" pos:end="109:28">FFALIGN</name><argument_list pos:start="109:29" pos:end="109:42">(<argument pos:start="109:30" pos:end="109:37"><expr pos:start="109:30" pos:end="109:37"><name pos:start="109:30" pos:end="109:37"><name pos:start="109:30" pos:end="109:30">s</name><operator pos:start="109:31" pos:end="109:32">-&gt;</operator><name pos:start="109:33" pos:end="109:37">width</name></name></expr></argument>, <argument pos:start="109:40" pos:end="109:41"><expr pos:start="109:40" pos:end="109:41"><literal type="number" pos:start="109:40" pos:end="109:41">16</literal></expr></argument>)</argument_list></call> <operator pos:start="109:44" pos:end="109:44">/</operator> <literal type="number" pos:start="109:46" pos:end="109:48">8</literal> <operator pos:start="109:48" pos:end="109:48">+</operator> <literal type="number" pos:start="109:50" pos:end="109:50">3</literal><operator pos:start="109:51" pos:end="109:51">)</operator> <operator pos:start="109:53" pos:end="109:53">*</operator> <sizeof pos:start="109:55" pos:end="109:66">sizeof<argument_list pos:start="109:61" pos:end="109:66">(<argument pos:start="109:62" pos:end="109:65"><expr pos:start="109:62" pos:end="109:65"><operator pos:start="109:62" pos:end="109:62">*</operator><name pos:start="109:63" pos:end="109:65">pmv</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="113:31"><if pos:start="111:5" pos:end="113:31">if <condition pos:start="111:8" pos:end="111:13">(<expr pos:start="111:9" pos:end="111:12"><operator pos:start="111:9" pos:end="111:9">!</operator><name pos:start="111:10" pos:end="111:12">pmv</name></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:31"><block_content pos:start="113:9" pos:end="113:31">

        <return pos:start="113:9" pos:end="113:31">return <expr pos:start="113:16" pos:end="113:30"><call pos:start="113:16" pos:end="113:30"><name pos:start="113:16" pos:end="113:22">AVERROR</name><argument_list pos:start="113:23" pos:end="113:30">(<argument pos:start="113:24" pos:end="113:29"><expr pos:start="113:24" pos:end="113:29"><name pos:start="113:24" pos:end="113:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="117:5" pos:end="117:38">/* decode y, u and v components */</comment>

    <for pos:start="119:5" pos:end="237:5">for <control pos:start="119:9" pos:end="119:27">(<init pos:start="119:10" pos:end="119:15"><expr pos:start="119:10" pos:end="119:14"><name pos:start="119:10" pos:end="119:10">i</name> <operator pos:start="119:12" pos:end="119:12">=</operator> <literal type="number" pos:start="119:14" pos:end="119:14">0</literal></expr>;</init> <condition pos:start="119:17" pos:end="119:22"><expr pos:start="119:17" pos:end="119:21"><name pos:start="119:17" pos:end="119:17">i</name> <operator pos:start="119:19" pos:end="119:19">&lt;</operator> <literal type="number" pos:start="119:21" pos:end="119:21">3</literal></expr>;</condition> <incr pos:start="119:24" pos:end="119:26"><expr pos:start="119:24" pos:end="119:26"><name pos:start="119:24" pos:end="119:24">i</name><operator pos:start="119:25" pos:end="119:26">++</operator></expr></incr>)</control> <block pos:start="119:29" pos:end="237:5">{<block_content pos:start="121:9" pos:end="235:9">

        <decl_stmt pos:start="121:9" pos:end="121:21"><decl pos:start="121:9" pos:end="121:20"><type pos:start="121:9" pos:end="121:11"><name pos:start="121:9" pos:end="121:11">int</name></type> <name pos:start="121:13" pos:end="121:20">linesize</name></decl>;</decl_stmt>

        <if_stmt pos:start="123:9" pos:end="143:9"><if pos:start="123:9" pos:end="131:9">if <condition pos:start="123:12" pos:end="123:19">(<expr pos:start="123:13" pos:end="123:18"><name pos:start="123:13" pos:end="123:13">i</name> <operator pos:start="123:15" pos:end="123:16">==</operator> <literal type="number" pos:start="123:18" pos:end="123:18">0</literal></expr>)</condition> <block pos:start="123:21" pos:end="131:9">{<block_content pos:start="125:13" pos:end="129:35">

            <expr_stmt pos:start="125:13" pos:end="125:46"><expr pos:start="125:13" pos:end="125:45"><name pos:start="125:13" pos:end="125:17">width</name>    <operator pos:start="125:22" pos:end="125:22">=</operator> <call pos:start="125:24" pos:end="125:45"><name pos:start="125:24" pos:end="125:30">FFALIGN</name><argument_list pos:start="125:31" pos:end="125:45">(<argument pos:start="125:32" pos:end="125:39"><expr pos:start="125:32" pos:end="125:39"><name pos:start="125:32" pos:end="125:39"><name pos:start="125:32" pos:end="125:32">s</name><operator pos:start="125:33" pos:end="125:34">-&gt;</operator><name pos:start="125:35" pos:end="125:39">width</name></name></expr></argument>,  <argument pos:start="125:43" pos:end="125:44"><expr pos:start="125:43" pos:end="125:44"><literal type="number" pos:start="125:43" pos:end="125:44">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:46"><expr pos:start="127:13" pos:end="127:45"><name pos:start="127:13" pos:end="127:18">height</name>   <operator pos:start="127:22" pos:end="127:22">=</operator> <call pos:start="127:24" pos:end="127:45"><name pos:start="127:24" pos:end="127:30">FFALIGN</name><argument_list pos:start="127:31" pos:end="127:45">(<argument pos:start="127:32" pos:end="127:40"><expr pos:start="127:32" pos:end="127:40"><name pos:start="127:32" pos:end="127:40"><name pos:start="127:32" pos:end="127:32">s</name><operator pos:start="127:33" pos:end="127:34">-&gt;</operator><name pos:start="127:35" pos:end="127:40">height</name></name></expr></argument>, <argument pos:start="127:43" pos:end="127:44"><expr pos:start="127:43" pos:end="127:44"><literal type="number" pos:start="127:43" pos:end="127:44">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:35"><expr pos:start="129:13" pos:end="129:34"><name pos:start="129:13" pos:end="129:20">linesize</name> <operator pos:start="129:22" pos:end="129:22">=</operator> <name pos:start="129:24" pos:end="129:34"><name pos:start="129:24" pos:end="129:24">s</name><operator pos:start="129:25" pos:end="129:26">-&gt;</operator><name pos:start="129:27" pos:end="129:34">linesize</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="131:11" pos:end="143:9">else <block pos:start="131:16" pos:end="143:9">{<block_content pos:start="133:13" pos:end="141:37">

            <if_stmt pos:start="133:13" pos:end="135:22"><if pos:start="133:13" pos:end="135:22">if <condition pos:start="133:16" pos:end="133:43">(<expr pos:start="133:17" pos:end="133:42"><name pos:start="133:17" pos:end="133:24"><name pos:start="133:17" pos:end="133:17">s</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:24">flags</name></name> <operator pos:start="133:26" pos:end="133:26">&amp;</operator> <name pos:start="133:28" pos:end="133:42">CODEC_FLAG_GRAY</name></expr>)</condition><block type="pseudo" pos:start="135:17" pos:end="135:22"><block_content pos:start="135:17" pos:end="135:22">

                <break pos:start="135:17" pos:end="135:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:50"><expr pos:start="137:13" pos:end="137:49"><name pos:start="137:13" pos:end="137:17">width</name>    <operator pos:start="137:22" pos:end="137:22">=</operator> <call pos:start="137:24" pos:end="137:49"><name pos:start="137:24" pos:end="137:30">FFALIGN</name><argument_list pos:start="137:31" pos:end="137:49">(<argument pos:start="137:32" pos:end="137:44"><expr pos:start="137:32" pos:end="137:44"><name pos:start="137:32" pos:end="137:39"><name pos:start="137:32" pos:end="137:32">s</name><operator pos:start="137:33" pos:end="137:34">-&gt;</operator><name pos:start="137:35" pos:end="137:39">width</name></name>  <operator pos:start="137:42" pos:end="137:42">/</operator> <literal type="number" pos:start="137:44" pos:end="137:44">4</literal></expr></argument>, <argument pos:start="137:47" pos:end="137:48"><expr pos:start="137:47" pos:end="137:48"><literal type="number" pos:start="137:47" pos:end="137:48">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:50"><expr pos:start="139:13" pos:end="139:49"><name pos:start="139:13" pos:end="139:18">height</name>   <operator pos:start="139:22" pos:end="139:22">=</operator> <call pos:start="139:24" pos:end="139:49"><name pos:start="139:24" pos:end="139:30">FFALIGN</name><argument_list pos:start="139:31" pos:end="139:49">(<argument pos:start="139:32" pos:end="139:44"><expr pos:start="139:32" pos:end="139:44"><name pos:start="139:32" pos:end="139:40"><name pos:start="139:32" pos:end="139:32">s</name><operator pos:start="139:33" pos:end="139:34">-&gt;</operator><name pos:start="139:35" pos:end="139:40">height</name></name> <operator pos:start="139:42" pos:end="139:42">/</operator> <literal type="number" pos:start="139:44" pos:end="139:44">4</literal></expr></argument>, <argument pos:start="139:47" pos:end="139:48"><expr pos:start="139:47" pos:end="139:48"><literal type="number" pos:start="139:47" pos:end="139:48">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:37"><expr pos:start="141:13" pos:end="141:36"><name pos:start="141:13" pos:end="141:20">linesize</name> <operator pos:start="141:22" pos:end="141:22">=</operator> <name pos:start="141:24" pos:end="141:36"><name pos:start="141:24" pos:end="141:24">s</name><operator pos:start="141:25" pos:end="141:26">-&gt;</operator><name pos:start="141:27" pos:end="141:36">uvlinesize</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="147:9" pos:end="147:47"><expr pos:start="147:9" pos:end="147:46"><name pos:start="147:9" pos:end="147:15">current</name> <operator pos:start="147:17" pos:end="147:17">=</operator> <name pos:start="147:19" pos:end="147:46"><name pos:start="147:19" pos:end="147:19">s</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:36">current_picture</name><operator pos:start="147:37" pos:end="147:37">.</operator><name pos:start="147:38" pos:end="147:38">f</name><operator pos:start="147:39" pos:end="147:39">.</operator><name pos:start="147:40" pos:end="147:43">data</name><index pos:start="147:44" pos:end="147:46">[<expr pos:start="147:45" pos:end="147:45"><name pos:start="147:45" pos:end="147:45">i</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="151:9" pos:end="157:49"><if pos:start="151:9" pos:end="153:49">if <condition pos:start="151:12" pos:end="151:46">(<expr pos:start="151:13" pos:end="151:45"><name pos:start="151:13" pos:end="151:24"><name pos:start="151:13" pos:end="151:13">s</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:24">pict_type</name></name> <operator pos:start="151:26" pos:end="151:27">==</operator> <name pos:start="151:29" pos:end="151:45">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:49"><block_content pos:start="153:13" pos:end="153:49">

            <expr_stmt pos:start="153:13" pos:end="153:49"><expr pos:start="153:13" pos:end="153:48"><name pos:start="153:13" pos:end="153:20">previous</name> <operator pos:start="153:22" pos:end="153:22">=</operator> <name pos:start="153:24" pos:end="153:48"><name pos:start="153:24" pos:end="153:24">s</name><operator pos:start="153:25" pos:end="153:26">-&gt;</operator><name pos:start="153:27" pos:end="153:38">next_picture</name><operator pos:start="153:39" pos:end="153:39">.</operator><name pos:start="153:40" pos:end="153:40">f</name><operator pos:start="153:41" pos:end="153:41">.</operator><name pos:start="153:42" pos:end="153:45">data</name><index pos:start="153:46" pos:end="153:48">[<expr pos:start="153:47" pos:end="153:47"><name pos:start="153:47" pos:end="153:47">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="155:9" pos:end="157:49">else<block type="pseudo" pos:start="157:13" pos:end="157:49"><block_content pos:start="157:13" pos:end="157:49">

            <expr_stmt pos:start="157:13" pos:end="157:49"><expr pos:start="157:13" pos:end="157:48"><name pos:start="157:13" pos:end="157:20">previous</name> <operator pos:start="157:22" pos:end="157:22">=</operator> <name pos:start="157:24" pos:end="157:48"><name pos:start="157:24" pos:end="157:24">s</name><operator pos:start="157:25" pos:end="157:26">-&gt;</operator><name pos:start="157:27" pos:end="157:38">last_picture</name><operator pos:start="157:39" pos:end="157:39">.</operator><name pos:start="157:40" pos:end="157:40">f</name><operator pos:start="157:41" pos:end="157:41">.</operator><name pos:start="157:42" pos:end="157:45">data</name><index pos:start="157:46" pos:end="157:48">[<expr pos:start="157:47" pos:end="157:47"><name pos:start="157:47" pos:end="157:47">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="161:9" pos:end="235:9"><if pos:start="161:9" pos:end="191:9">if <condition pos:start="161:12" pos:end="161:46">(<expr pos:start="161:13" pos:end="161:45"><name pos:start="161:13" pos:end="161:24"><name pos:start="161:13" pos:end="161:13">s</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:24">pict_type</name></name> <operator pos:start="161:26" pos:end="161:27">==</operator> <name pos:start="161:29" pos:end="161:45">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="161:48" pos:end="191:9">{<block_content pos:start="165:13" pos:end="189:13">

            <comment type="block" pos:start="163:13" pos:end="163:26">/* keyframe */</comment>

            <for pos:start="165:13" pos:end="189:13">for <control pos:start="165:17" pos:end="165:44">(<init pos:start="165:18" pos:end="165:23"><expr pos:start="165:18" pos:end="165:22"><name pos:start="165:18" pos:end="165:18">y</name> <operator pos:start="165:20" pos:end="165:20">=</operator> <literal type="number" pos:start="165:22" pos:end="165:22">0</literal></expr>;</init> <condition pos:start="165:25" pos:end="165:35"><expr pos:start="165:25" pos:end="165:34"><name pos:start="165:25" pos:end="165:25">y</name> <operator pos:start="165:27" pos:end="165:27">&lt;</operator> <name pos:start="165:29" pos:end="165:34">height</name></expr>;</condition> <incr pos:start="165:37" pos:end="165:43"><expr pos:start="165:37" pos:end="165:43"><name pos:start="165:37" pos:end="165:37">y</name> <operator pos:start="165:39" pos:end="165:40">+=</operator> <literal type="number" pos:start="165:42" pos:end="165:43">16</literal></expr></incr>)</control> <block pos:start="165:46" pos:end="189:13">{<block_content pos:start="167:17" pos:end="187:41">

                <for pos:start="167:17" pos:end="185:17">for <control pos:start="167:21" pos:end="167:47">(<init pos:start="167:22" pos:end="167:27"><expr pos:start="167:22" pos:end="167:26"><name pos:start="167:22" pos:end="167:22">x</name> <operator pos:start="167:24" pos:end="167:24">=</operator> <literal type="number" pos:start="167:26" pos:end="167:26">0</literal></expr>;</init> <condition pos:start="167:29" pos:end="167:38"><expr pos:start="167:29" pos:end="167:37"><name pos:start="167:29" pos:end="167:29">x</name> <operator pos:start="167:31" pos:end="167:31">&lt;</operator> <name pos:start="167:33" pos:end="167:37">width</name></expr>;</condition> <incr pos:start="167:40" pos:end="167:46"><expr pos:start="167:40" pos:end="167:46"><name pos:start="167:40" pos:end="167:40">x</name> <operator pos:start="167:42" pos:end="167:43">+=</operator> <literal type="number" pos:start="167:45" pos:end="167:46">16</literal></expr></incr>)</control> <block pos:start="167:49" pos:end="185:17">{<block_content pos:start="169:21" pos:end="183:21">

                    <expr_stmt pos:start="169:21" pos:end="171:63"><expr pos:start="169:21" pos:end="171:62"><name pos:start="169:21" pos:end="169:26">result</name> <operator pos:start="169:28" pos:end="169:28">=</operator> <call pos:start="169:30" pos:end="171:62"><name pos:start="169:30" pos:end="169:52">svq1_decode_block_intra</name><argument_list pos:start="169:53" pos:end="171:62">(<argument pos:start="169:54" pos:end="169:59"><expr pos:start="169:54" pos:end="169:59"><operator pos:start="169:54" pos:end="169:54">&amp;</operator><name pos:start="169:55" pos:end="169:59"><name pos:start="169:55" pos:end="169:55">s</name><operator pos:start="169:56" pos:end="169:57">-&gt;</operator><name pos:start="169:58" pos:end="169:59">gb</name></name></expr></argument>, <argument pos:start="169:62" pos:end="169:72"><expr pos:start="169:62" pos:end="169:72"><operator pos:start="169:62" pos:end="169:62">&amp;</operator><name pos:start="169:63" pos:end="169:72"><name pos:start="169:63" pos:end="169:69">current</name><index pos:start="169:70" pos:end="169:72">[<expr pos:start="169:71" pos:end="169:71"><name pos:start="169:71" pos:end="169:71">x</name></expr>]</index></name></expr></argument>,

                                                     <argument pos:start="171:54" pos:end="171:61"><expr pos:start="171:54" pos:end="171:61"><name pos:start="171:54" pos:end="171:61">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="173:21" pos:end="183:21"><if pos:start="173:21" pos:end="183:21">if <condition pos:start="173:24" pos:end="173:31">(<expr pos:start="173:25" pos:end="173:30"><name pos:start="173:25" pos:end="173:30">result</name></expr>)</condition> <block pos:start="173:33" pos:end="183:21">{<block_content pos:start="175:25" pos:end="181:33">

                        <expr_stmt pos:start="175:25" pos:end="179:39"><expr pos:start="175:25" pos:end="179:38"><call pos:start="175:25" pos:end="179:38"><name pos:start="175:25" pos:end="175:30">av_log</name><argument_list pos:start="175:31" pos:end="179:38">(<argument pos:start="175:32" pos:end="175:39"><expr pos:start="175:32" pos:end="175:39"><name pos:start="175:32" pos:end="175:39"><name pos:start="175:32" pos:end="175:32">s</name><operator pos:start="175:33" pos:end="175:34">-&gt;</operator><name pos:start="175:35" pos:end="175:39">avctx</name></name></expr></argument>, <argument pos:start="175:42" pos:end="175:53"><expr pos:start="175:42" pos:end="175:53"><name pos:start="175:42" pos:end="175:53">AV_LOG_ERROR</name></expr></argument>,

                               <argument pos:start="177:32" pos:end="177:75"><expr pos:start="177:32" pos:end="177:75"><literal type="string" pos:start="177:32" pos:end="177:75">"Error in svq1_decode_block %i (keyframe)\n"</literal></expr></argument>,

                               <argument pos:start="179:32" pos:end="179:37"><expr pos:start="179:32" pos:end="179:37"><name pos:start="179:32" pos:end="179:37">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="181:25" pos:end="181:33">goto <name pos:start="181:30" pos:end="181:32">err</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="187:17" pos:end="187:41"><expr pos:start="187:17" pos:end="187:40"><name pos:start="187:17" pos:end="187:23">current</name> <operator pos:start="187:25" pos:end="187:26">+=</operator> <literal type="number" pos:start="187:28" pos:end="187:29">16</literal> <operator pos:start="187:31" pos:end="187:31">*</operator> <name pos:start="187:33" pos:end="187:40">linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="191:11" pos:end="235:9">else <block pos:start="191:16" pos:end="235:9">{<block_content pos:start="195:13" pos:end="233:13">

            <comment type="block" pos:start="193:13" pos:end="193:29">/* delta frame */</comment>

            <expr_stmt pos:start="195:13" pos:end="195:65"><expr pos:start="195:13" pos:end="195:64"><call pos:start="195:13" pos:end="195:64"><name pos:start="195:13" pos:end="195:18">memset</name><argument_list pos:start="195:19" pos:end="195:64">(<argument pos:start="195:20" pos:end="195:22"><expr pos:start="195:20" pos:end="195:22"><name pos:start="195:20" pos:end="195:22">pmv</name></expr></argument>, <argument pos:start="195:25" pos:end="195:25"><expr pos:start="195:25" pos:end="195:25"><literal type="number" pos:start="195:25" pos:end="195:25">0</literal></expr></argument>, <argument pos:start="195:28" pos:end="195:63"><expr pos:start="195:28" pos:end="195:63"><operator pos:start="195:28" pos:end="195:28">(</operator><operator pos:start="195:29" pos:end="195:29">(</operator><name pos:start="195:30" pos:end="195:34">width</name> <operator pos:start="195:36" pos:end="195:36">/</operator> <literal type="number" pos:start="195:38" pos:end="195:38">8</literal><operator pos:start="195:39" pos:end="195:39">)</operator> <operator pos:start="195:41" pos:end="195:41">+</operator> <literal type="number" pos:start="195:43" pos:end="195:43">3</literal><operator pos:start="195:44" pos:end="195:44">)</operator> <operator pos:start="195:46" pos:end="195:46">*</operator> <sizeof pos:start="195:48" pos:end="195:63">sizeof<argument_list pos:start="195:54" pos:end="195:63">(<argument pos:start="195:55" pos:end="195:62"><expr pos:start="195:55" pos:end="195:62"><name pos:start="195:55" pos:end="195:62">svq1_pmv</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="199:13" pos:end="233:13">for <control pos:start="199:17" pos:end="199:44">(<init pos:start="199:18" pos:end="199:23"><expr pos:start="199:18" pos:end="199:22"><name pos:start="199:18" pos:end="199:18">y</name> <operator pos:start="199:20" pos:end="199:20">=</operator> <literal type="number" pos:start="199:22" pos:end="199:22">0</literal></expr>;</init> <condition pos:start="199:25" pos:end="199:35"><expr pos:start="199:25" pos:end="199:34"><name pos:start="199:25" pos:end="199:25">y</name> <operator pos:start="199:27" pos:end="199:27">&lt;</operator> <name pos:start="199:29" pos:end="199:34">height</name></expr>;</condition> <incr pos:start="199:37" pos:end="199:43"><expr pos:start="199:37" pos:end="199:43"><name pos:start="199:37" pos:end="199:37">y</name> <operator pos:start="199:39" pos:end="199:40">+=</operator> <literal type="number" pos:start="199:42" pos:end="199:43">16</literal></expr></incr>)</control> <block pos:start="199:46" pos:end="233:13">{<block_content pos:start="201:17" pos:end="231:41">

                <for pos:start="201:17" pos:end="221:17">for <control pos:start="201:21" pos:end="201:47">(<init pos:start="201:22" pos:end="201:27"><expr pos:start="201:22" pos:end="201:26"><name pos:start="201:22" pos:end="201:22">x</name> <operator pos:start="201:24" pos:end="201:24">=</operator> <literal type="number" pos:start="201:26" pos:end="201:26">0</literal></expr>;</init> <condition pos:start="201:29" pos:end="201:38"><expr pos:start="201:29" pos:end="201:37"><name pos:start="201:29" pos:end="201:29">x</name> <operator pos:start="201:31" pos:end="201:31">&lt;</operator> <name pos:start="201:33" pos:end="201:37">width</name></expr>;</condition> <incr pos:start="201:40" pos:end="201:46"><expr pos:start="201:40" pos:end="201:46"><name pos:start="201:40" pos:end="201:40">x</name> <operator pos:start="201:42" pos:end="201:43">+=</operator> <literal type="number" pos:start="201:45" pos:end="201:46">16</literal></expr></incr>)</control> <block pos:start="201:49" pos:end="221:17">{<block_content pos:start="203:21" pos:end="219:21">

                    <expr_stmt pos:start="203:21" pos:end="207:64"><expr pos:start="203:21" pos:end="207:63"><name pos:start="203:21" pos:end="203:26">result</name> <operator pos:start="203:28" pos:end="203:28">=</operator> <call pos:start="203:30" pos:end="207:63"><name pos:start="203:30" pos:end="203:52">svq1_decode_delta_block</name><argument_list pos:start="203:53" pos:end="207:63">(<argument pos:start="203:54" pos:end="203:54"><expr pos:start="203:54" pos:end="203:54"><name pos:start="203:54" pos:end="203:54">s</name></expr></argument>, <argument pos:start="203:57" pos:end="203:62"><expr pos:start="203:57" pos:end="203:62"><operator pos:start="203:57" pos:end="203:57">&amp;</operator><name pos:start="203:58" pos:end="203:62"><name pos:start="203:58" pos:end="203:58">s</name><operator pos:start="203:59" pos:end="203:60">-&gt;</operator><name pos:start="203:61" pos:end="203:62">gb</name></name></expr></argument>, <argument pos:start="203:65" pos:end="203:75"><expr pos:start="203:65" pos:end="203:75"><operator pos:start="203:65" pos:end="203:65">&amp;</operator><name pos:start="203:66" pos:end="203:75"><name pos:start="203:66" pos:end="203:72">current</name><index pos:start="203:73" pos:end="203:75">[<expr pos:start="203:74" pos:end="203:74"><name pos:start="203:74" pos:end="203:74">x</name></expr>]</index></name></expr></argument>,

                                                     <argument pos:start="205:54" pos:end="205:61"><expr pos:start="205:54" pos:end="205:61"><name pos:start="205:54" pos:end="205:61">previous</name></expr></argument>, <argument pos:start="205:64" pos:end="205:71"><expr pos:start="205:64" pos:end="205:71"><name pos:start="205:64" pos:end="205:71">linesize</name></expr></argument>,

                                                     <argument pos:start="207:54" pos:end="207:56"><expr pos:start="207:54" pos:end="207:56"><name pos:start="207:54" pos:end="207:56">pmv</name></expr></argument>, <argument pos:start="207:59" pos:end="207:59"><expr pos:start="207:59" pos:end="207:59"><name pos:start="207:59" pos:end="207:59">x</name></expr></argument>, <argument pos:start="207:62" pos:end="207:62"><expr pos:start="207:62" pos:end="207:62"><name pos:start="207:62" pos:end="207:62">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="209:21" pos:end="219:21"><if pos:start="209:21" pos:end="219:21">if <condition pos:start="209:24" pos:end="209:31">(<expr pos:start="209:25" pos:end="209:30"><name pos:start="209:25" pos:end="209:30">result</name></expr>)</condition> <block pos:start="209:33" pos:end="219:21">{<block_content pos:start="211:25" pos:end="217:33">

                        <expr_stmt pos:start="211:25" pos:end="215:40"><expr pos:start="211:25" pos:end="215:39"><call pos:start="211:25" pos:end="215:39"><name pos:start="211:25" pos:end="211:31">av_dlog</name><argument_list pos:start="211:32" pos:end="215:39">(<argument pos:start="211:33" pos:end="211:40"><expr pos:start="211:33" pos:end="211:40"><name pos:start="211:33" pos:end="211:40"><name pos:start="211:33" pos:end="211:33">s</name><operator pos:start="211:34" pos:end="211:35">-&gt;</operator><name pos:start="211:36" pos:end="211:40">avctx</name></name></expr></argument>,

                                <argument pos:start="213:33" pos:end="213:71"><expr pos:start="213:33" pos:end="213:71"><literal type="string" pos:start="213:33" pos:end="213:71">"Error in svq1_decode_delta_block %i\n"</literal></expr></argument>,

                                <argument pos:start="215:33" pos:end="215:38"><expr pos:start="215:33" pos:end="215:38"><name pos:start="215:33" pos:end="215:38">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="217:25" pos:end="217:33">goto <name pos:start="217:30" pos:end="217:32">err</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>



                <expr_stmt pos:start="225:17" pos:end="227:33"><expr pos:start="225:17" pos:end="227:32"><name pos:start="225:17" pos:end="225:22"><name pos:start="225:17" pos:end="225:19">pmv</name><index pos:start="225:20" pos:end="225:22">[<expr pos:start="225:21" pos:end="225:21"><literal type="number" pos:start="225:21" pos:end="225:21">0</literal></expr>]</index></name><operator pos:start="225:23" pos:end="225:23">.</operator><name pos:start="225:24" pos:end="225:24">x</name>     <operator pos:start="225:30" pos:end="225:30">=</operator>

                    <name pos:start="227:21" pos:end="227:26"><name pos:start="227:21" pos:end="227:23">pmv</name><index pos:start="227:24" pos:end="227:26">[<expr pos:start="227:25" pos:end="227:25"><literal type="number" pos:start="227:25" pos:end="227:25">0</literal></expr>]</index></name><operator pos:start="227:27" pos:end="227:27">.</operator><name pos:start="227:28" pos:end="227:28">y</name> <operator pos:start="227:30" pos:end="227:30">=</operator> <literal type="number" pos:start="227:32" pos:end="227:32">0</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="231:17" pos:end="231:41"><expr pos:start="231:17" pos:end="231:40"><name pos:start="231:17" pos:end="231:23">current</name> <operator pos:start="231:25" pos:end="231:26">+=</operator> <literal type="number" pos:start="231:28" pos:end="231:29">16</literal> <operator pos:start="231:31" pos:end="231:31">*</operator> <name pos:start="231:33" pos:end="231:40">linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="241:5" pos:end="241:33"><expr pos:start="241:5" pos:end="241:32"><operator pos:start="241:5" pos:end="241:5">*</operator><name pos:start="241:6" pos:end="241:9">pict</name> <operator pos:start="241:11" pos:end="241:11">=</operator> <name pos:start="241:13" pos:end="241:32"><name pos:start="241:13" pos:end="241:13">s</name><operator pos:start="241:14" pos:end="241:15">-&gt;</operator><name pos:start="241:16" pos:end="241:30">current_picture</name><operator pos:start="241:31" pos:end="241:31">.</operator><name pos:start="241:32" pos:end="241:32">f</name></name></expr>;</expr_stmt>




    <expr_stmt pos:start="246:5" pos:end="246:24"><expr pos:start="246:5" pos:end="246:23"><call pos:start="246:5" pos:end="246:23"><name pos:start="246:5" pos:end="246:20">ff_MPV_frame_end</name><argument_list pos:start="246:21" pos:end="246:23">(<argument pos:start="246:22" pos:end="246:22"><expr pos:start="246:22" pos:end="246:22"><name pos:start="246:22" pos:end="246:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="250:5" pos:end="250:33"><expr pos:start="250:5" pos:end="250:32"><operator pos:start="250:5" pos:end="250:5">*</operator><name pos:start="250:6" pos:end="250:14">data_size</name> <operator pos:start="250:16" pos:end="250:16">=</operator> <sizeof pos:start="250:18" pos:end="250:32">sizeof<argument_list pos:start="250:24" pos:end="250:32">(<argument pos:start="250:25" pos:end="250:31"><expr pos:start="250:25" pos:end="250:31"><name pos:start="250:25" pos:end="250:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="252:5" pos:end="252:26"><expr pos:start="252:5" pos:end="252:25"><name pos:start="252:5" pos:end="252:10">result</name>     <operator pos:start="252:16" pos:end="252:16">=</operator> <name pos:start="252:18" pos:end="252:25">buf_size</name></expr>;</expr_stmt>



<label pos:start="256:1" pos:end="256:4"><name pos:start="256:1" pos:end="256:3">err</name>:</label>

    <expr_stmt pos:start="258:5" pos:end="258:17"><expr pos:start="258:5" pos:end="258:16"><call pos:start="258:5" pos:end="258:16"><name pos:start="258:5" pos:end="258:11">av_free</name><argument_list pos:start="258:12" pos:end="258:16">(<argument pos:start="258:13" pos:end="258:15"><expr pos:start="258:13" pos:end="258:15"><name pos:start="258:13" pos:end="258:15">pmv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="260:5" pos:end="260:18">return <expr pos:start="260:12" pos:end="260:17"><name pos:start="260:12" pos:end="260:17">result</name></expr>;</return>

</block_content>}</block></function></unit>
