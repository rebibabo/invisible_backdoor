<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25478.c" pos:tabs="8"><function pos:start="1:1" pos:end="15:58"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">secondary_do_checkpoint</name><parameter_list pos:start="1:36" pos:end="1:74">(<parameter pos:start="1:37" pos:end="1:59"><decl pos:start="1:37" pos:end="1:59"><type pos:start="1:37" pos:end="1:59"><name pos:start="1:37" pos:end="1:56">BDRVReplicationState</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">s</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:73"><decl pos:start="1:62" pos:end="1:73"><type pos:start="1:62" pos:end="1:73"><name pos:start="1:62" pos:end="1:66">Error</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier><modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:73">errp</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="15:58">{<block_content pos:start="3:5" pos:end="15:58">
    <decl_stmt pos:start="3:5" pos:end="3:28"><decl pos:start="3:5" pos:end="3:27"><type pos:start="3:5" pos:end="3:11"><name pos:start="3:5" pos:end="3:9">Error</name> <modifier pos:start="3:11" pos:end="3:11">*</modifier></type><name pos:start="3:12" pos:end="3:20">local_err</name> <init pos:start="3:22" pos:end="3:27">= <expr pos:start="3:24" pos:end="3:27"><name pos:start="3:24" pos:end="3:27">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:12"><decl pos:start="4:5" pos:end="4:11"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:11">ret</name></decl>;</decl_stmt>
    <if_stmt pos:start="5:5" pos:end="15:58"><if pos:start="5:5" pos:end="15:58">if <condition pos:start="5:8" pos:end="5:36">(<expr pos:start="5:9" pos:end="5:35"><operator pos:start="5:9" pos:end="5:9">!</operator><name pos:start="5:10" pos:end="5:35"><name pos:start="5:10" pos:end="5:10">s</name><operator pos:start="5:11" pos:end="5:12">-&gt;</operator><name pos:start="5:13" pos:end="5:26">secondary_disk</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:30">bs</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:35">job</name></name></expr>)</condition> <block pos:start="5:38" pos:end="15:58">{<block_content pos:start="6:9" pos:end="15:58">
        <expr_stmt pos:start="6:9" pos:end="6:66"><expr pos:start="6:9" pos:end="6:65"><call pos:start="6:9" pos:end="6:65"><name pos:start="6:9" pos:end="6:18">error_setg</name><argument_list pos:start="6:19" pos:end="6:65">(<argument pos:start="6:20" pos:end="6:23"><expr pos:start="6:20" pos:end="6:23"><name pos:start="6:20" pos:end="6:23">errp</name></expr></argument>, <argument pos:start="6:26" pos:end="6:64"><expr pos:start="6:26" pos:end="6:64"><literal type="string" pos:start="6:26" pos:end="6:64">"Backup job was cancelled unexpectedly"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:65"><expr pos:start="7:5" pos:end="7:64"><call pos:start="7:5" pos:end="7:64"><name pos:start="7:5" pos:end="7:24">backup_do_checkpoint</name><argument_list pos:start="7:25" pos:end="7:64">(<argument pos:start="7:26" pos:end="7:51"><expr pos:start="7:26" pos:end="7:51"><name pos:start="7:26" pos:end="7:51"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:42">secondary_disk</name><operator pos:start="7:43" pos:end="7:44">-&gt;</operator><name pos:start="7:45" pos:end="7:46">bs</name><operator pos:start="7:47" pos:end="7:48">-&gt;</operator><name pos:start="7:49" pos:end="7:51">job</name></name></expr></argument>, <argument pos:start="7:54" pos:end="7:63"><expr pos:start="7:54" pos:end="7:63"><operator pos:start="7:54" pos:end="7:54">&amp;</operator><name pos:start="7:55" pos:end="7:63">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="8:5" pos:end="15:58"><if pos:start="8:5" pos:end="15:58">if <condition pos:start="8:8" pos:end="8:18">(<expr pos:start="8:9" pos:end="8:17"><name pos:start="8:9" pos:end="8:17">local_err</name></expr>)</condition> <block pos:start="8:20" pos:end="15:58">{<block_content pos:start="9:9" pos:end="15:58">
        <expr_stmt pos:start="9:9" pos:end="9:41"><expr pos:start="9:9" pos:end="9:40"><call pos:start="9:9" pos:end="9:40"><name pos:start="9:9" pos:end="9:23">error_propagate</name><argument_list pos:start="9:24" pos:end="9:40">(<argument pos:start="9:25" pos:end="9:28"><expr pos:start="9:25" pos:end="9:28"><name pos:start="9:25" pos:end="9:28">errp</name></expr></argument>, <argument pos:start="9:31" pos:end="9:39"><expr pos:start="9:31" pos:end="9:39"><name pos:start="9:31" pos:end="9:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:71"><expr pos:start="10:5" pos:end="10:70"><name pos:start="10:5" pos:end="10:7">ret</name> <operator pos:start="10:9" pos:end="10:9">=</operator> <call pos:start="10:11" pos:end="10:70"><name pos:start="10:11" pos:end="10:50"><name pos:start="10:11" pos:end="10:11">s</name><operator pos:start="10:12" pos:end="10:13">-&gt;</operator><name pos:start="10:14" pos:end="10:24">active_disk</name><operator pos:start="10:25" pos:end="10:26">-&gt;</operator><name pos:start="10:27" pos:end="10:28">bs</name><operator pos:start="10:29" pos:end="10:30">-&gt;</operator><name pos:start="10:31" pos:end="10:33">drv</name><operator pos:start="10:34" pos:end="10:35">-&gt;</operator><name pos:start="10:36" pos:end="10:50">bdrv_make_empty</name></name><argument_list pos:start="10:51" pos:end="10:70">(<argument pos:start="10:52" pos:end="10:69"><expr pos:start="10:52" pos:end="10:69"><name pos:start="10:52" pos:end="10:69"><name pos:start="10:52" pos:end="10:52">s</name><operator pos:start="10:53" pos:end="10:54">-&gt;</operator><name pos:start="10:55" pos:end="10:65">active_disk</name><operator pos:start="10:66" pos:end="10:67">-&gt;</operator><name pos:start="10:68" pos:end="10:69">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="11:5" pos:end="15:58"><if pos:start="11:5" pos:end="15:58">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:11">ret</name> <operator pos:start="11:13" pos:end="11:13">&lt;</operator> <literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>)</condition> <block pos:start="11:18" pos:end="15:58">{<block_content pos:start="12:9" pos:end="15:58">
        <expr_stmt pos:start="12:9" pos:end="12:58"><expr pos:start="12:9" pos:end="12:57"><call pos:start="12:9" pos:end="12:57"><name pos:start="12:9" pos:end="12:18">error_setg</name><argument_list pos:start="12:19" pos:end="12:57">(<argument pos:start="12:20" pos:end="12:23"><expr pos:start="12:20" pos:end="12:23"><name pos:start="12:20" pos:end="12:23">errp</name></expr></argument>, <argument pos:start="12:26" pos:end="12:56"><expr pos:start="12:26" pos:end="12:56"><literal type="string" pos:start="12:26" pos:end="12:56">"Cannot make active disk empty"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:71"><expr pos:start="13:5" pos:end="13:70"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:70"><name pos:start="13:11" pos:end="13:50"><name pos:start="13:11" pos:end="13:11">s</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:24">hidden_disk</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:28">bs</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:33">drv</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:50">bdrv_make_empty</name></name><argument_list pos:start="13:51" pos:end="13:70">(<argument pos:start="13:52" pos:end="13:69"><expr pos:start="13:52" pos:end="13:69"><name pos:start="13:52" pos:end="13:69"><name pos:start="13:52" pos:end="13:52">s</name><operator pos:start="13:53" pos:end="13:54">-&gt;</operator><name pos:start="13:55" pos:end="13:65">hidden_disk</name><operator pos:start="13:66" pos:end="13:67">-&gt;</operator><name pos:start="13:68" pos:end="13:69">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="14:5" pos:end="15:58"><if pos:start="14:5" pos:end="15:58">if <condition pos:start="14:8" pos:end="14:16">(<expr pos:start="14:9" pos:end="14:15"><name pos:start="14:9" pos:end="14:11">ret</name> <operator pos:start="14:13" pos:end="14:13">&lt;</operator> <literal type="number" pos:start="14:15" pos:end="14:15">0</literal></expr>)</condition> <block pos:start="14:18" pos:end="15:58">{<block_content pos:start="15:9" pos:end="15:58">
        <expr_stmt pos:start="15:9" pos:end="15:58"><expr pos:start="15:9" pos:end="15:57"><call pos:start="15:9" pos:end="15:57"><name pos:start="15:9" pos:end="15:18">error_setg</name><argument_list pos:start="15:19" pos:end="15:57">(<argument pos:start="15:20" pos:end="15:23"><expr pos:start="15:20" pos:end="15:23"><name pos:start="15:20" pos:end="15:23">errp</name></expr></argument>, <argument pos:start="15:26" pos:end="15:56"><expr pos:start="15:26" pos:end="15:56"><literal type="string" pos:start="15:26" pos:end="15:56">"Cannot make hidden disk empty"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
