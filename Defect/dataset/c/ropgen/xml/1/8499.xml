<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8499.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:70"><name pos:start="1:1" pos:end="1:24">libAVMemInputPin_Receive</name><argument_list pos:start="1:25" pos:end="1:70">(<argument pos:start="1:26" pos:end="1:47">libAVMemInputPin *this</argument>, <argument pos:start="1:50" pos:end="1:69">IMediaSample *sample</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:16">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">libAVPin</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">pin</name> <init pos:start="5:19" pos:end="5:64">= <expr pos:start="5:21" pos:end="5:64"><operator pos:start="5:21" pos:end="5:21">(</operator><name pos:start="5:22" pos:end="5:29">libAVPin</name> <operator pos:start="5:31" pos:end="5:31">*</operator><operator pos:start="5:32" pos:end="5:32">)</operator> <operator pos:start="5:34" pos:end="5:34">(</operator><operator pos:start="5:35" pos:end="5:35">(</operator><name pos:start="5:36" pos:end="5:42">uint8_t</name> <operator pos:start="5:44" pos:end="5:44">*</operator><operator pos:start="5:45" pos:end="5:45">)</operator> <name pos:start="5:47" pos:end="5:50">this</name> <operator pos:start="5:52" pos:end="5:52">-</operator> <name pos:start="5:54" pos:end="5:63">imemoffset</name><operator pos:start="5:64" pos:end="5:64">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:8">enum</name> <name pos:start="7:10" pos:end="7:24">dshowDeviceType</name></name></type> <name pos:start="7:26" pos:end="7:32">devtype</name> <init pos:start="7:34" pos:end="7:52">= <expr pos:start="7:36" pos:end="7:52"><name pos:start="7:36" pos:end="7:52"><name pos:start="7:36" pos:end="7:38">pin</name><operator pos:start="7:39" pos:end="7:40">-&gt;</operator><name pos:start="7:41" pos:end="7:46">filter</name><operator pos:start="7:47" pos:end="7:48">-&gt;</operator><name pos:start="7:49" pos:end="7:52">type</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">void</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:19">priv_data</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">buf_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:19">curtime</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:55"><expr pos:start="21:5" pos:end="21:54"><call pos:start="21:5" pos:end="21:54"><name pos:start="21:5" pos:end="21:14">dshowdebug</name><argument_list pos:start="21:15" pos:end="21:54">(<argument pos:start="21:16" pos:end="21:47"><expr pos:start="21:16" pos:end="21:47"><literal type="string" pos:start="21:16" pos:end="21:47">"libAVMemInputPin_Receive(%p)\n"</literal></expr></argument>, <argument pos:start="21:50" pos:end="21:53"><expr pos:start="21:50" pos:end="21:53"><name pos:start="21:50" pos:end="21:53">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="27:25"><if pos:start="25:5" pos:end="27:25">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:15">sample</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:25"><block_content pos:start="27:9" pos:end="27:25">

        <return pos:start="27:9" pos:end="27:25">return <expr pos:start="27:16" pos:end="27:24"><name pos:start="27:16" pos:end="27:24">E_POINTER</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="47:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:31">(<expr pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:15">devtype</name> <operator pos:start="31:17" pos:end="31:18">==</operator> <name pos:start="31:20" pos:end="31:30">VideoDevice</name></expr>)</condition> <block pos:start="31:33" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:49">

        <comment type="block" pos:start="33:9" pos:end="33:51">/* PTS from video devices is unreliable. */</comment>

        <decl_stmt pos:start="35:9" pos:end="35:52"><decl pos:start="35:9" pos:end="35:51"><type pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:23">IReferenceClock</name> <modifier pos:start="35:25" pos:end="35:25">*</modifier></type><name pos:start="35:26" pos:end="35:30">clock</name> <init pos:start="35:32" pos:end="35:51">= <expr pos:start="35:34" pos:end="35:51"><name pos:start="35:34" pos:end="35:51"><name pos:start="35:34" pos:end="35:36">pin</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:44">filter</name><operator pos:start="35:45" pos:end="35:46">-&gt;</operator><name pos:start="35:47" pos:end="35:51">clock</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:49"><expr pos:start="37:9" pos:end="37:48"><call pos:start="37:9" pos:end="37:48"><name pos:start="37:9" pos:end="37:31">IReferenceClock_GetTime</name><argument_list pos:start="37:32" pos:end="37:48">(<argument pos:start="37:33" pos:end="37:37"><expr pos:start="37:33" pos:end="37:37"><name pos:start="37:33" pos:end="37:37">clock</name></expr></argument>, <argument pos:start="37:40" pos:end="37:47"><expr pos:start="37:40" pos:end="37:47"><operator pos:start="37:40" pos:end="37:40">&amp;</operator><name pos:start="37:41" pos:end="37:47">curtime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="47:5">else <block pos:start="39:12" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:43">

        <decl_stmt pos:start="41:9" pos:end="41:22"><decl pos:start="41:9" pos:end="41:21"><type pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:15">int64_t</name></type> <name pos:start="41:17" pos:end="41:21">dummy</name></decl>;</decl_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:55"><expr pos:start="43:9" pos:end="43:54"><call pos:start="43:9" pos:end="43:54"><name pos:start="43:9" pos:end="43:28">IMediaSample_GetTime</name><argument_list pos:start="43:29" pos:end="43:54">(<argument pos:start="43:30" pos:end="43:35"><expr pos:start="43:30" pos:end="43:35"><name pos:start="43:30" pos:end="43:35">sample</name></expr></argument>, <argument pos:start="43:38" pos:end="43:45"><expr pos:start="43:38" pos:end="43:45"><operator pos:start="43:38" pos:end="43:38">&amp;</operator><name pos:start="43:39" pos:end="43:45">curtime</name></expr></argument>, <argument pos:start="43:48" pos:end="43:53"><expr pos:start="43:48" pos:end="43:53"><operator pos:start="43:48" pos:end="43:48">&amp;</operator><name pos:start="43:49" pos:end="43:53">dummy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:43"><expr pos:start="45:9" pos:end="45:42"><name pos:start="45:9" pos:end="45:15">curtime</name> <operator pos:start="45:17" pos:end="45:18">+=</operator> <name pos:start="45:20" pos:end="45:42"><name pos:start="45:20" pos:end="45:22">pin</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:30">filter</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:42">start_time</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:56"><expr pos:start="51:5" pos:end="51:55"><name pos:start="51:5" pos:end="51:12">buf_size</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <call pos:start="51:16" pos:end="51:55"><name pos:start="51:16" pos:end="51:47">IMediaSample_GetActualDataLength</name><argument_list pos:start="51:48" pos:end="51:55">(<argument pos:start="51:49" pos:end="51:54"><expr pos:start="51:49" pos:end="51:54"><name pos:start="51:49" pos:end="51:54">sample</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:42"><expr pos:start="53:5" pos:end="53:41"><call pos:start="53:5" pos:end="53:41"><name pos:start="53:5" pos:end="53:27">IMediaSample_GetPointer</name><argument_list pos:start="53:28" pos:end="53:41">(<argument pos:start="53:29" pos:end="53:34"><expr pos:start="53:29" pos:end="53:34"><name pos:start="53:29" pos:end="53:34">sample</name></expr></argument>, <argument pos:start="53:37" pos:end="53:40"><expr pos:start="53:37" pos:end="53:40"><operator pos:start="53:37" pos:end="53:37">&amp;</operator><name pos:start="53:38" pos:end="53:40">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:39"><expr pos:start="55:5" pos:end="55:38"><name pos:start="55:5" pos:end="55:13">priv_data</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <name pos:start="55:17" pos:end="55:38"><name pos:start="55:17" pos:end="55:19">pin</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:27">filter</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:38">priv_data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:38"><expr pos:start="57:5" pos:end="57:37"><name pos:start="57:5" pos:end="57:9">index</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <name pos:start="57:13" pos:end="57:37"><name pos:start="57:13" pos:end="57:15">pin</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:23">filter</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:37">stream_index</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:68"><expr pos:start="61:5" pos:end="61:67"><call pos:start="61:5" pos:end="61:67"><name pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:7">pin</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:15">filter</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:25">callback</name></name><argument_list pos:start="61:26" pos:end="61:67">(<argument pos:start="61:27" pos:end="61:35"><expr pos:start="61:27" pos:end="61:35"><name pos:start="61:27" pos:end="61:35">priv_data</name></expr></argument>, <argument pos:start="61:38" pos:end="61:42"><expr pos:start="61:38" pos:end="61:42"><name pos:start="61:38" pos:end="61:42">index</name></expr></argument>, <argument pos:start="61:45" pos:end="61:47"><expr pos:start="61:45" pos:end="61:47"><name pos:start="61:45" pos:end="61:47">buf</name></expr></argument>, <argument pos:start="61:50" pos:end="61:57"><expr pos:start="61:50" pos:end="61:57"><name pos:start="61:50" pos:end="61:57">buf_size</name></expr></argument>, <argument pos:start="61:60" pos:end="61:66"><expr pos:start="61:60" pos:end="61:66"><name pos:start="61:60" pos:end="61:66">curtime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="65:5" pos:end="65:16">return <expr pos:start="65:12" pos:end="65:15"><name pos:start="65:12" pos:end="65:15">S_OK</name></expr>;</return>

</block_content>}</block>
</unit>
