<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23951.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:16">helper_ocbi</name><parameter_list pos:start="1:17" pos:end="1:52">(<parameter pos:start="1:18" pos:end="1:33"><decl pos:start="1:18" pos:end="1:33"><type pos:start="1:18" pos:end="1:33"><name pos:start="1:18" pos:end="1:28">CPUSH4State</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">env</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:51"><decl pos:start="1:36" pos:end="1:51"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:43">uint32_t</name></type> <name pos:start="1:45" pos:end="1:51">address</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:53"><decl pos:start="5:5" pos:end="5:52"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:18">memory_content</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier><modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:28">current</name> <init pos:start="5:30" pos:end="5:52">= <expr pos:start="5:32" pos:end="5:52"><operator pos:start="5:32" pos:end="5:32">&amp;</operator><operator pos:start="5:33" pos:end="5:33">(</operator><name pos:start="5:34" pos:end="5:51"><name pos:start="5:34" pos:end="5:36">env</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:51">movcal_backup</name></name><operator pos:start="5:52" pos:end="5:52">)</operator></expr></init></decl>;</decl_stmt>

    <while pos:start="7:5" pos:end="41:5">while <condition pos:start="7:11" pos:end="7:20">(<expr pos:start="7:12" pos:end="7:19"><operator pos:start="7:12" pos:end="7:12">*</operator><name pos:start="7:13" pos:end="7:19">current</name></expr>)</condition>

    <block pos:start="9:5" pos:end="41:5">{<block_content pos:start="11:9" pos:end="39:9">

	<decl_stmt pos:start="11:9" pos:end="11:41"><decl pos:start="11:9" pos:end="11:40"><type pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:16">uint32_t</name></type> <name pos:start="11:18" pos:end="11:18">a</name> <init pos:start="11:20" pos:end="11:40">= <expr pos:start="11:22" pos:end="11:40"><name pos:start="11:22" pos:end="11:40"><operator pos:start="11:22" pos:end="11:22">(</operator><operator pos:start="11:23" pos:end="11:23">*</operator><name pos:start="11:24" pos:end="11:30">current</name><operator pos:start="11:31" pos:end="11:31">)</operator><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:40">address</name></name></expr></init></decl>;</decl_stmt>

	<if_stmt pos:start="13:9" pos:end="39:9"><if pos:start="13:9" pos:end="39:9">if <condition pos:start="13:12" pos:end="13:45">(<expr pos:start="13:13" pos:end="13:44"><operator pos:start="13:13" pos:end="13:13">(</operator><name pos:start="13:14" pos:end="13:14">a</name> <operator pos:start="13:16" pos:end="13:16">&amp;</operator> <operator pos:start="13:18" pos:end="13:18">~</operator><literal type="number" pos:start="13:19" pos:end="13:22">0x1F</literal><operator pos:start="13:23" pos:end="13:23">)</operator> <operator pos:start="13:25" pos:end="13:26">==</operator> <operator pos:start="13:28" pos:end="13:28">(</operator><name pos:start="13:29" pos:end="13:35">address</name> <operator pos:start="13:37" pos:end="13:37">&amp;</operator> <operator pos:start="13:39" pos:end="13:39">~</operator><literal type="number" pos:start="13:40" pos:end="13:43">0x1F</literal><operator pos:start="13:44" pos:end="13:44">)</operator></expr>)</condition>

	<block pos:start="15:9" pos:end="39:9">{<block_content pos:start="17:13" pos:end="37:18">

	    <decl_stmt pos:start="17:13" pos:end="17:52"><decl pos:start="17:13" pos:end="17:51"><type pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:26">memory_content</name> <modifier pos:start="17:28" pos:end="17:28">*</modifier></type><name pos:start="17:29" pos:end="17:32">next</name> <init pos:start="17:34" pos:end="17:51">= <expr pos:start="17:36" pos:end="17:51"><name pos:start="17:36" pos:end="17:51"><operator pos:start="17:36" pos:end="17:36">(</operator><operator pos:start="17:37" pos:end="17:37">*</operator><name pos:start="17:38" pos:end="17:44">current</name><operator pos:start="17:45" pos:end="17:45">)</operator><operator pos:start="17:46" pos:end="17:47">-&gt;</operator><name pos:start="17:48" pos:end="17:51">next</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:52"><expr pos:start="19:13" pos:end="19:51"><call pos:start="19:13" pos:end="19:51"><name pos:start="19:13" pos:end="19:24">cpu_stl_data</name><argument_list pos:start="19:25" pos:end="19:51">(<argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">env</name></expr></argument>, <argument pos:start="19:31" pos:end="19:31"><expr pos:start="19:31" pos:end="19:31"><name pos:start="19:31" pos:end="19:31">a</name></expr></argument>, <argument pos:start="19:34" pos:end="19:50"><expr pos:start="19:34" pos:end="19:50"><name pos:start="19:34" pos:end="19:50"><operator pos:start="19:34" pos:end="19:34">(</operator><operator pos:start="19:35" pos:end="19:35">*</operator><name pos:start="19:36" pos:end="19:42">current</name><operator pos:start="19:43" pos:end="19:43">)</operator><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:50">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    

	    <if_stmt pos:start="23:13" pos:end="29:13"><if pos:start="23:13" pos:end="29:13">if <condition pos:start="23:16" pos:end="23:29">(<expr pos:start="23:17" pos:end="23:28"><name pos:start="23:17" pos:end="23:20">next</name> <operator pos:start="23:22" pos:end="23:23">==</operator> <name pos:start="23:25" pos:end="23:28">NULL</name></expr>)</condition>

	    <block pos:start="25:13" pos:end="29:13">{<block_content pos:start="27:17" pos:end="27:50">

		<expr_stmt pos:start="27:17" pos:end="27:50"><expr pos:start="27:17" pos:end="27:49"><name pos:start="27:17" pos:end="27:39"><name pos:start="27:17" pos:end="27:19">env</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:39">movcal_backup_tail</name></name> <operator pos:start="27:41" pos:end="27:41">=</operator> <name pos:start="27:43" pos:end="27:49">current</name></expr>;</expr_stmt>

	    </block_content>}</block></if></if_stmt>



	    <expr_stmt pos:start="33:13" pos:end="33:28"><expr pos:start="33:13" pos:end="33:27"><call pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:16">free</name> <argument_list pos:start="33:18" pos:end="33:27">(<argument pos:start="33:19" pos:end="33:26"><expr pos:start="33:19" pos:end="33:26"><operator pos:start="33:19" pos:end="33:19">*</operator><name pos:start="33:20" pos:end="33:26">current</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="35:13" pos:end="35:28"><expr pos:start="35:13" pos:end="35:27"><operator pos:start="35:13" pos:end="35:13">*</operator><name pos:start="35:14" pos:end="35:20">current</name> <operator pos:start="35:22" pos:end="35:22">=</operator> <name pos:start="35:24" pos:end="35:27">next</name></expr>;</expr_stmt>

	    <break pos:start="37:13" pos:end="37:18">break;</break>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
