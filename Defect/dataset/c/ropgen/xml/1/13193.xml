<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13193.c" pos:tabs="8"><function pos:start="1:1" pos:end="170:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">helper_wrmsr</name><parameter_list pos:start="1:18" pos:end="1:23">(<parameter pos:start="1:19" pos:end="1:22"><decl pos:start="1:19" pos:end="1:22"><type pos:start="1:19" pos:end="1:22"><name pos:start="1:19" pos:end="1:22">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="170:1">{<block_content pos:start="5:5" pos:end="168:5">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:16">val</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:54"><expr pos:start="9:5" pos:end="9:53"><call pos:start="9:5" pos:end="9:53"><name pos:start="9:5" pos:end="9:36">helper_svm_check_intercept_param</name><argument_list pos:start="9:37" pos:end="9:53">(<argument pos:start="9:38" pos:end="9:49"><expr pos:start="9:38" pos:end="9:49"><name pos:start="9:38" pos:end="9:49">SVM_EXIT_MSR</name></expr></argument>, <argument pos:start="9:52" pos:end="9:52"><expr pos:start="9:52" pos:end="9:52"><literal type="number" pos:start="9:52" pos:end="9:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:62"><expr pos:start="13:5" pos:end="13:61"><name pos:start="13:5" pos:end="13:7">val</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <operator pos:start="13:11" pos:end="13:11">(</operator><operator pos:start="13:12" pos:end="13:12">(</operator><name pos:start="13:13" pos:end="13:20">uint32_t</name><operator pos:start="13:21" pos:end="13:21">)</operator><name pos:start="13:22" pos:end="13:24">EAX</name><operator pos:start="13:25" pos:end="13:25">)</operator> <operator pos:start="13:27" pos:end="13:27">|</operator> <operator pos:start="13:29" pos:end="13:29">(</operator><operator pos:start="13:30" pos:end="13:30">(</operator><name pos:start="13:31" pos:end="13:38">uint64_t</name><operator pos:start="13:39" pos:end="13:39">)</operator><operator pos:start="13:40" pos:end="13:40">(</operator><operator pos:start="13:41" pos:end="13:41">(</operator><name pos:start="13:42" pos:end="13:49">uint32_t</name><operator pos:start="13:50" pos:end="13:50">)</operator><name pos:start="13:51" pos:end="13:53">EDX</name><operator pos:start="13:54" pos:end="13:54">)</operator> <operator pos:start="13:56" pos:end="13:57">&lt;&lt;</operator> <literal type="number" pos:start="13:59" pos:end="13:60">32</literal><operator pos:start="13:61" pos:end="13:61">)</operator></expr>;</expr_stmt>



    <switch pos:start="17:5" pos:end="168:5">switch<condition pos:start="17:11" pos:end="17:25">(<expr pos:start="17:12" pos:end="17:24"><operator pos:start="17:12" pos:end="17:12">(</operator><name pos:start="17:13" pos:end="17:20">uint32_t</name><operator pos:start="17:21" pos:end="17:21">)</operator><name pos:start="17:22" pos:end="17:24">ECX</name></expr>)</condition> <block pos:start="17:27" pos:end="168:5">{<block_content pos:start="19:5" pos:end="163:12">

    <case pos:start="19:5" pos:end="19:30">case <expr pos:start="19:10" pos:end="19:29"><name pos:start="19:10" pos:end="19:29">MSR_IA32_SYSENTER_CS</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:40"><expr pos:start="21:9" pos:end="21:39"><name pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:11">env</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:24">sysenter_cs</name></name> <operator pos:start="21:26" pos:end="21:26">=</operator> <name pos:start="21:28" pos:end="21:30">val</name> <operator pos:start="21:32" pos:end="21:32">&amp;</operator> <literal type="number" pos:start="21:34" pos:end="21:39">0xffff</literal></expr>;</expr_stmt>


    <case pos:start="24:5" pos:end="24:31">case <expr pos:start="24:10" pos:end="24:30"><name pos:start="24:10" pos:end="24:30">MSR_IA32_SYSENTER_ESP</name></expr>:</case>

        <expr_stmt pos:start="26:9" pos:end="26:32"><expr pos:start="26:9" pos:end="26:31"><name pos:start="26:9" pos:end="26:25"><name pos:start="26:9" pos:end="26:11">env</name><operator pos:start="26:12" pos:end="26:13">-&gt;</operator><name pos:start="26:14" pos:end="26:25">sysenter_esp</name></name> <operator pos:start="26:27" pos:end="26:27">=</operator> <name pos:start="26:29" pos:end="26:31">val</name></expr>;</expr_stmt>


    <case pos:start="29:5" pos:end="29:31">case <expr pos:start="29:10" pos:end="29:30"><name pos:start="29:10" pos:end="29:30">MSR_IA32_SYSENTER_EIP</name></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:11">env</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:25">sysenter_eip</name></name> <operator pos:start="31:27" pos:end="31:27">=</operator> <name pos:start="31:29" pos:end="31:31">val</name></expr>;</expr_stmt>


    <case pos:start="34:5" pos:end="34:27">case <expr pos:start="34:10" pos:end="34:26"><name pos:start="34:10" pos:end="34:26">MSR_IA32_APICBASE</name></expr>:</case>

        <expr_stmt pos:start="36:9" pos:end="36:36"><expr pos:start="36:9" pos:end="36:35"><call pos:start="36:9" pos:end="36:35"><name pos:start="36:9" pos:end="36:25">cpu_set_apic_base</name><argument_list pos:start="36:26" pos:end="36:35">(<argument pos:start="36:27" pos:end="36:29"><expr pos:start="36:27" pos:end="36:29"><name pos:start="36:27" pos:end="36:29">env</name></expr></argument>, <argument pos:start="36:32" pos:end="36:34"><expr pos:start="36:32" pos:end="36:34"><name pos:start="36:32" pos:end="36:34">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <case pos:start="39:5" pos:end="39:18">case <expr pos:start="39:10" pos:end="39:17"><name pos:start="39:10" pos:end="39:17">MSR_EFER</name></expr>:</case>

        <block pos:start="41:9" pos:end="71:9">{<block_content pos:start="43:13" pos:end="69:47">

            <decl_stmt pos:start="43:13" pos:end="43:33"><decl pos:start="43:13" pos:end="43:32"><type pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:20">uint64_t</name></type> <name pos:start="43:22" pos:end="43:32">update_mask</name></decl>;</decl_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:28"><expr pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:23">update_mask</name> <operator pos:start="45:25" pos:end="45:25">=</operator> <literal type="number" pos:start="45:27" pos:end="45:27">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="47:13" pos:end="49:44"><if pos:start="47:13" pos:end="49:44">if <condition pos:start="47:16" pos:end="47:62">(<expr pos:start="47:17" pos:end="47:61"><name pos:start="47:17" pos:end="47:40"><name pos:start="47:17" pos:end="47:19">env</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:40">cpuid_ext2_features</name></name> <operator pos:start="47:42" pos:end="47:42">&amp;</operator> <name pos:start="47:44" pos:end="47:61">CPUID_EXT2_SYSCALL</name></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:44"><block_content pos:start="49:17" pos:end="49:44">

                <expr_stmt pos:start="49:17" pos:end="49:44"><expr pos:start="49:17" pos:end="49:43"><name pos:start="49:17" pos:end="49:27">update_mask</name> <operator pos:start="49:29" pos:end="49:30">|=</operator> <name pos:start="49:32" pos:end="49:43">MSR_EFER_SCE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="51:13" pos:end="53:44"><if pos:start="51:13" pos:end="53:44">if <condition pos:start="51:16" pos:end="51:57">(<expr pos:start="51:17" pos:end="51:56"><name pos:start="51:17" pos:end="51:40"><name pos:start="51:17" pos:end="51:19">env</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:40">cpuid_ext2_features</name></name> <operator pos:start="51:42" pos:end="51:42">&amp;</operator> <name pos:start="51:44" pos:end="51:56">CPUID_EXT2_LM</name></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:44"><block_content pos:start="53:17" pos:end="53:44">

                <expr_stmt pos:start="53:17" pos:end="53:44"><expr pos:start="53:17" pos:end="53:43"><name pos:start="53:17" pos:end="53:27">update_mask</name> <operator pos:start="53:29" pos:end="53:30">|=</operator> <name pos:start="53:32" pos:end="53:43">MSR_EFER_LME</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="55:13" pos:end="57:46"><if pos:start="55:13" pos:end="57:46">if <condition pos:start="55:16" pos:end="55:60">(<expr pos:start="55:17" pos:end="55:59"><name pos:start="55:17" pos:end="55:40"><name pos:start="55:17" pos:end="55:19">env</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:40">cpuid_ext2_features</name></name> <operator pos:start="55:42" pos:end="55:42">&amp;</operator> <name pos:start="55:44" pos:end="55:59">CPUID_EXT2_FFXSR</name></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:46"><block_content pos:start="57:17" pos:end="57:46">

                <expr_stmt pos:start="57:17" pos:end="57:46"><expr pos:start="57:17" pos:end="57:45"><name pos:start="57:17" pos:end="57:27">update_mask</name> <operator pos:start="57:29" pos:end="57:30">|=</operator> <name pos:start="57:32" pos:end="57:45">MSR_EFER_FFXSR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="59:13" pos:end="61:44"><if pos:start="59:13" pos:end="61:44">if <condition pos:start="59:16" pos:end="59:57">(<expr pos:start="59:17" pos:end="59:56"><name pos:start="59:17" pos:end="59:40"><name pos:start="59:17" pos:end="59:19">env</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:40">cpuid_ext2_features</name></name> <operator pos:start="59:42" pos:end="59:42">&amp;</operator> <name pos:start="59:44" pos:end="59:56">CPUID_EXT2_NX</name></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:44"><block_content pos:start="61:17" pos:end="61:44">

                <expr_stmt pos:start="61:17" pos:end="61:44"><expr pos:start="61:17" pos:end="61:43"><name pos:start="61:17" pos:end="61:27">update_mask</name> <operator pos:start="61:29" pos:end="61:30">|=</operator> <name pos:start="61:32" pos:end="61:43">MSR_EFER_NXE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="63:13" pos:end="65:45"><if pos:start="63:13" pos:end="65:45">if <condition pos:start="63:16" pos:end="63:58">(<expr pos:start="63:17" pos:end="63:57"><name pos:start="63:17" pos:end="63:40"><name pos:start="63:17" pos:end="63:19">env</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:40">cpuid_ext3_features</name></name> <operator pos:start="63:42" pos:end="63:42">&amp;</operator> <name pos:start="63:44" pos:end="63:57">CPUID_EXT3_SVM</name></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:45"><block_content pos:start="65:17" pos:end="65:45">

                <expr_stmt pos:start="65:17" pos:end="65:45"><expr pos:start="65:17" pos:end="65:44"><name pos:start="65:17" pos:end="65:27">update_mask</name> <operator pos:start="65:29" pos:end="65:30">|=</operator> <name pos:start="65:32" pos:end="65:44">MSR_EFER_SVME</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="67:13" pos:end="69:47"><expr pos:start="67:13" pos:end="69:46"><call pos:start="67:13" pos:end="69:46"><name pos:start="67:13" pos:end="67:25">cpu_load_efer</name><argument_list pos:start="67:26" pos:end="69:46">(<argument pos:start="67:27" pos:end="67:29"><expr pos:start="67:27" pos:end="67:29"><name pos:start="67:27" pos:end="67:29">env</name></expr></argument>, <argument pos:start="67:32" pos:end="69:45"><expr pos:start="67:32" pos:end="69:45"><operator pos:start="67:32" pos:end="67:32">(</operator><name pos:start="67:33" pos:end="67:41"><name pos:start="67:33" pos:end="67:35">env</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:41">efer</name></name> <operator pos:start="67:43" pos:end="67:43">&amp;</operator> <operator pos:start="67:45" pos:end="67:45">~</operator><name pos:start="67:46" pos:end="67:56">update_mask</name><operator pos:start="67:57" pos:end="67:57">)</operator> <operator pos:start="67:59" pos:end="67:59">|</operator>

                          <operator pos:start="69:27" pos:end="69:27">(</operator><name pos:start="69:28" pos:end="69:30">val</name> <operator pos:start="69:32" pos:end="69:32">&amp;</operator> <name pos:start="69:34" pos:end="69:44">update_mask</name><operator pos:start="69:45" pos:end="69:45">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>


    <case pos:start="74:5" pos:end="74:18">case <expr pos:start="74:10" pos:end="74:17"><name pos:start="74:10" pos:end="74:17">MSR_STAR</name></expr>:</case>

        <expr_stmt pos:start="76:9" pos:end="76:24"><expr pos:start="76:9" pos:end="76:23"><name pos:start="76:9" pos:end="76:17"><name pos:start="76:9" pos:end="76:11">env</name><operator pos:start="76:12" pos:end="76:13">-&gt;</operator><name pos:start="76:14" pos:end="76:17">star</name></name> <operator pos:start="76:19" pos:end="76:19">=</operator> <name pos:start="76:21" pos:end="76:23">val</name></expr>;</expr_stmt>


    <case pos:start="79:5" pos:end="79:17">case <expr pos:start="79:10" pos:end="79:16"><name pos:start="79:10" pos:end="79:16">MSR_PAT</name></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="81:23"><expr pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:16"><name pos:start="81:9" pos:end="81:11">env</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:16">pat</name></name> <operator pos:start="81:18" pos:end="81:18">=</operator> <name pos:start="81:20" pos:end="81:22">val</name></expr>;</expr_stmt>


    <case pos:start="84:5" pos:end="84:25">case <expr pos:start="84:10" pos:end="84:24"><name pos:start="84:10" pos:end="84:24">MSR_VM_HSAVE_PA</name></expr>:</case>

        <expr_stmt pos:start="86:9" pos:end="90:0"><expr pos:start="86:9" pos:end="86:27"><name pos:start="86:9" pos:end="86:21"><name pos:start="86:9" pos:end="86:11">env</name><operator pos:start="86:12" pos:end="86:13">-&gt;</operator><name pos:start="86:14" pos:end="86:21">vm_hsave</name></name> <operator pos:start="86:23" pos:end="86:23">=</operator> <name pos:start="86:25" pos:end="86:27">val</name></expr>;</expr_stmt>


<cpp:ifdef pos:start="89:1" pos:end="89:20">#<cpp:directive pos:start="89:2" pos:end="89:6">ifdef</cpp:directive> <name pos:start="89:8" pos:end="89:20">TARGET_X86_64</name></cpp:ifdef>

    <case pos:start="91:5" pos:end="91:19">case <expr pos:start="91:10" pos:end="91:18"><name pos:start="91:10" pos:end="91:18">MSR_LSTAR</name></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:25"><expr pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:18"><name pos:start="93:9" pos:end="93:11">env</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:18">lstar</name></name> <operator pos:start="93:20" pos:end="93:20">=</operator> <name pos:start="93:22" pos:end="93:24">val</name></expr>;</expr_stmt>


    <case pos:start="96:5" pos:end="96:19">case <expr pos:start="96:10" pos:end="96:18"><name pos:start="96:10" pos:end="96:18">MSR_CSTAR</name></expr>:</case>

        <expr_stmt pos:start="98:9" pos:end="98:25"><expr pos:start="98:9" pos:end="98:24"><name pos:start="98:9" pos:end="98:18"><name pos:start="98:9" pos:end="98:11">env</name><operator pos:start="98:12" pos:end="98:13">-&gt;</operator><name pos:start="98:14" pos:end="98:18">cstar</name></name> <operator pos:start="98:20" pos:end="98:20">=</operator> <name pos:start="98:22" pos:end="98:24">val</name></expr>;</expr_stmt>


    <case pos:start="101:5" pos:end="101:19">case <expr pos:start="101:10" pos:end="101:18"><name pos:start="101:10" pos:end="101:18">MSR_FMASK</name></expr>:</case>

        <expr_stmt pos:start="103:9" pos:end="103:25"><expr pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:18"><name pos:start="103:9" pos:end="103:11">env</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:18">fmask</name></name> <operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:24">val</name></expr>;</expr_stmt>


    <case pos:start="106:5" pos:end="106:20">case <expr pos:start="106:10" pos:end="106:19"><name pos:start="106:10" pos:end="106:19">MSR_FSBASE</name></expr>:</case>

        <expr_stmt pos:start="108:9" pos:end="108:35"><expr pos:start="108:9" pos:end="108:34"><name pos:start="108:9" pos:end="108:23"><name pos:start="108:9" pos:end="108:11">env</name><operator pos:start="108:12" pos:end="108:13">-&gt;</operator><name pos:start="108:14" pos:end="108:17">segs</name><index pos:start="108:18" pos:end="108:23">[<expr pos:start="108:19" pos:end="108:22"><name pos:start="108:19" pos:end="108:22">R_FS</name></expr>]</index></name><operator pos:start="108:24" pos:end="108:24">.</operator><name pos:start="108:25" pos:end="108:28">base</name> <operator pos:start="108:30" pos:end="108:30">=</operator> <name pos:start="108:32" pos:end="108:34">val</name></expr>;</expr_stmt>


    <case pos:start="111:5" pos:end="111:20">case <expr pos:start="111:10" pos:end="111:19"><name pos:start="111:10" pos:end="111:19">MSR_GSBASE</name></expr>:</case>

        <expr_stmt pos:start="113:9" pos:end="113:35"><expr pos:start="113:9" pos:end="113:34"><name pos:start="113:9" pos:end="113:23"><name pos:start="113:9" pos:end="113:11">env</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:17">segs</name><index pos:start="113:18" pos:end="113:23">[<expr pos:start="113:19" pos:end="113:22"><name pos:start="113:19" pos:end="113:22">R_GS</name></expr>]</index></name><operator pos:start="113:24" pos:end="113:24">.</operator><name pos:start="113:25" pos:end="113:28">base</name> <operator pos:start="113:30" pos:end="113:30">=</operator> <name pos:start="113:32" pos:end="113:34">val</name></expr>;</expr_stmt>


    <case pos:start="116:5" pos:end="116:26">case <expr pos:start="116:10" pos:end="116:25"><name pos:start="116:10" pos:end="116:25">MSR_KERNELGSBASE</name></expr>:</case>

        <expr_stmt pos:start="118:9" pos:end="122:0"><expr pos:start="118:9" pos:end="118:31"><name pos:start="118:9" pos:end="118:25"><name pos:start="118:9" pos:end="118:11">env</name><operator pos:start="118:12" pos:end="118:13">-&gt;</operator><name pos:start="118:14" pos:end="118:25">kernelgsbase</name></name> <operator pos:start="118:27" pos:end="118:27">=</operator> <name pos:start="118:29" pos:end="118:31">val</name></expr>;</expr_stmt>


<cpp:endif pos:start="121:1" pos:end="121:6">#<cpp:directive pos:start="121:2" pos:end="121:6">endif</cpp:directive></cpp:endif>









































    <default pos:start="163:5" pos:end="163:12">default:</default>

        <comment type="block" pos:start="165:9" pos:end="165:30">/* XXX: exception ? */</comment>


    </block_content>}</block></switch>

</block_content>}</block></function></unit>
