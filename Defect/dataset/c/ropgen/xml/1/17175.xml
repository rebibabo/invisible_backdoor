<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17175.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:10">ram_addr_t</name></type> <name pos:start="1:12" pos:end="1:48">migration_bitmap_find_and_reset_dirty</name><parameter_list pos:start="1:49" pos:end="3:66">(<parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:57">RAMBlock</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">rb</name></decl></parameter>,

                                                 <parameter pos:start="3:50" pos:end="3:65"><decl pos:start="3:50" pos:end="3:65"><type pos:start="3:50" pos:end="3:65"><name pos:start="3:50" pos:end="3:59">ram_addr_t</name></type> <name pos:start="3:61" pos:end="3:65">start</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:45">

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:55"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">long</name></type> <name pos:start="7:19" pos:end="7:22">base</name> <init pos:start="7:24" pos:end="7:55">= <expr pos:start="7:26" pos:end="7:55"><name pos:start="7:26" pos:end="7:35"><name pos:start="7:26" pos:end="7:27">rb</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:35">offset</name></name> <operator pos:start="7:37" pos:end="7:38">&gt;&gt;</operator> <name pos:start="7:40" pos:end="7:55">TARGET_PAGE_BITS</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:58"><decl pos:start="9:5" pos:end="9:57"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">long</name></type> <name pos:start="9:19" pos:end="9:20">nr</name> <init pos:start="9:22" pos:end="9:57">= <expr pos:start="9:24" pos:end="9:57"><name pos:start="9:24" pos:end="9:27">base</name> <operator pos:start="9:29" pos:end="9:29">+</operator> <operator pos:start="9:31" pos:end="9:31">(</operator><name pos:start="9:32" pos:end="9:36">start</name> <operator pos:start="9:38" pos:end="9:39">&gt;&gt;</operator> <name pos:start="9:41" pos:end="9:56">TARGET_PAGE_BITS</name><operator pos:start="9:57" pos:end="9:57">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:20">rb_size</name> <init pos:start="11:22" pos:end="11:38">= <expr pos:start="11:24" pos:end="11:38"><name pos:start="11:24" pos:end="11:38"><name pos:start="11:24" pos:end="11:25">rb</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:38">used_length</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:62"><decl pos:start="13:5" pos:end="13:61"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">long</name></type> <name pos:start="13:19" pos:end="13:22">size</name> <init pos:start="13:24" pos:end="13:61">= <expr pos:start="13:26" pos:end="13:61"><name pos:start="13:26" pos:end="13:29">base</name> <operator pos:start="13:31" pos:end="13:31">+</operator> <operator pos:start="13:33" pos:end="13:33">(</operator><name pos:start="13:34" pos:end="13:40">rb_size</name> <operator pos:start="13:42" pos:end="13:43">&gt;&gt;</operator> <name pos:start="13:45" pos:end="13:60">TARGET_PAGE_BITS</name><operator pos:start="13:61" pos:end="13:61">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:17">long</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:25">bitmap</name></decl>;</decl_stmt>



    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:17">long</name></type> <name pos:start="19:19" pos:end="19:22">next</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:48"><expr pos:start="23:5" pos:end="23:47"><name pos:start="23:5" pos:end="23:10">bitmap</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <call pos:start="23:14" pos:end="23:47"><name pos:start="23:14" pos:end="23:28">atomic_rcu_read</name><argument_list pos:start="23:29" pos:end="23:47">(<argument pos:start="23:30" pos:end="23:46"><expr pos:start="23:30" pos:end="23:46"><operator pos:start="23:30" pos:end="23:30">&amp;</operator><name pos:start="23:31" pos:end="23:46">migration_bitmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:36">(<expr pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:22">ram_bulk_stage</name> <operator pos:start="25:24" pos:end="25:25">&amp;&amp;</operator> <name pos:start="25:27" pos:end="25:28">nr</name> <operator pos:start="25:30" pos:end="25:30">&gt;</operator> <name pos:start="25:32" pos:end="25:35">base</name></expr>)</condition> <block pos:start="25:38" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:22">

        <expr_stmt pos:start="27:9" pos:end="27:22"><expr pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:12">next</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:17">nr</name> <operator pos:start="27:19" pos:end="27:19">+</operator> <literal type="number" pos:start="27:21" pos:end="27:21">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="33:5">else <block pos:start="29:12" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:47">

        <expr_stmt pos:start="31:9" pos:end="31:47"><expr pos:start="31:9" pos:end="31:46"><name pos:start="31:9" pos:end="31:12">next</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:46"><name pos:start="31:16" pos:end="31:28">find_next_bit</name><argument_list pos:start="31:29" pos:end="31:46">(<argument pos:start="31:30" pos:end="31:35"><expr pos:start="31:30" pos:end="31:35"><name pos:start="31:30" pos:end="31:35">bitmap</name></expr></argument>, <argument pos:start="31:38" pos:end="31:41"><expr pos:start="31:38" pos:end="31:41"><name pos:start="31:38" pos:end="31:41">size</name></expr></argument>, <argument pos:start="31:44" pos:end="31:45"><expr pos:start="31:44" pos:end="31:45"><name pos:start="31:44" pos:end="31:45">nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:20">(<expr pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:12">next</name> <operator pos:start="37:14" pos:end="37:14">&lt;</operator> <name pos:start="37:16" pos:end="37:19">size</name></expr>)</condition> <block pos:start="37:22" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:32">

        <expr_stmt pos:start="39:9" pos:end="39:32"><expr pos:start="39:9" pos:end="39:31"><call pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:17">clear_bit</name><argument_list pos:start="39:18" pos:end="39:31">(<argument pos:start="39:19" pos:end="39:22"><expr pos:start="39:19" pos:end="39:22"><name pos:start="39:19" pos:end="39:22">next</name></expr></argument>, <argument pos:start="39:25" pos:end="39:30"><expr pos:start="39:25" pos:end="39:30"><name pos:start="39:25" pos:end="39:30">bitmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:32"><expr pos:start="41:9" pos:end="41:31"><name pos:start="41:9" pos:end="41:29">migration_dirty_pages</name><operator pos:start="41:30" pos:end="41:31">--</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="45:5" pos:end="45:45">return <expr pos:start="45:12" pos:end="45:44"><operator pos:start="45:12" pos:end="45:12">(</operator><name pos:start="45:13" pos:end="45:16">next</name> <operator pos:start="45:18" pos:end="45:18">-</operator> <name pos:start="45:20" pos:end="45:23">base</name><operator pos:start="45:24" pos:end="45:24">)</operator> <operator pos:start="45:26" pos:end="45:27">&lt;&lt;</operator> <name pos:start="45:29" pos:end="45:44">TARGET_PAGE_BITS</name></expr>;</return>

</block_content>}</block></function>
</unit>
