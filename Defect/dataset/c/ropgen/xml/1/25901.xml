<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25901.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">mxf_read_index_table_segment</name><parameter_list pos:start="1:40" pos:end="1:98">(<parameter pos:start="1:41" pos:end="1:69"><decl pos:start="1:41" pos:end="1:69"><type pos:start="1:41" pos:end="1:69"><name pos:start="1:41" pos:end="1:60">MXFIndexTableSegment</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:69">segment</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:88"><decl pos:start="1:72" pos:end="1:88"><type pos:start="1:72" pos:end="1:88"><name pos:start="1:72" pos:end="1:84">ByteIOContext</name> <modifier pos:start="1:86" pos:end="1:86">*</modifier></type><name pos:start="1:87" pos:end="1:88">pb</name></decl></parameter>, <parameter pos:start="1:91" pos:end="1:97"><decl pos:start="1:91" pos:end="1:97"><type pos:start="1:91" pos:end="1:97"><name pos:start="1:91" pos:end="1:93">int</name></type> <name pos:start="1:95" pos:end="1:97">tag</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:13">

    <switch pos:start="5:5" pos:end="19:5">switch<condition pos:start="5:11" pos:end="5:15">(<expr pos:start="5:12" pos:end="5:14"><name pos:start="5:12" pos:end="5:14">tag</name></expr>)</condition> <block pos:start="5:17" pos:end="19:5">{<block_content pos:start="7:5" pos:end="17:76">

    <case pos:start="7:5" pos:end="7:16">case <expr pos:start="7:10" pos:end="7:15"><literal type="number" pos:start="7:10" pos:end="7:15">0x3F05</literal></expr>:</case> <expr_stmt pos:start="7:18" pos:end="7:71"><expr pos:start="7:18" pos:end="7:70"><call pos:start="7:18" pos:end="7:70"><name pos:start="7:18" pos:end="7:24">dprintf</name><argument_list pos:start="7:25" pos:end="7:70">(<argument pos:start="7:26" pos:end="7:29"><expr pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:29">NULL</name></expr></argument>, <argument pos:start="7:32" pos:end="7:55"><expr pos:start="7:32" pos:end="7:55"><literal type="string" pos:start="7:32" pos:end="7:55">"EditUnitByteCount %d\n"</literal></expr></argument>, <argument pos:start="7:58" pos:end="7:69"><expr pos:start="7:58" pos:end="7:69"><call pos:start="7:58" pos:end="7:69"><name pos:start="7:58" pos:end="7:65">get_be32</name><argument_list pos:start="7:66" pos:end="7:69">(<argument pos:start="7:67" pos:end="7:68"><expr pos:start="7:67" pos:end="7:68"><name pos:start="7:67" pos:end="7:68">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="7:73" pos:end="7:78">break;</break>

    <case pos:start="9:5" pos:end="9:16">case <expr pos:start="9:10" pos:end="9:15"><literal type="number" pos:start="9:10" pos:end="9:15">0x3F06</literal></expr>:</case> <expr_stmt pos:start="9:18" pos:end="9:62"><expr pos:start="9:18" pos:end="9:61"><call pos:start="9:18" pos:end="9:61"><name pos:start="9:18" pos:end="9:24">dprintf</name><argument_list pos:start="9:25" pos:end="9:61">(<argument pos:start="9:26" pos:end="9:29"><expr pos:start="9:26" pos:end="9:29"><name pos:start="9:26" pos:end="9:29">NULL</name></expr></argument>, <argument pos:start="9:32" pos:end="9:46"><expr pos:start="9:32" pos:end="9:46"><literal type="string" pos:start="9:32" pos:end="9:46">"IndexSID %d\n"</literal></expr></argument>, <argument pos:start="9:49" pos:end="9:60"><expr pos:start="9:49" pos:end="9:60"><call pos:start="9:49" pos:end="9:60"><name pos:start="9:49" pos:end="9:56">get_be32</name><argument_list pos:start="9:57" pos:end="9:60">(<argument pos:start="9:58" pos:end="9:59"><expr pos:start="9:58" pos:end="9:59"><name pos:start="9:58" pos:end="9:59">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="9:64" pos:end="9:69">break;</break>

    <case pos:start="11:5" pos:end="11:16">case <expr pos:start="11:10" pos:end="11:15"><literal type="number" pos:start="11:10" pos:end="11:15">0x3F07</literal></expr>:</case> <expr_stmt pos:start="11:18" pos:end="11:61"><expr pos:start="11:18" pos:end="11:60"><call pos:start="11:18" pos:end="11:60"><name pos:start="11:18" pos:end="11:24">dprintf</name><argument_list pos:start="11:25" pos:end="11:60">(<argument pos:start="11:26" pos:end="11:29"><expr pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:29">NULL</name></expr></argument>, <argument pos:start="11:32" pos:end="11:45"><expr pos:start="11:32" pos:end="11:45"><literal type="string" pos:start="11:32" pos:end="11:45">"BodySID %d\n"</literal></expr></argument>, <argument pos:start="11:48" pos:end="11:59"><expr pos:start="11:48" pos:end="11:59"><call pos:start="11:48" pos:end="11:59"><name pos:start="11:48" pos:end="11:55">get_be32</name><argument_list pos:start="11:56" pos:end="11:59">(<argument pos:start="11:57" pos:end="11:58"><expr pos:start="11:57" pos:end="11:58"><name pos:start="11:57" pos:end="11:58">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="11:63" pos:end="11:68">break;</break>

    <case pos:start="13:5" pos:end="13:16">case <expr pos:start="13:10" pos:end="13:15"><literal type="number" pos:start="13:10" pos:end="13:15">0x3F0B</literal></expr>:</case> <expr_stmt pos:start="13:18" pos:end="13:84"><expr pos:start="13:18" pos:end="13:83"><call pos:start="13:18" pos:end="13:83"><name pos:start="13:18" pos:end="13:24">dprintf</name><argument_list pos:start="13:25" pos:end="13:83">(<argument pos:start="13:26" pos:end="13:29"><expr pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:29">NULL</name></expr></argument>, <argument pos:start="13:32" pos:end="13:54"><expr pos:start="13:32" pos:end="13:54"><literal type="string" pos:start="13:32" pos:end="13:54">"IndexEditRate %d/%d\n"</literal></expr></argument>, <argument pos:start="13:57" pos:end="13:68"><expr pos:start="13:57" pos:end="13:68"><call pos:start="13:57" pos:end="13:68"><name pos:start="13:57" pos:end="13:64">get_be32</name><argument_list pos:start="13:65" pos:end="13:68">(<argument pos:start="13:66" pos:end="13:67"><expr pos:start="13:66" pos:end="13:67"><name pos:start="13:66" pos:end="13:67">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:71" pos:end="13:82"><expr pos:start="13:71" pos:end="13:82"><call pos:start="13:71" pos:end="13:82"><name pos:start="13:71" pos:end="13:78">get_be32</name><argument_list pos:start="13:79" pos:end="13:82">(<argument pos:start="13:80" pos:end="13:81"><expr pos:start="13:80" pos:end="13:81"><name pos:start="13:80" pos:end="13:81">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="13:86" pos:end="13:91">break;</break>

    <case pos:start="15:5" pos:end="15:16">case <expr pos:start="15:10" pos:end="15:15"><literal type="number" pos:start="15:10" pos:end="15:15">0x3F0C</literal></expr>:</case> <expr_stmt pos:start="15:18" pos:end="15:74"><expr pos:start="15:18" pos:end="15:73"><call pos:start="15:18" pos:end="15:73"><name pos:start="15:18" pos:end="15:24">dprintf</name><argument_list pos:start="15:25" pos:end="15:73">(<argument pos:start="15:26" pos:end="15:29"><expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">NULL</name></expr></argument>, <argument pos:start="15:32" pos:end="15:58"><expr pos:start="15:32" pos:end="15:58"><literal type="string" pos:start="15:32" pos:end="15:58">"IndexStartPosition %lld\n"</literal></expr></argument>, <argument pos:start="15:61" pos:end="15:72"><expr pos:start="15:61" pos:end="15:72"><call pos:start="15:61" pos:end="15:72"><name pos:start="15:61" pos:end="15:68">get_be64</name><argument_list pos:start="15:69" pos:end="15:72">(<argument pos:start="15:70" pos:end="15:71"><expr pos:start="15:70" pos:end="15:71"><name pos:start="15:70" pos:end="15:71">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="15:76" pos:end="15:81">break;</break>

    <case pos:start="17:5" pos:end="17:16">case <expr pos:start="17:10" pos:end="17:15"><literal type="number" pos:start="17:10" pos:end="17:15">0x3F0D</literal></expr>:</case> <expr_stmt pos:start="17:18" pos:end="17:69"><expr pos:start="17:18" pos:end="17:68"><call pos:start="17:18" pos:end="17:68"><name pos:start="17:18" pos:end="17:24">dprintf</name><argument_list pos:start="17:25" pos:end="17:68">(<argument pos:start="17:26" pos:end="17:29"><expr pos:start="17:26" pos:end="17:29"><name pos:start="17:26" pos:end="17:29">NULL</name></expr></argument>, <argument pos:start="17:32" pos:end="17:53"><expr pos:start="17:32" pos:end="17:53"><literal type="string" pos:start="17:32" pos:end="17:53">"IndexDuration %lld\n"</literal></expr></argument>, <argument pos:start="17:56" pos:end="17:67"><expr pos:start="17:56" pos:end="17:67"><call pos:start="17:56" pos:end="17:67"><name pos:start="17:56" pos:end="17:63">get_be64</name><argument_list pos:start="17:64" pos:end="17:67">(<argument pos:start="17:65" pos:end="17:66"><expr pos:start="17:65" pos:end="17:66"><name pos:start="17:65" pos:end="17:66">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="17:71" pos:end="17:76">break;</break>

    </block_content>}</block></switch>

    <return pos:start="21:5" pos:end="21:13">return <expr pos:start="21:12" pos:end="21:12"><literal type="number" pos:start="21:12" pos:end="21:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
