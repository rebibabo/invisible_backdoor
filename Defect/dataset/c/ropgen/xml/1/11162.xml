<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11162.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">av_fast_malloc</name><parameter_list pos:start="1:20" pos:end="1:67">(<parameter pos:start="1:21" pos:end="1:29"><decl pos:start="1:21" pos:end="1:29"><type pos:start="1:21" pos:end="1:29"><name pos:start="1:21" pos:end="1:24">void</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:29">ptr</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:39">unsigned</name> <name pos:start="1:41" pos:end="1:43">int</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">size</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:66"><decl pos:start="1:52" pos:end="1:66"><type pos:start="1:52" pos:end="1:66"><name pos:start="1:52" pos:end="1:57">size_t</name></type> <name pos:start="1:59" pos:end="1:66">min_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:20">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:8">void</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier><modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:12">p</name> <init pos:start="5:14" pos:end="5:18">= <expr pos:start="5:16" pos:end="5:18"><name pos:start="5:16" pos:end="5:18">ptr</name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="9:15"><if pos:start="7:5" pos:end="9:15">if <condition pos:start="7:8" pos:end="7:25">(<expr pos:start="7:9" pos:end="7:24"><name pos:start="7:9" pos:end="7:16">min_size</name> <operator pos:start="7:18" pos:end="7:18">&lt;</operator> <operator pos:start="7:20" pos:end="7:20">*</operator><name pos:start="7:21" pos:end="7:24">size</name></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:15"><block_content pos:start="9:9" pos:end="9:15">

        <return pos:start="9:9" pos:end="9:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:51"><expr pos:start="11:5" pos:end="11:50"><name pos:start="11:5" pos:end="11:12">min_size</name><operator pos:start="11:13" pos:end="11:13">=</operator> <call pos:start="11:15" pos:end="11:50"><name pos:start="11:15" pos:end="11:19">FFMAX</name><argument_list pos:start="11:20" pos:end="11:50">(<argument pos:start="11:21" pos:end="11:39"><expr pos:start="11:21" pos:end="11:39"><literal type="number" pos:start="11:21" pos:end="11:22">17</literal><operator pos:start="11:23" pos:end="11:23">*</operator><name pos:start="11:24" pos:end="11:31">min_size</name><operator pos:start="11:32" pos:end="11:32">/</operator><literal type="number" pos:start="11:33" pos:end="11:36">16</literal> <operator pos:start="11:36" pos:end="11:36">+</operator> <literal type="number" pos:start="11:38" pos:end="11:39">32</literal></expr></argument>, <argument pos:start="11:42" pos:end="11:49"><expr pos:start="11:42" pos:end="11:49"><name pos:start="11:42" pos:end="11:49">min_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:16"><expr pos:start="13:5" pos:end="13:15"><call pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:11">av_free</name><argument_list pos:start="13:12" pos:end="13:15">(<argument pos:start="13:13" pos:end="13:14"><expr pos:start="13:13" pos:end="13:14"><operator pos:start="13:13" pos:end="13:13">*</operator><name pos:start="13:14" pos:end="13:14">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><operator pos:start="15:5" pos:end="15:5">*</operator><name pos:start="15:6" pos:end="15:6">p</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <call pos:start="15:10" pos:end="15:28"><name pos:start="15:10" pos:end="15:18">av_malloc</name><argument_list pos:start="15:19" pos:end="15:28">(<argument pos:start="15:20" pos:end="15:27"><expr pos:start="15:20" pos:end="15:27"><name pos:start="15:20" pos:end="15:27">min_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="17:26"><if pos:start="17:5" pos:end="17:26">if <condition pos:start="17:8" pos:end="17:12">(<expr pos:start="17:9" pos:end="17:11"><operator pos:start="17:9" pos:end="17:9">!</operator><operator pos:start="17:10" pos:end="17:10">*</operator><name pos:start="17:11" pos:end="17:11">p</name></expr>)</condition><block type="pseudo" pos:start="17:14" pos:end="17:26"><block_content pos:start="17:14" pos:end="17:26"> <expr_stmt pos:start="17:14" pos:end="17:26"><expr pos:start="17:14" pos:end="17:25"><name pos:start="17:14" pos:end="17:21">min_size</name> <operator pos:start="17:23" pos:end="17:23">=</operator> <literal type="number" pos:start="17:25" pos:end="17:25">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:20"><expr pos:start="19:5" pos:end="19:19"><operator pos:start="19:5" pos:end="19:5">*</operator><name pos:start="19:6" pos:end="19:9">size</name><operator pos:start="19:10" pos:end="19:10">=</operator> <name pos:start="19:12" pos:end="19:19">min_size</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
