<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3099.c" pos:tabs="8"><macro pos:start="1:1" pos:end="11:54"><name pos:start="1:1" pos:end="1:21">yuv2yuvX16_c_template</name><argument_list pos:start="1:22" pos:end="11:54">(<argument pos:start="1:23" pos:end="1:46">const int16_t *lumFilter</argument>, <argument pos:start="1:49" pos:end="1:70">const int32_t **lumSrc</argument>,

                      <argument pos:start="3:23" pos:end="3:39">int lumFilterSize</argument>, <argument pos:start="3:42" pos:end="3:65">const int16_t *chrFilter</argument>,

                      <argument pos:start="5:23" pos:end="5:45">const int32_t **chrUSrc</argument>, <argument pos:start="5:48" pos:end="5:70">const int32_t **chrVSrc</argument>,

                      <argument pos:start="7:23" pos:end="7:39">int chrFilterSize</argument>, <argument pos:start="7:42" pos:end="7:63">const int32_t **alpSrc</argument>,

                      <argument pos:start="9:23" pos:end="9:39">uint16_t *dest[<literal type="number" pos:start="9:38" pos:end="9:38">4</literal>]</argument>, <argument pos:start="9:42" pos:end="9:49">int dstW</argument>, <argument pos:start="9:52" pos:end="9:62">int chrDstW</argument>,

                      <argument pos:start="11:23" pos:end="11:36">int big_endian</argument>, <argument pos:start="11:39" pos:end="11:53">int output_bits</argument>)</argument_list></macro>

<block pos:start="13:1" pos:end="133:1">{<block_content pos:start="17:5" pos:end="132:0">

    <comment type="line" pos:start="15:5" pos:end="15:59">//FIXME Optimize (just quickly written not optimized..)</comment>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:33"><decl pos:start="19:5" pos:end="19:32"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:13">dword</name><init pos:start="19:14" pos:end="19:32">= <expr pos:start="19:16" pos:end="19:32"><name pos:start="19:16" pos:end="19:26">output_bits</name> <operator pos:start="19:28" pos:end="19:29">==</operator> <literal type="number" pos:start="19:31" pos:end="19:32">16</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="23:60"><decl pos:start="21:5" pos:end="21:29"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:12">uint16_t</name> <modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:19">yDest</name> <init pos:start="21:21" pos:end="21:29">= <expr pos:start="21:23" pos:end="21:29"><name pos:start="21:23" pos:end="21:29"><name pos:start="21:23" pos:end="21:26">dest</name><index pos:start="21:27" pos:end="21:29">[<expr pos:start="21:28" pos:end="21:28"><literal type="number" pos:start="21:28" pos:end="21:28">0</literal></expr>]</index></name></expr></init></decl>, <decl pos:start="21:32" pos:end="21:47"><type ref="prev" pos:start="21:5" pos:end="21:14"><modifier pos:start="21:32" pos:end="21:32">*</modifier></type><name pos:start="21:33" pos:end="21:37">uDest</name> <init pos:start="21:39" pos:end="21:47">= <expr pos:start="21:41" pos:end="21:47"><name pos:start="21:41" pos:end="21:47"><name pos:start="21:41" pos:end="21:44">dest</name><index pos:start="21:45" pos:end="21:47">[<expr pos:start="21:46" pos:end="21:46"><literal type="number" pos:start="21:46" pos:end="21:46">1</literal></expr>]</index></name></expr></init></decl>, <decl pos:start="21:50" pos:end="21:65"><type ref="prev" pos:start="21:5" pos:end="21:14"><modifier pos:start="21:50" pos:end="21:50">*</modifier></type><name pos:start="21:51" pos:end="21:55">vDest</name> <init pos:start="21:57" pos:end="21:65">= <expr pos:start="21:59" pos:end="21:65"><name pos:start="21:59" pos:end="21:65"><name pos:start="21:59" pos:end="21:62">dest</name><index pos:start="21:63" pos:end="21:65">[<expr pos:start="21:64" pos:end="21:64"><literal type="number" pos:start="21:64" pos:end="21:64">2</literal></expr>]</index></name></expr></init></decl>,

             <decl pos:start="23:14" pos:end="23:59"><type ref="prev" pos:start="21:5" pos:end="21:14"><modifier pos:start="23:14" pos:end="23:14">*</modifier></type><name pos:start="23:15" pos:end="23:19">aDest</name> <init pos:start="23:21" pos:end="23:59">= <expr pos:start="23:23" pos:end="23:59"><ternary pos:start="23:23" pos:end="23:59"><condition pos:start="23:23" pos:end="23:44"><expr pos:start="23:23" pos:end="23:42"><name pos:start="23:23" pos:end="23:42">CONFIG_SWSCALE_ALPHA</name></expr> ?</condition><then pos:start="23:46" pos:end="23:52"> <expr pos:start="23:46" pos:end="23:52"><name pos:start="23:46" pos:end="23:52"><name pos:start="23:46" pos:end="23:49">dest</name><index pos:start="23:50" pos:end="23:52">[<expr pos:start="23:51" pos:end="23:51"><literal type="number" pos:start="23:51" pos:end="23:51">3</literal></expr>]</index></name></expr> </then><else pos:start="23:54" pos:end="23:59">: <expr pos:start="23:56" pos:end="23:59"><name pos:start="23:56" pos:end="23:59">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="56:0"><decl pos:start="25:5" pos:end="25:47"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:13">shift</name> <init pos:start="25:15" pos:end="25:47">= <expr pos:start="25:17" pos:end="25:47"><literal type="number" pos:start="25:17" pos:end="25:20">11</literal> <operator pos:start="25:20" pos:end="25:20">+</operator> <literal type="number" pos:start="25:22" pos:end="25:22">4</literal><operator pos:start="25:23" pos:end="25:23">*</operator><name pos:start="25:24" pos:end="25:28">dword</name> <operator pos:start="25:30" pos:end="25:30">+</operator> <literal type="number" pos:start="25:32" pos:end="25:35">16</literal> <operator pos:start="25:35" pos:end="25:35">-</operator> <name pos:start="25:37" pos:end="25:47">output_bits</name></expr></init></decl>;</decl_stmt>



<cpp:define pos:start="29:1" pos:end="55:5">#<cpp:directive pos:start="29:2" pos:end="29:7">define</cpp:directive> <cpp:macro pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:20">output_pixel</name><parameter_list pos:start="29:21" pos:end="29:30">(<parameter pos:start="29:22" pos:end="29:24"><type pos:start="29:22" pos:end="29:24"><name pos:start="29:22" pos:end="29:24">pos</name></type></parameter>, <parameter pos:start="29:27" pos:end="29:29"><type pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:29">val</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="31:5" pos:end="55:5">if (big_endian) { \

        if (output_bits == 16) { \

            AV_WB16(pos, av_clip_uint16(val &gt;&gt; shift)); \

        } else { \

            AV_WB16(pos, av_clip_uintp2(val &gt;&gt; shift, output_bits)); \

        } \

    } else { \

        if (output_bits == 16) { \

            AV_WL16(pos, av_clip_uint16(val &gt;&gt; shift)); \

        } else { \

            AV_WL16(pos, av_clip_uintp2(val &gt;&gt; shift, output_bits)); \

        } \

    }</cpp:value></cpp:define>

    <for pos:start="57:5" pos:end="73:5">for <control pos:start="57:9" pos:end="57:30">(<init pos:start="57:10" pos:end="57:15"><expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:10">i</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>;</init> <condition pos:start="57:17" pos:end="57:25"><expr pos:start="57:17" pos:end="57:24"><name pos:start="57:17" pos:end="57:17">i</name> <operator pos:start="57:19" pos:end="57:19">&lt;</operator> <name pos:start="57:21" pos:end="57:24">dstW</name></expr>;</condition> <incr pos:start="57:27" pos:end="57:29"><expr pos:start="57:27" pos:end="57:29"><name pos:start="57:27" pos:end="57:27">i</name><operator pos:start="57:28" pos:end="57:29">++</operator></expr></incr>)</control> <block pos:start="57:32" pos:end="73:5">{<block_content pos:start="59:9" pos:end="71:37">

        <decl_stmt pos:start="59:9" pos:end="59:50"><decl pos:start="59:9" pos:end="59:49"><type pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:11">int</name></type> <name pos:start="59:13" pos:end="59:15">val</name> <init pos:start="59:17" pos:end="59:49">= <expr pos:start="59:19" pos:end="59:49"><literal type="number" pos:start="59:19" pos:end="59:19">1</literal> <operator pos:start="59:21" pos:end="59:22">&lt;&lt;</operator> <operator pos:start="59:24" pos:end="59:24">(</operator><literal type="number" pos:start="59:25" pos:end="59:27">26</literal><operator pos:start="59:27" pos:end="59:27">-</operator><name pos:start="59:28" pos:end="59:38">output_bits</name> <operator pos:start="59:40" pos:end="59:40">+</operator> <literal type="number" pos:start="59:42" pos:end="59:42">4</literal><operator pos:start="59:43" pos:end="59:43">*</operator><name pos:start="59:44" pos:end="59:48">dword</name><operator pos:start="59:49" pos:end="59:49">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="61:9" pos:end="61:14"><decl pos:start="61:9" pos:end="61:13"><type pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">int</name></type> <name pos:start="61:13" pos:end="61:13">j</name></decl>;</decl_stmt>



        <for pos:start="65:9" pos:end="67:85">for <control pos:start="65:13" pos:end="65:43">(<init pos:start="65:14" pos:end="65:19"><expr pos:start="65:14" pos:end="65:18"><name pos:start="65:14" pos:end="65:14">j</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <literal type="number" pos:start="65:18" pos:end="65:18">0</literal></expr>;</init> <condition pos:start="65:21" pos:end="65:38"><expr pos:start="65:21" pos:end="65:37"><name pos:start="65:21" pos:end="65:21">j</name> <operator pos:start="65:23" pos:end="65:23">&lt;</operator> <name pos:start="65:25" pos:end="65:37">lumFilterSize</name></expr>;</condition> <incr pos:start="65:40" pos:end="65:42"><expr pos:start="65:40" pos:end="65:42"><name pos:start="65:40" pos:end="65:40">j</name><operator pos:start="65:41" pos:end="65:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="67:13" pos:end="67:85"><block_content pos:start="67:13" pos:end="67:85">

            <expr_stmt pos:start="67:13" pos:end="67:85"><expr pos:start="67:13" pos:end="67:84"><name pos:start="67:13" pos:end="67:15">val</name> <operator pos:start="67:17" pos:end="67:18">+=</operator> <operator pos:start="67:20" pos:end="67:20">(</operator><ternary pos:start="67:21" pos:end="67:68"><condition pos:start="67:21" pos:end="67:27"><expr pos:start="67:21" pos:end="67:25"><name pos:start="67:21" pos:end="67:25">dword</name></expr> ?</condition><then pos:start="67:29" pos:end="67:40"> <expr pos:start="67:29" pos:end="67:40"><name pos:start="67:29" pos:end="67:40"><name pos:start="67:29" pos:end="67:34">lumSrc</name><index pos:start="67:35" pos:end="67:37">[<expr pos:start="67:36" pos:end="67:36"><name pos:start="67:36" pos:end="67:36">j</name></expr>]</index><index pos:start="67:38" pos:end="67:40">[<expr pos:start="67:39" pos:end="67:39"><name pos:start="67:39" pos:end="67:39">i</name></expr>]</index></name></expr> </then><else pos:start="67:42" pos:end="67:68">: <expr pos:start="67:44" pos:end="67:68"><operator pos:start="67:44" pos:end="67:44">(</operator><operator pos:start="67:45" pos:end="67:45">(</operator><name pos:start="67:46" pos:end="67:52">int16_t</name><operator pos:start="67:53" pos:end="67:53">*</operator><operator pos:start="67:54" pos:end="67:54">*</operator><operator pos:start="67:55" pos:end="67:55">)</operator><name pos:start="67:56" pos:end="67:61">lumSrc</name><operator pos:start="67:62" pos:end="67:62">)</operator><index pos:start="67:63" pos:end="67:65">[<expr pos:start="67:64" pos:end="67:64"><name pos:start="67:64" pos:end="67:64">j</name></expr>]</index><index pos:start="67:66" pos:end="67:68">[<expr pos:start="67:67" pos:end="67:67"><name pos:start="67:67" pos:end="67:67">i</name></expr>]</index></expr></else></ternary><operator pos:start="67:69" pos:end="67:69">)</operator> <operator pos:start="67:71" pos:end="67:71">*</operator> <name pos:start="67:73" pos:end="67:84"><name pos:start="67:73" pos:end="67:81">lumFilter</name><index pos:start="67:82" pos:end="67:84">[<expr pos:start="67:83" pos:end="67:83"><name pos:start="67:83" pos:end="67:83">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="71:9" pos:end="71:37"><expr pos:start="71:9" pos:end="71:36"><call pos:start="71:9" pos:end="71:36"><name pos:start="71:9" pos:end="71:20">output_pixel</name><argument_list pos:start="71:21" pos:end="71:36">(<argument pos:start="71:22" pos:end="71:30"><expr pos:start="71:22" pos:end="71:30"><operator pos:start="71:22" pos:end="71:22">&amp;</operator><name pos:start="71:23" pos:end="71:30"><name pos:start="71:23" pos:end="71:27">yDest</name><index pos:start="71:28" pos:end="71:30">[<expr pos:start="71:29" pos:end="71:29"><name pos:start="71:29" pos:end="71:29">i</name></expr>]</index></name></expr></argument>, <argument pos:start="71:33" pos:end="71:35"><expr pos:start="71:33" pos:end="71:35"><name pos:start="71:33" pos:end="71:35">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="77:5" pos:end="105:5"><if pos:start="77:5" pos:end="105:5">if <condition pos:start="77:8" pos:end="77:14">(<expr pos:start="77:9" pos:end="77:13"><name pos:start="77:9" pos:end="77:13">uDest</name></expr>)</condition> <block pos:start="77:16" pos:end="105:5">{<block_content pos:start="79:9" pos:end="103:9">

        <for pos:start="79:9" pos:end="103:9">for <control pos:start="79:13" pos:end="79:37">(<init pos:start="79:14" pos:end="79:19"><expr pos:start="79:14" pos:end="79:18"><name pos:start="79:14" pos:end="79:14">i</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <literal type="number" pos:start="79:18" pos:end="79:18">0</literal></expr>;</init> <condition pos:start="79:21" pos:end="79:32"><expr pos:start="79:21" pos:end="79:31"><name pos:start="79:21" pos:end="79:21">i</name> <operator pos:start="79:23" pos:end="79:23">&lt;</operator> <name pos:start="79:25" pos:end="79:31">chrDstW</name></expr>;</condition> <incr pos:start="79:34" pos:end="79:36"><expr pos:start="79:34" pos:end="79:36"><name pos:start="79:34" pos:end="79:34">i</name><operator pos:start="79:35" pos:end="79:36">++</operator></expr></incr>)</control> <block pos:start="79:39" pos:end="103:9">{<block_content pos:start="81:13" pos:end="101:39">

            <decl_stmt pos:start="81:13" pos:end="81:52"><decl pos:start="81:13" pos:end="81:51"><type pos:start="81:13" pos:end="81:15"><name pos:start="81:13" pos:end="81:15">int</name></type> <name pos:start="81:17" pos:end="81:17">u</name> <init pos:start="81:19" pos:end="81:51">= <expr pos:start="81:21" pos:end="81:51"><literal type="number" pos:start="81:21" pos:end="81:21">1</literal> <operator pos:start="81:23" pos:end="81:24">&lt;&lt;</operator> <operator pos:start="81:26" pos:end="81:26">(</operator><literal type="number" pos:start="81:27" pos:end="81:29">26</literal><operator pos:start="81:29" pos:end="81:29">-</operator><name pos:start="81:30" pos:end="81:40">output_bits</name> <operator pos:start="81:42" pos:end="81:42">+</operator> <literal type="number" pos:start="81:44" pos:end="81:44">4</literal><operator pos:start="81:45" pos:end="81:45">*</operator><name pos:start="81:46" pos:end="81:50">dword</name><operator pos:start="81:51" pos:end="81:51">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="83:13" pos:end="83:52"><decl pos:start="83:13" pos:end="83:51"><type pos:start="83:13" pos:end="83:15"><name pos:start="83:13" pos:end="83:15">int</name></type> <name pos:start="83:17" pos:end="83:17">v</name> <init pos:start="83:19" pos:end="83:51">= <expr pos:start="83:21" pos:end="83:51"><literal type="number" pos:start="83:21" pos:end="83:21">1</literal> <operator pos:start="83:23" pos:end="83:24">&lt;&lt;</operator> <operator pos:start="83:26" pos:end="83:26">(</operator><literal type="number" pos:start="83:27" pos:end="83:29">26</literal><operator pos:start="83:29" pos:end="83:29">-</operator><name pos:start="83:30" pos:end="83:40">output_bits</name> <operator pos:start="83:42" pos:end="83:42">+</operator> <literal type="number" pos:start="83:44" pos:end="83:44">4</literal><operator pos:start="83:45" pos:end="83:45">*</operator><name pos:start="83:46" pos:end="83:50">dword</name><operator pos:start="83:51" pos:end="83:51">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="85:13" pos:end="85:18"><decl pos:start="85:13" pos:end="85:17"><type pos:start="85:13" pos:end="85:15"><name pos:start="85:13" pos:end="85:15">int</name></type> <name pos:start="85:17" pos:end="85:17">j</name></decl>;</decl_stmt>



            <for pos:start="89:13" pos:end="95:13">for <control pos:start="89:17" pos:end="89:47">(<init pos:start="89:18" pos:end="89:23"><expr pos:start="89:18" pos:end="89:22"><name pos:start="89:18" pos:end="89:18">j</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <literal type="number" pos:start="89:22" pos:end="89:22">0</literal></expr>;</init> <condition pos:start="89:25" pos:end="89:42"><expr pos:start="89:25" pos:end="89:41"><name pos:start="89:25" pos:end="89:25">j</name> <operator pos:start="89:27" pos:end="89:27">&lt;</operator> <name pos:start="89:29" pos:end="89:41">chrFilterSize</name></expr>;</condition> <incr pos:start="89:44" pos:end="89:46"><expr pos:start="89:44" pos:end="89:46"><name pos:start="89:44" pos:end="89:44">j</name><operator pos:start="89:45" pos:end="89:46">++</operator></expr></incr>)</control> <block pos:start="89:49" pos:end="95:13">{<block_content pos:start="91:17" pos:end="93:89">

                <expr_stmt pos:start="91:17" pos:end="91:89"><expr pos:start="91:17" pos:end="91:88"><name pos:start="91:17" pos:end="91:17">u</name> <operator pos:start="91:19" pos:end="91:20">+=</operator> <operator pos:start="91:22" pos:end="91:22">(</operator><ternary pos:start="91:23" pos:end="91:72"><condition pos:start="91:23" pos:end="91:29"><expr pos:start="91:23" pos:end="91:27"><name pos:start="91:23" pos:end="91:27">dword</name></expr> ?</condition><then pos:start="91:31" pos:end="91:43"> <expr pos:start="91:31" pos:end="91:43"><name pos:start="91:31" pos:end="91:43"><name pos:start="91:31" pos:end="91:37">chrUSrc</name><index pos:start="91:38" pos:end="91:40">[<expr pos:start="91:39" pos:end="91:39"><name pos:start="91:39" pos:end="91:39">j</name></expr>]</index><index pos:start="91:41" pos:end="91:43">[<expr pos:start="91:42" pos:end="91:42"><name pos:start="91:42" pos:end="91:42">i</name></expr>]</index></name></expr> </then><else pos:start="91:45" pos:end="91:72">: <expr pos:start="91:47" pos:end="91:72"><operator pos:start="91:47" pos:end="91:47">(</operator><operator pos:start="91:48" pos:end="91:48">(</operator><name pos:start="91:49" pos:end="91:55">int16_t</name><operator pos:start="91:56" pos:end="91:56">*</operator><operator pos:start="91:57" pos:end="91:57">*</operator><operator pos:start="91:58" pos:end="91:58">)</operator><name pos:start="91:59" pos:end="91:65">chrUSrc</name><operator pos:start="91:66" pos:end="91:66">)</operator><index pos:start="91:67" pos:end="91:69">[<expr pos:start="91:68" pos:end="91:68"><name pos:start="91:68" pos:end="91:68">j</name></expr>]</index><index pos:start="91:70" pos:end="91:72">[<expr pos:start="91:71" pos:end="91:71"><name pos:start="91:71" pos:end="91:71">i</name></expr>]</index></expr></else></ternary><operator pos:start="91:73" pos:end="91:73">)</operator> <operator pos:start="91:75" pos:end="91:75">*</operator> <name pos:start="91:77" pos:end="91:88"><name pos:start="91:77" pos:end="91:85">chrFilter</name><index pos:start="91:86" pos:end="91:88">[<expr pos:start="91:87" pos:end="91:87"><name pos:start="91:87" pos:end="91:87">j</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:89"><expr pos:start="93:17" pos:end="93:88"><name pos:start="93:17" pos:end="93:17">v</name> <operator pos:start="93:19" pos:end="93:20">+=</operator> <operator pos:start="93:22" pos:end="93:22">(</operator><ternary pos:start="93:23" pos:end="93:72"><condition pos:start="93:23" pos:end="93:29"><expr pos:start="93:23" pos:end="93:27"><name pos:start="93:23" pos:end="93:27">dword</name></expr> ?</condition><then pos:start="93:31" pos:end="93:43"> <expr pos:start="93:31" pos:end="93:43"><name pos:start="93:31" pos:end="93:43"><name pos:start="93:31" pos:end="93:37">chrVSrc</name><index pos:start="93:38" pos:end="93:40">[<expr pos:start="93:39" pos:end="93:39"><name pos:start="93:39" pos:end="93:39">j</name></expr>]</index><index pos:start="93:41" pos:end="93:43">[<expr pos:start="93:42" pos:end="93:42"><name pos:start="93:42" pos:end="93:42">i</name></expr>]</index></name></expr> </then><else pos:start="93:45" pos:end="93:72">: <expr pos:start="93:47" pos:end="93:72"><operator pos:start="93:47" pos:end="93:47">(</operator><operator pos:start="93:48" pos:end="93:48">(</operator><name pos:start="93:49" pos:end="93:55">int16_t</name><operator pos:start="93:56" pos:end="93:56">*</operator><operator pos:start="93:57" pos:end="93:57">*</operator><operator pos:start="93:58" pos:end="93:58">)</operator><name pos:start="93:59" pos:end="93:65">chrVSrc</name><operator pos:start="93:66" pos:end="93:66">)</operator><index pos:start="93:67" pos:end="93:69">[<expr pos:start="93:68" pos:end="93:68"><name pos:start="93:68" pos:end="93:68">j</name></expr>]</index><index pos:start="93:70" pos:end="93:72">[<expr pos:start="93:71" pos:end="93:71"><name pos:start="93:71" pos:end="93:71">i</name></expr>]</index></expr></else></ternary><operator pos:start="93:73" pos:end="93:73">)</operator> <operator pos:start="93:75" pos:end="93:75">*</operator> <name pos:start="93:77" pos:end="93:88"><name pos:start="93:77" pos:end="93:85">chrFilter</name><index pos:start="93:86" pos:end="93:88">[<expr pos:start="93:87" pos:end="93:87"><name pos:start="93:87" pos:end="93:87">j</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="99:13" pos:end="99:39"><expr pos:start="99:13" pos:end="99:38"><call pos:start="99:13" pos:end="99:38"><name pos:start="99:13" pos:end="99:24">output_pixel</name><argument_list pos:start="99:25" pos:end="99:38">(<argument pos:start="99:26" pos:end="99:34"><expr pos:start="99:26" pos:end="99:34"><operator pos:start="99:26" pos:end="99:26">&amp;</operator><name pos:start="99:27" pos:end="99:34"><name pos:start="99:27" pos:end="99:31">uDest</name><index pos:start="99:32" pos:end="99:34">[<expr pos:start="99:33" pos:end="99:33"><name pos:start="99:33" pos:end="99:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="99:37" pos:end="99:37"><expr pos:start="99:37" pos:end="99:37"><name pos:start="99:37" pos:end="99:37">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:39"><expr pos:start="101:13" pos:end="101:38"><call pos:start="101:13" pos:end="101:38"><name pos:start="101:13" pos:end="101:24">output_pixel</name><argument_list pos:start="101:25" pos:end="101:38">(<argument pos:start="101:26" pos:end="101:34"><expr pos:start="101:26" pos:end="101:34"><operator pos:start="101:26" pos:end="101:26">&amp;</operator><name pos:start="101:27" pos:end="101:34"><name pos:start="101:27" pos:end="101:31">vDest</name><index pos:start="101:32" pos:end="101:34">[<expr pos:start="101:33" pos:end="101:33"><name pos:start="101:33" pos:end="101:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="101:37" pos:end="101:37"><expr pos:start="101:37" pos:end="101:37"><name pos:start="101:37" pos:end="101:37">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="109:5" pos:end="132:0"><if pos:start="109:5" pos:end="132:0">if <condition pos:start="109:8" pos:end="109:38">(<expr pos:start="109:9" pos:end="109:37"><name pos:start="109:9" pos:end="109:28">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="109:30" pos:end="109:31">&amp;&amp;</operator> <name pos:start="109:33" pos:end="109:37">aDest</name></expr>)</condition> <block pos:start="109:40" pos:end="132:0">{<block_content pos:start="111:9" pos:end="127:9">

        <for pos:start="111:9" pos:end="127:9">for <control pos:start="111:13" pos:end="111:34">(<init pos:start="111:14" pos:end="111:19"><expr pos:start="111:14" pos:end="111:18"><name pos:start="111:14" pos:end="111:14">i</name> <operator pos:start="111:16" pos:end="111:16">=</operator> <literal type="number" pos:start="111:18" pos:end="111:18">0</literal></expr>;</init> <condition pos:start="111:21" pos:end="111:29"><expr pos:start="111:21" pos:end="111:28"><name pos:start="111:21" pos:end="111:21">i</name> <operator pos:start="111:23" pos:end="111:23">&lt;</operator> <name pos:start="111:25" pos:end="111:28">dstW</name></expr>;</condition> <incr pos:start="111:31" pos:end="111:33"><expr pos:start="111:31" pos:end="111:33"><name pos:start="111:31" pos:end="111:31">i</name><operator pos:start="111:32" pos:end="111:33">++</operator></expr></incr>)</control> <block pos:start="111:36" pos:end="127:9">{<block_content pos:start="113:13" pos:end="125:41">

            <decl_stmt pos:start="113:13" pos:end="113:54"><decl pos:start="113:13" pos:end="113:53"><type pos:start="113:13" pos:end="113:15"><name pos:start="113:13" pos:end="113:15">int</name></type> <name pos:start="113:17" pos:end="113:19">val</name> <init pos:start="113:21" pos:end="113:53">= <expr pos:start="113:23" pos:end="113:53"><literal type="number" pos:start="113:23" pos:end="113:23">1</literal> <operator pos:start="113:25" pos:end="113:26">&lt;&lt;</operator> <operator pos:start="113:28" pos:end="113:28">(</operator><literal type="number" pos:start="113:29" pos:end="113:31">26</literal><operator pos:start="113:31" pos:end="113:31">-</operator><name pos:start="113:32" pos:end="113:42">output_bits</name> <operator pos:start="113:44" pos:end="113:44">+</operator> <literal type="number" pos:start="113:46" pos:end="113:46">4</literal><operator pos:start="113:47" pos:end="113:47">*</operator><name pos:start="113:48" pos:end="113:52">dword</name><operator pos:start="113:53" pos:end="113:53">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="115:13" pos:end="115:18"><decl pos:start="115:13" pos:end="115:17"><type pos:start="115:13" pos:end="115:15"><name pos:start="115:13" pos:end="115:15">int</name></type> <name pos:start="115:17" pos:end="115:17">j</name></decl>;</decl_stmt>



            <for pos:start="119:13" pos:end="121:89">for <control pos:start="119:17" pos:end="119:47">(<init pos:start="119:18" pos:end="119:23"><expr pos:start="119:18" pos:end="119:22"><name pos:start="119:18" pos:end="119:18">j</name> <operator pos:start="119:20" pos:end="119:20">=</operator> <literal type="number" pos:start="119:22" pos:end="119:22">0</literal></expr>;</init> <condition pos:start="119:25" pos:end="119:42"><expr pos:start="119:25" pos:end="119:41"><name pos:start="119:25" pos:end="119:25">j</name> <operator pos:start="119:27" pos:end="119:27">&lt;</operator> <name pos:start="119:29" pos:end="119:41">lumFilterSize</name></expr>;</condition> <incr pos:start="119:44" pos:end="119:46"><expr pos:start="119:44" pos:end="119:46"><name pos:start="119:44" pos:end="119:44">j</name><operator pos:start="119:45" pos:end="119:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="121:17" pos:end="121:89"><block_content pos:start="121:17" pos:end="121:89">

                <expr_stmt pos:start="121:17" pos:end="121:89"><expr pos:start="121:17" pos:end="121:88"><name pos:start="121:17" pos:end="121:19">val</name> <operator pos:start="121:21" pos:end="121:22">+=</operator> <operator pos:start="121:24" pos:end="121:24">(</operator><ternary pos:start="121:25" pos:end="121:72"><condition pos:start="121:25" pos:end="121:31"><expr pos:start="121:25" pos:end="121:29"><name pos:start="121:25" pos:end="121:29">dword</name></expr> ?</condition><then pos:start="121:33" pos:end="121:44"> <expr pos:start="121:33" pos:end="121:44"><name pos:start="121:33" pos:end="121:44"><name pos:start="121:33" pos:end="121:38">alpSrc</name><index pos:start="121:39" pos:end="121:41">[<expr pos:start="121:40" pos:end="121:40"><name pos:start="121:40" pos:end="121:40">j</name></expr>]</index><index pos:start="121:42" pos:end="121:44">[<expr pos:start="121:43" pos:end="121:43"><name pos:start="121:43" pos:end="121:43">i</name></expr>]</index></name></expr> </then><else pos:start="121:46" pos:end="121:72">: <expr pos:start="121:48" pos:end="121:72"><operator pos:start="121:48" pos:end="121:48">(</operator><operator pos:start="121:49" pos:end="121:49">(</operator><name pos:start="121:50" pos:end="121:56">int16_t</name><operator pos:start="121:57" pos:end="121:57">*</operator><operator pos:start="121:58" pos:end="121:58">*</operator><operator pos:start="121:59" pos:end="121:59">)</operator><name pos:start="121:60" pos:end="121:65">alpSrc</name><operator pos:start="121:66" pos:end="121:66">)</operator><index pos:start="121:67" pos:end="121:69">[<expr pos:start="121:68" pos:end="121:68"><name pos:start="121:68" pos:end="121:68">j</name></expr>]</index><index pos:start="121:70" pos:end="121:72">[<expr pos:start="121:71" pos:end="121:71"><name pos:start="121:71" pos:end="121:71">i</name></expr>]</index></expr></else></ternary><operator pos:start="121:73" pos:end="121:73">)</operator> <operator pos:start="121:75" pos:end="121:75">*</operator> <name pos:start="121:77" pos:end="121:88"><name pos:start="121:77" pos:end="121:85">lumFilter</name><index pos:start="121:86" pos:end="121:88">[<expr pos:start="121:87" pos:end="121:87"><name pos:start="121:87" pos:end="121:87">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="125:13" pos:end="125:41"><expr pos:start="125:13" pos:end="125:40"><call pos:start="125:13" pos:end="125:40"><name pos:start="125:13" pos:end="125:24">output_pixel</name><argument_list pos:start="125:25" pos:end="125:40">(<argument pos:start="125:26" pos:end="125:34"><expr pos:start="125:26" pos:end="125:34"><operator pos:start="125:26" pos:end="125:26">&amp;</operator><name pos:start="125:27" pos:end="125:34"><name pos:start="125:27" pos:end="125:31">aDest</name><index pos:start="125:32" pos:end="125:34">[<expr pos:start="125:33" pos:end="125:33"><name pos:start="125:33" pos:end="125:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="125:37" pos:end="125:39"><expr pos:start="125:37" pos:end="125:39"><name pos:start="125:37" pos:end="125:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

<cpp:undef pos:start="131:1" pos:end="131:19">#<cpp:directive pos:start="131:2" pos:end="131:6">undef</cpp:directive> <name pos:start="131:8" pos:end="131:19">output_pixel</name></cpp:undef>

</block_content>}</block>
</unit>
