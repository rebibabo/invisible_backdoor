<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1480.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:20"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">cng_decode_frame</name><parameter_list pos:start="1:28" pos:end="2:64">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>,
                            <parameter pos:start="2:29" pos:end="2:46"><decl pos:start="2:29" pos:end="2:46"><type pos:start="2:29" pos:end="2:46"><name pos:start="2:29" pos:end="2:31">int</name> <modifier pos:start="2:33" pos:end="2:33">*</modifier></type><name pos:start="2:34" pos:end="2:46">got_frame_ptr</name></decl></parameter>, <parameter pos:start="2:49" pos:end="2:63"><decl pos:start="2:49" pos:end="2:63"><type pos:start="2:49" pos:end="2:63"><name pos:start="2:49" pos:end="2:56">AVPacket</name> <modifier pos:start="2:58" pos:end="2:58">*</modifier></type><name pos:start="2:59" pos:end="2:63">avpkt</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="43:20">{<block_content pos:start="4:5" pos:end="43:20">
    <decl_stmt pos:start="4:5" pos:end="4:26"><decl pos:start="4:5" pos:end="4:25"><type pos:start="4:5" pos:end="4:13"><name pos:start="4:5" pos:end="4:11">AVFrame</name> <modifier pos:start="4:13" pos:end="4:13">*</modifier></type><name pos:start="4:14" pos:end="4:18">frame</name> <init pos:start="4:20" pos:end="4:25">= <expr pos:start="4:22" pos:end="4:25"><name pos:start="4:22" pos:end="4:25">data</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">CNGContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">p</name> <init pos:start="5:19" pos:end="5:36">= <expr pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:25">avctx</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:32"><decl pos:start="6:5" pos:end="6:31"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:16">buf_size</name>  <init pos:start="6:19" pos:end="6:31">= <expr pos:start="6:21" pos:end="6:31"><name pos:start="6:21" pos:end="6:31"><name pos:start="6:21" pos:end="6:25">avpkt</name><operator pos:start="6:26" pos:end="6:27">-&gt;</operator><name pos:start="6:28" pos:end="6:31">size</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:14">i</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:21"><decl pos:start="8:5" pos:end="8:20"><type pos:start="8:5" pos:end="8:13"><name pos:start="8:5" pos:end="8:11">int16_t</name> <modifier pos:start="8:13" pos:end="8:13">*</modifier></type><name pos:start="8:14" pos:end="8:20">buf_out</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">float</name></type> <name pos:start="9:11" pos:end="9:11">e</name> <init pos:start="9:13" pos:end="9:17">= <expr pos:start="9:15" pos:end="9:17"><literal type="number" pos:start="9:15" pos:end="9:17">1.0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:18"><decl pos:start="10:5" pos:end="10:17"><type pos:start="10:5" pos:end="10:9"><name pos:start="10:5" pos:end="10:9">float</name></type> <name pos:start="10:11" pos:end="10:17">scaling</name></decl>;</decl_stmt>
    <if_stmt pos:start="11:5" pos:end="43:20"><if pos:start="11:5" pos:end="43:20">if <condition pos:start="11:8" pos:end="11:20">(<expr pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:13">avpkt</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:19">size</name></name></expr>)</condition> <block pos:start="11:22" pos:end="43:20">{<block_content pos:start="12:9" pos:end="43:20">
        <decl_stmt pos:start="12:9" pos:end="12:35"><decl pos:start="12:9" pos:end="12:34"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:16">dbov</name> <init pos:start="12:18" pos:end="12:34">= <expr pos:start="12:20" pos:end="12:34"><operator pos:start="12:20" pos:end="12:20">-</operator><name pos:start="12:21" pos:end="12:34"><name pos:start="12:21" pos:end="12:25">avpkt</name><operator pos:start="12:26" pos:end="12:27">-&gt;</operator><name pos:start="12:28" pos:end="12:31">data</name><index pos:start="12:32" pos:end="12:34">[<expr pos:start="12:33" pos:end="12:33"><literal type="number" pos:start="12:33" pos:end="12:33">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:69"><expr pos:start="13:9" pos:end="13:68"><name pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:9">p</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:24">target_energy</name></name> <operator pos:start="13:26" pos:end="13:26">=</operator> <literal type="number" pos:start="13:28" pos:end="13:37">1081109975</literal> <operator pos:start="13:39" pos:end="13:39">*</operator> <call pos:start="13:41" pos:end="13:61"><name pos:start="13:41" pos:end="13:48">ff_exp10</name><argument_list pos:start="13:49" pos:end="13:61">(<argument pos:start="13:50" pos:end="13:60"><expr pos:start="13:50" pos:end="13:60"><name pos:start="13:50" pos:end="13:53">dbov</name> <operator pos:start="13:55" pos:end="13:55">/</operator> <literal type="number" pos:start="13:57" pos:end="13:60">10.0</literal></expr></argument>)</argument_list></call> <operator pos:start="13:63" pos:end="13:63">*</operator> <literal type="number" pos:start="13:65" pos:end="13:68">0.75</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:80"><expr pos:start="14:9" pos:end="14:79"><call pos:start="14:9" pos:end="14:79"><name pos:start="14:9" pos:end="14:14">memset</name><argument_list pos:start="14:15" pos:end="14:79">(<argument pos:start="14:16" pos:end="14:34"><expr pos:start="14:16" pos:end="14:34"><name pos:start="14:16" pos:end="14:34"><name pos:start="14:16" pos:end="14:16">p</name><operator pos:start="14:17" pos:end="14:18">-&gt;</operator><name pos:start="14:19" pos:end="14:34">target_refl_coef</name></name></expr></argument>, <argument pos:start="14:37" pos:end="14:37"><expr pos:start="14:37" pos:end="14:37"><literal type="number" pos:start="14:37" pos:end="14:37">0</literal></expr></argument>, <argument pos:start="14:40" pos:end="14:78"><expr pos:start="14:40" pos:end="14:78"><name pos:start="14:40" pos:end="14:47"><name pos:start="14:40" pos:end="14:40">p</name><operator pos:start="14:41" pos:end="14:42">-&gt;</operator><name pos:start="14:43" pos:end="14:47">order</name></name> <operator pos:start="14:49" pos:end="14:49">*</operator> <sizeof pos:start="14:51" pos:end="14:78">sizeof<argument_list pos:start="14:57" pos:end="14:78">(<argument pos:start="14:58" pos:end="14:77"><expr pos:start="14:58" pos:end="14:77"><operator pos:start="14:58" pos:end="14:58">*</operator><name pos:start="14:59" pos:end="14:77"><name pos:start="14:59" pos:end="14:59">p</name><operator pos:start="14:60" pos:end="14:61">-&gt;</operator><name pos:start="14:62" pos:end="14:77">target_refl_coef</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="15:9" pos:end="43:20">for <control pos:start="15:13" pos:end="15:62">(<init pos:start="15:14" pos:end="15:19"><expr pos:start="15:14" pos:end="15:18"><name pos:start="15:14" pos:end="15:14">i</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>;</init> <condition pos:start="15:21" pos:end="15:57"><expr pos:start="15:21" pos:end="15:56"><name pos:start="15:21" pos:end="15:21">i</name> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <call pos:start="15:25" pos:end="15:56"><name pos:start="15:25" pos:end="15:29">FFMIN</name><argument_list pos:start="15:30" pos:end="15:56">(<argument pos:start="15:31" pos:end="15:45"><expr pos:start="15:31" pos:end="15:45"><name pos:start="15:31" pos:end="15:41"><name pos:start="15:31" pos:end="15:35">avpkt</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:41">size</name></name> <operator pos:start="15:43" pos:end="15:43">-</operator> <literal type="number" pos:start="15:45" pos:end="15:45">1</literal></expr></argument>, <argument pos:start="15:48" pos:end="15:55"><expr pos:start="15:48" pos:end="15:55"><name pos:start="15:48" pos:end="15:55"><name pos:start="15:48" pos:end="15:48">p</name><operator pos:start="15:49" pos:end="15:50">-&gt;</operator><name pos:start="15:51" pos:end="15:55">order</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="15:59" pos:end="15:61"><expr pos:start="15:59" pos:end="15:61"><name pos:start="15:59" pos:end="15:59">i</name><operator pos:start="15:60" pos:end="15:61">++</operator></expr></incr>)</control> <block pos:start="15:64" pos:end="43:20">{<block_content pos:start="16:13" pos:end="43:20">
            <expr_stmt pos:start="16:13" pos:end="16:72"><expr pos:start="16:13" pos:end="16:71"><name pos:start="16:13" pos:end="16:34"><name pos:start="16:13" pos:end="16:13">p</name><operator pos:start="16:14" pos:end="16:15">-&gt;</operator><name pos:start="16:16" pos:end="16:31">target_refl_coef</name><index pos:start="16:32" pos:end="16:34">[<expr pos:start="16:33" pos:end="16:33"><name pos:start="16:33" pos:end="16:33">i</name></expr>]</index></name> <operator pos:start="16:36" pos:end="16:36">=</operator> <operator pos:start="16:38" pos:end="16:38">(</operator><name pos:start="16:39" pos:end="16:56"><name pos:start="16:39" pos:end="16:43">avpkt</name><operator pos:start="16:44" pos:end="16:45">-&gt;</operator><name pos:start="16:46" pos:end="16:49">data</name><index pos:start="16:50" pos:end="16:56">[<expr pos:start="16:51" pos:end="16:55"><literal type="number" pos:start="16:51" pos:end="16:53">1</literal> <operator pos:start="16:53" pos:end="16:53">+</operator> <name pos:start="16:55" pos:end="16:55">i</name></expr>]</index></name> <operator pos:start="16:58" pos:end="16:58">-</operator> <literal type="number" pos:start="16:60" pos:end="16:62">127</literal><operator pos:start="16:63" pos:end="16:63">)</operator> <operator pos:start="16:65" pos:end="16:65">/</operator> <literal type="number" pos:start="16:67" pos:end="16:71">128.0</literal></expr>;</expr_stmt>
    <if_stmt pos:start="17:5" pos:end="43:20"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:18">(<expr pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:9">p</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:17">inited</name></name></expr>)</condition> <block pos:start="17:20" pos:end="21:5">{<block_content pos:start="18:9" pos:end="20:82">
        <expr_stmt pos:start="18:9" pos:end="18:57"><expr pos:start="18:9" pos:end="18:56"><name pos:start="18:9" pos:end="18:17"><name pos:start="18:9" pos:end="18:9">p</name><operator pos:start="18:10" pos:end="18:11">-&gt;</operator><name pos:start="18:12" pos:end="18:17">energy</name></name> <operator pos:start="18:19" pos:end="18:19">=</operator> <name pos:start="18:21" pos:end="18:29"><name pos:start="18:21" pos:end="18:21">p</name><operator pos:start="18:22" pos:end="18:23">-&gt;</operator><name pos:start="18:24" pos:end="18:29">energy</name></name> <operator pos:start="18:31" pos:end="18:31">/</operator> <literal type="number" pos:start="18:33" pos:end="18:35">2</literal> <operator pos:start="18:35" pos:end="18:35">+</operator> <name pos:start="18:37" pos:end="18:52"><name pos:start="18:37" pos:end="18:37">p</name><operator pos:start="18:38" pos:end="18:39">-&gt;</operator><name pos:start="18:40" pos:end="18:52">target_energy</name></name> <operator pos:start="18:54" pos:end="18:54">/</operator> <literal type="number" pos:start="18:56" pos:end="18:56">2</literal></expr>;</expr_stmt>
        <for pos:start="19:9" pos:end="20:82">for <control pos:start="19:13" pos:end="19:38">(<init pos:start="19:14" pos:end="19:19"><expr pos:start="19:14" pos:end="19:18"><name pos:start="19:14" pos:end="19:14">i</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>;</init> <condition pos:start="19:21" pos:end="19:33"><expr pos:start="19:21" pos:end="19:32"><name pos:start="19:21" pos:end="19:21">i</name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <name pos:start="19:25" pos:end="19:32"><name pos:start="19:25" pos:end="19:25">p</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:32">order</name></name></expr>;</condition> <incr pos:start="19:35" pos:end="19:37"><expr pos:start="19:35" pos:end="19:37"><name pos:start="19:35" pos:end="19:35">i</name><operator pos:start="19:36" pos:end="19:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="20:13" pos:end="20:82"><block_content pos:start="20:13" pos:end="20:82">
            <expr_stmt pos:start="20:13" pos:end="20:82"><expr pos:start="20:13" pos:end="20:81"><name pos:start="20:13" pos:end="20:27"><name pos:start="20:13" pos:end="20:13">p</name><operator pos:start="20:14" pos:end="20:15">-&gt;</operator><name pos:start="20:16" pos:end="20:24">refl_coef</name><index pos:start="20:25" pos:end="20:27">[<expr pos:start="20:26" pos:end="20:26"><name pos:start="20:26" pos:end="20:26">i</name></expr>]</index></name> <operator pos:start="20:29" pos:end="20:29">=</operator> <literal type="number" pos:start="20:31" pos:end="20:33">0.6</literal> <operator pos:start="20:35" pos:end="20:35">*</operator><name pos:start="20:36" pos:end="20:50"><name pos:start="20:36" pos:end="20:36">p</name><operator pos:start="20:37" pos:end="20:38">-&gt;</operator><name pos:start="20:39" pos:end="20:47">refl_coef</name><index pos:start="20:48" pos:end="20:50">[<expr pos:start="20:49" pos:end="20:49"><name pos:start="20:49" pos:end="20:49">i</name></expr>]</index></name> <operator pos:start="20:52" pos:end="20:52">+</operator> <literal type="number" pos:start="20:54" pos:end="20:56">0.4</literal> <operator pos:start="20:58" pos:end="20:58">*</operator> <name pos:start="20:60" pos:end="20:81"><name pos:start="20:60" pos:end="20:60">p</name><operator pos:start="20:61" pos:end="20:62">-&gt;</operator><name pos:start="20:63" pos:end="20:78">target_refl_coef</name><index pos:start="20:79" pos:end="20:81">[<expr pos:start="20:80" pos:end="20:80"><name pos:start="20:80" pos:end="20:80">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
    </block_content>}</block></if> <else pos:start="21:7" pos:end="43:20">else <block pos:start="21:12" pos:end="43:20">{<block_content pos:start="22:9" pos:end="43:20">
        <expr_stmt pos:start="22:9" pos:end="22:37"><expr pos:start="22:9" pos:end="22:36"><name pos:start="22:9" pos:end="22:17"><name pos:start="22:9" pos:end="22:9">p</name><operator pos:start="22:10" pos:end="22:11">-&gt;</operator><name pos:start="22:12" pos:end="22:17">energy</name></name> <operator pos:start="22:19" pos:end="22:19">=</operator> <name pos:start="22:21" pos:end="22:36"><name pos:start="22:21" pos:end="22:21">p</name><operator pos:start="22:22" pos:end="22:23">-&gt;</operator><name pos:start="22:24" pos:end="22:36">target_energy</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="23:9" pos:end="23:84"><expr pos:start="23:9" pos:end="23:83"><call pos:start="23:9" pos:end="23:83"><name pos:start="23:9" pos:end="23:14">memcpy</name><argument_list pos:start="23:15" pos:end="23:83">(<argument pos:start="23:16" pos:end="23:27"><expr pos:start="23:16" pos:end="23:27"><name pos:start="23:16" pos:end="23:27"><name pos:start="23:16" pos:end="23:16">p</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:27">refl_coef</name></name></expr></argument>, <argument pos:start="23:30" pos:end="23:48"><expr pos:start="23:30" pos:end="23:48"><name pos:start="23:30" pos:end="23:48"><name pos:start="23:30" pos:end="23:30">p</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:48">target_refl_coef</name></name></expr></argument>, <argument pos:start="23:51" pos:end="23:82"><expr pos:start="23:51" pos:end="23:82"><name pos:start="23:51" pos:end="23:58"><name pos:start="23:51" pos:end="23:51">p</name><operator pos:start="23:52" pos:end="23:53">-&gt;</operator><name pos:start="23:54" pos:end="23:58">order</name></name> <operator pos:start="23:60" pos:end="23:60">*</operator> <sizeof pos:start="23:62" pos:end="23:82">sizeof<argument_list pos:start="23:68" pos:end="23:82">(<argument pos:start="23:69" pos:end="23:81"><expr pos:start="23:69" pos:end="23:81"><operator pos:start="23:69" pos:end="23:69">*</operator><name pos:start="23:70" pos:end="23:81"><name pos:start="23:70" pos:end="23:70">p</name><operator pos:start="23:71" pos:end="23:72">-&gt;</operator><name pos:start="23:73" pos:end="23:81">refl_coef</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:22"><expr pos:start="24:9" pos:end="24:21"><name pos:start="24:9" pos:end="24:17"><name pos:start="24:9" pos:end="24:9">p</name><operator pos:start="24:10" pos:end="24:11">-&gt;</operator><name pos:start="24:12" pos:end="24:17">inited</name></name> <operator pos:start="24:19" pos:end="24:19">=</operator> <literal type="number" pos:start="24:21" pos:end="24:21">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:56"><expr pos:start="25:5" pos:end="25:55"><call pos:start="25:5" pos:end="25:55"><name pos:start="25:5" pos:end="25:18">make_lpc_coefs</name><argument_list pos:start="25:19" pos:end="25:55">(<argument pos:start="25:20" pos:end="25:30"><expr pos:start="25:20" pos:end="25:30"><name pos:start="25:20" pos:end="25:30"><name pos:start="25:20" pos:end="25:20">p</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:30">lpc_coef</name></name></expr></argument>, <argument pos:start="25:33" pos:end="25:44"><expr pos:start="25:33" pos:end="25:44"><name pos:start="25:33" pos:end="25:44"><name pos:start="25:33" pos:end="25:33">p</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:44">refl_coef</name></name></expr></argument>, <argument pos:start="25:47" pos:end="25:54"><expr pos:start="25:47" pos:end="25:54"><name pos:start="25:47" pos:end="25:54"><name pos:start="25:47" pos:end="25:47">p</name><operator pos:start="25:48" pos:end="25:49">-&gt;</operator><name pos:start="25:50" pos:end="25:54">order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="26:5" pos:end="27:51">for <control pos:start="26:9" pos:end="26:34">(<init pos:start="26:10" pos:end="26:15"><expr pos:start="26:10" pos:end="26:14"><name pos:start="26:10" pos:end="26:10">i</name> <operator pos:start="26:12" pos:end="26:12">=</operator> <literal type="number" pos:start="26:14" pos:end="26:14">0</literal></expr>;</init> <condition pos:start="26:17" pos:end="26:29"><expr pos:start="26:17" pos:end="26:28"><name pos:start="26:17" pos:end="26:17">i</name> <operator pos:start="26:19" pos:end="26:19">&lt;</operator> <name pos:start="26:21" pos:end="26:28"><name pos:start="26:21" pos:end="26:21">p</name><operator pos:start="26:22" pos:end="26:23">-&gt;</operator><name pos:start="26:24" pos:end="26:28">order</name></name></expr>;</condition> <incr pos:start="26:31" pos:end="26:33"><expr pos:start="26:31" pos:end="26:33"><name pos:start="26:31" pos:end="26:31">i</name><operator pos:start="26:32" pos:end="26:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:9" pos:end="27:51"><block_content pos:start="27:9" pos:end="27:51">
        <expr_stmt pos:start="27:9" pos:end="27:51"><expr pos:start="27:9" pos:end="27:50"><name pos:start="27:9" pos:end="27:9">e</name> <operator pos:start="27:11" pos:end="27:12">*=</operator> <literal type="number" pos:start="27:14" pos:end="27:18">1.0</literal> <operator pos:start="27:18" pos:end="27:18">-</operator> <name pos:start="27:20" pos:end="27:34"><name pos:start="27:20" pos:end="27:20">p</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:31">refl_coef</name><index pos:start="27:32" pos:end="27:34">[<expr pos:start="27:33" pos:end="27:33"><name pos:start="27:33" pos:end="27:33">i</name></expr>]</index></name><operator pos:start="27:35" pos:end="27:35">*</operator><name pos:start="27:36" pos:end="27:50"><name pos:start="27:36" pos:end="27:36">p</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:47">refl_coef</name><index pos:start="27:48" pos:end="27:50">[<expr pos:start="27:49" pos:end="27:49"><name pos:start="27:49" pos:end="27:49">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="28:5" pos:end="28:47"><expr pos:start="28:5" pos:end="28:46"><name pos:start="28:5" pos:end="28:11">scaling</name> <operator pos:start="28:13" pos:end="28:13">=</operator> <call pos:start="28:15" pos:end="28:46"><name pos:start="28:15" pos:end="28:18">sqrt</name><argument_list pos:start="28:19" pos:end="28:46">(<argument pos:start="28:20" pos:end="28:45"><expr pos:start="28:20" pos:end="28:45"><name pos:start="28:20" pos:end="28:20">e</name> <operator pos:start="28:22" pos:end="28:22">*</operator> <name pos:start="28:24" pos:end="28:32"><name pos:start="28:24" pos:end="28:24">p</name><operator pos:start="28:25" pos:end="28:26">-&gt;</operator><name pos:start="28:27" pos:end="28:32">energy</name></name> <operator pos:start="28:34" pos:end="28:34">/</operator> <literal type="number" pos:start="28:36" pos:end="28:45">1081109975</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="29:5" pos:end="43:20">for <control pos:start="29:9" pos:end="29:43">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:38"><expr pos:start="29:17" pos:end="29:37"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:37"><name pos:start="29:21" pos:end="29:25">avctx</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:37">frame_size</name></name></expr>;</condition> <incr pos:start="29:40" pos:end="29:42"><expr pos:start="29:40" pos:end="29:42"><name pos:start="29:40" pos:end="29:40">i</name><operator pos:start="29:41" pos:end="29:42">++</operator></expr></incr>)</control> <block pos:start="29:45" pos:end="43:20">{<block_content pos:start="30:9" pos:end="43:20">
        <decl_stmt pos:start="30:9" pos:end="30:56"><decl pos:start="30:9" pos:end="30:55"><type pos:start="30:9" pos:end="30:11"><name pos:start="30:9" pos:end="30:11">int</name></type> <name pos:start="30:13" pos:end="30:13">r</name> <init pos:start="30:15" pos:end="30:55">= <expr pos:start="30:17" pos:end="30:55"><operator pos:start="30:17" pos:end="30:17">(</operator><call pos:start="30:18" pos:end="30:36"><name pos:start="30:18" pos:end="30:27">av_lfg_get</name><argument_list pos:start="30:28" pos:end="30:36">(<argument pos:start="30:29" pos:end="30:35"><expr pos:start="30:29" pos:end="30:35"><operator pos:start="30:29" pos:end="30:29">&amp;</operator><name pos:start="30:30" pos:end="30:35"><name pos:start="30:30" pos:end="30:30">p</name><operator pos:start="30:31" pos:end="30:32">-&gt;</operator><name pos:start="30:33" pos:end="30:35">lfg</name></name></expr></argument>)</argument_list></call> <operator pos:start="30:38" pos:end="30:38">&amp;</operator> <literal type="number" pos:start="30:40" pos:end="30:45">0xffff</literal><operator pos:start="30:46" pos:end="30:46">)</operator> <operator pos:start="30:48" pos:end="30:48">-</operator> <literal type="number" pos:start="30:50" pos:end="30:55">0x8000</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="31:9" pos:end="31:39"><expr pos:start="31:9" pos:end="31:38"><name pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:9">p</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:21">excitation</name><index pos:start="31:22" pos:end="31:24">[<expr pos:start="31:23" pos:end="31:23"><name pos:start="31:23" pos:end="31:23">i</name></expr>]</index></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <name pos:start="31:28" pos:end="31:34">scaling</name> <operator pos:start="31:36" pos:end="31:36">*</operator> <name pos:start="31:38" pos:end="31:38">r</name></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="33:77"><expr pos:start="32:5" pos:end="33:76"><call pos:start="32:5" pos:end="33:76"><name pos:start="32:5" pos:end="32:32">ff_celp_lp_synthesis_filterf</name><argument_list pos:start="32:33" pos:end="33:76">(<argument pos:start="32:34" pos:end="32:57"><expr pos:start="32:34" pos:end="32:57"><name pos:start="32:34" pos:end="32:46"><name pos:start="32:34" pos:end="32:34">p</name><operator pos:start="32:35" pos:end="32:36">-&gt;</operator><name pos:start="32:37" pos:end="32:46">filter_out</name></name> <operator pos:start="32:48" pos:end="32:48">+</operator> <name pos:start="32:50" pos:end="32:57"><name pos:start="32:50" pos:end="32:50">p</name><operator pos:start="32:51" pos:end="32:52">-&gt;</operator><name pos:start="32:53" pos:end="32:57">order</name></name></expr></argument>, <argument pos:start="32:60" pos:end="32:70"><expr pos:start="32:60" pos:end="32:70"><name pos:start="32:60" pos:end="32:70"><name pos:start="32:60" pos:end="32:60">p</name><operator pos:start="32:61" pos:end="32:62">-&gt;</operator><name pos:start="32:63" pos:end="32:70">lpc_coef</name></name></expr></argument>,
                                 <argument pos:start="33:34" pos:end="33:46"><expr pos:start="33:34" pos:end="33:46"><name pos:start="33:34" pos:end="33:46"><name pos:start="33:34" pos:end="33:34">p</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:46">excitation</name></name></expr></argument>, <argument pos:start="33:49" pos:end="33:65"><expr pos:start="33:49" pos:end="33:65"><name pos:start="33:49" pos:end="33:65"><name pos:start="33:49" pos:end="33:53">avctx</name><operator pos:start="33:54" pos:end="33:55">-&gt;</operator><name pos:start="33:56" pos:end="33:65">frame_size</name></name></expr></argument>, <argument pos:start="33:68" pos:end="33:75"><expr pos:start="33:68" pos:end="33:75"><name pos:start="33:68" pos:end="33:75"><name pos:start="33:68" pos:end="33:68">p</name><operator pos:start="33:69" pos:end="33:70">-&gt;</operator><name pos:start="33:71" pos:end="33:75">order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:42"><expr pos:start="34:5" pos:end="34:41"><name pos:start="34:5" pos:end="34:21"><name pos:start="34:5" pos:end="34:9">frame</name><operator pos:start="34:10" pos:end="34:11">-&gt;</operator><name pos:start="34:12" pos:end="34:21">nb_samples</name></name> <operator pos:start="34:23" pos:end="34:23">=</operator> <name pos:start="34:25" pos:end="34:41"><name pos:start="34:25" pos:end="34:29">avctx</name><operator pos:start="34:30" pos:end="34:31">-&gt;</operator><name pos:start="34:32" pos:end="34:41">frame_size</name></name></expr>;</expr_stmt>
    <if_stmt pos:start="35:5" pos:end="36:19"><if pos:start="35:5" pos:end="36:19">if <condition pos:start="35:8" pos:end="35:51">(<expr pos:start="35:9" pos:end="35:50"><operator pos:start="35:9" pos:end="35:9">(</operator><name pos:start="35:10" pos:end="35:12">ret</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:45"><name pos:start="35:16" pos:end="35:28">ff_get_buffer</name><argument_list pos:start="35:29" pos:end="35:45">(<argument pos:start="35:30" pos:end="35:34"><expr pos:start="35:30" pos:end="35:34"><name pos:start="35:30" pos:end="35:34">avctx</name></expr></argument>, <argument pos:start="35:37" pos:end="35:41"><expr pos:start="35:37" pos:end="35:41"><name pos:start="35:37" pos:end="35:41">frame</name></expr></argument>, <argument pos:start="35:44" pos:end="35:44"><expr pos:start="35:44" pos:end="35:44"><literal type="number" pos:start="35:44" pos:end="35:44">0</literal></expr></argument>)</argument_list></call><operator pos:start="35:46" pos:end="35:46">)</operator> <operator pos:start="35:48" pos:end="35:48">&lt;</operator> <literal type="number" pos:start="35:50" pos:end="35:50">0</literal></expr>)</condition><block type="pseudo" pos:start="36:9" pos:end="36:19"><block_content pos:start="36:9" pos:end="36:19">
        <return pos:start="36:9" pos:end="36:19">return <expr pos:start="36:16" pos:end="36:18"><name pos:start="36:16" pos:end="36:18">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="37:5" pos:end="37:40"><expr pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:11">buf_out</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <operator pos:start="37:15" pos:end="37:15">(</operator><name pos:start="37:16" pos:end="37:22">int16_t</name> <operator pos:start="37:24" pos:end="37:24">*</operator><operator pos:start="37:25" pos:end="37:25">)</operator><name pos:start="37:26" pos:end="37:39"><name pos:start="37:26" pos:end="37:30">frame</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:36">data</name><index pos:start="37:37" pos:end="37:39">[<expr pos:start="37:38" pos:end="37:38"><literal type="number" pos:start="37:38" pos:end="37:38">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <for pos:start="38:5" pos:end="39:49">for <control pos:start="38:9" pos:end="38:43">(<init pos:start="38:10" pos:end="38:15"><expr pos:start="38:10" pos:end="38:14"><name pos:start="38:10" pos:end="38:10">i</name> <operator pos:start="38:12" pos:end="38:12">=</operator> <literal type="number" pos:start="38:14" pos:end="38:14">0</literal></expr>;</init> <condition pos:start="38:17" pos:end="38:38"><expr pos:start="38:17" pos:end="38:37"><name pos:start="38:17" pos:end="38:17">i</name> <operator pos:start="38:19" pos:end="38:19">&lt;</operator> <name pos:start="38:21" pos:end="38:37"><name pos:start="38:21" pos:end="38:25">avctx</name><operator pos:start="38:26" pos:end="38:27">-&gt;</operator><name pos:start="38:28" pos:end="38:37">frame_size</name></name></expr>;</condition> <incr pos:start="38:40" pos:end="38:42"><expr pos:start="38:40" pos:end="38:42"><name pos:start="38:40" pos:end="38:40">i</name><operator pos:start="38:41" pos:end="38:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="39:9" pos:end="39:49"><block_content pos:start="39:9" pos:end="39:49">
        <expr_stmt pos:start="39:9" pos:end="39:49"><expr pos:start="39:9" pos:end="39:48"><name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:15">buf_out</name><index pos:start="39:16" pos:end="39:18">[<expr pos:start="39:17" pos:end="39:17"><name pos:start="39:17" pos:end="39:17">i</name></expr>]</index></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:48"><name pos:start="39:22" pos:end="39:22">p</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:34">filter_out</name><index pos:start="39:35" pos:end="39:48">[<expr pos:start="39:36" pos:end="39:47"><name pos:start="39:36" pos:end="39:36">i</name> <operator pos:start="39:38" pos:end="39:38">+</operator> <name pos:start="39:40" pos:end="39:47"><name pos:start="39:40" pos:end="39:40">p</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:47">order</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="40:5" pos:end="41:46"><expr pos:start="40:5" pos:end="41:45"><call pos:start="40:5" pos:end="41:45"><name pos:start="40:5" pos:end="40:10">memcpy</name><argument_list pos:start="40:11" pos:end="41:45">(<argument pos:start="40:12" pos:end="40:24"><expr pos:start="40:12" pos:end="40:24"><name pos:start="40:12" pos:end="40:24"><name pos:start="40:12" pos:end="40:12">p</name><operator pos:start="40:13" pos:end="40:14">-&gt;</operator><name pos:start="40:15" pos:end="40:24">filter_out</name></name></expr></argument>, <argument pos:start="40:27" pos:end="40:59"><expr pos:start="40:27" pos:end="40:59"><name pos:start="40:27" pos:end="40:39"><name pos:start="40:27" pos:end="40:27">p</name><operator pos:start="40:28" pos:end="40:29">-&gt;</operator><name pos:start="40:30" pos:end="40:39">filter_out</name></name> <operator pos:start="40:41" pos:end="40:41">+</operator> <name pos:start="40:43" pos:end="40:59"><name pos:start="40:43" pos:end="40:47">avctx</name><operator pos:start="40:48" pos:end="40:49">-&gt;</operator><name pos:start="40:50" pos:end="40:59">frame_size</name></name></expr></argument>,
           <argument pos:start="41:12" pos:end="41:44"><expr pos:start="41:12" pos:end="41:44"><name pos:start="41:12" pos:end="41:19"><name pos:start="41:12" pos:end="41:12">p</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:19">order</name></name> <operator pos:start="41:21" pos:end="41:21">*</operator> <sizeof pos:start="41:23" pos:end="41:44">sizeof<argument_list pos:start="41:29" pos:end="41:44">(<argument pos:start="41:30" pos:end="41:43"><expr pos:start="41:30" pos:end="41:43"><operator pos:start="41:30" pos:end="41:30">*</operator><name pos:start="41:31" pos:end="41:43"><name pos:start="41:31" pos:end="41:31">p</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:43">filter_out</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="42:5" pos:end="42:23"><expr pos:start="42:5" pos:end="42:22"><operator pos:start="42:5" pos:end="42:5">*</operator><name pos:start="42:6" pos:end="42:18">got_frame_ptr</name> <operator pos:start="42:20" pos:end="42:20">=</operator> <literal type="number" pos:start="42:22" pos:end="42:22">1</literal></expr>;</expr_stmt>
    <return pos:start="43:5" pos:end="43:20">return <expr pos:start="43:12" pos:end="43:19"><name pos:start="43:12" pos:end="43:19">buf_size</name></expr>;</return></block_content></block></for></block_content></block></else></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function></unit>
