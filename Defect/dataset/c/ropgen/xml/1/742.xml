<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/742.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:24">coroutine_fn</name></type> <name pos:start="1:26" pos:end="1:36">v9fs_rename</name><parameter_list pos:start="1:37" pos:end="1:50">(<parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:43"><name pos:start="1:38" pos:end="1:41">void</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:49">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:28">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:15">fid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">ssize_t</name></type> <name pos:start="7:13" pos:end="7:15">err</name> <init pos:start="7:17" pos:end="7:19">= <expr pos:start="7:19" pos:end="7:19"><literal type="number" pos:start="7:19" pos:end="7:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:17">offset</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:14">V9fsString</name></type> <name pos:start="11:16" pos:end="11:19">name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int32_t</name></type> <name pos:start="13:13" pos:end="13:21">newdirfid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">V9fsFidState</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">V9fsPDU</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:16">pdu</name> <init pos:start="17:18" pos:end="17:25">= <expr pos:start="17:20" pos:end="17:25"><name pos:start="17:20" pos:end="17:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:13">V9fsState</name> <modifier pos:start="19:15" pos:end="19:15">*</modifier></type><name pos:start="19:16" pos:end="19:16">s</name> <init pos:start="19:18" pos:end="19:25">= <expr pos:start="19:20" pos:end="19:25"><name pos:start="19:20" pos:end="19:25"><name pos:start="19:20" pos:end="19:22">pdu</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:25">s</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><call pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:20">v9fs_string_init</name><argument_list pos:start="23:21" pos:end="23:27">(<argument pos:start="23:22" pos:end="23:26"><expr pos:start="23:22" pos:end="23:26"><operator pos:start="23:22" pos:end="23:22">&amp;</operator><name pos:start="23:23" pos:end="23:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:69"><expr pos:start="25:5" pos:end="25:68"><name pos:start="25:5" pos:end="25:7">err</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:68"><name pos:start="25:11" pos:end="25:23">pdu_unmarshal</name><argument_list pos:start="25:24" pos:end="25:68">(<argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:27">pdu</name></expr></argument>, <argument pos:start="25:30" pos:end="25:35"><expr pos:start="25:30" pos:end="25:35"><name pos:start="25:30" pos:end="25:35">offset</name></expr></argument>, <argument pos:start="25:38" pos:end="25:42"><expr pos:start="25:38" pos:end="25:42"><literal type="string" pos:start="25:38" pos:end="25:42">"dds"</literal></expr></argument>, <argument pos:start="25:45" pos:end="25:48"><expr pos:start="25:45" pos:end="25:48"><operator pos:start="25:45" pos:end="25:45">&amp;</operator><name pos:start="25:46" pos:end="25:48">fid</name></expr></argument>, <argument pos:start="25:51" pos:end="25:60"><expr pos:start="25:51" pos:end="25:60"><operator pos:start="25:51" pos:end="25:51">&amp;</operator><name pos:start="25:52" pos:end="25:60">newdirfid</name></expr></argument>, <argument pos:start="25:63" pos:end="25:67"><expr pos:start="25:63" pos:end="25:67"><operator pos:start="25:63" pos:end="25:63">&amp;</operator><name pos:start="25:64" pos:end="25:67">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">err</name> <operator pos:start="27:13" pos:end="27:13">&lt;</operator> <literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>)</condition> <block pos:start="27:18" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:23">

        <goto pos:start="29:9" pos:end="29:23">goto <name pos:start="29:14" pos:end="29:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:35">(<expr pos:start="35:9" pos:end="35:34"><call pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:23">name_is_illegal</name><argument_list pos:start="35:24" pos:end="35:34">(<argument pos:start="35:25" pos:end="35:33"><expr pos:start="35:25" pos:end="35:33"><name pos:start="35:25" pos:end="35:33"><name pos:start="35:25" pos:end="35:28">name</name><operator pos:start="35:29" pos:end="35:29">.</operator><name pos:start="35:30" pos:end="35:33">data</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:37" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:23">

        <expr_stmt pos:start="37:9" pos:end="37:22"><expr pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:11">err</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <operator pos:start="37:15" pos:end="37:15">-</operator><name pos:start="37:16" pos:end="37:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="39:9" pos:end="39:23">goto <name pos:start="39:14" pos:end="39:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:60">(<expr pos:start="45:9" pos:end="45:59"><operator pos:start="45:9" pos:end="45:9">!</operator><call pos:start="45:10" pos:end="45:31"><name pos:start="45:10" pos:end="45:15">strcmp</name><argument_list pos:start="45:16" pos:end="45:31">(<argument pos:start="45:17" pos:end="45:19"><expr pos:start="45:17" pos:end="45:19"><literal type="string" pos:start="45:17" pos:end="45:19">"."</literal></expr></argument>, <argument pos:start="45:22" pos:end="45:30"><expr pos:start="45:22" pos:end="45:30"><name pos:start="45:22" pos:end="45:30"><name pos:start="45:22" pos:end="45:25">name</name><operator pos:start="45:26" pos:end="45:26">.</operator><name pos:start="45:27" pos:end="45:30">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="45:33" pos:end="45:34">||</operator> <operator pos:start="45:36" pos:end="45:36">!</operator><call pos:start="45:37" pos:end="45:59"><name pos:start="45:37" pos:end="45:42">strcmp</name><argument_list pos:start="45:43" pos:end="45:59">(<argument pos:start="45:44" pos:end="45:47"><expr pos:start="45:44" pos:end="45:47"><literal type="string" pos:start="45:44" pos:end="45:47">".."</literal></expr></argument>, <argument pos:start="45:50" pos:end="45:58"><expr pos:start="45:50" pos:end="45:58"><name pos:start="45:50" pos:end="45:58"><name pos:start="45:50" pos:end="45:53">name</name><operator pos:start="45:54" pos:end="45:54">.</operator><name pos:start="45:55" pos:end="45:58">data</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:62" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:23">

        <expr_stmt pos:start="47:9" pos:end="47:22"><expr pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:11">err</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <operator pos:start="47:15" pos:end="47:15">-</operator><name pos:start="47:16" pos:end="47:21">EISDIR</name></expr>;</expr_stmt>

        <goto pos:start="49:9" pos:end="49:23">goto <name pos:start="49:14" pos:end="49:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:29"><expr pos:start="55:5" pos:end="55:28"><name pos:start="55:5" pos:end="55:8">fidp</name> <operator pos:start="55:10" pos:end="55:10">=</operator> <call pos:start="55:12" pos:end="55:28"><name pos:start="55:12" pos:end="55:18">get_fid</name><argument_list pos:start="55:19" pos:end="55:28">(<argument pos:start="55:20" pos:end="55:22"><expr pos:start="55:20" pos:end="55:22"><name pos:start="55:20" pos:end="55:22">pdu</name></expr></argument>, <argument pos:start="55:25" pos:end="55:27"><expr pos:start="55:25" pos:end="55:27"><name pos:start="55:25" pos:end="55:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:21">(<expr pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:12">fidp</name> <operator pos:start="57:14" pos:end="57:15">==</operator> <name pos:start="57:17" pos:end="57:20">NULL</name></expr>)</condition> <block pos:start="57:23" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:23">

        <expr_stmt pos:start="59:9" pos:end="59:22"><expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:11">err</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <operator pos:start="59:15" pos:end="59:15">-</operator><name pos:start="59:16" pos:end="59:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="61:9" pos:end="61:23">goto <name pos:start="61:14" pos:end="61:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:42"><expr pos:start="65:5" pos:end="65:41"><call pos:start="65:5" pos:end="65:41"><name pos:start="65:5" pos:end="65:10">BUG_ON</name><argument_list pos:start="65:11" pos:end="65:41">(<argument pos:start="65:12" pos:end="65:40"><expr pos:start="65:12" pos:end="65:40"><name pos:start="65:12" pos:end="65:25"><name pos:start="65:12" pos:end="65:15">fidp</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:25">fid_type</name></name> <operator pos:start="65:27" pos:end="65:28">!=</operator> <name pos:start="65:30" pos:end="65:40">P9_FID_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="67:5" pos:end="67:59">/* if fs driver is not path based, return EOPNOTSUPP */</comment>

    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:62">(<expr pos:start="69:9" pos:end="69:61"><operator pos:start="69:9" pos:end="69:9">!</operator><operator pos:start="69:10" pos:end="69:10">(</operator><name pos:start="69:11" pos:end="69:34"><name pos:start="69:11" pos:end="69:13">pdu</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:16">s</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:21">ctx</name><operator pos:start="69:22" pos:end="69:22">.</operator><name pos:start="69:23" pos:end="69:34">export_flags</name></name> <operator pos:start="69:36" pos:end="69:36">&amp;</operator> <name pos:start="69:38" pos:end="69:60">V9FS_PATHNAME_FSCONTEXT</name><operator pos:start="69:61" pos:end="69:61">)</operator></expr>)</condition> <block pos:start="69:64" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:17">

        <expr_stmt pos:start="71:9" pos:end="71:26"><expr pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:11">err</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <operator pos:start="71:15" pos:end="71:15">-</operator><name pos:start="71:16" pos:end="71:25">EOPNOTSUPP</name></expr>;</expr_stmt>

        <goto pos:start="73:9" pos:end="73:17">goto <name pos:start="73:14" pos:end="73:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:28"><expr pos:start="77:5" pos:end="77:27"><call pos:start="77:5" pos:end="77:27"><name pos:start="77:5" pos:end="77:24">v9fs_path_write_lock</name><argument_list pos:start="77:25" pos:end="77:27">(<argument pos:start="77:26" pos:end="77:26"><expr pos:start="77:26" pos:end="77:26"><name pos:start="77:26" pos:end="77:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:60"><expr pos:start="79:5" pos:end="79:59"><name pos:start="79:5" pos:end="79:7">err</name> <operator pos:start="79:9" pos:end="79:9">=</operator> <call pos:start="79:11" pos:end="79:59"><name pos:start="79:11" pos:end="79:30">v9fs_complete_rename</name><argument_list pos:start="79:31" pos:end="79:59">(<argument pos:start="79:32" pos:end="79:34"><expr pos:start="79:32" pos:end="79:34"><name pos:start="79:32" pos:end="79:34">pdu</name></expr></argument>, <argument pos:start="79:37" pos:end="79:40"><expr pos:start="79:37" pos:end="79:40"><name pos:start="79:37" pos:end="79:40">fidp</name></expr></argument>, <argument pos:start="79:43" pos:end="79:51"><expr pos:start="79:43" pos:end="79:51"><name pos:start="79:43" pos:end="79:51">newdirfid</name></expr></argument>, <argument pos:start="79:54" pos:end="79:58"><expr pos:start="79:54" pos:end="79:58"><operator pos:start="79:54" pos:end="79:54">&amp;</operator><name pos:start="79:55" pos:end="79:58">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:24"><expr pos:start="81:5" pos:end="81:23"><call pos:start="81:5" pos:end="81:23"><name pos:start="81:5" pos:end="81:20">v9fs_path_unlock</name><argument_list pos:start="81:21" pos:end="81:23">(<argument pos:start="81:22" pos:end="81:22"><expr pos:start="81:22" pos:end="81:22"><name pos:start="81:22" pos:end="81:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="87:5"><if pos:start="83:5" pos:end="87:5">if <condition pos:start="83:8" pos:end="83:13">(<expr pos:start="83:9" pos:end="83:12"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:12">err</name></expr>)</condition> <block pos:start="83:15" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:21">

        <expr_stmt pos:start="85:9" pos:end="85:21"><expr pos:start="85:9" pos:end="85:20"><name pos:start="85:9" pos:end="85:11">err</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <name pos:start="85:15" pos:end="85:20">offset</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<label pos:start="89:1" pos:end="89:4"><name pos:start="89:1" pos:end="89:3">out</name>:</label>

    <expr_stmt pos:start="91:5" pos:end="91:23"><expr pos:start="91:5" pos:end="91:22"><call pos:start="91:5" pos:end="91:22"><name pos:start="91:5" pos:end="91:11">put_fid</name><argument_list pos:start="91:12" pos:end="91:22">(<argument pos:start="91:13" pos:end="91:15"><expr pos:start="91:13" pos:end="91:15"><name pos:start="91:13" pos:end="91:15">pdu</name></expr></argument>, <argument pos:start="91:18" pos:end="91:21"><expr pos:start="91:18" pos:end="91:21"><name pos:start="91:18" pos:end="91:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="93:1" pos:end="93:10"><name pos:start="93:1" pos:end="93:9">out_nofid</name>:</label>

    <expr_stmt pos:start="95:5" pos:end="95:27"><expr pos:start="95:5" pos:end="95:26"><call pos:start="95:5" pos:end="95:26"><name pos:start="95:5" pos:end="95:16">pdu_complete</name><argument_list pos:start="95:17" pos:end="95:26">(<argument pos:start="95:18" pos:end="95:20"><expr pos:start="95:18" pos:end="95:20"><name pos:start="95:18" pos:end="95:20">pdu</name></expr></argument>, <argument pos:start="95:23" pos:end="95:25"><expr pos:start="95:23" pos:end="95:25"><name pos:start="95:23" pos:end="95:25">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:28"><expr pos:start="97:5" pos:end="97:27"><call pos:start="97:5" pos:end="97:27"><name pos:start="97:5" pos:end="97:20">v9fs_string_free</name><argument_list pos:start="97:21" pos:end="97:27">(<argument pos:start="97:22" pos:end="97:26"><expr pos:start="97:22" pos:end="97:26"><operator pos:start="97:22" pos:end="97:22">&amp;</operator><name pos:start="97:23" pos:end="97:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
