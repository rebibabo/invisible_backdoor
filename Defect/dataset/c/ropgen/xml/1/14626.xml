<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14626.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">pciej_write</name><parameter_list pos:start="1:24" pos:end="1:66">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:46">uint32_t</name></type> <name pos:start="1:48" pos:end="1:51">addr</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:61">uint32_t</name></type> <name pos:start="1:63" pos:end="1:65">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:56">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">BusState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">bus</name> <init pos:start="5:19" pos:end="5:26">= <expr pos:start="5:21" pos:end="5:26"><name pos:start="5:21" pos:end="5:26">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">DeviceState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:21">qdev</name></decl>, <decl pos:start="7:24" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:17"><modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:28">next</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">PCIDevice</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:18">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">slot</name> <init pos:start="11:14" pos:end="11:27">= <expr pos:start="11:16" pos:end="11:27"><call pos:start="11:16" pos:end="11:23"><name pos:start="11:16" pos:end="11:18">ffs</name><argument_list pos:start="11:19" pos:end="11:23">(<argument pos:start="11:20" pos:end="11:22"><expr pos:start="11:20" pos:end="11:22"><name pos:start="11:20" pos:end="11:22">val</name></expr></argument>)</argument_list></call> <operator pos:start="11:25" pos:end="11:25">-</operator> <literal type="number" pos:start="11:27" pos:end="11:27">1</literal></expr></init></decl>;</decl_stmt>



    <macro pos:start="15:5" pos:end="15:59"><name pos:start="15:5" pos:end="15:22">QLIST_FOREACH_SAFE</name><argument_list pos:start="15:23" pos:end="15:59">(<argument pos:start="15:24" pos:end="15:27">qdev</argument>, <argument pos:start="15:30" pos:end="15:43">&amp;bus-&gt;children</argument>, <argument pos:start="15:46" pos:end="15:52">sibling</argument>, <argument pos:start="15:55" pos:end="15:58">next</argument>)</argument_list></macro> <block pos:start="15:61" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:9">

        <expr_stmt pos:start="17:9" pos:end="17:47"><expr pos:start="17:9" pos:end="17:46"><name pos:start="17:9" pos:end="17:11">dev</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:46"><name pos:start="17:15" pos:end="17:23">DO_UPCAST</name><argument_list pos:start="17:24" pos:end="17:46">(<argument pos:start="17:25" pos:end="17:33"><expr pos:start="17:25" pos:end="17:33"><name pos:start="17:25" pos:end="17:33">PCIDevice</name></expr></argument>, <argument pos:start="17:36" pos:end="17:39"><expr pos:start="17:36" pos:end="17:39"><name pos:start="17:36" pos:end="17:39">qdev</name></expr></argument>, <argument pos:start="17:42" pos:end="17:45"><expr pos:start="17:42" pos:end="17:45"><name pos:start="17:42" pos:end="17:45">qdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:41">(<expr pos:start="19:13" pos:end="19:40"><call pos:start="19:13" pos:end="19:32"><name pos:start="19:13" pos:end="19:20">PCI_SLOT</name><argument_list pos:start="19:21" pos:end="19:32">(<argument pos:start="19:22" pos:end="19:31"><expr pos:start="19:22" pos:end="19:31"><name pos:start="19:22" pos:end="19:31"><name pos:start="19:22" pos:end="19:24">dev</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:31">devfn</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:34" pos:end="19:35">==</operator> <name pos:start="19:37" pos:end="19:40">slot</name></expr>)</condition> <block pos:start="19:43" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:28">

            <expr_stmt pos:start="21:13" pos:end="21:28"><expr pos:start="21:13" pos:end="21:27"><call pos:start="21:13" pos:end="21:27"><name pos:start="21:13" pos:end="21:21">qdev_free</name><argument_list pos:start="21:22" pos:end="21:27">(<argument pos:start="21:23" pos:end="21:26"><expr pos:start="21:23" pos:end="21:26"><name pos:start="21:23" pos:end="21:26">qdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>





    <expr_stmt pos:start="31:5" pos:end="31:56"><expr pos:start="31:5" pos:end="31:55"><call pos:start="31:5" pos:end="31:55"><name pos:start="31:5" pos:end="31:17">PIIX4_DPRINTF</name><argument_list pos:start="31:18" pos:end="31:55">(<argument pos:start="31:19" pos:end="31:43"><expr pos:start="31:19" pos:end="31:43"><literal type="string" pos:start="31:19" pos:end="31:43">"pciej write %x &lt;== %d\n"</literal></expr></argument>, <argument pos:start="31:46" pos:end="31:49"><expr pos:start="31:46" pos:end="31:49"><name pos:start="31:46" pos:end="31:49">addr</name></expr></argument>, <argument pos:start="31:52" pos:end="31:54"><expr pos:start="31:52" pos:end="31:54"><name pos:start="31:52" pos:end="31:54">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
