<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25589.c" pos:tabs="8"><function pos:start="1:1" pos:end="78:13"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:37">libgsm_encode_init</name><parameter_list pos:start="1:38" pos:end="1:60">(<parameter pos:start="1:39" pos:end="1:59"><decl pos:start="1:39" pos:end="1:59"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:52">AVCodecContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">avctx</name></decl></parameter>)</parameter_list> <block pos:start="1:62" pos:end="78:13">{<block_content pos:start="3:5" pos:end="78:13">

    <if_stmt pos:start="3:5" pos:end="78:13"><if pos:start="3:5" pos:end="78:13">if <condition pos:start="3:8" pos:end="3:28">(<expr pos:start="3:9" pos:end="3:27"><name pos:start="3:9" pos:end="3:23"><name pos:start="3:9" pos:end="3:13">avctx</name><operator pos:start="3:14" pos:end="3:15">-&gt;</operator><name pos:start="3:16" pos:end="3:23">channels</name></name> <operator pos:start="3:25" pos:end="3:25">&gt;</operator> <literal type="number" pos:start="3:27" pos:end="3:27">1</literal></expr>)</condition> <block pos:start="3:30" pos:end="78:13">{<block_content pos:start="5:9" pos:end="78:13">

        <expr_stmt pos:start="5:9" pos:end="7:32"><expr pos:start="5:9" pos:end="7:31"><call pos:start="5:9" pos:end="7:31"><name pos:start="5:9" pos:end="5:14">av_log</name><argument_list pos:start="5:15" pos:end="7:31">(<argument pos:start="5:16" pos:end="5:20"><expr pos:start="5:16" pos:end="5:20"><name pos:start="5:16" pos:end="5:20">avctx</name></expr></argument>, <argument pos:start="5:23" pos:end="5:34"><expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="5:37" pos:end="5:78"><expr pos:start="5:37" pos:end="5:78"><literal type="string" pos:start="5:37" pos:end="5:78">"Mono required for GSM, got %d channels\n"</literal></expr></argument>,

               <argument pos:start="7:16" pos:end="7:30"><expr pos:start="7:16" pos:end="7:30"><name pos:start="7:16" pos:end="7:30"><name pos:start="7:16" pos:end="7:20">avctx</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:30">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="9:9" pos:end="9:18">return <expr pos:start="9:16" pos:end="9:17"><operator pos:start="9:16" pos:end="9:16">-</operator><literal type="number" pos:start="9:17" pos:end="9:17">1</literal></expr>;</return>




    <if_stmt pos:start="14:5" pos:end="78:13"><if pos:start="14:5" pos:end="78:13">if <condition pos:start="14:8" pos:end="14:35">(<expr pos:start="14:9" pos:end="14:34"><name pos:start="14:9" pos:end="14:26"><name pos:start="14:9" pos:end="14:13">avctx</name><operator pos:start="14:14" pos:end="14:15">-&gt;</operator><name pos:start="14:16" pos:end="14:26">sample_rate</name></name> <operator pos:start="14:28" pos:end="14:29">!=</operator> <literal type="number" pos:start="14:31" pos:end="14:34">8000</literal></expr>)</condition> <block pos:start="14:37" pos:end="78:13">{<block_content pos:start="16:9" pos:end="78:13">

        <expr_stmt pos:start="16:9" pos:end="18:35"><expr pos:start="16:9" pos:end="18:34"><call pos:start="16:9" pos:end="18:34"><name pos:start="16:9" pos:end="16:14">av_log</name><argument_list pos:start="16:15" pos:end="18:34">(<argument pos:start="16:16" pos:end="16:20"><expr pos:start="16:16" pos:end="16:20"><name pos:start="16:16" pos:end="16:20">avctx</name></expr></argument>, <argument pos:start="16:23" pos:end="16:34"><expr pos:start="16:23" pos:end="16:34"><name pos:start="16:23" pos:end="16:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="16:37" pos:end="16:85"><expr pos:start="16:37" pos:end="16:85"><literal type="string" pos:start="16:37" pos:end="16:85">"Sample rate 8000Hz required for GSM, got %dHz\n"</literal></expr></argument>,

               <argument pos:start="18:16" pos:end="18:33"><expr pos:start="18:16" pos:end="18:33"><name pos:start="18:16" pos:end="18:33"><name pos:start="18:16" pos:end="18:20">avctx</name><operator pos:start="18:21" pos:end="18:22">-&gt;</operator><name pos:start="18:23" pos:end="18:33">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="20:9" pos:end="22:22"><if pos:start="20:9" pos:end="22:22">if <condition pos:start="20:12" pos:end="20:68">(<expr pos:start="20:13" pos:end="20:67"><name pos:start="20:13" pos:end="20:40"><name pos:start="20:13" pos:end="20:17">avctx</name><operator pos:start="20:18" pos:end="20:19">-&gt;</operator><name pos:start="20:20" pos:end="20:40">strict_std_compliance</name></name> <operator pos:start="20:42" pos:end="20:42">&gt;</operator> <name pos:start="20:44" pos:end="20:67">FF_COMPLIANCE_UNOFFICIAL</name></expr>)</condition><block type="pseudo" pos:start="22:13" pos:end="22:22"><block_content pos:start="22:13" pos:end="22:22">

            <return pos:start="22:13" pos:end="22:22">return <expr pos:start="22:20" pos:end="22:21"><operator pos:start="22:20" pos:end="22:20">-</operator><literal type="number" pos:start="22:21" pos:end="22:21">1</literal></expr>;</return></block_content></block></if></if_stmt>


    <if_stmt pos:start="25:5" pos:end="78:13"><if pos:start="25:5" pos:end="78:13">if <condition pos:start="25:8" pos:end="29:89">(<expr pos:start="25:9" pos:end="29:28"><name pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:23">bit_rate</name></name> <operator pos:start="25:25" pos:end="25:26">!=</operator> <literal type="number" pos:start="25:28" pos:end="25:32">13000</literal> <comment type="block" pos:start="25:34" pos:end="25:47">/* Official */</comment> <operator pos:start="25:49" pos:end="25:50">&amp;&amp;</operator>

        <name pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:13">avctx</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:23">bit_rate</name></name> <operator pos:start="27:25" pos:end="27:26">!=</operator> <literal type="number" pos:start="27:28" pos:end="27:32">13200</literal> <comment type="block" pos:start="27:34" pos:end="27:50">/* Very common */</comment> <operator pos:start="27:52" pos:end="27:53">&amp;&amp;</operator>

        <name pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:13">avctx</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:23">bit_rate</name></name> <operator pos:start="29:25" pos:end="29:26">!=</operator> <literal type="number" pos:start="29:28" pos:end="29:28">0</literal></expr> <comment type="block" pos:start="29:30" pos:end="29:87">/* Unknown; a.o. mov does not set bitrate when decoding */</comment> )</condition> <block pos:start="29:91" pos:end="78:13">{<block_content pos:start="31:9" pos:end="78:13">

        <expr_stmt pos:start="31:9" pos:end="33:32"><expr pos:start="31:9" pos:end="33:31"><call pos:start="31:9" pos:end="33:31"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="33:31">(<argument pos:start="31:16" pos:end="31:20"><expr pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:20">avctx</name></expr></argument>, <argument pos:start="31:23" pos:end="31:34"><expr pos:start="31:23" pos:end="31:34"><name pos:start="31:23" pos:end="31:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:37" pos:end="31:84"><expr pos:start="31:37" pos:end="31:84"><literal type="string" pos:start="31:37" pos:end="31:84">"Bitrate 13000bps required for GSM, got %dbps\n"</literal></expr></argument>,

               <argument pos:start="33:16" pos:end="33:30"><expr pos:start="33:16" pos:end="33:30"><name pos:start="33:16" pos:end="33:30"><name pos:start="33:16" pos:end="33:20">avctx</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:30">bit_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:22"><if pos:start="35:9" pos:end="37:22">if <condition pos:start="35:12" pos:end="35:68">(<expr pos:start="35:13" pos:end="35:67"><name pos:start="35:13" pos:end="35:40"><name pos:start="35:13" pos:end="35:17">avctx</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:40">strict_std_compliance</name></name> <operator pos:start="35:42" pos:end="35:42">&gt;</operator> <name pos:start="35:44" pos:end="35:67">FF_COMPLIANCE_UNOFFICIAL</name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:22"><block_content pos:start="37:13" pos:end="37:22">

            <return pos:start="37:13" pos:end="37:22">return <expr pos:start="37:20" pos:end="37:21"><operator pos:start="37:20" pos:end="37:20">-</operator><literal type="number" pos:start="37:21" pos:end="37:21">1</literal></expr>;</return></block_content></block></if></if_stmt>




    <expr_stmt pos:start="42:5" pos:end="42:36"><expr pos:start="42:5" pos:end="42:35"><name pos:start="42:5" pos:end="42:20"><name pos:start="42:5" pos:end="42:9">avctx</name><operator pos:start="42:10" pos:end="42:11">-&gt;</operator><name pos:start="42:12" pos:end="42:20">priv_data</name></name> <operator pos:start="42:22" pos:end="42:22">=</operator> <call pos:start="42:24" pos:end="42:35"><name pos:start="42:24" pos:end="42:33">gsm_create</name><argument_list pos:start="42:34" pos:end="42:35">()</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="46:5" pos:end="78:13">switch<condition pos:start="46:11" pos:end="46:27">(<expr pos:start="46:12" pos:end="46:26"><name pos:start="46:12" pos:end="46:26"><name pos:start="46:12" pos:end="46:16">avctx</name><operator pos:start="46:17" pos:end="46:18">-&gt;</operator><name pos:start="46:19" pos:end="46:26">codec_id</name></name></expr>)</condition> <block pos:start="46:29" pos:end="78:13">{<block_content pos:start="48:5" pos:end="78:13">

    <case pos:start="48:5" pos:end="48:22">case <expr pos:start="48:10" pos:end="48:21"><name pos:start="48:10" pos:end="48:21">CODEC_ID_GSM</name></expr>:</case>

        <expr_stmt pos:start="50:9" pos:end="50:43"><expr pos:start="50:9" pos:end="50:42"><name pos:start="50:9" pos:end="50:25"><name pos:start="50:9" pos:end="50:13">avctx</name><operator pos:start="50:14" pos:end="50:15">-&gt;</operator><name pos:start="50:16" pos:end="50:25">frame_size</name></name> <operator pos:start="50:27" pos:end="50:27">=</operator> <name pos:start="50:29" pos:end="50:42">GSM_FRAME_SIZE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="52:9" pos:end="52:44"><expr pos:start="52:9" pos:end="52:43"><name pos:start="52:9" pos:end="52:26"><name pos:start="52:9" pos:end="52:13">avctx</name><operator pos:start="52:14" pos:end="52:15">-&gt;</operator><name pos:start="52:16" pos:end="52:26">block_align</name></name> <operator pos:start="52:28" pos:end="52:28">=</operator> <name pos:start="52:30" pos:end="52:43">GSM_BLOCK_SIZE</name></expr>;</expr_stmt>

        <break pos:start="54:9" pos:end="54:14">break;</break>

    <case pos:start="56:5" pos:end="56:25">case <expr pos:start="56:10" pos:end="56:24"><name pos:start="56:10" pos:end="56:24">CODEC_ID_GSM_MS</name></expr>:</case> <block pos:start="56:27" pos:end="78:13">{<block_content pos:start="58:9" pos:end="78:13">

        <decl_stmt pos:start="58:9" pos:end="58:20"><decl pos:start="58:9" pos:end="58:19"><type pos:start="58:9" pos:end="58:11"><name pos:start="58:9" pos:end="58:11">int</name></type> <name pos:start="58:13" pos:end="58:15">one</name> <init pos:start="58:17" pos:end="58:19">= <expr pos:start="58:19" pos:end="58:19"><literal type="number" pos:start="58:19" pos:end="58:19">1</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="60:9" pos:end="60:58"><expr pos:start="60:9" pos:end="60:57"><call pos:start="60:9" pos:end="60:57"><name pos:start="60:9" pos:end="60:18">gsm_option</name><argument_list pos:start="60:19" pos:end="60:57">(<argument pos:start="60:20" pos:end="60:35"><expr pos:start="60:20" pos:end="60:35"><name pos:start="60:20" pos:end="60:35"><name pos:start="60:20" pos:end="60:24">avctx</name><operator pos:start="60:25" pos:end="60:26">-&gt;</operator><name pos:start="60:27" pos:end="60:35">priv_data</name></name></expr></argument>, <argument pos:start="60:38" pos:end="60:50"><expr pos:start="60:38" pos:end="60:50"><name pos:start="60:38" pos:end="60:50">GSM_OPT_WAV49</name></expr></argument>, <argument pos:start="60:53" pos:end="60:56"><expr pos:start="60:53" pos:end="60:56"><operator pos:start="60:53" pos:end="60:53">&amp;</operator><name pos:start="60:54" pos:end="60:56">one</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="62:9" pos:end="62:45"><expr pos:start="62:9" pos:end="62:44"><name pos:start="62:9" pos:end="62:25"><name pos:start="62:9" pos:end="62:13">avctx</name><operator pos:start="62:14" pos:end="62:15">-&gt;</operator><name pos:start="62:16" pos:end="62:25">frame_size</name></name> <operator pos:start="62:27" pos:end="62:27">=</operator> <literal type="number" pos:start="62:29" pos:end="62:29">2</literal><operator pos:start="62:30" pos:end="62:30">*</operator><name pos:start="62:31" pos:end="62:44">GSM_FRAME_SIZE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="64:9" pos:end="64:47"><expr pos:start="64:9" pos:end="64:46"><name pos:start="64:9" pos:end="64:26"><name pos:start="64:9" pos:end="64:13">avctx</name><operator pos:start="64:14" pos:end="64:15">-&gt;</operator><name pos:start="64:16" pos:end="64:26">block_align</name></name> <operator pos:start="64:28" pos:end="64:28">=</operator> <name pos:start="64:30" pos:end="64:46">GSM_MS_BLOCK_SIZE</name></expr>;</expr_stmt>





    <expr_stmt pos:start="70:5" pos:end="70:46"><expr pos:start="70:5" pos:end="70:45"><name pos:start="70:5" pos:end="70:22"><name pos:start="70:5" pos:end="70:9">avctx</name><operator pos:start="70:10" pos:end="70:11">-&gt;</operator><name pos:start="70:12" pos:end="70:22">coded_frame</name></name><operator pos:start="70:23" pos:end="70:23">=</operator> <call pos:start="70:25" pos:end="70:45"><name pos:start="70:25" pos:end="70:43">avcodec_alloc_frame</name><argument_list pos:start="70:44" pos:end="70:45">()</argument_list></call></expr>;</expr_stmt>







    <return pos:start="78:5" pos:end="78:13">return <expr pos:start="78:12" pos:end="78:12"><literal type="number" pos:start="78:12" pos:end="78:12">0</literal></expr>;</return></block_content></block></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
