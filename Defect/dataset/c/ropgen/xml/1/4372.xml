<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4372.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:5"><name pos:start="1:1" pos:end="1:5">int32</name></type> <name pos:start="1:7" pos:end="1:36">float32_to_int32_round_to_zero</name><parameter_list pos:start="1:37" pos:end="1:62">( <parameter pos:start="1:39" pos:end="1:60"><decl pos:start="1:39" pos:end="1:60"><type pos:start="1:39" pos:end="1:47"><name pos:start="1:39" pos:end="1:45">float32</name> <name pos:start="1:47" pos:end="1:47">a</name></type> <name pos:start="1:49" pos:end="1:60">STATUS_PARAM</name></decl></parameter> )</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="59:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">flag</name></type> <name pos:start="5:10" pos:end="5:14">aSign</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">int16</name></type> <name pos:start="7:11" pos:end="7:14">aExp</name></decl>, <decl pos:start="7:17" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:17" pos:end="7:26">shiftCount</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:17">aSig</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">int32</name></type> <name pos:start="11:11" pos:end="11:11">z</name></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:52"><expr pos:start="13:5" pos:end="13:51"><name pos:start="13:5" pos:end="13:5">a</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <macro pos:start="13:9" pos:end="13:51"><name pos:start="13:9" pos:end="13:37">float32_squash_input_denormal</name><argument_list pos:start="13:38" pos:end="13:51">(<argument pos:start="13:39" pos:end="13:50">a STATUS_VAR</argument>)</argument_list></macro></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:8">aSig</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:34"><name pos:start="17:12" pos:end="17:29">extractFloat32Frac</name><argument_list pos:start="17:30" pos:end="17:34">( <argument pos:start="17:32" pos:end="17:32"><expr pos:start="17:32" pos:end="17:32"><name pos:start="17:32" pos:end="17:32">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:8">aExp</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:33"><name pos:start="19:12" pos:end="19:28">extractFloat32Exp</name><argument_list pos:start="19:29" pos:end="19:33">( <argument pos:start="19:31" pos:end="19:31"><expr pos:start="19:31" pos:end="19:31"><name pos:start="19:31" pos:end="19:31">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:9">aSign</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:35"><name pos:start="21:13" pos:end="21:30">extractFloat32Sign</name><argument_list pos:start="21:31" pos:end="21:35">( <argument pos:start="21:33" pos:end="21:33"><expr pos:start="21:33" pos:end="21:33"><name pos:start="21:33" pos:end="21:33">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:14">shiftCount</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:21">aExp</name> <operator pos:start="23:23" pos:end="23:23">-</operator> <literal type="number" pos:start="23:25" pos:end="23:28">0x9E</literal></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="45:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="25:26">( <expr pos:start="25:10" pos:end="25:24"><literal type="number" pos:start="25:10" pos:end="25:10">0</literal> <operator pos:start="25:12" pos:end="25:13">&lt;=</operator> <name pos:start="25:15" pos:end="25:24">shiftCount</name></expr> )</condition> <block pos:start="25:28" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:36">

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:43">( <expr pos:start="27:14" pos:end="27:41"><call pos:start="27:14" pos:end="27:27"><name pos:start="27:14" pos:end="27:24">float32_val</name><argument_list pos:start="27:25" pos:end="27:27">(<argument pos:start="27:26" pos:end="27:26"><expr pos:start="27:26" pos:end="27:26"><name pos:start="27:26" pos:end="27:26">a</name></expr></argument>)</argument_list></call> <operator pos:start="27:29" pos:end="27:30">!=</operator> <literal type="number" pos:start="27:32" pos:end="27:41">0xCF000000</literal></expr> )</condition> <block pos:start="27:45" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:77">

            <macro pos:start="29:13" pos:end="29:55"><name pos:start="29:13" pos:end="29:23">float_raise</name><argument_list pos:start="29:24" pos:end="29:55">( <argument pos:start="29:26" pos:end="29:54">float_flag_invalid STATUS_VAR</argument>)</argument_list></macro><empty_stmt pos:start="29:56" pos:end="29:56">;</empty_stmt>

            <if_stmt pos:start="31:13" pos:end="31:77"><if pos:start="31:13" pos:end="31:77">if <condition pos:start="31:16" pos:end="31:58">( <expr pos:start="31:18" pos:end="31:56"><operator pos:start="31:18" pos:end="31:18">!</operator> <name pos:start="31:20" pos:end="31:24">aSign</name> <operator pos:start="31:26" pos:end="31:27">||</operator> <operator pos:start="31:29" pos:end="31:29">(</operator> <operator pos:start="31:31" pos:end="31:31">(</operator> <name pos:start="31:33" pos:end="31:36">aExp</name> <operator pos:start="31:38" pos:end="31:39">==</operator> <literal type="number" pos:start="31:41" pos:end="31:44">0xFF</literal> <operator pos:start="31:46" pos:end="31:46">)</operator> <operator pos:start="31:48" pos:end="31:49">&amp;&amp;</operator> <name pos:start="31:51" pos:end="31:54">aSig</name> <operator pos:start="31:56" pos:end="31:56">)</operator></expr> )</condition><block type="pseudo" pos:start="31:60" pos:end="31:77"><block_content pos:start="31:60" pos:end="31:77"> <return pos:start="31:60" pos:end="31:77">return <expr pos:start="31:67" pos:end="31:76"><literal type="number" pos:start="31:67" pos:end="31:76">0x7FFFFFFF</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="35:9" pos:end="35:36">return <expr pos:start="35:16" pos:end="35:35"><operator pos:start="35:16" pos:end="35:16">(</operator><name pos:start="35:17" pos:end="35:23">int32_t</name><operator pos:start="35:24" pos:end="35:24">)</operator> <literal type="number" pos:start="35:26" pos:end="35:35">0x80000000</literal></expr>;</return>

    </block_content>}</block></if>

    <if type="elseif" pos:start="39:5" pos:end="45:5">else if <condition pos:start="39:13" pos:end="39:28">( <expr pos:start="39:15" pos:end="39:26"><name pos:start="39:15" pos:end="39:18">aExp</name> <operator pos:start="39:20" pos:end="39:21">&lt;=</operator> <literal type="number" pos:start="39:23" pos:end="39:26">0x7E</literal></expr> )</condition> <block pos:start="39:30" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:17">

        <if_stmt pos:start="41:9" pos:end="41:79"><if pos:start="41:9" pos:end="41:79">if <condition pos:start="41:12" pos:end="41:26">( <expr pos:start="41:14" pos:end="41:24"><name pos:start="41:14" pos:end="41:17">aExp</name> <operator pos:start="41:19" pos:end="41:19">|</operator> <name pos:start="41:21" pos:end="41:24">aSig</name></expr> )</condition><block type="pseudo" pos:start="41:28" pos:end="41:79"><block_content pos:start="41:28" pos:end="41:79"> <expr_stmt pos:start="41:28" pos:end="41:79"><expr pos:start="41:28" pos:end="41:78"><call pos:start="41:28" pos:end="41:56"><name pos:start="41:28" pos:end="41:33">STATUS</name><argument_list pos:start="41:34" pos:end="41:56">(<argument pos:start="41:35" pos:end="41:55"><expr pos:start="41:35" pos:end="41:55"><name pos:start="41:35" pos:end="41:55">float_exception_flags</name></expr></argument>)</argument_list></call> <operator pos:start="41:58" pos:end="41:59">|=</operator> <name pos:start="41:61" pos:end="41:78">float_flag_inexact</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="43:9" pos:end="43:17">return <expr pos:start="43:16" pos:end="43:16"><literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:36"><expr pos:start="47:5" pos:end="47:35"><name pos:start="47:5" pos:end="47:8">aSig</name> <operator pos:start="47:10" pos:end="47:10">=</operator> <operator pos:start="47:12" pos:end="47:12">(</operator> <name pos:start="47:14" pos:end="47:17">aSig</name> <operator pos:start="47:19" pos:end="47:19">|</operator> <literal type="number" pos:start="47:21" pos:end="47:30">0x00800000</literal> <operator pos:start="47:32" pos:end="47:32">)</operator><operator pos:start="47:33" pos:end="47:34">&lt;&lt;</operator><literal type="number" pos:start="47:35" pos:end="47:35">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:31"><expr pos:start="49:5" pos:end="49:30"><name pos:start="49:5" pos:end="49:5">z</name> <operator pos:start="49:7" pos:end="49:7">=</operator> <name pos:start="49:9" pos:end="49:12">aSig</name><operator pos:start="49:13" pos:end="49:14">&gt;&gt;</operator><operator pos:start="49:15" pos:end="49:15">(</operator> <operator pos:start="49:17" pos:end="49:17">-</operator> <name pos:start="49:19" pos:end="49:28">shiftCount</name> <operator pos:start="49:30" pos:end="49:30">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:51">( <expr pos:start="51:10" pos:end="51:49"><operator pos:start="51:10" pos:end="51:10">(</operator><name pos:start="51:11" pos:end="51:18">uint32_t</name><operator pos:start="51:19" pos:end="51:19">)</operator> <operator pos:start="51:21" pos:end="51:21">(</operator> <name pos:start="51:23" pos:end="51:26">aSig</name><operator pos:start="51:27" pos:end="51:28">&lt;&lt;</operator><operator pos:start="51:29" pos:end="51:29">(</operator> <name pos:start="51:31" pos:end="51:40">shiftCount</name> <operator pos:start="51:42" pos:end="51:42">&amp;</operator> <literal type="number" pos:start="51:44" pos:end="51:45">31</literal> <operator pos:start="51:47" pos:end="51:47">)</operator> <operator pos:start="51:49" pos:end="51:49">)</operator></expr> )</condition> <block pos:start="51:53" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:60">

        <expr_stmt pos:start="53:9" pos:end="53:60"><expr pos:start="53:9" pos:end="53:59"><call pos:start="53:9" pos:end="53:37"><name pos:start="53:9" pos:end="53:14">STATUS</name><argument_list pos:start="53:15" pos:end="53:37">(<argument pos:start="53:16" pos:end="53:36"><expr pos:start="53:16" pos:end="53:36"><name pos:start="53:16" pos:end="53:36">float_exception_flags</name></expr></argument>)</argument_list></call> <operator pos:start="53:39" pos:end="53:40">|=</operator> <name pos:start="53:42" pos:end="53:59">float_flag_inexact</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="57:25"><if pos:start="57:5" pos:end="57:25">if <condition pos:start="57:8" pos:end="57:16">( <expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:14">aSign</name></expr> )</condition><block type="pseudo" pos:start="57:18" pos:end="57:25"><block_content pos:start="57:18" pos:end="57:25"> <expr_stmt pos:start="57:18" pos:end="57:25"><expr pos:start="57:18" pos:end="57:24"><name pos:start="57:18" pos:end="57:18">z</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <operator pos:start="57:22" pos:end="57:22">-</operator> <name pos:start="57:24" pos:end="57:24">z</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><name pos:start="59:12" pos:end="59:12">z</name></expr>;</return>



</block_content>}</block></function>
</unit>
