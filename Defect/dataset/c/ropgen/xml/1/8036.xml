<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8036.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:42">monitor_protocol_event_handler</name><parameter_list pos:start="1:43" pos:end="1:56">(<parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:49"><name pos:start="1:44" pos:end="1:47">void</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:55">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:49">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">MonitorEventState</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:30">evstate</name> <init pos:start="5:32" pos:end="5:39">= <expr pos:start="5:34" pos:end="5:39"><name pos:start="5:34" pos:end="5:39">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:57"><decl pos:start="7:5" pos:end="7:56"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">now</name> <init pos:start="7:17" pos:end="7:56">= <expr pos:start="7:19" pos:end="7:56"><call pos:start="7:19" pos:end="7:56"><name pos:start="7:19" pos:end="7:35">qemu_clock_get_ns</name><argument_list pos:start="7:36" pos:end="7:56">(<argument pos:start="7:37" pos:end="7:55"><expr pos:start="7:37" pos:end="7:55"><name pos:start="7:37" pos:end="7:55">QEMU_CLOCK_REALTIME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:47"><expr pos:start="11:5" pos:end="11:46"><call pos:start="11:5" pos:end="11:46"><name pos:start="11:5" pos:end="11:19">qemu_mutex_lock</name><argument_list pos:start="11:20" pos:end="11:46">(<argument pos:start="11:21" pos:end="11:45"><expr pos:start="11:21" pos:end="11:45"><operator pos:start="11:21" pos:end="11:21">&amp;</operator><name pos:start="11:22" pos:end="11:45">monitor_event_state_lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="21:46"><expr pos:start="15:5" pos:end="21:45"><call pos:start="15:5" pos:end="21:45"><name pos:start="15:5" pos:end="15:40">trace_monitor_protocol_event_handler</name><argument_list pos:start="15:41" pos:end="21:45">(<argument pos:start="15:42" pos:end="15:55"><expr pos:start="15:42" pos:end="15:55"><name pos:start="15:42" pos:end="15:55"><name pos:start="15:42" pos:end="15:48">evstate</name><operator pos:start="15:49" pos:end="15:50">-&gt;</operator><name pos:start="15:51" pos:end="15:55">event</name></name></expr></argument>,

                                         <argument pos:start="17:42" pos:end="17:54"><expr pos:start="17:42" pos:end="17:54"><name pos:start="17:42" pos:end="17:54"><name pos:start="17:42" pos:end="17:48">evstate</name><operator pos:start="17:49" pos:end="17:50">-&gt;</operator><name pos:start="17:51" pos:end="17:54">data</name></name></expr></argument>,

                                         <argument pos:start="19:42" pos:end="19:54"><expr pos:start="19:42" pos:end="19:54"><name pos:start="19:42" pos:end="19:54"><name pos:start="19:42" pos:end="19:48">evstate</name><operator pos:start="19:49" pos:end="19:50">-&gt;</operator><name pos:start="19:51" pos:end="19:54">last</name></name></expr></argument>,

                                         <argument pos:start="21:42" pos:end="21:44"><expr pos:start="21:42" pos:end="21:44"><name pos:start="21:42" pos:end="21:44">now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:22">(<expr pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:15">evstate</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:21">data</name></name></expr>)</condition> <block pos:start="23:24" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:29">

        <expr_stmt pos:start="25:9" pos:end="25:67"><expr pos:start="25:9" pos:end="25:66"><call pos:start="25:9" pos:end="25:66"><name pos:start="25:9" pos:end="25:35">monitor_protocol_event_emit</name><argument_list pos:start="25:36" pos:end="25:66">(<argument pos:start="25:37" pos:end="25:50"><expr pos:start="25:37" pos:end="25:50"><name pos:start="25:37" pos:end="25:50"><name pos:start="25:37" pos:end="25:43">evstate</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:50">event</name></name></expr></argument>, <argument pos:start="25:53" pos:end="25:65"><expr pos:start="25:53" pos:end="25:65"><name pos:start="25:53" pos:end="25:65"><name pos:start="25:53" pos:end="25:59">evstate</name><operator pos:start="25:60" pos:end="25:61">-&gt;</operator><name pos:start="25:62" pos:end="25:65">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:38"><expr pos:start="27:9" pos:end="27:37"><call pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:22">qobject_decref</name><argument_list pos:start="27:23" pos:end="27:37">(<argument pos:start="27:24" pos:end="27:36"><expr pos:start="27:24" pos:end="27:36"><name pos:start="27:24" pos:end="27:36"><name pos:start="27:24" pos:end="27:30">evstate</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:36">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:29"><expr pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:15">evstate</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:21">data</name></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:28">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:24"><expr pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:11">evstate</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:17">last</name></name> <operator pos:start="33:19" pos:end="33:19">=</operator> <name pos:start="33:21" pos:end="33:23">now</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:49"><expr pos:start="35:5" pos:end="35:48"><call pos:start="35:5" pos:end="35:48"><name pos:start="35:5" pos:end="35:21">qemu_mutex_unlock</name><argument_list pos:start="35:22" pos:end="35:48">(<argument pos:start="35:23" pos:end="35:47"><expr pos:start="35:23" pos:end="35:47"><operator pos:start="35:23" pos:end="35:23">&amp;</operator><name pos:start="35:24" pos:end="35:47">monitor_event_state_lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
