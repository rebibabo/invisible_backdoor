<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20786.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">bdrv_inactivate_recurse</name><parameter_list pos:start="1:35" pos:end="3:53">(<parameter pos:start="1:36" pos:end="1:55"><decl pos:start="1:36" pos:end="1:55"><type pos:start="1:36" pos:end="1:55"><name pos:start="1:36" pos:end="1:51">BlockDriverState</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">bs</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:52"><decl pos:start="3:36" pos:end="3:52"><type pos:start="3:36" pos:end="3:52"><name pos:start="3:36" pos:end="3:39">bool</name></type> <name pos:start="3:41" pos:end="3:52">setting_flag</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:13">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">BdrvChild</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:20">child</name></decl>, <decl pos:start="7:23" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:15"><modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:29">parent</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="23:5"><if pos:start="13:5" pos:end="23:5">if <condition pos:start="13:8" pos:end="13:50">(<expr pos:start="13:9" pos:end="13:49"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:21">setting_flag</name> <operator pos:start="13:23" pos:end="13:24">&amp;&amp;</operator> <name pos:start="13:26" pos:end="13:49"><name pos:start="13:26" pos:end="13:27">bs</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:32">drv</name><operator pos:start="13:33" pos:end="13:34">-&gt;</operator><name pos:start="13:35" pos:end="13:49">bdrv_inactivate</name></name></expr>)</condition> <block pos:start="13:52" pos:end="23:5">{<block_content pos:start="15:9" pos:end="21:9">

        <expr_stmt pos:start="15:9" pos:end="15:43"><expr pos:start="15:9" pos:end="15:42"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:42"><name pos:start="15:15" pos:end="15:38"><name pos:start="15:15" pos:end="15:16">bs</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:21">drv</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:38">bdrv_inactivate</name></name><argument_list pos:start="15:39" pos:end="15:42">(<argument pos:start="15:40" pos:end="15:41"><expr pos:start="15:40" pos:end="15:41"><name pos:start="15:40" pos:end="15:41">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:20">(<expr pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:15">ret</name> <operator pos:start="17:17" pos:end="17:17">&lt;</operator> <literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr>)</condition> <block pos:start="17:22" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:23">

            <return pos:start="19:13" pos:end="19:23">return <expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="65:5"><if pos:start="27:5" pos:end="65:5">if <condition pos:start="27:8" pos:end="27:21">(<expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:20">setting_flag</name></expr>)</condition> <block pos:start="27:23" pos:end="65:5">{<block_content pos:start="29:9" pos:end="63:45">

        <decl_stmt pos:start="29:9" pos:end="29:35"><decl pos:start="29:9" pos:end="29:21"><type pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:16">uint64_t</name></type> <name pos:start="29:18" pos:end="29:21">perm</name></decl>, <decl pos:start="29:24" pos:end="29:34"><type ref="prev" pos:start="29:9" pos:end="29:16"/><name pos:start="29:24" pos:end="29:34">shared_perm</name></decl>;</decl_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:42"><expr pos:start="33:9" pos:end="33:41"><name pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:10">bs</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:22">open_flags</name></name> <operator pos:start="33:24" pos:end="33:25">|=</operator> <name pos:start="33:27" pos:end="33:41">BDRV_O_INACTIVE</name></expr>;</expr_stmt>



        <macro pos:start="37:9" pos:end="37:56"><name pos:start="37:9" pos:end="37:21">QLIST_FOREACH</name><argument_list pos:start="37:22" pos:end="37:56">(<argument pos:start="37:23" pos:end="37:28">parent</argument>, <argument pos:start="37:31" pos:end="37:42">&amp;bs-&gt;parents</argument>, <argument pos:start="37:45" pos:end="37:55">next_parent</argument>)</argument_list></macro> <block pos:start="37:58" pos:end="53:9">{<block_content pos:start="39:13" pos:end="51:13">

            <if_stmt pos:start="39:13" pos:end="51:13"><if pos:start="39:13" pos:end="51:13">if <condition pos:start="39:16" pos:end="39:41">(<expr pos:start="39:17" pos:end="39:40"><name pos:start="39:17" pos:end="39:40"><name pos:start="39:17" pos:end="39:22">parent</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:28">role</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:40">inactivate</name></name></expr>)</condition> <block pos:start="39:43" pos:end="51:13">{<block_content pos:start="41:17" pos:end="49:17">

                <expr_stmt pos:start="41:17" pos:end="41:55"><expr pos:start="41:17" pos:end="41:54"><name pos:start="41:17" pos:end="41:19">ret</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <call pos:start="41:23" pos:end="41:54"><name pos:start="41:23" pos:end="41:46"><name pos:start="41:23" pos:end="41:28">parent</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:34">role</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:46">inactivate</name></name><argument_list pos:start="41:47" pos:end="41:54">(<argument pos:start="41:48" pos:end="41:53"><expr pos:start="41:48" pos:end="41:53"><name pos:start="41:48" pos:end="41:53">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="43:17" pos:end="49:17"><if pos:start="43:17" pos:end="49:17">if <condition pos:start="43:20" pos:end="43:28">(<expr pos:start="43:21" pos:end="43:27"><name pos:start="43:21" pos:end="43:23">ret</name> <operator pos:start="43:25" pos:end="43:25">&lt;</operator> <literal type="number" pos:start="43:27" pos:end="43:27">0</literal></expr>)</condition> <block pos:start="43:30" pos:end="49:17">{<block_content pos:start="45:21" pos:end="47:31">

                    <expr_stmt pos:start="45:21" pos:end="45:55"><expr pos:start="45:21" pos:end="45:54"><name pos:start="45:21" pos:end="45:34"><name pos:start="45:21" pos:end="45:22">bs</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:34">open_flags</name></name> <operator pos:start="45:36" pos:end="45:37">&amp;=</operator> <operator pos:start="45:39" pos:end="45:39">~</operator><name pos:start="45:40" pos:end="45:54">BDRV_O_INACTIVE</name></expr>;</expr_stmt>

                    <return pos:start="47:21" pos:end="47:31">return <expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:30">ret</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>



        <comment type="block" pos:start="57:9" pos:end="57:68">/* Update permissions, they may differ for inactive nodes */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:58"><expr pos:start="59:9" pos:end="59:57"><call pos:start="59:9" pos:end="59:57"><name pos:start="59:9" pos:end="59:32">bdrv_get_cumulative_perm</name><argument_list pos:start="59:33" pos:end="59:57">(<argument pos:start="59:34" pos:end="59:35"><expr pos:start="59:34" pos:end="59:35"><name pos:start="59:34" pos:end="59:35">bs</name></expr></argument>, <argument pos:start="59:38" pos:end="59:42"><expr pos:start="59:38" pos:end="59:42"><operator pos:start="59:38" pos:end="59:38">&amp;</operator><name pos:start="59:39" pos:end="59:42">perm</name></expr></argument>, <argument pos:start="59:45" pos:end="59:56"><expr pos:start="59:45" pos:end="59:56"><operator pos:start="59:45" pos:end="59:45">&amp;</operator><name pos:start="59:46" pos:end="59:56">shared_perm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:67"><expr pos:start="61:9" pos:end="61:66"><call pos:start="61:9" pos:end="61:66"><name pos:start="61:9" pos:end="61:23">bdrv_check_perm</name><argument_list pos:start="61:24" pos:end="61:66">(<argument pos:start="61:25" pos:end="61:26"><expr pos:start="61:25" pos:end="61:26"><name pos:start="61:25" pos:end="61:26">bs</name></expr></argument>, <argument pos:start="61:29" pos:end="61:32"><expr pos:start="61:29" pos:end="61:32"><name pos:start="61:29" pos:end="61:32">perm</name></expr></argument>, <argument pos:start="61:35" pos:end="61:45"><expr pos:start="61:35" pos:end="61:45"><name pos:start="61:35" pos:end="61:45">shared_perm</name></expr></argument>, <argument pos:start="61:48" pos:end="61:51"><expr pos:start="61:48" pos:end="61:51"><name pos:start="61:48" pos:end="61:51">NULL</name></expr></argument>, <argument pos:start="61:54" pos:end="61:65"><expr pos:start="61:54" pos:end="61:65"><operator pos:start="61:54" pos:end="61:54">&amp;</operator><name pos:start="61:55" pos:end="61:65">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:45"><expr pos:start="63:9" pos:end="63:44"><call pos:start="63:9" pos:end="63:44"><name pos:start="63:9" pos:end="63:21">bdrv_set_perm</name><argument_list pos:start="63:22" pos:end="63:44">(<argument pos:start="63:23" pos:end="63:24"><expr pos:start="63:23" pos:end="63:24"><name pos:start="63:23" pos:end="63:24">bs</name></expr></argument>, <argument pos:start="63:27" pos:end="63:30"><expr pos:start="63:27" pos:end="63:30"><name pos:start="63:27" pos:end="63:30">perm</name></expr></argument>, <argument pos:start="63:33" pos:end="63:43"><expr pos:start="63:33" pos:end="63:43"><name pos:start="63:33" pos:end="63:43">shared_perm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <macro pos:start="69:5" pos:end="69:45"><name pos:start="69:5" pos:end="69:17">QLIST_FOREACH</name><argument_list pos:start="69:18" pos:end="69:45">(<argument pos:start="69:19" pos:end="69:23">child</argument>, <argument pos:start="69:26" pos:end="69:38">&amp;bs-&gt;children</argument>, <argument pos:start="69:41" pos:end="69:44">next</argument>)</argument_list></macro> <block pos:start="69:47" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:9">

        <expr_stmt pos:start="71:9" pos:end="71:63"><expr pos:start="71:9" pos:end="71:62"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="71:62"><name pos:start="71:15" pos:end="71:37">bdrv_inactivate_recurse</name><argument_list pos:start="71:38" pos:end="71:62">(<argument pos:start="71:39" pos:end="71:47"><expr pos:start="71:39" pos:end="71:47"><name pos:start="71:39" pos:end="71:47"><name pos:start="71:39" pos:end="71:43">child</name><operator pos:start="71:44" pos:end="71:45">-&gt;</operator><name pos:start="71:46" pos:end="71:47">bs</name></name></expr></argument>, <argument pos:start="71:50" pos:end="71:61"><expr pos:start="71:50" pos:end="71:61"><name pos:start="71:50" pos:end="71:61">setting_flag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="77:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:20">(<expr pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:15">ret</name> <operator pos:start="73:17" pos:end="73:17">&lt;</operator> <literal type="number" pos:start="73:19" pos:end="73:19">0</literal></expr>)</condition> <block pos:start="73:22" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:23">

            <return pos:start="75:13" pos:end="75:23">return <expr pos:start="75:20" pos:end="75:22"><name pos:start="75:20" pos:end="75:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <comment type="block" pos:start="83:5" pos:end="85:16">/* At this point persistent bitmaps should be already stored by the format

     * driver */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:46"><expr pos:start="87:5" pos:end="87:45"><call pos:start="87:5" pos:end="87:45"><name pos:start="87:5" pos:end="87:41">bdrv_release_persistent_dirty_bitmaps</name><argument_list pos:start="87:42" pos:end="87:45">(<argument pos:start="87:43" pos:end="87:44"><expr pos:start="87:43" pos:end="87:44"><name pos:start="87:43" pos:end="87:44">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="91:5" pos:end="91:13">return <expr pos:start="91:12" pos:end="91:12"><literal type="number" pos:start="91:12" pos:end="91:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
