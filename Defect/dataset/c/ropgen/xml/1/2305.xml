<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2305.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">e1000_reset</name><parameter_list pos:start="1:24" pos:end="1:37">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:30"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:5">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">E1000State</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">d</name> <init pos:start="5:19" pos:end="5:26">= <expr pos:start="5:21" pos:end="5:26"><name pos:start="5:21" pos:end="5:26">opaque</name></expr></init></decl>;</decl_stmt>





    <expr_stmt pos:start="11:5" pos:end="11:37"><expr pos:start="11:5" pos:end="11:36"><call pos:start="11:5" pos:end="11:36"><name pos:start="11:5" pos:end="11:18">qemu_del_timer</name><argument_list pos:start="11:19" pos:end="11:36">(<argument pos:start="11:20" pos:end="11:35"><expr pos:start="11:20" pos:end="11:35"><name pos:start="11:20" pos:end="11:35"><name pos:start="11:20" pos:end="11:20">d</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:35">autoneg_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:45"><expr pos:start="13:5" pos:end="13:44"><call pos:start="13:5" pos:end="13:44"><name pos:start="13:5" pos:end="13:10">memset</name><argument_list pos:start="13:11" pos:end="13:44">(<argument pos:start="13:12" pos:end="13:21"><expr pos:start="13:12" pos:end="13:21"><name pos:start="13:12" pos:end="13:21"><name pos:start="13:12" pos:end="13:12">d</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:21">phy_reg</name></name></expr></argument>, <argument pos:start="13:24" pos:end="13:24"><expr pos:start="13:24" pos:end="13:24"><literal type="number" pos:start="13:24" pos:end="13:24">0</literal></expr></argument>, <argument pos:start="13:27" pos:end="13:43"><expr pos:start="13:27" pos:end="13:43"><sizeof pos:start="13:27" pos:end="13:43">sizeof <name pos:start="13:34" pos:end="13:43"><name pos:start="13:34" pos:end="13:34">d</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:43">phy_reg</name></name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:59"><expr pos:start="15:5" pos:end="15:58"><call pos:start="15:5" pos:end="15:58"><name pos:start="15:5" pos:end="15:11">memmove</name><argument_list pos:start="15:12" pos:end="15:58">(<argument pos:start="15:13" pos:end="15:22"><expr pos:start="15:13" pos:end="15:22"><name pos:start="15:13" pos:end="15:22"><name pos:start="15:13" pos:end="15:13">d</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:22">phy_reg</name></name></expr></argument>, <argument pos:start="15:25" pos:end="15:36"><expr pos:start="15:25" pos:end="15:36"><name pos:start="15:25" pos:end="15:36">phy_reg_init</name></expr></argument>, <argument pos:start="15:39" pos:end="15:57"><expr pos:start="15:39" pos:end="15:57"><sizeof pos:start="15:39" pos:end="15:57">sizeof <name pos:start="15:46" pos:end="15:57">phy_reg_init</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><call pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:44">(<argument pos:start="17:12" pos:end="17:21"><expr pos:start="17:12" pos:end="17:21"><name pos:start="17:12" pos:end="17:21"><name pos:start="17:12" pos:end="17:12">d</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:21">mac_reg</name></name></expr></argument>, <argument pos:start="17:24" pos:end="17:24"><expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">0</literal></expr></argument>, <argument pos:start="17:27" pos:end="17:43"><expr pos:start="17:27" pos:end="17:43"><sizeof pos:start="17:27" pos:end="17:43">sizeof <name pos:start="17:34" pos:end="17:43"><name pos:start="17:34" pos:end="17:34">d</name><operator pos:start="17:35" pos:end="17:36">-&gt;</operator><name pos:start="17:37" pos:end="17:43">mac_reg</name></name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:59"><expr pos:start="19:5" pos:end="19:58"><call pos:start="19:5" pos:end="19:58"><name pos:start="19:5" pos:end="19:11">memmove</name><argument_list pos:start="19:12" pos:end="19:58">(<argument pos:start="19:13" pos:end="19:22"><expr pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:13">d</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:22">mac_reg</name></name></expr></argument>, <argument pos:start="19:25" pos:end="19:36"><expr pos:start="19:25" pos:end="19:36"><name pos:start="19:25" pos:end="19:36">mac_reg_init</name></expr></argument>, <argument pos:start="19:39" pos:end="19:57"><expr pos:start="19:39" pos:end="19:57"><sizeof pos:start="19:39" pos:end="19:57">sizeof <name pos:start="19:46" pos:end="19:57">mac_reg_init</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:5">d</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:22">rxbuf_min_shift</name></name> <operator pos:start="21:24" pos:end="21:24">=</operator> <literal type="number" pos:start="21:26" pos:end="21:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><call pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:10">memset</name><argument_list pos:start="23:11" pos:end="23:35">(<argument pos:start="23:12" pos:end="23:17"><expr pos:start="23:12" pos:end="23:17"><operator pos:start="23:12" pos:end="23:12">&amp;</operator><name pos:start="23:13" pos:end="23:17"><name pos:start="23:13" pos:end="23:13">d</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:17">tx</name></name></expr></argument>, <argument pos:start="23:20" pos:end="23:20"><expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr></argument>, <argument pos:start="23:23" pos:end="23:34"><expr pos:start="23:23" pos:end="23:34"><sizeof pos:start="23:23" pos:end="23:34">sizeof <name pos:start="23:30" pos:end="23:34"><name pos:start="23:30" pos:end="23:30">d</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:34">tx</name></name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:29">(<expr pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:9">d</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:14">nic</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:18">nc</name><operator pos:start="27:19" pos:end="27:19">.</operator><name pos:start="27:20" pos:end="27:28">link_down</name></name></expr>)</condition> <block pos:start="27:31" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:27">

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><call pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:23">e1000_link_down</name><argument_list pos:start="29:24" pos:end="29:26">(<argument pos:start="29:25" pos:end="29:25"><expr pos:start="29:25" pos:end="29:25"><name pos:start="29:25" pos:end="29:25">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:79">/* Some guests expect pre-initialized RAH/RAL (AddrValid flag + MACaddr) */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:23"><expr pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:5">d</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:14">mac_reg</name><index pos:start="37:15" pos:end="37:18">[<expr pos:start="37:16" pos:end="37:17"><name pos:start="37:16" pos:end="37:17">RA</name></expr>]</index></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:38"><expr pos:start="39:5" pos:end="39:37"><name pos:start="39:5" pos:end="39:22"><name pos:start="39:5" pos:end="39:5">d</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:14">mac_reg</name><index pos:start="39:15" pos:end="39:22">[<expr pos:start="39:16" pos:end="39:21"><name pos:start="39:16" pos:end="39:17">RA</name> <operator pos:start="39:19" pos:end="39:19">+</operator> <literal type="number" pos:start="39:21" pos:end="39:21">1</literal></expr>]</index></name> <operator pos:start="39:24" pos:end="39:24">=</operator> <name pos:start="39:26" pos:end="39:37">E1000_RAH_AV</name></expr>;</expr_stmt>

    <for pos:start="41:5" pos:end="47:5">for <control pos:start="41:9" pos:end="41:27">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:22"><expr pos:start="41:17" pos:end="41:21"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <literal type="number" pos:start="41:21" pos:end="41:21">4</literal></expr>;</condition> <incr pos:start="41:24" pos:end="41:26"><expr pos:start="41:24" pos:end="41:26"><name pos:start="41:24" pos:end="41:24">i</name><operator pos:start="41:25" pos:end="41:26">++</operator></expr></incr>)</control> <block pos:start="41:29" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:70">

        <expr_stmt pos:start="43:9" pos:end="43:48"><expr pos:start="43:9" pos:end="43:47"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:9">d</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:18">mac_reg</name><index pos:start="43:19" pos:end="43:22">[<expr pos:start="43:20" pos:end="43:21"><name pos:start="43:20" pos:end="43:21">RA</name></expr>]</index></name> <operator pos:start="43:24" pos:end="43:25">|=</operator> <name pos:start="43:27" pos:end="43:36"><name pos:start="43:27" pos:end="43:33">macaddr</name><index pos:start="43:34" pos:end="43:36">[<expr pos:start="43:35" pos:end="43:35"><name pos:start="43:35" pos:end="43:35">i</name></expr>]</index></name> <operator pos:start="43:38" pos:end="43:39">&lt;&lt;</operator> <operator pos:start="43:41" pos:end="43:41">(</operator><literal type="number" pos:start="43:42" pos:end="43:42">8</literal> <operator pos:start="43:44" pos:end="43:44">*</operator> <name pos:start="43:46" pos:end="43:46">i</name><operator pos:start="43:47" pos:end="43:47">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:70"><expr pos:start="45:9" pos:end="45:69"><name pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:9">d</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:18">mac_reg</name><index pos:start="45:19" pos:end="45:26">[<expr pos:start="45:20" pos:end="45:25"><name pos:start="45:20" pos:end="45:21">RA</name> <operator pos:start="45:23" pos:end="45:23">+</operator> <literal type="number" pos:start="45:25" pos:end="45:25">1</literal></expr>]</index></name> <operator pos:start="45:28" pos:end="45:29">|=</operator> <ternary pos:start="45:31" pos:end="45:69"><condition pos:start="45:31" pos:end="45:39"><expr pos:start="45:31" pos:end="45:37"><operator pos:start="45:31" pos:end="45:31">(</operator><name pos:start="45:32" pos:end="45:32">i</name> <operator pos:start="45:34" pos:end="45:34">&lt;</operator> <literal type="number" pos:start="45:36" pos:end="45:36">2</literal><operator pos:start="45:37" pos:end="45:37">)</operator></expr> ?</condition><then pos:start="45:41" pos:end="45:65"> <expr pos:start="45:41" pos:end="45:65"><name pos:start="45:41" pos:end="45:54"><name pos:start="45:41" pos:end="45:47">macaddr</name><index pos:start="45:48" pos:end="45:54">[<expr pos:start="45:49" pos:end="45:53"><name pos:start="45:49" pos:end="45:49">i</name> <operator pos:start="45:51" pos:end="45:51">+</operator> <literal type="number" pos:start="45:53" pos:end="45:53">4</literal></expr>]</index></name> <operator pos:start="45:56" pos:end="45:57">&lt;&lt;</operator> <operator pos:start="45:59" pos:end="45:59">(</operator><literal type="number" pos:start="45:60" pos:end="45:60">8</literal> <operator pos:start="45:62" pos:end="45:62">*</operator> <name pos:start="45:64" pos:end="45:64">i</name><operator pos:start="45:65" pos:end="45:65">)</operator></expr> </then><else pos:start="45:67" pos:end="45:69">: <expr pos:start="45:69" pos:end="45:69"><literal type="number" pos:start="45:69" pos:end="45:69">0</literal></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function></unit>
