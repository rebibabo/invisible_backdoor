<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24024.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:21">MigrationState</name> <modifier pos:start="1:23" pos:end="1:23">*</modifier></type><name pos:start="1:24" pos:end="1:35">migrate_init</name><parameter_list pos:start="1:36" pos:end="1:66">(<parameter pos:start="1:37" pos:end="1:65"><decl pos:start="1:37" pos:end="1:65"><type pos:start="1:37" pos:end="1:59"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:57">MigrationParams</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:65">params</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MigrationState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:45">= <expr pos:start="5:25" pos:end="5:45"><call pos:start="5:25" pos:end="5:45"><name pos:start="5:25" pos:end="5:43">migrate_get_current</name><argument_list pos:start="5:44" pos:end="5:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:27">bandwidth_limit</name> <init pos:start="7:29" pos:end="7:48">= <expr pos:start="7:31" pos:end="7:48"><name pos:start="7:31" pos:end="7:48"><name pos:start="7:31" pos:end="7:31">s</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:48">bandwidth_limit</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:56"><decl pos:start="9:5" pos:end="9:55"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:55"><name pos:start="9:10" pos:end="9:29">enabled_capabilities</name><index pos:start="9:30" pos:end="9:55">[<expr pos:start="9:31" pos:end="9:54"><name pos:start="9:31" pos:end="9:54">MIGRATION_CAPABILITY_MAX</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:53"><decl pos:start="11:5" pos:end="11:52"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:29">xbzrle_cache_size</name> <init pos:start="11:31" pos:end="11:52">= <expr pos:start="11:33" pos:end="11:52"><name pos:start="11:33" pos:end="11:52"><name pos:start="11:33" pos:end="11:33">s</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:52">xbzrle_cache_size</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="17:41"><expr pos:start="15:5" pos:end="17:40"><call pos:start="15:5" pos:end="17:40"><name pos:start="15:5" pos:end="15:10">memcpy</name><argument_list pos:start="15:11" pos:end="17:40">(<argument pos:start="15:12" pos:end="15:31"><expr pos:start="15:12" pos:end="15:31"><name pos:start="15:12" pos:end="15:31">enabled_capabilities</name></expr></argument>, <argument pos:start="15:34" pos:end="15:56"><expr pos:start="15:34" pos:end="15:56"><name pos:start="15:34" pos:end="15:56"><name pos:start="15:34" pos:end="15:34">s</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:56">enabled_capabilities</name></name></expr></argument>,

           <argument pos:start="17:12" pos:end="17:39"><expr pos:start="17:12" pos:end="17:39"><sizeof pos:start="17:12" pos:end="17:39">sizeof<argument_list pos:start="17:18" pos:end="17:39">(<argument pos:start="17:19" pos:end="17:38"><expr pos:start="17:19" pos:end="17:38"><name pos:start="17:19" pos:end="17:38">enabled_capabilities</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><call pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:10">memset</name><argument_list pos:start="21:11" pos:end="21:28">(<argument pos:start="21:12" pos:end="21:12"><expr pos:start="21:12" pos:end="21:12"><name pos:start="21:12" pos:end="21:12">s</name></expr></argument>, <argument pos:start="21:15" pos:end="21:15"><expr pos:start="21:15" pos:end="21:15"><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr></argument>, <argument pos:start="21:18" pos:end="21:27"><expr pos:start="21:18" pos:end="21:27"><sizeof pos:start="21:18" pos:end="21:27">sizeof<argument_list pos:start="21:24" pos:end="21:27">(<argument pos:start="21:25" pos:end="21:26"><expr pos:start="21:25" pos:end="21:26"><operator pos:start="21:25" pos:end="21:25">*</operator><name pos:start="21:26" pos:end="21:26">s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:13">params</name></name> <operator pos:start="23:15" pos:end="23:15">=</operator> <operator pos:start="23:17" pos:end="23:17">*</operator><name pos:start="23:18" pos:end="23:23">params</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:41"><expr pos:start="25:5" pos:end="27:40"><call pos:start="25:5" pos:end="27:40"><name pos:start="25:5" pos:end="25:10">memcpy</name><argument_list pos:start="25:11" pos:end="27:40">(<argument pos:start="25:12" pos:end="25:34"><expr pos:start="25:12" pos:end="25:34"><name pos:start="25:12" pos:end="25:34"><name pos:start="25:12" pos:end="25:12">s</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:34">enabled_capabilities</name></name></expr></argument>, <argument pos:start="25:37" pos:end="25:56"><expr pos:start="25:37" pos:end="25:56"><name pos:start="25:37" pos:end="25:56">enabled_capabilities</name></expr></argument>,

           <argument pos:start="27:12" pos:end="27:39"><expr pos:start="27:12" pos:end="27:39"><sizeof pos:start="27:12" pos:end="27:39">sizeof<argument_list pos:start="27:18" pos:end="27:39">(<argument pos:start="27:19" pos:end="27:38"><expr pos:start="27:19" pos:end="27:38"><name pos:start="27:19" pos:end="27:38">enabled_capabilities</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:24">xbzrle_cache_size</name></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <name pos:start="29:28" pos:end="29:44">xbzrle_cache_size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:22">bandwidth_limit</name></name> <operator pos:start="33:24" pos:end="33:24">=</operator> <name pos:start="33:26" pos:end="33:40">bandwidth_limit</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:31"><expr pos:start="35:5" pos:end="35:30"><name pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:12">state</name></name> <operator pos:start="35:14" pos:end="35:14">=</operator> <name pos:start="35:16" pos:end="35:30">MIG_STATE_SETUP</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:45"><expr pos:start="37:5" pos:end="37:44"><call pos:start="37:5" pos:end="37:44"><name pos:start="37:5" pos:end="37:27">trace_migrate_set_state</name><argument_list pos:start="37:28" pos:end="37:44">(<argument pos:start="37:29" pos:end="37:43"><expr pos:start="37:29" pos:end="37:43"><name pos:start="37:29" pos:end="37:43">MIG_STATE_SETUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:59"><expr pos:start="41:5" pos:end="41:58"><name pos:start="41:5" pos:end="41:17"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:17">total_time</name></name> <operator pos:start="41:19" pos:end="41:19">=</operator> <call pos:start="41:21" pos:end="41:58"><name pos:start="41:21" pos:end="41:37">qemu_clock_get_ms</name><argument_list pos:start="41:38" pos:end="41:58">(<argument pos:start="41:39" pos:end="41:57"><expr pos:start="41:39" pos:end="41:57"><name pos:start="41:39" pos:end="41:57">QEMU_CLOCK_REALTIME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><name pos:start="43:12" pos:end="43:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
