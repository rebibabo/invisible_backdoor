<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17802.c" pos:tabs="8"><function pos:start="1:1" pos:end="983:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">ff_vc1_parse_frame_header_adv</name><parameter_list pos:start="1:34" pos:end="1:67">(<parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:44">VC1Context</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">v</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:66"><decl pos:start="1:50" pos:end="1:66"><type pos:start="1:50" pos:end="1:66"><name pos:start="1:50" pos:end="1:62">GetBitContext</name><modifier pos:start="1:63" pos:end="1:63">*</modifier></type> <name pos:start="1:65" pos:end="1:66">gb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="983:1">{<block_content pos:start="5:5" pos:end="981:13">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:15">pqindex</name></decl>, <decl pos:start="5:18" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:25">lowquant</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:60"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">mbmodetab</name></decl>, <decl pos:start="9:20" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:25">imvtab</name></decl>, <decl pos:start="9:28" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:34">icbptab</name></decl>, <decl pos:start="9:37" pos:end="9:46"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:37" pos:end="9:46">twomvbptab</name></decl>, <decl pos:start="9:49" pos:end="9:59"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:49" pos:end="9:59">fourmvbptab</name></decl>;</decl_stmt> <comment type="block" pos:start="9:62" pos:end="9:92">/* useful only for debugging */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">field_mode</name></decl>, <decl pos:start="11:21" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:23">fcm</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:5">v</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:13">numref</name></name>          <operator pos:start="15:24" pos:end="15:24">=</operator> <literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:5">v</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:22">p_frame_skipped</name></name> <operator pos:start="17:24" pos:end="17:24">=</operator> <literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="33:5"><if pos:start="19:5" pos:end="33:5">if <condition pos:start="19:8" pos:end="19:24">(<expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:9">v</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:23">second_field</name></name></expr>)</condition> <block pos:start="19:26" pos:end="33:5">{<block_content pos:start="21:9" pos:end="31:35">

        <expr_stmt pos:start="21:9" pos:end="21:81"><expr pos:start="21:9" pos:end="21:80"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:9">v</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:12">s</name><operator pos:start="21:13" pos:end="21:13">.</operator><name pos:start="21:14" pos:end="21:22">pict_type</name></name> <operator pos:start="21:24" pos:end="21:24">=</operator> <ternary pos:start="21:26" pos:end="21:80"><condition pos:start="21:26" pos:end="21:42"><expr pos:start="21:26" pos:end="21:40"><operator pos:start="21:26" pos:end="21:26">(</operator><name pos:start="21:27" pos:end="21:35"><name pos:start="21:27" pos:end="21:27">v</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:35">fptype</name></name> <operator pos:start="21:37" pos:end="21:37">&amp;</operator> <literal type="number" pos:start="21:39" pos:end="21:39">1</literal><operator pos:start="21:40" pos:end="21:40">)</operator></expr> ?</condition><then pos:start="21:44" pos:end="21:60"> <expr pos:start="21:44" pos:end="21:60"><name pos:start="21:44" pos:end="21:60">AV_PICTURE_TYPE_P</name></expr> </then><else pos:start="21:62" pos:end="21:80">: <expr pos:start="21:64" pos:end="21:80"><name pos:start="21:64" pos:end="21:80">AV_PICTURE_TYPE_I</name></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="25:86"><if pos:start="23:9" pos:end="25:86">if <condition pos:start="23:12" pos:end="23:26">(<expr pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:13">v</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:21">fptype</name></name> <operator pos:start="23:23" pos:end="23:23">&amp;</operator> <literal type="number" pos:start="23:25" pos:end="23:25">4</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:86"><block_content pos:start="25:13" pos:end="25:86">

            <expr_stmt pos:start="25:13" pos:end="25:86"><expr pos:start="25:13" pos:end="25:85"><name pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:13">v</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:17">.</operator><name pos:start="25:18" pos:end="25:26">pict_type</name></name> <operator pos:start="25:28" pos:end="25:28">=</operator> <ternary pos:start="25:30" pos:end="25:85"><condition pos:start="25:30" pos:end="25:46"><expr pos:start="25:30" pos:end="25:44"><operator pos:start="25:30" pos:end="25:30">(</operator><name pos:start="25:31" pos:end="25:39"><name pos:start="25:31" pos:end="25:31">v</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:39">fptype</name></name> <operator pos:start="25:41" pos:end="25:41">&amp;</operator> <literal type="number" pos:start="25:43" pos:end="25:43">1</literal><operator pos:start="25:44" pos:end="25:44">)</operator></expr> ?</condition><then pos:start="25:48" pos:end="25:65"> <expr pos:start="25:48" pos:end="25:65"><name pos:start="25:48" pos:end="25:65">AV_PICTURE_TYPE_BI</name></expr> </then><else pos:start="25:67" pos:end="25:85">: <expr pos:start="25:69" pos:end="25:85"><name pos:start="25:69" pos:end="25:85">AV_PICTURE_TYPE_B</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:63"><expr pos:start="27:9" pos:end="27:62"><name pos:start="27:9" pos:end="27:45"><name pos:start="27:9" pos:end="27:9">v</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:12">s</name><operator pos:start="27:13" pos:end="27:13">.</operator><name pos:start="27:14" pos:end="27:32">current_picture_ptr</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:35">f</name><operator pos:start="27:36" pos:end="27:36">.</operator><name pos:start="27:37" pos:end="27:45">pict_type</name></name> <operator pos:start="27:47" pos:end="27:47">=</operator> <name pos:start="27:49" pos:end="27:62"><name pos:start="27:49" pos:end="27:49">v</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:52">s</name><operator pos:start="27:53" pos:end="27:53">.</operator><name pos:start="27:54" pos:end="27:62">pict_type</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="31:35"><if pos:start="29:9" pos:end="31:35">if <condition pos:start="29:12" pos:end="29:32">(<expr pos:start="29:13" pos:end="29:31"><operator pos:start="29:13" pos:end="29:13">!</operator><name pos:start="29:14" pos:end="29:31"><name pos:start="29:14" pos:end="29:14">v</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:31">pic_header_flag</name></name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:35"><block_content pos:start="31:13" pos:end="31:35">

            <goto pos:start="31:13" pos:end="31:35">goto <name pos:start="31:18" pos:end="31:34">parse_common_info</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:19"><expr pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:14">field_mode</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="55:5"><if pos:start="39:5" pos:end="51:5">if <condition pos:start="39:8" pos:end="39:21">(<expr pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:9">v</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:20">interlace</name></name></expr>)</condition> <block pos:start="39:23" pos:end="51:5">{<block_content pos:start="41:9" pos:end="49:9">

        <expr_stmt pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:11">fcm</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:27"><name pos:start="41:15" pos:end="41:23">decode012</name><argument_list pos:start="41:24" pos:end="41:27">(<argument pos:start="41:25" pos:end="41:26"><expr pos:start="41:25" pos:end="41:26"><name pos:start="41:25" pos:end="41:26">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:16">(<expr pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">fcm</name></expr>)</condition> <block pos:start="43:18" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:31">

            <if_stmt pos:start="45:13" pos:end="47:31"><if pos:start="45:13" pos:end="47:31">if <condition pos:start="45:16" pos:end="45:35">(<expr pos:start="45:17" pos:end="45:34"><name pos:start="45:17" pos:end="45:19">fcm</name> <operator pos:start="45:21" pos:end="45:22">==</operator> <name pos:start="45:24" pos:end="45:34">ILACE_FIELD</name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:31"><block_content pos:start="47:17" pos:end="47:31">

                <expr_stmt pos:start="47:17" pos:end="47:31"><expr pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:26">field_mode</name> <operator pos:start="47:28" pos:end="47:28">=</operator> <literal type="number" pos:start="47:30" pos:end="47:30">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="55:5">else <block pos:start="51:12" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:26">

        <expr_stmt pos:start="53:9" pos:end="53:26"><expr pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:11">fcm</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <name pos:start="53:15" pos:end="53:25">PROGRESSIVE</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="57:5" pos:end="59:35"><if pos:start="57:5" pos:end="59:35">if <condition pos:start="57:8" pos:end="57:65">(<expr pos:start="57:9" pos:end="57:64"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:33"><name pos:start="57:10" pos:end="57:10">v</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:33">first_pic_header_flag</name></name> <operator pos:start="57:35" pos:end="57:36">&amp;&amp;</operator> <name pos:start="57:38" pos:end="57:50"><name pos:start="57:38" pos:end="57:38">v</name><operator pos:start="57:39" pos:end="57:40">-&gt;</operator><name pos:start="57:41" pos:end="57:50">field_mode</name></name> <operator pos:start="57:52" pos:end="57:53">!=</operator> <name pos:start="57:55" pos:end="57:64">field_mode</name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:35"><block_content pos:start="59:9" pos:end="59:35">

        <return pos:start="59:9" pos:end="59:35">return <expr pos:start="59:16" pos:end="59:34"><name pos:start="59:16" pos:end="59:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:31"><expr pos:start="61:5" pos:end="61:30"><name pos:start="61:5" pos:end="61:17"><name pos:start="61:5" pos:end="61:5">v</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:17">field_mode</name></name> <operator pos:start="61:19" pos:end="61:19">=</operator> <name pos:start="61:21" pos:end="61:30">field_mode</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:17"><expr pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:10"><name pos:start="63:5" pos:end="63:5">v</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:10">fcm</name></name> <operator pos:start="63:12" pos:end="63:12">=</operator> <name pos:start="63:14" pos:end="63:16">fcm</name></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="119:5"><if pos:start="67:5" pos:end="79:5">if <condition pos:start="67:8" pos:end="67:22">(<expr pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:9">v</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:21">field_mode</name></name></expr>)</condition> <block pos:start="67:24" pos:end="79:5">{<block_content pos:start="69:9" pos:end="77:86">

        <expr_stmt pos:start="69:9" pos:end="69:59"><expr pos:start="69:9" pos:end="69:58"><name pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:9">v</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:12">s</name><operator pos:start="69:13" pos:end="69:13">.</operator><name pos:start="69:14" pos:end="69:22">mb_height</name></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <call pos:start="69:26" pos:end="69:58"><name pos:start="69:26" pos:end="69:32">FFALIGN</name><argument_list pos:start="69:33" pos:end="69:58">(<argument pos:start="69:34" pos:end="69:54"><expr pos:start="69:34" pos:end="69:54"><name pos:start="69:34" pos:end="69:44"><name pos:start="69:34" pos:end="69:34">v</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:37">s</name><operator pos:start="69:38" pos:end="69:38">.</operator><name pos:start="69:39" pos:end="69:44">height</name></name> <operator pos:start="69:46" pos:end="69:46">+</operator> <literal type="number" pos:start="69:48" pos:end="69:49">15</literal> <operator pos:start="69:51" pos:end="69:52">&gt;&gt;</operator> <literal type="number" pos:start="69:54" pos:end="69:54">4</literal></expr></argument>, <argument pos:start="69:57" pos:end="69:57"><expr pos:start="69:57" pos:end="69:57"><literal type="number" pos:start="69:57" pos:end="69:57">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:36"><expr pos:start="71:9" pos:end="71:35"><name pos:start="71:9" pos:end="71:17"><name pos:start="71:9" pos:end="71:9">v</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:17">fptype</name></name> <operator pos:start="71:19" pos:end="71:19">=</operator> <call pos:start="71:21" pos:end="71:35"><name pos:start="71:21" pos:end="71:28">get_bits</name><argument_list pos:start="71:29" pos:end="71:35">(<argument pos:start="71:30" pos:end="71:31"><expr pos:start="71:30" pos:end="71:31"><name pos:start="71:30" pos:end="71:31">gb</name></expr></argument>, <argument pos:start="71:34" pos:end="71:34"><expr pos:start="71:34" pos:end="71:34"><literal type="number" pos:start="71:34" pos:end="71:34">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:81"><expr pos:start="73:9" pos:end="73:80"><name pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:9">v</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:12">s</name><operator pos:start="73:13" pos:end="73:13">.</operator><name pos:start="73:14" pos:end="73:22">pict_type</name></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <ternary pos:start="73:26" pos:end="73:80"><condition pos:start="73:26" pos:end="73:42"><expr pos:start="73:26" pos:end="73:40"><operator pos:start="73:26" pos:end="73:26">(</operator><name pos:start="73:27" pos:end="73:35"><name pos:start="73:27" pos:end="73:27">v</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:35">fptype</name></name> <operator pos:start="73:37" pos:end="73:37">&amp;</operator> <literal type="number" pos:start="73:39" pos:end="73:39">2</literal><operator pos:start="73:40" pos:end="73:40">)</operator></expr> ?</condition><then pos:start="73:44" pos:end="73:60"> <expr pos:start="73:44" pos:end="73:60"><name pos:start="73:44" pos:end="73:60">AV_PICTURE_TYPE_P</name></expr> </then><else pos:start="73:62" pos:end="73:80">: <expr pos:start="73:64" pos:end="73:80"><name pos:start="73:64" pos:end="73:80">AV_PICTURE_TYPE_I</name></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="77:86"><if pos:start="75:9" pos:end="77:86">if <condition pos:start="75:12" pos:end="75:26">(<expr pos:start="75:13" pos:end="75:25"><name pos:start="75:13" pos:end="75:21"><name pos:start="75:13" pos:end="75:13">v</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:21">fptype</name></name> <operator pos:start="75:23" pos:end="75:23">&amp;</operator> <literal type="number" pos:start="75:25" pos:end="75:25">4</literal></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:86"><block_content pos:start="77:13" pos:end="77:86"> <comment type="line" pos:start="75:28" pos:end="75:39">// B-picture</comment>

            <expr_stmt pos:start="77:13" pos:end="77:86"><expr pos:start="77:13" pos:end="77:85"><name pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:13">v</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:16">s</name><operator pos:start="77:17" pos:end="77:17">.</operator><name pos:start="77:18" pos:end="77:26">pict_type</name></name> <operator pos:start="77:28" pos:end="77:28">=</operator> <ternary pos:start="77:30" pos:end="77:85"><condition pos:start="77:30" pos:end="77:46"><expr pos:start="77:30" pos:end="77:44"><operator pos:start="77:30" pos:end="77:30">(</operator><name pos:start="77:31" pos:end="77:39"><name pos:start="77:31" pos:end="77:31">v</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:39">fptype</name></name> <operator pos:start="77:41" pos:end="77:41">&amp;</operator> <literal type="number" pos:start="77:43" pos:end="77:43">2</literal><operator pos:start="77:44" pos:end="77:44">)</operator></expr> ?</condition><then pos:start="77:48" pos:end="77:65"> <expr pos:start="77:48" pos:end="77:65"><name pos:start="77:48" pos:end="77:65">AV_PICTURE_TYPE_BI</name></expr> </then><else pos:start="77:67" pos:end="77:85">: <expr pos:start="77:69" pos:end="77:85"><name pos:start="77:69" pos:end="77:85">AV_PICTURE_TYPE_B</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="119:5">else <block pos:start="79:12" pos:end="119:5">{<block_content pos:start="81:9" pos:end="117:9">

        <expr_stmt pos:start="81:9" pos:end="81:47"><expr pos:start="81:9" pos:end="81:46"><name pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:9">v</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:12">s</name><operator pos:start="81:13" pos:end="81:13">.</operator><name pos:start="81:14" pos:end="81:22">mb_height</name></name> <operator pos:start="81:24" pos:end="81:24">=</operator> <name pos:start="81:26" pos:end="81:36"><name pos:start="81:26" pos:end="81:26">v</name><operator pos:start="81:27" pos:end="81:28">-&gt;</operator><name pos:start="81:29" pos:end="81:29">s</name><operator pos:start="81:30" pos:end="81:30">.</operator><name pos:start="81:31" pos:end="81:36">height</name></name> <operator pos:start="81:38" pos:end="81:38">+</operator> <literal type="number" pos:start="81:40" pos:end="81:41">15</literal> <operator pos:start="81:43" pos:end="81:44">&gt;&gt;</operator> <literal type="number" pos:start="81:46" pos:end="81:46">4</literal></expr>;</expr_stmt>

        <switch pos:start="83:9" pos:end="117:9">switch <condition pos:start="83:16" pos:end="83:36">(<expr pos:start="83:17" pos:end="83:35"><call pos:start="83:17" pos:end="83:35"><name pos:start="83:17" pos:end="83:25">get_unary</name><argument_list pos:start="83:26" pos:end="83:35">(<argument pos:start="83:27" pos:end="83:28"><expr pos:start="83:27" pos:end="83:28"><name pos:start="83:27" pos:end="83:28">gb</name></expr></argument>, <argument pos:start="83:31" pos:end="83:31"><expr pos:start="83:31" pos:end="83:31"><literal type="number" pos:start="83:31" pos:end="83:31">0</literal></expr></argument>, <argument pos:start="83:34" pos:end="83:34"><expr pos:start="83:34" pos:end="83:34"><literal type="number" pos:start="83:34" pos:end="83:34">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="83:38" pos:end="117:9">{<block_content pos:start="85:9" pos:end="115:18">

        <case pos:start="85:9" pos:end="85:15">case <expr pos:start="85:14" pos:end="85:14"><literal type="number" pos:start="85:14" pos:end="85:14">0</literal></expr>:</case>

            <expr_stmt pos:start="87:13" pos:end="87:47"><expr pos:start="87:13" pos:end="87:46"><name pos:start="87:13" pos:end="87:26"><name pos:start="87:13" pos:end="87:13">v</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:16">s</name><operator pos:start="87:17" pos:end="87:17">.</operator><name pos:start="87:18" pos:end="87:26">pict_type</name></name> <operator pos:start="87:28" pos:end="87:28">=</operator> <name pos:start="87:30" pos:end="87:46">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>

            <break pos:start="89:13" pos:end="89:18">break;</break>

        <case pos:start="91:9" pos:end="91:15">case <expr pos:start="91:14" pos:end="91:14"><literal type="number" pos:start="91:14" pos:end="91:14">1</literal></expr>:</case>

            <expr_stmt pos:start="93:13" pos:end="93:47"><expr pos:start="93:13" pos:end="93:46"><name pos:start="93:13" pos:end="93:26"><name pos:start="93:13" pos:end="93:13">v</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:16">s</name><operator pos:start="93:17" pos:end="93:17">.</operator><name pos:start="93:18" pos:end="93:26">pict_type</name></name> <operator pos:start="93:28" pos:end="93:28">=</operator> <name pos:start="93:30" pos:end="93:46">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt>

            <break pos:start="95:13" pos:end="95:18">break;</break>

        <case pos:start="97:9" pos:end="97:15">case <expr pos:start="97:14" pos:end="97:14"><literal type="number" pos:start="97:14" pos:end="97:14">2</literal></expr>:</case>

            <expr_stmt pos:start="99:13" pos:end="99:47"><expr pos:start="99:13" pos:end="99:46"><name pos:start="99:13" pos:end="99:26"><name pos:start="99:13" pos:end="99:13">v</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:16">s</name><operator pos:start="99:17" pos:end="99:17">.</operator><name pos:start="99:18" pos:end="99:26">pict_type</name></name> <operator pos:start="99:28" pos:end="99:28">=</operator> <name pos:start="99:30" pos:end="99:46">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

            <break pos:start="101:13" pos:end="101:18">break;</break>

        <case pos:start="103:9" pos:end="103:15">case <expr pos:start="103:14" pos:end="103:14"><literal type="number" pos:start="103:14" pos:end="103:14">3</literal></expr>:</case>

            <expr_stmt pos:start="105:13" pos:end="105:48"><expr pos:start="105:13" pos:end="105:47"><name pos:start="105:13" pos:end="105:26"><name pos:start="105:13" pos:end="105:13">v</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:16">s</name><operator pos:start="105:17" pos:end="105:17">.</operator><name pos:start="105:18" pos:end="105:26">pict_type</name></name> <operator pos:start="105:28" pos:end="105:28">=</operator> <name pos:start="105:30" pos:end="105:47">AV_PICTURE_TYPE_BI</name></expr>;</expr_stmt>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <case pos:start="109:9" pos:end="109:15">case <expr pos:start="109:14" pos:end="109:14"><literal type="number" pos:start="109:14" pos:end="109:14">4</literal></expr>:</case>

            <expr_stmt pos:start="111:13" pos:end="111:47"><expr pos:start="111:13" pos:end="111:46"><name pos:start="111:13" pos:end="111:26"><name pos:start="111:13" pos:end="111:13">v</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:16">s</name><operator pos:start="111:17" pos:end="111:17">.</operator><name pos:start="111:18" pos:end="111:26">pict_type</name></name> <operator pos:start="111:28" pos:end="111:28">=</operator> <name pos:start="111:30" pos:end="111:46">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt> <comment type="line" pos:start="111:49" pos:end="111:62">// skipped pic</comment>

            <expr_stmt pos:start="113:13" pos:end="113:35"><expr pos:start="113:13" pos:end="113:34"><name pos:start="113:13" pos:end="113:30"><name pos:start="113:13" pos:end="113:13">v</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:30">p_frame_skipped</name></name> <operator pos:start="113:32" pos:end="113:32">=</operator> <literal type="number" pos:start="113:34" pos:end="113:34">1</literal></expr>;</expr_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="121:5" pos:end="123:25"><if pos:start="121:5" pos:end="123:25">if <condition pos:start="121:8" pos:end="121:22">(<expr pos:start="121:9" pos:end="121:21"><name pos:start="121:9" pos:end="121:21"><name pos:start="121:9" pos:end="121:9">v</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:21">tfcntrflag</name></name></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:25"><block_content pos:start="123:9" pos:end="123:25">

        <expr_stmt pos:start="123:9" pos:end="123:25"><expr pos:start="123:9" pos:end="123:24"><call pos:start="123:9" pos:end="123:24"><name pos:start="123:9" pos:end="123:17">skip_bits</name><argument_list pos:start="123:18" pos:end="123:24">(<argument pos:start="123:19" pos:end="123:20"><expr pos:start="123:19" pos:end="123:20"><name pos:start="123:19" pos:end="123:20">gb</name></expr></argument>, <argument pos:start="123:23" pos:end="123:23"><expr pos:start="123:23" pos:end="123:23"><literal type="number" pos:start="123:23" pos:end="123:23">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="125:5" pos:end="139:5"><if pos:start="125:5" pos:end="139:5">if <condition pos:start="125:8" pos:end="125:21">(<expr pos:start="125:9" pos:end="125:20"><name pos:start="125:9" pos:end="125:20"><name pos:start="125:9" pos:end="125:9">v</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:20">broadcast</name></name></expr>)</condition> <block pos:start="125:23" pos:end="139:5">{<block_content pos:start="127:9" pos:end="137:9">

        <if_stmt pos:start="127:9" pos:end="137:9"><if pos:start="127:9" pos:end="131:9">if <condition pos:start="127:12" pos:end="127:36">(<expr pos:start="127:13" pos:end="127:35"><operator pos:start="127:13" pos:end="127:13">!</operator><name pos:start="127:14" pos:end="127:25"><name pos:start="127:14" pos:end="127:14">v</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:25">interlace</name></name> <operator pos:start="127:27" pos:end="127:28">||</operator> <name pos:start="127:30" pos:end="127:35"><name pos:start="127:30" pos:end="127:30">v</name><operator pos:start="127:31" pos:end="127:32">-&gt;</operator><name pos:start="127:33" pos:end="127:35">psf</name></name></expr>)</condition> <block pos:start="127:38" pos:end="131:9">{<block_content pos:start="129:13" pos:end="129:40">

            <expr_stmt pos:start="129:13" pos:end="129:40"><expr pos:start="129:13" pos:end="129:39"><name pos:start="129:13" pos:end="129:21"><name pos:start="129:13" pos:end="129:13">v</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:21">rptfrm</name></name> <operator pos:start="129:23" pos:end="129:23">=</operator> <call pos:start="129:25" pos:end="129:39"><name pos:start="129:25" pos:end="129:32">get_bits</name><argument_list pos:start="129:33" pos:end="129:39">(<argument pos:start="129:34" pos:end="129:35"><expr pos:start="129:34" pos:end="129:35"><name pos:start="129:34" pos:end="129:35">gb</name></expr></argument>, <argument pos:start="129:38" pos:end="129:38"><expr pos:start="129:38" pos:end="129:38"><literal type="number" pos:start="129:38" pos:end="129:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="131:11" pos:end="137:9">else <block pos:start="131:16" pos:end="137:9">{<block_content pos:start="133:13" pos:end="135:35">

            <expr_stmt pos:start="133:13" pos:end="133:35"><expr pos:start="133:13" pos:end="133:34"><name pos:start="133:13" pos:end="133:18"><name pos:start="133:13" pos:end="133:13">v</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:18">tff</name></name> <operator pos:start="133:20" pos:end="133:20">=</operator> <call pos:start="133:22" pos:end="133:34"><name pos:start="133:22" pos:end="133:30">get_bits1</name><argument_list pos:start="133:31" pos:end="133:34">(<argument pos:start="133:32" pos:end="133:33"><expr pos:start="133:32" pos:end="133:33"><name pos:start="133:32" pos:end="133:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:35"><expr pos:start="135:13" pos:end="135:34"><name pos:start="135:13" pos:end="135:18"><name pos:start="135:13" pos:end="135:13">v</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:18">rff</name></name> <operator pos:start="135:20" pos:end="135:20">=</operator> <call pos:start="135:22" pos:end="135:34"><name pos:start="135:22" pos:end="135:30">get_bits1</name><argument_list pos:start="135:31" pos:end="135:34">(<argument pos:start="135:32" pos:end="135:33"><expr pos:start="135:32" pos:end="135:33"><name pos:start="135:32" pos:end="135:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="141:5" pos:end="147:5"><if pos:start="141:5" pos:end="147:5">if <condition pos:start="141:8" pos:end="141:23">(<expr pos:start="141:9" pos:end="141:22"><name pos:start="141:9" pos:end="141:22"><name pos:start="141:9" pos:end="141:9">v</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:22">panscanflag</name></name></expr>)</condition> <block pos:start="141:25" pos:end="147:5">{<block_content pos:start="143:9" pos:end="143:62">

        <expr_stmt pos:start="143:9" pos:end="143:62"><expr pos:start="143:9" pos:end="143:61"><call pos:start="143:9" pos:end="143:61"><name pos:start="143:9" pos:end="143:37">avpriv_report_missing_feature</name><argument_list pos:start="143:38" pos:end="143:61">(<argument pos:start="143:39" pos:end="143:48"><expr pos:start="143:39" pos:end="143:48"><name pos:start="143:39" pos:end="143:48"><name pos:start="143:39" pos:end="143:39">v</name><operator pos:start="143:40" pos:end="143:41">-&gt;</operator><name pos:start="143:42" pos:end="143:42">s</name><operator pos:start="143:43" pos:end="143:43">.</operator><name pos:start="143:44" pos:end="143:48">avctx</name></name></expr></argument>, <argument pos:start="143:51" pos:end="143:60"><expr pos:start="143:51" pos:end="143:60"><literal type="string" pos:start="143:51" pos:end="143:60">"Pan-scan"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="145:9" pos:end="145:13">//...</comment>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="149:5" pos:end="153:5"><if pos:start="149:5" pos:end="153:5">if <condition pos:start="149:8" pos:end="149:27">(<expr pos:start="149:9" pos:end="149:26"><name pos:start="149:9" pos:end="149:26"><name pos:start="149:9" pos:end="149:9">v</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:26">p_frame_skipped</name></name></expr>)</condition> <block pos:start="149:29" pos:end="153:5">{<block_content pos:start="151:9" pos:end="151:17">

        <return pos:start="151:9" pos:end="151:17">return <expr pos:start="151:16" pos:end="151:16"><literal type="number" pos:start="151:16" pos:end="151:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:27"><expr pos:start="155:5" pos:end="155:26"><name pos:start="155:5" pos:end="155:10"><name pos:start="155:5" pos:end="155:5">v</name><operator pos:start="155:6" pos:end="155:7">-&gt;</operator><name pos:start="155:8" pos:end="155:10">rnd</name></name> <operator pos:start="155:12" pos:end="155:12">=</operator> <call pos:start="155:14" pos:end="155:26"><name pos:start="155:14" pos:end="155:22">get_bits1</name><argument_list pos:start="155:23" pos:end="155:26">(<argument pos:start="155:24" pos:end="155:25"><expr pos:start="155:24" pos:end="155:25"><name pos:start="155:24" pos:end="155:25">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="157:5" pos:end="159:34"><if pos:start="157:5" pos:end="159:34">if <condition pos:start="157:8" pos:end="157:21">(<expr pos:start="157:9" pos:end="157:20"><name pos:start="157:9" pos:end="157:20"><name pos:start="157:9" pos:end="157:9">v</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:20">interlace</name></name></expr>)</condition><block type="pseudo" pos:start="159:9" pos:end="159:34"><block_content pos:start="159:9" pos:end="159:34">

        <expr_stmt pos:start="159:9" pos:end="159:34"><expr pos:start="159:9" pos:end="159:33"><name pos:start="159:9" pos:end="159:17"><name pos:start="159:9" pos:end="159:9">v</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:17">uvsamp</name></name> <operator pos:start="159:19" pos:end="159:19">=</operator> <call pos:start="159:21" pos:end="159:33"><name pos:start="159:21" pos:end="159:29">get_bits1</name><argument_list pos:start="159:30" pos:end="159:33">(<argument pos:start="159:31" pos:end="159:32"><expr pos:start="159:31" pos:end="159:32"><name pos:start="159:31" pos:end="159:32">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="161:5" pos:end="195:5"><if pos:start="161:5" pos:end="195:5">if <condition pos:start="161:8" pos:end="161:22">(<expr pos:start="161:9" pos:end="161:21"><name pos:start="161:9" pos:end="161:21"><name pos:start="161:9" pos:end="161:9">v</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:21">field_mode</name></name></expr>)</condition> <block pos:start="161:24" pos:end="195:5">{<block_content pos:start="163:9" pos:end="193:31">

        <if_stmt pos:start="163:9" pos:end="175:9"><if pos:start="163:9" pos:end="165:27">if <condition pos:start="163:12" pos:end="163:29">(<expr pos:start="163:13" pos:end="163:28"><operator pos:start="163:13" pos:end="163:13">!</operator><name pos:start="163:14" pos:end="163:28"><name pos:start="163:14" pos:end="163:14">v</name><operator pos:start="163:15" pos:end="163:16">-&gt;</operator><name pos:start="163:17" pos:end="163:28">refdist_flag</name></name></expr>)</condition><block type="pseudo" pos:start="165:13" pos:end="165:27"><block_content pos:start="165:13" pos:end="165:27">

            <expr_stmt pos:start="165:13" pos:end="165:27"><expr pos:start="165:13" pos:end="165:26"><name pos:start="165:13" pos:end="165:22"><name pos:start="165:13" pos:end="165:13">v</name><operator pos:start="165:14" pos:end="165:15">-&gt;</operator><name pos:start="165:16" pos:end="165:22">refdist</name></name> <operator pos:start="165:24" pos:end="165:24">=</operator> <literal type="number" pos:start="165:26" pos:end="165:26">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="167:9" pos:end="175:9">else if <condition pos:start="167:17" pos:end="167:97">(<expr pos:start="167:18" pos:end="167:96"><operator pos:start="167:18" pos:end="167:18">(</operator><name pos:start="167:19" pos:end="167:32"><name pos:start="167:19" pos:end="167:19">v</name><operator pos:start="167:20" pos:end="167:21">-&gt;</operator><name pos:start="167:22" pos:end="167:22">s</name><operator pos:start="167:23" pos:end="167:23">.</operator><name pos:start="167:24" pos:end="167:32">pict_type</name></name> <operator pos:start="167:34" pos:end="167:35">!=</operator> <name pos:start="167:37" pos:end="167:53">AV_PICTURE_TYPE_B</name><operator pos:start="167:54" pos:end="167:54">)</operator> <operator pos:start="167:56" pos:end="167:57">&amp;&amp;</operator> <operator pos:start="167:59" pos:end="167:59">(</operator><name pos:start="167:60" pos:end="167:73"><name pos:start="167:60" pos:end="167:60">v</name><operator pos:start="167:61" pos:end="167:62">-&gt;</operator><name pos:start="167:63" pos:end="167:63">s</name><operator pos:start="167:64" pos:end="167:64">.</operator><name pos:start="167:65" pos:end="167:73">pict_type</name></name> <operator pos:start="167:75" pos:end="167:76">!=</operator> <name pos:start="167:78" pos:end="167:95">AV_PICTURE_TYPE_BI</name><operator pos:start="167:96" pos:end="167:96">)</operator></expr>)</condition> <block pos:start="167:99" pos:end="175:9">{<block_content pos:start="169:13" pos:end="173:51">

            <expr_stmt pos:start="169:13" pos:end="169:41"><expr pos:start="169:13" pos:end="169:40"><name pos:start="169:13" pos:end="169:22"><name pos:start="169:13" pos:end="169:13">v</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:22">refdist</name></name> <operator pos:start="169:24" pos:end="169:24">=</operator> <call pos:start="169:26" pos:end="169:40"><name pos:start="169:26" pos:end="169:33">get_bits</name><argument_list pos:start="169:34" pos:end="169:40">(<argument pos:start="169:35" pos:end="169:36"><expr pos:start="169:35" pos:end="169:36"><name pos:start="169:35" pos:end="169:36">gb</name></expr></argument>, <argument pos:start="169:39" pos:end="169:39"><expr pos:start="169:39" pos:end="169:39"><literal type="number" pos:start="169:39" pos:end="169:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="171:13" pos:end="173:51"><if pos:start="171:13" pos:end="173:51">if <condition pos:start="171:16" pos:end="171:32">(<expr pos:start="171:17" pos:end="171:31"><name pos:start="171:17" pos:end="171:26"><name pos:start="171:17" pos:end="171:17">v</name><operator pos:start="171:18" pos:end="171:19">-&gt;</operator><name pos:start="171:20" pos:end="171:26">refdist</name></name> <operator pos:start="171:28" pos:end="171:29">==</operator> <literal type="number" pos:start="171:31" pos:end="171:31">3</literal></expr>)</condition><block type="pseudo" pos:start="173:17" pos:end="173:51"><block_content pos:start="173:17" pos:end="173:51">

                <expr_stmt pos:start="173:17" pos:end="173:51"><expr pos:start="173:17" pos:end="173:50"><name pos:start="173:17" pos:end="173:26"><name pos:start="173:17" pos:end="173:17">v</name><operator pos:start="173:18" pos:end="173:19">-&gt;</operator><name pos:start="173:20" pos:end="173:26">refdist</name></name> <operator pos:start="173:28" pos:end="173:29">+=</operator> <call pos:start="173:31" pos:end="173:50"><name pos:start="173:31" pos:end="173:39">get_unary</name><argument_list pos:start="173:40" pos:end="173:50">(<argument pos:start="173:41" pos:end="173:42"><expr pos:start="173:41" pos:end="173:42"><name pos:start="173:41" pos:end="173:42">gb</name></expr></argument>, <argument pos:start="173:45" pos:end="173:45"><expr pos:start="173:45" pos:end="173:45"><literal type="number" pos:start="173:45" pos:end="173:45">0</literal></expr></argument>, <argument pos:start="173:48" pos:end="173:49"><expr pos:start="173:48" pos:end="173:49"><literal type="number" pos:start="173:48" pos:end="173:49">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="177:9" pos:end="191:9"><if pos:start="177:9" pos:end="191:9">if <condition pos:start="177:12" pos:end="177:92">(<expr pos:start="177:13" pos:end="177:91"><operator pos:start="177:13" pos:end="177:13">(</operator><name pos:start="177:14" pos:end="177:27"><name pos:start="177:14" pos:end="177:14">v</name><operator pos:start="177:15" pos:end="177:16">-&gt;</operator><name pos:start="177:17" pos:end="177:17">s</name><operator pos:start="177:18" pos:end="177:18">.</operator><name pos:start="177:19" pos:end="177:27">pict_type</name></name> <operator pos:start="177:29" pos:end="177:30">==</operator> <name pos:start="177:32" pos:end="177:48">AV_PICTURE_TYPE_B</name><operator pos:start="177:49" pos:end="177:49">)</operator> <operator pos:start="177:51" pos:end="177:52">||</operator> <operator pos:start="177:54" pos:end="177:54">(</operator><name pos:start="177:55" pos:end="177:68"><name pos:start="177:55" pos:end="177:55">v</name><operator pos:start="177:56" pos:end="177:57">-&gt;</operator><name pos:start="177:58" pos:end="177:58">s</name><operator pos:start="177:59" pos:end="177:59">.</operator><name pos:start="177:60" pos:end="177:68">pict_type</name></name> <operator pos:start="177:70" pos:end="177:71">==</operator> <name pos:start="177:73" pos:end="177:90">AV_PICTURE_TYPE_BI</name><operator pos:start="177:91" pos:end="177:91">)</operator></expr>)</condition> <block pos:start="177:94" pos:end="191:9">{<block_content pos:start="179:13" pos:end="189:28">

            <expr_stmt pos:start="179:13" pos:end="179:105"><expr pos:start="179:13" pos:end="179:104"><name pos:start="179:13" pos:end="179:34"><name pos:start="179:13" pos:end="179:13">v</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:34">bfraction_lut_index</name></name> <operator pos:start="179:36" pos:end="179:36">=</operator> <call pos:start="179:38" pos:end="179:104"><name pos:start="179:38" pos:end="179:45">get_vlc2</name><argument_list pos:start="179:46" pos:end="179:104">(<argument pos:start="179:47" pos:end="179:48"><expr pos:start="179:47" pos:end="179:48"><name pos:start="179:47" pos:end="179:48">gb</name></expr></argument>, <argument pos:start="179:51" pos:end="179:76"><expr pos:start="179:51" pos:end="179:76"><name pos:start="179:51" pos:end="179:76"><name pos:start="179:51" pos:end="179:70">ff_vc1_bfraction_vlc</name><operator pos:start="179:71" pos:end="179:71">.</operator><name pos:start="179:72" pos:end="179:76">table</name></name></expr></argument>, <argument pos:start="179:79" pos:end="179:100"><expr pos:start="179:79" pos:end="179:100"><name pos:start="179:79" pos:end="179:100">VC1_BFRACTION_VLC_BITS</name></expr></argument>, <argument pos:start="179:103" pos:end="179:103"><expr pos:start="179:103" pos:end="179:103"><literal type="number" pos:start="179:103" pos:end="179:103">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:82"><expr pos:start="181:13" pos:end="181:81"><name pos:start="181:13" pos:end="181:24"><name pos:start="181:13" pos:end="181:13">v</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:24">bfraction</name></name>           <operator pos:start="181:36" pos:end="181:36">=</operator> <name pos:start="181:38" pos:end="181:81"><name pos:start="181:38" pos:end="181:57">ff_vc1_bfraction_lut</name><index pos:start="181:58" pos:end="181:81">[<expr pos:start="181:59" pos:end="181:80"><name pos:start="181:59" pos:end="181:80"><name pos:start="181:59" pos:end="181:59">v</name><operator pos:start="181:60" pos:end="181:61">-&gt;</operator><name pos:start="181:62" pos:end="181:80">bfraction_lut_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:55"><expr pos:start="183:13" pos:end="183:54"><name pos:start="183:13" pos:end="183:19"><name pos:start="183:13" pos:end="183:13">v</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:19">frfd</name></name> <operator pos:start="183:21" pos:end="183:21">=</operator> <operator pos:start="183:23" pos:end="183:23">(</operator><name pos:start="183:24" pos:end="183:35"><name pos:start="183:24" pos:end="183:24">v</name><operator pos:start="183:25" pos:end="183:26">-&gt;</operator><name pos:start="183:27" pos:end="183:35">bfraction</name></name> <operator pos:start="183:37" pos:end="183:37">*</operator> <name pos:start="183:39" pos:end="183:48"><name pos:start="183:39" pos:end="183:39">v</name><operator pos:start="183:40" pos:end="183:41">-&gt;</operator><name pos:start="183:42" pos:end="183:48">refdist</name></name><operator pos:start="183:49" pos:end="183:49">)</operator> <operator pos:start="183:51" pos:end="183:52">&gt;&gt;</operator> <literal type="number" pos:start="183:54" pos:end="183:54">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:47"><expr pos:start="185:13" pos:end="185:46"><name pos:start="185:13" pos:end="185:19"><name pos:start="185:13" pos:end="185:13">v</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:19">brfd</name></name> <operator pos:start="185:21" pos:end="185:21">=</operator> <name pos:start="185:23" pos:end="185:32"><name pos:start="185:23" pos:end="185:23">v</name><operator pos:start="185:24" pos:end="185:25">-&gt;</operator><name pos:start="185:26" pos:end="185:32">refdist</name></name> <operator pos:start="185:34" pos:end="185:34">-</operator> <name pos:start="185:36" pos:end="185:42"><name pos:start="185:36" pos:end="185:36">v</name><operator pos:start="185:37" pos:end="185:38">-&gt;</operator><name pos:start="185:39" pos:end="185:42">frfd</name></name> <operator pos:start="185:44" pos:end="185:44">-</operator> <literal type="number" pos:start="185:46" pos:end="185:46">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="187:13" pos:end="189:28"><if pos:start="187:13" pos:end="189:28">if <condition pos:start="187:16" pos:end="187:28">(<expr pos:start="187:17" pos:end="187:27"><name pos:start="187:17" pos:end="187:23"><name pos:start="187:17" pos:end="187:17">v</name><operator pos:start="187:18" pos:end="187:19">-&gt;</operator><name pos:start="187:20" pos:end="187:23">brfd</name></name> <operator pos:start="187:25" pos:end="187:25">&lt;</operator> <literal type="number" pos:start="187:27" pos:end="187:27">0</literal></expr>)</condition><block type="pseudo" pos:start="189:17" pos:end="189:28"><block_content pos:start="189:17" pos:end="189:28">

                <expr_stmt pos:start="189:17" pos:end="189:28"><expr pos:start="189:17" pos:end="189:27"><name pos:start="189:17" pos:end="189:23"><name pos:start="189:17" pos:end="189:17">v</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:23">brfd</name></name> <operator pos:start="189:25" pos:end="189:25">=</operator> <literal type="number" pos:start="189:27" pos:end="189:27">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="193:9" pos:end="193:31">goto <name pos:start="193:14" pos:end="193:30">parse_common_info</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="197:5" pos:end="217:5"><if pos:start="197:5" pos:end="217:5">if <condition pos:start="197:8" pos:end="197:30">(<expr pos:start="197:9" pos:end="197:29"><name pos:start="197:9" pos:end="197:14"><name pos:start="197:9" pos:end="197:9">v</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:14">fcm</name></name> <operator pos:start="197:16" pos:end="197:17">==</operator> <name pos:start="197:19" pos:end="197:29">PROGRESSIVE</name></expr>)</condition> <block pos:start="197:32" pos:end="217:5">{<block_content pos:start="199:9" pos:end="215:9">

        <if_stmt pos:start="199:9" pos:end="201:41"><if pos:start="199:9" pos:end="201:41">if <condition pos:start="199:12" pos:end="199:27">(<expr pos:start="199:13" pos:end="199:26"><name pos:start="199:13" pos:end="199:26"><name pos:start="199:13" pos:end="199:13">v</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:26">finterpflag</name></name></expr>)</condition><block type="pseudo" pos:start="201:13" pos:end="201:41"><block_content pos:start="201:13" pos:end="201:41">

            <expr_stmt pos:start="201:13" pos:end="201:41"><expr pos:start="201:13" pos:end="201:40"><name pos:start="201:13" pos:end="201:24"><name pos:start="201:13" pos:end="201:13">v</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:24">interpfrm</name></name> <operator pos:start="201:26" pos:end="201:26">=</operator> <call pos:start="201:28" pos:end="201:40"><name pos:start="201:28" pos:end="201:36">get_bits1</name><argument_list pos:start="201:37" pos:end="201:40">(<argument pos:start="201:38" pos:end="201:39"><expr pos:start="201:38" pos:end="201:39"><name pos:start="201:38" pos:end="201:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="203:9" pos:end="215:9"><if pos:start="203:9" pos:end="215:9">if <condition pos:start="203:12" pos:end="203:48">(<expr pos:start="203:13" pos:end="203:47"><name pos:start="203:13" pos:end="203:26"><name pos:start="203:13" pos:end="203:13">v</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:16">s</name><operator pos:start="203:17" pos:end="203:17">.</operator><name pos:start="203:18" pos:end="203:26">pict_type</name></name> <operator pos:start="203:28" pos:end="203:29">==</operator> <name pos:start="203:31" pos:end="203:47">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="203:50" pos:end="215:9">{<block_content pos:start="205:13" pos:end="213:13">

            <expr_stmt pos:start="205:13" pos:end="205:105"><expr pos:start="205:13" pos:end="205:104"><name pos:start="205:13" pos:end="205:34"><name pos:start="205:13" pos:end="205:13">v</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:34">bfraction_lut_index</name></name> <operator pos:start="205:36" pos:end="205:36">=</operator> <call pos:start="205:38" pos:end="205:104"><name pos:start="205:38" pos:end="205:45">get_vlc2</name><argument_list pos:start="205:46" pos:end="205:104">(<argument pos:start="205:47" pos:end="205:48"><expr pos:start="205:47" pos:end="205:48"><name pos:start="205:47" pos:end="205:48">gb</name></expr></argument>, <argument pos:start="205:51" pos:end="205:76"><expr pos:start="205:51" pos:end="205:76"><name pos:start="205:51" pos:end="205:76"><name pos:start="205:51" pos:end="205:70">ff_vc1_bfraction_vlc</name><operator pos:start="205:71" pos:end="205:71">.</operator><name pos:start="205:72" pos:end="205:76">table</name></name></expr></argument>, <argument pos:start="205:79" pos:end="205:100"><expr pos:start="205:79" pos:end="205:100"><name pos:start="205:79" pos:end="205:100">VC1_BFRACTION_VLC_BITS</name></expr></argument>, <argument pos:start="205:103" pos:end="205:103"><expr pos:start="205:103" pos:end="205:103"><literal type="number" pos:start="205:103" pos:end="205:103">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:82"><expr pos:start="207:13" pos:end="207:81"><name pos:start="207:13" pos:end="207:24"><name pos:start="207:13" pos:end="207:13">v</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:24">bfraction</name></name>           <operator pos:start="207:36" pos:end="207:36">=</operator> <name pos:start="207:38" pos:end="207:81"><name pos:start="207:38" pos:end="207:57">ff_vc1_bfraction_lut</name><index pos:start="207:58" pos:end="207:81">[<expr pos:start="207:59" pos:end="207:80"><name pos:start="207:59" pos:end="207:80"><name pos:start="207:59" pos:end="207:59">v</name><operator pos:start="207:60" pos:end="207:61">-&gt;</operator><name pos:start="207:62" pos:end="207:80">bfraction_lut_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="209:13" pos:end="213:13"><if pos:start="209:13" pos:end="213:13">if <condition pos:start="209:16" pos:end="209:34">(<expr pos:start="209:17" pos:end="209:33"><name pos:start="209:17" pos:end="209:28"><name pos:start="209:17" pos:end="209:17">v</name><operator pos:start="209:18" pos:end="209:19">-&gt;</operator><name pos:start="209:20" pos:end="209:28">bfraction</name></name> <operator pos:start="209:30" pos:end="209:31">==</operator> <literal type="number" pos:start="209:33" pos:end="209:33">0</literal></expr>)</condition> <block pos:start="209:36" pos:end="213:13">{<block_content pos:start="211:17" pos:end="211:52">

                <expr_stmt pos:start="211:17" pos:end="211:52"><expr pos:start="211:17" pos:end="211:51"><name pos:start="211:17" pos:end="211:30"><name pos:start="211:17" pos:end="211:17">v</name><operator pos:start="211:18" pos:end="211:19">-&gt;</operator><name pos:start="211:20" pos:end="211:20">s</name><operator pos:start="211:21" pos:end="211:21">.</operator><name pos:start="211:22" pos:end="211:30">pict_type</name></name> <operator pos:start="211:32" pos:end="211:32">=</operator> <name pos:start="211:34" pos:end="211:51">AV_PICTURE_TYPE_BI</name></expr>;</expr_stmt> <comment type="block" pos:start="211:54" pos:end="211:86">/* XXX: should not happen here */</comment>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <label pos:start="221:5" pos:end="221:22"><name pos:start="221:5" pos:end="221:21">parse_common_info</name>:</label>

    <if_stmt pos:start="223:5" pos:end="225:56"><if pos:start="223:5" pos:end="225:56">if <condition pos:start="223:8" pos:end="223:22">(<expr pos:start="223:9" pos:end="223:21"><name pos:start="223:9" pos:end="223:21"><name pos:start="223:9" pos:end="223:9">v</name><operator pos:start="223:10" pos:end="223:11">-&gt;</operator><name pos:start="223:12" pos:end="223:21">field_mode</name></name></expr>)</condition><block type="pseudo" pos:start="225:9" pos:end="225:56"><block_content pos:start="225:9" pos:end="225:56">

        <expr_stmt pos:start="225:9" pos:end="225:56"><expr pos:start="225:9" pos:end="225:55"><name pos:start="225:9" pos:end="225:25"><name pos:start="225:9" pos:end="225:9">v</name><operator pos:start="225:10" pos:end="225:11">-&gt;</operator><name pos:start="225:12" pos:end="225:25">cur_field_type</name></name> <operator pos:start="225:27" pos:end="225:27">=</operator> <operator pos:start="225:29" pos:end="225:29">!</operator><operator pos:start="225:30" pos:end="225:30">(</operator><name pos:start="225:31" pos:end="225:36"><name pos:start="225:31" pos:end="225:31">v</name><operator pos:start="225:32" pos:end="225:33">-&gt;</operator><name pos:start="225:34" pos:end="225:36">tff</name></name> <operator pos:start="225:38" pos:end="225:38">^</operator> <name pos:start="225:40" pos:end="225:54"><name pos:start="225:40" pos:end="225:40">v</name><operator pos:start="225:41" pos:end="225:42">-&gt;</operator><name pos:start="225:43" pos:end="225:54">second_field</name></name><operator pos:start="225:55" pos:end="225:55">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:30"><expr pos:start="227:5" pos:end="227:29"><name pos:start="227:5" pos:end="227:11">pqindex</name> <operator pos:start="227:13" pos:end="227:13">=</operator> <call pos:start="227:15" pos:end="227:29"><name pos:start="227:15" pos:end="227:22">get_bits</name><argument_list pos:start="227:23" pos:end="227:29">(<argument pos:start="227:24" pos:end="227:25"><expr pos:start="227:24" pos:end="227:25"><name pos:start="227:24" pos:end="227:25">gb</name></expr></argument>, <argument pos:start="227:28" pos:end="227:28"><expr pos:start="227:28" pos:end="227:28"><literal type="number" pos:start="227:28" pos:end="227:28">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="229:5" pos:end="231:18"><if pos:start="229:5" pos:end="231:18">if <condition pos:start="229:8" pos:end="229:17">(<expr pos:start="229:9" pos:end="229:16"><operator pos:start="229:9" pos:end="229:9">!</operator><name pos:start="229:10" pos:end="229:16">pqindex</name></expr>)</condition><block type="pseudo" pos:start="231:9" pos:end="231:18"><block_content pos:start="231:9" pos:end="231:18">

        <return pos:start="231:9" pos:end="231:18">return <expr pos:start="231:16" pos:end="231:17"><operator pos:start="231:16" pos:end="231:16">-</operator><literal type="number" pos:start="231:17" pos:end="231:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:25"><expr pos:start="233:5" pos:end="233:24"><name pos:start="233:5" pos:end="233:14"><name pos:start="233:5" pos:end="233:5">v</name><operator pos:start="233:6" pos:end="233:7">-&gt;</operator><name pos:start="233:8" pos:end="233:14">pqindex</name></name> <operator pos:start="233:16" pos:end="233:16">=</operator> <name pos:start="233:18" pos:end="233:24">pqindex</name></expr>;</expr_stmt>

    <if_stmt pos:start="235:5" pos:end="241:48"><if pos:start="235:5" pos:end="237:48">if <condition pos:start="235:8" pos:end="235:50">(<expr pos:start="235:9" pos:end="235:49"><name pos:start="235:9" pos:end="235:25"><name pos:start="235:9" pos:end="235:9">v</name><operator pos:start="235:10" pos:end="235:11">-&gt;</operator><name pos:start="235:12" pos:end="235:25">quantizer_mode</name></name> <operator pos:start="235:27" pos:end="235:28">==</operator> <name pos:start="235:30" pos:end="235:49">QUANT_FRAME_IMPLICIT</name></expr>)</condition><block type="pseudo" pos:start="237:9" pos:end="237:48"><block_content pos:start="237:9" pos:end="237:48">

        <expr_stmt pos:start="237:9" pos:end="237:48"><expr pos:start="237:9" pos:end="237:47"><name pos:start="237:9" pos:end="237:13"><name pos:start="237:9" pos:end="237:9">v</name><operator pos:start="237:10" pos:end="237:11">-&gt;</operator><name pos:start="237:12" pos:end="237:13">pq</name></name> <operator pos:start="237:15" pos:end="237:15">=</operator> <name pos:start="237:17" pos:end="237:47"><name pos:start="237:17" pos:end="237:35">ff_vc1_pquant_table</name><index pos:start="237:36" pos:end="237:38">[<expr pos:start="237:37" pos:end="237:37"><literal type="number" pos:start="237:37" pos:end="237:37">0</literal></expr>]</index><index pos:start="237:39" pos:end="237:47">[<expr pos:start="237:40" pos:end="237:46"><name pos:start="237:40" pos:end="237:46">pqindex</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="239:5" pos:end="241:48">else<block type="pseudo" pos:start="241:9" pos:end="241:48"><block_content pos:start="241:9" pos:end="241:48">

        <expr_stmt pos:start="241:9" pos:end="241:48"><expr pos:start="241:9" pos:end="241:47"><name pos:start="241:9" pos:end="241:13"><name pos:start="241:9" pos:end="241:9">v</name><operator pos:start="241:10" pos:end="241:11">-&gt;</operator><name pos:start="241:12" pos:end="241:13">pq</name></name> <operator pos:start="241:15" pos:end="241:15">=</operator> <name pos:start="241:17" pos:end="241:47"><name pos:start="241:17" pos:end="241:35">ff_vc1_pquant_table</name><index pos:start="241:36" pos:end="241:38">[<expr pos:start="241:37" pos:end="241:37"><literal type="number" pos:start="241:37" pos:end="241:37">1</literal></expr>]</index><index pos:start="241:39" pos:end="241:47">[<expr pos:start="241:40" pos:end="241:46"><name pos:start="241:40" pos:end="241:46">pqindex</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="245:5" pos:end="245:22"><expr pos:start="245:5" pos:end="245:21"><name pos:start="245:5" pos:end="245:17"><name pos:start="245:5" pos:end="245:5">v</name><operator pos:start="245:6" pos:end="245:7">-&gt;</operator><name pos:start="245:8" pos:end="245:17">pquantizer</name></name> <operator pos:start="245:19" pos:end="245:19">=</operator> <literal type="number" pos:start="245:21" pos:end="245:21">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="247:5" pos:end="249:36"><if pos:start="247:5" pos:end="249:36">if <condition pos:start="247:8" pos:end="247:50">(<expr pos:start="247:9" pos:end="247:49"><name pos:start="247:9" pos:end="247:25"><name pos:start="247:9" pos:end="247:9">v</name><operator pos:start="247:10" pos:end="247:11">-&gt;</operator><name pos:start="247:12" pos:end="247:25">quantizer_mode</name></name> <operator pos:start="247:27" pos:end="247:28">==</operator> <name pos:start="247:30" pos:end="247:49">QUANT_FRAME_IMPLICIT</name></expr>)</condition><block type="pseudo" pos:start="249:9" pos:end="249:36"><block_content pos:start="249:9" pos:end="249:36">

        <expr_stmt pos:start="249:9" pos:end="249:36"><expr pos:start="249:9" pos:end="249:35"><name pos:start="249:9" pos:end="249:21"><name pos:start="249:9" pos:end="249:9">v</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:21">pquantizer</name></name> <operator pos:start="249:23" pos:end="249:23">=</operator> <name pos:start="249:25" pos:end="249:31">pqindex</name> <operator pos:start="249:33" pos:end="249:33">&lt;</operator> <literal type="number" pos:start="249:35" pos:end="249:35">9</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="251:5" pos:end="253:26"><if pos:start="251:5" pos:end="253:26">if <condition pos:start="251:8" pos:end="251:47">(<expr pos:start="251:9" pos:end="251:46"><name pos:start="251:9" pos:end="251:25"><name pos:start="251:9" pos:end="251:9">v</name><operator pos:start="251:10" pos:end="251:11">-&gt;</operator><name pos:start="251:12" pos:end="251:25">quantizer_mode</name></name> <operator pos:start="251:27" pos:end="251:28">==</operator> <name pos:start="251:30" pos:end="251:46">QUANT_NON_UNIFORM</name></expr>)</condition><block type="pseudo" pos:start="253:9" pos:end="253:26"><block_content pos:start="253:9" pos:end="253:26">

        <expr_stmt pos:start="253:9" pos:end="253:26"><expr pos:start="253:9" pos:end="253:25"><name pos:start="253:9" pos:end="253:21"><name pos:start="253:9" pos:end="253:9">v</name><operator pos:start="253:10" pos:end="253:11">-&gt;</operator><name pos:start="253:12" pos:end="253:21">pquantizer</name></name> <operator pos:start="253:23" pos:end="253:23">=</operator> <literal type="number" pos:start="253:25" pos:end="253:25">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="255:5" pos:end="255:25"><expr pos:start="255:5" pos:end="255:24"><name pos:start="255:5" pos:end="255:14"><name pos:start="255:5" pos:end="255:5">v</name><operator pos:start="255:6" pos:end="255:7">-&gt;</operator><name pos:start="255:8" pos:end="255:14">pqindex</name></name> <operator pos:start="255:16" pos:end="255:16">=</operator> <name pos:start="255:18" pos:end="255:24">pqindex</name></expr>;</expr_stmt>

    <if_stmt pos:start="257:5" pos:end="263:22"><if pos:start="257:5" pos:end="259:34">if <condition pos:start="257:8" pos:end="257:20">(<expr pos:start="257:9" pos:end="257:19"><name pos:start="257:9" pos:end="257:15">pqindex</name> <operator pos:start="257:17" pos:end="257:17">&lt;</operator> <literal type="number" pos:start="257:19" pos:end="257:19">9</literal></expr>)</condition><block type="pseudo" pos:start="259:9" pos:end="259:34"><block_content pos:start="259:9" pos:end="259:34">

        <expr_stmt pos:start="259:9" pos:end="259:34"><expr pos:start="259:9" pos:end="259:33"><name pos:start="259:9" pos:end="259:17"><name pos:start="259:9" pos:end="259:9">v</name><operator pos:start="259:10" pos:end="259:11">-&gt;</operator><name pos:start="259:12" pos:end="259:17">halfpq</name></name> <operator pos:start="259:19" pos:end="259:19">=</operator> <call pos:start="259:21" pos:end="259:33"><name pos:start="259:21" pos:end="259:29">get_bits1</name><argument_list pos:start="259:30" pos:end="259:33">(<argument pos:start="259:31" pos:end="259:32"><expr pos:start="259:31" pos:end="259:32"><name pos:start="259:31" pos:end="259:32">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="261:5" pos:end="263:22">else<block type="pseudo" pos:start="263:9" pos:end="263:22"><block_content pos:start="263:9" pos:end="263:22">

        <expr_stmt pos:start="263:9" pos:end="263:22"><expr pos:start="263:9" pos:end="263:21"><name pos:start="263:9" pos:end="263:17"><name pos:start="263:9" pos:end="263:9">v</name><operator pos:start="263:10" pos:end="263:11">-&gt;</operator><name pos:start="263:12" pos:end="263:17">halfpq</name></name> <operator pos:start="263:19" pos:end="263:19">=</operator> <literal type="number" pos:start="263:21" pos:end="263:21">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="265:5" pos:end="267:38"><if pos:start="265:5" pos:end="267:38">if <condition pos:start="265:8" pos:end="265:50">(<expr pos:start="265:9" pos:end="265:49"><name pos:start="265:9" pos:end="265:25"><name pos:start="265:9" pos:end="265:9">v</name><operator pos:start="265:10" pos:end="265:11">-&gt;</operator><name pos:start="265:12" pos:end="265:25">quantizer_mode</name></name> <operator pos:start="265:27" pos:end="265:28">==</operator> <name pos:start="265:30" pos:end="265:49">QUANT_FRAME_EXPLICIT</name></expr>)</condition><block type="pseudo" pos:start="267:9" pos:end="267:38"><block_content pos:start="267:9" pos:end="267:38">

        <expr_stmt pos:start="267:9" pos:end="267:38"><expr pos:start="267:9" pos:end="267:37"><name pos:start="267:9" pos:end="267:21"><name pos:start="267:9" pos:end="267:9">v</name><operator pos:start="267:10" pos:end="267:11">-&gt;</operator><name pos:start="267:12" pos:end="267:21">pquantizer</name></name> <operator pos:start="267:23" pos:end="267:23">=</operator> <call pos:start="267:25" pos:end="267:37"><name pos:start="267:25" pos:end="267:33">get_bits1</name><argument_list pos:start="267:34" pos:end="267:37">(<argument pos:start="267:35" pos:end="267:36"><expr pos:start="267:35" pos:end="267:36"><name pos:start="267:35" pos:end="267:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="269:5" pos:end="271:38"><if pos:start="269:5" pos:end="271:38">if <condition pos:start="269:8" pos:end="269:24">(<expr pos:start="269:9" pos:end="269:23"><name pos:start="269:9" pos:end="269:23"><name pos:start="269:9" pos:end="269:9">v</name><operator pos:start="269:10" pos:end="269:11">-&gt;</operator><name pos:start="269:12" pos:end="269:23">postprocflag</name></name></expr>)</condition><block type="pseudo" pos:start="271:9" pos:end="271:38"><block_content pos:start="271:9" pos:end="271:38">

        <expr_stmt pos:start="271:9" pos:end="271:38"><expr pos:start="271:9" pos:end="271:37"><name pos:start="271:9" pos:end="271:19"><name pos:start="271:9" pos:end="271:9">v</name><operator pos:start="271:10" pos:end="271:11">-&gt;</operator><name pos:start="271:12" pos:end="271:19">postproc</name></name> <operator pos:start="271:21" pos:end="271:21">=</operator> <call pos:start="271:23" pos:end="271:37"><name pos:start="271:23" pos:end="271:30">get_bits</name><argument_list pos:start="271:31" pos:end="271:37">(<argument pos:start="271:32" pos:end="271:33"><expr pos:start="271:32" pos:end="271:33"><name pos:start="271:32" pos:end="271:33">gb</name></expr></argument>, <argument pos:start="271:36" pos:end="271:36"><expr pos:start="271:36" pos:end="271:36"><literal type="number" pos:start="271:36" pos:end="271:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="275:5" pos:end="277:17"><if pos:start="275:5" pos:end="277:17">if <condition pos:start="275:8" pos:end="275:22">(<expr pos:start="275:9" pos:end="275:21"><name pos:start="275:9" pos:end="275:21"><name pos:start="275:9" pos:end="275:9">v</name><operator pos:start="275:10" pos:end="275:11">-&gt;</operator><name pos:start="275:12" pos:end="275:21">parse_only</name></name></expr>)</condition><block type="pseudo" pos:start="277:9" pos:end="277:17"><block_content pos:start="277:9" pos:end="277:17">

        <return pos:start="277:9" pos:end="277:17">return <expr pos:start="277:16" pos:end="277:16"><literal type="number" pos:start="277:16" pos:end="277:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="281:5" pos:end="283:23"><if pos:start="281:5" pos:end="283:23">if <condition pos:start="281:8" pos:end="281:33">(<expr pos:start="281:9" pos:end="281:32"><name pos:start="281:9" pos:end="281:32"><name pos:start="281:9" pos:end="281:9">v</name><operator pos:start="281:10" pos:end="281:11">-&gt;</operator><name pos:start="281:12" pos:end="281:32">first_pic_header_flag</name></name></expr>)</condition><block type="pseudo" pos:start="283:9" pos:end="283:23"><block_content pos:start="283:9" pos:end="283:23">

        <expr_stmt pos:start="283:9" pos:end="283:23"><expr pos:start="283:9" pos:end="283:22"><call pos:start="283:9" pos:end="283:22"><name pos:start="283:9" pos:end="283:19">rotate_luts</name><argument_list pos:start="283:20" pos:end="283:22">(<argument pos:start="283:21" pos:end="283:21"><expr pos:start="283:21" pos:end="283:21"><name pos:start="283:21" pos:end="283:21">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <switch pos:start="287:5" pos:end="931:5">switch <condition pos:start="287:12" pos:end="287:27">(<expr pos:start="287:13" pos:end="287:26"><name pos:start="287:13" pos:end="287:26"><name pos:start="287:13" pos:end="287:13">v</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:16">s</name><operator pos:start="287:17" pos:end="287:17">.</operator><name pos:start="287:18" pos:end="287:26">pict_type</name></name></expr>)</condition> <block pos:start="287:29" pos:end="931:5">{<block_content pos:start="289:5" pos:end="929:14">

    <case pos:start="289:5" pos:end="289:27">case <expr pos:start="289:10" pos:end="289:26"><name pos:start="289:10" pos:end="289:26">AV_PICTURE_TYPE_I</name></expr>:</case>

    <case pos:start="291:5" pos:end="291:28">case <expr pos:start="291:10" pos:end="291:27"><name pos:start="291:10" pos:end="291:27">AV_PICTURE_TYPE_BI</name></expr>:</case>

        <if_stmt pos:start="293:9" pos:end="305:9"><if pos:start="293:9" pos:end="305:9">if <condition pos:start="293:12" pos:end="293:34">(<expr pos:start="293:13" pos:end="293:33"><name pos:start="293:13" pos:end="293:18"><name pos:start="293:13" pos:end="293:13">v</name><operator pos:start="293:14" pos:end="293:15">-&gt;</operator><name pos:start="293:16" pos:end="293:18">fcm</name></name> <operator pos:start="293:20" pos:end="293:21">==</operator> <name pos:start="293:23" pos:end="293:33">ILACE_FRAME</name></expr>)</condition> <block pos:start="293:36" pos:end="305:9">{<block_content pos:start="295:13" pos:end="303:67"> <comment type="line" pos:start="293:38" pos:end="293:62">//interlace frame picture</comment>

            <expr_stmt pos:start="295:13" pos:end="295:80"><expr pos:start="295:13" pos:end="295:79"><name pos:start="295:13" pos:end="295:18">status</name> <operator pos:start="295:20" pos:end="295:20">=</operator> <call pos:start="295:22" pos:end="295:79"><name pos:start="295:22" pos:end="295:38">bitplane_decoding</name><argument_list pos:start="295:39" pos:end="295:79">(<argument pos:start="295:40" pos:end="295:55"><expr pos:start="295:40" pos:end="295:55"><name pos:start="295:40" pos:end="295:55"><name pos:start="295:40" pos:end="295:40">v</name><operator pos:start="295:41" pos:end="295:42">-&gt;</operator><name pos:start="295:43" pos:end="295:55">fieldtx_plane</name></name></expr></argument>, <argument pos:start="295:58" pos:end="295:75"><expr pos:start="295:58" pos:end="295:75"><operator pos:start="295:58" pos:end="295:58">&amp;</operator><name pos:start="295:59" pos:end="295:75"><name pos:start="295:59" pos:end="295:59">v</name><operator pos:start="295:60" pos:end="295:61">-&gt;</operator><name pos:start="295:62" pos:end="295:75">fieldtx_is_raw</name></name></expr></argument>, <argument pos:start="295:78" pos:end="295:78"><expr pos:start="295:78" pos:end="295:78"><name pos:start="295:78" pos:end="295:78">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="297:13" pos:end="299:26"><if pos:start="297:13" pos:end="299:26">if <condition pos:start="297:16" pos:end="297:27">(<expr pos:start="297:17" pos:end="297:26"><name pos:start="297:17" pos:end="297:22">status</name> <operator pos:start="297:24" pos:end="297:24">&lt;</operator> <literal type="number" pos:start="297:26" pos:end="297:26">0</literal></expr>)</condition><block type="pseudo" pos:start="299:17" pos:end="299:26"><block_content pos:start="299:17" pos:end="299:26">

                <return pos:start="299:17" pos:end="299:26">return <expr pos:start="299:24" pos:end="299:25"><operator pos:start="299:24" pos:end="299:24">-</operator><literal type="number" pos:start="299:25" pos:end="299:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="301:13" pos:end="303:67"><expr pos:start="301:13" pos:end="303:66"><call pos:start="301:13" pos:end="303:66"><name pos:start="301:13" pos:end="301:18">av_log</name><argument_list pos:start="301:19" pos:end="303:66">(<argument pos:start="301:20" pos:end="301:29"><expr pos:start="301:20" pos:end="301:29"><name pos:start="301:20" pos:end="301:29"><name pos:start="301:20" pos:end="301:20">v</name><operator pos:start="301:21" pos:end="301:22">-&gt;</operator><name pos:start="301:23" pos:end="301:23">s</name><operator pos:start="301:24" pos:end="301:24">.</operator><name pos:start="301:25" pos:end="301:29">avctx</name></name></expr></argument>, <argument pos:start="301:32" pos:end="301:43"><expr pos:start="301:32" pos:end="301:43"><name pos:start="301:32" pos:end="301:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="301:46" pos:end="303:44"><expr pos:start="301:46" pos:end="303:44"><literal type="string" pos:start="301:46" pos:end="301:71">"FIELDTX plane encoding: "</literal>

                   <literal type="string" pos:start="303:20" pos:end="303:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="303:47" pos:end="303:55"><expr pos:start="303:47" pos:end="303:55"><name pos:start="303:47" pos:end="303:52">status</name><operator pos:start="303:53" pos:end="303:54">&gt;&gt;</operator><literal type="number" pos:start="303:55" pos:end="303:55">1</literal></expr></argument>, <argument pos:start="303:58" pos:end="303:65"><expr pos:start="303:58" pos:end="303:65"><name pos:start="303:58" pos:end="303:63">status</name><operator pos:start="303:64" pos:end="303:64">&amp;</operator><literal type="number" pos:start="303:65" pos:end="303:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:74"><expr pos:start="307:9" pos:end="307:73"><name pos:start="307:9" pos:end="307:14">status</name> <operator pos:start="307:16" pos:end="307:16">=</operator> <call pos:start="307:18" pos:end="307:73"><name pos:start="307:18" pos:end="307:34">bitplane_decoding</name><argument_list pos:start="307:35" pos:end="307:73">(<argument pos:start="307:36" pos:end="307:50"><expr pos:start="307:36" pos:end="307:50"><name pos:start="307:36" pos:end="307:50"><name pos:start="307:36" pos:end="307:36">v</name><operator pos:start="307:37" pos:end="307:38">-&gt;</operator><name pos:start="307:39" pos:end="307:50">acpred_plane</name></name></expr></argument>, <argument pos:start="307:53" pos:end="307:69"><expr pos:start="307:53" pos:end="307:69"><operator pos:start="307:53" pos:end="307:53">&amp;</operator><name pos:start="307:54" pos:end="307:69"><name pos:start="307:54" pos:end="307:54">v</name><operator pos:start="307:55" pos:end="307:56">-&gt;</operator><name pos:start="307:57" pos:end="307:69">acpred_is_raw</name></name></expr></argument>, <argument pos:start="307:72" pos:end="307:72"><expr pos:start="307:72" pos:end="307:72"><name pos:start="307:72" pos:end="307:72">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="309:9" pos:end="311:22"><if pos:start="309:9" pos:end="311:22">if <condition pos:start="309:12" pos:end="309:23">(<expr pos:start="309:13" pos:end="309:22"><name pos:start="309:13" pos:end="309:18">status</name> <operator pos:start="309:20" pos:end="309:20">&lt;</operator> <literal type="number" pos:start="309:22" pos:end="309:22">0</literal></expr>)</condition><block type="pseudo" pos:start="311:13" pos:end="311:22"><block_content pos:start="311:13" pos:end="311:22">

            <return pos:start="311:13" pos:end="311:22">return <expr pos:start="311:20" pos:end="311:21"><operator pos:start="311:20" pos:end="311:20">-</operator><literal type="number" pos:start="311:21" pos:end="311:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="313:9" pos:end="315:63"><expr pos:start="313:9" pos:end="315:62"><call pos:start="313:9" pos:end="315:62"><name pos:start="313:9" pos:end="313:14">av_log</name><argument_list pos:start="313:15" pos:end="315:62">(<argument pos:start="313:16" pos:end="313:25"><expr pos:start="313:16" pos:end="313:25"><name pos:start="313:16" pos:end="313:25"><name pos:start="313:16" pos:end="313:16">v</name><operator pos:start="313:17" pos:end="313:18">-&gt;</operator><name pos:start="313:19" pos:end="313:19">s</name><operator pos:start="313:20" pos:end="313:20">.</operator><name pos:start="313:21" pos:end="313:25">avctx</name></name></expr></argument>, <argument pos:start="313:28" pos:end="313:39"><expr pos:start="313:28" pos:end="313:39"><name pos:start="313:28" pos:end="313:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="313:42" pos:end="315:40"><expr pos:start="313:42" pos:end="315:40"><literal type="string" pos:start="313:42" pos:end="313:66">"ACPRED plane encoding: "</literal>

               <literal type="string" pos:start="315:16" pos:end="315:40">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="315:43" pos:end="315:51"><expr pos:start="315:43" pos:end="315:51"><name pos:start="315:43" pos:end="315:48">status</name><operator pos:start="315:49" pos:end="315:50">&gt;&gt;</operator><literal type="number" pos:start="315:51" pos:end="315:51">1</literal></expr></argument>, <argument pos:start="315:54" pos:end="315:61"><expr pos:start="315:54" pos:end="315:61"><name pos:start="315:54" pos:end="315:59">status</name><operator pos:start="315:60" pos:end="315:60">&amp;</operator><literal type="number" pos:start="315:61" pos:end="315:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:36"><expr pos:start="317:9" pos:end="317:35"><name pos:start="317:9" pos:end="317:19"><name pos:start="317:9" pos:end="317:9">v</name><operator pos:start="317:10" pos:end="317:11">-&gt;</operator><name pos:start="317:12" pos:end="317:19">condover</name></name> <operator pos:start="317:21" pos:end="317:21">=</operator> <name pos:start="317:23" pos:end="317:35">CONDOVER_NONE</name></expr>;</expr_stmt>

        <if_stmt pos:start="319:9" pos:end="337:9"><if pos:start="319:9" pos:end="337:9">if <condition pos:start="319:12" pos:end="319:37">(<expr pos:start="319:13" pos:end="319:36"><name pos:start="319:13" pos:end="319:22"><name pos:start="319:13" pos:end="319:13">v</name><operator pos:start="319:14" pos:end="319:15">-&gt;</operator><name pos:start="319:16" pos:end="319:22">overlap</name></name> <operator pos:start="319:24" pos:end="319:25">&amp;&amp;</operator> <name pos:start="319:27" pos:end="319:31"><name pos:start="319:27" pos:end="319:27">v</name><operator pos:start="319:28" pos:end="319:29">-&gt;</operator><name pos:start="319:30" pos:end="319:31">pq</name></name> <operator pos:start="319:33" pos:end="319:34">&lt;=</operator> <literal type="number" pos:start="319:36" pos:end="319:36">8</literal></expr>)</condition> <block pos:start="319:39" pos:end="337:9">{<block_content pos:start="321:13" pos:end="335:13">

            <expr_stmt pos:start="321:13" pos:end="321:40"><expr pos:start="321:13" pos:end="321:39"><name pos:start="321:13" pos:end="321:23"><name pos:start="321:13" pos:end="321:13">v</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:23">condover</name></name> <operator pos:start="321:25" pos:end="321:25">=</operator> <call pos:start="321:27" pos:end="321:39"><name pos:start="321:27" pos:end="321:35">decode012</name><argument_list pos:start="321:36" pos:end="321:39">(<argument pos:start="321:37" pos:end="321:38"><expr pos:start="321:37" pos:end="321:38"><name pos:start="321:37" pos:end="321:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="323:13" pos:end="335:13"><if pos:start="323:13" pos:end="335:13">if <condition pos:start="323:16" pos:end="323:47">(<expr pos:start="323:17" pos:end="323:46"><name pos:start="323:17" pos:end="323:27"><name pos:start="323:17" pos:end="323:17">v</name><operator pos:start="323:18" pos:end="323:19">-&gt;</operator><name pos:start="323:20" pos:end="323:27">condover</name></name> <operator pos:start="323:29" pos:end="323:30">==</operator> <name pos:start="323:32" pos:end="323:46">CONDOVER_SELECT</name></expr>)</condition> <block pos:start="323:49" pos:end="335:13">{<block_content pos:start="325:17" pos:end="333:71">

                <expr_stmt pos:start="325:17" pos:end="325:87"><expr pos:start="325:17" pos:end="325:86"><name pos:start="325:17" pos:end="325:22">status</name> <operator pos:start="325:24" pos:end="325:24">=</operator> <call pos:start="325:26" pos:end="325:86"><name pos:start="325:26" pos:end="325:42">bitplane_decoding</name><argument_list pos:start="325:43" pos:end="325:86">(<argument pos:start="325:44" pos:end="325:62"><expr pos:start="325:44" pos:end="325:62"><name pos:start="325:44" pos:end="325:62"><name pos:start="325:44" pos:end="325:44">v</name><operator pos:start="325:45" pos:end="325:46">-&gt;</operator><name pos:start="325:47" pos:end="325:62">over_flags_plane</name></name></expr></argument>, <argument pos:start="325:65" pos:end="325:82"><expr pos:start="325:65" pos:end="325:82"><operator pos:start="325:65" pos:end="325:65">&amp;</operator><name pos:start="325:66" pos:end="325:82"><name pos:start="325:66" pos:end="325:66">v</name><operator pos:start="325:67" pos:end="325:68">-&gt;</operator><name pos:start="325:69" pos:end="325:82">overflg_is_raw</name></name></expr></argument>, <argument pos:start="325:85" pos:end="325:85"><expr pos:start="325:85" pos:end="325:85"><name pos:start="325:85" pos:end="325:85">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="327:17" pos:end="329:30"><if pos:start="327:17" pos:end="329:30">if <condition pos:start="327:20" pos:end="327:31">(<expr pos:start="327:21" pos:end="327:30"><name pos:start="327:21" pos:end="327:26">status</name> <operator pos:start="327:28" pos:end="327:28">&lt;</operator> <literal type="number" pos:start="327:30" pos:end="327:30">0</literal></expr>)</condition><block type="pseudo" pos:start="329:21" pos:end="329:30"><block_content pos:start="329:21" pos:end="329:30">

                    <return pos:start="329:21" pos:end="329:30">return <expr pos:start="329:28" pos:end="329:29"><operator pos:start="329:28" pos:end="329:28">-</operator><literal type="number" pos:start="329:29" pos:end="329:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="331:17" pos:end="333:71"><expr pos:start="331:17" pos:end="333:70"><call pos:start="331:17" pos:end="333:70"><name pos:start="331:17" pos:end="331:22">av_log</name><argument_list pos:start="331:23" pos:end="333:70">(<argument pos:start="331:24" pos:end="331:33"><expr pos:start="331:24" pos:end="331:33"><name pos:start="331:24" pos:end="331:33"><name pos:start="331:24" pos:end="331:24">v</name><operator pos:start="331:25" pos:end="331:26">-&gt;</operator><name pos:start="331:27" pos:end="331:27">s</name><operator pos:start="331:28" pos:end="331:28">.</operator><name pos:start="331:29" pos:end="331:33">avctx</name></name></expr></argument>, <argument pos:start="331:36" pos:end="331:47"><expr pos:start="331:36" pos:end="331:47"><name pos:start="331:36" pos:end="331:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="331:50" pos:end="333:48"><expr pos:start="331:50" pos:end="333:48"><literal type="string" pos:start="331:50" pos:end="331:76">"CONDOVER plane encoding: "</literal>

                       <literal type="string" pos:start="333:24" pos:end="333:48">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="333:51" pos:end="333:59"><expr pos:start="333:51" pos:end="333:59"><name pos:start="333:51" pos:end="333:56">status</name><operator pos:start="333:57" pos:end="333:58">&gt;&gt;</operator><literal type="number" pos:start="333:59" pos:end="333:59">1</literal></expr></argument>, <argument pos:start="333:62" pos:end="333:69"><expr pos:start="333:62" pos:end="333:69"><name pos:start="333:62" pos:end="333:67">status</name><operator pos:start="333:68" pos:end="333:68">&amp;</operator><literal type="number" pos:start="333:69" pos:end="333:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="339:9" pos:end="339:14">break;</break>

    <case pos:start="341:5" pos:end="341:27">case <expr pos:start="341:10" pos:end="341:26"><name pos:start="341:10" pos:end="341:26">AV_PICTURE_TYPE_P</name></expr>:</case>

        <if_stmt pos:start="343:9" pos:end="355:9"><if pos:start="343:9" pos:end="355:9">if <condition pos:start="343:12" pos:end="343:26">(<expr pos:start="343:13" pos:end="343:25"><name pos:start="343:13" pos:end="343:25"><name pos:start="343:13" pos:end="343:13">v</name><operator pos:start="343:14" pos:end="343:15">-&gt;</operator><name pos:start="343:16" pos:end="343:25">field_mode</name></name></expr>)</condition> <block pos:start="343:28" pos:end="355:9">{<block_content pos:start="345:13" pos:end="353:13">

            <expr_stmt pos:start="345:13" pos:end="345:38"><expr pos:start="345:13" pos:end="345:37"><name pos:start="345:13" pos:end="345:21"><name pos:start="345:13" pos:end="345:13">v</name><operator pos:start="345:14" pos:end="345:15">-&gt;</operator><name pos:start="345:16" pos:end="345:21">numref</name></name> <operator pos:start="345:23" pos:end="345:23">=</operator> <call pos:start="345:25" pos:end="345:37"><name pos:start="345:25" pos:end="345:33">get_bits1</name><argument_list pos:start="345:34" pos:end="345:37">(<argument pos:start="345:35" pos:end="345:36"><expr pos:start="345:35" pos:end="345:36"><name pos:start="345:35" pos:end="345:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="347:13" pos:end="353:13"><if pos:start="347:13" pos:end="353:13">if <condition pos:start="347:16" pos:end="347:27">(<expr pos:start="347:17" pos:end="347:26"><operator pos:start="347:17" pos:end="347:17">!</operator><name pos:start="347:18" pos:end="347:26"><name pos:start="347:18" pos:end="347:18">v</name><operator pos:start="347:19" pos:end="347:20">-&gt;</operator><name pos:start="347:21" pos:end="347:26">numref</name></name></expr>)</condition> <block pos:start="347:29" pos:end="353:13">{<block_content pos:start="349:17" pos:end="351:72">

                <expr_stmt pos:start="349:17" pos:end="349:53"><expr pos:start="349:17" pos:end="349:52"><name pos:start="349:17" pos:end="349:27"><name pos:start="349:17" pos:end="349:17">v</name><operator pos:start="349:18" pos:end="349:19">-&gt;</operator><name pos:start="349:20" pos:end="349:27">reffield</name></name>          <operator pos:start="349:38" pos:end="349:38">=</operator> <call pos:start="349:40" pos:end="349:52"><name pos:start="349:40" pos:end="349:48">get_bits1</name><argument_list pos:start="349:49" pos:end="349:52">(<argument pos:start="349:50" pos:end="349:51"><expr pos:start="349:50" pos:end="349:51"><name pos:start="349:50" pos:end="349:51">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="351:17" pos:end="351:72"><expr pos:start="351:17" pos:end="351:71"><name pos:start="351:17" pos:end="351:36"><name pos:start="351:17" pos:end="351:17">v</name><operator pos:start="351:18" pos:end="351:19">-&gt;</operator><name pos:start="351:20" pos:end="351:33">ref_field_type</name><index pos:start="351:34" pos:end="351:36">[<expr pos:start="351:35" pos:end="351:35"><literal type="number" pos:start="351:35" pos:end="351:35">0</literal></expr>]</index></name> <operator pos:start="351:38" pos:end="351:38">=</operator> <name pos:start="351:40" pos:end="351:50"><name pos:start="351:40" pos:end="351:40">v</name><operator pos:start="351:41" pos:end="351:42">-&gt;</operator><name pos:start="351:43" pos:end="351:50">reffield</name></name> <operator pos:start="351:52" pos:end="351:52">^</operator> <operator pos:start="351:54" pos:end="351:54">!</operator><name pos:start="351:55" pos:end="351:71"><name pos:start="351:55" pos:end="351:55">v</name><operator pos:start="351:56" pos:end="351:57">-&gt;</operator><name pos:start="351:58" pos:end="351:71">cur_field_type</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="357:9" pos:end="363:27"><if pos:start="357:9" pos:end="359:45">if <condition pos:start="357:12" pos:end="357:27">(<expr pos:start="357:13" pos:end="357:26"><name pos:start="357:13" pos:end="357:26"><name pos:start="357:13" pos:end="357:13">v</name><operator pos:start="357:14" pos:end="357:15">-&gt;</operator><name pos:start="357:16" pos:end="357:26">extended_mv</name></name></expr>)</condition><block type="pseudo" pos:start="359:13" pos:end="359:45"><block_content pos:start="359:13" pos:end="359:45">

            <expr_stmt pos:start="359:13" pos:end="359:45"><expr pos:start="359:13" pos:end="359:44"><name pos:start="359:13" pos:end="359:22"><name pos:start="359:13" pos:end="359:13">v</name><operator pos:start="359:14" pos:end="359:15">-&gt;</operator><name pos:start="359:16" pos:end="359:22">mvrange</name></name> <operator pos:start="359:24" pos:end="359:24">=</operator> <call pos:start="359:26" pos:end="359:44"><name pos:start="359:26" pos:end="359:34">get_unary</name><argument_list pos:start="359:35" pos:end="359:44">(<argument pos:start="359:36" pos:end="359:37"><expr pos:start="359:36" pos:end="359:37"><name pos:start="359:36" pos:end="359:37">gb</name></expr></argument>, <argument pos:start="359:40" pos:end="359:40"><expr pos:start="359:40" pos:end="359:40"><literal type="number" pos:start="359:40" pos:end="359:40">0</literal></expr></argument>, <argument pos:start="359:43" pos:end="359:43"><expr pos:start="359:43" pos:end="359:43"><literal type="number" pos:start="359:43" pos:end="359:43">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="361:9" pos:end="363:27">else<block type="pseudo" pos:start="363:13" pos:end="363:27"><block_content pos:start="363:13" pos:end="363:27">

            <expr_stmt pos:start="363:13" pos:end="363:27"><expr pos:start="363:13" pos:end="363:26"><name pos:start="363:13" pos:end="363:22"><name pos:start="363:13" pos:end="363:13">v</name><operator pos:start="363:14" pos:end="363:15">-&gt;</operator><name pos:start="363:16" pos:end="363:22">mvrange</name></name> <operator pos:start="363:24" pos:end="363:24">=</operator> <literal type="number" pos:start="363:26" pos:end="363:26">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="365:9" pos:end="435:9"><if pos:start="365:9" pos:end="435:9">if <condition pos:start="365:12" pos:end="365:25">(<expr pos:start="365:13" pos:end="365:24"><name pos:start="365:13" pos:end="365:24"><name pos:start="365:13" pos:end="365:13">v</name><operator pos:start="365:14" pos:end="365:15">-&gt;</operator><name pos:start="365:16" pos:end="365:24">interlace</name></name></expr>)</condition> <block pos:start="365:27" pos:end="435:9">{<block_content pos:start="367:13" pos:end="433:13">

            <if_stmt pos:start="367:13" pos:end="373:32"><if pos:start="367:13" pos:end="369:50">if <condition pos:start="367:16" pos:end="367:32">(<expr pos:start="367:17" pos:end="367:31"><name pos:start="367:17" pos:end="367:31"><name pos:start="367:17" pos:end="367:17">v</name><operator pos:start="367:18" pos:end="367:19">-&gt;</operator><name pos:start="367:20" pos:end="367:31">extended_dmv</name></name></expr>)</condition><block type="pseudo" pos:start="369:17" pos:end="369:50"><block_content pos:start="369:17" pos:end="369:50">

                <expr_stmt pos:start="369:17" pos:end="369:50"><expr pos:start="369:17" pos:end="369:49"><name pos:start="369:17" pos:end="369:27"><name pos:start="369:17" pos:end="369:17">v</name><operator pos:start="369:18" pos:end="369:19">-&gt;</operator><name pos:start="369:20" pos:end="369:27">dmvrange</name></name> <operator pos:start="369:29" pos:end="369:29">=</operator> <call pos:start="369:31" pos:end="369:49"><name pos:start="369:31" pos:end="369:39">get_unary</name><argument_list pos:start="369:40" pos:end="369:49">(<argument pos:start="369:41" pos:end="369:42"><expr pos:start="369:41" pos:end="369:42"><name pos:start="369:41" pos:end="369:42">gb</name></expr></argument>, <argument pos:start="369:45" pos:end="369:45"><expr pos:start="369:45" pos:end="369:45"><literal type="number" pos:start="369:45" pos:end="369:45">0</literal></expr></argument>, <argument pos:start="369:48" pos:end="369:48"><expr pos:start="369:48" pos:end="369:48"><literal type="number" pos:start="369:48" pos:end="369:48">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="371:13" pos:end="373:32">else<block type="pseudo" pos:start="373:17" pos:end="373:32"><block_content pos:start="373:17" pos:end="373:32">

                <expr_stmt pos:start="373:17" pos:end="373:32"><expr pos:start="373:17" pos:end="373:31"><name pos:start="373:17" pos:end="373:27"><name pos:start="373:17" pos:end="373:17">v</name><operator pos:start="373:18" pos:end="373:19">-&gt;</operator><name pos:start="373:20" pos:end="373:27">dmvrange</name></name> <operator pos:start="373:29" pos:end="373:29">=</operator> <literal type="number" pos:start="373:31" pos:end="373:31">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="375:13" pos:end="433:13"><if pos:start="375:13" pos:end="433:13">if <condition pos:start="375:16" pos:end="375:38">(<expr pos:start="375:17" pos:end="375:37"><name pos:start="375:17" pos:end="375:22"><name pos:start="375:17" pos:end="375:17">v</name><operator pos:start="375:18" pos:end="375:19">-&gt;</operator><name pos:start="375:20" pos:end="375:22">fcm</name></name> <operator pos:start="375:24" pos:end="375:25">==</operator> <name pos:start="375:27" pos:end="375:37">ILACE_FRAME</name></expr>)</condition> <block pos:start="375:40" pos:end="433:13">{<block_content pos:start="377:17" pos:end="431:17"> <comment type="line" pos:start="375:42" pos:end="375:68">// interlaced frame picture</comment>

                <expr_stmt pos:start="377:17" pos:end="377:48"><expr pos:start="377:17" pos:end="377:47"><name pos:start="377:17" pos:end="377:31"><name pos:start="377:17" pos:end="377:17">v</name><operator pos:start="377:18" pos:end="377:19">-&gt;</operator><name pos:start="377:20" pos:end="377:31">fourmvswitch</name></name> <operator pos:start="377:33" pos:end="377:33">=</operator> <call pos:start="377:35" pos:end="377:47"><name pos:start="377:35" pos:end="377:43">get_bits1</name><argument_list pos:start="377:44" pos:end="377:47">(<argument pos:start="377:45" pos:end="377:46"><expr pos:start="377:45" pos:end="377:46"><name pos:start="377:45" pos:end="377:46">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="379:17" pos:end="379:48"><expr pos:start="379:17" pos:end="379:47"><name pos:start="379:17" pos:end="379:26"><name pos:start="379:17" pos:end="379:17">v</name><operator pos:start="379:18" pos:end="379:19">-&gt;</operator><name pos:start="379:20" pos:end="379:26">intcomp</name></name>      <operator pos:start="379:33" pos:end="379:33">=</operator> <call pos:start="379:35" pos:end="379:47"><name pos:start="379:35" pos:end="379:43">get_bits1</name><argument_list pos:start="379:44" pos:end="379:47">(<argument pos:start="379:45" pos:end="379:46"><expr pos:start="379:45" pos:end="379:46"><name pos:start="379:45" pos:end="379:46">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="381:17" pos:end="393:17"><if pos:start="381:17" pos:end="393:17">if <condition pos:start="381:20" pos:end="381:31">(<expr pos:start="381:21" pos:end="381:30"><name pos:start="381:21" pos:end="381:30"><name pos:start="381:21" pos:end="381:21">v</name><operator pos:start="381:22" pos:end="381:23">-&gt;</operator><name pos:start="381:24" pos:end="381:30">intcomp</name></name></expr>)</condition> <block pos:start="381:33" pos:end="393:17">{<block_content pos:start="383:21" pos:end="391:39">

                    <expr_stmt pos:start="383:21" pos:end="383:50"><expr pos:start="383:21" pos:end="383:49"><name pos:start="383:21" pos:end="383:31"><name pos:start="383:21" pos:end="383:21">v</name><operator pos:start="383:22" pos:end="383:23">-&gt;</operator><name pos:start="383:24" pos:end="383:31">lumscale</name></name> <operator pos:start="383:33" pos:end="383:33">=</operator> <call pos:start="383:35" pos:end="383:49"><name pos:start="383:35" pos:end="383:42">get_bits</name><argument_list pos:start="383:43" pos:end="383:49">(<argument pos:start="383:44" pos:end="383:45"><expr pos:start="383:44" pos:end="383:45"><name pos:start="383:44" pos:end="383:45">gb</name></expr></argument>, <argument pos:start="383:48" pos:end="383:48"><expr pos:start="383:48" pos:end="383:48"><literal type="number" pos:start="383:48" pos:end="383:48">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="385:21" pos:end="385:50"><expr pos:start="385:21" pos:end="385:49"><name pos:start="385:21" pos:end="385:31"><name pos:start="385:21" pos:end="385:21">v</name><operator pos:start="385:22" pos:end="385:23">-&gt;</operator><name pos:start="385:24" pos:end="385:31">lumshift</name></name> <operator pos:start="385:33" pos:end="385:33">=</operator> <call pos:start="385:35" pos:end="385:49"><name pos:start="385:35" pos:end="385:42">get_bits</name><argument_list pos:start="385:43" pos:end="385:49">(<argument pos:start="385:44" pos:end="385:45"><expr pos:start="385:44" pos:end="385:45"><name pos:start="385:44" pos:end="385:45">gb</name></expr></argument>, <argument pos:start="385:48" pos:end="385:48"><expr pos:start="385:48" pos:end="385:48"><literal type="number" pos:start="385:48" pos:end="385:48">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="387:21" pos:end="387:93"><expr pos:start="387:21" pos:end="387:92"><call pos:start="387:21" pos:end="387:92"><name pos:start="387:21" pos:end="387:28">INIT_LUT</name><argument_list pos:start="387:29" pos:end="387:92">(<argument pos:start="387:30" pos:end="387:40"><expr pos:start="387:30" pos:end="387:40"><name pos:start="387:30" pos:end="387:40"><name pos:start="387:30" pos:end="387:30">v</name><operator pos:start="387:31" pos:end="387:32">-&gt;</operator><name pos:start="387:33" pos:end="387:40">lumscale</name></name></expr></argument>, <argument pos:start="387:43" pos:end="387:53"><expr pos:start="387:43" pos:end="387:53"><name pos:start="387:43" pos:end="387:53"><name pos:start="387:43" pos:end="387:43">v</name><operator pos:start="387:44" pos:end="387:45">-&gt;</operator><name pos:start="387:46" pos:end="387:53">lumshift</name></name></expr></argument>, <argument pos:start="387:56" pos:end="387:70"><expr pos:start="387:56" pos:end="387:70"><name pos:start="387:56" pos:end="387:70"><name pos:start="387:56" pos:end="387:56">v</name><operator pos:start="387:57" pos:end="387:58">-&gt;</operator><name pos:start="387:59" pos:end="387:67">last_luty</name><index pos:start="387:68" pos:end="387:70">[<expr pos:start="387:69" pos:end="387:69"><literal type="number" pos:start="387:69" pos:end="387:69">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="387:73" pos:end="387:88"><expr pos:start="387:73" pos:end="387:88"><name pos:start="387:73" pos:end="387:88"><name pos:start="387:73" pos:end="387:73">v</name><operator pos:start="387:74" pos:end="387:75">-&gt;</operator><name pos:start="387:76" pos:end="387:85">last_lutuv</name><index pos:start="387:86" pos:end="387:88">[<expr pos:start="387:87" pos:end="387:87"><literal type="number" pos:start="387:87" pos:end="387:87">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="387:91" pos:end="387:91"><expr pos:start="387:91" pos:end="387:91"><literal type="number" pos:start="387:91" pos:end="387:91">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="389:21" pos:end="389:93"><expr pos:start="389:21" pos:end="389:92"><call pos:start="389:21" pos:end="389:92"><name pos:start="389:21" pos:end="389:28">INIT_LUT</name><argument_list pos:start="389:29" pos:end="389:92">(<argument pos:start="389:30" pos:end="389:40"><expr pos:start="389:30" pos:end="389:40"><name pos:start="389:30" pos:end="389:40"><name pos:start="389:30" pos:end="389:30">v</name><operator pos:start="389:31" pos:end="389:32">-&gt;</operator><name pos:start="389:33" pos:end="389:40">lumscale</name></name></expr></argument>, <argument pos:start="389:43" pos:end="389:53"><expr pos:start="389:43" pos:end="389:53"><name pos:start="389:43" pos:end="389:53"><name pos:start="389:43" pos:end="389:43">v</name><operator pos:start="389:44" pos:end="389:45">-&gt;</operator><name pos:start="389:46" pos:end="389:53">lumshift</name></name></expr></argument>, <argument pos:start="389:56" pos:end="389:70"><expr pos:start="389:56" pos:end="389:70"><name pos:start="389:56" pos:end="389:70"><name pos:start="389:56" pos:end="389:56">v</name><operator pos:start="389:57" pos:end="389:58">-&gt;</operator><name pos:start="389:59" pos:end="389:67">last_luty</name><index pos:start="389:68" pos:end="389:70">[<expr pos:start="389:69" pos:end="389:69"><literal type="number" pos:start="389:69" pos:end="389:69">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="389:73" pos:end="389:88"><expr pos:start="389:73" pos:end="389:88"><name pos:start="389:73" pos:end="389:88"><name pos:start="389:73" pos:end="389:73">v</name><operator pos:start="389:74" pos:end="389:75">-&gt;</operator><name pos:start="389:76" pos:end="389:85">last_lutuv</name><index pos:start="389:86" pos:end="389:88">[<expr pos:start="389:87" pos:end="389:87"><literal type="number" pos:start="389:87" pos:end="389:87">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="389:91" pos:end="389:91"><expr pos:start="389:91" pos:end="389:91"><literal type="number" pos:start="389:91" pos:end="389:91">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="391:21" pos:end="391:39"><expr pos:start="391:21" pos:end="391:38"><name pos:start="391:21" pos:end="391:34"><name pos:start="391:21" pos:end="391:21">v</name><operator pos:start="391:22" pos:end="391:23">-&gt;</operator><name pos:start="391:24" pos:end="391:34">last_use_ic</name></name> <operator pos:start="391:36" pos:end="391:36">=</operator> <literal type="number" pos:start="391:38" pos:end="391:38">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="395:17" pos:end="395:82"><expr pos:start="395:17" pos:end="395:81"><name pos:start="395:17" pos:end="395:22">status</name> <operator pos:start="395:24" pos:end="395:24">=</operator> <call pos:start="395:26" pos:end="395:81"><name pos:start="395:26" pos:end="395:42">bitplane_decoding</name><argument_list pos:start="395:43" pos:end="395:81">(<argument pos:start="395:44" pos:end="395:60"><expr pos:start="395:44" pos:end="395:60"><name pos:start="395:44" pos:end="395:60"><name pos:start="395:44" pos:end="395:44">v</name><operator pos:start="395:45" pos:end="395:46">-&gt;</operator><name pos:start="395:47" pos:end="395:47">s</name><operator pos:start="395:48" pos:end="395:48">.</operator><name pos:start="395:49" pos:end="395:60">mbskip_table</name></name></expr></argument>, <argument pos:start="395:63" pos:end="395:77"><expr pos:start="395:63" pos:end="395:77"><operator pos:start="395:63" pos:end="395:63">&amp;</operator><name pos:start="395:64" pos:end="395:77"><name pos:start="395:64" pos:end="395:64">v</name><operator pos:start="395:65" pos:end="395:66">-&gt;</operator><name pos:start="395:67" pos:end="395:77">skip_is_raw</name></name></expr></argument>, <argument pos:start="395:80" pos:end="395:80"><expr pos:start="395:80" pos:end="395:80"><name pos:start="395:80" pos:end="395:80">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="397:17" pos:end="399:71"><expr pos:start="397:17" pos:end="399:70"><call pos:start="397:17" pos:end="399:70"><name pos:start="397:17" pos:end="397:22">av_log</name><argument_list pos:start="397:23" pos:end="399:70">(<argument pos:start="397:24" pos:end="397:33"><expr pos:start="397:24" pos:end="397:33"><name pos:start="397:24" pos:end="397:33"><name pos:start="397:24" pos:end="397:24">v</name><operator pos:start="397:25" pos:end="397:26">-&gt;</operator><name pos:start="397:27" pos:end="397:27">s</name><operator pos:start="397:28" pos:end="397:28">.</operator><name pos:start="397:29" pos:end="397:33">avctx</name></name></expr></argument>, <argument pos:start="397:36" pos:end="397:47"><expr pos:start="397:36" pos:end="397:47"><name pos:start="397:36" pos:end="397:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="397:50" pos:end="399:48"><expr pos:start="397:50" pos:end="399:48"><literal type="string" pos:start="397:50" pos:end="397:74">"SKIPMB plane encoding: "</literal>

                       <literal type="string" pos:start="399:24" pos:end="399:48">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="399:51" pos:end="399:59"><expr pos:start="399:51" pos:end="399:59"><name pos:start="399:51" pos:end="399:56">status</name><operator pos:start="399:57" pos:end="399:58">&gt;&gt;</operator><literal type="number" pos:start="399:59" pos:end="399:59">1</literal></expr></argument>, <argument pos:start="399:62" pos:end="399:69"><expr pos:start="399:62" pos:end="399:69"><name pos:start="399:62" pos:end="399:67">status</name><operator pos:start="399:68" pos:end="399:68">&amp;</operator><literal type="number" pos:start="399:69" pos:end="399:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="401:17" pos:end="401:44"><expr pos:start="401:17" pos:end="401:43"><name pos:start="401:17" pos:end="401:25">mbmodetab</name> <operator pos:start="401:27" pos:end="401:27">=</operator> <call pos:start="401:29" pos:end="401:43"><name pos:start="401:29" pos:end="401:36">get_bits</name><argument_list pos:start="401:37" pos:end="401:43">(<argument pos:start="401:38" pos:end="401:39"><expr pos:start="401:38" pos:end="401:39"><name pos:start="401:38" pos:end="401:39">gb</name></expr></argument>, <argument pos:start="401:42" pos:end="401:42"><expr pos:start="401:42" pos:end="401:42"><literal type="number" pos:start="401:42" pos:end="401:42">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="403:17" pos:end="409:79"><if pos:start="403:17" pos:end="405:76">if <condition pos:start="403:20" pos:end="403:36">(<expr pos:start="403:21" pos:end="403:35"><name pos:start="403:21" pos:end="403:35"><name pos:start="403:21" pos:end="403:21">v</name><operator pos:start="403:22" pos:end="403:23">-&gt;</operator><name pos:start="403:24" pos:end="403:35">fourmvswitch</name></name></expr>)</condition><block type="pseudo" pos:start="405:21" pos:end="405:76"><block_content pos:start="405:21" pos:end="405:76">

                    <expr_stmt pos:start="405:21" pos:end="405:76"><expr pos:start="405:21" pos:end="405:75"><name pos:start="405:21" pos:end="405:33"><name pos:start="405:21" pos:end="405:21">v</name><operator pos:start="405:22" pos:end="405:23">-&gt;</operator><name pos:start="405:24" pos:end="405:33">mbmode_vlc</name></name> <operator pos:start="405:35" pos:end="405:35">=</operator> <operator pos:start="405:37" pos:end="405:37">&amp;</operator><name pos:start="405:38" pos:end="405:75"><name pos:start="405:38" pos:end="405:64">ff_vc1_intfr_4mv_mbmode_vlc</name><index pos:start="405:65" pos:end="405:75">[<expr pos:start="405:66" pos:end="405:74"><name pos:start="405:66" pos:end="405:74">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="407:17" pos:end="409:79">else<block type="pseudo" pos:start="409:21" pos:end="409:79"><block_content pos:start="409:21" pos:end="409:79">

                    <expr_stmt pos:start="409:21" pos:end="409:79"><expr pos:start="409:21" pos:end="409:78"><name pos:start="409:21" pos:end="409:33"><name pos:start="409:21" pos:end="409:21">v</name><operator pos:start="409:22" pos:end="409:23">-&gt;</operator><name pos:start="409:24" pos:end="409:33">mbmode_vlc</name></name> <operator pos:start="409:35" pos:end="409:35">=</operator> <operator pos:start="409:37" pos:end="409:37">&amp;</operator><name pos:start="409:38" pos:end="409:78"><name pos:start="409:38" pos:end="409:67">ff_vc1_intfr_non4mv_mbmode_vlc</name><index pos:start="409:68" pos:end="409:78">[<expr pos:start="409:69" pos:end="409:77"><name pos:start="409:69" pos:end="409:77">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="411:17" pos:end="411:49"><expr pos:start="411:17" pos:end="411:48"><name pos:start="411:17" pos:end="411:22">imvtab</name>         <operator pos:start="411:32" pos:end="411:32">=</operator> <call pos:start="411:34" pos:end="411:48"><name pos:start="411:34" pos:end="411:41">get_bits</name><argument_list pos:start="411:42" pos:end="411:48">(<argument pos:start="411:43" pos:end="411:44"><expr pos:start="411:43" pos:end="411:44"><name pos:start="411:43" pos:end="411:44">gb</name></expr></argument>, <argument pos:start="411:47" pos:end="411:47"><expr pos:start="411:47" pos:end="411:47"><literal type="number" pos:start="411:47" pos:end="411:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="413:17" pos:end="413:65"><expr pos:start="413:17" pos:end="413:64"><name pos:start="413:17" pos:end="413:26"><name pos:start="413:17" pos:end="413:17">v</name><operator pos:start="413:18" pos:end="413:19">-&gt;</operator><name pos:start="413:20" pos:end="413:26">imv_vlc</name></name>     <operator pos:start="413:32" pos:end="413:32">=</operator> <operator pos:start="413:34" pos:end="413:34">&amp;</operator><name pos:start="413:35" pos:end="413:64"><name pos:start="413:35" pos:end="413:56">ff_vc1_1ref_mvdata_vlc</name><index pos:start="413:57" pos:end="413:64">[<expr pos:start="413:58" pos:end="413:63"><name pos:start="413:58" pos:end="413:63">imvtab</name></expr>]</index></name></expr>;</expr_stmt>

                <comment type="line" pos:start="415:17" pos:end="415:62">// interlaced p-picture cbpcy range is [1, 63]</comment>

                <expr_stmt pos:start="417:17" pos:end="417:49"><expr pos:start="417:17" pos:end="417:48"><name pos:start="417:17" pos:end="417:23">icbptab</name>        <operator pos:start="417:32" pos:end="417:32">=</operator> <call pos:start="417:34" pos:end="417:48"><name pos:start="417:34" pos:end="417:41">get_bits</name><argument_list pos:start="417:42" pos:end="417:48">(<argument pos:start="417:43" pos:end="417:44"><expr pos:start="417:43" pos:end="417:44"><name pos:start="417:43" pos:end="417:44">gb</name></expr></argument>, <argument pos:start="417:47" pos:end="417:47"><expr pos:start="417:47" pos:end="417:47"><literal type="number" pos:start="417:47" pos:end="417:47">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="419:17" pos:end="419:61"><expr pos:start="419:17" pos:end="419:60"><name pos:start="419:17" pos:end="419:28"><name pos:start="419:17" pos:end="419:17">v</name><operator pos:start="419:18" pos:end="419:19">-&gt;</operator><name pos:start="419:20" pos:end="419:28">cbpcy_vlc</name></name>   <operator pos:start="419:32" pos:end="419:32">=</operator> <operator pos:start="419:34" pos:end="419:34">&amp;</operator><name pos:start="419:35" pos:end="419:60"><name pos:start="419:35" pos:end="419:51">ff_vc1_icbpcy_vlc</name><index pos:start="419:52" pos:end="419:60">[<expr pos:start="419:53" pos:end="419:59"><name pos:start="419:53" pos:end="419:59">icbptab</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="421:17" pos:end="421:49"><expr pos:start="421:17" pos:end="421:48"><name pos:start="421:17" pos:end="421:26">twomvbptab</name>     <operator pos:start="421:32" pos:end="421:32">=</operator> <call pos:start="421:34" pos:end="421:48"><name pos:start="421:34" pos:end="421:41">get_bits</name><argument_list pos:start="421:42" pos:end="421:48">(<argument pos:start="421:43" pos:end="421:44"><expr pos:start="421:43" pos:end="421:44"><name pos:start="421:43" pos:end="421:44">gb</name></expr></argument>, <argument pos:start="421:47" pos:end="421:47"><expr pos:start="421:47" pos:end="421:47"><literal type="number" pos:start="421:47" pos:end="421:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="423:17" pos:end="423:75"><expr pos:start="423:17" pos:end="423:74"><name pos:start="423:17" pos:end="423:30"><name pos:start="423:17" pos:end="423:17">v</name><operator pos:start="423:18" pos:end="423:19">-&gt;</operator><name pos:start="423:20" pos:end="423:30">twomvbp_vlc</name></name> <operator pos:start="423:32" pos:end="423:32">=</operator> <operator pos:start="423:34" pos:end="423:34">&amp;</operator><name pos:start="423:35" pos:end="423:74"><name pos:start="423:35" pos:end="423:62">ff_vc1_2mv_block_pattern_vlc</name><index pos:start="423:63" pos:end="423:74">[<expr pos:start="423:64" pos:end="423:73"><name pos:start="423:64" pos:end="423:73">twomvbptab</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="425:17" pos:end="431:17"><if pos:start="425:17" pos:end="431:17">if <condition pos:start="425:20" pos:end="425:36">(<expr pos:start="425:21" pos:end="425:35"><name pos:start="425:21" pos:end="425:35"><name pos:start="425:21" pos:end="425:21">v</name><operator pos:start="425:22" pos:end="425:23">-&gt;</operator><name pos:start="425:24" pos:end="425:35">fourmvswitch</name></name></expr>)</condition> <block pos:start="425:38" pos:end="431:17">{<block_content pos:start="427:21" pos:end="429:81">

                    <expr_stmt pos:start="427:21" pos:end="427:54"><expr pos:start="427:21" pos:end="427:53"><name pos:start="427:21" pos:end="427:31">fourmvbptab</name>     <operator pos:start="427:37" pos:end="427:37">=</operator> <call pos:start="427:39" pos:end="427:53"><name pos:start="427:39" pos:end="427:46">get_bits</name><argument_list pos:start="427:47" pos:end="427:53">(<argument pos:start="427:48" pos:end="427:49"><expr pos:start="427:48" pos:end="427:49"><name pos:start="427:48" pos:end="427:49">gb</name></expr></argument>, <argument pos:start="427:52" pos:end="427:52"><expr pos:start="427:52" pos:end="427:52"><literal type="number" pos:start="427:52" pos:end="427:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="429:21" pos:end="429:81"><expr pos:start="429:21" pos:end="429:80"><name pos:start="429:21" pos:end="429:35"><name pos:start="429:21" pos:end="429:21">v</name><operator pos:start="429:22" pos:end="429:23">-&gt;</operator><name pos:start="429:24" pos:end="429:35">fourmvbp_vlc</name></name> <operator pos:start="429:37" pos:end="429:37">=</operator> <operator pos:start="429:39" pos:end="429:39">&amp;</operator><name pos:start="429:40" pos:end="429:80"><name pos:start="429:40" pos:end="429:67">ff_vc1_4mv_block_pattern_vlc</name><index pos:start="429:68" pos:end="429:80">[<expr pos:start="429:69" pos:end="429:79"><name pos:start="429:69" pos:end="429:79">fourmvbptab</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="437:9" pos:end="437:52"><expr pos:start="437:9" pos:end="437:51"><name pos:start="437:9" pos:end="437:14"><name pos:start="437:9" pos:end="437:9">v</name><operator pos:start="437:10" pos:end="437:11">-&gt;</operator><name pos:start="437:12" pos:end="437:14">k_x</name></name> <operator pos:start="437:16" pos:end="437:16">=</operator> <name pos:start="437:18" pos:end="437:27"><name pos:start="437:18" pos:end="437:18">v</name><operator pos:start="437:19" pos:end="437:20">-&gt;</operator><name pos:start="437:21" pos:end="437:27">mvrange</name></name> <operator pos:start="437:29" pos:end="437:29">+</operator> <literal type="number" pos:start="437:31" pos:end="437:33">9</literal> <operator pos:start="437:33" pos:end="437:33">+</operator> <operator pos:start="437:35" pos:end="437:35">(</operator><name pos:start="437:36" pos:end="437:45"><name pos:start="437:36" pos:end="437:36">v</name><operator pos:start="437:37" pos:end="437:38">-&gt;</operator><name pos:start="437:39" pos:end="437:45">mvrange</name></name> <operator pos:start="437:47" pos:end="437:48">&gt;&gt;</operator> <literal type="number" pos:start="437:50" pos:end="437:50">1</literal><operator pos:start="437:51" pos:end="437:51">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="437:54" pos:end="437:76">//k_x can be 9 10 12 13</comment>

        <expr_stmt pos:start="439:9" pos:end="439:32"><expr pos:start="439:9" pos:end="439:31"><name pos:start="439:9" pos:end="439:14"><name pos:start="439:9" pos:end="439:9">v</name><operator pos:start="439:10" pos:end="439:11">-&gt;</operator><name pos:start="439:12" pos:end="439:14">k_y</name></name> <operator pos:start="439:16" pos:end="439:16">=</operator> <name pos:start="439:18" pos:end="439:27"><name pos:start="439:18" pos:end="439:18">v</name><operator pos:start="439:19" pos:end="439:20">-&gt;</operator><name pos:start="439:21" pos:end="439:27">mvrange</name></name> <operator pos:start="439:29" pos:end="439:29">+</operator> <literal type="number" pos:start="439:31" pos:end="439:31">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="439:34" pos:end="439:55">//k_y can be 8 9 10 11</comment>

        <expr_stmt pos:start="441:9" pos:end="441:39"><expr pos:start="441:9" pos:end="441:38"><name pos:start="441:9" pos:end="441:18"><name pos:start="441:9" pos:end="441:9">v</name><operator pos:start="441:10" pos:end="441:11">-&gt;</operator><name pos:start="441:12" pos:end="441:18">range_x</name></name> <operator pos:start="441:20" pos:end="441:20">=</operator> <literal type="number" pos:start="441:22" pos:end="441:22">1</literal> <operator pos:start="441:24" pos:end="441:25">&lt;&lt;</operator> <operator pos:start="441:27" pos:end="441:27">(</operator><name pos:start="441:28" pos:end="441:33"><name pos:start="441:28" pos:end="441:28">v</name><operator pos:start="441:29" pos:end="441:30">-&gt;</operator><name pos:start="441:31" pos:end="441:33">k_x</name></name> <operator pos:start="441:35" pos:end="441:35">-</operator> <literal type="number" pos:start="441:37" pos:end="441:37">1</literal><operator pos:start="441:38" pos:end="441:38">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="443:9" pos:end="443:39"><expr pos:start="443:9" pos:end="443:38"><name pos:start="443:9" pos:end="443:18"><name pos:start="443:9" pos:end="443:9">v</name><operator pos:start="443:10" pos:end="443:11">-&gt;</operator><name pos:start="443:12" pos:end="443:18">range_y</name></name> <operator pos:start="443:20" pos:end="443:20">=</operator> <literal type="number" pos:start="443:22" pos:end="443:22">1</literal> <operator pos:start="443:24" pos:end="443:25">&lt;&lt;</operator> <operator pos:start="443:27" pos:end="443:27">(</operator><name pos:start="443:28" pos:end="443:33"><name pos:start="443:28" pos:end="443:28">v</name><operator pos:start="443:29" pos:end="443:30">-&gt;</operator><name pos:start="443:31" pos:end="443:33">k_y</name></name> <operator pos:start="443:35" pos:end="443:35">-</operator> <literal type="number" pos:start="443:37" pos:end="443:37">1</literal><operator pos:start="443:38" pos:end="443:38">)</operator></expr>;</expr_stmt>



        <if_stmt pos:start="447:9" pos:end="457:28"><if pos:start="447:9" pos:end="449:28">if <condition pos:start="447:12" pos:end="447:22">(<expr pos:start="447:13" pos:end="447:21"><name pos:start="447:13" pos:end="447:17"><name pos:start="447:13" pos:end="447:13">v</name><operator pos:start="447:14" pos:end="447:15">-&gt;</operator><name pos:start="447:16" pos:end="447:17">pq</name></name> <operator pos:start="447:19" pos:end="447:19">&lt;</operator> <literal type="number" pos:start="447:21" pos:end="447:21">5</literal></expr>)</condition><block type="pseudo" pos:start="449:13" pos:end="449:28"><block_content pos:start="449:13" pos:end="449:28">

            <expr_stmt pos:start="449:13" pos:end="449:28"><expr pos:start="449:13" pos:end="449:27"><name pos:start="449:13" pos:end="449:23"><name pos:start="449:13" pos:end="449:13">v</name><operator pos:start="449:14" pos:end="449:15">-&gt;</operator><name pos:start="449:16" pos:end="449:23">tt_index</name></name> <operator pos:start="449:25" pos:end="449:25">=</operator> <literal type="number" pos:start="449:27" pos:end="449:27">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="451:9" pos:end="453:28">else if <condition pos:start="451:17" pos:end="451:28">(<expr pos:start="451:18" pos:end="451:27"><name pos:start="451:18" pos:end="451:22"><name pos:start="451:18" pos:end="451:18">v</name><operator pos:start="451:19" pos:end="451:20">-&gt;</operator><name pos:start="451:21" pos:end="451:22">pq</name></name> <operator pos:start="451:24" pos:end="451:24">&lt;</operator> <literal type="number" pos:start="451:26" pos:end="451:27">13</literal></expr>)</condition><block type="pseudo" pos:start="453:13" pos:end="453:28"><block_content pos:start="453:13" pos:end="453:28">

            <expr_stmt pos:start="453:13" pos:end="453:28"><expr pos:start="453:13" pos:end="453:27"><name pos:start="453:13" pos:end="453:23"><name pos:start="453:13" pos:end="453:13">v</name><operator pos:start="453:14" pos:end="453:15">-&gt;</operator><name pos:start="453:16" pos:end="453:23">tt_index</name></name> <operator pos:start="453:25" pos:end="453:25">=</operator> <literal type="number" pos:start="453:27" pos:end="453:27">1</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="455:9" pos:end="457:28">else<block type="pseudo" pos:start="457:13" pos:end="457:28"><block_content pos:start="457:13" pos:end="457:28">

            <expr_stmt pos:start="457:13" pos:end="457:28"><expr pos:start="457:13" pos:end="457:27"><name pos:start="457:13" pos:end="457:23"><name pos:start="457:13" pos:end="457:13">v</name><operator pos:start="457:14" pos:end="457:15">-&gt;</operator><name pos:start="457:16" pos:end="457:23">tt_index</name></name> <operator pos:start="457:25" pos:end="457:25">=</operator> <literal type="number" pos:start="457:27" pos:end="457:27">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="459:9" pos:end="569:9"><if pos:start="459:9" pos:end="569:9">if <condition pos:start="459:12" pos:end="459:34">(<expr pos:start="459:13" pos:end="459:33"><name pos:start="459:13" pos:end="459:18"><name pos:start="459:13" pos:end="459:13">v</name><operator pos:start="459:14" pos:end="459:15">-&gt;</operator><name pos:start="459:16" pos:end="459:18">fcm</name></name> <operator pos:start="459:20" pos:end="459:21">!=</operator> <name pos:start="459:23" pos:end="459:33">ILACE_FRAME</name></expr>)</condition> <block pos:start="459:36" pos:end="569:9">{<block_content pos:start="461:13" pos:end="567:75">

            <decl_stmt pos:start="461:13" pos:end="461:23"><decl pos:start="461:13" pos:end="461:22"><type pos:start="461:13" pos:end="461:15"><name pos:start="461:13" pos:end="461:15">int</name></type> <name pos:start="461:17" pos:end="461:22">mvmode</name></decl>;</decl_stmt>

            <expr_stmt pos:start="463:13" pos:end="463:45"><expr pos:start="463:13" pos:end="463:44"><name pos:start="463:13" pos:end="463:18">mvmode</name>     <operator pos:start="463:24" pos:end="463:24">=</operator> <call pos:start="463:26" pos:end="463:44"><name pos:start="463:26" pos:end="463:34">get_unary</name><argument_list pos:start="463:35" pos:end="463:44">(<argument pos:start="463:36" pos:end="463:37"><expr pos:start="463:36" pos:end="463:37"><name pos:start="463:36" pos:end="463:37">gb</name></expr></argument>, <argument pos:start="463:40" pos:end="463:40"><expr pos:start="463:40" pos:end="463:40"><literal type="number" pos:start="463:40" pos:end="463:40">1</literal></expr></argument>, <argument pos:start="463:43" pos:end="463:43"><expr pos:start="463:43" pos:end="463:43"><literal type="number" pos:start="463:43" pos:end="463:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="465:13" pos:end="465:46"><expr pos:start="465:13" pos:end="465:45"><name pos:start="465:13" pos:end="465:20">lowquant</name>   <operator pos:start="465:24" pos:end="465:24">=</operator> <ternary pos:start="465:26" pos:end="465:45"><condition pos:start="465:26" pos:end="465:39"><expr pos:start="465:26" pos:end="465:37"><operator pos:start="465:26" pos:end="465:26">(</operator><name pos:start="465:27" pos:end="465:31"><name pos:start="465:27" pos:end="465:27">v</name><operator pos:start="465:28" pos:end="465:29">-&gt;</operator><name pos:start="465:30" pos:end="465:31">pq</name></name> <operator pos:start="465:33" pos:end="465:33">&gt;</operator> <literal type="number" pos:start="465:35" pos:end="465:36">12</literal><operator pos:start="465:37" pos:end="465:37">)</operator></expr> ?</condition><then pos:start="465:41" pos:end="465:41"> <expr pos:start="465:41" pos:end="465:41"><literal type="number" pos:start="465:41" pos:end="465:41">0</literal></expr> </then><else pos:start="465:43" pos:end="465:45">: <expr pos:start="465:45" pos:end="465:45"><literal type="number" pos:start="465:45" pos:end="465:45">1</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="467:13" pos:end="467:65"><expr pos:start="467:13" pos:end="467:64"><name pos:start="467:13" pos:end="467:22"><name pos:start="467:13" pos:end="467:13">v</name><operator pos:start="467:14" pos:end="467:15">-&gt;</operator><name pos:start="467:16" pos:end="467:22">mv_mode</name></name> <operator pos:start="467:24" pos:end="467:24">=</operator> <name pos:start="467:26" pos:end="467:64"><name pos:start="467:26" pos:end="467:46">ff_vc1_mv_pmode_table</name><index pos:start="467:47" pos:end="467:56">[<expr pos:start="467:48" pos:end="467:55"><name pos:start="467:48" pos:end="467:55">lowquant</name></expr>]</index><index pos:start="467:57" pos:end="467:64">[<expr pos:start="467:58" pos:end="467:63"><name pos:start="467:58" pos:end="467:63">mvmode</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="469:13" pos:end="541:13"><if pos:start="469:13" pos:end="541:13">if <condition pos:start="469:16" pos:end="469:54">(<expr pos:start="469:17" pos:end="469:53"><name pos:start="469:17" pos:end="469:26"><name pos:start="469:17" pos:end="469:17">v</name><operator pos:start="469:18" pos:end="469:19">-&gt;</operator><name pos:start="469:20" pos:end="469:26">mv_mode</name></name> <operator pos:start="469:28" pos:end="469:29">==</operator> <name pos:start="469:31" pos:end="469:53">MV_PMODE_INTENSITY_COMP</name></expr>)</condition> <block pos:start="469:56" pos:end="541:13">{<block_content pos:start="471:17" pos:end="539:35">

                <decl_stmt pos:start="471:17" pos:end="471:28"><decl pos:start="471:17" pos:end="471:27"><type pos:start="471:17" pos:end="471:19"><name pos:start="471:17" pos:end="471:19">int</name></type> <name pos:start="471:21" pos:end="471:27">mvmode2</name></decl>;</decl_stmt>

                <expr_stmt pos:start="473:17" pos:end="473:46"><expr pos:start="473:17" pos:end="473:45"><name pos:start="473:17" pos:end="473:23">mvmode2</name> <operator pos:start="473:25" pos:end="473:25">=</operator> <call pos:start="473:27" pos:end="473:45"><name pos:start="473:27" pos:end="473:35">get_unary</name><argument_list pos:start="473:36" pos:end="473:45">(<argument pos:start="473:37" pos:end="473:38"><expr pos:start="473:37" pos:end="473:38"><name pos:start="473:37" pos:end="473:38">gb</name></expr></argument>, <argument pos:start="473:41" pos:end="473:41"><expr pos:start="473:41" pos:end="473:41"><literal type="number" pos:start="473:41" pos:end="473:41">1</literal></expr></argument>, <argument pos:start="473:44" pos:end="473:44"><expr pos:start="473:44" pos:end="473:44"><literal type="number" pos:start="473:44" pos:end="473:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="475:17" pos:end="475:72"><expr pos:start="475:17" pos:end="475:71"><name pos:start="475:17" pos:end="475:27"><name pos:start="475:17" pos:end="475:17">v</name><operator pos:start="475:18" pos:end="475:19">-&gt;</operator><name pos:start="475:20" pos:end="475:27">mv_mode2</name></name> <operator pos:start="475:29" pos:end="475:29">=</operator> <name pos:start="475:31" pos:end="475:71"><name pos:start="475:31" pos:end="475:52">ff_vc1_mv_pmode_table2</name><index pos:start="475:53" pos:end="475:62">[<expr pos:start="475:54" pos:end="475:61"><name pos:start="475:54" pos:end="475:61">lowquant</name></expr>]</index><index pos:start="475:63" pos:end="475:71">[<expr pos:start="475:64" pos:end="475:70"><name pos:start="475:64" pos:end="475:70">mvmode2</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="477:17" pos:end="483:40"><if pos:start="477:17" pos:end="481:17">if <condition pos:start="477:20" pos:end="477:34">(<expr pos:start="477:21" pos:end="477:33"><name pos:start="477:21" pos:end="477:33"><name pos:start="477:21" pos:end="477:21">v</name><operator pos:start="477:22" pos:end="477:23">-&gt;</operator><name pos:start="477:24" pos:end="477:33">field_mode</name></name></expr>)</condition> <block pos:start="477:36" pos:end="481:17">{<block_content pos:start="479:21" pos:end="479:56">

                    <expr_stmt pos:start="479:21" pos:end="479:56"><expr pos:start="479:21" pos:end="479:55"><name pos:start="479:21" pos:end="479:35"><name pos:start="479:21" pos:end="479:21">v</name><operator pos:start="479:22" pos:end="479:23">-&gt;</operator><name pos:start="479:24" pos:end="479:35">intcompfield</name></name> <operator pos:start="479:37" pos:end="479:37">=</operator> <call pos:start="479:39" pos:end="479:51"><name pos:start="479:39" pos:end="479:47">decode210</name><argument_list pos:start="479:48" pos:end="479:51">(<argument pos:start="479:49" pos:end="479:50"><expr pos:start="479:49" pos:end="479:50"><name pos:start="479:49" pos:end="479:50">gb</name></expr></argument>)</argument_list></call> <operator pos:start="479:53" pos:end="479:53">^</operator> <literal type="number" pos:start="479:55" pos:end="479:55">3</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="481:19" pos:end="483:40">else<block type="pseudo" pos:start="483:21" pos:end="483:40"><block_content pos:start="483:21" pos:end="483:40">

                    <expr_stmt pos:start="483:21" pos:end="483:40"><expr pos:start="483:21" pos:end="483:39"><name pos:start="483:21" pos:end="483:35"><name pos:start="483:21" pos:end="483:21">v</name><operator pos:start="483:22" pos:end="483:23">-&gt;</operator><name pos:start="483:24" pos:end="483:35">intcompfield</name></name> <operator pos:start="483:37" pos:end="483:37">=</operator> <literal type="number" pos:start="483:39" pos:end="483:39">3</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <expr_stmt pos:start="487:17" pos:end="487:48"><expr pos:start="487:17" pos:end="487:47"><name pos:start="487:17" pos:end="487:28"><name pos:start="487:17" pos:end="487:17">v</name><operator pos:start="487:18" pos:end="487:19">-&gt;</operator><name pos:start="487:20" pos:end="487:28">lumscale2</name></name> <operator pos:start="487:30" pos:end="487:30">=</operator> <name pos:start="487:32" pos:end="487:42"><name pos:start="487:32" pos:end="487:32">v</name><operator pos:start="487:33" pos:end="487:34">-&gt;</operator><name pos:start="487:35" pos:end="487:42">lumscale</name></name> <operator pos:start="487:44" pos:end="487:44">=</operator> <literal type="number" pos:start="487:46" pos:end="487:47">32</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="489:17" pos:end="489:48"><expr pos:start="489:17" pos:end="489:47"><name pos:start="489:17" pos:end="489:28"><name pos:start="489:17" pos:end="489:17">v</name><operator pos:start="489:18" pos:end="489:19">-&gt;</operator><name pos:start="489:20" pos:end="489:28">lumshift2</name></name> <operator pos:start="489:30" pos:end="489:30">=</operator> <name pos:start="489:32" pos:end="489:42"><name pos:start="489:32" pos:end="489:32">v</name><operator pos:start="489:33" pos:end="489:34">-&gt;</operator><name pos:start="489:35" pos:end="489:42">lumshift</name></name> <operator pos:start="489:44" pos:end="489:44">=</operator>  <literal type="number" pos:start="489:47" pos:end="489:47">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="491:17" pos:end="497:17"><if pos:start="491:17" pos:end="497:17">if <condition pos:start="491:20" pos:end="491:40">(<expr pos:start="491:21" pos:end="491:39"><name pos:start="491:21" pos:end="491:35"><name pos:start="491:21" pos:end="491:21">v</name><operator pos:start="491:22" pos:end="491:23">-&gt;</operator><name pos:start="491:24" pos:end="491:35">intcompfield</name></name> <operator pos:start="491:37" pos:end="491:37">&amp;</operator> <literal type="number" pos:start="491:39" pos:end="491:39">1</literal></expr>)</condition> <block pos:start="491:42" pos:end="497:17">{<block_content pos:start="493:21" pos:end="495:50">

                    <expr_stmt pos:start="493:21" pos:end="493:50"><expr pos:start="493:21" pos:end="493:49"><name pos:start="493:21" pos:end="493:31"><name pos:start="493:21" pos:end="493:21">v</name><operator pos:start="493:22" pos:end="493:23">-&gt;</operator><name pos:start="493:24" pos:end="493:31">lumscale</name></name> <operator pos:start="493:33" pos:end="493:33">=</operator> <call pos:start="493:35" pos:end="493:49"><name pos:start="493:35" pos:end="493:42">get_bits</name><argument_list pos:start="493:43" pos:end="493:49">(<argument pos:start="493:44" pos:end="493:45"><expr pos:start="493:44" pos:end="493:45"><name pos:start="493:44" pos:end="493:45">gb</name></expr></argument>, <argument pos:start="493:48" pos:end="493:48"><expr pos:start="493:48" pos:end="493:48"><literal type="number" pos:start="493:48" pos:end="493:48">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="495:21" pos:end="495:50"><expr pos:start="495:21" pos:end="495:49"><name pos:start="495:21" pos:end="495:31"><name pos:start="495:21" pos:end="495:21">v</name><operator pos:start="495:22" pos:end="495:23">-&gt;</operator><name pos:start="495:24" pos:end="495:31">lumshift</name></name> <operator pos:start="495:33" pos:end="495:33">=</operator> <call pos:start="495:35" pos:end="495:49"><name pos:start="495:35" pos:end="495:42">get_bits</name><argument_list pos:start="495:43" pos:end="495:49">(<argument pos:start="495:44" pos:end="495:45"><expr pos:start="495:44" pos:end="495:45"><name pos:start="495:44" pos:end="495:45">gb</name></expr></argument>, <argument pos:start="495:48" pos:end="495:48"><expr pos:start="495:48" pos:end="495:48"><literal type="number" pos:start="495:48" pos:end="495:48">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="499:17" pos:end="511:17"><if pos:start="499:17" pos:end="505:17">if <condition pos:start="499:20" pos:end="499:59">(<expr pos:start="499:21" pos:end="499:58"><operator pos:start="499:21" pos:end="499:21">(</operator><name pos:start="499:22" pos:end="499:36"><name pos:start="499:22" pos:end="499:22">v</name><operator pos:start="499:23" pos:end="499:24">-&gt;</operator><name pos:start="499:25" pos:end="499:36">intcompfield</name></name> <operator pos:start="499:38" pos:end="499:38">&amp;</operator> <literal type="number" pos:start="499:40" pos:end="499:40">2</literal><operator pos:start="499:41" pos:end="499:41">)</operator> <operator pos:start="499:43" pos:end="499:44">&amp;&amp;</operator> <name pos:start="499:46" pos:end="499:58"><name pos:start="499:46" pos:end="499:46">v</name><operator pos:start="499:47" pos:end="499:48">-&gt;</operator><name pos:start="499:49" pos:end="499:58">field_mode</name></name></expr>)</condition> <block pos:start="499:61" pos:end="505:17">{<block_content pos:start="501:21" pos:end="503:51">

                    <expr_stmt pos:start="501:21" pos:end="501:51"><expr pos:start="501:21" pos:end="501:50"><name pos:start="501:21" pos:end="501:32"><name pos:start="501:21" pos:end="501:21">v</name><operator pos:start="501:22" pos:end="501:23">-&gt;</operator><name pos:start="501:24" pos:end="501:32">lumscale2</name></name> <operator pos:start="501:34" pos:end="501:34">=</operator> <call pos:start="501:36" pos:end="501:50"><name pos:start="501:36" pos:end="501:43">get_bits</name><argument_list pos:start="501:44" pos:end="501:50">(<argument pos:start="501:45" pos:end="501:46"><expr pos:start="501:45" pos:end="501:46"><name pos:start="501:45" pos:end="501:46">gb</name></expr></argument>, <argument pos:start="501:49" pos:end="501:49"><expr pos:start="501:49" pos:end="501:49"><literal type="number" pos:start="501:49" pos:end="501:49">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="503:21" pos:end="503:51"><expr pos:start="503:21" pos:end="503:50"><name pos:start="503:21" pos:end="503:32"><name pos:start="503:21" pos:end="503:21">v</name><operator pos:start="503:22" pos:end="503:23">-&gt;</operator><name pos:start="503:24" pos:end="503:32">lumshift2</name></name> <operator pos:start="503:34" pos:end="503:34">=</operator> <call pos:start="503:36" pos:end="503:50"><name pos:start="503:36" pos:end="503:43">get_bits</name><argument_list pos:start="503:44" pos:end="503:50">(<argument pos:start="503:45" pos:end="503:46"><expr pos:start="503:45" pos:end="503:46"><name pos:start="503:45" pos:end="503:46">gb</name></expr></argument>, <argument pos:start="503:49" pos:end="503:49"><expr pos:start="503:49" pos:end="503:49"><literal type="number" pos:start="503:49" pos:end="503:49">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="505:19" pos:end="511:17">else if<condition pos:start="505:26" pos:end="505:41">(<expr pos:start="505:27" pos:end="505:40"><operator pos:start="505:27" pos:end="505:27">!</operator><name pos:start="505:28" pos:end="505:40"><name pos:start="505:28" pos:end="505:28">v</name><operator pos:start="505:29" pos:end="505:30">-&gt;</operator><name pos:start="505:31" pos:end="505:40">field_mode</name></name></expr>)</condition> <block pos:start="505:43" pos:end="511:17">{<block_content pos:start="507:21" pos:end="509:47">

                    <expr_stmt pos:start="507:21" pos:end="507:47"><expr pos:start="507:21" pos:end="507:46"><name pos:start="507:21" pos:end="507:32"><name pos:start="507:21" pos:end="507:21">v</name><operator pos:start="507:22" pos:end="507:23">-&gt;</operator><name pos:start="507:24" pos:end="507:32">lumscale2</name></name> <operator pos:start="507:34" pos:end="507:34">=</operator> <name pos:start="507:36" pos:end="507:46"><name pos:start="507:36" pos:end="507:36">v</name><operator pos:start="507:37" pos:end="507:38">-&gt;</operator><name pos:start="507:39" pos:end="507:46">lumscale</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="509:21" pos:end="509:47"><expr pos:start="509:21" pos:end="509:46"><name pos:start="509:21" pos:end="509:32"><name pos:start="509:21" pos:end="509:21">v</name><operator pos:start="509:22" pos:end="509:23">-&gt;</operator><name pos:start="509:24" pos:end="509:32">lumshift2</name></name> <operator pos:start="509:34" pos:end="509:34">=</operator> <name pos:start="509:36" pos:end="509:46"><name pos:start="509:36" pos:end="509:36">v</name><operator pos:start="509:37" pos:end="509:38">-&gt;</operator><name pos:start="509:39" pos:end="509:46">lumshift</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="513:17" pos:end="537:17"><if pos:start="513:17" pos:end="531:17">if <condition pos:start="513:20" pos:end="513:53">(<expr pos:start="513:21" pos:end="513:52"><name pos:start="513:21" pos:end="513:33"><name pos:start="513:21" pos:end="513:21">v</name><operator pos:start="513:22" pos:end="513:23">-&gt;</operator><name pos:start="513:24" pos:end="513:33">field_mode</name></name> <operator pos:start="513:35" pos:end="513:36">&amp;&amp;</operator> <name pos:start="513:38" pos:end="513:52"><name pos:start="513:38" pos:end="513:38">v</name><operator pos:start="513:39" pos:end="513:40">-&gt;</operator><name pos:start="513:41" pos:end="513:52">second_field</name></name></expr>)</condition> <block pos:start="513:55" pos:end="531:17">{<block_content pos:start="515:21" pos:end="529:56">

                    <if_stmt pos:start="515:21" pos:end="527:21"><if pos:start="515:21" pos:end="521:21">if <condition pos:start="515:24" pos:end="515:42">(<expr pos:start="515:25" pos:end="515:41"><name pos:start="515:25" pos:end="515:41"><name pos:start="515:25" pos:end="515:25">v</name><operator pos:start="515:26" pos:end="515:27">-&gt;</operator><name pos:start="515:28" pos:end="515:41">cur_field_type</name></name></expr>)</condition> <block pos:start="515:44" pos:end="521:21">{<block_content pos:start="517:25" pos:end="519:135">

                        <expr_stmt pos:start="517:25" pos:end="517:135"><expr pos:start="517:25" pos:end="517:134"><call pos:start="517:25" pos:end="517:134"><name pos:start="517:25" pos:end="517:32">INIT_LUT</name><argument_list pos:start="517:33" pos:end="517:134">(<argument pos:start="517:34" pos:end="517:44"><expr pos:start="517:34" pos:end="517:44"><name pos:start="517:34" pos:end="517:44"><name pos:start="517:34" pos:end="517:34">v</name><operator pos:start="517:35" pos:end="517:36">-&gt;</operator><name pos:start="517:37" pos:end="517:44">lumscale</name></name></expr></argument> , <argument pos:start="517:48" pos:end="517:58"><expr pos:start="517:48" pos:end="517:58"><name pos:start="517:48" pos:end="517:58"><name pos:start="517:48" pos:end="517:48">v</name><operator pos:start="517:49" pos:end="517:50">-&gt;</operator><name pos:start="517:51" pos:end="517:58">lumshift</name></name></expr></argument> , <argument pos:start="517:62" pos:end="517:94"><expr pos:start="517:62" pos:end="517:94"><name pos:start="517:62" pos:end="517:94"><name pos:start="517:62" pos:end="517:62">v</name><operator pos:start="517:63" pos:end="517:64">-&gt;</operator><name pos:start="517:65" pos:end="517:73">curr_luty</name><index pos:start="517:74" pos:end="517:94">[<expr pos:start="517:75" pos:end="517:93"><name pos:start="517:75" pos:end="517:91"><name pos:start="517:75" pos:end="517:75">v</name><operator pos:start="517:76" pos:end="517:77">-&gt;</operator><name pos:start="517:78" pos:end="517:91">cur_field_type</name></name><operator pos:start="517:92" pos:end="517:92">^</operator><literal type="number" pos:start="517:93" pos:end="517:93">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="517:97" pos:end="517:130"><expr pos:start="517:97" pos:end="517:130"><name pos:start="517:97" pos:end="517:130"><name pos:start="517:97" pos:end="517:97">v</name><operator pos:start="517:98" pos:end="517:99">-&gt;</operator><name pos:start="517:100" pos:end="517:109">curr_lutuv</name><index pos:start="517:110" pos:end="517:130">[<expr pos:start="517:111" pos:end="517:129"><name pos:start="517:111" pos:end="517:127"><name pos:start="517:111" pos:end="517:111">v</name><operator pos:start="517:112" pos:end="517:113">-&gt;</operator><name pos:start="517:114" pos:end="517:127">cur_field_type</name></name><operator pos:start="517:128" pos:end="517:128">^</operator><literal type="number" pos:start="517:129" pos:end="517:129">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="517:133" pos:end="517:133"><expr pos:start="517:133" pos:end="517:133"><literal type="number" pos:start="517:133" pos:end="517:133">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="519:25" pos:end="519:135"><expr pos:start="519:25" pos:end="519:134"><call pos:start="519:25" pos:end="519:134"><name pos:start="519:25" pos:end="519:32">INIT_LUT</name><argument_list pos:start="519:33" pos:end="519:134">(<argument pos:start="519:34" pos:end="519:45"><expr pos:start="519:34" pos:end="519:45"><name pos:start="519:34" pos:end="519:45"><name pos:start="519:34" pos:end="519:34">v</name><operator pos:start="519:35" pos:end="519:36">-&gt;</operator><name pos:start="519:37" pos:end="519:45">lumscale2</name></name></expr></argument>, <argument pos:start="519:48" pos:end="519:59"><expr pos:start="519:48" pos:end="519:59"><name pos:start="519:48" pos:end="519:59"><name pos:start="519:48" pos:end="519:48">v</name><operator pos:start="519:49" pos:end="519:50">-&gt;</operator><name pos:start="519:51" pos:end="519:59">lumshift2</name></name></expr></argument>, <argument pos:start="519:62" pos:end="519:94"><expr pos:start="519:62" pos:end="519:94"><name pos:start="519:62" pos:end="519:94"><name pos:start="519:62" pos:end="519:62">v</name><operator pos:start="519:63" pos:end="519:64">-&gt;</operator><name pos:start="519:65" pos:end="519:73">last_luty</name><index pos:start="519:74" pos:end="519:94">[<expr pos:start="519:75" pos:end="519:91"><name pos:start="519:75" pos:end="519:91"><name pos:start="519:75" pos:end="519:75">v</name><operator pos:start="519:76" pos:end="519:77">-&gt;</operator><name pos:start="519:78" pos:end="519:91">cur_field_type</name></name></expr>  ]</index></name></expr></argument>, <argument pos:start="519:97" pos:end="519:130"><expr pos:start="519:97" pos:end="519:130"><name pos:start="519:97" pos:end="519:130"><name pos:start="519:97" pos:end="519:97">v</name><operator pos:start="519:98" pos:end="519:99">-&gt;</operator><name pos:start="519:100" pos:end="519:109">last_lutuv</name><index pos:start="519:110" pos:end="519:130">[<expr pos:start="519:111" pos:end="519:127"><name pos:start="519:111" pos:end="519:127"><name pos:start="519:111" pos:end="519:111">v</name><operator pos:start="519:112" pos:end="519:113">-&gt;</operator><name pos:start="519:114" pos:end="519:127">cur_field_type</name></name></expr>  ]</index></name></expr></argument>, <argument pos:start="519:133" pos:end="519:133"><expr pos:start="519:133" pos:end="519:133"><literal type="number" pos:start="519:133" pos:end="519:133">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="521:23" pos:end="527:21">else <block pos:start="521:28" pos:end="527:21">{<block_content pos:start="523:25" pos:end="525:135">

                        <expr_stmt pos:start="523:25" pos:end="523:135"><expr pos:start="523:25" pos:end="523:134"><call pos:start="523:25" pos:end="523:134"><name pos:start="523:25" pos:end="523:32">INIT_LUT</name><argument_list pos:start="523:33" pos:end="523:134">(<argument pos:start="523:34" pos:end="523:45"><expr pos:start="523:34" pos:end="523:45"><name pos:start="523:34" pos:end="523:45"><name pos:start="523:34" pos:end="523:34">v</name><operator pos:start="523:35" pos:end="523:36">-&gt;</operator><name pos:start="523:37" pos:end="523:45">lumscale2</name></name></expr></argument>, <argument pos:start="523:48" pos:end="523:59"><expr pos:start="523:48" pos:end="523:59"><name pos:start="523:48" pos:end="523:59"><name pos:start="523:48" pos:end="523:48">v</name><operator pos:start="523:49" pos:end="523:50">-&gt;</operator><name pos:start="523:51" pos:end="523:59">lumshift2</name></name></expr></argument>, <argument pos:start="523:62" pos:end="523:94"><expr pos:start="523:62" pos:end="523:94"><name pos:start="523:62" pos:end="523:94"><name pos:start="523:62" pos:end="523:62">v</name><operator pos:start="523:63" pos:end="523:64">-&gt;</operator><name pos:start="523:65" pos:end="523:73">curr_luty</name><index pos:start="523:74" pos:end="523:94">[<expr pos:start="523:75" pos:end="523:93"><name pos:start="523:75" pos:end="523:91"><name pos:start="523:75" pos:end="523:75">v</name><operator pos:start="523:76" pos:end="523:77">-&gt;</operator><name pos:start="523:78" pos:end="523:91">cur_field_type</name></name><operator pos:start="523:92" pos:end="523:92">^</operator><literal type="number" pos:start="523:93" pos:end="523:93">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="523:97" pos:end="523:130"><expr pos:start="523:97" pos:end="523:130"><name pos:start="523:97" pos:end="523:130"><name pos:start="523:97" pos:end="523:97">v</name><operator pos:start="523:98" pos:end="523:99">-&gt;</operator><name pos:start="523:100" pos:end="523:109">curr_lutuv</name><index pos:start="523:110" pos:end="523:130">[<expr pos:start="523:111" pos:end="523:129"><name pos:start="523:111" pos:end="523:127"><name pos:start="523:111" pos:end="523:111">v</name><operator pos:start="523:112" pos:end="523:113">-&gt;</operator><name pos:start="523:114" pos:end="523:127">cur_field_type</name></name><operator pos:start="523:128" pos:end="523:128">^</operator><literal type="number" pos:start="523:129" pos:end="523:129">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="523:133" pos:end="523:133"><expr pos:start="523:133" pos:end="523:133"><literal type="number" pos:start="523:133" pos:end="523:133">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="525:25" pos:end="525:135"><expr pos:start="525:25" pos:end="525:134"><call pos:start="525:25" pos:end="525:134"><name pos:start="525:25" pos:end="525:32">INIT_LUT</name><argument_list pos:start="525:33" pos:end="525:134">(<argument pos:start="525:34" pos:end="525:44"><expr pos:start="525:34" pos:end="525:44"><name pos:start="525:34" pos:end="525:44"><name pos:start="525:34" pos:end="525:34">v</name><operator pos:start="525:35" pos:end="525:36">-&gt;</operator><name pos:start="525:37" pos:end="525:44">lumscale</name></name></expr></argument> , <argument pos:start="525:48" pos:end="525:58"><expr pos:start="525:48" pos:end="525:58"><name pos:start="525:48" pos:end="525:58"><name pos:start="525:48" pos:end="525:48">v</name><operator pos:start="525:49" pos:end="525:50">-&gt;</operator><name pos:start="525:51" pos:end="525:58">lumshift</name></name></expr></argument> , <argument pos:start="525:62" pos:end="525:94"><expr pos:start="525:62" pos:end="525:94"><name pos:start="525:62" pos:end="525:94"><name pos:start="525:62" pos:end="525:62">v</name><operator pos:start="525:63" pos:end="525:64">-&gt;</operator><name pos:start="525:65" pos:end="525:73">last_luty</name><index pos:start="525:74" pos:end="525:94">[<expr pos:start="525:75" pos:end="525:91"><name pos:start="525:75" pos:end="525:91"><name pos:start="525:75" pos:end="525:75">v</name><operator pos:start="525:76" pos:end="525:77">-&gt;</operator><name pos:start="525:78" pos:end="525:91">cur_field_type</name></name></expr>  ]</index></name></expr></argument>, <argument pos:start="525:97" pos:end="525:130"><expr pos:start="525:97" pos:end="525:130"><name pos:start="525:97" pos:end="525:130"><name pos:start="525:97" pos:end="525:97">v</name><operator pos:start="525:98" pos:end="525:99">-&gt;</operator><name pos:start="525:100" pos:end="525:109">last_lutuv</name><index pos:start="525:110" pos:end="525:130">[<expr pos:start="525:111" pos:end="525:127"><name pos:start="525:111" pos:end="525:127"><name pos:start="525:111" pos:end="525:111">v</name><operator pos:start="525:112" pos:end="525:113">-&gt;</operator><name pos:start="525:114" pos:end="525:127">cur_field_type</name></name></expr>  ]</index></name></expr></argument>, <argument pos:start="525:133" pos:end="525:133"><expr pos:start="525:133" pos:end="525:133"><literal type="number" pos:start="525:133" pos:end="525:133">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="529:21" pos:end="529:56"><expr pos:start="529:21" pos:end="529:55"><name pos:start="529:21" pos:end="529:34"><name pos:start="529:21" pos:end="529:21">v</name><operator pos:start="529:22" pos:end="529:23">-&gt;</operator><name pos:start="529:24" pos:end="529:34">next_use_ic</name></name> <operator pos:start="529:36" pos:end="529:36">=</operator> <name pos:start="529:38" pos:end="529:51"><name pos:start="529:38" pos:end="529:38">v</name><operator pos:start="529:39" pos:end="529:40">-&gt;</operator><name pos:start="529:41" pos:end="529:51">curr_use_ic</name></name> <operator pos:start="529:53" pos:end="529:53">=</operator> <literal type="number" pos:start="529:55" pos:end="529:55">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="531:19" pos:end="537:17">else <block pos:start="531:24" pos:end="537:17">{<block_content pos:start="533:21" pos:end="535:95">

                    <expr_stmt pos:start="533:21" pos:end="533:95"><expr pos:start="533:21" pos:end="533:94"><call pos:start="533:21" pos:end="533:94"><name pos:start="533:21" pos:end="533:28">INIT_LUT</name><argument_list pos:start="533:29" pos:end="533:94">(<argument pos:start="533:30" pos:end="533:40"><expr pos:start="533:30" pos:end="533:40"><name pos:start="533:30" pos:end="533:40"><name pos:start="533:30" pos:end="533:30">v</name><operator pos:start="533:31" pos:end="533:32">-&gt;</operator><name pos:start="533:33" pos:end="533:40">lumscale</name></name></expr></argument> , <argument pos:start="533:44" pos:end="533:54"><expr pos:start="533:44" pos:end="533:54"><name pos:start="533:44" pos:end="533:54"><name pos:start="533:44" pos:end="533:44">v</name><operator pos:start="533:45" pos:end="533:46">-&gt;</operator><name pos:start="533:47" pos:end="533:54">lumshift</name></name></expr></argument> , <argument pos:start="533:58" pos:end="533:72"><expr pos:start="533:58" pos:end="533:72"><name pos:start="533:58" pos:end="533:72"><name pos:start="533:58" pos:end="533:58">v</name><operator pos:start="533:59" pos:end="533:60">-&gt;</operator><name pos:start="533:61" pos:end="533:69">last_luty</name><index pos:start="533:70" pos:end="533:72">[<expr pos:start="533:71" pos:end="533:71"><literal type="number" pos:start="533:71" pos:end="533:71">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="533:75" pos:end="533:90"><expr pos:start="533:75" pos:end="533:90"><name pos:start="533:75" pos:end="533:90"><name pos:start="533:75" pos:end="533:75">v</name><operator pos:start="533:76" pos:end="533:77">-&gt;</operator><name pos:start="533:78" pos:end="533:87">last_lutuv</name><index pos:start="533:88" pos:end="533:90">[<expr pos:start="533:89" pos:end="533:89"><literal type="number" pos:start="533:89" pos:end="533:89">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="533:93" pos:end="533:93"><expr pos:start="533:93" pos:end="533:93"><literal type="number" pos:start="533:93" pos:end="533:93">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="535:21" pos:end="535:95"><expr pos:start="535:21" pos:end="535:94"><call pos:start="535:21" pos:end="535:94"><name pos:start="535:21" pos:end="535:28">INIT_LUT</name><argument_list pos:start="535:29" pos:end="535:94">(<argument pos:start="535:30" pos:end="535:41"><expr pos:start="535:30" pos:end="535:41"><name pos:start="535:30" pos:end="535:41"><name pos:start="535:30" pos:end="535:30">v</name><operator pos:start="535:31" pos:end="535:32">-&gt;</operator><name pos:start="535:33" pos:end="535:41">lumscale2</name></name></expr></argument>, <argument pos:start="535:44" pos:end="535:55"><expr pos:start="535:44" pos:end="535:55"><name pos:start="535:44" pos:end="535:55"><name pos:start="535:44" pos:end="535:44">v</name><operator pos:start="535:45" pos:end="535:46">-&gt;</operator><name pos:start="535:47" pos:end="535:55">lumshift2</name></name></expr></argument>, <argument pos:start="535:58" pos:end="535:72"><expr pos:start="535:58" pos:end="535:72"><name pos:start="535:58" pos:end="535:72"><name pos:start="535:58" pos:end="535:58">v</name><operator pos:start="535:59" pos:end="535:60">-&gt;</operator><name pos:start="535:61" pos:end="535:69">last_luty</name><index pos:start="535:70" pos:end="535:72">[<expr pos:start="535:71" pos:end="535:71"><literal type="number" pos:start="535:71" pos:end="535:71">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="535:75" pos:end="535:90"><expr pos:start="535:75" pos:end="535:90"><name pos:start="535:75" pos:end="535:90"><name pos:start="535:75" pos:end="535:75">v</name><operator pos:start="535:76" pos:end="535:77">-&gt;</operator><name pos:start="535:78" pos:end="535:87">last_lutuv</name><index pos:start="535:88" pos:end="535:90">[<expr pos:start="535:89" pos:end="535:89"><literal type="number" pos:start="535:89" pos:end="535:89">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="535:93" pos:end="535:93"><expr pos:start="535:93" pos:end="535:93"><literal type="number" pos:start="535:93" pos:end="535:93">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="539:17" pos:end="539:35"><expr pos:start="539:17" pos:end="539:34"><name pos:start="539:17" pos:end="539:30"><name pos:start="539:17" pos:end="539:17">v</name><operator pos:start="539:18" pos:end="539:19">-&gt;</operator><name pos:start="539:20" pos:end="539:30">last_use_ic</name></name> <operator pos:start="539:32" pos:end="539:32">=</operator> <literal type="number" pos:start="539:34" pos:end="539:34">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="543:13" pos:end="543:45"><expr pos:start="543:13" pos:end="543:44"><name pos:start="543:13" pos:end="543:22"><name pos:start="543:13" pos:end="543:13">v</name><operator pos:start="543:14" pos:end="543:15">-&gt;</operator><name pos:start="543:16" pos:end="543:22">qs_last</name></name> <operator pos:start="543:24" pos:end="543:24">=</operator> <name pos:start="543:26" pos:end="543:44"><name pos:start="543:26" pos:end="543:26">v</name><operator pos:start="543:27" pos:end="543:28">-&gt;</operator><name pos:start="543:29" pos:end="543:29">s</name><operator pos:start="543:30" pos:end="543:30">.</operator><name pos:start="543:31" pos:end="543:44">quarter_sample</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="545:13" pos:end="561:40"><if pos:start="545:13" pos:end="547:40">if <condition pos:start="545:16" pos:end="545:89">(<expr pos:start="545:17" pos:end="545:88"><name pos:start="545:17" pos:end="545:26"><name pos:start="545:17" pos:end="545:17">v</name><operator pos:start="545:18" pos:end="545:19">-&gt;</operator><name pos:start="545:20" pos:end="545:26">mv_mode</name></name> <operator pos:start="545:28" pos:end="545:29">==</operator> <name pos:start="545:31" pos:end="545:47">MV_PMODE_1MV_HPEL</name> <operator pos:start="545:49" pos:end="545:50">||</operator> <name pos:start="545:52" pos:end="545:61"><name pos:start="545:52" pos:end="545:52">v</name><operator pos:start="545:53" pos:end="545:54">-&gt;</operator><name pos:start="545:55" pos:end="545:61">mv_mode</name></name> <operator pos:start="545:63" pos:end="545:64">==</operator> <name pos:start="545:66" pos:end="545:88">MV_PMODE_1MV_HPEL_BILIN</name></expr>)</condition><block type="pseudo" pos:start="547:17" pos:end="547:40"><block_content pos:start="547:17" pos:end="547:40">

                <expr_stmt pos:start="547:17" pos:end="547:40"><expr pos:start="547:17" pos:end="547:39"><name pos:start="547:17" pos:end="547:35"><name pos:start="547:17" pos:end="547:17">v</name><operator pos:start="547:18" pos:end="547:19">-&gt;</operator><name pos:start="547:20" pos:end="547:20">s</name><operator pos:start="547:21" pos:end="547:21">.</operator><name pos:start="547:22" pos:end="547:35">quarter_sample</name></name> <operator pos:start="547:37" pos:end="547:37">=</operator> <literal type="number" pos:start="547:39" pos:end="547:39">0</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="549:13" pos:end="559:13">else if <condition pos:start="549:21" pos:end="549:59">(<expr pos:start="549:22" pos:end="549:58"><name pos:start="549:22" pos:end="549:31"><name pos:start="549:22" pos:end="549:22">v</name><operator pos:start="549:23" pos:end="549:24">-&gt;</operator><name pos:start="549:25" pos:end="549:31">mv_mode</name></name> <operator pos:start="549:33" pos:end="549:34">==</operator> <name pos:start="549:36" pos:end="549:58">MV_PMODE_INTENSITY_COMP</name></expr>)</condition> <block pos:start="549:61" pos:end="559:13">{<block_content pos:start="551:17" pos:end="557:44">

                <if_stmt pos:start="551:17" pos:end="557:44"><if pos:start="551:17" pos:end="553:44">if <condition pos:start="551:20" pos:end="551:95">(<expr pos:start="551:21" pos:end="551:94"><name pos:start="551:21" pos:end="551:31"><name pos:start="551:21" pos:end="551:21">v</name><operator pos:start="551:22" pos:end="551:23">-&gt;</operator><name pos:start="551:24" pos:end="551:31">mv_mode2</name></name> <operator pos:start="551:33" pos:end="551:34">==</operator> <name pos:start="551:36" pos:end="551:52">MV_PMODE_1MV_HPEL</name> <operator pos:start="551:54" pos:end="551:55">||</operator> <name pos:start="551:57" pos:end="551:67"><name pos:start="551:57" pos:end="551:57">v</name><operator pos:start="551:58" pos:end="551:59">-&gt;</operator><name pos:start="551:60" pos:end="551:67">mv_mode2</name></name> <operator pos:start="551:69" pos:end="551:70">==</operator> <name pos:start="551:72" pos:end="551:94">MV_PMODE_1MV_HPEL_BILIN</name></expr>)</condition><block type="pseudo" pos:start="553:21" pos:end="553:44"><block_content pos:start="553:21" pos:end="553:44">

                    <expr_stmt pos:start="553:21" pos:end="553:44"><expr pos:start="553:21" pos:end="553:43"><name pos:start="553:21" pos:end="553:39"><name pos:start="553:21" pos:end="553:21">v</name><operator pos:start="553:22" pos:end="553:23">-&gt;</operator><name pos:start="553:24" pos:end="553:24">s</name><operator pos:start="553:25" pos:end="553:25">.</operator><name pos:start="553:26" pos:end="553:39">quarter_sample</name></name> <operator pos:start="553:41" pos:end="553:41">=</operator> <literal type="number" pos:start="553:43" pos:end="553:43">0</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="555:17" pos:end="557:44">else<block type="pseudo" pos:start="557:21" pos:end="557:44"><block_content pos:start="557:21" pos:end="557:44">

                    <expr_stmt pos:start="557:21" pos:end="557:44"><expr pos:start="557:21" pos:end="557:43"><name pos:start="557:21" pos:end="557:39"><name pos:start="557:21" pos:end="557:21">v</name><operator pos:start="557:22" pos:end="557:23">-&gt;</operator><name pos:start="557:24" pos:end="557:24">s</name><operator pos:start="557:25" pos:end="557:25">.</operator><name pos:start="557:26" pos:end="557:39">quarter_sample</name></name> <operator pos:start="557:41" pos:end="557:41">=</operator> <literal type="number" pos:start="557:43" pos:end="557:43">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="559:15" pos:end="561:40">else<block type="pseudo" pos:start="561:17" pos:end="561:40"><block_content pos:start="561:17" pos:end="561:40">

                <expr_stmt pos:start="561:17" pos:end="561:40"><expr pos:start="561:17" pos:end="561:39"><name pos:start="561:17" pos:end="561:35"><name pos:start="561:17" pos:end="561:17">v</name><operator pos:start="561:18" pos:end="561:19">-&gt;</operator><name pos:start="561:20" pos:end="561:20">s</name><operator pos:start="561:21" pos:end="561:21">.</operator><name pos:start="561:22" pos:end="561:35">quarter_sample</name></name> <operator pos:start="561:37" pos:end="561:37">=</operator> <literal type="number" pos:start="561:39" pos:end="561:39">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="563:13" pos:end="567:75"><expr pos:start="563:13" pos:end="567:74"><name pos:start="563:13" pos:end="563:22"><name pos:start="563:13" pos:end="563:13">v</name><operator pos:start="563:14" pos:end="563:15">-&gt;</operator><name pos:start="563:16" pos:end="563:16">s</name><operator pos:start="563:17" pos:end="563:17">.</operator><name pos:start="563:18" pos:end="563:22">mspel</name></name> <operator pos:start="563:24" pos:end="563:24">=</operator> <operator pos:start="563:26" pos:end="563:26">!</operator><operator pos:start="563:27" pos:end="563:27">(</operator><name pos:start="563:28" pos:end="563:37"><name pos:start="563:28" pos:end="563:28">v</name><operator pos:start="563:29" pos:end="563:30">-&gt;</operator><name pos:start="563:31" pos:end="563:37">mv_mode</name></name> <operator pos:start="563:39" pos:end="563:40">==</operator> <name pos:start="563:42" pos:end="563:64">MV_PMODE_1MV_HPEL_BILIN</name>

                           <operator pos:start="565:28" pos:end="565:29">||</operator> <operator pos:start="565:31" pos:end="565:31">(</operator><name pos:start="565:32" pos:end="565:41"><name pos:start="565:32" pos:end="565:32">v</name><operator pos:start="565:33" pos:end="565:34">-&gt;</operator><name pos:start="565:35" pos:end="565:41">mv_mode</name></name> <operator pos:start="565:43" pos:end="565:44">==</operator> <name pos:start="565:46" pos:end="565:68">MV_PMODE_INTENSITY_COMP</name>

                               <operator pos:start="567:32" pos:end="567:33">&amp;&amp;</operator> <name pos:start="567:35" pos:end="567:45"><name pos:start="567:35" pos:end="567:35">v</name><operator pos:start="567:36" pos:end="567:37">-&gt;</operator><name pos:start="567:38" pos:end="567:45">mv_mode2</name></name> <operator pos:start="567:47" pos:end="567:48">==</operator> <name pos:start="567:50" pos:end="567:72">MV_PMODE_1MV_HPEL_BILIN</name><operator pos:start="567:73" pos:end="567:73">)</operator><operator pos:start="567:74" pos:end="567:74">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="571:9" pos:end="657:9"><if pos:start="571:9" pos:end="615:9">if <condition pos:start="571:12" pos:end="571:34">(<expr pos:start="571:13" pos:end="571:33"><name pos:start="571:13" pos:end="571:18"><name pos:start="571:13" pos:end="571:13">v</name><operator pos:start="571:14" pos:end="571:15">-&gt;</operator><name pos:start="571:16" pos:end="571:18">fcm</name></name> <operator pos:start="571:20" pos:end="571:21">==</operator> <name pos:start="571:23" pos:end="571:33">PROGRESSIVE</name></expr>)</condition> <block pos:start="571:36" pos:end="615:9">{<block_content pos:start="573:13" pos:end="613:71"> <comment type="line" pos:start="571:38" pos:end="571:51">// progressive</comment>

            <if_stmt pos:start="573:13" pos:end="595:13"><if pos:start="573:13" pos:end="589:13">if <condition pos:start="573:16" pos:end="577:51">(<expr pos:start="573:17" pos:end="577:50"><operator pos:start="573:17" pos:end="573:17">(</operator><name pos:start="573:18" pos:end="573:27"><name pos:start="573:18" pos:end="573:18">v</name><operator pos:start="573:19" pos:end="573:20">-&gt;</operator><name pos:start="573:21" pos:end="573:27">mv_mode</name></name> <operator pos:start="573:29" pos:end="573:30">==</operator> <name pos:start="573:32" pos:end="573:54">MV_PMODE_INTENSITY_COMP</name> <operator pos:start="573:56" pos:end="573:57">&amp;&amp;</operator>

                 <name pos:start="575:18" pos:end="575:28"><name pos:start="575:18" pos:end="575:18">v</name><operator pos:start="575:19" pos:end="575:20">-&gt;</operator><name pos:start="575:21" pos:end="575:28">mv_mode2</name></name> <operator pos:start="575:30" pos:end="575:31">==</operator> <name pos:start="575:33" pos:end="575:49">MV_PMODE_MIXED_MV</name><operator pos:start="575:50" pos:end="575:50">)</operator>

                <operator pos:start="577:17" pos:end="577:18">||</operator> <name pos:start="577:20" pos:end="577:29"><name pos:start="577:20" pos:end="577:20">v</name><operator pos:start="577:21" pos:end="577:22">-&gt;</operator><name pos:start="577:23" pos:end="577:29">mv_mode</name></name> <operator pos:start="577:31" pos:end="577:32">==</operator> <name pos:start="577:34" pos:end="577:50">MV_PMODE_MIXED_MV</name></expr>)</condition> <block pos:start="577:53" pos:end="589:13">{<block_content pos:start="579:17" pos:end="587:71">

                <expr_stmt pos:start="579:17" pos:end="579:87"><expr pos:start="579:17" pos:end="579:86"><name pos:start="579:17" pos:end="579:22">status</name> <operator pos:start="579:24" pos:end="579:24">=</operator> <call pos:start="579:26" pos:end="579:86"><name pos:start="579:26" pos:end="579:42">bitplane_decoding</name><argument_list pos:start="579:43" pos:end="579:86">(<argument pos:start="579:44" pos:end="579:62"><expr pos:start="579:44" pos:end="579:62"><name pos:start="579:44" pos:end="579:62"><name pos:start="579:44" pos:end="579:44">v</name><operator pos:start="579:45" pos:end="579:46">-&gt;</operator><name pos:start="579:47" pos:end="579:62">mv_type_mb_plane</name></name></expr></argument>, <argument pos:start="579:65" pos:end="579:82"><expr pos:start="579:65" pos:end="579:82"><operator pos:start="579:65" pos:end="579:65">&amp;</operator><name pos:start="579:66" pos:end="579:82"><name pos:start="579:66" pos:end="579:66">v</name><operator pos:start="579:67" pos:end="579:68">-&gt;</operator><name pos:start="579:69" pos:end="579:82">mv_type_is_raw</name></name></expr></argument>, <argument pos:start="579:85" pos:end="579:85"><expr pos:start="579:85" pos:end="579:85"><name pos:start="579:85" pos:end="579:85">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="581:17" pos:end="583:30"><if pos:start="581:17" pos:end="583:30">if <condition pos:start="581:20" pos:end="581:31">(<expr pos:start="581:21" pos:end="581:30"><name pos:start="581:21" pos:end="581:26">status</name> <operator pos:start="581:28" pos:end="581:28">&lt;</operator> <literal type="number" pos:start="581:30" pos:end="581:30">0</literal></expr>)</condition><block type="pseudo" pos:start="583:21" pos:end="583:30"><block_content pos:start="583:21" pos:end="583:30">

                    <return pos:start="583:21" pos:end="583:30">return <expr pos:start="583:28" pos:end="583:29"><operator pos:start="583:28" pos:end="583:28">-</operator><literal type="number" pos:start="583:29" pos:end="583:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="585:17" pos:end="587:71"><expr pos:start="585:17" pos:end="587:70"><call pos:start="585:17" pos:end="587:70"><name pos:start="585:17" pos:end="585:22">av_log</name><argument_list pos:start="585:23" pos:end="587:70">(<argument pos:start="585:24" pos:end="585:33"><expr pos:start="585:24" pos:end="585:33"><name pos:start="585:24" pos:end="585:33"><name pos:start="585:24" pos:end="585:24">v</name><operator pos:start="585:25" pos:end="585:26">-&gt;</operator><name pos:start="585:27" pos:end="585:27">s</name><operator pos:start="585:28" pos:end="585:28">.</operator><name pos:start="585:29" pos:end="585:33">avctx</name></name></expr></argument>, <argument pos:start="585:36" pos:end="585:47"><expr pos:start="585:36" pos:end="585:47"><name pos:start="585:36" pos:end="585:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="585:50" pos:end="587:48"><expr pos:start="585:50" pos:end="587:48"><literal type="string" pos:start="585:50" pos:end="585:78">"MB MV Type plane encoding: "</literal>

                       <literal type="string" pos:start="587:24" pos:end="587:48">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="587:51" pos:end="587:59"><expr pos:start="587:51" pos:end="587:59"><name pos:start="587:51" pos:end="587:56">status</name><operator pos:start="587:57" pos:end="587:58">&gt;&gt;</operator><literal type="number" pos:start="587:59" pos:end="587:59">1</literal></expr></argument>, <argument pos:start="587:62" pos:end="587:69"><expr pos:start="587:62" pos:end="587:69"><name pos:start="587:62" pos:end="587:67">status</name><operator pos:start="587:68" pos:end="587:68">&amp;</operator><literal type="number" pos:start="587:69" pos:end="587:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="589:15" pos:end="595:13">else <block pos:start="589:20" pos:end="595:13">{<block_content pos:start="591:17" pos:end="593:80">

                <expr_stmt pos:start="591:17" pos:end="591:38"><expr pos:start="591:17" pos:end="591:37"><name pos:start="591:17" pos:end="591:33"><name pos:start="591:17" pos:end="591:17">v</name><operator pos:start="591:18" pos:end="591:19">-&gt;</operator><name pos:start="591:20" pos:end="591:33">mv_type_is_raw</name></name> <operator pos:start="591:35" pos:end="591:35">=</operator> <literal type="number" pos:start="591:37" pos:end="591:37">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="593:17" pos:end="593:80"><expr pos:start="593:17" pos:end="593:79"><call pos:start="593:17" pos:end="593:79"><name pos:start="593:17" pos:end="593:22">memset</name><argument_list pos:start="593:23" pos:end="593:79">(<argument pos:start="593:24" pos:end="593:42"><expr pos:start="593:24" pos:end="593:42"><name pos:start="593:24" pos:end="593:42"><name pos:start="593:24" pos:end="593:24">v</name><operator pos:start="593:25" pos:end="593:26">-&gt;</operator><name pos:start="593:27" pos:end="593:42">mv_type_mb_plane</name></name></expr></argument>, <argument pos:start="593:45" pos:end="593:45"><expr pos:start="593:45" pos:end="593:45"><literal type="number" pos:start="593:45" pos:end="593:45">0</literal></expr></argument>, <argument pos:start="593:48" pos:end="593:78"><expr pos:start="593:48" pos:end="593:78"><name pos:start="593:48" pos:end="593:61"><name pos:start="593:48" pos:end="593:48">v</name><operator pos:start="593:49" pos:end="593:50">-&gt;</operator><name pos:start="593:51" pos:end="593:51">s</name><operator pos:start="593:52" pos:end="593:52">.</operator><name pos:start="593:53" pos:end="593:61">mb_stride</name></name> <operator pos:start="593:63" pos:end="593:63">*</operator> <name pos:start="593:65" pos:end="593:78"><name pos:start="593:65" pos:end="593:65">v</name><operator pos:start="593:66" pos:end="593:67">-&gt;</operator><name pos:start="593:68" pos:end="593:68">s</name><operator pos:start="593:69" pos:end="593:69">.</operator><name pos:start="593:70" pos:end="593:78">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="597:13" pos:end="597:78"><expr pos:start="597:13" pos:end="597:77"><name pos:start="597:13" pos:end="597:18">status</name> <operator pos:start="597:20" pos:end="597:20">=</operator> <call pos:start="597:22" pos:end="597:77"><name pos:start="597:22" pos:end="597:38">bitplane_decoding</name><argument_list pos:start="597:39" pos:end="597:77">(<argument pos:start="597:40" pos:end="597:56"><expr pos:start="597:40" pos:end="597:56"><name pos:start="597:40" pos:end="597:56"><name pos:start="597:40" pos:end="597:40">v</name><operator pos:start="597:41" pos:end="597:42">-&gt;</operator><name pos:start="597:43" pos:end="597:43">s</name><operator pos:start="597:44" pos:end="597:44">.</operator><name pos:start="597:45" pos:end="597:56">mbskip_table</name></name></expr></argument>, <argument pos:start="597:59" pos:end="597:73"><expr pos:start="597:59" pos:end="597:73"><operator pos:start="597:59" pos:end="597:59">&amp;</operator><name pos:start="597:60" pos:end="597:73"><name pos:start="597:60" pos:end="597:60">v</name><operator pos:start="597:61" pos:end="597:62">-&gt;</operator><name pos:start="597:63" pos:end="597:73">skip_is_raw</name></name></expr></argument>, <argument pos:start="597:76" pos:end="597:76"><expr pos:start="597:76" pos:end="597:76"><name pos:start="597:76" pos:end="597:76">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="599:13" pos:end="601:26"><if pos:start="599:13" pos:end="601:26">if <condition pos:start="599:16" pos:end="599:27">(<expr pos:start="599:17" pos:end="599:26"><name pos:start="599:17" pos:end="599:22">status</name> <operator pos:start="599:24" pos:end="599:24">&lt;</operator> <literal type="number" pos:start="599:26" pos:end="599:26">0</literal></expr>)</condition><block type="pseudo" pos:start="601:17" pos:end="601:26"><block_content pos:start="601:17" pos:end="601:26">

                <return pos:start="601:17" pos:end="601:26">return <expr pos:start="601:24" pos:end="601:25"><operator pos:start="601:24" pos:end="601:24">-</operator><literal type="number" pos:start="601:25" pos:end="601:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="603:13" pos:end="605:67"><expr pos:start="603:13" pos:end="605:66"><call pos:start="603:13" pos:end="605:66"><name pos:start="603:13" pos:end="603:18">av_log</name><argument_list pos:start="603:19" pos:end="605:66">(<argument pos:start="603:20" pos:end="603:29"><expr pos:start="603:20" pos:end="603:29"><name pos:start="603:20" pos:end="603:29"><name pos:start="603:20" pos:end="603:20">v</name><operator pos:start="603:21" pos:end="603:22">-&gt;</operator><name pos:start="603:23" pos:end="603:23">s</name><operator pos:start="603:24" pos:end="603:24">.</operator><name pos:start="603:25" pos:end="603:29">avctx</name></name></expr></argument>, <argument pos:start="603:32" pos:end="603:43"><expr pos:start="603:32" pos:end="603:43"><name pos:start="603:32" pos:end="603:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="603:46" pos:end="605:44"><expr pos:start="603:46" pos:end="605:44"><literal type="string" pos:start="603:46" pos:end="603:71">"MB Skip plane encoding: "</literal>

                   <literal type="string" pos:start="605:20" pos:end="605:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="605:47" pos:end="605:55"><expr pos:start="605:47" pos:end="605:55"><name pos:start="605:47" pos:end="605:52">status</name><operator pos:start="605:53" pos:end="605:54">&gt;&gt;</operator><literal type="number" pos:start="605:55" pos:end="605:55">1</literal></expr></argument>, <argument pos:start="605:58" pos:end="605:65"><expr pos:start="605:58" pos:end="605:65"><name pos:start="605:58" pos:end="605:63">status</name><operator pos:start="605:64" pos:end="605:64">&amp;</operator><literal type="number" pos:start="605:65" pos:end="605:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="609:13" pos:end="609:56">/* Hopefully this is correct for P frames */</comment>

            <expr_stmt pos:start="611:13" pos:end="611:50"><expr pos:start="611:13" pos:end="611:49"><name pos:start="611:13" pos:end="611:31"><name pos:start="611:13" pos:end="611:13">v</name><operator pos:start="611:14" pos:end="611:15">-&gt;</operator><name pos:start="611:16" pos:end="611:16">s</name><operator pos:start="611:17" pos:end="611:17">.</operator><name pos:start="611:18" pos:end="611:31">mv_table_index</name></name> <operator pos:start="611:33" pos:end="611:33">=</operator> <call pos:start="611:35" pos:end="611:49"><name pos:start="611:35" pos:end="611:42">get_bits</name><argument_list pos:start="611:43" pos:end="611:49">(<argument pos:start="611:44" pos:end="611:45"><expr pos:start="611:44" pos:end="611:45"><name pos:start="611:44" pos:end="611:45">gb</name></expr></argument>, <argument pos:start="611:48" pos:end="611:48"><expr pos:start="611:48" pos:end="611:48"><literal type="number" pos:start="611:48" pos:end="611:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="611:52" pos:end="611:77">//but using ff_vc1_ tables</comment>

            <expr_stmt pos:start="613:13" pos:end="613:71"><expr pos:start="613:13" pos:end="613:70"><name pos:start="613:13" pos:end="613:24"><name pos:start="613:13" pos:end="613:13">v</name><operator pos:start="613:14" pos:end="613:15">-&gt;</operator><name pos:start="613:16" pos:end="613:24">cbpcy_vlc</name></name>        <operator pos:start="613:33" pos:end="613:33">=</operator> <operator pos:start="613:35" pos:end="613:35">&amp;</operator><name pos:start="613:36" pos:end="613:70"><name pos:start="613:36" pos:end="613:53">ff_vc1_cbpcy_p_vlc</name><index pos:start="613:54" pos:end="613:70">[<expr pos:start="613:55" pos:end="613:69"><call pos:start="613:55" pos:end="613:69"><name pos:start="613:55" pos:end="613:62">get_bits</name><argument_list pos:start="613:63" pos:end="613:69">(<argument pos:start="613:64" pos:end="613:65"><expr pos:start="613:64" pos:end="613:65"><name pos:start="613:64" pos:end="613:65">gb</name></expr></argument>, <argument pos:start="613:68" pos:end="613:68"><expr pos:start="613:68" pos:end="613:68"><literal type="number" pos:start="613:68" pos:end="613:68">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="615:11" pos:end="623:9">else if <condition pos:start="615:19" pos:end="615:41">(<expr pos:start="615:20" pos:end="615:40"><name pos:start="615:20" pos:end="615:25"><name pos:start="615:20" pos:end="615:20">v</name><operator pos:start="615:21" pos:end="615:22">-&gt;</operator><name pos:start="615:23" pos:end="615:25">fcm</name></name> <operator pos:start="615:27" pos:end="615:28">==</operator> <name pos:start="615:30" pos:end="615:40">ILACE_FRAME</name></expr>)</condition> <block pos:start="615:43" pos:end="623:9">{<block_content pos:start="617:13" pos:end="621:36"> <comment type="line" pos:start="615:45" pos:end="615:63">// frame interlaced</comment>

            <expr_stmt pos:start="617:13" pos:end="617:54"><expr pos:start="617:13" pos:end="617:53"><name pos:start="617:13" pos:end="617:22"><name pos:start="617:13" pos:end="617:13">v</name><operator pos:start="617:14" pos:end="617:15">-&gt;</operator><name pos:start="617:16" pos:end="617:22">qs_last</name></name>          <operator pos:start="617:33" pos:end="617:33">=</operator> <name pos:start="617:35" pos:end="617:53"><name pos:start="617:35" pos:end="617:35">v</name><operator pos:start="617:36" pos:end="617:37">-&gt;</operator><name pos:start="617:38" pos:end="617:38">s</name><operator pos:start="617:39" pos:end="617:39">.</operator><name pos:start="617:40" pos:end="617:53">quarter_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="619:13" pos:end="619:36"><expr pos:start="619:13" pos:end="619:35"><name pos:start="619:13" pos:end="619:31"><name pos:start="619:13" pos:end="619:13">v</name><operator pos:start="619:14" pos:end="619:15">-&gt;</operator><name pos:start="619:16" pos:end="619:16">s</name><operator pos:start="619:17" pos:end="619:17">.</operator><name pos:start="619:18" pos:end="619:31">quarter_sample</name></name> <operator pos:start="619:33" pos:end="619:33">=</operator> <literal type="number" pos:start="619:35" pos:end="619:35">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="621:13" pos:end="621:36"><expr pos:start="621:13" pos:end="621:35"><name pos:start="621:13" pos:end="621:22"><name pos:start="621:13" pos:end="621:13">v</name><operator pos:start="621:14" pos:end="621:15">-&gt;</operator><name pos:start="621:16" pos:end="621:16">s</name><operator pos:start="621:17" pos:end="621:17">.</operator><name pos:start="621:18" pos:end="621:22">mspel</name></name>          <operator pos:start="621:33" pos:end="621:33">=</operator> <literal type="number" pos:start="621:35" pos:end="621:35">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="623:11" pos:end="657:9">else <block pos:start="623:16" pos:end="657:9">{<block_content pos:start="625:13" pos:end="655:13">    <comment type="line" pos:start="623:21" pos:end="623:39">// field interlaced</comment>

            <expr_stmt pos:start="625:13" pos:end="625:40"><expr pos:start="625:13" pos:end="625:39"><name pos:start="625:13" pos:end="625:21">mbmodetab</name> <operator pos:start="625:23" pos:end="625:23">=</operator> <call pos:start="625:25" pos:end="625:39"><name pos:start="625:25" pos:end="625:32">get_bits</name><argument_list pos:start="625:33" pos:end="625:39">(<argument pos:start="625:34" pos:end="625:35"><expr pos:start="625:34" pos:end="625:35"><name pos:start="625:34" pos:end="625:35">gb</name></expr></argument>, <argument pos:start="625:38" pos:end="625:38"><expr pos:start="625:38" pos:end="625:38"><literal type="number" pos:start="625:38" pos:end="625:38">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="627:13" pos:end="627:49"><expr pos:start="627:13" pos:end="627:48"><name pos:start="627:13" pos:end="627:18">imvtab</name> <operator pos:start="627:20" pos:end="627:20">=</operator> <call pos:start="627:22" pos:end="627:48"><name pos:start="627:22" pos:end="627:29">get_bits</name><argument_list pos:start="627:30" pos:end="627:48">(<argument pos:start="627:31" pos:end="627:32"><expr pos:start="627:31" pos:end="627:32"><name pos:start="627:31" pos:end="627:32">gb</name></expr></argument>, <argument pos:start="627:35" pos:end="627:47"><expr pos:start="627:35" pos:end="627:47"><literal type="number" pos:start="627:35" pos:end="627:37">2</literal> <operator pos:start="627:37" pos:end="627:37">+</operator> <name pos:start="627:39" pos:end="627:47"><name pos:start="627:39" pos:end="627:39">v</name><operator pos:start="627:40" pos:end="627:41">-&gt;</operator><name pos:start="627:42" pos:end="627:47">numref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="629:13" pos:end="635:61"><if pos:start="629:13" pos:end="631:61">if <condition pos:start="629:16" pos:end="629:27">(<expr pos:start="629:17" pos:end="629:26"><operator pos:start="629:17" pos:end="629:17">!</operator><name pos:start="629:18" pos:end="629:26"><name pos:start="629:18" pos:end="629:18">v</name><operator pos:start="629:19" pos:end="629:20">-&gt;</operator><name pos:start="629:21" pos:end="629:26">numref</name></name></expr>)</condition><block type="pseudo" pos:start="631:17" pos:end="631:61"><block_content pos:start="631:17" pos:end="631:61">

                <expr_stmt pos:start="631:17" pos:end="631:61"><expr pos:start="631:17" pos:end="631:60"><name pos:start="631:17" pos:end="631:26"><name pos:start="631:17" pos:end="631:17">v</name><operator pos:start="631:18" pos:end="631:19">-&gt;</operator><name pos:start="631:20" pos:end="631:26">imv_vlc</name></name> <operator pos:start="631:28" pos:end="631:28">=</operator> <operator pos:start="631:30" pos:end="631:30">&amp;</operator><name pos:start="631:31" pos:end="631:60"><name pos:start="631:31" pos:end="631:52">ff_vc1_1ref_mvdata_vlc</name><index pos:start="631:53" pos:end="631:60">[<expr pos:start="631:54" pos:end="631:59"><name pos:start="631:54" pos:end="631:59">imvtab</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="633:13" pos:end="635:61">else<block type="pseudo" pos:start="635:17" pos:end="635:61"><block_content pos:start="635:17" pos:end="635:61">

                <expr_stmt pos:start="635:17" pos:end="635:61"><expr pos:start="635:17" pos:end="635:60"><name pos:start="635:17" pos:end="635:26"><name pos:start="635:17" pos:end="635:17">v</name><operator pos:start="635:18" pos:end="635:19">-&gt;</operator><name pos:start="635:20" pos:end="635:26">imv_vlc</name></name> <operator pos:start="635:28" pos:end="635:28">=</operator> <operator pos:start="635:30" pos:end="635:30">&amp;</operator><name pos:start="635:31" pos:end="635:60"><name pos:start="635:31" pos:end="635:52">ff_vc1_2ref_mvdata_vlc</name><index pos:start="635:53" pos:end="635:60">[<expr pos:start="635:54" pos:end="635:59"><name pos:start="635:54" pos:end="635:59">imvtab</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="637:13" pos:end="637:38"><expr pos:start="637:13" pos:end="637:37"><name pos:start="637:13" pos:end="637:19">icbptab</name> <operator pos:start="637:21" pos:end="637:21">=</operator> <call pos:start="637:23" pos:end="637:37"><name pos:start="637:23" pos:end="637:30">get_bits</name><argument_list pos:start="637:31" pos:end="637:37">(<argument pos:start="637:32" pos:end="637:33"><expr pos:start="637:32" pos:end="637:33"><name pos:start="637:32" pos:end="637:33">gb</name></expr></argument>, <argument pos:start="637:36" pos:end="637:36"><expr pos:start="637:36" pos:end="637:36"><literal type="number" pos:start="637:36" pos:end="637:36">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="639:13" pos:end="639:55"><expr pos:start="639:13" pos:end="639:54"><name pos:start="639:13" pos:end="639:24"><name pos:start="639:13" pos:end="639:13">v</name><operator pos:start="639:14" pos:end="639:15">-&gt;</operator><name pos:start="639:16" pos:end="639:24">cbpcy_vlc</name></name> <operator pos:start="639:26" pos:end="639:26">=</operator> <operator pos:start="639:28" pos:end="639:28">&amp;</operator><name pos:start="639:29" pos:end="639:54"><name pos:start="639:29" pos:end="639:45">ff_vc1_icbpcy_vlc</name><index pos:start="639:46" pos:end="639:54">[<expr pos:start="639:47" pos:end="639:53"><name pos:start="639:47" pos:end="639:53">icbptab</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="641:13" pos:end="655:13"><if pos:start="641:13" pos:end="651:13">if <condition pos:start="641:16" pos:end="643:85">(<expr pos:start="641:17" pos:end="643:84"><operator pos:start="641:17" pos:end="641:17">(</operator><name pos:start="641:18" pos:end="641:27"><name pos:start="641:18" pos:end="641:18">v</name><operator pos:start="641:19" pos:end="641:20">-&gt;</operator><name pos:start="641:21" pos:end="641:27">mv_mode</name></name> <operator pos:start="641:29" pos:end="641:30">==</operator> <name pos:start="641:32" pos:end="641:54">MV_PMODE_INTENSITY_COMP</name> <operator pos:start="641:56" pos:end="641:57">&amp;&amp;</operator>

                <name pos:start="643:17" pos:end="643:27"><name pos:start="643:17" pos:end="643:17">v</name><operator pos:start="643:18" pos:end="643:19">-&gt;</operator><name pos:start="643:20" pos:end="643:27">mv_mode2</name></name> <operator pos:start="643:29" pos:end="643:30">==</operator> <name pos:start="643:32" pos:end="643:48">MV_PMODE_MIXED_MV</name><operator pos:start="643:49" pos:end="643:49">)</operator> <operator pos:start="643:51" pos:end="643:52">||</operator> <name pos:start="643:54" pos:end="643:63"><name pos:start="643:54" pos:end="643:54">v</name><operator pos:start="643:55" pos:end="643:56">-&gt;</operator><name pos:start="643:57" pos:end="643:63">mv_mode</name></name> <operator pos:start="643:65" pos:end="643:66">==</operator> <name pos:start="643:68" pos:end="643:84">MV_PMODE_MIXED_MV</name></expr>)</condition> <block pos:start="643:87" pos:end="651:13">{<block_content pos:start="645:17" pos:end="649:69">

                <expr_stmt pos:start="645:17" pos:end="645:50"><expr pos:start="645:17" pos:end="645:49"><name pos:start="645:17" pos:end="645:27">fourmvbptab</name>     <operator pos:start="645:33" pos:end="645:33">=</operator> <call pos:start="645:35" pos:end="645:49"><name pos:start="645:35" pos:end="645:42">get_bits</name><argument_list pos:start="645:43" pos:end="645:49">(<argument pos:start="645:44" pos:end="645:45"><expr pos:start="645:44" pos:end="645:45"><name pos:start="645:44" pos:end="645:45">gb</name></expr></argument>, <argument pos:start="645:48" pos:end="645:48"><expr pos:start="645:48" pos:end="645:48"><literal type="number" pos:start="645:48" pos:end="645:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="647:17" pos:end="647:77"><expr pos:start="647:17" pos:end="647:76"><name pos:start="647:17" pos:end="647:31"><name pos:start="647:17" pos:end="647:17">v</name><operator pos:start="647:18" pos:end="647:19">-&gt;</operator><name pos:start="647:20" pos:end="647:31">fourmvbp_vlc</name></name> <operator pos:start="647:33" pos:end="647:33">=</operator> <operator pos:start="647:35" pos:end="647:35">&amp;</operator><name pos:start="647:36" pos:end="647:76"><name pos:start="647:36" pos:end="647:63">ff_vc1_4mv_block_pattern_vlc</name><index pos:start="647:64" pos:end="647:76">[<expr pos:start="647:65" pos:end="647:75"><name pos:start="647:65" pos:end="647:75">fourmvbptab</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="649:17" pos:end="649:69"><expr pos:start="649:17" pos:end="649:68"><name pos:start="649:17" pos:end="649:29"><name pos:start="649:17" pos:end="649:17">v</name><operator pos:start="649:18" pos:end="649:19">-&gt;</operator><name pos:start="649:20" pos:end="649:29">mbmode_vlc</name></name> <operator pos:start="649:31" pos:end="649:31">=</operator> <operator pos:start="649:33" pos:end="649:33">&amp;</operator><name pos:start="649:34" pos:end="649:68"><name pos:start="649:34" pos:end="649:57">ff_vc1_if_mmv_mbmode_vlc</name><index pos:start="649:58" pos:end="649:68">[<expr pos:start="649:59" pos:end="649:67"><name pos:start="649:59" pos:end="649:67">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="651:15" pos:end="655:13">else <block pos:start="651:20" pos:end="655:13">{<block_content pos:start="653:17" pos:end="653:69">

                <expr_stmt pos:start="653:17" pos:end="653:69"><expr pos:start="653:17" pos:end="653:68"><name pos:start="653:17" pos:end="653:29"><name pos:start="653:17" pos:end="653:17">v</name><operator pos:start="653:18" pos:end="653:19">-&gt;</operator><name pos:start="653:20" pos:end="653:29">mbmode_vlc</name></name> <operator pos:start="653:31" pos:end="653:31">=</operator> <operator pos:start="653:33" pos:end="653:33">&amp;</operator><name pos:start="653:34" pos:end="653:68"><name pos:start="653:34" pos:end="653:57">ff_vc1_if_1mv_mbmode_vlc</name><index pos:start="653:58" pos:end="653:68">[<expr pos:start="653:59" pos:end="653:67"><name pos:start="653:59" pos:end="653:67">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="659:9" pos:end="665:9"><if pos:start="659:9" pos:end="665:9">if <condition pos:start="659:12" pos:end="659:22">(<expr pos:start="659:13" pos:end="659:21"><name pos:start="659:13" pos:end="659:21"><name pos:start="659:13" pos:end="659:13">v</name><operator pos:start="659:14" pos:end="659:15">-&gt;</operator><name pos:start="659:16" pos:end="659:21">dquant</name></name></expr>)</condition> <block pos:start="659:24" pos:end="665:9">{<block_content pos:start="661:13" pos:end="663:35">

            <expr_stmt pos:start="661:13" pos:end="661:66"><expr pos:start="661:13" pos:end="661:65"><call pos:start="661:13" pos:end="661:65"><name pos:start="661:13" pos:end="661:18">av_log</name><argument_list pos:start="661:19" pos:end="661:65">(<argument pos:start="661:20" pos:end="661:29"><expr pos:start="661:20" pos:end="661:29"><name pos:start="661:20" pos:end="661:29"><name pos:start="661:20" pos:end="661:20">v</name><operator pos:start="661:21" pos:end="661:22">-&gt;</operator><name pos:start="661:23" pos:end="661:23">s</name><operator pos:start="661:24" pos:end="661:24">.</operator><name pos:start="661:25" pos:end="661:29">avctx</name></name></expr></argument>, <argument pos:start="661:32" pos:end="661:43"><expr pos:start="661:32" pos:end="661:43"><name pos:start="661:32" pos:end="661:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="661:46" pos:end="661:64"><expr pos:start="661:46" pos:end="661:64"><literal type="string" pos:start="661:46" pos:end="661:64">"VOP DQuant info\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="663:13" pos:end="663:35"><expr pos:start="663:13" pos:end="663:34"><call pos:start="663:13" pos:end="663:34"><name pos:start="663:13" pos:end="663:31">vop_dquant_decoding</name><argument_list pos:start="663:32" pos:end="663:34">(<argument pos:start="663:33" pos:end="663:33"><expr pos:start="663:33" pos:end="663:33"><name pos:start="663:33" pos:end="663:33">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="669:9" pos:end="669:21"><expr pos:start="669:9" pos:end="669:20"><name pos:start="669:9" pos:end="669:16"><name pos:start="669:9" pos:end="669:9">v</name><operator pos:start="669:10" pos:end="669:11">-&gt;</operator><name pos:start="669:12" pos:end="669:16">ttfrm</name></name> <operator pos:start="669:18" pos:end="669:18">=</operator> <literal type="number" pos:start="669:20" pos:end="669:20">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="669:23" pos:end="669:42">//FIXME Is that so ?</comment>

        <if_stmt pos:start="671:9" pos:end="687:9"><if pos:start="671:9" pos:end="681:9">if <condition pos:start="671:12" pos:end="671:27">(<expr pos:start="671:13" pos:end="671:26"><name pos:start="671:13" pos:end="671:26"><name pos:start="671:13" pos:end="671:13">v</name><operator pos:start="671:14" pos:end="671:15">-&gt;</operator><name pos:start="671:16" pos:end="671:26">vstransform</name></name></expr>)</condition> <block pos:start="671:29" pos:end="681:9">{<block_content pos:start="673:13" pos:end="679:13">

            <expr_stmt pos:start="673:13" pos:end="673:37"><expr pos:start="673:13" pos:end="673:36"><name pos:start="673:13" pos:end="673:20"><name pos:start="673:13" pos:end="673:13">v</name><operator pos:start="673:14" pos:end="673:15">-&gt;</operator><name pos:start="673:16" pos:end="673:20">ttmbf</name></name> <operator pos:start="673:22" pos:end="673:22">=</operator> <call pos:start="673:24" pos:end="673:36"><name pos:start="673:24" pos:end="673:32">get_bits1</name><argument_list pos:start="673:33" pos:end="673:36">(<argument pos:start="673:34" pos:end="673:35"><expr pos:start="673:34" pos:end="673:35"><name pos:start="673:34" pos:end="673:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="675:13" pos:end="679:13"><if pos:start="675:13" pos:end="679:13">if <condition pos:start="675:16" pos:end="675:25">(<expr pos:start="675:17" pos:end="675:24"><name pos:start="675:17" pos:end="675:24"><name pos:start="675:17" pos:end="675:17">v</name><operator pos:start="675:18" pos:end="675:19">-&gt;</operator><name pos:start="675:20" pos:end="675:24">ttmbf</name></name></expr>)</condition> <block pos:start="675:27" pos:end="679:13">{<block_content pos:start="677:17" pos:end="677:63">

                <expr_stmt pos:start="677:17" pos:end="677:63"><expr pos:start="677:17" pos:end="677:62"><name pos:start="677:17" pos:end="677:24"><name pos:start="677:17" pos:end="677:17">v</name><operator pos:start="677:18" pos:end="677:19">-&gt;</operator><name pos:start="677:20" pos:end="677:24">ttfrm</name></name> <operator pos:start="677:26" pos:end="677:26">=</operator> <name pos:start="677:28" pos:end="677:62"><name pos:start="677:28" pos:end="677:45">ff_vc1_ttfrm_to_tt</name><index pos:start="677:46" pos:end="677:62">[<expr pos:start="677:47" pos:end="677:61"><call pos:start="677:47" pos:end="677:61"><name pos:start="677:47" pos:end="677:54">get_bits</name><argument_list pos:start="677:55" pos:end="677:61">(<argument pos:start="677:56" pos:end="677:57"><expr pos:start="677:56" pos:end="677:57"><name pos:start="677:56" pos:end="677:57">gb</name></expr></argument>, <argument pos:start="677:60" pos:end="677:60"><expr pos:start="677:60" pos:end="677:60"><literal type="number" pos:start="677:60" pos:end="677:60">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="681:11" pos:end="687:9">else <block pos:start="681:16" pos:end="687:9">{<block_content pos:start="683:13" pos:end="685:30">

            <expr_stmt pos:start="683:13" pos:end="683:25"><expr pos:start="683:13" pos:end="683:24"><name pos:start="683:13" pos:end="683:20"><name pos:start="683:13" pos:end="683:13">v</name><operator pos:start="683:14" pos:end="683:15">-&gt;</operator><name pos:start="683:16" pos:end="683:20">ttmbf</name></name> <operator pos:start="683:22" pos:end="683:22">=</operator> <literal type="number" pos:start="683:24" pos:end="683:24">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="685:13" pos:end="685:30"><expr pos:start="685:13" pos:end="685:29"><name pos:start="685:13" pos:end="685:20"><name pos:start="685:13" pos:end="685:13">v</name><operator pos:start="685:14" pos:end="685:15">-&gt;</operator><name pos:start="685:16" pos:end="685:20">ttfrm</name></name> <operator pos:start="685:22" pos:end="685:22">=</operator> <name pos:start="685:24" pos:end="685:29">TT_8X8</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="689:9" pos:end="689:14">break;</break>

    <case pos:start="691:5" pos:end="691:27">case <expr pos:start="691:10" pos:end="691:26"><name pos:start="691:10" pos:end="691:26">AV_PICTURE_TYPE_B</name></expr>:</case>

        <if_stmt pos:start="693:9" pos:end="705:9"><if pos:start="693:9" pos:end="705:9">if <condition pos:start="693:12" pos:end="693:34">(<expr pos:start="693:13" pos:end="693:33"><name pos:start="693:13" pos:end="693:18"><name pos:start="693:13" pos:end="693:13">v</name><operator pos:start="693:14" pos:end="693:15">-&gt;</operator><name pos:start="693:16" pos:end="693:18">fcm</name></name> <operator pos:start="693:20" pos:end="693:21">==</operator> <name pos:start="693:23" pos:end="693:33">ILACE_FRAME</name></expr>)</condition> <block pos:start="693:36" pos:end="705:9">{<block_content pos:start="695:13" pos:end="703:13">

            <expr_stmt pos:start="695:13" pos:end="695:105"><expr pos:start="695:13" pos:end="695:104"><name pos:start="695:13" pos:end="695:34"><name pos:start="695:13" pos:end="695:13">v</name><operator pos:start="695:14" pos:end="695:15">-&gt;</operator><name pos:start="695:16" pos:end="695:34">bfraction_lut_index</name></name> <operator pos:start="695:36" pos:end="695:36">=</operator> <call pos:start="695:38" pos:end="695:104"><name pos:start="695:38" pos:end="695:45">get_vlc2</name><argument_list pos:start="695:46" pos:end="695:104">(<argument pos:start="695:47" pos:end="695:48"><expr pos:start="695:47" pos:end="695:48"><name pos:start="695:47" pos:end="695:48">gb</name></expr></argument>, <argument pos:start="695:51" pos:end="695:76"><expr pos:start="695:51" pos:end="695:76"><name pos:start="695:51" pos:end="695:76"><name pos:start="695:51" pos:end="695:70">ff_vc1_bfraction_vlc</name><operator pos:start="695:71" pos:end="695:71">.</operator><name pos:start="695:72" pos:end="695:76">table</name></name></expr></argument>, <argument pos:start="695:79" pos:end="695:100"><expr pos:start="695:79" pos:end="695:100"><name pos:start="695:79" pos:end="695:100">VC1_BFRACTION_VLC_BITS</name></expr></argument>, <argument pos:start="695:103" pos:end="695:103"><expr pos:start="695:103" pos:end="695:103"><literal type="number" pos:start="695:103" pos:end="695:103">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="697:13" pos:end="697:82"><expr pos:start="697:13" pos:end="697:81"><name pos:start="697:13" pos:end="697:24"><name pos:start="697:13" pos:end="697:13">v</name><operator pos:start="697:14" pos:end="697:15">-&gt;</operator><name pos:start="697:16" pos:end="697:24">bfraction</name></name>           <operator pos:start="697:36" pos:end="697:36">=</operator> <name pos:start="697:38" pos:end="697:81"><name pos:start="697:38" pos:end="697:57">ff_vc1_bfraction_lut</name><index pos:start="697:58" pos:end="697:81">[<expr pos:start="697:59" pos:end="697:80"><name pos:start="697:59" pos:end="697:80"><name pos:start="697:59" pos:end="697:59">v</name><operator pos:start="697:60" pos:end="697:61">-&gt;</operator><name pos:start="697:62" pos:end="697:80">bfraction_lut_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="699:13" pos:end="703:13"><if pos:start="699:13" pos:end="703:13">if <condition pos:start="699:16" pos:end="699:34">(<expr pos:start="699:17" pos:end="699:33"><name pos:start="699:17" pos:end="699:28"><name pos:start="699:17" pos:end="699:17">v</name><operator pos:start="699:18" pos:end="699:19">-&gt;</operator><name pos:start="699:20" pos:end="699:28">bfraction</name></name> <operator pos:start="699:30" pos:end="699:31">==</operator> <literal type="number" pos:start="699:33" pos:end="699:33">0</literal></expr>)</condition> <block pos:start="699:36" pos:end="703:13">{<block_content pos:start="701:17" pos:end="701:26">

                <return pos:start="701:17" pos:end="701:26">return <expr pos:start="701:24" pos:end="701:25"><operator pos:start="701:24" pos:end="701:24">-</operator><literal type="number" pos:start="701:25" pos:end="701:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="707:9" pos:end="713:27"><if pos:start="707:9" pos:end="709:45">if <condition pos:start="707:12" pos:end="707:27">(<expr pos:start="707:13" pos:end="707:26"><name pos:start="707:13" pos:end="707:26"><name pos:start="707:13" pos:end="707:13">v</name><operator pos:start="707:14" pos:end="707:15">-&gt;</operator><name pos:start="707:16" pos:end="707:26">extended_mv</name></name></expr>)</condition><block type="pseudo" pos:start="709:13" pos:end="709:45"><block_content pos:start="709:13" pos:end="709:45">

            <expr_stmt pos:start="709:13" pos:end="709:45"><expr pos:start="709:13" pos:end="709:44"><name pos:start="709:13" pos:end="709:22"><name pos:start="709:13" pos:end="709:13">v</name><operator pos:start="709:14" pos:end="709:15">-&gt;</operator><name pos:start="709:16" pos:end="709:22">mvrange</name></name> <operator pos:start="709:24" pos:end="709:24">=</operator> <call pos:start="709:26" pos:end="709:44"><name pos:start="709:26" pos:end="709:34">get_unary</name><argument_list pos:start="709:35" pos:end="709:44">(<argument pos:start="709:36" pos:end="709:37"><expr pos:start="709:36" pos:end="709:37"><name pos:start="709:36" pos:end="709:37">gb</name></expr></argument>, <argument pos:start="709:40" pos:end="709:40"><expr pos:start="709:40" pos:end="709:40"><literal type="number" pos:start="709:40" pos:end="709:40">0</literal></expr></argument>, <argument pos:start="709:43" pos:end="709:43"><expr pos:start="709:43" pos:end="709:43"><literal type="number" pos:start="709:43" pos:end="709:43">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="711:9" pos:end="713:27">else<block type="pseudo" pos:start="713:13" pos:end="713:27"><block_content pos:start="713:13" pos:end="713:27">

            <expr_stmt pos:start="713:13" pos:end="713:27"><expr pos:start="713:13" pos:end="713:26"><name pos:start="713:13" pos:end="713:22"><name pos:start="713:13" pos:end="713:13">v</name><operator pos:start="713:14" pos:end="713:15">-&gt;</operator><name pos:start="713:16" pos:end="713:22">mvrange</name></name> <operator pos:start="713:24" pos:end="713:24">=</operator> <literal type="number" pos:start="713:26" pos:end="713:26">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="715:9" pos:end="715:56"><expr pos:start="715:9" pos:end="715:55"><name pos:start="715:9" pos:end="715:14"><name pos:start="715:9" pos:end="715:9">v</name><operator pos:start="715:10" pos:end="715:11">-&gt;</operator><name pos:start="715:12" pos:end="715:14">k_x</name></name>     <operator pos:start="715:20" pos:end="715:20">=</operator> <name pos:start="715:22" pos:end="715:31"><name pos:start="715:22" pos:end="715:22">v</name><operator pos:start="715:23" pos:end="715:24">-&gt;</operator><name pos:start="715:25" pos:end="715:31">mvrange</name></name> <operator pos:start="715:33" pos:end="715:33">+</operator> <literal type="number" pos:start="715:35" pos:end="715:37">9</literal> <operator pos:start="715:37" pos:end="715:37">+</operator> <operator pos:start="715:39" pos:end="715:39">(</operator><name pos:start="715:40" pos:end="715:49"><name pos:start="715:40" pos:end="715:40">v</name><operator pos:start="715:41" pos:end="715:42">-&gt;</operator><name pos:start="715:43" pos:end="715:49">mvrange</name></name> <operator pos:start="715:51" pos:end="715:52">&gt;&gt;</operator> <literal type="number" pos:start="715:54" pos:end="715:54">1</literal><operator pos:start="715:55" pos:end="715:55">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="715:58" pos:end="715:80">//k_x can be 9 10 12 13</comment>

        <expr_stmt pos:start="717:9" pos:end="717:36"><expr pos:start="717:9" pos:end="717:35"><name pos:start="717:9" pos:end="717:14"><name pos:start="717:9" pos:end="717:9">v</name><operator pos:start="717:10" pos:end="717:11">-&gt;</operator><name pos:start="717:12" pos:end="717:14">k_y</name></name>     <operator pos:start="717:20" pos:end="717:20">=</operator> <name pos:start="717:22" pos:end="717:31"><name pos:start="717:22" pos:end="717:22">v</name><operator pos:start="717:23" pos:end="717:24">-&gt;</operator><name pos:start="717:25" pos:end="717:31">mvrange</name></name> <operator pos:start="717:33" pos:end="717:33">+</operator> <literal type="number" pos:start="717:35" pos:end="717:35">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="717:38" pos:end="717:59">//k_y can be 8 9 10 11</comment>

        <expr_stmt pos:start="719:9" pos:end="719:39"><expr pos:start="719:9" pos:end="719:38"><name pos:start="719:9" pos:end="719:18"><name pos:start="719:9" pos:end="719:9">v</name><operator pos:start="719:10" pos:end="719:11">-&gt;</operator><name pos:start="719:12" pos:end="719:18">range_x</name></name> <operator pos:start="719:20" pos:end="719:20">=</operator> <literal type="number" pos:start="719:22" pos:end="719:22">1</literal> <operator pos:start="719:24" pos:end="719:25">&lt;&lt;</operator> <operator pos:start="719:27" pos:end="719:27">(</operator><name pos:start="719:28" pos:end="719:33"><name pos:start="719:28" pos:end="719:28">v</name><operator pos:start="719:29" pos:end="719:30">-&gt;</operator><name pos:start="719:31" pos:end="719:33">k_x</name></name> <operator pos:start="719:35" pos:end="719:35">-</operator> <literal type="number" pos:start="719:37" pos:end="719:37">1</literal><operator pos:start="719:38" pos:end="719:38">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="721:9" pos:end="721:39"><expr pos:start="721:9" pos:end="721:38"><name pos:start="721:9" pos:end="721:18"><name pos:start="721:9" pos:end="721:9">v</name><operator pos:start="721:10" pos:end="721:11">-&gt;</operator><name pos:start="721:12" pos:end="721:18">range_y</name></name> <operator pos:start="721:20" pos:end="721:20">=</operator> <literal type="number" pos:start="721:22" pos:end="721:22">1</literal> <operator pos:start="721:24" pos:end="721:25">&lt;&lt;</operator> <operator pos:start="721:27" pos:end="721:27">(</operator><name pos:start="721:28" pos:end="721:33"><name pos:start="721:28" pos:end="721:28">v</name><operator pos:start="721:29" pos:end="721:30">-&gt;</operator><name pos:start="721:31" pos:end="721:33">k_y</name></name> <operator pos:start="721:35" pos:end="721:35">-</operator> <literal type="number" pos:start="721:37" pos:end="721:37">1</literal><operator pos:start="721:38" pos:end="721:38">)</operator></expr>;</expr_stmt>



        <if_stmt pos:start="725:9" pos:end="735:28"><if pos:start="725:9" pos:end="727:28">if <condition pos:start="725:12" pos:end="725:22">(<expr pos:start="725:13" pos:end="725:21"><name pos:start="725:13" pos:end="725:17"><name pos:start="725:13" pos:end="725:13">v</name><operator pos:start="725:14" pos:end="725:15">-&gt;</operator><name pos:start="725:16" pos:end="725:17">pq</name></name> <operator pos:start="725:19" pos:end="725:19">&lt;</operator> <literal type="number" pos:start="725:21" pos:end="725:21">5</literal></expr>)</condition><block type="pseudo" pos:start="727:13" pos:end="727:28"><block_content pos:start="727:13" pos:end="727:28">

            <expr_stmt pos:start="727:13" pos:end="727:28"><expr pos:start="727:13" pos:end="727:27"><name pos:start="727:13" pos:end="727:23"><name pos:start="727:13" pos:end="727:13">v</name><operator pos:start="727:14" pos:end="727:15">-&gt;</operator><name pos:start="727:16" pos:end="727:23">tt_index</name></name> <operator pos:start="727:25" pos:end="727:25">=</operator> <literal type="number" pos:start="727:27" pos:end="727:27">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="729:9" pos:end="731:28">else if <condition pos:start="729:17" pos:end="729:28">(<expr pos:start="729:18" pos:end="729:27"><name pos:start="729:18" pos:end="729:22"><name pos:start="729:18" pos:end="729:18">v</name><operator pos:start="729:19" pos:end="729:20">-&gt;</operator><name pos:start="729:21" pos:end="729:22">pq</name></name> <operator pos:start="729:24" pos:end="729:24">&lt;</operator> <literal type="number" pos:start="729:26" pos:end="729:27">13</literal></expr>)</condition><block type="pseudo" pos:start="731:13" pos:end="731:28"><block_content pos:start="731:13" pos:end="731:28">

            <expr_stmt pos:start="731:13" pos:end="731:28"><expr pos:start="731:13" pos:end="731:27"><name pos:start="731:13" pos:end="731:23"><name pos:start="731:13" pos:end="731:13">v</name><operator pos:start="731:14" pos:end="731:15">-&gt;</operator><name pos:start="731:16" pos:end="731:23">tt_index</name></name> <operator pos:start="731:25" pos:end="731:25">=</operator> <literal type="number" pos:start="731:27" pos:end="731:27">1</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="733:9" pos:end="735:28">else<block type="pseudo" pos:start="735:13" pos:end="735:28"><block_content pos:start="735:13" pos:end="735:28">

            <expr_stmt pos:start="735:13" pos:end="735:28"><expr pos:start="735:13" pos:end="735:27"><name pos:start="735:13" pos:end="735:23"><name pos:start="735:13" pos:end="735:13">v</name><operator pos:start="735:14" pos:end="735:15">-&gt;</operator><name pos:start="735:16" pos:end="735:23">tt_index</name></name> <operator pos:start="735:25" pos:end="735:25">=</operator> <literal type="number" pos:start="735:27" pos:end="735:27">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="739:9" pos:end="895:9"><if pos:start="739:9" pos:end="797:9">if <condition pos:start="739:12" pos:end="739:26">(<expr pos:start="739:13" pos:end="739:25"><name pos:start="739:13" pos:end="739:25"><name pos:start="739:13" pos:end="739:13">v</name><operator pos:start="739:14" pos:end="739:15">-&gt;</operator><name pos:start="739:16" pos:end="739:25">field_mode</name></name></expr>)</condition> <block pos:start="739:28" pos:end="797:9">{<block_content pos:start="741:13" pos:end="795:26">

            <decl_stmt pos:start="741:13" pos:end="741:23"><decl pos:start="741:13" pos:end="741:22"><type pos:start="741:13" pos:end="741:15"><name pos:start="741:13" pos:end="741:15">int</name></type> <name pos:start="741:17" pos:end="741:22">mvmode</name></decl>;</decl_stmt>

            <if_stmt pos:start="743:13" pos:end="745:50"><if pos:start="743:13" pos:end="745:50">if <condition pos:start="743:16" pos:end="743:32">(<expr pos:start="743:17" pos:end="743:31"><name pos:start="743:17" pos:end="743:31"><name pos:start="743:17" pos:end="743:17">v</name><operator pos:start="743:18" pos:end="743:19">-&gt;</operator><name pos:start="743:20" pos:end="743:31">extended_dmv</name></name></expr>)</condition><block type="pseudo" pos:start="745:17" pos:end="745:50"><block_content pos:start="745:17" pos:end="745:50">

                <expr_stmt pos:start="745:17" pos:end="745:50"><expr pos:start="745:17" pos:end="745:49"><name pos:start="745:17" pos:end="745:27"><name pos:start="745:17" pos:end="745:17">v</name><operator pos:start="745:18" pos:end="745:19">-&gt;</operator><name pos:start="745:20" pos:end="745:27">dmvrange</name></name> <operator pos:start="745:29" pos:end="745:29">=</operator> <call pos:start="745:31" pos:end="745:49"><name pos:start="745:31" pos:end="745:39">get_unary</name><argument_list pos:start="745:40" pos:end="745:49">(<argument pos:start="745:41" pos:end="745:42"><expr pos:start="745:41" pos:end="745:42"><name pos:start="745:41" pos:end="745:42">gb</name></expr></argument>, <argument pos:start="745:45" pos:end="745:45"><expr pos:start="745:45" pos:end="745:45"><literal type="number" pos:start="745:45" pos:end="745:45">0</literal></expr></argument>, <argument pos:start="745:48" pos:end="745:48"><expr pos:start="745:48" pos:end="745:48"><literal type="number" pos:start="745:48" pos:end="745:48">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="747:13" pos:end="747:41"><expr pos:start="747:13" pos:end="747:40"><name pos:start="747:13" pos:end="747:18">mvmode</name> <operator pos:start="747:20" pos:end="747:20">=</operator> <call pos:start="747:22" pos:end="747:40"><name pos:start="747:22" pos:end="747:30">get_unary</name><argument_list pos:start="747:31" pos:end="747:40">(<argument pos:start="747:32" pos:end="747:33"><expr pos:start="747:32" pos:end="747:33"><name pos:start="747:32" pos:end="747:33">gb</name></expr></argument>, <argument pos:start="747:36" pos:end="747:36"><expr pos:start="747:36" pos:end="747:36"><literal type="number" pos:start="747:36" pos:end="747:36">1</literal></expr></argument>, <argument pos:start="747:39" pos:end="747:39"><expr pos:start="747:39" pos:end="747:39"><literal type="number" pos:start="747:39" pos:end="747:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="749:13" pos:end="749:44"><expr pos:start="749:13" pos:end="749:43"><name pos:start="749:13" pos:end="749:20">lowquant</name> <operator pos:start="749:22" pos:end="749:22">=</operator> <ternary pos:start="749:24" pos:end="749:43"><condition pos:start="749:24" pos:end="749:37"><expr pos:start="749:24" pos:end="749:35"><operator pos:start="749:24" pos:end="749:24">(</operator><name pos:start="749:25" pos:end="749:29"><name pos:start="749:25" pos:end="749:25">v</name><operator pos:start="749:26" pos:end="749:27">-&gt;</operator><name pos:start="749:28" pos:end="749:29">pq</name></name> <operator pos:start="749:31" pos:end="749:31">&gt;</operator> <literal type="number" pos:start="749:33" pos:end="749:34">12</literal><operator pos:start="749:35" pos:end="749:35">)</operator></expr> ?</condition><then pos:start="749:39" pos:end="749:39"> <expr pos:start="749:39" pos:end="749:39"><literal type="number" pos:start="749:39" pos:end="749:39">0</literal></expr> </then><else pos:start="749:41" pos:end="749:43">: <expr pos:start="749:43" pos:end="749:43"><literal type="number" pos:start="749:43" pos:end="749:43">1</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="751:13" pos:end="751:75"><expr pos:start="751:13" pos:end="751:74"><name pos:start="751:13" pos:end="751:22"><name pos:start="751:13" pos:end="751:13">v</name><operator pos:start="751:14" pos:end="751:15">-&gt;</operator><name pos:start="751:16" pos:end="751:22">mv_mode</name></name>          <operator pos:start="751:33" pos:end="751:33">=</operator> <name pos:start="751:35" pos:end="751:74"><name pos:start="751:35" pos:end="751:56">ff_vc1_mv_pmode_table2</name><index pos:start="751:57" pos:end="751:66">[<expr pos:start="751:58" pos:end="751:65"><name pos:start="751:58" pos:end="751:65">lowquant</name></expr>]</index><index pos:start="751:67" pos:end="751:74">[<expr pos:start="751:68" pos:end="751:73"><name pos:start="751:68" pos:end="751:73">mvmode</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="753:13" pos:end="753:54"><expr pos:start="753:13" pos:end="753:53"><name pos:start="753:13" pos:end="753:22"><name pos:start="753:13" pos:end="753:13">v</name><operator pos:start="753:14" pos:end="753:15">-&gt;</operator><name pos:start="753:16" pos:end="753:22">qs_last</name></name>          <operator pos:start="753:33" pos:end="753:33">=</operator> <name pos:start="753:35" pos:end="753:53"><name pos:start="753:35" pos:end="753:35">v</name><operator pos:start="753:36" pos:end="753:37">-&gt;</operator><name pos:start="753:38" pos:end="753:38">s</name><operator pos:start="753:39" pos:end="753:39">.</operator><name pos:start="753:40" pos:end="753:53">quarter_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="755:13" pos:end="755:98"><expr pos:start="755:13" pos:end="755:97"><name pos:start="755:13" pos:end="755:31"><name pos:start="755:13" pos:end="755:13">v</name><operator pos:start="755:14" pos:end="755:15">-&gt;</operator><name pos:start="755:16" pos:end="755:16">s</name><operator pos:start="755:17" pos:end="755:17">.</operator><name pos:start="755:18" pos:end="755:31">quarter_sample</name></name> <operator pos:start="755:33" pos:end="755:33">=</operator> <operator pos:start="755:35" pos:end="755:35">(</operator><name pos:start="755:36" pos:end="755:45"><name pos:start="755:36" pos:end="755:36">v</name><operator pos:start="755:37" pos:end="755:38">-&gt;</operator><name pos:start="755:39" pos:end="755:45">mv_mode</name></name> <operator pos:start="755:47" pos:end="755:48">==</operator> <name pos:start="755:50" pos:end="755:61">MV_PMODE_1MV</name> <operator pos:start="755:63" pos:end="755:64">||</operator> <name pos:start="755:66" pos:end="755:75"><name pos:start="755:66" pos:end="755:66">v</name><operator pos:start="755:67" pos:end="755:68">-&gt;</operator><name pos:start="755:69" pos:end="755:75">mv_mode</name></name> <operator pos:start="755:77" pos:end="755:78">==</operator> <name pos:start="755:80" pos:end="755:96">MV_PMODE_MIXED_MV</name><operator pos:start="755:97" pos:end="755:97">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="757:13" pos:end="757:110"><expr pos:start="757:13" pos:end="757:109"><name pos:start="757:13" pos:end="757:22"><name pos:start="757:13" pos:end="757:13">v</name><operator pos:start="757:14" pos:end="757:15">-&gt;</operator><name pos:start="757:16" pos:end="757:16">s</name><operator pos:start="757:17" pos:end="757:17">.</operator><name pos:start="757:18" pos:end="757:22">mspel</name></name>          <operator pos:start="757:33" pos:end="757:33">=</operator> <operator pos:start="757:35" pos:end="757:35">!</operator><operator pos:start="757:36" pos:end="757:36">(</operator><name pos:start="757:37" pos:end="757:46"><name pos:start="757:37" pos:end="757:37">v</name><operator pos:start="757:38" pos:end="757:39">-&gt;</operator><name pos:start="757:40" pos:end="757:46">mv_mode</name></name> <operator pos:start="757:48" pos:end="757:49">==</operator> <name pos:start="757:51" pos:end="757:73">MV_PMODE_1MV_HPEL_BILIN</name> <operator pos:start="757:75" pos:end="757:76">||</operator> <name pos:start="757:78" pos:end="757:87"><name pos:start="757:78" pos:end="757:78">v</name><operator pos:start="757:79" pos:end="757:80">-&gt;</operator><name pos:start="757:81" pos:end="757:87">mv_mode</name></name> <operator pos:start="757:89" pos:end="757:90">==</operator> <name pos:start="757:92" pos:end="757:108">MV_PMODE_1MV_HPEL</name><operator pos:start="757:109" pos:end="757:109">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="759:13" pos:end="759:79"><expr pos:start="759:13" pos:end="759:78"><name pos:start="759:13" pos:end="759:18">status</name> <operator pos:start="759:20" pos:end="759:20">=</operator> <call pos:start="759:22" pos:end="759:78"><name pos:start="759:22" pos:end="759:38">bitplane_decoding</name><argument_list pos:start="759:39" pos:end="759:78">(<argument pos:start="759:40" pos:end="759:58"><expr pos:start="759:40" pos:end="759:58"><name pos:start="759:40" pos:end="759:58"><name pos:start="759:40" pos:end="759:40">v</name><operator pos:start="759:41" pos:end="759:42">-&gt;</operator><name pos:start="759:43" pos:end="759:58">forward_mb_plane</name></name></expr></argument>, <argument pos:start="759:61" pos:end="759:74"><expr pos:start="759:61" pos:end="759:74"><operator pos:start="759:61" pos:end="759:61">&amp;</operator><name pos:start="759:62" pos:end="759:74"><name pos:start="759:62" pos:end="759:62">v</name><operator pos:start="759:63" pos:end="759:64">-&gt;</operator><name pos:start="759:65" pos:end="759:74">fmb_is_raw</name></name></expr></argument>, <argument pos:start="759:77" pos:end="759:77"><expr pos:start="759:77" pos:end="759:77"><name pos:start="759:77" pos:end="759:77">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="761:13" pos:end="763:26"><if pos:start="761:13" pos:end="763:26">if <condition pos:start="761:16" pos:end="761:27">(<expr pos:start="761:17" pos:end="761:26"><name pos:start="761:17" pos:end="761:22">status</name> <operator pos:start="761:24" pos:end="761:24">&lt;</operator> <literal type="number" pos:start="761:26" pos:end="761:26">0</literal></expr>)</condition><block type="pseudo" pos:start="763:17" pos:end="763:26"><block_content pos:start="763:17" pos:end="763:26">

                <return pos:start="763:17" pos:end="763:26">return <expr pos:start="763:24" pos:end="763:25"><operator pos:start="763:24" pos:end="763:24">-</operator><literal type="number" pos:start="763:25" pos:end="763:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="765:13" pos:end="767:67"><expr pos:start="765:13" pos:end="767:66"><call pos:start="765:13" pos:end="767:66"><name pos:start="765:13" pos:end="765:18">av_log</name><argument_list pos:start="765:19" pos:end="767:66">(<argument pos:start="765:20" pos:end="765:29"><expr pos:start="765:20" pos:end="765:29"><name pos:start="765:20" pos:end="765:29"><name pos:start="765:20" pos:end="765:20">v</name><operator pos:start="765:21" pos:end="765:22">-&gt;</operator><name pos:start="765:23" pos:end="765:23">s</name><operator pos:start="765:24" pos:end="765:24">.</operator><name pos:start="765:25" pos:end="765:29">avctx</name></name></expr></argument>, <argument pos:start="765:32" pos:end="765:43"><expr pos:start="765:32" pos:end="765:43"><name pos:start="765:32" pos:end="765:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="765:46" pos:end="767:44"><expr pos:start="765:46" pos:end="767:44"><literal type="string" pos:start="765:46" pos:end="765:79">"MB Forward Type plane encoding: "</literal>

                   <literal type="string" pos:start="767:20" pos:end="767:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="767:47" pos:end="767:55"><expr pos:start="767:47" pos:end="767:55"><name pos:start="767:47" pos:end="767:52">status</name><operator pos:start="767:53" pos:end="767:54">&gt;&gt;</operator><literal type="number" pos:start="767:55" pos:end="767:55">1</literal></expr></argument>, <argument pos:start="767:58" pos:end="767:65"><expr pos:start="767:58" pos:end="767:65"><name pos:start="767:58" pos:end="767:63">status</name><operator pos:start="767:64" pos:end="767:64">&amp;</operator><literal type="number" pos:start="767:65" pos:end="767:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="769:13" pos:end="769:40"><expr pos:start="769:13" pos:end="769:39"><name pos:start="769:13" pos:end="769:21">mbmodetab</name> <operator pos:start="769:23" pos:end="769:23">=</operator> <call pos:start="769:25" pos:end="769:39"><name pos:start="769:25" pos:end="769:32">get_bits</name><argument_list pos:start="769:33" pos:end="769:39">(<argument pos:start="769:34" pos:end="769:35"><expr pos:start="769:34" pos:end="769:35"><name pos:start="769:34" pos:end="769:35">gb</name></expr></argument>, <argument pos:start="769:38" pos:end="769:38"><expr pos:start="769:38" pos:end="769:38"><literal type="number" pos:start="769:38" pos:end="769:38">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="771:13" pos:end="777:69"><if pos:start="771:13" pos:end="773:69">if <condition pos:start="771:16" pos:end="771:48">(<expr pos:start="771:17" pos:end="771:47"><name pos:start="771:17" pos:end="771:26"><name pos:start="771:17" pos:end="771:17">v</name><operator pos:start="771:18" pos:end="771:19">-&gt;</operator><name pos:start="771:20" pos:end="771:26">mv_mode</name></name> <operator pos:start="771:28" pos:end="771:29">==</operator> <name pos:start="771:31" pos:end="771:47">MV_PMODE_MIXED_MV</name></expr>)</condition><block type="pseudo" pos:start="773:17" pos:end="773:69"><block_content pos:start="773:17" pos:end="773:69">

                <expr_stmt pos:start="773:17" pos:end="773:69"><expr pos:start="773:17" pos:end="773:68"><name pos:start="773:17" pos:end="773:29"><name pos:start="773:17" pos:end="773:17">v</name><operator pos:start="773:18" pos:end="773:19">-&gt;</operator><name pos:start="773:20" pos:end="773:29">mbmode_vlc</name></name> <operator pos:start="773:31" pos:end="773:31">=</operator> <operator pos:start="773:33" pos:end="773:33">&amp;</operator><name pos:start="773:34" pos:end="773:68"><name pos:start="773:34" pos:end="773:57">ff_vc1_if_mmv_mbmode_vlc</name><index pos:start="773:58" pos:end="773:68">[<expr pos:start="773:59" pos:end="773:67"><name pos:start="773:59" pos:end="773:67">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="775:13" pos:end="777:69">else<block type="pseudo" pos:start="777:17" pos:end="777:69"><block_content pos:start="777:17" pos:end="777:69">

                <expr_stmt pos:start="777:17" pos:end="777:69"><expr pos:start="777:17" pos:end="777:68"><name pos:start="777:17" pos:end="777:29"><name pos:start="777:17" pos:end="777:17">v</name><operator pos:start="777:18" pos:end="777:19">-&gt;</operator><name pos:start="777:20" pos:end="777:29">mbmode_vlc</name></name> <operator pos:start="777:31" pos:end="777:31">=</operator> <operator pos:start="777:33" pos:end="777:33">&amp;</operator><name pos:start="777:34" pos:end="777:68"><name pos:start="777:34" pos:end="777:57">ff_vc1_if_1mv_mbmode_vlc</name><index pos:start="777:58" pos:end="777:68">[<expr pos:start="777:59" pos:end="777:67"><name pos:start="777:59" pos:end="777:67">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="779:13" pos:end="779:43"><expr pos:start="779:13" pos:end="779:42"><name pos:start="779:13" pos:end="779:18">imvtab</name>       <operator pos:start="779:26" pos:end="779:26">=</operator> <call pos:start="779:28" pos:end="779:42"><name pos:start="779:28" pos:end="779:35">get_bits</name><argument_list pos:start="779:36" pos:end="779:42">(<argument pos:start="779:37" pos:end="779:38"><expr pos:start="779:37" pos:end="779:38"><name pos:start="779:37" pos:end="779:38">gb</name></expr></argument>, <argument pos:start="779:41" pos:end="779:41"><expr pos:start="779:41" pos:end="779:41"><literal type="number" pos:start="779:41" pos:end="779:41">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="781:13" pos:end="781:59"><expr pos:start="781:13" pos:end="781:58"><name pos:start="781:13" pos:end="781:22"><name pos:start="781:13" pos:end="781:13">v</name><operator pos:start="781:14" pos:end="781:15">-&gt;</operator><name pos:start="781:16" pos:end="781:22">imv_vlc</name></name>   <operator pos:start="781:26" pos:end="781:26">=</operator> <operator pos:start="781:28" pos:end="781:28">&amp;</operator><name pos:start="781:29" pos:end="781:58"><name pos:start="781:29" pos:end="781:50">ff_vc1_2ref_mvdata_vlc</name><index pos:start="781:51" pos:end="781:58">[<expr pos:start="781:52" pos:end="781:57"><name pos:start="781:52" pos:end="781:57">imvtab</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="783:13" pos:end="783:43"><expr pos:start="783:13" pos:end="783:42"><name pos:start="783:13" pos:end="783:19">icbptab</name>      <operator pos:start="783:26" pos:end="783:26">=</operator> <call pos:start="783:28" pos:end="783:42"><name pos:start="783:28" pos:end="783:35">get_bits</name><argument_list pos:start="783:36" pos:end="783:42">(<argument pos:start="783:37" pos:end="783:38"><expr pos:start="783:37" pos:end="783:38"><name pos:start="783:37" pos:end="783:38">gb</name></expr></argument>, <argument pos:start="783:41" pos:end="783:41"><expr pos:start="783:41" pos:end="783:41"><literal type="number" pos:start="783:41" pos:end="783:41">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="785:13" pos:end="785:55"><expr pos:start="785:13" pos:end="785:54"><name pos:start="785:13" pos:end="785:24"><name pos:start="785:13" pos:end="785:13">v</name><operator pos:start="785:14" pos:end="785:15">-&gt;</operator><name pos:start="785:16" pos:end="785:24">cbpcy_vlc</name></name> <operator pos:start="785:26" pos:end="785:26">=</operator> <operator pos:start="785:28" pos:end="785:28">&amp;</operator><name pos:start="785:29" pos:end="785:54"><name pos:start="785:29" pos:end="785:45">ff_vc1_icbpcy_vlc</name><index pos:start="785:46" pos:end="785:54">[<expr pos:start="785:47" pos:end="785:53"><name pos:start="785:47" pos:end="785:53">icbptab</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="787:13" pos:end="793:13"><if pos:start="787:13" pos:end="793:13">if <condition pos:start="787:16" pos:end="787:48">(<expr pos:start="787:17" pos:end="787:47"><name pos:start="787:17" pos:end="787:26"><name pos:start="787:17" pos:end="787:17">v</name><operator pos:start="787:18" pos:end="787:19">-&gt;</operator><name pos:start="787:20" pos:end="787:26">mv_mode</name></name> <operator pos:start="787:28" pos:end="787:29">==</operator> <name pos:start="787:31" pos:end="787:47">MV_PMODE_MIXED_MV</name></expr>)</condition> <block pos:start="787:50" pos:end="793:13">{<block_content pos:start="789:17" pos:end="791:77">

                <expr_stmt pos:start="789:17" pos:end="789:50"><expr pos:start="789:17" pos:end="789:49"><name pos:start="789:17" pos:end="789:27">fourmvbptab</name>     <operator pos:start="789:33" pos:end="789:33">=</operator> <call pos:start="789:35" pos:end="789:49"><name pos:start="789:35" pos:end="789:42">get_bits</name><argument_list pos:start="789:43" pos:end="789:49">(<argument pos:start="789:44" pos:end="789:45"><expr pos:start="789:44" pos:end="789:45"><name pos:start="789:44" pos:end="789:45">gb</name></expr></argument>, <argument pos:start="789:48" pos:end="789:48"><expr pos:start="789:48" pos:end="789:48"><literal type="number" pos:start="789:48" pos:end="789:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="791:17" pos:end="791:77"><expr pos:start="791:17" pos:end="791:76"><name pos:start="791:17" pos:end="791:31"><name pos:start="791:17" pos:end="791:17">v</name><operator pos:start="791:18" pos:end="791:19">-&gt;</operator><name pos:start="791:20" pos:end="791:31">fourmvbp_vlc</name></name> <operator pos:start="791:33" pos:end="791:33">=</operator> <operator pos:start="791:35" pos:end="791:35">&amp;</operator><name pos:start="791:36" pos:end="791:76"><name pos:start="791:36" pos:end="791:63">ff_vc1_4mv_block_pattern_vlc</name><index pos:start="791:64" pos:end="791:76">[<expr pos:start="791:65" pos:end="791:75"><name pos:start="791:65" pos:end="791:75">fourmvbptab</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="795:13" pos:end="795:26"><expr pos:start="795:13" pos:end="795:25"><name pos:start="795:13" pos:end="795:21"><name pos:start="795:13" pos:end="795:13">v</name><operator pos:start="795:14" pos:end="795:15">-&gt;</operator><name pos:start="795:16" pos:end="795:21">numref</name></name> <operator pos:start="795:23" pos:end="795:23">=</operator> <literal type="number" pos:start="795:25" pos:end="795:25">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="795:28" pos:end="795:74">// interlaced field B pictures are always 2-ref</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="797:11" pos:end="861:9">else if <condition pos:start="797:19" pos:end="797:41">(<expr pos:start="797:20" pos:end="797:40"><name pos:start="797:20" pos:end="797:25"><name pos:start="797:20" pos:end="797:20">v</name><operator pos:start="797:21" pos:end="797:22">-&gt;</operator><name pos:start="797:23" pos:end="797:25">fcm</name></name> <operator pos:start="797:27" pos:end="797:28">==</operator> <name pos:start="797:30" pos:end="797:40">ILACE_FRAME</name></expr>)</condition> <block pos:start="797:43" pos:end="861:9">{<block_content pos:start="799:13" pos:end="859:73">

            <if_stmt pos:start="799:13" pos:end="801:50"><if pos:start="799:13" pos:end="801:50">if <condition pos:start="799:16" pos:end="799:32">(<expr pos:start="799:17" pos:end="799:31"><name pos:start="799:17" pos:end="799:31"><name pos:start="799:17" pos:end="799:17">v</name><operator pos:start="799:18" pos:end="799:19">-&gt;</operator><name pos:start="799:20" pos:end="799:31">extended_dmv</name></name></expr>)</condition><block type="pseudo" pos:start="801:17" pos:end="801:50"><block_content pos:start="801:17" pos:end="801:50">

                <expr_stmt pos:start="801:17" pos:end="801:50"><expr pos:start="801:17" pos:end="801:49"><name pos:start="801:17" pos:end="801:27"><name pos:start="801:17" pos:end="801:17">v</name><operator pos:start="801:18" pos:end="801:19">-&gt;</operator><name pos:start="801:20" pos:end="801:27">dmvrange</name></name> <operator pos:start="801:29" pos:end="801:29">=</operator> <call pos:start="801:31" pos:end="801:49"><name pos:start="801:31" pos:end="801:39">get_unary</name><argument_list pos:start="801:40" pos:end="801:49">(<argument pos:start="801:41" pos:end="801:42"><expr pos:start="801:41" pos:end="801:42"><name pos:start="801:41" pos:end="801:42">gb</name></expr></argument>, <argument pos:start="801:45" pos:end="801:45"><expr pos:start="801:45" pos:end="801:45"><literal type="number" pos:start="801:45" pos:end="801:45">0</literal></expr></argument>, <argument pos:start="801:48" pos:end="801:48"><expr pos:start="801:48" pos:end="801:48"><literal type="number" pos:start="801:48" pos:end="801:48">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="803:13" pos:end="805:97"><if pos:start="803:13" pos:end="805:97">if <condition pos:start="803:16" pos:end="803:30">(<expr pos:start="803:17" pos:end="803:29"><call pos:start="803:17" pos:end="803:29"><name pos:start="803:17" pos:end="803:25">get_bits1</name><argument_list pos:start="803:26" pos:end="803:29">(<argument pos:start="803:27" pos:end="803:28"><expr pos:start="803:27" pos:end="803:28"><name pos:start="803:27" pos:end="803:28">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="805:17" pos:end="805:97"><block_content pos:start="805:17" pos:end="805:97"> <comment type="block" pos:start="803:32" pos:end="803:76">/* intcomp - present but shall always be 0 */</comment>

                <expr_stmt pos:start="805:17" pos:end="805:97"><expr pos:start="805:17" pos:end="805:96"><call pos:start="805:17" pos:end="805:96"><name pos:start="805:17" pos:end="805:22">av_log</name><argument_list pos:start="805:23" pos:end="805:96">(<argument pos:start="805:24" pos:end="805:33"><expr pos:start="805:24" pos:end="805:33"><name pos:start="805:24" pos:end="805:33"><name pos:start="805:24" pos:end="805:24">v</name><operator pos:start="805:25" pos:end="805:26">-&gt;</operator><name pos:start="805:27" pos:end="805:27">s</name><operator pos:start="805:28" pos:end="805:28">.</operator><name pos:start="805:29" pos:end="805:33">avctx</name></name></expr></argument>, <argument pos:start="805:36" pos:end="805:49"><expr pos:start="805:36" pos:end="805:49"><name pos:start="805:36" pos:end="805:49">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="805:52" pos:end="805:95"><expr pos:start="805:52" pos:end="805:95"><literal type="string" pos:start="805:52" pos:end="805:95">"Intensity compensation set for B picture\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="807:13" pos:end="807:36"><expr pos:start="807:13" pos:end="807:35"><name pos:start="807:13" pos:end="807:22"><name pos:start="807:13" pos:end="807:13">v</name><operator pos:start="807:14" pos:end="807:15">-&gt;</operator><name pos:start="807:16" pos:end="807:22">intcomp</name></name>          <operator pos:start="807:33" pos:end="807:33">=</operator> <literal type="number" pos:start="807:35" pos:end="807:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="809:13" pos:end="809:47"><expr pos:start="809:13" pos:end="809:46"><name pos:start="809:13" pos:end="809:22"><name pos:start="809:13" pos:end="809:13">v</name><operator pos:start="809:14" pos:end="809:15">-&gt;</operator><name pos:start="809:16" pos:end="809:22">mv_mode</name></name>          <operator pos:start="809:33" pos:end="809:33">=</operator> <name pos:start="809:35" pos:end="809:46">MV_PMODE_1MV</name></expr>;</expr_stmt>

            <expr_stmt pos:start="811:13" pos:end="811:36"><expr pos:start="811:13" pos:end="811:35"><name pos:start="811:13" pos:end="811:27"><name pos:start="811:13" pos:end="811:13">v</name><operator pos:start="811:14" pos:end="811:15">-&gt;</operator><name pos:start="811:16" pos:end="811:27">fourmvswitch</name></name>     <operator pos:start="811:33" pos:end="811:33">=</operator> <literal type="number" pos:start="811:35" pos:end="811:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="813:13" pos:end="813:54"><expr pos:start="813:13" pos:end="813:53"><name pos:start="813:13" pos:end="813:22"><name pos:start="813:13" pos:end="813:13">v</name><operator pos:start="813:14" pos:end="813:15">-&gt;</operator><name pos:start="813:16" pos:end="813:22">qs_last</name></name>          <operator pos:start="813:33" pos:end="813:33">=</operator> <name pos:start="813:35" pos:end="813:53"><name pos:start="813:35" pos:end="813:35">v</name><operator pos:start="813:36" pos:end="813:37">-&gt;</operator><name pos:start="813:38" pos:end="813:38">s</name><operator pos:start="813:39" pos:end="813:39">.</operator><name pos:start="813:40" pos:end="813:53">quarter_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="815:13" pos:end="815:36"><expr pos:start="815:13" pos:end="815:35"><name pos:start="815:13" pos:end="815:31"><name pos:start="815:13" pos:end="815:13">v</name><operator pos:start="815:14" pos:end="815:15">-&gt;</operator><name pos:start="815:16" pos:end="815:16">s</name><operator pos:start="815:17" pos:end="815:17">.</operator><name pos:start="815:18" pos:end="815:31">quarter_sample</name></name> <operator pos:start="815:33" pos:end="815:33">=</operator> <literal type="number" pos:start="815:35" pos:end="815:35">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="817:13" pos:end="817:36"><expr pos:start="817:13" pos:end="817:35"><name pos:start="817:13" pos:end="817:22"><name pos:start="817:13" pos:end="817:13">v</name><operator pos:start="817:14" pos:end="817:15">-&gt;</operator><name pos:start="817:16" pos:end="817:16">s</name><operator pos:start="817:17" pos:end="817:17">.</operator><name pos:start="817:18" pos:end="817:22">mspel</name></name>          <operator pos:start="817:33" pos:end="817:33">=</operator> <literal type="number" pos:start="817:35" pos:end="817:35">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="819:13" pos:end="819:91"><expr pos:start="819:13" pos:end="819:90"><name pos:start="819:13" pos:end="819:18">status</name>              <operator pos:start="819:33" pos:end="819:33">=</operator> <call pos:start="819:35" pos:end="819:90"><name pos:start="819:35" pos:end="819:51">bitplane_decoding</name><argument_list pos:start="819:52" pos:end="819:90">(<argument pos:start="819:53" pos:end="819:70"><expr pos:start="819:53" pos:end="819:70"><name pos:start="819:53" pos:end="819:70"><name pos:start="819:53" pos:end="819:53">v</name><operator pos:start="819:54" pos:end="819:55">-&gt;</operator><name pos:start="819:56" pos:end="819:70">direct_mb_plane</name></name></expr></argument>, <argument pos:start="819:73" pos:end="819:86"><expr pos:start="819:73" pos:end="819:86"><operator pos:start="819:73" pos:end="819:73">&amp;</operator><name pos:start="819:74" pos:end="819:86"><name pos:start="819:74" pos:end="819:74">v</name><operator pos:start="819:75" pos:end="819:76">-&gt;</operator><name pos:start="819:77" pos:end="819:86">dmb_is_raw</name></name></expr></argument>, <argument pos:start="819:89" pos:end="819:89"><expr pos:start="819:89" pos:end="819:89"><name pos:start="819:89" pos:end="819:89">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="821:13" pos:end="823:26"><if pos:start="821:13" pos:end="823:26">if <condition pos:start="821:16" pos:end="821:27">(<expr pos:start="821:17" pos:end="821:26"><name pos:start="821:17" pos:end="821:22">status</name> <operator pos:start="821:24" pos:end="821:24">&lt;</operator> <literal type="number" pos:start="821:26" pos:end="821:26">0</literal></expr>)</condition><block type="pseudo" pos:start="823:17" pos:end="823:26"><block_content pos:start="823:17" pos:end="823:26">

                <return pos:start="823:17" pos:end="823:26">return <expr pos:start="823:24" pos:end="823:25"><operator pos:start="823:24" pos:end="823:24">-</operator><literal type="number" pos:start="823:25" pos:end="823:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="825:13" pos:end="827:67"><expr pos:start="825:13" pos:end="827:66"><call pos:start="825:13" pos:end="827:66"><name pos:start="825:13" pos:end="825:18">av_log</name><argument_list pos:start="825:19" pos:end="827:66">(<argument pos:start="825:20" pos:end="825:29"><expr pos:start="825:20" pos:end="825:29"><name pos:start="825:20" pos:end="825:29"><name pos:start="825:20" pos:end="825:20">v</name><operator pos:start="825:21" pos:end="825:22">-&gt;</operator><name pos:start="825:23" pos:end="825:23">s</name><operator pos:start="825:24" pos:end="825:24">.</operator><name pos:start="825:25" pos:end="825:29">avctx</name></name></expr></argument>, <argument pos:start="825:32" pos:end="825:43"><expr pos:start="825:32" pos:end="825:43"><name pos:start="825:32" pos:end="825:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="825:46" pos:end="827:44"><expr pos:start="825:46" pos:end="827:44"><literal type="string" pos:start="825:46" pos:end="825:78">"MB Direct Type plane encoding: "</literal>

                   <literal type="string" pos:start="827:20" pos:end="827:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="827:47" pos:end="827:55"><expr pos:start="827:47" pos:end="827:55"><name pos:start="827:47" pos:end="827:52">status</name><operator pos:start="827:53" pos:end="827:54">&gt;&gt;</operator><literal type="number" pos:start="827:55" pos:end="827:55">1</literal></expr></argument>, <argument pos:start="827:58" pos:end="827:65"><expr pos:start="827:58" pos:end="827:65"><name pos:start="827:58" pos:end="827:63">status</name><operator pos:start="827:64" pos:end="827:64">&amp;</operator><literal type="number" pos:start="827:65" pos:end="827:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="829:13" pos:end="829:78"><expr pos:start="829:13" pos:end="829:77"><name pos:start="829:13" pos:end="829:18">status</name> <operator pos:start="829:20" pos:end="829:20">=</operator> <call pos:start="829:22" pos:end="829:77"><name pos:start="829:22" pos:end="829:38">bitplane_decoding</name><argument_list pos:start="829:39" pos:end="829:77">(<argument pos:start="829:40" pos:end="829:56"><expr pos:start="829:40" pos:end="829:56"><name pos:start="829:40" pos:end="829:56"><name pos:start="829:40" pos:end="829:40">v</name><operator pos:start="829:41" pos:end="829:42">-&gt;</operator><name pos:start="829:43" pos:end="829:43">s</name><operator pos:start="829:44" pos:end="829:44">.</operator><name pos:start="829:45" pos:end="829:56">mbskip_table</name></name></expr></argument>, <argument pos:start="829:59" pos:end="829:73"><expr pos:start="829:59" pos:end="829:73"><operator pos:start="829:59" pos:end="829:59">&amp;</operator><name pos:start="829:60" pos:end="829:73"><name pos:start="829:60" pos:end="829:60">v</name><operator pos:start="829:61" pos:end="829:62">-&gt;</operator><name pos:start="829:63" pos:end="829:73">skip_is_raw</name></name></expr></argument>, <argument pos:start="829:76" pos:end="829:76"><expr pos:start="829:76" pos:end="829:76"><name pos:start="829:76" pos:end="829:76">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="831:13" pos:end="833:26"><if pos:start="831:13" pos:end="833:26">if <condition pos:start="831:16" pos:end="831:27">(<expr pos:start="831:17" pos:end="831:26"><name pos:start="831:17" pos:end="831:22">status</name> <operator pos:start="831:24" pos:end="831:24">&lt;</operator> <literal type="number" pos:start="831:26" pos:end="831:26">0</literal></expr>)</condition><block type="pseudo" pos:start="833:17" pos:end="833:26"><block_content pos:start="833:17" pos:end="833:26">

                <return pos:start="833:17" pos:end="833:26">return <expr pos:start="833:24" pos:end="833:25"><operator pos:start="833:24" pos:end="833:24">-</operator><literal type="number" pos:start="833:25" pos:end="833:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="835:13" pos:end="837:67"><expr pos:start="835:13" pos:end="837:66"><call pos:start="835:13" pos:end="837:66"><name pos:start="835:13" pos:end="835:18">av_log</name><argument_list pos:start="835:19" pos:end="837:66">(<argument pos:start="835:20" pos:end="835:29"><expr pos:start="835:20" pos:end="835:29"><name pos:start="835:20" pos:end="835:29"><name pos:start="835:20" pos:end="835:20">v</name><operator pos:start="835:21" pos:end="835:22">-&gt;</operator><name pos:start="835:23" pos:end="835:23">s</name><operator pos:start="835:24" pos:end="835:24">.</operator><name pos:start="835:25" pos:end="835:29">avctx</name></name></expr></argument>, <argument pos:start="835:32" pos:end="835:43"><expr pos:start="835:32" pos:end="835:43"><name pos:start="835:32" pos:end="835:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="835:46" pos:end="837:44"><expr pos:start="835:46" pos:end="837:44"><literal type="string" pos:start="835:46" pos:end="835:71">"MB Skip plane encoding: "</literal>

                   <literal type="string" pos:start="837:20" pos:end="837:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="837:47" pos:end="837:55"><expr pos:start="837:47" pos:end="837:55"><name pos:start="837:47" pos:end="837:52">status</name><operator pos:start="837:53" pos:end="837:54">&gt;&gt;</operator><literal type="number" pos:start="837:55" pos:end="837:55">1</literal></expr></argument>, <argument pos:start="837:58" pos:end="837:65"><expr pos:start="837:58" pos:end="837:65"><name pos:start="837:58" pos:end="837:63">status</name><operator pos:start="837:64" pos:end="837:64">&amp;</operator><literal type="number" pos:start="837:65" pos:end="837:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="839:13" pos:end="839:46"><expr pos:start="839:13" pos:end="839:45"><name pos:start="839:13" pos:end="839:21">mbmodetab</name>       <operator pos:start="839:29" pos:end="839:29">=</operator> <call pos:start="839:31" pos:end="839:45"><name pos:start="839:31" pos:end="839:38">get_bits</name><argument_list pos:start="839:39" pos:end="839:45">(<argument pos:start="839:40" pos:end="839:41"><expr pos:start="839:40" pos:end="839:41"><name pos:start="839:40" pos:end="839:41">gb</name></expr></argument>, <argument pos:start="839:44" pos:end="839:44"><expr pos:start="839:44" pos:end="839:44"><literal type="number" pos:start="839:44" pos:end="839:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="841:13" pos:end="841:73"><expr pos:start="841:13" pos:end="841:72"><name pos:start="841:13" pos:end="841:25"><name pos:start="841:13" pos:end="841:13">v</name><operator pos:start="841:14" pos:end="841:15">-&gt;</operator><name pos:start="841:16" pos:end="841:25">mbmode_vlc</name></name>   <operator pos:start="841:29" pos:end="841:29">=</operator> <operator pos:start="841:31" pos:end="841:31">&amp;</operator><name pos:start="841:32" pos:end="841:72"><name pos:start="841:32" pos:end="841:61">ff_vc1_intfr_non4mv_mbmode_vlc</name><index pos:start="841:62" pos:end="841:72">[<expr pos:start="841:63" pos:end="841:71"><name pos:start="841:63" pos:end="841:71">mbmodetab</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="843:13" pos:end="843:46"><expr pos:start="843:13" pos:end="843:45"><name pos:start="843:13" pos:end="843:18">imvtab</name>          <operator pos:start="843:29" pos:end="843:29">=</operator> <call pos:start="843:31" pos:end="843:45"><name pos:start="843:31" pos:end="843:38">get_bits</name><argument_list pos:start="843:39" pos:end="843:45">(<argument pos:start="843:40" pos:end="843:41"><expr pos:start="843:40" pos:end="843:41"><name pos:start="843:40" pos:end="843:41">gb</name></expr></argument>, <argument pos:start="843:44" pos:end="843:44"><expr pos:start="843:44" pos:end="843:44"><literal type="number" pos:start="843:44" pos:end="843:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="845:13" pos:end="845:62"><expr pos:start="845:13" pos:end="845:61"><name pos:start="845:13" pos:end="845:22"><name pos:start="845:13" pos:end="845:13">v</name><operator pos:start="845:14" pos:end="845:15">-&gt;</operator><name pos:start="845:16" pos:end="845:22">imv_vlc</name></name>      <operator pos:start="845:29" pos:end="845:29">=</operator> <operator pos:start="845:31" pos:end="845:31">&amp;</operator><name pos:start="845:32" pos:end="845:61"><name pos:start="845:32" pos:end="845:53">ff_vc1_1ref_mvdata_vlc</name><index pos:start="845:54" pos:end="845:61">[<expr pos:start="845:55" pos:end="845:60"><name pos:start="845:55" pos:end="845:60">imvtab</name></expr>]</index></name></expr>;</expr_stmt>

            <comment type="line" pos:start="847:13" pos:end="847:60">// interlaced p/b-picture cbpcy range is [1, 63]</comment>

            <expr_stmt pos:start="849:13" pos:end="849:46"><expr pos:start="849:13" pos:end="849:45"><name pos:start="849:13" pos:end="849:19">icbptab</name>         <operator pos:start="849:29" pos:end="849:29">=</operator> <call pos:start="849:31" pos:end="849:45"><name pos:start="849:31" pos:end="849:38">get_bits</name><argument_list pos:start="849:39" pos:end="849:45">(<argument pos:start="849:40" pos:end="849:41"><expr pos:start="849:40" pos:end="849:41"><name pos:start="849:40" pos:end="849:41">gb</name></expr></argument>, <argument pos:start="849:44" pos:end="849:44"><expr pos:start="849:44" pos:end="849:44"><literal type="number" pos:start="849:44" pos:end="849:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="851:13" pos:end="851:58"><expr pos:start="851:13" pos:end="851:57"><name pos:start="851:13" pos:end="851:24"><name pos:start="851:13" pos:end="851:13">v</name><operator pos:start="851:14" pos:end="851:15">-&gt;</operator><name pos:start="851:16" pos:end="851:24">cbpcy_vlc</name></name>    <operator pos:start="851:29" pos:end="851:29">=</operator> <operator pos:start="851:31" pos:end="851:31">&amp;</operator><name pos:start="851:32" pos:end="851:57"><name pos:start="851:32" pos:end="851:48">ff_vc1_icbpcy_vlc</name><index pos:start="851:49" pos:end="851:57">[<expr pos:start="851:50" pos:end="851:56"><name pos:start="851:50" pos:end="851:56">icbptab</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="853:13" pos:end="853:46"><expr pos:start="853:13" pos:end="853:45"><name pos:start="853:13" pos:end="853:22">twomvbptab</name>      <operator pos:start="853:29" pos:end="853:29">=</operator> <call pos:start="853:31" pos:end="853:45"><name pos:start="853:31" pos:end="853:38">get_bits</name><argument_list pos:start="853:39" pos:end="853:45">(<argument pos:start="853:40" pos:end="853:41"><expr pos:start="853:40" pos:end="853:41"><name pos:start="853:40" pos:end="853:41">gb</name></expr></argument>, <argument pos:start="853:44" pos:end="853:44"><expr pos:start="853:44" pos:end="853:44"><literal type="number" pos:start="853:44" pos:end="853:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="855:13" pos:end="855:72"><expr pos:start="855:13" pos:end="855:71"><name pos:start="855:13" pos:end="855:26"><name pos:start="855:13" pos:end="855:13">v</name><operator pos:start="855:14" pos:end="855:15">-&gt;</operator><name pos:start="855:16" pos:end="855:26">twomvbp_vlc</name></name>  <operator pos:start="855:29" pos:end="855:29">=</operator> <operator pos:start="855:31" pos:end="855:31">&amp;</operator><name pos:start="855:32" pos:end="855:71"><name pos:start="855:32" pos:end="855:59">ff_vc1_2mv_block_pattern_vlc</name><index pos:start="855:60" pos:end="855:71">[<expr pos:start="855:61" pos:end="855:70"><name pos:start="855:61" pos:end="855:70">twomvbptab</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="857:13" pos:end="857:46"><expr pos:start="857:13" pos:end="857:45"><name pos:start="857:13" pos:end="857:23">fourmvbptab</name>     <operator pos:start="857:29" pos:end="857:29">=</operator> <call pos:start="857:31" pos:end="857:45"><name pos:start="857:31" pos:end="857:38">get_bits</name><argument_list pos:start="857:39" pos:end="857:45">(<argument pos:start="857:40" pos:end="857:41"><expr pos:start="857:40" pos:end="857:41"><name pos:start="857:40" pos:end="857:41">gb</name></expr></argument>, <argument pos:start="857:44" pos:end="857:44"><expr pos:start="857:44" pos:end="857:44"><literal type="number" pos:start="857:44" pos:end="857:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="859:13" pos:end="859:73"><expr pos:start="859:13" pos:end="859:72"><name pos:start="859:13" pos:end="859:27"><name pos:start="859:13" pos:end="859:13">v</name><operator pos:start="859:14" pos:end="859:15">-&gt;</operator><name pos:start="859:16" pos:end="859:27">fourmvbp_vlc</name></name> <operator pos:start="859:29" pos:end="859:29">=</operator> <operator pos:start="859:31" pos:end="859:31">&amp;</operator><name pos:start="859:32" pos:end="859:72"><name pos:start="859:32" pos:end="859:59">ff_vc1_4mv_block_pattern_vlc</name><index pos:start="859:60" pos:end="859:72">[<expr pos:start="859:61" pos:end="859:71"><name pos:start="859:61" pos:end="859:71">fourmvbptab</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="861:11" pos:end="895:9">else <block pos:start="861:16" pos:end="895:9">{<block_content pos:start="863:13" pos:end="893:64">

            <expr_stmt pos:start="863:13" pos:end="863:89"><expr pos:start="863:13" pos:end="863:88"><name pos:start="863:13" pos:end="863:22"><name pos:start="863:13" pos:end="863:13">v</name><operator pos:start="863:14" pos:end="863:15">-&gt;</operator><name pos:start="863:16" pos:end="863:22">mv_mode</name></name>          <operator pos:start="863:33" pos:end="863:33">=</operator> <ternary pos:start="863:35" pos:end="863:88"><condition pos:start="863:35" pos:end="863:49"><expr pos:start="863:35" pos:end="863:47"><call pos:start="863:35" pos:end="863:47"><name pos:start="863:35" pos:end="863:43">get_bits1</name><argument_list pos:start="863:44" pos:end="863:47">(<argument pos:start="863:45" pos:end="863:46"><expr pos:start="863:45" pos:end="863:46"><name pos:start="863:45" pos:end="863:46">gb</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="863:51" pos:end="863:62"> <expr pos:start="863:51" pos:end="863:62"><name pos:start="863:51" pos:end="863:62">MV_PMODE_1MV</name></expr> </then><else pos:start="863:64" pos:end="863:88">: <expr pos:start="863:66" pos:end="863:88"><name pos:start="863:66" pos:end="863:88">MV_PMODE_1MV_HPEL_BILIN</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="865:13" pos:end="865:54"><expr pos:start="865:13" pos:end="865:53"><name pos:start="865:13" pos:end="865:22"><name pos:start="865:13" pos:end="865:13">v</name><operator pos:start="865:14" pos:end="865:15">-&gt;</operator><name pos:start="865:16" pos:end="865:22">qs_last</name></name>          <operator pos:start="865:33" pos:end="865:33">=</operator> <name pos:start="865:35" pos:end="865:53"><name pos:start="865:35" pos:end="865:35">v</name><operator pos:start="865:36" pos:end="865:37">-&gt;</operator><name pos:start="865:38" pos:end="865:38">s</name><operator pos:start="865:39" pos:end="865:39">.</operator><name pos:start="865:40" pos:end="865:53">quarter_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="867:13" pos:end="867:63"><expr pos:start="867:13" pos:end="867:62"><name pos:start="867:13" pos:end="867:31"><name pos:start="867:13" pos:end="867:13">v</name><operator pos:start="867:14" pos:end="867:15">-&gt;</operator><name pos:start="867:16" pos:end="867:16">s</name><operator pos:start="867:17" pos:end="867:17">.</operator><name pos:start="867:18" pos:end="867:31">quarter_sample</name></name> <operator pos:start="867:33" pos:end="867:33">=</operator> <operator pos:start="867:35" pos:end="867:35">(</operator><name pos:start="867:36" pos:end="867:45"><name pos:start="867:36" pos:end="867:36">v</name><operator pos:start="867:37" pos:end="867:38">-&gt;</operator><name pos:start="867:39" pos:end="867:45">mv_mode</name></name> <operator pos:start="867:47" pos:end="867:48">==</operator> <name pos:start="867:50" pos:end="867:61">MV_PMODE_1MV</name><operator pos:start="867:62" pos:end="867:62">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="869:13" pos:end="869:54"><expr pos:start="869:13" pos:end="869:53"><name pos:start="869:13" pos:end="869:22"><name pos:start="869:13" pos:end="869:13">v</name><operator pos:start="869:14" pos:end="869:15">-&gt;</operator><name pos:start="869:16" pos:end="869:16">s</name><operator pos:start="869:17" pos:end="869:17">.</operator><name pos:start="869:18" pos:end="869:22">mspel</name></name>          <operator pos:start="869:33" pos:end="869:33">=</operator> <name pos:start="869:35" pos:end="869:53"><name pos:start="869:35" pos:end="869:35">v</name><operator pos:start="869:36" pos:end="869:37">-&gt;</operator><name pos:start="869:38" pos:end="869:38">s</name><operator pos:start="869:39" pos:end="869:39">.</operator><name pos:start="869:40" pos:end="869:53">quarter_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="871:13" pos:end="871:91"><expr pos:start="871:13" pos:end="871:90"><name pos:start="871:13" pos:end="871:18">status</name>              <operator pos:start="871:33" pos:end="871:33">=</operator> <call pos:start="871:35" pos:end="871:90"><name pos:start="871:35" pos:end="871:51">bitplane_decoding</name><argument_list pos:start="871:52" pos:end="871:90">(<argument pos:start="871:53" pos:end="871:70"><expr pos:start="871:53" pos:end="871:70"><name pos:start="871:53" pos:end="871:70"><name pos:start="871:53" pos:end="871:53">v</name><operator pos:start="871:54" pos:end="871:55">-&gt;</operator><name pos:start="871:56" pos:end="871:70">direct_mb_plane</name></name></expr></argument>, <argument pos:start="871:73" pos:end="871:86"><expr pos:start="871:73" pos:end="871:86"><operator pos:start="871:73" pos:end="871:73">&amp;</operator><name pos:start="871:74" pos:end="871:86"><name pos:start="871:74" pos:end="871:74">v</name><operator pos:start="871:75" pos:end="871:76">-&gt;</operator><name pos:start="871:77" pos:end="871:86">dmb_is_raw</name></name></expr></argument>, <argument pos:start="871:89" pos:end="871:89"><expr pos:start="871:89" pos:end="871:89"><name pos:start="871:89" pos:end="871:89">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="873:13" pos:end="875:26"><if pos:start="873:13" pos:end="875:26">if <condition pos:start="873:16" pos:end="873:27">(<expr pos:start="873:17" pos:end="873:26"><name pos:start="873:17" pos:end="873:22">status</name> <operator pos:start="873:24" pos:end="873:24">&lt;</operator> <literal type="number" pos:start="873:26" pos:end="873:26">0</literal></expr>)</condition><block type="pseudo" pos:start="875:17" pos:end="875:26"><block_content pos:start="875:17" pos:end="875:26">

                <return pos:start="875:17" pos:end="875:26">return <expr pos:start="875:24" pos:end="875:25"><operator pos:start="875:24" pos:end="875:24">-</operator><literal type="number" pos:start="875:25" pos:end="875:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="877:13" pos:end="879:67"><expr pos:start="877:13" pos:end="879:66"><call pos:start="877:13" pos:end="879:66"><name pos:start="877:13" pos:end="877:18">av_log</name><argument_list pos:start="877:19" pos:end="879:66">(<argument pos:start="877:20" pos:end="877:29"><expr pos:start="877:20" pos:end="877:29"><name pos:start="877:20" pos:end="877:29"><name pos:start="877:20" pos:end="877:20">v</name><operator pos:start="877:21" pos:end="877:22">-&gt;</operator><name pos:start="877:23" pos:end="877:23">s</name><operator pos:start="877:24" pos:end="877:24">.</operator><name pos:start="877:25" pos:end="877:29">avctx</name></name></expr></argument>, <argument pos:start="877:32" pos:end="877:43"><expr pos:start="877:32" pos:end="877:43"><name pos:start="877:32" pos:end="877:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="877:46" pos:end="879:44"><expr pos:start="877:46" pos:end="879:44"><literal type="string" pos:start="877:46" pos:end="877:78">"MB Direct Type plane encoding: "</literal>

                   <literal type="string" pos:start="879:20" pos:end="879:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="879:47" pos:end="879:55"><expr pos:start="879:47" pos:end="879:55"><name pos:start="879:47" pos:end="879:52">status</name><operator pos:start="879:53" pos:end="879:54">&gt;&gt;</operator><literal type="number" pos:start="879:55" pos:end="879:55">1</literal></expr></argument>, <argument pos:start="879:58" pos:end="879:65"><expr pos:start="879:58" pos:end="879:65"><name pos:start="879:58" pos:end="879:63">status</name><operator pos:start="879:64" pos:end="879:64">&amp;</operator><literal type="number" pos:start="879:65" pos:end="879:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="881:13" pos:end="881:78"><expr pos:start="881:13" pos:end="881:77"><name pos:start="881:13" pos:end="881:18">status</name> <operator pos:start="881:20" pos:end="881:20">=</operator> <call pos:start="881:22" pos:end="881:77"><name pos:start="881:22" pos:end="881:38">bitplane_decoding</name><argument_list pos:start="881:39" pos:end="881:77">(<argument pos:start="881:40" pos:end="881:56"><expr pos:start="881:40" pos:end="881:56"><name pos:start="881:40" pos:end="881:56"><name pos:start="881:40" pos:end="881:40">v</name><operator pos:start="881:41" pos:end="881:42">-&gt;</operator><name pos:start="881:43" pos:end="881:43">s</name><operator pos:start="881:44" pos:end="881:44">.</operator><name pos:start="881:45" pos:end="881:56">mbskip_table</name></name></expr></argument>, <argument pos:start="881:59" pos:end="881:73"><expr pos:start="881:59" pos:end="881:73"><operator pos:start="881:59" pos:end="881:59">&amp;</operator><name pos:start="881:60" pos:end="881:73"><name pos:start="881:60" pos:end="881:60">v</name><operator pos:start="881:61" pos:end="881:62">-&gt;</operator><name pos:start="881:63" pos:end="881:73">skip_is_raw</name></name></expr></argument>, <argument pos:start="881:76" pos:end="881:76"><expr pos:start="881:76" pos:end="881:76"><name pos:start="881:76" pos:end="881:76">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="883:13" pos:end="885:26"><if pos:start="883:13" pos:end="885:26">if <condition pos:start="883:16" pos:end="883:27">(<expr pos:start="883:17" pos:end="883:26"><name pos:start="883:17" pos:end="883:22">status</name> <operator pos:start="883:24" pos:end="883:24">&lt;</operator> <literal type="number" pos:start="883:26" pos:end="883:26">0</literal></expr>)</condition><block type="pseudo" pos:start="885:17" pos:end="885:26"><block_content pos:start="885:17" pos:end="885:26">

                <return pos:start="885:17" pos:end="885:26">return <expr pos:start="885:24" pos:end="885:25"><operator pos:start="885:24" pos:end="885:24">-</operator><literal type="number" pos:start="885:25" pos:end="885:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="887:13" pos:end="889:67"><expr pos:start="887:13" pos:end="889:66"><call pos:start="887:13" pos:end="889:66"><name pos:start="887:13" pos:end="887:18">av_log</name><argument_list pos:start="887:19" pos:end="889:66">(<argument pos:start="887:20" pos:end="887:29"><expr pos:start="887:20" pos:end="887:29"><name pos:start="887:20" pos:end="887:29"><name pos:start="887:20" pos:end="887:20">v</name><operator pos:start="887:21" pos:end="887:22">-&gt;</operator><name pos:start="887:23" pos:end="887:23">s</name><operator pos:start="887:24" pos:end="887:24">.</operator><name pos:start="887:25" pos:end="887:29">avctx</name></name></expr></argument>, <argument pos:start="887:32" pos:end="887:43"><expr pos:start="887:32" pos:end="887:43"><name pos:start="887:32" pos:end="887:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="887:46" pos:end="889:44"><expr pos:start="887:46" pos:end="889:44"><literal type="string" pos:start="887:46" pos:end="887:71">"MB Skip plane encoding: "</literal>

                   <literal type="string" pos:start="889:20" pos:end="889:44">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="889:47" pos:end="889:55"><expr pos:start="889:47" pos:end="889:55"><name pos:start="889:47" pos:end="889:52">status</name><operator pos:start="889:53" pos:end="889:54">&gt;&gt;</operator><literal type="number" pos:start="889:55" pos:end="889:55">1</literal></expr></argument>, <argument pos:start="889:58" pos:end="889:65"><expr pos:start="889:58" pos:end="889:65"><name pos:start="889:58" pos:end="889:63">status</name><operator pos:start="889:64" pos:end="889:64">&amp;</operator><literal type="number" pos:start="889:65" pos:end="889:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="891:13" pos:end="891:50"><expr pos:start="891:13" pos:end="891:49"><name pos:start="891:13" pos:end="891:31"><name pos:start="891:13" pos:end="891:13">v</name><operator pos:start="891:14" pos:end="891:15">-&gt;</operator><name pos:start="891:16" pos:end="891:16">s</name><operator pos:start="891:17" pos:end="891:17">.</operator><name pos:start="891:18" pos:end="891:31">mv_table_index</name></name> <operator pos:start="891:33" pos:end="891:33">=</operator> <call pos:start="891:35" pos:end="891:49"><name pos:start="891:35" pos:end="891:42">get_bits</name><argument_list pos:start="891:43" pos:end="891:49">(<argument pos:start="891:44" pos:end="891:45"><expr pos:start="891:44" pos:end="891:45"><name pos:start="891:44" pos:end="891:45">gb</name></expr></argument>, <argument pos:start="891:48" pos:end="891:48"><expr pos:start="891:48" pos:end="891:48"><literal type="number" pos:start="891:48" pos:end="891:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="893:13" pos:end="893:64"><expr pos:start="893:13" pos:end="893:63"><name pos:start="893:13" pos:end="893:24"><name pos:start="893:13" pos:end="893:13">v</name><operator pos:start="893:14" pos:end="893:15">-&gt;</operator><name pos:start="893:16" pos:end="893:24">cbpcy_vlc</name></name> <operator pos:start="893:26" pos:end="893:26">=</operator> <operator pos:start="893:28" pos:end="893:28">&amp;</operator><name pos:start="893:29" pos:end="893:63"><name pos:start="893:29" pos:end="893:46">ff_vc1_cbpcy_p_vlc</name><index pos:start="893:47" pos:end="893:63">[<expr pos:start="893:48" pos:end="893:62"><call pos:start="893:48" pos:end="893:62"><name pos:start="893:48" pos:end="893:55">get_bits</name><argument_list pos:start="893:56" pos:end="893:62">(<argument pos:start="893:57" pos:end="893:58"><expr pos:start="893:57" pos:end="893:58"><name pos:start="893:57" pos:end="893:58">gb</name></expr></argument>, <argument pos:start="893:61" pos:end="893:61"><expr pos:start="893:61" pos:end="893:61"><literal type="number" pos:start="893:61" pos:end="893:61">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="899:9" pos:end="905:9"><if pos:start="899:9" pos:end="905:9">if <condition pos:start="899:12" pos:end="899:22">(<expr pos:start="899:13" pos:end="899:21"><name pos:start="899:13" pos:end="899:21"><name pos:start="899:13" pos:end="899:13">v</name><operator pos:start="899:14" pos:end="899:15">-&gt;</operator><name pos:start="899:16" pos:end="899:21">dquant</name></name></expr>)</condition> <block pos:start="899:24" pos:end="905:9">{<block_content pos:start="901:13" pos:end="903:35">

            <expr_stmt pos:start="901:13" pos:end="901:66"><expr pos:start="901:13" pos:end="901:65"><call pos:start="901:13" pos:end="901:65"><name pos:start="901:13" pos:end="901:18">av_log</name><argument_list pos:start="901:19" pos:end="901:65">(<argument pos:start="901:20" pos:end="901:29"><expr pos:start="901:20" pos:end="901:29"><name pos:start="901:20" pos:end="901:29"><name pos:start="901:20" pos:end="901:20">v</name><operator pos:start="901:21" pos:end="901:22">-&gt;</operator><name pos:start="901:23" pos:end="901:23">s</name><operator pos:start="901:24" pos:end="901:24">.</operator><name pos:start="901:25" pos:end="901:29">avctx</name></name></expr></argument>, <argument pos:start="901:32" pos:end="901:43"><expr pos:start="901:32" pos:end="901:43"><name pos:start="901:32" pos:end="901:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="901:46" pos:end="901:64"><expr pos:start="901:46" pos:end="901:64"><literal type="string" pos:start="901:46" pos:end="901:64">"VOP DQuant info\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="903:13" pos:end="903:35"><expr pos:start="903:13" pos:end="903:34"><call pos:start="903:13" pos:end="903:34"><name pos:start="903:13" pos:end="903:31">vop_dquant_decoding</name><argument_list pos:start="903:32" pos:end="903:34">(<argument pos:start="903:33" pos:end="903:33"><expr pos:start="903:33" pos:end="903:33"><name pos:start="903:33" pos:end="903:33">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="909:9" pos:end="909:21"><expr pos:start="909:9" pos:end="909:20"><name pos:start="909:9" pos:end="909:16"><name pos:start="909:9" pos:end="909:9">v</name><operator pos:start="909:10" pos:end="909:11">-&gt;</operator><name pos:start="909:12" pos:end="909:16">ttfrm</name></name> <operator pos:start="909:18" pos:end="909:18">=</operator> <literal type="number" pos:start="909:20" pos:end="909:20">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="911:9" pos:end="927:9"><if pos:start="911:9" pos:end="921:9">if <condition pos:start="911:12" pos:end="911:27">(<expr pos:start="911:13" pos:end="911:26"><name pos:start="911:13" pos:end="911:26"><name pos:start="911:13" pos:end="911:13">v</name><operator pos:start="911:14" pos:end="911:15">-&gt;</operator><name pos:start="911:16" pos:end="911:26">vstransform</name></name></expr>)</condition> <block pos:start="911:29" pos:end="921:9">{<block_content pos:start="913:13" pos:end="919:13">

            <expr_stmt pos:start="913:13" pos:end="913:37"><expr pos:start="913:13" pos:end="913:36"><name pos:start="913:13" pos:end="913:20"><name pos:start="913:13" pos:end="913:13">v</name><operator pos:start="913:14" pos:end="913:15">-&gt;</operator><name pos:start="913:16" pos:end="913:20">ttmbf</name></name> <operator pos:start="913:22" pos:end="913:22">=</operator> <call pos:start="913:24" pos:end="913:36"><name pos:start="913:24" pos:end="913:32">get_bits1</name><argument_list pos:start="913:33" pos:end="913:36">(<argument pos:start="913:34" pos:end="913:35"><expr pos:start="913:34" pos:end="913:35"><name pos:start="913:34" pos:end="913:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="915:13" pos:end="919:13"><if pos:start="915:13" pos:end="919:13">if <condition pos:start="915:16" pos:end="915:25">(<expr pos:start="915:17" pos:end="915:24"><name pos:start="915:17" pos:end="915:24"><name pos:start="915:17" pos:end="915:17">v</name><operator pos:start="915:18" pos:end="915:19">-&gt;</operator><name pos:start="915:20" pos:end="915:24">ttmbf</name></name></expr>)</condition> <block pos:start="915:27" pos:end="919:13">{<block_content pos:start="917:17" pos:end="917:63">

                <expr_stmt pos:start="917:17" pos:end="917:63"><expr pos:start="917:17" pos:end="917:62"><name pos:start="917:17" pos:end="917:24"><name pos:start="917:17" pos:end="917:17">v</name><operator pos:start="917:18" pos:end="917:19">-&gt;</operator><name pos:start="917:20" pos:end="917:24">ttfrm</name></name> <operator pos:start="917:26" pos:end="917:26">=</operator> <name pos:start="917:28" pos:end="917:62"><name pos:start="917:28" pos:end="917:45">ff_vc1_ttfrm_to_tt</name><index pos:start="917:46" pos:end="917:62">[<expr pos:start="917:47" pos:end="917:61"><call pos:start="917:47" pos:end="917:61"><name pos:start="917:47" pos:end="917:54">get_bits</name><argument_list pos:start="917:55" pos:end="917:61">(<argument pos:start="917:56" pos:end="917:57"><expr pos:start="917:56" pos:end="917:57"><name pos:start="917:56" pos:end="917:57">gb</name></expr></argument>, <argument pos:start="917:60" pos:end="917:60"><expr pos:start="917:60" pos:end="917:60"><literal type="number" pos:start="917:60" pos:end="917:60">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="921:11" pos:end="927:9">else <block pos:start="921:16" pos:end="927:9">{<block_content pos:start="923:13" pos:end="925:30">

            <expr_stmt pos:start="923:13" pos:end="923:25"><expr pos:start="923:13" pos:end="923:24"><name pos:start="923:13" pos:end="923:20"><name pos:start="923:13" pos:end="923:13">v</name><operator pos:start="923:14" pos:end="923:15">-&gt;</operator><name pos:start="923:16" pos:end="923:20">ttmbf</name></name> <operator pos:start="923:22" pos:end="923:22">=</operator> <literal type="number" pos:start="923:24" pos:end="923:24">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="925:13" pos:end="925:30"><expr pos:start="925:13" pos:end="925:29"><name pos:start="925:13" pos:end="925:20"><name pos:start="925:13" pos:end="925:13">v</name><operator pos:start="925:14" pos:end="925:15">-&gt;</operator><name pos:start="925:16" pos:end="925:20">ttfrm</name></name> <operator pos:start="925:22" pos:end="925:22">=</operator> <name pos:start="925:24" pos:end="925:29">TT_8X8</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="929:9" pos:end="929:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="935:5" pos:end="941:5"><if pos:start="935:5" pos:end="941:5">if <condition pos:start="935:8" pos:end="935:54">(<expr pos:start="935:9" pos:end="935:53"><name pos:start="935:9" pos:end="935:14"><name pos:start="935:9" pos:end="935:9">v</name><operator pos:start="935:10" pos:end="935:11">-&gt;</operator><name pos:start="935:12" pos:end="935:14">fcm</name></name> <operator pos:start="935:16" pos:end="935:17">!=</operator> <name pos:start="935:19" pos:end="935:29">PROGRESSIVE</name> <operator pos:start="935:31" pos:end="935:32">&amp;&amp;</operator> <operator pos:start="935:34" pos:end="935:34">!</operator><name pos:start="935:35" pos:end="935:53"><name pos:start="935:35" pos:end="935:35">v</name><operator pos:start="935:36" pos:end="935:37">-&gt;</operator><name pos:start="935:38" pos:end="935:38">s</name><operator pos:start="935:39" pos:end="935:39">.</operator><name pos:start="935:40" pos:end="935:53">quarter_sample</name></name></expr>)</condition> <block pos:start="935:56" pos:end="941:5">{<block_content pos:start="937:9" pos:end="939:25">

        <expr_stmt pos:start="937:9" pos:end="937:25"><expr pos:start="937:9" pos:end="937:24"><name pos:start="937:9" pos:end="937:18"><name pos:start="937:9" pos:end="937:9">v</name><operator pos:start="937:10" pos:end="937:11">-&gt;</operator><name pos:start="937:12" pos:end="937:18">range_x</name></name> <operator pos:start="937:20" pos:end="937:22">&lt;&lt;=</operator> <literal type="number" pos:start="937:24" pos:end="937:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="939:9" pos:end="939:25"><expr pos:start="939:9" pos:end="939:24"><name pos:start="939:9" pos:end="939:18"><name pos:start="939:9" pos:end="939:9">v</name><operator pos:start="939:10" pos:end="939:11">-&gt;</operator><name pos:start="939:12" pos:end="939:18">range_y</name></name> <operator pos:start="939:20" pos:end="939:22">&lt;&lt;=</operator> <literal type="number" pos:start="939:24" pos:end="939:24">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="945:5" pos:end="945:19">/* AC Syntax */</comment>

    <expr_stmt pos:start="947:5" pos:end="947:40"><expr pos:start="947:5" pos:end="947:39"><name pos:start="947:5" pos:end="947:23"><name pos:start="947:5" pos:end="947:5">v</name><operator pos:start="947:6" pos:end="947:7">-&gt;</operator><name pos:start="947:8" pos:end="947:23">c_ac_table_index</name></name> <operator pos:start="947:25" pos:end="947:25">=</operator> <call pos:start="947:27" pos:end="947:39"><name pos:start="947:27" pos:end="947:35">decode012</name><argument_list pos:start="947:36" pos:end="947:39">(<argument pos:start="947:37" pos:end="947:38"><expr pos:start="947:37" pos:end="947:38"><name pos:start="947:37" pos:end="947:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="949:5" pos:end="953:5"><if pos:start="949:5" pos:end="953:5">if <condition pos:start="949:8" pos:end="949:84">(<expr pos:start="949:9" pos:end="949:83"><name pos:start="949:9" pos:end="949:22"><name pos:start="949:9" pos:end="949:9">v</name><operator pos:start="949:10" pos:end="949:11">-&gt;</operator><name pos:start="949:12" pos:end="949:12">s</name><operator pos:start="949:13" pos:end="949:13">.</operator><name pos:start="949:14" pos:end="949:22">pict_type</name></name> <operator pos:start="949:24" pos:end="949:25">==</operator> <name pos:start="949:27" pos:end="949:43">AV_PICTURE_TYPE_I</name> <operator pos:start="949:45" pos:end="949:46">||</operator> <name pos:start="949:48" pos:end="949:61"><name pos:start="949:48" pos:end="949:48">v</name><operator pos:start="949:49" pos:end="949:50">-&gt;</operator><name pos:start="949:51" pos:end="949:51">s</name><operator pos:start="949:52" pos:end="949:52">.</operator><name pos:start="949:53" pos:end="949:61">pict_type</name></name> <operator pos:start="949:63" pos:end="949:64">==</operator> <name pos:start="949:66" pos:end="949:83">AV_PICTURE_TYPE_BI</name></expr>)</condition> <block pos:start="949:86" pos:end="953:5">{<block_content pos:start="951:9" pos:end="951:44">

        <expr_stmt pos:start="951:9" pos:end="951:44"><expr pos:start="951:9" pos:end="951:43"><name pos:start="951:9" pos:end="951:27"><name pos:start="951:9" pos:end="951:9">v</name><operator pos:start="951:10" pos:end="951:11">-&gt;</operator><name pos:start="951:12" pos:end="951:27">y_ac_table_index</name></name> <operator pos:start="951:29" pos:end="951:29">=</operator> <call pos:start="951:31" pos:end="951:43"><name pos:start="951:31" pos:end="951:39">decode012</name><argument_list pos:start="951:40" pos:end="951:43">(<argument pos:start="951:41" pos:end="951:42"><expr pos:start="951:41" pos:end="951:42"><name pos:start="951:41" pos:end="951:42">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="955:5" pos:end="955:19">/* DC Syntax */</comment>

    <expr_stmt pos:start="957:5" pos:end="957:40"><expr pos:start="957:5" pos:end="957:39"><name pos:start="957:5" pos:end="957:23"><name pos:start="957:5" pos:end="957:5">v</name><operator pos:start="957:6" pos:end="957:7">-&gt;</operator><name pos:start="957:8" pos:end="957:8">s</name><operator pos:start="957:9" pos:end="957:9">.</operator><name pos:start="957:10" pos:end="957:23">dc_table_index</name></name> <operator pos:start="957:25" pos:end="957:25">=</operator> <call pos:start="957:27" pos:end="957:39"><name pos:start="957:27" pos:end="957:35">get_bits1</name><argument_list pos:start="957:36" pos:end="957:39">(<argument pos:start="957:37" pos:end="957:38"><expr pos:start="957:37" pos:end="957:38"><name pos:start="957:37" pos:end="957:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="959:5" pos:end="967:5"><if pos:start="959:5" pos:end="967:5">if <condition pos:start="959:8" pos:end="961:21">(<expr pos:start="959:9" pos:end="961:20"><operator pos:start="959:9" pos:end="959:9">(</operator><name pos:start="959:10" pos:end="959:23"><name pos:start="959:10" pos:end="959:10">v</name><operator pos:start="959:11" pos:end="959:12">-&gt;</operator><name pos:start="959:13" pos:end="959:13">s</name><operator pos:start="959:14" pos:end="959:14">.</operator><name pos:start="959:15" pos:end="959:23">pict_type</name></name> <operator pos:start="959:25" pos:end="959:26">==</operator> <name pos:start="959:28" pos:end="959:44">AV_PICTURE_TYPE_I</name> <operator pos:start="959:46" pos:end="959:47">||</operator> <name pos:start="959:49" pos:end="959:62"><name pos:start="959:49" pos:end="959:49">v</name><operator pos:start="959:50" pos:end="959:51">-&gt;</operator><name pos:start="959:52" pos:end="959:52">s</name><operator pos:start="959:53" pos:end="959:53">.</operator><name pos:start="959:54" pos:end="959:62">pict_type</name></name> <operator pos:start="959:64" pos:end="959:65">==</operator> <name pos:start="959:67" pos:end="959:84">AV_PICTURE_TYPE_BI</name><operator pos:start="959:85" pos:end="959:85">)</operator>

        <operator pos:start="961:9" pos:end="961:10">&amp;&amp;</operator> <name pos:start="961:12" pos:end="961:20"><name pos:start="961:12" pos:end="961:12">v</name><operator pos:start="961:13" pos:end="961:14">-&gt;</operator><name pos:start="961:15" pos:end="961:20">dquant</name></name></expr>)</condition> <block pos:start="961:23" pos:end="967:5">{<block_content pos:start="963:9" pos:end="965:31">

        <expr_stmt pos:start="963:9" pos:end="963:62"><expr pos:start="963:9" pos:end="963:61"><call pos:start="963:9" pos:end="963:61"><name pos:start="963:9" pos:end="963:14">av_log</name><argument_list pos:start="963:15" pos:end="963:61">(<argument pos:start="963:16" pos:end="963:25"><expr pos:start="963:16" pos:end="963:25"><name pos:start="963:16" pos:end="963:25"><name pos:start="963:16" pos:end="963:16">v</name><operator pos:start="963:17" pos:end="963:18">-&gt;</operator><name pos:start="963:19" pos:end="963:19">s</name><operator pos:start="963:20" pos:end="963:20">.</operator><name pos:start="963:21" pos:end="963:25">avctx</name></name></expr></argument>, <argument pos:start="963:28" pos:end="963:39"><expr pos:start="963:28" pos:end="963:39"><name pos:start="963:28" pos:end="963:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="963:42" pos:end="963:60"><expr pos:start="963:42" pos:end="963:60"><literal type="string" pos:start="963:42" pos:end="963:60">"VOP DQuant info\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="965:9" pos:end="965:31"><expr pos:start="965:9" pos:end="965:30"><call pos:start="965:9" pos:end="965:30"><name pos:start="965:9" pos:end="965:27">vop_dquant_decoding</name><argument_list pos:start="965:28" pos:end="965:30">(<argument pos:start="965:29" pos:end="965:29"><expr pos:start="965:29" pos:end="965:29"><name pos:start="965:29" pos:end="965:29">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="971:5" pos:end="971:19"><expr pos:start="971:5" pos:end="971:18"><name pos:start="971:5" pos:end="971:14"><name pos:start="971:5" pos:end="971:5">v</name><operator pos:start="971:6" pos:end="971:7">-&gt;</operator><name pos:start="971:8" pos:end="971:14">bi_type</name></name> <operator pos:start="971:16" pos:end="971:16">=</operator> <literal type="number" pos:start="971:18" pos:end="971:18">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="973:5" pos:end="979:5"><if pos:start="973:5" pos:end="979:5">if <condition pos:start="973:8" pos:end="973:45">(<expr pos:start="973:9" pos:end="973:44"><name pos:start="973:9" pos:end="973:22"><name pos:start="973:9" pos:end="973:9">v</name><operator pos:start="973:10" pos:end="973:11">-&gt;</operator><name pos:start="973:12" pos:end="973:12">s</name><operator pos:start="973:13" pos:end="973:13">.</operator><name pos:start="973:14" pos:end="973:22">pict_type</name></name> <operator pos:start="973:24" pos:end="973:25">==</operator> <name pos:start="973:27" pos:end="973:44">AV_PICTURE_TYPE_BI</name></expr>)</condition> <block pos:start="973:47" pos:end="979:5">{<block_content pos:start="975:9" pos:end="977:23">

        <expr_stmt pos:start="975:9" pos:end="975:43"><expr pos:start="975:9" pos:end="975:42"><name pos:start="975:9" pos:end="975:22"><name pos:start="975:9" pos:end="975:9">v</name><operator pos:start="975:10" pos:end="975:11">-&gt;</operator><name pos:start="975:12" pos:end="975:12">s</name><operator pos:start="975:13" pos:end="975:13">.</operator><name pos:start="975:14" pos:end="975:22">pict_type</name></name> <operator pos:start="975:24" pos:end="975:24">=</operator> <name pos:start="975:26" pos:end="975:42">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt>

        <expr_stmt pos:start="977:9" pos:end="977:23"><expr pos:start="977:9" pos:end="977:22"><name pos:start="977:9" pos:end="977:18"><name pos:start="977:9" pos:end="977:9">v</name><operator pos:start="977:10" pos:end="977:11">-&gt;</operator><name pos:start="977:12" pos:end="977:18">bi_type</name></name> <operator pos:start="977:20" pos:end="977:20">=</operator> <literal type="number" pos:start="977:22" pos:end="977:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="981:5" pos:end="981:13">return <expr pos:start="981:12" pos:end="981:12"><literal type="number" pos:start="981:12" pos:end="981:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
