<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19997.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:6">hwaddr</name></type> <name pos:start="1:8" pos:end="1:35">s390_cpu_get_phys_page_debug</name><parameter_list pos:start="1:36" pos:end="1:62">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:44">CPUState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">cs</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:61"><decl pos:start="1:51" pos:end="1:61"><type pos:start="1:51" pos:end="1:61"><name pos:start="1:51" pos:end="1:55">vaddr</name></type> <name pos:start="1:57" pos:end="1:61">vaddr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:17">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">S390CPU</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">cpu</name> <init pos:start="5:18" pos:end="5:31">= <expr pos:start="5:20" pos:end="5:31"><call pos:start="5:20" pos:end="5:31"><name pos:start="5:20" pos:end="5:27">S390_CPU</name><argument_list pos:start="5:28" pos:end="5:31">(<argument pos:start="5:29" pos:end="5:30"><expr pos:start="5:29" pos:end="5:30"><name pos:start="5:29" pos:end="5:30">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">CPUS390XState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">env</name> <init pos:start="7:24" pos:end="7:34">= <expr pos:start="7:26" pos:end="7:34"><operator pos:start="7:26" pos:end="7:26">&amp;</operator><name pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:29">cpu</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:34">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:22">raddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">prot</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:48"><decl pos:start="13:5" pos:end="13:47"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:16">asc</name> <init pos:start="13:18" pos:end="13:47">= <expr pos:start="13:20" pos:end="13:47"><name pos:start="13:20" pos:end="13:32"><name pos:start="13:20" pos:end="13:22">env</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:27">psw</name><operator pos:start="13:28" pos:end="13:28">.</operator><name pos:start="13:29" pos:end="13:32">mask</name></name> <operator pos:start="13:34" pos:end="13:34">&amp;</operator> <name pos:start="13:36" pos:end="13:47">PSW_MASK_ASC</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:21">/* 31-Bit mode */</comment>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:39">(<expr pos:start="19:9" pos:end="19:38"><operator pos:start="19:9" pos:end="19:9">!</operator><operator pos:start="19:10" pos:end="19:10">(</operator><name pos:start="19:11" pos:end="19:23"><name pos:start="19:11" pos:end="19:13">env</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:18">psw</name><operator pos:start="19:19" pos:end="19:19">.</operator><name pos:start="19:20" pos:end="19:23">mask</name></name> <operator pos:start="19:25" pos:end="19:25">&amp;</operator> <name pos:start="19:27" pos:end="19:37">PSW_MASK_64</name><operator pos:start="19:38" pos:end="19:38">)</operator></expr>)</condition> <block pos:start="19:41" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:28">

        <expr_stmt pos:start="21:9" pos:end="21:28"><expr pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:13">vaddr</name> <operator pos:start="21:15" pos:end="21:16">&amp;=</operator> <literal type="number" pos:start="21:18" pos:end="21:27">0x7fffffff</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:73"><expr pos:start="27:5" pos:end="27:72"><call pos:start="27:5" pos:end="27:72"><name pos:start="27:5" pos:end="27:17">mmu_translate</name><argument_list pos:start="27:18" pos:end="27:72">(<argument pos:start="27:19" pos:end="27:21"><expr pos:start="27:19" pos:end="27:21"><name pos:start="27:19" pos:end="27:21">env</name></expr></argument>, <argument pos:start="27:24" pos:end="27:28"><expr pos:start="27:24" pos:end="27:28"><name pos:start="27:24" pos:end="27:28">vaddr</name></expr></argument>, <argument pos:start="27:31" pos:end="27:44"><expr pos:start="27:31" pos:end="27:44"><name pos:start="27:31" pos:end="27:44">MMU_INST_FETCH</name></expr></argument>, <argument pos:start="27:47" pos:end="27:49"><expr pos:start="27:47" pos:end="27:49"><name pos:start="27:47" pos:end="27:49">asc</name></expr></argument>, <argument pos:start="27:52" pos:end="27:57"><expr pos:start="27:52" pos:end="27:57"><operator pos:start="27:52" pos:end="27:52">&amp;</operator><name pos:start="27:53" pos:end="27:57">raddr</name></expr></argument>, <argument pos:start="27:60" pos:end="27:64"><expr pos:start="27:60" pos:end="27:64"><operator pos:start="27:60" pos:end="27:60">&amp;</operator><name pos:start="27:61" pos:end="27:64">prot</name></expr></argument>, <argument pos:start="27:67" pos:end="27:71"><expr pos:start="27:67" pos:end="27:71"><name pos:start="27:67" pos:end="27:71">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="31:5" pos:end="31:17">return <expr pos:start="31:12" pos:end="31:16"><name pos:start="31:12" pos:end="31:16">raddr</name></expr>;</return>

</block_content>}</block></function>
</unit>
