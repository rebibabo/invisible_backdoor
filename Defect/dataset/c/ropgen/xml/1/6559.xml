<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6559.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:10">FWCfgState</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:32">fw_cfg_init_mem_wide</name><parameter_list pos:start="1:33" pos:end="5:71">(<parameter pos:start="1:34" pos:end="1:48"><decl pos:start="1:34" pos:end="1:48"><type pos:start="1:34" pos:end="1:48"><name pos:start="1:34" pos:end="1:39">hwaddr</name></type> <name pos:start="1:41" pos:end="1:48">ctl_addr</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:49"><decl pos:start="3:34" pos:end="3:49"><type pos:start="3:34" pos:end="3:49"><name pos:start="3:34" pos:end="3:39">hwaddr</name></type> <name pos:start="3:41" pos:end="3:49">data_addr</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:70"><decl pos:start="3:52" pos:end="3:70"><type pos:start="3:52" pos:end="3:70"><name pos:start="3:52" pos:end="3:59">uint32_t</name></type> <name pos:start="3:61" pos:end="3:70">data_width</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:48"><decl pos:start="5:34" pos:end="5:48"><type pos:start="5:34" pos:end="5:48"><name pos:start="5:34" pos:end="5:39">hwaddr</name></type> <name pos:start="5:41" pos:end="5:48">dma_addr</name></decl></parameter>, <parameter pos:start="5:51" pos:end="5:70"><decl pos:start="5:51" pos:end="5:70"><type pos:start="5:51" pos:end="5:70"><name pos:start="5:51" pos:end="5:62">AddressSpace</name> <modifier pos:start="5:64" pos:end="5:64">*</modifier></type><name pos:start="5:65" pos:end="5:70">dma_as</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="61:1">{<block_content pos:start="9:5" pos:end="59:13">

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">DeviceState</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">SysBusDevice</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:21">sbd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">FWCfgState</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:17">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:43"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">bool</name></type> <name pos:start="15:10" pos:end="15:22">dma_requested</name> <init pos:start="15:24" pos:end="15:43">= <expr pos:start="15:26" pos:end="15:43"><name pos:start="15:26" pos:end="15:33">dma_addr</name> <operator pos:start="15:35" pos:end="15:36">&amp;&amp;</operator> <name pos:start="15:38" pos:end="15:43">dma_as</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:7">dev</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:44"><name pos:start="19:11" pos:end="19:21">qdev_create</name><argument_list pos:start="19:22" pos:end="19:44">(<argument pos:start="19:23" pos:end="19:26"><expr pos:start="19:23" pos:end="19:26"><name pos:start="19:23" pos:end="19:26">NULL</name></expr></argument>, <argument pos:start="19:29" pos:end="19:43"><expr pos:start="19:29" pos:end="19:43"><name pos:start="19:29" pos:end="19:43">TYPE_FW_CFG_MEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:56"><expr pos:start="21:5" pos:end="21:55"><call pos:start="21:5" pos:end="21:55"><name pos:start="21:5" pos:end="21:24">qdev_prop_set_uint32</name><argument_list pos:start="21:25" pos:end="21:55">(<argument pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><name pos:start="21:26" pos:end="21:28">dev</name></expr></argument>, <argument pos:start="21:31" pos:end="21:42"><expr pos:start="21:31" pos:end="21:42"><literal type="string" pos:start="21:31" pos:end="21:42">"data_width"</literal></expr></argument>, <argument pos:start="21:45" pos:end="21:54"><expr pos:start="21:45" pos:end="21:54"><name pos:start="21:45" pos:end="21:54">data_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:23">(<expr pos:start="23:9" pos:end="23:22"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:22">dma_requested</name></expr>)</condition> <block pos:start="23:25" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:53">

        <expr_stmt pos:start="25:9" pos:end="25:53"><expr pos:start="25:9" pos:end="25:52"><call pos:start="25:9" pos:end="25:52"><name pos:start="25:9" pos:end="25:25">qdev_prop_set_bit</name><argument_list pos:start="25:26" pos:end="25:52">(<argument pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><name pos:start="25:27" pos:end="25:29">dev</name></expr></argument>, <argument pos:start="25:32" pos:end="25:44"><expr pos:start="25:32" pos:end="25:44"><literal type="string" pos:start="25:32" pos:end="25:44">"dma_enabled"</literal></expr></argument>, <argument pos:start="25:47" pos:end="25:51"><expr pos:start="25:47" pos:end="25:51"><name pos:start="25:47" pos:end="25:51">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><call pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:16">fw_cfg_init1</name><argument_list pos:start="31:17" pos:end="31:21">(<argument pos:start="31:18" pos:end="31:20"><expr pos:start="31:18" pos:end="31:20"><name pos:start="31:18" pos:end="31:20">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:30"><expr pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:7">sbd</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:29"><name pos:start="35:11" pos:end="35:24">SYS_BUS_DEVICE</name><argument_list pos:start="35:25" pos:end="35:29">(<argument pos:start="35:26" pos:end="35:28"><expr pos:start="35:26" pos:end="35:28"><name pos:start="35:26" pos:end="35:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:38"><expr pos:start="37:5" pos:end="37:37"><call pos:start="37:5" pos:end="37:37"><name pos:start="37:5" pos:end="37:19">sysbus_mmio_map</name><argument_list pos:start="37:20" pos:end="37:37">(<argument pos:start="37:21" pos:end="37:23"><expr pos:start="37:21" pos:end="37:23"><name pos:start="37:21" pos:end="37:23">sbd</name></expr></argument>, <argument pos:start="37:26" pos:end="37:26"><expr pos:start="37:26" pos:end="37:26"><literal type="number" pos:start="37:26" pos:end="37:26">0</literal></expr></argument>, <argument pos:start="37:29" pos:end="37:36"><expr pos:start="37:29" pos:end="37:36"><name pos:start="37:29" pos:end="37:36">ctl_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:39"><expr pos:start="39:5" pos:end="39:38"><call pos:start="39:5" pos:end="39:38"><name pos:start="39:5" pos:end="39:19">sysbus_mmio_map</name><argument_list pos:start="39:20" pos:end="39:38">(<argument pos:start="39:21" pos:end="39:23"><expr pos:start="39:21" pos:end="39:23"><name pos:start="39:21" pos:end="39:23">sbd</name></expr></argument>, <argument pos:start="39:26" pos:end="39:26"><expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">1</literal></expr></argument>, <argument pos:start="39:29" pos:end="39:37"><expr pos:start="39:29" pos:end="39:37"><name pos:start="39:29" pos:end="39:37">data_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:20"><expr pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:5">s</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <call pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:14">FW_CFG</name><argument_list pos:start="43:15" pos:end="43:19">(<argument pos:start="43:16" pos:end="43:18"><expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:23">(<expr pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:22">dma_enabled</name></name></expr>)</condition> <block pos:start="47:25" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:42">

        <expr_stmt pos:start="49:9" pos:end="49:27"><expr pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:17">dma_as</name></name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:26">dma_as</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:24"><expr pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:19">dma_addr</name></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <literal type="number" pos:start="51:23" pos:end="51:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:42"><expr pos:start="53:9" pos:end="53:41"><call pos:start="53:9" pos:end="53:41"><name pos:start="53:9" pos:end="53:23">sysbus_mmio_map</name><argument_list pos:start="53:24" pos:end="53:41">(<argument pos:start="53:25" pos:end="53:27"><expr pos:start="53:25" pos:end="53:27"><name pos:start="53:25" pos:end="53:27">sbd</name></expr></argument>, <argument pos:start="53:30" pos:end="53:30"><expr pos:start="53:30" pos:end="53:30"><literal type="number" pos:start="53:30" pos:end="53:30">2</literal></expr></argument>, <argument pos:start="53:33" pos:end="53:40"><expr pos:start="53:33" pos:end="53:40"><name pos:start="53:33" pos:end="53:40">dma_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><name pos:start="59:12" pos:end="59:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
