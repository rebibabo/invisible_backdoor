<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1536.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">opt_default</name><parameter_list pos:start="1:16" pos:end="1:63">(<parameter pos:start="1:17" pos:end="1:28"><decl pos:start="1:17" pos:end="1:28"><type pos:start="1:17" pos:end="1:28"><name pos:start="1:17" pos:end="1:20">void</name> <modifier pos:start="1:22" pos:end="1:22">*</modifier></type><name pos:start="1:23" pos:end="1:28">optctx</name></decl></parameter>, <parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><specifier pos:start="1:31" pos:end="1:35">const</specifier> <name pos:start="1:37" pos:end="1:40">char</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">opt</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:62"><decl pos:start="1:48" pos:end="1:62"><type pos:start="1:48" pos:end="1:62"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="137:1">{<block_content pos:start="5:5" pos:end="135:36">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:20"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:18">AVOption</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">o</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">consumed</name> <init pos:start="7:18" pos:end="7:20">= <expr pos:start="7:20" pos:end="7:20"><literal type="number" pos:start="7:20" pos:end="7:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:26"><name pos:start="9:10" pos:end="9:21">opt_stripped</name><index pos:start="9:22" pos:end="9:26">[<expr pos:start="9:23" pos:end="9:25"><literal type="number" pos:start="9:23" pos:end="9:25">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:72"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">AVClass</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:21">cc</name> <init pos:start="13:23" pos:end="13:43">= <expr pos:start="13:25" pos:end="13:43"><call pos:start="13:25" pos:end="13:43"><name pos:start="13:25" pos:end="13:41">avcodec_get_class</name><argument_list pos:start="13:42" pos:end="13:43">()</argument_list></call></expr></init></decl>, <decl pos:start="13:46" pos:end="13:71"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="13:46" pos:end="13:46">*</modifier></type><name pos:start="13:47" pos:end="13:48">fc</name> <init pos:start="13:50" pos:end="13:71">= <expr pos:start="13:52" pos:end="13:71"><call pos:start="13:52" pos:end="13:71"><name pos:start="13:52" pos:end="13:69">avformat_get_class</name><argument_list pos:start="13:70" pos:end="13:71">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:38"><decl pos:start="15:5" pos:end="15:37"><type pos:start="15:5" pos:end="15:29"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:19">av_unused</name> <name pos:start="15:21" pos:end="15:27">AVClass</name> <modifier pos:start="15:29" pos:end="15:29">*</modifier></type><name pos:start="15:30" pos:end="15:37">rc_class</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:34"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:19"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">AVClass</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:21">sc</name></decl>, <decl pos:start="17:24" pos:end="17:33"><type ref="prev" pos:start="17:5" pos:end="17:19"><modifier pos:start="17:24" pos:end="17:24">*</modifier></type><name pos:start="17:25" pos:end="17:33">swr_class</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:39"><if pos:start="21:5" pos:end="23:39">if <condition pos:start="21:8" pos:end="21:56">(<expr pos:start="21:9" pos:end="21:55"><operator pos:start="21:9" pos:end="21:9">!</operator><call pos:start="21:10" pos:end="21:29"><name pos:start="21:10" pos:end="21:15">strcmp</name><argument_list pos:start="21:16" pos:end="21:29">(<argument pos:start="21:17" pos:end="21:19"><expr pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:19">opt</name></expr></argument>, <argument pos:start="21:22" pos:end="21:28"><expr pos:start="21:22" pos:end="21:28"><literal type="string" pos:start="21:22" pos:end="21:28">"debug"</literal></expr></argument>)</argument_list></call> <operator pos:start="21:31" pos:end="21:32">||</operator> <operator pos:start="21:34" pos:end="21:34">!</operator><call pos:start="21:35" pos:end="21:55"><name pos:start="21:35" pos:end="21:40">strcmp</name><argument_list pos:start="21:41" pos:end="21:55">(<argument pos:start="21:42" pos:end="21:44"><expr pos:start="21:42" pos:end="21:44"><name pos:start="21:42" pos:end="21:44">opt</name></expr></argument>, <argument pos:start="21:47" pos:end="21:54"><expr pos:start="21:47" pos:end="21:54"><literal type="string" pos:start="21:47" pos:end="21:54">"fdebug"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:39"><block_content pos:start="23:9" pos:end="23:39">

        <expr_stmt pos:start="23:9" pos:end="23:39"><expr pos:start="23:9" pos:end="23:38"><call pos:start="23:9" pos:end="23:38"><name pos:start="23:9" pos:end="23:24">av_log_set_level</name><argument_list pos:start="23:25" pos:end="23:38">(<argument pos:start="23:26" pos:end="23:37"><expr pos:start="23:26" pos:end="23:37"><name pos:start="23:26" pos:end="23:37">AV_LOG_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="29:30"><if pos:start="27:5" pos:end="29:30">if <condition pos:start="27:8" pos:end="27:32">(<expr pos:start="27:9" pos:end="27:31"><operator pos:start="27:9" pos:end="27:9">!</operator><operator pos:start="27:10" pos:end="27:10">(</operator><name pos:start="27:11" pos:end="27:11">p</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:30"><name pos:start="27:15" pos:end="27:20">strchr</name><argument_list pos:start="27:21" pos:end="27:30">(<argument pos:start="27:22" pos:end="27:24"><expr pos:start="27:22" pos:end="27:24"><name pos:start="27:22" pos:end="27:24">opt</name></expr></argument>, <argument pos:start="27:27" pos:end="27:29"><expr pos:start="27:27" pos:end="27:29"><literal type="char" pos:start="27:27" pos:end="27:29">':'</literal></expr></argument>)</argument_list></call><operator pos:start="27:31" pos:end="27:31">)</operator></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:30"><block_content pos:start="29:9" pos:end="29:30">

        <expr_stmt pos:start="29:9" pos:end="29:30"><expr pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:9">p</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <name pos:start="29:13" pos:end="29:15">opt</name> <operator pos:start="29:17" pos:end="29:17">+</operator> <call pos:start="29:19" pos:end="29:29"><name pos:start="29:19" pos:end="29:24">strlen</name><argument_list pos:start="29:25" pos:end="29:29">(<argument pos:start="29:26" pos:end="29:28"><expr pos:start="29:26" pos:end="29:28"><name pos:start="29:26" pos:end="29:28">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:76"><expr pos:start="31:5" pos:end="31:75"><call pos:start="31:5" pos:end="31:75"><name pos:start="31:5" pos:end="31:14">av_strlcpy</name><argument_list pos:start="31:15" pos:end="31:75">(<argument pos:start="31:16" pos:end="31:27"><expr pos:start="31:16" pos:end="31:27"><name pos:start="31:16" pos:end="31:27">opt_stripped</name></expr></argument>, <argument pos:start="31:30" pos:end="31:32"><expr pos:start="31:30" pos:end="31:32"><name pos:start="31:30" pos:end="31:32">opt</name></expr></argument>, <argument pos:start="31:35" pos:end="31:74"><expr pos:start="31:35" pos:end="31:74"><call pos:start="31:35" pos:end="31:74"><name pos:start="31:35" pos:end="31:39">FFMIN</name><argument_list pos:start="31:40" pos:end="31:74">(<argument pos:start="31:41" pos:end="31:60"><expr pos:start="31:41" pos:end="31:60"><sizeof pos:start="31:41" pos:end="31:60">sizeof<argument_list pos:start="31:47" pos:end="31:60">(<argument pos:start="31:48" pos:end="31:59"><expr pos:start="31:48" pos:end="31:59"><name pos:start="31:48" pos:end="31:59">opt_stripped</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="31:63" pos:end="31:73"><expr pos:start="31:63" pos:end="31:73"><name pos:start="31:63" pos:end="31:63">p</name> <operator pos:start="31:65" pos:end="31:65">-</operator> <name pos:start="31:67" pos:end="31:69">opt</name> <operator pos:start="31:71" pos:end="31:71">+</operator> <literal type="number" pos:start="31:73" pos:end="31:73">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="47:5"><if pos:start="35:5" pos:end="47:5">if <condition pos:start="35:8" pos:end="41:75">(<expr pos:start="35:9" pos:end="41:74"><operator pos:start="35:9" pos:end="35:9">(</operator><name pos:start="35:10" pos:end="35:10">o</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <call pos:start="35:14" pos:end="37:73"><name pos:start="35:14" pos:end="35:24">av_opt_find</name><argument_list pos:start="35:25" pos:end="37:73">(<argument pos:start="35:26" pos:end="35:28"><expr pos:start="35:26" pos:end="35:28"><operator pos:start="35:26" pos:end="35:26">&amp;</operator><name pos:start="35:27" pos:end="35:28">cc</name></expr></argument>, <argument pos:start="35:31" pos:end="35:42"><expr pos:start="35:31" pos:end="35:42"><name pos:start="35:31" pos:end="35:42">opt_stripped</name></expr></argument>, <argument pos:start="35:45" pos:end="35:48"><expr pos:start="35:45" pos:end="35:48"><name pos:start="35:45" pos:end="35:48">NULL</name></expr></argument>, <argument pos:start="35:51" pos:end="35:51"><expr pos:start="35:51" pos:end="35:51"><literal type="number" pos:start="35:51" pos:end="35:51">0</literal></expr></argument>,

                         <argument pos:start="37:26" pos:end="37:72"><expr pos:start="37:26" pos:end="37:72"><name pos:start="37:26" pos:end="37:47">AV_OPT_SEARCH_CHILDREN</name> <operator pos:start="37:49" pos:end="37:49">|</operator> <name pos:start="37:51" pos:end="37:72">AV_OPT_SEARCH_FAKE_OBJ</name></expr></argument>)</argument_list></call><operator pos:start="37:74" pos:end="37:74">)</operator> <operator pos:start="37:76" pos:end="37:77">||</operator>

        <operator pos:start="39:9" pos:end="39:9">(</operator><operator pos:start="39:10" pos:end="39:10">(</operator><name pos:start="39:11" pos:end="39:16"><name pos:start="39:11" pos:end="39:13">opt</name><index pos:start="39:14" pos:end="39:16">[<expr pos:start="39:15" pos:end="39:15"><literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>]</index></name> <operator pos:start="39:18" pos:end="39:19">==</operator> <literal type="char" pos:start="39:21" pos:end="39:23">'v'</literal> <operator pos:start="39:25" pos:end="39:26">||</operator> <name pos:start="39:28" pos:end="39:33"><name pos:start="39:28" pos:end="39:30">opt</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><literal type="number" pos:start="39:32" pos:end="39:32">0</literal></expr>]</index></name> <operator pos:start="39:35" pos:end="39:36">==</operator> <literal type="char" pos:start="39:38" pos:end="39:40">'a'</literal> <operator pos:start="39:42" pos:end="39:43">||</operator> <name pos:start="39:45" pos:end="39:50"><name pos:start="39:45" pos:end="39:47">opt</name><index pos:start="39:48" pos:end="39:50">[<expr pos:start="39:49" pos:end="39:49"><literal type="number" pos:start="39:49" pos:end="39:49">0</literal></expr>]</index></name> <operator pos:start="39:52" pos:end="39:53">==</operator> <literal type="char" pos:start="39:55" pos:end="39:57">'s'</literal><operator pos:start="39:58" pos:end="39:58">)</operator> <operator pos:start="39:60" pos:end="39:61">&amp;&amp;</operator>

         <operator pos:start="41:10" pos:end="41:10">(</operator><name pos:start="41:11" pos:end="41:11">o</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:72"><name pos:start="41:15" pos:end="41:25">av_opt_find</name><argument_list pos:start="41:26" pos:end="41:72">(<argument pos:start="41:27" pos:end="41:29"><expr pos:start="41:27" pos:end="41:29"><operator pos:start="41:27" pos:end="41:27">&amp;</operator><name pos:start="41:28" pos:end="41:29">cc</name></expr></argument>, <argument pos:start="41:32" pos:end="41:38"><expr pos:start="41:32" pos:end="41:38"><name pos:start="41:32" pos:end="41:34">opt</name> <operator pos:start="41:36" pos:end="41:36">+</operator> <literal type="number" pos:start="41:38" pos:end="41:38">1</literal></expr></argument>, <argument pos:start="41:41" pos:end="41:44"><expr pos:start="41:41" pos:end="41:44"><name pos:start="41:41" pos:end="41:44">NULL</name></expr></argument>, <argument pos:start="41:47" pos:end="41:47"><expr pos:start="41:47" pos:end="41:47"><literal type="number" pos:start="41:47" pos:end="41:47">0</literal></expr></argument>, <argument pos:start="41:50" pos:end="41:71"><expr pos:start="41:50" pos:end="41:71"><name pos:start="41:50" pos:end="41:71">AV_OPT_SEARCH_FAKE_OBJ</name></expr></argument>)</argument_list></call><operator pos:start="41:73" pos:end="41:73">)</operator><operator pos:start="41:74" pos:end="41:74">)</operator></expr>)</condition> <block pos:start="41:77" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:21">

        <expr_stmt pos:start="43:9" pos:end="43:50"><expr pos:start="43:9" pos:end="43:49"><call pos:start="43:9" pos:end="43:49"><name pos:start="43:9" pos:end="43:19">av_dict_set</name><argument_list pos:start="43:20" pos:end="43:49">(<argument pos:start="43:21" pos:end="43:31"><expr pos:start="43:21" pos:end="43:31"><operator pos:start="43:21" pos:end="43:21">&amp;</operator><name pos:start="43:22" pos:end="43:31">codec_opts</name></expr></argument>, <argument pos:start="43:34" pos:end="43:36"><expr pos:start="43:34" pos:end="43:36"><name pos:start="43:34" pos:end="43:36">opt</name></expr></argument>, <argument pos:start="43:39" pos:end="43:41"><expr pos:start="43:39" pos:end="43:41"><name pos:start="43:39" pos:end="43:41">arg</name></expr></argument>, <argument pos:start="43:44" pos:end="43:48"><expr pos:start="43:44" pos:end="43:48"><name pos:start="43:44" pos:end="43:48">FLAGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:21"><expr pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:16">consumed</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <literal type="number" pos:start="45:20" pos:end="45:20">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="64:0"><if pos:start="49:5" pos:end="64:0">if <condition pos:start="49:8" pos:end="51:80">(<expr pos:start="49:9" pos:end="51:79"><operator pos:start="49:9" pos:end="49:9">(</operator><name pos:start="49:10" pos:end="49:10">o</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <call pos:start="49:14" pos:end="51:78"><name pos:start="49:14" pos:end="49:24">av_opt_find</name><argument_list pos:start="49:25" pos:end="51:78">(<argument pos:start="49:26" pos:end="49:28"><expr pos:start="49:26" pos:end="49:28"><operator pos:start="49:26" pos:end="49:26">&amp;</operator><name pos:start="49:27" pos:end="49:28">fc</name></expr></argument>, <argument pos:start="49:31" pos:end="49:33"><expr pos:start="49:31" pos:end="49:33"><name pos:start="49:31" pos:end="49:33">opt</name></expr></argument>, <argument pos:start="49:36" pos:end="49:39"><expr pos:start="49:36" pos:end="49:39"><name pos:start="49:36" pos:end="49:39">NULL</name></expr></argument>, <argument pos:start="49:42" pos:end="49:42"><expr pos:start="49:42" pos:end="49:42"><literal type="number" pos:start="49:42" pos:end="49:42">0</literal></expr></argument>,

                              <argument pos:start="51:31" pos:end="51:77"><expr pos:start="51:31" pos:end="51:77"><name pos:start="51:31" pos:end="51:52">AV_OPT_SEARCH_CHILDREN</name> <operator pos:start="51:54" pos:end="51:54">|</operator> <name pos:start="51:56" pos:end="51:77">AV_OPT_SEARCH_FAKE_OBJ</name></expr></argument>)</argument_list></call><operator pos:start="51:79" pos:end="51:79">)</operator></expr>)</condition> <block pos:start="51:82" pos:end="64:0">{<block_content pos:start="53:9" pos:end="59:21">

        <expr_stmt pos:start="53:9" pos:end="53:51"><expr pos:start="53:9" pos:end="53:50"><call pos:start="53:9" pos:end="53:50"><name pos:start="53:9" pos:end="53:19">av_dict_set</name><argument_list pos:start="53:20" pos:end="53:50">(<argument pos:start="53:21" pos:end="53:32"><expr pos:start="53:21" pos:end="53:32"><operator pos:start="53:21" pos:end="53:21">&amp;</operator><name pos:start="53:22" pos:end="53:32">format_opts</name></expr></argument>, <argument pos:start="53:35" pos:end="53:37"><expr pos:start="53:35" pos:end="53:37"><name pos:start="53:35" pos:end="53:37">opt</name></expr></argument>, <argument pos:start="53:40" pos:end="53:42"><expr pos:start="53:40" pos:end="53:42"><name pos:start="53:40" pos:end="53:42">arg</name></expr></argument>, <argument pos:start="53:45" pos:end="53:49"><expr pos:start="53:45" pos:end="53:49"><name pos:start="53:45" pos:end="53:49">FLAGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="57:87"><if pos:start="55:9" pos:end="57:87">if<condition pos:start="55:11" pos:end="55:20">(<expr pos:start="55:12" pos:end="55:19"><name pos:start="55:12" pos:end="55:19">consumed</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:87"><block_content pos:start="57:13" pos:end="57:87">

            <expr_stmt pos:start="57:13" pos:end="57:87"><expr pos:start="57:13" pos:end="57:86"><call pos:start="57:13" pos:end="57:86"><name pos:start="57:13" pos:end="57:18">av_log</name><argument_list pos:start="57:19" pos:end="57:86">(<argument pos:start="57:20" pos:end="57:23"><expr pos:start="57:20" pos:end="57:23"><name pos:start="57:20" pos:end="57:23">NULL</name></expr></argument>, <argument pos:start="57:26" pos:end="57:39"><expr pos:start="57:26" pos:end="57:39"><name pos:start="57:26" pos:end="57:39">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="57:42" pos:end="57:80"><expr pos:start="57:42" pos:end="57:80"><literal type="string" pos:start="57:42" pos:end="57:80">"Routing %s to codec and muxer layer\n"</literal></expr></argument>, <argument pos:start="57:83" pos:end="57:85"><expr pos:start="57:83" pos:end="57:85"><name pos:start="57:83" pos:end="57:85">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:21"><expr pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:16">consumed</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <literal type="number" pos:start="59:20" pos:end="59:20">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:if pos:start="63:1" pos:end="63:18">#<cpp:directive pos:start="63:2" pos:end="63:3">if</cpp:directive> <expr pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:18">CONFIG_SWSCALE</name></expr></cpp:if>

    <expr_stmt pos:start="65:5" pos:end="65:25"><expr pos:start="65:5" pos:end="65:24"><name pos:start="65:5" pos:end="65:6">sc</name> <operator pos:start="65:8" pos:end="65:8">=</operator> <call pos:start="65:10" pos:end="65:24"><name pos:start="65:10" pos:end="65:22">sws_get_class</name><argument_list pos:start="65:23" pos:end="65:24">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="90:0"><if pos:start="67:5" pos:end="90:0">if <condition pos:start="67:8" pos:end="69:74">(<expr pos:start="67:9" pos:end="69:73"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:17">consumed</name> <operator pos:start="67:19" pos:end="67:20">&amp;&amp;</operator> <call pos:start="67:22" pos:end="69:73"><name pos:start="67:22" pos:end="67:32">av_opt_find</name><argument_list pos:start="67:33" pos:end="69:73">(<argument pos:start="67:34" pos:end="67:36"><expr pos:start="67:34" pos:end="67:36"><operator pos:start="67:34" pos:end="67:34">&amp;</operator><name pos:start="67:35" pos:end="67:36">sc</name></expr></argument>, <argument pos:start="67:39" pos:end="67:41"><expr pos:start="67:39" pos:end="67:41"><name pos:start="67:39" pos:end="67:41">opt</name></expr></argument>, <argument pos:start="67:44" pos:end="67:47"><expr pos:start="67:44" pos:end="67:47"><name pos:start="67:44" pos:end="67:47">NULL</name></expr></argument>, <argument pos:start="67:50" pos:end="67:50"><expr pos:start="67:50" pos:end="67:50"><literal type="number" pos:start="67:50" pos:end="67:50">0</literal></expr></argument>,

                         <argument pos:start="69:26" pos:end="69:72"><expr pos:start="69:26" pos:end="69:72"><name pos:start="69:26" pos:end="69:47">AV_OPT_SEARCH_CHILDREN</name> <operator pos:start="69:49" pos:end="69:49">|</operator> <name pos:start="69:51" pos:end="69:72">AV_OPT_SEARCH_FAKE_OBJ</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:76" pos:end="90:0">{<block_content pos:start="73:9" pos:end="83:21">

        <comment type="line" pos:start="71:9" pos:end="71:67">// XXX we only support sws_flags, not arbitrary sws options</comment>

        <decl_stmt pos:start="73:9" pos:end="73:52"><decl pos:start="73:9" pos:end="73:51"><type pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:11">int</name></type> <name pos:start="73:13" pos:end="73:15">ret</name> <init pos:start="73:17" pos:end="73:51">= <expr pos:start="73:19" pos:end="73:51"><call pos:start="73:19" pos:end="73:51"><name pos:start="73:19" pos:end="73:28">av_opt_set</name><argument_list pos:start="73:29" pos:end="73:51">(<argument pos:start="73:30" pos:end="73:37"><expr pos:start="73:30" pos:end="73:37"><name pos:start="73:30" pos:end="73:37">sws_opts</name></expr></argument>, <argument pos:start="73:40" pos:end="73:42"><expr pos:start="73:40" pos:end="73:42"><name pos:start="73:40" pos:end="73:42">opt</name></expr></argument>, <argument pos:start="73:45" pos:end="73:47"><expr pos:start="73:45" pos:end="73:47"><name pos:start="73:45" pos:end="73:47">arg</name></expr></argument>, <argument pos:start="73:50" pos:end="73:50"><expr pos:start="73:50" pos:end="73:50"><literal type="number" pos:start="73:50" pos:end="73:50">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="75:9" pos:end="81:9"><if pos:start="75:9" pos:end="81:9">if <condition pos:start="75:12" pos:end="75:20">(<expr pos:start="75:13" pos:end="75:19"><name pos:start="75:13" pos:end="75:15">ret</name> <operator pos:start="75:17" pos:end="75:17">&lt;</operator> <literal type="number" pos:start="75:19" pos:end="75:19">0</literal></expr>)</condition> <block pos:start="75:22" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:23">

            <expr_stmt pos:start="77:13" pos:end="77:74"><expr pos:start="77:13" pos:end="77:73"><call pos:start="77:13" pos:end="77:73"><name pos:start="77:13" pos:end="77:18">av_log</name><argument_list pos:start="77:19" pos:end="77:73">(<argument pos:start="77:20" pos:end="77:23"><expr pos:start="77:20" pos:end="77:23"><name pos:start="77:20" pos:end="77:23">NULL</name></expr></argument>, <argument pos:start="77:26" pos:end="77:37"><expr pos:start="77:26" pos:end="77:37"><name pos:start="77:26" pos:end="77:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:40" pos:end="77:67"><expr pos:start="77:40" pos:end="77:67"><literal type="string" pos:start="77:40" pos:end="77:67">"Error setting option %s.\n"</literal></expr></argument>, <argument pos:start="77:70" pos:end="77:72"><expr pos:start="77:70" pos:end="77:72"><name pos:start="77:70" pos:end="77:72">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="79:13" pos:end="79:23">return <expr pos:start="79:20" pos:end="79:22"><name pos:start="79:20" pos:end="79:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:21"><expr pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:16">consumed</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <literal type="number" pos:start="83:20" pos:end="83:20">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="87:1" pos:end="87:6">#<cpp:directive pos:start="87:2" pos:end="87:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="89:1" pos:end="89:21">#<cpp:directive pos:start="89:2" pos:end="89:3">if</cpp:directive> <expr pos:start="89:5" pos:end="89:21"><name pos:start="89:5" pos:end="89:21">CONFIG_SWRESAMPLE</name></expr></cpp:if>

    <expr_stmt pos:start="91:5" pos:end="91:32"><expr pos:start="91:5" pos:end="91:31"><name pos:start="91:5" pos:end="91:13">swr_class</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <call pos:start="91:17" pos:end="91:31"><name pos:start="91:17" pos:end="91:29">swr_get_class</name><argument_list pos:start="91:30" pos:end="91:31">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="114:0"><if pos:start="93:5" pos:end="114:0">if <condition pos:start="93:8" pos:end="95:80">(<expr pos:start="93:9" pos:end="95:79"><operator pos:start="93:9" pos:end="93:9">!</operator><name pos:start="93:10" pos:end="93:17">consumed</name> <operator pos:start="93:19" pos:end="93:20">&amp;&amp;</operator> <call pos:start="93:22" pos:end="95:79"><name pos:start="93:22" pos:end="93:32">av_opt_find</name><argument_list pos:start="93:33" pos:end="95:79">(<argument pos:start="93:34" pos:end="93:43"><expr pos:start="93:34" pos:end="93:43"><operator pos:start="93:34" pos:end="93:34">&amp;</operator><name pos:start="93:35" pos:end="93:43">swr_class</name></expr></argument>, <argument pos:start="93:46" pos:end="93:48"><expr pos:start="93:46" pos:end="93:48"><name pos:start="93:46" pos:end="93:48">opt</name></expr></argument>, <argument pos:start="93:51" pos:end="93:54"><expr pos:start="93:51" pos:end="93:54"><name pos:start="93:51" pos:end="93:54">NULL</name></expr></argument>, <argument pos:start="93:57" pos:end="93:57"><expr pos:start="93:57" pos:end="93:57"><literal type="number" pos:start="93:57" pos:end="93:57">0</literal></expr></argument>,

                               <argument pos:start="95:32" pos:end="95:78"><expr pos:start="95:32" pos:end="95:78"><name pos:start="95:32" pos:end="95:53">AV_OPT_SEARCH_CHILDREN</name> <operator pos:start="95:55" pos:end="95:55">|</operator> <name pos:start="95:57" pos:end="95:78">AV_OPT_SEARCH_FAKE_OBJ</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="95:82" pos:end="114:0">{<block_content pos:start="97:9" pos:end="107:21">

        <decl_stmt pos:start="97:9" pos:end="97:52"><decl pos:start="97:9" pos:end="97:51"><type pos:start="97:9" pos:end="97:11"><name pos:start="97:9" pos:end="97:11">int</name></type> <name pos:start="97:13" pos:end="97:15">ret</name> <init pos:start="97:17" pos:end="97:51">= <expr pos:start="97:19" pos:end="97:51"><call pos:start="97:19" pos:end="97:51"><name pos:start="97:19" pos:end="97:28">av_opt_set</name><argument_list pos:start="97:29" pos:end="97:51">(<argument pos:start="97:30" pos:end="97:37"><expr pos:start="97:30" pos:end="97:37"><name pos:start="97:30" pos:end="97:37">swr_opts</name></expr></argument>, <argument pos:start="97:40" pos:end="97:42"><expr pos:start="97:40" pos:end="97:42"><name pos:start="97:40" pos:end="97:42">opt</name></expr></argument>, <argument pos:start="97:45" pos:end="97:47"><expr pos:start="97:45" pos:end="97:47"><name pos:start="97:45" pos:end="97:47">arg</name></expr></argument>, <argument pos:start="97:50" pos:end="97:50"><expr pos:start="97:50" pos:end="97:50"><literal type="number" pos:start="97:50" pos:end="97:50">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if <condition pos:start="99:12" pos:end="99:20">(<expr pos:start="99:13" pos:end="99:19"><name pos:start="99:13" pos:end="99:15">ret</name> <operator pos:start="99:17" pos:end="99:17">&lt;</operator> <literal type="number" pos:start="99:19" pos:end="99:19">0</literal></expr>)</condition> <block pos:start="99:22" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:23">

            <expr_stmt pos:start="101:13" pos:end="101:74"><expr pos:start="101:13" pos:end="101:73"><call pos:start="101:13" pos:end="101:73"><name pos:start="101:13" pos:end="101:18">av_log</name><argument_list pos:start="101:19" pos:end="101:73">(<argument pos:start="101:20" pos:end="101:23"><expr pos:start="101:20" pos:end="101:23"><name pos:start="101:20" pos:end="101:23">NULL</name></expr></argument>, <argument pos:start="101:26" pos:end="101:37"><expr pos:start="101:26" pos:end="101:37"><name pos:start="101:26" pos:end="101:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:40" pos:end="101:67"><expr pos:start="101:40" pos:end="101:67"><literal type="string" pos:start="101:40" pos:end="101:67">"Error setting option %s.\n"</literal></expr></argument>, <argument pos:start="101:70" pos:end="101:72"><expr pos:start="101:70" pos:end="101:72"><name pos:start="101:70" pos:end="101:72">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="103:13" pos:end="103:23">return <expr pos:start="103:20" pos:end="103:22"><name pos:start="103:20" pos:end="103:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:21"><expr pos:start="107:9" pos:end="107:20"><name pos:start="107:9" pos:end="107:16">consumed</name> <operator pos:start="107:18" pos:end="107:18">=</operator> <literal type="number" pos:start="107:20" pos:end="107:20">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="111:1" pos:end="111:6">#<cpp:directive pos:start="111:2" pos:end="111:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="113:1" pos:end="113:21">#<cpp:directive pos:start="113:2" pos:end="113:3">if</cpp:directive> <expr pos:start="113:5" pos:end="113:21"><name pos:start="113:5" pos:end="113:21">CONFIG_AVRESAMPLE</name></expr></cpp:if>

    <expr_stmt pos:start="115:5" pos:end="115:38"><expr pos:start="115:5" pos:end="115:37"><name pos:start="115:5" pos:end="115:12">rc_class</name> <operator pos:start="115:14" pos:end="115:14">=</operator> <call pos:start="115:16" pos:end="115:37"><name pos:start="115:16" pos:end="115:35">avresample_get_class</name><argument_list pos:start="115:36" pos:end="115:37">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="128:0"><if pos:start="117:5" pos:end="128:0">if <condition pos:start="117:8" pos:end="119:69">(<expr pos:start="117:9" pos:end="119:68"><call pos:start="117:9" pos:end="119:68"><name pos:start="117:9" pos:end="117:19">av_opt_find</name><argument_list pos:start="117:20" pos:end="119:68">(<argument pos:start="117:21" pos:end="117:29"><expr pos:start="117:21" pos:end="117:29"><operator pos:start="117:21" pos:end="117:21">&amp;</operator><name pos:start="117:22" pos:end="117:29">rc_class</name></expr></argument>, <argument pos:start="117:32" pos:end="117:34"><expr pos:start="117:32" pos:end="117:34"><name pos:start="117:32" pos:end="117:34">opt</name></expr></argument>, <argument pos:start="117:37" pos:end="117:40"><expr pos:start="117:37" pos:end="117:40"><name pos:start="117:37" pos:end="117:40">NULL</name></expr></argument>, <argument pos:start="117:43" pos:end="117:43"><expr pos:start="117:43" pos:end="117:43"><literal type="number" pos:start="117:43" pos:end="117:43">0</literal></expr></argument>,

                    <argument pos:start="119:21" pos:end="119:67"><expr pos:start="119:21" pos:end="119:67"><name pos:start="119:21" pos:end="119:42">AV_OPT_SEARCH_CHILDREN</name> <operator pos:start="119:44" pos:end="119:44">|</operator> <name pos:start="119:46" pos:end="119:67">AV_OPT_SEARCH_FAKE_OBJ</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:71" pos:end="128:0">{<block_content pos:start="121:9" pos:end="123:21">

        <expr_stmt pos:start="121:9" pos:end="121:53"><expr pos:start="121:9" pos:end="121:52"><call pos:start="121:9" pos:end="121:52"><name pos:start="121:9" pos:end="121:19">av_dict_set</name><argument_list pos:start="121:20" pos:end="121:52">(<argument pos:start="121:21" pos:end="121:34"><expr pos:start="121:21" pos:end="121:34"><operator pos:start="121:21" pos:end="121:21">&amp;</operator><name pos:start="121:22" pos:end="121:34">resample_opts</name></expr></argument>, <argument pos:start="121:37" pos:end="121:39"><expr pos:start="121:37" pos:end="121:39"><name pos:start="121:37" pos:end="121:39">opt</name></expr></argument>, <argument pos:start="121:42" pos:end="121:44"><expr pos:start="121:42" pos:end="121:44"><name pos:start="121:42" pos:end="121:44">arg</name></expr></argument>, <argument pos:start="121:47" pos:end="121:51"><expr pos:start="121:47" pos:end="121:51"><name pos:start="121:47" pos:end="121:51">FLAGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:21"><expr pos:start="123:9" pos:end="123:20"><name pos:start="123:9" pos:end="123:16">consumed</name> <operator pos:start="123:18" pos:end="123:18">=</operator> <literal type="number" pos:start="123:20" pos:end="123:20">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="127:1" pos:end="127:6">#<cpp:directive pos:start="127:2" pos:end="127:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="131:5" pos:end="133:17"><if pos:start="131:5" pos:end="133:17">if <condition pos:start="131:8" pos:end="131:17">(<expr pos:start="131:9" pos:end="131:16"><name pos:start="131:9" pos:end="131:16">consumed</name></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="133:17"><block_content pos:start="133:9" pos:end="133:17">

        <return pos:start="133:9" pos:end="133:17">return <expr pos:start="133:16" pos:end="133:16"><literal type="number" pos:start="133:16" pos:end="133:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="135:5" pos:end="135:36">return <expr pos:start="135:12" pos:end="135:35"><name pos:start="135:12" pos:end="135:35">AVERROR_OPTION_NOT_FOUND</name></expr>;</return>

</block_content>}</block></function>
</unit>
