<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22799.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:39">scsi_generic_purge_requests</name><parameter_list pos:start="1:40" pos:end="1:60">(<parameter pos:start="1:41" pos:end="1:59"><decl pos:start="1:41" pos:end="1:59"><type pos:start="1:41" pos:end="1:58"><name pos:start="1:41" pos:end="1:56">SCSIGenericState</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:5">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SCSIGenericReq</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">r</name></decl>;</decl_stmt>



    <while pos:start="9:5" pos:end="21:5">while <condition pos:start="9:11" pos:end="9:44">(<expr pos:start="9:12" pos:end="9:43"><operator pos:start="9:12" pos:end="9:12">!</operator><call pos:start="9:13" pos:end="9:43"><name pos:start="9:13" pos:end="9:24">QTAILQ_EMPTY</name><argument_list pos:start="9:25" pos:end="9:43">(<argument pos:start="9:26" pos:end="9:42"><expr pos:start="9:26" pos:end="9:42"><operator pos:start="9:26" pos:end="9:26">&amp;</operator><name pos:start="9:27" pos:end="9:42"><name pos:start="9:27" pos:end="9:27">s</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:33">qdev</name><operator pos:start="9:34" pos:end="9:34">.</operator><name pos:start="9:35" pos:end="9:42">requests</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:46" pos:end="21:5">{<block_content pos:start="11:9" pos:end="19:31">

        <expr_stmt pos:start="11:9" pos:end="11:76"><expr pos:start="11:9" pos:end="11:75"><name pos:start="11:9" pos:end="11:9">r</name> <operator pos:start="11:11" pos:end="11:11">=</operator> <call pos:start="11:13" pos:end="11:75"><name pos:start="11:13" pos:end="11:21">DO_UPCAST</name><argument_list pos:start="11:22" pos:end="11:75">(<argument pos:start="11:23" pos:end="11:36"><expr pos:start="11:23" pos:end="11:36"><name pos:start="11:23" pos:end="11:36">SCSIGenericReq</name></expr></argument>, <argument pos:start="11:39" pos:end="11:41"><expr pos:start="11:39" pos:end="11:41"><name pos:start="11:39" pos:end="11:41">req</name></expr></argument>, <argument pos:start="11:44" pos:end="11:74"><expr pos:start="11:44" pos:end="11:74"><call pos:start="11:44" pos:end="11:74"><name pos:start="11:44" pos:end="11:55">QTAILQ_FIRST</name><argument_list pos:start="11:56" pos:end="11:74">(<argument pos:start="11:57" pos:end="11:73"><expr pos:start="11:57" pos:end="11:73"><operator pos:start="11:57" pos:end="11:57">&amp;</operator><name pos:start="11:58" pos:end="11:73"><name pos:start="11:58" pos:end="11:58">s</name><operator pos:start="11:59" pos:end="11:60">-&gt;</operator><name pos:start="11:61" pos:end="11:64">qdev</name><operator pos:start="11:65" pos:end="11:65">.</operator><name pos:start="11:66" pos:end="11:73">requests</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="13:9" pos:end="17:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:25">(<expr pos:start="13:13" pos:end="13:24"><name pos:start="13:13" pos:end="13:24"><name pos:start="13:13" pos:end="13:13">r</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:18">req</name><operator pos:start="13:19" pos:end="13:19">.</operator><name pos:start="13:20" pos:end="13:24">aiocb</name></name></expr>)</condition> <block pos:start="13:27" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:42">

            <expr_stmt pos:start="15:13" pos:end="15:42"><expr pos:start="15:13" pos:end="15:41"><call pos:start="15:13" pos:end="15:41"><name pos:start="15:13" pos:end="15:27">bdrv_aio_cancel</name><argument_list pos:start="15:28" pos:end="15:41">(<argument pos:start="15:29" pos:end="15:40"><expr pos:start="15:29" pos:end="15:40"><name pos:start="15:29" pos:end="15:40"><name pos:start="15:29" pos:end="15:29">r</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:34">req</name><operator pos:start="15:35" pos:end="15:35">.</operator><name pos:start="15:36" pos:end="15:40">aiocb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:31"><expr pos:start="19:9" pos:end="19:30"><call pos:start="19:9" pos:end="19:30"><name pos:start="19:9" pos:end="19:27">scsi_remove_request</name><argument_list pos:start="19:28" pos:end="19:30">(<argument pos:start="19:29" pos:end="19:29"><expr pos:start="19:29" pos:end="19:29"><name pos:start="19:29" pos:end="19:29">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
