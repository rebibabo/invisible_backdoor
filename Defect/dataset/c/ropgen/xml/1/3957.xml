<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3957.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_stts</name><parameter_list pos:start="1:25" pos:end="1:75">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:53">ByteIOContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">pb</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:74"><decl pos:start="1:60" pos:end="1:74"><type pos:start="1:60" pos:end="1:74"><name pos:start="1:60" pos:end="1:69">MOV_atom_t</name></type> <name pos:start="1:71" pos:end="1:74">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:13">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name> <init pos:start="5:18" pos:end="5:54">= <expr pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:20">c</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:24">fc</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:33">streams</name><index pos:start="5:34" pos:end="5:54">[<expr pos:start="5:35" pos:end="5:53"><name pos:start="5:35" pos:end="5:51"><name pos:start="5:35" pos:end="5:35">c</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:39">fc</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:51">nb_streams</name></name><operator pos:start="5:52" pos:end="5:52">-</operator><literal type="number" pos:start="5:53" pos:end="5:53">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:start="7:5" pos:end="7:63">//MOVStreamContext *sc = (MOVStreamContext *)st-&gt;priv_data;</comment>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">entries</name></decl>, <decl pos:start="9:18" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:20">duration</name><init pos:start="11:21" pos:end="11:22">=<expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:30">total_sample_count</name><init pos:start="13:31" pos:end="13:32">=<expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:29"><expr pos:start="17:5" pos:end="17:28"><call pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:14">print_atom</name><argument_list pos:start="17:15" pos:end="17:28">(<argument pos:start="17:16" pos:end="17:21"><expr pos:start="17:16" pos:end="17:21"><literal type="string" pos:start="17:16" pos:end="17:21">"stts"</literal></expr></argument>, <argument pos:start="17:24" pos:end="17:27"><expr pos:start="17:24" pos:end="17:27"><name pos:start="17:24" pos:end="17:27">atom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:17"><expr pos:start="21:5" pos:end="21:16"><call pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:12">get_byte</name><argument_list pos:start="21:13" pos:end="21:16">(<argument pos:start="21:14" pos:end="21:15"><expr pos:start="21:14" pos:end="21:15"><name pos:start="21:14" pos:end="21:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="21:19" pos:end="21:31">/* version */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><call pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:12">get_byte</name><argument_list pos:start="23:13" pos:end="23:16">(<argument pos:start="23:14" pos:end="23:15"><expr pos:start="23:14" pos:end="23:15"><name pos:start="23:14" pos:end="23:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="23:19" pos:end="23:31"><expr pos:start="23:19" pos:end="23:30"><call pos:start="23:19" pos:end="23:30"><name pos:start="23:19" pos:end="23:26">get_byte</name><argument_list pos:start="23:27" pos:end="23:30">(<argument pos:start="23:28" pos:end="23:29"><expr pos:start="23:28" pos:end="23:29"><name pos:start="23:28" pos:end="23:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="23:33" pos:end="23:45"><expr pos:start="23:33" pos:end="23:44"><call pos:start="23:33" pos:end="23:44"><name pos:start="23:33" pos:end="23:40">get_byte</name><argument_list pos:start="23:41" pos:end="23:44">(<argument pos:start="23:42" pos:end="23:43"><expr pos:start="23:42" pos:end="23:43"><name pos:start="23:42" pos:end="23:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:47" pos:end="23:57">/* flags */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:11">entries</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:26"><name pos:start="25:15" pos:end="25:22">get_be32</name><argument_list pos:start="25:23" pos:end="25:26">(<argument pos:start="25:24" pos:end="25:25"><expr pos:start="25:24" pos:end="25:25"><name pos:start="25:24" pos:end="25:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:58"><expr pos:start="29:5" pos:end="29:57"><name pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:5">c</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:14">streams</name><index pos:start="29:15" pos:end="29:35">[<expr pos:start="29:16" pos:end="29:34"><name pos:start="29:16" pos:end="29:32"><name pos:start="29:16" pos:end="29:16">c</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:20">fc</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:32">nb_streams</name></name><operator pos:start="29:33" pos:end="29:33">-</operator><literal type="number" pos:start="29:34" pos:end="29:34">1</literal></expr>]</index></name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:47">stts_count</name> <operator pos:start="29:49" pos:end="29:49">=</operator> <name pos:start="29:51" pos:end="29:57">entries</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="36:0"><expr pos:start="31:5" pos:end="31:98"><name pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:5">c</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:14">streams</name><index pos:start="31:15" pos:end="31:35">[<expr pos:start="31:16" pos:end="31:34"><name pos:start="31:16" pos:end="31:32"><name pos:start="31:16" pos:end="31:16">c</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:20">fc</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:32">nb_streams</name></name><operator pos:start="31:33" pos:end="31:33">-</operator><literal type="number" pos:start="31:34" pos:end="31:34">1</literal></expr>]</index></name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:46">stts_data</name> <operator pos:start="31:48" pos:end="31:48">=</operator> <operator pos:start="31:50" pos:end="31:50">(</operator><name pos:start="31:51" pos:end="31:58">uint64_t</name><operator pos:start="31:59" pos:end="31:59">*</operator><operator pos:start="31:60" pos:end="31:60">)</operator> <call pos:start="31:62" pos:end="31:98"><name pos:start="31:62" pos:end="31:70">av_malloc</name><argument_list pos:start="31:71" pos:end="31:98">(<argument pos:start="31:72" pos:end="31:97"><expr pos:start="31:72" pos:end="31:97"><name pos:start="31:72" pos:end="31:78">entries</name> <operator pos:start="31:80" pos:end="31:80">*</operator> <sizeof pos:start="31:82" pos:end="31:97">sizeof<argument_list pos:start="31:88" pos:end="31:97">(<argument pos:start="31:89" pos:end="31:96"><expr pos:start="31:89" pos:end="31:96"><name pos:start="31:89" pos:end="31:96">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="35:1" pos:end="35:12">#<cpp:directive pos:start="35:2" pos:end="35:6">ifdef</cpp:directive> <name pos:start="35:8" pos:end="35:12">DEBUG</name></cpp:ifdef>

<expr_stmt pos:start="37:1" pos:end="40:0"><expr pos:start="37:1" pos:end="37:89"><call pos:start="37:1" pos:end="37:89"><name pos:start="37:1" pos:end="37:6">av_log</name><argument_list pos:start="37:7" pos:end="37:89">(<argument pos:start="37:8" pos:end="37:11"><expr pos:start="37:8" pos:end="37:11"><name pos:start="37:8" pos:end="37:11">NULL</name></expr></argument>, <argument pos:start="37:14" pos:end="37:25"><expr pos:start="37:14" pos:end="37:25"><name pos:start="37:14" pos:end="37:25">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="37:28" pos:end="37:58"><expr pos:start="37:28" pos:end="37:58"><literal type="string" pos:start="37:28" pos:end="37:58">"track[%i].stts.entries = %i\n"</literal></expr></argument>, <argument pos:start="37:61" pos:end="37:79"><expr pos:start="37:61" pos:end="37:79"><name pos:start="37:61" pos:end="37:77"><name pos:start="37:61" pos:end="37:61">c</name><operator pos:start="37:62" pos:end="37:63">-&gt;</operator><name pos:start="37:64" pos:end="37:65">fc</name><operator pos:start="37:66" pos:end="37:67">-&gt;</operator><name pos:start="37:68" pos:end="37:77">nb_streams</name></name><operator pos:start="37:78" pos:end="37:78">-</operator><literal type="number" pos:start="37:79" pos:end="37:79">1</literal></expr></argument>, <argument pos:start="37:82" pos:end="37:88"><expr pos:start="37:82" pos:end="37:88"><name pos:start="37:82" pos:end="37:88">entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif>

    <for pos:start="41:5" pos:end="87:5">for<control pos:start="41:8" pos:end="41:28">(<init pos:start="41:9" pos:end="41:12"><expr pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:9">i</name><operator pos:start="41:10" pos:end="41:10">=</operator><literal type="number" pos:start="41:11" pos:end="41:11">0</literal></expr>;</init> <condition pos:start="41:14" pos:end="41:23"><expr pos:start="41:14" pos:end="41:22"><name pos:start="41:14" pos:end="41:14">i</name><operator pos:start="41:15" pos:end="41:15">&lt;</operator><name pos:start="41:16" pos:end="41:22">entries</name></expr>;</condition> <incr pos:start="41:25" pos:end="41:27"><expr pos:start="41:25" pos:end="41:27"><name pos:start="41:25" pos:end="41:25">i</name><operator pos:start="41:26" pos:end="41:27">++</operator></expr></incr>)</control> <block pos:start="41:30" pos:end="87:5">{<block_content pos:start="43:9" pos:end="86:0">

        <decl_stmt pos:start="43:9" pos:end="43:32"><decl pos:start="43:9" pos:end="43:31"><type pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:15">int32_t</name></type> <name pos:start="43:17" pos:end="43:31">sample_duration</name></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:29"><decl pos:start="45:9" pos:end="45:28"><type pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:15">int32_t</name></type> <name pos:start="45:17" pos:end="45:28">sample_count</name></decl>;</decl_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:34"><expr pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:20">sample_count</name><operator pos:start="49:21" pos:end="49:21">=</operator><call pos:start="49:22" pos:end="49:33"><name pos:start="49:22" pos:end="49:29">get_be32</name><argument_list pos:start="49:30" pos:end="49:33">(<argument pos:start="49:31" pos:end="49:32"><expr pos:start="49:31" pos:end="49:32"><name pos:start="49:31" pos:end="49:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:39"><expr pos:start="51:9" pos:end="51:38"><name pos:start="51:9" pos:end="51:23">sample_duration</name> <operator pos:start="51:25" pos:end="51:25">=</operator> <call pos:start="51:27" pos:end="51:38"><name pos:start="51:27" pos:end="51:34">get_be32</name><argument_list pos:start="51:35" pos:end="51:38">(<argument pos:start="51:36" pos:end="51:37"><expr pos:start="51:36" pos:end="51:37"><name pos:start="51:36" pos:end="51:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="56:0"><expr pos:start="53:9" pos:end="53:112"><name pos:start="53:9" pos:end="53:41"><name pos:start="53:9" pos:end="53:9">c</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:18">streams</name><index pos:start="53:19" pos:end="53:41">[<expr pos:start="53:20" pos:end="53:40"><name pos:start="53:20" pos:end="53:36"><name pos:start="53:20" pos:end="53:20">c</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:24">fc</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:36">nb_streams</name></name> <operator pos:start="53:38" pos:end="53:38">-</operator> <literal type="number" pos:start="53:40" pos:end="53:40">1</literal></expr>]</index></name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:55"><name pos:start="53:44" pos:end="53:52">stts_data</name><index pos:start="53:53" pos:end="53:55">[<expr pos:start="53:54" pos:end="53:54"><name pos:start="53:54" pos:end="53:54">i</name></expr>]</index></name> <operator pos:start="53:57" pos:end="53:57">=</operator> <operator pos:start="53:59" pos:end="53:59">(</operator><name pos:start="53:60" pos:end="53:67">uint64_t</name><operator pos:start="53:68" pos:end="53:68">)</operator><name pos:start="53:69" pos:end="53:80">sample_count</name><operator pos:start="53:81" pos:end="53:82">&lt;&lt;</operator><literal type="number" pos:start="53:83" pos:end="53:84">32</literal> <operator pos:start="53:86" pos:end="53:86">|</operator> <operator pos:start="53:88" pos:end="53:88">(</operator><name pos:start="53:89" pos:end="53:96">uint64_t</name><operator pos:start="53:97" pos:end="53:97">)</operator><name pos:start="53:98" pos:end="53:112">sample_duration</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="55:1" pos:end="55:12">#<cpp:directive pos:start="55:2" pos:end="55:6">ifdef</cpp:directive> <name pos:start="55:8" pos:end="55:12">DEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="57:9" pos:end="60:0"><expr pos:start="57:9" pos:end="57:104"><call pos:start="57:9" pos:end="57:104"><name pos:start="57:9" pos:end="57:14">av_log</name><argument_list pos:start="57:15" pos:end="57:104">(<argument pos:start="57:16" pos:end="57:19"><expr pos:start="57:16" pos:end="57:19"><name pos:start="57:16" pos:end="57:19">NULL</name></expr></argument>, <argument pos:start="57:22" pos:end="57:33"><expr pos:start="57:22" pos:end="57:33"><name pos:start="57:22" pos:end="57:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="57:36" pos:end="57:74"><expr pos:start="57:36" pos:end="57:74"><literal type="string" pos:start="57:36" pos:end="57:74">"sample_count=%d, sample_duration=%d\n"</literal></expr></argument>,<argument pos:start="57:76" pos:end="57:87"><expr pos:start="57:76" pos:end="57:87"><name pos:start="57:76" pos:end="57:87">sample_count</name></expr></argument>,<argument pos:start="57:89" pos:end="57:103"><expr pos:start="57:89" pos:end="57:103"><name pos:start="57:89" pos:end="57:103">sample_duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="59:1" pos:end="59:6">#<cpp:directive pos:start="59:2" pos:end="59:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="61:9" pos:end="61:47"><expr pos:start="61:9" pos:end="61:46"><name pos:start="61:9" pos:end="61:16">duration</name><operator pos:start="61:17" pos:end="61:18">+=</operator><name pos:start="61:19" pos:end="61:33">sample_duration</name><operator pos:start="61:34" pos:end="61:34">*</operator><name pos:start="61:35" pos:end="61:46">sample_count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="86:0"><expr pos:start="63:9" pos:end="63:40"><name pos:start="63:9" pos:end="63:26">total_sample_count</name><operator pos:start="63:27" pos:end="63:28">+=</operator><name pos:start="63:29" pos:end="63:40">sample_count</name></expr>;</expr_stmt>



<cpp:if pos:start="67:1" pos:end="67:5">#<cpp:directive pos:start="67:2" pos:end="67:3">if</cpp:directive> <expr pos:start="67:5" pos:end="67:5"><literal type="number" pos:start="67:5" pos:end="67:5">0</literal></expr></cpp:if> <comment type="line" pos:start="67:7" pos:end="67:92">//We calculate an average instead, needed by .mp4-files created with nec e606 3g phone</comment>



        if (!i &amp;&amp; st-&gt;codec.codec_type==CODEC_TYPE_VIDEO) {

            st-&gt;codec.frame_rate_base = sample_duration ? sample_duration : 1;

            st-&gt;codec.frame_rate = c-&gt;streams[c-&gt;fc-&gt;nb_streams-1]-&gt;time_scale;

<cpp:ifdef pos:start="77:1" pos:end="77:12">#<cpp:directive pos:start="77:2" pos:end="77:6">ifdef</cpp:directive> <name pos:start="77:8" pos:end="77:12">DEBUG</name></cpp:ifdef>

            av_log(NULL, AV_LOG_DEBUG, "VIDEO FRAME RATE= %i (sd= %i)\n", st-&gt;codec.frame_rate, sample_duration);

<cpp:endif pos:start="81:1" pos:end="81:6">#<cpp:directive pos:start="81:2" pos:end="81:6">endif</cpp:directive></cpp:endif>

        }

<cpp:endif pos:start="85:1" pos:end="85:6">#<cpp:directive pos:start="85:2" pos:end="85:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></for>



    <comment type="block" pos:start="91:5" pos:end="91:111">/*The stsd atom which contain codec type sometimes comes after the stts so we cannot check for codec_type*/</comment>

    <if_stmt pos:start="93:5" pos:end="129:5"><if pos:start="93:5" pos:end="119:5">if<condition pos:start="93:7" pos:end="93:18">(<expr pos:start="93:8" pos:end="93:17"><name pos:start="93:8" pos:end="93:15">duration</name><operator pos:start="93:16" pos:end="93:16">&gt;</operator><literal type="number" pos:start="93:17" pos:end="93:17">0</literal></expr>)</condition>

    <block pos:start="95:5" pos:end="119:5">{<block_content pos:start="97:9" pos:end="118:0">

        <expr_stmt pos:start="97:9" pos:end="114:0"><expr pos:start="97:9" pos:end="109:9"><call pos:start="97:9" pos:end="109:9"><name pos:start="97:9" pos:end="97:17">av_reduce</name><argument_list pos:start="97:18" pos:end="109:9">(

            <argument pos:start="99:13" pos:end="99:33"><expr pos:start="99:13" pos:end="99:33"><operator pos:start="99:13" pos:end="99:13">&amp;</operator><name pos:start="99:14" pos:end="99:33"><name pos:start="99:14" pos:end="99:15">st</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:22">codec</name><operator pos:start="99:23" pos:end="99:23">.</operator><name pos:start="99:24" pos:end="99:33">frame_rate</name></name></expr></argument>, 

            <argument pos:start="101:13" pos:end="101:38"><expr pos:start="101:13" pos:end="101:38"><operator pos:start="101:13" pos:end="101:13">&amp;</operator><name pos:start="101:14" pos:end="101:38"><name pos:start="101:14" pos:end="101:15">st</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:22">codec</name><operator pos:start="101:23" pos:end="101:23">.</operator><name pos:start="101:24" pos:end="101:38">frame_rate_base</name></name></expr></argument>, 

            <argument pos:start="103:13" pos:end="103:76"><expr pos:start="103:13" pos:end="103:76"><name pos:start="103:13" pos:end="103:43"><name pos:start="103:13" pos:end="103:13">c</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:22">streams</name><index pos:start="103:23" pos:end="103:43">[<expr pos:start="103:24" pos:end="103:42"><name pos:start="103:24" pos:end="103:40"><name pos:start="103:24" pos:end="103:24">c</name><operator pos:start="103:25" pos:end="103:26">-&gt;</operator><name pos:start="103:27" pos:end="103:28">fc</name><operator pos:start="103:29" pos:end="103:30">-&gt;</operator><name pos:start="103:31" pos:end="103:40">nb_streams</name></name><operator pos:start="103:41" pos:end="103:41">-</operator><literal type="number" pos:start="103:42" pos:end="103:42">1</literal></expr>]</index></name><operator pos:start="103:44" pos:end="103:45">-&gt;</operator><name pos:start="103:46" pos:end="103:55">time_scale</name> <operator pos:start="103:57" pos:end="103:57">*</operator> <name pos:start="103:59" pos:end="103:76">total_sample_count</name></expr></argument>,

            <argument pos:start="105:13" pos:end="105:20"><expr pos:start="105:13" pos:end="105:20"><name pos:start="105:13" pos:end="105:20">duration</name></expr></argument>,

            <argument pos:start="107:13" pos:end="107:19"><expr pos:start="107:13" pos:end="107:19"><name pos:start="107:13" pos:end="107:19">INT_MAX</name></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="113:1" pos:end="113:12">#<cpp:directive pos:start="113:2" pos:end="113:6">ifdef</cpp:directive> <name pos:start="113:8" pos:end="113:12">DEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="115:9" pos:end="118:0"><expr pos:start="115:9" pos:end="115:255"><call pos:start="115:9" pos:end="115:255"><name pos:start="115:9" pos:end="115:14">av_log</name><argument_list pos:start="115:15" pos:end="115:255">(<argument pos:start="115:16" pos:end="115:19"><expr pos:start="115:16" pos:end="115:19"><name pos:start="115:16" pos:end="115:19">NULL</name></expr></argument>, <argument pos:start="115:22" pos:end="115:33"><expr pos:start="115:22" pos:end="115:33"><name pos:start="115:22" pos:end="115:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="115:36" pos:end="115:127"><expr pos:start="115:36" pos:end="115:127"><literal type="string" pos:start="115:36" pos:end="115:127">"FRAME RATE average (video or audio)= %f (tot sample count= %i ,tot dur= %i timescale=%d)\n"</literal></expr></argument>, <argument pos:start="115:130" pos:end="115:182"><expr pos:start="115:130" pos:end="115:182"><operator pos:start="115:130" pos:end="115:130">(</operator><name pos:start="115:131" pos:end="115:135">float</name><operator pos:start="115:136" pos:end="115:136">)</operator><name pos:start="115:137" pos:end="115:156"><name pos:start="115:137" pos:end="115:138">st</name><operator pos:start="115:139" pos:end="115:140">-&gt;</operator><name pos:start="115:141" pos:end="115:145">codec</name><operator pos:start="115:146" pos:end="115:146">.</operator><name pos:start="115:147" pos:end="115:156">frame_rate</name></name><operator pos:start="115:157" pos:end="115:157">/</operator><name pos:start="115:158" pos:end="115:182"><name pos:start="115:158" pos:end="115:159">st</name><operator pos:start="115:160" pos:end="115:161">-&gt;</operator><name pos:start="115:162" pos:end="115:166">codec</name><operator pos:start="115:167" pos:end="115:167">.</operator><name pos:start="115:168" pos:end="115:182">frame_rate_base</name></name></expr></argument>,<argument pos:start="115:184" pos:end="115:201"><expr pos:start="115:184" pos:end="115:201"><name pos:start="115:184" pos:end="115:201">total_sample_count</name></expr></argument>,<argument pos:start="115:203" pos:end="115:210"><expr pos:start="115:203" pos:end="115:210"><name pos:start="115:203" pos:end="115:210">duration</name></expr></argument>,<argument pos:start="115:212" pos:end="115:254"><expr pos:start="115:212" pos:end="115:254"><name pos:start="115:212" pos:end="115:242"><name pos:start="115:212" pos:end="115:212">c</name><operator pos:start="115:213" pos:end="115:214">-&gt;</operator><name pos:start="115:215" pos:end="115:221">streams</name><index pos:start="115:222" pos:end="115:242">[<expr pos:start="115:223" pos:end="115:241"><name pos:start="115:223" pos:end="115:239"><name pos:start="115:223" pos:end="115:223">c</name><operator pos:start="115:224" pos:end="115:225">-&gt;</operator><name pos:start="115:226" pos:end="115:227">fc</name><operator pos:start="115:228" pos:end="115:229">-&gt;</operator><name pos:start="115:230" pos:end="115:239">nb_streams</name></name><operator pos:start="115:240" pos:end="115:240">-</operator><literal type="number" pos:start="115:241" pos:end="115:241">1</literal></expr>]</index></name><operator pos:start="115:243" pos:end="115:244">-&gt;</operator><name pos:start="115:245" pos:end="115:254">time_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="117:1" pos:end="117:6">#<cpp:directive pos:start="117:2" pos:end="117:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if>

    <else pos:start="121:5" pos:end="129:5">else

    <block pos:start="123:5" pos:end="129:5">{<block_content pos:start="125:9" pos:end="127:75">

        <expr_stmt pos:start="125:9" pos:end="125:38"><expr pos:start="125:9" pos:end="125:37"><name pos:start="125:9" pos:end="125:33"><name pos:start="125:9" pos:end="125:10">st</name><operator pos:start="125:11" pos:end="125:12">-&gt;</operator><name pos:start="125:13" pos:end="125:17">codec</name><operator pos:start="125:18" pos:end="125:18">.</operator><name pos:start="125:19" pos:end="125:33">frame_rate_base</name></name> <operator pos:start="125:35" pos:end="125:35">=</operator> <literal type="number" pos:start="125:37" pos:end="125:37">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:75"><expr pos:start="127:9" pos:end="127:74"><name pos:start="127:9" pos:end="127:28"><name pos:start="127:9" pos:end="127:10">st</name><operator pos:start="127:11" pos:end="127:12">-&gt;</operator><name pos:start="127:13" pos:end="127:17">codec</name><operator pos:start="127:18" pos:end="127:18">.</operator><name pos:start="127:19" pos:end="127:28">frame_rate</name></name> <operator pos:start="127:30" pos:end="127:30">=</operator> <name pos:start="127:32" pos:end="127:62"><name pos:start="127:32" pos:end="127:32">c</name><operator pos:start="127:33" pos:end="127:34">-&gt;</operator><name pos:start="127:35" pos:end="127:41">streams</name><index pos:start="127:42" pos:end="127:62">[<expr pos:start="127:43" pos:end="127:61"><name pos:start="127:43" pos:end="127:59"><name pos:start="127:43" pos:end="127:43">c</name><operator pos:start="127:44" pos:end="127:45">-&gt;</operator><name pos:start="127:46" pos:end="127:47">fc</name><operator pos:start="127:48" pos:end="127:49">-&gt;</operator><name pos:start="127:50" pos:end="127:59">nb_streams</name></name><operator pos:start="127:60" pos:end="127:60">-</operator><literal type="number" pos:start="127:61" pos:end="127:61">1</literal></expr>]</index></name><operator pos:start="127:63" pos:end="127:64">-&gt;</operator><name pos:start="127:65" pos:end="127:74">time_scale</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="131:5" pos:end="131:13">return <expr pos:start="131:12" pos:end="131:12"><literal type="number" pos:start="131:12" pos:end="131:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
