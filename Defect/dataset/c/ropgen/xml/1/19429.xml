<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19429.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">do_subtitle_out</name><parameter_list pos:start="1:28" pos:end="7:44">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:45"><decl pos:start="3:29" pos:end="3:45"><type pos:start="3:29" pos:end="3:45"><name pos:start="3:29" pos:end="3:40">OutputStream</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:45">ost</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:44"><decl pos:start="5:29" pos:end="5:44"><type pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:39">InputStream</name> <modifier pos:start="5:41" pos:end="5:41">*</modifier></type><name pos:start="5:42" pos:end="5:44">ist</name></decl></parameter>,

                            <parameter pos:start="7:29" pos:end="7:43"><decl pos:start="7:29" pos:end="7:43"><type pos:start="7:29" pos:end="7:43"><name pos:start="7:29" pos:end="7:38">AVSubtitle</name> <modifier pos:start="7:40" pos:end="7:40">*</modifier></type><name pos:start="7:41" pos:end="7:43">sub</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="165:1">{<block_content pos:start="11:5" pos:end="163:5">

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:29">subtitle_out_max_size</name> <init pos:start="11:31" pos:end="11:43">= <expr pos:start="11:33" pos:end="11:43"><literal type="number" pos:start="11:33" pos:end="11:36">1024</literal> <operator pos:start="11:38" pos:end="11:38">*</operator> <literal type="number" pos:start="11:40" pos:end="11:43">1024</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:25">subtitle_out_size</name></decl>, <decl pos:start="13:28" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:28" pos:end="13:29">nb</name></decl>, <decl pos:start="13:32" pos:end="13:32"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:32" pos:end="13:32">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">AVCodecContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:23">enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">AVPacket</name></type> <name pos:start="17:14" pos:end="17:16">pkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int64_t</name></type> <name pos:start="19:13" pos:end="19:15">pts</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if <condition pos:start="23:8" pos:end="23:35">(<expr pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:11">sub</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:16">pts</name></name> <operator pos:start="23:18" pos:end="23:19">==</operator> <name pos:start="23:21" pos:end="23:34">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="23:37" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:15">

        <expr_stmt pos:start="25:9" pos:end="25:73"><expr pos:start="25:9" pos:end="25:72"><call pos:start="25:9" pos:end="25:72"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:72">(<argument pos:start="25:16" pos:end="25:19"><expr pos:start="25:16" pos:end="25:19"><name pos:start="25:16" pos:end="25:19">NULL</name></expr></argument>, <argument pos:start="25:22" pos:end="25:33"><expr pos:start="25:22" pos:end="25:33"><name pos:start="25:22" pos:end="25:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:36" pos:end="25:71"><expr pos:start="25:36" pos:end="25:71"><literal type="string" pos:start="25:36" pos:end="25:71">"Subtitle packets must have a pts\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:28"><if pos:start="27:9" pos:end="29:28">if <condition pos:start="27:12" pos:end="27:26">(<expr pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:25">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:28"><block_content pos:start="29:13" pos:end="29:28">

            <expr_stmt pos:start="29:13" pos:end="29:28"><expr pos:start="29:13" pos:end="29:27"><call pos:start="29:13" pos:end="29:27"><name pos:start="29:13" pos:end="29:24">exit_program</name><argument_list pos:start="29:25" pos:end="29:27">(<argument pos:start="29:26" pos:end="29:26"><expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:23"><expr pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:7">enc</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <name pos:start="37:11" pos:end="37:22"><name pos:start="37:11" pos:end="37:13">ost</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:22">enc_ctx</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="53:5"><if pos:start="41:5" pos:end="53:5">if <condition pos:start="41:8" pos:end="41:22">(<expr pos:start="41:9" pos:end="41:21"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:21">subtitle_out</name></expr>)</condition> <block pos:start="41:24" pos:end="53:5">{<block_content pos:start="43:9" pos:end="51:9">

        <expr_stmt pos:start="43:9" pos:end="43:56"><expr pos:start="43:9" pos:end="43:55"><name pos:start="43:9" pos:end="43:20">subtitle_out</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <call pos:start="43:24" pos:end="43:55"><name pos:start="43:24" pos:end="43:32">av_malloc</name><argument_list pos:start="43:33" pos:end="43:55">(<argument pos:start="43:34" pos:end="43:54"><expr pos:start="43:34" pos:end="43:54"><name pos:start="43:34" pos:end="43:54">subtitle_out_max_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:26">(<expr pos:start="45:13" pos:end="45:25"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:25">subtitle_out</name></expr>)</condition> <block pos:start="45:28" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:28">

            <expr_stmt pos:start="47:13" pos:end="47:76"><expr pos:start="47:13" pos:end="47:75"><call pos:start="47:13" pos:end="47:75"><name pos:start="47:13" pos:end="47:18">av_log</name><argument_list pos:start="47:19" pos:end="47:75">(<argument pos:start="47:20" pos:end="47:23"><expr pos:start="47:20" pos:end="47:23"><name pos:start="47:20" pos:end="47:23">NULL</name></expr></argument>, <argument pos:start="47:26" pos:end="47:37"><expr pos:start="47:26" pos:end="47:37"><name pos:start="47:26" pos:end="47:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="47:40" pos:end="47:74"><expr pos:start="47:40" pos:end="47:74"><literal type="string" pos:start="47:40" pos:end="47:74">"Failed to allocate subtitle_out\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:28"><expr pos:start="49:13" pos:end="49:27"><call pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:24">exit_program</name><argument_list pos:start="49:25" pos:end="49:27">(<argument pos:start="49:26" pos:end="49:26"><expr pos:start="49:26" pos:end="49:26"><literal type="number" pos:start="49:26" pos:end="49:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="59:30">/* Note: DVB subtitle need one packet to draw them and one other

       packet to clear them */</comment>

    <comment type="block" pos:start="61:5" pos:end="61:47">/* XXX: signal it in the codec context ? */</comment>

    <if_stmt pos:start="63:5" pos:end="69:15"><if pos:start="63:5" pos:end="65:15">if <condition pos:start="63:8" pos:end="63:50">(<expr pos:start="63:9" pos:end="63:49"><name pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:11">enc</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:21">codec_id</name></name> <operator pos:start="63:23" pos:end="63:24">==</operator> <name pos:start="63:26" pos:end="63:49">AV_CODEC_ID_DVB_SUBTITLE</name></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:15"><block_content pos:start="65:9" pos:end="65:15">

        <expr_stmt pos:start="65:9" pos:end="65:15"><expr pos:start="65:9" pos:end="65:14"><name pos:start="65:9" pos:end="65:10">nb</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <literal type="number" pos:start="65:14" pos:end="65:14">2</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="67:5" pos:end="69:15">else<block type="pseudo" pos:start="69:9" pos:end="69:15"><block_content pos:start="69:9" pos:end="69:15">

        <expr_stmt pos:start="69:9" pos:end="69:15"><expr pos:start="69:9" pos:end="69:14"><name pos:start="69:9" pos:end="69:10">nb</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <literal type="number" pos:start="69:14" pos:end="69:14">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:83">/* shift timestamp to honor -ss and make check_recording_time() work with -t */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:19"><expr pos:start="75:5" pos:end="75:18"><name pos:start="75:5" pos:end="75:7">pts</name> <operator pos:start="75:9" pos:end="75:9">=</operator> <name pos:start="75:11" pos:end="75:18"><name pos:start="75:11" pos:end="75:13">sub</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:18">pts</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="79:57"><if pos:start="77:5" pos:end="79:57">if <condition pos:start="77:8" pos:end="77:68">(<expr pos:start="77:9" pos:end="77:67"><name pos:start="77:9" pos:end="77:37"><name pos:start="77:9" pos:end="77:20">output_files</name><index pos:start="77:21" pos:end="77:37">[<expr pos:start="77:22" pos:end="77:36"><name pos:start="77:22" pos:end="77:36"><name pos:start="77:22" pos:end="77:24">ost</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:36">file_index</name></name></expr>]</index></name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:49">start_time</name> <operator pos:start="77:51" pos:end="77:52">!=</operator> <name pos:start="77:54" pos:end="77:67">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:57"><block_content pos:start="79:9" pos:end="79:57">

        <expr_stmt pos:start="79:9" pos:end="79:57"><expr pos:start="79:9" pos:end="79:56"><name pos:start="79:9" pos:end="79:11">pts</name> <operator pos:start="79:13" pos:end="79:14">-=</operator> <name pos:start="79:16" pos:end="79:44"><name pos:start="79:16" pos:end="79:27">output_files</name><index pos:start="79:28" pos:end="79:44">[<expr pos:start="79:29" pos:end="79:43"><name pos:start="79:29" pos:end="79:43"><name pos:start="79:29" pos:end="79:31">ost</name><operator pos:start="79:32" pos:end="79:33">-&gt;</operator><name pos:start="79:34" pos:end="79:43">file_index</name></name></expr>]</index></name><operator pos:start="79:45" pos:end="79:46">-&gt;</operator><name pos:start="79:47" pos:end="79:56">start_time</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="81:5" pos:end="163:5">for <control pos:start="81:9" pos:end="81:28">(<init pos:start="81:10" pos:end="81:15"><expr pos:start="81:10" pos:end="81:14"><name pos:start="81:10" pos:end="81:10">i</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <literal type="number" pos:start="81:14" pos:end="81:14">0</literal></expr>;</init> <condition pos:start="81:17" pos:end="81:23"><expr pos:start="81:17" pos:end="81:22"><name pos:start="81:17" pos:end="81:17">i</name> <operator pos:start="81:19" pos:end="81:19">&lt;</operator> <name pos:start="81:21" pos:end="81:22">nb</name></expr>;</condition> <incr pos:start="81:25" pos:end="81:27"><expr pos:start="81:25" pos:end="81:27"><name pos:start="81:25" pos:end="81:25">i</name><operator pos:start="81:26" pos:end="81:27">++</operator></expr></incr>)</control> <block pos:start="81:30" pos:end="163:5">{<block_content pos:start="83:9" pos:end="161:34">

        <decl_stmt pos:start="83:9" pos:end="83:49"><decl pos:start="83:9" pos:end="83:48"><type pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:16">unsigned</name></type> <name pos:start="83:18" pos:end="83:31">save_num_rects</name> <init pos:start="83:33" pos:end="83:48">= <expr pos:start="83:35" pos:end="83:48"><name pos:start="83:35" pos:end="83:48"><name pos:start="83:35" pos:end="83:37">sub</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:48">num_rects</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:75"><expr pos:start="87:9" pos:end="87:74"><name pos:start="87:9" pos:end="87:22"><name pos:start="87:9" pos:end="87:11">ost</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:22">sync_opts</name></name> <operator pos:start="87:24" pos:end="87:24">=</operator> <call pos:start="87:26" pos:end="87:74"><name pos:start="87:26" pos:end="87:37">av_rescale_q</name><argument_list pos:start="87:38" pos:end="87:74">(<argument pos:start="87:39" pos:end="87:41"><expr pos:start="87:39" pos:end="87:41"><name pos:start="87:39" pos:end="87:41">pts</name></expr></argument>, <argument pos:start="87:44" pos:end="87:57"><expr pos:start="87:44" pos:end="87:57"><name pos:start="87:44" pos:end="87:57">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="87:60" pos:end="87:73"><expr pos:start="87:60" pos:end="87:73"><name pos:start="87:60" pos:end="87:73"><name pos:start="87:60" pos:end="87:62">enc</name><operator pos:start="87:63" pos:end="87:64">-&gt;</operator><name pos:start="87:65" pos:end="87:73">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="91:19"><if pos:start="89:9" pos:end="91:19">if <condition pos:start="89:12" pos:end="89:39">(<expr pos:start="89:13" pos:end="89:38"><operator pos:start="89:13" pos:end="89:13">!</operator><call pos:start="89:14" pos:end="89:38"><name pos:start="89:14" pos:end="89:33">check_recording_time</name><argument_list pos:start="89:34" pos:end="89:38">(<argument pos:start="89:35" pos:end="89:37"><expr pos:start="89:35" pos:end="89:37"><name pos:start="89:35" pos:end="89:37">ost</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:19"><block_content pos:start="91:13" pos:end="91:19">

            <return pos:start="91:13" pos:end="91:19">return;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="95:9" pos:end="95:23"><expr pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:16"><name pos:start="95:9" pos:end="95:11">sub</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:16">pts</name></name> <operator pos:start="95:18" pos:end="95:18">=</operator> <name pos:start="95:20" pos:end="95:22">pts</name></expr>;</expr_stmt>

        <comment type="line" pos:start="97:9" pos:end="97:49">// start_display_time is required to be 0</comment>

        <expr_stmt pos:start="99:9" pos:end="99:113"><expr pos:start="99:9" pos:end="99:112"><name pos:start="99:9" pos:end="99:16"><name pos:start="99:9" pos:end="99:11">sub</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:16">pts</name></name>               <operator pos:start="99:32" pos:end="99:33">+=</operator> <macro pos:start="99:35" pos:end="99:112"><name pos:start="99:35" pos:end="99:46">av_rescale_q</name><argument_list pos:start="99:47" pos:end="99:112">(<argument pos:start="99:48" pos:end="99:70">sub-&gt;start_display_time</argument>, <argument pos:start="99:73" pos:end="99:87">(AVRational){ <literal type="number" pos:start="99:87" pos:end="99:87">1</literal></argument>, <argument pos:start="99:90" pos:end="99:95"><literal type="number" pos:start="99:90" pos:end="99:93">1000</literal> }</argument>, <argument pos:start="99:98" pos:end="99:111">AV_TIME_BASE_Q</argument>)</argument_list></macro></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:58"><expr pos:start="101:9" pos:end="101:57"><name pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:11">sub</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:29">end_display_time</name></name>  <operator pos:start="101:32" pos:end="101:33">-=</operator> <name pos:start="101:35" pos:end="101:57"><name pos:start="101:35" pos:end="101:37">sub</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:57">start_display_time</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:36"><expr pos:start="103:9" pos:end="103:35"><name pos:start="103:9" pos:end="103:31"><name pos:start="103:9" pos:end="103:11">sub</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:31">start_display_time</name></name> <operator pos:start="103:33" pos:end="103:33">=</operator> <literal type="number" pos:start="103:35" pos:end="103:35">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="107:31"><if pos:start="105:9" pos:end="107:31">if <condition pos:start="105:12" pos:end="105:19">(<expr pos:start="105:13" pos:end="105:18"><name pos:start="105:13" pos:end="105:13">i</name> <operator pos:start="105:15" pos:end="105:16">==</operator> <literal type="number" pos:start="105:18" pos:end="105:18">1</literal></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:31"><block_content pos:start="107:13" pos:end="107:31">

            <expr_stmt pos:start="107:13" pos:end="107:31"><expr pos:start="107:13" pos:end="107:30"><name pos:start="107:13" pos:end="107:26"><name pos:start="107:13" pos:end="107:15">sub</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:26">num_rects</name></name> <operator pos:start="107:28" pos:end="107:28">=</operator> <literal type="number" pos:start="107:30" pos:end="107:30">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:30"><expr pos:start="111:9" pos:end="111:29"><name pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:11">ost</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:27">frames_encoded</name></name><operator pos:start="111:28" pos:end="111:29">++</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="115:9" pos:end="117:80"><expr pos:start="115:9" pos:end="117:79"><name pos:start="115:9" pos:end="115:25">subtitle_out_size</name> <operator pos:start="115:27" pos:end="115:27">=</operator> <call pos:start="115:29" pos:end="117:79"><name pos:start="115:29" pos:end="115:51">avcodec_encode_subtitle</name><argument_list pos:start="115:52" pos:end="117:79">(<argument pos:start="115:53" pos:end="115:55"><expr pos:start="115:53" pos:end="115:55"><name pos:start="115:53" pos:end="115:55">enc</name></expr></argument>, <argument pos:start="115:58" pos:end="115:69"><expr pos:start="115:58" pos:end="115:69"><name pos:start="115:58" pos:end="115:69">subtitle_out</name></expr></argument>,

                                                    <argument pos:start="117:53" pos:end="117:73"><expr pos:start="117:53" pos:end="117:73"><name pos:start="117:53" pos:end="117:73">subtitle_out_max_size</name></expr></argument>, <argument pos:start="117:76" pos:end="117:78"><expr pos:start="117:76" pos:end="117:78"><name pos:start="117:76" pos:end="117:78">sub</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="119:9" pos:end="121:44"><if pos:start="119:9" pos:end="121:44">if <condition pos:start="119:12" pos:end="119:19">(<expr pos:start="119:13" pos:end="119:18"><name pos:start="119:13" pos:end="119:13">i</name> <operator pos:start="119:15" pos:end="119:16">==</operator> <literal type="number" pos:start="119:18" pos:end="119:18">1</literal></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:44"><block_content pos:start="121:13" pos:end="121:44">

            <expr_stmt pos:start="121:13" pos:end="121:44"><expr pos:start="121:13" pos:end="121:43"><name pos:start="121:13" pos:end="121:26"><name pos:start="121:13" pos:end="121:15">sub</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:26">num_rects</name></name> <operator pos:start="121:28" pos:end="121:28">=</operator> <name pos:start="121:30" pos:end="121:43">save_num_rects</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="123:9" pos:end="129:9"><if pos:start="123:9" pos:end="129:9">if <condition pos:start="123:12" pos:end="123:34">(<expr pos:start="123:13" pos:end="123:33"><name pos:start="123:13" pos:end="123:29">subtitle_out_size</name> <operator pos:start="123:31" pos:end="123:31">&lt;</operator> <literal type="number" pos:start="123:33" pos:end="123:33">0</literal></expr>)</condition> <block pos:start="123:36" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:28">

            <expr_stmt pos:start="125:13" pos:end="125:69"><expr pos:start="125:13" pos:end="125:68"><call pos:start="125:13" pos:end="125:68"><name pos:start="125:13" pos:end="125:18">av_log</name><argument_list pos:start="125:19" pos:end="125:68">(<argument pos:start="125:20" pos:end="125:23"><expr pos:start="125:20" pos:end="125:23"><name pos:start="125:20" pos:end="125:23">NULL</name></expr></argument>, <argument pos:start="125:26" pos:end="125:37"><expr pos:start="125:26" pos:end="125:37"><name pos:start="125:26" pos:end="125:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="125:40" pos:end="125:67"><expr pos:start="125:40" pos:end="125:67"><literal type="string" pos:start="125:40" pos:end="125:67">"Subtitle encoding failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:28"><expr pos:start="127:13" pos:end="127:27"><call pos:start="127:13" pos:end="127:27"><name pos:start="127:13" pos:end="127:24">exit_program</name><argument_list pos:start="127:25" pos:end="127:27">(<argument pos:start="127:26" pos:end="127:26"><expr pos:start="127:26" pos:end="127:26"><literal type="number" pos:start="127:26" pos:end="127:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:29"><expr pos:start="133:9" pos:end="133:28"><call pos:start="133:9" pos:end="133:28"><name pos:start="133:9" pos:end="133:22">av_init_packet</name><argument_list pos:start="133:23" pos:end="133:28">(<argument pos:start="133:24" pos:end="133:27"><expr pos:start="133:24" pos:end="133:27"><operator pos:start="133:24" pos:end="133:24">&amp;</operator><name pos:start="133:25" pos:end="133:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:32"><expr pos:start="135:9" pos:end="135:31"><name pos:start="135:9" pos:end="135:16"><name pos:start="135:9" pos:end="135:11">pkt</name><operator pos:start="135:12" pos:end="135:12">.</operator><name pos:start="135:13" pos:end="135:16">data</name></name> <operator pos:start="135:18" pos:end="135:18">=</operator> <name pos:start="135:20" pos:end="135:31">subtitle_out</name></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:37"><expr pos:start="137:9" pos:end="137:36"><name pos:start="137:9" pos:end="137:16"><name pos:start="137:9" pos:end="137:11">pkt</name><operator pos:start="137:12" pos:end="137:12">.</operator><name pos:start="137:13" pos:end="137:16">size</name></name> <operator pos:start="137:18" pos:end="137:18">=</operator> <name pos:start="137:20" pos:end="137:36">subtitle_out_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:78"><expr pos:start="139:9" pos:end="139:77"><name pos:start="139:9" pos:end="139:15"><name pos:start="139:9" pos:end="139:11">pkt</name><operator pos:start="139:12" pos:end="139:12">.</operator><name pos:start="139:13" pos:end="139:15">pts</name></name>  <operator pos:start="139:18" pos:end="139:18">=</operator> <call pos:start="139:20" pos:end="139:77"><name pos:start="139:20" pos:end="139:31">av_rescale_q</name><argument_list pos:start="139:32" pos:end="139:77">(<argument pos:start="139:33" pos:end="139:40"><expr pos:start="139:33" pos:end="139:40"><name pos:start="139:33" pos:end="139:40"><name pos:start="139:33" pos:end="139:35">sub</name><operator pos:start="139:36" pos:end="139:37">-&gt;</operator><name pos:start="139:38" pos:end="139:40">pts</name></name></expr></argument>, <argument pos:start="139:43" pos:end="139:56"><expr pos:start="139:43" pos:end="139:56"><name pos:start="139:43" pos:end="139:56">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="139:59" pos:end="139:76"><expr pos:start="139:59" pos:end="139:76"><name pos:start="139:59" pos:end="139:76"><name pos:start="139:59" pos:end="139:61">ost</name><operator pos:start="139:62" pos:end="139:63">-&gt;</operator><name pos:start="139:64" pos:end="139:65">st</name><operator pos:start="139:66" pos:end="139:67">-&gt;</operator><name pos:start="139:68" pos:end="139:76">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:104"><expr pos:start="141:9" pos:end="141:103"><name pos:start="141:9" pos:end="141:20"><name pos:start="141:9" pos:end="141:11">pkt</name><operator pos:start="141:12" pos:end="141:12">.</operator><name pos:start="141:13" pos:end="141:20">duration</name></name> <operator pos:start="141:22" pos:end="141:22">=</operator> <macro pos:start="141:24" pos:end="141:103"><name pos:start="141:24" pos:end="141:35">av_rescale_q</name><argument_list pos:start="141:36" pos:end="141:103">(<argument pos:start="141:37" pos:end="141:57">sub-&gt;end_display_time</argument>, <argument pos:start="141:60" pos:end="141:74">(AVRational){ <literal type="number" pos:start="141:74" pos:end="141:74">1</literal></argument>, <argument pos:start="141:77" pos:end="141:82"><literal type="number" pos:start="141:77" pos:end="141:80">1000</literal> }</argument>, <argument pos:start="141:85" pos:end="141:102">ost-&gt;st-&gt;time_base</argument>)</argument_list></macro></expr>;</expr_stmt>

        <if_stmt pos:start="143:9" pos:end="157:9"><if pos:start="143:9" pos:end="157:9">if <condition pos:start="143:12" pos:end="143:54">(<expr pos:start="143:13" pos:end="143:53"><name pos:start="143:13" pos:end="143:25"><name pos:start="143:13" pos:end="143:15">enc</name><operator pos:start="143:16" pos:end="143:17">-&gt;</operator><name pos:start="143:18" pos:end="143:25">codec_id</name></name> <operator pos:start="143:27" pos:end="143:28">==</operator> <name pos:start="143:30" pos:end="143:53">AV_CODEC_ID_DVB_SUBTITLE</name></expr>)</condition> <block pos:start="143:56" pos:end="157:9">{<block_content pos:start="149:13" pos:end="155:54">

            <comment type="block" pos:start="145:13" pos:end="147:49">/* XXX: the pts correction is handled here. Maybe handling

               it in the codec would be better */</comment>

            <if_stmt pos:start="149:13" pos:end="155:54"><if pos:start="149:13" pos:end="151:56">if <condition pos:start="149:16" pos:end="149:23">(<expr pos:start="149:17" pos:end="149:22"><name pos:start="149:17" pos:end="149:17">i</name> <operator pos:start="149:19" pos:end="149:20">==</operator> <literal type="number" pos:start="149:22" pos:end="149:22">0</literal></expr>)</condition><block type="pseudo" pos:start="151:17" pos:end="151:56"><block_content pos:start="151:17" pos:end="151:56">

                <expr_stmt pos:start="151:17" pos:end="151:56"><expr pos:start="151:17" pos:end="151:55"><name pos:start="151:17" pos:end="151:23"><name pos:start="151:17" pos:end="151:19">pkt</name><operator pos:start="151:20" pos:end="151:20">.</operator><name pos:start="151:21" pos:end="151:23">pts</name></name> <operator pos:start="151:25" pos:end="151:26">+=</operator> <literal type="number" pos:start="151:28" pos:end="151:29">90</literal> <operator pos:start="151:31" pos:end="151:31">*</operator> <name pos:start="151:33" pos:end="151:55"><name pos:start="151:33" pos:end="151:35">sub</name><operator pos:start="151:36" pos:end="151:37">-&gt;</operator><name pos:start="151:38" pos:end="151:55">start_display_time</name></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="153:13" pos:end="155:54">else<block type="pseudo" pos:start="155:17" pos:end="155:54"><block_content pos:start="155:17" pos:end="155:54">

                <expr_stmt pos:start="155:17" pos:end="155:54"><expr pos:start="155:17" pos:end="155:53"><name pos:start="155:17" pos:end="155:23"><name pos:start="155:17" pos:end="155:19">pkt</name><operator pos:start="155:20" pos:end="155:20">.</operator><name pos:start="155:21" pos:end="155:23">pts</name></name> <operator pos:start="155:25" pos:end="155:26">+=</operator> <literal type="number" pos:start="155:28" pos:end="155:29">90</literal> <operator pos:start="155:31" pos:end="155:31">*</operator> <name pos:start="155:33" pos:end="155:53"><name pos:start="155:33" pos:end="155:35">sub</name><operator pos:start="155:36" pos:end="155:37">-&gt;</operator><name pos:start="155:38" pos:end="155:53">end_display_time</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:26"><expr pos:start="159:9" pos:end="159:25"><name pos:start="159:9" pos:end="159:15"><name pos:start="159:9" pos:end="159:11">pkt</name><operator pos:start="159:12" pos:end="159:12">.</operator><name pos:start="159:13" pos:end="159:15">dts</name></name> <operator pos:start="159:17" pos:end="159:17">=</operator> <name pos:start="159:19" pos:end="159:25"><name pos:start="159:19" pos:end="159:21">pkt</name><operator pos:start="159:22" pos:end="159:22">.</operator><name pos:start="159:23" pos:end="159:25">pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:34"><expr pos:start="161:9" pos:end="161:33"><call pos:start="161:9" pos:end="161:33"><name pos:start="161:9" pos:end="161:19">write_frame</name><argument_list pos:start="161:20" pos:end="161:33">(<argument pos:start="161:21" pos:end="161:21"><expr pos:start="161:21" pos:end="161:21"><name pos:start="161:21" pos:end="161:21">s</name></expr></argument>, <argument pos:start="161:24" pos:end="161:27"><expr pos:start="161:24" pos:end="161:27"><operator pos:start="161:24" pos:end="161:24">&amp;</operator><name pos:start="161:25" pos:end="161:27">pkt</name></expr></argument>, <argument pos:start="161:30" pos:end="161:32"><expr pos:start="161:30" pos:end="161:32"><name pos:start="161:30" pos:end="161:32">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
