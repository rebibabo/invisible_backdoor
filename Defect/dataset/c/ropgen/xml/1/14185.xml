<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14185.c" pos:tabs="8"><function pos:start="1:1" pos:end="13:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">test_notify</name><parameter_list pos:start="1:24" pos:end="1:29">(<parameter pos:start="1:25" pos:end="1:28"><decl pos:start="1:25" pos:end="1:28"><type pos:start="1:25" pos:end="1:28"><name pos:start="1:25" pos:end="1:28">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="13:1">{<block_content pos:start="5:5" pos:end="11:36">

    <expr_stmt pos:start="5:5" pos:end="5:36"><expr pos:start="5:5" pos:end="5:35"><call pos:start="5:5" pos:end="5:35"><name pos:start="5:5" pos:end="5:12">g_assert</name><argument_list pos:start="5:13" pos:end="5:35">(<argument pos:start="5:14" pos:end="5:34"><expr pos:start="5:14" pos:end="5:34"><operator pos:start="5:14" pos:end="5:14">!</operator><call pos:start="5:15" pos:end="5:34"><name pos:start="5:15" pos:end="5:22">aio_poll</name><argument_list pos:start="5:23" pos:end="5:34">(<argument pos:start="5:24" pos:end="5:26"><expr pos:start="5:24" pos:end="5:26"><name pos:start="5:24" pos:end="5:26">ctx</name></expr></argument>, <argument pos:start="5:29" pos:end="5:33"><expr pos:start="5:29" pos:end="5:33"><name pos:start="5:29" pos:end="5:33">false</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:20"><expr pos:start="7:5" pos:end="7:19"><call pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:14">aio_notify</name><argument_list pos:start="7:15" pos:end="7:19">(<argument pos:start="7:16" pos:end="7:18"><expr pos:start="7:16" pos:end="7:18"><name pos:start="7:16" pos:end="7:18">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:35"><expr pos:start="9:5" pos:end="9:34"><call pos:start="9:5" pos:end="9:34"><name pos:start="9:5" pos:end="9:12">g_assert</name><argument_list pos:start="9:13" pos:end="9:34">(<argument pos:start="9:14" pos:end="9:33"><expr pos:start="9:14" pos:end="9:33"><operator pos:start="9:14" pos:end="9:14">!</operator><call pos:start="9:15" pos:end="9:33"><name pos:start="9:15" pos:end="9:22">aio_poll</name><argument_list pos:start="9:23" pos:end="9:33">(<argument pos:start="9:24" pos:end="9:26"><expr pos:start="9:24" pos:end="9:26"><name pos:start="9:24" pos:end="9:26">ctx</name></expr></argument>, <argument pos:start="9:29" pos:end="9:32"><expr pos:start="9:29" pos:end="9:32"><name pos:start="9:29" pos:end="9:32">true</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:36"><expr pos:start="11:5" pos:end="11:35"><call pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:12">g_assert</name><argument_list pos:start="11:13" pos:end="11:35">(<argument pos:start="11:14" pos:end="11:34"><expr pos:start="11:14" pos:end="11:34"><operator pos:start="11:14" pos:end="11:14">!</operator><call pos:start="11:15" pos:end="11:34"><name pos:start="11:15" pos:end="11:22">aio_poll</name><argument_list pos:start="11:23" pos:end="11:34">(<argument pos:start="11:24" pos:end="11:26"><expr pos:start="11:24" pos:end="11:26"><name pos:start="11:24" pos:end="11:26">ctx</name></expr></argument>, <argument pos:start="11:29" pos:end="11:33"><expr pos:start="11:29" pos:end="11:33"><name pos:start="11:29" pos:end="11:33">false</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
