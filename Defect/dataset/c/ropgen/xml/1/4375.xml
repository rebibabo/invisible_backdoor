<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4375.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">usb_desc_handle_control</name><parameter_list pos:start="1:28" pos:end="3:69">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:37">USBDevice</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">dev</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:53">USBPacket</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">p</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:19"><decl pos:start="3:9" pos:end="3:19"><type pos:start="3:9" pos:end="3:19"><name pos:start="3:9" pos:end="3:11">int</name></type> <name pos:start="3:13" pos:end="3:19">request</name></decl></parameter>, <parameter pos:start="3:22" pos:end="3:30"><decl pos:start="3:22" pos:end="3:30"><type pos:start="3:22" pos:end="3:30"><name pos:start="3:22" pos:end="3:24">int</name></type> <name pos:start="3:26" pos:end="3:30">value</name></decl></parameter>, <parameter pos:start="3:33" pos:end="3:41"><decl pos:start="3:33" pos:end="3:41"><type pos:start="3:33" pos:end="3:41"><name pos:start="3:33" pos:end="3:35">int</name></type> <name pos:start="3:37" pos:end="3:41">index</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:53"><decl pos:start="3:44" pos:end="3:53"><type pos:start="3:44" pos:end="3:53"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:53">length</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:68"><decl pos:start="3:56" pos:end="3:68"><type pos:start="3:56" pos:end="3:68"><name pos:start="3:56" pos:end="3:62">uint8_t</name> <modifier pos:start="3:64" pos:end="3:64">*</modifier></type><name pos:start="3:65" pos:end="3:68">data</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="135:1">{<block_content pos:start="7:5" pos:end="133:15">

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">USBDesc</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:23">desc</name> <init pos:start="7:25" pos:end="7:54">= <expr pos:start="7:27" pos:end="7:54"><call pos:start="7:27" pos:end="7:54"><name pos:start="7:27" pos:end="7:49">usb_device_get_usb_desc</name><argument_list pos:start="7:50" pos:end="7:54">(<argument pos:start="7:51" pos:end="7:53"><expr pos:start="7:51" pos:end="7:53"><name pos:start="7:51" pos:end="7:53">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:16">= <expr pos:start="9:15" pos:end="9:16"><operator pos:start="9:15" pos:end="9:15">-</operator><literal type="number" pos:start="9:16" pos:end="9:16">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><call pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:24">(<argument pos:start="13:12" pos:end="13:23"><expr pos:start="13:12" pos:end="13:23"><name pos:start="13:12" pos:end="13:15">desc</name> <operator pos:start="13:17" pos:end="13:18">!=</operator> <name pos:start="13:20" pos:end="13:23">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="15:5" pos:end="131:5">switch<condition pos:start="15:11" pos:end="15:19">(<expr pos:start="15:12" pos:end="15:18"><name pos:start="15:12" pos:end="15:18">request</name></expr>)</condition> <block pos:start="15:21" pos:end="131:5">{<block_content pos:start="17:5" pos:end="127:14">

    <case pos:start="17:5" pos:end="17:48">case <expr pos:start="17:10" pos:end="17:47"><name pos:start="17:10" pos:end="17:25">DeviceOutRequest</name> <operator pos:start="17:27" pos:end="17:27">|</operator> <name pos:start="17:29" pos:end="17:47">USB_REQ_SET_ADDRESS</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:26"><expr pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:11">dev</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:17">addr</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:25">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:38"><expr pos:start="21:9" pos:end="21:37"><call pos:start="21:9" pos:end="21:37"><name pos:start="21:9" pos:end="21:26">trace_usb_set_addr</name><argument_list pos:start="21:27" pos:end="21:37">(<argument pos:start="21:28" pos:end="21:36"><expr pos:start="21:28" pos:end="21:36"><name pos:start="21:28" pos:end="21:36"><name pos:start="21:28" pos:end="21:30">dev</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:36">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:16"><expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>



    <case pos:start="29:5" pos:end="29:48">case <expr pos:start="29:10" pos:end="29:47"><name pos:start="29:10" pos:end="29:22">DeviceRequest</name> <operator pos:start="29:24" pos:end="29:24">|</operator> <name pos:start="29:26" pos:end="29:47">USB_REQ_GET_DESCRIPTOR</name></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="31:64"><expr pos:start="31:9" pos:end="31:63"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:63"><name pos:start="31:15" pos:end="31:37">usb_desc_get_descriptor</name><argument_list pos:start="31:38" pos:end="31:63">(<argument pos:start="31:39" pos:end="31:41"><expr pos:start="31:39" pos:end="31:41"><name pos:start="31:39" pos:end="31:41">dev</name></expr></argument>, <argument pos:start="31:44" pos:end="31:48"><expr pos:start="31:44" pos:end="31:48"><name pos:start="31:44" pos:end="31:48">value</name></expr></argument>, <argument pos:start="31:51" pos:end="31:54"><expr pos:start="31:51" pos:end="31:54"><name pos:start="31:51" pos:end="31:54">data</name></expr></argument>, <argument pos:start="31:57" pos:end="31:62"><expr pos:start="31:57" pos:end="31:62"><name pos:start="31:57" pos:end="31:62">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>



    <case pos:start="37:5" pos:end="37:51">case <expr pos:start="37:10" pos:end="37:50"><name pos:start="37:10" pos:end="37:22">DeviceRequest</name> <operator pos:start="37:24" pos:end="37:24">|</operator> <name pos:start="37:26" pos:end="37:50">USB_REQ_GET_CONFIGURATION</name></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:51"><expr pos:start="39:9" pos:end="39:50"><name pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:12">data</name><index pos:start="39:13" pos:end="39:15">[<expr pos:start="39:14" pos:end="39:14"><literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>]</index></name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:50"><name pos:start="39:19" pos:end="39:21">dev</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:29">config</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:50">bConfigurationValue</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:16"><expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <literal type="number" pos:start="41:15" pos:end="41:15">1</literal></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:54">case <expr pos:start="45:10" pos:end="45:53"><name pos:start="45:10" pos:end="45:25">DeviceOutRequest</name> <operator pos:start="45:27" pos:end="45:27">|</operator> <name pos:start="45:29" pos:end="45:53">USB_REQ_SET_CONFIGURATION</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:46"><expr pos:start="47:9" pos:end="47:45"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:45"><name pos:start="47:15" pos:end="47:33">usb_desc_set_config</name><argument_list pos:start="47:34" pos:end="47:45">(<argument pos:start="47:35" pos:end="47:37"><expr pos:start="47:35" pos:end="47:37"><name pos:start="47:35" pos:end="47:37">dev</name></expr></argument>, <argument pos:start="47:40" pos:end="47:44"><expr pos:start="47:40" pos:end="47:44"><name pos:start="47:40" pos:end="47:44">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:52"><expr pos:start="49:9" pos:end="49:51"><call pos:start="49:9" pos:end="49:51"><name pos:start="49:9" pos:end="49:28">trace_usb_set_config</name><argument_list pos:start="49:29" pos:end="49:51">(<argument pos:start="49:30" pos:end="49:38"><expr pos:start="49:30" pos:end="49:38"><name pos:start="49:30" pos:end="49:38"><name pos:start="49:30" pos:end="49:32">dev</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:38">addr</name></name></expr></argument>, <argument pos:start="49:41" pos:end="49:45"><expr pos:start="49:41" pos:end="49:45"><name pos:start="49:41" pos:end="49:45">value</name></expr></argument>, <argument pos:start="49:48" pos:end="49:50"><expr pos:start="49:48" pos:end="49:50"><name pos:start="49:48" pos:end="49:50">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>



    <case pos:start="55:5" pos:end="55:44">case <expr pos:start="55:10" pos:end="55:43"><name pos:start="55:10" pos:end="55:22">DeviceRequest</name> <operator pos:start="55:24" pos:end="55:24">|</operator> <name pos:start="55:26" pos:end="55:43">USB_REQ_GET_STATUS</name></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:20"><expr pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:12">data</name><index pos:start="57:13" pos:end="57:15">[<expr pos:start="57:14" pos:end="57:14"><literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>]</index></name> <operator pos:start="57:17" pos:end="57:17">=</operator> <literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="63:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:45">(<expr pos:start="59:13" pos:end="59:44"><name pos:start="59:13" pos:end="59:37"><name pos:start="59:13" pos:end="59:15">dev</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:23">config</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:37">bmAttributes</name></name> <operator pos:start="59:39" pos:end="59:39">&amp;</operator> <literal type="number" pos:start="59:41" pos:end="59:44">0x40</literal></expr>)</condition> <block pos:start="59:47" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:52">

            <expr_stmt pos:start="61:13" pos:end="61:52"><expr pos:start="61:13" pos:end="61:51"><name pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:16">data</name><index pos:start="61:17" pos:end="61:19">[<expr pos:start="61:18" pos:end="61:18"><literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>]</index></name> <operator pos:start="61:21" pos:end="61:22">|=</operator> <literal type="number" pos:start="61:24" pos:end="61:24">1</literal> <operator pos:start="61:26" pos:end="61:27">&lt;&lt;</operator> <name pos:start="61:29" pos:end="61:51">USB_DEVICE_SELF_POWERED</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="69:9"><if pos:start="65:9" pos:end="69:9">if <condition pos:start="65:12" pos:end="65:31">(<expr pos:start="65:13" pos:end="65:30"><name pos:start="65:13" pos:end="65:30"><name pos:start="65:13" pos:end="65:15">dev</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:30">remote_wakeup</name></name></expr>)</condition> <block pos:start="65:33" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:53">

            <expr_stmt pos:start="67:13" pos:end="67:53"><expr pos:start="67:13" pos:end="67:52"><name pos:start="67:13" pos:end="67:19"><name pos:start="67:13" pos:end="67:16">data</name><index pos:start="67:17" pos:end="67:19">[<expr pos:start="67:18" pos:end="67:18"><literal type="number" pos:start="67:18" pos:end="67:18">0</literal></expr>]</index></name> <operator pos:start="67:21" pos:end="67:22">|=</operator> <literal type="number" pos:start="67:24" pos:end="67:24">1</literal> <operator pos:start="67:26" pos:end="67:27">&lt;&lt;</operator> <name pos:start="67:29" pos:end="67:52">USB_DEVICE_REMOTE_WAKEUP</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:23"><expr pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:15"><name pos:start="71:9" pos:end="71:12">data</name><index pos:start="71:13" pos:end="71:15">[<expr pos:start="71:14" pos:end="71:14"><literal type="number" pos:start="71:14" pos:end="71:14">1</literal></expr>]</index></name> <operator pos:start="71:17" pos:end="71:17">=</operator> <literal type="number" pos:start="71:19" pos:end="71:22">0x00</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:16"><expr pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <literal type="number" pos:start="73:15" pos:end="73:15">2</literal></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:50">case <expr pos:start="77:10" pos:end="77:49"><name pos:start="77:10" pos:end="77:25">DeviceOutRequest</name> <operator pos:start="77:27" pos:end="77:27">|</operator> <name pos:start="77:29" pos:end="77:49">USB_REQ_CLEAR_FEATURE</name></expr>:</case>

        <if_stmt pos:start="79:9" pos:end="85:9"><if pos:start="79:9" pos:end="85:9">if <condition pos:start="79:12" pos:end="79:46">(<expr pos:start="79:13" pos:end="79:45"><name pos:start="79:13" pos:end="79:17">value</name> <operator pos:start="79:19" pos:end="79:20">==</operator> <name pos:start="79:22" pos:end="79:45">USB_DEVICE_REMOTE_WAKEUP</name></expr>)</condition> <block pos:start="79:48" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:20">

            <expr_stmt pos:start="81:13" pos:end="81:35"><expr pos:start="81:13" pos:end="81:34"><name pos:start="81:13" pos:end="81:30"><name pos:start="81:13" pos:end="81:15">dev</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:30">remote_wakeup</name></name> <operator pos:start="81:32" pos:end="81:32">=</operator> <literal type="number" pos:start="81:34" pos:end="81:34">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:20"><expr pos:start="83:13" pos:end="83:19"><name pos:start="83:13" pos:end="83:15">ret</name> <operator pos:start="83:17" pos:end="83:17">=</operator> <literal type="number" pos:start="83:19" pos:end="83:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:62"><expr pos:start="87:9" pos:end="87:61"><call pos:start="87:9" pos:end="87:61"><name pos:start="87:9" pos:end="87:38">trace_usb_clear_device_feature</name><argument_list pos:start="87:39" pos:end="87:61">(<argument pos:start="87:40" pos:end="87:48"><expr pos:start="87:40" pos:end="87:48"><name pos:start="87:40" pos:end="87:48"><name pos:start="87:40" pos:end="87:42">dev</name><operator pos:start="87:43" pos:end="87:44">-&gt;</operator><name pos:start="87:45" pos:end="87:48">addr</name></name></expr></argument>, <argument pos:start="87:51" pos:end="87:55"><expr pos:start="87:51" pos:end="87:55"><name pos:start="87:51" pos:end="87:55">value</name></expr></argument>, <argument pos:start="87:58" pos:end="87:60"><expr pos:start="87:58" pos:end="87:60"><name pos:start="87:58" pos:end="87:60">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    <case pos:start="91:5" pos:end="91:48">case <expr pos:start="91:10" pos:end="91:47"><name pos:start="91:10" pos:end="91:25">DeviceOutRequest</name> <operator pos:start="91:27" pos:end="91:27">|</operator> <name pos:start="91:29" pos:end="91:47">USB_REQ_SET_FEATURE</name></expr>:</case>

        <if_stmt pos:start="93:9" pos:end="99:9"><if pos:start="93:9" pos:end="99:9">if <condition pos:start="93:12" pos:end="93:46">(<expr pos:start="93:13" pos:end="93:45"><name pos:start="93:13" pos:end="93:17">value</name> <operator pos:start="93:19" pos:end="93:20">==</operator> <name pos:start="93:22" pos:end="93:45">USB_DEVICE_REMOTE_WAKEUP</name></expr>)</condition> <block pos:start="93:48" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:20">

            <expr_stmt pos:start="95:13" pos:end="95:35"><expr pos:start="95:13" pos:end="95:34"><name pos:start="95:13" pos:end="95:30"><name pos:start="95:13" pos:end="95:15">dev</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:30">remote_wakeup</name></name> <operator pos:start="95:32" pos:end="95:32">=</operator> <literal type="number" pos:start="95:34" pos:end="95:34">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:20"><expr pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:15">ret</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <literal type="number" pos:start="97:19" pos:end="97:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:60"><expr pos:start="101:9" pos:end="101:59"><call pos:start="101:9" pos:end="101:59"><name pos:start="101:9" pos:end="101:36">trace_usb_set_device_feature</name><argument_list pos:start="101:37" pos:end="101:59">(<argument pos:start="101:38" pos:end="101:46"><expr pos:start="101:38" pos:end="101:46"><name pos:start="101:38" pos:end="101:46"><name pos:start="101:38" pos:end="101:40">dev</name><operator pos:start="101:41" pos:end="101:42">-&gt;</operator><name pos:start="101:43" pos:end="101:46">addr</name></name></expr></argument>, <argument pos:start="101:49" pos:end="101:53"><expr pos:start="101:49" pos:end="101:53"><name pos:start="101:49" pos:end="101:53">value</name></expr></argument>, <argument pos:start="101:56" pos:end="101:58"><expr pos:start="101:56" pos:end="101:58"><name pos:start="101:56" pos:end="101:58">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>



    <case pos:start="107:5" pos:end="107:50">case <expr pos:start="107:10" pos:end="107:49"><name pos:start="107:10" pos:end="107:25">InterfaceRequest</name> <operator pos:start="107:27" pos:end="107:27">|</operator> <name pos:start="107:29" pos:end="107:49">USB_REQ_GET_INTERFACE</name></expr>:</case>

        <if_stmt pos:start="109:9" pos:end="113:9"><if pos:start="109:9" pos:end="113:9">if <condition pos:start="109:12" pos:end="109:51">(<expr pos:start="109:13" pos:end="109:50"><name pos:start="109:13" pos:end="109:17">index</name> <operator pos:start="109:19" pos:end="109:19">&lt;</operator> <literal type="number" pos:start="109:21" pos:end="109:21">0</literal> <operator pos:start="109:23" pos:end="109:24">||</operator> <name pos:start="109:26" pos:end="109:30">index</name> <operator pos:start="109:32" pos:end="109:33">&gt;=</operator> <name pos:start="109:35" pos:end="109:50"><name pos:start="109:35" pos:end="109:37">dev</name><operator pos:start="109:38" pos:end="109:39">-&gt;</operator><name pos:start="109:40" pos:end="109:50">ninterfaces</name></name></expr>)</condition> <block pos:start="109:53" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:18">

            <break pos:start="111:13" pos:end="111:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:41"><expr pos:start="115:9" pos:end="115:40"><name pos:start="115:9" pos:end="115:15"><name pos:start="115:9" pos:end="115:12">data</name><index pos:start="115:13" pos:end="115:15">[<expr pos:start="115:14" pos:end="115:14"><literal type="number" pos:start="115:14" pos:end="115:14">0</literal></expr>]</index></name> <operator pos:start="115:17" pos:end="115:17">=</operator> <name pos:start="115:19" pos:end="115:40"><name pos:start="115:19" pos:end="115:21">dev</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:33">altsetting</name><index pos:start="115:34" pos:end="115:40">[<expr pos:start="115:35" pos:end="115:39"><name pos:start="115:35" pos:end="115:39">index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:16"><expr pos:start="117:9" pos:end="117:15"><name pos:start="117:9" pos:end="117:11">ret</name> <operator pos:start="117:13" pos:end="117:13">=</operator> <literal type="number" pos:start="117:15" pos:end="117:15">1</literal></expr>;</expr_stmt>

        <break pos:start="119:9" pos:end="119:14">break;</break>

    <case pos:start="121:5" pos:end="121:53">case <expr pos:start="121:10" pos:end="121:52"><name pos:start="121:10" pos:end="121:28">InterfaceOutRequest</name> <operator pos:start="121:30" pos:end="121:30">|</operator> <name pos:start="121:32" pos:end="121:52">USB_REQ_SET_INTERFACE</name></expr>:</case>

        <expr_stmt pos:start="123:9" pos:end="123:56"><expr pos:start="123:9" pos:end="123:55"><name pos:start="123:9" pos:end="123:11">ret</name> <operator pos:start="123:13" pos:end="123:13">=</operator> <call pos:start="123:15" pos:end="123:55"><name pos:start="123:15" pos:end="123:36">usb_desc_set_interface</name><argument_list pos:start="123:37" pos:end="123:55">(<argument pos:start="123:38" pos:end="123:40"><expr pos:start="123:38" pos:end="123:40"><name pos:start="123:38" pos:end="123:40">dev</name></expr></argument>, <argument pos:start="123:43" pos:end="123:47"><expr pos:start="123:43" pos:end="123:47"><name pos:start="123:43" pos:end="123:47">index</name></expr></argument>, <argument pos:start="123:50" pos:end="123:54"><expr pos:start="123:50" pos:end="123:54"><name pos:start="123:50" pos:end="123:54">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:62"><expr pos:start="125:9" pos:end="125:61"><call pos:start="125:9" pos:end="125:61"><name pos:start="125:9" pos:end="125:31">trace_usb_set_interface</name><argument_list pos:start="125:32" pos:end="125:61">(<argument pos:start="125:33" pos:end="125:41"><expr pos:start="125:33" pos:end="125:41"><name pos:start="125:33" pos:end="125:41"><name pos:start="125:33" pos:end="125:35">dev</name><operator pos:start="125:36" pos:end="125:37">-&gt;</operator><name pos:start="125:38" pos:end="125:41">addr</name></name></expr></argument>, <argument pos:start="125:44" pos:end="125:48"><expr pos:start="125:44" pos:end="125:48"><name pos:start="125:44" pos:end="125:48">index</name></expr></argument>, <argument pos:start="125:51" pos:end="125:55"><expr pos:start="125:51" pos:end="125:55"><name pos:start="125:51" pos:end="125:55">value</name></expr></argument>, <argument pos:start="125:58" pos:end="125:60"><expr pos:start="125:58" pos:end="125:60"><name pos:start="125:58" pos:end="125:60">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>



    </block_content>}</block></switch>

    <return pos:start="133:5" pos:end="133:15">return <expr pos:start="133:12" pos:end="133:14"><name pos:start="133:12" pos:end="133:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
