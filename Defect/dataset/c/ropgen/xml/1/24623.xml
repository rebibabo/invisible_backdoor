<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24623.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">flac_encode_frame</name><parameter_list pos:start="1:29" pos:end="3:71">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:67"><decl pos:start="1:53" pos:end="1:67"><type pos:start="1:53" pos:end="1:67"><name pos:start="1:53" pos:end="1:60">AVPacket</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avpkt</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:49"><decl pos:start="3:30" pos:end="3:49"><type pos:start="3:30" pos:end="3:49"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">AVFrame</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:49">frame</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:70"><decl pos:start="3:52" pos:end="3:70"><type pos:start="3:52" pos:end="3:70"><name pos:start="3:52" pos:end="3:54">int</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:70">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="129:1">{<block_content pos:start="7:5" pos:end="127:13">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">FlacEncodeContext</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">int16_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:26">samples</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">frame_bytes</name></decl>, <decl pos:start="11:22" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:30">out_bytes</name></decl>, <decl pos:start="11:33" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:33" pos:end="11:35">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:5">s</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <name pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:13">avctx</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:24">priv_data</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:72">/* when the last block is reached, update the header in extradata */</comment>

    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="31:5">if <condition pos:start="21:8" pos:end="21:15">(<expr pos:start="21:9" pos:end="21:14"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:14">frame</name></expr>)</condition> <block pos:start="21:17" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:17">

        <expr_stmt pos:start="23:9" pos:end="23:52"><expr pos:start="23:9" pos:end="23:51"><name pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:24">max_framesize</name></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <name pos:start="23:28" pos:end="23:51"><name pos:start="23:28" pos:end="23:28">s</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:51">max_encoded_framesize</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><call pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:20">av_md5_final</name><argument_list pos:start="25:21" pos:end="25:42">(<argument pos:start="25:22" pos:end="25:30"><expr pos:start="25:22" pos:end="25:30"><name pos:start="25:22" pos:end="25:30"><name pos:start="25:22" pos:end="25:22">s</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:30">md5ctx</name></name></expr></argument>, <argument pos:start="25:33" pos:end="25:41"><expr pos:start="25:33" pos:end="25:41"><name pos:start="25:33" pos:end="25:41"><name pos:start="25:33" pos:end="25:33">s</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:41">md5sum</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:46"><expr pos:start="27:9" pos:end="27:45"><call pos:start="27:9" pos:end="27:45"><name pos:start="27:9" pos:end="27:24">write_streaminfo</name><argument_list pos:start="27:25" pos:end="27:45">(<argument pos:start="27:26" pos:end="27:26"><expr pos:start="27:26" pos:end="27:26"><name pos:start="27:26" pos:end="27:26">s</name></expr></argument>, <argument pos:start="27:29" pos:end="27:44"><expr pos:start="27:29" pos:end="27:44"><name pos:start="27:29" pos:end="27:44"><name pos:start="27:29" pos:end="27:33">avctx</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:44">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:11">samples</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <operator pos:start="33:15" pos:end="33:15">(</operator><specifier pos:start="33:16" pos:end="33:20">const</specifier> <name pos:start="33:22" pos:end="33:28">int16_t</name> <operator pos:start="33:30" pos:end="33:30">*</operator><operator pos:start="33:31" pos:end="33:31">)</operator><name pos:start="33:32" pos:end="33:45"><name pos:start="33:32" pos:end="33:36">frame</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:42">data</name><index pos:start="33:43" pos:end="33:45">[<expr pos:start="33:44" pos:end="33:44"><literal type="number" pos:start="33:44" pos:end="33:44">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:52">/* change max_framesize for small final frame */</comment>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:47">(<expr pos:start="39:9" pos:end="39:46"><name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:13">frame</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:25">nb_samples</name></name> <operator pos:start="39:27" pos:end="39:27">&lt;</operator> <name pos:start="39:29" pos:end="39:46"><name pos:start="39:29" pos:end="39:29">s</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:36">frame</name><operator pos:start="39:37" pos:end="39:37">.</operator><name pos:start="39:38" pos:end="39:46">blocksize</name></name></expr>)</condition> <block pos:start="39:49" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:71">

        <expr_stmt pos:start="41:9" pos:end="43:71"><expr pos:start="41:9" pos:end="43:70"><name pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:24">max_framesize</name></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <call pos:start="41:28" pos:end="43:70"><name pos:start="41:28" pos:end="41:53">ff_flac_get_max_frame_size</name><argument_list pos:start="41:54" pos:end="43:70">(<argument pos:start="41:55" pos:end="41:71"><expr pos:start="41:55" pos:end="41:71"><name pos:start="41:55" pos:end="41:71"><name pos:start="41:55" pos:end="41:59">frame</name><operator pos:start="41:60" pos:end="41:61">-&gt;</operator><name pos:start="41:62" pos:end="41:71">nb_samples</name></name></expr></argument>,

                                                      <argument pos:start="43:55" pos:end="43:65"><expr pos:start="43:55" pos:end="43:65"><name pos:start="43:55" pos:end="43:65"><name pos:start="43:55" pos:end="43:55">s</name><operator pos:start="43:56" pos:end="43:57">-&gt;</operator><name pos:start="43:58" pos:end="43:65">channels</name></name></expr></argument>, <argument pos:start="43:68" pos:end="43:69"><expr pos:start="43:68" pos:end="43:69"><literal type="number" pos:start="43:68" pos:end="43:69">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:37"><expr pos:start="49:5" pos:end="49:36"><call pos:start="49:5" pos:end="49:36"><name pos:start="49:5" pos:end="49:14">init_frame</name><argument_list pos:start="49:15" pos:end="49:36">(<argument pos:start="49:16" pos:end="49:16"><expr pos:start="49:16" pos:end="49:16"><name pos:start="49:16" pos:end="49:16">s</name></expr></argument>, <argument pos:start="49:19" pos:end="49:35"><expr pos:start="49:19" pos:end="49:35"><name pos:start="49:19" pos:end="49:35"><name pos:start="49:19" pos:end="49:23">frame</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:35">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:29"><expr pos:start="53:5" pos:end="53:28"><call pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:16">copy_samples</name><argument_list pos:start="53:17" pos:end="53:28">(<argument pos:start="53:18" pos:end="53:18"><expr pos:start="53:18" pos:end="53:18"><name pos:start="53:18" pos:end="53:18">s</name></expr></argument>, <argument pos:start="53:21" pos:end="53:27"><expr pos:start="53:21" pos:end="53:27"><name pos:start="53:21" pos:end="53:27">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:29"><expr pos:start="57:5" pos:end="57:28"><call pos:start="57:5" pos:end="57:28"><name pos:start="57:5" pos:end="57:25">channel_decorrelation</name><argument_list pos:start="57:26" pos:end="57:28">(<argument pos:start="57:27" pos:end="57:27"><expr pos:start="57:27" pos:end="57:27"><name pos:start="57:27" pos:end="57:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:26"><expr pos:start="61:5" pos:end="61:25"><call pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:22">remove_wasted_bits</name><argument_list pos:start="61:23" pos:end="61:25">(<argument pos:start="61:24" pos:end="61:24"><expr pos:start="61:24" pos:end="61:24"><name pos:start="61:24" pos:end="61:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:34"><expr pos:start="65:5" pos:end="65:33"><name pos:start="65:5" pos:end="65:15">frame_bytes</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <call pos:start="65:19" pos:end="65:33"><name pos:start="65:19" pos:end="65:30">encode_frame</name><argument_list pos:start="65:31" pos:end="65:33">(<argument pos:start="65:32" pos:end="65:32"><expr pos:start="65:32" pos:end="65:32"><name pos:start="65:32" pos:end="65:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="71:43">/* fallback to verbatim mode if the compressed frame is larger than it

       would be if encoded uncompressed. */</comment>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:39">(<expr pos:start="73:9" pos:end="73:38"><name pos:start="73:9" pos:end="73:19">frame_bytes</name> <operator pos:start="73:21" pos:end="73:21">&gt;</operator> <name pos:start="73:23" pos:end="73:38"><name pos:start="73:23" pos:end="73:23">s</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:38">max_framesize</name></name></expr>)</condition> <block pos:start="73:41" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:38">

        <expr_stmt pos:start="75:9" pos:end="75:35"><expr pos:start="75:9" pos:end="75:34"><name pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:16">frame</name><operator pos:start="75:17" pos:end="75:17">.</operator><name pos:start="75:18" pos:end="75:30">verbatim_only</name></name> <operator pos:start="75:32" pos:end="75:32">=</operator> <literal type="number" pos:start="75:34" pos:end="75:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:38"><expr pos:start="77:9" pos:end="77:37"><name pos:start="77:9" pos:end="77:19">frame_bytes</name> <operator pos:start="77:21" pos:end="77:21">=</operator> <call pos:start="77:23" pos:end="77:37"><name pos:start="77:23" pos:end="77:34">encode_frame</name><argument_list pos:start="77:35" pos:end="77:37">(<argument pos:start="77:36" pos:end="77:36"><expr pos:start="77:36" pos:end="77:36"><name pos:start="77:36" pos:end="77:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:52">(<expr pos:start="83:9" pos:end="83:51"><operator pos:start="83:9" pos:end="83:9">(</operator><name pos:start="83:10" pos:end="83:12">ret</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <call pos:start="83:16" pos:end="83:50"><name pos:start="83:16" pos:end="83:30">ff_alloc_packet</name><argument_list pos:start="83:31" pos:end="83:50">(<argument pos:start="83:32" pos:end="83:36"><expr pos:start="83:32" pos:end="83:36"><name pos:start="83:32" pos:end="83:36">avpkt</name></expr></argument>, <argument pos:start="83:39" pos:end="83:49"><expr pos:start="83:39" pos:end="83:49"><name pos:start="83:39" pos:end="83:49">frame_bytes</name></expr></argument>)</argument_list></call><operator pos:start="83:51" pos:end="83:51">)</operator></expr>)</condition> <block pos:start="83:54" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:19">

        <expr_stmt pos:start="85:9" pos:end="85:69"><expr pos:start="85:9" pos:end="85:68"><call pos:start="85:9" pos:end="85:68"><name pos:start="85:9" pos:end="85:14">av_log</name><argument_list pos:start="85:15" pos:end="85:68">(<argument pos:start="85:16" pos:end="85:20"><expr pos:start="85:16" pos:end="85:20"><name pos:start="85:16" pos:end="85:20">avctx</name></expr></argument>, <argument pos:start="85:23" pos:end="85:34"><expr pos:start="85:23" pos:end="85:34"><name pos:start="85:23" pos:end="85:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:37" pos:end="85:67"><expr pos:start="85:37" pos:end="85:67"><literal type="string" pos:start="85:37" pos:end="85:67">"Error getting output packet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:19">return <expr pos:start="87:16" pos:end="87:18"><name pos:start="87:16" pos:end="87:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:38"><expr pos:start="93:5" pos:end="93:37"><name pos:start="93:5" pos:end="93:13">out_bytes</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <call pos:start="93:17" pos:end="93:37"><name pos:start="93:17" pos:end="93:27">write_frame</name><argument_list pos:start="93:28" pos:end="93:37">(<argument pos:start="93:29" pos:end="93:29"><expr pos:start="93:29" pos:end="93:29"><name pos:start="93:29" pos:end="93:29">s</name></expr></argument>, <argument pos:start="93:32" pos:end="93:36"><expr pos:start="93:32" pos:end="93:36"><name pos:start="93:32" pos:end="93:36">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:21"><expr pos:start="97:5" pos:end="97:20"><name pos:start="97:5" pos:end="97:18"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:18">frame_count</name></name><operator pos:start="97:19" pos:end="97:20">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:41"><expr pos:start="99:5" pos:end="99:40"><name pos:start="99:5" pos:end="99:19"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:19">sample_count</name></name> <operator pos:start="99:21" pos:end="99:22">+=</operator> <name pos:start="99:24" pos:end="99:40"><name pos:start="99:24" pos:end="99:28">frame</name><operator pos:start="99:29" pos:end="99:30">-&gt;</operator><name pos:start="99:31" pos:end="99:40">nb_samples</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="107:5"><if pos:start="101:5" pos:end="107:5">if <condition pos:start="101:8" pos:end="101:47">(<expr pos:start="101:9" pos:end="101:46"><operator pos:start="101:9" pos:end="101:9">(</operator><name pos:start="101:10" pos:end="101:12">ret</name> <operator pos:start="101:14" pos:end="101:14">=</operator> <call pos:start="101:16" pos:end="101:41"><name pos:start="101:16" pos:end="101:29">update_md5_sum</name><argument_list pos:start="101:30" pos:end="101:41">(<argument pos:start="101:31" pos:end="101:31"><expr pos:start="101:31" pos:end="101:31"><name pos:start="101:31" pos:end="101:31">s</name></expr></argument>, <argument pos:start="101:34" pos:end="101:40"><expr pos:start="101:34" pos:end="101:40"><name pos:start="101:34" pos:end="101:40">samples</name></expr></argument>)</argument_list></call><operator pos:start="101:42" pos:end="101:42">)</operator> <operator pos:start="101:44" pos:end="101:44">&lt;</operator> <literal type="number" pos:start="101:46" pos:end="101:46">0</literal></expr>)</condition> <block pos:start="101:49" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:19">

        <expr_stmt pos:start="103:9" pos:end="103:69"><expr pos:start="103:9" pos:end="103:68"><call pos:start="103:9" pos:end="103:68"><name pos:start="103:9" pos:end="103:14">av_log</name><argument_list pos:start="103:15" pos:end="103:68">(<argument pos:start="103:16" pos:end="103:20"><expr pos:start="103:16" pos:end="103:20"><name pos:start="103:16" pos:end="103:20">avctx</name></expr></argument>, <argument pos:start="103:23" pos:end="103:34"><expr pos:start="103:23" pos:end="103:34"><name pos:start="103:23" pos:end="103:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="103:37" pos:end="103:67"><expr pos:start="103:37" pos:end="103:67"><literal type="string" pos:start="103:37" pos:end="103:67">"Error updating MD5 checksum\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="105:9" pos:end="105:19">return <expr pos:start="105:16" pos:end="105:18"><name pos:start="105:16" pos:end="105:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="109:5" pos:end="111:45"><if pos:start="109:5" pos:end="111:45">if <condition pos:start="109:8" pos:end="109:45">(<expr pos:start="109:9" pos:end="109:44"><name pos:start="109:9" pos:end="109:17">out_bytes</name> <operator pos:start="109:19" pos:end="109:19">&gt;</operator> <name pos:start="109:21" pos:end="109:44"><name pos:start="109:21" pos:end="109:21">s</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:44">max_encoded_framesize</name></name></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:45"><block_content pos:start="111:9" pos:end="111:45">

        <expr_stmt pos:start="111:9" pos:end="111:45"><expr pos:start="111:9" pos:end="111:44"><name pos:start="111:9" pos:end="111:32"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:32">max_encoded_framesize</name></name> <operator pos:start="111:34" pos:end="111:34">=</operator> <name pos:start="111:36" pos:end="111:44">out_bytes</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="113:5" pos:end="115:37"><if pos:start="113:5" pos:end="115:37">if <condition pos:start="113:8" pos:end="113:37">(<expr pos:start="113:9" pos:end="113:36"><name pos:start="113:9" pos:end="113:17">out_bytes</name> <operator pos:start="113:19" pos:end="113:19">&lt;</operator> <name pos:start="113:21" pos:end="113:36"><name pos:start="113:21" pos:end="113:21">s</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:36">min_framesize</name></name></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:37"><block_content pos:start="115:9" pos:end="115:37">

        <expr_stmt pos:start="115:9" pos:end="115:37"><expr pos:start="115:9" pos:end="115:36"><name pos:start="115:9" pos:end="115:24"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:24">min_framesize</name></name> <operator pos:start="115:26" pos:end="115:26">=</operator> <name pos:start="115:28" pos:end="115:36">out_bytes</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:33"><expr pos:start="119:5" pos:end="119:32"><name pos:start="119:5" pos:end="119:14"><name pos:start="119:5" pos:end="119:9">avpkt</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:14">pts</name></name>      <operator pos:start="119:21" pos:end="119:21">=</operator> <name pos:start="119:23" pos:end="119:32"><name pos:start="119:23" pos:end="119:27">frame</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:32">pts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:72"><expr pos:start="121:5" pos:end="121:71"><name pos:start="121:5" pos:end="121:19"><name pos:start="121:5" pos:end="121:9">avpkt</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:19">duration</name></name> <operator pos:start="121:21" pos:end="121:21">=</operator> <call pos:start="121:23" pos:end="121:71"><name pos:start="121:23" pos:end="121:45">ff_samples_to_time_base</name><argument_list pos:start="121:46" pos:end="121:71">(<argument pos:start="121:47" pos:end="121:51"><expr pos:start="121:47" pos:end="121:51"><name pos:start="121:47" pos:end="121:51">avctx</name></expr></argument>, <argument pos:start="121:54" pos:end="121:70"><expr pos:start="121:54" pos:end="121:70"><name pos:start="121:54" pos:end="121:70"><name pos:start="121:54" pos:end="121:58">frame</name><operator pos:start="121:59" pos:end="121:60">-&gt;</operator><name pos:start="121:61" pos:end="121:70">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:32"><expr pos:start="123:5" pos:end="123:31"><name pos:start="123:5" pos:end="123:15"><name pos:start="123:5" pos:end="123:9">avpkt</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:15">size</name></name>     <operator pos:start="123:21" pos:end="123:21">=</operator> <name pos:start="123:23" pos:end="123:31">out_bytes</name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:24"><expr pos:start="125:5" pos:end="125:23"><operator pos:start="125:5" pos:end="125:5">*</operator><name pos:start="125:6" pos:end="125:19">got_packet_ptr</name> <operator pos:start="125:21" pos:end="125:21">=</operator> <literal type="number" pos:start="125:23" pos:end="125:23">1</literal></expr>;</expr_stmt>

    <return pos:start="127:5" pos:end="127:13">return <expr pos:start="127:12" pos:end="127:12"><literal type="number" pos:start="127:12" pos:end="127:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
