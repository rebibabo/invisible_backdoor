<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22537.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">tag_tree_decode</name><parameter_list pos:start="1:27" pos:end="2:41">(<parameter pos:start="1:28" pos:end="1:52"><decl pos:start="1:28" pos:end="1:52"><type pos:start="1:28" pos:end="1:52"><name pos:start="1:28" pos:end="1:49">Jpeg2000DecoderContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:75"><decl pos:start="1:55" pos:end="1:75"><type pos:start="1:55" pos:end="1:75"><name pos:start="1:55" pos:end="1:69">Jpeg2000TgtNode</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:75">node</name></decl></parameter>,
                           <parameter pos:start="2:28" pos:end="2:40"><decl pos:start="2:28" pos:end="2:40"><type pos:start="2:28" pos:end="2:40"><name pos:start="2:28" pos:end="2:30">int</name></type> <name pos:start="2:32" pos:end="2:40">threshold</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="4:5" pos:end="30:18">
    <decl_stmt pos:start="4:5" pos:end="4:31"><decl pos:start="4:5" pos:end="4:30"><type pos:start="4:5" pos:end="4:21"><name pos:start="4:5" pos:end="4:19">Jpeg2000TgtNode</name> <modifier pos:start="4:21" pos:end="4:21">*</modifier></type><name pos:start="4:22" pos:end="4:30"><name pos:start="4:22" pos:end="4:26">stack</name><index pos:start="4:27" pos:end="4:30">[<expr pos:start="4:28" pos:end="4:29"><literal type="number" pos:start="4:28" pos:end="4:29">30</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">sp</name> <init pos:start="5:12" pos:end="5:15">= <expr pos:start="5:14" pos:end="5:15"><operator pos:start="5:14" pos:end="5:14">-</operator><literal type="number" pos:start="5:15" pos:end="5:15">1</literal></expr></init></decl>, <decl pos:start="5:18" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:23">curval</name> <init pos:start="5:25" pos:end="5:27">= <expr pos:start="5:27" pos:end="5:27"><literal type="number" pos:start="5:27" pos:end="5:27">0</literal></expr></init></decl>;</decl_stmt>
    <while pos:start="6:5" pos:end="9:5">while <condition pos:start="6:11" pos:end="6:30">(<expr pos:start="6:12" pos:end="6:29"><name pos:start="6:12" pos:end="6:15">node</name> <operator pos:start="6:17" pos:end="6:18">&amp;&amp;</operator> <operator pos:start="6:20" pos:end="6:20">!</operator><name pos:start="6:21" pos:end="6:29"><name pos:start="6:21" pos:end="6:24">node</name><operator pos:start="6:25" pos:end="6:26">-&gt;</operator><name pos:start="6:27" pos:end="6:29">vis</name></name></expr>)</condition> <block pos:start="6:32" pos:end="9:5">{<block_content pos:start="7:9" pos:end="8:35">
        <expr_stmt pos:start="7:9" pos:end="7:27"><expr pos:start="7:9" pos:end="7:26"><name pos:start="7:9" pos:end="7:19"><name pos:start="7:9" pos:end="7:13">stack</name><index pos:start="7:14" pos:end="7:19">[<expr pos:start="7:15" pos:end="7:18"><operator pos:start="7:15" pos:end="7:16">++</operator><name pos:start="7:17" pos:end="7:18">sp</name></expr>]</index></name> <operator pos:start="7:21" pos:end="7:21">=</operator> <name pos:start="7:23" pos:end="7:26">node</name></expr>;</expr_stmt>
        <expr_stmt pos:start="8:9" pos:end="8:35"><expr pos:start="8:9" pos:end="8:34"><name pos:start="8:9" pos:end="8:12">node</name>        <operator pos:start="8:21" pos:end="8:21">=</operator> <name pos:start="8:23" pos:end="8:34"><name pos:start="8:23" pos:end="8:26">node</name><operator pos:start="8:27" pos:end="8:28">-&gt;</operator><name pos:start="8:29" pos:end="8:34">parent</name></name></expr>;</expr_stmt>
    </block_content>}</block></while>
    <if_stmt pos:start="10:5" pos:end="13:32"><if pos:start="10:5" pos:end="11:27">if <condition pos:start="10:8" pos:end="10:13">(<expr pos:start="10:9" pos:end="10:12"><name pos:start="10:9" pos:end="10:12">node</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:27"><block_content pos:start="11:9" pos:end="11:27">
        <expr_stmt pos:start="11:9" pos:end="11:27"><expr pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:14">curval</name> <operator pos:start="11:16" pos:end="11:16">=</operator> <name pos:start="11:18" pos:end="11:26"><name pos:start="11:18" pos:end="11:21">node</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:26">val</name></name></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="12:5" pos:end="13:32">else<block type="pseudo" pos:start="13:9" pos:end="13:32"><block_content pos:start="13:9" pos:end="13:32">
        <expr_stmt pos:start="13:9" pos:end="13:32"><expr pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:14">curval</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <name pos:start="13:18" pos:end="13:26"><name pos:start="13:18" pos:end="13:22">stack</name><index pos:start="13:23" pos:end="13:26">[<expr pos:start="13:24" pos:end="13:25"><name pos:start="13:24" pos:end="13:25">sp</name></expr>]</index></name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:31">val</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <while pos:start="14:5" pos:end="29:5">while <condition pos:start="14:11" pos:end="14:41">(<expr pos:start="14:12" pos:end="14:40"><name pos:start="14:12" pos:end="14:17">curval</name> <operator pos:start="14:19" pos:end="14:19">&lt;</operator> <name pos:start="14:21" pos:end="14:29">threshold</name> <operator pos:start="14:31" pos:end="14:32">&amp;&amp;</operator> <name pos:start="14:34" pos:end="14:35">sp</name> <operator pos:start="14:37" pos:end="14:38">&gt;=</operator> <literal type="number" pos:start="14:40" pos:end="14:40">0</literal></expr>)</condition> <block pos:start="14:43" pos:end="29:5">{<block_content pos:start="15:9" pos:end="28:13">
        <if_stmt pos:start="15:9" pos:end="16:36"><if pos:start="15:9" pos:end="16:36">if <condition pos:start="15:12" pos:end="15:36">(<expr pos:start="15:13" pos:end="15:35"><name pos:start="15:13" pos:end="15:18">curval</name> <operator pos:start="15:20" pos:end="15:20">&lt;</operator> <name pos:start="15:22" pos:end="15:30"><name pos:start="15:22" pos:end="15:26">stack</name><index pos:start="15:27" pos:end="15:30">[<expr pos:start="15:28" pos:end="15:29"><name pos:start="15:28" pos:end="15:29">sp</name></expr>]</index></name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:35">val</name></expr>)</condition><block type="pseudo" pos:start="16:13" pos:end="16:36"><block_content pos:start="16:13" pos:end="16:36">
            <expr_stmt pos:start="16:13" pos:end="16:36"><expr pos:start="16:13" pos:end="16:35"><name pos:start="16:13" pos:end="16:18">curval</name> <operator pos:start="16:20" pos:end="16:20">=</operator> <name pos:start="16:22" pos:end="16:30"><name pos:start="16:22" pos:end="16:26">stack</name><index pos:start="16:27" pos:end="16:30">[<expr pos:start="16:28" pos:end="16:29"><name pos:start="16:28" pos:end="16:29">sp</name></expr>]</index></name><operator pos:start="16:31" pos:end="16:32">-&gt;</operator><name pos:start="16:33" pos:end="16:35">val</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <while pos:start="17:9" pos:end="26:9">while <condition pos:start="17:15" pos:end="17:34">(<expr pos:start="17:16" pos:end="17:33"><name pos:start="17:16" pos:end="17:21">curval</name> <operator pos:start="17:23" pos:end="17:23">&lt;</operator> <name pos:start="17:25" pos:end="17:33">threshold</name></expr>)</condition> <block pos:start="17:36" pos:end="26:9">{<block_content pos:start="18:13" pos:end="25:27">
            <decl_stmt pos:start="18:13" pos:end="18:20"><decl pos:start="18:13" pos:end="18:19"><type pos:start="18:13" pos:end="18:15"><name pos:start="18:13" pos:end="18:15">int</name></type> <name pos:start="18:17" pos:end="18:19">ret</name></decl>;</decl_stmt>
            <if_stmt pos:start="19:13" pos:end="25:27"><if pos:start="19:13" pos:end="22:13">if <condition pos:start="19:16" pos:end="19:43">(<expr pos:start="19:17" pos:end="19:42"><operator pos:start="19:17" pos:end="19:17">(</operator><name pos:start="19:18" pos:end="19:20">ret</name> <operator pos:start="19:22" pos:end="19:22">=</operator> <call pos:start="19:24" pos:end="19:37"><name pos:start="19:24" pos:end="19:31">get_bits</name><argument_list pos:start="19:32" pos:end="19:37">(<argument pos:start="19:33" pos:end="19:33"><expr pos:start="19:33" pos:end="19:33"><name pos:start="19:33" pos:end="19:33">s</name></expr></argument>, <argument pos:start="19:36" pos:end="19:36"><expr pos:start="19:36" pos:end="19:36"><literal type="number" pos:start="19:36" pos:end="19:36">1</literal></expr></argument>)</argument_list></call><operator pos:start="19:38" pos:end="19:38">)</operator> <operator pos:start="19:40" pos:end="19:40">&gt;</operator> <literal type="number" pos:start="19:42" pos:end="19:42">0</literal></expr>)</condition> <block pos:start="19:45" pos:end="22:13">{<block_content pos:start="20:17" pos:end="21:22">
                <expr_stmt pos:start="20:17" pos:end="20:33"><expr pos:start="20:17" pos:end="20:32"><name pos:start="20:17" pos:end="20:25"><name pos:start="20:17" pos:end="20:21">stack</name><index pos:start="20:22" pos:end="20:25">[<expr pos:start="20:23" pos:end="20:24"><name pos:start="20:23" pos:end="20:24">sp</name></expr>]</index></name><operator pos:start="20:26" pos:end="20:27">-&gt;</operator><name pos:start="20:28" pos:end="20:30">vis</name><operator pos:start="20:31" pos:end="20:32">++</operator></expr>;</expr_stmt>
                <break pos:start="21:17" pos:end="21:22">break;</break>
            </block_content>}</block></if> <if type="elseif" pos:start="22:15" pos:end="23:25">else if <condition pos:start="22:23" pos:end="22:28">(<expr pos:start="22:24" pos:end="22:27"><operator pos:start="22:24" pos:end="22:24">!</operator><name pos:start="22:25" pos:end="22:27">ret</name></expr>)</condition><block type="pseudo" pos:start="23:17" pos:end="23:25"><block_content pos:start="23:17" pos:end="23:25">
                <expr_stmt pos:start="23:17" pos:end="23:25"><expr pos:start="23:17" pos:end="23:24"><name pos:start="23:17" pos:end="23:22">curval</name><operator pos:start="23:23" pos:end="23:24">++</operator></expr>;</expr_stmt></block_content></block></if>
            <else pos:start="24:13" pos:end="25:27">else<block type="pseudo" pos:start="25:17" pos:end="25:27"><block_content pos:start="25:17" pos:end="25:27">
                <return pos:start="25:17" pos:end="25:27">return <expr pos:start="25:24" pos:end="25:26"><name pos:start="25:24" pos:end="25:26">ret</name></expr>;</return></block_content></block></else></if_stmt>
        </block_content>}</block></while>
        <expr_stmt pos:start="27:9" pos:end="27:32"><expr pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:13">stack</name><index pos:start="27:14" pos:end="27:17">[<expr pos:start="27:15" pos:end="27:16"><name pos:start="27:15" pos:end="27:16">sp</name></expr>]</index></name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:22">val</name> <operator pos:start="27:24" pos:end="27:24">=</operator> <name pos:start="27:26" pos:end="27:31">curval</name></expr>;</expr_stmt>
        <expr_stmt pos:start="28:9" pos:end="28:13"><expr pos:start="28:9" pos:end="28:12"><name pos:start="28:9" pos:end="28:10">sp</name><operator pos:start="28:11" pos:end="28:12">--</operator></expr>;</expr_stmt>
    </block_content>}</block></while>
    <return pos:start="30:5" pos:end="30:18">return <expr pos:start="30:12" pos:end="30:17"><name pos:start="30:12" pos:end="30:17">curval</name></expr>;</return>
</block_content>}</block></function></unit>
