<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22987.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:22"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:22">abi_long</name></type> <name pos:start="1:24" pos:end="1:46">target_to_host_semarray</name><parameter_list pos:start="1:47" pos:end="3:69">(<parameter pos:start="1:48" pos:end="1:56"><decl pos:start="1:48" pos:end="1:56"><type pos:start="1:48" pos:end="1:56"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:56">semid</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:85"><decl pos:start="1:59" pos:end="1:85"><type pos:start="1:59" pos:end="1:85"><name pos:start="1:59" pos:end="1:66">unsigned</name> <name pos:start="1:68" pos:end="1:72">short</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier><modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:85">host_array</name></decl></parameter>,

                                               <parameter pos:start="3:48" pos:end="3:68"><decl pos:start="3:48" pos:end="3:68"><type pos:start="3:48" pos:end="3:68"><name pos:start="3:48" pos:end="3:56">abi_ulong</name></type> <name pos:start="3:58" pos:end="3:68">target_addr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:13">

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">nsems</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:18">short</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:25">array</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:9">union</name> <name pos:start="11:11" pos:end="11:15">semun</name></name></type> <name pos:start="11:17" pos:end="11:21">semun</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:19">semid_ds</name></name></type> <name pos:start="13:21" pos:end="13:28">semid_ds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:14">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:9">semun</name><operator pos:start="19:10" pos:end="19:10">.</operator><name pos:start="19:11" pos:end="19:13">buf</name></name> <operator pos:start="19:15" pos:end="19:15">=</operator> <operator pos:start="19:17" pos:end="19:17">&amp;</operator><name pos:start="19:18" pos:end="19:25">semid_ds</name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:44"><expr pos:start="23:5" pos:end="23:43"><name pos:start="23:5" pos:end="23:7">ret</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:43"><name pos:start="23:11" pos:end="23:16">semctl</name><argument_list pos:start="23:17" pos:end="23:43">(<argument pos:start="23:18" pos:end="23:22"><expr pos:start="23:18" pos:end="23:22"><name pos:start="23:18" pos:end="23:22">semid</name></expr></argument>, <argument pos:start="23:25" pos:end="23:25"><expr pos:start="23:25" pos:end="23:25"><literal type="number" pos:start="23:25" pos:end="23:25">0</literal></expr></argument>, <argument pos:start="23:28" pos:end="23:35"><expr pos:start="23:28" pos:end="23:35"><name pos:start="23:28" pos:end="23:35">IPC_STAT</name></expr></argument>, <argument pos:start="23:38" pos:end="23:42"><expr pos:start="23:38" pos:end="23:42"><name pos:start="23:38" pos:end="23:42">semun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:30"><if pos:start="25:5" pos:end="27:30">if <condition pos:start="25:8" pos:end="25:18">(<expr pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:14">==</operator> <operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:30"><block_content pos:start="27:9" pos:end="27:30">

        <return pos:start="27:9" pos:end="27:30">return <expr pos:start="27:16" pos:end="27:29"><call pos:start="27:16" pos:end="27:29"><name pos:start="27:16" pos:end="27:24">get_errno</name><argument_list pos:start="27:25" pos:end="27:29">(<argument pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:28">ret</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:31"><expr pos:start="31:5" pos:end="31:30"><name pos:start="31:5" pos:end="31:9">nsems</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <name pos:start="31:13" pos:end="31:30"><name pos:start="31:13" pos:end="31:20">semid_ds</name><operator pos:start="31:21" pos:end="31:21">.</operator><name pos:start="31:22" pos:end="31:30">sem_nsems</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:55"><expr pos:start="35:5" pos:end="35:54"><operator pos:start="35:5" pos:end="35:5">*</operator><name pos:start="35:6" pos:end="35:15">host_array</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:54"><name pos:start="35:19" pos:end="35:24">malloc</name><argument_list pos:start="35:25" pos:end="35:54">(<argument pos:start="35:26" pos:end="35:53"><expr pos:start="35:26" pos:end="35:53"><name pos:start="35:26" pos:end="35:30">nsems</name><operator pos:start="35:31" pos:end="35:31">*</operator>sizeof<operator pos:start="35:38" pos:end="35:38">(</operator><name pos:start="35:39" pos:end="35:46">unsigned</name> <name pos:start="35:48" pos:end="35:52">short</name><operator pos:start="35:53" pos:end="35:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="39:55"><expr pos:start="37:5" pos:end="39:54"><name pos:start="37:5" pos:end="37:9">array</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <call pos:start="37:13" pos:end="39:54"><name pos:start="37:13" pos:end="37:21">lock_user</name><argument_list pos:start="37:22" pos:end="39:54">(<argument pos:start="37:23" pos:end="37:33"><expr pos:start="37:23" pos:end="37:33"><name pos:start="37:23" pos:end="37:33">VERIFY_READ</name></expr></argument>, <argument pos:start="37:36" pos:end="37:46"><expr pos:start="37:36" pos:end="37:46"><name pos:start="37:36" pos:end="37:46">target_addr</name></expr></argument>,

                      <argument pos:start="39:23" pos:end="39:50"><expr pos:start="39:23" pos:end="39:50"><name pos:start="39:23" pos:end="39:27">nsems</name><operator pos:start="39:28" pos:end="39:28">*</operator>sizeof<operator pos:start="39:35" pos:end="39:35">(</operator><name pos:start="39:36" pos:end="39:43">unsigned</name> <name pos:start="39:45" pos:end="39:49">short</name><operator pos:start="39:50" pos:end="39:50">)</operator></expr></argument>, <argument pos:start="39:53" pos:end="39:53"><expr pos:start="39:53" pos:end="39:53"><literal type="number" pos:start="39:53" pos:end="39:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:30"><if pos:start="41:5" pos:end="43:30">if <condition pos:start="41:8" pos:end="41:15">(<expr pos:start="41:9" pos:end="41:14"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:14">array</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:30"><block_content pos:start="43:9" pos:end="43:30">

        <return pos:start="43:9" pos:end="43:30">return <expr pos:start="43:16" pos:end="43:29"><operator pos:start="43:16" pos:end="43:16">-</operator><name pos:start="43:17" pos:end="43:29">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="47:5" pos:end="51:5">for<control pos:start="47:8" pos:end="47:26">(<init pos:start="47:9" pos:end="47:12"><expr pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:9">i</name><operator pos:start="47:10" pos:end="47:10">=</operator><literal type="number" pos:start="47:11" pos:end="47:11">0</literal></expr>;</init> <condition pos:start="47:14" pos:end="47:21"><expr pos:start="47:14" pos:end="47:20"><name pos:start="47:14" pos:end="47:14">i</name><operator pos:start="47:15" pos:end="47:15">&lt;</operator><name pos:start="47:16" pos:end="47:20">nsems</name></expr>;</condition> <incr pos:start="47:23" pos:end="47:25"><expr pos:start="47:23" pos:end="47:25"><name pos:start="47:23" pos:end="47:23">i</name><operator pos:start="47:24" pos:end="47:25">++</operator></expr></incr>)</control> <block pos:start="47:28" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:48">

        <expr_stmt pos:start="49:9" pos:end="49:48"><expr pos:start="49:9" pos:end="49:47"><call pos:start="49:9" pos:end="49:47"><name pos:start="49:9" pos:end="49:18">__get_user</name><argument_list pos:start="49:19" pos:end="49:47">(<argument pos:start="49:20" pos:end="49:35"><expr pos:start="49:20" pos:end="49:35"><operator pos:start="49:20" pos:end="49:20">(</operator><operator pos:start="49:21" pos:end="49:21">*</operator><name pos:start="49:22" pos:end="49:31">host_array</name><operator pos:start="49:32" pos:end="49:32">)</operator><index pos:start="49:33" pos:end="49:35">[<expr pos:start="49:34" pos:end="49:34"><name pos:start="49:34" pos:end="49:34">i</name></expr>]</index></expr></argument>, <argument pos:start="49:38" pos:end="49:46"><expr pos:start="49:38" pos:end="49:46"><operator pos:start="49:38" pos:end="49:38">&amp;</operator><name pos:start="49:39" pos:end="49:46"><name pos:start="49:39" pos:end="49:43">array</name><index pos:start="49:44" pos:end="49:46">[<expr pos:start="49:45" pos:end="49:45"><name pos:start="49:45" pos:end="49:45">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="53:5" pos:end="53:39"><expr pos:start="53:5" pos:end="53:38"><call pos:start="53:5" pos:end="53:38"><name pos:start="53:5" pos:end="53:15">unlock_user</name><argument_list pos:start="53:16" pos:end="53:38">(<argument pos:start="53:17" pos:end="53:21"><expr pos:start="53:17" pos:end="53:21"><name pos:start="53:17" pos:end="53:21">array</name></expr></argument>, <argument pos:start="53:24" pos:end="53:34"><expr pos:start="53:24" pos:end="53:34"><name pos:start="53:24" pos:end="53:34">target_addr</name></expr></argument>, <argument pos:start="53:37" pos:end="53:37"><expr pos:start="53:37" pos:end="53:37"><literal type="number" pos:start="53:37" pos:end="53:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
