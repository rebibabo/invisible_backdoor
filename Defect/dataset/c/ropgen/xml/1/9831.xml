<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9831.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:19"><name pos:start="1:1" pos:end="1:17"><name pos:start="1:1" pos:end="1:6">struct</name> <name pos:start="1:8" pos:end="1:17">omap_mmc_s</name></name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:33">omap2_mmc_init</name><parameter_list pos:start="1:34" pos:end="5:45">(<parameter pos:start="1:35" pos:end="1:64"><decl pos:start="1:35" pos:end="1:64"><type pos:start="1:35" pos:end="1:64"><name pos:start="1:35" pos:end="1:60"><name pos:start="1:35" pos:end="1:40">struct</name> <name pos:start="1:42" pos:end="1:60">omap_target_agent_s</name></name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:64">ta</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:33"><decl pos:start="3:17" pos:end="3:33"><type pos:start="3:17" pos:end="3:33"><name pos:start="3:17" pos:end="3:28">BlockBackend</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:33">blk</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:47"><decl pos:start="3:36" pos:end="3:47"><type pos:start="3:36" pos:end="3:47"><name pos:start="3:36" pos:end="3:43">qemu_irq</name></type> <name pos:start="3:45" pos:end="3:47">irq</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:63"><decl pos:start="3:50" pos:end="3:63"><type pos:start="3:50" pos:end="3:61"><name pos:start="3:50" pos:end="3:57">qemu_irq</name></type> <name pos:start="3:59" pos:end="3:63"><name pos:start="3:59" pos:end="3:61">dma</name><index pos:start="3:62" pos:end="3:63">[]</index></name></decl></parameter>,

                <parameter pos:start="5:17" pos:end="5:29"><decl pos:start="5:17" pos:end="5:29"><type pos:start="5:17" pos:end="5:29"><name pos:start="5:17" pos:end="5:24">omap_clk</name></type> <name pos:start="5:26" pos:end="5:29">fclk</name></decl></parameter>, <parameter pos:start="5:32" pos:end="5:44"><decl pos:start="5:32" pos:end="5:44"><type pos:start="5:32" pos:end="5:44"><name pos:start="5:32" pos:end="5:39">omap_clk</name></type> <name pos:start="5:41" pos:end="5:44">iclk</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="59:1">{<block_content pos:start="9:5" pos:end="57:13">

    <decl_stmt pos:start="9:5" pos:end="11:49"><decl pos:start="9:5" pos:end="11:48"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:21">omap_mmc_s</name></name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:24">s</name> <init pos:start="9:26" pos:end="11:48">= <expr pos:start="9:28" pos:end="11:48"><operator pos:start="9:28" pos:end="9:28">(</operator>struct <name pos:start="9:36" pos:end="9:45">omap_mmc_s</name> <operator pos:start="9:47" pos:end="9:47">*</operator><operator pos:start="9:48" pos:end="9:48">)</operator>

            <call pos:start="11:13" pos:end="11:48"><name pos:start="11:13" pos:end="11:21">g_malloc0</name><argument_list pos:start="11:22" pos:end="11:48">(<argument pos:start="11:23" pos:end="11:47"><expr pos:start="11:23" pos:end="11:47"><sizeof pos:start="11:23" pos:end="11:47">sizeof<argument_list pos:start="11:29" pos:end="11:47">(<argument pos:start="11:30" pos:end="11:46"><expr pos:start="11:30" pos:end="11:46">struct <name pos:start="11:37" pos:end="11:46">omap_mmc_s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:17"><expr pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:10">irq</name></name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:16">irq</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:17"><expr pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:10">dma</name></name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:16">dma</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:18"><expr pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:10">clk</name></name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:17">fclk</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:17"><expr pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:12">lines</name></name> <operator pos:start="21:14" pos:end="21:14">=</operator> <literal type="number" pos:start="21:16" pos:end="21:16">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:15"><expr pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:10">rev</name></name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">2</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><call pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:18">omap_mmc_reset</name><argument_list pos:start="27:19" pos:end="27:21">(<argument pos:start="27:20" pos:end="27:20"><expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="33:54"><expr pos:start="31:5" pos:end="33:53"><call pos:start="31:5" pos:end="33:53"><name pos:start="31:5" pos:end="31:25">memory_region_init_io</name><argument_list pos:start="31:26" pos:end="33:53">(<argument pos:start="31:27" pos:end="31:35"><expr pos:start="31:27" pos:end="31:35"><operator pos:start="31:27" pos:end="31:27">&amp;</operator><name pos:start="31:28" pos:end="31:35"><name pos:start="31:28" pos:end="31:28">s</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:35">iomem</name></name></expr></argument>, <argument pos:start="31:38" pos:end="31:41"><expr pos:start="31:38" pos:end="31:41"><name pos:start="31:38" pos:end="31:41">NULL</name></expr></argument>, <argument pos:start="31:44" pos:end="31:56"><expr pos:start="31:44" pos:end="31:56"><operator pos:start="31:44" pos:end="31:44">&amp;</operator><name pos:start="31:45" pos:end="31:56">omap_mmc_ops</name></expr></argument>, <argument pos:start="31:59" pos:end="31:59"><expr pos:start="31:59" pos:end="31:59"><name pos:start="31:59" pos:end="31:59">s</name></expr></argument>, <argument pos:start="31:62" pos:end="31:71"><expr pos:start="31:62" pos:end="31:71"><literal type="string" pos:start="31:62" pos:end="31:71">"omap.mmc"</literal></expr></argument>,

                          <argument pos:start="33:27" pos:end="33:52"><expr pos:start="33:27" pos:end="33:52"><call pos:start="33:27" pos:end="33:52"><name pos:start="33:27" pos:end="33:45">omap_l4_region_size</name><argument_list pos:start="33:46" pos:end="33:52">(<argument pos:start="33:47" pos:end="33:48"><expr pos:start="33:47" pos:end="33:48"><name pos:start="33:47" pos:end="33:48">ta</name></expr></argument>, <argument pos:start="33:51" pos:end="33:51"><expr pos:start="33:51" pos:end="33:51"><literal type="number" pos:start="33:51" pos:end="33:51">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:37"><expr pos:start="35:5" pos:end="35:36"><call pos:start="35:5" pos:end="35:36"><name pos:start="35:5" pos:end="35:18">omap_l4_attach</name><argument_list pos:start="35:19" pos:end="35:36">(<argument pos:start="35:20" pos:end="35:21"><expr pos:start="35:20" pos:end="35:21"><name pos:start="35:20" pos:end="35:21">ta</name></expr></argument>, <argument pos:start="35:24" pos:end="35:24"><expr pos:start="35:24" pos:end="35:24"><literal type="number" pos:start="35:24" pos:end="35:24">0</literal></expr></argument>, <argument pos:start="35:27" pos:end="35:35"><expr pos:start="35:27" pos:end="35:35"><operator pos:start="35:27" pos:end="35:27">&amp;</operator><name pos:start="35:28" pos:end="35:35"><name pos:start="35:28" pos:end="35:28">s</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:35">iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:33">/* Instantiate the storage */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:11"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:11">card</name></name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:33"><name pos:start="41:15" pos:end="41:21">sd_init</name><argument_list pos:start="41:22" pos:end="41:33">(<argument pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:25">blk</name></expr></argument>, <argument pos:start="41:28" pos:end="41:32"><expr pos:start="41:28" pos:end="41:32"><name pos:start="41:28" pos:end="41:32">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:24">(<expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:15">card</name></name> <operator pos:start="43:17" pos:end="43:18">==</operator> <name pos:start="43:20" pos:end="43:23">NULL</name></expr>)</condition> <block pos:start="43:26" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:16">

        <expr_stmt pos:start="45:9" pos:end="45:16"><expr pos:start="45:9" pos:end="45:15"><call pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:12">exit</name><argument_list pos:start="45:13" pos:end="45:15">(<argument pos:start="45:14" pos:end="45:14"><expr pos:start="45:14" pos:end="45:14"><literal type="number" pos:start="45:14" pos:end="45:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:57"><expr pos:start="51:5" pos:end="51:56"><name pos:start="51:5" pos:end="51:11"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:11">cdet</name></name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:56"><name pos:start="51:15" pos:end="51:31">qemu_allocate_irq</name><argument_list pos:start="51:32" pos:end="51:56">(<argument pos:start="51:33" pos:end="51:49"><expr pos:start="51:33" pos:end="51:49"><name pos:start="51:33" pos:end="51:49">omap_mmc_cover_cb</name></expr></argument>, <argument pos:start="51:52" pos:end="51:52"><expr pos:start="51:52" pos:end="51:52"><name pos:start="51:52" pos:end="51:52">s</name></expr></argument>, <argument pos:start="51:55" pos:end="51:55"><expr pos:start="51:55" pos:end="51:55"><literal type="number" pos:start="51:55" pos:end="51:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:38"><expr pos:start="53:5" pos:end="53:37"><call pos:start="53:5" pos:end="53:37"><name pos:start="53:5" pos:end="53:13">sd_set_cb</name><argument_list pos:start="53:14" pos:end="53:37">(<argument pos:start="53:15" pos:end="53:21"><expr pos:start="53:15" pos:end="53:21"><name pos:start="53:15" pos:end="53:21"><name pos:start="53:15" pos:end="53:15">s</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:21">card</name></name></expr></argument>, <argument pos:start="53:24" pos:end="53:27"><expr pos:start="53:24" pos:end="53:27"><name pos:start="53:24" pos:end="53:27">NULL</name></expr></argument>, <argument pos:start="53:30" pos:end="53:36"><expr pos:start="53:30" pos:end="53:36"><name pos:start="53:30" pos:end="53:36"><name pos:start="53:30" pos:end="53:30">s</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:36">cdet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><name pos:start="57:12" pos:end="57:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
