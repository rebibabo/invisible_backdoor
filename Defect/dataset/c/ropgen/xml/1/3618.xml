<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3618.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">property_get_tm</name><parameter_list pos:start="1:28" pos:end="3:55">(<parameter pos:start="1:29" pos:end="1:39"><decl pos:start="1:29" pos:end="1:39"><type pos:start="1:29" pos:end="1:39"><name pos:start="1:29" pos:end="1:34">Object</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">obj</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:51"><decl pos:start="1:42" pos:end="1:51"><type pos:start="1:42" pos:end="1:51"><name pos:start="1:42" pos:end="1:48">Visitor</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">v</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:69"><decl pos:start="1:54" pos:end="1:69"><type pos:start="1:54" pos:end="1:69"><specifier pos:start="1:54" pos:end="1:58">const</specifier> <name pos:start="1:60" pos:end="1:63">char</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">name</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:40"><decl pos:start="3:29" pos:end="3:40"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:40">opaque</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:54"><decl pos:start="3:43" pos:end="3:54"><type pos:start="3:43" pos:end="3:54"><name pos:start="3:43" pos:end="3:47">Error</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier><modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:54">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="95:1">{<block_content pos:start="7:5" pos:end="91:31">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">TMProperty</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:20">prop</name> <init pos:start="7:22" pos:end="7:29">= <expr pos:start="7:24" pos:end="7:29"><name pos:start="7:24" pos:end="7:29">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:13">tm</name></name></type> <name pos:start="11:15" pos:end="11:19">value</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><call pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:8">prop</name><operator pos:start="15:9" pos:end="15:10">-&gt;</operator><name pos:start="15:11" pos:end="15:13">get</name></name><argument_list pos:start="15:14" pos:end="15:32">(<argument pos:start="15:15" pos:end="15:17"><expr pos:start="15:15" pos:end="15:17"><name pos:start="15:15" pos:end="15:17">obj</name></expr></argument>, <argument pos:start="15:20" pos:end="15:25"><expr pos:start="15:20" pos:end="15:25"><operator pos:start="15:20" pos:end="15:20">&amp;</operator><name pos:start="15:21" pos:end="15:25">value</name></expr></argument>, <argument pos:start="15:28" pos:end="15:31"><expr pos:start="15:28" pos:end="15:31"><operator pos:start="15:28" pos:end="15:28">&amp;</operator><name pos:start="15:29" pos:end="15:31">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:12">(<expr pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">err</name></expr>)</condition> <block pos:start="17:14" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:17">

        <goto pos:start="19:9" pos:end="19:17">goto <name pos:start="19:14" pos:end="19:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:47"><expr pos:start="25:5" pos:end="25:46"><call pos:start="25:5" pos:end="25:46"><name pos:start="25:5" pos:end="25:22">visit_start_struct</name><argument_list pos:start="25:23" pos:end="25:46">(<argument pos:start="25:24" pos:end="25:24"><expr pos:start="25:24" pos:end="25:24"><name pos:start="25:24" pos:end="25:24">v</name></expr></argument>, <argument pos:start="25:27" pos:end="25:30"><expr pos:start="25:27" pos:end="25:30"><name pos:start="25:27" pos:end="25:30">name</name></expr></argument>, <argument pos:start="25:33" pos:end="25:36"><expr pos:start="25:33" pos:end="25:36"><name pos:start="25:33" pos:end="25:36">NULL</name></expr></argument>, <argument pos:start="25:39" pos:end="25:39"><expr pos:start="25:39" pos:end="25:39"><literal type="number" pos:start="25:39" pos:end="25:39">0</literal></expr></argument>, <argument pos:start="25:42" pos:end="25:45"><expr pos:start="25:42" pos:end="25:45"><operator pos:start="25:42" pos:end="25:42">&amp;</operator><name pos:start="25:43" pos:end="25:45">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:12">(<expr pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">err</name></expr>)</condition> <block pos:start="27:14" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:17">

        <goto pos:start="29:9" pos:end="29:17">goto <name pos:start="29:14" pos:end="29:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:57"><expr pos:start="33:5" pos:end="33:56"><call pos:start="33:5" pos:end="33:56"><name pos:start="33:5" pos:end="33:20">visit_type_int32</name><argument_list pos:start="33:21" pos:end="33:56">(<argument pos:start="33:22" pos:end="33:22"><expr pos:start="33:22" pos:end="33:22"><name pos:start="33:22" pos:end="33:22">v</name></expr></argument>, <argument pos:start="33:25" pos:end="33:33"><expr pos:start="33:25" pos:end="33:33"><literal type="string" pos:start="33:25" pos:end="33:33">"tm_year"</literal></expr></argument>, <argument pos:start="33:36" pos:end="33:49"><expr pos:start="33:36" pos:end="33:49"><operator pos:start="33:36" pos:end="33:36">&amp;</operator><name pos:start="33:37" pos:end="33:49"><name pos:start="33:37" pos:end="33:41">value</name><operator pos:start="33:42" pos:end="33:42">.</operator><name pos:start="33:43" pos:end="33:49">tm_year</name></name></expr></argument>, <argument pos:start="33:52" pos:end="33:55"><expr pos:start="33:52" pos:end="33:55"><operator pos:start="33:52" pos:end="33:52">&amp;</operator><name pos:start="33:53" pos:end="33:55">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:12">(<expr pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">err</name></expr>)</condition> <block pos:start="35:14" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:21">

        <goto pos:start="37:9" pos:end="37:21">goto <name pos:start="37:14" pos:end="37:20">out_end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:55"><expr pos:start="41:5" pos:end="41:54"><call pos:start="41:5" pos:end="41:54"><name pos:start="41:5" pos:end="41:20">visit_type_int32</name><argument_list pos:start="41:21" pos:end="41:54">(<argument pos:start="41:22" pos:end="41:22"><expr pos:start="41:22" pos:end="41:22"><name pos:start="41:22" pos:end="41:22">v</name></expr></argument>, <argument pos:start="41:25" pos:end="41:32"><expr pos:start="41:25" pos:end="41:32"><literal type="string" pos:start="41:25" pos:end="41:32">"tm_mon"</literal></expr></argument>, <argument pos:start="41:35" pos:end="41:47"><expr pos:start="41:35" pos:end="41:47"><operator pos:start="41:35" pos:end="41:35">&amp;</operator><name pos:start="41:36" pos:end="41:47"><name pos:start="41:36" pos:end="41:40">value</name><operator pos:start="41:41" pos:end="41:41">.</operator><name pos:start="41:42" pos:end="41:47">tm_mon</name></name></expr></argument>, <argument pos:start="41:50" pos:end="41:53"><expr pos:start="41:50" pos:end="41:53"><operator pos:start="41:50" pos:end="41:50">&amp;</operator><name pos:start="41:51" pos:end="41:53">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:12">(<expr pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">err</name></expr>)</condition> <block pos:start="43:14" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:21">

        <goto pos:start="45:9" pos:end="45:21">goto <name pos:start="45:14" pos:end="45:20">out_end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:57"><expr pos:start="49:5" pos:end="49:56"><call pos:start="49:5" pos:end="49:56"><name pos:start="49:5" pos:end="49:20">visit_type_int32</name><argument_list pos:start="49:21" pos:end="49:56">(<argument pos:start="49:22" pos:end="49:22"><expr pos:start="49:22" pos:end="49:22"><name pos:start="49:22" pos:end="49:22">v</name></expr></argument>, <argument pos:start="49:25" pos:end="49:33"><expr pos:start="49:25" pos:end="49:33"><literal type="string" pos:start="49:25" pos:end="49:33">"tm_mday"</literal></expr></argument>, <argument pos:start="49:36" pos:end="49:49"><expr pos:start="49:36" pos:end="49:49"><operator pos:start="49:36" pos:end="49:36">&amp;</operator><name pos:start="49:37" pos:end="49:49"><name pos:start="49:37" pos:end="49:41">value</name><operator pos:start="49:42" pos:end="49:42">.</operator><name pos:start="49:43" pos:end="49:49">tm_mday</name></name></expr></argument>, <argument pos:start="49:52" pos:end="49:55"><expr pos:start="49:52" pos:end="49:55"><operator pos:start="49:52" pos:end="49:52">&amp;</operator><name pos:start="49:53" pos:end="49:55">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:12">(<expr pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">err</name></expr>)</condition> <block pos:start="51:14" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:21">

        <goto pos:start="53:9" pos:end="53:21">goto <name pos:start="53:14" pos:end="53:20">out_end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:57"><expr pos:start="57:5" pos:end="57:56"><call pos:start="57:5" pos:end="57:56"><name pos:start="57:5" pos:end="57:20">visit_type_int32</name><argument_list pos:start="57:21" pos:end="57:56">(<argument pos:start="57:22" pos:end="57:22"><expr pos:start="57:22" pos:end="57:22"><name pos:start="57:22" pos:end="57:22">v</name></expr></argument>, <argument pos:start="57:25" pos:end="57:33"><expr pos:start="57:25" pos:end="57:33"><literal type="string" pos:start="57:25" pos:end="57:33">"tm_hour"</literal></expr></argument>, <argument pos:start="57:36" pos:end="57:49"><expr pos:start="57:36" pos:end="57:49"><operator pos:start="57:36" pos:end="57:36">&amp;</operator><name pos:start="57:37" pos:end="57:49"><name pos:start="57:37" pos:end="57:41">value</name><operator pos:start="57:42" pos:end="57:42">.</operator><name pos:start="57:43" pos:end="57:49">tm_hour</name></name></expr></argument>, <argument pos:start="57:52" pos:end="57:55"><expr pos:start="57:52" pos:end="57:55"><operator pos:start="57:52" pos:end="57:52">&amp;</operator><name pos:start="57:53" pos:end="57:55">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:12">(<expr pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:11">err</name></expr>)</condition> <block pos:start="59:14" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:21">

        <goto pos:start="61:9" pos:end="61:21">goto <name pos:start="61:14" pos:end="61:20">out_end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:55"><expr pos:start="65:5" pos:end="65:54"><call pos:start="65:5" pos:end="65:54"><name pos:start="65:5" pos:end="65:20">visit_type_int32</name><argument_list pos:start="65:21" pos:end="65:54">(<argument pos:start="65:22" pos:end="65:22"><expr pos:start="65:22" pos:end="65:22"><name pos:start="65:22" pos:end="65:22">v</name></expr></argument>, <argument pos:start="65:25" pos:end="65:32"><expr pos:start="65:25" pos:end="65:32"><literal type="string" pos:start="65:25" pos:end="65:32">"tm_min"</literal></expr></argument>, <argument pos:start="65:35" pos:end="65:47"><expr pos:start="65:35" pos:end="65:47"><operator pos:start="65:35" pos:end="65:35">&amp;</operator><name pos:start="65:36" pos:end="65:47"><name pos:start="65:36" pos:end="65:40">value</name><operator pos:start="65:41" pos:end="65:41">.</operator><name pos:start="65:42" pos:end="65:47">tm_min</name></name></expr></argument>, <argument pos:start="65:50" pos:end="65:53"><expr pos:start="65:50" pos:end="65:53"><operator pos:start="65:50" pos:end="65:50">&amp;</operator><name pos:start="65:51" pos:end="65:53">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="71:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:12">(<expr pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">err</name></expr>)</condition> <block pos:start="67:14" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:21">

        <goto pos:start="69:9" pos:end="69:21">goto <name pos:start="69:14" pos:end="69:20">out_end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:55"><expr pos:start="73:5" pos:end="73:54"><call pos:start="73:5" pos:end="73:54"><name pos:start="73:5" pos:end="73:20">visit_type_int32</name><argument_list pos:start="73:21" pos:end="73:54">(<argument pos:start="73:22" pos:end="73:22"><expr pos:start="73:22" pos:end="73:22"><name pos:start="73:22" pos:end="73:22">v</name></expr></argument>, <argument pos:start="73:25" pos:end="73:32"><expr pos:start="73:25" pos:end="73:32"><literal type="string" pos:start="73:25" pos:end="73:32">"tm_sec"</literal></expr></argument>, <argument pos:start="73:35" pos:end="73:47"><expr pos:start="73:35" pos:end="73:47"><operator pos:start="73:35" pos:end="73:35">&amp;</operator><name pos:start="73:36" pos:end="73:47"><name pos:start="73:36" pos:end="73:40">value</name><operator pos:start="73:41" pos:end="73:41">.</operator><name pos:start="73:42" pos:end="73:47">tm_sec</name></name></expr></argument>, <argument pos:start="73:50" pos:end="73:53"><expr pos:start="73:50" pos:end="73:53"><operator pos:start="73:50" pos:end="73:50">&amp;</operator><name pos:start="73:51" pos:end="73:53">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:12">(<expr pos:start="75:9" pos:end="75:11"><name pos:start="75:9" pos:end="75:11">err</name></expr>)</condition> <block pos:start="75:14" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:21">

        <goto pos:start="77:9" pos:end="77:21">goto <name pos:start="77:14" pos:end="77:20">out_end</name>;</goto>

    </block_content>}</block></if></if_stmt>

<label pos:start="81:1" pos:end="81:8"><name pos:start="81:1" pos:end="81:7">out_end</name>:</label>

    <expr_stmt pos:start="83:5" pos:end="83:31"><expr pos:start="83:5" pos:end="83:30"><call pos:start="83:5" pos:end="83:30"><name pos:start="83:5" pos:end="83:19">error_propagate</name><argument_list pos:start="83:20" pos:end="83:30">(<argument pos:start="83:21" pos:end="83:24"><expr pos:start="83:21" pos:end="83:24"><name pos:start="83:21" pos:end="83:24">errp</name></expr></argument>, <argument pos:start="83:27" pos:end="83:29"><expr pos:start="83:27" pos:end="83:29"><name pos:start="83:27" pos:end="83:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:15"><expr pos:start="85:5" pos:end="85:14"><name pos:start="85:5" pos:end="85:7">err</name> <operator pos:start="85:9" pos:end="85:9">=</operator> <name pos:start="85:11" pos:end="85:14">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:30"><expr pos:start="87:5" pos:end="87:29"><call pos:start="87:5" pos:end="87:29"><name pos:start="87:5" pos:end="87:20">visit_end_struct</name><argument_list pos:start="87:21" pos:end="87:29">(<argument pos:start="87:22" pos:end="87:22"><expr pos:start="87:22" pos:end="87:22"><name pos:start="87:22" pos:end="87:22">v</name></expr></argument>, <argument pos:start="87:25" pos:end="87:28"><expr pos:start="87:25" pos:end="87:28"><name pos:start="87:25" pos:end="87:28">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="89:1" pos:end="89:4"><name pos:start="89:1" pos:end="89:3">out</name>:</label>

    <expr_stmt pos:start="91:5" pos:end="91:31"><expr pos:start="91:5" pos:end="91:30"><call pos:start="91:5" pos:end="91:30"><name pos:start="91:5" pos:end="91:19">error_propagate</name><argument_list pos:start="91:20" pos:end="91:30">(<argument pos:start="91:21" pos:end="91:24"><expr pos:start="91:21" pos:end="91:24"><name pos:start="91:21" pos:end="91:24">errp</name></expr></argument>, <argument pos:start="91:27" pos:end="91:29"><expr pos:start="91:27" pos:end="91:29"><name pos:start="91:27" pos:end="91:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



</block_content>}</block></function>
</unit>
