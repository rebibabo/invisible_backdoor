<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5945.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">ehci_execute_complete</name><parameter_list pos:start="1:34" pos:end="1:47">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:45"><name pos:start="1:35" pos:end="1:43">EHCIQueue</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">q</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:5">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">EHCIPacket</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">p</name> <init pos:start="5:19" pos:end="5:45">= <expr pos:start="5:21" pos:end="5:45"><call pos:start="5:21" pos:end="5:45"><name pos:start="5:21" pos:end="5:32">QTAILQ_FIRST</name><argument_list pos:start="5:33" pos:end="5:45">(<argument pos:start="5:34" pos:end="5:44"><expr pos:start="5:34" pos:end="5:44"><operator pos:start="5:34" pos:end="5:34">&amp;</operator><name pos:start="5:35" pos:end="5:44"><name pos:start="5:35" pos:end="5:35">q</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:44">packets</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:22"><expr pos:start="9:5" pos:end="9:21"><call pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:10">assert</name><argument_list pos:start="9:11" pos:end="9:21">(<argument pos:start="9:12" pos:end="9:20"><expr pos:start="9:12" pos:end="9:20"><name pos:start="9:12" pos:end="9:12">p</name> <operator pos:start="9:14" pos:end="9:15">!=</operator> <name pos:start="9:17" pos:end="9:20">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:37"><expr pos:start="11:5" pos:end="11:36"><call pos:start="11:5" pos:end="11:36"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:36">(<argument pos:start="11:12" pos:end="11:35"><expr pos:start="11:12" pos:end="11:35"><name pos:start="11:12" pos:end="11:21"><name pos:start="11:12" pos:end="11:12">p</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:21">qtdaddr</name></name> <operator pos:start="11:23" pos:end="11:24">==</operator> <name pos:start="11:26" pos:end="11:35"><name pos:start="11:26" pos:end="11:26">q</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:35">qtdaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:44"><expr pos:start="13:5" pos:end="13:43"><call pos:start="13:5" pos:end="13:43"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:43">(<argument pos:start="13:12" pos:end="13:42"><expr pos:start="13:12" pos:end="13:42"><name pos:start="13:12" pos:end="13:19"><name pos:start="13:12" pos:end="13:12">p</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:19">async</name></name> <operator pos:start="13:21" pos:end="13:22">!=</operator> <name pos:start="13:24" pos:end="13:42">EHCI_ASYNC_INFLIGHT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:5">p</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:12">async</name></name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:30">EHCI_ASYNC_NONE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="21:62"><expr pos:start="19:5" pos:end="21:61"><call pos:start="19:5" pos:end="21:61"><name pos:start="19:5" pos:end="19:11">DPRINTF</name><argument_list pos:start="19:12" pos:end="21:61">(<argument pos:start="19:13" pos:end="19:79"><expr pos:start="19:13" pos:end="19:79"><literal type="string" pos:start="19:13" pos:end="19:79">"execute_complete: qhaddr 0x%x, next %x, qtdaddr 0x%x, status %d\n"</literal></expr></argument>,

            <argument pos:start="21:13" pos:end="21:21"><expr pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:13">q</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:21">qhaddr</name></name></expr></argument>, <argument pos:start="21:24" pos:end="21:33"><expr pos:start="21:24" pos:end="21:33"><name pos:start="21:24" pos:end="21:33"><name pos:start="21:24" pos:end="21:24">q</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:28">qh</name><operator pos:start="21:29" pos:end="21:29">.</operator><name pos:start="21:30" pos:end="21:33">next</name></name></expr></argument>, <argument pos:start="21:36" pos:end="21:45"><expr pos:start="21:36" pos:end="21:45"><name pos:start="21:36" pos:end="21:45"><name pos:start="21:36" pos:end="21:36">q</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:45">qtdaddr</name></name></expr></argument>, <argument pos:start="21:48" pos:end="21:60"><expr pos:start="21:48" pos:end="21:60"><name pos:start="21:48" pos:end="21:60"><name pos:start="21:48" pos:end="21:48">q</name><operator pos:start="21:49" pos:end="21:50">-&gt;</operator><name pos:start="21:51" pos:end="21:60">usb_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="105:5"><if pos:start="25:5" pos:end="75:5">if <condition pos:start="25:8" pos:end="25:26">(<expr pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:9">p</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:21">usb_status</name></name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <literal type="number" pos:start="25:25" pos:end="25:25">0</literal></expr>)</condition> <block pos:start="25:28" pos:end="75:5">{<block_content pos:start="27:9" pos:end="73:9">

        <switch pos:start="27:9" pos:end="73:9">switch <condition pos:start="27:16" pos:end="27:30">(<expr pos:start="27:17" pos:end="27:29"><name pos:start="27:17" pos:end="27:29"><name pos:start="27:17" pos:end="27:17">p</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:29">usb_status</name></name></expr>)</condition> <block pos:start="27:32" pos:end="73:9">{<block_content pos:start="29:9" pos:end="71:18">

        <case pos:start="29:9" pos:end="29:29">case <expr pos:start="29:14" pos:end="29:28"><name pos:start="29:14" pos:end="29:28">USB_RET_IOERROR</name></expr>:</case>

        <case pos:start="31:9" pos:end="31:27">case <expr pos:start="31:14" pos:end="31:26"><name pos:start="31:14" pos:end="31:26">USB_RET_NODEV</name></expr>:</case>

            <expr_stmt pos:start="33:13" pos:end="33:64"><expr pos:start="33:13" pos:end="33:63"><name pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:13">q</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:17">qh</name><operator pos:start="33:18" pos:end="33:18">.</operator><name pos:start="33:19" pos:end="33:23">token</name></name> <operator pos:start="33:25" pos:end="33:26">|=</operator> <operator pos:start="33:28" pos:end="33:28">(</operator><name pos:start="33:29" pos:end="33:42">QTD_TOKEN_HALT</name> <operator pos:start="33:44" pos:end="33:44">|</operator> <name pos:start="33:46" pos:end="33:62">QTD_TOKEN_XACTERR</name><operator pos:start="33:63" pos:end="33:63">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:55"><expr pos:start="35:13" pos:end="35:54"><call pos:start="35:13" pos:end="35:54"><name pos:start="35:13" pos:end="35:21">set_field</name><argument_list pos:start="35:22" pos:end="35:54">(<argument pos:start="35:23" pos:end="35:34"><expr pos:start="35:23" pos:end="35:34"><operator pos:start="35:23" pos:end="35:23">&amp;</operator><name pos:start="35:24" pos:end="35:34"><name pos:start="35:24" pos:end="35:24">q</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:28">qh</name><operator pos:start="35:29" pos:end="35:29">.</operator><name pos:start="35:30" pos:end="35:34">token</name></name></expr></argument>, <argument pos:start="35:37" pos:end="35:37"><expr pos:start="35:37" pos:end="35:37"><literal type="number" pos:start="35:37" pos:end="35:37">0</literal></expr></argument>, <argument pos:start="35:40" pos:end="35:53"><expr pos:start="35:40" pos:end="35:53"><name pos:start="35:40" pos:end="35:53">QTD_TOKEN_CERR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:58"><expr pos:start="37:13" pos:end="37:57"><call pos:start="37:13" pos:end="37:57"><name pos:start="37:13" pos:end="37:33">ehci_record_interrupt</name><argument_list pos:start="37:34" pos:end="37:57">(<argument pos:start="37:35" pos:end="37:41"><expr pos:start="37:35" pos:end="37:41"><name pos:start="37:35" pos:end="37:41"><name pos:start="37:35" pos:end="37:35">q</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:41">ehci</name></name></expr></argument>, <argument pos:start="37:44" pos:end="37:56"><expr pos:start="37:44" pos:end="37:56"><name pos:start="37:44" pos:end="37:56">USBSTS_ERRINT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        <case pos:start="41:9" pos:end="41:27">case <expr pos:start="41:14" pos:end="41:26"><name pos:start="41:14" pos:end="41:26">USB_RET_STALL</name></expr>:</case>

            <expr_stmt pos:start="43:13" pos:end="43:42"><expr pos:start="43:13" pos:end="43:41"><name pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:13">q</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:17">qh</name><operator pos:start="43:18" pos:end="43:18">.</operator><name pos:start="43:19" pos:end="43:23">token</name></name> <operator pos:start="43:25" pos:end="43:26">|=</operator> <name pos:start="43:28" pos:end="43:41">QTD_TOKEN_HALT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:58"><expr pos:start="45:13" pos:end="45:57"><call pos:start="45:13" pos:end="45:57"><name pos:start="45:13" pos:end="45:33">ehci_record_interrupt</name><argument_list pos:start="45:34" pos:end="45:57">(<argument pos:start="45:35" pos:end="45:41"><expr pos:start="45:35" pos:end="45:41"><name pos:start="45:35" pos:end="45:41"><name pos:start="45:35" pos:end="45:35">q</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:41">ehci</name></name></expr></argument>, <argument pos:start="45:44" pos:end="45:56"><expr pos:start="45:44" pos:end="45:56"><name pos:start="45:44" pos:end="45:56">USBSTS_ERRINT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        <case pos:start="49:9" pos:end="49:25">case <expr pos:start="49:14" pos:end="49:24"><name pos:start="49:14" pos:end="49:24">USB_RET_NAK</name></expr>:</case>

            <expr_stmt pos:start="51:13" pos:end="51:64"><expr pos:start="51:13" pos:end="51:63"><call pos:start="51:13" pos:end="51:63"><name pos:start="51:13" pos:end="51:21">set_field</name><argument_list pos:start="51:22" pos:end="51:63">(<argument pos:start="51:23" pos:end="51:40"><expr pos:start="51:23" pos:end="51:40"><operator pos:start="51:23" pos:end="51:23">&amp;</operator><name pos:start="51:24" pos:end="51:40"><name pos:start="51:24" pos:end="51:24">q</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:28">qh</name><operator pos:start="51:29" pos:end="51:29">.</operator><name pos:start="51:30" pos:end="51:40">altnext_qtd</name></name></expr></argument>, <argument pos:start="51:43" pos:end="51:43"><expr pos:start="51:43" pos:end="51:43"><literal type="number" pos:start="51:43" pos:end="51:43">0</literal></expr></argument>, <argument pos:start="51:46" pos:end="51:62"><expr pos:start="51:46" pos:end="51:62"><name pos:start="51:46" pos:end="51:62">QH_ALTNEXT_NAKCNT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:19">return;</return> <comment type="block" pos:start="53:21" pos:end="53:66">/* We're not done yet with this transaction */</comment>

        <case pos:start="55:9" pos:end="55:28">case <expr pos:start="55:14" pos:end="55:27"><name pos:start="55:14" pos:end="55:27">USB_RET_BABBLE</name></expr>:</case>

            <expr_stmt pos:start="57:13" pos:end="57:63"><expr pos:start="57:13" pos:end="57:62"><name pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:13">q</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:17">qh</name><operator pos:start="57:18" pos:end="57:18">.</operator><name pos:start="57:19" pos:end="57:23">token</name></name> <operator pos:start="57:25" pos:end="57:26">|=</operator> <operator pos:start="57:28" pos:end="57:28">(</operator><name pos:start="57:29" pos:end="57:42">QTD_TOKEN_HALT</name> <operator pos:start="57:44" pos:end="57:44">|</operator> <name pos:start="57:46" pos:end="57:61">QTD_TOKEN_BABBLE</name><operator pos:start="57:62" pos:end="57:62">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:58"><expr pos:start="59:13" pos:end="59:57"><call pos:start="59:13" pos:end="59:57"><name pos:start="59:13" pos:end="59:33">ehci_record_interrupt</name><argument_list pos:start="59:34" pos:end="59:57">(<argument pos:start="59:35" pos:end="59:41"><expr pos:start="59:35" pos:end="59:41"><name pos:start="59:35" pos:end="59:41"><name pos:start="59:35" pos:end="59:35">q</name><operator pos:start="59:36" pos:end="59:37">-&gt;</operator><name pos:start="59:38" pos:end="59:41">ehci</name></name></expr></argument>, <argument pos:start="59:44" pos:end="59:56"><expr pos:start="59:44" pos:end="59:56"><name pos:start="59:44" pos:end="59:56">USBSTS_ERRINT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="61:13" pos:end="61:18">break;</break>

        <default pos:start="63:9" pos:end="63:16">default:</default>

            <comment type="block" pos:start="65:13" pos:end="65:43">/* should not be triggerable */</comment>

            <expr_stmt pos:start="67:13" pos:end="67:72"><expr pos:start="67:13" pos:end="67:71"><call pos:start="67:13" pos:end="67:71"><name pos:start="67:13" pos:end="67:19">fprintf</name><argument_list pos:start="67:20" pos:end="67:71">(<argument pos:start="67:21" pos:end="67:26"><expr pos:start="67:21" pos:end="67:26"><name pos:start="67:21" pos:end="67:26">stderr</name></expr></argument>, <argument pos:start="67:29" pos:end="67:55"><expr pos:start="67:29" pos:end="67:55"><literal type="string" pos:start="67:29" pos:end="67:55">"USB invalid response %d\n"</literal></expr></argument>, <argument pos:start="67:58" pos:end="67:70"><expr pos:start="67:58" pos:end="67:70"><name pos:start="67:58" pos:end="67:70"><name pos:start="67:58" pos:end="67:58">p</name><operator pos:start="67:59" pos:end="67:60">-&gt;</operator><name pos:start="67:61" pos:end="67:70">usb_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:22"><expr pos:start="69:13" pos:end="69:21"><call pos:start="69:13" pos:end="69:21"><name pos:start="69:13" pos:end="69:18">assert</name><argument_list pos:start="69:19" pos:end="69:21">(<argument pos:start="69:20" pos:end="69:20"><expr pos:start="69:20" pos:end="69:20"><literal type="number" pos:start="69:20" pos:end="69:20">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if> <if type="elseif" pos:start="75:7" pos:end="83:5">else if <condition pos:start="75:15" pos:end="75:71">(<expr pos:start="75:16" pos:end="75:70"><operator pos:start="75:16" pos:end="75:16">(</operator><name pos:start="75:17" pos:end="75:29"><name pos:start="75:17" pos:end="75:17">p</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:29">usb_status</name></name> <operator pos:start="75:31" pos:end="75:31">&gt;</operator> <name pos:start="75:33" pos:end="75:41"><name pos:start="75:33" pos:end="75:33">p</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:41">tbytes</name></name><operator pos:start="75:42" pos:end="75:42">)</operator> <operator pos:start="75:44" pos:end="75:45">&amp;&amp;</operator> <operator pos:start="75:47" pos:end="75:47">(</operator><name pos:start="75:48" pos:end="75:53"><name pos:start="75:48" pos:end="75:48">p</name><operator pos:start="75:49" pos:end="75:50">-&gt;</operator><name pos:start="75:51" pos:end="75:53">pid</name></name> <operator pos:start="75:55" pos:end="75:56">==</operator> <name pos:start="75:58" pos:end="75:69">USB_TOKEN_IN</name><operator pos:start="75:70" pos:end="75:70">)</operator></expr>)</condition> <block pos:start="75:73" pos:end="83:5">{<block_content pos:start="77:9" pos:end="81:54">

        <expr_stmt pos:start="77:9" pos:end="77:39"><expr pos:start="77:9" pos:end="77:38"><name pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:9">p</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:21">usb_status</name></name> <operator pos:start="77:23" pos:end="77:23">=</operator> <name pos:start="77:25" pos:end="77:38">USB_RET_BABBLE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:59"><expr pos:start="79:9" pos:end="79:58"><name pos:start="79:9" pos:end="79:19"><name pos:start="79:9" pos:end="79:9">q</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:13">qh</name><operator pos:start="79:14" pos:end="79:14">.</operator><name pos:start="79:15" pos:end="79:19">token</name></name> <operator pos:start="79:21" pos:end="79:22">|=</operator> <operator pos:start="79:24" pos:end="79:24">(</operator><name pos:start="79:25" pos:end="79:38">QTD_TOKEN_HALT</name> <operator pos:start="79:40" pos:end="79:40">|</operator> <name pos:start="79:42" pos:end="79:57">QTD_TOKEN_BABBLE</name><operator pos:start="79:58" pos:end="79:58">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:54"><expr pos:start="81:9" pos:end="81:53"><call pos:start="81:9" pos:end="81:53"><name pos:start="81:9" pos:end="81:29">ehci_record_interrupt</name><argument_list pos:start="81:30" pos:end="81:53">(<argument pos:start="81:31" pos:end="81:37"><expr pos:start="81:31" pos:end="81:37"><name pos:start="81:31" pos:end="81:37"><name pos:start="81:31" pos:end="81:31">q</name><operator pos:start="81:32" pos:end="81:33">-&gt;</operator><name pos:start="81:34" pos:end="81:37">ehci</name></name></expr></argument>, <argument pos:start="81:40" pos:end="81:52"><expr pos:start="81:40" pos:end="81:52"><name pos:start="81:40" pos:end="81:52">USBSTS_ERRINT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="83:7" pos:end="105:5">else <block pos:start="83:12" pos:end="105:5">{<block_content pos:start="89:9" pos:end="103:61">

        <comment type="line" pos:start="85:9" pos:end="85:37">// TODO check 4.12 for splits</comment>



        <if_stmt pos:start="89:9" pos:end="97:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:48">(<expr pos:start="89:13" pos:end="89:47"><name pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:13">p</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:21">tbytes</name></name> <operator pos:start="89:23" pos:end="89:24">&amp;&amp;</operator> <name pos:start="89:26" pos:end="89:31"><name pos:start="89:26" pos:end="89:26">p</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:31">pid</name></name> <operator pos:start="89:33" pos:end="89:34">==</operator> <name pos:start="89:36" pos:end="89:47">USB_TOKEN_IN</name></expr>)</condition> <block pos:start="89:50" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:39">

            <expr_stmt pos:start="91:13" pos:end="91:39"><expr pos:start="91:13" pos:end="91:38"><name pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:13">p</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:21">tbytes</name></name> <operator pos:start="91:23" pos:end="91:24">-=</operator> <name pos:start="91:26" pos:end="91:38"><name pos:start="91:26" pos:end="91:26">p</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:38">usb_status</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="93:11" pos:end="97:9">else <block pos:start="93:16" pos:end="97:9">{<block_content pos:start="95:13" pos:end="95:26">

            <expr_stmt pos:start="95:13" pos:end="95:26"><expr pos:start="95:13" pos:end="95:25"><name pos:start="95:13" pos:end="95:21"><name pos:start="95:13" pos:end="95:13">p</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:21">tbytes</name></name> <operator pos:start="95:23" pos:end="95:23">=</operator> <literal type="number" pos:start="95:25" pos:end="95:25">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:54"><expr pos:start="101:9" pos:end="101:53"><call pos:start="101:9" pos:end="101:53"><name pos:start="101:9" pos:end="101:15">DPRINTF</name><argument_list pos:start="101:16" pos:end="101:53">(<argument pos:start="101:17" pos:end="101:41"><expr pos:start="101:17" pos:end="101:41"><literal type="string" pos:start="101:17" pos:end="101:41">"updating tbytes to %d\n"</literal></expr></argument>, <argument pos:start="101:44" pos:end="101:52"><expr pos:start="101:44" pos:end="101:52"><name pos:start="101:44" pos:end="101:52"><name pos:start="101:44" pos:end="101:44">p</name><operator pos:start="101:45" pos:end="101:46">-&gt;</operator><name pos:start="101:47" pos:end="101:52">tbytes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:61"><expr pos:start="103:9" pos:end="103:60"><call pos:start="103:9" pos:end="103:60"><name pos:start="103:9" pos:end="103:17">set_field</name><argument_list pos:start="103:18" pos:end="103:60">(<argument pos:start="103:19" pos:end="103:30"><expr pos:start="103:19" pos:end="103:30"><operator pos:start="103:19" pos:end="103:19">&amp;</operator><name pos:start="103:20" pos:end="103:30"><name pos:start="103:20" pos:end="103:20">q</name><operator pos:start="103:21" pos:end="103:22">-&gt;</operator><name pos:start="103:23" pos:end="103:24">qh</name><operator pos:start="103:25" pos:end="103:25">.</operator><name pos:start="103:26" pos:end="103:30">token</name></name></expr></argument>, <argument pos:start="103:33" pos:end="103:41"><expr pos:start="103:33" pos:end="103:41"><name pos:start="103:33" pos:end="103:41"><name pos:start="103:33" pos:end="103:33">p</name><operator pos:start="103:34" pos:end="103:35">-&gt;</operator><name pos:start="103:36" pos:end="103:41">tbytes</name></name></expr></argument>, <argument pos:start="103:44" pos:end="103:59"><expr pos:start="103:44" pos:end="103:59"><name pos:start="103:44" pos:end="103:59">QTD_TOKEN_TBYTES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:43"><expr pos:start="107:5" pos:end="107:42"><call pos:start="107:5" pos:end="107:42"><name pos:start="107:5" pos:end="107:24">ehci_finish_transfer</name><argument_list pos:start="107:25" pos:end="107:42">(<argument pos:start="107:26" pos:end="107:26"><expr pos:start="107:26" pos:end="107:26"><name pos:start="107:26" pos:end="107:26">q</name></expr></argument>, <argument pos:start="107:29" pos:end="107:41"><expr pos:start="107:29" pos:end="107:41"><name pos:start="107:29" pos:end="107:41"><name pos:start="107:29" pos:end="107:29">p</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:41">usb_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:33"><expr pos:start="109:5" pos:end="109:32"><call pos:start="109:5" pos:end="109:32"><name pos:start="109:5" pos:end="109:23">qemu_sglist_destroy</name><argument_list pos:start="109:24" pos:end="109:32">(<argument pos:start="109:25" pos:end="109:31"><expr pos:start="109:25" pos:end="109:31"><operator pos:start="109:25" pos:end="109:25">&amp;</operator><name pos:start="109:26" pos:end="109:31"><name pos:start="109:26" pos:end="109:26">p</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:31">sgl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:33"><expr pos:start="111:5" pos:end="111:32"><call pos:start="111:5" pos:end="111:32"><name pos:start="111:5" pos:end="111:20">usb_packet_unmap</name><argument_list pos:start="111:21" pos:end="111:32">(<argument pos:start="111:22" pos:end="111:31"><expr pos:start="111:22" pos:end="111:31"><operator pos:start="111:22" pos:end="111:22">&amp;</operator><name pos:start="111:23" pos:end="111:31"><name pos:start="111:23" pos:end="111:23">p</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:31">packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:37"><expr pos:start="115:5" pos:end="115:36"><name pos:start="115:5" pos:end="115:15"><name pos:start="115:5" pos:end="115:5">q</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:9">qh</name><operator pos:start="115:10" pos:end="115:10">.</operator><name pos:start="115:11" pos:end="115:15">token</name></name> <operator pos:start="115:17" pos:end="115:18">^=</operator> <name pos:start="115:20" pos:end="115:36">QTD_TOKEN_DTOGGLE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:37"><expr pos:start="117:5" pos:end="117:36"><name pos:start="117:5" pos:end="117:15"><name pos:start="117:5" pos:end="117:5">q</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:9">qh</name><operator pos:start="117:10" pos:end="117:10">.</operator><name pos:start="117:11" pos:end="117:15">token</name></name> <operator pos:start="117:17" pos:end="117:18">&amp;=</operator> <operator pos:start="117:20" pos:end="117:20">~</operator><name pos:start="117:21" pos:end="117:36">QTD_TOKEN_ACTIVE</name></expr>;</expr_stmt>



    <if_stmt pos:start="121:5" pos:end="125:5"><if pos:start="121:5" pos:end="125:5">if <condition pos:start="121:8" pos:end="121:36">(<expr pos:start="121:9" pos:end="121:35"><name pos:start="121:9" pos:end="121:19"><name pos:start="121:9" pos:end="121:9">q</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:13">qh</name><operator pos:start="121:14" pos:end="121:14">.</operator><name pos:start="121:15" pos:end="121:19">token</name></name> <operator pos:start="121:21" pos:end="121:21">&amp;</operator> <name pos:start="121:23" pos:end="121:35">QTD_TOKEN_IOC</name></expr>)</condition> <block pos:start="121:38" pos:end="125:5">{<block_content pos:start="123:9" pos:end="123:51">

        <expr_stmt pos:start="123:9" pos:end="123:51"><expr pos:start="123:9" pos:end="123:50"><call pos:start="123:9" pos:end="123:50"><name pos:start="123:9" pos:end="123:29">ehci_record_interrupt</name><argument_list pos:start="123:30" pos:end="123:50">(<argument pos:start="123:31" pos:end="123:37"><expr pos:start="123:31" pos:end="123:37"><name pos:start="123:31" pos:end="123:37"><name pos:start="123:31" pos:end="123:31">q</name><operator pos:start="123:32" pos:end="123:33">-&gt;</operator><name pos:start="123:34" pos:end="123:37">ehci</name></name></expr></argument>, <argument pos:start="123:40" pos:end="123:49"><expr pos:start="123:40" pos:end="123:49"><name pos:start="123:40" pos:end="123:49">USBSTS_INT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
