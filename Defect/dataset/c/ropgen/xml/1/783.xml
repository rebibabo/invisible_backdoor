<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/783.c" pos:tabs="8"><function pos:start="1:1" pos:end="743:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">mpeg_decode_mb</name><parameter_list pos:start="1:26" pos:end="3:48">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:40">MpegEncContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:47"><decl pos:start="3:27" pos:end="3:47"><type pos:start="3:27" pos:end="3:39"><name pos:start="3:27" pos:end="3:33">DCTELEM</name></type> <name pos:start="3:35" pos:end="3:47"><name pos:start="3:35" pos:end="3:39">block</name><index pos:start="3:40" pos:end="3:43">[<expr pos:start="3:41" pos:end="3:42"><literal type="number" pos:start="3:41" pos:end="3:42">12</literal></expr>]</index><index pos:start="3:44" pos:end="3:47">[<expr pos:start="3:45" pos:end="3:46"><literal type="number" pos:start="3:45" pos:end="3:46">64</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="743:1">{<block_content pos:start="7:5" pos:end="741:13">

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">k</name></decl>, <decl pos:start="7:18" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:20">cbp</name></decl>, <decl pos:start="7:23" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:25">val</name></decl>, <decl pos:start="7:28" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:28" pos:end="7:34">mb_type</name></decl>, <decl pos:start="7:37" pos:end="7:47"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:37" pos:end="7:47">motion_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="13:56"><decl pos:start="9:5" pos:end="13:55"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:28">mb_block_count</name> <init pos:start="9:30" pos:end="13:55">= <expr pos:start="9:32" pos:end="13:55"><literal type="number" pos:start="9:32" pos:end="9:34">4</literal> <operator pos:start="9:34" pos:end="9:34">+</operator> <operator pos:start="9:36" pos:end="9:36">(</operator><literal type="number" pos:start="9:37" pos:end="9:37">1</literal><operator pos:start="9:38" pos:end="9:39">&lt;&lt;</operator> <name pos:start="9:41" pos:end="9:56"><name pos:start="9:41" pos:end="9:41">s</name><operator pos:start="9:42" pos:end="9:43">-&gt;</operator><name pos:start="9:44" pos:end="9:56">chroma_format</name></name><operator pos:start="9:57" pos:end="9:57">)</operator>



    <call pos:start="13:5" pos:end="13:55"><name pos:start="13:5" pos:end="13:11">dprintf</name><argument_list pos:start="13:12" pos:end="13:55">(<argument pos:start="13:13" pos:end="13:36"><expr pos:start="13:13" pos:end="13:36"><literal type="string" pos:start="13:13" pos:end="13:36">"decode_mb: x=%d y=%d\n"</literal></expr></argument>, <argument pos:start="13:39" pos:end="13:45"><expr pos:start="13:39" pos:end="13:45"><name pos:start="13:39" pos:end="13:45"><name pos:start="13:39" pos:end="13:39">s</name><operator pos:start="13:40" pos:end="13:41">-&gt;</operator><name pos:start="13:42" pos:end="13:45">mb_x</name></name></expr></argument>, <argument pos:start="13:48" pos:end="13:54"><expr pos:start="13:48" pos:end="13:54"><name pos:start="13:48" pos:end="13:54"><name pos:start="13:48" pos:end="13:48">s</name><operator pos:start="13:49" pos:end="13:50">-&gt;</operator><name pos:start="13:51" pos:end="13:54">mb_y</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:28"><expr pos:start="17:5" pos:end="17:27"><call pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:27">(<argument pos:start="17:12" pos:end="17:26"><expr pos:start="17:12" pos:end="17:26"><name pos:start="17:12" pos:end="17:23"><name pos:start="17:12" pos:end="17:12">s</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:23">mb_skiped</name></name><operator pos:start="17:24" pos:end="17:25">==</operator><literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="99:5"><if pos:start="21:5" pos:end="99:5">if <condition pos:start="21:8" pos:end="21:30">(<expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:22">mb_skip_run</name></name><operator pos:start="21:23" pos:end="21:24">--</operator> <operator pos:start="21:26" pos:end="21:27">!=</operator> <literal type="number" pos:start="21:29" pos:end="21:29">0</literal></expr>)</condition> <block pos:start="21:32" pos:end="99:5">{<block_content pos:start="23:9" pos:end="97:17">

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if<condition pos:start="23:11" pos:end="23:34">(<expr pos:start="23:12" pos:end="23:33"><name pos:start="23:12" pos:end="23:23"><name pos:start="23:12" pos:end="23:12">s</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:23">pict_type</name></name> <operator pos:start="23:25" pos:end="23:26">==</operator> <name pos:start="23:28" pos:end="23:33">I_TYPE</name></expr>)</condition><block pos:start="23:35" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:22">

            <expr_stmt pos:start="25:13" pos:end="25:96"><expr pos:start="25:13" pos:end="25:95"><call pos:start="25:13" pos:end="25:95"><name pos:start="25:13" pos:end="25:18">av_log</name><argument_list pos:start="25:19" pos:end="25:95">(<argument pos:start="25:20" pos:end="25:27"><expr pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:20">s</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:27">avctx</name></name></expr></argument>, <argument pos:start="25:30" pos:end="25:41"><expr pos:start="25:30" pos:end="25:41"><name pos:start="25:30" pos:end="25:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:44" pos:end="25:76"><expr pos:start="25:44" pos:end="25:76"><literal type="string" pos:start="25:44" pos:end="25:76">"skiped MB in I frame at %d %d\n"</literal></expr></argument>, <argument pos:start="25:79" pos:end="25:85"><expr pos:start="25:79" pos:end="25:85"><name pos:start="25:79" pos:end="25:85"><name pos:start="25:79" pos:end="25:79">s</name><operator pos:start="25:80" pos:end="25:81">-&gt;</operator><name pos:start="25:82" pos:end="25:85">mb_x</name></name></expr></argument>, <argument pos:start="25:88" pos:end="25:94"><expr pos:start="25:88" pos:end="25:94"><name pos:start="25:88" pos:end="25:94"><name pos:start="25:88" pos:end="25:88">s</name><operator pos:start="25:89" pos:end="25:90">-&gt;</operator><name pos:start="25:91" pos:end="25:94">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:22">return <expr pos:start="27:20" pos:end="27:21"><operator pos:start="27:20" pos:end="27:20">-</operator><literal type="number" pos:start="27:21" pos:end="27:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    

        <comment type="block" pos:start="33:9" pos:end="33:21">/* skip mb */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:19">mb_intra</name></name> <operator pos:start="35:21" pos:end="35:21">=</operator> <literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr>;</expr_stmt>

        <for pos:start="37:9" pos:end="39:40">for<control pos:start="37:12" pos:end="37:25">(<init pos:start="37:13" pos:end="37:16"><expr pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:13">i</name><operator pos:start="37:14" pos:end="37:14">=</operator><literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>;</init><condition pos:start="37:17" pos:end="37:21"><expr pos:start="37:17" pos:end="37:20"><name pos:start="37:17" pos:end="37:17">i</name><operator pos:start="37:18" pos:end="37:18">&lt;</operator><literal type="number" pos:start="37:19" pos:end="37:20">12</literal></expr>;</condition><incr pos:start="37:22" pos:end="37:24"><expr pos:start="37:22" pos:end="37:24"><name pos:start="37:22" pos:end="37:22">i</name><operator pos:start="37:23" pos:end="37:24">++</operator></expr></incr>)</control><block type="pseudo" pos:start="39:13" pos:end="39:40"><block_content pos:start="39:13" pos:end="39:40">

            <expr_stmt pos:start="39:13" pos:end="39:40"><expr pos:start="39:13" pos:end="39:39"><name pos:start="39:13" pos:end="39:34"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:31">block_last_index</name><index pos:start="39:32" pos:end="39:34">[<expr pos:start="39:33" pos:end="39:33"><name pos:start="39:33" pos:end="39:33">i</name></expr>]</index></name> <operator pos:start="39:36" pos:end="39:36">=</operator> <operator pos:start="39:38" pos:end="39:38">-</operator><literal type="number" pos:start="39:39" pos:end="39:39">1</literal></expr>;</expr_stmt></block_content></block></for>

        <if_stmt pos:start="41:9" pos:end="47:39"><if pos:start="41:9" pos:end="43:39">if<condition pos:start="41:11" pos:end="41:46">(<expr pos:start="41:12" pos:end="41:45"><name pos:start="41:12" pos:end="41:31"><name pos:start="41:12" pos:end="41:12">s</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:31">picture_structure</name></name> <operator pos:start="41:33" pos:end="41:34">==</operator> <name pos:start="41:36" pos:end="41:45">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:39"><block_content pos:start="43:13" pos:end="43:39">

            <expr_stmt pos:start="43:13" pos:end="43:39"><expr pos:start="43:13" pos:end="43:38"><name pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:22">mv_type</name></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <name pos:start="43:26" pos:end="43:38">MV_TYPE_16X16</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="45:9" pos:end="47:39">else<block type="pseudo" pos:start="47:13" pos:end="47:39"><block_content pos:start="47:13" pos:end="47:39">

            <expr_stmt pos:start="47:13" pos:end="47:39"><expr pos:start="47:13" pos:end="47:38"><name pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:22">mv_type</name></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <name pos:start="47:26" pos:end="47:38">MV_TYPE_FIELD</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="49:9" pos:end="93:9"><if pos:start="49:9" pos:end="67:9">if <condition pos:start="49:12" pos:end="49:35">(<expr pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:24">pict_type</name></name> <operator pos:start="49:26" pos:end="49:27">==</operator> <name pos:start="49:29" pos:end="49:34">P_TYPE</name></expr>)</condition> <block pos:start="49:37" pos:end="67:9">{<block_content pos:start="53:13" pos:end="65:116">

            <comment type="block" pos:start="51:13" pos:end="51:58">/* if P type, zero motion vector is implied */</comment>

            <expr_stmt pos:start="53:13" pos:end="53:39"><expr pos:start="53:13" pos:end="53:38"><name pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:21">mv_dir</name></name> <operator pos:start="53:23" pos:end="53:23">=</operator> <name pos:start="53:25" pos:end="53:38">MV_DIR_FORWARD</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:48"><expr pos:start="55:13" pos:end="55:47"><name pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:17">mv</name><index pos:start="55:18" pos:end="55:20">[<expr pos:start="55:19" pos:end="55:19"><literal type="number" pos:start="55:19" pos:end="55:19">0</literal></expr>]</index><index pos:start="55:21" pos:end="55:23">[<expr pos:start="55:22" pos:end="55:22"><literal type="number" pos:start="55:22" pos:end="55:22">0</literal></expr>]</index><index pos:start="55:24" pos:end="55:26">[<expr pos:start="55:25" pos:end="55:25"><literal type="number" pos:start="55:25" pos:end="55:25">0</literal></expr>]</index></name> <operator pos:start="55:28" pos:end="55:28">=</operator> <name pos:start="55:30" pos:end="55:43"><name pos:start="55:30" pos:end="55:30">s</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:34">mv</name><index pos:start="55:35" pos:end="55:37">[<expr pos:start="55:36" pos:end="55:36"><literal type="number" pos:start="55:36" pos:end="55:36">0</literal></expr>]</index><index pos:start="55:38" pos:end="55:40">[<expr pos:start="55:39" pos:end="55:39"><literal type="number" pos:start="55:39" pos:end="55:39">0</literal></expr>]</index><index pos:start="55:41" pos:end="55:43">[<expr pos:start="55:42" pos:end="55:42"><literal type="number" pos:start="55:42" pos:end="55:42">1</literal></expr>]</index></name> <operator pos:start="55:45" pos:end="55:45">=</operator> <literal type="number" pos:start="55:47" pos:end="55:47">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:58"><expr pos:start="57:13" pos:end="57:57"><name pos:start="57:13" pos:end="57:31"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:22">last_mv</name><index pos:start="57:23" pos:end="57:25">[<expr pos:start="57:24" pos:end="57:24"><literal type="number" pos:start="57:24" pos:end="57:24">0</literal></expr>]</index><index pos:start="57:26" pos:end="57:28">[<expr pos:start="57:27" pos:end="57:27"><literal type="number" pos:start="57:27" pos:end="57:27">0</literal></expr>]</index><index pos:start="57:29" pos:end="57:31">[<expr pos:start="57:30" pos:end="57:30"><literal type="number" pos:start="57:30" pos:end="57:30">0</literal></expr>]</index></name> <operator pos:start="57:33" pos:end="57:33">=</operator> <name pos:start="57:35" pos:end="57:53"><name pos:start="57:35" pos:end="57:35">s</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:44">last_mv</name><index pos:start="57:45" pos:end="57:47">[<expr pos:start="57:46" pos:end="57:46"><literal type="number" pos:start="57:46" pos:end="57:46">0</literal></expr>]</index><index pos:start="57:48" pos:end="57:50">[<expr pos:start="57:49" pos:end="57:49"><literal type="number" pos:start="57:49" pos:end="57:49">0</literal></expr>]</index><index pos:start="57:51" pos:end="57:53">[<expr pos:start="57:52" pos:end="57:52"><literal type="number" pos:start="57:52" pos:end="57:52">1</literal></expr>]</index></name> <operator pos:start="57:55" pos:end="57:55">=</operator> <literal type="number" pos:start="57:57" pos:end="57:57">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:58"><expr pos:start="59:13" pos:end="59:57"><name pos:start="59:13" pos:end="59:31"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:22">last_mv</name><index pos:start="59:23" pos:end="59:25">[<expr pos:start="59:24" pos:end="59:24"><literal type="number" pos:start="59:24" pos:end="59:24">0</literal></expr>]</index><index pos:start="59:26" pos:end="59:28">[<expr pos:start="59:27" pos:end="59:27"><literal type="number" pos:start="59:27" pos:end="59:27">1</literal></expr>]</index><index pos:start="59:29" pos:end="59:31">[<expr pos:start="59:30" pos:end="59:30"><literal type="number" pos:start="59:30" pos:end="59:30">0</literal></expr>]</index></name> <operator pos:start="59:33" pos:end="59:33">=</operator> <name pos:start="59:35" pos:end="59:53"><name pos:start="59:35" pos:end="59:35">s</name><operator pos:start="59:36" pos:end="59:37">-&gt;</operator><name pos:start="59:38" pos:end="59:44">last_mv</name><index pos:start="59:45" pos:end="59:47">[<expr pos:start="59:46" pos:end="59:46"><literal type="number" pos:start="59:46" pos:end="59:46">0</literal></expr>]</index><index pos:start="59:48" pos:end="59:50">[<expr pos:start="59:49" pos:end="59:49"><literal type="number" pos:start="59:49" pos:end="59:49">1</literal></expr>]</index><index pos:start="59:51" pos:end="59:53">[<expr pos:start="59:52" pos:end="59:52"><literal type="number" pos:start="59:52" pos:end="59:52">1</literal></expr>]</index></name> <operator pos:start="59:55" pos:end="59:55">=</operator> <literal type="number" pos:start="59:57" pos:end="59:57">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:60"><expr pos:start="61:13" pos:end="61:59"><name pos:start="61:13" pos:end="61:33"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:27">field_select</name><index pos:start="61:28" pos:end="61:30">[<expr pos:start="61:29" pos:end="61:29"><literal type="number" pos:start="61:29" pos:end="61:29">0</literal></expr>]</index><index pos:start="61:31" pos:end="61:33">[<expr pos:start="61:32" pos:end="61:32"><literal type="number" pos:start="61:32" pos:end="61:32">0</literal></expr>]</index></name><operator pos:start="61:34" pos:end="61:34">=</operator> <name pos:start="61:36" pos:end="61:55"><name pos:start="61:36" pos:end="61:36">s</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:55">picture_structure</name></name> <operator pos:start="61:57" pos:end="61:57">-</operator> <literal type="number" pos:start="61:59" pos:end="61:59">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:29"><expr pos:start="63:13" pos:end="63:28"><name pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:24">mb_skiped</name></name> <operator pos:start="63:26" pos:end="63:26">=</operator> <literal type="number" pos:start="63:28" pos:end="63:28">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:116"><expr pos:start="65:13" pos:end="65:115"><name pos:start="65:13" pos:end="65:72"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:30">current_picture</name><operator pos:start="65:31" pos:end="65:31">.</operator><name pos:start="65:32" pos:end="65:38">mb_type</name><index pos:start="65:39" pos:end="65:72">[ <expr pos:start="65:41" pos:end="65:70"><name pos:start="65:41" pos:end="65:47"><name pos:start="65:41" pos:end="65:41">s</name><operator pos:start="65:42" pos:end="65:43">-&gt;</operator><name pos:start="65:44" pos:end="65:47">mb_x</name></name> <operator pos:start="65:49" pos:end="65:49">+</operator> <name pos:start="65:51" pos:end="65:57"><name pos:start="65:51" pos:end="65:51">s</name><operator pos:start="65:52" pos:end="65:53">-&gt;</operator><name pos:start="65:54" pos:end="65:57">mb_y</name></name><operator pos:start="65:58" pos:end="65:58">*</operator><name pos:start="65:59" pos:end="65:70"><name pos:start="65:59" pos:end="65:59">s</name><operator pos:start="65:60" pos:end="65:61">-&gt;</operator><name pos:start="65:62" pos:end="65:70">mb_stride</name></name></expr> ]</index></name><operator pos:start="65:73" pos:end="65:73">=</operator> <name pos:start="65:75" pos:end="65:86">MB_TYPE_SKIP</name> <operator pos:start="65:88" pos:end="65:88">|</operator> <name pos:start="65:90" pos:end="65:99">MB_TYPE_L0</name> <operator pos:start="65:101" pos:end="65:101">|</operator> <name pos:start="65:103" pos:end="65:115">MB_TYPE_16x16</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="67:11" pos:end="93:9">else <block pos:start="67:16" pos:end="93:9">{<block_content pos:start="71:13" pos:end="91:33">

            <comment type="block" pos:start="69:13" pos:end="69:66">/* if B type, reuse previous vectors and directions */</comment>

            <expr_stmt pos:start="71:13" pos:end="71:49"><expr pos:start="71:13" pos:end="71:48"><name pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:13">s</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:17">mv</name><index pos:start="71:18" pos:end="71:20">[<expr pos:start="71:19" pos:end="71:19"><literal type="number" pos:start="71:19" pos:end="71:19">0</literal></expr>]</index><index pos:start="71:21" pos:end="71:23">[<expr pos:start="71:22" pos:end="71:22"><literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr>]</index><index pos:start="71:24" pos:end="71:26">[<expr pos:start="71:25" pos:end="71:25"><literal type="number" pos:start="71:25" pos:end="71:25">0</literal></expr>]</index></name> <operator pos:start="71:28" pos:end="71:28">=</operator> <name pos:start="71:30" pos:end="71:48"><name pos:start="71:30" pos:end="71:30">s</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:39">last_mv</name><index pos:start="71:40" pos:end="71:42">[<expr pos:start="71:41" pos:end="71:41"><literal type="number" pos:start="71:41" pos:end="71:41">0</literal></expr>]</index><index pos:start="71:43" pos:end="71:45">[<expr pos:start="71:44" pos:end="71:44"><literal type="number" pos:start="71:44" pos:end="71:44">0</literal></expr>]</index><index pos:start="71:46" pos:end="71:48">[<expr pos:start="71:47" pos:end="71:47"><literal type="number" pos:start="71:47" pos:end="71:47">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:49"><expr pos:start="73:13" pos:end="73:48"><name pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:17">mv</name><index pos:start="73:18" pos:end="73:20">[<expr pos:start="73:19" pos:end="73:19"><literal type="number" pos:start="73:19" pos:end="73:19">0</literal></expr>]</index><index pos:start="73:21" pos:end="73:23">[<expr pos:start="73:22" pos:end="73:22"><literal type="number" pos:start="73:22" pos:end="73:22">0</literal></expr>]</index><index pos:start="73:24" pos:end="73:26">[<expr pos:start="73:25" pos:end="73:25"><literal type="number" pos:start="73:25" pos:end="73:25">1</literal></expr>]</index></name> <operator pos:start="73:28" pos:end="73:28">=</operator> <name pos:start="73:30" pos:end="73:48"><name pos:start="73:30" pos:end="73:30">s</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:39">last_mv</name><index pos:start="73:40" pos:end="73:42">[<expr pos:start="73:41" pos:end="73:41"><literal type="number" pos:start="73:41" pos:end="73:41">0</literal></expr>]</index><index pos:start="73:43" pos:end="73:45">[<expr pos:start="73:44" pos:end="73:44"><literal type="number" pos:start="73:44" pos:end="73:44">0</literal></expr>]</index><index pos:start="73:46" pos:end="73:48">[<expr pos:start="73:47" pos:end="73:47"><literal type="number" pos:start="73:47" pos:end="73:47">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:49"><expr pos:start="75:13" pos:end="75:48"><name pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:13">s</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:17">mv</name><index pos:start="75:18" pos:end="75:20">[<expr pos:start="75:19" pos:end="75:19"><literal type="number" pos:start="75:19" pos:end="75:19">1</literal></expr>]</index><index pos:start="75:21" pos:end="75:23">[<expr pos:start="75:22" pos:end="75:22"><literal type="number" pos:start="75:22" pos:end="75:22">0</literal></expr>]</index><index pos:start="75:24" pos:end="75:26">[<expr pos:start="75:25" pos:end="75:25"><literal type="number" pos:start="75:25" pos:end="75:25">0</literal></expr>]</index></name> <operator pos:start="75:28" pos:end="75:28">=</operator> <name pos:start="75:30" pos:end="75:48"><name pos:start="75:30" pos:end="75:30">s</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:39">last_mv</name><index pos:start="75:40" pos:end="75:42">[<expr pos:start="75:41" pos:end="75:41"><literal type="number" pos:start="75:41" pos:end="75:41">1</literal></expr>]</index><index pos:start="75:43" pos:end="75:45">[<expr pos:start="75:44" pos:end="75:44"><literal type="number" pos:start="75:44" pos:end="75:44">0</literal></expr>]</index><index pos:start="75:46" pos:end="75:48">[<expr pos:start="75:47" pos:end="75:47"><literal type="number" pos:start="75:47" pos:end="75:47">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:49"><expr pos:start="77:13" pos:end="77:48"><name pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:17">mv</name><index pos:start="77:18" pos:end="77:20">[<expr pos:start="77:19" pos:end="77:19"><literal type="number" pos:start="77:19" pos:end="77:19">1</literal></expr>]</index><index pos:start="77:21" pos:end="77:23">[<expr pos:start="77:22" pos:end="77:22"><literal type="number" pos:start="77:22" pos:end="77:22">0</literal></expr>]</index><index pos:start="77:24" pos:end="77:26">[<expr pos:start="77:25" pos:end="77:25"><literal type="number" pos:start="77:25" pos:end="77:25">1</literal></expr>]</index></name> <operator pos:start="77:28" pos:end="77:28">=</operator> <name pos:start="77:30" pos:end="77:48"><name pos:start="77:30" pos:end="77:30">s</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:39">last_mv</name><index pos:start="77:40" pos:end="77:42">[<expr pos:start="77:41" pos:end="77:41"><literal type="number" pos:start="77:41" pos:end="77:41">1</literal></expr>]</index><index pos:start="77:43" pos:end="77:45">[<expr pos:start="77:44" pos:end="77:44"><literal type="number" pos:start="77:44" pos:end="77:44">0</literal></expr>]</index><index pos:start="77:46" pos:end="77:48">[<expr pos:start="77:47" pos:end="77:47"><literal type="number" pos:start="77:47" pos:end="77:47">1</literal></expr>]</index></name></expr>;</expr_stmt>



            <expr_stmt pos:start="81:13" pos:end="83:95"><expr pos:start="81:13" pos:end="83:94"><name pos:start="81:13" pos:end="81:72"><name pos:start="81:13" pos:end="81:13">s</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:30">current_picture</name><operator pos:start="81:31" pos:end="81:31">.</operator><name pos:start="81:32" pos:end="81:38">mb_type</name><index pos:start="81:39" pos:end="81:72">[ <expr pos:start="81:41" pos:end="81:70"><name pos:start="81:41" pos:end="81:47"><name pos:start="81:41" pos:end="81:41">s</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:47">mb_x</name></name> <operator pos:start="81:49" pos:end="81:49">+</operator> <name pos:start="81:51" pos:end="81:57"><name pos:start="81:51" pos:end="81:51">s</name><operator pos:start="81:52" pos:end="81:53">-&gt;</operator><name pos:start="81:54" pos:end="81:57">mb_y</name></name><operator pos:start="81:58" pos:end="81:58">*</operator><name pos:start="81:59" pos:end="81:70"><name pos:start="81:59" pos:end="81:59">s</name><operator pos:start="81:60" pos:end="81:61">-&gt;</operator><name pos:start="81:62" pos:end="81:70">mb_stride</name></name></expr> ]</index></name><operator pos:start="81:73" pos:end="81:73">=</operator> 

                <name pos:start="83:17" pos:end="83:79"><name pos:start="83:17" pos:end="83:17">s</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:34">current_picture</name><operator pos:start="83:35" pos:end="83:35">.</operator><name pos:start="83:36" pos:end="83:42">mb_type</name><index pos:start="83:43" pos:end="83:79">[ <expr pos:start="83:45" pos:end="83:78"><name pos:start="83:45" pos:end="83:51"><name pos:start="83:45" pos:end="83:45">s</name><operator pos:start="83:46" pos:end="83:47">-&gt;</operator><name pos:start="83:48" pos:end="83:51">mb_x</name></name> <operator pos:start="83:53" pos:end="83:53">+</operator> <name pos:start="83:55" pos:end="83:61"><name pos:start="83:55" pos:end="83:55">s</name><operator pos:start="83:56" pos:end="83:57">-&gt;</operator><name pos:start="83:58" pos:end="83:61">mb_y</name></name><operator pos:start="83:62" pos:end="83:62">*</operator><name pos:start="83:63" pos:end="83:74"><name pos:start="83:63" pos:end="83:63">s</name><operator pos:start="83:64" pos:end="83:65">-&gt;</operator><name pos:start="83:66" pos:end="83:74">mb_stride</name></name> <operator pos:start="83:76" pos:end="83:76">-</operator> <literal type="number" pos:start="83:78" pos:end="83:78">1</literal></expr>]</index></name> <operator pos:start="83:81" pos:end="83:81">|</operator> <name pos:start="83:83" pos:end="83:94">MB_TYPE_SKIP</name></expr>;</expr_stmt>

<comment type="line" pos:start="85:1" pos:end="85:115">//            assert(s-&gt;current_picture.mb_type[ s-&gt;mb_x + s-&gt;mb_y*s-&gt;mb_stride - 1]&amp;(MB_TYPE_16x16|MB_TYPE_16x8));</comment>



            <if_stmt pos:start="89:13" pos:end="91:33"><if pos:start="89:13" pos:end="91:33">if<condition pos:start="89:15" pos:end="89:80">(<expr pos:start="89:16" pos:end="89:79"><operator pos:start="89:16" pos:end="89:16">(</operator><name pos:start="89:17" pos:end="89:30"><name pos:start="89:17" pos:end="89:17">s</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:21">mv</name><index pos:start="89:22" pos:end="89:24">[<expr pos:start="89:23" pos:end="89:23"><literal type="number" pos:start="89:23" pos:end="89:23">0</literal></expr>]</index><index pos:start="89:25" pos:end="89:27">[<expr pos:start="89:26" pos:end="89:26"><literal type="number" pos:start="89:26" pos:end="89:26">0</literal></expr>]</index><index pos:start="89:28" pos:end="89:30">[<expr pos:start="89:29" pos:end="89:29"><literal type="number" pos:start="89:29" pos:end="89:29">0</literal></expr>]</index></name><operator pos:start="89:31" pos:end="89:31">|</operator><name pos:start="89:32" pos:end="89:45"><name pos:start="89:32" pos:end="89:32">s</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:36">mv</name><index pos:start="89:37" pos:end="89:39">[<expr pos:start="89:38" pos:end="89:38"><literal type="number" pos:start="89:38" pos:end="89:38">0</literal></expr>]</index><index pos:start="89:40" pos:end="89:42">[<expr pos:start="89:41" pos:end="89:41"><literal type="number" pos:start="89:41" pos:end="89:41">0</literal></expr>]</index><index pos:start="89:43" pos:end="89:45">[<expr pos:start="89:44" pos:end="89:44"><literal type="number" pos:start="89:44" pos:end="89:44">1</literal></expr>]</index></name><operator pos:start="89:46" pos:end="89:46">|</operator><name pos:start="89:47" pos:end="89:60"><name pos:start="89:47" pos:end="89:47">s</name><operator pos:start="89:48" pos:end="89:49">-&gt;</operator><name pos:start="89:50" pos:end="89:51">mv</name><index pos:start="89:52" pos:end="89:54">[<expr pos:start="89:53" pos:end="89:53"><literal type="number" pos:start="89:53" pos:end="89:53">1</literal></expr>]</index><index pos:start="89:55" pos:end="89:57">[<expr pos:start="89:56" pos:end="89:56"><literal type="number" pos:start="89:56" pos:end="89:56">0</literal></expr>]</index><index pos:start="89:58" pos:end="89:60">[<expr pos:start="89:59" pos:end="89:59"><literal type="number" pos:start="89:59" pos:end="89:59">0</literal></expr>]</index></name><operator pos:start="89:61" pos:end="89:61">|</operator><name pos:start="89:62" pos:end="89:75"><name pos:start="89:62" pos:end="89:62">s</name><operator pos:start="89:63" pos:end="89:64">-&gt;</operator><name pos:start="89:65" pos:end="89:66">mv</name><index pos:start="89:67" pos:end="89:69">[<expr pos:start="89:68" pos:end="89:68"><literal type="number" pos:start="89:68" pos:end="89:68">1</literal></expr>]</index><index pos:start="89:70" pos:end="89:72">[<expr pos:start="89:71" pos:end="89:71"><literal type="number" pos:start="89:71" pos:end="89:71">0</literal></expr>]</index><index pos:start="89:73" pos:end="89:75">[<expr pos:start="89:74" pos:end="89:74"><literal type="number" pos:start="89:74" pos:end="89:74">1</literal></expr>]</index></name><operator pos:start="89:76" pos:end="89:76">)</operator><operator pos:start="89:77" pos:end="89:78">==</operator><literal type="number" pos:start="89:79" pos:end="89:79">0</literal></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:33"><block_content pos:start="91:17" pos:end="91:33"> 

                <expr_stmt pos:start="91:17" pos:end="91:33"><expr pos:start="91:17" pos:end="91:32"><name pos:start="91:17" pos:end="91:28"><name pos:start="91:17" pos:end="91:17">s</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:28">mb_skiped</name></name> <operator pos:start="91:30" pos:end="91:30">=</operator> <literal type="number" pos:start="91:32" pos:end="91:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <return pos:start="97:9" pos:end="97:17">return <expr pos:start="97:16" pos:end="97:16"><literal type="number" pos:start="97:16" pos:end="97:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="103:5" pos:end="161:5">switch<condition pos:start="103:11" pos:end="103:24">(<expr pos:start="103:12" pos:end="103:23"><name pos:start="103:12" pos:end="103:23"><name pos:start="103:12" pos:end="103:12">s</name><operator pos:start="103:13" pos:end="103:14">-&gt;</operator><name pos:start="103:15" pos:end="103:23">pict_type</name></name></expr>)</condition> <block pos:start="103:26" pos:end="161:5">{<block_content pos:start="105:5" pos:end="159:14">

    <default pos:start="105:5" pos:end="105:12">default:</default>

    <case pos:start="107:5" pos:end="107:16">case <expr pos:start="107:10" pos:end="107:15"><name pos:start="107:10" pos:end="107:15">I_TYPE</name></expr>:</case>

        <if_stmt pos:start="109:9" pos:end="125:9"><if pos:start="109:9" pos:end="121:9">if <condition pos:start="109:12" pos:end="109:35">(<expr pos:start="109:13" pos:end="109:34"><call pos:start="109:13" pos:end="109:29"><name pos:start="109:13" pos:end="109:21">get_bits1</name><argument_list pos:start="109:22" pos:end="109:29">(<argument pos:start="109:23" pos:end="109:28"><expr pos:start="109:23" pos:end="109:28"><operator pos:start="109:23" pos:end="109:23">&amp;</operator><name pos:start="109:24" pos:end="109:28"><name pos:start="109:24" pos:end="109:24">s</name><operator pos:start="109:25" pos:end="109:26">-&gt;</operator><name pos:start="109:27" pos:end="109:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="109:31" pos:end="109:32">==</operator> <literal type="number" pos:start="109:34" pos:end="109:34">0</literal></expr>)</condition> <block pos:start="109:37" pos:end="121:9">{<block_content pos:start="111:13" pos:end="119:52">

            <if_stmt pos:start="111:13" pos:end="117:13"><if pos:start="111:13" pos:end="117:13">if <condition pos:start="111:16" pos:end="111:39">(<expr pos:start="111:17" pos:end="111:38"><call pos:start="111:17" pos:end="111:33"><name pos:start="111:17" pos:end="111:25">get_bits1</name><argument_list pos:start="111:26" pos:end="111:33">(<argument pos:start="111:27" pos:end="111:32"><expr pos:start="111:27" pos:end="111:32"><operator pos:start="111:27" pos:end="111:27">&amp;</operator><name pos:start="111:28" pos:end="111:32"><name pos:start="111:28" pos:end="111:28">s</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:32">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="111:35" pos:end="111:36">==</operator> <literal type="number" pos:start="111:38" pos:end="111:38">0</literal></expr>)</condition><block pos:start="111:40" pos:end="117:13">{<block_content pos:start="113:17" pos:end="115:26">

                <expr_stmt pos:start="113:17" pos:end="113:106"><expr pos:start="113:17" pos:end="113:105"><call pos:start="113:17" pos:end="113:105"><name pos:start="113:17" pos:end="113:22">av_log</name><argument_list pos:start="113:23" pos:end="113:105">(<argument pos:start="113:24" pos:end="113:31"><expr pos:start="113:24" pos:end="113:31"><name pos:start="113:24" pos:end="113:31"><name pos:start="113:24" pos:end="113:24">s</name><operator pos:start="113:25" pos:end="113:26">-&gt;</operator><name pos:start="113:27" pos:end="113:31">avctx</name></name></expr></argument>, <argument pos:start="113:34" pos:end="113:45"><expr pos:start="113:34" pos:end="113:45"><name pos:start="113:34" pos:end="113:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="113:48" pos:end="113:86"><expr pos:start="113:48" pos:end="113:86"><literal type="string" pos:start="113:48" pos:end="113:86">"invalid mb type in I Frame at %d %d\n"</literal></expr></argument>, <argument pos:start="113:89" pos:end="113:95"><expr pos:start="113:89" pos:end="113:95"><name pos:start="113:89" pos:end="113:95"><name pos:start="113:89" pos:end="113:89">s</name><operator pos:start="113:90" pos:end="113:91">-&gt;</operator><name pos:start="113:92" pos:end="113:95">mb_x</name></name></expr></argument>, <argument pos:start="113:98" pos:end="113:104"><expr pos:start="113:98" pos:end="113:104"><name pos:start="113:98" pos:end="113:104"><name pos:start="113:98" pos:end="113:98">s</name><operator pos:start="113:99" pos:end="113:100">-&gt;</operator><name pos:start="113:101" pos:end="113:104">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="115:17" pos:end="115:26">return <expr pos:start="115:24" pos:end="115:25"><operator pos:start="115:24" pos:end="115:24">-</operator><literal type="number" pos:start="115:25" pos:end="115:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:52"><expr pos:start="119:13" pos:end="119:51"><name pos:start="119:13" pos:end="119:19">mb_type</name> <operator pos:start="119:21" pos:end="119:21">=</operator> <name pos:start="119:23" pos:end="119:35">MB_TYPE_QUANT</name> <operator pos:start="119:37" pos:end="119:37">|</operator> <name pos:start="119:39" pos:end="119:51">MB_TYPE_INTRA</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="121:11" pos:end="125:9">else <block pos:start="121:16" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:36">

            <expr_stmt pos:start="123:13" pos:end="123:36"><expr pos:start="123:13" pos:end="123:35"><name pos:start="123:13" pos:end="123:19">mb_type</name> <operator pos:start="123:21" pos:end="123:21">=</operator> <name pos:start="123:23" pos:end="123:35">MB_TYPE_INTRA</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>

    <case pos:start="129:5" pos:end="129:16">case <expr pos:start="129:10" pos:end="129:15"><name pos:start="129:10" pos:end="129:15">P_TYPE</name></expr>:</case>

        <expr_stmt pos:start="131:9" pos:end="131:77"><expr pos:start="131:9" pos:end="131:76"><name pos:start="131:9" pos:end="131:15">mb_type</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <call pos:start="131:19" pos:end="131:76"><name pos:start="131:19" pos:end="131:26">get_vlc2</name><argument_list pos:start="131:27" pos:end="131:76">(<argument pos:start="131:28" pos:end="131:33"><expr pos:start="131:28" pos:end="131:33"><operator pos:start="131:28" pos:end="131:28">&amp;</operator><name pos:start="131:29" pos:end="131:33"><name pos:start="131:29" pos:end="131:29">s</name><operator pos:start="131:30" pos:end="131:31">-&gt;</operator><name pos:start="131:32" pos:end="131:33">gb</name></name></expr></argument>, <argument pos:start="131:36" pos:end="131:53"><expr pos:start="131:36" pos:end="131:53"><name pos:start="131:36" pos:end="131:53"><name pos:start="131:36" pos:end="131:47">mb_ptype_vlc</name><operator pos:start="131:48" pos:end="131:48">.</operator><name pos:start="131:49" pos:end="131:53">table</name></name></expr></argument>, <argument pos:start="131:56" pos:end="131:72"><expr pos:start="131:56" pos:end="131:72"><name pos:start="131:56" pos:end="131:72">MB_PTYPE_VLC_BITS</name></expr></argument>, <argument pos:start="131:75" pos:end="131:75"><expr pos:start="131:75" pos:end="131:75"><literal type="number" pos:start="131:75" pos:end="131:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="133:9" pos:end="139:9"><if pos:start="133:9" pos:end="139:9">if <condition pos:start="133:12" pos:end="133:24">(<expr pos:start="133:13" pos:end="133:23"><name pos:start="133:13" pos:end="133:19">mb_type</name> <operator pos:start="133:21" pos:end="133:21">&lt;</operator> <literal type="number" pos:start="133:23" pos:end="133:23">0</literal></expr>)</condition><block pos:start="133:25" pos:end="139:9">{<block_content pos:start="135:13" pos:end="137:22">

            <expr_stmt pos:start="135:13" pos:end="135:102"><expr pos:start="135:13" pos:end="135:101"><call pos:start="135:13" pos:end="135:101"><name pos:start="135:13" pos:end="135:18">av_log</name><argument_list pos:start="135:19" pos:end="135:101">(<argument pos:start="135:20" pos:end="135:27"><expr pos:start="135:20" pos:end="135:27"><name pos:start="135:20" pos:end="135:27"><name pos:start="135:20" pos:end="135:20">s</name><operator pos:start="135:21" pos:end="135:22">-&gt;</operator><name pos:start="135:23" pos:end="135:27">avctx</name></name></expr></argument>, <argument pos:start="135:30" pos:end="135:41"><expr pos:start="135:30" pos:end="135:41"><name pos:start="135:30" pos:end="135:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="135:44" pos:end="135:82"><expr pos:start="135:44" pos:end="135:82"><literal type="string" pos:start="135:44" pos:end="135:82">"invalid mb type in P Frame at %d %d\n"</literal></expr></argument>, <argument pos:start="135:85" pos:end="135:91"><expr pos:start="135:85" pos:end="135:91"><name pos:start="135:85" pos:end="135:91"><name pos:start="135:85" pos:end="135:85">s</name><operator pos:start="135:86" pos:end="135:87">-&gt;</operator><name pos:start="135:88" pos:end="135:91">mb_x</name></name></expr></argument>, <argument pos:start="135:94" pos:end="135:100"><expr pos:start="135:94" pos:end="135:100"><name pos:start="135:94" pos:end="135:100"><name pos:start="135:94" pos:end="135:94">s</name><operator pos:start="135:95" pos:end="135:96">-&gt;</operator><name pos:start="135:97" pos:end="135:100">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="137:13" pos:end="137:22">return <expr pos:start="137:20" pos:end="137:21"><operator pos:start="137:20" pos:end="137:20">-</operator><literal type="number" pos:start="137:21" pos:end="137:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:43"><expr pos:start="141:9" pos:end="141:42"><name pos:start="141:9" pos:end="141:15">mb_type</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <name pos:start="141:19" pos:end="141:42"><name pos:start="141:19" pos:end="141:31">ptype2mb_type</name><index pos:start="141:32" pos:end="141:42">[ <expr pos:start="141:34" pos:end="141:40"><name pos:start="141:34" pos:end="141:40">mb_type</name></expr> ]</index></name></expr>;</expr_stmt>

        <break pos:start="143:9" pos:end="143:14">break;</break>

    <case pos:start="145:5" pos:end="145:16">case <expr pos:start="145:10" pos:end="145:15"><name pos:start="145:10" pos:end="145:15">B_TYPE</name></expr>:</case>

        <expr_stmt pos:start="147:9" pos:end="147:77"><expr pos:start="147:9" pos:end="147:76"><name pos:start="147:9" pos:end="147:15">mb_type</name> <operator pos:start="147:17" pos:end="147:17">=</operator> <call pos:start="147:19" pos:end="147:76"><name pos:start="147:19" pos:end="147:26">get_vlc2</name><argument_list pos:start="147:27" pos:end="147:76">(<argument pos:start="147:28" pos:end="147:33"><expr pos:start="147:28" pos:end="147:33"><operator pos:start="147:28" pos:end="147:28">&amp;</operator><name pos:start="147:29" pos:end="147:33"><name pos:start="147:29" pos:end="147:29">s</name><operator pos:start="147:30" pos:end="147:31">-&gt;</operator><name pos:start="147:32" pos:end="147:33">gb</name></name></expr></argument>, <argument pos:start="147:36" pos:end="147:53"><expr pos:start="147:36" pos:end="147:53"><name pos:start="147:36" pos:end="147:53"><name pos:start="147:36" pos:end="147:47">mb_btype_vlc</name><operator pos:start="147:48" pos:end="147:48">.</operator><name pos:start="147:49" pos:end="147:53">table</name></name></expr></argument>, <argument pos:start="147:56" pos:end="147:72"><expr pos:start="147:56" pos:end="147:72"><name pos:start="147:56" pos:end="147:72">MB_BTYPE_VLC_BITS</name></expr></argument>, <argument pos:start="147:75" pos:end="147:75"><expr pos:start="147:75" pos:end="147:75"><literal type="number" pos:start="147:75" pos:end="147:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="155:9"><if pos:start="149:9" pos:end="155:9">if <condition pos:start="149:12" pos:end="149:24">(<expr pos:start="149:13" pos:end="149:23"><name pos:start="149:13" pos:end="149:19">mb_type</name> <operator pos:start="149:21" pos:end="149:21">&lt;</operator> <literal type="number" pos:start="149:23" pos:end="149:23">0</literal></expr>)</condition><block pos:start="149:25" pos:end="155:9">{<block_content pos:start="151:13" pos:end="153:22">

            <expr_stmt pos:start="151:13" pos:end="151:102"><expr pos:start="151:13" pos:end="151:101"><call pos:start="151:13" pos:end="151:101"><name pos:start="151:13" pos:end="151:18">av_log</name><argument_list pos:start="151:19" pos:end="151:101">(<argument pos:start="151:20" pos:end="151:27"><expr pos:start="151:20" pos:end="151:27"><name pos:start="151:20" pos:end="151:27"><name pos:start="151:20" pos:end="151:20">s</name><operator pos:start="151:21" pos:end="151:22">-&gt;</operator><name pos:start="151:23" pos:end="151:27">avctx</name></name></expr></argument>, <argument pos:start="151:30" pos:end="151:41"><expr pos:start="151:30" pos:end="151:41"><name pos:start="151:30" pos:end="151:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="151:44" pos:end="151:82"><expr pos:start="151:44" pos:end="151:82"><literal type="string" pos:start="151:44" pos:end="151:82">"invalid mb type in B Frame at %d %d\n"</literal></expr></argument>, <argument pos:start="151:85" pos:end="151:91"><expr pos:start="151:85" pos:end="151:91"><name pos:start="151:85" pos:end="151:91"><name pos:start="151:85" pos:end="151:85">s</name><operator pos:start="151:86" pos:end="151:87">-&gt;</operator><name pos:start="151:88" pos:end="151:91">mb_x</name></name></expr></argument>, <argument pos:start="151:94" pos:end="151:100"><expr pos:start="151:94" pos:end="151:100"><name pos:start="151:94" pos:end="151:100"><name pos:start="151:94" pos:end="151:94">s</name><operator pos:start="151:95" pos:end="151:96">-&gt;</operator><name pos:start="151:97" pos:end="151:100">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="153:13" pos:end="153:22">return <expr pos:start="153:20" pos:end="153:21"><operator pos:start="153:20" pos:end="153:20">-</operator><literal type="number" pos:start="153:21" pos:end="153:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:43"><expr pos:start="157:9" pos:end="157:42"><name pos:start="157:9" pos:end="157:15">mb_type</name> <operator pos:start="157:17" pos:end="157:17">=</operator> <name pos:start="157:19" pos:end="157:42"><name pos:start="157:19" pos:end="157:31">btype2mb_type</name><index pos:start="157:32" pos:end="157:42">[ <expr pos:start="157:34" pos:end="157:40"><name pos:start="157:34" pos:end="157:40">mb_type</name></expr> ]</index></name></expr>;</expr_stmt>

        <break pos:start="159:9" pos:end="159:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="163:5" pos:end="163:37"><expr pos:start="163:5" pos:end="163:36"><call pos:start="163:5" pos:end="163:36"><name pos:start="163:5" pos:end="163:11">dprintf</name><argument_list pos:start="163:12" pos:end="163:36">(<argument pos:start="163:13" pos:end="163:26"><expr pos:start="163:13" pos:end="163:26"><literal type="string" pos:start="163:13" pos:end="163:26">"mb_type=%x\n"</literal></expr></argument>, <argument pos:start="163:29" pos:end="163:35"><expr pos:start="163:29" pos:end="163:35"><name pos:start="163:29" pos:end="163:35">mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="165:1" pos:end="165:42">//    motion_type = 0; /* avoid warning */</comment>

    <if_stmt pos:start="167:5" pos:end="733:5"><if pos:start="167:5" pos:end="257:5">if <condition pos:start="167:8" pos:end="167:26">(<expr pos:start="167:9" pos:end="167:25"><call pos:start="167:9" pos:end="167:25"><name pos:start="167:9" pos:end="167:16">IS_INTRA</name><argument_list pos:start="167:17" pos:end="167:25">(<argument pos:start="167:18" pos:end="167:24"><expr pos:start="167:18" pos:end="167:24"><name pos:start="167:18" pos:end="167:24">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="167:28" pos:end="257:5">{<block_content pos:start="171:9" pos:end="255:9">

        <comment type="block" pos:start="169:9" pos:end="169:30">/* compute dct type */</comment>

        <if_stmt pos:start="171:9" pos:end="177:9"><if pos:start="171:9" pos:end="177:9">if <condition pos:start="171:12" pos:end="173:37">(<expr pos:start="171:13" pos:end="173:36"><name pos:start="171:13" pos:end="171:32"><name pos:start="171:13" pos:end="171:13">s</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:32">picture_structure</name></name> <operator pos:start="171:34" pos:end="171:35">==</operator> <name pos:start="171:37" pos:end="171:46">PICT_FRAME</name> <operator pos:start="171:48" pos:end="171:49">&amp;&amp;</operator> <comment type="line" pos:start="171:51" pos:end="171:89">//FIXME add a interlaced_dct coded var?</comment>

            <operator pos:start="173:13" pos:end="173:13">!</operator><name pos:start="173:14" pos:end="173:36"><name pos:start="173:14" pos:end="173:14">s</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:36">frame_pred_frame_dct</name></name></expr>)</condition> <block pos:start="173:39" pos:end="177:9">{<block_content pos:start="175:13" pos:end="175:50">

            <expr_stmt pos:start="175:13" pos:end="175:50"><expr pos:start="175:13" pos:end="175:49"><name pos:start="175:13" pos:end="175:29"><name pos:start="175:13" pos:end="175:13">s</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:29">interlaced_dct</name></name> <operator pos:start="175:31" pos:end="175:31">=</operator> <call pos:start="175:33" pos:end="175:49"><name pos:start="175:33" pos:end="175:41">get_bits1</name><argument_list pos:start="175:42" pos:end="175:49">(<argument pos:start="175:43" pos:end="175:48"><expr pos:start="175:43" pos:end="175:48"><operator pos:start="175:43" pos:end="175:43">&amp;</operator><name pos:start="175:44" pos:end="175:48"><name pos:start="175:44" pos:end="175:44">s</name><operator pos:start="175:45" pos:end="175:46">-&gt;</operator><name pos:start="175:47" pos:end="175:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="181:9" pos:end="183:38"><if pos:start="181:9" pos:end="183:38">if <condition pos:start="181:12" pos:end="181:30">(<expr pos:start="181:13" pos:end="181:29"><call pos:start="181:13" pos:end="181:29"><name pos:start="181:13" pos:end="181:20">IS_QUANT</name><argument_list pos:start="181:21" pos:end="181:29">(<argument pos:start="181:22" pos:end="181:28"><expr pos:start="181:22" pos:end="181:28"><name pos:start="181:22" pos:end="181:28">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="183:13" pos:end="183:38"><block_content pos:start="183:13" pos:end="183:38">

            <expr_stmt pos:start="183:13" pos:end="183:38"><expr pos:start="183:13" pos:end="183:37"><name pos:start="183:13" pos:end="183:21"><name pos:start="183:13" pos:end="183:13">s</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:21">qscale</name></name> <operator pos:start="183:23" pos:end="183:23">=</operator> <call pos:start="183:25" pos:end="183:37"><name pos:start="183:25" pos:end="183:34">get_qscale</name><argument_list pos:start="183:35" pos:end="183:37">(<argument pos:start="183:36" pos:end="183:36"><expr pos:start="183:36" pos:end="183:36"><name pos:start="183:36" pos:end="183:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        

        <if_stmt pos:start="187:9" pos:end="211:54"><if pos:start="187:9" pos:end="209:9">if <condition pos:start="187:12" pos:end="187:42">(<expr pos:start="187:13" pos:end="187:41"><name pos:start="187:13" pos:end="187:41"><name pos:start="187:13" pos:end="187:13">s</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:41">concealment_motion_vectors</name></name></expr>)</condition> <block pos:start="187:44" pos:end="209:9">{<block_content pos:start="191:13" pos:end="207:31">

            <comment type="block" pos:start="189:13" pos:end="189:33">/* just parse them */</comment>

            <if_stmt pos:start="191:13" pos:end="193:35"><if pos:start="191:13" pos:end="193:35">if <condition pos:start="191:16" pos:end="191:51">(<expr pos:start="191:17" pos:end="191:50"><name pos:start="191:17" pos:end="191:36"><name pos:start="191:17" pos:end="191:17">s</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:36">picture_structure</name></name> <operator pos:start="191:38" pos:end="191:39">!=</operator> <name pos:start="191:41" pos:end="191:50">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="193:17" pos:end="193:35"><block_content pos:start="193:17" pos:end="193:35"> 

                <expr_stmt pos:start="193:17" pos:end="193:35"><expr pos:start="193:17" pos:end="193:34"><call pos:start="193:17" pos:end="193:34"><name pos:start="193:17" pos:end="193:26">skip_bits1</name><argument_list pos:start="193:27" pos:end="193:34">(<argument pos:start="193:28" pos:end="193:33"><expr pos:start="193:28" pos:end="193:33"><operator pos:start="193:28" pos:end="193:28">&amp;</operator><name pos:start="193:29" pos:end="193:33"><name pos:start="193:29" pos:end="193:29">s</name><operator pos:start="193:30" pos:end="193:31">-&gt;</operator><name pos:start="193:32" pos:end="193:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="193:37" pos:end="193:54">/* field select */</comment>

            

            <expr_stmt pos:start="197:13" pos:end="199:81"><expr pos:start="197:13" pos:end="199:80"><name pos:start="197:13" pos:end="197:26"><name pos:start="197:13" pos:end="197:13">s</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:17">mv</name><index pos:start="197:18" pos:end="197:20">[<expr pos:start="197:19" pos:end="197:19"><literal type="number" pos:start="197:19" pos:end="197:19">0</literal></expr>]</index><index pos:start="197:21" pos:end="197:23">[<expr pos:start="197:22" pos:end="197:22"><literal type="number" pos:start="197:22" pos:end="197:22">0</literal></expr>]</index><index pos:start="197:24" pos:end="197:26">[<expr pos:start="197:25" pos:end="197:25"><literal type="number" pos:start="197:25" pos:end="197:25">0</literal></expr>]</index></name><operator pos:start="197:27" pos:end="197:27">=</operator> <name pos:start="197:29" pos:end="197:47"><name pos:start="197:29" pos:end="197:29">s</name><operator pos:start="197:30" pos:end="197:31">-&gt;</operator><name pos:start="197:32" pos:end="197:38">last_mv</name><index pos:start="197:39" pos:end="197:41">[<expr pos:start="197:40" pos:end="197:40"><literal type="number" pos:start="197:40" pos:end="197:40">0</literal></expr>]</index><index pos:start="197:42" pos:end="197:44">[<expr pos:start="197:43" pos:end="197:43"><literal type="number" pos:start="197:43" pos:end="197:43">0</literal></expr>]</index><index pos:start="197:45" pos:end="197:47">[<expr pos:start="197:46" pos:end="197:46"><literal type="number" pos:start="197:46" pos:end="197:46">0</literal></expr>]</index></name><operator pos:start="197:48" pos:end="197:48">=</operator> <name pos:start="197:50" pos:end="197:68"><name pos:start="197:50" pos:end="197:50">s</name><operator pos:start="197:51" pos:end="197:52">-&gt;</operator><name pos:start="197:53" pos:end="197:59">last_mv</name><index pos:start="197:60" pos:end="197:62">[<expr pos:start="197:61" pos:end="197:61"><literal type="number" pos:start="197:61" pos:end="197:61">0</literal></expr>]</index><index pos:start="197:63" pos:end="197:65">[<expr pos:start="197:64" pos:end="197:64"><literal type="number" pos:start="197:64" pos:end="197:64">1</literal></expr>]</index><index pos:start="197:66" pos:end="197:68">[<expr pos:start="197:67" pos:end="197:67"><literal type="number" pos:start="197:67" pos:end="197:67">0</literal></expr>]</index></name> <operator pos:start="197:70" pos:end="197:70">=</operator> 

                <call pos:start="199:17" pos:end="199:80"><name pos:start="199:17" pos:end="199:34">mpeg_decode_motion</name><argument_list pos:start="199:35" pos:end="199:80">(<argument pos:start="199:36" pos:end="199:36"><expr pos:start="199:36" pos:end="199:36"><name pos:start="199:36" pos:end="199:36">s</name></expr></argument>, <argument pos:start="199:39" pos:end="199:58"><expr pos:start="199:39" pos:end="199:58"><name pos:start="199:39" pos:end="199:58"><name pos:start="199:39" pos:end="199:39">s</name><operator pos:start="199:40" pos:end="199:41">-&gt;</operator><name pos:start="199:42" pos:end="199:52">mpeg_f_code</name><index pos:start="199:53" pos:end="199:55">[<expr pos:start="199:54" pos:end="199:54"><literal type="number" pos:start="199:54" pos:end="199:54">0</literal></expr>]</index><index pos:start="199:56" pos:end="199:58">[<expr pos:start="199:57" pos:end="199:57"><literal type="number" pos:start="199:57" pos:end="199:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="199:61" pos:end="199:79"><expr pos:start="199:61" pos:end="199:79"><name pos:start="199:61" pos:end="199:79"><name pos:start="199:61" pos:end="199:61">s</name><operator pos:start="199:62" pos:end="199:63">-&gt;</operator><name pos:start="199:64" pos:end="199:70">last_mv</name><index pos:start="199:71" pos:end="199:73">[<expr pos:start="199:72" pos:end="199:72"><literal type="number" pos:start="199:72" pos:end="199:72">0</literal></expr>]</index><index pos:start="199:74" pos:end="199:76">[<expr pos:start="199:75" pos:end="199:75"><literal type="number" pos:start="199:75" pos:end="199:75">0</literal></expr>]</index><index pos:start="199:77" pos:end="199:79">[<expr pos:start="199:78" pos:end="199:78"><literal type="number" pos:start="199:78" pos:end="199:78">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="203:81"><expr pos:start="201:13" pos:end="203:80"><name pos:start="201:13" pos:end="201:26"><name pos:start="201:13" pos:end="201:13">s</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:17">mv</name><index pos:start="201:18" pos:end="201:20">[<expr pos:start="201:19" pos:end="201:19"><literal type="number" pos:start="201:19" pos:end="201:19">0</literal></expr>]</index><index pos:start="201:21" pos:end="201:23">[<expr pos:start="201:22" pos:end="201:22"><literal type="number" pos:start="201:22" pos:end="201:22">0</literal></expr>]</index><index pos:start="201:24" pos:end="201:26">[<expr pos:start="201:25" pos:end="201:25"><literal type="number" pos:start="201:25" pos:end="201:25">1</literal></expr>]</index></name><operator pos:start="201:27" pos:end="201:27">=</operator> <name pos:start="201:29" pos:end="201:47"><name pos:start="201:29" pos:end="201:29">s</name><operator pos:start="201:30" pos:end="201:31">-&gt;</operator><name pos:start="201:32" pos:end="201:38">last_mv</name><index pos:start="201:39" pos:end="201:41">[<expr pos:start="201:40" pos:end="201:40"><literal type="number" pos:start="201:40" pos:end="201:40">0</literal></expr>]</index><index pos:start="201:42" pos:end="201:44">[<expr pos:start="201:43" pos:end="201:43"><literal type="number" pos:start="201:43" pos:end="201:43">0</literal></expr>]</index><index pos:start="201:45" pos:end="201:47">[<expr pos:start="201:46" pos:end="201:46"><literal type="number" pos:start="201:46" pos:end="201:46">1</literal></expr>]</index></name><operator pos:start="201:48" pos:end="201:48">=</operator> <name pos:start="201:50" pos:end="201:68"><name pos:start="201:50" pos:end="201:50">s</name><operator pos:start="201:51" pos:end="201:52">-&gt;</operator><name pos:start="201:53" pos:end="201:59">last_mv</name><index pos:start="201:60" pos:end="201:62">[<expr pos:start="201:61" pos:end="201:61"><literal type="number" pos:start="201:61" pos:end="201:61">0</literal></expr>]</index><index pos:start="201:63" pos:end="201:65">[<expr pos:start="201:64" pos:end="201:64"><literal type="number" pos:start="201:64" pos:end="201:64">1</literal></expr>]</index><index pos:start="201:66" pos:end="201:68">[<expr pos:start="201:67" pos:end="201:67"><literal type="number" pos:start="201:67" pos:end="201:67">1</literal></expr>]</index></name> <operator pos:start="201:70" pos:end="201:70">=</operator> 

                <call pos:start="203:17" pos:end="203:80"><name pos:start="203:17" pos:end="203:34">mpeg_decode_motion</name><argument_list pos:start="203:35" pos:end="203:80">(<argument pos:start="203:36" pos:end="203:36"><expr pos:start="203:36" pos:end="203:36"><name pos:start="203:36" pos:end="203:36">s</name></expr></argument>, <argument pos:start="203:39" pos:end="203:58"><expr pos:start="203:39" pos:end="203:58"><name pos:start="203:39" pos:end="203:58"><name pos:start="203:39" pos:end="203:39">s</name><operator pos:start="203:40" pos:end="203:41">-&gt;</operator><name pos:start="203:42" pos:end="203:52">mpeg_f_code</name><index pos:start="203:53" pos:end="203:55">[<expr pos:start="203:54" pos:end="203:54"><literal type="number" pos:start="203:54" pos:end="203:54">0</literal></expr>]</index><index pos:start="203:56" pos:end="203:58">[<expr pos:start="203:57" pos:end="203:57"><literal type="number" pos:start="203:57" pos:end="203:57">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="203:61" pos:end="203:79"><expr pos:start="203:61" pos:end="203:79"><name pos:start="203:61" pos:end="203:79"><name pos:start="203:61" pos:end="203:61">s</name><operator pos:start="203:62" pos:end="203:63">-&gt;</operator><name pos:start="203:64" pos:end="203:70">last_mv</name><index pos:start="203:71" pos:end="203:73">[<expr pos:start="203:72" pos:end="203:72"><literal type="number" pos:start="203:72" pos:end="203:72">0</literal></expr>]</index><index pos:start="203:74" pos:end="203:76">[<expr pos:start="203:75" pos:end="203:75"><literal type="number" pos:start="203:75" pos:end="203:75">0</literal></expr>]</index><index pos:start="203:77" pos:end="203:79">[<expr pos:start="203:78" pos:end="203:78"><literal type="number" pos:start="203:78" pos:end="203:78">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="207:13" pos:end="207:31"><expr pos:start="207:13" pos:end="207:30"><call pos:start="207:13" pos:end="207:30"><name pos:start="207:13" pos:end="207:22">skip_bits1</name><argument_list pos:start="207:23" pos:end="207:30">(<argument pos:start="207:24" pos:end="207:29"><expr pos:start="207:24" pos:end="207:29"><operator pos:start="207:24" pos:end="207:24">&amp;</operator><name pos:start="207:25" pos:end="207:29"><name pos:start="207:25" pos:end="207:25">s</name><operator pos:start="207:26" pos:end="207:27">-&gt;</operator><name pos:start="207:28" pos:end="207:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="207:33" pos:end="207:44">/* marker */</comment>

        </block_content>}</block></if><else pos:start="209:10" pos:end="211:54">else<block type="pseudo" pos:start="211:13" pos:end="211:54"><block_content pos:start="211:13" pos:end="211:54">

            <expr_stmt pos:start="211:13" pos:end="211:54"><expr pos:start="211:13" pos:end="211:53"><call pos:start="211:13" pos:end="211:53"><name pos:start="211:13" pos:end="211:18">memset</name><argument_list pos:start="211:19" pos:end="211:53">(<argument pos:start="211:20" pos:end="211:29"><expr pos:start="211:20" pos:end="211:29"><name pos:start="211:20" pos:end="211:29"><name pos:start="211:20" pos:end="211:20">s</name><operator pos:start="211:21" pos:end="211:22">-&gt;</operator><name pos:start="211:23" pos:end="211:29">last_mv</name></name></expr></argument>, <argument pos:start="211:32" pos:end="211:32"><expr pos:start="211:32" pos:end="211:32"><literal type="number" pos:start="211:32" pos:end="211:32">0</literal></expr></argument>, <argument pos:start="211:35" pos:end="211:52"><expr pos:start="211:35" pos:end="211:52"><sizeof pos:start="211:35" pos:end="211:52">sizeof<argument_list pos:start="211:41" pos:end="211:52">(<argument pos:start="211:42" pos:end="211:51"><expr pos:start="211:42" pos:end="211:51"><name pos:start="211:42" pos:end="211:51"><name pos:start="211:42" pos:end="211:42">s</name><operator pos:start="211:43" pos:end="211:44">-&gt;</operator><name pos:start="211:45" pos:end="211:51">last_mv</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="211:56" pos:end="211:80">/* reset mv prediction */</comment>

        <expr_stmt pos:start="213:9" pos:end="216:0"><expr pos:start="213:9" pos:end="213:23"><name pos:start="213:9" pos:end="213:19"><name pos:start="213:9" pos:end="213:9">s</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:19">mb_intra</name></name> <operator pos:start="213:21" pos:end="213:21">=</operator> <literal type="number" pos:start="213:23" pos:end="213:23">1</literal></expr>;</expr_stmt>

<cpp:ifdef pos:start="215:1" pos:end="215:16">#<cpp:directive pos:start="215:2" pos:end="215:6">ifdef</cpp:directive> <name pos:start="215:8" pos:end="215:16">HAVE_XVMC</name></cpp:ifdef>

        <comment type="line" pos:start="217:9" pos:end="217:45">//one 1 we memcpy blocks in xvmcvideo</comment>

        <if_stmt pos:start="219:9" pos:end="232:0"><if pos:start="219:9" pos:end="232:0">if<condition pos:start="219:11" pos:end="219:43">(<expr pos:start="219:12" pos:end="219:42"><name pos:start="219:12" pos:end="219:38"><name pos:start="219:12" pos:end="219:12">s</name><operator pos:start="219:13" pos:end="219:14">-&gt;</operator><name pos:start="219:15" pos:end="219:19">avctx</name><operator pos:start="219:20" pos:end="219:21">-&gt;</operator><name pos:start="219:22" pos:end="219:38">xvmc_acceleration</name></name> <operator pos:start="219:40" pos:end="219:40">&gt;</operator> <literal type="number" pos:start="219:42" pos:end="219:42">1</literal></expr>)</condition><block pos:start="219:44" pos:end="232:0">{<block_content pos:start="221:13" pos:end="227:13">

            <expr_stmt pos:start="221:13" pos:end="221:36"><expr pos:start="221:13" pos:end="221:35"><call pos:start="221:13" pos:end="221:35"><name pos:start="221:13" pos:end="221:29">XVMC_pack_pblocks</name><argument_list pos:start="221:30" pos:end="221:35">(<argument pos:start="221:31" pos:end="221:31"><expr pos:start="221:31" pos:end="221:31"><name pos:start="221:31" pos:end="221:31">s</name></expr></argument>,<argument pos:start="221:33" pos:end="221:34"><expr pos:start="221:33" pos:end="221:34"><operator pos:start="221:33" pos:end="221:33">-</operator><literal type="number" pos:start="221:34" pos:end="221:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><comment type="line" pos:start="221:37" pos:end="221:66">//inter are always full blocks</comment>

            <if_stmt pos:start="223:13" pos:end="227:13"><if pos:start="223:13" pos:end="227:13">if<condition pos:start="223:15" pos:end="223:26">(<expr pos:start="223:16" pos:end="223:25"><name pos:start="223:16" pos:end="223:25"><name pos:start="223:16" pos:end="223:16">s</name><operator pos:start="223:17" pos:end="223:18">-&gt;</operator><name pos:start="223:19" pos:end="223:25">swap_uv</name></name></expr>)</condition><block pos:start="223:27" pos:end="227:13">{<block_content pos:start="225:17" pos:end="225:31">

                <expr_stmt pos:start="225:17" pos:end="225:31"><expr pos:start="225:17" pos:end="225:30"><call pos:start="225:17" pos:end="225:30"><name pos:start="225:17" pos:end="225:27">exchange_uv</name><argument_list pos:start="225:28" pos:end="225:30">(<argument pos:start="225:29" pos:end="225:29"><expr pos:start="225:29" pos:end="225:29"><name pos:start="225:29" pos:end="225:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="231:1" pos:end="231:6">#<cpp:directive pos:start="231:2" pos:end="231:6">endif</cpp:directive></cpp:endif>



        <if_stmt pos:start="235:9" pos:end="255:9"><if pos:start="235:9" pos:end="245:9">if <condition pos:start="235:12" pos:end="235:47">(<expr pos:start="235:13" pos:end="235:46"><name pos:start="235:13" pos:end="235:23"><name pos:start="235:13" pos:end="235:13">s</name><operator pos:start="235:14" pos:end="235:15">-&gt;</operator><name pos:start="235:16" pos:end="235:23">codec_id</name></name> <operator pos:start="235:25" pos:end="235:26">==</operator> <name pos:start="235:28" pos:end="235:46">CODEC_ID_MPEG2VIDEO</name></expr>)</condition> <block pos:start="235:49" pos:end="245:9">{<block_content pos:start="237:13" pos:end="243:13">

            <for pos:start="237:13" pos:end="243:13">for<control pos:start="237:16" pos:end="237:41">(<init pos:start="237:17" pos:end="237:20"><expr pos:start="237:17" pos:end="237:19"><name pos:start="237:17" pos:end="237:17">i</name><operator pos:start="237:18" pos:end="237:18">=</operator><literal type="number" pos:start="237:19" pos:end="237:19">0</literal></expr>;</init><condition pos:start="237:21" pos:end="237:37"><expr pos:start="237:21" pos:end="237:36"><name pos:start="237:21" pos:end="237:21">i</name><operator pos:start="237:22" pos:end="237:22">&lt;</operator><name pos:start="237:23" pos:end="237:36">mb_block_count</name></expr>;</condition><incr pos:start="237:38" pos:end="237:40"><expr pos:start="237:38" pos:end="237:40"><name pos:start="237:38" pos:end="237:38">i</name><operator pos:start="237:39" pos:end="237:40">++</operator></expr></incr>)</control> <block pos:start="237:43" pos:end="243:13">{<block_content pos:start="239:17" pos:end="241:30">

                <if_stmt pos:start="239:17" pos:end="241:30"><if pos:start="239:17" pos:end="241:30">if <condition pos:start="239:20" pos:end="239:70">(<expr pos:start="239:21" pos:end="239:69"><call pos:start="239:21" pos:end="239:65"><name pos:start="239:21" pos:end="239:44">mpeg2_decode_block_intra</name><argument_list pos:start="239:45" pos:end="239:65">(<argument pos:start="239:46" pos:end="239:46"><expr pos:start="239:46" pos:end="239:46"><name pos:start="239:46" pos:end="239:46">s</name></expr></argument>, <argument pos:start="239:49" pos:end="239:61"><expr pos:start="239:49" pos:end="239:61"><name pos:start="239:49" pos:end="239:61"><name pos:start="239:49" pos:end="239:49">s</name><operator pos:start="239:50" pos:end="239:51">-&gt;</operator><name pos:start="239:52" pos:end="239:58">pblocks</name><index pos:start="239:59" pos:end="239:61">[<expr pos:start="239:60" pos:end="239:60"><name pos:start="239:60" pos:end="239:60">i</name></expr>]</index></name></expr></argument>, <argument pos:start="239:64" pos:end="239:64"><expr pos:start="239:64" pos:end="239:64"><name pos:start="239:64" pos:end="239:64">i</name></expr></argument>)</argument_list></call> <operator pos:start="239:67" pos:end="239:67">&lt;</operator> <literal type="number" pos:start="239:69" pos:end="239:69">0</literal></expr>)</condition><block type="pseudo" pos:start="241:21" pos:end="241:30"><block_content pos:start="241:21" pos:end="241:30">

                    <return pos:start="241:21" pos:end="241:30">return <expr pos:start="241:28" pos:end="241:29"><operator pos:start="241:28" pos:end="241:28">-</operator><literal type="number" pos:start="241:29" pos:end="241:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="245:11" pos:end="255:9">else <block pos:start="245:16" pos:end="255:9">{<block_content pos:start="247:13" pos:end="253:13">

            <for pos:start="247:13" pos:end="253:13">for<control pos:start="247:16" pos:end="247:28">(<init pos:start="247:17" pos:end="247:20"><expr pos:start="247:17" pos:end="247:19"><name pos:start="247:17" pos:end="247:17">i</name><operator pos:start="247:18" pos:end="247:18">=</operator><literal type="number" pos:start="247:19" pos:end="247:19">0</literal></expr>;</init><condition pos:start="247:21" pos:end="247:24"><expr pos:start="247:21" pos:end="247:23"><name pos:start="247:21" pos:end="247:21">i</name><operator pos:start="247:22" pos:end="247:22">&lt;</operator><literal type="number" pos:start="247:23" pos:end="247:23">6</literal></expr>;</condition><incr pos:start="247:25" pos:end="247:27"><expr pos:start="247:25" pos:end="247:27"><name pos:start="247:25" pos:end="247:25">i</name><operator pos:start="247:26" pos:end="247:27">++</operator></expr></incr>)</control> <block pos:start="247:30" pos:end="253:13">{<block_content pos:start="249:17" pos:end="251:30">

                <if_stmt pos:start="249:17" pos:end="251:30"><if pos:start="249:17" pos:end="251:30">if <condition pos:start="249:20" pos:end="249:70">(<expr pos:start="249:21" pos:end="249:69"><call pos:start="249:21" pos:end="249:65"><name pos:start="249:21" pos:end="249:44">mpeg1_decode_block_intra</name><argument_list pos:start="249:45" pos:end="249:65">(<argument pos:start="249:46" pos:end="249:46"><expr pos:start="249:46" pos:end="249:46"><name pos:start="249:46" pos:end="249:46">s</name></expr></argument>, <argument pos:start="249:49" pos:end="249:61"><expr pos:start="249:49" pos:end="249:61"><name pos:start="249:49" pos:end="249:61"><name pos:start="249:49" pos:end="249:49">s</name><operator pos:start="249:50" pos:end="249:51">-&gt;</operator><name pos:start="249:52" pos:end="249:58">pblocks</name><index pos:start="249:59" pos:end="249:61">[<expr pos:start="249:60" pos:end="249:60"><name pos:start="249:60" pos:end="249:60">i</name></expr>]</index></name></expr></argument>, <argument pos:start="249:64" pos:end="249:64"><expr pos:start="249:64" pos:end="249:64"><name pos:start="249:64" pos:end="249:64">i</name></expr></argument>)</argument_list></call> <operator pos:start="249:67" pos:end="249:67">&lt;</operator> <literal type="number" pos:start="249:69" pos:end="249:69">0</literal></expr>)</condition><block type="pseudo" pos:start="251:21" pos:end="251:30"><block_content pos:start="251:21" pos:end="251:30">

                    <return pos:start="251:21" pos:end="251:30">return <expr pos:start="251:28" pos:end="251:29"><operator pos:start="251:28" pos:end="251:28">-</operator><literal type="number" pos:start="251:29" pos:end="251:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="257:7" pos:end="733:5">else <block pos:start="257:12" pos:end="733:5">{<block_content pos:start="259:9" pos:end="731:9">

        <if_stmt pos:start="259:9" pos:end="585:9"><if pos:start="259:9" pos:end="311:9">if <condition pos:start="259:12" pos:end="259:38">(<expr pos:start="259:13" pos:end="259:37"><name pos:start="259:13" pos:end="259:19">mb_type</name> <operator pos:start="259:21" pos:end="259:21">&amp;</operator> <name pos:start="259:23" pos:end="259:37">MB_TYPE_ZERO_MV</name></expr>)</condition><block pos:start="259:39" pos:end="311:9">{<block_content pos:start="261:13" pos:end="309:31">

            <expr_stmt pos:start="261:13" pos:end="261:42"><expr pos:start="261:13" pos:end="261:41"><call pos:start="261:13" pos:end="261:41"><name pos:start="261:13" pos:end="261:18">assert</name><argument_list pos:start="261:19" pos:end="261:41">(<argument pos:start="261:20" pos:end="261:40"><expr pos:start="261:20" pos:end="261:40"><name pos:start="261:20" pos:end="261:26">mb_type</name> <operator pos:start="261:28" pos:end="261:28">&amp;</operator> <name pos:start="261:30" pos:end="261:40">MB_TYPE_CBP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="265:13" pos:end="265:34">/* compute dct type */</comment>

            <if_stmt pos:start="267:13" pos:end="273:13"><if pos:start="267:13" pos:end="273:13">if <condition pos:start="267:16" pos:end="269:41">(<expr pos:start="267:17" pos:end="269:40"><name pos:start="267:17" pos:end="267:36"><name pos:start="267:17" pos:end="267:17">s</name><operator pos:start="267:18" pos:end="267:19">-&gt;</operator><name pos:start="267:20" pos:end="267:36">picture_structure</name></name> <operator pos:start="267:38" pos:end="267:39">==</operator> <name pos:start="267:41" pos:end="267:50">PICT_FRAME</name> <operator pos:start="267:52" pos:end="267:53">&amp;&amp;</operator> <comment type="line" pos:start="267:55" pos:end="267:93">//FIXME add a interlaced_dct coded var?</comment>

                <operator pos:start="269:17" pos:end="269:17">!</operator><name pos:start="269:18" pos:end="269:40"><name pos:start="269:18" pos:end="269:18">s</name><operator pos:start="269:19" pos:end="269:20">-&gt;</operator><name pos:start="269:21" pos:end="269:40">frame_pred_frame_dct</name></name></expr>)</condition> <block pos:start="269:43" pos:end="273:13">{<block_content pos:start="271:17" pos:end="271:54">

                <expr_stmt pos:start="271:17" pos:end="271:54"><expr pos:start="271:17" pos:end="271:53"><name pos:start="271:17" pos:end="271:33"><name pos:start="271:17" pos:end="271:17">s</name><operator pos:start="271:18" pos:end="271:19">-&gt;</operator><name pos:start="271:20" pos:end="271:33">interlaced_dct</name></name> <operator pos:start="271:35" pos:end="271:35">=</operator> <call pos:start="271:37" pos:end="271:53"><name pos:start="271:37" pos:end="271:45">get_bits1</name><argument_list pos:start="271:46" pos:end="271:53">(<argument pos:start="271:47" pos:end="271:52"><expr pos:start="271:47" pos:end="271:52"><operator pos:start="271:47" pos:end="271:47">&amp;</operator><name pos:start="271:48" pos:end="271:52"><name pos:start="271:48" pos:end="271:48">s</name><operator pos:start="271:49" pos:end="271:50">-&gt;</operator><name pos:start="271:51" pos:end="271:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="277:13" pos:end="279:42"><if pos:start="277:13" pos:end="279:42">if <condition pos:start="277:16" pos:end="277:34">(<expr pos:start="277:17" pos:end="277:33"><call pos:start="277:17" pos:end="277:33"><name pos:start="277:17" pos:end="277:24">IS_QUANT</name><argument_list pos:start="277:25" pos:end="277:33">(<argument pos:start="277:26" pos:end="277:32"><expr pos:start="277:26" pos:end="277:32"><name pos:start="277:26" pos:end="277:32">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="279:17" pos:end="279:42"><block_content pos:start="279:17" pos:end="279:42">

                <expr_stmt pos:start="279:17" pos:end="279:42"><expr pos:start="279:17" pos:end="279:41"><name pos:start="279:17" pos:end="279:25"><name pos:start="279:17" pos:end="279:17">s</name><operator pos:start="279:18" pos:end="279:19">-&gt;</operator><name pos:start="279:20" pos:end="279:25">qscale</name></name> <operator pos:start="279:27" pos:end="279:27">=</operator> <call pos:start="279:29" pos:end="279:41"><name pos:start="279:29" pos:end="279:38">get_qscale</name><argument_list pos:start="279:39" pos:end="279:41">(<argument pos:start="279:40" pos:end="279:40"><expr pos:start="279:40" pos:end="279:40"><name pos:start="279:40" pos:end="279:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="283:13" pos:end="283:39"><expr pos:start="283:13" pos:end="283:38"><name pos:start="283:13" pos:end="283:21"><name pos:start="283:13" pos:end="283:13">s</name><operator pos:start="283:14" pos:end="283:15">-&gt;</operator><name pos:start="283:16" pos:end="283:21">mv_dir</name></name> <operator pos:start="283:23" pos:end="283:23">=</operator> <name pos:start="283:25" pos:end="283:38">MV_DIR_FORWARD</name></expr>;</expr_stmt>

            <if_stmt pos:start="285:13" pos:end="297:13"><if pos:start="285:13" pos:end="287:43">if<condition pos:start="285:15" pos:end="285:50">(<expr pos:start="285:16" pos:end="285:49"><name pos:start="285:16" pos:end="285:35"><name pos:start="285:16" pos:end="285:16">s</name><operator pos:start="285:17" pos:end="285:18">-&gt;</operator><name pos:start="285:19" pos:end="285:35">picture_structure</name></name> <operator pos:start="285:37" pos:end="285:38">==</operator> <name pos:start="285:40" pos:end="285:49">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="287:17" pos:end="287:43"><block_content pos:start="287:17" pos:end="287:43">

                <expr_stmt pos:start="287:17" pos:end="287:43"><expr pos:start="287:17" pos:end="287:42"><name pos:start="287:17" pos:end="287:26"><name pos:start="287:17" pos:end="287:17">s</name><operator pos:start="287:18" pos:end="287:19">-&gt;</operator><name pos:start="287:20" pos:end="287:26">mv_type</name></name> <operator pos:start="287:28" pos:end="287:28">=</operator> <name pos:start="287:30" pos:end="287:42">MV_TYPE_16X16</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="289:13" pos:end="297:13">else<block pos:start="289:17" pos:end="297:13">{<block_content pos:start="291:17" pos:end="295:64">

                <expr_stmt pos:start="291:17" pos:end="291:43"><expr pos:start="291:17" pos:end="291:42"><name pos:start="291:17" pos:end="291:26"><name pos:start="291:17" pos:end="291:17">s</name><operator pos:start="291:18" pos:end="291:19">-&gt;</operator><name pos:start="291:20" pos:end="291:26">mv_type</name></name> <operator pos:start="291:28" pos:end="291:28">=</operator> <name pos:start="291:30" pos:end="291:42">MV_TYPE_FIELD</name></expr>;</expr_stmt>

                <expr_stmt pos:start="293:17" pos:end="293:46"><expr pos:start="293:17" pos:end="293:45"><name pos:start="293:17" pos:end="293:23">mb_type</name> <operator pos:start="293:25" pos:end="293:26">|=</operator> <name pos:start="293:28" pos:end="293:45">MB_TYPE_INTERLACED</name></expr>;</expr_stmt>

                <expr_stmt pos:start="295:17" pos:end="295:64"><expr pos:start="295:17" pos:end="295:63"><name pos:start="295:17" pos:end="295:37"><name pos:start="295:17" pos:end="295:17">s</name><operator pos:start="295:18" pos:end="295:19">-&gt;</operator><name pos:start="295:20" pos:end="295:31">field_select</name><index pos:start="295:32" pos:end="295:34">[<expr pos:start="295:33" pos:end="295:33"><literal type="number" pos:start="295:33" pos:end="295:33">0</literal></expr>]</index><index pos:start="295:35" pos:end="295:37">[<expr pos:start="295:36" pos:end="295:36"><literal type="number" pos:start="295:36" pos:end="295:36">0</literal></expr>]</index></name><operator pos:start="295:38" pos:end="295:38">=</operator> <name pos:start="295:40" pos:end="295:59"><name pos:start="295:40" pos:end="295:40">s</name><operator pos:start="295:41" pos:end="295:42">-&gt;</operator><name pos:start="295:43" pos:end="295:59">picture_structure</name></name> <operator pos:start="295:61" pos:end="295:61">-</operator> <literal type="number" pos:start="295:63" pos:end="295:63">1</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:36"><expr pos:start="299:13" pos:end="299:35"><name pos:start="299:13" pos:end="299:31"><name pos:start="299:13" pos:end="299:13">s</name><operator pos:start="299:14" pos:end="299:15">-&gt;</operator><name pos:start="299:16" pos:end="299:22">last_mv</name><index pos:start="299:23" pos:end="299:25">[<expr pos:start="299:24" pos:end="299:24"><literal type="number" pos:start="299:24" pos:end="299:24">0</literal></expr>]</index><index pos:start="299:26" pos:end="299:28">[<expr pos:start="299:27" pos:end="299:27"><literal type="number" pos:start="299:27" pos:end="299:27">0</literal></expr>]</index><index pos:start="299:29" pos:end="299:31">[<expr pos:start="299:30" pos:end="299:30"><literal type="number" pos:start="299:30" pos:end="299:30">0</literal></expr>]</index></name> <operator pos:start="299:33" pos:end="299:33">=</operator> <literal type="number" pos:start="299:35" pos:end="299:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="301:13" pos:end="301:36"><expr pos:start="301:13" pos:end="301:35"><name pos:start="301:13" pos:end="301:31"><name pos:start="301:13" pos:end="301:13">s</name><operator pos:start="301:14" pos:end="301:15">-&gt;</operator><name pos:start="301:16" pos:end="301:22">last_mv</name><index pos:start="301:23" pos:end="301:25">[<expr pos:start="301:24" pos:end="301:24"><literal type="number" pos:start="301:24" pos:end="301:24">0</literal></expr>]</index><index pos:start="301:26" pos:end="301:28">[<expr pos:start="301:27" pos:end="301:27"><literal type="number" pos:start="301:27" pos:end="301:27">0</literal></expr>]</index><index pos:start="301:29" pos:end="301:31">[<expr pos:start="301:30" pos:end="301:30"><literal type="number" pos:start="301:30" pos:end="301:30">1</literal></expr>]</index></name> <operator pos:start="301:33" pos:end="301:33">=</operator> <literal type="number" pos:start="301:35" pos:end="301:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:36"><expr pos:start="303:13" pos:end="303:35"><name pos:start="303:13" pos:end="303:31"><name pos:start="303:13" pos:end="303:13">s</name><operator pos:start="303:14" pos:end="303:15">-&gt;</operator><name pos:start="303:16" pos:end="303:22">last_mv</name><index pos:start="303:23" pos:end="303:25">[<expr pos:start="303:24" pos:end="303:24"><literal type="number" pos:start="303:24" pos:end="303:24">0</literal></expr>]</index><index pos:start="303:26" pos:end="303:28">[<expr pos:start="303:27" pos:end="303:27"><literal type="number" pos:start="303:27" pos:end="303:27">1</literal></expr>]</index><index pos:start="303:29" pos:end="303:31">[<expr pos:start="303:30" pos:end="303:30"><literal type="number" pos:start="303:30" pos:end="303:30">0</literal></expr>]</index></name> <operator pos:start="303:33" pos:end="303:33">=</operator> <literal type="number" pos:start="303:35" pos:end="303:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="305:13" pos:end="305:36"><expr pos:start="305:13" pos:end="305:35"><name pos:start="305:13" pos:end="305:31"><name pos:start="305:13" pos:end="305:13">s</name><operator pos:start="305:14" pos:end="305:15">-&gt;</operator><name pos:start="305:16" pos:end="305:22">last_mv</name><index pos:start="305:23" pos:end="305:25">[<expr pos:start="305:24" pos:end="305:24"><literal type="number" pos:start="305:24" pos:end="305:24">0</literal></expr>]</index><index pos:start="305:26" pos:end="305:28">[<expr pos:start="305:27" pos:end="305:27"><literal type="number" pos:start="305:27" pos:end="305:27">1</literal></expr>]</index><index pos:start="305:29" pos:end="305:31">[<expr pos:start="305:30" pos:end="305:30"><literal type="number" pos:start="305:30" pos:end="305:30">1</literal></expr>]</index></name> <operator pos:start="305:33" pos:end="305:33">=</operator> <literal type="number" pos:start="305:35" pos:end="305:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="307:13" pos:end="307:31"><expr pos:start="307:13" pos:end="307:30"><name pos:start="307:13" pos:end="307:26"><name pos:start="307:13" pos:end="307:13">s</name><operator pos:start="307:14" pos:end="307:15">-&gt;</operator><name pos:start="307:16" pos:end="307:17">mv</name><index pos:start="307:18" pos:end="307:20">[<expr pos:start="307:19" pos:end="307:19"><literal type="number" pos:start="307:19" pos:end="307:19">0</literal></expr>]</index><index pos:start="307:21" pos:end="307:23">[<expr pos:start="307:22" pos:end="307:22"><literal type="number" pos:start="307:22" pos:end="307:22">0</literal></expr>]</index><index pos:start="307:24" pos:end="307:26">[<expr pos:start="307:25" pos:end="307:25"><literal type="number" pos:start="307:25" pos:end="307:25">0</literal></expr>]</index></name> <operator pos:start="307:28" pos:end="307:28">=</operator> <literal type="number" pos:start="307:30" pos:end="307:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:31"><expr pos:start="309:13" pos:end="309:30"><name pos:start="309:13" pos:end="309:26"><name pos:start="309:13" pos:end="309:13">s</name><operator pos:start="309:14" pos:end="309:15">-&gt;</operator><name pos:start="309:16" pos:end="309:17">mv</name><index pos:start="309:18" pos:end="309:20">[<expr pos:start="309:19" pos:end="309:19"><literal type="number" pos:start="309:19" pos:end="309:19">0</literal></expr>]</index><index pos:start="309:21" pos:end="309:23">[<expr pos:start="309:22" pos:end="309:22"><literal type="number" pos:start="309:22" pos:end="309:22">0</literal></expr>]</index><index pos:start="309:24" pos:end="309:26">[<expr pos:start="309:25" pos:end="309:25"><literal type="number" pos:start="309:25" pos:end="309:25">1</literal></expr>]</index></name> <operator pos:start="309:28" pos:end="309:28">=</operator> <literal type="number" pos:start="309:30" pos:end="309:30">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="311:10" pos:end="585:9">else<block pos:start="311:14" pos:end="585:9">{<block_content pos:start="313:13" pos:end="583:13">

            <expr_stmt pos:start="313:13" pos:end="313:43"><expr pos:start="313:13" pos:end="313:42"><call pos:start="313:13" pos:end="313:42"><name pos:start="313:13" pos:end="313:18">assert</name><argument_list pos:start="313:19" pos:end="313:42">(<argument pos:start="313:20" pos:end="313:41"><expr pos:start="313:20" pos:end="313:41"><name pos:start="313:20" pos:end="313:26">mb_type</name> <operator pos:start="313:28" pos:end="313:28">&amp;</operator> <name pos:start="313:30" pos:end="313:41">MB_TYPE_L0L1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="315:1" pos:end="315:62">//FIXME decide if MBs in field pictures are MB_TYPE_INTERLACED</comment>

            <comment type="block" pos:start="317:13" pos:end="317:52">/* get additionnal motion vector type */</comment>

            <if_stmt pos:start="319:13" pos:end="327:13"><if pos:start="319:13" pos:end="321:39">if <condition pos:start="319:16" pos:end="319:40">(<expr pos:start="319:17" pos:end="319:39"><name pos:start="319:17" pos:end="319:39"><name pos:start="319:17" pos:end="319:17">s</name><operator pos:start="319:18" pos:end="319:19">-&gt;</operator><name pos:start="319:20" pos:end="319:39">frame_pred_frame_dct</name></name></expr>)</condition><block type="pseudo" pos:start="321:17" pos:end="321:39"><block_content pos:start="321:17" pos:end="321:39"> 

                <expr_stmt pos:start="321:17" pos:end="321:39"><expr pos:start="321:17" pos:end="321:38"><name pos:start="321:17" pos:end="321:27">motion_type</name> <operator pos:start="321:29" pos:end="321:29">=</operator> <name pos:start="321:31" pos:end="321:38">MT_FRAME</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="323:13" pos:end="327:13">else<block pos:start="323:17" pos:end="327:13">{<block_content pos:start="325:17" pos:end="325:50">

                <expr_stmt pos:start="325:17" pos:end="325:50"><expr pos:start="325:17" pos:end="325:49"><name pos:start="325:17" pos:end="325:27">motion_type</name> <operator pos:start="325:29" pos:end="325:29">=</operator> <call pos:start="325:31" pos:end="325:49"><name pos:start="325:31" pos:end="325:38">get_bits</name><argument_list pos:start="325:39" pos:end="325:49">(<argument pos:start="325:40" pos:end="325:45"><expr pos:start="325:40" pos:end="325:45"><operator pos:start="325:40" pos:end="325:40">&amp;</operator><name pos:start="325:41" pos:end="325:45"><name pos:start="325:41" pos:end="325:41">s</name><operator pos:start="325:42" pos:end="325:43">-&gt;</operator><name pos:start="325:44" pos:end="325:45">gb</name></name></expr></argument>, <argument pos:start="325:48" pos:end="325:48"><expr pos:start="325:48" pos:end="325:48"><literal type="number" pos:start="325:48" pos:end="325:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <comment type="block" pos:start="331:13" pos:end="331:34">/* compute dct type */</comment>

            <if_stmt pos:start="333:13" pos:end="339:13"><if pos:start="333:13" pos:end="339:13">if <condition pos:start="333:16" pos:end="335:61">(<expr pos:start="333:17" pos:end="335:60"><name pos:start="333:17" pos:end="333:36"><name pos:start="333:17" pos:end="333:17">s</name><operator pos:start="333:18" pos:end="333:19">-&gt;</operator><name pos:start="333:20" pos:end="333:36">picture_structure</name></name> <operator pos:start="333:38" pos:end="333:39">==</operator> <name pos:start="333:41" pos:end="333:50">PICT_FRAME</name> <operator pos:start="333:52" pos:end="333:53">&amp;&amp;</operator> <comment type="line" pos:start="333:55" pos:end="333:93">//FIXME add a interlaced_dct coded var?</comment>

                <operator pos:start="335:17" pos:end="335:17">!</operator><name pos:start="335:18" pos:end="335:40"><name pos:start="335:18" pos:end="335:18">s</name><operator pos:start="335:19" pos:end="335:20">-&gt;</operator><name pos:start="335:21" pos:end="335:40">frame_pred_frame_dct</name></name> <operator pos:start="335:42" pos:end="335:43">&amp;&amp;</operator> <call pos:start="335:45" pos:end="335:60"><name pos:start="335:45" pos:end="335:51">HAS_CBP</name><argument_list pos:start="335:52" pos:end="335:60">(<argument pos:start="335:53" pos:end="335:59"><expr pos:start="335:53" pos:end="335:59"><name pos:start="335:53" pos:end="335:59">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="335:63" pos:end="339:13">{<block_content pos:start="337:17" pos:end="337:54">

                <expr_stmt pos:start="337:17" pos:end="337:54"><expr pos:start="337:17" pos:end="337:53"><name pos:start="337:17" pos:end="337:33"><name pos:start="337:17" pos:end="337:17">s</name><operator pos:start="337:18" pos:end="337:19">-&gt;</operator><name pos:start="337:20" pos:end="337:33">interlaced_dct</name></name> <operator pos:start="337:35" pos:end="337:35">=</operator> <call pos:start="337:37" pos:end="337:53"><name pos:start="337:37" pos:end="337:45">get_bits1</name><argument_list pos:start="337:46" pos:end="337:53">(<argument pos:start="337:47" pos:end="337:52"><expr pos:start="337:47" pos:end="337:52"><operator pos:start="337:47" pos:end="337:47">&amp;</operator><name pos:start="337:48" pos:end="337:52"><name pos:start="337:48" pos:end="337:48">s</name><operator pos:start="337:49" pos:end="337:50">-&gt;</operator><name pos:start="337:51" pos:end="337:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="343:13" pos:end="345:42"><if pos:start="343:13" pos:end="345:42">if <condition pos:start="343:16" pos:end="343:34">(<expr pos:start="343:17" pos:end="343:33"><call pos:start="343:17" pos:end="343:33"><name pos:start="343:17" pos:end="343:24">IS_QUANT</name><argument_list pos:start="343:25" pos:end="343:33">(<argument pos:start="343:26" pos:end="343:32"><expr pos:start="343:26" pos:end="343:32"><name pos:start="343:26" pos:end="343:32">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="345:17" pos:end="345:42"><block_content pos:start="345:17" pos:end="345:42">

                <expr_stmt pos:start="345:17" pos:end="345:42"><expr pos:start="345:17" pos:end="345:41"><name pos:start="345:17" pos:end="345:25"><name pos:start="345:17" pos:end="345:17">s</name><operator pos:start="345:18" pos:end="345:19">-&gt;</operator><name pos:start="345:20" pos:end="345:25">qscale</name></name> <operator pos:start="345:27" pos:end="345:27">=</operator> <call pos:start="345:29" pos:end="345:41"><name pos:start="345:29" pos:end="345:38">get_qscale</name><argument_list pos:start="345:39" pos:end="345:41">(<argument pos:start="345:40" pos:end="345:40"><expr pos:start="345:40" pos:end="345:40"><name pos:start="345:40" pos:end="345:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="block" pos:start="349:13" pos:end="349:32">/* motion vectors */</comment>

            <expr_stmt pos:start="351:13" pos:end="351:26"><expr pos:start="351:13" pos:end="351:25"><name pos:start="351:13" pos:end="351:21"><name pos:start="351:13" pos:end="351:13">s</name><operator pos:start="351:14" pos:end="351:15">-&gt;</operator><name pos:start="351:16" pos:end="351:21">mv_dir</name></name> <operator pos:start="351:23" pos:end="351:23">=</operator> <literal type="number" pos:start="351:25" pos:end="351:25">0</literal></expr>;</expr_stmt>

            <for pos:start="353:13" pos:end="583:13">for<control pos:start="353:16" pos:end="353:28">(<init pos:start="353:17" pos:end="353:20"><expr pos:start="353:17" pos:end="353:19"><name pos:start="353:17" pos:end="353:17">i</name><operator pos:start="353:18" pos:end="353:18">=</operator><literal type="number" pos:start="353:19" pos:end="353:19">0</literal></expr>;</init><condition pos:start="353:21" pos:end="353:24"><expr pos:start="353:21" pos:end="353:23"><name pos:start="353:21" pos:end="353:21">i</name><operator pos:start="353:22" pos:end="353:22">&lt;</operator><literal type="number" pos:start="353:23" pos:end="353:23">2</literal></expr>;</condition><incr pos:start="353:25" pos:end="353:27"><expr pos:start="353:25" pos:end="353:27"><name pos:start="353:25" pos:end="353:25">i</name><operator pos:start="353:26" pos:end="353:27">++</operator></expr></incr>)</control> <block pos:start="353:30" pos:end="583:13">{<block_content pos:start="355:17" pos:end="581:17">

                <if_stmt pos:start="355:17" pos:end="581:17"><if pos:start="355:17" pos:end="581:17">if <condition pos:start="355:20" pos:end="355:42">(<expr pos:start="355:21" pos:end="355:41"><call pos:start="355:21" pos:end="355:41"><name pos:start="355:21" pos:end="355:29">USES_LIST</name><argument_list pos:start="355:30" pos:end="355:41">(<argument pos:start="355:31" pos:end="355:37"><expr pos:start="355:31" pos:end="355:37"><name pos:start="355:31" pos:end="355:37">mb_type</name></expr></argument>, <argument pos:start="355:40" pos:end="355:40"><expr pos:start="355:40" pos:end="355:40"><name pos:start="355:40" pos:end="355:40">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="355:44" pos:end="581:17">{<block_content pos:start="357:21" pos:end="579:21">

                    <expr_stmt pos:start="357:21" pos:end="357:55"><expr pos:start="357:21" pos:end="357:54"><name pos:start="357:21" pos:end="357:29"><name pos:start="357:21" pos:end="357:21">s</name><operator pos:start="357:22" pos:end="357:23">-&gt;</operator><name pos:start="357:24" pos:end="357:29">mv_dir</name></name> <operator pos:start="357:31" pos:end="357:32">|=</operator> <operator pos:start="357:34" pos:end="357:34">(</operator><name pos:start="357:35" pos:end="357:48">MV_DIR_FORWARD</name> <operator pos:start="357:50" pos:end="357:51">&gt;&gt;</operator> <name pos:start="357:53" pos:end="357:53">i</name><operator pos:start="357:54" pos:end="357:54">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="359:21" pos:end="359:61"><expr pos:start="359:21" pos:end="359:60"><call pos:start="359:21" pos:end="359:60"><name pos:start="359:21" pos:end="359:27">dprintf</name><argument_list pos:start="359:28" pos:end="359:60">(<argument pos:start="359:29" pos:end="359:46"><expr pos:start="359:29" pos:end="359:46"><literal type="string" pos:start="359:29" pos:end="359:46">"motion_type=%d\n"</literal></expr></argument>, <argument pos:start="359:49" pos:end="359:59"><expr pos:start="359:49" pos:end="359:59"><name pos:start="359:49" pos:end="359:59">motion_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <switch pos:start="361:21" pos:end="579:21">switch<condition pos:start="361:27" pos:end="361:39">(<expr pos:start="361:28" pos:end="361:38"><name pos:start="361:28" pos:end="361:38">motion_type</name></expr>)</condition> <block pos:start="361:41" pos:end="579:21">{<block_content pos:start="363:21" pos:end="577:34">

                    <case pos:start="363:21" pos:end="363:34">case <expr pos:start="363:26" pos:end="363:33"><name pos:start="363:26" pos:end="363:33">MT_FRAME</name></expr>:</case> <comment type="block" pos:start="363:36" pos:end="363:51">/* or MT_16X8 */</comment>

                        <if_stmt pos:start="365:25" pos:end="417:25"><if pos:start="365:25" pos:end="391:25">if <condition pos:start="365:28" pos:end="365:63">(<expr pos:start="365:29" pos:end="365:62"><name pos:start="365:29" pos:end="365:48"><name pos:start="365:29" pos:end="365:29">s</name><operator pos:start="365:30" pos:end="365:31">-&gt;</operator><name pos:start="365:32" pos:end="365:48">picture_structure</name></name> <operator pos:start="365:50" pos:end="365:51">==</operator> <name pos:start="365:53" pos:end="365:62">PICT_FRAME</name></expr>)</condition> <block pos:start="365:65" pos:end="391:25">{<block_content pos:start="369:29" pos:end="389:29">

                            <comment type="block" pos:start="367:29" pos:end="367:42">/* MT_FRAME */</comment>

                            <expr_stmt pos:start="369:29" pos:end="369:53"><expr pos:start="369:29" pos:end="369:52"><name pos:start="369:29" pos:end="369:35">mb_type</name> <operator pos:start="369:37" pos:end="369:38">|=</operator> <name pos:start="369:40" pos:end="369:52">MB_TYPE_16x16</name></expr>;</expr_stmt> 

                            <expr_stmt pos:start="371:29" pos:end="371:55"><expr pos:start="371:29" pos:end="371:54"><name pos:start="371:29" pos:end="371:38"><name pos:start="371:29" pos:end="371:29">s</name><operator pos:start="371:30" pos:end="371:31">-&gt;</operator><name pos:start="371:32" pos:end="371:38">mv_type</name></name> <operator pos:start="371:40" pos:end="371:40">=</operator> <name pos:start="371:42" pos:end="371:54">MV_TYPE_16X16</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="373:29" pos:end="375:97"><expr pos:start="373:29" pos:end="375:96"><name pos:start="373:29" pos:end="373:42"><name pos:start="373:29" pos:end="373:29">s</name><operator pos:start="373:30" pos:end="373:31">-&gt;</operator><name pos:start="373:32" pos:end="373:33">mv</name><index pos:start="373:34" pos:end="373:36">[<expr pos:start="373:35" pos:end="373:35"><name pos:start="373:35" pos:end="373:35">i</name></expr>]</index><index pos:start="373:37" pos:end="373:39">[<expr pos:start="373:38" pos:end="373:38"><literal type="number" pos:start="373:38" pos:end="373:38">0</literal></expr>]</index><index pos:start="373:40" pos:end="373:42">[<expr pos:start="373:41" pos:end="373:41"><literal type="number" pos:start="373:41" pos:end="373:41">0</literal></expr>]</index></name><operator pos:start="373:43" pos:end="373:43">=</operator> <name pos:start="373:45" pos:end="373:63"><name pos:start="373:45" pos:end="373:45">s</name><operator pos:start="373:46" pos:end="373:47">-&gt;</operator><name pos:start="373:48" pos:end="373:54">last_mv</name><index pos:start="373:55" pos:end="373:57">[<expr pos:start="373:56" pos:end="373:56"><name pos:start="373:56" pos:end="373:56">i</name></expr>]</index><index pos:start="373:58" pos:end="373:60">[<expr pos:start="373:59" pos:end="373:59"><literal type="number" pos:start="373:59" pos:end="373:59">0</literal></expr>]</index><index pos:start="373:61" pos:end="373:63">[<expr pos:start="373:62" pos:end="373:62"><literal type="number" pos:start="373:62" pos:end="373:62">0</literal></expr>]</index></name><operator pos:start="373:64" pos:end="373:64">=</operator> <name pos:start="373:66" pos:end="373:84"><name pos:start="373:66" pos:end="373:66">s</name><operator pos:start="373:67" pos:end="373:68">-&gt;</operator><name pos:start="373:69" pos:end="373:75">last_mv</name><index pos:start="373:76" pos:end="373:78">[<expr pos:start="373:77" pos:end="373:77"><name pos:start="373:77" pos:end="373:77">i</name></expr>]</index><index pos:start="373:79" pos:end="373:81">[<expr pos:start="373:80" pos:end="373:80"><literal type="number" pos:start="373:80" pos:end="373:80">1</literal></expr>]</index><index pos:start="373:82" pos:end="373:84">[<expr pos:start="373:83" pos:end="373:83"><literal type="number" pos:start="373:83" pos:end="373:83">0</literal></expr>]</index></name> <operator pos:start="373:86" pos:end="373:86">=</operator> 

                                <call pos:start="375:33" pos:end="375:96"><name pos:start="375:33" pos:end="375:50">mpeg_decode_motion</name><argument_list pos:start="375:51" pos:end="375:96">(<argument pos:start="375:52" pos:end="375:52"><expr pos:start="375:52" pos:end="375:52"><name pos:start="375:52" pos:end="375:52">s</name></expr></argument>, <argument pos:start="375:55" pos:end="375:74"><expr pos:start="375:55" pos:end="375:74"><name pos:start="375:55" pos:end="375:74"><name pos:start="375:55" pos:end="375:55">s</name><operator pos:start="375:56" pos:end="375:57">-&gt;</operator><name pos:start="375:58" pos:end="375:68">mpeg_f_code</name><index pos:start="375:69" pos:end="375:71">[<expr pos:start="375:70" pos:end="375:70"><name pos:start="375:70" pos:end="375:70">i</name></expr>]</index><index pos:start="375:72" pos:end="375:74">[<expr pos:start="375:73" pos:end="375:73"><literal type="number" pos:start="375:73" pos:end="375:73">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="375:77" pos:end="375:95"><expr pos:start="375:77" pos:end="375:95"><name pos:start="375:77" pos:end="375:95"><name pos:start="375:77" pos:end="375:77">s</name><operator pos:start="375:78" pos:end="375:79">-&gt;</operator><name pos:start="375:80" pos:end="375:86">last_mv</name><index pos:start="375:87" pos:end="375:89">[<expr pos:start="375:88" pos:end="375:88"><name pos:start="375:88" pos:end="375:88">i</name></expr>]</index><index pos:start="375:90" pos:end="375:92">[<expr pos:start="375:91" pos:end="375:91"><literal type="number" pos:start="375:91" pos:end="375:91">0</literal></expr>]</index><index pos:start="375:93" pos:end="375:95">[<expr pos:start="375:94" pos:end="375:94"><literal type="number" pos:start="375:94" pos:end="375:94">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="377:29" pos:end="379:97"><expr pos:start="377:29" pos:end="379:96"><name pos:start="377:29" pos:end="377:42"><name pos:start="377:29" pos:end="377:29">s</name><operator pos:start="377:30" pos:end="377:31">-&gt;</operator><name pos:start="377:32" pos:end="377:33">mv</name><index pos:start="377:34" pos:end="377:36">[<expr pos:start="377:35" pos:end="377:35"><name pos:start="377:35" pos:end="377:35">i</name></expr>]</index><index pos:start="377:37" pos:end="377:39">[<expr pos:start="377:38" pos:end="377:38"><literal type="number" pos:start="377:38" pos:end="377:38">0</literal></expr>]</index><index pos:start="377:40" pos:end="377:42">[<expr pos:start="377:41" pos:end="377:41"><literal type="number" pos:start="377:41" pos:end="377:41">1</literal></expr>]</index></name><operator pos:start="377:43" pos:end="377:43">=</operator> <name pos:start="377:45" pos:end="377:63"><name pos:start="377:45" pos:end="377:45">s</name><operator pos:start="377:46" pos:end="377:47">-&gt;</operator><name pos:start="377:48" pos:end="377:54">last_mv</name><index pos:start="377:55" pos:end="377:57">[<expr pos:start="377:56" pos:end="377:56"><name pos:start="377:56" pos:end="377:56">i</name></expr>]</index><index pos:start="377:58" pos:end="377:60">[<expr pos:start="377:59" pos:end="377:59"><literal type="number" pos:start="377:59" pos:end="377:59">0</literal></expr>]</index><index pos:start="377:61" pos:end="377:63">[<expr pos:start="377:62" pos:end="377:62"><literal type="number" pos:start="377:62" pos:end="377:62">1</literal></expr>]</index></name><operator pos:start="377:64" pos:end="377:64">=</operator> <name pos:start="377:66" pos:end="377:84"><name pos:start="377:66" pos:end="377:66">s</name><operator pos:start="377:67" pos:end="377:68">-&gt;</operator><name pos:start="377:69" pos:end="377:75">last_mv</name><index pos:start="377:76" pos:end="377:78">[<expr pos:start="377:77" pos:end="377:77"><name pos:start="377:77" pos:end="377:77">i</name></expr>]</index><index pos:start="377:79" pos:end="377:81">[<expr pos:start="377:80" pos:end="377:80"><literal type="number" pos:start="377:80" pos:end="377:80">1</literal></expr>]</index><index pos:start="377:82" pos:end="377:84">[<expr pos:start="377:83" pos:end="377:83"><literal type="number" pos:start="377:83" pos:end="377:83">1</literal></expr>]</index></name> <operator pos:start="377:86" pos:end="377:86">=</operator> 

                                <call pos:start="379:33" pos:end="379:96"><name pos:start="379:33" pos:end="379:50">mpeg_decode_motion</name><argument_list pos:start="379:51" pos:end="379:96">(<argument pos:start="379:52" pos:end="379:52"><expr pos:start="379:52" pos:end="379:52"><name pos:start="379:52" pos:end="379:52">s</name></expr></argument>, <argument pos:start="379:55" pos:end="379:74"><expr pos:start="379:55" pos:end="379:74"><name pos:start="379:55" pos:end="379:74"><name pos:start="379:55" pos:end="379:55">s</name><operator pos:start="379:56" pos:end="379:57">-&gt;</operator><name pos:start="379:58" pos:end="379:68">mpeg_f_code</name><index pos:start="379:69" pos:end="379:71">[<expr pos:start="379:70" pos:end="379:70"><name pos:start="379:70" pos:end="379:70">i</name></expr>]</index><index pos:start="379:72" pos:end="379:74">[<expr pos:start="379:73" pos:end="379:73"><literal type="number" pos:start="379:73" pos:end="379:73">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="379:77" pos:end="379:95"><expr pos:start="379:77" pos:end="379:95"><name pos:start="379:77" pos:end="379:95"><name pos:start="379:77" pos:end="379:77">s</name><operator pos:start="379:78" pos:end="379:79">-&gt;</operator><name pos:start="379:80" pos:end="379:86">last_mv</name><index pos:start="379:87" pos:end="379:89">[<expr pos:start="379:88" pos:end="379:88"><name pos:start="379:88" pos:end="379:88">i</name></expr>]</index><index pos:start="379:90" pos:end="379:92">[<expr pos:start="379:91" pos:end="379:91"><literal type="number" pos:start="379:91" pos:end="379:91">0</literal></expr>]</index><index pos:start="379:93" pos:end="379:95">[<expr pos:start="379:94" pos:end="379:94"><literal type="number" pos:start="379:94" pos:end="379:94">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <comment type="block" pos:start="381:29" pos:end="381:58">/* full_pel: only for mpeg1 */</comment>

                            <if_stmt pos:start="383:29" pos:end="389:29"><if pos:start="383:29" pos:end="389:29">if <condition pos:start="383:32" pos:end="383:47">(<expr pos:start="383:33" pos:end="383:46"><name pos:start="383:33" pos:end="383:46"><name pos:start="383:33" pos:end="383:33">s</name><operator pos:start="383:34" pos:end="383:35">-&gt;</operator><name pos:start="383:36" pos:end="383:43">full_pel</name><index pos:start="383:44" pos:end="383:46">[<expr pos:start="383:45" pos:end="383:45"><name pos:start="383:45" pos:end="383:45">i</name></expr>]</index></name></expr>)</condition><block pos:start="383:48" pos:end="389:29">{<block_content pos:start="385:33" pos:end="387:53">

                                <expr_stmt pos:start="385:33" pos:end="385:53"><expr pos:start="385:33" pos:end="385:52"><name pos:start="385:33" pos:end="385:46"><name pos:start="385:33" pos:end="385:33">s</name><operator pos:start="385:34" pos:end="385:35">-&gt;</operator><name pos:start="385:36" pos:end="385:37">mv</name><index pos:start="385:38" pos:end="385:40">[<expr pos:start="385:39" pos:end="385:39"><name pos:start="385:39" pos:end="385:39">i</name></expr>]</index><index pos:start="385:41" pos:end="385:43">[<expr pos:start="385:42" pos:end="385:42"><literal type="number" pos:start="385:42" pos:end="385:42">0</literal></expr>]</index><index pos:start="385:44" pos:end="385:46">[<expr pos:start="385:45" pos:end="385:45"><literal type="number" pos:start="385:45" pos:end="385:45">0</literal></expr>]</index></name> <operator pos:start="385:48" pos:end="385:50">&lt;&lt;=</operator> <literal type="number" pos:start="385:52" pos:end="385:52">1</literal></expr>;</expr_stmt>

                                <expr_stmt pos:start="387:33" pos:end="387:53"><expr pos:start="387:33" pos:end="387:52"><name pos:start="387:33" pos:end="387:46"><name pos:start="387:33" pos:end="387:33">s</name><operator pos:start="387:34" pos:end="387:35">-&gt;</operator><name pos:start="387:36" pos:end="387:37">mv</name><index pos:start="387:38" pos:end="387:40">[<expr pos:start="387:39" pos:end="387:39"><name pos:start="387:39" pos:end="387:39">i</name></expr>]</index><index pos:start="387:41" pos:end="387:43">[<expr pos:start="387:42" pos:end="387:42"><literal type="number" pos:start="387:42" pos:end="387:42">0</literal></expr>]</index><index pos:start="387:44" pos:end="387:46">[<expr pos:start="387:45" pos:end="387:45"><literal type="number" pos:start="387:45" pos:end="387:45">1</literal></expr>]</index></name> <operator pos:start="387:48" pos:end="387:50">&lt;&lt;=</operator> <literal type="number" pos:start="387:52" pos:end="387:52">1</literal></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></if> <else pos:start="391:27" pos:end="417:25">else <block pos:start="391:32" pos:end="417:25">{<block_content pos:start="395:29" pos:end="415:29">

                            <comment type="block" pos:start="393:29" pos:end="393:41">/* MT_16X8 */</comment>

                            <expr_stmt pos:start="395:29" pos:end="395:73"><expr pos:start="395:29" pos:end="395:72"><name pos:start="395:29" pos:end="395:35">mb_type</name> <operator pos:start="395:37" pos:end="395:38">|=</operator> <name pos:start="395:40" pos:end="395:51">MB_TYPE_16x8</name> <operator pos:start="395:53" pos:end="395:53">|</operator> <name pos:start="395:55" pos:end="395:72">MB_TYPE_INTERLACED</name></expr>;</expr_stmt> 

                            <expr_stmt pos:start="397:29" pos:end="397:54"><expr pos:start="397:29" pos:end="397:53"><name pos:start="397:29" pos:end="397:38"><name pos:start="397:29" pos:end="397:29">s</name><operator pos:start="397:30" pos:end="397:31">-&gt;</operator><name pos:start="397:32" pos:end="397:38">mv_type</name></name> <operator pos:start="397:40" pos:end="397:40">=</operator> <name pos:start="397:42" pos:end="397:53">MV_TYPE_16X8</name></expr>;</expr_stmt>

                            <for pos:start="399:29" pos:end="415:29">for<control pos:start="399:32" pos:end="399:44">(<init pos:start="399:33" pos:end="399:36"><expr pos:start="399:33" pos:end="399:35"><name pos:start="399:33" pos:end="399:33">j</name><operator pos:start="399:34" pos:end="399:34">=</operator><literal type="number" pos:start="399:35" pos:end="399:35">0</literal></expr>;</init><condition pos:start="399:37" pos:end="399:40"><expr pos:start="399:37" pos:end="399:39"><name pos:start="399:37" pos:end="399:37">j</name><operator pos:start="399:38" pos:end="399:38">&lt;</operator><literal type="number" pos:start="399:39" pos:end="399:39">2</literal></expr>;</condition><incr pos:start="399:41" pos:end="399:43"><expr pos:start="399:41" pos:end="399:43"><name pos:start="399:41" pos:end="399:41">j</name><operator pos:start="399:42" pos:end="399:43">++</operator></expr></incr>)</control> <block pos:start="399:46" pos:end="415:29">{<block_content pos:start="401:33" pos:end="413:33">

                                <expr_stmt pos:start="401:33" pos:end="401:74"><expr pos:start="401:33" pos:end="401:73"><name pos:start="401:33" pos:end="401:53"><name pos:start="401:33" pos:end="401:33">s</name><operator pos:start="401:34" pos:end="401:35">-&gt;</operator><name pos:start="401:36" pos:end="401:47">field_select</name><index pos:start="401:48" pos:end="401:50">[<expr pos:start="401:49" pos:end="401:49"><name pos:start="401:49" pos:end="401:49">i</name></expr>]</index><index pos:start="401:51" pos:end="401:53">[<expr pos:start="401:52" pos:end="401:52"><name pos:start="401:52" pos:end="401:52">j</name></expr>]</index></name> <operator pos:start="401:55" pos:end="401:55">=</operator> <call pos:start="401:57" pos:end="401:73"><name pos:start="401:57" pos:end="401:65">get_bits1</name><argument_list pos:start="401:66" pos:end="401:73">(<argument pos:start="401:67" pos:end="401:72"><expr pos:start="401:67" pos:end="401:72"><operator pos:start="401:67" pos:end="401:67">&amp;</operator><name pos:start="401:68" pos:end="401:72"><name pos:start="401:68" pos:end="401:68">s</name><operator pos:start="401:69" pos:end="401:70">-&gt;</operator><name pos:start="401:71" pos:end="401:72">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <for pos:start="403:33" pos:end="413:33">for<control pos:start="403:36" pos:end="403:48">(<init pos:start="403:37" pos:end="403:40"><expr pos:start="403:37" pos:end="403:39"><name pos:start="403:37" pos:end="403:37">k</name><operator pos:start="403:38" pos:end="403:38">=</operator><literal type="number" pos:start="403:39" pos:end="403:39">0</literal></expr>;</init><condition pos:start="403:41" pos:end="403:44"><expr pos:start="403:41" pos:end="403:43"><name pos:start="403:41" pos:end="403:41">k</name><operator pos:start="403:42" pos:end="403:42">&lt;</operator><literal type="number" pos:start="403:43" pos:end="403:43">2</literal></expr>;</condition><incr pos:start="403:45" pos:end="403:47"><expr pos:start="403:45" pos:end="403:47"><name pos:start="403:45" pos:end="403:45">k</name><operator pos:start="403:46" pos:end="403:47">++</operator></expr></incr>)</control> <block pos:start="403:50" pos:end="413:33">{<block_content pos:start="405:37" pos:end="411:57">

                                    <expr_stmt pos:start="405:37" pos:end="407:82"><expr pos:start="405:37" pos:end="407:81"><name pos:start="405:37" pos:end="405:39">val</name> <operator pos:start="405:41" pos:end="405:41">=</operator> <call pos:start="405:43" pos:end="407:81"><name pos:start="405:43" pos:end="405:60">mpeg_decode_motion</name><argument_list pos:start="405:61" pos:end="407:81">(<argument pos:start="405:62" pos:end="405:62"><expr pos:start="405:62" pos:end="405:62"><name pos:start="405:62" pos:end="405:62">s</name></expr></argument>, <argument pos:start="405:65" pos:end="405:84"><expr pos:start="405:65" pos:end="405:84"><name pos:start="405:65" pos:end="405:84"><name pos:start="405:65" pos:end="405:65">s</name><operator pos:start="405:66" pos:end="405:67">-&gt;</operator><name pos:start="405:68" pos:end="405:78">mpeg_f_code</name><index pos:start="405:79" pos:end="405:81">[<expr pos:start="405:80" pos:end="405:80"><name pos:start="405:80" pos:end="405:80">i</name></expr>]</index><index pos:start="405:82" pos:end="405:84">[<expr pos:start="405:83" pos:end="405:83"><name pos:start="405:83" pos:end="405:83">k</name></expr>]</index></name></expr></argument>,

                                                             <argument pos:start="407:62" pos:end="407:80"><expr pos:start="407:62" pos:end="407:80"><name pos:start="407:62" pos:end="407:80"><name pos:start="407:62" pos:end="407:62">s</name><operator pos:start="407:63" pos:end="407:64">-&gt;</operator><name pos:start="407:65" pos:end="407:71">last_mv</name><index pos:start="407:72" pos:end="407:74">[<expr pos:start="407:73" pos:end="407:73"><name pos:start="407:73" pos:end="407:73">i</name></expr>]</index><index pos:start="407:75" pos:end="407:77">[<expr pos:start="407:76" pos:end="407:76"><name pos:start="407:76" pos:end="407:76">j</name></expr>]</index><index pos:start="407:78" pos:end="407:80">[<expr pos:start="407:79" pos:end="407:79"><name pos:start="407:79" pos:end="407:79">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="409:37" pos:end="409:62"><expr pos:start="409:37" pos:end="409:61"><name pos:start="409:37" pos:end="409:55"><name pos:start="409:37" pos:end="409:37">s</name><operator pos:start="409:38" pos:end="409:39">-&gt;</operator><name pos:start="409:40" pos:end="409:46">last_mv</name><index pos:start="409:47" pos:end="409:49">[<expr pos:start="409:48" pos:end="409:48"><name pos:start="409:48" pos:end="409:48">i</name></expr>]</index><index pos:start="409:50" pos:end="409:52">[<expr pos:start="409:51" pos:end="409:51"><name pos:start="409:51" pos:end="409:51">j</name></expr>]</index><index pos:start="409:53" pos:end="409:55">[<expr pos:start="409:54" pos:end="409:54"><name pos:start="409:54" pos:end="409:54">k</name></expr>]</index></name> <operator pos:start="409:57" pos:end="409:57">=</operator> <name pos:start="409:59" pos:end="409:61">val</name></expr>;</expr_stmt>

                                    <expr_stmt pos:start="411:37" pos:end="411:57"><expr pos:start="411:37" pos:end="411:56"><name pos:start="411:37" pos:end="411:50"><name pos:start="411:37" pos:end="411:37">s</name><operator pos:start="411:38" pos:end="411:39">-&gt;</operator><name pos:start="411:40" pos:end="411:41">mv</name><index pos:start="411:42" pos:end="411:44">[<expr pos:start="411:43" pos:end="411:43"><name pos:start="411:43" pos:end="411:43">i</name></expr>]</index><index pos:start="411:45" pos:end="411:47">[<expr pos:start="411:46" pos:end="411:46"><name pos:start="411:46" pos:end="411:46">j</name></expr>]</index><index pos:start="411:48" pos:end="411:50">[<expr pos:start="411:49" pos:end="411:49"><name pos:start="411:49" pos:end="411:49">k</name></expr>]</index></name> <operator pos:start="411:52" pos:end="411:52">=</operator> <name pos:start="411:54" pos:end="411:56">val</name></expr>;</expr_stmt>

                                </block_content>}</block></for>

                            </block_content>}</block></for>

                        </block_content>}</block></else></if_stmt>

                        <break pos:start="419:25" pos:end="419:30">break;</break>

                    <case pos:start="421:21" pos:end="421:34">case <expr pos:start="421:26" pos:end="421:33"><name pos:start="421:26" pos:end="421:33">MT_FIELD</name></expr>:</case>

                        <expr_stmt pos:start="423:25" pos:end="423:51"><expr pos:start="423:25" pos:end="423:50"><name pos:start="423:25" pos:end="423:34"><name pos:start="423:25" pos:end="423:25">s</name><operator pos:start="423:26" pos:end="423:27">-&gt;</operator><name pos:start="423:28" pos:end="423:34">mv_type</name></name> <operator pos:start="423:36" pos:end="423:36">=</operator> <name pos:start="423:38" pos:end="423:50">MV_TYPE_FIELD</name></expr>;</expr_stmt>

                        <if_stmt pos:start="425:25" pos:end="475:25"><if pos:start="425:25" pos:end="455:25">if <condition pos:start="425:28" pos:end="425:63">(<expr pos:start="425:29" pos:end="425:62"><name pos:start="425:29" pos:end="425:48"><name pos:start="425:29" pos:end="425:29">s</name><operator pos:start="425:30" pos:end="425:31">-&gt;</operator><name pos:start="425:32" pos:end="425:48">picture_structure</name></name> <operator pos:start="425:50" pos:end="425:51">==</operator> <name pos:start="425:53" pos:end="425:62">PICT_FRAME</name></expr>)</condition> <block pos:start="425:65" pos:end="455:25">{<block_content pos:start="427:29" pos:end="453:29">

                            <expr_stmt pos:start="427:29" pos:end="427:73"><expr pos:start="427:29" pos:end="427:72"><name pos:start="427:29" pos:end="427:35">mb_type</name> <operator pos:start="427:37" pos:end="427:38">|=</operator> <name pos:start="427:40" pos:end="427:51">MB_TYPE_16x8</name> <operator pos:start="427:53" pos:end="427:53">|</operator> <name pos:start="427:55" pos:end="427:72">MB_TYPE_INTERLACED</name></expr>;</expr_stmt> 

                            <for pos:start="429:29" pos:end="453:29">for<control pos:start="429:32" pos:end="429:44">(<init pos:start="429:33" pos:end="429:36"><expr pos:start="429:33" pos:end="429:35"><name pos:start="429:33" pos:end="429:33">j</name><operator pos:start="429:34" pos:end="429:34">=</operator><literal type="number" pos:start="429:35" pos:end="429:35">0</literal></expr>;</init><condition pos:start="429:37" pos:end="429:40"><expr pos:start="429:37" pos:end="429:39"><name pos:start="429:37" pos:end="429:37">j</name><operator pos:start="429:38" pos:end="429:38">&lt;</operator><literal type="number" pos:start="429:39" pos:end="429:39">2</literal></expr>;</condition><incr pos:start="429:41" pos:end="429:43"><expr pos:start="429:41" pos:end="429:43"><name pos:start="429:41" pos:end="429:41">j</name><operator pos:start="429:42" pos:end="429:43">++</operator></expr></incr>)</control> <block pos:start="429:46" pos:end="453:29">{<block_content pos:start="431:33" pos:end="451:57">

                                <expr_stmt pos:start="431:33" pos:end="431:74"><expr pos:start="431:33" pos:end="431:73"><name pos:start="431:33" pos:end="431:53"><name pos:start="431:33" pos:end="431:33">s</name><operator pos:start="431:34" pos:end="431:35">-&gt;</operator><name pos:start="431:36" pos:end="431:47">field_select</name><index pos:start="431:48" pos:end="431:50">[<expr pos:start="431:49" pos:end="431:49"><name pos:start="431:49" pos:end="431:49">i</name></expr>]</index><index pos:start="431:51" pos:end="431:53">[<expr pos:start="431:52" pos:end="431:52"><name pos:start="431:52" pos:end="431:52">j</name></expr>]</index></name> <operator pos:start="431:55" pos:end="431:55">=</operator> <call pos:start="431:57" pos:end="431:73"><name pos:start="431:57" pos:end="431:65">get_bits1</name><argument_list pos:start="431:66" pos:end="431:73">(<argument pos:start="431:67" pos:end="431:72"><expr pos:start="431:67" pos:end="431:72"><operator pos:start="431:67" pos:end="431:67">&amp;</operator><name pos:start="431:68" pos:end="431:72"><name pos:start="431:68" pos:end="431:68">s</name><operator pos:start="431:69" pos:end="431:70">-&gt;</operator><name pos:start="431:71" pos:end="431:72">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="433:33" pos:end="435:78"><expr pos:start="433:33" pos:end="435:77"><name pos:start="433:33" pos:end="433:35">val</name> <operator pos:start="433:37" pos:end="433:37">=</operator> <call pos:start="433:39" pos:end="435:77"><name pos:start="433:39" pos:end="433:56">mpeg_decode_motion</name><argument_list pos:start="433:57" pos:end="435:77">(<argument pos:start="433:58" pos:end="433:58"><expr pos:start="433:58" pos:end="433:58"><name pos:start="433:58" pos:end="433:58">s</name></expr></argument>, <argument pos:start="433:61" pos:end="433:80"><expr pos:start="433:61" pos:end="433:80"><name pos:start="433:61" pos:end="433:80"><name pos:start="433:61" pos:end="433:61">s</name><operator pos:start="433:62" pos:end="433:63">-&gt;</operator><name pos:start="433:64" pos:end="433:74">mpeg_f_code</name><index pos:start="433:75" pos:end="433:77">[<expr pos:start="433:76" pos:end="433:76"><name pos:start="433:76" pos:end="433:76">i</name></expr>]</index><index pos:start="433:78" pos:end="433:80">[<expr pos:start="433:79" pos:end="433:79"><literal type="number" pos:start="433:79" pos:end="433:79">0</literal></expr>]</index></name></expr></argument>,

                                                         <argument pos:start="435:58" pos:end="435:76"><expr pos:start="435:58" pos:end="435:76"><name pos:start="435:58" pos:end="435:76"><name pos:start="435:58" pos:end="435:58">s</name><operator pos:start="435:59" pos:end="435:60">-&gt;</operator><name pos:start="435:61" pos:end="435:67">last_mv</name><index pos:start="435:68" pos:end="435:70">[<expr pos:start="435:69" pos:end="435:69"><name pos:start="435:69" pos:end="435:69">i</name></expr>]</index><index pos:start="435:71" pos:end="435:73">[<expr pos:start="435:72" pos:end="435:72"><name pos:start="435:72" pos:end="435:72">j</name></expr>]</index><index pos:start="435:74" pos:end="435:76">[<expr pos:start="435:75" pos:end="435:75"><literal type="number" pos:start="435:75" pos:end="435:75">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="437:33" pos:end="437:58"><expr pos:start="437:33" pos:end="437:57"><name pos:start="437:33" pos:end="437:51"><name pos:start="437:33" pos:end="437:33">s</name><operator pos:start="437:34" pos:end="437:35">-&gt;</operator><name pos:start="437:36" pos:end="437:42">last_mv</name><index pos:start="437:43" pos:end="437:45">[<expr pos:start="437:44" pos:end="437:44"><name pos:start="437:44" pos:end="437:44">i</name></expr>]</index><index pos:start="437:46" pos:end="437:48">[<expr pos:start="437:47" pos:end="437:47"><name pos:start="437:47" pos:end="437:47">j</name></expr>]</index><index pos:start="437:49" pos:end="437:51">[<expr pos:start="437:50" pos:end="437:50"><literal type="number" pos:start="437:50" pos:end="437:50">0</literal></expr>]</index></name> <operator pos:start="437:53" pos:end="437:53">=</operator> <name pos:start="437:55" pos:end="437:57">val</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="439:33" pos:end="439:53"><expr pos:start="439:33" pos:end="439:52"><name pos:start="439:33" pos:end="439:46"><name pos:start="439:33" pos:end="439:33">s</name><operator pos:start="439:34" pos:end="439:35">-&gt;</operator><name pos:start="439:36" pos:end="439:37">mv</name><index pos:start="439:38" pos:end="439:40">[<expr pos:start="439:39" pos:end="439:39"><name pos:start="439:39" pos:end="439:39">i</name></expr>]</index><index pos:start="439:41" pos:end="439:43">[<expr pos:start="439:42" pos:end="439:42"><name pos:start="439:42" pos:end="439:42">j</name></expr>]</index><index pos:start="439:44" pos:end="439:46">[<expr pos:start="439:45" pos:end="439:45"><literal type="number" pos:start="439:45" pos:end="439:45">0</literal></expr>]</index></name> <operator pos:start="439:48" pos:end="439:48">=</operator> <name pos:start="439:50" pos:end="439:52">val</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="441:33" pos:end="441:57"><expr pos:start="441:33" pos:end="441:56"><call pos:start="441:33" pos:end="441:56"><name pos:start="441:33" pos:end="441:39">dprintf</name><argument_list pos:start="441:40" pos:end="441:56">(<argument pos:start="441:41" pos:end="441:50"><expr pos:start="441:41" pos:end="441:50"><literal type="string" pos:start="441:41" pos:end="441:50">"fmx=%d\n"</literal></expr></argument>, <argument pos:start="441:53" pos:end="441:55"><expr pos:start="441:53" pos:end="441:55"><name pos:start="441:53" pos:end="441:55">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="443:33" pos:end="445:83"><expr pos:start="443:33" pos:end="445:82"><name pos:start="443:33" pos:end="443:35">val</name> <operator pos:start="443:37" pos:end="443:37">=</operator> <call pos:start="443:39" pos:end="445:82"><name pos:start="443:39" pos:end="443:56">mpeg_decode_motion</name><argument_list pos:start="443:57" pos:end="445:82">(<argument pos:start="443:58" pos:end="443:58"><expr pos:start="443:58" pos:end="443:58"><name pos:start="443:58" pos:end="443:58">s</name></expr></argument>, <argument pos:start="443:61" pos:end="443:80"><expr pos:start="443:61" pos:end="443:80"><name pos:start="443:61" pos:end="443:80"><name pos:start="443:61" pos:end="443:61">s</name><operator pos:start="443:62" pos:end="443:63">-&gt;</operator><name pos:start="443:64" pos:end="443:74">mpeg_f_code</name><index pos:start="443:75" pos:end="443:77">[<expr pos:start="443:76" pos:end="443:76"><name pos:start="443:76" pos:end="443:76">i</name></expr>]</index><index pos:start="443:78" pos:end="443:80">[<expr pos:start="443:79" pos:end="443:79"><literal type="number" pos:start="443:79" pos:end="443:79">1</literal></expr>]</index></name></expr></argument>,

                                                         <argument pos:start="445:58" pos:end="445:81"><expr pos:start="445:58" pos:end="445:81"><name pos:start="445:58" pos:end="445:76"><name pos:start="445:58" pos:end="445:58">s</name><operator pos:start="445:59" pos:end="445:60">-&gt;</operator><name pos:start="445:61" pos:end="445:67">last_mv</name><index pos:start="445:68" pos:end="445:70">[<expr pos:start="445:69" pos:end="445:69"><name pos:start="445:69" pos:end="445:69">i</name></expr>]</index><index pos:start="445:71" pos:end="445:73">[<expr pos:start="445:72" pos:end="445:72"><name pos:start="445:72" pos:end="445:72">j</name></expr>]</index><index pos:start="445:74" pos:end="445:76">[<expr pos:start="445:75" pos:end="445:75"><literal type="number" pos:start="445:75" pos:end="445:75">1</literal></expr>]</index></name> <operator pos:start="445:78" pos:end="445:79">&gt;&gt;</operator> <literal type="number" pos:start="445:81" pos:end="445:81">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="447:33" pos:end="447:63"><expr pos:start="447:33" pos:end="447:62"><name pos:start="447:33" pos:end="447:51"><name pos:start="447:33" pos:end="447:33">s</name><operator pos:start="447:34" pos:end="447:35">-&gt;</operator><name pos:start="447:36" pos:end="447:42">last_mv</name><index pos:start="447:43" pos:end="447:45">[<expr pos:start="447:44" pos:end="447:44"><name pos:start="447:44" pos:end="447:44">i</name></expr>]</index><index pos:start="447:46" pos:end="447:48">[<expr pos:start="447:47" pos:end="447:47"><name pos:start="447:47" pos:end="447:47">j</name></expr>]</index><index pos:start="447:49" pos:end="447:51">[<expr pos:start="447:50" pos:end="447:50"><literal type="number" pos:start="447:50" pos:end="447:50">1</literal></expr>]</index></name> <operator pos:start="447:53" pos:end="447:53">=</operator> <name pos:start="447:55" pos:end="447:57">val</name> <operator pos:start="447:59" pos:end="447:60">&lt;&lt;</operator> <literal type="number" pos:start="447:62" pos:end="447:62">1</literal></expr>;</expr_stmt>

                                <expr_stmt pos:start="449:33" pos:end="449:53"><expr pos:start="449:33" pos:end="449:52"><name pos:start="449:33" pos:end="449:46"><name pos:start="449:33" pos:end="449:33">s</name><operator pos:start="449:34" pos:end="449:35">-&gt;</operator><name pos:start="449:36" pos:end="449:37">mv</name><index pos:start="449:38" pos:end="449:40">[<expr pos:start="449:39" pos:end="449:39"><name pos:start="449:39" pos:end="449:39">i</name></expr>]</index><index pos:start="449:41" pos:end="449:43">[<expr pos:start="449:42" pos:end="449:42"><name pos:start="449:42" pos:end="449:42">j</name></expr>]</index><index pos:start="449:44" pos:end="449:46">[<expr pos:start="449:45" pos:end="449:45"><literal type="number" pos:start="449:45" pos:end="449:45">1</literal></expr>]</index></name> <operator pos:start="449:48" pos:end="449:48">=</operator> <name pos:start="449:50" pos:end="449:52">val</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="451:33" pos:end="451:57"><expr pos:start="451:33" pos:end="451:56"><call pos:start="451:33" pos:end="451:56"><name pos:start="451:33" pos:end="451:39">dprintf</name><argument_list pos:start="451:40" pos:end="451:56">(<argument pos:start="451:41" pos:end="451:50"><expr pos:start="451:41" pos:end="451:50"><literal type="string" pos:start="451:41" pos:end="451:50">"fmy=%d\n"</literal></expr></argument>, <argument pos:start="451:53" pos:end="451:55"><expr pos:start="451:53" pos:end="451:55"><name pos:start="451:53" pos:end="451:55">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></for>

                        </block_content>}</block></if> <else pos:start="455:27" pos:end="475:25">else <block pos:start="455:32" pos:end="475:25">{<block_content pos:start="457:29" pos:end="473:29">

                            <expr_stmt pos:start="457:29" pos:end="457:74"><expr pos:start="457:29" pos:end="457:73"><name pos:start="457:29" pos:end="457:35">mb_type</name> <operator pos:start="457:37" pos:end="457:38">|=</operator> <name pos:start="457:40" pos:end="457:52">MB_TYPE_16x16</name> <operator pos:start="457:54" pos:end="457:54">|</operator> <name pos:start="457:56" pos:end="457:73">MB_TYPE_INTERLACED</name></expr>;</expr_stmt> 

                            <expr_stmt pos:start="459:29" pos:end="459:70"><expr pos:start="459:29" pos:end="459:69"><name pos:start="459:29" pos:end="459:49"><name pos:start="459:29" pos:end="459:29">s</name><operator pos:start="459:30" pos:end="459:31">-&gt;</operator><name pos:start="459:32" pos:end="459:43">field_select</name><index pos:start="459:44" pos:end="459:46">[<expr pos:start="459:45" pos:end="459:45"><name pos:start="459:45" pos:end="459:45">i</name></expr>]</index><index pos:start="459:47" pos:end="459:49">[<expr pos:start="459:48" pos:end="459:48"><literal type="number" pos:start="459:48" pos:end="459:48">0</literal></expr>]</index></name> <operator pos:start="459:51" pos:end="459:51">=</operator> <call pos:start="459:53" pos:end="459:69"><name pos:start="459:53" pos:end="459:61">get_bits1</name><argument_list pos:start="459:62" pos:end="459:69">(<argument pos:start="459:63" pos:end="459:68"><expr pos:start="459:63" pos:end="459:68"><operator pos:start="459:63" pos:end="459:63">&amp;</operator><name pos:start="459:64" pos:end="459:68"><name pos:start="459:64" pos:end="459:64">s</name><operator pos:start="459:65" pos:end="459:66">-&gt;</operator><name pos:start="459:67" pos:end="459:68">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <for pos:start="461:29" pos:end="473:29">for<control pos:start="461:32" pos:end="461:44">(<init pos:start="461:33" pos:end="461:36"><expr pos:start="461:33" pos:end="461:35"><name pos:start="461:33" pos:end="461:33">k</name><operator pos:start="461:34" pos:end="461:34">=</operator><literal type="number" pos:start="461:35" pos:end="461:35">0</literal></expr>;</init><condition pos:start="461:37" pos:end="461:40"><expr pos:start="461:37" pos:end="461:39"><name pos:start="461:37" pos:end="461:37">k</name><operator pos:start="461:38" pos:end="461:38">&lt;</operator><literal type="number" pos:start="461:39" pos:end="461:39">2</literal></expr>;</condition><incr pos:start="461:41" pos:end="461:43"><expr pos:start="461:41" pos:end="461:43"><name pos:start="461:41" pos:end="461:41">k</name><operator pos:start="461:42" pos:end="461:43">++</operator></expr></incr>)</control> <block pos:start="461:46" pos:end="473:29">{<block_content pos:start="463:33" pos:end="471:53">

                                <expr_stmt pos:start="463:33" pos:end="465:78"><expr pos:start="463:33" pos:end="465:77"><name pos:start="463:33" pos:end="463:35">val</name> <operator pos:start="463:37" pos:end="463:37">=</operator> <call pos:start="463:39" pos:end="465:77"><name pos:start="463:39" pos:end="463:56">mpeg_decode_motion</name><argument_list pos:start="463:57" pos:end="465:77">(<argument pos:start="463:58" pos:end="463:58"><expr pos:start="463:58" pos:end="463:58"><name pos:start="463:58" pos:end="463:58">s</name></expr></argument>, <argument pos:start="463:61" pos:end="463:80"><expr pos:start="463:61" pos:end="463:80"><name pos:start="463:61" pos:end="463:80"><name pos:start="463:61" pos:end="463:61">s</name><operator pos:start="463:62" pos:end="463:63">-&gt;</operator><name pos:start="463:64" pos:end="463:74">mpeg_f_code</name><index pos:start="463:75" pos:end="463:77">[<expr pos:start="463:76" pos:end="463:76"><name pos:start="463:76" pos:end="463:76">i</name></expr>]</index><index pos:start="463:78" pos:end="463:80">[<expr pos:start="463:79" pos:end="463:79"><name pos:start="463:79" pos:end="463:79">k</name></expr>]</index></name></expr></argument>,

                                                         <argument pos:start="465:58" pos:end="465:76"><expr pos:start="465:58" pos:end="465:76"><name pos:start="465:58" pos:end="465:76"><name pos:start="465:58" pos:end="465:58">s</name><operator pos:start="465:59" pos:end="465:60">-&gt;</operator><name pos:start="465:61" pos:end="465:67">last_mv</name><index pos:start="465:68" pos:end="465:70">[<expr pos:start="465:69" pos:end="465:69"><name pos:start="465:69" pos:end="465:69">i</name></expr>]</index><index pos:start="465:71" pos:end="465:73">[<expr pos:start="465:72" pos:end="465:72"><literal type="number" pos:start="465:72" pos:end="465:72">0</literal></expr>]</index><index pos:start="465:74" pos:end="465:76">[<expr pos:start="465:75" pos:end="465:75"><name pos:start="465:75" pos:end="465:75">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="467:33" pos:end="467:58"><expr pos:start="467:33" pos:end="467:57"><name pos:start="467:33" pos:end="467:51"><name pos:start="467:33" pos:end="467:33">s</name><operator pos:start="467:34" pos:end="467:35">-&gt;</operator><name pos:start="467:36" pos:end="467:42">last_mv</name><index pos:start="467:43" pos:end="467:45">[<expr pos:start="467:44" pos:end="467:44"><name pos:start="467:44" pos:end="467:44">i</name></expr>]</index><index pos:start="467:46" pos:end="467:48">[<expr pos:start="467:47" pos:end="467:47"><literal type="number" pos:start="467:47" pos:end="467:47">0</literal></expr>]</index><index pos:start="467:49" pos:end="467:51">[<expr pos:start="467:50" pos:end="467:50"><name pos:start="467:50" pos:end="467:50">k</name></expr>]</index></name> <operator pos:start="467:53" pos:end="467:53">=</operator> <name pos:start="467:55" pos:end="467:57">val</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="469:33" pos:end="469:58"><expr pos:start="469:33" pos:end="469:57"><name pos:start="469:33" pos:end="469:51"><name pos:start="469:33" pos:end="469:33">s</name><operator pos:start="469:34" pos:end="469:35">-&gt;</operator><name pos:start="469:36" pos:end="469:42">last_mv</name><index pos:start="469:43" pos:end="469:45">[<expr pos:start="469:44" pos:end="469:44"><name pos:start="469:44" pos:end="469:44">i</name></expr>]</index><index pos:start="469:46" pos:end="469:48">[<expr pos:start="469:47" pos:end="469:47"><literal type="number" pos:start="469:47" pos:end="469:47">1</literal></expr>]</index><index pos:start="469:49" pos:end="469:51">[<expr pos:start="469:50" pos:end="469:50"><name pos:start="469:50" pos:end="469:50">k</name></expr>]</index></name> <operator pos:start="469:53" pos:end="469:53">=</operator> <name pos:start="469:55" pos:end="469:57">val</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="471:33" pos:end="471:53"><expr pos:start="471:33" pos:end="471:52"><name pos:start="471:33" pos:end="471:46"><name pos:start="471:33" pos:end="471:33">s</name><operator pos:start="471:34" pos:end="471:35">-&gt;</operator><name pos:start="471:36" pos:end="471:37">mv</name><index pos:start="471:38" pos:end="471:40">[<expr pos:start="471:39" pos:end="471:39"><name pos:start="471:39" pos:end="471:39">i</name></expr>]</index><index pos:start="471:41" pos:end="471:43">[<expr pos:start="471:42" pos:end="471:42"><literal type="number" pos:start="471:42" pos:end="471:42">0</literal></expr>]</index><index pos:start="471:44" pos:end="471:46">[<expr pos:start="471:45" pos:end="471:45"><name pos:start="471:45" pos:end="471:45">k</name></expr>]</index></name> <operator pos:start="471:48" pos:end="471:48">=</operator> <name pos:start="471:50" pos:end="471:52">val</name></expr>;</expr_stmt>

                            </block_content>}</block></for>

                        </block_content>}</block></else></if_stmt>

                        <break pos:start="477:25" pos:end="477:30">break;</break>

                    <case pos:start="479:21" pos:end="479:32">case <expr pos:start="479:26" pos:end="479:31"><name pos:start="479:26" pos:end="479:31">MT_DMV</name></expr>:</case>

                        <block pos:start="481:25" pos:end="569:25">{<block_content pos:start="483:29" pos:end="567:29">

                            <decl_stmt pos:start="483:29" pos:end="483:52"><decl pos:start="483:29" pos:end="483:35"><type pos:start="483:29" pos:end="483:31"><name pos:start="483:29" pos:end="483:31">int</name></type> <name pos:start="483:33" pos:end="483:35">dmx</name></decl>, <decl pos:start="483:38" pos:end="483:40"><type ref="prev" pos:start="483:29" pos:end="483:31"/><name pos:start="483:38" pos:end="483:40">dmy</name></decl>, <decl pos:start="483:43" pos:end="483:44"><type ref="prev" pos:start="483:29" pos:end="483:31"/><name pos:start="483:43" pos:end="483:44">mx</name></decl>, <decl pos:start="483:47" pos:end="483:48"><type ref="prev" pos:start="483:29" pos:end="483:31"/><name pos:start="483:47" pos:end="483:48">my</name></decl>, <decl pos:start="483:51" pos:end="483:51"><type ref="prev" pos:start="483:29" pos:end="483:31"/><name pos:start="483:51" pos:end="483:51">m</name></decl>;</decl_stmt>



                            <expr_stmt pos:start="487:29" pos:end="489:73"><expr pos:start="487:29" pos:end="489:72"><name pos:start="487:29" pos:end="487:30">mx</name> <operator pos:start="487:32" pos:end="487:32">=</operator> <call pos:start="487:34" pos:end="489:72"><name pos:start="487:34" pos:end="487:51">mpeg_decode_motion</name><argument_list pos:start="487:52" pos:end="489:72">(<argument pos:start="487:53" pos:end="487:53"><expr pos:start="487:53" pos:end="487:53"><name pos:start="487:53" pos:end="487:53">s</name></expr></argument>, <argument pos:start="487:56" pos:end="487:75"><expr pos:start="487:56" pos:end="487:75"><name pos:start="487:56" pos:end="487:75"><name pos:start="487:56" pos:end="487:56">s</name><operator pos:start="487:57" pos:end="487:58">-&gt;</operator><name pos:start="487:59" pos:end="487:69">mpeg_f_code</name><index pos:start="487:70" pos:end="487:72">[<expr pos:start="487:71" pos:end="487:71"><name pos:start="487:71" pos:end="487:71">i</name></expr>]</index><index pos:start="487:73" pos:end="487:75">[<expr pos:start="487:74" pos:end="487:74"><literal type="number" pos:start="487:74" pos:end="487:74">0</literal></expr>]</index></name></expr></argument>, 

                                                    <argument pos:start="489:53" pos:end="489:71"><expr pos:start="489:53" pos:end="489:71"><name pos:start="489:53" pos:end="489:71"><name pos:start="489:53" pos:end="489:53">s</name><operator pos:start="489:54" pos:end="489:55">-&gt;</operator><name pos:start="489:56" pos:end="489:62">last_mv</name><index pos:start="489:63" pos:end="489:65">[<expr pos:start="489:64" pos:end="489:64"><name pos:start="489:64" pos:end="489:64">i</name></expr>]</index><index pos:start="489:66" pos:end="489:68">[<expr pos:start="489:67" pos:end="489:67"><literal type="number" pos:start="489:67" pos:end="489:67">0</literal></expr>]</index><index pos:start="489:69" pos:end="489:71">[<expr pos:start="489:70" pos:end="489:70"><literal type="number" pos:start="489:70" pos:end="489:70">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="491:29" pos:end="491:53"><expr pos:start="491:29" pos:end="491:52"><name pos:start="491:29" pos:end="491:47"><name pos:start="491:29" pos:end="491:29">s</name><operator pos:start="491:30" pos:end="491:31">-&gt;</operator><name pos:start="491:32" pos:end="491:38">last_mv</name><index pos:start="491:39" pos:end="491:41">[<expr pos:start="491:40" pos:end="491:40"><name pos:start="491:40" pos:end="491:40">i</name></expr>]</index><index pos:start="491:42" pos:end="491:44">[<expr pos:start="491:43" pos:end="491:43"><literal type="number" pos:start="491:43" pos:end="491:43">0</literal></expr>]</index><index pos:start="491:45" pos:end="491:47">[<expr pos:start="491:46" pos:end="491:46"><literal type="number" pos:start="491:46" pos:end="491:46">0</literal></expr>]</index></name> <operator pos:start="491:49" pos:end="491:49">=</operator> <name pos:start="491:51" pos:end="491:52">mx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="493:29" pos:end="493:53"><expr pos:start="493:29" pos:end="493:52"><name pos:start="493:29" pos:end="493:47"><name pos:start="493:29" pos:end="493:29">s</name><operator pos:start="493:30" pos:end="493:31">-&gt;</operator><name pos:start="493:32" pos:end="493:38">last_mv</name><index pos:start="493:39" pos:end="493:41">[<expr pos:start="493:40" pos:end="493:40"><name pos:start="493:40" pos:end="493:40">i</name></expr>]</index><index pos:start="493:42" pos:end="493:44">[<expr pos:start="493:43" pos:end="493:43"><literal type="number" pos:start="493:43" pos:end="493:43">1</literal></expr>]</index><index pos:start="493:45" pos:end="493:47">[<expr pos:start="493:46" pos:end="493:46"><literal type="number" pos:start="493:46" pos:end="493:46">0</literal></expr>]</index></name> <operator pos:start="493:49" pos:end="493:49">=</operator> <name pos:start="493:51" pos:end="493:52">mx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="495:29" pos:end="495:45"><expr pos:start="495:29" pos:end="495:44"><name pos:start="495:29" pos:end="495:31">dmx</name> <operator pos:start="495:33" pos:end="495:33">=</operator> <call pos:start="495:35" pos:end="495:44"><name pos:start="495:35" pos:end="495:41">get_dmv</name><argument_list pos:start="495:42" pos:end="495:44">(<argument pos:start="495:43" pos:end="495:43"><expr pos:start="495:43" pos:end="495:43"><name pos:start="495:43" pos:end="495:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="497:29" pos:end="499:78"><expr pos:start="497:29" pos:end="499:77"><name pos:start="497:29" pos:end="497:30">my</name> <operator pos:start="497:32" pos:end="497:32">=</operator> <call pos:start="497:34" pos:end="499:77"><name pos:start="497:34" pos:end="497:51">mpeg_decode_motion</name><argument_list pos:start="497:52" pos:end="499:77">(<argument pos:start="497:53" pos:end="497:53"><expr pos:start="497:53" pos:end="497:53"><name pos:start="497:53" pos:end="497:53">s</name></expr></argument>, <argument pos:start="497:56" pos:end="497:75"><expr pos:start="497:56" pos:end="497:75"><name pos:start="497:56" pos:end="497:75"><name pos:start="497:56" pos:end="497:56">s</name><operator pos:start="497:57" pos:end="497:58">-&gt;</operator><name pos:start="497:59" pos:end="497:69">mpeg_f_code</name><index pos:start="497:70" pos:end="497:72">[<expr pos:start="497:71" pos:end="497:71"><name pos:start="497:71" pos:end="497:71">i</name></expr>]</index><index pos:start="497:73" pos:end="497:75">[<expr pos:start="497:74" pos:end="497:74"><literal type="number" pos:start="497:74" pos:end="497:74">1</literal></expr>]</index></name></expr></argument>, 

                                                    <argument pos:start="499:53" pos:end="499:76"><expr pos:start="499:53" pos:end="499:76"><name pos:start="499:53" pos:end="499:71"><name pos:start="499:53" pos:end="499:53">s</name><operator pos:start="499:54" pos:end="499:55">-&gt;</operator><name pos:start="499:56" pos:end="499:62">last_mv</name><index pos:start="499:63" pos:end="499:65">[<expr pos:start="499:64" pos:end="499:64"><name pos:start="499:64" pos:end="499:64">i</name></expr>]</index><index pos:start="499:66" pos:end="499:68">[<expr pos:start="499:67" pos:end="499:67"><literal type="number" pos:start="499:67" pos:end="499:67">0</literal></expr>]</index><index pos:start="499:69" pos:end="499:71">[<expr pos:start="499:70" pos:end="499:70"><literal type="number" pos:start="499:70" pos:end="499:70">1</literal></expr>]</index></name> <operator pos:start="499:73" pos:end="499:74">&gt;&gt;</operator> <literal type="number" pos:start="499:76" pos:end="499:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="501:29" pos:end="501:45"><expr pos:start="501:29" pos:end="501:44"><name pos:start="501:29" pos:end="501:31">dmy</name> <operator pos:start="501:33" pos:end="501:33">=</operator> <call pos:start="501:35" pos:end="501:44"><name pos:start="501:35" pos:end="501:41">get_dmv</name><argument_list pos:start="501:42" pos:end="501:44">(<argument pos:start="501:43" pos:end="501:43"><expr pos:start="501:43" pos:end="501:43"><name pos:start="501:43" pos:end="501:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="503:29" pos:end="503:53"><expr pos:start="503:29" pos:end="503:52"><name pos:start="503:29" pos:end="503:38"><name pos:start="503:29" pos:end="503:29">s</name><operator pos:start="503:30" pos:end="503:31">-&gt;</operator><name pos:start="503:32" pos:end="503:38">mv_type</name></name> <operator pos:start="503:40" pos:end="503:40">=</operator> <name pos:start="503:42" pos:end="503:52">MV_TYPE_DMV</name></expr>;</expr_stmt>





                            <expr_stmt pos:start="509:29" pos:end="509:56"><expr pos:start="509:29" pos:end="509:55"><name pos:start="509:29" pos:end="509:47"><name pos:start="509:29" pos:end="509:29">s</name><operator pos:start="509:30" pos:end="509:31">-&gt;</operator><name pos:start="509:32" pos:end="509:38">last_mv</name><index pos:start="509:39" pos:end="509:41">[<expr pos:start="509:40" pos:end="509:40"><name pos:start="509:40" pos:end="509:40">i</name></expr>]</index><index pos:start="509:42" pos:end="509:44">[<expr pos:start="509:43" pos:end="509:43"><literal type="number" pos:start="509:43" pos:end="509:43">0</literal></expr>]</index><index pos:start="509:45" pos:end="509:47">[<expr pos:start="509:46" pos:end="509:46"><literal type="number" pos:start="509:46" pos:end="509:46">1</literal></expr>]</index></name> <operator pos:start="509:49" pos:end="509:49">=</operator> <name pos:start="509:51" pos:end="509:52">my</name><operator pos:start="509:53" pos:end="509:54">&lt;&lt;</operator><literal type="number" pos:start="509:55" pos:end="509:55">1</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="511:29" pos:end="511:56"><expr pos:start="511:29" pos:end="511:55"><name pos:start="511:29" pos:end="511:47"><name pos:start="511:29" pos:end="511:29">s</name><operator pos:start="511:30" pos:end="511:31">-&gt;</operator><name pos:start="511:32" pos:end="511:38">last_mv</name><index pos:start="511:39" pos:end="511:41">[<expr pos:start="511:40" pos:end="511:40"><name pos:start="511:40" pos:end="511:40">i</name></expr>]</index><index pos:start="511:42" pos:end="511:44">[<expr pos:start="511:43" pos:end="511:43"><literal type="number" pos:start="511:43" pos:end="511:43">1</literal></expr>]</index><index pos:start="511:45" pos:end="511:47">[<expr pos:start="511:46" pos:end="511:46"><literal type="number" pos:start="511:46" pos:end="511:46">1</literal></expr>]</index></name> <operator pos:start="511:49" pos:end="511:49">=</operator> <name pos:start="511:51" pos:end="511:52">my</name><operator pos:start="511:53" pos:end="511:54">&lt;&lt;</operator><literal type="number" pos:start="511:55" pos:end="511:55">1</literal></expr>;</expr_stmt>



                            <expr_stmt pos:start="515:29" pos:end="515:48"><expr pos:start="515:29" pos:end="515:47"><name pos:start="515:29" pos:end="515:42"><name pos:start="515:29" pos:end="515:29">s</name><operator pos:start="515:30" pos:end="515:31">-&gt;</operator><name pos:start="515:32" pos:end="515:33">mv</name><index pos:start="515:34" pos:end="515:36">[<expr pos:start="515:35" pos:end="515:35"><name pos:start="515:35" pos:end="515:35">i</name></expr>]</index><index pos:start="515:37" pos:end="515:39">[<expr pos:start="515:38" pos:end="515:38"><literal type="number" pos:start="515:38" pos:end="515:38">0</literal></expr>]</index><index pos:start="515:40" pos:end="515:42">[<expr pos:start="515:41" pos:end="515:41"><literal type="number" pos:start="515:41" pos:end="515:41">0</literal></expr>]</index></name> <operator pos:start="515:44" pos:end="515:44">=</operator> <name pos:start="515:46" pos:end="515:47">mx</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="517:29" pos:end="517:48"><expr pos:start="517:29" pos:end="517:47"><name pos:start="517:29" pos:end="517:42"><name pos:start="517:29" pos:end="517:29">s</name><operator pos:start="517:30" pos:end="517:31">-&gt;</operator><name pos:start="517:32" pos:end="517:33">mv</name><index pos:start="517:34" pos:end="517:36">[<expr pos:start="517:35" pos:end="517:35"><name pos:start="517:35" pos:end="517:35">i</name></expr>]</index><index pos:start="517:37" pos:end="517:39">[<expr pos:start="517:38" pos:end="517:38"><literal type="number" pos:start="517:38" pos:end="517:38">0</literal></expr>]</index><index pos:start="517:40" pos:end="517:42">[<expr pos:start="517:41" pos:end="517:41"><literal type="number" pos:start="517:41" pos:end="517:41">1</literal></expr>]</index></name> <operator pos:start="517:44" pos:end="517:44">=</operator> <name pos:start="517:46" pos:end="517:47">my</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="519:29" pos:end="519:48"><expr pos:start="519:29" pos:end="519:47"><name pos:start="519:29" pos:end="519:42"><name pos:start="519:29" pos:end="519:29">s</name><operator pos:start="519:30" pos:end="519:31">-&gt;</operator><name pos:start="519:32" pos:end="519:33">mv</name><index pos:start="519:34" pos:end="519:36">[<expr pos:start="519:35" pos:end="519:35"><name pos:start="519:35" pos:end="519:35">i</name></expr>]</index><index pos:start="519:37" pos:end="519:39">[<expr pos:start="519:38" pos:end="519:38"><literal type="number" pos:start="519:38" pos:end="519:38">1</literal></expr>]</index><index pos:start="519:40" pos:end="519:42">[<expr pos:start="519:41" pos:end="519:41"><literal type="number" pos:start="519:41" pos:end="519:41">0</literal></expr>]</index></name> <operator pos:start="519:44" pos:end="519:44">=</operator> <name pos:start="519:46" pos:end="519:47">mx</name></expr>;</expr_stmt><comment type="line" pos:start="519:49" pos:end="519:58">//not used</comment>

                            <expr_stmt pos:start="521:29" pos:end="521:48"><expr pos:start="521:29" pos:end="521:47"><name pos:start="521:29" pos:end="521:42"><name pos:start="521:29" pos:end="521:29">s</name><operator pos:start="521:30" pos:end="521:31">-&gt;</operator><name pos:start="521:32" pos:end="521:33">mv</name><index pos:start="521:34" pos:end="521:36">[<expr pos:start="521:35" pos:end="521:35"><name pos:start="521:35" pos:end="521:35">i</name></expr>]</index><index pos:start="521:37" pos:end="521:39">[<expr pos:start="521:38" pos:end="521:38"><literal type="number" pos:start="521:38" pos:end="521:38">1</literal></expr>]</index><index pos:start="521:40" pos:end="521:42">[<expr pos:start="521:41" pos:end="521:41"><literal type="number" pos:start="521:41" pos:end="521:41">1</literal></expr>]</index></name> <operator pos:start="521:44" pos:end="521:44">=</operator> <name pos:start="521:46" pos:end="521:47">my</name></expr>;</expr_stmt><comment type="line" pos:start="521:49" pos:end="521:58">//not used</comment>



                            <if_stmt pos:start="525:29" pos:end="567:29"><if pos:start="525:29" pos:end="549:29">if <condition pos:start="525:32" pos:end="525:67">(<expr pos:start="525:33" pos:end="525:66"><name pos:start="525:33" pos:end="525:52"><name pos:start="525:33" pos:end="525:33">s</name><operator pos:start="525:34" pos:end="525:35">-&gt;</operator><name pos:start="525:36" pos:end="525:52">picture_structure</name></name> <operator pos:start="525:54" pos:end="525:55">==</operator> <name pos:start="525:57" pos:end="525:66">PICT_FRAME</name></expr>)</condition> <block pos:start="525:69" pos:end="549:29">{<block_content pos:start="527:33" pos:end="547:86">

                                <expr_stmt pos:start="527:33" pos:end="527:78"><expr pos:start="527:33" pos:end="527:77"><name pos:start="527:33" pos:end="527:39">mb_type</name> <operator pos:start="527:41" pos:end="527:42">|=</operator> <name pos:start="527:44" pos:end="527:56">MB_TYPE_16x16</name> <operator pos:start="527:58" pos:end="527:58">|</operator> <name pos:start="527:60" pos:end="527:77">MB_TYPE_INTERLACED</name></expr>;</expr_stmt> 



                                <comment type="line" pos:start="531:33" pos:end="531:65">//m = 1 + 2 * s-&gt;top_field_first;</comment>

                                <expr_stmt pos:start="533:33" pos:end="533:63"><expr pos:start="533:33" pos:end="533:62"><name pos:start="533:33" pos:end="533:33">m</name> <operator pos:start="533:35" pos:end="533:35">=</operator> <ternary pos:start="533:37" pos:end="533:62"><condition pos:start="533:37" pos:end="533:56"><expr pos:start="533:37" pos:end="533:54"><name pos:start="533:37" pos:end="533:54"><name pos:start="533:37" pos:end="533:37">s</name><operator pos:start="533:38" pos:end="533:39">-&gt;</operator><name pos:start="533:40" pos:end="533:54">top_field_first</name></name></expr> ?</condition><then pos:start="533:58" pos:end="533:58"> <expr pos:start="533:58" pos:end="533:58"><literal type="number" pos:start="533:58" pos:end="533:58">1</literal></expr> </then><else pos:start="533:60" pos:end="533:62">: <expr pos:start="533:62" pos:end="533:62"><literal type="number" pos:start="533:62" pos:end="533:62">3</literal></expr></else></ternary></expr>;</expr_stmt>



                                <comment type="block" pos:start="537:33" pos:end="537:53">/* top -&gt; top pred */</comment>

                                <expr_stmt pos:start="539:33" pos:end="539:82"><expr pos:start="539:33" pos:end="539:81"><name pos:start="539:33" pos:end="539:46"><name pos:start="539:33" pos:end="539:33">s</name><operator pos:start="539:34" pos:end="539:35">-&gt;</operator><name pos:start="539:36" pos:end="539:37">mv</name><index pos:start="539:38" pos:end="539:40">[<expr pos:start="539:39" pos:end="539:39"><name pos:start="539:39" pos:end="539:39">i</name></expr>]</index><index pos:start="539:41" pos:end="539:43">[<expr pos:start="539:42" pos:end="539:42"><literal type="number" pos:start="539:42" pos:end="539:42">2</literal></expr>]</index><index pos:start="539:44" pos:end="539:46">[<expr pos:start="539:45" pos:end="539:45"><literal type="number" pos:start="539:45" pos:end="539:45">0</literal></expr>]</index></name> <operator pos:start="539:48" pos:end="539:48">=</operator> <operator pos:start="539:50" pos:end="539:50">(</operator><operator pos:start="539:51" pos:end="539:51">(</operator><name pos:start="539:52" pos:end="539:53">mx</name> <operator pos:start="539:55" pos:end="539:55">*</operator> <name pos:start="539:57" pos:end="539:57">m</name> <operator pos:start="539:59" pos:end="539:59">+</operator> <operator pos:start="539:61" pos:end="539:61">(</operator><name pos:start="539:62" pos:end="539:63">mx</name> <operator pos:start="539:65" pos:end="539:65">&gt;</operator> <literal type="number" pos:start="539:67" pos:end="539:67">0</literal><operator pos:start="539:68" pos:end="539:68">)</operator><operator pos:start="539:69" pos:end="539:69">)</operator> <operator pos:start="539:71" pos:end="539:72">&gt;&gt;</operator> <literal type="number" pos:start="539:74" pos:end="539:74">1</literal><operator pos:start="539:75" pos:end="539:75">)</operator> <operator pos:start="539:77" pos:end="539:77">+</operator> <name pos:start="539:79" pos:end="539:81">dmx</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="541:33" pos:end="541:86"><expr pos:start="541:33" pos:end="541:85"><name pos:start="541:33" pos:end="541:46"><name pos:start="541:33" pos:end="541:33">s</name><operator pos:start="541:34" pos:end="541:35">-&gt;</operator><name pos:start="541:36" pos:end="541:37">mv</name><index pos:start="541:38" pos:end="541:40">[<expr pos:start="541:39" pos:end="541:39"><name pos:start="541:39" pos:end="541:39">i</name></expr>]</index><index pos:start="541:41" pos:end="541:43">[<expr pos:start="541:42" pos:end="541:42"><literal type="number" pos:start="541:42" pos:end="541:42">2</literal></expr>]</index><index pos:start="541:44" pos:end="541:46">[<expr pos:start="541:45" pos:end="541:45"><literal type="number" pos:start="541:45" pos:end="541:45">1</literal></expr>]</index></name> <operator pos:start="541:48" pos:end="541:48">=</operator> <operator pos:start="541:50" pos:end="541:50">(</operator><operator pos:start="541:51" pos:end="541:51">(</operator><name pos:start="541:52" pos:end="541:53">my</name> <operator pos:start="541:55" pos:end="541:55">*</operator> <name pos:start="541:57" pos:end="541:57">m</name> <operator pos:start="541:59" pos:end="541:59">+</operator> <operator pos:start="541:61" pos:end="541:61">(</operator><name pos:start="541:62" pos:end="541:63">my</name> <operator pos:start="541:65" pos:end="541:65">&gt;</operator> <literal type="number" pos:start="541:67" pos:end="541:67">0</literal><operator pos:start="541:68" pos:end="541:68">)</operator><operator pos:start="541:69" pos:end="541:69">)</operator> <operator pos:start="541:71" pos:end="541:72">&gt;&gt;</operator> <literal type="number" pos:start="541:74" pos:end="541:74">1</literal><operator pos:start="541:75" pos:end="541:75">)</operator> <operator pos:start="541:77" pos:end="541:77">+</operator> <name pos:start="541:79" pos:end="541:81">dmy</name> <operator pos:start="541:83" pos:end="541:83">-</operator> <literal type="number" pos:start="541:85" pos:end="541:85">1</literal></expr>;</expr_stmt>

                                <expr_stmt pos:start="543:33" pos:end="543:42"><expr pos:start="543:33" pos:end="543:41"><name pos:start="543:33" pos:end="543:33">m</name> <operator pos:start="543:35" pos:end="543:35">=</operator> <literal type="number" pos:start="543:37" pos:end="543:39">4</literal> <operator pos:start="543:39" pos:end="543:39">-</operator> <name pos:start="543:41" pos:end="543:41">m</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="545:33" pos:end="545:82"><expr pos:start="545:33" pos:end="545:81"><name pos:start="545:33" pos:end="545:46"><name pos:start="545:33" pos:end="545:33">s</name><operator pos:start="545:34" pos:end="545:35">-&gt;</operator><name pos:start="545:36" pos:end="545:37">mv</name><index pos:start="545:38" pos:end="545:40">[<expr pos:start="545:39" pos:end="545:39"><name pos:start="545:39" pos:end="545:39">i</name></expr>]</index><index pos:start="545:41" pos:end="545:43">[<expr pos:start="545:42" pos:end="545:42"><literal type="number" pos:start="545:42" pos:end="545:42">3</literal></expr>]</index><index pos:start="545:44" pos:end="545:46">[<expr pos:start="545:45" pos:end="545:45"><literal type="number" pos:start="545:45" pos:end="545:45">0</literal></expr>]</index></name> <operator pos:start="545:48" pos:end="545:48">=</operator> <operator pos:start="545:50" pos:end="545:50">(</operator><operator pos:start="545:51" pos:end="545:51">(</operator><name pos:start="545:52" pos:end="545:53">mx</name> <operator pos:start="545:55" pos:end="545:55">*</operator> <name pos:start="545:57" pos:end="545:57">m</name> <operator pos:start="545:59" pos:end="545:59">+</operator> <operator pos:start="545:61" pos:end="545:61">(</operator><name pos:start="545:62" pos:end="545:63">mx</name> <operator pos:start="545:65" pos:end="545:65">&gt;</operator> <literal type="number" pos:start="545:67" pos:end="545:67">0</literal><operator pos:start="545:68" pos:end="545:68">)</operator><operator pos:start="545:69" pos:end="545:69">)</operator> <operator pos:start="545:71" pos:end="545:72">&gt;&gt;</operator> <literal type="number" pos:start="545:74" pos:end="545:74">1</literal><operator pos:start="545:75" pos:end="545:75">)</operator> <operator pos:start="545:77" pos:end="545:77">+</operator> <name pos:start="545:79" pos:end="545:81">dmx</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="547:33" pos:end="547:86"><expr pos:start="547:33" pos:end="547:85"><name pos:start="547:33" pos:end="547:46"><name pos:start="547:33" pos:end="547:33">s</name><operator pos:start="547:34" pos:end="547:35">-&gt;</operator><name pos:start="547:36" pos:end="547:37">mv</name><index pos:start="547:38" pos:end="547:40">[<expr pos:start="547:39" pos:end="547:39"><name pos:start="547:39" pos:end="547:39">i</name></expr>]</index><index pos:start="547:41" pos:end="547:43">[<expr pos:start="547:42" pos:end="547:42"><literal type="number" pos:start="547:42" pos:end="547:42">3</literal></expr>]</index><index pos:start="547:44" pos:end="547:46">[<expr pos:start="547:45" pos:end="547:45"><literal type="number" pos:start="547:45" pos:end="547:45">1</literal></expr>]</index></name> <operator pos:start="547:48" pos:end="547:48">=</operator> <operator pos:start="547:50" pos:end="547:50">(</operator><operator pos:start="547:51" pos:end="547:51">(</operator><name pos:start="547:52" pos:end="547:53">my</name> <operator pos:start="547:55" pos:end="547:55">*</operator> <name pos:start="547:57" pos:end="547:57">m</name> <operator pos:start="547:59" pos:end="547:59">+</operator> <operator pos:start="547:61" pos:end="547:61">(</operator><name pos:start="547:62" pos:end="547:63">my</name> <operator pos:start="547:65" pos:end="547:65">&gt;</operator> <literal type="number" pos:start="547:67" pos:end="547:67">0</literal><operator pos:start="547:68" pos:end="547:68">)</operator><operator pos:start="547:69" pos:end="547:69">)</operator> <operator pos:start="547:71" pos:end="547:72">&gt;&gt;</operator> <literal type="number" pos:start="547:74" pos:end="547:74">1</literal><operator pos:start="547:75" pos:end="547:75">)</operator> <operator pos:start="547:77" pos:end="547:77">+</operator> <name pos:start="547:79" pos:end="547:81">dmy</name> <operator pos:start="547:83" pos:end="547:83">+</operator> <literal type="number" pos:start="547:85" pos:end="547:85">1</literal></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="549:31" pos:end="567:29">else <block pos:start="549:36" pos:end="567:29">{<block_content pos:start="551:33" pos:end="565:53">

                                <expr_stmt pos:start="551:33" pos:end="551:57"><expr pos:start="551:33" pos:end="551:56"><name pos:start="551:33" pos:end="551:39">mb_type</name> <operator pos:start="551:41" pos:end="551:42">|=</operator> <name pos:start="551:44" pos:end="551:56">MB_TYPE_16x16</name></expr>;</expr_stmt>



                                <expr_stmt pos:start="555:33" pos:end="555:78"><expr pos:start="555:33" pos:end="555:77"><name pos:start="555:33" pos:end="555:46"><name pos:start="555:33" pos:end="555:33">s</name><operator pos:start="555:34" pos:end="555:35">-&gt;</operator><name pos:start="555:36" pos:end="555:37">mv</name><index pos:start="555:38" pos:end="555:40">[<expr pos:start="555:39" pos:end="555:39"><name pos:start="555:39" pos:end="555:39">i</name></expr>]</index><index pos:start="555:41" pos:end="555:43">[<expr pos:start="555:42" pos:end="555:42"><literal type="number" pos:start="555:42" pos:end="555:42">2</literal></expr>]</index><index pos:start="555:44" pos:end="555:46">[<expr pos:start="555:45" pos:end="555:45"><literal type="number" pos:start="555:45" pos:end="555:45">0</literal></expr>]</index></name> <operator pos:start="555:48" pos:end="555:48">=</operator> <operator pos:start="555:50" pos:end="555:50">(</operator><operator pos:start="555:51" pos:end="555:51">(</operator><name pos:start="555:52" pos:end="555:53">mx</name> <operator pos:start="555:55" pos:end="555:55">+</operator> <operator pos:start="555:57" pos:end="555:57">(</operator><name pos:start="555:58" pos:end="555:59">mx</name> <operator pos:start="555:61" pos:end="555:61">&gt;</operator> <literal type="number" pos:start="555:63" pos:end="555:63">0</literal><operator pos:start="555:64" pos:end="555:64">)</operator><operator pos:start="555:65" pos:end="555:65">)</operator> <operator pos:start="555:67" pos:end="555:68">&gt;&gt;</operator> <literal type="number" pos:start="555:70" pos:end="555:70">1</literal><operator pos:start="555:71" pos:end="555:71">)</operator> <operator pos:start="555:73" pos:end="555:73">+</operator> <name pos:start="555:75" pos:end="555:77">dmx</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="557:33" pos:end="557:78"><expr pos:start="557:33" pos:end="557:77"><name pos:start="557:33" pos:end="557:46"><name pos:start="557:33" pos:end="557:33">s</name><operator pos:start="557:34" pos:end="557:35">-&gt;</operator><name pos:start="557:36" pos:end="557:37">mv</name><index pos:start="557:38" pos:end="557:40">[<expr pos:start="557:39" pos:end="557:39"><name pos:start="557:39" pos:end="557:39">i</name></expr>]</index><index pos:start="557:41" pos:end="557:43">[<expr pos:start="557:42" pos:end="557:42"><literal type="number" pos:start="557:42" pos:end="557:42">2</literal></expr>]</index><index pos:start="557:44" pos:end="557:46">[<expr pos:start="557:45" pos:end="557:45"><literal type="number" pos:start="557:45" pos:end="557:45">1</literal></expr>]</index></name> <operator pos:start="557:48" pos:end="557:48">=</operator> <operator pos:start="557:50" pos:end="557:50">(</operator><operator pos:start="557:51" pos:end="557:51">(</operator><name pos:start="557:52" pos:end="557:53">my</name> <operator pos:start="557:55" pos:end="557:55">+</operator> <operator pos:start="557:57" pos:end="557:57">(</operator><name pos:start="557:58" pos:end="557:59">my</name> <operator pos:start="557:61" pos:end="557:61">&gt;</operator> <literal type="number" pos:start="557:63" pos:end="557:63">0</literal><operator pos:start="557:64" pos:end="557:64">)</operator><operator pos:start="557:65" pos:end="557:65">)</operator> <operator pos:start="557:67" pos:end="557:68">&gt;&gt;</operator> <literal type="number" pos:start="557:70" pos:end="557:70">1</literal><operator pos:start="557:71" pos:end="557:71">)</operator> <operator pos:start="557:73" pos:end="557:73">+</operator> <name pos:start="557:75" pos:end="557:77">dmy</name></expr>;</expr_stmt>

                                <if_stmt pos:start="559:33" pos:end="565:53"><if pos:start="559:33" pos:end="561:53">if<condition pos:start="559:35" pos:end="559:74">(<expr pos:start="559:36" pos:end="559:73"><name pos:start="559:36" pos:end="559:55"><name pos:start="559:36" pos:end="559:36">s</name><operator pos:start="559:37" pos:end="559:38">-&gt;</operator><name pos:start="559:39" pos:end="559:55">picture_structure</name></name> <operator pos:start="559:57" pos:end="559:58">==</operator> <name pos:start="559:60" pos:end="559:73">PICT_TOP_FIELD</name></expr>)</condition><block type="pseudo" pos:start="561:37" pos:end="561:53"><block_content pos:start="561:37" pos:end="561:53">

                                    <expr_stmt pos:start="561:37" pos:end="561:53"><expr pos:start="561:37" pos:end="561:52"><name pos:start="561:37" pos:end="561:50"><name pos:start="561:37" pos:end="561:37">s</name><operator pos:start="561:38" pos:end="561:39">-&gt;</operator><name pos:start="561:40" pos:end="561:41">mv</name><index pos:start="561:42" pos:end="561:44">[<expr pos:start="561:43" pos:end="561:43"><name pos:start="561:43" pos:end="561:43">i</name></expr>]</index><index pos:start="561:45" pos:end="561:47">[<expr pos:start="561:46" pos:end="561:46"><literal type="number" pos:start="561:46" pos:end="561:46">2</literal></expr>]</index><index pos:start="561:48" pos:end="561:50">[<expr pos:start="561:49" pos:end="561:49"><literal type="number" pos:start="561:49" pos:end="561:49">1</literal></expr>]</index></name><operator pos:start="561:51" pos:end="561:52">--</operator></expr>;</expr_stmt></block_content></block></if>

                                <else pos:start="563:33" pos:end="565:53">else<block type="pseudo" pos:start="565:37" pos:end="565:53"><block_content pos:start="565:37" pos:end="565:53"> 

                                    <expr_stmt pos:start="565:37" pos:end="565:53"><expr pos:start="565:37" pos:end="565:52"><name pos:start="565:37" pos:end="565:50"><name pos:start="565:37" pos:end="565:37">s</name><operator pos:start="565:38" pos:end="565:39">-&gt;</operator><name pos:start="565:40" pos:end="565:41">mv</name><index pos:start="565:42" pos:end="565:44">[<expr pos:start="565:43" pos:end="565:43"><name pos:start="565:43" pos:end="565:43">i</name></expr>]</index><index pos:start="565:45" pos:end="565:47">[<expr pos:start="565:46" pos:end="565:46"><literal type="number" pos:start="565:46" pos:end="565:46">2</literal></expr>]</index><index pos:start="565:48" pos:end="565:50">[<expr pos:start="565:49" pos:end="565:49"><literal type="number" pos:start="565:49" pos:end="565:49">1</literal></expr>]</index></name><operator pos:start="565:51" pos:end="565:52">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block>

                        <break pos:start="571:25" pos:end="571:30">break;</break>

                    <default pos:start="573:21" pos:end="573:28">default:</default>

                        <expr_stmt pos:start="575:25" pos:end="575:102"><expr pos:start="575:25" pos:end="575:101"><call pos:start="575:25" pos:end="575:101"><name pos:start="575:25" pos:end="575:30">av_log</name><argument_list pos:start="575:31" pos:end="575:101">(<argument pos:start="575:32" pos:end="575:39"><expr pos:start="575:32" pos:end="575:39"><name pos:start="575:32" pos:end="575:39"><name pos:start="575:32" pos:end="575:32">s</name><operator pos:start="575:33" pos:end="575:34">-&gt;</operator><name pos:start="575:35" pos:end="575:39">avctx</name></name></expr></argument>, <argument pos:start="575:42" pos:end="575:53"><expr pos:start="575:42" pos:end="575:53"><name pos:start="575:42" pos:end="575:53">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="575:56" pos:end="575:82"><expr pos:start="575:56" pos:end="575:82"><literal type="string" pos:start="575:56" pos:end="575:82">"00 motion_type at %d %d\n"</literal></expr></argument>, <argument pos:start="575:85" pos:end="575:91"><expr pos:start="575:85" pos:end="575:91"><name pos:start="575:85" pos:end="575:91"><name pos:start="575:85" pos:end="575:85">s</name><operator pos:start="575:86" pos:end="575:87">-&gt;</operator><name pos:start="575:88" pos:end="575:91">mb_x</name></name></expr></argument>, <argument pos:start="575:94" pos:end="575:100"><expr pos:start="575:94" pos:end="575:100"><name pos:start="575:94" pos:end="575:100"><name pos:start="575:94" pos:end="575:94">s</name><operator pos:start="575:95" pos:end="575:96">-&gt;</operator><name pos:start="575:97" pos:end="575:100">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="577:25" pos:end="577:34">return <expr pos:start="577:32" pos:end="577:33"><operator pos:start="577:32" pos:end="577:32">-</operator><literal type="number" pos:start="577:33" pos:end="577:33">1</literal></expr>;</return>

                    </block_content>}</block></switch>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        

        <expr_stmt pos:start="589:9" pos:end="589:24"><expr pos:start="589:9" pos:end="589:23"><name pos:start="589:9" pos:end="589:19"><name pos:start="589:9" pos:end="589:9">s</name><operator pos:start="589:10" pos:end="589:11">-&gt;</operator><name pos:start="589:12" pos:end="589:19">mb_intra</name></name> <operator pos:start="589:21" pos:end="589:21">=</operator> <literal type="number" pos:start="589:23" pos:end="589:23">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="593:9" pos:end="731:9"><if pos:start="593:9" pos:end="725:9">if <condition pos:start="593:12" pos:end="593:29">(<expr pos:start="593:13" pos:end="593:28"><call pos:start="593:13" pos:end="593:28"><name pos:start="593:13" pos:end="593:19">HAS_CBP</name><argument_list pos:start="593:20" pos:end="593:28">(<argument pos:start="593:21" pos:end="593:27"><expr pos:start="593:21" pos:end="593:27"><name pos:start="593:21" pos:end="593:27">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="593:31" pos:end="725:9">{<block_content pos:start="595:13" pos:end="723:13">

            <expr_stmt pos:start="595:13" pos:end="595:73"><expr pos:start="595:13" pos:end="595:72"><name pos:start="595:13" pos:end="595:15">cbp</name> <operator pos:start="595:17" pos:end="595:17">=</operator> <call pos:start="595:19" pos:end="595:72"><name pos:start="595:19" pos:end="595:26">get_vlc2</name><argument_list pos:start="595:27" pos:end="595:72">(<argument pos:start="595:28" pos:end="595:33"><expr pos:start="595:28" pos:end="595:33"><operator pos:start="595:28" pos:end="595:28">&amp;</operator><name pos:start="595:29" pos:end="595:33"><name pos:start="595:29" pos:end="595:29">s</name><operator pos:start="595:30" pos:end="595:31">-&gt;</operator><name pos:start="595:32" pos:end="595:33">gb</name></name></expr></argument>, <argument pos:start="595:36" pos:end="595:51"><expr pos:start="595:36" pos:end="595:51"><name pos:start="595:36" pos:end="595:51"><name pos:start="595:36" pos:end="595:45">mb_pat_vlc</name><operator pos:start="595:46" pos:end="595:46">.</operator><name pos:start="595:47" pos:end="595:51">table</name></name></expr></argument>, <argument pos:start="595:54" pos:end="595:68"><expr pos:start="595:54" pos:end="595:68"><name pos:start="595:54" pos:end="595:68">MB_PAT_VLC_BITS</name></expr></argument>, <argument pos:start="595:71" pos:end="595:71"><expr pos:start="595:71" pos:end="595:71"><literal type="number" pos:start="595:71" pos:end="595:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="597:13" pos:end="603:13"><if pos:start="597:13" pos:end="603:13">if <condition pos:start="597:16" pos:end="597:67">(<expr pos:start="597:17" pos:end="597:65"><name pos:start="597:17" pos:end="597:19">cbp</name> <operator pos:start="597:21" pos:end="597:21">&lt;</operator> <literal type="number" pos:start="597:23" pos:end="597:23">0</literal> <operator pos:start="597:25" pos:end="597:26">||</operator> <operator pos:start="597:28" pos:end="597:28">(</operator><operator pos:start="597:29" pos:end="597:29">(</operator><name pos:start="597:30" pos:end="597:32">cbp</name> <operator pos:start="597:34" pos:end="597:35">==</operator> <literal type="number" pos:start="597:37" pos:end="597:37">0</literal><operator pos:start="597:38" pos:end="597:38">)</operator> <operator pos:start="597:40" pos:end="597:41">&amp;&amp;</operator> <operator pos:start="597:43" pos:end="597:43">(</operator><name pos:start="597:44" pos:end="597:59"><name pos:start="597:44" pos:end="597:44">s</name><operator pos:start="597:45" pos:end="597:46">-&gt;</operator><name pos:start="597:47" pos:end="597:59">chroma_format</name></name> <operator pos:start="597:61" pos:end="597:61">&lt;</operator> <literal type="number" pos:start="597:63" pos:end="597:63">2</literal><operator pos:start="597:64" pos:end="597:64">)</operator><operator pos:start="597:65" pos:end="597:65">)</operator></expr> )</condition><block pos:start="597:68" pos:end="603:13">{<block_content pos:start="599:17" pos:end="601:26">

                <expr_stmt pos:start="599:17" pos:end="599:91"><expr pos:start="599:17" pos:end="599:90"><call pos:start="599:17" pos:end="599:90"><name pos:start="599:17" pos:end="599:22">av_log</name><argument_list pos:start="599:23" pos:end="599:90">(<argument pos:start="599:24" pos:end="599:31"><expr pos:start="599:24" pos:end="599:31"><name pos:start="599:24" pos:end="599:31"><name pos:start="599:24" pos:end="599:24">s</name><operator pos:start="599:25" pos:end="599:26">-&gt;</operator><name pos:start="599:27" pos:end="599:31">avctx</name></name></expr></argument>, <argument pos:start="599:34" pos:end="599:45"><expr pos:start="599:34" pos:end="599:45"><name pos:start="599:34" pos:end="599:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="599:48" pos:end="599:71"><expr pos:start="599:48" pos:end="599:71"><literal type="string" pos:start="599:48" pos:end="599:71">"invalid cbp at %d %d\n"</literal></expr></argument>, <argument pos:start="599:74" pos:end="599:80"><expr pos:start="599:74" pos:end="599:80"><name pos:start="599:74" pos:end="599:80"><name pos:start="599:74" pos:end="599:74">s</name><operator pos:start="599:75" pos:end="599:76">-&gt;</operator><name pos:start="599:77" pos:end="599:80">mb_x</name></name></expr></argument>, <argument pos:start="599:83" pos:end="599:89"><expr pos:start="599:83" pos:end="599:89"><name pos:start="599:83" pos:end="599:89"><name pos:start="599:83" pos:end="599:83">s</name><operator pos:start="599:84" pos:end="599:85">-&gt;</operator><name pos:start="599:86" pos:end="599:89">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="601:17" pos:end="601:26">return <expr pos:start="601:24" pos:end="601:25"><operator pos:start="601:24" pos:end="601:24">-</operator><literal type="number" pos:start="601:25" pos:end="601:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="605:13" pos:end="616:0"><if pos:start="605:13" pos:end="616:0">if<condition pos:start="605:15" pos:end="605:34">(<expr pos:start="605:16" pos:end="605:33"><name pos:start="605:16" pos:end="605:29">mb_block_count</name> <operator pos:start="605:31" pos:end="605:31">&gt;</operator> <literal type="number" pos:start="605:33" pos:end="605:33">6</literal></expr>)</condition><block pos:start="605:35" pos:end="616:0">{<block_content pos:start="607:18" pos:end="609:59">

	         <expr_stmt pos:start="607:18" pos:end="607:41"><expr pos:start="607:18" pos:end="607:40"><name pos:start="607:18" pos:end="607:20">cbp</name><operator pos:start="607:21" pos:end="607:23">&lt;&lt;=</operator> <name pos:start="607:25" pos:end="607:38">mb_block_count</name><operator pos:start="607:39" pos:end="607:39">-</operator><literal type="number" pos:start="607:40" pos:end="607:40">6</literal></expr>;</expr_stmt>

		 <expr_stmt pos:start="609:18" pos:end="609:59"><expr pos:start="609:18" pos:end="609:58"><name pos:start="609:18" pos:end="609:20">cbp</name> <operator pos:start="609:22" pos:end="609:23">|=</operator> <call pos:start="609:25" pos:end="609:58"><name pos:start="609:25" pos:end="609:32">get_bits</name><argument_list pos:start="609:33" pos:end="609:58">(<argument pos:start="609:34" pos:end="609:39"><expr pos:start="609:34" pos:end="609:39"><operator pos:start="609:34" pos:end="609:34">&amp;</operator><name pos:start="609:35" pos:end="609:39"><name pos:start="609:35" pos:end="609:35">s</name><operator pos:start="609:36" pos:end="609:37">-&gt;</operator><name pos:start="609:38" pos:end="609:39">gb</name></name></expr></argument>, <argument pos:start="609:42" pos:end="609:57"><expr pos:start="609:42" pos:end="609:57"><name pos:start="609:42" pos:end="609:55">mb_block_count</name><operator pos:start="609:56" pos:end="609:56">-</operator><literal type="number" pos:start="609:57" pos:end="609:57">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="615:1" pos:end="615:16">#<cpp:directive pos:start="615:2" pos:end="615:6">ifdef</cpp:directive> <name pos:start="615:8" pos:end="615:16">HAVE_XVMC</name></cpp:ifdef>

            <comment type="line" pos:start="617:13" pos:end="617:48">//on 1 we memcpy blocks in xvmcvideo</comment>

            <if_stmt pos:start="619:13" pos:end="632:0"><if pos:start="619:13" pos:end="632:0">if<condition pos:start="619:15" pos:end="619:47">(<expr pos:start="619:16" pos:end="619:46"><name pos:start="619:16" pos:end="619:42"><name pos:start="619:16" pos:end="619:16">s</name><operator pos:start="619:17" pos:end="619:18">-&gt;</operator><name pos:start="619:19" pos:end="619:23">avctx</name><operator pos:start="619:24" pos:end="619:25">-&gt;</operator><name pos:start="619:26" pos:end="619:42">xvmc_acceleration</name></name> <operator pos:start="619:44" pos:end="619:44">&gt;</operator> <literal type="number" pos:start="619:46" pos:end="619:46">1</literal></expr>)</condition><block pos:start="619:48" pos:end="632:0">{<block_content pos:start="621:17" pos:end="627:17">

                <expr_stmt pos:start="621:17" pos:end="621:41"><expr pos:start="621:17" pos:end="621:40"><call pos:start="621:17" pos:end="621:40"><name pos:start="621:17" pos:end="621:33">XVMC_pack_pblocks</name><argument_list pos:start="621:34" pos:end="621:40">(<argument pos:start="621:35" pos:end="621:35"><expr pos:start="621:35" pos:end="621:35"><name pos:start="621:35" pos:end="621:35">s</name></expr></argument>,<argument pos:start="621:37" pos:end="621:39"><expr pos:start="621:37" pos:end="621:39"><name pos:start="621:37" pos:end="621:39">cbp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="623:17" pos:end="627:17"><if pos:start="623:17" pos:end="627:17">if<condition pos:start="623:19" pos:end="623:30">(<expr pos:start="623:20" pos:end="623:29"><name pos:start="623:20" pos:end="623:29"><name pos:start="623:20" pos:end="623:20">s</name><operator pos:start="623:21" pos:end="623:22">-&gt;</operator><name pos:start="623:23" pos:end="623:29">swap_uv</name></name></expr>)</condition><block pos:start="623:31" pos:end="627:17">{<block_content pos:start="625:21" pos:end="625:35">

                    <expr_stmt pos:start="625:21" pos:end="625:35"><expr pos:start="625:21" pos:end="625:34"><call pos:start="625:21" pos:end="625:34"><name pos:start="625:21" pos:end="625:31">exchange_uv</name><argument_list pos:start="625:32" pos:end="625:34">(<argument pos:start="625:33" pos:end="625:33"><expr pos:start="625:33" pos:end="625:33"><name pos:start="625:33" pos:end="625:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>    

<cpp:endif pos:start="631:1" pos:end="631:6">#<cpp:directive pos:start="631:2" pos:end="631:6">endif</cpp:directive></cpp:endif>



            <if_stmt pos:start="635:13" pos:end="723:13"><if pos:start="635:13" pos:end="681:13">if <condition pos:start="635:16" pos:end="635:51">(<expr pos:start="635:17" pos:end="635:50"><name pos:start="635:17" pos:end="635:27"><name pos:start="635:17" pos:end="635:17">s</name><operator pos:start="635:18" pos:end="635:19">-&gt;</operator><name pos:start="635:20" pos:end="635:27">codec_id</name></name> <operator pos:start="635:29" pos:end="635:30">==</operator> <name pos:start="635:32" pos:end="635:50">CODEC_ID_MPEG2VIDEO</name></expr>)</condition> <block pos:start="635:53" pos:end="681:13">{<block_content pos:start="637:17" pos:end="679:17">

                <if_stmt pos:start="637:17" pos:end="679:17"><if pos:start="637:17" pos:end="655:17">if<condition pos:start="637:19" pos:end="637:48">(<expr pos:start="637:20" pos:end="637:47"><name pos:start="637:20" pos:end="637:28"><name pos:start="637:20" pos:end="637:20">s</name><operator pos:start="637:21" pos:end="637:22">-&gt;</operator><name pos:start="637:23" pos:end="637:28">flags2</name></name> <operator pos:start="637:30" pos:end="637:30">&amp;</operator> <name pos:start="637:32" pos:end="637:47">CODEC_FLAG2_FAST</name></expr>)</condition><block pos:start="637:49" pos:end="655:17">{<block_content pos:start="639:21" pos:end="653:21">

                    <for pos:start="639:21" pos:end="653:21">for<control pos:start="639:24" pos:end="639:36">(<init pos:start="639:25" pos:end="639:28"><expr pos:start="639:25" pos:end="639:27"><name pos:start="639:25" pos:end="639:25">i</name><operator pos:start="639:26" pos:end="639:26">=</operator><literal type="number" pos:start="639:27" pos:end="639:27">0</literal></expr>;</init><condition pos:start="639:29" pos:end="639:32"><expr pos:start="639:29" pos:end="639:31"><name pos:start="639:29" pos:end="639:29">i</name><operator pos:start="639:30" pos:end="639:30">&lt;</operator><literal type="number" pos:start="639:31" pos:end="639:31">6</literal></expr>;</condition><incr pos:start="639:33" pos:end="639:35"><expr pos:start="639:33" pos:end="639:35"><name pos:start="639:33" pos:end="639:33">i</name><operator pos:start="639:34" pos:end="639:35">++</operator></expr></incr>)</control> <block pos:start="639:38" pos:end="653:21">{<block_content pos:start="641:25" pos:end="651:33">

                        <if_stmt pos:start="641:25" pos:end="649:25"><if pos:start="641:25" pos:end="645:25">if<condition pos:start="641:27" pos:end="641:36">(<expr pos:start="641:28" pos:end="641:35"><name pos:start="641:28" pos:end="641:30">cbp</name> <operator pos:start="641:32" pos:end="641:32">&amp;</operator> <literal type="number" pos:start="641:34" pos:end="641:35">32</literal></expr>)</condition> <block pos:start="641:38" pos:end="645:25">{<block_content pos:start="643:29" pos:end="643:83">

                            <expr_stmt pos:start="643:29" pos:end="643:83"><expr pos:start="643:29" pos:end="643:82"><call pos:start="643:29" pos:end="643:82"><name pos:start="643:29" pos:end="643:61">mpeg2_fast_decode_block_non_intra</name><argument_list pos:start="643:62" pos:end="643:82">(<argument pos:start="643:63" pos:end="643:63"><expr pos:start="643:63" pos:end="643:63"><name pos:start="643:63" pos:end="643:63">s</name></expr></argument>, <argument pos:start="643:66" pos:end="643:78"><expr pos:start="643:66" pos:end="643:78"><name pos:start="643:66" pos:end="643:78"><name pos:start="643:66" pos:end="643:66">s</name><operator pos:start="643:67" pos:end="643:68">-&gt;</operator><name pos:start="643:69" pos:end="643:75">pblocks</name><index pos:start="643:76" pos:end="643:78">[<expr pos:start="643:77" pos:end="643:77"><name pos:start="643:77" pos:end="643:77">i</name></expr>]</index></name></expr></argument>, <argument pos:start="643:81" pos:end="643:81"><expr pos:start="643:81" pos:end="643:81"><name pos:start="643:81" pos:end="643:81">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="645:27" pos:end="649:25">else <block pos:start="645:32" pos:end="649:25">{<block_content pos:start="647:29" pos:end="647:56">

                            <expr_stmt pos:start="647:29" pos:end="647:56"><expr pos:start="647:29" pos:end="647:55"><name pos:start="647:29" pos:end="647:50"><name pos:start="647:29" pos:end="647:29">s</name><operator pos:start="647:30" pos:end="647:31">-&gt;</operator><name pos:start="647:32" pos:end="647:47">block_last_index</name><index pos:start="647:48" pos:end="647:50">[<expr pos:start="647:49" pos:end="647:49"><name pos:start="647:49" pos:end="647:49">i</name></expr>]</index></name> <operator pos:start="647:52" pos:end="647:52">=</operator> <operator pos:start="647:54" pos:end="647:54">-</operator><literal type="number" pos:start="647:55" pos:end="647:55">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="651:25" pos:end="651:33"><expr pos:start="651:25" pos:end="651:32"><name pos:start="651:25" pos:end="651:27">cbp</name><operator pos:start="651:28" pos:end="651:29">+=</operator><name pos:start="651:30" pos:end="651:32">cbp</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if><else pos:start="655:18" pos:end="679:17">else<block pos:start="655:22" pos:end="679:17">{<block_content pos:start="657:21" pos:end="677:21">

                    <expr_stmt pos:start="657:21" pos:end="657:45"><expr pos:start="657:21" pos:end="657:44"><name pos:start="657:21" pos:end="657:23">cbp</name><operator pos:start="657:24" pos:end="657:26">&lt;&lt;=</operator> <literal type="number" pos:start="657:28" pos:end="657:30">12</literal><operator pos:start="657:30" pos:end="657:30">-</operator><name pos:start="657:31" pos:end="657:44">mb_block_count</name></expr>;</expr_stmt>

    

                    <for pos:start="661:21" pos:end="677:21">for<control pos:start="661:24" pos:end="661:49">(<init pos:start="661:25" pos:end="661:28"><expr pos:start="661:25" pos:end="661:27"><name pos:start="661:25" pos:end="661:25">i</name><operator pos:start="661:26" pos:end="661:26">=</operator><literal type="number" pos:start="661:27" pos:end="661:27">0</literal></expr>;</init><condition pos:start="661:29" pos:end="661:45"><expr pos:start="661:29" pos:end="661:44"><name pos:start="661:29" pos:end="661:29">i</name><operator pos:start="661:30" pos:end="661:30">&lt;</operator><name pos:start="661:31" pos:end="661:44">mb_block_count</name></expr>;</condition><incr pos:start="661:46" pos:end="661:48"><expr pos:start="661:46" pos:end="661:48"><name pos:start="661:46" pos:end="661:46">i</name><operator pos:start="661:47" pos:end="661:48">++</operator></expr></incr>)</control> <block pos:start="661:51" pos:end="677:21">{<block_content pos:start="663:25" pos:end="675:33">

                        <if_stmt pos:start="663:25" pos:end="673:25"><if pos:start="663:25" pos:end="669:25">if <condition pos:start="663:28" pos:end="663:44">( <expr pos:start="663:30" pos:end="663:42"><name pos:start="663:30" pos:end="663:32">cbp</name> <operator pos:start="663:34" pos:end="663:34">&amp;</operator> <operator pos:start="663:36" pos:end="663:36">(</operator><literal type="number" pos:start="663:37" pos:end="663:37">1</literal><operator pos:start="663:38" pos:end="663:39">&lt;&lt;</operator><literal type="number" pos:start="663:40" pos:end="663:41">11</literal><operator pos:start="663:42" pos:end="663:42">)</operator></expr> )</condition> <block pos:start="663:46" pos:end="669:25">{<block_content pos:start="665:29" pos:end="667:42">

                            <if_stmt pos:start="665:29" pos:end="667:42"><if pos:start="665:29" pos:end="667:42">if <condition pos:start="665:32" pos:end="665:86">(<expr pos:start="665:33" pos:end="665:85"><call pos:start="665:33" pos:end="665:81"><name pos:start="665:33" pos:end="665:60">mpeg2_decode_block_non_intra</name><argument_list pos:start="665:61" pos:end="665:81">(<argument pos:start="665:62" pos:end="665:62"><expr pos:start="665:62" pos:end="665:62"><name pos:start="665:62" pos:end="665:62">s</name></expr></argument>, <argument pos:start="665:65" pos:end="665:77"><expr pos:start="665:65" pos:end="665:77"><name pos:start="665:65" pos:end="665:77"><name pos:start="665:65" pos:end="665:65">s</name><operator pos:start="665:66" pos:end="665:67">-&gt;</operator><name pos:start="665:68" pos:end="665:74">pblocks</name><index pos:start="665:75" pos:end="665:77">[<expr pos:start="665:76" pos:end="665:76"><name pos:start="665:76" pos:end="665:76">i</name></expr>]</index></name></expr></argument>, <argument pos:start="665:80" pos:end="665:80"><expr pos:start="665:80" pos:end="665:80"><name pos:start="665:80" pos:end="665:80">i</name></expr></argument>)</argument_list></call> <operator pos:start="665:83" pos:end="665:83">&lt;</operator> <literal type="number" pos:start="665:85" pos:end="665:85">0</literal></expr>)</condition><block type="pseudo" pos:start="667:33" pos:end="667:42"><block_content pos:start="667:33" pos:end="667:42">

                                <return pos:start="667:33" pos:end="667:42">return <expr pos:start="667:40" pos:end="667:41"><operator pos:start="667:40" pos:end="667:40">-</operator><literal type="number" pos:start="667:41" pos:end="667:41">1</literal></expr>;</return></block_content></block></if></if_stmt>

                        </block_content>}</block></if> <else pos:start="669:27" pos:end="673:25">else <block pos:start="669:32" pos:end="673:25">{<block_content pos:start="671:29" pos:end="671:56">

                            <expr_stmt pos:start="671:29" pos:end="671:56"><expr pos:start="671:29" pos:end="671:55"><name pos:start="671:29" pos:end="671:50"><name pos:start="671:29" pos:end="671:29">s</name><operator pos:start="671:30" pos:end="671:31">-&gt;</operator><name pos:start="671:32" pos:end="671:47">block_last_index</name><index pos:start="671:48" pos:end="671:50">[<expr pos:start="671:49" pos:end="671:49"><name pos:start="671:49" pos:end="671:49">i</name></expr>]</index></name> <operator pos:start="671:52" pos:end="671:52">=</operator> <operator pos:start="671:54" pos:end="671:54">-</operator><literal type="number" pos:start="671:55" pos:end="671:55">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="675:25" pos:end="675:33"><expr pos:start="675:25" pos:end="675:32"><name pos:start="675:25" pos:end="675:27">cbp</name><operator pos:start="675:28" pos:end="675:29">+=</operator><name pos:start="675:30" pos:end="675:32">cbp</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="681:15" pos:end="723:13">else <block pos:start="681:20" pos:end="723:13">{<block_content pos:start="683:17" pos:end="721:17">

                <if_stmt pos:start="683:17" pos:end="721:17"><if pos:start="683:17" pos:end="701:17">if<condition pos:start="683:19" pos:end="683:48">(<expr pos:start="683:20" pos:end="683:47"><name pos:start="683:20" pos:end="683:28"><name pos:start="683:20" pos:end="683:20">s</name><operator pos:start="683:21" pos:end="683:22">-&gt;</operator><name pos:start="683:23" pos:end="683:28">flags2</name></name> <operator pos:start="683:30" pos:end="683:30">&amp;</operator> <name pos:start="683:32" pos:end="683:47">CODEC_FLAG2_FAST</name></expr>)</condition><block pos:start="683:49" pos:end="701:17">{<block_content pos:start="685:21" pos:end="699:21">

                    <for pos:start="685:21" pos:end="699:21">for<control pos:start="685:24" pos:end="685:36">(<init pos:start="685:25" pos:end="685:28"><expr pos:start="685:25" pos:end="685:27"><name pos:start="685:25" pos:end="685:25">i</name><operator pos:start="685:26" pos:end="685:26">=</operator><literal type="number" pos:start="685:27" pos:end="685:27">0</literal></expr>;</init><condition pos:start="685:29" pos:end="685:32"><expr pos:start="685:29" pos:end="685:31"><name pos:start="685:29" pos:end="685:29">i</name><operator pos:start="685:30" pos:end="685:30">&lt;</operator><literal type="number" pos:start="685:31" pos:end="685:31">6</literal></expr>;</condition><incr pos:start="685:33" pos:end="685:35"><expr pos:start="685:33" pos:end="685:35"><name pos:start="685:33" pos:end="685:33">i</name><operator pos:start="685:34" pos:end="685:35">++</operator></expr></incr>)</control> <block pos:start="685:38" pos:end="699:21">{<block_content pos:start="687:25" pos:end="697:33">

                        <if_stmt pos:start="687:25" pos:end="695:25"><if pos:start="687:25" pos:end="691:25">if <condition pos:start="687:28" pos:end="687:37">(<expr pos:start="687:29" pos:end="687:36"><name pos:start="687:29" pos:end="687:31">cbp</name> <operator pos:start="687:33" pos:end="687:33">&amp;</operator> <literal type="number" pos:start="687:35" pos:end="687:36">32</literal></expr>)</condition> <block pos:start="687:39" pos:end="691:25">{<block_content pos:start="689:29" pos:end="689:79">

                            <expr_stmt pos:start="689:29" pos:end="689:79"><expr pos:start="689:29" pos:end="689:78"><call pos:start="689:29" pos:end="689:78"><name pos:start="689:29" pos:end="689:57">mpeg1_fast_decode_block_inter</name><argument_list pos:start="689:58" pos:end="689:78">(<argument pos:start="689:59" pos:end="689:59"><expr pos:start="689:59" pos:end="689:59"><name pos:start="689:59" pos:end="689:59">s</name></expr></argument>, <argument pos:start="689:62" pos:end="689:74"><expr pos:start="689:62" pos:end="689:74"><name pos:start="689:62" pos:end="689:74"><name pos:start="689:62" pos:end="689:62">s</name><operator pos:start="689:63" pos:end="689:64">-&gt;</operator><name pos:start="689:65" pos:end="689:71">pblocks</name><index pos:start="689:72" pos:end="689:74">[<expr pos:start="689:73" pos:end="689:73"><name pos:start="689:73" pos:end="689:73">i</name></expr>]</index></name></expr></argument>, <argument pos:start="689:77" pos:end="689:77"><expr pos:start="689:77" pos:end="689:77"><name pos:start="689:77" pos:end="689:77">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="691:27" pos:end="695:25">else <block pos:start="691:32" pos:end="695:25">{<block_content pos:start="693:29" pos:end="693:56">

                            <expr_stmt pos:start="693:29" pos:end="693:56"><expr pos:start="693:29" pos:end="693:55"><name pos:start="693:29" pos:end="693:50"><name pos:start="693:29" pos:end="693:29">s</name><operator pos:start="693:30" pos:end="693:31">-&gt;</operator><name pos:start="693:32" pos:end="693:47">block_last_index</name><index pos:start="693:48" pos:end="693:50">[<expr pos:start="693:49" pos:end="693:49"><name pos:start="693:49" pos:end="693:49">i</name></expr>]</index></name> <operator pos:start="693:52" pos:end="693:52">=</operator> <operator pos:start="693:54" pos:end="693:54">-</operator><literal type="number" pos:start="693:55" pos:end="693:55">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="697:25" pos:end="697:33"><expr pos:start="697:25" pos:end="697:32"><name pos:start="697:25" pos:end="697:27">cbp</name><operator pos:start="697:28" pos:end="697:29">+=</operator><name pos:start="697:30" pos:end="697:32">cbp</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if><else pos:start="701:18" pos:end="721:17">else<block pos:start="701:22" pos:end="721:17">{<block_content pos:start="703:21" pos:end="719:21">

                    <for pos:start="703:21" pos:end="719:21">for<control pos:start="703:24" pos:end="703:36">(<init pos:start="703:25" pos:end="703:28"><expr pos:start="703:25" pos:end="703:27"><name pos:start="703:25" pos:end="703:25">i</name><operator pos:start="703:26" pos:end="703:26">=</operator><literal type="number" pos:start="703:27" pos:end="703:27">0</literal></expr>;</init><condition pos:start="703:29" pos:end="703:32"><expr pos:start="703:29" pos:end="703:31"><name pos:start="703:29" pos:end="703:29">i</name><operator pos:start="703:30" pos:end="703:30">&lt;</operator><literal type="number" pos:start="703:31" pos:end="703:31">6</literal></expr>;</condition><incr pos:start="703:33" pos:end="703:35"><expr pos:start="703:33" pos:end="703:35"><name pos:start="703:33" pos:end="703:33">i</name><operator pos:start="703:34" pos:end="703:35">++</operator></expr></incr>)</control> <block pos:start="703:38" pos:end="719:21">{<block_content pos:start="705:25" pos:end="717:33">

                        <if_stmt pos:start="705:25" pos:end="715:25"><if pos:start="705:25" pos:end="711:25">if <condition pos:start="705:28" pos:end="705:37">(<expr pos:start="705:29" pos:end="705:36"><name pos:start="705:29" pos:end="705:31">cbp</name> <operator pos:start="705:33" pos:end="705:33">&amp;</operator> <literal type="number" pos:start="705:35" pos:end="705:36">32</literal></expr>)</condition> <block pos:start="705:39" pos:end="711:25">{<block_content pos:start="707:29" pos:end="709:42">

                            <if_stmt pos:start="707:29" pos:end="709:42"><if pos:start="707:29" pos:end="709:42">if <condition pos:start="707:32" pos:end="707:82">(<expr pos:start="707:33" pos:end="707:81"><call pos:start="707:33" pos:end="707:77"><name pos:start="707:33" pos:end="707:56">mpeg1_decode_block_inter</name><argument_list pos:start="707:57" pos:end="707:77">(<argument pos:start="707:58" pos:end="707:58"><expr pos:start="707:58" pos:end="707:58"><name pos:start="707:58" pos:end="707:58">s</name></expr></argument>, <argument pos:start="707:61" pos:end="707:73"><expr pos:start="707:61" pos:end="707:73"><name pos:start="707:61" pos:end="707:73"><name pos:start="707:61" pos:end="707:61">s</name><operator pos:start="707:62" pos:end="707:63">-&gt;</operator><name pos:start="707:64" pos:end="707:70">pblocks</name><index pos:start="707:71" pos:end="707:73">[<expr pos:start="707:72" pos:end="707:72"><name pos:start="707:72" pos:end="707:72">i</name></expr>]</index></name></expr></argument>, <argument pos:start="707:76" pos:end="707:76"><expr pos:start="707:76" pos:end="707:76"><name pos:start="707:76" pos:end="707:76">i</name></expr></argument>)</argument_list></call> <operator pos:start="707:79" pos:end="707:79">&lt;</operator> <literal type="number" pos:start="707:81" pos:end="707:81">0</literal></expr>)</condition><block type="pseudo" pos:start="709:33" pos:end="709:42"><block_content pos:start="709:33" pos:end="709:42">

                                <return pos:start="709:33" pos:end="709:42">return <expr pos:start="709:40" pos:end="709:41"><operator pos:start="709:40" pos:end="709:40">-</operator><literal type="number" pos:start="709:41" pos:end="709:41">1</literal></expr>;</return></block_content></block></if></if_stmt>

                        </block_content>}</block></if> <else pos:start="711:27" pos:end="715:25">else <block pos:start="711:32" pos:end="715:25">{<block_content pos:start="713:29" pos:end="713:56">

                            <expr_stmt pos:start="713:29" pos:end="713:56"><expr pos:start="713:29" pos:end="713:55"><name pos:start="713:29" pos:end="713:50"><name pos:start="713:29" pos:end="713:29">s</name><operator pos:start="713:30" pos:end="713:31">-&gt;</operator><name pos:start="713:32" pos:end="713:47">block_last_index</name><index pos:start="713:48" pos:end="713:50">[<expr pos:start="713:49" pos:end="713:49"><name pos:start="713:49" pos:end="713:49">i</name></expr>]</index></name> <operator pos:start="713:52" pos:end="713:52">=</operator> <operator pos:start="713:54" pos:end="713:54">-</operator><literal type="number" pos:start="713:55" pos:end="713:55">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="717:25" pos:end="717:33"><expr pos:start="717:25" pos:end="717:32"><name pos:start="717:25" pos:end="717:27">cbp</name><operator pos:start="717:28" pos:end="717:29">+=</operator><name pos:start="717:30" pos:end="717:32">cbp</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><else pos:start="725:10" pos:end="731:9">else<block pos:start="725:14" pos:end="731:9">{<block_content pos:start="727:13" pos:end="729:44">

            <for pos:start="727:13" pos:end="729:44">for<control pos:start="727:16" pos:end="727:28">(<init pos:start="727:17" pos:end="727:20"><expr pos:start="727:17" pos:end="727:19"><name pos:start="727:17" pos:end="727:17">i</name><operator pos:start="727:18" pos:end="727:18">=</operator><literal type="number" pos:start="727:19" pos:end="727:19">0</literal></expr>;</init><condition pos:start="727:21" pos:end="727:24"><expr pos:start="727:21" pos:end="727:23"><name pos:start="727:21" pos:end="727:21">i</name><operator pos:start="727:22" pos:end="727:22">&lt;</operator><literal type="number" pos:start="727:23" pos:end="727:23">6</literal></expr>;</condition><incr pos:start="727:25" pos:end="727:27"><expr pos:start="727:25" pos:end="727:27"><name pos:start="727:25" pos:end="727:25">i</name><operator pos:start="727:26" pos:end="727:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="729:17" pos:end="729:44"><block_content pos:start="729:17" pos:end="729:44">

                <expr_stmt pos:start="729:17" pos:end="729:44"><expr pos:start="729:17" pos:end="729:43"><name pos:start="729:17" pos:end="729:38"><name pos:start="729:17" pos:end="729:17">s</name><operator pos:start="729:18" pos:end="729:19">-&gt;</operator><name pos:start="729:20" pos:end="729:35">block_last_index</name><index pos:start="729:36" pos:end="729:38">[<expr pos:start="729:37" pos:end="729:37"><name pos:start="729:37" pos:end="729:37">i</name></expr>]</index></name> <operator pos:start="729:40" pos:end="729:40">=</operator> <operator pos:start="729:42" pos:end="729:42">-</operator><literal type="number" pos:start="729:43" pos:end="729:43">1</literal></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="737:5" pos:end="737:74"><expr pos:start="737:5" pos:end="737:73"><name pos:start="737:5" pos:end="737:64"><name pos:start="737:5" pos:end="737:5">s</name><operator pos:start="737:6" pos:end="737:7">-&gt;</operator><name pos:start="737:8" pos:end="737:22">current_picture</name><operator pos:start="737:23" pos:end="737:23">.</operator><name pos:start="737:24" pos:end="737:30">mb_type</name><index pos:start="737:31" pos:end="737:64">[ <expr pos:start="737:33" pos:end="737:62"><name pos:start="737:33" pos:end="737:39"><name pos:start="737:33" pos:end="737:33">s</name><operator pos:start="737:34" pos:end="737:35">-&gt;</operator><name pos:start="737:36" pos:end="737:39">mb_x</name></name> <operator pos:start="737:41" pos:end="737:41">+</operator> <name pos:start="737:43" pos:end="737:49"><name pos:start="737:43" pos:end="737:43">s</name><operator pos:start="737:44" pos:end="737:45">-&gt;</operator><name pos:start="737:46" pos:end="737:49">mb_y</name></name><operator pos:start="737:50" pos:end="737:50">*</operator><name pos:start="737:51" pos:end="737:62"><name pos:start="737:51" pos:end="737:51">s</name><operator pos:start="737:52" pos:end="737:53">-&gt;</operator><name pos:start="737:54" pos:end="737:62">mb_stride</name></name></expr> ]</index></name><operator pos:start="737:65" pos:end="737:65">=</operator> <name pos:start="737:67" pos:end="737:73">mb_type</name></expr>;</expr_stmt>



    <return pos:start="741:5" pos:end="741:13">return <expr pos:start="741:12" pos:end="741:12"><literal type="number" pos:start="741:12" pos:end="741:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
