<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21295.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">update_size</name><parameter_list pos:start="1:23" pos:end="1:81">(<parameter pos:start="1:24" pos:end="1:42"><decl pos:start="1:24" pos:end="1:42"><type pos:start="1:24" pos:end="1:42"><name pos:start="1:24" pos:end="1:37">AVCodecContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">ctx</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:49"><decl pos:start="1:45" pos:end="1:49"><type pos:start="1:45" pos:end="1:49"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:49">w</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:56"><decl pos:start="1:52" pos:end="1:56"><type pos:start="1:52" pos:end="1:56"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:56">h</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:80"><decl pos:start="1:59" pos:end="1:80"><type pos:start="1:59" pos:end="1:80"><name pos:start="1:59" pos:end="1:76"><name pos:start="1:59" pos:end="1:62">enum</name> <name pos:start="1:64" pos:end="1:76">AVPixelFormat</name></name></type> <name pos:start="1:78" pos:end="1:80">fmt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VP9Context</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:34">= <expr pos:start="5:21" pos:end="5:34"><name pos:start="5:21" pos:end="5:34"><name pos:start="5:21" pos:end="5:23">ctx</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:21">bytesperpixel</name> <init pos:start="9:23" pos:end="9:40">= <expr pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:40">bytesperpixel</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><call pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:14">av_assert0</name><argument_list pos:start="13:15" pos:end="13:30">(<argument pos:start="13:16" pos:end="13:29"><expr pos:start="13:16" pos:end="13:29"><name pos:start="13:16" pos:end="13:16">w</name> <operator pos:start="13:18" pos:end="13:18">&gt;</operator> <literal type="number" pos:start="13:20" pos:end="13:20">0</literal> <operator pos:start="13:22" pos:end="13:23">&amp;&amp;</operator> <name pos:start="13:25" pos:end="13:25">h</name> <operator pos:start="13:27" pos:end="13:27">&gt;</operator> <literal type="number" pos:start="13:29" pos:end="13:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:92">(<expr pos:start="17:9" pos:end="17:91"><name pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:26">intra_pred_data</name><index pos:start="17:27" pos:end="17:29">[<expr pos:start="17:28" pos:end="17:28"><literal type="number" pos:start="17:28" pos:end="17:28">0</literal></expr>]</index></name> <operator pos:start="17:31" pos:end="17:32">&amp;&amp;</operator> <name pos:start="17:34" pos:end="17:34">w</name> <operator pos:start="17:36" pos:end="17:37">==</operator> <name pos:start="17:39" pos:end="17:48"><name pos:start="17:39" pos:end="17:41">ctx</name><operator pos:start="17:42" pos:end="17:43">-&gt;</operator><name pos:start="17:44" pos:end="17:48">width</name></name> <operator pos:start="17:50" pos:end="17:51">&amp;&amp;</operator> <name pos:start="17:53" pos:end="17:53">h</name> <operator pos:start="17:55" pos:end="17:56">==</operator> <name pos:start="17:58" pos:end="17:68"><name pos:start="17:58" pos:end="17:60">ctx</name><operator pos:start="17:61" pos:end="17:62">-&gt;</operator><name pos:start="17:63" pos:end="17:68">height</name></name> <operator pos:start="17:70" pos:end="17:71">&amp;&amp;</operator> <name pos:start="17:73" pos:end="17:84"><name pos:start="17:73" pos:end="17:75">ctx</name><operator pos:start="17:76" pos:end="17:77">-&gt;</operator><name pos:start="17:78" pos:end="17:84">pix_fmt</name></name> <operator pos:start="17:86" pos:end="17:87">==</operator> <name pos:start="17:89" pos:end="17:91">fmt</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:7">ctx</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:14">width</name></name>   <operator pos:start="23:18" pos:end="23:18">=</operator> <name pos:start="23:20" pos:end="23:20">w</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:7">ctx</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:15">height</name></name>  <operator pos:start="25:18" pos:end="25:18">=</operator> <name pos:start="25:20" pos:end="25:20">h</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:23"><expr pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:7">ctx</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:16">pix_fmt</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <name pos:start="27:20" pos:end="27:22">fmt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:14">sb_cols</name></name>   <operator pos:start="29:18" pos:end="29:18">=</operator> <operator pos:start="29:20" pos:end="29:20">(</operator><name pos:start="29:21" pos:end="29:21">w</name> <operator pos:start="29:23" pos:end="29:23">+</operator> <literal type="number" pos:start="29:25" pos:end="29:26">63</literal><operator pos:start="29:27" pos:end="29:27">)</operator> <operator pos:start="29:29" pos:end="29:30">&gt;&gt;</operator> <literal type="number" pos:start="29:32" pos:end="29:32">6</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:14">sb_rows</name></name>   <operator pos:start="31:18" pos:end="31:18">=</operator> <operator pos:start="31:20" pos:end="31:20">(</operator><name pos:start="31:21" pos:end="31:21">h</name> <operator pos:start="31:23" pos:end="31:23">+</operator> <literal type="number" pos:start="31:25" pos:end="31:26">63</literal><operator pos:start="31:27" pos:end="31:27">)</operator> <operator pos:start="31:29" pos:end="31:30">&gt;&gt;</operator> <literal type="number" pos:start="31:32" pos:end="31:32">6</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:32"><expr pos:start="33:5" pos:end="33:31"><name pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:11">cols</name></name>      <operator pos:start="33:18" pos:end="33:18">=</operator> <operator pos:start="33:20" pos:end="33:20">(</operator><name pos:start="33:21" pos:end="33:21">w</name> <operator pos:start="33:23" pos:end="33:23">+</operator> <literal type="number" pos:start="33:25" pos:end="33:25">7</literal><operator pos:start="33:26" pos:end="33:26">)</operator> <operator pos:start="33:28" pos:end="33:29">&gt;&gt;</operator> <literal type="number" pos:start="33:31" pos:end="33:31">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="40:0"><expr pos:start="35:5" pos:end="35:31"><name pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:11">rows</name></name>      <operator pos:start="35:18" pos:end="35:18">=</operator> <operator pos:start="35:20" pos:end="35:20">(</operator><name pos:start="35:21" pos:end="35:21">h</name> <operator pos:start="35:23" pos:end="35:23">+</operator> <literal type="number" pos:start="35:25" pos:end="35:25">7</literal><operator pos:start="35:26" pos:end="35:26">)</operator> <operator pos:start="35:28" pos:end="35:29">&gt;&gt;</operator> <literal type="number" pos:start="35:31" pos:end="35:31">3</literal></expr>;</expr_stmt>



<cpp:define pos:start="39:1" pos:end="39:81">#<cpp:directive pos:start="39:2" pos:end="39:7">define</cpp:directive> <cpp:macro pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:14">assign</name><parameter_list pos:start="39:15" pos:end="39:28">(<parameter pos:start="39:16" pos:end="39:18"><type pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">var</name></type></parameter>, <parameter pos:start="39:21" pos:end="39:24"><type pos:start="39:21" pos:end="39:24"><name pos:start="39:21" pos:end="39:24">type</name></type></parameter>, <parameter pos:start="39:27" pos:end="39:27"><type pos:start="39:27" pos:end="39:27"><name pos:start="39:27" pos:end="39:27">n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="39:30" pos:end="39:81">var = (type) p; p += s-&gt;sb_cols * (n) * sizeof(*var)</cpp:value></cpp:define>

    <expr_stmt pos:start="41:5" pos:end="41:37"><expr pos:start="41:5" pos:end="41:36"><call pos:start="41:5" pos:end="41:36"><name pos:start="41:5" pos:end="41:12">av_freep</name><argument_list pos:start="41:13" pos:end="41:36">(<argument pos:start="41:14" pos:end="41:35"><expr pos:start="41:14" pos:end="41:35"><operator pos:start="41:14" pos:end="41:14">&amp;</operator><name pos:start="41:15" pos:end="41:35"><name pos:start="41:15" pos:end="41:15">s</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:32">intra_pred_data</name><index pos:start="41:33" pos:end="41:35">[<expr pos:start="41:34" pos:end="41:34"><literal type="number" pos:start="41:34" pos:end="41:34">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="43:5" pos:end="43:79">// FIXME we slightly over-allocate here for subsampled chroma, but a little</comment>

    <comment type="line" pos:start="45:5" pos:end="45:53">// bit of padding shouldn't affect performance...</comment>

    <expr_stmt pos:start="47:5" pos:end="49:84"><expr pos:start="47:5" pos:end="49:83"><name pos:start="47:5" pos:end="47:5">p</name> <operator pos:start="47:7" pos:end="47:7">=</operator> <call pos:start="47:9" pos:end="49:83"><name pos:start="47:9" pos:end="47:17">av_malloc</name><argument_list pos:start="47:18" pos:end="49:83">(<argument pos:start="47:19" pos:end="49:82"><expr pos:start="47:19" pos:end="49:82"><name pos:start="47:19" pos:end="47:28"><name pos:start="47:19" pos:end="47:19">s</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:28">sb_cols</name></name> <operator pos:start="47:30" pos:end="47:30">*</operator> <operator pos:start="47:32" pos:end="47:32">(</operator><literal type="number" pos:start="47:33" pos:end="47:37">128</literal> <operator pos:start="47:37" pos:end="47:37">+</operator> <literal type="number" pos:start="47:39" pos:end="47:41">192</literal> <operator pos:start="47:43" pos:end="47:43">*</operator> <name pos:start="47:45" pos:end="47:57">bytesperpixel</name> <operator pos:start="47:59" pos:end="47:59">+</operator>

                                <sizeof pos:start="49:33" pos:end="49:49">sizeof<argument_list pos:start="49:39" pos:end="49:49">(<argument pos:start="49:40" pos:end="49:48"><expr pos:start="49:40" pos:end="49:48"><operator pos:start="49:40" pos:end="49:40">*</operator><name pos:start="49:41" pos:end="49:48"><name pos:start="49:41" pos:end="49:41">s</name><operator pos:start="49:42" pos:end="49:43">-&gt;</operator><name pos:start="49:44" pos:end="49:48">lflvl</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="49:51" pos:end="49:51">+</operator> <literal type="number" pos:start="49:53" pos:end="49:54">16</literal> <operator pos:start="49:56" pos:end="49:56">*</operator> <sizeof pos:start="49:58" pos:end="49:81">sizeof<argument_list pos:start="49:64" pos:end="49:81">(<argument pos:start="49:65" pos:end="49:80"><expr pos:start="49:65" pos:end="49:80"><operator pos:start="49:65" pos:end="49:65">*</operator><name pos:start="49:66" pos:end="49:80"><name pos:start="49:66" pos:end="49:66">s</name><operator pos:start="49:67" pos:end="49:68">-&gt;</operator><name pos:start="49:69" pos:end="49:80">above_mv_ctx</name></name></expr></argument>)</argument_list></sizeof><operator pos:start="49:82" pos:end="49:82">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="53:31"><if pos:start="51:5" pos:end="53:31">if <condition pos:start="51:8" pos:end="51:11">(<expr pos:start="51:9" pos:end="51:10"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:10">p</name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:31"><block_content pos:start="53:9" pos:end="53:31">

        <return pos:start="53:9" pos:end="53:31">return <expr pos:start="53:16" pos:end="53:30"><call pos:start="53:16" pos:end="53:30"><name pos:start="53:16" pos:end="53:22">AVERROR</name><argument_list pos:start="53:23" pos:end="53:30">(<argument pos:start="53:24" pos:end="53:29"><expr pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:78"><expr pos:start="55:5" pos:end="55:77"><call pos:start="55:5" pos:end="55:77"><name pos:start="55:5" pos:end="55:10">assign</name><argument_list pos:start="55:11" pos:end="55:77">(<argument pos:start="55:12" pos:end="55:32"><expr pos:start="55:12" pos:end="55:32"><name pos:start="55:12" pos:end="55:32"><name pos:start="55:12" pos:end="55:12">s</name><operator pos:start="55:13" pos:end="55:14">-&gt;</operator><name pos:start="55:15" pos:end="55:29">intra_pred_data</name><index pos:start="55:30" pos:end="55:32">[<expr pos:start="55:31" pos:end="55:31"><literal type="number" pos:start="55:31" pos:end="55:31">0</literal></expr>]</index></name></expr></argument>,  <argument pos:start="55:36" pos:end="55:44"><expr pos:start="55:36" pos:end="55:44"><name pos:start="55:36" pos:end="55:42">uint8_t</name> <operator pos:start="55:44" pos:end="55:44">*</operator></expr></argument>,             <argument pos:start="55:59" pos:end="55:76"><expr pos:start="55:59" pos:end="55:76"><literal type="number" pos:start="55:59" pos:end="55:60">64</literal> <operator pos:start="55:62" pos:end="55:62">*</operator> <name pos:start="55:64" pos:end="55:76">bytesperpixel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:78"><expr pos:start="57:5" pos:end="57:77"><call pos:start="57:5" pos:end="57:77"><name pos:start="57:5" pos:end="57:10">assign</name><argument_list pos:start="57:11" pos:end="57:77">(<argument pos:start="57:12" pos:end="57:32"><expr pos:start="57:12" pos:end="57:32"><name pos:start="57:12" pos:end="57:32"><name pos:start="57:12" pos:end="57:12">s</name><operator pos:start="57:13" pos:end="57:14">-&gt;</operator><name pos:start="57:15" pos:end="57:29">intra_pred_data</name><index pos:start="57:30" pos:end="57:32">[<expr pos:start="57:31" pos:end="57:31"><literal type="number" pos:start="57:31" pos:end="57:31">1</literal></expr>]</index></name></expr></argument>,  <argument pos:start="57:36" pos:end="57:44"><expr pos:start="57:36" pos:end="57:44"><name pos:start="57:36" pos:end="57:42">uint8_t</name> <operator pos:start="57:44" pos:end="57:44">*</operator></expr></argument>,             <argument pos:start="57:59" pos:end="57:76"><expr pos:start="57:59" pos:end="57:76"><literal type="number" pos:start="57:59" pos:end="57:60">64</literal> <operator pos:start="57:62" pos:end="57:62">*</operator> <name pos:start="57:64" pos:end="57:76">bytesperpixel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:78"><expr pos:start="59:5" pos:end="59:77"><call pos:start="59:5" pos:end="59:77"><name pos:start="59:5" pos:end="59:10">assign</name><argument_list pos:start="59:11" pos:end="59:77">(<argument pos:start="59:12" pos:end="59:32"><expr pos:start="59:12" pos:end="59:32"><name pos:start="59:12" pos:end="59:32"><name pos:start="59:12" pos:end="59:12">s</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:29">intra_pred_data</name><index pos:start="59:30" pos:end="59:32">[<expr pos:start="59:31" pos:end="59:31"><literal type="number" pos:start="59:31" pos:end="59:31">2</literal></expr>]</index></name></expr></argument>,  <argument pos:start="59:36" pos:end="59:44"><expr pos:start="59:36" pos:end="59:44"><name pos:start="59:36" pos:end="59:42">uint8_t</name> <operator pos:start="59:44" pos:end="59:44">*</operator></expr></argument>,             <argument pos:start="59:59" pos:end="59:76"><expr pos:start="59:59" pos:end="59:76"><literal type="number" pos:start="59:59" pos:end="59:60">64</literal> <operator pos:start="59:62" pos:end="59:62">*</operator> <name pos:start="59:64" pos:end="59:76">bytesperpixel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:62"><expr pos:start="61:5" pos:end="61:61"><call pos:start="61:5" pos:end="61:61"><name pos:start="61:5" pos:end="61:10">assign</name><argument_list pos:start="61:11" pos:end="61:61">(<argument pos:start="61:12" pos:end="61:29"><expr pos:start="61:12" pos:end="61:29"><name pos:start="61:12" pos:end="61:29"><name pos:start="61:12" pos:end="61:12">s</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:29">above_y_nnz_ctx</name></name></expr></argument>,     <argument pos:start="61:36" pos:end="61:44"><expr pos:start="61:36" pos:end="61:44"><name pos:start="61:36" pos:end="61:42">uint8_t</name> <operator pos:start="61:44" pos:end="61:44">*</operator></expr></argument>,             <argument pos:start="61:59" pos:end="61:60"><expr pos:start="61:59" pos:end="61:60"><literal type="number" pos:start="61:59" pos:end="61:60">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:62"><expr pos:start="63:5" pos:end="63:61"><call pos:start="63:5" pos:end="63:61"><name pos:start="63:5" pos:end="63:10">assign</name><argument_list pos:start="63:11" pos:end="63:61">(<argument pos:start="63:12" pos:end="63:28"><expr pos:start="63:12" pos:end="63:28"><name pos:start="63:12" pos:end="63:28"><name pos:start="63:12" pos:end="63:12">s</name><operator pos:start="63:13" pos:end="63:14">-&gt;</operator><name pos:start="63:15" pos:end="63:28">above_mode_ctx</name></name></expr></argument>,      <argument pos:start="63:36" pos:end="63:44"><expr pos:start="63:36" pos:end="63:44"><name pos:start="63:36" pos:end="63:42">uint8_t</name> <operator pos:start="63:44" pos:end="63:44">*</operator></expr></argument>,             <argument pos:start="63:59" pos:end="63:60"><expr pos:start="63:59" pos:end="63:60"><literal type="number" pos:start="63:59" pos:end="63:60">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:62"><expr pos:start="65:5" pos:end="65:61"><call pos:start="65:5" pos:end="65:61"><name pos:start="65:5" pos:end="65:10">assign</name><argument_list pos:start="65:11" pos:end="65:61">(<argument pos:start="65:12" pos:end="65:26"><expr pos:start="65:12" pos:end="65:26"><name pos:start="65:12" pos:end="65:26"><name pos:start="65:12" pos:end="65:12">s</name><operator pos:start="65:13" pos:end="65:14">-&gt;</operator><name pos:start="65:15" pos:end="65:26">above_mv_ctx</name></name></expr></argument>,        <argument pos:start="65:36" pos:end="65:47"><expr pos:start="65:36" pos:end="65:47"><call pos:start="65:36" pos:end="65:44"><name pos:start="65:36" pos:end="65:41">VP56mv</name><argument_list pos:start="65:42" pos:end="65:44">(<argument pos:start="65:43" pos:end="65:43"><expr pos:start="65:43" pos:end="65:43"><operator pos:start="65:43" pos:end="65:43">*</operator></expr></argument>)</argument_list></call><index pos:start="65:45" pos:end="65:47">[<expr pos:start="65:46" pos:end="65:46"><literal type="number" pos:start="65:46" pos:end="65:46">2</literal></expr>]</index></expr></argument>,          <argument pos:start="65:59" pos:end="65:60"><expr pos:start="65:59" pos:end="65:60"><literal type="number" pos:start="65:59" pos:end="65:60">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:62"><expr pos:start="67:5" pos:end="67:61"><call pos:start="67:5" pos:end="67:61"><name pos:start="67:5" pos:end="67:10">assign</name><argument_list pos:start="67:11" pos:end="67:61">(<argument pos:start="67:12" pos:end="67:33"><expr pos:start="67:12" pos:end="67:33"><name pos:start="67:12" pos:end="67:33"><name pos:start="67:12" pos:end="67:12">s</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:30">above_uv_nnz_ctx</name><index pos:start="67:31" pos:end="67:33">[<expr pos:start="67:32" pos:end="67:32"><literal type="number" pos:start="67:32" pos:end="67:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:36" pos:end="67:44"><expr pos:start="67:36" pos:end="67:44"><name pos:start="67:36" pos:end="67:42">uint8_t</name> <operator pos:start="67:44" pos:end="67:44">*</operator></expr></argument>,             <argument pos:start="67:59" pos:end="67:60"><expr pos:start="67:59" pos:end="67:60"><literal type="number" pos:start="67:59" pos:end="67:60">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:62"><expr pos:start="69:5" pos:end="69:61"><call pos:start="69:5" pos:end="69:61"><name pos:start="69:5" pos:end="69:10">assign</name><argument_list pos:start="69:11" pos:end="69:61">(<argument pos:start="69:12" pos:end="69:33"><expr pos:start="69:12" pos:end="69:33"><name pos:start="69:12" pos:end="69:33"><name pos:start="69:12" pos:end="69:12">s</name><operator pos:start="69:13" pos:end="69:14">-&gt;</operator><name pos:start="69:15" pos:end="69:30">above_uv_nnz_ctx</name><index pos:start="69:31" pos:end="69:33">[<expr pos:start="69:32" pos:end="69:32"><literal type="number" pos:start="69:32" pos:end="69:32">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="69:36" pos:end="69:44"><expr pos:start="69:36" pos:end="69:44"><name pos:start="69:36" pos:end="69:42">uint8_t</name> <operator pos:start="69:44" pos:end="69:44">*</operator></expr></argument>,             <argument pos:start="69:59" pos:end="69:60"><expr pos:start="69:59" pos:end="69:60"><literal type="number" pos:start="69:59" pos:end="69:60">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:62"><expr pos:start="71:5" pos:end="71:61"><call pos:start="71:5" pos:end="71:61"><name pos:start="71:5" pos:end="71:10">assign</name><argument_list pos:start="71:11" pos:end="71:61">(<argument pos:start="71:12" pos:end="71:33"><expr pos:start="71:12" pos:end="71:33"><name pos:start="71:12" pos:end="71:33"><name pos:start="71:12" pos:end="71:12">s</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:33">above_partition_ctx</name></name></expr></argument>, <argument pos:start="71:36" pos:end="71:44"><expr pos:start="71:36" pos:end="71:44"><name pos:start="71:36" pos:end="71:42">uint8_t</name> <operator pos:start="71:44" pos:end="71:44">*</operator></expr></argument>,              <argument pos:start="71:60" pos:end="71:60"><expr pos:start="71:60" pos:end="71:60"><literal type="number" pos:start="71:60" pos:end="71:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:62"><expr pos:start="73:5" pos:end="73:61"><call pos:start="73:5" pos:end="73:61"><name pos:start="73:5" pos:end="73:10">assign</name><argument_list pos:start="73:11" pos:end="73:61">(<argument pos:start="73:12" pos:end="73:28"><expr pos:start="73:12" pos:end="73:28"><name pos:start="73:12" pos:end="73:28"><name pos:start="73:12" pos:end="73:12">s</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:28">above_skip_ctx</name></name></expr></argument>,      <argument pos:start="73:36" pos:end="73:44"><expr pos:start="73:36" pos:end="73:44"><name pos:start="73:36" pos:end="73:42">uint8_t</name> <operator pos:start="73:44" pos:end="73:44">*</operator></expr></argument>,              <argument pos:start="73:60" pos:end="73:60"><expr pos:start="73:60" pos:end="73:60"><literal type="number" pos:start="73:60" pos:end="73:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:62"><expr pos:start="75:5" pos:end="75:61"><call pos:start="75:5" pos:end="75:61"><name pos:start="75:5" pos:end="75:10">assign</name><argument_list pos:start="75:11" pos:end="75:61">(<argument pos:start="75:12" pos:end="75:28"><expr pos:start="75:12" pos:end="75:28"><name pos:start="75:12" pos:end="75:28"><name pos:start="75:12" pos:end="75:12">s</name><operator pos:start="75:13" pos:end="75:14">-&gt;</operator><name pos:start="75:15" pos:end="75:28">above_txfm_ctx</name></name></expr></argument>,      <argument pos:start="75:36" pos:end="75:44"><expr pos:start="75:36" pos:end="75:44"><name pos:start="75:36" pos:end="75:42">uint8_t</name> <operator pos:start="75:44" pos:end="75:44">*</operator></expr></argument>,              <argument pos:start="75:60" pos:end="75:60"><expr pos:start="75:60" pos:end="75:60"><literal type="number" pos:start="75:60" pos:end="75:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:62"><expr pos:start="77:5" pos:end="77:61"><call pos:start="77:5" pos:end="77:61"><name pos:start="77:5" pos:end="77:10">assign</name><argument_list pos:start="77:11" pos:end="77:61">(<argument pos:start="77:12" pos:end="77:31"><expr pos:start="77:12" pos:end="77:31"><name pos:start="77:12" pos:end="77:31"><name pos:start="77:12" pos:end="77:12">s</name><operator pos:start="77:13" pos:end="77:14">-&gt;</operator><name pos:start="77:15" pos:end="77:31">above_segpred_ctx</name></name></expr></argument>,   <argument pos:start="77:36" pos:end="77:44"><expr pos:start="77:36" pos:end="77:44"><name pos:start="77:36" pos:end="77:42">uint8_t</name> <operator pos:start="77:44" pos:end="77:44">*</operator></expr></argument>,              <argument pos:start="77:60" pos:end="77:60"><expr pos:start="77:60" pos:end="77:60"><literal type="number" pos:start="77:60" pos:end="77:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:62"><expr pos:start="79:5" pos:end="79:61"><call pos:start="79:5" pos:end="79:61"><name pos:start="79:5" pos:end="79:10">assign</name><argument_list pos:start="79:11" pos:end="79:61">(<argument pos:start="79:12" pos:end="79:29"><expr pos:start="79:12" pos:end="79:29"><name pos:start="79:12" pos:end="79:29"><name pos:start="79:12" pos:end="79:12">s</name><operator pos:start="79:13" pos:end="79:14">-&gt;</operator><name pos:start="79:15" pos:end="79:29">above_intra_ctx</name></name></expr></argument>,     <argument pos:start="79:36" pos:end="79:44"><expr pos:start="79:36" pos:end="79:44"><name pos:start="79:36" pos:end="79:42">uint8_t</name> <operator pos:start="79:44" pos:end="79:44">*</operator></expr></argument>,              <argument pos:start="79:60" pos:end="79:60"><expr pos:start="79:60" pos:end="79:60"><literal type="number" pos:start="79:60" pos:end="79:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:62"><expr pos:start="81:5" pos:end="81:61"><call pos:start="81:5" pos:end="81:61"><name pos:start="81:5" pos:end="81:10">assign</name><argument_list pos:start="81:11" pos:end="81:61">(<argument pos:start="81:12" pos:end="81:28"><expr pos:start="81:12" pos:end="81:28"><name pos:start="81:12" pos:end="81:28"><name pos:start="81:12" pos:end="81:12">s</name><operator pos:start="81:13" pos:end="81:14">-&gt;</operator><name pos:start="81:15" pos:end="81:28">above_comp_ctx</name></name></expr></argument>,      <argument pos:start="81:36" pos:end="81:44"><expr pos:start="81:36" pos:end="81:44"><name pos:start="81:36" pos:end="81:42">uint8_t</name> <operator pos:start="81:44" pos:end="81:44">*</operator></expr></argument>,              <argument pos:start="81:60" pos:end="81:60"><expr pos:start="81:60" pos:end="81:60"><literal type="number" pos:start="81:60" pos:end="81:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:62"><expr pos:start="83:5" pos:end="83:61"><call pos:start="83:5" pos:end="83:61"><name pos:start="83:5" pos:end="83:10">assign</name><argument_list pos:start="83:11" pos:end="83:61">(<argument pos:start="83:12" pos:end="83:27"><expr pos:start="83:12" pos:end="83:27"><name pos:start="83:12" pos:end="83:27"><name pos:start="83:12" pos:end="83:12">s</name><operator pos:start="83:13" pos:end="83:14">-&gt;</operator><name pos:start="83:15" pos:end="83:27">above_ref_ctx</name></name></expr></argument>,       <argument pos:start="83:36" pos:end="83:44"><expr pos:start="83:36" pos:end="83:44"><name pos:start="83:36" pos:end="83:42">uint8_t</name> <operator pos:start="83:44" pos:end="83:44">*</operator></expr></argument>,              <argument pos:start="83:60" pos:end="83:60"><expr pos:start="83:60" pos:end="83:60"><literal type="number" pos:start="83:60" pos:end="83:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:62"><expr pos:start="85:5" pos:end="85:61"><call pos:start="85:5" pos:end="85:61"><name pos:start="85:5" pos:end="85:10">assign</name><argument_list pos:start="85:11" pos:end="85:61">(<argument pos:start="85:12" pos:end="85:30"><expr pos:start="85:12" pos:end="85:30"><name pos:start="85:12" pos:end="85:30"><name pos:start="85:12" pos:end="85:12">s</name><operator pos:start="85:13" pos:end="85:14">-&gt;</operator><name pos:start="85:15" pos:end="85:30">above_filter_ctx</name></name></expr></argument>,    <argument pos:start="85:36" pos:end="85:44"><expr pos:start="85:36" pos:end="85:44"><name pos:start="85:36" pos:end="85:42">uint8_t</name> <operator pos:start="85:44" pos:end="85:44">*</operator></expr></argument>,              <argument pos:start="85:60" pos:end="85:60"><expr pos:start="85:60" pos:end="85:60"><literal type="number" pos:start="85:60" pos:end="85:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="90:0"><expr pos:start="87:5" pos:end="87:61"><call pos:start="87:5" pos:end="87:61"><name pos:start="87:5" pos:end="87:10">assign</name><argument_list pos:start="87:11" pos:end="87:61">(<argument pos:start="87:12" pos:end="87:19"><expr pos:start="87:12" pos:end="87:19"><name pos:start="87:12" pos:end="87:19"><name pos:start="87:12" pos:end="87:12">s</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:19">lflvl</name></name></expr></argument>,               <argument pos:start="87:36" pos:end="87:53"><expr pos:start="87:36" pos:end="87:53">struct <name pos:start="87:43" pos:end="87:51">VP9Filter</name> <operator pos:start="87:53" pos:end="87:53">*</operator></expr></argument>,     <argument pos:start="87:60" pos:end="87:60"><expr pos:start="87:60" pos:end="87:60"><literal type="number" pos:start="87:60" pos:end="87:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef pos:start="89:1" pos:end="89:13">#<cpp:directive pos:start="89:2" pos:end="89:6">undef</cpp:directive> <name pos:start="89:8" pos:end="89:13">assign</name></cpp:undef>



    <comment type="line" pos:start="93:5" pos:end="93:48">// these will be re-allocated a little later</comment>

    <expr_stmt pos:start="95:5" pos:end="95:25"><expr pos:start="95:5" pos:end="95:24"><call pos:start="95:5" pos:end="95:24"><name pos:start="95:5" pos:end="95:12">av_freep</name><argument_list pos:start="95:13" pos:end="95:24">(<argument pos:start="95:14" pos:end="95:23"><expr pos:start="95:14" pos:end="95:23"><operator pos:start="95:14" pos:end="95:14">&amp;</operator><name pos:start="95:15" pos:end="95:23"><name pos:start="95:15" pos:end="95:15">s</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:23">b_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:29"><expr pos:start="97:5" pos:end="97:28"><call pos:start="97:5" pos:end="97:28"><name pos:start="97:5" pos:end="97:12">av_freep</name><argument_list pos:start="97:13" pos:end="97:28">(<argument pos:start="97:14" pos:end="97:27"><expr pos:start="97:14" pos:end="97:27"><operator pos:start="97:14" pos:end="97:14">&amp;</operator><name pos:start="97:15" pos:end="97:27"><name pos:start="97:15" pos:end="97:15">s</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:27">block_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="101:5" pos:end="109:5"><if pos:start="101:5" pos:end="109:5">if <condition pos:start="101:8" pos:end="101:30">(<expr pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:14"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:14">bpp</name></name> <operator pos:start="101:16" pos:end="101:17">!=</operator> <name pos:start="101:19" pos:end="101:29"><name pos:start="101:19" pos:end="101:19">s</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:29">last_bpp</name></name></expr>)</condition> <block pos:start="101:32" pos:end="109:5">{<block_content pos:start="103:9" pos:end="107:29">

        <expr_stmt pos:start="103:9" pos:end="103:40"><expr pos:start="103:9" pos:end="103:39"><call pos:start="103:9" pos:end="103:39"><name pos:start="103:9" pos:end="103:22">ff_vp9dsp_init</name><argument_list pos:start="103:23" pos:end="103:39">(<argument pos:start="103:24" pos:end="103:30"><expr pos:start="103:24" pos:end="103:30"><operator pos:start="103:24" pos:end="103:24">&amp;</operator><name pos:start="103:25" pos:end="103:30"><name pos:start="103:25" pos:end="103:25">s</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:30">dsp</name></name></expr></argument>, <argument pos:start="103:33" pos:end="103:38"><expr pos:start="103:33" pos:end="103:38"><name pos:start="103:33" pos:end="103:38"><name pos:start="103:33" pos:end="103:33">s</name><operator pos:start="103:34" pos:end="103:35">-&gt;</operator><name pos:start="103:36" pos:end="103:38">bpp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:43"><expr pos:start="105:9" pos:end="105:42"><call pos:start="105:9" pos:end="105:42"><name pos:start="105:9" pos:end="105:24">ff_videodsp_init</name><argument_list pos:start="105:25" pos:end="105:42">(<argument pos:start="105:26" pos:end="105:33"><expr pos:start="105:26" pos:end="105:33"><operator pos:start="105:26" pos:end="105:26">&amp;</operator><name pos:start="105:27" pos:end="105:33"><name pos:start="105:27" pos:end="105:27">s</name><operator pos:start="105:28" pos:end="105:29">-&gt;</operator><name pos:start="105:30" pos:end="105:33">vdsp</name></name></expr></argument>, <argument pos:start="105:36" pos:end="105:41"><expr pos:start="105:36" pos:end="105:41"><name pos:start="105:36" pos:end="105:41"><name pos:start="105:36" pos:end="105:36">s</name><operator pos:start="105:37" pos:end="105:38">-&gt;</operator><name pos:start="105:39" pos:end="105:41">bpp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:29"><expr pos:start="107:9" pos:end="107:28"><name pos:start="107:9" pos:end="107:19"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:19">last_bpp</name></name> <operator pos:start="107:21" pos:end="107:21">=</operator> <name pos:start="107:23" pos:end="107:28"><name pos:start="107:23" pos:end="107:23">s</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:28">bpp</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="113:5" pos:end="113:13">return <expr pos:start="113:12" pos:end="113:12"><literal type="number" pos:start="113:12" pos:end="113:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
