<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19042.c" pos:tabs="8"><function pos:start="1:1" pos:end="331:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">lag_decode_frame</name><parameter_list pos:start="1:28" pos:end="3:72">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">got_frame</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:71"><decl pos:start="3:57" pos:end="3:71"><type pos:start="3:57" pos:end="3:71"><name pos:start="3:57" pos:end="3:64">AVPacket</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:71">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="331:1">{<block_content pos:start="7:5" pos:end="329:20">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name> <init pos:start="9:18" pos:end="9:30">= <expr pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:24">avpkt</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">LagarithContext</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:22">l</name> <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:15">ThreadFrame</name></type> <name pos:start="13:17" pos:end="13:21">frame</name> <init pos:start="13:23" pos:end="13:37">= <expr pos:start="13:25" pos:end="13:37"><block pos:start="13:25" pos:end="13:37">{ <expr pos:start="13:27" pos:end="13:35"><operator pos:start="13:27" pos:end="13:27">.</operator><name pos:start="13:28" pos:end="13:28">f</name> <operator pos:start="13:30" pos:end="13:30">=</operator> <name pos:start="13:32" pos:end="13:35">data</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:11">AVFrame</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier><specifier pos:start="15:14" pos:end="15:18">const</specifier></type> <name pos:start="15:20" pos:end="15:20">p</name>  <init pos:start="15:23" pos:end="15:28">= <expr pos:start="15:25" pos:end="15:28"><name pos:start="15:25" pos:end="15:28">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">uint8_t</name></type> <name pos:start="17:13" pos:end="17:21">frametype</name> <init pos:start="17:23" pos:end="17:25">= <expr pos:start="17:25" pos:end="17:25"><literal type="number" pos:start="17:25" pos:end="17:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:57"><decl pos:start="19:5" pos:end="19:26"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:22">offset_gu</name> <init pos:start="19:24" pos:end="19:26">= <expr pos:start="19:26" pos:end="19:26"><literal type="number" pos:start="19:26" pos:end="19:26">0</literal></expr></init></decl>, <decl pos:start="19:29" pos:end="19:41"><type ref="prev" pos:start="19:5" pos:end="19:12"/><name pos:start="19:29" pos:end="19:37">offset_bv</name> <init pos:start="19:39" pos:end="19:41">= <expr pos:start="19:41" pos:end="19:41"><literal type="number" pos:start="19:41" pos:end="19:41">0</literal></expr></init></decl>, <decl pos:start="19:44" pos:end="19:56"><type ref="prev" pos:start="19:5" pos:end="19:12"/><name pos:start="19:44" pos:end="19:52">offset_ry</name> <init pos:start="19:54" pos:end="19:56">= <expr pos:start="19:56" pos:end="19:56"><literal type="number" pos:start="19:56" pos:end="19:56">9</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:21"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint32_t</name></type> <name pos:start="21:14" pos:end="21:20"><name pos:start="21:14" pos:end="21:17">offs</name><index pos:start="21:18" pos:end="21:20">[<expr pos:start="21:19" pos:end="21:19"><literal type="number" pos:start="21:19" pos:end="21:19">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:27"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:11">uint8_t</name> <modifier pos:start="23:13" pos:end="23:13">*</modifier></type><name pos:start="23:14" pos:end="23:20"><name pos:start="23:14" pos:end="23:17">srcs</name><index pos:start="23:18" pos:end="23:20">[<expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">4</literal></expr>]</index></name></decl>, <decl pos:start="23:23" pos:end="23:26"><type ref="prev" pos:start="23:5" pos:end="23:13"><modifier pos:start="23:23" pos:end="23:23">*</modifier></type><name pos:start="23:24" pos:end="23:26">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:25"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">i</name></decl>, <decl pos:start="25:12" pos:end="25:12"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:12" pos:end="25:12">j</name></decl>, <decl pos:start="25:15" pos:end="25:24"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:15" pos:end="25:20">planes</name> <init pos:start="25:22" pos:end="25:24">= <expr pos:start="25:24" pos:end="25:24"><literal type="number" pos:start="25:24" pos:end="25:24">3</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:21"><expr pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:5">p</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:16">key_frame</name></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <literal type="number" pos:start="29:20" pos:end="29:20">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:13">frametype</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:19">buf</name><index pos:start="33:20" pos:end="33:22">[<expr pos:start="33:21" pos:end="33:21"><literal type="number" pos:start="33:21" pos:end="33:21">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:13">offset_gu</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <call pos:start="37:17" pos:end="37:32"><name pos:start="37:17" pos:end="37:23">AV_RL32</name><argument_list pos:start="37:24" pos:end="37:32">(<argument pos:start="37:25" pos:end="37:31"><expr pos:start="37:25" pos:end="37:31"><name pos:start="37:25" pos:end="37:27">buf</name> <operator pos:start="37:29" pos:end="37:29">+</operator> <literal type="number" pos:start="37:31" pos:end="37:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:33"><expr pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:13">offset_bv</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:32"><name pos:start="39:17" pos:end="39:23">AV_RL32</name><argument_list pos:start="39:24" pos:end="39:32">(<argument pos:start="39:25" pos:end="39:31"><expr pos:start="39:25" pos:end="39:31"><name pos:start="39:25" pos:end="39:27">buf</name> <operator pos:start="39:29" pos:end="39:29">+</operator> <literal type="number" pos:start="39:31" pos:end="39:31">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="43:5" pos:end="321:5">switch <condition pos:start="43:12" pos:end="43:22">(<expr pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:21">frametype</name></expr>)</condition> <block pos:start="43:24" pos:end="321:5">{<block_content pos:start="45:5" pos:end="319:18">

    <case pos:start="45:5" pos:end="45:26">case <expr pos:start="45:10" pos:end="45:25"><name pos:start="45:10" pos:end="45:25">FRAME_SOLID_RGBA</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:42"><expr pos:start="47:9" pos:end="47:41"><name pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:13">avctx</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:22">pix_fmt</name></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <name pos:start="47:26" pos:end="47:41">AV_PIX_FMT_RGB32</name></expr>;</expr_stmt>



        <if_stmt pos:start="51:9" pos:end="57:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:55">(<expr pos:start="51:13" pos:end="51:54"><call pos:start="51:13" pos:end="51:50"><name pos:start="51:13" pos:end="51:32">ff_thread_get_buffer</name><argument_list pos:start="51:33" pos:end="51:50">(<argument pos:start="51:34" pos:end="51:38"><expr pos:start="51:34" pos:end="51:38"><name pos:start="51:34" pos:end="51:38">avctx</name></expr></argument>, <argument pos:start="51:41" pos:end="51:46"><expr pos:start="51:41" pos:end="51:46"><operator pos:start="51:41" pos:end="51:41">&amp;</operator><name pos:start="51:42" pos:end="51:46">frame</name></expr></argument>, <argument pos:start="51:49" pos:end="51:49"><expr pos:start="51:49" pos:end="51:49"><literal type="number" pos:start="51:49" pos:end="51:49">0</literal></expr></argument>)</argument_list></call> <operator pos:start="51:52" pos:end="51:52">&lt;</operator> <literal type="number" pos:start="51:54" pos:end="51:54">0</literal></expr>)</condition> <block pos:start="51:57" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:22">

            <expr_stmt pos:start="53:13" pos:end="53:65"><expr pos:start="53:13" pos:end="53:64"><call pos:start="53:13" pos:end="53:64"><name pos:start="53:13" pos:end="53:18">av_log</name><argument_list pos:start="53:19" pos:end="53:64">(<argument pos:start="53:20" pos:end="53:24"><expr pos:start="53:20" pos:end="53:24"><name pos:start="53:20" pos:end="53:24">avctx</name></expr></argument>, <argument pos:start="53:27" pos:end="53:38"><expr pos:start="53:27" pos:end="53:38"><name pos:start="53:27" pos:end="53:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:41" pos:end="53:63"><expr pos:start="53:41" pos:end="53:63"><literal type="string" pos:start="53:41" pos:end="53:63">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:22">return <expr pos:start="55:20" pos:end="55:21"><operator pos:start="55:20" pos:end="55:20">-</operator><literal type="number" pos:start="55:21" pos:end="55:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:25"><expr pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:11">dst</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <name pos:start="61:15" pos:end="61:24"><name pos:start="61:15" pos:end="61:15">p</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:21">data</name><index pos:start="61:22" pos:end="61:24">[<expr pos:start="61:23" pos:end="61:23"><literal type="number" pos:start="61:23" pos:end="61:23">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="63:9" pos:end="71:9">for <control pos:start="63:13" pos:end="63:43">(<init pos:start="63:14" pos:end="63:19"><expr pos:start="63:14" pos:end="63:18"><name pos:start="63:14" pos:end="63:14">j</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <literal type="number" pos:start="63:18" pos:end="63:18">0</literal></expr>;</init> <condition pos:start="63:21" pos:end="63:38"><expr pos:start="63:21" pos:end="63:37"><name pos:start="63:21" pos:end="63:21">j</name> <operator pos:start="63:23" pos:end="63:23">&lt;</operator> <name pos:start="63:25" pos:end="63:37"><name pos:start="63:25" pos:end="63:29">avctx</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:37">height</name></name></expr>;</condition> <incr pos:start="63:40" pos:end="63:42"><expr pos:start="63:40" pos:end="63:42"><name pos:start="63:40" pos:end="63:40">j</name><operator pos:start="63:41" pos:end="63:42">++</operator></expr></incr>)</control> <block pos:start="63:45" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:34">

            <for pos:start="65:13" pos:end="67:48">for <control pos:start="65:17" pos:end="65:46">(<init pos:start="65:18" pos:end="65:23"><expr pos:start="65:18" pos:end="65:22"><name pos:start="65:18" pos:end="65:18">i</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>;</init> <condition pos:start="65:25" pos:end="65:41"><expr pos:start="65:25" pos:end="65:40"><name pos:start="65:25" pos:end="65:25">i</name> <operator pos:start="65:27" pos:end="65:27">&lt;</operator> <name pos:start="65:29" pos:end="65:40"><name pos:start="65:29" pos:end="65:33">avctx</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:40">width</name></name></expr>;</condition> <incr pos:start="65:43" pos:end="65:45"><expr pos:start="65:43" pos:end="65:45"><name pos:start="65:43" pos:end="65:43">i</name><operator pos:start="65:44" pos:end="65:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="67:17" pos:end="67:48"><block_content pos:start="67:17" pos:end="67:48">

                <expr_stmt pos:start="67:17" pos:end="67:48"><expr pos:start="67:17" pos:end="67:47"><call pos:start="67:17" pos:end="67:47"><name pos:start="67:17" pos:end="67:23">AV_WN32</name><argument_list pos:start="67:24" pos:end="67:47">(<argument pos:start="67:25" pos:end="67:35"><expr pos:start="67:25" pos:end="67:35"><name pos:start="67:25" pos:end="67:27">dst</name> <operator pos:start="67:29" pos:end="67:29">+</operator> <name pos:start="67:31" pos:end="67:31">i</name> <operator pos:start="67:33" pos:end="67:33">*</operator> <literal type="number" pos:start="67:35" pos:end="67:35">4</literal></expr></argument>, <argument pos:start="67:38" pos:end="67:46"><expr pos:start="67:38" pos:end="67:46"><name pos:start="67:38" pos:end="67:46">offset_gu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="69:13" pos:end="69:34"><expr pos:start="69:13" pos:end="69:33"><name pos:start="69:13" pos:end="69:15">dst</name> <operator pos:start="69:17" pos:end="69:18">+=</operator> <name pos:start="69:20" pos:end="69:33"><name pos:start="69:20" pos:end="69:20">p</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:30">linesize</name><index pos:start="69:31" pos:end="69:33">[<expr pos:start="69:32" pos:end="69:32"><literal type="number" pos:start="69:32" pos:end="69:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:26">case <expr pos:start="75:10" pos:end="75:25"><name pos:start="75:10" pos:end="75:25">FRAME_ARITH_RGBA</name></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:42"><expr pos:start="77:9" pos:end="77:41"><name pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:13">avctx</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:22">pix_fmt</name></name> <operator pos:start="77:24" pos:end="77:24">=</operator> <name pos:start="77:26" pos:end="77:41">AV_PIX_FMT_RGB32</name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:19"><expr pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:14">planes</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <literal type="number" pos:start="79:18" pos:end="79:18">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:23"><expr pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:17">offset_ry</name> <operator pos:start="81:19" pos:end="81:20">+=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:35"><expr pos:start="83:9" pos:end="83:34"><name pos:start="83:9" pos:end="83:15"><name pos:start="83:9" pos:end="83:12">offs</name><index pos:start="83:13" pos:end="83:15">[<expr pos:start="83:14" pos:end="83:14"><literal type="number" pos:start="83:14" pos:end="83:14">3</literal></expr>]</index></name> <operator pos:start="83:17" pos:end="83:17">=</operator> <call pos:start="83:19" pos:end="83:34"><name pos:start="83:19" pos:end="83:25">AV_RL32</name><argument_list pos:start="83:26" pos:end="83:34">(<argument pos:start="83:27" pos:end="83:33"><expr pos:start="83:27" pos:end="83:33"><name pos:start="83:27" pos:end="83:29">buf</name> <operator pos:start="83:31" pos:end="83:31">+</operator> <literal type="number" pos:start="83:33" pos:end="83:33">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <case pos:start="85:5" pos:end="85:27">case <expr pos:start="85:10" pos:end="85:26"><name pos:start="85:10" pos:end="85:26">FRAME_ARITH_RGB24</name></expr>:</case>

    <case pos:start="87:5" pos:end="87:23">case <expr pos:start="87:10" pos:end="87:22"><name pos:start="87:10" pos:end="87:22">FRAME_U_RGB24</name></expr>:</case>

        <if_stmt pos:start="89:9" pos:end="91:46"><if pos:start="89:9" pos:end="91:46">if <condition pos:start="89:12" pos:end="89:73">(<expr pos:start="89:13" pos:end="89:72"><name pos:start="89:13" pos:end="89:21">frametype</name> <operator pos:start="89:23" pos:end="89:24">==</operator> <name pos:start="89:26" pos:end="89:42">FRAME_ARITH_RGB24</name> <operator pos:start="89:44" pos:end="89:45">||</operator> <name pos:start="89:47" pos:end="89:55">frametype</name> <operator pos:start="89:57" pos:end="89:58">==</operator> <name pos:start="89:60" pos:end="89:72">FRAME_U_RGB24</name></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:46"><block_content pos:start="91:13" pos:end="91:46">

            <expr_stmt pos:start="91:13" pos:end="91:46"><expr pos:start="91:13" pos:end="91:45"><name pos:start="91:13" pos:end="91:26"><name pos:start="91:13" pos:end="91:17">avctx</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:26">pix_fmt</name></name> <operator pos:start="91:28" pos:end="91:28">=</operator> <name pos:start="91:30" pos:end="91:45">AV_PIX_FMT_RGB24</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="95:9" pos:end="101:9"><if pos:start="95:9" pos:end="101:9">if <condition pos:start="95:12" pos:end="95:55">(<expr pos:start="95:13" pos:end="95:54"><call pos:start="95:13" pos:end="95:50"><name pos:start="95:13" pos:end="95:32">ff_thread_get_buffer</name><argument_list pos:start="95:33" pos:end="95:50">(<argument pos:start="95:34" pos:end="95:38"><expr pos:start="95:34" pos:end="95:38"><name pos:start="95:34" pos:end="95:38">avctx</name></expr></argument>, <argument pos:start="95:41" pos:end="95:46"><expr pos:start="95:41" pos:end="95:46"><operator pos:start="95:41" pos:end="95:41">&amp;</operator><name pos:start="95:42" pos:end="95:46">frame</name></expr></argument>, <argument pos:start="95:49" pos:end="95:49"><expr pos:start="95:49" pos:end="95:49"><literal type="number" pos:start="95:49" pos:end="95:49">0</literal></expr></argument>)</argument_list></call> <operator pos:start="95:52" pos:end="95:52">&lt;</operator> <literal type="number" pos:start="95:54" pos:end="95:54">0</literal></expr>)</condition> <block pos:start="95:57" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:22">

            <expr_stmt pos:start="97:13" pos:end="97:65"><expr pos:start="97:13" pos:end="97:64"><call pos:start="97:13" pos:end="97:64"><name pos:start="97:13" pos:end="97:18">av_log</name><argument_list pos:start="97:19" pos:end="97:64">(<argument pos:start="97:20" pos:end="97:24"><expr pos:start="97:20" pos:end="97:24"><name pos:start="97:20" pos:end="97:24">avctx</name></expr></argument>, <argument pos:start="97:27" pos:end="97:38"><expr pos:start="97:27" pos:end="97:38"><name pos:start="97:27" pos:end="97:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="97:41" pos:end="97:63"><expr pos:start="97:41" pos:end="97:63"><literal type="string" pos:start="97:41" pos:end="97:63">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="99:13" pos:end="99:22">return <expr pos:start="99:20" pos:end="99:21"><operator pos:start="99:20" pos:end="99:20">-</operator><literal type="number" pos:start="99:21" pos:end="99:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:28"><expr pos:start="105:9" pos:end="105:27"><name pos:start="105:9" pos:end="105:15"><name pos:start="105:9" pos:end="105:12">offs</name><index pos:start="105:13" pos:end="105:15">[<expr pos:start="105:14" pos:end="105:14"><literal type="number" pos:start="105:14" pos:end="105:14">0</literal></expr>]</index></name> <operator pos:start="105:17" pos:end="105:17">=</operator> <name pos:start="105:19" pos:end="105:27">offset_bv</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:28"><expr pos:start="107:9" pos:end="107:27"><name pos:start="107:9" pos:end="107:15"><name pos:start="107:9" pos:end="107:12">offs</name><index pos:start="107:13" pos:end="107:15">[<expr pos:start="107:14" pos:end="107:14"><literal type="number" pos:start="107:14" pos:end="107:14">1</literal></expr>]</index></name> <operator pos:start="107:17" pos:end="107:17">=</operator> <name pos:start="107:19" pos:end="107:27">offset_gu</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:28"><expr pos:start="109:9" pos:end="109:27"><name pos:start="109:9" pos:end="109:15"><name pos:start="109:9" pos:end="109:12">offs</name><index pos:start="109:13" pos:end="109:15">[<expr pos:start="109:14" pos:end="109:14"><literal type="number" pos:start="109:14" pos:end="109:14">2</literal></expr>]</index></name> <operator pos:start="109:17" pos:end="109:17">=</operator> <name pos:start="109:19" pos:end="109:27">offset_ry</name></expr>;</expr_stmt>



        <if_stmt pos:start="113:9" pos:end="127:9"><if pos:start="113:9" pos:end="127:9">if <condition pos:start="113:12" pos:end="113:27">(<expr pos:start="113:13" pos:end="113:26"><operator pos:start="113:13" pos:end="113:13">!</operator><name pos:start="113:14" pos:end="113:26"><name pos:start="113:14" pos:end="113:14">l</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:26">rgb_planes</name></name></expr>)</condition> <block pos:start="113:29" pos:end="127:9">{<block_content pos:start="115:13" pos:end="125:13">

            <expr_stmt pos:start="115:13" pos:end="115:54"><expr pos:start="115:13" pos:end="115:53"><name pos:start="115:13" pos:end="115:25"><name pos:start="115:13" pos:end="115:13">l</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:25">rgb_stride</name></name> <operator pos:start="115:27" pos:end="115:27">=</operator> <call pos:start="115:29" pos:end="115:53"><name pos:start="115:29" pos:end="115:35">FFALIGN</name><argument_list pos:start="115:36" pos:end="115:53">(<argument pos:start="115:37" pos:end="115:48"><expr pos:start="115:37" pos:end="115:48"><name pos:start="115:37" pos:end="115:48"><name pos:start="115:37" pos:end="115:41">avctx</name><operator pos:start="115:42" pos:end="115:43">-&gt;</operator><name pos:start="115:44" pos:end="115:48">width</name></name></expr></argument>, <argument pos:start="115:51" pos:end="115:52"><expr pos:start="115:51" pos:end="115:52"><literal type="number" pos:start="115:51" pos:end="115:52">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:82"><expr pos:start="117:13" pos:end="117:81"><name pos:start="117:13" pos:end="117:25"><name pos:start="117:13" pos:end="117:13">l</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:25">rgb_planes</name></name> <operator pos:start="117:27" pos:end="117:27">=</operator> <call pos:start="117:29" pos:end="117:81"><name pos:start="117:29" pos:end="117:37">av_malloc</name><argument_list pos:start="117:38" pos:end="117:81">(<argument pos:start="117:39" pos:end="117:80"><expr pos:start="117:39" pos:end="117:80"><name pos:start="117:39" pos:end="117:51"><name pos:start="117:39" pos:end="117:39">l</name><operator pos:start="117:40" pos:end="117:41">-&gt;</operator><name pos:start="117:42" pos:end="117:51">rgb_stride</name></name> <operator pos:start="117:53" pos:end="117:53">*</operator> <name pos:start="117:55" pos:end="117:67"><name pos:start="117:55" pos:end="117:59">avctx</name><operator pos:start="117:60" pos:end="117:61">-&gt;</operator><name pos:start="117:62" pos:end="117:67">height</name></name> <operator pos:start="117:69" pos:end="117:69">*</operator> <name pos:start="117:71" pos:end="117:76">planes</name> <operator pos:start="117:78" pos:end="117:78">+</operator> <literal type="number" pos:start="117:80" pos:end="117:80">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="119:13" pos:end="125:13"><if pos:start="119:13" pos:end="125:13">if <condition pos:start="119:16" pos:end="119:31">(<expr pos:start="119:17" pos:end="119:30"><operator pos:start="119:17" pos:end="119:17">!</operator><name pos:start="119:18" pos:end="119:30"><name pos:start="119:18" pos:end="119:18">l</name><operator pos:start="119:19" pos:end="119:20">-&gt;</operator><name pos:start="119:21" pos:end="119:30">rgb_planes</name></name></expr>)</condition> <block pos:start="119:33" pos:end="125:13">{<block_content pos:start="121:17" pos:end="123:39">

                <expr_stmt pos:start="121:17" pos:end="121:82"><expr pos:start="121:17" pos:end="121:81"><call pos:start="121:17" pos:end="121:81"><name pos:start="121:17" pos:end="121:22">av_log</name><argument_list pos:start="121:23" pos:end="121:81">(<argument pos:start="121:24" pos:end="121:28"><expr pos:start="121:24" pos:end="121:28"><name pos:start="121:24" pos:end="121:28">avctx</name></expr></argument>, <argument pos:start="121:31" pos:end="121:42"><expr pos:start="121:31" pos:end="121:42"><name pos:start="121:31" pos:end="121:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="121:45" pos:end="121:80"><expr pos:start="121:45" pos:end="121:80"><literal type="string" pos:start="121:45" pos:end="121:80">"cannot allocate temporary buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="123:17" pos:end="123:39">return <expr pos:start="123:24" pos:end="123:38"><call pos:start="123:24" pos:end="123:38"><name pos:start="123:24" pos:end="123:30">AVERROR</name><argument_list pos:start="123:31" pos:end="123:38">(<argument pos:start="123:32" pos:end="123:37"><expr pos:start="123:32" pos:end="123:37"><name pos:start="123:32" pos:end="123:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <for pos:start="129:9" pos:end="131:94">for <control pos:start="129:13" pos:end="129:36">(<init pos:start="129:14" pos:end="129:19"><expr pos:start="129:14" pos:end="129:18"><name pos:start="129:14" pos:end="129:14">i</name> <operator pos:start="129:16" pos:end="129:16">=</operator> <literal type="number" pos:start="129:18" pos:end="129:18">0</literal></expr>;</init> <condition pos:start="129:21" pos:end="129:31"><expr pos:start="129:21" pos:end="129:30"><name pos:start="129:21" pos:end="129:21">i</name> <operator pos:start="129:23" pos:end="129:23">&lt;</operator> <name pos:start="129:25" pos:end="129:30">planes</name></expr>;</condition> <incr pos:start="129:33" pos:end="129:35"><expr pos:start="129:33" pos:end="129:35"><name pos:start="129:33" pos:end="129:33">i</name><operator pos:start="129:34" pos:end="129:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="131:13" pos:end="131:94"><block_content pos:start="131:13" pos:end="131:94">

            <expr_stmt pos:start="131:13" pos:end="131:94"><expr pos:start="131:13" pos:end="131:93"><name pos:start="131:13" pos:end="131:19"><name pos:start="131:13" pos:end="131:16">srcs</name><index pos:start="131:17" pos:end="131:19">[<expr pos:start="131:18" pos:end="131:18"><name pos:start="131:18" pos:end="131:18">i</name></expr>]</index></name> <operator pos:start="131:21" pos:end="131:21">=</operator> <name pos:start="131:23" pos:end="131:35"><name pos:start="131:23" pos:end="131:23">l</name><operator pos:start="131:24" pos:end="131:25">-&gt;</operator><name pos:start="131:26" pos:end="131:35">rgb_planes</name></name> <operator pos:start="131:37" pos:end="131:37">+</operator> <operator pos:start="131:39" pos:end="131:39">(</operator><name pos:start="131:40" pos:end="131:40">i</name> <operator pos:start="131:42" pos:end="131:42">+</operator> <literal type="number" pos:start="131:44" pos:end="131:44">1</literal><operator pos:start="131:45" pos:end="131:45">)</operator> <operator pos:start="131:47" pos:end="131:47">*</operator> <name pos:start="131:49" pos:end="131:61"><name pos:start="131:49" pos:end="131:49">l</name><operator pos:start="131:50" pos:end="131:51">-&gt;</operator><name pos:start="131:52" pos:end="131:61">rgb_stride</name></name> <operator pos:start="131:63" pos:end="131:63">*</operator> <name pos:start="131:65" pos:end="131:77"><name pos:start="131:65" pos:end="131:69">avctx</name><operator pos:start="131:70" pos:end="131:71">-&gt;</operator><name pos:start="131:72" pos:end="131:77">height</name></name> <operator pos:start="131:79" pos:end="131:79">-</operator> <name pos:start="131:81" pos:end="131:93"><name pos:start="131:81" pos:end="131:81">l</name><operator pos:start="131:82" pos:end="131:83">-&gt;</operator><name pos:start="131:84" pos:end="131:93">rgb_stride</name></name></expr>;</expr_stmt></block_content></block></for>

        <if_stmt pos:start="133:9" pos:end="147:9"><if pos:start="133:9" pos:end="147:9">if <condition pos:start="133:12" pos:end="139:49">(<expr pos:start="133:13" pos:end="139:48"><name pos:start="133:13" pos:end="133:21">offset_ry</name> <operator pos:start="133:23" pos:end="133:24">&gt;=</operator> <name pos:start="133:26" pos:end="133:33">buf_size</name> <operator pos:start="133:35" pos:end="133:36">||</operator>

            <name pos:start="135:13" pos:end="135:21">offset_gu</name> <operator pos:start="135:23" pos:end="135:24">&gt;=</operator> <name pos:start="135:26" pos:end="135:33">buf_size</name> <operator pos:start="135:35" pos:end="135:36">||</operator>

            <name pos:start="137:13" pos:end="137:21">offset_bv</name> <operator pos:start="137:23" pos:end="137:24">&gt;=</operator> <name pos:start="137:26" pos:end="137:33">buf_size</name> <operator pos:start="137:35" pos:end="137:36">||</operator>

            <operator pos:start="139:13" pos:end="139:13">(</operator><name pos:start="139:14" pos:end="139:19">planes</name> <operator pos:start="139:21" pos:end="139:22">==</operator> <literal type="number" pos:start="139:24" pos:end="139:24">4</literal> <operator pos:start="139:26" pos:end="139:27">&amp;&amp;</operator> <name pos:start="139:29" pos:end="139:35"><name pos:start="139:29" pos:end="139:32">offs</name><index pos:start="139:33" pos:end="139:35">[<expr pos:start="139:34" pos:end="139:34"><literal type="number" pos:start="139:34" pos:end="139:34">3</literal></expr>]</index></name> <operator pos:start="139:37" pos:end="139:38">&gt;=</operator> <name pos:start="139:40" pos:end="139:47">buf_size</name><operator pos:start="139:48" pos:end="139:48">)</operator></expr>)</condition> <block pos:start="139:51" pos:end="147:9">{<block_content pos:start="141:13" pos:end="145:39">

            <expr_stmt pos:start="141:13" pos:end="143:47"><expr pos:start="141:13" pos:end="143:46"><call pos:start="141:13" pos:end="143:46"><name pos:start="141:13" pos:end="141:18">av_log</name><argument_list pos:start="141:19" pos:end="143:46">(<argument pos:start="141:20" pos:end="141:24"><expr pos:start="141:20" pos:end="141:24"><name pos:start="141:20" pos:end="141:24">avctx</name></expr></argument>, <argument pos:start="141:27" pos:end="141:38"><expr pos:start="141:27" pos:end="141:38"><name pos:start="141:27" pos:end="141:38">AV_LOG_ERROR</name></expr></argument>,

                    <argument pos:start="143:21" pos:end="143:45"><expr pos:start="143:21" pos:end="143:45"><literal type="string" pos:start="143:21" pos:end="143:45">"Invalid frame offsets\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="145:13" pos:end="145:39">return <expr pos:start="145:20" pos:end="145:38"><name pos:start="145:20" pos:end="145:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <for pos:start="149:9" pos:end="157:55">for <control pos:start="149:13" pos:end="149:36">(<init pos:start="149:14" pos:end="149:19"><expr pos:start="149:14" pos:end="149:18"><name pos:start="149:14" pos:end="149:14">i</name> <operator pos:start="149:16" pos:end="149:16">=</operator> <literal type="number" pos:start="149:18" pos:end="149:18">0</literal></expr>;</init> <condition pos:start="149:21" pos:end="149:31"><expr pos:start="149:21" pos:end="149:30"><name pos:start="149:21" pos:end="149:21">i</name> <operator pos:start="149:23" pos:end="149:23">&lt;</operator> <name pos:start="149:25" pos:end="149:30">planes</name></expr>;</condition> <incr pos:start="149:33" pos:end="149:35"><expr pos:start="149:33" pos:end="149:35"><name pos:start="149:33" pos:end="149:33">i</name><operator pos:start="149:34" pos:end="149:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="151:13" pos:end="157:55"><block_content pos:start="151:13" pos:end="157:55">

            <expr_stmt pos:start="151:13" pos:end="157:55"><expr pos:start="151:13" pos:end="157:54"><call pos:start="151:13" pos:end="157:54"><name pos:start="151:13" pos:end="151:34">lag_decode_arith_plane</name><argument_list pos:start="151:35" pos:end="157:54">(<argument pos:start="151:36" pos:end="151:36"><expr pos:start="151:36" pos:end="151:36"><name pos:start="151:36" pos:end="151:36">l</name></expr></argument>, <argument pos:start="151:39" pos:end="151:45"><expr pos:start="151:39" pos:end="151:45"><name pos:start="151:39" pos:end="151:45"><name pos:start="151:39" pos:end="151:42">srcs</name><index pos:start="151:43" pos:end="151:45">[<expr pos:start="151:44" pos:end="151:44"><name pos:start="151:44" pos:end="151:44">i</name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="153:36" pos:end="153:47"><expr pos:start="153:36" pos:end="153:47"><name pos:start="153:36" pos:end="153:47"><name pos:start="153:36" pos:end="153:40">avctx</name><operator pos:start="153:41" pos:end="153:42">-&gt;</operator><name pos:start="153:43" pos:end="153:47">width</name></name></expr></argument>, <argument pos:start="153:50" pos:end="153:62"><expr pos:start="153:50" pos:end="153:62"><name pos:start="153:50" pos:end="153:62"><name pos:start="153:50" pos:end="153:54">avctx</name><operator pos:start="153:55" pos:end="153:56">-&gt;</operator><name pos:start="153:57" pos:end="153:62">height</name></name></expr></argument>,

                                   <argument pos:start="155:36" pos:end="155:49"><expr pos:start="155:36" pos:end="155:49"><operator pos:start="155:36" pos:end="155:36">-</operator><name pos:start="155:37" pos:end="155:49"><name pos:start="155:37" pos:end="155:37">l</name><operator pos:start="155:38" pos:end="155:39">-&gt;</operator><name pos:start="155:40" pos:end="155:49">rgb_stride</name></name></expr></argument>, <argument pos:start="155:52" pos:end="155:64"><expr pos:start="155:52" pos:end="155:64"><name pos:start="155:52" pos:end="155:54">buf</name> <operator pos:start="155:56" pos:end="155:56">+</operator> <name pos:start="155:58" pos:end="155:64"><name pos:start="155:58" pos:end="155:61">offs</name><index pos:start="155:62" pos:end="155:64">[<expr pos:start="155:63" pos:end="155:63"><name pos:start="155:63" pos:end="155:63">i</name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="157:36" pos:end="157:53"><expr pos:start="157:36" pos:end="157:53"><name pos:start="157:36" pos:end="157:43">buf_size</name> <operator pos:start="157:45" pos:end="157:45">-</operator> <name pos:start="157:47" pos:end="157:53"><name pos:start="157:47" pos:end="157:50">offs</name><index pos:start="157:51" pos:end="157:53">[<expr pos:start="157:52" pos:end="157:52"><name pos:start="157:52" pos:end="157:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="159:9" pos:end="159:25"><expr pos:start="159:9" pos:end="159:24"><name pos:start="159:9" pos:end="159:11">dst</name> <operator pos:start="159:13" pos:end="159:13">=</operator> <name pos:start="159:15" pos:end="159:24"><name pos:start="159:15" pos:end="159:15">p</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:21">data</name><index pos:start="159:22" pos:end="159:24">[<expr pos:start="159:23" pos:end="159:23"><literal type="number" pos:start="159:23" pos:end="159:23">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="161:9" pos:end="163:72">for <control pos:start="161:13" pos:end="161:36">(<init pos:start="161:14" pos:end="161:19"><expr pos:start="161:14" pos:end="161:18"><name pos:start="161:14" pos:end="161:14">i</name> <operator pos:start="161:16" pos:end="161:16">=</operator> <literal type="number" pos:start="161:18" pos:end="161:18">0</literal></expr>;</init> <condition pos:start="161:21" pos:end="161:31"><expr pos:start="161:21" pos:end="161:30"><name pos:start="161:21" pos:end="161:21">i</name> <operator pos:start="161:23" pos:end="161:23">&lt;</operator> <name pos:start="161:25" pos:end="161:30">planes</name></expr>;</condition> <incr pos:start="161:33" pos:end="161:35"><expr pos:start="161:33" pos:end="161:35"><name pos:start="161:33" pos:end="161:33">i</name><operator pos:start="161:34" pos:end="161:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="163:13" pos:end="163:72"><block_content pos:start="163:13" pos:end="163:72">

            <expr_stmt pos:start="163:13" pos:end="163:72"><expr pos:start="163:13" pos:end="163:71"><name pos:start="163:13" pos:end="163:19"><name pos:start="163:13" pos:end="163:16">srcs</name><index pos:start="163:17" pos:end="163:19">[<expr pos:start="163:18" pos:end="163:18"><name pos:start="163:18" pos:end="163:18">i</name></expr>]</index></name> <operator pos:start="163:21" pos:end="163:21">=</operator> <name pos:start="163:23" pos:end="163:35"><name pos:start="163:23" pos:end="163:23">l</name><operator pos:start="163:24" pos:end="163:25">-&gt;</operator><name pos:start="163:26" pos:end="163:35">rgb_planes</name></name> <operator pos:start="163:37" pos:end="163:37">+</operator> <name pos:start="163:39" pos:end="163:39">i</name> <operator pos:start="163:41" pos:end="163:41">*</operator> <name pos:start="163:43" pos:end="163:55"><name pos:start="163:43" pos:end="163:43">l</name><operator pos:start="163:44" pos:end="163:45">-&gt;</operator><name pos:start="163:46" pos:end="163:55">rgb_stride</name></name> <operator pos:start="163:57" pos:end="163:57">*</operator> <name pos:start="163:59" pos:end="163:71"><name pos:start="163:59" pos:end="163:63">avctx</name><operator pos:start="163:64" pos:end="163:65">-&gt;</operator><name pos:start="163:66" pos:end="163:71">height</name></name></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="165:9" pos:end="205:9">for <control pos:start="165:13" pos:end="165:43">(<init pos:start="165:14" pos:end="165:19"><expr pos:start="165:14" pos:end="165:18"><name pos:start="165:14" pos:end="165:14">j</name> <operator pos:start="165:16" pos:end="165:16">=</operator> <literal type="number" pos:start="165:18" pos:end="165:18">0</literal></expr>;</init> <condition pos:start="165:21" pos:end="165:38"><expr pos:start="165:21" pos:end="165:37"><name pos:start="165:21" pos:end="165:21">j</name> <operator pos:start="165:23" pos:end="165:23">&lt;</operator> <name pos:start="165:25" pos:end="165:37"><name pos:start="165:25" pos:end="165:29">avctx</name><operator pos:start="165:30" pos:end="165:31">-&gt;</operator><name pos:start="165:32" pos:end="165:37">height</name></name></expr>;</condition> <incr pos:start="165:40" pos:end="165:42"><expr pos:start="165:40" pos:end="165:42"><name pos:start="165:40" pos:end="165:40">j</name><operator pos:start="165:41" pos:end="165:42">++</operator></expr></incr>)</control> <block pos:start="165:45" pos:end="205:9">{<block_content pos:start="167:13" pos:end="203:41">

            <for pos:start="167:13" pos:end="197:13">for <control pos:start="167:17" pos:end="167:46">(<init pos:start="167:18" pos:end="167:23"><expr pos:start="167:18" pos:end="167:22"><name pos:start="167:18" pos:end="167:18">i</name> <operator pos:start="167:20" pos:end="167:20">=</operator> <literal type="number" pos:start="167:22" pos:end="167:22">0</literal></expr>;</init> <condition pos:start="167:25" pos:end="167:41"><expr pos:start="167:25" pos:end="167:40"><name pos:start="167:25" pos:end="167:25">i</name> <operator pos:start="167:27" pos:end="167:27">&lt;</operator> <name pos:start="167:29" pos:end="167:40"><name pos:start="167:29" pos:end="167:33">avctx</name><operator pos:start="167:34" pos:end="167:35">-&gt;</operator><name pos:start="167:36" pos:end="167:40">width</name></name></expr>;</condition> <incr pos:start="167:43" pos:end="167:45"><expr pos:start="167:43" pos:end="167:45"><name pos:start="167:43" pos:end="167:43">i</name><operator pos:start="167:44" pos:end="167:45">++</operator></expr></incr>)</control> <block pos:start="167:48" pos:end="197:13">{<block_content pos:start="169:17" pos:end="195:17">

                <decl_stmt pos:start="169:17" pos:end="169:35"><decl pos:start="169:17" pos:end="169:25"><type pos:start="169:17" pos:end="169:23"><name pos:start="169:17" pos:end="169:23">uint8_t</name></type> <name pos:start="169:25" pos:end="169:25">r</name></decl>, <decl pos:start="169:28" pos:end="169:28"><type ref="prev" pos:start="169:17" pos:end="169:23"/><name pos:start="169:28" pos:end="169:28">g</name></decl>, <decl pos:start="169:31" pos:end="169:31"><type ref="prev" pos:start="169:17" pos:end="169:23"/><name pos:start="169:31" pos:end="169:31">b</name></decl>, <decl pos:start="169:34" pos:end="169:34"><type ref="prev" pos:start="169:17" pos:end="169:23"/><name pos:start="169:34" pos:end="169:34">a</name></decl>;</decl_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:31"><expr pos:start="171:17" pos:end="171:30"><name pos:start="171:17" pos:end="171:17">r</name> <operator pos:start="171:19" pos:end="171:19">=</operator> <name pos:start="171:21" pos:end="171:30"><name pos:start="171:21" pos:end="171:24">srcs</name><index pos:start="171:25" pos:end="171:27">[<expr pos:start="171:26" pos:end="171:26"><literal type="number" pos:start="171:26" pos:end="171:26">0</literal></expr>]</index><index pos:start="171:28" pos:end="171:30">[<expr pos:start="171:29" pos:end="171:29"><name pos:start="171:29" pos:end="171:29">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:31"><expr pos:start="173:17" pos:end="173:30"><name pos:start="173:17" pos:end="173:17">g</name> <operator pos:start="173:19" pos:end="173:19">=</operator> <name pos:start="173:21" pos:end="173:30"><name pos:start="173:21" pos:end="173:24">srcs</name><index pos:start="173:25" pos:end="173:27">[<expr pos:start="173:26" pos:end="173:26"><literal type="number" pos:start="173:26" pos:end="173:26">1</literal></expr>]</index><index pos:start="173:28" pos:end="173:30">[<expr pos:start="173:29" pos:end="173:29"><name pos:start="173:29" pos:end="173:29">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:31"><expr pos:start="175:17" pos:end="175:30"><name pos:start="175:17" pos:end="175:17">b</name> <operator pos:start="175:19" pos:end="175:19">=</operator> <name pos:start="175:21" pos:end="175:30"><name pos:start="175:21" pos:end="175:24">srcs</name><index pos:start="175:25" pos:end="175:27">[<expr pos:start="175:26" pos:end="175:26"><literal type="number" pos:start="175:26" pos:end="175:26">2</literal></expr>]</index><index pos:start="175:28" pos:end="175:30">[<expr pos:start="175:29" pos:end="175:29"><name pos:start="175:29" pos:end="175:29">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:23"><expr pos:start="177:17" pos:end="177:22"><name pos:start="177:17" pos:end="177:17">r</name> <operator pos:start="177:19" pos:end="177:20">+=</operator> <name pos:start="177:22" pos:end="177:22">g</name></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:23"><expr pos:start="179:17" pos:end="179:22"><name pos:start="179:17" pos:end="179:17">b</name> <operator pos:start="179:19" pos:end="179:20">+=</operator> <name pos:start="179:22" pos:end="179:22">g</name></expr>;</expr_stmt>

                <if_stmt pos:start="181:17" pos:end="195:17"><if pos:start="181:17" pos:end="187:17">if <condition pos:start="181:20" pos:end="181:50">(<expr pos:start="181:21" pos:end="181:49"><name pos:start="181:21" pos:end="181:29">frametype</name> <operator pos:start="181:31" pos:end="181:32">==</operator> <name pos:start="181:34" pos:end="181:49">FRAME_ARITH_RGBA</name></expr>)</condition> <block pos:start="181:52" pos:end="187:17">{<block_content pos:start="183:21" pos:end="185:62">

                    <expr_stmt pos:start="183:21" pos:end="183:35"><expr pos:start="183:21" pos:end="183:34"><name pos:start="183:21" pos:end="183:21">a</name> <operator pos:start="183:23" pos:end="183:23">=</operator> <name pos:start="183:25" pos:end="183:34"><name pos:start="183:25" pos:end="183:28">srcs</name><index pos:start="183:29" pos:end="183:31">[<expr pos:start="183:30" pos:end="183:30"><literal type="number" pos:start="183:30" pos:end="183:30">3</literal></expr>]</index><index pos:start="183:32" pos:end="183:34">[<expr pos:start="183:33" pos:end="183:33"><name pos:start="183:33" pos:end="183:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="185:21" pos:end="185:62"><expr pos:start="185:21" pos:end="185:61"><call pos:start="185:21" pos:end="185:61"><name pos:start="185:21" pos:end="185:27">AV_WN32</name><argument_list pos:start="185:28" pos:end="185:61">(<argument pos:start="185:29" pos:end="185:39"><expr pos:start="185:29" pos:end="185:39"><name pos:start="185:29" pos:end="185:31">dst</name> <operator pos:start="185:33" pos:end="185:33">+</operator> <name pos:start="185:35" pos:end="185:35">i</name> <operator pos:start="185:37" pos:end="185:37">*</operator> <literal type="number" pos:start="185:39" pos:end="185:39">4</literal></expr></argument>, <argument pos:start="185:42" pos:end="185:60"><expr pos:start="185:42" pos:end="185:60"><call pos:start="185:42" pos:end="185:60"><name pos:start="185:42" pos:end="185:48">MKBETAG</name><argument_list pos:start="185:49" pos:end="185:60">(<argument pos:start="185:50" pos:end="185:50"><expr pos:start="185:50" pos:end="185:50"><name pos:start="185:50" pos:end="185:50">a</name></expr></argument>, <argument pos:start="185:53" pos:end="185:53"><expr pos:start="185:53" pos:end="185:53"><name pos:start="185:53" pos:end="185:53">r</name></expr></argument>, <argument pos:start="185:56" pos:end="185:56"><expr pos:start="185:56" pos:end="185:56"><name pos:start="185:56" pos:end="185:56">g</name></expr></argument>, <argument pos:start="185:59" pos:end="185:59"><expr pos:start="185:59" pos:end="185:59"><name pos:start="185:59" pos:end="185:59">b</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="187:19" pos:end="195:17">else <block pos:start="187:24" pos:end="195:17">{<block_content pos:start="189:21" pos:end="193:39">

                    <expr_stmt pos:start="189:21" pos:end="189:39"><expr pos:start="189:21" pos:end="189:38"><name pos:start="189:21" pos:end="189:34"><name pos:start="189:21" pos:end="189:23">dst</name><index pos:start="189:24" pos:end="189:34">[<expr pos:start="189:25" pos:end="189:33"><name pos:start="189:25" pos:end="189:25">i</name> <operator pos:start="189:27" pos:end="189:27">*</operator> <literal type="number" pos:start="189:29" pos:end="189:29">3</literal> <operator pos:start="189:31" pos:end="189:31">+</operator> <literal type="number" pos:start="189:33" pos:end="189:33">0</literal></expr>]</index></name> <operator pos:start="189:36" pos:end="189:36">=</operator> <name pos:start="189:38" pos:end="189:38">r</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="191:21" pos:end="191:39"><expr pos:start="191:21" pos:end="191:38"><name pos:start="191:21" pos:end="191:34"><name pos:start="191:21" pos:end="191:23">dst</name><index pos:start="191:24" pos:end="191:34">[<expr pos:start="191:25" pos:end="191:33"><name pos:start="191:25" pos:end="191:25">i</name> <operator pos:start="191:27" pos:end="191:27">*</operator> <literal type="number" pos:start="191:29" pos:end="191:29">3</literal> <operator pos:start="191:31" pos:end="191:31">+</operator> <literal type="number" pos:start="191:33" pos:end="191:33">1</literal></expr>]</index></name> <operator pos:start="191:36" pos:end="191:36">=</operator> <name pos:start="191:38" pos:end="191:38">g</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:39"><expr pos:start="193:21" pos:end="193:38"><name pos:start="193:21" pos:end="193:34"><name pos:start="193:21" pos:end="193:23">dst</name><index pos:start="193:24" pos:end="193:34">[<expr pos:start="193:25" pos:end="193:33"><name pos:start="193:25" pos:end="193:25">i</name> <operator pos:start="193:27" pos:end="193:27">*</operator> <literal type="number" pos:start="193:29" pos:end="193:29">3</literal> <operator pos:start="193:31" pos:end="193:31">+</operator> <literal type="number" pos:start="193:33" pos:end="193:33">2</literal></expr>]</index></name> <operator pos:start="193:36" pos:end="193:36">=</operator> <name pos:start="193:38" pos:end="193:38">b</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="199:13" pos:end="199:34"><expr pos:start="199:13" pos:end="199:33"><name pos:start="199:13" pos:end="199:15">dst</name> <operator pos:start="199:17" pos:end="199:18">+=</operator> <name pos:start="199:20" pos:end="199:33"><name pos:start="199:20" pos:end="199:20">p</name><operator pos:start="199:21" pos:end="199:22">-&gt;</operator><name pos:start="199:23" pos:end="199:30">linesize</name><index pos:start="199:31" pos:end="199:33">[<expr pos:start="199:32" pos:end="199:32"><literal type="number" pos:start="199:32" pos:end="199:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="201:13" pos:end="203:41">for <control pos:start="201:17" pos:end="201:40">(<init pos:start="201:18" pos:end="201:23"><expr pos:start="201:18" pos:end="201:22"><name pos:start="201:18" pos:end="201:18">i</name> <operator pos:start="201:20" pos:end="201:20">=</operator> <literal type="number" pos:start="201:22" pos:end="201:22">0</literal></expr>;</init> <condition pos:start="201:25" pos:end="201:35"><expr pos:start="201:25" pos:end="201:34"><name pos:start="201:25" pos:end="201:25">i</name> <operator pos:start="201:27" pos:end="201:27">&lt;</operator> <name pos:start="201:29" pos:end="201:34">planes</name></expr>;</condition> <incr pos:start="201:37" pos:end="201:39"><expr pos:start="201:37" pos:end="201:39"><name pos:start="201:37" pos:end="201:37">i</name><operator pos:start="201:38" pos:end="201:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="203:17" pos:end="203:41"><block_content pos:start="203:17" pos:end="203:41">

                <expr_stmt pos:start="203:17" pos:end="203:41"><expr pos:start="203:17" pos:end="203:40"><name pos:start="203:17" pos:end="203:23"><name pos:start="203:17" pos:end="203:20">srcs</name><index pos:start="203:21" pos:end="203:23">[<expr pos:start="203:22" pos:end="203:22"><name pos:start="203:22" pos:end="203:22">i</name></expr>]</index></name> <operator pos:start="203:25" pos:end="203:26">+=</operator> <name pos:start="203:28" pos:end="203:40"><name pos:start="203:28" pos:end="203:28">l</name><operator pos:start="203:29" pos:end="203:30">-&gt;</operator><name pos:start="203:31" pos:end="203:40">rgb_stride</name></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>

        <break pos:start="207:9" pos:end="207:14">break;</break>

    <case pos:start="209:5" pos:end="209:26">case <expr pos:start="209:10" pos:end="209:25"><name pos:start="209:10" pos:end="209:25">FRAME_ARITH_YUY2</name></expr>:</case>

        <expr_stmt pos:start="211:9" pos:end="211:44"><expr pos:start="211:9" pos:end="211:43"><name pos:start="211:9" pos:end="211:22"><name pos:start="211:9" pos:end="211:13">avctx</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:22">pix_fmt</name></name> <operator pos:start="211:24" pos:end="211:24">=</operator> <name pos:start="211:26" pos:end="211:43">AV_PIX_FMT_YUV422P</name></expr>;</expr_stmt>



        <if_stmt pos:start="215:9" pos:end="221:9"><if pos:start="215:9" pos:end="221:9">if <condition pos:start="215:12" pos:end="215:55">(<expr pos:start="215:13" pos:end="215:54"><call pos:start="215:13" pos:end="215:50"><name pos:start="215:13" pos:end="215:32">ff_thread_get_buffer</name><argument_list pos:start="215:33" pos:end="215:50">(<argument pos:start="215:34" pos:end="215:38"><expr pos:start="215:34" pos:end="215:38"><name pos:start="215:34" pos:end="215:38">avctx</name></expr></argument>, <argument pos:start="215:41" pos:end="215:46"><expr pos:start="215:41" pos:end="215:46"><operator pos:start="215:41" pos:end="215:41">&amp;</operator><name pos:start="215:42" pos:end="215:46">frame</name></expr></argument>, <argument pos:start="215:49" pos:end="215:49"><expr pos:start="215:49" pos:end="215:49"><literal type="number" pos:start="215:49" pos:end="215:49">0</literal></expr></argument>)</argument_list></call> <operator pos:start="215:52" pos:end="215:52">&lt;</operator> <literal type="number" pos:start="215:54" pos:end="215:54">0</literal></expr>)</condition> <block pos:start="215:57" pos:end="221:9">{<block_content pos:start="217:13" pos:end="219:22">

            <expr_stmt pos:start="217:13" pos:end="217:65"><expr pos:start="217:13" pos:end="217:64"><call pos:start="217:13" pos:end="217:64"><name pos:start="217:13" pos:end="217:18">av_log</name><argument_list pos:start="217:19" pos:end="217:64">(<argument pos:start="217:20" pos:end="217:24"><expr pos:start="217:20" pos:end="217:24"><name pos:start="217:20" pos:end="217:24">avctx</name></expr></argument>, <argument pos:start="217:27" pos:end="217:38"><expr pos:start="217:27" pos:end="217:38"><name pos:start="217:27" pos:end="217:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="217:41" pos:end="217:63"><expr pos:start="217:41" pos:end="217:63"><literal type="string" pos:start="217:41" pos:end="217:63">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="219:13" pos:end="219:22">return <expr pos:start="219:20" pos:end="219:21"><operator pos:start="219:20" pos:end="219:20">-</operator><literal type="number" pos:start="219:21" pos:end="219:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="225:9" pos:end="237:9"><if pos:start="225:9" pos:end="237:9">if <condition pos:start="225:12" pos:end="229:34">(<expr pos:start="225:13" pos:end="229:33"><name pos:start="225:13" pos:end="225:21">offset_ry</name> <operator pos:start="225:23" pos:end="225:24">&gt;=</operator> <name pos:start="225:26" pos:end="225:33">buf_size</name> <operator pos:start="225:35" pos:end="225:36">||</operator>

            <name pos:start="227:13" pos:end="227:21">offset_gu</name> <operator pos:start="227:23" pos:end="227:24">&gt;=</operator> <name pos:start="227:26" pos:end="227:33">buf_size</name> <operator pos:start="227:35" pos:end="227:36">||</operator>

            <name pos:start="229:13" pos:end="229:21">offset_bv</name> <operator pos:start="229:23" pos:end="229:24">&gt;=</operator> <name pos:start="229:26" pos:end="229:33">buf_size</name></expr>)</condition> <block pos:start="229:36" pos:end="237:9">{<block_content pos:start="231:13" pos:end="235:39">

            <expr_stmt pos:start="231:13" pos:end="233:46"><expr pos:start="231:13" pos:end="233:45"><call pos:start="231:13" pos:end="233:45"><name pos:start="231:13" pos:end="231:18">av_log</name><argument_list pos:start="231:19" pos:end="233:45">(<argument pos:start="231:20" pos:end="231:24"><expr pos:start="231:20" pos:end="231:24"><name pos:start="231:20" pos:end="231:24">avctx</name></expr></argument>, <argument pos:start="231:27" pos:end="231:38"><expr pos:start="231:27" pos:end="231:38"><name pos:start="231:27" pos:end="231:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="233:20" pos:end="233:44"><expr pos:start="233:20" pos:end="233:44"><literal type="string" pos:start="233:20" pos:end="233:44">"Invalid frame offsets\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="235:13" pos:end="235:39">return <expr pos:start="235:20" pos:end="235:38"><name pos:start="235:20" pos:end="235:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="241:9" pos:end="245:53"><expr pos:start="241:9" pos:end="245:52"><call pos:start="241:9" pos:end="245:52"><name pos:start="241:9" pos:end="241:30">lag_decode_arith_plane</name><argument_list pos:start="241:31" pos:end="245:52">(<argument pos:start="241:32" pos:end="241:32"><expr pos:start="241:32" pos:end="241:32"><name pos:start="241:32" pos:end="241:32">l</name></expr></argument>, <argument pos:start="241:35" pos:end="241:44"><expr pos:start="241:35" pos:end="241:44"><name pos:start="241:35" pos:end="241:44"><name pos:start="241:35" pos:end="241:35">p</name><operator pos:start="241:36" pos:end="241:37">-&gt;</operator><name pos:start="241:38" pos:end="241:41">data</name><index pos:start="241:42" pos:end="241:44">[<expr pos:start="241:43" pos:end="241:43"><literal type="number" pos:start="241:43" pos:end="241:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="241:47" pos:end="241:58"><expr pos:start="241:47" pos:end="241:58"><name pos:start="241:47" pos:end="241:58"><name pos:start="241:47" pos:end="241:51">avctx</name><operator pos:start="241:52" pos:end="241:53">-&gt;</operator><name pos:start="241:54" pos:end="241:58">width</name></name></expr></argument>, <argument pos:start="241:61" pos:end="241:73"><expr pos:start="241:61" pos:end="241:73"><name pos:start="241:61" pos:end="241:73"><name pos:start="241:61" pos:end="241:65">avctx</name><operator pos:start="241:66" pos:end="241:67">-&gt;</operator><name pos:start="241:68" pos:end="241:73">height</name></name></expr></argument>,

                               <argument pos:start="243:32" pos:end="243:45"><expr pos:start="243:32" pos:end="243:45"><name pos:start="243:32" pos:end="243:45"><name pos:start="243:32" pos:end="243:32">p</name><operator pos:start="243:33" pos:end="243:34">-&gt;</operator><name pos:start="243:35" pos:end="243:42">linesize</name><index pos:start="243:43" pos:end="243:45">[<expr pos:start="243:44" pos:end="243:44"><literal type="number" pos:start="243:44" pos:end="243:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="243:48" pos:end="243:62"><expr pos:start="243:48" pos:end="243:62"><name pos:start="243:48" pos:end="243:50">buf</name> <operator pos:start="243:52" pos:end="243:52">+</operator> <name pos:start="243:54" pos:end="243:62">offset_ry</name></expr></argument>,

                               <argument pos:start="245:32" pos:end="245:51"><expr pos:start="245:32" pos:end="245:51"><name pos:start="245:32" pos:end="245:39">buf_size</name> <operator pos:start="245:41" pos:end="245:41">-</operator> <name pos:start="245:43" pos:end="245:51">offset_ry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="251:70"><expr pos:start="247:9" pos:end="251:69"><call pos:start="247:9" pos:end="251:69"><name pos:start="247:9" pos:end="247:30">lag_decode_arith_plane</name><argument_list pos:start="247:31" pos:end="251:69">(<argument pos:start="247:32" pos:end="247:32"><expr pos:start="247:32" pos:end="247:32"><name pos:start="247:32" pos:end="247:32">l</name></expr></argument>, <argument pos:start="247:35" pos:end="247:44"><expr pos:start="247:35" pos:end="247:44"><name pos:start="247:35" pos:end="247:44"><name pos:start="247:35" pos:end="247:35">p</name><operator pos:start="247:36" pos:end="247:37">-&gt;</operator><name pos:start="247:38" pos:end="247:41">data</name><index pos:start="247:42" pos:end="247:44">[<expr pos:start="247:43" pos:end="247:43"><literal type="number" pos:start="247:43" pos:end="247:43">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="247:47" pos:end="247:62"><expr pos:start="247:47" pos:end="247:62"><name pos:start="247:47" pos:end="247:58"><name pos:start="247:47" pos:end="247:51">avctx</name><operator pos:start="247:52" pos:end="247:53">-&gt;</operator><name pos:start="247:54" pos:end="247:58">width</name></name> <operator pos:start="247:60" pos:end="247:60">/</operator> <literal type="number" pos:start="247:62" pos:end="247:62">2</literal></expr></argument>,

                               <argument pos:start="249:32" pos:end="249:44"><expr pos:start="249:32" pos:end="249:44"><name pos:start="249:32" pos:end="249:44"><name pos:start="249:32" pos:end="249:36">avctx</name><operator pos:start="249:37" pos:end="249:38">-&gt;</operator><name pos:start="249:39" pos:end="249:44">height</name></name></expr></argument>, <argument pos:start="249:47" pos:end="249:60"><expr pos:start="249:47" pos:end="249:60"><name pos:start="249:47" pos:end="249:60"><name pos:start="249:47" pos:end="249:47">p</name><operator pos:start="249:48" pos:end="249:49">-&gt;</operator><name pos:start="249:50" pos:end="249:57">linesize</name><index pos:start="249:58" pos:end="249:60">[<expr pos:start="249:59" pos:end="249:59"><literal type="number" pos:start="249:59" pos:end="249:59">1</literal></expr>]</index></name></expr></argument>,

                               <argument pos:start="251:32" pos:end="251:46"><expr pos:start="251:32" pos:end="251:46"><name pos:start="251:32" pos:end="251:34">buf</name> <operator pos:start="251:36" pos:end="251:36">+</operator> <name pos:start="251:38" pos:end="251:46">offset_gu</name></expr></argument>, <argument pos:start="251:49" pos:end="251:68"><expr pos:start="251:49" pos:end="251:68"><name pos:start="251:49" pos:end="251:56">buf_size</name> <operator pos:start="251:58" pos:end="251:58">-</operator> <name pos:start="251:60" pos:end="251:68">offset_gu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="253:9" pos:end="257:70"><expr pos:start="253:9" pos:end="257:69"><call pos:start="253:9" pos:end="257:69"><name pos:start="253:9" pos:end="253:30">lag_decode_arith_plane</name><argument_list pos:start="253:31" pos:end="257:69">(<argument pos:start="253:32" pos:end="253:32"><expr pos:start="253:32" pos:end="253:32"><name pos:start="253:32" pos:end="253:32">l</name></expr></argument>, <argument pos:start="253:35" pos:end="253:44"><expr pos:start="253:35" pos:end="253:44"><name pos:start="253:35" pos:end="253:44"><name pos:start="253:35" pos:end="253:35">p</name><operator pos:start="253:36" pos:end="253:37">-&gt;</operator><name pos:start="253:38" pos:end="253:41">data</name><index pos:start="253:42" pos:end="253:44">[<expr pos:start="253:43" pos:end="253:43"><literal type="number" pos:start="253:43" pos:end="253:43">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="253:47" pos:end="253:62"><expr pos:start="253:47" pos:end="253:62"><name pos:start="253:47" pos:end="253:58"><name pos:start="253:47" pos:end="253:51">avctx</name><operator pos:start="253:52" pos:end="253:53">-&gt;</operator><name pos:start="253:54" pos:end="253:58">width</name></name> <operator pos:start="253:60" pos:end="253:60">/</operator> <literal type="number" pos:start="253:62" pos:end="253:62">2</literal></expr></argument>,

                               <argument pos:start="255:32" pos:end="255:44"><expr pos:start="255:32" pos:end="255:44"><name pos:start="255:32" pos:end="255:44"><name pos:start="255:32" pos:end="255:36">avctx</name><operator pos:start="255:37" pos:end="255:38">-&gt;</operator><name pos:start="255:39" pos:end="255:44">height</name></name></expr></argument>, <argument pos:start="255:47" pos:end="255:60"><expr pos:start="255:47" pos:end="255:60"><name pos:start="255:47" pos:end="255:60"><name pos:start="255:47" pos:end="255:47">p</name><operator pos:start="255:48" pos:end="255:49">-&gt;</operator><name pos:start="255:50" pos:end="255:57">linesize</name><index pos:start="255:58" pos:end="255:60">[<expr pos:start="255:59" pos:end="255:59"><literal type="number" pos:start="255:59" pos:end="255:59">2</literal></expr>]</index></name></expr></argument>,

                               <argument pos:start="257:32" pos:end="257:46"><expr pos:start="257:32" pos:end="257:46"><name pos:start="257:32" pos:end="257:34">buf</name> <operator pos:start="257:36" pos:end="257:36">+</operator> <name pos:start="257:38" pos:end="257:46">offset_bv</name></expr></argument>, <argument pos:start="257:49" pos:end="257:68"><expr pos:start="257:49" pos:end="257:68"><name pos:start="257:49" pos:end="257:56">buf_size</name> <operator pos:start="257:58" pos:end="257:58">-</operator> <name pos:start="257:60" pos:end="257:68">offset_bv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="259:9" pos:end="259:14">break;</break>

    <case pos:start="261:5" pos:end="261:26">case <expr pos:start="261:10" pos:end="261:25"><name pos:start="261:10" pos:end="261:25">FRAME_ARITH_YV12</name></expr>:</case>

        <expr_stmt pos:start="263:9" pos:end="263:44"><expr pos:start="263:9" pos:end="263:43"><name pos:start="263:9" pos:end="263:22"><name pos:start="263:9" pos:end="263:13">avctx</name><operator pos:start="263:14" pos:end="263:15">-&gt;</operator><name pos:start="263:16" pos:end="263:22">pix_fmt</name></name> <operator pos:start="263:24" pos:end="263:24">=</operator> <name pos:start="263:26" pos:end="263:43">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt>



        <if_stmt pos:start="267:9" pos:end="273:9"><if pos:start="267:9" pos:end="273:9">if <condition pos:start="267:12" pos:end="267:55">(<expr pos:start="267:13" pos:end="267:54"><call pos:start="267:13" pos:end="267:50"><name pos:start="267:13" pos:end="267:32">ff_thread_get_buffer</name><argument_list pos:start="267:33" pos:end="267:50">(<argument pos:start="267:34" pos:end="267:38"><expr pos:start="267:34" pos:end="267:38"><name pos:start="267:34" pos:end="267:38">avctx</name></expr></argument>, <argument pos:start="267:41" pos:end="267:46"><expr pos:start="267:41" pos:end="267:46"><operator pos:start="267:41" pos:end="267:41">&amp;</operator><name pos:start="267:42" pos:end="267:46">frame</name></expr></argument>, <argument pos:start="267:49" pos:end="267:49"><expr pos:start="267:49" pos:end="267:49"><literal type="number" pos:start="267:49" pos:end="267:49">0</literal></expr></argument>)</argument_list></call> <operator pos:start="267:52" pos:end="267:52">&lt;</operator> <literal type="number" pos:start="267:54" pos:end="267:54">0</literal></expr>)</condition> <block pos:start="267:57" pos:end="273:9">{<block_content pos:start="269:13" pos:end="271:22">

            <expr_stmt pos:start="269:13" pos:end="269:65"><expr pos:start="269:13" pos:end="269:64"><call pos:start="269:13" pos:end="269:64"><name pos:start="269:13" pos:end="269:18">av_log</name><argument_list pos:start="269:19" pos:end="269:64">(<argument pos:start="269:20" pos:end="269:24"><expr pos:start="269:20" pos:end="269:24"><name pos:start="269:20" pos:end="269:24">avctx</name></expr></argument>, <argument pos:start="269:27" pos:end="269:38"><expr pos:start="269:27" pos:end="269:38"><name pos:start="269:27" pos:end="269:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="269:41" pos:end="269:63"><expr pos:start="269:41" pos:end="269:63"><literal type="string" pos:start="269:41" pos:end="269:63">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="271:13" pos:end="271:22">return <expr pos:start="271:20" pos:end="271:21"><operator pos:start="271:20" pos:end="271:20">-</operator><literal type="number" pos:start="271:21" pos:end="271:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="277:9" pos:end="289:9"><if pos:start="277:9" pos:end="289:9">if <condition pos:start="277:12" pos:end="281:34">(<expr pos:start="277:13" pos:end="281:33"><name pos:start="277:13" pos:end="277:21">offset_ry</name> <operator pos:start="277:23" pos:end="277:24">&gt;=</operator> <name pos:start="277:26" pos:end="277:33">buf_size</name> <operator pos:start="277:35" pos:end="277:36">||</operator>

            <name pos:start="279:13" pos:end="279:21">offset_gu</name> <operator pos:start="279:23" pos:end="279:24">&gt;=</operator> <name pos:start="279:26" pos:end="279:33">buf_size</name> <operator pos:start="279:35" pos:end="279:36">||</operator>

            <name pos:start="281:13" pos:end="281:21">offset_bv</name> <operator pos:start="281:23" pos:end="281:24">&gt;=</operator> <name pos:start="281:26" pos:end="281:33">buf_size</name></expr>)</condition> <block pos:start="281:36" pos:end="289:9">{<block_content pos:start="283:13" pos:end="287:39">

            <expr_stmt pos:start="283:13" pos:end="285:46"><expr pos:start="283:13" pos:end="285:45"><call pos:start="283:13" pos:end="285:45"><name pos:start="283:13" pos:end="283:18">av_log</name><argument_list pos:start="283:19" pos:end="285:45">(<argument pos:start="283:20" pos:end="283:24"><expr pos:start="283:20" pos:end="283:24"><name pos:start="283:20" pos:end="283:24">avctx</name></expr></argument>, <argument pos:start="283:27" pos:end="283:38"><expr pos:start="283:27" pos:end="283:38"><name pos:start="283:27" pos:end="283:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="285:20" pos:end="285:44"><expr pos:start="285:20" pos:end="285:44"><literal type="string" pos:start="285:20" pos:end="285:44">"Invalid frame offsets\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="287:13" pos:end="287:39">return <expr pos:start="287:20" pos:end="287:38"><name pos:start="287:20" pos:end="287:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="293:9" pos:end="297:53"><expr pos:start="293:9" pos:end="297:52"><call pos:start="293:9" pos:end="297:52"><name pos:start="293:9" pos:end="293:30">lag_decode_arith_plane</name><argument_list pos:start="293:31" pos:end="297:52">(<argument pos:start="293:32" pos:end="293:32"><expr pos:start="293:32" pos:end="293:32"><name pos:start="293:32" pos:end="293:32">l</name></expr></argument>, <argument pos:start="293:35" pos:end="293:44"><expr pos:start="293:35" pos:end="293:44"><name pos:start="293:35" pos:end="293:44"><name pos:start="293:35" pos:end="293:35">p</name><operator pos:start="293:36" pos:end="293:37">-&gt;</operator><name pos:start="293:38" pos:end="293:41">data</name><index pos:start="293:42" pos:end="293:44">[<expr pos:start="293:43" pos:end="293:43"><literal type="number" pos:start="293:43" pos:end="293:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="293:47" pos:end="293:58"><expr pos:start="293:47" pos:end="293:58"><name pos:start="293:47" pos:end="293:58"><name pos:start="293:47" pos:end="293:51">avctx</name><operator pos:start="293:52" pos:end="293:53">-&gt;</operator><name pos:start="293:54" pos:end="293:58">width</name></name></expr></argument>, <argument pos:start="293:61" pos:end="293:73"><expr pos:start="293:61" pos:end="293:73"><name pos:start="293:61" pos:end="293:73"><name pos:start="293:61" pos:end="293:65">avctx</name><operator pos:start="293:66" pos:end="293:67">-&gt;</operator><name pos:start="293:68" pos:end="293:73">height</name></name></expr></argument>,

                               <argument pos:start="295:32" pos:end="295:45"><expr pos:start="295:32" pos:end="295:45"><name pos:start="295:32" pos:end="295:45"><name pos:start="295:32" pos:end="295:32">p</name><operator pos:start="295:33" pos:end="295:34">-&gt;</operator><name pos:start="295:35" pos:end="295:42">linesize</name><index pos:start="295:43" pos:end="295:45">[<expr pos:start="295:44" pos:end="295:44"><literal type="number" pos:start="295:44" pos:end="295:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="295:48" pos:end="295:62"><expr pos:start="295:48" pos:end="295:62"><name pos:start="295:48" pos:end="295:50">buf</name> <operator pos:start="295:52" pos:end="295:52">+</operator> <name pos:start="295:54" pos:end="295:62">offset_ry</name></expr></argument>,

                               <argument pos:start="297:32" pos:end="297:51"><expr pos:start="297:32" pos:end="297:51"><name pos:start="297:32" pos:end="297:39">buf_size</name> <operator pos:start="297:41" pos:end="297:41">-</operator> <name pos:start="297:43" pos:end="297:51">offset_ry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="303:70"><expr pos:start="299:9" pos:end="303:69"><call pos:start="299:9" pos:end="303:69"><name pos:start="299:9" pos:end="299:30">lag_decode_arith_plane</name><argument_list pos:start="299:31" pos:end="303:69">(<argument pos:start="299:32" pos:end="299:32"><expr pos:start="299:32" pos:end="299:32"><name pos:start="299:32" pos:end="299:32">l</name></expr></argument>, <argument pos:start="299:35" pos:end="299:44"><expr pos:start="299:35" pos:end="299:44"><name pos:start="299:35" pos:end="299:44"><name pos:start="299:35" pos:end="299:35">p</name><operator pos:start="299:36" pos:end="299:37">-&gt;</operator><name pos:start="299:38" pos:end="299:41">data</name><index pos:start="299:42" pos:end="299:44">[<expr pos:start="299:43" pos:end="299:43"><literal type="number" pos:start="299:43" pos:end="299:43">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="299:47" pos:end="299:62"><expr pos:start="299:47" pos:end="299:62"><name pos:start="299:47" pos:end="299:58"><name pos:start="299:47" pos:end="299:51">avctx</name><operator pos:start="299:52" pos:end="299:53">-&gt;</operator><name pos:start="299:54" pos:end="299:58">width</name></name> <operator pos:start="299:60" pos:end="299:60">/</operator> <literal type="number" pos:start="299:62" pos:end="299:62">2</literal></expr></argument>,

                               <argument pos:start="301:32" pos:end="301:48"><expr pos:start="301:32" pos:end="301:48"><name pos:start="301:32" pos:end="301:44"><name pos:start="301:32" pos:end="301:36">avctx</name><operator pos:start="301:37" pos:end="301:38">-&gt;</operator><name pos:start="301:39" pos:end="301:44">height</name></name> <operator pos:start="301:46" pos:end="301:46">/</operator> <literal type="number" pos:start="301:48" pos:end="301:48">2</literal></expr></argument>, <argument pos:start="301:51" pos:end="301:64"><expr pos:start="301:51" pos:end="301:64"><name pos:start="301:51" pos:end="301:64"><name pos:start="301:51" pos:end="301:51">p</name><operator pos:start="301:52" pos:end="301:53">-&gt;</operator><name pos:start="301:54" pos:end="301:61">linesize</name><index pos:start="301:62" pos:end="301:64">[<expr pos:start="301:63" pos:end="301:63"><literal type="number" pos:start="301:63" pos:end="301:63">2</literal></expr>]</index></name></expr></argument>,

                               <argument pos:start="303:32" pos:end="303:46"><expr pos:start="303:32" pos:end="303:46"><name pos:start="303:32" pos:end="303:34">buf</name> <operator pos:start="303:36" pos:end="303:36">+</operator> <name pos:start="303:38" pos:end="303:46">offset_gu</name></expr></argument>, <argument pos:start="303:49" pos:end="303:68"><expr pos:start="303:49" pos:end="303:68"><name pos:start="303:49" pos:end="303:56">buf_size</name> <operator pos:start="303:58" pos:end="303:58">-</operator> <name pos:start="303:60" pos:end="303:68">offset_gu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="305:9" pos:end="309:70"><expr pos:start="305:9" pos:end="309:69"><call pos:start="305:9" pos:end="309:69"><name pos:start="305:9" pos:end="305:30">lag_decode_arith_plane</name><argument_list pos:start="305:31" pos:end="309:69">(<argument pos:start="305:32" pos:end="305:32"><expr pos:start="305:32" pos:end="305:32"><name pos:start="305:32" pos:end="305:32">l</name></expr></argument>, <argument pos:start="305:35" pos:end="305:44"><expr pos:start="305:35" pos:end="305:44"><name pos:start="305:35" pos:end="305:44"><name pos:start="305:35" pos:end="305:35">p</name><operator pos:start="305:36" pos:end="305:37">-&gt;</operator><name pos:start="305:38" pos:end="305:41">data</name><index pos:start="305:42" pos:end="305:44">[<expr pos:start="305:43" pos:end="305:43"><literal type="number" pos:start="305:43" pos:end="305:43">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="305:47" pos:end="305:62"><expr pos:start="305:47" pos:end="305:62"><name pos:start="305:47" pos:end="305:58"><name pos:start="305:47" pos:end="305:51">avctx</name><operator pos:start="305:52" pos:end="305:53">-&gt;</operator><name pos:start="305:54" pos:end="305:58">width</name></name> <operator pos:start="305:60" pos:end="305:60">/</operator> <literal type="number" pos:start="305:62" pos:end="305:62">2</literal></expr></argument>,

                               <argument pos:start="307:32" pos:end="307:48"><expr pos:start="307:32" pos:end="307:48"><name pos:start="307:32" pos:end="307:44"><name pos:start="307:32" pos:end="307:36">avctx</name><operator pos:start="307:37" pos:end="307:38">-&gt;</operator><name pos:start="307:39" pos:end="307:44">height</name></name> <operator pos:start="307:46" pos:end="307:46">/</operator> <literal type="number" pos:start="307:48" pos:end="307:48">2</literal></expr></argument>, <argument pos:start="307:51" pos:end="307:64"><expr pos:start="307:51" pos:end="307:64"><name pos:start="307:51" pos:end="307:64"><name pos:start="307:51" pos:end="307:51">p</name><operator pos:start="307:52" pos:end="307:53">-&gt;</operator><name pos:start="307:54" pos:end="307:61">linesize</name><index pos:start="307:62" pos:end="307:64">[<expr pos:start="307:63" pos:end="307:63"><literal type="number" pos:start="307:63" pos:end="307:63">1</literal></expr>]</index></name></expr></argument>,

                               <argument pos:start="309:32" pos:end="309:46"><expr pos:start="309:32" pos:end="309:46"><name pos:start="309:32" pos:end="309:34">buf</name> <operator pos:start="309:36" pos:end="309:36">+</operator> <name pos:start="309:38" pos:end="309:46">offset_bv</name></expr></argument>, <argument pos:start="309:49" pos:end="309:68"><expr pos:start="309:49" pos:end="309:68"><name pos:start="309:49" pos:end="309:56">buf_size</name> <operator pos:start="309:58" pos:end="309:58">-</operator> <name pos:start="309:60" pos:end="309:68">offset_bv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="311:9" pos:end="311:14">break;</break>

    <default pos:start="313:5" pos:end="313:12">default:</default>

        <expr_stmt pos:start="315:9" pos:end="317:68"><expr pos:start="315:9" pos:end="317:67"><call pos:start="315:9" pos:end="317:67"><name pos:start="315:9" pos:end="315:14">av_log</name><argument_list pos:start="315:15" pos:end="317:67">(<argument pos:start="315:16" pos:end="315:20"><expr pos:start="315:16" pos:end="315:20"><name pos:start="315:16" pos:end="315:20">avctx</name></expr></argument>, <argument pos:start="315:23" pos:end="315:34"><expr pos:start="315:23" pos:end="315:34"><name pos:start="315:23" pos:end="315:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="317:16" pos:end="317:55"><expr pos:start="317:16" pos:end="317:55"><literal type="string" pos:start="317:16" pos:end="317:55">"Unsupported Lagarith frame type: %#x\n"</literal></expr></argument>, <argument pos:start="317:58" pos:end="317:66"><expr pos:start="317:58" pos:end="317:66"><name pos:start="317:58" pos:end="317:66">frametype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="319:9" pos:end="319:18">return <expr pos:start="319:16" pos:end="319:17"><operator pos:start="319:16" pos:end="319:16">-</operator><literal type="number" pos:start="319:17" pos:end="319:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="325:5" pos:end="325:19"><expr pos:start="325:5" pos:end="325:18"><operator pos:start="325:5" pos:end="325:5">*</operator><name pos:start="325:6" pos:end="325:14">got_frame</name> <operator pos:start="325:16" pos:end="325:16">=</operator> <literal type="number" pos:start="325:18" pos:end="325:18">1</literal></expr>;</expr_stmt>



    <return pos:start="329:5" pos:end="329:20">return <expr pos:start="329:12" pos:end="329:19"><name pos:start="329:12" pos:end="329:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
