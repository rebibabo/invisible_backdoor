<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13798.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">h261_decode_picture_header</name><parameter_list pos:start="1:31" pos:end="1:46">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:42">H261Context</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">h</name></decl></parameter>)</parameter_list><block pos:start="1:47" pos:end="129:1">{<block_content pos:start="3:5" pos:end="127:13">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">format</name></decl>, <decl pos:start="5:17" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:17">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:14"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <name pos:start="7:12" pos:end="7:14">int</name></type> <name pos:start="7:16" pos:end="7:32">h261_framecounter</name> <init pos:start="7:34" pos:end="7:36">= <expr pos:start="7:36" pos:end="7:36"><literal type="number" pos:start="7:36" pos:end="7:36">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:22">startcode</name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><call pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:18">align_get_bits</name><argument_list pos:start="11:19" pos:end="11:26">(<argument pos:start="11:20" pos:end="11:25"><expr pos:start="11:20" pos:end="11:25"><operator pos:start="11:20" pos:end="11:20">&amp;</operator><name pos:start="11:21" pos:end="11:25"><name pos:start="11:21" pos:end="11:21">s</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:103"><expr pos:start="15:5" pos:end="15:102"><name pos:start="15:5" pos:end="15:13">startcode</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <operator pos:start="15:17" pos:end="15:17">(</operator><name pos:start="15:18" pos:end="15:29"><name pos:start="15:18" pos:end="15:18">h</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:29">last_bits</name></name> <operator pos:start="15:31" pos:end="15:32">&lt;&lt;</operator> <operator pos:start="15:34" pos:end="15:34">(</operator><literal type="number" pos:start="15:35" pos:end="15:38">12</literal> <operator pos:start="15:38" pos:end="15:38">-</operator> <operator pos:start="15:40" pos:end="15:40">(</operator><literal type="number" pos:start="15:41" pos:end="15:42">8</literal><operator pos:start="15:42" pos:end="15:42">-</operator><name pos:start="15:43" pos:end="15:54"><name pos:start="15:43" pos:end="15:43">h</name><operator pos:start="15:44" pos:end="15:45">-&gt;</operator><name pos:start="15:46" pos:end="15:54">bits_left</name></name><operator pos:start="15:55" pos:end="15:55">)</operator><operator pos:start="15:56" pos:end="15:56">)</operator><operator pos:start="15:57" pos:end="15:57">)</operator> <operator pos:start="15:59" pos:end="15:59">|</operator> <call pos:start="15:61" pos:end="15:102"><name pos:start="15:61" pos:end="15:68">get_bits</name><argument_list pos:start="15:69" pos:end="15:102">(<argument pos:start="15:70" pos:end="15:75"><expr pos:start="15:70" pos:end="15:75"><operator pos:start="15:70" pos:end="15:70">&amp;</operator><name pos:start="15:71" pos:end="15:75"><name pos:start="15:71" pos:end="15:71">s</name><operator pos:start="15:72" pos:end="15:73">-&gt;</operator><name pos:start="15:74" pos:end="15:75">gb</name></name></expr></argument>, <argument pos:start="15:78" pos:end="15:101"><expr pos:start="15:78" pos:end="15:101"><literal type="number" pos:start="15:78" pos:end="15:80">20</literal><operator pos:start="15:80" pos:end="15:80">-</operator><literal type="number" pos:start="15:81" pos:end="15:83">8</literal> <operator pos:start="15:83" pos:end="15:83">-</operator> <operator pos:start="15:85" pos:end="15:85">(</operator><literal type="number" pos:start="15:86" pos:end="15:87">8</literal><operator pos:start="15:87" pos:end="15:87">-</operator> <name pos:start="15:89" pos:end="15:100"><name pos:start="15:89" pos:end="15:89">h</name><operator pos:start="15:90" pos:end="15:91">-&gt;</operator><name pos:start="15:92" pos:end="15:100">bits_left</name></name><operator pos:start="15:101" pos:end="15:101">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="19:5" pos:end="29:5">for<control pos:start="19:8" pos:end="19:67">(<init pos:start="19:9" pos:end="19:55"><expr pos:start="19:9" pos:end="19:54"><name pos:start="19:9" pos:end="19:9">i</name><operator pos:start="19:10" pos:end="19:10">=</operator> <name pos:start="19:12" pos:end="19:29"><name pos:start="19:12" pos:end="19:12">s</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:16">gb</name><operator pos:start="19:17" pos:end="19:17">.</operator><name pos:start="19:18" pos:end="19:29">size_in_bits</name></name> <operator pos:start="19:31" pos:end="19:31">-</operator> <call pos:start="19:33" pos:end="19:54"><name pos:start="19:33" pos:end="19:46">get_bits_count</name><argument_list pos:start="19:47" pos:end="19:54">(<argument pos:start="19:48" pos:end="19:53"><expr pos:start="19:48" pos:end="19:53"><operator pos:start="19:48" pos:end="19:48">&amp;</operator><name pos:start="19:49" pos:end="19:53"><name pos:start="19:49" pos:end="19:49">s</name><operator pos:start="19:50" pos:end="19:51">-&gt;</operator><name pos:start="19:52" pos:end="19:53">gb</name></name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="19:57" pos:end="19:61"><expr pos:start="19:57" pos:end="19:60"><name pos:start="19:57" pos:end="19:57">i</name><operator pos:start="19:58" pos:end="19:58">&gt;</operator><literal type="number" pos:start="19:59" pos:end="19:60">24</literal></expr>;</condition> <incr pos:start="19:63" pos:end="19:66"><expr pos:start="19:63" pos:end="19:66"><name pos:start="19:63" pos:end="19:63">i</name><operator pos:start="19:64" pos:end="19:65">-=</operator><literal type="number" pos:start="19:66" pos:end="19:66">1</literal></expr></incr>)</control><block pos:start="19:68" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:18">

        <expr_stmt pos:start="21:9" pos:end="21:74"><expr pos:start="21:9" pos:end="21:73"><name pos:start="21:9" pos:end="21:17">startcode</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <operator pos:start="21:21" pos:end="21:21">(</operator><operator pos:start="21:22" pos:end="21:22">(</operator><name pos:start="21:23" pos:end="21:31">startcode</name> <operator pos:start="21:33" pos:end="21:34">&lt;&lt;</operator> <literal type="number" pos:start="21:36" pos:end="21:36">1</literal><operator pos:start="21:37" pos:end="21:37">)</operator> <operator pos:start="21:39" pos:end="21:39">|</operator> <call pos:start="21:41" pos:end="21:59"><name pos:start="21:41" pos:end="21:48">get_bits</name><argument_list pos:start="21:49" pos:end="21:59">(<argument pos:start="21:50" pos:end="21:55"><expr pos:start="21:50" pos:end="21:55"><operator pos:start="21:50" pos:end="21:50">&amp;</operator><name pos:start="21:51" pos:end="21:55"><name pos:start="21:51" pos:end="21:51">s</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:55">gb</name></name></expr></argument>, <argument pos:start="21:58" pos:end="21:58"><expr pos:start="21:58" pos:end="21:58"><literal type="number" pos:start="21:58" pos:end="21:58">1</literal></expr></argument>)</argument_list></call><operator pos:start="21:60" pos:end="21:60">)</operator> <operator pos:start="21:62" pos:end="21:62">&amp;</operator> <literal type="number" pos:start="21:64" pos:end="21:73">0x000FFFFF</literal></expr>;</expr_stmt>



        <if_stmt pos:start="25:9" pos:end="27:18"><if pos:start="25:9" pos:end="27:18">if<condition pos:start="25:11" pos:end="25:29">(<expr pos:start="25:12" pos:end="25:28"><name pos:start="25:12" pos:end="25:20">startcode</name> <operator pos:start="25:22" pos:end="25:23">==</operator> <literal type="number" pos:start="25:25" pos:end="25:28">0x10</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:18"><block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:26">(<expr pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:17">startcode</name> <operator pos:start="33:19" pos:end="33:20">!=</operator> <literal type="number" pos:start="33:22" pos:end="33:25">0x10</literal></expr>)</condition><block pos:start="33:27" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:18">

        <expr_stmt pos:start="35:9" pos:end="35:67"><expr pos:start="35:9" pos:end="35:66"><call pos:start="35:9" pos:end="35:66"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:66">(<argument pos:start="35:16" pos:end="35:23"><expr pos:start="35:16" pos:end="35:23"><name pos:start="35:16" pos:end="35:23"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:23">avctx</name></name></expr></argument>, <argument pos:start="35:26" pos:end="35:37"><expr pos:start="35:26" pos:end="35:37"><name pos:start="35:26" pos:end="35:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:40" pos:end="35:65"><expr pos:start="35:40" pos:end="35:65"><literal type="string" pos:start="35:40" pos:end="35:65">"Bad picture start code\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:28">/* temporal reference */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:44"><expr pos:start="45:5" pos:end="45:43"><name pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:21">picture_number</name></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <call pos:start="45:25" pos:end="45:43"><name pos:start="45:25" pos:end="45:32">get_bits</name><argument_list pos:start="45:33" pos:end="45:43">(<argument pos:start="45:34" pos:end="45:39"><expr pos:start="45:34" pos:end="45:39"><operator pos:start="45:34" pos:end="45:34">&amp;</operator><name pos:start="45:35" pos:end="45:39"><name pos:start="45:35" pos:end="45:35">s</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:39">gb</name></name></expr></argument>, <argument pos:start="45:42" pos:end="45:42"><expr pos:start="45:42" pos:end="45:42"><literal type="number" pos:start="45:42" pos:end="45:42">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="45:46" pos:end="45:68">/* picture timestamp */</comment>



    <comment type="block" pos:start="49:5" pos:end="49:27">/* PTYPE starts here */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:23"><expr pos:start="51:5" pos:end="51:22"><call pos:start="51:5" pos:end="51:22"><name pos:start="51:5" pos:end="51:14">skip_bits1</name><argument_list pos:start="51:15" pos:end="51:22">(<argument pos:start="51:16" pos:end="51:21"><expr pos:start="51:16" pos:end="51:21"><operator pos:start="51:16" pos:end="51:16">&amp;</operator><name pos:start="51:17" pos:end="51:21"><name pos:start="51:17" pos:end="51:17">s</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="51:25" pos:end="51:46">/* split screen off */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:23"><expr pos:start="53:5" pos:end="53:22"><call pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:14">skip_bits1</name><argument_list pos:start="53:15" pos:end="53:22">(<argument pos:start="53:16" pos:end="53:21"><expr pos:start="53:16" pos:end="53:21"><operator pos:start="53:16" pos:end="53:16">&amp;</operator><name pos:start="53:17" pos:end="53:21"><name pos:start="53:17" pos:end="53:17">s</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="53:25" pos:end="53:41">/* camera  off */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:23"><expr pos:start="55:5" pos:end="55:22"><call pos:start="55:5" pos:end="55:22"><name pos:start="55:5" pos:end="55:14">skip_bits1</name><argument_list pos:start="55:15" pos:end="55:22">(<argument pos:start="55:16" pos:end="55:21"><expr pos:start="55:16" pos:end="55:21"><operator pos:start="55:16" pos:end="55:16">&amp;</operator><name pos:start="55:17" pos:end="55:21"><name pos:start="55:17" pos:end="55:17">s</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="55:25" pos:end="55:56">/* freeze picture release off */</comment>



    <expr_stmt pos:start="59:5" pos:end="59:31"><expr pos:start="59:5" pos:end="59:30"><name pos:start="59:5" pos:end="59:10">format</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <call pos:start="59:14" pos:end="59:30"><name pos:start="59:14" pos:end="59:22">get_bits1</name><argument_list pos:start="59:23" pos:end="59:30">(<argument pos:start="59:24" pos:end="59:29"><expr pos:start="59:24" pos:end="59:29"><operator pos:start="59:24" pos:end="59:24">&amp;</operator><name pos:start="59:25" pos:end="59:29"><name pos:start="59:25" pos:end="59:25">s</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="63:5" pos:end="63:29">//only 2 formats possible</comment>

    <if_stmt pos:start="65:5" pos:end="85:5"><if pos:start="65:5" pos:end="75:5">if <condition pos:start="65:8" pos:end="65:20">(<expr pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:14">format</name> <operator pos:start="65:16" pos:end="65:17">==</operator> <literal type="number" pos:start="65:19" pos:end="65:19">0</literal></expr>)</condition><block pos:start="65:21" pos:end="75:5">{<block_content pos:start="67:9" pos:end="73:25"><comment type="line" pos:start="65:22" pos:end="65:27">//QCIF</comment>

        <expr_stmt pos:start="67:9" pos:end="67:23"><expr pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:16"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:16">width</name></name> <operator pos:start="67:18" pos:end="67:18">=</operator> <literal type="number" pos:start="67:20" pos:end="67:22">176</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:24"><expr pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:17"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:17">height</name></name> <operator pos:start="69:19" pos:end="69:19">=</operator> <literal type="number" pos:start="69:21" pos:end="69:23">144</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:25"><expr pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:19">mb_width</name></name> <operator pos:start="71:21" pos:end="71:21">=</operator> <literal type="number" pos:start="71:23" pos:end="71:24">11</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:25"><expr pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:20">mb_height</name></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <literal type="number" pos:start="73:24" pos:end="73:24">9</literal></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="75:6" pos:end="85:5">else<block pos:start="75:10" pos:end="85:5">{<block_content pos:start="77:9" pos:end="83:26"><comment type="line" pos:start="75:11" pos:end="75:15">//CIF</comment>

        <expr_stmt pos:start="77:9" pos:end="77:23"><expr pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:16"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:16">width</name></name> <operator pos:start="77:18" pos:end="77:18">=</operator> <literal type="number" pos:start="77:20" pos:end="77:22">352</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:24"><expr pos:start="79:9" pos:end="79:23"><name pos:start="79:9" pos:end="79:17"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:17">height</name></name> <operator pos:start="79:19" pos:end="79:19">=</operator> <literal type="number" pos:start="79:21" pos:end="79:23">288</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:25"><expr pos:start="81:9" pos:end="81:24"><name pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:19">mb_width</name></name> <operator pos:start="81:21" pos:end="81:21">=</operator> <literal type="number" pos:start="81:23" pos:end="81:24">22</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:26"><expr pos:start="83:9" pos:end="83:25"><name pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:20">mb_height</name></name> <operator pos:start="83:22" pos:end="83:22">=</operator> <literal type="number" pos:start="83:24" pos:end="83:25">18</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:43"><expr pos:start="89:5" pos:end="89:42"><name pos:start="89:5" pos:end="89:13"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:13">mb_num</name></name> <operator pos:start="89:15" pos:end="89:15">=</operator> <name pos:start="89:17" pos:end="89:27"><name pos:start="89:17" pos:end="89:17">s</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:27">mb_width</name></name> <operator pos:start="89:29" pos:end="89:29">*</operator> <name pos:start="89:31" pos:end="89:42"><name pos:start="89:31" pos:end="89:31">s</name><operator pos:start="89:32" pos:end="89:33">-&gt;</operator><name pos:start="89:34" pos:end="89:42">mb_height</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:23"><expr pos:start="93:5" pos:end="93:22"><call pos:start="93:5" pos:end="93:22"><name pos:start="93:5" pos:end="93:14">skip_bits1</name><argument_list pos:start="93:15" pos:end="93:22">(<argument pos:start="93:16" pos:end="93:21"><expr pos:start="93:16" pos:end="93:21"><operator pos:start="93:16" pos:end="93:16">&amp;</operator><name pos:start="93:17" pos:end="93:21"><name pos:start="93:17" pos:end="93:17">s</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="93:25" pos:end="93:50">/* still image mode off */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:23"><expr pos:start="95:5" pos:end="95:22"><call pos:start="95:5" pos:end="95:22"><name pos:start="95:5" pos:end="95:14">skip_bits1</name><argument_list pos:start="95:15" pos:end="95:22">(<argument pos:start="95:16" pos:end="95:21"><expr pos:start="95:16" pos:end="95:21"><operator pos:start="95:16" pos:end="95:16">&amp;</operator><name pos:start="95:17" pos:end="95:21"><name pos:start="95:17" pos:end="95:17">s</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="95:25" pos:end="95:38">/* Reserved */</comment>



    <comment type="block" pos:start="99:5" pos:end="99:13">/* PEI */</comment>

    <while pos:start="101:5" pos:end="105:5">while <condition pos:start="101:11" pos:end="101:34">(<expr pos:start="101:12" pos:end="101:33"><call pos:start="101:12" pos:end="101:28"><name pos:start="101:12" pos:end="101:20">get_bits1</name><argument_list pos:start="101:21" pos:end="101:28">(<argument pos:start="101:22" pos:end="101:27"><expr pos:start="101:22" pos:end="101:27"><operator pos:start="101:22" pos:end="101:22">&amp;</operator><name pos:start="101:23" pos:end="101:27"><name pos:start="101:23" pos:end="101:23">s</name><operator pos:start="101:24" pos:end="101:25">-&gt;</operator><name pos:start="101:26" pos:end="101:27">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="101:30" pos:end="101:31">!=</operator> <literal type="number" pos:start="101:33" pos:end="101:33">0</literal></expr>)</condition><block pos:start="101:35" pos:end="105:5">{<block_content pos:start="103:9" pos:end="103:29">

        <expr_stmt pos:start="103:9" pos:end="103:29"><expr pos:start="103:9" pos:end="103:28"><call pos:start="103:9" pos:end="103:28"><name pos:start="103:9" pos:end="103:17">skip_bits</name><argument_list pos:start="103:18" pos:end="103:28">(<argument pos:start="103:19" pos:end="103:24"><expr pos:start="103:19" pos:end="103:24"><operator pos:start="103:19" pos:end="103:19">&amp;</operator><name pos:start="103:20" pos:end="103:24"><name pos:start="103:20" pos:end="103:20">s</name><operator pos:start="103:21" pos:end="103:22">-&gt;</operator><name pos:start="103:23" pos:end="103:24">gb</name></name></expr></argument>, <argument pos:start="103:27" pos:end="103:27"><expr pos:start="103:27" pos:end="103:27"><literal type="number" pos:start="103:27" pos:end="103:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <comment type="line" pos:start="109:5" pos:end="109:75">//h261 has no I-FRAMES, pass the test in MPV_frame_start in mpegvideo.c</comment>

    <if_stmt pos:start="111:5" pos:end="117:30"><if pos:start="111:5" pos:end="113:30">if<condition pos:start="111:7" pos:end="111:29">(<expr pos:start="111:8" pos:end="111:28"><name pos:start="111:8" pos:end="111:24">h261_framecounter</name> <operator pos:start="111:26" pos:end="111:26">&gt;</operator> <literal type="number" pos:start="111:28" pos:end="111:28">1</literal></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:30"><block_content pos:start="113:9" pos:end="113:30">

        <expr_stmt pos:start="113:9" pos:end="113:30"><expr pos:start="113:9" pos:end="113:29"><name pos:start="113:9" pos:end="113:20"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:20">pict_type</name></name> <operator pos:start="113:22" pos:end="113:22">=</operator> <name pos:start="113:24" pos:end="113:29">P_TYPE</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="115:5" pos:end="117:30">else<block type="pseudo" pos:start="117:9" pos:end="117:30"><block_content pos:start="117:9" pos:end="117:30">

        <expr_stmt pos:start="117:9" pos:end="117:30"><expr pos:start="117:9" pos:end="117:29"><name pos:start="117:9" pos:end="117:20"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:20">pict_type</name></name> <operator pos:start="117:22" pos:end="117:22">=</operator> <name pos:start="117:24" pos:end="117:29">I_TYPE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:24"><expr pos:start="121:5" pos:end="121:23"><name pos:start="121:5" pos:end="121:21">h261_framecounter</name><operator pos:start="121:22" pos:end="121:23">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:22"><expr pos:start="125:5" pos:end="125:21"><name pos:start="125:5" pos:end="125:17"><name pos:start="125:5" pos:end="125:5">h</name><operator pos:start="125:6" pos:end="125:7">-&gt;</operator><name pos:start="125:8" pos:end="125:17">gob_number</name></name> <operator pos:start="125:19" pos:end="125:19">=</operator> <literal type="number" pos:start="125:21" pos:end="125:21">0</literal></expr>;</expr_stmt>

    <return pos:start="127:5" pos:end="127:13">return <expr pos:start="127:12" pos:end="127:12"><literal type="number" pos:start="127:12" pos:end="127:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
