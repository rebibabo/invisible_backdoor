<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2301.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">virtio_rng_device_realize</name><parameter_list pos:start="1:38" pos:end="1:69">(<parameter pos:start="1:39" pos:end="1:54"><decl pos:start="1:39" pos:end="1:54"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:49">DeviceState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">dev</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:61">Error</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier><modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:43">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">VirtIODevice</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:22">vdev</name> <init pos:start="5:24" pos:end="5:43">= <expr pos:start="5:26" pos:end="5:43"><call pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:38">VIRTIO_DEVICE</name><argument_list pos:start="5:39" pos:end="5:43">(<argument pos:start="5:40" pos:end="5:42"><expr pos:start="5:40" pos:end="5:42"><name pos:start="5:40" pos:end="5:42">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">VirtIORNG</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:19">vrng</name> <init pos:start="7:21" pos:end="7:37">= <expr pos:start="7:23" pos:end="7:37"><call pos:start="7:23" pos:end="7:37"><name pos:start="7:23" pos:end="7:32">VIRTIO_RNG</name><argument_list pos:start="7:33" pos:end="7:37">(<argument pos:start="7:34" pos:end="7:36"><expr pos:start="7:34" pos:end="7:36"><name pos:start="7:34" pos:end="7:36">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:34">(<expr pos:start="13:9" pos:end="13:33"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:29"><name pos:start="13:10" pos:end="13:13">vrng</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:19">conf</name><operator pos:start="13:20" pos:end="13:20">.</operator><name pos:start="13:21" pos:end="13:29">period_ms</name></name> <operator pos:start="13:31" pos:end="13:31">&gt;</operator> <literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr>)</condition> <block pos:start="13:36" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:15">

        <expr_stmt pos:start="15:9" pos:end="17:39"><expr pos:start="15:9" pos:end="17:38"><call pos:start="15:9" pos:end="17:38"><name pos:start="15:9" pos:end="15:17">error_set</name><argument_list pos:start="15:18" pos:end="17:38">(<argument pos:start="15:19" pos:end="15:22"><expr pos:start="15:19" pos:end="15:22"><name pos:start="15:19" pos:end="15:22">errp</name></expr></argument>, <argument pos:start="15:25" pos:end="15:52"><expr pos:start="15:25" pos:end="15:52"><name pos:start="15:25" pos:end="15:52">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="15:55" pos:end="15:62"><expr pos:start="15:55" pos:end="15:62"><literal type="string" pos:start="15:55" pos:end="15:62">"period"</literal></expr></argument>,

                  <argument pos:start="17:19" pos:end="17:37"><expr pos:start="17:19" pos:end="17:37"><literal type="string" pos:start="17:19" pos:end="17:37">"a positive number"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="69:5"><if pos:start="25:5" pos:end="69:5">if <condition pos:start="25:8" pos:end="25:31">(<expr pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:12">vrng</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:18">conf</name><operator pos:start="25:19" pos:end="25:19">.</operator><name pos:start="25:20" pos:end="25:22">rng</name></name> <operator pos:start="25:24" pos:end="25:25">==</operator> <name pos:start="25:27" pos:end="25:30">NULL</name></expr>)</condition> <block pos:start="25:33" pos:end="69:5">{<block_content pos:start="27:9" pos:end="67:46">

        <expr_stmt pos:start="27:9" pos:end="27:77"><expr pos:start="27:9" pos:end="27:76"><name pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:12">vrng</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:18">conf</name><operator pos:start="27:19" pos:end="27:19">.</operator><name pos:start="27:20" pos:end="27:34">default_backend</name></name> <operator pos:start="27:36" pos:end="27:36">=</operator> <call pos:start="27:38" pos:end="27:76"><name pos:start="27:38" pos:end="27:47">RNG_RANDOM</name><argument_list pos:start="27:48" pos:end="27:76">(<argument pos:start="27:49" pos:end="27:75"><expr pos:start="27:49" pos:end="27:75"><call pos:start="27:49" pos:end="27:75"><name pos:start="27:49" pos:end="27:58">object_new</name><argument_list pos:start="27:59" pos:end="27:75">(<argument pos:start="27:60" pos:end="27:74"><expr pos:start="27:60" pos:end="27:74"><name pos:start="27:60" pos:end="27:74">TYPE_RNG_RANDOM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="31:9" pos:end="33:44"><expr pos:start="31:9" pos:end="33:43"><call pos:start="31:9" pos:end="33:43"><name pos:start="31:9" pos:end="31:31">user_creatable_complete</name><argument_list pos:start="31:32" pos:end="33:43">(<argument pos:start="31:33" pos:end="31:66"><expr pos:start="31:33" pos:end="31:66"><call pos:start="31:33" pos:end="31:66"><name pos:start="31:33" pos:end="31:38">OBJECT</name><argument_list pos:start="31:39" pos:end="31:66">(<argument pos:start="31:40" pos:end="31:65"><expr pos:start="31:40" pos:end="31:65"><name pos:start="31:40" pos:end="31:65"><name pos:start="31:40" pos:end="31:43">vrng</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:49">conf</name><operator pos:start="31:50" pos:end="31:50">.</operator><name pos:start="31:51" pos:end="31:65">default_backend</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="33:33" pos:end="33:42"><expr pos:start="33:33" pos:end="33:42"><operator pos:start="33:33" pos:end="33:33">&amp;</operator><name pos:start="33:34" pos:end="33:42">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="43:9"><if pos:start="35:9" pos:end="43:9">if <condition pos:start="35:12" pos:end="35:22">(<expr pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:21">local_err</name></expr>)</condition> <block pos:start="35:24" pos:end="43:9">{<block_content pos:start="37:13" pos:end="41:19">

            <expr_stmt pos:start="37:13" pos:end="37:45"><expr pos:start="37:13" pos:end="37:44"><call pos:start="37:13" pos:end="37:44"><name pos:start="37:13" pos:end="37:27">error_propagate</name><argument_list pos:start="37:28" pos:end="37:44">(<argument pos:start="37:29" pos:end="37:32"><expr pos:start="37:29" pos:end="37:32"><name pos:start="37:29" pos:end="37:32">errp</name></expr></argument>, <argument pos:start="37:35" pos:end="37:43"><expr pos:start="37:35" pos:end="37:43"><name pos:start="37:35" pos:end="37:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:61"><expr pos:start="39:13" pos:end="39:60"><call pos:start="39:13" pos:end="39:60"><name pos:start="39:13" pos:end="39:24">object_unref</name><argument_list pos:start="39:25" pos:end="39:60">(<argument pos:start="39:26" pos:end="39:59"><expr pos:start="39:26" pos:end="39:59"><call pos:start="39:26" pos:end="39:59"><name pos:start="39:26" pos:end="39:31">OBJECT</name><argument_list pos:start="39:32" pos:end="39:59">(<argument pos:start="39:33" pos:end="39:58"><expr pos:start="39:33" pos:end="39:58"><name pos:start="39:33" pos:end="39:58"><name pos:start="39:33" pos:end="39:36">vrng</name><operator pos:start="39:37" pos:end="39:38">-&gt;</operator><name pos:start="39:39" pos:end="39:42">conf</name><operator pos:start="39:43" pos:end="39:43">.</operator><name pos:start="39:44" pos:end="39:58">default_backend</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="53:40"><expr pos:start="47:9" pos:end="53:39"><call pos:start="47:9" pos:end="53:39"><name pos:start="47:9" pos:end="47:33">object_property_add_child</name><argument_list pos:start="47:34" pos:end="53:39">(<argument pos:start="47:35" pos:end="47:45"><expr pos:start="47:35" pos:end="47:45"><call pos:start="47:35" pos:end="47:45"><name pos:start="47:35" pos:end="47:40">OBJECT</name><argument_list pos:start="47:41" pos:end="47:45">(<argument pos:start="47:42" pos:end="47:44"><expr pos:start="47:42" pos:end="47:44"><name pos:start="47:42" pos:end="47:44">dev</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="49:35" pos:end="49:51"><expr pos:start="49:35" pos:end="49:51"><literal type="string" pos:start="49:35" pos:end="49:51">"default-backend"</literal></expr></argument>,

                                  <argument pos:start="51:35" pos:end="51:68"><expr pos:start="51:35" pos:end="51:68"><call pos:start="51:35" pos:end="51:68"><name pos:start="51:35" pos:end="51:40">OBJECT</name><argument_list pos:start="51:41" pos:end="51:68">(<argument pos:start="51:42" pos:end="51:67"><expr pos:start="51:42" pos:end="51:67"><name pos:start="51:42" pos:end="51:67"><name pos:start="51:42" pos:end="51:45">vrng</name><operator pos:start="51:46" pos:end="51:47">-&gt;</operator><name pos:start="51:48" pos:end="51:51">conf</name><operator pos:start="51:52" pos:end="51:52">.</operator><name pos:start="51:53" pos:end="51:67">default_backend</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="53:35" pos:end="53:38"><expr pos:start="53:35" pos:end="53:38"><name pos:start="53:35" pos:end="53:38">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="57:9" pos:end="57:78">/* The child property took a reference, we can safely drop ours now */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:57"><expr pos:start="59:9" pos:end="59:56"><call pos:start="59:9" pos:end="59:56"><name pos:start="59:9" pos:end="59:20">object_unref</name><argument_list pos:start="59:21" pos:end="59:56">(<argument pos:start="59:22" pos:end="59:55"><expr pos:start="59:22" pos:end="59:55"><call pos:start="59:22" pos:end="59:55"><name pos:start="59:22" pos:end="59:27">OBJECT</name><argument_list pos:start="59:28" pos:end="59:55">(<argument pos:start="59:29" pos:end="59:54"><expr pos:start="59:29" pos:end="59:54"><name pos:start="59:29" pos:end="59:54"><name pos:start="59:29" pos:end="59:32">vrng</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:38">conf</name><operator pos:start="59:39" pos:end="59:39">.</operator><name pos:start="59:40" pos:end="59:54">default_backend</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="63:9" pos:end="67:46"><expr pos:start="63:9" pos:end="67:45"><call pos:start="63:9" pos:end="67:45"><name pos:start="63:9" pos:end="63:32">object_property_set_link</name><argument_list pos:start="63:33" pos:end="67:45">(<argument pos:start="63:34" pos:end="63:44"><expr pos:start="63:34" pos:end="63:44"><call pos:start="63:34" pos:end="63:44"><name pos:start="63:34" pos:end="63:39">OBJECT</name><argument_list pos:start="63:40" pos:end="63:44">(<argument pos:start="63:41" pos:end="63:43"><expr pos:start="63:41" pos:end="63:43"><name pos:start="63:41" pos:end="63:43">dev</name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="65:34" pos:end="65:67"><expr pos:start="65:34" pos:end="65:67"><call pos:start="65:34" pos:end="65:67"><name pos:start="65:34" pos:end="65:39">OBJECT</name><argument_list pos:start="65:40" pos:end="65:67">(<argument pos:start="65:41" pos:end="65:66"><expr pos:start="65:41" pos:end="65:66"><name pos:start="65:41" pos:end="65:66"><name pos:start="65:41" pos:end="65:44">vrng</name><operator pos:start="65:45" pos:end="65:46">-&gt;</operator><name pos:start="65:47" pos:end="65:50">conf</name><operator pos:start="65:51" pos:end="65:51">.</operator><name pos:start="65:52" pos:end="65:66">default_backend</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="67:34" pos:end="67:38"><expr pos:start="67:34" pos:end="67:38"><literal type="string" pos:start="67:34" pos:end="67:38">"rng"</literal></expr></argument>, <argument pos:start="67:41" pos:end="67:44"><expr pos:start="67:41" pos:end="67:44"><name pos:start="67:41" pos:end="67:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:54"><expr pos:start="73:5" pos:end="73:53"><call pos:start="73:5" pos:end="73:53"><name pos:start="73:5" pos:end="73:15">virtio_init</name><argument_list pos:start="73:16" pos:end="73:53">(<argument pos:start="73:17" pos:end="73:20"><expr pos:start="73:17" pos:end="73:20"><name pos:start="73:17" pos:end="73:20">vdev</name></expr></argument>, <argument pos:start="73:23" pos:end="73:34"><expr pos:start="73:23" pos:end="73:34"><literal type="string" pos:start="73:23" pos:end="73:34">"virtio-rng"</literal></expr></argument>, <argument pos:start="73:37" pos:end="73:49"><expr pos:start="73:37" pos:end="73:49"><name pos:start="73:37" pos:end="73:49">VIRTIO_ID_RNG</name></expr></argument>, <argument pos:start="73:52" pos:end="73:52"><expr pos:start="73:52" pos:end="73:52"><literal type="number" pos:start="73:52" pos:end="73:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:31"><expr pos:start="77:5" pos:end="77:30"><name pos:start="77:5" pos:end="77:13"><name pos:start="77:5" pos:end="77:8">vrng</name><operator pos:start="77:9" pos:end="77:10">-&gt;</operator><name pos:start="77:11" pos:end="77:13">rng</name></name> <operator pos:start="77:15" pos:end="77:15">=</operator> <name pos:start="77:17" pos:end="77:30"><name pos:start="77:17" pos:end="77:20">vrng</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:26">conf</name><operator pos:start="77:27" pos:end="77:27">.</operator><name pos:start="77:28" pos:end="77:30">rng</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:26">(<expr pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:17"><name pos:start="79:9" pos:end="79:12">vrng</name><operator pos:start="79:13" pos:end="79:14">-&gt;</operator><name pos:start="79:15" pos:end="79:17">rng</name></name> <operator pos:start="79:19" pos:end="79:20">==</operator> <name pos:start="79:22" pos:end="79:25">NULL</name></expr>)</condition> <block pos:start="79:28" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:15">

        <expr_stmt pos:start="81:9" pos:end="81:79"><expr pos:start="81:9" pos:end="81:78"><call pos:start="81:9" pos:end="81:78"><name pos:start="81:9" pos:end="81:17">error_set</name><argument_list pos:start="81:18" pos:end="81:78">(<argument pos:start="81:19" pos:end="81:22"><expr pos:start="81:19" pos:end="81:22"><name pos:start="81:19" pos:end="81:22">errp</name></expr></argument>, <argument pos:start="81:25" pos:end="81:52"><expr pos:start="81:25" pos:end="81:52"><name pos:start="81:25" pos:end="81:52">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="81:55" pos:end="81:59"><expr pos:start="81:55" pos:end="81:59"><literal type="string" pos:start="81:55" pos:end="81:59">"rng"</literal></expr></argument>, <argument pos:start="81:62" pos:end="81:77"><expr pos:start="81:62" pos:end="81:77"><literal type="string" pos:start="81:62" pos:end="81:77">"a valid object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:55"><expr pos:start="89:5" pos:end="89:54"><name pos:start="89:5" pos:end="89:12"><name pos:start="89:5" pos:end="89:8">vrng</name><operator pos:start="89:9" pos:end="89:10">-&gt;</operator><name pos:start="89:11" pos:end="89:12">vq</name></name> <operator pos:start="89:14" pos:end="89:14">=</operator> <call pos:start="89:16" pos:end="89:54"><name pos:start="89:16" pos:end="89:31">virtio_add_queue</name><argument_list pos:start="89:32" pos:end="89:54">(<argument pos:start="89:33" pos:end="89:36"><expr pos:start="89:33" pos:end="89:36"><name pos:start="89:33" pos:end="89:36">vdev</name></expr></argument>, <argument pos:start="89:39" pos:end="89:39"><expr pos:start="89:39" pos:end="89:39"><literal type="number" pos:start="89:39" pos:end="89:39">8</literal></expr></argument>, <argument pos:start="89:42" pos:end="89:53"><expr pos:start="89:42" pos:end="89:53"><name pos:start="89:42" pos:end="89:53">handle_input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="93:5" pos:end="95:51">/* Workaround: Property parsing does not enforce unsigned integers,

     * So this is a hack to reject such numbers. */</comment>

    <if_stmt pos:start="97:5" pos:end="105:5"><if pos:start="97:5" pos:end="105:5">if <condition pos:start="97:8" pos:end="97:41">(<expr pos:start="97:9" pos:end="97:40"><name pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:12">vrng</name><operator pos:start="97:13" pos:end="97:14">-&gt;</operator><name pos:start="97:15" pos:end="97:18">conf</name><operator pos:start="97:19" pos:end="97:19">.</operator><name pos:start="97:20" pos:end="97:28">max_bytes</name></name> <operator pos:start="97:30" pos:end="97:30">&gt;</operator> <name pos:start="97:32" pos:end="97:40">INT64_MAX</name></expr>)</condition> <block pos:start="97:43" pos:end="105:5">{<block_content pos:start="99:9" pos:end="103:15">

        <expr_stmt pos:start="99:9" pos:end="101:55"><expr pos:start="99:9" pos:end="101:54"><call pos:start="99:9" pos:end="101:54"><name pos:start="99:9" pos:end="99:17">error_set</name><argument_list pos:start="99:18" pos:end="101:54">(<argument pos:start="99:19" pos:end="99:22"><expr pos:start="99:19" pos:end="99:22"><name pos:start="99:19" pos:end="99:22">errp</name></expr></argument>, <argument pos:start="99:25" pos:end="99:52"><expr pos:start="99:25" pos:end="99:52"><name pos:start="99:25" pos:end="99:52">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="99:55" pos:end="99:65"><expr pos:start="99:55" pos:end="99:65"><literal type="string" pos:start="99:55" pos:end="99:65">"max-bytes"</literal></expr></argument>,

                  <argument pos:start="101:19" pos:end="101:53"><expr pos:start="101:19" pos:end="101:53"><literal type="string" pos:start="101:19" pos:end="101:53">"a non-negative integer below 2^63"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:49"><expr pos:start="107:5" pos:end="107:48"><name pos:start="107:5" pos:end="107:25"><name pos:start="107:5" pos:end="107:8">vrng</name><operator pos:start="107:9" pos:end="107:10">-&gt;</operator><name pos:start="107:11" pos:end="107:25">quota_remaining</name></name> <operator pos:start="107:27" pos:end="107:27">=</operator> <name pos:start="107:29" pos:end="107:48"><name pos:start="107:29" pos:end="107:32">vrng</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:38">conf</name><operator pos:start="107:39" pos:end="107:39">.</operator><name pos:start="107:40" pos:end="107:48">max_bytes</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="111:5" pos:end="113:71"><expr pos:start="111:5" pos:end="113:70"><name pos:start="111:5" pos:end="111:26"><name pos:start="111:5" pos:end="111:8">vrng</name><operator pos:start="111:9" pos:end="111:10">-&gt;</operator><name pos:start="111:11" pos:end="111:26">rate_limit_timer</name></name> <operator pos:start="111:28" pos:end="111:28">=</operator> <call pos:start="111:30" pos:end="113:70"><name pos:start="111:30" pos:end="111:41">timer_new_ms</name><argument_list pos:start="111:42" pos:end="113:70">(<argument pos:start="111:43" pos:end="111:60"><expr pos:start="111:43" pos:end="111:60"><name pos:start="111:43" pos:end="111:60">QEMU_CLOCK_VIRTUAL</name></expr></argument>,

                                               <argument pos:start="113:48" pos:end="113:63"><expr pos:start="113:48" pos:end="113:63"><name pos:start="113:48" pos:end="113:63">check_rate_limit</name></expr></argument>, <argument pos:start="113:66" pos:end="113:69"><expr pos:start="113:66" pos:end="113:69"><name pos:start="113:66" pos:end="113:69">vrng</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="119:81"><expr pos:start="117:5" pos:end="119:80"><call pos:start="117:5" pos:end="119:80"><name pos:start="117:5" pos:end="117:13">timer_mod</name><argument_list pos:start="117:14" pos:end="119:80">(<argument pos:start="117:15" pos:end="117:36"><expr pos:start="117:15" pos:end="117:36"><name pos:start="117:15" pos:end="117:36"><name pos:start="117:15" pos:end="117:18">vrng</name><operator pos:start="117:19" pos:end="117:20">-&gt;</operator><name pos:start="117:21" pos:end="117:36">rate_limit_timer</name></name></expr></argument>,

                   <argument pos:start="119:20" pos:end="119:79"><expr pos:start="119:20" pos:end="119:79"><call pos:start="119:20" pos:end="119:56"><name pos:start="119:20" pos:end="119:36">qemu_clock_get_ms</name><argument_list pos:start="119:37" pos:end="119:56">(<argument pos:start="119:38" pos:end="119:55"><expr pos:start="119:38" pos:end="119:55"><name pos:start="119:38" pos:end="119:55">QEMU_CLOCK_VIRTUAL</name></expr></argument>)</argument_list></call> <operator pos:start="119:58" pos:end="119:58">+</operator> <name pos:start="119:60" pos:end="119:79"><name pos:start="119:60" pos:end="119:63">vrng</name><operator pos:start="119:64" pos:end="119:65">-&gt;</operator><name pos:start="119:66" pos:end="119:69">conf</name><operator pos:start="119:70" pos:end="119:70">.</operator><name pos:start="119:71" pos:end="119:79">period_ms</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="125:43"><expr pos:start="123:5" pos:end="125:42"><call pos:start="123:5" pos:end="125:42"><name pos:start="123:5" pos:end="123:19">register_savevm</name><argument_list pos:start="123:20" pos:end="125:42">(<argument pos:start="123:21" pos:end="123:23"><expr pos:start="123:21" pos:end="123:23"><name pos:start="123:21" pos:end="123:23">dev</name></expr></argument>, <argument pos:start="123:26" pos:end="123:37"><expr pos:start="123:26" pos:end="123:37"><literal type="string" pos:start="123:26" pos:end="123:37">"virtio-rng"</literal></expr></argument>, <argument pos:start="123:40" pos:end="123:41"><expr pos:start="123:40" pos:end="123:41"><operator pos:start="123:40" pos:end="123:40">-</operator><literal type="number" pos:start="123:41" pos:end="123:41">1</literal></expr></argument>, <argument pos:start="123:44" pos:end="123:44"><expr pos:start="123:44" pos:end="123:44"><literal type="number" pos:start="123:44" pos:end="123:44">1</literal></expr></argument>, <argument pos:start="123:47" pos:end="123:61"><expr pos:start="123:47" pos:end="123:61"><name pos:start="123:47" pos:end="123:61">virtio_rng_save</name></expr></argument>,

                    <argument pos:start="125:21" pos:end="125:35"><expr pos:start="125:21" pos:end="125:35"><name pos:start="125:21" pos:end="125:35">virtio_rng_load</name></expr></argument>, <argument pos:start="125:38" pos:end="125:41"><expr pos:start="125:38" pos:end="125:41"><name pos:start="125:38" pos:end="125:41">vrng</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
