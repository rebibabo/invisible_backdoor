<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12792.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">gen_rp_interrupts_init</name><parameter_list pos:start="1:34" pos:end="1:61">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:43">PCIDevice</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">d</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:53">Error</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier><modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:14">

    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">rc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:74"><expr pos:start="9:5" pos:end="9:73"><name pos:start="9:5" pos:end="9:6">rc</name> <operator pos:start="9:8" pos:end="9:8">=</operator> <call pos:start="9:10" pos:end="9:73"><name pos:start="9:10" pos:end="9:32">msix_init_exclusive_bar</name><argument_list pos:start="9:33" pos:end="9:73">(<argument pos:start="9:34" pos:end="9:34"><expr pos:start="9:34" pos:end="9:34"><name pos:start="9:34" pos:end="9:34">d</name></expr></argument>, <argument pos:start="9:37" pos:end="9:69"><expr pos:start="9:37" pos:end="9:69"><name pos:start="9:37" pos:end="9:69">GEN_PCIE_ROOT_PORT_MSIX_NR_VECTOR</name></expr></argument>, <argument pos:start="9:72" pos:end="9:72"><expr pos:start="9:72" pos:end="9:72"><literal type="number" pos:start="9:72" pos:end="9:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="23:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:15">(<expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:10">rc</name> <operator pos:start="13:12" pos:end="13:12">&lt;</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>)</condition> <block pos:start="13:17" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:56">

        <expr_stmt pos:start="15:9" pos:end="15:31"><expr pos:start="15:9" pos:end="15:30"><call pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:14">assert</name><argument_list pos:start="15:15" pos:end="15:30">(<argument pos:start="15:16" pos:end="15:29"><expr pos:start="15:16" pos:end="15:29"><name pos:start="15:16" pos:end="15:17">rc</name> <operator pos:start="15:19" pos:end="15:20">==</operator> <operator pos:start="15:22" pos:end="15:22">-</operator><name pos:start="15:23" pos:end="15:29">ENOTSUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:56"><expr pos:start="17:9" pos:end="17:55"><call pos:start="17:9" pos:end="17:55"><name pos:start="17:9" pos:end="17:18">error_setg</name><argument_list pos:start="17:19" pos:end="17:55">(<argument pos:start="17:20" pos:end="17:23"><expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">errp</name></expr></argument>, <argument pos:start="17:26" pos:end="17:54"><expr pos:start="17:26" pos:end="17:54"><literal type="string" pos:start="17:26" pos:end="17:54">"Unable to init msix vectors"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="23:5">else <block pos:start="19:12" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:30">

        <expr_stmt pos:start="21:9" pos:end="21:30"><expr pos:start="21:9" pos:end="21:29"><call pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:23">msix_vector_use</name><argument_list pos:start="21:24" pos:end="21:29">(<argument pos:start="21:25" pos:end="21:25"><expr pos:start="21:25" pos:end="21:25"><name pos:start="21:25" pos:end="21:25">d</name></expr></argument>, <argument pos:start="21:28" pos:end="21:28"><expr pos:start="21:28" pos:end="21:28"><literal type="number" pos:start="21:28" pos:end="21:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="27:5" pos:end="27:14">return <expr pos:start="27:12" pos:end="27:13"><name pos:start="27:12" pos:end="27:13">rc</name></expr>;</return>

</block_content>}</block></function>
</unit>
