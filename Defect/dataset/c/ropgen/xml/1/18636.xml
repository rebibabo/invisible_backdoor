<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18636.c" pos:tabs="8"><function pos:start="1:1" pos:end="38:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">nbd_client_co_pwritev</name><parameter_list pos:start="1:26" pos:end="3:72">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:63"><decl pos:start="1:49" pos:end="1:63"><type pos:start="1:49" pos:end="1:63"><name pos:start="1:49" pos:end="1:56">uint64_t</name></type> <name pos:start="1:58" pos:end="1:63">offset</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:40"><decl pos:start="3:27" pos:end="3:40"><type pos:start="3:27" pos:end="3:40"><name pos:start="3:27" pos:end="3:34">uint64_t</name></type> <name pos:start="3:36" pos:end="3:40">bytes</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:60"><decl pos:start="3:43" pos:end="3:60"><type pos:start="3:43" pos:end="3:60"><name pos:start="3:43" pos:end="3:54">QEMUIOVector</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:60">qiov</name></decl></parameter>, <parameter pos:start="3:63" pos:end="3:71"><decl pos:start="3:63" pos:end="3:71"><type pos:start="3:63" pos:end="3:71"><name pos:start="3:63" pos:end="3:65">int</name></type> <name pos:start="3:67" pos:end="3:71">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="38:1">{<block_content pos:start="7:5" pos:end="36:46">

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:57"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">NBDClientSession</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:28">client</name> <init pos:start="7:30" pos:end="7:57">= <expr pos:start="7:32" pos:end="7:57"><call pos:start="7:32" pos:end="7:57"><name pos:start="7:32" pos:end="7:53">nbd_get_client_session</name><argument_list pos:start="7:54" pos:end="7:57">(<argument pos:start="7:55" pos:end="7:56"><expr pos:start="7:55" pos:end="7:56"><name pos:start="7:55" pos:end="7:56">bs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="17:6"><decl pos:start="9:5" pos:end="17:5"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14">NBDRequest</name></type> <name pos:start="9:16" pos:end="9:22">request</name> <init pos:start="9:24" pos:end="17:5">= <expr pos:start="9:26" pos:end="17:5"><block pos:start="9:26" pos:end="17:5">{

        <expr pos:start="11:9" pos:end="11:29"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:13">type</name> <operator pos:start="11:15" pos:end="11:15">=</operator> <name pos:start="11:17" pos:end="11:29">NBD_CMD_WRITE</name></expr>,

        <expr pos:start="13:9" pos:end="13:22"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:13">from</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <name pos:start="13:17" pos:end="13:22">offset</name></expr>,

        <expr pos:start="15:9" pos:end="15:20"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:12">len</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:20">bytes</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>




    <if_stmt pos:start="22:5" pos:end="28:5"><if pos:start="22:5" pos:end="28:5">if <condition pos:start="22:8" pos:end="22:29">(<expr pos:start="22:9" pos:end="22:28"><name pos:start="22:9" pos:end="22:13">flags</name> <operator pos:start="22:15" pos:end="22:15">&amp;</operator> <name pos:start="22:17" pos:end="22:28">BDRV_REQ_FUA</name></expr>)</condition> <block pos:start="22:31" pos:end="28:5">{<block_content pos:start="24:9" pos:end="26:42">

        <expr_stmt pos:start="24:9" pos:end="24:55"><expr pos:start="24:9" pos:end="24:54"><call pos:start="24:9" pos:end="24:54"><name pos:start="24:9" pos:end="24:14">assert</name><argument_list pos:start="24:15" pos:end="24:54">(<argument pos:start="24:16" pos:end="24:53"><expr pos:start="24:16" pos:end="24:53"><name pos:start="24:16" pos:end="24:33"><name pos:start="24:16" pos:end="24:21">client</name><operator pos:start="24:22" pos:end="24:23">-&gt;</operator><name pos:start="24:24" pos:end="24:27">info</name><operator pos:start="24:28" pos:end="24:28">.</operator><name pos:start="24:29" pos:end="24:33">flags</name></name> <operator pos:start="24:35" pos:end="24:35">&amp;</operator> <name pos:start="24:37" pos:end="24:53">NBD_FLAG_SEND_FUA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="26:9" pos:end="26:42"><expr pos:start="26:9" pos:end="26:41"><name pos:start="26:9" pos:end="26:21"><name pos:start="26:9" pos:end="26:15">request</name><operator pos:start="26:16" pos:end="26:16">.</operator><name pos:start="26:17" pos:end="26:21">flags</name></name> <operator pos:start="26:23" pos:end="26:24">|=</operator> <name pos:start="26:26" pos:end="26:41">NBD_CMD_FLAG_FUA</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="32:5" pos:end="32:41"><expr pos:start="32:5" pos:end="32:40"><call pos:start="32:5" pos:end="32:40"><name pos:start="32:5" pos:end="32:10">assert</name><argument_list pos:start="32:11" pos:end="32:40">(<argument pos:start="32:12" pos:end="32:39"><expr pos:start="32:12" pos:end="32:39"><name pos:start="32:12" pos:end="32:16">bytes</name> <operator pos:start="32:18" pos:end="32:19">&lt;=</operator> <name pos:start="32:21" pos:end="32:39">NBD_MAX_BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="36:5" pos:end="36:46">return <expr pos:start="36:12" pos:end="36:45"><call pos:start="36:12" pos:end="36:45"><name pos:start="36:12" pos:end="36:25">nbd_co_request</name><argument_list pos:start="36:26" pos:end="36:45">(<argument pos:start="36:27" pos:end="36:28"><expr pos:start="36:27" pos:end="36:28"><name pos:start="36:27" pos:end="36:28">bs</name></expr></argument>, <argument pos:start="36:31" pos:end="36:38"><expr pos:start="36:31" pos:end="36:38"><operator pos:start="36:31" pos:end="36:31">&amp;</operator><name pos:start="36:32" pos:end="36:38">request</name></expr></argument>, <argument pos:start="36:41" pos:end="36:44"><expr pos:start="36:41" pos:end="36:44"><name pos:start="36:41" pos:end="36:44">qiov</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function></unit>
