<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20306.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">rbd_aio_bh_cb</name><parameter_list pos:start="1:26" pos:end="1:39">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:32"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:26">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">RBDAIOCB</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">acb</name> <init pos:start="5:19" pos:end="5:26">= <expr pos:start="5:21" pos:end="5:26"><name pos:start="5:21" pos:end="5:26">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:33">(<expr pos:start="9:9" pos:end="9:32"><name pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:11">acb</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:16">cmd</name></name> <operator pos:start="9:18" pos:end="9:19">==</operator> <name pos:start="9:21" pos:end="9:32">RBD_AIO_READ</name></expr>)</condition> <block pos:start="9:35" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:72">

        <expr_stmt pos:start="11:9" pos:end="11:72"><expr pos:start="11:9" pos:end="11:71"><call pos:start="11:9" pos:end="11:71"><name pos:start="11:9" pos:end="11:27">qemu_iovec_from_buf</name><argument_list pos:start="11:28" pos:end="11:71">(<argument pos:start="11:29" pos:end="11:37"><expr pos:start="11:29" pos:end="11:37"><name pos:start="11:29" pos:end="11:37"><name pos:start="11:29" pos:end="11:31">acb</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:37">qiov</name></name></expr></argument>, <argument pos:start="11:40" pos:end="11:40"><expr pos:start="11:40" pos:end="11:40"><literal type="number" pos:start="11:40" pos:end="11:40">0</literal></expr></argument>, <argument pos:start="11:43" pos:end="11:53"><expr pos:start="11:43" pos:end="11:53"><name pos:start="11:43" pos:end="11:53"><name pos:start="11:43" pos:end="11:45">acb</name><operator pos:start="11:46" pos:end="11:47">-&gt;</operator><name pos:start="11:48" pos:end="11:53">bounce</name></name></expr></argument>, <argument pos:start="11:56" pos:end="11:70"><expr pos:start="11:56" pos:end="11:70"><name pos:start="11:56" pos:end="11:70"><name pos:start="11:56" pos:end="11:58">acb</name><operator pos:start="11:59" pos:end="11:60">-&gt;</operator><name pos:start="11:61" pos:end="11:64">qiov</name><operator pos:start="11:65" pos:end="11:66">-&gt;</operator><name pos:start="11:67" pos:end="11:70">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:28"><expr pos:start="15:5" pos:end="15:27"><call pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:14">qemu_vfree</name><argument_list pos:start="15:15" pos:end="15:27">(<argument pos:start="15:16" pos:end="15:26"><expr pos:start="15:16" pos:end="15:26"><name pos:start="15:16" pos:end="15:26"><name pos:start="15:16" pos:end="15:18">acb</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:26">bounce</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:70"><expr pos:start="17:5" pos:end="17:69"><call pos:start="17:5" pos:end="17:69"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:7">acb</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:15">common</name><operator pos:start="17:16" pos:end="17:16">.</operator><name pos:start="17:17" pos:end="17:18">cb</name></name><argument_list pos:start="17:19" pos:end="17:69">(<argument pos:start="17:20" pos:end="17:37"><expr pos:start="17:20" pos:end="17:37"><name pos:start="17:20" pos:end="17:37"><name pos:start="17:20" pos:end="17:22">acb</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:30">common</name><operator pos:start="17:31" pos:end="17:31">.</operator><name pos:start="17:32" pos:end="17:37">opaque</name></name></expr></argument>, <argument pos:start="17:40" pos:end="17:68"><expr pos:start="17:40" pos:end="17:68"><operator pos:start="17:40" pos:end="17:40">(</operator><ternary pos:start="17:41" pos:end="17:67"><condition pos:start="17:41" pos:end="17:54"><expr pos:start="17:41" pos:end="17:52"><name pos:start="17:41" pos:end="17:48"><name pos:start="17:41" pos:end="17:43">acb</name><operator pos:start="17:44" pos:end="17:45">-&gt;</operator><name pos:start="17:46" pos:end="17:48">ret</name></name> <operator pos:start="17:50" pos:end="17:50">&gt;</operator> <literal type="number" pos:start="17:52" pos:end="17:52">0</literal></expr> ?</condition><then pos:start="17:56" pos:end="17:56"> <expr pos:start="17:56" pos:end="17:56"><literal type="number" pos:start="17:56" pos:end="17:56">0</literal></expr> </then><else pos:start="17:58" pos:end="17:67">: <expr pos:start="17:60" pos:end="17:67"><name pos:start="17:60" pos:end="17:67"><name pos:start="17:60" pos:end="17:62">acb</name><operator pos:start="17:63" pos:end="17:64">-&gt;</operator><name pos:start="17:65" pos:end="17:67">ret</name></name></expr></else></ternary><operator pos:start="17:68" pos:end="17:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><call pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:18">qemu_bh_delete</name><argument_list pos:start="19:19" pos:end="19:27">(<argument pos:start="19:20" pos:end="19:26"><expr pos:start="19:20" pos:end="19:26"><name pos:start="19:20" pos:end="19:26"><name pos:start="19:20" pos:end="19:22">acb</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:26">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:7">acb</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:11">bh</name></name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:18">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><call pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:20">qemu_aio_release</name><argument_list pos:start="25:21" pos:end="25:25">(<argument pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:24">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
