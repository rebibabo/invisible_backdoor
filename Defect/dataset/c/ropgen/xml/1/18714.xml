<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18714.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">qmp_migrate_set_speed</name><parameter_list pos:start="1:27" pos:end="1:55">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:34">int64_t</name></type> <name pos:start="1:36" pos:end="1:40">value</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:47">Error</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier><modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:5">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MigrationState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:18">(<expr pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:13">value</name> <operator pos:start="9:15" pos:end="9:15">&lt;</operator> <literal type="number" pos:start="9:17" pos:end="9:17">0</literal></expr>)</condition> <block pos:start="9:20" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:18">

        <expr_stmt pos:start="11:9" pos:end="11:18"><expr pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:13">value</name> <operator pos:start="11:15" pos:end="11:15">=</operator> <literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:25">(<expr pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:13">value</name> <operator pos:start="15:15" pos:end="15:15">&gt;</operator> <name pos:start="15:17" pos:end="15:24">SIZE_MAX</name></expr>)</condition> <block pos:start="15:27" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:25">

        <expr_stmt pos:start="17:9" pos:end="17:25"><expr pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:13">value</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:24">SIZE_MAX</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:30"><expr pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:5">s</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <call pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:27">migrate_get_current</name><argument_list pos:start="23:28" pos:end="23:29">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:22">bandwidth_limit</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <name pos:start="25:26" pos:end="25:30">value</name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:15">file</name></name></expr>)</condition> <block pos:start="27:18" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:81">

        <expr_stmt pos:start="29:9" pos:end="29:81"><expr pos:start="29:9" pos:end="29:80"><call pos:start="29:9" pos:end="29:80"><name pos:start="29:9" pos:end="29:32">qemu_file_set_rate_limit</name><argument_list pos:start="29:33" pos:end="29:80">(<argument pos:start="29:34" pos:end="29:40"><expr pos:start="29:34" pos:end="29:40"><name pos:start="29:34" pos:end="29:40"><name pos:start="29:34" pos:end="29:34">s</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:40">file</name></name></expr></argument>, <argument pos:start="29:43" pos:end="29:79"><expr pos:start="29:43" pos:end="29:79"><name pos:start="29:43" pos:end="29:60"><name pos:start="29:43" pos:end="29:43">s</name><operator pos:start="29:44" pos:end="29:45">-&gt;</operator><name pos:start="29:46" pos:end="29:60">bandwidth_limit</name></name> <operator pos:start="29:62" pos:end="29:62">/</operator> <name pos:start="29:64" pos:end="29:79">XFER_LIMIT_RATIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
