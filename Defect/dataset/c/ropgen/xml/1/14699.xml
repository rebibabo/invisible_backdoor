<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14699.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:5"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">add_pixels_clamped_mmx</name><parameter_list pos:start="1:35" pos:end="1:86">(<parameter pos:start="1:36" pos:end="1:55"><decl pos:start="1:36" pos:end="1:55"><type pos:start="1:36" pos:end="1:55"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:48">DCTELEM</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">block</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:70"><decl pos:start="1:58" pos:end="1:70"><type pos:start="1:58" pos:end="1:70"><name pos:start="1:58" pos:end="1:62">UINT8</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:70">pixels</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:85"><decl pos:start="1:73" pos:end="1:85"><type pos:start="1:73" pos:end="1:85"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:85">line_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:5">{<block_content pos:start="5:5" pos:end="77:12">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">DCTELEM</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">UINT8</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:14">pix</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:25">/* read the pixels */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:14"><expr pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:5">p</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <name pos:start="15:9" pos:end="15:13">block</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:17"><expr pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:7">pix</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:16">pixels</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><call pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:13">MOVQ_ZERO</name><argument_list pos:start="19:14" pos:end="19:18">(<argument pos:start="19:15" pos:end="19:17"><expr pos:start="19:15" pos:end="19:17"><name pos:start="19:15" pos:end="19:17">mm7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:10"><expr pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:5">i</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <literal type="number" pos:start="21:9" pos:end="21:9">4</literal></expr>;</expr_stmt>

    <while pos:start="23:5" pos:end="71:27">while <condition pos:start="23:11" pos:end="23:13">(<expr pos:start="23:12" pos:end="23:12"><name pos:start="23:12" pos:end="23:12">i</name></expr>)</condition> <block pos:start="23:15" pos:end="71:26">{<block_content pos:start="27:17" pos:end="71:26">

	<asm pos:start="25:9" pos:end="25:25">__asm __volatile(</asm>

		<expr_stmt pos:start="27:17" pos:end="71:25"><expr pos:start="27:17" pos:end="67:27"><literal type="string" pos:start="27:17" pos:end="27:38">"movq	%2, %%mm0\n\t"</literal>

		<literal type="string" pos:start="29:17" pos:end="29:39">"movq	8%2, %%mm1\n\t"</literal>

		<literal type="string" pos:start="31:17" pos:end="31:40">"movq	16%2, %%mm2\n\t"</literal>

		<literal type="string" pos:start="33:17" pos:end="33:40">"movq	24%2, %%mm3\n\t"</literal>

		<literal type="string" pos:start="35:17" pos:end="35:38">"movq	%0, %%mm4\n\t"</literal>

		<literal type="string" pos:start="37:17" pos:end="37:38">"movq	%1, %%mm6\n\t"</literal>

		<literal type="string" pos:start="39:17" pos:end="39:41">"movq	%%mm4, %%mm5\n\t"</literal>

		<literal type="string" pos:start="41:17" pos:end="41:44">"punpcklbw %%mm7, %%mm4\n\t"</literal>

		<literal type="string" pos:start="43:17" pos:end="43:44">"punpckhbw %%mm7, %%mm5\n\t"</literal>

		<literal type="string" pos:start="45:17" pos:end="45:41">"paddsw	%%mm4, %%mm0\n\t"</literal>

		<literal type="string" pos:start="47:17" pos:end="47:41">"paddsw	%%mm5, %%mm1\n\t"</literal>

		<literal type="string" pos:start="49:17" pos:end="49:41">"movq	%%mm6, %%mm5\n\t"</literal>

		<literal type="string" pos:start="51:17" pos:end="51:44">"punpcklbw %%mm7, %%mm6\n\t"</literal>

		<literal type="string" pos:start="53:17" pos:end="53:44">"punpckhbw %%mm7, %%mm5\n\t"</literal>

		<literal type="string" pos:start="55:17" pos:end="55:41">"paddsw	%%mm6, %%mm2\n\t"</literal>

		<literal type="string" pos:start="57:17" pos:end="57:41">"paddsw	%%mm5, %%mm3\n\t"</literal>

		<literal type="string" pos:start="59:17" pos:end="59:43">"packuswb %%mm1, %%mm0\n\t"</literal>

		<literal type="string" pos:start="61:17" pos:end="61:43">"packuswb %%mm3, %%mm2\n\t"</literal>

		<literal type="string" pos:start="63:17" pos:end="63:38">"movq	%%mm0, %0\n\t"</literal>

		<literal type="string" pos:start="65:17" pos:end="65:38">"movq	%%mm2, %1\n\t"</literal>

		<operator pos:start="67:17" pos:end="67:17">:</operator><literal type="string" pos:start="67:18" pos:end="67:21">"+m"</literal><operator pos:start="67:22" pos:end="67:22">(</operator><operator pos:start="67:23" pos:end="67:23">*</operator><name pos:start="67:24" pos:end="67:26">pix</name><operator pos:start="67:27" pos:end="67:27">)</operator></expr><operator pos:start="67:28" pos:end="67:28">,</operator> <expr pos:start="67:30" pos:end="71:25"><literal type="string" pos:start="67:30" pos:end="67:33">"+m"</literal><operator pos:start="67:34" pos:end="67:34">(</operator><operator pos:start="67:35" pos:end="67:35">*</operator><operator pos:start="67:36" pos:end="67:36">(</operator><name pos:start="67:37" pos:end="67:39">pix</name><operator pos:start="67:40" pos:end="67:40">+</operator><name pos:start="67:41" pos:end="67:49">line_size</name><operator pos:start="67:50" pos:end="67:50">)</operator><operator pos:start="67:51" pos:end="67:51">)</operator>

		<operator pos:start="69:17" pos:end="69:17">:</operator><literal type="string" pos:start="69:18" pos:end="69:20">"m"</literal><operator pos:start="69:21" pos:end="69:21">(</operator><operator pos:start="69:22" pos:end="69:22">*</operator><name pos:start="69:23" pos:end="69:23">p</name><operator pos:start="69:24" pos:end="69:24">)</operator>

		<operator pos:start="71:17" pos:end="71:17">:</operator><literal type="string" pos:start="71:18" pos:end="71:25">"memory"</literal></expr></expr_stmt>)</block_content></block><empty_stmt pos:start="71:27" pos:end="71:27">;</empty_stmt></while>

        <expr_stmt pos:start="73:9" pos:end="73:27"><expr pos:start="73:9" pos:end="73:26"><name pos:start="73:9" pos:end="73:11">pix</name> <operator pos:start="73:13" pos:end="73:14">+=</operator> <name pos:start="73:16" pos:end="73:24">line_size</name><operator pos:start="73:25" pos:end="73:25">*</operator><literal type="number" pos:start="73:26" pos:end="73:26">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:16"><expr pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:9">p</name> <operator pos:start="75:11" pos:end="75:12">+=</operator> <literal type="number" pos:start="75:14" pos:end="75:15">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:12"><expr pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:9">i</name><operator pos:start="77:10" pos:end="77:11">--</operator></expr>;</expr_stmt>

    </block_content>}</block></function><empty_stmt pos:start="79:6" pos:end="79:6">;</empty_stmt>

}
</unit>
