<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15596.c" pos:tabs="8"><function pos:start="1:1" pos:end="179:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">iterative_me</name><parameter_list pos:start="1:25" pos:end="1:40">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:36">SnowContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>)</parameter_list><block pos:start="1:41" pos:end="179:1">{<block_content pos:start="3:5" pos:end="177:5">

    <decl_stmt pos:start="3:5" pos:end="3:25"><decl pos:start="3:5" pos:end="3:12"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:12">pass</name></decl>, <decl pos:start="3:15" pos:end="3:18"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:15" pos:end="3:18">mb_x</name></decl>, <decl pos:start="3:21" pos:end="3:24"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:21" pos:end="3:24">mb_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:57"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:21">b_width</name> <init pos:start="5:23" pos:end="5:57">= <expr pos:start="5:25" pos:end="5:57"><name pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:25">s</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:34">b_width</name></name>  <operator pos:start="5:37" pos:end="5:38">&lt;&lt;</operator> <name pos:start="5:40" pos:end="5:57"><name pos:start="5:40" pos:end="5:40">s</name><operator pos:start="5:41" pos:end="5:42">-&gt;</operator><name pos:start="5:43" pos:end="5:57">block_max_depth</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:57"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:22">b_height</name><init pos:start="7:23" pos:end="7:57">= <expr pos:start="7:25" pos:end="7:57"><name pos:start="7:25" pos:end="7:35"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:35">b_height</name></name> <operator pos:start="7:37" pos:end="7:38">&lt;&lt;</operator> <name pos:start="7:40" pos:end="7:57"><name pos:start="7:40" pos:end="7:40">s</name><operator pos:start="7:41" pos:end="7:42">-&gt;</operator><name pos:start="7:43" pos:end="7:57">block_max_depth</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:22">b_stride</name><init pos:start="9:23" pos:end="9:31">= <expr pos:start="9:25" pos:end="9:31"><name pos:start="9:25" pos:end="9:31">b_width</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:13">color</name><index pos:start="11:14" pos:end="11:16">[<expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">3</literal></expr>]</index></name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="177:5">for<control pos:start="15:8" pos:end="15:32">(<init pos:start="15:9" pos:end="15:15"><expr pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:12">pass</name><operator pos:start="15:13" pos:end="15:13">=</operator><literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:24"><expr pos:start="15:17" pos:end="15:23"><name pos:start="15:17" pos:end="15:20">pass</name><operator pos:start="15:21" pos:end="15:21">&lt;</operator><literal type="number" pos:start="15:22" pos:end="15:23">50</literal></expr>;</condition> <incr pos:start="15:26" pos:end="15:31"><expr pos:start="15:26" pos:end="15:31"><name pos:start="15:26" pos:end="15:29">pass</name><operator pos:start="15:30" pos:end="15:31">++</operator></expr></incr>)</control><block pos:start="15:33" pos:end="177:5">{<block_content pos:start="17:9" pos:end="175:18">

        <decl_stmt pos:start="17:9" pos:end="17:22"><decl pos:start="17:9" pos:end="17:21"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:18">change</name><init pos:start="17:19" pos:end="17:21">= <expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">0</literal></expr></init></decl>;</decl_stmt>



        <for pos:start="21:9" pos:end="169:9">for<control pos:start="21:12" pos:end="21:43">(<init pos:start="21:13" pos:end="21:20"><expr pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:16">mb_y</name><operator pos:start="21:17" pos:end="21:17">=</operator> <literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr>;</init> <condition pos:start="21:22" pos:end="21:35"><expr pos:start="21:22" pos:end="21:34"><name pos:start="21:22" pos:end="21:25">mb_y</name><operator pos:start="21:26" pos:end="21:26">&lt;</operator><name pos:start="21:27" pos:end="21:34">b_height</name></expr>;</condition> <incr pos:start="21:37" pos:end="21:42"><expr pos:start="21:37" pos:end="21:42"><name pos:start="21:37" pos:end="21:40">mb_y</name><operator pos:start="21:41" pos:end="21:42">++</operator></expr></incr>)</control><block pos:start="21:44" pos:end="169:9">{<block_content pos:start="23:13" pos:end="167:13">

            <for pos:start="23:13" pos:end="167:13">for<control pos:start="23:16" pos:end="23:46">(<init pos:start="23:17" pos:end="23:24"><expr pos:start="23:17" pos:end="23:23"><name pos:start="23:17" pos:end="23:20">mb_x</name><operator pos:start="23:21" pos:end="23:21">=</operator> <literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr>;</init> <condition pos:start="23:26" pos:end="23:38"><expr pos:start="23:26" pos:end="23:37"><name pos:start="23:26" pos:end="23:29">mb_x</name><operator pos:start="23:30" pos:end="23:30">&lt;</operator><name pos:start="23:31" pos:end="23:37">b_width</name></expr>;</condition> <incr pos:start="23:40" pos:end="23:45"><expr pos:start="23:40" pos:end="23:45"><name pos:start="23:40" pos:end="23:43">mb_x</name><operator pos:start="23:44" pos:end="23:45">++</operator></expr></incr>)</control><block pos:start="23:47" pos:end="167:13">{<block_content pos:start="25:17" pos:end="165:17">

                <decl_stmt pos:start="25:17" pos:end="25:37"><decl pos:start="25:17" pos:end="25:30"><type pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:19">int</name></type> <name pos:start="25:21" pos:end="25:30">dia_change</name></decl>, <decl pos:start="25:33" pos:end="25:33"><type ref="prev" pos:start="25:17" pos:end="25:19"/><name pos:start="25:33" pos:end="25:33">i</name></decl>, <decl pos:start="25:36" pos:end="25:36"><type ref="prev" pos:start="25:17" pos:end="25:19"/><name pos:start="25:36" pos:end="25:36">j</name></decl>;</decl_stmt>

                <decl_stmt pos:start="27:17" pos:end="27:37"><decl pos:start="27:17" pos:end="27:36"><type pos:start="27:17" pos:end="27:19"><name pos:start="27:17" pos:end="27:19">int</name></type> <name pos:start="27:21" pos:end="27:27">best_rd</name><init pos:start="27:28" pos:end="27:36">= <expr pos:start="27:30" pos:end="27:36"><name pos:start="27:30" pos:end="27:36">INT_MAX</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="29:17" pos:end="29:33"><decl pos:start="29:17" pos:end="29:32"><type pos:start="29:17" pos:end="29:25"><name pos:start="29:17" pos:end="29:25">BlockNode</name></type> <name pos:start="29:27" pos:end="29:32">backup</name></decl>;</decl_stmt>

                <decl_stmt pos:start="31:17" pos:end="31:56"><decl pos:start="31:17" pos:end="31:55"><type pos:start="31:17" pos:end="31:25"><specifier pos:start="31:17" pos:end="31:21">const</specifier> <name pos:start="31:23" pos:end="31:25">int</name></type> <name pos:start="31:27" pos:end="31:31">index</name><init pos:start="31:32" pos:end="31:55">= <expr pos:start="31:34" pos:end="31:55"><name pos:start="31:34" pos:end="31:37">mb_x</name> <operator pos:start="31:39" pos:end="31:39">+</operator> <name pos:start="31:41" pos:end="31:44">mb_y</name> <operator pos:start="31:46" pos:end="31:46">*</operator> <name pos:start="31:48" pos:end="31:55">b_stride</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="33:17" pos:end="33:51"><decl pos:start="33:17" pos:end="33:50"><type pos:start="33:17" pos:end="33:27"><name pos:start="33:17" pos:end="33:25">BlockNode</name> <modifier pos:start="33:27" pos:end="33:27">*</modifier></type><name pos:start="33:28" pos:end="33:32">block</name><init pos:start="33:33" pos:end="33:50">= <expr pos:start="33:35" pos:end="33:50"><operator pos:start="33:35" pos:end="33:35">&amp;</operator><name pos:start="33:36" pos:end="33:50"><name pos:start="33:36" pos:end="33:36">s</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:43">block</name><index pos:start="33:44" pos:end="33:50">[<expr pos:start="33:45" pos:end="33:49"><name pos:start="33:45" pos:end="33:49">index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="35:17" pos:end="35:106"><decl pos:start="35:17" pos:end="35:105"><type pos:start="35:17" pos:end="35:27"><name pos:start="35:17" pos:end="35:25">BlockNode</name> <modifier pos:start="35:27" pos:end="35:27">*</modifier></type><name pos:start="35:28" pos:end="35:29">tb</name> <init pos:start="35:31" pos:end="35:105">=                 <expr pos:start="35:49" pos:end="35:105"><ternary pos:start="35:49" pos:end="35:105"><condition pos:start="35:49" pos:end="35:63"><expr pos:start="35:49" pos:end="35:52"><name pos:start="35:49" pos:end="35:52">mb_y</name></expr>          ?</condition><then pos:start="35:65" pos:end="35:91"> <expr pos:start="35:65" pos:end="35:91"><operator pos:start="35:65" pos:end="35:65">&amp;</operator><name pos:start="35:66" pos:end="35:91"><name pos:start="35:66" pos:end="35:66">s</name><operator pos:start="35:67" pos:end="35:68">-&gt;</operator><name pos:start="35:69" pos:end="35:73">block</name><index pos:start="35:74" pos:end="35:91">[<expr pos:start="35:75" pos:end="35:88"><name pos:start="35:75" pos:end="35:79">index</name><operator pos:start="35:80" pos:end="35:80">-</operator><name pos:start="35:81" pos:end="35:88">b_stride</name></expr>  ]</index></name></expr> </then><else pos:start="35:93" pos:end="35:105">: <expr pos:start="35:95" pos:end="35:105"><operator pos:start="35:95" pos:end="35:95">&amp;</operator><name pos:start="35:96" pos:end="35:105">null_block</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="37:17" pos:end="37:106"><decl pos:start="37:17" pos:end="37:105"><type pos:start="37:17" pos:end="37:27"><name pos:start="37:17" pos:end="37:25">BlockNode</name> <modifier pos:start="37:27" pos:end="37:27">*</modifier></type><name pos:start="37:28" pos:end="37:29">lb</name> <init pos:start="37:31" pos:end="37:105">= <expr pos:start="37:33" pos:end="37:105"><ternary pos:start="37:33" pos:end="37:105"><condition pos:start="37:33" pos:end="37:63"><expr pos:start="37:33" pos:end="37:36"><name pos:start="37:33" pos:end="37:36">mb_x</name></expr>                          ?</condition><then pos:start="37:65" pos:end="37:91"> <expr pos:start="37:65" pos:end="37:91"><operator pos:start="37:65" pos:end="37:65">&amp;</operator><name pos:start="37:66" pos:end="37:91"><name pos:start="37:66" pos:end="37:66">s</name><operator pos:start="37:67" pos:end="37:68">-&gt;</operator><name pos:start="37:69" pos:end="37:73">block</name><index pos:start="37:74" pos:end="37:91">[<expr pos:start="37:75" pos:end="37:90"><name pos:start="37:75" pos:end="37:79">index</name>         <operator pos:start="37:89" pos:end="37:89">-</operator><literal type="number" pos:start="37:90" pos:end="37:90">1</literal></expr>]</index></name></expr> </then><else pos:start="37:93" pos:end="37:105">: <expr pos:start="37:95" pos:end="37:105"><operator pos:start="37:95" pos:end="37:95">&amp;</operator><name pos:start="37:96" pos:end="37:105">null_block</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="39:17" pos:end="39:106"><decl pos:start="39:17" pos:end="39:105"><type pos:start="39:17" pos:end="39:27"><name pos:start="39:17" pos:end="39:25">BlockNode</name> <modifier pos:start="39:27" pos:end="39:27">*</modifier></type><name pos:start="39:28" pos:end="39:29">rb</name> <init pos:start="39:31" pos:end="39:105">= <expr pos:start="39:33" pos:end="39:105"><ternary pos:start="39:33" pos:end="39:105"><condition pos:start="39:33" pos:end="39:63"><expr pos:start="39:33" pos:end="39:44"><name pos:start="39:33" pos:end="39:36">mb_x</name><operator pos:start="39:37" pos:end="39:37">&lt;</operator><name pos:start="39:38" pos:end="39:44">b_width</name></expr>                  ?</condition><then pos:start="39:65" pos:end="39:91"> <expr pos:start="39:65" pos:end="39:91"><operator pos:start="39:65" pos:end="39:65">&amp;</operator><name pos:start="39:66" pos:end="39:91"><name pos:start="39:66" pos:end="39:66">s</name><operator pos:start="39:67" pos:end="39:68">-&gt;</operator><name pos:start="39:69" pos:end="39:73">block</name><index pos:start="39:74" pos:end="39:91">[<expr pos:start="39:75" pos:end="39:90"><name pos:start="39:75" pos:end="39:79">index</name>         <operator pos:start="39:89" pos:end="39:89">+</operator><literal type="number" pos:start="39:90" pos:end="39:90">1</literal></expr>]</index></name></expr> </then><else pos:start="39:93" pos:end="39:105">: <expr pos:start="39:95" pos:end="39:105"><operator pos:start="39:95" pos:end="39:95">&amp;</operator><name pos:start="39:96" pos:end="39:105">null_block</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="41:17" pos:end="41:106"><decl pos:start="41:17" pos:end="41:105"><type pos:start="41:17" pos:end="41:27"><name pos:start="41:17" pos:end="41:25">BlockNode</name> <modifier pos:start="41:27" pos:end="41:27">*</modifier></type><name pos:start="41:28" pos:end="41:29">bb</name> <init pos:start="41:31" pos:end="41:105">=                 <expr pos:start="41:49" pos:end="41:105"><ternary pos:start="41:49" pos:end="41:105"><condition pos:start="41:49" pos:end="41:63"><expr pos:start="41:49" pos:end="41:61"><name pos:start="41:49" pos:end="41:52">mb_y</name><operator pos:start="41:53" pos:end="41:53">&lt;</operator><name pos:start="41:54" pos:end="41:61">b_height</name></expr> ?</condition><then pos:start="41:65" pos:end="41:91"> <expr pos:start="41:65" pos:end="41:91"><operator pos:start="41:65" pos:end="41:65">&amp;</operator><name pos:start="41:66" pos:end="41:91"><name pos:start="41:66" pos:end="41:66">s</name><operator pos:start="41:67" pos:end="41:68">-&gt;</operator><name pos:start="41:69" pos:end="41:73">block</name><index pos:start="41:74" pos:end="41:91">[<expr pos:start="41:75" pos:end="41:88"><name pos:start="41:75" pos:end="41:79">index</name><operator pos:start="41:80" pos:end="41:80">+</operator><name pos:start="41:81" pos:end="41:88">b_stride</name></expr>  ]</index></name></expr> </then><else pos:start="41:93" pos:end="41:105">: <expr pos:start="41:95" pos:end="41:105"><operator pos:start="41:95" pos:end="41:95">&amp;</operator><name pos:start="41:96" pos:end="41:105">null_block</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="43:17" pos:end="43:106"><decl pos:start="43:17" pos:end="43:105"><type pos:start="43:17" pos:end="43:27"><name pos:start="43:17" pos:end="43:25">BlockNode</name> <modifier pos:start="43:27" pos:end="43:27">*</modifier></type><name pos:start="43:28" pos:end="43:30">tlb</name><init pos:start="43:31" pos:end="43:105">= <expr pos:start="43:33" pos:end="43:105"><ternary pos:start="43:33" pos:end="43:105"><condition pos:start="43:33" pos:end="43:63"><expr pos:start="43:33" pos:end="43:52"><name pos:start="43:33" pos:end="43:36">mb_x</name>         <operator pos:start="43:46" pos:end="43:47">&amp;&amp;</operator> <name pos:start="43:49" pos:end="43:52">mb_y</name></expr>          ?</condition><then pos:start="43:65" pos:end="43:91"> <expr pos:start="43:65" pos:end="43:91"><operator pos:start="43:65" pos:end="43:65">&amp;</operator><name pos:start="43:66" pos:end="43:91"><name pos:start="43:66" pos:end="43:66">s</name><operator pos:start="43:67" pos:end="43:68">-&gt;</operator><name pos:start="43:69" pos:end="43:73">block</name><index pos:start="43:74" pos:end="43:91">[<expr pos:start="43:75" pos:end="43:90"><name pos:start="43:75" pos:end="43:79">index</name><operator pos:start="43:80" pos:end="43:80">-</operator><name pos:start="43:81" pos:end="43:88">b_stride</name><operator pos:start="43:89" pos:end="43:89">-</operator><literal type="number" pos:start="43:90" pos:end="43:90">1</literal></expr>]</index></name></expr> </then><else pos:start="43:93" pos:end="43:105">: <expr pos:start="43:95" pos:end="43:105"><operator pos:start="43:95" pos:end="43:95">&amp;</operator><name pos:start="43:96" pos:end="43:105">null_block</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="45:17" pos:end="45:106"><decl pos:start="45:17" pos:end="45:105"><type pos:start="45:17" pos:end="45:27"><name pos:start="45:17" pos:end="45:25">BlockNode</name> <modifier pos:start="45:27" pos:end="45:27">*</modifier></type><name pos:start="45:28" pos:end="45:30">trb</name><init pos:start="45:31" pos:end="45:105">= <expr pos:start="45:33" pos:end="45:105"><ternary pos:start="45:33" pos:end="45:105"><condition pos:start="45:33" pos:end="45:63"><expr pos:start="45:33" pos:end="45:52"><name pos:start="45:33" pos:end="45:36">mb_x</name><operator pos:start="45:37" pos:end="45:37">&lt;</operator><name pos:start="45:38" pos:end="45:44">b_width</name> <operator pos:start="45:46" pos:end="45:47">&amp;&amp;</operator> <name pos:start="45:49" pos:end="45:52">mb_y</name></expr>          ?</condition><then pos:start="45:65" pos:end="45:91"> <expr pos:start="45:65" pos:end="45:91"><operator pos:start="45:65" pos:end="45:65">&amp;</operator><name pos:start="45:66" pos:end="45:91"><name pos:start="45:66" pos:end="45:66">s</name><operator pos:start="45:67" pos:end="45:68">-&gt;</operator><name pos:start="45:69" pos:end="45:73">block</name><index pos:start="45:74" pos:end="45:91">[<expr pos:start="45:75" pos:end="45:90"><name pos:start="45:75" pos:end="45:79">index</name><operator pos:start="45:80" pos:end="45:80">-</operator><name pos:start="45:81" pos:end="45:88">b_stride</name><operator pos:start="45:89" pos:end="45:89">+</operator><literal type="number" pos:start="45:90" pos:end="45:90">1</literal></expr>]</index></name></expr> </then><else pos:start="45:93" pos:end="45:105">: <expr pos:start="45:95" pos:end="45:105"><operator pos:start="45:95" pos:end="45:95">&amp;</operator><name pos:start="45:96" pos:end="45:105">null_block</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="47:17" pos:end="47:106"><decl pos:start="47:17" pos:end="47:105"><type pos:start="47:17" pos:end="47:27"><name pos:start="47:17" pos:end="47:25">BlockNode</name> <modifier pos:start="47:27" pos:end="47:27">*</modifier></type><name pos:start="47:28" pos:end="47:30">blb</name><init pos:start="47:31" pos:end="47:105">= <expr pos:start="47:33" pos:end="47:105"><ternary pos:start="47:33" pos:end="47:105"><condition pos:start="47:33" pos:end="47:63"><expr pos:start="47:33" pos:end="47:61"><name pos:start="47:33" pos:end="47:36">mb_x</name>         <operator pos:start="47:46" pos:end="47:47">&amp;&amp;</operator> <name pos:start="47:49" pos:end="47:52">mb_y</name><operator pos:start="47:53" pos:end="47:53">&lt;</operator><name pos:start="47:54" pos:end="47:61">b_height</name></expr> ?</condition><then pos:start="47:65" pos:end="47:91"> <expr pos:start="47:65" pos:end="47:91"><operator pos:start="47:65" pos:end="47:65">&amp;</operator><name pos:start="47:66" pos:end="47:91"><name pos:start="47:66" pos:end="47:66">s</name><operator pos:start="47:67" pos:end="47:68">-&gt;</operator><name pos:start="47:69" pos:end="47:73">block</name><index pos:start="47:74" pos:end="47:91">[<expr pos:start="47:75" pos:end="47:90"><name pos:start="47:75" pos:end="47:79">index</name><operator pos:start="47:80" pos:end="47:80">+</operator><name pos:start="47:81" pos:end="47:88">b_stride</name><operator pos:start="47:89" pos:end="47:89">-</operator><literal type="number" pos:start="47:90" pos:end="47:90">1</literal></expr>]</index></name></expr> </then><else pos:start="47:93" pos:end="47:105">: <expr pos:start="47:95" pos:end="47:105"><operator pos:start="47:95" pos:end="47:95">&amp;</operator><name pos:start="47:96" pos:end="47:105">null_block</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="49:17" pos:end="49:106"><decl pos:start="49:17" pos:end="49:105"><type pos:start="49:17" pos:end="49:27"><name pos:start="49:17" pos:end="49:25">BlockNode</name> <modifier pos:start="49:27" pos:end="49:27">*</modifier></type><name pos:start="49:28" pos:end="49:30">brb</name><init pos:start="49:31" pos:end="49:105">= <expr pos:start="49:33" pos:end="49:105"><ternary pos:start="49:33" pos:end="49:105"><condition pos:start="49:33" pos:end="49:63"><expr pos:start="49:33" pos:end="49:61"><name pos:start="49:33" pos:end="49:36">mb_x</name><operator pos:start="49:37" pos:end="49:37">&lt;</operator><name pos:start="49:38" pos:end="49:44">b_width</name> <operator pos:start="49:46" pos:end="49:47">&amp;&amp;</operator> <name pos:start="49:49" pos:end="49:52">mb_y</name><operator pos:start="49:53" pos:end="49:53">&lt;</operator><name pos:start="49:54" pos:end="49:61">b_height</name></expr> ?</condition><then pos:start="49:65" pos:end="49:91"> <expr pos:start="49:65" pos:end="49:91"><operator pos:start="49:65" pos:end="49:65">&amp;</operator><name pos:start="49:66" pos:end="49:91"><name pos:start="49:66" pos:end="49:66">s</name><operator pos:start="49:67" pos:end="49:68">-&gt;</operator><name pos:start="49:69" pos:end="49:73">block</name><index pos:start="49:74" pos:end="49:91">[<expr pos:start="49:75" pos:end="49:90"><name pos:start="49:75" pos:end="49:79">index</name><operator pos:start="49:80" pos:end="49:80">+</operator><name pos:start="49:81" pos:end="49:88">b_stride</name><operator pos:start="49:89" pos:end="49:89">+</operator><literal type="number" pos:start="49:90" pos:end="49:90">1</literal></expr>]</index></name></expr> </then><else pos:start="49:93" pos:end="49:105">: <expr pos:start="49:95" pos:end="49:105"><operator pos:start="49:95" pos:end="49:95">&amp;</operator><name pos:start="49:96" pos:end="49:105">null_block</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="53:17" pos:end="55:29"><if pos:start="53:17" pos:end="55:29">if<condition pos:start="53:19" pos:end="53:53">(<expr pos:start="53:20" pos:end="53:52"><name pos:start="53:20" pos:end="53:23">pass</name> <operator pos:start="53:25" pos:end="53:26">&amp;&amp;</operator> <operator pos:start="53:28" pos:end="53:28">(</operator><name pos:start="53:29" pos:end="53:39"><name pos:start="53:29" pos:end="53:33">block</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:39">type</name></name> <operator pos:start="53:41" pos:end="53:41">&amp;</operator> <name pos:start="53:43" pos:end="53:51">BLOCK_OPT</name><operator pos:start="53:52" pos:end="53:52">)</operator></expr>)</condition><block type="pseudo" pos:start="55:21" pos:end="55:29"><block_content pos:start="55:21" pos:end="55:29">

                    <continue pos:start="55:21" pos:end="55:29">continue;</continue></block_content></block></if></if_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:41"><expr pos:start="57:17" pos:end="57:40"><name pos:start="57:17" pos:end="57:27"><name pos:start="57:17" pos:end="57:21">block</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:27">type</name></name> <operator pos:start="57:29" pos:end="57:30">|=</operator> <name pos:start="57:32" pos:end="57:40">BLOCK_OPT</name></expr>;</expr_stmt>



                <expr_stmt pos:start="61:17" pos:end="61:31"><expr pos:start="61:17" pos:end="61:30"><name pos:start="61:17" pos:end="61:22">backup</name><operator pos:start="61:23" pos:end="61:23">=</operator> <operator pos:start="61:25" pos:end="61:25">*</operator><name pos:start="61:26" pos:end="61:30">block</name></expr>;</expr_stmt>



                <if_stmt pos:start="65:17" pos:end="67:64"><if pos:start="65:17" pos:end="67:64">if<condition pos:start="65:19" pos:end="65:43">(<expr pos:start="65:20" pos:end="65:42"><operator pos:start="65:20" pos:end="65:20">!</operator><name pos:start="65:21" pos:end="65:42"><name pos:start="65:21" pos:end="65:21">s</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:42">me_cache_generation</name></name></expr>)</condition><block type="pseudo" pos:start="67:21" pos:end="67:64"><block_content pos:start="67:21" pos:end="67:64">

                    <expr_stmt pos:start="67:21" pos:end="67:64"><expr pos:start="67:21" pos:end="67:63"><call pos:start="67:21" pos:end="67:63"><name pos:start="67:21" pos:end="67:26">memset</name><argument_list pos:start="67:27" pos:end="67:63">(<argument pos:start="67:28" pos:end="67:38"><expr pos:start="67:28" pos:end="67:38"><name pos:start="67:28" pos:end="67:38"><name pos:start="67:28" pos:end="67:28">s</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:38">me_cache</name></name></expr></argument>, <argument pos:start="67:41" pos:end="67:41"><expr pos:start="67:41" pos:end="67:41"><literal type="number" pos:start="67:41" pos:end="67:41">0</literal></expr></argument>, <argument pos:start="67:44" pos:end="67:62"><expr pos:start="67:44" pos:end="67:62"><sizeof pos:start="67:44" pos:end="67:62">sizeof<argument_list pos:start="67:50" pos:end="67:62">(<argument pos:start="67:51" pos:end="67:61"><expr pos:start="67:51" pos:end="67:61"><name pos:start="67:51" pos:end="67:61"><name pos:start="67:51" pos:end="67:51">s</name><operator pos:start="67:52" pos:end="67:53">-&gt;</operator><name pos:start="67:54" pos:end="67:61">me_cache</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:48"><expr pos:start="69:17" pos:end="69:47"><name pos:start="69:17" pos:end="69:38"><name pos:start="69:17" pos:end="69:17">s</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:38">me_cache_generation</name></name> <operator pos:start="69:40" pos:end="69:41">+=</operator> <literal type="number" pos:start="69:43" pos:end="69:43">1</literal><operator pos:start="69:44" pos:end="69:45">&lt;&lt;</operator><literal type="number" pos:start="69:46" pos:end="69:47">22</literal></expr>;</expr_stmt>



                <comment type="line" pos:start="73:17" pos:end="73:66">// get previous score (cant be cached due to OBMC)</comment>

                <macro pos:start="75:17" pos:end="75:87"><name pos:start="75:17" pos:end="75:27">check_block</name><argument_list pos:start="75:28" pos:end="75:87">(<argument pos:start="75:29" pos:end="75:29">s</argument>, <argument pos:start="75:32" pos:end="75:35">mb_x</argument>, <argument pos:start="75:38" pos:end="75:41">mb_y</argument>, <argument pos:start="75:44" pos:end="75:61">(int[<literal type="number" pos:start="75:49" pos:end="75:49">2</literal>]){block-&gt;mx</argument>, <argument pos:start="75:64" pos:end="75:73">block-&gt;my}</argument>, <argument pos:start="75:76" pos:end="75:76"><literal type="number" pos:start="75:76" pos:end="75:76">0</literal></argument>, <argument pos:start="75:79" pos:end="75:86">&amp;best_rd</argument>)</argument_list></macro><empty_stmt pos:start="75:88" pos:end="75:88">;</empty_stmt>

                <macro pos:start="77:17" pos:end="77:71"><name pos:start="77:17" pos:end="77:27">check_block</name><argument_list pos:start="77:28" pos:end="77:71">(<argument pos:start="77:29" pos:end="77:29">s</argument>, <argument pos:start="77:32" pos:end="77:35">mb_x</argument>, <argument pos:start="77:38" pos:end="77:41">mb_y</argument>, <argument pos:start="77:44" pos:end="77:53">(int[<literal type="number" pos:start="77:49" pos:end="77:49">2</literal>]){<literal type="number" pos:start="77:53" pos:end="77:53">0</literal></argument>, <argument pos:start="77:56" pos:end="77:57"><literal type="number" pos:start="77:56" pos:end="77:56">0</literal>}</argument>, <argument pos:start="77:60" pos:end="77:60"><literal type="number" pos:start="77:60" pos:end="77:60">0</literal></argument>, <argument pos:start="77:63" pos:end="77:70">&amp;best_rd</argument>)</argument_list></macro><empty_stmt pos:start="77:72" pos:end="77:72">;</empty_stmt>

                <macro pos:start="79:17" pos:end="79:81"><name pos:start="79:17" pos:end="79:27">check_block</name><argument_list pos:start="79:28" pos:end="79:81">(<argument pos:start="79:29" pos:end="79:29">s</argument>, <argument pos:start="79:32" pos:end="79:35">mb_x</argument>, <argument pos:start="79:38" pos:end="79:41">mb_y</argument>, <argument pos:start="79:44" pos:end="79:58">(int[<literal type="number" pos:start="79:49" pos:end="79:49">2</literal>]){tb-&gt;mx</argument>, <argument pos:start="79:61" pos:end="79:67">tb-&gt;my}</argument>, <argument pos:start="79:70" pos:end="79:70"><literal type="number" pos:start="79:70" pos:end="79:70">0</literal></argument>, <argument pos:start="79:73" pos:end="79:80">&amp;best_rd</argument>)</argument_list></macro><empty_stmt pos:start="79:82" pos:end="79:82">;</empty_stmt>

                <macro pos:start="81:17" pos:end="81:81"><name pos:start="81:17" pos:end="81:27">check_block</name><argument_list pos:start="81:28" pos:end="81:81">(<argument pos:start="81:29" pos:end="81:29">s</argument>, <argument pos:start="81:32" pos:end="81:35">mb_x</argument>, <argument pos:start="81:38" pos:end="81:41">mb_y</argument>, <argument pos:start="81:44" pos:end="81:58">(int[<literal type="number" pos:start="81:49" pos:end="81:49">2</literal>]){lb-&gt;mx</argument>, <argument pos:start="81:61" pos:end="81:67">lb-&gt;my}</argument>, <argument pos:start="81:70" pos:end="81:70"><literal type="number" pos:start="81:70" pos:end="81:70">0</literal></argument>, <argument pos:start="81:73" pos:end="81:80">&amp;best_rd</argument>)</argument_list></macro><empty_stmt pos:start="81:82" pos:end="81:82">;</empty_stmt>

                <macro pos:start="83:17" pos:end="83:81"><name pos:start="83:17" pos:end="83:27">check_block</name><argument_list pos:start="83:28" pos:end="83:81">(<argument pos:start="83:29" pos:end="83:29">s</argument>, <argument pos:start="83:32" pos:end="83:35">mb_x</argument>, <argument pos:start="83:38" pos:end="83:41">mb_y</argument>, <argument pos:start="83:44" pos:end="83:58">(int[<literal type="number" pos:start="83:49" pos:end="83:49">2</literal>]){rb-&gt;mx</argument>, <argument pos:start="83:61" pos:end="83:67">rb-&gt;my}</argument>, <argument pos:start="83:70" pos:end="83:70"><literal type="number" pos:start="83:70" pos:end="83:70">0</literal></argument>, <argument pos:start="83:73" pos:end="83:80">&amp;best_rd</argument>)</argument_list></macro><empty_stmt pos:start="83:82" pos:end="83:82">;</empty_stmt>

                <macro pos:start="85:17" pos:end="85:81"><name pos:start="85:17" pos:end="85:27">check_block</name><argument_list pos:start="85:28" pos:end="85:81">(<argument pos:start="85:29" pos:end="85:29">s</argument>, <argument pos:start="85:32" pos:end="85:35">mb_x</argument>, <argument pos:start="85:38" pos:end="85:41">mb_y</argument>, <argument pos:start="85:44" pos:end="85:58">(int[<literal type="number" pos:start="85:49" pos:end="85:49">2</literal>]){bb-&gt;mx</argument>, <argument pos:start="85:61" pos:end="85:67">bb-&gt;my}</argument>, <argument pos:start="85:70" pos:end="85:70"><literal type="number" pos:start="85:70" pos:end="85:70">0</literal></argument>, <argument pos:start="85:73" pos:end="85:80">&amp;best_rd</argument>)</argument_list></macro><empty_stmt pos:start="85:82" pos:end="85:82">;</empty_stmt>



                <comment type="block" pos:start="89:17" pos:end="89:32">/* fullpel ME */</comment>

                <comment type="line" pos:start="91:17" pos:end="91:72">//FIXME avoid subpel interpol / round to nearest integer</comment>

                <do pos:start="93:17" pos:end="113:35">do<block pos:start="93:19" pos:end="113:17">{<block_content pos:start="95:21" pos:end="111:21">

                    <expr_stmt pos:start="95:21" pos:end="95:33"><expr pos:start="95:21" pos:end="95:32"><name pos:start="95:21" pos:end="95:30">dia_change</name><operator pos:start="95:31" pos:end="95:31">=</operator><literal type="number" pos:start="95:32" pos:end="95:32">0</literal></expr>;</expr_stmt>

                    <for pos:start="97:21" pos:end="111:21">for<control pos:start="97:24" pos:end="97:65">(<init pos:start="97:25" pos:end="97:28"><expr pos:start="97:25" pos:end="97:27"><name pos:start="97:25" pos:end="97:25">i</name><operator pos:start="97:26" pos:end="97:26">=</operator><literal type="number" pos:start="97:27" pos:end="97:27">0</literal></expr>;</init> <condition pos:start="97:30" pos:end="97:60"><expr pos:start="97:30" pos:end="97:59"><name pos:start="97:30" pos:end="97:30">i</name><operator pos:start="97:31" pos:end="97:31">&lt;</operator><call pos:start="97:32" pos:end="97:59"><name pos:start="97:32" pos:end="97:36">FFMAX</name><argument_list pos:start="97:37" pos:end="97:59">(<argument pos:start="97:38" pos:end="97:55"><expr pos:start="97:38" pos:end="97:55"><name pos:start="97:38" pos:end="97:55"><name pos:start="97:38" pos:end="97:38">s</name><operator pos:start="97:39" pos:end="97:40">-&gt;</operator><name pos:start="97:41" pos:end="97:45">avctx</name><operator pos:start="97:46" pos:end="97:47">-&gt;</operator><name pos:start="97:48" pos:end="97:55">dia_size</name></name></expr></argument>, <argument pos:start="97:58" pos:end="97:58"><expr pos:start="97:58" pos:end="97:58"><literal type="number" pos:start="97:58" pos:end="97:58">1</literal></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="97:62" pos:end="97:64"><expr pos:start="97:62" pos:end="97:64"><name pos:start="97:62" pos:end="97:62">i</name><operator pos:start="97:63" pos:end="97:64">++</operator></expr></incr>)</control><block pos:start="97:66" pos:end="111:21">{<block_content pos:start="99:25" pos:end="109:25">

                        <for pos:start="99:25" pos:end="109:25">for<control pos:start="99:28" pos:end="99:42">(<init pos:start="99:29" pos:end="99:32"><expr pos:start="99:29" pos:end="99:31"><name pos:start="99:29" pos:end="99:29">j</name><operator pos:start="99:30" pos:end="99:30">=</operator><literal type="number" pos:start="99:31" pos:end="99:31">0</literal></expr>;</init> <condition pos:start="99:34" pos:end="99:37"><expr pos:start="99:34" pos:end="99:36"><name pos:start="99:34" pos:end="99:34">j</name><operator pos:start="99:35" pos:end="99:35">&lt;</operator><name pos:start="99:36" pos:end="99:36">i</name></expr>;</condition> <incr pos:start="99:39" pos:end="99:41"><expr pos:start="99:39" pos:end="99:41"><name pos:start="99:39" pos:end="99:39">j</name><operator pos:start="99:40" pos:end="99:41">++</operator></expr></incr>)</control><block pos:start="99:43" pos:end="109:25">{<block_content pos:start="101:29" pos:end="107:128">

                            <expr_stmt pos:start="101:29" pos:end="101:128"><expr pos:start="101:29" pos:end="101:127"><name pos:start="101:29" pos:end="101:38">dia_change</name> <operator pos:start="101:40" pos:end="101:41">|=</operator> <macro pos:start="101:43" pos:end="101:127"><name pos:start="101:43" pos:end="101:53">check_block</name><argument_list pos:start="101:54" pos:end="101:127">(<argument pos:start="101:55" pos:end="101:55">s</argument>, <argument pos:start="101:58" pos:end="101:61">mb_x</argument>, <argument pos:start="101:64" pos:end="101:67">mb_y</argument>, <argument pos:start="101:70" pos:end="101:95">(int[<literal type="number" pos:start="101:75" pos:end="101:75">2</literal>]){block-&gt;mx+<literal type="number" pos:start="101:89" pos:end="101:89">4</literal>*(i-j)</argument>, <argument pos:start="101:98" pos:end="101:113">block-&gt;my+(<literal type="number" pos:start="101:109" pos:end="101:109">4</literal>*j)}</argument>, <argument pos:start="101:116" pos:end="101:116"><literal type="number" pos:start="101:116" pos:end="101:116">0</literal></argument>, <argument pos:start="101:119" pos:end="101:126">&amp;best_rd</argument>)</argument_list></macro></expr>;</expr_stmt>

                            <expr_stmt pos:start="103:29" pos:end="103:128"><expr pos:start="103:29" pos:end="103:127"><name pos:start="103:29" pos:end="103:38">dia_change</name> <operator pos:start="103:40" pos:end="103:41">|=</operator> <macro pos:start="103:43" pos:end="103:127"><name pos:start="103:43" pos:end="103:53">check_block</name><argument_list pos:start="103:54" pos:end="103:127">(<argument pos:start="103:55" pos:end="103:55">s</argument>, <argument pos:start="103:58" pos:end="103:61">mb_x</argument>, <argument pos:start="103:64" pos:end="103:67">mb_y</argument>, <argument pos:start="103:70" pos:end="103:95">(int[<literal type="number" pos:start="103:75" pos:end="103:75">2</literal>]){block-&gt;mx-<literal type="number" pos:start="103:89" pos:end="103:89">4</literal>*(i-j)</argument>, <argument pos:start="103:98" pos:end="103:113">block-&gt;my-(<literal type="number" pos:start="103:109" pos:end="103:109">4</literal>*j)}</argument>, <argument pos:start="103:116" pos:end="103:116"><literal type="number" pos:start="103:116" pos:end="103:116">0</literal></argument>, <argument pos:start="103:119" pos:end="103:126">&amp;best_rd</argument>)</argument_list></macro></expr>;</expr_stmt>

                            <expr_stmt pos:start="105:29" pos:end="105:128"><expr pos:start="105:29" pos:end="105:127"><name pos:start="105:29" pos:end="105:38">dia_change</name> <operator pos:start="105:40" pos:end="105:41">|=</operator> <macro pos:start="105:43" pos:end="105:127"><name pos:start="105:43" pos:end="105:53">check_block</name><argument_list pos:start="105:54" pos:end="105:127">(<argument pos:start="105:55" pos:end="105:55">s</argument>, <argument pos:start="105:58" pos:end="105:61">mb_x</argument>, <argument pos:start="105:64" pos:end="105:67">mb_y</argument>, <argument pos:start="105:70" pos:end="105:95">(int[<literal type="number" pos:start="105:75" pos:end="105:75">2</literal>]){block-&gt;mx+<literal type="number" pos:start="105:89" pos:end="105:89">4</literal>*(i-j)</argument>, <argument pos:start="105:98" pos:end="105:113">block-&gt;my-(<literal type="number" pos:start="105:109" pos:end="105:109">4</literal>*j)}</argument>, <argument pos:start="105:116" pos:end="105:116"><literal type="number" pos:start="105:116" pos:end="105:116">0</literal></argument>, <argument pos:start="105:119" pos:end="105:126">&amp;best_rd</argument>)</argument_list></macro></expr>;</expr_stmt>

                            <expr_stmt pos:start="107:29" pos:end="107:128"><expr pos:start="107:29" pos:end="107:127"><name pos:start="107:29" pos:end="107:38">dia_change</name> <operator pos:start="107:40" pos:end="107:41">|=</operator> <macro pos:start="107:43" pos:end="107:127"><name pos:start="107:43" pos:end="107:53">check_block</name><argument_list pos:start="107:54" pos:end="107:127">(<argument pos:start="107:55" pos:end="107:55">s</argument>, <argument pos:start="107:58" pos:end="107:61">mb_x</argument>, <argument pos:start="107:64" pos:end="107:67">mb_y</argument>, <argument pos:start="107:70" pos:end="107:95">(int[<literal type="number" pos:start="107:75" pos:end="107:75">2</literal>]){block-&gt;mx-<literal type="number" pos:start="107:89" pos:end="107:89">4</literal>*(i-j)</argument>, <argument pos:start="107:98" pos:end="107:113">block-&gt;my+(<literal type="number" pos:start="107:109" pos:end="107:109">4</literal>*j)}</argument>, <argument pos:start="107:116" pos:end="107:116"><literal type="number" pos:start="107:116" pos:end="107:116">0</literal></argument>, <argument pos:start="107:119" pos:end="107:126">&amp;best_rd</argument>)</argument_list></macro></expr>;</expr_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></for>

                </block_content>}</block>while<condition pos:start="113:23" pos:end="113:34">(<expr pos:start="113:24" pos:end="113:33"><name pos:start="113:24" pos:end="113:33">dia_change</name></expr>)</condition>;</do>

                <comment type="block" pos:start="115:17" pos:end="115:31">/* subpel ME */</comment>

                <do pos:start="117:17" pos:end="127:35">do<block pos:start="117:19" pos:end="127:17">{<block_content pos:start="119:21" pos:end="125:136">

                    <decl_stmt pos:start="119:21" pos:end="119:118"><decl pos:start="119:21" pos:end="119:117"><type pos:start="119:21" pos:end="119:36"><specifier pos:start="119:21" pos:end="119:26">static</specifier> <specifier pos:start="119:28" pos:end="119:32">const</specifier> <name pos:start="119:34" pos:end="119:36">int</name></type> <name pos:start="119:38" pos:end="119:49"><name pos:start="119:38" pos:end="119:43">square</name><index pos:start="119:44" pos:end="119:46">[<expr pos:start="119:45" pos:end="119:45"><literal type="number" pos:start="119:45" pos:end="119:45">8</literal></expr>]</index><index pos:start="119:47" pos:end="119:49">[<expr pos:start="119:48" pos:end="119:48"><literal type="number" pos:start="119:48" pos:end="119:48">2</literal></expr>]</index></name><init pos:start="119:50" pos:end="119:117">= <expr pos:start="119:52" pos:end="119:117"><block pos:start="119:52" pos:end="119:117">{<expr pos:start="119:53" pos:end="119:59"><block pos:start="119:53" pos:end="119:59">{<expr pos:start="119:54" pos:end="119:55"><operator pos:start="119:54" pos:end="119:54">+</operator><literal type="number" pos:start="119:55" pos:end="119:55">1</literal></expr>, <expr pos:start="119:58" pos:end="119:58"><literal type="number" pos:start="119:58" pos:end="119:58">0</literal></expr>}</block></expr>,<expr pos:start="119:61" pos:end="119:67"><block pos:start="119:61" pos:end="119:67">{<expr pos:start="119:62" pos:end="119:63"><operator pos:start="119:62" pos:end="119:62">-</operator><literal type="number" pos:start="119:63" pos:end="119:63">1</literal></expr>, <expr pos:start="119:66" pos:end="119:66"><literal type="number" pos:start="119:66" pos:end="119:66">0</literal></expr>}</block></expr>,<expr pos:start="119:69" pos:end="119:75"><block pos:start="119:69" pos:end="119:75">{ <expr pos:start="119:71" pos:end="119:71"><literal type="number" pos:start="119:71" pos:end="119:71">0</literal></expr>,<expr pos:start="119:73" pos:end="119:74"><operator pos:start="119:73" pos:end="119:73">+</operator><literal type="number" pos:start="119:74" pos:end="119:74">1</literal></expr>}</block></expr>,<expr pos:start="119:77" pos:end="119:83"><block pos:start="119:77" pos:end="119:83">{ <expr pos:start="119:79" pos:end="119:79"><literal type="number" pos:start="119:79" pos:end="119:79">0</literal></expr>,<expr pos:start="119:81" pos:end="119:82"><operator pos:start="119:81" pos:end="119:81">-</operator><literal type="number" pos:start="119:82" pos:end="119:82">1</literal></expr>}</block></expr>,<expr pos:start="119:85" pos:end="119:91"><block pos:start="119:85" pos:end="119:91">{<expr pos:start="119:86" pos:end="119:87"><operator pos:start="119:86" pos:end="119:86">+</operator><literal type="number" pos:start="119:87" pos:end="119:87">1</literal></expr>,<expr pos:start="119:89" pos:end="119:90"><operator pos:start="119:89" pos:end="119:89">+</operator><literal type="number" pos:start="119:90" pos:end="119:90">1</literal></expr>}</block></expr>,<expr pos:start="119:93" pos:end="119:99"><block pos:start="119:93" pos:end="119:99">{<expr pos:start="119:94" pos:end="119:95"><operator pos:start="119:94" pos:end="119:94">-</operator><literal type="number" pos:start="119:95" pos:end="119:95">1</literal></expr>,<expr pos:start="119:97" pos:end="119:98"><operator pos:start="119:97" pos:end="119:97">-</operator><literal type="number" pos:start="119:98" pos:end="119:98">1</literal></expr>}</block></expr>,<expr pos:start="119:101" pos:end="119:107"><block pos:start="119:101" pos:end="119:107">{<expr pos:start="119:102" pos:end="119:103"><operator pos:start="119:102" pos:end="119:102">+</operator><literal type="number" pos:start="119:103" pos:end="119:103">1</literal></expr>,<expr pos:start="119:105" pos:end="119:106"><operator pos:start="119:105" pos:end="119:105">-</operator><literal type="number" pos:start="119:106" pos:end="119:106">1</literal></expr>}</block></expr>,<expr pos:start="119:109" pos:end="119:115"><block pos:start="119:109" pos:end="119:115">{<expr pos:start="119:110" pos:end="119:111"><operator pos:start="119:110" pos:end="119:110">-</operator><literal type="number" pos:start="119:111" pos:end="119:111">1</literal></expr>,<expr pos:start="119:113" pos:end="119:114"><operator pos:start="119:113" pos:end="119:113">+</operator><literal type="number" pos:start="119:114" pos:end="119:114">1</literal></expr>}</block></expr>,}</block></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="121:21" pos:end="121:33"><expr pos:start="121:21" pos:end="121:32"><name pos:start="121:21" pos:end="121:30">dia_change</name><operator pos:start="121:31" pos:end="121:31">=</operator><literal type="number" pos:start="121:32" pos:end="121:32">0</literal></expr>;</expr_stmt>

                    <for pos:start="123:21" pos:end="125:136">for<control pos:start="123:24" pos:end="123:38">(<init pos:start="123:25" pos:end="123:28"><expr pos:start="123:25" pos:end="123:27"><name pos:start="123:25" pos:end="123:25">i</name><operator pos:start="123:26" pos:end="123:26">=</operator><literal type="number" pos:start="123:27" pos:end="123:27">0</literal></expr>;</init> <condition pos:start="123:30" pos:end="123:33"><expr pos:start="123:30" pos:end="123:32"><name pos:start="123:30" pos:end="123:30">i</name><operator pos:start="123:31" pos:end="123:31">&lt;</operator><literal type="number" pos:start="123:32" pos:end="123:32">8</literal></expr>;</condition> <incr pos:start="123:35" pos:end="123:37"><expr pos:start="123:35" pos:end="123:37"><name pos:start="123:35" pos:end="123:35">i</name><operator pos:start="123:36" pos:end="123:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="125:25" pos:end="125:136"><block_content pos:start="125:25" pos:end="125:136">

                        <expr_stmt pos:start="125:25" pos:end="125:136"><expr pos:start="125:25" pos:end="125:135"><name pos:start="125:25" pos:end="125:34">dia_change</name> <operator pos:start="125:36" pos:end="125:37">|=</operator> <macro pos:start="125:39" pos:end="125:135"><name pos:start="125:39" pos:end="125:49">check_block</name><argument_list pos:start="125:50" pos:end="125:135">(<argument pos:start="125:51" pos:end="125:51">s</argument>, <argument pos:start="125:54" pos:end="125:57">mb_x</argument>, <argument pos:start="125:60" pos:end="125:63">mb_y</argument>, <argument pos:start="125:66" pos:end="125:96">(int[<literal type="number" pos:start="125:71" pos:end="125:71">2</literal>]){block-&gt;mx+square[i][<literal type="number" pos:start="125:95" pos:end="125:95">0</literal>]</argument>, <argument pos:start="125:99" pos:end="125:121">block-&gt;my+square[i][<literal type="number" pos:start="125:119" pos:end="125:119">1</literal>]}</argument>, <argument pos:start="125:124" pos:end="125:124"><literal type="number" pos:start="125:124" pos:end="125:124">0</literal></argument>, <argument pos:start="125:127" pos:end="125:134">&amp;best_rd</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block>while<condition pos:start="127:23" pos:end="127:34">(<expr pos:start="127:24" pos:end="127:33"><name pos:start="127:24" pos:end="127:33">dia_change</name></expr>)</condition>;</do>

                <comment type="line" pos:start="129:17" pos:end="129:66">//FIXME or try the standard 2 pass qpel or similar</comment>



                <for pos:start="133:17" pos:end="137:17">for<control pos:start="133:20" pos:end="133:34">(<init pos:start="133:21" pos:end="133:24"><expr pos:start="133:21" pos:end="133:23"><name pos:start="133:21" pos:end="133:21">i</name><operator pos:start="133:22" pos:end="133:22">=</operator><literal type="number" pos:start="133:23" pos:end="133:23">0</literal></expr>;</init> <condition pos:start="133:26" pos:end="133:29"><expr pos:start="133:26" pos:end="133:28"><name pos:start="133:26" pos:end="133:26">i</name><operator pos:start="133:27" pos:end="133:27">&lt;</operator><literal type="number" pos:start="133:28" pos:end="133:28">3</literal></expr>;</condition> <incr pos:start="133:31" pos:end="133:33"><expr pos:start="133:31" pos:end="133:33"><name pos:start="133:31" pos:end="133:31">i</name><operator pos:start="133:32" pos:end="133:33">++</operator></expr></incr>)</control><block pos:start="133:35" pos:end="137:17">{<block_content pos:start="135:21" pos:end="135:55">

                    <expr_stmt pos:start="135:21" pos:end="135:55"><expr pos:start="135:21" pos:end="135:54"><name pos:start="135:21" pos:end="135:28"><name pos:start="135:21" pos:end="135:25">color</name><index pos:start="135:26" pos:end="135:28">[<expr pos:start="135:27" pos:end="135:27"><name pos:start="135:27" pos:end="135:27">i</name></expr>]</index></name><operator pos:start="135:29" pos:end="135:29">=</operator> <call pos:start="135:31" pos:end="135:54"><name pos:start="135:31" pos:end="135:36">get_dc</name><argument_list pos:start="135:37" pos:end="135:54">(<argument pos:start="135:38" pos:end="135:38"><expr pos:start="135:38" pos:end="135:38"><name pos:start="135:38" pos:end="135:38">s</name></expr></argument>, <argument pos:start="135:41" pos:end="135:44"><expr pos:start="135:41" pos:end="135:44"><name pos:start="135:41" pos:end="135:44">mb_x</name></expr></argument>, <argument pos:start="135:47" pos:end="135:50"><expr pos:start="135:47" pos:end="135:50"><name pos:start="135:47" pos:end="135:50">mb_y</name></expr></argument>, <argument pos:start="135:53" pos:end="135:53"><expr pos:start="135:53" pos:end="135:53"><name pos:start="135:53" pos:end="135:53">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="139:17" pos:end="139:63"><expr pos:start="139:17" pos:end="139:62"><call pos:start="139:17" pos:end="139:62"><name pos:start="139:17" pos:end="139:27">check_block</name><argument_list pos:start="139:28" pos:end="139:62">(<argument pos:start="139:29" pos:end="139:29"><expr pos:start="139:29" pos:end="139:29"><name pos:start="139:29" pos:end="139:29">s</name></expr></argument>, <argument pos:start="139:32" pos:end="139:35"><expr pos:start="139:32" pos:end="139:35"><name pos:start="139:32" pos:end="139:35">mb_x</name></expr></argument>, <argument pos:start="139:38" pos:end="139:41"><expr pos:start="139:38" pos:end="139:41"><name pos:start="139:38" pos:end="139:41">mb_y</name></expr></argument>, <argument pos:start="139:44" pos:end="139:48"><expr pos:start="139:44" pos:end="139:48"><name pos:start="139:44" pos:end="139:48">color</name></expr></argument>, <argument pos:start="139:51" pos:end="139:51"><expr pos:start="139:51" pos:end="139:51"><literal type="number" pos:start="139:51" pos:end="139:51">1</literal></expr></argument>, <argument pos:start="139:54" pos:end="139:61"><expr pos:start="139:54" pos:end="139:61"><operator pos:start="139:54" pos:end="139:54">&amp;</operator><name pos:start="139:55" pos:end="139:61">best_rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line" pos:start="141:17" pos:end="141:48">//FIXME RD style color selection</comment>



                <if_stmt pos:start="145:17" pos:end="165:17"><if pos:start="145:17" pos:end="165:17">if<condition pos:start="145:19" pos:end="145:47">(<expr pos:start="145:20" pos:end="145:46"><operator pos:start="145:20" pos:end="145:20">!</operator><call pos:start="145:21" pos:end="145:46"><name pos:start="145:21" pos:end="145:30">same_block</name><argument_list pos:start="145:31" pos:end="145:46">(<argument pos:start="145:32" pos:end="145:36"><expr pos:start="145:32" pos:end="145:36"><name pos:start="145:32" pos:end="145:36">block</name></expr></argument>, <argument pos:start="145:39" pos:end="145:45"><expr pos:start="145:39" pos:end="145:45"><operator pos:start="145:39" pos:end="145:39">&amp;</operator><name pos:start="145:40" pos:end="145:45">backup</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="145:48" pos:end="165:17">{<block_content pos:start="147:21" pos:end="163:30">

                    <if_stmt pos:start="147:21" pos:end="147:66"><if pos:start="147:21" pos:end="147:66">if<condition pos:start="147:23" pos:end="147:41">(<expr pos:start="147:24" pos:end="147:40"><name pos:start="147:24" pos:end="147:25">tb</name> <operator pos:start="147:27" pos:end="147:28">!=</operator> <operator pos:start="147:30" pos:end="147:30">&amp;</operator><name pos:start="147:31" pos:end="147:40">null_block</name></expr>)</condition><block type="pseudo" pos:start="147:43" pos:end="147:66"><block_content pos:start="147:43" pos:end="147:66"> <expr_stmt pos:start="147:43" pos:end="147:66"><expr pos:start="147:43" pos:end="147:65"><name pos:start="147:43" pos:end="147:51"><name pos:start="147:43" pos:end="147:44">tb</name> <operator pos:start="147:46" pos:end="147:47">-&gt;</operator><name pos:start="147:48" pos:end="147:51">type</name></name> <operator pos:start="147:53" pos:end="147:54">&amp;=</operator> <operator pos:start="147:56" pos:end="147:56">~</operator><name pos:start="147:57" pos:end="147:65">BLOCK_OPT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="149:21" pos:end="149:66"><if pos:start="149:21" pos:end="149:66">if<condition pos:start="149:23" pos:end="149:41">(<expr pos:start="149:24" pos:end="149:40"><name pos:start="149:24" pos:end="149:25">lb</name> <operator pos:start="149:27" pos:end="149:28">!=</operator> <operator pos:start="149:30" pos:end="149:30">&amp;</operator><name pos:start="149:31" pos:end="149:40">null_block</name></expr>)</condition><block type="pseudo" pos:start="149:43" pos:end="149:66"><block_content pos:start="149:43" pos:end="149:66"> <expr_stmt pos:start="149:43" pos:end="149:66"><expr pos:start="149:43" pos:end="149:65"><name pos:start="149:43" pos:end="149:51"><name pos:start="149:43" pos:end="149:44">lb</name> <operator pos:start="149:46" pos:end="149:47">-&gt;</operator><name pos:start="149:48" pos:end="149:51">type</name></name> <operator pos:start="149:53" pos:end="149:54">&amp;=</operator> <operator pos:start="149:56" pos:end="149:56">~</operator><name pos:start="149:57" pos:end="149:65">BLOCK_OPT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="151:21" pos:end="151:66"><if pos:start="151:21" pos:end="151:66">if<condition pos:start="151:23" pos:end="151:41">(<expr pos:start="151:24" pos:end="151:40"><name pos:start="151:24" pos:end="151:25">rb</name> <operator pos:start="151:27" pos:end="151:28">!=</operator> <operator pos:start="151:30" pos:end="151:30">&amp;</operator><name pos:start="151:31" pos:end="151:40">null_block</name></expr>)</condition><block type="pseudo" pos:start="151:43" pos:end="151:66"><block_content pos:start="151:43" pos:end="151:66"> <expr_stmt pos:start="151:43" pos:end="151:66"><expr pos:start="151:43" pos:end="151:65"><name pos:start="151:43" pos:end="151:51"><name pos:start="151:43" pos:end="151:44">rb</name> <operator pos:start="151:46" pos:end="151:47">-&gt;</operator><name pos:start="151:48" pos:end="151:51">type</name></name> <operator pos:start="151:53" pos:end="151:54">&amp;=</operator> <operator pos:start="151:56" pos:end="151:56">~</operator><name pos:start="151:57" pos:end="151:65">BLOCK_OPT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="153:21" pos:end="153:66"><if pos:start="153:21" pos:end="153:66">if<condition pos:start="153:23" pos:end="153:41">(<expr pos:start="153:24" pos:end="153:40"><name pos:start="153:24" pos:end="153:25">bb</name> <operator pos:start="153:27" pos:end="153:28">!=</operator> <operator pos:start="153:30" pos:end="153:30">&amp;</operator><name pos:start="153:31" pos:end="153:40">null_block</name></expr>)</condition><block type="pseudo" pos:start="153:43" pos:end="153:66"><block_content pos:start="153:43" pos:end="153:66"> <expr_stmt pos:start="153:43" pos:end="153:66"><expr pos:start="153:43" pos:end="153:65"><name pos:start="153:43" pos:end="153:51"><name pos:start="153:43" pos:end="153:44">bb</name> <operator pos:start="153:46" pos:end="153:47">-&gt;</operator><name pos:start="153:48" pos:end="153:51">type</name></name> <operator pos:start="153:53" pos:end="153:54">&amp;=</operator> <operator pos:start="153:56" pos:end="153:56">~</operator><name pos:start="153:57" pos:end="153:65">BLOCK_OPT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="155:21" pos:end="155:66"><if pos:start="155:21" pos:end="155:66">if<condition pos:start="155:23" pos:end="155:41">(<expr pos:start="155:24" pos:end="155:40"><name pos:start="155:24" pos:end="155:26">tlb</name><operator pos:start="155:27" pos:end="155:28">!=</operator> <operator pos:start="155:30" pos:end="155:30">&amp;</operator><name pos:start="155:31" pos:end="155:40">null_block</name></expr>)</condition><block type="pseudo" pos:start="155:43" pos:end="155:66"><block_content pos:start="155:43" pos:end="155:66"> <expr_stmt pos:start="155:43" pos:end="155:66"><expr pos:start="155:43" pos:end="155:65"><name pos:start="155:43" pos:end="155:51"><name pos:start="155:43" pos:end="155:45">tlb</name><operator pos:start="155:46" pos:end="155:47">-&gt;</operator><name pos:start="155:48" pos:end="155:51">type</name></name> <operator pos:start="155:53" pos:end="155:54">&amp;=</operator> <operator pos:start="155:56" pos:end="155:56">~</operator><name pos:start="155:57" pos:end="155:65">BLOCK_OPT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="157:21" pos:end="157:66"><if pos:start="157:21" pos:end="157:66">if<condition pos:start="157:23" pos:end="157:41">(<expr pos:start="157:24" pos:end="157:40"><name pos:start="157:24" pos:end="157:26">trb</name><operator pos:start="157:27" pos:end="157:28">!=</operator> <operator pos:start="157:30" pos:end="157:30">&amp;</operator><name pos:start="157:31" pos:end="157:40">null_block</name></expr>)</condition><block type="pseudo" pos:start="157:43" pos:end="157:66"><block_content pos:start="157:43" pos:end="157:66"> <expr_stmt pos:start="157:43" pos:end="157:66"><expr pos:start="157:43" pos:end="157:65"><name pos:start="157:43" pos:end="157:51"><name pos:start="157:43" pos:end="157:45">trb</name><operator pos:start="157:46" pos:end="157:47">-&gt;</operator><name pos:start="157:48" pos:end="157:51">type</name></name> <operator pos:start="157:53" pos:end="157:54">&amp;=</operator> <operator pos:start="157:56" pos:end="157:56">~</operator><name pos:start="157:57" pos:end="157:65">BLOCK_OPT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="159:21" pos:end="159:66"><if pos:start="159:21" pos:end="159:66">if<condition pos:start="159:23" pos:end="159:41">(<expr pos:start="159:24" pos:end="159:40"><name pos:start="159:24" pos:end="159:26">blb</name><operator pos:start="159:27" pos:end="159:28">!=</operator> <operator pos:start="159:30" pos:end="159:30">&amp;</operator><name pos:start="159:31" pos:end="159:40">null_block</name></expr>)</condition><block type="pseudo" pos:start="159:43" pos:end="159:66"><block_content pos:start="159:43" pos:end="159:66"> <expr_stmt pos:start="159:43" pos:end="159:66"><expr pos:start="159:43" pos:end="159:65"><name pos:start="159:43" pos:end="159:51"><name pos:start="159:43" pos:end="159:45">blb</name><operator pos:start="159:46" pos:end="159:47">-&gt;</operator><name pos:start="159:48" pos:end="159:51">type</name></name> <operator pos:start="159:53" pos:end="159:54">&amp;=</operator> <operator pos:start="159:56" pos:end="159:56">~</operator><name pos:start="159:57" pos:end="159:65">BLOCK_OPT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="161:21" pos:end="161:66"><if pos:start="161:21" pos:end="161:66">if<condition pos:start="161:23" pos:end="161:41">(<expr pos:start="161:24" pos:end="161:40"><name pos:start="161:24" pos:end="161:26">brb</name><operator pos:start="161:27" pos:end="161:28">!=</operator> <operator pos:start="161:30" pos:end="161:30">&amp;</operator><name pos:start="161:31" pos:end="161:40">null_block</name></expr>)</condition><block type="pseudo" pos:start="161:43" pos:end="161:66"><block_content pos:start="161:43" pos:end="161:66"> <expr_stmt pos:start="161:43" pos:end="161:66"><expr pos:start="161:43" pos:end="161:65"><name pos:start="161:43" pos:end="161:51"><name pos:start="161:43" pos:end="161:45">brb</name><operator pos:start="161:46" pos:end="161:47">-&gt;</operator><name pos:start="161:48" pos:end="161:51">type</name></name> <operator pos:start="161:53" pos:end="161:54">&amp;=</operator> <operator pos:start="161:56" pos:end="161:56">~</operator><name pos:start="161:57" pos:end="161:65">BLOCK_OPT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="163:21" pos:end="163:30"><expr pos:start="163:21" pos:end="163:29"><name pos:start="163:21" pos:end="163:26">change</name> <operator pos:start="163:28" pos:end="163:29">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="171:9" pos:end="171:73"><expr pos:start="171:9" pos:end="171:72"><call pos:start="171:9" pos:end="171:72"><name pos:start="171:9" pos:end="171:14">av_log</name><argument_list pos:start="171:15" pos:end="171:72">(<argument pos:start="171:16" pos:end="171:19"><expr pos:start="171:16" pos:end="171:19"><name pos:start="171:16" pos:end="171:19">NULL</name></expr></argument>, <argument pos:start="171:22" pos:end="171:33"><expr pos:start="171:22" pos:end="171:33"><name pos:start="171:22" pos:end="171:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="171:36" pos:end="171:57"><expr pos:start="171:36" pos:end="171:57"><literal type="string" pos:start="171:36" pos:end="171:57">"pass:%d changed:%d\n"</literal></expr></argument>, <argument pos:start="171:60" pos:end="171:63"><expr pos:start="171:60" pos:end="171:63"><name pos:start="171:60" pos:end="171:63">pass</name></expr></argument>, <argument pos:start="171:66" pos:end="171:71"><expr pos:start="171:66" pos:end="171:71"><name pos:start="171:66" pos:end="171:71">change</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="175:18"><if pos:start="173:9" pos:end="175:18">if<condition pos:start="173:11" pos:end="173:19">(<expr pos:start="173:12" pos:end="173:18"><operator pos:start="173:12" pos:end="173:12">!</operator><name pos:start="173:13" pos:end="173:18">change</name></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:18"><block_content pos:start="175:13" pos:end="175:18">

            <break pos:start="175:13" pos:end="175:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
