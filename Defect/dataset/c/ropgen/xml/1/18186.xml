<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18186.c" pos:tabs="8"><function pos:start="1:1" pos:end="1231:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:36">nvenc_encode_init</name><parameter_list pos:start="1:37" pos:end="1:59">(<parameter pos:start="1:38" pos:end="1:58"><decl pos:start="1:38" pos:end="1:58"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:51">AVCodecContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1231:1">{<block_content pos:start="5:5" pos:end="1229:15">

    <decl_stmt pos:start="5:5" pos:end="5:71"><decl pos:start="5:5" pos:end="5:70"><type pos:start="5:5" pos:end="5:40"><name pos:start="5:5" pos:end="5:40">NV_ENC_OPEN_ENCODE_SESSION_EX_PARAMS</name></type> <name pos:start="5:42" pos:end="5:62">encode_session_params</name> <init pos:start="5:64" pos:end="5:70">= <expr pos:start="5:66" pos:end="5:70"><block pos:start="5:66" pos:end="5:70">{ <expr pos:start="5:68" pos:end="5:68"><literal type="number" pos:start="5:68" pos:end="5:68">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:24">NV_ENC_PRESET_CONFIG</name></type> <name pos:start="7:26" pos:end="7:38">preset_config</name> <init pos:start="7:40" pos:end="7:46">= <expr pos:start="7:42" pos:end="7:46"><block pos:start="7:42" pos:end="7:46">{ <expr pos:start="7:44" pos:end="7:44"><literal type="number" pos:start="7:44" pos:end="7:44">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">CUcontext</name></type> <name pos:start="9:15" pos:end="9:29">cu_context_curr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">CUresult</name></type> <name pos:start="11:14" pos:end="11:19">cu_res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:48"><decl pos:start="13:5" pos:end="13:47"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">GUID</name></type> <name pos:start="13:10" pos:end="13:23">encoder_preset</name> <init pos:start="13:25" pos:end="13:47">= <expr pos:start="13:27" pos:end="13:47"><name pos:start="13:27" pos:end="13:47">NV_ENC_PRESET_HQ_GUID</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">GUID</name></type> <name pos:start="15:10" pos:end="15:14">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:43"><decl pos:start="17:5" pos:end="17:42"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:15">NVENCSTATUS</name></type> <name pos:start="17:17" pos:end="17:25">nv_status</name> <init pos:start="17:27" pos:end="17:42">= <expr pos:start="17:29" pos:end="17:42"><name pos:start="17:29" pos:end="17:42">NV_ENC_SUCCESS</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:31"><decl pos:start="19:5" pos:end="19:30"><type pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:19">AVCPBProperties</name> <modifier pos:start="19:21" pos:end="19:21">*</modifier></type><name pos:start="19:22" pos:end="19:30">cpb_props</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:24"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:20">surfaceCount</name> <init pos:start="21:22" pos:end="21:24">= <expr pos:start="21:24" pos:end="21:24"><literal type="number" pos:start="21:24" pos:end="21:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:19"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">i</name></decl>, <decl pos:start="23:12" pos:end="23:18"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:12" pos:end="23:18">num_mbs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:17"><decl pos:start="25:5" pos:end="25:16"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:12">isLL</name> <init pos:start="25:14" pos:end="25:16">= <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:21"><decl pos:start="27:5" pos:end="27:20"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:16">lossless</name> <init pos:start="27:18" pos:end="27:20">= <expr pos:start="27:20" pos:end="27:20"><literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:16"><decl pos:start="29:5" pos:end="29:15"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:11">res</name> <init pos:start="29:13" pos:end="29:15">= <expr pos:start="29:15" pos:end="29:15"><literal type="number" pos:start="29:15" pos:end="29:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:15"><decl pos:start="31:5" pos:end="31:10"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:10">dw</name></decl>, <decl pos:start="31:13" pos:end="31:14"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:13" pos:end="31:14">dh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:19"><decl pos:start="33:5" pos:end="33:18"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:18">qp_inter_p</name></decl>;</decl_stmt>



    <decl_stmt pos:start="37:5" pos:end="37:41"><decl pos:start="37:5" pos:end="37:40"><type pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:16">NvencContext</name> <modifier pos:start="37:18" pos:end="37:18">*</modifier></type><name pos:start="37:19" pos:end="37:21">ctx</name> <init pos:start="37:23" pos:end="37:40">= <expr pos:start="37:25" pos:end="37:40"><name pos:start="37:25" pos:end="37:40"><name pos:start="37:25" pos:end="37:29">avctx</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:59"><decl pos:start="39:5" pos:end="39:58"><type pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:25">NvencDynLoadFunctions</name> <modifier pos:start="39:27" pos:end="39:27">*</modifier></type><name pos:start="39:28" pos:end="39:32">dl_fn</name> <init pos:start="39:34" pos:end="39:58">= <expr pos:start="39:36" pos:end="39:58"><operator pos:start="39:36" pos:end="39:36">&amp;</operator><name pos:start="39:37" pos:end="39:58"><name pos:start="39:37" pos:end="39:39">ctx</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:58">nvenc_dload_funcs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:63"><decl pos:start="41:5" pos:end="41:62"><type pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:31">NV_ENCODE_API_FUNCTION_LIST</name> <modifier pos:start="41:33" pos:end="41:33">*</modifier></type><name pos:start="41:34" pos:end="41:40">p_nvenc</name> <init pos:start="41:42" pos:end="41:62">= <expr pos:start="41:44" pos:end="41:62"><operator pos:start="41:44" pos:end="41:44">&amp;</operator><name pos:start="41:45" pos:end="41:62"><name pos:start="41:45" pos:end="41:49">dl_fn</name><operator pos:start="41:50" pos:end="41:51">-&gt;</operator><name pos:start="41:52" pos:end="41:62">nvenc_funcs</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="45:5" pos:end="47:32"><if pos:start="45:5" pos:end="47:32">if <condition pos:start="45:8" pos:end="45:35">(<expr pos:start="45:9" pos:end="45:34"><operator pos:start="45:9" pos:end="45:9">!</operator><call pos:start="45:10" pos:end="45:34"><name pos:start="45:10" pos:end="45:27">nvenc_dyload_nvenc</name><argument_list pos:start="45:28" pos:end="45:34">(<argument pos:start="45:29" pos:end="45:33"><expr pos:start="45:29" pos:end="45:33"><name pos:start="45:29" pos:end="45:33">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:32"><block_content pos:start="47:9" pos:end="47:32">

        <return pos:start="47:9" pos:end="47:32">return <expr pos:start="47:16" pos:end="47:31"><name pos:start="47:16" pos:end="47:31">AVERROR_EXTERNAL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:35"><expr pos:start="51:5" pos:end="51:34"><name pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:7">ctx</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:17">last_dts</name></name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:34">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:51"><expr pos:start="55:5" pos:end="55:50"><name pos:start="55:5" pos:end="55:30"><name pos:start="55:5" pos:end="55:7">ctx</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:22">encode_config</name><operator pos:start="55:23" pos:end="55:23">.</operator><name pos:start="55:24" pos:end="55:30">version</name></name> <operator pos:start="55:32" pos:end="55:32">=</operator> <name pos:start="55:34" pos:end="55:50">NV_ENC_CONFIG_VER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:67"><expr pos:start="57:5" pos:end="57:66"><name pos:start="57:5" pos:end="57:35"><name pos:start="57:5" pos:end="57:7">ctx</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:27">init_encode_params</name><operator pos:start="57:28" pos:end="57:28">.</operator><name pos:start="57:29" pos:end="57:35">version</name></name> <operator pos:start="57:37" pos:end="57:37">=</operator> <name pos:start="57:39" pos:end="57:66">NV_ENC_INITIALIZE_PARAMS_VER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:53"><expr pos:start="59:5" pos:end="59:52"><name pos:start="59:5" pos:end="59:25"><name pos:start="59:5" pos:end="59:17">preset_config</name><operator pos:start="59:18" pos:end="59:18">.</operator><name pos:start="59:19" pos:end="59:25">version</name></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <name pos:start="59:29" pos:end="59:52">NV_ENC_PRESET_CONFIG_VER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:56"><expr pos:start="61:5" pos:end="61:55"><name pos:start="61:5" pos:end="61:35"><name pos:start="61:5" pos:end="61:17">preset_config</name><operator pos:start="61:18" pos:end="61:18">.</operator><name pos:start="61:19" pos:end="61:27">presetCfg</name><operator pos:start="61:28" pos:end="61:28">.</operator><name pos:start="61:29" pos:end="61:35">version</name></name> <operator pos:start="61:37" pos:end="61:37">=</operator> <name pos:start="61:39" pos:end="61:55">NV_ENC_CONFIG_VER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:77"><expr pos:start="63:5" pos:end="63:76"><name pos:start="63:5" pos:end="63:33"><name pos:start="63:5" pos:end="63:25">encode_session_params</name><operator pos:start="63:26" pos:end="63:26">.</operator><name pos:start="63:27" pos:end="63:33">version</name></name> <operator pos:start="63:35" pos:end="63:35">=</operator> <name pos:start="63:37" pos:end="63:76">NV_ENC_OPEN_ENCODE_SESSION_EX_PARAMS_VER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:56"><expr pos:start="65:5" pos:end="65:55"><name pos:start="65:5" pos:end="65:36"><name pos:start="65:5" pos:end="65:25">encode_session_params</name><operator pos:start="65:26" pos:end="65:26">.</operator><name pos:start="65:27" pos:end="65:36">apiVersion</name></name> <operator pos:start="65:38" pos:end="65:38">=</operator> <name pos:start="65:40" pos:end="65:55">NVENCAPI_VERSION</name></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="77:5"><if pos:start="69:5" pos:end="77:5">if <condition pos:start="69:8" pos:end="69:46">(<expr pos:start="69:9" pos:end="69:45"><name pos:start="69:9" pos:end="69:16"><name pos:start="69:9" pos:end="69:11">ctx</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:16">gpu</name></name> <operator pos:start="69:18" pos:end="69:19">&gt;=</operator> <name pos:start="69:21" pos:end="69:45"><name pos:start="69:21" pos:end="69:25">dl_fn</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:45">nvenc_device_count</name></name></expr>)</condition> <block pos:start="69:48" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:19">

        <expr_stmt pos:start="71:9" pos:end="71:128"><expr pos:start="71:9" pos:end="71:127"><call pos:start="71:9" pos:end="71:127"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="71:127">(<argument pos:start="71:16" pos:end="71:20"><expr pos:start="71:16" pos:end="71:20"><name pos:start="71:16" pos:end="71:20">avctx</name></expr></argument>, <argument pos:start="71:23" pos:end="71:34"><expr pos:start="71:23" pos:end="71:34"><name pos:start="71:23" pos:end="71:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="71:37" pos:end="71:89"><expr pos:start="71:37" pos:end="71:89"><literal type="string" pos:start="71:37" pos:end="71:89">"Requested GPU %d, but only %d GPUs are available!\n"</literal></expr></argument>, <argument pos:start="71:92" pos:end="71:99"><expr pos:start="71:92" pos:end="71:99"><name pos:start="71:92" pos:end="71:99"><name pos:start="71:92" pos:end="71:94">ctx</name><operator pos:start="71:95" pos:end="71:96">-&gt;</operator><name pos:start="71:97" pos:end="71:99">gpu</name></name></expr></argument>, <argument pos:start="71:102" pos:end="71:126"><expr pos:start="71:102" pos:end="71:126"><name pos:start="71:102" pos:end="71:126"><name pos:start="71:102" pos:end="71:106">dl_fn</name><operator pos:start="71:107" pos:end="71:108">-&gt;</operator><name pos:start="71:109" pos:end="71:126">nvenc_device_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:30"><expr pos:start="73:9" pos:end="73:29"><name pos:start="73:9" pos:end="73:11">res</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="73:29"><name pos:start="73:15" pos:end="73:21">AVERROR</name><argument_list pos:start="73:22" pos:end="73:29">(<argument pos:start="73:23" pos:end="73:28"><expr pos:start="73:23" pos:end="73:28"><name pos:start="73:23" pos:end="73:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="75:9" pos:end="75:19">goto <name pos:start="75:14" pos:end="75:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:27"><expr pos:start="81:5" pos:end="81:26"><name pos:start="81:5" pos:end="81:19"><name pos:start="81:5" pos:end="81:7">ctx</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:19">cu_context</name></name> <operator pos:start="81:21" pos:end="81:21">=</operator> <name pos:start="81:23" pos:end="81:26">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:87"><expr pos:start="83:5" pos:end="83:86"><name pos:start="83:5" pos:end="83:10">cu_res</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <call pos:start="83:14" pos:end="83:86"><name pos:start="83:14" pos:end="83:33"><name pos:start="83:14" pos:end="83:18">dl_fn</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:33">cu_ctx_create</name></name><argument_list pos:start="83:34" pos:end="83:86">(<argument pos:start="83:35" pos:end="83:50"><expr pos:start="83:35" pos:end="83:50"><operator pos:start="83:35" pos:end="83:35">&amp;</operator><name pos:start="83:36" pos:end="83:50"><name pos:start="83:36" pos:end="83:38">ctx</name><operator pos:start="83:39" pos:end="83:40">-&gt;</operator><name pos:start="83:41" pos:end="83:50">cu_context</name></name></expr></argument>, <argument pos:start="83:53" pos:end="83:53"><expr pos:start="83:53" pos:end="83:53"><literal type="number" pos:start="83:53" pos:end="83:53">4</literal></expr></argument>, <argument pos:start="83:56" pos:end="83:85"><expr pos:start="83:56" pos:end="83:85"><name pos:start="83:56" pos:end="83:85"><name pos:start="83:56" pos:end="83:60">dl_fn</name><operator pos:start="83:61" pos:end="83:62">-&gt;</operator><name pos:start="83:63" pos:end="83:75">nvenc_devices</name><index pos:start="83:76" pos:end="83:85">[<expr pos:start="83:77" pos:end="83:84"><name pos:start="83:77" pos:end="83:84"><name pos:start="83:77" pos:end="83:79">ctx</name><operator pos:start="83:80" pos:end="83:81">-&gt;</operator><name pos:start="83:82" pos:end="83:84">gpu</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="83:89" pos:end="83:136">// CU_CTX_SCHED_BLOCKING_SYNC=4, avoid CPU spins</comment>



    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="87:31">(<expr pos:start="87:9" pos:end="87:30"><name pos:start="87:9" pos:end="87:14">cu_res</name> <operator pos:start="87:16" pos:end="87:17">!=</operator> <name pos:start="87:19" pos:end="87:30">CUDA_SUCCESS</name></expr>)</condition> <block pos:start="87:33" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:19">

        <expr_stmt pos:start="89:9" pos:end="89:99"><expr pos:start="89:9" pos:end="89:98"><call pos:start="89:9" pos:end="89:98"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="89:98">(<argument pos:start="89:16" pos:end="89:20"><expr pos:start="89:16" pos:end="89:20"><name pos:start="89:16" pos:end="89:20">avctx</name></expr></argument>, <argument pos:start="89:23" pos:end="89:34"><expr pos:start="89:23" pos:end="89:34"><name pos:start="89:23" pos:end="89:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="89:37" pos:end="89:84"><expr pos:start="89:37" pos:end="89:84"><literal type="string" pos:start="89:37" pos:end="89:84">"Failed creating CUDA context for NVENC: 0x%x\n"</literal></expr></argument>, <argument pos:start="89:87" pos:end="89:97"><expr pos:start="89:87" pos:end="89:97"><operator pos:start="89:87" pos:end="89:87">(</operator><name pos:start="89:88" pos:end="89:90">int</name><operator pos:start="89:91" pos:end="89:91">)</operator><name pos:start="89:92" pos:end="89:97">cu_res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:31"><expr pos:start="91:9" pos:end="91:30"><name pos:start="91:9" pos:end="91:11">res</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <name pos:start="91:15" pos:end="91:30">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

        <goto pos:start="93:9" pos:end="93:19">goto <name pos:start="93:14" pos:end="93:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:57"><expr pos:start="99:5" pos:end="99:56"><name pos:start="99:5" pos:end="99:10">cu_res</name> <operator pos:start="99:12" pos:end="99:12">=</operator> <call pos:start="99:14" pos:end="99:56"><name pos:start="99:14" pos:end="99:38"><name pos:start="99:14" pos:end="99:18">dl_fn</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:38">cu_ctx_pop_current</name></name><argument_list pos:start="99:39" pos:end="99:56">(<argument pos:start="99:40" pos:end="99:55"><expr pos:start="99:40" pos:end="99:55"><operator pos:start="99:40" pos:end="99:40">&amp;</operator><name pos:start="99:41" pos:end="99:55">cu_context_curr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="103:5" pos:end="111:5"><if pos:start="103:5" pos:end="111:5">if <condition pos:start="103:8" pos:end="103:31">(<expr pos:start="103:9" pos:end="103:30"><name pos:start="103:9" pos:end="103:14">cu_res</name> <operator pos:start="103:16" pos:end="103:17">!=</operator> <name pos:start="103:19" pos:end="103:30">CUDA_SUCCESS</name></expr>)</condition> <block pos:start="103:33" pos:end="111:5">{<block_content pos:start="105:9" pos:end="109:19">

        <expr_stmt pos:start="105:9" pos:end="105:88"><expr pos:start="105:9" pos:end="105:87"><call pos:start="105:9" pos:end="105:87"><name pos:start="105:9" pos:end="105:14">av_log</name><argument_list pos:start="105:15" pos:end="105:87">(<argument pos:start="105:16" pos:end="105:20"><expr pos:start="105:16" pos:end="105:20"><name pos:start="105:16" pos:end="105:20">avctx</name></expr></argument>, <argument pos:start="105:23" pos:end="105:34"><expr pos:start="105:23" pos:end="105:34"><name pos:start="105:23" pos:end="105:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="105:37" pos:end="105:73"><expr pos:start="105:37" pos:end="105:73"><literal type="string" pos:start="105:37" pos:end="105:73">"Failed popping CUDA context: 0x%x\n"</literal></expr></argument>, <argument pos:start="105:76" pos:end="105:86"><expr pos:start="105:76" pos:end="105:86"><operator pos:start="105:76" pos:end="105:76">(</operator><name pos:start="105:77" pos:end="105:79">int</name><operator pos:start="105:80" pos:end="105:80">)</operator><name pos:start="105:81" pos:end="105:86">cu_res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:31"><expr pos:start="107:9" pos:end="107:30"><name pos:start="107:9" pos:end="107:11">res</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <name pos:start="107:15" pos:end="107:30">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

        <goto pos:start="109:9" pos:end="109:19">goto <name pos:start="109:14" pos:end="109:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:51"><expr pos:start="115:5" pos:end="115:50"><name pos:start="115:5" pos:end="115:32"><name pos:start="115:5" pos:end="115:25">encode_session_params</name><operator pos:start="115:26" pos:end="115:26">.</operator><name pos:start="115:27" pos:end="115:32">device</name></name> <operator pos:start="115:34" pos:end="115:34">=</operator> <name pos:start="115:36" pos:end="115:50"><name pos:start="115:36" pos:end="115:38">ctx</name><operator pos:start="115:39" pos:end="115:40">-&gt;</operator><name pos:start="115:41" pos:end="115:50">cu_context</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:63"><expr pos:start="117:5" pos:end="117:62"><name pos:start="117:5" pos:end="117:36"><name pos:start="117:5" pos:end="117:25">encode_session_params</name><operator pos:start="117:26" pos:end="117:26">.</operator><name pos:start="117:27" pos:end="117:36">deviceType</name></name> <operator pos:start="117:38" pos:end="117:38">=</operator> <name pos:start="117:40" pos:end="117:62">NV_ENC_DEVICE_TYPE_CUDA</name></expr>;</expr_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:91"><expr pos:start="121:5" pos:end="121:90"><name pos:start="121:5" pos:end="121:13">nv_status</name> <operator pos:start="121:15" pos:end="121:15">=</operator> <call pos:start="121:17" pos:end="121:90"><name pos:start="121:17" pos:end="121:49"><name pos:start="121:17" pos:end="121:23">p_nvenc</name><operator pos:start="121:24" pos:end="121:25">-&gt;</operator><name pos:start="121:26" pos:end="121:49">nvEncOpenEncodeSessionEx</name></name><argument_list pos:start="121:50" pos:end="121:90">(<argument pos:start="121:51" pos:end="121:72"><expr pos:start="121:51" pos:end="121:72"><operator pos:start="121:51" pos:end="121:51">&amp;</operator><name pos:start="121:52" pos:end="121:72">encode_session_params</name></expr></argument>, <argument pos:start="121:75" pos:end="121:89"><expr pos:start="121:75" pos:end="121:89"><operator pos:start="121:75" pos:end="121:75">&amp;</operator><name pos:start="121:76" pos:end="121:89"><name pos:start="121:76" pos:end="121:78">ctx</name><operator pos:start="121:79" pos:end="121:80">-&gt;</operator><name pos:start="121:81" pos:end="121:89">nvencoder</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="123:5" pos:end="133:5"><if pos:start="123:5" pos:end="133:5">if <condition pos:start="123:8" pos:end="123:36">(<expr pos:start="123:9" pos:end="123:35"><name pos:start="123:9" pos:end="123:17">nv_status</name> <operator pos:start="123:19" pos:end="123:20">!=</operator> <name pos:start="123:22" pos:end="123:35">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="123:38" pos:end="133:5">{<block_content pos:start="125:9" pos:end="131:19">

        <expr_stmt pos:start="125:9" pos:end="125:30"><expr pos:start="125:9" pos:end="125:29"><name pos:start="125:9" pos:end="125:22"><name pos:start="125:9" pos:end="125:11">ctx</name><operator pos:start="125:12" pos:end="125:13">-&gt;</operator><name pos:start="125:14" pos:end="125:22">nvencoder</name></name> <operator pos:start="125:24" pos:end="125:24">=</operator> <name pos:start="125:26" pos:end="125:29">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:90"><expr pos:start="127:9" pos:end="127:89"><call pos:start="127:9" pos:end="127:89"><name pos:start="127:9" pos:end="127:14">av_log</name><argument_list pos:start="127:15" pos:end="127:89">(<argument pos:start="127:16" pos:end="127:20"><expr pos:start="127:16" pos:end="127:20"><name pos:start="127:16" pos:end="127:20">avctx</name></expr></argument>, <argument pos:start="127:23" pos:end="127:34"><expr pos:start="127:23" pos:end="127:34"><name pos:start="127:23" pos:end="127:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="127:37" pos:end="127:72"><expr pos:start="127:37" pos:end="127:72"><literal type="string" pos:start="127:37" pos:end="127:72">"OpenEncodeSessionEx failed: 0x%x\n"</literal></expr></argument>, <argument pos:start="127:75" pos:end="127:88"><expr pos:start="127:75" pos:end="127:88"><operator pos:start="127:75" pos:end="127:75">(</operator><name pos:start="127:76" pos:end="127:78">int</name><operator pos:start="127:79" pos:end="127:79">)</operator><name pos:start="127:80" pos:end="127:88">nv_status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:31"><expr pos:start="129:9" pos:end="129:30"><name pos:start="129:9" pos:end="129:11">res</name> <operator pos:start="129:13" pos:end="129:13">=</operator> <name pos:start="129:15" pos:end="129:30">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

        <goto pos:start="131:9" pos:end="131:19">goto <name pos:start="131:14" pos:end="131:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="137:5" pos:end="213:5"><if pos:start="137:5" pos:end="213:5">if <condition pos:start="137:8" pos:end="137:20">(<expr pos:start="137:9" pos:end="137:19"><name pos:start="137:9" pos:end="137:19"><name pos:start="137:9" pos:end="137:11">ctx</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:19">preset</name></name></expr>)</condition> <block pos:start="137:22" pos:end="213:5">{<block_content pos:start="139:9" pos:end="211:9">

        <if_stmt pos:start="139:9" pos:end="211:9"><if pos:start="139:9" pos:end="145:9">if <condition pos:start="139:12" pos:end="139:41">(<expr pos:start="139:13" pos:end="139:40"><operator pos:start="139:13" pos:end="139:13">!</operator><call pos:start="139:14" pos:end="139:40"><name pos:start="139:14" pos:end="139:19">strcmp</name><argument_list pos:start="139:20" pos:end="139:40">(<argument pos:start="139:21" pos:end="139:31"><expr pos:start="139:21" pos:end="139:31"><name pos:start="139:21" pos:end="139:31"><name pos:start="139:21" pos:end="139:23">ctx</name><operator pos:start="139:24" pos:end="139:25">-&gt;</operator><name pos:start="139:26" pos:end="139:31">preset</name></name></expr></argument>, <argument pos:start="139:34" pos:end="139:39"><expr pos:start="139:34" pos:end="139:39"><literal type="string" pos:start="139:34" pos:end="139:39">"slow"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="139:43" pos:end="145:9">{<block_content pos:start="141:13" pos:end="143:29">

            <expr_stmt pos:start="141:13" pos:end="141:51"><expr pos:start="141:13" pos:end="141:50"><name pos:start="141:13" pos:end="141:26">encoder_preset</name> <operator pos:start="141:28" pos:end="141:28">=</operator> <name pos:start="141:30" pos:end="141:50">NV_ENC_PRESET_HQ_GUID</name></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:29"><expr pos:start="143:13" pos:end="143:28"><name pos:start="143:13" pos:end="143:24"><name pos:start="143:13" pos:end="143:15">ctx</name><operator pos:start="143:16" pos:end="143:17">-&gt;</operator><name pos:start="143:18" pos:end="143:24">twopass</name></name> <operator pos:start="143:26" pos:end="143:26">=</operator> <literal type="number" pos:start="143:28" pos:end="143:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="145:11" pos:end="151:9">else if <condition pos:start="145:19" pos:end="145:50">(<expr pos:start="145:20" pos:end="145:49"><operator pos:start="145:20" pos:end="145:20">!</operator><call pos:start="145:21" pos:end="145:49"><name pos:start="145:21" pos:end="145:26">strcmp</name><argument_list pos:start="145:27" pos:end="145:49">(<argument pos:start="145:28" pos:end="145:38"><expr pos:start="145:28" pos:end="145:38"><name pos:start="145:28" pos:end="145:38"><name pos:start="145:28" pos:end="145:30">ctx</name><operator pos:start="145:31" pos:end="145:32">-&gt;</operator><name pos:start="145:33" pos:end="145:38">preset</name></name></expr></argument>, <argument pos:start="145:41" pos:end="145:48"><expr pos:start="145:41" pos:end="145:48"><literal type="string" pos:start="145:41" pos:end="145:48">"medium"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="145:52" pos:end="151:9">{<block_content pos:start="147:13" pos:end="149:29">

            <expr_stmt pos:start="147:13" pos:end="147:51"><expr pos:start="147:13" pos:end="147:50"><name pos:start="147:13" pos:end="147:26">encoder_preset</name> <operator pos:start="147:28" pos:end="147:28">=</operator> <name pos:start="147:30" pos:end="147:50">NV_ENC_PRESET_HQ_GUID</name></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:29"><expr pos:start="149:13" pos:end="149:28"><name pos:start="149:13" pos:end="149:24"><name pos:start="149:13" pos:end="149:15">ctx</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:24">twopass</name></name> <operator pos:start="149:26" pos:end="149:26">=</operator> <literal type="number" pos:start="149:28" pos:end="149:28">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="151:11" pos:end="157:9">else if <condition pos:start="151:19" pos:end="151:48">(<expr pos:start="151:20" pos:end="151:47"><operator pos:start="151:20" pos:end="151:20">!</operator><call pos:start="151:21" pos:end="151:47"><name pos:start="151:21" pos:end="151:26">strcmp</name><argument_list pos:start="151:27" pos:end="151:47">(<argument pos:start="151:28" pos:end="151:38"><expr pos:start="151:28" pos:end="151:38"><name pos:start="151:28" pos:end="151:38"><name pos:start="151:28" pos:end="151:30">ctx</name><operator pos:start="151:31" pos:end="151:32">-&gt;</operator><name pos:start="151:33" pos:end="151:38">preset</name></name></expr></argument>, <argument pos:start="151:41" pos:end="151:46"><expr pos:start="151:41" pos:end="151:46"><literal type="string" pos:start="151:41" pos:end="151:46">"fast"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="151:50" pos:end="157:9">{<block_content pos:start="153:13" pos:end="155:29">

            <expr_stmt pos:start="153:13" pos:end="153:51"><expr pos:start="153:13" pos:end="153:50"><name pos:start="153:13" pos:end="153:26">encoder_preset</name> <operator pos:start="153:28" pos:end="153:28">=</operator> <name pos:start="153:30" pos:end="153:50">NV_ENC_PRESET_HP_GUID</name></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:29"><expr pos:start="155:13" pos:end="155:28"><name pos:start="155:13" pos:end="155:24"><name pos:start="155:13" pos:end="155:15">ctx</name><operator pos:start="155:16" pos:end="155:17">-&gt;</operator><name pos:start="155:18" pos:end="155:24">twopass</name></name> <operator pos:start="155:26" pos:end="155:26">=</operator> <literal type="number" pos:start="155:28" pos:end="155:28">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="157:11" pos:end="161:9">else if <condition pos:start="157:19" pos:end="157:46">(<expr pos:start="157:20" pos:end="157:45"><operator pos:start="157:20" pos:end="157:20">!</operator><call pos:start="157:21" pos:end="157:45"><name pos:start="157:21" pos:end="157:26">strcmp</name><argument_list pos:start="157:27" pos:end="157:45">(<argument pos:start="157:28" pos:end="157:38"><expr pos:start="157:28" pos:end="157:38"><name pos:start="157:28" pos:end="157:38"><name pos:start="157:28" pos:end="157:30">ctx</name><operator pos:start="157:31" pos:end="157:32">-&gt;</operator><name pos:start="157:33" pos:end="157:38">preset</name></name></expr></argument>, <argument pos:start="157:41" pos:end="157:44"><expr pos:start="157:41" pos:end="157:44"><literal type="string" pos:start="157:41" pos:end="157:44">"hq"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="157:48" pos:end="161:9">{<block_content pos:start="159:13" pos:end="159:51">

            <expr_stmt pos:start="159:13" pos:end="159:51"><expr pos:start="159:13" pos:end="159:50"><name pos:start="159:13" pos:end="159:26">encoder_preset</name> <operator pos:start="159:28" pos:end="159:28">=</operator> <name pos:start="159:30" pos:end="159:50">NV_ENC_PRESET_HQ_GUID</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="161:11" pos:end="165:9">else if <condition pos:start="161:19" pos:end="161:46">(<expr pos:start="161:20" pos:end="161:45"><operator pos:start="161:20" pos:end="161:20">!</operator><call pos:start="161:21" pos:end="161:45"><name pos:start="161:21" pos:end="161:26">strcmp</name><argument_list pos:start="161:27" pos:end="161:45">(<argument pos:start="161:28" pos:end="161:38"><expr pos:start="161:28" pos:end="161:38"><name pos:start="161:28" pos:end="161:38"><name pos:start="161:28" pos:end="161:30">ctx</name><operator pos:start="161:31" pos:end="161:32">-&gt;</operator><name pos:start="161:33" pos:end="161:38">preset</name></name></expr></argument>, <argument pos:start="161:41" pos:end="161:44"><expr pos:start="161:41" pos:end="161:44"><literal type="string" pos:start="161:41" pos:end="161:44">"hp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="161:48" pos:end="165:9">{<block_content pos:start="163:13" pos:end="163:51">

            <expr_stmt pos:start="163:13" pos:end="163:51"><expr pos:start="163:13" pos:end="163:50"><name pos:start="163:13" pos:end="163:26">encoder_preset</name> <operator pos:start="163:28" pos:end="163:28">=</operator> <name pos:start="163:30" pos:end="163:50">NV_ENC_PRESET_HP_GUID</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="165:11" pos:end="169:9">else if <condition pos:start="165:19" pos:end="165:46">(<expr pos:start="165:20" pos:end="165:45"><operator pos:start="165:20" pos:end="165:20">!</operator><call pos:start="165:21" pos:end="165:45"><name pos:start="165:21" pos:end="165:26">strcmp</name><argument_list pos:start="165:27" pos:end="165:45">(<argument pos:start="165:28" pos:end="165:38"><expr pos:start="165:28" pos:end="165:38"><name pos:start="165:28" pos:end="165:38"><name pos:start="165:28" pos:end="165:30">ctx</name><operator pos:start="165:31" pos:end="165:32">-&gt;</operator><name pos:start="165:33" pos:end="165:38">preset</name></name></expr></argument>, <argument pos:start="165:41" pos:end="165:44"><expr pos:start="165:41" pos:end="165:44"><literal type="string" pos:start="165:41" pos:end="165:44">"bd"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="165:48" pos:end="169:9">{<block_content pos:start="167:13" pos:end="167:51">

            <expr_stmt pos:start="167:13" pos:end="167:51"><expr pos:start="167:13" pos:end="167:50"><name pos:start="167:13" pos:end="167:26">encoder_preset</name> <operator pos:start="167:28" pos:end="167:28">=</operator> <name pos:start="167:30" pos:end="167:50">NV_ENC_PRESET_BD_GUID</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="169:11" pos:end="175:9">else if <condition pos:start="169:19" pos:end="169:46">(<expr pos:start="169:20" pos:end="169:45"><operator pos:start="169:20" pos:end="169:20">!</operator><call pos:start="169:21" pos:end="169:45"><name pos:start="169:21" pos:end="169:26">strcmp</name><argument_list pos:start="169:27" pos:end="169:45">(<argument pos:start="169:28" pos:end="169:38"><expr pos:start="169:28" pos:end="169:38"><name pos:start="169:28" pos:end="169:38"><name pos:start="169:28" pos:end="169:30">ctx</name><operator pos:start="169:31" pos:end="169:32">-&gt;</operator><name pos:start="169:33" pos:end="169:38">preset</name></name></expr></argument>, <argument pos:start="169:41" pos:end="169:44"><expr pos:start="169:41" pos:end="169:44"><literal type="string" pos:start="169:41" pos:end="169:44">"ll"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="169:48" pos:end="175:9">{<block_content pos:start="171:13" pos:end="173:21">

            <expr_stmt pos:start="171:13" pos:end="171:68"><expr pos:start="171:13" pos:end="171:67"><name pos:start="171:13" pos:end="171:26">encoder_preset</name> <operator pos:start="171:28" pos:end="171:28">=</operator> <name pos:start="171:30" pos:end="171:67">NV_ENC_PRESET_LOW_LATENCY_DEFAULT_GUID</name></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:21"><expr pos:start="173:13" pos:end="173:20"><name pos:start="173:13" pos:end="173:16">isLL</name> <operator pos:start="173:18" pos:end="173:18">=</operator> <literal type="number" pos:start="173:20" pos:end="173:20">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="175:11" pos:end="181:9">else if <condition pos:start="175:19" pos:end="175:48">(<expr pos:start="175:20" pos:end="175:47"><operator pos:start="175:20" pos:end="175:20">!</operator><call pos:start="175:21" pos:end="175:47"><name pos:start="175:21" pos:end="175:26">strcmp</name><argument_list pos:start="175:27" pos:end="175:47">(<argument pos:start="175:28" pos:end="175:38"><expr pos:start="175:28" pos:end="175:38"><name pos:start="175:28" pos:end="175:38"><name pos:start="175:28" pos:end="175:30">ctx</name><operator pos:start="175:31" pos:end="175:32">-&gt;</operator><name pos:start="175:33" pos:end="175:38">preset</name></name></expr></argument>, <argument pos:start="175:41" pos:end="175:46"><expr pos:start="175:41" pos:end="175:46"><literal type="string" pos:start="175:41" pos:end="175:46">"llhp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="175:50" pos:end="181:9">{<block_content pos:start="177:13" pos:end="179:21">

            <expr_stmt pos:start="177:13" pos:end="177:63"><expr pos:start="177:13" pos:end="177:62"><name pos:start="177:13" pos:end="177:26">encoder_preset</name> <operator pos:start="177:28" pos:end="177:28">=</operator> <name pos:start="177:30" pos:end="177:62">NV_ENC_PRESET_LOW_LATENCY_HP_GUID</name></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:21"><expr pos:start="179:13" pos:end="179:20"><name pos:start="179:13" pos:end="179:16">isLL</name> <operator pos:start="179:18" pos:end="179:18">=</operator> <literal type="number" pos:start="179:20" pos:end="179:20">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="181:11" pos:end="187:9">else if <condition pos:start="181:19" pos:end="181:48">(<expr pos:start="181:20" pos:end="181:47"><operator pos:start="181:20" pos:end="181:20">!</operator><call pos:start="181:21" pos:end="181:47"><name pos:start="181:21" pos:end="181:26">strcmp</name><argument_list pos:start="181:27" pos:end="181:47">(<argument pos:start="181:28" pos:end="181:38"><expr pos:start="181:28" pos:end="181:38"><name pos:start="181:28" pos:end="181:38"><name pos:start="181:28" pos:end="181:30">ctx</name><operator pos:start="181:31" pos:end="181:32">-&gt;</operator><name pos:start="181:33" pos:end="181:38">preset</name></name></expr></argument>, <argument pos:start="181:41" pos:end="181:46"><expr pos:start="181:41" pos:end="181:46"><literal type="string" pos:start="181:41" pos:end="181:46">"llhq"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="181:50" pos:end="187:9">{<block_content pos:start="183:13" pos:end="185:21">

            <expr_stmt pos:start="183:13" pos:end="183:63"><expr pos:start="183:13" pos:end="183:62"><name pos:start="183:13" pos:end="183:26">encoder_preset</name> <operator pos:start="183:28" pos:end="183:28">=</operator> <name pos:start="183:30" pos:end="183:62">NV_ENC_PRESET_LOW_LATENCY_HQ_GUID</name></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:21"><expr pos:start="185:13" pos:end="185:20"><name pos:start="185:13" pos:end="185:16">isLL</name> <operator pos:start="185:18" pos:end="185:18">=</operator> <literal type="number" pos:start="185:20" pos:end="185:20">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="187:11" pos:end="193:9">else if <condition pos:start="187:19" pos:end="187:52">(<expr pos:start="187:20" pos:end="187:51"><operator pos:start="187:20" pos:end="187:20">!</operator><call pos:start="187:21" pos:end="187:51"><name pos:start="187:21" pos:end="187:26">strcmp</name><argument_list pos:start="187:27" pos:end="187:51">(<argument pos:start="187:28" pos:end="187:38"><expr pos:start="187:28" pos:end="187:38"><name pos:start="187:28" pos:end="187:38"><name pos:start="187:28" pos:end="187:30">ctx</name><operator pos:start="187:31" pos:end="187:32">-&gt;</operator><name pos:start="187:33" pos:end="187:38">preset</name></name></expr></argument>, <argument pos:start="187:41" pos:end="187:50"><expr pos:start="187:41" pos:end="187:50"><literal type="string" pos:start="187:41" pos:end="187:50">"lossless"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="187:54" pos:end="193:9">{<block_content pos:start="189:13" pos:end="191:25">

            <expr_stmt pos:start="189:13" pos:end="189:65"><expr pos:start="189:13" pos:end="189:64"><name pos:start="189:13" pos:end="189:26">encoder_preset</name> <operator pos:start="189:28" pos:end="189:28">=</operator> <name pos:start="189:30" pos:end="189:64">NV_ENC_PRESET_LOSSLESS_DEFAULT_GUID</name></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:25"><expr pos:start="191:13" pos:end="191:24"><name pos:start="191:13" pos:end="191:20">lossless</name> <operator pos:start="191:22" pos:end="191:22">=</operator> <literal type="number" pos:start="191:24" pos:end="191:24">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="193:11" pos:end="199:9">else if <condition pos:start="193:19" pos:end="193:54">(<expr pos:start="193:20" pos:end="193:53"><operator pos:start="193:20" pos:end="193:20">!</operator><call pos:start="193:21" pos:end="193:53"><name pos:start="193:21" pos:end="193:26">strcmp</name><argument_list pos:start="193:27" pos:end="193:53">(<argument pos:start="193:28" pos:end="193:38"><expr pos:start="193:28" pos:end="193:38"><name pos:start="193:28" pos:end="193:38"><name pos:start="193:28" pos:end="193:30">ctx</name><operator pos:start="193:31" pos:end="193:32">-&gt;</operator><name pos:start="193:33" pos:end="193:38">preset</name></name></expr></argument>, <argument pos:start="193:41" pos:end="193:52"><expr pos:start="193:41" pos:end="193:52"><literal type="string" pos:start="193:41" pos:end="193:52">"losslesshp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="193:56" pos:end="199:9">{<block_content pos:start="195:13" pos:end="197:25">

            <expr_stmt pos:start="195:13" pos:end="195:60"><expr pos:start="195:13" pos:end="195:59"><name pos:start="195:13" pos:end="195:26">encoder_preset</name> <operator pos:start="195:28" pos:end="195:28">=</operator> <name pos:start="195:30" pos:end="195:59">NV_ENC_PRESET_LOSSLESS_HP_GUID</name></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:25"><expr pos:start="197:13" pos:end="197:24"><name pos:start="197:13" pos:end="197:20">lossless</name> <operator pos:start="197:22" pos:end="197:22">=</operator> <literal type="number" pos:start="197:24" pos:end="197:24">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="199:11" pos:end="203:9">else if <condition pos:start="199:19" pos:end="199:51">(<expr pos:start="199:20" pos:end="199:50"><operator pos:start="199:20" pos:end="199:20">!</operator><call pos:start="199:21" pos:end="199:50"><name pos:start="199:21" pos:end="199:26">strcmp</name><argument_list pos:start="199:27" pos:end="199:50">(<argument pos:start="199:28" pos:end="199:38"><expr pos:start="199:28" pos:end="199:38"><name pos:start="199:28" pos:end="199:38"><name pos:start="199:28" pos:end="199:30">ctx</name><operator pos:start="199:31" pos:end="199:32">-&gt;</operator><name pos:start="199:33" pos:end="199:38">preset</name></name></expr></argument>, <argument pos:start="199:41" pos:end="199:49"><expr pos:start="199:41" pos:end="199:49"><literal type="string" pos:start="199:41" pos:end="199:49">"default"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="199:53" pos:end="203:9">{<block_content pos:start="201:13" pos:end="201:56">

            <expr_stmt pos:start="201:13" pos:end="201:56"><expr pos:start="201:13" pos:end="201:55"><name pos:start="201:13" pos:end="201:26">encoder_preset</name> <operator pos:start="201:28" pos:end="201:28">=</operator> <name pos:start="201:30" pos:end="201:55">NV_ENC_PRESET_DEFAULT_GUID</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="203:11" pos:end="211:9">else <block pos:start="203:16" pos:end="211:9">{<block_content pos:start="205:13" pos:end="209:23">

            <expr_stmt pos:start="205:13" pos:end="205:181"><expr pos:start="205:13" pos:end="205:180"><call pos:start="205:13" pos:end="205:180"><name pos:start="205:13" pos:end="205:18">av_log</name><argument_list pos:start="205:19" pos:end="205:180">(<argument pos:start="205:20" pos:end="205:24"><expr pos:start="205:20" pos:end="205:24"><name pos:start="205:20" pos:end="205:24">avctx</name></expr></argument>, <argument pos:start="205:27" pos:end="205:38"><expr pos:start="205:27" pos:end="205:38"><name pos:start="205:27" pos:end="205:38">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="205:41" pos:end="205:166"><expr pos:start="205:41" pos:end="205:166"><literal type="string" pos:start="205:41" pos:end="205:166">"Preset \"%s\" is unknown! Supported presets: slow, medium, fast, hp, hq, bd, ll, llhp, llhq, lossless, losslesshp, default\n"</literal></expr></argument>, <argument pos:start="205:169" pos:end="205:179"><expr pos:start="205:169" pos:end="205:179"><name pos:start="205:169" pos:end="205:179"><name pos:start="205:169" pos:end="205:171">ctx</name><operator pos:start="205:172" pos:end="205:173">-&gt;</operator><name pos:start="205:174" pos:end="205:179">preset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:34"><expr pos:start="207:13" pos:end="207:33"><name pos:start="207:13" pos:end="207:15">res</name> <operator pos:start="207:17" pos:end="207:17">=</operator> <call pos:start="207:19" pos:end="207:33"><name pos:start="207:19" pos:end="207:25">AVERROR</name><argument_list pos:start="207:26" pos:end="207:33">(<argument pos:start="207:27" pos:end="207:32"><expr pos:start="207:27" pos:end="207:32"><name pos:start="207:27" pos:end="207:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="209:13" pos:end="209:23">goto <name pos:start="209:18" pos:end="209:22">error</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="217:5" pos:end="221:5"><if pos:start="217:5" pos:end="221:5">if <condition pos:start="217:8" pos:end="217:25">(<expr pos:start="217:9" pos:end="217:24"><name pos:start="217:9" pos:end="217:20"><name pos:start="217:9" pos:end="217:11">ctx</name><operator pos:start="217:12" pos:end="217:13">-&gt;</operator><name pos:start="217:14" pos:end="217:20">twopass</name></name> <operator pos:start="217:22" pos:end="217:22">&lt;</operator> <literal type="number" pos:start="217:24" pos:end="217:24">0</literal></expr>)</condition> <block pos:start="217:27" pos:end="221:5">{<block_content pos:start="219:9" pos:end="219:28">

        <expr_stmt pos:start="219:9" pos:end="219:28"><expr pos:start="219:9" pos:end="219:27"><name pos:start="219:9" pos:end="219:20"><name pos:start="219:9" pos:end="219:11">ctx</name><operator pos:start="219:12" pos:end="219:13">-&gt;</operator><name pos:start="219:14" pos:end="219:20">twopass</name></name> <operator pos:start="219:22" pos:end="219:22">=</operator> <name pos:start="219:24" pos:end="219:27">isLL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="225:5" pos:end="247:5">switch <condition pos:start="225:12" pos:end="225:29">(<expr pos:start="225:13" pos:end="225:28"><name pos:start="225:13" pos:end="225:28"><name pos:start="225:13" pos:end="225:17">avctx</name><operator pos:start="225:18" pos:end="225:19">-&gt;</operator><name pos:start="225:20" pos:end="225:24">codec</name><operator pos:start="225:25" pos:end="225:26">-&gt;</operator><name pos:start="225:27" pos:end="225:28">id</name></name></expr>)</condition> <block pos:start="225:31" pos:end="247:5">{<block_content pos:start="227:5" pos:end="245:19">

    <case pos:start="227:5" pos:end="227:26">case <expr pos:start="227:10" pos:end="227:25"><name pos:start="227:10" pos:end="227:25">AV_CODEC_ID_H264</name></expr>:</case>

        <expr_stmt pos:start="229:9" pos:end="229:39"><expr pos:start="229:9" pos:end="229:38"><name pos:start="229:9" pos:end="229:13">codec</name> <operator pos:start="229:15" pos:end="229:15">=</operator> <name pos:start="229:17" pos:end="229:38">NV_ENC_CODEC_H264_GUID</name></expr>;</expr_stmt>

        <break pos:start="231:9" pos:end="231:14">break;</break>

    <case pos:start="233:5" pos:end="233:26">case <expr pos:start="233:10" pos:end="233:25"><name pos:start="233:10" pos:end="233:25">AV_CODEC_ID_H265</name></expr>:</case>

        <expr_stmt pos:start="235:9" pos:end="235:39"><expr pos:start="235:9" pos:end="235:38"><name pos:start="235:9" pos:end="235:13">codec</name> <operator pos:start="235:15" pos:end="235:15">=</operator> <name pos:start="235:17" pos:end="235:38">NV_ENC_CODEC_HEVC_GUID</name></expr>;</expr_stmt>

        <break pos:start="237:9" pos:end="237:14">break;</break>

    <default pos:start="239:5" pos:end="239:12">default:</default>

        <expr_stmt pos:start="241:9" pos:end="241:60"><expr pos:start="241:9" pos:end="241:59"><call pos:start="241:9" pos:end="241:59"><name pos:start="241:9" pos:end="241:14">av_log</name><argument_list pos:start="241:15" pos:end="241:59">(<argument pos:start="241:16" pos:end="241:20"><expr pos:start="241:16" pos:end="241:20"><name pos:start="241:16" pos:end="241:20">avctx</name></expr></argument>, <argument pos:start="241:23" pos:end="241:34"><expr pos:start="241:23" pos:end="241:34"><name pos:start="241:23" pos:end="241:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="241:37" pos:end="241:58"><expr pos:start="241:37" pos:end="241:58"><literal type="string" pos:start="241:37" pos:end="241:58">"Unknown codec name\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:30"><expr pos:start="243:9" pos:end="243:29"><name pos:start="243:9" pos:end="243:11">res</name> <operator pos:start="243:13" pos:end="243:13">=</operator> <call pos:start="243:15" pos:end="243:29"><name pos:start="243:15" pos:end="243:21">AVERROR</name><argument_list pos:start="243:22" pos:end="243:29">(<argument pos:start="243:23" pos:end="243:28"><expr pos:start="243:23" pos:end="243:28"><name pos:start="243:23" pos:end="243:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="245:9" pos:end="245:19">goto <name pos:start="245:14" pos:end="245:18">error</name>;</goto>

    </block_content>}</block></switch>



    <expr_stmt pos:start="251:5" pos:end="251:107"><expr pos:start="251:5" pos:end="251:106"><name pos:start="251:5" pos:end="251:13">nv_status</name> <operator pos:start="251:15" pos:end="251:15">=</operator> <call pos:start="251:17" pos:end="251:106"><name pos:start="251:17" pos:end="251:51"><name pos:start="251:17" pos:end="251:23">p_nvenc</name><operator pos:start="251:24" pos:end="251:25">-&gt;</operator><name pos:start="251:26" pos:end="251:51">nvEncGetEncodePresetConfig</name></name><argument_list pos:start="251:52" pos:end="251:106">(<argument pos:start="251:53" pos:end="251:66"><expr pos:start="251:53" pos:end="251:66"><name pos:start="251:53" pos:end="251:66"><name pos:start="251:53" pos:end="251:55">ctx</name><operator pos:start="251:56" pos:end="251:57">-&gt;</operator><name pos:start="251:58" pos:end="251:66">nvencoder</name></name></expr></argument>, <argument pos:start="251:69" pos:end="251:73"><expr pos:start="251:69" pos:end="251:73"><name pos:start="251:69" pos:end="251:73">codec</name></expr></argument>, <argument pos:start="251:76" pos:end="251:89"><expr pos:start="251:76" pos:end="251:89"><name pos:start="251:76" pos:end="251:89">encoder_preset</name></expr></argument>, <argument pos:start="251:92" pos:end="251:105"><expr pos:start="251:92" pos:end="251:105"><operator pos:start="251:92" pos:end="251:92">&amp;</operator><name pos:start="251:93" pos:end="251:105">preset_config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="253:5" pos:end="261:5"><if pos:start="253:5" pos:end="261:5">if <condition pos:start="253:8" pos:end="253:36">(<expr pos:start="253:9" pos:end="253:35"><name pos:start="253:9" pos:end="253:17">nv_status</name> <operator pos:start="253:19" pos:end="253:20">!=</operator> <name pos:start="253:22" pos:end="253:35">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="253:38" pos:end="261:5">{<block_content pos:start="255:9" pos:end="259:19">

        <expr_stmt pos:start="255:9" pos:end="255:92"><expr pos:start="255:9" pos:end="255:91"><call pos:start="255:9" pos:end="255:91"><name pos:start="255:9" pos:end="255:14">av_log</name><argument_list pos:start="255:15" pos:end="255:91">(<argument pos:start="255:16" pos:end="255:20"><expr pos:start="255:16" pos:end="255:20"><name pos:start="255:16" pos:end="255:20">avctx</name></expr></argument>, <argument pos:start="255:23" pos:end="255:34"><expr pos:start="255:23" pos:end="255:34"><name pos:start="255:23" pos:end="255:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="255:37" pos:end="255:74"><expr pos:start="255:37" pos:end="255:74"><literal type="string" pos:start="255:37" pos:end="255:74">"GetEncodePresetConfig failed: 0x%x\n"</literal></expr></argument>, <argument pos:start="255:77" pos:end="255:90"><expr pos:start="255:77" pos:end="255:90"><operator pos:start="255:77" pos:end="255:77">(</operator><name pos:start="255:78" pos:end="255:80">int</name><operator pos:start="255:81" pos:end="255:81">)</operator><name pos:start="255:82" pos:end="255:90">nv_status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:31"><expr pos:start="257:9" pos:end="257:30"><name pos:start="257:9" pos:end="257:11">res</name> <operator pos:start="257:13" pos:end="257:13">=</operator> <name pos:start="257:15" pos:end="257:30">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

        <goto pos:start="259:9" pos:end="259:19">goto <name pos:start="259:14" pos:end="259:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="265:5" pos:end="265:47"><expr pos:start="265:5" pos:end="265:46"><name pos:start="265:5" pos:end="265:38"><name pos:start="265:5" pos:end="265:7">ctx</name><operator pos:start="265:8" pos:end="265:9">-&gt;</operator><name pos:start="265:10" pos:end="265:27">init_encode_params</name><operator pos:start="265:28" pos:end="265:28">.</operator><name pos:start="265:29" pos:end="265:38">encodeGUID</name></name> <operator pos:start="265:40" pos:end="265:40">=</operator> <name pos:start="265:42" pos:end="265:46">codec</name></expr>;</expr_stmt>

    <expr_stmt pos:start="267:5" pos:end="267:57"><expr pos:start="267:5" pos:end="267:56"><name pos:start="267:5" pos:end="267:40"><name pos:start="267:5" pos:end="267:7">ctx</name><operator pos:start="267:8" pos:end="267:9">-&gt;</operator><name pos:start="267:10" pos:end="267:27">init_encode_params</name><operator pos:start="267:28" pos:end="267:28">.</operator><name pos:start="267:29" pos:end="267:40">encodeHeight</name></name> <operator pos:start="267:42" pos:end="267:42">=</operator> <name pos:start="267:44" pos:end="267:56"><name pos:start="267:44" pos:end="267:48">avctx</name><operator pos:start="267:49" pos:end="267:50">-&gt;</operator><name pos:start="267:51" pos:end="267:56">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="269:5" pos:end="269:55"><expr pos:start="269:5" pos:end="269:54"><name pos:start="269:5" pos:end="269:39"><name pos:start="269:5" pos:end="269:7">ctx</name><operator pos:start="269:8" pos:end="269:9">-&gt;</operator><name pos:start="269:10" pos:end="269:27">init_encode_params</name><operator pos:start="269:28" pos:end="269:28">.</operator><name pos:start="269:29" pos:end="269:39">encodeWidth</name></name> <operator pos:start="269:41" pos:end="269:41">=</operator> <name pos:start="269:43" pos:end="269:54"><name pos:start="269:43" pos:end="269:47">avctx</name><operator pos:start="269:48" pos:end="269:49">-&gt;</operator><name pos:start="269:50" pos:end="269:54">width</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="273:5" pos:end="295:5"><if pos:start="273:5" pos:end="289:5">if <condition pos:start="273:8" pos:end="275:85">(<expr pos:start="273:9" pos:end="275:84"><name pos:start="273:9" pos:end="273:38"><name pos:start="273:9" pos:end="273:13">avctx</name><operator pos:start="273:14" pos:end="273:15">-&gt;</operator><name pos:start="273:16" pos:end="273:34">sample_aspect_ratio</name><operator pos:start="273:35" pos:end="273:35">.</operator><name pos:start="273:36" pos:end="273:38">num</name></name> <operator pos:start="273:40" pos:end="273:41">&amp;&amp;</operator> <name pos:start="273:43" pos:end="273:72"><name pos:start="273:43" pos:end="273:47">avctx</name><operator pos:start="273:48" pos:end="273:49">-&gt;</operator><name pos:start="273:50" pos:end="273:68">sample_aspect_ratio</name><operator pos:start="273:69" pos:end="273:69">.</operator><name pos:start="273:70" pos:end="273:72">den</name></name> <operator pos:start="273:74" pos:end="273:75">&amp;&amp;</operator>

        <operator pos:start="275:9" pos:end="275:9">(</operator><name pos:start="275:10" pos:end="275:39"><name pos:start="275:10" pos:end="275:14">avctx</name><operator pos:start="275:15" pos:end="275:16">-&gt;</operator><name pos:start="275:17" pos:end="275:35">sample_aspect_ratio</name><operator pos:start="275:36" pos:end="275:36">.</operator><name pos:start="275:37" pos:end="275:39">num</name></name> <operator pos:start="275:41" pos:end="275:42">!=</operator> <literal type="number" pos:start="275:44" pos:end="275:44">1</literal> <operator pos:start="275:46" pos:end="275:47">||</operator> <name pos:start="275:49" pos:end="275:78"><name pos:start="275:49" pos:end="275:53">avctx</name><operator pos:start="275:54" pos:end="275:55">-&gt;</operator><name pos:start="275:56" pos:end="275:74">sample_aspect_ratio</name><operator pos:start="275:75" pos:end="275:75">.</operator><name pos:start="275:76" pos:end="275:78">num</name></name> <operator pos:start="275:80" pos:end="275:81">!=</operator> <literal type="number" pos:start="275:83" pos:end="275:83">1</literal><operator pos:start="275:84" pos:end="275:84">)</operator></expr>)</condition> <block pos:start="275:87" pos:end="289:5">{<block_content pos:start="277:9" pos:end="287:46">

        <expr_stmt pos:start="277:9" pos:end="283:31"><expr pos:start="277:9" pos:end="283:30"><call pos:start="277:9" pos:end="283:30"><name pos:start="277:9" pos:end="277:17">av_reduce</name><argument_list pos:start="277:18" pos:end="283:30">(<argument pos:start="277:19" pos:end="277:21"><expr pos:start="277:19" pos:end="277:21"><operator pos:start="277:19" pos:end="277:19">&amp;</operator><name pos:start="277:20" pos:end="277:21">dw</name></expr></argument>, <argument pos:start="277:24" pos:end="277:26"><expr pos:start="277:24" pos:end="277:26"><operator pos:start="277:24" pos:end="277:24">&amp;</operator><name pos:start="277:25" pos:end="277:26">dh</name></expr></argument>,

                  <argument pos:start="279:19" pos:end="279:63"><expr pos:start="279:19" pos:end="279:63"><name pos:start="279:19" pos:end="279:30"><name pos:start="279:19" pos:end="279:23">avctx</name><operator pos:start="279:24" pos:end="279:25">-&gt;</operator><name pos:start="279:26" pos:end="279:30">width</name></name> <operator pos:start="279:32" pos:end="279:32">*</operator> <name pos:start="279:34" pos:end="279:63"><name pos:start="279:34" pos:end="279:38">avctx</name><operator pos:start="279:39" pos:end="279:40">-&gt;</operator><name pos:start="279:41" pos:end="279:59">sample_aspect_ratio</name><operator pos:start="279:60" pos:end="279:60">.</operator><name pos:start="279:61" pos:end="279:63">num</name></name></expr></argument>,

                  <argument pos:start="281:19" pos:end="281:64"><expr pos:start="281:19" pos:end="281:64"><name pos:start="281:19" pos:end="281:31"><name pos:start="281:19" pos:end="281:23">avctx</name><operator pos:start="281:24" pos:end="281:25">-&gt;</operator><name pos:start="281:26" pos:end="281:31">height</name></name> <operator pos:start="281:33" pos:end="281:33">*</operator> <name pos:start="281:35" pos:end="281:64"><name pos:start="281:35" pos:end="281:39">avctx</name><operator pos:start="281:40" pos:end="281:41">-&gt;</operator><name pos:start="281:42" pos:end="281:60">sample_aspect_ratio</name><operator pos:start="281:61" pos:end="281:61">.</operator><name pos:start="281:62" pos:end="281:64">den</name></name></expr></argument>,

                  <argument pos:start="283:19" pos:end="283:29"><expr pos:start="283:19" pos:end="283:29"><literal type="number" pos:start="283:19" pos:end="283:22">1024</literal> <operator pos:start="283:24" pos:end="283:24">*</operator> <literal type="number" pos:start="283:26" pos:end="283:29">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:47"><expr pos:start="285:9" pos:end="285:46"><name pos:start="285:9" pos:end="285:41"><name pos:start="285:9" pos:end="285:11">ctx</name><operator pos:start="285:12" pos:end="285:13">-&gt;</operator><name pos:start="285:14" pos:end="285:31">init_encode_params</name><operator pos:start="285:32" pos:end="285:32">.</operator><name pos:start="285:33" pos:end="285:41">darHeight</name></name> <operator pos:start="285:43" pos:end="285:43">=</operator> <name pos:start="285:45" pos:end="285:46">dh</name></expr>;</expr_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:46"><expr pos:start="287:9" pos:end="287:45"><name pos:start="287:9" pos:end="287:40"><name pos:start="287:9" pos:end="287:11">ctx</name><operator pos:start="287:12" pos:end="287:13">-&gt;</operator><name pos:start="287:14" pos:end="287:31">init_encode_params</name><operator pos:start="287:32" pos:end="287:32">.</operator><name pos:start="287:33" pos:end="287:40">darWidth</name></name> <operator pos:start="287:42" pos:end="287:42">=</operator> <name pos:start="287:44" pos:end="287:45">dw</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="289:7" pos:end="295:5">else <block pos:start="289:12" pos:end="295:5">{<block_content pos:start="291:9" pos:end="293:56">

        <expr_stmt pos:start="291:9" pos:end="291:58"><expr pos:start="291:9" pos:end="291:57"><name pos:start="291:9" pos:end="291:41"><name pos:start="291:9" pos:end="291:11">ctx</name><operator pos:start="291:12" pos:end="291:13">-&gt;</operator><name pos:start="291:14" pos:end="291:31">init_encode_params</name><operator pos:start="291:32" pos:end="291:32">.</operator><name pos:start="291:33" pos:end="291:41">darHeight</name></name> <operator pos:start="291:43" pos:end="291:43">=</operator> <name pos:start="291:45" pos:end="291:57"><name pos:start="291:45" pos:end="291:49">avctx</name><operator pos:start="291:50" pos:end="291:51">-&gt;</operator><name pos:start="291:52" pos:end="291:57">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:56"><expr pos:start="293:9" pos:end="293:55"><name pos:start="293:9" pos:end="293:40"><name pos:start="293:9" pos:end="293:11">ctx</name><operator pos:start="293:12" pos:end="293:13">-&gt;</operator><name pos:start="293:14" pos:end="293:31">init_encode_params</name><operator pos:start="293:32" pos:end="293:32">.</operator><name pos:start="293:33" pos:end="293:40">darWidth</name></name> <operator pos:start="293:42" pos:end="293:42">=</operator> <name pos:start="293:44" pos:end="293:55"><name pos:start="293:44" pos:end="293:48">avctx</name><operator pos:start="293:49" pos:end="293:50">-&gt;</operator><name pos:start="293:51" pos:end="293:55">width</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="299:5" pos:end="299:70">// De-compensate for hardware, dubiously, trying to compensate for</comment>

    <comment type="line" pos:start="301:5" pos:end="301:35">// playback at 704 pixel width.</comment>

    <if_stmt pos:start="303:5" pos:end="319:5"><if pos:start="303:5" pos:end="319:5">if <condition pos:start="303:8" pos:end="305:55">(<expr pos:start="303:9" pos:end="305:54"><name pos:start="303:9" pos:end="303:20"><name pos:start="303:9" pos:end="303:13">avctx</name><operator pos:start="303:14" pos:end="303:15">-&gt;</operator><name pos:start="303:16" pos:end="303:20">width</name></name> <operator pos:start="303:22" pos:end="303:23">==</operator> <literal type="number" pos:start="303:25" pos:end="303:27">720</literal> <operator pos:start="303:29" pos:end="303:30">&amp;&amp;</operator>

        <operator pos:start="305:9" pos:end="305:9">(</operator><name pos:start="305:10" pos:end="305:22"><name pos:start="305:10" pos:end="305:14">avctx</name><operator pos:start="305:15" pos:end="305:16">-&gt;</operator><name pos:start="305:17" pos:end="305:22">height</name></name> <operator pos:start="305:24" pos:end="305:25">==</operator> <literal type="number" pos:start="305:27" pos:end="305:29">480</literal> <operator pos:start="305:31" pos:end="305:32">||</operator> <name pos:start="305:34" pos:end="305:46"><name pos:start="305:34" pos:end="305:38">avctx</name><operator pos:start="305:39" pos:end="305:40">-&gt;</operator><name pos:start="305:41" pos:end="305:46">height</name></name> <operator pos:start="305:48" pos:end="305:49">==</operator> <literal type="number" pos:start="305:51" pos:end="305:53">576</literal><operator pos:start="305:54" pos:end="305:54">)</operator></expr>)</condition> <block pos:start="305:57" pos:end="319:5">{<block_content pos:start="307:9" pos:end="317:46">

        <expr_stmt pos:start="307:9" pos:end="313:31"><expr pos:start="307:9" pos:end="313:30"><call pos:start="307:9" pos:end="313:30"><name pos:start="307:9" pos:end="307:17">av_reduce</name><argument_list pos:start="307:18" pos:end="313:30">(<argument pos:start="307:19" pos:end="307:21"><expr pos:start="307:19" pos:end="307:21"><operator pos:start="307:19" pos:end="307:19">&amp;</operator><name pos:start="307:20" pos:end="307:21">dw</name></expr></argument>, <argument pos:start="307:24" pos:end="307:26"><expr pos:start="307:24" pos:end="307:26"><operator pos:start="307:24" pos:end="307:24">&amp;</operator><name pos:start="307:25" pos:end="307:26">dh</name></expr></argument>,

                  <argument pos:start="309:19" pos:end="309:55"><expr pos:start="309:19" pos:end="309:55"><name pos:start="309:19" pos:end="309:50"><name pos:start="309:19" pos:end="309:21">ctx</name><operator pos:start="309:22" pos:end="309:23">-&gt;</operator><name pos:start="309:24" pos:end="309:41">init_encode_params</name><operator pos:start="309:42" pos:end="309:42">.</operator><name pos:start="309:43" pos:end="309:50">darWidth</name></name> <operator pos:start="309:52" pos:end="309:52">*</operator> <literal type="number" pos:start="309:54" pos:end="309:55">44</literal></expr></argument>,

                  <argument pos:start="311:19" pos:end="311:56"><expr pos:start="311:19" pos:end="311:56"><name pos:start="311:19" pos:end="311:51"><name pos:start="311:19" pos:end="311:21">ctx</name><operator pos:start="311:22" pos:end="311:23">-&gt;</operator><name pos:start="311:24" pos:end="311:41">init_encode_params</name><operator pos:start="311:42" pos:end="311:42">.</operator><name pos:start="311:43" pos:end="311:51">darHeight</name></name> <operator pos:start="311:53" pos:end="311:53">*</operator> <literal type="number" pos:start="311:55" pos:end="311:56">45</literal></expr></argument>,

                  <argument pos:start="313:19" pos:end="313:29"><expr pos:start="313:19" pos:end="313:29"><literal type="number" pos:start="313:19" pos:end="313:22">1024</literal> <operator pos:start="313:24" pos:end="313:24">*</operator> <literal type="number" pos:start="313:26" pos:end="313:29">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:47"><expr pos:start="315:9" pos:end="315:46"><name pos:start="315:9" pos:end="315:41"><name pos:start="315:9" pos:end="315:11">ctx</name><operator pos:start="315:12" pos:end="315:13">-&gt;</operator><name pos:start="315:14" pos:end="315:31">init_encode_params</name><operator pos:start="315:32" pos:end="315:32">.</operator><name pos:start="315:33" pos:end="315:41">darHeight</name></name> <operator pos:start="315:43" pos:end="315:43">=</operator> <name pos:start="315:45" pos:end="315:46">dh</name></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:46"><expr pos:start="317:9" pos:end="317:45"><name pos:start="317:9" pos:end="317:40"><name pos:start="317:9" pos:end="317:11">ctx</name><operator pos:start="317:12" pos:end="317:13">-&gt;</operator><name pos:start="317:14" pos:end="317:31">init_encode_params</name><operator pos:start="317:32" pos:end="317:32">.</operator><name pos:start="317:33" pos:end="317:40">darWidth</name></name> <operator pos:start="317:42" pos:end="317:42">=</operator> <name pos:start="317:44" pos:end="317:45">dw</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="323:5" pos:end="323:64"><expr pos:start="323:5" pos:end="323:63"><name pos:start="323:5" pos:end="323:40"><name pos:start="323:5" pos:end="323:7">ctx</name><operator pos:start="323:8" pos:end="323:9">-&gt;</operator><name pos:start="323:10" pos:end="323:27">init_encode_params</name><operator pos:start="323:28" pos:end="323:28">.</operator><name pos:start="323:29" pos:end="323:40">frameRateNum</name></name> <operator pos:start="323:42" pos:end="323:42">=</operator> <name pos:start="323:44" pos:end="323:63"><name pos:start="323:44" pos:end="323:48">avctx</name><operator pos:start="323:49" pos:end="323:50">-&gt;</operator><name pos:start="323:51" pos:end="323:59">time_base</name><operator pos:start="323:60" pos:end="323:60">.</operator><name pos:start="323:61" pos:end="323:63">den</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="325:5" pos:end="325:89"><expr pos:start="325:5" pos:end="325:88"><name pos:start="325:5" pos:end="325:40"><name pos:start="325:5" pos:end="325:7">ctx</name><operator pos:start="325:8" pos:end="325:9">-&gt;</operator><name pos:start="325:10" pos:end="325:27">init_encode_params</name><operator pos:start="325:28" pos:end="325:28">.</operator><name pos:start="325:29" pos:end="325:40">frameRateDen</name></name> <operator pos:start="325:42" pos:end="325:42">=</operator> <name pos:start="325:44" pos:end="325:63"><name pos:start="325:44" pos:end="325:48">avctx</name><operator pos:start="325:49" pos:end="325:50">-&gt;</operator><name pos:start="325:51" pos:end="325:59">time_base</name><operator pos:start="325:60" pos:end="325:60">.</operator><name pos:start="325:61" pos:end="325:63">num</name></name> <operator pos:start="325:65" pos:end="325:65">*</operator> <name pos:start="325:67" pos:end="325:88"><name pos:start="325:67" pos:end="325:71">avctx</name><operator pos:start="325:72" pos:end="325:73">-&gt;</operator><name pos:start="325:74" pos:end="325:88">ticks_per_frame</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="329:5" pos:end="329:71"><expr pos:start="329:5" pos:end="329:70"><name pos:start="329:5" pos:end="329:11">num_mbs</name> <operator pos:start="329:13" pos:end="329:13">=</operator> <operator pos:start="329:15" pos:end="329:15">(</operator><operator pos:start="329:16" pos:end="329:16">(</operator><name pos:start="329:17" pos:end="329:28"><name pos:start="329:17" pos:end="329:21">avctx</name><operator pos:start="329:22" pos:end="329:23">-&gt;</operator><name pos:start="329:24" pos:end="329:28">width</name></name> <operator pos:start="329:30" pos:end="329:30">+</operator> <literal type="number" pos:start="329:32" pos:end="329:33">15</literal><operator pos:start="329:34" pos:end="329:34">)</operator> <operator pos:start="329:36" pos:end="329:37">&gt;&gt;</operator> <literal type="number" pos:start="329:39" pos:end="329:39">4</literal><operator pos:start="329:40" pos:end="329:40">)</operator> <operator pos:start="329:42" pos:end="329:42">*</operator> <operator pos:start="329:44" pos:end="329:44">(</operator><operator pos:start="329:45" pos:end="329:45">(</operator><name pos:start="329:46" pos:end="329:58"><name pos:start="329:46" pos:end="329:50">avctx</name><operator pos:start="329:51" pos:end="329:52">-&gt;</operator><name pos:start="329:53" pos:end="329:58">height</name></name> <operator pos:start="329:60" pos:end="329:60">+</operator> <literal type="number" pos:start="329:62" pos:end="329:63">15</literal><operator pos:start="329:64" pos:end="329:64">)</operator> <operator pos:start="329:66" pos:end="329:67">&gt;&gt;</operator> <literal type="number" pos:start="329:69" pos:end="329:69">4</literal><operator pos:start="329:70" pos:end="329:70">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="331:5" pos:end="331:57"><expr pos:start="331:5" pos:end="331:56"><name pos:start="331:5" pos:end="331:26"><name pos:start="331:5" pos:end="331:7">ctx</name><operator pos:start="331:8" pos:end="331:9">-&gt;</operator><name pos:start="331:10" pos:end="331:26">max_surface_count</name></name> <operator pos:start="331:28" pos:end="331:28">=</operator> <ternary pos:start="331:30" pos:end="331:56"><condition pos:start="331:30" pos:end="331:48"><expr pos:start="331:30" pos:end="331:46"><operator pos:start="331:30" pos:end="331:30">(</operator><name pos:start="331:31" pos:end="331:37">num_mbs</name> <operator pos:start="331:39" pos:end="331:40">&gt;=</operator> <literal type="number" pos:start="331:42" pos:end="331:45">8160</literal><operator pos:start="331:46" pos:end="331:46">)</operator></expr> ?</condition><then pos:start="331:50" pos:end="331:51"> <expr pos:start="331:50" pos:end="331:51"><literal type="number" pos:start="331:50" pos:end="331:51">32</literal></expr> </then><else pos:start="331:53" pos:end="331:56">: <expr pos:start="331:55" pos:end="331:56"><literal type="number" pos:start="331:55" pos:end="331:56">48</literal></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="335:5" pos:end="337:55"><if pos:start="335:5" pos:end="337:55">if <condition pos:start="335:8" pos:end="335:52">(<expr pos:start="335:9" pos:end="335:51"><name pos:start="335:9" pos:end="335:25"><name pos:start="335:9" pos:end="335:11">ctx</name><operator pos:start="335:12" pos:end="335:13">-&gt;</operator><name pos:start="335:14" pos:end="335:25">buffer_delay</name></name> <operator pos:start="335:27" pos:end="335:28">&gt;=</operator> <name pos:start="335:30" pos:end="335:51"><name pos:start="335:30" pos:end="335:32">ctx</name><operator pos:start="335:33" pos:end="335:34">-&gt;</operator><name pos:start="335:35" pos:end="335:51">max_surface_count</name></name></expr>)</condition><block type="pseudo" pos:start="337:9" pos:end="337:55"><block_content pos:start="337:9" pos:end="337:55">

        <expr_stmt pos:start="337:9" pos:end="337:55"><expr pos:start="337:9" pos:end="337:54"><name pos:start="337:9" pos:end="337:25"><name pos:start="337:9" pos:end="337:11">ctx</name><operator pos:start="337:12" pos:end="337:13">-&gt;</operator><name pos:start="337:14" pos:end="337:25">buffer_delay</name></name> <operator pos:start="337:27" pos:end="337:27">=</operator> <name pos:start="337:29" pos:end="337:50"><name pos:start="337:29" pos:end="337:31">ctx</name><operator pos:start="337:32" pos:end="337:33">-&gt;</operator><name pos:start="337:34" pos:end="337:50">max_surface_count</name></name> <operator pos:start="337:52" pos:end="337:52">-</operator> <literal type="number" pos:start="337:54" pos:end="337:54">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="341:5" pos:end="341:50"><expr pos:start="341:5" pos:end="341:49"><name pos:start="341:5" pos:end="341:45"><name pos:start="341:5" pos:end="341:7">ctx</name><operator pos:start="341:8" pos:end="341:9">-&gt;</operator><name pos:start="341:10" pos:end="341:27">init_encode_params</name><operator pos:start="341:28" pos:end="341:28">.</operator><name pos:start="341:29" pos:end="341:45">enableEncodeAsync</name></name> <operator pos:start="341:47" pos:end="341:47">=</operator> <literal type="number" pos:start="341:49" pos:end="341:49">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="343:5" pos:end="343:42"><expr pos:start="343:5" pos:end="343:41"><name pos:start="343:5" pos:end="343:37"><name pos:start="343:5" pos:end="343:7">ctx</name><operator pos:start="343:8" pos:end="343:9">-&gt;</operator><name pos:start="343:10" pos:end="343:27">init_encode_params</name><operator pos:start="343:28" pos:end="343:28">.</operator><name pos:start="343:29" pos:end="343:37">enablePTD</name></name> <operator pos:start="343:39" pos:end="343:39">=</operator> <literal type="number" pos:start="343:41" pos:end="343:41">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="347:5" pos:end="347:56"><expr pos:start="347:5" pos:end="347:55"><name pos:start="347:5" pos:end="347:38"><name pos:start="347:5" pos:end="347:7">ctx</name><operator pos:start="347:8" pos:end="347:9">-&gt;</operator><name pos:start="347:10" pos:end="347:27">init_encode_params</name><operator pos:start="347:28" pos:end="347:28">.</operator><name pos:start="347:29" pos:end="347:38">presetGUID</name></name> <operator pos:start="347:40" pos:end="347:40">=</operator> <name pos:start="347:42" pos:end="347:55">encoder_preset</name></expr>;</expr_stmt>



    <expr_stmt pos:start="351:5" pos:end="351:63"><expr pos:start="351:5" pos:end="351:62"><name pos:start="351:5" pos:end="351:40"><name pos:start="351:5" pos:end="351:7">ctx</name><operator pos:start="351:8" pos:end="351:9">-&gt;</operator><name pos:start="351:10" pos:end="351:27">init_encode_params</name><operator pos:start="351:28" pos:end="351:28">.</operator><name pos:start="351:29" pos:end="351:40">encodeConfig</name></name> <operator pos:start="351:42" pos:end="351:42">=</operator> <operator pos:start="351:44" pos:end="351:44">&amp;</operator><name pos:start="351:45" pos:end="351:62"><name pos:start="351:45" pos:end="351:47">ctx</name><operator pos:start="351:48" pos:end="351:49">-&gt;</operator><name pos:start="351:50" pos:end="351:62">encode_config</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="353:5" pos:end="353:86"><expr pos:start="353:5" pos:end="353:85"><call pos:start="353:5" pos:end="353:85"><name pos:start="353:5" pos:end="353:10">memcpy</name><argument_list pos:start="353:11" pos:end="353:85">(<argument pos:start="353:12" pos:end="353:30"><expr pos:start="353:12" pos:end="353:30"><operator pos:start="353:12" pos:end="353:12">&amp;</operator><name pos:start="353:13" pos:end="353:30"><name pos:start="353:13" pos:end="353:15">ctx</name><operator pos:start="353:16" pos:end="353:17">-&gt;</operator><name pos:start="353:18" pos:end="353:30">encode_config</name></name></expr></argument>, <argument pos:start="353:33" pos:end="353:56"><expr pos:start="353:33" pos:end="353:56"><operator pos:start="353:33" pos:end="353:33">&amp;</operator><name pos:start="353:34" pos:end="353:56"><name pos:start="353:34" pos:end="353:46">preset_config</name><operator pos:start="353:47" pos:end="353:47">.</operator><name pos:start="353:48" pos:end="353:56">presetCfg</name></name></expr></argument>, <argument pos:start="353:59" pos:end="353:84"><expr pos:start="353:59" pos:end="353:84"><sizeof pos:start="353:59" pos:end="353:84">sizeof<argument_list pos:start="353:65" pos:end="353:84">(<argument pos:start="353:66" pos:end="353:83"><expr pos:start="353:66" pos:end="353:83"><name pos:start="353:66" pos:end="353:83"><name pos:start="353:66" pos:end="353:68">ctx</name><operator pos:start="353:69" pos:end="353:70">-&gt;</operator><name pos:start="353:71" pos:end="353:83">encode_config</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="355:5" pos:end="355:51"><expr pos:start="355:5" pos:end="355:50"><name pos:start="355:5" pos:end="355:30"><name pos:start="355:5" pos:end="355:7">ctx</name><operator pos:start="355:8" pos:end="355:9">-&gt;</operator><name pos:start="355:10" pos:end="355:22">encode_config</name><operator pos:start="355:23" pos:end="355:23">.</operator><name pos:start="355:24" pos:end="355:30">version</name></name> <operator pos:start="355:32" pos:end="355:32">=</operator> <name pos:start="355:34" pos:end="355:50">NV_ENC_CONFIG_VER</name></expr>;</expr_stmt>



    <if_stmt pos:start="359:5" pos:end="381:5"><if pos:start="359:5" pos:end="381:5">if <condition pos:start="359:8" pos:end="359:25">(<expr pos:start="359:9" pos:end="359:24"><name pos:start="359:9" pos:end="359:19"><name pos:start="359:9" pos:end="359:13">avctx</name><operator pos:start="359:14" pos:end="359:15">-&gt;</operator><name pos:start="359:16" pos:end="359:19">refs</name></name> <operator pos:start="359:21" pos:end="359:22">&gt;=</operator> <literal type="number" pos:start="359:24" pos:end="359:24">0</literal></expr>)</condition> <block pos:start="359:27" pos:end="381:5">{<block_content pos:start="363:9" pos:end="379:9">

        <comment type="block" pos:start="361:9" pos:end="361:47">/* 0 means "let the hardware decide" */</comment>

        <switch pos:start="363:9" pos:end="379:9">switch <condition pos:start="363:16" pos:end="363:33">(<expr pos:start="363:17" pos:end="363:32"><name pos:start="363:17" pos:end="363:32"><name pos:start="363:17" pos:end="363:21">avctx</name><operator pos:start="363:22" pos:end="363:23">-&gt;</operator><name pos:start="363:24" pos:end="363:28">codec</name><operator pos:start="363:29" pos:end="363:30">-&gt;</operator><name pos:start="363:31" pos:end="363:32">id</name></name></expr>)</condition> <block pos:start="363:35" pos:end="379:9">{<block_content pos:start="365:9" pos:end="375:18">

        <case pos:start="365:9" pos:end="365:30">case <expr pos:start="365:14" pos:end="365:29"><name pos:start="365:14" pos:end="365:29">AV_CODEC_ID_H264</name></expr>:</case>

            <expr_stmt pos:start="367:13" pos:end="367:90"><expr pos:start="367:13" pos:end="367:89"><name pos:start="367:13" pos:end="367:75"><name pos:start="367:13" pos:end="367:15">ctx</name><operator pos:start="367:16" pos:end="367:17">-&gt;</operator><name pos:start="367:18" pos:end="367:30">encode_config</name><operator pos:start="367:31" pos:end="367:31">.</operator><name pos:start="367:32" pos:end="367:48">encodeCodecConfig</name><operator pos:start="367:49" pos:end="367:49">.</operator><name pos:start="367:50" pos:end="367:59">h264Config</name><operator pos:start="367:60" pos:end="367:60">.</operator><name pos:start="367:61" pos:end="367:75">maxNumRefFrames</name></name> <operator pos:start="367:77" pos:end="367:77">=</operator> <name pos:start="367:79" pos:end="367:89"><name pos:start="367:79" pos:end="367:83">avctx</name><operator pos:start="367:84" pos:end="367:85">-&gt;</operator><name pos:start="367:86" pos:end="367:89">refs</name></name></expr>;</expr_stmt>

            <break pos:start="369:13" pos:end="369:18">break;</break>

        <case pos:start="371:9" pos:end="371:30">case <expr pos:start="371:14" pos:end="371:29"><name pos:start="371:14" pos:end="371:29">AV_CODEC_ID_H265</name></expr>:</case>

            <expr_stmt pos:start="373:13" pos:end="373:95"><expr pos:start="373:13" pos:end="373:94"><name pos:start="373:13" pos:end="373:80"><name pos:start="373:13" pos:end="373:15">ctx</name><operator pos:start="373:16" pos:end="373:17">-&gt;</operator><name pos:start="373:18" pos:end="373:30">encode_config</name><operator pos:start="373:31" pos:end="373:31">.</operator><name pos:start="373:32" pos:end="373:48">encodeCodecConfig</name><operator pos:start="373:49" pos:end="373:49">.</operator><name pos:start="373:50" pos:end="373:59">hevcConfig</name><operator pos:start="373:60" pos:end="373:60">.</operator><name pos:start="373:61" pos:end="373:80">maxNumRefFramesInDPB</name></name> <operator pos:start="373:82" pos:end="373:82">=</operator> <name pos:start="373:84" pos:end="373:94"><name pos:start="373:84" pos:end="373:88">avctx</name><operator pos:start="373:89" pos:end="373:90">-&gt;</operator><name pos:start="373:91" pos:end="373:94">refs</name></name></expr>;</expr_stmt>

            <break pos:start="375:13" pos:end="375:18">break;</break>

        <comment type="block" pos:start="377:9" pos:end="377:73">/* Earlier switch/case will return if unknown codec is passed. */</comment>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="385:5" pos:end="441:5"><if pos:start="385:5" pos:end="417:5">if <condition pos:start="385:8" pos:end="385:28">(<expr pos:start="385:9" pos:end="385:27"><name pos:start="385:9" pos:end="385:23"><name pos:start="385:9" pos:end="385:13">avctx</name><operator pos:start="385:14" pos:end="385:15">-&gt;</operator><name pos:start="385:16" pos:end="385:23">gop_size</name></name> <operator pos:start="385:25" pos:end="385:25">&gt;</operator> <literal type="number" pos:start="385:27" pos:end="385:27">0</literal></expr>)</condition> <block pos:start="385:30" pos:end="417:5">{<block_content pos:start="387:9" pos:end="415:9">

        <if_stmt pos:start="387:9" pos:end="393:9"><if pos:start="387:9" pos:end="393:9">if <condition pos:start="387:12" pos:end="387:37">(<expr pos:start="387:13" pos:end="387:36"><name pos:start="387:13" pos:end="387:31"><name pos:start="387:13" pos:end="387:17">avctx</name><operator pos:start="387:18" pos:end="387:19">-&gt;</operator><name pos:start="387:20" pos:end="387:31">max_b_frames</name></name> <operator pos:start="387:33" pos:end="387:34">&gt;=</operator> <literal type="number" pos:start="387:36" pos:end="387:36">0</literal></expr>)</condition> <block pos:start="387:39" pos:end="393:9">{<block_content pos:start="391:13" pos:end="391:72">

            <comment type="block" pos:start="389:13" pos:end="389:94">/* 0 is intra-only, 1 is I/P only, 2 is one B Frame, 3 two B frames, and so on. */</comment>

            <expr_stmt pos:start="391:13" pos:end="391:72"><expr pos:start="391:13" pos:end="391:71"><name pos:start="391:13" pos:end="391:45"><name pos:start="391:13" pos:end="391:15">ctx</name><operator pos:start="391:16" pos:end="391:17">-&gt;</operator><name pos:start="391:18" pos:end="391:30">encode_config</name><operator pos:start="391:31" pos:end="391:31">.</operator><name pos:start="391:32" pos:end="391:45">frameIntervalP</name></name> <operator pos:start="391:47" pos:end="391:47">=</operator> <name pos:start="391:49" pos:end="391:67"><name pos:start="391:49" pos:end="391:53">avctx</name><operator pos:start="391:54" pos:end="391:55">-&gt;</operator><name pos:start="391:56" pos:end="391:67">max_b_frames</name></name> <operator pos:start="391:69" pos:end="391:69">+</operator> <literal type="number" pos:start="391:71" pos:end="391:71">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="397:9" pos:end="397:55"><expr pos:start="397:9" pos:end="397:54"><name pos:start="397:9" pos:end="397:36"><name pos:start="397:9" pos:end="397:11">ctx</name><operator pos:start="397:12" pos:end="397:13">-&gt;</operator><name pos:start="397:14" pos:end="397:26">encode_config</name><operator pos:start="397:27" pos:end="397:27">.</operator><name pos:start="397:28" pos:end="397:36">gopLength</name></name> <operator pos:start="397:38" pos:end="397:38">=</operator> <name pos:start="397:40" pos:end="397:54"><name pos:start="397:40" pos:end="397:44">avctx</name><operator pos:start="397:45" pos:end="397:46">-&gt;</operator><name pos:start="397:47" pos:end="397:54">gop_size</name></name></expr>;</expr_stmt>

        <switch pos:start="399:9" pos:end="415:9">switch <condition pos:start="399:16" pos:end="399:33">(<expr pos:start="399:17" pos:end="399:32"><name pos:start="399:17" pos:end="399:32"><name pos:start="399:17" pos:end="399:21">avctx</name><operator pos:start="399:22" pos:end="399:23">-&gt;</operator><name pos:start="399:24" pos:end="399:28">codec</name><operator pos:start="399:29" pos:end="399:30">-&gt;</operator><name pos:start="399:31" pos:end="399:32">id</name></name></expr>)</condition> <block pos:start="399:35" pos:end="415:9">{<block_content pos:start="401:9" pos:end="411:18">

        <case pos:start="401:9" pos:end="401:30">case <expr pos:start="401:14" pos:end="401:29"><name pos:start="401:14" pos:end="401:29">AV_CODEC_ID_H264</name></expr>:</case>

            <expr_stmt pos:start="403:13" pos:end="403:88"><expr pos:start="403:13" pos:end="403:87"><name pos:start="403:13" pos:end="403:69"><name pos:start="403:13" pos:end="403:15">ctx</name><operator pos:start="403:16" pos:end="403:17">-&gt;</operator><name pos:start="403:18" pos:end="403:30">encode_config</name><operator pos:start="403:31" pos:end="403:31">.</operator><name pos:start="403:32" pos:end="403:48">encodeCodecConfig</name><operator pos:start="403:49" pos:end="403:49">.</operator><name pos:start="403:50" pos:end="403:59">h264Config</name><operator pos:start="403:60" pos:end="403:60">.</operator><name pos:start="403:61" pos:end="403:69">idrPeriod</name></name> <operator pos:start="403:71" pos:end="403:71">=</operator> <name pos:start="403:73" pos:end="403:87"><name pos:start="403:73" pos:end="403:77">avctx</name><operator pos:start="403:78" pos:end="403:79">-&gt;</operator><name pos:start="403:80" pos:end="403:87">gop_size</name></name></expr>;</expr_stmt>

            <break pos:start="405:13" pos:end="405:18">break;</break>

        <case pos:start="407:9" pos:end="407:30">case <expr pos:start="407:14" pos:end="407:29"><name pos:start="407:14" pos:end="407:29">AV_CODEC_ID_H265</name></expr>:</case>

            <expr_stmt pos:start="409:13" pos:end="409:88"><expr pos:start="409:13" pos:end="409:87"><name pos:start="409:13" pos:end="409:69"><name pos:start="409:13" pos:end="409:15">ctx</name><operator pos:start="409:16" pos:end="409:17">-&gt;</operator><name pos:start="409:18" pos:end="409:30">encode_config</name><operator pos:start="409:31" pos:end="409:31">.</operator><name pos:start="409:32" pos:end="409:48">encodeCodecConfig</name><operator pos:start="409:49" pos:end="409:49">.</operator><name pos:start="409:50" pos:end="409:59">hevcConfig</name><operator pos:start="409:60" pos:end="409:60">.</operator><name pos:start="409:61" pos:end="409:69">idrPeriod</name></name> <operator pos:start="409:71" pos:end="409:71">=</operator> <name pos:start="409:73" pos:end="409:87"><name pos:start="409:73" pos:end="409:77">avctx</name><operator pos:start="409:78" pos:end="409:79">-&gt;</operator><name pos:start="409:80" pos:end="409:87">gop_size</name></name></expr>;</expr_stmt>

            <break pos:start="411:13" pos:end="411:18">break;</break>

        <comment type="block" pos:start="413:9" pos:end="413:73">/* Earlier switch/case will return if unknown codec is passed. */</comment>

        </block_content>}</block></switch>

    </block_content>}</block></if> <if type="elseif" pos:start="417:7" pos:end="441:5">else if <condition pos:start="417:15" pos:end="417:36">(<expr pos:start="417:16" pos:end="417:35"><name pos:start="417:16" pos:end="417:30"><name pos:start="417:16" pos:end="417:20">avctx</name><operator pos:start="417:21" pos:end="417:22">-&gt;</operator><name pos:start="417:23" pos:end="417:30">gop_size</name></name> <operator pos:start="417:32" pos:end="417:33">==</operator> <literal type="number" pos:start="417:35" pos:end="417:35">0</literal></expr>)</condition> <block pos:start="417:38" pos:end="441:5">{<block_content pos:start="419:9" pos:end="439:9">

        <expr_stmt pos:start="419:9" pos:end="419:46"><expr pos:start="419:9" pos:end="419:45"><name pos:start="419:9" pos:end="419:41"><name pos:start="419:9" pos:end="419:11">ctx</name><operator pos:start="419:12" pos:end="419:13">-&gt;</operator><name pos:start="419:14" pos:end="419:26">encode_config</name><operator pos:start="419:27" pos:end="419:27">.</operator><name pos:start="419:28" pos:end="419:41">frameIntervalP</name></name> <operator pos:start="419:43" pos:end="419:43">=</operator> <literal type="number" pos:start="419:45" pos:end="419:45">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="421:9" pos:end="421:41"><expr pos:start="421:9" pos:end="421:40"><name pos:start="421:9" pos:end="421:36"><name pos:start="421:9" pos:end="421:11">ctx</name><operator pos:start="421:12" pos:end="421:13">-&gt;</operator><name pos:start="421:14" pos:end="421:26">encode_config</name><operator pos:start="421:27" pos:end="421:27">.</operator><name pos:start="421:28" pos:end="421:36">gopLength</name></name> <operator pos:start="421:38" pos:end="421:38">=</operator> <literal type="number" pos:start="421:40" pos:end="421:40">1</literal></expr>;</expr_stmt>

        <switch pos:start="423:9" pos:end="439:9">switch <condition pos:start="423:16" pos:end="423:33">(<expr pos:start="423:17" pos:end="423:32"><name pos:start="423:17" pos:end="423:32"><name pos:start="423:17" pos:end="423:21">avctx</name><operator pos:start="423:22" pos:end="423:23">-&gt;</operator><name pos:start="423:24" pos:end="423:28">codec</name><operator pos:start="423:29" pos:end="423:30">-&gt;</operator><name pos:start="423:31" pos:end="423:32">id</name></name></expr>)</condition> <block pos:start="423:35" pos:end="439:9">{<block_content pos:start="425:9" pos:end="435:18">

        <case pos:start="425:9" pos:end="425:30">case <expr pos:start="425:14" pos:end="425:29"><name pos:start="425:14" pos:end="425:29">AV_CODEC_ID_H264</name></expr>:</case>

            <expr_stmt pos:start="427:13" pos:end="427:74"><expr pos:start="427:13" pos:end="427:73"><name pos:start="427:13" pos:end="427:69"><name pos:start="427:13" pos:end="427:15">ctx</name><operator pos:start="427:16" pos:end="427:17">-&gt;</operator><name pos:start="427:18" pos:end="427:30">encode_config</name><operator pos:start="427:31" pos:end="427:31">.</operator><name pos:start="427:32" pos:end="427:48">encodeCodecConfig</name><operator pos:start="427:49" pos:end="427:49">.</operator><name pos:start="427:50" pos:end="427:59">h264Config</name><operator pos:start="427:60" pos:end="427:60">.</operator><name pos:start="427:61" pos:end="427:69">idrPeriod</name></name> <operator pos:start="427:71" pos:end="427:71">=</operator> <literal type="number" pos:start="427:73" pos:end="427:73">1</literal></expr>;</expr_stmt>

            <break pos:start="429:13" pos:end="429:18">break;</break>

        <case pos:start="431:9" pos:end="431:30">case <expr pos:start="431:14" pos:end="431:29"><name pos:start="431:14" pos:end="431:29">AV_CODEC_ID_H265</name></expr>:</case>

            <expr_stmt pos:start="433:13" pos:end="433:74"><expr pos:start="433:13" pos:end="433:73"><name pos:start="433:13" pos:end="433:69"><name pos:start="433:13" pos:end="433:15">ctx</name><operator pos:start="433:16" pos:end="433:17">-&gt;</operator><name pos:start="433:18" pos:end="433:30">encode_config</name><operator pos:start="433:31" pos:end="433:31">.</operator><name pos:start="433:32" pos:end="433:48">encodeCodecConfig</name><operator pos:start="433:49" pos:end="433:49">.</operator><name pos:start="433:50" pos:end="433:59">hevcConfig</name><operator pos:start="433:60" pos:end="433:60">.</operator><name pos:start="433:61" pos:end="433:69">idrPeriod</name></name> <operator pos:start="433:71" pos:end="433:71">=</operator> <literal type="number" pos:start="433:73" pos:end="433:73">1</literal></expr>;</expr_stmt>

            <break pos:start="435:13" pos:end="435:18">break;</break>

        <comment type="block" pos:start="437:9" pos:end="437:73">/* Earlier switch/case will return if unknown codec is passed. */</comment>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="445:5" pos:end="445:48">/* when there're b frames, set dts offset */</comment>

    <if_stmt pos:start="447:5" pos:end="449:27"><if pos:start="447:5" pos:end="449:27">if <condition pos:start="447:8" pos:end="447:47">(<expr pos:start="447:9" pos:end="447:46"><name pos:start="447:9" pos:end="447:41"><name pos:start="447:9" pos:end="447:11">ctx</name><operator pos:start="447:12" pos:end="447:13">-&gt;</operator><name pos:start="447:14" pos:end="447:26">encode_config</name><operator pos:start="447:27" pos:end="447:27">.</operator><name pos:start="447:28" pos:end="447:41">frameIntervalP</name></name> <operator pos:start="447:43" pos:end="447:44">&gt;=</operator> <literal type="number" pos:start="447:46" pos:end="447:46">2</literal></expr>)</condition><block type="pseudo" pos:start="449:9" pos:end="449:27"><block_content pos:start="449:9" pos:end="449:27">

        <expr_stmt pos:start="449:9" pos:end="449:27"><expr pos:start="449:9" pos:end="449:26"><name pos:start="449:9" pos:end="449:21"><name pos:start="449:9" pos:end="449:11">ctx</name><operator pos:start="449:12" pos:end="449:13">-&gt;</operator><name pos:start="449:14" pos:end="449:21">last_dts</name></name> <operator pos:start="449:23" pos:end="449:23">=</operator> <operator pos:start="449:25" pos:end="449:25">-</operator><literal type="number" pos:start="449:26" pos:end="449:26">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="453:5" pos:end="461:5"><if pos:start="453:5" pos:end="457:5">if <condition pos:start="453:8" pos:end="453:28">(<expr pos:start="453:9" pos:end="453:27"><name pos:start="453:9" pos:end="453:23"><name pos:start="453:9" pos:end="453:13">avctx</name><operator pos:start="453:14" pos:end="453:15">-&gt;</operator><name pos:start="453:16" pos:end="453:23">bit_rate</name></name> <operator pos:start="453:25" pos:end="453:25">&gt;</operator> <literal type="number" pos:start="453:27" pos:end="453:27">0</literal></expr>)</condition> <block pos:start="453:30" pos:end="457:5">{<block_content pos:start="455:9" pos:end="455:69">

        <expr_stmt pos:start="455:9" pos:end="455:69"><expr pos:start="455:9" pos:end="455:68"><name pos:start="455:9" pos:end="455:50"><name pos:start="455:9" pos:end="455:11">ctx</name><operator pos:start="455:12" pos:end="455:13">-&gt;</operator><name pos:start="455:14" pos:end="455:26">encode_config</name><operator pos:start="455:27" pos:end="455:27">.</operator><name pos:start="455:28" pos:end="455:35">rcParams</name><operator pos:start="455:36" pos:end="455:36">.</operator><name pos:start="455:37" pos:end="455:50">averageBitRate</name></name> <operator pos:start="455:52" pos:end="455:52">=</operator> <name pos:start="455:54" pos:end="455:68"><name pos:start="455:54" pos:end="455:58">avctx</name><operator pos:start="455:59" pos:end="455:60">-&gt;</operator><name pos:start="455:61" pos:end="455:68">bit_rate</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="457:7" pos:end="461:5">else if <condition pos:start="457:15" pos:end="457:62">(<expr pos:start="457:16" pos:end="457:61"><name pos:start="457:16" pos:end="457:57"><name pos:start="457:16" pos:end="457:18">ctx</name><operator pos:start="457:19" pos:end="457:20">-&gt;</operator><name pos:start="457:21" pos:end="457:33">encode_config</name><operator pos:start="457:34" pos:end="457:34">.</operator><name pos:start="457:35" pos:end="457:42">rcParams</name><operator pos:start="457:43" pos:end="457:43">.</operator><name pos:start="457:44" pos:end="457:57">averageBitRate</name></name> <operator pos:start="457:59" pos:end="457:59">&gt;</operator> <literal type="number" pos:start="457:61" pos:end="457:61">0</literal></expr>)</condition> <block pos:start="457:64" pos:end="461:5">{<block_content pos:start="459:9" pos:end="459:92">

        <expr_stmt pos:start="459:9" pos:end="459:92"><expr pos:start="459:9" pos:end="459:91"><name pos:start="459:9" pos:end="459:46"><name pos:start="459:9" pos:end="459:11">ctx</name><operator pos:start="459:12" pos:end="459:13">-&gt;</operator><name pos:start="459:14" pos:end="459:26">encode_config</name><operator pos:start="459:27" pos:end="459:27">.</operator><name pos:start="459:28" pos:end="459:35">rcParams</name><operator pos:start="459:36" pos:end="459:36">.</operator><name pos:start="459:37" pos:end="459:46">maxBitRate</name></name> <operator pos:start="459:48" pos:end="459:48">=</operator> <name pos:start="459:50" pos:end="459:91"><name pos:start="459:50" pos:end="459:52">ctx</name><operator pos:start="459:53" pos:end="459:54">-&gt;</operator><name pos:start="459:55" pos:end="459:67">encode_config</name><operator pos:start="459:68" pos:end="459:68">.</operator><name pos:start="459:69" pos:end="459:76">rcParams</name><operator pos:start="459:77" pos:end="459:77">.</operator><name pos:start="459:78" pos:end="459:91">averageBitRate</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="465:5" pos:end="467:68"><if pos:start="465:5" pos:end="467:68">if <condition pos:start="465:8" pos:end="465:31">(<expr pos:start="465:9" pos:end="465:30"><name pos:start="465:9" pos:end="465:26"><name pos:start="465:9" pos:end="465:13">avctx</name><operator pos:start="465:14" pos:end="465:15">-&gt;</operator><name pos:start="465:16" pos:end="465:26">rc_max_rate</name></name> <operator pos:start="465:28" pos:end="465:28">&gt;</operator> <literal type="number" pos:start="465:30" pos:end="465:30">0</literal></expr>)</condition><block type="pseudo" pos:start="467:9" pos:end="467:68"><block_content pos:start="467:9" pos:end="467:68">

        <expr_stmt pos:start="467:9" pos:end="467:68"><expr pos:start="467:9" pos:end="467:67"><name pos:start="467:9" pos:end="467:46"><name pos:start="467:9" pos:end="467:11">ctx</name><operator pos:start="467:12" pos:end="467:13">-&gt;</operator><name pos:start="467:14" pos:end="467:26">encode_config</name><operator pos:start="467:27" pos:end="467:27">.</operator><name pos:start="467:28" pos:end="467:35">rcParams</name><operator pos:start="467:36" pos:end="467:36">.</operator><name pos:start="467:37" pos:end="467:46">maxBitRate</name></name> <operator pos:start="467:48" pos:end="467:48">=</operator> <name pos:start="467:50" pos:end="467:67"><name pos:start="467:50" pos:end="467:54">avctx</name><operator pos:start="467:55" pos:end="467:56">-&gt;</operator><name pos:start="467:57" pos:end="467:67">rc_max_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="471:5" pos:end="639:5"><if pos:start="471:5" pos:end="493:5">if <condition pos:start="471:8" pos:end="471:17">(<expr pos:start="471:9" pos:end="471:16"><name pos:start="471:9" pos:end="471:16">lossless</name></expr>)</condition> <block pos:start="471:19" pos:end="493:5">{<block_content pos:start="473:9" pos:end="491:25">

        <if_stmt pos:start="473:9" pos:end="475:96"><if pos:start="473:9" pos:end="475:96">if <condition pos:start="473:12" pos:end="473:49">(<expr pos:start="473:13" pos:end="473:48"><name pos:start="473:13" pos:end="473:28"><name pos:start="473:13" pos:end="473:17">avctx</name><operator pos:start="473:18" pos:end="473:19">-&gt;</operator><name pos:start="473:20" pos:end="473:24">codec</name><operator pos:start="473:25" pos:end="473:26">-&gt;</operator><name pos:start="473:27" pos:end="473:28">id</name></name> <operator pos:start="473:30" pos:end="473:31">==</operator> <name pos:start="473:33" pos:end="473:48">AV_CODEC_ID_H264</name></expr>)</condition><block type="pseudo" pos:start="475:13" pos:end="475:96"><block_content pos:start="475:13" pos:end="475:96">

            <expr_stmt pos:start="475:13" pos:end="475:96"><expr pos:start="475:13" pos:end="475:95"><name pos:start="475:13" pos:end="475:91"><name pos:start="475:13" pos:end="475:15">ctx</name><operator pos:start="475:16" pos:end="475:17">-&gt;</operator><name pos:start="475:18" pos:end="475:30">encode_config</name><operator pos:start="475:31" pos:end="475:31">.</operator><name pos:start="475:32" pos:end="475:48">encodeCodecConfig</name><operator pos:start="475:49" pos:end="475:49">.</operator><name pos:start="475:50" pos:end="475:59">h264Config</name><operator pos:start="475:60" pos:end="475:60">.</operator><name pos:start="475:61" pos:end="475:91">qpPrimeYZeroTransformBypassFlag</name></name> <operator pos:start="475:93" pos:end="475:93">=</operator> <literal type="number" pos:start="475:95" pos:end="475:95">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="479:9" pos:end="479:79"><expr pos:start="479:9" pos:end="479:78"><name pos:start="479:9" pos:end="479:51"><name pos:start="479:9" pos:end="479:11">ctx</name><operator pos:start="479:12" pos:end="479:13">-&gt;</operator><name pos:start="479:14" pos:end="479:26">encode_config</name><operator pos:start="479:27" pos:end="479:27">.</operator><name pos:start="479:28" pos:end="479:35">rcParams</name><operator pos:start="479:36" pos:end="479:36">.</operator><name pos:start="479:37" pos:end="479:51">rateControlMode</name></name> <operator pos:start="479:53" pos:end="479:53">=</operator> <name pos:start="479:55" pos:end="479:78">NV_ENC_PARAMS_RC_CONSTQP</name></expr>;</expr_stmt>

        <expr_stmt pos:start="481:9" pos:end="481:57"><expr pos:start="481:9" pos:end="481:56"><name pos:start="481:9" pos:end="481:52"><name pos:start="481:9" pos:end="481:11">ctx</name><operator pos:start="481:12" pos:end="481:13">-&gt;</operator><name pos:start="481:14" pos:end="481:26">encode_config</name><operator pos:start="481:27" pos:end="481:27">.</operator><name pos:start="481:28" pos:end="481:35">rcParams</name><operator pos:start="481:36" pos:end="481:36">.</operator><name pos:start="481:37" pos:end="481:43">constQP</name><operator pos:start="481:44" pos:end="481:44">.</operator><name pos:start="481:45" pos:end="481:52">qpInterB</name></name> <operator pos:start="481:54" pos:end="481:54">=</operator> <literal type="number" pos:start="481:56" pos:end="481:56">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="483:9" pos:end="483:57"><expr pos:start="483:9" pos:end="483:56"><name pos:start="483:9" pos:end="483:52"><name pos:start="483:9" pos:end="483:11">ctx</name><operator pos:start="483:12" pos:end="483:13">-&gt;</operator><name pos:start="483:14" pos:end="483:26">encode_config</name><operator pos:start="483:27" pos:end="483:27">.</operator><name pos:start="483:28" pos:end="483:35">rcParams</name><operator pos:start="483:36" pos:end="483:36">.</operator><name pos:start="483:37" pos:end="483:43">constQP</name><operator pos:start="483:44" pos:end="483:44">.</operator><name pos:start="483:45" pos:end="483:52">qpInterP</name></name> <operator pos:start="483:54" pos:end="483:54">=</operator> <literal type="number" pos:start="483:56" pos:end="483:56">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="485:9" pos:end="485:56"><expr pos:start="485:9" pos:end="485:55"><name pos:start="485:9" pos:end="485:51"><name pos:start="485:9" pos:end="485:11">ctx</name><operator pos:start="485:12" pos:end="485:13">-&gt;</operator><name pos:start="485:14" pos:end="485:26">encode_config</name><operator pos:start="485:27" pos:end="485:27">.</operator><name pos:start="485:28" pos:end="485:35">rcParams</name><operator pos:start="485:36" pos:end="485:36">.</operator><name pos:start="485:37" pos:end="485:43">constQP</name><operator pos:start="485:44" pos:end="485:44">.</operator><name pos:start="485:45" pos:end="485:51">qpIntra</name></name> <operator pos:start="485:53" pos:end="485:53">=</operator> <literal type="number" pos:start="485:55" pos:end="485:55">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="489:9" pos:end="489:25"><expr pos:start="489:9" pos:end="489:24"><name pos:start="489:9" pos:end="489:19"><name pos:start="489:9" pos:end="489:13">avctx</name><operator pos:start="489:14" pos:end="489:15">-&gt;</operator><name pos:start="489:16" pos:end="489:19">qmin</name></name> <operator pos:start="489:21" pos:end="489:21">=</operator> <operator pos:start="489:23" pos:end="489:23">-</operator><literal type="number" pos:start="489:24" pos:end="489:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="491:9" pos:end="491:25"><expr pos:start="491:9" pos:end="491:24"><name pos:start="491:9" pos:end="491:19"><name pos:start="491:9" pos:end="491:13">avctx</name><operator pos:start="491:14" pos:end="491:15">-&gt;</operator><name pos:start="491:16" pos:end="491:19">qmax</name></name> <operator pos:start="491:21" pos:end="491:21">=</operator> <operator pos:start="491:23" pos:end="491:23">-</operator><literal type="number" pos:start="491:24" pos:end="491:24">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="493:7" pos:end="531:5">else if <condition pos:start="493:15" pos:end="493:24">(<expr pos:start="493:16" pos:end="493:23"><name pos:start="493:16" pos:end="493:23"><name pos:start="493:16" pos:end="493:18">ctx</name><operator pos:start="493:19" pos:end="493:20">-&gt;</operator><name pos:start="493:21" pos:end="493:23">cbr</name></name></expr>)</condition> <block pos:start="493:26" pos:end="531:5">{<block_content pos:start="495:9" pos:end="529:9">

        <if_stmt pos:start="495:9" pos:end="513:9"><if pos:start="495:9" pos:end="499:9">if <condition pos:start="495:12" pos:end="495:26">(<expr pos:start="495:13" pos:end="495:25"><operator pos:start="495:13" pos:end="495:13">!</operator><name pos:start="495:14" pos:end="495:25"><name pos:start="495:14" pos:end="495:16">ctx</name><operator pos:start="495:17" pos:end="495:18">-&gt;</operator><name pos:start="495:19" pos:end="495:25">twopass</name></name></expr>)</condition> <block pos:start="495:28" pos:end="499:9">{<block_content pos:start="497:13" pos:end="497:79">

            <expr_stmt pos:start="497:13" pos:end="497:79"><expr pos:start="497:13" pos:end="497:78"><name pos:start="497:13" pos:end="497:55"><name pos:start="497:13" pos:end="497:15">ctx</name><operator pos:start="497:16" pos:end="497:17">-&gt;</operator><name pos:start="497:18" pos:end="497:30">encode_config</name><operator pos:start="497:31" pos:end="497:31">.</operator><name pos:start="497:32" pos:end="497:39">rcParams</name><operator pos:start="497:40" pos:end="497:40">.</operator><name pos:start="497:41" pos:end="497:55">rateControlMode</name></name> <operator pos:start="497:57" pos:end="497:57">=</operator> <name pos:start="497:59" pos:end="497:78">NV_ENC_PARAMS_RC_CBR</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="499:11" pos:end="513:9">else <block pos:start="499:16" pos:end="513:9">{<block_content pos:start="501:13" pos:end="511:13">

            <expr_stmt pos:start="501:13" pos:end="501:90"><expr pos:start="501:13" pos:end="501:89"><name pos:start="501:13" pos:end="501:55"><name pos:start="501:13" pos:end="501:15">ctx</name><operator pos:start="501:16" pos:end="501:17">-&gt;</operator><name pos:start="501:18" pos:end="501:30">encode_config</name><operator pos:start="501:31" pos:end="501:31">.</operator><name pos:start="501:32" pos:end="501:39">rcParams</name><operator pos:start="501:40" pos:end="501:40">.</operator><name pos:start="501:41" pos:end="501:55">rateControlMode</name></name> <operator pos:start="501:57" pos:end="501:57">=</operator> <name pos:start="501:59" pos:end="501:89">NV_ENC_PARAMS_RC_2_PASS_QUALITY</name></expr>;</expr_stmt>



            <if_stmt pos:start="505:13" pos:end="511:13"><if pos:start="505:13" pos:end="511:13">if <condition pos:start="505:16" pos:end="505:53">(<expr pos:start="505:17" pos:end="505:52"><name pos:start="505:17" pos:end="505:32"><name pos:start="505:17" pos:end="505:21">avctx</name><operator pos:start="505:22" pos:end="505:23">-&gt;</operator><name pos:start="505:24" pos:end="505:28">codec</name><operator pos:start="505:29" pos:end="505:30">-&gt;</operator><name pos:start="505:31" pos:end="505:32">id</name></name> <operator pos:start="505:34" pos:end="505:35">==</operator> <name pos:start="505:37" pos:end="505:52">AV_CODEC_ID_H264</name></expr>)</condition> <block pos:start="505:55" pos:end="511:13">{<block_content pos:start="507:17" pos:end="509:98">

                <expr_stmt pos:start="507:17" pos:end="507:126"><expr pos:start="507:17" pos:end="507:125"><name pos:start="507:17" pos:end="507:85"><name pos:start="507:17" pos:end="507:19">ctx</name><operator pos:start="507:20" pos:end="507:21">-&gt;</operator><name pos:start="507:22" pos:end="507:34">encode_config</name><operator pos:start="507:35" pos:end="507:35">.</operator><name pos:start="507:36" pos:end="507:52">encodeCodecConfig</name><operator pos:start="507:53" pos:end="507:53">.</operator><name pos:start="507:54" pos:end="507:63">h264Config</name><operator pos:start="507:64" pos:end="507:64">.</operator><name pos:start="507:65" pos:end="507:85">adaptiveTransformMode</name></name> <operator pos:start="507:87" pos:end="507:87">=</operator> <name pos:start="507:89" pos:end="507:125">NV_ENC_H264_ADAPTIVE_TRANSFORM_ENABLE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="509:17" pos:end="509:98"><expr pos:start="509:17" pos:end="509:97"><name pos:start="509:17" pos:end="509:71"><name pos:start="509:17" pos:end="509:19">ctx</name><operator pos:start="509:20" pos:end="509:21">-&gt;</operator><name pos:start="509:22" pos:end="509:34">encode_config</name><operator pos:start="509:35" pos:end="509:35">.</operator><name pos:start="509:36" pos:end="509:52">encodeCodecConfig</name><operator pos:start="509:53" pos:end="509:53">.</operator><name pos:start="509:54" pos:end="509:63">h264Config</name><operator pos:start="509:64" pos:end="509:64">.</operator><name pos:start="509:65" pos:end="509:71">fmoMode</name></name> <operator pos:start="509:73" pos:end="509:73">=</operator> <name pos:start="509:75" pos:end="509:97">NV_ENC_H264_FMO_DISABLE</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="517:9" pos:end="529:9"><if pos:start="517:9" pos:end="523:9">if <condition pos:start="517:12" pos:end="517:49">(<expr pos:start="517:13" pos:end="517:48"><name pos:start="517:13" pos:end="517:28"><name pos:start="517:13" pos:end="517:17">avctx</name><operator pos:start="517:18" pos:end="517:19">-&gt;</operator><name pos:start="517:20" pos:end="517:24">codec</name><operator pos:start="517:25" pos:end="517:26">-&gt;</operator><name pos:start="517:27" pos:end="517:28">id</name></name> <operator pos:start="517:30" pos:end="517:31">==</operator> <name pos:start="517:33" pos:end="517:48">AV_CODEC_ID_H264</name></expr>)</condition> <block pos:start="517:51" pos:end="523:9">{<block_content pos:start="519:13" pos:end="521:87">

            <expr_stmt pos:start="519:13" pos:end="519:89"><expr pos:start="519:13" pos:end="519:88"><name pos:start="519:13" pos:end="519:84"><name pos:start="519:13" pos:end="519:15">ctx</name><operator pos:start="519:16" pos:end="519:17">-&gt;</operator><name pos:start="519:18" pos:end="519:30">encode_config</name><operator pos:start="519:31" pos:end="519:31">.</operator><name pos:start="519:32" pos:end="519:48">encodeCodecConfig</name><operator pos:start="519:49" pos:end="519:49">.</operator><name pos:start="519:50" pos:end="519:59">h264Config</name><operator pos:start="519:60" pos:end="519:60">.</operator><name pos:start="519:61" pos:end="519:84">outputBufferingPeriodSEI</name></name> <operator pos:start="519:86" pos:end="519:86">=</operator> <literal type="number" pos:start="519:88" pos:end="519:88">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="521:13" pos:end="521:87"><expr pos:start="521:13" pos:end="521:86"><name pos:start="521:13" pos:end="521:82"><name pos:start="521:13" pos:end="521:15">ctx</name><operator pos:start="521:16" pos:end="521:17">-&gt;</operator><name pos:start="521:18" pos:end="521:30">encode_config</name><operator pos:start="521:31" pos:end="521:31">.</operator><name pos:start="521:32" pos:end="521:48">encodeCodecConfig</name><operator pos:start="521:49" pos:end="521:49">.</operator><name pos:start="521:50" pos:end="521:59">h264Config</name><operator pos:start="521:60" pos:end="521:60">.</operator><name pos:start="521:61" pos:end="521:82">outputPictureTimingSEI</name></name> <operator pos:start="521:84" pos:end="521:84">=</operator> <literal type="number" pos:start="521:86" pos:end="521:86">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="523:11" pos:end="529:9">else if<condition pos:start="523:18" pos:end="523:55">(<expr pos:start="523:19" pos:end="523:54"><name pos:start="523:19" pos:end="523:34"><name pos:start="523:19" pos:end="523:23">avctx</name><operator pos:start="523:24" pos:end="523:25">-&gt;</operator><name pos:start="523:26" pos:end="523:30">codec</name><operator pos:start="523:31" pos:end="523:32">-&gt;</operator><name pos:start="523:33" pos:end="523:34">id</name></name> <operator pos:start="523:36" pos:end="523:37">==</operator> <name pos:start="523:39" pos:end="523:54">AV_CODEC_ID_H265</name></expr>)</condition> <block pos:start="523:57" pos:end="529:9">{<block_content pos:start="525:13" pos:end="527:87">

            <expr_stmt pos:start="525:13" pos:end="525:89"><expr pos:start="525:13" pos:end="525:88"><name pos:start="525:13" pos:end="525:84"><name pos:start="525:13" pos:end="525:15">ctx</name><operator pos:start="525:16" pos:end="525:17">-&gt;</operator><name pos:start="525:18" pos:end="525:30">encode_config</name><operator pos:start="525:31" pos:end="525:31">.</operator><name pos:start="525:32" pos:end="525:48">encodeCodecConfig</name><operator pos:start="525:49" pos:end="525:49">.</operator><name pos:start="525:50" pos:end="525:59">hevcConfig</name><operator pos:start="525:60" pos:end="525:60">.</operator><name pos:start="525:61" pos:end="525:84">outputBufferingPeriodSEI</name></name> <operator pos:start="525:86" pos:end="525:86">=</operator> <literal type="number" pos:start="525:88" pos:end="525:88">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="527:13" pos:end="527:87"><expr pos:start="527:13" pos:end="527:86"><name pos:start="527:13" pos:end="527:82"><name pos:start="527:13" pos:end="527:15">ctx</name><operator pos:start="527:16" pos:end="527:17">-&gt;</operator><name pos:start="527:18" pos:end="527:30">encode_config</name><operator pos:start="527:31" pos:end="527:31">.</operator><name pos:start="527:32" pos:end="527:48">encodeCodecConfig</name><operator pos:start="527:49" pos:end="527:49">.</operator><name pos:start="527:50" pos:end="527:59">hevcConfig</name><operator pos:start="527:60" pos:end="527:60">.</operator><name pos:start="527:61" pos:end="527:82">outputPictureTimingSEI</name></name> <operator pos:start="527:84" pos:end="527:84">=</operator> <literal type="number" pos:start="527:86" pos:end="527:86">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="531:7" pos:end="547:5">else if <condition pos:start="531:15" pos:end="531:41">(<expr pos:start="531:16" pos:end="531:40"><name pos:start="531:16" pos:end="531:36"><name pos:start="531:16" pos:end="531:20">avctx</name><operator pos:start="531:21" pos:end="531:22">-&gt;</operator><name pos:start="531:23" pos:end="531:36">global_quality</name></name> <operator pos:start="531:38" pos:end="531:38">&gt;</operator> <literal type="number" pos:start="531:40" pos:end="531:40">0</literal></expr>)</condition> <block pos:start="531:43" pos:end="547:5">{<block_content pos:start="533:9" pos:end="545:25">

        <expr_stmt pos:start="533:9" pos:end="533:79"><expr pos:start="533:9" pos:end="533:78"><name pos:start="533:9" pos:end="533:51"><name pos:start="533:9" pos:end="533:11">ctx</name><operator pos:start="533:12" pos:end="533:13">-&gt;</operator><name pos:start="533:14" pos:end="533:26">encode_config</name><operator pos:start="533:27" pos:end="533:27">.</operator><name pos:start="533:28" pos:end="533:35">rcParams</name><operator pos:start="533:36" pos:end="533:36">.</operator><name pos:start="533:37" pos:end="533:51">rateControlMode</name></name> <operator pos:start="533:53" pos:end="533:53">=</operator> <name pos:start="533:55" pos:end="533:78">NV_ENC_PARAMS_RC_CONSTQP</name></expr>;</expr_stmt>

        <expr_stmt pos:start="535:9" pos:end="535:77"><expr pos:start="535:9" pos:end="535:76"><name pos:start="535:9" pos:end="535:52"><name pos:start="535:9" pos:end="535:11">ctx</name><operator pos:start="535:12" pos:end="535:13">-&gt;</operator><name pos:start="535:14" pos:end="535:26">encode_config</name><operator pos:start="535:27" pos:end="535:27">.</operator><name pos:start="535:28" pos:end="535:35">rcParams</name><operator pos:start="535:36" pos:end="535:36">.</operator><name pos:start="535:37" pos:end="535:43">constQP</name><operator pos:start="535:44" pos:end="535:44">.</operator><name pos:start="535:45" pos:end="535:52">qpInterB</name></name> <operator pos:start="535:54" pos:end="535:54">=</operator> <name pos:start="535:56" pos:end="535:76"><name pos:start="535:56" pos:end="535:60">avctx</name><operator pos:start="535:61" pos:end="535:62">-&gt;</operator><name pos:start="535:63" pos:end="535:76">global_quality</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="537:9" pos:end="537:77"><expr pos:start="537:9" pos:end="537:76"><name pos:start="537:9" pos:end="537:52"><name pos:start="537:9" pos:end="537:11">ctx</name><operator pos:start="537:12" pos:end="537:13">-&gt;</operator><name pos:start="537:14" pos:end="537:26">encode_config</name><operator pos:start="537:27" pos:end="537:27">.</operator><name pos:start="537:28" pos:end="537:35">rcParams</name><operator pos:start="537:36" pos:end="537:36">.</operator><name pos:start="537:37" pos:end="537:43">constQP</name><operator pos:start="537:44" pos:end="537:44">.</operator><name pos:start="537:45" pos:end="537:52">qpInterP</name></name> <operator pos:start="537:54" pos:end="537:54">=</operator> <name pos:start="537:56" pos:end="537:76"><name pos:start="537:56" pos:end="537:60">avctx</name><operator pos:start="537:61" pos:end="537:62">-&gt;</operator><name pos:start="537:63" pos:end="537:76">global_quality</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="539:9" pos:end="539:76"><expr pos:start="539:9" pos:end="539:75"><name pos:start="539:9" pos:end="539:51"><name pos:start="539:9" pos:end="539:11">ctx</name><operator pos:start="539:12" pos:end="539:13">-&gt;</operator><name pos:start="539:14" pos:end="539:26">encode_config</name><operator pos:start="539:27" pos:end="539:27">.</operator><name pos:start="539:28" pos:end="539:35">rcParams</name><operator pos:start="539:36" pos:end="539:36">.</operator><name pos:start="539:37" pos:end="539:43">constQP</name><operator pos:start="539:44" pos:end="539:44">.</operator><name pos:start="539:45" pos:end="539:51">qpIntra</name></name> <operator pos:start="539:53" pos:end="539:53">=</operator> <name pos:start="539:55" pos:end="539:75"><name pos:start="539:55" pos:end="539:59">avctx</name><operator pos:start="539:60" pos:end="539:61">-&gt;</operator><name pos:start="539:62" pos:end="539:75">global_quality</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="543:9" pos:end="543:25"><expr pos:start="543:9" pos:end="543:24"><name pos:start="543:9" pos:end="543:19"><name pos:start="543:9" pos:end="543:13">avctx</name><operator pos:start="543:14" pos:end="543:15">-&gt;</operator><name pos:start="543:16" pos:end="543:19">qmin</name></name> <operator pos:start="543:21" pos:end="543:21">=</operator> <operator pos:start="543:23" pos:end="543:23">-</operator><literal type="number" pos:start="543:24" pos:end="543:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="545:9" pos:end="545:25"><expr pos:start="545:9" pos:end="545:24"><name pos:start="545:9" pos:end="545:19"><name pos:start="545:9" pos:end="545:13">avctx</name><operator pos:start="545:14" pos:end="545:15">-&gt;</operator><name pos:start="545:16" pos:end="545:19">qmax</name></name> <operator pos:start="545:21" pos:end="545:21">=</operator> <operator pos:start="545:23" pos:end="545:23">-</operator><literal type="number" pos:start="545:24" pos:end="545:24">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="547:7" pos:end="639:5">else <block pos:start="547:12" pos:end="639:5">{<block_content pos:start="549:9" pos:end="637:9">

        <if_stmt pos:start="549:9" pos:end="611:9"><if pos:start="549:9" pos:end="595:9">if <condition pos:start="549:12" pos:end="549:49">(<expr pos:start="549:13" pos:end="549:48"><name pos:start="549:13" pos:end="549:23"><name pos:start="549:13" pos:end="549:17">avctx</name><operator pos:start="549:18" pos:end="549:19">-&gt;</operator><name pos:start="549:20" pos:end="549:23">qmin</name></name> <operator pos:start="549:25" pos:end="549:26">&gt;=</operator> <literal type="number" pos:start="549:28" pos:end="549:28">0</literal> <operator pos:start="549:30" pos:end="549:31">&amp;&amp;</operator> <name pos:start="549:33" pos:end="549:43"><name pos:start="549:33" pos:end="549:37">avctx</name><operator pos:start="549:38" pos:end="549:39">-&gt;</operator><name pos:start="549:40" pos:end="549:43">qmax</name></name> <operator pos:start="549:45" pos:end="549:46">&gt;=</operator> <literal type="number" pos:start="549:48" pos:end="549:48">0</literal></expr>)</condition> <block pos:start="549:51" pos:end="595:9">{<block_content pos:start="551:13" pos:end="593:13">

            <expr_stmt pos:start="551:13" pos:end="551:56"><expr pos:start="551:13" pos:end="551:55"><name pos:start="551:13" pos:end="551:51"><name pos:start="551:13" pos:end="551:15">ctx</name><operator pos:start="551:16" pos:end="551:17">-&gt;</operator><name pos:start="551:18" pos:end="551:30">encode_config</name><operator pos:start="551:31" pos:end="551:31">.</operator><name pos:start="551:32" pos:end="551:39">rcParams</name><operator pos:start="551:40" pos:end="551:40">.</operator><name pos:start="551:41" pos:end="551:51">enableMinQP</name></name> <operator pos:start="551:53" pos:end="551:53">=</operator> <literal type="number" pos:start="551:55" pos:end="551:55">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="553:13" pos:end="553:56"><expr pos:start="553:13" pos:end="553:55"><name pos:start="553:13" pos:end="553:51"><name pos:start="553:13" pos:end="553:15">ctx</name><operator pos:start="553:16" pos:end="553:17">-&gt;</operator><name pos:start="553:18" pos:end="553:30">encode_config</name><operator pos:start="553:31" pos:end="553:31">.</operator><name pos:start="553:32" pos:end="553:39">rcParams</name><operator pos:start="553:40" pos:end="553:40">.</operator><name pos:start="553:41" pos:end="553:51">enableMaxQP</name></name> <operator pos:start="553:53" pos:end="553:53">=</operator> <literal type="number" pos:start="553:55" pos:end="553:55">1</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="557:13" pos:end="557:69"><expr pos:start="557:13" pos:end="557:68"><name pos:start="557:13" pos:end="557:54"><name pos:start="557:13" pos:end="557:15">ctx</name><operator pos:start="557:16" pos:end="557:17">-&gt;</operator><name pos:start="557:18" pos:end="557:30">encode_config</name><operator pos:start="557:31" pos:end="557:31">.</operator><name pos:start="557:32" pos:end="557:39">rcParams</name><operator pos:start="557:40" pos:end="557:40">.</operator><name pos:start="557:41" pos:end="557:45">minQP</name><operator pos:start="557:46" pos:end="557:46">.</operator><name pos:start="557:47" pos:end="557:54">qpInterB</name></name> <operator pos:start="557:56" pos:end="557:56">=</operator> <name pos:start="557:58" pos:end="557:68"><name pos:start="557:58" pos:end="557:62">avctx</name><operator pos:start="557:63" pos:end="557:64">-&gt;</operator><name pos:start="557:65" pos:end="557:68">qmin</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="559:13" pos:end="559:69"><expr pos:start="559:13" pos:end="559:68"><name pos:start="559:13" pos:end="559:54"><name pos:start="559:13" pos:end="559:15">ctx</name><operator pos:start="559:16" pos:end="559:17">-&gt;</operator><name pos:start="559:18" pos:end="559:30">encode_config</name><operator pos:start="559:31" pos:end="559:31">.</operator><name pos:start="559:32" pos:end="559:39">rcParams</name><operator pos:start="559:40" pos:end="559:40">.</operator><name pos:start="559:41" pos:end="559:45">minQP</name><operator pos:start="559:46" pos:end="559:46">.</operator><name pos:start="559:47" pos:end="559:54">qpInterP</name></name> <operator pos:start="559:56" pos:end="559:56">=</operator> <name pos:start="559:58" pos:end="559:68"><name pos:start="559:58" pos:end="559:62">avctx</name><operator pos:start="559:63" pos:end="559:64">-&gt;</operator><name pos:start="559:65" pos:end="559:68">qmin</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="561:13" pos:end="561:68"><expr pos:start="561:13" pos:end="561:67"><name pos:start="561:13" pos:end="561:53"><name pos:start="561:13" pos:end="561:15">ctx</name><operator pos:start="561:16" pos:end="561:17">-&gt;</operator><name pos:start="561:18" pos:end="561:30">encode_config</name><operator pos:start="561:31" pos:end="561:31">.</operator><name pos:start="561:32" pos:end="561:39">rcParams</name><operator pos:start="561:40" pos:end="561:40">.</operator><name pos:start="561:41" pos:end="561:45">minQP</name><operator pos:start="561:46" pos:end="561:46">.</operator><name pos:start="561:47" pos:end="561:53">qpIntra</name></name> <operator pos:start="561:55" pos:end="561:55">=</operator> <name pos:start="561:57" pos:end="561:67"><name pos:start="561:57" pos:end="561:61">avctx</name><operator pos:start="561:62" pos:end="561:63">-&gt;</operator><name pos:start="561:64" pos:end="561:67">qmin</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="565:13" pos:end="565:69"><expr pos:start="565:13" pos:end="565:68"><name pos:start="565:13" pos:end="565:54"><name pos:start="565:13" pos:end="565:15">ctx</name><operator pos:start="565:16" pos:end="565:17">-&gt;</operator><name pos:start="565:18" pos:end="565:30">encode_config</name><operator pos:start="565:31" pos:end="565:31">.</operator><name pos:start="565:32" pos:end="565:39">rcParams</name><operator pos:start="565:40" pos:end="565:40">.</operator><name pos:start="565:41" pos:end="565:45">maxQP</name><operator pos:start="565:46" pos:end="565:46">.</operator><name pos:start="565:47" pos:end="565:54">qpInterB</name></name> <operator pos:start="565:56" pos:end="565:56">=</operator> <name pos:start="565:58" pos:end="565:68"><name pos:start="565:58" pos:end="565:62">avctx</name><operator pos:start="565:63" pos:end="565:64">-&gt;</operator><name pos:start="565:65" pos:end="565:68">qmax</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="567:13" pos:end="567:69"><expr pos:start="567:13" pos:end="567:68"><name pos:start="567:13" pos:end="567:54"><name pos:start="567:13" pos:end="567:15">ctx</name><operator pos:start="567:16" pos:end="567:17">-&gt;</operator><name pos:start="567:18" pos:end="567:30">encode_config</name><operator pos:start="567:31" pos:end="567:31">.</operator><name pos:start="567:32" pos:end="567:39">rcParams</name><operator pos:start="567:40" pos:end="567:40">.</operator><name pos:start="567:41" pos:end="567:45">maxQP</name><operator pos:start="567:46" pos:end="567:46">.</operator><name pos:start="567:47" pos:end="567:54">qpInterP</name></name> <operator pos:start="567:56" pos:end="567:56">=</operator> <name pos:start="567:58" pos:end="567:68"><name pos:start="567:58" pos:end="567:62">avctx</name><operator pos:start="567:63" pos:end="567:64">-&gt;</operator><name pos:start="567:65" pos:end="567:68">qmax</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="569:13" pos:end="569:68"><expr pos:start="569:13" pos:end="569:67"><name pos:start="569:13" pos:end="569:53"><name pos:start="569:13" pos:end="569:15">ctx</name><operator pos:start="569:16" pos:end="569:17">-&gt;</operator><name pos:start="569:18" pos:end="569:30">encode_config</name><operator pos:start="569:31" pos:end="569:31">.</operator><name pos:start="569:32" pos:end="569:39">rcParams</name><operator pos:start="569:40" pos:end="569:40">.</operator><name pos:start="569:41" pos:end="569:45">maxQP</name><operator pos:start="569:46" pos:end="569:46">.</operator><name pos:start="569:47" pos:end="569:53">qpIntra</name></name> <operator pos:start="569:55" pos:end="569:55">=</operator> <name pos:start="569:57" pos:end="569:67"><name pos:start="569:57" pos:end="569:61">avctx</name><operator pos:start="569:62" pos:end="569:63">-&gt;</operator><name pos:start="569:64" pos:end="569:67">qmax</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="573:13" pos:end="573:61"><expr pos:start="573:13" pos:end="573:60"><name pos:start="573:13" pos:end="573:22">qp_inter_p</name> <operator pos:start="573:24" pos:end="573:24">=</operator> <operator pos:start="573:26" pos:end="573:26">(</operator><name pos:start="573:27" pos:end="573:37"><name pos:start="573:27" pos:end="573:31">avctx</name><operator pos:start="573:32" pos:end="573:33">-&gt;</operator><name pos:start="573:34" pos:end="573:37">qmax</name></name> <operator pos:start="573:39" pos:end="573:39">+</operator> <literal type="number" pos:start="573:41" pos:end="573:41">3</literal> <operator pos:start="573:43" pos:end="573:43">*</operator> <name pos:start="573:45" pos:end="573:55"><name pos:start="573:45" pos:end="573:49">avctx</name><operator pos:start="573:50" pos:end="573:51">-&gt;</operator><name pos:start="573:52" pos:end="573:55">qmin</name></name><operator pos:start="573:56" pos:end="573:56">)</operator> <operator pos:start="573:58" pos:end="573:58">/</operator> <literal type="number" pos:start="573:60" pos:end="573:60">4</literal></expr>;</expr_stmt> <comment type="line" pos:start="573:63" pos:end="573:84">// biased towards Qmin</comment>



            <if_stmt pos:start="577:13" pos:end="593:13"><if pos:start="577:13" pos:end="589:13">if <condition pos:start="577:16" pos:end="577:29">(<expr pos:start="577:17" pos:end="577:28"><name pos:start="577:17" pos:end="577:28"><name pos:start="577:17" pos:end="577:19">ctx</name><operator pos:start="577:20" pos:end="577:21">-&gt;</operator><name pos:start="577:22" pos:end="577:28">twopass</name></name></expr>)</condition> <block pos:start="577:31" pos:end="589:13">{<block_content pos:start="579:17" pos:end="587:17">

                <expr_stmt pos:start="579:17" pos:end="579:90"><expr pos:start="579:17" pos:end="579:89"><name pos:start="579:17" pos:end="579:59"><name pos:start="579:17" pos:end="579:19">ctx</name><operator pos:start="579:20" pos:end="579:21">-&gt;</operator><name pos:start="579:22" pos:end="579:34">encode_config</name><operator pos:start="579:35" pos:end="579:35">.</operator><name pos:start="579:36" pos:end="579:43">rcParams</name><operator pos:start="579:44" pos:end="579:44">.</operator><name pos:start="579:45" pos:end="579:59">rateControlMode</name></name> <operator pos:start="579:61" pos:end="579:61">=</operator> <name pos:start="579:63" pos:end="579:89">NV_ENC_PARAMS_RC_2_PASS_VBR</name></expr>;</expr_stmt>

                <if_stmt pos:start="581:17" pos:end="587:17"><if pos:start="581:17" pos:end="587:17">if <condition pos:start="581:20" pos:end="581:57">(<expr pos:start="581:21" pos:end="581:56"><name pos:start="581:21" pos:end="581:36"><name pos:start="581:21" pos:end="581:25">avctx</name><operator pos:start="581:26" pos:end="581:27">-&gt;</operator><name pos:start="581:28" pos:end="581:32">codec</name><operator pos:start="581:33" pos:end="581:34">-&gt;</operator><name pos:start="581:35" pos:end="581:36">id</name></name> <operator pos:start="581:38" pos:end="581:39">==</operator> <name pos:start="581:41" pos:end="581:56">AV_CODEC_ID_H264</name></expr>)</condition> <block pos:start="581:59" pos:end="587:17">{<block_content pos:start="583:21" pos:end="585:102">

                    <expr_stmt pos:start="583:21" pos:end="583:130"><expr pos:start="583:21" pos:end="583:129"><name pos:start="583:21" pos:end="583:89"><name pos:start="583:21" pos:end="583:23">ctx</name><operator pos:start="583:24" pos:end="583:25">-&gt;</operator><name pos:start="583:26" pos:end="583:38">encode_config</name><operator pos:start="583:39" pos:end="583:39">.</operator><name pos:start="583:40" pos:end="583:56">encodeCodecConfig</name><operator pos:start="583:57" pos:end="583:57">.</operator><name pos:start="583:58" pos:end="583:67">h264Config</name><operator pos:start="583:68" pos:end="583:68">.</operator><name pos:start="583:69" pos:end="583:89">adaptiveTransformMode</name></name> <operator pos:start="583:91" pos:end="583:91">=</operator> <name pos:start="583:93" pos:end="583:129">NV_ENC_H264_ADAPTIVE_TRANSFORM_ENABLE</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="585:21" pos:end="585:102"><expr pos:start="585:21" pos:end="585:101"><name pos:start="585:21" pos:end="585:75"><name pos:start="585:21" pos:end="585:23">ctx</name><operator pos:start="585:24" pos:end="585:25">-&gt;</operator><name pos:start="585:26" pos:end="585:38">encode_config</name><operator pos:start="585:39" pos:end="585:39">.</operator><name pos:start="585:40" pos:end="585:56">encodeCodecConfig</name><operator pos:start="585:57" pos:end="585:57">.</operator><name pos:start="585:58" pos:end="585:67">h264Config</name><operator pos:start="585:68" pos:end="585:68">.</operator><name pos:start="585:69" pos:end="585:75">fmoMode</name></name> <operator pos:start="585:77" pos:end="585:77">=</operator> <name pos:start="585:79" pos:end="585:101">NV_ENC_H264_FMO_DISABLE</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="589:15" pos:end="593:13">else <block pos:start="589:20" pos:end="593:13">{<block_content pos:start="591:17" pos:end="591:89">

                <expr_stmt pos:start="591:17" pos:end="591:89"><expr pos:start="591:17" pos:end="591:88"><name pos:start="591:17" pos:end="591:59"><name pos:start="591:17" pos:end="591:19">ctx</name><operator pos:start="591:20" pos:end="591:21">-&gt;</operator><name pos:start="591:22" pos:end="591:34">encode_config</name><operator pos:start="591:35" pos:end="591:35">.</operator><name pos:start="591:36" pos:end="591:43">rcParams</name><operator pos:start="591:44" pos:end="591:44">.</operator><name pos:start="591:45" pos:end="591:59">rateControlMode</name></name> <operator pos:start="591:61" pos:end="591:61">=</operator> <name pos:start="591:63" pos:end="591:88">NV_ENC_PARAMS_RC_VBR_MINQP</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="595:11" pos:end="611:9">else <block pos:start="595:16" pos:end="611:9">{<block_content pos:start="597:13" pos:end="609:13">

            <expr_stmt pos:start="597:13" pos:end="597:28"><expr pos:start="597:13" pos:end="597:27"><name pos:start="597:13" pos:end="597:22">qp_inter_p</name> <operator pos:start="597:24" pos:end="597:24">=</operator> <literal type="number" pos:start="597:26" pos:end="597:27">26</literal></expr>;</expr_stmt> <comment type="line" pos:start="597:30" pos:end="597:45">// default to 26</comment>



            <if_stmt pos:start="601:13" pos:end="609:13"><if pos:start="601:13" pos:end="605:13">if <condition pos:start="601:16" pos:end="601:29">(<expr pos:start="601:17" pos:end="601:28"><name pos:start="601:17" pos:end="601:28"><name pos:start="601:17" pos:end="601:19">ctx</name><operator pos:start="601:20" pos:end="601:21">-&gt;</operator><name pos:start="601:22" pos:end="601:28">twopass</name></name></expr>)</condition> <block pos:start="601:31" pos:end="605:13">{<block_content pos:start="603:17" pos:end="603:90">

                <expr_stmt pos:start="603:17" pos:end="603:90"><expr pos:start="603:17" pos:end="603:89"><name pos:start="603:17" pos:end="603:59"><name pos:start="603:17" pos:end="603:19">ctx</name><operator pos:start="603:20" pos:end="603:21">-&gt;</operator><name pos:start="603:22" pos:end="603:34">encode_config</name><operator pos:start="603:35" pos:end="603:35">.</operator><name pos:start="603:36" pos:end="603:43">rcParams</name><operator pos:start="603:44" pos:end="603:44">.</operator><name pos:start="603:45" pos:end="603:59">rateControlMode</name></name> <operator pos:start="603:61" pos:end="603:61">=</operator> <name pos:start="603:63" pos:end="603:89">NV_ENC_PARAMS_RC_2_PASS_VBR</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="605:15" pos:end="609:13">else <block pos:start="605:20" pos:end="609:13">{<block_content pos:start="607:17" pos:end="607:83">

                <expr_stmt pos:start="607:17" pos:end="607:83"><expr pos:start="607:17" pos:end="607:82"><name pos:start="607:17" pos:end="607:59"><name pos:start="607:17" pos:end="607:19">ctx</name><operator pos:start="607:20" pos:end="607:21">-&gt;</operator><name pos:start="607:22" pos:end="607:34">encode_config</name><operator pos:start="607:35" pos:end="607:35">.</operator><name pos:start="607:36" pos:end="607:43">rcParams</name><operator pos:start="607:44" pos:end="607:44">.</operator><name pos:start="607:45" pos:end="607:59">rateControlMode</name></name> <operator pos:start="607:61" pos:end="607:61">=</operator> <name pos:start="607:63" pos:end="607:82">NV_ENC_PARAMS_RC_VBR</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="615:9" pos:end="615:58"><expr pos:start="615:9" pos:end="615:57"><name pos:start="615:9" pos:end="615:53"><name pos:start="615:9" pos:end="615:11">ctx</name><operator pos:start="615:12" pos:end="615:13">-&gt;</operator><name pos:start="615:14" pos:end="615:26">encode_config</name><operator pos:start="615:27" pos:end="615:27">.</operator><name pos:start="615:28" pos:end="615:35">rcParams</name><operator pos:start="615:36" pos:end="615:36">.</operator><name pos:start="615:37" pos:end="615:53">enableInitialRCQP</name></name> <operator pos:start="615:55" pos:end="615:55">=</operator> <literal type="number" pos:start="615:57" pos:end="615:57">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="617:9" pos:end="617:71"><expr pos:start="617:9" pos:end="617:70"><name pos:start="617:9" pos:end="617:56"><name pos:start="617:9" pos:end="617:11">ctx</name><operator pos:start="617:12" pos:end="617:13">-&gt;</operator><name pos:start="617:14" pos:end="617:26">encode_config</name><operator pos:start="617:27" pos:end="617:27">.</operator><name pos:start="617:28" pos:end="617:35">rcParams</name><operator pos:start="617:36" pos:end="617:36">.</operator><name pos:start="617:37" pos:end="617:47">initialRCQP</name><operator pos:start="617:48" pos:end="617:48">.</operator><name pos:start="617:49" pos:end="617:56">qpInterP</name></name>  <operator pos:start="617:59" pos:end="617:59">=</operator> <name pos:start="617:61" pos:end="617:70">qp_inter_p</name></expr>;</expr_stmt>



        <if_stmt pos:start="621:9" pos:end="637:9"><if pos:start="621:9" pos:end="631:9">if<condition pos:start="621:11" pos:end="621:72">(<expr pos:start="621:12" pos:end="621:71"><name pos:start="621:12" pos:end="621:32"><name pos:start="621:12" pos:end="621:16">avctx</name><operator pos:start="621:17" pos:end="621:18">-&gt;</operator><name pos:start="621:19" pos:end="621:32">i_quant_factor</name></name> <operator pos:start="621:34" pos:end="621:35">!=</operator> <literal type="number" pos:start="621:37" pos:end="621:39">0.0</literal> <operator pos:start="621:41" pos:end="621:42">&amp;&amp;</operator> <name pos:start="621:44" pos:end="621:64"><name pos:start="621:44" pos:end="621:48">avctx</name><operator pos:start="621:49" pos:end="621:50">-&gt;</operator><name pos:start="621:51" pos:end="621:64">b_quant_factor</name></name> <operator pos:start="621:66" pos:end="621:67">!=</operator> <literal type="number" pos:start="621:69" pos:end="621:71">0.0</literal></expr>)</condition> <block pos:start="621:74" pos:end="631:9">{<block_content pos:start="623:13" pos:end="629:89">

            <expr_stmt pos:start="623:13" pos:end="625:89"><expr pos:start="623:13" pos:end="625:88"><name pos:start="623:13" pos:end="623:59"><name pos:start="623:13" pos:end="623:15">ctx</name><operator pos:start="623:16" pos:end="623:17">-&gt;</operator><name pos:start="623:18" pos:end="623:30">encode_config</name><operator pos:start="623:31" pos:end="623:31">.</operator><name pos:start="623:32" pos:end="623:39">rcParams</name><operator pos:start="623:40" pos:end="623:40">.</operator><name pos:start="623:41" pos:end="623:51">initialRCQP</name><operator pos:start="623:52" pos:end="623:52">.</operator><name pos:start="623:53" pos:end="623:59">qpIntra</name></name> <operator pos:start="623:61" pos:end="623:61">=</operator> <call pos:start="623:63" pos:end="625:88"><name pos:start="623:63" pos:end="623:69">av_clip</name><argument_list pos:start="623:70" pos:end="625:88">(

                <argument pos:start="625:17" pos:end="625:80"><expr pos:start="625:17" pos:end="625:80"><name pos:start="625:17" pos:end="625:26">qp_inter_p</name> <operator pos:start="625:28" pos:end="625:28">*</operator> <call pos:start="625:30" pos:end="625:56"><name pos:start="625:30" pos:end="625:33">fabs</name><argument_list pos:start="625:34" pos:end="625:56">(<argument pos:start="625:35" pos:end="625:55"><expr pos:start="625:35" pos:end="625:55"><name pos:start="625:35" pos:end="625:55"><name pos:start="625:35" pos:end="625:39">avctx</name><operator pos:start="625:40" pos:end="625:41">-&gt;</operator><name pos:start="625:42" pos:end="625:55">i_quant_factor</name></name></expr></argument>)</argument_list></call> <operator pos:start="625:58" pos:end="625:58">+</operator> <name pos:start="625:60" pos:end="625:80"><name pos:start="625:60" pos:end="625:64">avctx</name><operator pos:start="625:65" pos:end="625:66">-&gt;</operator><name pos:start="625:67" pos:end="625:80">i_quant_offset</name></name></expr></argument>, <argument pos:start="625:83" pos:end="625:83"><expr pos:start="625:83" pos:end="625:83"><literal type="number" pos:start="625:83" pos:end="625:83">0</literal></expr></argument>, <argument pos:start="625:86" pos:end="625:87"><expr pos:start="625:86" pos:end="625:87"><literal type="number" pos:start="625:86" pos:end="625:87">51</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="627:13" pos:end="629:89"><expr pos:start="627:13" pos:end="629:88"><name pos:start="627:13" pos:end="627:60"><name pos:start="627:13" pos:end="627:15">ctx</name><operator pos:start="627:16" pos:end="627:17">-&gt;</operator><name pos:start="627:18" pos:end="627:30">encode_config</name><operator pos:start="627:31" pos:end="627:31">.</operator><name pos:start="627:32" pos:end="627:39">rcParams</name><operator pos:start="627:40" pos:end="627:40">.</operator><name pos:start="627:41" pos:end="627:51">initialRCQP</name><operator pos:start="627:52" pos:end="627:52">.</operator><name pos:start="627:53" pos:end="627:60">qpInterB</name></name> <operator pos:start="627:62" pos:end="627:62">=</operator> <call pos:start="627:64" pos:end="629:88"><name pos:start="627:64" pos:end="627:70">av_clip</name><argument_list pos:start="627:71" pos:end="629:88">(

                <argument pos:start="629:17" pos:end="629:80"><expr pos:start="629:17" pos:end="629:80"><name pos:start="629:17" pos:end="629:26">qp_inter_p</name> <operator pos:start="629:28" pos:end="629:28">*</operator> <call pos:start="629:30" pos:end="629:56"><name pos:start="629:30" pos:end="629:33">fabs</name><argument_list pos:start="629:34" pos:end="629:56">(<argument pos:start="629:35" pos:end="629:55"><expr pos:start="629:35" pos:end="629:55"><name pos:start="629:35" pos:end="629:55"><name pos:start="629:35" pos:end="629:39">avctx</name><operator pos:start="629:40" pos:end="629:41">-&gt;</operator><name pos:start="629:42" pos:end="629:55">b_quant_factor</name></name></expr></argument>)</argument_list></call> <operator pos:start="629:58" pos:end="629:58">+</operator> <name pos:start="629:60" pos:end="629:80"><name pos:start="629:60" pos:end="629:64">avctx</name><operator pos:start="629:65" pos:end="629:66">-&gt;</operator><name pos:start="629:67" pos:end="629:80">b_quant_offset</name></name></expr></argument>, <argument pos:start="629:83" pos:end="629:83"><expr pos:start="629:83" pos:end="629:83"><literal type="number" pos:start="629:83" pos:end="629:83">0</literal></expr></argument>, <argument pos:start="629:86" pos:end="629:87"><expr pos:start="629:86" pos:end="629:87"><literal type="number" pos:start="629:86" pos:end="629:87">51</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="631:11" pos:end="637:9">else <block pos:start="631:16" pos:end="637:9">{<block_content pos:start="633:13" pos:end="635:74">

            <expr_stmt pos:start="633:13" pos:end="633:73"><expr pos:start="633:13" pos:end="633:72"><name pos:start="633:13" pos:end="633:59"><name pos:start="633:13" pos:end="633:15">ctx</name><operator pos:start="633:16" pos:end="633:17">-&gt;</operator><name pos:start="633:18" pos:end="633:30">encode_config</name><operator pos:start="633:31" pos:end="633:31">.</operator><name pos:start="633:32" pos:end="633:39">rcParams</name><operator pos:start="633:40" pos:end="633:40">.</operator><name pos:start="633:41" pos:end="633:51">initialRCQP</name><operator pos:start="633:52" pos:end="633:52">.</operator><name pos:start="633:53" pos:end="633:59">qpIntra</name></name> <operator pos:start="633:61" pos:end="633:61">=</operator> <name pos:start="633:63" pos:end="633:72">qp_inter_p</name></expr>;</expr_stmt>

            <expr_stmt pos:start="635:13" pos:end="635:74"><expr pos:start="635:13" pos:end="635:73"><name pos:start="635:13" pos:end="635:60"><name pos:start="635:13" pos:end="635:15">ctx</name><operator pos:start="635:16" pos:end="635:17">-&gt;</operator><name pos:start="635:18" pos:end="635:30">encode_config</name><operator pos:start="635:31" pos:end="635:31">.</operator><name pos:start="635:32" pos:end="635:39">rcParams</name><operator pos:start="635:40" pos:end="635:40">.</operator><name pos:start="635:41" pos:end="635:51">initialRCQP</name><operator pos:start="635:52" pos:end="635:52">.</operator><name pos:start="635:53" pos:end="635:60">qpInterB</name></name> <operator pos:start="635:62" pos:end="635:62">=</operator> <name pos:start="635:64" pos:end="635:73">qp_inter_p</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="643:5" pos:end="651:5"><if pos:start="643:5" pos:end="647:5">if <condition pos:start="643:8" pos:end="643:34">(<expr pos:start="643:9" pos:end="643:33"><name pos:start="643:9" pos:end="643:29"><name pos:start="643:9" pos:end="643:13">avctx</name><operator pos:start="643:14" pos:end="643:15">-&gt;</operator><name pos:start="643:16" pos:end="643:29">rc_buffer_size</name></name> <operator pos:start="643:31" pos:end="643:31">&gt;</operator> <literal type="number" pos:start="643:33" pos:end="643:33">0</literal></expr>)</condition> <block pos:start="643:36" pos:end="647:5">{<block_content pos:start="645:9" pos:end="645:74">

        <expr_stmt pos:start="645:9" pos:end="645:74"><expr pos:start="645:9" pos:end="645:73"><name pos:start="645:9" pos:end="645:49"><name pos:start="645:9" pos:end="645:11">ctx</name><operator pos:start="645:12" pos:end="645:13">-&gt;</operator><name pos:start="645:14" pos:end="645:26">encode_config</name><operator pos:start="645:27" pos:end="645:27">.</operator><name pos:start="645:28" pos:end="645:35">rcParams</name><operator pos:start="645:36" pos:end="645:36">.</operator><name pos:start="645:37" pos:end="645:49">vbvBufferSize</name></name> <operator pos:start="645:51" pos:end="645:51">=</operator> <name pos:start="645:53" pos:end="645:73"><name pos:start="645:53" pos:end="645:57">avctx</name><operator pos:start="645:58" pos:end="645:59">-&gt;</operator><name pos:start="645:60" pos:end="645:73">rc_buffer_size</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="647:7" pos:end="651:5">else if <condition pos:start="647:15" pos:end="647:62">(<expr pos:start="647:16" pos:end="647:61"><name pos:start="647:16" pos:end="647:57"><name pos:start="647:16" pos:end="647:18">ctx</name><operator pos:start="647:19" pos:end="647:20">-&gt;</operator><name pos:start="647:21" pos:end="647:33">encode_config</name><operator pos:start="647:34" pos:end="647:34">.</operator><name pos:start="647:35" pos:end="647:42">rcParams</name><operator pos:start="647:43" pos:end="647:43">.</operator><name pos:start="647:44" pos:end="647:57">averageBitRate</name></name> <operator pos:start="647:59" pos:end="647:59">&gt;</operator> <literal type="number" pos:start="647:61" pos:end="647:61">0</literal></expr>)</condition> <block pos:start="647:64" pos:end="651:5">{<block_content pos:start="649:9" pos:end="649:99">

        <expr_stmt pos:start="649:9" pos:end="649:99"><expr pos:start="649:9" pos:end="649:98"><name pos:start="649:9" pos:end="649:49"><name pos:start="649:9" pos:end="649:11">ctx</name><operator pos:start="649:12" pos:end="649:13">-&gt;</operator><name pos:start="649:14" pos:end="649:26">encode_config</name><operator pos:start="649:27" pos:end="649:27">.</operator><name pos:start="649:28" pos:end="649:35">rcParams</name><operator pos:start="649:36" pos:end="649:36">.</operator><name pos:start="649:37" pos:end="649:49">vbvBufferSize</name></name> <operator pos:start="649:51" pos:end="649:51">=</operator> <literal type="number" pos:start="649:53" pos:end="649:53">2</literal> <operator pos:start="649:55" pos:end="649:55">*</operator> <name pos:start="649:57" pos:end="649:98"><name pos:start="649:57" pos:end="649:59">ctx</name><operator pos:start="649:60" pos:end="649:61">-&gt;</operator><name pos:start="649:62" pos:end="649:74">encode_config</name><operator pos:start="649:75" pos:end="649:75">.</operator><name pos:start="649:76" pos:end="649:83">rcParams</name><operator pos:start="649:84" pos:end="649:84">.</operator><name pos:start="649:85" pos:end="649:98">averageBitRate</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="655:5" pos:end="663:5"><if pos:start="655:5" pos:end="659:5">if <condition pos:start="655:8" pos:end="655:52">(<expr pos:start="655:9" pos:end="655:51"><name pos:start="655:9" pos:end="655:20"><name pos:start="655:9" pos:end="655:13">avctx</name><operator pos:start="655:14" pos:end="655:15">-&gt;</operator><name pos:start="655:16" pos:end="655:20">flags</name></name> <operator pos:start="655:22" pos:end="655:22">&amp;</operator> <name pos:start="655:24" pos:end="655:51">AV_CODEC_FLAG_INTERLACED_DCT</name></expr>)</condition> <block pos:start="655:54" pos:end="659:5">{<block_content pos:start="657:9" pos:end="657:81">

        <expr_stmt pos:start="657:9" pos:end="657:81"><expr pos:start="657:9" pos:end="657:80"><name pos:start="657:9" pos:end="657:41"><name pos:start="657:9" pos:end="657:11">ctx</name><operator pos:start="657:12" pos:end="657:13">-&gt;</operator><name pos:start="657:14" pos:end="657:26">encode_config</name><operator pos:start="657:27" pos:end="657:27">.</operator><name pos:start="657:28" pos:end="657:41">frameFieldMode</name></name> <operator pos:start="657:43" pos:end="657:43">=</operator> <name pos:start="657:45" pos:end="657:80">NV_ENC_PARAMS_FRAME_FIELD_MODE_FIELD</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="659:7" pos:end="663:5">else <block pos:start="659:12" pos:end="663:5">{<block_content pos:start="661:9" pos:end="661:81">

        <expr_stmt pos:start="661:9" pos:end="661:81"><expr pos:start="661:9" pos:end="661:80"><name pos:start="661:9" pos:end="661:41"><name pos:start="661:9" pos:end="661:11">ctx</name><operator pos:start="661:12" pos:end="661:13">-&gt;</operator><name pos:start="661:14" pos:end="661:26">encode_config</name><operator pos:start="661:27" pos:end="661:27">.</operator><name pos:start="661:28" pos:end="661:41">frameFieldMode</name></name> <operator pos:start="661:43" pos:end="661:43">=</operator> <name pos:start="661:45" pos:end="661:80">NV_ENC_PARAMS_FRAME_FIELD_MODE_FRAME</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <switch pos:start="667:5" pos:end="939:5">switch <condition pos:start="667:12" pos:end="667:29">(<expr pos:start="667:13" pos:end="667:28"><name pos:start="667:13" pos:end="667:28"><name pos:start="667:13" pos:end="667:17">avctx</name><operator pos:start="667:18" pos:end="667:19">-&gt;</operator><name pos:start="667:20" pos:end="667:24">codec</name><operator pos:start="667:25" pos:end="667:26">-&gt;</operator><name pos:start="667:27" pos:end="667:28">id</name></name></expr>)</condition> <block pos:start="667:31" pos:end="939:5">{<block_content pos:start="669:5" pos:end="935:14">

    <case pos:start="669:5" pos:end="669:26">case <expr pos:start="669:10" pos:end="669:25"><name pos:start="669:10" pos:end="669:25">AV_CODEC_ID_H264</name></expr>:</case>

        <expr_stmt pos:start="671:9" pos:end="671:107"><expr pos:start="671:9" pos:end="671:106"><name pos:start="671:9" pos:end="671:86"><name pos:start="671:9" pos:end="671:11">ctx</name><operator pos:start="671:12" pos:end="671:13">-&gt;</operator><name pos:start="671:14" pos:end="671:26">encode_config</name><operator pos:start="671:27" pos:end="671:27">.</operator><name pos:start="671:28" pos:end="671:44">encodeCodecConfig</name><operator pos:start="671:45" pos:end="671:45">.</operator><name pos:start="671:46" pos:end="671:55">h264Config</name><operator pos:start="671:56" pos:end="671:56">.</operator><name pos:start="671:57" pos:end="671:73">h264VUIParameters</name><operator pos:start="671:74" pos:end="671:74">.</operator><name pos:start="671:75" pos:end="671:86">colourMatrix</name></name> <operator pos:start="671:88" pos:end="671:88">=</operator> <name pos:start="671:90" pos:end="671:106"><name pos:start="671:90" pos:end="671:94">avctx</name><operator pos:start="671:95" pos:end="671:96">-&gt;</operator><name pos:start="671:97" pos:end="671:106">colorspace</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="673:9" pos:end="673:115"><expr pos:start="673:9" pos:end="673:114"><name pos:start="673:9" pos:end="673:89"><name pos:start="673:9" pos:end="673:11">ctx</name><operator pos:start="673:12" pos:end="673:13">-&gt;</operator><name pos:start="673:14" pos:end="673:26">encode_config</name><operator pos:start="673:27" pos:end="673:27">.</operator><name pos:start="673:28" pos:end="673:44">encodeCodecConfig</name><operator pos:start="673:45" pos:end="673:45">.</operator><name pos:start="673:46" pos:end="673:55">h264Config</name><operator pos:start="673:56" pos:end="673:56">.</operator><name pos:start="673:57" pos:end="673:73">h264VUIParameters</name><operator pos:start="673:74" pos:end="673:74">.</operator><name pos:start="673:75" pos:end="673:89">colourPrimaries</name></name> <operator pos:start="673:91" pos:end="673:91">=</operator> <name pos:start="673:93" pos:end="673:114"><name pos:start="673:93" pos:end="673:97">avctx</name><operator pos:start="673:98" pos:end="673:99">-&gt;</operator><name pos:start="673:100" pos:end="673:114">color_primaries</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="675:9" pos:end="675:117"><expr pos:start="675:9" pos:end="675:116"><name pos:start="675:9" pos:end="675:97"><name pos:start="675:9" pos:end="675:11">ctx</name><operator pos:start="675:12" pos:end="675:13">-&gt;</operator><name pos:start="675:14" pos:end="675:26">encode_config</name><operator pos:start="675:27" pos:end="675:27">.</operator><name pos:start="675:28" pos:end="675:44">encodeCodecConfig</name><operator pos:start="675:45" pos:end="675:45">.</operator><name pos:start="675:46" pos:end="675:55">h264Config</name><operator pos:start="675:56" pos:end="675:56">.</operator><name pos:start="675:57" pos:end="675:73">h264VUIParameters</name><operator pos:start="675:74" pos:end="675:74">.</operator><name pos:start="675:75" pos:end="675:97">transferCharacteristics</name></name> <operator pos:start="675:99" pos:end="675:99">=</operator> <name pos:start="675:101" pos:end="675:116"><name pos:start="675:101" pos:end="675:105">avctx</name><operator pos:start="675:106" pos:end="675:107">-&gt;</operator><name pos:start="675:108" pos:end="675:116">color_trc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="677:9" pos:end="679:136"><expr pos:start="677:9" pos:end="679:135"><name pos:start="677:9" pos:end="677:92"><name pos:start="677:9" pos:end="677:11">ctx</name><operator pos:start="677:12" pos:end="677:13">-&gt;</operator><name pos:start="677:14" pos:end="677:26">encode_config</name><operator pos:start="677:27" pos:end="677:27">.</operator><name pos:start="677:28" pos:end="677:44">encodeCodecConfig</name><operator pos:start="677:45" pos:end="677:45">.</operator><name pos:start="677:46" pos:end="677:55">h264Config</name><operator pos:start="677:56" pos:end="677:56">.</operator><name pos:start="677:57" pos:end="677:73">h264VUIParameters</name><operator pos:start="677:74" pos:end="677:74">.</operator><name pos:start="677:75" pos:end="677:92">videoFullRangeFlag</name></name> <operator pos:start="677:94" pos:end="677:94">=</operator> <operator pos:start="677:96" pos:end="677:96">(</operator><name pos:start="677:97" pos:end="677:114"><name pos:start="677:97" pos:end="677:101">avctx</name><operator pos:start="677:102" pos:end="677:103">-&gt;</operator><name pos:start="677:104" pos:end="677:114">color_range</name></name> <operator pos:start="677:116" pos:end="677:117">==</operator> <name pos:start="677:119" pos:end="677:134">AVCOL_RANGE_JPEG</name>

            <operator pos:start="679:13" pos:end="679:14">||</operator> <name pos:start="679:16" pos:end="679:29"><name pos:start="679:16" pos:end="679:20">avctx</name><operator pos:start="679:21" pos:end="679:22">-&gt;</operator><name pos:start="679:23" pos:end="679:29">pix_fmt</name></name> <operator pos:start="679:31" pos:end="679:32">==</operator> <name pos:start="679:34" pos:end="679:52">AV_PIX_FMT_YUVJ420P</name> <operator pos:start="679:54" pos:end="679:55">||</operator> <name pos:start="679:57" pos:end="679:70"><name pos:start="679:57" pos:end="679:61">avctx</name><operator pos:start="679:62" pos:end="679:63">-&gt;</operator><name pos:start="679:64" pos:end="679:70">pix_fmt</name></name> <operator pos:start="679:72" pos:end="679:73">==</operator> <name pos:start="679:75" pos:end="679:93">AV_PIX_FMT_YUVJ422P</name> <operator pos:start="679:95" pos:end="679:96">||</operator> <name pos:start="679:98" pos:end="679:111"><name pos:start="679:98" pos:end="679:102">avctx</name><operator pos:start="679:103" pos:end="679:104">-&gt;</operator><name pos:start="679:105" pos:end="679:111">pix_fmt</name></name> <operator pos:start="679:113" pos:end="679:114">==</operator> <name pos:start="679:116" pos:end="679:134">AV_PIX_FMT_YUVJ444P</name><operator pos:start="679:135" pos:end="679:135">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="683:9" pos:end="685:93"><expr pos:start="683:9" pos:end="685:92"><name pos:start="683:9" pos:end="683:102"><name pos:start="683:9" pos:end="683:11">ctx</name><operator pos:start="683:12" pos:end="683:13">-&gt;</operator><name pos:start="683:14" pos:end="683:26">encode_config</name><operator pos:start="683:27" pos:end="683:27">.</operator><name pos:start="683:28" pos:end="683:44">encodeCodecConfig</name><operator pos:start="683:45" pos:end="683:45">.</operator><name pos:start="683:46" pos:end="683:55">h264Config</name><operator pos:start="683:56" pos:end="683:56">.</operator><name pos:start="683:57" pos:end="683:73">h264VUIParameters</name><operator pos:start="683:74" pos:end="683:74">.</operator><name pos:start="683:75" pos:end="683:102">colourDescriptionPresentFlag</name></name> <operator pos:start="683:104" pos:end="683:104">=</operator>

            <operator pos:start="685:13" pos:end="685:13">(</operator><name pos:start="685:14" pos:end="685:30"><name pos:start="685:14" pos:end="685:18">avctx</name><operator pos:start="685:19" pos:end="685:20">-&gt;</operator><name pos:start="685:21" pos:end="685:30">colorspace</name></name> <operator pos:start="685:32" pos:end="685:33">!=</operator> <literal type="number" pos:start="685:35" pos:end="685:35">2</literal> <operator pos:start="685:37" pos:end="685:38">||</operator> <name pos:start="685:40" pos:end="685:61"><name pos:start="685:40" pos:end="685:44">avctx</name><operator pos:start="685:45" pos:end="685:46">-&gt;</operator><name pos:start="685:47" pos:end="685:61">color_primaries</name></name> <operator pos:start="685:63" pos:end="685:64">!=</operator> <literal type="number" pos:start="685:66" pos:end="685:66">2</literal> <operator pos:start="685:68" pos:end="685:69">||</operator> <name pos:start="685:71" pos:end="685:86"><name pos:start="685:71" pos:end="685:75">avctx</name><operator pos:start="685:76" pos:end="685:77">-&gt;</operator><name pos:start="685:78" pos:end="685:86">color_trc</name></name> <operator pos:start="685:88" pos:end="685:89">!=</operator> <literal type="number" pos:start="685:91" pos:end="685:91">2</literal><operator pos:start="685:92" pos:end="685:92">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="689:9" pos:end="695:106"><expr pos:start="689:9" pos:end="695:105"><name pos:start="689:9" pos:end="689:100"><name pos:start="689:9" pos:end="689:11">ctx</name><operator pos:start="689:12" pos:end="689:13">-&gt;</operator><name pos:start="689:14" pos:end="689:26">encode_config</name><operator pos:start="689:27" pos:end="689:27">.</operator><name pos:start="689:28" pos:end="689:44">encodeCodecConfig</name><operator pos:start="689:45" pos:end="689:45">.</operator><name pos:start="689:46" pos:end="689:55">h264Config</name><operator pos:start="689:56" pos:end="689:56">.</operator><name pos:start="689:57" pos:end="689:73">h264VUIParameters</name><operator pos:start="689:74" pos:end="689:74">.</operator><name pos:start="689:75" pos:end="689:100">videoSignalTypePresentFlag</name></name> <operator pos:start="689:102" pos:end="689:102">=</operator>

            <operator pos:start="691:13" pos:end="691:13">(</operator><name pos:start="691:14" pos:end="691:107"><name pos:start="691:14" pos:end="691:16">ctx</name><operator pos:start="691:17" pos:end="691:18">-&gt;</operator><name pos:start="691:19" pos:end="691:31">encode_config</name><operator pos:start="691:32" pos:end="691:32">.</operator><name pos:start="691:33" pos:end="691:49">encodeCodecConfig</name><operator pos:start="691:50" pos:end="691:50">.</operator><name pos:start="691:51" pos:end="691:60">h264Config</name><operator pos:start="691:61" pos:end="691:61">.</operator><name pos:start="691:62" pos:end="691:78">h264VUIParameters</name><operator pos:start="691:79" pos:end="691:79">.</operator><name pos:start="691:80" pos:end="691:107">colourDescriptionPresentFlag</name></name>

            <operator pos:start="693:13" pos:end="693:14">||</operator> <name pos:start="693:16" pos:end="693:92"><name pos:start="693:16" pos:end="693:18">ctx</name><operator pos:start="693:19" pos:end="693:20">-&gt;</operator><name pos:start="693:21" pos:end="693:33">encode_config</name><operator pos:start="693:34" pos:end="693:34">.</operator><name pos:start="693:35" pos:end="693:51">encodeCodecConfig</name><operator pos:start="693:52" pos:end="693:52">.</operator><name pos:start="693:53" pos:end="693:62">h264Config</name><operator pos:start="693:63" pos:end="693:63">.</operator><name pos:start="693:64" pos:end="693:80">h264VUIParameters</name><operator pos:start="693:81" pos:end="693:81">.</operator><name pos:start="693:82" pos:end="693:92">videoFormat</name></name> <operator pos:start="693:94" pos:end="693:95">!=</operator> <literal type="number" pos:start="693:97" pos:end="693:97">5</literal>

            <operator pos:start="695:13" pos:end="695:14">||</operator> <name pos:start="695:16" pos:end="695:99"><name pos:start="695:16" pos:end="695:18">ctx</name><operator pos:start="695:19" pos:end="695:20">-&gt;</operator><name pos:start="695:21" pos:end="695:33">encode_config</name><operator pos:start="695:34" pos:end="695:34">.</operator><name pos:start="695:35" pos:end="695:51">encodeCodecConfig</name><operator pos:start="695:52" pos:end="695:52">.</operator><name pos:start="695:53" pos:end="695:62">h264Config</name><operator pos:start="695:63" pos:end="695:63">.</operator><name pos:start="695:64" pos:end="695:80">h264VUIParameters</name><operator pos:start="695:81" pos:end="695:81">.</operator><name pos:start="695:82" pos:end="695:99">videoFullRangeFlag</name></name> <operator pos:start="695:101" pos:end="695:102">!=</operator> <literal type="number" pos:start="695:104" pos:end="695:104">0</literal><operator pos:start="695:105" pos:end="695:105">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="699:9" pos:end="699:70"><expr pos:start="699:9" pos:end="699:69"><name pos:start="699:9" pos:end="699:65"><name pos:start="699:9" pos:end="699:11">ctx</name><operator pos:start="699:12" pos:end="699:13">-&gt;</operator><name pos:start="699:14" pos:end="699:26">encode_config</name><operator pos:start="699:27" pos:end="699:27">.</operator><name pos:start="699:28" pos:end="699:44">encodeCodecConfig</name><operator pos:start="699:45" pos:end="699:45">.</operator><name pos:start="699:46" pos:end="699:55">h264Config</name><operator pos:start="699:56" pos:end="699:56">.</operator><name pos:start="699:57" pos:end="699:65">sliceMode</name></name> <operator pos:start="699:67" pos:end="699:67">=</operator> <literal type="number" pos:start="699:69" pos:end="699:69">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="701:9" pos:end="701:74"><expr pos:start="701:9" pos:end="701:73"><name pos:start="701:9" pos:end="701:69"><name pos:start="701:9" pos:end="701:11">ctx</name><operator pos:start="701:12" pos:end="701:13">-&gt;</operator><name pos:start="701:14" pos:end="701:26">encode_config</name><operator pos:start="701:27" pos:end="701:27">.</operator><name pos:start="701:28" pos:end="701:44">encodeCodecConfig</name><operator pos:start="701:45" pos:end="701:45">.</operator><name pos:start="701:46" pos:end="701:55">h264Config</name><operator pos:start="701:56" pos:end="701:56">.</operator><name pos:start="701:57" pos:end="701:69">sliceModeData</name></name> <operator pos:start="701:71" pos:end="701:71">=</operator> <literal type="number" pos:start="701:73" pos:end="701:73">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="705:9" pos:end="705:125"><expr pos:start="705:9" pos:end="705:124"><name pos:start="705:9" pos:end="705:69"><name pos:start="705:9" pos:end="705:11">ctx</name><operator pos:start="705:12" pos:end="705:13">-&gt;</operator><name pos:start="705:14" pos:end="705:26">encode_config</name><operator pos:start="705:27" pos:end="705:27">.</operator><name pos:start="705:28" pos:end="705:44">encodeCodecConfig</name><operator pos:start="705:45" pos:end="705:45">.</operator><name pos:start="705:46" pos:end="705:55">h264Config</name><operator pos:start="705:56" pos:end="705:56">.</operator><name pos:start="705:57" pos:end="705:69">disableSPSPPS</name></name> <operator pos:start="705:71" pos:end="705:71">=</operator> <ternary pos:start="705:73" pos:end="705:124"><condition pos:start="705:73" pos:end="705:118"><expr pos:start="705:73" pos:end="705:116"><operator pos:start="705:73" pos:end="705:73">(</operator><name pos:start="705:74" pos:end="705:85"><name pos:start="705:74" pos:end="705:78">avctx</name><operator pos:start="705:79" pos:end="705:80">-&gt;</operator><name pos:start="705:81" pos:end="705:85">flags</name></name> <operator pos:start="705:87" pos:end="705:87">&amp;</operator> <name pos:start="705:89" pos:end="705:115">AV_CODEC_FLAG_GLOBAL_HEADER</name><operator pos:start="705:116" pos:end="705:116">)</operator></expr> ?</condition><then pos:start="705:120" pos:end="705:120"> <expr pos:start="705:120" pos:end="705:120"><literal type="number" pos:start="705:120" pos:end="705:120">1</literal></expr> </then><else pos:start="705:122" pos:end="705:124">: <expr pos:start="705:124" pos:end="705:124"><literal type="number" pos:start="705:124" pos:end="705:124">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="707:9" pos:end="707:124"><expr pos:start="707:9" pos:end="707:123"><name pos:start="707:9" pos:end="707:68"><name pos:start="707:9" pos:end="707:11">ctx</name><operator pos:start="707:12" pos:end="707:13">-&gt;</operator><name pos:start="707:14" pos:end="707:26">encode_config</name><operator pos:start="707:27" pos:end="707:27">.</operator><name pos:start="707:28" pos:end="707:44">encodeCodecConfig</name><operator pos:start="707:45" pos:end="707:45">.</operator><name pos:start="707:46" pos:end="707:55">h264Config</name><operator pos:start="707:56" pos:end="707:56">.</operator><name pos:start="707:57" pos:end="707:68">repeatSPSPPS</name></name> <operator pos:start="707:70" pos:end="707:70">=</operator> <ternary pos:start="707:72" pos:end="707:123"><condition pos:start="707:72" pos:end="707:117"><expr pos:start="707:72" pos:end="707:115"><operator pos:start="707:72" pos:end="707:72">(</operator><name pos:start="707:73" pos:end="707:84"><name pos:start="707:73" pos:end="707:77">avctx</name><operator pos:start="707:78" pos:end="707:79">-&gt;</operator><name pos:start="707:80" pos:end="707:84">flags</name></name> <operator pos:start="707:86" pos:end="707:86">&amp;</operator> <name pos:start="707:88" pos:end="707:114">AV_CODEC_FLAG_GLOBAL_HEADER</name><operator pos:start="707:115" pos:end="707:115">)</operator></expr> ?</condition><then pos:start="707:119" pos:end="707:119"> <expr pos:start="707:119" pos:end="707:119"><literal type="number" pos:start="707:119" pos:end="707:119">0</literal></expr> </then><else pos:start="707:121" pos:end="707:123">: <expr pos:start="707:123" pos:end="707:123"><literal type="number" pos:start="707:123" pos:end="707:123">1</literal></expr></else></ternary></expr>;</expr_stmt>



        <expr_stmt pos:start="711:9" pos:end="711:70"><expr pos:start="711:9" pos:end="711:69"><name pos:start="711:9" pos:end="711:65"><name pos:start="711:9" pos:end="711:11">ctx</name><operator pos:start="711:12" pos:end="711:13">-&gt;</operator><name pos:start="711:14" pos:end="711:26">encode_config</name><operator pos:start="711:27" pos:end="711:27">.</operator><name pos:start="711:28" pos:end="711:44">encodeCodecConfig</name><operator pos:start="711:45" pos:end="711:45">.</operator><name pos:start="711:46" pos:end="711:55">h264Config</name><operator pos:start="711:56" pos:end="711:56">.</operator><name pos:start="711:57" pos:end="711:65">outputAUD</name></name> <operator pos:start="711:67" pos:end="711:67">=</operator> <literal type="number" pos:start="711:69" pos:end="711:69">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="715:9" pos:end="791:9"><if pos:start="715:9" pos:end="755:9">if <condition pos:start="715:12" pos:end="715:39">(<expr pos:start="715:13" pos:end="715:38"><operator pos:start="715:13" pos:end="715:13">!</operator><name pos:start="715:14" pos:end="715:25"><name pos:start="715:14" pos:end="715:16">ctx</name><operator pos:start="715:17" pos:end="715:18">-&gt;</operator><name pos:start="715:19" pos:end="715:25">profile</name></name> <operator pos:start="715:27" pos:end="715:28">&amp;&amp;</operator> <operator pos:start="715:30" pos:end="715:30">!</operator><name pos:start="715:31" pos:end="715:38">lossless</name></expr>)</condition> <block pos:start="715:41" pos:end="755:9">{<block_content pos:start="717:13" pos:end="753:13">

            <switch pos:start="717:13" pos:end="753:13">switch <condition pos:start="717:20" pos:end="717:35">(<expr pos:start="717:21" pos:end="717:34"><name pos:start="717:21" pos:end="717:34"><name pos:start="717:21" pos:end="717:25">avctx</name><operator pos:start="717:26" pos:end="717:27">-&gt;</operator><name pos:start="717:28" pos:end="717:34">profile</name></name></expr>)</condition> <block pos:start="717:37" pos:end="753:13">{<block_content pos:start="719:13" pos:end="751:22">

            <case pos:start="719:13" pos:end="719:53">case <expr pos:start="719:18" pos:end="719:52"><name pos:start="719:18" pos:end="719:52">FF_PROFILE_H264_HIGH_444_PREDICTIVE</name></expr>:</case>

                <expr_stmt pos:start="721:17" pos:end="721:83"><expr pos:start="721:17" pos:end="721:82"><name pos:start="721:17" pos:end="721:46"><name pos:start="721:17" pos:end="721:19">ctx</name><operator pos:start="721:20" pos:end="721:21">-&gt;</operator><name pos:start="721:22" pos:end="721:34">encode_config</name><operator pos:start="721:35" pos:end="721:35">.</operator><name pos:start="721:36" pos:end="721:46">profileGUID</name></name> <operator pos:start="721:48" pos:end="721:48">=</operator> <name pos:start="721:50" pos:end="721:82">NV_ENC_H264_PROFILE_HIGH_444_GUID</name></expr>;</expr_stmt>

                <break pos:start="723:17" pos:end="723:22">break;</break>

            <case pos:start="725:13" pos:end="725:42">case <expr pos:start="725:18" pos:end="725:41"><name pos:start="725:18" pos:end="725:41">FF_PROFILE_H264_BASELINE</name></expr>:</case>

                <expr_stmt pos:start="727:17" pos:end="727:83"><expr pos:start="727:17" pos:end="727:82"><name pos:start="727:17" pos:end="727:46"><name pos:start="727:17" pos:end="727:19">ctx</name><operator pos:start="727:20" pos:end="727:21">-&gt;</operator><name pos:start="727:22" pos:end="727:34">encode_config</name><operator pos:start="727:35" pos:end="727:35">.</operator><name pos:start="727:36" pos:end="727:46">profileGUID</name></name> <operator pos:start="727:48" pos:end="727:48">=</operator> <name pos:start="727:50" pos:end="727:82">NV_ENC_H264_PROFILE_BASELINE_GUID</name></expr>;</expr_stmt>

                <break pos:start="729:17" pos:end="729:22">break;</break>

            <case pos:start="731:13" pos:end="731:38">case <expr pos:start="731:18" pos:end="731:37"><name pos:start="731:18" pos:end="731:37">FF_PROFILE_H264_MAIN</name></expr>:</case>

                <expr_stmt pos:start="733:17" pos:end="733:79"><expr pos:start="733:17" pos:end="733:78"><name pos:start="733:17" pos:end="733:46"><name pos:start="733:17" pos:end="733:19">ctx</name><operator pos:start="733:20" pos:end="733:21">-&gt;</operator><name pos:start="733:22" pos:end="733:34">encode_config</name><operator pos:start="733:35" pos:end="733:35">.</operator><name pos:start="733:36" pos:end="733:46">profileGUID</name></name> <operator pos:start="733:48" pos:end="733:48">=</operator> <name pos:start="733:50" pos:end="733:78">NV_ENC_H264_PROFILE_MAIN_GUID</name></expr>;</expr_stmt>

                <break pos:start="735:17" pos:end="735:22">break;</break>

            <case pos:start="737:13" pos:end="737:38">case <expr pos:start="737:18" pos:end="737:37"><name pos:start="737:18" pos:end="737:37">FF_PROFILE_H264_HIGH</name></expr>:</case>

            <case pos:start="739:13" pos:end="739:36">case <expr pos:start="739:18" pos:end="739:35"><name pos:start="739:18" pos:end="739:35">FF_PROFILE_UNKNOWN</name></expr>:</case>

                <expr_stmt pos:start="741:17" pos:end="741:79"><expr pos:start="741:17" pos:end="741:78"><name pos:start="741:17" pos:end="741:46"><name pos:start="741:17" pos:end="741:19">ctx</name><operator pos:start="741:20" pos:end="741:21">-&gt;</operator><name pos:start="741:22" pos:end="741:34">encode_config</name><operator pos:start="741:35" pos:end="741:35">.</operator><name pos:start="741:36" pos:end="741:46">profileGUID</name></name> <operator pos:start="741:48" pos:end="741:48">=</operator> <name pos:start="741:50" pos:end="741:78">NV_ENC_H264_PROFILE_HIGH_GUID</name></expr>;</expr_stmt>

                <break pos:start="743:17" pos:end="743:22">break;</break>

            <default pos:start="745:13" pos:end="745:20">default:</default>

                <expr_stmt pos:start="747:17" pos:end="747:103"><expr pos:start="747:17" pos:end="747:102"><call pos:start="747:17" pos:end="747:102"><name pos:start="747:17" pos:end="747:22">av_log</name><argument_list pos:start="747:23" pos:end="747:102">(<argument pos:start="747:24" pos:end="747:28"><expr pos:start="747:24" pos:end="747:28"><name pos:start="747:24" pos:end="747:28">avctx</name></expr></argument>, <argument pos:start="747:31" pos:end="747:44"><expr pos:start="747:31" pos:end="747:44"><name pos:start="747:31" pos:end="747:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="747:47" pos:end="747:101"><expr pos:start="747:47" pos:end="747:101"><literal type="string" pos:start="747:47" pos:end="747:101">"Unsupported profile requested, falling back to high\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="749:17" pos:end="749:79"><expr pos:start="749:17" pos:end="749:78"><name pos:start="749:17" pos:end="749:46"><name pos:start="749:17" pos:end="749:19">ctx</name><operator pos:start="749:20" pos:end="749:21">-&gt;</operator><name pos:start="749:22" pos:end="749:34">encode_config</name><operator pos:start="749:35" pos:end="749:35">.</operator><name pos:start="749:36" pos:end="749:46">profileGUID</name></name> <operator pos:start="749:48" pos:end="749:48">=</operator> <name pos:start="749:50" pos:end="749:78">NV_ENC_H264_PROFILE_HIGH_GUID</name></expr>;</expr_stmt>

                <break pos:start="751:17" pos:end="751:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <if type="elseif" pos:start="755:11" pos:end="791:9">else if<condition pos:start="755:18" pos:end="755:28">(<expr pos:start="755:19" pos:end="755:27"><operator pos:start="755:19" pos:end="755:19">!</operator><name pos:start="755:20" pos:end="755:27">lossless</name></expr>)</condition> <block pos:start="755:30" pos:end="791:9">{<block_content pos:start="757:13" pos:end="789:13">

            <if_stmt pos:start="757:13" pos:end="789:13"><if pos:start="757:13" pos:end="763:13">if <condition pos:start="757:16" pos:end="757:46">(<expr pos:start="757:17" pos:end="757:45"><operator pos:start="757:17" pos:end="757:17">!</operator><call pos:start="757:18" pos:end="757:45"><name pos:start="757:18" pos:end="757:23">strcmp</name><argument_list pos:start="757:24" pos:end="757:45">(<argument pos:start="757:25" pos:end="757:36"><expr pos:start="757:25" pos:end="757:36"><name pos:start="757:25" pos:end="757:36"><name pos:start="757:25" pos:end="757:27">ctx</name><operator pos:start="757:28" pos:end="757:29">-&gt;</operator><name pos:start="757:30" pos:end="757:36">profile</name></name></expr></argument>, <argument pos:start="757:39" pos:end="757:44"><expr pos:start="757:39" pos:end="757:44"><literal type="string" pos:start="757:39" pos:end="757:44">"high"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="757:48" pos:end="763:13">{<block_content pos:start="759:17" pos:end="761:54">

                <expr_stmt pos:start="759:17" pos:end="759:79"><expr pos:start="759:17" pos:end="759:78"><name pos:start="759:17" pos:end="759:46"><name pos:start="759:17" pos:end="759:19">ctx</name><operator pos:start="759:20" pos:end="759:21">-&gt;</operator><name pos:start="759:22" pos:end="759:34">encode_config</name><operator pos:start="759:35" pos:end="759:35">.</operator><name pos:start="759:36" pos:end="759:46">profileGUID</name></name> <operator pos:start="759:48" pos:end="759:48">=</operator> <name pos:start="759:50" pos:end="759:78">NV_ENC_H264_PROFILE_HIGH_GUID</name></expr>;</expr_stmt>

                <expr_stmt pos:start="761:17" pos:end="761:54"><expr pos:start="761:17" pos:end="761:53"><name pos:start="761:17" pos:end="761:30"><name pos:start="761:17" pos:end="761:21">avctx</name><operator pos:start="761:22" pos:end="761:23">-&gt;</operator><name pos:start="761:24" pos:end="761:30">profile</name></name> <operator pos:start="761:32" pos:end="761:32">=</operator> <name pos:start="761:34" pos:end="761:53">FF_PROFILE_H264_HIGH</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="763:15" pos:end="769:13">else if <condition pos:start="763:23" pos:end="763:53">(<expr pos:start="763:24" pos:end="763:52"><operator pos:start="763:24" pos:end="763:24">!</operator><call pos:start="763:25" pos:end="763:52"><name pos:start="763:25" pos:end="763:30">strcmp</name><argument_list pos:start="763:31" pos:end="763:52">(<argument pos:start="763:32" pos:end="763:43"><expr pos:start="763:32" pos:end="763:43"><name pos:start="763:32" pos:end="763:43"><name pos:start="763:32" pos:end="763:34">ctx</name><operator pos:start="763:35" pos:end="763:36">-&gt;</operator><name pos:start="763:37" pos:end="763:43">profile</name></name></expr></argument>, <argument pos:start="763:46" pos:end="763:51"><expr pos:start="763:46" pos:end="763:51"><literal type="string" pos:start="763:46" pos:end="763:51">"main"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="763:55" pos:end="769:13">{<block_content pos:start="765:17" pos:end="767:54">

                <expr_stmt pos:start="765:17" pos:end="765:79"><expr pos:start="765:17" pos:end="765:78"><name pos:start="765:17" pos:end="765:46"><name pos:start="765:17" pos:end="765:19">ctx</name><operator pos:start="765:20" pos:end="765:21">-&gt;</operator><name pos:start="765:22" pos:end="765:34">encode_config</name><operator pos:start="765:35" pos:end="765:35">.</operator><name pos:start="765:36" pos:end="765:46">profileGUID</name></name> <operator pos:start="765:48" pos:end="765:48">=</operator> <name pos:start="765:50" pos:end="765:78">NV_ENC_H264_PROFILE_MAIN_GUID</name></expr>;</expr_stmt>

                <expr_stmt pos:start="767:17" pos:end="767:54"><expr pos:start="767:17" pos:end="767:53"><name pos:start="767:17" pos:end="767:30"><name pos:start="767:17" pos:end="767:21">avctx</name><operator pos:start="767:22" pos:end="767:23">-&gt;</operator><name pos:start="767:24" pos:end="767:30">profile</name></name> <operator pos:start="767:32" pos:end="767:32">=</operator> <name pos:start="767:34" pos:end="767:53">FF_PROFILE_H264_MAIN</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="769:15" pos:end="775:13">else if <condition pos:start="769:23" pos:end="769:57">(<expr pos:start="769:24" pos:end="769:56"><operator pos:start="769:24" pos:end="769:24">!</operator><call pos:start="769:25" pos:end="769:56"><name pos:start="769:25" pos:end="769:30">strcmp</name><argument_list pos:start="769:31" pos:end="769:56">(<argument pos:start="769:32" pos:end="769:43"><expr pos:start="769:32" pos:end="769:43"><name pos:start="769:32" pos:end="769:43"><name pos:start="769:32" pos:end="769:34">ctx</name><operator pos:start="769:35" pos:end="769:36">-&gt;</operator><name pos:start="769:37" pos:end="769:43">profile</name></name></expr></argument>, <argument pos:start="769:46" pos:end="769:55"><expr pos:start="769:46" pos:end="769:55"><literal type="string" pos:start="769:46" pos:end="769:55">"baseline"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="769:59" pos:end="775:13">{<block_content pos:start="771:17" pos:end="773:58">

                <expr_stmt pos:start="771:17" pos:end="771:83"><expr pos:start="771:17" pos:end="771:82"><name pos:start="771:17" pos:end="771:46"><name pos:start="771:17" pos:end="771:19">ctx</name><operator pos:start="771:20" pos:end="771:21">-&gt;</operator><name pos:start="771:22" pos:end="771:34">encode_config</name><operator pos:start="771:35" pos:end="771:35">.</operator><name pos:start="771:36" pos:end="771:46">profileGUID</name></name> <operator pos:start="771:48" pos:end="771:48">=</operator> <name pos:start="771:50" pos:end="771:82">NV_ENC_H264_PROFILE_BASELINE_GUID</name></expr>;</expr_stmt>

                <expr_stmt pos:start="773:17" pos:end="773:58"><expr pos:start="773:17" pos:end="773:57"><name pos:start="773:17" pos:end="773:30"><name pos:start="773:17" pos:end="773:21">avctx</name><operator pos:start="773:22" pos:end="773:23">-&gt;</operator><name pos:start="773:24" pos:end="773:30">profile</name></name> <operator pos:start="773:32" pos:end="773:32">=</operator> <name pos:start="773:34" pos:end="773:57">FF_PROFILE_H264_BASELINE</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="775:15" pos:end="781:13">else if <condition pos:start="775:23" pos:end="775:57">(<expr pos:start="775:24" pos:end="775:56"><operator pos:start="775:24" pos:end="775:24">!</operator><call pos:start="775:25" pos:end="775:56"><name pos:start="775:25" pos:end="775:30">strcmp</name><argument_list pos:start="775:31" pos:end="775:56">(<argument pos:start="775:32" pos:end="775:43"><expr pos:start="775:32" pos:end="775:43"><name pos:start="775:32" pos:end="775:43"><name pos:start="775:32" pos:end="775:34">ctx</name><operator pos:start="775:35" pos:end="775:36">-&gt;</operator><name pos:start="775:37" pos:end="775:43">profile</name></name></expr></argument>, <argument pos:start="775:46" pos:end="775:55"><expr pos:start="775:46" pos:end="775:55"><literal type="string" pos:start="775:46" pos:end="775:55">"high444p"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="775:59" pos:end="781:13">{<block_content pos:start="777:17" pos:end="779:69">

                <expr_stmt pos:start="777:17" pos:end="777:83"><expr pos:start="777:17" pos:end="777:82"><name pos:start="777:17" pos:end="777:46"><name pos:start="777:17" pos:end="777:19">ctx</name><operator pos:start="777:20" pos:end="777:21">-&gt;</operator><name pos:start="777:22" pos:end="777:34">encode_config</name><operator pos:start="777:35" pos:end="777:35">.</operator><name pos:start="777:36" pos:end="777:46">profileGUID</name></name> <operator pos:start="777:48" pos:end="777:48">=</operator> <name pos:start="777:50" pos:end="777:82">NV_ENC_H264_PROFILE_HIGH_444_GUID</name></expr>;</expr_stmt>

                <expr_stmt pos:start="779:17" pos:end="779:69"><expr pos:start="779:17" pos:end="779:68"><name pos:start="779:17" pos:end="779:30"><name pos:start="779:17" pos:end="779:21">avctx</name><operator pos:start="779:22" pos:end="779:23">-&gt;</operator><name pos:start="779:24" pos:end="779:30">profile</name></name> <operator pos:start="779:32" pos:end="779:32">=</operator> <name pos:start="779:34" pos:end="779:68">FF_PROFILE_H264_HIGH_444_PREDICTIVE</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="781:15" pos:end="789:13">else <block pos:start="781:20" pos:end="789:13">{<block_content pos:start="783:17" pos:end="787:27">

                <expr_stmt pos:start="783:17" pos:end="783:131"><expr pos:start="783:17" pos:end="783:130"><call pos:start="783:17" pos:end="783:130"><name pos:start="783:17" pos:end="783:22">av_log</name><argument_list pos:start="783:23" pos:end="783:130">(<argument pos:start="783:24" pos:end="783:28"><expr pos:start="783:24" pos:end="783:28"><name pos:start="783:24" pos:end="783:28">avctx</name></expr></argument>, <argument pos:start="783:31" pos:end="783:42"><expr pos:start="783:31" pos:end="783:42"><name pos:start="783:31" pos:end="783:42">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="783:45" pos:end="783:115"><expr pos:start="783:45" pos:end="783:115"><literal type="string" pos:start="783:45" pos:end="783:115">"Profile \"%s\" is unknown! Supported profiles: high, main, baseline\n"</literal></expr></argument>, <argument pos:start="783:118" pos:end="783:129"><expr pos:start="783:118" pos:end="783:129"><name pos:start="783:118" pos:end="783:129"><name pos:start="783:118" pos:end="783:120">ctx</name><operator pos:start="783:121" pos:end="783:122">-&gt;</operator><name pos:start="783:123" pos:end="783:129">profile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="785:17" pos:end="785:38"><expr pos:start="785:17" pos:end="785:37"><name pos:start="785:17" pos:end="785:19">res</name> <operator pos:start="785:21" pos:end="785:21">=</operator> <call pos:start="785:23" pos:end="785:37"><name pos:start="785:23" pos:end="785:29">AVERROR</name><argument_list pos:start="785:30" pos:end="785:37">(<argument pos:start="785:31" pos:end="785:36"><expr pos:start="785:31" pos:end="785:36"><name pos:start="785:31" pos:end="785:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="787:17" pos:end="787:27">goto <name pos:start="787:22" pos:end="787:26">error</name>;</goto>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="795:9" pos:end="795:75">// force setting profile as high444p if input is AV_PIX_FMT_YUV444P</comment>

        <if_stmt pos:start="797:9" pos:end="803:9"><if pos:start="797:9" pos:end="803:9">if <condition pos:start="797:12" pos:end="797:49">(<expr pos:start="797:13" pos:end="797:48"><name pos:start="797:13" pos:end="797:26"><name pos:start="797:13" pos:end="797:17">avctx</name><operator pos:start="797:18" pos:end="797:19">-&gt;</operator><name pos:start="797:20" pos:end="797:26">pix_fmt</name></name> <operator pos:start="797:28" pos:end="797:29">==</operator> <name pos:start="797:31" pos:end="797:48">AV_PIX_FMT_YUV444P</name></expr>)</condition> <block pos:start="797:51" pos:end="803:9">{<block_content pos:start="799:13" pos:end="801:65">

            <expr_stmt pos:start="799:13" pos:end="799:79"><expr pos:start="799:13" pos:end="799:78"><name pos:start="799:13" pos:end="799:42"><name pos:start="799:13" pos:end="799:15">ctx</name><operator pos:start="799:16" pos:end="799:17">-&gt;</operator><name pos:start="799:18" pos:end="799:30">encode_config</name><operator pos:start="799:31" pos:end="799:31">.</operator><name pos:start="799:32" pos:end="799:42">profileGUID</name></name> <operator pos:start="799:44" pos:end="799:44">=</operator> <name pos:start="799:46" pos:end="799:78">NV_ENC_H264_PROFILE_HIGH_444_GUID</name></expr>;</expr_stmt>

            <expr_stmt pos:start="801:13" pos:end="801:65"><expr pos:start="801:13" pos:end="801:64"><name pos:start="801:13" pos:end="801:26"><name pos:start="801:13" pos:end="801:17">avctx</name><operator pos:start="801:18" pos:end="801:19">-&gt;</operator><name pos:start="801:20" pos:end="801:26">profile</name></name> <operator pos:start="801:28" pos:end="801:28">=</operator> <name pos:start="801:30" pos:end="801:64">FF_PROFILE_H264_HIGH_444_PREDICTIVE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="807:9" pos:end="807:136"><expr pos:start="807:9" pos:end="807:135"><name pos:start="807:9" pos:end="807:71"><name pos:start="807:9" pos:end="807:11">ctx</name><operator pos:start="807:12" pos:end="807:13">-&gt;</operator><name pos:start="807:14" pos:end="807:26">encode_config</name><operator pos:start="807:27" pos:end="807:27">.</operator><name pos:start="807:28" pos:end="807:44">encodeCodecConfig</name><operator pos:start="807:45" pos:end="807:45">.</operator><name pos:start="807:46" pos:end="807:55">h264Config</name><operator pos:start="807:56" pos:end="807:56">.</operator><name pos:start="807:57" pos:end="807:71">chromaFormatIDC</name></name> <operator pos:start="807:73" pos:end="807:73">=</operator> <ternary pos:start="807:75" pos:end="807:135"><condition pos:start="807:75" pos:end="807:129"><expr pos:start="807:75" pos:end="807:127"><name pos:start="807:75" pos:end="807:88"><name pos:start="807:75" pos:end="807:79">avctx</name><operator pos:start="807:80" pos:end="807:81">-&gt;</operator><name pos:start="807:82" pos:end="807:88">profile</name></name> <operator pos:start="807:90" pos:end="807:91">==</operator> <name pos:start="807:93" pos:end="807:127">FF_PROFILE_H264_HIGH_444_PREDICTIVE</name></expr> ?</condition><then pos:start="807:131" pos:end="807:131"> <expr pos:start="807:131" pos:end="807:131"><literal type="number" pos:start="807:131" pos:end="807:131">3</literal></expr> </then><else pos:start="807:133" pos:end="807:135">: <expr pos:start="807:135" pos:end="807:135"><literal type="number" pos:start="807:135" pos:end="807:135">1</literal></expr></else></ternary></expr>;</expr_stmt>



        <if_stmt pos:start="811:9" pos:end="829:9"><if pos:start="811:9" pos:end="825:9">if <condition pos:start="811:12" pos:end="811:23">(<expr pos:start="811:13" pos:end="811:22"><name pos:start="811:13" pos:end="811:22"><name pos:start="811:13" pos:end="811:15">ctx</name><operator pos:start="811:16" pos:end="811:17">-&gt;</operator><name pos:start="811:18" pos:end="811:22">level</name></name></expr>)</condition> <block pos:start="811:25" pos:end="825:9">{<block_content pos:start="813:13" pos:end="823:13">

            <expr_stmt pos:start="813:13" pos:end="813:140"><expr pos:start="813:13" pos:end="813:139"><name pos:start="813:13" pos:end="813:15">res</name> <operator pos:start="813:17" pos:end="813:17">=</operator> <call pos:start="813:19" pos:end="813:139"><name pos:start="813:19" pos:end="813:40">input_string_to_uint32</name><argument_list pos:start="813:41" pos:end="813:139">(<argument pos:start="813:42" pos:end="813:46"><expr pos:start="813:42" pos:end="813:46"><name pos:start="813:42" pos:end="813:46">avctx</name></expr></argument>, <argument pos:start="813:49" pos:end="813:70"><expr pos:start="813:49" pos:end="813:70"><name pos:start="813:49" pos:end="813:70">nvenc_h264_level_pairs</name></expr></argument>, <argument pos:start="813:73" pos:end="813:82"><expr pos:start="813:73" pos:end="813:82"><name pos:start="813:73" pos:end="813:82"><name pos:start="813:73" pos:end="813:75">ctx</name><operator pos:start="813:76" pos:end="813:77">-&gt;</operator><name pos:start="813:78" pos:end="813:82">level</name></name></expr></argument>, <argument pos:start="813:85" pos:end="813:138"><expr pos:start="813:85" pos:end="813:138"><operator pos:start="813:85" pos:end="813:85">&amp;</operator><name pos:start="813:86" pos:end="813:138"><name pos:start="813:86" pos:end="813:88">ctx</name><operator pos:start="813:89" pos:end="813:90">-&gt;</operator><name pos:start="813:91" pos:end="813:103">encode_config</name><operator pos:start="813:104" pos:end="813:104">.</operator><name pos:start="813:105" pos:end="813:121">encodeCodecConfig</name><operator pos:start="813:122" pos:end="813:122">.</operator><name pos:start="813:123" pos:end="813:132">h264Config</name><operator pos:start="813:133" pos:end="813:133">.</operator><name pos:start="813:134" pos:end="813:138">level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="817:13" pos:end="823:13"><if pos:start="817:13" pos:end="823:13">if <condition pos:start="817:16" pos:end="817:20">(<expr pos:start="817:17" pos:end="817:19"><name pos:start="817:17" pos:end="817:19">res</name></expr>)</condition> <block pos:start="817:22" pos:end="823:13">{<block_content pos:start="819:17" pos:end="821:27">

                <expr_stmt pos:start="819:17" pos:end="819:178"><expr pos:start="819:17" pos:end="819:177"><call pos:start="819:17" pos:end="819:177"><name pos:start="819:17" pos:end="819:22">av_log</name><argument_list pos:start="819:23" pos:end="819:177">(<argument pos:start="819:24" pos:end="819:28"><expr pos:start="819:24" pos:end="819:28"><name pos:start="819:24" pos:end="819:28">avctx</name></expr></argument>, <argument pos:start="819:31" pos:end="819:42"><expr pos:start="819:31" pos:end="819:42"><name pos:start="819:31" pos:end="819:42">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="819:45" pos:end="819:164"><expr pos:start="819:45" pos:end="819:164"><literal type="string" pos:start="819:45" pos:end="819:164">"Level \"%s\" is unknown! Supported levels: auto, 1, 1b, 1.1, 1.2, 1.3, 2, 2.1, 2.2, 3, 3.1, 3.2, 4, 4.1, 4.2, 5, 5.1\n"</literal></expr></argument>, <argument pos:start="819:167" pos:end="819:176"><expr pos:start="819:167" pos:end="819:176"><name pos:start="819:167" pos:end="819:176"><name pos:start="819:167" pos:end="819:169">ctx</name><operator pos:start="819:170" pos:end="819:171">-&gt;</operator><name pos:start="819:172" pos:end="819:176">level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="821:17" pos:end="821:27">goto <name pos:start="821:22" pos:end="821:26">error</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="825:11" pos:end="829:9">else <block pos:start="825:16" pos:end="829:9">{<block_content pos:start="827:13" pos:end="827:92">

            <expr_stmt pos:start="827:13" pos:end="827:92"><expr pos:start="827:13" pos:end="827:91"><name pos:start="827:13" pos:end="827:65"><name pos:start="827:13" pos:end="827:15">ctx</name><operator pos:start="827:16" pos:end="827:17">-&gt;</operator><name pos:start="827:18" pos:end="827:30">encode_config</name><operator pos:start="827:31" pos:end="827:31">.</operator><name pos:start="827:32" pos:end="827:48">encodeCodecConfig</name><operator pos:start="827:49" pos:end="827:49">.</operator><name pos:start="827:50" pos:end="827:59">h264Config</name><operator pos:start="827:60" pos:end="827:60">.</operator><name pos:start="827:61" pos:end="827:65">level</name></name> <operator pos:start="827:67" pos:end="827:67">=</operator> <name pos:start="827:69" pos:end="827:91">NV_ENC_LEVEL_AUTOSELECT</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <break pos:start="833:9" pos:end="833:14">break;</break>

    <case pos:start="835:5" pos:end="835:26">case <expr pos:start="835:10" pos:end="835:25"><name pos:start="835:10" pos:end="835:25">AV_CODEC_ID_H265</name></expr>:</case>

        <expr_stmt pos:start="837:9" pos:end="837:107"><expr pos:start="837:9" pos:end="837:106"><name pos:start="837:9" pos:end="837:86"><name pos:start="837:9" pos:end="837:11">ctx</name><operator pos:start="837:12" pos:end="837:13">-&gt;</operator><name pos:start="837:14" pos:end="837:26">encode_config</name><operator pos:start="837:27" pos:end="837:27">.</operator><name pos:start="837:28" pos:end="837:44">encodeCodecConfig</name><operator pos:start="837:45" pos:end="837:45">.</operator><name pos:start="837:46" pos:end="837:55">hevcConfig</name><operator pos:start="837:56" pos:end="837:56">.</operator><name pos:start="837:57" pos:end="837:73">hevcVUIParameters</name><operator pos:start="837:74" pos:end="837:74">.</operator><name pos:start="837:75" pos:end="837:86">colourMatrix</name></name> <operator pos:start="837:88" pos:end="837:88">=</operator> <name pos:start="837:90" pos:end="837:106"><name pos:start="837:90" pos:end="837:94">avctx</name><operator pos:start="837:95" pos:end="837:96">-&gt;</operator><name pos:start="837:97" pos:end="837:106">colorspace</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="839:9" pos:end="839:115"><expr pos:start="839:9" pos:end="839:114"><name pos:start="839:9" pos:end="839:89"><name pos:start="839:9" pos:end="839:11">ctx</name><operator pos:start="839:12" pos:end="839:13">-&gt;</operator><name pos:start="839:14" pos:end="839:26">encode_config</name><operator pos:start="839:27" pos:end="839:27">.</operator><name pos:start="839:28" pos:end="839:44">encodeCodecConfig</name><operator pos:start="839:45" pos:end="839:45">.</operator><name pos:start="839:46" pos:end="839:55">hevcConfig</name><operator pos:start="839:56" pos:end="839:56">.</operator><name pos:start="839:57" pos:end="839:73">hevcVUIParameters</name><operator pos:start="839:74" pos:end="839:74">.</operator><name pos:start="839:75" pos:end="839:89">colourPrimaries</name></name> <operator pos:start="839:91" pos:end="839:91">=</operator> <name pos:start="839:93" pos:end="839:114"><name pos:start="839:93" pos:end="839:97">avctx</name><operator pos:start="839:98" pos:end="839:99">-&gt;</operator><name pos:start="839:100" pos:end="839:114">color_primaries</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="841:9" pos:end="841:117"><expr pos:start="841:9" pos:end="841:116"><name pos:start="841:9" pos:end="841:97"><name pos:start="841:9" pos:end="841:11">ctx</name><operator pos:start="841:12" pos:end="841:13">-&gt;</operator><name pos:start="841:14" pos:end="841:26">encode_config</name><operator pos:start="841:27" pos:end="841:27">.</operator><name pos:start="841:28" pos:end="841:44">encodeCodecConfig</name><operator pos:start="841:45" pos:end="841:45">.</operator><name pos:start="841:46" pos:end="841:55">hevcConfig</name><operator pos:start="841:56" pos:end="841:56">.</operator><name pos:start="841:57" pos:end="841:73">hevcVUIParameters</name><operator pos:start="841:74" pos:end="841:74">.</operator><name pos:start="841:75" pos:end="841:97">transferCharacteristics</name></name> <operator pos:start="841:99" pos:end="841:99">=</operator> <name pos:start="841:101" pos:end="841:116"><name pos:start="841:101" pos:end="841:105">avctx</name><operator pos:start="841:106" pos:end="841:107">-&gt;</operator><name pos:start="841:108" pos:end="841:116">color_trc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="843:9" pos:end="845:136"><expr pos:start="843:9" pos:end="845:135"><name pos:start="843:9" pos:end="843:92"><name pos:start="843:9" pos:end="843:11">ctx</name><operator pos:start="843:12" pos:end="843:13">-&gt;</operator><name pos:start="843:14" pos:end="843:26">encode_config</name><operator pos:start="843:27" pos:end="843:27">.</operator><name pos:start="843:28" pos:end="843:44">encodeCodecConfig</name><operator pos:start="843:45" pos:end="843:45">.</operator><name pos:start="843:46" pos:end="843:55">hevcConfig</name><operator pos:start="843:56" pos:end="843:56">.</operator><name pos:start="843:57" pos:end="843:73">hevcVUIParameters</name><operator pos:start="843:74" pos:end="843:74">.</operator><name pos:start="843:75" pos:end="843:92">videoFullRangeFlag</name></name> <operator pos:start="843:94" pos:end="843:94">=</operator> <operator pos:start="843:96" pos:end="843:96">(</operator><name pos:start="843:97" pos:end="843:114"><name pos:start="843:97" pos:end="843:101">avctx</name><operator pos:start="843:102" pos:end="843:103">-&gt;</operator><name pos:start="843:104" pos:end="843:114">color_range</name></name> <operator pos:start="843:116" pos:end="843:117">==</operator> <name pos:start="843:119" pos:end="843:134">AVCOL_RANGE_JPEG</name>

            <operator pos:start="845:13" pos:end="845:14">||</operator> <name pos:start="845:16" pos:end="845:29"><name pos:start="845:16" pos:end="845:20">avctx</name><operator pos:start="845:21" pos:end="845:22">-&gt;</operator><name pos:start="845:23" pos:end="845:29">pix_fmt</name></name> <operator pos:start="845:31" pos:end="845:32">==</operator> <name pos:start="845:34" pos:end="845:52">AV_PIX_FMT_YUVJ420P</name> <operator pos:start="845:54" pos:end="845:55">||</operator> <name pos:start="845:57" pos:end="845:70"><name pos:start="845:57" pos:end="845:61">avctx</name><operator pos:start="845:62" pos:end="845:63">-&gt;</operator><name pos:start="845:64" pos:end="845:70">pix_fmt</name></name> <operator pos:start="845:72" pos:end="845:73">==</operator> <name pos:start="845:75" pos:end="845:93">AV_PIX_FMT_YUVJ422P</name> <operator pos:start="845:95" pos:end="845:96">||</operator> <name pos:start="845:98" pos:end="845:111"><name pos:start="845:98" pos:end="845:102">avctx</name><operator pos:start="845:103" pos:end="845:104">-&gt;</operator><name pos:start="845:105" pos:end="845:111">pix_fmt</name></name> <operator pos:start="845:113" pos:end="845:114">==</operator> <name pos:start="845:116" pos:end="845:134">AV_PIX_FMT_YUVJ444P</name><operator pos:start="845:135" pos:end="845:135">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="849:9" pos:end="851:93"><expr pos:start="849:9" pos:end="851:92"><name pos:start="849:9" pos:end="849:102"><name pos:start="849:9" pos:end="849:11">ctx</name><operator pos:start="849:12" pos:end="849:13">-&gt;</operator><name pos:start="849:14" pos:end="849:26">encode_config</name><operator pos:start="849:27" pos:end="849:27">.</operator><name pos:start="849:28" pos:end="849:44">encodeCodecConfig</name><operator pos:start="849:45" pos:end="849:45">.</operator><name pos:start="849:46" pos:end="849:55">hevcConfig</name><operator pos:start="849:56" pos:end="849:56">.</operator><name pos:start="849:57" pos:end="849:73">hevcVUIParameters</name><operator pos:start="849:74" pos:end="849:74">.</operator><name pos:start="849:75" pos:end="849:102">colourDescriptionPresentFlag</name></name> <operator pos:start="849:104" pos:end="849:104">=</operator>

            <operator pos:start="851:13" pos:end="851:13">(</operator><name pos:start="851:14" pos:end="851:30"><name pos:start="851:14" pos:end="851:18">avctx</name><operator pos:start="851:19" pos:end="851:20">-&gt;</operator><name pos:start="851:21" pos:end="851:30">colorspace</name></name> <operator pos:start="851:32" pos:end="851:33">!=</operator> <literal type="number" pos:start="851:35" pos:end="851:35">2</literal> <operator pos:start="851:37" pos:end="851:38">||</operator> <name pos:start="851:40" pos:end="851:61"><name pos:start="851:40" pos:end="851:44">avctx</name><operator pos:start="851:45" pos:end="851:46">-&gt;</operator><name pos:start="851:47" pos:end="851:61">color_primaries</name></name> <operator pos:start="851:63" pos:end="851:64">!=</operator> <literal type="number" pos:start="851:66" pos:end="851:66">2</literal> <operator pos:start="851:68" pos:end="851:69">||</operator> <name pos:start="851:71" pos:end="851:86"><name pos:start="851:71" pos:end="851:75">avctx</name><operator pos:start="851:76" pos:end="851:77">-&gt;</operator><name pos:start="851:78" pos:end="851:86">color_trc</name></name> <operator pos:start="851:88" pos:end="851:89">!=</operator> <literal type="number" pos:start="851:91" pos:end="851:91">2</literal><operator pos:start="851:92" pos:end="851:92">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="855:9" pos:end="861:106"><expr pos:start="855:9" pos:end="861:105"><name pos:start="855:9" pos:end="855:100"><name pos:start="855:9" pos:end="855:11">ctx</name><operator pos:start="855:12" pos:end="855:13">-&gt;</operator><name pos:start="855:14" pos:end="855:26">encode_config</name><operator pos:start="855:27" pos:end="855:27">.</operator><name pos:start="855:28" pos:end="855:44">encodeCodecConfig</name><operator pos:start="855:45" pos:end="855:45">.</operator><name pos:start="855:46" pos:end="855:55">hevcConfig</name><operator pos:start="855:56" pos:end="855:56">.</operator><name pos:start="855:57" pos:end="855:73">hevcVUIParameters</name><operator pos:start="855:74" pos:end="855:74">.</operator><name pos:start="855:75" pos:end="855:100">videoSignalTypePresentFlag</name></name> <operator pos:start="855:102" pos:end="855:102">=</operator>

            <operator pos:start="857:13" pos:end="857:13">(</operator><name pos:start="857:14" pos:end="857:107"><name pos:start="857:14" pos:end="857:16">ctx</name><operator pos:start="857:17" pos:end="857:18">-&gt;</operator><name pos:start="857:19" pos:end="857:31">encode_config</name><operator pos:start="857:32" pos:end="857:32">.</operator><name pos:start="857:33" pos:end="857:49">encodeCodecConfig</name><operator pos:start="857:50" pos:end="857:50">.</operator><name pos:start="857:51" pos:end="857:60">hevcConfig</name><operator pos:start="857:61" pos:end="857:61">.</operator><name pos:start="857:62" pos:end="857:78">hevcVUIParameters</name><operator pos:start="857:79" pos:end="857:79">.</operator><name pos:start="857:80" pos:end="857:107">colourDescriptionPresentFlag</name></name>

            <operator pos:start="859:13" pos:end="859:14">||</operator> <name pos:start="859:16" pos:end="859:92"><name pos:start="859:16" pos:end="859:18">ctx</name><operator pos:start="859:19" pos:end="859:20">-&gt;</operator><name pos:start="859:21" pos:end="859:33">encode_config</name><operator pos:start="859:34" pos:end="859:34">.</operator><name pos:start="859:35" pos:end="859:51">encodeCodecConfig</name><operator pos:start="859:52" pos:end="859:52">.</operator><name pos:start="859:53" pos:end="859:62">hevcConfig</name><operator pos:start="859:63" pos:end="859:63">.</operator><name pos:start="859:64" pos:end="859:80">hevcVUIParameters</name><operator pos:start="859:81" pos:end="859:81">.</operator><name pos:start="859:82" pos:end="859:92">videoFormat</name></name> <operator pos:start="859:94" pos:end="859:95">!=</operator> <literal type="number" pos:start="859:97" pos:end="859:97">5</literal>

            <operator pos:start="861:13" pos:end="861:14">||</operator> <name pos:start="861:16" pos:end="861:99"><name pos:start="861:16" pos:end="861:18">ctx</name><operator pos:start="861:19" pos:end="861:20">-&gt;</operator><name pos:start="861:21" pos:end="861:33">encode_config</name><operator pos:start="861:34" pos:end="861:34">.</operator><name pos:start="861:35" pos:end="861:51">encodeCodecConfig</name><operator pos:start="861:52" pos:end="861:52">.</operator><name pos:start="861:53" pos:end="861:62">hevcConfig</name><operator pos:start="861:63" pos:end="861:63">.</operator><name pos:start="861:64" pos:end="861:80">hevcVUIParameters</name><operator pos:start="861:81" pos:end="861:81">.</operator><name pos:start="861:82" pos:end="861:99">videoFullRangeFlag</name></name> <operator pos:start="861:101" pos:end="861:102">!=</operator> <literal type="number" pos:start="861:104" pos:end="861:104">0</literal><operator pos:start="861:105" pos:end="861:105">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="865:9" pos:end="865:70"><expr pos:start="865:9" pos:end="865:69"><name pos:start="865:9" pos:end="865:65"><name pos:start="865:9" pos:end="865:11">ctx</name><operator pos:start="865:12" pos:end="865:13">-&gt;</operator><name pos:start="865:14" pos:end="865:26">encode_config</name><operator pos:start="865:27" pos:end="865:27">.</operator><name pos:start="865:28" pos:end="865:44">encodeCodecConfig</name><operator pos:start="865:45" pos:end="865:45">.</operator><name pos:start="865:46" pos:end="865:55">hevcConfig</name><operator pos:start="865:56" pos:end="865:56">.</operator><name pos:start="865:57" pos:end="865:65">sliceMode</name></name> <operator pos:start="865:67" pos:end="865:67">=</operator> <literal type="number" pos:start="865:69" pos:end="865:69">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="867:9" pos:end="867:74"><expr pos:start="867:9" pos:end="867:73"><name pos:start="867:9" pos:end="867:69"><name pos:start="867:9" pos:end="867:11">ctx</name><operator pos:start="867:12" pos:end="867:13">-&gt;</operator><name pos:start="867:14" pos:end="867:26">encode_config</name><operator pos:start="867:27" pos:end="867:27">.</operator><name pos:start="867:28" pos:end="867:44">encodeCodecConfig</name><operator pos:start="867:45" pos:end="867:45">.</operator><name pos:start="867:46" pos:end="867:55">hevcConfig</name><operator pos:start="867:56" pos:end="867:56">.</operator><name pos:start="867:57" pos:end="867:69">sliceModeData</name></name> <operator pos:start="867:71" pos:end="867:71">=</operator> <literal type="number" pos:start="867:73" pos:end="867:73">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="871:9" pos:end="871:125"><expr pos:start="871:9" pos:end="871:124"><name pos:start="871:9" pos:end="871:69"><name pos:start="871:9" pos:end="871:11">ctx</name><operator pos:start="871:12" pos:end="871:13">-&gt;</operator><name pos:start="871:14" pos:end="871:26">encode_config</name><operator pos:start="871:27" pos:end="871:27">.</operator><name pos:start="871:28" pos:end="871:44">encodeCodecConfig</name><operator pos:start="871:45" pos:end="871:45">.</operator><name pos:start="871:46" pos:end="871:55">hevcConfig</name><operator pos:start="871:56" pos:end="871:56">.</operator><name pos:start="871:57" pos:end="871:69">disableSPSPPS</name></name> <operator pos:start="871:71" pos:end="871:71">=</operator> <ternary pos:start="871:73" pos:end="871:124"><condition pos:start="871:73" pos:end="871:118"><expr pos:start="871:73" pos:end="871:116"><operator pos:start="871:73" pos:end="871:73">(</operator><name pos:start="871:74" pos:end="871:85"><name pos:start="871:74" pos:end="871:78">avctx</name><operator pos:start="871:79" pos:end="871:80">-&gt;</operator><name pos:start="871:81" pos:end="871:85">flags</name></name> <operator pos:start="871:87" pos:end="871:87">&amp;</operator> <name pos:start="871:89" pos:end="871:115">AV_CODEC_FLAG_GLOBAL_HEADER</name><operator pos:start="871:116" pos:end="871:116">)</operator></expr> ?</condition><then pos:start="871:120" pos:end="871:120"> <expr pos:start="871:120" pos:end="871:120"><literal type="number" pos:start="871:120" pos:end="871:120">1</literal></expr> </then><else pos:start="871:122" pos:end="871:124">: <expr pos:start="871:124" pos:end="871:124"><literal type="number" pos:start="871:124" pos:end="871:124">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="873:9" pos:end="873:124"><expr pos:start="873:9" pos:end="873:123"><name pos:start="873:9" pos:end="873:68"><name pos:start="873:9" pos:end="873:11">ctx</name><operator pos:start="873:12" pos:end="873:13">-&gt;</operator><name pos:start="873:14" pos:end="873:26">encode_config</name><operator pos:start="873:27" pos:end="873:27">.</operator><name pos:start="873:28" pos:end="873:44">encodeCodecConfig</name><operator pos:start="873:45" pos:end="873:45">.</operator><name pos:start="873:46" pos:end="873:55">hevcConfig</name><operator pos:start="873:56" pos:end="873:56">.</operator><name pos:start="873:57" pos:end="873:68">repeatSPSPPS</name></name> <operator pos:start="873:70" pos:end="873:70">=</operator> <ternary pos:start="873:72" pos:end="873:123"><condition pos:start="873:72" pos:end="873:117"><expr pos:start="873:72" pos:end="873:115"><operator pos:start="873:72" pos:end="873:72">(</operator><name pos:start="873:73" pos:end="873:84"><name pos:start="873:73" pos:end="873:77">avctx</name><operator pos:start="873:78" pos:end="873:79">-&gt;</operator><name pos:start="873:80" pos:end="873:84">flags</name></name> <operator pos:start="873:86" pos:end="873:86">&amp;</operator> <name pos:start="873:88" pos:end="873:114">AV_CODEC_FLAG_GLOBAL_HEADER</name><operator pos:start="873:115" pos:end="873:115">)</operator></expr> ?</condition><then pos:start="873:119" pos:end="873:119"> <expr pos:start="873:119" pos:end="873:119"><literal type="number" pos:start="873:119" pos:end="873:119">0</literal></expr> </then><else pos:start="873:121" pos:end="873:123">: <expr pos:start="873:123" pos:end="873:123"><literal type="number" pos:start="873:123" pos:end="873:123">1</literal></expr></else></ternary></expr>;</expr_stmt>



        <expr_stmt pos:start="877:9" pos:end="877:70"><expr pos:start="877:9" pos:end="877:69"><name pos:start="877:9" pos:end="877:65"><name pos:start="877:9" pos:end="877:11">ctx</name><operator pos:start="877:12" pos:end="877:13">-&gt;</operator><name pos:start="877:14" pos:end="877:26">encode_config</name><operator pos:start="877:27" pos:end="877:27">.</operator><name pos:start="877:28" pos:end="877:44">encodeCodecConfig</name><operator pos:start="877:45" pos:end="877:45">.</operator><name pos:start="877:46" pos:end="877:55">hevcConfig</name><operator pos:start="877:56" pos:end="877:56">.</operator><name pos:start="877:57" pos:end="877:65">outputAUD</name></name> <operator pos:start="877:67" pos:end="877:67">=</operator> <literal type="number" pos:start="877:69" pos:end="877:69">1</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="881:9" pos:end="881:72">/* No other profile is supported in the current SDK version 5 */</comment>

        <expr_stmt pos:start="883:9" pos:end="883:71"><expr pos:start="883:9" pos:end="883:70"><name pos:start="883:9" pos:end="883:38"><name pos:start="883:9" pos:end="883:11">ctx</name><operator pos:start="883:12" pos:end="883:13">-&gt;</operator><name pos:start="883:14" pos:end="883:26">encode_config</name><operator pos:start="883:27" pos:end="883:27">.</operator><name pos:start="883:28" pos:end="883:38">profileGUID</name></name> <operator pos:start="883:40" pos:end="883:40">=</operator> <name pos:start="883:42" pos:end="883:70">NV_ENC_HEVC_PROFILE_MAIN_GUID</name></expr>;</expr_stmt>

        <expr_stmt pos:start="885:9" pos:end="885:46"><expr pos:start="885:9" pos:end="885:45"><name pos:start="885:9" pos:end="885:22"><name pos:start="885:9" pos:end="885:13">avctx</name><operator pos:start="885:14" pos:end="885:15">-&gt;</operator><name pos:start="885:16" pos:end="885:22">profile</name></name> <operator pos:start="885:24" pos:end="885:24">=</operator> <name pos:start="885:26" pos:end="885:45">FF_PROFILE_HEVC_MAIN</name></expr>;</expr_stmt>



        <if_stmt pos:start="889:9" pos:end="907:9"><if pos:start="889:9" pos:end="903:9">if <condition pos:start="889:12" pos:end="889:23">(<expr pos:start="889:13" pos:end="889:22"><name pos:start="889:13" pos:end="889:22"><name pos:start="889:13" pos:end="889:15">ctx</name><operator pos:start="889:16" pos:end="889:17">-&gt;</operator><name pos:start="889:18" pos:end="889:22">level</name></name></expr>)</condition> <block pos:start="889:25" pos:end="903:9">{<block_content pos:start="891:13" pos:end="901:13">

            <expr_stmt pos:start="891:13" pos:end="891:140"><expr pos:start="891:13" pos:end="891:139"><name pos:start="891:13" pos:end="891:15">res</name> <operator pos:start="891:17" pos:end="891:17">=</operator> <call pos:start="891:19" pos:end="891:139"><name pos:start="891:19" pos:end="891:40">input_string_to_uint32</name><argument_list pos:start="891:41" pos:end="891:139">(<argument pos:start="891:42" pos:end="891:46"><expr pos:start="891:42" pos:end="891:46"><name pos:start="891:42" pos:end="891:46">avctx</name></expr></argument>, <argument pos:start="891:49" pos:end="891:70"><expr pos:start="891:49" pos:end="891:70"><name pos:start="891:49" pos:end="891:70">nvenc_hevc_level_pairs</name></expr></argument>, <argument pos:start="891:73" pos:end="891:82"><expr pos:start="891:73" pos:end="891:82"><name pos:start="891:73" pos:end="891:82"><name pos:start="891:73" pos:end="891:75">ctx</name><operator pos:start="891:76" pos:end="891:77">-&gt;</operator><name pos:start="891:78" pos:end="891:82">level</name></name></expr></argument>, <argument pos:start="891:85" pos:end="891:138"><expr pos:start="891:85" pos:end="891:138"><operator pos:start="891:85" pos:end="891:85">&amp;</operator><name pos:start="891:86" pos:end="891:138"><name pos:start="891:86" pos:end="891:88">ctx</name><operator pos:start="891:89" pos:end="891:90">-&gt;</operator><name pos:start="891:91" pos:end="891:103">encode_config</name><operator pos:start="891:104" pos:end="891:104">.</operator><name pos:start="891:105" pos:end="891:121">encodeCodecConfig</name><operator pos:start="891:122" pos:end="891:122">.</operator><name pos:start="891:123" pos:end="891:132">hevcConfig</name><operator pos:start="891:133" pos:end="891:133">.</operator><name pos:start="891:134" pos:end="891:138">level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="895:13" pos:end="901:13"><if pos:start="895:13" pos:end="901:13">if <condition pos:start="895:16" pos:end="895:20">(<expr pos:start="895:17" pos:end="895:19"><name pos:start="895:17" pos:end="895:19">res</name></expr>)</condition> <block pos:start="895:22" pos:end="901:13">{<block_content pos:start="897:17" pos:end="899:27">

                <expr_stmt pos:start="897:17" pos:end="897:162"><expr pos:start="897:17" pos:end="897:161"><call pos:start="897:17" pos:end="897:161"><name pos:start="897:17" pos:end="897:22">av_log</name><argument_list pos:start="897:23" pos:end="897:161">(<argument pos:start="897:24" pos:end="897:28"><expr pos:start="897:24" pos:end="897:28"><name pos:start="897:24" pos:end="897:28">avctx</name></expr></argument>, <argument pos:start="897:31" pos:end="897:42"><expr pos:start="897:31" pos:end="897:42"><name pos:start="897:31" pos:end="897:42">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="897:45" pos:end="897:148"><expr pos:start="897:45" pos:end="897:148"><literal type="string" pos:start="897:45" pos:end="897:148">"Level \"%s\" is unknown! Supported levels: auto, 1, 2, 2.1, 3, 3.1, 4, 4.1, 5, 5.1, 5.2, 6, 6.1, 6.2\n"</literal></expr></argument>, <argument pos:start="897:151" pos:end="897:160"><expr pos:start="897:151" pos:end="897:160"><name pos:start="897:151" pos:end="897:160"><name pos:start="897:151" pos:end="897:153">ctx</name><operator pos:start="897:154" pos:end="897:155">-&gt;</operator><name pos:start="897:156" pos:end="897:160">level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="899:17" pos:end="899:27">goto <name pos:start="899:22" pos:end="899:26">error</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="903:11" pos:end="907:9">else <block pos:start="903:16" pos:end="907:9">{<block_content pos:start="905:13" pos:end="905:92">

            <expr_stmt pos:start="905:13" pos:end="905:92"><expr pos:start="905:13" pos:end="905:91"><name pos:start="905:13" pos:end="905:65"><name pos:start="905:13" pos:end="905:15">ctx</name><operator pos:start="905:16" pos:end="905:17">-&gt;</operator><name pos:start="905:18" pos:end="905:30">encode_config</name><operator pos:start="905:31" pos:end="905:31">.</operator><name pos:start="905:32" pos:end="905:48">encodeCodecConfig</name><operator pos:start="905:49" pos:end="905:49">.</operator><name pos:start="905:50" pos:end="905:59">hevcConfig</name><operator pos:start="905:60" pos:end="905:60">.</operator><name pos:start="905:61" pos:end="905:65">level</name></name> <operator pos:start="905:67" pos:end="905:67">=</operator> <name pos:start="905:69" pos:end="905:91">NV_ENC_LEVEL_AUTOSELECT</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="911:9" pos:end="931:9"><if pos:start="911:9" pos:end="931:9">if <condition pos:start="911:12" pos:end="911:22">(<expr pos:start="911:13" pos:end="911:21"><name pos:start="911:13" pos:end="911:21"><name pos:start="911:13" pos:end="911:15">ctx</name><operator pos:start="911:16" pos:end="911:17">-&gt;</operator><name pos:start="911:18" pos:end="911:21">tier</name></name></expr>)</condition> <block pos:start="911:24" pos:end="931:9">{<block_content pos:start="913:13" pos:end="929:13">

            <if_stmt pos:start="913:13" pos:end="929:13"><if pos:start="913:13" pos:end="917:13">if <condition pos:start="913:16" pos:end="913:43">(<expr pos:start="913:17" pos:end="913:42"><operator pos:start="913:17" pos:end="913:17">!</operator><call pos:start="913:18" pos:end="913:42"><name pos:start="913:18" pos:end="913:23">strcmp</name><argument_list pos:start="913:24" pos:end="913:42">(<argument pos:start="913:25" pos:end="913:33"><expr pos:start="913:25" pos:end="913:33"><name pos:start="913:25" pos:end="913:33"><name pos:start="913:25" pos:end="913:27">ctx</name><operator pos:start="913:28" pos:end="913:29">-&gt;</operator><name pos:start="913:30" pos:end="913:33">tier</name></name></expr></argument>, <argument pos:start="913:36" pos:end="913:41"><expr pos:start="913:36" pos:end="913:41"><literal type="string" pos:start="913:36" pos:end="913:41">"main"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="913:45" pos:end="917:13">{<block_content pos:start="915:17" pos:end="915:93">

                <expr_stmt pos:start="915:17" pos:end="915:93"><expr pos:start="915:17" pos:end="915:92"><name pos:start="915:17" pos:end="915:68"><name pos:start="915:17" pos:end="915:19">ctx</name><operator pos:start="915:20" pos:end="915:21">-&gt;</operator><name pos:start="915:22" pos:end="915:34">encode_config</name><operator pos:start="915:35" pos:end="915:35">.</operator><name pos:start="915:36" pos:end="915:52">encodeCodecConfig</name><operator pos:start="915:53" pos:end="915:53">.</operator><name pos:start="915:54" pos:end="915:63">hevcConfig</name><operator pos:start="915:64" pos:end="915:64">.</operator><name pos:start="915:65" pos:end="915:68">tier</name></name> <operator pos:start="915:70" pos:end="915:70">=</operator> <name pos:start="915:72" pos:end="915:92">NV_ENC_TIER_HEVC_MAIN</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="917:15" pos:end="921:13">else if <condition pos:start="917:23" pos:end="917:50">(<expr pos:start="917:24" pos:end="917:49"><operator pos:start="917:24" pos:end="917:24">!</operator><call pos:start="917:25" pos:end="917:49"><name pos:start="917:25" pos:end="917:30">strcmp</name><argument_list pos:start="917:31" pos:end="917:49">(<argument pos:start="917:32" pos:end="917:40"><expr pos:start="917:32" pos:end="917:40"><name pos:start="917:32" pos:end="917:40"><name pos:start="917:32" pos:end="917:34">ctx</name><operator pos:start="917:35" pos:end="917:36">-&gt;</operator><name pos:start="917:37" pos:end="917:40">tier</name></name></expr></argument>, <argument pos:start="917:43" pos:end="917:48"><expr pos:start="917:43" pos:end="917:48"><literal type="string" pos:start="917:43" pos:end="917:48">"high"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="917:52" pos:end="921:13">{<block_content pos:start="919:17" pos:end="919:93">

                <expr_stmt pos:start="919:17" pos:end="919:93"><expr pos:start="919:17" pos:end="919:92"><name pos:start="919:17" pos:end="919:68"><name pos:start="919:17" pos:end="919:19">ctx</name><operator pos:start="919:20" pos:end="919:21">-&gt;</operator><name pos:start="919:22" pos:end="919:34">encode_config</name><operator pos:start="919:35" pos:end="919:35">.</operator><name pos:start="919:36" pos:end="919:52">encodeCodecConfig</name><operator pos:start="919:53" pos:end="919:53">.</operator><name pos:start="919:54" pos:end="919:63">hevcConfig</name><operator pos:start="919:64" pos:end="919:64">.</operator><name pos:start="919:65" pos:end="919:68">tier</name></name> <operator pos:start="919:70" pos:end="919:70">=</operator> <name pos:start="919:72" pos:end="919:92">NV_ENC_TIER_HEVC_HIGH</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="921:15" pos:end="929:13">else <block pos:start="921:20" pos:end="929:13">{<block_content pos:start="923:17" pos:end="927:27">

                <expr_stmt pos:start="923:17" pos:end="923:112"><expr pos:start="923:17" pos:end="923:111"><call pos:start="923:17" pos:end="923:111"><name pos:start="923:17" pos:end="923:22">av_log</name><argument_list pos:start="923:23" pos:end="923:111">(<argument pos:start="923:24" pos:end="923:28"><expr pos:start="923:24" pos:end="923:28"><name pos:start="923:24" pos:end="923:28">avctx</name></expr></argument>, <argument pos:start="923:31" pos:end="923:42"><expr pos:start="923:31" pos:end="923:42"><name pos:start="923:31" pos:end="923:42">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="923:45" pos:end="923:99"><expr pos:start="923:45" pos:end="923:99"><literal type="string" pos:start="923:45" pos:end="923:99">"Tier \"%s\" is unknown! Supported tiers: main, high\n"</literal></expr></argument>, <argument pos:start="923:102" pos:end="923:110"><expr pos:start="923:102" pos:end="923:110"><name pos:start="923:102" pos:end="923:110"><name pos:start="923:102" pos:end="923:104">ctx</name><operator pos:start="923:105" pos:end="923:106">-&gt;</operator><name pos:start="923:107" pos:end="923:110">tier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="925:17" pos:end="925:38"><expr pos:start="925:17" pos:end="925:37"><name pos:start="925:17" pos:end="925:19">res</name> <operator pos:start="925:21" pos:end="925:21">=</operator> <call pos:start="925:23" pos:end="925:37"><name pos:start="925:23" pos:end="925:29">AVERROR</name><argument_list pos:start="925:30" pos:end="925:37">(<argument pos:start="925:31" pos:end="925:36"><expr pos:start="925:31" pos:end="925:36"><name pos:start="925:31" pos:end="925:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="927:17" pos:end="927:27">goto <name pos:start="927:22" pos:end="927:26">error</name>;</goto>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <break pos:start="935:9" pos:end="935:14">break;</break>

    <comment type="block" pos:start="937:5" pos:end="937:69">/* Earlier switch/case will return if unknown codec is passed. */</comment>

    </block_content>}</block></switch>



    <expr_stmt pos:start="943:5" pos:end="943:90"><expr pos:start="943:5" pos:end="943:89"><name pos:start="943:5" pos:end="943:13">nv_status</name> <operator pos:start="943:15" pos:end="943:15">=</operator> <call pos:start="943:17" pos:end="943:89"><name pos:start="943:17" pos:end="943:47"><name pos:start="943:17" pos:end="943:23">p_nvenc</name><operator pos:start="943:24" pos:end="943:25">-&gt;</operator><name pos:start="943:26" pos:end="943:47">nvEncInitializeEncoder</name></name><argument_list pos:start="943:48" pos:end="943:89">(<argument pos:start="943:49" pos:end="943:62"><expr pos:start="943:49" pos:end="943:62"><name pos:start="943:49" pos:end="943:62"><name pos:start="943:49" pos:end="943:51">ctx</name><operator pos:start="943:52" pos:end="943:53">-&gt;</operator><name pos:start="943:54" pos:end="943:62">nvencoder</name></name></expr></argument>, <argument pos:start="943:65" pos:end="943:88"><expr pos:start="943:65" pos:end="943:88"><operator pos:start="943:65" pos:end="943:65">&amp;</operator><name pos:start="943:66" pos:end="943:88"><name pos:start="943:66" pos:end="943:68">ctx</name><operator pos:start="943:69" pos:end="943:70">-&gt;</operator><name pos:start="943:71" pos:end="943:88">init_encode_params</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="945:5" pos:end="953:5"><if pos:start="945:5" pos:end="953:5">if <condition pos:start="945:8" pos:end="945:36">(<expr pos:start="945:9" pos:end="945:35"><name pos:start="945:9" pos:end="945:17">nv_status</name> <operator pos:start="945:19" pos:end="945:20">!=</operator> <name pos:start="945:22" pos:end="945:35">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="945:38" pos:end="953:5">{<block_content pos:start="947:9" pos:end="951:19">

        <expr_stmt pos:start="947:9" pos:end="947:88"><expr pos:start="947:9" pos:end="947:87"><call pos:start="947:9" pos:end="947:87"><name pos:start="947:9" pos:end="947:14">av_log</name><argument_list pos:start="947:15" pos:end="947:87">(<argument pos:start="947:16" pos:end="947:20"><expr pos:start="947:16" pos:end="947:20"><name pos:start="947:16" pos:end="947:20">avctx</name></expr></argument>, <argument pos:start="947:23" pos:end="947:34"><expr pos:start="947:23" pos:end="947:34"><name pos:start="947:23" pos:end="947:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="947:37" pos:end="947:70"><expr pos:start="947:37" pos:end="947:70"><literal type="string" pos:start="947:37" pos:end="947:70">"InitializeEncoder failed: 0x%x\n"</literal></expr></argument>, <argument pos:start="947:73" pos:end="947:86"><expr pos:start="947:73" pos:end="947:86"><operator pos:start="947:73" pos:end="947:73">(</operator><name pos:start="947:74" pos:end="947:76">int</name><operator pos:start="947:77" pos:end="947:77">)</operator><name pos:start="947:78" pos:end="947:86">nv_status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="949:9" pos:end="949:31"><expr pos:start="949:9" pos:end="949:30"><name pos:start="949:9" pos:end="949:11">res</name> <operator pos:start="949:13" pos:end="949:13">=</operator> <name pos:start="949:15" pos:end="949:30">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

        <goto pos:start="951:9" pos:end="951:19">goto <name pos:start="951:14" pos:end="951:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="957:5" pos:end="957:91"><expr pos:start="957:5" pos:end="957:90"><name pos:start="957:5" pos:end="957:23"><name pos:start="957:5" pos:end="957:7">ctx</name><operator pos:start="957:8" pos:end="957:9">-&gt;</operator><name pos:start="957:10" pos:end="957:23">input_surfaces</name></name> <operator pos:start="957:25" pos:end="957:25">=</operator> <call pos:start="957:27" pos:end="957:90"><name pos:start="957:27" pos:end="957:35">av_malloc</name><argument_list pos:start="957:36" pos:end="957:90">(<argument pos:start="957:37" pos:end="957:89"><expr pos:start="957:37" pos:end="957:89"><name pos:start="957:37" pos:end="957:58"><name pos:start="957:37" pos:end="957:39">ctx</name><operator pos:start="957:40" pos:end="957:41">-&gt;</operator><name pos:start="957:42" pos:end="957:58">max_surface_count</name></name> <operator pos:start="957:60" pos:end="957:60">*</operator> <sizeof pos:start="957:62" pos:end="957:89">sizeof<argument_list pos:start="957:68" pos:end="957:89">(<argument pos:start="957:69" pos:end="957:88"><expr pos:start="957:69" pos:end="957:88"><operator pos:start="957:69" pos:end="957:69">*</operator><name pos:start="957:70" pos:end="957:88"><name pos:start="957:70" pos:end="957:72">ctx</name><operator pos:start="957:73" pos:end="957:74">-&gt;</operator><name pos:start="957:75" pos:end="957:88">input_surfaces</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="961:5" pos:end="967:5"><if pos:start="961:5" pos:end="967:5">if <condition pos:start="961:8" pos:end="961:29">(<expr pos:start="961:9" pos:end="961:28"><operator pos:start="961:9" pos:end="961:9">!</operator><name pos:start="961:10" pos:end="961:28"><name pos:start="961:10" pos:end="961:12">ctx</name><operator pos:start="961:13" pos:end="961:14">-&gt;</operator><name pos:start="961:15" pos:end="961:28">input_surfaces</name></name></expr>)</condition> <block pos:start="961:31" pos:end="967:5">{<block_content pos:start="963:9" pos:end="965:19">

        <expr_stmt pos:start="963:9" pos:end="963:30"><expr pos:start="963:9" pos:end="963:29"><name pos:start="963:9" pos:end="963:11">res</name> <operator pos:start="963:13" pos:end="963:13">=</operator> <call pos:start="963:15" pos:end="963:29"><name pos:start="963:15" pos:end="963:21">AVERROR</name><argument_list pos:start="963:22" pos:end="963:29">(<argument pos:start="963:23" pos:end="963:28"><expr pos:start="963:23" pos:end="963:28"><name pos:start="963:23" pos:end="963:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="965:9" pos:end="965:19">goto <name pos:start="965:14" pos:end="965:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="971:5" pos:end="971:93"><expr pos:start="971:5" pos:end="971:92"><name pos:start="971:5" pos:end="971:24"><name pos:start="971:5" pos:end="971:7">ctx</name><operator pos:start="971:8" pos:end="971:9">-&gt;</operator><name pos:start="971:10" pos:end="971:24">output_surfaces</name></name> <operator pos:start="971:26" pos:end="971:26">=</operator> <call pos:start="971:28" pos:end="971:92"><name pos:start="971:28" pos:end="971:36">av_malloc</name><argument_list pos:start="971:37" pos:end="971:92">(<argument pos:start="971:38" pos:end="971:91"><expr pos:start="971:38" pos:end="971:91"><name pos:start="971:38" pos:end="971:59"><name pos:start="971:38" pos:end="971:40">ctx</name><operator pos:start="971:41" pos:end="971:42">-&gt;</operator><name pos:start="971:43" pos:end="971:59">max_surface_count</name></name> <operator pos:start="971:61" pos:end="971:61">*</operator> <sizeof pos:start="971:63" pos:end="971:91">sizeof<argument_list pos:start="971:69" pos:end="971:91">(<argument pos:start="971:70" pos:end="971:90"><expr pos:start="971:70" pos:end="971:90"><operator pos:start="971:70" pos:end="971:70">*</operator><name pos:start="971:71" pos:end="971:90"><name pos:start="971:71" pos:end="971:73">ctx</name><operator pos:start="971:74" pos:end="971:75">-&gt;</operator><name pos:start="971:76" pos:end="971:90">output_surfaces</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="975:5" pos:end="981:5"><if pos:start="975:5" pos:end="981:5">if <condition pos:start="975:8" pos:end="975:30">(<expr pos:start="975:9" pos:end="975:29"><operator pos:start="975:9" pos:end="975:9">!</operator><name pos:start="975:10" pos:end="975:29"><name pos:start="975:10" pos:end="975:12">ctx</name><operator pos:start="975:13" pos:end="975:14">-&gt;</operator><name pos:start="975:15" pos:end="975:29">output_surfaces</name></name></expr>)</condition> <block pos:start="975:32" pos:end="981:5">{<block_content pos:start="977:9" pos:end="979:19">

        <expr_stmt pos:start="977:9" pos:end="977:30"><expr pos:start="977:9" pos:end="977:29"><name pos:start="977:9" pos:end="977:11">res</name> <operator pos:start="977:13" pos:end="977:13">=</operator> <call pos:start="977:15" pos:end="977:29"><name pos:start="977:15" pos:end="977:21">AVERROR</name><argument_list pos:start="977:22" pos:end="977:29">(<argument pos:start="977:23" pos:end="977:28"><expr pos:start="977:23" pos:end="977:28"><name pos:start="977:23" pos:end="977:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="979:9" pos:end="979:19">goto <name pos:start="979:14" pos:end="979:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="985:5" pos:end="1103:5">for <control pos:start="985:9" pos:end="985:81">(<init pos:start="985:10" pos:end="985:26"><expr pos:start="985:10" pos:end="985:25"><name pos:start="985:10" pos:end="985:21">surfaceCount</name> <operator pos:start="985:23" pos:end="985:23">=</operator> <literal type="number" pos:start="985:25" pos:end="985:25">0</literal></expr>;</init> <condition pos:start="985:28" pos:end="985:65"><expr pos:start="985:28" pos:end="985:64"><name pos:start="985:28" pos:end="985:39">surfaceCount</name> <operator pos:start="985:41" pos:end="985:41">&lt;</operator> <name pos:start="985:43" pos:end="985:64"><name pos:start="985:43" pos:end="985:45">ctx</name><operator pos:start="985:46" pos:end="985:47">-&gt;</operator><name pos:start="985:48" pos:end="985:64">max_surface_count</name></name></expr>;</condition> <incr pos:start="985:67" pos:end="985:80"><expr pos:start="985:67" pos:end="985:80"><operator pos:start="985:67" pos:end="985:68">++</operator><name pos:start="985:69" pos:end="985:80">surfaceCount</name></expr></incr>)</control> <block pos:start="985:83" pos:end="1103:5">{<block_content pos:start="987:9" pos:end="1101:52">

        <decl_stmt pos:start="987:9" pos:end="987:53"><decl pos:start="987:9" pos:end="987:52"><type pos:start="987:9" pos:end="987:34"><name pos:start="987:9" pos:end="987:34">NV_ENC_CREATE_INPUT_BUFFER</name></type> <name pos:start="987:36" pos:end="987:44">allocSurf</name> <init pos:start="987:46" pos:end="987:52">= <expr pos:start="987:48" pos:end="987:52"><block pos:start="987:48" pos:end="987:52">{ <expr pos:start="987:50" pos:end="987:50"><literal type="number" pos:start="987:50" pos:end="987:50">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="989:9" pos:end="989:56"><decl pos:start="989:9" pos:end="989:55"><type pos:start="989:9" pos:end="989:38"><name pos:start="989:9" pos:end="989:38">NV_ENC_CREATE_BITSTREAM_BUFFER</name></type> <name pos:start="989:40" pos:end="989:47">allocOut</name> <init pos:start="989:49" pos:end="989:55">= <expr pos:start="989:51" pos:end="989:55"><block pos:start="989:51" pos:end="989:55">{ <expr pos:start="989:53" pos:end="989:53"><literal type="number" pos:start="989:53" pos:end="989:53">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="991:9" pos:end="991:59"><expr pos:start="991:9" pos:end="991:58"><name pos:start="991:9" pos:end="991:25"><name pos:start="991:9" pos:end="991:17">allocSurf</name><operator pos:start="991:18" pos:end="991:18">.</operator><name pos:start="991:19" pos:end="991:25">version</name></name> <operator pos:start="991:27" pos:end="991:27">=</operator> <name pos:start="991:29" pos:end="991:58">NV_ENC_CREATE_INPUT_BUFFER_VER</name></expr>;</expr_stmt>

        <expr_stmt pos:start="993:9" pos:end="993:62"><expr pos:start="993:9" pos:end="993:61"><name pos:start="993:9" pos:end="993:24"><name pos:start="993:9" pos:end="993:16">allocOut</name><operator pos:start="993:17" pos:end="993:17">.</operator><name pos:start="993:18" pos:end="993:24">version</name></name> <operator pos:start="993:26" pos:end="993:26">=</operator> <name pos:start="993:28" pos:end="993:61">NV_ENC_CREATE_BITSTREAM_BUFFER_VER</name></expr>;</expr_stmt>



        <expr_stmt pos:start="997:9" pos:end="997:52"><expr pos:start="997:9" pos:end="997:51"><name pos:start="997:9" pos:end="997:23"><name pos:start="997:9" pos:end="997:17">allocSurf</name><operator pos:start="997:18" pos:end="997:18">.</operator><name pos:start="997:19" pos:end="997:23">width</name></name> <operator pos:start="997:25" pos:end="997:25">=</operator> <operator pos:start="997:27" pos:end="997:27">(</operator><name pos:start="997:28" pos:end="997:39"><name pos:start="997:28" pos:end="997:32">avctx</name><operator pos:start="997:33" pos:end="997:34">-&gt;</operator><name pos:start="997:35" pos:end="997:39">width</name></name> <operator pos:start="997:41" pos:end="997:41">+</operator> <literal type="number" pos:start="997:43" pos:end="997:44">31</literal><operator pos:start="997:45" pos:end="997:45">)</operator> <operator pos:start="997:47" pos:end="997:47">&amp;</operator> <operator pos:start="997:49" pos:end="997:49">~</operator><literal type="number" pos:start="997:50" pos:end="997:51">31</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="999:9" pos:end="999:54"><expr pos:start="999:9" pos:end="999:53"><name pos:start="999:9" pos:end="999:24"><name pos:start="999:9" pos:end="999:17">allocSurf</name><operator pos:start="999:18" pos:end="999:18">.</operator><name pos:start="999:19" pos:end="999:24">height</name></name> <operator pos:start="999:26" pos:end="999:26">=</operator> <operator pos:start="999:28" pos:end="999:28">(</operator><name pos:start="999:29" pos:end="999:41"><name pos:start="999:29" pos:end="999:33">avctx</name><operator pos:start="999:34" pos:end="999:35">-&gt;</operator><name pos:start="999:36" pos:end="999:41">height</name></name> <operator pos:start="999:43" pos:end="999:43">+</operator> <literal type="number" pos:start="999:45" pos:end="999:46">31</literal><operator pos:start="999:47" pos:end="999:47">)</operator> <operator pos:start="999:49" pos:end="999:49">&amp;</operator> <operator pos:start="999:51" pos:end="999:51">~</operator><literal type="number" pos:start="999:52" pos:end="999:53">31</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="1003:9" pos:end="1003:64"><expr pos:start="1003:9" pos:end="1003:63"><name pos:start="1003:9" pos:end="1003:28"><name pos:start="1003:9" pos:end="1003:17">allocSurf</name><operator pos:start="1003:18" pos:end="1003:18">.</operator><name pos:start="1003:19" pos:end="1003:28">memoryHeap</name></name> <operator pos:start="1003:30" pos:end="1003:30">=</operator> <name pos:start="1003:32" pos:end="1003:63">NV_ENC_MEMORY_HEAP_SYSMEM_CACHED</name></expr>;</expr_stmt>



        <switch pos:start="1007:9" pos:end="1041:9">switch <condition pos:start="1007:16" pos:end="1007:31">(<expr pos:start="1007:17" pos:end="1007:30"><name pos:start="1007:17" pos:end="1007:30"><name pos:start="1007:17" pos:end="1007:21">avctx</name><operator pos:start="1007:22" pos:end="1007:23">-&gt;</operator><name pos:start="1007:24" pos:end="1007:30">pix_fmt</name></name></expr>)</condition> <block pos:start="1007:33" pos:end="1041:9">{<block_content pos:start="1009:9" pos:end="1039:23">

        <case pos:start="1009:9" pos:end="1009:32">case <expr pos:start="1009:14" pos:end="1009:31"><name pos:start="1009:14" pos:end="1009:31">AV_PIX_FMT_YUV420P</name></expr>:</case>

            <expr_stmt pos:start="1011:13" pos:end="1011:63"><expr pos:start="1011:13" pos:end="1011:62"><name pos:start="1011:13" pos:end="1011:31"><name pos:start="1011:13" pos:end="1011:21">allocSurf</name><operator pos:start="1011:22" pos:end="1011:22">.</operator><name pos:start="1011:23" pos:end="1011:31">bufferFmt</name></name> <operator pos:start="1011:33" pos:end="1011:33">=</operator> <name pos:start="1011:35" pos:end="1011:62">NV_ENC_BUFFER_FORMAT_YV12_PL</name></expr>;</expr_stmt>

            <break pos:start="1013:13" pos:end="1013:18">break;</break>



        <case pos:start="1017:9" pos:end="1017:29">case <expr pos:start="1017:14" pos:end="1017:28"><name pos:start="1017:14" pos:end="1017:28">AV_PIX_FMT_NV12</name></expr>:</case>

            <expr_stmt pos:start="1019:13" pos:end="1019:63"><expr pos:start="1019:13" pos:end="1019:62"><name pos:start="1019:13" pos:end="1019:31"><name pos:start="1019:13" pos:end="1019:21">allocSurf</name><operator pos:start="1019:22" pos:end="1019:22">.</operator><name pos:start="1019:23" pos:end="1019:31">bufferFmt</name></name> <operator pos:start="1019:33" pos:end="1019:33">=</operator> <name pos:start="1019:35" pos:end="1019:62">NV_ENC_BUFFER_FORMAT_NV12_PL</name></expr>;</expr_stmt>

            <break pos:start="1021:13" pos:end="1021:18">break;</break>



        <case pos:start="1025:9" pos:end="1025:32">case <expr pos:start="1025:14" pos:end="1025:31"><name pos:start="1025:14" pos:end="1025:31">AV_PIX_FMT_YUV444P</name></expr>:</case>

            <expr_stmt pos:start="1027:13" pos:end="1027:65"><expr pos:start="1027:13" pos:end="1027:64"><name pos:start="1027:13" pos:end="1027:31"><name pos:start="1027:13" pos:end="1027:21">allocSurf</name><operator pos:start="1027:22" pos:end="1027:22">.</operator><name pos:start="1027:23" pos:end="1027:31">bufferFmt</name></name> <operator pos:start="1027:33" pos:end="1027:33">=</operator> <name pos:start="1027:35" pos:end="1027:64">NV_ENC_BUFFER_FORMAT_YUV444_PL</name></expr>;</expr_stmt>

            <break pos:start="1029:13" pos:end="1029:18">break;</break>



        <default pos:start="1033:9" pos:end="1033:16">default:</default>

            <expr_stmt pos:start="1035:13" pos:end="1035:72"><expr pos:start="1035:13" pos:end="1035:71"><call pos:start="1035:13" pos:end="1035:71"><name pos:start="1035:13" pos:end="1035:18">av_log</name><argument_list pos:start="1035:19" pos:end="1035:71">(<argument pos:start="1035:20" pos:end="1035:24"><expr pos:start="1035:20" pos:end="1035:24"><name pos:start="1035:20" pos:end="1035:24">avctx</name></expr></argument>, <argument pos:start="1035:27" pos:end="1035:38"><expr pos:start="1035:27" pos:end="1035:38"><name pos:start="1035:27" pos:end="1035:38">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="1035:41" pos:end="1035:70"><expr pos:start="1035:41" pos:end="1035:70"><literal type="string" pos:start="1035:41" pos:end="1035:70">"Invalid input pixel format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1037:13" pos:end="1037:34"><expr pos:start="1037:13" pos:end="1037:33"><name pos:start="1037:13" pos:end="1037:15">res</name> <operator pos:start="1037:17" pos:end="1037:17">=</operator> <call pos:start="1037:19" pos:end="1037:33"><name pos:start="1037:19" pos:end="1037:25">AVERROR</name><argument_list pos:start="1037:26" pos:end="1037:33">(<argument pos:start="1037:27" pos:end="1037:32"><expr pos:start="1037:27" pos:end="1037:32"><name pos:start="1037:27" pos:end="1037:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1039:13" pos:end="1039:23">goto <name pos:start="1039:18" pos:end="1039:22">error</name>;</goto>

        </block_content>}</block></switch>



        <expr_stmt pos:start="1045:9" pos:end="1045:80"><expr pos:start="1045:9" pos:end="1045:79"><name pos:start="1045:9" pos:end="1045:17">nv_status</name> <operator pos:start="1045:19" pos:end="1045:19">=</operator> <call pos:start="1045:21" pos:end="1045:79"><name pos:start="1045:21" pos:end="1045:51"><name pos:start="1045:21" pos:end="1045:27">p_nvenc</name><operator pos:start="1045:28" pos:end="1045:29">-&gt;</operator><name pos:start="1045:30" pos:end="1045:51">nvEncCreateInputBuffer</name></name><argument_list pos:start="1045:52" pos:end="1045:79">(<argument pos:start="1045:53" pos:end="1045:66"><expr pos:start="1045:53" pos:end="1045:66"><name pos:start="1045:53" pos:end="1045:66"><name pos:start="1045:53" pos:end="1045:55">ctx</name><operator pos:start="1045:56" pos:end="1045:57">-&gt;</operator><name pos:start="1045:58" pos:end="1045:66">nvencoder</name></name></expr></argument>, <argument pos:start="1045:69" pos:end="1045:78"><expr pos:start="1045:69" pos:end="1045:78"><operator pos:start="1045:69" pos:end="1045:69">&amp;</operator><name pos:start="1045:70" pos:end="1045:78">allocSurf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1047:9" pos:end="1055:9"><if pos:start="1047:9" pos:end="1055:9">if <condition pos:start="1047:12" pos:end="1047:40">(<expr pos:start="1047:13" pos:end="1047:39"><name pos:start="1047:13" pos:end="1047:21">nv_status</name> <operator pos:start="1047:23" pos:end="1047:24">!=</operator> <name pos:start="1047:26" pos:end="1047:39">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="1047:42" pos:end="1055:9">{<block_content pos:start="1049:13" pos:end="1053:23">

            <expr_stmt pos:start="1049:13" pos:end="1049:70"><expr pos:start="1049:13" pos:end="1049:69"><call pos:start="1049:13" pos:end="1049:69"><name pos:start="1049:13" pos:end="1049:18">av_log</name><argument_list pos:start="1049:19" pos:end="1049:69">(<argument pos:start="1049:20" pos:end="1049:24"><expr pos:start="1049:20" pos:end="1049:24"><name pos:start="1049:20" pos:end="1049:24">avctx</name></expr></argument>, <argument pos:start="1049:27" pos:end="1049:38"><expr pos:start="1049:27" pos:end="1049:38"><name pos:start="1049:27" pos:end="1049:38">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="1049:41" pos:end="1049:68"><expr pos:start="1049:41" pos:end="1049:68"><literal type="string" pos:start="1049:41" pos:end="1049:68">"CreateInputBuffer failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1051:13" pos:end="1051:35"><expr pos:start="1051:13" pos:end="1051:34"><name pos:start="1051:13" pos:end="1051:15">res</name> <operator pos:start="1051:17" pos:end="1051:17">=</operator> <name pos:start="1051:19" pos:end="1051:34">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

            <goto pos:start="1053:13" pos:end="1053:23">goto <name pos:start="1053:18" pos:end="1053:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="1059:9" pos:end="1059:56"><expr pos:start="1059:9" pos:end="1059:55"><name pos:start="1059:9" pos:end="1059:41"><name pos:start="1059:9" pos:end="1059:11">ctx</name><operator pos:start="1059:12" pos:end="1059:13">-&gt;</operator><name pos:start="1059:14" pos:end="1059:27">input_surfaces</name><index pos:start="1059:28" pos:end="1059:41">[<expr pos:start="1059:29" pos:end="1059:40"><name pos:start="1059:29" pos:end="1059:40">surfaceCount</name></expr>]</index></name><operator pos:start="1059:42" pos:end="1059:42">.</operator><name pos:start="1059:43" pos:end="1059:51">lockCount</name> <operator pos:start="1059:53" pos:end="1059:53">=</operator> <literal type="number" pos:start="1059:55" pos:end="1059:55">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1061:9" pos:end="1061:80"><expr pos:start="1061:9" pos:end="1061:79"><name pos:start="1061:9" pos:end="1061:41"><name pos:start="1061:9" pos:end="1061:11">ctx</name><operator pos:start="1061:12" pos:end="1061:13">-&gt;</operator><name pos:start="1061:14" pos:end="1061:27">input_surfaces</name><index pos:start="1061:28" pos:end="1061:41">[<expr pos:start="1061:29" pos:end="1061:40"><name pos:start="1061:29" pos:end="1061:40">surfaceCount</name></expr>]</index></name><operator pos:start="1061:42" pos:end="1061:42">.</operator><name pos:start="1061:43" pos:end="1061:55">input_surface</name> <operator pos:start="1061:57" pos:end="1061:57">=</operator> <name pos:start="1061:59" pos:end="1061:79"><name pos:start="1061:59" pos:end="1061:67">allocSurf</name><operator pos:start="1061:68" pos:end="1061:68">.</operator><name pos:start="1061:69" pos:end="1061:79">inputBuffer</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1063:9" pos:end="1063:71"><expr pos:start="1063:9" pos:end="1063:70"><name pos:start="1063:9" pos:end="1063:41"><name pos:start="1063:9" pos:end="1063:11">ctx</name><operator pos:start="1063:12" pos:end="1063:13">-&gt;</operator><name pos:start="1063:14" pos:end="1063:27">input_surfaces</name><index pos:start="1063:28" pos:end="1063:41">[<expr pos:start="1063:29" pos:end="1063:40"><name pos:start="1063:29" pos:end="1063:40">surfaceCount</name></expr>]</index></name><operator pos:start="1063:42" pos:end="1063:42">.</operator><name pos:start="1063:43" pos:end="1063:48">format</name> <operator pos:start="1063:50" pos:end="1063:50">=</operator> <name pos:start="1063:52" pos:end="1063:70"><name pos:start="1063:52" pos:end="1063:60">allocSurf</name><operator pos:start="1063:61" pos:end="1063:61">.</operator><name pos:start="1063:62" pos:end="1063:70">bufferFmt</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1065:9" pos:end="1065:66"><expr pos:start="1065:9" pos:end="1065:65"><name pos:start="1065:9" pos:end="1065:41"><name pos:start="1065:9" pos:end="1065:11">ctx</name><operator pos:start="1065:12" pos:end="1065:13">-&gt;</operator><name pos:start="1065:14" pos:end="1065:27">input_surfaces</name><index pos:start="1065:28" pos:end="1065:41">[<expr pos:start="1065:29" pos:end="1065:40"><name pos:start="1065:29" pos:end="1065:40">surfaceCount</name></expr>]</index></name><operator pos:start="1065:42" pos:end="1065:42">.</operator><name pos:start="1065:43" pos:end="1065:47">width</name> <operator pos:start="1065:49" pos:end="1065:49">=</operator> <name pos:start="1065:51" pos:end="1065:65"><name pos:start="1065:51" pos:end="1065:59">allocSurf</name><operator pos:start="1065:60" pos:end="1065:60">.</operator><name pos:start="1065:61" pos:end="1065:65">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1067:9" pos:end="1067:68"><expr pos:start="1067:9" pos:end="1067:67"><name pos:start="1067:9" pos:end="1067:41"><name pos:start="1067:9" pos:end="1067:11">ctx</name><operator pos:start="1067:12" pos:end="1067:13">-&gt;</operator><name pos:start="1067:14" pos:end="1067:27">input_surfaces</name><index pos:start="1067:28" pos:end="1067:41">[<expr pos:start="1067:29" pos:end="1067:40"><name pos:start="1067:29" pos:end="1067:40">surfaceCount</name></expr>]</index></name><operator pos:start="1067:42" pos:end="1067:42">.</operator><name pos:start="1067:43" pos:end="1067:48">height</name> <operator pos:start="1067:50" pos:end="1067:50">=</operator> <name pos:start="1067:52" pos:end="1067:67"><name pos:start="1067:52" pos:end="1067:60">allocSurf</name><operator pos:start="1067:61" pos:end="1067:61">.</operator><name pos:start="1067:62" pos:end="1067:67">height</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="1071:9" pos:end="1071:115">/* 1MB is large enough to hold most output frames. NVENC increases this automaticaly if it's not enough. */</comment>

        <expr_stmt pos:start="1073:9" pos:end="1073:36"><expr pos:start="1073:9" pos:end="1073:35"><name pos:start="1073:9" pos:end="1073:21"><name pos:start="1073:9" pos:end="1073:16">allocOut</name><operator pos:start="1073:17" pos:end="1073:17">.</operator><name pos:start="1073:18" pos:end="1073:21">size</name></name> <operator pos:start="1073:23" pos:end="1073:23">=</operator> <literal type="number" pos:start="1073:25" pos:end="1073:28">1024</literal> <operator pos:start="1073:30" pos:end="1073:30">*</operator> <literal type="number" pos:start="1073:32" pos:end="1073:35">1024</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="1077:9" pos:end="1077:63"><expr pos:start="1077:9" pos:end="1077:62"><name pos:start="1077:9" pos:end="1077:27"><name pos:start="1077:9" pos:end="1077:16">allocOut</name><operator pos:start="1077:17" pos:end="1077:17">.</operator><name pos:start="1077:18" pos:end="1077:27">memoryHeap</name></name> <operator pos:start="1077:29" pos:end="1077:29">=</operator> <name pos:start="1077:31" pos:end="1077:62">NV_ENC_MEMORY_HEAP_SYSMEM_CACHED</name></expr>;</expr_stmt>



        <expr_stmt pos:start="1081:9" pos:end="1081:83"><expr pos:start="1081:9" pos:end="1081:82"><name pos:start="1081:9" pos:end="1081:17">nv_status</name> <operator pos:start="1081:19" pos:end="1081:19">=</operator> <call pos:start="1081:21" pos:end="1081:82"><name pos:start="1081:21" pos:end="1081:55"><name pos:start="1081:21" pos:end="1081:27">p_nvenc</name><operator pos:start="1081:28" pos:end="1081:29">-&gt;</operator><name pos:start="1081:30" pos:end="1081:55">nvEncCreateBitstreamBuffer</name></name><argument_list pos:start="1081:56" pos:end="1081:82">(<argument pos:start="1081:57" pos:end="1081:70"><expr pos:start="1081:57" pos:end="1081:70"><name pos:start="1081:57" pos:end="1081:70"><name pos:start="1081:57" pos:end="1081:59">ctx</name><operator pos:start="1081:60" pos:end="1081:61">-&gt;</operator><name pos:start="1081:62" pos:end="1081:70">nvencoder</name></name></expr></argument>, <argument pos:start="1081:73" pos:end="1081:81"><expr pos:start="1081:73" pos:end="1081:81"><operator pos:start="1081:73" pos:end="1081:73">&amp;</operator><name pos:start="1081:74" pos:end="1081:81">allocOut</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1083:9" pos:end="1093:9"><if pos:start="1083:9" pos:end="1093:9">if <condition pos:start="1083:12" pos:end="1083:40">(<expr pos:start="1083:13" pos:end="1083:39"><name pos:start="1083:13" pos:end="1083:21">nv_status</name> <operator pos:start="1083:23" pos:end="1083:24">!=</operator> <name pos:start="1083:26" pos:end="1083:39">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="1083:42" pos:end="1093:9">{<block_content pos:start="1085:13" pos:end="1091:23">

            <expr_stmt pos:start="1085:13" pos:end="1085:74"><expr pos:start="1085:13" pos:end="1085:73"><call pos:start="1085:13" pos:end="1085:73"><name pos:start="1085:13" pos:end="1085:18">av_log</name><argument_list pos:start="1085:19" pos:end="1085:73">(<argument pos:start="1085:20" pos:end="1085:24"><expr pos:start="1085:20" pos:end="1085:24"><name pos:start="1085:20" pos:end="1085:24">avctx</name></expr></argument>, <argument pos:start="1085:27" pos:end="1085:38"><expr pos:start="1085:27" pos:end="1085:38"><name pos:start="1085:27" pos:end="1085:38">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="1085:41" pos:end="1085:72"><expr pos:start="1085:41" pos:end="1085:72"><literal type="string" pos:start="1085:41" pos:end="1085:72">"CreateBitstreamBuffer failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1087:13" pos:end="1087:71"><expr pos:start="1087:13" pos:end="1087:70"><name pos:start="1087:13" pos:end="1087:48"><name pos:start="1087:13" pos:end="1087:15">ctx</name><operator pos:start="1087:16" pos:end="1087:17">-&gt;</operator><name pos:start="1087:18" pos:end="1087:32">output_surfaces</name><index pos:start="1087:33" pos:end="1087:48">[<expr pos:start="1087:34" pos:end="1087:47"><name pos:start="1087:34" pos:end="1087:45">surfaceCount</name><operator pos:start="1087:46" pos:end="1087:47">++</operator></expr>]</index></name><operator pos:start="1087:49" pos:end="1087:49">.</operator><name pos:start="1087:50" pos:end="1087:63">output_surface</name> <operator pos:start="1087:65" pos:end="1087:65">=</operator> <name pos:start="1087:67" pos:end="1087:70">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="1089:13" pos:end="1089:35"><expr pos:start="1089:13" pos:end="1089:34"><name pos:start="1089:13" pos:end="1089:15">res</name> <operator pos:start="1089:17" pos:end="1089:17">=</operator> <name pos:start="1089:19" pos:end="1089:34">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

            <goto pos:start="1091:13" pos:end="1091:23">goto <name pos:start="1091:18" pos:end="1091:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="1097:9" pos:end="1097:85"><expr pos:start="1097:9" pos:end="1097:84"><name pos:start="1097:9" pos:end="1097:42"><name pos:start="1097:9" pos:end="1097:11">ctx</name><operator pos:start="1097:12" pos:end="1097:13">-&gt;</operator><name pos:start="1097:14" pos:end="1097:28">output_surfaces</name><index pos:start="1097:29" pos:end="1097:42">[<expr pos:start="1097:30" pos:end="1097:41"><name pos:start="1097:30" pos:end="1097:41">surfaceCount</name></expr>]</index></name><operator pos:start="1097:43" pos:end="1097:43">.</operator><name pos:start="1097:44" pos:end="1097:57">output_surface</name> <operator pos:start="1097:59" pos:end="1097:59">=</operator> <name pos:start="1097:61" pos:end="1097:84"><name pos:start="1097:61" pos:end="1097:68">allocOut</name><operator pos:start="1097:69" pos:end="1097:69">.</operator><name pos:start="1097:70" pos:end="1097:84">bitstreamBuffer</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1099:9" pos:end="1099:64"><expr pos:start="1099:9" pos:end="1099:63"><name pos:start="1099:9" pos:end="1099:42"><name pos:start="1099:9" pos:end="1099:11">ctx</name><operator pos:start="1099:12" pos:end="1099:13">-&gt;</operator><name pos:start="1099:14" pos:end="1099:28">output_surfaces</name><index pos:start="1099:29" pos:end="1099:42">[<expr pos:start="1099:30" pos:end="1099:41"><name pos:start="1099:30" pos:end="1099:41">surfaceCount</name></expr>]</index></name><operator pos:start="1099:43" pos:end="1099:43">.</operator><name pos:start="1099:44" pos:end="1099:47">size</name> <operator pos:start="1099:49" pos:end="1099:49">=</operator> <name pos:start="1099:51" pos:end="1099:63"><name pos:start="1099:51" pos:end="1099:58">allocOut</name><operator pos:start="1099:59" pos:end="1099:59">.</operator><name pos:start="1099:60" pos:end="1099:63">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1101:9" pos:end="1101:52"><expr pos:start="1101:9" pos:end="1101:51"><name pos:start="1101:9" pos:end="1101:42"><name pos:start="1101:9" pos:end="1101:11">ctx</name><operator pos:start="1101:12" pos:end="1101:13">-&gt;</operator><name pos:start="1101:14" pos:end="1101:28">output_surfaces</name><index pos:start="1101:29" pos:end="1101:42">[<expr pos:start="1101:30" pos:end="1101:41"><name pos:start="1101:30" pos:end="1101:41">surfaceCount</name></expr>]</index></name><operator pos:start="1101:43" pos:end="1101:43">.</operator><name pos:start="1101:44" pos:end="1101:47">busy</name> <operator pos:start="1101:49" pos:end="1101:49">=</operator> <literal type="number" pos:start="1101:51" pos:end="1101:51">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="1107:5" pos:end="1157:5"><if pos:start="1107:5" pos:end="1157:5">if <condition pos:start="1107:8" pos:end="1107:51">(<expr pos:start="1107:9" pos:end="1107:50"><name pos:start="1107:9" pos:end="1107:20"><name pos:start="1107:9" pos:end="1107:13">avctx</name><operator pos:start="1107:14" pos:end="1107:15">-&gt;</operator><name pos:start="1107:16" pos:end="1107:20">flags</name></name> <operator pos:start="1107:22" pos:end="1107:22">&amp;</operator> <name pos:start="1107:24" pos:end="1107:50">AV_CODEC_FLAG_GLOBAL_HEADER</name></expr>)</condition> <block pos:start="1107:53" pos:end="1157:5">{<block_content pos:start="1109:9" pos:end="1155:53">

        <decl_stmt pos:start="1109:9" pos:end="1109:29"><decl pos:start="1109:9" pos:end="1109:28"><type pos:start="1109:9" pos:end="1109:16"><name pos:start="1109:9" pos:end="1109:16">uint32_t</name></type> <name pos:start="1109:18" pos:end="1109:24">outSize</name> <init pos:start="1109:26" pos:end="1109:28">= <expr pos:start="1109:28" pos:end="1109:28"><literal type="number" pos:start="1109:28" pos:end="1109:28">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="1111:9" pos:end="1111:28"><decl pos:start="1111:9" pos:end="1111:27"><type pos:start="1111:9" pos:end="1111:12"><name pos:start="1111:9" pos:end="1111:12">char</name></type> <name pos:start="1111:14" pos:end="1111:27"><name pos:start="1111:14" pos:end="1111:22">tmpHeader</name><index pos:start="1111:23" pos:end="1111:27">[<expr pos:start="1111:24" pos:end="1111:26"><literal type="number" pos:start="1111:24" pos:end="1111:26">256</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="1113:9" pos:end="1113:54"><decl pos:start="1113:9" pos:end="1113:53"><type pos:start="1113:9" pos:end="1113:37"><name pos:start="1113:9" pos:end="1113:37">NV_ENC_SEQUENCE_PARAM_PAYLOAD</name></type> <name pos:start="1113:39" pos:end="1113:45">payload</name> <init pos:start="1113:47" pos:end="1113:53">= <expr pos:start="1113:49" pos:end="1113:53"><block pos:start="1113:49" pos:end="1113:53">{ <expr pos:start="1113:51" pos:end="1113:51"><literal type="number" pos:start="1113:51" pos:end="1113:51">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="1115:9" pos:end="1115:60"><expr pos:start="1115:9" pos:end="1115:59"><name pos:start="1115:9" pos:end="1115:23"><name pos:start="1115:9" pos:end="1115:15">payload</name><operator pos:start="1115:16" pos:end="1115:16">.</operator><name pos:start="1115:17" pos:end="1115:23">version</name></name> <operator pos:start="1115:25" pos:end="1115:25">=</operator> <name pos:start="1115:27" pos:end="1115:59">NV_ENC_SEQUENCE_PARAM_PAYLOAD_VER</name></expr>;</expr_stmt>



        <expr_stmt pos:start="1119:9" pos:end="1119:41"><expr pos:start="1119:9" pos:end="1119:40"><name pos:start="1119:9" pos:end="1119:28"><name pos:start="1119:9" pos:end="1119:15">payload</name><operator pos:start="1119:16" pos:end="1119:16">.</operator><name pos:start="1119:17" pos:end="1119:28">spsppsBuffer</name></name> <operator pos:start="1119:30" pos:end="1119:30">=</operator> <name pos:start="1119:32" pos:end="1119:40">tmpHeader</name></expr>;</expr_stmt>

        <expr_stmt pos:start="1121:9" pos:end="1121:49"><expr pos:start="1121:9" pos:end="1121:48"><name pos:start="1121:9" pos:end="1121:28"><name pos:start="1121:9" pos:end="1121:15">payload</name><operator pos:start="1121:16" pos:end="1121:16">.</operator><name pos:start="1121:17" pos:end="1121:28">inBufferSize</name></name> <operator pos:start="1121:30" pos:end="1121:30">=</operator> <sizeof pos:start="1121:32" pos:end="1121:48">sizeof<argument_list pos:start="1121:38" pos:end="1121:48">(<argument pos:start="1121:39" pos:end="1121:47"><expr pos:start="1121:39" pos:end="1121:47"><name pos:start="1121:39" pos:end="1121:47">tmpHeader</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="1123:9" pos:end="1123:48"><expr pos:start="1123:9" pos:end="1123:47"><name pos:start="1123:9" pos:end="1123:36"><name pos:start="1123:9" pos:end="1123:15">payload</name><operator pos:start="1123:16" pos:end="1123:16">.</operator><name pos:start="1123:17" pos:end="1123:36">outSPSPPSPayloadSize</name></name> <operator pos:start="1123:38" pos:end="1123:38">=</operator> <operator pos:start="1123:40" pos:end="1123:40">&amp;</operator><name pos:start="1123:41" pos:end="1123:47">outSize</name></expr>;</expr_stmt>



        <expr_stmt pos:start="1127:9" pos:end="1127:78"><expr pos:start="1127:9" pos:end="1127:77"><name pos:start="1127:9" pos:end="1127:17">nv_status</name> <operator pos:start="1127:19" pos:end="1127:19">=</operator> <call pos:start="1127:21" pos:end="1127:77"><name pos:start="1127:21" pos:end="1127:51"><name pos:start="1127:21" pos:end="1127:27">p_nvenc</name><operator pos:start="1127:28" pos:end="1127:29">-&gt;</operator><name pos:start="1127:30" pos:end="1127:51">nvEncGetSequenceParams</name></name><argument_list pos:start="1127:52" pos:end="1127:77">(<argument pos:start="1127:53" pos:end="1127:66"><expr pos:start="1127:53" pos:end="1127:66"><name pos:start="1127:53" pos:end="1127:66"><name pos:start="1127:53" pos:end="1127:55">ctx</name><operator pos:start="1127:56" pos:end="1127:57">-&gt;</operator><name pos:start="1127:58" pos:end="1127:66">nvencoder</name></name></expr></argument>, <argument pos:start="1127:69" pos:end="1127:76"><expr pos:start="1127:69" pos:end="1127:76"><operator pos:start="1127:69" pos:end="1127:69">&amp;</operator><name pos:start="1127:70" pos:end="1127:76">payload</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1129:9" pos:end="1135:9"><if pos:start="1129:9" pos:end="1135:9">if <condition pos:start="1129:12" pos:end="1129:40">(<expr pos:start="1129:13" pos:end="1129:39"><name pos:start="1129:13" pos:end="1129:21">nv_status</name> <operator pos:start="1129:23" pos:end="1129:24">!=</operator> <name pos:start="1129:26" pos:end="1129:39">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="1129:42" pos:end="1135:9">{<block_content pos:start="1131:13" pos:end="1133:23">

            <expr_stmt pos:start="1131:13" pos:end="1131:70"><expr pos:start="1131:13" pos:end="1131:69"><call pos:start="1131:13" pos:end="1131:69"><name pos:start="1131:13" pos:end="1131:18">av_log</name><argument_list pos:start="1131:19" pos:end="1131:69">(<argument pos:start="1131:20" pos:end="1131:24"><expr pos:start="1131:20" pos:end="1131:24"><name pos:start="1131:20" pos:end="1131:24">avctx</name></expr></argument>, <argument pos:start="1131:27" pos:end="1131:38"><expr pos:start="1131:27" pos:end="1131:38"><name pos:start="1131:27" pos:end="1131:38">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="1131:41" pos:end="1131:68"><expr pos:start="1131:41" pos:end="1131:68"><literal type="string" pos:start="1131:41" pos:end="1131:68">"GetSequenceParams failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1133:13" pos:end="1133:23">goto <name pos:start="1133:18" pos:end="1133:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="1139:9" pos:end="1139:40"><expr pos:start="1139:9" pos:end="1139:39"><name pos:start="1139:9" pos:end="1139:29"><name pos:start="1139:9" pos:end="1139:13">avctx</name><operator pos:start="1139:14" pos:end="1139:15">-&gt;</operator><name pos:start="1139:16" pos:end="1139:29">extradata_size</name></name> <operator pos:start="1139:31" pos:end="1139:31">=</operator> <name pos:start="1139:33" pos:end="1139:39">outSize</name></expr>;</expr_stmt>

        <expr_stmt pos:start="1141:9" pos:end="1141:78"><expr pos:start="1141:9" pos:end="1141:77"><name pos:start="1141:9" pos:end="1141:24"><name pos:start="1141:9" pos:end="1141:13">avctx</name><operator pos:start="1141:14" pos:end="1141:15">-&gt;</operator><name pos:start="1141:16" pos:end="1141:24">extradata</name></name> <operator pos:start="1141:26" pos:end="1141:26">=</operator> <call pos:start="1141:28" pos:end="1141:77"><name pos:start="1141:28" pos:end="1141:37">av_mallocz</name><argument_list pos:start="1141:38" pos:end="1141:77">(<argument pos:start="1141:39" pos:end="1141:76"><expr pos:start="1141:39" pos:end="1141:76"><name pos:start="1141:39" pos:end="1141:45">outSize</name> <operator pos:start="1141:47" pos:end="1141:47">+</operator> <name pos:start="1141:49" pos:end="1141:76">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="1145:9" pos:end="1151:9"><if pos:start="1145:9" pos:end="1151:9">if <condition pos:start="1145:12" pos:end="1145:30">(<expr pos:start="1145:13" pos:end="1145:29"><operator pos:start="1145:13" pos:end="1145:13">!</operator><name pos:start="1145:14" pos:end="1145:29"><name pos:start="1145:14" pos:end="1145:18">avctx</name><operator pos:start="1145:19" pos:end="1145:20">-&gt;</operator><name pos:start="1145:21" pos:end="1145:29">extradata</name></name></expr>)</condition> <block pos:start="1145:32" pos:end="1151:9">{<block_content pos:start="1147:13" pos:end="1149:23">

            <expr_stmt pos:start="1147:13" pos:end="1147:34"><expr pos:start="1147:13" pos:end="1147:33"><name pos:start="1147:13" pos:end="1147:15">res</name> <operator pos:start="1147:17" pos:end="1147:17">=</operator> <call pos:start="1147:19" pos:end="1147:33"><name pos:start="1147:19" pos:end="1147:25">AVERROR</name><argument_list pos:start="1147:26" pos:end="1147:33">(<argument pos:start="1147:27" pos:end="1147:32"><expr pos:start="1147:27" pos:end="1147:32"><name pos:start="1147:27" pos:end="1147:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1149:13" pos:end="1149:23">goto <name pos:start="1149:18" pos:end="1149:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="1155:9" pos:end="1155:53"><expr pos:start="1155:9" pos:end="1155:52"><call pos:start="1155:9" pos:end="1155:52"><name pos:start="1155:9" pos:end="1155:14">memcpy</name><argument_list pos:start="1155:15" pos:end="1155:52">(<argument pos:start="1155:16" pos:end="1155:31"><expr pos:start="1155:16" pos:end="1155:31"><name pos:start="1155:16" pos:end="1155:31"><name pos:start="1155:16" pos:end="1155:20">avctx</name><operator pos:start="1155:21" pos:end="1155:22">-&gt;</operator><name pos:start="1155:23" pos:end="1155:31">extradata</name></name></expr></argument>, <argument pos:start="1155:34" pos:end="1155:42"><expr pos:start="1155:34" pos:end="1155:42"><name pos:start="1155:34" pos:end="1155:42">tmpHeader</name></expr></argument>, <argument pos:start="1155:45" pos:end="1155:51"><expr pos:start="1155:45" pos:end="1155:51"><name pos:start="1155:45" pos:end="1155:51">outSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1161:5" pos:end="1163:32"><if pos:start="1161:5" pos:end="1163:32">if <condition pos:start="1161:8" pos:end="1161:46">(<expr pos:start="1161:9" pos:end="1161:45"><name pos:start="1161:9" pos:end="1161:41"><name pos:start="1161:9" pos:end="1161:11">ctx</name><operator pos:start="1161:12" pos:end="1161:13">-&gt;</operator><name pos:start="1161:14" pos:end="1161:26">encode_config</name><operator pos:start="1161:27" pos:end="1161:27">.</operator><name pos:start="1161:28" pos:end="1161:41">frameIntervalP</name></name> <operator pos:start="1161:43" pos:end="1161:43">&gt;</operator> <literal type="number" pos:start="1161:45" pos:end="1161:45">1</literal></expr>)</condition><block type="pseudo" pos:start="1163:9" pos:end="1163:32"><block_content pos:start="1163:9" pos:end="1163:32">

        <expr_stmt pos:start="1163:9" pos:end="1163:32"><expr pos:start="1163:9" pos:end="1163:31"><name pos:start="1163:9" pos:end="1163:27"><name pos:start="1163:9" pos:end="1163:13">avctx</name><operator pos:start="1163:14" pos:end="1163:15">-&gt;</operator><name pos:start="1163:16" pos:end="1163:27">has_b_frames</name></name> <operator pos:start="1163:29" pos:end="1163:29">=</operator> <literal type="number" pos:start="1163:31" pos:end="1163:31">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="1167:5" pos:end="1169:69"><if pos:start="1167:5" pos:end="1169:69">if <condition pos:start="1167:8" pos:end="1167:55">(<expr pos:start="1167:9" pos:end="1167:54"><name pos:start="1167:9" pos:end="1167:50"><name pos:start="1167:9" pos:end="1167:11">ctx</name><operator pos:start="1167:12" pos:end="1167:13">-&gt;</operator><name pos:start="1167:14" pos:end="1167:26">encode_config</name><operator pos:start="1167:27" pos:end="1167:27">.</operator><name pos:start="1167:28" pos:end="1167:35">rcParams</name><operator pos:start="1167:36" pos:end="1167:36">.</operator><name pos:start="1167:37" pos:end="1167:50">averageBitRate</name></name> <operator pos:start="1167:52" pos:end="1167:52">&gt;</operator> <literal type="number" pos:start="1167:54" pos:end="1167:54">0</literal></expr>)</condition><block type="pseudo" pos:start="1169:9" pos:end="1169:69"><block_content pos:start="1169:9" pos:end="1169:69">

        <expr_stmt pos:start="1169:9" pos:end="1169:69"><expr pos:start="1169:9" pos:end="1169:68"><name pos:start="1169:9" pos:end="1169:23"><name pos:start="1169:9" pos:end="1169:13">avctx</name><operator pos:start="1169:14" pos:end="1169:15">-&gt;</operator><name pos:start="1169:16" pos:end="1169:23">bit_rate</name></name> <operator pos:start="1169:25" pos:end="1169:25">=</operator> <name pos:start="1169:27" pos:end="1169:68"><name pos:start="1169:27" pos:end="1169:29">ctx</name><operator pos:start="1169:30" pos:end="1169:31">-&gt;</operator><name pos:start="1169:32" pos:end="1169:44">encode_config</name><operator pos:start="1169:45" pos:end="1169:45">.</operator><name pos:start="1169:46" pos:end="1169:53">rcParams</name><operator pos:start="1169:54" pos:end="1169:54">.</operator><name pos:start="1169:55" pos:end="1169:68">averageBitRate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="1173:5" pos:end="1173:44"><expr pos:start="1173:5" pos:end="1173:43"><name pos:start="1173:5" pos:end="1173:13">cpb_props</name> <operator pos:start="1173:15" pos:end="1173:15">=</operator> <call pos:start="1173:17" pos:end="1173:43"><name pos:start="1173:17" pos:end="1173:36">ff_add_cpb_side_data</name><argument_list pos:start="1173:37" pos:end="1173:43">(<argument pos:start="1173:38" pos:end="1173:42"><expr pos:start="1173:38" pos:end="1173:42"><name pos:start="1173:38" pos:end="1173:42">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="1175:5" pos:end="1177:31"><if pos:start="1175:5" pos:end="1177:31">if <condition pos:start="1175:8" pos:end="1175:19">(<expr pos:start="1175:9" pos:end="1175:18"><operator pos:start="1175:9" pos:end="1175:9">!</operator><name pos:start="1175:10" pos:end="1175:18">cpb_props</name></expr>)</condition><block type="pseudo" pos:start="1177:9" pos:end="1177:31"><block_content pos:start="1177:9" pos:end="1177:31">

        <return pos:start="1177:9" pos:end="1177:31">return <expr pos:start="1177:16" pos:end="1177:30"><call pos:start="1177:16" pos:end="1177:30"><name pos:start="1177:16" pos:end="1177:22">AVERROR</name><argument_list pos:start="1177:23" pos:end="1177:30">(<argument pos:start="1177:24" pos:end="1177:29"><expr pos:start="1177:24" pos:end="1177:29"><name pos:start="1177:24" pos:end="1177:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="1179:5" pos:end="1179:68"><expr pos:start="1179:5" pos:end="1179:67"><name pos:start="1179:5" pos:end="1179:26"><name pos:start="1179:5" pos:end="1179:13">cpb_props</name><operator pos:start="1179:14" pos:end="1179:15">-&gt;</operator><name pos:start="1179:16" pos:end="1179:26">max_bitrate</name></name> <operator pos:start="1179:28" pos:end="1179:28">=</operator> <name pos:start="1179:30" pos:end="1179:67"><name pos:start="1179:30" pos:end="1179:32">ctx</name><operator pos:start="1179:33" pos:end="1179:34">-&gt;</operator><name pos:start="1179:35" pos:end="1179:47">encode_config</name><operator pos:start="1179:48" pos:end="1179:48">.</operator><name pos:start="1179:49" pos:end="1179:56">rcParams</name><operator pos:start="1179:57" pos:end="1179:57">.</operator><name pos:start="1179:58" pos:end="1179:67">maxBitRate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="1181:5" pos:end="1181:45"><expr pos:start="1181:5" pos:end="1181:44"><name pos:start="1181:5" pos:end="1181:26"><name pos:start="1181:5" pos:end="1181:13">cpb_props</name><operator pos:start="1181:14" pos:end="1181:15">-&gt;</operator><name pos:start="1181:16" pos:end="1181:26">avg_bitrate</name></name> <operator pos:start="1181:28" pos:end="1181:28">=</operator> <name pos:start="1181:30" pos:end="1181:44"><name pos:start="1181:30" pos:end="1181:34">avctx</name><operator pos:start="1181:35" pos:end="1181:36">-&gt;</operator><name pos:start="1181:37" pos:end="1181:44">bit_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="1183:5" pos:end="1183:71"><expr pos:start="1183:5" pos:end="1183:70"><name pos:start="1183:5" pos:end="1183:26"><name pos:start="1183:5" pos:end="1183:13">cpb_props</name><operator pos:start="1183:14" pos:end="1183:15">-&gt;</operator><name pos:start="1183:16" pos:end="1183:26">buffer_size</name></name> <operator pos:start="1183:28" pos:end="1183:28">=</operator> <name pos:start="1183:30" pos:end="1183:70"><name pos:start="1183:30" pos:end="1183:32">ctx</name><operator pos:start="1183:33" pos:end="1183:34">-&gt;</operator><name pos:start="1183:35" pos:end="1183:47">encode_config</name><operator pos:start="1183:48" pos:end="1183:48">.</operator><name pos:start="1183:49" pos:end="1183:56">rcParams</name><operator pos:start="1183:57" pos:end="1183:57">.</operator><name pos:start="1183:58" pos:end="1183:70">vbvBufferSize</name></name></expr>;</expr_stmt>



    <return pos:start="1187:5" pos:end="1187:13">return <expr pos:start="1187:12" pos:end="1187:12"><literal type="number" pos:start="1187:12" pos:end="1187:12">0</literal></expr>;</return>



<label pos:start="1191:1" pos:end="1191:6"><name pos:start="1191:1" pos:end="1191:5">error</name>:</label>



    <for pos:start="1195:5" pos:end="1203:5">for <control pos:start="1195:9" pos:end="1195:38">(<init pos:start="1195:10" pos:end="1195:15"><expr pos:start="1195:10" pos:end="1195:14"><name pos:start="1195:10" pos:end="1195:10">i</name> <operator pos:start="1195:12" pos:end="1195:12">=</operator> <literal type="number" pos:start="1195:14" pos:end="1195:14">0</literal></expr>;</init> <condition pos:start="1195:17" pos:end="1195:33"><expr pos:start="1195:17" pos:end="1195:32"><name pos:start="1195:17" pos:end="1195:17">i</name> <operator pos:start="1195:19" pos:end="1195:19">&lt;</operator> <name pos:start="1195:21" pos:end="1195:32">surfaceCount</name></expr>;</condition> <incr pos:start="1195:35" pos:end="1195:37"><expr pos:start="1195:35" pos:end="1195:37"><operator pos:start="1195:35" pos:end="1195:36">++</operator><name pos:start="1195:37" pos:end="1195:37">i</name></expr></incr>)</control> <block pos:start="1195:40" pos:end="1203:5">{<block_content pos:start="1197:9" pos:end="1201:105">

        <expr_stmt pos:start="1197:9" pos:end="1197:95"><expr pos:start="1197:9" pos:end="1197:94"><call pos:start="1197:9" pos:end="1197:94"><name pos:start="1197:9" pos:end="1197:40"><name pos:start="1197:9" pos:end="1197:15">p_nvenc</name><operator pos:start="1197:16" pos:end="1197:17">-&gt;</operator><name pos:start="1197:18" pos:end="1197:40">nvEncDestroyInputBuffer</name></name><argument_list pos:start="1197:41" pos:end="1197:94">(<argument pos:start="1197:42" pos:end="1197:55"><expr pos:start="1197:42" pos:end="1197:55"><name pos:start="1197:42" pos:end="1197:55"><name pos:start="1197:42" pos:end="1197:44">ctx</name><operator pos:start="1197:45" pos:end="1197:46">-&gt;</operator><name pos:start="1197:47" pos:end="1197:55">nvencoder</name></name></expr></argument>, <argument pos:start="1197:58" pos:end="1197:93"><expr pos:start="1197:58" pos:end="1197:93"><name pos:start="1197:58" pos:end="1197:79"><name pos:start="1197:58" pos:end="1197:60">ctx</name><operator pos:start="1197:61" pos:end="1197:62">-&gt;</operator><name pos:start="1197:63" pos:end="1197:76">input_surfaces</name><index pos:start="1197:77" pos:end="1197:79">[<expr pos:start="1197:78" pos:end="1197:78"><name pos:start="1197:78" pos:end="1197:78">i</name></expr>]</index></name><operator pos:start="1197:80" pos:end="1197:80">.</operator><name pos:start="1197:81" pos:end="1197:93">input_surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1199:9" pos:end="1201:105"><if pos:start="1199:9" pos:end="1201:105">if <condition pos:start="1199:12" pos:end="1199:51">(<expr pos:start="1199:13" pos:end="1199:50"><name pos:start="1199:13" pos:end="1199:35"><name pos:start="1199:13" pos:end="1199:15">ctx</name><operator pos:start="1199:16" pos:end="1199:17">-&gt;</operator><name pos:start="1199:18" pos:end="1199:32">output_surfaces</name><index pos:start="1199:33" pos:end="1199:35">[<expr pos:start="1199:34" pos:end="1199:34"><name pos:start="1199:34" pos:end="1199:34">i</name></expr>]</index></name><operator pos:start="1199:36" pos:end="1199:36">.</operator><name pos:start="1199:37" pos:end="1199:50">output_surface</name></expr>)</condition><block type="pseudo" pos:start="1201:13" pos:end="1201:105"><block_content pos:start="1201:13" pos:end="1201:105">

            <expr_stmt pos:start="1201:13" pos:end="1201:105"><expr pos:start="1201:13" pos:end="1201:104"><call pos:start="1201:13" pos:end="1201:104"><name pos:start="1201:13" pos:end="1201:48"><name pos:start="1201:13" pos:end="1201:19">p_nvenc</name><operator pos:start="1201:20" pos:end="1201:21">-&gt;</operator><name pos:start="1201:22" pos:end="1201:48">nvEncDestroyBitstreamBuffer</name></name><argument_list pos:start="1201:49" pos:end="1201:104">(<argument pos:start="1201:50" pos:end="1201:63"><expr pos:start="1201:50" pos:end="1201:63"><name pos:start="1201:50" pos:end="1201:63"><name pos:start="1201:50" pos:end="1201:52">ctx</name><operator pos:start="1201:53" pos:end="1201:54">-&gt;</operator><name pos:start="1201:55" pos:end="1201:63">nvencoder</name></name></expr></argument>, <argument pos:start="1201:66" pos:end="1201:103"><expr pos:start="1201:66" pos:end="1201:103"><name pos:start="1201:66" pos:end="1201:88"><name pos:start="1201:66" pos:end="1201:68">ctx</name><operator pos:start="1201:69" pos:end="1201:70">-&gt;</operator><name pos:start="1201:71" pos:end="1201:85">output_surfaces</name><index pos:start="1201:86" pos:end="1201:88">[<expr pos:start="1201:87" pos:end="1201:87"><name pos:start="1201:87" pos:end="1201:87">i</name></expr>]</index></name><operator pos:start="1201:89" pos:end="1201:89">.</operator><name pos:start="1201:90" pos:end="1201:103">output_surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="1207:5" pos:end="1209:53"><if pos:start="1207:5" pos:end="1209:53">if <condition pos:start="1207:8" pos:end="1207:23">(<expr pos:start="1207:9" pos:end="1207:22"><name pos:start="1207:9" pos:end="1207:22"><name pos:start="1207:9" pos:end="1207:11">ctx</name><operator pos:start="1207:12" pos:end="1207:13">-&gt;</operator><name pos:start="1207:14" pos:end="1207:22">nvencoder</name></name></expr>)</condition><block type="pseudo" pos:start="1209:9" pos:end="1209:53"><block_content pos:start="1209:9" pos:end="1209:53">

        <expr_stmt pos:start="1209:9" pos:end="1209:53"><expr pos:start="1209:9" pos:end="1209:52"><call pos:start="1209:9" pos:end="1209:52"><name pos:start="1209:9" pos:end="1209:36"><name pos:start="1209:9" pos:end="1209:15">p_nvenc</name><operator pos:start="1209:16" pos:end="1209:17">-&gt;</operator><name pos:start="1209:18" pos:end="1209:36">nvEncDestroyEncoder</name></name><argument_list pos:start="1209:37" pos:end="1209:52">(<argument pos:start="1209:38" pos:end="1209:51"><expr pos:start="1209:38" pos:end="1209:51"><name pos:start="1209:38" pos:end="1209:51"><name pos:start="1209:38" pos:end="1209:40">ctx</name><operator pos:start="1209:41" pos:end="1209:42">-&gt;</operator><name pos:start="1209:43" pos:end="1209:51">nvencoder</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="1213:5" pos:end="1215:47"><if pos:start="1213:5" pos:end="1215:47">if <condition pos:start="1213:8" pos:end="1213:24">(<expr pos:start="1213:9" pos:end="1213:23"><name pos:start="1213:9" pos:end="1213:23"><name pos:start="1213:9" pos:end="1213:11">ctx</name><operator pos:start="1213:12" pos:end="1213:13">-&gt;</operator><name pos:start="1213:14" pos:end="1213:23">cu_context</name></name></expr>)</condition><block type="pseudo" pos:start="1215:9" pos:end="1215:47"><block_content pos:start="1215:9" pos:end="1215:47">

        <expr_stmt pos:start="1215:9" pos:end="1215:47"><expr pos:start="1215:9" pos:end="1215:46"><call pos:start="1215:9" pos:end="1215:46"><name pos:start="1215:9" pos:end="1215:29"><name pos:start="1215:9" pos:end="1215:13">dl_fn</name><operator pos:start="1215:14" pos:end="1215:15">-&gt;</operator><name pos:start="1215:16" pos:end="1215:29">cu_ctx_destroy</name></name><argument_list pos:start="1215:30" pos:end="1215:46">(<argument pos:start="1215:31" pos:end="1215:45"><expr pos:start="1215:31" pos:end="1215:45"><name pos:start="1215:31" pos:end="1215:45"><name pos:start="1215:31" pos:end="1215:33">ctx</name><operator pos:start="1215:34" pos:end="1215:35">-&gt;</operator><name pos:start="1215:36" pos:end="1215:45">cu_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="1219:5" pos:end="1219:30"><expr pos:start="1219:5" pos:end="1219:29"><call pos:start="1219:5" pos:end="1219:29"><name pos:start="1219:5" pos:end="1219:22">nvenc_unload_nvenc</name><argument_list pos:start="1219:23" pos:end="1219:29">(<argument pos:start="1219:24" pos:end="1219:28"><expr pos:start="1219:24" pos:end="1219:28"><name pos:start="1219:24" pos:end="1219:28">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="1223:5" pos:end="1223:26"><expr pos:start="1223:5" pos:end="1223:25"><name pos:start="1223:5" pos:end="1223:18"><name pos:start="1223:5" pos:end="1223:7">ctx</name><operator pos:start="1223:8" pos:end="1223:9">-&gt;</operator><name pos:start="1223:10" pos:end="1223:18">nvencoder</name></name> <operator pos:start="1223:20" pos:end="1223:20">=</operator> <name pos:start="1223:22" pos:end="1223:25">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="1225:5" pos:end="1225:27"><expr pos:start="1225:5" pos:end="1225:26"><name pos:start="1225:5" pos:end="1225:19"><name pos:start="1225:5" pos:end="1225:7">ctx</name><operator pos:start="1225:8" pos:end="1225:9">-&gt;</operator><name pos:start="1225:10" pos:end="1225:19">cu_context</name></name> <operator pos:start="1225:21" pos:end="1225:21">=</operator> <name pos:start="1225:23" pos:end="1225:26">NULL</name></expr>;</expr_stmt>



    <return pos:start="1229:5" pos:end="1229:15">return <expr pos:start="1229:12" pos:end="1229:14"><name pos:start="1229:12" pos:end="1229:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
