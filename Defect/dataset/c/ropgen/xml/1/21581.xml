<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21581.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">decode_subframe_fixed</name><parameter_list pos:start="1:33" pos:end="3:57">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:44">FLACContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:65"><decl pos:start="1:50" pos:end="1:65"><type pos:start="1:50" pos:end="1:65"><name pos:start="1:50" pos:end="1:56">int32_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:65">decoded</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:47"><decl pos:start="3:34" pos:end="3:47"><type pos:start="3:34" pos:end="3:47"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:47">pred_order</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:56"><decl pos:start="3:50" pos:end="3:56"><type pos:start="3:50" pos:end="3:56"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:56">bps</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:13">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:23">blocksize</name> <init pos:start="7:25" pos:end="7:38">= <expr pos:start="7:27" pos:end="7:38"><name pos:start="7:27" pos:end="7:38"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:38">blocksize</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:68"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:22">av_uninit</name><argument_list pos:start="9:23" pos:end="9:25">(<argument pos:start="9:24" pos:end="9:24"><expr pos:start="9:24" pos:end="9:24"><name pos:start="9:24" pos:end="9:24">a</name></expr></argument>)</argument_list></decl>, <decl pos:start="9:28" pos:end="9:39"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:28" pos:end="9:36">av_uninit</name><argument_list pos:start="9:37" pos:end="9:39">(<argument pos:start="9:38" pos:end="9:38"><expr pos:start="9:38" pos:end="9:38"><name pos:start="9:38" pos:end="9:38">b</name></expr></argument>)</argument_list></decl>, <decl pos:start="9:42" pos:end="9:53"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:42" pos:end="9:50">av_uninit</name><argument_list pos:start="9:51" pos:end="9:53">(<argument pos:start="9:52" pos:end="9:52"><expr pos:start="9:52" pos:end="9:52"><name pos:start="9:52" pos:end="9:52">c</name></expr></argument>)</argument_list></decl>, <decl pos:start="9:56" pos:end="9:67"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:56" pos:end="9:64">av_uninit</name><argument_list pos:start="9:65" pos:end="9:67">(<argument pos:start="9:66" pos:end="9:66"><expr pos:start="9:66" pos:end="9:66"><name pos:start="9:66" pos:end="9:66">d</name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:25">/* warm up samples */</comment>

    <for pos:start="19:5" pos:end="23:5">for <control pos:start="19:9" pos:end="19:36">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:31"><expr pos:start="19:17" pos:end="19:30"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:30">pred_order</name></expr>;</condition> <incr pos:start="19:33" pos:end="19:35"><expr pos:start="19:33" pos:end="19:35"><name pos:start="19:33" pos:end="19:33">i</name><operator pos:start="19:34" pos:end="19:35">++</operator></expr></incr>)</control> <block pos:start="19:38" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:49">

        <expr_stmt pos:start="21:9" pos:end="21:49"><expr pos:start="21:9" pos:end="21:48"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:15">decoded</name><index pos:start="21:16" pos:end="21:18">[<expr pos:start="21:17" pos:end="21:17"><name pos:start="21:17" pos:end="21:17">i</name></expr>]</index></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <call pos:start="21:22" pos:end="21:48"><name pos:start="21:22" pos:end="21:35">get_sbits_long</name><argument_list pos:start="21:36" pos:end="21:48">(<argument pos:start="21:37" pos:end="21:42"><expr pos:start="21:37" pos:end="21:42"><operator pos:start="21:37" pos:end="21:37">&amp;</operator><name pos:start="21:38" pos:end="21:42"><name pos:start="21:38" pos:end="21:38">s</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:42">gb</name></name></expr></argument>, <argument pos:start="21:45" pos:end="21:47"><expr pos:start="21:45" pos:end="21:47"><name pos:start="21:45" pos:end="21:47">bps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="27:5" pos:end="29:19"><if pos:start="27:5" pos:end="29:19">if <condition pos:start="27:8" pos:end="27:61">(<expr pos:start="27:9" pos:end="27:60"><operator pos:start="27:9" pos:end="27:9">(</operator><name pos:start="27:10" pos:end="27:12">ret</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:55"><name pos:start="27:16" pos:end="27:31">decode_residuals</name><argument_list pos:start="27:32" pos:end="27:55">(<argument pos:start="27:33" pos:end="27:33"><expr pos:start="27:33" pos:end="27:33"><name pos:start="27:33" pos:end="27:33">s</name></expr></argument>, <argument pos:start="27:36" pos:end="27:42"><expr pos:start="27:36" pos:end="27:42"><name pos:start="27:36" pos:end="27:42">decoded</name></expr></argument>, <argument pos:start="27:45" pos:end="27:54"><expr pos:start="27:45" pos:end="27:54"><name pos:start="27:45" pos:end="27:54">pred_order</name></expr></argument>)</argument_list></call><operator pos:start="27:56" pos:end="27:56">)</operator> <operator pos:start="27:58" pos:end="27:58">&lt;</operator> <literal type="number" pos:start="27:60" pos:end="27:60">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:19"><block_content pos:start="29:9" pos:end="29:19">

        <return pos:start="29:9" pos:end="29:19">return <expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="35:34"><if pos:start="33:5" pos:end="35:34">if <condition pos:start="33:8" pos:end="33:23">(<expr pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:18">pred_order</name> <operator pos:start="33:20" pos:end="33:20">&gt;</operator> <literal type="number" pos:start="33:22" pos:end="33:22">0</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:34"><block_content pos:start="35:9" pos:end="35:34">

        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:9">a</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <name pos:start="35:13" pos:end="35:33"><name pos:start="35:13" pos:end="35:19">decoded</name><index pos:start="35:20" pos:end="35:33">[<expr pos:start="35:21" pos:end="35:32"><name pos:start="35:21" pos:end="35:30">pred_order</name><operator pos:start="35:31" pos:end="35:31">-</operator><literal type="number" pos:start="35:32" pos:end="35:32">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="39:38"><if pos:start="37:5" pos:end="39:38">if <condition pos:start="37:8" pos:end="37:23">(<expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:18">pred_order</name> <operator pos:start="37:20" pos:end="37:20">&gt;</operator> <literal type="number" pos:start="37:22" pos:end="37:22">1</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:38"><block_content pos:start="39:9" pos:end="39:38">

        <expr_stmt pos:start="39:9" pos:end="39:38"><expr pos:start="39:9" pos:end="39:37"><name pos:start="39:9" pos:end="39:9">b</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <name pos:start="39:13" pos:end="39:13">a</name> <operator pos:start="39:15" pos:end="39:15">-</operator> <name pos:start="39:17" pos:end="39:37"><name pos:start="39:17" pos:end="39:23">decoded</name><index pos:start="39:24" pos:end="39:37">[<expr pos:start="39:25" pos:end="39:36"><name pos:start="39:25" pos:end="39:34">pred_order</name><operator pos:start="39:35" pos:end="39:35">-</operator><literal type="number" pos:start="39:36" pos:end="39:36">2</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="43:62"><if pos:start="41:5" pos:end="43:62">if <condition pos:start="41:8" pos:end="41:23">(<expr pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:18">pred_order</name> <operator pos:start="41:20" pos:end="41:20">&gt;</operator> <literal type="number" pos:start="41:22" pos:end="41:22">2</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:62"><block_content pos:start="43:9" pos:end="43:62">

        <expr_stmt pos:start="43:9" pos:end="43:62"><expr pos:start="43:9" pos:end="43:61"><name pos:start="43:9" pos:end="43:9">c</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <name pos:start="43:13" pos:end="43:13">b</name> <operator pos:start="43:15" pos:end="43:15">-</operator> <name pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:23">decoded</name><index pos:start="43:24" pos:end="43:37">[<expr pos:start="43:25" pos:end="43:36"><name pos:start="43:25" pos:end="43:34">pred_order</name><operator pos:start="43:35" pos:end="43:35">-</operator><literal type="number" pos:start="43:36" pos:end="43:36">2</literal></expr>]</index></name> <operator pos:start="43:39" pos:end="43:39">+</operator> <name pos:start="43:41" pos:end="43:61"><name pos:start="43:41" pos:end="43:47">decoded</name><index pos:start="43:48" pos:end="43:61">[<expr pos:start="43:49" pos:end="43:60"><name pos:start="43:49" pos:end="43:58">pred_order</name><operator pos:start="43:59" pos:end="43:59">-</operator><literal type="number" pos:start="43:60" pos:end="43:60">3</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="47:88"><if pos:start="45:5" pos:end="47:88">if <condition pos:start="45:8" pos:end="45:23">(<expr pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:18">pred_order</name> <operator pos:start="45:20" pos:end="45:20">&gt;</operator> <literal type="number" pos:start="45:22" pos:end="45:22">3</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:88"><block_content pos:start="47:9" pos:end="47:88">

        <expr_stmt pos:start="47:9" pos:end="47:88"><expr pos:start="47:9" pos:end="47:87"><name pos:start="47:9" pos:end="47:9">d</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <name pos:start="47:13" pos:end="47:13">c</name> <operator pos:start="47:15" pos:end="47:15">-</operator> <name pos:start="47:17" pos:end="47:37"><name pos:start="47:17" pos:end="47:23">decoded</name><index pos:start="47:24" pos:end="47:37">[<expr pos:start="47:25" pos:end="47:36"><name pos:start="47:25" pos:end="47:34">pred_order</name><operator pos:start="47:35" pos:end="47:35">-</operator><literal type="number" pos:start="47:36" pos:end="47:36">2</literal></expr>]</index></name> <operator pos:start="47:39" pos:end="47:39">+</operator> <literal type="number" pos:start="47:41" pos:end="47:41">2</literal><operator pos:start="47:42" pos:end="47:42">*</operator><name pos:start="47:43" pos:end="47:63"><name pos:start="47:43" pos:end="47:49">decoded</name><index pos:start="47:50" pos:end="47:63">[<expr pos:start="47:51" pos:end="47:62"><name pos:start="47:51" pos:end="47:60">pred_order</name><operator pos:start="47:61" pos:end="47:61">-</operator><literal type="number" pos:start="47:62" pos:end="47:62">3</literal></expr>]</index></name> <operator pos:start="47:65" pos:end="47:65">-</operator> <name pos:start="47:67" pos:end="47:87"><name pos:start="47:67" pos:end="47:73">decoded</name><index pos:start="47:74" pos:end="47:87">[<expr pos:start="47:75" pos:end="47:86"><name pos:start="47:75" pos:end="47:84">pred_order</name><operator pos:start="47:85" pos:end="47:85">-</operator><literal type="number" pos:start="47:86" pos:end="47:86">4</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <switch pos:start="51:5" pos:end="95:5">switch <condition pos:start="51:12" pos:end="51:23">(<expr pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:22">pred_order</name></expr>)</condition> <block pos:start="51:25" pos:end="95:5">{<block_content pos:start="53:5" pos:end="93:35">

    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">0</literal></expr>:</case>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:11">case <expr pos:start="57:10" pos:end="57:10"><literal type="number" pos:start="57:10" pos:end="57:10">1</literal></expr>:</case>

        <for pos:start="59:9" pos:end="61:41">for <control pos:start="59:13" pos:end="59:48">(<init pos:start="59:14" pos:end="59:28"><expr pos:start="59:14" pos:end="59:27"><name pos:start="59:14" pos:end="59:14">i</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <name pos:start="59:18" pos:end="59:27">pred_order</name></expr>;</init> <condition pos:start="59:30" pos:end="59:43"><expr pos:start="59:30" pos:end="59:42"><name pos:start="59:30" pos:end="59:30">i</name> <operator pos:start="59:32" pos:end="59:32">&lt;</operator> <name pos:start="59:34" pos:end="59:42">blocksize</name></expr>;</condition> <incr pos:start="59:45" pos:end="59:47"><expr pos:start="59:45" pos:end="59:47"><name pos:start="59:45" pos:end="59:45">i</name><operator pos:start="59:46" pos:end="59:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="61:13" pos:end="61:41"><block_content pos:start="61:13" pos:end="61:41">

            <expr_stmt pos:start="61:13" pos:end="61:41"><expr pos:start="61:13" pos:end="61:40"><name pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:19">decoded</name><index pos:start="61:20" pos:end="61:22">[<expr pos:start="61:21" pos:end="61:21"><name pos:start="61:21" pos:end="61:21">i</name></expr>]</index></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <name pos:start="61:26" pos:end="61:26">a</name> <operator pos:start="61:28" pos:end="61:29">+=</operator> <name pos:start="61:31" pos:end="61:40"><name pos:start="61:31" pos:end="61:37">decoded</name><index pos:start="61:38" pos:end="61:40">[<expr pos:start="61:39" pos:end="61:39"><name pos:start="61:39" pos:end="61:39">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <case pos:start="65:5" pos:end="65:11">case <expr pos:start="65:10" pos:end="65:10"><literal type="number" pos:start="65:10" pos:end="65:10">2</literal></expr>:</case>

        <for pos:start="67:9" pos:end="69:46">for <control pos:start="67:13" pos:end="67:48">(<init pos:start="67:14" pos:end="67:28"><expr pos:start="67:14" pos:end="67:27"><name pos:start="67:14" pos:end="67:14">i</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:27">pred_order</name></expr>;</init> <condition pos:start="67:30" pos:end="67:43"><expr pos:start="67:30" pos:end="67:42"><name pos:start="67:30" pos:end="67:30">i</name> <operator pos:start="67:32" pos:end="67:32">&lt;</operator> <name pos:start="67:34" pos:end="67:42">blocksize</name></expr>;</condition> <incr pos:start="67:45" pos:end="67:47"><expr pos:start="67:45" pos:end="67:47"><name pos:start="67:45" pos:end="67:45">i</name><operator pos:start="67:46" pos:end="67:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="69:13" pos:end="69:46"><block_content pos:start="69:13" pos:end="69:46">

            <expr_stmt pos:start="69:13" pos:end="69:46"><expr pos:start="69:13" pos:end="69:45"><name pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:19">decoded</name><index pos:start="69:20" pos:end="69:22">[<expr pos:start="69:21" pos:end="69:21"><name pos:start="69:21" pos:end="69:21">i</name></expr>]</index></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <name pos:start="69:26" pos:end="69:26">a</name> <operator pos:start="69:28" pos:end="69:29">+=</operator> <name pos:start="69:31" pos:end="69:31">b</name> <operator pos:start="69:33" pos:end="69:34">+=</operator> <name pos:start="69:36" pos:end="69:45"><name pos:start="69:36" pos:end="69:42">decoded</name><index pos:start="69:43" pos:end="69:45">[<expr pos:start="69:44" pos:end="69:44"><name pos:start="69:44" pos:end="69:44">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <case pos:start="73:5" pos:end="73:11">case <expr pos:start="73:10" pos:end="73:10"><literal type="number" pos:start="73:10" pos:end="73:10">3</literal></expr>:</case>

        <for pos:start="75:9" pos:end="77:51">for <control pos:start="75:13" pos:end="75:48">(<init pos:start="75:14" pos:end="75:28"><expr pos:start="75:14" pos:end="75:27"><name pos:start="75:14" pos:end="75:14">i</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <name pos:start="75:18" pos:end="75:27">pred_order</name></expr>;</init> <condition pos:start="75:30" pos:end="75:43"><expr pos:start="75:30" pos:end="75:42"><name pos:start="75:30" pos:end="75:30">i</name> <operator pos:start="75:32" pos:end="75:32">&lt;</operator> <name pos:start="75:34" pos:end="75:42">blocksize</name></expr>;</condition> <incr pos:start="75:45" pos:end="75:47"><expr pos:start="75:45" pos:end="75:47"><name pos:start="75:45" pos:end="75:45">i</name><operator pos:start="75:46" pos:end="75:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="77:13" pos:end="77:51"><block_content pos:start="77:13" pos:end="77:51">

            <expr_stmt pos:start="77:13" pos:end="77:51"><expr pos:start="77:13" pos:end="77:50"><name pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:19">decoded</name><index pos:start="77:20" pos:end="77:22">[<expr pos:start="77:21" pos:end="77:21"><name pos:start="77:21" pos:end="77:21">i</name></expr>]</index></name> <operator pos:start="77:24" pos:end="77:24">=</operator> <name pos:start="77:26" pos:end="77:26">a</name> <operator pos:start="77:28" pos:end="77:29">+=</operator> <name pos:start="77:31" pos:end="77:31">b</name> <operator pos:start="77:33" pos:end="77:34">+=</operator> <name pos:start="77:36" pos:end="77:36">c</name> <operator pos:start="77:38" pos:end="77:39">+=</operator> <name pos:start="77:41" pos:end="77:50"><name pos:start="77:41" pos:end="77:47">decoded</name><index pos:start="77:48" pos:end="77:50">[<expr pos:start="77:49" pos:end="77:49"><name pos:start="77:49" pos:end="77:49">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:11">case <expr pos:start="81:10" pos:end="81:10"><literal type="number" pos:start="81:10" pos:end="81:10">4</literal></expr>:</case>

        <for pos:start="83:9" pos:end="85:56">for <control pos:start="83:13" pos:end="83:48">(<init pos:start="83:14" pos:end="83:28"><expr pos:start="83:14" pos:end="83:27"><name pos:start="83:14" pos:end="83:14">i</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <name pos:start="83:18" pos:end="83:27">pred_order</name></expr>;</init> <condition pos:start="83:30" pos:end="83:43"><expr pos:start="83:30" pos:end="83:42"><name pos:start="83:30" pos:end="83:30">i</name> <operator pos:start="83:32" pos:end="83:32">&lt;</operator> <name pos:start="83:34" pos:end="83:42">blocksize</name></expr>;</condition> <incr pos:start="83:45" pos:end="83:47"><expr pos:start="83:45" pos:end="83:47"><name pos:start="83:45" pos:end="83:45">i</name><operator pos:start="83:46" pos:end="83:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="85:13" pos:end="85:56"><block_content pos:start="85:13" pos:end="85:56">

            <expr_stmt pos:start="85:13" pos:end="85:56"><expr pos:start="85:13" pos:end="85:55"><name pos:start="85:13" pos:end="85:22"><name pos:start="85:13" pos:end="85:19">decoded</name><index pos:start="85:20" pos:end="85:22">[<expr pos:start="85:21" pos:end="85:21"><name pos:start="85:21" pos:end="85:21">i</name></expr>]</index></name> <operator pos:start="85:24" pos:end="85:24">=</operator> <name pos:start="85:26" pos:end="85:26">a</name> <operator pos:start="85:28" pos:end="85:29">+=</operator> <name pos:start="85:31" pos:end="85:31">b</name> <operator pos:start="85:33" pos:end="85:34">+=</operator> <name pos:start="85:36" pos:end="85:36">c</name> <operator pos:start="85:38" pos:end="85:39">+=</operator> <name pos:start="85:41" pos:end="85:41">d</name> <operator pos:start="85:43" pos:end="85:44">+=</operator> <name pos:start="85:46" pos:end="85:55"><name pos:start="85:46" pos:end="85:52">decoded</name><index pos:start="85:53" pos:end="85:55">[<expr pos:start="85:54" pos:end="85:54"><name pos:start="85:54" pos:end="85:54">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <default pos:start="89:5" pos:end="89:12">default:</default>

        <expr_stmt pos:start="91:9" pos:end="91:78"><expr pos:start="91:9" pos:end="91:77"><call pos:start="91:9" pos:end="91:77"><name pos:start="91:9" pos:end="91:14">av_log</name><argument_list pos:start="91:15" pos:end="91:77">(<argument pos:start="91:16" pos:end="91:23"><expr pos:start="91:16" pos:end="91:23"><name pos:start="91:16" pos:end="91:23"><name pos:start="91:16" pos:end="91:16">s</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:23">avctx</name></name></expr></argument>, <argument pos:start="91:26" pos:end="91:37"><expr pos:start="91:26" pos:end="91:37"><name pos:start="91:26" pos:end="91:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:40" pos:end="91:64"><expr pos:start="91:40" pos:end="91:64"><literal type="string" pos:start="91:40" pos:end="91:64">"illegal pred order %d\n"</literal></expr></argument>, <argument pos:start="91:67" pos:end="91:76"><expr pos:start="91:67" pos:end="91:76"><name pos:start="91:67" pos:end="91:76">pred_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:35">return <expr pos:start="93:16" pos:end="93:34"><name pos:start="93:16" pos:end="93:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></switch>



    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
