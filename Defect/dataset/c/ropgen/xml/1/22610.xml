<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22610.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">get_cluster_offset</name><parameter_list pos:start="1:30" pos:end="11:61">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:46">BlockDriverState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">bs</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:54"><decl pos:start="3:37" pos:end="3:54"><type pos:start="3:37" pos:end="3:54"><name pos:start="3:37" pos:end="3:46">VmdkExtent</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:54">extent</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:56"><decl pos:start="5:37" pos:end="5:56"><type pos:start="5:37" pos:end="5:56"><name pos:start="5:37" pos:end="5:48">VmdkMetaData</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:56">m_data</name></decl></parameter>,

                                    <parameter pos:start="7:37" pos:end="7:51"><decl pos:start="7:37" pos:end="7:51"><type pos:start="7:37" pos:end="7:51"><name pos:start="7:37" pos:end="7:44">uint64_t</name></type> <name pos:start="7:46" pos:end="7:51">offset</name></decl></parameter>,

                                    <parameter pos:start="9:37" pos:end="9:48"><decl pos:start="9:37" pos:end="9:48"><type pos:start="9:37" pos:end="9:48"><name pos:start="9:37" pos:end="9:39">int</name></type> <name pos:start="9:41" pos:end="9:48">allocate</name></decl></parameter>,

                                    <parameter pos:start="11:37" pos:end="11:60"><decl pos:start="11:37" pos:end="11:60"><type pos:start="11:37" pos:end="11:60"><name pos:start="11:37" pos:end="11:44">uint64_t</name> <modifier pos:start="11:46" pos:end="11:46">*</modifier></type><name pos:start="11:47" pos:end="11:60">cluster_offset</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="215:1">{<block_content pos:start="15:5" pos:end="213:19">

    <decl_stmt pos:start="15:5" pos:end="15:47"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:25">l1_index</name></decl>, <decl pos:start="15:28" pos:end="15:36"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:28" pos:end="15:36">l2_offset</name></decl>, <decl pos:start="15:39" pos:end="15:46"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:39" pos:end="15:46">l2_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:17">min_index</name></decl>, <decl pos:start="17:20" pos:end="17:20"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:20" pos:end="17:20">i</name></decl>, <decl pos:start="17:23" pos:end="17:23"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:23" pos:end="17:23">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:34"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:22">min_count</name></decl>, <decl pos:start="19:25" pos:end="19:33"><type ref="prev" pos:start="19:5" pos:end="19:12"><modifier pos:start="19:25" pos:end="19:25">*</modifier></type><name pos:start="19:26" pos:end="19:33">l2_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:24"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:8"><name pos:start="21:5" pos:end="21:8">bool</name></type> <name pos:start="21:10" pos:end="21:15">zeroed</name> <init pos:start="21:17" pos:end="21:23">= <expr pos:start="21:19" pos:end="21:23"><name pos:start="21:19" pos:end="21:23">false</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:15">(<expr pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:14">m_data</name></expr>)</condition> <block pos:start="25:17" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:26">

        <expr_stmt pos:start="27:9" pos:end="27:26"><expr pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:14">m_data</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:21">valid</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <literal type="number" pos:start="27:25" pos:end="27:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:21">(<expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:14">extent</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:20">flat</name></name></expr>)</condition> <block pos:start="31:23" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:23">

        <expr_stmt pos:start="33:9" pos:end="33:52"><expr pos:start="33:9" pos:end="33:51"><operator pos:start="33:9" pos:end="33:9">*</operator><name pos:start="33:10" pos:end="33:23">cluster_offset</name> <operator pos:start="33:25" pos:end="33:25">=</operator> <name pos:start="33:27" pos:end="33:51"><name pos:start="33:27" pos:end="33:32">extent</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:51">flat_start_offset</name></name></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:23">return <expr pos:start="35:16" pos:end="35:22"><name pos:start="35:16" pos:end="35:22">VMDK_OK</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:67"><expr pos:start="41:5" pos:end="41:66"><name pos:start="41:5" pos:end="41:10">offset</name> <operator pos:start="41:12" pos:end="41:13">-=</operator> <operator pos:start="41:15" pos:end="41:15">(</operator><name pos:start="41:16" pos:end="41:33"><name pos:start="41:16" pos:end="41:21">extent</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:33">end_sector</name></name> <operator pos:start="41:35" pos:end="41:35">-</operator> <name pos:start="41:37" pos:end="41:51"><name pos:start="41:37" pos:end="41:42">extent</name><operator pos:start="41:43" pos:end="41:44">-&gt;</operator><name pos:start="41:45" pos:end="41:51">sectors</name></name><operator pos:start="41:52" pos:end="41:52">)</operator> <operator pos:start="41:54" pos:end="41:54">*</operator> <name pos:start="41:56" pos:end="41:66">SECTOR_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:56"><expr pos:start="43:5" pos:end="43:55"><name pos:start="43:5" pos:end="43:12">l1_index</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <operator pos:start="43:16" pos:end="43:16">(</operator><name pos:start="43:17" pos:end="43:22">offset</name> <operator pos:start="43:24" pos:end="43:25">&gt;&gt;</operator> <literal type="number" pos:start="43:27" pos:end="43:27">9</literal><operator pos:start="43:28" pos:end="43:28">)</operator> <operator pos:start="43:30" pos:end="43:30">/</operator> <name pos:start="43:32" pos:end="43:55"><name pos:start="43:32" pos:end="43:37">extent</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:55">l1_entry_sectors</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:36">(<expr pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:16">l1_index</name> <operator pos:start="45:18" pos:end="45:19">&gt;=</operator> <name pos:start="45:21" pos:end="45:35"><name pos:start="45:21" pos:end="45:26">extent</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:35">l1_size</name></name></expr>)</condition> <block pos:start="45:38" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:26">

        <return pos:start="47:9" pos:end="47:26">return <expr pos:start="47:16" pos:end="47:25"><name pos:start="47:16" pos:end="47:25">VMDK_ERROR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:43"><expr pos:start="51:5" pos:end="51:42"><name pos:start="51:5" pos:end="51:13">l2_offset</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <name pos:start="51:17" pos:end="51:42"><name pos:start="51:17" pos:end="51:22">extent</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:32">l1_table</name><index pos:start="51:33" pos:end="51:42">[<expr pos:start="51:34" pos:end="51:41"><name pos:start="51:34" pos:end="51:41">l1_index</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:19">(<expr pos:start="53:9" pos:end="53:18"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:18">l2_offset</name></expr>)</condition> <block pos:start="53:21" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:28">

        <return pos:start="55:9" pos:end="55:28">return <expr pos:start="55:16" pos:end="55:27"><name pos:start="55:16" pos:end="55:27">VMDK_UNALLOC</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="59:5" pos:end="81:5">for <control pos:start="59:9" pos:end="59:39">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">i</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:34"><expr pos:start="59:17" pos:end="59:33"><name pos:start="59:17" pos:end="59:17">i</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <name pos:start="59:21" pos:end="59:33">L2_CACHE_SIZE</name></expr>;</condition> <incr pos:start="59:36" pos:end="59:38"><expr pos:start="59:36" pos:end="59:38"><name pos:start="59:36" pos:end="59:36">i</name><operator pos:start="59:37" pos:end="59:38">++</operator></expr></incr>)</control> <block pos:start="59:41" pos:end="81:5">{<block_content pos:start="61:9" pos:end="79:9">

        <if_stmt pos:start="61:9" pos:end="79:9"><if pos:start="61:9" pos:end="79:9">if <condition pos:start="61:12" pos:end="61:53">(<expr pos:start="61:13" pos:end="61:52"><name pos:start="61:13" pos:end="61:21">l2_offset</name> <operator pos:start="61:23" pos:end="61:24">==</operator> <name pos:start="61:26" pos:end="61:52"><name pos:start="61:26" pos:end="61:31">extent</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:49">l2_cache_offsets</name><index pos:start="61:50" pos:end="61:52">[<expr pos:start="61:51" pos:end="61:51"><name pos:start="61:51" pos:end="61:51">i</name></expr>]</index></name></expr>)</condition> <block pos:start="61:55" pos:end="79:9">{<block_content pos:start="65:13" pos:end="77:23">

            <comment type="block" pos:start="63:13" pos:end="63:41">/* increment the hit count */</comment>

            <if_stmt pos:start="65:13" pos:end="73:13"><if pos:start="65:13" pos:end="73:13">if <condition pos:start="65:16" pos:end="65:59">(<expr pos:start="65:17" pos:end="65:58"><operator pos:start="65:17" pos:end="65:18">++</operator><name pos:start="65:19" pos:end="65:44"><name pos:start="65:19" pos:end="65:24">extent</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:41">l2_cache_counts</name><index pos:start="65:42" pos:end="65:44">[<expr pos:start="65:43" pos:end="65:43"><name pos:start="65:43" pos:end="65:43">i</name></expr>]</index></name> <operator pos:start="65:46" pos:end="65:47">==</operator> <literal type="number" pos:start="65:49" pos:end="65:58">0xffffffff</literal></expr>)</condition> <block pos:start="65:61" pos:end="73:13">{<block_content pos:start="67:17" pos:end="71:17">

                <for pos:start="67:17" pos:end="71:17">for <control pos:start="67:21" pos:end="67:51">(<init pos:start="67:22" pos:end="67:27"><expr pos:start="67:22" pos:end="67:26"><name pos:start="67:22" pos:end="67:22">j</name> <operator pos:start="67:24" pos:end="67:24">=</operator> <literal type="number" pos:start="67:26" pos:end="67:26">0</literal></expr>;</init> <condition pos:start="67:29" pos:end="67:46"><expr pos:start="67:29" pos:end="67:45"><name pos:start="67:29" pos:end="67:29">j</name> <operator pos:start="67:31" pos:end="67:31">&lt;</operator> <name pos:start="67:33" pos:end="67:45">L2_CACHE_SIZE</name></expr>;</condition> <incr pos:start="67:48" pos:end="67:50"><expr pos:start="67:48" pos:end="67:50"><name pos:start="67:48" pos:end="67:48">j</name><operator pos:start="67:49" pos:end="67:50">++</operator></expr></incr>)</control> <block pos:start="67:53" pos:end="71:17">{<block_content pos:start="69:21" pos:end="69:53">

                    <expr_stmt pos:start="69:21" pos:end="69:53"><expr pos:start="69:21" pos:end="69:52"><name pos:start="69:21" pos:end="69:46"><name pos:start="69:21" pos:end="69:26">extent</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:43">l2_cache_counts</name><index pos:start="69:44" pos:end="69:46">[<expr pos:start="69:45" pos:end="69:45"><name pos:start="69:45" pos:end="69:45">j</name></expr>]</index></name> <operator pos:start="69:48" pos:end="69:50">&gt;&gt;=</operator> <literal type="number" pos:start="69:52" pos:end="69:52">1</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:64"><expr pos:start="75:13" pos:end="75:63"><name pos:start="75:13" pos:end="75:20">l2_table</name> <operator pos:start="75:22" pos:end="75:22">=</operator> <name pos:start="75:24" pos:end="75:39"><name pos:start="75:24" pos:end="75:29">extent</name><operator pos:start="75:30" pos:end="75:31">-&gt;</operator><name pos:start="75:32" pos:end="75:39">l2_cache</name></name> <operator pos:start="75:41" pos:end="75:41">+</operator> <operator pos:start="75:43" pos:end="75:43">(</operator><name pos:start="75:44" pos:end="75:44">i</name> <operator pos:start="75:46" pos:end="75:46">*</operator> <name pos:start="75:48" pos:end="75:62"><name pos:start="75:48" pos:end="75:53">extent</name><operator pos:start="75:54" pos:end="75:55">-&gt;</operator><name pos:start="75:56" pos:end="75:62">l2_size</name></name><operator pos:start="75:63" pos:end="75:63">)</operator></expr>;</expr_stmt>

            <goto pos:start="77:13" pos:end="77:23">goto <name pos:start="77:18" pos:end="77:22">found</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="83:5" pos:end="83:59">/* not found: load a new entry in the least used one */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:18"><expr pos:start="85:5" pos:end="85:17"><name pos:start="85:5" pos:end="85:13">min_index</name> <operator pos:start="85:15" pos:end="85:15">=</operator> <literal type="number" pos:start="85:17" pos:end="85:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:27"><expr pos:start="87:5" pos:end="87:26"><name pos:start="87:5" pos:end="87:13">min_count</name> <operator pos:start="87:15" pos:end="87:15">=</operator> <literal type="number" pos:start="87:17" pos:end="87:26">0xffffffff</literal></expr>;</expr_stmt>

    <for pos:start="89:5" pos:end="99:5">for <control pos:start="89:9" pos:end="89:39">(<init pos:start="89:10" pos:end="89:15"><expr pos:start="89:10" pos:end="89:14"><name pos:start="89:10" pos:end="89:10">i</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <literal type="number" pos:start="89:14" pos:end="89:14">0</literal></expr>;</init> <condition pos:start="89:17" pos:end="89:34"><expr pos:start="89:17" pos:end="89:33"><name pos:start="89:17" pos:end="89:17">i</name> <operator pos:start="89:19" pos:end="89:19">&lt;</operator> <name pos:start="89:21" pos:end="89:33">L2_CACHE_SIZE</name></expr>;</condition> <incr pos:start="89:36" pos:end="89:38"><expr pos:start="89:36" pos:end="89:38"><name pos:start="89:36" pos:end="89:36">i</name><operator pos:start="89:37" pos:end="89:38">++</operator></expr></incr>)</control> <block pos:start="89:41" pos:end="99:5">{<block_content pos:start="91:9" pos:end="97:9">

        <if_stmt pos:start="91:9" pos:end="97:9"><if pos:start="91:9" pos:end="97:9">if <condition pos:start="91:12" pos:end="91:51">(<expr pos:start="91:13" pos:end="91:50"><name pos:start="91:13" pos:end="91:38"><name pos:start="91:13" pos:end="91:18">extent</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:35">l2_cache_counts</name><index pos:start="91:36" pos:end="91:38">[<expr pos:start="91:37" pos:end="91:37"><name pos:start="91:37" pos:end="91:37">i</name></expr>]</index></name> <operator pos:start="91:40" pos:end="91:40">&lt;</operator> <name pos:start="91:42" pos:end="91:50">min_count</name></expr>)</condition> <block pos:start="91:53" pos:end="97:9">{<block_content pos:start="93:13" pos:end="95:26">

            <expr_stmt pos:start="93:13" pos:end="93:51"><expr pos:start="93:13" pos:end="93:50"><name pos:start="93:13" pos:end="93:21">min_count</name> <operator pos:start="93:23" pos:end="93:23">=</operator> <name pos:start="93:25" pos:end="93:50"><name pos:start="93:25" pos:end="93:30">extent</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:47">l2_cache_counts</name><index pos:start="93:48" pos:end="93:50">[<expr pos:start="93:49" pos:end="93:49"><name pos:start="93:49" pos:end="93:49">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:26"><expr pos:start="95:13" pos:end="95:25"><name pos:start="95:13" pos:end="95:21">min_index</name> <operator pos:start="95:23" pos:end="95:23">=</operator> <name pos:start="95:25" pos:end="95:25">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="101:5" pos:end="101:64"><expr pos:start="101:5" pos:end="101:63"><name pos:start="101:5" pos:end="101:12">l2_table</name> <operator pos:start="101:14" pos:end="101:14">=</operator> <name pos:start="101:16" pos:end="101:31"><name pos:start="101:16" pos:end="101:21">extent</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:31">l2_cache</name></name> <operator pos:start="101:33" pos:end="101:33">+</operator> <operator pos:start="101:35" pos:end="101:35">(</operator><name pos:start="101:36" pos:end="101:44">min_index</name> <operator pos:start="101:46" pos:end="101:46">*</operator> <name pos:start="101:48" pos:end="101:62"><name pos:start="101:48" pos:end="101:53">extent</name><operator pos:start="101:54" pos:end="101:55">-&gt;</operator><name pos:start="101:56" pos:end="101:62">l2_size</name></name><operator pos:start="101:63" pos:end="101:63">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="117:5"><if pos:start="103:5" pos:end="117:5">if <condition pos:start="103:8" pos:end="113:52">(<expr pos:start="103:9" pos:end="113:51"><call pos:start="103:9" pos:end="113:13"><name pos:start="103:9" pos:end="103:18">bdrv_pread</name><argument_list pos:start="103:19" pos:end="113:13">(

                <argument pos:start="105:17" pos:end="105:28"><expr pos:start="105:17" pos:end="105:28"><name pos:start="105:17" pos:end="105:28"><name pos:start="105:17" pos:end="105:22">extent</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:28">file</name></name></expr></argument>,

                <argument pos:start="107:17" pos:end="107:40"><expr pos:start="107:17" pos:end="107:40"><operator pos:start="107:17" pos:end="107:17">(</operator><name pos:start="107:18" pos:end="107:24">int64_t</name><operator pos:start="107:25" pos:end="107:25">)</operator><name pos:start="107:26" pos:end="107:34">l2_offset</name> <operator pos:start="107:36" pos:end="107:36">*</operator> <literal type="number" pos:start="107:38" pos:end="107:40">512</literal></expr></argument>,

                <argument pos:start="109:17" pos:end="109:24"><expr pos:start="109:17" pos:end="109:24"><name pos:start="109:17" pos:end="109:24">l2_table</name></expr></argument>,

                <argument pos:start="111:17" pos:end="111:50"><expr pos:start="111:17" pos:end="111:50"><name pos:start="111:17" pos:end="111:31"><name pos:start="111:17" pos:end="111:22">extent</name><operator pos:start="111:23" pos:end="111:24">-&gt;</operator><name pos:start="111:25" pos:end="111:31">l2_size</name></name> <operator pos:start="111:33" pos:end="111:33">*</operator> <sizeof pos:start="111:35" pos:end="111:50">sizeof<argument_list pos:start="111:41" pos:end="111:50">(<argument pos:start="111:42" pos:end="111:49"><expr pos:start="111:42" pos:end="111:49"><name pos:start="111:42" pos:end="111:49">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>

            )</argument_list></call> <operator pos:start="113:15" pos:end="113:16">!=</operator> <name pos:start="113:18" pos:end="113:32"><name pos:start="113:18" pos:end="113:23">extent</name><operator pos:start="113:24" pos:end="113:25">-&gt;</operator><name pos:start="113:26" pos:end="113:32">l2_size</name></name> <operator pos:start="113:34" pos:end="113:34">*</operator> <sizeof pos:start="113:36" pos:end="113:51">sizeof<argument_list pos:start="113:42" pos:end="113:51">(<argument pos:start="113:43" pos:end="113:50"><expr pos:start="113:43" pos:end="113:50"><name pos:start="113:43" pos:end="113:50">uint32_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="113:54" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:26">

        <return pos:start="115:9" pos:end="115:26">return <expr pos:start="115:16" pos:end="115:25"><name pos:start="115:16" pos:end="115:25">VMDK_ERROR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:52"><expr pos:start="121:5" pos:end="121:51"><name pos:start="121:5" pos:end="121:39"><name pos:start="121:5" pos:end="121:10">extent</name><operator pos:start="121:11" pos:end="121:12">-&gt;</operator><name pos:start="121:13" pos:end="121:28">l2_cache_offsets</name><index pos:start="121:29" pos:end="121:39">[<expr pos:start="121:30" pos:end="121:38"><name pos:start="121:30" pos:end="121:38">min_index</name></expr>]</index></name> <operator pos:start="121:41" pos:end="121:41">=</operator> <name pos:start="121:43" pos:end="121:51">l2_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:43"><expr pos:start="123:5" pos:end="123:42"><name pos:start="123:5" pos:end="123:38"><name pos:start="123:5" pos:end="123:10">extent</name><operator pos:start="123:11" pos:end="123:12">-&gt;</operator><name pos:start="123:13" pos:end="123:27">l2_cache_counts</name><index pos:start="123:28" pos:end="123:38">[<expr pos:start="123:29" pos:end="123:37"><name pos:start="123:29" pos:end="123:37">min_index</name></expr>]</index></name> <operator pos:start="123:40" pos:end="123:40">=</operator> <literal type="number" pos:start="123:42" pos:end="123:42">1</literal></expr>;</expr_stmt>

 <label pos:start="125:2" pos:end="125:7"><name pos:start="125:2" pos:end="125:6">found</name>:</label>

    <expr_stmt pos:start="127:5" pos:end="127:75"><expr pos:start="127:5" pos:end="127:74"><name pos:start="127:5" pos:end="127:12">l2_index</name> <operator pos:start="127:14" pos:end="127:14">=</operator> <operator pos:start="127:16" pos:end="127:16">(</operator><operator pos:start="127:17" pos:end="127:17">(</operator><name pos:start="127:18" pos:end="127:23">offset</name> <operator pos:start="127:25" pos:end="127:26">&gt;&gt;</operator> <literal type="number" pos:start="127:28" pos:end="127:28">9</literal><operator pos:start="127:29" pos:end="127:29">)</operator> <operator pos:start="127:31" pos:end="127:31">/</operator> <name pos:start="127:33" pos:end="127:55"><name pos:start="127:33" pos:end="127:38">extent</name><operator pos:start="127:39" pos:end="127:40">-&gt;</operator><name pos:start="127:41" pos:end="127:55">cluster_sectors</name></name><operator pos:start="127:56" pos:end="127:56">)</operator> <operator pos:start="127:58" pos:end="127:58">%</operator> <name pos:start="127:60" pos:end="127:74"><name pos:start="127:60" pos:end="127:65">extent</name><operator pos:start="127:66" pos:end="127:67">-&gt;</operator><name pos:start="127:68" pos:end="127:74">l2_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:54"><expr pos:start="129:5" pos:end="129:53"><operator pos:start="129:5" pos:end="129:5">*</operator><name pos:start="129:6" pos:end="129:19">cluster_offset</name> <operator pos:start="129:21" pos:end="129:21">=</operator> <call pos:start="129:23" pos:end="129:53"><name pos:start="129:23" pos:end="129:33">le32_to_cpu</name><argument_list pos:start="129:34" pos:end="129:53">(<argument pos:start="129:35" pos:end="129:52"><expr pos:start="129:35" pos:end="129:52"><name pos:start="129:35" pos:end="129:52"><name pos:start="129:35" pos:end="129:42">l2_table</name><index pos:start="129:43" pos:end="129:52">[<expr pos:start="129:44" pos:end="129:51"><name pos:start="129:44" pos:end="129:51">l2_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="133:5" pos:end="137:5"><if pos:start="133:5" pos:end="137:5">if <condition pos:start="133:8" pos:end="133:69">(<expr pos:start="133:9" pos:end="133:68"><name pos:start="133:9" pos:end="133:30"><name pos:start="133:9" pos:end="133:14">extent</name><operator pos:start="133:15" pos:end="133:16">-&gt;</operator><name pos:start="133:17" pos:end="133:30">has_zero_grain</name></name> <operator pos:start="133:32" pos:end="133:33">&amp;&amp;</operator> <operator pos:start="133:35" pos:end="133:35">*</operator><name pos:start="133:36" pos:end="133:49">cluster_offset</name> <operator pos:start="133:51" pos:end="133:52">==</operator> <name pos:start="133:54" pos:end="133:68">VMDK_GTE_ZEROED</name></expr>)</condition> <block pos:start="133:71" pos:end="137:5">{<block_content pos:start="135:9" pos:end="135:22">

        <expr_stmt pos:start="135:9" pos:end="135:22"><expr pos:start="135:9" pos:end="135:21"><name pos:start="135:9" pos:end="135:14">zeroed</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <name pos:start="135:18" pos:end="135:21">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="141:5" pos:end="209:5"><if pos:start="141:5" pos:end="209:5">if <condition pos:start="141:8" pos:end="141:35">(<expr pos:start="141:9" pos:end="141:34"><operator pos:start="141:9" pos:end="141:9">!</operator><operator pos:start="141:10" pos:end="141:10">*</operator><name pos:start="141:11" pos:end="141:24">cluster_offset</name> <operator pos:start="141:26" pos:end="141:27">||</operator> <name pos:start="141:29" pos:end="141:34">zeroed</name></expr>)</condition> <block pos:start="141:37" pos:end="209:5">{<block_content pos:start="143:9" pos:end="207:9">

        <if_stmt pos:start="143:9" pos:end="147:9"><if pos:start="143:9" pos:end="147:9">if <condition pos:start="143:12" pos:end="143:22">(<expr pos:start="143:13" pos:end="143:21"><operator pos:start="143:13" pos:end="143:13">!</operator><name pos:start="143:14" pos:end="143:21">allocate</name></expr>)</condition> <block pos:start="143:24" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:55">

            <return pos:start="145:13" pos:end="145:55">return <expr pos:start="145:20" pos:end="145:54"><ternary pos:start="145:20" pos:end="145:54"><condition pos:start="145:20" pos:end="145:27"><expr pos:start="145:20" pos:end="145:25"><name pos:start="145:20" pos:end="145:25">zeroed</name></expr> ?</condition><then pos:start="145:29" pos:end="145:39"> <expr pos:start="145:29" pos:end="145:39"><name pos:start="145:29" pos:end="145:39">VMDK_ZEROED</name></expr> </then><else pos:start="145:41" pos:end="145:54">: <expr pos:start="145:43" pos:end="145:54"><name pos:start="145:43" pos:end="145:54">VMDK_UNALLOC</name></expr></else></ternary></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="151:9" pos:end="151:76">/* Avoid the L2 tables update for the images that have snapshots. */</comment>

        <expr_stmt pos:start="153:9" pos:end="153:55"><expr pos:start="153:9" pos:end="153:54"><operator pos:start="153:9" pos:end="153:9">*</operator><name pos:start="153:10" pos:end="153:23">cluster_offset</name> <operator pos:start="153:25" pos:end="153:25">=</operator> <call pos:start="153:27" pos:end="153:54"><name pos:start="153:27" pos:end="153:40">bdrv_getlength</name><argument_list pos:start="153:41" pos:end="153:54">(<argument pos:start="153:42" pos:end="153:53"><expr pos:start="153:42" pos:end="153:53"><name pos:start="153:42" pos:end="153:53"><name pos:start="153:42" pos:end="153:47">extent</name><operator pos:start="153:48" pos:end="153:49">-&gt;</operator><name pos:start="153:50" pos:end="153:53">file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="155:9" pos:end="165:9"><if pos:start="155:9" pos:end="165:9">if <condition pos:start="155:12" pos:end="155:32">(<expr pos:start="155:13" pos:end="155:31"><operator pos:start="155:13" pos:end="155:13">!</operator><name pos:start="155:14" pos:end="155:31"><name pos:start="155:14" pos:end="155:19">extent</name><operator pos:start="155:20" pos:end="155:21">-&gt;</operator><name pos:start="155:22" pos:end="155:31">compressed</name></name></expr>)</condition> <block pos:start="155:34" pos:end="165:9">{<block_content pos:start="157:13" pos:end="163:14">

            <expr_stmt pos:start="157:13" pos:end="163:14"><expr pos:start="157:13" pos:end="163:13"><call pos:start="157:13" pos:end="163:13"><name pos:start="157:13" pos:end="157:25">bdrv_truncate</name><argument_list pos:start="157:26" pos:end="163:13">(

                <argument pos:start="159:17" pos:end="159:28"><expr pos:start="159:17" pos:end="159:28"><name pos:start="159:17" pos:end="159:28"><name pos:start="159:17" pos:end="159:22">extent</name><operator pos:start="159:23" pos:end="159:24">-&gt;</operator><name pos:start="159:25" pos:end="159:28">file</name></name></expr></argument>,

                <argument pos:start="161:17" pos:end="161:64"><expr pos:start="161:17" pos:end="161:64"><operator pos:start="161:17" pos:end="161:17">*</operator><name pos:start="161:18" pos:end="161:31">cluster_offset</name> <operator pos:start="161:33" pos:end="161:33">+</operator> <operator pos:start="161:35" pos:end="161:35">(</operator><name pos:start="161:36" pos:end="161:58"><name pos:start="161:36" pos:end="161:41">extent</name><operator pos:start="161:42" pos:end="161:43">-&gt;</operator><name pos:start="161:44" pos:end="161:58">cluster_sectors</name></name> <operator pos:start="161:60" pos:end="161:61">&lt;&lt;</operator> <literal type="number" pos:start="161:63" pos:end="161:63">9</literal><operator pos:start="161:64" pos:end="161:64">)</operator></expr></argument>

            )</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="169:9" pos:end="169:30"><expr pos:start="169:9" pos:end="169:29"><operator pos:start="169:9" pos:end="169:9">*</operator><name pos:start="169:10" pos:end="169:23">cluster_offset</name> <operator pos:start="169:25" pos:end="169:27">&gt;&gt;=</operator> <literal type="number" pos:start="169:29" pos:end="169:29">9</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:58"><expr pos:start="171:9" pos:end="171:57"><name pos:start="171:9" pos:end="171:26"><name pos:start="171:9" pos:end="171:16">l2_table</name><index pos:start="171:17" pos:end="171:26">[<expr pos:start="171:18" pos:end="171:25"><name pos:start="171:18" pos:end="171:25">l2_index</name></expr>]</index></name> <operator pos:start="171:28" pos:end="171:28">=</operator> <call pos:start="171:30" pos:end="171:57"><name pos:start="171:30" pos:end="171:40">cpu_to_le32</name><argument_list pos:start="171:41" pos:end="171:57">(<argument pos:start="171:42" pos:end="171:56"><expr pos:start="171:42" pos:end="171:56"><operator pos:start="171:42" pos:end="171:42">*</operator><name pos:start="171:43" pos:end="171:56">cluster_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="175:9" pos:end="183:11">/* First of all we write grain itself, to avoid race condition

         * that may to corrupt the image.

         * This problem may occur because of insufficient space on host disk

         * or inappropriate VM shutdown.

         */</comment>

        <if_stmt pos:start="185:9" pos:end="191:9"><if pos:start="185:9" pos:end="191:9">if <condition pos:start="185:12" pos:end="187:69">(<expr pos:start="185:13" pos:end="187:68"><call pos:start="185:13" pos:end="187:62"><name pos:start="185:13" pos:end="185:29">get_whole_cluster</name><argument_list pos:start="185:30" pos:end="187:62">(

                <argument pos:start="187:17" pos:end="187:18"><expr pos:start="187:17" pos:end="187:18"><name pos:start="187:17" pos:end="187:18">bs</name></expr></argument>, <argument pos:start="187:21" pos:end="187:26"><expr pos:start="187:21" pos:end="187:26"><name pos:start="187:21" pos:end="187:26">extent</name></expr></argument>, <argument pos:start="187:29" pos:end="187:43"><expr pos:start="187:29" pos:end="187:43"><operator pos:start="187:29" pos:end="187:29">*</operator><name pos:start="187:30" pos:end="187:43">cluster_offset</name></expr></argument>, <argument pos:start="187:46" pos:end="187:51"><expr pos:start="187:46" pos:end="187:51"><name pos:start="187:46" pos:end="187:51">offset</name></expr></argument>, <argument pos:start="187:54" pos:end="187:61"><expr pos:start="187:54" pos:end="187:61"><name pos:start="187:54" pos:end="187:61">allocate</name></expr></argument>)</argument_list></call> <operator pos:start="187:64" pos:end="187:65">==</operator> <operator pos:start="187:67" pos:end="187:67">-</operator><literal type="number" pos:start="187:68" pos:end="187:68">1</literal></expr>)</condition> <block pos:start="187:71" pos:end="191:9">{<block_content pos:start="189:13" pos:end="189:30">

            <return pos:start="189:13" pos:end="189:30">return <expr pos:start="189:20" pos:end="189:29"><name pos:start="189:20" pos:end="189:29">VMDK_ERROR</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="195:9" pos:end="207:9"><if pos:start="195:9" pos:end="207:9">if <condition pos:start="195:12" pos:end="195:19">(<expr pos:start="195:13" pos:end="195:18"><name pos:start="195:13" pos:end="195:18">m_data</name></expr>)</condition> <block pos:start="195:21" pos:end="207:9">{<block_content pos:start="197:13" pos:end="205:30">

            <expr_stmt pos:start="197:13" pos:end="197:45"><expr pos:start="197:13" pos:end="197:44"><name pos:start="197:13" pos:end="197:26"><name pos:start="197:13" pos:end="197:18">m_data</name><operator pos:start="197:19" pos:end="197:20">-&gt;</operator><name pos:start="197:21" pos:end="197:26">offset</name></name> <operator pos:start="197:28" pos:end="197:28">=</operator> <operator pos:start="197:30" pos:end="197:30">*</operator><name pos:start="197:31" pos:end="197:44">cluster_offset</name></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:40"><expr pos:start="199:13" pos:end="199:39"><name pos:start="199:13" pos:end="199:28"><name pos:start="199:13" pos:end="199:18">m_data</name><operator pos:start="199:19" pos:end="199:20">-&gt;</operator><name pos:start="199:21" pos:end="199:28">l1_index</name></name> <operator pos:start="199:30" pos:end="199:30">=</operator> <name pos:start="199:32" pos:end="199:39">l1_index</name></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:40"><expr pos:start="201:13" pos:end="201:39"><name pos:start="201:13" pos:end="201:28"><name pos:start="201:13" pos:end="201:18">m_data</name><operator pos:start="201:19" pos:end="201:20">-&gt;</operator><name pos:start="201:21" pos:end="201:28">l2_index</name></name> <operator pos:start="201:30" pos:end="201:30">=</operator> <name pos:start="201:32" pos:end="201:39">l2_index</name></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:42"><expr pos:start="203:13" pos:end="203:41"><name pos:start="203:13" pos:end="203:29"><name pos:start="203:13" pos:end="203:18">m_data</name><operator pos:start="203:19" pos:end="203:20">-&gt;</operator><name pos:start="203:21" pos:end="203:29">l2_offset</name></name> <operator pos:start="203:31" pos:end="203:31">=</operator> <name pos:start="203:33" pos:end="203:41">l2_offset</name></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:30"><expr pos:start="205:13" pos:end="205:29"><name pos:start="205:13" pos:end="205:25"><name pos:start="205:13" pos:end="205:18">m_data</name><operator pos:start="205:19" pos:end="205:20">-&gt;</operator><name pos:start="205:21" pos:end="205:25">valid</name></name> <operator pos:start="205:27" pos:end="205:27">=</operator> <literal type="number" pos:start="205:29" pos:end="205:29">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:26"><expr pos:start="211:5" pos:end="211:25"><operator pos:start="211:5" pos:end="211:5">*</operator><name pos:start="211:6" pos:end="211:19">cluster_offset</name> <operator pos:start="211:21" pos:end="211:23">&lt;&lt;=</operator> <literal type="number" pos:start="211:25" pos:end="211:25">9</literal></expr>;</expr_stmt>

    <return pos:start="213:5" pos:end="213:19">return <expr pos:start="213:12" pos:end="213:18"><name pos:start="213:12" pos:end="213:18">VMDK_OK</name></expr>;</return>

</block_content>}</block></function>
</unit>
