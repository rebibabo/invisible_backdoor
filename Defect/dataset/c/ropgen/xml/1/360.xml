<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/360.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:16">BlockJobInfoList</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:38">qmp_query_block_jobs</name><parameter_list pos:start="1:39" pos:end="1:52">(<parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:47"><name pos:start="1:40" pos:end="1:44">Error</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier><modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:51">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:16">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">BlockJobInfoList</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:26">head</name> <init pos:start="5:28" pos:end="5:33">= <expr pos:start="5:30" pos:end="5:33"><name pos:start="5:30" pos:end="5:33">NULL</name></expr></init></decl>, <decl pos:start="5:36" pos:end="5:51"><type ref="prev" pos:start="5:5" pos:end="5:22"><modifier pos:start="5:36" pos:end="5:36">*</modifier><modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:43">p_next</name> <init pos:start="5:45" pos:end="5:51">= <expr pos:start="5:47" pos:end="5:51"><operator pos:start="5:47" pos:end="5:47">&amp;</operator><name pos:start="5:48" pos:end="5:51">head</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BlockDriverState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">BdrvNextIterator</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">it</name> <init pos:start="9:26" pos:end="9:31">= <expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">NULL</name></expr></init></decl>;</decl_stmt>



    <while pos:start="13:5" pos:end="39:5">while <condition pos:start="13:11" pos:end="13:37">(<expr pos:start="13:12" pos:end="13:36"><operator pos:start="13:12" pos:end="13:12">(</operator><name pos:start="13:13" pos:end="13:14">it</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <call pos:start="13:18" pos:end="13:35"><name pos:start="13:18" pos:end="13:26">bdrv_next</name><argument_list pos:start="13:27" pos:end="13:35">(<argument pos:start="13:28" pos:end="13:29"><expr pos:start="13:28" pos:end="13:29"><name pos:start="13:28" pos:end="13:29">it</name></expr></argument>, <argument pos:start="13:32" pos:end="13:34"><expr pos:start="13:32" pos:end="13:34"><operator pos:start="13:32" pos:end="13:32">&amp;</operator><name pos:start="13:33" pos:end="13:34">bs</name></expr></argument>)</argument_list></call><operator pos:start="13:36" pos:end="13:36">)</operator></expr>)</condition> <block pos:start="13:39" pos:end="39:5">{<block_content pos:start="15:9" pos:end="37:41">

        <decl_stmt pos:start="15:9" pos:end="15:59"><decl pos:start="15:9" pos:end="15:58"><type pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:18">AioContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:31">aio_context</name> <init pos:start="15:33" pos:end="15:58">= <expr pos:start="15:35" pos:end="15:58"><call pos:start="15:35" pos:end="15:58"><name pos:start="15:35" pos:end="15:54">bdrv_get_aio_context</name><argument_list pos:start="15:55" pos:end="15:58">(<argument pos:start="15:56" pos:end="15:57"><expr pos:start="15:56" pos:end="15:57"><name pos:start="15:56" pos:end="15:57">bs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="19:9" pos:end="19:41"><expr pos:start="19:9" pos:end="19:40"><call pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:27">aio_context_acquire</name><argument_list pos:start="19:28" pos:end="19:40">(<argument pos:start="19:29" pos:end="19:39"><expr pos:start="19:29" pos:end="19:39"><name pos:start="19:29" pos:end="19:39">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="23:9" pos:end="33:9"><if pos:start="23:9" pos:end="33:9">if <condition pos:start="23:12" pos:end="23:20">(<expr pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:14">bs</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:19">job</name></name></expr>)</condition> <block pos:start="23:22" pos:end="33:9">{<block_content pos:start="25:13" pos:end="31:33">

            <decl_stmt pos:start="25:13" pos:end="25:65"><decl pos:start="25:13" pos:end="25:64"><type pos:start="25:13" pos:end="25:30"><name pos:start="25:13" pos:end="25:28">BlockJobInfoList</name> <modifier pos:start="25:30" pos:end="25:30">*</modifier></type><name pos:start="25:31" pos:end="25:34">elem</name> <init pos:start="25:36" pos:end="25:64">= <expr pos:start="25:38" pos:end="25:64"><call pos:start="25:38" pos:end="25:64"><name pos:start="25:38" pos:end="25:43">g_new0</name><argument_list pos:start="25:44" pos:end="25:64">(<argument pos:start="25:45" pos:end="25:60"><expr pos:start="25:45" pos:end="25:60"><name pos:start="25:45" pos:end="25:60">BlockJobInfoList</name></expr></argument>, <argument pos:start="25:63" pos:end="25:63"><expr pos:start="25:63" pos:end="25:63"><literal type="number" pos:start="25:63" pos:end="25:63">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:51"><expr pos:start="27:13" pos:end="27:50"><name pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:16">elem</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:23">value</name></name> <operator pos:start="27:25" pos:end="27:25">=</operator> <call pos:start="27:27" pos:end="27:50"><name pos:start="27:27" pos:end="27:41">block_job_query</name><argument_list pos:start="27:42" pos:end="27:50">(<argument pos:start="27:43" pos:end="27:49"><expr pos:start="27:43" pos:end="27:49"><name pos:start="27:43" pos:end="27:49"><name pos:start="27:43" pos:end="27:44">bs</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:49">job</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:27"><expr pos:start="29:13" pos:end="29:26"><operator pos:start="29:13" pos:end="29:13">*</operator><name pos:start="29:14" pos:end="29:19">p_next</name> <operator pos:start="29:21" pos:end="29:21">=</operator> <name pos:start="29:23" pos:end="29:26">elem</name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:33"><expr pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:18">p_next</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <operator pos:start="31:22" pos:end="31:22">&amp;</operator><name pos:start="31:23" pos:end="31:32"><name pos:start="31:23" pos:end="31:26">elem</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:32">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:41"><expr pos:start="37:9" pos:end="37:40"><call pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:27">aio_context_release</name><argument_list pos:start="37:28" pos:end="37:40">(<argument pos:start="37:29" pos:end="37:39"><expr pos:start="37:29" pos:end="37:39"><name pos:start="37:29" pos:end="37:39">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="43:5" pos:end="43:16">return <expr pos:start="43:12" pos:end="43:15"><name pos:start="43:12" pos:end="43:15">head</name></expr>;</return>

</block_content>}</block></function>
</unit>
