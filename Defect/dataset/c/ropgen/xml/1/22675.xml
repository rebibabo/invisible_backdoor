<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22675.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">av_parser_parse2</name><parameter_list pos:start="1:21" pos:end="7:59">(<parameter pos:start="1:22" pos:end="1:44"><decl pos:start="1:22" pos:end="1:44"><type pos:start="1:22" pos:end="1:44"><name pos:start="1:22" pos:end="1:41">AVCodecParserContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:67"><decl pos:start="1:47" pos:end="1:67"><type pos:start="1:47" pos:end="1:67"><name pos:start="1:47" pos:end="1:60">AVCodecContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avctx</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:38"><decl pos:start="3:22" pos:end="3:38"><type pos:start="3:22" pos:end="3:38"><name pos:start="3:22" pos:end="3:28">uint8_t</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier><modifier pos:start="3:31" pos:end="3:31">*</modifier></type><name pos:start="3:32" pos:end="3:38">poutbuf</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:57"><decl pos:start="3:41" pos:end="3:57"><type pos:start="3:41" pos:end="3:57"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:57">poutbuf_size</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:39"><decl pos:start="5:22" pos:end="5:39"><type pos:start="5:22" pos:end="5:39"><specifier pos:start="5:22" pos:end="5:26">const</specifier> <name pos:start="5:28" pos:end="5:34">uint8_t</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:39">buf</name></decl></parameter>, <parameter pos:start="5:42" pos:end="5:53"><decl pos:start="5:42" pos:end="5:53"><type pos:start="5:42" pos:end="5:53"><name pos:start="5:42" pos:end="5:44">int</name></type> <name pos:start="5:46" pos:end="5:53">buf_size</name></decl></parameter>,

                     <parameter pos:start="7:22" pos:end="7:32"><decl pos:start="7:22" pos:end="7:32"><type pos:start="7:22" pos:end="7:32"><name pos:start="7:22" pos:end="7:28">int64_t</name></type> <name pos:start="7:30" pos:end="7:32">pts</name></decl></parameter>, <parameter pos:start="7:35" pos:end="7:45"><decl pos:start="7:35" pos:end="7:45"><type pos:start="7:35" pos:end="7:45"><name pos:start="7:35" pos:end="7:41">int64_t</name></type> <name pos:start="7:43" pos:end="7:45">dts</name></decl></parameter>, <parameter pos:start="7:48" pos:end="7:58"><decl pos:start="7:48" pos:end="7:58"><type pos:start="7:48" pos:end="7:58"><name pos:start="7:48" pos:end="7:54">int64_t</name></type> <name pos:start="7:56" pos:end="7:58">pos</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="105:1">{<block_content pos:start="11:5" pos:end="103:17">

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">index</name></decl>, <decl pos:start="11:16" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:16" pos:end="11:16">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:51"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:51"><name pos:start="13:13" pos:end="13:21">dummy_buf</name><index pos:start="13:22" pos:end="13:51">[<expr pos:start="13:23" pos:end="13:50"><name pos:start="13:23" pos:end="13:50">FF_INPUT_BUFFER_PADDING_SIZE</name></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:49">(<expr pos:start="17:9" pos:end="17:48"><operator pos:start="17:9" pos:end="17:9">!</operator><operator pos:start="17:10" pos:end="17:10">(</operator><name pos:start="17:11" pos:end="17:18"><name pos:start="17:11" pos:end="17:11">s</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:18">flags</name></name> <operator pos:start="17:20" pos:end="17:20">&amp;</operator> <name pos:start="17:22" pos:end="17:47">PARSER_FLAG_FETCHED_OFFSET</name><operator pos:start="17:48" pos:end="17:48">)</operator></expr>)</condition> <block pos:start="17:51" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:58">

        <expr_stmt pos:start="19:9" pos:end="21:35"><expr pos:start="19:9" pos:end="21:34"><name pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:28">next_frame_offset</name></name> <operator pos:start="19:30" pos:end="19:30">=</operator>

        <name pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:21">cur_offset</name></name>        <operator pos:start="21:30" pos:end="21:30">=</operator> <name pos:start="21:32" pos:end="21:34">pos</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:58"><expr pos:start="23:9" pos:end="23:57"><name pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:16">flags</name></name>            <operator pos:start="23:29" pos:end="23:30">|=</operator> <name pos:start="23:32" pos:end="23:57">PARSER_FLAG_FETCHED_OFFSET</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="55:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:22">(<expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:16">buf_size</name> <operator pos:start="29:18" pos:end="29:19">==</operator> <literal type="number" pos:start="29:21" pos:end="29:21">0</literal></expr>)</condition> <block pos:start="29:24" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:24">

        <comment type="block" pos:start="31:9" pos:end="31:72">/* padding is always necessary even if EOF, so we add it here */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:48"><expr pos:start="33:9" pos:end="33:47"><call pos:start="33:9" pos:end="33:47"><name pos:start="33:9" pos:end="33:14">memset</name><argument_list pos:start="33:15" pos:end="33:47">(<argument pos:start="33:16" pos:end="33:24"><expr pos:start="33:16" pos:end="33:24"><name pos:start="33:16" pos:end="33:24">dummy_buf</name></expr></argument>, <argument pos:start="33:27" pos:end="33:27"><expr pos:start="33:27" pos:end="33:27"><literal type="number" pos:start="33:27" pos:end="33:27">0</literal></expr></argument>, <argument pos:start="33:30" pos:end="33:46"><expr pos:start="33:30" pos:end="33:46"><sizeof pos:start="33:30" pos:end="33:46">sizeof<argument_list pos:start="33:36" pos:end="33:46">(<argument pos:start="33:37" pos:end="33:45"><expr pos:start="33:37" pos:end="33:45"><name pos:start="33:37" pos:end="33:45">dummy_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:11">buf</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:23">dummy_buf</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="37:7" pos:end="55:5">else if <condition pos:start="37:15" pos:end="37:86">(<expr pos:start="37:16" pos:end="37:85"><name pos:start="37:16" pos:end="37:28"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:28">cur_offset</name></name> <operator pos:start="37:30" pos:end="37:30">+</operator> <name pos:start="37:32" pos:end="37:39">buf_size</name> <operator pos:start="37:41" pos:end="37:42">!=</operator> <name pos:start="37:44" pos:end="37:85"><name pos:start="37:44" pos:end="37:44">s</name><operator pos:start="37:45" pos:end="37:46">-&gt;</operator><name pos:start="37:47" pos:end="37:59">cur_frame_end</name><index pos:start="37:60" pos:end="37:85">[<expr pos:start="37:61" pos:end="37:84"><name pos:start="37:61" pos:end="37:84"><name pos:start="37:61" pos:end="37:61">s</name><operator pos:start="37:62" pos:end="37:63">-&gt;</operator><name pos:start="37:64" pos:end="37:84">cur_frame_start_index</name></name></expr>]</index></name></expr>)</condition> <block pos:start="37:88" pos:end="55:5">{<block_content pos:start="41:9" pos:end="53:39"> <comment type="block" pos:start="37:90" pos:end="37:117">/* skip remainder packets */</comment>

        <comment type="block" pos:start="39:9" pos:end="39:41">/* add a new packet descriptor */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:68"><expr pos:start="41:9" pos:end="41:67"><name pos:start="41:9" pos:end="41:9">i</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <operator pos:start="41:13" pos:end="41:13">(</operator><name pos:start="41:14" pos:end="41:37"><name pos:start="41:14" pos:end="41:14">s</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:37">cur_frame_start_index</name></name> <operator pos:start="41:39" pos:end="41:39">+</operator> <literal type="number" pos:start="41:41" pos:end="41:41">1</literal><operator pos:start="41:42" pos:end="41:42">)</operator> <operator pos:start="41:44" pos:end="41:44">&amp;</operator> <operator pos:start="41:46" pos:end="41:46">(</operator><name pos:start="41:47" pos:end="41:62">AV_PARSER_PTS_NB</name> <operator pos:start="41:64" pos:end="41:64">-</operator> <literal type="number" pos:start="41:66" pos:end="41:66">1</literal><operator pos:start="41:67" pos:end="41:67">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:37"><expr pos:start="43:9" pos:end="43:36"><name pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:32">cur_frame_start_index</name></name> <operator pos:start="43:34" pos:end="43:34">=</operator> <name pos:start="43:36" pos:end="43:36">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:49"><expr pos:start="45:9" pos:end="45:48"><name pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:27">cur_frame_offset</name><index pos:start="45:28" pos:end="45:30">[<expr pos:start="45:29" pos:end="45:29"><name pos:start="45:29" pos:end="45:29">i</name></expr>]</index></name>   <operator pos:start="45:34" pos:end="45:34">=</operator> <name pos:start="45:36" pos:end="45:48"><name pos:start="45:36" pos:end="45:36">s</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:48">cur_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:60"><expr pos:start="47:9" pos:end="47:59"><name pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:24">cur_frame_end</name><index pos:start="47:25" pos:end="47:27">[<expr pos:start="47:26" pos:end="47:26"><name pos:start="47:26" pos:end="47:26">i</name></expr>]</index></name>      <operator pos:start="47:34" pos:end="47:34">=</operator> <name pos:start="47:36" pos:end="47:48"><name pos:start="47:36" pos:end="47:36">s</name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:48">cur_offset</name></name> <operator pos:start="47:50" pos:end="47:50">+</operator> <name pos:start="47:52" pos:end="47:59">buf_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:39"><expr pos:start="49:9" pos:end="49:38"><name pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:24">cur_frame_pts</name><index pos:start="49:25" pos:end="49:27">[<expr pos:start="49:26" pos:end="49:26"><name pos:start="49:26" pos:end="49:26">i</name></expr>]</index></name>      <operator pos:start="49:34" pos:end="49:34">=</operator> <name pos:start="49:36" pos:end="49:38">pts</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:39"><expr pos:start="51:9" pos:end="51:38"><name pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:24">cur_frame_dts</name><index pos:start="51:25" pos:end="51:27">[<expr pos:start="51:26" pos:end="51:26"><name pos:start="51:26" pos:end="51:26">i</name></expr>]</index></name>      <operator pos:start="51:34" pos:end="51:34">=</operator> <name pos:start="51:36" pos:end="51:38">dts</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:39"><expr pos:start="53:9" pos:end="53:38"><name pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:24">cur_frame_pos</name><index pos:start="53:25" pos:end="53:27">[<expr pos:start="53:26" pos:end="53:26"><name pos:start="53:26" pos:end="53:26">i</name></expr>]</index></name>      <operator pos:start="53:34" pos:end="53:34">=</operator> <name pos:start="53:36" pos:end="53:38">pos</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="71:5"><if pos:start="59:5" pos:end="71:5">if <condition pos:start="59:8" pos:end="59:27">(<expr pos:start="59:9" pos:end="59:26"><name pos:start="59:9" pos:end="59:26"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:26">fetch_timestamp</name></name></expr>)</condition> <block pos:start="59:29" pos:end="71:5">{<block_content pos:start="61:9" pos:end="69:36">

        <expr_stmt pos:start="61:9" pos:end="61:31"><expr pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:26">fetch_timestamp</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <literal type="number" pos:start="61:30" pos:end="61:30">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:36"><expr pos:start="63:9" pos:end="63:35"><name pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:19">last_pts</name></name>        <operator pos:start="63:28" pos:end="63:28">=</operator> <name pos:start="63:30" pos:end="63:35"><name pos:start="63:30" pos:end="63:30">s</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:35">pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:36"><expr pos:start="65:9" pos:end="65:35"><name pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:19">last_dts</name></name>        <operator pos:start="65:28" pos:end="65:28">=</operator> <name pos:start="65:30" pos:end="65:35"><name pos:start="65:30" pos:end="65:30">s</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:35">dts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:36"><expr pos:start="67:9" pos:end="67:35"><name pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:19">last_pos</name></name>        <operator pos:start="67:28" pos:end="67:28">=</operator> <name pos:start="67:30" pos:end="67:35"><name pos:start="67:30" pos:end="67:30">s</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:35">pos</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:36"><expr pos:start="69:9" pos:end="69:35"><call pos:start="69:9" pos:end="69:35"><name pos:start="69:9" pos:end="69:26">ff_fetch_timestamp</name><argument_list pos:start="69:27" pos:end="69:35">(<argument pos:start="69:28" pos:end="69:28"><expr pos:start="69:28" pos:end="69:28"><name pos:start="69:28" pos:end="69:28">s</name></expr></argument>, <argument pos:start="69:31" pos:end="69:31"><expr pos:start="69:31" pos:end="69:31"><literal type="number" pos:start="69:31" pos:end="69:31">0</literal></expr></argument>, <argument pos:start="69:34" pos:end="69:34"><expr pos:start="69:34" pos:end="69:34"><literal type="number" pos:start="69:34" pos:end="69:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="73:5" pos:end="73:53">/* WARNING: the returned index can be negative */</comment>

    <expr_stmt pos:start="75:5" pos:end="77:65"><expr pos:start="75:5" pos:end="77:64"><name pos:start="75:5" pos:end="75:9">index</name> <operator pos:start="75:11" pos:end="75:11">=</operator> <call pos:start="75:13" pos:end="77:64"><name pos:start="75:13" pos:end="75:35"><name pos:start="75:13" pos:end="75:13">s</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:21">parser</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:35">parser_parse</name></name><argument_list pos:start="75:36" pos:end="77:64">(<argument pos:start="75:37" pos:end="75:37"><expr pos:start="75:37" pos:end="75:37"><name pos:start="75:37" pos:end="75:37">s</name></expr></argument>, <argument pos:start="75:40" pos:end="75:44"><expr pos:start="75:40" pos:end="75:44"><name pos:start="75:40" pos:end="75:44">avctx</name></expr></argument>, <argument pos:start="75:47" pos:end="75:72"><expr pos:start="75:47" pos:end="75:72"><operator pos:start="75:47" pos:end="75:47">(</operator><specifier pos:start="75:48" pos:end="75:52">const</specifier> <name pos:start="75:54" pos:end="75:60">uint8_t</name> <operator pos:start="75:62" pos:end="75:62">*</operator><operator pos:start="75:63" pos:end="75:63">*</operator><operator pos:start="75:64" pos:end="75:64">)</operator> <name pos:start="75:66" pos:end="75:72">poutbuf</name></expr></argument>,

                                    <argument pos:start="77:37" pos:end="77:48"><expr pos:start="77:37" pos:end="77:48"><name pos:start="77:37" pos:end="77:48">poutbuf_size</name></expr></argument>, <argument pos:start="77:51" pos:end="77:53"><expr pos:start="77:51" pos:end="77:53"><name pos:start="77:51" pos:end="77:53">buf</name></expr></argument>, <argument pos:start="77:56" pos:end="77:63"><expr pos:start="77:56" pos:end="77:63"><name pos:start="77:56" pos:end="77:63">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="79:5" pos:end="79:33">/* update the file pointer */</comment>

    <if_stmt pos:start="81:5" pos:end="95:5"><if pos:start="81:5" pos:end="95:5">if <condition pos:start="81:8" pos:end="81:22">(<expr pos:start="81:9" pos:end="81:21"><operator pos:start="81:9" pos:end="81:9">*</operator><name pos:start="81:10" pos:end="81:21">poutbuf_size</name></expr>)</condition> <block pos:start="81:24" pos:end="95:5">{<block_content pos:start="85:9" pos:end="93:33">

        <comment type="block" pos:start="83:9" pos:end="83:49">/* fill the data for the current frame */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:47"><expr pos:start="85:9" pos:end="85:46"><name pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:23">frame_offset</name></name> <operator pos:start="85:25" pos:end="85:25">=</operator> <name pos:start="85:27" pos:end="85:46"><name pos:start="85:27" pos:end="85:27">s</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:46">next_frame_offset</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="89:9" pos:end="89:38">/* offset of the next frame */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:53"><expr pos:start="91:9" pos:end="91:52"><name pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:28">next_frame_offset</name></name> <operator pos:start="91:30" pos:end="91:30">=</operator> <name pos:start="91:32" pos:end="91:44"><name pos:start="91:32" pos:end="91:32">s</name><operator pos:start="91:33" pos:end="91:34">-&gt;</operator><name pos:start="91:35" pos:end="91:44">cur_offset</name></name> <operator pos:start="91:46" pos:end="91:46">+</operator> <name pos:start="91:48" pos:end="91:52">index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:33"><expr pos:start="93:9" pos:end="93:32"><name pos:start="93:9" pos:end="93:26"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:26">fetch_timestamp</name></name>   <operator pos:start="93:30" pos:end="93:30">=</operator> <literal type="number" pos:start="93:32" pos:end="93:32">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="97:5" pos:end="99:18"><if pos:start="97:5" pos:end="99:18">if <condition pos:start="97:8" pos:end="97:18">(<expr pos:start="97:9" pos:end="97:17"><name pos:start="97:9" pos:end="97:13">index</name> <operator pos:start="97:15" pos:end="97:15">&lt;</operator> <literal type="number" pos:start="97:17" pos:end="97:17">0</literal></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:18"><block_content pos:start="99:9" pos:end="99:18">

        <expr_stmt pos:start="99:9" pos:end="99:18"><expr pos:start="99:9" pos:end="99:17"><name pos:start="99:9" pos:end="99:13">index</name> <operator pos:start="99:15" pos:end="99:15">=</operator> <literal type="number" pos:start="99:17" pos:end="99:17">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:27"><expr pos:start="101:5" pos:end="101:26"><name pos:start="101:5" pos:end="101:17"><name pos:start="101:5" pos:end="101:5">s</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:17">cur_offset</name></name> <operator pos:start="101:19" pos:end="101:20">+=</operator> <name pos:start="101:22" pos:end="101:26">index</name></expr>;</expr_stmt>

    <return pos:start="103:5" pos:end="103:17">return <expr pos:start="103:12" pos:end="103:16"><name pos:start="103:12" pos:end="103:16">index</name></expr>;</return>

</block_content>}</block></function>
</unit>
