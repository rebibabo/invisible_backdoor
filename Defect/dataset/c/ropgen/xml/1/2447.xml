<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2447.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">qemu_rdma_post_recv_control</name><parameter_list pos:start="1:39" pos:end="1:66">(<parameter pos:start="1:40" pos:end="1:56"><decl pos:start="1:40" pos:end="1:56"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:50">RDMAContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">rdma</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:65"><decl pos:start="1:59" pos:end="1:65"><type pos:start="1:59" pos:end="1:65"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:65">idx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:22">ibv_recv_wr</name></name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:30">bad_wr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="15:27"><decl pos:start="7:5" pos:end="15:26"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:18">ibv_sge</name></name></type> <name pos:start="7:20" pos:end="7:22">sge</name> <init pos:start="7:24" pos:end="15:26">= <expr pos:start="7:26" pos:end="15:26"><block pos:start="7:26" pos:end="15:26">{

                            <expr pos:start="9:29" pos:end="9:74"><operator pos:start="9:29" pos:end="9:29">.</operator><name pos:start="9:30" pos:end="9:33">addr</name> <operator pos:start="9:35" pos:end="9:35">=</operator> <operator pos:start="9:37" pos:end="9:37">(</operator><name pos:start="9:38" pos:end="9:45">uint64_t</name><operator pos:start="9:46" pos:end="9:46">)</operator><operator pos:start="9:47" pos:end="9:47">(</operator><name pos:start="9:48" pos:end="9:65"><name pos:start="9:48" pos:end="9:51">rdma</name><operator pos:start="9:52" pos:end="9:53">-&gt;</operator><name pos:start="9:54" pos:end="9:60">wr_data</name><index pos:start="9:61" pos:end="9:65">[<expr pos:start="9:62" pos:end="9:64"><name pos:start="9:62" pos:end="9:64">idx</name></expr>]</index></name><operator pos:start="9:66" pos:end="9:66">.</operator><name pos:start="9:67" pos:end="9:73">control</name><operator pos:start="9:74" pos:end="9:74">)</operator></expr>,

                            <expr pos:start="11:29" pos:end="11:61"><operator pos:start="11:29" pos:end="11:29">.</operator><name pos:start="11:30" pos:end="11:35">length</name> <operator pos:start="11:37" pos:end="11:37">=</operator> <name pos:start="11:39" pos:end="11:61">RDMA_CONTROL_MAX_BUFFER</name></expr>,

                            <expr pos:start="13:29" pos:end="13:71"><operator pos:start="13:29" pos:end="13:29">.</operator><name pos:start="13:30" pos:end="13:33">lkey</name> <operator pos:start="13:35" pos:end="13:35">=</operator> <name pos:start="13:37" pos:end="13:54"><name pos:start="13:37" pos:end="13:40">rdma</name><operator pos:start="13:41" pos:end="13:42">-&gt;</operator><name pos:start="13:43" pos:end="13:49">wr_data</name><index pos:start="13:50" pos:end="13:54">[<expr pos:start="13:51" pos:end="13:53"><name pos:start="13:51" pos:end="13:53">idx</name></expr>]</index></name><operator pos:start="13:55" pos:end="13:55">.</operator><name pos:start="13:56" pos:end="13:71"><name pos:start="13:56" pos:end="13:65">control_mr</name><operator pos:start="13:66" pos:end="13:67">-&gt;</operator><name pos:start="13:68" pos:end="13:71">lkey</name></name></expr>,

                         }</block></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="19:5" pos:end="27:35"><decl pos:start="19:5" pos:end="27:34"><type pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:10">struct</name> <name pos:start="19:12" pos:end="19:22">ibv_recv_wr</name></name></type> <name pos:start="19:24" pos:end="19:30">recv_wr</name> <init pos:start="19:32" pos:end="27:34">= <expr pos:start="19:34" pos:end="27:34"><block pos:start="19:34" pos:end="27:34">{

                                    <expr pos:start="21:37" pos:end="21:73"><operator pos:start="21:37" pos:end="21:37">.</operator><name pos:start="21:38" pos:end="21:42">wr_id</name> <operator pos:start="21:44" pos:end="21:44">=</operator> <name pos:start="21:46" pos:end="21:67">RDMA_WRID_RECV_CONTROL</name> <operator pos:start="21:69" pos:end="21:69">+</operator> <name pos:start="21:71" pos:end="21:73">idx</name></expr>,

                                    <expr pos:start="23:37" pos:end="23:51"><operator pos:start="23:37" pos:end="23:37">.</operator><name pos:start="23:38" pos:end="23:44">sg_list</name> <operator pos:start="23:46" pos:end="23:46">=</operator> <operator pos:start="23:48" pos:end="23:48">&amp;</operator><name pos:start="23:49" pos:end="23:51">sge</name></expr>,

                                    <expr pos:start="25:37" pos:end="25:48"><operator pos:start="25:37" pos:end="25:37">.</operator><name pos:start="25:38" pos:end="25:44">num_sge</name> <operator pos:start="25:46" pos:end="25:46">=</operator> <literal type="number" pos:start="25:48" pos:end="25:48">1</literal></expr>,

                                 }</block></expr></init></decl>;</decl_stmt>





    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:51">(<expr pos:start="33:9" pos:end="33:50"><call pos:start="33:9" pos:end="33:50"><name pos:start="33:9" pos:end="33:21">ibv_post_recv</name><argument_list pos:start="33:22" pos:end="33:50">(<argument pos:start="33:23" pos:end="33:30"><expr pos:start="33:23" pos:end="33:30"><name pos:start="33:23" pos:end="33:30"><name pos:start="33:23" pos:end="33:26">rdma</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:30">qp</name></name></expr></argument>, <argument pos:start="33:33" pos:end="33:40"><expr pos:start="33:33" pos:end="33:40"><operator pos:start="33:33" pos:end="33:33">&amp;</operator><name pos:start="33:34" pos:end="33:40">recv_wr</name></expr></argument>, <argument pos:start="33:43" pos:end="33:49"><expr pos:start="33:43" pos:end="33:49"><operator pos:start="33:43" pos:end="33:43">&amp;</operator><name pos:start="33:44" pos:end="33:49">bad_wr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:53" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:18">

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
