<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/260.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">mxf_read_close</name><parameter_list pos:start="1:26" pos:end="1:45">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MXFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mxf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:24">MXFIndexTableSegment</name> <modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:29">seg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><call pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:12">av_freep</name><argument_list pos:start="13:13" pos:end="13:33">(<argument pos:start="13:14" pos:end="13:32"><expr pos:start="13:14" pos:end="13:32"><operator pos:start="13:14" pos:end="13:14">&amp;</operator><name pos:start="13:15" pos:end="13:32"><name pos:start="13:15" pos:end="13:17">mxf</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:32">packages_refs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="17:5" pos:end="19:40">for <control pos:start="17:9" pos:end="17:39">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:34"><expr pos:start="17:17" pos:end="17:33"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:33"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:33">nb_streams</name></name></expr>;</condition> <incr pos:start="17:36" pos:end="17:38"><expr pos:start="17:36" pos:end="17:38"><name pos:start="17:36" pos:end="17:36">i</name><operator pos:start="17:37" pos:end="17:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="19:9" pos:end="19:40"><block_content pos:start="19:9" pos:end="19:40">

        <expr_stmt pos:start="19:9" pos:end="19:40"><expr pos:start="19:9" pos:end="19:39"><name pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:18">streams</name><index pos:start="19:19" pos:end="19:21">[<expr pos:start="19:20" pos:end="19:20"><name pos:start="19:20" pos:end="19:20">i</name></expr>]</index></name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:32">priv_data</name> <operator pos:start="19:34" pos:end="19:34">=</operator> <name pos:start="19:36" pos:end="19:39">NULL</name></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="23:5" pos:end="67:5">for <control pos:start="23:9" pos:end="23:50">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:45"><expr pos:start="23:17" pos:end="23:44"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:44"><name pos:start="23:21" pos:end="23:23">mxf</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:44">metadata_sets_count</name></name></expr>;</condition> <incr pos:start="23:47" pos:end="23:49"><expr pos:start="23:47" pos:end="23:49"><name pos:start="23:47" pos:end="23:47">i</name><operator pos:start="23:48" pos:end="23:49">++</operator></expr></incr>)</control> <block pos:start="23:52" pos:end="67:5">{<block_content pos:start="25:9" pos:end="65:41">

        <switch pos:start="25:9" pos:end="63:9">switch <condition pos:start="25:16" pos:end="25:44">(<expr pos:start="25:17" pos:end="25:43"><name pos:start="25:17" pos:end="25:37"><name pos:start="25:17" pos:end="25:19">mxf</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:34">metadata_sets</name><index pos:start="25:35" pos:end="25:37">[<expr pos:start="25:36" pos:end="25:36"><name pos:start="25:36" pos:end="25:36">i</name></expr>]</index></name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:43">type</name></expr>)</condition> <block pos:start="25:46" pos:end="63:9">{<block_content pos:start="27:9" pos:end="61:18">

        <case pos:start="27:9" pos:end="27:32">case <expr pos:start="27:14" pos:end="27:31"><name pos:start="27:14" pos:end="27:31">MultipleDescriptor</name></expr>:</case>

            <expr_stmt pos:start="29:13" pos:end="29:86"><expr pos:start="29:13" pos:end="29:85"><call pos:start="29:13" pos:end="29:85"><name pos:start="29:13" pos:end="29:20">av_freep</name><argument_list pos:start="29:21" pos:end="29:85">(<argument pos:start="29:22" pos:end="29:84"><expr pos:start="29:22" pos:end="29:84"><operator pos:start="29:22" pos:end="29:22">&amp;</operator><operator pos:start="29:23" pos:end="29:23">(</operator><operator pos:start="29:24" pos:end="29:24">(</operator><name pos:start="29:25" pos:end="29:37">MXFDescriptor</name> <operator pos:start="29:39" pos:end="29:39">*</operator><operator pos:start="29:40" pos:end="29:40">)</operator><name pos:start="29:41" pos:end="29:61"><name pos:start="29:41" pos:end="29:43">mxf</name><operator pos:start="29:44" pos:end="29:45">-&gt;</operator><name pos:start="29:46" pos:end="29:58">metadata_sets</name><index pos:start="29:59" pos:end="29:61">[<expr pos:start="29:60" pos:end="29:60"><name pos:start="29:60" pos:end="29:60">i</name></expr>]</index></name><operator pos:start="29:62" pos:end="29:62">)</operator><operator pos:start="29:63" pos:end="29:64">-&gt;</operator><name pos:start="29:65" pos:end="29:84">sub_descriptors_refs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        <case pos:start="33:9" pos:end="33:22">case <expr pos:start="33:14" pos:end="33:21"><name pos:start="33:14" pos:end="33:21">Sequence</name></expr>:</case>

            <expr_stmt pos:start="35:13" pos:end="35:90"><expr pos:start="35:13" pos:end="35:89"><call pos:start="35:13" pos:end="35:89"><name pos:start="35:13" pos:end="35:20">av_freep</name><argument_list pos:start="35:21" pos:end="35:89">(<argument pos:start="35:22" pos:end="35:88"><expr pos:start="35:22" pos:end="35:88"><operator pos:start="35:22" pos:end="35:22">&amp;</operator><operator pos:start="35:23" pos:end="35:23">(</operator><operator pos:start="35:24" pos:end="35:24">(</operator><name pos:start="35:25" pos:end="35:35">MXFSequence</name> <operator pos:start="35:37" pos:end="35:37">*</operator><operator pos:start="35:38" pos:end="35:38">)</operator><name pos:start="35:39" pos:end="35:59"><name pos:start="35:39" pos:end="35:41">mxf</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:56">metadata_sets</name><index pos:start="35:57" pos:end="35:59">[<expr pos:start="35:58" pos:end="35:58"><name pos:start="35:58" pos:end="35:58">i</name></expr>]</index></name><operator pos:start="35:60" pos:end="35:60">)</operator><operator pos:start="35:61" pos:end="35:62">-&gt;</operator><name pos:start="35:63" pos:end="35:88">structural_components_refs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:27">case <expr pos:start="39:14" pos:end="39:26"><name pos:start="39:14" pos:end="39:26">SourcePackage</name></expr>:</case>

        <case pos:start="41:9" pos:end="41:29">case <expr pos:start="41:14" pos:end="41:28"><name pos:start="41:14" pos:end="41:28">MaterialPackage</name></expr>:</case>

            <expr_stmt pos:start="43:13" pos:end="43:74"><expr pos:start="43:13" pos:end="43:73"><call pos:start="43:13" pos:end="43:73"><name pos:start="43:13" pos:end="43:20">av_freep</name><argument_list pos:start="43:21" pos:end="43:73">(<argument pos:start="43:22" pos:end="43:72"><expr pos:start="43:22" pos:end="43:72"><operator pos:start="43:22" pos:end="43:22">&amp;</operator><operator pos:start="43:23" pos:end="43:23">(</operator><operator pos:start="43:24" pos:end="43:24">(</operator><name pos:start="43:25" pos:end="43:34">MXFPackage</name> <operator pos:start="43:36" pos:end="43:36">*</operator><operator pos:start="43:37" pos:end="43:37">)</operator><name pos:start="43:38" pos:end="43:58"><name pos:start="43:38" pos:end="43:40">mxf</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:55">metadata_sets</name><index pos:start="43:56" pos:end="43:58">[<expr pos:start="43:57" pos:end="43:57"><name pos:start="43:57" pos:end="43:57">i</name></expr>]</index></name><operator pos:start="43:59" pos:end="43:59">)</operator><operator pos:start="43:60" pos:end="43:61">-&gt;</operator><name pos:start="43:62" pos:end="43:72">tracks_refs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        <case pos:start="47:9" pos:end="47:31">case <expr pos:start="47:14" pos:end="47:30"><name pos:start="47:14" pos:end="47:30">IndexTableSegment</name></expr>:</case>

            <expr_stmt pos:start="49:13" pos:end="49:64"><expr pos:start="49:13" pos:end="49:63"><name pos:start="49:13" pos:end="49:15">seg</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <operator pos:start="49:19" pos:end="49:19">(</operator><name pos:start="49:20" pos:end="49:39">MXFIndexTableSegment</name> <operator pos:start="49:41" pos:end="49:41">*</operator><operator pos:start="49:42" pos:end="49:42">)</operator><name pos:start="49:43" pos:end="49:63"><name pos:start="49:43" pos:end="49:45">mxf</name><operator pos:start="49:46" pos:end="49:47">-&gt;</operator><name pos:start="49:48" pos:end="49:60">metadata_sets</name><index pos:start="49:61" pos:end="49:63">[<expr pos:start="49:62" pos:end="49:62"><name pos:start="49:62" pos:end="49:62">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:52"><expr pos:start="51:13" pos:end="51:51"><call pos:start="51:13" pos:end="51:51"><name pos:start="51:13" pos:end="51:20">av_freep</name><argument_list pos:start="51:21" pos:end="51:51">(<argument pos:start="51:22" pos:end="51:50"><expr pos:start="51:22" pos:end="51:50"><operator pos:start="51:22" pos:end="51:22">&amp;</operator><name pos:start="51:23" pos:end="51:50"><name pos:start="51:23" pos:end="51:25">seg</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:50">temporal_offset_entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:41"><expr pos:start="53:13" pos:end="53:40"><call pos:start="53:13" pos:end="53:40"><name pos:start="53:13" pos:end="53:20">av_freep</name><argument_list pos:start="53:21" pos:end="53:40">(<argument pos:start="53:22" pos:end="53:39"><expr pos:start="53:22" pos:end="53:39"><operator pos:start="53:22" pos:end="53:22">&amp;</operator><name pos:start="53:23" pos:end="53:39"><name pos:start="53:23" pos:end="53:25">seg</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:39">flag_entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:50"><expr pos:start="55:13" pos:end="55:49"><call pos:start="55:13" pos:end="55:49"><name pos:start="55:13" pos:end="55:20">av_freep</name><argument_list pos:start="55:21" pos:end="55:49">(<argument pos:start="55:22" pos:end="55:48"><expr pos:start="55:22" pos:end="55:48"><operator pos:start="55:22" pos:end="55:22">&amp;</operator><name pos:start="55:23" pos:end="55:48"><name pos:start="55:23" pos:end="55:25">seg</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:48">stream_offset_entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <default pos:start="59:9" pos:end="59:16">default:</default>

            <break pos:start="61:13" pos:end="61:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="65:9" pos:end="65:41"><expr pos:start="65:9" pos:end="65:40"><call pos:start="65:9" pos:end="65:40"><name pos:start="65:9" pos:end="65:16">av_freep</name><argument_list pos:start="65:17" pos:end="65:40">(<argument pos:start="65:18" pos:end="65:39"><expr pos:start="65:18" pos:end="65:39"><operator pos:start="65:18" pos:end="65:18">&amp;</operator><name pos:start="65:19" pos:end="65:39"><name pos:start="65:19" pos:end="65:21">mxf</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:36">metadata_sets</name><index pos:start="65:37" pos:end="65:39">[<expr pos:start="65:38" pos:end="65:38"><name pos:start="65:38" pos:end="65:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="69:5" pos:end="69:31"><expr pos:start="69:5" pos:end="69:30"><call pos:start="69:5" pos:end="69:30"><name pos:start="69:5" pos:end="69:12">av_freep</name><argument_list pos:start="69:13" pos:end="69:30">(<argument pos:start="69:14" pos:end="69:29"><expr pos:start="69:14" pos:end="69:29"><operator pos:start="69:14" pos:end="69:14">&amp;</operator><name pos:start="69:15" pos:end="69:29"><name pos:start="69:15" pos:end="69:17">mxf</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:29">partitions</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:34"><expr pos:start="71:5" pos:end="71:33"><call pos:start="71:5" pos:end="71:33"><name pos:start="71:5" pos:end="71:12">av_freep</name><argument_list pos:start="71:13" pos:end="71:33">(<argument pos:start="71:14" pos:end="71:32"><expr pos:start="71:14" pos:end="71:32"><operator pos:start="71:14" pos:end="71:14">&amp;</operator><name pos:start="71:15" pos:end="71:32"><name pos:start="71:15" pos:end="71:17">mxf</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:32">metadata_sets</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:25"><expr pos:start="73:5" pos:end="73:24"><call pos:start="73:5" pos:end="73:24"><name pos:start="73:5" pos:end="73:12">av_freep</name><argument_list pos:start="73:13" pos:end="73:24">(<argument pos:start="73:14" pos:end="73:23"><expr pos:start="73:14" pos:end="73:23"><operator pos:start="73:14" pos:end="73:14">&amp;</operator><name pos:start="73:15" pos:end="73:23"><name pos:start="73:15" pos:end="73:17">mxf</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:23">aesc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:31"><expr pos:start="75:5" pos:end="75:30"><call pos:start="75:5" pos:end="75:30"><name pos:start="75:5" pos:end="75:12">av_freep</name><argument_list pos:start="75:13" pos:end="75:30">(<argument pos:start="75:14" pos:end="75:29"><expr pos:start="75:14" pos:end="75:29"><operator pos:start="75:14" pos:end="75:14">&amp;</operator><name pos:start="75:15" pos:end="75:29"><name pos:start="75:15" pos:end="75:17">mxf</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:29">local_tags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="79:5" pos:end="87:5">for <control pos:start="79:9" pos:end="79:46">(<init pos:start="79:10" pos:end="79:15"><expr pos:start="79:10" pos:end="79:14"><name pos:start="79:10" pos:end="79:10">i</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <literal type="number" pos:start="79:14" pos:end="79:14">0</literal></expr>;</init> <condition pos:start="79:17" pos:end="79:41"><expr pos:start="79:17" pos:end="79:40"><name pos:start="79:17" pos:end="79:17">i</name> <operator pos:start="79:19" pos:end="79:19">&lt;</operator> <name pos:start="79:21" pos:end="79:40"><name pos:start="79:21" pos:end="79:23">mxf</name><operator pos:start="79:24" pos:end="79:25">-&gt;</operator><name pos:start="79:26" pos:end="79:40">nb_index_tables</name></name></expr>;</condition> <incr pos:start="79:43" pos:end="79:45"><expr pos:start="79:43" pos:end="79:45"><name pos:start="79:43" pos:end="79:43">i</name><operator pos:start="79:44" pos:end="79:45">++</operator></expr></incr>)</control> <block pos:start="79:48" pos:end="87:5">{<block_content pos:start="81:9" pos:end="85:51">

        <expr_stmt pos:start="81:9" pos:end="81:49"><expr pos:start="81:9" pos:end="81:48"><call pos:start="81:9" pos:end="81:48"><name pos:start="81:9" pos:end="81:16">av_freep</name><argument_list pos:start="81:17" pos:end="81:48">(<argument pos:start="81:18" pos:end="81:47"><expr pos:start="81:18" pos:end="81:47"><operator pos:start="81:18" pos:end="81:18">&amp;</operator><name pos:start="81:19" pos:end="81:38"><name pos:start="81:19" pos:end="81:21">mxf</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:35">index_tables</name><index pos:start="81:36" pos:end="81:38">[<expr pos:start="81:37" pos:end="81:37"><name pos:start="81:37" pos:end="81:37">i</name></expr>]</index></name><operator pos:start="81:39" pos:end="81:39">.</operator><name pos:start="81:40" pos:end="81:47">segments</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:46"><expr pos:start="83:9" pos:end="83:45"><call pos:start="83:9" pos:end="83:45"><name pos:start="83:9" pos:end="83:16">av_freep</name><argument_list pos:start="83:17" pos:end="83:45">(<argument pos:start="83:18" pos:end="83:44"><expr pos:start="83:18" pos:end="83:44"><operator pos:start="83:18" pos:end="83:18">&amp;</operator><name pos:start="83:19" pos:end="83:38"><name pos:start="83:19" pos:end="83:21">mxf</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:35">index_tables</name><index pos:start="83:36" pos:end="83:38">[<expr pos:start="83:37" pos:end="83:37"><name pos:start="83:37" pos:end="83:37">i</name></expr>]</index></name><operator pos:start="83:39" pos:end="83:39">.</operator><name pos:start="83:40" pos:end="83:44">ptses</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:51"><expr pos:start="85:9" pos:end="85:50"><call pos:start="85:9" pos:end="85:50"><name pos:start="85:9" pos:end="85:16">av_freep</name><argument_list pos:start="85:17" pos:end="85:50">(<argument pos:start="85:18" pos:end="85:49"><expr pos:start="85:18" pos:end="85:49"><operator pos:start="85:18" pos:end="85:18">&amp;</operator><name pos:start="85:19" pos:end="85:38"><name pos:start="85:19" pos:end="85:21">mxf</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:35">index_tables</name><index pos:start="85:36" pos:end="85:38">[<expr pos:start="85:37" pos:end="85:37"><name pos:start="85:37" pos:end="85:37">i</name></expr>]</index></name><operator pos:start="85:39" pos:end="85:39">.</operator><name pos:start="85:40" pos:end="85:49">fake_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="89:5" pos:end="89:33"><expr pos:start="89:5" pos:end="89:32"><call pos:start="89:5" pos:end="89:32"><name pos:start="89:5" pos:end="89:12">av_freep</name><argument_list pos:start="89:13" pos:end="89:32">(<argument pos:start="89:14" pos:end="89:31"><expr pos:start="89:14" pos:end="89:31"><operator pos:start="89:14" pos:end="89:14">&amp;</operator><name pos:start="89:15" pos:end="89:31"><name pos:start="89:15" pos:end="89:17">mxf</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:31">index_tables</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
