<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21926.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:31">ff_h264_decode_init</name><parameter_list pos:start="1:32" pos:end="1:54">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="203:1">{<block_content pos:start="5:5" pos:end="201:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">H264Context</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">h</name> <init pos:start="5:20" pos:end="5:37">= <expr pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:26">avctx</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:21"><expr pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:5">h</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:12">avctx</name></name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:20">avctx</name></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:29"><expr pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:5">h</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:21">bit_depth_luma</name></name>    <operator pos:start="17:26" pos:end="17:26">=</operator> <literal type="number" pos:start="17:28" pos:end="17:28">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:5">h</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:24">chroma_format_idc</name></name> <operator pos:start="19:26" pos:end="19:26">=</operator> <literal type="number" pos:start="19:28" pos:end="19:28">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:5">h</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:28">cur_chroma_format_idc</name></name> <operator pos:start="23:30" pos:end="23:30">=</operator> <literal type="number" pos:start="23:32" pos:end="23:32">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:39"><expr pos:start="27:5" pos:end="27:38"><call pos:start="27:5" pos:end="27:38"><name pos:start="27:5" pos:end="27:19">ff_h264dsp_init</name><argument_list pos:start="27:20" pos:end="27:38">(<argument pos:start="27:21" pos:end="27:31"><expr pos:start="27:21" pos:end="27:31"><operator pos:start="27:21" pos:end="27:21">&amp;</operator><name pos:start="27:22" pos:end="27:31"><name pos:start="27:22" pos:end="27:22">h</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:31">h264dsp</name></name></expr></argument>, <argument pos:start="27:34" pos:end="27:34"><expr pos:start="27:34" pos:end="27:34"><literal type="number" pos:start="27:34" pos:end="27:34">8</literal></expr></argument>, <argument pos:start="27:37" pos:end="27:37"><expr pos:start="27:37" pos:end="27:37"><literal type="number" pos:start="27:37" pos:end="27:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><call pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:14">av_assert0</name><argument_list pos:start="29:15" pos:end="29:44">(<argument pos:start="29:16" pos:end="29:43"><expr pos:start="29:16" pos:end="29:43"><name pos:start="29:16" pos:end="29:38"><name pos:start="29:16" pos:end="29:16">h</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:21">sps</name><operator pos:start="29:22" pos:end="29:22">.</operator><name pos:start="29:23" pos:end="29:38">bit_depth_chroma</name></name> <operator pos:start="29:40" pos:end="29:41">==</operator> <literal type="number" pos:start="29:43" pos:end="29:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:64"><expr pos:start="31:5" pos:end="31:63"><call pos:start="31:5" pos:end="31:63"><name pos:start="31:5" pos:end="31:22">ff_h264chroma_init</name><argument_list pos:start="31:23" pos:end="31:63">(<argument pos:start="31:24" pos:end="31:37"><expr pos:start="31:24" pos:end="31:37"><operator pos:start="31:24" pos:end="31:24">&amp;</operator><name pos:start="31:25" pos:end="31:37"><name pos:start="31:25" pos:end="31:25">h</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:37">h264chroma</name></name></expr></argument>, <argument pos:start="31:40" pos:end="31:62"><expr pos:start="31:40" pos:end="31:62"><name pos:start="31:40" pos:end="31:62"><name pos:start="31:40" pos:end="31:40">h</name><operator pos:start="31:41" pos:end="31:42">-&gt;</operator><name pos:start="31:43" pos:end="31:45">sps</name><operator pos:start="31:46" pos:end="31:46">.</operator><name pos:start="31:47" pos:end="31:62">bit_depth_chroma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:38"><expr pos:start="33:5" pos:end="33:37"><call pos:start="33:5" pos:end="33:37"><name pos:start="33:5" pos:end="33:20">ff_h264qpel_init</name><argument_list pos:start="33:21" pos:end="33:37">(<argument pos:start="33:22" pos:end="33:33"><expr pos:start="33:22" pos:end="33:33"><operator pos:start="33:22" pos:end="33:22">&amp;</operator><name pos:start="33:23" pos:end="33:33"><name pos:start="33:23" pos:end="33:23">h</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:33">h264qpel</name></name></expr></argument>, <argument pos:start="33:36" pos:end="33:36"><expr pos:start="33:36" pos:end="33:36"><literal type="number" pos:start="33:36" pos:end="33:36">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:57"><expr pos:start="35:5" pos:end="35:56"><call pos:start="35:5" pos:end="35:56"><name pos:start="35:5" pos:end="35:21">ff_h264_pred_init</name><argument_list pos:start="35:22" pos:end="35:56">(<argument pos:start="35:23" pos:end="35:29"><expr pos:start="35:23" pos:end="35:29"><operator pos:start="35:23" pos:end="35:23">&amp;</operator><name pos:start="35:24" pos:end="35:29"><name pos:start="35:24" pos:end="35:24">h</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:29">hpc</name></name></expr></argument>, <argument pos:start="35:32" pos:end="35:49"><expr pos:start="35:32" pos:end="35:49"><name pos:start="35:32" pos:end="35:49"><name pos:start="35:32" pos:end="35:32">h</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:39">avctx</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:49">codec_id</name></name></expr></argument>, <argument pos:start="35:52" pos:end="35:52"><expr pos:start="35:52" pos:end="35:52"><literal type="number" pos:start="35:52" pos:end="35:52">8</literal></expr></argument>, <argument pos:start="35:55" pos:end="35:55"><expr pos:start="35:55" pos:end="35:55"><literal type="number" pos:start="35:55" pos:end="35:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:30"><expr pos:start="39:5" pos:end="39:29"><name pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:5">h</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:24">dequant_coeff_pps</name></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <operator pos:start="39:28" pos:end="39:28">-</operator><literal type="number" pos:start="39:29" pos:end="39:29">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:27"><expr pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:5">h</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:21">current_sps_id</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <operator pos:start="41:25" pos:end="41:25">-</operator><literal type="number" pos:start="41:26" pos:end="41:26">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:56">/* needed so that IDCT permutation is known early */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:34"><expr pos:start="47:5" pos:end="47:33"><call pos:start="47:5" pos:end="47:33"><name pos:start="47:5" pos:end="47:20">ff_videodsp_init</name><argument_list pos:start="47:21" pos:end="47:33">(<argument pos:start="47:22" pos:end="47:29"><expr pos:start="47:22" pos:end="47:29"><operator pos:start="47:22" pos:end="47:22">&amp;</operator><name pos:start="47:23" pos:end="47:29"><name pos:start="47:23" pos:end="47:23">h</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:29">vdsp</name></name></expr></argument>, <argument pos:start="47:32" pos:end="47:32"><expr pos:start="47:32" pos:end="47:32"><literal type="number" pos:start="47:32" pos:end="47:32">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:65"><expr pos:start="51:5" pos:end="51:64"><call pos:start="51:5" pos:end="51:64"><name pos:start="51:5" pos:end="51:10">memset</name><argument_list pos:start="51:11" pos:end="51:64">(<argument pos:start="51:12" pos:end="51:33"><expr pos:start="51:12" pos:end="51:33"><name pos:start="51:12" pos:end="51:33"><name pos:start="51:12" pos:end="51:12">h</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:17">pps</name><operator pos:start="51:18" pos:end="51:18">.</operator><name pos:start="51:19" pos:end="51:33">scaling_matrix4</name></name></expr></argument>, <argument pos:start="51:36" pos:end="51:37"><expr pos:start="51:36" pos:end="51:37"><literal type="number" pos:start="51:36" pos:end="51:37">16</literal></expr></argument>, <argument pos:start="51:40" pos:end="51:63"><expr pos:start="51:40" pos:end="51:63"><literal type="number" pos:start="51:40" pos:end="51:40">6</literal> <operator pos:start="51:42" pos:end="51:42">*</operator> <literal type="number" pos:start="51:44" pos:end="51:45">16</literal> <operator pos:start="51:47" pos:end="51:47">*</operator> <sizeof pos:start="51:49" pos:end="51:63">sizeof<argument_list pos:start="51:55" pos:end="51:63">(<argument pos:start="51:56" pos:end="51:62"><expr pos:start="51:56" pos:end="51:62"><name pos:start="51:56" pos:end="51:62">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:65"><expr pos:start="53:5" pos:end="53:64"><call pos:start="53:5" pos:end="53:64"><name pos:start="53:5" pos:end="53:10">memset</name><argument_list pos:start="53:11" pos:end="53:64">(<argument pos:start="53:12" pos:end="53:33"><expr pos:start="53:12" pos:end="53:33"><name pos:start="53:12" pos:end="53:33"><name pos:start="53:12" pos:end="53:12">h</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:17">pps</name><operator pos:start="53:18" pos:end="53:18">.</operator><name pos:start="53:19" pos:end="53:33">scaling_matrix8</name></name></expr></argument>, <argument pos:start="53:36" pos:end="53:37"><expr pos:start="53:36" pos:end="53:37"><literal type="number" pos:start="53:36" pos:end="53:37">16</literal></expr></argument>, <argument pos:start="53:40" pos:end="53:63"><expr pos:start="53:40" pos:end="53:63"><literal type="number" pos:start="53:40" pos:end="53:40">2</literal> <operator pos:start="53:42" pos:end="53:42">*</operator> <literal type="number" pos:start="53:44" pos:end="53:45">64</literal> <operator pos:start="53:47" pos:end="53:47">*</operator> <sizeof pos:start="53:49" pos:end="53:63">sizeof<argument_list pos:start="53:55" pos:end="53:63">(<argument pos:start="53:56" pos:end="53:62"><expr pos:start="53:56" pos:end="53:62"><name pos:start="53:56" pos:end="53:62">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:40"><expr pos:start="57:5" pos:end="57:39"><name pos:start="57:5" pos:end="57:24"><name pos:start="57:5" pos:end="57:5">h</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:24">picture_structure</name></name>   <operator pos:start="57:28" pos:end="57:28">=</operator> <name pos:start="57:30" pos:end="57:39">PICT_FRAME</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:31"><expr pos:start="59:5" pos:end="59:30"><name pos:start="59:5" pos:end="59:26"><name pos:start="59:5" pos:end="59:5">h</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:26">slice_context_count</name></name> <operator pos:start="59:28" pos:end="59:28">=</operator> <literal type="number" pos:start="59:30" pos:end="59:30">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:52"><expr pos:start="61:5" pos:end="61:51"><name pos:start="61:5" pos:end="61:22"><name pos:start="61:5" pos:end="61:5">h</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:22">workaround_bugs</name></name>     <operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:51"><name pos:start="61:30" pos:end="61:34">avctx</name><operator pos:start="61:35" pos:end="61:36">-&gt;</operator><name pos:start="61:37" pos:end="61:51">workaround_bugs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:42"><expr pos:start="63:5" pos:end="63:41"><name pos:start="63:5" pos:end="63:12"><name pos:start="63:5" pos:end="63:5">h</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:12">flags</name></name>               <operator pos:start="63:28" pos:end="63:28">=</operator> <name pos:start="63:30" pos:end="63:41"><name pos:start="63:30" pos:end="63:34">avctx</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:41">flags</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:22">/* set defaults */</comment>

    <comment type="line" pos:start="69:5" pos:end="69:40">// s-&gt;decode_mb = ff_h263_decode_mb;</comment>

    <if_stmt pos:start="71:5" pos:end="73:25"><if pos:start="71:5" pos:end="73:25">if <condition pos:start="71:8" pos:end="71:29">(<expr pos:start="71:9" pos:end="71:28"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:28"><name pos:start="71:10" pos:end="71:14">avctx</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:28">has_b_frames</name></name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:25"><block_content pos:start="73:9" pos:end="73:25">

        <expr_stmt pos:start="73:9" pos:end="73:25"><expr pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:9">h</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:20">low_delay</name></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <literal type="number" pos:start="73:24" pos:end="73:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:54"><expr pos:start="77:5" pos:end="77:53"><name pos:start="77:5" pos:end="77:33"><name pos:start="77:5" pos:end="77:9">avctx</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:33">chroma_sample_location</name></name> <operator pos:start="77:35" pos:end="77:35">=</operator> <name pos:start="77:37" pos:end="77:53">AVCHROMA_LOC_LEFT</name></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:30"><expr pos:start="81:5" pos:end="81:29"><call pos:start="81:5" pos:end="81:29"><name pos:start="81:5" pos:end="81:27">ff_h264_decode_init_vlc</name><argument_list pos:start="81:28" pos:end="81:29">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:27"><expr pos:start="85:5" pos:end="85:26"><call pos:start="85:5" pos:end="85:26"><name pos:start="85:5" pos:end="85:24">ff_init_cabac_states</name><argument_list pos:start="85:25" pos:end="85:26">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:30"><expr pos:start="89:5" pos:end="89:29"><name pos:start="89:5" pos:end="89:18"><name pos:start="89:5" pos:end="89:5">h</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:18">pixel_shift</name></name>        <operator pos:start="89:27" pos:end="89:27">=</operator> <literal type="number" pos:start="89:29" pos:end="89:29">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="93:59"><expr pos:start="91:5" pos:end="93:58"><name pos:start="91:5" pos:end="91:25"><name pos:start="91:5" pos:end="91:5">h</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:25">cur_bit_depth_luma</name></name> <operator pos:start="91:27" pos:end="91:27">=</operator>

    <name pos:start="93:5" pos:end="93:25"><name pos:start="93:5" pos:end="93:5">h</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:10">sps</name><operator pos:start="93:11" pos:end="93:11">.</operator><name pos:start="93:12" pos:end="93:25">bit_depth_luma</name></name> <operator pos:start="93:27" pos:end="93:27">=</operator> <name pos:start="93:29" pos:end="93:54"><name pos:start="93:29" pos:end="93:33">avctx</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:54">bits_per_raw_sample</name></name> <operator pos:start="93:56" pos:end="93:56">=</operator> <literal type="number" pos:start="93:58" pos:end="93:58">8</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:92"><expr pos:start="97:5" pos:end="97:91"><name pos:start="97:5" pos:end="97:19"><name pos:start="97:5" pos:end="97:5">h</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:19">nb_slice_ctx</name></name> <operator pos:start="97:21" pos:end="97:21">=</operator> <ternary pos:start="97:23" pos:end="97:91"><condition pos:start="97:23" pos:end="97:69"><expr pos:start="97:23" pos:end="97:67"><operator pos:start="97:23" pos:end="97:23">(</operator><name pos:start="97:24" pos:end="97:48"><name pos:start="97:24" pos:end="97:28">avctx</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:48">active_thread_type</name></name> <operator pos:start="97:50" pos:end="97:50">&amp;</operator> <name pos:start="97:52" pos:end="97:66">FF_THREAD_SLICE</name><operator pos:start="97:67" pos:end="97:67">)</operator></expr> ?</condition><then pos:start="97:72" pos:end="97:87">  <expr pos:start="97:72" pos:end="97:87"><name pos:start="97:72" pos:end="97:87">H264_MAX_THREADS</name></expr> </then><else pos:start="97:89" pos:end="97:91">: <expr pos:start="97:91" pos:end="97:91"><literal type="number" pos:start="97:91" pos:end="97:91">1</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:76"><expr pos:start="99:5" pos:end="99:75"><name pos:start="99:5" pos:end="99:16"><name pos:start="99:5" pos:end="99:5">h</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:16">slice_ctx</name></name> <operator pos:start="99:18" pos:end="99:18">=</operator> <call pos:start="99:20" pos:end="99:75"><name pos:start="99:20" pos:end="99:35">av_mallocz_array</name><argument_list pos:start="99:36" pos:end="99:75">(<argument pos:start="99:37" pos:end="99:51"><expr pos:start="99:37" pos:end="99:51"><name pos:start="99:37" pos:end="99:51"><name pos:start="99:37" pos:end="99:37">h</name><operator pos:start="99:38" pos:end="99:39">-&gt;</operator><name pos:start="99:40" pos:end="99:51">nb_slice_ctx</name></name></expr></argument>, <argument pos:start="99:54" pos:end="99:74"><expr pos:start="99:54" pos:end="99:74"><sizeof pos:start="99:54" pos:end="99:74">sizeof<argument_list pos:start="99:60" pos:end="99:74">(<argument pos:start="99:61" pos:end="99:73"><expr pos:start="99:61" pos:end="99:73"><operator pos:start="99:61" pos:end="99:61">*</operator><name pos:start="99:62" pos:end="99:73"><name pos:start="99:62" pos:end="99:62">h</name><operator pos:start="99:63" pos:end="99:64">-&gt;</operator><name pos:start="99:65" pos:end="99:73">slice_ctx</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="107:5"><if pos:start="101:5" pos:end="107:5">if <condition pos:start="101:8" pos:end="101:22">(<expr pos:start="101:9" pos:end="101:21"><operator pos:start="101:9" pos:end="101:9">!</operator><name pos:start="101:10" pos:end="101:21"><name pos:start="101:10" pos:end="101:10">h</name><operator pos:start="101:11" pos:end="101:12">-&gt;</operator><name pos:start="101:13" pos:end="101:21">slice_ctx</name></name></expr>)</condition> <block pos:start="101:24" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:31">

        <expr_stmt pos:start="103:9" pos:end="103:28"><expr pos:start="103:9" pos:end="103:27"><name pos:start="103:9" pos:end="103:23"><name pos:start="103:9" pos:end="103:9">h</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:23">nb_slice_ctx</name></name> <operator pos:start="103:25" pos:end="103:25">=</operator> <literal type="number" pos:start="103:27" pos:end="103:27">0</literal></expr>;</expr_stmt>

        <return pos:start="105:9" pos:end="105:31">return <expr pos:start="105:16" pos:end="105:30"><call pos:start="105:16" pos:end="105:30"><name pos:start="105:16" pos:end="105:22">AVERROR</name><argument_list pos:start="105:23" pos:end="105:30">(<argument pos:start="105:24" pos:end="105:29"><expr pos:start="105:24" pos:end="105:29"><name pos:start="105:24" pos:end="105:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="111:5" pos:end="113:33">for <control pos:start="111:9" pos:end="111:41">(<init pos:start="111:10" pos:end="111:15"><expr pos:start="111:10" pos:end="111:14"><name pos:start="111:10" pos:end="111:10">i</name> <operator pos:start="111:12" pos:end="111:12">=</operator> <literal type="number" pos:start="111:14" pos:end="111:14">0</literal></expr>;</init> <condition pos:start="111:17" pos:end="111:36"><expr pos:start="111:17" pos:end="111:35"><name pos:start="111:17" pos:end="111:17">i</name> <operator pos:start="111:19" pos:end="111:19">&lt;</operator> <name pos:start="111:21" pos:end="111:35"><name pos:start="111:21" pos:end="111:21">h</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:35">nb_slice_ctx</name></name></expr>;</condition> <incr pos:start="111:38" pos:end="111:40"><expr pos:start="111:38" pos:end="111:40"><name pos:start="111:38" pos:end="111:38">i</name><operator pos:start="111:39" pos:end="111:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="113:9" pos:end="113:33"><block_content pos:start="113:9" pos:end="113:33">

        <expr_stmt pos:start="113:9" pos:end="113:33"><expr pos:start="113:9" pos:end="113:32"><name pos:start="113:9" pos:end="113:23"><name pos:start="113:9" pos:end="113:9">h</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:20">slice_ctx</name><index pos:start="113:21" pos:end="113:23">[<expr pos:start="113:22" pos:end="113:22"><name pos:start="113:22" pos:end="113:22">i</name></expr>]</index></name><operator pos:start="113:24" pos:end="113:24">.</operator><name pos:start="113:25" pos:end="113:28">h264</name> <operator pos:start="113:30" pos:end="113:30">=</operator> <name pos:start="113:32" pos:end="113:32">h</name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="117:5" pos:end="117:58"><expr pos:start="117:5" pos:end="117:57"><name pos:start="117:5" pos:end="117:19"><name pos:start="117:5" pos:end="117:5">h</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:19">outputed_poc</name></name>      <operator pos:start="117:26" pos:end="117:26">=</operator> <name pos:start="117:28" pos:end="117:47"><name pos:start="117:28" pos:end="117:28">h</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:47">next_outputed_poc</name></name> <operator pos:start="117:49" pos:end="117:49">=</operator> <name pos:start="117:51" pos:end="117:57">INT_MIN</name></expr>;</expr_stmt>

    <for pos:start="119:5" pos:end="121:34">for <control pos:start="119:9" pos:end="119:47">(<init pos:start="119:10" pos:end="119:15"><expr pos:start="119:10" pos:end="119:14"><name pos:start="119:10" pos:end="119:10">i</name> <operator pos:start="119:12" pos:end="119:12">=</operator> <literal type="number" pos:start="119:14" pos:end="119:14">0</literal></expr>;</init> <condition pos:start="119:17" pos:end="119:42"><expr pos:start="119:17" pos:end="119:41"><name pos:start="119:17" pos:end="119:17">i</name> <operator pos:start="119:19" pos:end="119:19">&lt;</operator> <name pos:start="119:21" pos:end="119:41">MAX_DELAYED_PIC_COUNT</name></expr>;</condition> <incr pos:start="119:44" pos:end="119:46"><expr pos:start="119:44" pos:end="119:46"><name pos:start="119:44" pos:end="119:44">i</name><operator pos:start="119:45" pos:end="119:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="121:9" pos:end="121:34"><block_content pos:start="121:9" pos:end="121:34">

        <expr_stmt pos:start="121:9" pos:end="121:34"><expr pos:start="121:9" pos:end="121:33"><name pos:start="121:9" pos:end="121:23"><name pos:start="121:9" pos:end="121:9">h</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:20">last_pocs</name><index pos:start="121:21" pos:end="121:23">[<expr pos:start="121:22" pos:end="121:22"><name pos:start="121:22" pos:end="121:22">i</name></expr>]</index></name> <operator pos:start="121:25" pos:end="121:25">=</operator> <name pos:start="121:27" pos:end="121:33">INT_MIN</name></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="123:5" pos:end="123:30"><expr pos:start="123:5" pos:end="123:29"><name pos:start="123:5" pos:end="123:19"><name pos:start="123:5" pos:end="123:5">h</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:19">prev_poc_msb</name></name> <operator pos:start="123:21" pos:end="123:21">=</operator> <literal type="number" pos:start="123:23" pos:end="123:23">1</literal> <operator pos:start="123:25" pos:end="123:26">&lt;&lt;</operator> <literal type="number" pos:start="123:28" pos:end="123:29">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:27"><expr pos:start="125:5" pos:end="125:26"><name pos:start="125:5" pos:end="125:21"><name pos:start="125:5" pos:end="125:5">h</name><operator pos:start="125:6" pos:end="125:7">-&gt;</operator><name pos:start="125:8" pos:end="125:21">prev_frame_num</name></name> <operator pos:start="125:23" pos:end="125:23">=</operator> <operator pos:start="125:25" pos:end="125:25">-</operator><literal type="number" pos:start="125:26" pos:end="125:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:25"><expr pos:start="127:5" pos:end="127:24"><name pos:start="127:5" pos:end="127:17"><name pos:start="127:5" pos:end="127:5">h</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:17">x264_build</name></name>   <operator pos:start="127:21" pos:end="127:21">=</operator> <operator pos:start="127:23" pos:end="127:23">-</operator><literal type="number" pos:start="127:24" pos:end="127:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:58"><expr pos:start="129:5" pos:end="129:57"><name pos:start="129:5" pos:end="129:52"><name pos:start="129:5" pos:end="129:5">h</name><operator pos:start="129:6" pos:end="129:7">-&gt;</operator><name pos:start="129:8" pos:end="129:14">sei_fpa</name><operator pos:start="129:15" pos:end="129:15">.</operator><name pos:start="129:16" pos:end="129:52">frame_packing_arrangement_cancel_flag</name></name> <operator pos:start="129:54" pos:end="129:54">=</operator> <operator pos:start="129:56" pos:end="129:56">-</operator><literal type="number" pos:start="129:57" pos:end="129:57">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:25"><expr pos:start="131:5" pos:end="131:24"><call pos:start="131:5" pos:end="131:24"><name pos:start="131:5" pos:end="131:21">ff_h264_reset_sei</name><argument_list pos:start="131:22" pos:end="131:24">(<argument pos:start="131:23" pos:end="131:23"><expr pos:start="131:23" pos:end="131:23"><name pos:start="131:23" pos:end="131:23">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="133:5" pos:end="149:5"><if pos:start="133:5" pos:end="149:5">if <condition pos:start="133:8" pos:end="133:44">(<expr pos:start="133:9" pos:end="133:43"><name pos:start="133:9" pos:end="133:23"><name pos:start="133:9" pos:end="133:13">avctx</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:23">codec_id</name></name> <operator pos:start="133:25" pos:end="133:26">==</operator> <name pos:start="133:28" pos:end="133:43">AV_CODEC_ID_H264</name></expr>)</condition> <block pos:start="133:46" pos:end="149:5">{<block_content pos:start="135:9" pos:end="147:35">

        <if_stmt pos:start="135:9" pos:end="145:9"><if pos:start="135:9" pos:end="145:9">if <condition pos:start="135:12" pos:end="135:40">(<expr pos:start="135:13" pos:end="135:39"><name pos:start="135:13" pos:end="135:34"><name pos:start="135:13" pos:end="135:17">avctx</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:34">ticks_per_frame</name></name> <operator pos:start="135:36" pos:end="135:37">==</operator> <literal type="number" pos:start="135:39" pos:end="135:39">1</literal></expr>)</condition> <block pos:start="135:42" pos:end="145:9">{<block_content pos:start="137:13" pos:end="143:45">

            <if_stmt pos:start="137:13" pos:end="143:45"><if pos:start="137:13" pos:end="141:13">if<condition pos:start="137:15" pos:end="137:51">(<expr pos:start="137:16" pos:end="137:50"><name pos:start="137:16" pos:end="137:38"><name pos:start="137:16" pos:end="137:16">h</name><operator pos:start="137:17" pos:end="137:18">-&gt;</operator><name pos:start="137:19" pos:end="137:23">avctx</name><operator pos:start="137:24" pos:end="137:25">-&gt;</operator><name pos:start="137:26" pos:end="137:34">time_base</name><operator pos:start="137:35" pos:end="137:35">.</operator><name pos:start="137:36" pos:end="137:38">den</name></name> <operator pos:start="137:40" pos:end="137:40">&lt;</operator> <name pos:start="137:42" pos:end="137:48">INT_MAX</name><operator pos:start="137:49" pos:end="137:49">/</operator><literal type="number" pos:start="137:50" pos:end="137:50">2</literal></expr>)</condition> <block pos:start="137:53" pos:end="141:13">{<block_content pos:start="139:17" pos:end="139:45">

                <expr_stmt pos:start="139:17" pos:end="139:45"><expr pos:start="139:17" pos:end="139:44"><name pos:start="139:17" pos:end="139:39"><name pos:start="139:17" pos:end="139:17">h</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:24">avctx</name><operator pos:start="139:25" pos:end="139:26">-&gt;</operator><name pos:start="139:27" pos:end="139:35">time_base</name><operator pos:start="139:36" pos:end="139:36">.</operator><name pos:start="139:37" pos:end="139:39">den</name></name> <operator pos:start="139:41" pos:end="139:42">*=</operator> <literal type="number" pos:start="139:44" pos:end="139:44">2</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="141:15" pos:end="143:45">else<block type="pseudo" pos:start="143:17" pos:end="143:45"><block_content pos:start="143:17" pos:end="143:45">

                <expr_stmt pos:start="143:17" pos:end="143:45"><expr pos:start="143:17" pos:end="143:44"><name pos:start="143:17" pos:end="143:39"><name pos:start="143:17" pos:end="143:17">h</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:24">avctx</name><operator pos:start="143:25" pos:end="143:26">-&gt;</operator><name pos:start="143:27" pos:end="143:35">time_base</name><operator pos:start="143:36" pos:end="143:36">.</operator><name pos:start="143:37" pos:end="143:39">num</name></name> <operator pos:start="143:41" pos:end="143:42">/=</operator> <literal type="number" pos:start="143:44" pos:end="143:44">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:35"><expr pos:start="147:9" pos:end="147:34"><name pos:start="147:9" pos:end="147:30"><name pos:start="147:9" pos:end="147:13">avctx</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:30">ticks_per_frame</name></name> <operator pos:start="147:32" pos:end="147:32">=</operator> <literal type="number" pos:start="147:34" pos:end="147:34">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="153:5" pos:end="165:5"><if pos:start="153:5" pos:end="165:5">if <condition pos:start="153:8" pos:end="153:54">(<expr pos:start="153:9" pos:end="153:53"><name pos:start="153:9" pos:end="153:29"><name pos:start="153:9" pos:end="153:13">avctx</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:29">extradata_size</name></name> <operator pos:start="153:31" pos:end="153:31">&gt;</operator> <literal type="number" pos:start="153:33" pos:end="153:33">0</literal> <operator pos:start="153:35" pos:end="153:36">&amp;&amp;</operator> <name pos:start="153:38" pos:end="153:53"><name pos:start="153:38" pos:end="153:42">avctx</name><operator pos:start="153:43" pos:end="153:44">-&gt;</operator><name pos:start="153:45" pos:end="153:53">extradata</name></name></expr>)</condition> <block pos:start="153:56" pos:end="165:5">{<block_content pos:start="155:9" pos:end="163:9">

        <expr_stmt pos:start="155:9" pos:end="155:83"><expr pos:start="155:9" pos:end="155:82"><name pos:start="155:9" pos:end="155:11">ret</name> <operator pos:start="155:13" pos:end="155:13">=</operator> <call pos:start="155:15" pos:end="155:82"><name pos:start="155:15" pos:end="155:38">ff_h264_decode_extradata</name><argument_list pos:start="155:39" pos:end="155:82">(<argument pos:start="155:40" pos:end="155:40"><expr pos:start="155:40" pos:end="155:40"><name pos:start="155:40" pos:end="155:40">h</name></expr></argument>, <argument pos:start="155:43" pos:end="155:58"><expr pos:start="155:43" pos:end="155:58"><name pos:start="155:43" pos:end="155:58"><name pos:start="155:43" pos:end="155:47">avctx</name><operator pos:start="155:48" pos:end="155:49">-&gt;</operator><name pos:start="155:50" pos:end="155:58">extradata</name></name></expr></argument>, <argument pos:start="155:61" pos:end="155:81"><expr pos:start="155:61" pos:end="155:81"><name pos:start="155:61" pos:end="155:81"><name pos:start="155:61" pos:end="155:65">avctx</name><operator pos:start="155:66" pos:end="155:67">-&gt;</operator><name pos:start="155:68" pos:end="155:81">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="163:9"><if pos:start="157:9" pos:end="163:9">if <condition pos:start="157:12" pos:end="157:20">(<expr pos:start="157:13" pos:end="157:19"><name pos:start="157:13" pos:end="157:15">ret</name> <operator pos:start="157:17" pos:end="157:17">&lt;</operator> <literal type="number" pos:start="157:19" pos:end="157:19">0</literal></expr>)</condition> <block pos:start="157:22" pos:end="163:9">{<block_content pos:start="159:13" pos:end="161:23">

            <expr_stmt pos:start="159:13" pos:end="159:36"><expr pos:start="159:13" pos:end="159:35"><call pos:start="159:13" pos:end="159:35"><name pos:start="159:13" pos:end="159:32">ff_h264_free_context</name><argument_list pos:start="159:33" pos:end="159:35">(<argument pos:start="159:34" pos:end="159:34"><expr pos:start="159:34" pos:end="159:34"><name pos:start="159:34" pos:end="159:34">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="161:13" pos:end="161:23">return <expr pos:start="161:20" pos:end="161:22"><name pos:start="161:20" pos:end="161:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="169:5" pos:end="177:5"><if pos:start="169:5" pos:end="177:5">if <condition pos:start="169:8" pos:end="171:59">(<expr pos:start="169:9" pos:end="171:58"><name pos:start="169:9" pos:end="169:41"><name pos:start="169:9" pos:end="169:9">h</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:14">sps</name><operator pos:start="169:15" pos:end="169:15">.</operator><name pos:start="169:16" pos:end="169:41">bitstream_restriction_flag</name></name> <operator pos:start="169:43" pos:end="169:44">&amp;&amp;</operator>

        <name pos:start="171:9" pos:end="171:30"><name pos:start="171:9" pos:end="171:9">h</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:16">avctx</name><operator pos:start="171:17" pos:end="171:18">-&gt;</operator><name pos:start="171:19" pos:end="171:30">has_b_frames</name></name> <operator pos:start="171:32" pos:end="171:32">&lt;</operator> <name pos:start="171:34" pos:end="171:58"><name pos:start="171:34" pos:end="171:34">h</name><operator pos:start="171:35" pos:end="171:36">-&gt;</operator><name pos:start="171:37" pos:end="171:39">sps</name><operator pos:start="171:40" pos:end="171:40">.</operator><name pos:start="171:41" pos:end="171:58">num_reorder_frames</name></name></expr>)</condition> <block pos:start="171:61" pos:end="177:5">{<block_content pos:start="173:9" pos:end="175:35">

        <expr_stmt pos:start="173:9" pos:end="173:59"><expr pos:start="173:9" pos:end="173:58"><name pos:start="173:9" pos:end="173:30"><name pos:start="173:9" pos:end="173:9">h</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:16">avctx</name><operator pos:start="173:17" pos:end="173:18">-&gt;</operator><name pos:start="173:19" pos:end="173:30">has_b_frames</name></name> <operator pos:start="173:32" pos:end="173:32">=</operator> <name pos:start="173:34" pos:end="173:58"><name pos:start="173:34" pos:end="173:34">h</name><operator pos:start="173:35" pos:end="173:36">-&gt;</operator><name pos:start="173:37" pos:end="173:39">sps</name><operator pos:start="173:40" pos:end="173:40">.</operator><name pos:start="173:41" pos:end="173:58">num_reorder_frames</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:35"><expr pos:start="175:9" pos:end="175:34"><name pos:start="175:9" pos:end="175:20"><name pos:start="175:9" pos:end="175:9">h</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:20">low_delay</name></name>           <operator pos:start="175:32" pos:end="175:32">=</operator> <literal type="number" pos:start="175:34" pos:end="175:34">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="181:5" pos:end="181:43"><expr pos:start="181:5" pos:end="181:42"><name pos:start="181:5" pos:end="181:38"><name pos:start="181:5" pos:end="181:9">avctx</name><operator pos:start="181:10" pos:end="181:11">-&gt;</operator><name pos:start="181:12" pos:end="181:19">internal</name><operator pos:start="181:20" pos:end="181:21">-&gt;</operator><name pos:start="181:22" pos:end="181:38">allocate_progress</name></name> <operator pos:start="181:40" pos:end="181:40">=</operator> <literal type="number" pos:start="181:42" pos:end="181:42">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:28"><expr pos:start="185:5" pos:end="185:27"><call pos:start="185:5" pos:end="185:27"><name pos:start="185:5" pos:end="185:24">ff_h264_flush_change</name><argument_list pos:start="185:25" pos:end="185:27">(<argument pos:start="185:26" pos:end="185:26"><expr pos:start="185:26" pos:end="185:26"><name pos:start="185:26" pos:end="185:26">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="189:5" pos:end="197:5"><if pos:start="189:5" pos:end="197:5">if <condition pos:start="189:8" pos:end="189:21">(<expr pos:start="189:9" pos:end="189:20"><name pos:start="189:9" pos:end="189:20"><name pos:start="189:9" pos:end="189:9">h</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:20">enable_er</name></name></expr>)</condition> <block pos:start="189:23" pos:end="197:5">{<block_content pos:start="191:9" pos:end="195:44">

        <expr_stmt pos:start="191:9" pos:end="195:44"><expr pos:start="191:9" pos:end="195:43"><call pos:start="191:9" pos:end="195:43"><name pos:start="191:9" pos:end="191:14">av_log</name><argument_list pos:start="191:15" pos:end="195:43">(<argument pos:start="191:16" pos:end="191:20"><expr pos:start="191:16" pos:end="191:20"><name pos:start="191:16" pos:end="191:20">avctx</name></expr></argument>, <argument pos:start="191:23" pos:end="191:36"><expr pos:start="191:23" pos:end="191:36"><name pos:start="191:23" pos:end="191:36">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="193:16" pos:end="195:42"><expr pos:start="193:16" pos:end="195:42"><literal type="string" pos:start="193:16" pos:end="193:90">"Error resilience is enabled. It is unsafe and unsupported and may crash. "</literal>

               <literal type="string" pos:start="195:16" pos:end="195:42">"Use it at your own risk\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="201:5" pos:end="201:13">return <expr pos:start="201:12" pos:end="201:12"><literal type="number" pos:start="201:12" pos:end="201:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
