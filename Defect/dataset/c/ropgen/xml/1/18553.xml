<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18553.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">ff_lpc_calc_coefs</name><parameter_list pos:start="1:22" pos:end="6:65">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:32">LPCContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>,
                      <parameter pos:start="2:23" pos:end="2:44"><decl pos:start="2:23" pos:end="2:44"><type pos:start="2:23" pos:end="2:44"><specifier pos:start="2:23" pos:end="2:27">const</specifier> <name pos:start="2:29" pos:end="2:35">int32_t</name> <modifier pos:start="2:37" pos:end="2:37">*</modifier></type><name pos:start="2:38" pos:end="2:44">samples</name></decl></parameter>, <parameter pos:start="2:47" pos:end="2:59"><decl pos:start="2:47" pos:end="2:59"><type pos:start="2:47" pos:end="2:59"><name pos:start="2:47" pos:end="2:49">int</name></type> <name pos:start="2:51" pos:end="2:59">blocksize</name></decl></parameter>, <parameter pos:start="2:62" pos:end="2:74"><decl pos:start="2:62" pos:end="2:74"><type pos:start="2:62" pos:end="2:74"><name pos:start="2:62" pos:end="2:64">int</name></type> <name pos:start="2:66" pos:end="2:74">min_order</name></decl></parameter>,
                      <parameter pos:start="3:23" pos:end="3:35"><decl pos:start="3:23" pos:end="3:35"><type pos:start="3:23" pos:end="3:35"><name pos:start="3:23" pos:end="3:25">int</name></type> <name pos:start="3:27" pos:end="3:35">max_order</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:50"><decl pos:start="3:38" pos:end="3:50"><type pos:start="3:38" pos:end="3:50"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:50">precision</name></decl></parameter>,
                      <parameter pos:start="4:23" pos:end="4:52"><decl pos:start="4:23" pos:end="4:52"><type pos:start="4:23" pos:end="4:35"><name pos:start="4:23" pos:end="4:29">int32_t</name></type> <name pos:start="4:31" pos:end="4:52"><name pos:start="4:31" pos:end="4:35">coefs</name><index pos:start="4:36" pos:end="4:37">[]</index><index pos:start="4:38" pos:end="4:52">[<expr pos:start="4:39" pos:end="4:51"><name pos:start="4:39" pos:end="4:51">MAX_LPC_ORDER</name></expr>]</index></name></decl></parameter>, <parameter pos:start="4:55" pos:end="4:64"><decl pos:start="4:55" pos:end="4:64"><type pos:start="4:55" pos:end="4:64"><name pos:start="4:55" pos:end="4:57">int</name> <modifier pos:start="4:59" pos:end="4:59">*</modifier></type><name pos:start="4:60" pos:end="4:64">shift</name></decl></parameter>,
                      <parameter pos:start="5:23" pos:end="5:45"><decl pos:start="5:23" pos:end="5:45"><type pos:start="5:23" pos:end="5:45"><name pos:start="5:23" pos:end="5:36"><name pos:start="5:23" pos:end="5:26">enum</name> <name pos:start="5:28" pos:end="5:36">FFLPCType</name></name></type> <name pos:start="5:38" pos:end="5:45">lpc_type</name></decl></parameter>, <parameter pos:start="5:48" pos:end="5:61"><decl pos:start="5:48" pos:end="5:61"><type pos:start="5:48" pos:end="5:61"><name pos:start="5:48" pos:end="5:50">int</name></type> <name pos:start="5:52" pos:end="5:61">lpc_passes</name></decl></parameter>,
                      <parameter pos:start="6:23" pos:end="6:33"><decl pos:start="6:23" pos:end="6:33"><type pos:start="6:23" pos:end="6:33"><name pos:start="6:23" pos:end="6:25">int</name></type> <name pos:start="6:27" pos:end="6:33">omethod</name></decl></parameter>, <parameter pos:start="6:36" pos:end="6:48"><decl pos:start="6:36" pos:end="6:48"><type pos:start="6:36" pos:end="6:48"><name pos:start="6:36" pos:end="6:38">int</name></type> <name pos:start="6:40" pos:end="6:48">max_shift</name></decl></parameter>, <parameter pos:start="6:51" pos:end="6:64"><decl pos:start="6:51" pos:end="6:64"><type pos:start="6:51" pos:end="6:64"><name pos:start="6:51" pos:end="6:53">int</name></type> <name pos:start="6:55" pos:end="6:64">zero_shift</name></decl></parameter>)</parameter_list>
<block pos:start="7:1" pos:end="71:1">{<block_content pos:start="8:5" pos:end="70:21">
    <decl_stmt pos:start="8:5" pos:end="8:34"><decl pos:start="8:5" pos:end="8:33"><type pos:start="8:5" pos:end="8:10"><name pos:start="8:5" pos:end="8:10">double</name></type> <name pos:start="8:12" pos:end="8:33"><name pos:start="8:12" pos:end="8:16">autoc</name><index pos:start="8:17" pos:end="8:33">[<expr pos:start="8:18" pos:end="8:32"><name pos:start="8:18" pos:end="8:30">MAX_LPC_ORDER</name><operator pos:start="8:31" pos:end="8:31">+</operator><literal type="number" pos:start="8:32" pos:end="8:32">1</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">double</name></type> <name pos:start="9:12" pos:end="9:29"><name pos:start="9:12" pos:end="9:14">ref</name><index pos:start="9:15" pos:end="9:29">[<expr pos:start="9:16" pos:end="9:28"><name pos:start="9:16" pos:end="9:28">MAX_LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:45"><decl pos:start="10:5" pos:end="10:44"><type pos:start="10:5" pos:end="10:10"><name pos:start="10:5" pos:end="10:10">double</name></type> <name pos:start="10:12" pos:end="10:44"><name pos:start="10:12" pos:end="10:14">lpc</name><index pos:start="10:15" pos:end="10:29">[<expr pos:start="10:16" pos:end="10:28"><name pos:start="10:16" pos:end="10:28">MAX_LPC_ORDER</name></expr>]</index><index pos:start="10:30" pos:end="10:44">[<expr pos:start="10:31" pos:end="10:43"><name pos:start="10:31" pos:end="10:43">MAX_LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>, <decl pos:start="11:15" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:18">pass</name></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:18"><decl pos:start="12:5" pos:end="12:17"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:17">opt_order</name></decl>;</decl_stmt>
    <expr_stmt pos:start="13:5" pos:end="14:41"><expr pos:start="13:5" pos:end="14:40"><call pos:start="13:5" pos:end="14:40"><name pos:start="13:5" pos:end="13:14">av_assert2</name><argument_list pos:start="13:15" pos:end="14:40">(<argument pos:start="13:16" pos:end="14:39"><expr pos:start="13:16" pos:end="14:39"><name pos:start="13:16" pos:end="13:24">max_order</name> <operator pos:start="13:26" pos:end="13:27">&gt;=</operator> <name pos:start="13:29" pos:end="13:41">MIN_LPC_ORDER</name> <operator pos:start="13:43" pos:end="13:44">&amp;&amp;</operator> <name pos:start="13:46" pos:end="13:54">max_order</name> <operator pos:start="13:56" pos:end="13:57">&lt;=</operator> <name pos:start="13:59" pos:end="13:71">MAX_LPC_ORDER</name> <operator pos:start="13:73" pos:end="13:74">&amp;&amp;</operator>
           <name pos:start="14:12" pos:end="14:19">lpc_type</name> <operator pos:start="14:21" pos:end="14:21">&gt;</operator> <name pos:start="14:23" pos:end="14:39">FF_LPC_TYPE_FIXED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="15:5" pos:end="15:55">/* reinit LPC context if parameters have changed */</comment>
    <if_stmt pos:start="16:5" pos:end="20:5"><if pos:start="16:5" pos:end="20:5">if <condition pos:start="16:8" pos:end="17:33">(<expr pos:start="16:9" pos:end="17:32"><name pos:start="16:9" pos:end="16:17">blocksize</name> <operator pos:start="16:19" pos:end="16:20">!=</operator> <name pos:start="16:22" pos:end="16:33"><name pos:start="16:22" pos:end="16:22">s</name><operator pos:start="16:23" pos:end="16:24">-&gt;</operator><name pos:start="16:25" pos:end="16:33">blocksize</name></name> <operator pos:start="16:35" pos:end="16:36">||</operator> <name pos:start="16:38" pos:end="16:46">max_order</name> <operator pos:start="16:48" pos:end="16:49">!=</operator> <name pos:start="16:51" pos:end="16:62"><name pos:start="16:51" pos:end="16:51">s</name><operator pos:start="16:52" pos:end="16:53">-&gt;</operator><name pos:start="16:54" pos:end="16:62">max_order</name></name> <operator pos:start="16:64" pos:end="16:65">||</operator>
        <name pos:start="17:9" pos:end="17:16">lpc_type</name>  <operator pos:start="17:19" pos:end="17:20">!=</operator> <name pos:start="17:22" pos:end="17:32"><name pos:start="17:22" pos:end="17:22">s</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:32">lpc_type</name></name></expr>)</condition> <block pos:start="17:35" pos:end="20:5">{<block_content pos:start="18:9" pos:end="19:55">
        <expr_stmt pos:start="18:9" pos:end="18:22"><expr pos:start="18:9" pos:end="18:21"><call pos:start="18:9" pos:end="18:21"><name pos:start="18:9" pos:end="18:18">ff_lpc_end</name><argument_list pos:start="18:19" pos:end="18:21">(<argument pos:start="18:20" pos:end="18:20"><expr pos:start="18:20" pos:end="18:20"><name pos:start="18:20" pos:end="18:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="19:9" pos:end="19:55"><expr pos:start="19:9" pos:end="19:54"><call pos:start="19:9" pos:end="19:54"><name pos:start="19:9" pos:end="19:19">ff_lpc_init</name><argument_list pos:start="19:20" pos:end="19:54">(<argument pos:start="19:21" pos:end="19:21"><expr pos:start="19:21" pos:end="19:21"><name pos:start="19:21" pos:end="19:21">s</name></expr></argument>, <argument pos:start="19:24" pos:end="19:32"><expr pos:start="19:24" pos:end="19:32"><name pos:start="19:24" pos:end="19:32">blocksize</name></expr></argument>, <argument pos:start="19:35" pos:end="19:43"><expr pos:start="19:35" pos:end="19:43"><name pos:start="19:35" pos:end="19:43">max_order</name></expr></argument>, <argument pos:start="19:46" pos:end="19:53"><expr pos:start="19:46" pos:end="19:53"><name pos:start="19:46" pos:end="19:53">lpc_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="21:5" pos:end="59:5"><if pos:start="21:5" pos:end="28:5">if <condition pos:start="21:8" pos:end="21:41">(<expr pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:16">lpc_type</name> <operator pos:start="21:18" pos:end="21:19">==</operator> <name pos:start="21:21" pos:end="21:40">FF_LPC_TYPE_LEVINSON</name></expr>)</condition> <block pos:start="21:43" pos:end="28:5">{<block_content pos:start="22:9" pos:end="27:37">
        <decl_stmt pos:start="22:9" pos:end="22:67"><decl pos:start="22:9" pos:end="22:66"><type pos:start="22:9" pos:end="22:16"><name pos:start="22:9" pos:end="22:14">double</name> <modifier pos:start="22:16" pos:end="22:16">*</modifier></type><name pos:start="22:17" pos:end="22:32">windowed_samples</name> <init pos:start="22:34" pos:end="22:66">= <expr pos:start="22:36" pos:end="22:66"><name pos:start="22:36" pos:end="22:54"><name pos:start="22:36" pos:end="22:36">s</name><operator pos:start="22:37" pos:end="22:38">-&gt;</operator><name pos:start="22:39" pos:end="22:54">windowed_samples</name></name> <operator pos:start="22:56" pos:end="22:56">+</operator> <name pos:start="22:58" pos:end="22:66">max_order</name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="23:9" pos:end="23:72"><expr pos:start="23:9" pos:end="23:71"><call pos:start="23:9" pos:end="23:71"><name pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:33">lpc_apply_welch_window</name></name><argument_list pos:start="23:34" pos:end="23:71">(<argument pos:start="23:35" pos:end="23:41"><expr pos:start="23:35" pos:end="23:41"><name pos:start="23:35" pos:end="23:41">samples</name></expr></argument>, <argument pos:start="23:44" pos:end="23:52"><expr pos:start="23:44" pos:end="23:52"><name pos:start="23:44" pos:end="23:52">blocksize</name></expr></argument>, <argument pos:start="23:55" pos:end="23:70"><expr pos:start="23:55" pos:end="23:70"><name pos:start="23:55" pos:end="23:70">windowed_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:79"><expr pos:start="24:9" pos:end="24:78"><call pos:start="24:9" pos:end="24:78"><name pos:start="24:9" pos:end="24:31"><name pos:start="24:9" pos:end="24:9">s</name><operator pos:start="24:10" pos:end="24:11">-&gt;</operator><name pos:start="24:12" pos:end="24:31">lpc_compute_autocorr</name></name><argument_list pos:start="24:32" pos:end="24:78">(<argument pos:start="24:33" pos:end="24:48"><expr pos:start="24:33" pos:end="24:48"><name pos:start="24:33" pos:end="24:48">windowed_samples</name></expr></argument>, <argument pos:start="24:51" pos:end="24:59"><expr pos:start="24:51" pos:end="24:59"><name pos:start="24:51" pos:end="24:59">blocksize</name></expr></argument>, <argument pos:start="24:62" pos:end="24:70"><expr pos:start="24:62" pos:end="24:70"><name pos:start="24:62" pos:end="24:70">max_order</name></expr></argument>, <argument pos:start="24:73" pos:end="24:77"><expr pos:start="24:73" pos:end="24:77"><name pos:start="24:73" pos:end="24:77">autoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="25:9" pos:end="25:77"><expr pos:start="25:9" pos:end="25:76"><call pos:start="25:9" pos:end="25:76"><name pos:start="25:9" pos:end="25:25">compute_lpc_coefs</name><argument_list pos:start="25:26" pos:end="25:76">(<argument pos:start="25:27" pos:end="25:31"><expr pos:start="25:27" pos:end="25:31"><name pos:start="25:27" pos:end="25:31">autoc</name></expr></argument>, <argument pos:start="25:34" pos:end="25:42"><expr pos:start="25:34" pos:end="25:42"><name pos:start="25:34" pos:end="25:42">max_order</name></expr></argument>, <argument pos:start="25:45" pos:end="25:54"><expr pos:start="25:45" pos:end="25:54"><operator pos:start="25:45" pos:end="25:45">&amp;</operator><name pos:start="25:46" pos:end="25:54"><name pos:start="25:46" pos:end="25:48">lpc</name><index pos:start="25:49" pos:end="25:51">[<expr pos:start="25:50" pos:end="25:50"><literal type="number" pos:start="25:50" pos:end="25:50">0</literal></expr>]</index><index pos:start="25:52" pos:end="25:54">[<expr pos:start="25:53" pos:end="25:53"><literal type="number" pos:start="25:53" pos:end="25:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:57" pos:end="25:69"><expr pos:start="25:57" pos:end="25:69"><name pos:start="25:57" pos:end="25:69">MAX_LPC_ORDER</name></expr></argument>, <argument pos:start="25:72" pos:end="25:72"><expr pos:start="25:72" pos:end="25:72"><literal type="number" pos:start="25:72" pos:end="25:72">0</literal></expr></argument>, <argument pos:start="25:75" pos:end="25:75"><expr pos:start="25:75" pos:end="25:75"><literal type="number" pos:start="25:75" pos:end="25:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="26:9" pos:end="27:37">for<control pos:start="26:12" pos:end="26:34">(<init pos:start="26:13" pos:end="26:16"><expr pos:start="26:13" pos:end="26:15"><name pos:start="26:13" pos:end="26:13">i</name><operator pos:start="26:14" pos:end="26:14">=</operator><literal type="number" pos:start="26:15" pos:end="26:15">0</literal></expr>;</init> <condition pos:start="26:18" pos:end="26:29"><expr pos:start="26:18" pos:end="26:28"><name pos:start="26:18" pos:end="26:18">i</name><operator pos:start="26:19" pos:end="26:19">&lt;</operator><name pos:start="26:20" pos:end="26:28">max_order</name></expr>;</condition> <incr pos:start="26:31" pos:end="26:33"><expr pos:start="26:31" pos:end="26:33"><name pos:start="26:31" pos:end="26:31">i</name><operator pos:start="26:32" pos:end="26:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:13" pos:end="27:37"><block_content pos:start="27:13" pos:end="27:37">
            <expr_stmt pos:start="27:13" pos:end="27:37"><expr pos:start="27:13" pos:end="27:36"><name pos:start="27:13" pos:end="27:18"><name pos:start="27:13" pos:end="27:15">ref</name><index pos:start="27:16" pos:end="27:18">[<expr pos:start="27:17" pos:end="27:17"><name pos:start="27:17" pos:end="27:17">i</name></expr>]</index></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <call pos:start="27:22" pos:end="27:36"><name pos:start="27:22" pos:end="27:25">fabs</name><argument_list pos:start="27:26" pos:end="27:36">(<argument pos:start="27:27" pos:end="27:35"><expr pos:start="27:27" pos:end="27:35"><name pos:start="27:27" pos:end="27:35"><name pos:start="27:27" pos:end="27:29">lpc</name><index pos:start="27:30" pos:end="27:32">[<expr pos:start="27:31" pos:end="27:31"><name pos:start="27:31" pos:end="27:31">i</name></expr>]</index><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><name pos:start="27:34" pos:end="27:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    </block_content>}</block></if> <if type="elseif" pos:start="28:7" pos:end="59:5">else if <condition pos:start="28:15" pos:end="28:48">(<expr pos:start="28:16" pos:end="28:47"><name pos:start="28:16" pos:end="28:23">lpc_type</name> <operator pos:start="28:25" pos:end="28:26">==</operator> <name pos:start="28:28" pos:end="28:47">FF_LPC_TYPE_CHOLESKY</name></expr>)</condition> <block pos:start="28:50" pos:end="59:5">{<block_content pos:start="29:9" pos:end="58:39">
        <decl_stmt pos:start="29:9" pos:end="29:22"><decl pos:start="29:9" pos:end="29:21"><type pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:16">LLSModel</name></type> <name pos:start="29:18" pos:end="29:21"><name pos:start="29:18" pos:end="29:18">m</name><index pos:start="29:19" pos:end="29:21">[<expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">2</literal></expr>]</index></name></decl>;</decl_stmt>
        <decl_stmt pos:start="30:9" pos:end="30:55"><decl pos:start="30:9" pos:end="30:35"><type pos:start="30:9" pos:end="30:14"><name pos:start="30:9" pos:end="30:14">double</name></type> <name pos:start="30:16" pos:end="30:35"><name pos:start="30:16" pos:end="30:18">var</name><index pos:start="30:19" pos:end="30:35">[<expr pos:start="30:20" pos:end="30:34"><name pos:start="30:20" pos:end="30:32">MAX_LPC_ORDER</name><operator pos:start="30:33" pos:end="30:33">+</operator><literal type="number" pos:start="30:34" pos:end="30:34">1</literal></expr>]</index></name></decl>, <decl pos:start="30:38" pos:end="30:54"><type ref="prev" pos:start="30:9" pos:end="30:14"/><name pos:start="30:38" pos:end="30:46">av_uninit</name><argument_list pos:start="30:47" pos:end="30:54">(<argument pos:start="30:48" pos:end="30:53"><expr pos:start="30:48" pos:end="30:53"><name pos:start="30:48" pos:end="30:53">weight</name></expr></argument>)</argument_list></decl>;</decl_stmt>
        <for pos:start="31:9" pos:end="51:9">for<control pos:start="31:12" pos:end="31:44">(<init pos:start="31:13" pos:end="31:19"><expr pos:start="31:13" pos:end="31:18"><name pos:start="31:13" pos:end="31:16">pass</name><operator pos:start="31:17" pos:end="31:17">=</operator><literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:36"><expr pos:start="31:21" pos:end="31:35"><name pos:start="31:21" pos:end="31:24">pass</name><operator pos:start="31:25" pos:end="31:25">&lt;</operator><name pos:start="31:26" pos:end="31:35">lpc_passes</name></expr>;</condition> <incr pos:start="31:38" pos:end="31:43"><expr pos:start="31:38" pos:end="31:43"><name pos:start="31:38" pos:end="31:41">pass</name><operator pos:start="31:42" pos:end="31:43">++</operator></expr></incr>)</control><block pos:start="31:45" pos:end="51:9">{<block_content pos:start="32:13" pos:end="50:47">
            <expr_stmt pos:start="32:13" pos:end="32:47"><expr pos:start="32:13" pos:end="32:46"><call pos:start="32:13" pos:end="32:46"><name pos:start="32:13" pos:end="32:23">av_init_lls</name><argument_list pos:start="32:24" pos:end="32:46">(<argument pos:start="32:25" pos:end="32:34"><expr pos:start="32:25" pos:end="32:34"><operator pos:start="32:25" pos:end="32:25">&amp;</operator><name pos:start="32:26" pos:end="32:34"><name pos:start="32:26" pos:end="32:26">m</name><index pos:start="32:27" pos:end="32:34">[<expr pos:start="32:28" pos:end="32:33"><name pos:start="32:28" pos:end="32:31">pass</name><operator pos:start="32:32" pos:end="32:32">&amp;</operator><literal type="number" pos:start="32:33" pos:end="32:33">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="32:37" pos:end="32:45"><expr pos:start="32:37" pos:end="32:45"><name pos:start="32:37" pos:end="32:45">max_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="33:13" pos:end="33:21"><expr pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:18">weight</name><operator pos:start="33:19" pos:end="33:19">=</operator><literal type="number" pos:start="33:20" pos:end="33:20">0</literal></expr>;</expr_stmt>
            <for pos:start="34:13" pos:end="49:13">for<control pos:start="34:16" pos:end="34:46">(<init pos:start="34:17" pos:end="34:28"><expr pos:start="34:17" pos:end="34:27"><name pos:start="34:17" pos:end="34:17">i</name><operator pos:start="34:18" pos:end="34:18">=</operator><name pos:start="34:19" pos:end="34:27">max_order</name></expr>;</init> <condition pos:start="34:30" pos:end="34:41"><expr pos:start="34:30" pos:end="34:40"><name pos:start="34:30" pos:end="34:30">i</name><operator pos:start="34:31" pos:end="34:31">&lt;</operator><name pos:start="34:32" pos:end="34:40">blocksize</name></expr>;</condition> <incr pos:start="34:43" pos:end="34:45"><expr pos:start="34:43" pos:end="34:45"><name pos:start="34:43" pos:end="34:43">i</name><operator pos:start="34:44" pos:end="34:45">++</operator></expr></incr>)</control><block pos:start="34:47" pos:end="49:13">{<block_content pos:start="35:17" pos:end="48:52">
                <for pos:start="35:17" pos:end="36:41">for<control pos:start="35:20" pos:end="35:43">(<init pos:start="35:21" pos:end="35:24"><expr pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:21">j</name><operator pos:start="35:22" pos:end="35:22">=</operator><literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr>;</init> <condition pos:start="35:26" pos:end="35:38"><expr pos:start="35:26" pos:end="35:37"><name pos:start="35:26" pos:end="35:26">j</name><operator pos:start="35:27" pos:end="35:28">&lt;=</operator><name pos:start="35:29" pos:end="35:37">max_order</name></expr>;</condition> <incr pos:start="35:40" pos:end="35:42"><expr pos:start="35:40" pos:end="35:42"><name pos:start="35:40" pos:end="35:40">j</name><operator pos:start="35:41" pos:end="35:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="36:21" pos:end="36:41"><block_content pos:start="36:21" pos:end="36:41">
                    <expr_stmt pos:start="36:21" pos:end="36:41"><expr pos:start="36:21" pos:end="36:40"><name pos:start="36:21" pos:end="36:26"><name pos:start="36:21" pos:end="36:23">var</name><index pos:start="36:24" pos:end="36:26">[<expr pos:start="36:25" pos:end="36:25"><name pos:start="36:25" pos:end="36:25">j</name></expr>]</index></name><operator pos:start="36:27" pos:end="36:27">=</operator> <name pos:start="36:29" pos:end="36:40"><name pos:start="36:29" pos:end="36:35">samples</name><index pos:start="36:36" pos:end="36:40">[<expr pos:start="36:37" pos:end="36:39"><name pos:start="36:37" pos:end="36:37">i</name><operator pos:start="36:38" pos:end="36:38">-</operator><name pos:start="36:39" pos:end="36:39">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
                <if_stmt pos:start="37:17" pos:end="47:29"><if pos:start="37:17" pos:end="46:17">if<condition pos:start="37:19" pos:end="37:24">(<expr pos:start="37:20" pos:end="37:23"><name pos:start="37:20" pos:end="37:23">pass</name></expr>)</condition><block pos:start="37:25" pos:end="46:17">{<block_content pos:start="38:21" pos:end="45:34">
                    <decl_stmt pos:start="38:21" pos:end="38:43"><decl pos:start="38:21" pos:end="38:31"><type pos:start="38:21" pos:end="38:26"><name pos:start="38:21" pos:end="38:26">double</name></type> <name pos:start="38:28" pos:end="38:31">eval</name></decl>, <decl pos:start="38:34" pos:end="38:36"><type ref="prev" pos:start="38:21" pos:end="38:26"/><name pos:start="38:34" pos:end="38:36">inv</name></decl>, <decl pos:start="38:39" pos:end="38:42"><type ref="prev" pos:start="38:21" pos:end="38:26"/><name pos:start="38:39" pos:end="38:42">rinv</name></decl>;</decl_stmt>
                    <expr_stmt pos:start="39:21" pos:end="39:78"><expr pos:start="39:21" pos:end="39:77"><name pos:start="39:21" pos:end="39:24">eval</name><operator pos:start="39:25" pos:end="39:25">=</operator> <call pos:start="39:27" pos:end="39:77"><name pos:start="39:27" pos:end="39:41">av_evaluate_lls</name><argument_list pos:start="39:42" pos:end="39:77">(<argument pos:start="39:43" pos:end="39:56"><expr pos:start="39:43" pos:end="39:56"><operator pos:start="39:43" pos:end="39:43">&amp;</operator><name pos:start="39:44" pos:end="39:56"><name pos:start="39:44" pos:end="39:44">m</name><index pos:start="39:45" pos:end="39:56">[<expr pos:start="39:46" pos:end="39:55"><operator pos:start="39:46" pos:end="39:46">(</operator><name pos:start="39:47" pos:end="39:50">pass</name><operator pos:start="39:51" pos:end="39:51">-</operator><literal type="number" pos:start="39:52" pos:end="39:52">1</literal><operator pos:start="39:53" pos:end="39:53">)</operator><operator pos:start="39:54" pos:end="39:54">&amp;</operator><literal type="number" pos:start="39:55" pos:end="39:55">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="39:59" pos:end="39:63"><expr pos:start="39:59" pos:end="39:63"><name pos:start="39:59" pos:end="39:61">var</name><operator pos:start="39:62" pos:end="39:62">+</operator><literal type="number" pos:start="39:63" pos:end="39:63">1</literal></expr></argument>, <argument pos:start="39:66" pos:end="39:76"><expr pos:start="39:66" pos:end="39:76"><name pos:start="39:66" pos:end="39:74">max_order</name><operator pos:start="39:75" pos:end="39:75">-</operator><literal type="number" pos:start="39:76" pos:end="39:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="40:21" pos:end="40:60"><expr pos:start="40:21" pos:end="40:59"><name pos:start="40:21" pos:end="40:24">eval</name><operator pos:start="40:25" pos:end="40:25">=</operator> <operator pos:start="40:27" pos:end="40:27">(</operator><literal type="number" pos:start="40:28" pos:end="40:30">512</literal><operator pos:start="40:31" pos:end="40:32">&gt;&gt;</operator><name pos:start="40:33" pos:end="40:36">pass</name><operator pos:start="40:37" pos:end="40:37">)</operator> <operator pos:start="40:39" pos:end="40:39">+</operator> <call pos:start="40:41" pos:end="40:59"><name pos:start="40:41" pos:end="40:44">fabs</name><argument_list pos:start="40:45" pos:end="40:59">(<argument pos:start="40:46" pos:end="40:58"><expr pos:start="40:46" pos:end="40:58"><name pos:start="40:46" pos:end="40:49">eval</name> <operator pos:start="40:51" pos:end="40:51">-</operator> <name pos:start="40:53" pos:end="40:58"><name pos:start="40:53" pos:end="40:55">var</name><index pos:start="40:56" pos:end="40:58">[<expr pos:start="40:57" pos:end="40:57"><literal type="number" pos:start="40:57" pos:end="40:57">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="41:21" pos:end="41:33"><expr pos:start="41:21" pos:end="41:32"><name pos:start="41:21" pos:end="41:23">inv</name> <operator pos:start="41:25" pos:end="41:25">=</operator> <literal type="number" pos:start="41:27" pos:end="41:27">1</literal><operator pos:start="41:28" pos:end="41:28">/</operator><name pos:start="41:29" pos:end="41:32">eval</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="42:21" pos:end="42:37"><expr pos:start="42:21" pos:end="42:36"><name pos:start="42:21" pos:end="42:24">rinv</name> <operator pos:start="42:26" pos:end="42:26">=</operator> <call pos:start="42:28" pos:end="42:36"><name pos:start="42:28" pos:end="42:31">sqrt</name><argument_list pos:start="42:32" pos:end="42:36">(<argument pos:start="42:33" pos:end="42:35"><expr pos:start="42:33" pos:end="42:35"><name pos:start="42:33" pos:end="42:35">inv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <for pos:start="43:21" pos:end="44:39">for<control pos:start="43:24" pos:end="43:47">(<init pos:start="43:25" pos:end="43:28"><expr pos:start="43:25" pos:end="43:27"><name pos:start="43:25" pos:end="43:25">j</name><operator pos:start="43:26" pos:end="43:26">=</operator><literal type="number" pos:start="43:27" pos:end="43:27">0</literal></expr>;</init> <condition pos:start="43:30" pos:end="43:42"><expr pos:start="43:30" pos:end="43:41"><name pos:start="43:30" pos:end="43:30">j</name><operator pos:start="43:31" pos:end="43:32">&lt;=</operator><name pos:start="43:33" pos:end="43:41">max_order</name></expr>;</condition> <incr pos:start="43:44" pos:end="43:46"><expr pos:start="43:44" pos:end="43:46"><name pos:start="43:44" pos:end="43:44">j</name><operator pos:start="43:45" pos:end="43:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="44:25" pos:end="44:39"><block_content pos:start="44:25" pos:end="44:39">
                        <expr_stmt pos:start="44:25" pos:end="44:39"><expr pos:start="44:25" pos:end="44:38"><name pos:start="44:25" pos:end="44:30"><name pos:start="44:25" pos:end="44:27">var</name><index pos:start="44:28" pos:end="44:30">[<expr pos:start="44:29" pos:end="44:29"><name pos:start="44:29" pos:end="44:29">j</name></expr>]</index></name> <operator pos:start="44:32" pos:end="44:33">*=</operator> <name pos:start="44:35" pos:end="44:38">rinv</name></expr>;</expr_stmt></block_content></block></for>
                    <expr_stmt pos:start="45:21" pos:end="45:34"><expr pos:start="45:21" pos:end="45:33"><name pos:start="45:21" pos:end="45:26">weight</name> <operator pos:start="45:28" pos:end="45:29">+=</operator> <name pos:start="45:31" pos:end="45:33">inv</name></expr>;</expr_stmt>
                </block_content>}</block></if><else pos:start="46:18" pos:end="47:29">else<block type="pseudo" pos:start="47:21" pos:end="47:29"><block_content pos:start="47:21" pos:end="47:29">
                    <expr_stmt pos:start="47:21" pos:end="47:29"><expr pos:start="47:21" pos:end="47:28"><name pos:start="47:21" pos:end="47:26">weight</name><operator pos:start="47:27" pos:end="47:28">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
                <expr_stmt pos:start="48:17" pos:end="48:52"><expr pos:start="48:17" pos:end="48:51"><call pos:start="48:17" pos:end="48:51"><name pos:start="48:17" pos:end="48:29">av_update_lls</name><argument_list pos:start="48:30" pos:end="48:51">(<argument pos:start="48:31" pos:end="48:40"><expr pos:start="48:31" pos:end="48:40"><operator pos:start="48:31" pos:end="48:31">&amp;</operator><name pos:start="48:32" pos:end="48:40"><name pos:start="48:32" pos:end="48:32">m</name><index pos:start="48:33" pos:end="48:40">[<expr pos:start="48:34" pos:end="48:39"><name pos:start="48:34" pos:end="48:37">pass</name><operator pos:start="48:38" pos:end="48:38">&amp;</operator><literal type="number" pos:start="48:39" pos:end="48:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="48:43" pos:end="48:45"><expr pos:start="48:43" pos:end="48:45"><name pos:start="48:43" pos:end="48:45">var</name></expr></argument>, <argument pos:start="48:48" pos:end="48:50"><expr pos:start="48:48" pos:end="48:50"><literal type="number" pos:start="48:48" pos:end="48:50">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
            <expr_stmt pos:start="50:13" pos:end="50:47"><expr pos:start="50:13" pos:end="50:46"><call pos:start="50:13" pos:end="50:46"><name pos:start="50:13" pos:end="50:24">av_solve_lls</name><argument_list pos:start="50:25" pos:end="50:46">(<argument pos:start="50:26" pos:end="50:35"><expr pos:start="50:26" pos:end="50:35"><operator pos:start="50:26" pos:end="50:26">&amp;</operator><name pos:start="50:27" pos:end="50:35"><name pos:start="50:27" pos:end="50:27">m</name><index pos:start="50:28" pos:end="50:35">[<expr pos:start="50:29" pos:end="50:34"><name pos:start="50:29" pos:end="50:32">pass</name><operator pos:start="50:33" pos:end="50:33">&amp;</operator><literal type="number" pos:start="50:34" pos:end="50:34">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="50:38" pos:end="50:42"><expr pos:start="50:38" pos:end="50:42"><literal type="number" pos:start="50:38" pos:end="50:42">0.001</literal></expr></argument>, <argument pos:start="50:45" pos:end="50:45"><expr pos:start="50:45" pos:end="50:45"><literal type="number" pos:start="50:45" pos:end="50:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="52:9" pos:end="56:9">for<control pos:start="52:12" pos:end="52:34">(<init pos:start="52:13" pos:end="52:16"><expr pos:start="52:13" pos:end="52:15"><name pos:start="52:13" pos:end="52:13">i</name><operator pos:start="52:14" pos:end="52:14">=</operator><literal type="number" pos:start="52:15" pos:end="52:15">0</literal></expr>;</init> <condition pos:start="52:18" pos:end="52:29"><expr pos:start="52:18" pos:end="52:28"><name pos:start="52:18" pos:end="52:18">i</name><operator pos:start="52:19" pos:end="52:19">&lt;</operator><name pos:start="52:20" pos:end="52:28">max_order</name></expr>;</condition> <incr pos:start="52:31" pos:end="52:33"><expr pos:start="52:31" pos:end="52:33"><name pos:start="52:31" pos:end="52:31">i</name><operator pos:start="52:32" pos:end="52:33">++</operator></expr></incr>)</control><block pos:start="52:35" pos:end="56:9">{<block_content pos:start="53:13" pos:end="55:94">
            <for pos:start="53:13" pos:end="54:53">for<control pos:start="53:16" pos:end="53:38">(<init pos:start="53:17" pos:end="53:20"><expr pos:start="53:17" pos:end="53:19"><name pos:start="53:17" pos:end="53:17">j</name><operator pos:start="53:18" pos:end="53:18">=</operator><literal type="number" pos:start="53:19" pos:end="53:19">0</literal></expr>;</init> <condition pos:start="53:22" pos:end="53:33"><expr pos:start="53:22" pos:end="53:32"><name pos:start="53:22" pos:end="53:22">j</name><operator pos:start="53:23" pos:end="53:23">&lt;</operator><name pos:start="53:24" pos:end="53:32">max_order</name></expr>;</condition> <incr pos:start="53:35" pos:end="53:37"><expr pos:start="53:35" pos:end="53:37"><name pos:start="53:35" pos:end="53:35">j</name><operator pos:start="53:36" pos:end="53:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="54:17" pos:end="54:53"><block_content pos:start="54:17" pos:end="54:53">
                <expr_stmt pos:start="54:17" pos:end="54:53"><expr pos:start="54:17" pos:end="54:52"><name pos:start="54:17" pos:end="54:25"><name pos:start="54:17" pos:end="54:19">lpc</name><index pos:start="54:20" pos:end="54:22">[<expr pos:start="54:21" pos:end="54:21"><name pos:start="54:21" pos:end="54:21">i</name></expr>]</index><index pos:start="54:23" pos:end="54:25">[<expr pos:start="54:24" pos:end="54:24"><name pos:start="54:24" pos:end="54:24">j</name></expr>]</index></name><operator pos:start="54:26" pos:end="54:26">=</operator><operator pos:start="54:27" pos:end="54:27">-</operator><name pos:start="54:28" pos:end="54:40"><name pos:start="54:28" pos:end="54:28">m</name><index pos:start="54:29" pos:end="54:40">[<expr pos:start="54:30" pos:end="54:39"><operator pos:start="54:30" pos:end="54:30">(</operator><name pos:start="54:31" pos:end="54:34">pass</name><operator pos:start="54:35" pos:end="54:35">-</operator><literal type="number" pos:start="54:36" pos:end="54:36">1</literal><operator pos:start="54:37" pos:end="54:37">)</operator><operator pos:start="54:38" pos:end="54:38">&amp;</operator><literal type="number" pos:start="54:39" pos:end="54:39">1</literal></expr>]</index></name><operator pos:start="54:41" pos:end="54:41">.</operator><name pos:start="54:42" pos:end="54:52"><name pos:start="54:42" pos:end="54:46">coeff</name><index pos:start="54:47" pos:end="54:49">[<expr pos:start="54:48" pos:end="54:48"><name pos:start="54:48" pos:end="54:48">i</name></expr>]</index><index pos:start="54:50" pos:end="54:52">[<expr pos:start="54:51" pos:end="54:51"><name pos:start="54:51" pos:end="54:51">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
            <expr_stmt pos:start="55:13" pos:end="55:94"><expr pos:start="55:13" pos:end="55:93"><name pos:start="55:13" pos:end="55:18"><name pos:start="55:13" pos:end="55:15">ref</name><index pos:start="55:16" pos:end="55:18">[<expr pos:start="55:17" pos:end="55:17"><name pos:start="55:17" pos:end="55:17">i</name></expr>]</index></name><operator pos:start="55:19" pos:end="55:19">=</operator> <call pos:start="55:21" pos:end="55:60"><name pos:start="55:21" pos:end="55:24">sqrt</name><argument_list pos:start="55:25" pos:end="55:60">(<argument pos:start="55:26" pos:end="55:59"><expr pos:start="55:26" pos:end="55:59"><name pos:start="55:26" pos:end="55:38"><name pos:start="55:26" pos:end="55:26">m</name><index pos:start="55:27" pos:end="55:38">[<expr pos:start="55:28" pos:end="55:37"><operator pos:start="55:28" pos:end="55:28">(</operator><name pos:start="55:29" pos:end="55:32">pass</name><operator pos:start="55:33" pos:end="55:33">-</operator><literal type="number" pos:start="55:34" pos:end="55:34">1</literal><operator pos:start="55:35" pos:end="55:35">)</operator><operator pos:start="55:36" pos:end="55:36">&amp;</operator><literal type="number" pos:start="55:37" pos:end="55:37">1</literal></expr>]</index></name><operator pos:start="55:39" pos:end="55:39">.</operator><name pos:start="55:40" pos:end="55:50"><name pos:start="55:40" pos:end="55:47">variance</name><index pos:start="55:48" pos:end="55:50">[<expr pos:start="55:49" pos:end="55:49"><name pos:start="55:49" pos:end="55:49">i</name></expr>]</index></name> <operator pos:start="55:52" pos:end="55:52">/</operator> <name pos:start="55:54" pos:end="55:59">weight</name></expr></argument>)</argument_list></call> <operator pos:start="55:62" pos:end="55:62">*</operator> <operator pos:start="55:64" pos:end="55:64">(</operator><name pos:start="55:65" pos:end="55:73">blocksize</name> <operator pos:start="55:75" pos:end="55:75">-</operator> <name pos:start="55:77" pos:end="55:85">max_order</name><operator pos:start="55:86" pos:end="55:86">)</operator> <operator pos:start="55:88" pos:end="55:88">/</operator> <literal type="number" pos:start="55:90" pos:end="55:93">4000</literal></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="57:9" pos:end="58:39">for<control pos:start="57:12" pos:end="57:36">(<init pos:start="57:13" pos:end="57:26"><expr pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:13">i</name><operator pos:start="57:14" pos:end="57:14">=</operator><name pos:start="57:15" pos:end="57:23">max_order</name><operator pos:start="57:24" pos:end="57:24">-</operator><literal type="number" pos:start="57:25" pos:end="57:25">1</literal></expr>;</init> <condition pos:start="57:28" pos:end="57:31"><expr pos:start="57:28" pos:end="57:30"><name pos:start="57:28" pos:end="57:28">i</name><operator pos:start="57:29" pos:end="57:29">&gt;</operator><literal type="number" pos:start="57:30" pos:end="57:30">0</literal></expr>;</condition> <incr pos:start="57:33" pos:end="57:35"><expr pos:start="57:33" pos:end="57:35"><name pos:start="57:33" pos:end="57:33">i</name><operator pos:start="57:34" pos:end="57:35">--</operator></expr></incr>)</control><block type="pseudo" pos:start="58:13" pos:end="58:39"><block_content pos:start="58:13" pos:end="58:39">
            <expr_stmt pos:start="58:13" pos:end="58:39"><expr pos:start="58:13" pos:end="58:38"><name pos:start="58:13" pos:end="58:18"><name pos:start="58:13" pos:end="58:15">ref</name><index pos:start="58:16" pos:end="58:18">[<expr pos:start="58:17" pos:end="58:17"><name pos:start="58:17" pos:end="58:17">i</name></expr>]</index></name> <operator pos:start="58:20" pos:end="58:20">=</operator> <name pos:start="58:22" pos:end="58:29"><name pos:start="58:22" pos:end="58:24">ref</name><index pos:start="58:25" pos:end="58:29">[<expr pos:start="58:26" pos:end="58:28"><name pos:start="58:26" pos:end="58:26">i</name><operator pos:start="58:27" pos:end="58:27">-</operator><literal type="number" pos:start="58:28" pos:end="58:28">1</literal></expr>]</index></name> <operator pos:start="58:31" pos:end="58:31">-</operator> <name pos:start="58:33" pos:end="58:38"><name pos:start="58:33" pos:end="58:35">ref</name><index pos:start="58:36" pos:end="58:38">[<expr pos:start="58:37" pos:end="58:37"><name pos:start="58:37" pos:end="58:37">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="60:5" pos:end="60:26"><expr pos:start="60:5" pos:end="60:25"><name pos:start="60:5" pos:end="60:13">opt_order</name> <operator pos:start="60:15" pos:end="60:15">=</operator> <name pos:start="60:17" pos:end="60:25">max_order</name></expr>;</expr_stmt>
    <if_stmt pos:start="61:5" pos:end="69:5"><if pos:start="61:5" pos:end="65:5">if<condition pos:start="61:7" pos:end="61:35">(<expr pos:start="61:8" pos:end="61:34"><name pos:start="61:8" pos:end="61:14">omethod</name> <operator pos:start="61:16" pos:end="61:17">==</operator> <name pos:start="61:19" pos:end="61:34">ORDER_METHOD_EST</name></expr>)</condition> <block pos:start="61:37" pos:end="65:5">{<block_content pos:start="62:9" pos:end="64:95">
        <expr_stmt pos:start="62:9" pos:end="62:67"><expr pos:start="62:9" pos:end="62:66"><name pos:start="62:9" pos:end="62:17">opt_order</name> <operator pos:start="62:19" pos:end="62:19">=</operator> <call pos:start="62:21" pos:end="62:66"><name pos:start="62:21" pos:end="62:39">estimate_best_order</name><argument_list pos:start="62:40" pos:end="62:66">(<argument pos:start="62:41" pos:end="62:43"><expr pos:start="62:41" pos:end="62:43"><name pos:start="62:41" pos:end="62:43">ref</name></expr></argument>, <argument pos:start="62:46" pos:end="62:54"><expr pos:start="62:46" pos:end="62:54"><name pos:start="62:46" pos:end="62:54">min_order</name></expr></argument>, <argument pos:start="62:57" pos:end="62:65"><expr pos:start="62:57" pos:end="62:65"><name pos:start="62:57" pos:end="62:65">max_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="63:9" pos:end="63:24"><expr pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:9">i</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <name pos:start="63:13" pos:end="63:21">opt_order</name><operator pos:start="63:22" pos:end="63:22">-</operator><literal type="number" pos:start="63:23" pos:end="63:23">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="64:9" pos:end="64:95"><expr pos:start="64:9" pos:end="64:94"><call pos:start="64:9" pos:end="64:94"><name pos:start="64:9" pos:end="64:26">quantize_lpc_coefs</name><argument_list pos:start="64:27" pos:end="64:94">(<argument pos:start="64:28" pos:end="64:33"><expr pos:start="64:28" pos:end="64:33"><name pos:start="64:28" pos:end="64:33"><name pos:start="64:28" pos:end="64:30">lpc</name><index pos:start="64:31" pos:end="64:33">[<expr pos:start="64:32" pos:end="64:32"><name pos:start="64:32" pos:end="64:32">i</name></expr>]</index></name></expr></argument>, <argument pos:start="64:36" pos:end="64:38"><expr pos:start="64:36" pos:end="64:38"><name pos:start="64:36" pos:end="64:36">i</name><operator pos:start="64:37" pos:end="64:37">+</operator><literal type="number" pos:start="64:38" pos:end="64:38">1</literal></expr></argument>, <argument pos:start="64:41" pos:end="64:49"><expr pos:start="64:41" pos:end="64:49"><name pos:start="64:41" pos:end="64:49">precision</name></expr></argument>, <argument pos:start="64:52" pos:end="64:59"><expr pos:start="64:52" pos:end="64:59"><name pos:start="64:52" pos:end="64:59"><name pos:start="64:52" pos:end="64:56">coefs</name><index pos:start="64:57" pos:end="64:59">[<expr pos:start="64:58" pos:end="64:58"><name pos:start="64:58" pos:end="64:58">i</name></expr>]</index></name></expr></argument>, <argument pos:start="64:62" pos:end="64:70"><expr pos:start="64:62" pos:end="64:70"><operator pos:start="64:62" pos:end="64:62">&amp;</operator><name pos:start="64:63" pos:end="64:70"><name pos:start="64:63" pos:end="64:67">shift</name><index pos:start="64:68" pos:end="64:70">[<expr pos:start="64:69" pos:end="64:69"><name pos:start="64:69" pos:end="64:69">i</name></expr>]</index></name></expr></argument>, <argument pos:start="64:73" pos:end="64:81"><expr pos:start="64:73" pos:end="64:81"><name pos:start="64:73" pos:end="64:81">max_shift</name></expr></argument>, <argument pos:start="64:84" pos:end="64:93"><expr pos:start="64:84" pos:end="64:93"><name pos:start="64:84" pos:end="64:93">zero_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="65:7" pos:end="69:5">else <block pos:start="65:12" pos:end="69:5">{<block_content pos:start="66:9" pos:end="68:9">
        <for pos:start="66:9" pos:end="68:9">for<control pos:start="66:12" pos:end="66:44">(<init pos:start="66:13" pos:end="66:26"><expr pos:start="66:13" pos:end="66:25"><name pos:start="66:13" pos:end="66:13">i</name><operator pos:start="66:14" pos:end="66:14">=</operator><name pos:start="66:15" pos:end="66:23">min_order</name><operator pos:start="66:24" pos:end="66:24">-</operator><literal type="number" pos:start="66:25" pos:end="66:25">1</literal></expr>;</init> <condition pos:start="66:28" pos:end="66:39"><expr pos:start="66:28" pos:end="66:38"><name pos:start="66:28" pos:end="66:28">i</name><operator pos:start="66:29" pos:end="66:29">&lt;</operator><name pos:start="66:30" pos:end="66:38">max_order</name></expr>;</condition> <incr pos:start="66:41" pos:end="66:43"><expr pos:start="66:41" pos:end="66:43"><name pos:start="66:41" pos:end="66:41">i</name><operator pos:start="66:42" pos:end="66:43">++</operator></expr></incr>)</control> <block pos:start="66:46" pos:end="68:9">{<block_content pos:start="67:13" pos:end="67:99">
            <expr_stmt pos:start="67:13" pos:end="67:99"><expr pos:start="67:13" pos:end="67:98"><call pos:start="67:13" pos:end="67:98"><name pos:start="67:13" pos:end="67:30">quantize_lpc_coefs</name><argument_list pos:start="67:31" pos:end="67:98">(<argument pos:start="67:32" pos:end="67:37"><expr pos:start="67:32" pos:end="67:37"><name pos:start="67:32" pos:end="67:37"><name pos:start="67:32" pos:end="67:34">lpc</name><index pos:start="67:35" pos:end="67:37">[<expr pos:start="67:36" pos:end="67:36"><name pos:start="67:36" pos:end="67:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="67:40" pos:end="67:42"><expr pos:start="67:40" pos:end="67:42"><name pos:start="67:40" pos:end="67:40">i</name><operator pos:start="67:41" pos:end="67:41">+</operator><literal type="number" pos:start="67:42" pos:end="67:42">1</literal></expr></argument>, <argument pos:start="67:45" pos:end="67:53"><expr pos:start="67:45" pos:end="67:53"><name pos:start="67:45" pos:end="67:53">precision</name></expr></argument>, <argument pos:start="67:56" pos:end="67:63"><expr pos:start="67:56" pos:end="67:63"><name pos:start="67:56" pos:end="67:63"><name pos:start="67:56" pos:end="67:60">coefs</name><index pos:start="67:61" pos:end="67:63">[<expr pos:start="67:62" pos:end="67:62"><name pos:start="67:62" pos:end="67:62">i</name></expr>]</index></name></expr></argument>, <argument pos:start="67:66" pos:end="67:74"><expr pos:start="67:66" pos:end="67:74"><operator pos:start="67:66" pos:end="67:66">&amp;</operator><name pos:start="67:67" pos:end="67:74"><name pos:start="67:67" pos:end="67:71">shift</name><index pos:start="67:72" pos:end="67:74">[<expr pos:start="67:73" pos:end="67:73"><name pos:start="67:73" pos:end="67:73">i</name></expr>]</index></name></expr></argument>, <argument pos:start="67:77" pos:end="67:85"><expr pos:start="67:77" pos:end="67:85"><name pos:start="67:77" pos:end="67:85">max_shift</name></expr></argument>, <argument pos:start="67:88" pos:end="67:97"><expr pos:start="67:88" pos:end="67:97"><name pos:start="67:88" pos:end="67:97">zero_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></else></if_stmt>
    <return pos:start="70:5" pos:end="70:21">return <expr pos:start="70:12" pos:end="70:20"><name pos:start="70:12" pos:end="70:20">opt_order</name></expr>;</return>
</block_content>}</block></function></unit>
