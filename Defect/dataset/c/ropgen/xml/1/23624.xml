<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23624.c" pos:tabs="8"> <function pos:start="1:2" pos:end="59:1"><type pos:start="1:2" pos:end="1:22"><specifier pos:start="1:2" pos:end="1:7">static</specifier> <name pos:start="1:9" pos:end="1:20">MachineClass</name> <modifier pos:start="1:22" pos:end="1:22">*</modifier></type><name pos:start="1:23" pos:end="1:35">machine_parse</name><parameter_list pos:start="1:36" pos:end="1:53">(<parameter pos:start="1:37" pos:end="1:52"><decl pos:start="1:37" pos:end="1:52"><type pos:start="1:37" pos:end="1:48"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">name</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:41">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">MachineClass</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">mc</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:71"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">GSList</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:14">el</name></decl>, <decl pos:start="7:17" pos:end="7:70"><type ref="prev" pos:start="7:5" pos:end="7:12"><modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:25">machines</name> <init pos:start="7:27" pos:end="7:70">= <expr pos:start="7:29" pos:end="7:70"><call pos:start="7:29" pos:end="7:70"><name pos:start="7:29" pos:end="7:49">object_class_get_list</name><argument_list pos:start="7:50" pos:end="7:70">(<argument pos:start="7:51" pos:end="7:62"><expr pos:start="7:51" pos:end="7:62"><name pos:start="7:51" pos:end="7:62">TYPE_MACHINE</name></expr></argument>, <argument pos:start="7:65" pos:end="7:69"><expr pos:start="7:65" pos:end="7:69"><name pos:start="7:65" pos:end="7:69">false</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:13">(<expr pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:12">name</name></expr>)</condition> <block pos:start="11:15" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:32">

        <expr_stmt pos:start="13:9" pos:end="13:32"><expr pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:10">mc</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:31"><name pos:start="13:14" pos:end="13:25">find_machine</name><argument_list pos:start="13:26" pos:end="13:31">(<argument pos:start="13:27" pos:end="13:30"><expr pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:30">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="22:5"><if pos:start="17:5" pos:end="22:5">if <condition pos:start="17:8" pos:end="17:11">(<expr pos:start="17:9" pos:end="17:10"><name pos:start="17:9" pos:end="17:10">mc</name></expr>)</condition> <block pos:start="17:13" pos:end="22:5">{<block_content pos:start="20:9" pos:end="20:18">


        <return pos:start="20:9" pos:end="20:18">return <expr pos:start="20:16" pos:end="20:17"><name pos:start="20:16" pos:end="20:17">mc</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="24:5" pos:end="52:5"><if pos:start="24:5" pos:end="30:5">if <condition pos:start="24:8" pos:end="24:38">(<expr pos:start="24:9" pos:end="24:37"><name pos:start="24:9" pos:end="24:12">name</name> <operator pos:start="24:14" pos:end="24:15">&amp;&amp;</operator> <operator pos:start="24:17" pos:end="24:17">!</operator><call pos:start="24:18" pos:end="24:37"><name pos:start="24:18" pos:end="24:31">is_help_option</name><argument_list pos:start="24:32" pos:end="24:37">(<argument pos:start="24:33" pos:end="24:36"><expr pos:start="24:33" pos:end="24:36"><name pos:start="24:33" pos:end="24:36">name</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="24:40" pos:end="30:5">{<block_content pos:start="26:9" pos:end="28:72">

        <expr_stmt pos:start="26:9" pos:end="26:49"><expr pos:start="26:9" pos:end="26:48"><call pos:start="26:9" pos:end="26:48"><name pos:start="26:9" pos:end="26:20">error_report</name><argument_list pos:start="26:21" pos:end="26:48">(<argument pos:start="26:22" pos:end="26:47"><expr pos:start="26:22" pos:end="26:47"><literal type="string" pos:start="26:22" pos:end="26:47">"Unsupported machine type"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="28:9" pos:end="28:72"><expr pos:start="28:9" pos:end="28:71"><call pos:start="28:9" pos:end="28:71"><name pos:start="28:9" pos:end="28:20">error_printf</name><argument_list pos:start="28:21" pos:end="28:71">(<argument pos:start="28:22" pos:end="28:70"><expr pos:start="28:22" pos:end="28:70"><literal type="string" pos:start="28:22" pos:end="28:70">"Use -machine help to list supported machines!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="30:7" pos:end="52:5">else <block pos:start="30:12" pos:end="52:5">{<block_content pos:start="32:9" pos:end="50:9">

        <expr_stmt pos:start="32:9" pos:end="32:44"><expr pos:start="32:9" pos:end="32:43"><call pos:start="32:9" pos:end="32:43"><name pos:start="32:9" pos:end="32:14">printf</name><argument_list pos:start="32:15" pos:end="32:43">(<argument pos:start="32:16" pos:end="32:42"><expr pos:start="32:16" pos:end="32:42"><literal type="string" pos:start="32:16" pos:end="32:42">"Supported machines are:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="34:9" pos:end="34:61"><expr pos:start="34:9" pos:end="34:60"><name pos:start="34:9" pos:end="34:16">machines</name> <operator pos:start="34:18" pos:end="34:18">=</operator> <call pos:start="34:20" pos:end="34:60"><name pos:start="34:20" pos:end="34:31">g_slist_sort</name><argument_list pos:start="34:32" pos:end="34:60">(<argument pos:start="34:33" pos:end="34:40"><expr pos:start="34:33" pos:end="34:40"><name pos:start="34:33" pos:end="34:40">machines</name></expr></argument>, <argument pos:start="34:43" pos:end="34:59"><expr pos:start="34:43" pos:end="34:59"><name pos:start="34:43" pos:end="34:59">machine_class_cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="36:9" pos:end="50:9">for <control pos:start="36:13" pos:end="36:46">(<init pos:start="36:14" pos:end="36:27"><expr pos:start="36:14" pos:end="36:26"><name pos:start="36:14" pos:end="36:15">el</name> <operator pos:start="36:17" pos:end="36:17">=</operator> <name pos:start="36:19" pos:end="36:26">machines</name></expr>;</init> <condition pos:start="36:29" pos:end="36:31"><expr pos:start="36:29" pos:end="36:30"><name pos:start="36:29" pos:end="36:30">el</name></expr>;</condition> <incr pos:start="36:33" pos:end="36:45"><expr pos:start="36:33" pos:end="36:45"><name pos:start="36:33" pos:end="36:34">el</name> <operator pos:start="36:36" pos:end="36:36">=</operator> <name pos:start="36:38" pos:end="36:45"><name pos:start="36:38" pos:end="36:39">el</name><operator pos:start="36:40" pos:end="36:41">-&gt;</operator><name pos:start="36:42" pos:end="36:45">next</name></name></expr></incr>)</control> <block pos:start="36:48" pos:end="50:9">{<block_content pos:start="38:13" pos:end="48:55">

            <decl_stmt pos:start="38:13" pos:end="38:40"><decl pos:start="38:13" pos:end="38:39"><type pos:start="38:13" pos:end="38:26"><name pos:start="38:13" pos:end="38:24">MachineClass</name> <modifier pos:start="38:26" pos:end="38:26">*</modifier></type><name pos:start="38:27" pos:end="38:28">mc</name> <init pos:start="38:30" pos:end="38:39">= <expr pos:start="38:32" pos:end="38:39"><name pos:start="38:32" pos:end="38:39"><name pos:start="38:32" pos:end="38:33">el</name><operator pos:start="38:34" pos:end="38:35">-&gt;</operator><name pos:start="38:36" pos:end="38:39">data</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="40:13" pos:end="44:13"><if pos:start="40:13" pos:end="44:13">if <condition pos:start="40:16" pos:end="40:26">(<expr pos:start="40:17" pos:end="40:25"><name pos:start="40:17" pos:end="40:25"><name pos:start="40:17" pos:end="40:18">mc</name><operator pos:start="40:19" pos:end="40:20">-&gt;</operator><name pos:start="40:21" pos:end="40:25">alias</name></name></expr>)</condition> <block pos:start="40:28" pos:end="44:13">{<block_content pos:start="42:17" pos:end="42:82">

                <expr_stmt pos:start="42:17" pos:end="42:82"><expr pos:start="42:17" pos:end="42:81"><call pos:start="42:17" pos:end="42:81"><name pos:start="42:17" pos:end="42:22">printf</name><argument_list pos:start="42:23" pos:end="42:81">(<argument pos:start="42:24" pos:end="42:49"><expr pos:start="42:24" pos:end="42:49"><literal type="string" pos:start="42:24" pos:end="42:49">"%-20s %s (alias of %s)\n"</literal></expr></argument>, <argument pos:start="42:52" pos:end="42:60"><expr pos:start="42:52" pos:end="42:60"><name pos:start="42:52" pos:end="42:60"><name pos:start="42:52" pos:end="42:53">mc</name><operator pos:start="42:54" pos:end="42:55">-&gt;</operator><name pos:start="42:56" pos:end="42:60">alias</name></name></expr></argument>, <argument pos:start="42:63" pos:end="42:70"><expr pos:start="42:63" pos:end="42:70"><name pos:start="42:63" pos:end="42:70"><name pos:start="42:63" pos:end="42:64">mc</name><operator pos:start="42:65" pos:end="42:66">-&gt;</operator><name pos:start="42:67" pos:end="42:70">desc</name></name></expr></argument>, <argument pos:start="42:73" pos:end="42:80"><expr pos:start="42:73" pos:end="42:80"><name pos:start="42:73" pos:end="42:80"><name pos:start="42:73" pos:end="42:74">mc</name><operator pos:start="42:75" pos:end="42:76">-&gt;</operator><name pos:start="42:77" pos:end="42:80">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="46:13" pos:end="48:55"><expr pos:start="46:13" pos:end="48:54"><call pos:start="46:13" pos:end="48:54"><name pos:start="46:13" pos:end="46:18">printf</name><argument_list pos:start="46:19" pos:end="48:54">(<argument pos:start="46:20" pos:end="46:33"><expr pos:start="46:20" pos:end="46:33"><literal type="string" pos:start="46:20" pos:end="46:33">"%-20s %s%s\n"</literal></expr></argument>, <argument pos:start="46:36" pos:end="46:43"><expr pos:start="46:36" pos:end="46:43"><name pos:start="46:36" pos:end="46:43"><name pos:start="46:36" pos:end="46:37">mc</name><operator pos:start="46:38" pos:end="46:39">-&gt;</operator><name pos:start="46:40" pos:end="46:43">name</name></name></expr></argument>, <argument pos:start="46:46" pos:end="46:53"><expr pos:start="46:46" pos:end="46:53"><name pos:start="46:46" pos:end="46:53"><name pos:start="46:46" pos:end="46:47">mc</name><operator pos:start="46:48" pos:end="46:49">-&gt;</operator><name pos:start="46:50" pos:end="46:53">desc</name></name></expr></argument>,

                   <argument pos:start="48:20" pos:end="48:53"><expr pos:start="48:20" pos:end="48:53"><ternary pos:start="48:20" pos:end="48:53"><condition pos:start="48:20" pos:end="48:35"><expr pos:start="48:20" pos:end="48:33"><name pos:start="48:20" pos:end="48:33"><name pos:start="48:20" pos:end="48:21">mc</name><operator pos:start="48:22" pos:end="48:23">-&gt;</operator><name pos:start="48:24" pos:end="48:33">is_default</name></name></expr> ?</condition><then pos:start="48:37" pos:end="48:48"> <expr pos:start="48:37" pos:end="48:48"><literal type="string" pos:start="48:37" pos:end="48:48">" (default)"</literal></expr> </then><else pos:start="48:50" pos:end="48:53">: <expr pos:start="48:52" pos:end="48:53"><literal type="string" pos:start="48:52" pos:end="48:53">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>




    <expr_stmt pos:start="57:5" pos:end="57:41"><expr pos:start="57:5" pos:end="57:40"><call pos:start="57:5" pos:end="57:40"><name pos:start="57:5" pos:end="57:8">exit</name><argument_list pos:start="57:9" pos:end="57:40">(<argument pos:start="57:10" pos:end="57:39"><expr pos:start="57:10" pos:end="57:39"><operator pos:start="57:10" pos:end="57:10">!</operator><name pos:start="57:11" pos:end="57:14">name</name> <operator pos:start="57:16" pos:end="57:17">||</operator> <operator pos:start="57:19" pos:end="57:19">!</operator><call pos:start="57:20" pos:end="57:39"><name pos:start="57:20" pos:end="57:33">is_help_option</name><argument_list pos:start="57:34" pos:end="57:39">(<argument pos:start="57:35" pos:end="57:38"><expr pos:start="57:35" pos:end="57:38"><name pos:start="57:35" pos:end="57:38">name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
