<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13444.c" pos:tabs="8"><function pos:start="1:1" pos:end="50:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">aio_write_done</name><parameter_list pos:start="1:27" pos:end="1:49">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:48"><decl pos:start="1:42" pos:end="1:48"><type pos:start="1:42" pos:end="1:48"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:48">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="50:1">{<block_content pos:start="5:5" pos:end="48:16">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:18">aio_ctx</name></name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">ctx</name> <init pos:start="5:25" pos:end="5:32">= <expr pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:32">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:18">timeval</name></name></type> <name pos:start="7:20" pos:end="7:21">t2</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:28"><expr pos:start="11:5" pos:end="11:27"><call pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:16">gettimeofday</name><argument_list pos:start="11:17" pos:end="11:27">(<argument pos:start="11:18" pos:end="11:20"><expr pos:start="11:18" pos:end="11:20"><operator pos:start="11:18" pos:end="11:18">&amp;</operator><name pos:start="11:19" pos:end="11:20">t2</name></expr></argument>, <argument pos:start="11:23" pos:end="11:26"><expr pos:start="11:23" pos:end="11:26"><name pos:start="11:23" pos:end="11:26">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:13">&lt;</operator> <literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>)</condition> <block pos:start="17:18" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:17">

        <expr_stmt pos:start="19:9" pos:end="19:57"><expr pos:start="19:9" pos:end="19:56"><call pos:start="19:9" pos:end="19:56"><name pos:start="19:9" pos:end="19:14">printf</name><argument_list pos:start="19:15" pos:end="19:56">(<argument pos:start="19:16" pos:end="19:39"><expr pos:start="19:16" pos:end="19:39"><literal type="string" pos:start="19:16" pos:end="19:39">"aio_write failed: %s\n"</literal></expr></argument>, <argument pos:start="19:42" pos:end="19:55"><expr pos:start="19:42" pos:end="19:55"><call pos:start="19:42" pos:end="19:55"><name pos:start="19:42" pos:end="19:49">strerror</name><argument_list pos:start="19:50" pos:end="19:55">(<argument pos:start="19:51" pos:end="19:54"><expr pos:start="19:51" pos:end="19:54"><operator pos:start="19:51" pos:end="19:51">-</operator><name pos:start="19:52" pos:end="19:54">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="21:9" pos:end="21:17">goto <name pos:start="21:14" pos:end="21:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:19">(<expr pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:11">ctx</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:18">qflag</name></name></expr>)</condition> <block pos:start="27:21" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:17">

        <goto pos:start="29:9" pos:end="29:17">goto <name pos:start="29:14" pos:end="29:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:60">/* Finally, report back -- -C gives a parsable format */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:27"><expr pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:6">t2</name> <operator pos:start="37:8" pos:end="37:8">=</operator> <call pos:start="37:10" pos:end="37:26"><name pos:start="37:10" pos:end="37:13">tsub</name><argument_list pos:start="37:14" pos:end="37:26">(<argument pos:start="37:15" pos:end="37:16"><expr pos:start="37:15" pos:end="37:16"><name pos:start="37:15" pos:end="37:16">t2</name></expr></argument>, <argument pos:start="37:19" pos:end="37:25"><expr pos:start="37:19" pos:end="37:25"><name pos:start="37:19" pos:end="37:25"><name pos:start="37:19" pos:end="37:21">ctx</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:25">t1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="41:48"><expr pos:start="39:5" pos:end="41:47"><call pos:start="39:5" pos:end="41:47"><name pos:start="39:5" pos:end="39:16">print_report</name><argument_list pos:start="39:17" pos:end="41:47">(<argument pos:start="39:18" pos:end="39:24"><expr pos:start="39:18" pos:end="39:24"><literal type="string" pos:start="39:18" pos:end="39:24">"wrote"</literal></expr></argument>, <argument pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><operator pos:start="39:27" pos:end="39:27">&amp;</operator><name pos:start="39:28" pos:end="39:29">t2</name></expr></argument>, <argument pos:start="39:32" pos:end="39:42"><expr pos:start="39:32" pos:end="39:42"><name pos:start="39:32" pos:end="39:42"><name pos:start="39:32" pos:end="39:34">ctx</name><operator pos:start="39:35" pos:end="39:36">-&gt;</operator><name pos:start="39:37" pos:end="39:42">offset</name></name></expr></argument>, <argument pos:start="39:45" pos:end="39:58"><expr pos:start="39:45" pos:end="39:58"><name pos:start="39:45" pos:end="39:58"><name pos:start="39:45" pos:end="39:47">ctx</name><operator pos:start="39:48" pos:end="39:49">-&gt;</operator><name pos:start="39:50" pos:end="39:53">qiov</name><operator pos:start="39:54" pos:end="39:54">.</operator><name pos:start="39:55" pos:end="39:58">size</name></name></expr></argument>,

                 <argument pos:start="41:18" pos:end="41:31"><expr pos:start="41:18" pos:end="41:31"><name pos:start="41:18" pos:end="41:31"><name pos:start="41:18" pos:end="41:20">ctx</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:26">qiov</name><operator pos:start="41:27" pos:end="41:27">.</operator><name pos:start="41:28" pos:end="41:31">size</name></name></expr></argument>, <argument pos:start="41:34" pos:end="41:34"><expr pos:start="41:34" pos:end="41:34"><literal type="number" pos:start="41:34" pos:end="41:34">1</literal></expr></argument>, <argument pos:start="41:37" pos:end="41:46"><expr pos:start="41:37" pos:end="41:46"><name pos:start="41:37" pos:end="41:46"><name pos:start="41:37" pos:end="41:39">ctx</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:46">Cflag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="43:1" pos:end="43:4"><name pos:start="43:1" pos:end="43:3">out</name>:</label>

    <expr_stmt pos:start="45:5" pos:end="45:27"><expr pos:start="45:5" pos:end="45:26"><call pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:16">qemu_io_free</name><argument_list pos:start="45:17" pos:end="45:26">(<argument pos:start="45:18" pos:end="45:25"><expr pos:start="45:18" pos:end="45:25"><name pos:start="45:18" pos:end="45:25"><name pos:start="45:18" pos:end="45:20">ctx</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:25">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <expr_stmt pos:start="48:5" pos:end="48:16"><expr pos:start="48:5" pos:end="48:15"><call pos:start="48:5" pos:end="48:15"><name pos:start="48:5" pos:end="48:10">g_free</name><argument_list pos:start="48:11" pos:end="48:15">(<argument pos:start="48:12" pos:end="48:14"><expr pos:start="48:12" pos:end="48:14"><name pos:start="48:12" pos:end="48:14">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
