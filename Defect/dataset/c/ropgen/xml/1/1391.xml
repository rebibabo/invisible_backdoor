<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1391.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">eval_refl</name><parameter_list pos:start="1:21" pos:end="1:74">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:41"><specifier pos:start="1:22" pos:end="1:26">const</specifier> <name pos:start="1:28" pos:end="1:34">int16_t</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:41">coefs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:52"><decl pos:start="1:44" pos:end="1:52"><type pos:start="1:44" pos:end="1:52"><name pos:start="1:44" pos:end="1:46">int</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">refl</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:73"><decl pos:start="1:55" pos:end="1:73"><type pos:start="1:55" pos:end="1:73"><name pos:start="1:55" pos:end="1:66">RA144Context</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:73">ractx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:18">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">retval</name> <init pos:start="5:16" pos:end="5:18">= <expr pos:start="5:18" pos:end="5:18"><literal type="number" pos:start="5:18" pos:end="5:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">b</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">c</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">u</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:15">buffer1</name><index pos:start="11:16" pos:end="11:19">[<expr pos:start="11:17" pos:end="11:18"><literal type="number" pos:start="11:17" pos:end="11:18">10</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:15">buffer2</name><index pos:start="13:16" pos:end="13:19">[<expr pos:start="13:17" pos:end="13:18"><literal type="number" pos:start="13:17" pos:end="13:18">10</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:7">int</name> <modifier pos:start="15:9" pos:end="15:9">*</modifier></type><name pos:start="15:10" pos:end="15:12">bp1</name> <init pos:start="15:14" pos:end="15:22">= <expr pos:start="15:16" pos:end="15:22"><name pos:start="15:16" pos:end="15:22">buffer1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:7">int</name> <modifier pos:start="17:9" pos:end="17:9">*</modifier></type><name pos:start="17:10" pos:end="17:12">bp2</name> <init pos:start="17:14" pos:end="17:22">= <expr pos:start="17:16" pos:end="17:22"><name pos:start="17:16" pos:end="17:22">buffer2</name></expr></init></decl>;</decl_stmt>



    <for pos:start="21:5" pos:end="23:30">for <control pos:start="21:9" pos:end="21:26">(<init pos:start="21:10" pos:end="21:13"><expr pos:start="21:10" pos:end="21:12"><name pos:start="21:10" pos:end="21:10">i</name><operator pos:start="21:11" pos:end="21:11">=</operator><literal type="number" pos:start="21:12" pos:end="21:12">0</literal></expr>;</init> <condition pos:start="21:15" pos:end="21:21"><expr pos:start="21:15" pos:end="21:20"><name pos:start="21:15" pos:end="21:15">i</name> <operator pos:start="21:17" pos:end="21:17">&lt;</operator> <literal type="number" pos:start="21:19" pos:end="21:20">10</literal></expr>;</condition> <incr pos:start="21:23" pos:end="21:25"><expr pos:start="21:23" pos:end="21:25"><name pos:start="21:23" pos:end="21:23">i</name><operator pos:start="21:24" pos:end="21:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:9" pos:end="23:30"><block_content pos:start="23:9" pos:end="23:30">

        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:15">buffer2</name><index pos:start="23:16" pos:end="23:18">[<expr pos:start="23:17" pos:end="23:17"><name pos:start="23:17" pos:end="23:17">i</name></expr>]</index></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:29"><name pos:start="23:22" pos:end="23:26">coefs</name><index pos:start="23:27" pos:end="23:29">[<expr pos:start="23:28" pos:end="23:28"><name pos:start="23:28" pos:end="23:28">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="27:5" pos:end="27:25"><expr pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:5">u</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <name pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:12">refl</name><index pos:start="27:13" pos:end="27:15">[<expr pos:start="27:14" pos:end="27:14"><literal type="number" pos:start="27:14" pos:end="27:14">9</literal></expr>]</index></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:24"><name pos:start="27:19" pos:end="27:21">bp2</name><index pos:start="27:22" pos:end="27:24">[<expr pos:start="27:23" pos:end="27:23"><literal type="number" pos:start="27:23" pos:end="27:23">9</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:28">(<expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:9">u</name> <operator pos:start="31:11" pos:end="31:11">+</operator> <literal type="number" pos:start="31:13" pos:end="31:18">0x1000</literal> <operator pos:start="31:20" pos:end="31:20">&gt;</operator> <literal type="number" pos:start="31:22" pos:end="31:27">0x1fff</literal></expr>)</condition> <block pos:start="31:30" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:17">

        <expr_stmt pos:start="33:9" pos:end="33:66"><expr pos:start="33:9" pos:end="33:65"><call pos:start="33:9" pos:end="33:65"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:65">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">ractx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:64"><expr pos:start="33:37" pos:end="33:64"><literal type="string" pos:start="33:37" pos:end="33:64">"Overflow. Broken sample?\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="41:5" pos:end="83:5">for <control pos:start="41:9" pos:end="41:26">(<init pos:start="41:10" pos:end="41:13"><expr pos:start="41:10" pos:end="41:12"><name pos:start="41:10" pos:end="41:10">c</name><operator pos:start="41:11" pos:end="41:11">=</operator><literal type="number" pos:start="41:12" pos:end="41:12">8</literal></expr>;</init> <condition pos:start="41:15" pos:end="41:21"><expr pos:start="41:15" pos:end="41:20"><name pos:start="41:15" pos:end="41:15">c</name> <operator pos:start="41:17" pos:end="41:18">&gt;=</operator> <literal type="number" pos:start="41:20" pos:end="41:20">0</literal></expr>;</condition> <incr pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:23">c</name><operator pos:start="41:24" pos:end="41:25">--</operator></expr></incr>)</control> <block pos:start="41:28" pos:end="83:5">{<block_content pos:start="43:9" pos:end="81:32">

        <if_stmt pos:start="43:9" pos:end="45:16"><if pos:start="43:9" pos:end="45:16">if <condition pos:start="43:12" pos:end="43:24">(<expr pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:13">u</name> <operator pos:start="43:15" pos:end="43:16">==</operator> <literal type="number" pos:start="43:18" pos:end="43:23">0x1000</literal></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:16"><block_content pos:start="45:13" pos:end="45:16">

            <expr_stmt pos:start="45:13" pos:end="45:16"><expr pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:13">u</name><operator pos:start="45:14" pos:end="45:15">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="49:9" pos:end="51:16"><if pos:start="49:9" pos:end="51:16">if <condition pos:start="49:12" pos:end="49:28">(<expr pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:13">u</name> <operator pos:start="49:15" pos:end="49:16">==</operator> <literal type="number" pos:start="49:18" pos:end="49:27">0xfffff000</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:16"><block_content pos:start="51:13" pos:end="51:16">

            <expr_stmt pos:start="51:13" pos:end="51:16"><expr pos:start="51:13" pos:end="51:15"><name pos:start="51:13" pos:end="51:13">u</name><operator pos:start="51:14" pos:end="51:15">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:35"><expr pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:9">b</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <literal type="number" pos:start="55:13" pos:end="55:19">0x1000</literal><operator pos:start="55:19" pos:end="55:19">-</operator><operator pos:start="55:20" pos:end="55:20">(</operator><operator pos:start="55:21" pos:end="55:21">(</operator><name pos:start="55:22" pos:end="55:22">u</name> <operator pos:start="55:24" pos:end="55:24">*</operator> <name pos:start="55:26" pos:end="55:26">u</name><operator pos:start="55:27" pos:end="55:27">)</operator> <operator pos:start="55:29" pos:end="55:30">&gt;&gt;</operator> <literal type="number" pos:start="55:32" pos:end="55:33">12</literal><operator pos:start="55:34" pos:end="55:34">)</operator></expr>;</expr_stmt>



        <if_stmt pos:start="59:9" pos:end="61:16"><if pos:start="59:9" pos:end="61:16">if <condition pos:start="59:12" pos:end="59:19">(<expr pos:start="59:13" pos:end="59:18"><name pos:start="59:13" pos:end="59:13">b</name> <operator pos:start="59:15" pos:end="59:16">==</operator> <literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:16"><block_content pos:start="61:13" pos:end="61:16">

            <expr_stmt pos:start="61:13" pos:end="61:16"><expr pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:13">b</name><operator pos:start="61:14" pos:end="61:15">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <for pos:start="65:9" pos:end="67:89">for <control pos:start="65:13" pos:end="65:28">(<init pos:start="65:14" pos:end="65:17"><expr pos:start="65:14" pos:end="65:16"><name pos:start="65:14" pos:end="65:14">u</name><operator pos:start="65:15" pos:end="65:15">=</operator><literal type="number" pos:start="65:16" pos:end="65:16">0</literal></expr>;</init> <condition pos:start="65:19" pos:end="65:23"><expr pos:start="65:19" pos:end="65:22"><name pos:start="65:19" pos:end="65:19">u</name><operator pos:start="65:20" pos:end="65:21">&lt;=</operator><name pos:start="65:22" pos:end="65:22">c</name></expr>;</condition> <incr pos:start="65:25" pos:end="65:27"><expr pos:start="65:25" pos:end="65:27"><name pos:start="65:25" pos:end="65:25">u</name><operator pos:start="65:26" pos:end="65:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="67:13" pos:end="67:89"><block_content pos:start="67:13" pos:end="67:89">

            <expr_stmt pos:start="67:13" pos:end="67:89"><expr pos:start="67:13" pos:end="67:88"><name pos:start="67:13" pos:end="67:18"><name pos:start="67:13" pos:end="67:15">bp1</name><index pos:start="67:16" pos:end="67:18">[<expr pos:start="67:17" pos:end="67:17"><name pos:start="67:17" pos:end="67:17">u</name></expr>]</index></name> <operator pos:start="67:20" pos:end="67:20">=</operator> <operator pos:start="67:22" pos:end="67:22">(</operator><operator pos:start="67:23" pos:end="67:23">(</operator><name pos:start="67:24" pos:end="67:29"><name pos:start="67:24" pos:end="67:26">bp2</name><index pos:start="67:27" pos:end="67:29">[<expr pos:start="67:28" pos:end="67:28"><name pos:start="67:28" pos:end="67:28">u</name></expr>]</index></name> <operator pos:start="67:31" pos:end="67:31">-</operator> <operator pos:start="67:33" pos:end="67:33">(</operator><operator pos:start="67:34" pos:end="67:34">(</operator><name pos:start="67:35" pos:end="67:43"><name pos:start="67:35" pos:end="67:38">refl</name><index pos:start="67:39" pos:end="67:43">[<expr pos:start="67:40" pos:end="67:42"><name pos:start="67:40" pos:end="67:40">c</name><operator pos:start="67:41" pos:end="67:41">+</operator><literal type="number" pos:start="67:42" pos:end="67:42">1</literal></expr>]</index></name> <operator pos:start="67:45" pos:end="67:45">*</operator> <name pos:start="67:47" pos:end="67:54"><name pos:start="67:47" pos:end="67:49">bp2</name><index pos:start="67:50" pos:end="67:54">[<expr pos:start="67:51" pos:end="67:53"><name pos:start="67:51" pos:end="67:51">c</name><operator pos:start="67:52" pos:end="67:52">-</operator><name pos:start="67:53" pos:end="67:53">u</name></expr>]</index></name><operator pos:start="67:55" pos:end="67:55">)</operator> <operator pos:start="67:57" pos:end="67:58">&gt;&gt;</operator> <literal type="number" pos:start="67:60" pos:end="67:61">12</literal><operator pos:start="67:62" pos:end="67:62">)</operator><operator pos:start="67:63" pos:end="67:63">)</operator> <operator pos:start="67:65" pos:end="67:65">*</operator> <operator pos:start="67:67" pos:end="67:67">(</operator><literal type="number" pos:start="67:68" pos:end="67:76">0x1000000</literal> <operator pos:start="67:78" pos:end="67:78">/</operator> <name pos:start="67:80" pos:end="67:80">b</name><operator pos:start="67:81" pos:end="67:81">)</operator><operator pos:start="67:82" pos:end="67:82">)</operator> <operator pos:start="67:84" pos:end="67:85">&gt;&gt;</operator> <literal type="number" pos:start="67:87" pos:end="67:88">12</literal></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="71:9" pos:end="71:29"><expr pos:start="71:9" pos:end="71:28"><name pos:start="71:9" pos:end="71:15"><name pos:start="71:9" pos:end="71:12">refl</name><index pos:start="71:13" pos:end="71:15">[<expr pos:start="71:14" pos:end="71:14"><name pos:start="71:14" pos:end="71:14">c</name></expr>]</index></name> <operator pos:start="71:17" pos:end="71:17">=</operator> <name pos:start="71:19" pos:end="71:19">u</name> <operator pos:start="71:21" pos:end="71:21">=</operator> <name pos:start="71:23" pos:end="71:28"><name pos:start="71:23" pos:end="71:25">bp1</name><index pos:start="71:26" pos:end="71:28">[<expr pos:start="71:27" pos:end="71:27"><name pos:start="71:27" pos:end="71:27">c</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="75:9" pos:end="77:23"><if pos:start="75:9" pos:end="77:23">if <condition pos:start="75:12" pos:end="75:34">(<expr pos:start="75:13" pos:end="75:33"><operator pos:start="75:13" pos:end="75:13">(</operator><name pos:start="75:14" pos:end="75:14">u</name> <operator pos:start="75:16" pos:end="75:16">+</operator> <literal type="number" pos:start="75:18" pos:end="75:23">0x1000</literal><operator pos:start="75:24" pos:end="75:24">)</operator> <operator pos:start="75:26" pos:end="75:26">&gt;</operator> <literal type="number" pos:start="75:28" pos:end="75:33">0x1fff</literal></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:23"><block_content pos:start="77:13" pos:end="77:23">

            <expr_stmt pos:start="77:13" pos:end="77:23"><expr pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:18">retval</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <literal type="number" pos:start="77:22" pos:end="77:22">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:32"><expr pos:start="81:9" pos:end="81:31"><call pos:start="81:9" pos:end="81:31"><name pos:start="81:9" pos:end="81:14">FFSWAP</name><argument_list pos:start="81:15" pos:end="81:31">(<argument pos:start="81:16" pos:end="81:20"><expr pos:start="81:16" pos:end="81:20"><name pos:start="81:16" pos:end="81:18">int</name> <operator pos:start="81:20" pos:end="81:20">*</operator></expr></argument>, <argument pos:start="81:23" pos:end="81:25"><expr pos:start="81:23" pos:end="81:25"><name pos:start="81:23" pos:end="81:25">bp1</name></expr></argument>, <argument pos:start="81:28" pos:end="81:30"><expr pos:start="81:28" pos:end="81:30"><name pos:start="81:28" pos:end="81:30">bp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="85:5" pos:end="85:18">return <expr pos:start="85:12" pos:end="85:17"><name pos:start="85:12" pos:end="85:17">retval</name></expr>;</return>

</block_content>}</block></function>
</unit>
