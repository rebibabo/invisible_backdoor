<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3133.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">sdl_audio_callback</name><parameter_list pos:start="1:31" pos:end="1:68">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:50">Uint8</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:58">stream</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:67"><decl pos:start="1:61" pos:end="1:67"><type pos:start="1:61" pos:end="1:67"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:67">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VideoState</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">is</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">audio_size</name></decl>, <decl pos:start="7:21" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:24">len1</name></decl>, <decl pos:start="7:27" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:27" pos:end="7:33">silence</name> <init pos:start="7:35" pos:end="7:37">= <expr pos:start="7:37" pos:end="7:37"><literal type="number" pos:start="7:37" pos:end="7:37">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:48"><expr pos:start="11:5" pos:end="11:47"><name pos:start="11:5" pos:end="11:23">audio_callback_time</name> <operator pos:start="11:25" pos:end="11:25">=</operator> <call pos:start="11:27" pos:end="11:47"><name pos:start="11:27" pos:end="11:45">av_gettime_relative</name><argument_list pos:start="11:46" pos:end="11:47">()</argument_list></call></expr>;</expr_stmt>



    <while pos:start="15:5" pos:end="69:5">while <condition pos:start="15:11" pos:end="15:19">(<expr pos:start="15:12" pos:end="15:18"><name pos:start="15:12" pos:end="15:14">len</name> <operator pos:start="15:16" pos:end="15:16">&gt;</operator> <literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>)</condition> <block pos:start="15:21" pos:end="69:5">{<block_content pos:start="17:9" pos:end="67:36">

        <if_stmt pos:start="17:9" pos:end="41:9"><if pos:start="17:9" pos:end="41:9">if <condition pos:start="17:12" pos:end="17:54">(<expr pos:start="17:13" pos:end="17:53"><name pos:start="17:13" pos:end="17:31"><name pos:start="17:13" pos:end="17:14">is</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:31">audio_buf_index</name></name> <operator pos:start="17:33" pos:end="17:34">&gt;=</operator> <name pos:start="17:36" pos:end="17:53"><name pos:start="17:36" pos:end="17:37">is</name><operator pos:start="17:38" pos:end="17:39">-&gt;</operator><name pos:start="17:40" pos:end="17:53">audio_buf_size</name></name></expr>)</condition> <block pos:start="17:56" pos:end="41:9">{<block_content pos:start="19:12" pos:end="39:35">

           <expr_stmt pos:start="19:12" pos:end="19:47"><expr pos:start="19:12" pos:end="19:46"><name pos:start="19:12" pos:end="19:21">audio_size</name> <operator pos:start="19:23" pos:end="19:23">=</operator> <call pos:start="19:25" pos:end="19:46"><name pos:start="19:25" pos:end="19:42">audio_decode_frame</name><argument_list pos:start="19:43" pos:end="19:46">(<argument pos:start="19:44" pos:end="19:45"><expr pos:start="19:44" pos:end="19:45"><name pos:start="19:44" pos:end="19:45">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

           <if_stmt pos:start="21:12" pos:end="37:12"><if pos:start="21:12" pos:end="29:12">if <condition pos:start="21:15" pos:end="21:30">(<expr pos:start="21:16" pos:end="21:29"><name pos:start="21:16" pos:end="21:25">audio_size</name> <operator pos:start="21:27" pos:end="21:27">&lt;</operator> <literal type="number" pos:start="21:29" pos:end="21:29">0</literal></expr>)</condition> <block pos:start="21:32" pos:end="29:12">{<block_content pos:start="25:16" pos:end="27:116">

                <comment type="block" pos:start="23:17" pos:end="23:51">/* if error, just output silence */</comment>

               <expr_stmt pos:start="25:16" pos:end="25:27"><expr pos:start="25:16" pos:end="25:26"><name pos:start="25:16" pos:end="25:22">silence</name> <operator pos:start="25:24" pos:end="25:24">=</operator> <literal type="number" pos:start="25:26" pos:end="25:26">1</literal></expr>;</expr_stmt>

               <expr_stmt pos:start="27:16" pos:end="27:116"><expr pos:start="27:16" pos:end="27:115"><name pos:start="27:16" pos:end="27:33"><name pos:start="27:16" pos:end="27:17">is</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:33">audio_buf_size</name></name> <operator pos:start="27:35" pos:end="27:35">=</operator> <name pos:start="27:37" pos:end="27:61">SDL_AUDIO_MIN_BUFFER_SIZE</name> <operator pos:start="27:63" pos:end="27:63">/</operator> <name pos:start="27:65" pos:end="27:88"><name pos:start="27:65" pos:end="27:66">is</name><operator pos:start="27:67" pos:end="27:68">-&gt;</operator><name pos:start="27:69" pos:end="27:77">audio_tgt</name><operator pos:start="27:78" pos:end="27:78">.</operator><name pos:start="27:79" pos:end="27:88">frame_size</name></name> <operator pos:start="27:90" pos:end="27:90">*</operator> <name pos:start="27:92" pos:end="27:115"><name pos:start="27:92" pos:end="27:93">is</name><operator pos:start="27:94" pos:end="27:95">-&gt;</operator><name pos:start="27:96" pos:end="27:104">audio_tgt</name><operator pos:start="27:105" pos:end="27:105">.</operator><name pos:start="27:106" pos:end="27:115">frame_size</name></name></expr>;</expr_stmt>

           </block_content>}</block></if> <else pos:start="29:14" pos:end="37:12">else <block pos:start="29:19" pos:end="37:12">{<block_content pos:start="31:16" pos:end="35:47">

               <if_stmt pos:start="31:16" pos:end="33:83"><if pos:start="31:16" pos:end="33:83">if <condition pos:start="31:19" pos:end="31:52">(<expr pos:start="31:20" pos:end="31:51"><name pos:start="31:20" pos:end="31:32"><name pos:start="31:20" pos:end="31:21">is</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:32">show_mode</name></name> <operator pos:start="31:34" pos:end="31:35">!=</operator> <name pos:start="31:37" pos:end="31:51">SHOW_MODE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="33:20" pos:end="33:83"><block_content pos:start="33:20" pos:end="33:83">

                   <expr_stmt pos:start="33:20" pos:end="33:83"><expr pos:start="33:20" pos:end="33:82"><call pos:start="33:20" pos:end="33:82"><name pos:start="33:20" pos:end="33:40">update_sample_display</name><argument_list pos:start="33:41" pos:end="33:82">(<argument pos:start="33:42" pos:end="33:43"><expr pos:start="33:42" pos:end="33:43"><name pos:start="33:42" pos:end="33:43">is</name></expr></argument>, <argument pos:start="33:46" pos:end="33:69"><expr pos:start="33:46" pos:end="33:69"><operator pos:start="33:46" pos:end="33:46">(</operator><name pos:start="33:47" pos:end="33:53">int16_t</name> <operator pos:start="33:55" pos:end="33:55">*</operator><operator pos:start="33:56" pos:end="33:56">)</operator><name pos:start="33:57" pos:end="33:69"><name pos:start="33:57" pos:end="33:58">is</name><operator pos:start="33:59" pos:end="33:60">-&gt;</operator><name pos:start="33:61" pos:end="33:69">audio_buf</name></name></expr></argument>, <argument pos:start="33:72" pos:end="33:81"><expr pos:start="33:72" pos:end="33:81"><name pos:start="33:72" pos:end="33:81">audio_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

               <expr_stmt pos:start="35:16" pos:end="35:47"><expr pos:start="35:16" pos:end="35:46"><name pos:start="35:16" pos:end="35:33"><name pos:start="35:16" pos:end="35:17">is</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:33">audio_buf_size</name></name> <operator pos:start="35:35" pos:end="35:35">=</operator> <name pos:start="35:37" pos:end="35:46">audio_size</name></expr>;</expr_stmt>

           </block_content>}</block></else></if_stmt>

           <expr_stmt pos:start="39:12" pos:end="39:35"><expr pos:start="39:12" pos:end="39:34"><name pos:start="39:12" pos:end="39:30"><name pos:start="39:12" pos:end="39:13">is</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:30">audio_buf_index</name></name> <operator pos:start="39:32" pos:end="39:32">=</operator> <literal type="number" pos:start="39:34" pos:end="39:34">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:56"><expr pos:start="43:9" pos:end="43:55"><name pos:start="43:9" pos:end="43:12">len1</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <name pos:start="43:16" pos:end="43:33"><name pos:start="43:16" pos:end="43:17">is</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:33">audio_buf_size</name></name> <operator pos:start="43:35" pos:end="43:35">-</operator> <name pos:start="43:37" pos:end="43:55"><name pos:start="43:37" pos:end="43:38">is</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:55">audio_buf_index</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="47:23"><if pos:start="45:9" pos:end="47:23">if <condition pos:start="45:12" pos:end="45:23">(<expr pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:16">len1</name> <operator pos:start="45:18" pos:end="45:18">&gt;</operator> <name pos:start="45:20" pos:end="45:22">len</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:23"><block_content pos:start="47:13" pos:end="47:23">

            <expr_stmt pos:start="47:13" pos:end="47:23"><expr pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:16">len1</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <name pos:start="47:20" pos:end="47:22">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="61:9"><if pos:start="49:9" pos:end="51:81">if <condition pos:start="49:12" pos:end="49:76">(<expr pos:start="49:13" pos:end="49:75"><operator pos:start="49:13" pos:end="49:13">!</operator><name pos:start="49:14" pos:end="49:22"><name pos:start="49:14" pos:end="49:15">is</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:22">muted</name></name> <operator pos:start="49:24" pos:end="49:25">&amp;&amp;</operator> <operator pos:start="49:27" pos:end="49:27">!</operator><name pos:start="49:28" pos:end="49:34">silence</name> <operator pos:start="49:36" pos:end="49:37">&amp;&amp;</operator> <name pos:start="49:39" pos:end="49:54"><name pos:start="49:39" pos:end="49:40">is</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:54">audio_volume</name></name> <operator pos:start="49:56" pos:end="49:57">==</operator> <name pos:start="49:59" pos:end="49:75">SDL_MIX_MAXVOLUME</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:81"><block_content pos:start="51:13" pos:end="51:81">

            <expr_stmt pos:start="51:13" pos:end="51:81"><expr pos:start="51:13" pos:end="51:80"><call pos:start="51:13" pos:end="51:80"><name pos:start="51:13" pos:end="51:18">memcpy</name><argument_list pos:start="51:19" pos:end="51:80">(<argument pos:start="51:20" pos:end="51:25"><expr pos:start="51:20" pos:end="51:25"><name pos:start="51:20" pos:end="51:25">stream</name></expr></argument>, <argument pos:start="51:28" pos:end="51:73"><expr pos:start="51:28" pos:end="51:73"><operator pos:start="51:28" pos:end="51:28">(</operator><name pos:start="51:29" pos:end="51:35">uint8_t</name> <operator pos:start="51:37" pos:end="51:37">*</operator><operator pos:start="51:38" pos:end="51:38">)</operator><name pos:start="51:39" pos:end="51:51"><name pos:start="51:39" pos:end="51:40">is</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:51">audio_buf</name></name> <operator pos:start="51:53" pos:end="51:53">+</operator> <name pos:start="51:55" pos:end="51:73"><name pos:start="51:55" pos:end="51:56">is</name><operator pos:start="51:57" pos:end="51:58">-&gt;</operator><name pos:start="51:59" pos:end="51:73">audio_buf_index</name></name></expr></argument>, <argument pos:start="51:76" pos:end="51:79"><expr pos:start="51:76" pos:end="51:79"><name pos:start="51:76" pos:end="51:79">len1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="53:9" pos:end="61:9">else <block pos:start="53:14" pos:end="61:9">{<block_content pos:start="55:13" pos:end="59:109">

            <expr_stmt pos:start="55:13" pos:end="55:36"><expr pos:start="55:13" pos:end="55:35"><call pos:start="55:13" pos:end="55:35"><name pos:start="55:13" pos:end="55:18">memset</name><argument_list pos:start="55:19" pos:end="55:35">(<argument pos:start="55:20" pos:end="55:25"><expr pos:start="55:20" pos:end="55:25"><name pos:start="55:20" pos:end="55:25">stream</name></expr></argument>, <argument pos:start="55:28" pos:end="55:28"><expr pos:start="55:28" pos:end="55:28"><literal type="number" pos:start="55:28" pos:end="55:28">0</literal></expr></argument>, <argument pos:start="55:31" pos:end="55:34"><expr pos:start="55:31" pos:end="55:34"><name pos:start="55:31" pos:end="55:34">len1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="59:109"><if pos:start="57:13" pos:end="59:109">if <condition pos:start="57:16" pos:end="57:39">(<expr pos:start="57:17" pos:end="57:38"><operator pos:start="57:17" pos:end="57:17">!</operator><name pos:start="57:18" pos:end="57:26"><name pos:start="57:18" pos:end="57:19">is</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:26">muted</name></name> <operator pos:start="57:28" pos:end="57:29">&amp;&amp;</operator> <operator pos:start="57:31" pos:end="57:31">!</operator><name pos:start="57:32" pos:end="57:38">silence</name></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:109"><block_content pos:start="59:17" pos:end="59:109">

                <expr_stmt pos:start="59:17" pos:end="59:109"><expr pos:start="59:17" pos:end="59:108"><call pos:start="59:17" pos:end="59:108"><name pos:start="59:17" pos:end="59:28">SDL_MixAudio</name><argument_list pos:start="59:29" pos:end="59:108">(<argument pos:start="59:30" pos:end="59:35"><expr pos:start="59:30" pos:end="59:35"><name pos:start="59:30" pos:end="59:35">stream</name></expr></argument>, <argument pos:start="59:38" pos:end="59:83"><expr pos:start="59:38" pos:end="59:83"><operator pos:start="59:38" pos:end="59:38">(</operator><name pos:start="59:39" pos:end="59:45">uint8_t</name> <operator pos:start="59:47" pos:end="59:47">*</operator><operator pos:start="59:48" pos:end="59:48">)</operator><name pos:start="59:49" pos:end="59:61"><name pos:start="59:49" pos:end="59:50">is</name><operator pos:start="59:51" pos:end="59:52">-&gt;</operator><name pos:start="59:53" pos:end="59:61">audio_buf</name></name> <operator pos:start="59:63" pos:end="59:63">+</operator> <name pos:start="59:65" pos:end="59:83"><name pos:start="59:65" pos:end="59:66">is</name><operator pos:start="59:67" pos:end="59:68">-&gt;</operator><name pos:start="59:69" pos:end="59:83">audio_buf_index</name></name></expr></argument>, <argument pos:start="59:86" pos:end="59:89"><expr pos:start="59:86" pos:end="59:89"><name pos:start="59:86" pos:end="59:89">len1</name></expr></argument>, <argument pos:start="59:92" pos:end="59:107"><expr pos:start="59:92" pos:end="59:107"><name pos:start="59:92" pos:end="59:107"><name pos:start="59:92" pos:end="59:93">is</name><operator pos:start="59:94" pos:end="59:95">-&gt;</operator><name pos:start="59:96" pos:end="59:107">audio_volume</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:20"><expr pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:11">len</name> <operator pos:start="63:13" pos:end="63:14">-=</operator> <name pos:start="63:16" pos:end="63:19">len1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:23"><expr pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:14">stream</name> <operator pos:start="65:16" pos:end="65:17">+=</operator> <name pos:start="65:19" pos:end="65:22">len1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:36"><expr pos:start="67:9" pos:end="67:35"><name pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:10">is</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:27">audio_buf_index</name></name> <operator pos:start="67:29" pos:end="67:30">+=</operator> <name pos:start="67:32" pos:end="67:35">len1</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="71:5" pos:end="71:72"><expr pos:start="71:5" pos:end="71:71"><name pos:start="71:5" pos:end="71:28"><name pos:start="71:5" pos:end="71:6">is</name><operator pos:start="71:7" pos:end="71:8">-&gt;</operator><name pos:start="71:9" pos:end="71:28">audio_write_buf_size</name></name> <operator pos:start="71:30" pos:end="71:30">=</operator> <name pos:start="71:32" pos:end="71:49"><name pos:start="71:32" pos:end="71:33">is</name><operator pos:start="71:34" pos:end="71:35">-&gt;</operator><name pos:start="71:36" pos:end="71:49">audio_buf_size</name></name> <operator pos:start="71:51" pos:end="71:51">-</operator> <name pos:start="71:53" pos:end="71:71"><name pos:start="71:53" pos:end="71:54">is</name><operator pos:start="71:55" pos:end="71:56">-&gt;</operator><name pos:start="71:57" pos:end="71:71">audio_buf_index</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="73:5" pos:end="73:76">/* Let's assume the audio driver that is used by SDL has two periods. */</comment>

    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:32">(<expr pos:start="75:9" pos:end="75:31"><operator pos:start="75:9" pos:end="75:9">!</operator><call pos:start="75:10" pos:end="75:31"><name pos:start="75:10" pos:end="75:14">isnan</name><argument_list pos:start="75:15" pos:end="75:31">(<argument pos:start="75:16" pos:end="75:30"><expr pos:start="75:16" pos:end="75:30"><name pos:start="75:16" pos:end="75:30"><name pos:start="75:16" pos:end="75:17">is</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:30">audio_clock</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:34" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:54">

        <expr_stmt pos:start="77:9" pos:end="77:203"><expr pos:start="77:9" pos:end="77:202"><call pos:start="77:9" pos:end="77:202"><name pos:start="77:9" pos:end="77:20">set_clock_at</name><argument_list pos:start="77:21" pos:end="77:202">(<argument pos:start="77:22" pos:end="77:32"><expr pos:start="77:22" pos:end="77:32"><operator pos:start="77:22" pos:end="77:22">&amp;</operator><name pos:start="77:23" pos:end="77:32"><name pos:start="77:23" pos:end="77:24">is</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:32">audclk</name></name></expr></argument>, <argument pos:start="77:35" pos:end="77:144"><expr pos:start="77:35" pos:end="77:144"><name pos:start="77:35" pos:end="77:49"><name pos:start="77:35" pos:end="77:36">is</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:49">audio_clock</name></name> <operator pos:start="77:51" pos:end="77:51">-</operator> <operator pos:start="77:53" pos:end="77:53">(</operator><name pos:start="77:54" pos:end="77:59">double</name><operator pos:start="77:60" pos:end="77:60">)</operator><operator pos:start="77:61" pos:end="77:61">(</operator><literal type="number" pos:start="77:62" pos:end="77:62">2</literal> <operator pos:start="77:64" pos:end="77:64">*</operator> <name pos:start="77:66" pos:end="77:86"><name pos:start="77:66" pos:end="77:67">is</name><operator pos:start="77:68" pos:end="77:69">-&gt;</operator><name pos:start="77:70" pos:end="77:86">audio_hw_buf_size</name></name> <operator pos:start="77:88" pos:end="77:88">+</operator> <name pos:start="77:90" pos:end="77:113"><name pos:start="77:90" pos:end="77:91">is</name><operator pos:start="77:92" pos:end="77:93">-&gt;</operator><name pos:start="77:94" pos:end="77:113">audio_write_buf_size</name></name><operator pos:start="77:114" pos:end="77:114">)</operator> <operator pos:start="77:116" pos:end="77:116">/</operator> <name pos:start="77:118" pos:end="77:144"><name pos:start="77:118" pos:end="77:119">is</name><operator pos:start="77:120" pos:end="77:121">-&gt;</operator><name pos:start="77:122" pos:end="77:130">audio_tgt</name><operator pos:start="77:131" pos:end="77:131">.</operator><name pos:start="77:132" pos:end="77:144">bytes_per_sec</name></name></expr></argument>, <argument pos:start="77:147" pos:end="77:168"><expr pos:start="77:147" pos:end="77:168"><name pos:start="77:147" pos:end="77:168"><name pos:start="77:147" pos:end="77:148">is</name><operator pos:start="77:149" pos:end="77:150">-&gt;</operator><name pos:start="77:151" pos:end="77:168">audio_clock_serial</name></name></expr></argument>, <argument pos:start="77:171" pos:end="77:201"><expr pos:start="77:171" pos:end="77:201"><name pos:start="77:171" pos:end="77:189">audio_callback_time</name> <operator pos:start="77:191" pos:end="77:191">/</operator> <literal type="number" pos:start="77:193" pos:end="77:201">1000000.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:54"><expr pos:start="79:9" pos:end="79:53"><call pos:start="79:9" pos:end="79:53"><name pos:start="79:9" pos:end="79:27">sync_clock_to_slave</name><argument_list pos:start="79:28" pos:end="79:53">(<argument pos:start="79:29" pos:end="79:39"><expr pos:start="79:29" pos:end="79:39"><operator pos:start="79:29" pos:end="79:29">&amp;</operator><name pos:start="79:30" pos:end="79:39"><name pos:start="79:30" pos:end="79:31">is</name><operator pos:start="79:32" pos:end="79:33">-&gt;</operator><name pos:start="79:34" pos:end="79:39">extclk</name></name></expr></argument>, <argument pos:start="79:42" pos:end="79:52"><expr pos:start="79:42" pos:end="79:52"><operator pos:start="79:42" pos:end="79:42">&amp;</operator><name pos:start="79:43" pos:end="79:52"><name pos:start="79:43" pos:end="79:44">is</name><operator pos:start="79:45" pos:end="79:46">-&gt;</operator><name pos:start="79:47" pos:end="79:52">audclk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
