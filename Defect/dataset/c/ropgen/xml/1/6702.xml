<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6702.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">dnxhd_decode_header</name><parameter_list pos:start="1:31" pos:end="1:100">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:43">DNXHDContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">ctx</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:68"><decl pos:start="1:51" pos:end="1:68"><type pos:start="1:51" pos:end="1:68"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:63">uint8_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">buf</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:82"><decl pos:start="1:71" pos:end="1:82"><type pos:start="1:71" pos:end="1:82"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:82">buf_size</name></decl></parameter>, <parameter pos:start="1:85" pos:end="1:99"><decl pos:start="1:85" pos:end="1:99"><type pos:start="1:85" pos:end="1:99"><name pos:start="1:85" pos:end="1:87">int</name></type> <name pos:start="1:89" pos:end="1:99">first_field</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="155:1">{<block_content pos:start="5:5" pos:end="153:13">

    <decl_stmt pos:start="5:5" pos:end="5:76"><decl pos:start="5:5" pos:end="5:75"><type pos:start="5:5" pos:end="5:24"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> <name pos:start="5:18" pos:end="5:24">uint8_t</name></type> <name pos:start="5:26" pos:end="5:40"><name pos:start="5:26" pos:end="5:38">header_prefix</name><index pos:start="5:39" pos:end="5:40">[]</index></name> <init pos:start="5:42" pos:end="5:75">= <expr pos:start="5:44" pos:end="5:75"><block pos:start="5:44" pos:end="5:75">{ <expr pos:start="5:46" pos:end="5:49"><literal type="number" pos:start="5:46" pos:end="5:49">0x00</literal></expr>, <expr pos:start="5:52" pos:end="5:55"><literal type="number" pos:start="5:52" pos:end="5:55">0x00</literal></expr>, <expr pos:start="5:58" pos:end="5:61"><literal type="number" pos:start="5:58" pos:end="5:61">0x02</literal></expr>, <expr pos:start="5:64" pos:end="5:67"><literal type="number" pos:start="5:64" pos:end="5:67">0x80</literal></expr>, <expr pos:start="5:70" pos:end="5:73"><literal type="number" pos:start="5:70" pos:end="5:73">0x01</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">cid</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:18"><if pos:start="11:5" pos:end="13:18">if <condition pos:start="11:8" pos:end="11:25">(<expr pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:16">buf_size</name> <operator pos:start="11:18" pos:end="11:18">&lt;</operator> <literal type="number" pos:start="11:20" pos:end="11:24">0x280</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:18"><block_content pos:start="13:9" pos:end="13:18">

        <return pos:start="13:9" pos:end="13:18">return <expr pos:start="13:16" pos:end="13:17"><operator pos:start="13:16" pos:end="13:16">-</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:38">(<expr pos:start="17:9" pos:end="17:37"><call pos:start="17:9" pos:end="17:37"><name pos:start="17:9" pos:end="17:14">memcmp</name><argument_list pos:start="17:15" pos:end="17:37">(<argument pos:start="17:16" pos:end="17:18"><expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">buf</name></expr></argument>, <argument pos:start="17:21" pos:end="17:33"><expr pos:start="17:21" pos:end="17:33"><name pos:start="17:21" pos:end="17:33">header_prefix</name></expr></argument>, <argument pos:start="17:36" pos:end="17:36"><expr pos:start="17:36" pos:end="17:36"><literal type="number" pos:start="17:36" pos:end="17:36">5</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:40" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:18">

        <expr_stmt pos:start="19:9" pos:end="19:62"><expr pos:start="19:9" pos:end="19:61"><call pos:start="19:9" pos:end="19:61"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="19:61">(<argument pos:start="19:16" pos:end="19:25"><expr pos:start="19:16" pos:end="19:25"><name pos:start="19:16" pos:end="19:25"><name pos:start="19:16" pos:end="19:18">ctx</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:25">avctx</name></name></expr></argument>, <argument pos:start="19:28" pos:end="19:39"><expr pos:start="19:28" pos:end="19:39"><name pos:start="19:28" pos:end="19:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="19:42" pos:end="19:60"><expr pos:start="19:42" pos:end="19:60"><literal type="string" pos:start="19:42" pos:end="19:60">"error in header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="25:19">(<expr pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:11">buf</name><index pos:start="25:12" pos:end="25:14">[<expr pos:start="25:13" pos:end="25:13"><literal type="number" pos:start="25:13" pos:end="25:13">5</literal></expr>]</index></name> <operator pos:start="25:16" pos:end="25:16">&amp;</operator> <literal type="number" pos:start="25:18" pos:end="25:18">2</literal></expr>)</condition> <block pos:start="25:21" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:102"> <comment type="block" pos:start="25:23" pos:end="25:38">/* interlaced */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:36"><expr pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:11">ctx</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:22">cur_field</name></name> <operator pos:start="27:24" pos:end="27:24">=</operator> <name pos:start="27:26" pos:end="27:31"><name pos:start="27:26" pos:end="27:28">buf</name><index pos:start="27:29" pos:end="27:31">[<expr pos:start="27:30" pos:end="27:30"><literal type="number" pos:start="27:30" pos:end="27:30">5</literal></expr>]</index></name> <operator pos:start="27:33" pos:end="27:33">&amp;</operator> <literal type="number" pos:start="27:35" pos:end="27:35">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:42"><expr pos:start="29:9" pos:end="29:41"><name pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:11">ctx</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:20">picture</name><operator pos:start="29:21" pos:end="29:21">.</operator><name pos:start="29:22" pos:end="29:37">interlaced_frame</name></name> <operator pos:start="29:39" pos:end="29:39">=</operator> <literal type="number" pos:start="29:41" pos:end="29:41">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:68"><expr pos:start="31:9" pos:end="31:67"><name pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:11">ctx</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:20">picture</name><operator pos:start="31:21" pos:end="31:21">.</operator><name pos:start="31:22" pos:end="31:36">top_field_first</name></name> <operator pos:start="31:38" pos:end="31:38">=</operator> <name pos:start="31:40" pos:end="31:50">first_field</name> <operator pos:start="31:52" pos:end="31:52">^</operator> <name pos:start="31:54" pos:end="31:67"><name pos:start="31:54" pos:end="31:56">ctx</name><operator pos:start="31:57" pos:end="31:58">-&gt;</operator><name pos:start="31:59" pos:end="31:67">cur_field</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:102"><expr pos:start="33:9" pos:end="33:101"><call pos:start="33:9" pos:end="33:101"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:101">(<argument pos:start="33:16" pos:end="33:25"><expr pos:start="33:16" pos:end="33:25"><name pos:start="33:16" pos:end="33:25"><name pos:start="33:16" pos:end="33:18">ctx</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:25">avctx</name></name></expr></argument>, <argument pos:start="33:28" pos:end="33:39"><expr pos:start="33:28" pos:end="33:39"><name pos:start="33:28" pos:end="33:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="33:42" pos:end="33:72"><expr pos:start="33:42" pos:end="33:72"><literal type="string" pos:start="33:42" pos:end="33:72">"interlaced %d, cur field %d\n"</literal></expr></argument>, <argument pos:start="33:75" pos:end="33:84"><expr pos:start="33:75" pos:end="33:84"><name pos:start="33:75" pos:end="33:80"><name pos:start="33:75" pos:end="33:77">buf</name><index pos:start="33:78" pos:end="33:80">[<expr pos:start="33:79" pos:end="33:79"><literal type="number" pos:start="33:79" pos:end="33:79">5</literal></expr>]</index></name> <operator pos:start="33:82" pos:end="33:82">&amp;</operator> <literal type="number" pos:start="33:84" pos:end="33:84">3</literal></expr></argument>, <argument pos:start="33:87" pos:end="33:100"><expr pos:start="33:87" pos:end="33:100"><name pos:start="33:87" pos:end="33:100"><name pos:start="33:87" pos:end="33:89">ctx</name><operator pos:start="33:90" pos:end="33:91">-&gt;</operator><name pos:start="33:92" pos:end="33:100">cur_field</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:38"><expr pos:start="39:5" pos:end="39:37"><name pos:start="39:5" pos:end="39:15"><name pos:start="39:5" pos:end="39:7">ctx</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:15">height</name></name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:37"><name pos:start="39:19" pos:end="39:25">AV_RB16</name><argument_list pos:start="39:26" pos:end="39:37">(<argument pos:start="39:27" pos:end="39:36"><expr pos:start="39:27" pos:end="39:36"><name pos:start="39:27" pos:end="39:29">buf</name> <operator pos:start="39:31" pos:end="39:31">+</operator> <literal type="number" pos:start="39:33" pos:end="39:36">0x18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:14"><name pos:start="41:5" pos:end="41:7">ctx</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:14">width</name></name>  <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:37"><name pos:start="41:19" pos:end="41:25">AV_RB16</name><argument_list pos:start="41:26" pos:end="41:37">(<argument pos:start="41:27" pos:end="41:36"><expr pos:start="41:27" pos:end="41:36"><name pos:start="41:27" pos:end="41:29">buf</name> <operator pos:start="41:31" pos:end="41:31">+</operator> <literal type="number" pos:start="41:33" pos:end="41:36">0x1a</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:74"><expr pos:start="45:5" pos:end="45:73"><call pos:start="45:5" pos:end="45:73"><name pos:start="45:5" pos:end="45:11">av_dlog</name><argument_list pos:start="45:12" pos:end="45:73">(<argument pos:start="45:13" pos:end="45:22"><expr pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:15">ctx</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:22">avctx</name></name></expr></argument>, <argument pos:start="45:25" pos:end="45:47"><expr pos:start="45:25" pos:end="45:47"><literal type="string" pos:start="45:25" pos:end="45:47">"width %d, height %d\n"</literal></expr></argument>, <argument pos:start="45:50" pos:end="45:59"><expr pos:start="45:50" pos:end="45:59"><name pos:start="45:50" pos:end="45:59"><name pos:start="45:50" pos:end="45:52">ctx</name><operator pos:start="45:53" pos:end="45:54">-&gt;</operator><name pos:start="45:55" pos:end="45:59">width</name></name></expr></argument>, <argument pos:start="45:62" pos:end="45:72"><expr pos:start="45:62" pos:end="45:72"><name pos:start="45:62" pos:end="45:72"><name pos:start="45:62" pos:end="45:64">ctx</name><operator pos:start="45:65" pos:end="45:66">-&gt;</operator><name pos:start="45:67" pos:end="45:72">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="81:5"><if pos:start="49:5" pos:end="65:5">if <condition pos:start="49:8" pos:end="49:25">(<expr pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:11">buf</name><index pos:start="49:12" pos:end="49:17">[<expr pos:start="49:13" pos:end="49:16"><literal type="number" pos:start="49:13" pos:end="49:16">0x21</literal></expr>]</index></name> <operator pos:start="49:19" pos:end="49:19">&amp;</operator> <literal type="number" pos:start="49:21" pos:end="49:24">0x40</literal></expr>)</condition> <block pos:start="49:27" pos:end="65:5">{<block_content pos:start="51:9" pos:end="63:9">

        <expr_stmt pos:start="51:9" pos:end="51:51"><expr pos:start="51:9" pos:end="51:50"><name pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:11">ctx</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:18">avctx</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:27">pix_fmt</name></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <name pos:start="51:31" pos:end="51:50">AV_PIX_FMT_YUV422P10</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:45"><expr pos:start="53:9" pos:end="53:44"><name pos:start="53:9" pos:end="53:39"><name pos:start="53:9" pos:end="53:11">ctx</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:18">avctx</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:39">bits_per_raw_sample</name></name> <operator pos:start="53:41" pos:end="53:41">=</operator> <literal type="number" pos:start="53:43" pos:end="53:44">10</literal></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="63:9"><if pos:start="55:9" pos:end="63:9">if <condition pos:start="55:12" pos:end="55:33">(<expr pos:start="55:13" pos:end="55:32"><name pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:15">ctx</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:26">bit_depth</name></name> <operator pos:start="55:28" pos:end="55:29">!=</operator> <literal type="number" pos:start="55:31" pos:end="55:32">10</literal></expr>)</condition> <block pos:start="55:35" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:62">

            <expr_stmt pos:start="57:13" pos:end="57:51"><expr pos:start="57:13" pos:end="57:50"><call pos:start="57:13" pos:end="57:50"><name pos:start="57:13" pos:end="57:27">ff_dsputil_init</name><argument_list pos:start="57:28" pos:end="57:50">(<argument pos:start="57:29" pos:end="57:37"><expr pos:start="57:29" pos:end="57:37"><operator pos:start="57:29" pos:end="57:29">&amp;</operator><name pos:start="57:30" pos:end="57:37"><name pos:start="57:30" pos:end="57:32">ctx</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:37">dsp</name></name></expr></argument>, <argument pos:start="57:40" pos:end="57:49"><expr pos:start="57:40" pos:end="57:49"><name pos:start="57:40" pos:end="57:49"><name pos:start="57:40" pos:end="57:42">ctx</name><operator pos:start="57:43" pos:end="57:44">-&gt;</operator><name pos:start="57:45" pos:end="57:49">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:32"><expr pos:start="59:13" pos:end="59:31"><name pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:15">ctx</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:26">bit_depth</name></name> <operator pos:start="59:28" pos:end="59:28">=</operator> <literal type="number" pos:start="59:30" pos:end="59:31">10</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:62"><expr pos:start="61:13" pos:end="61:61"><name pos:start="61:13" pos:end="61:33"><name pos:start="61:13" pos:end="61:15">ctx</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:33">decode_dct_block</name></name> <operator pos:start="61:35" pos:end="61:35">=</operator> <name pos:start="61:37" pos:end="61:61">dnxhd_decode_dct_block_10</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="81:5">else <block pos:start="65:12" pos:end="81:5">{<block_content pos:start="67:9" pos:end="79:9">

        <expr_stmt pos:start="67:9" pos:end="67:49"><expr pos:start="67:9" pos:end="67:48"><name pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:11">ctx</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:18">avctx</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:27">pix_fmt</name></name> <operator pos:start="67:29" pos:end="67:29">=</operator> <name pos:start="67:31" pos:end="67:48">AV_PIX_FMT_YUV422P</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:44"><expr pos:start="69:9" pos:end="69:43"><name pos:start="69:9" pos:end="69:39"><name pos:start="69:9" pos:end="69:11">ctx</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:18">avctx</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:39">bits_per_raw_sample</name></name> <operator pos:start="69:41" pos:end="69:41">=</operator> <literal type="number" pos:start="69:43" pos:end="69:43">8</literal></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="79:9"><if pos:start="71:9" pos:end="79:9">if <condition pos:start="71:12" pos:end="71:32">(<expr pos:start="71:13" pos:end="71:31"><name pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:15">ctx</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:26">bit_depth</name></name> <operator pos:start="71:28" pos:end="71:29">!=</operator> <literal type="number" pos:start="71:31" pos:end="71:31">8</literal></expr>)</condition> <block pos:start="71:34" pos:end="79:9">{<block_content pos:start="73:13" pos:end="77:61">

            <expr_stmt pos:start="73:13" pos:end="73:51"><expr pos:start="73:13" pos:end="73:50"><call pos:start="73:13" pos:end="73:50"><name pos:start="73:13" pos:end="73:27">ff_dsputil_init</name><argument_list pos:start="73:28" pos:end="73:50">(<argument pos:start="73:29" pos:end="73:37"><expr pos:start="73:29" pos:end="73:37"><operator pos:start="73:29" pos:end="73:29">&amp;</operator><name pos:start="73:30" pos:end="73:37"><name pos:start="73:30" pos:end="73:32">ctx</name><operator pos:start="73:33" pos:end="73:34">-&gt;</operator><name pos:start="73:35" pos:end="73:37">dsp</name></name></expr></argument>, <argument pos:start="73:40" pos:end="73:49"><expr pos:start="73:40" pos:end="73:49"><name pos:start="73:40" pos:end="73:49"><name pos:start="73:40" pos:end="73:42">ctx</name><operator pos:start="73:43" pos:end="73:44">-&gt;</operator><name pos:start="73:45" pos:end="73:49">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:31"><expr pos:start="75:13" pos:end="75:30"><name pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:15">ctx</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:26">bit_depth</name></name> <operator pos:start="75:28" pos:end="75:28">=</operator> <literal type="number" pos:start="75:30" pos:end="75:30">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:61"><expr pos:start="77:13" pos:end="77:60"><name pos:start="77:13" pos:end="77:33"><name pos:start="77:13" pos:end="77:15">ctx</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:33">decode_dct_block</name></name> <operator pos:start="77:35" pos:end="77:35">=</operator> <name pos:start="77:37" pos:end="77:60">dnxhd_decode_dct_block_8</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:30"><expr pos:start="85:5" pos:end="85:29"><name pos:start="85:5" pos:end="85:7">cid</name> <operator pos:start="85:9" pos:end="85:9">=</operator> <call pos:start="85:11" pos:end="85:29"><name pos:start="85:11" pos:end="85:17">AV_RB32</name><argument_list pos:start="85:18" pos:end="85:29">(<argument pos:start="85:19" pos:end="85:28"><expr pos:start="85:19" pos:end="85:28"><name pos:start="85:19" pos:end="85:21">buf</name> <operator pos:start="85:23" pos:end="85:23">+</operator> <literal type="number" pos:start="85:25" pos:end="85:28">0x28</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:52"><expr pos:start="87:5" pos:end="87:51"><call pos:start="87:5" pos:end="87:51"><name pos:start="87:5" pos:end="87:11">av_dlog</name><argument_list pos:start="87:12" pos:end="87:51">(<argument pos:start="87:13" pos:end="87:22"><expr pos:start="87:13" pos:end="87:22"><name pos:start="87:13" pos:end="87:22"><name pos:start="87:13" pos:end="87:15">ctx</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:22">avctx</name></name></expr></argument>, <argument pos:start="87:25" pos:end="87:45"><expr pos:start="87:25" pos:end="87:45"><literal type="string" pos:start="87:25" pos:end="87:45">"compression id %d\n"</literal></expr></argument>, <argument pos:start="87:48" pos:end="87:50"><expr pos:start="87:48" pos:end="87:50"><name pos:start="87:48" pos:end="87:50">cid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="91:5" pos:end="93:18"><if pos:start="91:5" pos:end="93:18">if <condition pos:start="91:8" pos:end="91:37">(<expr pos:start="91:9" pos:end="91:36"><call pos:start="91:9" pos:end="91:32"><name pos:start="91:9" pos:end="91:22">dnxhd_init_vlc</name><argument_list pos:start="91:23" pos:end="91:32">(<argument pos:start="91:24" pos:end="91:26"><expr pos:start="91:24" pos:end="91:26"><name pos:start="91:24" pos:end="91:26">ctx</name></expr></argument>, <argument pos:start="91:29" pos:end="91:31"><expr pos:start="91:29" pos:end="91:31"><name pos:start="91:29" pos:end="91:31">cid</name></expr></argument>)</argument_list></call> <operator pos:start="91:34" pos:end="91:34">&lt;</operator> <literal type="number" pos:start="91:36" pos:end="91:36">0</literal></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:18"><block_content pos:start="93:9" pos:end="93:18">

        <return pos:start="93:9" pos:end="93:18">return <expr pos:start="93:16" pos:end="93:17"><operator pos:start="93:16" pos:end="93:16">-</operator><literal type="number" pos:start="93:17" pos:end="93:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="97:5" pos:end="103:5"><if pos:start="97:5" pos:end="103:5">if <condition pos:start="97:8" pos:end="97:52">(<expr pos:start="97:9" pos:end="97:51"><name pos:start="97:9" pos:end="97:16">buf_size</name> <operator pos:start="97:18" pos:end="97:18">&lt;</operator> <name pos:start="97:20" pos:end="97:51"><name pos:start="97:20" pos:end="97:22">ctx</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:33">cid_table</name><operator pos:start="97:34" pos:end="97:35">-&gt;</operator><name pos:start="97:36" pos:end="97:51">coding_unit_size</name></name></expr>)</condition> <block pos:start="97:54" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:18">

        <expr_stmt pos:start="99:9" pos:end="99:67"><expr pos:start="99:9" pos:end="99:66"><call pos:start="99:9" pos:end="99:66"><name pos:start="99:9" pos:end="99:14">av_log</name><argument_list pos:start="99:15" pos:end="99:66">(<argument pos:start="99:16" pos:end="99:25"><expr pos:start="99:16" pos:end="99:25"><name pos:start="99:16" pos:end="99:25"><name pos:start="99:16" pos:end="99:18">ctx</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:25">avctx</name></name></expr></argument>, <argument pos:start="99:28" pos:end="99:39"><expr pos:start="99:28" pos:end="99:39"><name pos:start="99:28" pos:end="99:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="99:42" pos:end="99:65"><expr pos:start="99:42" pos:end="99:65"><literal type="string" pos:start="99:42" pos:end="99:65">"incorrect frame size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="101:9" pos:end="101:18">return <expr pos:start="101:16" pos:end="101:17"><operator pos:start="101:16" pos:end="101:16">-</operator><literal type="number" pos:start="101:17" pos:end="101:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:34"><expr pos:start="107:5" pos:end="107:33"><name pos:start="107:5" pos:end="107:17"><name pos:start="107:5" pos:end="107:7">ctx</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:17">mb_width</name></name> <operator pos:start="107:19" pos:end="107:19">=</operator> <name pos:start="107:21" pos:end="107:30"><name pos:start="107:21" pos:end="107:23">ctx</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:30">width</name></name><operator pos:start="107:31" pos:end="107:32">&gt;&gt;</operator><literal type="number" pos:start="107:33" pos:end="107:33">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:32"><expr pos:start="109:5" pos:end="109:31"><name pos:start="109:5" pos:end="109:18"><name pos:start="109:5" pos:end="109:7">ctx</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:18">mb_height</name></name> <operator pos:start="109:20" pos:end="109:20">=</operator> <name pos:start="109:22" pos:end="109:31"><name pos:start="109:22" pos:end="109:24">buf</name><index pos:start="109:25" pos:end="109:31">[<expr pos:start="109:26" pos:end="109:30"><literal type="number" pos:start="109:26" pos:end="109:30">0x16d</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:86"><expr pos:start="113:5" pos:end="113:85"><call pos:start="113:5" pos:end="113:85"><name pos:start="113:5" pos:end="113:11">av_dlog</name><argument_list pos:start="113:12" pos:end="113:85">(<argument pos:start="113:13" pos:end="113:22"><expr pos:start="113:13" pos:end="113:22"><name pos:start="113:13" pos:end="113:22"><name pos:start="113:13" pos:end="113:15">ctx</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:22">avctx</name></name></expr></argument>, <argument pos:start="113:25" pos:end="113:53"><expr pos:start="113:25" pos:end="113:53"><literal type="string" pos:start="113:25" pos:end="113:53">"mb width %d, mb height %d\n"</literal></expr></argument>, <argument pos:start="113:56" pos:end="113:68"><expr pos:start="113:56" pos:end="113:68"><name pos:start="113:56" pos:end="113:68"><name pos:start="113:56" pos:end="113:58">ctx</name><operator pos:start="113:59" pos:end="113:60">-&gt;</operator><name pos:start="113:61" pos:end="113:68">mb_width</name></name></expr></argument>, <argument pos:start="113:71" pos:end="113:84"><expr pos:start="113:71" pos:end="113:84"><name pos:start="113:71" pos:end="113:84"><name pos:start="113:71" pos:end="113:73">ctx</name><operator pos:start="113:74" pos:end="113:75">-&gt;</operator><name pos:start="113:76" pos:end="113:84">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="117:5" pos:end="119:26"><if pos:start="117:5" pos:end="119:26">if <condition pos:start="117:8" pos:end="117:79">(<expr pos:start="117:9" pos:end="117:78"><operator pos:start="117:9" pos:end="117:9">(</operator><name pos:start="117:10" pos:end="117:20"><name pos:start="117:10" pos:end="117:12">ctx</name><operator pos:start="117:13" pos:end="117:14">-&gt;</operator><name pos:start="117:15" pos:end="117:20">height</name></name><operator pos:start="117:21" pos:end="117:21">+</operator><literal type="number" pos:start="117:22" pos:end="117:23">15</literal><operator pos:start="117:24" pos:end="117:24">)</operator><operator pos:start="117:25" pos:end="117:26">&gt;&gt;</operator><literal type="number" pos:start="117:27" pos:end="117:27">4</literal> <operator pos:start="117:29" pos:end="117:30">==</operator> <name pos:start="117:32" pos:end="117:45"><name pos:start="117:32" pos:end="117:34">ctx</name><operator pos:start="117:35" pos:end="117:36">-&gt;</operator><name pos:start="117:37" pos:end="117:45">mb_height</name></name> <operator pos:start="117:47" pos:end="117:48">&amp;&amp;</operator> <name pos:start="117:50" pos:end="117:78"><name pos:start="117:50" pos:end="117:52">ctx</name><operator pos:start="117:53" pos:end="117:54">-&gt;</operator><name pos:start="117:55" pos:end="117:61">picture</name><operator pos:start="117:62" pos:end="117:62">.</operator><name pos:start="117:63" pos:end="117:78">interlaced_frame</name></name></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:26"><block_content pos:start="119:9" pos:end="119:26">

        <expr_stmt pos:start="119:9" pos:end="119:26"><expr pos:start="119:9" pos:end="119:25"><name pos:start="119:9" pos:end="119:19"><name pos:start="119:9" pos:end="119:11">ctx</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:19">height</name></name> <operator pos:start="119:21" pos:end="119:23">&lt;&lt;=</operator> <literal type="number" pos:start="119:25" pos:end="119:25">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="123:5" pos:end="131:5"><if pos:start="123:5" pos:end="131:5">if <condition pos:start="123:8" pos:end="125:78">(<expr pos:start="123:9" pos:end="125:77"><name pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:11">ctx</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:22">mb_height</name></name> <operator pos:start="123:24" pos:end="123:24">&gt;</operator> <literal type="number" pos:start="123:26" pos:end="123:27">68</literal> <operator pos:start="123:29" pos:end="123:30">||</operator>

        <operator pos:start="125:9" pos:end="125:9">(</operator><name pos:start="125:10" pos:end="125:23"><name pos:start="125:10" pos:end="125:12">ctx</name><operator pos:start="125:13" pos:end="125:14">-&gt;</operator><name pos:start="125:15" pos:end="125:23">mb_height</name></name><operator pos:start="125:24" pos:end="125:25">&lt;&lt;</operator><name pos:start="125:26" pos:end="125:54"><name pos:start="125:26" pos:end="125:28">ctx</name><operator pos:start="125:29" pos:end="125:30">-&gt;</operator><name pos:start="125:31" pos:end="125:37">picture</name><operator pos:start="125:38" pos:end="125:38">.</operator><name pos:start="125:39" pos:end="125:54">interlaced_frame</name></name><operator pos:start="125:55" pos:end="125:55">)</operator> <operator pos:start="125:57" pos:end="125:57">&gt;</operator> <operator pos:start="125:59" pos:end="125:59">(</operator><name pos:start="125:60" pos:end="125:70"><name pos:start="125:60" pos:end="125:62">ctx</name><operator pos:start="125:63" pos:end="125:64">-&gt;</operator><name pos:start="125:65" pos:end="125:70">height</name></name><operator pos:start="125:71" pos:end="125:71">+</operator><literal type="number" pos:start="125:72" pos:end="125:73">15</literal><operator pos:start="125:74" pos:end="125:74">)</operator><operator pos:start="125:75" pos:end="125:76">&gt;&gt;</operator><literal type="number" pos:start="125:77" pos:end="125:77">4</literal></expr>)</condition> <block pos:start="125:80" pos:end="131:5">{<block_content pos:start="127:9" pos:end="129:18">

        <expr_stmt pos:start="127:9" pos:end="127:84"><expr pos:start="127:9" pos:end="127:83"><call pos:start="127:9" pos:end="127:83"><name pos:start="127:9" pos:end="127:14">av_log</name><argument_list pos:start="127:15" pos:end="127:83">(<argument pos:start="127:16" pos:end="127:25"><expr pos:start="127:16" pos:end="127:25"><name pos:start="127:16" pos:end="127:25"><name pos:start="127:16" pos:end="127:18">ctx</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:25">avctx</name></name></expr></argument>, <argument pos:start="127:28" pos:end="127:39"><expr pos:start="127:28" pos:end="127:39"><name pos:start="127:28" pos:end="127:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="127:42" pos:end="127:66"><expr pos:start="127:42" pos:end="127:66"><literal type="string" pos:start="127:42" pos:end="127:66">"mb height too big: %d\n"</literal></expr></argument>, <argument pos:start="127:69" pos:end="127:82"><expr pos:start="127:69" pos:end="127:82"><name pos:start="127:69" pos:end="127:82"><name pos:start="127:69" pos:end="127:71">ctx</name><operator pos:start="127:72" pos:end="127:73">-&gt;</operator><name pos:start="127:74" pos:end="127:82">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="129:9" pos:end="129:18">return <expr pos:start="129:16" pos:end="129:17"><operator pos:start="129:16" pos:end="129:16">-</operator><literal type="number" pos:start="129:17" pos:end="129:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="135:5" pos:end="149:5">for <control pos:start="135:9" pos:end="135:40">(<init pos:start="135:10" pos:end="135:15"><expr pos:start="135:10" pos:end="135:14"><name pos:start="135:10" pos:end="135:10">i</name> <operator pos:start="135:12" pos:end="135:12">=</operator> <literal type="number" pos:start="135:14" pos:end="135:14">0</literal></expr>;</init> <condition pos:start="135:17" pos:end="135:35"><expr pos:start="135:17" pos:end="135:34"><name pos:start="135:17" pos:end="135:17">i</name> <operator pos:start="135:19" pos:end="135:19">&lt;</operator> <name pos:start="135:21" pos:end="135:34"><name pos:start="135:21" pos:end="135:23">ctx</name><operator pos:start="135:24" pos:end="135:25">-&gt;</operator><name pos:start="135:26" pos:end="135:34">mb_height</name></name></expr>;</condition> <incr pos:start="135:37" pos:end="135:39"><expr pos:start="135:37" pos:end="135:39"><name pos:start="135:37" pos:end="135:37">i</name><operator pos:start="135:38" pos:end="135:39">++</operator></expr></incr>)</control> <block pos:start="135:42" pos:end="149:5">{<block_content pos:start="137:9" pos:end="147:9">

        <expr_stmt pos:start="137:9" pos:end="137:62"><expr pos:start="137:9" pos:end="137:61"><name pos:start="137:9" pos:end="137:29"><name pos:start="137:9" pos:end="137:11">ctx</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:26">mb_scan_index</name><index pos:start="137:27" pos:end="137:29">[<expr pos:start="137:28" pos:end="137:28"><name pos:start="137:28" pos:end="137:28">i</name></expr>]</index></name> <operator pos:start="137:31" pos:end="137:31">=</operator> <call pos:start="137:33" pos:end="137:61"><name pos:start="137:33" pos:end="137:39">AV_RB32</name><argument_list pos:start="137:40" pos:end="137:61">(<argument pos:start="137:41" pos:end="137:60"><expr pos:start="137:41" pos:end="137:60"><name pos:start="137:41" pos:end="137:43">buf</name> <operator pos:start="137:45" pos:end="137:45">+</operator> <literal type="number" pos:start="137:47" pos:end="137:53">0x170</literal> <operator pos:start="137:53" pos:end="137:53">+</operator> <operator pos:start="137:55" pos:end="137:55">(</operator><name pos:start="137:56" pos:end="137:56">i</name><operator pos:start="137:57" pos:end="137:58">&lt;&lt;</operator><literal type="number" pos:start="137:59" pos:end="137:59">2</literal><operator pos:start="137:60" pos:end="137:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:73"><expr pos:start="139:9" pos:end="139:72"><call pos:start="139:9" pos:end="139:72"><name pos:start="139:9" pos:end="139:15">av_dlog</name><argument_list pos:start="139:16" pos:end="139:72">(<argument pos:start="139:17" pos:end="139:26"><expr pos:start="139:17" pos:end="139:26"><name pos:start="139:17" pos:end="139:26"><name pos:start="139:17" pos:end="139:19">ctx</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:26">avctx</name></name></expr></argument>, <argument pos:start="139:29" pos:end="139:48"><expr pos:start="139:29" pos:end="139:48"><literal type="string" pos:start="139:29" pos:end="139:48">"mb scan index %d\n"</literal></expr></argument>, <argument pos:start="139:51" pos:end="139:71"><expr pos:start="139:51" pos:end="139:71"><name pos:start="139:51" pos:end="139:71"><name pos:start="139:51" pos:end="139:53">ctx</name><operator pos:start="139:54" pos:end="139:55">-&gt;</operator><name pos:start="139:56" pos:end="139:68">mb_scan_index</name><index pos:start="139:69" pos:end="139:71">[<expr pos:start="139:70" pos:end="139:70"><name pos:start="139:70" pos:end="139:70">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="141:9" pos:end="147:9"><if pos:start="141:9" pos:end="147:9">if <condition pos:start="141:12" pos:end="141:53">(<expr pos:start="141:13" pos:end="141:52"><name pos:start="141:13" pos:end="141:20">buf_size</name> <operator pos:start="141:22" pos:end="141:22">&lt;</operator> <name pos:start="141:24" pos:end="141:44"><name pos:start="141:24" pos:end="141:26">ctx</name><operator pos:start="141:27" pos:end="141:28">-&gt;</operator><name pos:start="141:29" pos:end="141:41">mb_scan_index</name><index pos:start="141:42" pos:end="141:44">[<expr pos:start="141:43" pos:end="141:43"><name pos:start="141:43" pos:end="141:43">i</name></expr>]</index></name> <operator pos:start="141:46" pos:end="141:46">+</operator> <literal type="number" pos:start="141:48" pos:end="141:52">0x280</literal></expr>)</condition> <block pos:start="141:55" pos:end="147:9">{<block_content pos:start="143:13" pos:end="145:22">

            <expr_stmt pos:start="143:13" pos:end="143:72"><expr pos:start="143:13" pos:end="143:71"><call pos:start="143:13" pos:end="143:71"><name pos:start="143:13" pos:end="143:18">av_log</name><argument_list pos:start="143:19" pos:end="143:71">(<argument pos:start="143:20" pos:end="143:29"><expr pos:start="143:20" pos:end="143:29"><name pos:start="143:20" pos:end="143:29"><name pos:start="143:20" pos:end="143:22">ctx</name><operator pos:start="143:23" pos:end="143:24">-&gt;</operator><name pos:start="143:25" pos:end="143:29">avctx</name></name></expr></argument>, <argument pos:start="143:32" pos:end="143:43"><expr pos:start="143:32" pos:end="143:43"><name pos:start="143:32" pos:end="143:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="143:46" pos:end="143:70"><expr pos:start="143:46" pos:end="143:70"><literal type="string" pos:start="143:46" pos:end="143:70">"invalid mb scan index\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="145:13" pos:end="145:22">return <expr pos:start="145:20" pos:end="145:21"><operator pos:start="145:20" pos:end="145:20">-</operator><literal type="number" pos:start="145:21" pos:end="145:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="153:5" pos:end="153:13">return <expr pos:start="153:12" pos:end="153:12"><literal type="number" pos:start="153:12" pos:end="153:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
