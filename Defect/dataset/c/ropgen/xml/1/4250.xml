<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4250.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">unsigned</name></type> <name pos:start="1:17" pos:end="1:31">hpte_page_shift</name><parameter_list pos:start="1:32" pos:end="3:33">(<parameter pos:start="1:33" pos:end="1:71"><decl pos:start="1:33" pos:end="1:71"><type pos:start="1:33" pos:end="1:71"><specifier pos:start="1:33" pos:end="1:37">const</specifier> <name pos:start="1:39" pos:end="1:66"><name pos:start="1:39" pos:end="1:44">struct</name> <name pos:start="1:46" pos:end="1:66">ppc_one_seg_page_size</name></name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">sps</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:17"><decl pos:start="3:5" pos:end="3:17"><type pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:12">uint64_t</name></type> <name pos:start="3:14" pos:end="3:17">pte0</name></decl></parameter>, <parameter pos:start="3:20" pos:end="3:32"><decl pos:start="3:20" pos:end="3:32"><type pos:start="3:20" pos:end="3:32"><name pos:start="3:20" pos:end="3:27">uint64_t</name></type> <name pos:start="3:29" pos:end="3:32">pte1</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:13">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="25:5"><if pos:start="11:5" pos:end="25:5">if <condition pos:start="11:8" pos:end="11:33">(<expr pos:start="11:9" pos:end="11:32"><operator pos:start="11:9" pos:end="11:9">!</operator><operator pos:start="11:10" pos:end="11:10">(</operator><name pos:start="11:11" pos:end="11:14">pte0</name> <operator pos:start="11:16" pos:end="11:16">&amp;</operator> <name pos:start="11:18" pos:end="11:31">HPTE64_V_LARGE</name><operator pos:start="11:32" pos:end="11:32">)</operator></expr>)</condition> <block pos:start="11:35" pos:end="25:5">{<block_content pos:start="13:9" pos:end="23:18">

        <if_stmt pos:start="13:9" pos:end="19:9"><if pos:start="13:9" pos:end="19:9">if <condition pos:start="13:12" pos:end="13:34">(<expr pos:start="13:13" pos:end="13:33"><name pos:start="13:13" pos:end="13:27"><name pos:start="13:13" pos:end="13:15">sps</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:27">page_shift</name></name> <operator pos:start="13:29" pos:end="13:30">!=</operator> <literal type="number" pos:start="13:32" pos:end="13:33">12</literal></expr>)</condition> <block pos:start="13:36" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:21">

            <comment type="block" pos:start="15:13" pos:end="15:49">/* 4kiB page in a non 4kiB segment */</comment>

            <return pos:start="17:13" pos:end="17:21">return <expr pos:start="17:20" pos:end="17:20"><literal type="number" pos:start="17:20" pos:end="17:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="21:9" pos:end="21:30">/* Normal 4kiB page */</comment>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><literal type="number" pos:start="23:16" pos:end="23:17">12</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="29:5" pos:end="65:5">for <control pos:start="29:9" pos:end="29:47">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:42"><expr pos:start="29:17" pos:end="29:41"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:41">PPC_PAGE_SIZES_MAX_SZ</name></expr>;</condition> <incr pos:start="29:44" pos:end="29:46"><expr pos:start="29:44" pos:end="29:46"><name pos:start="29:44" pos:end="29:44">i</name><operator pos:start="29:45" pos:end="29:46">++</operator></expr></incr>)</control> <block pos:start="29:49" pos:end="65:5">{<block_content pos:start="31:9" pos:end="63:9">

        <decl_stmt pos:start="31:9" pos:end="31:58"><decl pos:start="31:9" pos:end="31:57"><type pos:start="31:9" pos:end="31:40"><specifier pos:start="31:9" pos:end="31:13">const</specifier> <name pos:start="31:15" pos:end="31:38"><name pos:start="31:15" pos:end="31:20">struct</name> <name pos:start="31:22" pos:end="31:38">ppc_one_page_size</name></name> <modifier pos:start="31:40" pos:end="31:40">*</modifier></type><name pos:start="31:41" pos:end="31:42">ps</name> <init pos:start="31:44" pos:end="31:57">= <expr pos:start="31:46" pos:end="31:57"><operator pos:start="31:46" pos:end="31:46">&amp;</operator><name pos:start="31:47" pos:end="31:57"><name pos:start="31:47" pos:end="31:49">sps</name><operator pos:start="31:50" pos:end="31:51">-&gt;</operator><name pos:start="31:52" pos:end="31:54">enc</name><index pos:start="31:55" pos:end="31:57">[<expr pos:start="31:56" pos:end="31:56"><name pos:start="31:56" pos:end="31:56">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:22"><decl pos:start="33:9" pos:end="33:21"><type pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:16">uint64_t</name></type> <name pos:start="33:18" pos:end="33:21">mask</name></decl>;</decl_stmt>



        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:28">(<expr pos:start="37:13" pos:end="37:27"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:27"><name pos:start="37:14" pos:end="37:15">ps</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:27">page_shift</name></name></expr>)</condition> <block pos:start="37:30" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:18">

            <break pos:start="39:13" pos:end="39:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:33">(<expr pos:start="45:13" pos:end="45:32"><name pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:14">ps</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:26">page_shift</name></name> <operator pos:start="45:28" pos:end="45:29">==</operator> <literal type="number" pos:start="45:31" pos:end="45:32">12</literal></expr>)</condition> <block pos:start="45:35" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:21">

            <comment type="block" pos:start="47:13" pos:end="47:59">/* L bit is set so this can't be a 4kiB page */</comment>

            <continue pos:start="49:13" pos:end="49:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:61"><expr pos:start="55:9" pos:end="55:60"><name pos:start="55:9" pos:end="55:12">mask</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <operator pos:start="55:16" pos:end="55:16">(</operator><operator pos:start="55:17" pos:end="55:17">(</operator><literal type="number" pos:start="55:18" pos:end="55:21">1ULL</literal> <operator pos:start="55:23" pos:end="55:24">&lt;&lt;</operator> <name pos:start="55:26" pos:end="55:39"><name pos:start="55:26" pos:end="55:27">ps</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:39">page_shift</name></name><operator pos:start="55:40" pos:end="55:40">)</operator> <operator pos:start="55:42" pos:end="55:42">-</operator> <literal type="number" pos:start="55:44" pos:end="55:44">1</literal><operator pos:start="55:45" pos:end="55:45">)</operator> <operator pos:start="55:47" pos:end="55:47">&amp;</operator> <name pos:start="55:49" pos:end="55:60">HPTE64_R_RPN</name></expr>;</expr_stmt>



        <if_stmt pos:start="59:9" pos:end="63:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:65">(<expr pos:start="59:13" pos:end="59:64"><operator pos:start="59:13" pos:end="59:13">(</operator><name pos:start="59:14" pos:end="59:17">pte1</name> <operator pos:start="59:19" pos:end="59:19">&amp;</operator> <name pos:start="59:21" pos:end="59:24">mask</name><operator pos:start="59:25" pos:end="59:25">)</operator> <operator pos:start="59:27" pos:end="59:28">==</operator> <operator pos:start="59:30" pos:end="59:30">(</operator><name pos:start="59:31" pos:end="59:41"><name pos:start="59:31" pos:end="59:32">ps</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:41">pte_enc</name></name> <operator pos:start="59:43" pos:end="59:44">&lt;&lt;</operator> <name pos:start="59:46" pos:end="59:63">HPTE64_R_RPN_SHIFT</name><operator pos:start="59:64" pos:end="59:64">)</operator></expr>)</condition> <block pos:start="59:67" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:34">

            <return pos:start="61:13" pos:end="61:34">return <expr pos:start="61:20" pos:end="61:33"><name pos:start="61:20" pos:end="61:33"><name pos:start="61:20" pos:end="61:21">ps</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:33">page_shift</name></name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>;</return> <comment type="block" pos:start="69:15" pos:end="69:42">/* Bad page size encoding */</comment>

</block_content>}</block></function>
</unit>
