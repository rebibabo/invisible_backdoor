<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13617.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">page_check_range</name><parameter_list pos:start="1:21" pos:end="1:69">(<parameter pos:start="1:22" pos:end="1:39"><decl pos:start="1:22" pos:end="1:39"><type pos:start="1:22" pos:end="1:39"><name pos:start="1:22" pos:end="1:33">target_ulong</name></type> <name pos:start="1:35" pos:end="1:39">start</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:57"><decl pos:start="1:42" pos:end="1:57"><type pos:start="1:42" pos:end="1:57"><name pos:start="1:42" pos:end="1:53">target_ulong</name></type> <name pos:start="1:55" pos:end="1:57">len</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:68"><decl pos:start="1:60" pos:end="1:68"><type pos:start="1:60" pos:end="1:68"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:68">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:13">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">PageDesc</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:20">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="20:0"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:21">addr</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="17:39">/* This function should never be called with addresses outside the

       guest address space.  If this assert fires, it probably indicates

       a missing call to h2g_valid.  */</comment>

<cpp:if pos:start="19:1" pos:end="19:44">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:19">TARGET_ABI_BITS</name> <operator pos:start="19:21" pos:end="19:21">&gt;</operator> <name pos:start="19:23" pos:end="19:44">L1_MAP_ADDR_SPACE_BITS</name></expr></cpp:if>

    <expr_stmt pos:start="21:5" pos:end="24:0"><expr pos:start="21:5" pos:end="21:60"><call pos:start="21:5" pos:end="21:60"><name pos:start="21:5" pos:end="21:10">assert</name><argument_list pos:start="21:11" pos:end="21:60">(<argument pos:start="21:12" pos:end="21:59"><expr pos:start="21:12" pos:end="21:59"><name pos:start="21:12" pos:end="21:16">start</name> <operator pos:start="21:18" pos:end="21:18">&lt;</operator> <operator pos:start="21:20" pos:end="21:20">(</operator><operator pos:start="21:21" pos:end="21:21">(</operator><name pos:start="21:22" pos:end="21:30">abi_ulong</name><operator pos:start="21:31" pos:end="21:31">)</operator><literal type="number" pos:start="21:32" pos:end="21:32">1</literal> <operator pos:start="21:34" pos:end="21:35">&lt;&lt;</operator> <name pos:start="21:37" pos:end="21:58">L1_MAP_ADDR_SPACE_BITS</name><operator pos:start="21:59" pos:end="21:59">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:17">(<expr pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:11">len</name> <operator pos:start="27:13" pos:end="27:14">==</operator> <literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>)</condition> <block pos:start="27:19" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:17">

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:32">(<expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:13">start</name> <operator pos:start="33:15" pos:end="33:15">+</operator> <name pos:start="33:17" pos:end="33:19">len</name> <operator pos:start="33:21" pos:end="33:21">-</operator> <literal type="number" pos:start="33:23" pos:end="33:23">1</literal> <operator pos:start="33:25" pos:end="33:25">&lt;</operator> <name pos:start="33:27" pos:end="33:31">start</name></expr>)</condition> <block pos:start="33:34" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:18">

        <comment type="block" pos:start="35:9" pos:end="35:36">/* We've wrapped around.  */</comment>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:55">/* must do before we loose bits in the next step */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:41"><expr pos:start="45:5" pos:end="45:40"><name pos:start="45:5" pos:end="45:7">end</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:40"><name pos:start="45:11" pos:end="45:27">TARGET_PAGE_ALIGN</name><argument_list pos:start="45:28" pos:end="45:40">(<argument pos:start="45:29" pos:end="45:39"><expr pos:start="45:29" pos:end="45:39"><name pos:start="45:29" pos:end="45:33">start</name> <operator pos:start="45:35" pos:end="45:35">+</operator> <name pos:start="45:37" pos:end="45:39">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:37"><expr pos:start="47:5" pos:end="47:36"><name pos:start="47:5" pos:end="47:9">start</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <name pos:start="47:13" pos:end="47:17">start</name> <operator pos:start="47:19" pos:end="47:19">&amp;</operator> <name pos:start="47:21" pos:end="47:36">TARGET_PAGE_MASK</name></expr>;</expr_stmt>



    <for pos:start="51:5" pos:end="105:5">for <control pos:start="51:9" pos:end="55:59">(<init pos:start="51:10" pos:end="51:41"><expr pos:start="51:10" pos:end="51:21"><name pos:start="51:10" pos:end="51:13">addr</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <name pos:start="51:17" pos:end="51:21">start</name></expr><operator pos:start="51:22" pos:end="51:22">,</operator> <expr pos:start="51:24" pos:end="51:40"><name pos:start="51:24" pos:end="51:26">len</name> <operator pos:start="51:28" pos:end="51:28">=</operator> <name pos:start="51:30" pos:end="51:32">end</name> <operator pos:start="51:34" pos:end="51:34">-</operator> <name pos:start="51:36" pos:end="51:40">start</name></expr>;</init>

         <condition pos:start="53:10" pos:end="53:18"><expr pos:start="53:10" pos:end="53:17"><name pos:start="53:10" pos:end="53:12">len</name> <operator pos:start="53:14" pos:end="53:15">!=</operator> <literal type="number" pos:start="53:17" pos:end="53:17">0</literal></expr>;</condition>

         <incr pos:start="55:10" pos:end="55:58"><expr pos:start="55:10" pos:end="55:32"><name pos:start="55:10" pos:end="55:12">len</name> <operator pos:start="55:14" pos:end="55:15">-=</operator> <name pos:start="55:17" pos:end="55:32">TARGET_PAGE_SIZE</name></expr><operator pos:start="55:33" pos:end="55:33">,</operator> <expr pos:start="55:35" pos:end="55:58"><name pos:start="55:35" pos:end="55:38">addr</name> <operator pos:start="55:40" pos:end="55:41">+=</operator> <name pos:start="55:43" pos:end="55:58">TARGET_PAGE_SIZE</name></expr></incr>)</control> <block pos:start="55:61" pos:end="105:5">{<block_content pos:start="57:9" pos:end="103:9">

        <expr_stmt pos:start="57:9" pos:end="57:48"><expr pos:start="57:9" pos:end="57:47"><name pos:start="57:9" pos:end="57:9">p</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <call pos:start="57:13" pos:end="57:47"><name pos:start="57:13" pos:end="57:21">page_find</name><argument_list pos:start="57:22" pos:end="57:47">(<argument pos:start="57:23" pos:end="57:46"><expr pos:start="57:23" pos:end="57:46"><name pos:start="57:23" pos:end="57:26">addr</name> <operator pos:start="57:28" pos:end="57:29">&gt;&gt;</operator> <name pos:start="57:31" pos:end="57:46">TARGET_PAGE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="63:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:15">(<expr pos:start="59:13" pos:end="59:14"><operator pos:start="59:13" pos:end="59:13">!</operator><name pos:start="59:14" pos:end="59:14">p</name></expr>)</condition> <block pos:start="59:17" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:22">

            <return pos:start="61:13" pos:end="61:22">return <expr pos:start="61:20" pos:end="61:21"><operator pos:start="61:20" pos:end="61:20">-</operator><literal type="number" pos:start="61:21" pos:end="61:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="69:9"><if pos:start="65:9" pos:end="69:9">if <condition pos:start="65:12" pos:end="65:37">(<expr pos:start="65:13" pos:end="65:36"><operator pos:start="65:13" pos:end="65:13">!</operator><operator pos:start="65:14" pos:end="65:14">(</operator><name pos:start="65:15" pos:end="65:22"><name pos:start="65:15" pos:end="65:15">p</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:22">flags</name></name> <operator pos:start="65:24" pos:end="65:24">&amp;</operator> <name pos:start="65:26" pos:end="65:35">PAGE_VALID</name><operator pos:start="65:36" pos:end="65:36">)</operator></expr>)</condition> <block pos:start="65:39" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:22">

            <return pos:start="67:13" pos:end="67:22">return <expr pos:start="67:20" pos:end="67:21"><operator pos:start="67:20" pos:end="67:20">-</operator><literal type="number" pos:start="67:21" pos:end="67:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="73:9" pos:end="77:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:59">(<expr pos:start="73:13" pos:end="73:58"><operator pos:start="73:13" pos:end="73:13">(</operator><name pos:start="73:14" pos:end="73:18">flags</name> <operator pos:start="73:20" pos:end="73:20">&amp;</operator> <name pos:start="73:22" pos:end="73:30">PAGE_READ</name><operator pos:start="73:31" pos:end="73:31">)</operator> <operator pos:start="73:33" pos:end="73:34">&amp;&amp;</operator> <operator pos:start="73:36" pos:end="73:36">!</operator><operator pos:start="73:37" pos:end="73:37">(</operator><name pos:start="73:38" pos:end="73:45"><name pos:start="73:38" pos:end="73:38">p</name><operator pos:start="73:39" pos:end="73:40">-&gt;</operator><name pos:start="73:41" pos:end="73:45">flags</name></name> <operator pos:start="73:47" pos:end="73:47">&amp;</operator> <name pos:start="73:49" pos:end="73:57">PAGE_READ</name><operator pos:start="73:58" pos:end="73:58">)</operator></expr>)</condition> <block pos:start="73:61" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:22">

            <return pos:start="75:13" pos:end="75:22">return <expr pos:start="75:20" pos:end="75:21"><operator pos:start="75:20" pos:end="75:20">-</operator><literal type="number" pos:start="75:21" pos:end="75:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="79:9" pos:end="103:9"><if pos:start="79:9" pos:end="103:9">if <condition pos:start="79:12" pos:end="79:31">(<expr pos:start="79:13" pos:end="79:30"><name pos:start="79:13" pos:end="79:17">flags</name> <operator pos:start="79:19" pos:end="79:19">&amp;</operator> <name pos:start="79:21" pos:end="79:30">PAGE_WRITE</name></expr>)</condition> <block pos:start="79:33" pos:end="103:9">{<block_content pos:start="81:13" pos:end="101:21">

            <if_stmt pos:start="81:13" pos:end="85:13"><if pos:start="81:13" pos:end="85:13">if <condition pos:start="81:16" pos:end="81:45">(<expr pos:start="81:17" pos:end="81:44"><operator pos:start="81:17" pos:end="81:17">!</operator><operator pos:start="81:18" pos:end="81:18">(</operator><name pos:start="81:19" pos:end="81:26"><name pos:start="81:19" pos:end="81:19">p</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:26">flags</name></name> <operator pos:start="81:28" pos:end="81:28">&amp;</operator> <name pos:start="81:30" pos:end="81:43">PAGE_WRITE_ORG</name><operator pos:start="81:44" pos:end="81:44">)</operator></expr>)</condition> <block pos:start="81:47" pos:end="85:13">{<block_content pos:start="83:17" pos:end="83:26">

                <return pos:start="83:17" pos:end="83:26">return <expr pos:start="83:24" pos:end="83:25"><operator pos:start="83:24" pos:end="83:24">-</operator><literal type="number" pos:start="83:25" pos:end="83:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="87:13" pos:end="89:42">/* unprotect the page if it was put read-only because it

               contains translated code */</comment>

            <if_stmt pos:start="91:13" pos:end="99:13"><if pos:start="91:13" pos:end="99:13">if <condition pos:start="91:16" pos:end="91:41">(<expr pos:start="91:17" pos:end="91:40"><operator pos:start="91:17" pos:end="91:17">!</operator><operator pos:start="91:18" pos:end="91:18">(</operator><name pos:start="91:19" pos:end="91:26"><name pos:start="91:19" pos:end="91:19">p</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:26">flags</name></name> <operator pos:start="91:28" pos:end="91:28">&amp;</operator> <name pos:start="91:30" pos:end="91:39">PAGE_WRITE</name><operator pos:start="91:40" pos:end="91:40">)</operator></expr>)</condition> <block pos:start="91:43" pos:end="99:13">{<block_content pos:start="93:17" pos:end="97:17">

                <if_stmt pos:start="93:17" pos:end="97:17"><if pos:start="93:17" pos:end="97:17">if <condition pos:start="93:20" pos:end="93:51">(<expr pos:start="93:21" pos:end="93:50"><operator pos:start="93:21" pos:end="93:21">!</operator><call pos:start="93:22" pos:end="93:50"><name pos:start="93:22" pos:end="93:35">page_unprotect</name><argument_list pos:start="93:36" pos:end="93:50">(<argument pos:start="93:37" pos:end="93:40"><expr pos:start="93:37" pos:end="93:40"><name pos:start="93:37" pos:end="93:40">addr</name></expr></argument>, <argument pos:start="93:43" pos:end="93:43"><expr pos:start="93:43" pos:end="93:43"><literal type="number" pos:start="93:43" pos:end="93:43">0</literal></expr></argument>, <argument pos:start="93:46" pos:end="93:49"><expr pos:start="93:46" pos:end="93:49"><name pos:start="93:46" pos:end="93:49">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:53" pos:end="97:17">{<block_content pos:start="95:21" pos:end="95:30">

                    <return pos:start="95:21" pos:end="95:30">return <expr pos:start="95:28" pos:end="95:29"><operator pos:start="95:28" pos:end="95:28">-</operator><literal type="number" pos:start="95:29" pos:end="95:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <return pos:start="101:13" pos:end="101:21">return <expr pos:start="101:20" pos:end="101:20"><literal type="number" pos:start="101:20" pos:end="101:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="107:5" pos:end="107:13">return <expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
