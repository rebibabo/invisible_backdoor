<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9985.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">svq1_encode_frame</name><parameter_list pos:start="1:29" pos:end="3:29">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:70"><decl pos:start="1:53" pos:end="1:70"><type pos:start="1:53" pos:end="1:70"><name pos:start="1:53" pos:end="1:60">unsigned</name> <name pos:start="1:62" pos:end="1:65">char</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">buf</name></decl></parameter>, 

    <parameter pos:start="3:5" pos:end="3:16"><decl pos:start="3:5" pos:end="3:16"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:16">buf_size</name></decl></parameter>, <parameter pos:start="3:19" pos:end="3:28"><decl pos:start="3:19" pos:end="3:28"><type pos:start="3:19" pos:end="3:28"><name pos:start="3:19" pos:end="3:22">void</name> <modifier pos:start="3:24" pos:end="3:24">*</modifier></type><name pos:start="3:25" pos:end="3:28">data</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:40">

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:15">SVQ1Context</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier> <specifier pos:start="7:19" pos:end="7:23">const</specifier></type> <name pos:start="7:25" pos:end="7:25">s</name> <init pos:start="7:27" pos:end="7:44">= <expr pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:33">avctx</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:17">pict</name> <init pos:start="9:19" pos:end="9:24">= <expr pos:start="9:21" pos:end="9:24"><name pos:start="9:21" pos:end="9:24">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:11">AVFrame</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier> <specifier pos:start="11:15" pos:end="11:19">const</specifier></type> <name pos:start="11:21" pos:end="11:21">p</name><init pos:start="11:22" pos:end="11:44">= <expr pos:start="11:24" pos:end="11:44"><operator pos:start="11:24" pos:end="11:24">(</operator><name pos:start="11:25" pos:end="11:31">AVFrame</name><operator pos:start="11:32" pos:end="11:32">*</operator><operator pos:start="11:33" pos:end="11:33">)</operator><operator pos:start="11:34" pos:end="11:34">&amp;</operator><name pos:start="11:35" pos:end="11:44"><name pos:start="11:35" pos:end="11:35">s</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:44">picture</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">AVFrame</name></type> <name pos:start="13:13" pos:end="13:16">temp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if<condition pos:start="19:7" pos:end="19:41">(<expr pos:start="19:8" pos:end="19:40"><name pos:start="19:8" pos:end="19:21"><name pos:start="19:8" pos:end="19:12">avctx</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:21">pix_fmt</name></name> <operator pos:start="19:23" pos:end="19:24">!=</operator> <name pos:start="19:26" pos:end="19:40">PIX_FMT_YUV410P</name></expr>)</condition><block pos:start="19:42" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:66"><expr pos:start="21:9" pos:end="21:65"><call pos:start="21:9" pos:end="21:65"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:65">(<argument pos:start="21:16" pos:end="21:20"><expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">avctx</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:37" pos:end="21:64"><expr pos:start="21:37" pos:end="21:64"><literal type="string" pos:start="21:37" pos:end="21:64">"unsupported pixel format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if<condition pos:start="29:7" pos:end="29:35">(<expr pos:start="29:8" pos:end="29:34"><operator pos:start="29:8" pos:end="29:8">!</operator><name pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:26">current_picture</name><operator pos:start="29:27" pos:end="29:27">.</operator><name pos:start="29:28" pos:end="29:31">data</name><index pos:start="29:32" pos:end="29:34">[<expr pos:start="29:33" pos:end="29:33"><literal type="number" pos:start="29:33" pos:end="29:33">0</literal></expr>]</index></name></expr>)</condition><block pos:start="29:36" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:51">

        <expr_stmt pos:start="31:9" pos:end="31:54"><expr pos:start="31:9" pos:end="31:53"><call pos:start="31:9" pos:end="31:53"><name pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:13">avctx</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:25">get_buffer</name></name><argument_list pos:start="31:26" pos:end="31:53">(<argument pos:start="31:27" pos:end="31:31"><expr pos:start="31:27" pos:end="31:31"><name pos:start="31:27" pos:end="31:31">avctx</name></expr></argument>, <argument pos:start="31:34" pos:end="31:52"><expr pos:start="31:34" pos:end="31:52"><operator pos:start="31:34" pos:end="31:34">&amp;</operator><name pos:start="31:35" pos:end="31:52"><name pos:start="31:35" pos:end="31:35">s</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:52">current_picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:51"><expr pos:start="33:9" pos:end="33:50"><call pos:start="33:9" pos:end="33:50"><name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:13">avctx</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:25">get_buffer</name></name><argument_list pos:start="33:26" pos:end="33:50">(<argument pos:start="33:27" pos:end="33:31"><expr pos:start="33:27" pos:end="33:31"><name pos:start="33:27" pos:end="33:31">avctx</name></expr></argument>, <argument pos:start="33:34" pos:end="33:49"><expr pos:start="33:34" pos:end="33:49"><operator pos:start="33:34" pos:end="33:34">&amp;</operator><name pos:start="33:35" pos:end="33:49"><name pos:start="33:35" pos:end="33:35">s</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:49">last_picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    

    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:8">temp</name><operator pos:start="39:9" pos:end="39:9">=</operator> <name pos:start="39:11" pos:end="39:28"><name pos:start="39:11" pos:end="39:11">s</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:28">current_picture</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:40"><expr pos:start="41:5" pos:end="41:39"><name pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:22">current_picture</name></name><operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:39"><name pos:start="41:25" pos:end="41:25">s</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:39">last_picture</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:26"><expr pos:start="43:5" pos:end="43:25"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:19">last_picture</name></name><operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:25">temp</name></expr>;</expr_stmt>

    

    <expr_stmt pos:start="47:5" pos:end="47:41"><expr pos:start="47:5" pos:end="47:40"><call pos:start="47:5" pos:end="47:40"><name pos:start="47:5" pos:end="47:17">init_put_bits</name><argument_list pos:start="47:18" pos:end="47:40">(<argument pos:start="47:19" pos:end="47:24"><expr pos:start="47:19" pos:end="47:24"><operator pos:start="47:19" pos:end="47:19">&amp;</operator><name pos:start="47:20" pos:end="47:24"><name pos:start="47:20" pos:end="47:20">s</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:24">pb</name></name></expr></argument>, <argument pos:start="47:27" pos:end="47:29"><expr pos:start="47:27" pos:end="47:29"><name pos:start="47:27" pos:end="47:29">buf</name></expr></argument>, <argument pos:start="47:32" pos:end="47:39"><expr pos:start="47:32" pos:end="47:39"><name pos:start="47:32" pos:end="47:39">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:15"><expr pos:start="51:5" pos:end="51:14"><operator pos:start="51:5" pos:end="51:5">*</operator><name pos:start="51:6" pos:end="51:6">p</name> <operator pos:start="51:8" pos:end="51:8">=</operator> <operator pos:start="51:10" pos:end="51:10">*</operator><name pos:start="51:11" pos:end="51:14">pict</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:75"><expr pos:start="53:5" pos:end="53:74"><name pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:5">p</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:16">pict_type</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <ternary pos:start="53:20" pos:end="53:74"><condition pos:start="53:20" pos:end="53:58"><expr pos:start="53:20" pos:end="53:56"><name pos:start="53:20" pos:end="53:38"><name pos:start="53:20" pos:end="53:24">avctx</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:38">frame_number</name></name> <operator pos:start="53:40" pos:end="53:40">%</operator> <name pos:start="53:42" pos:end="53:56"><name pos:start="53:42" pos:end="53:46">avctx</name><operator pos:start="53:47" pos:end="53:48">-&gt;</operator><name pos:start="53:49" pos:end="53:56">gop_size</name></name></expr> ?</condition><then pos:start="53:60" pos:end="53:65"> <expr pos:start="53:60" pos:end="53:65"><name pos:start="53:60" pos:end="53:65">P_TYPE</name></expr> </then><else pos:start="53:67" pos:end="53:74">: <expr pos:start="53:69" pos:end="53:74"><name pos:start="53:69" pos:end="53:74">I_TYPE</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:42"><expr pos:start="55:5" pos:end="55:41"><name pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:5">p</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:16">key_frame</name></name> <operator pos:start="55:18" pos:end="55:18">=</operator> <name pos:start="55:20" pos:end="55:31"><name pos:start="55:20" pos:end="55:20">p</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:31">pict_type</name></name> <operator pos:start="55:33" pos:end="55:34">==</operator> <name pos:start="55:36" pos:end="55:41">I_TYPE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:39"><expr pos:start="59:5" pos:end="59:38"><call pos:start="59:5" pos:end="59:38"><name pos:start="59:5" pos:end="59:21">svq1_write_header</name><argument_list pos:start="59:22" pos:end="59:38">(<argument pos:start="59:23" pos:end="59:23"><expr pos:start="59:23" pos:end="59:23"><name pos:start="59:23" pos:end="59:23">s</name></expr></argument>, <argument pos:start="59:26" pos:end="59:37"><expr pos:start="59:26" pos:end="59:37"><name pos:start="59:26" pos:end="59:37"><name pos:start="59:26" pos:end="59:26">p</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:37">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="61:5" pos:end="71:5">for<control pos:start="61:8" pos:end="61:22">(<init pos:start="61:9" pos:end="61:12"><expr pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:9">i</name><operator pos:start="61:10" pos:end="61:10">=</operator><literal type="number" pos:start="61:11" pos:end="61:11">0</literal></expr>;</init> <condition pos:start="61:14" pos:end="61:17"><expr pos:start="61:14" pos:end="61:16"><name pos:start="61:14" pos:end="61:14">i</name><operator pos:start="61:15" pos:end="61:15">&lt;</operator><literal type="number" pos:start="61:16" pos:end="61:16">3</literal></expr>;</condition> <incr pos:start="61:19" pos:end="61:21"><expr pos:start="61:19" pos:end="61:21"><name pos:start="61:19" pos:end="61:19">i</name><operator pos:start="61:20" pos:end="61:21">++</operator></expr></incr>)</control><block pos:start="61:23" pos:end="71:5">{<block_content pos:start="63:9" pos:end="69:68">

        <expr_stmt pos:start="63:9" pos:end="69:68"><expr pos:start="63:9" pos:end="69:67"><call pos:start="63:9" pos:end="69:67"><name pos:start="63:9" pos:end="63:25">svq1_encode_plane</name><argument_list pos:start="63:26" pos:end="69:67">(<argument pos:start="63:27" pos:end="63:27"><expr pos:start="63:27" pos:end="63:27"><name pos:start="63:27" pos:end="63:27">s</name></expr></argument>, <argument pos:start="63:30" pos:end="63:30"><expr pos:start="63:30" pos:end="63:30"><name pos:start="63:30" pos:end="63:30">i</name></expr></argument>,

            <argument pos:start="65:13" pos:end="65:30"><expr pos:start="65:13" pos:end="65:30"><name pos:start="65:13" pos:end="65:30"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:22">picture</name><operator pos:start="65:23" pos:end="65:23">.</operator><name pos:start="65:24" pos:end="65:27">data</name><index pos:start="65:28" pos:end="65:30">[<expr pos:start="65:29" pos:end="65:29"><name pos:start="65:29" pos:end="65:29">i</name></expr>]</index></name></expr></argument>, <argument pos:start="65:33" pos:end="65:55"><expr pos:start="65:33" pos:end="65:55"><name pos:start="65:33" pos:end="65:55"><name pos:start="65:33" pos:end="65:33">s</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:47">last_picture</name><operator pos:start="65:48" pos:end="65:48">.</operator><name pos:start="65:49" pos:end="65:52">data</name><index pos:start="65:53" pos:end="65:55">[<expr pos:start="65:54" pos:end="65:54"><name pos:start="65:54" pos:end="65:54">i</name></expr>]</index></name></expr></argument>, <argument pos:start="65:58" pos:end="65:83"><expr pos:start="65:58" pos:end="65:83"><name pos:start="65:58" pos:end="65:83"><name pos:start="65:58" pos:end="65:58">s</name><operator pos:start="65:59" pos:end="65:60">-&gt;</operator><name pos:start="65:61" pos:end="65:75">current_picture</name><operator pos:start="65:76" pos:end="65:76">.</operator><name pos:start="65:77" pos:end="65:80">data</name><index pos:start="65:81" pos:end="65:83">[<expr pos:start="65:82" pos:end="65:82"><name pos:start="65:82" pos:end="65:82">i</name></expr>]</index></name></expr></argument>,

            <argument pos:start="67:13" pos:end="67:36"><expr pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:26"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:26">frame_width</name></name> <operator pos:start="67:28" pos:end="67:28">/</operator> <operator pos:start="67:30" pos:end="67:30">(</operator><ternary pos:start="67:31" pos:end="67:35"><condition pos:start="67:31" pos:end="67:32"><expr pos:start="67:31" pos:end="67:31"><name pos:start="67:31" pos:end="67:31">i</name></expr>?</condition><then pos:start="67:33" pos:end="67:33"><expr pos:start="67:33" pos:end="67:33"><literal type="number" pos:start="67:33" pos:end="67:33">4</literal></expr></then><else pos:start="67:34" pos:end="67:35">:<expr pos:start="67:35" pos:end="67:35"><literal type="number" pos:start="67:35" pos:end="67:35">1</literal></expr></else></ternary><operator pos:start="67:36" pos:end="67:36">)</operator></expr></argument>, <argument pos:start="67:39" pos:end="67:63"><expr pos:start="67:39" pos:end="67:63"><name pos:start="67:39" pos:end="67:53"><name pos:start="67:39" pos:end="67:39">s</name><operator pos:start="67:40" pos:end="67:41">-&gt;</operator><name pos:start="67:42" pos:end="67:53">frame_height</name></name> <operator pos:start="67:55" pos:end="67:55">/</operator> <operator pos:start="67:57" pos:end="67:57">(</operator><ternary pos:start="67:58" pos:end="67:62"><condition pos:start="67:58" pos:end="67:59"><expr pos:start="67:58" pos:end="67:58"><name pos:start="67:58" pos:end="67:58">i</name></expr>?</condition><then pos:start="67:60" pos:end="67:60"><expr pos:start="67:60" pos:end="67:60"><literal type="number" pos:start="67:60" pos:end="67:60">4</literal></expr></then><else pos:start="67:61" pos:end="67:62">:<expr pos:start="67:62" pos:end="67:62"><literal type="number" pos:start="67:62" pos:end="67:62">1</literal></expr></else></ternary><operator pos:start="67:63" pos:end="67:63">)</operator></expr></argument>, 

            <argument pos:start="69:13" pos:end="69:34"><expr pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:22">picture</name><operator pos:start="69:23" pos:end="69:23">.</operator><name pos:start="69:24" pos:end="69:31">linesize</name><index pos:start="69:32" pos:end="69:34">[<expr pos:start="69:33" pos:end="69:33"><name pos:start="69:33" pos:end="69:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="69:37" pos:end="69:66"><expr pos:start="69:37" pos:end="69:66"><name pos:start="69:37" pos:end="69:66"><name pos:start="69:37" pos:end="69:37">s</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:54">current_picture</name><operator pos:start="69:55" pos:end="69:55">.</operator><name pos:start="69:56" pos:end="69:63">linesize</name><index pos:start="69:64" pos:end="69:66">[<expr pos:start="69:65" pos:end="69:65"><name pos:start="69:65" pos:end="69:65">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



<comment type="line" pos:start="75:1" pos:end="75:29">//    align_put_bits(&amp;s-&gt;pb);</comment>

    <while pos:start="77:5" pos:end="79:31">while<condition pos:start="77:10" pos:end="77:38">(<expr pos:start="77:11" pos:end="77:37"><call pos:start="77:11" pos:end="77:32"><name pos:start="77:11" pos:end="77:24">put_bits_count</name><argument_list pos:start="77:25" pos:end="77:32">(<argument pos:start="77:26" pos:end="77:31"><expr pos:start="77:26" pos:end="77:31"><operator pos:start="77:26" pos:end="77:26">&amp;</operator><name pos:start="77:27" pos:end="77:31"><name pos:start="77:27" pos:end="77:27">s</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:31">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="77:34" pos:end="77:34">&amp;</operator> <literal type="number" pos:start="77:36" pos:end="77:37">31</literal></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:31"><block_content pos:start="79:9" pos:end="79:31">

        <expr_stmt pos:start="79:9" pos:end="79:31"><expr pos:start="79:9" pos:end="79:30"><call pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:16">put_bits</name><argument_list pos:start="79:17" pos:end="79:30">(<argument pos:start="79:18" pos:end="79:23"><expr pos:start="79:18" pos:end="79:23"><operator pos:start="79:18" pos:end="79:18">&amp;</operator><name pos:start="79:19" pos:end="79:23"><name pos:start="79:19" pos:end="79:19">s</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:23">pb</name></name></expr></argument>, <argument pos:start="79:26" pos:end="79:26"><expr pos:start="79:26" pos:end="79:26"><literal type="number" pos:start="79:26" pos:end="79:26">1</literal></expr></argument>, <argument pos:start="79:29" pos:end="79:29"><expr pos:start="79:29" pos:end="79:29"><literal type="number" pos:start="79:29" pos:end="79:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

        

    <expr_stmt pos:start="83:5" pos:end="83:27"><expr pos:start="83:5" pos:end="83:26"><call pos:start="83:5" pos:end="83:26"><name pos:start="83:5" pos:end="83:18">flush_put_bits</name><argument_list pos:start="83:19" pos:end="83:26">(<argument pos:start="83:20" pos:end="83:25"><expr pos:start="83:20" pos:end="83:25"><operator pos:start="83:20" pos:end="83:20">&amp;</operator><name pos:start="83:21" pos:end="83:25"><name pos:start="83:21" pos:end="83:21">s</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="87:5" pos:end="87:40">return <expr pos:start="87:12" pos:end="87:39"><operator pos:start="87:12" pos:end="87:12">(</operator><call pos:start="87:13" pos:end="87:34"><name pos:start="87:13" pos:end="87:26">put_bits_count</name><argument_list pos:start="87:27" pos:end="87:34">(<argument pos:start="87:28" pos:end="87:33"><expr pos:start="87:28" pos:end="87:33"><operator pos:start="87:28" pos:end="87:28">&amp;</operator><name pos:start="87:29" pos:end="87:33"><name pos:start="87:29" pos:end="87:29">s</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:33">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="87:36" pos:end="87:36">/</operator> <literal type="number" pos:start="87:38" pos:end="87:38">8</literal><operator pos:start="87:39" pos:end="87:39">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
