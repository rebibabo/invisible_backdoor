<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16679.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">tta_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="181:1">{<block_content pos:start="5:5" pos:end="179:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">TTAContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">c</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">s</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:19">channels</name></decl>, <decl pos:start="9:22" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:24">bps</name></decl>, <decl pos:start="9:27" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:36">samplerate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:21">framepos</name></decl>, <decl pos:start="11:24" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:24" pos:end="11:35">start_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:23">nb_samples</name></decl>, <decl pos:start="13:26" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:26" pos:end="13:28">crc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><call pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:17">ff_id3v1_read</name><argument_list pos:start="17:18" pos:end="17:20">(<argument pos:start="17:19" pos:end="17:19"><expr pos:start="17:19" pos:end="17:19"><name pos:start="17:19" pos:end="17:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:16">start_offset</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:35"><name pos:start="21:20" pos:end="21:28">avio_tell</name><argument_list pos:start="21:29" pos:end="21:35">(<argument pos:start="21:30" pos:end="21:34"><expr pos:start="21:30" pos:end="21:34"><name pos:start="21:30" pos:end="21:34"><name pos:start="21:30" pos:end="21:30">s</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:57"><expr pos:start="23:5" pos:end="23:56"><call pos:start="23:5" pos:end="23:56"><name pos:start="23:5" pos:end="23:22">ffio_init_checksum</name><argument_list pos:start="23:23" pos:end="23:56">(<argument pos:start="23:24" pos:end="23:28"><expr pos:start="23:24" pos:end="23:28"><name pos:start="23:24" pos:end="23:28"><name pos:start="23:24" pos:end="23:24">s</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:28">pb</name></name></expr></argument>, <argument pos:start="23:31" pos:end="23:43"><expr pos:start="23:31" pos:end="23:43"><name pos:start="23:31" pos:end="23:43">tta_check_crc</name></expr></argument>, <argument pos:start="23:46" pos:end="23:55"><expr pos:start="23:46" pos:end="23:55"><name pos:start="23:46" pos:end="23:55">UINT32_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:35"><if pos:start="25:5" pos:end="27:35">if <condition pos:start="25:8" pos:end="25:44">(<expr pos:start="25:9" pos:end="25:43"><call pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:17">avio_rl32</name><argument_list pos:start="25:18" pos:end="25:24">(<argument pos:start="25:19" pos:end="25:23"><expr pos:start="25:19" pos:end="25:23"><name pos:start="25:19" pos:end="25:23"><name pos:start="25:19" pos:end="25:19">s</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:23">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:26" pos:end="25:27">!=</operator> <call pos:start="25:29" pos:end="25:43"><name pos:start="25:29" pos:end="25:35">AV_RL32</name><argument_list pos:start="25:36" pos:end="25:43">(<argument pos:start="25:37" pos:end="25:42"><expr pos:start="25:37" pos:end="25:42"><literal type="string" pos:start="25:37" pos:end="25:42">"TTA1"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:35"><block_content pos:start="27:9" pos:end="27:35">

        <return pos:start="27:9" pos:end="27:35">return <expr pos:start="27:16" pos:end="27:34"><name pos:start="27:16" pos:end="27:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><call pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:13">avio_skip</name><argument_list pos:start="31:14" pos:end="31:23">(<argument pos:start="31:15" pos:end="31:19"><expr pos:start="31:15" pos:end="31:19"><name pos:start="31:15" pos:end="31:19"><name pos:start="31:15" pos:end="31:15">s</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:19">pb</name></name></expr></argument>, <argument pos:start="31:22" pos:end="31:22"><expr pos:start="31:22" pos:end="31:22"><literal type="number" pos:start="31:22" pos:end="31:22">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="31:26" pos:end="31:40">// FIXME: flags</comment>

    <expr_stmt pos:start="33:5" pos:end="33:32"><expr pos:start="33:5" pos:end="33:31"><name pos:start="33:5" pos:end="33:12">channels</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:31"><name pos:start="33:16" pos:end="33:24">avio_rl16</name><argument_list pos:start="33:25" pos:end="33:31">(<argument pos:start="33:26" pos:end="33:30"><expr pos:start="33:26" pos:end="33:30"><name pos:start="33:26" pos:end="33:30"><name pos:start="33:26" pos:end="33:26">s</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:30">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:7">bps</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:26"><name pos:start="35:11" pos:end="35:19">avio_rl16</name><argument_list pos:start="35:20" pos:end="35:26">(<argument pos:start="35:21" pos:end="35:25"><expr pos:start="35:21" pos:end="35:25"><name pos:start="35:21" pos:end="35:25"><name pos:start="35:21" pos:end="35:21">s</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:34"><expr pos:start="37:5" pos:end="37:33"><name pos:start="37:5" pos:end="37:14">samplerate</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <call pos:start="37:18" pos:end="37:33"><name pos:start="37:18" pos:end="37:26">avio_rl32</name><argument_list pos:start="37:27" pos:end="37:33">(<argument pos:start="37:28" pos:end="37:32"><expr pos:start="37:28" pos:end="37:32"><name pos:start="37:28" pos:end="37:32"><name pos:start="37:28" pos:end="37:28">s</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:32">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if<condition pos:start="39:7" pos:end="39:47">(<expr pos:start="39:8" pos:end="39:46"><name pos:start="39:8" pos:end="39:17">samplerate</name> <operator pos:start="39:19" pos:end="39:20">&lt;=</operator> <literal type="number" pos:start="39:22" pos:end="39:22">0</literal> <operator pos:start="39:24" pos:end="39:25">||</operator> <name pos:start="39:27" pos:end="39:36">samplerate</name> <operator pos:start="39:38" pos:end="39:38">&gt;</operator> <literal type="number" pos:start="39:40" pos:end="39:46">1000000</literal></expr>)</condition><block pos:start="39:48" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:35">

        <expr_stmt pos:start="41:9" pos:end="41:57"><expr pos:start="41:9" pos:end="41:56"><call pos:start="41:9" pos:end="41:56"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:56">(<argument pos:start="41:16" pos:end="41:16"><expr pos:start="41:16" pos:end="41:16"><name pos:start="41:16" pos:end="41:16">s</name></expr></argument>, <argument pos:start="41:19" pos:end="41:30"><expr pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:33" pos:end="41:55"><expr pos:start="41:33" pos:end="41:55"><literal type="string" pos:start="41:33" pos:end="41:55">"nonsense samplerate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:35">return <expr pos:start="43:16" pos:end="43:34"><name pos:start="43:16" pos:end="43:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:34"><expr pos:start="49:5" pos:end="49:33"><name pos:start="49:5" pos:end="49:14">nb_samples</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <call pos:start="49:18" pos:end="49:33"><name pos:start="49:18" pos:end="49:26">avio_rl32</name><argument_list pos:start="49:27" pos:end="49:33">(<argument pos:start="49:28" pos:end="49:32"><expr pos:start="49:28" pos:end="49:32"><name pos:start="49:28" pos:end="49:32"><name pos:start="49:28" pos:end="49:28">s</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:32">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:20">(<expr pos:start="51:9" pos:end="51:19"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:19">nb_samples</name></expr>)</condition> <block pos:start="51:22" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:35">

        <expr_stmt pos:start="53:9" pos:end="53:63"><expr pos:start="53:9" pos:end="53:62"><call pos:start="53:9" pos:end="53:62"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="53:62">(<argument pos:start="53:16" pos:end="53:16"><expr pos:start="53:16" pos:end="53:16"><name pos:start="53:16" pos:end="53:16">s</name></expr></argument>, <argument pos:start="53:19" pos:end="53:30"><expr pos:start="53:19" pos:end="53:30"><name pos:start="53:19" pos:end="53:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:33" pos:end="53:61"><expr pos:start="53:33" pos:end="53:61"><literal type="string" pos:start="53:33" pos:end="53:61">"invalid number of samples\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:35">return <expr pos:start="55:16" pos:end="55:34"><name pos:start="55:16" pos:end="55:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:48"><expr pos:start="61:5" pos:end="61:47"><name pos:start="61:5" pos:end="61:7">crc</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <call pos:start="61:11" pos:end="61:34"><name pos:start="61:11" pos:end="61:27">ffio_get_checksum</name><argument_list pos:start="61:28" pos:end="61:34">(<argument pos:start="61:29" pos:end="61:33"><expr pos:start="61:29" pos:end="61:33"><name pos:start="61:29" pos:end="61:33"><name pos:start="61:29" pos:end="61:29">s</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:33">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="61:36" pos:end="61:36">^</operator> <name pos:start="61:38" pos:end="61:47">UINT32_MAX</name></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:32">(<expr pos:start="63:9" pos:end="63:31"><name pos:start="63:9" pos:end="63:11">crc</name> <operator pos:start="63:13" pos:end="63:14">!=</operator> <call pos:start="63:16" pos:end="63:31"><name pos:start="63:16" pos:end="63:24">avio_rl32</name><argument_list pos:start="63:25" pos:end="63:31">(<argument pos:start="63:26" pos:end="63:30"><expr pos:start="63:26" pos:end="63:30"><name pos:start="63:26" pos:end="63:30"><name pos:start="63:26" pos:end="63:26">s</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:30">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="63:34" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:35">

        <expr_stmt pos:start="65:9" pos:end="65:54"><expr pos:start="65:9" pos:end="65:53"><call pos:start="65:9" pos:end="65:53"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="65:53">(<argument pos:start="65:16" pos:end="65:16"><expr pos:start="65:16" pos:end="65:16"><name pos:start="65:16" pos:end="65:16">s</name></expr></argument>, <argument pos:start="65:19" pos:end="65:30"><expr pos:start="65:19" pos:end="65:30"><name pos:start="65:19" pos:end="65:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:33" pos:end="65:52"><expr pos:start="65:33" pos:end="65:52"><literal type="string" pos:start="65:33" pos:end="65:52">"Header CRC error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:35">return <expr pos:start="67:16" pos:end="67:34"><name pos:start="67:16" pos:end="67:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:48"><expr pos:start="73:5" pos:end="73:47"><name pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:5">c</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:17">frame_size</name></name>      <operator pos:start="73:24" pos:end="73:24">=</operator> <name pos:start="73:26" pos:end="73:35">samplerate</name> <operator pos:start="73:37" pos:end="73:37">*</operator> <literal type="number" pos:start="73:39" pos:end="73:41">256</literal> <operator pos:start="73:43" pos:end="73:43">/</operator> <literal type="number" pos:start="73:45" pos:end="73:47">245</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:52"><expr pos:start="75:5" pos:end="75:51"><name pos:start="75:5" pos:end="75:22"><name pos:start="75:5" pos:end="75:5">c</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:22">last_frame_size</name></name> <operator pos:start="75:24" pos:end="75:24">=</operator> <name pos:start="75:26" pos:end="75:35">nb_samples</name> <operator pos:start="75:37" pos:end="75:37">%</operator> <name pos:start="75:39" pos:end="75:51"><name pos:start="75:39" pos:end="75:39">c</name><operator pos:start="75:40" pos:end="75:41">-&gt;</operator><name pos:start="75:42" pos:end="75:51">frame_size</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="79:43"><if pos:start="77:5" pos:end="79:43">if <condition pos:start="77:8" pos:end="77:28">(<expr pos:start="77:9" pos:end="77:27"><operator pos:start="77:9" pos:end="77:9">!</operator><name pos:start="77:10" pos:end="77:27"><name pos:start="77:10" pos:end="77:10">c</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:27">last_frame_size</name></name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:43"><block_content pos:start="79:9" pos:end="79:43">

        <expr_stmt pos:start="79:9" pos:end="79:43"><expr pos:start="79:9" pos:end="79:42"><name pos:start="79:9" pos:end="79:26"><name pos:start="79:9" pos:end="79:9">c</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:26">last_frame_size</name></name> <operator pos:start="79:28" pos:end="79:28">=</operator> <name pos:start="79:30" pos:end="79:42"><name pos:start="79:30" pos:end="79:30">c</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:42">frame_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:87"><expr pos:start="81:5" pos:end="81:86"><name pos:start="81:5" pos:end="81:18"><name pos:start="81:5" pos:end="81:5">c</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:18">totalframes</name></name> <operator pos:start="81:20" pos:end="81:20">=</operator> <name pos:start="81:22" pos:end="81:31">nb_samples</name> <operator pos:start="81:33" pos:end="81:33">/</operator> <name pos:start="81:35" pos:end="81:47"><name pos:start="81:35" pos:end="81:35">c</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:47">frame_size</name></name> <operator pos:start="81:49" pos:end="81:49">+</operator> <operator pos:start="81:51" pos:end="81:51">(</operator><name pos:start="81:52" pos:end="81:69"><name pos:start="81:52" pos:end="81:52">c</name><operator pos:start="81:53" pos:end="81:54">-&gt;</operator><name pos:start="81:55" pos:end="81:69">last_frame_size</name></name> <operator pos:start="81:71" pos:end="81:71">&lt;</operator> <name pos:start="81:73" pos:end="81:85"><name pos:start="81:73" pos:end="81:73">c</name><operator pos:start="81:74" pos:end="81:75">-&gt;</operator><name pos:start="81:76" pos:end="81:85">frame_size</name></name><operator pos:start="81:86" pos:end="81:86">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:24"><expr pos:start="83:5" pos:end="83:23"><name pos:start="83:5" pos:end="83:19"><name pos:start="83:5" pos:end="83:5">c</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:19">currentframe</name></name> <operator pos:start="83:21" pos:end="83:21">=</operator> <literal type="number" pos:start="83:23" pos:end="83:23">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if<condition pos:start="87:7" pos:end="87:74">(<expr pos:start="87:8" pos:end="87:73"><name pos:start="87:8" pos:end="87:21"><name pos:start="87:8" pos:end="87:8">c</name><operator pos:start="87:9" pos:end="87:10">-&gt;</operator><name pos:start="87:11" pos:end="87:21">totalframes</name></name> <operator pos:start="87:23" pos:end="87:24">&gt;=</operator> <name pos:start="87:26" pos:end="87:33">UINT_MAX</name><operator pos:start="87:34" pos:end="87:34">/</operator><sizeof pos:start="87:35" pos:end="87:50">sizeof<argument_list pos:start="87:41" pos:end="87:50">(<argument pos:start="87:42" pos:end="87:49"><expr pos:start="87:42" pos:end="87:49"><name pos:start="87:42" pos:end="87:49">uint32_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="87:52" pos:end="87:53">||</operator> <name pos:start="87:55" pos:end="87:68"><name pos:start="87:55" pos:end="87:55">c</name><operator pos:start="87:56" pos:end="87:57">-&gt;</operator><name pos:start="87:58" pos:end="87:68">totalframes</name></name> <operator pos:start="87:70" pos:end="87:71">&lt;=</operator> <literal type="number" pos:start="87:73" pos:end="87:73">0</literal></expr>)</condition><block pos:start="87:75" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:35">

        <expr_stmt pos:start="89:9" pos:end="89:76"><expr pos:start="89:9" pos:end="89:75"><call pos:start="89:9" pos:end="89:75"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="89:75">(<argument pos:start="89:16" pos:end="89:16"><expr pos:start="89:16" pos:end="89:16"><name pos:start="89:16" pos:end="89:16">s</name></expr></argument>, <argument pos:start="89:19" pos:end="89:30"><expr pos:start="89:19" pos:end="89:30"><name pos:start="89:19" pos:end="89:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:33" pos:end="89:58"><expr pos:start="89:33" pos:end="89:58"><literal type="string" pos:start="89:33" pos:end="89:58">"totalframes %d invalid\n"</literal></expr></argument>, <argument pos:start="89:61" pos:end="89:74"><expr pos:start="89:61" pos:end="89:74"><name pos:start="89:61" pos:end="89:74"><name pos:start="89:61" pos:end="89:61">c</name><operator pos:start="89:62" pos:end="89:63">-&gt;</operator><name pos:start="89:64" pos:end="89:74">totalframes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="91:9" pos:end="91:35">return <expr pos:start="91:16" pos:end="91:34"><name pos:start="91:16" pos:end="91:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:38"><expr pos:start="97:5" pos:end="97:37"><name pos:start="97:5" pos:end="97:6">st</name> <operator pos:start="97:8" pos:end="97:8">=</operator> <call pos:start="97:10" pos:end="97:37"><name pos:start="97:10" pos:end="97:28">avformat_new_stream</name><argument_list pos:start="97:29" pos:end="97:37">(<argument pos:start="97:30" pos:end="97:30"><expr pos:start="97:30" pos:end="97:30"><name pos:start="97:30" pos:end="97:30">s</name></expr></argument>, <argument pos:start="97:33" pos:end="97:36"><expr pos:start="97:33" pos:end="97:36"><name pos:start="97:33" pos:end="97:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="101:31"><if pos:start="99:5" pos:end="101:31">if <condition pos:start="99:8" pos:end="99:12">(<expr pos:start="99:9" pos:end="99:11"><operator pos:start="99:9" pos:end="99:9">!</operator><name pos:start="99:10" pos:end="99:11">st</name></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:31"><block_content pos:start="101:9" pos:end="101:31">

        <return pos:start="101:9" pos:end="101:31">return <expr pos:start="101:16" pos:end="101:30"><call pos:start="101:16" pos:end="101:30"><name pos:start="101:16" pos:end="101:22">AVERROR</name><argument_list pos:start="101:23" pos:end="101:30">(<argument pos:start="101:24" pos:end="101:29"><expr pos:start="101:24" pos:end="101:29"><name pos:start="101:24" pos:end="101:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:47"><expr pos:start="105:5" pos:end="105:46"><call pos:start="105:5" pos:end="105:46"><name pos:start="105:5" pos:end="105:23">avpriv_set_pts_info</name><argument_list pos:start="105:24" pos:end="105:46">(<argument pos:start="105:25" pos:end="105:26"><expr pos:start="105:25" pos:end="105:26"><name pos:start="105:25" pos:end="105:26">st</name></expr></argument>, <argument pos:start="105:29" pos:end="105:30"><expr pos:start="105:29" pos:end="105:30"><literal type="number" pos:start="105:29" pos:end="105:30">64</literal></expr></argument>, <argument pos:start="105:33" pos:end="105:33"><expr pos:start="105:33" pos:end="105:33"><literal type="number" pos:start="105:33" pos:end="105:33">1</literal></expr></argument>, <argument pos:start="105:36" pos:end="105:45"><expr pos:start="105:36" pos:end="105:45"><name pos:start="105:36" pos:end="105:45">samplerate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:23"><expr pos:start="107:5" pos:end="107:22"><name pos:start="107:5" pos:end="107:18"><name pos:start="107:5" pos:end="107:6">st</name><operator pos:start="107:7" pos:end="107:8">-&gt;</operator><name pos:start="107:9" pos:end="107:18">start_time</name></name> <operator pos:start="107:20" pos:end="107:20">=</operator> <literal type="number" pos:start="107:22" pos:end="107:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:30"><expr pos:start="109:5" pos:end="109:29"><name pos:start="109:5" pos:end="109:16"><name pos:start="109:5" pos:end="109:6">st</name><operator pos:start="109:7" pos:end="109:8">-&gt;</operator><name pos:start="109:9" pos:end="109:16">duration</name></name> <operator pos:start="109:18" pos:end="109:18">=</operator> <name pos:start="109:20" pos:end="109:29">nb_samples</name></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:55"><expr pos:start="113:5" pos:end="113:54"><name pos:start="113:5" pos:end="113:12">framepos</name> <operator pos:start="113:14" pos:end="113:14">=</operator> <call pos:start="113:16" pos:end="113:31"><name pos:start="113:16" pos:end="113:24">avio_tell</name><argument_list pos:start="113:25" pos:end="113:31">(<argument pos:start="113:26" pos:end="113:30"><expr pos:start="113:26" pos:end="113:30"><name pos:start="113:26" pos:end="113:30"><name pos:start="113:26" pos:end="113:26">s</name><operator pos:start="113:27" pos:end="113:28">-&gt;</operator><name pos:start="113:29" pos:end="113:30">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="113:33" pos:end="113:33">+</operator> <literal type="number" pos:start="113:35" pos:end="113:35">4</literal><operator pos:start="113:36" pos:end="113:36">*</operator><name pos:start="113:37" pos:end="113:50"><name pos:start="113:37" pos:end="113:37">c</name><operator pos:start="113:38" pos:end="113:39">-&gt;</operator><name pos:start="113:40" pos:end="113:50">totalframes</name></name> <operator pos:start="113:52" pos:end="113:52">+</operator> <literal type="number" pos:start="113:54" pos:end="113:54">4</literal></expr>;</expr_stmt>



    <if_stmt pos:start="117:5" pos:end="119:31"><if pos:start="117:5" pos:end="119:31">if <condition pos:start="117:8" pos:end="117:71">(<expr pos:start="117:9" pos:end="117:70"><call pos:start="117:9" pos:end="117:70"><name pos:start="117:9" pos:end="117:26">ff_alloc_extradata</name><argument_list pos:start="117:27" pos:end="117:70">(<argument pos:start="117:28" pos:end="117:36"><expr pos:start="117:28" pos:end="117:36"><name pos:start="117:28" pos:end="117:36"><name pos:start="117:28" pos:end="117:29">st</name><operator pos:start="117:30" pos:end="117:31">-&gt;</operator><name pos:start="117:32" pos:end="117:36">codec</name></name></expr></argument>, <argument pos:start="117:39" pos:end="117:69"><expr pos:start="117:39" pos:end="117:69"><call pos:start="117:39" pos:end="117:54"><name pos:start="117:39" pos:end="117:47">avio_tell</name><argument_list pos:start="117:48" pos:end="117:54">(<argument pos:start="117:49" pos:end="117:53"><expr pos:start="117:49" pos:end="117:53"><name pos:start="117:49" pos:end="117:53"><name pos:start="117:49" pos:end="117:49">s</name><operator pos:start="117:50" pos:end="117:51">-&gt;</operator><name pos:start="117:52" pos:end="117:53">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="117:56" pos:end="117:56">-</operator> <name pos:start="117:58" pos:end="117:69">start_offset</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:31"><block_content pos:start="119:9" pos:end="119:31">

        <return pos:start="119:9" pos:end="119:31">return <expr pos:start="119:16" pos:end="119:30"><call pos:start="119:16" pos:end="119:30"><name pos:start="119:16" pos:end="119:22">AVERROR</name><argument_list pos:start="119:23" pos:end="119:30">(<argument pos:start="119:24" pos:end="119:29"><expr pos:start="119:24" pos:end="119:29"><name pos:start="119:24" pos:end="119:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:45"><expr pos:start="123:5" pos:end="123:44"><call pos:start="123:5" pos:end="123:44"><name pos:start="123:5" pos:end="123:13">avio_seek</name><argument_list pos:start="123:14" pos:end="123:44">(<argument pos:start="123:15" pos:end="123:19"><expr pos:start="123:15" pos:end="123:19"><name pos:start="123:15" pos:end="123:19"><name pos:start="123:15" pos:end="123:15">s</name><operator pos:start="123:16" pos:end="123:17">-&gt;</operator><name pos:start="123:18" pos:end="123:19">pb</name></name></expr></argument>, <argument pos:start="123:22" pos:end="123:33"><expr pos:start="123:22" pos:end="123:33"><name pos:start="123:22" pos:end="123:33">start_offset</name></expr></argument>, <argument pos:start="123:36" pos:end="123:43"><expr pos:start="123:36" pos:end="123:43"><name pos:start="123:36" pos:end="123:43">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:70"><expr pos:start="125:5" pos:end="125:69"><call pos:start="125:5" pos:end="125:69"><name pos:start="125:5" pos:end="125:13">avio_read</name><argument_list pos:start="125:14" pos:end="125:69">(<argument pos:start="125:15" pos:end="125:19"><expr pos:start="125:15" pos:end="125:19"><name pos:start="125:15" pos:end="125:19"><name pos:start="125:15" pos:end="125:15">s</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:19">pb</name></name></expr></argument>, <argument pos:start="125:22" pos:end="125:41"><expr pos:start="125:22" pos:end="125:41"><name pos:start="125:22" pos:end="125:41"><name pos:start="125:22" pos:end="125:23">st</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:30">codec</name><operator pos:start="125:31" pos:end="125:32">-&gt;</operator><name pos:start="125:33" pos:end="125:41">extradata</name></name></expr></argument>, <argument pos:start="125:44" pos:end="125:68"><expr pos:start="125:44" pos:end="125:68"><name pos:start="125:44" pos:end="125:68"><name pos:start="125:44" pos:end="125:45">st</name><operator pos:start="125:46" pos:end="125:47">-&gt;</operator><name pos:start="125:48" pos:end="125:52">codec</name><operator pos:start="125:53" pos:end="125:54">-&gt;</operator><name pos:start="125:55" pos:end="125:68">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:57"><expr pos:start="129:5" pos:end="129:56"><call pos:start="129:5" pos:end="129:56"><name pos:start="129:5" pos:end="129:22">ffio_init_checksum</name><argument_list pos:start="129:23" pos:end="129:56">(<argument pos:start="129:24" pos:end="129:28"><expr pos:start="129:24" pos:end="129:28"><name pos:start="129:24" pos:end="129:28"><name pos:start="129:24" pos:end="129:24">s</name><operator pos:start="129:25" pos:end="129:26">-&gt;</operator><name pos:start="129:27" pos:end="129:28">pb</name></name></expr></argument>, <argument pos:start="129:31" pos:end="129:43"><expr pos:start="129:31" pos:end="129:43"><name pos:start="129:31" pos:end="129:43">tta_check_crc</name></expr></argument>, <argument pos:start="129:46" pos:end="129:55"><expr pos:start="129:46" pos:end="129:55"><name pos:start="129:46" pos:end="129:55">UINT32_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="131:5" pos:end="141:5">for <control pos:start="131:9" pos:end="131:40">(<init pos:start="131:10" pos:end="131:15"><expr pos:start="131:10" pos:end="131:14"><name pos:start="131:10" pos:end="131:10">i</name> <operator pos:start="131:12" pos:end="131:12">=</operator> <literal type="number" pos:start="131:14" pos:end="131:14">0</literal></expr>;</init> <condition pos:start="131:17" pos:end="131:35"><expr pos:start="131:17" pos:end="131:34"><name pos:start="131:17" pos:end="131:17">i</name> <operator pos:start="131:19" pos:end="131:19">&lt;</operator> <name pos:start="131:21" pos:end="131:34"><name pos:start="131:21" pos:end="131:21">c</name><operator pos:start="131:22" pos:end="131:23">-&gt;</operator><name pos:start="131:24" pos:end="131:34">totalframes</name></name></expr>;</condition> <incr pos:start="131:37" pos:end="131:39"><expr pos:start="131:37" pos:end="131:39"><name pos:start="131:37" pos:end="131:37">i</name><operator pos:start="131:38" pos:end="131:39">++</operator></expr></incr>)</control> <block pos:start="131:42" pos:end="141:5">{<block_content pos:start="133:9" pos:end="139:25">

        <decl_stmt pos:start="133:9" pos:end="133:41"><decl pos:start="133:9" pos:end="133:40"><type pos:start="133:9" pos:end="133:16"><name pos:start="133:9" pos:end="133:16">uint32_t</name></type> <name pos:start="133:18" pos:end="133:21">size</name> <init pos:start="133:23" pos:end="133:40">= <expr pos:start="133:25" pos:end="133:40"><call pos:start="133:25" pos:end="133:40"><name pos:start="133:25" pos:end="133:33">avio_rl32</name><argument_list pos:start="133:34" pos:end="133:40">(<argument pos:start="133:35" pos:end="133:39"><expr pos:start="133:35" pos:end="133:39"><name pos:start="133:35" pos:end="133:39"><name pos:start="133:35" pos:end="133:35">s</name><operator pos:start="133:36" pos:end="133:37">-&gt;</operator><name pos:start="133:38" pos:end="133:39">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="135:9" pos:end="137:45"><expr pos:start="135:9" pos:end="137:44"><call pos:start="135:9" pos:end="137:44"><name pos:start="135:9" pos:end="135:26">av_add_index_entry</name><argument_list pos:start="135:27" pos:end="137:44">(<argument pos:start="135:28" pos:end="135:29"><expr pos:start="135:28" pos:end="135:29"><name pos:start="135:28" pos:end="135:29">st</name></expr></argument>, <argument pos:start="135:32" pos:end="135:39"><expr pos:start="135:32" pos:end="135:39"><name pos:start="135:32" pos:end="135:39">framepos</name></expr></argument>, <argument pos:start="135:42" pos:end="135:58"><expr pos:start="135:42" pos:end="135:58"><name pos:start="135:42" pos:end="135:42">i</name> <operator pos:start="135:44" pos:end="135:44">*</operator> <name pos:start="135:46" pos:end="135:58"><name pos:start="135:46" pos:end="135:46">c</name><operator pos:start="135:47" pos:end="135:48">-&gt;</operator><name pos:start="135:49" pos:end="135:58">frame_size</name></name></expr></argument>, <argument pos:start="135:61" pos:end="135:64"><expr pos:start="135:61" pos:end="135:64"><name pos:start="135:61" pos:end="135:64">size</name></expr></argument>, <argument pos:start="135:67" pos:end="135:67"><expr pos:start="135:67" pos:end="135:67"><literal type="number" pos:start="135:67" pos:end="135:67">0</literal></expr></argument>,

                           <argument pos:start="137:28" pos:end="137:43"><expr pos:start="137:28" pos:end="137:43"><name pos:start="137:28" pos:end="137:43">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:25"><expr pos:start="139:9" pos:end="139:24"><name pos:start="139:9" pos:end="139:16">framepos</name> <operator pos:start="139:18" pos:end="139:19">+=</operator> <name pos:start="139:21" pos:end="139:24">size</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="143:5" pos:end="143:48"><expr pos:start="143:5" pos:end="143:47"><name pos:start="143:5" pos:end="143:7">crc</name> <operator pos:start="143:9" pos:end="143:9">=</operator> <call pos:start="143:11" pos:end="143:34"><name pos:start="143:11" pos:end="143:27">ffio_get_checksum</name><argument_list pos:start="143:28" pos:end="143:34">(<argument pos:start="143:29" pos:end="143:33"><expr pos:start="143:29" pos:end="143:33"><name pos:start="143:29" pos:end="143:33"><name pos:start="143:29" pos:end="143:29">s</name><operator pos:start="143:30" pos:end="143:31">-&gt;</operator><name pos:start="143:32" pos:end="143:33">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="143:36" pos:end="143:36">^</operator> <name pos:start="143:38" pos:end="143:47">UINT32_MAX</name></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="151:5"><if pos:start="145:5" pos:end="151:5">if <condition pos:start="145:8" pos:end="145:32">(<expr pos:start="145:9" pos:end="145:31"><name pos:start="145:9" pos:end="145:11">crc</name> <operator pos:start="145:13" pos:end="145:14">!=</operator> <call pos:start="145:16" pos:end="145:31"><name pos:start="145:16" pos:end="145:24">avio_rl32</name><argument_list pos:start="145:25" pos:end="145:31">(<argument pos:start="145:26" pos:end="145:30"><expr pos:start="145:26" pos:end="145:30"><name pos:start="145:26" pos:end="145:30"><name pos:start="145:26" pos:end="145:26">s</name><operator pos:start="145:27" pos:end="145:28">-&gt;</operator><name pos:start="145:29" pos:end="145:30">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="145:34" pos:end="151:5">{<block_content pos:start="147:9" pos:end="149:35">

        <expr_stmt pos:start="147:9" pos:end="147:58"><expr pos:start="147:9" pos:end="147:57"><call pos:start="147:9" pos:end="147:57"><name pos:start="147:9" pos:end="147:14">av_log</name><argument_list pos:start="147:15" pos:end="147:57">(<argument pos:start="147:16" pos:end="147:16"><expr pos:start="147:16" pos:end="147:16"><name pos:start="147:16" pos:end="147:16">s</name></expr></argument>, <argument pos:start="147:19" pos:end="147:30"><expr pos:start="147:19" pos:end="147:30"><name pos:start="147:19" pos:end="147:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="147:33" pos:end="147:56"><expr pos:start="147:33" pos:end="147:56"><literal type="string" pos:start="147:33" pos:end="147:56">"Seek table CRC error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="149:9" pos:end="149:35">return <expr pos:start="149:16" pos:end="149:34"><name pos:start="149:16" pos:end="149:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="155:5" pos:end="155:47"><expr pos:start="155:5" pos:end="155:46"><name pos:start="155:5" pos:end="155:25"><name pos:start="155:5" pos:end="155:6">st</name><operator pos:start="155:7" pos:end="155:8">-&gt;</operator><name pos:start="155:9" pos:end="155:13">codec</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:25">codec_type</name></name> <operator pos:start="155:27" pos:end="155:27">=</operator> <name pos:start="155:29" pos:end="155:46">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:42"><expr pos:start="157:5" pos:end="157:41"><name pos:start="157:5" pos:end="157:23"><name pos:start="157:5" pos:end="157:6">st</name><operator pos:start="157:7" pos:end="157:8">-&gt;</operator><name pos:start="157:9" pos:end="157:13">codec</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:23">codec_id</name></name> <operator pos:start="157:25" pos:end="157:25">=</operator> <name pos:start="157:27" pos:end="157:41">AV_CODEC_ID_TTA</name></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:35"><expr pos:start="159:5" pos:end="159:34"><name pos:start="159:5" pos:end="159:23"><name pos:start="159:5" pos:end="159:6">st</name><operator pos:start="159:7" pos:end="159:8">-&gt;</operator><name pos:start="159:9" pos:end="159:13">codec</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:23">channels</name></name> <operator pos:start="159:25" pos:end="159:25">=</operator> <name pos:start="159:27" pos:end="159:34">channels</name></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:40"><expr pos:start="161:5" pos:end="161:39"><name pos:start="161:5" pos:end="161:26"><name pos:start="161:5" pos:end="161:6">st</name><operator pos:start="161:7" pos:end="161:8">-&gt;</operator><name pos:start="161:9" pos:end="161:13">codec</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:26">sample_rate</name></name> <operator pos:start="161:28" pos:end="161:28">=</operator> <name pos:start="161:30" pos:end="161:39">samplerate</name></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:43"><expr pos:start="163:5" pos:end="163:42"><name pos:start="163:5" pos:end="163:36"><name pos:start="163:5" pos:end="163:6">st</name><operator pos:start="163:7" pos:end="163:8">-&gt;</operator><name pos:start="163:9" pos:end="163:13">codec</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:36">bits_per_coded_sample</name></name> <operator pos:start="163:38" pos:end="163:38">=</operator> <name pos:start="163:40" pos:end="163:42">bps</name></expr>;</expr_stmt>



    <if_stmt pos:start="167:5" pos:end="175:5"><if pos:start="167:5" pos:end="175:5">if <condition pos:start="167:8" pos:end="167:24">(<expr pos:start="167:9" pos:end="167:23"><name pos:start="167:9" pos:end="167:23"><name pos:start="167:9" pos:end="167:9">s</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:13">pb</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:23">seekable</name></name></expr>)</condition> <block pos:start="167:26" pos:end="175:5">{<block_content pos:start="169:9" pos:end="173:40">

        <decl_stmt pos:start="169:9" pos:end="169:39"><decl pos:start="169:9" pos:end="169:38"><type pos:start="169:9" pos:end="169:15"><name pos:start="169:9" pos:end="169:15">int64_t</name></type> <name pos:start="169:17" pos:end="169:19">pos</name> <init pos:start="169:21" pos:end="169:38">= <expr pos:start="169:23" pos:end="169:38"><call pos:start="169:23" pos:end="169:38"><name pos:start="169:23" pos:end="169:31">avio_tell</name><argument_list pos:start="169:32" pos:end="169:38">(<argument pos:start="169:33" pos:end="169:37"><expr pos:start="169:33" pos:end="169:37"><name pos:start="169:33" pos:end="169:37"><name pos:start="169:33" pos:end="169:33">s</name><operator pos:start="169:34" pos:end="169:35">-&gt;</operator><name pos:start="169:36" pos:end="169:37">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:28"><expr pos:start="171:9" pos:end="171:27"><call pos:start="171:9" pos:end="171:27"><name pos:start="171:9" pos:end="171:24">ff_ape_parse_tag</name><argument_list pos:start="171:25" pos:end="171:27">(<argument pos:start="171:26" pos:end="171:26"><expr pos:start="171:26" pos:end="171:26"><name pos:start="171:26" pos:end="171:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:40"><expr pos:start="173:9" pos:end="173:39"><call pos:start="173:9" pos:end="173:39"><name pos:start="173:9" pos:end="173:17">avio_seek</name><argument_list pos:start="173:18" pos:end="173:39">(<argument pos:start="173:19" pos:end="173:23"><expr pos:start="173:19" pos:end="173:23"><name pos:start="173:19" pos:end="173:23"><name pos:start="173:19" pos:end="173:19">s</name><operator pos:start="173:20" pos:end="173:21">-&gt;</operator><name pos:start="173:22" pos:end="173:23">pb</name></name></expr></argument>, <argument pos:start="173:26" pos:end="173:28"><expr pos:start="173:26" pos:end="173:28"><name pos:start="173:26" pos:end="173:28">pos</name></expr></argument>, <argument pos:start="173:31" pos:end="173:38"><expr pos:start="173:31" pos:end="173:38"><name pos:start="173:31" pos:end="173:38">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="179:5" pos:end="179:13">return <expr pos:start="179:12" pos:end="179:12"><literal type="number" pos:start="179:12" pos:end="179:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
