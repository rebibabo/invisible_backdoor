<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7009.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">pc_dimm_unplug_request</name><parameter_list pos:start="1:35" pos:end="3:66">(<parameter pos:start="1:36" pos:end="1:62"><decl pos:start="1:36" pos:end="1:62"><type pos:start="1:36" pos:end="1:62"><name pos:start="1:36" pos:end="1:49">HotplugHandler</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:62">hotplug_dev</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:51"><decl pos:start="3:36" pos:end="3:51"><type pos:start="3:36" pos:end="3:51"><name pos:start="3:36" pos:end="3:46">DeviceState</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:51">dev</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:65"><decl pos:start="3:54" pos:end="3:65"><type pos:start="3:54" pos:end="3:65"><name pos:start="3:54" pos:end="3:58">Error</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier><modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:65">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:37">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">HotplugHandlerClass</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:28">hhc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:51"><decl pos:start="11:5" pos:end="11:50"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">PCMachineState</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:24">pcms</name> <init pos:start="11:26" pos:end="11:50">= <expr pos:start="11:28" pos:end="11:50"><call pos:start="11:28" pos:end="11:50"><name pos:start="11:28" pos:end="11:37">PC_MACHINE</name><argument_list pos:start="11:38" pos:end="11:50">(<argument pos:start="11:39" pos:end="11:49"><expr pos:start="11:39" pos:end="11:49"><name pos:start="11:39" pos:end="11:49">hotplug_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:24">(<expr pos:start="15:9" pos:end="15:23"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:23"><name pos:start="15:10" pos:end="15:13">pcms</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:23">acpi_dev</name></name></expr>)</condition> <block pos:start="15:26" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:17">

        <expr_stmt pos:start="17:9" pos:end="19:73"><expr pos:start="17:9" pos:end="19:72"><call pos:start="17:9" pos:end="19:72"><name pos:start="17:9" pos:end="17:18">error_setg</name><argument_list pos:start="17:19" pos:end="19:72">(<argument pos:start="17:20" pos:end="17:29"><expr pos:start="17:20" pos:end="17:29"><operator pos:start="17:20" pos:end="17:20">&amp;</operator><name pos:start="17:21" pos:end="17:29">local_err</name></expr></argument>,

                   <argument pos:start="19:20" pos:end="19:71"><expr pos:start="19:20" pos:end="19:71"><literal type="string" pos:start="19:20" pos:end="19:71">"memory hotplug is not enabled: missing acpi device"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="21:9" pos:end="21:17">goto <name pos:start="21:14" pos:end="21:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:54">(<expr pos:start="27:9" pos:end="27:53"><call pos:start="27:9" pos:end="27:53"><name pos:start="27:9" pos:end="27:27">object_dynamic_cast</name><argument_list pos:start="27:28" pos:end="27:53">(<argument pos:start="27:29" pos:end="27:39"><expr pos:start="27:29" pos:end="27:39"><call pos:start="27:29" pos:end="27:39"><name pos:start="27:29" pos:end="27:34">OBJECT</name><argument_list pos:start="27:35" pos:end="27:39">(<argument pos:start="27:36" pos:end="27:38"><expr pos:start="27:36" pos:end="27:38"><name pos:start="27:36" pos:end="27:38">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:42" pos:end="27:52"><expr pos:start="27:42" pos:end="27:52"><name pos:start="27:42" pos:end="27:52">TYPE_NVDIMM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:56" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:17">

        <expr_stmt pos:start="29:9" pos:end="31:69"><expr pos:start="29:9" pos:end="31:68"><call pos:start="29:9" pos:end="31:68"><name pos:start="29:9" pos:end="29:18">error_setg</name><argument_list pos:start="29:19" pos:end="31:68">(<argument pos:start="29:20" pos:end="29:29"><expr pos:start="29:20" pos:end="29:29"><operator pos:start="29:20" pos:end="29:20">&amp;</operator><name pos:start="29:21" pos:end="29:29">local_err</name></expr></argument>,

                   <argument pos:start="31:20" pos:end="31:67"><expr pos:start="31:20" pos:end="31:67"><literal type="string" pos:start="31:20" pos:end="31:67">"nvdimm device hot unplug is not supported yet."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="33:9" pos:end="33:17">goto <name pos:start="33:14" pos:end="33:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:52"><expr pos:start="39:5" pos:end="39:51"><name pos:start="39:5" pos:end="39:7">hhc</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:51"><name pos:start="39:11" pos:end="39:35">HOTPLUG_HANDLER_GET_CLASS</name><argument_list pos:start="39:36" pos:end="39:51">(<argument pos:start="39:37" pos:end="39:50"><expr pos:start="39:37" pos:end="39:50"><name pos:start="39:37" pos:end="39:50"><name pos:start="39:37" pos:end="39:40">pcms</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:50">acpi_dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:74"><expr pos:start="41:5" pos:end="41:73"><call pos:start="41:5" pos:end="41:73"><name pos:start="41:5" pos:end="41:23"><name pos:start="41:5" pos:end="41:7">hhc</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:23">unplug_request</name></name><argument_list pos:start="41:24" pos:end="41:73">(<argument pos:start="41:25" pos:end="41:55"><expr pos:start="41:25" pos:end="41:55"><call pos:start="41:25" pos:end="41:55"><name pos:start="41:25" pos:end="41:39">HOTPLUG_HANDLER</name><argument_list pos:start="41:40" pos:end="41:55">(<argument pos:start="41:41" pos:end="41:54"><expr pos:start="41:41" pos:end="41:54"><name pos:start="41:41" pos:end="41:54"><name pos:start="41:41" pos:end="41:44">pcms</name><operator pos:start="41:45" pos:end="41:46">-&gt;</operator><name pos:start="41:47" pos:end="41:54">acpi_dev</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:58" pos:end="41:60"><expr pos:start="41:58" pos:end="41:60"><name pos:start="41:58" pos:end="41:60">dev</name></expr></argument>, <argument pos:start="41:63" pos:end="41:72"><expr pos:start="41:63" pos:end="41:72"><operator pos:start="41:63" pos:end="41:63">&amp;</operator><name pos:start="41:64" pos:end="41:72">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="45:1" pos:end="45:4"><name pos:start="45:1" pos:end="45:3">out</name>:</label>

    <expr_stmt pos:start="47:5" pos:end="47:37"><expr pos:start="47:5" pos:end="47:36"><call pos:start="47:5" pos:end="47:36"><name pos:start="47:5" pos:end="47:19">error_propagate</name><argument_list pos:start="47:20" pos:end="47:36">(<argument pos:start="47:21" pos:end="47:24"><expr pos:start="47:21" pos:end="47:24"><name pos:start="47:21" pos:end="47:24">errp</name></expr></argument>, <argument pos:start="47:27" pos:end="47:35"><expr pos:start="47:27" pos:end="47:35"><name pos:start="47:27" pos:end="47:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
