<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13723.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:45"><name pos:start="1:1" pos:end="1:16">ogm_dshow_header</name><argument_list pos:start="1:17" pos:end="1:45">(<argument pos:start="1:18" pos:end="1:35">AVFormatContext *s</argument>, <argument pos:start="1:38" pos:end="1:44">int idx</argument>)</argument_list></macro>
<block pos:start="2:1" pos:end="27:1">{<block_content pos:start="3:5" pos:end="26:13">
    <decl_stmt pos:start="3:5" pos:end="3:35"><decl pos:start="3:5" pos:end="3:34"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14"><name pos:start="3:5" pos:end="3:10">struct</name> <name pos:start="3:12" pos:end="3:14">ogg</name></name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type><name pos:start="3:17" pos:end="3:19">ogg</name> <init pos:start="3:21" pos:end="3:34">= <expr pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:23">s</name><operator pos:start="3:24" pos:end="3:25">-&gt;</operator><name pos:start="3:26" pos:end="3:34">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:47"><decl pos:start="4:5" pos:end="4:46"><type pos:start="4:5" pos:end="4:23"><name pos:start="4:5" pos:end="4:21"><name pos:start="4:5" pos:end="4:10">struct</name> <name pos:start="4:12" pos:end="4:21">ogg_stream</name></name> <modifier pos:start="4:23" pos:end="4:23">*</modifier></type><name pos:start="4:24" pos:end="4:25">os</name> <init pos:start="4:27" pos:end="4:46">= <expr pos:start="4:29" pos:end="4:46"><name pos:start="4:29" pos:end="4:40"><name pos:start="4:29" pos:end="4:31">ogg</name><operator pos:start="4:32" pos:end="4:33">-&gt;</operator><name pos:start="4:34" pos:end="4:40">streams</name></name> <operator pos:start="4:42" pos:end="4:42">+</operator> <name pos:start="4:44" pos:end="4:46">idx</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name> <init pos:start="5:18" pos:end="5:34">= <expr pos:start="5:20" pos:end="5:34"><name pos:start="5:20" pos:end="5:34"><name pos:start="5:20" pos:end="5:20">s</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:29">streams</name><index pos:start="5:30" pos:end="5:34">[<expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:38"><decl pos:start="6:5" pos:end="6:37"><type pos:start="6:5" pos:end="6:13"><name pos:start="6:5" pos:end="6:11">uint8_t</name> <modifier pos:start="6:13" pos:end="6:13">*</modifier></type><name pos:start="6:14" pos:end="6:14">p</name> <init pos:start="6:16" pos:end="6:37">= <expr pos:start="6:18" pos:end="6:37"><name pos:start="6:18" pos:end="6:24"><name pos:start="6:18" pos:end="6:19">os</name><operator pos:start="6:20" pos:end="6:21">-&gt;</operator><name pos:start="6:22" pos:end="6:24">buf</name></name> <operator pos:start="6:26" pos:end="6:26">+</operator> <name pos:start="6:28" pos:end="6:37"><name pos:start="6:28" pos:end="6:29">os</name><operator pos:start="6:30" pos:end="6:31">-&gt;</operator><name pos:start="6:32" pos:end="6:37">pstart</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:14">t</name></decl>;</decl_stmt>
    <if_stmt pos:start="8:5" pos:end="9:17"><if pos:start="8:5" pos:end="9:17">if<condition pos:start="8:7" pos:end="8:17">(<expr pos:start="8:8" pos:end="8:16"><operator pos:start="8:8" pos:end="8:8">!</operator><operator pos:start="8:9" pos:end="8:9">(</operator><operator pos:start="8:10" pos:end="8:10">*</operator><name pos:start="8:11" pos:end="8:11">p</name> <operator pos:start="8:13" pos:end="8:13">&amp;</operator> <literal type="number" pos:start="8:15" pos:end="8:15">1</literal><operator pos:start="8:16" pos:end="8:16">)</operator></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:17"><block_content pos:start="9:9" pos:end="9:17">
        <return pos:start="9:9" pos:end="9:17">return <expr pos:start="9:16" pos:end="9:16"><literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="10:5" pos:end="11:17"><if pos:start="10:5" pos:end="11:17">if<condition pos:start="10:7" pos:end="10:15">(<expr pos:start="10:8" pos:end="10:14"><operator pos:start="10:8" pos:end="10:8">*</operator><name pos:start="10:9" pos:end="10:9">p</name> <operator pos:start="10:11" pos:end="10:12">!=</operator> <literal type="number" pos:start="10:14" pos:end="10:14">1</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:17"><block_content pos:start="11:9" pos:end="11:17">
        <return pos:start="11:9" pos:end="11:17">return <expr pos:start="11:16" pos:end="11:16"><literal type="number" pos:start="11:16" pos:end="11:16">1</literal></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:24"><expr pos:start="12:5" pos:end="12:23"><name pos:start="12:5" pos:end="12:5">t</name> <operator pos:start="12:7" pos:end="12:7">=</operator> <call pos:start="12:9" pos:end="12:23"><name pos:start="12:9" pos:end="12:15">AV_RL32</name><argument_list pos:start="12:16" pos:end="12:23">(<argument pos:start="12:17" pos:end="12:22"><expr pos:start="12:17" pos:end="12:22"><name pos:start="12:17" pos:end="12:17">p</name> <operator pos:start="12:19" pos:end="12:19">+</operator> <literal type="number" pos:start="12:21" pos:end="12:22">96</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="13:5" pos:end="25:5"><if pos:start="13:5" pos:end="19:5">if<condition pos:start="13:7" pos:end="13:23">(<expr pos:start="13:8" pos:end="13:22"><name pos:start="13:8" pos:end="13:8">t</name> <operator pos:start="13:10" pos:end="13:11">==</operator> <literal type="number" pos:start="13:13" pos:end="13:22">0x05589f80</literal></expr>)</condition><block pos:start="13:24" pos:end="19:5">{<block_content pos:start="14:9" pos:end="18:45">
        <expr_stmt pos:start="14:9" pos:end="14:51"><expr pos:start="14:9" pos:end="14:50"><name pos:start="14:9" pos:end="14:29"><name pos:start="14:9" pos:end="14:10">st</name><operator pos:start="14:11" pos:end="14:12">-&gt;</operator><name pos:start="14:13" pos:end="14:17">codec</name><operator pos:start="14:18" pos:end="14:19">-&gt;</operator><name pos:start="14:20" pos:end="14:29">codec_type</name></name> <operator pos:start="14:31" pos:end="14:31">=</operator> <name pos:start="14:33" pos:end="14:50">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:82"><expr pos:start="15:9" pos:end="15:81"><name pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:10">st</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:17">codec</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:27">codec_id</name></name> <operator pos:start="15:29" pos:end="15:29">=</operator> <call pos:start="15:31" pos:end="15:81"><name pos:start="15:31" pos:end="15:45">ff_codec_get_id</name><argument_list pos:start="15:46" pos:end="15:81">(<argument pos:start="15:47" pos:end="15:63"><expr pos:start="15:47" pos:end="15:63"><name pos:start="15:47" pos:end="15:63">ff_codec_bmp_tags</name></expr></argument>, <argument pos:start="15:66" pos:end="15:80"><expr pos:start="15:66" pos:end="15:80"><call pos:start="15:66" pos:end="15:80"><name pos:start="15:66" pos:end="15:72">AV_RL32</name><argument_list pos:start="15:73" pos:end="15:80">(<argument pos:start="15:74" pos:end="15:79"><expr pos:start="15:74" pos:end="15:79"><name pos:start="15:74" pos:end="15:74">p</name> <operator pos:start="15:76" pos:end="15:76">+</operator> <literal type="number" pos:start="15:78" pos:end="15:79">68</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:64"><expr pos:start="16:9" pos:end="16:63"><call pos:start="16:9" pos:end="16:63"><name pos:start="16:9" pos:end="16:27">avpriv_set_pts_info</name><argument_list pos:start="16:28" pos:end="16:63">(<argument pos:start="16:29" pos:end="16:30"><expr pos:start="16:29" pos:end="16:30"><name pos:start="16:29" pos:end="16:30">st</name></expr></argument>, <argument pos:start="16:33" pos:end="16:34"><expr pos:start="16:33" pos:end="16:34"><literal type="number" pos:start="16:33" pos:end="16:34">64</literal></expr></argument>, <argument pos:start="16:37" pos:end="16:52"><expr pos:start="16:37" pos:end="16:52"><call pos:start="16:37" pos:end="16:52"><name pos:start="16:37" pos:end="16:43">AV_RL64</name><argument_list pos:start="16:44" pos:end="16:52">(<argument pos:start="16:45" pos:end="16:51"><expr pos:start="16:45" pos:end="16:51"><name pos:start="16:45" pos:end="16:45">p</name> <operator pos:start="16:47" pos:end="16:47">+</operator> <literal type="number" pos:start="16:49" pos:end="16:51">164</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="16:55" pos:end="16:62"><expr pos:start="16:55" pos:end="16:62"><literal type="number" pos:start="16:55" pos:end="16:62">10000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:44"><expr pos:start="17:9" pos:end="17:43"><name pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:10">st</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:17">codec</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:24">width</name></name> <operator pos:start="17:26" pos:end="17:26">=</operator> <call pos:start="17:28" pos:end="17:43"><name pos:start="17:28" pos:end="17:34">AV_RL32</name><argument_list pos:start="17:35" pos:end="17:43">(<argument pos:start="17:36" pos:end="17:42"><expr pos:start="17:36" pos:end="17:42"><name pos:start="17:36" pos:end="17:36">p</name> <operator pos:start="17:38" pos:end="17:38">+</operator> <literal type="number" pos:start="17:40" pos:end="17:42">176</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="18:9" pos:end="18:45"><expr pos:start="18:9" pos:end="18:44"><name pos:start="18:9" pos:end="18:25"><name pos:start="18:9" pos:end="18:10">st</name><operator pos:start="18:11" pos:end="18:12">-&gt;</operator><name pos:start="18:13" pos:end="18:17">codec</name><operator pos:start="18:18" pos:end="18:19">-&gt;</operator><name pos:start="18:20" pos:end="18:25">height</name></name> <operator pos:start="18:27" pos:end="18:27">=</operator> <call pos:start="18:29" pos:end="18:44"><name pos:start="18:29" pos:end="18:35">AV_RL32</name><argument_list pos:start="18:36" pos:end="18:44">(<argument pos:start="18:37" pos:end="18:43"><expr pos:start="18:37" pos:end="18:43"><name pos:start="18:37" pos:end="18:37">p</name> <operator pos:start="18:39" pos:end="18:39">+</operator> <literal type="number" pos:start="18:41" pos:end="18:43">180</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="19:7" pos:end="25:5">else if<condition pos:start="19:14" pos:end="19:30">(<expr pos:start="19:15" pos:end="19:29"><name pos:start="19:15" pos:end="19:15">t</name> <operator pos:start="19:17" pos:end="19:18">==</operator> <literal type="number" pos:start="19:20" pos:end="19:29">0x05589f81</literal></expr>)</condition><block pos:start="19:31" pos:end="25:5">{<block_content pos:start="20:9" pos:end="24:51">
        <expr_stmt pos:start="20:9" pos:end="20:51"><expr pos:start="20:9" pos:end="20:50"><name pos:start="20:9" pos:end="20:29"><name pos:start="20:9" pos:end="20:10">st</name><operator pos:start="20:11" pos:end="20:12">-&gt;</operator><name pos:start="20:13" pos:end="20:17">codec</name><operator pos:start="20:18" pos:end="20:19">-&gt;</operator><name pos:start="20:20" pos:end="20:29">codec_type</name></name> <operator pos:start="20:31" pos:end="20:31">=</operator> <name pos:start="20:33" pos:end="20:50">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:83"><expr pos:start="21:9" pos:end="21:82"><name pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:10">st</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:17">codec</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:27">codec_id</name></name> <operator pos:start="21:29" pos:end="21:29">=</operator> <call pos:start="21:31" pos:end="21:82"><name pos:start="21:31" pos:end="21:45">ff_codec_get_id</name><argument_list pos:start="21:46" pos:end="21:82">(<argument pos:start="21:47" pos:end="21:63"><expr pos:start="21:47" pos:end="21:63"><name pos:start="21:47" pos:end="21:63">ff_codec_wav_tags</name></expr></argument>, <argument pos:start="21:66" pos:end="21:81"><expr pos:start="21:66" pos:end="21:81"><call pos:start="21:66" pos:end="21:81"><name pos:start="21:66" pos:end="21:72">AV_RL16</name><argument_list pos:start="21:73" pos:end="21:81">(<argument pos:start="21:74" pos:end="21:80"><expr pos:start="21:74" pos:end="21:80"><name pos:start="21:74" pos:end="21:74">p</name> <operator pos:start="21:76" pos:end="21:76">+</operator> <literal type="number" pos:start="21:78" pos:end="21:80">124</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="22:47"><expr pos:start="22:9" pos:end="22:46"><name pos:start="22:9" pos:end="22:27"><name pos:start="22:9" pos:end="22:10">st</name><operator pos:start="22:11" pos:end="22:12">-&gt;</operator><name pos:start="22:13" pos:end="22:17">codec</name><operator pos:start="22:18" pos:end="22:19">-&gt;</operator><name pos:start="22:20" pos:end="22:27">channels</name></name> <operator pos:start="22:29" pos:end="22:29">=</operator> <call pos:start="22:31" pos:end="22:46"><name pos:start="22:31" pos:end="22:37">AV_RL16</name><argument_list pos:start="22:38" pos:end="22:46">(<argument pos:start="22:39" pos:end="22:45"><expr pos:start="22:39" pos:end="22:45"><name pos:start="22:39" pos:end="22:39">p</name> <operator pos:start="22:41" pos:end="22:41">+</operator> <literal type="number" pos:start="22:43" pos:end="22:45">126</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="23:9" pos:end="23:50"><expr pos:start="23:9" pos:end="23:49"><name pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:10">st</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:17">codec</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:30">sample_rate</name></name> <operator pos:start="23:32" pos:end="23:32">=</operator> <call pos:start="23:34" pos:end="23:49"><name pos:start="23:34" pos:end="23:40">AV_RL32</name><argument_list pos:start="23:41" pos:end="23:49">(<argument pos:start="23:42" pos:end="23:48"><expr pos:start="23:42" pos:end="23:48"><name pos:start="23:42" pos:end="23:42">p</name> <operator pos:start="23:44" pos:end="23:44">+</operator> <literal type="number" pos:start="23:46" pos:end="23:48">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:51"><expr pos:start="24:9" pos:end="24:50"><name pos:start="24:9" pos:end="24:27"><name pos:start="24:9" pos:end="24:10">st</name><operator pos:start="24:11" pos:end="24:12">-&gt;</operator><name pos:start="24:13" pos:end="24:17">codec</name><operator pos:start="24:18" pos:end="24:19">-&gt;</operator><name pos:start="24:20" pos:end="24:27">bit_rate</name></name> <operator pos:start="24:29" pos:end="24:29">=</operator> <call pos:start="24:31" pos:end="24:46"><name pos:start="24:31" pos:end="24:37">AV_RL32</name><argument_list pos:start="24:38" pos:end="24:46">(<argument pos:start="24:39" pos:end="24:45"><expr pos:start="24:39" pos:end="24:45"><name pos:start="24:39" pos:end="24:39">p</name> <operator pos:start="24:41" pos:end="24:41">+</operator> <literal type="number" pos:start="24:43" pos:end="24:45">132</literal></expr></argument>)</argument_list></call> <operator pos:start="24:48" pos:end="24:48">*</operator> <literal type="number" pos:start="24:50" pos:end="24:50">8</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return pos:start="26:5" pos:end="26:13">return <expr pos:start="26:12" pos:end="26:12"><literal type="number" pos:start="26:12" pos:end="26:12">1</literal></expr>;</return>
</block_content>}</block></unit>
