<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9902.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">qdev_device_help</name><parameter_list pos:start="1:21" pos:end="1:36">(<parameter pos:start="1:22" pos:end="1:35"><decl pos:start="1:22" pos:end="1:35"><type pos:start="1:22" pos:end="1:31"><name pos:start="1:22" pos:end="1:29">QemuOpts</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:35">opts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:20">local_err</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:22">driver</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:28"><name pos:start="9:5" pos:end="9:26">DevicePropertyInfoList</name> <modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:37">prop_list</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:26">DevicePropertyInfoList</name> <modifier pos:start="11:28" pos:end="11:28">*</modifier></type><name pos:start="11:29" pos:end="11:32">prop</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:42"><expr pos:start="15:5" pos:end="15:41"><name pos:start="15:5" pos:end="15:10">driver</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:41"><name pos:start="15:14" pos:end="15:25">qemu_opt_get</name><argument_list pos:start="15:26" pos:end="15:41">(<argument pos:start="15:27" pos:end="15:30"><expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:30">opts</name></expr></argument>, <argument pos:start="15:33" pos:end="15:40"><expr pos:start="15:33" pos:end="15:40"><literal type="string" pos:start="15:33" pos:end="15:40">"driver"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:41">(<expr pos:start="17:9" pos:end="17:40"><name pos:start="17:9" pos:end="17:14">driver</name> <operator pos:start="17:16" pos:end="17:17">&amp;&amp;</operator> <call pos:start="17:19" pos:end="17:40"><name pos:start="17:19" pos:end="17:32">is_help_option</name><argument_list pos:start="17:33" pos:end="17:40">(<argument pos:start="17:34" pos:end="17:39"><expr pos:start="17:34" pos:end="17:39"><name pos:start="17:34" pos:end="17:39">driver</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:43" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:17">

        <expr_stmt pos:start="19:9" pos:end="19:35"><expr pos:start="19:9" pos:end="19:34"><call pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:27">qdev_print_devinfos</name><argument_list pos:start="19:28" pos:end="19:34">(<argument pos:start="19:29" pos:end="19:33"><expr pos:start="19:29" pos:end="19:33"><name pos:start="19:29" pos:end="19:33">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:48">(<expr pos:start="27:9" pos:end="27:47"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:15">driver</name> <operator pos:start="27:17" pos:end="27:18">||</operator> <operator pos:start="27:20" pos:end="27:20">!</operator><call pos:start="27:21" pos:end="27:47"><name pos:start="27:21" pos:end="27:41">qemu_opt_has_help_opt</name><argument_list pos:start="27:42" pos:end="27:47">(<argument pos:start="27:43" pos:end="27:46"><expr pos:start="27:43" pos:end="27:46"><name pos:start="27:43" pos:end="27:46">opts</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:50" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:17">

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:47"><expr pos:start="35:5" pos:end="35:46"><call pos:start="35:5" pos:end="35:46"><name pos:start="35:5" pos:end="35:25">qdev_get_device_class</name><argument_list pos:start="35:26" pos:end="35:46">(<argument pos:start="35:27" pos:end="35:33"><expr pos:start="35:27" pos:end="35:33"><operator pos:start="35:27" pos:end="35:27">&amp;</operator><name pos:start="35:28" pos:end="35:33">driver</name></expr></argument>, <argument pos:start="35:36" pos:end="35:45"><expr pos:start="35:36" pos:end="35:45"><operator pos:start="35:36" pos:end="35:36">&amp;</operator><name pos:start="35:37" pos:end="35:45">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:18">(<expr pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:17">local_err</name></expr>)</condition> <block pos:start="37:20" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:19">

        <goto pos:start="39:9" pos:end="39:19">goto <name pos:start="39:14" pos:end="39:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:63"><expr pos:start="45:5" pos:end="45:62"><name pos:start="45:5" pos:end="45:13">prop_list</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <call pos:start="45:17" pos:end="45:62"><name pos:start="45:17" pos:end="45:42">qmp_device_list_properties</name><argument_list pos:start="45:43" pos:end="45:62">(<argument pos:start="45:44" pos:end="45:49"><expr pos:start="45:44" pos:end="45:49"><name pos:start="45:44" pos:end="45:49">driver</name></expr></argument>, <argument pos:start="45:52" pos:end="45:61"><expr pos:start="45:52" pos:end="45:61"><operator pos:start="45:52" pos:end="45:52">&amp;</operator><name pos:start="45:53" pos:end="45:61">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:18">(<expr pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:17">local_err</name></expr>)</condition> <block pos:start="47:20" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:19">

        <goto pos:start="49:9" pos:end="49:19">goto <name pos:start="49:14" pos:end="49:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="55:5" pos:end="73:5">for <control pos:start="55:9" pos:end="55:51">(<init pos:start="55:10" pos:end="55:26"><expr pos:start="55:10" pos:end="55:25"><name pos:start="55:10" pos:end="55:13">prop</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <name pos:start="55:17" pos:end="55:25">prop_list</name></expr>;</init> <condition pos:start="55:28" pos:end="55:32"><expr pos:start="55:28" pos:end="55:31"><name pos:start="55:28" pos:end="55:31">prop</name></expr>;</condition> <incr pos:start="55:34" pos:end="55:50"><expr pos:start="55:34" pos:end="55:50"><name pos:start="55:34" pos:end="55:37">prop</name> <operator pos:start="55:39" pos:end="55:39">=</operator> <name pos:start="55:41" pos:end="55:50"><name pos:start="55:41" pos:end="55:44">prop</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:50">next</name></name></expr></incr>)</control> <block pos:start="55:53" pos:end="73:5">{<block_content pos:start="57:9" pos:end="71:9">

        <expr_stmt pos:start="57:9" pos:end="61:40"><expr pos:start="57:9" pos:end="61:39"><call pos:start="57:9" pos:end="61:39"><name pos:start="57:9" pos:end="57:20">error_printf</name><argument_list pos:start="57:21" pos:end="61:39">(<argument pos:start="57:22" pos:end="57:31"><expr pos:start="57:22" pos:end="57:31"><literal type="string" pos:start="57:22" pos:end="57:31">"%s.%s=%s"</literal></expr></argument>, <argument pos:start="57:34" pos:end="57:39"><expr pos:start="57:34" pos:end="57:39"><name pos:start="57:34" pos:end="57:39">driver</name></expr></argument>,

                     <argument pos:start="59:22" pos:end="59:38"><expr pos:start="59:22" pos:end="59:38"><name pos:start="59:22" pos:end="59:38"><name pos:start="59:22" pos:end="59:25">prop</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:32">value</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:38">name</name></name></expr></argument>,

                     <argument pos:start="61:22" pos:end="61:38"><expr pos:start="61:22" pos:end="61:38"><name pos:start="61:22" pos:end="61:38"><name pos:start="61:22" pos:end="61:25">prop</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:32">value</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:38">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="71:9"><if pos:start="63:9" pos:end="67:9">if <condition pos:start="63:12" pos:end="63:41">(<expr pos:start="63:13" pos:end="63:40"><name pos:start="63:13" pos:end="63:40"><name pos:start="63:13" pos:end="63:16">prop</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:23">value</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:40">has_description</name></name></expr>)</condition> <block pos:start="63:43" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:62">

            <expr_stmt pos:start="65:13" pos:end="65:62"><expr pos:start="65:13" pos:end="65:61"><call pos:start="65:13" pos:end="65:61"><name pos:start="65:13" pos:end="65:24">error_printf</name><argument_list pos:start="65:25" pos:end="65:61">(<argument pos:start="65:26" pos:end="65:34"><expr pos:start="65:26" pos:end="65:34"><literal type="string" pos:start="65:26" pos:end="65:34">" (%s)\n"</literal></expr></argument>, <argument pos:start="65:37" pos:end="65:60"><expr pos:start="65:37" pos:end="65:60"><name pos:start="65:37" pos:end="65:60"><name pos:start="65:37" pos:end="65:40">prop</name><operator pos:start="65:41" pos:end="65:42">-&gt;</operator><name pos:start="65:43" pos:end="65:47">value</name><operator pos:start="65:48" pos:end="65:49">-&gt;</operator><name pos:start="65:50" pos:end="65:60">description</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="67:11" pos:end="71:9">else <block pos:start="67:16" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:31">

            <expr_stmt pos:start="69:13" pos:end="69:31"><expr pos:start="69:13" pos:end="69:30"><call pos:start="69:13" pos:end="69:30"><name pos:start="69:13" pos:end="69:24">error_printf</name><argument_list pos:start="69:25" pos:end="69:30">(<argument pos:start="69:26" pos:end="69:29"><expr pos:start="69:26" pos:end="69:29"><literal type="string" pos:start="69:26" pos:end="69:29">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="77:5" pos:end="77:48"><expr pos:start="77:5" pos:end="77:47"><call pos:start="77:5" pos:end="77:47"><name pos:start="77:5" pos:end="77:36">qapi_free_DevicePropertyInfoList</name><argument_list pos:start="77:37" pos:end="77:47">(<argument pos:start="77:38" pos:end="77:46"><expr pos:start="77:38" pos:end="77:46"><name pos:start="77:38" pos:end="77:46">prop_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">1</literal></expr>;</return>



<label pos:start="83:1" pos:end="83:6"><name pos:start="83:1" pos:end="83:5">error</name>:</label>

    <expr_stmt pos:start="85:5" pos:end="85:54"><expr pos:start="85:5" pos:end="85:53"><call pos:start="85:5" pos:end="85:53"><name pos:start="85:5" pos:end="85:16">error_printf</name><argument_list pos:start="85:17" pos:end="85:53">(<argument pos:start="85:18" pos:end="85:23"><expr pos:start="85:18" pos:end="85:23"><literal type="string" pos:start="85:18" pos:end="85:23">"%s\n"</literal></expr></argument>, <argument pos:start="85:26" pos:end="85:52"><expr pos:start="85:26" pos:end="85:52"><call pos:start="85:26" pos:end="85:52"><name pos:start="85:26" pos:end="85:41">error_get_pretty</name><argument_list pos:start="85:42" pos:end="85:52">(<argument pos:start="85:43" pos:end="85:51"><expr pos:start="85:43" pos:end="85:51"><name pos:start="85:43" pos:end="85:51">local_err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:26"><expr pos:start="87:5" pos:end="87:25"><call pos:start="87:5" pos:end="87:25"><name pos:start="87:5" pos:end="87:14">error_free</name><argument_list pos:start="87:15" pos:end="87:25">(<argument pos:start="87:16" pos:end="87:24"><expr pos:start="87:16" pos:end="87:24"><name pos:start="87:16" pos:end="87:24">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="89:5" pos:end="89:13">return <expr pos:start="89:12" pos:end="89:12"><literal type="number" pos:start="89:12" pos:end="89:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
