<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24643.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">os_host_main_loop_wait</name><parameter_list pos:start="1:34" pos:end="1:51">(<parameter pos:start="1:35" pos:end="1:50"><decl pos:start="1:35" pos:end="1:50"><type pos:start="1:35" pos:end="1:42"><name pos:start="1:35" pos:end="1:42">uint32_t</name></type> <name pos:start="1:44" pos:end="1:50">timeout</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:36">

    <decl_stmt pos:start="5:5" pos:end="5:53"><decl pos:start="5:5" pos:end="5:52"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">GMainContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:25">context</name> <init pos:start="5:27" pos:end="5:52">= <expr pos:start="5:29" pos:end="5:52"><call pos:start="5:29" pos:end="5:52"><name pos:start="5:29" pos:end="5:50">g_main_context_default</name><argument_list pos:start="5:51" pos:end="5:52">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">select_ret</name></decl>, <decl pos:start="7:21" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:30">g_poll_ret</name></decl>, <decl pos:start="7:33" pos:end="7:35"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:33" pos:end="7:35">ret</name></decl>, <decl pos:start="7:38" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:38" pos:end="7:38">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">PollingEntry</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:20">pe</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">WaitObjects</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:18">w</name> <init pos:start="11:20" pos:end="11:34">= <expr pos:start="11:22" pos:end="11:34"><operator pos:start="11:22" pos:end="11:22">&amp;</operator><name pos:start="11:23" pos:end="11:34">wait_objects</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">gint</name></type> <name pos:start="13:10" pos:end="13:21">poll_timeout</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:25"><specifier pos:start="15:5" pos:end="15:10">static</specifier> <name pos:start="15:12" pos:end="15:25"><name pos:start="15:12" pos:end="15:17">struct</name> <name pos:start="15:19" pos:end="15:25">timeval</name></name></type> <name pos:start="15:27" pos:end="15:29">tv0</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:68">/* XXX: need to suppress polling by better using win32 events */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:12"><expr pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <literal type="number" pos:start="21:11" pos:end="21:11">0</literal></expr>;</expr_stmt>

    <for pos:start="23:5" pos:end="27:5">for <control pos:start="23:9" pos:end="23:61">(<init pos:start="23:10" pos:end="23:34"><expr pos:start="23:10" pos:end="23:33"><name pos:start="23:10" pos:end="23:11">pe</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:33">first_polling_entry</name></expr>;</init> <condition pos:start="23:36" pos:end="23:46"><expr pos:start="23:36" pos:end="23:45"><name pos:start="23:36" pos:end="23:37">pe</name> <operator pos:start="23:39" pos:end="23:40">!=</operator> <name pos:start="23:42" pos:end="23:45">NULL</name></expr>;</condition> <incr pos:start="23:48" pos:end="23:60"><expr pos:start="23:48" pos:end="23:60"><name pos:start="23:48" pos:end="23:49">pe</name> <operator pos:start="23:51" pos:end="23:51">=</operator> <name pos:start="23:53" pos:end="23:60"><name pos:start="23:53" pos:end="23:54">pe</name><operator pos:start="23:55" pos:end="23:56">-&gt;</operator><name pos:start="23:57" pos:end="23:60">next</name></name></expr></incr>)</control> <block pos:start="23:63" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:36">

        <expr_stmt pos:start="25:9" pos:end="25:36"><expr pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:14">|=</operator> <call pos:start="25:16" pos:end="25:35"><name pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:17">pe</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:23">func</name></name><argument_list pos:start="25:24" pos:end="25:35">(<argument pos:start="25:25" pos:end="25:34"><expr pos:start="25:25" pos:end="25:34"><name pos:start="25:25" pos:end="25:34"><name pos:start="25:25" pos:end="25:26">pe</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:34">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:17">(<expr pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:14">!=</operator> <literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>)</condition> <block pos:start="29:19" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:19">

        <return pos:start="31:9" pos:end="31:19">return <expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:51"><expr pos:start="37:5" pos:end="37:50"><call pos:start="37:5" pos:end="37:50"><name pos:start="37:5" pos:end="37:26">g_main_context_prepare</name><argument_list pos:start="37:27" pos:end="37:50">(<argument pos:start="37:28" pos:end="37:34"><expr pos:start="37:28" pos:end="37:34"><name pos:start="37:28" pos:end="37:34">context</name></expr></argument>, <argument pos:start="37:37" pos:end="37:49"><expr pos:start="37:37" pos:end="37:49"><operator pos:start="37:37" pos:end="37:37">&amp;</operator><name pos:start="37:38" pos:end="37:49">max_priority</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="41:70"><expr pos:start="39:5" pos:end="41:69"><name pos:start="39:5" pos:end="39:14">n_poll_fds</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <call pos:start="39:18" pos:end="41:69"><name pos:start="39:18" pos:end="39:37">g_main_context_query</name><argument_list pos:start="39:38" pos:end="41:69">(<argument pos:start="39:39" pos:end="39:45"><expr pos:start="39:39" pos:end="39:45"><name pos:start="39:39" pos:end="39:45">context</name></expr></argument>, <argument pos:start="39:48" pos:end="39:59"><expr pos:start="39:48" pos:end="39:59"><name pos:start="39:48" pos:end="39:59">max_priority</name></expr></argument>, <argument pos:start="39:62" pos:end="39:74"><expr pos:start="39:62" pos:end="39:74"><operator pos:start="39:62" pos:end="39:62">&amp;</operator><name pos:start="39:63" pos:end="39:74">poll_timeout</name></expr></argument>,

                                      <argument pos:start="41:39" pos:end="41:46"><expr pos:start="41:39" pos:end="41:46"><name pos:start="41:39" pos:end="41:46">poll_fds</name></expr></argument>, <argument pos:start="41:49" pos:end="41:68"><expr pos:start="41:49" pos:end="41:68"><call pos:start="41:49" pos:end="41:68"><name pos:start="41:49" pos:end="41:58">ARRAY_SIZE</name><argument_list pos:start="41:59" pos:end="41:68">(<argument pos:start="41:60" pos:end="41:67"><expr pos:start="41:60" pos:end="41:67"><name pos:start="41:60" pos:end="41:67">poll_fds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:49"><expr pos:start="43:5" pos:end="43:48"><call pos:start="43:5" pos:end="43:48"><name pos:start="43:5" pos:end="43:12">g_assert</name><argument_list pos:start="43:13" pos:end="43:48">(<argument pos:start="43:14" pos:end="43:47"><expr pos:start="43:14" pos:end="43:47"><name pos:start="43:14" pos:end="43:23">n_poll_fds</name> <operator pos:start="43:25" pos:end="43:26">&lt;=</operator> <call pos:start="43:28" pos:end="43:47"><name pos:start="43:28" pos:end="43:37">ARRAY_SIZE</name><argument_list pos:start="43:38" pos:end="43:47">(<argument pos:start="43:39" pos:end="43:46"><expr pos:start="43:39" pos:end="43:46"><name pos:start="43:39" pos:end="43:46">poll_fds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="47:5" pos:end="53:5">for <control pos:start="47:9" pos:end="47:32">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:27"><expr pos:start="47:17" pos:end="47:26"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <name pos:start="47:21" pos:end="47:26"><name pos:start="47:21" pos:end="47:21">w</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:26">num</name></name></expr>;</condition> <incr pos:start="47:29" pos:end="47:31"><expr pos:start="47:29" pos:end="47:31"><name pos:start="47:29" pos:end="47:29">i</name><operator pos:start="47:30" pos:end="47:31">++</operator></expr></incr>)</control> <block pos:start="47:34" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:50">

        <expr_stmt pos:start="49:9" pos:end="49:62"><expr pos:start="49:9" pos:end="49:61"><name pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:16">poll_fds</name><index pos:start="49:17" pos:end="49:32">[<expr pos:start="49:18" pos:end="49:31"><name pos:start="49:18" pos:end="49:27">n_poll_fds</name> <operator pos:start="49:29" pos:end="49:29">+</operator> <name pos:start="49:31" pos:end="49:31">i</name></expr>]</index></name><operator pos:start="49:33" pos:end="49:33">.</operator><name pos:start="49:34" pos:end="49:35">fd</name> <operator pos:start="49:37" pos:end="49:37">=</operator> <operator pos:start="49:39" pos:end="49:39">(</operator><name pos:start="49:40" pos:end="49:48">DWORD_PTR</name><operator pos:start="49:49" pos:end="49:49">)</operator><name pos:start="49:50" pos:end="49:61"><name pos:start="49:50" pos:end="49:50">w</name><operator pos:start="49:51" pos:end="49:52">-&gt;</operator><name pos:start="49:53" pos:end="49:58">events</name><index pos:start="49:59" pos:end="49:61">[<expr pos:start="49:60" pos:end="49:60"><name pos:start="49:60" pos:end="49:60">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:50"><expr pos:start="51:9" pos:end="51:49"><name pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:16">poll_fds</name><index pos:start="51:17" pos:end="51:32">[<expr pos:start="51:18" pos:end="51:31"><name pos:start="51:18" pos:end="51:27">n_poll_fds</name> <operator pos:start="51:29" pos:end="51:29">+</operator> <name pos:start="51:31" pos:end="51:31">i</name></expr>]</index></name><operator pos:start="51:33" pos:end="51:33">.</operator><name pos:start="51:34" pos:end="51:39">events</name> <operator pos:start="51:41" pos:end="51:41">=</operator> <name pos:start="51:43" pos:end="51:49">G_IO_IN</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:51">(<expr pos:start="57:9" pos:end="57:50"><name pos:start="57:9" pos:end="57:20">poll_timeout</name> <operator pos:start="57:22" pos:end="57:22">&lt;</operator> <literal type="number" pos:start="57:24" pos:end="57:24">0</literal> <operator pos:start="57:26" pos:end="57:27">||</operator> <name pos:start="57:29" pos:end="57:35">timeout</name> <operator pos:start="57:37" pos:end="57:37">&lt;</operator> <name pos:start="57:39" pos:end="57:50">poll_timeout</name></expr>)</condition> <block pos:start="57:53" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:31">

        <expr_stmt pos:start="59:9" pos:end="59:31"><expr pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:20">poll_timeout</name> <operator pos:start="59:22" pos:end="59:22">=</operator> <name pos:start="59:24" pos:end="59:30">timeout</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:33"><expr pos:start="65:5" pos:end="65:32"><call pos:start="65:5" pos:end="65:32"><name pos:start="65:5" pos:end="65:30">qemu_mutex_unlock_iothread</name><argument_list pos:start="65:31" pos:end="65:32">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:69"><expr pos:start="67:5" pos:end="67:68"><name pos:start="67:5" pos:end="67:14">g_poll_ret</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <call pos:start="67:18" pos:end="67:68"><name pos:start="67:18" pos:end="67:23">g_poll</name><argument_list pos:start="67:24" pos:end="67:68">(<argument pos:start="67:25" pos:end="67:32"><expr pos:start="67:25" pos:end="67:32"><name pos:start="67:25" pos:end="67:32">poll_fds</name></expr></argument>, <argument pos:start="67:35" pos:end="67:53"><expr pos:start="67:35" pos:end="67:53"><name pos:start="67:35" pos:end="67:44">n_poll_fds</name> <operator pos:start="67:46" pos:end="67:46">+</operator> <name pos:start="67:48" pos:end="67:53"><name pos:start="67:48" pos:end="67:48">w</name><operator pos:start="67:49" pos:end="67:50">-&gt;</operator><name pos:start="67:51" pos:end="67:53">num</name></name></expr></argument>, <argument pos:start="67:56" pos:end="67:67"><expr pos:start="67:56" pos:end="67:67"><name pos:start="67:56" pos:end="67:67">poll_timeout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:31"><expr pos:start="69:5" pos:end="69:30"><call pos:start="69:5" pos:end="69:30"><name pos:start="69:5" pos:end="69:28">qemu_mutex_lock_iothread</name><argument_list pos:start="69:29" pos:end="69:30">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="89:5"><if pos:start="71:5" pos:end="89:5">if <condition pos:start="71:8" pos:end="71:23">(<expr pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:18">g_poll_ret</name> <operator pos:start="71:20" pos:end="71:20">&gt;</operator> <literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr>)</condition> <block pos:start="71:25" pos:end="89:5">{<block_content pos:start="73:9" pos:end="87:9">

        <for pos:start="73:9" pos:end="77:9">for <control pos:start="73:13" pos:end="73:36">(<init pos:start="73:14" pos:end="73:19"><expr pos:start="73:14" pos:end="73:18"><name pos:start="73:14" pos:end="73:14">i</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <literal type="number" pos:start="73:18" pos:end="73:18">0</literal></expr>;</init> <condition pos:start="73:21" pos:end="73:31"><expr pos:start="73:21" pos:end="73:30"><name pos:start="73:21" pos:end="73:21">i</name> <operator pos:start="73:23" pos:end="73:23">&lt;</operator> <name pos:start="73:25" pos:end="73:30"><name pos:start="73:25" pos:end="73:25">w</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:30">num</name></name></expr>;</condition> <incr pos:start="73:33" pos:end="73:35"><expr pos:start="73:33" pos:end="73:35"><name pos:start="73:33" pos:end="73:33">i</name><operator pos:start="73:34" pos:end="73:35">++</operator></expr></incr>)</control> <block pos:start="73:38" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:61">

            <expr_stmt pos:start="75:13" pos:end="75:61"><expr pos:start="75:13" pos:end="75:60"><name pos:start="75:13" pos:end="75:25"><name pos:start="75:13" pos:end="75:13">w</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:22">revents</name><index pos:start="75:23" pos:end="75:25">[<expr pos:start="75:24" pos:end="75:24"><name pos:start="75:24" pos:end="75:24">i</name></expr>]</index></name> <operator pos:start="75:27" pos:end="75:27">=</operator> <name pos:start="75:29" pos:end="75:52"><name pos:start="75:29" pos:end="75:36">poll_fds</name><index pos:start="75:37" pos:end="75:52">[<expr pos:start="75:38" pos:end="75:51"><name pos:start="75:38" pos:end="75:47">n_poll_fds</name> <operator pos:start="75:49" pos:end="75:49">+</operator> <name pos:start="75:51" pos:end="75:51">i</name></expr>]</index></name><operator pos:start="75:53" pos:end="75:53">.</operator><name pos:start="75:54" pos:end="75:60">revents</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="79:9" pos:end="87:9">for <control pos:start="79:13" pos:end="79:36">(<init pos:start="79:14" pos:end="79:19"><expr pos:start="79:14" pos:end="79:18"><name pos:start="79:14" pos:end="79:14">i</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <literal type="number" pos:start="79:18" pos:end="79:18">0</literal></expr>;</init> <condition pos:start="79:21" pos:end="79:31"><expr pos:start="79:21" pos:end="79:30"><name pos:start="79:21" pos:end="79:21">i</name> <operator pos:start="79:23" pos:end="79:23">&lt;</operator> <name pos:start="79:25" pos:end="79:30"><name pos:start="79:25" pos:end="79:25">w</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:30">num</name></name></expr>;</condition> <incr pos:start="79:33" pos:end="79:35"><expr pos:start="79:33" pos:end="79:35"><name pos:start="79:33" pos:end="79:33">i</name><operator pos:start="79:34" pos:end="79:35">++</operator></expr></incr>)</control> <block pos:start="79:38" pos:end="87:9">{<block_content pos:start="81:13" pos:end="85:13">

            <if_stmt pos:start="81:13" pos:end="85:13"><if pos:start="81:13" pos:end="85:13">if <condition pos:start="81:16" pos:end="81:44">(<expr pos:start="81:17" pos:end="81:43"><name pos:start="81:17" pos:end="81:29"><name pos:start="81:17" pos:end="81:17">w</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:26">revents</name><index pos:start="81:27" pos:end="81:29">[<expr pos:start="81:28" pos:end="81:28"><name pos:start="81:28" pos:end="81:28">i</name></expr>]</index></name> <operator pos:start="81:31" pos:end="81:32">&amp;&amp;</operator> <name pos:start="81:34" pos:end="81:43"><name pos:start="81:34" pos:end="81:34">w</name><operator pos:start="81:35" pos:end="81:36">-&gt;</operator><name pos:start="81:37" pos:end="81:40">func</name><index pos:start="81:41" pos:end="81:43">[<expr pos:start="81:42" pos:end="81:42"><name pos:start="81:42" pos:end="81:42">i</name></expr>]</index></name></expr>)</condition> <block pos:start="81:46" pos:end="85:13">{<block_content pos:start="83:17" pos:end="83:41">

                <expr_stmt pos:start="83:17" pos:end="83:41"><expr pos:start="83:17" pos:end="83:40"><name pos:start="83:17" pos:end="83:26"><name pos:start="83:17" pos:end="83:17">w</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:23">func</name><index pos:start="83:24" pos:end="83:26">[<expr pos:start="83:25" pos:end="83:25"><name pos:start="83:25" pos:end="83:25">i</name></expr>]</index></name><operator pos:start="83:27" pos:end="83:27">(</operator><name pos:start="83:28" pos:end="83:39"><name pos:start="83:28" pos:end="83:28">w</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:36">opaque</name><index pos:start="83:37" pos:end="83:39">[<expr pos:start="83:38" pos:end="83:38"><name pos:start="83:38" pos:end="83:38">i</name></expr>]</index></name><operator pos:start="83:40" pos:end="83:40">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="93:5" pos:end="97:5"><if pos:start="93:5" pos:end="97:5">if <condition pos:start="93:8" pos:end="93:74">(<expr pos:start="93:9" pos:end="93:73"><call pos:start="93:9" pos:end="93:73"><name pos:start="93:9" pos:end="93:28">g_main_context_check</name><argument_list pos:start="93:29" pos:end="93:73">(<argument pos:start="93:30" pos:end="93:36"><expr pos:start="93:30" pos:end="93:36"><name pos:start="93:30" pos:end="93:36">context</name></expr></argument>, <argument pos:start="93:39" pos:end="93:50"><expr pos:start="93:39" pos:end="93:50"><name pos:start="93:39" pos:end="93:50">max_priority</name></expr></argument>, <argument pos:start="93:53" pos:end="93:60"><expr pos:start="93:53" pos:end="93:60"><name pos:start="93:53" pos:end="93:60">poll_fds</name></expr></argument>, <argument pos:start="93:63" pos:end="93:72"><expr pos:start="93:63" pos:end="93:72"><name pos:start="93:63" pos:end="93:72">n_poll_fds</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:76" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:41">

        <expr_stmt pos:start="95:9" pos:end="95:41"><expr pos:start="95:9" pos:end="95:40"><call pos:start="95:9" pos:end="95:40"><name pos:start="95:9" pos:end="95:31">g_main_context_dispatch</name><argument_list pos:start="95:32" pos:end="95:40">(<argument pos:start="95:33" pos:end="95:39"><expr pos:start="95:33" pos:end="95:39"><name pos:start="95:33" pos:end="95:39">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="101:5" pos:end="105:7">/* Call select after g_poll to avoid a useless iteration and therefore

     * improve socket latency.

     */</comment>



    <if_stmt pos:start="109:5" pos:end="119:5"><if pos:start="109:5" pos:end="119:5">if <condition pos:start="109:8" pos:end="109:18">(<expr pos:start="109:9" pos:end="109:17"><name pos:start="109:9" pos:end="109:12">nfds</name> <operator pos:start="109:14" pos:end="109:15">&gt;=</operator> <literal type="number" pos:start="109:17" pos:end="109:17">0</literal></expr>)</condition> <block pos:start="109:20" pos:end="119:5">{<block_content pos:start="111:9" pos:end="117:9">

        <expr_stmt pos:start="111:9" pos:end="111:65"><expr pos:start="111:9" pos:end="111:64"><name pos:start="111:9" pos:end="111:18">select_ret</name> <operator pos:start="111:20" pos:end="111:20">=</operator> <call pos:start="111:22" pos:end="111:64"><name pos:start="111:22" pos:end="111:27">select</name><argument_list pos:start="111:28" pos:end="111:64">(<argument pos:start="111:29" pos:end="111:36"><expr pos:start="111:29" pos:end="111:36"><name pos:start="111:29" pos:end="111:32">nfds</name> <operator pos:start="111:34" pos:end="111:34">+</operator> <literal type="number" pos:start="111:36" pos:end="111:36">1</literal></expr></argument>, <argument pos:start="111:39" pos:end="111:43"><expr pos:start="111:39" pos:end="111:43"><operator pos:start="111:39" pos:end="111:39">&amp;</operator><name pos:start="111:40" pos:end="111:43">rfds</name></expr></argument>, <argument pos:start="111:46" pos:end="111:50"><expr pos:start="111:46" pos:end="111:50"><operator pos:start="111:46" pos:end="111:46">&amp;</operator><name pos:start="111:47" pos:end="111:50">wfds</name></expr></argument>, <argument pos:start="111:53" pos:end="111:57"><expr pos:start="111:53" pos:end="111:57"><operator pos:start="111:53" pos:end="111:53">&amp;</operator><name pos:start="111:54" pos:end="111:57">xfds</name></expr></argument>, <argument pos:start="111:60" pos:end="111:63"><expr pos:start="111:60" pos:end="111:63"><operator pos:start="111:60" pos:end="111:60">&amp;</operator><name pos:start="111:61" pos:end="111:63">tv0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="117:9"><if pos:start="113:9" pos:end="117:9">if <condition pos:start="113:12" pos:end="113:28">(<expr pos:start="113:13" pos:end="113:27"><name pos:start="113:13" pos:end="113:22">select_ret</name> <operator pos:start="113:24" pos:end="113:25">!=</operator> <literal type="number" pos:start="113:27" pos:end="113:27">0</literal></expr>)</condition> <block pos:start="113:30" pos:end="117:9">{<block_content pos:start="115:13" pos:end="115:24">

            <expr_stmt pos:start="115:13" pos:end="115:24"><expr pos:start="115:13" pos:end="115:23"><name pos:start="115:13" pos:end="115:19">timeout</name> <operator pos:start="115:21" pos:end="115:21">=</operator> <literal type="number" pos:start="115:23" pos:end="115:23">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="123:5" pos:end="123:36">return <expr pos:start="123:12" pos:end="123:35"><name pos:start="123:12" pos:end="123:21">select_ret</name> <operator pos:start="123:23" pos:end="123:24">||</operator> <name pos:start="123:26" pos:end="123:35">g_poll_ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
