<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/972.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">pfpu_start</name><parameter_list pos:start="1:23" pos:end="1:45">(<parameter pos:start="1:24" pos:end="1:44"><decl pos:start="1:24" pos:end="1:44"><type pos:start="1:24" pos:end="1:43"><name pos:start="1:24" pos:end="1:41">MilkymistPFPUState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:27">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">x</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="55:5">for <control pos:start="11:9" pos:end="11:47">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">y</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:42"><expr pos:start="11:17" pos:end="11:41"><name pos:start="11:17" pos:end="11:17">y</name> <operator pos:start="11:19" pos:end="11:20">&lt;=</operator> <name pos:start="11:22" pos:end="11:41"><name pos:start="11:22" pos:end="11:22">s</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:28">regs</name><index pos:start="11:29" pos:end="11:41">[<expr pos:start="11:30" pos:end="11:40"><name pos:start="11:30" pos:end="11:40">R_VMESHLAST</name></expr>]</index></name></expr>;</condition> <incr pos:start="11:44" pos:end="11:46"><expr pos:start="11:44" pos:end="11:46"><name pos:start="11:44" pos:end="11:44">y</name><operator pos:start="11:45" pos:end="11:46">++</operator></expr></incr>)</control> <block pos:start="11:49" pos:end="55:5">{<block_content pos:start="13:9" pos:end="53:9">

        <for pos:start="13:9" pos:end="53:9">for <control pos:start="13:13" pos:end="13:51">(<init pos:start="13:14" pos:end="13:19"><expr pos:start="13:14" pos:end="13:18"><name pos:start="13:14" pos:end="13:14">x</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr>;</init> <condition pos:start="13:21" pos:end="13:46"><expr pos:start="13:21" pos:end="13:45"><name pos:start="13:21" pos:end="13:21">x</name> <operator pos:start="13:23" pos:end="13:24">&lt;=</operator> <name pos:start="13:26" pos:end="13:45"><name pos:start="13:26" pos:end="13:26">s</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:32">regs</name><index pos:start="13:33" pos:end="13:45">[<expr pos:start="13:34" pos:end="13:44"><name pos:start="13:34" pos:end="13:44">R_HMESHLAST</name></expr>]</index></name></expr>;</condition> <incr pos:start="13:48" pos:end="13:50"><expr pos:start="13:48" pos:end="13:50"><name pos:start="13:48" pos:end="13:48">x</name><operator pos:start="13:49" pos:end="13:50">++</operator></expr></incr>)</control> <block pos:start="13:53" pos:end="53:9">{<block_content pos:start="15:13" pos:end="51:30">

            <expr_stmt pos:start="15:13" pos:end="15:63"><expr pos:start="15:13" pos:end="15:62"><call pos:start="15:13" pos:end="15:62"><name pos:start="15:13" pos:end="15:18">D_EXEC</name><argument_list pos:start="15:19" pos:end="15:62">(<argument pos:start="15:20" pos:end="15:61"><expr pos:start="15:20" pos:end="15:61"><call pos:start="15:20" pos:end="15:61"><name pos:start="15:20" pos:end="15:27">qemu_log</name><argument_list pos:start="15:28" pos:end="15:61">(<argument pos:start="15:29" pos:end="15:54"><expr pos:start="15:29" pos:end="15:54"><literal type="string" pos:start="15:29" pos:end="15:54">"\nprocessing x=%d y=%d\n"</literal></expr></argument>, <argument pos:start="15:57" pos:end="15:57"><expr pos:start="15:57" pos:end="15:57"><name pos:start="15:57" pos:end="15:57">x</name></expr></argument>, <argument pos:start="15:60" pos:end="15:60"><expr pos:start="15:60" pos:end="15:60"><name pos:start="15:60" pos:end="15:60">y</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="19:13" pos:end="19:38">/* set current position */</comment>

            <expr_stmt pos:start="21:13" pos:end="21:34"><expr pos:start="21:13" pos:end="21:33"><name pos:start="21:13" pos:end="21:29"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:22">gp_regs</name><index pos:start="21:23" pos:end="21:29">[<expr pos:start="21:24" pos:end="21:28"><name pos:start="21:24" pos:end="21:28">GPR_X</name></expr>]</index></name> <operator pos:start="21:31" pos:end="21:31">=</operator> <name pos:start="21:33" pos:end="21:33">x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:34"><expr pos:start="23:13" pos:end="23:33"><name pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:22">gp_regs</name><index pos:start="23:23" pos:end="23:29">[<expr pos:start="23:24" pos:end="23:28"><name pos:start="23:24" pos:end="23:28">GPR_Y</name></expr>]</index></name> <operator pos:start="23:31" pos:end="23:31">=</operator> <name pos:start="23:33" pos:end="23:33">y</name></expr>;</expr_stmt>



            <comment type="block" pos:start="27:13" pos:end="27:48">/* run microcode on this position */</comment>

            <expr_stmt pos:start="29:13" pos:end="29:18"><expr pos:start="29:13" pos:end="29:17"><name pos:start="29:13" pos:end="29:13">i</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>;</expr_stmt>

            <while pos:start="31:13" pos:end="45:13">while <condition pos:start="31:19" pos:end="31:39">(<expr pos:start="31:20" pos:end="31:38"><call pos:start="31:20" pos:end="31:38"><name pos:start="31:20" pos:end="31:35">pfpu_decode_insn</name><argument_list pos:start="31:36" pos:end="31:38">(<argument pos:start="31:37" pos:end="31:37"><expr pos:start="31:37" pos:end="31:37"><name pos:start="31:37" pos:end="31:37">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:41" pos:end="45:13">{<block_content pos:start="35:17" pos:end="43:17">

                <comment type="block" pos:start="33:17" pos:end="33:65">/* decode at most MICROCODE_WORDS instructions */</comment>

                <if_stmt pos:start="35:17" pos:end="43:17"><if pos:start="35:17" pos:end="43:17">if <condition pos:start="35:20" pos:end="35:43">(<expr pos:start="35:21" pos:end="35:42"><name pos:start="35:21" pos:end="35:21">i</name><operator pos:start="35:22" pos:end="35:23">++</operator> <operator pos:start="35:25" pos:end="35:26">&gt;=</operator> <name pos:start="35:28" pos:end="35:42">MICROCODE_WORDS</name></expr>)</condition> <block pos:start="35:45" pos:end="43:17">{<block_content pos:start="37:21" pos:end="41:26">

                    <expr_stmt pos:start="37:21" pos:end="39:66"><expr pos:start="37:21" pos:end="39:65"><call pos:start="37:21" pos:end="39:65"><name pos:start="37:21" pos:end="37:32">error_report</name><argument_list pos:start="37:33" pos:end="39:65">(<argument pos:start="37:34" pos:end="39:64"><expr pos:start="37:34" pos:end="39:64"><literal type="string" pos:start="37:34" pos:end="37:73">"milkymist_pfpu: too many instructions "</literal>

                            <literal type="string" pos:start="39:29" pos:end="39:64">"executed in microcode. No VECTOUT?"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="41:21" pos:end="41:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></while>



            <comment type="block" pos:start="49:13" pos:end="49:39">/* reset pc for next run */</comment>

            <expr_stmt pos:start="51:13" pos:end="51:30"><expr pos:start="51:13" pos:end="51:29"><name pos:start="51:13" pos:end="51:25"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:19">regs</name><index pos:start="51:20" pos:end="51:25">[<expr pos:start="51:21" pos:end="51:24"><name pos:start="51:21" pos:end="51:24">R_PC</name></expr>]</index></name> <operator pos:start="51:27" pos:end="51:27">=</operator> <literal type="number" pos:start="51:29" pos:end="51:29">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="59:5" pos:end="59:32"><expr pos:start="59:5" pos:end="59:31"><name pos:start="59:5" pos:end="59:23"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:11">regs</name><index pos:start="59:12" pos:end="59:23">[<expr pos:start="59:13" pos:end="59:22"><name pos:start="59:13" pos:end="59:22">R_VERTICES</name></expr>]</index></name> <operator pos:start="59:25" pos:end="59:25">=</operator> <name pos:start="59:27" pos:end="59:27">x</name> <operator pos:start="59:29" pos:end="59:29">*</operator> <name pos:start="59:31" pos:end="59:31">y</name></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:37"><expr pos:start="63:5" pos:end="63:36"><call pos:start="63:5" pos:end="63:36"><name pos:start="63:5" pos:end="63:34">trace_milkymist_pfpu_pulse_irq</name><argument_list pos:start="63:35" pos:end="63:36">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:27"><expr pos:start="65:5" pos:end="65:26"><call pos:start="65:5" pos:end="65:26"><name pos:start="65:5" pos:end="65:18">qemu_irq_pulse</name><argument_list pos:start="65:19" pos:end="65:26">(<argument pos:start="65:20" pos:end="65:25"><expr pos:start="65:20" pos:end="65:25"><name pos:start="65:20" pos:end="65:25"><name pos:start="65:20" pos:end="65:20">s</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:25">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
