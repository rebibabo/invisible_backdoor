<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16923.c" pos:tabs="8"><function pos:start="1:1" pos:end="3386:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">disas_sparc_insn</name><parameter_list pos:start="1:29" pos:end="1:47">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:41">DisasContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type> <name pos:start="1:45" pos:end="1:46">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="3386:1">{<block_content pos:start="5:5" pos:end="3385:0">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:21">insn</name></decl>, <decl pos:start="5:24" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:24" pos:end="5:26">opc</name></decl>, <decl pos:start="5:29" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:29" pos:end="5:31">rs1</name></decl>, <decl pos:start="5:34" pos:end="5:36"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:34" pos:end="5:36">rs2</name></decl>, <decl pos:start="5:39" pos:end="5:40"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:39" pos:end="5:40">rd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:28"><expr pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:8">insn</name> <operator pos:start="9:10" pos:end="9:10">=</operator> <call pos:start="9:12" pos:end="9:27"><name pos:start="9:12" pos:end="9:19">ldl_code</name><argument_list pos:start="9:20" pos:end="9:27">(<argument pos:start="9:21" pos:end="9:26"><expr pos:start="9:21" pos:end="9:26"><name pos:start="9:21" pos:end="9:26"><name pos:start="9:21" pos:end="9:22">dc</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:26">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:32"><expr pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:7">opc</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:31"><name pos:start="11:11" pos:end="11:19">GET_FIELD</name><argument_list pos:start="11:20" pos:end="11:31">(<argument pos:start="11:21" pos:end="11:24"><expr pos:start="11:21" pos:end="11:24"><name pos:start="11:21" pos:end="11:24">insn</name></expr></argument>, <argument pos:start="11:27" pos:end="11:27"><expr pos:start="11:27" pos:end="11:27"><literal type="number" pos:start="11:27" pos:end="11:27">0</literal></expr></argument>, <argument pos:start="11:30" pos:end="11:30"><expr pos:start="11:30" pos:end="11:30"><literal type="number" pos:start="11:30" pos:end="11:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:6">rd</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <call pos:start="15:10" pos:end="15:30"><name pos:start="15:10" pos:end="15:18">GET_FIELD</name><argument_list pos:start="15:19" pos:end="15:30">(<argument pos:start="15:20" pos:end="15:23"><expr pos:start="15:20" pos:end="15:23"><name pos:start="15:20" pos:end="15:23">insn</name></expr></argument>, <argument pos:start="15:26" pos:end="15:26"><expr pos:start="15:26" pos:end="15:26"><literal type="number" pos:start="15:26" pos:end="15:26">2</literal></expr></argument>, <argument pos:start="15:29" pos:end="15:29"><expr pos:start="15:29" pos:end="15:29"><literal type="number" pos:start="15:29" pos:end="15:29">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="17:5" pos:end="3308:5">switch <condition pos:start="17:12" pos:end="17:16">(<expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">opc</name></expr>)</condition> <block pos:start="17:18" pos:end="3308:5">{<block_content pos:start="19:5" pos:end="3306:14">

    <case pos:start="19:5" pos:end="19:11">case <expr pos:start="19:10" pos:end="19:10"><literal type="number" pos:start="19:10" pos:end="19:10">0</literal></expr>:</case>			<comment type="block" pos:start="19:33" pos:end="19:52">/* branches/sethi */</comment>

	<block pos:start="21:9" pos:end="177:9">{<block_content pos:start="23:13" pos:end="175:18">

	    <decl_stmt pos:start="23:13" pos:end="23:53"><decl pos:start="23:13" pos:end="23:52"><type pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:20">unsigned</name> <name pos:start="23:22" pos:end="23:24">int</name></type> <name pos:start="23:26" pos:end="23:28">xop</name> <init pos:start="23:30" pos:end="23:52">= <expr pos:start="23:32" pos:end="23:52"><call pos:start="23:32" pos:end="23:52"><name pos:start="23:32" pos:end="23:40">GET_FIELD</name><argument_list pos:start="23:41" pos:end="23:52">(<argument pos:start="23:42" pos:end="23:45"><expr pos:start="23:42" pos:end="23:45"><name pos:start="23:42" pos:end="23:45">insn</name></expr></argument>, <argument pos:start="23:48" pos:end="23:48"><expr pos:start="23:48" pos:end="23:48"><literal type="number" pos:start="23:48" pos:end="23:48">7</literal></expr></argument>, <argument pos:start="23:51" pos:end="23:51"><expr pos:start="23:51" pos:end="23:51"><literal type="number" pos:start="23:51" pos:end="23:51">9</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	    <decl_stmt pos:start="25:13" pos:end="25:27"><decl pos:start="25:13" pos:end="25:26"><type pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:19">int32_t</name></type> <name pos:start="25:21" pos:end="25:26">target</name></decl>;</decl_stmt>

	    <switch pos:start="27:13" pos:end="173:13">switch <condition pos:start="27:20" pos:end="27:24">(<expr pos:start="27:21" pos:end="27:23"><name pos:start="27:21" pos:end="27:23">xop</name></expr>)</condition> <block pos:start="27:26" pos:end="173:13">{<block_content pos:start="31:13" pos:end="170:20">

<cpp:ifdef pos:start="29:1" pos:end="29:21">#<cpp:directive pos:start="29:2" pos:end="29:6">ifdef</cpp:directive> <name pos:start="29:8" pos:end="29:21">TARGET_SPARC64</name></cpp:ifdef>

	    <case pos:start="31:13" pos:end="31:21">case <expr pos:start="31:18" pos:end="31:20"><literal type="number" pos:start="31:18" pos:end="31:20">0x1</literal></expr>:</case>		<comment type="block" pos:start="31:33" pos:end="31:45">/* V9 BPcc */</comment>

		<block pos:start="33:17" pos:end="60:17">{<block_content pos:start="35:21" pos:end="58:34">

		    <decl_stmt pos:start="35:21" pos:end="35:27"><decl pos:start="35:21" pos:end="35:26"><type pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:23">int</name></type> <name pos:start="35:25" pos:end="35:26">cc</name></decl>;</decl_stmt>



		    <expr_stmt pos:start="39:21" pos:end="39:55"><expr pos:start="39:21" pos:end="39:54"><name pos:start="39:21" pos:end="39:26">target</name> <operator pos:start="39:28" pos:end="39:28">=</operator> <call pos:start="39:30" pos:end="39:54"><name pos:start="39:30" pos:end="39:41">GET_FIELD_SP</name><argument_list pos:start="39:42" pos:end="39:54">(<argument pos:start="39:43" pos:end="39:46"><expr pos:start="39:43" pos:end="39:46"><name pos:start="39:43" pos:end="39:46">insn</name></expr></argument>, <argument pos:start="39:49" pos:end="39:49"><expr pos:start="39:49" pos:end="39:49"><literal type="number" pos:start="39:49" pos:end="39:49">0</literal></expr></argument>, <argument pos:start="39:52" pos:end="39:53"><expr pos:start="39:52" pos:end="39:53"><literal type="number" pos:start="39:52" pos:end="39:53">18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="41:21" pos:end="41:53"><expr pos:start="41:21" pos:end="41:52"><name pos:start="41:21" pos:end="41:26">target</name> <operator pos:start="41:28" pos:end="41:28">=</operator> <call pos:start="41:30" pos:end="41:52"><name pos:start="41:30" pos:end="41:40">sign_extend</name><argument_list pos:start="41:41" pos:end="41:52">(<argument pos:start="41:42" pos:end="41:47"><expr pos:start="41:42" pos:end="41:47"><name pos:start="41:42" pos:end="41:47">target</name></expr></argument>, <argument pos:start="41:50" pos:end="41:51"><expr pos:start="41:50" pos:end="41:51"><literal type="number" pos:start="41:50" pos:end="41:51">18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="43:21" pos:end="43:33"><expr pos:start="43:21" pos:end="43:32"><name pos:start="43:21" pos:end="43:26">target</name> <operator pos:start="43:28" pos:end="43:30">&lt;&lt;=</operator> <literal type="number" pos:start="43:32" pos:end="43:32">2</literal></expr>;</expr_stmt>

		    <expr_stmt pos:start="45:21" pos:end="45:52"><expr pos:start="45:21" pos:end="45:51"><name pos:start="45:21" pos:end="45:22">cc</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <call pos:start="45:26" pos:end="45:51"><name pos:start="45:26" pos:end="45:37">GET_FIELD_SP</name><argument_list pos:start="45:38" pos:end="45:51">(<argument pos:start="45:39" pos:end="45:42"><expr pos:start="45:39" pos:end="45:42"><name pos:start="45:39" pos:end="45:42">insn</name></expr></argument>, <argument pos:start="45:45" pos:end="45:46"><expr pos:start="45:45" pos:end="45:46"><literal type="number" pos:start="45:45" pos:end="45:46">20</literal></expr></argument>, <argument pos:start="45:49" pos:end="45:50"><expr pos:start="45:49" pos:end="45:50"><literal type="number" pos:start="45:49" pos:end="45:50">21</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <if_stmt pos:start="47:21" pos:end="58:34"><if pos:start="47:21" pos:end="49:55">if <condition pos:start="47:24" pos:end="47:32">(<expr pos:start="47:25" pos:end="47:31"><name pos:start="47:25" pos:end="47:26">cc</name> <operator pos:start="47:28" pos:end="47:29">==</operator> <literal type="number" pos:start="47:31" pos:end="47:31">0</literal></expr>)</condition><block type="pseudo" pos:start="49:25" pos:end="49:55"><block_content pos:start="49:25" pos:end="49:55">

			<expr_stmt pos:start="49:25" pos:end="49:55"><expr pos:start="49:25" pos:end="49:54"><call pos:start="49:25" pos:end="49:54"><name pos:start="49:25" pos:end="49:33">do_branch</name><argument_list pos:start="49:34" pos:end="49:54">(<argument pos:start="49:35" pos:end="49:36"><expr pos:start="49:35" pos:end="49:36"><name pos:start="49:35" pos:end="49:36">dc</name></expr></argument>, <argument pos:start="49:39" pos:end="49:44"><expr pos:start="49:39" pos:end="49:44"><name pos:start="49:39" pos:end="49:44">target</name></expr></argument>, <argument pos:start="49:47" pos:end="49:50"><expr pos:start="49:47" pos:end="49:50"><name pos:start="49:47" pos:end="49:50">insn</name></expr></argument>, <argument pos:start="49:53" pos:end="49:53"><expr pos:start="49:53" pos:end="49:53"><literal type="number" pos:start="49:53" pos:end="49:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

		    <if type="elseif" pos:start="51:21" pos:end="53:55">else if <condition pos:start="51:29" pos:end="51:37">(<expr pos:start="51:30" pos:end="51:36"><name pos:start="51:30" pos:end="51:31">cc</name> <operator pos:start="51:33" pos:end="51:34">==</operator> <literal type="number" pos:start="51:36" pos:end="51:36">2</literal></expr>)</condition><block type="pseudo" pos:start="53:25" pos:end="53:55"><block_content pos:start="53:25" pos:end="53:55">

			<expr_stmt pos:start="53:25" pos:end="53:55"><expr pos:start="53:25" pos:end="53:54"><call pos:start="53:25" pos:end="53:54"><name pos:start="53:25" pos:end="53:33">do_branch</name><argument_list pos:start="53:34" pos:end="53:54">(<argument pos:start="53:35" pos:end="53:36"><expr pos:start="53:35" pos:end="53:36"><name pos:start="53:35" pos:end="53:36">dc</name></expr></argument>, <argument pos:start="53:39" pos:end="53:44"><expr pos:start="53:39" pos:end="53:44"><name pos:start="53:39" pos:end="53:44">target</name></expr></argument>, <argument pos:start="53:47" pos:end="53:50"><expr pos:start="53:47" pos:end="53:50"><name pos:start="53:47" pos:end="53:50">insn</name></expr></argument>, <argument pos:start="53:53" pos:end="53:53"><expr pos:start="53:53" pos:end="53:53"><literal type="number" pos:start="53:53" pos:end="53:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

		    <else pos:start="55:21" pos:end="58:34">else<block type="pseudo" pos:start="58:21" pos:end="58:34"><block_content pos:start="58:21" pos:end="58:34">


		    <goto pos:start="58:21" pos:end="58:34">goto <name pos:start="58:26" pos:end="58:33">jmp_insn</name>;</goto></block_content></block></else></if_stmt>

		</block_content>}</block>

	    <case pos:start="62:13" pos:end="62:21">case <expr pos:start="62:18" pos:end="62:20"><literal type="number" pos:start="62:18" pos:end="62:20">0x3</literal></expr>:</case>		<comment type="block" pos:start="62:33" pos:end="62:44">/* V9 BPr */</comment>

		<block pos:start="64:17" pos:end="82:17">{<block_content pos:start="66:21" pos:end="80:34">

		    <expr_stmt pos:start="66:21" pos:end="68:59"><expr pos:start="66:21" pos:end="68:58"><name pos:start="66:21" pos:end="66:26">target</name> <operator pos:start="66:28" pos:end="66:28">=</operator> <call pos:start="66:30" pos:end="66:54"><name pos:start="66:30" pos:end="66:41">GET_FIELD_SP</name><argument_list pos:start="66:42" pos:end="66:54">(<argument pos:start="66:43" pos:end="66:46"><expr pos:start="66:43" pos:end="66:46"><name pos:start="66:43" pos:end="66:46">insn</name></expr></argument>, <argument pos:start="66:49" pos:end="66:49"><expr pos:start="66:49" pos:end="66:49"><literal type="number" pos:start="66:49" pos:end="66:49">0</literal></expr></argument>, <argument pos:start="66:52" pos:end="66:53"><expr pos:start="66:52" pos:end="66:53"><literal type="number" pos:start="66:52" pos:end="66:53">13</literal></expr></argument>)</argument_list></call> <operator pos:start="66:56" pos:end="66:56">|</operator> 

                        <operator pos:start="68:25" pos:end="68:25">(</operator><call pos:start="68:26" pos:end="68:51"><name pos:start="68:26" pos:end="68:37">GET_FIELD_SP</name><argument_list pos:start="68:38" pos:end="68:51">(<argument pos:start="68:39" pos:end="68:42"><expr pos:start="68:39" pos:end="68:42"><name pos:start="68:39" pos:end="68:42">insn</name></expr></argument>, <argument pos:start="68:45" pos:end="68:46"><expr pos:start="68:45" pos:end="68:46"><literal type="number" pos:start="68:45" pos:end="68:46">20</literal></expr></argument>, <argument pos:start="68:49" pos:end="68:50"><expr pos:start="68:49" pos:end="68:50"><literal type="number" pos:start="68:49" pos:end="68:50">21</literal></expr></argument>)</argument_list></call> <operator pos:start="68:53" pos:end="68:54">&lt;&lt;</operator> <literal type="number" pos:start="68:56" pos:end="68:57">14</literal><operator pos:start="68:58" pos:end="68:58">)</operator></expr>;</expr_stmt>

		    <expr_stmt pos:start="70:21" pos:end="70:53"><expr pos:start="70:21" pos:end="70:52"><name pos:start="70:21" pos:end="70:26">target</name> <operator pos:start="70:28" pos:end="70:28">=</operator> <call pos:start="70:30" pos:end="70:52"><name pos:start="70:30" pos:end="70:40">sign_extend</name><argument_list pos:start="70:41" pos:end="70:52">(<argument pos:start="70:42" pos:end="70:47"><expr pos:start="70:42" pos:end="70:47"><name pos:start="70:42" pos:end="70:47">target</name></expr></argument>, <argument pos:start="70:50" pos:end="70:51"><expr pos:start="70:50" pos:end="70:51"><literal type="number" pos:start="70:50" pos:end="70:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="72:21" pos:end="72:33"><expr pos:start="72:21" pos:end="72:32"><name pos:start="72:21" pos:end="72:26">target</name> <operator pos:start="72:28" pos:end="72:30">&lt;&lt;=</operator> <literal type="number" pos:start="72:32" pos:end="72:32">2</literal></expr>;</expr_stmt>

		    <expr_stmt pos:start="74:21" pos:end="74:50"><expr pos:start="74:21" pos:end="74:49"><name pos:start="74:21" pos:end="74:23">rs1</name> <operator pos:start="74:25" pos:end="74:25">=</operator> <call pos:start="74:27" pos:end="74:49"><name pos:start="74:27" pos:end="74:35">GET_FIELD</name><argument_list pos:start="74:36" pos:end="74:49">(<argument pos:start="74:37" pos:end="74:40"><expr pos:start="74:37" pos:end="74:40"><name pos:start="74:37" pos:end="74:40">insn</name></expr></argument>, <argument pos:start="74:43" pos:end="74:44"><expr pos:start="74:43" pos:end="74:44"><literal type="number" pos:start="74:43" pos:end="74:44">13</literal></expr></argument>, <argument pos:start="74:47" pos:end="74:48"><expr pos:start="74:47" pos:end="74:48"><literal type="number" pos:start="74:47" pos:end="74:48">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="76:21" pos:end="76:41"><expr pos:start="76:21" pos:end="76:40"><call pos:start="76:21" pos:end="76:40"><name pos:start="76:21" pos:end="76:35">gen_movl_reg_T0</name><argument_list pos:start="76:36" pos:end="76:40">(<argument pos:start="76:37" pos:end="76:39"><expr pos:start="76:37" pos:end="76:39"><name pos:start="76:37" pos:end="76:39">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="78:21" pos:end="78:52"><expr pos:start="78:21" pos:end="78:51"><call pos:start="78:21" pos:end="78:51"><name pos:start="78:21" pos:end="78:33">do_branch_reg</name><argument_list pos:start="78:34" pos:end="78:51">(<argument pos:start="78:35" pos:end="78:36"><expr pos:start="78:35" pos:end="78:36"><name pos:start="78:35" pos:end="78:36">dc</name></expr></argument>, <argument pos:start="78:39" pos:end="78:44"><expr pos:start="78:39" pos:end="78:44"><name pos:start="78:39" pos:end="78:44">target</name></expr></argument>, <argument pos:start="78:47" pos:end="78:50"><expr pos:start="78:47" pos:end="78:50"><name pos:start="78:47" pos:end="78:50">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <goto pos:start="80:21" pos:end="80:34">goto <name pos:start="80:26" pos:end="80:33">jmp_insn</name>;</goto>

		</block_content>}</block>

	    <case pos:start="84:13" pos:end="84:21">case <expr pos:start="84:18" pos:end="84:20"><literal type="number" pos:start="84:18" pos:end="84:20">0x5</literal></expr>:</case>		<comment type="block" pos:start="84:33" pos:end="84:46">/* V9 FBPcc */</comment>

		<block pos:start="86:17" pos:end="107:0">{<block_content pos:start="88:21" pos:end="102:34">

		    <decl_stmt pos:start="88:21" pos:end="88:56"><decl pos:start="88:21" pos:end="88:55"><type pos:start="88:21" pos:end="88:23"><name pos:start="88:21" pos:end="88:23">int</name></type> <name pos:start="88:25" pos:end="88:26">cc</name> <init pos:start="88:28" pos:end="88:55">= <expr pos:start="88:30" pos:end="88:55"><call pos:start="88:30" pos:end="88:55"><name pos:start="88:30" pos:end="88:41">GET_FIELD_SP</name><argument_list pos:start="88:42" pos:end="88:55">(<argument pos:start="88:43" pos:end="88:46"><expr pos:start="88:43" pos:end="88:46"><name pos:start="88:43" pos:end="88:46">insn</name></expr></argument>, <argument pos:start="88:49" pos:end="88:50"><expr pos:start="88:49" pos:end="88:50"><literal type="number" pos:start="88:49" pos:end="88:50">20</literal></expr></argument>, <argument pos:start="88:53" pos:end="88:54"><expr pos:start="88:53" pos:end="88:54"><literal type="number" pos:start="88:53" pos:end="88:54">21</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="90:21" pos:end="92:38"><if pos:start="90:21" pos:end="92:38">if <condition pos:start="90:24" pos:end="90:45">(<expr pos:start="90:25" pos:end="90:44"><call pos:start="90:25" pos:end="90:44"><name pos:start="90:25" pos:end="90:40">gen_trap_ifnofpu</name><argument_list pos:start="90:41" pos:end="90:44">(<argument pos:start="90:42" pos:end="90:43"><expr pos:start="90:42" pos:end="90:43"><name pos:start="90:42" pos:end="90:43">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="92:25" pos:end="92:38"><block_content pos:start="92:25" pos:end="92:38">

                        <goto pos:start="92:25" pos:end="92:38">goto <name pos:start="92:30" pos:end="92:37">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

		    <expr_stmt pos:start="94:21" pos:end="94:55"><expr pos:start="94:21" pos:end="94:54"><name pos:start="94:21" pos:end="94:26">target</name> <operator pos:start="94:28" pos:end="94:28">=</operator> <call pos:start="94:30" pos:end="94:54"><name pos:start="94:30" pos:end="94:41">GET_FIELD_SP</name><argument_list pos:start="94:42" pos:end="94:54">(<argument pos:start="94:43" pos:end="94:46"><expr pos:start="94:43" pos:end="94:46"><name pos:start="94:43" pos:end="94:46">insn</name></expr></argument>, <argument pos:start="94:49" pos:end="94:49"><expr pos:start="94:49" pos:end="94:49"><literal type="number" pos:start="94:49" pos:end="94:49">0</literal></expr></argument>, <argument pos:start="94:52" pos:end="94:53"><expr pos:start="94:52" pos:end="94:53"><literal type="number" pos:start="94:52" pos:end="94:53">18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="96:21" pos:end="96:53"><expr pos:start="96:21" pos:end="96:52"><name pos:start="96:21" pos:end="96:26">target</name> <operator pos:start="96:28" pos:end="96:28">=</operator> <call pos:start="96:30" pos:end="96:52"><name pos:start="96:30" pos:end="96:40">sign_extend</name><argument_list pos:start="96:41" pos:end="96:52">(<argument pos:start="96:42" pos:end="96:47"><expr pos:start="96:42" pos:end="96:47"><name pos:start="96:42" pos:end="96:47">target</name></expr></argument>, <argument pos:start="96:50" pos:end="96:51"><expr pos:start="96:50" pos:end="96:51"><literal type="number" pos:start="96:50" pos:end="96:51">19</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="98:21" pos:end="98:33"><expr pos:start="98:21" pos:end="98:32"><name pos:start="98:21" pos:end="98:26">target</name> <operator pos:start="98:28" pos:end="98:30">&lt;&lt;=</operator> <literal type="number" pos:start="98:32" pos:end="98:32">2</literal></expr>;</expr_stmt>

		    <expr_stmt pos:start="100:21" pos:end="100:53"><expr pos:start="100:21" pos:end="100:52"><call pos:start="100:21" pos:end="100:52"><name pos:start="100:21" pos:end="100:30">do_fbranch</name><argument_list pos:start="100:31" pos:end="100:52">(<argument pos:start="100:32" pos:end="100:33"><expr pos:start="100:32" pos:end="100:33"><name pos:start="100:32" pos:end="100:33">dc</name></expr></argument>, <argument pos:start="100:36" pos:end="100:41"><expr pos:start="100:36" pos:end="100:41"><name pos:start="100:36" pos:end="100:41">target</name></expr></argument>, <argument pos:start="100:44" pos:end="100:47"><expr pos:start="100:44" pos:end="100:47"><name pos:start="100:44" pos:end="100:47">insn</name></expr></argument>, <argument pos:start="100:50" pos:end="100:51"><expr pos:start="100:50" pos:end="100:51"><name pos:start="100:50" pos:end="100:51">cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <goto pos:start="102:21" pos:end="102:34">goto <name pos:start="102:26" pos:end="102:33">jmp_insn</name>;</goto>

		</block_content>}</block>

<cpp:endif pos:start="106:1" pos:end="106:6">#<cpp:directive pos:start="106:2" pos:end="106:6">endif</cpp:directive></cpp:endif>

	    <case pos:start="108:13" pos:end="108:21">case <expr pos:start="108:18" pos:end="108:20"><literal type="number" pos:start="108:18" pos:end="108:20">0x2</literal></expr>:</case>		<comment type="block" pos:start="108:33" pos:end="108:42">/* BN+x */</comment>

		<block pos:start="110:17" pos:end="122:17">{<block_content pos:start="112:21" pos:end="120:34">

		    <expr_stmt pos:start="112:21" pos:end="112:53"><expr pos:start="112:21" pos:end="112:52"><name pos:start="112:21" pos:end="112:26">target</name> <operator pos:start="112:28" pos:end="112:28">=</operator> <call pos:start="112:30" pos:end="112:52"><name pos:start="112:30" pos:end="112:38">GET_FIELD</name><argument_list pos:start="112:39" pos:end="112:52">(<argument pos:start="112:40" pos:end="112:43"><expr pos:start="112:40" pos:end="112:43"><name pos:start="112:40" pos:end="112:43">insn</name></expr></argument>, <argument pos:start="112:46" pos:end="112:47"><expr pos:start="112:46" pos:end="112:47"><literal type="number" pos:start="112:46" pos:end="112:47">10</literal></expr></argument>, <argument pos:start="112:50" pos:end="112:51"><expr pos:start="112:50" pos:end="112:51"><literal type="number" pos:start="112:50" pos:end="112:51">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="114:21" pos:end="114:53"><expr pos:start="114:21" pos:end="114:52"><name pos:start="114:21" pos:end="114:26">target</name> <operator pos:start="114:28" pos:end="114:28">=</operator> <call pos:start="114:30" pos:end="114:52"><name pos:start="114:30" pos:end="114:40">sign_extend</name><argument_list pos:start="114:41" pos:end="114:52">(<argument pos:start="114:42" pos:end="114:47"><expr pos:start="114:42" pos:end="114:47"><name pos:start="114:42" pos:end="114:47">target</name></expr></argument>, <argument pos:start="114:50" pos:end="114:51"><expr pos:start="114:50" pos:end="114:51"><literal type="number" pos:start="114:50" pos:end="114:51">22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="116:21" pos:end="116:33"><expr pos:start="116:21" pos:end="116:32"><name pos:start="116:21" pos:end="116:26">target</name> <operator pos:start="116:28" pos:end="116:30">&lt;&lt;=</operator> <literal type="number" pos:start="116:32" pos:end="116:32">2</literal></expr>;</expr_stmt>

		    <expr_stmt pos:start="118:21" pos:end="118:51"><expr pos:start="118:21" pos:end="118:50"><call pos:start="118:21" pos:end="118:50"><name pos:start="118:21" pos:end="118:29">do_branch</name><argument_list pos:start="118:30" pos:end="118:50">(<argument pos:start="118:31" pos:end="118:32"><expr pos:start="118:31" pos:end="118:32"><name pos:start="118:31" pos:end="118:32">dc</name></expr></argument>, <argument pos:start="118:35" pos:end="118:40"><expr pos:start="118:35" pos:end="118:40"><name pos:start="118:35" pos:end="118:40">target</name></expr></argument>, <argument pos:start="118:43" pos:end="118:46"><expr pos:start="118:43" pos:end="118:46"><name pos:start="118:43" pos:end="118:46">insn</name></expr></argument>, <argument pos:start="118:49" pos:end="118:49"><expr pos:start="118:49" pos:end="118:49"><literal type="number" pos:start="118:49" pos:end="118:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <goto pos:start="120:21" pos:end="120:34">goto <name pos:start="120:26" pos:end="120:33">jmp_insn</name>;</goto>

		</block_content>}</block>

	    <case pos:start="124:13" pos:end="124:21">case <expr pos:start="124:18" pos:end="124:20"><literal type="number" pos:start="124:18" pos:end="124:20">0x6</literal></expr>:</case>		<comment type="block" pos:start="124:33" pos:end="124:43">/* FBN+x */</comment>

		<block pos:start="126:17" pos:end="142:17">{<block_content pos:start="128:21" pos:end="140:34">

                    <if_stmt pos:start="128:21" pos:end="130:38"><if pos:start="128:21" pos:end="130:38">if <condition pos:start="128:24" pos:end="128:45">(<expr pos:start="128:25" pos:end="128:44"><call pos:start="128:25" pos:end="128:44"><name pos:start="128:25" pos:end="128:40">gen_trap_ifnofpu</name><argument_list pos:start="128:41" pos:end="128:44">(<argument pos:start="128:42" pos:end="128:43"><expr pos:start="128:42" pos:end="128:43"><name pos:start="128:42" pos:end="128:43">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="130:25" pos:end="130:38"><block_content pos:start="130:25" pos:end="130:38">

                        <goto pos:start="130:25" pos:end="130:38">goto <name pos:start="130:30" pos:end="130:37">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

		    <expr_stmt pos:start="132:21" pos:end="132:53"><expr pos:start="132:21" pos:end="132:52"><name pos:start="132:21" pos:end="132:26">target</name> <operator pos:start="132:28" pos:end="132:28">=</operator> <call pos:start="132:30" pos:end="132:52"><name pos:start="132:30" pos:end="132:38">GET_FIELD</name><argument_list pos:start="132:39" pos:end="132:52">(<argument pos:start="132:40" pos:end="132:43"><expr pos:start="132:40" pos:end="132:43"><name pos:start="132:40" pos:end="132:43">insn</name></expr></argument>, <argument pos:start="132:46" pos:end="132:47"><expr pos:start="132:46" pos:end="132:47"><literal type="number" pos:start="132:46" pos:end="132:47">10</literal></expr></argument>, <argument pos:start="132:50" pos:end="132:51"><expr pos:start="132:50" pos:end="132:51"><literal type="number" pos:start="132:50" pos:end="132:51">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="134:21" pos:end="134:53"><expr pos:start="134:21" pos:end="134:52"><name pos:start="134:21" pos:end="134:26">target</name> <operator pos:start="134:28" pos:end="134:28">=</operator> <call pos:start="134:30" pos:end="134:52"><name pos:start="134:30" pos:end="134:40">sign_extend</name><argument_list pos:start="134:41" pos:end="134:52">(<argument pos:start="134:42" pos:end="134:47"><expr pos:start="134:42" pos:end="134:47"><name pos:start="134:42" pos:end="134:47">target</name></expr></argument>, <argument pos:start="134:50" pos:end="134:51"><expr pos:start="134:50" pos:end="134:51"><literal type="number" pos:start="134:50" pos:end="134:51">22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="136:21" pos:end="136:33"><expr pos:start="136:21" pos:end="136:32"><name pos:start="136:21" pos:end="136:26">target</name> <operator pos:start="136:28" pos:end="136:30">&lt;&lt;=</operator> <literal type="number" pos:start="136:32" pos:end="136:32">2</literal></expr>;</expr_stmt>

		    <expr_stmt pos:start="138:21" pos:end="138:52"><expr pos:start="138:21" pos:end="138:51"><call pos:start="138:21" pos:end="138:51"><name pos:start="138:21" pos:end="138:30">do_fbranch</name><argument_list pos:start="138:31" pos:end="138:51">(<argument pos:start="138:32" pos:end="138:33"><expr pos:start="138:32" pos:end="138:33"><name pos:start="138:32" pos:end="138:33">dc</name></expr></argument>, <argument pos:start="138:36" pos:end="138:41"><expr pos:start="138:36" pos:end="138:41"><name pos:start="138:36" pos:end="138:41">target</name></expr></argument>, <argument pos:start="138:44" pos:end="138:47"><expr pos:start="138:44" pos:end="138:47"><name pos:start="138:44" pos:end="138:47">insn</name></expr></argument>, <argument pos:start="138:50" pos:end="138:50"><expr pos:start="138:50" pos:end="138:50"><literal type="number" pos:start="138:50" pos:end="138:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <goto pos:start="140:21" pos:end="140:34">goto <name pos:start="140:26" pos:end="140:33">jmp_insn</name>;</goto>

		</block_content>}</block>

	    <case pos:start="144:13" pos:end="149:0">case <expr pos:start="144:18" pos:end="144:20"><literal type="number" pos:start="144:18" pos:end="144:20">0x4</literal></expr>:</case>		<comment type="block" pos:start="144:33" pos:end="144:43">/* SETHI */</comment>

<cpp:define pos:start="146:1" pos:end="146:13">#<cpp:directive pos:start="146:2" pos:end="146:7">define</cpp:directive> <cpp:macro pos:start="146:9" pos:end="146:13"><name pos:start="146:9" pos:end="146:13">OPTIM</name></cpp:macro></cpp:define>

<cpp:if pos:start="148:1" pos:end="148:18">#<cpp:directive pos:start="148:2" pos:end="148:3">if</cpp:directive> <expr pos:start="148:5" pos:end="148:18"><call pos:start="148:5" pos:end="148:18"><name pos:start="148:5" pos:end="148:11">defined</name><argument_list pos:start="148:12" pos:end="148:18">(<argument pos:start="148:13" pos:end="148:17"><expr pos:start="148:13" pos:end="148:17"><name pos:start="148:13" pos:end="148:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

		<if_stmt pos:start="150:17" pos:end="165:0"><if pos:start="150:17" pos:end="165:0">if <condition pos:start="150:20" pos:end="150:23">(<expr pos:start="150:21" pos:end="150:22"><name pos:start="150:21" pos:end="150:22">rd</name></expr>)</condition> <block pos:start="150:25" pos:end="165:0">{<block_content pos:start="154:21" pos:end="161:0"> <comment type="line" pos:start="150:27" pos:end="150:32">// nop</comment>

<cpp:endif pos:start="152:1" pos:end="152:6">#<cpp:directive pos:start="152:2" pos:end="152:6">endif</cpp:directive></cpp:endif>

		    <decl_stmt pos:start="154:21" pos:end="154:61"><decl pos:start="154:21" pos:end="154:60"><type pos:start="154:21" pos:end="154:28"><name pos:start="154:21" pos:end="154:28">uint32_t</name></type> <name pos:start="154:30" pos:end="154:34">value</name> <init pos:start="154:36" pos:end="154:60">= <expr pos:start="154:38" pos:end="154:60"><call pos:start="154:38" pos:end="154:60"><name pos:start="154:38" pos:end="154:46">GET_FIELD</name><argument_list pos:start="154:47" pos:end="154:60">(<argument pos:start="154:48" pos:end="154:51"><expr pos:start="154:48" pos:end="154:51"><name pos:start="154:48" pos:end="154:51">insn</name></expr></argument>, <argument pos:start="154:54" pos:end="154:55"><expr pos:start="154:54" pos:end="154:55"><literal type="number" pos:start="154:54" pos:end="154:55">10</literal></expr></argument>, <argument pos:start="154:58" pos:end="154:59"><expr pos:start="154:58" pos:end="154:59"><literal type="number" pos:start="154:58" pos:end="154:59">31</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		    <expr_stmt pos:start="156:21" pos:end="156:49"><expr pos:start="156:21" pos:end="156:48"><call pos:start="156:21" pos:end="156:48"><name pos:start="156:21" pos:end="156:35">gen_movl_imm_T0</name><argument_list pos:start="156:36" pos:end="156:48">(<argument pos:start="156:37" pos:end="156:47"><expr pos:start="156:37" pos:end="156:47"><name pos:start="156:37" pos:end="156:41">value</name> <operator pos:start="156:43" pos:end="156:44">&lt;&lt;</operator> <literal type="number" pos:start="156:46" pos:end="156:47">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="158:21" pos:end="161:0"><expr pos:start="158:21" pos:end="158:39"><call pos:start="158:21" pos:end="158:39"><name pos:start="158:21" pos:end="158:35">gen_movl_T0_reg</name><argument_list pos:start="158:36" pos:end="158:39">(<argument pos:start="158:37" pos:end="158:38"><expr pos:start="158:37" pos:end="158:38"><name pos:start="158:37" pos:end="158:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="160:1" pos:end="160:18">#<cpp:directive pos:start="160:2" pos:end="160:3">if</cpp:directive> <expr pos:start="160:5" pos:end="160:18"><call pos:start="160:5" pos:end="160:18"><name pos:start="160:5" pos:end="160:11">defined</name><argument_list pos:start="160:12" pos:end="160:18">(<argument pos:start="160:13" pos:end="160:17"><expr pos:start="160:13" pos:end="160:17"><name pos:start="160:13" pos:end="160:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

		</block_content>}</block></if></if_stmt>

<cpp:endif pos:start="164:1" pos:end="164:6">#<cpp:directive pos:start="164:2" pos:end="164:6">endif</cpp:directive></cpp:endif>

		<break pos:start="166:17" pos:end="166:22">break;</break>

	    <case pos:start="168:13" pos:end="168:21">case <expr pos:start="168:18" pos:end="168:20"><literal type="number" pos:start="168:18" pos:end="168:20">0x0</literal></expr>:</case>		<comment type="block" pos:start="168:33" pos:end="168:44">/* UNIMPL */</comment>

	    <default pos:start="170:13" pos:end="170:20">default:</default>


	    </block_content>}</block></switch>

	    <break pos:start="175:13" pos:end="175:18">break;</break>

	</block_content>}</block>

	<break pos:start="179:9" pos:end="179:14">break;</break>

    <case pos:start="181:5" pos:end="181:11">case <expr pos:start="181:10" pos:end="181:10"><literal type="number" pos:start="181:10" pos:end="181:10">1</literal></expr>:</case>

	<comment type="block" pos:start="183:9" pos:end="183:16">/*CALL*/</comment> <block pos:start="183:18" pos:end="215:9">{<block_content pos:start="185:13" pos:end="213:29">

	    <decl_stmt pos:start="185:13" pos:end="190:0"><decl pos:start="185:13" pos:end="185:61"><type pos:start="185:13" pos:end="185:23"><name pos:start="185:13" pos:end="185:23">target_long</name></type> <name pos:start="185:25" pos:end="185:30">target</name> <init pos:start="185:32" pos:end="185:61">= <expr pos:start="185:34" pos:end="185:61"><call pos:start="185:34" pos:end="185:56"><name pos:start="185:34" pos:end="185:43">GET_FIELDs</name><argument_list pos:start="185:44" pos:end="185:56">(<argument pos:start="185:45" pos:end="185:48"><expr pos:start="185:45" pos:end="185:48"><name pos:start="185:45" pos:end="185:48">insn</name></expr></argument>, <argument pos:start="185:51" pos:end="185:51"><expr pos:start="185:51" pos:end="185:51"><literal type="number" pos:start="185:51" pos:end="185:51">2</literal></expr></argument>, <argument pos:start="185:54" pos:end="185:55"><expr pos:start="185:54" pos:end="185:55"><literal type="number" pos:start="185:54" pos:end="185:55">31</literal></expr></argument>)</argument_list></call> <operator pos:start="185:58" pos:end="185:59">&lt;&lt;</operator> <literal type="number" pos:start="185:61" pos:end="185:61">2</literal></expr></init></decl>;</decl_stmt>



<cpp:ifdef pos:start="189:1" pos:end="189:21">#<cpp:directive pos:start="189:2" pos:end="189:6">ifdef</cpp:directive> <name pos:start="189:8" pos:end="189:21">TARGET_SPARC64</name></cpp:ifdef>

	    <if_stmt pos:start="191:13" pos:end="202:0"><if pos:start="191:13" pos:end="195:13">if <condition pos:start="191:16" pos:end="191:43">(<expr pos:start="191:17" pos:end="191:42"><name pos:start="191:17" pos:end="191:22"><name pos:start="191:17" pos:end="191:18">dc</name><operator pos:start="191:19" pos:end="191:20">-&gt;</operator><name pos:start="191:21" pos:end="191:22">pc</name></name> <operator pos:start="191:24" pos:end="191:25">==</operator> <operator pos:start="191:27" pos:end="191:27">(</operator><name pos:start="191:28" pos:end="191:35">uint32_t</name><operator pos:start="191:36" pos:end="191:36">)</operator><name pos:start="191:37" pos:end="191:42"><name pos:start="191:37" pos:end="191:38">dc</name><operator pos:start="191:39" pos:end="191:40">-&gt;</operator><name pos:start="191:41" pos:end="191:42">pc</name></name></expr>)</condition> <block pos:start="191:45" pos:end="195:13">{<block_content pos:start="193:17" pos:end="193:42">

		<expr_stmt pos:start="193:17" pos:end="193:42"><expr pos:start="193:17" pos:end="193:41"><call pos:start="193:17" pos:end="193:41"><name pos:start="193:17" pos:end="193:33">gen_op_movl_T0_im</name><argument_list pos:start="193:34" pos:end="193:41">(<argument pos:start="193:35" pos:end="193:40"><expr pos:start="193:35" pos:end="193:40"><name pos:start="193:35" pos:end="193:40"><name pos:start="193:35" pos:end="193:36">dc</name><operator pos:start="193:37" pos:end="193:38">-&gt;</operator><name pos:start="193:39" pos:end="193:40">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    </block_content>}</block></if> <else pos:start="195:15" pos:end="202:0">else <block pos:start="195:20" pos:end="202:0">{<block_content pos:start="197:17" pos:end="197:58">

		<expr_stmt pos:start="197:17" pos:end="197:58"><expr pos:start="197:17" pos:end="197:57"><call pos:start="197:17" pos:end="197:57"><name pos:start="197:17" pos:end="197:35">gen_op_movq_T0_im64</name><argument_list pos:start="197:36" pos:end="197:57">(<argument pos:start="197:37" pos:end="197:48"><expr pos:start="197:37" pos:end="197:48"><name pos:start="197:37" pos:end="197:42"><name pos:start="197:37" pos:end="197:38">dc</name><operator pos:start="197:39" pos:end="197:40">-&gt;</operator><name pos:start="197:41" pos:end="197:42">pc</name></name> <operator pos:start="197:44" pos:end="197:45">&gt;&gt;</operator> <literal type="number" pos:start="197:47" pos:end="197:48">32</literal></expr></argument>, <argument pos:start="197:51" pos:end="197:56"><expr pos:start="197:51" pos:end="197:56"><name pos:start="197:51" pos:end="197:56"><name pos:start="197:51" pos:end="197:52">dc</name><operator pos:start="197:53" pos:end="197:54">-&gt;</operator><name pos:start="197:55" pos:end="197:56">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    </block_content>}</block></else></if_stmt>

<cpp:else pos:start="201:1" pos:end="201:5">#<cpp:directive pos:start="201:2" pos:end="201:5">else</cpp:directive></cpp:else>

	    <expr_stmt pos:start="203:13" pos:end="206:0"><expr pos:start="203:13" pos:end="203:37"><call pos:start="203:13" pos:end="203:37"><name pos:start="203:13" pos:end="203:29">gen_op_movl_T0_im</name><argument_list pos:start="203:30" pos:end="203:37">(<argument pos:start="203:31" pos:end="203:36"><expr pos:start="203:31" pos:end="203:36"><name pos:start="203:31" pos:end="203:36"><name pos:start="203:31" pos:end="203:32">dc</name><operator pos:start="203:33" pos:end="203:34">-&gt;</operator><name pos:start="203:35" pos:end="203:36">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="205:1" pos:end="205:6">#<cpp:directive pos:start="205:2" pos:end="205:6">endif</cpp:directive></cpp:endif>

	    <expr_stmt pos:start="207:13" pos:end="207:32"><expr pos:start="207:13" pos:end="207:31"><call pos:start="207:13" pos:end="207:31"><name pos:start="207:13" pos:end="207:27">gen_movl_T0_reg</name><argument_list pos:start="207:28" pos:end="207:31">(<argument pos:start="207:29" pos:end="207:30"><expr pos:start="207:29" pos:end="207:30"><literal type="number" pos:start="207:29" pos:end="207:30">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="209:13" pos:end="209:29"><expr pos:start="209:13" pos:end="209:28"><name pos:start="209:13" pos:end="209:18">target</name> <operator pos:start="209:20" pos:end="209:21">+=</operator> <name pos:start="209:23" pos:end="209:28"><name pos:start="209:23" pos:end="209:24">dc</name><operator pos:start="209:25" pos:end="209:26">-&gt;</operator><name pos:start="209:27" pos:end="209:28">pc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:31"><expr pos:start="211:13" pos:end="211:30"><call pos:start="211:13" pos:end="211:30"><name pos:start="211:13" pos:end="211:26">gen_mov_pc_npc</name><argument_list pos:start="211:27" pos:end="211:30">(<argument pos:start="211:28" pos:end="211:29"><expr pos:start="211:28" pos:end="211:29"><name pos:start="211:28" pos:end="211:29">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="213:13" pos:end="213:29"><expr pos:start="213:13" pos:end="213:28"><name pos:start="213:13" pos:end="213:19"><name pos:start="213:13" pos:end="213:14">dc</name><operator pos:start="213:15" pos:end="213:16">-&gt;</operator><name pos:start="213:17" pos:end="213:19">npc</name></name> <operator pos:start="213:21" pos:end="213:21">=</operator> <name pos:start="213:23" pos:end="213:28">target</name></expr>;</expr_stmt>

	</block_content>}</block>

	<goto pos:start="217:9" pos:end="217:22">goto <name pos:start="217:14" pos:end="217:21">jmp_insn</name>;</goto>

    <case pos:start="219:5" pos:end="219:11">case <expr pos:start="219:10" pos:end="219:10"><literal type="number" pos:start="219:10" pos:end="219:10">2</literal></expr>:</case>			<comment type="block" pos:start="219:33" pos:end="219:62">/* FPU &amp; Logical Operations */</comment>

	<block pos:start="221:9" pos:end="2661:9">{<block_content pos:start="223:13" pos:end="2659:18">

	    <decl_stmt pos:start="223:13" pos:end="223:54"><decl pos:start="223:13" pos:end="223:53"><type pos:start="223:13" pos:end="223:24"><name pos:start="223:13" pos:end="223:20">unsigned</name> <name pos:start="223:22" pos:end="223:24">int</name></type> <name pos:start="223:26" pos:end="223:28">xop</name> <init pos:start="223:30" pos:end="223:53">= <expr pos:start="223:32" pos:end="223:53"><call pos:start="223:32" pos:end="223:53"><name pos:start="223:32" pos:end="223:40">GET_FIELD</name><argument_list pos:start="223:41" pos:end="223:53">(<argument pos:start="223:42" pos:end="223:45"><expr pos:start="223:42" pos:end="223:45"><name pos:start="223:42" pos:end="223:45">insn</name></expr></argument>, <argument pos:start="223:48" pos:end="223:48"><expr pos:start="223:48" pos:end="223:48"><literal type="number" pos:start="223:48" pos:end="223:48">7</literal></expr></argument>, <argument pos:start="223:51" pos:end="223:52"><expr pos:start="223:51" pos:end="223:52"><literal type="number" pos:start="223:51" pos:end="223:52">12</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	    <if_stmt pos:start="225:13" pos:end="2657:13"><if pos:start="225:13" pos:end="332:13">if <condition pos:start="225:16" pos:end="225:28">(<expr pos:start="225:17" pos:end="225:27"><name pos:start="225:17" pos:end="225:19">xop</name> <operator pos:start="225:21" pos:end="225:22">==</operator> <literal type="number" pos:start="225:24" pos:end="225:27">0x3a</literal></expr>)</condition> <block pos:start="225:30" pos:end="332:13">{<block_content pos:start="227:17" pos:end="330:30">	<comment type="block" pos:start="225:33" pos:end="225:51">/* generate trap */</comment>

                <decl_stmt pos:start="227:17" pos:end="227:25"><decl pos:start="227:17" pos:end="227:24"><type pos:start="227:17" pos:end="227:19"><name pos:start="227:17" pos:end="227:19">int</name></type> <name pos:start="227:21" pos:end="227:24">cond</name></decl>;</decl_stmt>



                <expr_stmt pos:start="231:17" pos:end="231:46"><expr pos:start="231:17" pos:end="231:45"><name pos:start="231:17" pos:end="231:19">rs1</name> <operator pos:start="231:21" pos:end="231:21">=</operator> <call pos:start="231:23" pos:end="231:45"><name pos:start="231:23" pos:end="231:31">GET_FIELD</name><argument_list pos:start="231:32" pos:end="231:45">(<argument pos:start="231:33" pos:end="231:36"><expr pos:start="231:33" pos:end="231:36"><name pos:start="231:33" pos:end="231:36">insn</name></expr></argument>, <argument pos:start="231:39" pos:end="231:40"><expr pos:start="231:39" pos:end="231:40"><literal type="number" pos:start="231:39" pos:end="231:40">13</literal></expr></argument>, <argument pos:start="231:43" pos:end="231:44"><expr pos:start="231:43" pos:end="231:44"><literal type="number" pos:start="231:43" pos:end="231:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="233:17" pos:end="233:37"><expr pos:start="233:17" pos:end="233:36"><call pos:start="233:17" pos:end="233:36"><name pos:start="233:17" pos:end="233:31">gen_movl_reg_T0</name><argument_list pos:start="233:32" pos:end="233:36">(<argument pos:start="233:33" pos:end="233:35"><expr pos:start="233:33" pos:end="233:35"><name pos:start="233:33" pos:end="233:35">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt pos:start="235:17" pos:end="275:17"><if pos:start="235:17" pos:end="255:17">if <condition pos:start="235:20" pos:end="235:27">(<expr pos:start="235:21" pos:end="235:26"><name pos:start="235:21" pos:end="235:26">IS_IMM</name></expr>)</condition> <block pos:start="235:29" pos:end="255:17">{<block_content pos:start="237:21" pos:end="254:0">

		    <expr_stmt pos:start="237:21" pos:end="240:0"><expr pos:start="237:21" pos:end="237:49"><name pos:start="237:21" pos:end="237:23">rs2</name> <operator pos:start="237:25" pos:end="237:25">=</operator> <call pos:start="237:27" pos:end="237:49"><name pos:start="237:27" pos:end="237:35">GET_FIELD</name><argument_list pos:start="237:36" pos:end="237:49">(<argument pos:start="237:37" pos:end="237:40"><expr pos:start="237:37" pos:end="237:40"><name pos:start="237:37" pos:end="237:40">insn</name></expr></argument>, <argument pos:start="237:43" pos:end="237:44"><expr pos:start="237:43" pos:end="237:44"><literal type="number" pos:start="237:43" pos:end="237:44">25</literal></expr></argument>, <argument pos:start="237:47" pos:end="237:48"><expr pos:start="237:47" pos:end="237:48"><literal type="number" pos:start="237:47" pos:end="237:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="239:1" pos:end="239:18">#<cpp:directive pos:start="239:2" pos:end="239:3">if</cpp:directive> <expr pos:start="239:5" pos:end="239:18"><call pos:start="239:5" pos:end="239:18"><name pos:start="239:5" pos:end="239:11">defined</name><argument_list pos:start="239:12" pos:end="239:18">(<argument pos:start="239:13" pos:end="239:17"><expr pos:start="239:13" pos:end="239:17"><name pos:start="239:13" pos:end="239:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

		    <if_stmt pos:start="241:21" pos:end="254:0"><if pos:start="241:21" pos:end="254:0">if <condition pos:start="241:24" pos:end="241:33">(<expr pos:start="241:25" pos:end="241:32"><name pos:start="241:25" pos:end="241:27">rs2</name> <operator pos:start="241:29" pos:end="241:30">!=</operator> <literal type="number" pos:start="241:32" pos:end="241:32">0</literal></expr>)</condition> <block pos:start="241:35" pos:end="254:0">{<block_content pos:start="245:25" pos:end="250:0">

<cpp:endif pos:start="243:1" pos:end="243:6">#<cpp:directive pos:start="243:2" pos:end="243:6">endif</cpp:directive></cpp:endif>

			<expr_stmt pos:start="245:25" pos:end="245:46"><expr pos:start="245:25" pos:end="245:45"><call pos:start="245:25" pos:end="245:45"><name pos:start="245:25" pos:end="245:40">gen_movl_simm_T1</name><argument_list pos:start="245:41" pos:end="245:45">(<argument pos:start="245:42" pos:end="245:44"><expr pos:start="245:42" pos:end="245:44"><name pos:start="245:42" pos:end="245:44">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="247:25" pos:end="250:0"><expr pos:start="247:25" pos:end="247:42"><call pos:start="247:25" pos:end="247:42"><name pos:start="247:25" pos:end="247:40">gen_op_add_T1_T0</name><argument_list pos:start="247:41" pos:end="247:42">()</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="249:1" pos:end="249:18">#<cpp:directive pos:start="249:2" pos:end="249:3">if</cpp:directive> <expr pos:start="249:5" pos:end="249:18"><call pos:start="249:5" pos:end="249:18"><name pos:start="249:5" pos:end="249:11">defined</name><argument_list pos:start="249:12" pos:end="249:18">(<argument pos:start="249:13" pos:end="249:17"><expr pos:start="249:13" pos:end="249:17"><name pos:start="249:13" pos:end="249:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

		    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="253:1" pos:end="253:6">#<cpp:directive pos:start="253:2" pos:end="253:6">endif</cpp:directive></cpp:endif>

                </block_content>}</block></if> <else pos:start="255:19" pos:end="275:17">else <block pos:start="255:24" pos:end="275:17">{<block_content pos:start="257:21" pos:end="274:0">

                    <expr_stmt pos:start="257:21" pos:end="260:0"><expr pos:start="257:21" pos:end="257:49"><name pos:start="257:21" pos:end="257:23">rs2</name> <operator pos:start="257:25" pos:end="257:25">=</operator> <call pos:start="257:27" pos:end="257:49"><name pos:start="257:27" pos:end="257:35">GET_FIELD</name><argument_list pos:start="257:36" pos:end="257:49">(<argument pos:start="257:37" pos:end="257:40"><expr pos:start="257:37" pos:end="257:40"><name pos:start="257:37" pos:end="257:40">insn</name></expr></argument>, <argument pos:start="257:43" pos:end="257:44"><expr pos:start="257:43" pos:end="257:44"><literal type="number" pos:start="257:43" pos:end="257:44">27</literal></expr></argument>, <argument pos:start="257:47" pos:end="257:48"><expr pos:start="257:47" pos:end="257:48"><literal type="number" pos:start="257:47" pos:end="257:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="259:1" pos:end="259:18">#<cpp:directive pos:start="259:2" pos:end="259:3">if</cpp:directive> <expr pos:start="259:5" pos:end="259:18"><call pos:start="259:5" pos:end="259:18"><name pos:start="259:5" pos:end="259:11">defined</name><argument_list pos:start="259:12" pos:end="259:18">(<argument pos:start="259:13" pos:end="259:17"><expr pos:start="259:13" pos:end="259:17"><name pos:start="259:13" pos:end="259:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

		    <if_stmt pos:start="261:21" pos:end="274:0"><if pos:start="261:21" pos:end="274:0">if <condition pos:start="261:24" pos:end="261:33">(<expr pos:start="261:25" pos:end="261:32"><name pos:start="261:25" pos:end="261:27">rs2</name> <operator pos:start="261:29" pos:end="261:30">!=</operator> <literal type="number" pos:start="261:32" pos:end="261:32">0</literal></expr>)</condition> <block pos:start="261:35" pos:end="274:0">{<block_content pos:start="265:25" pos:end="270:0">

<cpp:endif pos:start="263:1" pos:end="263:6">#<cpp:directive pos:start="263:2" pos:end="263:6">endif</cpp:directive></cpp:endif>

			<expr_stmt pos:start="265:25" pos:end="265:45"><expr pos:start="265:25" pos:end="265:44"><call pos:start="265:25" pos:end="265:44"><name pos:start="265:25" pos:end="265:39">gen_movl_reg_T1</name><argument_list pos:start="265:40" pos:end="265:44">(<argument pos:start="265:41" pos:end="265:43"><expr pos:start="265:41" pos:end="265:43"><name pos:start="265:41" pos:end="265:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="267:25" pos:end="270:0"><expr pos:start="267:25" pos:end="267:42"><call pos:start="267:25" pos:end="267:42"><name pos:start="267:25" pos:end="267:40">gen_op_add_T1_T0</name><argument_list pos:start="267:41" pos:end="267:42">()</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="269:1" pos:end="269:18">#<cpp:directive pos:start="269:2" pos:end="269:3">if</cpp:directive> <expr pos:start="269:5" pos:end="269:18"><call pos:start="269:5" pos:end="269:18"><name pos:start="269:5" pos:end="269:11">defined</name><argument_list pos:start="269:12" pos:end="269:18">(<argument pos:start="269:13" pos:end="269:17"><expr pos:start="269:13" pos:end="269:17"><name pos:start="269:13" pos:end="269:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

		    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="273:1" pos:end="273:6">#<cpp:directive pos:start="273:2" pos:end="273:6">endif</cpp:directive></cpp:endif>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="277:17" pos:end="277:45"><expr pos:start="277:17" pos:end="277:44"><name pos:start="277:17" pos:end="277:20">cond</name> <operator pos:start="277:22" pos:end="277:22">=</operator> <call pos:start="277:24" pos:end="277:44"><name pos:start="277:24" pos:end="277:32">GET_FIELD</name><argument_list pos:start="277:33" pos:end="277:44">(<argument pos:start="277:34" pos:end="277:37"><expr pos:start="277:34" pos:end="277:37"><name pos:start="277:34" pos:end="277:37">insn</name></expr></argument>, <argument pos:start="277:40" pos:end="277:40"><expr pos:start="277:40" pos:end="277:40"><literal type="number" pos:start="277:40" pos:end="277:40">3</literal></expr></argument>, <argument pos:start="277:43" pos:end="277:43"><expr pos:start="277:43" pos:end="277:43"><literal type="number" pos:start="277:43" pos:end="277:43">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="279:17" pos:end="320:17"><if pos:start="279:17" pos:end="285:17">if <condition pos:start="279:20" pos:end="279:32">(<expr pos:start="279:21" pos:end="279:31"><name pos:start="279:21" pos:end="279:24">cond</name> <operator pos:start="279:26" pos:end="279:27">==</operator> <literal type="number" pos:start="279:29" pos:end="279:31">0x8</literal></expr>)</condition> <block pos:start="279:34" pos:end="285:17">{<block_content pos:start="281:21" pos:end="283:37">

                    <expr_stmt pos:start="281:21" pos:end="281:35"><expr pos:start="281:21" pos:end="281:34"><call pos:start="281:21" pos:end="281:34"><name pos:start="281:21" pos:end="281:30">save_state</name><argument_list pos:start="281:31" pos:end="281:34">(<argument pos:start="281:32" pos:end="281:33"><expr pos:start="281:32" pos:end="281:33"><name pos:start="281:32" pos:end="281:33">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="283:21" pos:end="283:37"><expr pos:start="283:21" pos:end="283:36"><call pos:start="283:21" pos:end="283:36"><name pos:start="283:21" pos:end="283:34">gen_op_trap_T0</name><argument_list pos:start="283:35" pos:end="283:36">()</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="285:19" pos:end="320:17">else if <condition pos:start="285:27" pos:end="285:37">(<expr pos:start="285:28" pos:end="285:36"><name pos:start="285:28" pos:end="285:31">cond</name> <operator pos:start="285:33" pos:end="285:34">!=</operator> <literal type="number" pos:start="285:36" pos:end="285:36">0</literal></expr>)</condition> <block pos:start="285:39" pos:end="320:17">{<block_content pos:start="291:21" pos:end="318:39">

<cpp:ifdef pos:start="287:1" pos:end="287:21">#<cpp:directive pos:start="287:2" pos:end="287:6">ifdef</cpp:directive> <name pos:start="287:8" pos:end="287:21">TARGET_SPARC64</name></cpp:ifdef>

		    <comment type="block" pos:start="289:21" pos:end="289:36">/* V9 icc/xcc */</comment>

		    <decl_stmt pos:start="291:21" pos:end="291:56"><decl pos:start="291:21" pos:end="291:55"><type pos:start="291:21" pos:end="291:23"><name pos:start="291:21" pos:end="291:23">int</name></type> <name pos:start="291:25" pos:end="291:26">cc</name> <init pos:start="291:28" pos:end="291:55">= <expr pos:start="291:30" pos:end="291:55"><call pos:start="291:30" pos:end="291:55"><name pos:start="291:30" pos:end="291:41">GET_FIELD_SP</name><argument_list pos:start="291:42" pos:end="291:55">(<argument pos:start="291:43" pos:end="291:46"><expr pos:start="291:43" pos:end="291:46"><name pos:start="291:43" pos:end="291:46">insn</name></expr></argument>, <argument pos:start="291:49" pos:end="291:50"><expr pos:start="291:49" pos:end="291:50"><literal type="number" pos:start="291:49" pos:end="291:50">11</literal></expr></argument>, <argument pos:start="291:53" pos:end="291:54"><expr pos:start="291:53" pos:end="291:54"><literal type="number" pos:start="291:53" pos:end="291:54">12</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		    <expr_stmt pos:start="293:21" pos:end="293:33"><expr pos:start="293:21" pos:end="293:32"><call pos:start="293:21" pos:end="293:32"><name pos:start="293:21" pos:end="293:28">flush_T2</name><argument_list pos:start="293:29" pos:end="293:32">(<argument pos:start="293:30" pos:end="293:31"><expr pos:start="293:30" pos:end="293:31"><name pos:start="293:30" pos:end="293:31">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="295:21" pos:end="295:35"><expr pos:start="295:21" pos:end="295:34"><call pos:start="295:21" pos:end="295:34"><name pos:start="295:21" pos:end="295:30">save_state</name><argument_list pos:start="295:31" pos:end="295:34">(<argument pos:start="295:32" pos:end="295:33"><expr pos:start="295:32" pos:end="295:33"><name pos:start="295:32" pos:end="295:33">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <if_stmt pos:start="297:21" pos:end="310:33"><if pos:start="297:21" pos:end="299:44">if <condition pos:start="297:24" pos:end="297:32">(<expr pos:start="297:25" pos:end="297:31"><name pos:start="297:25" pos:end="297:26">cc</name> <operator pos:start="297:28" pos:end="297:29">==</operator> <literal type="number" pos:start="297:31" pos:end="297:31">0</literal></expr>)</condition><block type="pseudo" pos:start="299:25" pos:end="299:44"><block_content pos:start="299:25" pos:end="299:44">

			<expr_stmt pos:start="299:25" pos:end="299:44"><expr pos:start="299:25" pos:end="299:43"><name pos:start="299:25" pos:end="299:41"><name pos:start="299:25" pos:end="299:32">gen_cond</name><index pos:start="299:33" pos:end="299:35">[<expr pos:start="299:34" pos:end="299:34"><literal type="number" pos:start="299:34" pos:end="299:34">0</literal></expr>]</index><index pos:start="299:36" pos:end="299:41">[<expr pos:start="299:37" pos:end="299:40"><name pos:start="299:37" pos:end="299:40">cond</name></expr>]</index></name><operator pos:start="299:42" pos:end="299:42">(</operator><operator pos:start="299:43" pos:end="299:43">)</operator></expr>;</expr_stmt></block_content></block></if>

		    <if type="elseif" pos:start="301:21" pos:end="303:44">else if <condition pos:start="301:29" pos:end="301:37">(<expr pos:start="301:30" pos:end="301:36"><name pos:start="301:30" pos:end="301:31">cc</name> <operator pos:start="301:33" pos:end="301:34">==</operator> <literal type="number" pos:start="301:36" pos:end="301:36">2</literal></expr>)</condition><block type="pseudo" pos:start="303:25" pos:end="303:44"><block_content pos:start="303:25" pos:end="303:44">

			<expr_stmt pos:start="303:25" pos:end="303:44"><expr pos:start="303:25" pos:end="303:43"><name pos:start="303:25" pos:end="303:41"><name pos:start="303:25" pos:end="303:32">gen_cond</name><index pos:start="303:33" pos:end="303:35">[<expr pos:start="303:34" pos:end="303:34"><literal type="number" pos:start="303:34" pos:end="303:34">1</literal></expr>]</index><index pos:start="303:36" pos:end="303:41">[<expr pos:start="303:37" pos:end="303:40"><name pos:start="303:37" pos:end="303:40">cond</name></expr>]</index></name><operator pos:start="303:42" pos:end="303:42">(</operator><operator pos:start="303:43" pos:end="303:43">)</operator></expr>;</expr_stmt></block_content></block></if>

		    <else pos:start="305:21" pos:end="310:33">else<block type="pseudo" pos:start="310:21" pos:end="310:33"><block_content pos:start="310:21" pos:end="310:33">


<cpp:else pos:start="308:1" pos:end="308:5">#<cpp:directive pos:start="308:2" pos:end="308:5">else</cpp:directive></cpp:else>

		    <expr_stmt pos:start="310:21" pos:end="310:33"><expr pos:start="310:21" pos:end="310:32"><call pos:start="310:21" pos:end="310:32"><name pos:start="310:21" pos:end="310:28">flush_T2</name><argument_list pos:start="310:29" pos:end="310:32">(<argument pos:start="310:30" pos:end="310:31"><expr pos:start="310:30" pos:end="310:31"><name pos:start="310:30" pos:end="310:31">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="312:21" pos:end="312:35"><expr pos:start="312:21" pos:end="312:34"><call pos:start="312:21" pos:end="312:34"><name pos:start="312:21" pos:end="312:30">save_state</name><argument_list pos:start="312:31" pos:end="312:34">(<argument pos:start="312:32" pos:end="312:33"><expr pos:start="312:32" pos:end="312:33"><name pos:start="312:32" pos:end="312:33">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="314:21" pos:end="317:0"><expr pos:start="314:21" pos:end="314:39"><name pos:start="314:21" pos:end="314:37"><name pos:start="314:21" pos:end="314:28">gen_cond</name><index pos:start="314:29" pos:end="314:31">[<expr pos:start="314:30" pos:end="314:30"><literal type="number" pos:start="314:30" pos:end="314:30">0</literal></expr>]</index><index pos:start="314:32" pos:end="314:37">[<expr pos:start="314:33" pos:end="314:36"><name pos:start="314:33" pos:end="314:36">cond</name></expr>]</index></name><operator pos:start="314:38" pos:end="314:38">(</operator><operator pos:start="314:39" pos:end="314:39">)</operator></expr>;</expr_stmt>

<cpp:endif pos:start="316:1" pos:end="316:6">#<cpp:directive pos:start="316:2" pos:end="316:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="318:21" pos:end="318:39"><expr pos:start="318:21" pos:end="318:38"><call pos:start="318:21" pos:end="318:38"><name pos:start="318:21" pos:end="318:36">gen_op_trapcc_T0</name><argument_list pos:start="318:37" pos:end="318:38">()</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="322:17" pos:end="322:35"><expr pos:start="322:17" pos:end="322:34"><call pos:start="322:17" pos:end="322:34"><name pos:start="322:17" pos:end="322:32">gen_op_next_insn</name><argument_list pos:start="322:33" pos:end="322:34">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="324:17" pos:end="324:35"><expr pos:start="324:17" pos:end="324:34"><call pos:start="324:17" pos:end="324:34"><name pos:start="324:17" pos:end="324:32">gen_op_movl_T0_0</name><argument_list pos:start="324:33" pos:end="324:34">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="326:17" pos:end="326:33"><expr pos:start="326:17" pos:end="326:32"><call pos:start="326:17" pos:end="326:32"><name pos:start="326:17" pos:end="326:30">gen_op_exit_tb</name><argument_list pos:start="326:31" pos:end="326:32">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="328:17" pos:end="328:30"><expr pos:start="328:17" pos:end="328:29"><name pos:start="328:17" pos:end="328:25"><name pos:start="328:17" pos:end="328:18">dc</name><operator pos:start="328:19" pos:end="328:20">-&gt;</operator><name pos:start="328:21" pos:end="328:25">is_br</name></name> <operator pos:start="328:27" pos:end="328:27">=</operator> <literal type="number" pos:start="328:29" pos:end="328:29">1</literal></expr>;</expr_stmt>

                <goto pos:start="330:17" pos:end="330:30">goto <name pos:start="330:22" pos:end="330:29">jmp_insn</name>;</goto>

            </block_content>}</block></if> <if type="elseif" pos:start="332:15" pos:end="479:13">else if <condition pos:start="332:23" pos:end="332:35">(<expr pos:start="332:24" pos:end="332:34"><name pos:start="332:24" pos:end="332:26">xop</name> <operator pos:start="332:28" pos:end="332:29">==</operator> <literal type="number" pos:start="332:31" pos:end="332:34">0x28</literal></expr>)</condition> <block pos:start="332:37" pos:end="479:13">{<block_content pos:start="334:17" pos:end="478:0">

                <expr_stmt pos:start="334:17" pos:end="334:46"><expr pos:start="334:17" pos:end="334:45"><name pos:start="334:17" pos:end="334:19">rs1</name> <operator pos:start="334:21" pos:end="334:21">=</operator> <call pos:start="334:23" pos:end="334:45"><name pos:start="334:23" pos:end="334:31">GET_FIELD</name><argument_list pos:start="334:32" pos:end="334:45">(<argument pos:start="334:33" pos:end="334:36"><expr pos:start="334:33" pos:end="334:36"><name pos:start="334:33" pos:end="334:36">insn</name></expr></argument>, <argument pos:start="334:39" pos:end="334:40"><expr pos:start="334:39" pos:end="334:40"><literal type="number" pos:start="334:39" pos:end="334:40">13</literal></expr></argument>, <argument pos:start="334:43" pos:end="334:44"><expr pos:start="334:43" pos:end="334:44"><literal type="number" pos:start="334:43" pos:end="334:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="336:17" pos:end="478:0">switch<condition pos:start="336:23" pos:end="336:27">(<expr pos:start="336:24" pos:end="336:26"><name pos:start="336:24" pos:end="336:26">rs1</name></expr>)</condition> <block pos:start="336:29" pos:end="478:0">{<block_content pos:start="338:17" pos:end="470:24">

                <case pos:start="338:17" pos:end="341:0">case <expr pos:start="338:22" pos:end="338:22"><literal type="number" pos:start="338:22" pos:end="338:22">0</literal></expr>:</case> <comment type="block" pos:start="338:25" pos:end="338:33">/* rdy */</comment>

<cpp:ifndef pos:start="340:1" pos:end="340:22">#<cpp:directive pos:start="340:2" pos:end="340:7">ifndef</cpp:directive> <name pos:start="340:9" pos:end="340:22">TARGET_SPARC64</name></cpp:ifndef>

                <case pos:start="342:17" pos:end="342:35">case <expr pos:start="342:22" pos:end="342:34"><literal type="number" pos:start="342:22" pos:end="342:25">0x01</literal> <operator pos:start="342:27" pos:end="342:29">...</operator> <literal type="number" pos:start="342:31" pos:end="342:34">0x0e</literal></expr>:</case> <comment type="block" pos:start="342:37" pos:end="346:44">/* undefined in the SPARCv8

                                       manual, rdy on the microSPARC

                                       II */</comment>

                <case pos:start="348:17" pos:end="348:26">case <expr pos:start="348:22" pos:end="348:25"><literal type="number" pos:start="348:22" pos:end="348:25">0x0f</literal></expr>:</case>          <comment type="block" pos:start="348:37" pos:end="350:66">/* stbar in the SPARCv8 manual,

                                       rdy on the microSPARC II */</comment>

                <case pos:start="352:17" pos:end="359:0">case <expr pos:start="352:22" pos:end="352:34"><literal type="number" pos:start="352:22" pos:end="352:25">0x10</literal> <operator pos:start="352:27" pos:end="352:29">...</operator> <literal type="number" pos:start="352:31" pos:end="352:34">0x1f</literal></expr>:</case> <comment type="block" pos:start="352:37" pos:end="356:55">/* implementation-dependent in the

                                       SPARCv8 manual, rdy on the

                                       microSPARC II */</comment>

<cpp:endif pos:start="358:1" pos:end="358:6">#<cpp:directive pos:start="358:2" pos:end="358:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="360:21" pos:end="360:68"><expr pos:start="360:21" pos:end="360:67"><call pos:start="360:21" pos:end="360:67"><name pos:start="360:21" pos:end="360:39">gen_op_movtl_T0_env</name><argument_list pos:start="360:40" pos:end="360:67">(<argument pos:start="360:41" pos:end="360:66"><expr pos:start="360:41" pos:end="360:66"><call pos:start="360:41" pos:end="360:66"><name pos:start="360:41" pos:end="360:48">offsetof</name><argument_list pos:start="360:49" pos:end="360:66">(<argument pos:start="360:50" pos:end="360:62"><expr pos:start="360:50" pos:end="360:62"><name pos:start="360:50" pos:end="360:62">CPUSPARCState</name></expr></argument>, <argument pos:start="360:65" pos:end="360:65"><expr pos:start="360:65" pos:end="360:65"><name pos:start="360:65" pos:end="360:65">y</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="362:21" pos:end="362:40"><expr pos:start="362:21" pos:end="362:39"><call pos:start="362:21" pos:end="362:39"><name pos:start="362:21" pos:end="362:35">gen_movl_T0_reg</name><argument_list pos:start="362:36" pos:end="362:39">(<argument pos:start="362:37" pos:end="362:38"><expr pos:start="362:37" pos:end="362:38"><name pos:start="362:37" pos:end="362:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="364:21" pos:end="367:0">break;</break>

<cpp:ifdef pos:start="366:1" pos:end="366:21">#<cpp:directive pos:start="366:2" pos:end="366:6">ifdef</cpp:directive> <name pos:start="366:8" pos:end="366:21">TARGET_SPARC64</name></cpp:ifdef>

		<case pos:start="368:17" pos:end="368:25">case <expr pos:start="368:22" pos:end="368:24"><literal type="number" pos:start="368:22" pos:end="368:24">0x2</literal></expr>:</case> <comment type="block" pos:start="368:27" pos:end="368:40">/* V9 rdccr */</comment>

                    <expr_stmt pos:start="370:21" pos:end="370:35"><expr pos:start="370:21" pos:end="370:34"><call pos:start="370:21" pos:end="370:34"><name pos:start="370:21" pos:end="370:32">gen_op_rdccr</name><argument_list pos:start="370:33" pos:end="370:34">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="372:21" pos:end="372:40"><expr pos:start="372:21" pos:end="372:39"><call pos:start="372:21" pos:end="372:39"><name pos:start="372:21" pos:end="372:35">gen_movl_T0_reg</name><argument_list pos:start="372:36" pos:end="372:39">(<argument pos:start="372:37" pos:end="372:38"><expr pos:start="372:37" pos:end="372:38"><name pos:start="372:37" pos:end="372:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="374:21" pos:end="374:26">break;</break>

		<case pos:start="376:17" pos:end="376:25">case <expr pos:start="376:22" pos:end="376:24"><literal type="number" pos:start="376:22" pos:end="376:24">0x3</literal></expr>:</case> <comment type="block" pos:start="376:27" pos:end="376:40">/* V9 rdasi */</comment>

		    <expr_stmt pos:start="378:21" pos:end="378:69"><expr pos:start="378:21" pos:end="378:68"><call pos:start="378:21" pos:end="378:68"><name pos:start="378:21" pos:end="378:38">gen_op_movl_T0_env</name><argument_list pos:start="378:39" pos:end="378:68">(<argument pos:start="378:40" pos:end="378:67"><expr pos:start="378:40" pos:end="378:67"><call pos:start="378:40" pos:end="378:67"><name pos:start="378:40" pos:end="378:47">offsetof</name><argument_list pos:start="378:48" pos:end="378:67">(<argument pos:start="378:49" pos:end="378:61"><expr pos:start="378:49" pos:end="378:61"><name pos:start="378:49" pos:end="378:61">CPUSPARCState</name></expr></argument>, <argument pos:start="378:64" pos:end="378:66"><expr pos:start="378:64" pos:end="378:66"><name pos:start="378:64" pos:end="378:66">asi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="380:21" pos:end="380:40"><expr pos:start="380:21" pos:end="380:39"><call pos:start="380:21" pos:end="380:39"><name pos:start="380:21" pos:end="380:35">gen_movl_T0_reg</name><argument_list pos:start="380:36" pos:end="380:39">(<argument pos:start="380:37" pos:end="380:38"><expr pos:start="380:37" pos:end="380:38"><name pos:start="380:37" pos:end="380:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="382:21" pos:end="382:26">break;</break>

		<case pos:start="384:17" pos:end="384:25">case <expr pos:start="384:22" pos:end="384:24"><literal type="number" pos:start="384:22" pos:end="384:24">0x4</literal></expr>:</case> <comment type="block" pos:start="384:27" pos:end="384:41">/* V9 rdtick */</comment>

                    <expr_stmt pos:start="386:21" pos:end="386:36"><expr pos:start="386:21" pos:end="386:35"><call pos:start="386:21" pos:end="386:35"><name pos:start="386:21" pos:end="386:33">gen_op_rdtick</name><argument_list pos:start="386:34" pos:end="386:35">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="388:21" pos:end="388:40"><expr pos:start="388:21" pos:end="388:39"><call pos:start="388:21" pos:end="388:39"><name pos:start="388:21" pos:end="388:35">gen_movl_T0_reg</name><argument_list pos:start="388:36" pos:end="388:39">(<argument pos:start="388:37" pos:end="388:38"><expr pos:start="388:37" pos:end="388:38"><name pos:start="388:37" pos:end="388:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="390:21" pos:end="390:26">break;</break>

		<case pos:start="392:17" pos:end="392:25">case <expr pos:start="392:22" pos:end="392:24"><literal type="number" pos:start="392:22" pos:end="392:24">0x5</literal></expr>:</case> <comment type="block" pos:start="392:27" pos:end="392:39">/* V9 rdpc */</comment>

		    <if_stmt pos:start="394:21" pos:end="402:21"><if pos:start="394:21" pos:end="398:21">if <condition pos:start="394:24" pos:end="394:51">(<expr pos:start="394:25" pos:end="394:50"><name pos:start="394:25" pos:end="394:30"><name pos:start="394:25" pos:end="394:26">dc</name><operator pos:start="394:27" pos:end="394:28">-&gt;</operator><name pos:start="394:29" pos:end="394:30">pc</name></name> <operator pos:start="394:32" pos:end="394:33">==</operator> <operator pos:start="394:35" pos:end="394:35">(</operator><name pos:start="394:36" pos:end="394:43">uint32_t</name><operator pos:start="394:44" pos:end="394:44">)</operator><name pos:start="394:45" pos:end="394:50"><name pos:start="394:45" pos:end="394:46">dc</name><operator pos:start="394:47" pos:end="394:48">-&gt;</operator><name pos:start="394:49" pos:end="394:50">pc</name></name></expr>)</condition> <block pos:start="394:53" pos:end="398:21">{<block_content pos:start="396:25" pos:end="396:50">

			<expr_stmt pos:start="396:25" pos:end="396:50"><expr pos:start="396:25" pos:end="396:49"><call pos:start="396:25" pos:end="396:49"><name pos:start="396:25" pos:end="396:41">gen_op_movl_T0_im</name><argument_list pos:start="396:42" pos:end="396:49">(<argument pos:start="396:43" pos:end="396:48"><expr pos:start="396:43" pos:end="396:48"><name pos:start="396:43" pos:end="396:48"><name pos:start="396:43" pos:end="396:44">dc</name><operator pos:start="396:45" pos:end="396:46">-&gt;</operator><name pos:start="396:47" pos:end="396:48">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    </block_content>}</block></if> <else pos:start="398:23" pos:end="402:21">else <block pos:start="398:28" pos:end="402:21">{<block_content pos:start="400:25" pos:end="400:66">

			<expr_stmt pos:start="400:25" pos:end="400:66"><expr pos:start="400:25" pos:end="400:65"><call pos:start="400:25" pos:end="400:65"><name pos:start="400:25" pos:end="400:43">gen_op_movq_T0_im64</name><argument_list pos:start="400:44" pos:end="400:65">(<argument pos:start="400:45" pos:end="400:56"><expr pos:start="400:45" pos:end="400:56"><name pos:start="400:45" pos:end="400:50"><name pos:start="400:45" pos:end="400:46">dc</name><operator pos:start="400:47" pos:end="400:48">-&gt;</operator><name pos:start="400:49" pos:end="400:50">pc</name></name> <operator pos:start="400:52" pos:end="400:53">&gt;&gt;</operator> <literal type="number" pos:start="400:55" pos:end="400:56">32</literal></expr></argument>, <argument pos:start="400:59" pos:end="400:64"><expr pos:start="400:59" pos:end="400:64"><name pos:start="400:59" pos:end="400:64"><name pos:start="400:59" pos:end="400:60">dc</name><operator pos:start="400:61" pos:end="400:62">-&gt;</operator><name pos:start="400:63" pos:end="400:64">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    </block_content>}</block></else></if_stmt>

		    <expr_stmt pos:start="404:21" pos:end="404:40"><expr pos:start="404:21" pos:end="404:39"><call pos:start="404:21" pos:end="404:39"><name pos:start="404:21" pos:end="404:35">gen_movl_T0_reg</name><argument_list pos:start="404:36" pos:end="404:39">(<argument pos:start="404:37" pos:end="404:38"><expr pos:start="404:37" pos:end="404:38"><name pos:start="404:37" pos:end="404:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="406:21" pos:end="406:26">break;</break>

		<case pos:start="408:17" pos:end="408:25">case <expr pos:start="408:22" pos:end="408:24"><literal type="number" pos:start="408:22" pos:end="408:24">0x6</literal></expr>:</case> <comment type="block" pos:start="408:27" pos:end="408:41">/* V9 rdfprs */</comment>

		    <expr_stmt pos:start="410:21" pos:end="410:70"><expr pos:start="410:21" pos:end="410:69"><call pos:start="410:21" pos:end="410:69"><name pos:start="410:21" pos:end="410:38">gen_op_movl_T0_env</name><argument_list pos:start="410:39" pos:end="410:69">(<argument pos:start="410:40" pos:end="410:68"><expr pos:start="410:40" pos:end="410:68"><call pos:start="410:40" pos:end="410:68"><name pos:start="410:40" pos:end="410:47">offsetof</name><argument_list pos:start="410:48" pos:end="410:68">(<argument pos:start="410:49" pos:end="410:61"><expr pos:start="410:49" pos:end="410:61"><name pos:start="410:49" pos:end="410:61">CPUSPARCState</name></expr></argument>, <argument pos:start="410:64" pos:end="410:67"><expr pos:start="410:64" pos:end="410:67"><name pos:start="410:64" pos:end="410:67">fprs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="412:21" pos:end="412:40"><expr pos:start="412:21" pos:end="412:39"><call pos:start="412:21" pos:end="412:39"><name pos:start="412:21" pos:end="412:35">gen_movl_T0_reg</name><argument_list pos:start="412:36" pos:end="412:39">(<argument pos:start="412:37" pos:end="412:38"><expr pos:start="412:37" pos:end="412:38"><name pos:start="412:37" pos:end="412:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="414:21" pos:end="414:26">break;</break>

                <case pos:start="416:17" pos:end="416:25">case <expr pos:start="416:22" pos:end="416:24"><literal type="number" pos:start="416:22" pos:end="416:24">0xf</literal></expr>:</case> <comment type="block" pos:start="416:27" pos:end="416:41">/* V9 membar */</comment>

                    <break pos:start="418:21" pos:end="418:26">break;</break> <comment type="block" pos:start="418:28" pos:end="418:42">/* no effect */</comment>

		<case pos:start="420:17" pos:end="420:26">case <expr pos:start="420:22" pos:end="420:25"><literal type="number" pos:start="420:22" pos:end="420:25">0x13</literal></expr>:</case> <comment type="block" pos:start="420:28" pos:end="420:48">/* Graphics Status */</comment>

                    <if_stmt pos:start="422:21" pos:end="424:38"><if pos:start="422:21" pos:end="424:38">if <condition pos:start="422:24" pos:end="422:45">(<expr pos:start="422:25" pos:end="422:44"><call pos:start="422:25" pos:end="422:44"><name pos:start="422:25" pos:end="422:40">gen_trap_ifnofpu</name><argument_list pos:start="422:41" pos:end="422:44">(<argument pos:start="422:42" pos:end="422:43"><expr pos:start="422:42" pos:end="422:43"><name pos:start="422:42" pos:end="422:43">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="424:25" pos:end="424:38"><block_content pos:start="424:25" pos:end="424:38">

                        <goto pos:start="424:25" pos:end="424:38">goto <name pos:start="424:30" pos:end="424:37">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

		    <expr_stmt pos:start="426:21" pos:end="426:70"><expr pos:start="426:21" pos:end="426:69"><call pos:start="426:21" pos:end="426:69"><name pos:start="426:21" pos:end="426:39">gen_op_movtl_T0_env</name><argument_list pos:start="426:40" pos:end="426:69">(<argument pos:start="426:41" pos:end="426:68"><expr pos:start="426:41" pos:end="426:68"><call pos:start="426:41" pos:end="426:68"><name pos:start="426:41" pos:end="426:48">offsetof</name><argument_list pos:start="426:49" pos:end="426:68">(<argument pos:start="426:50" pos:end="426:62"><expr pos:start="426:50" pos:end="426:62"><name pos:start="426:50" pos:end="426:62">CPUSPARCState</name></expr></argument>, <argument pos:start="426:65" pos:end="426:67"><expr pos:start="426:65" pos:end="426:67"><name pos:start="426:65" pos:end="426:67">gsr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="428:21" pos:end="428:40"><expr pos:start="428:21" pos:end="428:39"><call pos:start="428:21" pos:end="428:39"><name pos:start="428:21" pos:end="428:35">gen_movl_T0_reg</name><argument_list pos:start="428:36" pos:end="428:39">(<argument pos:start="428:37" pos:end="428:38"><expr pos:start="428:37" pos:end="428:38"><name pos:start="428:37" pos:end="428:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="430:21" pos:end="430:26">break;</break>

		<case pos:start="432:17" pos:end="432:26">case <expr pos:start="432:22" pos:end="432:25"><literal type="number" pos:start="432:22" pos:end="432:25">0x17</literal></expr>:</case> <comment type="block" pos:start="432:28" pos:end="432:45">/* Tick compare */</comment>

		    <expr_stmt pos:start="434:21" pos:end="434:76"><expr pos:start="434:21" pos:end="434:75"><call pos:start="434:21" pos:end="434:75"><name pos:start="434:21" pos:end="434:39">gen_op_movtl_T0_env</name><argument_list pos:start="434:40" pos:end="434:75">(<argument pos:start="434:41" pos:end="434:74"><expr pos:start="434:41" pos:end="434:74"><call pos:start="434:41" pos:end="434:74"><name pos:start="434:41" pos:end="434:48">offsetof</name><argument_list pos:start="434:49" pos:end="434:74">(<argument pos:start="434:50" pos:end="434:62"><expr pos:start="434:50" pos:end="434:62"><name pos:start="434:50" pos:end="434:62">CPUSPARCState</name></expr></argument>, <argument pos:start="434:65" pos:end="434:73"><expr pos:start="434:65" pos:end="434:73"><name pos:start="434:65" pos:end="434:73">tick_cmpr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="436:21" pos:end="436:40"><expr pos:start="436:21" pos:end="436:39"><call pos:start="436:21" pos:end="436:39"><name pos:start="436:21" pos:end="436:35">gen_movl_T0_reg</name><argument_list pos:start="436:36" pos:end="436:39">(<argument pos:start="436:37" pos:end="436:38"><expr pos:start="436:37" pos:end="436:38"><name pos:start="436:37" pos:end="436:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="438:21" pos:end="438:26">break;</break>

		<case pos:start="440:17" pos:end="440:26">case <expr pos:start="440:22" pos:end="440:25"><literal type="number" pos:start="440:22" pos:end="440:25">0x18</literal></expr>:</case> <comment type="block" pos:start="440:28" pos:end="440:44">/* System tick */</comment>

                    <expr_stmt pos:start="442:21" pos:end="442:36"><expr pos:start="442:21" pos:end="442:35"><call pos:start="442:21" pos:end="442:35"><name pos:start="442:21" pos:end="442:33">gen_op_rdtick</name><argument_list pos:start="442:34" pos:end="442:35">()</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="442:38" pos:end="442:43">// XXX</comment>

                    <expr_stmt pos:start="444:21" pos:end="444:40"><expr pos:start="444:21" pos:end="444:39"><call pos:start="444:21" pos:end="444:39"><name pos:start="444:21" pos:end="444:35">gen_movl_T0_reg</name><argument_list pos:start="444:36" pos:end="444:39">(<argument pos:start="444:37" pos:end="444:38"><expr pos:start="444:37" pos:end="444:38"><name pos:start="444:37" pos:end="444:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="446:21" pos:end="446:26">break;</break>

		<case pos:start="448:17" pos:end="448:26">case <expr pos:start="448:22" pos:end="448:25"><literal type="number" pos:start="448:22" pos:end="448:25">0x19</literal></expr>:</case> <comment type="block" pos:start="448:28" pos:end="448:52">/* System tick compare */</comment>

		    <expr_stmt pos:start="450:21" pos:end="450:77"><expr pos:start="450:21" pos:end="450:76"><call pos:start="450:21" pos:end="450:76"><name pos:start="450:21" pos:end="450:39">gen_op_movtl_T0_env</name><argument_list pos:start="450:40" pos:end="450:76">(<argument pos:start="450:41" pos:end="450:75"><expr pos:start="450:41" pos:end="450:75"><call pos:start="450:41" pos:end="450:75"><name pos:start="450:41" pos:end="450:48">offsetof</name><argument_list pos:start="450:49" pos:end="450:75">(<argument pos:start="450:50" pos:end="450:62"><expr pos:start="450:50" pos:end="450:62"><name pos:start="450:50" pos:end="450:62">CPUSPARCState</name></expr></argument>, <argument pos:start="450:65" pos:end="450:74"><expr pos:start="450:65" pos:end="450:74"><name pos:start="450:65" pos:end="450:74">stick_cmpr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="452:21" pos:end="452:40"><expr pos:start="452:21" pos:end="452:39"><call pos:start="452:21" pos:end="452:39"><name pos:start="452:21" pos:end="452:35">gen_movl_T0_reg</name><argument_list pos:start="452:36" pos:end="452:39">(<argument pos:start="452:37" pos:end="452:38"><expr pos:start="452:37" pos:end="452:38"><name pos:start="452:37" pos:end="452:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="454:21" pos:end="454:26">break;</break>

		<case pos:start="456:17" pos:end="456:26">case <expr pos:start="456:22" pos:end="456:25"><literal type="number" pos:start="456:22" pos:end="456:25">0x10</literal></expr>:</case> <comment type="block" pos:start="456:28" pos:end="456:52">/* Performance Control */</comment>

		<case pos:start="458:17" pos:end="458:26">case <expr pos:start="458:22" pos:end="458:25"><literal type="number" pos:start="458:22" pos:end="458:25">0x11</literal></expr>:</case> <comment type="block" pos:start="458:28" pos:end="458:68">/* Performance Instrumentation Counter */</comment>

		<case pos:start="460:17" pos:end="460:26">case <expr pos:start="460:22" pos:end="460:25"><literal type="number" pos:start="460:22" pos:end="460:25">0x12</literal></expr>:</case> <comment type="block" pos:start="460:28" pos:end="460:49">/* Dispatch Control */</comment>

		<case pos:start="462:17" pos:end="462:26">case <expr pos:start="462:22" pos:end="462:25"><literal type="number" pos:start="462:22" pos:end="462:25">0x14</literal></expr>:</case> <comment type="block" pos:start="462:28" pos:end="462:48">/* Softint set, WO */</comment>

		<case pos:start="464:17" pos:end="464:26">case <expr pos:start="464:22" pos:end="464:25"><literal type="number" pos:start="464:22" pos:end="464:25">0x15</literal></expr>:</case> <comment type="block" pos:start="464:28" pos:end="464:50">/* Softint clear, WO */</comment>

		<case pos:start="466:17" pos:end="469:0">case <expr pos:start="466:22" pos:end="466:25"><literal type="number" pos:start="466:22" pos:end="466:25">0x16</literal></expr>:</case> <comment type="block" pos:start="466:28" pos:end="466:46">/* Softint write */</comment>

<cpp:endif pos:start="468:1" pos:end="468:6">#<cpp:directive pos:start="468:2" pos:end="468:6">endif</cpp:directive></cpp:endif>

                <default pos:start="470:17" pos:end="470:24">default:</default>


                </block_content>}</block></switch>

<cpp:if pos:start="475:1" pos:end="475:30">#<cpp:directive pos:start="475:2" pos:end="475:3">if</cpp:directive> <expr pos:start="475:5" pos:end="475:30"><operator pos:start="475:5" pos:end="475:5">!</operator><call pos:start="475:6" pos:end="475:30"><name pos:start="475:6" pos:end="475:12">defined</name><argument_list pos:start="475:13" pos:end="475:30">(<argument pos:start="475:14" pos:end="475:29"><expr pos:start="475:14" pos:end="475:29"><name pos:start="475:14" pos:end="475:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:ifndef pos:start="477:1" pos:end="477:22">#<cpp:directive pos:start="477:2" pos:end="477:7">ifndef</cpp:directive> <name pos:start="477:9" pos:end="477:22">TARGET_SPARC64</name></cpp:ifndef>

            </block_content>}</block></if> <if type="elseif" pos:start="479:15" pos:end="493:13">else if <condition pos:start="479:23" pos:end="479:35">(<expr pos:start="479:24" pos:end="479:34"><name pos:start="479:24" pos:end="479:26">xop</name> <operator pos:start="479:28" pos:end="479:29">==</operator> <literal type="number" pos:start="479:31" pos:end="479:34">0x29</literal></expr>)</condition> <block pos:start="479:37" pos:end="493:13">{<block_content pos:start="481:17" pos:end="492:0"> <comment type="block" pos:start="479:39" pos:end="479:60">/* rdpsr / V9 unimp */</comment>

		<if_stmt pos:start="481:17" pos:end="483:35"><if pos:start="481:17" pos:end="483:35">if <condition pos:start="481:20" pos:end="481:36">(<expr pos:start="481:21" pos:end="481:35"><operator pos:start="481:21" pos:end="481:21">!</operator><call pos:start="481:22" pos:end="481:35"><name pos:start="481:22" pos:end="481:31">supervisor</name><argument_list pos:start="481:32" pos:end="481:35">(<argument pos:start="481:33" pos:end="481:34"><expr pos:start="481:33" pos:end="481:34"><name pos:start="481:33" pos:end="481:34">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="483:21" pos:end="483:35"><block_content pos:start="483:21" pos:end="483:35">

		    <goto pos:start="483:21" pos:end="483:35">goto <name pos:start="483:26" pos:end="483:34">priv_insn</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="485:17" pos:end="485:31"><expr pos:start="485:17" pos:end="485:30"><call pos:start="485:17" pos:end="485:30"><name pos:start="485:17" pos:end="485:28">gen_op_rdpsr</name><argument_list pos:start="485:29" pos:end="485:30">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="487:17" pos:end="487:36"><expr pos:start="487:17" pos:end="487:35"><call pos:start="487:17" pos:end="487:35"><name pos:start="487:17" pos:end="487:31">gen_movl_T0_reg</name><argument_list pos:start="487:32" pos:end="487:35">(<argument pos:start="487:33" pos:end="487:34"><expr pos:start="487:33" pos:end="487:34"><name pos:start="487:33" pos:end="487:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="489:17" pos:end="492:0">break;</break>

<cpp:endif pos:start="491:1" pos:end="491:6">#<cpp:directive pos:start="491:2" pos:end="491:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></if> <if type="elseif" pos:start="493:15" pos:end="618:13">else if <condition pos:start="493:23" pos:end="493:35">(<expr pos:start="493:24" pos:end="493:34"><name pos:start="493:24" pos:end="493:26">xop</name> <operator pos:start="493:28" pos:end="493:29">==</operator> <literal type="number" pos:start="493:31" pos:end="493:34">0x2a</literal></expr>)</condition> <block pos:start="493:37" pos:end="618:13">{<block_content pos:start="495:17" pos:end="616:22"> <comment type="block" pos:start="493:39" pos:end="493:59">/* rdwim / V9 rdpr */</comment>

		<if_stmt pos:start="495:17" pos:end="500:0"><if pos:start="495:17" pos:end="500:0">if <condition pos:start="495:20" pos:end="495:36">(<expr pos:start="495:21" pos:end="495:35"><operator pos:start="495:21" pos:end="495:21">!</operator><call pos:start="495:22" pos:end="495:35"><name pos:start="495:22" pos:end="495:31">supervisor</name><argument_list pos:start="495:32" pos:end="495:35">(<argument pos:start="495:33" pos:end="495:34"><expr pos:start="495:33" pos:end="495:34"><name pos:start="495:33" pos:end="495:34">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="497:21" pos:end="500:0"><block_content pos:start="497:21" pos:end="500:0">

		    <goto pos:start="497:21" pos:end="500:0">goto <name pos:start="497:26" pos:end="497:34">priv_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="499:1" pos:end="499:21">#<cpp:directive pos:start="499:2" pos:end="499:6">ifdef</cpp:directive> <name pos:start="499:8" pos:end="499:21">TARGET_SPARC64</name></cpp:ifdef>

                <expr_stmt pos:start="501:17" pos:end="501:46"><expr pos:start="501:17" pos:end="501:45"><name pos:start="501:17" pos:end="501:19">rs1</name> <operator pos:start="501:21" pos:end="501:21">=</operator> <call pos:start="501:23" pos:end="501:45"><name pos:start="501:23" pos:end="501:31">GET_FIELD</name><argument_list pos:start="501:32" pos:end="501:45">(<argument pos:start="501:33" pos:end="501:36"><expr pos:start="501:33" pos:end="501:36"><name pos:start="501:33" pos:end="501:36">insn</name></expr></argument>, <argument pos:start="501:39" pos:end="501:40"><expr pos:start="501:39" pos:end="501:40"><literal type="number" pos:start="501:39" pos:end="501:40">13</literal></expr></argument>, <argument pos:start="501:43" pos:end="501:44"><expr pos:start="501:43" pos:end="501:44"><literal type="number" pos:start="501:43" pos:end="501:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<switch pos:start="503:17" pos:end="609:0">switch <condition pos:start="503:24" pos:end="503:28">(<expr pos:start="503:25" pos:end="503:27"><name pos:start="503:25" pos:end="503:27">rs1</name></expr>)</condition> <block pos:start="503:30" pos:end="609:0">{<block_content pos:start="505:17" pos:end="603:24">

		<case pos:start="505:17" pos:end="505:23">case <expr pos:start="505:22" pos:end="505:22"><literal type="number" pos:start="505:22" pos:end="505:22">0</literal></expr>:</case> <comment type="line" pos:start="505:25" pos:end="505:30">// tpc</comment>

		    <expr_stmt pos:start="507:21" pos:end="507:35"><expr pos:start="507:21" pos:end="507:34"><call pos:start="507:21" pos:end="507:34"><name pos:start="507:21" pos:end="507:32">gen_op_rdtpc</name><argument_list pos:start="507:33" pos:end="507:34">()</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="509:21" pos:end="509:26">break;</break>

		<case pos:start="511:17" pos:end="511:23">case <expr pos:start="511:22" pos:end="511:22"><literal type="number" pos:start="511:22" pos:end="511:22">1</literal></expr>:</case> <comment type="line" pos:start="511:25" pos:end="511:31">// tnpc</comment>

		    <expr_stmt pos:start="513:21" pos:end="513:36"><expr pos:start="513:21" pos:end="513:35"><call pos:start="513:21" pos:end="513:35"><name pos:start="513:21" pos:end="513:33">gen_op_rdtnpc</name><argument_list pos:start="513:34" pos:end="513:35">()</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="515:21" pos:end="515:26">break;</break>

		<case pos:start="517:17" pos:end="517:23">case <expr pos:start="517:22" pos:end="517:22"><literal type="number" pos:start="517:22" pos:end="517:22">2</literal></expr>:</case> <comment type="line" pos:start="517:25" pos:end="517:33">// tstate</comment>

		    <expr_stmt pos:start="519:21" pos:end="519:38"><expr pos:start="519:21" pos:end="519:37"><call pos:start="519:21" pos:end="519:37"><name pos:start="519:21" pos:end="519:35">gen_op_rdtstate</name><argument_list pos:start="519:36" pos:end="519:37">()</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="521:21" pos:end="521:26">break;</break>

		<case pos:start="523:17" pos:end="523:23">case <expr pos:start="523:22" pos:end="523:22"><literal type="number" pos:start="523:22" pos:end="523:22">3</literal></expr>:</case> <comment type="line" pos:start="523:25" pos:end="523:29">// tt</comment>

		    <expr_stmt pos:start="525:21" pos:end="525:34"><expr pos:start="525:21" pos:end="525:33"><call pos:start="525:21" pos:end="525:33"><name pos:start="525:21" pos:end="525:31">gen_op_rdtt</name><argument_list pos:start="525:32" pos:end="525:33">()</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="527:21" pos:end="527:26">break;</break>

		<case pos:start="529:17" pos:end="529:23">case <expr pos:start="529:22" pos:end="529:22"><literal type="number" pos:start="529:22" pos:end="529:22">4</literal></expr>:</case> <comment type="line" pos:start="529:25" pos:end="529:31">// tick</comment>

		    <expr_stmt pos:start="531:21" pos:end="531:36"><expr pos:start="531:21" pos:end="531:35"><call pos:start="531:21" pos:end="531:35"><name pos:start="531:21" pos:end="531:33">gen_op_rdtick</name><argument_list pos:start="531:34" pos:end="531:35">()</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="533:21" pos:end="533:26">break;</break>

		<case pos:start="535:17" pos:end="535:23">case <expr pos:start="535:22" pos:end="535:22"><literal type="number" pos:start="535:22" pos:end="535:22">5</literal></expr>:</case> <comment type="line" pos:start="535:25" pos:end="535:30">// tba</comment>

		    <expr_stmt pos:start="537:21" pos:end="537:70"><expr pos:start="537:21" pos:end="537:69"><call pos:start="537:21" pos:end="537:69"><name pos:start="537:21" pos:end="537:39">gen_op_movtl_T0_env</name><argument_list pos:start="537:40" pos:end="537:69">(<argument pos:start="537:41" pos:end="537:68"><expr pos:start="537:41" pos:end="537:68"><call pos:start="537:41" pos:end="537:68"><name pos:start="537:41" pos:end="537:48">offsetof</name><argument_list pos:start="537:49" pos:end="537:68">(<argument pos:start="537:50" pos:end="537:62"><expr pos:start="537:50" pos:end="537:62"><name pos:start="537:50" pos:end="537:62">CPUSPARCState</name></expr></argument>, <argument pos:start="537:65" pos:end="537:67"><expr pos:start="537:65" pos:end="537:67"><name pos:start="537:65" pos:end="537:67">tbr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="539:21" pos:end="539:26">break;</break>

		<case pos:start="541:17" pos:end="541:23">case <expr pos:start="541:22" pos:end="541:22"><literal type="number" pos:start="541:22" pos:end="541:22">6</literal></expr>:</case> <comment type="line" pos:start="541:25" pos:end="541:33">// pstate</comment>

		    <expr_stmt pos:start="543:21" pos:end="543:38"><expr pos:start="543:21" pos:end="543:37"><call pos:start="543:21" pos:end="543:37"><name pos:start="543:21" pos:end="543:35">gen_op_rdpstate</name><argument_list pos:start="543:36" pos:end="543:37">()</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="545:21" pos:end="545:26">break;</break>

		<case pos:start="547:17" pos:end="547:23">case <expr pos:start="547:22" pos:end="547:22"><literal type="number" pos:start="547:22" pos:end="547:22">7</literal></expr>:</case> <comment type="line" pos:start="547:25" pos:end="547:29">// tl</comment>

		    <expr_stmt pos:start="549:21" pos:end="549:68"><expr pos:start="549:21" pos:end="549:67"><call pos:start="549:21" pos:end="549:67"><name pos:start="549:21" pos:end="549:38">gen_op_movl_T0_env</name><argument_list pos:start="549:39" pos:end="549:67">(<argument pos:start="549:40" pos:end="549:66"><expr pos:start="549:40" pos:end="549:66"><call pos:start="549:40" pos:end="549:66"><name pos:start="549:40" pos:end="549:47">offsetof</name><argument_list pos:start="549:48" pos:end="549:66">(<argument pos:start="549:49" pos:end="549:61"><expr pos:start="549:49" pos:end="549:61"><name pos:start="549:49" pos:end="549:61">CPUSPARCState</name></expr></argument>, <argument pos:start="549:64" pos:end="549:65"><expr pos:start="549:64" pos:end="549:65"><name pos:start="549:64" pos:end="549:65">tl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="551:21" pos:end="551:26">break;</break>

		<case pos:start="553:17" pos:end="553:23">case <expr pos:start="553:22" pos:end="553:22"><literal type="number" pos:start="553:22" pos:end="553:22">8</literal></expr>:</case> <comment type="line" pos:start="553:25" pos:end="553:30">// pil</comment>

		    <expr_stmt pos:start="555:21" pos:end="555:72"><expr pos:start="555:21" pos:end="555:71"><call pos:start="555:21" pos:end="555:71"><name pos:start="555:21" pos:end="555:38">gen_op_movl_T0_env</name><argument_list pos:start="555:39" pos:end="555:71">(<argument pos:start="555:40" pos:end="555:70"><expr pos:start="555:40" pos:end="555:70"><call pos:start="555:40" pos:end="555:70"><name pos:start="555:40" pos:end="555:47">offsetof</name><argument_list pos:start="555:48" pos:end="555:70">(<argument pos:start="555:49" pos:end="555:61"><expr pos:start="555:49" pos:end="555:61"><name pos:start="555:49" pos:end="555:61">CPUSPARCState</name></expr></argument>, <argument pos:start="555:64" pos:end="555:69"><expr pos:start="555:64" pos:end="555:69"><name pos:start="555:64" pos:end="555:69">psrpil</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="557:21" pos:end="557:26">break;</break>

		<case pos:start="559:17" pos:end="559:23">case <expr pos:start="559:22" pos:end="559:22"><literal type="number" pos:start="559:22" pos:end="559:22">9</literal></expr>:</case> <comment type="line" pos:start="559:25" pos:end="559:30">// cwp</comment>

		    <expr_stmt pos:start="561:21" pos:end="561:35"><expr pos:start="561:21" pos:end="561:34"><call pos:start="561:21" pos:end="561:34"><name pos:start="561:21" pos:end="561:32">gen_op_rdcwp</name><argument_list pos:start="561:33" pos:end="561:34">()</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="563:21" pos:end="563:26">break;</break>

		<case pos:start="565:17" pos:end="565:24">case <expr pos:start="565:22" pos:end="565:23"><literal type="number" pos:start="565:22" pos:end="565:23">10</literal></expr>:</case> <comment type="line" pos:start="565:26" pos:end="565:35">// cansave</comment>

		    <expr_stmt pos:start="567:21" pos:end="567:73"><expr pos:start="567:21" pos:end="567:72"><call pos:start="567:21" pos:end="567:72"><name pos:start="567:21" pos:end="567:38">gen_op_movl_T0_env</name><argument_list pos:start="567:39" pos:end="567:72">(<argument pos:start="567:40" pos:end="567:71"><expr pos:start="567:40" pos:end="567:71"><call pos:start="567:40" pos:end="567:71"><name pos:start="567:40" pos:end="567:47">offsetof</name><argument_list pos:start="567:48" pos:end="567:71">(<argument pos:start="567:49" pos:end="567:61"><expr pos:start="567:49" pos:end="567:61"><name pos:start="567:49" pos:end="567:61">CPUSPARCState</name></expr></argument>, <argument pos:start="567:64" pos:end="567:70"><expr pos:start="567:64" pos:end="567:70"><name pos:start="567:64" pos:end="567:70">cansave</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="569:21" pos:end="569:26">break;</break>

		<case pos:start="571:17" pos:end="571:24">case <expr pos:start="571:22" pos:end="571:23"><literal type="number" pos:start="571:22" pos:end="571:23">11</literal></expr>:</case> <comment type="line" pos:start="571:26" pos:end="571:38">// canrestore</comment>

		    <expr_stmt pos:start="573:21" pos:end="573:76"><expr pos:start="573:21" pos:end="573:75"><call pos:start="573:21" pos:end="573:75"><name pos:start="573:21" pos:end="573:38">gen_op_movl_T0_env</name><argument_list pos:start="573:39" pos:end="573:75">(<argument pos:start="573:40" pos:end="573:74"><expr pos:start="573:40" pos:end="573:74"><call pos:start="573:40" pos:end="573:74"><name pos:start="573:40" pos:end="573:47">offsetof</name><argument_list pos:start="573:48" pos:end="573:74">(<argument pos:start="573:49" pos:end="573:61"><expr pos:start="573:49" pos:end="573:61"><name pos:start="573:49" pos:end="573:61">CPUSPARCState</name></expr></argument>, <argument pos:start="573:64" pos:end="573:73"><expr pos:start="573:64" pos:end="573:73"><name pos:start="573:64" pos:end="573:73">canrestore</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="575:21" pos:end="575:26">break;</break>

		<case pos:start="577:17" pos:end="577:24">case <expr pos:start="577:22" pos:end="577:23"><literal type="number" pos:start="577:22" pos:end="577:23">12</literal></expr>:</case> <comment type="line" pos:start="577:26" pos:end="577:36">// cleanwin</comment>

		    <expr_stmt pos:start="579:21" pos:end="579:74"><expr pos:start="579:21" pos:end="579:73"><call pos:start="579:21" pos:end="579:73"><name pos:start="579:21" pos:end="579:38">gen_op_movl_T0_env</name><argument_list pos:start="579:39" pos:end="579:73">(<argument pos:start="579:40" pos:end="579:72"><expr pos:start="579:40" pos:end="579:72"><call pos:start="579:40" pos:end="579:72"><name pos:start="579:40" pos:end="579:47">offsetof</name><argument_list pos:start="579:48" pos:end="579:72">(<argument pos:start="579:49" pos:end="579:61"><expr pos:start="579:49" pos:end="579:61"><name pos:start="579:49" pos:end="579:61">CPUSPARCState</name></expr></argument>, <argument pos:start="579:64" pos:end="579:71"><expr pos:start="579:64" pos:end="579:71"><name pos:start="579:64" pos:end="579:71">cleanwin</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="581:21" pos:end="581:26">break;</break>

		<case pos:start="583:17" pos:end="583:24">case <expr pos:start="583:22" pos:end="583:23"><literal type="number" pos:start="583:22" pos:end="583:23">13</literal></expr>:</case> <comment type="line" pos:start="583:26" pos:end="583:36">// otherwin</comment>

		    <expr_stmt pos:start="585:21" pos:end="585:74"><expr pos:start="585:21" pos:end="585:73"><call pos:start="585:21" pos:end="585:73"><name pos:start="585:21" pos:end="585:38">gen_op_movl_T0_env</name><argument_list pos:start="585:39" pos:end="585:73">(<argument pos:start="585:40" pos:end="585:72"><expr pos:start="585:40" pos:end="585:72"><call pos:start="585:40" pos:end="585:72"><name pos:start="585:40" pos:end="585:47">offsetof</name><argument_list pos:start="585:48" pos:end="585:72">(<argument pos:start="585:49" pos:end="585:61"><expr pos:start="585:49" pos:end="585:61"><name pos:start="585:49" pos:end="585:61">CPUSPARCState</name></expr></argument>, <argument pos:start="585:64" pos:end="585:71"><expr pos:start="585:64" pos:end="585:71"><name pos:start="585:64" pos:end="585:71">otherwin</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="587:21" pos:end="587:26">break;</break>

		<case pos:start="589:17" pos:end="589:24">case <expr pos:start="589:22" pos:end="589:23"><literal type="number" pos:start="589:22" pos:end="589:23">14</literal></expr>:</case> <comment type="line" pos:start="589:26" pos:end="589:34">// wstate</comment>

		    <expr_stmt pos:start="591:21" pos:end="591:72"><expr pos:start="591:21" pos:end="591:71"><call pos:start="591:21" pos:end="591:71"><name pos:start="591:21" pos:end="591:38">gen_op_movl_T0_env</name><argument_list pos:start="591:39" pos:end="591:71">(<argument pos:start="591:40" pos:end="591:70"><expr pos:start="591:40" pos:end="591:70"><call pos:start="591:40" pos:end="591:70"><name pos:start="591:40" pos:end="591:47">offsetof</name><argument_list pos:start="591:48" pos:end="591:70">(<argument pos:start="591:49" pos:end="591:61"><expr pos:start="591:49" pos:end="591:61"><name pos:start="591:49" pos:end="591:61">CPUSPARCState</name></expr></argument>, <argument pos:start="591:64" pos:end="591:69"><expr pos:start="591:64" pos:end="591:69"><name pos:start="591:64" pos:end="591:69">wstate</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="593:21" pos:end="593:26">break;</break>

		<case pos:start="595:17" pos:end="595:24">case <expr pos:start="595:22" pos:end="595:23"><literal type="number" pos:start="595:22" pos:end="595:23">31</literal></expr>:</case> <comment type="line" pos:start="595:26" pos:end="595:31">// ver</comment>

		    <expr_stmt pos:start="597:21" pos:end="597:74"><expr pos:start="597:21" pos:end="597:73"><call pos:start="597:21" pos:end="597:73"><name pos:start="597:21" pos:end="597:39">gen_op_movtl_T0_env</name><argument_list pos:start="597:40" pos:end="597:73">(<argument pos:start="597:41" pos:end="597:72"><expr pos:start="597:41" pos:end="597:72"><call pos:start="597:41" pos:end="597:72"><name pos:start="597:41" pos:end="597:48">offsetof</name><argument_list pos:start="597:49" pos:end="597:72">(<argument pos:start="597:50" pos:end="597:62"><expr pos:start="597:50" pos:end="597:62"><name pos:start="597:50" pos:end="597:62">CPUSPARCState</name></expr></argument>, <argument pos:start="597:65" pos:end="597:71"><expr pos:start="597:65" pos:end="597:71"><name pos:start="597:65" pos:end="597:71">version</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="599:21" pos:end="599:26">break;</break>

		<case pos:start="601:17" pos:end="601:24">case <expr pos:start="601:22" pos:end="601:23"><literal type="number" pos:start="601:22" pos:end="601:23">15</literal></expr>:</case> <comment type="line" pos:start="601:26" pos:end="601:30">// fq</comment>

		<default pos:start="603:17" pos:end="603:24">default:</default>


		</block_content>}</block></switch>

<cpp:else pos:start="608:1" pos:end="608:5">#<cpp:directive pos:start="608:2" pos:end="608:5">else</cpp:directive></cpp:else>

		<expr_stmt pos:start="610:17" pos:end="613:0"><expr pos:start="610:17" pos:end="610:64"><call pos:start="610:17" pos:end="610:64"><name pos:start="610:17" pos:end="610:34">gen_op_movl_T0_env</name><argument_list pos:start="610:35" pos:end="610:64">(<argument pos:start="610:36" pos:end="610:63"><expr pos:start="610:36" pos:end="610:63"><call pos:start="610:36" pos:end="610:63"><name pos:start="610:36" pos:end="610:43">offsetof</name><argument_list pos:start="610:44" pos:end="610:63">(<argument pos:start="610:45" pos:end="610:57"><expr pos:start="610:45" pos:end="610:57"><name pos:start="610:45" pos:end="610:57">CPUSPARCState</name></expr></argument>, <argument pos:start="610:60" pos:end="610:62"><expr pos:start="610:60" pos:end="610:62"><name pos:start="610:60" pos:end="610:62">wim</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="612:1" pos:end="612:6">#<cpp:directive pos:start="612:2" pos:end="612:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="614:17" pos:end="614:36"><expr pos:start="614:17" pos:end="614:35"><call pos:start="614:17" pos:end="614:35"><name pos:start="614:17" pos:end="614:31">gen_movl_T0_reg</name><argument_list pos:start="614:32" pos:end="614:35">(<argument pos:start="614:33" pos:end="614:34"><expr pos:start="614:33" pos:end="614:34"><name pos:start="614:33" pos:end="614:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="616:17" pos:end="616:22">break;</break>

            </block_content>}</block></if> <if type="elseif" pos:start="618:15" pos:end="640:13">else if <condition pos:start="618:23" pos:end="618:35">(<expr pos:start="618:24" pos:end="618:34"><name pos:start="618:24" pos:end="618:26">xop</name> <operator pos:start="618:28" pos:end="618:29">==</operator> <literal type="number" pos:start="618:31" pos:end="618:34">0x2b</literal></expr>)</condition> <block pos:start="618:37" pos:end="640:13">{<block_content pos:start="622:17" pos:end="639:0"> <comment type="block" pos:start="618:39" pos:end="618:61">/* rdtbr / V9 flushw */</comment>

<cpp:ifdef pos:start="620:1" pos:end="620:21">#<cpp:directive pos:start="620:2" pos:end="620:6">ifdef</cpp:directive> <name pos:start="620:8" pos:end="620:21">TARGET_SPARC64</name></cpp:ifdef>

		<expr_stmt pos:start="622:17" pos:end="625:0"><expr pos:start="622:17" pos:end="622:31"><call pos:start="622:17" pos:end="622:31"><name pos:start="622:17" pos:end="622:29">gen_op_flushw</name><argument_list pos:start="622:30" pos:end="622:31">()</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="624:1" pos:end="624:5">#<cpp:directive pos:start="624:2" pos:end="624:5">else</cpp:directive></cpp:else>

		<if_stmt pos:start="626:17" pos:end="628:35"><if pos:start="626:17" pos:end="628:35">if <condition pos:start="626:20" pos:end="626:36">(<expr pos:start="626:21" pos:end="626:35"><operator pos:start="626:21" pos:end="626:21">!</operator><call pos:start="626:22" pos:end="626:35"><name pos:start="626:22" pos:end="626:31">supervisor</name><argument_list pos:start="626:32" pos:end="626:35">(<argument pos:start="626:33" pos:end="626:34"><expr pos:start="626:33" pos:end="626:34"><name pos:start="626:33" pos:end="626:34">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="628:21" pos:end="628:35"><block_content pos:start="628:21" pos:end="628:35">

		    <goto pos:start="628:21" pos:end="628:35">goto <name pos:start="628:26" pos:end="628:34">priv_insn</name>;</goto></block_content></block></if></if_stmt>

		<expr_stmt pos:start="630:17" pos:end="630:66"><expr pos:start="630:17" pos:end="630:65"><call pos:start="630:17" pos:end="630:65"><name pos:start="630:17" pos:end="630:35">gen_op_movtl_T0_env</name><argument_list pos:start="630:36" pos:end="630:65">(<argument pos:start="630:37" pos:end="630:64"><expr pos:start="630:37" pos:end="630:64"><call pos:start="630:37" pos:end="630:64"><name pos:start="630:37" pos:end="630:44">offsetof</name><argument_list pos:start="630:45" pos:end="630:64">(<argument pos:start="630:46" pos:end="630:58"><expr pos:start="630:46" pos:end="630:58"><name pos:start="630:46" pos:end="630:58">CPUSPARCState</name></expr></argument>, <argument pos:start="630:61" pos:end="630:63"><expr pos:start="630:61" pos:end="630:63"><name pos:start="630:61" pos:end="630:63">tbr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="632:17" pos:end="635:0"><expr pos:start="632:17" pos:end="632:35"><call pos:start="632:17" pos:end="632:35"><name pos:start="632:17" pos:end="632:31">gen_movl_T0_reg</name><argument_list pos:start="632:32" pos:end="632:35">(<argument pos:start="632:33" pos:end="632:34"><expr pos:start="632:33" pos:end="632:34"><name pos:start="632:33" pos:end="632:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="634:1" pos:end="634:6">#<cpp:directive pos:start="634:2" pos:end="634:6">endif</cpp:directive></cpp:endif>

                <break pos:start="636:17" pos:end="639:0">break;</break>

<cpp:endif pos:start="638:1" pos:end="638:6">#<cpp:directive pos:start="638:2" pos:end="638:6">endif</cpp:directive></cpp:endif>

	    </block_content>}</block></if> <if type="elseif" pos:start="640:15" pos:end="1007:13">else if <condition pos:start="640:23" pos:end="640:35">(<expr pos:start="640:24" pos:end="640:34"><name pos:start="640:24" pos:end="640:26">xop</name> <operator pos:start="640:28" pos:end="640:29">==</operator> <literal type="number" pos:start="640:31" pos:end="640:34">0x34</literal></expr>)</condition> <block pos:start="640:37" pos:end="1007:13">{<block_content pos:start="642:17" pos:end="1005:17">	<comment type="block" pos:start="640:41" pos:end="640:60">/* FPU Operations */</comment>

                <if_stmt pos:start="642:17" pos:end="644:34"><if pos:start="642:17" pos:end="644:34">if <condition pos:start="642:20" pos:end="642:41">(<expr pos:start="642:21" pos:end="642:40"><call pos:start="642:21" pos:end="642:40"><name pos:start="642:21" pos:end="642:36">gen_trap_ifnofpu</name><argument_list pos:start="642:37" pos:end="642:40">(<argument pos:start="642:38" pos:end="642:39"><expr pos:start="642:38" pos:end="642:39"><name pos:start="642:38" pos:end="642:39">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="644:21" pos:end="644:34"><block_content pos:start="644:21" pos:end="644:34">

                    <goto pos:start="644:21" pos:end="644:34">goto <name pos:start="644:26" pos:end="644:33">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="646:17" pos:end="646:46"><expr pos:start="646:17" pos:end="646:45"><name pos:start="646:17" pos:end="646:19">rs1</name> <operator pos:start="646:21" pos:end="646:21">=</operator> <call pos:start="646:23" pos:end="646:45"><name pos:start="646:23" pos:end="646:31">GET_FIELD</name><argument_list pos:start="646:32" pos:end="646:45">(<argument pos:start="646:33" pos:end="646:36"><expr pos:start="646:33" pos:end="646:36"><name pos:start="646:33" pos:end="646:36">insn</name></expr></argument>, <argument pos:start="646:39" pos:end="646:40"><expr pos:start="646:39" pos:end="646:40"><literal type="number" pos:start="646:39" pos:end="646:40">13</literal></expr></argument>, <argument pos:start="646:43" pos:end="646:44"><expr pos:start="646:43" pos:end="646:44"><literal type="number" pos:start="646:43" pos:end="646:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	        <expr_stmt pos:start="648:17" pos:end="648:46"><expr pos:start="648:17" pos:end="648:45"><name pos:start="648:17" pos:end="648:19">rs2</name> <operator pos:start="648:21" pos:end="648:21">=</operator> <call pos:start="648:23" pos:end="648:45"><name pos:start="648:23" pos:end="648:31">GET_FIELD</name><argument_list pos:start="648:32" pos:end="648:45">(<argument pos:start="648:33" pos:end="648:36"><expr pos:start="648:33" pos:end="648:36"><name pos:start="648:33" pos:end="648:36">insn</name></expr></argument>, <argument pos:start="648:39" pos:end="648:40"><expr pos:start="648:39" pos:end="648:40"><literal type="number" pos:start="648:39" pos:end="648:40">27</literal></expr></argument>, <argument pos:start="648:43" pos:end="648:44"><expr pos:start="648:43" pos:end="648:44"><literal type="number" pos:start="648:43" pos:end="648:44">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	        <expr_stmt pos:start="650:17" pos:end="650:46"><expr pos:start="650:17" pos:end="650:45"><name pos:start="650:17" pos:end="650:19">xop</name> <operator pos:start="650:21" pos:end="650:21">=</operator> <call pos:start="650:23" pos:end="650:45"><name pos:start="650:23" pos:end="650:31">GET_FIELD</name><argument_list pos:start="650:32" pos:end="650:45">(<argument pos:start="650:33" pos:end="650:36"><expr pos:start="650:33" pos:end="650:36"><name pos:start="650:33" pos:end="650:36">insn</name></expr></argument>, <argument pos:start="650:39" pos:end="650:40"><expr pos:start="650:39" pos:end="650:40"><literal type="number" pos:start="650:39" pos:end="650:40">18</literal></expr></argument>, <argument pos:start="650:43" pos:end="650:44"><expr pos:start="650:43" pos:end="650:44"><literal type="number" pos:start="650:43" pos:end="650:44">26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<switch pos:start="652:17" pos:end="1005:17">switch <condition pos:start="652:24" pos:end="652:28">(<expr pos:start="652:25" pos:end="652:27"><name pos:start="652:25" pos:end="652:27">xop</name></expr>)</condition> <block pos:start="652:30" pos:end="1005:17">{<block_content pos:start="654:21" pos:end="1002:28">

		    <case pos:start="654:21" pos:end="654:29">case <expr pos:start="654:26" pos:end="654:28"><literal type="number" pos:start="654:26" pos:end="654:28">0x1</literal></expr>:</case> <comment type="block" pos:start="654:31" pos:end="654:41">/* fmovs */</comment>

                	<expr_stmt pos:start="656:25" pos:end="656:49"><expr pos:start="656:25" pos:end="656:48"><call pos:start="656:25" pos:end="656:48"><name pos:start="656:25" pos:end="656:43">gen_op_load_fpr_FT0</name><argument_list pos:start="656:44" pos:end="656:48">(<argument pos:start="656:45" pos:end="656:47"><expr pos:start="656:45" pos:end="656:47"><name pos:start="656:45" pos:end="656:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="658:25" pos:end="658:49"><expr pos:start="658:25" pos:end="658:48"><call pos:start="658:25" pos:end="658:48"><name pos:start="658:25" pos:end="658:44">gen_op_store_FT0_fpr</name><argument_list pos:start="658:45" pos:end="658:48">(<argument pos:start="658:46" pos:end="658:47"><expr pos:start="658:46" pos:end="658:47"><name pos:start="658:46" pos:end="658:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="660:25" pos:end="660:30">break;</break>

		    <case pos:start="662:21" pos:end="662:29">case <expr pos:start="662:26" pos:end="662:28"><literal type="number" pos:start="662:26" pos:end="662:28">0x5</literal></expr>:</case> <comment type="block" pos:start="662:31" pos:end="662:41">/* fnegs */</comment>

                	<expr_stmt pos:start="664:25" pos:end="664:49"><expr pos:start="664:25" pos:end="664:48"><call pos:start="664:25" pos:end="664:48"><name pos:start="664:25" pos:end="664:43">gen_op_load_fpr_FT1</name><argument_list pos:start="664:44" pos:end="664:48">(<argument pos:start="664:45" pos:end="664:47"><expr pos:start="664:45" pos:end="664:47"><name pos:start="664:45" pos:end="664:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="666:25" pos:end="666:39"><expr pos:start="666:25" pos:end="666:38"><call pos:start="666:25" pos:end="666:38"><name pos:start="666:25" pos:end="666:36">gen_op_fnegs</name><argument_list pos:start="666:37" pos:end="666:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="668:25" pos:end="668:49"><expr pos:start="668:25" pos:end="668:48"><call pos:start="668:25" pos:end="668:48"><name pos:start="668:25" pos:end="668:44">gen_op_store_FT0_fpr</name><argument_list pos:start="668:45" pos:end="668:48">(<argument pos:start="668:46" pos:end="668:47"><expr pos:start="668:46" pos:end="668:47"><name pos:start="668:46" pos:end="668:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="670:25" pos:end="670:30">break;</break>

		    <case pos:start="672:21" pos:end="672:29">case <expr pos:start="672:26" pos:end="672:28"><literal type="number" pos:start="672:26" pos:end="672:28">0x9</literal></expr>:</case> <comment type="block" pos:start="672:31" pos:end="672:41">/* fabss */</comment>

                	<expr_stmt pos:start="674:25" pos:end="674:49"><expr pos:start="674:25" pos:end="674:48"><call pos:start="674:25" pos:end="674:48"><name pos:start="674:25" pos:end="674:43">gen_op_load_fpr_FT1</name><argument_list pos:start="674:44" pos:end="674:48">(<argument pos:start="674:45" pos:end="674:47"><expr pos:start="674:45" pos:end="674:47"><name pos:start="674:45" pos:end="674:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="676:25" pos:end="676:39"><expr pos:start="676:25" pos:end="676:38"><call pos:start="676:25" pos:end="676:38"><name pos:start="676:25" pos:end="676:36">gen_op_fabss</name><argument_list pos:start="676:37" pos:end="676:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="678:25" pos:end="678:49"><expr pos:start="678:25" pos:end="678:48"><call pos:start="678:25" pos:end="678:48"><name pos:start="678:25" pos:end="678:44">gen_op_store_FT0_fpr</name><argument_list pos:start="678:45" pos:end="678:48">(<argument pos:start="678:46" pos:end="678:47"><expr pos:start="678:46" pos:end="678:47"><name pos:start="678:46" pos:end="678:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="680:25" pos:end="680:30">break;</break>

		    <case pos:start="682:21" pos:end="682:30">case <expr pos:start="682:26" pos:end="682:29"><literal type="number" pos:start="682:26" pos:end="682:29">0x29</literal></expr>:</case> <comment type="block" pos:start="682:32" pos:end="682:43">/* fsqrts */</comment>

                	<expr_stmt pos:start="684:25" pos:end="684:49"><expr pos:start="684:25" pos:end="684:48"><call pos:start="684:25" pos:end="684:48"><name pos:start="684:25" pos:end="684:43">gen_op_load_fpr_FT1</name><argument_list pos:start="684:44" pos:end="684:48">(<argument pos:start="684:45" pos:end="684:47"><expr pos:start="684:45" pos:end="684:47"><name pos:start="684:45" pos:end="684:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="686:25" pos:end="686:40"><expr pos:start="686:25" pos:end="686:39"><call pos:start="686:25" pos:end="686:39"><name pos:start="686:25" pos:end="686:37">gen_op_fsqrts</name><argument_list pos:start="686:38" pos:end="686:39">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="688:25" pos:end="688:49"><expr pos:start="688:25" pos:end="688:48"><call pos:start="688:25" pos:end="688:48"><name pos:start="688:25" pos:end="688:44">gen_op_store_FT0_fpr</name><argument_list pos:start="688:45" pos:end="688:48">(<argument pos:start="688:46" pos:end="688:47"><expr pos:start="688:46" pos:end="688:47"><name pos:start="688:46" pos:end="688:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="690:25" pos:end="690:30">break;</break>

		    <case pos:start="692:21" pos:end="692:30">case <expr pos:start="692:26" pos:end="692:29"><literal type="number" pos:start="692:26" pos:end="692:29">0x2a</literal></expr>:</case> <comment type="block" pos:start="692:32" pos:end="692:43">/* fsqrtd */</comment>

                	<expr_stmt pos:start="694:25" pos:end="694:57"><expr pos:start="694:25" pos:end="694:56"><call pos:start="694:25" pos:end="694:56"><name pos:start="694:25" pos:end="694:43">gen_op_load_fpr_DT1</name><argument_list pos:start="694:44" pos:end="694:56">(<argument pos:start="694:45" pos:end="694:55"><expr pos:start="694:45" pos:end="694:55"><call pos:start="694:45" pos:end="694:55"><name pos:start="694:45" pos:end="694:50">DFPREG</name><argument_list pos:start="694:51" pos:end="694:55">(<argument pos:start="694:52" pos:end="694:54"><expr pos:start="694:52" pos:end="694:54"><name pos:start="694:52" pos:end="694:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="696:25" pos:end="696:40"><expr pos:start="696:25" pos:end="696:39"><call pos:start="696:25" pos:end="696:39"><name pos:start="696:25" pos:end="696:37">gen_op_fsqrtd</name><argument_list pos:start="696:38" pos:end="696:39">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="698:25" pos:end="698:57"><expr pos:start="698:25" pos:end="698:56"><call pos:start="698:25" pos:end="698:56"><name pos:start="698:25" pos:end="698:44">gen_op_store_DT0_fpr</name><argument_list pos:start="698:45" pos:end="698:56">(<argument pos:start="698:46" pos:end="698:55"><expr pos:start="698:46" pos:end="698:55"><call pos:start="698:46" pos:end="698:55"><name pos:start="698:46" pos:end="698:51">DFPREG</name><argument_list pos:start="698:52" pos:end="698:55">(<argument pos:start="698:53" pos:end="698:54"><expr pos:start="698:53" pos:end="698:54"><name pos:start="698:53" pos:end="698:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="700:25" pos:end="700:30">break;</break>

		    <case pos:start="702:21" pos:end="702:30">case <expr pos:start="702:26" pos:end="702:29"><literal type="number" pos:start="702:26" pos:end="702:29">0x2b</literal></expr>:</case> <comment type="block" pos:start="702:32" pos:end="702:43">/* fsqrtq */</comment>

		        <goto pos:start="704:25" pos:end="704:39">goto <name pos:start="704:30" pos:end="704:38">nfpu_insn</name>;</goto>

		    <case pos:start="706:21" pos:end="706:30">case <expr pos:start="706:26" pos:end="706:29"><literal type="number" pos:start="706:26" pos:end="706:29">0x41</literal></expr>:</case>

                	<expr_stmt pos:start="708:25" pos:end="708:49"><expr pos:start="708:25" pos:end="708:48"><call pos:start="708:25" pos:end="708:48"><name pos:start="708:25" pos:end="708:43">gen_op_load_fpr_FT0</name><argument_list pos:start="708:44" pos:end="708:48">(<argument pos:start="708:45" pos:end="708:47"><expr pos:start="708:45" pos:end="708:47"><name pos:start="708:45" pos:end="708:47">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="710:25" pos:end="710:49"><expr pos:start="710:25" pos:end="710:48"><call pos:start="710:25" pos:end="710:48"><name pos:start="710:25" pos:end="710:43">gen_op_load_fpr_FT1</name><argument_list pos:start="710:44" pos:end="710:48">(<argument pos:start="710:45" pos:end="710:47"><expr pos:start="710:45" pos:end="710:47"><name pos:start="710:45" pos:end="710:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="712:25" pos:end="712:39"><expr pos:start="712:25" pos:end="712:38"><call pos:start="712:25" pos:end="712:38"><name pos:start="712:25" pos:end="712:36">gen_op_fadds</name><argument_list pos:start="712:37" pos:end="712:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="714:25" pos:end="714:49"><expr pos:start="714:25" pos:end="714:48"><call pos:start="714:25" pos:end="714:48"><name pos:start="714:25" pos:end="714:44">gen_op_store_FT0_fpr</name><argument_list pos:start="714:45" pos:end="714:48">(<argument pos:start="714:46" pos:end="714:47"><expr pos:start="714:46" pos:end="714:47"><name pos:start="714:46" pos:end="714:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="716:25" pos:end="716:30">break;</break>

		    <case pos:start="718:21" pos:end="718:30">case <expr pos:start="718:26" pos:end="718:29"><literal type="number" pos:start="718:26" pos:end="718:29">0x42</literal></expr>:</case>

                	<expr_stmt pos:start="720:25" pos:end="720:57"><expr pos:start="720:25" pos:end="720:56"><call pos:start="720:25" pos:end="720:56"><name pos:start="720:25" pos:end="720:43">gen_op_load_fpr_DT0</name><argument_list pos:start="720:44" pos:end="720:56">(<argument pos:start="720:45" pos:end="720:55"><expr pos:start="720:45" pos:end="720:55"><call pos:start="720:45" pos:end="720:55"><name pos:start="720:45" pos:end="720:50">DFPREG</name><argument_list pos:start="720:51" pos:end="720:55">(<argument pos:start="720:52" pos:end="720:54"><expr pos:start="720:52" pos:end="720:54"><name pos:start="720:52" pos:end="720:54">rs1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="722:25" pos:end="722:57"><expr pos:start="722:25" pos:end="722:56"><call pos:start="722:25" pos:end="722:56"><name pos:start="722:25" pos:end="722:43">gen_op_load_fpr_DT1</name><argument_list pos:start="722:44" pos:end="722:56">(<argument pos:start="722:45" pos:end="722:55"><expr pos:start="722:45" pos:end="722:55"><call pos:start="722:45" pos:end="722:55"><name pos:start="722:45" pos:end="722:50">DFPREG</name><argument_list pos:start="722:51" pos:end="722:55">(<argument pos:start="722:52" pos:end="722:54"><expr pos:start="722:52" pos:end="722:54"><name pos:start="722:52" pos:end="722:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="724:25" pos:end="724:39"><expr pos:start="724:25" pos:end="724:38"><call pos:start="724:25" pos:end="724:38"><name pos:start="724:25" pos:end="724:36">gen_op_faddd</name><argument_list pos:start="724:37" pos:end="724:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="726:25" pos:end="726:57"><expr pos:start="726:25" pos:end="726:56"><call pos:start="726:25" pos:end="726:56"><name pos:start="726:25" pos:end="726:44">gen_op_store_DT0_fpr</name><argument_list pos:start="726:45" pos:end="726:56">(<argument pos:start="726:46" pos:end="726:55"><expr pos:start="726:46" pos:end="726:55"><call pos:start="726:46" pos:end="726:55"><name pos:start="726:46" pos:end="726:51">DFPREG</name><argument_list pos:start="726:52" pos:end="726:55">(<argument pos:start="726:53" pos:end="726:54"><expr pos:start="726:53" pos:end="726:54"><name pos:start="726:53" pos:end="726:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="728:25" pos:end="728:30">break;</break>

		    <case pos:start="730:21" pos:end="730:30">case <expr pos:start="730:26" pos:end="730:29"><literal type="number" pos:start="730:26" pos:end="730:29">0x43</literal></expr>:</case> <comment type="block" pos:start="730:32" pos:end="730:42">/* faddq */</comment>

		        <goto pos:start="732:25" pos:end="732:39">goto <name pos:start="732:30" pos:end="732:38">nfpu_insn</name>;</goto>

		    <case pos:start="734:21" pos:end="734:30">case <expr pos:start="734:26" pos:end="734:29"><literal type="number" pos:start="734:26" pos:end="734:29">0x45</literal></expr>:</case>

                	<expr_stmt pos:start="736:25" pos:end="736:49"><expr pos:start="736:25" pos:end="736:48"><call pos:start="736:25" pos:end="736:48"><name pos:start="736:25" pos:end="736:43">gen_op_load_fpr_FT0</name><argument_list pos:start="736:44" pos:end="736:48">(<argument pos:start="736:45" pos:end="736:47"><expr pos:start="736:45" pos:end="736:47"><name pos:start="736:45" pos:end="736:47">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="738:25" pos:end="738:49"><expr pos:start="738:25" pos:end="738:48"><call pos:start="738:25" pos:end="738:48"><name pos:start="738:25" pos:end="738:43">gen_op_load_fpr_FT1</name><argument_list pos:start="738:44" pos:end="738:48">(<argument pos:start="738:45" pos:end="738:47"><expr pos:start="738:45" pos:end="738:47"><name pos:start="738:45" pos:end="738:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="740:25" pos:end="740:39"><expr pos:start="740:25" pos:end="740:38"><call pos:start="740:25" pos:end="740:38"><name pos:start="740:25" pos:end="740:36">gen_op_fsubs</name><argument_list pos:start="740:37" pos:end="740:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="742:25" pos:end="742:49"><expr pos:start="742:25" pos:end="742:48"><call pos:start="742:25" pos:end="742:48"><name pos:start="742:25" pos:end="742:44">gen_op_store_FT0_fpr</name><argument_list pos:start="742:45" pos:end="742:48">(<argument pos:start="742:46" pos:end="742:47"><expr pos:start="742:46" pos:end="742:47"><name pos:start="742:46" pos:end="742:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="744:25" pos:end="744:30">break;</break>

		    <case pos:start="746:21" pos:end="746:30">case <expr pos:start="746:26" pos:end="746:29"><literal type="number" pos:start="746:26" pos:end="746:29">0x46</literal></expr>:</case>

                	<expr_stmt pos:start="748:25" pos:end="748:57"><expr pos:start="748:25" pos:end="748:56"><call pos:start="748:25" pos:end="748:56"><name pos:start="748:25" pos:end="748:43">gen_op_load_fpr_DT0</name><argument_list pos:start="748:44" pos:end="748:56">(<argument pos:start="748:45" pos:end="748:55"><expr pos:start="748:45" pos:end="748:55"><call pos:start="748:45" pos:end="748:55"><name pos:start="748:45" pos:end="748:50">DFPREG</name><argument_list pos:start="748:51" pos:end="748:55">(<argument pos:start="748:52" pos:end="748:54"><expr pos:start="748:52" pos:end="748:54"><name pos:start="748:52" pos:end="748:54">rs1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="750:25" pos:end="750:57"><expr pos:start="750:25" pos:end="750:56"><call pos:start="750:25" pos:end="750:56"><name pos:start="750:25" pos:end="750:43">gen_op_load_fpr_DT1</name><argument_list pos:start="750:44" pos:end="750:56">(<argument pos:start="750:45" pos:end="750:55"><expr pos:start="750:45" pos:end="750:55"><call pos:start="750:45" pos:end="750:55"><name pos:start="750:45" pos:end="750:50">DFPREG</name><argument_list pos:start="750:51" pos:end="750:55">(<argument pos:start="750:52" pos:end="750:54"><expr pos:start="750:52" pos:end="750:54"><name pos:start="750:52" pos:end="750:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="752:25" pos:end="752:39"><expr pos:start="752:25" pos:end="752:38"><call pos:start="752:25" pos:end="752:38"><name pos:start="752:25" pos:end="752:36">gen_op_fsubd</name><argument_list pos:start="752:37" pos:end="752:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="754:25" pos:end="754:57"><expr pos:start="754:25" pos:end="754:56"><call pos:start="754:25" pos:end="754:56"><name pos:start="754:25" pos:end="754:44">gen_op_store_DT0_fpr</name><argument_list pos:start="754:45" pos:end="754:56">(<argument pos:start="754:46" pos:end="754:55"><expr pos:start="754:46" pos:end="754:55"><call pos:start="754:46" pos:end="754:55"><name pos:start="754:46" pos:end="754:51">DFPREG</name><argument_list pos:start="754:52" pos:end="754:55">(<argument pos:start="754:53" pos:end="754:54"><expr pos:start="754:53" pos:end="754:54"><name pos:start="754:53" pos:end="754:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="756:25" pos:end="756:30">break;</break>

		    <case pos:start="758:21" pos:end="758:30">case <expr pos:start="758:26" pos:end="758:29"><literal type="number" pos:start="758:26" pos:end="758:29">0x47</literal></expr>:</case> <comment type="block" pos:start="758:32" pos:end="758:42">/* fsubq */</comment>

		        <goto pos:start="760:25" pos:end="760:39">goto <name pos:start="760:30" pos:end="760:38">nfpu_insn</name>;</goto>

		    <case pos:start="762:21" pos:end="762:30">case <expr pos:start="762:26" pos:end="762:29"><literal type="number" pos:start="762:26" pos:end="762:29">0x49</literal></expr>:</case>

                	<expr_stmt pos:start="764:25" pos:end="764:49"><expr pos:start="764:25" pos:end="764:48"><call pos:start="764:25" pos:end="764:48"><name pos:start="764:25" pos:end="764:43">gen_op_load_fpr_FT0</name><argument_list pos:start="764:44" pos:end="764:48">(<argument pos:start="764:45" pos:end="764:47"><expr pos:start="764:45" pos:end="764:47"><name pos:start="764:45" pos:end="764:47">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="766:25" pos:end="766:49"><expr pos:start="766:25" pos:end="766:48"><call pos:start="766:25" pos:end="766:48"><name pos:start="766:25" pos:end="766:43">gen_op_load_fpr_FT1</name><argument_list pos:start="766:44" pos:end="766:48">(<argument pos:start="766:45" pos:end="766:47"><expr pos:start="766:45" pos:end="766:47"><name pos:start="766:45" pos:end="766:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="768:25" pos:end="768:39"><expr pos:start="768:25" pos:end="768:38"><call pos:start="768:25" pos:end="768:38"><name pos:start="768:25" pos:end="768:36">gen_op_fmuls</name><argument_list pos:start="768:37" pos:end="768:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="770:25" pos:end="770:49"><expr pos:start="770:25" pos:end="770:48"><call pos:start="770:25" pos:end="770:48"><name pos:start="770:25" pos:end="770:44">gen_op_store_FT0_fpr</name><argument_list pos:start="770:45" pos:end="770:48">(<argument pos:start="770:46" pos:end="770:47"><expr pos:start="770:46" pos:end="770:47"><name pos:start="770:46" pos:end="770:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="772:25" pos:end="772:30">break;</break>

		    <case pos:start="774:21" pos:end="774:30">case <expr pos:start="774:26" pos:end="774:29"><literal type="number" pos:start="774:26" pos:end="774:29">0x4a</literal></expr>:</case>

                	<expr_stmt pos:start="776:25" pos:end="776:57"><expr pos:start="776:25" pos:end="776:56"><call pos:start="776:25" pos:end="776:56"><name pos:start="776:25" pos:end="776:43">gen_op_load_fpr_DT0</name><argument_list pos:start="776:44" pos:end="776:56">(<argument pos:start="776:45" pos:end="776:55"><expr pos:start="776:45" pos:end="776:55"><call pos:start="776:45" pos:end="776:55"><name pos:start="776:45" pos:end="776:50">DFPREG</name><argument_list pos:start="776:51" pos:end="776:55">(<argument pos:start="776:52" pos:end="776:54"><expr pos:start="776:52" pos:end="776:54"><name pos:start="776:52" pos:end="776:54">rs1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="778:25" pos:end="778:57"><expr pos:start="778:25" pos:end="778:56"><call pos:start="778:25" pos:end="778:56"><name pos:start="778:25" pos:end="778:43">gen_op_load_fpr_DT1</name><argument_list pos:start="778:44" pos:end="778:56">(<argument pos:start="778:45" pos:end="778:55"><expr pos:start="778:45" pos:end="778:55"><call pos:start="778:45" pos:end="778:55"><name pos:start="778:45" pos:end="778:50">DFPREG</name><argument_list pos:start="778:51" pos:end="778:55">(<argument pos:start="778:52" pos:end="778:54"><expr pos:start="778:52" pos:end="778:54"><name pos:start="778:52" pos:end="778:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="780:25" pos:end="780:39"><expr pos:start="780:25" pos:end="780:38"><call pos:start="780:25" pos:end="780:38"><name pos:start="780:25" pos:end="780:36">gen_op_fmuld</name><argument_list pos:start="780:37" pos:end="780:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="782:25" pos:end="782:49"><expr pos:start="782:25" pos:end="782:48"><call pos:start="782:25" pos:end="782:48"><name pos:start="782:25" pos:end="782:44">gen_op_store_DT0_fpr</name><argument_list pos:start="782:45" pos:end="782:48">(<argument pos:start="782:46" pos:end="782:47"><expr pos:start="782:46" pos:end="782:47"><name pos:start="782:46" pos:end="782:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="784:25" pos:end="784:30">break;</break>

		    <case pos:start="786:21" pos:end="786:30">case <expr pos:start="786:26" pos:end="786:29"><literal type="number" pos:start="786:26" pos:end="786:29">0x4b</literal></expr>:</case> <comment type="block" pos:start="786:32" pos:end="786:42">/* fmulq */</comment>

		        <goto pos:start="788:25" pos:end="788:39">goto <name pos:start="788:30" pos:end="788:38">nfpu_insn</name>;</goto>

		    <case pos:start="790:21" pos:end="790:30">case <expr pos:start="790:26" pos:end="790:29"><literal type="number" pos:start="790:26" pos:end="790:29">0x4d</literal></expr>:</case>

                	<expr_stmt pos:start="792:25" pos:end="792:49"><expr pos:start="792:25" pos:end="792:48"><call pos:start="792:25" pos:end="792:48"><name pos:start="792:25" pos:end="792:43">gen_op_load_fpr_FT0</name><argument_list pos:start="792:44" pos:end="792:48">(<argument pos:start="792:45" pos:end="792:47"><expr pos:start="792:45" pos:end="792:47"><name pos:start="792:45" pos:end="792:47">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="794:25" pos:end="794:49"><expr pos:start="794:25" pos:end="794:48"><call pos:start="794:25" pos:end="794:48"><name pos:start="794:25" pos:end="794:43">gen_op_load_fpr_FT1</name><argument_list pos:start="794:44" pos:end="794:48">(<argument pos:start="794:45" pos:end="794:47"><expr pos:start="794:45" pos:end="794:47"><name pos:start="794:45" pos:end="794:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="796:25" pos:end="796:39"><expr pos:start="796:25" pos:end="796:38"><call pos:start="796:25" pos:end="796:38"><name pos:start="796:25" pos:end="796:36">gen_op_fdivs</name><argument_list pos:start="796:37" pos:end="796:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="798:25" pos:end="798:49"><expr pos:start="798:25" pos:end="798:48"><call pos:start="798:25" pos:end="798:48"><name pos:start="798:25" pos:end="798:44">gen_op_store_FT0_fpr</name><argument_list pos:start="798:45" pos:end="798:48">(<argument pos:start="798:46" pos:end="798:47"><expr pos:start="798:46" pos:end="798:47"><name pos:start="798:46" pos:end="798:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="800:25" pos:end="800:30">break;</break>

		    <case pos:start="802:21" pos:end="802:30">case <expr pos:start="802:26" pos:end="802:29"><literal type="number" pos:start="802:26" pos:end="802:29">0x4e</literal></expr>:</case>

                	<expr_stmt pos:start="804:25" pos:end="804:57"><expr pos:start="804:25" pos:end="804:56"><call pos:start="804:25" pos:end="804:56"><name pos:start="804:25" pos:end="804:43">gen_op_load_fpr_DT0</name><argument_list pos:start="804:44" pos:end="804:56">(<argument pos:start="804:45" pos:end="804:55"><expr pos:start="804:45" pos:end="804:55"><call pos:start="804:45" pos:end="804:55"><name pos:start="804:45" pos:end="804:50">DFPREG</name><argument_list pos:start="804:51" pos:end="804:55">(<argument pos:start="804:52" pos:end="804:54"><expr pos:start="804:52" pos:end="804:54"><name pos:start="804:52" pos:end="804:54">rs1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="806:25" pos:end="806:57"><expr pos:start="806:25" pos:end="806:56"><call pos:start="806:25" pos:end="806:56"><name pos:start="806:25" pos:end="806:43">gen_op_load_fpr_DT1</name><argument_list pos:start="806:44" pos:end="806:56">(<argument pos:start="806:45" pos:end="806:55"><expr pos:start="806:45" pos:end="806:55"><call pos:start="806:45" pos:end="806:55"><name pos:start="806:45" pos:end="806:50">DFPREG</name><argument_list pos:start="806:51" pos:end="806:55">(<argument pos:start="806:52" pos:end="806:54"><expr pos:start="806:52" pos:end="806:54"><name pos:start="806:52" pos:end="806:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="808:25" pos:end="808:39"><expr pos:start="808:25" pos:end="808:38"><call pos:start="808:25" pos:end="808:38"><name pos:start="808:25" pos:end="808:36">gen_op_fdivd</name><argument_list pos:start="808:37" pos:end="808:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="810:25" pos:end="810:57"><expr pos:start="810:25" pos:end="810:56"><call pos:start="810:25" pos:end="810:56"><name pos:start="810:25" pos:end="810:44">gen_op_store_DT0_fpr</name><argument_list pos:start="810:45" pos:end="810:56">(<argument pos:start="810:46" pos:end="810:55"><expr pos:start="810:46" pos:end="810:55"><call pos:start="810:46" pos:end="810:55"><name pos:start="810:46" pos:end="810:51">DFPREG</name><argument_list pos:start="810:52" pos:end="810:55">(<argument pos:start="810:53" pos:end="810:54"><expr pos:start="810:53" pos:end="810:54"><name pos:start="810:53" pos:end="810:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="812:25" pos:end="812:30">break;</break>

		    <case pos:start="814:21" pos:end="814:30">case <expr pos:start="814:26" pos:end="814:29"><literal type="number" pos:start="814:26" pos:end="814:29">0x4f</literal></expr>:</case> <comment type="block" pos:start="814:32" pos:end="814:42">/* fdivq */</comment>

		        <goto pos:start="816:25" pos:end="816:39">goto <name pos:start="816:30" pos:end="816:38">nfpu_insn</name>;</goto>

		    <case pos:start="818:21" pos:end="818:30">case <expr pos:start="818:26" pos:end="818:29"><literal type="number" pos:start="818:26" pos:end="818:29">0x69</literal></expr>:</case>

                	<expr_stmt pos:start="820:25" pos:end="820:49"><expr pos:start="820:25" pos:end="820:48"><call pos:start="820:25" pos:end="820:48"><name pos:start="820:25" pos:end="820:43">gen_op_load_fpr_FT0</name><argument_list pos:start="820:44" pos:end="820:48">(<argument pos:start="820:45" pos:end="820:47"><expr pos:start="820:45" pos:end="820:47"><name pos:start="820:45" pos:end="820:47">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="822:25" pos:end="822:49"><expr pos:start="822:25" pos:end="822:48"><call pos:start="822:25" pos:end="822:48"><name pos:start="822:25" pos:end="822:43">gen_op_load_fpr_FT1</name><argument_list pos:start="822:44" pos:end="822:48">(<argument pos:start="822:45" pos:end="822:47"><expr pos:start="822:45" pos:end="822:47"><name pos:start="822:45" pos:end="822:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="824:25" pos:end="824:40"><expr pos:start="824:25" pos:end="824:39"><call pos:start="824:25" pos:end="824:39"><name pos:start="824:25" pos:end="824:37">gen_op_fsmuld</name><argument_list pos:start="824:38" pos:end="824:39">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="826:25" pos:end="826:57"><expr pos:start="826:25" pos:end="826:56"><call pos:start="826:25" pos:end="826:56"><name pos:start="826:25" pos:end="826:44">gen_op_store_DT0_fpr</name><argument_list pos:start="826:45" pos:end="826:56">(<argument pos:start="826:46" pos:end="826:55"><expr pos:start="826:46" pos:end="826:55"><call pos:start="826:46" pos:end="826:55"><name pos:start="826:46" pos:end="826:51">DFPREG</name><argument_list pos:start="826:52" pos:end="826:55">(<argument pos:start="826:53" pos:end="826:54"><expr pos:start="826:53" pos:end="826:54"><name pos:start="826:53" pos:end="826:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="828:25" pos:end="828:30">break;</break>

		    <case pos:start="830:21" pos:end="830:30">case <expr pos:start="830:26" pos:end="830:29"><literal type="number" pos:start="830:26" pos:end="830:29">0x6e</literal></expr>:</case> <comment type="block" pos:start="830:32" pos:end="830:43">/* fdmulq */</comment>

		        <goto pos:start="832:25" pos:end="832:39">goto <name pos:start="832:30" pos:end="832:38">nfpu_insn</name>;</goto>

		    <case pos:start="834:21" pos:end="834:30">case <expr pos:start="834:26" pos:end="834:29"><literal type="number" pos:start="834:26" pos:end="834:29">0xc4</literal></expr>:</case>

                	<expr_stmt pos:start="836:25" pos:end="836:49"><expr pos:start="836:25" pos:end="836:48"><call pos:start="836:25" pos:end="836:48"><name pos:start="836:25" pos:end="836:43">gen_op_load_fpr_FT1</name><argument_list pos:start="836:44" pos:end="836:48">(<argument pos:start="836:45" pos:end="836:47"><expr pos:start="836:45" pos:end="836:47"><name pos:start="836:45" pos:end="836:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="838:25" pos:end="838:39"><expr pos:start="838:25" pos:end="838:38"><call pos:start="838:25" pos:end="838:38"><name pos:start="838:25" pos:end="838:36">gen_op_fitos</name><argument_list pos:start="838:37" pos:end="838:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="840:25" pos:end="840:49"><expr pos:start="840:25" pos:end="840:48"><call pos:start="840:25" pos:end="840:48"><name pos:start="840:25" pos:end="840:44">gen_op_store_FT0_fpr</name><argument_list pos:start="840:45" pos:end="840:48">(<argument pos:start="840:46" pos:end="840:47"><expr pos:start="840:46" pos:end="840:47"><name pos:start="840:46" pos:end="840:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="842:25" pos:end="842:30">break;</break>

		    <case pos:start="844:21" pos:end="844:30">case <expr pos:start="844:26" pos:end="844:29"><literal type="number" pos:start="844:26" pos:end="844:29">0xc6</literal></expr>:</case>

                	<expr_stmt pos:start="846:25" pos:end="846:57"><expr pos:start="846:25" pos:end="846:56"><call pos:start="846:25" pos:end="846:56"><name pos:start="846:25" pos:end="846:43">gen_op_load_fpr_DT1</name><argument_list pos:start="846:44" pos:end="846:56">(<argument pos:start="846:45" pos:end="846:55"><expr pos:start="846:45" pos:end="846:55"><call pos:start="846:45" pos:end="846:55"><name pos:start="846:45" pos:end="846:50">DFPREG</name><argument_list pos:start="846:51" pos:end="846:55">(<argument pos:start="846:52" pos:end="846:54"><expr pos:start="846:52" pos:end="846:54"><name pos:start="846:52" pos:end="846:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="848:25" pos:end="848:39"><expr pos:start="848:25" pos:end="848:38"><call pos:start="848:25" pos:end="848:38"><name pos:start="848:25" pos:end="848:36">gen_op_fdtos</name><argument_list pos:start="848:37" pos:end="848:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="850:25" pos:end="850:49"><expr pos:start="850:25" pos:end="850:48"><call pos:start="850:25" pos:end="850:48"><name pos:start="850:25" pos:end="850:44">gen_op_store_FT0_fpr</name><argument_list pos:start="850:45" pos:end="850:48">(<argument pos:start="850:46" pos:end="850:47"><expr pos:start="850:46" pos:end="850:47"><name pos:start="850:46" pos:end="850:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="852:25" pos:end="852:30">break;</break>

		    <case pos:start="854:21" pos:end="854:30">case <expr pos:start="854:26" pos:end="854:29"><literal type="number" pos:start="854:26" pos:end="854:29">0xc7</literal></expr>:</case> <comment type="block" pos:start="854:32" pos:end="854:42">/* fqtos */</comment>

		        <goto pos:start="856:25" pos:end="856:39">goto <name pos:start="856:30" pos:end="856:38">nfpu_insn</name>;</goto>

		    <case pos:start="858:21" pos:end="858:30">case <expr pos:start="858:26" pos:end="858:29"><literal type="number" pos:start="858:26" pos:end="858:29">0xc8</literal></expr>:</case>

                	<expr_stmt pos:start="860:25" pos:end="860:49"><expr pos:start="860:25" pos:end="860:48"><call pos:start="860:25" pos:end="860:48"><name pos:start="860:25" pos:end="860:43">gen_op_load_fpr_FT1</name><argument_list pos:start="860:44" pos:end="860:48">(<argument pos:start="860:45" pos:end="860:47"><expr pos:start="860:45" pos:end="860:47"><name pos:start="860:45" pos:end="860:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="862:25" pos:end="862:39"><expr pos:start="862:25" pos:end="862:38"><call pos:start="862:25" pos:end="862:38"><name pos:start="862:25" pos:end="862:36">gen_op_fitod</name><argument_list pos:start="862:37" pos:end="862:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="864:25" pos:end="864:57"><expr pos:start="864:25" pos:end="864:56"><call pos:start="864:25" pos:end="864:56"><name pos:start="864:25" pos:end="864:44">gen_op_store_DT0_fpr</name><argument_list pos:start="864:45" pos:end="864:56">(<argument pos:start="864:46" pos:end="864:55"><expr pos:start="864:46" pos:end="864:55"><call pos:start="864:46" pos:end="864:55"><name pos:start="864:46" pos:end="864:51">DFPREG</name><argument_list pos:start="864:52" pos:end="864:55">(<argument pos:start="864:53" pos:end="864:54"><expr pos:start="864:53" pos:end="864:54"><name pos:start="864:53" pos:end="864:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="866:25" pos:end="866:30">break;</break>

		    <case pos:start="868:21" pos:end="868:30">case <expr pos:start="868:26" pos:end="868:29"><literal type="number" pos:start="868:26" pos:end="868:29">0xc9</literal></expr>:</case>

                	<expr_stmt pos:start="870:25" pos:end="870:49"><expr pos:start="870:25" pos:end="870:48"><call pos:start="870:25" pos:end="870:48"><name pos:start="870:25" pos:end="870:43">gen_op_load_fpr_FT1</name><argument_list pos:start="870:44" pos:end="870:48">(<argument pos:start="870:45" pos:end="870:47"><expr pos:start="870:45" pos:end="870:47"><name pos:start="870:45" pos:end="870:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="872:25" pos:end="872:39"><expr pos:start="872:25" pos:end="872:38"><call pos:start="872:25" pos:end="872:38"><name pos:start="872:25" pos:end="872:36">gen_op_fstod</name><argument_list pos:start="872:37" pos:end="872:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="874:25" pos:end="874:57"><expr pos:start="874:25" pos:end="874:56"><call pos:start="874:25" pos:end="874:56"><name pos:start="874:25" pos:end="874:44">gen_op_store_DT0_fpr</name><argument_list pos:start="874:45" pos:end="874:56">(<argument pos:start="874:46" pos:end="874:55"><expr pos:start="874:46" pos:end="874:55"><call pos:start="874:46" pos:end="874:55"><name pos:start="874:46" pos:end="874:51">DFPREG</name><argument_list pos:start="874:52" pos:end="874:55">(<argument pos:start="874:53" pos:end="874:54"><expr pos:start="874:53" pos:end="874:54"><name pos:start="874:53" pos:end="874:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="876:25" pos:end="876:30">break;</break>

		    <case pos:start="878:21" pos:end="878:30">case <expr pos:start="878:26" pos:end="878:29"><literal type="number" pos:start="878:26" pos:end="878:29">0xcb</literal></expr>:</case> <comment type="block" pos:start="878:32" pos:end="878:42">/* fqtod */</comment>

		        <goto pos:start="880:25" pos:end="880:39">goto <name pos:start="880:30" pos:end="880:38">nfpu_insn</name>;</goto>

		    <case pos:start="882:21" pos:end="882:30">case <expr pos:start="882:26" pos:end="882:29"><literal type="number" pos:start="882:26" pos:end="882:29">0xcc</literal></expr>:</case> <comment type="block" pos:start="882:32" pos:end="882:42">/* fitoq */</comment>

		        <goto pos:start="884:25" pos:end="884:39">goto <name pos:start="884:30" pos:end="884:38">nfpu_insn</name>;</goto>

		    <case pos:start="886:21" pos:end="886:30">case <expr pos:start="886:26" pos:end="886:29"><literal type="number" pos:start="886:26" pos:end="886:29">0xcd</literal></expr>:</case> <comment type="block" pos:start="886:32" pos:end="886:42">/* fstoq */</comment>

		        <goto pos:start="888:25" pos:end="888:39">goto <name pos:start="888:30" pos:end="888:38">nfpu_insn</name>;</goto>

		    <case pos:start="890:21" pos:end="890:30">case <expr pos:start="890:26" pos:end="890:29"><literal type="number" pos:start="890:26" pos:end="890:29">0xce</literal></expr>:</case> <comment type="block" pos:start="890:32" pos:end="890:42">/* fdtoq */</comment>

		        <goto pos:start="892:25" pos:end="892:39">goto <name pos:start="892:30" pos:end="892:38">nfpu_insn</name>;</goto>

		    <case pos:start="894:21" pos:end="894:30">case <expr pos:start="894:26" pos:end="894:29"><literal type="number" pos:start="894:26" pos:end="894:29">0xd1</literal></expr>:</case>

                	<expr_stmt pos:start="896:25" pos:end="896:49"><expr pos:start="896:25" pos:end="896:48"><call pos:start="896:25" pos:end="896:48"><name pos:start="896:25" pos:end="896:43">gen_op_load_fpr_FT1</name><argument_list pos:start="896:44" pos:end="896:48">(<argument pos:start="896:45" pos:end="896:47"><expr pos:start="896:45" pos:end="896:47"><name pos:start="896:45" pos:end="896:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="898:25" pos:end="898:39"><expr pos:start="898:25" pos:end="898:38"><call pos:start="898:25" pos:end="898:38"><name pos:start="898:25" pos:end="898:36">gen_op_fstoi</name><argument_list pos:start="898:37" pos:end="898:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="900:25" pos:end="900:49"><expr pos:start="900:25" pos:end="900:48"><call pos:start="900:25" pos:end="900:48"><name pos:start="900:25" pos:end="900:44">gen_op_store_FT0_fpr</name><argument_list pos:start="900:45" pos:end="900:48">(<argument pos:start="900:46" pos:end="900:47"><expr pos:start="900:46" pos:end="900:47"><name pos:start="900:46" pos:end="900:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="902:25" pos:end="902:30">break;</break>

		    <case pos:start="904:21" pos:end="904:30">case <expr pos:start="904:26" pos:end="904:29"><literal type="number" pos:start="904:26" pos:end="904:29">0xd2</literal></expr>:</case>

                	<expr_stmt pos:start="906:25" pos:end="906:49"><expr pos:start="906:25" pos:end="906:48"><call pos:start="906:25" pos:end="906:48"><name pos:start="906:25" pos:end="906:43">gen_op_load_fpr_DT1</name><argument_list pos:start="906:44" pos:end="906:48">(<argument pos:start="906:45" pos:end="906:47"><expr pos:start="906:45" pos:end="906:47"><name pos:start="906:45" pos:end="906:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="908:25" pos:end="908:39"><expr pos:start="908:25" pos:end="908:38"><call pos:start="908:25" pos:end="908:38"><name pos:start="908:25" pos:end="908:36">gen_op_fdtoi</name><argument_list pos:start="908:37" pos:end="908:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="910:25" pos:end="910:49"><expr pos:start="910:25" pos:end="910:48"><call pos:start="910:25" pos:end="910:48"><name pos:start="910:25" pos:end="910:44">gen_op_store_FT0_fpr</name><argument_list pos:start="910:45" pos:end="910:48">(<argument pos:start="910:46" pos:end="910:47"><expr pos:start="910:46" pos:end="910:47"><name pos:start="910:46" pos:end="910:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="912:25" pos:end="912:30">break;</break>

		    <case pos:start="914:21" pos:end="914:30">case <expr pos:start="914:26" pos:end="914:29"><literal type="number" pos:start="914:26" pos:end="914:29">0xd3</literal></expr>:</case> <comment type="block" pos:start="914:32" pos:end="914:42">/* fqtoi */</comment>

		        <goto pos:start="916:25" pos:end="919:0">goto <name pos:start="916:30" pos:end="916:38">nfpu_insn</name>;</goto>

<cpp:ifdef pos:start="918:1" pos:end="918:21">#<cpp:directive pos:start="918:2" pos:end="918:6">ifdef</cpp:directive> <name pos:start="918:8" pos:end="918:21">TARGET_SPARC64</name></cpp:ifdef>

		    <case pos:start="920:21" pos:end="920:29">case <expr pos:start="920:26" pos:end="920:28"><literal type="number" pos:start="920:26" pos:end="920:28">0x2</literal></expr>:</case> <comment type="block" pos:start="920:31" pos:end="920:44">/* V9 fmovd */</comment>

                	<expr_stmt pos:start="922:25" pos:end="922:57"><expr pos:start="922:25" pos:end="922:56"><call pos:start="922:25" pos:end="922:56"><name pos:start="922:25" pos:end="922:43">gen_op_load_fpr_DT0</name><argument_list pos:start="922:44" pos:end="922:56">(<argument pos:start="922:45" pos:end="922:55"><expr pos:start="922:45" pos:end="922:55"><call pos:start="922:45" pos:end="922:55"><name pos:start="922:45" pos:end="922:50">DFPREG</name><argument_list pos:start="922:51" pos:end="922:55">(<argument pos:start="922:52" pos:end="922:54"><expr pos:start="922:52" pos:end="922:54"><name pos:start="922:52" pos:end="922:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="924:25" pos:end="924:57"><expr pos:start="924:25" pos:end="924:56"><call pos:start="924:25" pos:end="924:56"><name pos:start="924:25" pos:end="924:44">gen_op_store_DT0_fpr</name><argument_list pos:start="924:45" pos:end="924:56">(<argument pos:start="924:46" pos:end="924:55"><expr pos:start="924:46" pos:end="924:55"><call pos:start="924:46" pos:end="924:55"><name pos:start="924:46" pos:end="924:51">DFPREG</name><argument_list pos:start="924:52" pos:end="924:55">(<argument pos:start="924:53" pos:end="924:54"><expr pos:start="924:53" pos:end="924:54"><name pos:start="924:53" pos:end="924:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="926:25" pos:end="926:30">break;</break>

		    <case pos:start="928:21" pos:end="928:29">case <expr pos:start="928:26" pos:end="928:28"><literal type="number" pos:start="928:26" pos:end="928:28">0x6</literal></expr>:</case> <comment type="block" pos:start="928:31" pos:end="928:44">/* V9 fnegd */</comment>

                	<expr_stmt pos:start="930:25" pos:end="930:57"><expr pos:start="930:25" pos:end="930:56"><call pos:start="930:25" pos:end="930:56"><name pos:start="930:25" pos:end="930:43">gen_op_load_fpr_DT1</name><argument_list pos:start="930:44" pos:end="930:56">(<argument pos:start="930:45" pos:end="930:55"><expr pos:start="930:45" pos:end="930:55"><call pos:start="930:45" pos:end="930:55"><name pos:start="930:45" pos:end="930:50">DFPREG</name><argument_list pos:start="930:51" pos:end="930:55">(<argument pos:start="930:52" pos:end="930:54"><expr pos:start="930:52" pos:end="930:54"><name pos:start="930:52" pos:end="930:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="932:25" pos:end="932:39"><expr pos:start="932:25" pos:end="932:38"><call pos:start="932:25" pos:end="932:38"><name pos:start="932:25" pos:end="932:36">gen_op_fnegd</name><argument_list pos:start="932:37" pos:end="932:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="934:25" pos:end="934:57"><expr pos:start="934:25" pos:end="934:56"><call pos:start="934:25" pos:end="934:56"><name pos:start="934:25" pos:end="934:44">gen_op_store_DT0_fpr</name><argument_list pos:start="934:45" pos:end="934:56">(<argument pos:start="934:46" pos:end="934:55"><expr pos:start="934:46" pos:end="934:55"><call pos:start="934:46" pos:end="934:55"><name pos:start="934:46" pos:end="934:51">DFPREG</name><argument_list pos:start="934:52" pos:end="934:55">(<argument pos:start="934:53" pos:end="934:54"><expr pos:start="934:53" pos:end="934:54"><name pos:start="934:53" pos:end="934:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="936:25" pos:end="936:30">break;</break>

		    <case pos:start="938:21" pos:end="938:29">case <expr pos:start="938:26" pos:end="938:28"><literal type="number" pos:start="938:26" pos:end="938:28">0xa</literal></expr>:</case> <comment type="block" pos:start="938:31" pos:end="938:44">/* V9 fabsd */</comment>

                	<expr_stmt pos:start="940:25" pos:end="940:57"><expr pos:start="940:25" pos:end="940:56"><call pos:start="940:25" pos:end="940:56"><name pos:start="940:25" pos:end="940:43">gen_op_load_fpr_DT1</name><argument_list pos:start="940:44" pos:end="940:56">(<argument pos:start="940:45" pos:end="940:55"><expr pos:start="940:45" pos:end="940:55"><call pos:start="940:45" pos:end="940:55"><name pos:start="940:45" pos:end="940:50">DFPREG</name><argument_list pos:start="940:51" pos:end="940:55">(<argument pos:start="940:52" pos:end="940:54"><expr pos:start="940:52" pos:end="940:54"><name pos:start="940:52" pos:end="940:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="942:25" pos:end="942:39"><expr pos:start="942:25" pos:end="942:38"><call pos:start="942:25" pos:end="942:38"><name pos:start="942:25" pos:end="942:36">gen_op_fabsd</name><argument_list pos:start="942:37" pos:end="942:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="944:25" pos:end="944:57"><expr pos:start="944:25" pos:end="944:56"><call pos:start="944:25" pos:end="944:56"><name pos:start="944:25" pos:end="944:44">gen_op_store_DT0_fpr</name><argument_list pos:start="944:45" pos:end="944:56">(<argument pos:start="944:46" pos:end="944:55"><expr pos:start="944:46" pos:end="944:55"><call pos:start="944:46" pos:end="944:55"><name pos:start="944:46" pos:end="944:51">DFPREG</name><argument_list pos:start="944:52" pos:end="944:55">(<argument pos:start="944:53" pos:end="944:54"><expr pos:start="944:53" pos:end="944:54"><name pos:start="944:53" pos:end="944:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="946:25" pos:end="946:30">break;</break>

		    <case pos:start="948:21" pos:end="948:30">case <expr pos:start="948:26" pos:end="948:29"><literal type="number" pos:start="948:26" pos:end="948:29">0x81</literal></expr>:</case> <comment type="block" pos:start="948:32" pos:end="948:45">/* V9 fstox */</comment>

                	<expr_stmt pos:start="950:25" pos:end="950:49"><expr pos:start="950:25" pos:end="950:48"><call pos:start="950:25" pos:end="950:48"><name pos:start="950:25" pos:end="950:43">gen_op_load_fpr_FT1</name><argument_list pos:start="950:44" pos:end="950:48">(<argument pos:start="950:45" pos:end="950:47"><expr pos:start="950:45" pos:end="950:47"><name pos:start="950:45" pos:end="950:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="952:25" pos:end="952:39"><expr pos:start="952:25" pos:end="952:38"><call pos:start="952:25" pos:end="952:38"><name pos:start="952:25" pos:end="952:36">gen_op_fstox</name><argument_list pos:start="952:37" pos:end="952:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="954:25" pos:end="954:57"><expr pos:start="954:25" pos:end="954:56"><call pos:start="954:25" pos:end="954:56"><name pos:start="954:25" pos:end="954:44">gen_op_store_DT0_fpr</name><argument_list pos:start="954:45" pos:end="954:56">(<argument pos:start="954:46" pos:end="954:55"><expr pos:start="954:46" pos:end="954:55"><call pos:start="954:46" pos:end="954:55"><name pos:start="954:46" pos:end="954:51">DFPREG</name><argument_list pos:start="954:52" pos:end="954:55">(<argument pos:start="954:53" pos:end="954:54"><expr pos:start="954:53" pos:end="954:54"><name pos:start="954:53" pos:end="954:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="956:25" pos:end="956:30">break;</break>

		    <case pos:start="958:21" pos:end="958:30">case <expr pos:start="958:26" pos:end="958:29"><literal type="number" pos:start="958:26" pos:end="958:29">0x82</literal></expr>:</case> <comment type="block" pos:start="958:32" pos:end="958:45">/* V9 fdtox */</comment>

                	<expr_stmt pos:start="960:25" pos:end="960:57"><expr pos:start="960:25" pos:end="960:56"><call pos:start="960:25" pos:end="960:56"><name pos:start="960:25" pos:end="960:43">gen_op_load_fpr_DT1</name><argument_list pos:start="960:44" pos:end="960:56">(<argument pos:start="960:45" pos:end="960:55"><expr pos:start="960:45" pos:end="960:55"><call pos:start="960:45" pos:end="960:55"><name pos:start="960:45" pos:end="960:50">DFPREG</name><argument_list pos:start="960:51" pos:end="960:55">(<argument pos:start="960:52" pos:end="960:54"><expr pos:start="960:52" pos:end="960:54"><name pos:start="960:52" pos:end="960:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="962:25" pos:end="962:39"><expr pos:start="962:25" pos:end="962:38"><call pos:start="962:25" pos:end="962:38"><name pos:start="962:25" pos:end="962:36">gen_op_fdtox</name><argument_list pos:start="962:37" pos:end="962:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="964:25" pos:end="964:57"><expr pos:start="964:25" pos:end="964:56"><call pos:start="964:25" pos:end="964:56"><name pos:start="964:25" pos:end="964:44">gen_op_store_DT0_fpr</name><argument_list pos:start="964:45" pos:end="964:56">(<argument pos:start="964:46" pos:end="964:55"><expr pos:start="964:46" pos:end="964:55"><call pos:start="964:46" pos:end="964:55"><name pos:start="964:46" pos:end="964:51">DFPREG</name><argument_list pos:start="964:52" pos:end="964:55">(<argument pos:start="964:53" pos:end="964:54"><expr pos:start="964:53" pos:end="964:54"><name pos:start="964:53" pos:end="964:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="966:25" pos:end="966:30">break;</break>

		    <case pos:start="968:21" pos:end="968:30">case <expr pos:start="968:26" pos:end="968:29"><literal type="number" pos:start="968:26" pos:end="968:29">0x84</literal></expr>:</case> <comment type="block" pos:start="968:32" pos:end="968:45">/* V9 fxtos */</comment>

                	<expr_stmt pos:start="970:25" pos:end="970:57"><expr pos:start="970:25" pos:end="970:56"><call pos:start="970:25" pos:end="970:56"><name pos:start="970:25" pos:end="970:43">gen_op_load_fpr_DT1</name><argument_list pos:start="970:44" pos:end="970:56">(<argument pos:start="970:45" pos:end="970:55"><expr pos:start="970:45" pos:end="970:55"><call pos:start="970:45" pos:end="970:55"><name pos:start="970:45" pos:end="970:50">DFPREG</name><argument_list pos:start="970:51" pos:end="970:55">(<argument pos:start="970:52" pos:end="970:54"><expr pos:start="970:52" pos:end="970:54"><name pos:start="970:52" pos:end="970:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="972:25" pos:end="972:39"><expr pos:start="972:25" pos:end="972:38"><call pos:start="972:25" pos:end="972:38"><name pos:start="972:25" pos:end="972:36">gen_op_fxtos</name><argument_list pos:start="972:37" pos:end="972:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="974:25" pos:end="974:49"><expr pos:start="974:25" pos:end="974:48"><call pos:start="974:25" pos:end="974:48"><name pos:start="974:25" pos:end="974:44">gen_op_store_FT0_fpr</name><argument_list pos:start="974:45" pos:end="974:48">(<argument pos:start="974:46" pos:end="974:47"><expr pos:start="974:46" pos:end="974:47"><name pos:start="974:46" pos:end="974:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="976:25" pos:end="976:30">break;</break>

		    <case pos:start="978:21" pos:end="978:30">case <expr pos:start="978:26" pos:end="978:29"><literal type="number" pos:start="978:26" pos:end="978:29">0x88</literal></expr>:</case> <comment type="block" pos:start="978:32" pos:end="978:45">/* V9 fxtod */</comment>

                	<expr_stmt pos:start="980:25" pos:end="980:57"><expr pos:start="980:25" pos:end="980:56"><call pos:start="980:25" pos:end="980:56"><name pos:start="980:25" pos:end="980:43">gen_op_load_fpr_DT1</name><argument_list pos:start="980:44" pos:end="980:56">(<argument pos:start="980:45" pos:end="980:55"><expr pos:start="980:45" pos:end="980:55"><call pos:start="980:45" pos:end="980:55"><name pos:start="980:45" pos:end="980:50">DFPREG</name><argument_list pos:start="980:51" pos:end="980:55">(<argument pos:start="980:52" pos:end="980:54"><expr pos:start="980:52" pos:end="980:54"><name pos:start="980:52" pos:end="980:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="982:25" pos:end="982:39"><expr pos:start="982:25" pos:end="982:38"><call pos:start="982:25" pos:end="982:38"><name pos:start="982:25" pos:end="982:36">gen_op_fxtod</name><argument_list pos:start="982:37" pos:end="982:38">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="984:25" pos:end="984:57"><expr pos:start="984:25" pos:end="984:56"><call pos:start="984:25" pos:end="984:56"><name pos:start="984:25" pos:end="984:44">gen_op_store_DT0_fpr</name><argument_list pos:start="984:45" pos:end="984:56">(<argument pos:start="984:46" pos:end="984:55"><expr pos:start="984:46" pos:end="984:55"><call pos:start="984:46" pos:end="984:55"><name pos:start="984:46" pos:end="984:51">DFPREG</name><argument_list pos:start="984:52" pos:end="984:55">(<argument pos:start="984:53" pos:end="984:54"><expr pos:start="984:53" pos:end="984:54"><name pos:start="984:53" pos:end="984:54">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="986:25" pos:end="986:30">break;</break>

		    <case pos:start="988:21" pos:end="988:29">case <expr pos:start="988:26" pos:end="988:28"><literal type="number" pos:start="988:26" pos:end="988:28">0x3</literal></expr>:</case> <comment type="block" pos:start="988:31" pos:end="988:44">/* V9 fmovq */</comment>

		    <case pos:start="990:21" pos:end="990:29">case <expr pos:start="990:26" pos:end="990:28"><literal type="number" pos:start="990:26" pos:end="990:28">0x7</literal></expr>:</case> <comment type="block" pos:start="990:31" pos:end="990:44">/* V9 fnegq */</comment>

		    <case pos:start="992:21" pos:end="992:29">case <expr pos:start="992:26" pos:end="992:28"><literal type="number" pos:start="992:26" pos:end="992:28">0xb</literal></expr>:</case> <comment type="block" pos:start="992:31" pos:end="992:44">/* V9 fabsq */</comment>

		    <case pos:start="994:21" pos:end="994:30">case <expr pos:start="994:26" pos:end="994:29"><literal type="number" pos:start="994:26" pos:end="994:29">0x83</literal></expr>:</case> <comment type="block" pos:start="994:32" pos:end="994:45">/* V9 fqtox */</comment>

		    <case pos:start="996:21" pos:end="996:30">case <expr pos:start="996:26" pos:end="996:29"><literal type="number" pos:start="996:26" pos:end="996:29">0x8c</literal></expr>:</case> <comment type="block" pos:start="996:32" pos:end="996:45">/* V9 fxtoq */</comment>

		        <goto pos:start="998:25" pos:end="1001:0">goto <name pos:start="998:30" pos:end="998:38">nfpu_insn</name>;</goto>

<cpp:endif pos:start="1000:1" pos:end="1000:6">#<cpp:directive pos:start="1000:2" pos:end="1000:6">endif</cpp:directive></cpp:endif>

		    <default pos:start="1002:21" pos:end="1002:28">default:</default>


		</block_content>}</block></switch>

	    </block_content>}</block></if> <if type="elseif" pos:start="1007:15" pos:end="1412:13">else if <condition pos:start="1007:23" pos:end="1007:35">(<expr pos:start="1007:24" pos:end="1007:34"><name pos:start="1007:24" pos:end="1007:26">xop</name> <operator pos:start="1007:28" pos:end="1007:29">==</operator> <literal type="number" pos:start="1007:31" pos:end="1007:34">0x35</literal></expr>)</condition> <block pos:start="1007:37" pos:end="1412:13">{<block_content pos:start="1011:17" pos:end="1411:0">	<comment type="block" pos:start="1007:41" pos:end="1007:60">/* FPU Operations */</comment>

<cpp:ifdef pos:start="1009:1" pos:end="1009:21">#<cpp:directive pos:start="1009:2" pos:end="1009:6">ifdef</cpp:directive> <name pos:start="1009:8" pos:end="1009:21">TARGET_SPARC64</name></cpp:ifdef>

		<decl_stmt pos:start="1011:17" pos:end="1014:0"><decl pos:start="1011:17" pos:end="1011:24"><type pos:start="1011:17" pos:end="1011:19"><name pos:start="1011:17" pos:end="1011:19">int</name></type> <name pos:start="1011:21" pos:end="1011:24">cond</name></decl>;</decl_stmt>

<cpp:endif pos:start="1013:1" pos:end="1013:6">#<cpp:directive pos:start="1013:2" pos:end="1013:6">endif</cpp:directive></cpp:endif>

                <if_stmt pos:start="1015:17" pos:end="1017:34"><if pos:start="1015:17" pos:end="1017:34">if <condition pos:start="1015:20" pos:end="1015:41">(<expr pos:start="1015:21" pos:end="1015:40"><call pos:start="1015:21" pos:end="1015:40"><name pos:start="1015:21" pos:end="1015:36">gen_trap_ifnofpu</name><argument_list pos:start="1015:37" pos:end="1015:40">(<argument pos:start="1015:38" pos:end="1015:39"><expr pos:start="1015:38" pos:end="1015:39"><name pos:start="1015:38" pos:end="1015:39">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1017:21" pos:end="1017:34"><block_content pos:start="1017:21" pos:end="1017:34">

                    <goto pos:start="1017:21" pos:end="1017:34">goto <name pos:start="1017:26" pos:end="1017:33">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1019:17" pos:end="1019:46"><expr pos:start="1019:17" pos:end="1019:45"><name pos:start="1019:17" pos:end="1019:19">rs1</name> <operator pos:start="1019:21" pos:end="1019:21">=</operator> <call pos:start="1019:23" pos:end="1019:45"><name pos:start="1019:23" pos:end="1019:31">GET_FIELD</name><argument_list pos:start="1019:32" pos:end="1019:45">(<argument pos:start="1019:33" pos:end="1019:36"><expr pos:start="1019:33" pos:end="1019:36"><name pos:start="1019:33" pos:end="1019:36">insn</name></expr></argument>, <argument pos:start="1019:39" pos:end="1019:40"><expr pos:start="1019:39" pos:end="1019:40"><literal type="number" pos:start="1019:39" pos:end="1019:40">13</literal></expr></argument>, <argument pos:start="1019:43" pos:end="1019:44"><expr pos:start="1019:43" pos:end="1019:44"><literal type="number" pos:start="1019:43" pos:end="1019:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	        <expr_stmt pos:start="1021:17" pos:end="1021:46"><expr pos:start="1021:17" pos:end="1021:45"><name pos:start="1021:17" pos:end="1021:19">rs2</name> <operator pos:start="1021:21" pos:end="1021:21">=</operator> <call pos:start="1021:23" pos:end="1021:45"><name pos:start="1021:23" pos:end="1021:31">GET_FIELD</name><argument_list pos:start="1021:32" pos:end="1021:45">(<argument pos:start="1021:33" pos:end="1021:36"><expr pos:start="1021:33" pos:end="1021:36"><name pos:start="1021:33" pos:end="1021:36">insn</name></expr></argument>, <argument pos:start="1021:39" pos:end="1021:40"><expr pos:start="1021:39" pos:end="1021:40"><literal type="number" pos:start="1021:39" pos:end="1021:40">27</literal></expr></argument>, <argument pos:start="1021:43" pos:end="1021:44"><expr pos:start="1021:43" pos:end="1021:44"><literal type="number" pos:start="1021:43" pos:end="1021:44">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	        <expr_stmt pos:start="1023:17" pos:end="1026:0"><expr pos:start="1023:17" pos:end="1023:45"><name pos:start="1023:17" pos:end="1023:19">xop</name> <operator pos:start="1023:21" pos:end="1023:21">=</operator> <call pos:start="1023:23" pos:end="1023:45"><name pos:start="1023:23" pos:end="1023:31">GET_FIELD</name><argument_list pos:start="1023:32" pos:end="1023:45">(<argument pos:start="1023:33" pos:end="1023:36"><expr pos:start="1023:33" pos:end="1023:36"><name pos:start="1023:33" pos:end="1023:36">insn</name></expr></argument>, <argument pos:start="1023:39" pos:end="1023:40"><expr pos:start="1023:39" pos:end="1023:40"><literal type="number" pos:start="1023:39" pos:end="1023:40">18</literal></expr></argument>, <argument pos:start="1023:43" pos:end="1023:44"><expr pos:start="1023:43" pos:end="1023:44"><literal type="number" pos:start="1023:43" pos:end="1023:44">26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="1025:1" pos:end="1025:21">#<cpp:directive pos:start="1025:2" pos:end="1025:6">ifdef</cpp:directive> <name pos:start="1025:8" pos:end="1025:21">TARGET_SPARC64</name></cpp:ifdef>

		<if_stmt pos:start="1027:17" pos:end="1078:0"><if pos:start="1027:17" pos:end="1049:17">if <condition pos:start="1027:20" pos:end="1027:43">(<expr pos:start="1027:21" pos:end="1027:42"><operator pos:start="1027:21" pos:end="1027:21">(</operator><name pos:start="1027:22" pos:end="1027:24">xop</name> <operator pos:start="1027:26" pos:end="1027:26">&amp;</operator> <literal type="number" pos:start="1027:28" pos:end="1027:32">0x11f</literal><operator pos:start="1027:33" pos:end="1027:33">)</operator> <operator pos:start="1027:35" pos:end="1027:36">==</operator> <literal type="number" pos:start="1027:38" pos:end="1027:42">0x005</literal></expr>)</condition> <block pos:start="1027:45" pos:end="1049:17">{<block_content pos:start="1029:21" pos:end="1047:26"> <comment type="line" pos:start="1027:47" pos:end="1027:58">// V9 fmovsr</comment>

		    <expr_stmt pos:start="1029:21" pos:end="1029:54"><expr pos:start="1029:21" pos:end="1029:53"><name pos:start="1029:21" pos:end="1029:24">cond</name> <operator pos:start="1029:26" pos:end="1029:26">=</operator> <call pos:start="1029:28" pos:end="1029:53"><name pos:start="1029:28" pos:end="1029:39">GET_FIELD_SP</name><argument_list pos:start="1029:40" pos:end="1029:53">(<argument pos:start="1029:41" pos:end="1029:44"><expr pos:start="1029:41" pos:end="1029:44"><name pos:start="1029:41" pos:end="1029:44">insn</name></expr></argument>, <argument pos:start="1029:47" pos:end="1029:48"><expr pos:start="1029:47" pos:end="1029:48"><literal type="number" pos:start="1029:47" pos:end="1029:48">14</literal></expr></argument>, <argument pos:start="1029:51" pos:end="1029:52"><expr pos:start="1029:51" pos:end="1029:52"><literal type="number" pos:start="1029:51" pos:end="1029:52">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="1031:21" pos:end="1031:44"><expr pos:start="1031:21" pos:end="1031:43"><call pos:start="1031:21" pos:end="1031:43"><name pos:start="1031:21" pos:end="1031:39">gen_op_load_fpr_FT0</name><argument_list pos:start="1031:40" pos:end="1031:43">(<argument pos:start="1031:41" pos:end="1031:42"><expr pos:start="1031:41" pos:end="1031:42"><name pos:start="1031:41" pos:end="1031:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="1033:21" pos:end="1033:45"><expr pos:start="1033:21" pos:end="1033:44"><call pos:start="1033:21" pos:end="1033:44"><name pos:start="1033:21" pos:end="1033:39">gen_op_load_fpr_FT1</name><argument_list pos:start="1033:40" pos:end="1033:44">(<argument pos:start="1033:41" pos:end="1033:43"><expr pos:start="1033:41" pos:end="1033:43"><name pos:start="1033:41" pos:end="1033:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="1035:21" pos:end="1035:50"><expr pos:start="1035:21" pos:end="1035:49"><name pos:start="1035:21" pos:end="1035:23">rs1</name> <operator pos:start="1035:25" pos:end="1035:25">=</operator> <call pos:start="1035:27" pos:end="1035:49"><name pos:start="1035:27" pos:end="1035:35">GET_FIELD</name><argument_list pos:start="1035:36" pos:end="1035:49">(<argument pos:start="1035:37" pos:end="1035:40"><expr pos:start="1035:37" pos:end="1035:40"><name pos:start="1035:37" pos:end="1035:40">insn</name></expr></argument>, <argument pos:start="1035:43" pos:end="1035:44"><expr pos:start="1035:43" pos:end="1035:44"><literal type="number" pos:start="1035:43" pos:end="1035:44">13</literal></expr></argument>, <argument pos:start="1035:47" pos:end="1035:48"><expr pos:start="1035:47" pos:end="1035:48"><literal type="number" pos:start="1035:47" pos:end="1035:48">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="1037:21" pos:end="1037:41"><expr pos:start="1037:21" pos:end="1037:40"><call pos:start="1037:21" pos:end="1037:40"><name pos:start="1037:21" pos:end="1037:35">gen_movl_reg_T0</name><argument_list pos:start="1037:36" pos:end="1037:40">(<argument pos:start="1037:37" pos:end="1037:39"><expr pos:start="1037:37" pos:end="1037:39"><name pos:start="1037:37" pos:end="1037:39">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="1039:21" pos:end="1039:33"><expr pos:start="1039:21" pos:end="1039:32"><call pos:start="1039:21" pos:end="1039:32"><name pos:start="1039:21" pos:end="1039:28">flush_T2</name><argument_list pos:start="1039:29" pos:end="1039:32">(<argument pos:start="1039:30" pos:end="1039:31"><expr pos:start="1039:30" pos:end="1039:31"><name pos:start="1039:30" pos:end="1039:31">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="1041:21" pos:end="1041:39"><expr pos:start="1041:21" pos:end="1041:38"><call pos:start="1041:21" pos:end="1041:38"><name pos:start="1041:21" pos:end="1041:32">gen_cond_reg</name><argument_list pos:start="1041:33" pos:end="1041:38">(<argument pos:start="1041:34" pos:end="1041:37"><expr pos:start="1041:34" pos:end="1041:37"><name pos:start="1041:34" pos:end="1041:37">cond</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="1043:21" pos:end="1043:38"><expr pos:start="1043:21" pos:end="1043:37"><call pos:start="1043:21" pos:end="1043:37"><name pos:start="1043:21" pos:end="1043:35">gen_op_fmovs_cc</name><argument_list pos:start="1043:36" pos:end="1043:37">()</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="1045:21" pos:end="1045:45"><expr pos:start="1045:21" pos:end="1045:44"><call pos:start="1045:21" pos:end="1045:44"><name pos:start="1045:21" pos:end="1045:40">gen_op_store_FT0_fpr</name><argument_list pos:start="1045:41" pos:end="1045:44">(<argument pos:start="1045:42" pos:end="1045:43"><expr pos:start="1045:42" pos:end="1045:43"><name pos:start="1045:42" pos:end="1045:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="1047:21" pos:end="1047:26">break;</break>

		</block_content>}</block></if> <if type="elseif" pos:start="1049:19" pos:end="1071:17">else if <condition pos:start="1049:27" pos:end="1049:50">(<expr pos:start="1049:28" pos:end="1049:49"><operator pos:start="1049:28" pos:end="1049:28">(</operator><name pos:start="1049:29" pos:end="1049:31">xop</name> <operator pos:start="1049:33" pos:end="1049:33">&amp;</operator> <literal type="number" pos:start="1049:35" pos:end="1049:39">0x11f</literal><operator pos:start="1049:40" pos:end="1049:40">)</operator> <operator pos:start="1049:42" pos:end="1049:43">==</operator> <literal type="number" pos:start="1049:45" pos:end="1049:49">0x006</literal></expr>)</condition> <block pos:start="1049:52" pos:end="1071:17">{<block_content pos:start="1051:21" pos:end="1069:26"> <comment type="line" pos:start="1049:54" pos:end="1049:65">// V9 fmovdr</comment>

		    <expr_stmt pos:start="1051:21" pos:end="1051:54"><expr pos:start="1051:21" pos:end="1051:53"><name pos:start="1051:21" pos:end="1051:24">cond</name> <operator pos:start="1051:26" pos:end="1051:26">=</operator> <call pos:start="1051:28" pos:end="1051:53"><name pos:start="1051:28" pos:end="1051:39">GET_FIELD_SP</name><argument_list pos:start="1051:40" pos:end="1051:53">(<argument pos:start="1051:41" pos:end="1051:44"><expr pos:start="1051:41" pos:end="1051:44"><name pos:start="1051:41" pos:end="1051:44">insn</name></expr></argument>, <argument pos:start="1051:47" pos:end="1051:48"><expr pos:start="1051:47" pos:end="1051:48"><literal type="number" pos:start="1051:47" pos:end="1051:48">14</literal></expr></argument>, <argument pos:start="1051:51" pos:end="1051:52"><expr pos:start="1051:51" pos:end="1051:52"><literal type="number" pos:start="1051:51" pos:end="1051:52">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="1053:21" pos:end="1053:44"><expr pos:start="1053:21" pos:end="1053:43"><call pos:start="1053:21" pos:end="1053:43"><name pos:start="1053:21" pos:end="1053:39">gen_op_load_fpr_DT0</name><argument_list pos:start="1053:40" pos:end="1053:43">(<argument pos:start="1053:41" pos:end="1053:42"><expr pos:start="1053:41" pos:end="1053:42"><name pos:start="1053:41" pos:end="1053:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="1055:21" pos:end="1055:45"><expr pos:start="1055:21" pos:end="1055:44"><call pos:start="1055:21" pos:end="1055:44"><name pos:start="1055:21" pos:end="1055:39">gen_op_load_fpr_DT1</name><argument_list pos:start="1055:40" pos:end="1055:44">(<argument pos:start="1055:41" pos:end="1055:43"><expr pos:start="1055:41" pos:end="1055:43"><name pos:start="1055:41" pos:end="1055:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="1057:21" pos:end="1057:33"><expr pos:start="1057:21" pos:end="1057:32"><call pos:start="1057:21" pos:end="1057:32"><name pos:start="1057:21" pos:end="1057:28">flush_T2</name><argument_list pos:start="1057:29" pos:end="1057:32">(<argument pos:start="1057:30" pos:end="1057:31"><expr pos:start="1057:30" pos:end="1057:31"><name pos:start="1057:30" pos:end="1057:31">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="1059:21" pos:end="1059:50"><expr pos:start="1059:21" pos:end="1059:49"><name pos:start="1059:21" pos:end="1059:23">rs1</name> <operator pos:start="1059:25" pos:end="1059:25">=</operator> <call pos:start="1059:27" pos:end="1059:49"><name pos:start="1059:27" pos:end="1059:35">GET_FIELD</name><argument_list pos:start="1059:36" pos:end="1059:49">(<argument pos:start="1059:37" pos:end="1059:40"><expr pos:start="1059:37" pos:end="1059:40"><name pos:start="1059:37" pos:end="1059:40">insn</name></expr></argument>, <argument pos:start="1059:43" pos:end="1059:44"><expr pos:start="1059:43" pos:end="1059:44"><literal type="number" pos:start="1059:43" pos:end="1059:44">13</literal></expr></argument>, <argument pos:start="1059:47" pos:end="1059:48"><expr pos:start="1059:47" pos:end="1059:48"><literal type="number" pos:start="1059:47" pos:end="1059:48">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="1061:21" pos:end="1061:41"><expr pos:start="1061:21" pos:end="1061:40"><call pos:start="1061:21" pos:end="1061:40"><name pos:start="1061:21" pos:end="1061:35">gen_movl_reg_T0</name><argument_list pos:start="1061:36" pos:end="1061:40">(<argument pos:start="1061:37" pos:end="1061:39"><expr pos:start="1061:37" pos:end="1061:39"><name pos:start="1061:37" pos:end="1061:39">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="1063:21" pos:end="1063:39"><expr pos:start="1063:21" pos:end="1063:38"><call pos:start="1063:21" pos:end="1063:38"><name pos:start="1063:21" pos:end="1063:32">gen_cond_reg</name><argument_list pos:start="1063:33" pos:end="1063:38">(<argument pos:start="1063:34" pos:end="1063:37"><expr pos:start="1063:34" pos:end="1063:37"><name pos:start="1063:34" pos:end="1063:37">cond</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="1065:21" pos:end="1065:38"><expr pos:start="1065:21" pos:end="1065:37"><call pos:start="1065:21" pos:end="1065:37"><name pos:start="1065:21" pos:end="1065:35">gen_op_fmovs_cc</name><argument_list pos:start="1065:36" pos:end="1065:37">()</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="1067:21" pos:end="1067:45"><expr pos:start="1067:21" pos:end="1067:44"><call pos:start="1067:21" pos:end="1067:44"><name pos:start="1067:21" pos:end="1067:40">gen_op_store_DT0_fpr</name><argument_list pos:start="1067:41" pos:end="1067:44">(<argument pos:start="1067:42" pos:end="1067:43"><expr pos:start="1067:42" pos:end="1067:43"><name pos:start="1067:42" pos:end="1067:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="1069:21" pos:end="1069:26">break;</break>

		</block_content>}</block></if> <if type="elseif" pos:start="1071:19" pos:end="1078:0">else if <condition pos:start="1071:27" pos:end="1071:50">(<expr pos:start="1071:28" pos:end="1071:49"><operator pos:start="1071:28" pos:end="1071:28">(</operator><name pos:start="1071:29" pos:end="1071:31">xop</name> <operator pos:start="1071:33" pos:end="1071:33">&amp;</operator> <literal type="number" pos:start="1071:35" pos:end="1071:39">0x11f</literal><operator pos:start="1071:40" pos:end="1071:40">)</operator> <operator pos:start="1071:42" pos:end="1071:43">==</operator> <literal type="number" pos:start="1071:45" pos:end="1071:49">0x007</literal></expr>)</condition> <block pos:start="1071:52" pos:end="1078:0">{<block_content pos:start="1073:21" pos:end="1073:35"> <comment type="line" pos:start="1071:54" pos:end="1071:65">// V9 fmovqr</comment>

		    <goto pos:start="1073:21" pos:end="1073:35">goto <name pos:start="1073:26" pos:end="1073:34">nfpu_insn</name>;</goto>

		</block_content>}</block></if></if_stmt>

<cpp:endif pos:start="1077:1" pos:end="1077:6">#<cpp:directive pos:start="1077:2" pos:end="1077:6">endif</cpp:directive></cpp:endif>

		<switch pos:start="1079:17" pos:end="1411:0">switch <condition pos:start="1079:24" pos:end="1079:28">(<expr pos:start="1079:25" pos:end="1079:27"><name pos:start="1079:25" pos:end="1079:27">xop</name></expr>)</condition> <block pos:start="1079:30" pos:end="1411:0">{<block_content pos:start="1083:21" pos:end="1405:28">

<cpp:ifdef pos:start="1081:1" pos:end="1081:21">#<cpp:directive pos:start="1081:2" pos:end="1081:6">ifdef</cpp:directive> <name pos:start="1081:8" pos:end="1081:21">TARGET_SPARC64</name></cpp:ifdef>

		    <case pos:start="1083:21" pos:end="1083:31">case <expr pos:start="1083:26" pos:end="1083:30"><literal type="number" pos:start="1083:26" pos:end="1083:30">0x001</literal></expr>:</case> <comment type="block" pos:start="1083:33" pos:end="1083:54">/* V9 fmovscc %fcc0 */</comment>

			<expr_stmt pos:start="1085:25" pos:end="1085:58"><expr pos:start="1085:25" pos:end="1085:57"><name pos:start="1085:25" pos:end="1085:28">cond</name> <operator pos:start="1085:30" pos:end="1085:30">=</operator> <call pos:start="1085:32" pos:end="1085:57"><name pos:start="1085:32" pos:end="1085:43">GET_FIELD_SP</name><argument_list pos:start="1085:44" pos:end="1085:57">(<argument pos:start="1085:45" pos:end="1085:48"><expr pos:start="1085:45" pos:end="1085:48"><name pos:start="1085:45" pos:end="1085:48">insn</name></expr></argument>, <argument pos:start="1085:51" pos:end="1085:52"><expr pos:start="1085:51" pos:end="1085:52"><literal type="number" pos:start="1085:51" pos:end="1085:52">14</literal></expr></argument>, <argument pos:start="1085:55" pos:end="1085:56"><expr pos:start="1085:55" pos:end="1085:56"><literal type="number" pos:start="1085:55" pos:end="1085:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1087:25" pos:end="1087:48"><expr pos:start="1087:25" pos:end="1087:47"><call pos:start="1087:25" pos:end="1087:47"><name pos:start="1087:25" pos:end="1087:43">gen_op_load_fpr_FT0</name><argument_list pos:start="1087:44" pos:end="1087:47">(<argument pos:start="1087:45" pos:end="1087:46"><expr pos:start="1087:45" pos:end="1087:46"><name pos:start="1087:45" pos:end="1087:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1089:25" pos:end="1089:49"><expr pos:start="1089:25" pos:end="1089:48"><call pos:start="1089:25" pos:end="1089:48"><name pos:start="1089:25" pos:end="1089:43">gen_op_load_fpr_FT1</name><argument_list pos:start="1089:44" pos:end="1089:48">(<argument pos:start="1089:45" pos:end="1089:47"><expr pos:start="1089:45" pos:end="1089:47"><name pos:start="1089:45" pos:end="1089:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1091:25" pos:end="1091:37"><expr pos:start="1091:25" pos:end="1091:36"><call pos:start="1091:25" pos:end="1091:36"><name pos:start="1091:25" pos:end="1091:32">flush_T2</name><argument_list pos:start="1091:33" pos:end="1091:36">(<argument pos:start="1091:34" pos:end="1091:35"><expr pos:start="1091:34" pos:end="1091:35"><name pos:start="1091:34" pos:end="1091:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1093:25" pos:end="1093:45"><expr pos:start="1093:25" pos:end="1093:44"><name pos:start="1093:25" pos:end="1093:42"><name pos:start="1093:25" pos:end="1093:33">gen_fcond</name><index pos:start="1093:34" pos:end="1093:36">[<expr pos:start="1093:35" pos:end="1093:35"><literal type="number" pos:start="1093:35" pos:end="1093:35">0</literal></expr>]</index><index pos:start="1093:37" pos:end="1093:42">[<expr pos:start="1093:38" pos:end="1093:41"><name pos:start="1093:38" pos:end="1093:41">cond</name></expr>]</index></name><operator pos:start="1093:43" pos:end="1093:43">(</operator><operator pos:start="1093:44" pos:end="1093:44">)</operator></expr>;</expr_stmt>

			<expr_stmt pos:start="1095:25" pos:end="1095:42"><expr pos:start="1095:25" pos:end="1095:41"><call pos:start="1095:25" pos:end="1095:41"><name pos:start="1095:25" pos:end="1095:39">gen_op_fmovs_cc</name><argument_list pos:start="1095:40" pos:end="1095:41">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1097:25" pos:end="1097:49"><expr pos:start="1097:25" pos:end="1097:48"><call pos:start="1097:25" pos:end="1097:48"><name pos:start="1097:25" pos:end="1097:44">gen_op_store_FT0_fpr</name><argument_list pos:start="1097:45" pos:end="1097:48">(<argument pos:start="1097:46" pos:end="1097:47"><expr pos:start="1097:46" pos:end="1097:47"><name pos:start="1097:46" pos:end="1097:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="1099:25" pos:end="1099:30">break;</break>

		    <case pos:start="1101:21" pos:end="1101:31">case <expr pos:start="1101:26" pos:end="1101:30"><literal type="number" pos:start="1101:26" pos:end="1101:30">0x002</literal></expr>:</case> <comment type="block" pos:start="1101:33" pos:end="1101:54">/* V9 fmovdcc %fcc0 */</comment>

			<expr_stmt pos:start="1103:25" pos:end="1103:58"><expr pos:start="1103:25" pos:end="1103:57"><name pos:start="1103:25" pos:end="1103:28">cond</name> <operator pos:start="1103:30" pos:end="1103:30">=</operator> <call pos:start="1103:32" pos:end="1103:57"><name pos:start="1103:32" pos:end="1103:43">GET_FIELD_SP</name><argument_list pos:start="1103:44" pos:end="1103:57">(<argument pos:start="1103:45" pos:end="1103:48"><expr pos:start="1103:45" pos:end="1103:48"><name pos:start="1103:45" pos:end="1103:48">insn</name></expr></argument>, <argument pos:start="1103:51" pos:end="1103:52"><expr pos:start="1103:51" pos:end="1103:52"><literal type="number" pos:start="1103:51" pos:end="1103:52">14</literal></expr></argument>, <argument pos:start="1103:55" pos:end="1103:56"><expr pos:start="1103:55" pos:end="1103:56"><literal type="number" pos:start="1103:55" pos:end="1103:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1105:25" pos:end="1105:48"><expr pos:start="1105:25" pos:end="1105:47"><call pos:start="1105:25" pos:end="1105:47"><name pos:start="1105:25" pos:end="1105:43">gen_op_load_fpr_DT0</name><argument_list pos:start="1105:44" pos:end="1105:47">(<argument pos:start="1105:45" pos:end="1105:46"><expr pos:start="1105:45" pos:end="1105:46"><name pos:start="1105:45" pos:end="1105:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1107:25" pos:end="1107:49"><expr pos:start="1107:25" pos:end="1107:48"><call pos:start="1107:25" pos:end="1107:48"><name pos:start="1107:25" pos:end="1107:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1107:44" pos:end="1107:48">(<argument pos:start="1107:45" pos:end="1107:47"><expr pos:start="1107:45" pos:end="1107:47"><name pos:start="1107:45" pos:end="1107:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1109:25" pos:end="1109:37"><expr pos:start="1109:25" pos:end="1109:36"><call pos:start="1109:25" pos:end="1109:36"><name pos:start="1109:25" pos:end="1109:32">flush_T2</name><argument_list pos:start="1109:33" pos:end="1109:36">(<argument pos:start="1109:34" pos:end="1109:35"><expr pos:start="1109:34" pos:end="1109:35"><name pos:start="1109:34" pos:end="1109:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1111:25" pos:end="1111:45"><expr pos:start="1111:25" pos:end="1111:44"><name pos:start="1111:25" pos:end="1111:42"><name pos:start="1111:25" pos:end="1111:33">gen_fcond</name><index pos:start="1111:34" pos:end="1111:36">[<expr pos:start="1111:35" pos:end="1111:35"><literal type="number" pos:start="1111:35" pos:end="1111:35">0</literal></expr>]</index><index pos:start="1111:37" pos:end="1111:42">[<expr pos:start="1111:38" pos:end="1111:41"><name pos:start="1111:38" pos:end="1111:41">cond</name></expr>]</index></name><operator pos:start="1111:43" pos:end="1111:43">(</operator><operator pos:start="1111:44" pos:end="1111:44">)</operator></expr>;</expr_stmt>

			<expr_stmt pos:start="1113:25" pos:end="1113:42"><expr pos:start="1113:25" pos:end="1113:41"><call pos:start="1113:25" pos:end="1113:41"><name pos:start="1113:25" pos:end="1113:39">gen_op_fmovd_cc</name><argument_list pos:start="1113:40" pos:end="1113:41">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1115:25" pos:end="1115:49"><expr pos:start="1115:25" pos:end="1115:48"><call pos:start="1115:25" pos:end="1115:48"><name pos:start="1115:25" pos:end="1115:44">gen_op_store_DT0_fpr</name><argument_list pos:start="1115:45" pos:end="1115:48">(<argument pos:start="1115:46" pos:end="1115:47"><expr pos:start="1115:46" pos:end="1115:47"><name pos:start="1115:46" pos:end="1115:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="1117:25" pos:end="1117:30">break;</break>

		    <case pos:start="1119:21" pos:end="1119:31">case <expr pos:start="1119:26" pos:end="1119:30"><literal type="number" pos:start="1119:26" pos:end="1119:30">0x003</literal></expr>:</case> <comment type="block" pos:start="1119:33" pos:end="1119:54">/* V9 fmovqcc %fcc0 */</comment>

		        <goto pos:start="1121:25" pos:end="1121:39">goto <name pos:start="1121:30" pos:end="1121:38">nfpu_insn</name>;</goto>

		    <case pos:start="1123:21" pos:end="1123:31">case <expr pos:start="1123:26" pos:end="1123:30"><literal type="number" pos:start="1123:26" pos:end="1123:30">0x041</literal></expr>:</case> <comment type="block" pos:start="1123:33" pos:end="1123:54">/* V9 fmovscc %fcc1 */</comment>

			<expr_stmt pos:start="1125:25" pos:end="1125:58"><expr pos:start="1125:25" pos:end="1125:57"><name pos:start="1125:25" pos:end="1125:28">cond</name> <operator pos:start="1125:30" pos:end="1125:30">=</operator> <call pos:start="1125:32" pos:end="1125:57"><name pos:start="1125:32" pos:end="1125:43">GET_FIELD_SP</name><argument_list pos:start="1125:44" pos:end="1125:57">(<argument pos:start="1125:45" pos:end="1125:48"><expr pos:start="1125:45" pos:end="1125:48"><name pos:start="1125:45" pos:end="1125:48">insn</name></expr></argument>, <argument pos:start="1125:51" pos:end="1125:52"><expr pos:start="1125:51" pos:end="1125:52"><literal type="number" pos:start="1125:51" pos:end="1125:52">14</literal></expr></argument>, <argument pos:start="1125:55" pos:end="1125:56"><expr pos:start="1125:55" pos:end="1125:56"><literal type="number" pos:start="1125:55" pos:end="1125:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1127:25" pos:end="1127:48"><expr pos:start="1127:25" pos:end="1127:47"><call pos:start="1127:25" pos:end="1127:47"><name pos:start="1127:25" pos:end="1127:43">gen_op_load_fpr_FT0</name><argument_list pos:start="1127:44" pos:end="1127:47">(<argument pos:start="1127:45" pos:end="1127:46"><expr pos:start="1127:45" pos:end="1127:46"><name pos:start="1127:45" pos:end="1127:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1129:25" pos:end="1129:49"><expr pos:start="1129:25" pos:end="1129:48"><call pos:start="1129:25" pos:end="1129:48"><name pos:start="1129:25" pos:end="1129:43">gen_op_load_fpr_FT1</name><argument_list pos:start="1129:44" pos:end="1129:48">(<argument pos:start="1129:45" pos:end="1129:47"><expr pos:start="1129:45" pos:end="1129:47"><name pos:start="1129:45" pos:end="1129:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1131:25" pos:end="1131:37"><expr pos:start="1131:25" pos:end="1131:36"><call pos:start="1131:25" pos:end="1131:36"><name pos:start="1131:25" pos:end="1131:32">flush_T2</name><argument_list pos:start="1131:33" pos:end="1131:36">(<argument pos:start="1131:34" pos:end="1131:35"><expr pos:start="1131:34" pos:end="1131:35"><name pos:start="1131:34" pos:end="1131:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1133:25" pos:end="1133:45"><expr pos:start="1133:25" pos:end="1133:44"><name pos:start="1133:25" pos:end="1133:42"><name pos:start="1133:25" pos:end="1133:33">gen_fcond</name><index pos:start="1133:34" pos:end="1133:36">[<expr pos:start="1133:35" pos:end="1133:35"><literal type="number" pos:start="1133:35" pos:end="1133:35">1</literal></expr>]</index><index pos:start="1133:37" pos:end="1133:42">[<expr pos:start="1133:38" pos:end="1133:41"><name pos:start="1133:38" pos:end="1133:41">cond</name></expr>]</index></name><operator pos:start="1133:43" pos:end="1133:43">(</operator><operator pos:start="1133:44" pos:end="1133:44">)</operator></expr>;</expr_stmt>

			<expr_stmt pos:start="1135:25" pos:end="1135:42"><expr pos:start="1135:25" pos:end="1135:41"><call pos:start="1135:25" pos:end="1135:41"><name pos:start="1135:25" pos:end="1135:39">gen_op_fmovs_cc</name><argument_list pos:start="1135:40" pos:end="1135:41">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1137:25" pos:end="1137:49"><expr pos:start="1137:25" pos:end="1137:48"><call pos:start="1137:25" pos:end="1137:48"><name pos:start="1137:25" pos:end="1137:44">gen_op_store_FT0_fpr</name><argument_list pos:start="1137:45" pos:end="1137:48">(<argument pos:start="1137:46" pos:end="1137:47"><expr pos:start="1137:46" pos:end="1137:47"><name pos:start="1137:46" pos:end="1137:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="1139:25" pos:end="1139:30">break;</break>

		    <case pos:start="1141:21" pos:end="1141:31">case <expr pos:start="1141:26" pos:end="1141:30"><literal type="number" pos:start="1141:26" pos:end="1141:30">0x042</literal></expr>:</case> <comment type="block" pos:start="1141:33" pos:end="1141:54">/* V9 fmovdcc %fcc1 */</comment>

			<expr_stmt pos:start="1143:25" pos:end="1143:58"><expr pos:start="1143:25" pos:end="1143:57"><name pos:start="1143:25" pos:end="1143:28">cond</name> <operator pos:start="1143:30" pos:end="1143:30">=</operator> <call pos:start="1143:32" pos:end="1143:57"><name pos:start="1143:32" pos:end="1143:43">GET_FIELD_SP</name><argument_list pos:start="1143:44" pos:end="1143:57">(<argument pos:start="1143:45" pos:end="1143:48"><expr pos:start="1143:45" pos:end="1143:48"><name pos:start="1143:45" pos:end="1143:48">insn</name></expr></argument>, <argument pos:start="1143:51" pos:end="1143:52"><expr pos:start="1143:51" pos:end="1143:52"><literal type="number" pos:start="1143:51" pos:end="1143:52">14</literal></expr></argument>, <argument pos:start="1143:55" pos:end="1143:56"><expr pos:start="1143:55" pos:end="1143:56"><literal type="number" pos:start="1143:55" pos:end="1143:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1145:25" pos:end="1145:48"><expr pos:start="1145:25" pos:end="1145:47"><call pos:start="1145:25" pos:end="1145:47"><name pos:start="1145:25" pos:end="1145:43">gen_op_load_fpr_DT0</name><argument_list pos:start="1145:44" pos:end="1145:47">(<argument pos:start="1145:45" pos:end="1145:46"><expr pos:start="1145:45" pos:end="1145:46"><name pos:start="1145:45" pos:end="1145:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1147:25" pos:end="1147:49"><expr pos:start="1147:25" pos:end="1147:48"><call pos:start="1147:25" pos:end="1147:48"><name pos:start="1147:25" pos:end="1147:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1147:44" pos:end="1147:48">(<argument pos:start="1147:45" pos:end="1147:47"><expr pos:start="1147:45" pos:end="1147:47"><name pos:start="1147:45" pos:end="1147:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1149:25" pos:end="1149:37"><expr pos:start="1149:25" pos:end="1149:36"><call pos:start="1149:25" pos:end="1149:36"><name pos:start="1149:25" pos:end="1149:32">flush_T2</name><argument_list pos:start="1149:33" pos:end="1149:36">(<argument pos:start="1149:34" pos:end="1149:35"><expr pos:start="1149:34" pos:end="1149:35"><name pos:start="1149:34" pos:end="1149:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1151:25" pos:end="1151:45"><expr pos:start="1151:25" pos:end="1151:44"><name pos:start="1151:25" pos:end="1151:42"><name pos:start="1151:25" pos:end="1151:33">gen_fcond</name><index pos:start="1151:34" pos:end="1151:36">[<expr pos:start="1151:35" pos:end="1151:35"><literal type="number" pos:start="1151:35" pos:end="1151:35">1</literal></expr>]</index><index pos:start="1151:37" pos:end="1151:42">[<expr pos:start="1151:38" pos:end="1151:41"><name pos:start="1151:38" pos:end="1151:41">cond</name></expr>]</index></name><operator pos:start="1151:43" pos:end="1151:43">(</operator><operator pos:start="1151:44" pos:end="1151:44">)</operator></expr>;</expr_stmt>

			<expr_stmt pos:start="1153:25" pos:end="1153:42"><expr pos:start="1153:25" pos:end="1153:41"><call pos:start="1153:25" pos:end="1153:41"><name pos:start="1153:25" pos:end="1153:39">gen_op_fmovd_cc</name><argument_list pos:start="1153:40" pos:end="1153:41">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1155:25" pos:end="1155:49"><expr pos:start="1155:25" pos:end="1155:48"><call pos:start="1155:25" pos:end="1155:48"><name pos:start="1155:25" pos:end="1155:44">gen_op_store_DT0_fpr</name><argument_list pos:start="1155:45" pos:end="1155:48">(<argument pos:start="1155:46" pos:end="1155:47"><expr pos:start="1155:46" pos:end="1155:47"><name pos:start="1155:46" pos:end="1155:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="1157:25" pos:end="1157:30">break;</break>

		    <case pos:start="1159:21" pos:end="1159:31">case <expr pos:start="1159:26" pos:end="1159:30"><literal type="number" pos:start="1159:26" pos:end="1159:30">0x043</literal></expr>:</case> <comment type="block" pos:start="1159:33" pos:end="1159:54">/* V9 fmovqcc %fcc1 */</comment>

		        <goto pos:start="1161:25" pos:end="1161:39">goto <name pos:start="1161:30" pos:end="1161:38">nfpu_insn</name>;</goto>

		    <case pos:start="1163:21" pos:end="1163:31">case <expr pos:start="1163:26" pos:end="1163:30"><literal type="number" pos:start="1163:26" pos:end="1163:30">0x081</literal></expr>:</case> <comment type="block" pos:start="1163:33" pos:end="1163:54">/* V9 fmovscc %fcc2 */</comment>

			<expr_stmt pos:start="1165:25" pos:end="1165:58"><expr pos:start="1165:25" pos:end="1165:57"><name pos:start="1165:25" pos:end="1165:28">cond</name> <operator pos:start="1165:30" pos:end="1165:30">=</operator> <call pos:start="1165:32" pos:end="1165:57"><name pos:start="1165:32" pos:end="1165:43">GET_FIELD_SP</name><argument_list pos:start="1165:44" pos:end="1165:57">(<argument pos:start="1165:45" pos:end="1165:48"><expr pos:start="1165:45" pos:end="1165:48"><name pos:start="1165:45" pos:end="1165:48">insn</name></expr></argument>, <argument pos:start="1165:51" pos:end="1165:52"><expr pos:start="1165:51" pos:end="1165:52"><literal type="number" pos:start="1165:51" pos:end="1165:52">14</literal></expr></argument>, <argument pos:start="1165:55" pos:end="1165:56"><expr pos:start="1165:55" pos:end="1165:56"><literal type="number" pos:start="1165:55" pos:end="1165:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1167:25" pos:end="1167:48"><expr pos:start="1167:25" pos:end="1167:47"><call pos:start="1167:25" pos:end="1167:47"><name pos:start="1167:25" pos:end="1167:43">gen_op_load_fpr_FT0</name><argument_list pos:start="1167:44" pos:end="1167:47">(<argument pos:start="1167:45" pos:end="1167:46"><expr pos:start="1167:45" pos:end="1167:46"><name pos:start="1167:45" pos:end="1167:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1169:25" pos:end="1169:49"><expr pos:start="1169:25" pos:end="1169:48"><call pos:start="1169:25" pos:end="1169:48"><name pos:start="1169:25" pos:end="1169:43">gen_op_load_fpr_FT1</name><argument_list pos:start="1169:44" pos:end="1169:48">(<argument pos:start="1169:45" pos:end="1169:47"><expr pos:start="1169:45" pos:end="1169:47"><name pos:start="1169:45" pos:end="1169:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1171:25" pos:end="1171:37"><expr pos:start="1171:25" pos:end="1171:36"><call pos:start="1171:25" pos:end="1171:36"><name pos:start="1171:25" pos:end="1171:32">flush_T2</name><argument_list pos:start="1171:33" pos:end="1171:36">(<argument pos:start="1171:34" pos:end="1171:35"><expr pos:start="1171:34" pos:end="1171:35"><name pos:start="1171:34" pos:end="1171:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1173:25" pos:end="1173:45"><expr pos:start="1173:25" pos:end="1173:44"><name pos:start="1173:25" pos:end="1173:42"><name pos:start="1173:25" pos:end="1173:33">gen_fcond</name><index pos:start="1173:34" pos:end="1173:36">[<expr pos:start="1173:35" pos:end="1173:35"><literal type="number" pos:start="1173:35" pos:end="1173:35">2</literal></expr>]</index><index pos:start="1173:37" pos:end="1173:42">[<expr pos:start="1173:38" pos:end="1173:41"><name pos:start="1173:38" pos:end="1173:41">cond</name></expr>]</index></name><operator pos:start="1173:43" pos:end="1173:43">(</operator><operator pos:start="1173:44" pos:end="1173:44">)</operator></expr>;</expr_stmt>

			<expr_stmt pos:start="1175:25" pos:end="1175:42"><expr pos:start="1175:25" pos:end="1175:41"><call pos:start="1175:25" pos:end="1175:41"><name pos:start="1175:25" pos:end="1175:39">gen_op_fmovs_cc</name><argument_list pos:start="1175:40" pos:end="1175:41">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1177:25" pos:end="1177:49"><expr pos:start="1177:25" pos:end="1177:48"><call pos:start="1177:25" pos:end="1177:48"><name pos:start="1177:25" pos:end="1177:44">gen_op_store_FT0_fpr</name><argument_list pos:start="1177:45" pos:end="1177:48">(<argument pos:start="1177:46" pos:end="1177:47"><expr pos:start="1177:46" pos:end="1177:47"><name pos:start="1177:46" pos:end="1177:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="1179:25" pos:end="1179:30">break;</break>

		    <case pos:start="1181:21" pos:end="1181:31">case <expr pos:start="1181:26" pos:end="1181:30"><literal type="number" pos:start="1181:26" pos:end="1181:30">0x082</literal></expr>:</case> <comment type="block" pos:start="1181:33" pos:end="1181:54">/* V9 fmovdcc %fcc2 */</comment>

			<expr_stmt pos:start="1183:25" pos:end="1183:58"><expr pos:start="1183:25" pos:end="1183:57"><name pos:start="1183:25" pos:end="1183:28">cond</name> <operator pos:start="1183:30" pos:end="1183:30">=</operator> <call pos:start="1183:32" pos:end="1183:57"><name pos:start="1183:32" pos:end="1183:43">GET_FIELD_SP</name><argument_list pos:start="1183:44" pos:end="1183:57">(<argument pos:start="1183:45" pos:end="1183:48"><expr pos:start="1183:45" pos:end="1183:48"><name pos:start="1183:45" pos:end="1183:48">insn</name></expr></argument>, <argument pos:start="1183:51" pos:end="1183:52"><expr pos:start="1183:51" pos:end="1183:52"><literal type="number" pos:start="1183:51" pos:end="1183:52">14</literal></expr></argument>, <argument pos:start="1183:55" pos:end="1183:56"><expr pos:start="1183:55" pos:end="1183:56"><literal type="number" pos:start="1183:55" pos:end="1183:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1185:25" pos:end="1185:48"><expr pos:start="1185:25" pos:end="1185:47"><call pos:start="1185:25" pos:end="1185:47"><name pos:start="1185:25" pos:end="1185:43">gen_op_load_fpr_DT0</name><argument_list pos:start="1185:44" pos:end="1185:47">(<argument pos:start="1185:45" pos:end="1185:46"><expr pos:start="1185:45" pos:end="1185:46"><name pos:start="1185:45" pos:end="1185:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1187:25" pos:end="1187:49"><expr pos:start="1187:25" pos:end="1187:48"><call pos:start="1187:25" pos:end="1187:48"><name pos:start="1187:25" pos:end="1187:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1187:44" pos:end="1187:48">(<argument pos:start="1187:45" pos:end="1187:47"><expr pos:start="1187:45" pos:end="1187:47"><name pos:start="1187:45" pos:end="1187:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1189:25" pos:end="1189:37"><expr pos:start="1189:25" pos:end="1189:36"><call pos:start="1189:25" pos:end="1189:36"><name pos:start="1189:25" pos:end="1189:32">flush_T2</name><argument_list pos:start="1189:33" pos:end="1189:36">(<argument pos:start="1189:34" pos:end="1189:35"><expr pos:start="1189:34" pos:end="1189:35"><name pos:start="1189:34" pos:end="1189:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1191:25" pos:end="1191:45"><expr pos:start="1191:25" pos:end="1191:44"><name pos:start="1191:25" pos:end="1191:42"><name pos:start="1191:25" pos:end="1191:33">gen_fcond</name><index pos:start="1191:34" pos:end="1191:36">[<expr pos:start="1191:35" pos:end="1191:35"><literal type="number" pos:start="1191:35" pos:end="1191:35">2</literal></expr>]</index><index pos:start="1191:37" pos:end="1191:42">[<expr pos:start="1191:38" pos:end="1191:41"><name pos:start="1191:38" pos:end="1191:41">cond</name></expr>]</index></name><operator pos:start="1191:43" pos:end="1191:43">(</operator><operator pos:start="1191:44" pos:end="1191:44">)</operator></expr>;</expr_stmt>

			<expr_stmt pos:start="1193:25" pos:end="1193:42"><expr pos:start="1193:25" pos:end="1193:41"><call pos:start="1193:25" pos:end="1193:41"><name pos:start="1193:25" pos:end="1193:39">gen_op_fmovd_cc</name><argument_list pos:start="1193:40" pos:end="1193:41">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1195:25" pos:end="1195:49"><expr pos:start="1195:25" pos:end="1195:48"><call pos:start="1195:25" pos:end="1195:48"><name pos:start="1195:25" pos:end="1195:44">gen_op_store_DT0_fpr</name><argument_list pos:start="1195:45" pos:end="1195:48">(<argument pos:start="1195:46" pos:end="1195:47"><expr pos:start="1195:46" pos:end="1195:47"><name pos:start="1195:46" pos:end="1195:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="1197:25" pos:end="1197:30">break;</break>

		    <case pos:start="1199:21" pos:end="1199:31">case <expr pos:start="1199:26" pos:end="1199:30"><literal type="number" pos:start="1199:26" pos:end="1199:30">0x083</literal></expr>:</case> <comment type="block" pos:start="1199:33" pos:end="1199:54">/* V9 fmovqcc %fcc2 */</comment>

		        <goto pos:start="1201:25" pos:end="1201:39">goto <name pos:start="1201:30" pos:end="1201:38">nfpu_insn</name>;</goto>

		    <case pos:start="1203:21" pos:end="1203:31">case <expr pos:start="1203:26" pos:end="1203:30"><literal type="number" pos:start="1203:26" pos:end="1203:30">0x0c1</literal></expr>:</case> <comment type="block" pos:start="1203:33" pos:end="1203:54">/* V9 fmovscc %fcc3 */</comment>

			<expr_stmt pos:start="1205:25" pos:end="1205:58"><expr pos:start="1205:25" pos:end="1205:57"><name pos:start="1205:25" pos:end="1205:28">cond</name> <operator pos:start="1205:30" pos:end="1205:30">=</operator> <call pos:start="1205:32" pos:end="1205:57"><name pos:start="1205:32" pos:end="1205:43">GET_FIELD_SP</name><argument_list pos:start="1205:44" pos:end="1205:57">(<argument pos:start="1205:45" pos:end="1205:48"><expr pos:start="1205:45" pos:end="1205:48"><name pos:start="1205:45" pos:end="1205:48">insn</name></expr></argument>, <argument pos:start="1205:51" pos:end="1205:52"><expr pos:start="1205:51" pos:end="1205:52"><literal type="number" pos:start="1205:51" pos:end="1205:52">14</literal></expr></argument>, <argument pos:start="1205:55" pos:end="1205:56"><expr pos:start="1205:55" pos:end="1205:56"><literal type="number" pos:start="1205:55" pos:end="1205:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1207:25" pos:end="1207:48"><expr pos:start="1207:25" pos:end="1207:47"><call pos:start="1207:25" pos:end="1207:47"><name pos:start="1207:25" pos:end="1207:43">gen_op_load_fpr_FT0</name><argument_list pos:start="1207:44" pos:end="1207:47">(<argument pos:start="1207:45" pos:end="1207:46"><expr pos:start="1207:45" pos:end="1207:46"><name pos:start="1207:45" pos:end="1207:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1209:25" pos:end="1209:49"><expr pos:start="1209:25" pos:end="1209:48"><call pos:start="1209:25" pos:end="1209:48"><name pos:start="1209:25" pos:end="1209:43">gen_op_load_fpr_FT1</name><argument_list pos:start="1209:44" pos:end="1209:48">(<argument pos:start="1209:45" pos:end="1209:47"><expr pos:start="1209:45" pos:end="1209:47"><name pos:start="1209:45" pos:end="1209:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1211:25" pos:end="1211:37"><expr pos:start="1211:25" pos:end="1211:36"><call pos:start="1211:25" pos:end="1211:36"><name pos:start="1211:25" pos:end="1211:32">flush_T2</name><argument_list pos:start="1211:33" pos:end="1211:36">(<argument pos:start="1211:34" pos:end="1211:35"><expr pos:start="1211:34" pos:end="1211:35"><name pos:start="1211:34" pos:end="1211:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1213:25" pos:end="1213:45"><expr pos:start="1213:25" pos:end="1213:44"><name pos:start="1213:25" pos:end="1213:42"><name pos:start="1213:25" pos:end="1213:33">gen_fcond</name><index pos:start="1213:34" pos:end="1213:36">[<expr pos:start="1213:35" pos:end="1213:35"><literal type="number" pos:start="1213:35" pos:end="1213:35">3</literal></expr>]</index><index pos:start="1213:37" pos:end="1213:42">[<expr pos:start="1213:38" pos:end="1213:41"><name pos:start="1213:38" pos:end="1213:41">cond</name></expr>]</index></name><operator pos:start="1213:43" pos:end="1213:43">(</operator><operator pos:start="1213:44" pos:end="1213:44">)</operator></expr>;</expr_stmt>

			<expr_stmt pos:start="1215:25" pos:end="1215:42"><expr pos:start="1215:25" pos:end="1215:41"><call pos:start="1215:25" pos:end="1215:41"><name pos:start="1215:25" pos:end="1215:39">gen_op_fmovs_cc</name><argument_list pos:start="1215:40" pos:end="1215:41">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1217:25" pos:end="1217:49"><expr pos:start="1217:25" pos:end="1217:48"><call pos:start="1217:25" pos:end="1217:48"><name pos:start="1217:25" pos:end="1217:44">gen_op_store_FT0_fpr</name><argument_list pos:start="1217:45" pos:end="1217:48">(<argument pos:start="1217:46" pos:end="1217:47"><expr pos:start="1217:46" pos:end="1217:47"><name pos:start="1217:46" pos:end="1217:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="1219:25" pos:end="1219:30">break;</break>

		    <case pos:start="1221:21" pos:end="1221:31">case <expr pos:start="1221:26" pos:end="1221:30"><literal type="number" pos:start="1221:26" pos:end="1221:30">0x0c2</literal></expr>:</case> <comment type="block" pos:start="1221:33" pos:end="1221:54">/* V9 fmovdcc %fcc3 */</comment>

			<expr_stmt pos:start="1223:25" pos:end="1223:58"><expr pos:start="1223:25" pos:end="1223:57"><name pos:start="1223:25" pos:end="1223:28">cond</name> <operator pos:start="1223:30" pos:end="1223:30">=</operator> <call pos:start="1223:32" pos:end="1223:57"><name pos:start="1223:32" pos:end="1223:43">GET_FIELD_SP</name><argument_list pos:start="1223:44" pos:end="1223:57">(<argument pos:start="1223:45" pos:end="1223:48"><expr pos:start="1223:45" pos:end="1223:48"><name pos:start="1223:45" pos:end="1223:48">insn</name></expr></argument>, <argument pos:start="1223:51" pos:end="1223:52"><expr pos:start="1223:51" pos:end="1223:52"><literal type="number" pos:start="1223:51" pos:end="1223:52">14</literal></expr></argument>, <argument pos:start="1223:55" pos:end="1223:56"><expr pos:start="1223:55" pos:end="1223:56"><literal type="number" pos:start="1223:55" pos:end="1223:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1225:25" pos:end="1225:48"><expr pos:start="1225:25" pos:end="1225:47"><call pos:start="1225:25" pos:end="1225:47"><name pos:start="1225:25" pos:end="1225:43">gen_op_load_fpr_DT0</name><argument_list pos:start="1225:44" pos:end="1225:47">(<argument pos:start="1225:45" pos:end="1225:46"><expr pos:start="1225:45" pos:end="1225:46"><name pos:start="1225:45" pos:end="1225:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1227:25" pos:end="1227:49"><expr pos:start="1227:25" pos:end="1227:48"><call pos:start="1227:25" pos:end="1227:48"><name pos:start="1227:25" pos:end="1227:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1227:44" pos:end="1227:48">(<argument pos:start="1227:45" pos:end="1227:47"><expr pos:start="1227:45" pos:end="1227:47"><name pos:start="1227:45" pos:end="1227:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1229:25" pos:end="1229:37"><expr pos:start="1229:25" pos:end="1229:36"><call pos:start="1229:25" pos:end="1229:36"><name pos:start="1229:25" pos:end="1229:32">flush_T2</name><argument_list pos:start="1229:33" pos:end="1229:36">(<argument pos:start="1229:34" pos:end="1229:35"><expr pos:start="1229:34" pos:end="1229:35"><name pos:start="1229:34" pos:end="1229:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1231:25" pos:end="1231:45"><expr pos:start="1231:25" pos:end="1231:44"><name pos:start="1231:25" pos:end="1231:42"><name pos:start="1231:25" pos:end="1231:33">gen_fcond</name><index pos:start="1231:34" pos:end="1231:36">[<expr pos:start="1231:35" pos:end="1231:35"><literal type="number" pos:start="1231:35" pos:end="1231:35">3</literal></expr>]</index><index pos:start="1231:37" pos:end="1231:42">[<expr pos:start="1231:38" pos:end="1231:41"><name pos:start="1231:38" pos:end="1231:41">cond</name></expr>]</index></name><operator pos:start="1231:43" pos:end="1231:43">(</operator><operator pos:start="1231:44" pos:end="1231:44">)</operator></expr>;</expr_stmt>

			<expr_stmt pos:start="1233:25" pos:end="1233:42"><expr pos:start="1233:25" pos:end="1233:41"><call pos:start="1233:25" pos:end="1233:41"><name pos:start="1233:25" pos:end="1233:39">gen_op_fmovd_cc</name><argument_list pos:start="1233:40" pos:end="1233:41">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1235:25" pos:end="1235:49"><expr pos:start="1235:25" pos:end="1235:48"><call pos:start="1235:25" pos:end="1235:48"><name pos:start="1235:25" pos:end="1235:44">gen_op_store_DT0_fpr</name><argument_list pos:start="1235:45" pos:end="1235:48">(<argument pos:start="1235:46" pos:end="1235:47"><expr pos:start="1235:46" pos:end="1235:47"><name pos:start="1235:46" pos:end="1235:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="1237:25" pos:end="1237:30">break;</break>

		    <case pos:start="1239:21" pos:end="1239:31">case <expr pos:start="1239:26" pos:end="1239:30"><literal type="number" pos:start="1239:26" pos:end="1239:30">0x0c3</literal></expr>:</case> <comment type="block" pos:start="1239:33" pos:end="1239:54">/* V9 fmovqcc %fcc3 */</comment>

		        <goto pos:start="1241:25" pos:end="1241:39">goto <name pos:start="1241:30" pos:end="1241:38">nfpu_insn</name>;</goto>

		    <case pos:start="1243:21" pos:end="1243:31">case <expr pos:start="1243:26" pos:end="1243:30"><literal type="number" pos:start="1243:26" pos:end="1243:30">0x101</literal></expr>:</case> <comment type="block" pos:start="1243:33" pos:end="1243:53">/* V9 fmovscc %icc */</comment>

			<expr_stmt pos:start="1245:25" pos:end="1245:58"><expr pos:start="1245:25" pos:end="1245:57"><name pos:start="1245:25" pos:end="1245:28">cond</name> <operator pos:start="1245:30" pos:end="1245:30">=</operator> <call pos:start="1245:32" pos:end="1245:57"><name pos:start="1245:32" pos:end="1245:43">GET_FIELD_SP</name><argument_list pos:start="1245:44" pos:end="1245:57">(<argument pos:start="1245:45" pos:end="1245:48"><expr pos:start="1245:45" pos:end="1245:48"><name pos:start="1245:45" pos:end="1245:48">insn</name></expr></argument>, <argument pos:start="1245:51" pos:end="1245:52"><expr pos:start="1245:51" pos:end="1245:52"><literal type="number" pos:start="1245:51" pos:end="1245:52">14</literal></expr></argument>, <argument pos:start="1245:55" pos:end="1245:56"><expr pos:start="1245:55" pos:end="1245:56"><literal type="number" pos:start="1245:55" pos:end="1245:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1247:25" pos:end="1247:48"><expr pos:start="1247:25" pos:end="1247:47"><call pos:start="1247:25" pos:end="1247:47"><name pos:start="1247:25" pos:end="1247:43">gen_op_load_fpr_FT0</name><argument_list pos:start="1247:44" pos:end="1247:47">(<argument pos:start="1247:45" pos:end="1247:46"><expr pos:start="1247:45" pos:end="1247:46"><name pos:start="1247:45" pos:end="1247:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1249:25" pos:end="1249:49"><expr pos:start="1249:25" pos:end="1249:48"><call pos:start="1249:25" pos:end="1249:48"><name pos:start="1249:25" pos:end="1249:43">gen_op_load_fpr_FT1</name><argument_list pos:start="1249:44" pos:end="1249:48">(<argument pos:start="1249:45" pos:end="1249:47"><expr pos:start="1249:45" pos:end="1249:47"><name pos:start="1249:45" pos:end="1249:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1251:25" pos:end="1251:37"><expr pos:start="1251:25" pos:end="1251:36"><call pos:start="1251:25" pos:end="1251:36"><name pos:start="1251:25" pos:end="1251:32">flush_T2</name><argument_list pos:start="1251:33" pos:end="1251:36">(<argument pos:start="1251:34" pos:end="1251:35"><expr pos:start="1251:34" pos:end="1251:35"><name pos:start="1251:34" pos:end="1251:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1253:25" pos:end="1253:44"><expr pos:start="1253:25" pos:end="1253:43"><name pos:start="1253:25" pos:end="1253:41"><name pos:start="1253:25" pos:end="1253:32">gen_cond</name><index pos:start="1253:33" pos:end="1253:35">[<expr pos:start="1253:34" pos:end="1253:34"><literal type="number" pos:start="1253:34" pos:end="1253:34">0</literal></expr>]</index><index pos:start="1253:36" pos:end="1253:41">[<expr pos:start="1253:37" pos:end="1253:40"><name pos:start="1253:37" pos:end="1253:40">cond</name></expr>]</index></name><operator pos:start="1253:42" pos:end="1253:42">(</operator><operator pos:start="1253:43" pos:end="1253:43">)</operator></expr>;</expr_stmt>

			<expr_stmt pos:start="1255:25" pos:end="1255:42"><expr pos:start="1255:25" pos:end="1255:41"><call pos:start="1255:25" pos:end="1255:41"><name pos:start="1255:25" pos:end="1255:39">gen_op_fmovs_cc</name><argument_list pos:start="1255:40" pos:end="1255:41">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1257:25" pos:end="1257:49"><expr pos:start="1257:25" pos:end="1257:48"><call pos:start="1257:25" pos:end="1257:48"><name pos:start="1257:25" pos:end="1257:44">gen_op_store_FT0_fpr</name><argument_list pos:start="1257:45" pos:end="1257:48">(<argument pos:start="1257:46" pos:end="1257:47"><expr pos:start="1257:46" pos:end="1257:47"><name pos:start="1257:46" pos:end="1257:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="1259:25" pos:end="1259:30">break;</break>

		    <case pos:start="1261:21" pos:end="1261:31">case <expr pos:start="1261:26" pos:end="1261:30"><literal type="number" pos:start="1261:26" pos:end="1261:30">0x102</literal></expr>:</case> <comment type="block" pos:start="1261:33" pos:end="1261:53">/* V9 fmovdcc %icc */</comment>

			<expr_stmt pos:start="1263:25" pos:end="1263:58"><expr pos:start="1263:25" pos:end="1263:57"><name pos:start="1263:25" pos:end="1263:28">cond</name> <operator pos:start="1263:30" pos:end="1263:30">=</operator> <call pos:start="1263:32" pos:end="1263:57"><name pos:start="1263:32" pos:end="1263:43">GET_FIELD_SP</name><argument_list pos:start="1263:44" pos:end="1263:57">(<argument pos:start="1263:45" pos:end="1263:48"><expr pos:start="1263:45" pos:end="1263:48"><name pos:start="1263:45" pos:end="1263:48">insn</name></expr></argument>, <argument pos:start="1263:51" pos:end="1263:52"><expr pos:start="1263:51" pos:end="1263:52"><literal type="number" pos:start="1263:51" pos:end="1263:52">14</literal></expr></argument>, <argument pos:start="1263:55" pos:end="1263:56"><expr pos:start="1263:55" pos:end="1263:56"><literal type="number" pos:start="1263:55" pos:end="1263:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1265:25" pos:end="1265:48"><expr pos:start="1265:25" pos:end="1265:47"><call pos:start="1265:25" pos:end="1265:47"><name pos:start="1265:25" pos:end="1265:43">gen_op_load_fpr_DT0</name><argument_list pos:start="1265:44" pos:end="1265:47">(<argument pos:start="1265:45" pos:end="1265:46"><expr pos:start="1265:45" pos:end="1265:46"><name pos:start="1265:45" pos:end="1265:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1267:25" pos:end="1267:49"><expr pos:start="1267:25" pos:end="1267:48"><call pos:start="1267:25" pos:end="1267:48"><name pos:start="1267:25" pos:end="1267:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1267:44" pos:end="1267:48">(<argument pos:start="1267:45" pos:end="1267:47"><expr pos:start="1267:45" pos:end="1267:47"><name pos:start="1267:45" pos:end="1267:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1269:25" pos:end="1269:37"><expr pos:start="1269:25" pos:end="1269:36"><call pos:start="1269:25" pos:end="1269:36"><name pos:start="1269:25" pos:end="1269:32">flush_T2</name><argument_list pos:start="1269:33" pos:end="1269:36">(<argument pos:start="1269:34" pos:end="1269:35"><expr pos:start="1269:34" pos:end="1269:35"><name pos:start="1269:34" pos:end="1269:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1271:25" pos:end="1271:44"><expr pos:start="1271:25" pos:end="1271:43"><name pos:start="1271:25" pos:end="1271:41"><name pos:start="1271:25" pos:end="1271:32">gen_cond</name><index pos:start="1271:33" pos:end="1271:35">[<expr pos:start="1271:34" pos:end="1271:34"><literal type="number" pos:start="1271:34" pos:end="1271:34">0</literal></expr>]</index><index pos:start="1271:36" pos:end="1271:41">[<expr pos:start="1271:37" pos:end="1271:40"><name pos:start="1271:37" pos:end="1271:40">cond</name></expr>]</index></name><operator pos:start="1271:42" pos:end="1271:42">(</operator><operator pos:start="1271:43" pos:end="1271:43">)</operator></expr>;</expr_stmt>

			<expr_stmt pos:start="1273:25" pos:end="1273:42"><expr pos:start="1273:25" pos:end="1273:41"><call pos:start="1273:25" pos:end="1273:41"><name pos:start="1273:25" pos:end="1273:39">gen_op_fmovd_cc</name><argument_list pos:start="1273:40" pos:end="1273:41">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1275:25" pos:end="1275:49"><expr pos:start="1275:25" pos:end="1275:48"><call pos:start="1275:25" pos:end="1275:48"><name pos:start="1275:25" pos:end="1275:44">gen_op_store_DT0_fpr</name><argument_list pos:start="1275:45" pos:end="1275:48">(<argument pos:start="1275:46" pos:end="1275:47"><expr pos:start="1275:46" pos:end="1275:47"><name pos:start="1275:46" pos:end="1275:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="1277:25" pos:end="1277:30">break;</break>

		    <case pos:start="1279:21" pos:end="1279:31">case <expr pos:start="1279:26" pos:end="1279:30"><literal type="number" pos:start="1279:26" pos:end="1279:30">0x103</literal></expr>:</case> <comment type="block" pos:start="1279:33" pos:end="1279:53">/* V9 fmovqcc %icc */</comment>

		        <goto pos:start="1281:25" pos:end="1281:39">goto <name pos:start="1281:30" pos:end="1281:38">nfpu_insn</name>;</goto>

		    <case pos:start="1283:21" pos:end="1283:31">case <expr pos:start="1283:26" pos:end="1283:30"><literal type="number" pos:start="1283:26" pos:end="1283:30">0x181</literal></expr>:</case> <comment type="block" pos:start="1283:33" pos:end="1283:53">/* V9 fmovscc %xcc */</comment>

			<expr_stmt pos:start="1285:25" pos:end="1285:58"><expr pos:start="1285:25" pos:end="1285:57"><name pos:start="1285:25" pos:end="1285:28">cond</name> <operator pos:start="1285:30" pos:end="1285:30">=</operator> <call pos:start="1285:32" pos:end="1285:57"><name pos:start="1285:32" pos:end="1285:43">GET_FIELD_SP</name><argument_list pos:start="1285:44" pos:end="1285:57">(<argument pos:start="1285:45" pos:end="1285:48"><expr pos:start="1285:45" pos:end="1285:48"><name pos:start="1285:45" pos:end="1285:48">insn</name></expr></argument>, <argument pos:start="1285:51" pos:end="1285:52"><expr pos:start="1285:51" pos:end="1285:52"><literal type="number" pos:start="1285:51" pos:end="1285:52">14</literal></expr></argument>, <argument pos:start="1285:55" pos:end="1285:56"><expr pos:start="1285:55" pos:end="1285:56"><literal type="number" pos:start="1285:55" pos:end="1285:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1287:25" pos:end="1287:48"><expr pos:start="1287:25" pos:end="1287:47"><call pos:start="1287:25" pos:end="1287:47"><name pos:start="1287:25" pos:end="1287:43">gen_op_load_fpr_FT0</name><argument_list pos:start="1287:44" pos:end="1287:47">(<argument pos:start="1287:45" pos:end="1287:46"><expr pos:start="1287:45" pos:end="1287:46"><name pos:start="1287:45" pos:end="1287:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1289:25" pos:end="1289:49"><expr pos:start="1289:25" pos:end="1289:48"><call pos:start="1289:25" pos:end="1289:48"><name pos:start="1289:25" pos:end="1289:43">gen_op_load_fpr_FT1</name><argument_list pos:start="1289:44" pos:end="1289:48">(<argument pos:start="1289:45" pos:end="1289:47"><expr pos:start="1289:45" pos:end="1289:47"><name pos:start="1289:45" pos:end="1289:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1291:25" pos:end="1291:37"><expr pos:start="1291:25" pos:end="1291:36"><call pos:start="1291:25" pos:end="1291:36"><name pos:start="1291:25" pos:end="1291:32">flush_T2</name><argument_list pos:start="1291:33" pos:end="1291:36">(<argument pos:start="1291:34" pos:end="1291:35"><expr pos:start="1291:34" pos:end="1291:35"><name pos:start="1291:34" pos:end="1291:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1293:25" pos:end="1293:44"><expr pos:start="1293:25" pos:end="1293:43"><name pos:start="1293:25" pos:end="1293:41"><name pos:start="1293:25" pos:end="1293:32">gen_cond</name><index pos:start="1293:33" pos:end="1293:35">[<expr pos:start="1293:34" pos:end="1293:34"><literal type="number" pos:start="1293:34" pos:end="1293:34">1</literal></expr>]</index><index pos:start="1293:36" pos:end="1293:41">[<expr pos:start="1293:37" pos:end="1293:40"><name pos:start="1293:37" pos:end="1293:40">cond</name></expr>]</index></name><operator pos:start="1293:42" pos:end="1293:42">(</operator><operator pos:start="1293:43" pos:end="1293:43">)</operator></expr>;</expr_stmt>

			<expr_stmt pos:start="1295:25" pos:end="1295:42"><expr pos:start="1295:25" pos:end="1295:41"><call pos:start="1295:25" pos:end="1295:41"><name pos:start="1295:25" pos:end="1295:39">gen_op_fmovs_cc</name><argument_list pos:start="1295:40" pos:end="1295:41">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1297:25" pos:end="1297:49"><expr pos:start="1297:25" pos:end="1297:48"><call pos:start="1297:25" pos:end="1297:48"><name pos:start="1297:25" pos:end="1297:44">gen_op_store_FT0_fpr</name><argument_list pos:start="1297:45" pos:end="1297:48">(<argument pos:start="1297:46" pos:end="1297:47"><expr pos:start="1297:46" pos:end="1297:47"><name pos:start="1297:46" pos:end="1297:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="1299:25" pos:end="1299:30">break;</break>

		    <case pos:start="1301:21" pos:end="1301:31">case <expr pos:start="1301:26" pos:end="1301:30"><literal type="number" pos:start="1301:26" pos:end="1301:30">0x182</literal></expr>:</case> <comment type="block" pos:start="1301:33" pos:end="1301:53">/* V9 fmovdcc %xcc */</comment>

			<expr_stmt pos:start="1303:25" pos:end="1303:58"><expr pos:start="1303:25" pos:end="1303:57"><name pos:start="1303:25" pos:end="1303:28">cond</name> <operator pos:start="1303:30" pos:end="1303:30">=</operator> <call pos:start="1303:32" pos:end="1303:57"><name pos:start="1303:32" pos:end="1303:43">GET_FIELD_SP</name><argument_list pos:start="1303:44" pos:end="1303:57">(<argument pos:start="1303:45" pos:end="1303:48"><expr pos:start="1303:45" pos:end="1303:48"><name pos:start="1303:45" pos:end="1303:48">insn</name></expr></argument>, <argument pos:start="1303:51" pos:end="1303:52"><expr pos:start="1303:51" pos:end="1303:52"><literal type="number" pos:start="1303:51" pos:end="1303:52">14</literal></expr></argument>, <argument pos:start="1303:55" pos:end="1303:56"><expr pos:start="1303:55" pos:end="1303:56"><literal type="number" pos:start="1303:55" pos:end="1303:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1305:25" pos:end="1305:48"><expr pos:start="1305:25" pos:end="1305:47"><call pos:start="1305:25" pos:end="1305:47"><name pos:start="1305:25" pos:end="1305:43">gen_op_load_fpr_DT0</name><argument_list pos:start="1305:44" pos:end="1305:47">(<argument pos:start="1305:45" pos:end="1305:46"><expr pos:start="1305:45" pos:end="1305:46"><name pos:start="1305:45" pos:end="1305:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1307:25" pos:end="1307:49"><expr pos:start="1307:25" pos:end="1307:48"><call pos:start="1307:25" pos:end="1307:48"><name pos:start="1307:25" pos:end="1307:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1307:44" pos:end="1307:48">(<argument pos:start="1307:45" pos:end="1307:47"><expr pos:start="1307:45" pos:end="1307:47"><name pos:start="1307:45" pos:end="1307:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1309:25" pos:end="1309:37"><expr pos:start="1309:25" pos:end="1309:36"><call pos:start="1309:25" pos:end="1309:36"><name pos:start="1309:25" pos:end="1309:32">flush_T2</name><argument_list pos:start="1309:33" pos:end="1309:36">(<argument pos:start="1309:34" pos:end="1309:35"><expr pos:start="1309:34" pos:end="1309:35"><name pos:start="1309:34" pos:end="1309:35">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1311:25" pos:end="1311:44"><expr pos:start="1311:25" pos:end="1311:43"><name pos:start="1311:25" pos:end="1311:41"><name pos:start="1311:25" pos:end="1311:32">gen_cond</name><index pos:start="1311:33" pos:end="1311:35">[<expr pos:start="1311:34" pos:end="1311:34"><literal type="number" pos:start="1311:34" pos:end="1311:34">1</literal></expr>]</index><index pos:start="1311:36" pos:end="1311:41">[<expr pos:start="1311:37" pos:end="1311:40"><name pos:start="1311:37" pos:end="1311:40">cond</name></expr>]</index></name><operator pos:start="1311:42" pos:end="1311:42">(</operator><operator pos:start="1311:43" pos:end="1311:43">)</operator></expr>;</expr_stmt>

			<expr_stmt pos:start="1313:25" pos:end="1313:42"><expr pos:start="1313:25" pos:end="1313:41"><call pos:start="1313:25" pos:end="1313:41"><name pos:start="1313:25" pos:end="1313:39">gen_op_fmovd_cc</name><argument_list pos:start="1313:40" pos:end="1313:41">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1315:25" pos:end="1315:49"><expr pos:start="1315:25" pos:end="1315:48"><call pos:start="1315:25" pos:end="1315:48"><name pos:start="1315:25" pos:end="1315:44">gen_op_store_DT0_fpr</name><argument_list pos:start="1315:45" pos:end="1315:48">(<argument pos:start="1315:46" pos:end="1315:47"><expr pos:start="1315:46" pos:end="1315:47"><name pos:start="1315:46" pos:end="1315:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="1317:25" pos:end="1317:30">break;</break>

		    <case pos:start="1319:21" pos:end="1319:31">case <expr pos:start="1319:26" pos:end="1319:30"><literal type="number" pos:start="1319:26" pos:end="1319:30">0x183</literal></expr>:</case> <comment type="block" pos:start="1319:33" pos:end="1319:53">/* V9 fmovqcc %xcc */</comment>

		        <goto pos:start="1321:25" pos:end="1324:0">goto <name pos:start="1321:30" pos:end="1321:38">nfpu_insn</name>;</goto>

<cpp:endif pos:start="1323:1" pos:end="1323:6">#<cpp:directive pos:start="1323:2" pos:end="1323:6">endif</cpp:directive></cpp:endif>

		    <case pos:start="1325:21" pos:end="1325:30">case <expr pos:start="1325:26" pos:end="1325:29"><literal type="number" pos:start="1325:26" pos:end="1325:29">0x51</literal></expr>:</case> <comment type="block" pos:start="1325:32" pos:end="1325:44">/* V9 %fcc */</comment>

                	<expr_stmt pos:start="1327:25" pos:end="1327:49"><expr pos:start="1327:25" pos:end="1327:48"><call pos:start="1327:25" pos:end="1327:48"><name pos:start="1327:25" pos:end="1327:43">gen_op_load_fpr_FT0</name><argument_list pos:start="1327:44" pos:end="1327:48">(<argument pos:start="1327:45" pos:end="1327:47"><expr pos:start="1327:45" pos:end="1327:47"><name pos:start="1327:45" pos:end="1327:47">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1329:25" pos:end="1332:0"><expr pos:start="1329:25" pos:end="1329:48"><call pos:start="1329:25" pos:end="1329:48"><name pos:start="1329:25" pos:end="1329:43">gen_op_load_fpr_FT1</name><argument_list pos:start="1329:44" pos:end="1329:48">(<argument pos:start="1329:45" pos:end="1329:47"><expr pos:start="1329:45" pos:end="1329:47"><name pos:start="1329:45" pos:end="1329:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="1331:1" pos:end="1331:21">#<cpp:directive pos:start="1331:2" pos:end="1331:6">ifdef</cpp:directive> <name pos:start="1331:8" pos:end="1331:21">TARGET_SPARC64</name></cpp:ifdef>

			<expr_stmt pos:start="1333:25" pos:end="1336:0"><expr pos:start="1333:25" pos:end="1333:43"><name pos:start="1333:25" pos:end="1333:41"><name pos:start="1333:25" pos:end="1333:33">gen_fcmps</name><index pos:start="1333:34" pos:end="1333:41">[<expr pos:start="1333:35" pos:end="1333:40"><name pos:start="1333:35" pos:end="1333:36">rd</name> <operator pos:start="1333:38" pos:end="1333:38">&amp;</operator> <literal type="number" pos:start="1333:40" pos:end="1333:40">3</literal></expr>]</index></name><operator pos:start="1333:42" pos:end="1333:42">(</operator><operator pos:start="1333:43" pos:end="1333:43">)</operator></expr>;</expr_stmt>

<cpp:else pos:start="1335:1" pos:end="1335:5">#<cpp:directive pos:start="1335:2" pos:end="1335:5">else</cpp:directive></cpp:else>

			<expr_stmt pos:start="1337:25" pos:end="1340:0"><expr pos:start="1337:25" pos:end="1337:38"><call pos:start="1337:25" pos:end="1337:38"><name pos:start="1337:25" pos:end="1337:36">gen_op_fcmps</name><argument_list pos:start="1337:37" pos:end="1337:38">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="1339:1" pos:end="1339:6">#<cpp:directive pos:start="1339:2" pos:end="1339:6">endif</cpp:directive></cpp:endif>

			<break pos:start="1341:25" pos:end="1341:30">break;</break>

		    <case pos:start="1343:21" pos:end="1343:30">case <expr pos:start="1343:26" pos:end="1343:29"><literal type="number" pos:start="1343:26" pos:end="1343:29">0x52</literal></expr>:</case> <comment type="block" pos:start="1343:32" pos:end="1343:44">/* V9 %fcc */</comment>

                	<expr_stmt pos:start="1345:25" pos:end="1345:57"><expr pos:start="1345:25" pos:end="1345:56"><call pos:start="1345:25" pos:end="1345:56"><name pos:start="1345:25" pos:end="1345:43">gen_op_load_fpr_DT0</name><argument_list pos:start="1345:44" pos:end="1345:56">(<argument pos:start="1345:45" pos:end="1345:55"><expr pos:start="1345:45" pos:end="1345:55"><call pos:start="1345:45" pos:end="1345:55"><name pos:start="1345:45" pos:end="1345:50">DFPREG</name><argument_list pos:start="1345:51" pos:end="1345:55">(<argument pos:start="1345:52" pos:end="1345:54"><expr pos:start="1345:52" pos:end="1345:54"><name pos:start="1345:52" pos:end="1345:54">rs1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1347:25" pos:end="1350:0"><expr pos:start="1347:25" pos:end="1347:56"><call pos:start="1347:25" pos:end="1347:56"><name pos:start="1347:25" pos:end="1347:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1347:44" pos:end="1347:56">(<argument pos:start="1347:45" pos:end="1347:55"><expr pos:start="1347:45" pos:end="1347:55"><call pos:start="1347:45" pos:end="1347:55"><name pos:start="1347:45" pos:end="1347:50">DFPREG</name><argument_list pos:start="1347:51" pos:end="1347:55">(<argument pos:start="1347:52" pos:end="1347:54"><expr pos:start="1347:52" pos:end="1347:54"><name pos:start="1347:52" pos:end="1347:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="1349:1" pos:end="1349:21">#<cpp:directive pos:start="1349:2" pos:end="1349:6">ifdef</cpp:directive> <name pos:start="1349:8" pos:end="1349:21">TARGET_SPARC64</name></cpp:ifdef>

			<expr_stmt pos:start="1351:25" pos:end="1354:0"><expr pos:start="1351:25" pos:end="1351:43"><name pos:start="1351:25" pos:end="1351:41"><name pos:start="1351:25" pos:end="1351:33">gen_fcmpd</name><index pos:start="1351:34" pos:end="1351:41">[<expr pos:start="1351:35" pos:end="1351:40"><name pos:start="1351:35" pos:end="1351:36">rd</name> <operator pos:start="1351:38" pos:end="1351:38">&amp;</operator> <literal type="number" pos:start="1351:40" pos:end="1351:40">3</literal></expr>]</index></name><operator pos:start="1351:42" pos:end="1351:42">(</operator><operator pos:start="1351:43" pos:end="1351:43">)</operator></expr>;</expr_stmt>

<cpp:else pos:start="1353:1" pos:end="1353:5">#<cpp:directive pos:start="1353:2" pos:end="1353:5">else</cpp:directive></cpp:else>

			<expr_stmt pos:start="1355:25" pos:end="1358:0"><expr pos:start="1355:25" pos:end="1355:38"><call pos:start="1355:25" pos:end="1355:38"><name pos:start="1355:25" pos:end="1355:36">gen_op_fcmpd</name><argument_list pos:start="1355:37" pos:end="1355:38">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="1357:1" pos:end="1357:6">#<cpp:directive pos:start="1357:2" pos:end="1357:6">endif</cpp:directive></cpp:endif>

			<break pos:start="1359:25" pos:end="1359:30">break;</break>

		    <case pos:start="1361:21" pos:end="1361:30">case <expr pos:start="1361:26" pos:end="1361:29"><literal type="number" pos:start="1361:26" pos:end="1361:29">0x53</literal></expr>:</case> <comment type="block" pos:start="1361:32" pos:end="1361:42">/* fcmpq */</comment>

		        <goto pos:start="1363:25" pos:end="1363:39">goto <name pos:start="1363:30" pos:end="1363:38">nfpu_insn</name>;</goto>

		    <case pos:start="1365:21" pos:end="1365:30">case <expr pos:start="1365:26" pos:end="1365:29"><literal type="number" pos:start="1365:26" pos:end="1365:29">0x55</literal></expr>:</case> <comment type="block" pos:start="1365:32" pos:end="1365:52">/* fcmpes, V9 %fcc */</comment>

                	<expr_stmt pos:start="1367:25" pos:end="1367:49"><expr pos:start="1367:25" pos:end="1367:48"><call pos:start="1367:25" pos:end="1367:48"><name pos:start="1367:25" pos:end="1367:43">gen_op_load_fpr_FT0</name><argument_list pos:start="1367:44" pos:end="1367:48">(<argument pos:start="1367:45" pos:end="1367:47"><expr pos:start="1367:45" pos:end="1367:47"><name pos:start="1367:45" pos:end="1367:47">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1369:25" pos:end="1372:0"><expr pos:start="1369:25" pos:end="1369:48"><call pos:start="1369:25" pos:end="1369:48"><name pos:start="1369:25" pos:end="1369:43">gen_op_load_fpr_FT1</name><argument_list pos:start="1369:44" pos:end="1369:48">(<argument pos:start="1369:45" pos:end="1369:47"><expr pos:start="1369:45" pos:end="1369:47"><name pos:start="1369:45" pos:end="1369:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="1371:1" pos:end="1371:21">#<cpp:directive pos:start="1371:2" pos:end="1371:6">ifdef</cpp:directive> <name pos:start="1371:8" pos:end="1371:21">TARGET_SPARC64</name></cpp:ifdef>

			<expr_stmt pos:start="1373:25" pos:end="1376:0"><expr pos:start="1373:25" pos:end="1373:43"><name pos:start="1373:25" pos:end="1373:41"><name pos:start="1373:25" pos:end="1373:33">gen_fcmps</name><index pos:start="1373:34" pos:end="1373:41">[<expr pos:start="1373:35" pos:end="1373:40"><name pos:start="1373:35" pos:end="1373:36">rd</name> <operator pos:start="1373:38" pos:end="1373:38">&amp;</operator> <literal type="number" pos:start="1373:40" pos:end="1373:40">3</literal></expr>]</index></name><operator pos:start="1373:42" pos:end="1373:42">(</operator><operator pos:start="1373:43" pos:end="1373:43">)</operator></expr>;</expr_stmt>

<cpp:else pos:start="1375:1" pos:end="1375:5">#<cpp:directive pos:start="1375:2" pos:end="1375:5">else</cpp:directive></cpp:else>

			<expr_stmt pos:start="1377:25" pos:end="1380:0"><expr pos:start="1377:25" pos:end="1377:38"><call pos:start="1377:25" pos:end="1377:38"><name pos:start="1377:25" pos:end="1377:36">gen_op_fcmps</name><argument_list pos:start="1377:37" pos:end="1377:38">()</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="1377:41" pos:end="1377:78">/* XXX should trap if qNaN or sNaN  */</comment>

<cpp:endif pos:start="1379:1" pos:end="1379:6">#<cpp:directive pos:start="1379:2" pos:end="1379:6">endif</cpp:directive></cpp:endif>

			<break pos:start="1381:25" pos:end="1381:30">break;</break>

		    <case pos:start="1383:21" pos:end="1383:30">case <expr pos:start="1383:26" pos:end="1383:29"><literal type="number" pos:start="1383:26" pos:end="1383:29">0x56</literal></expr>:</case> <comment type="block" pos:start="1383:32" pos:end="1383:52">/* fcmped, V9 %fcc */</comment>

                	<expr_stmt pos:start="1385:25" pos:end="1385:57"><expr pos:start="1385:25" pos:end="1385:56"><call pos:start="1385:25" pos:end="1385:56"><name pos:start="1385:25" pos:end="1385:43">gen_op_load_fpr_DT0</name><argument_list pos:start="1385:44" pos:end="1385:56">(<argument pos:start="1385:45" pos:end="1385:55"><expr pos:start="1385:45" pos:end="1385:55"><call pos:start="1385:45" pos:end="1385:55"><name pos:start="1385:45" pos:end="1385:50">DFPREG</name><argument_list pos:start="1385:51" pos:end="1385:55">(<argument pos:start="1385:52" pos:end="1385:54"><expr pos:start="1385:52" pos:end="1385:54"><name pos:start="1385:52" pos:end="1385:54">rs1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                	<expr_stmt pos:start="1387:25" pos:end="1390:0"><expr pos:start="1387:25" pos:end="1387:56"><call pos:start="1387:25" pos:end="1387:56"><name pos:start="1387:25" pos:end="1387:43">gen_op_load_fpr_DT1</name><argument_list pos:start="1387:44" pos:end="1387:56">(<argument pos:start="1387:45" pos:end="1387:55"><expr pos:start="1387:45" pos:end="1387:55"><call pos:start="1387:45" pos:end="1387:55"><name pos:start="1387:45" pos:end="1387:50">DFPREG</name><argument_list pos:start="1387:51" pos:end="1387:55">(<argument pos:start="1387:52" pos:end="1387:54"><expr pos:start="1387:52" pos:end="1387:54"><name pos:start="1387:52" pos:end="1387:54">rs2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="1389:1" pos:end="1389:21">#<cpp:directive pos:start="1389:2" pos:end="1389:6">ifdef</cpp:directive> <name pos:start="1389:8" pos:end="1389:21">TARGET_SPARC64</name></cpp:ifdef>

			<expr_stmt pos:start="1391:25" pos:end="1394:0"><expr pos:start="1391:25" pos:end="1391:43"><name pos:start="1391:25" pos:end="1391:41"><name pos:start="1391:25" pos:end="1391:33">gen_fcmpd</name><index pos:start="1391:34" pos:end="1391:41">[<expr pos:start="1391:35" pos:end="1391:40"><name pos:start="1391:35" pos:end="1391:36">rd</name> <operator pos:start="1391:38" pos:end="1391:38">&amp;</operator> <literal type="number" pos:start="1391:40" pos:end="1391:40">3</literal></expr>]</index></name><operator pos:start="1391:42" pos:end="1391:42">(</operator><operator pos:start="1391:43" pos:end="1391:43">)</operator></expr>;</expr_stmt>

<cpp:else pos:start="1393:1" pos:end="1393:5">#<cpp:directive pos:start="1393:2" pos:end="1393:5">else</cpp:directive></cpp:else>

			<expr_stmt pos:start="1395:25" pos:end="1398:0"><expr pos:start="1395:25" pos:end="1395:38"><call pos:start="1395:25" pos:end="1395:38"><name pos:start="1395:25" pos:end="1395:36">gen_op_fcmpd</name><argument_list pos:start="1395:37" pos:end="1395:38">()</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="1395:41" pos:end="1395:78">/* XXX should trap if qNaN or sNaN  */</comment>

<cpp:endif pos:start="1397:1" pos:end="1397:6">#<cpp:directive pos:start="1397:2" pos:end="1397:6">endif</cpp:directive></cpp:endif>

			<break pos:start="1399:25" pos:end="1399:30">break;</break>

		    <case pos:start="1401:21" pos:end="1401:30">case <expr pos:start="1401:26" pos:end="1401:29"><literal type="number" pos:start="1401:26" pos:end="1401:29">0x57</literal></expr>:</case> <comment type="block" pos:start="1401:32" pos:end="1401:43">/* fcmpeq */</comment>

		        <goto pos:start="1403:25" pos:end="1403:39">goto <name pos:start="1403:30" pos:end="1403:38">nfpu_insn</name>;</goto>

		    <default pos:start="1405:21" pos:end="1405:28">default:</default>


		</block_content>}</block></switch>

<cpp:if pos:start="1410:1" pos:end="1410:18">#<cpp:directive pos:start="1410:2" pos:end="1410:3">if</cpp:directive> <expr pos:start="1410:5" pos:end="1410:18"><call pos:start="1410:5" pos:end="1410:18"><name pos:start="1410:5" pos:end="1410:11">defined</name><argument_list pos:start="1410:12" pos:end="1410:18">(<argument pos:start="1410:13" pos:end="1410:17"><expr pos:start="1410:13" pos:end="1410:17"><name pos:start="1410:13" pos:end="1410:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

	    </block_content>}</block></if> <if type="elseif" pos:start="1412:15" pos:end="1482:13">else if <condition pos:start="1412:23" pos:end="1412:34">(<expr pos:start="1412:24" pos:end="1412:33"><name pos:start="1412:24" pos:end="1412:26">xop</name> <operator pos:start="1412:28" pos:end="1412:29">==</operator> <literal type="number" pos:start="1412:31" pos:end="1412:33">0x2</literal></expr>)</condition> <block pos:start="1412:36" pos:end="1482:13">{<block_content pos:start="1418:17" pos:end="1481:0">

		<comment type="line" pos:start="1414:17" pos:end="1414:35">// clr/mov shortcut</comment>



                <expr_stmt pos:start="1418:17" pos:end="1418:46"><expr pos:start="1418:17" pos:end="1418:45"><name pos:start="1418:17" pos:end="1418:19">rs1</name> <operator pos:start="1418:21" pos:end="1418:21">=</operator> <call pos:start="1418:23" pos:end="1418:45"><name pos:start="1418:23" pos:end="1418:31">GET_FIELD</name><argument_list pos:start="1418:32" pos:end="1418:45">(<argument pos:start="1418:33" pos:end="1418:36"><expr pos:start="1418:33" pos:end="1418:36"><name pos:start="1418:33" pos:end="1418:36">insn</name></expr></argument>, <argument pos:start="1418:39" pos:end="1418:40"><expr pos:start="1418:39" pos:end="1418:40"><literal type="number" pos:start="1418:39" pos:end="1418:40">13</literal></expr></argument>, <argument pos:start="1418:43" pos:end="1418:44"><expr pos:start="1418:43" pos:end="1418:44"><literal type="number" pos:start="1418:43" pos:end="1418:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt pos:start="1420:17" pos:end="1481:0"><if pos:start="1420:17" pos:end="1440:17">if <condition pos:start="1420:20" pos:end="1420:29">(<expr pos:start="1420:21" pos:end="1420:28"><name pos:start="1420:21" pos:end="1420:23">rs1</name> <operator pos:start="1420:25" pos:end="1420:26">==</operator> <literal type="number" pos:start="1420:28" pos:end="1420:28">0</literal></expr>)</condition> <block pos:start="1420:31" pos:end="1440:17">{<block_content pos:start="1424:21" pos:end="1438:40">

		    <comment type="line" pos:start="1422:21" pos:end="1422:59">// or %g0, x, y -&gt; mov T1, x; mov y, T1</comment>

		    <if_stmt pos:start="1424:21" pos:end="1436:21"><if pos:start="1424:21" pos:end="1430:21">if <condition pos:start="1424:24" pos:end="1424:31">(<expr pos:start="1424:25" pos:end="1424:30"><name pos:start="1424:25" pos:end="1424:30">IS_IMM</name></expr>)</condition> <block pos:start="1424:33" pos:end="1430:21">{<block_content pos:start="1426:25" pos:end="1428:46">	<comment type="block" pos:start="1424:41" pos:end="1424:55">/* immediate */</comment>

			<expr_stmt pos:start="1426:25" pos:end="1426:55"><expr pos:start="1426:25" pos:end="1426:54"><name pos:start="1426:25" pos:end="1426:27">rs2</name> <operator pos:start="1426:29" pos:end="1426:29">=</operator> <call pos:start="1426:31" pos:end="1426:54"><name pos:start="1426:31" pos:end="1426:40">GET_FIELDs</name><argument_list pos:start="1426:41" pos:end="1426:54">(<argument pos:start="1426:42" pos:end="1426:45"><expr pos:start="1426:42" pos:end="1426:45"><name pos:start="1426:42" pos:end="1426:45">insn</name></expr></argument>, <argument pos:start="1426:48" pos:end="1426:49"><expr pos:start="1426:48" pos:end="1426:49"><literal type="number" pos:start="1426:48" pos:end="1426:49">19</literal></expr></argument>, <argument pos:start="1426:52" pos:end="1426:53"><expr pos:start="1426:52" pos:end="1426:53"><literal type="number" pos:start="1426:52" pos:end="1426:53">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1428:25" pos:end="1428:46"><expr pos:start="1428:25" pos:end="1428:45"><call pos:start="1428:25" pos:end="1428:45"><name pos:start="1428:25" pos:end="1428:40">gen_movl_simm_T1</name><argument_list pos:start="1428:41" pos:end="1428:45">(<argument pos:start="1428:42" pos:end="1428:44"><expr pos:start="1428:42" pos:end="1428:44"><name pos:start="1428:42" pos:end="1428:44">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    </block_content>}</block></if> <else pos:start="1430:23" pos:end="1436:21">else <block pos:start="1430:28" pos:end="1436:21">{<block_content pos:start="1432:25" pos:end="1434:45">		<comment type="block" pos:start="1430:41" pos:end="1430:54">/* register */</comment>

			<expr_stmt pos:start="1432:25" pos:end="1432:54"><expr pos:start="1432:25" pos:end="1432:53"><name pos:start="1432:25" pos:end="1432:27">rs2</name> <operator pos:start="1432:29" pos:end="1432:29">=</operator> <call pos:start="1432:31" pos:end="1432:53"><name pos:start="1432:31" pos:end="1432:39">GET_FIELD</name><argument_list pos:start="1432:40" pos:end="1432:53">(<argument pos:start="1432:41" pos:end="1432:44"><expr pos:start="1432:41" pos:end="1432:44"><name pos:start="1432:41" pos:end="1432:44">insn</name></expr></argument>, <argument pos:start="1432:47" pos:end="1432:48"><expr pos:start="1432:47" pos:end="1432:48"><literal type="number" pos:start="1432:47" pos:end="1432:48">27</literal></expr></argument>, <argument pos:start="1432:51" pos:end="1432:52"><expr pos:start="1432:51" pos:end="1432:52"><literal type="number" pos:start="1432:51" pos:end="1432:52">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="1434:25" pos:end="1434:45"><expr pos:start="1434:25" pos:end="1434:44"><call pos:start="1434:25" pos:end="1434:44"><name pos:start="1434:25" pos:end="1434:39">gen_movl_reg_T1</name><argument_list pos:start="1434:40" pos:end="1434:44">(<argument pos:start="1434:41" pos:end="1434:43"><expr pos:start="1434:41" pos:end="1434:43"><name pos:start="1434:41" pos:end="1434:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    </block_content>}</block></else></if_stmt>

		    <expr_stmt pos:start="1438:21" pos:end="1438:40"><expr pos:start="1438:21" pos:end="1438:39"><call pos:start="1438:21" pos:end="1438:39"><name pos:start="1438:21" pos:end="1438:35">gen_movl_T1_reg</name><argument_list pos:start="1438:36" pos:end="1438:39">(<argument pos:start="1438:37" pos:end="1438:38"><expr pos:start="1438:37" pos:end="1438:38"><name pos:start="1438:37" pos:end="1438:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block></if> <else pos:start="1440:19" pos:end="1481:0">else <block pos:start="1440:24" pos:end="1481:0">{<block_content pos:start="1442:21" pos:end="1474:40">

		    <expr_stmt pos:start="1442:21" pos:end="1442:41"><expr pos:start="1442:21" pos:end="1442:40"><call pos:start="1442:21" pos:end="1442:40"><name pos:start="1442:21" pos:end="1442:35">gen_movl_reg_T0</name><argument_list pos:start="1442:36" pos:end="1442:40">(<argument pos:start="1442:37" pos:end="1442:39"><expr pos:start="1442:37" pos:end="1442:39"><name pos:start="1442:37" pos:end="1442:39">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <if_stmt pos:start="1444:21" pos:end="1472:21"><if pos:start="1444:21" pos:end="1458:21">if <condition pos:start="1444:24" pos:end="1444:31">(<expr pos:start="1444:25" pos:end="1444:30"><name pos:start="1444:25" pos:end="1444:30">IS_IMM</name></expr>)</condition> <block pos:start="1444:33" pos:end="1458:21">{<block_content pos:start="1448:25" pos:end="1456:25">	<comment type="block" pos:start="1444:41" pos:end="1444:55">/* immediate */</comment>

			<comment type="line" pos:start="1446:25" pos:end="1446:62">// or x, #0, y -&gt; mov T1, x; mov y, T1</comment>

			<expr_stmt pos:start="1448:25" pos:end="1448:55"><expr pos:start="1448:25" pos:end="1448:54"><name pos:start="1448:25" pos:end="1448:27">rs2</name> <operator pos:start="1448:29" pos:end="1448:29">=</operator> <call pos:start="1448:31" pos:end="1448:54"><name pos:start="1448:31" pos:end="1448:40">GET_FIELDs</name><argument_list pos:start="1448:41" pos:end="1448:54">(<argument pos:start="1448:42" pos:end="1448:45"><expr pos:start="1448:42" pos:end="1448:45"><name pos:start="1448:42" pos:end="1448:45">insn</name></expr></argument>, <argument pos:start="1448:48" pos:end="1448:49"><expr pos:start="1448:48" pos:end="1448:49"><literal type="number" pos:start="1448:48" pos:end="1448:49">19</literal></expr></argument>, <argument pos:start="1448:52" pos:end="1448:53"><expr pos:start="1448:52" pos:end="1448:53"><literal type="number" pos:start="1448:52" pos:end="1448:53">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if_stmt pos:start="1450:25" pos:end="1456:25"><if pos:start="1450:25" pos:end="1456:25">if <condition pos:start="1450:28" pos:end="1450:37">(<expr pos:start="1450:29" pos:end="1450:36"><name pos:start="1450:29" pos:end="1450:31">rs2</name> <operator pos:start="1450:33" pos:end="1450:34">!=</operator> <literal type="number" pos:start="1450:36" pos:end="1450:36">0</literal></expr>)</condition> <block pos:start="1450:39" pos:end="1456:25">{<block_content pos:start="1452:29" pos:end="1454:46">

			    <expr_stmt pos:start="1452:29" pos:end="1452:50"><expr pos:start="1452:29" pos:end="1452:49"><call pos:start="1452:29" pos:end="1452:49"><name pos:start="1452:29" pos:end="1452:44">gen_movl_simm_T1</name><argument_list pos:start="1452:45" pos:end="1452:49">(<argument pos:start="1452:46" pos:end="1452:48"><expr pos:start="1452:46" pos:end="1452:48"><name pos:start="1452:46" pos:end="1452:48">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			    <expr_stmt pos:start="1454:29" pos:end="1454:46"><expr pos:start="1454:29" pos:end="1454:45"><call pos:start="1454:29" pos:end="1454:45"><name pos:start="1454:29" pos:end="1454:43">gen_op_or_T1_T0</name><argument_list pos:start="1454:44" pos:end="1454:45">()</argument_list></call></expr>;</expr_stmt>

			</block_content>}</block></if></if_stmt>

		    </block_content>}</block></if> <else pos:start="1458:23" pos:end="1472:21">else <block pos:start="1458:28" pos:end="1472:21">{<block_content pos:start="1462:25" pos:end="1470:25">		<comment type="block" pos:start="1458:41" pos:end="1458:54">/* register */</comment>

			<comment type="line" pos:start="1460:25" pos:end="1460:63">// or x, %g0, y -&gt; mov T1, x; mov y, T1</comment>

			<expr_stmt pos:start="1462:25" pos:end="1462:54"><expr pos:start="1462:25" pos:end="1462:53"><name pos:start="1462:25" pos:end="1462:27">rs2</name> <operator pos:start="1462:29" pos:end="1462:29">=</operator> <call pos:start="1462:31" pos:end="1462:53"><name pos:start="1462:31" pos:end="1462:39">GET_FIELD</name><argument_list pos:start="1462:40" pos:end="1462:53">(<argument pos:start="1462:41" pos:end="1462:44"><expr pos:start="1462:41" pos:end="1462:44"><name pos:start="1462:41" pos:end="1462:44">insn</name></expr></argument>, <argument pos:start="1462:47" pos:end="1462:48"><expr pos:start="1462:47" pos:end="1462:48"><literal type="number" pos:start="1462:47" pos:end="1462:48">27</literal></expr></argument>, <argument pos:start="1462:51" pos:end="1462:52"><expr pos:start="1462:51" pos:end="1462:52"><literal type="number" pos:start="1462:51" pos:end="1462:52">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if_stmt pos:start="1464:25" pos:end="1470:25"><if pos:start="1464:25" pos:end="1470:25">if <condition pos:start="1464:28" pos:end="1464:37">(<expr pos:start="1464:29" pos:end="1464:36"><name pos:start="1464:29" pos:end="1464:31">rs2</name> <operator pos:start="1464:33" pos:end="1464:34">!=</operator> <literal type="number" pos:start="1464:36" pos:end="1464:36">0</literal></expr>)</condition> <block pos:start="1464:39" pos:end="1470:25">{<block_content pos:start="1466:29" pos:end="1468:46">

			    <expr_stmt pos:start="1466:29" pos:end="1466:49"><expr pos:start="1466:29" pos:end="1466:48"><call pos:start="1466:29" pos:end="1466:48"><name pos:start="1466:29" pos:end="1466:43">gen_movl_reg_T1</name><argument_list pos:start="1466:44" pos:end="1466:48">(<argument pos:start="1466:45" pos:end="1466:47"><expr pos:start="1466:45" pos:end="1466:47"><name pos:start="1466:45" pos:end="1466:47">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			    <expr_stmt pos:start="1468:29" pos:end="1468:46"><expr pos:start="1468:29" pos:end="1468:45"><call pos:start="1468:29" pos:end="1468:45"><name pos:start="1468:29" pos:end="1468:43">gen_op_or_T1_T0</name><argument_list pos:start="1468:44" pos:end="1468:45">()</argument_list></call></expr>;</expr_stmt>

			</block_content>}</block></if></if_stmt>

		    </block_content>}</block></else></if_stmt>

		    <expr_stmt pos:start="1474:21" pos:end="1474:40"><expr pos:start="1474:21" pos:end="1474:39"><call pos:start="1474:21" pos:end="1474:39"><name pos:start="1474:21" pos:end="1474:35">gen_movl_T0_reg</name><argument_list pos:start="1474:36" pos:end="1474:39">(<argument pos:start="1474:37" pos:end="1474:38"><expr pos:start="1474:37" pos:end="1474:38"><name pos:start="1474:37" pos:end="1474:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block></else></if_stmt>

<cpp:endif pos:start="1478:1" pos:end="1478:6">#<cpp:directive pos:start="1478:2" pos:end="1478:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1480:1" pos:end="1480:21">#<cpp:directive pos:start="1480:2" pos:end="1480:6">ifdef</cpp:directive> <name pos:start="1480:8" pos:end="1480:21">TARGET_SPARC64</name></cpp:ifdef>

	    </block_content>}</block></if> <if type="elseif" pos:start="1482:15" pos:end="1506:13">else if <condition pos:start="1482:23" pos:end="1482:35">(<expr pos:start="1482:24" pos:end="1482:34"><name pos:start="1482:24" pos:end="1482:26">xop</name> <operator pos:start="1482:28" pos:end="1482:29">==</operator> <literal type="number" pos:start="1482:31" pos:end="1482:34">0x25</literal></expr>)</condition> <block pos:start="1482:37" pos:end="1506:13">{<block_content pos:start="1484:17" pos:end="1504:36"> <comment type="block" pos:start="1482:39" pos:end="1482:66">/* sll, V9 sllx ( == sll) */</comment>

                <expr_stmt pos:start="1484:17" pos:end="1484:46"><expr pos:start="1484:17" pos:end="1484:45"><name pos:start="1484:17" pos:end="1484:19">rs1</name> <operator pos:start="1484:21" pos:end="1484:21">=</operator> <call pos:start="1484:23" pos:end="1484:45"><name pos:start="1484:23" pos:end="1484:31">GET_FIELD</name><argument_list pos:start="1484:32" pos:end="1484:45">(<argument pos:start="1484:33" pos:end="1484:36"><expr pos:start="1484:33" pos:end="1484:36"><name pos:start="1484:33" pos:end="1484:36">insn</name></expr></argument>, <argument pos:start="1484:39" pos:end="1484:40"><expr pos:start="1484:39" pos:end="1484:40"><literal type="number" pos:start="1484:39" pos:end="1484:40">13</literal></expr></argument>, <argument pos:start="1484:43" pos:end="1484:44"><expr pos:start="1484:43" pos:end="1484:44"><literal type="number" pos:start="1484:43" pos:end="1484:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="1486:17" pos:end="1486:37"><expr pos:start="1486:17" pos:end="1486:36"><call pos:start="1486:17" pos:end="1486:36"><name pos:start="1486:17" pos:end="1486:31">gen_movl_reg_T0</name><argument_list pos:start="1486:32" pos:end="1486:36">(<argument pos:start="1486:33" pos:end="1486:35"><expr pos:start="1486:33" pos:end="1486:35"><name pos:start="1486:33" pos:end="1486:35">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt pos:start="1488:17" pos:end="1500:17"><if pos:start="1488:17" pos:end="1494:17">if <condition pos:start="1488:20" pos:end="1488:27">(<expr pos:start="1488:21" pos:end="1488:26"><name pos:start="1488:21" pos:end="1488:26">IS_IMM</name></expr>)</condition> <block pos:start="1488:29" pos:end="1494:17">{<block_content pos:start="1490:21" pos:end="1492:42">	<comment type="block" pos:start="1488:33" pos:end="1488:47">/* immediate */</comment>

                    <expr_stmt pos:start="1490:21" pos:end="1490:51"><expr pos:start="1490:21" pos:end="1490:50"><name pos:start="1490:21" pos:end="1490:23">rs2</name> <operator pos:start="1490:25" pos:end="1490:25">=</operator> <call pos:start="1490:27" pos:end="1490:50"><name pos:start="1490:27" pos:end="1490:36">GET_FIELDs</name><argument_list pos:start="1490:37" pos:end="1490:50">(<argument pos:start="1490:38" pos:end="1490:41"><expr pos:start="1490:38" pos:end="1490:41"><name pos:start="1490:38" pos:end="1490:41">insn</name></expr></argument>, <argument pos:start="1490:44" pos:end="1490:45"><expr pos:start="1490:44" pos:end="1490:45"><literal type="number" pos:start="1490:44" pos:end="1490:45">20</literal></expr></argument>, <argument pos:start="1490:48" pos:end="1490:49"><expr pos:start="1490:48" pos:end="1490:49"><literal type="number" pos:start="1490:48" pos:end="1490:49">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1492:21" pos:end="1492:42"><expr pos:start="1492:21" pos:end="1492:41"><call pos:start="1492:21" pos:end="1492:41"><name pos:start="1492:21" pos:end="1492:36">gen_movl_simm_T1</name><argument_list pos:start="1492:37" pos:end="1492:41">(<argument pos:start="1492:38" pos:end="1492:40"><expr pos:start="1492:38" pos:end="1492:40"><name pos:start="1492:38" pos:end="1492:40">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1494:19" pos:end="1500:17">else <block pos:start="1494:24" pos:end="1500:17">{<block_content pos:start="1496:21" pos:end="1498:41">		<comment type="block" pos:start="1494:41" pos:end="1494:54">/* register */</comment>

                    <expr_stmt pos:start="1496:21" pos:end="1496:50"><expr pos:start="1496:21" pos:end="1496:49"><name pos:start="1496:21" pos:end="1496:23">rs2</name> <operator pos:start="1496:25" pos:end="1496:25">=</operator> <call pos:start="1496:27" pos:end="1496:49"><name pos:start="1496:27" pos:end="1496:35">GET_FIELD</name><argument_list pos:start="1496:36" pos:end="1496:49">(<argument pos:start="1496:37" pos:end="1496:40"><expr pos:start="1496:37" pos:end="1496:40"><name pos:start="1496:37" pos:end="1496:40">insn</name></expr></argument>, <argument pos:start="1496:43" pos:end="1496:44"><expr pos:start="1496:43" pos:end="1496:44"><literal type="number" pos:start="1496:43" pos:end="1496:44">27</literal></expr></argument>, <argument pos:start="1496:47" pos:end="1496:48"><expr pos:start="1496:47" pos:end="1496:48"><literal type="number" pos:start="1496:47" pos:end="1496:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1498:21" pos:end="1498:41"><expr pos:start="1498:21" pos:end="1498:40"><call pos:start="1498:21" pos:end="1498:40"><name pos:start="1498:21" pos:end="1498:35">gen_movl_reg_T1</name><argument_list pos:start="1498:36" pos:end="1498:40">(<argument pos:start="1498:37" pos:end="1498:39"><expr pos:start="1498:37" pos:end="1498:39"><name pos:start="1498:37" pos:end="1498:39">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

		<expr_stmt pos:start="1502:17" pos:end="1502:29"><expr pos:start="1502:17" pos:end="1502:28"><call pos:start="1502:17" pos:end="1502:28"><name pos:start="1502:17" pos:end="1502:26">gen_op_sll</name><argument_list pos:start="1502:27" pos:end="1502:28">()</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="1504:17" pos:end="1504:36"><expr pos:start="1504:17" pos:end="1504:35"><call pos:start="1504:17" pos:end="1504:35"><name pos:start="1504:17" pos:end="1504:31">gen_movl_T0_reg</name><argument_list pos:start="1504:32" pos:end="1504:35">(<argument pos:start="1504:33" pos:end="1504:34"><expr pos:start="1504:33" pos:end="1504:34"><name pos:start="1504:33" pos:end="1504:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    </block_content>}</block></if> <if type="elseif" pos:start="1506:15" pos:end="1536:13">else if <condition pos:start="1506:23" pos:end="1506:35">(<expr pos:start="1506:24" pos:end="1506:34"><name pos:start="1506:24" pos:end="1506:26">xop</name> <operator pos:start="1506:28" pos:end="1506:29">==</operator> <literal type="number" pos:start="1506:31" pos:end="1506:34">0x26</literal></expr>)</condition> <block pos:start="1506:37" pos:end="1536:13">{<block_content pos:start="1508:17" pos:end="1534:36"> <comment type="block" pos:start="1506:39" pos:end="1506:56">/* srl, V9 srlx */</comment>

                <expr_stmt pos:start="1508:17" pos:end="1508:46"><expr pos:start="1508:17" pos:end="1508:45"><name pos:start="1508:17" pos:end="1508:19">rs1</name> <operator pos:start="1508:21" pos:end="1508:21">=</operator> <call pos:start="1508:23" pos:end="1508:45"><name pos:start="1508:23" pos:end="1508:31">GET_FIELD</name><argument_list pos:start="1508:32" pos:end="1508:45">(<argument pos:start="1508:33" pos:end="1508:36"><expr pos:start="1508:33" pos:end="1508:36"><name pos:start="1508:33" pos:end="1508:36">insn</name></expr></argument>, <argument pos:start="1508:39" pos:end="1508:40"><expr pos:start="1508:39" pos:end="1508:40"><literal type="number" pos:start="1508:39" pos:end="1508:40">13</literal></expr></argument>, <argument pos:start="1508:43" pos:end="1508:44"><expr pos:start="1508:43" pos:end="1508:44"><literal type="number" pos:start="1508:43" pos:end="1508:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="1510:17" pos:end="1510:37"><expr pos:start="1510:17" pos:end="1510:36"><call pos:start="1510:17" pos:end="1510:36"><name pos:start="1510:17" pos:end="1510:31">gen_movl_reg_T0</name><argument_list pos:start="1510:32" pos:end="1510:36">(<argument pos:start="1510:33" pos:end="1510:35"><expr pos:start="1510:33" pos:end="1510:35"><name pos:start="1510:33" pos:end="1510:35">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt pos:start="1512:17" pos:end="1524:17"><if pos:start="1512:17" pos:end="1518:17">if <condition pos:start="1512:20" pos:end="1512:27">(<expr pos:start="1512:21" pos:end="1512:26"><name pos:start="1512:21" pos:end="1512:26">IS_IMM</name></expr>)</condition> <block pos:start="1512:29" pos:end="1518:17">{<block_content pos:start="1514:21" pos:end="1516:42">	<comment type="block" pos:start="1512:33" pos:end="1512:47">/* immediate */</comment>

                    <expr_stmt pos:start="1514:21" pos:end="1514:51"><expr pos:start="1514:21" pos:end="1514:50"><name pos:start="1514:21" pos:end="1514:23">rs2</name> <operator pos:start="1514:25" pos:end="1514:25">=</operator> <call pos:start="1514:27" pos:end="1514:50"><name pos:start="1514:27" pos:end="1514:36">GET_FIELDs</name><argument_list pos:start="1514:37" pos:end="1514:50">(<argument pos:start="1514:38" pos:end="1514:41"><expr pos:start="1514:38" pos:end="1514:41"><name pos:start="1514:38" pos:end="1514:41">insn</name></expr></argument>, <argument pos:start="1514:44" pos:end="1514:45"><expr pos:start="1514:44" pos:end="1514:45"><literal type="number" pos:start="1514:44" pos:end="1514:45">20</literal></expr></argument>, <argument pos:start="1514:48" pos:end="1514:49"><expr pos:start="1514:48" pos:end="1514:49"><literal type="number" pos:start="1514:48" pos:end="1514:49">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1516:21" pos:end="1516:42"><expr pos:start="1516:21" pos:end="1516:41"><call pos:start="1516:21" pos:end="1516:41"><name pos:start="1516:21" pos:end="1516:36">gen_movl_simm_T1</name><argument_list pos:start="1516:37" pos:end="1516:41">(<argument pos:start="1516:38" pos:end="1516:40"><expr pos:start="1516:38" pos:end="1516:40"><name pos:start="1516:38" pos:end="1516:40">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1518:19" pos:end="1524:17">else <block pos:start="1518:24" pos:end="1524:17">{<block_content pos:start="1520:21" pos:end="1522:41">		<comment type="block" pos:start="1518:41" pos:end="1518:54">/* register */</comment>

                    <expr_stmt pos:start="1520:21" pos:end="1520:50"><expr pos:start="1520:21" pos:end="1520:49"><name pos:start="1520:21" pos:end="1520:23">rs2</name> <operator pos:start="1520:25" pos:end="1520:25">=</operator> <call pos:start="1520:27" pos:end="1520:49"><name pos:start="1520:27" pos:end="1520:35">GET_FIELD</name><argument_list pos:start="1520:36" pos:end="1520:49">(<argument pos:start="1520:37" pos:end="1520:40"><expr pos:start="1520:37" pos:end="1520:40"><name pos:start="1520:37" pos:end="1520:40">insn</name></expr></argument>, <argument pos:start="1520:43" pos:end="1520:44"><expr pos:start="1520:43" pos:end="1520:44"><literal type="number" pos:start="1520:43" pos:end="1520:44">27</literal></expr></argument>, <argument pos:start="1520:47" pos:end="1520:48"><expr pos:start="1520:47" pos:end="1520:48"><literal type="number" pos:start="1520:47" pos:end="1520:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1522:21" pos:end="1522:41"><expr pos:start="1522:21" pos:end="1522:40"><call pos:start="1522:21" pos:end="1522:40"><name pos:start="1522:21" pos:end="1522:35">gen_movl_reg_T1</name><argument_list pos:start="1522:36" pos:end="1522:40">(<argument pos:start="1522:37" pos:end="1522:39"><expr pos:start="1522:37" pos:end="1522:39"><name pos:start="1522:37" pos:end="1522:39">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

		<if_stmt pos:start="1526:17" pos:end="1532:33"><if pos:start="1526:17" pos:end="1528:34">if <condition pos:start="1526:20" pos:end="1526:37">(<expr pos:start="1526:21" pos:end="1526:36"><name pos:start="1526:21" pos:end="1526:24">insn</name> <operator pos:start="1526:26" pos:end="1526:26">&amp;</operator> <operator pos:start="1526:28" pos:end="1526:28">(</operator><literal type="number" pos:start="1526:29" pos:end="1526:29">1</literal> <operator pos:start="1526:31" pos:end="1526:32">&lt;&lt;</operator> <literal type="number" pos:start="1526:34" pos:end="1526:35">12</literal><operator pos:start="1526:36" pos:end="1526:36">)</operator></expr>)</condition><block type="pseudo" pos:start="1528:21" pos:end="1528:34"><block_content pos:start="1528:21" pos:end="1528:34">

		    <expr_stmt pos:start="1528:21" pos:end="1528:34"><expr pos:start="1528:21" pos:end="1528:33"><call pos:start="1528:21" pos:end="1528:33"><name pos:start="1528:21" pos:end="1528:31">gen_op_srlx</name><argument_list pos:start="1528:32" pos:end="1528:33">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

		<else pos:start="1530:17" pos:end="1532:33">else<block type="pseudo" pos:start="1532:21" pos:end="1532:33"><block_content pos:start="1532:21" pos:end="1532:33">

		    <expr_stmt pos:start="1532:21" pos:end="1532:33"><expr pos:start="1532:21" pos:end="1532:32"><call pos:start="1532:21" pos:end="1532:32"><name pos:start="1532:21" pos:end="1532:30">gen_op_srl</name><argument_list pos:start="1532:31" pos:end="1532:32">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

		<expr_stmt pos:start="1534:17" pos:end="1534:36"><expr pos:start="1534:17" pos:end="1534:35"><call pos:start="1534:17" pos:end="1534:35"><name pos:start="1534:17" pos:end="1534:31">gen_movl_T0_reg</name><argument_list pos:start="1534:32" pos:end="1534:35">(<argument pos:start="1534:33" pos:end="1534:34"><expr pos:start="1534:33" pos:end="1534:34"><name pos:start="1534:33" pos:end="1534:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    </block_content>}</block></if> <if type="elseif" pos:start="1536:15" pos:end="1568:13">else if <condition pos:start="1536:23" pos:end="1536:35">(<expr pos:start="1536:24" pos:end="1536:34"><name pos:start="1536:24" pos:end="1536:26">xop</name> <operator pos:start="1536:28" pos:end="1536:29">==</operator> <literal type="number" pos:start="1536:31" pos:end="1536:34">0x27</literal></expr>)</condition> <block pos:start="1536:37" pos:end="1568:13">{<block_content pos:start="1538:17" pos:end="1567:0"> <comment type="block" pos:start="1536:39" pos:end="1536:56">/* sra, V9 srax */</comment>

                <expr_stmt pos:start="1538:17" pos:end="1538:46"><expr pos:start="1538:17" pos:end="1538:45"><name pos:start="1538:17" pos:end="1538:19">rs1</name> <operator pos:start="1538:21" pos:end="1538:21">=</operator> <call pos:start="1538:23" pos:end="1538:45"><name pos:start="1538:23" pos:end="1538:31">GET_FIELD</name><argument_list pos:start="1538:32" pos:end="1538:45">(<argument pos:start="1538:33" pos:end="1538:36"><expr pos:start="1538:33" pos:end="1538:36"><name pos:start="1538:33" pos:end="1538:36">insn</name></expr></argument>, <argument pos:start="1538:39" pos:end="1538:40"><expr pos:start="1538:39" pos:end="1538:40"><literal type="number" pos:start="1538:39" pos:end="1538:40">13</literal></expr></argument>, <argument pos:start="1538:43" pos:end="1538:44"><expr pos:start="1538:43" pos:end="1538:44"><literal type="number" pos:start="1538:43" pos:end="1538:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="1540:17" pos:end="1540:37"><expr pos:start="1540:17" pos:end="1540:36"><call pos:start="1540:17" pos:end="1540:36"><name pos:start="1540:17" pos:end="1540:31">gen_movl_reg_T0</name><argument_list pos:start="1540:32" pos:end="1540:36">(<argument pos:start="1540:33" pos:end="1540:35"><expr pos:start="1540:33" pos:end="1540:35"><name pos:start="1540:33" pos:end="1540:35">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt pos:start="1542:17" pos:end="1554:17"><if pos:start="1542:17" pos:end="1548:17">if <condition pos:start="1542:20" pos:end="1542:27">(<expr pos:start="1542:21" pos:end="1542:26"><name pos:start="1542:21" pos:end="1542:26">IS_IMM</name></expr>)</condition> <block pos:start="1542:29" pos:end="1548:17">{<block_content pos:start="1544:21" pos:end="1546:42">	<comment type="block" pos:start="1542:33" pos:end="1542:47">/* immediate */</comment>

                    <expr_stmt pos:start="1544:21" pos:end="1544:51"><expr pos:start="1544:21" pos:end="1544:50"><name pos:start="1544:21" pos:end="1544:23">rs2</name> <operator pos:start="1544:25" pos:end="1544:25">=</operator> <call pos:start="1544:27" pos:end="1544:50"><name pos:start="1544:27" pos:end="1544:36">GET_FIELDs</name><argument_list pos:start="1544:37" pos:end="1544:50">(<argument pos:start="1544:38" pos:end="1544:41"><expr pos:start="1544:38" pos:end="1544:41"><name pos:start="1544:38" pos:end="1544:41">insn</name></expr></argument>, <argument pos:start="1544:44" pos:end="1544:45"><expr pos:start="1544:44" pos:end="1544:45"><literal type="number" pos:start="1544:44" pos:end="1544:45">20</literal></expr></argument>, <argument pos:start="1544:48" pos:end="1544:49"><expr pos:start="1544:48" pos:end="1544:49"><literal type="number" pos:start="1544:48" pos:end="1544:49">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1546:21" pos:end="1546:42"><expr pos:start="1546:21" pos:end="1546:41"><call pos:start="1546:21" pos:end="1546:41"><name pos:start="1546:21" pos:end="1546:36">gen_movl_simm_T1</name><argument_list pos:start="1546:37" pos:end="1546:41">(<argument pos:start="1546:38" pos:end="1546:40"><expr pos:start="1546:38" pos:end="1546:40"><name pos:start="1546:38" pos:end="1546:40">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1548:19" pos:end="1554:17">else <block pos:start="1548:24" pos:end="1554:17">{<block_content pos:start="1550:21" pos:end="1552:41">		<comment type="block" pos:start="1548:41" pos:end="1548:54">/* register */</comment>

                    <expr_stmt pos:start="1550:21" pos:end="1550:50"><expr pos:start="1550:21" pos:end="1550:49"><name pos:start="1550:21" pos:end="1550:23">rs2</name> <operator pos:start="1550:25" pos:end="1550:25">=</operator> <call pos:start="1550:27" pos:end="1550:49"><name pos:start="1550:27" pos:end="1550:35">GET_FIELD</name><argument_list pos:start="1550:36" pos:end="1550:49">(<argument pos:start="1550:37" pos:end="1550:40"><expr pos:start="1550:37" pos:end="1550:40"><name pos:start="1550:37" pos:end="1550:40">insn</name></expr></argument>, <argument pos:start="1550:43" pos:end="1550:44"><expr pos:start="1550:43" pos:end="1550:44"><literal type="number" pos:start="1550:43" pos:end="1550:44">27</literal></expr></argument>, <argument pos:start="1550:47" pos:end="1550:48"><expr pos:start="1550:47" pos:end="1550:48"><literal type="number" pos:start="1550:47" pos:end="1550:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1552:21" pos:end="1552:41"><expr pos:start="1552:21" pos:end="1552:40"><call pos:start="1552:21" pos:end="1552:40"><name pos:start="1552:21" pos:end="1552:35">gen_movl_reg_T1</name><argument_list pos:start="1552:36" pos:end="1552:40">(<argument pos:start="1552:37" pos:end="1552:39"><expr pos:start="1552:37" pos:end="1552:39"><name pos:start="1552:37" pos:end="1552:39">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

		<if_stmt pos:start="1556:17" pos:end="1562:33"><if pos:start="1556:17" pos:end="1558:34">if <condition pos:start="1556:20" pos:end="1556:37">(<expr pos:start="1556:21" pos:end="1556:36"><name pos:start="1556:21" pos:end="1556:24">insn</name> <operator pos:start="1556:26" pos:end="1556:26">&amp;</operator> <operator pos:start="1556:28" pos:end="1556:28">(</operator><literal type="number" pos:start="1556:29" pos:end="1556:29">1</literal> <operator pos:start="1556:31" pos:end="1556:32">&lt;&lt;</operator> <literal type="number" pos:start="1556:34" pos:end="1556:35">12</literal><operator pos:start="1556:36" pos:end="1556:36">)</operator></expr>)</condition><block type="pseudo" pos:start="1558:21" pos:end="1558:34"><block_content pos:start="1558:21" pos:end="1558:34">

		    <expr_stmt pos:start="1558:21" pos:end="1558:34"><expr pos:start="1558:21" pos:end="1558:33"><call pos:start="1558:21" pos:end="1558:33"><name pos:start="1558:21" pos:end="1558:31">gen_op_srax</name><argument_list pos:start="1558:32" pos:end="1558:33">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

		<else pos:start="1560:17" pos:end="1562:33">else<block type="pseudo" pos:start="1562:21" pos:end="1562:33"><block_content pos:start="1562:21" pos:end="1562:33">

		    <expr_stmt pos:start="1562:21" pos:end="1562:33"><expr pos:start="1562:21" pos:end="1562:32"><call pos:start="1562:21" pos:end="1562:32"><name pos:start="1562:21" pos:end="1562:30">gen_op_sra</name><argument_list pos:start="1562:31" pos:end="1562:32">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

		<expr_stmt pos:start="1564:17" pos:end="1567:0"><expr pos:start="1564:17" pos:end="1564:35"><call pos:start="1564:17" pos:end="1564:35"><name pos:start="1564:17" pos:end="1564:31">gen_movl_T0_reg</name><argument_list pos:start="1564:32" pos:end="1564:35">(<argument pos:start="1564:33" pos:end="1564:34"><expr pos:start="1564:33" pos:end="1564:34"><name pos:start="1564:33" pos:end="1564:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="1566:1" pos:end="1566:6">#<cpp:directive pos:start="1566:2" pos:end="1566:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></if> <if type="elseif" pos:start="1568:15" pos:end="2390:13">else if <condition pos:start="1568:23" pos:end="1568:34">(<expr pos:start="1568:24" pos:end="1568:33"><name pos:start="1568:24" pos:end="1568:26">xop</name> <operator pos:start="1568:28" pos:end="1568:28">&lt;</operator> <literal type="number" pos:start="1568:30" pos:end="1568:33">0x36</literal></expr>)</condition> <block pos:start="1568:36" pos:end="2390:13">{<block_content pos:start="1570:17" pos:end="2388:17">

                <expr_stmt pos:start="1570:17" pos:end="1570:46"><expr pos:start="1570:17" pos:end="1570:45"><name pos:start="1570:17" pos:end="1570:19">rs1</name> <operator pos:start="1570:21" pos:end="1570:21">=</operator> <call pos:start="1570:23" pos:end="1570:45"><name pos:start="1570:23" pos:end="1570:31">GET_FIELD</name><argument_list pos:start="1570:32" pos:end="1570:45">(<argument pos:start="1570:33" pos:end="1570:36"><expr pos:start="1570:33" pos:end="1570:36"><name pos:start="1570:33" pos:end="1570:36">insn</name></expr></argument>, <argument pos:start="1570:39" pos:end="1570:40"><expr pos:start="1570:39" pos:end="1570:40"><literal type="number" pos:start="1570:39" pos:end="1570:40">13</literal></expr></argument>, <argument pos:start="1570:43" pos:end="1570:44"><expr pos:start="1570:43" pos:end="1570:44"><literal type="number" pos:start="1570:43" pos:end="1570:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="1572:17" pos:end="1572:37"><expr pos:start="1572:17" pos:end="1572:36"><call pos:start="1572:17" pos:end="1572:36"><name pos:start="1572:17" pos:end="1572:31">gen_movl_reg_T0</name><argument_list pos:start="1572:32" pos:end="1572:36">(<argument pos:start="1572:33" pos:end="1572:35"><expr pos:start="1572:33" pos:end="1572:35"><name pos:start="1572:33" pos:end="1572:35">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt pos:start="1574:17" pos:end="1586:17"><if pos:start="1574:17" pos:end="1580:17">if <condition pos:start="1574:20" pos:end="1574:27">(<expr pos:start="1574:21" pos:end="1574:26"><name pos:start="1574:21" pos:end="1574:26">IS_IMM</name></expr>)</condition> <block pos:start="1574:29" pos:end="1580:17">{<block_content pos:start="1576:21" pos:end="1578:42">	<comment type="block" pos:start="1574:33" pos:end="1574:47">/* immediate */</comment>

                    <expr_stmt pos:start="1576:21" pos:end="1576:51"><expr pos:start="1576:21" pos:end="1576:50"><name pos:start="1576:21" pos:end="1576:23">rs2</name> <operator pos:start="1576:25" pos:end="1576:25">=</operator> <call pos:start="1576:27" pos:end="1576:50"><name pos:start="1576:27" pos:end="1576:36">GET_FIELDs</name><argument_list pos:start="1576:37" pos:end="1576:50">(<argument pos:start="1576:38" pos:end="1576:41"><expr pos:start="1576:38" pos:end="1576:41"><name pos:start="1576:38" pos:end="1576:41">insn</name></expr></argument>, <argument pos:start="1576:44" pos:end="1576:45"><expr pos:start="1576:44" pos:end="1576:45"><literal type="number" pos:start="1576:44" pos:end="1576:45">19</literal></expr></argument>, <argument pos:start="1576:48" pos:end="1576:49"><expr pos:start="1576:48" pos:end="1576:49"><literal type="number" pos:start="1576:48" pos:end="1576:49">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1578:21" pos:end="1578:42"><expr pos:start="1578:21" pos:end="1578:41"><call pos:start="1578:21" pos:end="1578:41"><name pos:start="1578:21" pos:end="1578:36">gen_movl_simm_T1</name><argument_list pos:start="1578:37" pos:end="1578:41">(<argument pos:start="1578:38" pos:end="1578:40"><expr pos:start="1578:38" pos:end="1578:40"><name pos:start="1578:38" pos:end="1578:40">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1580:19" pos:end="1586:17">else <block pos:start="1580:24" pos:end="1586:17">{<block_content pos:start="1582:21" pos:end="1584:41">		<comment type="block" pos:start="1580:41" pos:end="1580:54">/* register */</comment>

                    <expr_stmt pos:start="1582:21" pos:end="1582:50"><expr pos:start="1582:21" pos:end="1582:49"><name pos:start="1582:21" pos:end="1582:23">rs2</name> <operator pos:start="1582:25" pos:end="1582:25">=</operator> <call pos:start="1582:27" pos:end="1582:49"><name pos:start="1582:27" pos:end="1582:35">GET_FIELD</name><argument_list pos:start="1582:36" pos:end="1582:49">(<argument pos:start="1582:37" pos:end="1582:40"><expr pos:start="1582:37" pos:end="1582:40"><name pos:start="1582:37" pos:end="1582:40">insn</name></expr></argument>, <argument pos:start="1582:43" pos:end="1582:44"><expr pos:start="1582:43" pos:end="1582:44"><literal type="number" pos:start="1582:43" pos:end="1582:44">27</literal></expr></argument>, <argument pos:start="1582:47" pos:end="1582:48"><expr pos:start="1582:47" pos:end="1582:48"><literal type="number" pos:start="1582:47" pos:end="1582:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1584:21" pos:end="1584:41"><expr pos:start="1584:21" pos:end="1584:40"><call pos:start="1584:21" pos:end="1584:40"><name pos:start="1584:21" pos:end="1584:35">gen_movl_reg_T1</name><argument_list pos:start="1584:36" pos:end="1584:40">(<argument pos:start="1584:37" pos:end="1584:39"><expr pos:start="1584:37" pos:end="1584:39"><name pos:start="1584:37" pos:end="1584:39">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="1588:17" pos:end="2388:17"><if pos:start="1588:17" pos:end="1767:17">if <condition pos:start="1588:20" pos:end="1588:31">(<expr pos:start="1588:21" pos:end="1588:30"><name pos:start="1588:21" pos:end="1588:23">xop</name> <operator pos:start="1588:25" pos:end="1588:25">&lt;</operator> <literal type="number" pos:start="1588:27" pos:end="1588:30">0x20</literal></expr>)</condition> <block pos:start="1588:33" pos:end="1767:17">{<block_content pos:start="1590:21" pos:end="1765:40">

                    <switch pos:start="1590:21" pos:end="1763:21">switch <condition pos:start="1590:28" pos:end="1590:40">(<expr pos:start="1590:29" pos:end="1590:39"><name pos:start="1590:29" pos:end="1590:31">xop</name> <operator pos:start="1590:33" pos:end="1590:33">&amp;</operator> <operator pos:start="1590:35" pos:end="1590:35">~</operator><literal type="number" pos:start="1590:36" pos:end="1590:39">0x10</literal></expr>)</condition> <block pos:start="1590:42" pos:end="1763:21">{<block_content pos:start="1592:21" pos:end="1760:28">

                    <case pos:start="1592:21" pos:end="1592:29">case <expr pos:start="1592:26" pos:end="1592:28"><literal type="number" pos:start="1592:26" pos:end="1592:28">0x0</literal></expr>:</case>

                        <if_stmt pos:start="1594:25" pos:end="1600:47"><if pos:start="1594:25" pos:end="1596:50">if <condition pos:start="1594:28" pos:end="1594:39">(<expr pos:start="1594:29" pos:end="1594:38"><name pos:start="1594:29" pos:end="1594:31">xop</name> <operator pos:start="1594:33" pos:end="1594:33">&amp;</operator> <literal type="number" pos:start="1594:35" pos:end="1594:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1596:29" pos:end="1596:50"><block_content pos:start="1596:29" pos:end="1596:50">

                            <expr_stmt pos:start="1596:29" pos:end="1596:50"><expr pos:start="1596:29" pos:end="1596:49"><call pos:start="1596:29" pos:end="1596:49"><name pos:start="1596:29" pos:end="1596:47">gen_op_add_T1_T0_cc</name><argument_list pos:start="1596:48" pos:end="1596:49">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1598:25" pos:end="1600:47">else<block type="pseudo" pos:start="1600:29" pos:end="1600:47"><block_content pos:start="1600:29" pos:end="1600:47">

                            <expr_stmt pos:start="1600:29" pos:end="1600:47"><expr pos:start="1600:29" pos:end="1600:46"><call pos:start="1600:29" pos:end="1600:46"><name pos:start="1600:29" pos:end="1600:44">gen_op_add_T1_T0</name><argument_list pos:start="1600:45" pos:end="1600:46">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <break pos:start="1602:25" pos:end="1602:30">break;</break>

                    <case pos:start="1604:21" pos:end="1604:29">case <expr pos:start="1604:26" pos:end="1604:28"><literal type="number" pos:start="1604:26" pos:end="1604:28">0x1</literal></expr>:</case>

                        <expr_stmt pos:start="1606:25" pos:end="1606:43"><expr pos:start="1606:25" pos:end="1606:42"><call pos:start="1606:25" pos:end="1606:42"><name pos:start="1606:25" pos:end="1606:40">gen_op_and_T1_T0</name><argument_list pos:start="1606:41" pos:end="1606:42">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1608:25" pos:end="1610:49"><if pos:start="1608:25" pos:end="1610:49">if <condition pos:start="1608:28" pos:end="1608:39">(<expr pos:start="1608:29" pos:end="1608:38"><name pos:start="1608:29" pos:end="1608:31">xop</name> <operator pos:start="1608:33" pos:end="1608:33">&amp;</operator> <literal type="number" pos:start="1608:35" pos:end="1608:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1610:29" pos:end="1610:49"><block_content pos:start="1610:29" pos:end="1610:49">

                            <expr_stmt pos:start="1610:29" pos:end="1610:49"><expr pos:start="1610:29" pos:end="1610:48"><call pos:start="1610:29" pos:end="1610:48"><name pos:start="1610:29" pos:end="1610:46">gen_op_logic_T0_cc</name><argument_list pos:start="1610:47" pos:end="1610:48">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1612:25" pos:end="1612:30">break;</break>

                    <case pos:start="1614:21" pos:end="1614:29">case <expr pos:start="1614:26" pos:end="1614:28"><literal type="number" pos:start="1614:26" pos:end="1614:28">0x2</literal></expr>:</case>

			<expr_stmt pos:start="1616:25" pos:end="1616:42"><expr pos:start="1616:25" pos:end="1616:41"><call pos:start="1616:25" pos:end="1616:41"><name pos:start="1616:25" pos:end="1616:39">gen_op_or_T1_T0</name><argument_list pos:start="1616:40" pos:end="1616:41">()</argument_list></call></expr>;</expr_stmt>

			<if_stmt pos:start="1618:25" pos:end="1620:49"><if pos:start="1618:25" pos:end="1620:49">if <condition pos:start="1618:28" pos:end="1618:39">(<expr pos:start="1618:29" pos:end="1618:38"><name pos:start="1618:29" pos:end="1618:31">xop</name> <operator pos:start="1618:33" pos:end="1618:33">&amp;</operator> <literal type="number" pos:start="1618:35" pos:end="1618:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1620:29" pos:end="1620:49"><block_content pos:start="1620:29" pos:end="1620:49">

			    <expr_stmt pos:start="1620:29" pos:end="1620:49"><expr pos:start="1620:29" pos:end="1620:48"><call pos:start="1620:29" pos:end="1620:48"><name pos:start="1620:29" pos:end="1620:46">gen_op_logic_T0_cc</name><argument_list pos:start="1620:47" pos:end="1620:48">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

			<break pos:start="1622:25" pos:end="1622:30">break;</break>

                    <case pos:start="1624:21" pos:end="1624:29">case <expr pos:start="1624:26" pos:end="1624:28"><literal type="number" pos:start="1624:26" pos:end="1624:28">0x3</literal></expr>:</case>

                        <expr_stmt pos:start="1626:25" pos:end="1626:43"><expr pos:start="1626:25" pos:end="1626:42"><call pos:start="1626:25" pos:end="1626:42"><name pos:start="1626:25" pos:end="1626:40">gen_op_xor_T1_T0</name><argument_list pos:start="1626:41" pos:end="1626:42">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1628:25" pos:end="1630:49"><if pos:start="1628:25" pos:end="1630:49">if <condition pos:start="1628:28" pos:end="1628:39">(<expr pos:start="1628:29" pos:end="1628:38"><name pos:start="1628:29" pos:end="1628:31">xop</name> <operator pos:start="1628:33" pos:end="1628:33">&amp;</operator> <literal type="number" pos:start="1628:35" pos:end="1628:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1630:29" pos:end="1630:49"><block_content pos:start="1630:29" pos:end="1630:49">

                            <expr_stmt pos:start="1630:29" pos:end="1630:49"><expr pos:start="1630:29" pos:end="1630:48"><call pos:start="1630:29" pos:end="1630:48"><name pos:start="1630:29" pos:end="1630:46">gen_op_logic_T0_cc</name><argument_list pos:start="1630:47" pos:end="1630:48">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1632:25" pos:end="1632:30">break;</break>

                    <case pos:start="1634:21" pos:end="1634:29">case <expr pos:start="1634:26" pos:end="1634:28"><literal type="number" pos:start="1634:26" pos:end="1634:28">0x4</literal></expr>:</case>

                        <if_stmt pos:start="1636:25" pos:end="1642:47"><if pos:start="1636:25" pos:end="1638:50">if <condition pos:start="1636:28" pos:end="1636:39">(<expr pos:start="1636:29" pos:end="1636:38"><name pos:start="1636:29" pos:end="1636:31">xop</name> <operator pos:start="1636:33" pos:end="1636:33">&amp;</operator> <literal type="number" pos:start="1636:35" pos:end="1636:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1638:29" pos:end="1638:50"><block_content pos:start="1638:29" pos:end="1638:50">

                            <expr_stmt pos:start="1638:29" pos:end="1638:50"><expr pos:start="1638:29" pos:end="1638:49"><call pos:start="1638:29" pos:end="1638:49"><name pos:start="1638:29" pos:end="1638:47">gen_op_sub_T1_T0_cc</name><argument_list pos:start="1638:48" pos:end="1638:49">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1640:25" pos:end="1642:47">else<block type="pseudo" pos:start="1642:29" pos:end="1642:47"><block_content pos:start="1642:29" pos:end="1642:47">

                            <expr_stmt pos:start="1642:29" pos:end="1642:47"><expr pos:start="1642:29" pos:end="1642:46"><call pos:start="1642:29" pos:end="1642:46"><name pos:start="1642:29" pos:end="1642:44">gen_op_sub_T1_T0</name><argument_list pos:start="1642:45" pos:end="1642:46">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <break pos:start="1644:25" pos:end="1644:30">break;</break>

                    <case pos:start="1646:21" pos:end="1646:29">case <expr pos:start="1646:26" pos:end="1646:28"><literal type="number" pos:start="1646:26" pos:end="1646:28">0x5</literal></expr>:</case>

                        <expr_stmt pos:start="1648:25" pos:end="1648:44"><expr pos:start="1648:25" pos:end="1648:43"><call pos:start="1648:25" pos:end="1648:43"><name pos:start="1648:25" pos:end="1648:41">gen_op_andn_T1_T0</name><argument_list pos:start="1648:42" pos:end="1648:43">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1650:25" pos:end="1652:49"><if pos:start="1650:25" pos:end="1652:49">if <condition pos:start="1650:28" pos:end="1650:39">(<expr pos:start="1650:29" pos:end="1650:38"><name pos:start="1650:29" pos:end="1650:31">xop</name> <operator pos:start="1650:33" pos:end="1650:33">&amp;</operator> <literal type="number" pos:start="1650:35" pos:end="1650:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1652:29" pos:end="1652:49"><block_content pos:start="1652:29" pos:end="1652:49">

                            <expr_stmt pos:start="1652:29" pos:end="1652:49"><expr pos:start="1652:29" pos:end="1652:48"><call pos:start="1652:29" pos:end="1652:48"><name pos:start="1652:29" pos:end="1652:46">gen_op_logic_T0_cc</name><argument_list pos:start="1652:47" pos:end="1652:48">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1654:25" pos:end="1654:30">break;</break>

                    <case pos:start="1656:21" pos:end="1656:29">case <expr pos:start="1656:26" pos:end="1656:28"><literal type="number" pos:start="1656:26" pos:end="1656:28">0x6</literal></expr>:</case>

                        <expr_stmt pos:start="1658:25" pos:end="1658:43"><expr pos:start="1658:25" pos:end="1658:42"><call pos:start="1658:25" pos:end="1658:42"><name pos:start="1658:25" pos:end="1658:40">gen_op_orn_T1_T0</name><argument_list pos:start="1658:41" pos:end="1658:42">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1660:25" pos:end="1662:49"><if pos:start="1660:25" pos:end="1662:49">if <condition pos:start="1660:28" pos:end="1660:39">(<expr pos:start="1660:29" pos:end="1660:38"><name pos:start="1660:29" pos:end="1660:31">xop</name> <operator pos:start="1660:33" pos:end="1660:33">&amp;</operator> <literal type="number" pos:start="1660:35" pos:end="1660:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1662:29" pos:end="1662:49"><block_content pos:start="1662:29" pos:end="1662:49">

                            <expr_stmt pos:start="1662:29" pos:end="1662:49"><expr pos:start="1662:29" pos:end="1662:48"><call pos:start="1662:29" pos:end="1662:48"><name pos:start="1662:29" pos:end="1662:46">gen_op_logic_T0_cc</name><argument_list pos:start="1662:47" pos:end="1662:48">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1664:25" pos:end="1664:30">break;</break>

                    <case pos:start="1666:21" pos:end="1666:29">case <expr pos:start="1666:26" pos:end="1666:28"><literal type="number" pos:start="1666:26" pos:end="1666:28">0x7</literal></expr>:</case>

                        <expr_stmt pos:start="1668:25" pos:end="1668:44"><expr pos:start="1668:25" pos:end="1668:43"><call pos:start="1668:25" pos:end="1668:43"><name pos:start="1668:25" pos:end="1668:41">gen_op_xnor_T1_T0</name><argument_list pos:start="1668:42" pos:end="1668:43">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1670:25" pos:end="1672:49"><if pos:start="1670:25" pos:end="1672:49">if <condition pos:start="1670:28" pos:end="1670:39">(<expr pos:start="1670:29" pos:end="1670:38"><name pos:start="1670:29" pos:end="1670:31">xop</name> <operator pos:start="1670:33" pos:end="1670:33">&amp;</operator> <literal type="number" pos:start="1670:35" pos:end="1670:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1672:29" pos:end="1672:49"><block_content pos:start="1672:29" pos:end="1672:49">

                            <expr_stmt pos:start="1672:29" pos:end="1672:49"><expr pos:start="1672:29" pos:end="1672:48"><call pos:start="1672:29" pos:end="1672:48"><name pos:start="1672:29" pos:end="1672:46">gen_op_logic_T0_cc</name><argument_list pos:start="1672:47" pos:end="1672:48">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1674:25" pos:end="1674:30">break;</break>

                    <case pos:start="1676:21" pos:end="1676:29">case <expr pos:start="1676:26" pos:end="1676:28"><literal type="number" pos:start="1676:26" pos:end="1676:28">0x8</literal></expr>:</case>

                        <if_stmt pos:start="1678:25" pos:end="1684:48"><if pos:start="1678:25" pos:end="1680:51">if <condition pos:start="1678:28" pos:end="1678:39">(<expr pos:start="1678:29" pos:end="1678:38"><name pos:start="1678:29" pos:end="1678:31">xop</name> <operator pos:start="1678:33" pos:end="1678:33">&amp;</operator> <literal type="number" pos:start="1678:35" pos:end="1678:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1680:29" pos:end="1680:51"><block_content pos:start="1680:29" pos:end="1680:51">

                            <expr_stmt pos:start="1680:29" pos:end="1680:51"><expr pos:start="1680:29" pos:end="1680:50"><call pos:start="1680:29" pos:end="1680:50"><name pos:start="1680:29" pos:end="1680:48">gen_op_addx_T1_T0_cc</name><argument_list pos:start="1680:49" pos:end="1680:50">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1682:25" pos:end="1684:48">else<block type="pseudo" pos:start="1684:29" pos:end="1684:48"><block_content pos:start="1684:29" pos:end="1684:48">

                            <expr_stmt pos:start="1684:29" pos:end="1684:48"><expr pos:start="1684:29" pos:end="1684:47"><call pos:start="1684:29" pos:end="1684:47"><name pos:start="1684:29" pos:end="1684:45">gen_op_addx_T1_T0</name><argument_list pos:start="1684:46" pos:end="1684:47">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <break pos:start="1686:25" pos:end="1689:0">break;</break>

<cpp:ifdef pos:start="1688:1" pos:end="1688:21">#<cpp:directive pos:start="1688:2" pos:end="1688:6">ifdef</cpp:directive> <name pos:start="1688:8" pos:end="1688:21">TARGET_SPARC64</name></cpp:ifdef>

		    <case pos:start="1690:21" pos:end="1690:29">case <expr pos:start="1690:26" pos:end="1690:28"><literal type="number" pos:start="1690:26" pos:end="1690:28">0x9</literal></expr>:</case> <comment type="block" pos:start="1690:31" pos:end="1690:43">/* V9 mulx */</comment>

                        <expr_stmt pos:start="1692:25" pos:end="1692:44"><expr pos:start="1692:25" pos:end="1692:43"><call pos:start="1692:25" pos:end="1692:43"><name pos:start="1692:25" pos:end="1692:41">gen_op_mulx_T1_T0</name><argument_list pos:start="1692:42" pos:end="1692:43">()</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1694:25" pos:end="1697:0">break;</break>

<cpp:endif pos:start="1696:1" pos:end="1696:6">#<cpp:directive pos:start="1696:2" pos:end="1696:6">endif</cpp:directive></cpp:endif>

                    <case pos:start="1698:21" pos:end="1698:29">case <expr pos:start="1698:26" pos:end="1698:28"><literal type="number" pos:start="1698:26" pos:end="1698:28">0xa</literal></expr>:</case>

                        <expr_stmt pos:start="1700:25" pos:end="1700:44"><expr pos:start="1700:25" pos:end="1700:43"><call pos:start="1700:25" pos:end="1700:43"><name pos:start="1700:25" pos:end="1700:41">gen_op_umul_T1_T0</name><argument_list pos:start="1700:42" pos:end="1700:43">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1702:25" pos:end="1704:49"><if pos:start="1702:25" pos:end="1704:49">if <condition pos:start="1702:28" pos:end="1702:39">(<expr pos:start="1702:29" pos:end="1702:38"><name pos:start="1702:29" pos:end="1702:31">xop</name> <operator pos:start="1702:33" pos:end="1702:33">&amp;</operator> <literal type="number" pos:start="1702:35" pos:end="1702:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1704:29" pos:end="1704:49"><block_content pos:start="1704:29" pos:end="1704:49">

                            <expr_stmt pos:start="1704:29" pos:end="1704:49"><expr pos:start="1704:29" pos:end="1704:48"><call pos:start="1704:29" pos:end="1704:48"><name pos:start="1704:29" pos:end="1704:46">gen_op_logic_T0_cc</name><argument_list pos:start="1704:47" pos:end="1704:48">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1706:25" pos:end="1706:30">break;</break>

                    <case pos:start="1708:21" pos:end="1708:29">case <expr pos:start="1708:26" pos:end="1708:28"><literal type="number" pos:start="1708:26" pos:end="1708:28">0xb</literal></expr>:</case>

                        <expr_stmt pos:start="1710:25" pos:end="1710:44"><expr pos:start="1710:25" pos:end="1710:43"><call pos:start="1710:25" pos:end="1710:43"><name pos:start="1710:25" pos:end="1710:41">gen_op_smul_T1_T0</name><argument_list pos:start="1710:42" pos:end="1710:43">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1712:25" pos:end="1714:49"><if pos:start="1712:25" pos:end="1714:49">if <condition pos:start="1712:28" pos:end="1712:39">(<expr pos:start="1712:29" pos:end="1712:38"><name pos:start="1712:29" pos:end="1712:31">xop</name> <operator pos:start="1712:33" pos:end="1712:33">&amp;</operator> <literal type="number" pos:start="1712:35" pos:end="1712:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1714:29" pos:end="1714:49"><block_content pos:start="1714:29" pos:end="1714:49">

                            <expr_stmt pos:start="1714:29" pos:end="1714:49"><expr pos:start="1714:29" pos:end="1714:48"><call pos:start="1714:29" pos:end="1714:48"><name pos:start="1714:29" pos:end="1714:46">gen_op_logic_T0_cc</name><argument_list pos:start="1714:47" pos:end="1714:48">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1716:25" pos:end="1716:30">break;</break>

                    <case pos:start="1718:21" pos:end="1718:29">case <expr pos:start="1718:26" pos:end="1718:28"><literal type="number" pos:start="1718:26" pos:end="1718:28">0xc</literal></expr>:</case>

                        <if_stmt pos:start="1720:25" pos:end="1726:48"><if pos:start="1720:25" pos:end="1722:51">if <condition pos:start="1720:28" pos:end="1720:39">(<expr pos:start="1720:29" pos:end="1720:38"><name pos:start="1720:29" pos:end="1720:31">xop</name> <operator pos:start="1720:33" pos:end="1720:33">&amp;</operator> <literal type="number" pos:start="1720:35" pos:end="1720:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1722:29" pos:end="1722:51"><block_content pos:start="1722:29" pos:end="1722:51">

                            <expr_stmt pos:start="1722:29" pos:end="1722:51"><expr pos:start="1722:29" pos:end="1722:50"><call pos:start="1722:29" pos:end="1722:50"><name pos:start="1722:29" pos:end="1722:48">gen_op_subx_T1_T0_cc</name><argument_list pos:start="1722:49" pos:end="1722:50">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1724:25" pos:end="1726:48">else<block type="pseudo" pos:start="1726:29" pos:end="1726:48"><block_content pos:start="1726:29" pos:end="1726:48">

                            <expr_stmt pos:start="1726:29" pos:end="1726:48"><expr pos:start="1726:29" pos:end="1726:47"><call pos:start="1726:29" pos:end="1726:47"><name pos:start="1726:29" pos:end="1726:45">gen_op_subx_T1_T0</name><argument_list pos:start="1726:46" pos:end="1726:47">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <break pos:start="1728:25" pos:end="1731:0">break;</break>

<cpp:ifdef pos:start="1730:1" pos:end="1730:21">#<cpp:directive pos:start="1730:2" pos:end="1730:6">ifdef</cpp:directive> <name pos:start="1730:8" pos:end="1730:21">TARGET_SPARC64</name></cpp:ifdef>

		    <case pos:start="1732:21" pos:end="1732:29">case <expr pos:start="1732:26" pos:end="1732:28"><literal type="number" pos:start="1732:26" pos:end="1732:28">0xd</literal></expr>:</case> <comment type="block" pos:start="1732:31" pos:end="1732:44">/* V9 udivx */</comment>

                        <expr_stmt pos:start="1734:25" pos:end="1734:45"><expr pos:start="1734:25" pos:end="1734:44"><call pos:start="1734:25" pos:end="1734:44"><name pos:start="1734:25" pos:end="1734:42">gen_op_udivx_T1_T0</name><argument_list pos:start="1734:43" pos:end="1734:44">()</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1736:25" pos:end="1739:0">break;</break>

<cpp:endif pos:start="1738:1" pos:end="1738:6">#<cpp:directive pos:start="1738:2" pos:end="1738:6">endif</cpp:directive></cpp:endif>

                    <case pos:start="1740:21" pos:end="1740:29">case <expr pos:start="1740:26" pos:end="1740:28"><literal type="number" pos:start="1740:26" pos:end="1740:28">0xe</literal></expr>:</case>

                        <expr_stmt pos:start="1742:25" pos:end="1742:44"><expr pos:start="1742:25" pos:end="1742:43"><call pos:start="1742:25" pos:end="1742:43"><name pos:start="1742:25" pos:end="1742:41">gen_op_udiv_T1_T0</name><argument_list pos:start="1742:42" pos:end="1742:43">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1744:25" pos:end="1746:44"><if pos:start="1744:25" pos:end="1746:44">if <condition pos:start="1744:28" pos:end="1744:39">(<expr pos:start="1744:29" pos:end="1744:38"><name pos:start="1744:29" pos:end="1744:31">xop</name> <operator pos:start="1744:33" pos:end="1744:33">&amp;</operator> <literal type="number" pos:start="1744:35" pos:end="1744:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1746:29" pos:end="1746:44"><block_content pos:start="1746:29" pos:end="1746:44">

                            <expr_stmt pos:start="1746:29" pos:end="1746:44"><expr pos:start="1746:29" pos:end="1746:43"><call pos:start="1746:29" pos:end="1746:43"><name pos:start="1746:29" pos:end="1746:41">gen_op_div_cc</name><argument_list pos:start="1746:42" pos:end="1746:43">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1748:25" pos:end="1748:30">break;</break>

                    <case pos:start="1750:21" pos:end="1750:29">case <expr pos:start="1750:26" pos:end="1750:28"><literal type="number" pos:start="1750:26" pos:end="1750:28">0xf</literal></expr>:</case>

                        <expr_stmt pos:start="1752:25" pos:end="1752:44"><expr pos:start="1752:25" pos:end="1752:43"><call pos:start="1752:25" pos:end="1752:43"><name pos:start="1752:25" pos:end="1752:41">gen_op_sdiv_T1_T0</name><argument_list pos:start="1752:42" pos:end="1752:43">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1754:25" pos:end="1756:44"><if pos:start="1754:25" pos:end="1756:44">if <condition pos:start="1754:28" pos:end="1754:39">(<expr pos:start="1754:29" pos:end="1754:38"><name pos:start="1754:29" pos:end="1754:31">xop</name> <operator pos:start="1754:33" pos:end="1754:33">&amp;</operator> <literal type="number" pos:start="1754:35" pos:end="1754:38">0x10</literal></expr>)</condition><block type="pseudo" pos:start="1756:29" pos:end="1756:44"><block_content pos:start="1756:29" pos:end="1756:44">

                            <expr_stmt pos:start="1756:29" pos:end="1756:44"><expr pos:start="1756:29" pos:end="1756:43"><call pos:start="1756:29" pos:end="1756:43"><name pos:start="1756:29" pos:end="1756:41">gen_op_div_cc</name><argument_list pos:start="1756:42" pos:end="1756:43">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1758:25" pos:end="1758:30">break;</break>

                    <default pos:start="1760:21" pos:end="1760:28">default:</default>


                    </block_content>}</block></switch>

		    <expr_stmt pos:start="1765:21" pos:end="1765:40"><expr pos:start="1765:21" pos:end="1765:39"><call pos:start="1765:21" pos:end="1765:39"><name pos:start="1765:21" pos:end="1765:35">gen_movl_T0_reg</name><argument_list pos:start="1765:36" pos:end="1765:39">(<argument pos:start="1765:37" pos:end="1765:38"><expr pos:start="1765:37" pos:end="1765:38"><name pos:start="1765:37" pos:end="1765:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1767:19" pos:end="2388:17">else <block pos:start="1767:24" pos:end="2388:17">{<block_content pos:start="1769:21" pos:end="2386:21">

                    <switch pos:start="1769:21" pos:end="2386:21">switch <condition pos:start="1769:28" pos:end="1769:32">(<expr pos:start="1769:29" pos:end="1769:31"><name pos:start="1769:29" pos:end="1769:31">xop</name></expr>)</condition> <block pos:start="1769:34" pos:end="2386:21">{<block_content pos:start="1771:21" pos:end="2383:28">

		    <case pos:start="1771:21" pos:end="1771:30">case <expr pos:start="1771:26" pos:end="1771:29"><literal type="number" pos:start="1771:26" pos:end="1771:29">0x20</literal></expr>:</case> <comment type="block" pos:start="1771:32" pos:end="1771:43">/* taddcc */</comment>

			<expr_stmt pos:start="1773:25" pos:end="1773:47"><expr pos:start="1773:25" pos:end="1773:46"><call pos:start="1773:25" pos:end="1773:46"><name pos:start="1773:25" pos:end="1773:44">gen_op_tadd_T1_T0_cc</name><argument_list pos:start="1773:45" pos:end="1773:46">()</argument_list></call></expr>;</expr_stmt>

		        <expr_stmt pos:start="1775:25" pos:end="1775:44"><expr pos:start="1775:25" pos:end="1775:43"><call pos:start="1775:25" pos:end="1775:43"><name pos:start="1775:25" pos:end="1775:39">gen_movl_T0_reg</name><argument_list pos:start="1775:40" pos:end="1775:43">(<argument pos:start="1775:41" pos:end="1775:42"><expr pos:start="1775:41" pos:end="1775:42"><name pos:start="1775:41" pos:end="1775:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="1777:25" pos:end="1777:30">break;</break>

		    <case pos:start="1779:21" pos:end="1779:30">case <expr pos:start="1779:26" pos:end="1779:29"><literal type="number" pos:start="1779:26" pos:end="1779:29">0x21</literal></expr>:</case> <comment type="block" pos:start="1779:32" pos:end="1779:43">/* tsubcc */</comment>

			<expr_stmt pos:start="1781:25" pos:end="1781:47"><expr pos:start="1781:25" pos:end="1781:46"><call pos:start="1781:25" pos:end="1781:46"><name pos:start="1781:25" pos:end="1781:44">gen_op_tsub_T1_T0_cc</name><argument_list pos:start="1781:45" pos:end="1781:46">()</argument_list></call></expr>;</expr_stmt>

		        <expr_stmt pos:start="1783:25" pos:end="1783:44"><expr pos:start="1783:25" pos:end="1783:43"><call pos:start="1783:25" pos:end="1783:43"><name pos:start="1783:25" pos:end="1783:39">gen_movl_T0_reg</name><argument_list pos:start="1783:40" pos:end="1783:43">(<argument pos:start="1783:41" pos:end="1783:42"><expr pos:start="1783:41" pos:end="1783:42"><name pos:start="1783:41" pos:end="1783:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="1785:25" pos:end="1785:30">break;</break>

		    <case pos:start="1787:21" pos:end="1787:30">case <expr pos:start="1787:26" pos:end="1787:29"><literal type="number" pos:start="1787:26" pos:end="1787:29">0x22</literal></expr>:</case> <comment type="block" pos:start="1787:32" pos:end="1787:45">/* taddcctv */</comment>

			<expr_stmt pos:start="1789:25" pos:end="1789:49"><expr pos:start="1789:25" pos:end="1789:48"><call pos:start="1789:25" pos:end="1789:48"><name pos:start="1789:25" pos:end="1789:46">gen_op_tadd_T1_T0_ccTV</name><argument_list pos:start="1789:47" pos:end="1789:48">()</argument_list></call></expr>;</expr_stmt>

		        <expr_stmt pos:start="1791:25" pos:end="1791:44"><expr pos:start="1791:25" pos:end="1791:43"><call pos:start="1791:25" pos:end="1791:43"><name pos:start="1791:25" pos:end="1791:39">gen_movl_T0_reg</name><argument_list pos:start="1791:40" pos:end="1791:43">(<argument pos:start="1791:41" pos:end="1791:42"><expr pos:start="1791:41" pos:end="1791:42"><name pos:start="1791:41" pos:end="1791:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="1793:25" pos:end="1793:30">break;</break>

		    <case pos:start="1795:21" pos:end="1795:30">case <expr pos:start="1795:26" pos:end="1795:29"><literal type="number" pos:start="1795:26" pos:end="1795:29">0x23</literal></expr>:</case> <comment type="block" pos:start="1795:32" pos:end="1795:45">/* tsubcctv */</comment>

			<expr_stmt pos:start="1797:25" pos:end="1797:49"><expr pos:start="1797:25" pos:end="1797:48"><call pos:start="1797:25" pos:end="1797:48"><name pos:start="1797:25" pos:end="1797:46">gen_op_tsub_T1_T0_ccTV</name><argument_list pos:start="1797:47" pos:end="1797:48">()</argument_list></call></expr>;</expr_stmt>

		        <expr_stmt pos:start="1799:25" pos:end="1799:44"><expr pos:start="1799:25" pos:end="1799:43"><call pos:start="1799:25" pos:end="1799:43"><name pos:start="1799:25" pos:end="1799:39">gen_movl_T0_reg</name><argument_list pos:start="1799:40" pos:end="1799:43">(<argument pos:start="1799:41" pos:end="1799:42"><expr pos:start="1799:41" pos:end="1799:42"><name pos:start="1799:41" pos:end="1799:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="1801:25" pos:end="1801:30">break;</break>

                    <case pos:start="1803:21" pos:end="1803:30">case <expr pos:start="1803:26" pos:end="1803:29"><literal type="number" pos:start="1803:26" pos:end="1803:29">0x24</literal></expr>:</case> <comment type="block" pos:start="1803:32" pos:end="1803:43">/* mulscc */</comment>

                        <expr_stmt pos:start="1805:25" pos:end="1805:46"><expr pos:start="1805:25" pos:end="1805:45"><call pos:start="1805:25" pos:end="1805:45"><name pos:start="1805:25" pos:end="1805:43">gen_op_mulscc_T1_T0</name><argument_list pos:start="1805:44" pos:end="1805:45">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1807:25" pos:end="1807:44"><expr pos:start="1807:25" pos:end="1807:43"><call pos:start="1807:25" pos:end="1807:43"><name pos:start="1807:25" pos:end="1807:39">gen_movl_T0_reg</name><argument_list pos:start="1807:40" pos:end="1807:43">(<argument pos:start="1807:41" pos:end="1807:42"><expr pos:start="1807:41" pos:end="1807:42"><name pos:start="1807:41" pos:end="1807:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1809:25" pos:end="1812:0">break;</break>

<cpp:ifndef pos:start="1811:1" pos:end="1811:22">#<cpp:directive pos:start="1811:2" pos:end="1811:7">ifndef</cpp:directive> <name pos:start="1811:9" pos:end="1811:22">TARGET_SPARC64</name></cpp:ifndef>

                    <case pos:start="1813:21" pos:end="1813:30">case <expr pos:start="1813:26" pos:end="1813:29"><literal type="number" pos:start="1813:26" pos:end="1813:29">0x25</literal></expr>:</case>	<comment type="block" pos:start="1813:33" pos:end="1813:41">/* sll */</comment>

			<expr_stmt pos:start="1815:25" pos:end="1815:37"><expr pos:start="1815:25" pos:end="1815:36"><call pos:start="1815:25" pos:end="1815:36"><name pos:start="1815:25" pos:end="1815:34">gen_op_sll</name><argument_list pos:start="1815:35" pos:end="1815:36">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1817:25" pos:end="1817:44"><expr pos:start="1817:25" pos:end="1817:43"><call pos:start="1817:25" pos:end="1817:43"><name pos:start="1817:25" pos:end="1817:39">gen_movl_T0_reg</name><argument_list pos:start="1817:40" pos:end="1817:43">(<argument pos:start="1817:41" pos:end="1817:42"><expr pos:start="1817:41" pos:end="1817:42"><name pos:start="1817:41" pos:end="1817:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1819:25" pos:end="1819:30">break;</break>

                    <case pos:start="1821:21" pos:end="1821:30">case <expr pos:start="1821:26" pos:end="1821:29"><literal type="number" pos:start="1821:26" pos:end="1821:29">0x26</literal></expr>:</case>  <comment type="block" pos:start="1821:33" pos:end="1821:41">/* srl */</comment>

			<expr_stmt pos:start="1823:25" pos:end="1823:37"><expr pos:start="1823:25" pos:end="1823:36"><call pos:start="1823:25" pos:end="1823:36"><name pos:start="1823:25" pos:end="1823:34">gen_op_srl</name><argument_list pos:start="1823:35" pos:end="1823:36">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1825:25" pos:end="1825:44"><expr pos:start="1825:25" pos:end="1825:43"><call pos:start="1825:25" pos:end="1825:43"><name pos:start="1825:25" pos:end="1825:39">gen_movl_T0_reg</name><argument_list pos:start="1825:40" pos:end="1825:43">(<argument pos:start="1825:41" pos:end="1825:42"><expr pos:start="1825:41" pos:end="1825:42"><name pos:start="1825:41" pos:end="1825:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1827:25" pos:end="1827:30">break;</break>

                    <case pos:start="1829:21" pos:end="1829:30">case <expr pos:start="1829:26" pos:end="1829:29"><literal type="number" pos:start="1829:26" pos:end="1829:29">0x27</literal></expr>:</case>  <comment type="block" pos:start="1829:33" pos:end="1829:41">/* sra */</comment>

			<expr_stmt pos:start="1831:25" pos:end="1831:37"><expr pos:start="1831:25" pos:end="1831:36"><call pos:start="1831:25" pos:end="1831:36"><name pos:start="1831:25" pos:end="1831:34">gen_op_sra</name><argument_list pos:start="1831:35" pos:end="1831:36">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1833:25" pos:end="1833:44"><expr pos:start="1833:25" pos:end="1833:43"><call pos:start="1833:25" pos:end="1833:43"><name pos:start="1833:25" pos:end="1833:39">gen_movl_T0_reg</name><argument_list pos:start="1833:40" pos:end="1833:43">(<argument pos:start="1833:41" pos:end="1833:42"><expr pos:start="1833:41" pos:end="1833:42"><name pos:start="1833:41" pos:end="1833:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1835:25" pos:end="1838:0">break;</break>

<cpp:endif pos:start="1837:1" pos:end="1837:6">#<cpp:directive pos:start="1837:2" pos:end="1837:6">endif</cpp:directive></cpp:endif>

                    <case pos:start="1839:21" pos:end="1839:30">case <expr pos:start="1839:26" pos:end="1839:29"><literal type="number" pos:start="1839:26" pos:end="1839:29">0x30</literal></expr>:</case>

                        <block pos:start="1841:25" pos:end="1975:25">{<block_content pos:start="1843:29" pos:end="1973:29">

                            <switch pos:start="1843:29" pos:end="1973:29">switch<condition pos:start="1843:35" pos:end="1843:38">(<expr pos:start="1843:36" pos:end="1843:37"><name pos:start="1843:36" pos:end="1843:37">rd</name></expr>)</condition> <block pos:start="1843:40" pos:end="1973:29">{<block_content pos:start="1845:29" pos:end="1970:36">

                            <case pos:start="1845:29" pos:end="1845:35">case <expr pos:start="1845:34" pos:end="1845:34"><literal type="number" pos:start="1845:34" pos:end="1845:34">0</literal></expr>:</case> <comment type="block" pos:start="1845:37" pos:end="1845:45">/* wry */</comment>

				<expr_stmt pos:start="1847:33" pos:end="1847:51"><expr pos:start="1847:33" pos:end="1847:50"><call pos:start="1847:33" pos:end="1847:50"><name pos:start="1847:33" pos:end="1847:48">gen_op_xor_T1_T0</name><argument_list pos:start="1847:49" pos:end="1847:50">()</argument_list></call></expr>;</expr_stmt>

				<expr_stmt pos:start="1849:33" pos:end="1849:80"><expr pos:start="1849:33" pos:end="1849:79"><call pos:start="1849:33" pos:end="1849:79"><name pos:start="1849:33" pos:end="1849:51">gen_op_movtl_env_T0</name><argument_list pos:start="1849:52" pos:end="1849:79">(<argument pos:start="1849:53" pos:end="1849:78"><expr pos:start="1849:53" pos:end="1849:78"><call pos:start="1849:53" pos:end="1849:78"><name pos:start="1849:53" pos:end="1849:60">offsetof</name><argument_list pos:start="1849:61" pos:end="1849:78">(<argument pos:start="1849:62" pos:end="1849:74"><expr pos:start="1849:62" pos:end="1849:74"><name pos:start="1849:62" pos:end="1849:74">CPUSPARCState</name></expr></argument>, <argument pos:start="1849:77" pos:end="1849:77"><expr pos:start="1849:77" pos:end="1849:77"><name pos:start="1849:77" pos:end="1849:77">y</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1851:33" pos:end="1854:0">break;</break>

<cpp:ifndef pos:start="1853:1" pos:end="1853:22">#<cpp:directive pos:start="1853:2" pos:end="1853:7">ifndef</cpp:directive> <name pos:start="1853:9" pos:end="1853:22">TARGET_SPARC64</name></cpp:ifndef>

                            <case pos:start="1855:29" pos:end="1855:47">case <expr pos:start="1855:34" pos:end="1855:46"><literal type="number" pos:start="1855:34" pos:end="1855:37">0x01</literal> <operator pos:start="1855:39" pos:end="1855:41">...</operator> <literal type="number" pos:start="1855:43" pos:end="1855:46">0x0f</literal></expr>:</case> <comment type="block" pos:start="1855:49" pos:end="1861:56">/* undefined in the

                                                   SPARCv8 manual, nop

                                                   on the microSPARC

                                                   II */</comment>

                            <case pos:start="1863:29" pos:end="1863:47">case <expr pos:start="1863:34" pos:end="1863:46"><literal type="number" pos:start="1863:34" pos:end="1863:37">0x10</literal> <operator pos:start="1863:39" pos:end="1863:41">...</operator> <literal type="number" pos:start="1863:43" pos:end="1863:46">0x1f</literal></expr>:</case> <comment type="block" pos:start="1863:49" pos:end="1869:67">/* implementation-dependent

                                                   in the SPARCv8

                                                   manual, nop on the

                                                   microSPARC II */</comment>

                                <break pos:start="1871:33" pos:end="1874:0">break;</break>

<cpp:else pos:start="1873:1" pos:end="1873:5">#<cpp:directive pos:start="1873:2" pos:end="1873:5">else</cpp:directive></cpp:else>

			    <case pos:start="1875:29" pos:end="1875:37">case <expr pos:start="1875:34" pos:end="1875:36"><literal type="number" pos:start="1875:34" pos:end="1875:36">0x2</literal></expr>:</case> <comment type="block" pos:start="1875:39" pos:end="1875:52">/* V9 wrccr */</comment>

                                <expr_stmt pos:start="1877:33" pos:end="1877:47"><expr pos:start="1877:33" pos:end="1877:46"><call pos:start="1877:33" pos:end="1877:46"><name pos:start="1877:33" pos:end="1877:44">gen_op_wrccr</name><argument_list pos:start="1877:45" pos:end="1877:46">()</argument_list></call></expr>;</expr_stmt>

				<break pos:start="1879:33" pos:end="1879:38">break;</break>

			    <case pos:start="1881:29" pos:end="1881:37">case <expr pos:start="1881:34" pos:end="1881:36"><literal type="number" pos:start="1881:34" pos:end="1881:36">0x3</literal></expr>:</case> <comment type="block" pos:start="1881:39" pos:end="1881:52">/* V9 wrasi */</comment>

				<expr_stmt pos:start="1883:33" pos:end="1883:81"><expr pos:start="1883:33" pos:end="1883:80"><call pos:start="1883:33" pos:end="1883:80"><name pos:start="1883:33" pos:end="1883:50">gen_op_movl_env_T0</name><argument_list pos:start="1883:51" pos:end="1883:80">(<argument pos:start="1883:52" pos:end="1883:79"><expr pos:start="1883:52" pos:end="1883:79"><call pos:start="1883:52" pos:end="1883:79"><name pos:start="1883:52" pos:end="1883:59">offsetof</name><argument_list pos:start="1883:60" pos:end="1883:79">(<argument pos:start="1883:61" pos:end="1883:73"><expr pos:start="1883:61" pos:end="1883:73"><name pos:start="1883:61" pos:end="1883:73">CPUSPARCState</name></expr></argument>, <argument pos:start="1883:76" pos:end="1883:78"><expr pos:start="1883:76" pos:end="1883:78"><name pos:start="1883:76" pos:end="1883:78">asi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<break pos:start="1885:33" pos:end="1885:38">break;</break>

			    <case pos:start="1887:29" pos:end="1887:37">case <expr pos:start="1887:34" pos:end="1887:36"><literal type="number" pos:start="1887:34" pos:end="1887:36">0x6</literal></expr>:</case> <comment type="block" pos:start="1887:39" pos:end="1887:53">/* V9 wrfprs */</comment>

				<expr_stmt pos:start="1889:33" pos:end="1889:82"><expr pos:start="1889:33" pos:end="1889:81"><call pos:start="1889:33" pos:end="1889:81"><name pos:start="1889:33" pos:end="1889:50">gen_op_movl_env_T0</name><argument_list pos:start="1889:51" pos:end="1889:81">(<argument pos:start="1889:52" pos:end="1889:80"><expr pos:start="1889:52" pos:end="1889:80"><call pos:start="1889:52" pos:end="1889:80"><name pos:start="1889:52" pos:end="1889:59">offsetof</name><argument_list pos:start="1889:60" pos:end="1889:80">(<argument pos:start="1889:61" pos:end="1889:73"><expr pos:start="1889:61" pos:end="1889:73"><name pos:start="1889:61" pos:end="1889:73">CPUSPARCState</name></expr></argument>, <argument pos:start="1889:76" pos:end="1889:79"><expr pos:start="1889:76" pos:end="1889:79"><name pos:start="1889:76" pos:end="1889:79">fprs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<break pos:start="1891:33" pos:end="1891:38">break;</break>

			    <case pos:start="1893:29" pos:end="1896:0">case <expr pos:start="1893:34" pos:end="1893:36"><literal type="number" pos:start="1893:34" pos:end="1893:36">0xf</literal></expr>:</case> <comment type="block" pos:start="1893:39" pos:end="1893:63">/* V9 sir, nop if user */</comment>

<cpp:if pos:start="1895:1" pos:end="1895:30">#<cpp:directive pos:start="1895:2" pos:end="1895:3">if</cpp:directive> <expr pos:start="1895:5" pos:end="1895:30"><operator pos:start="1895:5" pos:end="1895:5">!</operator><call pos:start="1895:6" pos:end="1895:30"><name pos:start="1895:6" pos:end="1895:12">defined</name><argument_list pos:start="1895:13" pos:end="1895:30">(<argument pos:start="1895:14" pos:end="1895:29"><expr pos:start="1895:14" pos:end="1895:29"><name pos:start="1895:14" pos:end="1895:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

				<if_stmt pos:start="1897:33" pos:end="1902:0"><if pos:start="1897:33" pos:end="1902:0">if <condition pos:start="1897:36" pos:end="1897:51">(<expr pos:start="1897:37" pos:end="1897:50"><call pos:start="1897:37" pos:end="1897:50"><name pos:start="1897:37" pos:end="1897:46">supervisor</name><argument_list pos:start="1897:47" pos:end="1897:50">(<argument pos:start="1897:48" pos:end="1897:49"><expr pos:start="1897:48" pos:end="1897:49"><name pos:start="1897:48" pos:end="1897:49">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1899:37" pos:end="1902:0"><block_content pos:start="1899:37" pos:end="1902:0">

				    <expr_stmt pos:start="1899:37" pos:end="1902:0"><expr pos:start="1899:37" pos:end="1899:48"><call pos:start="1899:37" pos:end="1899:48"><name pos:start="1899:37" pos:end="1899:46">gen_op_sir</name><argument_list pos:start="1899:47" pos:end="1899:48">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="1901:1" pos:end="1901:6">#<cpp:directive pos:start="1901:2" pos:end="1901:6">endif</cpp:directive></cpp:endif>

				<break pos:start="1903:33" pos:end="1903:38">break;</break>

			    <case pos:start="1905:29" pos:end="1905:38">case <expr pos:start="1905:34" pos:end="1905:37"><literal type="number" pos:start="1905:34" pos:end="1905:37">0x13</literal></expr>:</case> <comment type="block" pos:start="1905:40" pos:end="1905:60">/* Graphics Status */</comment>

                                <if_stmt pos:start="1907:33" pos:end="1909:50"><if pos:start="1907:33" pos:end="1909:50">if <condition pos:start="1907:36" pos:end="1907:57">(<expr pos:start="1907:37" pos:end="1907:56"><call pos:start="1907:37" pos:end="1907:56"><name pos:start="1907:37" pos:end="1907:52">gen_trap_ifnofpu</name><argument_list pos:start="1907:53" pos:end="1907:56">(<argument pos:start="1907:54" pos:end="1907:55"><expr pos:start="1907:54" pos:end="1907:55"><name pos:start="1907:54" pos:end="1907:55">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1909:37" pos:end="1909:50"><block_content pos:start="1909:37" pos:end="1909:50">

                                    <goto pos:start="1909:37" pos:end="1909:50">goto <name pos:start="1909:42" pos:end="1909:49">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

				<expr_stmt pos:start="1911:33" pos:end="1911:82"><expr pos:start="1911:33" pos:end="1911:81"><call pos:start="1911:33" pos:end="1911:81"><name pos:start="1911:33" pos:end="1911:51">gen_op_movtl_env_T0</name><argument_list pos:start="1911:52" pos:end="1911:81">(<argument pos:start="1911:53" pos:end="1911:80"><expr pos:start="1911:53" pos:end="1911:80"><call pos:start="1911:53" pos:end="1911:80"><name pos:start="1911:53" pos:end="1911:60">offsetof</name><argument_list pos:start="1911:61" pos:end="1911:80">(<argument pos:start="1911:62" pos:end="1911:74"><expr pos:start="1911:62" pos:end="1911:74"><name pos:start="1911:62" pos:end="1911:74">CPUSPARCState</name></expr></argument>, <argument pos:start="1911:77" pos:end="1911:79"><expr pos:start="1911:77" pos:end="1911:79"><name pos:start="1911:77" pos:end="1911:79">gsr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<break pos:start="1913:33" pos:end="1913:38">break;</break>

			    <case pos:start="1915:29" pos:end="1918:0">case <expr pos:start="1915:34" pos:end="1915:37"><literal type="number" pos:start="1915:34" pos:end="1915:37">0x17</literal></expr>:</case> <comment type="block" pos:start="1915:40" pos:end="1915:57">/* Tick compare */</comment>

<cpp:if pos:start="1917:1" pos:end="1917:30">#<cpp:directive pos:start="1917:2" pos:end="1917:3">if</cpp:directive> <expr pos:start="1917:5" pos:end="1917:30"><operator pos:start="1917:5" pos:end="1917:5">!</operator><call pos:start="1917:6" pos:end="1917:30"><name pos:start="1917:6" pos:end="1917:12">defined</name><argument_list pos:start="1917:13" pos:end="1917:30">(<argument pos:start="1917:14" pos:end="1917:29"><expr pos:start="1917:14" pos:end="1917:29"><name pos:start="1917:14" pos:end="1917:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

				<if_stmt pos:start="1919:33" pos:end="1924:88"><if pos:start="1919:33" pos:end="1924:88">if <condition pos:start="1919:36" pos:end="1923:0">(<expr pos:start="1919:37" pos:end="1919:51"><operator pos:start="1919:37" pos:end="1919:37">!</operator><call pos:start="1919:38" pos:end="1919:51"><name pos:start="1919:38" pos:end="1919:47">supervisor</name><argument_list pos:start="1919:48" pos:end="1919:51">(<argument pos:start="1919:49" pos:end="1919:50"><expr pos:start="1919:49" pos:end="1919:50"><name pos:start="1919:49" pos:end="1919:50">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1924:33" pos:end="1924:88"><block_content pos:start="1924:33" pos:end="1924:88">


<cpp:endif pos:start="1922:1" pos:end="1922:6">#<cpp:directive pos:start="1922:2" pos:end="1922:6">endif</cpp:directive></cpp:endif>

				<expr_stmt pos:start="1924:33" pos:end="1924:88"><expr pos:start="1924:33" pos:end="1924:87"><call pos:start="1924:33" pos:end="1924:87"><name pos:start="1924:33" pos:end="1924:51">gen_op_movtl_env_T0</name><argument_list pos:start="1924:52" pos:end="1924:87">(<argument pos:start="1924:53" pos:end="1924:86"><expr pos:start="1924:53" pos:end="1924:86"><call pos:start="1924:53" pos:end="1924:86"><name pos:start="1924:53" pos:end="1924:60">offsetof</name><argument_list pos:start="1924:61" pos:end="1924:86">(<argument pos:start="1924:62" pos:end="1924:74"><expr pos:start="1924:62" pos:end="1924:74"><name pos:start="1924:62" pos:end="1924:74">CPUSPARCState</name></expr></argument>, <argument pos:start="1924:77" pos:end="1924:85"><expr pos:start="1924:77" pos:end="1924:85"><name pos:start="1924:77" pos:end="1924:85">tick_cmpr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

				<break pos:start="1926:33" pos:end="1926:38">break;</break>

			    <case pos:start="1928:29" pos:end="1931:0">case <expr pos:start="1928:34" pos:end="1928:37"><literal type="number" pos:start="1928:34" pos:end="1928:37">0x18</literal></expr>:</case> <comment type="block" pos:start="1928:40" pos:end="1928:56">/* System tick */</comment>

<cpp:if pos:start="1930:1" pos:end="1930:30">#<cpp:directive pos:start="1930:2" pos:end="1930:3">if</cpp:directive> <expr pos:start="1930:5" pos:end="1930:30"><operator pos:start="1930:5" pos:end="1930:5">!</operator><call pos:start="1930:6" pos:end="1930:30"><name pos:start="1930:6" pos:end="1930:12">defined</name><argument_list pos:start="1930:13" pos:end="1930:30">(<argument pos:start="1930:14" pos:end="1930:29"><expr pos:start="1930:14" pos:end="1930:29"><name pos:start="1930:14" pos:end="1930:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

				<if_stmt pos:start="1932:33" pos:end="1937:89"><if pos:start="1932:33" pos:end="1937:89">if <condition pos:start="1932:36" pos:end="1936:0">(<expr pos:start="1932:37" pos:end="1932:51"><operator pos:start="1932:37" pos:end="1932:37">!</operator><call pos:start="1932:38" pos:end="1932:51"><name pos:start="1932:38" pos:end="1932:47">supervisor</name><argument_list pos:start="1932:48" pos:end="1932:51">(<argument pos:start="1932:49" pos:end="1932:50"><expr pos:start="1932:49" pos:end="1932:50"><name pos:start="1932:49" pos:end="1932:50">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1937:33" pos:end="1937:89"><block_content pos:start="1937:33" pos:end="1937:89">


<cpp:endif pos:start="1935:1" pos:end="1935:6">#<cpp:directive pos:start="1935:2" pos:end="1935:6">endif</cpp:directive></cpp:endif>

				<expr_stmt pos:start="1937:33" pos:end="1937:89"><expr pos:start="1937:33" pos:end="1937:88"><call pos:start="1937:33" pos:end="1937:88"><name pos:start="1937:33" pos:end="1937:51">gen_op_movtl_env_T0</name><argument_list pos:start="1937:52" pos:end="1937:88">(<argument pos:start="1937:53" pos:end="1937:87"><expr pos:start="1937:53" pos:end="1937:87"><call pos:start="1937:53" pos:end="1937:87"><name pos:start="1937:53" pos:end="1937:60">offsetof</name><argument_list pos:start="1937:61" pos:end="1937:87">(<argument pos:start="1937:62" pos:end="1937:74"><expr pos:start="1937:62" pos:end="1937:74"><name pos:start="1937:62" pos:end="1937:74">CPUSPARCState</name></expr></argument>, <argument pos:start="1937:77" pos:end="1937:86"><expr pos:start="1937:77" pos:end="1937:86"><name pos:start="1937:77" pos:end="1937:86">stick_cmpr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

				<break pos:start="1939:33" pos:end="1939:38">break;</break>

			    <case pos:start="1941:29" pos:end="1944:0">case <expr pos:start="1941:34" pos:end="1941:37"><literal type="number" pos:start="1941:34" pos:end="1941:37">0x19</literal></expr>:</case> <comment type="block" pos:start="1941:40" pos:end="1941:64">/* System tick compare */</comment>

<cpp:if pos:start="1943:1" pos:end="1943:30">#<cpp:directive pos:start="1943:2" pos:end="1943:3">if</cpp:directive> <expr pos:start="1943:5" pos:end="1943:30"><operator pos:start="1943:5" pos:end="1943:5">!</operator><call pos:start="1943:6" pos:end="1943:30"><name pos:start="1943:6" pos:end="1943:12">defined</name><argument_list pos:start="1943:13" pos:end="1943:30">(<argument pos:start="1943:14" pos:end="1943:29"><expr pos:start="1943:14" pos:end="1943:29"><name pos:start="1943:14" pos:end="1943:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

				<if_stmt pos:start="1945:33" pos:end="1950:89"><if pos:start="1945:33" pos:end="1950:89">if <condition pos:start="1945:36" pos:end="1949:0">(<expr pos:start="1945:37" pos:end="1945:51"><operator pos:start="1945:37" pos:end="1945:37">!</operator><call pos:start="1945:38" pos:end="1945:51"><name pos:start="1945:38" pos:end="1945:47">supervisor</name><argument_list pos:start="1945:48" pos:end="1945:51">(<argument pos:start="1945:49" pos:end="1945:50"><expr pos:start="1945:49" pos:end="1945:50"><name pos:start="1945:49" pos:end="1945:50">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1950:33" pos:end="1950:89"><block_content pos:start="1950:33" pos:end="1950:89">


<cpp:endif pos:start="1948:1" pos:end="1948:6">#<cpp:directive pos:start="1948:2" pos:end="1948:6">endif</cpp:directive></cpp:endif>

				<expr_stmt pos:start="1950:33" pos:end="1950:89"><expr pos:start="1950:33" pos:end="1950:88"><call pos:start="1950:33" pos:end="1950:88"><name pos:start="1950:33" pos:end="1950:51">gen_op_movtl_env_T0</name><argument_list pos:start="1950:52" pos:end="1950:88">(<argument pos:start="1950:53" pos:end="1950:87"><expr pos:start="1950:53" pos:end="1950:87"><call pos:start="1950:53" pos:end="1950:87"><name pos:start="1950:53" pos:end="1950:60">offsetof</name><argument_list pos:start="1950:61" pos:end="1950:87">(<argument pos:start="1950:62" pos:end="1950:74"><expr pos:start="1950:62" pos:end="1950:74"><name pos:start="1950:62" pos:end="1950:74">CPUSPARCState</name></expr></argument>, <argument pos:start="1950:77" pos:end="1950:86"><expr pos:start="1950:77" pos:end="1950:86"><name pos:start="1950:77" pos:end="1950:86">stick_cmpr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

				<break pos:start="1952:33" pos:end="1952:38">break;</break>



			    <case pos:start="1956:29" pos:end="1956:38">case <expr pos:start="1956:34" pos:end="1956:37"><literal type="number" pos:start="1956:34" pos:end="1956:37">0x10</literal></expr>:</case> <comment type="block" pos:start="1956:40" pos:end="1956:64">/* Performance Control */</comment>

			    <case pos:start="1958:29" pos:end="1958:38">case <expr pos:start="1958:34" pos:end="1958:37"><literal type="number" pos:start="1958:34" pos:end="1958:37">0x11</literal></expr>:</case> <comment type="block" pos:start="1958:40" pos:end="1958:80">/* Performance Instrumentation Counter */</comment>

			    <case pos:start="1960:29" pos:end="1960:38">case <expr pos:start="1960:34" pos:end="1960:37"><literal type="number" pos:start="1960:34" pos:end="1960:37">0x12</literal></expr>:</case> <comment type="block" pos:start="1960:40" pos:end="1960:61">/* Dispatch Control */</comment>

			    <case pos:start="1962:29" pos:end="1962:38">case <expr pos:start="1962:34" pos:end="1962:37"><literal type="number" pos:start="1962:34" pos:end="1962:37">0x14</literal></expr>:</case> <comment type="block" pos:start="1962:40" pos:end="1962:56">/* Softint set */</comment>

			    <case pos:start="1964:29" pos:end="1964:38">case <expr pos:start="1964:34" pos:end="1964:37"><literal type="number" pos:start="1964:34" pos:end="1964:37">0x15</literal></expr>:</case> <comment type="block" pos:start="1964:40" pos:end="1964:58">/* Softint clear */</comment>

			    <case pos:start="1966:29" pos:end="1969:0">case <expr pos:start="1966:34" pos:end="1966:37"><literal type="number" pos:start="1966:34" pos:end="1966:37">0x16</literal></expr>:</case> <comment type="block" pos:start="1966:40" pos:end="1966:58">/* Softint write */</comment>

<cpp:endif pos:start="1968:1" pos:end="1968:6">#<cpp:directive pos:start="1968:2" pos:end="1968:6">endif</cpp:directive></cpp:endif>

                            <default pos:start="1970:29" pos:end="1970:36">default:</default>


                            </block_content>}</block></switch>

                        </block_content>}</block>

                        <break pos:start="1977:25" pos:end="1980:0">break;</break>

<cpp:if pos:start="1979:1" pos:end="1979:30">#<cpp:directive pos:start="1979:2" pos:end="1979:3">if</cpp:directive> <expr pos:start="1979:5" pos:end="1979:30"><operator pos:start="1979:5" pos:end="1979:5">!</operator><call pos:start="1979:6" pos:end="1979:30"><name pos:start="1979:6" pos:end="1979:12">defined</name><argument_list pos:start="1979:13" pos:end="1979:30">(<argument pos:start="1979:14" pos:end="1979:29"><expr pos:start="1979:14" pos:end="1979:29"><name pos:start="1979:14" pos:end="1979:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

                    <case pos:start="1981:21" pos:end="1981:30">case <expr pos:start="1981:26" pos:end="1981:29"><literal type="number" pos:start="1981:26" pos:end="1981:29">0x31</literal></expr>:</case> <comment type="block" pos:start="1981:32" pos:end="1981:62">/* wrpsr, V9 saved, restored */</comment>

                        <block pos:start="1983:25" pos:end="2028:25">{<block_content pos:start="1985:29" pos:end="2027:0">

			    <if_stmt pos:start="1985:29" pos:end="1990:0"><if pos:start="1985:29" pos:end="1990:0">if <condition pos:start="1985:32" pos:end="1985:48">(<expr pos:start="1985:33" pos:end="1985:47"><operator pos:start="1985:33" pos:end="1985:33">!</operator><call pos:start="1985:34" pos:end="1985:47"><name pos:start="1985:34" pos:end="1985:43">supervisor</name><argument_list pos:start="1985:44" pos:end="1985:47">(<argument pos:start="1985:45" pos:end="1985:46"><expr pos:start="1985:45" pos:end="1985:46"><name pos:start="1985:45" pos:end="1985:46">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1987:33" pos:end="1990:0"><block_content pos:start="1987:33" pos:end="1990:0">

				<goto pos:start="1987:33" pos:end="1990:0">goto <name pos:start="1987:38" pos:end="1987:46">priv_insn</name>;</goto></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="1989:1" pos:end="1989:21">#<cpp:directive pos:start="1989:2" pos:end="1989:6">ifdef</cpp:directive> <name pos:start="1989:8" pos:end="1989:21">TARGET_SPARC64</name></cpp:ifdef>

			    <switch pos:start="1991:29" pos:end="2011:0">switch <condition pos:start="1991:36" pos:end="1991:39">(<expr pos:start="1991:37" pos:end="1991:38"><name pos:start="1991:37" pos:end="1991:38">rd</name></expr>)</condition> <block pos:start="1991:41" pos:end="2011:0">{<block_content pos:start="1993:29" pos:end="2005:36">

			    <case pos:start="1993:29" pos:end="1993:35">case <expr pos:start="1993:34" pos:end="1993:34"><literal type="number" pos:start="1993:34" pos:end="1993:34">0</literal></expr>:</case>

				<expr_stmt pos:start="1995:33" pos:end="1995:47"><expr pos:start="1995:33" pos:end="1995:46"><call pos:start="1995:33" pos:end="1995:46"><name pos:start="1995:33" pos:end="1995:44">gen_op_saved</name><argument_list pos:start="1995:45" pos:end="1995:46">()</argument_list></call></expr>;</expr_stmt>

				<break pos:start="1997:33" pos:end="1997:38">break;</break>

			    <case pos:start="1999:29" pos:end="1999:35">case <expr pos:start="1999:34" pos:end="1999:34"><literal type="number" pos:start="1999:34" pos:end="1999:34">1</literal></expr>:</case>

				<expr_stmt pos:start="2001:33" pos:end="2001:50"><expr pos:start="2001:33" pos:end="2001:49"><call pos:start="2001:33" pos:end="2001:49"><name pos:start="2001:33" pos:end="2001:47">gen_op_restored</name><argument_list pos:start="2001:48" pos:end="2001:49">()</argument_list></call></expr>;</expr_stmt>

				<break pos:start="2003:33" pos:end="2003:38">break;</break>

			    <default pos:start="2005:29" pos:end="2005:36">default:</default>


                            </block_content>}</block></switch>

<cpp:else pos:start="2010:1" pos:end="2010:5">#<cpp:directive pos:start="2010:2" pos:end="2010:5">else</cpp:directive></cpp:else>

                            <expr_stmt pos:start="2012:29" pos:end="2012:47"><expr pos:start="2012:29" pos:end="2012:46"><call pos:start="2012:29" pos:end="2012:46"><name pos:start="2012:29" pos:end="2012:44">gen_op_xor_T1_T0</name><argument_list pos:start="2012:45" pos:end="2012:46">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2014:29" pos:end="2014:43"><expr pos:start="2014:29" pos:end="2014:42"><call pos:start="2014:29" pos:end="2014:42"><name pos:start="2014:29" pos:end="2014:40">gen_op_wrpsr</name><argument_list pos:start="2014:41" pos:end="2014:42">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2016:29" pos:end="2016:43"><expr pos:start="2016:29" pos:end="2016:42"><call pos:start="2016:29" pos:end="2016:42"><name pos:start="2016:29" pos:end="2016:38">save_state</name><argument_list pos:start="2016:39" pos:end="2016:42">(<argument pos:start="2016:40" pos:end="2016:41"><expr pos:start="2016:40" pos:end="2016:41"><name pos:start="2016:40" pos:end="2016:41">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2018:29" pos:end="2018:47"><expr pos:start="2018:29" pos:end="2018:46"><call pos:start="2018:29" pos:end="2018:46"><name pos:start="2018:29" pos:end="2018:44">gen_op_next_insn</name><argument_list pos:start="2018:45" pos:end="2018:46">()</argument_list></call></expr>;</expr_stmt>

			    <expr_stmt pos:start="2020:29" pos:end="2020:47"><expr pos:start="2020:29" pos:end="2020:46"><call pos:start="2020:29" pos:end="2020:46"><name pos:start="2020:29" pos:end="2020:44">gen_op_movl_T0_0</name><argument_list pos:start="2020:45" pos:end="2020:46">()</argument_list></call></expr>;</expr_stmt>

			    <expr_stmt pos:start="2022:29" pos:end="2022:45"><expr pos:start="2022:29" pos:end="2022:44"><call pos:start="2022:29" pos:end="2022:44"><name pos:start="2022:29" pos:end="2022:42">gen_op_exit_tb</name><argument_list pos:start="2022:43" pos:end="2022:44">()</argument_list></call></expr>;</expr_stmt>

			    <expr_stmt pos:start="2024:29" pos:end="2027:0"><expr pos:start="2024:29" pos:end="2024:41"><name pos:start="2024:29" pos:end="2024:37"><name pos:start="2024:29" pos:end="2024:30">dc</name><operator pos:start="2024:31" pos:end="2024:32">-&gt;</operator><name pos:start="2024:33" pos:end="2024:37">is_br</name></name> <operator pos:start="2024:39" pos:end="2024:39">=</operator> <literal type="number" pos:start="2024:41" pos:end="2024:41">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="2026:1" pos:end="2026:6">#<cpp:directive pos:start="2026:2" pos:end="2026:6">endif</cpp:directive></cpp:endif>

                        </block_content>}</block>

                        <break pos:start="2030:25" pos:end="2030:30">break;</break>

                    <case pos:start="2032:21" pos:end="2032:30">case <expr pos:start="2032:26" pos:end="2032:29"><literal type="number" pos:start="2032:26" pos:end="2032:29">0x32</literal></expr>:</case> <comment type="block" pos:start="2032:32" pos:end="2032:51">/* wrwim, V9 wrpr */</comment>

                        <block pos:start="2034:25" pos:end="2157:25">{<block_content pos:start="2036:29" pos:end="2156:0">

			    <if_stmt pos:start="2036:29" pos:end="2038:47"><if pos:start="2036:29" pos:end="2038:47">if <condition pos:start="2036:32" pos:end="2036:48">(<expr pos:start="2036:33" pos:end="2036:47"><operator pos:start="2036:33" pos:end="2036:33">!</operator><call pos:start="2036:34" pos:end="2036:47"><name pos:start="2036:34" pos:end="2036:43">supervisor</name><argument_list pos:start="2036:44" pos:end="2036:47">(<argument pos:start="2036:45" pos:end="2036:46"><expr pos:start="2036:45" pos:end="2036:46"><name pos:start="2036:45" pos:end="2036:46">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2038:33" pos:end="2038:47"><block_content pos:start="2038:33" pos:end="2038:47">

				<goto pos:start="2038:33" pos:end="2038:47">goto <name pos:start="2038:38" pos:end="2038:46">priv_insn</name>;</goto></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="2040:29" pos:end="2043:0"><expr pos:start="2040:29" pos:end="2040:46"><call pos:start="2040:29" pos:end="2040:46"><name pos:start="2040:29" pos:end="2040:44">gen_op_xor_T1_T0</name><argument_list pos:start="2040:45" pos:end="2040:46">()</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="2042:1" pos:end="2042:21">#<cpp:directive pos:start="2042:2" pos:end="2042:6">ifdef</cpp:directive> <name pos:start="2042:8" pos:end="2042:21">TARGET_SPARC64</name></cpp:ifdef>

			    <switch pos:start="2044:29" pos:end="2152:0">switch <condition pos:start="2044:36" pos:end="2044:39">(<expr pos:start="2044:37" pos:end="2044:38"><name pos:start="2044:37" pos:end="2044:38">rd</name></expr>)</condition> <block pos:start="2044:41" pos:end="2152:0">{<block_content pos:start="2046:29" pos:end="2146:36">

			    <case pos:start="2046:29" pos:end="2046:35">case <expr pos:start="2046:34" pos:end="2046:34"><literal type="number" pos:start="2046:34" pos:end="2046:34">0</literal></expr>:</case> <comment type="line" pos:start="2046:37" pos:end="2046:42">// tpc</comment>

				<expr_stmt pos:start="2048:33" pos:end="2048:47"><expr pos:start="2048:33" pos:end="2048:46"><call pos:start="2048:33" pos:end="2048:46"><name pos:start="2048:33" pos:end="2048:44">gen_op_wrtpc</name><argument_list pos:start="2048:45" pos:end="2048:46">()</argument_list></call></expr>;</expr_stmt>

				<break pos:start="2050:33" pos:end="2050:38">break;</break>

			    <case pos:start="2052:29" pos:end="2052:35">case <expr pos:start="2052:34" pos:end="2052:34"><literal type="number" pos:start="2052:34" pos:end="2052:34">1</literal></expr>:</case> <comment type="line" pos:start="2052:37" pos:end="2052:43">// tnpc</comment>

				<expr_stmt pos:start="2054:33" pos:end="2054:48"><expr pos:start="2054:33" pos:end="2054:47"><call pos:start="2054:33" pos:end="2054:47"><name pos:start="2054:33" pos:end="2054:45">gen_op_wrtnpc</name><argument_list pos:start="2054:46" pos:end="2054:47">()</argument_list></call></expr>;</expr_stmt>

				<break pos:start="2056:33" pos:end="2056:38">break;</break>

			    <case pos:start="2058:29" pos:end="2058:35">case <expr pos:start="2058:34" pos:end="2058:34"><literal type="number" pos:start="2058:34" pos:end="2058:34">2</literal></expr>:</case> <comment type="line" pos:start="2058:37" pos:end="2058:45">// tstate</comment>

				<expr_stmt pos:start="2060:33" pos:end="2060:50"><expr pos:start="2060:33" pos:end="2060:49"><call pos:start="2060:33" pos:end="2060:49"><name pos:start="2060:33" pos:end="2060:47">gen_op_wrtstate</name><argument_list pos:start="2060:48" pos:end="2060:49">()</argument_list></call></expr>;</expr_stmt>

				<break pos:start="2062:33" pos:end="2062:38">break;</break>

			    <case pos:start="2064:29" pos:end="2064:35">case <expr pos:start="2064:34" pos:end="2064:34"><literal type="number" pos:start="2064:34" pos:end="2064:34">3</literal></expr>:</case> <comment type="line" pos:start="2064:37" pos:end="2064:41">// tt</comment>

				<expr_stmt pos:start="2066:33" pos:end="2066:46"><expr pos:start="2066:33" pos:end="2066:45"><call pos:start="2066:33" pos:end="2066:45"><name pos:start="2066:33" pos:end="2066:43">gen_op_wrtt</name><argument_list pos:start="2066:44" pos:end="2066:45">()</argument_list></call></expr>;</expr_stmt>

				<break pos:start="2068:33" pos:end="2068:38">break;</break>

			    <case pos:start="2070:29" pos:end="2070:35">case <expr pos:start="2070:34" pos:end="2070:34"><literal type="number" pos:start="2070:34" pos:end="2070:34">4</literal></expr>:</case> <comment type="line" pos:start="2070:37" pos:end="2070:43">// tick</comment>

				<expr_stmt pos:start="2072:33" pos:end="2072:48"><expr pos:start="2072:33" pos:end="2072:47"><call pos:start="2072:33" pos:end="2072:47"><name pos:start="2072:33" pos:end="2072:45">gen_op_wrtick</name><argument_list pos:start="2072:46" pos:end="2072:47">()</argument_list></call></expr>;</expr_stmt>

				<break pos:start="2074:33" pos:end="2074:38">break;</break>

			    <case pos:start="2076:29" pos:end="2076:35">case <expr pos:start="2076:34" pos:end="2076:34"><literal type="number" pos:start="2076:34" pos:end="2076:34">5</literal></expr>:</case> <comment type="line" pos:start="2076:37" pos:end="2076:42">// tba</comment>

				<expr_stmt pos:start="2078:33" pos:end="2078:82"><expr pos:start="2078:33" pos:end="2078:81"><call pos:start="2078:33" pos:end="2078:81"><name pos:start="2078:33" pos:end="2078:51">gen_op_movtl_env_T0</name><argument_list pos:start="2078:52" pos:end="2078:81">(<argument pos:start="2078:53" pos:end="2078:80"><expr pos:start="2078:53" pos:end="2078:80"><call pos:start="2078:53" pos:end="2078:80"><name pos:start="2078:53" pos:end="2078:60">offsetof</name><argument_list pos:start="2078:61" pos:end="2078:80">(<argument pos:start="2078:62" pos:end="2078:74"><expr pos:start="2078:62" pos:end="2078:74"><name pos:start="2078:62" pos:end="2078:74">CPUSPARCState</name></expr></argument>, <argument pos:start="2078:77" pos:end="2078:79"><expr pos:start="2078:77" pos:end="2078:79"><name pos:start="2078:77" pos:end="2078:79">tbr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<break pos:start="2080:33" pos:end="2080:38">break;</break>

			    <case pos:start="2082:29" pos:end="2082:35">case <expr pos:start="2082:34" pos:end="2082:34"><literal type="number" pos:start="2082:34" pos:end="2082:34">6</literal></expr>:</case> <comment type="line" pos:start="2082:37" pos:end="2082:45">// pstate</comment>

				<expr_stmt pos:start="2084:33" pos:end="2084:50"><expr pos:start="2084:33" pos:end="2084:49"><call pos:start="2084:33" pos:end="2084:49"><name pos:start="2084:33" pos:end="2084:47">gen_op_wrpstate</name><argument_list pos:start="2084:48" pos:end="2084:49">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2086:33" pos:end="2086:47"><expr pos:start="2086:33" pos:end="2086:46"><call pos:start="2086:33" pos:end="2086:46"><name pos:start="2086:33" pos:end="2086:42">save_state</name><argument_list pos:start="2086:43" pos:end="2086:46">(<argument pos:start="2086:44" pos:end="2086:45"><expr pos:start="2086:44" pos:end="2086:45"><name pos:start="2086:44" pos:end="2086:45">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2088:33" pos:end="2088:51"><expr pos:start="2088:33" pos:end="2088:50"><call pos:start="2088:33" pos:end="2088:50"><name pos:start="2088:33" pos:end="2088:48">gen_op_next_insn</name><argument_list pos:start="2088:49" pos:end="2088:50">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2090:33" pos:end="2090:51"><expr pos:start="2090:33" pos:end="2090:50"><call pos:start="2090:33" pos:end="2090:50"><name pos:start="2090:33" pos:end="2090:48">gen_op_movl_T0_0</name><argument_list pos:start="2090:49" pos:end="2090:50">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2092:33" pos:end="2092:49"><expr pos:start="2092:33" pos:end="2092:48"><call pos:start="2092:33" pos:end="2092:48"><name pos:start="2092:33" pos:end="2092:46">gen_op_exit_tb</name><argument_list pos:start="2092:47" pos:end="2092:48">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2094:33" pos:end="2094:46"><expr pos:start="2094:33" pos:end="2094:45"><name pos:start="2094:33" pos:end="2094:41"><name pos:start="2094:33" pos:end="2094:34">dc</name><operator pos:start="2094:35" pos:end="2094:36">-&gt;</operator><name pos:start="2094:37" pos:end="2094:41">is_br</name></name> <operator pos:start="2094:43" pos:end="2094:43">=</operator> <literal type="number" pos:start="2094:45" pos:end="2094:45">1</literal></expr>;</expr_stmt>

				<break pos:start="2096:33" pos:end="2096:38">break;</break>

			    <case pos:start="2098:29" pos:end="2098:35">case <expr pos:start="2098:34" pos:end="2098:34"><literal type="number" pos:start="2098:34" pos:end="2098:34">7</literal></expr>:</case> <comment type="line" pos:start="2098:37" pos:end="2098:41">// tl</comment>

				<expr_stmt pos:start="2100:33" pos:end="2100:80"><expr pos:start="2100:33" pos:end="2100:79"><call pos:start="2100:33" pos:end="2100:79"><name pos:start="2100:33" pos:end="2100:50">gen_op_movl_env_T0</name><argument_list pos:start="2100:51" pos:end="2100:79">(<argument pos:start="2100:52" pos:end="2100:78"><expr pos:start="2100:52" pos:end="2100:78"><call pos:start="2100:52" pos:end="2100:78"><name pos:start="2100:52" pos:end="2100:59">offsetof</name><argument_list pos:start="2100:60" pos:end="2100:78">(<argument pos:start="2100:61" pos:end="2100:73"><expr pos:start="2100:61" pos:end="2100:73"><name pos:start="2100:61" pos:end="2100:73">CPUSPARCState</name></expr></argument>, <argument pos:start="2100:76" pos:end="2100:77"><expr pos:start="2100:76" pos:end="2100:77"><name pos:start="2100:76" pos:end="2100:77">tl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<break pos:start="2102:33" pos:end="2102:38">break;</break>

			    <case pos:start="2104:29" pos:end="2104:35">case <expr pos:start="2104:34" pos:end="2104:34"><literal type="number" pos:start="2104:34" pos:end="2104:34">8</literal></expr>:</case> <comment type="line" pos:start="2104:37" pos:end="2104:42">// pil</comment>

				<expr_stmt pos:start="2106:33" pos:end="2106:84"><expr pos:start="2106:33" pos:end="2106:83"><call pos:start="2106:33" pos:end="2106:83"><name pos:start="2106:33" pos:end="2106:50">gen_op_movl_env_T0</name><argument_list pos:start="2106:51" pos:end="2106:83">(<argument pos:start="2106:52" pos:end="2106:82"><expr pos:start="2106:52" pos:end="2106:82"><call pos:start="2106:52" pos:end="2106:82"><name pos:start="2106:52" pos:end="2106:59">offsetof</name><argument_list pos:start="2106:60" pos:end="2106:82">(<argument pos:start="2106:61" pos:end="2106:73"><expr pos:start="2106:61" pos:end="2106:73"><name pos:start="2106:61" pos:end="2106:73">CPUSPARCState</name></expr></argument>, <argument pos:start="2106:76" pos:end="2106:81"><expr pos:start="2106:76" pos:end="2106:81"><name pos:start="2106:76" pos:end="2106:81">psrpil</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<break pos:start="2108:33" pos:end="2108:38">break;</break>

			    <case pos:start="2110:29" pos:end="2110:35">case <expr pos:start="2110:34" pos:end="2110:34"><literal type="number" pos:start="2110:34" pos:end="2110:34">9</literal></expr>:</case> <comment type="line" pos:start="2110:37" pos:end="2110:42">// cwp</comment>

				<expr_stmt pos:start="2112:33" pos:end="2112:47"><expr pos:start="2112:33" pos:end="2112:46"><call pos:start="2112:33" pos:end="2112:46"><name pos:start="2112:33" pos:end="2112:44">gen_op_wrcwp</name><argument_list pos:start="2112:45" pos:end="2112:46">()</argument_list></call></expr>;</expr_stmt>

				<break pos:start="2114:33" pos:end="2114:38">break;</break>

			    <case pos:start="2116:29" pos:end="2116:36">case <expr pos:start="2116:34" pos:end="2116:35"><literal type="number" pos:start="2116:34" pos:end="2116:35">10</literal></expr>:</case> <comment type="line" pos:start="2116:38" pos:end="2116:47">// cansave</comment>

				<expr_stmt pos:start="2118:33" pos:end="2118:85"><expr pos:start="2118:33" pos:end="2118:84"><call pos:start="2118:33" pos:end="2118:84"><name pos:start="2118:33" pos:end="2118:50">gen_op_movl_env_T0</name><argument_list pos:start="2118:51" pos:end="2118:84">(<argument pos:start="2118:52" pos:end="2118:83"><expr pos:start="2118:52" pos:end="2118:83"><call pos:start="2118:52" pos:end="2118:83"><name pos:start="2118:52" pos:end="2118:59">offsetof</name><argument_list pos:start="2118:60" pos:end="2118:83">(<argument pos:start="2118:61" pos:end="2118:73"><expr pos:start="2118:61" pos:end="2118:73"><name pos:start="2118:61" pos:end="2118:73">CPUSPARCState</name></expr></argument>, <argument pos:start="2118:76" pos:end="2118:82"><expr pos:start="2118:76" pos:end="2118:82"><name pos:start="2118:76" pos:end="2118:82">cansave</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<break pos:start="2120:33" pos:end="2120:38">break;</break>

			    <case pos:start="2122:29" pos:end="2122:36">case <expr pos:start="2122:34" pos:end="2122:35"><literal type="number" pos:start="2122:34" pos:end="2122:35">11</literal></expr>:</case> <comment type="line" pos:start="2122:38" pos:end="2122:50">// canrestore</comment>

				<expr_stmt pos:start="2124:33" pos:end="2124:88"><expr pos:start="2124:33" pos:end="2124:87"><call pos:start="2124:33" pos:end="2124:87"><name pos:start="2124:33" pos:end="2124:50">gen_op_movl_env_T0</name><argument_list pos:start="2124:51" pos:end="2124:87">(<argument pos:start="2124:52" pos:end="2124:86"><expr pos:start="2124:52" pos:end="2124:86"><call pos:start="2124:52" pos:end="2124:86"><name pos:start="2124:52" pos:end="2124:59">offsetof</name><argument_list pos:start="2124:60" pos:end="2124:86">(<argument pos:start="2124:61" pos:end="2124:73"><expr pos:start="2124:61" pos:end="2124:73"><name pos:start="2124:61" pos:end="2124:73">CPUSPARCState</name></expr></argument>, <argument pos:start="2124:76" pos:end="2124:85"><expr pos:start="2124:76" pos:end="2124:85"><name pos:start="2124:76" pos:end="2124:85">canrestore</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<break pos:start="2126:33" pos:end="2126:38">break;</break>

			    <case pos:start="2128:29" pos:end="2128:36">case <expr pos:start="2128:34" pos:end="2128:35"><literal type="number" pos:start="2128:34" pos:end="2128:35">12</literal></expr>:</case> <comment type="line" pos:start="2128:38" pos:end="2128:48">// cleanwin</comment>

				<expr_stmt pos:start="2130:33" pos:end="2130:86"><expr pos:start="2130:33" pos:end="2130:85"><call pos:start="2130:33" pos:end="2130:85"><name pos:start="2130:33" pos:end="2130:50">gen_op_movl_env_T0</name><argument_list pos:start="2130:51" pos:end="2130:85">(<argument pos:start="2130:52" pos:end="2130:84"><expr pos:start="2130:52" pos:end="2130:84"><call pos:start="2130:52" pos:end="2130:84"><name pos:start="2130:52" pos:end="2130:59">offsetof</name><argument_list pos:start="2130:60" pos:end="2130:84">(<argument pos:start="2130:61" pos:end="2130:73"><expr pos:start="2130:61" pos:end="2130:73"><name pos:start="2130:61" pos:end="2130:73">CPUSPARCState</name></expr></argument>, <argument pos:start="2130:76" pos:end="2130:83"><expr pos:start="2130:76" pos:end="2130:83"><name pos:start="2130:76" pos:end="2130:83">cleanwin</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<break pos:start="2132:33" pos:end="2132:38">break;</break>

			    <case pos:start="2134:29" pos:end="2134:36">case <expr pos:start="2134:34" pos:end="2134:35"><literal type="number" pos:start="2134:34" pos:end="2134:35">13</literal></expr>:</case> <comment type="line" pos:start="2134:38" pos:end="2134:48">// otherwin</comment>

				<expr_stmt pos:start="2136:33" pos:end="2136:86"><expr pos:start="2136:33" pos:end="2136:85"><call pos:start="2136:33" pos:end="2136:85"><name pos:start="2136:33" pos:end="2136:50">gen_op_movl_env_T0</name><argument_list pos:start="2136:51" pos:end="2136:85">(<argument pos:start="2136:52" pos:end="2136:84"><expr pos:start="2136:52" pos:end="2136:84"><call pos:start="2136:52" pos:end="2136:84"><name pos:start="2136:52" pos:end="2136:59">offsetof</name><argument_list pos:start="2136:60" pos:end="2136:84">(<argument pos:start="2136:61" pos:end="2136:73"><expr pos:start="2136:61" pos:end="2136:73"><name pos:start="2136:61" pos:end="2136:73">CPUSPARCState</name></expr></argument>, <argument pos:start="2136:76" pos:end="2136:83"><expr pos:start="2136:76" pos:end="2136:83"><name pos:start="2136:76" pos:end="2136:83">otherwin</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<break pos:start="2138:33" pos:end="2138:38">break;</break>

			    <case pos:start="2140:29" pos:end="2140:36">case <expr pos:start="2140:34" pos:end="2140:35"><literal type="number" pos:start="2140:34" pos:end="2140:35">14</literal></expr>:</case> <comment type="line" pos:start="2140:38" pos:end="2140:46">// wstate</comment>

				<expr_stmt pos:start="2142:33" pos:end="2142:84"><expr pos:start="2142:33" pos:end="2142:83"><call pos:start="2142:33" pos:end="2142:83"><name pos:start="2142:33" pos:end="2142:50">gen_op_movl_env_T0</name><argument_list pos:start="2142:51" pos:end="2142:83">(<argument pos:start="2142:52" pos:end="2142:82"><expr pos:start="2142:52" pos:end="2142:82"><call pos:start="2142:52" pos:end="2142:82"><name pos:start="2142:52" pos:end="2142:59">offsetof</name><argument_list pos:start="2142:60" pos:end="2142:82">(<argument pos:start="2142:61" pos:end="2142:73"><expr pos:start="2142:61" pos:end="2142:73"><name pos:start="2142:61" pos:end="2142:73">CPUSPARCState</name></expr></argument>, <argument pos:start="2142:76" pos:end="2142:81"><expr pos:start="2142:76" pos:end="2142:81"><name pos:start="2142:76" pos:end="2142:81">wstate</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<break pos:start="2144:33" pos:end="2144:38">break;</break>

			    <default pos:start="2146:29" pos:end="2146:36">default:</default>


			    </block_content>}</block></switch>

<cpp:else pos:start="2151:1" pos:end="2151:5">#<cpp:directive pos:start="2151:2" pos:end="2151:5">else</cpp:directive></cpp:else>

			    <expr_stmt pos:start="2153:29" pos:end="2156:0"><expr pos:start="2153:29" pos:end="2153:42"><call pos:start="2153:29" pos:end="2153:42"><name pos:start="2153:29" pos:end="2153:40">gen_op_wrwim</name><argument_list pos:start="2153:41" pos:end="2153:42">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="2155:1" pos:end="2155:6">#<cpp:directive pos:start="2155:2" pos:end="2155:6">endif</cpp:directive></cpp:endif>

                        </block_content>}</block>

                        <break pos:start="2159:25" pos:end="2162:0">break;</break>

<cpp:ifndef pos:start="2161:1" pos:end="2161:22">#<cpp:directive pos:start="2161:2" pos:end="2161:7">ifndef</cpp:directive> <name pos:start="2161:9" pos:end="2161:22">TARGET_SPARC64</name></cpp:ifndef>

                    <case pos:start="2163:21" pos:end="2163:30">case <expr pos:start="2163:26" pos:end="2163:29"><literal type="number" pos:start="2163:26" pos:end="2163:29">0x33</literal></expr>:</case> <comment type="block" pos:start="2163:32" pos:end="2163:52">/* wrtbr, V9 unimp */</comment>

                        <block pos:start="2165:25" pos:end="2175:25">{<block_content pos:start="2167:29" pos:end="2173:78">

			    <if_stmt pos:start="2167:29" pos:end="2169:47"><if pos:start="2167:29" pos:end="2169:47">if <condition pos:start="2167:32" pos:end="2167:48">(<expr pos:start="2167:33" pos:end="2167:47"><operator pos:start="2167:33" pos:end="2167:33">!</operator><call pos:start="2167:34" pos:end="2167:47"><name pos:start="2167:34" pos:end="2167:43">supervisor</name><argument_list pos:start="2167:44" pos:end="2167:47">(<argument pos:start="2167:45" pos:end="2167:46"><expr pos:start="2167:45" pos:end="2167:46"><name pos:start="2167:45" pos:end="2167:46">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2169:33" pos:end="2169:47"><block_content pos:start="2169:33" pos:end="2169:47">

				<goto pos:start="2169:33" pos:end="2169:47">goto <name pos:start="2169:38" pos:end="2169:46">priv_insn</name>;</goto></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="2171:29" pos:end="2171:47"><expr pos:start="2171:29" pos:end="2171:46"><call pos:start="2171:29" pos:end="2171:46"><name pos:start="2171:29" pos:end="2171:44">gen_op_xor_T1_T0</name><argument_list pos:start="2171:45" pos:end="2171:46">()</argument_list></call></expr>;</expr_stmt>

			    <expr_stmt pos:start="2173:29" pos:end="2173:78"><expr pos:start="2173:29" pos:end="2173:77"><call pos:start="2173:29" pos:end="2173:77"><name pos:start="2173:29" pos:end="2173:47">gen_op_movtl_env_T0</name><argument_list pos:start="2173:48" pos:end="2173:77">(<argument pos:start="2173:49" pos:end="2173:76"><expr pos:start="2173:49" pos:end="2173:76"><call pos:start="2173:49" pos:end="2173:76"><name pos:start="2173:49" pos:end="2173:56">offsetof</name><argument_list pos:start="2173:57" pos:end="2173:76">(<argument pos:start="2173:58" pos:end="2173:70"><expr pos:start="2173:58" pos:end="2173:70"><name pos:start="2173:58" pos:end="2173:70">CPUSPARCState</name></expr></argument>, <argument pos:start="2173:73" pos:end="2173:75"><expr pos:start="2173:73" pos:end="2173:75"><name pos:start="2173:73" pos:end="2173:75">tbr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block>

                        <break pos:start="2177:25" pos:end="2184:0">break;</break>

<cpp:endif pos:start="2179:1" pos:end="2179:6">#<cpp:directive pos:start="2179:2" pos:end="2179:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="2181:1" pos:end="2181:6">#<cpp:directive pos:start="2181:2" pos:end="2181:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2183:1" pos:end="2183:21">#<cpp:directive pos:start="2183:2" pos:end="2183:6">ifdef</cpp:directive> <name pos:start="2183:8" pos:end="2183:21">TARGET_SPARC64</name></cpp:ifdef>

		    <case pos:start="2185:21" pos:end="2185:30">case <expr pos:start="2185:26" pos:end="2185:29"><literal type="number" pos:start="2185:26" pos:end="2185:29">0x2c</literal></expr>:</case> <comment type="block" pos:start="2185:32" pos:end="2185:45">/* V9 movcc */</comment>

			<block pos:start="2187:25" pos:end="2238:25">{<block_content pos:start="2189:29" pos:end="2236:34">

			    <decl_stmt pos:start="2189:29" pos:end="2189:64"><decl pos:start="2189:29" pos:end="2189:63"><type pos:start="2189:29" pos:end="2189:31"><name pos:start="2189:29" pos:end="2189:31">int</name></type> <name pos:start="2189:33" pos:end="2189:34">cc</name> <init pos:start="2189:36" pos:end="2189:63">= <expr pos:start="2189:38" pos:end="2189:63"><call pos:start="2189:38" pos:end="2189:63"><name pos:start="2189:38" pos:end="2189:49">GET_FIELD_SP</name><argument_list pos:start="2189:50" pos:end="2189:63">(<argument pos:start="2189:51" pos:end="2189:54"><expr pos:start="2189:51" pos:end="2189:54"><name pos:start="2189:51" pos:end="2189:54">insn</name></expr></argument>, <argument pos:start="2189:57" pos:end="2189:58"><expr pos:start="2189:57" pos:end="2189:58"><literal type="number" pos:start="2189:57" pos:end="2189:58">11</literal></expr></argument>, <argument pos:start="2189:61" pos:end="2189:62"><expr pos:start="2189:61" pos:end="2189:62"><literal type="number" pos:start="2189:61" pos:end="2189:62">12</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			    <decl_stmt pos:start="2191:29" pos:end="2191:66"><decl pos:start="2191:29" pos:end="2191:65"><type pos:start="2191:29" pos:end="2191:31"><name pos:start="2191:29" pos:end="2191:31">int</name></type> <name pos:start="2191:33" pos:end="2191:36">cond</name> <init pos:start="2191:38" pos:end="2191:65">= <expr pos:start="2191:40" pos:end="2191:65"><call pos:start="2191:40" pos:end="2191:65"><name pos:start="2191:40" pos:end="2191:51">GET_FIELD_SP</name><argument_list pos:start="2191:52" pos:end="2191:65">(<argument pos:start="2191:53" pos:end="2191:56"><expr pos:start="2191:53" pos:end="2191:56"><name pos:start="2191:53" pos:end="2191:56">insn</name></expr></argument>, <argument pos:start="2191:59" pos:end="2191:60"><expr pos:start="2191:59" pos:end="2191:60"><literal type="number" pos:start="2191:59" pos:end="2191:60">14</literal></expr></argument>, <argument pos:start="2191:63" pos:end="2191:64"><expr pos:start="2191:63" pos:end="2191:64"><literal type="number" pos:start="2191:63" pos:end="2191:64">17</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			    <if_stmt pos:start="2193:29" pos:end="2207:29"><if pos:start="2193:29" pos:end="2199:29">if <condition pos:start="2193:32" pos:end="2193:39">(<expr pos:start="2193:33" pos:end="2193:38"><name pos:start="2193:33" pos:end="2193:38">IS_IMM</name></expr>)</condition> <block pos:start="2193:41" pos:end="2199:29">{<block_content pos:start="2195:33" pos:end="2197:54">	<comment type="block" pos:start="2193:49" pos:end="2193:63">/* immediate */</comment>

				<expr_stmt pos:start="2195:33" pos:end="2195:65"><expr pos:start="2195:33" pos:end="2195:64"><name pos:start="2195:33" pos:end="2195:35">rs2</name> <operator pos:start="2195:37" pos:end="2195:37">=</operator> <call pos:start="2195:39" pos:end="2195:64"><name pos:start="2195:39" pos:end="2195:51">GET_FIELD_SPs</name><argument_list pos:start="2195:52" pos:end="2195:64">(<argument pos:start="2195:53" pos:end="2195:56"><expr pos:start="2195:53" pos:end="2195:56"><name pos:start="2195:53" pos:end="2195:56">insn</name></expr></argument>, <argument pos:start="2195:59" pos:end="2195:59"><expr pos:start="2195:59" pos:end="2195:59"><literal type="number" pos:start="2195:59" pos:end="2195:59">0</literal></expr></argument>, <argument pos:start="2195:62" pos:end="2195:63"><expr pos:start="2195:62" pos:end="2195:63"><literal type="number" pos:start="2195:62" pos:end="2195:63">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<expr_stmt pos:start="2197:33" pos:end="2197:54"><expr pos:start="2197:33" pos:end="2197:53"><call pos:start="2197:33" pos:end="2197:53"><name pos:start="2197:33" pos:end="2197:48">gen_movl_simm_T1</name><argument_list pos:start="2197:49" pos:end="2197:53">(<argument pos:start="2197:50" pos:end="2197:52"><expr pos:start="2197:50" pos:end="2197:52"><name pos:start="2197:50" pos:end="2197:52">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			    </block_content>}</block></if>

			    <else pos:start="2201:29" pos:end="2207:29">else <block pos:start="2201:34" pos:end="2207:29">{<block_content pos:start="2203:33" pos:end="2205:53">

				<expr_stmt pos:start="2203:33" pos:end="2203:63"><expr pos:start="2203:33" pos:end="2203:62"><name pos:start="2203:33" pos:end="2203:35">rs2</name> <operator pos:start="2203:37" pos:end="2203:37">=</operator> <call pos:start="2203:39" pos:end="2203:62"><name pos:start="2203:39" pos:end="2203:50">GET_FIELD_SP</name><argument_list pos:start="2203:51" pos:end="2203:62">(<argument pos:start="2203:52" pos:end="2203:55"><expr pos:start="2203:52" pos:end="2203:55"><name pos:start="2203:52" pos:end="2203:55">insn</name></expr></argument>, <argument pos:start="2203:58" pos:end="2203:58"><expr pos:start="2203:58" pos:end="2203:58"><literal type="number" pos:start="2203:58" pos:end="2203:58">0</literal></expr></argument>, <argument pos:start="2203:61" pos:end="2203:61"><expr pos:start="2203:61" pos:end="2203:61"><literal type="number" pos:start="2203:61" pos:end="2203:61">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<expr_stmt pos:start="2205:33" pos:end="2205:53"><expr pos:start="2205:33" pos:end="2205:52"><call pos:start="2205:33" pos:end="2205:52"><name pos:start="2205:33" pos:end="2205:47">gen_movl_reg_T1</name><argument_list pos:start="2205:48" pos:end="2205:52">(<argument pos:start="2205:49" pos:end="2205:51"><expr pos:start="2205:49" pos:end="2205:51"><name pos:start="2205:49" pos:end="2205:51">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			    </block_content>}</block></else></if_stmt>

			    <expr_stmt pos:start="2209:29" pos:end="2209:48"><expr pos:start="2209:29" pos:end="2209:47"><call pos:start="2209:29" pos:end="2209:47"><name pos:start="2209:29" pos:end="2209:43">gen_movl_reg_T0</name><argument_list pos:start="2209:44" pos:end="2209:47">(<argument pos:start="2209:45" pos:end="2209:46"><expr pos:start="2209:45" pos:end="2209:46"><name pos:start="2209:45" pos:end="2209:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			    <expr_stmt pos:start="2211:29" pos:end="2211:41"><expr pos:start="2211:29" pos:end="2211:40"><call pos:start="2211:29" pos:end="2211:40"><name pos:start="2211:29" pos:end="2211:36">flush_T2</name><argument_list pos:start="2211:37" pos:end="2211:40">(<argument pos:start="2211:38" pos:end="2211:39"><expr pos:start="2211:38" pos:end="2211:39"><name pos:start="2211:38" pos:end="2211:39">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			    <if_stmt pos:start="2213:29" pos:end="2230:29"><if pos:start="2213:29" pos:end="2226:29">if <condition pos:start="2213:32" pos:end="2213:49">(<expr pos:start="2213:33" pos:end="2213:48"><name pos:start="2213:33" pos:end="2213:36">insn</name> <operator pos:start="2213:38" pos:end="2213:38">&amp;</operator> <operator pos:start="2213:40" pos:end="2213:40">(</operator><literal type="number" pos:start="2213:41" pos:end="2213:41">1</literal> <operator pos:start="2213:43" pos:end="2213:44">&lt;&lt;</operator> <literal type="number" pos:start="2213:46" pos:end="2213:47">18</literal><operator pos:start="2213:48" pos:end="2213:48">)</operator></expr>)</condition> <block pos:start="2213:51" pos:end="2226:29">{<block_content pos:start="2215:33" pos:end="2223:36">

				<if_stmt pos:start="2215:33" pos:end="2223:36"><if pos:start="2215:33" pos:end="2217:56">if <condition pos:start="2215:36" pos:end="2215:44">(<expr pos:start="2215:37" pos:end="2215:43"><name pos:start="2215:37" pos:end="2215:38">cc</name> <operator pos:start="2215:40" pos:end="2215:41">==</operator> <literal type="number" pos:start="2215:43" pos:end="2215:43">0</literal></expr>)</condition><block type="pseudo" pos:start="2217:37" pos:end="2217:56"><block_content pos:start="2217:37" pos:end="2217:56">

				    <expr_stmt pos:start="2217:37" pos:end="2217:56"><expr pos:start="2217:37" pos:end="2217:55"><name pos:start="2217:37" pos:end="2217:53"><name pos:start="2217:37" pos:end="2217:44">gen_cond</name><index pos:start="2217:45" pos:end="2217:47">[<expr pos:start="2217:46" pos:end="2217:46"><literal type="number" pos:start="2217:46" pos:end="2217:46">0</literal></expr>]</index><index pos:start="2217:48" pos:end="2217:53">[<expr pos:start="2217:49" pos:end="2217:52"><name pos:start="2217:49" pos:end="2217:52">cond</name></expr>]</index></name><operator pos:start="2217:54" pos:end="2217:54">(</operator><operator pos:start="2217:55" pos:end="2217:55">)</operator></expr>;</expr_stmt></block_content></block></if>

				<if type="elseif" pos:start="2219:33" pos:end="2221:56">else if <condition pos:start="2219:41" pos:end="2219:49">(<expr pos:start="2219:42" pos:end="2219:48"><name pos:start="2219:42" pos:end="2219:43">cc</name> <operator pos:start="2219:45" pos:end="2219:46">==</operator> <literal type="number" pos:start="2219:48" pos:end="2219:48">2</literal></expr>)</condition><block type="pseudo" pos:start="2221:37" pos:end="2221:56"><block_content pos:start="2221:37" pos:end="2221:56">

				    <expr_stmt pos:start="2221:37" pos:end="2221:56"><expr pos:start="2221:37" pos:end="2221:55"><name pos:start="2221:37" pos:end="2221:53"><name pos:start="2221:37" pos:end="2221:44">gen_cond</name><index pos:start="2221:45" pos:end="2221:47">[<expr pos:start="2221:46" pos:end="2221:46"><literal type="number" pos:start="2221:46" pos:end="2221:46">1</literal></expr>]</index><index pos:start="2221:48" pos:end="2221:53">[<expr pos:start="2221:49" pos:end="2221:52"><name pos:start="2221:49" pos:end="2221:52">cond</name></expr>]</index></name><operator pos:start="2221:54" pos:end="2221:54">(</operator><operator pos:start="2221:55" pos:end="2221:55">)</operator></expr>;</expr_stmt></block_content></block></if>

				<else pos:start="2223:33" pos:end="2223:36">else<block type="pseudo"><block_content/></block></else></if_stmt>


			    </block_content>}</block></if> <else pos:start="2226:31" pos:end="2230:29">else <block pos:start="2226:36" pos:end="2230:29">{<block_content pos:start="2228:33" pos:end="2228:54">

				<expr_stmt pos:start="2228:33" pos:end="2228:54"><expr pos:start="2228:33" pos:end="2228:53"><name pos:start="2228:33" pos:end="2228:51"><name pos:start="2228:33" pos:end="2228:41">gen_fcond</name><index pos:start="2228:42" pos:end="2228:45">[<expr pos:start="2228:43" pos:end="2228:44"><name pos:start="2228:43" pos:end="2228:44">cc</name></expr>]</index><index pos:start="2228:46" pos:end="2228:51">[<expr pos:start="2228:47" pos:end="2228:50"><name pos:start="2228:47" pos:end="2228:50">cond</name></expr>]</index></name><operator pos:start="2228:52" pos:end="2228:52">(</operator><operator pos:start="2228:53" pos:end="2228:53">)</operator></expr>;</expr_stmt>

			    </block_content>}</block></else></if_stmt>

			    <expr_stmt pos:start="2232:29" pos:end="2232:44"><expr pos:start="2232:29" pos:end="2232:43"><call pos:start="2232:29" pos:end="2232:43"><name pos:start="2232:29" pos:end="2232:41">gen_op_mov_cc</name><argument_list pos:start="2232:42" pos:end="2232:43">()</argument_list></call></expr>;</expr_stmt>

			    <expr_stmt pos:start="2234:29" pos:end="2234:48"><expr pos:start="2234:29" pos:end="2234:47"><call pos:start="2234:29" pos:end="2234:47"><name pos:start="2234:29" pos:end="2234:43">gen_movl_T0_reg</name><argument_list pos:start="2234:44" pos:end="2234:47">(<argument pos:start="2234:45" pos:end="2234:46"><expr pos:start="2234:45" pos:end="2234:46"><name pos:start="2234:45" pos:end="2234:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			    <break pos:start="2236:29" pos:end="2236:34">break;</break>

			</block_content>}</block>

		    <case pos:start="2240:21" pos:end="2240:30">case <expr pos:start="2240:26" pos:end="2240:29"><literal type="number" pos:start="2240:26" pos:end="2240:29">0x2d</literal></expr>:</case> <comment type="block" pos:start="2240:32" pos:end="2240:45">/* V9 sdivx */</comment>

                        <expr_stmt pos:start="2242:25" pos:end="2242:45"><expr pos:start="2242:25" pos:end="2242:44"><call pos:start="2242:25" pos:end="2242:44"><name pos:start="2242:25" pos:end="2242:42">gen_op_sdivx_T1_T0</name><argument_list pos:start="2242:43" pos:end="2242:44">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="2244:25" pos:end="2244:44"><expr pos:start="2244:25" pos:end="2244:43"><call pos:start="2244:25" pos:end="2244:43"><name pos:start="2244:25" pos:end="2244:39">gen_movl_T0_reg</name><argument_list pos:start="2244:40" pos:end="2244:43">(<argument pos:start="2244:41" pos:end="2244:42"><expr pos:start="2244:41" pos:end="2244:42"><name pos:start="2244:41" pos:end="2244:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="2246:25" pos:end="2246:30">break;</break>

		    <case pos:start="2248:21" pos:end="2248:30">case <expr pos:start="2248:26" pos:end="2248:29"><literal type="number" pos:start="2248:26" pos:end="2248:29">0x2e</literal></expr>:</case> <comment type="block" pos:start="2248:32" pos:end="2248:44">/* V9 popc */</comment>

			<block pos:start="2250:25" pos:end="2274:25">{<block_content pos:start="2252:29" pos:end="2272:48">

			    <if_stmt pos:start="2252:29" pos:end="2268:29"><if pos:start="2252:29" pos:end="2260:29">if <condition pos:start="2252:32" pos:end="2252:39">(<expr pos:start="2252:33" pos:end="2252:38"><name pos:start="2252:33" pos:end="2252:38">IS_IMM</name></expr>)</condition> <block pos:start="2252:41" pos:end="2260:29">{<block_content pos:start="2254:33" pos:end="2256:54">	<comment type="block" pos:start="2252:49" pos:end="2252:63">/* immediate */</comment>

				<expr_stmt pos:start="2254:33" pos:end="2254:65"><expr pos:start="2254:33" pos:end="2254:64"><name pos:start="2254:33" pos:end="2254:35">rs2</name> <operator pos:start="2254:37" pos:end="2254:37">=</operator> <call pos:start="2254:39" pos:end="2254:64"><name pos:start="2254:39" pos:end="2254:51">GET_FIELD_SPs</name><argument_list pos:start="2254:52" pos:end="2254:64">(<argument pos:start="2254:53" pos:end="2254:56"><expr pos:start="2254:53" pos:end="2254:56"><name pos:start="2254:53" pos:end="2254:56">insn</name></expr></argument>, <argument pos:start="2254:59" pos:end="2254:59"><expr pos:start="2254:59" pos:end="2254:59"><literal type="number" pos:start="2254:59" pos:end="2254:59">0</literal></expr></argument>, <argument pos:start="2254:62" pos:end="2254:63"><expr pos:start="2254:62" pos:end="2254:63"><literal type="number" pos:start="2254:62" pos:end="2254:63">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<expr_stmt pos:start="2256:33" pos:end="2256:54"><expr pos:start="2256:33" pos:end="2256:53"><call pos:start="2256:33" pos:end="2256:53"><name pos:start="2256:33" pos:end="2256:48">gen_movl_simm_T1</name><argument_list pos:start="2256:49" pos:end="2256:53">(<argument pos:start="2256:50" pos:end="2256:52"><expr pos:start="2256:50" pos:end="2256:52"><name pos:start="2256:50" pos:end="2256:52">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<comment type="line" pos:start="2258:33" pos:end="2258:63">// XXX optimize: popc(constant)</comment>

			    </block_content>}</block></if>

			    <else pos:start="2262:29" pos:end="2268:29">else <block pos:start="2262:34" pos:end="2268:29">{<block_content pos:start="2264:33" pos:end="2266:53">

				<expr_stmt pos:start="2264:33" pos:end="2264:63"><expr pos:start="2264:33" pos:end="2264:62"><name pos:start="2264:33" pos:end="2264:35">rs2</name> <operator pos:start="2264:37" pos:end="2264:37">=</operator> <call pos:start="2264:39" pos:end="2264:62"><name pos:start="2264:39" pos:end="2264:50">GET_FIELD_SP</name><argument_list pos:start="2264:51" pos:end="2264:62">(<argument pos:start="2264:52" pos:end="2264:55"><expr pos:start="2264:52" pos:end="2264:55"><name pos:start="2264:52" pos:end="2264:55">insn</name></expr></argument>, <argument pos:start="2264:58" pos:end="2264:58"><expr pos:start="2264:58" pos:end="2264:58"><literal type="number" pos:start="2264:58" pos:end="2264:58">0</literal></expr></argument>, <argument pos:start="2264:61" pos:end="2264:61"><expr pos:start="2264:61" pos:end="2264:61"><literal type="number" pos:start="2264:61" pos:end="2264:61">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<expr_stmt pos:start="2266:33" pos:end="2266:53"><expr pos:start="2266:33" pos:end="2266:52"><call pos:start="2266:33" pos:end="2266:52"><name pos:start="2266:33" pos:end="2266:47">gen_movl_reg_T1</name><argument_list pos:start="2266:48" pos:end="2266:52">(<argument pos:start="2266:49" pos:end="2266:51"><expr pos:start="2266:49" pos:end="2266:51"><name pos:start="2266:49" pos:end="2266:51">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			    </block_content>}</block></else></if_stmt>

			    <expr_stmt pos:start="2270:29" pos:end="2270:42"><expr pos:start="2270:29" pos:end="2270:41"><call pos:start="2270:29" pos:end="2270:41"><name pos:start="2270:29" pos:end="2270:39">gen_op_popc</name><argument_list pos:start="2270:40" pos:end="2270:41">()</argument_list></call></expr>;</expr_stmt>

			    <expr_stmt pos:start="2272:29" pos:end="2272:48"><expr pos:start="2272:29" pos:end="2272:47"><call pos:start="2272:29" pos:end="2272:47"><name pos:start="2272:29" pos:end="2272:43">gen_movl_T0_reg</name><argument_list pos:start="2272:44" pos:end="2272:47">(<argument pos:start="2272:45" pos:end="2272:46"><expr pos:start="2272:45" pos:end="2272:46"><name pos:start="2272:45" pos:end="2272:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			</block_content>}</block>

		    <case pos:start="2276:21" pos:end="2276:30">case <expr pos:start="2276:26" pos:end="2276:29"><literal type="number" pos:start="2276:26" pos:end="2276:29">0x2f</literal></expr>:</case> <comment type="block" pos:start="2276:32" pos:end="2276:44">/* V9 movr */</comment>

			<block pos:start="2278:25" pos:end="2314:25">{<block_content pos:start="2280:29" pos:end="2312:34">

			    <decl_stmt pos:start="2280:29" pos:end="2280:66"><decl pos:start="2280:29" pos:end="2280:65"><type pos:start="2280:29" pos:end="2280:31"><name pos:start="2280:29" pos:end="2280:31">int</name></type> <name pos:start="2280:33" pos:end="2280:36">cond</name> <init pos:start="2280:38" pos:end="2280:65">= <expr pos:start="2280:40" pos:end="2280:65"><call pos:start="2280:40" pos:end="2280:65"><name pos:start="2280:40" pos:end="2280:51">GET_FIELD_SP</name><argument_list pos:start="2280:52" pos:end="2280:65">(<argument pos:start="2280:53" pos:end="2280:56"><expr pos:start="2280:53" pos:end="2280:56"><name pos:start="2280:53" pos:end="2280:56">insn</name></expr></argument>, <argument pos:start="2280:59" pos:end="2280:60"><expr pos:start="2280:59" pos:end="2280:60"><literal type="number" pos:start="2280:59" pos:end="2280:60">10</literal></expr></argument>, <argument pos:start="2280:63" pos:end="2280:64"><expr pos:start="2280:63" pos:end="2280:64"><literal type="number" pos:start="2280:63" pos:end="2280:64">12</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			    <expr_stmt pos:start="2282:29" pos:end="2282:58"><expr pos:start="2282:29" pos:end="2282:57"><name pos:start="2282:29" pos:end="2282:31">rs1</name> <operator pos:start="2282:33" pos:end="2282:33">=</operator> <call pos:start="2282:35" pos:end="2282:57"><name pos:start="2282:35" pos:end="2282:43">GET_FIELD</name><argument_list pos:start="2282:44" pos:end="2282:57">(<argument pos:start="2282:45" pos:end="2282:48"><expr pos:start="2282:45" pos:end="2282:48"><name pos:start="2282:45" pos:end="2282:48">insn</name></expr></argument>, <argument pos:start="2282:51" pos:end="2282:52"><expr pos:start="2282:51" pos:end="2282:52"><literal type="number" pos:start="2282:51" pos:end="2282:52">13</literal></expr></argument>, <argument pos:start="2282:55" pos:end="2282:56"><expr pos:start="2282:55" pos:end="2282:56"><literal type="number" pos:start="2282:55" pos:end="2282:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			    <expr_stmt pos:start="2284:29" pos:end="2284:41"><expr pos:start="2284:29" pos:end="2284:40"><call pos:start="2284:29" pos:end="2284:40"><name pos:start="2284:29" pos:end="2284:36">flush_T2</name><argument_list pos:start="2284:37" pos:end="2284:40">(<argument pos:start="2284:38" pos:end="2284:39"><expr pos:start="2284:38" pos:end="2284:39"><name pos:start="2284:38" pos:end="2284:39">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			    <expr_stmt pos:start="2286:29" pos:end="2286:49"><expr pos:start="2286:29" pos:end="2286:48"><call pos:start="2286:29" pos:end="2286:48"><name pos:start="2286:29" pos:end="2286:43">gen_movl_reg_T0</name><argument_list pos:start="2286:44" pos:end="2286:48">(<argument pos:start="2286:45" pos:end="2286:47"><expr pos:start="2286:45" pos:end="2286:47"><name pos:start="2286:45" pos:end="2286:47">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			    <expr_stmt pos:start="2288:29" pos:end="2288:47"><expr pos:start="2288:29" pos:end="2288:46"><call pos:start="2288:29" pos:end="2288:46"><name pos:start="2288:29" pos:end="2288:40">gen_cond_reg</name><argument_list pos:start="2288:41" pos:end="2288:46">(<argument pos:start="2288:42" pos:end="2288:45"><expr pos:start="2288:42" pos:end="2288:45"><name pos:start="2288:42" pos:end="2288:45">cond</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			    <if_stmt pos:start="2290:29" pos:end="2304:29"><if pos:start="2290:29" pos:end="2296:29">if <condition pos:start="2290:32" pos:end="2290:39">(<expr pos:start="2290:33" pos:end="2290:38"><name pos:start="2290:33" pos:end="2290:38">IS_IMM</name></expr>)</condition> <block pos:start="2290:41" pos:end="2296:29">{<block_content pos:start="2292:33" pos:end="2294:54">	<comment type="block" pos:start="2290:49" pos:end="2290:63">/* immediate */</comment>

				<expr_stmt pos:start="2292:33" pos:end="2292:65"><expr pos:start="2292:33" pos:end="2292:64"><name pos:start="2292:33" pos:end="2292:35">rs2</name> <operator pos:start="2292:37" pos:end="2292:37">=</operator> <call pos:start="2292:39" pos:end="2292:64"><name pos:start="2292:39" pos:end="2292:51">GET_FIELD_SPs</name><argument_list pos:start="2292:52" pos:end="2292:64">(<argument pos:start="2292:53" pos:end="2292:56"><expr pos:start="2292:53" pos:end="2292:56"><name pos:start="2292:53" pos:end="2292:56">insn</name></expr></argument>, <argument pos:start="2292:59" pos:end="2292:59"><expr pos:start="2292:59" pos:end="2292:59"><literal type="number" pos:start="2292:59" pos:end="2292:59">0</literal></expr></argument>, <argument pos:start="2292:62" pos:end="2292:63"><expr pos:start="2292:62" pos:end="2292:63"><literal type="number" pos:start="2292:62" pos:end="2292:63">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<expr_stmt pos:start="2294:33" pos:end="2294:54"><expr pos:start="2294:33" pos:end="2294:53"><call pos:start="2294:33" pos:end="2294:53"><name pos:start="2294:33" pos:end="2294:48">gen_movl_simm_T1</name><argument_list pos:start="2294:49" pos:end="2294:53">(<argument pos:start="2294:50" pos:end="2294:52"><expr pos:start="2294:50" pos:end="2294:52"><name pos:start="2294:50" pos:end="2294:52">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			    </block_content>}</block></if>

			    <else pos:start="2298:29" pos:end="2304:29">else <block pos:start="2298:34" pos:end="2304:29">{<block_content pos:start="2300:33" pos:end="2302:53">

				<expr_stmt pos:start="2300:33" pos:end="2300:63"><expr pos:start="2300:33" pos:end="2300:62"><name pos:start="2300:33" pos:end="2300:35">rs2</name> <operator pos:start="2300:37" pos:end="2300:37">=</operator> <call pos:start="2300:39" pos:end="2300:62"><name pos:start="2300:39" pos:end="2300:50">GET_FIELD_SP</name><argument_list pos:start="2300:51" pos:end="2300:62">(<argument pos:start="2300:52" pos:end="2300:55"><expr pos:start="2300:52" pos:end="2300:55"><name pos:start="2300:52" pos:end="2300:55">insn</name></expr></argument>, <argument pos:start="2300:58" pos:end="2300:58"><expr pos:start="2300:58" pos:end="2300:58"><literal type="number" pos:start="2300:58" pos:end="2300:58">0</literal></expr></argument>, <argument pos:start="2300:61" pos:end="2300:61"><expr pos:start="2300:61" pos:end="2300:61"><literal type="number" pos:start="2300:61" pos:end="2300:61">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<expr_stmt pos:start="2302:33" pos:end="2302:53"><expr pos:start="2302:33" pos:end="2302:52"><call pos:start="2302:33" pos:end="2302:52"><name pos:start="2302:33" pos:end="2302:47">gen_movl_reg_T1</name><argument_list pos:start="2302:48" pos:end="2302:52">(<argument pos:start="2302:49" pos:end="2302:51"><expr pos:start="2302:49" pos:end="2302:51"><name pos:start="2302:49" pos:end="2302:51">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			    </block_content>}</block></else></if_stmt>

			    <expr_stmt pos:start="2306:29" pos:end="2306:48"><expr pos:start="2306:29" pos:end="2306:47"><call pos:start="2306:29" pos:end="2306:47"><name pos:start="2306:29" pos:end="2306:43">gen_movl_reg_T0</name><argument_list pos:start="2306:44" pos:end="2306:47">(<argument pos:start="2306:45" pos:end="2306:46"><expr pos:start="2306:45" pos:end="2306:46"><name pos:start="2306:45" pos:end="2306:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			    <expr_stmt pos:start="2308:29" pos:end="2308:44"><expr pos:start="2308:29" pos:end="2308:43"><call pos:start="2308:29" pos:end="2308:43"><name pos:start="2308:29" pos:end="2308:41">gen_op_mov_cc</name><argument_list pos:start="2308:42" pos:end="2308:43">()</argument_list></call></expr>;</expr_stmt>

			    <expr_stmt pos:start="2310:29" pos:end="2310:48"><expr pos:start="2310:29" pos:end="2310:47"><call pos:start="2310:29" pos:end="2310:47"><name pos:start="2310:29" pos:end="2310:43">gen_movl_T0_reg</name><argument_list pos:start="2310:44" pos:end="2310:47">(<argument pos:start="2310:45" pos:end="2310:46"><expr pos:start="2310:45" pos:end="2310:46"><name pos:start="2310:45" pos:end="2310:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			    <break pos:start="2312:29" pos:end="2312:34">break;</break>

			</block_content>}</block>

		    <case pos:start="2316:21" pos:end="2316:30">case <expr pos:start="2316:26" pos:end="2316:29"><literal type="number" pos:start="2316:26" pos:end="2316:29">0x36</literal></expr>:</case> <comment type="block" pos:start="2316:32" pos:end="2316:61">/* UltraSparc shutdown, VIS */</comment>

			<block pos:start="2318:25" pos:end="2382:0">{<block_content pos:start="2320:29" pos:end="2377:34">

			    <decl_stmt pos:start="2320:29" pos:end="2320:64"><decl pos:start="2320:29" pos:end="2320:63"><type pos:start="2320:29" pos:end="2320:31"><name pos:start="2320:29" pos:end="2320:31">int</name></type> <name pos:start="2320:33" pos:end="2320:35">opf</name> <init pos:start="2320:37" pos:end="2320:63">= <expr pos:start="2320:39" pos:end="2320:63"><call pos:start="2320:39" pos:end="2320:63"><name pos:start="2320:39" pos:end="2320:50">GET_FIELD_SP</name><argument_list pos:start="2320:51" pos:end="2320:63">(<argument pos:start="2320:52" pos:end="2320:55"><expr pos:start="2320:52" pos:end="2320:55"><name pos:start="2320:52" pos:end="2320:55">insn</name></expr></argument>, <argument pos:start="2320:58" pos:end="2320:58"><expr pos:start="2320:58" pos:end="2320:58"><literal type="number" pos:start="2320:58" pos:end="2320:58">5</literal></expr></argument>, <argument pos:start="2320:61" pos:end="2320:62"><expr pos:start="2320:61" pos:end="2320:62"><literal type="number" pos:start="2320:61" pos:end="2320:62">13</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                            <expr_stmt pos:start="2322:29" pos:end="2322:58"><expr pos:start="2322:29" pos:end="2322:57"><name pos:start="2322:29" pos:end="2322:31">rs1</name> <operator pos:start="2322:33" pos:end="2322:33">=</operator> <call pos:start="2322:35" pos:end="2322:57"><name pos:start="2322:35" pos:end="2322:43">GET_FIELD</name><argument_list pos:start="2322:44" pos:end="2322:57">(<argument pos:start="2322:45" pos:end="2322:48"><expr pos:start="2322:45" pos:end="2322:48"><name pos:start="2322:45" pos:end="2322:48">insn</name></expr></argument>, <argument pos:start="2322:51" pos:end="2322:52"><expr pos:start="2322:51" pos:end="2322:52"><literal type="number" pos:start="2322:51" pos:end="2322:52">13</literal></expr></argument>, <argument pos:start="2322:55" pos:end="2322:56"><expr pos:start="2322:55" pos:end="2322:56"><literal type="number" pos:start="2322:55" pos:end="2322:56">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2324:29" pos:end="2324:58"><expr pos:start="2324:29" pos:end="2324:57"><name pos:start="2324:29" pos:end="2324:31">rs2</name> <operator pos:start="2324:33" pos:end="2324:33">=</operator> <call pos:start="2324:35" pos:end="2324:57"><name pos:start="2324:35" pos:end="2324:43">GET_FIELD</name><argument_list pos:start="2324:44" pos:end="2324:57">(<argument pos:start="2324:45" pos:end="2324:48"><expr pos:start="2324:45" pos:end="2324:48"><name pos:start="2324:45" pos:end="2324:48">insn</name></expr></argument>, <argument pos:start="2324:51" pos:end="2324:52"><expr pos:start="2324:51" pos:end="2324:52"><literal type="number" pos:start="2324:51" pos:end="2324:52">27</literal></expr></argument>, <argument pos:start="2324:55" pos:end="2324:56"><expr pos:start="2324:55" pos:end="2324:56"><literal type="number" pos:start="2324:55" pos:end="2324:56">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                            <switch pos:start="2328:29" pos:end="2375:29">switch <condition pos:start="2328:36" pos:end="2328:40">(<expr pos:start="2328:37" pos:end="2328:39"><name pos:start="2328:37" pos:end="2328:39">opf</name></expr>)</condition> <block pos:start="2328:42" pos:end="2375:29">{<block_content pos:start="2330:29" pos:end="2372:36">

                            <case pos:start="2330:29" pos:end="2330:39">case <expr pos:start="2330:34" pos:end="2330:38"><literal type="number" pos:start="2330:34" pos:end="2330:38">0x018</literal></expr>:</case> <comment type="block" pos:start="2330:41" pos:end="2330:61">/* VIS I alignaddr */</comment>

                                <if_stmt pos:start="2332:33" pos:end="2334:50"><if pos:start="2332:33" pos:end="2334:50">if <condition pos:start="2332:36" pos:end="2332:57">(<expr pos:start="2332:37" pos:end="2332:56"><call pos:start="2332:37" pos:end="2332:56"><name pos:start="2332:37" pos:end="2332:52">gen_trap_ifnofpu</name><argument_list pos:start="2332:53" pos:end="2332:56">(<argument pos:start="2332:54" pos:end="2332:55"><expr pos:start="2332:54" pos:end="2332:55"><name pos:start="2332:54" pos:end="2332:55">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2334:37" pos:end="2334:50"><block_content pos:start="2334:37" pos:end="2334:50">

                                    <goto pos:start="2334:37" pos:end="2334:50">goto <name pos:start="2334:42" pos:end="2334:49">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

                                <expr_stmt pos:start="2336:33" pos:end="2336:53"><expr pos:start="2336:33" pos:end="2336:52"><call pos:start="2336:33" pos:end="2336:52"><name pos:start="2336:33" pos:end="2336:47">gen_movl_reg_T0</name><argument_list pos:start="2336:48" pos:end="2336:52">(<argument pos:start="2336:49" pos:end="2336:51"><expr pos:start="2336:49" pos:end="2336:51"><name pos:start="2336:49" pos:end="2336:51">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2338:33" pos:end="2338:53"><expr pos:start="2338:33" pos:end="2338:52"><call pos:start="2338:33" pos:end="2338:52"><name pos:start="2338:33" pos:end="2338:47">gen_movl_reg_T1</name><argument_list pos:start="2338:48" pos:end="2338:52">(<argument pos:start="2338:49" pos:end="2338:51"><expr pos:start="2338:49" pos:end="2338:51"><name pos:start="2338:49" pos:end="2338:51">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2340:33" pos:end="2340:51"><expr pos:start="2340:33" pos:end="2340:50"><call pos:start="2340:33" pos:end="2340:50"><name pos:start="2340:33" pos:end="2340:48">gen_op_alignaddr</name><argument_list pos:start="2340:49" pos:end="2340:50">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2342:33" pos:end="2342:52"><expr pos:start="2342:33" pos:end="2342:51"><call pos:start="2342:33" pos:end="2342:51"><name pos:start="2342:33" pos:end="2342:47">gen_movl_T0_reg</name><argument_list pos:start="2342:48" pos:end="2342:51">(<argument pos:start="2342:49" pos:end="2342:50"><expr pos:start="2342:49" pos:end="2342:50"><name pos:start="2342:49" pos:end="2342:50">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2344:33" pos:end="2344:38">break;</break>

                            <case pos:start="2346:29" pos:end="2346:39">case <expr pos:start="2346:34" pos:end="2346:38"><literal type="number" pos:start="2346:34" pos:end="2346:38">0x01a</literal></expr>:</case> <comment type="block" pos:start="2346:41" pos:end="2346:62">/* VIS I alignaddrl */</comment>

                                <if_stmt pos:start="2348:33" pos:end="2350:50"><if pos:start="2348:33" pos:end="2350:50">if <condition pos:start="2348:36" pos:end="2348:57">(<expr pos:start="2348:37" pos:end="2348:56"><call pos:start="2348:37" pos:end="2348:56"><name pos:start="2348:37" pos:end="2348:52">gen_trap_ifnofpu</name><argument_list pos:start="2348:53" pos:end="2348:56">(<argument pos:start="2348:54" pos:end="2348:55"><expr pos:start="2348:54" pos:end="2348:55"><name pos:start="2348:54" pos:end="2348:55">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2350:37" pos:end="2350:50"><block_content pos:start="2350:37" pos:end="2350:50">

                                    <goto pos:start="2350:37" pos:end="2350:50">goto <name pos:start="2350:42" pos:end="2350:49">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

                                <comment type="line" pos:start="2352:33" pos:end="2352:38">// XXX</comment>

                                <break pos:start="2354:33" pos:end="2354:38">break;</break>

                            <case pos:start="2356:29" pos:end="2356:39">case <expr pos:start="2356:34" pos:end="2356:38"><literal type="number" pos:start="2356:34" pos:end="2356:38">0x048</literal></expr>:</case> <comment type="block" pos:start="2356:41" pos:end="2356:62">/* VIS I faligndata */</comment>

                                <if_stmt pos:start="2358:33" pos:end="2360:50"><if pos:start="2358:33" pos:end="2360:50">if <condition pos:start="2358:36" pos:end="2358:57">(<expr pos:start="2358:37" pos:end="2358:56"><call pos:start="2358:37" pos:end="2358:56"><name pos:start="2358:37" pos:end="2358:52">gen_trap_ifnofpu</name><argument_list pos:start="2358:53" pos:end="2358:56">(<argument pos:start="2358:54" pos:end="2358:55"><expr pos:start="2358:54" pos:end="2358:55"><name pos:start="2358:54" pos:end="2358:55">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2360:37" pos:end="2360:50"><block_content pos:start="2360:37" pos:end="2360:50">

                                    <goto pos:start="2360:37" pos:end="2360:50">goto <name pos:start="2360:42" pos:end="2360:49">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

                                <expr_stmt pos:start="2362:33" pos:end="2362:57"><expr pos:start="2362:33" pos:end="2362:56"><call pos:start="2362:33" pos:end="2362:56"><name pos:start="2362:33" pos:end="2362:51">gen_op_load_fpr_DT0</name><argument_list pos:start="2362:52" pos:end="2362:56">(<argument pos:start="2362:53" pos:end="2362:55"><expr pos:start="2362:53" pos:end="2362:55"><name pos:start="2362:53" pos:end="2362:55">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2364:33" pos:end="2364:57"><expr pos:start="2364:33" pos:end="2364:56"><call pos:start="2364:33" pos:end="2364:56"><name pos:start="2364:33" pos:end="2364:51">gen_op_load_fpr_DT1</name><argument_list pos:start="2364:52" pos:end="2364:56">(<argument pos:start="2364:53" pos:end="2364:55"><expr pos:start="2364:53" pos:end="2364:55"><name pos:start="2364:53" pos:end="2364:55">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2366:33" pos:end="2366:52"><expr pos:start="2366:33" pos:end="2366:51"><call pos:start="2366:33" pos:end="2366:51"><name pos:start="2366:33" pos:end="2366:49">gen_op_faligndata</name><argument_list pos:start="2366:50" pos:end="2366:51">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2368:33" pos:end="2368:57"><expr pos:start="2368:33" pos:end="2368:56"><call pos:start="2368:33" pos:end="2368:56"><name pos:start="2368:33" pos:end="2368:52">gen_op_store_DT0_fpr</name><argument_list pos:start="2368:53" pos:end="2368:56">(<argument pos:start="2368:54" pos:end="2368:55"><expr pos:start="2368:54" pos:end="2368:55"><name pos:start="2368:54" pos:end="2368:55">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="2370:33" pos:end="2370:38">break;</break>

                            <default pos:start="2372:29" pos:end="2372:36">default:</default>


                            </block_content>}</block></switch>

                            <break pos:start="2377:29" pos:end="2377:34">break;</break>

			</block_content>}</block>

<cpp:endif pos:start="2381:1" pos:end="2381:6">#<cpp:directive pos:start="2381:2" pos:end="2381:6">endif</cpp:directive></cpp:endif>

		    <default pos:start="2383:21" pos:end="2383:28">default:</default>


		    </block_content>}</block></switch>

		</block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="2390:15" pos:end="2407:13">else if <condition pos:start="2390:23" pos:end="2390:50">(<expr pos:start="2390:24" pos:end="2390:49"><name pos:start="2390:24" pos:end="2390:26">xop</name> <operator pos:start="2390:28" pos:end="2390:29">==</operator> <literal type="number" pos:start="2390:31" pos:end="2390:34">0x36</literal> <operator pos:start="2390:36" pos:end="2390:37">||</operator> <name pos:start="2390:39" pos:end="2390:41">xop</name> <operator pos:start="2390:43" pos:end="2390:44">==</operator> <literal type="number" pos:start="2390:46" pos:end="2390:49">0x37</literal></expr>)</condition> <block pos:start="2390:52" pos:end="2407:13">{<block_content pos:start="2401:17" pos:end="2406:0"> <comment type="block" pos:start="2390:54" pos:end="2394:66">/* CPop1 &amp; CPop2,

                                                        V9 impdep1 &amp;

                                                        impdep2 */</comment>

<cpp:ifdef pos:start="2396:1" pos:end="2396:21">#<cpp:directive pos:start="2396:2" pos:end="2396:6">ifdef</cpp:directive> <name pos:start="2396:8" pos:end="2396:21">TARGET_SPARC64</name></cpp:ifdef>


<cpp:else pos:start="2399:1" pos:end="2399:5">#<cpp:directive pos:start="2399:2" pos:end="2399:5">else</cpp:directive></cpp:else>

	        <goto pos:start="2401:17" pos:end="2406:0">goto <name pos:start="2401:22" pos:end="2401:29">ncp_insn</name>;</goto>

<cpp:endif pos:start="2403:1" pos:end="2403:6">#<cpp:directive pos:start="2403:2" pos:end="2403:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2405:1" pos:end="2405:21">#<cpp:directive pos:start="2405:2" pos:end="2405:6">ifdef</cpp:directive> <name pos:start="2405:8" pos:end="2405:21">TARGET_SPARC64</name></cpp:ifdef>

	    </block_content>}</block></if> <if type="elseif" pos:start="2407:15" pos:end="2467:13">else if <condition pos:start="2407:23" pos:end="2407:35">(<expr pos:start="2407:24" pos:end="2407:34"><name pos:start="2407:24" pos:end="2407:26">xop</name> <operator pos:start="2407:28" pos:end="2407:29">==</operator> <literal type="number" pos:start="2407:31" pos:end="2407:34">0x39</literal></expr>)</condition> <block pos:start="2407:37" pos:end="2467:13">{<block_content pos:start="2409:17" pos:end="2466:0"> <comment type="block" pos:start="2407:39" pos:end="2407:53">/* V9 return */</comment>

                <expr_stmt pos:start="2409:17" pos:end="2409:46"><expr pos:start="2409:17" pos:end="2409:45"><name pos:start="2409:17" pos:end="2409:19">rs1</name> <operator pos:start="2409:21" pos:end="2409:21">=</operator> <call pos:start="2409:23" pos:end="2409:45"><name pos:start="2409:23" pos:end="2409:31">GET_FIELD</name><argument_list pos:start="2409:32" pos:end="2409:45">(<argument pos:start="2409:33" pos:end="2409:36"><expr pos:start="2409:33" pos:end="2409:36"><name pos:start="2409:33" pos:end="2409:36">insn</name></expr></argument>, <argument pos:start="2409:39" pos:end="2409:40"><expr pos:start="2409:39" pos:end="2409:40"><literal type="number" pos:start="2409:39" pos:end="2409:40">13</literal></expr></argument>, <argument pos:start="2409:43" pos:end="2409:44"><expr pos:start="2409:43" pos:end="2409:44"><literal type="number" pos:start="2409:43" pos:end="2409:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="2411:17" pos:end="2411:37"><expr pos:start="2411:17" pos:end="2411:36"><call pos:start="2411:17" pos:end="2411:36"><name pos:start="2411:17" pos:end="2411:31">gen_movl_reg_T0</name><argument_list pos:start="2411:32" pos:end="2411:36">(<argument pos:start="2411:33" pos:end="2411:35"><expr pos:start="2411:33" pos:end="2411:35"><name pos:start="2411:33" pos:end="2411:35">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="2413:17" pos:end="2453:17"><if pos:start="2413:17" pos:end="2433:17">if <condition pos:start="2413:20" pos:end="2413:27">(<expr pos:start="2413:21" pos:end="2413:26"><name pos:start="2413:21" pos:end="2413:26">IS_IMM</name></expr>)</condition> <block pos:start="2413:29" pos:end="2433:17">{<block_content pos:start="2415:21" pos:end="2432:0">	<comment type="block" pos:start="2413:33" pos:end="2413:47">/* immediate */</comment>

		    <expr_stmt pos:start="2415:21" pos:end="2418:0"><expr pos:start="2415:21" pos:end="2415:50"><name pos:start="2415:21" pos:end="2415:23">rs2</name> <operator pos:start="2415:25" pos:end="2415:25">=</operator> <call pos:start="2415:27" pos:end="2415:50"><name pos:start="2415:27" pos:end="2415:36">GET_FIELDs</name><argument_list pos:start="2415:37" pos:end="2415:50">(<argument pos:start="2415:38" pos:end="2415:41"><expr pos:start="2415:38" pos:end="2415:41"><name pos:start="2415:38" pos:end="2415:41">insn</name></expr></argument>, <argument pos:start="2415:44" pos:end="2415:45"><expr pos:start="2415:44" pos:end="2415:45"><literal type="number" pos:start="2415:44" pos:end="2415:45">19</literal></expr></argument>, <argument pos:start="2415:48" pos:end="2415:49"><expr pos:start="2415:48" pos:end="2415:49"><literal type="number" pos:start="2415:48" pos:end="2415:49">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="2417:1" pos:end="2417:18">#<cpp:directive pos:start="2417:2" pos:end="2417:3">if</cpp:directive> <expr pos:start="2417:5" pos:end="2417:18"><call pos:start="2417:5" pos:end="2417:18"><name pos:start="2417:5" pos:end="2417:11">defined</name><argument_list pos:start="2417:12" pos:end="2417:18">(<argument pos:start="2417:13" pos:end="2417:17"><expr pos:start="2417:13" pos:end="2417:17"><name pos:start="2417:13" pos:end="2417:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

		    <if_stmt pos:start="2419:21" pos:end="2432:0"><if pos:start="2419:21" pos:end="2432:0">if <condition pos:start="2419:24" pos:end="2419:28">(<expr pos:start="2419:25" pos:end="2419:27"><name pos:start="2419:25" pos:end="2419:27">rs2</name></expr>)</condition> <block pos:start="2419:30" pos:end="2432:0">{<block_content pos:start="2423:25" pos:end="2428:0">

<cpp:endif pos:start="2421:1" pos:end="2421:6">#<cpp:directive pos:start="2421:2" pos:end="2421:6">endif</cpp:directive></cpp:endif>

			<expr_stmt pos:start="2423:25" pos:end="2423:46"><expr pos:start="2423:25" pos:end="2423:45"><call pos:start="2423:25" pos:end="2423:45"><name pos:start="2423:25" pos:end="2423:40">gen_movl_simm_T1</name><argument_list pos:start="2423:41" pos:end="2423:45">(<argument pos:start="2423:42" pos:end="2423:44"><expr pos:start="2423:42" pos:end="2423:44"><name pos:start="2423:42" pos:end="2423:44">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="2425:25" pos:end="2428:0"><expr pos:start="2425:25" pos:end="2425:42"><call pos:start="2425:25" pos:end="2425:42"><name pos:start="2425:25" pos:end="2425:40">gen_op_add_T1_T0</name><argument_list pos:start="2425:41" pos:end="2425:42">()</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="2427:1" pos:end="2427:18">#<cpp:directive pos:start="2427:2" pos:end="2427:3">if</cpp:directive> <expr pos:start="2427:5" pos:end="2427:18"><call pos:start="2427:5" pos:end="2427:18"><name pos:start="2427:5" pos:end="2427:11">defined</name><argument_list pos:start="2427:12" pos:end="2427:18">(<argument pos:start="2427:13" pos:end="2427:17"><expr pos:start="2427:13" pos:end="2427:17"><name pos:start="2427:13" pos:end="2427:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

		    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="2431:1" pos:end="2431:6">#<cpp:directive pos:start="2431:2" pos:end="2431:6">endif</cpp:directive></cpp:endif>

                </block_content>}</block></if> <else pos:start="2433:19" pos:end="2453:17">else <block pos:start="2433:24" pos:end="2453:17">{<block_content pos:start="2435:21" pos:end="2452:0">		<comment type="block" pos:start="2433:41" pos:end="2433:54">/* register */</comment>

                    <expr_stmt pos:start="2435:21" pos:end="2438:0"><expr pos:start="2435:21" pos:end="2435:49"><name pos:start="2435:21" pos:end="2435:23">rs2</name> <operator pos:start="2435:25" pos:end="2435:25">=</operator> <call pos:start="2435:27" pos:end="2435:49"><name pos:start="2435:27" pos:end="2435:35">GET_FIELD</name><argument_list pos:start="2435:36" pos:end="2435:49">(<argument pos:start="2435:37" pos:end="2435:40"><expr pos:start="2435:37" pos:end="2435:40"><name pos:start="2435:37" pos:end="2435:40">insn</name></expr></argument>, <argument pos:start="2435:43" pos:end="2435:44"><expr pos:start="2435:43" pos:end="2435:44"><literal type="number" pos:start="2435:43" pos:end="2435:44">27</literal></expr></argument>, <argument pos:start="2435:47" pos:end="2435:48"><expr pos:start="2435:47" pos:end="2435:48"><literal type="number" pos:start="2435:47" pos:end="2435:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="2437:1" pos:end="2437:18">#<cpp:directive pos:start="2437:2" pos:end="2437:3">if</cpp:directive> <expr pos:start="2437:5" pos:end="2437:18"><call pos:start="2437:5" pos:end="2437:18"><name pos:start="2437:5" pos:end="2437:11">defined</name><argument_list pos:start="2437:12" pos:end="2437:18">(<argument pos:start="2437:13" pos:end="2437:17"><expr pos:start="2437:13" pos:end="2437:17"><name pos:start="2437:13" pos:end="2437:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

		    <if_stmt pos:start="2439:21" pos:end="2452:0"><if pos:start="2439:21" pos:end="2452:0">if <condition pos:start="2439:24" pos:end="2439:28">(<expr pos:start="2439:25" pos:end="2439:27"><name pos:start="2439:25" pos:end="2439:27">rs2</name></expr>)</condition> <block pos:start="2439:30" pos:end="2452:0">{<block_content pos:start="2443:25" pos:end="2448:0">

<cpp:endif pos:start="2441:1" pos:end="2441:6">#<cpp:directive pos:start="2441:2" pos:end="2441:6">endif</cpp:directive></cpp:endif>

			<expr_stmt pos:start="2443:25" pos:end="2443:45"><expr pos:start="2443:25" pos:end="2443:44"><call pos:start="2443:25" pos:end="2443:44"><name pos:start="2443:25" pos:end="2443:39">gen_movl_reg_T1</name><argument_list pos:start="2443:40" pos:end="2443:44">(<argument pos:start="2443:41" pos:end="2443:43"><expr pos:start="2443:41" pos:end="2443:43"><name pos:start="2443:41" pos:end="2443:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="2445:25" pos:end="2448:0"><expr pos:start="2445:25" pos:end="2445:42"><call pos:start="2445:25" pos:end="2445:42"><name pos:start="2445:25" pos:end="2445:40">gen_op_add_T1_T0</name><argument_list pos:start="2445:41" pos:end="2445:42">()</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="2447:1" pos:end="2447:18">#<cpp:directive pos:start="2447:2" pos:end="2447:3">if</cpp:directive> <expr pos:start="2447:5" pos:end="2447:18"><call pos:start="2447:5" pos:end="2447:18"><name pos:start="2447:5" pos:end="2447:11">defined</name><argument_list pos:start="2447:12" pos:end="2447:18">(<argument pos:start="2447:13" pos:end="2447:17"><expr pos:start="2447:13" pos:end="2447:17"><name pos:start="2447:13" pos:end="2447:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

		    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="2451:1" pos:end="2451:6">#<cpp:directive pos:start="2451:2" pos:end="2451:6">endif</cpp:directive></cpp:endif>

                </block_content>}</block></else></if_stmt>

		<expr_stmt pos:start="2455:17" pos:end="2455:33"><expr pos:start="2455:17" pos:end="2455:32"><call pos:start="2455:17" pos:end="2455:32"><name pos:start="2455:17" pos:end="2455:30">gen_op_restore</name><argument_list pos:start="2455:31" pos:end="2455:32">()</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="2457:17" pos:end="2457:35"><expr pos:start="2457:17" pos:end="2457:34"><call pos:start="2457:17" pos:end="2457:34"><name pos:start="2457:17" pos:end="2457:30">gen_mov_pc_npc</name><argument_list pos:start="2457:31" pos:end="2457:34">(<argument pos:start="2457:32" pos:end="2457:33"><expr pos:start="2457:32" pos:end="2457:33"><name pos:start="2457:32" pos:end="2457:33">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="2459:17" pos:end="2459:37"><expr pos:start="2459:17" pos:end="2459:36"><call pos:start="2459:17" pos:end="2459:36"><name pos:start="2459:17" pos:end="2459:34">gen_op_movl_npc_T0</name><argument_list pos:start="2459:35" pos:end="2459:36">()</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="2461:17" pos:end="2461:37"><expr pos:start="2461:17" pos:end="2461:36"><name pos:start="2461:17" pos:end="2461:23"><name pos:start="2461:17" pos:end="2461:18">dc</name><operator pos:start="2461:19" pos:end="2461:20">-&gt;</operator><name pos:start="2461:21" pos:end="2461:23">npc</name></name> <operator pos:start="2461:25" pos:end="2461:25">=</operator> <name pos:start="2461:27" pos:end="2461:36">DYNAMIC_PC</name></expr>;</expr_stmt>

		<goto pos:start="2463:17" pos:end="2466:0">goto <name pos:start="2463:22" pos:end="2463:29">jmp_insn</name>;</goto>

<cpp:endif pos:start="2465:1" pos:end="2465:6">#<cpp:directive pos:start="2465:2" pos:end="2465:6">endif</cpp:directive></cpp:endif>

	    </block_content>}</block></if> <else pos:start="2467:15" pos:end="2657:13">else <block pos:start="2467:20" pos:end="2657:13">{<block_content pos:start="2469:17" pos:end="2655:17">

                <expr_stmt pos:start="2469:17" pos:end="2469:46"><expr pos:start="2469:17" pos:end="2469:45"><name pos:start="2469:17" pos:end="2469:19">rs1</name> <operator pos:start="2469:21" pos:end="2469:21">=</operator> <call pos:start="2469:23" pos:end="2469:45"><name pos:start="2469:23" pos:end="2469:31">GET_FIELD</name><argument_list pos:start="2469:32" pos:end="2469:45">(<argument pos:start="2469:33" pos:end="2469:36"><expr pos:start="2469:33" pos:end="2469:36"><name pos:start="2469:33" pos:end="2469:36">insn</name></expr></argument>, <argument pos:start="2469:39" pos:end="2469:40"><expr pos:start="2469:39" pos:end="2469:40"><literal type="number" pos:start="2469:39" pos:end="2469:40">13</literal></expr></argument>, <argument pos:start="2469:43" pos:end="2469:44"><expr pos:start="2469:43" pos:end="2469:44"><literal type="number" pos:start="2469:43" pos:end="2469:44">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="2471:17" pos:end="2471:37"><expr pos:start="2471:17" pos:end="2471:36"><call pos:start="2471:17" pos:end="2471:36"><name pos:start="2471:17" pos:end="2471:31">gen_movl_reg_T0</name><argument_list pos:start="2471:32" pos:end="2471:36">(<argument pos:start="2471:33" pos:end="2471:35"><expr pos:start="2471:33" pos:end="2471:35"><name pos:start="2471:33" pos:end="2471:35">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="2473:17" pos:end="2513:17"><if pos:start="2473:17" pos:end="2493:17">if <condition pos:start="2473:20" pos:end="2473:27">(<expr pos:start="2473:21" pos:end="2473:26"><name pos:start="2473:21" pos:end="2473:26">IS_IMM</name></expr>)</condition> <block pos:start="2473:29" pos:end="2493:17">{<block_content pos:start="2475:21" pos:end="2492:0">	<comment type="block" pos:start="2473:33" pos:end="2473:47">/* immediate */</comment>

		    <expr_stmt pos:start="2475:21" pos:end="2478:0"><expr pos:start="2475:21" pos:end="2475:50"><name pos:start="2475:21" pos:end="2475:23">rs2</name> <operator pos:start="2475:25" pos:end="2475:25">=</operator> <call pos:start="2475:27" pos:end="2475:50"><name pos:start="2475:27" pos:end="2475:36">GET_FIELDs</name><argument_list pos:start="2475:37" pos:end="2475:50">(<argument pos:start="2475:38" pos:end="2475:41"><expr pos:start="2475:38" pos:end="2475:41"><name pos:start="2475:38" pos:end="2475:41">insn</name></expr></argument>, <argument pos:start="2475:44" pos:end="2475:45"><expr pos:start="2475:44" pos:end="2475:45"><literal type="number" pos:start="2475:44" pos:end="2475:45">19</literal></expr></argument>, <argument pos:start="2475:48" pos:end="2475:49"><expr pos:start="2475:48" pos:end="2475:49"><literal type="number" pos:start="2475:48" pos:end="2475:49">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="2477:1" pos:end="2477:18">#<cpp:directive pos:start="2477:2" pos:end="2477:3">if</cpp:directive> <expr pos:start="2477:5" pos:end="2477:18"><call pos:start="2477:5" pos:end="2477:18"><name pos:start="2477:5" pos:end="2477:11">defined</name><argument_list pos:start="2477:12" pos:end="2477:18">(<argument pos:start="2477:13" pos:end="2477:17"><expr pos:start="2477:13" pos:end="2477:17"><name pos:start="2477:13" pos:end="2477:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

		    <if_stmt pos:start="2479:21" pos:end="2492:0"><if pos:start="2479:21" pos:end="2492:0">if <condition pos:start="2479:24" pos:end="2479:28">(<expr pos:start="2479:25" pos:end="2479:27"><name pos:start="2479:25" pos:end="2479:27">rs2</name></expr>)</condition> <block pos:start="2479:30" pos:end="2492:0">{<block_content pos:start="2483:25" pos:end="2488:0">

<cpp:endif pos:start="2481:1" pos:end="2481:6">#<cpp:directive pos:start="2481:2" pos:end="2481:6">endif</cpp:directive></cpp:endif>

			<expr_stmt pos:start="2483:25" pos:end="2483:46"><expr pos:start="2483:25" pos:end="2483:45"><call pos:start="2483:25" pos:end="2483:45"><name pos:start="2483:25" pos:end="2483:40">gen_movl_simm_T1</name><argument_list pos:start="2483:41" pos:end="2483:45">(<argument pos:start="2483:42" pos:end="2483:44"><expr pos:start="2483:42" pos:end="2483:44"><name pos:start="2483:42" pos:end="2483:44">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="2485:25" pos:end="2488:0"><expr pos:start="2485:25" pos:end="2485:42"><call pos:start="2485:25" pos:end="2485:42"><name pos:start="2485:25" pos:end="2485:40">gen_op_add_T1_T0</name><argument_list pos:start="2485:41" pos:end="2485:42">()</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="2487:1" pos:end="2487:18">#<cpp:directive pos:start="2487:2" pos:end="2487:3">if</cpp:directive> <expr pos:start="2487:5" pos:end="2487:18"><call pos:start="2487:5" pos:end="2487:18"><name pos:start="2487:5" pos:end="2487:11">defined</name><argument_list pos:start="2487:12" pos:end="2487:18">(<argument pos:start="2487:13" pos:end="2487:17"><expr pos:start="2487:13" pos:end="2487:17"><name pos:start="2487:13" pos:end="2487:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

		    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="2491:1" pos:end="2491:6">#<cpp:directive pos:start="2491:2" pos:end="2491:6">endif</cpp:directive></cpp:endif>

                </block_content>}</block></if> <else pos:start="2493:19" pos:end="2513:17">else <block pos:start="2493:24" pos:end="2513:17">{<block_content pos:start="2495:21" pos:end="2512:0">		<comment type="block" pos:start="2493:41" pos:end="2493:54">/* register */</comment>

                    <expr_stmt pos:start="2495:21" pos:end="2498:0"><expr pos:start="2495:21" pos:end="2495:49"><name pos:start="2495:21" pos:end="2495:23">rs2</name> <operator pos:start="2495:25" pos:end="2495:25">=</operator> <call pos:start="2495:27" pos:end="2495:49"><name pos:start="2495:27" pos:end="2495:35">GET_FIELD</name><argument_list pos:start="2495:36" pos:end="2495:49">(<argument pos:start="2495:37" pos:end="2495:40"><expr pos:start="2495:37" pos:end="2495:40"><name pos:start="2495:37" pos:end="2495:40">insn</name></expr></argument>, <argument pos:start="2495:43" pos:end="2495:44"><expr pos:start="2495:43" pos:end="2495:44"><literal type="number" pos:start="2495:43" pos:end="2495:44">27</literal></expr></argument>, <argument pos:start="2495:47" pos:end="2495:48"><expr pos:start="2495:47" pos:end="2495:48"><literal type="number" pos:start="2495:47" pos:end="2495:48">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="2497:1" pos:end="2497:18">#<cpp:directive pos:start="2497:2" pos:end="2497:3">if</cpp:directive> <expr pos:start="2497:5" pos:end="2497:18"><call pos:start="2497:5" pos:end="2497:18"><name pos:start="2497:5" pos:end="2497:11">defined</name><argument_list pos:start="2497:12" pos:end="2497:18">(<argument pos:start="2497:13" pos:end="2497:17"><expr pos:start="2497:13" pos:end="2497:17"><name pos:start="2497:13" pos:end="2497:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

		    <if_stmt pos:start="2499:21" pos:end="2512:0"><if pos:start="2499:21" pos:end="2512:0">if <condition pos:start="2499:24" pos:end="2499:28">(<expr pos:start="2499:25" pos:end="2499:27"><name pos:start="2499:25" pos:end="2499:27">rs2</name></expr>)</condition> <block pos:start="2499:30" pos:end="2512:0">{<block_content pos:start="2503:25" pos:end="2508:0">

<cpp:endif pos:start="2501:1" pos:end="2501:6">#<cpp:directive pos:start="2501:2" pos:end="2501:6">endif</cpp:directive></cpp:endif>

			<expr_stmt pos:start="2503:25" pos:end="2503:45"><expr pos:start="2503:25" pos:end="2503:44"><call pos:start="2503:25" pos:end="2503:44"><name pos:start="2503:25" pos:end="2503:39">gen_movl_reg_T1</name><argument_list pos:start="2503:40" pos:end="2503:44">(<argument pos:start="2503:41" pos:end="2503:43"><expr pos:start="2503:41" pos:end="2503:43"><name pos:start="2503:41" pos:end="2503:43">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="2505:25" pos:end="2508:0"><expr pos:start="2505:25" pos:end="2505:42"><call pos:start="2505:25" pos:end="2505:42"><name pos:start="2505:25" pos:end="2505:40">gen_op_add_T1_T0</name><argument_list pos:start="2505:41" pos:end="2505:42">()</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="2507:1" pos:end="2507:18">#<cpp:directive pos:start="2507:2" pos:end="2507:3">if</cpp:directive> <expr pos:start="2507:5" pos:end="2507:18"><call pos:start="2507:5" pos:end="2507:18"><name pos:start="2507:5" pos:end="2507:11">defined</name><argument_list pos:start="2507:12" pos:end="2507:18">(<argument pos:start="2507:13" pos:end="2507:17"><expr pos:start="2507:13" pos:end="2507:17"><name pos:start="2507:13" pos:end="2507:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

		    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="2511:1" pos:end="2511:6">#<cpp:directive pos:start="2511:2" pos:end="2511:6">endif</cpp:directive></cpp:endif>

                </block_content>}</block></else></if_stmt>

		<switch pos:start="2515:17" pos:end="2655:17">switch <condition pos:start="2515:24" pos:end="2515:28">(<expr pos:start="2515:25" pos:end="2515:27"><name pos:start="2515:25" pos:end="2515:27">xop</name></expr>)</condition> <block pos:start="2515:30" pos:end="2655:17">{<block_content pos:start="2517:17" pos:end="2652:24">

		<case pos:start="2517:17" pos:end="2517:26">case <expr pos:start="2517:22" pos:end="2517:25"><literal type="number" pos:start="2517:22" pos:end="2517:25">0x38</literal></expr>:</case>	<comment type="block" pos:start="2517:33" pos:end="2517:42">/* jmpl */</comment>

		    <block pos:start="2519:21" pos:end="2551:21">{<block_content pos:start="2521:25" pos:end="2549:45">

			<if_stmt pos:start="2521:25" pos:end="2543:25"><if pos:start="2521:25" pos:end="2543:25">if <condition pos:start="2521:28" pos:end="2521:36">(<expr pos:start="2521:29" pos:end="2521:35"><name pos:start="2521:29" pos:end="2521:30">rd</name> <operator pos:start="2521:32" pos:end="2521:33">!=</operator> <literal type="number" pos:start="2521:35" pos:end="2521:35">0</literal></expr>)</condition> <block pos:start="2521:38" pos:end="2543:25">{<block_content pos:start="2525:29" pos:end="2541:48">

<cpp:ifdef pos:start="2523:1" pos:end="2523:21">#<cpp:directive pos:start="2523:2" pos:end="2523:6">ifdef</cpp:directive> <name pos:start="2523:8" pos:end="2523:21">TARGET_SPARC64</name></cpp:ifdef>

                            <if_stmt pos:start="2525:29" pos:end="2536:0"><if pos:start="2525:29" pos:end="2529:29">if <condition pos:start="2525:32" pos:end="2525:59">(<expr pos:start="2525:33" pos:end="2525:58"><name pos:start="2525:33" pos:end="2525:38"><name pos:start="2525:33" pos:end="2525:34">dc</name><operator pos:start="2525:35" pos:end="2525:36">-&gt;</operator><name pos:start="2525:37" pos:end="2525:38">pc</name></name> <operator pos:start="2525:40" pos:end="2525:41">==</operator> <operator pos:start="2525:43" pos:end="2525:43">(</operator><name pos:start="2525:44" pos:end="2525:51">uint32_t</name><operator pos:start="2525:52" pos:end="2525:52">)</operator><name pos:start="2525:53" pos:end="2525:58"><name pos:start="2525:53" pos:end="2525:54">dc</name><operator pos:start="2525:55" pos:end="2525:56">-&gt;</operator><name pos:start="2525:57" pos:end="2525:58">pc</name></name></expr>)</condition> <block pos:start="2525:61" pos:end="2529:29">{<block_content pos:start="2527:33" pos:end="2527:58">

                                <expr_stmt pos:start="2527:33" pos:end="2527:58"><expr pos:start="2527:33" pos:end="2527:57"><call pos:start="2527:33" pos:end="2527:57"><name pos:start="2527:33" pos:end="2527:49">gen_op_movl_T1_im</name><argument_list pos:start="2527:50" pos:end="2527:57">(<argument pos:start="2527:51" pos:end="2527:56"><expr pos:start="2527:51" pos:end="2527:56"><name pos:start="2527:51" pos:end="2527:56"><name pos:start="2527:51" pos:end="2527:52">dc</name><operator pos:start="2527:53" pos:end="2527:54">-&gt;</operator><name pos:start="2527:55" pos:end="2527:56">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2529:31" pos:end="2536:0">else <block pos:start="2529:36" pos:end="2536:0">{<block_content pos:start="2531:33" pos:end="2531:74">

                                <expr_stmt pos:start="2531:33" pos:end="2531:74"><expr pos:start="2531:33" pos:end="2531:73"><call pos:start="2531:33" pos:end="2531:73"><name pos:start="2531:33" pos:end="2531:51">gen_op_movq_T1_im64</name><argument_list pos:start="2531:52" pos:end="2531:73">(<argument pos:start="2531:53" pos:end="2531:64"><expr pos:start="2531:53" pos:end="2531:64"><name pos:start="2531:53" pos:end="2531:58"><name pos:start="2531:53" pos:end="2531:54">dc</name><operator pos:start="2531:55" pos:end="2531:56">-&gt;</operator><name pos:start="2531:57" pos:end="2531:58">pc</name></name> <operator pos:start="2531:60" pos:end="2531:61">&gt;&gt;</operator> <literal type="number" pos:start="2531:63" pos:end="2531:64">32</literal></expr></argument>, <argument pos:start="2531:67" pos:end="2531:72"><expr pos:start="2531:67" pos:end="2531:72"><name pos:start="2531:67" pos:end="2531:72"><name pos:start="2531:67" pos:end="2531:68">dc</name><operator pos:start="2531:69" pos:end="2531:70">-&gt;</operator><name pos:start="2531:71" pos:end="2531:72">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

<cpp:else pos:start="2535:1" pos:end="2535:5">#<cpp:directive pos:start="2535:2" pos:end="2535:5">else</cpp:directive></cpp:else>

			    <expr_stmt pos:start="2537:29" pos:end="2540:0"><expr pos:start="2537:29" pos:end="2537:53"><call pos:start="2537:29" pos:end="2537:53"><name pos:start="2537:29" pos:end="2537:45">gen_op_movl_T1_im</name><argument_list pos:start="2537:46" pos:end="2537:53">(<argument pos:start="2537:47" pos:end="2537:52"><expr pos:start="2537:47" pos:end="2537:52"><name pos:start="2537:47" pos:end="2537:52"><name pos:start="2537:47" pos:end="2537:48">dc</name><operator pos:start="2537:49" pos:end="2537:50">-&gt;</operator><name pos:start="2537:51" pos:end="2537:52">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="2539:1" pos:end="2539:6">#<cpp:directive pos:start="2539:2" pos:end="2539:6">endif</cpp:directive></cpp:endif>

			    <expr_stmt pos:start="2541:29" pos:end="2541:48"><expr pos:start="2541:29" pos:end="2541:47"><call pos:start="2541:29" pos:end="2541:47"><name pos:start="2541:29" pos:end="2541:43">gen_movl_T1_reg</name><argument_list pos:start="2541:44" pos:end="2541:47">(<argument pos:start="2541:45" pos:end="2541:46"><expr pos:start="2541:45" pos:end="2541:46"><name pos:start="2541:45" pos:end="2541:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			</block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2545:25" pos:end="2545:43"><expr pos:start="2545:25" pos:end="2545:42"><call pos:start="2545:25" pos:end="2545:42"><name pos:start="2545:25" pos:end="2545:38">gen_mov_pc_npc</name><argument_list pos:start="2545:39" pos:end="2545:42">(<argument pos:start="2545:40" pos:end="2545:41"><expr pos:start="2545:40" pos:end="2545:41"><name pos:start="2545:40" pos:end="2545:41">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="2547:25" pos:end="2547:45"><expr pos:start="2547:25" pos:end="2547:44"><call pos:start="2547:25" pos:end="2547:44"><name pos:start="2547:25" pos:end="2547:42">gen_op_movl_npc_T0</name><argument_list pos:start="2547:43" pos:end="2547:44">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="2549:25" pos:end="2549:45"><expr pos:start="2549:25" pos:end="2549:44"><name pos:start="2549:25" pos:end="2549:31"><name pos:start="2549:25" pos:end="2549:26">dc</name><operator pos:start="2549:27" pos:end="2549:28">-&gt;</operator><name pos:start="2549:29" pos:end="2549:31">npc</name></name> <operator pos:start="2549:33" pos:end="2549:33">=</operator> <name pos:start="2549:35" pos:end="2549:44">DYNAMIC_PC</name></expr>;</expr_stmt>

		    </block_content>}</block>

		    <goto pos:start="2553:21" pos:end="2556:0">goto <name pos:start="2553:26" pos:end="2553:33">jmp_insn</name>;</goto>

<cpp:if pos:start="2555:1" pos:end="2555:58">#<cpp:directive pos:start="2555:2" pos:end="2555:3">if</cpp:directive> <expr pos:start="2555:5" pos:end="2555:58"><operator pos:start="2555:5" pos:end="2555:5">!</operator><call pos:start="2555:6" pos:end="2555:30"><name pos:start="2555:6" pos:end="2555:12">defined</name><argument_list pos:start="2555:13" pos:end="2555:30">(<argument pos:start="2555:14" pos:end="2555:29"><expr pos:start="2555:14" pos:end="2555:29"><name pos:start="2555:14" pos:end="2555:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call> <operator pos:start="2555:32" pos:end="2555:33">&amp;&amp;</operator> <operator pos:start="2555:35" pos:end="2555:35">!</operator><call pos:start="2555:36" pos:end="2555:58"><name pos:start="2555:36" pos:end="2555:42">defined</name><argument_list pos:start="2555:43" pos:end="2555:58">(<argument pos:start="2555:44" pos:end="2555:57"><expr pos:start="2555:44" pos:end="2555:57"><name pos:start="2555:44" pos:end="2555:57">TARGET_SPARC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

		<case pos:start="2557:17" pos:end="2557:26">case <expr pos:start="2557:22" pos:end="2557:25"><literal type="number" pos:start="2557:22" pos:end="2557:25">0x39</literal></expr>:</case>	<comment type="block" pos:start="2557:33" pos:end="2557:53">/* rett, V9 return */</comment>

		    <block pos:start="2559:21" pos:end="2573:21">{<block_content pos:start="2561:25" pos:end="2571:38">

			<if_stmt pos:start="2561:25" pos:end="2563:43"><if pos:start="2561:25" pos:end="2563:43">if <condition pos:start="2561:28" pos:end="2561:44">(<expr pos:start="2561:29" pos:end="2561:43"><operator pos:start="2561:29" pos:end="2561:29">!</operator><call pos:start="2561:30" pos:end="2561:43"><name pos:start="2561:30" pos:end="2561:39">supervisor</name><argument_list pos:start="2561:40" pos:end="2561:43">(<argument pos:start="2561:41" pos:end="2561:42"><expr pos:start="2561:41" pos:end="2561:42"><name pos:start="2561:41" pos:end="2561:42">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2563:29" pos:end="2563:43"><block_content pos:start="2563:29" pos:end="2563:43">

			    <goto pos:start="2563:29" pos:end="2563:43">goto <name pos:start="2563:34" pos:end="2563:42">priv_insn</name>;</goto></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="2565:25" pos:end="2565:43"><expr pos:start="2565:25" pos:end="2565:42"><call pos:start="2565:25" pos:end="2565:42"><name pos:start="2565:25" pos:end="2565:38">gen_mov_pc_npc</name><argument_list pos:start="2565:39" pos:end="2565:42">(<argument pos:start="2565:40" pos:end="2565:41"><expr pos:start="2565:40" pos:end="2565:41"><name pos:start="2565:40" pos:end="2565:41">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="2567:25" pos:end="2567:45"><expr pos:start="2567:25" pos:end="2567:44"><call pos:start="2567:25" pos:end="2567:44"><name pos:start="2567:25" pos:end="2567:42">gen_op_movl_npc_T0</name><argument_list pos:start="2567:43" pos:end="2567:44">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="2569:25" pos:end="2569:45"><expr pos:start="2569:25" pos:end="2569:44"><name pos:start="2569:25" pos:end="2569:31"><name pos:start="2569:25" pos:end="2569:26">dc</name><operator pos:start="2569:27" pos:end="2569:28">-&gt;</operator><name pos:start="2569:29" pos:end="2569:31">npc</name></name> <operator pos:start="2569:33" pos:end="2569:33">=</operator> <name pos:start="2569:35" pos:end="2569:44">DYNAMIC_PC</name></expr>;</expr_stmt>

			<expr_stmt pos:start="2571:25" pos:end="2571:38"><expr pos:start="2571:25" pos:end="2571:37"><call pos:start="2571:25" pos:end="2571:37"><name pos:start="2571:25" pos:end="2571:35">gen_op_rett</name><argument_list pos:start="2571:36" pos:end="2571:37">()</argument_list></call></expr>;</expr_stmt>

		    </block_content>}</block>

		    <goto pos:start="2575:21" pos:end="2578:0">goto <name pos:start="2575:26" pos:end="2575:33">jmp_insn</name>;</goto>

<cpp:endif pos:start="2577:1" pos:end="2577:6">#<cpp:directive pos:start="2577:2" pos:end="2577:6">endif</cpp:directive></cpp:endif>

		<case pos:start="2579:17" pos:end="2579:26">case <expr pos:start="2579:22" pos:end="2579:25"><literal type="number" pos:start="2579:22" pos:end="2579:25">0x3b</literal></expr>:</case> <comment type="block" pos:start="2579:28" pos:end="2579:38">/* flush */</comment>

		    <expr_stmt pos:start="2581:21" pos:end="2581:38"><expr pos:start="2581:21" pos:end="2581:37"><call pos:start="2581:21" pos:end="2581:37"><name pos:start="2581:21" pos:end="2581:35">gen_op_flush_T0</name><argument_list pos:start="2581:36" pos:end="2581:37">()</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2583:21" pos:end="2583:26">break;</break>

		<case pos:start="2585:17" pos:end="2585:26">case <expr pos:start="2585:22" pos:end="2585:25"><literal type="number" pos:start="2585:22" pos:end="2585:25">0x3c</literal></expr>:</case>	<comment type="block" pos:start="2585:33" pos:end="2585:42">/* save */</comment>

		    <expr_stmt pos:start="2587:21" pos:end="2587:35"><expr pos:start="2587:21" pos:end="2587:34"><call pos:start="2587:21" pos:end="2587:34"><name pos:start="2587:21" pos:end="2587:30">save_state</name><argument_list pos:start="2587:31" pos:end="2587:34">(<argument pos:start="2587:32" pos:end="2587:33"><expr pos:start="2587:32" pos:end="2587:33"><name pos:start="2587:32" pos:end="2587:33">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="2589:21" pos:end="2589:34"><expr pos:start="2589:21" pos:end="2589:33"><call pos:start="2589:21" pos:end="2589:33"><name pos:start="2589:21" pos:end="2589:31">gen_op_save</name><argument_list pos:start="2589:32" pos:end="2589:33">()</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="2591:21" pos:end="2591:40"><expr pos:start="2591:21" pos:end="2591:39"><call pos:start="2591:21" pos:end="2591:39"><name pos:start="2591:21" pos:end="2591:35">gen_movl_T0_reg</name><argument_list pos:start="2591:36" pos:end="2591:39">(<argument pos:start="2591:37" pos:end="2591:38"><expr pos:start="2591:37" pos:end="2591:38"><name pos:start="2591:37" pos:end="2591:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2593:21" pos:end="2593:26">break;</break>

		<case pos:start="2595:17" pos:end="2595:26">case <expr pos:start="2595:22" pos:end="2595:25"><literal type="number" pos:start="2595:22" pos:end="2595:25">0x3d</literal></expr>:</case>	<comment type="block" pos:start="2595:33" pos:end="2595:45">/* restore */</comment>

		    <expr_stmt pos:start="2597:21" pos:end="2597:35"><expr pos:start="2597:21" pos:end="2597:34"><call pos:start="2597:21" pos:end="2597:34"><name pos:start="2597:21" pos:end="2597:30">save_state</name><argument_list pos:start="2597:31" pos:end="2597:34">(<argument pos:start="2597:32" pos:end="2597:33"><expr pos:start="2597:32" pos:end="2597:33"><name pos:start="2597:32" pos:end="2597:33">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="2599:21" pos:end="2599:37"><expr pos:start="2599:21" pos:end="2599:36"><call pos:start="2599:21" pos:end="2599:36"><name pos:start="2599:21" pos:end="2599:34">gen_op_restore</name><argument_list pos:start="2599:35" pos:end="2599:36">()</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="2601:21" pos:end="2601:40"><expr pos:start="2601:21" pos:end="2601:39"><call pos:start="2601:21" pos:end="2601:39"><name pos:start="2601:21" pos:end="2601:35">gen_movl_T0_reg</name><argument_list pos:start="2601:36" pos:end="2601:39">(<argument pos:start="2601:37" pos:end="2601:38"><expr pos:start="2601:37" pos:end="2601:38"><name pos:start="2601:37" pos:end="2601:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2603:21" pos:end="2606:0">break;</break>

<cpp:if pos:start="2605:1" pos:end="2605:57">#<cpp:directive pos:start="2605:2" pos:end="2605:3">if</cpp:directive> <expr pos:start="2605:5" pos:end="2605:57"><operator pos:start="2605:5" pos:end="2605:5">!</operator><call pos:start="2605:6" pos:end="2605:30"><name pos:start="2605:6" pos:end="2605:12">defined</name><argument_list pos:start="2605:13" pos:end="2605:30">(<argument pos:start="2605:14" pos:end="2605:29"><expr pos:start="2605:14" pos:end="2605:29"><name pos:start="2605:14" pos:end="2605:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call> <operator pos:start="2605:32" pos:end="2605:33">&amp;&amp;</operator> <call pos:start="2605:35" pos:end="2605:57"><name pos:start="2605:35" pos:end="2605:41">defined</name><argument_list pos:start="2605:42" pos:end="2605:57">(<argument pos:start="2605:43" pos:end="2605:56"><expr pos:start="2605:43" pos:end="2605:56"><name pos:start="2605:43" pos:end="2605:56">TARGET_SPARC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

		<case pos:start="2607:17" pos:end="2607:26">case <expr pos:start="2607:22" pos:end="2607:25"><literal type="number" pos:start="2607:22" pos:end="2607:25">0x3e</literal></expr>:</case>      <comment type="block" pos:start="2607:33" pos:end="2607:51">/* V9 done/retry */</comment>

		    <block pos:start="2609:21" pos:end="2646:21">{<block_content pos:start="2611:25" pos:end="2644:25">

			<switch pos:start="2611:25" pos:end="2644:25">switch <condition pos:start="2611:32" pos:end="2611:35">(<expr pos:start="2611:33" pos:end="2611:34"><name pos:start="2611:33" pos:end="2611:34">rd</name></expr>)</condition> <block pos:start="2611:37" pos:end="2644:25">{<block_content pos:start="2613:25" pos:end="2641:32">

			<case pos:start="2613:25" pos:end="2613:31">case <expr pos:start="2613:30" pos:end="2613:30"><literal type="number" pos:start="2613:30" pos:end="2613:30">0</literal></expr>:</case>

			    <if_stmt pos:start="2615:29" pos:end="2617:47"><if pos:start="2615:29" pos:end="2617:47">if <condition pos:start="2615:32" pos:end="2615:48">(<expr pos:start="2615:33" pos:end="2615:47"><operator pos:start="2615:33" pos:end="2615:33">!</operator><call pos:start="2615:34" pos:end="2615:47"><name pos:start="2615:34" pos:end="2615:43">supervisor</name><argument_list pos:start="2615:44" pos:end="2615:47">(<argument pos:start="2615:45" pos:end="2615:46"><expr pos:start="2615:45" pos:end="2615:46"><name pos:start="2615:45" pos:end="2615:46">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2617:33" pos:end="2617:47"><block_content pos:start="2617:33" pos:end="2617:47">

				<goto pos:start="2617:33" pos:end="2617:47">goto <name pos:start="2617:38" pos:end="2617:46">priv_insn</name>;</goto></block_content></block></if></if_stmt>

			    <expr_stmt pos:start="2619:29" pos:end="2619:49"><expr pos:start="2619:29" pos:end="2619:48"><name pos:start="2619:29" pos:end="2619:35"><name pos:start="2619:29" pos:end="2619:30">dc</name><operator pos:start="2619:31" pos:end="2619:32">-&gt;</operator><name pos:start="2619:33" pos:end="2619:35">npc</name></name> <operator pos:start="2619:37" pos:end="2619:37">=</operator> <name pos:start="2619:39" pos:end="2619:48">DYNAMIC_PC</name></expr>;</expr_stmt>

			    <expr_stmt pos:start="2621:29" pos:end="2621:48"><expr pos:start="2621:29" pos:end="2621:47"><name pos:start="2621:29" pos:end="2621:34"><name pos:start="2621:29" pos:end="2621:30">dc</name><operator pos:start="2621:31" pos:end="2621:32">-&gt;</operator><name pos:start="2621:33" pos:end="2621:34">pc</name></name> <operator pos:start="2621:36" pos:end="2621:36">=</operator> <name pos:start="2621:38" pos:end="2621:47">DYNAMIC_PC</name></expr>;</expr_stmt>

			    <expr_stmt pos:start="2623:29" pos:end="2623:42"><expr pos:start="2623:29" pos:end="2623:41"><call pos:start="2623:29" pos:end="2623:41"><name pos:start="2623:29" pos:end="2623:39">gen_op_done</name><argument_list pos:start="2623:40" pos:end="2623:41">()</argument_list></call></expr>;</expr_stmt>

			    <goto pos:start="2625:29" pos:end="2625:42">goto <name pos:start="2625:34" pos:end="2625:41">jmp_insn</name>;</goto>

			<case pos:start="2627:25" pos:end="2627:31">case <expr pos:start="2627:30" pos:end="2627:30"><literal type="number" pos:start="2627:30" pos:end="2627:30">1</literal></expr>:</case>

			    <if_stmt pos:start="2629:29" pos:end="2631:47"><if pos:start="2629:29" pos:end="2631:47">if <condition pos:start="2629:32" pos:end="2629:48">(<expr pos:start="2629:33" pos:end="2629:47"><operator pos:start="2629:33" pos:end="2629:33">!</operator><call pos:start="2629:34" pos:end="2629:47"><name pos:start="2629:34" pos:end="2629:43">supervisor</name><argument_list pos:start="2629:44" pos:end="2629:47">(<argument pos:start="2629:45" pos:end="2629:46"><expr pos:start="2629:45" pos:end="2629:46"><name pos:start="2629:45" pos:end="2629:46">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2631:33" pos:end="2631:47"><block_content pos:start="2631:33" pos:end="2631:47">

				<goto pos:start="2631:33" pos:end="2631:47">goto <name pos:start="2631:38" pos:end="2631:46">priv_insn</name>;</goto></block_content></block></if></if_stmt>

			    <expr_stmt pos:start="2633:29" pos:end="2633:49"><expr pos:start="2633:29" pos:end="2633:48"><name pos:start="2633:29" pos:end="2633:35"><name pos:start="2633:29" pos:end="2633:30">dc</name><operator pos:start="2633:31" pos:end="2633:32">-&gt;</operator><name pos:start="2633:33" pos:end="2633:35">npc</name></name> <operator pos:start="2633:37" pos:end="2633:37">=</operator> <name pos:start="2633:39" pos:end="2633:48">DYNAMIC_PC</name></expr>;</expr_stmt>

			    <expr_stmt pos:start="2635:29" pos:end="2635:48"><expr pos:start="2635:29" pos:end="2635:47"><name pos:start="2635:29" pos:end="2635:34"><name pos:start="2635:29" pos:end="2635:30">dc</name><operator pos:start="2635:31" pos:end="2635:32">-&gt;</operator><name pos:start="2635:33" pos:end="2635:34">pc</name></name> <operator pos:start="2635:36" pos:end="2635:36">=</operator> <name pos:start="2635:38" pos:end="2635:47">DYNAMIC_PC</name></expr>;</expr_stmt>

			    <expr_stmt pos:start="2637:29" pos:end="2637:43"><expr pos:start="2637:29" pos:end="2637:42"><call pos:start="2637:29" pos:end="2637:42"><name pos:start="2637:29" pos:end="2637:40">gen_op_retry</name><argument_list pos:start="2637:41" pos:end="2637:42">()</argument_list></call></expr>;</expr_stmt>

			    <goto pos:start="2639:29" pos:end="2639:42">goto <name pos:start="2639:34" pos:end="2639:41">jmp_insn</name>;</goto>

			<default pos:start="2641:25" pos:end="2641:32">default:</default>


			</block_content>}</block></switch>

		    </block_content>}</block>

		    <break pos:start="2648:21" pos:end="2651:0">break;</break>

<cpp:endif pos:start="2650:1" pos:end="2650:6">#<cpp:directive pos:start="2650:2" pos:end="2650:6">endif</cpp:directive></cpp:endif>

		<default pos:start="2652:17" pos:end="2652:24">default:</default>


		</block_content>}</block></switch>

            </block_content>}</block></else></if_stmt>

	    <break pos:start="2659:13" pos:end="2659:18">break;</break>

	</block_content>}</block>

	<break pos:start="2663:9" pos:end="2663:14">break;</break>

    <case pos:start="2665:5" pos:end="2665:11">case <expr pos:start="2665:10" pos:end="2665:10"><literal type="number" pos:start="2665:10" pos:end="2665:10">3</literal></expr>:</case>			<comment type="block" pos:start="2665:33" pos:end="2665:61">/* load/store instructions */</comment>

	<block pos:start="2667:9" pos:end="3304:9">{<block_content pos:start="2669:13" pos:end="3301:16">

	    <decl_stmt pos:start="2669:13" pos:end="2669:54"><decl pos:start="2669:13" pos:end="2669:53"><type pos:start="2669:13" pos:end="2669:24"><name pos:start="2669:13" pos:end="2669:20">unsigned</name> <name pos:start="2669:22" pos:end="2669:24">int</name></type> <name pos:start="2669:26" pos:end="2669:28">xop</name> <init pos:start="2669:30" pos:end="2669:53">= <expr pos:start="2669:32" pos:end="2669:53"><call pos:start="2669:32" pos:end="2669:53"><name pos:start="2669:32" pos:end="2669:40">GET_FIELD</name><argument_list pos:start="2669:41" pos:end="2669:53">(<argument pos:start="2669:42" pos:end="2669:45"><expr pos:start="2669:42" pos:end="2669:45"><name pos:start="2669:42" pos:end="2669:45">insn</name></expr></argument>, <argument pos:start="2669:48" pos:end="2669:48"><expr pos:start="2669:48" pos:end="2669:48"><literal type="number" pos:start="2669:48" pos:end="2669:48">7</literal></expr></argument>, <argument pos:start="2669:51" pos:end="2669:52"><expr pos:start="2669:51" pos:end="2669:52"><literal type="number" pos:start="2669:51" pos:end="2669:52">12</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	    <expr_stmt pos:start="2671:13" pos:end="2671:42"><expr pos:start="2671:13" pos:end="2671:41"><name pos:start="2671:13" pos:end="2671:15">rs1</name> <operator pos:start="2671:17" pos:end="2671:17">=</operator> <call pos:start="2671:19" pos:end="2671:41"><name pos:start="2671:19" pos:end="2671:27">GET_FIELD</name><argument_list pos:start="2671:28" pos:end="2671:41">(<argument pos:start="2671:29" pos:end="2671:32"><expr pos:start="2671:29" pos:end="2671:32"><name pos:start="2671:29" pos:end="2671:32">insn</name></expr></argument>, <argument pos:start="2671:35" pos:end="2671:36"><expr pos:start="2671:35" pos:end="2671:36"><literal type="number" pos:start="2671:35" pos:end="2671:36">13</literal></expr></argument>, <argument pos:start="2671:39" pos:end="2671:40"><expr pos:start="2671:39" pos:end="2671:40"><literal type="number" pos:start="2671:39" pos:end="2671:40">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="2673:13" pos:end="2673:33"><expr pos:start="2673:13" pos:end="2673:32"><call pos:start="2673:13" pos:end="2673:32"><name pos:start="2673:13" pos:end="2673:27">gen_movl_reg_T0</name><argument_list pos:start="2673:28" pos:end="2673:32">(<argument pos:start="2673:29" pos:end="2673:31"><expr pos:start="2673:29" pos:end="2673:31"><name pos:start="2673:29" pos:end="2673:31">rs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <if_stmt pos:start="2675:13" pos:end="2715:13"><if pos:start="2675:13" pos:end="2695:13">if <condition pos:start="2675:16" pos:end="2675:23">(<expr pos:start="2675:17" pos:end="2675:22"><name pos:start="2675:17" pos:end="2675:22">IS_IMM</name></expr>)</condition> <block pos:start="2675:25" pos:end="2695:13">{<block_content pos:start="2677:17" pos:end="2694:0">	<comment type="block" pos:start="2675:33" pos:end="2675:47">/* immediate */</comment>

		<expr_stmt pos:start="2677:17" pos:end="2680:0"><expr pos:start="2677:17" pos:end="2677:46"><name pos:start="2677:17" pos:end="2677:19">rs2</name> <operator pos:start="2677:21" pos:end="2677:21">=</operator> <call pos:start="2677:23" pos:end="2677:46"><name pos:start="2677:23" pos:end="2677:32">GET_FIELDs</name><argument_list pos:start="2677:33" pos:end="2677:46">(<argument pos:start="2677:34" pos:end="2677:37"><expr pos:start="2677:34" pos:end="2677:37"><name pos:start="2677:34" pos:end="2677:37">insn</name></expr></argument>, <argument pos:start="2677:40" pos:end="2677:41"><expr pos:start="2677:40" pos:end="2677:41"><literal type="number" pos:start="2677:40" pos:end="2677:41">19</literal></expr></argument>, <argument pos:start="2677:44" pos:end="2677:45"><expr pos:start="2677:44" pos:end="2677:45"><literal type="number" pos:start="2677:44" pos:end="2677:45">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="2679:1" pos:end="2679:18">#<cpp:directive pos:start="2679:2" pos:end="2679:3">if</cpp:directive> <expr pos:start="2679:5" pos:end="2679:18"><call pos:start="2679:5" pos:end="2679:18"><name pos:start="2679:5" pos:end="2679:11">defined</name><argument_list pos:start="2679:12" pos:end="2679:18">(<argument pos:start="2679:13" pos:end="2679:17"><expr pos:start="2679:13" pos:end="2679:17"><name pos:start="2679:13" pos:end="2679:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

		<if_stmt pos:start="2681:17" pos:end="2694:0"><if pos:start="2681:17" pos:end="2694:0">if <condition pos:start="2681:20" pos:end="2681:29">(<expr pos:start="2681:21" pos:end="2681:28"><name pos:start="2681:21" pos:end="2681:23">rs2</name> <operator pos:start="2681:25" pos:end="2681:26">!=</operator> <literal type="number" pos:start="2681:28" pos:end="2681:28">0</literal></expr>)</condition> <block pos:start="2681:31" pos:end="2694:0">{<block_content pos:start="2685:21" pos:end="2690:0">

<cpp:endif pos:start="2683:1" pos:end="2683:6">#<cpp:directive pos:start="2683:2" pos:end="2683:6">endif</cpp:directive></cpp:endif>

		    <expr_stmt pos:start="2685:21" pos:end="2685:42"><expr pos:start="2685:21" pos:end="2685:41"><call pos:start="2685:21" pos:end="2685:41"><name pos:start="2685:21" pos:end="2685:36">gen_movl_simm_T1</name><argument_list pos:start="2685:37" pos:end="2685:41">(<argument pos:start="2685:38" pos:end="2685:40"><expr pos:start="2685:38" pos:end="2685:40"><name pos:start="2685:38" pos:end="2685:40">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="2687:21" pos:end="2690:0"><expr pos:start="2687:21" pos:end="2687:38"><call pos:start="2687:21" pos:end="2687:38"><name pos:start="2687:21" pos:end="2687:36">gen_op_add_T1_T0</name><argument_list pos:start="2687:37" pos:end="2687:38">()</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="2689:1" pos:end="2689:18">#<cpp:directive pos:start="2689:2" pos:end="2689:3">if</cpp:directive> <expr pos:start="2689:5" pos:end="2689:18"><call pos:start="2689:5" pos:end="2689:18"><name pos:start="2689:5" pos:end="2689:11">defined</name><argument_list pos:start="2689:12" pos:end="2689:18">(<argument pos:start="2689:13" pos:end="2689:17"><expr pos:start="2689:13" pos:end="2689:17"><name pos:start="2689:13" pos:end="2689:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

		</block_content>}</block></if></if_stmt>

<cpp:endif pos:start="2693:1" pos:end="2693:6">#<cpp:directive pos:start="2693:2" pos:end="2693:6">endif</cpp:directive></cpp:endif>

	    </block_content>}</block></if> <else pos:start="2695:15" pos:end="2715:13">else <block pos:start="2695:20" pos:end="2715:13">{<block_content pos:start="2697:17" pos:end="2714:0">		<comment type="block" pos:start="2695:33" pos:end="2695:46">/* register */</comment>

		<expr_stmt pos:start="2697:17" pos:end="2700:0"><expr pos:start="2697:17" pos:end="2697:45"><name pos:start="2697:17" pos:end="2697:19">rs2</name> <operator pos:start="2697:21" pos:end="2697:21">=</operator> <call pos:start="2697:23" pos:end="2697:45"><name pos:start="2697:23" pos:end="2697:31">GET_FIELD</name><argument_list pos:start="2697:32" pos:end="2697:45">(<argument pos:start="2697:33" pos:end="2697:36"><expr pos:start="2697:33" pos:end="2697:36"><name pos:start="2697:33" pos:end="2697:36">insn</name></expr></argument>, <argument pos:start="2697:39" pos:end="2697:40"><expr pos:start="2697:39" pos:end="2697:40"><literal type="number" pos:start="2697:39" pos:end="2697:40">27</literal></expr></argument>, <argument pos:start="2697:43" pos:end="2697:44"><expr pos:start="2697:43" pos:end="2697:44"><literal type="number" pos:start="2697:43" pos:end="2697:44">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="2699:1" pos:end="2699:18">#<cpp:directive pos:start="2699:2" pos:end="2699:3">if</cpp:directive> <expr pos:start="2699:5" pos:end="2699:18"><call pos:start="2699:5" pos:end="2699:18"><name pos:start="2699:5" pos:end="2699:11">defined</name><argument_list pos:start="2699:12" pos:end="2699:18">(<argument pos:start="2699:13" pos:end="2699:17"><expr pos:start="2699:13" pos:end="2699:17"><name pos:start="2699:13" pos:end="2699:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

		<if_stmt pos:start="2701:17" pos:end="2714:0"><if pos:start="2701:17" pos:end="2714:0">if <condition pos:start="2701:20" pos:end="2701:29">(<expr pos:start="2701:21" pos:end="2701:28"><name pos:start="2701:21" pos:end="2701:23">rs2</name> <operator pos:start="2701:25" pos:end="2701:26">!=</operator> <literal type="number" pos:start="2701:28" pos:end="2701:28">0</literal></expr>)</condition> <block pos:start="2701:31" pos:end="2714:0">{<block_content pos:start="2705:21" pos:end="2710:0">

<cpp:endif pos:start="2703:1" pos:end="2703:6">#<cpp:directive pos:start="2703:2" pos:end="2703:6">endif</cpp:directive></cpp:endif>

		    <expr_stmt pos:start="2705:21" pos:end="2705:41"><expr pos:start="2705:21" pos:end="2705:40"><call pos:start="2705:21" pos:end="2705:40"><name pos:start="2705:21" pos:end="2705:35">gen_movl_reg_T1</name><argument_list pos:start="2705:36" pos:end="2705:40">(<argument pos:start="2705:37" pos:end="2705:39"><expr pos:start="2705:37" pos:end="2705:39"><name pos:start="2705:37" pos:end="2705:39">rs2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="2707:21" pos:end="2710:0"><expr pos:start="2707:21" pos:end="2707:38"><call pos:start="2707:21" pos:end="2707:38"><name pos:start="2707:21" pos:end="2707:36">gen_op_add_T1_T0</name><argument_list pos:start="2707:37" pos:end="2707:38">()</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="2709:1" pos:end="2709:18">#<cpp:directive pos:start="2709:2" pos:end="2709:3">if</cpp:directive> <expr pos:start="2709:5" pos:end="2709:18"><call pos:start="2709:5" pos:end="2709:18"><name pos:start="2709:5" pos:end="2709:11">defined</name><argument_list pos:start="2709:12" pos:end="2709:18">(<argument pos:start="2709:13" pos:end="2709:17"><expr pos:start="2709:13" pos:end="2709:17"><name pos:start="2709:13" pos:end="2709:17">OPTIM</name></expr></argument>)</argument_list></call></expr></cpp:if>

		</block_content>}</block></if></if_stmt>

<cpp:endif pos:start="2713:1" pos:end="2713:6">#<cpp:directive pos:start="2713:2" pos:end="2713:6">endif</cpp:directive></cpp:endif>

	    </block_content>}</block></else></if_stmt>

	    <if_stmt pos:start="2717:13" pos:end="3301:16"><if pos:start="2717:13" pos:end="3036:13">if <condition pos:start="2717:16" pos:end="2721:62">(<expr pos:start="2717:17" pos:end="2721:61"><name pos:start="2717:17" pos:end="2717:19">xop</name> <operator pos:start="2717:21" pos:end="2717:21">&lt;</operator> <literal type="number" pos:start="2717:23" pos:end="2717:23">4</literal> <operator pos:start="2717:25" pos:end="2717:26">||</operator> <operator pos:start="2717:28" pos:end="2717:28">(</operator><name pos:start="2717:29" pos:end="2717:31">xop</name> <operator pos:start="2717:33" pos:end="2717:33">&gt;</operator> <literal type="number" pos:start="2717:35" pos:end="2717:35">7</literal> <operator pos:start="2717:37" pos:end="2717:38">&amp;&amp;</operator> <name pos:start="2717:40" pos:end="2717:42">xop</name> <operator pos:start="2717:44" pos:end="2717:44">&lt;</operator> <literal type="number" pos:start="2717:46" pos:end="2717:49">0x14</literal> <operator pos:start="2717:51" pos:end="2717:52">&amp;&amp;</operator> <name pos:start="2717:54" pos:end="2717:56">xop</name> <operator pos:start="2717:58" pos:end="2717:59">!=</operator> <literal type="number" pos:start="2717:61" pos:end="2717:64">0x0e</literal><operator pos:start="2717:65" pos:end="2717:65">)</operator> <operator pos:start="2717:67" pos:end="2717:68">||</operator> \

		    <operator pos:start="2719:21" pos:end="2719:21">(</operator><name pos:start="2719:22" pos:end="2719:24">xop</name> <operator pos:start="2719:26" pos:end="2719:26">&gt;</operator> <literal type="number" pos:start="2719:28" pos:end="2719:31">0x17</literal> <operator pos:start="2719:33" pos:end="2719:34">&amp;&amp;</operator> <name pos:start="2719:36" pos:end="2719:38">xop</name> <operator pos:start="2719:40" pos:end="2719:40">&lt;</operator> <literal type="number" pos:start="2719:42" pos:end="2719:45">0x1d</literal> <operator pos:start="2719:47" pos:end="2719:47">)</operator> <operator pos:start="2719:49" pos:end="2719:50">||</operator> \

		    <operator pos:start="2721:21" pos:end="2721:21">(</operator><name pos:start="2721:22" pos:end="2721:24">xop</name> <operator pos:start="2721:26" pos:end="2721:26">&gt;</operator> <literal type="number" pos:start="2721:28" pos:end="2721:31">0x2c</literal> <operator pos:start="2721:33" pos:end="2721:34">&amp;&amp;</operator> <name pos:start="2721:36" pos:end="2721:38">xop</name> <operator pos:start="2721:40" pos:end="2721:40">&lt;</operator> <literal type="number" pos:start="2721:42" pos:end="2721:45">0x33</literal><operator pos:start="2721:46" pos:end="2721:46">)</operator> <operator pos:start="2721:48" pos:end="2721:49">||</operator> <name pos:start="2721:51" pos:end="2721:53">xop</name> <operator pos:start="2721:55" pos:end="2721:56">==</operator> <literal type="number" pos:start="2721:58" pos:end="2721:61">0x1f</literal></expr>)</condition> <block pos:start="2721:64" pos:end="3036:13">{<block_content pos:start="2723:17" pos:end="3035:0">

		<switch pos:start="2723:17" pos:end="3026:17">switch <condition pos:start="2723:24" pos:end="2723:28">(<expr pos:start="2723:25" pos:end="2723:27"><name pos:start="2723:25" pos:end="2723:27">xop</name></expr>)</condition> <block pos:start="2723:30" pos:end="3026:17">{<block_content pos:start="2725:17" pos:end="3023:24">

		<case pos:start="2725:17" pos:end="2725:25">case <expr pos:start="2725:22" pos:end="2725:24"><literal type="number" pos:start="2725:22" pos:end="2725:24">0x0</literal></expr>:</case>	<comment type="block" pos:start="2725:33" pos:end="2725:47">/* load word */</comment>

		    <expr_stmt pos:start="2727:21" pos:end="2727:36"><expr pos:start="2727:21" pos:end="2727:35"><call pos:start="2727:21" pos:end="2727:35"><name pos:start="2727:21" pos:end="2727:31">gen_op_ldst</name><argument_list pos:start="2727:32" pos:end="2727:35">(<argument pos:start="2727:33" pos:end="2727:34"><expr pos:start="2727:33" pos:end="2727:34"><name pos:start="2727:33" pos:end="2727:34">ld</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2729:21" pos:end="2729:26">break;</break>

		<case pos:start="2731:17" pos:end="2731:25">case <expr pos:start="2731:22" pos:end="2731:24"><literal type="number" pos:start="2731:22" pos:end="2731:24">0x1</literal></expr>:</case>	<comment type="block" pos:start="2731:33" pos:end="2731:56">/* load unsigned byte */</comment>

		    <expr_stmt pos:start="2733:21" pos:end="2733:38"><expr pos:start="2733:21" pos:end="2733:37"><call pos:start="2733:21" pos:end="2733:37"><name pos:start="2733:21" pos:end="2733:31">gen_op_ldst</name><argument_list pos:start="2733:32" pos:end="2733:37">(<argument pos:start="2733:33" pos:end="2733:36"><expr pos:start="2733:33" pos:end="2733:36"><name pos:start="2733:33" pos:end="2733:36">ldub</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2735:21" pos:end="2735:26">break;</break>

		<case pos:start="2737:17" pos:end="2737:25">case <expr pos:start="2737:22" pos:end="2737:24"><literal type="number" pos:start="2737:22" pos:end="2737:24">0x2</literal></expr>:</case>	<comment type="block" pos:start="2737:33" pos:end="2737:60">/* load unsigned halfword */</comment>

		    <expr_stmt pos:start="2739:21" pos:end="2739:38"><expr pos:start="2739:21" pos:end="2739:37"><call pos:start="2739:21" pos:end="2739:37"><name pos:start="2739:21" pos:end="2739:31">gen_op_ldst</name><argument_list pos:start="2739:32" pos:end="2739:37">(<argument pos:start="2739:33" pos:end="2739:36"><expr pos:start="2739:33" pos:end="2739:36"><name pos:start="2739:33" pos:end="2739:36">lduh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2741:21" pos:end="2741:26">break;</break>

		<case pos:start="2743:17" pos:end="2743:25">case <expr pos:start="2743:22" pos:end="2743:24"><literal type="number" pos:start="2743:22" pos:end="2743:24">0x3</literal></expr>:</case>	<comment type="block" pos:start="2743:33" pos:end="2743:54">/* load double word */</comment>



		    <expr_stmt pos:start="2747:21" pos:end="2747:37"><expr pos:start="2747:21" pos:end="2747:36"><call pos:start="2747:21" pos:end="2747:36"><name pos:start="2747:21" pos:end="2747:31">gen_op_ldst</name><argument_list pos:start="2747:32" pos:end="2747:36">(<argument pos:start="2747:33" pos:end="2747:35"><expr pos:start="2747:33" pos:end="2747:35"><name pos:start="2747:33" pos:end="2747:35">ldd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="2749:21" pos:end="2749:44"><expr pos:start="2749:21" pos:end="2749:43"><call pos:start="2749:21" pos:end="2749:43"><name pos:start="2749:21" pos:end="2749:35">gen_movl_T0_reg</name><argument_list pos:start="2749:36" pos:end="2749:43">(<argument pos:start="2749:37" pos:end="2749:42"><expr pos:start="2749:37" pos:end="2749:42"><name pos:start="2749:37" pos:end="2749:38">rd</name> <operator pos:start="2749:40" pos:end="2749:40">+</operator> <literal type="number" pos:start="2749:42" pos:end="2749:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2751:21" pos:end="2751:26">break;</break>

		<case pos:start="2753:17" pos:end="2753:25">case <expr pos:start="2753:22" pos:end="2753:24"><literal type="number" pos:start="2753:22" pos:end="2753:24">0x9</literal></expr>:</case>	<comment type="block" pos:start="2753:33" pos:end="2753:54">/* load signed byte */</comment>

		    <expr_stmt pos:start="2755:21" pos:end="2755:38"><expr pos:start="2755:21" pos:end="2755:37"><call pos:start="2755:21" pos:end="2755:37"><name pos:start="2755:21" pos:end="2755:31">gen_op_ldst</name><argument_list pos:start="2755:32" pos:end="2755:37">(<argument pos:start="2755:33" pos:end="2755:36"><expr pos:start="2755:33" pos:end="2755:36"><name pos:start="2755:33" pos:end="2755:36">ldsb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2757:21" pos:end="2757:26">break;</break>

		<case pos:start="2759:17" pos:end="2759:25">case <expr pos:start="2759:22" pos:end="2759:24"><literal type="number" pos:start="2759:22" pos:end="2759:24">0xa</literal></expr>:</case>	<comment type="block" pos:start="2759:33" pos:end="2759:58">/* load signed halfword */</comment>

		    <expr_stmt pos:start="2761:21" pos:end="2761:38"><expr pos:start="2761:21" pos:end="2761:37"><call pos:start="2761:21" pos:end="2761:37"><name pos:start="2761:21" pos:end="2761:31">gen_op_ldst</name><argument_list pos:start="2761:32" pos:end="2761:37">(<argument pos:start="2761:33" pos:end="2761:36"><expr pos:start="2761:33" pos:end="2761:36"><name pos:start="2761:33" pos:end="2761:36">ldsh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2763:21" pos:end="2763:26">break;</break>

		<case pos:start="2765:17" pos:end="2765:25">case <expr pos:start="2765:22" pos:end="2765:24"><literal type="number" pos:start="2765:22" pos:end="2765:24">0xd</literal></expr>:</case>	<comment type="block" pos:start="2765:33" pos:end="2765:73">/* ldstub -- XXX: should be atomically */</comment>

		    <expr_stmt pos:start="2767:21" pos:end="2767:40"><expr pos:start="2767:21" pos:end="2767:39"><call pos:start="2767:21" pos:end="2767:39"><name pos:start="2767:21" pos:end="2767:31">gen_op_ldst</name><argument_list pos:start="2767:32" pos:end="2767:39">(<argument pos:start="2767:33" pos:end="2767:38"><expr pos:start="2767:33" pos:end="2767:38"><name pos:start="2767:33" pos:end="2767:38">ldstub</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2769:21" pos:end="2769:26">break;</break>

		<case pos:start="2771:17" pos:end="2771:26">case <expr pos:start="2771:22" pos:end="2771:25"><literal type="number" pos:start="2771:22" pos:end="2771:25">0x0f</literal></expr>:</case>	<comment type="block" pos:start="2771:33" pos:end="2771:80">/* swap register with memory. Also atomically */</comment>

		    <expr_stmt pos:start="2773:21" pos:end="2773:40"><expr pos:start="2773:21" pos:end="2773:39"><call pos:start="2773:21" pos:end="2773:39"><name pos:start="2773:21" pos:end="2773:35">gen_movl_reg_T1</name><argument_list pos:start="2773:36" pos:end="2773:39">(<argument pos:start="2773:37" pos:end="2773:38"><expr pos:start="2773:37" pos:end="2773:38"><name pos:start="2773:37" pos:end="2773:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="2775:21" pos:end="2775:38"><expr pos:start="2775:21" pos:end="2775:37"><call pos:start="2775:21" pos:end="2775:37"><name pos:start="2775:21" pos:end="2775:31">gen_op_ldst</name><argument_list pos:start="2775:32" pos:end="2775:37">(<argument pos:start="2775:33" pos:end="2775:36"><expr pos:start="2775:33" pos:end="2775:36"><name pos:start="2775:33" pos:end="2775:36">swap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2777:21" pos:end="2780:0">break;</break>

<cpp:if pos:start="2779:1" pos:end="2779:57">#<cpp:directive pos:start="2779:2" pos:end="2779:3">if</cpp:directive> <expr pos:start="2779:5" pos:end="2779:57"><operator pos:start="2779:5" pos:end="2779:5">!</operator><call pos:start="2779:6" pos:end="2779:30"><name pos:start="2779:6" pos:end="2779:12">defined</name><argument_list pos:start="2779:13" pos:end="2779:30">(<argument pos:start="2779:14" pos:end="2779:29"><expr pos:start="2779:14" pos:end="2779:29"><name pos:start="2779:14" pos:end="2779:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call> <operator pos:start="2779:32" pos:end="2779:33">||</operator> <call pos:start="2779:35" pos:end="2779:57"><name pos:start="2779:35" pos:end="2779:41">defined</name><argument_list pos:start="2779:42" pos:end="2779:57">(<argument pos:start="2779:43" pos:end="2779:56"><expr pos:start="2779:43" pos:end="2779:56"><name pos:start="2779:43" pos:end="2779:56">TARGET_SPARC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

		<case pos:start="2781:17" pos:end="2784:0">case <expr pos:start="2781:22" pos:end="2781:25"><literal type="number" pos:start="2781:22" pos:end="2781:25">0x10</literal></expr>:</case>	<comment type="block" pos:start="2781:33" pos:end="2781:57">/* load word alternate */</comment>

<cpp:ifndef pos:start="2783:1" pos:end="2783:22">#<cpp:directive pos:start="2783:2" pos:end="2783:7">ifndef</cpp:directive> <name pos:start="2783:9" pos:end="2783:22">TARGET_SPARC64</name></cpp:ifndef>

		    <if_stmt pos:start="2785:21" pos:end="2793:0"><if pos:start="2785:21" pos:end="2793:0">if <condition pos:start="2785:24" pos:end="2785:31">(<expr pos:start="2785:25" pos:end="2785:30"><name pos:start="2785:25" pos:end="2785:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="2788:21" pos:end="2793:0"><block_content pos:start="2788:21" pos:end="2793:0">


		    <if_stmt pos:start="2788:21" pos:end="2793:0"><if pos:start="2788:21" pos:end="2793:0">if <condition pos:start="2788:24" pos:end="2788:40">(<expr pos:start="2788:25" pos:end="2788:39"><operator pos:start="2788:25" pos:end="2788:25">!</operator><call pos:start="2788:26" pos:end="2788:39"><name pos:start="2788:26" pos:end="2788:35">supervisor</name><argument_list pos:start="2788:36" pos:end="2788:39">(<argument pos:start="2788:37" pos:end="2788:38"><expr pos:start="2788:37" pos:end="2788:38"><name pos:start="2788:37" pos:end="2788:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2790:25" pos:end="2793:0"><block_content pos:start="2790:25" pos:end="2793:0">

			<goto pos:start="2790:25" pos:end="2793:0">goto <name pos:start="2790:30" pos:end="2790:38">priv_insn</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="2792:1" pos:end="2792:6">#<cpp:directive pos:start="2792:2" pos:end="2792:6">endif</cpp:directive></cpp:endif>

		    <expr_stmt pos:start="2794:21" pos:end="2794:46"><expr pos:start="2794:21" pos:end="2794:45"><call pos:start="2794:21" pos:end="2794:45"><name pos:start="2794:21" pos:end="2794:30">gen_op_lda</name><argument_list pos:start="2794:31" pos:end="2794:45">(<argument pos:start="2794:32" pos:end="2794:35"><expr pos:start="2794:32" pos:end="2794:35"><name pos:start="2794:32" pos:end="2794:35">insn</name></expr></argument>, <argument pos:start="2794:38" pos:end="2794:38"><expr pos:start="2794:38" pos:end="2794:38"><literal type="number" pos:start="2794:38" pos:end="2794:38">1</literal></expr></argument>, <argument pos:start="2794:41" pos:end="2794:41"><expr pos:start="2794:41" pos:end="2794:41"><literal type="number" pos:start="2794:41" pos:end="2794:41">4</literal></expr></argument>, <argument pos:start="2794:44" pos:end="2794:44"><expr pos:start="2794:44" pos:end="2794:44"><literal type="number" pos:start="2794:44" pos:end="2794:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2796:21" pos:end="2796:26">break;</break>

		<case pos:start="2798:17" pos:end="2801:0">case <expr pos:start="2798:22" pos:end="2798:25"><literal type="number" pos:start="2798:22" pos:end="2798:25">0x11</literal></expr>:</case>	<comment type="block" pos:start="2798:33" pos:end="2798:66">/* load unsigned byte alternate */</comment>

<cpp:ifndef pos:start="2800:1" pos:end="2800:22">#<cpp:directive pos:start="2800:2" pos:end="2800:7">ifndef</cpp:directive> <name pos:start="2800:9" pos:end="2800:22">TARGET_SPARC64</name></cpp:ifndef>

		    <if_stmt pos:start="2802:21" pos:end="2810:0"><if pos:start="2802:21" pos:end="2810:0">if <condition pos:start="2802:24" pos:end="2802:31">(<expr pos:start="2802:25" pos:end="2802:30"><name pos:start="2802:25" pos:end="2802:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="2805:21" pos:end="2810:0"><block_content pos:start="2805:21" pos:end="2810:0">


		    <if_stmt pos:start="2805:21" pos:end="2810:0"><if pos:start="2805:21" pos:end="2810:0">if <condition pos:start="2805:24" pos:end="2805:40">(<expr pos:start="2805:25" pos:end="2805:39"><operator pos:start="2805:25" pos:end="2805:25">!</operator><call pos:start="2805:26" pos:end="2805:39"><name pos:start="2805:26" pos:end="2805:35">supervisor</name><argument_list pos:start="2805:36" pos:end="2805:39">(<argument pos:start="2805:37" pos:end="2805:38"><expr pos:start="2805:37" pos:end="2805:38"><name pos:start="2805:37" pos:end="2805:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2807:25" pos:end="2810:0"><block_content pos:start="2807:25" pos:end="2810:0">

			<goto pos:start="2807:25" pos:end="2810:0">goto <name pos:start="2807:30" pos:end="2807:38">priv_insn</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="2809:1" pos:end="2809:6">#<cpp:directive pos:start="2809:2" pos:end="2809:6">endif</cpp:directive></cpp:endif>

		    <expr_stmt pos:start="2811:21" pos:end="2811:48"><expr pos:start="2811:21" pos:end="2811:47"><call pos:start="2811:21" pos:end="2811:47"><name pos:start="2811:21" pos:end="2811:32">gen_op_lduba</name><argument_list pos:start="2811:33" pos:end="2811:47">(<argument pos:start="2811:34" pos:end="2811:37"><expr pos:start="2811:34" pos:end="2811:37"><name pos:start="2811:34" pos:end="2811:37">insn</name></expr></argument>, <argument pos:start="2811:40" pos:end="2811:40"><expr pos:start="2811:40" pos:end="2811:40"><literal type="number" pos:start="2811:40" pos:end="2811:40">1</literal></expr></argument>, <argument pos:start="2811:43" pos:end="2811:43"><expr pos:start="2811:43" pos:end="2811:43"><literal type="number" pos:start="2811:43" pos:end="2811:43">1</literal></expr></argument>, <argument pos:start="2811:46" pos:end="2811:46"><expr pos:start="2811:46" pos:end="2811:46"><literal type="number" pos:start="2811:46" pos:end="2811:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2813:21" pos:end="2813:26">break;</break>

		<case pos:start="2815:17" pos:end="2818:0">case <expr pos:start="2815:22" pos:end="2815:25"><literal type="number" pos:start="2815:22" pos:end="2815:25">0x12</literal></expr>:</case>	<comment type="block" pos:start="2815:33" pos:end="2815:70">/* load unsigned halfword alternate */</comment>

<cpp:ifndef pos:start="2817:1" pos:end="2817:22">#<cpp:directive pos:start="2817:2" pos:end="2817:7">ifndef</cpp:directive> <name pos:start="2817:9" pos:end="2817:22">TARGET_SPARC64</name></cpp:ifndef>

		    <if_stmt pos:start="2819:21" pos:end="2827:0"><if pos:start="2819:21" pos:end="2827:0">if <condition pos:start="2819:24" pos:end="2819:31">(<expr pos:start="2819:25" pos:end="2819:30"><name pos:start="2819:25" pos:end="2819:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="2822:21" pos:end="2827:0"><block_content pos:start="2822:21" pos:end="2827:0">


		    <if_stmt pos:start="2822:21" pos:end="2827:0"><if pos:start="2822:21" pos:end="2827:0">if <condition pos:start="2822:24" pos:end="2822:40">(<expr pos:start="2822:25" pos:end="2822:39"><operator pos:start="2822:25" pos:end="2822:25">!</operator><call pos:start="2822:26" pos:end="2822:39"><name pos:start="2822:26" pos:end="2822:35">supervisor</name><argument_list pos:start="2822:36" pos:end="2822:39">(<argument pos:start="2822:37" pos:end="2822:38"><expr pos:start="2822:37" pos:end="2822:38"><name pos:start="2822:37" pos:end="2822:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2824:25" pos:end="2827:0"><block_content pos:start="2824:25" pos:end="2827:0">

			<goto pos:start="2824:25" pos:end="2827:0">goto <name pos:start="2824:30" pos:end="2824:38">priv_insn</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="2826:1" pos:end="2826:6">#<cpp:directive pos:start="2826:2" pos:end="2826:6">endif</cpp:directive></cpp:endif>

		    <expr_stmt pos:start="2828:21" pos:end="2828:48"><expr pos:start="2828:21" pos:end="2828:47"><call pos:start="2828:21" pos:end="2828:47"><name pos:start="2828:21" pos:end="2828:32">gen_op_lduha</name><argument_list pos:start="2828:33" pos:end="2828:47">(<argument pos:start="2828:34" pos:end="2828:37"><expr pos:start="2828:34" pos:end="2828:37"><name pos:start="2828:34" pos:end="2828:37">insn</name></expr></argument>, <argument pos:start="2828:40" pos:end="2828:40"><expr pos:start="2828:40" pos:end="2828:40"><literal type="number" pos:start="2828:40" pos:end="2828:40">1</literal></expr></argument>, <argument pos:start="2828:43" pos:end="2828:43"><expr pos:start="2828:43" pos:end="2828:43"><literal type="number" pos:start="2828:43" pos:end="2828:43">2</literal></expr></argument>, <argument pos:start="2828:46" pos:end="2828:46"><expr pos:start="2828:46" pos:end="2828:46"><literal type="number" pos:start="2828:46" pos:end="2828:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2830:21" pos:end="2830:26">break;</break>

		<case pos:start="2832:17" pos:end="2835:0">case <expr pos:start="2832:22" pos:end="2832:25"><literal type="number" pos:start="2832:22" pos:end="2832:25">0x13</literal></expr>:</case>	<comment type="block" pos:start="2832:33" pos:end="2832:64">/* load double word alternate */</comment>

<cpp:ifndef pos:start="2834:1" pos:end="2834:22">#<cpp:directive pos:start="2834:2" pos:end="2834:7">ifndef</cpp:directive> <name pos:start="2834:9" pos:end="2834:22">TARGET_SPARC64</name></cpp:ifndef>

		    <if_stmt pos:start="2836:21" pos:end="2844:0"><if pos:start="2836:21" pos:end="2844:0">if <condition pos:start="2836:24" pos:end="2836:31">(<expr pos:start="2836:25" pos:end="2836:30"><name pos:start="2836:25" pos:end="2836:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="2839:21" pos:end="2844:0"><block_content pos:start="2839:21" pos:end="2844:0">


		    <if_stmt pos:start="2839:21" pos:end="2844:0"><if pos:start="2839:21" pos:end="2844:0">if <condition pos:start="2839:24" pos:end="2839:40">(<expr pos:start="2839:25" pos:end="2839:39"><operator pos:start="2839:25" pos:end="2839:25">!</operator><call pos:start="2839:26" pos:end="2839:39"><name pos:start="2839:26" pos:end="2839:35">supervisor</name><argument_list pos:start="2839:36" pos:end="2839:39">(<argument pos:start="2839:37" pos:end="2839:38"><expr pos:start="2839:37" pos:end="2839:38"><name pos:start="2839:37" pos:end="2839:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2841:25" pos:end="2844:0"><block_content pos:start="2841:25" pos:end="2844:0">

			<goto pos:start="2841:25" pos:end="2844:0">goto <name pos:start="2841:30" pos:end="2841:38">priv_insn</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="2843:1" pos:end="2843:6">#<cpp:directive pos:start="2843:2" pos:end="2843:6">endif</cpp:directive></cpp:endif>



		    <expr_stmt pos:start="2847:21" pos:end="2847:47"><expr pos:start="2847:21" pos:end="2847:46"><call pos:start="2847:21" pos:end="2847:46"><name pos:start="2847:21" pos:end="2847:31">gen_op_ldda</name><argument_list pos:start="2847:32" pos:end="2847:46">(<argument pos:start="2847:33" pos:end="2847:36"><expr pos:start="2847:33" pos:end="2847:36"><name pos:start="2847:33" pos:end="2847:36">insn</name></expr></argument>, <argument pos:start="2847:39" pos:end="2847:39"><expr pos:start="2847:39" pos:end="2847:39"><literal type="number" pos:start="2847:39" pos:end="2847:39">1</literal></expr></argument>, <argument pos:start="2847:42" pos:end="2847:42"><expr pos:start="2847:42" pos:end="2847:42"><literal type="number" pos:start="2847:42" pos:end="2847:42">8</literal></expr></argument>, <argument pos:start="2847:45" pos:end="2847:45"><expr pos:start="2847:45" pos:end="2847:45"><literal type="number" pos:start="2847:45" pos:end="2847:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="2849:21" pos:end="2849:44"><expr pos:start="2849:21" pos:end="2849:43"><call pos:start="2849:21" pos:end="2849:43"><name pos:start="2849:21" pos:end="2849:35">gen_movl_T0_reg</name><argument_list pos:start="2849:36" pos:end="2849:43">(<argument pos:start="2849:37" pos:end="2849:42"><expr pos:start="2849:37" pos:end="2849:42"><name pos:start="2849:37" pos:end="2849:38">rd</name> <operator pos:start="2849:40" pos:end="2849:40">+</operator> <literal type="number" pos:start="2849:42" pos:end="2849:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2851:21" pos:end="2851:26">break;</break>

		<case pos:start="2853:17" pos:end="2856:0">case <expr pos:start="2853:22" pos:end="2853:25"><literal type="number" pos:start="2853:22" pos:end="2853:25">0x19</literal></expr>:</case>	<comment type="block" pos:start="2853:33" pos:end="2853:64">/* load signed byte alternate */</comment>

<cpp:ifndef pos:start="2855:1" pos:end="2855:22">#<cpp:directive pos:start="2855:2" pos:end="2855:7">ifndef</cpp:directive> <name pos:start="2855:9" pos:end="2855:22">TARGET_SPARC64</name></cpp:ifndef>

		    <if_stmt pos:start="2857:21" pos:end="2865:0"><if pos:start="2857:21" pos:end="2865:0">if <condition pos:start="2857:24" pos:end="2857:31">(<expr pos:start="2857:25" pos:end="2857:30"><name pos:start="2857:25" pos:end="2857:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="2860:21" pos:end="2865:0"><block_content pos:start="2860:21" pos:end="2865:0">


		    <if_stmt pos:start="2860:21" pos:end="2865:0"><if pos:start="2860:21" pos:end="2865:0">if <condition pos:start="2860:24" pos:end="2860:40">(<expr pos:start="2860:25" pos:end="2860:39"><operator pos:start="2860:25" pos:end="2860:25">!</operator><call pos:start="2860:26" pos:end="2860:39"><name pos:start="2860:26" pos:end="2860:35">supervisor</name><argument_list pos:start="2860:36" pos:end="2860:39">(<argument pos:start="2860:37" pos:end="2860:38"><expr pos:start="2860:37" pos:end="2860:38"><name pos:start="2860:37" pos:end="2860:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2862:25" pos:end="2865:0"><block_content pos:start="2862:25" pos:end="2865:0">

			<goto pos:start="2862:25" pos:end="2865:0">goto <name pos:start="2862:30" pos:end="2862:38">priv_insn</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="2864:1" pos:end="2864:6">#<cpp:directive pos:start="2864:2" pos:end="2864:6">endif</cpp:directive></cpp:endif>

		    <expr_stmt pos:start="2866:21" pos:end="2866:48"><expr pos:start="2866:21" pos:end="2866:47"><call pos:start="2866:21" pos:end="2866:47"><name pos:start="2866:21" pos:end="2866:32">gen_op_ldsba</name><argument_list pos:start="2866:33" pos:end="2866:47">(<argument pos:start="2866:34" pos:end="2866:37"><expr pos:start="2866:34" pos:end="2866:37"><name pos:start="2866:34" pos:end="2866:37">insn</name></expr></argument>, <argument pos:start="2866:40" pos:end="2866:40"><expr pos:start="2866:40" pos:end="2866:40"><literal type="number" pos:start="2866:40" pos:end="2866:40">1</literal></expr></argument>, <argument pos:start="2866:43" pos:end="2866:43"><expr pos:start="2866:43" pos:end="2866:43"><literal type="number" pos:start="2866:43" pos:end="2866:43">1</literal></expr></argument>, <argument pos:start="2866:46" pos:end="2866:46"><expr pos:start="2866:46" pos:end="2866:46"><literal type="number" pos:start="2866:46" pos:end="2866:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2868:21" pos:end="2868:26">break;</break>

		<case pos:start="2870:17" pos:end="2873:0">case <expr pos:start="2870:22" pos:end="2870:25"><literal type="number" pos:start="2870:22" pos:end="2870:25">0x1a</literal></expr>:</case>	<comment type="block" pos:start="2870:33" pos:end="2870:68">/* load signed halfword alternate */</comment>

<cpp:ifndef pos:start="2872:1" pos:end="2872:22">#<cpp:directive pos:start="2872:2" pos:end="2872:7">ifndef</cpp:directive> <name pos:start="2872:9" pos:end="2872:22">TARGET_SPARC64</name></cpp:ifndef>

		    <if_stmt pos:start="2874:21" pos:end="2882:0"><if pos:start="2874:21" pos:end="2882:0">if <condition pos:start="2874:24" pos:end="2874:31">(<expr pos:start="2874:25" pos:end="2874:30"><name pos:start="2874:25" pos:end="2874:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="2877:21" pos:end="2882:0"><block_content pos:start="2877:21" pos:end="2882:0">


		    <if_stmt pos:start="2877:21" pos:end="2882:0"><if pos:start="2877:21" pos:end="2882:0">if <condition pos:start="2877:24" pos:end="2877:40">(<expr pos:start="2877:25" pos:end="2877:39"><operator pos:start="2877:25" pos:end="2877:25">!</operator><call pos:start="2877:26" pos:end="2877:39"><name pos:start="2877:26" pos:end="2877:35">supervisor</name><argument_list pos:start="2877:36" pos:end="2877:39">(<argument pos:start="2877:37" pos:end="2877:38"><expr pos:start="2877:37" pos:end="2877:38"><name pos:start="2877:37" pos:end="2877:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2879:25" pos:end="2882:0"><block_content pos:start="2879:25" pos:end="2882:0">

			<goto pos:start="2879:25" pos:end="2882:0">goto <name pos:start="2879:30" pos:end="2879:38">priv_insn</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="2881:1" pos:end="2881:6">#<cpp:directive pos:start="2881:2" pos:end="2881:6">endif</cpp:directive></cpp:endif>

		    <expr_stmt pos:start="2883:21" pos:end="2883:48"><expr pos:start="2883:21" pos:end="2883:47"><call pos:start="2883:21" pos:end="2883:47"><name pos:start="2883:21" pos:end="2883:32">gen_op_ldsha</name><argument_list pos:start="2883:33" pos:end="2883:47">(<argument pos:start="2883:34" pos:end="2883:37"><expr pos:start="2883:34" pos:end="2883:37"><name pos:start="2883:34" pos:end="2883:37">insn</name></expr></argument>, <argument pos:start="2883:40" pos:end="2883:40"><expr pos:start="2883:40" pos:end="2883:40"><literal type="number" pos:start="2883:40" pos:end="2883:40">1</literal></expr></argument>, <argument pos:start="2883:43" pos:end="2883:43"><expr pos:start="2883:43" pos:end="2883:43"><literal type="number" pos:start="2883:43" pos:end="2883:43">2</literal></expr></argument> ,<argument pos:start="2883:46" pos:end="2883:46"><expr pos:start="2883:46" pos:end="2883:46"><literal type="number" pos:start="2883:46" pos:end="2883:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2885:21" pos:end="2885:26">break;</break>

		<case pos:start="2887:17" pos:end="2890:0">case <expr pos:start="2887:22" pos:end="2887:25"><literal type="number" pos:start="2887:22" pos:end="2887:25">0x1d</literal></expr>:</case>	<comment type="block" pos:start="2887:33" pos:end="2887:74">/* ldstuba -- XXX: should be atomically */</comment>

<cpp:ifndef pos:start="2889:1" pos:end="2889:22">#<cpp:directive pos:start="2889:2" pos:end="2889:7">ifndef</cpp:directive> <name pos:start="2889:9" pos:end="2889:22">TARGET_SPARC64</name></cpp:ifndef>

		    <if_stmt pos:start="2891:21" pos:end="2899:0"><if pos:start="2891:21" pos:end="2899:0">if <condition pos:start="2891:24" pos:end="2891:31">(<expr pos:start="2891:25" pos:end="2891:30"><name pos:start="2891:25" pos:end="2891:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="2894:21" pos:end="2899:0"><block_content pos:start="2894:21" pos:end="2899:0">


		    <if_stmt pos:start="2894:21" pos:end="2899:0"><if pos:start="2894:21" pos:end="2899:0">if <condition pos:start="2894:24" pos:end="2894:40">(<expr pos:start="2894:25" pos:end="2894:39"><operator pos:start="2894:25" pos:end="2894:25">!</operator><call pos:start="2894:26" pos:end="2894:39"><name pos:start="2894:26" pos:end="2894:35">supervisor</name><argument_list pos:start="2894:36" pos:end="2894:39">(<argument pos:start="2894:37" pos:end="2894:38"><expr pos:start="2894:37" pos:end="2894:38"><name pos:start="2894:37" pos:end="2894:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2896:25" pos:end="2899:0"><block_content pos:start="2896:25" pos:end="2899:0">

			<goto pos:start="2896:25" pos:end="2899:0">goto <name pos:start="2896:30" pos:end="2896:38">priv_insn</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="2898:1" pos:end="2898:6">#<cpp:directive pos:start="2898:2" pos:end="2898:6">endif</cpp:directive></cpp:endif>

		    <expr_stmt pos:start="2900:21" pos:end="2900:50"><expr pos:start="2900:21" pos:end="2900:49"><call pos:start="2900:21" pos:end="2900:49"><name pos:start="2900:21" pos:end="2900:34">gen_op_ldstuba</name><argument_list pos:start="2900:35" pos:end="2900:49">(<argument pos:start="2900:36" pos:end="2900:39"><expr pos:start="2900:36" pos:end="2900:39"><name pos:start="2900:36" pos:end="2900:39">insn</name></expr></argument>, <argument pos:start="2900:42" pos:end="2900:42"><expr pos:start="2900:42" pos:end="2900:42"><literal type="number" pos:start="2900:42" pos:end="2900:42">1</literal></expr></argument>, <argument pos:start="2900:45" pos:end="2900:45"><expr pos:start="2900:45" pos:end="2900:45"><literal type="number" pos:start="2900:45" pos:end="2900:45">1</literal></expr></argument>, <argument pos:start="2900:48" pos:end="2900:48"><expr pos:start="2900:48" pos:end="2900:48"><literal type="number" pos:start="2900:48" pos:end="2900:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2902:21" pos:end="2902:26">break;</break>

		<case pos:start="2904:17" pos:end="2907:0">case <expr pos:start="2904:22" pos:end="2904:25"><literal type="number" pos:start="2904:22" pos:end="2904:25">0x1f</literal></expr>:</case>	<comment type="block" pos:start="2904:33" pos:end="2904:80">/* swap reg with alt. memory. Also atomically */</comment>

<cpp:ifndef pos:start="2906:1" pos:end="2906:22">#<cpp:directive pos:start="2906:2" pos:end="2906:7">ifndef</cpp:directive> <name pos:start="2906:9" pos:end="2906:22">TARGET_SPARC64</name></cpp:ifndef>

		    <if_stmt pos:start="2908:21" pos:end="2916:0"><if pos:start="2908:21" pos:end="2916:0">if <condition pos:start="2908:24" pos:end="2908:31">(<expr pos:start="2908:25" pos:end="2908:30"><name pos:start="2908:25" pos:end="2908:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="2911:21" pos:end="2916:0"><block_content pos:start="2911:21" pos:end="2916:0">


		    <if_stmt pos:start="2911:21" pos:end="2916:0"><if pos:start="2911:21" pos:end="2916:0">if <condition pos:start="2911:24" pos:end="2911:40">(<expr pos:start="2911:25" pos:end="2911:39"><operator pos:start="2911:25" pos:end="2911:25">!</operator><call pos:start="2911:26" pos:end="2911:39"><name pos:start="2911:26" pos:end="2911:35">supervisor</name><argument_list pos:start="2911:36" pos:end="2911:39">(<argument pos:start="2911:37" pos:end="2911:38"><expr pos:start="2911:37" pos:end="2911:38"><name pos:start="2911:37" pos:end="2911:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2913:25" pos:end="2916:0"><block_content pos:start="2913:25" pos:end="2916:0">

			<goto pos:start="2913:25" pos:end="2916:0">goto <name pos:start="2913:30" pos:end="2913:38">priv_insn</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="2915:1" pos:end="2915:6">#<cpp:directive pos:start="2915:2" pos:end="2915:6">endif</cpp:directive></cpp:endif>

		    <expr_stmt pos:start="2917:21" pos:end="2917:40"><expr pos:start="2917:21" pos:end="2917:39"><call pos:start="2917:21" pos:end="2917:39"><name pos:start="2917:21" pos:end="2917:35">gen_movl_reg_T1</name><argument_list pos:start="2917:36" pos:end="2917:39">(<argument pos:start="2917:37" pos:end="2917:38"><expr pos:start="2917:37" pos:end="2917:38"><name pos:start="2917:37" pos:end="2917:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="2919:21" pos:end="2919:48"><expr pos:start="2919:21" pos:end="2919:47"><call pos:start="2919:21" pos:end="2919:47"><name pos:start="2919:21" pos:end="2919:32">gen_op_swapa</name><argument_list pos:start="2919:33" pos:end="2919:47">(<argument pos:start="2919:34" pos:end="2919:37"><expr pos:start="2919:34" pos:end="2919:37"><name pos:start="2919:34" pos:end="2919:37">insn</name></expr></argument>, <argument pos:start="2919:40" pos:end="2919:40"><expr pos:start="2919:40" pos:end="2919:40"><literal type="number" pos:start="2919:40" pos:end="2919:40">1</literal></expr></argument>, <argument pos:start="2919:43" pos:end="2919:43"><expr pos:start="2919:43" pos:end="2919:43"><literal type="number" pos:start="2919:43" pos:end="2919:43">4</literal></expr></argument>, <argument pos:start="2919:46" pos:end="2919:46"><expr pos:start="2919:46" pos:end="2919:46"><literal type="number" pos:start="2919:46" pos:end="2919:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2921:21" pos:end="2926:0">break;</break>



<cpp:ifndef pos:start="2925:1" pos:end="2925:22">#<cpp:directive pos:start="2925:2" pos:end="2925:7">ifndef</cpp:directive> <name pos:start="2925:9" pos:end="2925:22">TARGET_SPARC64</name></cpp:ifndef>

		<case pos:start="2927:17" pos:end="2927:26">case <expr pos:start="2927:22" pos:end="2927:25"><literal type="number" pos:start="2927:22" pos:end="2927:25">0x30</literal></expr>:</case> <comment type="block" pos:start="2927:28" pos:end="2927:36">/* ldc */</comment>

		<case pos:start="2929:17" pos:end="2929:26">case <expr pos:start="2929:22" pos:end="2929:25"><literal type="number" pos:start="2929:22" pos:end="2929:25">0x31</literal></expr>:</case> <comment type="block" pos:start="2929:28" pos:end="2929:38">/* ldcsr */</comment>

		<case pos:start="2931:17" pos:end="2931:26">case <expr pos:start="2931:22" pos:end="2931:25"><literal type="number" pos:start="2931:22" pos:end="2931:25">0x33</literal></expr>:</case> <comment type="block" pos:start="2931:28" pos:end="2931:37">/* lddc */</comment>

		<case pos:start="2933:17" pos:end="2933:26">case <expr pos:start="2933:22" pos:end="2933:25"><literal type="number" pos:start="2933:22" pos:end="2933:25">0x34</literal></expr>:</case> <comment type="block" pos:start="2933:28" pos:end="2933:36">/* stc */</comment>

		<case pos:start="2935:17" pos:end="2935:26">case <expr pos:start="2935:22" pos:end="2935:25"><literal type="number" pos:start="2935:22" pos:end="2935:25">0x35</literal></expr>:</case> <comment type="block" pos:start="2935:28" pos:end="2935:38">/* stcsr */</comment>

		<case pos:start="2937:17" pos:end="2937:26">case <expr pos:start="2937:22" pos:end="2937:25"><literal type="number" pos:start="2937:22" pos:end="2937:25">0x36</literal></expr>:</case> <comment type="block" pos:start="2937:28" pos:end="2937:38">/* stdcq */</comment>

		<case pos:start="2939:17" pos:end="2939:26">case <expr pos:start="2939:22" pos:end="2939:25"><literal type="number" pos:start="2939:22" pos:end="2939:25">0x37</literal></expr>:</case> <comment type="block" pos:start="2939:28" pos:end="2939:37">/* stdc */</comment>

		    <goto pos:start="2941:21" pos:end="2941:34">goto <name pos:start="2941:26" pos:end="2941:33">ncp_insn</name>;</goto>

		    <break pos:start="2943:21" pos:end="2943:26">break;</break>

                    <comment type="block" pos:start="2945:21" pos:end="2945:40">/* avoid warnings */</comment>

                    <expr_stmt pos:start="2947:21" pos:end="2947:40"><expr pos:start="2947:21" pos:end="2947:39"><operator pos:start="2947:21" pos:end="2947:21">(</operator><name pos:start="2947:22" pos:end="2947:25">void</name><operator pos:start="2947:26" pos:end="2947:26">)</operator> <operator pos:start="2947:28" pos:end="2947:28">&amp;</operator><name pos:start="2947:29" pos:end="2947:39">gen_op_stfa</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="2949:21" pos:end="2949:41"><expr pos:start="2949:21" pos:end="2949:40"><operator pos:start="2949:21" pos:end="2949:21">(</operator><name pos:start="2949:22" pos:end="2949:25">void</name><operator pos:start="2949:26" pos:end="2949:26">)</operator> <operator pos:start="2949:28" pos:end="2949:28">&amp;</operator><name pos:start="2949:29" pos:end="2949:40">gen_op_stdfa</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="2951:21" pos:end="2951:40"><expr pos:start="2951:21" pos:end="2951:39"><operator pos:start="2951:21" pos:end="2951:21">(</operator><name pos:start="2951:22" pos:end="2951:25">void</name><operator pos:start="2951:26" pos:end="2951:26">)</operator> <operator pos:start="2951:28" pos:end="2951:28">&amp;</operator><name pos:start="2951:29" pos:end="2951:39">gen_op_ldfa</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="2953:21" pos:end="2958:0"><expr pos:start="2953:21" pos:end="2953:40"><operator pos:start="2953:21" pos:end="2953:21">(</operator><name pos:start="2953:22" pos:end="2953:25">void</name><operator pos:start="2953:26" pos:end="2953:26">)</operator> <operator pos:start="2953:28" pos:end="2953:28">&amp;</operator><name pos:start="2953:29" pos:end="2953:40">gen_op_lddfa</name></expr>;</expr_stmt>

<cpp:else pos:start="2955:1" pos:end="2955:5">#<cpp:directive pos:start="2955:2" pos:end="2955:5">else</cpp:directive></cpp:else>

<cpp:if pos:start="2957:1" pos:end="2957:30">#<cpp:directive pos:start="2957:2" pos:end="2957:3">if</cpp:directive> <expr pos:start="2957:5" pos:end="2957:30"><operator pos:start="2957:5" pos:end="2957:5">!</operator><call pos:start="2957:6" pos:end="2957:30"><name pos:start="2957:6" pos:end="2957:12">defined</name><argument_list pos:start="2957:13" pos:end="2957:30">(<argument pos:start="2957:14" pos:end="2957:29"><expr pos:start="2957:14" pos:end="2957:29"><name pos:start="2957:14" pos:end="2957:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

		    <expr_stmt pos:start="2959:21" pos:end="2959:39"><expr pos:start="2959:21" pos:end="2959:38"><operator pos:start="2959:21" pos:end="2959:21">(</operator><name pos:start="2959:22" pos:end="2959:25">void</name><operator pos:start="2959:26" pos:end="2959:26">)</operator> <operator pos:start="2959:28" pos:end="2959:28">&amp;</operator><name pos:start="2959:29" pos:end="2959:38">gen_op_cas</name></expr>;</expr_stmt>

		    <expr_stmt pos:start="2961:21" pos:end="2970:0"><expr pos:start="2961:21" pos:end="2961:39"><operator pos:start="2961:21" pos:end="2961:21">(</operator><name pos:start="2961:22" pos:end="2961:25">void</name><operator pos:start="2961:26" pos:end="2961:26">)</operator> <operator pos:start="2961:28" pos:end="2961:28">&amp;</operator><name pos:start="2961:29" pos:end="2961:39">gen_op_casx</name></expr>;</expr_stmt>

<cpp:endif pos:start="2963:1" pos:end="2963:6">#<cpp:directive pos:start="2963:2" pos:end="2963:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="2965:1" pos:end="2965:6">#<cpp:directive pos:start="2965:2" pos:end="2965:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="2967:1" pos:end="2967:6">#<cpp:directive pos:start="2967:2" pos:end="2967:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2969:1" pos:end="2969:21">#<cpp:directive pos:start="2969:2" pos:end="2969:6">ifdef</cpp:directive> <name pos:start="2969:8" pos:end="2969:21">TARGET_SPARC64</name></cpp:ifdef>

		<case pos:start="2971:17" pos:end="2971:26">case <expr pos:start="2971:22" pos:end="2971:25"><literal type="number" pos:start="2971:22" pos:end="2971:25">0x08</literal></expr>:</case> <comment type="block" pos:start="2971:28" pos:end="2971:40">/* V9 ldsw */</comment>

		    <expr_stmt pos:start="2973:21" pos:end="2973:38"><expr pos:start="2973:21" pos:end="2973:37"><call pos:start="2973:21" pos:end="2973:37"><name pos:start="2973:21" pos:end="2973:31">gen_op_ldst</name><argument_list pos:start="2973:32" pos:end="2973:37">(<argument pos:start="2973:33" pos:end="2973:36"><expr pos:start="2973:33" pos:end="2973:36"><name pos:start="2973:33" pos:end="2973:36">ldsw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2975:21" pos:end="2975:26">break;</break>

		<case pos:start="2977:17" pos:end="2977:26">case <expr pos:start="2977:22" pos:end="2977:25"><literal type="number" pos:start="2977:22" pos:end="2977:25">0x0b</literal></expr>:</case> <comment type="block" pos:start="2977:28" pos:end="2977:39">/* V9 ldx */</comment>

		    <expr_stmt pos:start="2979:21" pos:end="2979:37"><expr pos:start="2979:21" pos:end="2979:36"><call pos:start="2979:21" pos:end="2979:36"><name pos:start="2979:21" pos:end="2979:31">gen_op_ldst</name><argument_list pos:start="2979:32" pos:end="2979:36">(<argument pos:start="2979:33" pos:end="2979:35"><expr pos:start="2979:33" pos:end="2979:35"><name pos:start="2979:33" pos:end="2979:35">ldx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2981:21" pos:end="2981:26">break;</break>

		<case pos:start="2983:17" pos:end="2983:26">case <expr pos:start="2983:22" pos:end="2983:25"><literal type="number" pos:start="2983:22" pos:end="2983:25">0x18</literal></expr>:</case> <comment type="block" pos:start="2983:28" pos:end="2983:41">/* V9 ldswa */</comment>

		    <expr_stmt pos:start="2985:21" pos:end="2985:48"><expr pos:start="2985:21" pos:end="2985:47"><call pos:start="2985:21" pos:end="2985:47"><name pos:start="2985:21" pos:end="2985:32">gen_op_ldswa</name><argument_list pos:start="2985:33" pos:end="2985:47">(<argument pos:start="2985:34" pos:end="2985:37"><expr pos:start="2985:34" pos:end="2985:37"><name pos:start="2985:34" pos:end="2985:37">insn</name></expr></argument>, <argument pos:start="2985:40" pos:end="2985:40"><expr pos:start="2985:40" pos:end="2985:40"><literal type="number" pos:start="2985:40" pos:end="2985:40">1</literal></expr></argument>, <argument pos:start="2985:43" pos:end="2985:43"><expr pos:start="2985:43" pos:end="2985:43"><literal type="number" pos:start="2985:43" pos:end="2985:43">4</literal></expr></argument>, <argument pos:start="2985:46" pos:end="2985:46"><expr pos:start="2985:46" pos:end="2985:46"><literal type="number" pos:start="2985:46" pos:end="2985:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2987:21" pos:end="2987:26">break;</break>

		<case pos:start="2989:17" pos:end="2989:26">case <expr pos:start="2989:22" pos:end="2989:25"><literal type="number" pos:start="2989:22" pos:end="2989:25">0x1b</literal></expr>:</case> <comment type="block" pos:start="2989:28" pos:end="2989:40">/* V9 ldxa */</comment>

		    <expr_stmt pos:start="2991:21" pos:end="2991:47"><expr pos:start="2991:21" pos:end="2991:46"><call pos:start="2991:21" pos:end="2991:46"><name pos:start="2991:21" pos:end="2991:31">gen_op_ldxa</name><argument_list pos:start="2991:32" pos:end="2991:46">(<argument pos:start="2991:33" pos:end="2991:36"><expr pos:start="2991:33" pos:end="2991:36"><name pos:start="2991:33" pos:end="2991:36">insn</name></expr></argument>, <argument pos:start="2991:39" pos:end="2991:39"><expr pos:start="2991:39" pos:end="2991:39"><literal type="number" pos:start="2991:39" pos:end="2991:39">1</literal></expr></argument>, <argument pos:start="2991:42" pos:end="2991:42"><expr pos:start="2991:42" pos:end="2991:42"><literal type="number" pos:start="2991:42" pos:end="2991:42">8</literal></expr></argument>, <argument pos:start="2991:45" pos:end="2991:45"><expr pos:start="2991:45" pos:end="2991:45"><literal type="number" pos:start="2991:45" pos:end="2991:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="2993:21" pos:end="2993:26">break;</break>

		<case pos:start="2995:17" pos:end="2995:26">case <expr pos:start="2995:22" pos:end="2995:25"><literal type="number" pos:start="2995:22" pos:end="2995:25">0x2d</literal></expr>:</case> <comment type="block" pos:start="2995:28" pos:end="2995:55">/* V9 prefetch, no effect */</comment>

		    <goto pos:start="2997:21" pos:end="2997:35">goto <name pos:start="2997:26" pos:end="2997:34">skip_move</name>;</goto>

		<case pos:start="2999:17" pos:end="2999:26">case <expr pos:start="2999:22" pos:end="2999:25"><literal type="number" pos:start="2999:22" pos:end="2999:25">0x30</literal></expr>:</case> <comment type="block" pos:start="2999:28" pos:end="2999:40">/* V9 ldfa */</comment>

		    <expr_stmt pos:start="3001:21" pos:end="3001:47"><expr pos:start="3001:21" pos:end="3001:46"><call pos:start="3001:21" pos:end="3001:46"><name pos:start="3001:21" pos:end="3001:31">gen_op_ldfa</name><argument_list pos:start="3001:32" pos:end="3001:46">(<argument pos:start="3001:33" pos:end="3001:36"><expr pos:start="3001:33" pos:end="3001:36"><name pos:start="3001:33" pos:end="3001:36">insn</name></expr></argument>, <argument pos:start="3001:39" pos:end="3001:39"><expr pos:start="3001:39" pos:end="3001:39"><literal type="number" pos:start="3001:39" pos:end="3001:39">1</literal></expr></argument>, <argument pos:start="3001:42" pos:end="3001:42"><expr pos:start="3001:42" pos:end="3001:42"><literal type="number" pos:start="3001:42" pos:end="3001:42">8</literal></expr></argument>, <argument pos:start="3001:45" pos:end="3001:45"><expr pos:start="3001:45" pos:end="3001:45"><literal type="number" pos:start="3001:45" pos:end="3001:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="3001:49" pos:end="3001:54">// XXX</comment>

		    <break pos:start="3003:21" pos:end="3003:26">break;</break>

		<case pos:start="3005:17" pos:end="3005:26">case <expr pos:start="3005:22" pos:end="3005:25"><literal type="number" pos:start="3005:22" pos:end="3005:25">0x33</literal></expr>:</case> <comment type="block" pos:start="3005:28" pos:end="3005:41">/* V9 lddfa */</comment>

		    <expr_stmt pos:start="3007:21" pos:end="3007:48"><expr pos:start="3007:21" pos:end="3007:47"><call pos:start="3007:21" pos:end="3007:47"><name pos:start="3007:21" pos:end="3007:32">gen_op_lddfa</name><argument_list pos:start="3007:33" pos:end="3007:47">(<argument pos:start="3007:34" pos:end="3007:37"><expr pos:start="3007:34" pos:end="3007:37"><name pos:start="3007:34" pos:end="3007:37">insn</name></expr></argument>, <argument pos:start="3007:40" pos:end="3007:40"><expr pos:start="3007:40" pos:end="3007:40"><literal type="number" pos:start="3007:40" pos:end="3007:40">1</literal></expr></argument>, <argument pos:start="3007:43" pos:end="3007:43"><expr pos:start="3007:43" pos:end="3007:43"><literal type="number" pos:start="3007:43" pos:end="3007:43">8</literal></expr></argument>, <argument pos:start="3007:46" pos:end="3007:46"><expr pos:start="3007:46" pos:end="3007:46"><literal type="number" pos:start="3007:46" pos:end="3007:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="3007:50" pos:end="3007:55">// XXX</comment>



		    <break pos:start="3011:21" pos:end="3011:26">break;</break>

		<case pos:start="3013:17" pos:end="3013:26">case <expr pos:start="3013:22" pos:end="3013:25"><literal type="number" pos:start="3013:22" pos:end="3013:25">0x3d</literal></expr>:</case> <comment type="block" pos:start="3013:28" pos:end="3013:56">/* V9 prefetcha, no effect */</comment>

		    <goto pos:start="3015:21" pos:end="3015:35">goto <name pos:start="3015:26" pos:end="3015:34">skip_move</name>;</goto>

		<case pos:start="3017:17" pos:end="3017:26">case <expr pos:start="3017:22" pos:end="3017:25"><literal type="number" pos:start="3017:22" pos:end="3017:25">0x32</literal></expr>:</case> <comment type="block" pos:start="3017:28" pos:end="3017:41">/* V9 ldqfa */</comment>

		    <goto pos:start="3019:21" pos:end="3022:0">goto <name pos:start="3019:26" pos:end="3019:34">nfpu_insn</name>;</goto>

<cpp:endif pos:start="3021:1" pos:end="3021:6">#<cpp:directive pos:start="3021:2" pos:end="3021:6">endif</cpp:directive></cpp:endif>

		<default pos:start="3023:17" pos:end="3023:24">default:</default>


		</block_content>}</block></switch>

		<expr_stmt pos:start="3028:17" pos:end="3031:0"><expr pos:start="3028:17" pos:end="3028:35"><call pos:start="3028:17" pos:end="3028:35"><name pos:start="3028:17" pos:end="3028:31">gen_movl_T1_reg</name><argument_list pos:start="3028:32" pos:end="3028:35">(<argument pos:start="3028:33" pos:end="3028:34"><expr pos:start="3028:33" pos:end="3028:34"><name pos:start="3028:33" pos:end="3028:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="3030:1" pos:end="3030:21">#<cpp:directive pos:start="3030:2" pos:end="3030:6">ifdef</cpp:directive> <name pos:start="3030:8" pos:end="3030:21">TARGET_SPARC64</name></cpp:ifdef>

	    <label pos:start="3032:13" pos:end="3032:22"><name pos:start="3032:13" pos:end="3032:21">skip_move</name>:</label> <empty_stmt pos:start="3032:24" pos:end="3035:0">;</empty_stmt>

<cpp:endif pos:start="3034:1" pos:end="3034:6">#<cpp:directive pos:start="3034:2" pos:end="3034:6">endif</cpp:directive></cpp:endif>

	    </block_content>}</block></if> <if type="elseif" pos:start="3036:15" pos:end="3077:13">else if <condition pos:start="3036:23" pos:end="3036:49">(<expr pos:start="3036:24" pos:end="3036:48"><name pos:start="3036:24" pos:end="3036:26">xop</name> <operator pos:start="3036:28" pos:end="3036:29">&gt;=</operator> <literal type="number" pos:start="3036:31" pos:end="3036:34">0x20</literal> <operator pos:start="3036:36" pos:end="3036:37">&amp;&amp;</operator> <name pos:start="3036:39" pos:end="3036:41">xop</name> <operator pos:start="3036:43" pos:end="3036:43">&lt;</operator> <literal type="number" pos:start="3036:45" pos:end="3036:48">0x24</literal></expr>)</condition> <block pos:start="3036:51" pos:end="3077:13">{<block_content pos:start="3038:17" pos:end="3075:17">

                <if_stmt pos:start="3038:17" pos:end="3040:34"><if pos:start="3038:17" pos:end="3040:34">if <condition pos:start="3038:20" pos:end="3038:41">(<expr pos:start="3038:21" pos:end="3038:40"><call pos:start="3038:21" pos:end="3038:40"><name pos:start="3038:21" pos:end="3038:36">gen_trap_ifnofpu</name><argument_list pos:start="3038:37" pos:end="3038:40">(<argument pos:start="3038:38" pos:end="3038:39"><expr pos:start="3038:38" pos:end="3038:39"><name pos:start="3038:38" pos:end="3038:39">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3040:21" pos:end="3040:34"><block_content pos:start="3040:21" pos:end="3040:34">

                    <goto pos:start="3040:21" pos:end="3040:34">goto <name pos:start="3040:26" pos:end="3040:33">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

		<switch pos:start="3042:17" pos:end="3075:17">switch <condition pos:start="3042:24" pos:end="3042:28">(<expr pos:start="3042:25" pos:end="3042:27"><name pos:start="3042:25" pos:end="3042:27">xop</name></expr>)</condition> <block pos:start="3042:30" pos:end="3075:17">{<block_content pos:start="3044:17" pos:end="3072:24">

		<case pos:start="3044:17" pos:end="3044:26">case <expr pos:start="3044:22" pos:end="3044:25"><literal type="number" pos:start="3044:22" pos:end="3044:25">0x20</literal></expr>:</case>	<comment type="block" pos:start="3044:33" pos:end="3044:48">/* load fpreg */</comment>

		    <expr_stmt pos:start="3046:21" pos:end="3046:37"><expr pos:start="3046:21" pos:end="3046:36"><call pos:start="3046:21" pos:end="3046:36"><name pos:start="3046:21" pos:end="3046:31">gen_op_ldst</name><argument_list pos:start="3046:32" pos:end="3046:36">(<argument pos:start="3046:33" pos:end="3046:35"><expr pos:start="3046:33" pos:end="3046:35"><name pos:start="3046:33" pos:end="3046:35">ldf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="3048:21" pos:end="3048:45"><expr pos:start="3048:21" pos:end="3048:44"><call pos:start="3048:21" pos:end="3048:44"><name pos:start="3048:21" pos:end="3048:40">gen_op_store_FT0_fpr</name><argument_list pos:start="3048:41" pos:end="3048:44">(<argument pos:start="3048:42" pos:end="3048:43"><expr pos:start="3048:42" pos:end="3048:43"><name pos:start="3048:42" pos:end="3048:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="3050:21" pos:end="3050:26">break;</break>

		<case pos:start="3052:17" pos:end="3052:26">case <expr pos:start="3052:22" pos:end="3052:25"><literal type="number" pos:start="3052:22" pos:end="3052:25">0x21</literal></expr>:</case>	<comment type="block" pos:start="3052:33" pos:end="3052:46">/* load fsr */</comment>

		    <expr_stmt pos:start="3054:21" pos:end="3054:37"><expr pos:start="3054:21" pos:end="3054:36"><call pos:start="3054:21" pos:end="3054:36"><name pos:start="3054:21" pos:end="3054:31">gen_op_ldst</name><argument_list pos:start="3054:32" pos:end="3054:36">(<argument pos:start="3054:33" pos:end="3054:35"><expr pos:start="3054:33" pos:end="3054:35"><name pos:start="3054:33" pos:end="3054:35">ldf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="3056:21" pos:end="3056:35"><expr pos:start="3056:21" pos:end="3056:34"><call pos:start="3056:21" pos:end="3056:34"><name pos:start="3056:21" pos:end="3056:32">gen_op_ldfsr</name><argument_list pos:start="3056:33" pos:end="3056:34">()</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="3058:21" pos:end="3058:26">break;</break>

		<case pos:start="3060:17" pos:end="3060:26">case <expr pos:start="3060:22" pos:end="3060:25"><literal type="number" pos:start="3060:22" pos:end="3060:25">0x22</literal></expr>:</case>      <comment type="block" pos:start="3060:33" pos:end="3060:53">/* load quad fpreg */</comment>

		    <goto pos:start="3062:21" pos:end="3062:35">goto <name pos:start="3062:26" pos:end="3062:34">nfpu_insn</name>;</goto>

		<case pos:start="3064:17" pos:end="3064:26">case <expr pos:start="3064:22" pos:end="3064:25"><literal type="number" pos:start="3064:22" pos:end="3064:25">0x23</literal></expr>:</case>	<comment type="block" pos:start="3064:33" pos:end="3064:55">/* load double fpreg */</comment>

		    <expr_stmt pos:start="3066:21" pos:end="3066:38"><expr pos:start="3066:21" pos:end="3066:37"><call pos:start="3066:21" pos:end="3066:37"><name pos:start="3066:21" pos:end="3066:31">gen_op_ldst</name><argument_list pos:start="3066:32" pos:end="3066:37">(<argument pos:start="3066:33" pos:end="3066:36"><expr pos:start="3066:33" pos:end="3066:36"><name pos:start="3066:33" pos:end="3066:36">lddf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="3068:21" pos:end="3068:53"><expr pos:start="3068:21" pos:end="3068:52"><call pos:start="3068:21" pos:end="3068:52"><name pos:start="3068:21" pos:end="3068:40">gen_op_store_DT0_fpr</name><argument_list pos:start="3068:41" pos:end="3068:52">(<argument pos:start="3068:42" pos:end="3068:51"><expr pos:start="3068:42" pos:end="3068:51"><call pos:start="3068:42" pos:end="3068:51"><name pos:start="3068:42" pos:end="3068:47">DFPREG</name><argument_list pos:start="3068:48" pos:end="3068:51">(<argument pos:start="3068:49" pos:end="3068:50"><expr pos:start="3068:49" pos:end="3068:50"><name pos:start="3068:49" pos:end="3068:50">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="3070:21" pos:end="3070:26">break;</break>

		<default pos:start="3072:17" pos:end="3072:24">default:</default>


		</block_content>}</block></switch>

	    </block_content>}</block></if> <if type="elseif" pos:start="3077:15" pos:end="3214:13">else if <condition pos:start="3077:23" pos:end="3079:49">(<expr pos:start="3077:24" pos:end="3079:48"><name pos:start="3077:24" pos:end="3077:26">xop</name> <operator pos:start="3077:28" pos:end="3077:28">&lt;</operator> <literal type="number" pos:start="3077:30" pos:end="3077:30">8</literal> <operator pos:start="3077:32" pos:end="3077:33">||</operator> <operator pos:start="3077:35" pos:end="3077:35">(</operator><name pos:start="3077:36" pos:end="3077:38">xop</name> <operator pos:start="3077:40" pos:end="3077:41">&gt;=</operator> <literal type="number" pos:start="3077:43" pos:end="3077:46">0x14</literal> <operator pos:start="3077:48" pos:end="3077:49">&amp;&amp;</operator> <name pos:start="3077:51" pos:end="3077:53">xop</name> <operator pos:start="3077:55" pos:end="3077:55">&lt;</operator> <literal type="number" pos:start="3077:57" pos:end="3077:60">0x18</literal><operator pos:start="3077:61" pos:end="3077:61">)</operator> <operator pos:start="3077:63" pos:end="3077:64">||</operator> \

		       <name pos:start="3079:24" pos:end="3079:26">xop</name> <operator pos:start="3079:28" pos:end="3079:29">==</operator> <literal type="number" pos:start="3079:31" pos:end="3079:33">0xe</literal> <operator pos:start="3079:35" pos:end="3079:36">||</operator> <name pos:start="3079:38" pos:end="3079:40">xop</name> <operator pos:start="3079:42" pos:end="3079:43">==</operator> <literal type="number" pos:start="3079:45" pos:end="3079:48">0x1e</literal></expr>)</condition> <block pos:start="3079:51" pos:end="3214:13">{<block_content pos:start="3081:17" pos:end="3212:17">

		<expr_stmt pos:start="3081:17" pos:end="3081:36"><expr pos:start="3081:17" pos:end="3081:35"><call pos:start="3081:17" pos:end="3081:35"><name pos:start="3081:17" pos:end="3081:31">gen_movl_reg_T1</name><argument_list pos:start="3081:32" pos:end="3081:35">(<argument pos:start="3081:33" pos:end="3081:34"><expr pos:start="3081:33" pos:end="3081:34"><name pos:start="3081:33" pos:end="3081:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<switch pos:start="3083:17" pos:end="3212:17">switch <condition pos:start="3083:24" pos:end="3083:28">(<expr pos:start="3083:25" pos:end="3083:27"><name pos:start="3083:25" pos:end="3083:27">xop</name></expr>)</condition> <block pos:start="3083:30" pos:end="3212:17">{<block_content pos:start="3085:17" pos:end="3209:24">

		<case pos:start="3085:17" pos:end="3085:25">case <expr pos:start="3085:22" pos:end="3085:24"><literal type="number" pos:start="3085:22" pos:end="3085:24">0x4</literal></expr>:</case>

		    <expr_stmt pos:start="3087:21" pos:end="3087:36"><expr pos:start="3087:21" pos:end="3087:35"><call pos:start="3087:21" pos:end="3087:35"><name pos:start="3087:21" pos:end="3087:31">gen_op_ldst</name><argument_list pos:start="3087:32" pos:end="3087:35">(<argument pos:start="3087:33" pos:end="3087:34"><expr pos:start="3087:33" pos:end="3087:34"><name pos:start="3087:33" pos:end="3087:34">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="3089:21" pos:end="3089:26">break;</break>

		<case pos:start="3091:17" pos:end="3091:25">case <expr pos:start="3091:22" pos:end="3091:24"><literal type="number" pos:start="3091:22" pos:end="3091:24">0x5</literal></expr>:</case>

		    <expr_stmt pos:start="3093:21" pos:end="3093:37"><expr pos:start="3093:21" pos:end="3093:36"><call pos:start="3093:21" pos:end="3093:36"><name pos:start="3093:21" pos:end="3093:31">gen_op_ldst</name><argument_list pos:start="3093:32" pos:end="3093:36">(<argument pos:start="3093:33" pos:end="3093:35"><expr pos:start="3093:33" pos:end="3093:35"><name pos:start="3093:33" pos:end="3093:35">stb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="3095:21" pos:end="3095:26">break;</break>

		<case pos:start="3097:17" pos:end="3097:25">case <expr pos:start="3097:22" pos:end="3097:24"><literal type="number" pos:start="3097:22" pos:end="3097:24">0x6</literal></expr>:</case>

		    <expr_stmt pos:start="3099:21" pos:end="3099:37"><expr pos:start="3099:21" pos:end="3099:36"><call pos:start="3099:21" pos:end="3099:36"><name pos:start="3099:21" pos:end="3099:31">gen_op_ldst</name><argument_list pos:start="3099:32" pos:end="3099:36">(<argument pos:start="3099:33" pos:end="3099:35"><expr pos:start="3099:33" pos:end="3099:35"><name pos:start="3099:33" pos:end="3099:35">sth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="3101:21" pos:end="3101:26">break;</break>

		<case pos:start="3103:17" pos:end="3103:25">case <expr pos:start="3103:22" pos:end="3103:24"><literal type="number" pos:start="3103:22" pos:end="3103:24">0x7</literal></expr>:</case>



                    <expr_stmt pos:start="3107:21" pos:end="3107:33"><expr pos:start="3107:21" pos:end="3107:32"><call pos:start="3107:21" pos:end="3107:32"><name pos:start="3107:21" pos:end="3107:28">flush_T2</name><argument_list pos:start="3107:29" pos:end="3107:32">(<argument pos:start="3107:30" pos:end="3107:31"><expr pos:start="3107:30" pos:end="3107:31"><name pos:start="3107:30" pos:end="3107:31">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="3109:21" pos:end="3109:44"><expr pos:start="3109:21" pos:end="3109:43"><call pos:start="3109:21" pos:end="3109:43"><name pos:start="3109:21" pos:end="3109:35">gen_movl_reg_T2</name><argument_list pos:start="3109:36" pos:end="3109:43">(<argument pos:start="3109:37" pos:end="3109:42"><expr pos:start="3109:37" pos:end="3109:42"><name pos:start="3109:37" pos:end="3109:38">rd</name> <operator pos:start="3109:40" pos:end="3109:40">+</operator> <literal type="number" pos:start="3109:42" pos:end="3109:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="3111:21" pos:end="3111:37"><expr pos:start="3111:21" pos:end="3111:36"><call pos:start="3111:21" pos:end="3111:36"><name pos:start="3111:21" pos:end="3111:31">gen_op_ldst</name><argument_list pos:start="3111:32" pos:end="3111:36">(<argument pos:start="3111:33" pos:end="3111:35"><expr pos:start="3111:33" pos:end="3111:35"><name pos:start="3111:33" pos:end="3111:35">std</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="3113:21" pos:end="3116:0">break;</break>

<cpp:if pos:start="3115:1" pos:end="3115:57">#<cpp:directive pos:start="3115:2" pos:end="3115:3">if</cpp:directive> <expr pos:start="3115:5" pos:end="3115:57"><operator pos:start="3115:5" pos:end="3115:5">!</operator><call pos:start="3115:6" pos:end="3115:30"><name pos:start="3115:6" pos:end="3115:12">defined</name><argument_list pos:start="3115:13" pos:end="3115:30">(<argument pos:start="3115:14" pos:end="3115:29"><expr pos:start="3115:14" pos:end="3115:29"><name pos:start="3115:14" pos:end="3115:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call> <operator pos:start="3115:32" pos:end="3115:33">||</operator> <call pos:start="3115:35" pos:end="3115:57"><name pos:start="3115:35" pos:end="3115:41">defined</name><argument_list pos:start="3115:42" pos:end="3115:57">(<argument pos:start="3115:43" pos:end="3115:56"><expr pos:start="3115:43" pos:end="3115:56"><name pos:start="3115:43" pos:end="3115:56">TARGET_SPARC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

		<case pos:start="3117:17" pos:end="3120:0">case <expr pos:start="3117:22" pos:end="3117:25"><literal type="number" pos:start="3117:22" pos:end="3117:25">0x14</literal></expr>:</case>

<cpp:ifndef pos:start="3119:1" pos:end="3119:22">#<cpp:directive pos:start="3119:2" pos:end="3119:7">ifndef</cpp:directive> <name pos:start="3119:9" pos:end="3119:22">TARGET_SPARC64</name></cpp:ifndef>

		    <if_stmt pos:start="3121:21" pos:end="3129:0"><if pos:start="3121:21" pos:end="3129:0">if <condition pos:start="3121:24" pos:end="3121:31">(<expr pos:start="3121:25" pos:end="3121:30"><name pos:start="3121:25" pos:end="3121:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="3124:21" pos:end="3129:0"><block_content pos:start="3124:21" pos:end="3129:0">


		    <if_stmt pos:start="3124:21" pos:end="3129:0"><if pos:start="3124:21" pos:end="3129:0">if <condition pos:start="3124:24" pos:end="3124:40">(<expr pos:start="3124:25" pos:end="3124:39"><operator pos:start="3124:25" pos:end="3124:25">!</operator><call pos:start="3124:26" pos:end="3124:39"><name pos:start="3124:26" pos:end="3124:35">supervisor</name><argument_list pos:start="3124:36" pos:end="3124:39">(<argument pos:start="3124:37" pos:end="3124:38"><expr pos:start="3124:37" pos:end="3124:38"><name pos:start="3124:37" pos:end="3124:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3126:25" pos:end="3129:0"><block_content pos:start="3126:25" pos:end="3129:0">

			<goto pos:start="3126:25" pos:end="3129:0">goto <name pos:start="3126:30" pos:end="3126:38">priv_insn</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="3128:1" pos:end="3128:6">#<cpp:directive pos:start="3128:2" pos:end="3128:6">endif</cpp:directive></cpp:endif>

		    <expr_stmt pos:start="3130:21" pos:end="3130:46"><expr pos:start="3130:21" pos:end="3130:45"><call pos:start="3130:21" pos:end="3130:45"><name pos:start="3130:21" pos:end="3130:30">gen_op_sta</name><argument_list pos:start="3130:31" pos:end="3130:45">(<argument pos:start="3130:32" pos:end="3130:35"><expr pos:start="3130:32" pos:end="3130:35"><name pos:start="3130:32" pos:end="3130:35">insn</name></expr></argument>, <argument pos:start="3130:38" pos:end="3130:38"><expr pos:start="3130:38" pos:end="3130:38"><literal type="number" pos:start="3130:38" pos:end="3130:38">0</literal></expr></argument>, <argument pos:start="3130:41" pos:end="3130:41"><expr pos:start="3130:41" pos:end="3130:41"><literal type="number" pos:start="3130:41" pos:end="3130:41">4</literal></expr></argument>, <argument pos:start="3130:44" pos:end="3130:44"><expr pos:start="3130:44" pos:end="3130:44"><literal type="number" pos:start="3130:44" pos:end="3130:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3132:21" pos:end="3132:26">break;</break>

		<case pos:start="3134:17" pos:end="3137:0">case <expr pos:start="3134:22" pos:end="3134:25"><literal type="number" pos:start="3134:22" pos:end="3134:25">0x15</literal></expr>:</case>

<cpp:ifndef pos:start="3136:1" pos:end="3136:22">#<cpp:directive pos:start="3136:2" pos:end="3136:7">ifndef</cpp:directive> <name pos:start="3136:9" pos:end="3136:22">TARGET_SPARC64</name></cpp:ifndef>

		    <if_stmt pos:start="3138:21" pos:end="3146:0"><if pos:start="3138:21" pos:end="3146:0">if <condition pos:start="3138:24" pos:end="3138:31">(<expr pos:start="3138:25" pos:end="3138:30"><name pos:start="3138:25" pos:end="3138:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="3141:21" pos:end="3146:0"><block_content pos:start="3141:21" pos:end="3146:0">


		    <if_stmt pos:start="3141:21" pos:end="3146:0"><if pos:start="3141:21" pos:end="3146:0">if <condition pos:start="3141:24" pos:end="3141:40">(<expr pos:start="3141:25" pos:end="3141:39"><operator pos:start="3141:25" pos:end="3141:25">!</operator><call pos:start="3141:26" pos:end="3141:39"><name pos:start="3141:26" pos:end="3141:35">supervisor</name><argument_list pos:start="3141:36" pos:end="3141:39">(<argument pos:start="3141:37" pos:end="3141:38"><expr pos:start="3141:37" pos:end="3141:38"><name pos:start="3141:37" pos:end="3141:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3143:25" pos:end="3146:0"><block_content pos:start="3143:25" pos:end="3146:0">

			<goto pos:start="3143:25" pos:end="3146:0">goto <name pos:start="3143:30" pos:end="3143:38">priv_insn</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="3145:1" pos:end="3145:6">#<cpp:directive pos:start="3145:2" pos:end="3145:6">endif</cpp:directive></cpp:endif>

		    <expr_stmt pos:start="3147:21" pos:end="3147:47"><expr pos:start="3147:21" pos:end="3147:46"><call pos:start="3147:21" pos:end="3147:46"><name pos:start="3147:21" pos:end="3147:31">gen_op_stba</name><argument_list pos:start="3147:32" pos:end="3147:46">(<argument pos:start="3147:33" pos:end="3147:36"><expr pos:start="3147:33" pos:end="3147:36"><name pos:start="3147:33" pos:end="3147:36">insn</name></expr></argument>, <argument pos:start="3147:39" pos:end="3147:39"><expr pos:start="3147:39" pos:end="3147:39"><literal type="number" pos:start="3147:39" pos:end="3147:39">0</literal></expr></argument>, <argument pos:start="3147:42" pos:end="3147:42"><expr pos:start="3147:42" pos:end="3147:42"><literal type="number" pos:start="3147:42" pos:end="3147:42">1</literal></expr></argument>, <argument pos:start="3147:45" pos:end="3147:45"><expr pos:start="3147:45" pos:end="3147:45"><literal type="number" pos:start="3147:45" pos:end="3147:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3149:21" pos:end="3149:26">break;</break>

		<case pos:start="3151:17" pos:end="3154:0">case <expr pos:start="3151:22" pos:end="3151:25"><literal type="number" pos:start="3151:22" pos:end="3151:25">0x16</literal></expr>:</case>

<cpp:ifndef pos:start="3153:1" pos:end="3153:22">#<cpp:directive pos:start="3153:2" pos:end="3153:7">ifndef</cpp:directive> <name pos:start="3153:9" pos:end="3153:22">TARGET_SPARC64</name></cpp:ifndef>

		    <if_stmt pos:start="3155:21" pos:end="3163:0"><if pos:start="3155:21" pos:end="3163:0">if <condition pos:start="3155:24" pos:end="3155:31">(<expr pos:start="3155:25" pos:end="3155:30"><name pos:start="3155:25" pos:end="3155:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="3158:21" pos:end="3163:0"><block_content pos:start="3158:21" pos:end="3163:0">


		    <if_stmt pos:start="3158:21" pos:end="3163:0"><if pos:start="3158:21" pos:end="3163:0">if <condition pos:start="3158:24" pos:end="3158:40">(<expr pos:start="3158:25" pos:end="3158:39"><operator pos:start="3158:25" pos:end="3158:25">!</operator><call pos:start="3158:26" pos:end="3158:39"><name pos:start="3158:26" pos:end="3158:35">supervisor</name><argument_list pos:start="3158:36" pos:end="3158:39">(<argument pos:start="3158:37" pos:end="3158:38"><expr pos:start="3158:37" pos:end="3158:38"><name pos:start="3158:37" pos:end="3158:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3160:25" pos:end="3163:0"><block_content pos:start="3160:25" pos:end="3163:0">

			<goto pos:start="3160:25" pos:end="3163:0">goto <name pos:start="3160:30" pos:end="3160:38">priv_insn</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="3162:1" pos:end="3162:6">#<cpp:directive pos:start="3162:2" pos:end="3162:6">endif</cpp:directive></cpp:endif>

		    <expr_stmt pos:start="3164:21" pos:end="3164:47"><expr pos:start="3164:21" pos:end="3164:46"><call pos:start="3164:21" pos:end="3164:46"><name pos:start="3164:21" pos:end="3164:31">gen_op_stha</name><argument_list pos:start="3164:32" pos:end="3164:46">(<argument pos:start="3164:33" pos:end="3164:36"><expr pos:start="3164:33" pos:end="3164:36"><name pos:start="3164:33" pos:end="3164:36">insn</name></expr></argument>, <argument pos:start="3164:39" pos:end="3164:39"><expr pos:start="3164:39" pos:end="3164:39"><literal type="number" pos:start="3164:39" pos:end="3164:39">0</literal></expr></argument>, <argument pos:start="3164:42" pos:end="3164:42"><expr pos:start="3164:42" pos:end="3164:42"><literal type="number" pos:start="3164:42" pos:end="3164:42">2</literal></expr></argument>, <argument pos:start="3164:45" pos:end="3164:45"><expr pos:start="3164:45" pos:end="3164:45"><literal type="number" pos:start="3164:45" pos:end="3164:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3166:21" pos:end="3166:26">break;</break>

		<case pos:start="3168:17" pos:end="3171:0">case <expr pos:start="3168:22" pos:end="3168:25"><literal type="number" pos:start="3168:22" pos:end="3168:25">0x17</literal></expr>:</case>

<cpp:ifndef pos:start="3170:1" pos:end="3170:22">#<cpp:directive pos:start="3170:2" pos:end="3170:7">ifndef</cpp:directive> <name pos:start="3170:9" pos:end="3170:22">TARGET_SPARC64</name></cpp:ifndef>

		    <if_stmt pos:start="3172:21" pos:end="3180:0"><if pos:start="3172:21" pos:end="3180:0">if <condition pos:start="3172:24" pos:end="3172:31">(<expr pos:start="3172:25" pos:end="3172:30"><name pos:start="3172:25" pos:end="3172:30">IS_IMM</name></expr>)</condition><block type="pseudo" pos:start="3175:21" pos:end="3180:0"><block_content pos:start="3175:21" pos:end="3180:0">


		    <if_stmt pos:start="3175:21" pos:end="3180:0"><if pos:start="3175:21" pos:end="3180:0">if <condition pos:start="3175:24" pos:end="3175:40">(<expr pos:start="3175:25" pos:end="3175:39"><operator pos:start="3175:25" pos:end="3175:25">!</operator><call pos:start="3175:26" pos:end="3175:39"><name pos:start="3175:26" pos:end="3175:35">supervisor</name><argument_list pos:start="3175:36" pos:end="3175:39">(<argument pos:start="3175:37" pos:end="3175:38"><expr pos:start="3175:37" pos:end="3175:38"><name pos:start="3175:37" pos:end="3175:38">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3177:25" pos:end="3180:0"><block_content pos:start="3177:25" pos:end="3180:0">

			<goto pos:start="3177:25" pos:end="3180:0">goto <name pos:start="3177:30" pos:end="3177:38">priv_insn</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="3179:1" pos:end="3179:6">#<cpp:directive pos:start="3179:2" pos:end="3179:6">endif</cpp:directive></cpp:endif>



                    <expr_stmt pos:start="3183:21" pos:end="3183:33"><expr pos:start="3183:21" pos:end="3183:32"><call pos:start="3183:21" pos:end="3183:32"><name pos:start="3183:21" pos:end="3183:28">flush_T2</name><argument_list pos:start="3183:29" pos:end="3183:32">(<argument pos:start="3183:30" pos:end="3183:31"><expr pos:start="3183:30" pos:end="3183:31"><name pos:start="3183:30" pos:end="3183:31">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="3185:21" pos:end="3185:44"><expr pos:start="3185:21" pos:end="3185:43"><call pos:start="3185:21" pos:end="3185:43"><name pos:start="3185:21" pos:end="3185:35">gen_movl_reg_T2</name><argument_list pos:start="3185:36" pos:end="3185:43">(<argument pos:start="3185:37" pos:end="3185:42"><expr pos:start="3185:37" pos:end="3185:42"><name pos:start="3185:37" pos:end="3185:38">rd</name> <operator pos:start="3185:40" pos:end="3185:40">+</operator> <literal type="number" pos:start="3185:42" pos:end="3185:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="3187:21" pos:end="3187:47"><expr pos:start="3187:21" pos:end="3187:46"><call pos:start="3187:21" pos:end="3187:46"><name pos:start="3187:21" pos:end="3187:31">gen_op_stda</name><argument_list pos:start="3187:32" pos:end="3187:46">(<argument pos:start="3187:33" pos:end="3187:36"><expr pos:start="3187:33" pos:end="3187:36"><name pos:start="3187:33" pos:end="3187:36">insn</name></expr></argument>, <argument pos:start="3187:39" pos:end="3187:39"><expr pos:start="3187:39" pos:end="3187:39"><literal type="number" pos:start="3187:39" pos:end="3187:39">0</literal></expr></argument>, <argument pos:start="3187:42" pos:end="3187:42"><expr pos:start="3187:42" pos:end="3187:42"><literal type="number" pos:start="3187:42" pos:end="3187:42">8</literal></expr></argument>, <argument pos:start="3187:45" pos:end="3187:45"><expr pos:start="3187:45" pos:end="3187:45"><literal type="number" pos:start="3187:45" pos:end="3187:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="3189:21" pos:end="3194:0">break;</break>

<cpp:endif pos:start="3191:1" pos:end="3191:6">#<cpp:directive pos:start="3191:2" pos:end="3191:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3193:1" pos:end="3193:21">#<cpp:directive pos:start="3193:2" pos:end="3193:6">ifdef</cpp:directive> <name pos:start="3193:8" pos:end="3193:21">TARGET_SPARC64</name></cpp:ifdef>

		<case pos:start="3195:17" pos:end="3195:26">case <expr pos:start="3195:22" pos:end="3195:25"><literal type="number" pos:start="3195:22" pos:end="3195:25">0x0e</literal></expr>:</case> <comment type="block" pos:start="3195:28" pos:end="3195:39">/* V9 stx */</comment>

		    <expr_stmt pos:start="3197:21" pos:end="3197:37"><expr pos:start="3197:21" pos:end="3197:36"><call pos:start="3197:21" pos:end="3197:36"><name pos:start="3197:21" pos:end="3197:31">gen_op_ldst</name><argument_list pos:start="3197:32" pos:end="3197:36">(<argument pos:start="3197:33" pos:end="3197:35"><expr pos:start="3197:33" pos:end="3197:35"><name pos:start="3197:33" pos:end="3197:35">stx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="3199:21" pos:end="3199:26">break;</break>

		<case pos:start="3201:17" pos:end="3201:26">case <expr pos:start="3201:22" pos:end="3201:25"><literal type="number" pos:start="3201:22" pos:end="3201:25">0x1e</literal></expr>:</case> <comment type="block" pos:start="3201:28" pos:end="3201:40">/* V9 stxa */</comment>

		    <expr_stmt pos:start="3203:21" pos:end="3203:47"><expr pos:start="3203:21" pos:end="3203:46"><call pos:start="3203:21" pos:end="3203:46"><name pos:start="3203:21" pos:end="3203:31">gen_op_stxa</name><argument_list pos:start="3203:32" pos:end="3203:46">(<argument pos:start="3203:33" pos:end="3203:36"><expr pos:start="3203:33" pos:end="3203:36"><name pos:start="3203:33" pos:end="3203:36">insn</name></expr></argument>, <argument pos:start="3203:39" pos:end="3203:39"><expr pos:start="3203:39" pos:end="3203:39"><literal type="number" pos:start="3203:39" pos:end="3203:39">0</literal></expr></argument>, <argument pos:start="3203:42" pos:end="3203:42"><expr pos:start="3203:42" pos:end="3203:42"><literal type="number" pos:start="3203:42" pos:end="3203:42">8</literal></expr></argument>, <argument pos:start="3203:45" pos:end="3203:45"><expr pos:start="3203:45" pos:end="3203:45"><literal type="number" pos:start="3203:45" pos:end="3203:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="3203:49" pos:end="3203:54">// XXX</comment>

		    <break pos:start="3205:21" pos:end="3208:0">break;</break>

<cpp:endif pos:start="3207:1" pos:end="3207:6">#<cpp:directive pos:start="3207:2" pos:end="3207:6">endif</cpp:directive></cpp:endif>

		<default pos:start="3209:17" pos:end="3209:24">default:</default>


		</block_content>}</block></switch>

	    </block_content>}</block></if> <if type="elseif" pos:start="3214:15" pos:end="3255:13">else if <condition pos:start="3214:23" pos:end="3214:48">(<expr pos:start="3214:24" pos:end="3214:47"><name pos:start="3214:24" pos:end="3214:26">xop</name> <operator pos:start="3214:28" pos:end="3214:28">&gt;</operator> <literal type="number" pos:start="3214:30" pos:end="3214:33">0x23</literal> <operator pos:start="3214:35" pos:end="3214:36">&amp;&amp;</operator> <name pos:start="3214:38" pos:end="3214:40">xop</name> <operator pos:start="3214:42" pos:end="3214:42">&lt;</operator> <literal type="number" pos:start="3214:44" pos:end="3214:47">0x28</literal></expr>)</condition> <block pos:start="3214:50" pos:end="3255:13">{<block_content pos:start="3216:17" pos:end="3253:17">

                <if_stmt pos:start="3216:17" pos:end="3218:34"><if pos:start="3216:17" pos:end="3218:34">if <condition pos:start="3216:20" pos:end="3216:41">(<expr pos:start="3216:21" pos:end="3216:40"><call pos:start="3216:21" pos:end="3216:40"><name pos:start="3216:21" pos:end="3216:36">gen_trap_ifnofpu</name><argument_list pos:start="3216:37" pos:end="3216:40">(<argument pos:start="3216:38" pos:end="3216:39"><expr pos:start="3216:38" pos:end="3216:39"><name pos:start="3216:38" pos:end="3216:39">dc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3218:21" pos:end="3218:34"><block_content pos:start="3218:21" pos:end="3218:34">

                    <goto pos:start="3218:21" pos:end="3218:34">goto <name pos:start="3218:26" pos:end="3218:33">jmp_insn</name>;</goto></block_content></block></if></if_stmt>

		<switch pos:start="3220:17" pos:end="3253:17">switch <condition pos:start="3220:24" pos:end="3220:28">(<expr pos:start="3220:25" pos:end="3220:27"><name pos:start="3220:25" pos:end="3220:27">xop</name></expr>)</condition> <block pos:start="3220:30" pos:end="3253:17">{<block_content pos:start="3222:17" pos:end="3250:24">

		<case pos:start="3222:17" pos:end="3222:26">case <expr pos:start="3222:22" pos:end="3222:25"><literal type="number" pos:start="3222:22" pos:end="3222:25">0x24</literal></expr>:</case>

                    <expr_stmt pos:start="3224:21" pos:end="3224:44"><expr pos:start="3224:21" pos:end="3224:43"><call pos:start="3224:21" pos:end="3224:43"><name pos:start="3224:21" pos:end="3224:39">gen_op_load_fpr_FT0</name><argument_list pos:start="3224:40" pos:end="3224:43">(<argument pos:start="3224:41" pos:end="3224:42"><expr pos:start="3224:41" pos:end="3224:42"><name pos:start="3224:41" pos:end="3224:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="3226:21" pos:end="3226:37"><expr pos:start="3226:21" pos:end="3226:36"><call pos:start="3226:21" pos:end="3226:36"><name pos:start="3226:21" pos:end="3226:31">gen_op_ldst</name><argument_list pos:start="3226:32" pos:end="3226:36">(<argument pos:start="3226:33" pos:end="3226:35"><expr pos:start="3226:33" pos:end="3226:35"><name pos:start="3226:33" pos:end="3226:35">stf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="3228:21" pos:end="3228:26">break;</break>

		<case pos:start="3230:17" pos:end="3230:26">case <expr pos:start="3230:22" pos:end="3230:25"><literal type="number" pos:start="3230:22" pos:end="3230:25">0x25</literal></expr>:</case> <comment type="block" pos:start="3230:28" pos:end="3230:49">/* stfsr, V9 stxfsr */</comment>

		    <expr_stmt pos:start="3232:21" pos:end="3232:35"><expr pos:start="3232:21" pos:end="3232:34"><call pos:start="3232:21" pos:end="3232:34"><name pos:start="3232:21" pos:end="3232:32">gen_op_stfsr</name><argument_list pos:start="3232:33" pos:end="3232:34">()</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="3234:21" pos:end="3234:37"><expr pos:start="3234:21" pos:end="3234:36"><call pos:start="3234:21" pos:end="3234:36"><name pos:start="3234:21" pos:end="3234:31">gen_op_ldst</name><argument_list pos:start="3234:32" pos:end="3234:36">(<argument pos:start="3234:33" pos:end="3234:35"><expr pos:start="3234:33" pos:end="3234:35"><name pos:start="3234:33" pos:end="3234:35">stf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="3236:21" pos:end="3236:26">break;</break>

		<case pos:start="3238:17" pos:end="3238:26">case <expr pos:start="3238:22" pos:end="3238:25"><literal type="number" pos:start="3238:22" pos:end="3238:25">0x26</literal></expr>:</case> <comment type="block" pos:start="3238:28" pos:end="3238:38">/* stdfq */</comment>

		    <goto pos:start="3240:21" pos:end="3240:35">goto <name pos:start="3240:26" pos:end="3240:34">nfpu_insn</name>;</goto>

		<case pos:start="3242:17" pos:end="3242:26">case <expr pos:start="3242:22" pos:end="3242:25"><literal type="number" pos:start="3242:22" pos:end="3242:25">0x27</literal></expr>:</case>

                    <expr_stmt pos:start="3244:21" pos:end="3244:52"><expr pos:start="3244:21" pos:end="3244:51"><call pos:start="3244:21" pos:end="3244:51"><name pos:start="3244:21" pos:end="3244:39">gen_op_load_fpr_DT0</name><argument_list pos:start="3244:40" pos:end="3244:51">(<argument pos:start="3244:41" pos:end="3244:50"><expr pos:start="3244:41" pos:end="3244:50"><call pos:start="3244:41" pos:end="3244:50"><name pos:start="3244:41" pos:end="3244:46">DFPREG</name><argument_list pos:start="3244:47" pos:end="3244:50">(<argument pos:start="3244:48" pos:end="3244:49"><expr pos:start="3244:48" pos:end="3244:49"><name pos:start="3244:48" pos:end="3244:49">rd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="3246:21" pos:end="3246:38"><expr pos:start="3246:21" pos:end="3246:37"><call pos:start="3246:21" pos:end="3246:37"><name pos:start="3246:21" pos:end="3246:31">gen_op_ldst</name><argument_list pos:start="3246:32" pos:end="3246:37">(<argument pos:start="3246:33" pos:end="3246:36"><expr pos:start="3246:33" pos:end="3246:36"><name pos:start="3246:33" pos:end="3246:36">stdf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <break pos:start="3248:21" pos:end="3248:26">break;</break>

		<default pos:start="3250:17" pos:end="3250:24">default:</default>


		</block_content>}</block></switch>

	    </block_content>}</block></if> <if type="elseif" pos:start="3255:15" pos:end="3299:13">else if <condition pos:start="3255:23" pos:end="3255:48">(<expr pos:start="3255:24" pos:end="3255:47"><name pos:start="3255:24" pos:end="3255:26">xop</name> <operator pos:start="3255:28" pos:end="3255:28">&gt;</operator> <literal type="number" pos:start="3255:30" pos:end="3255:33">0x33</literal> <operator pos:start="3255:35" pos:end="3255:36">&amp;&amp;</operator> <name pos:start="3255:38" pos:end="3255:40">xop</name> <operator pos:start="3255:42" pos:end="3255:42">&lt;</operator> <literal type="number" pos:start="3255:44" pos:end="3255:47">0x3f</literal></expr>)</condition> <block pos:start="3255:50" pos:end="3299:13">{<block_content pos:start="3259:17" pos:end="3298:0">

<cpp:ifdef pos:start="3257:1" pos:end="3257:21">#<cpp:directive pos:start="3257:2" pos:end="3257:6">ifdef</cpp:directive> <name pos:start="3257:8" pos:end="3257:21">TARGET_SPARC64</name></cpp:ifdef>

		<switch pos:start="3259:17" pos:end="3298:0">switch <condition pos:start="3259:24" pos:end="3259:28">(<expr pos:start="3259:25" pos:end="3259:27"><name pos:start="3259:25" pos:end="3259:27">xop</name></expr>)</condition> <block pos:start="3259:30" pos:end="3298:0">{<block_content pos:start="3261:17" pos:end="3289:24">

		<case pos:start="3261:17" pos:end="3261:26">case <expr pos:start="3261:22" pos:end="3261:25"><literal type="number" pos:start="3261:22" pos:end="3261:25">0x34</literal></expr>:</case> <comment type="block" pos:start="3261:28" pos:end="3261:40">/* V9 stfa */</comment>

		    <expr_stmt pos:start="3263:21" pos:end="3263:47"><expr pos:start="3263:21" pos:end="3263:46"><call pos:start="3263:21" pos:end="3263:46"><name pos:start="3263:21" pos:end="3263:31">gen_op_stfa</name><argument_list pos:start="3263:32" pos:end="3263:46">(<argument pos:start="3263:33" pos:end="3263:36"><expr pos:start="3263:33" pos:end="3263:36"><name pos:start="3263:33" pos:end="3263:36">insn</name></expr></argument>, <argument pos:start="3263:39" pos:end="3263:39"><expr pos:start="3263:39" pos:end="3263:39"><literal type="number" pos:start="3263:39" pos:end="3263:39">0</literal></expr></argument>, <argument pos:start="3263:42" pos:end="3263:42"><expr pos:start="3263:42" pos:end="3263:42"><literal type="number" pos:start="3263:42" pos:end="3263:42">0</literal></expr></argument>, <argument pos:start="3263:45" pos:end="3263:45"><expr pos:start="3263:45" pos:end="3263:45"><literal type="number" pos:start="3263:45" pos:end="3263:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="3263:49" pos:end="3263:54">// XXX</comment>

		    <break pos:start="3265:21" pos:end="3265:26">break;</break>

		<case pos:start="3267:17" pos:end="3267:26">case <expr pos:start="3267:22" pos:end="3267:25"><literal type="number" pos:start="3267:22" pos:end="3267:25">0x37</literal></expr>:</case> <comment type="block" pos:start="3267:28" pos:end="3267:41">/* V9 stdfa */</comment>

		    <expr_stmt pos:start="3269:21" pos:end="3269:48"><expr pos:start="3269:21" pos:end="3269:47"><call pos:start="3269:21" pos:end="3269:47"><name pos:start="3269:21" pos:end="3269:32">gen_op_stdfa</name><argument_list pos:start="3269:33" pos:end="3269:47">(<argument pos:start="3269:34" pos:end="3269:37"><expr pos:start="3269:34" pos:end="3269:37"><name pos:start="3269:34" pos:end="3269:37">insn</name></expr></argument>, <argument pos:start="3269:40" pos:end="3269:40"><expr pos:start="3269:40" pos:end="3269:40"><literal type="number" pos:start="3269:40" pos:end="3269:40">0</literal></expr></argument>, <argument pos:start="3269:43" pos:end="3269:43"><expr pos:start="3269:43" pos:end="3269:43"><literal type="number" pos:start="3269:43" pos:end="3269:43">0</literal></expr></argument>, <argument pos:start="3269:46" pos:end="3269:46"><expr pos:start="3269:46" pos:end="3269:46"><literal type="number" pos:start="3269:46" pos:end="3269:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="3269:50" pos:end="3269:55">// XXX</comment>

		    <break pos:start="3271:21" pos:end="3271:26">break;</break>

		<case pos:start="3273:17" pos:end="3273:26">case <expr pos:start="3273:22" pos:end="3273:25"><literal type="number" pos:start="3273:22" pos:end="3273:25">0x3c</literal></expr>:</case> <comment type="block" pos:start="3273:28" pos:end="3273:40">/* V9 casa */</comment>

		    <expr_stmt pos:start="3275:21" pos:end="3275:47"><expr pos:start="3275:21" pos:end="3275:46"><call pos:start="3275:21" pos:end="3275:46"><name pos:start="3275:21" pos:end="3275:31">gen_op_casa</name><argument_list pos:start="3275:32" pos:end="3275:46">(<argument pos:start="3275:33" pos:end="3275:36"><expr pos:start="3275:33" pos:end="3275:36"><name pos:start="3275:33" pos:end="3275:36">insn</name></expr></argument>, <argument pos:start="3275:39" pos:end="3275:39"><expr pos:start="3275:39" pos:end="3275:39"><literal type="number" pos:start="3275:39" pos:end="3275:39">0</literal></expr></argument>, <argument pos:start="3275:42" pos:end="3275:42"><expr pos:start="3275:42" pos:end="3275:42"><literal type="number" pos:start="3275:42" pos:end="3275:42">4</literal></expr></argument>, <argument pos:start="3275:45" pos:end="3275:45"><expr pos:start="3275:45" pos:end="3275:45"><literal type="number" pos:start="3275:45" pos:end="3275:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="3275:49" pos:end="3275:54">// XXX</comment>

		    <break pos:start="3277:21" pos:end="3277:26">break;</break>

		<case pos:start="3279:17" pos:end="3279:26">case <expr pos:start="3279:22" pos:end="3279:25"><literal type="number" pos:start="3279:22" pos:end="3279:25">0x3e</literal></expr>:</case> <comment type="block" pos:start="3279:28" pos:end="3279:41">/* V9 casxa */</comment>

		    <expr_stmt pos:start="3281:21" pos:end="3281:48"><expr pos:start="3281:21" pos:end="3281:47"><call pos:start="3281:21" pos:end="3281:47"><name pos:start="3281:21" pos:end="3281:32">gen_op_casxa</name><argument_list pos:start="3281:33" pos:end="3281:47">(<argument pos:start="3281:34" pos:end="3281:37"><expr pos:start="3281:34" pos:end="3281:37"><name pos:start="3281:34" pos:end="3281:37">insn</name></expr></argument>, <argument pos:start="3281:40" pos:end="3281:40"><expr pos:start="3281:40" pos:end="3281:40"><literal type="number" pos:start="3281:40" pos:end="3281:40">0</literal></expr></argument>, <argument pos:start="3281:43" pos:end="3281:43"><expr pos:start="3281:43" pos:end="3281:43"><literal type="number" pos:start="3281:43" pos:end="3281:43">8</literal></expr></argument>, <argument pos:start="3281:46" pos:end="3281:46"><expr pos:start="3281:46" pos:end="3281:46"><literal type="number" pos:start="3281:46" pos:end="3281:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="3281:50" pos:end="3281:55">// XXX</comment>

		    <break pos:start="3283:21" pos:end="3283:26">break;</break>

		<case pos:start="3285:17" pos:end="3285:26">case <expr pos:start="3285:22" pos:end="3285:25"><literal type="number" pos:start="3285:22" pos:end="3285:25">0x36</literal></expr>:</case> <comment type="block" pos:start="3285:28" pos:end="3285:41">/* V9 stqfa */</comment>

		    <goto pos:start="3287:21" pos:end="3287:35">goto <name pos:start="3287:26" pos:end="3287:34">nfpu_insn</name>;</goto>

		<default pos:start="3289:17" pos:end="3289:24">default:</default>


		</block_content>}</block></switch>

<cpp:else pos:start="3294:1" pos:end="3294:5">#<cpp:directive pos:start="3294:2" pos:end="3294:5">else</cpp:directive></cpp:else>


<cpp:endif pos:start="3297:1" pos:end="3297:6">#<cpp:directive pos:start="3297:2" pos:end="3297:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></if>

	    <else pos:start="3301:13" pos:end="3301:16">else<block type="pseudo"><block_content/></block></else></if_stmt>


	</block_content>}</block>

	<break pos:start="3306:9" pos:end="3306:14">break;</break>

    </block_content>}</block></switch>

    <comment type="block" pos:start="3310:5" pos:end="3310:48">/* default case for non jump instructions */</comment>

    <if_stmt pos:start="3312:5" pos:end="3332:5"><if pos:start="3312:5" pos:end="3318:5">if <condition pos:start="3312:8" pos:end="3312:30">(<expr pos:start="3312:9" pos:end="3312:29"><name pos:start="3312:9" pos:end="3312:15"><name pos:start="3312:9" pos:end="3312:10">dc</name><operator pos:start="3312:11" pos:end="3312:12">-&gt;</operator><name pos:start="3312:13" pos:end="3312:15">npc</name></name> <operator pos:start="3312:17" pos:end="3312:18">==</operator> <name pos:start="3312:20" pos:end="3312:29">DYNAMIC_PC</name></expr>)</condition> <block pos:start="3312:32" pos:end="3318:5">{<block_content pos:start="3314:9" pos:end="3316:27">

	<expr_stmt pos:start="3314:9" pos:end="3314:28"><expr pos:start="3314:9" pos:end="3314:27"><name pos:start="3314:9" pos:end="3314:14"><name pos:start="3314:9" pos:end="3314:10">dc</name><operator pos:start="3314:11" pos:end="3314:12">-&gt;</operator><name pos:start="3314:13" pos:end="3314:14">pc</name></name> <operator pos:start="3314:16" pos:end="3314:16">=</operator> <name pos:start="3314:18" pos:end="3314:27">DYNAMIC_PC</name></expr>;</expr_stmt>

	<expr_stmt pos:start="3316:9" pos:end="3316:27"><expr pos:start="3316:9" pos:end="3316:26"><call pos:start="3316:9" pos:end="3316:26"><name pos:start="3316:9" pos:end="3316:24">gen_op_next_insn</name><argument_list pos:start="3316:25" pos:end="3316:26">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="3318:7" pos:end="3326:5">else if <condition pos:start="3318:15" pos:end="3318:34">(<expr pos:start="3318:16" pos:end="3318:33"><name pos:start="3318:16" pos:end="3318:22"><name pos:start="3318:16" pos:end="3318:17">dc</name><operator pos:start="3318:18" pos:end="3318:19">-&gt;</operator><name pos:start="3318:20" pos:end="3318:22">npc</name></name> <operator pos:start="3318:24" pos:end="3318:25">==</operator> <name pos:start="3318:27" pos:end="3318:33">JUMP_PC</name></expr>)</condition> <block pos:start="3318:36" pos:end="3326:5">{<block_content pos:start="3322:9" pos:end="3324:22">

        <comment type="block" pos:start="3320:9" pos:end="3320:37">/* we can do a static jump */</comment>

        <expr_stmt pos:start="3322:9" pos:end="3322:70"><expr pos:start="3322:9" pos:end="3322:69"><call pos:start="3322:9" pos:end="3322:69"><name pos:start="3322:9" pos:end="3322:19">gen_branch2</name><argument_list pos:start="3322:20" pos:end="3322:69">(<argument pos:start="3322:21" pos:end="3322:22"><expr pos:start="3322:21" pos:end="3322:22"><name pos:start="3322:21" pos:end="3322:22">dc</name></expr></argument>, <argument pos:start="3322:25" pos:end="3322:36"><expr pos:start="3322:25" pos:end="3322:36"><operator pos:start="3322:25" pos:end="3322:25">(</operator><name pos:start="3322:26" pos:end="3322:29">long</name><operator pos:start="3322:30" pos:end="3322:30">)</operator><name pos:start="3322:31" pos:end="3322:36"><name pos:start="3322:31" pos:end="3322:32">dc</name><operator pos:start="3322:33" pos:end="3322:34">-&gt;</operator><name pos:start="3322:35" pos:end="3322:36">tb</name></name></expr></argument>, <argument pos:start="3322:39" pos:end="3322:52"><expr pos:start="3322:39" pos:end="3322:52"><name pos:start="3322:39" pos:end="3322:52"><name pos:start="3322:39" pos:end="3322:40">dc</name><operator pos:start="3322:41" pos:end="3322:42">-&gt;</operator><name pos:start="3322:43" pos:end="3322:49">jump_pc</name><index pos:start="3322:50" pos:end="3322:52">[<expr pos:start="3322:51" pos:end="3322:51"><literal type="number" pos:start="3322:51" pos:end="3322:51">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="3322:55" pos:end="3322:68"><expr pos:start="3322:55" pos:end="3322:68"><name pos:start="3322:55" pos:end="3322:68"><name pos:start="3322:55" pos:end="3322:56">dc</name><operator pos:start="3322:57" pos:end="3322:58">-&gt;</operator><name pos:start="3322:59" pos:end="3322:65">jump_pc</name><index pos:start="3322:66" pos:end="3322:68">[<expr pos:start="3322:67" pos:end="3322:67"><literal type="number" pos:start="3322:67" pos:end="3322:67">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3324:9" pos:end="3324:22"><expr pos:start="3324:9" pos:end="3324:21"><name pos:start="3324:9" pos:end="3324:17"><name pos:start="3324:9" pos:end="3324:10">dc</name><operator pos:start="3324:11" pos:end="3324:12">-&gt;</operator><name pos:start="3324:13" pos:end="3324:17">is_br</name></name> <operator pos:start="3324:19" pos:end="3324:19">=</operator> <literal type="number" pos:start="3324:21" pos:end="3324:21">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="3326:7" pos:end="3332:5">else <block pos:start="3326:12" pos:end="3332:5">{<block_content pos:start="3328:9" pos:end="3330:30">

	<expr_stmt pos:start="3328:9" pos:end="3328:25"><expr pos:start="3328:9" pos:end="3328:24"><name pos:start="3328:9" pos:end="3328:14"><name pos:start="3328:9" pos:end="3328:10">dc</name><operator pos:start="3328:11" pos:end="3328:12">-&gt;</operator><name pos:start="3328:13" pos:end="3328:14">pc</name></name> <operator pos:start="3328:16" pos:end="3328:16">=</operator> <name pos:start="3328:18" pos:end="3328:24"><name pos:start="3328:18" pos:end="3328:19">dc</name><operator pos:start="3328:20" pos:end="3328:21">-&gt;</operator><name pos:start="3328:22" pos:end="3328:24">npc</name></name></expr>;</expr_stmt>

	<expr_stmt pos:start="3330:9" pos:end="3330:30"><expr pos:start="3330:9" pos:end="3330:29"><name pos:start="3330:9" pos:end="3330:15"><name pos:start="3330:9" pos:end="3330:10">dc</name><operator pos:start="3330:11" pos:end="3330:12">-&gt;</operator><name pos:start="3330:13" pos:end="3330:15">npc</name></name> <operator pos:start="3330:17" pos:end="3330:17">=</operator> <name pos:start="3330:19" pos:end="3330:25"><name pos:start="3330:19" pos:end="3330:20">dc</name><operator pos:start="3330:21" pos:end="3330:22">-&gt;</operator><name pos:start="3330:23" pos:end="3330:25">npc</name></name> <operator pos:start="3330:27" pos:end="3330:27">+</operator> <literal type="number" pos:start="3330:29" pos:end="3330:29">4</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

 <label pos:start="3334:2" pos:end="3334:10"><name pos:start="3334:2" pos:end="3334:9">jmp_insn</name>:</label>

    <return pos:start="3336:5" pos:end="3336:11">return;</return>

 <label pos:start="3338:2" pos:end="3338:14"><name pos:start="3338:2" pos:end="3338:13">illegal_insn</name>:</label>

    <expr_stmt pos:start="3340:5" pos:end="3340:19"><expr pos:start="3340:5" pos:end="3340:18"><call pos:start="3340:5" pos:end="3340:18"><name pos:start="3340:5" pos:end="3340:14">save_state</name><argument_list pos:start="3340:15" pos:end="3340:18">(<argument pos:start="3340:16" pos:end="3340:17"><expr pos:start="3340:16" pos:end="3340:17"><name pos:start="3340:16" pos:end="3340:17">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="3342:5" pos:end="3342:34"><expr pos:start="3342:5" pos:end="3342:33"><call pos:start="3342:5" pos:end="3342:33"><name pos:start="3342:5" pos:end="3342:20">gen_op_exception</name><argument_list pos:start="3342:21" pos:end="3342:33">(<argument pos:start="3342:22" pos:end="3342:32"><expr pos:start="3342:22" pos:end="3342:32"><name pos:start="3342:22" pos:end="3342:32">TT_ILL_INSN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="3344:5" pos:end="3344:18"><expr pos:start="3344:5" pos:end="3344:17"><name pos:start="3344:5" pos:end="3344:13"><name pos:start="3344:5" pos:end="3344:6">dc</name><operator pos:start="3344:7" pos:end="3344:8">-&gt;</operator><name pos:start="3344:9" pos:end="3344:13">is_br</name></name> <operator pos:start="3344:15" pos:end="3344:15">=</operator> <literal type="number" pos:start="3344:17" pos:end="3344:17">1</literal></expr>;</expr_stmt>

    <return pos:start="3346:5" pos:end="3349:0">return;</return>

<cpp:if pos:start="3348:1" pos:end="3348:30">#<cpp:directive pos:start="3348:2" pos:end="3348:3">if</cpp:directive> <expr pos:start="3348:5" pos:end="3348:30"><operator pos:start="3348:5" pos:end="3348:5">!</operator><call pos:start="3348:6" pos:end="3348:30"><name pos:start="3348:6" pos:end="3348:12">defined</name><argument_list pos:start="3348:13" pos:end="3348:30">(<argument pos:start="3348:14" pos:end="3348:29"><expr pos:start="3348:14" pos:end="3348:29"><name pos:start="3348:14" pos:end="3348:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

 <label pos:start="3350:2" pos:end="3350:11"><name pos:start="3350:2" pos:end="3350:10">priv_insn</name>:</label>

    <expr_stmt pos:start="3352:5" pos:end="3352:19"><expr pos:start="3352:5" pos:end="3352:18"><call pos:start="3352:5" pos:end="3352:18"><name pos:start="3352:5" pos:end="3352:14">save_state</name><argument_list pos:start="3352:15" pos:end="3352:18">(<argument pos:start="3352:16" pos:end="3352:17"><expr pos:start="3352:16" pos:end="3352:17"><name pos:start="3352:16" pos:end="3352:17">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="3354:5" pos:end="3354:35"><expr pos:start="3354:5" pos:end="3354:34"><call pos:start="3354:5" pos:end="3354:34"><name pos:start="3354:5" pos:end="3354:20">gen_op_exception</name><argument_list pos:start="3354:21" pos:end="3354:34">(<argument pos:start="3354:22" pos:end="3354:33"><expr pos:start="3354:22" pos:end="3354:33"><name pos:start="3354:22" pos:end="3354:33">TT_PRIV_INSN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="3356:5" pos:end="3356:18"><expr pos:start="3356:5" pos:end="3356:17"><name pos:start="3356:5" pos:end="3356:13"><name pos:start="3356:5" pos:end="3356:6">dc</name><operator pos:start="3356:7" pos:end="3356:8">-&gt;</operator><name pos:start="3356:9" pos:end="3356:13">is_br</name></name> <operator pos:start="3356:15" pos:end="3356:15">=</operator> <literal type="number" pos:start="3356:17" pos:end="3356:17">1</literal></expr>;</expr_stmt>

    <return pos:start="3358:5" pos:end="3361:0">return;</return>

<cpp:endif pos:start="3360:1" pos:end="3360:6">#<cpp:directive pos:start="3360:2" pos:end="3360:6">endif</cpp:directive></cpp:endif>

 <label pos:start="3362:2" pos:end="3362:11"><name pos:start="3362:2" pos:end="3362:10">nfpu_insn</name>:</label>

    <expr_stmt pos:start="3364:5" pos:end="3364:19"><expr pos:start="3364:5" pos:end="3364:18"><call pos:start="3364:5" pos:end="3364:18"><name pos:start="3364:5" pos:end="3364:14">save_state</name><argument_list pos:start="3364:15" pos:end="3364:18">(<argument pos:start="3364:16" pos:end="3364:17"><expr pos:start="3364:16" pos:end="3364:17"><name pos:start="3364:16" pos:end="3364:17">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="3366:5" pos:end="3366:45"><expr pos:start="3366:5" pos:end="3366:44"><call pos:start="3366:5" pos:end="3366:44"><name pos:start="3366:5" pos:end="3366:25">gen_op_fpexception_im</name><argument_list pos:start="3366:26" pos:end="3366:44">(<argument pos:start="3366:27" pos:end="3366:43"><expr pos:start="3366:27" pos:end="3366:43"><name pos:start="3366:27" pos:end="3366:43">FSR_FTT_UNIMPFPOP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="3368:5" pos:end="3368:18"><expr pos:start="3368:5" pos:end="3368:17"><name pos:start="3368:5" pos:end="3368:13"><name pos:start="3368:5" pos:end="3368:6">dc</name><operator pos:start="3368:7" pos:end="3368:8">-&gt;</operator><name pos:start="3368:9" pos:end="3368:13">is_br</name></name> <operator pos:start="3368:15" pos:end="3368:15">=</operator> <literal type="number" pos:start="3368:17" pos:end="3368:17">1</literal></expr>;</expr_stmt>

    <return pos:start="3370:5" pos:end="3373:0">return;</return>

<cpp:ifndef pos:start="3372:1" pos:end="3372:22">#<cpp:directive pos:start="3372:2" pos:end="3372:7">ifndef</cpp:directive> <name pos:start="3372:9" pos:end="3372:22">TARGET_SPARC64</name></cpp:ifndef>

 <label pos:start="3374:2" pos:end="3374:10"><name pos:start="3374:2" pos:end="3374:9">ncp_insn</name>:</label>

    <expr_stmt pos:start="3376:5" pos:end="3376:19"><expr pos:start="3376:5" pos:end="3376:18"><call pos:start="3376:5" pos:end="3376:18"><name pos:start="3376:5" pos:end="3376:14">save_state</name><argument_list pos:start="3376:15" pos:end="3376:18">(<argument pos:start="3376:16" pos:end="3376:17"><expr pos:start="3376:16" pos:end="3376:17"><name pos:start="3376:16" pos:end="3376:17">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="3378:5" pos:end="3378:34"><expr pos:start="3378:5" pos:end="3378:33"><call pos:start="3378:5" pos:end="3378:33"><name pos:start="3378:5" pos:end="3378:20">gen_op_exception</name><argument_list pos:start="3378:21" pos:end="3378:33">(<argument pos:start="3378:22" pos:end="3378:32"><expr pos:start="3378:22" pos:end="3378:32"><name pos:start="3378:22" pos:end="3378:32">TT_NCP_INSN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="3380:5" pos:end="3380:18"><expr pos:start="3380:5" pos:end="3380:17"><name pos:start="3380:5" pos:end="3380:13"><name pos:start="3380:5" pos:end="3380:6">dc</name><operator pos:start="3380:7" pos:end="3380:8">-&gt;</operator><name pos:start="3380:9" pos:end="3380:13">is_br</name></name> <operator pos:start="3380:15" pos:end="3380:15">=</operator> <literal type="number" pos:start="3380:17" pos:end="3380:17">1</literal></expr>;</expr_stmt>

    <return pos:start="3382:5" pos:end="3385:0">return;</return>

<cpp:endif pos:start="3384:1" pos:end="3384:6">#<cpp:directive pos:start="3384:2" pos:end="3384:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function></unit>
