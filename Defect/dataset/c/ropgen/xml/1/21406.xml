<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21406.c" pos:tabs="8"><function pos:start="1:1" pos:end="785:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_h263_decode_frame</name><parameter_list pos:start="1:25" pos:end="5:45">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:39"><decl pos:start="3:30" pos:end="3:39"><type pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:33">void</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">data</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:44">int</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:55">data_size</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:44"><decl pos:start="5:30" pos:end="5:44"><type pos:start="5:30" pos:end="5:44"><name pos:start="5:30" pos:end="5:37">AVPacket</name> <modifier pos:start="5:39" pos:end="5:39">*</modifier></type><name pos:start="5:40" pos:end="5:44">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="785:1">{<block_content pos:start="9:5" pos:end="783:97">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:40"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">MpegEncContext</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:21">s</name> <init pos:start="13:23" pos:end="13:40">= <expr pos:start="13:25" pos:end="13:40"><name pos:start="13:25" pos:end="13:40"><name pos:start="13:25" pos:end="13:29">avctx</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="22:0"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">AVFrame</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:17">pict</name> <init pos:start="17:19" pos:end="17:24">= <expr pos:start="17:21" pos:end="17:24"><name pos:start="17:21" pos:end="17:24">data</name></expr></init></decl>;</decl_stmt>



<cpp:ifdef pos:start="21:1" pos:end="21:23">#<cpp:directive pos:start="21:2" pos:end="21:6">ifdef</cpp:directive> <name pos:start="21:8" pos:end="21:23">PRINT_FRAME_TIME</name></cpp:ifdef>

<decl_stmt pos:start="23:1" pos:end="26:0"><decl pos:start="23:1" pos:end="23:22"><type pos:start="23:1" pos:end="23:8"><name pos:start="23:1" pos:end="23:8">uint64_t</name></type> <name pos:start="23:10" pos:end="23:13">time</name><init pos:start="23:14" pos:end="23:22">= <expr pos:start="23:16" pos:end="23:22"><call pos:start="23:16" pos:end="23:22"><name pos:start="23:16" pos:end="23:20">rdtsc</name><argument_list pos:start="23:21" pos:end="23:22">()</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:12">flags</name></name><operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:26"><name pos:start="27:15" pos:end="27:19">avctx</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:26">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:13">flags2</name></name><operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:28"><name pos:start="29:16" pos:end="29:20">avctx</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:28">flags2</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:34">/* no supplementary picture */</comment>

    <if_stmt pos:start="35:5" pos:end="55:5"><if pos:start="35:5" pos:end="55:5">if <condition pos:start="35:8" pos:end="35:22">(<expr pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:16">buf_size</name> <operator pos:start="35:18" pos:end="35:19">==</operator> <literal type="number" pos:start="35:21" pos:end="35:21">0</literal></expr>)</condition> <block pos:start="35:24" pos:end="55:5">{<block_content pos:start="39:9" pos:end="53:17">

        <comment type="block" pos:start="37:9" pos:end="37:43">/* special case for last picture */</comment>

        <if_stmt pos:start="39:9" pos:end="49:9"><if pos:start="39:9" pos:end="49:9">if <condition pos:start="39:12" pos:end="39:51">(<expr pos:start="39:13" pos:end="39:50"><name pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:24">low_delay</name></name><operator pos:start="39:25" pos:end="39:26">==</operator><literal type="number" pos:start="39:27" pos:end="39:27">0</literal> <operator pos:start="39:29" pos:end="39:30">&amp;&amp;</operator> <name pos:start="39:32" pos:end="39:50"><name pos:start="39:32" pos:end="39:32">s</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:50">next_picture_ptr</name></name></expr>)</condition> <block pos:start="39:53" pos:end="49:9">{<block_content pos:start="41:13" pos:end="47:41">

            <expr_stmt pos:start="41:13" pos:end="41:43"><expr pos:start="41:13" pos:end="41:42"><operator pos:start="41:13" pos:end="41:13">*</operator><name pos:start="41:14" pos:end="41:17">pict</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:42"><name pos:start="41:21" pos:end="41:21">s</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:39">next_picture_ptr</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:42">f</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:38"><expr pos:start="43:13" pos:end="43:37"><name pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:31">next_picture_ptr</name></name><operator pos:start="43:32" pos:end="43:32">=</operator> <name pos:start="43:34" pos:end="43:37">NULL</name></expr>;</expr_stmt>



            <expr_stmt pos:start="47:13" pos:end="47:41"><expr pos:start="47:13" pos:end="47:40"><operator pos:start="47:13" pos:end="47:13">*</operator><name pos:start="47:14" pos:end="47:22">data_size</name> <operator pos:start="47:24" pos:end="47:24">=</operator> <sizeof pos:start="47:26" pos:end="47:40">sizeof<argument_list pos:start="47:32" pos:end="47:40">(<argument pos:start="47:33" pos:end="47:39"><expr pos:start="47:33" pos:end="47:39"><name pos:start="47:33" pos:end="47:39">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <return pos:start="53:9" pos:end="53:17">return <expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="87:5"><if pos:start="59:5" pos:end="87:5">if<condition pos:start="59:7" pos:end="59:37">(<expr pos:start="59:8" pos:end="59:36"><name pos:start="59:8" pos:end="59:15"><name pos:start="59:8" pos:end="59:8">s</name><operator pos:start="59:9" pos:end="59:10">-&gt;</operator><name pos:start="59:11" pos:end="59:15">flags</name></name><operator pos:start="59:16" pos:end="59:16">&amp;</operator><name pos:start="59:17" pos:end="59:36">CODEC_FLAG_TRUNCATED</name></expr>)</condition><block pos:start="59:38" pos:end="87:5">{<block_content pos:start="61:9" pos:end="85:28">

        <decl_stmt pos:start="61:9" pos:end="61:17"><decl pos:start="61:9" pos:end="61:16"><type pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">int</name></type> <name pos:start="61:13" pos:end="61:16">next</name></decl>;</decl_stmt>



        <if_stmt pos:start="65:9" pos:end="79:9"><if pos:start="65:9" pos:end="69:9">if<condition pos:start="65:11" pos:end="65:63">(<expr pos:start="65:12" pos:end="65:62"><name pos:start="65:12" pos:end="65:31">CONFIG_MPEG4_DECODER</name> <operator pos:start="65:33" pos:end="65:34">&amp;&amp;</operator> <name pos:start="65:36" pos:end="65:46"><name pos:start="65:36" pos:end="65:36">s</name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:46">codec_id</name></name><operator pos:start="65:47" pos:end="65:48">==</operator><name pos:start="65:49" pos:end="65:62">CODEC_ID_MPEG4</name></expr>)</condition><block pos:start="65:64" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:76">

            <expr_stmt pos:start="67:13" pos:end="67:76"><expr pos:start="67:13" pos:end="67:75"><name pos:start="67:13" pos:end="67:16">next</name><operator pos:start="67:17" pos:end="67:17">=</operator> <call pos:start="67:19" pos:end="67:75"><name pos:start="67:19" pos:end="67:41">ff_mpeg4_find_frame_end</name><argument_list pos:start="67:42" pos:end="67:75">(<argument pos:start="67:43" pos:end="67:59"><expr pos:start="67:43" pos:end="67:59"><operator pos:start="67:43" pos:end="67:43">&amp;</operator><name pos:start="67:44" pos:end="67:59"><name pos:start="67:44" pos:end="67:44">s</name><operator pos:start="67:45" pos:end="67:46">-&gt;</operator><name pos:start="67:47" pos:end="67:59">parse_context</name></name></expr></argument>, <argument pos:start="67:62" pos:end="67:64"><expr pos:start="67:62" pos:end="67:64"><name pos:start="67:62" pos:end="67:64">buf</name></expr></argument>, <argument pos:start="67:67" pos:end="67:74"><expr pos:start="67:67" pos:end="67:74"><name pos:start="67:67" pos:end="67:74">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="69:10" pos:end="73:9">else if<condition pos:start="69:17" pos:end="69:67">(<expr pos:start="69:18" pos:end="69:66"><name pos:start="69:18" pos:end="69:36">CONFIG_H263_DECODER</name> <operator pos:start="69:38" pos:end="69:39">&amp;&amp;</operator> <name pos:start="69:41" pos:end="69:51"><name pos:start="69:41" pos:end="69:41">s</name><operator pos:start="69:42" pos:end="69:43">-&gt;</operator><name pos:start="69:44" pos:end="69:51">codec_id</name></name><operator pos:start="69:52" pos:end="69:53">==</operator><name pos:start="69:54" pos:end="69:66">CODEC_ID_H263</name></expr>)</condition><block pos:start="69:68" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:75">

            <expr_stmt pos:start="71:13" pos:end="71:75"><expr pos:start="71:13" pos:end="71:74"><name pos:start="71:13" pos:end="71:16">next</name><operator pos:start="71:17" pos:end="71:17">=</operator> <call pos:start="71:19" pos:end="71:74"><name pos:start="71:19" pos:end="71:40">ff_h263_find_frame_end</name><argument_list pos:start="71:41" pos:end="71:74">(<argument pos:start="71:42" pos:end="71:58"><expr pos:start="71:42" pos:end="71:58"><operator pos:start="71:42" pos:end="71:42">&amp;</operator><name pos:start="71:43" pos:end="71:58"><name pos:start="71:43" pos:end="71:43">s</name><operator pos:start="71:44" pos:end="71:45">-&gt;</operator><name pos:start="71:46" pos:end="71:58">parse_context</name></name></expr></argument>, <argument pos:start="71:61" pos:end="71:63"><expr pos:start="71:61" pos:end="71:63"><name pos:start="71:61" pos:end="71:63">buf</name></expr></argument>, <argument pos:start="71:66" pos:end="71:73"><expr pos:start="71:66" pos:end="71:73"><name pos:start="71:66" pos:end="71:73">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="73:10" pos:end="79:9">else<block pos:start="73:14" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:22">

            <expr_stmt pos:start="75:13" pos:end="75:97"><expr pos:start="75:13" pos:end="75:96"><call pos:start="75:13" pos:end="75:96"><name pos:start="75:13" pos:end="75:18">av_log</name><argument_list pos:start="75:19" pos:end="75:96">(<argument pos:start="75:20" pos:end="75:27"><expr pos:start="75:20" pos:end="75:27"><name pos:start="75:20" pos:end="75:27"><name pos:start="75:20" pos:end="75:20">s</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:27">avctx</name></name></expr></argument>, <argument pos:start="75:30" pos:end="75:41"><expr pos:start="75:30" pos:end="75:41"><name pos:start="75:30" pos:end="75:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:44" pos:end="75:95"><expr pos:start="75:44" pos:end="75:95"><literal type="string" pos:start="75:44" pos:end="75:95">"this codec does not support truncated bitstreams\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="77:13" pos:end="77:22">return <expr pos:start="77:20" pos:end="77:21"><operator pos:start="77:20" pos:end="77:20">-</operator><literal type="number" pos:start="77:21" pos:end="77:21">1</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="83:9" pos:end="85:28"><if pos:start="83:9" pos:end="85:28">if<condition pos:start="83:11" pos:end="83:94">( <expr pos:start="83:13" pos:end="83:92"><call pos:start="83:13" pos:end="83:88"><name pos:start="83:13" pos:end="83:28">ff_combine_frame</name><argument_list pos:start="83:29" pos:end="83:88">(<argument pos:start="83:30" pos:end="83:46"><expr pos:start="83:30" pos:end="83:46"><operator pos:start="83:30" pos:end="83:30">&amp;</operator><name pos:start="83:31" pos:end="83:46"><name pos:start="83:31" pos:end="83:31">s</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:46">parse_context</name></name></expr></argument>, <argument pos:start="83:49" pos:end="83:52"><expr pos:start="83:49" pos:end="83:52"><name pos:start="83:49" pos:end="83:52">next</name></expr></argument>, <argument pos:start="83:55" pos:end="83:76"><expr pos:start="83:55" pos:end="83:76"><operator pos:start="83:55" pos:end="83:55">(</operator><specifier pos:start="83:56" pos:end="83:60">const</specifier> <name pos:start="83:62" pos:end="83:68">uint8_t</name> <operator pos:start="83:70" pos:end="83:70">*</operator><operator pos:start="83:71" pos:end="83:71">*</operator><operator pos:start="83:72" pos:end="83:72">)</operator><operator pos:start="83:73" pos:end="83:73">&amp;</operator><name pos:start="83:74" pos:end="83:76">buf</name></expr></argument>, <argument pos:start="83:79" pos:end="83:87"><expr pos:start="83:79" pos:end="83:87"><operator pos:start="83:79" pos:end="83:79">&amp;</operator><name pos:start="83:80" pos:end="83:87">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="83:90" pos:end="83:90">&lt;</operator> <literal type="number" pos:start="83:92" pos:end="83:92">0</literal></expr> )</condition><block type="pseudo" pos:start="85:13" pos:end="85:28"><block_content pos:start="85:13" pos:end="85:28">

            <return pos:start="85:13" pos:end="85:28">return <expr pos:start="85:20" pos:end="85:27"><name pos:start="85:20" pos:end="85:27">buf_size</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>





<label pos:start="93:1" pos:end="93:6"><name pos:start="93:1" pos:end="93:5">retry</name>:</label>



    <if_stmt pos:start="97:5" pos:end="103:47"><if pos:start="97:5" pos:end="101:5">if<condition pos:start="97:7" pos:end="97:67">(<expr pos:start="97:8" pos:end="97:66"><name pos:start="97:8" pos:end="97:31"><name pos:start="97:8" pos:end="97:8">s</name><operator pos:start="97:9" pos:end="97:10">-&gt;</operator><name pos:start="97:11" pos:end="97:31">bitstream_buffer_size</name></name> <operator pos:start="97:33" pos:end="97:34">&amp;&amp;</operator> <operator pos:start="97:36" pos:end="97:36">(</operator><name pos:start="97:37" pos:end="97:50"><name pos:start="97:37" pos:end="97:37">s</name><operator pos:start="97:38" pos:end="97:39">-&gt;</operator><name pos:start="97:40" pos:end="97:50">divx_packed</name></name> <operator pos:start="97:52" pos:end="97:53">||</operator> <name pos:start="97:55" pos:end="97:62">buf_size</name><operator pos:start="97:63" pos:end="97:63">&lt;</operator><literal type="number" pos:start="97:64" pos:end="97:65">20</literal><operator pos:start="97:66" pos:end="97:66">)</operator></expr>)</condition><block pos:start="97:68" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:79"> <comment type="line" pos:start="97:70" pos:end="97:100">//divx 5.01+/xvid frame reorder</comment>

        <expr_stmt pos:start="99:9" pos:end="99:79"><expr pos:start="99:9" pos:end="99:78"><call pos:start="99:9" pos:end="99:78"><name pos:start="99:9" pos:end="99:21">init_get_bits</name><argument_list pos:start="99:22" pos:end="99:78">(<argument pos:start="99:23" pos:end="99:28"><expr pos:start="99:23" pos:end="99:28"><operator pos:start="99:23" pos:end="99:23">&amp;</operator><name pos:start="99:24" pos:end="99:28"><name pos:start="99:24" pos:end="99:24">s</name><operator pos:start="99:25" pos:end="99:26">-&gt;</operator><name pos:start="99:27" pos:end="99:28">gb</name></name></expr></argument>, <argument pos:start="99:31" pos:end="99:49"><expr pos:start="99:31" pos:end="99:49"><name pos:start="99:31" pos:end="99:49"><name pos:start="99:31" pos:end="99:31">s</name><operator pos:start="99:32" pos:end="99:33">-&gt;</operator><name pos:start="99:34" pos:end="99:49">bitstream_buffer</name></name></expr></argument>, <argument pos:start="99:52" pos:end="99:77"><expr pos:start="99:52" pos:end="99:77"><name pos:start="99:52" pos:end="99:75"><name pos:start="99:52" pos:end="99:52">s</name><operator pos:start="99:53" pos:end="99:54">-&gt;</operator><name pos:start="99:55" pos:end="99:75">bitstream_buffer_size</name></name><operator pos:start="99:76" pos:end="99:76">*</operator><literal type="number" pos:start="99:77" pos:end="99:77">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="101:6" pos:end="103:47">else<block type="pseudo" pos:start="103:9" pos:end="103:47"><block_content pos:start="103:9" pos:end="103:47">

        <expr_stmt pos:start="103:9" pos:end="103:47"><expr pos:start="103:9" pos:end="103:46"><call pos:start="103:9" pos:end="103:46"><name pos:start="103:9" pos:end="103:21">init_get_bits</name><argument_list pos:start="103:22" pos:end="103:46">(<argument pos:start="103:23" pos:end="103:28"><expr pos:start="103:23" pos:end="103:28"><operator pos:start="103:23" pos:end="103:23">&amp;</operator><name pos:start="103:24" pos:end="103:28"><name pos:start="103:24" pos:end="103:24">s</name><operator pos:start="103:25" pos:end="103:26">-&gt;</operator><name pos:start="103:27" pos:end="103:28">gb</name></name></expr></argument>, <argument pos:start="103:31" pos:end="103:33"><expr pos:start="103:31" pos:end="103:33"><name pos:start="103:31" pos:end="103:33">buf</name></expr></argument>, <argument pos:start="103:36" pos:end="103:45"><expr pos:start="103:36" pos:end="103:45"><name pos:start="103:36" pos:end="103:43">buf_size</name><operator pos:start="103:44" pos:end="103:44">*</operator><literal type="number" pos:start="103:45" pos:end="103:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:31"><expr pos:start="105:5" pos:end="105:30"><name pos:start="105:5" pos:end="105:28"><name pos:start="105:5" pos:end="105:5">s</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:28">bitstream_buffer_size</name></name><operator pos:start="105:29" pos:end="105:29">=</operator><literal type="number" pos:start="105:30" pos:end="105:30">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="109:5" pos:end="115:5"><if pos:start="109:5" pos:end="115:5">if <condition pos:start="109:8" pos:end="109:32">(<expr pos:start="109:9" pos:end="109:31"><operator pos:start="109:9" pos:end="109:9">!</operator><name pos:start="109:10" pos:end="109:31"><name pos:start="109:10" pos:end="109:10">s</name><operator pos:start="109:11" pos:end="109:12">-&gt;</operator><name pos:start="109:13" pos:end="109:31">context_initialized</name></name></expr>)</condition> <block pos:start="109:34" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:22">

        <if_stmt pos:start="111:9" pos:end="113:22"><if pos:start="111:9" pos:end="113:22">if <condition pos:start="111:12" pos:end="111:38">(<expr pos:start="111:13" pos:end="111:37"><call pos:start="111:13" pos:end="111:33"><name pos:start="111:13" pos:end="111:30">ff_MPV_common_init</name><argument_list pos:start="111:31" pos:end="111:33">(<argument pos:start="111:32" pos:end="111:32"><expr pos:start="111:32" pos:end="111:32"><name pos:start="111:32" pos:end="111:32">s</name></expr></argument>)</argument_list></call> <operator pos:start="111:35" pos:end="111:35">&lt;</operator> <literal type="number" pos:start="111:37" pos:end="111:37">0</literal></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:22"><block_content pos:start="113:13" pos:end="113:22"> <comment type="line" pos:start="111:40" pos:end="111:96">//we need the idct permutaton for reading a custom matrix</comment>

            <return pos:start="113:13" pos:end="113:22">return <expr pos:start="113:20" pos:end="113:21"><operator pos:start="113:20" pos:end="113:20">-</operator><literal type="number" pos:start="113:21" pos:end="113:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="119:5" pos:end="121:52">/* We need to set current_picture_ptr before reading the header,

     * otherwise we cannot store anyting in there */</comment>

    <if_stmt pos:start="123:5" pos:end="133:5"><if pos:start="123:5" pos:end="133:5">if <condition pos:start="123:8" pos:end="123:76">(<expr pos:start="123:9" pos:end="123:75"><name pos:start="123:9" pos:end="123:30"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:30">current_picture_ptr</name></name> <operator pos:start="123:32" pos:end="123:33">==</operator> <name pos:start="123:35" pos:end="123:38">NULL</name> <operator pos:start="123:40" pos:end="123:41">||</operator> <name pos:start="123:43" pos:end="123:75"><name pos:start="123:43" pos:end="123:43">s</name><operator pos:start="123:44" pos:end="123:45">-&gt;</operator><name pos:start="123:46" pos:end="123:64">current_picture_ptr</name><operator pos:start="123:65" pos:end="123:66">-&gt;</operator><name pos:start="123:67" pos:end="123:67">f</name><operator pos:start="123:68" pos:end="123:68">.</operator><name pos:start="123:69" pos:end="123:72">data</name><index pos:start="123:73" pos:end="123:75">[<expr pos:start="123:74" pos:end="123:74"><literal type="number" pos:start="123:74" pos:end="123:74">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="123:78" pos:end="133:5">{<block_content pos:start="125:9" pos:end="131:47">

        <decl_stmt pos:start="125:9" pos:end="125:44"><decl pos:start="125:9" pos:end="125:43"><type pos:start="125:9" pos:end="125:11"><name pos:start="125:9" pos:end="125:11">int</name></type> <name pos:start="125:13" pos:end="125:13">i</name><init pos:start="125:14" pos:end="125:43">= <expr pos:start="125:16" pos:end="125:43"><call pos:start="125:16" pos:end="125:43"><name pos:start="125:16" pos:end="125:37">ff_find_unused_picture</name><argument_list pos:start="125:38" pos:end="125:43">(<argument pos:start="125:39" pos:end="125:39"><expr pos:start="125:39" pos:end="125:39"><name pos:start="125:39" pos:end="125:39">s</name></expr></argument>, <argument pos:start="125:42" pos:end="125:42"><expr pos:start="125:42" pos:end="125:42"><literal type="number" pos:start="125:42" pos:end="125:42">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="127:9" pos:end="129:21"><if pos:start="127:9" pos:end="129:21">if <condition pos:start="127:12" pos:end="127:18">(<expr pos:start="127:13" pos:end="127:17"><name pos:start="127:13" pos:end="127:13">i</name> <operator pos:start="127:15" pos:end="127:15">&lt;</operator> <literal type="number" pos:start="127:17" pos:end="127:17">0</literal></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:21"><block_content pos:start="129:13" pos:end="129:21">

            <return pos:start="129:13" pos:end="129:21">return <expr pos:start="129:20" pos:end="129:20"><name pos:start="129:20" pos:end="129:20">i</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:47"><expr pos:start="131:9" pos:end="131:46"><name pos:start="131:9" pos:end="131:30"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:30">current_picture_ptr</name></name><operator pos:start="131:31" pos:end="131:31">=</operator> <operator pos:start="131:33" pos:end="131:33">&amp;</operator><name pos:start="131:34" pos:end="131:46"><name pos:start="131:34" pos:end="131:34">s</name><operator pos:start="131:35" pos:end="131:36">-&gt;</operator><name pos:start="131:37" pos:end="131:43">picture</name><index pos:start="131:44" pos:end="131:46">[<expr pos:start="131:45" pos:end="131:45"><name pos:start="131:45" pos:end="131:45">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="137:5" pos:end="137:22">/* let's go :-) */</comment>

    <if_stmt pos:start="139:5" pos:end="175:5"><if pos:start="139:5" pos:end="143:5">if <condition pos:start="139:8" pos:end="139:53">(<expr pos:start="139:9" pos:end="139:52"><name pos:start="139:9" pos:end="139:27">CONFIG_WMV2_DECODER</name> <operator pos:start="139:29" pos:end="139:30">&amp;&amp;</operator> <name pos:start="139:32" pos:end="139:49"><name pos:start="139:32" pos:end="139:32">s</name><operator pos:start="139:33" pos:end="139:34">-&gt;</operator><name pos:start="139:35" pos:end="139:49">msmpeg4_version</name></name><operator pos:start="139:50" pos:end="139:51">==</operator><literal type="number" pos:start="139:52" pos:end="139:52">5</literal></expr>)</condition> <block pos:start="139:55" pos:end="143:5">{<block_content pos:start="141:9" pos:end="141:46">

        <expr_stmt pos:start="141:9" pos:end="141:46"><expr pos:start="141:9" pos:end="141:45"><name pos:start="141:9" pos:end="141:11">ret</name><operator pos:start="141:12" pos:end="141:12">=</operator> <call pos:start="141:14" pos:end="141:45"><name pos:start="141:14" pos:end="141:42">ff_wmv2_decode_picture_header</name><argument_list pos:start="141:43" pos:end="141:45">(<argument pos:start="141:44" pos:end="141:44"><expr pos:start="141:44" pos:end="141:44"><name pos:start="141:44" pos:end="141:44">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="143:7" pos:end="147:5">else if <condition pos:start="143:15" pos:end="143:60">(<expr pos:start="143:16" pos:end="143:59"><name pos:start="143:16" pos:end="143:37">CONFIG_MSMPEG4_DECODER</name> <operator pos:start="143:39" pos:end="143:40">&amp;&amp;</operator> <name pos:start="143:42" pos:end="143:59"><name pos:start="143:42" pos:end="143:42">s</name><operator pos:start="143:43" pos:end="143:44">-&gt;</operator><name pos:start="143:45" pos:end="143:59">msmpeg4_version</name></name></expr>)</condition> <block pos:start="143:62" pos:end="147:5">{<block_content pos:start="145:9" pos:end="145:50">

        <expr_stmt pos:start="145:9" pos:end="145:50"><expr pos:start="145:9" pos:end="145:49"><name pos:start="145:9" pos:end="145:11">ret</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <call pos:start="145:15" pos:end="145:49"><name pos:start="145:15" pos:end="145:46">ff_msmpeg4_decode_picture_header</name><argument_list pos:start="145:47" pos:end="145:49">(<argument pos:start="145:48" pos:end="145:48"><expr pos:start="145:48" pos:end="145:48"><name pos:start="145:48" pos:end="145:48">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="147:7" pos:end="163:5">else if <condition pos:start="147:15" pos:end="147:52">(<expr pos:start="147:16" pos:end="147:51"><name pos:start="147:16" pos:end="147:35">CONFIG_MPEG4_DECODER</name> <operator pos:start="147:37" pos:end="147:38">&amp;&amp;</operator> <name pos:start="147:40" pos:end="147:51"><name pos:start="147:40" pos:end="147:40">s</name><operator pos:start="147:41" pos:end="147:42">-&gt;</operator><name pos:start="147:43" pos:end="147:51">h263_pred</name></name></expr>)</condition> <block pos:start="147:54" pos:end="163:5">{<block_content pos:start="149:9" pos:end="161:56">

        <if_stmt pos:start="149:9" pos:end="159:9"><if pos:start="149:9" pos:end="159:9">if<condition pos:start="149:11" pos:end="149:60">(<expr pos:start="149:12" pos:end="149:59"><name pos:start="149:12" pos:end="149:35"><name pos:start="149:12" pos:end="149:12">s</name><operator pos:start="149:13" pos:end="149:14">-&gt;</operator><name pos:start="149:15" pos:end="149:19">avctx</name><operator pos:start="149:20" pos:end="149:21">-&gt;</operator><name pos:start="149:22" pos:end="149:35">extradata_size</name></name> <operator pos:start="149:37" pos:end="149:38">&amp;&amp;</operator> <name pos:start="149:40" pos:end="149:56"><name pos:start="149:40" pos:end="149:40">s</name><operator pos:start="149:41" pos:end="149:42">-&gt;</operator><name pos:start="149:43" pos:end="149:56">picture_number</name></name><operator pos:start="149:57" pos:end="149:58">==</operator><literal type="number" pos:start="149:59" pos:end="149:59">0</literal></expr>)</condition><block pos:start="149:61" pos:end="159:9">{<block_content pos:start="151:13" pos:end="157:57">

            <decl_stmt pos:start="151:13" pos:end="151:29"><decl pos:start="151:13" pos:end="151:28"><type pos:start="151:13" pos:end="151:25"><name pos:start="151:13" pos:end="151:25">GetBitContext</name></type> <name pos:start="151:27" pos:end="151:28">gb</name></decl>;</decl_stmt>



            <expr_stmt pos:start="155:13" pos:end="155:80"><expr pos:start="155:13" pos:end="155:79"><call pos:start="155:13" pos:end="155:79"><name pos:start="155:13" pos:end="155:25">init_get_bits</name><argument_list pos:start="155:26" pos:end="155:79">(<argument pos:start="155:27" pos:end="155:29"><expr pos:start="155:27" pos:end="155:29"><operator pos:start="155:27" pos:end="155:27">&amp;</operator><name pos:start="155:28" pos:end="155:29">gb</name></expr></argument>, <argument pos:start="155:32" pos:end="155:50"><expr pos:start="155:32" pos:end="155:50"><name pos:start="155:32" pos:end="155:50"><name pos:start="155:32" pos:end="155:32">s</name><operator pos:start="155:33" pos:end="155:34">-&gt;</operator><name pos:start="155:35" pos:end="155:39">avctx</name><operator pos:start="155:40" pos:end="155:41">-&gt;</operator><name pos:start="155:42" pos:end="155:50">extradata</name></name></expr></argument>, <argument pos:start="155:53" pos:end="155:78"><expr pos:start="155:53" pos:end="155:78"><name pos:start="155:53" pos:end="155:76"><name pos:start="155:53" pos:end="155:53">s</name><operator pos:start="155:54" pos:end="155:55">-&gt;</operator><name pos:start="155:56" pos:end="155:60">avctx</name><operator pos:start="155:61" pos:end="155:62">-&gt;</operator><name pos:start="155:63" pos:end="155:76">extradata_size</name></name><operator pos:start="155:77" pos:end="155:77">*</operator><literal type="number" pos:start="155:78" pos:end="155:78">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:57"><expr pos:start="157:13" pos:end="157:56"><name pos:start="157:13" pos:end="157:15">ret</name> <operator pos:start="157:17" pos:end="157:17">=</operator> <call pos:start="157:19" pos:end="157:56"><name pos:start="157:19" pos:end="157:48">ff_mpeg4_decode_picture_header</name><argument_list pos:start="157:49" pos:end="157:56">(<argument pos:start="157:50" pos:end="157:50"><expr pos:start="157:50" pos:end="157:50"><name pos:start="157:50" pos:end="157:50">s</name></expr></argument>, <argument pos:start="157:53" pos:end="157:55"><expr pos:start="157:53" pos:end="157:55"><operator pos:start="157:53" pos:end="157:53">&amp;</operator><name pos:start="157:54" pos:end="157:55">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:56"><expr pos:start="161:9" pos:end="161:55"><name pos:start="161:9" pos:end="161:11">ret</name> <operator pos:start="161:13" pos:end="161:13">=</operator> <call pos:start="161:15" pos:end="161:55"><name pos:start="161:15" pos:end="161:44">ff_mpeg4_decode_picture_header</name><argument_list pos:start="161:45" pos:end="161:55">(<argument pos:start="161:46" pos:end="161:46"><expr pos:start="161:46" pos:end="161:46"><name pos:start="161:46" pos:end="161:46">s</name></expr></argument>, <argument pos:start="161:49" pos:end="161:54"><expr pos:start="161:49" pos:end="161:54"><operator pos:start="161:49" pos:end="161:49">&amp;</operator><name pos:start="161:50" pos:end="161:54"><name pos:start="161:50" pos:end="161:50">s</name><operator pos:start="161:51" pos:end="161:52">-&gt;</operator><name pos:start="161:53" pos:end="161:54">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="163:7" pos:end="167:5">else if <condition pos:start="163:15" pos:end="163:69">(<expr pos:start="163:16" pos:end="163:68"><name pos:start="163:16" pos:end="163:35">CONFIG_H263I_DECODER</name> <operator pos:start="163:37" pos:end="163:38">&amp;&amp;</operator> <name pos:start="163:40" pos:end="163:50"><name pos:start="163:40" pos:end="163:40">s</name><operator pos:start="163:41" pos:end="163:42">-&gt;</operator><name pos:start="163:43" pos:end="163:50">codec_id</name></name> <operator pos:start="163:52" pos:end="163:53">==</operator> <name pos:start="163:55" pos:end="163:68">CODEC_ID_H263I</name></expr>)</condition> <block pos:start="163:71" pos:end="167:5">{<block_content pos:start="165:9" pos:end="165:53">

        <expr_stmt pos:start="165:9" pos:end="165:53"><expr pos:start="165:9" pos:end="165:52"><name pos:start="165:9" pos:end="165:11">ret</name> <operator pos:start="165:13" pos:end="165:13">=</operator> <call pos:start="165:15" pos:end="165:52"><name pos:start="165:15" pos:end="165:49">ff_intel_h263_decode_picture_header</name><argument_list pos:start="165:50" pos:end="165:52">(<argument pos:start="165:51" pos:end="165:51"><expr pos:start="165:51" pos:end="165:51"><name pos:start="165:51" pos:end="165:51">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="167:7" pos:end="171:5">else if <condition pos:start="167:15" pos:end="167:49">(<expr pos:start="167:16" pos:end="167:48"><name pos:start="167:16" pos:end="167:33">CONFIG_FLV_DECODER</name> <operator pos:start="167:35" pos:end="167:36">&amp;&amp;</operator> <name pos:start="167:38" pos:end="167:48"><name pos:start="167:38" pos:end="167:38">s</name><operator pos:start="167:39" pos:end="167:40">-&gt;</operator><name pos:start="167:41" pos:end="167:48">h263_flv</name></name></expr>)</condition> <block pos:start="167:51" pos:end="171:5">{<block_content pos:start="169:9" pos:end="169:46">

        <expr_stmt pos:start="169:9" pos:end="169:46"><expr pos:start="169:9" pos:end="169:45"><name pos:start="169:9" pos:end="169:11">ret</name> <operator pos:start="169:13" pos:end="169:13">=</operator> <call pos:start="169:15" pos:end="169:45"><name pos:start="169:15" pos:end="169:42">ff_flv_decode_picture_header</name><argument_list pos:start="169:43" pos:end="169:45">(<argument pos:start="169:44" pos:end="169:44"><expr pos:start="169:44" pos:end="169:44"><name pos:start="169:44" pos:end="169:44">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="171:7" pos:end="175:5">else <block pos:start="171:12" pos:end="175:5">{<block_content pos:start="173:9" pos:end="173:47">

        <expr_stmt pos:start="173:9" pos:end="173:47"><expr pos:start="173:9" pos:end="173:46"><name pos:start="173:9" pos:end="173:11">ret</name> <operator pos:start="173:13" pos:end="173:13">=</operator> <call pos:start="173:15" pos:end="173:46"><name pos:start="173:15" pos:end="173:43">ff_h263_decode_picture_header</name><argument_list pos:start="173:44" pos:end="173:46">(<argument pos:start="173:45" pos:end="173:45"><expr pos:start="173:45" pos:end="173:45"><name pos:start="173:45" pos:end="173:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="179:5" pos:end="179:66"><if pos:start="179:5" pos:end="179:66">if<condition pos:start="179:7" pos:end="179:26">(<expr pos:start="179:8" pos:end="179:25"><name pos:start="179:8" pos:end="179:10">ret</name><operator pos:start="179:11" pos:end="179:12">==</operator><name pos:start="179:13" pos:end="179:25">FRAME_SKIPPED</name></expr>)</condition><block type="pseudo" pos:start="179:28" pos:end="179:66"><block_content pos:start="179:28" pos:end="179:66"> <return pos:start="179:28" pos:end="179:66">return <expr pos:start="179:35" pos:end="179:65"><call pos:start="179:35" pos:end="179:65"><name pos:start="179:35" pos:end="179:52">get_consumed_bytes</name><argument_list pos:start="179:53" pos:end="179:65">(<argument pos:start="179:54" pos:end="179:54"><expr pos:start="179:54" pos:end="179:54"><name pos:start="179:54" pos:end="179:54">s</name></expr></argument>, <argument pos:start="179:57" pos:end="179:64"><expr pos:start="179:57" pos:end="179:64"><name pos:start="179:57" pos:end="179:64">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="183:5" pos:end="183:41">/* skip if the header was thrashed */</comment>

    <if_stmt pos:start="185:5" pos:end="191:5"><if pos:start="185:5" pos:end="191:5">if <condition pos:start="185:8" pos:end="185:16">(<expr pos:start="185:9" pos:end="185:15"><name pos:start="185:9" pos:end="185:11">ret</name> <operator pos:start="185:13" pos:end="185:13">&lt;</operator> <literal type="number" pos:start="185:15" pos:end="185:15">0</literal></expr>)</condition><block pos:start="185:17" pos:end="191:5">{<block_content pos:start="187:9" pos:end="189:18">

        <expr_stmt pos:start="187:9" pos:end="187:59"><expr pos:start="187:9" pos:end="187:58"><call pos:start="187:9" pos:end="187:58"><name pos:start="187:9" pos:end="187:14">av_log</name><argument_list pos:start="187:15" pos:end="187:58">(<argument pos:start="187:16" pos:end="187:23"><expr pos:start="187:16" pos:end="187:23"><name pos:start="187:16" pos:end="187:23"><name pos:start="187:16" pos:end="187:16">s</name><operator pos:start="187:17" pos:end="187:18">-&gt;</operator><name pos:start="187:19" pos:end="187:23">avctx</name></name></expr></argument>, <argument pos:start="187:26" pos:end="187:37"><expr pos:start="187:26" pos:end="187:37"><name pos:start="187:26" pos:end="187:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="187:40" pos:end="187:57"><expr pos:start="187:40" pos:end="187:57"><literal type="string" pos:start="187:40" pos:end="187:57">"header damaged\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="189:9" pos:end="189:18">return <expr pos:start="189:16" pos:end="189:17"><operator pos:start="189:16" pos:end="189:16">-</operator><literal type="number" pos:start="189:17" pos:end="189:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="195:5" pos:end="195:39"><expr pos:start="195:5" pos:end="195:38"><name pos:start="195:5" pos:end="195:23"><name pos:start="195:5" pos:end="195:9">avctx</name><operator pos:start="195:10" pos:end="195:11">-&gt;</operator><name pos:start="195:12" pos:end="195:23">has_b_frames</name></name><operator pos:start="195:24" pos:end="195:24">=</operator> <operator pos:start="195:26" pos:end="195:26">!</operator><name pos:start="195:27" pos:end="195:38"><name pos:start="195:27" pos:end="195:27">s</name><operator pos:start="195:28" pos:end="195:29">-&gt;</operator><name pos:start="195:30" pos:end="195:38">low_delay</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="199:5" pos:end="223:5"><if pos:start="199:5" pos:end="223:5">if<condition pos:start="199:7" pos:end="199:69">(<expr pos:start="199:8" pos:end="199:68"><name pos:start="199:8" pos:end="199:20"><name pos:start="199:8" pos:end="199:8">s</name><operator pos:start="199:9" pos:end="199:10">-&gt;</operator><name pos:start="199:11" pos:end="199:20">xvid_build</name></name><operator pos:start="199:21" pos:end="199:22">==</operator><operator pos:start="199:23" pos:end="199:23">-</operator><literal type="number" pos:start="199:24" pos:end="199:24">1</literal> <operator pos:start="199:26" pos:end="199:27">&amp;&amp;</operator> <name pos:start="199:29" pos:end="199:43"><name pos:start="199:29" pos:end="199:29">s</name><operator pos:start="199:30" pos:end="199:31">-&gt;</operator><name pos:start="199:32" pos:end="199:43">divx_version</name></name><operator pos:start="199:44" pos:end="199:45">==</operator><operator pos:start="199:46" pos:end="199:46">-</operator><literal type="number" pos:start="199:47" pos:end="199:47">1</literal> <operator pos:start="199:49" pos:end="199:50">&amp;&amp;</operator> <name pos:start="199:52" pos:end="199:64"><name pos:start="199:52" pos:end="199:52">s</name><operator pos:start="199:53" pos:end="199:54">-&gt;</operator><name pos:start="199:55" pos:end="199:64">lavc_build</name></name><operator pos:start="199:65" pos:end="199:66">==</operator><operator pos:start="199:67" pos:end="199:67">-</operator><literal type="number" pos:start="199:68" pos:end="199:68">1</literal></expr>)</condition><block pos:start="199:70" pos:end="223:5">{<block_content pos:start="201:9" pos:end="222:0">

        <if_stmt pos:start="201:9" pos:end="222:0"><if pos:start="201:9" pos:end="222:0">if<condition pos:start="201:11" pos:end="209:12">(<expr pos:start="201:12" pos:end="207:42"><name pos:start="201:12" pos:end="201:30"><name pos:start="201:12" pos:end="201:12">s</name><operator pos:start="201:13" pos:end="201:14">-&gt;</operator><name pos:start="201:15" pos:end="201:30">stream_codec_tag</name></name> <operator pos:start="201:32" pos:end="201:33">==</operator> <call pos:start="201:35" pos:end="201:49"><name pos:start="201:35" pos:end="201:41">AV_RL32</name><argument_list pos:start="201:42" pos:end="201:49">(<argument pos:start="201:43" pos:end="201:48"><expr pos:start="201:43" pos:end="201:48"><literal type="string" pos:start="201:43" pos:end="201:48">"XVID"</literal></expr></argument>)</argument_list></call> <operator pos:start="201:51" pos:end="201:52">||</operator>

           <name pos:start="203:12" pos:end="203:23"><name pos:start="203:12" pos:end="203:12">s</name><operator pos:start="203:13" pos:end="203:14">-&gt;</operator><name pos:start="203:15" pos:end="203:23">codec_tag</name></name> <operator pos:start="203:25" pos:end="203:26">==</operator> <call pos:start="203:28" pos:end="203:42"><name pos:start="203:28" pos:end="203:34">AV_RL32</name><argument_list pos:start="203:35" pos:end="203:42">(<argument pos:start="203:36" pos:end="203:41"><expr pos:start="203:36" pos:end="203:41"><literal type="string" pos:start="203:36" pos:end="203:41">"XVID"</literal></expr></argument>)</argument_list></call> <operator pos:start="203:44" pos:end="203:45">||</operator> <name pos:start="203:47" pos:end="203:58"><name pos:start="203:47" pos:end="203:47">s</name><operator pos:start="203:48" pos:end="203:49">-&gt;</operator><name pos:start="203:50" pos:end="203:58">codec_tag</name></name> <operator pos:start="203:60" pos:end="203:61">==</operator> <call pos:start="203:63" pos:end="203:77"><name pos:start="203:63" pos:end="203:69">AV_RL32</name><argument_list pos:start="203:70" pos:end="203:77">(<argument pos:start="203:71" pos:end="203:76"><expr pos:start="203:71" pos:end="203:76"><literal type="string" pos:start="203:71" pos:end="203:76">"XVIX"</literal></expr></argument>)</argument_list></call> <operator pos:start="203:79" pos:end="203:80">||</operator>

           <name pos:start="205:12" pos:end="205:23"><name pos:start="205:12" pos:end="205:12">s</name><operator pos:start="205:13" pos:end="205:14">-&gt;</operator><name pos:start="205:15" pos:end="205:23">codec_tag</name></name> <operator pos:start="205:25" pos:end="205:26">==</operator> <call pos:start="205:28" pos:end="205:42"><name pos:start="205:28" pos:end="205:34">AV_RL32</name><argument_list pos:start="205:35" pos:end="205:42">(<argument pos:start="205:36" pos:end="205:41"><expr pos:start="205:36" pos:end="205:41"><literal type="string" pos:start="205:36" pos:end="205:41">"RMP4"</literal></expr></argument>)</argument_list></call> <operator pos:start="205:44" pos:end="205:45">||</operator>

           <name pos:start="207:12" pos:end="207:23"><name pos:start="207:12" pos:end="207:12">s</name><operator pos:start="207:13" pos:end="207:14">-&gt;</operator><name pos:start="207:15" pos:end="207:23">codec_tag</name></name> <operator pos:start="207:25" pos:end="207:26">==</operator> <call pos:start="207:28" pos:end="207:42"><name pos:start="207:28" pos:end="207:34">AV_RL32</name><argument_list pos:start="207:35" pos:end="207:42">(<argument pos:start="207:36" pos:end="207:41"><expr pos:start="207:36" pos:end="207:41"><literal type="string" pos:start="207:36" pos:end="207:41">"SIPP"</literal></expr></argument>)</argument_list></call></expr>

           )</condition><block type="pseudo" pos:start="211:13" pos:end="222:0"><block_content pos:start="211:13" pos:end="222:0">

            <expr_stmt pos:start="211:13" pos:end="222:0"><expr pos:start="211:13" pos:end="211:28"><name pos:start="211:13" pos:end="211:25"><name pos:start="211:13" pos:end="211:13">s</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:25">xvid_build</name></name><operator pos:start="211:26" pos:end="211:26">=</operator> <literal type="number" pos:start="211:28" pos:end="211:28">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:if pos:start="213:1" pos:end="213:5">#<cpp:directive pos:start="213:2" pos:end="213:3">if</cpp:directive> <expr pos:start="213:5" pos:end="213:5"><literal type="number" pos:start="213:5" pos:end="213:5">0</literal></expr></cpp:if>

        if(s-&gt;codec_tag == AV_RL32("DIVX") &amp;&amp; s-&gt;vo_type==0 &amp;&amp; s-&gt;vol_control_parameters==1

           &amp;&amp; s-&gt;padding_bug_score &gt; 0 &amp;&amp; s-&gt;low_delay) <comment type="line" pos:start="217:57" pos:end="217:84">// XVID with modified fourcc</comment>

            s-&gt;xvid_build= 0;

<cpp:endif pos:start="221:1" pos:end="221:6">#<cpp:directive pos:start="221:2" pos:end="221:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="227:5" pos:end="233:5"><if pos:start="227:5" pos:end="233:5">if<condition pos:start="227:7" pos:end="227:69">(<expr pos:start="227:8" pos:end="227:68"><name pos:start="227:8" pos:end="227:20"><name pos:start="227:8" pos:end="227:8">s</name><operator pos:start="227:9" pos:end="227:10">-&gt;</operator><name pos:start="227:11" pos:end="227:20">xvid_build</name></name><operator pos:start="227:21" pos:end="227:22">==</operator><operator pos:start="227:23" pos:end="227:23">-</operator><literal type="number" pos:start="227:24" pos:end="227:24">1</literal> <operator pos:start="227:26" pos:end="227:27">&amp;&amp;</operator> <name pos:start="227:29" pos:end="227:43"><name pos:start="227:29" pos:end="227:29">s</name><operator pos:start="227:30" pos:end="227:31">-&gt;</operator><name pos:start="227:32" pos:end="227:43">divx_version</name></name><operator pos:start="227:44" pos:end="227:45">==</operator><operator pos:start="227:46" pos:end="227:46">-</operator><literal type="number" pos:start="227:47" pos:end="227:47">1</literal> <operator pos:start="227:49" pos:end="227:50">&amp;&amp;</operator> <name pos:start="227:52" pos:end="227:64"><name pos:start="227:52" pos:end="227:52">s</name><operator pos:start="227:53" pos:end="227:54">-&gt;</operator><name pos:start="227:55" pos:end="227:64">lavc_build</name></name><operator pos:start="227:65" pos:end="227:66">==</operator><operator pos:start="227:67" pos:end="227:67">-</operator><literal type="number" pos:start="227:68" pos:end="227:68">1</literal></expr>)</condition><block pos:start="227:70" pos:end="233:5">{<block_content pos:start="229:9" pos:end="231:33">

        <if_stmt pos:start="229:9" pos:end="231:33"><if pos:start="229:9" pos:end="231:33">if<condition pos:start="229:11" pos:end="229:92">(<expr pos:start="229:12" pos:end="229:91"><name pos:start="229:12" pos:end="229:23"><name pos:start="229:12" pos:end="229:12">s</name><operator pos:start="229:13" pos:end="229:14">-&gt;</operator><name pos:start="229:15" pos:end="229:23">codec_tag</name></name> <operator pos:start="229:25" pos:end="229:26">==</operator> <call pos:start="229:28" pos:end="229:42"><name pos:start="229:28" pos:end="229:34">AV_RL32</name><argument_list pos:start="229:35" pos:end="229:42">(<argument pos:start="229:36" pos:end="229:41"><expr pos:start="229:36" pos:end="229:41"><literal type="string" pos:start="229:36" pos:end="229:41">"DIVX"</literal></expr></argument>)</argument_list></call> <operator pos:start="229:44" pos:end="229:45">&amp;&amp;</operator> <name pos:start="229:47" pos:end="229:56"><name pos:start="229:47" pos:end="229:47">s</name><operator pos:start="229:48" pos:end="229:49">-&gt;</operator><name pos:start="229:50" pos:end="229:56">vo_type</name></name><operator pos:start="229:57" pos:end="229:58">==</operator><literal type="number" pos:start="229:59" pos:end="229:59">0</literal> <operator pos:start="229:61" pos:end="229:62">&amp;&amp;</operator> <name pos:start="229:64" pos:end="229:88"><name pos:start="229:64" pos:end="229:64">s</name><operator pos:start="229:65" pos:end="229:66">-&gt;</operator><name pos:start="229:67" pos:end="229:88">vol_control_parameters</name></name><operator pos:start="229:89" pos:end="229:90">==</operator><literal type="number" pos:start="229:91" pos:end="229:91">0</literal></expr>)</condition><block type="pseudo" pos:start="231:13" pos:end="231:33"><block_content pos:start="231:13" pos:end="231:33">

            <expr_stmt pos:start="231:13" pos:end="231:33"><expr pos:start="231:13" pos:end="231:32"><name pos:start="231:13" pos:end="231:27"><name pos:start="231:13" pos:end="231:13">s</name><operator pos:start="231:14" pos:end="231:15">-&gt;</operator><name pos:start="231:16" pos:end="231:27">divx_version</name></name><operator pos:start="231:28" pos:end="231:28">=</operator> <literal type="number" pos:start="231:30" pos:end="231:32">400</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="231:35" pos:end="231:42">//divx 4</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="237:5" pos:end="243:5"><if pos:start="237:5" pos:end="243:5">if<condition pos:start="237:7" pos:end="237:46">(<expr pos:start="237:8" pos:end="237:45"><name pos:start="237:8" pos:end="237:20"><name pos:start="237:8" pos:end="237:8">s</name><operator pos:start="237:9" pos:end="237:10">-&gt;</operator><name pos:start="237:11" pos:end="237:20">xvid_build</name></name><operator pos:start="237:21" pos:end="237:22">&gt;=</operator><literal type="number" pos:start="237:23" pos:end="237:23">0</literal> <operator pos:start="237:25" pos:end="237:26">&amp;&amp;</operator> <name pos:start="237:28" pos:end="237:42"><name pos:start="237:28" pos:end="237:28">s</name><operator pos:start="237:29" pos:end="237:30">-&gt;</operator><name pos:start="237:31" pos:end="237:42">divx_version</name></name><operator pos:start="237:43" pos:end="237:44">&gt;=</operator><literal type="number" pos:start="237:45" pos:end="237:45">0</literal></expr>)</condition><block pos:start="237:47" pos:end="243:5">{<block_content pos:start="239:9" pos:end="241:26">

        <expr_stmt pos:start="239:9" pos:end="241:26"><expr pos:start="239:9" pos:end="241:25"><name pos:start="239:9" pos:end="239:23"><name pos:start="239:9" pos:end="239:9">s</name><operator pos:start="239:10" pos:end="239:11">-&gt;</operator><name pos:start="239:12" pos:end="239:23">divx_version</name></name><operator pos:start="239:24" pos:end="239:24">=</operator>

        <name pos:start="241:9" pos:end="241:21"><name pos:start="241:9" pos:end="241:9">s</name><operator pos:start="241:10" pos:end="241:11">-&gt;</operator><name pos:start="241:12" pos:end="241:21">divx_build</name></name><operator pos:start="241:22" pos:end="241:22">=</operator> <operator pos:start="241:24" pos:end="241:24">-</operator><literal type="number" pos:start="241:25" pos:end="241:25">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="247:5" pos:end="391:5"><if pos:start="247:5" pos:end="391:5">if<condition pos:start="247:7" pos:end="247:44">(<expr pos:start="247:8" pos:end="247:43"><name pos:start="247:8" pos:end="247:25"><name pos:start="247:8" pos:end="247:8">s</name><operator pos:start="247:9" pos:end="247:10">-&gt;</operator><name pos:start="247:11" pos:end="247:25">workaround_bugs</name></name><operator pos:start="247:26" pos:end="247:26">&amp;</operator><name pos:start="247:27" pos:end="247:43">FF_BUG_AUTODETECT</name></expr>)</condition><block pos:start="247:45" pos:end="391:5">{<block_content pos:start="249:9" pos:end="390:0">

        <if_stmt pos:start="249:9" pos:end="251:51"><if pos:start="249:9" pos:end="251:51">if<condition pos:start="249:11" pos:end="249:43">(<expr pos:start="249:12" pos:end="249:42"><name pos:start="249:12" pos:end="249:23"><name pos:start="249:12" pos:end="249:12">s</name><operator pos:start="249:13" pos:end="249:14">-&gt;</operator><name pos:start="249:15" pos:end="249:23">codec_tag</name></name> <operator pos:start="249:25" pos:end="249:26">==</operator> <call pos:start="249:28" pos:end="249:42"><name pos:start="249:28" pos:end="249:34">AV_RL32</name><argument_list pos:start="249:35" pos:end="249:42">(<argument pos:start="249:36" pos:end="249:41"><expr pos:start="249:36" pos:end="249:41"><literal type="string" pos:start="249:36" pos:end="249:41">"XVIX"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="251:13" pos:end="251:51"><block_content pos:start="251:13" pos:end="251:51">

            <expr_stmt pos:start="251:13" pos:end="251:51"><expr pos:start="251:13" pos:end="251:50"><name pos:start="251:13" pos:end="251:30"><name pos:start="251:13" pos:end="251:13">s</name><operator pos:start="251:14" pos:end="251:15">-&gt;</operator><name pos:start="251:16" pos:end="251:30">workaround_bugs</name></name><operator pos:start="251:31" pos:end="251:32">|=</operator> <name pos:start="251:34" pos:end="251:50">FF_BUG_XVID_ILACE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="255:9" pos:end="259:9"><if pos:start="255:9" pos:end="259:9">if<condition pos:start="255:11" pos:end="255:43">(<expr pos:start="255:12" pos:end="255:42"><name pos:start="255:12" pos:end="255:23"><name pos:start="255:12" pos:end="255:12">s</name><operator pos:start="255:13" pos:end="255:14">-&gt;</operator><name pos:start="255:15" pos:end="255:23">codec_tag</name></name> <operator pos:start="255:25" pos:end="255:26">==</operator> <call pos:start="255:28" pos:end="255:42"><name pos:start="255:28" pos:end="255:34">AV_RL32</name><argument_list pos:start="255:35" pos:end="255:42">(<argument pos:start="255:36" pos:end="255:41"><expr pos:start="255:36" pos:end="255:41"><literal type="string" pos:start="255:36" pos:end="255:41">"UMP4"</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="255:44" pos:end="259:9">{<block_content pos:start="257:13" pos:end="257:45">

            <expr_stmt pos:start="257:13" pos:end="257:45"><expr pos:start="257:13" pos:end="257:44"><name pos:start="257:13" pos:end="257:30"><name pos:start="257:13" pos:end="257:13">s</name><operator pos:start="257:14" pos:end="257:15">-&gt;</operator><name pos:start="257:16" pos:end="257:30">workaround_bugs</name></name><operator pos:start="257:31" pos:end="257:32">|=</operator> <name pos:start="257:34" pos:end="257:44">FF_BUG_UMP4</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="263:9" pos:end="267:9"><if pos:start="263:9" pos:end="267:9">if<condition pos:start="263:11" pos:end="263:54">(<expr pos:start="263:12" pos:end="263:53"><name pos:start="263:12" pos:end="263:26"><name pos:start="263:12" pos:end="263:12">s</name><operator pos:start="263:13" pos:end="263:14">-&gt;</operator><name pos:start="263:15" pos:end="263:26">divx_version</name></name><operator pos:start="263:27" pos:end="263:28">&gt;=</operator><literal type="number" pos:start="263:29" pos:end="263:31">500</literal> <operator pos:start="263:33" pos:end="263:34">&amp;&amp;</operator> <name pos:start="263:36" pos:end="263:48"><name pos:start="263:36" pos:end="263:36">s</name><operator pos:start="263:37" pos:end="263:38">-&gt;</operator><name pos:start="263:39" pos:end="263:48">divx_build</name></name><operator pos:start="263:49" pos:end="263:49">&lt;</operator><literal type="number" pos:start="263:50" pos:end="263:53">1814</literal></expr>)</condition><block pos:start="263:55" pos:end="267:9">{<block_content pos:start="265:13" pos:end="265:52">

            <expr_stmt pos:start="265:13" pos:end="265:52"><expr pos:start="265:13" pos:end="265:51"><name pos:start="265:13" pos:end="265:30"><name pos:start="265:13" pos:end="265:13">s</name><operator pos:start="265:14" pos:end="265:15">-&gt;</operator><name pos:start="265:16" pos:end="265:30">workaround_bugs</name></name><operator pos:start="265:31" pos:end="265:32">|=</operator> <name pos:start="265:34" pos:end="265:51">FF_BUG_QPEL_CHROMA</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="271:9" pos:end="275:9"><if pos:start="271:9" pos:end="275:9">if<condition pos:start="271:11" pos:end="271:53">(<expr pos:start="271:12" pos:end="271:52"><name pos:start="271:12" pos:end="271:26"><name pos:start="271:12" pos:end="271:12">s</name><operator pos:start="271:13" pos:end="271:14">-&gt;</operator><name pos:start="271:15" pos:end="271:26">divx_version</name></name><operator pos:start="271:27" pos:end="271:27">&gt;</operator><literal type="number" pos:start="271:28" pos:end="271:30">502</literal> <operator pos:start="271:32" pos:end="271:33">&amp;&amp;</operator> <name pos:start="271:35" pos:end="271:47"><name pos:start="271:35" pos:end="271:35">s</name><operator pos:start="271:36" pos:end="271:37">-&gt;</operator><name pos:start="271:38" pos:end="271:47">divx_build</name></name><operator pos:start="271:48" pos:end="271:48">&lt;</operator><literal type="number" pos:start="271:49" pos:end="271:52">1814</literal></expr>)</condition><block pos:start="271:54" pos:end="275:9">{<block_content pos:start="273:13" pos:end="273:53">

            <expr_stmt pos:start="273:13" pos:end="273:53"><expr pos:start="273:13" pos:end="273:52"><name pos:start="273:13" pos:end="273:30"><name pos:start="273:13" pos:end="273:13">s</name><operator pos:start="273:14" pos:end="273:15">-&gt;</operator><name pos:start="273:16" pos:end="273:30">workaround_bugs</name></name><operator pos:start="273:31" pos:end="273:32">|=</operator> <name pos:start="273:34" pos:end="273:52">FF_BUG_QPEL_CHROMA2</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="279:9" pos:end="281:49"><if pos:start="279:9" pos:end="281:49">if<condition pos:start="279:11" pos:end="279:29">(<expr pos:start="279:12" pos:end="279:28"><name pos:start="279:12" pos:end="279:24"><name pos:start="279:12" pos:end="279:12">s</name><operator pos:start="279:13" pos:end="279:14">-&gt;</operator><name pos:start="279:15" pos:end="279:24">xvid_build</name></name><operator pos:start="279:25" pos:end="279:26">&lt;=</operator><literal type="number" pos:start="279:27" pos:end="279:28">3U</literal></expr>)</condition><block type="pseudo" pos:start="281:13" pos:end="281:49"><block_content pos:start="281:13" pos:end="281:49">

            <expr_stmt pos:start="281:13" pos:end="281:49"><expr pos:start="281:13" pos:end="281:48"><name pos:start="281:13" pos:end="281:32"><name pos:start="281:13" pos:end="281:13">s</name><operator pos:start="281:14" pos:end="281:15">-&gt;</operator><name pos:start="281:16" pos:end="281:32">padding_bug_score</name></name><operator pos:start="281:33" pos:end="281:33">=</operator> <literal type="number" pos:start="281:35" pos:end="281:37">256</literal><operator pos:start="281:38" pos:end="281:38">*</operator><literal type="number" pos:start="281:39" pos:end="281:41">256</literal><operator pos:start="281:42" pos:end="281:42">*</operator><literal type="number" pos:start="281:43" pos:end="281:45">256</literal><operator pos:start="281:46" pos:end="281:46">*</operator><literal type="number" pos:start="281:47" pos:end="281:48">64</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="285:9" pos:end="287:52"><if pos:start="285:9" pos:end="287:52">if<condition pos:start="285:11" pos:end="285:29">(<expr pos:start="285:12" pos:end="285:28"><name pos:start="285:12" pos:end="285:24"><name pos:start="285:12" pos:end="285:12">s</name><operator pos:start="285:13" pos:end="285:14">-&gt;</operator><name pos:start="285:15" pos:end="285:24">xvid_build</name></name><operator pos:start="285:25" pos:end="285:26">&lt;=</operator><literal type="number" pos:start="285:27" pos:end="285:28">1U</literal></expr>)</condition><block type="pseudo" pos:start="287:13" pos:end="287:52"><block_content pos:start="287:13" pos:end="287:52">

            <expr_stmt pos:start="287:13" pos:end="287:52"><expr pos:start="287:13" pos:end="287:51"><name pos:start="287:13" pos:end="287:30"><name pos:start="287:13" pos:end="287:13">s</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:30">workaround_bugs</name></name><operator pos:start="287:31" pos:end="287:32">|=</operator> <name pos:start="287:34" pos:end="287:51">FF_BUG_QPEL_CHROMA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="291:9" pos:end="293:45"><if pos:start="291:9" pos:end="293:45">if<condition pos:start="291:11" pos:end="291:30">(<expr pos:start="291:12" pos:end="291:29"><name pos:start="291:12" pos:end="291:24"><name pos:start="291:12" pos:end="291:12">s</name><operator pos:start="291:13" pos:end="291:14">-&gt;</operator><name pos:start="291:15" pos:end="291:24">xvid_build</name></name><operator pos:start="291:25" pos:end="291:26">&lt;=</operator><literal type="number" pos:start="291:27" pos:end="291:29">12U</literal></expr>)</condition><block type="pseudo" pos:start="293:13" pos:end="293:45"><block_content pos:start="293:13" pos:end="293:45">

            <expr_stmt pos:start="293:13" pos:end="293:45"><expr pos:start="293:13" pos:end="293:44"><name pos:start="293:13" pos:end="293:30"><name pos:start="293:13" pos:end="293:13">s</name><operator pos:start="293:14" pos:end="293:15">-&gt;</operator><name pos:start="293:16" pos:end="293:30">workaround_bugs</name></name><operator pos:start="293:31" pos:end="293:32">|=</operator> <name pos:start="293:34" pos:end="293:44">FF_BUG_EDGE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="297:9" pos:end="310:0"><if pos:start="297:9" pos:end="310:0">if<condition pos:start="297:11" pos:end="297:30">(<expr pos:start="297:12" pos:end="297:29"><name pos:start="297:12" pos:end="297:24"><name pos:start="297:12" pos:end="297:12">s</name><operator pos:start="297:13" pos:end="297:14">-&gt;</operator><name pos:start="297:15" pos:end="297:24">xvid_build</name></name><operator pos:start="297:25" pos:end="297:26">&lt;=</operator><literal type="number" pos:start="297:27" pos:end="297:29">32U</literal></expr>)</condition><block type="pseudo" pos:start="299:13" pos:end="310:0"><block_content pos:start="299:13" pos:end="310:0">

            <expr_stmt pos:start="299:13" pos:end="310:0"><expr pos:start="299:13" pos:end="299:47"><name pos:start="299:13" pos:end="299:30"><name pos:start="299:13" pos:end="299:13">s</name><operator pos:start="299:14" pos:end="299:15">-&gt;</operator><name pos:start="299:16" pos:end="299:30">workaround_bugs</name></name><operator pos:start="299:31" pos:end="299:32">|=</operator> <name pos:start="299:34" pos:end="299:47">FF_BUG_DC_CLIP</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



<cpp:define pos:start="303:1" pos:end="309:50">#<cpp:directive pos:start="303:2" pos:end="303:7">define</cpp:directive> <cpp:macro pos:start="303:9" pos:end="303:41"><name pos:start="303:9" pos:end="303:21">SET_QPEL_FUNC</name><parameter_list pos:start="303:22" pos:end="303:41">(<parameter pos:start="303:23" pos:end="303:30"><type pos:start="303:23" pos:end="303:30"><name pos:start="303:23" pos:end="303:30">postfix1</name></type></parameter>, <parameter pos:start="303:33" pos:end="303:40"><type pos:start="303:33" pos:end="303:40"><name pos:start="303:33" pos:end="303:40">postfix2</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="305:5" pos:end="309:50">s-&gt;dsp.put_ ## postfix1 = ff_put_ ## postfix2;\

    s-&gt;dsp.put_no_rnd_ ## postfix1 = ff_put_no_rnd_ ## postfix2;\

    s-&gt;dsp.avg_ ## postfix1 = ff_avg_ ## postfix2;</cpp:value></cpp:define>



        <if_stmt pos:start="313:9" pos:end="315:49"><if pos:start="313:9" pos:end="315:49">if<condition pos:start="313:11" pos:end="313:31">(<expr pos:start="313:12" pos:end="313:30"><name pos:start="313:12" pos:end="313:24"><name pos:start="313:12" pos:end="313:12">s</name><operator pos:start="313:13" pos:end="313:14">-&gt;</operator><name pos:start="313:15" pos:end="313:24">lavc_build</name></name><operator pos:start="313:25" pos:end="313:25">&lt;</operator><literal type="number" pos:start="313:26" pos:end="313:30">4653U</literal></expr>)</condition><block type="pseudo" pos:start="315:13" pos:end="315:49"><block_content pos:start="315:13" pos:end="315:49">

            <expr_stmt pos:start="315:13" pos:end="315:49"><expr pos:start="315:13" pos:end="315:48"><name pos:start="315:13" pos:end="315:30"><name pos:start="315:13" pos:end="315:13">s</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:30">workaround_bugs</name></name><operator pos:start="315:31" pos:end="315:32">|=</operator> <name pos:start="315:34" pos:end="315:48">FF_BUG_STD_QPEL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="319:9" pos:end="321:57"><if pos:start="319:9" pos:end="321:57">if<condition pos:start="319:11" pos:end="319:31">(<expr pos:start="319:12" pos:end="319:30"><name pos:start="319:12" pos:end="319:24"><name pos:start="319:12" pos:end="319:12">s</name><operator pos:start="319:13" pos:end="319:14">-&gt;</operator><name pos:start="319:15" pos:end="319:24">lavc_build</name></name><operator pos:start="319:25" pos:end="319:25">&lt;</operator><literal type="number" pos:start="319:26" pos:end="319:30">4655U</literal></expr>)</condition><block type="pseudo" pos:start="321:13" pos:end="321:57"><block_content pos:start="321:13" pos:end="321:57">

            <expr_stmt pos:start="321:13" pos:end="321:57"><expr pos:start="321:13" pos:end="321:56"><name pos:start="321:13" pos:end="321:30"><name pos:start="321:13" pos:end="321:13">s</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:30">workaround_bugs</name></name><operator pos:start="321:31" pos:end="321:32">|=</operator> <name pos:start="321:34" pos:end="321:56">FF_BUG_DIRECT_BLOCKSIZE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="325:9" pos:end="329:9"><if pos:start="325:9" pos:end="329:9">if<condition pos:start="325:11" pos:end="325:31">(<expr pos:start="325:12" pos:end="325:30"><name pos:start="325:12" pos:end="325:24"><name pos:start="325:12" pos:end="325:12">s</name><operator pos:start="325:13" pos:end="325:14">-&gt;</operator><name pos:start="325:15" pos:end="325:24">lavc_build</name></name><operator pos:start="325:25" pos:end="325:25">&lt;</operator><literal type="number" pos:start="325:26" pos:end="325:30">4670U</literal></expr>)</condition><block pos:start="325:32" pos:end="329:9">{<block_content pos:start="327:13" pos:end="327:45">

            <expr_stmt pos:start="327:13" pos:end="327:45"><expr pos:start="327:13" pos:end="327:44"><name pos:start="327:13" pos:end="327:30"><name pos:start="327:13" pos:end="327:13">s</name><operator pos:start="327:14" pos:end="327:15">-&gt;</operator><name pos:start="327:16" pos:end="327:30">workaround_bugs</name></name><operator pos:start="327:31" pos:end="327:32">|=</operator> <name pos:start="327:34" pos:end="327:44">FF_BUG_EDGE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="333:9" pos:end="335:48"><if pos:start="333:9" pos:end="335:48">if<condition pos:start="333:11" pos:end="333:32">(<expr pos:start="333:12" pos:end="333:31"><name pos:start="333:12" pos:end="333:24"><name pos:start="333:12" pos:end="333:12">s</name><operator pos:start="333:13" pos:end="333:14">-&gt;</operator><name pos:start="333:15" pos:end="333:24">lavc_build</name></name><operator pos:start="333:25" pos:end="333:26">&lt;=</operator><literal type="number" pos:start="333:27" pos:end="333:31">4712U</literal></expr>)</condition><block type="pseudo" pos:start="335:13" pos:end="335:48"><block_content pos:start="335:13" pos:end="335:48">

            <expr_stmt pos:start="335:13" pos:end="335:48"><expr pos:start="335:13" pos:end="335:47"><name pos:start="335:13" pos:end="335:30"><name pos:start="335:13" pos:end="335:13">s</name><operator pos:start="335:14" pos:end="335:15">-&gt;</operator><name pos:start="335:16" pos:end="335:30">workaround_bugs</name></name><operator pos:start="335:31" pos:end="335:32">|=</operator> <name pos:start="335:34" pos:end="335:47">FF_BUG_DC_CLIP</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="339:9" pos:end="341:57"><if pos:start="339:9" pos:end="341:57">if<condition pos:start="339:11" pos:end="339:30">(<expr pos:start="339:12" pos:end="339:29"><name pos:start="339:12" pos:end="339:26"><name pos:start="339:12" pos:end="339:12">s</name><operator pos:start="339:13" pos:end="339:14">-&gt;</operator><name pos:start="339:15" pos:end="339:26">divx_version</name></name><operator pos:start="339:27" pos:end="339:28">&gt;=</operator><literal type="number" pos:start="339:29" pos:end="339:29">0</literal></expr>)</condition><block type="pseudo" pos:start="341:13" pos:end="341:57"><block_content pos:start="341:13" pos:end="341:57">

            <expr_stmt pos:start="341:13" pos:end="341:57"><expr pos:start="341:13" pos:end="341:56"><name pos:start="341:13" pos:end="341:30"><name pos:start="341:13" pos:end="341:13">s</name><operator pos:start="341:14" pos:end="341:15">-&gt;</operator><name pos:start="341:16" pos:end="341:30">workaround_bugs</name></name><operator pos:start="341:31" pos:end="341:32">|=</operator> <name pos:start="341:34" pos:end="341:56">FF_BUG_DIRECT_BLOCKSIZE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<comment type="line" pos:start="343:1" pos:end="343:58">//printf("padding_bug_score: %d\n", s-&gt;padding_bug_score);</comment>

        <if_stmt pos:start="345:9" pos:end="347:49"><if pos:start="345:9" pos:end="347:49">if<condition pos:start="345:11" pos:end="345:59">(<expr pos:start="345:12" pos:end="345:58"><name pos:start="345:12" pos:end="345:26"><name pos:start="345:12" pos:end="345:12">s</name><operator pos:start="345:13" pos:end="345:14">-&gt;</operator><name pos:start="345:15" pos:end="345:26">divx_version</name></name><operator pos:start="345:27" pos:end="345:28">==</operator><literal type="number" pos:start="345:29" pos:end="345:31">501</literal> <operator pos:start="345:33" pos:end="345:34">&amp;&amp;</operator> <name pos:start="345:36" pos:end="345:48"><name pos:start="345:36" pos:end="345:36">s</name><operator pos:start="345:37" pos:end="345:38">-&gt;</operator><name pos:start="345:39" pos:end="345:48">divx_build</name></name><operator pos:start="345:49" pos:end="345:50">==</operator><literal type="number" pos:start="345:51" pos:end="345:58">20020416</literal></expr>)</condition><block type="pseudo" pos:start="347:13" pos:end="347:49"><block_content pos:start="347:13" pos:end="347:49">

            <expr_stmt pos:start="347:13" pos:end="347:49"><expr pos:start="347:13" pos:end="347:48"><name pos:start="347:13" pos:end="347:32"><name pos:start="347:13" pos:end="347:13">s</name><operator pos:start="347:14" pos:end="347:15">-&gt;</operator><name pos:start="347:16" pos:end="347:32">padding_bug_score</name></name><operator pos:start="347:33" pos:end="347:33">=</operator> <literal type="number" pos:start="347:35" pos:end="347:37">256</literal><operator pos:start="347:38" pos:end="347:38">*</operator><literal type="number" pos:start="347:39" pos:end="347:41">256</literal><operator pos:start="347:42" pos:end="347:42">*</operator><literal type="number" pos:start="347:43" pos:end="347:45">256</literal><operator pos:start="347:46" pos:end="347:46">*</operator><literal type="number" pos:start="347:47" pos:end="347:48">64</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="351:9" pos:end="355:9"><if pos:start="351:9" pos:end="355:9">if<condition pos:start="351:11" pos:end="351:32">(<expr pos:start="351:12" pos:end="351:31"><name pos:start="351:12" pos:end="351:26"><name pos:start="351:12" pos:end="351:12">s</name><operator pos:start="351:13" pos:end="351:14">-&gt;</operator><name pos:start="351:15" pos:end="351:26">divx_version</name></name><operator pos:start="351:27" pos:end="351:27">&lt;</operator><literal type="number" pos:start="351:28" pos:end="351:31">500U</literal></expr>)</condition><block pos:start="351:33" pos:end="355:9">{<block_content pos:start="353:13" pos:end="353:45">

            <expr_stmt pos:start="353:13" pos:end="353:45"><expr pos:start="353:13" pos:end="353:44"><name pos:start="353:13" pos:end="353:30"><name pos:start="353:13" pos:end="353:13">s</name><operator pos:start="353:14" pos:end="353:15">-&gt;</operator><name pos:start="353:16" pos:end="353:30">workaround_bugs</name></name><operator pos:start="353:31" pos:end="353:32">|=</operator> <name pos:start="353:34" pos:end="353:44">FF_BUG_EDGE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="359:9" pos:end="390:0"><if pos:start="359:9" pos:end="390:0">if<condition pos:start="359:11" pos:end="359:30">(<expr pos:start="359:12" pos:end="359:29"><name pos:start="359:12" pos:end="359:26"><name pos:start="359:12" pos:end="359:12">s</name><operator pos:start="359:13" pos:end="359:14">-&gt;</operator><name pos:start="359:15" pos:end="359:26">divx_version</name></name><operator pos:start="359:27" pos:end="359:28">&gt;=</operator><literal type="number" pos:start="359:29" pos:end="359:29">0</literal></expr>)</condition><block type="pseudo" pos:start="361:13" pos:end="390:0"><block_content pos:start="361:13" pos:end="390:0">

            <expr_stmt pos:start="361:13" pos:end="390:0"><expr pos:start="361:13" pos:end="361:51"><name pos:start="361:13" pos:end="361:30"><name pos:start="361:13" pos:end="361:13">s</name><operator pos:start="361:14" pos:end="361:15">-&gt;</operator><name pos:start="361:16" pos:end="361:30">workaround_bugs</name></name><operator pos:start="361:31" pos:end="361:32">|=</operator> <name pos:start="361:34" pos:end="361:51">FF_BUG_HPEL_CHROMA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:if pos:start="363:1" pos:end="363:5">#<cpp:directive pos:start="363:2" pos:end="363:3">if</cpp:directive> <expr pos:start="363:5" pos:end="363:5"><literal type="number" pos:start="363:5" pos:end="363:5">0</literal></expr></cpp:if>

        if(s-&gt;divx_version==500)

            s-&gt;padding_bug_score= 256*256*256*64;



        <comment type="block" pos:start="371:9" pos:end="375:11">/* very ugly XVID padding bug detection FIXME/XXX solve this differently

         * Let us hope this at least works.

         */</comment>

        if(   s-&gt;resync_marker==0 &amp;&amp; s-&gt;data_partitioning==0 &amp;&amp; s-&gt;divx_version==-1

           &amp;&amp; s-&gt;codec_id==CODEC_ID_MPEG4 &amp;&amp; s-&gt;vo_type==0)

            s-&gt;workaround_bugs|= FF_BUG_NO_PADDING;



        if(s-&gt;lavc_build&lt;4609U) <comment type="line" pos:start="385:33" pos:end="385:95">//FIXME not sure about the version num but a 4609 file seems ok</comment>

            s-&gt;workaround_bugs|= FF_BUG_NO_PADDING;

<cpp:endif pos:start="389:1" pos:end="389:6">#<cpp:directive pos:start="389:2" pos:end="389:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="395:5" pos:end="423:5"><if pos:start="395:5" pos:end="423:5">if<condition pos:start="395:7" pos:end="395:43">(<expr pos:start="395:8" pos:end="395:42"><name pos:start="395:8" pos:end="395:25"><name pos:start="395:8" pos:end="395:8">s</name><operator pos:start="395:9" pos:end="395:10">-&gt;</operator><name pos:start="395:11" pos:end="395:25">workaround_bugs</name></name><operator pos:start="395:26" pos:end="395:26">&amp;</operator> <name pos:start="395:28" pos:end="395:42">FF_BUG_STD_QPEL</name></expr>)</condition><block pos:start="395:44" pos:end="423:5">{<block_content pos:start="397:9" pos:end="421:63">

        <macro pos:start="397:9" pos:end="397:64"><name pos:start="397:9" pos:end="397:21">SET_QPEL_FUNC</name><argument_list pos:start="397:22" pos:end="397:64">(<argument pos:start="397:23" pos:end="397:44">qpel_pixels_tab[<literal type="number" pos:start="397:39" pos:end="397:39">0</literal>][ <literal type="number" pos:start="397:43" pos:end="397:43">5</literal>]</argument>, <argument pos:start="397:47" pos:end="397:63">qpel16_mc11_old_c</argument>)</argument_list></macro>

        <macro pos:start="399:9" pos:end="399:64"><name pos:start="399:9" pos:end="399:21">SET_QPEL_FUNC</name><argument_list pos:start="399:22" pos:end="399:64">(<argument pos:start="399:23" pos:end="399:44">qpel_pixels_tab[<literal type="number" pos:start="399:39" pos:end="399:39">0</literal>][ <literal type="number" pos:start="399:43" pos:end="399:43">7</literal>]</argument>, <argument pos:start="399:47" pos:end="399:63">qpel16_mc31_old_c</argument>)</argument_list></macro>

        <macro pos:start="401:9" pos:end="401:64"><name pos:start="401:9" pos:end="401:21">SET_QPEL_FUNC</name><argument_list pos:start="401:22" pos:end="401:64">(<argument pos:start="401:23" pos:end="401:44">qpel_pixels_tab[<literal type="number" pos:start="401:39" pos:end="401:39">0</literal>][ <literal type="number" pos:start="401:43" pos:end="401:43">9</literal>]</argument>, <argument pos:start="401:47" pos:end="401:63">qpel16_mc12_old_c</argument>)</argument_list></macro>

        <macro pos:start="403:9" pos:end="403:64"><name pos:start="403:9" pos:end="403:21">SET_QPEL_FUNC</name><argument_list pos:start="403:22" pos:end="403:64">(<argument pos:start="403:23" pos:end="403:44">qpel_pixels_tab[<literal type="number" pos:start="403:39" pos:end="403:39">0</literal>][<literal type="number" pos:start="403:42" pos:end="403:43">11</literal>]</argument>, <argument pos:start="403:47" pos:end="403:63">qpel16_mc32_old_c</argument>)</argument_list></macro>

        <macro pos:start="405:9" pos:end="405:64"><name pos:start="405:9" pos:end="405:21">SET_QPEL_FUNC</name><argument_list pos:start="405:22" pos:end="405:64">(<argument pos:start="405:23" pos:end="405:44">qpel_pixels_tab[<literal type="number" pos:start="405:39" pos:end="405:39">0</literal>][<literal type="number" pos:start="405:42" pos:end="405:43">13</literal>]</argument>, <argument pos:start="405:47" pos:end="405:63">qpel16_mc13_old_c</argument>)</argument_list></macro>

        <macro pos:start="407:9" pos:end="407:64"><name pos:start="407:9" pos:end="407:21">SET_QPEL_FUNC</name><argument_list pos:start="407:22" pos:end="407:64">(<argument pos:start="407:23" pos:end="407:44">qpel_pixels_tab[<literal type="number" pos:start="407:39" pos:end="407:39">0</literal>][<literal type="number" pos:start="407:42" pos:end="407:43">15</literal>]</argument>, <argument pos:start="407:47" pos:end="407:63">qpel16_mc33_old_c</argument>)</argument_list></macro>



        <macro pos:start="411:9" pos:end="411:63"><name pos:start="411:9" pos:end="411:21">SET_QPEL_FUNC</name><argument_list pos:start="411:22" pos:end="411:63">(<argument pos:start="411:23" pos:end="411:44">qpel_pixels_tab[<literal type="number" pos:start="411:39" pos:end="411:39">1</literal>][ <literal type="number" pos:start="411:43" pos:end="411:43">5</literal>]</argument>, <argument pos:start="411:47" pos:end="411:62">qpel8_mc11_old_c</argument>)</argument_list></macro>

        <macro pos:start="413:9" pos:end="413:63"><name pos:start="413:9" pos:end="413:21">SET_QPEL_FUNC</name><argument_list pos:start="413:22" pos:end="413:63">(<argument pos:start="413:23" pos:end="413:44">qpel_pixels_tab[<literal type="number" pos:start="413:39" pos:end="413:39">1</literal>][ <literal type="number" pos:start="413:43" pos:end="413:43">7</literal>]</argument>, <argument pos:start="413:47" pos:end="413:62">qpel8_mc31_old_c</argument>)</argument_list></macro>

        <macro pos:start="415:9" pos:end="415:63"><name pos:start="415:9" pos:end="415:21">SET_QPEL_FUNC</name><argument_list pos:start="415:22" pos:end="415:63">(<argument pos:start="415:23" pos:end="415:44">qpel_pixels_tab[<literal type="number" pos:start="415:39" pos:end="415:39">1</literal>][ <literal type="number" pos:start="415:43" pos:end="415:43">9</literal>]</argument>, <argument pos:start="415:47" pos:end="415:62">qpel8_mc12_old_c</argument>)</argument_list></macro>

        <macro pos:start="417:9" pos:end="417:63"><name pos:start="417:9" pos:end="417:21">SET_QPEL_FUNC</name><argument_list pos:start="417:22" pos:end="417:63">(<argument pos:start="417:23" pos:end="417:44">qpel_pixels_tab[<literal type="number" pos:start="417:39" pos:end="417:39">1</literal>][<literal type="number" pos:start="417:42" pos:end="417:43">11</literal>]</argument>, <argument pos:start="417:47" pos:end="417:62">qpel8_mc32_old_c</argument>)</argument_list></macro>

        <macro pos:start="419:9" pos:end="419:63"><name pos:start="419:9" pos:end="419:21">SET_QPEL_FUNC</name><argument_list pos:start="419:22" pos:end="419:63">(<argument pos:start="419:23" pos:end="419:44">qpel_pixels_tab[<literal type="number" pos:start="419:39" pos:end="419:39">1</literal>][<literal type="number" pos:start="419:42" pos:end="419:43">13</literal>]</argument>, <argument pos:start="419:47" pos:end="419:62">qpel8_mc13_old_c</argument>)</argument_list></macro>

        <macro pos:start="421:9" pos:end="421:63"><name pos:start="421:9" pos:end="421:21">SET_QPEL_FUNC</name><argument_list pos:start="421:22" pos:end="421:63">(<argument pos:start="421:23" pos:end="421:44">qpel_pixels_tab[<literal type="number" pos:start="421:39" pos:end="421:39">1</literal>][<literal type="number" pos:start="421:42" pos:end="421:43">15</literal>]</argument>, <argument pos:start="421:47" pos:end="421:62">qpel8_mc33_old_c</argument>)</argument_list></macro>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="427:5" pos:end="438:0"><if pos:start="427:5" pos:end="438:0">if<condition pos:start="427:7" pos:end="427:36">(<expr pos:start="427:8" pos:end="427:35"><name pos:start="427:8" pos:end="427:19"><name pos:start="427:8" pos:end="427:12">avctx</name><operator pos:start="427:13" pos:end="427:14">-&gt;</operator><name pos:start="427:15" pos:end="427:19">debug</name></name> <operator pos:start="427:21" pos:end="427:21">&amp;</operator> <name pos:start="427:23" pos:end="427:35">FF_DEBUG_BUGS</name></expr>)</condition><block type="pseudo" pos:start="429:9" pos:end="438:0"><block_content pos:start="429:9" pos:end="438:0">

        <expr_stmt pos:start="429:9" pos:end="438:0"><expr pos:start="429:9" pos:end="433:41"><call pos:start="429:9" pos:end="433:41"><name pos:start="429:9" pos:end="429:14">av_log</name><argument_list pos:start="429:15" pos:end="433:41">(<argument pos:start="429:16" pos:end="429:23"><expr pos:start="429:16" pos:end="429:23"><name pos:start="429:16" pos:end="429:23"><name pos:start="429:16" pos:end="429:16">s</name><operator pos:start="429:17" pos:end="429:18">-&gt;</operator><name pos:start="429:19" pos:end="429:23">avctx</name></name></expr></argument>, <argument pos:start="429:26" pos:end="429:37"><expr pos:start="429:26" pos:end="429:37"><name pos:start="429:26" pos:end="429:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="429:40" pos:end="429:112"><expr pos:start="429:40" pos:end="429:112"><literal type="string" pos:start="429:40" pos:end="429:112">"bugs: %X lavc_build:%d xvid_build:%d divx_version:%d divx_build:%d %s\n"</literal></expr></argument>,

               <argument pos:start="431:16" pos:end="431:33"><expr pos:start="431:16" pos:end="431:33"><name pos:start="431:16" pos:end="431:33"><name pos:start="431:16" pos:end="431:16">s</name><operator pos:start="431:17" pos:end="431:18">-&gt;</operator><name pos:start="431:19" pos:end="431:33">workaround_bugs</name></name></expr></argument>, <argument pos:start="431:36" pos:end="431:48"><expr pos:start="431:36" pos:end="431:48"><name pos:start="431:36" pos:end="431:48"><name pos:start="431:36" pos:end="431:36">s</name><operator pos:start="431:37" pos:end="431:38">-&gt;</operator><name pos:start="431:39" pos:end="431:48">lavc_build</name></name></expr></argument>, <argument pos:start="431:51" pos:end="431:63"><expr pos:start="431:51" pos:end="431:63"><name pos:start="431:51" pos:end="431:63"><name pos:start="431:51" pos:end="431:51">s</name><operator pos:start="431:52" pos:end="431:53">-&gt;</operator><name pos:start="431:54" pos:end="431:63">xvid_build</name></name></expr></argument>, <argument pos:start="431:66" pos:end="431:80"><expr pos:start="431:66" pos:end="431:80"><name pos:start="431:66" pos:end="431:80"><name pos:start="431:66" pos:end="431:66">s</name><operator pos:start="431:67" pos:end="431:68">-&gt;</operator><name pos:start="431:69" pos:end="431:80">divx_version</name></name></expr></argument>, <argument pos:start="431:83" pos:end="431:95"><expr pos:start="431:83" pos:end="431:95"><name pos:start="431:83" pos:end="431:95"><name pos:start="431:83" pos:end="431:83">s</name><operator pos:start="431:84" pos:end="431:85">-&gt;</operator><name pos:start="431:86" pos:end="431:95">divx_build</name></name></expr></argument>,

               <argument pos:start="433:16" pos:end="433:40"><expr pos:start="433:16" pos:end="433:40"><ternary pos:start="433:16" pos:end="433:40"><condition pos:start="433:16" pos:end="433:31"><expr pos:start="433:16" pos:end="433:29"><name pos:start="433:16" pos:end="433:29"><name pos:start="433:16" pos:end="433:16">s</name><operator pos:start="433:17" pos:end="433:18">-&gt;</operator><name pos:start="433:19" pos:end="433:29">divx_packed</name></name></expr> ?</condition><then pos:start="433:33" pos:end="433:35"> <expr pos:start="433:33" pos:end="433:35"><literal type="string" pos:start="433:33" pos:end="433:35">"p"</literal></expr> </then><else pos:start="433:37" pos:end="433:40">: <expr pos:start="433:39" pos:end="433:40"><literal type="string" pos:start="433:39" pos:end="433:40">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<cpp:if pos:start="437:1" pos:end="437:12">#<cpp:directive pos:start="437:2" pos:end="437:3">if</cpp:directive> <expr pos:start="437:5" pos:end="437:12"><name pos:start="437:5" pos:end="437:12">HAVE_MMX</name></expr></cpp:if>

    <if_stmt pos:start="439:5" pos:end="452:0"><if pos:start="439:5" pos:end="452:0">if <condition pos:start="439:8" pos:end="439:136">(<expr pos:start="439:9" pos:end="439:135"><name pos:start="439:9" pos:end="439:19"><name pos:start="439:9" pos:end="439:9">s</name><operator pos:start="439:10" pos:end="439:11">-&gt;</operator><name pos:start="439:12" pos:end="439:19">codec_id</name></name> <operator pos:start="439:21" pos:end="439:22">==</operator> <name pos:start="439:24" pos:end="439:37">CODEC_ID_MPEG4</name> <operator pos:start="439:39" pos:end="439:40">&amp;&amp;</operator> <name pos:start="439:42" pos:end="439:54"><name pos:start="439:42" pos:end="439:42">s</name><operator pos:start="439:43" pos:end="439:44">-&gt;</operator><name pos:start="439:45" pos:end="439:54">xvid_build</name></name><operator pos:start="439:55" pos:end="439:56">&gt;=</operator><literal type="number" pos:start="439:57" pos:end="439:57">0</literal> <operator pos:start="439:59" pos:end="439:60">&amp;&amp;</operator> <name pos:start="439:62" pos:end="439:77"><name pos:start="439:62" pos:end="439:66">avctx</name><operator pos:start="439:67" pos:end="439:68">-&gt;</operator><name pos:start="439:69" pos:end="439:77">idct_algo</name></name> <operator pos:start="439:79" pos:end="439:80">==</operator> <name pos:start="439:82" pos:end="439:93">FF_IDCT_AUTO</name> <operator pos:start="439:95" pos:end="439:96">&amp;&amp;</operator> <operator pos:start="439:98" pos:end="439:98">(</operator><call pos:start="439:99" pos:end="439:116"><name pos:start="439:99" pos:end="439:114">av_get_cpu_flags</name><argument_list pos:start="439:115" pos:end="439:116">()</argument_list></call> <operator pos:start="439:118" pos:end="439:118">&amp;</operator> <name pos:start="439:120" pos:end="439:134">AV_CPU_FLAG_MMX</name><operator pos:start="439:135" pos:end="439:135">)</operator></expr>)</condition> <block pos:start="439:138" pos:end="452:0">{<block_content pos:start="441:9" pos:end="447:28">

        <expr_stmt pos:start="441:9" pos:end="441:42"><expr pos:start="441:9" pos:end="441:41"><name pos:start="441:9" pos:end="441:24"><name pos:start="441:9" pos:end="441:13">avctx</name><operator pos:start="441:14" pos:end="441:15">-&gt;</operator><name pos:start="441:16" pos:end="441:24">idct_algo</name></name><operator pos:start="441:25" pos:end="441:25">=</operator> <name pos:start="441:27" pos:end="441:41">FF_IDCT_XVIDMMX</name></expr>;</expr_stmt>

        <expr_stmt pos:start="443:9" pos:end="443:30"><expr pos:start="443:9" pos:end="443:29"><name pos:start="443:9" pos:end="443:26"><name pos:start="443:9" pos:end="443:13">avctx</name><operator pos:start="443:14" pos:end="443:15">-&gt;</operator><name pos:start="443:16" pos:end="443:26">coded_width</name></name><operator pos:start="443:27" pos:end="443:27">=</operator> <literal type="number" pos:start="443:29" pos:end="443:29">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="443:32" pos:end="443:46">// force reinit</comment>

<comment type="line" pos:start="445:1" pos:end="445:42">//        ff_dsputil_init(&amp;s-&gt;dsp, avctx);</comment>

        <expr_stmt pos:start="447:9" pos:end="447:28"><expr pos:start="447:9" pos:end="447:27"><name pos:start="447:9" pos:end="447:25"><name pos:start="447:9" pos:end="447:9">s</name><operator pos:start="447:10" pos:end="447:11">-&gt;</operator><name pos:start="447:12" pos:end="447:25">picture_number</name></name><operator pos:start="447:26" pos:end="447:26">=</operator><literal type="number" pos:start="447:27" pos:end="447:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="451:1" pos:end="451:6">#<cpp:directive pos:start="451:2" pos:end="451:6">endif</cpp:directive></cpp:endif>



        <comment type="block" pos:start="455:9" pos:end="455:72">/* After H263 &amp; mpeg4 header decode we have the height, width,*/</comment>

        <comment type="block" pos:start="457:9" pos:end="457:71">/* and other parameters. So then we could init the picture   */</comment>

        <comment type="block" pos:start="459:9" pos:end="459:71">/* FIXME: By the way H263 decoder is evolving it should have */</comment>

        <comment type="block" pos:start="461:9" pos:end="461:71">/* an H263EncContext                                         */</comment>



    <if_stmt pos:start="465:5" pos:end="479:5"><if pos:start="465:5" pos:end="479:5">if <condition pos:start="465:8" pos:end="467:44">(   <expr pos:start="465:12" pos:end="467:43"><name pos:start="465:12" pos:end="465:19"><name pos:start="465:12" pos:end="465:12">s</name><operator pos:start="465:13" pos:end="465:14">-&gt;</operator><name pos:start="465:15" pos:end="465:19">width</name></name>  <operator pos:start="465:22" pos:end="465:23">!=</operator> <name pos:start="465:25" pos:end="465:42"><name pos:start="465:25" pos:end="465:29">avctx</name><operator pos:start="465:30" pos:end="465:31">-&gt;</operator><name pos:start="465:32" pos:end="465:42">coded_width</name></name>

        <operator pos:start="467:9" pos:end="467:10">||</operator> <name pos:start="467:12" pos:end="467:20"><name pos:start="467:12" pos:end="467:12">s</name><operator pos:start="467:13" pos:end="467:14">-&gt;</operator><name pos:start="467:15" pos:end="467:20">height</name></name> <operator pos:start="467:22" pos:end="467:23">!=</operator> <name pos:start="467:25" pos:end="467:43"><name pos:start="467:25" pos:end="467:29">avctx</name><operator pos:start="467:30" pos:end="467:31">-&gt;</operator><name pos:start="467:32" pos:end="467:43">coded_height</name></name></expr>)</condition> <block pos:start="467:46" pos:end="479:5">{<block_content pos:start="471:9" pos:end="477:29">

        <comment type="block" pos:start="469:9" pos:end="469:54">/* H.263 could change picture size any time */</comment>

        <decl_stmt pos:start="471:9" pos:end="471:42"><decl pos:start="471:9" pos:end="471:41"><type pos:start="471:9" pos:end="471:20"><name pos:start="471:9" pos:end="471:20">ParseContext</name></type> <name pos:start="471:22" pos:end="471:23">pc</name><init pos:start="471:24" pos:end="471:41">= <expr pos:start="471:26" pos:end="471:41"><name pos:start="471:26" pos:end="471:41"><name pos:start="471:26" pos:end="471:26">s</name><operator pos:start="471:27" pos:end="471:28">-&gt;</operator><name pos:start="471:29" pos:end="471:41">parse_context</name></name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="471:44" pos:end="471:86">//FIXME move these demuxng hack to avformat</comment>

        <expr_stmt pos:start="473:9" pos:end="473:34"><expr pos:start="473:9" pos:end="473:33"><name pos:start="473:9" pos:end="473:31"><name pos:start="473:9" pos:end="473:9">s</name><operator pos:start="473:10" pos:end="473:11">-&gt;</operator><name pos:start="473:12" pos:end="473:24">parse_context</name><operator pos:start="473:25" pos:end="473:25">.</operator><name pos:start="473:26" pos:end="473:31">buffer</name></name><operator pos:start="473:32" pos:end="473:32">=</operator><literal type="number" pos:start="473:33" pos:end="473:33">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="475:9" pos:end="475:29"><expr pos:start="475:9" pos:end="475:28"><call pos:start="475:9" pos:end="475:28"><name pos:start="475:9" pos:end="475:25">ff_MPV_common_end</name><argument_list pos:start="475:26" pos:end="475:28">(<argument pos:start="475:27" pos:end="475:27"><expr pos:start="475:27" pos:end="475:27"><name pos:start="475:27" pos:end="475:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="477:9" pos:end="477:29"><expr pos:start="477:9" pos:end="477:28"><name pos:start="477:9" pos:end="477:24"><name pos:start="477:9" pos:end="477:9">s</name><operator pos:start="477:10" pos:end="477:11">-&gt;</operator><name pos:start="477:12" pos:end="477:24">parse_context</name></name><operator pos:start="477:25" pos:end="477:25">=</operator> <name pos:start="477:27" pos:end="477:28">pc</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="481:5" pos:end="489:5"><if pos:start="481:5" pos:end="489:5">if <condition pos:start="481:8" pos:end="481:32">(<expr pos:start="481:9" pos:end="481:31"><operator pos:start="481:9" pos:end="481:9">!</operator><name pos:start="481:10" pos:end="481:31"><name pos:start="481:10" pos:end="481:10">s</name><operator pos:start="481:11" pos:end="481:12">-&gt;</operator><name pos:start="481:13" pos:end="481:31">context_initialized</name></name></expr>)</condition> <block pos:start="481:34" pos:end="489:5">{<block_content pos:start="483:9" pos:end="487:19">

        <expr_stmt pos:start="483:9" pos:end="483:59"><expr pos:start="483:9" pos:end="483:58"><call pos:start="483:9" pos:end="483:58"><name pos:start="483:9" pos:end="483:30">avcodec_set_dimensions</name><argument_list pos:start="483:31" pos:end="483:58">(<argument pos:start="483:32" pos:end="483:36"><expr pos:start="483:32" pos:end="483:36"><name pos:start="483:32" pos:end="483:36">avctx</name></expr></argument>, <argument pos:start="483:39" pos:end="483:46"><expr pos:start="483:39" pos:end="483:46"><name pos:start="483:39" pos:end="483:46"><name pos:start="483:39" pos:end="483:39">s</name><operator pos:start="483:40" pos:end="483:41">-&gt;</operator><name pos:start="483:42" pos:end="483:46">width</name></name></expr></argument>, <argument pos:start="483:49" pos:end="483:57"><expr pos:start="483:49" pos:end="483:57"><name pos:start="483:49" pos:end="483:57"><name pos:start="483:49" pos:end="483:49">s</name><operator pos:start="483:50" pos:end="483:51">-&gt;</operator><name pos:start="483:52" pos:end="483:57">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <goto pos:start="487:9" pos:end="487:19">goto <name pos:start="487:14" pos:end="487:18">retry</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="493:5" pos:end="495:49"><if pos:start="493:5" pos:end="495:49">if<condition pos:start="493:7" pos:end="493:100">(<expr pos:start="493:8" pos:end="493:99"><operator pos:start="493:8" pos:end="493:8">(</operator><name pos:start="493:9" pos:end="493:19"><name pos:start="493:9" pos:end="493:9">s</name><operator pos:start="493:10" pos:end="493:11">-&gt;</operator><name pos:start="493:12" pos:end="493:19">codec_id</name></name><operator pos:start="493:20" pos:end="493:21">==</operator><name pos:start="493:22" pos:end="493:34">CODEC_ID_H263</name> <operator pos:start="493:36" pos:end="493:37">||</operator> <name pos:start="493:39" pos:end="493:49"><name pos:start="493:39" pos:end="493:39">s</name><operator pos:start="493:40" pos:end="493:41">-&gt;</operator><name pos:start="493:42" pos:end="493:49">codec_id</name></name><operator pos:start="493:50" pos:end="493:51">==</operator><name pos:start="493:52" pos:end="493:65">CODEC_ID_H263P</name> <operator pos:start="493:67" pos:end="493:68">||</operator> <name pos:start="493:70" pos:end="493:80"><name pos:start="493:70" pos:end="493:70">s</name><operator pos:start="493:71" pos:end="493:72">-&gt;</operator><name pos:start="493:73" pos:end="493:80">codec_id</name></name> <operator pos:start="493:82" pos:end="493:83">==</operator> <name pos:start="493:85" pos:end="493:98">CODEC_ID_H263I</name><operator pos:start="493:99" pos:end="493:99">)</operator></expr>)</condition><block type="pseudo" pos:start="495:9" pos:end="495:49"><block_content pos:start="495:9" pos:end="495:49">

        <expr_stmt pos:start="495:9" pos:end="495:49"><expr pos:start="495:9" pos:end="495:48"><name pos:start="495:9" pos:end="495:20"><name pos:start="495:9" pos:end="495:9">s</name><operator pos:start="495:10" pos:end="495:11">-&gt;</operator><name pos:start="495:12" pos:end="495:20">gob_index</name></name> <operator pos:start="495:22" pos:end="495:22">=</operator> <call pos:start="495:24" pos:end="495:48"><name pos:start="495:24" pos:end="495:45">ff_h263_get_gob_height</name><argument_list pos:start="495:46" pos:end="495:48">(<argument pos:start="495:47" pos:end="495:47"><expr pos:start="495:47" pos:end="495:47"><name pos:start="495:47" pos:end="495:47">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="499:5" pos:end="499:29">// for skipping the frame</comment>

    <expr_stmt pos:start="501:5" pos:end="501:50"><expr pos:start="501:5" pos:end="501:49"><name pos:start="501:5" pos:end="501:34"><name pos:start="501:5" pos:end="501:5">s</name><operator pos:start="501:6" pos:end="501:7">-&gt;</operator><name pos:start="501:8" pos:end="501:22">current_picture</name><operator pos:start="501:23" pos:end="501:23">.</operator><name pos:start="501:24" pos:end="501:24">f</name><operator pos:start="501:25" pos:end="501:25">.</operator><name pos:start="501:26" pos:end="501:34">pict_type</name></name> <operator pos:start="501:36" pos:end="501:36">=</operator> <name pos:start="501:38" pos:end="501:49"><name pos:start="501:38" pos:end="501:38">s</name><operator pos:start="501:39" pos:end="501:40">-&gt;</operator><name pos:start="501:41" pos:end="501:49">pict_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="503:5" pos:end="503:71"><expr pos:start="503:5" pos:end="503:70"><name pos:start="503:5" pos:end="503:34"><name pos:start="503:5" pos:end="503:5">s</name><operator pos:start="503:6" pos:end="503:7">-&gt;</operator><name pos:start="503:8" pos:end="503:22">current_picture</name><operator pos:start="503:23" pos:end="503:23">.</operator><name pos:start="503:24" pos:end="503:24">f</name><operator pos:start="503:25" pos:end="503:25">.</operator><name pos:start="503:26" pos:end="503:34">key_frame</name></name> <operator pos:start="503:36" pos:end="503:36">=</operator> <name pos:start="503:38" pos:end="503:49"><name pos:start="503:38" pos:end="503:38">s</name><operator pos:start="503:39" pos:end="503:40">-&gt;</operator><name pos:start="503:41" pos:end="503:49">pict_type</name></name> <operator pos:start="503:51" pos:end="503:52">==</operator> <name pos:start="503:54" pos:end="503:70">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>



    <comment type="block" pos:start="507:5" pos:end="507:57">/* skip B-frames if we don't have reference frames */</comment>

    <if_stmt pos:start="509:5" pos:end="509:125"><if pos:start="509:5" pos:end="509:125">if<condition pos:start="509:7" pos:end="509:85">(<expr pos:start="509:8" pos:end="509:84"><name pos:start="509:8" pos:end="509:26"><name pos:start="509:8" pos:end="509:8">s</name><operator pos:start="509:9" pos:end="509:10">-&gt;</operator><name pos:start="509:11" pos:end="509:26">last_picture_ptr</name></name><operator pos:start="509:27" pos:end="509:28">==</operator><name pos:start="509:29" pos:end="509:32">NULL</name> <operator pos:start="509:34" pos:end="509:35">&amp;&amp;</operator> <operator pos:start="509:37" pos:end="509:37">(</operator><name pos:start="509:38" pos:end="509:49"><name pos:start="509:38" pos:end="509:38">s</name><operator pos:start="509:39" pos:end="509:40">-&gt;</operator><name pos:start="509:41" pos:end="509:49">pict_type</name></name><operator pos:start="509:50" pos:end="509:51">==</operator><name pos:start="509:52" pos:end="509:68">AV_PICTURE_TYPE_B</name> <operator pos:start="509:70" pos:end="509:71">||</operator> <name pos:start="509:73" pos:end="509:83"><name pos:start="509:73" pos:end="509:73">s</name><operator pos:start="509:74" pos:end="509:75">-&gt;</operator><name pos:start="509:76" pos:end="509:83">dropable</name></name><operator pos:start="509:84" pos:end="509:84">)</operator></expr>)</condition><block type="pseudo" pos:start="509:87" pos:end="509:125"><block_content pos:start="509:87" pos:end="509:125"> <return pos:start="509:87" pos:end="509:125">return <expr pos:start="509:94" pos:end="509:124"><call pos:start="509:94" pos:end="509:124"><name pos:start="509:94" pos:end="509:111">get_consumed_bytes</name><argument_list pos:start="509:112" pos:end="509:124">(<argument pos:start="509:113" pos:end="509:113"><expr pos:start="509:113" pos:end="509:113"><name pos:start="509:113" pos:end="509:113">s</name></expr></argument>, <argument pos:start="509:116" pos:end="509:123"><expr pos:start="509:116" pos:end="509:123"><name pos:start="509:116" pos:end="509:123">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="511:5" pos:end="517:47"><if pos:start="511:5" pos:end="517:47">if<condition pos:start="511:7" pos:end="515:46">(   <expr pos:start="511:11" pos:end="515:45"><operator pos:start="511:11" pos:end="511:11">(</operator><name pos:start="511:12" pos:end="511:28"><name pos:start="511:12" pos:end="511:16">avctx</name><operator pos:start="511:17" pos:end="511:18">-&gt;</operator><name pos:start="511:19" pos:end="511:28">skip_frame</name></name> <operator pos:start="511:30" pos:end="511:31">&gt;=</operator> <name pos:start="511:33" pos:end="511:48">AVDISCARD_NONREF</name> <operator pos:start="511:50" pos:end="511:51">&amp;&amp;</operator> <name pos:start="511:53" pos:end="511:64"><name pos:start="511:53" pos:end="511:53">s</name><operator pos:start="511:54" pos:end="511:55">-&gt;</operator><name pos:start="511:56" pos:end="511:64">pict_type</name></name><operator pos:start="511:65" pos:end="511:66">==</operator><name pos:start="511:67" pos:end="511:83">AV_PICTURE_TYPE_B</name><operator pos:start="511:84" pos:end="511:84">)</operator>

       <operator pos:start="513:8" pos:end="513:9">||</operator> <operator pos:start="513:11" pos:end="513:11">(</operator><name pos:start="513:12" pos:end="513:28"><name pos:start="513:12" pos:end="513:16">avctx</name><operator pos:start="513:17" pos:end="513:18">-&gt;</operator><name pos:start="513:19" pos:end="513:28">skip_frame</name></name> <operator pos:start="513:30" pos:end="513:31">&gt;=</operator> <name pos:start="513:33" pos:end="513:48">AVDISCARD_NONKEY</name> <operator pos:start="513:50" pos:end="513:51">&amp;&amp;</operator> <name pos:start="513:53" pos:end="513:64"><name pos:start="513:53" pos:end="513:53">s</name><operator pos:start="513:54" pos:end="513:55">-&gt;</operator><name pos:start="513:56" pos:end="513:64">pict_type</name></name><operator pos:start="513:65" pos:end="513:66">!=</operator><name pos:start="513:67" pos:end="513:83">AV_PICTURE_TYPE_I</name><operator pos:start="513:84" pos:end="513:84">)</operator>

       <operator pos:start="515:8" pos:end="515:9">||</operator>  <name pos:start="515:12" pos:end="515:28"><name pos:start="515:12" pos:end="515:16">avctx</name><operator pos:start="515:17" pos:end="515:18">-&gt;</operator><name pos:start="515:19" pos:end="515:28">skip_frame</name></name> <operator pos:start="515:30" pos:end="515:31">&gt;=</operator> <name pos:start="515:33" pos:end="515:45">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="517:9" pos:end="517:47"><block_content pos:start="517:9" pos:end="517:47">

        <return pos:start="517:9" pos:end="517:47">return <expr pos:start="517:16" pos:end="517:46"><call pos:start="517:16" pos:end="517:46"><name pos:start="517:16" pos:end="517:33">get_consumed_bytes</name><argument_list pos:start="517:34" pos:end="517:46">(<argument pos:start="517:35" pos:end="517:35"><expr pos:start="517:35" pos:end="517:35"><name pos:start="517:35" pos:end="517:35">s</name></expr></argument>, <argument pos:start="517:38" pos:end="517:45"><expr pos:start="517:38" pos:end="517:45"><name pos:start="517:38" pos:end="517:45">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="521:5" pos:end="531:5"><if pos:start="521:5" pos:end="531:5">if<condition pos:start="521:7" pos:end="521:31">(<expr pos:start="521:8" pos:end="521:30"><name pos:start="521:8" pos:end="521:30"><name pos:start="521:8" pos:end="521:8">s</name><operator pos:start="521:9" pos:end="521:10">-&gt;</operator><name pos:start="521:11" pos:end="521:30">next_p_frame_damaged</name></name></expr>)</condition><block pos:start="521:32" pos:end="531:5">{<block_content pos:start="523:9" pos:end="529:38">

        <if_stmt pos:start="523:9" pos:end="529:38"><if pos:start="523:9" pos:end="525:51">if<condition pos:start="523:11" pos:end="523:43">(<expr pos:start="523:12" pos:end="523:42"><name pos:start="523:12" pos:end="523:23"><name pos:start="523:12" pos:end="523:12">s</name><operator pos:start="523:13" pos:end="523:14">-&gt;</operator><name pos:start="523:15" pos:end="523:23">pict_type</name></name><operator pos:start="523:24" pos:end="523:25">==</operator><name pos:start="523:26" pos:end="523:42">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="525:13" pos:end="525:51"><block_content pos:start="525:13" pos:end="525:51">

            <return pos:start="525:13" pos:end="525:51">return <expr pos:start="525:20" pos:end="525:50"><call pos:start="525:20" pos:end="525:50"><name pos:start="525:20" pos:end="525:37">get_consumed_bytes</name><argument_list pos:start="525:38" pos:end="525:50">(<argument pos:start="525:39" pos:end="525:39"><expr pos:start="525:39" pos:end="525:39"><name pos:start="525:39" pos:end="525:39">s</name></expr></argument>, <argument pos:start="525:42" pos:end="525:49"><expr pos:start="525:42" pos:end="525:49"><name pos:start="525:42" pos:end="525:49">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>

        <else pos:start="527:9" pos:end="529:38">else<block type="pseudo" pos:start="529:13" pos:end="529:38"><block_content pos:start="529:13" pos:end="529:38">

            <expr_stmt pos:start="529:13" pos:end="529:38"><expr pos:start="529:13" pos:end="529:37"><name pos:start="529:13" pos:end="529:35"><name pos:start="529:13" pos:end="529:13">s</name><operator pos:start="529:14" pos:end="529:15">-&gt;</operator><name pos:start="529:16" pos:end="529:35">next_p_frame_damaged</name></name><operator pos:start="529:36" pos:end="529:36">=</operator><literal type="number" pos:start="529:37" pos:end="529:37">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="535:5" pos:end="553:5"><if pos:start="535:5" pos:end="541:5">if<condition pos:start="535:7" pos:end="535:80">(<expr pos:start="535:8" pos:end="535:79"><operator pos:start="535:8" pos:end="535:8">(</operator><name pos:start="535:9" pos:end="535:24"><name pos:start="535:9" pos:end="535:9">s</name><operator pos:start="535:10" pos:end="535:11">-&gt;</operator><name pos:start="535:12" pos:end="535:16">avctx</name><operator pos:start="535:17" pos:end="535:18">-&gt;</operator><name pos:start="535:19" pos:end="535:24">flags2</name></name> <operator pos:start="535:26" pos:end="535:26">&amp;</operator> <name pos:start="535:28" pos:end="535:43">CODEC_FLAG2_FAST</name><operator pos:start="535:44" pos:end="535:44">)</operator> <operator pos:start="535:46" pos:end="535:47">&amp;&amp;</operator> <name pos:start="535:49" pos:end="535:60"><name pos:start="535:49" pos:end="535:49">s</name><operator pos:start="535:50" pos:end="535:51">-&gt;</operator><name pos:start="535:52" pos:end="535:60">pict_type</name></name><operator pos:start="535:61" pos:end="535:62">==</operator><name pos:start="535:63" pos:end="535:79">AV_PICTURE_TYPE_B</name></expr>)</condition><block pos:start="535:81" pos:end="541:5">{<block_content pos:start="537:9" pos:end="539:56">

        <expr_stmt pos:start="537:9" pos:end="537:56"><expr pos:start="537:9" pos:end="537:55"><name pos:start="537:9" pos:end="537:22"><name pos:start="537:9" pos:end="537:9">s</name><operator pos:start="537:10" pos:end="537:11">-&gt;</operator><name pos:start="537:12" pos:end="537:13">me</name><operator pos:start="537:14" pos:end="537:14">.</operator><name pos:start="537:15" pos:end="537:22">qpel_put</name></name><operator pos:start="537:23" pos:end="537:23">=</operator> <name pos:start="537:25" pos:end="537:55"><name pos:start="537:25" pos:end="537:25">s</name><operator pos:start="537:26" pos:end="537:27">-&gt;</operator><name pos:start="537:28" pos:end="537:30">dsp</name><operator pos:start="537:31" pos:end="537:31">.</operator><name pos:start="537:32" pos:end="537:55">put_2tap_qpel_pixels_tab</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="539:9" pos:end="539:56"><expr pos:start="539:9" pos:end="539:55"><name pos:start="539:9" pos:end="539:22"><name pos:start="539:9" pos:end="539:9">s</name><operator pos:start="539:10" pos:end="539:11">-&gt;</operator><name pos:start="539:12" pos:end="539:13">me</name><operator pos:start="539:14" pos:end="539:14">.</operator><name pos:start="539:15" pos:end="539:22">qpel_avg</name></name><operator pos:start="539:23" pos:end="539:23">=</operator> <name pos:start="539:25" pos:end="539:55"><name pos:start="539:25" pos:end="539:25">s</name><operator pos:start="539:26" pos:end="539:27">-&gt;</operator><name pos:start="539:28" pos:end="539:30">dsp</name><operator pos:start="539:31" pos:end="539:31">.</operator><name pos:start="539:32" pos:end="539:55">avg_2tap_qpel_pixels_tab</name></name></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="541:6" pos:end="547:5">else if<condition pos:start="541:13" pos:end="541:66">(<expr pos:start="541:14" pos:end="541:65"><operator pos:start="541:14" pos:end="541:14">(</operator><operator pos:start="541:15" pos:end="541:15">!</operator><name pos:start="541:16" pos:end="541:29"><name pos:start="541:16" pos:end="541:16">s</name><operator pos:start="541:17" pos:end="541:18">-&gt;</operator><name pos:start="541:19" pos:end="541:29">no_rounding</name></name><operator pos:start="541:30" pos:end="541:30">)</operator> <operator pos:start="541:32" pos:end="541:33">||</operator> <name pos:start="541:35" pos:end="541:46"><name pos:start="541:35" pos:end="541:35">s</name><operator pos:start="541:36" pos:end="541:37">-&gt;</operator><name pos:start="541:38" pos:end="541:46">pict_type</name></name><operator pos:start="541:47" pos:end="541:48">==</operator><name pos:start="541:49" pos:end="541:65">AV_PICTURE_TYPE_B</name></expr>)</condition><block pos:start="541:67" pos:end="547:5">{<block_content pos:start="543:9" pos:end="545:51">

        <expr_stmt pos:start="543:9" pos:end="543:51"><expr pos:start="543:9" pos:end="543:50"><name pos:start="543:9" pos:end="543:22"><name pos:start="543:9" pos:end="543:9">s</name><operator pos:start="543:10" pos:end="543:11">-&gt;</operator><name pos:start="543:12" pos:end="543:13">me</name><operator pos:start="543:14" pos:end="543:14">.</operator><name pos:start="543:15" pos:end="543:22">qpel_put</name></name><operator pos:start="543:23" pos:end="543:23">=</operator> <name pos:start="543:25" pos:end="543:50"><name pos:start="543:25" pos:end="543:25">s</name><operator pos:start="543:26" pos:end="543:27">-&gt;</operator><name pos:start="543:28" pos:end="543:30">dsp</name><operator pos:start="543:31" pos:end="543:31">.</operator><name pos:start="543:32" pos:end="543:50">put_qpel_pixels_tab</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="545:9" pos:end="545:51"><expr pos:start="545:9" pos:end="545:50"><name pos:start="545:9" pos:end="545:22"><name pos:start="545:9" pos:end="545:9">s</name><operator pos:start="545:10" pos:end="545:11">-&gt;</operator><name pos:start="545:12" pos:end="545:13">me</name><operator pos:start="545:14" pos:end="545:14">.</operator><name pos:start="545:15" pos:end="545:22">qpel_avg</name></name><operator pos:start="545:23" pos:end="545:23">=</operator> <name pos:start="545:25" pos:end="545:50"><name pos:start="545:25" pos:end="545:25">s</name><operator pos:start="545:26" pos:end="545:27">-&gt;</operator><name pos:start="545:28" pos:end="545:30">dsp</name><operator pos:start="545:31" pos:end="545:31">.</operator><name pos:start="545:32" pos:end="545:50">avg_qpel_pixels_tab</name></name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="547:6" pos:end="553:5">else<block pos:start="547:10" pos:end="553:5">{<block_content pos:start="549:9" pos:end="551:51">

        <expr_stmt pos:start="549:9" pos:end="549:58"><expr pos:start="549:9" pos:end="549:57"><name pos:start="549:9" pos:end="549:22"><name pos:start="549:9" pos:end="549:9">s</name><operator pos:start="549:10" pos:end="549:11">-&gt;</operator><name pos:start="549:12" pos:end="549:13">me</name><operator pos:start="549:14" pos:end="549:14">.</operator><name pos:start="549:15" pos:end="549:22">qpel_put</name></name><operator pos:start="549:23" pos:end="549:23">=</operator> <name pos:start="549:25" pos:end="549:57"><name pos:start="549:25" pos:end="549:25">s</name><operator pos:start="549:26" pos:end="549:27">-&gt;</operator><name pos:start="549:28" pos:end="549:30">dsp</name><operator pos:start="549:31" pos:end="549:31">.</operator><name pos:start="549:32" pos:end="549:57">put_no_rnd_qpel_pixels_tab</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="551:9" pos:end="551:51"><expr pos:start="551:9" pos:end="551:50"><name pos:start="551:9" pos:end="551:22"><name pos:start="551:9" pos:end="551:9">s</name><operator pos:start="551:10" pos:end="551:11">-&gt;</operator><name pos:start="551:12" pos:end="551:13">me</name><operator pos:start="551:14" pos:end="551:14">.</operator><name pos:start="551:15" pos:end="551:22">qpel_avg</name></name><operator pos:start="551:23" pos:end="551:23">=</operator> <name pos:start="551:25" pos:end="551:50"><name pos:start="551:25" pos:end="551:25">s</name><operator pos:start="551:26" pos:end="551:27">-&gt;</operator><name pos:start="551:28" pos:end="551:30">dsp</name><operator pos:start="551:31" pos:end="551:31">.</operator><name pos:start="551:32" pos:end="551:50">avg_qpel_pixels_tab</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="557:5" pos:end="559:18"><if pos:start="557:5" pos:end="559:18">if<condition pos:start="557:7" pos:end="557:40">(<expr pos:start="557:8" pos:end="557:39"><call pos:start="557:8" pos:end="557:35"><name pos:start="557:8" pos:end="557:25">ff_MPV_frame_start</name><argument_list pos:start="557:26" pos:end="557:35">(<argument pos:start="557:27" pos:end="557:27"><expr pos:start="557:27" pos:end="557:27"><name pos:start="557:27" pos:end="557:27">s</name></expr></argument>, <argument pos:start="557:30" pos:end="557:34"><expr pos:start="557:30" pos:end="557:34"><name pos:start="557:30" pos:end="557:34">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="557:37" pos:end="557:37">&lt;</operator> <literal type="number" pos:start="557:39" pos:end="557:39">0</literal></expr>)</condition><block type="pseudo" pos:start="559:9" pos:end="559:18"><block_content pos:start="559:9" pos:end="559:18">

        <return pos:start="559:9" pos:end="559:18">return <expr pos:start="559:16" pos:end="559:17"><operator pos:start="559:16" pos:end="559:16">-</operator><literal type="number" pos:start="559:17" pos:end="559:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="563:5" pos:end="563:55"><if pos:start="563:5" pos:end="563:55">if <condition pos:start="563:8" pos:end="563:24">(<expr pos:start="563:9" pos:end="563:23"><operator pos:start="563:9" pos:end="563:9">!</operator><name pos:start="563:10" pos:end="563:23"><name pos:start="563:10" pos:end="563:10">s</name><operator pos:start="563:11" pos:end="563:12">-&gt;</operator><name pos:start="563:13" pos:end="563:23">divx_packed</name></name></expr>)</condition><block type="pseudo" pos:start="563:26" pos:end="563:55"><block_content pos:start="563:26" pos:end="563:55"> <expr_stmt pos:start="563:26" pos:end="563:55"><expr pos:start="563:26" pos:end="563:54"><call pos:start="563:26" pos:end="563:54"><name pos:start="563:26" pos:end="563:47">ff_thread_finish_setup</name><argument_list pos:start="563:48" pos:end="563:54">(<argument pos:start="563:49" pos:end="563:53"><expr pos:start="563:49" pos:end="563:53"><name pos:start="563:49" pos:end="563:53">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="567:5" pos:end="573:5"><if pos:start="567:5" pos:end="573:5">if <condition pos:start="567:8" pos:end="567:96">(<expr pos:start="567:9" pos:end="567:95"><name pos:start="567:9" pos:end="567:34">CONFIG_MPEG4_VDPAU_DECODER</name> <operator pos:start="567:36" pos:end="567:37">&amp;&amp;</operator> <operator pos:start="567:39" pos:end="567:39">(</operator><name pos:start="567:40" pos:end="567:68"><name pos:start="567:40" pos:end="567:40">s</name><operator pos:start="567:41" pos:end="567:42">-&gt;</operator><name pos:start="567:43" pos:end="567:47">avctx</name><operator pos:start="567:48" pos:end="567:49">-&gt;</operator><name pos:start="567:50" pos:end="567:54">codec</name><operator pos:start="567:55" pos:end="567:56">-&gt;</operator><name pos:start="567:57" pos:end="567:68">capabilities</name></name> <operator pos:start="567:70" pos:end="567:70">&amp;</operator> <name pos:start="567:72" pos:end="567:94">CODEC_CAP_HWACCEL_VDPAU</name><operator pos:start="567:95" pos:end="567:95">)</operator></expr>)</condition> <block pos:start="567:98" pos:end="573:5">{<block_content pos:start="569:9" pos:end="571:23">

        <expr_stmt pos:start="569:9" pos:end="569:88"><expr pos:start="569:9" pos:end="569:87"><call pos:start="569:9" pos:end="569:87"><name pos:start="569:9" pos:end="569:37">ff_vdpau_mpeg4_decode_picture</name><argument_list pos:start="569:38" pos:end="569:87">(<argument pos:start="569:39" pos:end="569:39"><expr pos:start="569:39" pos:end="569:39"><name pos:start="569:39" pos:end="569:39">s</name></expr></argument>, <argument pos:start="569:42" pos:end="569:53"><expr pos:start="569:42" pos:end="569:53"><name pos:start="569:42" pos:end="569:53"><name pos:start="569:42" pos:end="569:42">s</name><operator pos:start="569:43" pos:end="569:44">-&gt;</operator><name pos:start="569:45" pos:end="569:46">gb</name><operator pos:start="569:47" pos:end="569:47">.</operator><name pos:start="569:48" pos:end="569:53">buffer</name></name></expr></argument>, <argument pos:start="569:56" pos:end="569:86"><expr pos:start="569:56" pos:end="569:86"><name pos:start="569:56" pos:end="569:71"><name pos:start="569:56" pos:end="569:56">s</name><operator pos:start="569:57" pos:end="569:58">-&gt;</operator><name pos:start="569:59" pos:end="569:60">gb</name><operator pos:start="569:61" pos:end="569:61">.</operator><name pos:start="569:62" pos:end="569:71">buffer_end</name></name> <operator pos:start="569:73" pos:end="569:73">-</operator> <name pos:start="569:75" pos:end="569:86"><name pos:start="569:75" pos:end="569:75">s</name><operator pos:start="569:76" pos:end="569:77">-&gt;</operator><name pos:start="569:78" pos:end="569:79">gb</name><operator pos:start="569:80" pos:end="569:80">.</operator><name pos:start="569:81" pos:end="569:86">buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="571:9" pos:end="571:23">goto <name pos:start="571:14" pos:end="571:22">frame_end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="577:5" pos:end="583:5"><if pos:start="577:5" pos:end="583:5">if <condition pos:start="577:8" pos:end="577:23">(<expr pos:start="577:9" pos:end="577:22"><name pos:start="577:9" pos:end="577:22"><name pos:start="577:9" pos:end="577:13">avctx</name><operator pos:start="577:14" pos:end="577:15">-&gt;</operator><name pos:start="577:16" pos:end="577:22">hwaccel</name></name></expr>)</condition> <block pos:start="577:25" pos:end="583:5">{<block_content pos:start="579:9" pos:end="581:22">

        <if_stmt pos:start="579:9" pos:end="581:22"><if pos:start="579:9" pos:end="581:22">if <condition pos:start="579:12" pos:end="579:98">(<expr pos:start="579:13" pos:end="579:97"><call pos:start="579:13" pos:end="579:93"><name pos:start="579:13" pos:end="579:39"><name pos:start="579:13" pos:end="579:17">avctx</name><operator pos:start="579:18" pos:end="579:19">-&gt;</operator><name pos:start="579:20" pos:end="579:26">hwaccel</name><operator pos:start="579:27" pos:end="579:28">-&gt;</operator><name pos:start="579:29" pos:end="579:39">start_frame</name></name><argument_list pos:start="579:40" pos:end="579:93">(<argument pos:start="579:41" pos:end="579:45"><expr pos:start="579:41" pos:end="579:45"><name pos:start="579:41" pos:end="579:45">avctx</name></expr></argument>, <argument pos:start="579:48" pos:end="579:59"><expr pos:start="579:48" pos:end="579:59"><name pos:start="579:48" pos:end="579:59"><name pos:start="579:48" pos:end="579:48">s</name><operator pos:start="579:49" pos:end="579:50">-&gt;</operator><name pos:start="579:51" pos:end="579:52">gb</name><operator pos:start="579:53" pos:end="579:53">.</operator><name pos:start="579:54" pos:end="579:59">buffer</name></name></expr></argument>, <argument pos:start="579:62" pos:end="579:92"><expr pos:start="579:62" pos:end="579:92"><name pos:start="579:62" pos:end="579:77"><name pos:start="579:62" pos:end="579:62">s</name><operator pos:start="579:63" pos:end="579:64">-&gt;</operator><name pos:start="579:65" pos:end="579:66">gb</name><operator pos:start="579:67" pos:end="579:67">.</operator><name pos:start="579:68" pos:end="579:77">buffer_end</name></name> <operator pos:start="579:79" pos:end="579:79">-</operator> <name pos:start="579:81" pos:end="579:92"><name pos:start="579:81" pos:end="579:81">s</name><operator pos:start="579:82" pos:end="579:83">-&gt;</operator><name pos:start="579:84" pos:end="579:85">gb</name><operator pos:start="579:86" pos:end="579:86">.</operator><name pos:start="579:87" pos:end="579:92">buffer</name></name></expr></argument>)</argument_list></call> <operator pos:start="579:95" pos:end="579:95">&lt;</operator> <literal type="number" pos:start="579:97" pos:end="579:97">0</literal></expr>)</condition><block type="pseudo" pos:start="581:13" pos:end="581:22"><block_content pos:start="581:13" pos:end="581:22">

            <return pos:start="581:13" pos:end="581:22">return <expr pos:start="581:20" pos:end="581:21"><operator pos:start="581:20" pos:end="581:20">-</operator><literal type="number" pos:start="581:21" pos:end="581:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="587:5" pos:end="587:25"><expr pos:start="587:5" pos:end="587:24"><call pos:start="587:5" pos:end="587:24"><name pos:start="587:5" pos:end="587:21">ff_er_frame_start</name><argument_list pos:start="587:22" pos:end="587:24">(<argument pos:start="587:23" pos:end="587:23"><expr pos:start="587:23" pos:end="587:23"><name pos:start="587:23" pos:end="587:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="591:5" pos:end="591:111">//the second part of the wmv2 header contains the MB skip bits which are stored in current_picture-&gt;mb_type</comment>

    <comment type="line" pos:start="593:5" pos:end="593:56">//which is not available before ff_MPV_frame_start()</comment>

    <if_stmt pos:start="595:5" pos:end="603:5"><if pos:start="595:5" pos:end="603:5">if <condition pos:start="595:8" pos:end="595:53">(<expr pos:start="595:9" pos:end="595:52"><name pos:start="595:9" pos:end="595:27">CONFIG_WMV2_DECODER</name> <operator pos:start="595:29" pos:end="595:30">&amp;&amp;</operator> <name pos:start="595:32" pos:end="595:49"><name pos:start="595:32" pos:end="595:32">s</name><operator pos:start="595:33" pos:end="595:34">-&gt;</operator><name pos:start="595:35" pos:end="595:49">msmpeg4_version</name></name><operator pos:start="595:50" pos:end="595:51">==</operator><literal type="number" pos:start="595:52" pos:end="595:52">5</literal></expr>)</condition><block pos:start="595:54" pos:end="603:5">{<block_content pos:start="597:9" pos:end="601:40">

        <expr_stmt pos:start="597:9" pos:end="597:57"><expr pos:start="597:9" pos:end="597:56"><name pos:start="597:9" pos:end="597:11">ret</name> <operator pos:start="597:13" pos:end="597:13">=</operator> <call pos:start="597:15" pos:end="597:56"><name pos:start="597:15" pos:end="597:53">ff_wmv2_decode_secondary_picture_header</name><argument_list pos:start="597:54" pos:end="597:56">(<argument pos:start="597:55" pos:end="597:55"><expr pos:start="597:55" pos:end="597:55"><name pos:start="597:55" pos:end="597:55">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="599:9" pos:end="599:29"><if pos:start="599:9" pos:end="599:29">if<condition pos:start="599:11" pos:end="599:17">(<expr pos:start="599:12" pos:end="599:16"><name pos:start="599:12" pos:end="599:14">ret</name><operator pos:start="599:15" pos:end="599:15">&lt;</operator><literal type="number" pos:start="599:16" pos:end="599:16">0</literal></expr>)</condition><block type="pseudo" pos:start="599:19" pos:end="599:29"><block_content pos:start="599:19" pos:end="599:29"> <return pos:start="599:19" pos:end="599:29">return <expr pos:start="599:26" pos:end="599:28"><name pos:start="599:26" pos:end="599:28">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="601:9" pos:end="601:40"><if pos:start="601:9" pos:end="601:40">if<condition pos:start="601:11" pos:end="601:18">(<expr pos:start="601:12" pos:end="601:17"><name pos:start="601:12" pos:end="601:14">ret</name><operator pos:start="601:15" pos:end="601:16">==</operator><literal type="number" pos:start="601:17" pos:end="601:17">1</literal></expr>)</condition><block type="pseudo" pos:start="601:20" pos:end="601:40"><block_content pos:start="601:20" pos:end="601:40"> <goto pos:start="601:20" pos:end="601:40">goto <name pos:start="601:25" pos:end="601:39">intrax8_decoded</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="607:5" pos:end="607:32">/* decode each macroblock */</comment>

    <expr_stmt pos:start="609:5" pos:end="609:14"><expr pos:start="609:5" pos:end="609:13"><name pos:start="609:5" pos:end="609:11"><name pos:start="609:5" pos:end="609:5">s</name><operator pos:start="609:6" pos:end="609:7">-&gt;</operator><name pos:start="609:8" pos:end="609:11">mb_x</name></name><operator pos:start="609:12" pos:end="609:12">=</operator><literal type="number" pos:start="609:13" pos:end="609:13">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="611:5" pos:end="611:14"><expr pos:start="611:5" pos:end="611:13"><name pos:start="611:5" pos:end="611:11"><name pos:start="611:5" pos:end="611:5">s</name><operator pos:start="611:6" pos:end="611:7">-&gt;</operator><name pos:start="611:8" pos:end="611:11">mb_y</name></name><operator pos:start="611:12" pos:end="611:12">=</operator><literal type="number" pos:start="611:13" pos:end="611:13">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="615:5" pos:end="615:26"><expr pos:start="615:5" pos:end="615:25"><name pos:start="615:5" pos:end="615:7">ret</name> <operator pos:start="615:9" pos:end="615:9">=</operator> <call pos:start="615:11" pos:end="615:25"><name pos:start="615:11" pos:end="615:22">decode_slice</name><argument_list pos:start="615:23" pos:end="615:25">(<argument pos:start="615:24" pos:end="615:24"><expr pos:start="615:24" pos:end="615:24"><name pos:start="615:24" pos:end="615:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="617:5" pos:end="649:5">while<condition pos:start="617:10" pos:end="617:31">(<expr pos:start="617:11" pos:end="617:30"><name pos:start="617:11" pos:end="617:17"><name pos:start="617:11" pos:end="617:11">s</name><operator pos:start="617:12" pos:end="617:13">-&gt;</operator><name pos:start="617:14" pos:end="617:17">mb_y</name></name><operator pos:start="617:18" pos:end="617:18">&lt;</operator><name pos:start="617:19" pos:end="617:30"><name pos:start="617:19" pos:end="617:19">s</name><operator pos:start="617:20" pos:end="617:21">-&gt;</operator><name pos:start="617:22" pos:end="617:30">mb_height</name></name></expr>)</condition><block pos:start="617:32" pos:end="649:5">{<block_content pos:start="619:9" pos:end="647:59">

        <if_stmt pos:start="619:9" pos:end="637:9"><if pos:start="619:9" pos:end="625:9">if<condition pos:start="619:11" pos:end="619:30">(<expr pos:start="619:12" pos:end="619:29"><name pos:start="619:12" pos:end="619:29"><name pos:start="619:12" pos:end="619:12">s</name><operator pos:start="619:13" pos:end="619:14">-&gt;</operator><name pos:start="619:15" pos:end="619:29">msmpeg4_version</name></name></expr>)</condition><block pos:start="619:31" pos:end="625:9">{<block_content pos:start="621:13" pos:end="623:22">

            <if_stmt pos:start="621:13" pos:end="623:22"><if pos:start="621:13" pos:end="623:22">if<condition pos:start="621:15" pos:end="621:127">(<expr pos:start="621:16" pos:end="621:126"><name pos:start="621:16" pos:end="621:30"><name pos:start="621:16" pos:end="621:16">s</name><operator pos:start="621:17" pos:end="621:18">-&gt;</operator><name pos:start="621:19" pos:end="621:30">slice_height</name></name><operator pos:start="621:31" pos:end="621:32">==</operator><literal type="number" pos:start="621:33" pos:end="621:33">0</literal> <operator pos:start="621:35" pos:end="621:36">||</operator> <name pos:start="621:38" pos:end="621:44"><name pos:start="621:38" pos:end="621:38">s</name><operator pos:start="621:39" pos:end="621:40">-&gt;</operator><name pos:start="621:41" pos:end="621:44">mb_x</name></name><operator pos:start="621:45" pos:end="621:46">!=</operator><literal type="number" pos:start="621:47" pos:end="621:47">0</literal> <operator pos:start="621:49" pos:end="621:50">||</operator> <operator pos:start="621:52" pos:end="621:52">(</operator><name pos:start="621:53" pos:end="621:59"><name pos:start="621:53" pos:end="621:53">s</name><operator pos:start="621:54" pos:end="621:55">-&gt;</operator><name pos:start="621:56" pos:end="621:59">mb_y</name></name><operator pos:start="621:60" pos:end="621:60">%</operator><name pos:start="621:61" pos:end="621:75"><name pos:start="621:61" pos:end="621:61">s</name><operator pos:start="621:62" pos:end="621:63">-&gt;</operator><name pos:start="621:64" pos:end="621:75">slice_height</name></name><operator pos:start="621:76" pos:end="621:76">)</operator><operator pos:start="621:77" pos:end="621:78">!=</operator><literal type="number" pos:start="621:79" pos:end="621:79">0</literal> <operator pos:start="621:81" pos:end="621:82">||</operator> <call pos:start="621:84" pos:end="621:105"><name pos:start="621:84" pos:end="621:97">get_bits_count</name><argument_list pos:start="621:98" pos:end="621:105">(<argument pos:start="621:99" pos:end="621:104"><expr pos:start="621:99" pos:end="621:104"><operator pos:start="621:99" pos:end="621:99">&amp;</operator><name pos:start="621:100" pos:end="621:104"><name pos:start="621:100" pos:end="621:100">s</name><operator pos:start="621:101" pos:end="621:102">-&gt;</operator><name pos:start="621:103" pos:end="621:104">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="621:107" pos:end="621:107">&gt;</operator> <name pos:start="621:109" pos:end="621:126"><name pos:start="621:109" pos:end="621:109">s</name><operator pos:start="621:110" pos:end="621:111">-&gt;</operator><name pos:start="621:112" pos:end="621:113">gb</name><operator pos:start="621:114" pos:end="621:114">.</operator><name pos:start="621:115" pos:end="621:126">size_in_bits</name></name></expr>)</condition><block type="pseudo" pos:start="623:17" pos:end="623:22"><block_content pos:start="623:17" pos:end="623:22">

                <break pos:start="623:17" pos:end="623:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></if><else pos:start="625:10" pos:end="637:9">else<block pos:start="625:14" pos:end="637:9">{<block_content pos:start="627:13" pos:end="635:38">

            <decl_stmt pos:start="627:13" pos:end="627:47"><decl pos:start="627:13" pos:end="627:30"><type pos:start="627:13" pos:end="627:15"><name pos:start="627:13" pos:end="627:15">int</name></type> <name pos:start="627:17" pos:end="627:22">prev_x</name><init pos:start="627:23" pos:end="627:30">=<expr pos:start="627:24" pos:end="627:30"><name pos:start="627:24" pos:end="627:30"><name pos:start="627:24" pos:end="627:24">s</name><operator pos:start="627:25" pos:end="627:26">-&gt;</operator><name pos:start="627:27" pos:end="627:30">mb_x</name></name></expr></init></decl>, <decl pos:start="627:33" pos:end="627:46"><type ref="prev" pos:start="627:13" pos:end="627:15"/><name pos:start="627:33" pos:end="627:38">prev_y</name><init pos:start="627:39" pos:end="627:46">=<expr pos:start="627:40" pos:end="627:46"><name pos:start="627:40" pos:end="627:46"><name pos:start="627:40" pos:end="627:40">s</name><operator pos:start="627:41" pos:end="627:42">-&gt;</operator><name pos:start="627:43" pos:end="627:46">mb_y</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="629:13" pos:end="631:22"><if pos:start="629:13" pos:end="631:22">if<condition pos:start="629:15" pos:end="629:35">(<expr pos:start="629:16" pos:end="629:34"><call pos:start="629:16" pos:end="629:32"><name pos:start="629:16" pos:end="629:29">ff_h263_resync</name><argument_list pos:start="629:30" pos:end="629:32">(<argument pos:start="629:31" pos:end="629:31"><expr pos:start="629:31" pos:end="629:31"><name pos:start="629:31" pos:end="629:31">s</name></expr></argument>)</argument_list></call><operator pos:start="629:33" pos:end="629:33">&lt;</operator><literal type="number" pos:start="629:34" pos:end="629:34">0</literal></expr>)</condition><block type="pseudo" pos:start="631:17" pos:end="631:22"><block_content pos:start="631:17" pos:end="631:22">

                <break pos:start="631:17" pos:end="631:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="633:13" pos:end="635:38"><if pos:start="633:13" pos:end="635:38">if <condition pos:start="633:16" pos:end="633:80">(<expr pos:start="633:17" pos:end="633:79"><name pos:start="633:17" pos:end="633:22">prev_y</name> <operator pos:start="633:24" pos:end="633:24">*</operator> <name pos:start="633:26" pos:end="633:36"><name pos:start="633:26" pos:end="633:26">s</name><operator pos:start="633:27" pos:end="633:28">-&gt;</operator><name pos:start="633:29" pos:end="633:36">mb_width</name></name> <operator pos:start="633:38" pos:end="633:38">+</operator> <name pos:start="633:40" pos:end="633:45">prev_x</name> <operator pos:start="633:47" pos:end="633:47">&lt;</operator> <name pos:start="633:49" pos:end="633:55"><name pos:start="633:49" pos:end="633:49">s</name><operator pos:start="633:50" pos:end="633:51">-&gt;</operator><name pos:start="633:52" pos:end="633:55">mb_y</name></name> <operator pos:start="633:57" pos:end="633:57">*</operator> <name pos:start="633:59" pos:end="633:69"><name pos:start="633:59" pos:end="633:59">s</name><operator pos:start="633:60" pos:end="633:61">-&gt;</operator><name pos:start="633:62" pos:end="633:69">mb_width</name></name> <operator pos:start="633:71" pos:end="633:71">+</operator> <name pos:start="633:73" pos:end="633:79"><name pos:start="633:73" pos:end="633:73">s</name><operator pos:start="633:74" pos:end="633:75">-&gt;</operator><name pos:start="633:76" pos:end="633:79">mb_x</name></name></expr>)</condition><block type="pseudo" pos:start="635:17" pos:end="635:38"><block_content pos:start="635:17" pos:end="635:38">

                <expr_stmt pos:start="635:17" pos:end="635:38"><expr pos:start="635:17" pos:end="635:37"><name pos:start="635:17" pos:end="635:33"><name pos:start="635:17" pos:end="635:17">s</name><operator pos:start="635:18" pos:end="635:19">-&gt;</operator><name pos:start="635:20" pos:end="635:33">error_occurred</name></name> <operator pos:start="635:35" pos:end="635:35">=</operator> <literal type="number" pos:start="635:37" pos:end="635:37">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="641:9" pos:end="643:38"><if pos:start="641:9" pos:end="643:38">if<condition pos:start="641:11" pos:end="641:48">(<expr pos:start="641:12" pos:end="641:47"><name pos:start="641:12" pos:end="641:29"><name pos:start="641:12" pos:end="641:12">s</name><operator pos:start="641:13" pos:end="641:14">-&gt;</operator><name pos:start="641:15" pos:end="641:29">msmpeg4_version</name></name><operator pos:start="641:30" pos:end="641:30">&lt;</operator><literal type="number" pos:start="641:31" pos:end="641:31">4</literal> <operator pos:start="641:33" pos:end="641:34">&amp;&amp;</operator> <name pos:start="641:36" pos:end="641:47"><name pos:start="641:36" pos:end="641:36">s</name><operator pos:start="641:37" pos:end="641:38">-&gt;</operator><name pos:start="641:39" pos:end="641:47">h263_pred</name></name></expr>)</condition><block type="pseudo" pos:start="643:13" pos:end="643:38"><block_content pos:start="643:13" pos:end="643:38">

            <expr_stmt pos:start="643:13" pos:end="643:38"><expr pos:start="643:13" pos:end="643:37"><call pos:start="643:13" pos:end="643:37"><name pos:start="643:13" pos:end="643:34">ff_mpeg4_clean_buffers</name><argument_list pos:start="643:35" pos:end="643:37">(<argument pos:start="643:36" pos:end="643:36"><expr pos:start="643:36" pos:end="643:36"><name pos:start="643:36" pos:end="643:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="647:9" pos:end="647:59"><if pos:start="647:9" pos:end="647:59">if <condition pos:start="647:12" pos:end="647:32">(<expr pos:start="647:13" pos:end="647:31"><call pos:start="647:13" pos:end="647:27"><name pos:start="647:13" pos:end="647:24">decode_slice</name><argument_list pos:start="647:25" pos:end="647:27">(<argument pos:start="647:26" pos:end="647:26"><expr pos:start="647:26" pos:end="647:26"><name pos:start="647:26" pos:end="647:26">s</name></expr></argument>)</argument_list></call> <operator pos:start="647:29" pos:end="647:29">&lt;</operator> <literal type="number" pos:start="647:31" pos:end="647:31">0</literal></expr>)</condition><block type="pseudo" pos:start="647:34" pos:end="647:59"><block_content pos:start="647:34" pos:end="647:59"> <expr_stmt pos:start="647:34" pos:end="647:59"><expr pos:start="647:34" pos:end="647:58"><name pos:start="647:34" pos:end="647:36">ret</name> <operator pos:start="647:38" pos:end="647:38">=</operator> <name pos:start="647:40" pos:end="647:58">AVERROR_INVALIDDATA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="653:5" pos:end="659:9"><if pos:start="653:5" pos:end="659:9">if <condition pos:start="653:8" pos:end="653:86">(<expr pos:start="653:9" pos:end="653:85"><name pos:start="653:9" pos:end="653:26"><name pos:start="653:9" pos:end="653:9">s</name><operator pos:start="653:10" pos:end="653:11">-&gt;</operator><name pos:start="653:12" pos:end="653:26">msmpeg4_version</name></name> <operator pos:start="653:28" pos:end="653:29">&amp;&amp;</operator> <name pos:start="653:31" pos:end="653:48"><name pos:start="653:31" pos:end="653:31">s</name><operator pos:start="653:32" pos:end="653:33">-&gt;</operator><name pos:start="653:34" pos:end="653:48">msmpeg4_version</name></name><operator pos:start="653:49" pos:end="653:49">&lt;</operator><literal type="number" pos:start="653:50" pos:end="653:50">4</literal> <operator pos:start="653:52" pos:end="653:53">&amp;&amp;</operator> <name pos:start="653:55" pos:end="653:66"><name pos:start="653:55" pos:end="653:55">s</name><operator pos:start="653:56" pos:end="653:57">-&gt;</operator><name pos:start="653:58" pos:end="653:66">pict_type</name></name><operator pos:start="653:67" pos:end="653:68">==</operator><name pos:start="653:69" pos:end="653:85">AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo" pos:start="655:9" pos:end="659:9"><block_content pos:start="655:9" pos:end="659:9">

        <if_stmt pos:start="655:9" pos:end="659:9"><if pos:start="655:9" pos:end="659:9">if<condition pos:start="655:11" pos:end="655:84">(<expr pos:start="655:12" pos:end="655:83"><operator pos:start="655:12" pos:end="655:12">!</operator><name pos:start="655:13" pos:end="655:34">CONFIG_MSMPEG4_DECODER</name> <operator pos:start="655:36" pos:end="655:37">||</operator> <call pos:start="655:39" pos:end="655:79"><name pos:start="655:39" pos:end="655:66">ff_msmpeg4_decode_ext_header</name><argument_list pos:start="655:67" pos:end="655:79">(<argument pos:start="655:68" pos:end="655:68"><expr pos:start="655:68" pos:end="655:68"><name pos:start="655:68" pos:end="655:68">s</name></expr></argument>, <argument pos:start="655:71" pos:end="655:78"><expr pos:start="655:71" pos:end="655:78"><name pos:start="655:71" pos:end="655:78">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="655:81" pos:end="655:81">&lt;</operator> <literal type="number" pos:start="655:83" pos:end="655:83">0</literal></expr>)</condition><block pos:start="655:85" pos:end="659:9">{<block_content pos:start="657:13" pos:end="657:60">

            <expr_stmt pos:start="657:13" pos:end="657:60"><expr pos:start="657:13" pos:end="657:59"><name pos:start="657:13" pos:end="657:46"><name pos:start="657:13" pos:end="657:13">s</name><operator pos:start="657:14" pos:end="657:15">-&gt;</operator><name pos:start="657:16" pos:end="657:33">error_status_table</name><index pos:start="657:34" pos:end="657:46">[<expr pos:start="657:35" pos:end="657:45"><name pos:start="657:35" pos:end="657:43"><name pos:start="657:35" pos:end="657:35">s</name><operator pos:start="657:36" pos:end="657:37">-&gt;</operator><name pos:start="657:38" pos:end="657:43">mb_num</name></name><operator pos:start="657:44" pos:end="657:44">-</operator><literal type="number" pos:start="657:45" pos:end="657:45">1</literal></expr>]</index></name><operator pos:start="657:47" pos:end="657:47">=</operator> <name pos:start="657:49" pos:end="657:59">ER_MB_ERROR</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="663:5" pos:end="663:40"><expr pos:start="663:5" pos:end="663:39"><call pos:start="663:5" pos:end="663:39"><name pos:start="663:5" pos:end="663:10">assert</name><argument_list pos:start="663:11" pos:end="663:39">(<argument pos:start="663:12" pos:end="663:38"><expr pos:start="663:12" pos:end="663:38"><name pos:start="663:12" pos:end="663:35"><name pos:start="663:12" pos:end="663:12">s</name><operator pos:start="663:13" pos:end="663:14">-&gt;</operator><name pos:start="663:15" pos:end="663:35">bitstream_buffer_size</name></name><operator pos:start="663:36" pos:end="663:37">==</operator><literal type="number" pos:start="663:38" pos:end="663:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="665:1" pos:end="665:10"><name pos:start="665:1" pos:end="665:9">frame_end</name>:</label>

    <comment type="block" pos:start="667:5" pos:end="667:43">/* divx 5.01+ bistream reorder stuff */</comment>

    <if_stmt pos:start="669:5" pos:end="725:5"><if pos:start="669:5" pos:end="725:5">if<condition pos:start="669:7" pos:end="669:53">(<expr pos:start="669:8" pos:end="669:52"><name pos:start="669:8" pos:end="669:18"><name pos:start="669:8" pos:end="669:8">s</name><operator pos:start="669:9" pos:end="669:10">-&gt;</operator><name pos:start="669:11" pos:end="669:18">codec_id</name></name><operator pos:start="669:19" pos:end="669:20">==</operator><name pos:start="669:21" pos:end="669:34">CODEC_ID_MPEG4</name> <operator pos:start="669:36" pos:end="669:37">&amp;&amp;</operator> <name pos:start="669:39" pos:end="669:52"><name pos:start="669:39" pos:end="669:39">s</name><operator pos:start="669:40" pos:end="669:41">-&gt;</operator><name pos:start="669:42" pos:end="669:52">divx_packed</name></name></expr>)</condition><block pos:start="669:54" pos:end="725:5">{<block_content pos:start="671:9" pos:end="723:9">

        <decl_stmt pos:start="671:9" pos:end="671:51"><decl pos:start="671:9" pos:end="671:50"><type pos:start="671:9" pos:end="671:11"><name pos:start="671:9" pos:end="671:11">int</name></type> <name pos:start="671:13" pos:end="671:23">current_pos</name><init pos:start="671:24" pos:end="671:50">= <expr pos:start="671:26" pos:end="671:50"><call pos:start="671:26" pos:end="671:47"><name pos:start="671:26" pos:end="671:39">get_bits_count</name><argument_list pos:start="671:40" pos:end="671:47">(<argument pos:start="671:41" pos:end="671:46"><expr pos:start="671:41" pos:end="671:46"><operator pos:start="671:41" pos:end="671:41">&amp;</operator><name pos:start="671:42" pos:end="671:46"><name pos:start="671:42" pos:end="671:42">s</name><operator pos:start="671:43" pos:end="671:44">-&gt;</operator><name pos:start="671:45" pos:end="671:46">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="671:48" pos:end="671:49">&gt;&gt;</operator><literal type="number" pos:start="671:50" pos:end="671:50">3</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="673:9" pos:end="673:30"><decl pos:start="673:9" pos:end="673:29"><type pos:start="673:9" pos:end="673:11"><name pos:start="673:9" pos:end="673:11">int</name></type> <name pos:start="673:13" pos:end="673:27">startcode_found</name><init pos:start="673:28" pos:end="673:29">=<expr pos:start="673:29" pos:end="673:29"><literal type="number" pos:start="673:29" pos:end="673:29">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="677:9" pos:end="693:9"><if pos:start="677:9" pos:end="693:9">if<condition pos:start="677:11" pos:end="677:38">(<expr pos:start="677:12" pos:end="677:37"><name pos:start="677:12" pos:end="677:19">buf_size</name> <operator pos:start="677:21" pos:end="677:21">-</operator> <name pos:start="677:23" pos:end="677:33">current_pos</name> <operator pos:start="677:35" pos:end="677:35">&gt;</operator> <literal type="number" pos:start="677:37" pos:end="677:37">5</literal></expr>)</condition><block pos:start="677:39" pos:end="693:9">{<block_content pos:start="679:13" pos:end="691:13">

            <decl_stmt pos:start="679:13" pos:end="679:18"><decl pos:start="679:13" pos:end="679:17"><type pos:start="679:13" pos:end="679:15"><name pos:start="679:13" pos:end="679:15">int</name></type> <name pos:start="679:17" pos:end="679:17">i</name></decl>;</decl_stmt>

            <for pos:start="681:13" pos:end="691:13">for<control pos:start="681:16" pos:end="681:49">(<init pos:start="681:17" pos:end="681:30"><expr pos:start="681:17" pos:end="681:29"><name pos:start="681:17" pos:end="681:17">i</name><operator pos:start="681:18" pos:end="681:18">=</operator><name pos:start="681:19" pos:end="681:29">current_pos</name></expr>;</init> <condition pos:start="681:32" pos:end="681:44"><expr pos:start="681:32" pos:end="681:43"><name pos:start="681:32" pos:end="681:32">i</name><operator pos:start="681:33" pos:end="681:33">&lt;</operator><name pos:start="681:34" pos:end="681:41">buf_size</name><operator pos:start="681:42" pos:end="681:42">-</operator><literal type="number" pos:start="681:43" pos:end="681:43">3</literal></expr>;</condition> <incr pos:start="681:46" pos:end="681:48"><expr pos:start="681:46" pos:end="681:48"><name pos:start="681:46" pos:end="681:46">i</name><operator pos:start="681:47" pos:end="681:48">++</operator></expr></incr>)</control><block pos:start="681:50" pos:end="691:13">{<block_content pos:start="683:17" pos:end="689:17">

                <if_stmt pos:start="683:17" pos:end="689:17"><if pos:start="683:17" pos:end="689:17">if<condition pos:start="683:19" pos:end="683:77">(<expr pos:start="683:20" pos:end="683:76"><name pos:start="683:20" pos:end="683:25"><name pos:start="683:20" pos:end="683:22">buf</name><index pos:start="683:23" pos:end="683:25">[<expr pos:start="683:24" pos:end="683:24"><name pos:start="683:24" pos:end="683:24">i</name></expr>]</index></name><operator pos:start="683:26" pos:end="683:27">==</operator><literal type="number" pos:start="683:28" pos:end="683:28">0</literal> <operator pos:start="683:30" pos:end="683:31">&amp;&amp;</operator> <name pos:start="683:33" pos:end="683:40"><name pos:start="683:33" pos:end="683:35">buf</name><index pos:start="683:36" pos:end="683:40">[<expr pos:start="683:37" pos:end="683:39"><name pos:start="683:37" pos:end="683:37">i</name><operator pos:start="683:38" pos:end="683:38">+</operator><literal type="number" pos:start="683:39" pos:end="683:39">1</literal></expr>]</index></name><operator pos:start="683:41" pos:end="683:42">==</operator><literal type="number" pos:start="683:43" pos:end="683:43">0</literal> <operator pos:start="683:45" pos:end="683:46">&amp;&amp;</operator> <name pos:start="683:48" pos:end="683:55"><name pos:start="683:48" pos:end="683:50">buf</name><index pos:start="683:51" pos:end="683:55">[<expr pos:start="683:52" pos:end="683:54"><name pos:start="683:52" pos:end="683:52">i</name><operator pos:start="683:53" pos:end="683:53">+</operator><literal type="number" pos:start="683:54" pos:end="683:54">2</literal></expr>]</index></name><operator pos:start="683:56" pos:end="683:57">==</operator><literal type="number" pos:start="683:58" pos:end="683:58">1</literal> <operator pos:start="683:60" pos:end="683:61">&amp;&amp;</operator> <name pos:start="683:63" pos:end="683:70"><name pos:start="683:63" pos:end="683:65">buf</name><index pos:start="683:66" pos:end="683:70">[<expr pos:start="683:67" pos:end="683:69"><name pos:start="683:67" pos:end="683:67">i</name><operator pos:start="683:68" pos:end="683:68">+</operator><literal type="number" pos:start="683:69" pos:end="683:69">3</literal></expr>]</index></name><operator pos:start="683:71" pos:end="683:72">==</operator><literal type="number" pos:start="683:73" pos:end="683:76">0xB6</literal></expr>)</condition><block pos:start="683:78" pos:end="689:17">{<block_content pos:start="685:21" pos:end="687:26">

                    <expr_stmt pos:start="685:21" pos:end="685:38"><expr pos:start="685:21" pos:end="685:37"><name pos:start="685:21" pos:end="685:35">startcode_found</name><operator pos:start="685:36" pos:end="685:36">=</operator><literal type="number" pos:start="685:37" pos:end="685:37">1</literal></expr>;</expr_stmt>

                    <break pos:start="687:21" pos:end="687:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="695:9" pos:end="701:9"><if pos:start="695:9" pos:end="701:9">if<condition pos:start="695:11" pos:end="695:81">(<expr pos:start="695:12" pos:end="695:80"><name pos:start="695:12" pos:end="695:23"><name pos:start="695:12" pos:end="695:12">s</name><operator pos:start="695:13" pos:end="695:14">-&gt;</operator><name pos:start="695:15" pos:end="695:16">gb</name><operator pos:start="695:17" pos:end="695:17">.</operator><name pos:start="695:18" pos:end="695:23">buffer</name></name> <operator pos:start="695:25" pos:end="695:26">==</operator> <name pos:start="695:28" pos:end="695:46"><name pos:start="695:28" pos:end="695:28">s</name><operator pos:start="695:29" pos:end="695:30">-&gt;</operator><name pos:start="695:31" pos:end="695:46">bitstream_buffer</name></name> <operator pos:start="695:48" pos:end="695:49">&amp;&amp;</operator> <name pos:start="695:51" pos:end="695:58">buf_size</name><operator pos:start="695:59" pos:end="695:59">&gt;</operator><literal type="number" pos:start="695:60" pos:end="695:60">7</literal> <operator pos:start="695:62" pos:end="695:63">&amp;&amp;</operator> <name pos:start="695:65" pos:end="695:77"><name pos:start="695:65" pos:end="695:65">s</name><operator pos:start="695:66" pos:end="695:67">-&gt;</operator><name pos:start="695:68" pos:end="695:77">xvid_build</name></name><operator pos:start="695:78" pos:end="695:79">&gt;=</operator><literal type="number" pos:start="695:80" pos:end="695:80">0</literal></expr>)</condition><block pos:start="695:82" pos:end="701:9">{<block_content pos:start="697:13" pos:end="699:26"> <comment type="line" pos:start="695:84" pos:end="695:95">//xvid style</comment>

            <expr_stmt pos:start="697:13" pos:end="697:30"><expr pos:start="697:13" pos:end="697:29"><name pos:start="697:13" pos:end="697:27">startcode_found</name><operator pos:start="697:28" pos:end="697:28">=</operator><literal type="number" pos:start="697:29" pos:end="697:29">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="699:13" pos:end="699:26"><expr pos:start="699:13" pos:end="699:25"><name pos:start="699:13" pos:end="699:23">current_pos</name><operator pos:start="699:24" pos:end="699:24">=</operator><literal type="number" pos:start="699:25" pos:end="699:25">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="705:9" pos:end="723:9"><if pos:start="705:9" pos:end="723:9">if<condition pos:start="705:11" pos:end="705:27">(<expr pos:start="705:12" pos:end="705:26"><name pos:start="705:12" pos:end="705:26">startcode_found</name></expr>)</condition><block pos:start="705:28" pos:end="723:9">{<block_content pos:start="707:13" pos:end="721:61">

            <expr_stmt pos:start="707:13" pos:end="713:71"><expr pos:start="707:13" pos:end="713:70"><call pos:start="707:13" pos:end="713:70"><name pos:start="707:13" pos:end="707:26">av_fast_malloc</name><argument_list pos:start="707:27" pos:end="713:70">(

                <argument pos:start="709:17" pos:end="709:36"><expr pos:start="709:17" pos:end="709:36"><operator pos:start="709:17" pos:end="709:17">&amp;</operator><name pos:start="709:18" pos:end="709:36"><name pos:start="709:18" pos:end="709:18">s</name><operator pos:start="709:19" pos:end="709:20">-&gt;</operator><name pos:start="709:21" pos:end="709:36">bitstream_buffer</name></name></expr></argument>,

                <argument pos:start="711:17" pos:end="711:51"><expr pos:start="711:17" pos:end="711:51"><operator pos:start="711:17" pos:end="711:17">&amp;</operator><name pos:start="711:18" pos:end="711:51"><name pos:start="711:18" pos:end="711:18">s</name><operator pos:start="711:19" pos:end="711:20">-&gt;</operator><name pos:start="711:21" pos:end="711:51">allocated_bitstream_buffer_size</name></name></expr></argument>,

                <argument pos:start="713:17" pos:end="713:69"><expr pos:start="713:17" pos:end="713:69"><name pos:start="713:17" pos:end="713:24">buf_size</name> <operator pos:start="713:26" pos:end="713:26">-</operator> <name pos:start="713:28" pos:end="713:38">current_pos</name> <operator pos:start="713:40" pos:end="713:40">+</operator> <name pos:start="713:42" pos:end="713:69">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="715:13" pos:end="717:39"><if pos:start="715:13" pos:end="717:39">if <condition pos:start="715:16" pos:end="715:37">(<expr pos:start="715:17" pos:end="715:36"><operator pos:start="715:17" pos:end="715:17">!</operator><name pos:start="715:18" pos:end="715:36"><name pos:start="715:18" pos:end="715:18">s</name><operator pos:start="715:19" pos:end="715:20">-&gt;</operator><name pos:start="715:21" pos:end="715:36">bitstream_buffer</name></name></expr>)</condition><block type="pseudo" pos:start="717:17" pos:end="717:39"><block_content pos:start="717:17" pos:end="717:39">

                <return pos:start="717:17" pos:end="717:39">return <expr pos:start="717:24" pos:end="717:38"><call pos:start="717:24" pos:end="717:38"><name pos:start="717:24" pos:end="717:30">AVERROR</name><argument_list pos:start="717:31" pos:end="717:38">(<argument pos:start="717:32" pos:end="717:37"><expr pos:start="717:32" pos:end="717:37"><name pos:start="717:32" pos:end="717:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="719:13" pos:end="719:83"><expr pos:start="719:13" pos:end="719:82"><call pos:start="719:13" pos:end="719:82"><name pos:start="719:13" pos:end="719:18">memcpy</name><argument_list pos:start="719:19" pos:end="719:82">(<argument pos:start="719:20" pos:end="719:38"><expr pos:start="719:20" pos:end="719:38"><name pos:start="719:20" pos:end="719:38"><name pos:start="719:20" pos:end="719:20">s</name><operator pos:start="719:21" pos:end="719:22">-&gt;</operator><name pos:start="719:23" pos:end="719:38">bitstream_buffer</name></name></expr></argument>, <argument pos:start="719:41" pos:end="719:57"><expr pos:start="719:41" pos:end="719:57"><name pos:start="719:41" pos:end="719:43">buf</name> <operator pos:start="719:45" pos:end="719:45">+</operator> <name pos:start="719:47" pos:end="719:57">current_pos</name></expr></argument>, <argument pos:start="719:60" pos:end="719:81"><expr pos:start="719:60" pos:end="719:81"><name pos:start="719:60" pos:end="719:67">buf_size</name> <operator pos:start="719:69" pos:end="719:69">-</operator> <name pos:start="719:71" pos:end="719:81">current_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="721:13" pos:end="721:61"><expr pos:start="721:13" pos:end="721:60"><name pos:start="721:13" pos:end="721:36"><name pos:start="721:13" pos:end="721:13">s</name><operator pos:start="721:14" pos:end="721:15">-&gt;</operator><name pos:start="721:16" pos:end="721:36">bitstream_buffer_size</name></name><operator pos:start="721:37" pos:end="721:37">=</operator> <name pos:start="721:39" pos:end="721:46">buf_size</name> <operator pos:start="721:48" pos:end="721:48">-</operator> <name pos:start="721:50" pos:end="721:60">current_pos</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="729:1" pos:end="729:16"><name pos:start="729:1" pos:end="729:15">intrax8_decoded</name>:</label>

    <expr_stmt pos:start="731:5" pos:end="731:23"><expr pos:start="731:5" pos:end="731:22"><call pos:start="731:5" pos:end="731:22"><name pos:start="731:5" pos:end="731:19">ff_er_frame_end</name><argument_list pos:start="731:20" pos:end="731:22">(<argument pos:start="731:21" pos:end="731:21"><expr pos:start="731:21" pos:end="731:21"><name pos:start="731:21" pos:end="731:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="735:5" pos:end="741:5"><if pos:start="735:5" pos:end="741:5">if <condition pos:start="735:8" pos:end="735:23">(<expr pos:start="735:9" pos:end="735:22"><name pos:start="735:9" pos:end="735:22"><name pos:start="735:9" pos:end="735:13">avctx</name><operator pos:start="735:14" pos:end="735:15">-&gt;</operator><name pos:start="735:16" pos:end="735:22">hwaccel</name></name></expr>)</condition> <block pos:start="735:25" pos:end="741:5">{<block_content pos:start="737:9" pos:end="739:22">

        <if_stmt pos:start="737:9" pos:end="739:22"><if pos:start="737:9" pos:end="739:22">if <condition pos:start="737:12" pos:end="737:49">(<expr pos:start="737:13" pos:end="737:48"><call pos:start="737:13" pos:end="737:44"><name pos:start="737:13" pos:end="737:37"><name pos:start="737:13" pos:end="737:17">avctx</name><operator pos:start="737:18" pos:end="737:19">-&gt;</operator><name pos:start="737:20" pos:end="737:26">hwaccel</name><operator pos:start="737:27" pos:end="737:28">-&gt;</operator><name pos:start="737:29" pos:end="737:37">end_frame</name></name><argument_list pos:start="737:38" pos:end="737:44">(<argument pos:start="737:39" pos:end="737:43"><expr pos:start="737:39" pos:end="737:43"><name pos:start="737:39" pos:end="737:43">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="737:46" pos:end="737:46">&lt;</operator> <literal type="number" pos:start="737:48" pos:end="737:48">0</literal></expr>)</condition><block type="pseudo" pos:start="739:13" pos:end="739:22"><block_content pos:start="739:13" pos:end="739:22">

            <return pos:start="739:13" pos:end="739:22">return <expr pos:start="739:20" pos:end="739:21"><operator pos:start="739:20" pos:end="739:20">-</operator><literal type="number" pos:start="739:21" pos:end="739:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="745:5" pos:end="745:24"><expr pos:start="745:5" pos:end="745:23"><call pos:start="745:5" pos:end="745:23"><name pos:start="745:5" pos:end="745:20">ff_MPV_frame_end</name><argument_list pos:start="745:21" pos:end="745:23">(<argument pos:start="745:22" pos:end="745:22"><expr pos:start="745:22" pos:end="745:22"><name pos:start="745:22" pos:end="745:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="749:5" pos:end="749:82"><expr pos:start="749:5" pos:end="749:81"><call pos:start="749:5" pos:end="749:81"><name pos:start="749:5" pos:end="749:10">assert</name><argument_list pos:start="749:11" pos:end="749:81">(<argument pos:start="749:12" pos:end="749:80"><expr pos:start="749:12" pos:end="749:80"><name pos:start="749:12" pos:end="749:41"><name pos:start="749:12" pos:end="749:12">s</name><operator pos:start="749:13" pos:end="749:14">-&gt;</operator><name pos:start="749:15" pos:end="749:29">current_picture</name><operator pos:start="749:30" pos:end="749:30">.</operator><name pos:start="749:31" pos:end="749:31">f</name><operator pos:start="749:32" pos:end="749:32">.</operator><name pos:start="749:33" pos:end="749:41">pict_type</name></name> <operator pos:start="749:43" pos:end="749:44">==</operator> <name pos:start="749:46" pos:end="749:80"><name pos:start="749:46" pos:end="749:46">s</name><operator pos:start="749:47" pos:end="749:48">-&gt;</operator><name pos:start="749:49" pos:end="749:67">current_picture_ptr</name><operator pos:start="749:68" pos:end="749:69">-&gt;</operator><name pos:start="749:70" pos:end="749:70">f</name><operator pos:start="749:71" pos:end="749:71">.</operator><name pos:start="749:72" pos:end="749:80">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="751:5" pos:end="751:59"><expr pos:start="751:5" pos:end="751:58"><call pos:start="751:5" pos:end="751:58"><name pos:start="751:5" pos:end="751:10">assert</name><argument_list pos:start="751:11" pos:end="751:58">(<argument pos:start="751:12" pos:end="751:57"><expr pos:start="751:12" pos:end="751:57"><name pos:start="751:12" pos:end="751:41"><name pos:start="751:12" pos:end="751:12">s</name><operator pos:start="751:13" pos:end="751:14">-&gt;</operator><name pos:start="751:15" pos:end="751:29">current_picture</name><operator pos:start="751:30" pos:end="751:30">.</operator><name pos:start="751:31" pos:end="751:31">f</name><operator pos:start="751:32" pos:end="751:32">.</operator><name pos:start="751:33" pos:end="751:41">pict_type</name></name> <operator pos:start="751:43" pos:end="751:44">==</operator> <name pos:start="751:46" pos:end="751:57"><name pos:start="751:46" pos:end="751:46">s</name><operator pos:start="751:47" pos:end="751:48">-&gt;</operator><name pos:start="751:49" pos:end="751:57">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="753:5" pos:end="761:5"><if pos:start="753:5" pos:end="757:5">if <condition pos:start="753:8" pos:end="753:58">(<expr pos:start="753:9" pos:end="753:57"><name pos:start="753:9" pos:end="753:20"><name pos:start="753:9" pos:end="753:9">s</name><operator pos:start="753:10" pos:end="753:11">-&gt;</operator><name pos:start="753:12" pos:end="753:20">pict_type</name></name> <operator pos:start="753:22" pos:end="753:23">==</operator> <name pos:start="753:25" pos:end="753:41">AV_PICTURE_TYPE_B</name> <operator pos:start="753:43" pos:end="753:44">||</operator> <name pos:start="753:46" pos:end="753:57"><name pos:start="753:46" pos:end="753:46">s</name><operator pos:start="753:47" pos:end="753:48">-&gt;</operator><name pos:start="753:49" pos:end="753:57">low_delay</name></name></expr>)</condition> <block pos:start="753:60" pos:end="757:5">{<block_content pos:start="755:9" pos:end="755:42">

        <expr_stmt pos:start="755:9" pos:end="755:42"><expr pos:start="755:9" pos:end="755:41"><operator pos:start="755:9" pos:end="755:9">*</operator><name pos:start="755:10" pos:end="755:13">pict</name> <operator pos:start="755:15" pos:end="755:15">=</operator> <name pos:start="755:17" pos:end="755:41"><name pos:start="755:17" pos:end="755:17">s</name><operator pos:start="755:18" pos:end="755:19">-&gt;</operator><name pos:start="755:20" pos:end="755:38">current_picture_ptr</name><operator pos:start="755:39" pos:end="755:40">-&gt;</operator><name pos:start="755:41" pos:end="755:41">f</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="757:7" pos:end="761:5">else if <condition pos:start="757:15" pos:end="757:43">(<expr pos:start="757:16" pos:end="757:42"><name pos:start="757:16" pos:end="757:34"><name pos:start="757:16" pos:end="757:16">s</name><operator pos:start="757:17" pos:end="757:18">-&gt;</operator><name pos:start="757:19" pos:end="757:34">last_picture_ptr</name></name> <operator pos:start="757:36" pos:end="757:37">!=</operator> <name pos:start="757:39" pos:end="757:42">NULL</name></expr>)</condition> <block pos:start="757:45" pos:end="761:5">{<block_content pos:start="759:9" pos:end="759:39">

        <expr_stmt pos:start="759:9" pos:end="759:39"><expr pos:start="759:9" pos:end="759:38"><operator pos:start="759:9" pos:end="759:9">*</operator><name pos:start="759:10" pos:end="759:13">pict</name> <operator pos:start="759:15" pos:end="759:15">=</operator> <name pos:start="759:17" pos:end="759:38"><name pos:start="759:17" pos:end="759:17">s</name><operator pos:start="759:18" pos:end="759:19">-&gt;</operator><name pos:start="759:20" pos:end="759:35">last_picture_ptr</name><operator pos:start="759:36" pos:end="759:37">-&gt;</operator><name pos:start="759:38" pos:end="759:38">f</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="765:5" pos:end="776:0"><if pos:start="765:5" pos:end="776:0">if<condition pos:start="765:7" pos:end="765:43">(<expr pos:start="765:8" pos:end="765:42"><name pos:start="765:8" pos:end="765:26"><name pos:start="765:8" pos:end="765:8">s</name><operator pos:start="765:9" pos:end="765:10">-&gt;</operator><name pos:start="765:11" pos:end="765:26">last_picture_ptr</name></name> <operator pos:start="765:28" pos:end="765:29">||</operator> <name pos:start="765:31" pos:end="765:42"><name pos:start="765:31" pos:end="765:31">s</name><operator pos:start="765:32" pos:end="765:33">-&gt;</operator><name pos:start="765:34" pos:end="765:42">low_delay</name></name></expr>)</condition><block pos:start="765:44" pos:end="776:0">{<block_content pos:start="767:9" pos:end="769:37">

        <expr_stmt pos:start="767:9" pos:end="767:37"><expr pos:start="767:9" pos:end="767:36"><operator pos:start="767:9" pos:end="767:9">*</operator><name pos:start="767:10" pos:end="767:18">data_size</name> <operator pos:start="767:20" pos:end="767:20">=</operator> <sizeof pos:start="767:22" pos:end="767:36">sizeof<argument_list pos:start="767:28" pos:end="767:36">(<argument pos:start="767:29" pos:end="767:35"><expr pos:start="767:29" pos:end="767:35"><name pos:start="767:29" pos:end="767:35">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="769:9" pos:end="769:37"><expr pos:start="769:9" pos:end="769:36"><call pos:start="769:9" pos:end="769:36"><name pos:start="769:9" pos:end="769:27">ff_print_debug_info</name><argument_list pos:start="769:28" pos:end="769:36">(<argument pos:start="769:29" pos:end="769:29"><expr pos:start="769:29" pos:end="769:29"><name pos:start="769:29" pos:end="769:29">s</name></expr></argument>, <argument pos:start="769:32" pos:end="769:35"><expr pos:start="769:32" pos:end="769:35"><name pos:start="769:32" pos:end="769:35">pict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="775:1" pos:end="775:23">#<cpp:directive pos:start="775:2" pos:end="775:6">ifdef</cpp:directive> <name pos:start="775:8" pos:end="775:23">PRINT_FRAME_TIME</name></cpp:ifdef>

<expr_stmt pos:start="777:1" pos:end="780:0"><expr pos:start="777:1" pos:end="777:56"><call pos:start="777:1" pos:end="777:56"><name pos:start="777:1" pos:end="777:6">av_log</name><argument_list pos:start="777:7" pos:end="777:56">(<argument pos:start="777:8" pos:end="777:12"><expr pos:start="777:8" pos:end="777:12"><name pos:start="777:8" pos:end="777:12">avctx</name></expr></argument>, <argument pos:start="777:15" pos:end="777:26"><expr pos:start="777:15" pos:end="777:26"><name pos:start="777:15" pos:end="777:26">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="777:29" pos:end="777:41"><expr pos:start="777:29" pos:end="777:41"><literal type="string" pos:start="777:29" pos:end="777:31">"%"</literal><name pos:start="777:32" pos:end="777:37">PRId64</name><literal type="string" pos:start="777:38" pos:end="777:41">"\n"</literal></expr></argument>, <argument pos:start="777:44" pos:end="777:55"><expr pos:start="777:44" pos:end="777:55"><call pos:start="777:44" pos:end="777:50"><name pos:start="777:44" pos:end="777:48">rdtsc</name><argument_list pos:start="777:49" pos:end="777:50">()</argument_list></call><operator pos:start="777:51" pos:end="777:51">-</operator><name pos:start="777:52" pos:end="777:55">time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="779:1" pos:end="779:6">#<cpp:directive pos:start="779:2" pos:end="779:6">endif</cpp:directive></cpp:endif>



    <return pos:start="783:5" pos:end="783:97">return <expr pos:start="783:12" pos:end="783:96"><ternary pos:start="783:12" pos:end="783:96"><condition pos:start="783:12" pos:end="783:61"><expr pos:start="783:12" pos:end="783:60"><operator pos:start="783:12" pos:end="783:12">(</operator><name pos:start="783:13" pos:end="783:15">ret</name> <operator pos:start="783:17" pos:end="783:18">&amp;&amp;</operator> <operator pos:start="783:20" pos:end="783:20">(</operator><name pos:start="783:21" pos:end="783:42"><name pos:start="783:21" pos:end="783:25">avctx</name><operator pos:start="783:26" pos:end="783:27">-&gt;</operator><name pos:start="783:28" pos:end="783:42">err_recognition</name></name> <operator pos:start="783:44" pos:end="783:44">&amp;</operator> <name pos:start="783:46" pos:end="783:58">AV_EF_EXPLODE</name><operator pos:start="783:59" pos:end="783:59">)</operator><operator pos:start="783:60" pos:end="783:60">)</operator></expr>?</condition><then pos:start="783:62" pos:end="783:64"><expr pos:start="783:62" pos:end="783:64"><name pos:start="783:62" pos:end="783:64">ret</name></expr></then><else pos:start="783:65" pos:end="783:96">:<expr pos:start="783:66" pos:end="783:96"><call pos:start="783:66" pos:end="783:96"><name pos:start="783:66" pos:end="783:83">get_consumed_bytes</name><argument_list pos:start="783:84" pos:end="783:96">(<argument pos:start="783:85" pos:end="783:85"><expr pos:start="783:85" pos:end="783:85"><name pos:start="783:85" pos:end="783:85">s</name></expr></argument>, <argument pos:start="783:88" pos:end="783:95"><expr pos:start="783:88" pos:end="783:95"><name pos:start="783:88" pos:end="783:95">buf_size</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
