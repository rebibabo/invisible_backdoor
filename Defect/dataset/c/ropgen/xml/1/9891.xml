<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9891.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:37"><name pos:start="1:1" pos:end="1:14">aio_write_done</name><argument_list pos:start="1:15" pos:end="1:37">(<argument pos:start="1:16" pos:end="1:27">void *opaque</argument>, <argument pos:start="1:30" pos:end="1:36">int ret</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:9" pos:end="47:18">

	<decl_stmt pos:start="5:9" pos:end="5:37"><decl pos:start="5:9" pos:end="5:36"><type pos:start="5:9" pos:end="5:24"><name pos:start="5:9" pos:end="5:22"><name pos:start="5:9" pos:end="5:14">struct</name> <name pos:start="5:16" pos:end="5:22">aio_ctx</name></name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:27">ctx</name> <init pos:start="5:29" pos:end="5:36">= <expr pos:start="5:31" pos:end="5:36"><name pos:start="5:31" pos:end="5:36">opaque</name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:26"><decl pos:start="7:9" pos:end="7:25"><type pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:14">struct</name> <name pos:start="7:16" pos:end="7:22">timeval</name></name></type> <name pos:start="7:24" pos:end="7:25">t2</name></decl>;</decl_stmt>



	<expr_stmt pos:start="11:9" pos:end="11:32"><expr pos:start="11:9" pos:end="11:31"><call pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:20">gettimeofday</name><argument_list pos:start="11:21" pos:end="11:31">(<argument pos:start="11:22" pos:end="11:24"><expr pos:start="11:22" pos:end="11:24"><operator pos:start="11:22" pos:end="11:22">&amp;</operator><name pos:start="11:23" pos:end="11:24">t2</name></expr></argument>, <argument pos:start="11:27" pos:end="11:30"><expr pos:start="11:27" pos:end="11:30"><name pos:start="11:27" pos:end="11:30">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





	<if_stmt pos:start="17:9" pos:end="23:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="17:20">(<expr pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:15">ret</name> <operator pos:start="17:17" pos:end="17:17">&lt;</operator> <literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr>)</condition> <block pos:start="17:22" pos:end="23:9">{<block_content pos:start="19:17" pos:end="21:23">

		<expr_stmt pos:start="19:17" pos:end="19:65"><expr pos:start="19:17" pos:end="19:64"><call pos:start="19:17" pos:end="19:64"><name pos:start="19:17" pos:end="19:22">printf</name><argument_list pos:start="19:23" pos:end="19:64">(<argument pos:start="19:24" pos:end="19:47"><expr pos:start="19:24" pos:end="19:47"><literal type="string" pos:start="19:24" pos:end="19:47">"aio_write failed: %s\n"</literal></expr></argument>, <argument pos:start="19:50" pos:end="19:63"><expr pos:start="19:50" pos:end="19:63"><call pos:start="19:50" pos:end="19:63"><name pos:start="19:50" pos:end="19:57">strerror</name><argument_list pos:start="19:58" pos:end="19:63">(<argument pos:start="19:59" pos:end="19:62"><expr pos:start="19:59" pos:end="19:62"><operator pos:start="19:59" pos:end="19:59">-</operator><name pos:start="19:60" pos:end="19:62">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="21:17" pos:end="21:23">return;</return>

	</block_content>}</block></if></if_stmt>



	<if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:23">(<expr pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:15">ctx</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:22">qflag</name></name></expr>)</condition> <block pos:start="27:25" pos:end="31:9">{<block_content pos:start="29:17" pos:end="29:23">

		<return pos:start="29:17" pos:end="29:23">return;</return>

	</block_content>}</block></if></if_stmt>



	<comment type="block" pos:start="35:9" pos:end="35:64">/* Finally, report back -- -C gives a parsable format */</comment>

	<expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:10">t2</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <call pos:start="37:14" pos:end="37:30"><name pos:start="37:14" pos:end="37:17">tsub</name><argument_list pos:start="37:18" pos:end="37:30">(<argument pos:start="37:19" pos:end="37:20"><expr pos:start="37:19" pos:end="37:20"><name pos:start="37:19" pos:end="37:20">t2</name></expr></argument>, <argument pos:start="37:23" pos:end="37:29"><expr pos:start="37:23" pos:end="37:29"><name pos:start="37:23" pos:end="37:29"><name pos:start="37:23" pos:end="37:25">ctx</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:29">t1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="39:9" pos:end="41:52"><expr pos:start="39:9" pos:end="41:51"><call pos:start="39:9" pos:end="41:51"><name pos:start="39:9" pos:end="39:20">print_report</name><argument_list pos:start="39:21" pos:end="41:51">(<argument pos:start="39:22" pos:end="39:28"><expr pos:start="39:22" pos:end="39:28"><literal type="string" pos:start="39:22" pos:end="39:28">"wrote"</literal></expr></argument>, <argument pos:start="39:31" pos:end="39:33"><expr pos:start="39:31" pos:end="39:33"><operator pos:start="39:31" pos:end="39:31">&amp;</operator><name pos:start="39:32" pos:end="39:33">t2</name></expr></argument>, <argument pos:start="39:36" pos:end="39:46"><expr pos:start="39:36" pos:end="39:46"><name pos:start="39:36" pos:end="39:46"><name pos:start="39:36" pos:end="39:38">ctx</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:46">offset</name></name></expr></argument>, <argument pos:start="39:49" pos:end="39:62"><expr pos:start="39:49" pos:end="39:62"><name pos:start="39:49" pos:end="39:62"><name pos:start="39:49" pos:end="39:51">ctx</name><operator pos:start="39:52" pos:end="39:53">-&gt;</operator><name pos:start="39:54" pos:end="39:57">qiov</name><operator pos:start="39:58" pos:end="39:58">.</operator><name pos:start="39:59" pos:end="39:62">size</name></name></expr></argument>,

		     <argument pos:start="41:22" pos:end="41:35"><expr pos:start="41:22" pos:end="41:35"><name pos:start="41:22" pos:end="41:35"><name pos:start="41:22" pos:end="41:24">ctx</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:30">qiov</name><operator pos:start="41:31" pos:end="41:31">.</operator><name pos:start="41:32" pos:end="41:35">size</name></name></expr></argument>, <argument pos:start="41:38" pos:end="41:38"><expr pos:start="41:38" pos:end="41:38"><literal type="number" pos:start="41:38" pos:end="41:38">1</literal></expr></argument>, <argument pos:start="41:41" pos:end="41:50"><expr pos:start="41:41" pos:end="41:50"><name pos:start="41:41" pos:end="41:50"><name pos:start="41:41" pos:end="41:43">ctx</name><operator pos:start="41:44" pos:end="41:45">-&gt;</operator><name pos:start="41:46" pos:end="41:50">Cflag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><call pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:20">qemu_io_free</name><argument_list pos:start="45:21" pos:end="45:30">(<argument pos:start="45:22" pos:end="45:29"><expr pos:start="45:22" pos:end="45:29"><name pos:start="45:22" pos:end="45:29"><name pos:start="45:22" pos:end="45:24">ctx</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:29">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="47:9" pos:end="47:18"><expr pos:start="47:9" pos:end="47:17"><call pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:12">free</name><argument_list pos:start="47:13" pos:end="47:17">(<argument pos:start="47:14" pos:end="47:16"><expr pos:start="47:14" pos:end="47:16"><name pos:start="47:14" pos:end="47:16">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
