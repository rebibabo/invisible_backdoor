<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14343.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">scsi_disk_emulate_read_toc</name><parameter_list pos:start="1:38" pos:end="1:72">(<parameter pos:start="1:39" pos:end="1:54"><decl pos:start="1:39" pos:end="1:54"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:49">SCSIRequest</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">req</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:71"><decl pos:start="1:57" pos:end="1:71"><type pos:start="1:57" pos:end="1:71"><name pos:start="1:57" pos:end="1:63">uint8_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:71">outbuf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:18">

    <decl_stmt pos:start="5:5" pos:end="5:64"><decl pos:start="5:5" pos:end="5:63"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">SCSIDiskState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:63">= <expr pos:start="5:24" pos:end="5:63"><call pos:start="5:24" pos:end="5:63"><name pos:start="5:24" pos:end="5:32">DO_UPCAST</name><argument_list pos:start="5:33" pos:end="5:63">(<argument pos:start="5:34" pos:end="5:46"><expr pos:start="5:34" pos:end="5:46"><name pos:start="5:34" pos:end="5:46">SCSIDiskState</name></expr></argument>, <argument pos:start="5:49" pos:end="5:52"><expr pos:start="5:49" pos:end="5:52"><name pos:start="5:49" pos:end="5:52">qdev</name></expr></argument>, <argument pos:start="5:55" pos:end="5:62"><expr pos:start="5:55" pos:end="5:62"><name pos:start="5:55" pos:end="5:62"><name pos:start="5:55" pos:end="5:57">req</name><operator pos:start="5:58" pos:end="5:59">-&gt;</operator><name pos:start="5:60" pos:end="5:62">dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">start_track</name></decl>, <decl pos:start="7:22" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:27">format</name></decl>, <decl pos:start="7:30" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:30" pos:end="7:32">msf</name></decl>, <decl pos:start="7:35" pos:end="7:40"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:35" pos:end="7:40">toclen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:23">nb_sectors</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:30"><expr pos:start="13:5" pos:end="13:29"><name pos:start="13:5" pos:end="13:7">msf</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <name pos:start="13:11" pos:end="13:25"><name pos:start="13:11" pos:end="13:13">req</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:18">cmd</name><operator pos:start="13:19" pos:end="13:19">.</operator><name pos:start="13:20" pos:end="13:22">buf</name><index pos:start="13:23" pos:end="13:25">[<expr pos:start="13:24" pos:end="13:24"><literal type="number" pos:start="13:24" pos:end="13:24">1</literal></expr>]</index></name> <operator pos:start="13:27" pos:end="13:27">&amp;</operator> <literal type="number" pos:start="13:29" pos:end="13:29">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:10">format</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:28"><name pos:start="15:14" pos:end="15:16">req</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:21">cmd</name><operator pos:start="15:22" pos:end="15:22">.</operator><name pos:start="15:23" pos:end="15:25">buf</name><index pos:start="15:26" pos:end="15:28">[<expr pos:start="15:27" pos:end="15:27"><literal type="number" pos:start="15:27" pos:end="15:27">2</literal></expr>]</index></name> <operator pos:start="15:30" pos:end="15:30">&amp;</operator> <literal type="number" pos:start="15:32" pos:end="15:34">0xf</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:15">start_track</name> <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:33"><name pos:start="17:19" pos:end="17:21">req</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:26">cmd</name><operator pos:start="17:27" pos:end="17:27">.</operator><name pos:start="17:28" pos:end="17:30">buf</name><index pos:start="17:31" pos:end="17:33">[<expr pos:start="17:32" pos:end="17:32"><literal type="number" pos:start="17:32" pos:end="17:32">6</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:52"><expr pos:start="19:5" pos:end="19:51"><call pos:start="19:5" pos:end="19:51"><name pos:start="19:5" pos:end="19:21">bdrv_get_geometry</name><argument_list pos:start="19:22" pos:end="19:51">(<argument pos:start="19:23" pos:end="19:37"><expr pos:start="19:23" pos:end="19:37"><name pos:start="19:23" pos:end="19:37"><name pos:start="19:23" pos:end="19:23">s</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:29">qdev</name><operator pos:start="19:30" pos:end="19:30">.</operator><name pos:start="19:31" pos:end="19:34">conf</name><operator pos:start="19:35" pos:end="19:35">.</operator><name pos:start="19:36" pos:end="19:37">bs</name></name></expr></argument>, <argument pos:start="19:40" pos:end="19:50"><expr pos:start="19:40" pos:end="19:50"><operator pos:start="19:40" pos:end="19:40">&amp;</operator><name pos:start="19:41" pos:end="19:50">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:85"><expr pos:start="21:5" pos:end="21:84"><call pos:start="21:5" pos:end="21:84"><name pos:start="21:5" pos:end="21:11">DPRINTF</name><argument_list pos:start="21:12" pos:end="21:84">(<argument pos:start="21:13" pos:end="21:52"><expr pos:start="21:13" pos:end="21:52"><literal type="string" pos:start="21:13" pos:end="21:52">"Read TOC (track %d format %d msf %d)\n"</literal></expr></argument>, <argument pos:start="21:55" pos:end="21:65"><expr pos:start="21:55" pos:end="21:65"><name pos:start="21:55" pos:end="21:65">start_track</name></expr></argument>, <argument pos:start="21:68" pos:end="21:73"><expr pos:start="21:68" pos:end="21:73"><name pos:start="21:68" pos:end="21:73">format</name></expr></argument>, <argument pos:start="21:76" pos:end="21:83"><expr pos:start="21:76" pos:end="21:83"><name pos:start="21:76" pos:end="21:78">msf</name> <operator pos:start="21:80" pos:end="21:81">&gt;&gt;</operator> <literal type="number" pos:start="21:83" pos:end="21:83">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:14">nb_sectors</name> <operator pos:start="23:16" pos:end="23:17">/=</operator> <name pos:start="23:19" pos:end="23:35"><name pos:start="23:19" pos:end="23:19">s</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:25">qdev</name><operator pos:start="23:26" pos:end="23:26">.</operator><name pos:start="23:27" pos:end="23:35">blocksize</name></name> <operator pos:start="23:37" pos:end="23:37">/</operator> <literal type="number" pos:start="23:39" pos:end="23:41">512</literal></expr>;</expr_stmt>

    <switch pos:start="25:5" pos:end="59:5">switch <condition pos:start="25:12" pos:end="25:19">(<expr pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:18">format</name></expr>)</condition> <block pos:start="25:21" pos:end="59:5">{<block_content pos:start="27:5" pos:end="57:18">

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">0</literal></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:70"><expr pos:start="29:9" pos:end="29:69"><name pos:start="29:9" pos:end="29:14">toclen</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:69"><name pos:start="29:18" pos:end="29:31">cdrom_read_toc</name><argument_list pos:start="29:32" pos:end="29:69">(<argument pos:start="29:33" pos:end="29:42"><expr pos:start="29:33" pos:end="29:42"><name pos:start="29:33" pos:end="29:42">nb_sectors</name></expr></argument>, <argument pos:start="29:45" pos:end="29:50"><expr pos:start="29:45" pos:end="29:50"><name pos:start="29:45" pos:end="29:50">outbuf</name></expr></argument>, <argument pos:start="29:53" pos:end="29:55"><expr pos:start="29:53" pos:end="29:55"><name pos:start="29:53" pos:end="29:55">msf</name></expr></argument>, <argument pos:start="29:58" pos:end="29:68"><expr pos:start="29:58" pos:end="29:68"><name pos:start="29:58" pos:end="29:68">start_track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:11">case <expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">1</literal></expr>:</case>

        <comment type="block" pos:start="35:9" pos:end="35:59">/* multi session : only a single session defined */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:20"><expr pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:14">toclen</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:19">12</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:30"><expr pos:start="39:9" pos:end="39:29"><call pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:14">memset</name><argument_list pos:start="39:15" pos:end="39:29">(<argument pos:start="39:16" pos:end="39:21"><expr pos:start="39:16" pos:end="39:21"><name pos:start="39:16" pos:end="39:21">outbuf</name></expr></argument>, <argument pos:start="39:24" pos:end="39:24"><expr pos:start="39:24" pos:end="39:24"><literal type="number" pos:start="39:24" pos:end="39:24">0</literal></expr></argument>, <argument pos:start="39:27" pos:end="39:28"><expr pos:start="39:27" pos:end="39:28"><literal type="number" pos:start="39:27" pos:end="39:28">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:25"><expr pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:14">outbuf</name><index pos:start="41:15" pos:end="41:17">[<expr pos:start="41:16" pos:end="41:16"><literal type="number" pos:start="41:16" pos:end="41:16">1</literal></expr>]</index></name> <operator pos:start="41:19" pos:end="41:19">=</operator> <literal type="number" pos:start="41:21" pos:end="41:24">0x0a</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:25"><expr pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:14">outbuf</name><index pos:start="43:15" pos:end="43:17">[<expr pos:start="43:16" pos:end="43:16"><literal type="number" pos:start="43:16" pos:end="43:16">2</literal></expr>]</index></name> <operator pos:start="43:19" pos:end="43:19">=</operator> <literal type="number" pos:start="43:21" pos:end="43:24">0x01</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:25"><expr pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:14">outbuf</name><index pos:start="45:15" pos:end="45:17">[<expr pos:start="45:16" pos:end="45:16"><literal type="number" pos:start="45:16" pos:end="45:16">3</literal></expr>]</index></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <literal type="number" pos:start="45:21" pos:end="45:24">0x01</literal></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:11">case <expr pos:start="49:10" pos:end="49:10"><literal type="number" pos:start="49:10" pos:end="49:10">2</literal></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:74"><expr pos:start="51:9" pos:end="51:73"><name pos:start="51:9" pos:end="51:14">toclen</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <call pos:start="51:18" pos:end="51:73"><name pos:start="51:18" pos:end="51:35">cdrom_read_toc_raw</name><argument_list pos:start="51:36" pos:end="51:73">(<argument pos:start="51:37" pos:end="51:46"><expr pos:start="51:37" pos:end="51:46"><name pos:start="51:37" pos:end="51:46">nb_sectors</name></expr></argument>, <argument pos:start="51:49" pos:end="51:54"><expr pos:start="51:49" pos:end="51:54"><name pos:start="51:49" pos:end="51:54">outbuf</name></expr></argument>, <argument pos:start="51:57" pos:end="51:59"><expr pos:start="51:57" pos:end="51:59"><name pos:start="51:57" pos:end="51:59">msf</name></expr></argument>, <argument pos:start="51:62" pos:end="51:72"><expr pos:start="51:62" pos:end="51:72"><name pos:start="51:62" pos:end="51:72">start_track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <default pos:start="55:5" pos:end="55:12">default:</default>

        <return pos:start="57:9" pos:end="57:18">return <expr pos:start="57:16" pos:end="57:17"><operator pos:start="57:16" pos:end="57:16">-</operator><literal type="number" pos:start="57:17" pos:end="57:17">1</literal></expr>;</return>

    </block_content>}</block></switch>

    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:31">(<expr pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:14">toclen</name> <operator pos:start="61:16" pos:end="61:16">&gt;</operator> <name pos:start="61:18" pos:end="61:30"><name pos:start="61:18" pos:end="61:20">req</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:25">cmd</name><operator pos:start="61:26" pos:end="61:26">.</operator><name pos:start="61:27" pos:end="61:30">xfer</name></name></expr>)</condition> <block pos:start="61:33" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:31">

        <expr_stmt pos:start="63:9" pos:end="63:31"><expr pos:start="63:9" pos:end="63:30"><name pos:start="63:9" pos:end="63:14">toclen</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <name pos:start="63:18" pos:end="63:30"><name pos:start="63:18" pos:end="63:20">req</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:25">cmd</name><operator pos:start="63:26" pos:end="63:26">.</operator><name pos:start="63:27" pos:end="63:30">xfer</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="67:5" pos:end="67:18">return <expr pos:start="67:12" pos:end="67:17"><name pos:start="67:12" pos:end="67:17">toclen</name></expr>;</return>

</block_content>}</block></function>
</unit>
