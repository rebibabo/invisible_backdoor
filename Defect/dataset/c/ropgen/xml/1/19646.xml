<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19646.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">wv_get_value</name><parameter_list pos:start="1:24" pos:end="1:92">(<parameter pos:start="1:25" pos:end="1:48"><decl pos:start="1:25" pos:end="1:48"><type pos:start="1:25" pos:end="1:48"><name pos:start="1:25" pos:end="1:43">WavpackFrameContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">ctx</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:67"><decl pos:start="1:51" pos:end="1:67"><type pos:start="1:51" pos:end="1:67"><name pos:start="1:51" pos:end="1:63">GetBitContext</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:67">gb</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:80"><decl pos:start="1:70" pos:end="1:80"><type pos:start="1:70" pos:end="1:80"><name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:80">channel</name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:91"><decl pos:start="1:83" pos:end="1:91"><type pos:start="1:83" pos:end="1:91"><name pos:start="1:83" pos:end="1:85">int</name> <modifier pos:start="1:87" pos:end="1:87">*</modifier></type><name pos:start="1:88" pos:end="1:91">last</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="203:1">{<block_content pos:start="5:5" pos:end="201:29">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">t</name></decl>, <decl pos:start="5:12" pos:end="5:13"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:13">t2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">sign</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:18">base</name></decl>, <decl pos:start="7:21" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:23">add</name></decl>, <decl pos:start="7:26" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:26" pos:end="7:28">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">WvChannel</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:16">c</name> <init pos:start="9:18" pos:end="9:36">= <expr pos:start="9:20" pos:end="9:36"><operator pos:start="9:20" pos:end="9:20">&amp;</operator><name pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:23">ctx</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">ch</name><index pos:start="9:28" pos:end="9:36">[<expr pos:start="9:29" pos:end="9:35"><name pos:start="9:29" pos:end="9:35">channel</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:14"><expr pos:start="13:5" pos:end="13:13"><operator pos:start="13:5" pos:end="13:5">*</operator><name pos:start="13:6" pos:end="13:9">last</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <literal type="number" pos:start="13:13" pos:end="13:13">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="53:5"><if pos:start="17:5" pos:end="53:5">if<condition pos:start="17:7" pos:end="17:93">(<expr pos:start="17:8" pos:end="17:92"><operator pos:start="17:8" pos:end="17:8">(</operator><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:11">ctx</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:15">ch</name><index pos:start="17:16" pos:end="17:18">[<expr pos:start="17:17" pos:end="17:17"><literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr>]</index></name><operator pos:start="17:19" pos:end="17:19">.</operator><name pos:start="17:20" pos:end="17:28"><name pos:start="17:20" pos:end="17:25">median</name><index pos:start="17:26" pos:end="17:28">[<expr pos:start="17:27" pos:end="17:27"><literal type="number" pos:start="17:27" pos:end="17:27">0</literal></expr>]</index></name> <operator pos:start="17:30" pos:end="17:30">&lt;</operator> <literal type="number" pos:start="17:32" pos:end="17:33">2U</literal><operator pos:start="17:34" pos:end="17:34">)</operator> <operator pos:start="17:36" pos:end="17:37">&amp;&amp;</operator> <operator pos:start="17:39" pos:end="17:39">(</operator><name pos:start="17:40" pos:end="17:49"><name pos:start="17:40" pos:end="17:42">ctx</name><operator pos:start="17:43" pos:end="17:44">-&gt;</operator><name pos:start="17:45" pos:end="17:46">ch</name><index pos:start="17:47" pos:end="17:49">[<expr pos:start="17:48" pos:end="17:48"><literal type="number" pos:start="17:48" pos:end="17:48">1</literal></expr>]</index></name><operator pos:start="17:50" pos:end="17:50">.</operator><name pos:start="17:51" pos:end="17:59"><name pos:start="17:51" pos:end="17:56">median</name><index pos:start="17:57" pos:end="17:59">[<expr pos:start="17:58" pos:end="17:58"><literal type="number" pos:start="17:58" pos:end="17:58">0</literal></expr>]</index></name> <operator pos:start="17:61" pos:end="17:61">&lt;</operator> <literal type="number" pos:start="17:63" pos:end="17:64">2U</literal><operator pos:start="17:65" pos:end="17:65">)</operator> <operator pos:start="17:67" pos:end="17:68">&amp;&amp;</operator> <operator pos:start="17:70" pos:end="17:70">!</operator><name pos:start="17:71" pos:end="17:79"><name pos:start="17:71" pos:end="17:73">ctx</name><operator pos:start="17:74" pos:end="17:75">-&gt;</operator><name pos:start="17:76" pos:end="17:79">zero</name></name> <operator pos:start="17:81" pos:end="17:82">&amp;&amp;</operator> <operator pos:start="17:84" pos:end="17:84">!</operator><name pos:start="17:85" pos:end="17:92"><name pos:start="17:85" pos:end="17:87">ctx</name><operator pos:start="17:88" pos:end="17:89">-&gt;</operator><name pos:start="17:90" pos:end="17:92">one</name></name></expr>)</condition><block pos:start="17:94" pos:end="53:5">{<block_content pos:start="19:9" pos:end="51:9">

        <if_stmt pos:start="19:9" pos:end="51:9"><if pos:start="19:9" pos:end="31:9">if<condition pos:start="19:11" pos:end="19:23">(<expr pos:start="19:12" pos:end="19:22"><name pos:start="19:12" pos:end="19:22"><name pos:start="19:12" pos:end="19:14">ctx</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:22">zeroes</name></name></expr>)</condition><block pos:start="19:24" pos:end="31:9">{<block_content pos:start="21:13" pos:end="29:13">

            <expr_stmt pos:start="21:13" pos:end="21:26"><expr pos:start="21:13" pos:end="21:25"><name pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:15">ctx</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:23">zeroes</name></name><operator pos:start="21:24" pos:end="21:25">--</operator></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="29:13"><if pos:start="23:13" pos:end="29:13">if<condition pos:start="23:15" pos:end="23:27">(<expr pos:start="23:16" pos:end="23:26"><name pos:start="23:16" pos:end="23:26"><name pos:start="23:16" pos:end="23:18">ctx</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:26">zeroes</name></name></expr>)</condition><block pos:start="23:28" pos:end="29:13">{<block_content pos:start="25:17" pos:end="27:25">

                <expr_stmt pos:start="25:17" pos:end="25:60"><expr pos:start="25:17" pos:end="25:59"><name pos:start="25:17" pos:end="25:29"><name pos:start="25:17" pos:end="25:17">c</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:29">slow_level</name></name> <operator pos:start="25:31" pos:end="25:32">-=</operator> <call pos:start="25:34" pos:end="25:59"><name pos:start="25:34" pos:end="25:44">LEVEL_DECAY</name><argument_list pos:start="25:45" pos:end="25:59">(<argument pos:start="25:46" pos:end="25:58"><expr pos:start="25:46" pos:end="25:58"><name pos:start="25:46" pos:end="25:58"><name pos:start="25:46" pos:end="25:46">c</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:58">slow_level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="27:17" pos:end="27:25">return <expr pos:start="27:24" pos:end="27:24"><literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if><else pos:start="31:10" pos:end="51:9">else<block pos:start="31:14" pos:end="51:9">{<block_content pos:start="33:13" pos:end="49:13">

            <expr_stmt pos:start="33:13" pos:end="33:35"><expr pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:13">t</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <call pos:start="33:17" pos:end="33:34"><name pos:start="33:17" pos:end="33:30">get_unary_0_33</name><argument_list pos:start="33:31" pos:end="33:34">(<argument pos:start="33:32" pos:end="33:33"><expr pos:start="33:32" pos:end="33:33"><name pos:start="33:32" pos:end="33:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="35:62"><if pos:start="35:13" pos:end="35:62">if<condition pos:start="35:15" pos:end="35:22">(<expr pos:start="35:16" pos:end="35:21"><name pos:start="35:16" pos:end="35:16">t</name> <operator pos:start="35:18" pos:end="35:19">&gt;=</operator> <literal type="number" pos:start="35:21" pos:end="35:21">2</literal></expr>)</condition><block type="pseudo" pos:start="35:24" pos:end="35:62"><block_content pos:start="35:24" pos:end="35:62"> <expr_stmt pos:start="35:24" pos:end="35:62"><expr pos:start="35:24" pos:end="35:61"><name pos:start="35:24" pos:end="35:24">t</name> <operator pos:start="35:26" pos:end="35:26">=</operator> <call pos:start="35:28" pos:end="35:46"><name pos:start="35:28" pos:end="35:35">get_bits</name><argument_list pos:start="35:36" pos:end="35:46">(<argument pos:start="35:37" pos:end="35:38"><expr pos:start="35:37" pos:end="35:38"><name pos:start="35:37" pos:end="35:38">gb</name></expr></argument>, <argument pos:start="35:41" pos:end="35:45"><expr pos:start="35:41" pos:end="35:45"><name pos:start="35:41" pos:end="35:41">t</name> <operator pos:start="35:43" pos:end="35:43">-</operator> <literal type="number" pos:start="35:45" pos:end="35:45">1</literal></expr></argument>)</argument_list></call> <operator pos:start="35:48" pos:end="35:48">|</operator> <operator pos:start="35:50" pos:end="35:50">(</operator><literal type="number" pos:start="35:51" pos:end="35:51">1</literal> <operator pos:start="35:53" pos:end="35:54">&lt;&lt;</operator> <operator pos:start="35:56" pos:end="35:56">(</operator><name pos:start="35:57" pos:end="35:57">t</name><operator pos:start="35:58" pos:end="35:58">-</operator><literal type="number" pos:start="35:59" pos:end="35:59">1</literal><operator pos:start="35:60" pos:end="35:60">)</operator><operator pos:start="35:61" pos:end="35:61">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:28"><expr pos:start="37:13" pos:end="37:27"><name pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:15">ctx</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:23">zeroes</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <name pos:start="37:27" pos:end="37:27">t</name></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="49:13"><if pos:start="39:13" pos:end="49:13">if<condition pos:start="39:15" pos:end="39:27">(<expr pos:start="39:16" pos:end="39:26"><name pos:start="39:16" pos:end="39:26"><name pos:start="39:16" pos:end="39:18">ctx</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:26">zeroes</name></name></expr>)</condition><block pos:start="39:28" pos:end="49:13">{<block_content pos:start="41:17" pos:end="47:25">

                <expr_stmt pos:start="41:17" pos:end="41:72"><expr pos:start="41:17" pos:end="41:71"><call pos:start="41:17" pos:end="41:71"><name pos:start="41:17" pos:end="41:22">memset</name><argument_list pos:start="41:23" pos:end="41:71">(<argument pos:start="41:24" pos:end="41:40"><expr pos:start="41:24" pos:end="41:40"><name pos:start="41:24" pos:end="41:33"><name pos:start="41:24" pos:end="41:26">ctx</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:30">ch</name><index pos:start="41:31" pos:end="41:33">[<expr pos:start="41:32" pos:end="41:32"><literal type="number" pos:start="41:32" pos:end="41:32">0</literal></expr>]</index></name><operator pos:start="41:34" pos:end="41:34">.</operator><name pos:start="41:35" pos:end="41:40">median</name></expr></argument>, <argument pos:start="41:43" pos:end="41:43"><expr pos:start="41:43" pos:end="41:43"><literal type="number" pos:start="41:43" pos:end="41:43">0</literal></expr></argument>, <argument pos:start="41:46" pos:end="41:70"><expr pos:start="41:46" pos:end="41:70"><sizeof pos:start="41:46" pos:end="41:70">sizeof<argument_list pos:start="41:52" pos:end="41:70">(<argument pos:start="41:53" pos:end="41:69"><expr pos:start="41:53" pos:end="41:69"><name pos:start="41:53" pos:end="41:62"><name pos:start="41:53" pos:end="41:55">ctx</name><operator pos:start="41:56" pos:end="41:57">-&gt;</operator><name pos:start="41:58" pos:end="41:59">ch</name><index pos:start="41:60" pos:end="41:62">[<expr pos:start="41:61" pos:end="41:61"><literal type="number" pos:start="41:61" pos:end="41:61">0</literal></expr>]</index></name><operator pos:start="41:63" pos:end="41:63">.</operator><name pos:start="41:64" pos:end="41:69">median</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:72"><expr pos:start="43:17" pos:end="43:71"><call pos:start="43:17" pos:end="43:71"><name pos:start="43:17" pos:end="43:22">memset</name><argument_list pos:start="43:23" pos:end="43:71">(<argument pos:start="43:24" pos:end="43:40"><expr pos:start="43:24" pos:end="43:40"><name pos:start="43:24" pos:end="43:33"><name pos:start="43:24" pos:end="43:26">ctx</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:30">ch</name><index pos:start="43:31" pos:end="43:33">[<expr pos:start="43:32" pos:end="43:32"><literal type="number" pos:start="43:32" pos:end="43:32">1</literal></expr>]</index></name><operator pos:start="43:34" pos:end="43:34">.</operator><name pos:start="43:35" pos:end="43:40">median</name></expr></argument>, <argument pos:start="43:43" pos:end="43:43"><expr pos:start="43:43" pos:end="43:43"><literal type="number" pos:start="43:43" pos:end="43:43">0</literal></expr></argument>, <argument pos:start="43:46" pos:end="43:70"><expr pos:start="43:46" pos:end="43:70"><sizeof pos:start="43:46" pos:end="43:70">sizeof<argument_list pos:start="43:52" pos:end="43:70">(<argument pos:start="43:53" pos:end="43:69"><expr pos:start="43:53" pos:end="43:69"><name pos:start="43:53" pos:end="43:62"><name pos:start="43:53" pos:end="43:55">ctx</name><operator pos:start="43:56" pos:end="43:57">-&gt;</operator><name pos:start="43:58" pos:end="43:59">ch</name><index pos:start="43:60" pos:end="43:62">[<expr pos:start="43:61" pos:end="43:61"><literal type="number" pos:start="43:61" pos:end="43:61">1</literal></expr>]</index></name><operator pos:start="43:63" pos:end="43:63">.</operator><name pos:start="43:64" pos:end="43:69">median</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:60"><expr pos:start="45:17" pos:end="45:59"><name pos:start="45:17" pos:end="45:29"><name pos:start="45:17" pos:end="45:17">c</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:29">slow_level</name></name> <operator pos:start="45:31" pos:end="45:32">-=</operator> <call pos:start="45:34" pos:end="45:59"><name pos:start="45:34" pos:end="45:44">LEVEL_DECAY</name><argument_list pos:start="45:45" pos:end="45:59">(<argument pos:start="45:46" pos:end="45:58"><expr pos:start="45:46" pos:end="45:58"><name pos:start="45:46" pos:end="45:58"><name pos:start="45:46" pos:end="45:46">c</name><operator pos:start="45:47" pos:end="45:48">-&gt;</operator><name pos:start="45:49" pos:end="45:58">slow_level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="47:17" pos:end="47:25">return <expr pos:start="47:24" pos:end="47:24"><literal type="number" pos:start="47:24" pos:end="47:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if<condition pos:start="57:7" pos:end="57:44">(<expr pos:start="57:8" pos:end="57:43"><call pos:start="57:8" pos:end="57:25"><name pos:start="57:8" pos:end="57:21">get_bits_count</name><argument_list pos:start="57:22" pos:end="57:25">(<argument pos:start="57:23" pos:end="57:24"><expr pos:start="57:23" pos:end="57:24"><name pos:start="57:23" pos:end="57:24">gb</name></expr></argument>)</argument_list></call> <operator pos:start="57:27" pos:end="57:28">&gt;=</operator> <name pos:start="57:30" pos:end="57:43"><name pos:start="57:30" pos:end="57:32">ctx</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:43">data_size</name></name></expr>)</condition><block pos:start="57:45" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:17">

        <expr_stmt pos:start="59:9" pos:end="59:18"><expr pos:start="59:9" pos:end="59:17"><operator pos:start="59:9" pos:end="59:9">*</operator><name pos:start="59:10" pos:end="59:13">last</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <literal type="number" pos:start="59:17" pos:end="59:17">1</literal></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:17">return <expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="113:5"><if pos:start="67:5" pos:end="73:5">if<condition pos:start="67:7" pos:end="67:17">(<expr pos:start="67:8" pos:end="67:16"><name pos:start="67:8" pos:end="67:16"><name pos:start="67:8" pos:end="67:10">ctx</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:16">zero</name></name></expr>)</condition><block pos:start="67:18" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:22">

        <expr_stmt pos:start="69:9" pos:end="69:14"><expr pos:start="69:9" pos:end="69:13"><name pos:start="69:9" pos:end="69:9">t</name> <operator pos:start="69:11" pos:end="69:11">=</operator> <literal type="number" pos:start="69:13" pos:end="69:13">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:22"><expr pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:17"><name pos:start="71:9" pos:end="71:11">ctx</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:17">zero</name></name> <operator pos:start="71:19" pos:end="71:19">=</operator> <literal type="number" pos:start="71:21" pos:end="71:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="73:6" pos:end="113:5">else<block pos:start="73:10" pos:end="113:5">{<block_content pos:start="75:9" pos:end="111:30">

        <expr_stmt pos:start="75:9" pos:end="75:31"><expr pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:9">t</name> <operator pos:start="75:11" pos:end="75:11">=</operator> <call pos:start="75:13" pos:end="75:30"><name pos:start="75:13" pos:end="75:26">get_unary_0_33</name><argument_list pos:start="75:27" pos:end="75:30">(<argument pos:start="75:28" pos:end="75:29"><expr pos:start="75:28" pos:end="75:29"><name pos:start="75:28" pos:end="75:29">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if<condition pos:start="77:11" pos:end="77:48">(<expr pos:start="77:12" pos:end="77:47"><call pos:start="77:12" pos:end="77:29"><name pos:start="77:12" pos:end="77:25">get_bits_count</name><argument_list pos:start="77:26" pos:end="77:29">(<argument pos:start="77:27" pos:end="77:28"><expr pos:start="77:27" pos:end="77:28"><name pos:start="77:27" pos:end="77:28">gb</name></expr></argument>)</argument_list></call> <operator pos:start="77:31" pos:end="77:32">&gt;=</operator> <name pos:start="77:34" pos:end="77:47"><name pos:start="77:34" pos:end="77:36">ctx</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:47">data_size</name></name></expr>)</condition><block pos:start="77:49" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:21">

            <expr_stmt pos:start="79:13" pos:end="79:22"><expr pos:start="79:13" pos:end="79:21"><operator pos:start="79:13" pos:end="79:13">*</operator><name pos:start="79:14" pos:end="79:17">last</name> <operator pos:start="79:19" pos:end="79:19">=</operator> <literal type="number" pos:start="79:21" pos:end="79:21">1</literal></expr>;</expr_stmt>

            <return pos:start="81:13" pos:end="81:21">return <expr pos:start="81:20" pos:end="81:20"><literal type="number" pos:start="81:20" pos:end="81:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="85:9" pos:end="93:9"><if pos:start="85:9" pos:end="93:9">if<condition pos:start="85:11" pos:end="85:19">(<expr pos:start="85:12" pos:end="85:18"><name pos:start="85:12" pos:end="85:12">t</name> <operator pos:start="85:14" pos:end="85:15">==</operator> <literal type="number" pos:start="85:17" pos:end="85:18">16</literal></expr>)</condition> <block pos:start="85:21" pos:end="93:9">{<block_content pos:start="87:13" pos:end="91:61">

            <expr_stmt pos:start="87:13" pos:end="87:36"><expr pos:start="87:13" pos:end="87:35"><name pos:start="87:13" pos:end="87:14">t2</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <call pos:start="87:18" pos:end="87:35"><name pos:start="87:18" pos:end="87:31">get_unary_0_33</name><argument_list pos:start="87:32" pos:end="87:35">(<argument pos:start="87:33" pos:end="87:34"><expr pos:start="87:33" pos:end="87:34"><name pos:start="87:33" pos:end="87:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="91:61"><if pos:start="89:13" pos:end="89:31">if<condition pos:start="89:15" pos:end="89:22">(<expr pos:start="89:16" pos:end="89:21"><name pos:start="89:16" pos:end="89:17">t2</name> <operator pos:start="89:19" pos:end="89:19">&lt;</operator> <literal type="number" pos:start="89:21" pos:end="89:21">2</literal></expr>)</condition><block type="pseudo" pos:start="89:24" pos:end="89:31"><block_content pos:start="89:24" pos:end="89:31"> <expr_stmt pos:start="89:24" pos:end="89:31"><expr pos:start="89:24" pos:end="89:30"><name pos:start="89:24" pos:end="89:24">t</name> <operator pos:start="89:26" pos:end="89:27">+=</operator> <name pos:start="89:29" pos:end="89:30">t2</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="91:13" pos:end="91:61">else<block type="pseudo" pos:start="91:18" pos:end="91:61"><block_content pos:start="91:18" pos:end="91:61"> <expr_stmt pos:start="91:18" pos:end="91:61"><expr pos:start="91:18" pos:end="91:60"><name pos:start="91:18" pos:end="91:18">t</name> <operator pos:start="91:20" pos:end="91:21">+=</operator> <call pos:start="91:23" pos:end="91:42"><name pos:start="91:23" pos:end="91:30">get_bits</name><argument_list pos:start="91:31" pos:end="91:42">(<argument pos:start="91:32" pos:end="91:33"><expr pos:start="91:32" pos:end="91:33"><name pos:start="91:32" pos:end="91:33">gb</name></expr></argument>, <argument pos:start="91:36" pos:end="91:41"><expr pos:start="91:36" pos:end="91:41"><name pos:start="91:36" pos:end="91:37">t2</name> <operator pos:start="91:39" pos:end="91:39">-</operator> <literal type="number" pos:start="91:41" pos:end="91:41">1</literal></expr></argument>)</argument_list></call> <operator pos:start="91:44" pos:end="91:44">|</operator> <operator pos:start="91:46" pos:end="91:46">(</operator><literal type="number" pos:start="91:47" pos:end="91:47">1</literal> <operator pos:start="91:49" pos:end="91:50">&lt;&lt;</operator> <operator pos:start="91:52" pos:end="91:52">(</operator><name pos:start="91:53" pos:end="91:54">t2</name> <operator pos:start="91:56" pos:end="91:56">-</operator> <literal type="number" pos:start="91:58" pos:end="91:58">1</literal><operator pos:start="91:59" pos:end="91:59">)</operator><operator pos:start="91:60" pos:end="91:60">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="97:9" pos:end="109:9"><if pos:start="97:9" pos:end="103:9">if<condition pos:start="97:11" pos:end="97:20">(<expr pos:start="97:12" pos:end="97:19"><name pos:start="97:12" pos:end="97:19"><name pos:start="97:12" pos:end="97:14">ctx</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:19">one</name></name></expr>)</condition><block pos:start="97:21" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:27">

            <expr_stmt pos:start="99:13" pos:end="99:27"><expr pos:start="99:13" pos:end="99:26"><name pos:start="99:13" pos:end="99:20"><name pos:start="99:13" pos:end="99:15">ctx</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:20">one</name></name> <operator pos:start="99:22" pos:end="99:22">=</operator> <name pos:start="99:24" pos:end="99:24">t</name><operator pos:start="99:25" pos:end="99:25">&amp;</operator><literal type="number" pos:start="99:26" pos:end="99:26">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:27"><expr pos:start="101:13" pos:end="101:26"><name pos:start="101:13" pos:end="101:13">t</name> <operator pos:start="101:15" pos:end="101:15">=</operator> <operator pos:start="101:17" pos:end="101:17">(</operator><name pos:start="101:18" pos:end="101:18">t</name><operator pos:start="101:19" pos:end="101:20">&gt;&gt;</operator><literal type="number" pos:start="101:21" pos:end="101:21">1</literal><operator pos:start="101:22" pos:end="101:22">)</operator> <operator pos:start="101:24" pos:end="101:24">+</operator> <literal type="number" pos:start="101:26" pos:end="101:26">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="103:10" pos:end="109:9">else<block pos:start="103:14" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:20">

            <expr_stmt pos:start="105:13" pos:end="105:27"><expr pos:start="105:13" pos:end="105:26"><name pos:start="105:13" pos:end="105:20"><name pos:start="105:13" pos:end="105:15">ctx</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:20">one</name></name> <operator pos:start="105:22" pos:end="105:22">=</operator> <name pos:start="105:24" pos:end="105:24">t</name><operator pos:start="105:25" pos:end="105:25">&amp;</operator><literal type="number" pos:start="105:26" pos:end="105:26">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:20"><expr pos:start="107:13" pos:end="107:19"><name pos:start="107:13" pos:end="107:13">t</name> <operator pos:start="107:15" pos:end="107:17">&gt;&gt;=</operator> <literal type="number" pos:start="107:19" pos:end="107:19">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:30"><expr pos:start="111:9" pos:end="111:29"><name pos:start="111:9" pos:end="111:17"><name pos:start="111:9" pos:end="111:11">ctx</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:17">zero</name></name> <operator pos:start="111:19" pos:end="111:19">=</operator> <operator pos:start="111:21" pos:end="111:21">!</operator><name pos:start="111:22" pos:end="111:29"><name pos:start="111:22" pos:end="111:24">ctx</name><operator pos:start="111:25" pos:end="111:26">-&gt;</operator><name pos:start="111:27" pos:end="111:29">one</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="117:5" pos:end="119:32"><if pos:start="117:5" pos:end="119:32">if<condition pos:start="117:7" pos:end="117:31">(<expr pos:start="117:8" pos:end="117:30"><name pos:start="117:8" pos:end="117:18"><name pos:start="117:8" pos:end="117:10">ctx</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:18">hybrid</name></name> <operator pos:start="117:20" pos:end="117:21">&amp;&amp;</operator> <operator pos:start="117:23" pos:end="117:23">!</operator><name pos:start="117:24" pos:end="117:30">channel</name></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:32"><block_content pos:start="119:9" pos:end="119:32">

        <expr_stmt pos:start="119:9" pos:end="119:32"><expr pos:start="119:9" pos:end="119:31"><call pos:start="119:9" pos:end="119:31"><name pos:start="119:9" pos:end="119:26">update_error_limit</name><argument_list pos:start="119:27" pos:end="119:31">(<argument pos:start="119:28" pos:end="119:30"><expr pos:start="119:28" pos:end="119:30"><name pos:start="119:28" pos:end="119:30">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="123:5" pos:end="165:5"><if pos:start="123:5" pos:end="131:5">if<condition pos:start="123:7" pos:end="123:10">(<expr pos:start="123:8" pos:end="123:9"><operator pos:start="123:8" pos:end="123:8">!</operator><name pos:start="123:9" pos:end="123:9">t</name></expr>)</condition><block pos:start="123:11" pos:end="131:5">{<block_content pos:start="125:9" pos:end="129:19">

        <expr_stmt pos:start="125:9" pos:end="125:17"><expr pos:start="125:9" pos:end="125:16"><name pos:start="125:9" pos:end="125:12">base</name> <operator pos:start="125:14" pos:end="125:14">=</operator> <literal type="number" pos:start="125:16" pos:end="125:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:29"><expr pos:start="127:9" pos:end="127:28"><name pos:start="127:9" pos:end="127:11">add</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <call pos:start="127:15" pos:end="127:24"><name pos:start="127:15" pos:end="127:21">GET_MED</name><argument_list pos:start="127:22" pos:end="127:24">(<argument pos:start="127:23" pos:end="127:23"><expr pos:start="127:23" pos:end="127:23"><literal type="number" pos:start="127:23" pos:end="127:23">0</literal></expr></argument>)</argument_list></call> <operator pos:start="127:26" pos:end="127:26">-</operator> <literal type="number" pos:start="127:28" pos:end="127:28">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:19"><expr pos:start="129:9" pos:end="129:18"><call pos:start="129:9" pos:end="129:18"><name pos:start="129:9" pos:end="129:15">DEC_MED</name><argument_list pos:start="129:16" pos:end="129:18">(<argument pos:start="129:17" pos:end="129:17"><expr pos:start="129:17" pos:end="129:17"><literal type="number" pos:start="129:17" pos:end="129:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="131:6" pos:end="141:5">else if<condition pos:start="131:13" pos:end="131:20">(<expr pos:start="131:14" pos:end="131:19"><name pos:start="131:14" pos:end="131:14">t</name> <operator pos:start="131:16" pos:end="131:17">==</operator> <literal type="number" pos:start="131:19" pos:end="131:19">1</literal></expr>)</condition><block pos:start="131:21" pos:end="141:5">{<block_content pos:start="133:9" pos:end="139:19">

        <expr_stmt pos:start="133:9" pos:end="133:26"><expr pos:start="133:9" pos:end="133:25"><name pos:start="133:9" pos:end="133:12">base</name> <operator pos:start="133:14" pos:end="133:14">=</operator> <call pos:start="133:16" pos:end="133:25"><name pos:start="133:16" pos:end="133:22">GET_MED</name><argument_list pos:start="133:23" pos:end="133:25">(<argument pos:start="133:24" pos:end="133:24"><expr pos:start="133:24" pos:end="133:24"><literal type="number" pos:start="133:24" pos:end="133:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:29"><expr pos:start="135:9" pos:end="135:28"><name pos:start="135:9" pos:end="135:11">add</name> <operator pos:start="135:13" pos:end="135:13">=</operator> <call pos:start="135:15" pos:end="135:24"><name pos:start="135:15" pos:end="135:21">GET_MED</name><argument_list pos:start="135:22" pos:end="135:24">(<argument pos:start="135:23" pos:end="135:23"><expr pos:start="135:23" pos:end="135:23"><literal type="number" pos:start="135:23" pos:end="135:23">1</literal></expr></argument>)</argument_list></call> <operator pos:start="135:26" pos:end="135:26">-</operator> <literal type="number" pos:start="135:28" pos:end="135:28">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:19"><expr pos:start="137:9" pos:end="137:18"><call pos:start="137:9" pos:end="137:18"><name pos:start="137:9" pos:end="137:15">INC_MED</name><argument_list pos:start="137:16" pos:end="137:18">(<argument pos:start="137:17" pos:end="137:17"><expr pos:start="137:17" pos:end="137:17"><literal type="number" pos:start="137:17" pos:end="137:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:19"><expr pos:start="139:9" pos:end="139:18"><call pos:start="139:9" pos:end="139:18"><name pos:start="139:9" pos:end="139:15">DEC_MED</name><argument_list pos:start="139:16" pos:end="139:18">(<argument pos:start="139:17" pos:end="139:17"><expr pos:start="139:17" pos:end="139:17"><literal type="number" pos:start="139:17" pos:end="139:17">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="141:6" pos:end="153:5">else if<condition pos:start="141:13" pos:end="141:20">(<expr pos:start="141:14" pos:end="141:19"><name pos:start="141:14" pos:end="141:14">t</name> <operator pos:start="141:16" pos:end="141:17">==</operator> <literal type="number" pos:start="141:19" pos:end="141:19">2</literal></expr>)</condition><block pos:start="141:21" pos:end="153:5">{<block_content pos:start="143:9" pos:end="151:19">

        <expr_stmt pos:start="143:9" pos:end="143:39"><expr pos:start="143:9" pos:end="143:38"><name pos:start="143:9" pos:end="143:12">base</name> <operator pos:start="143:14" pos:end="143:14">=</operator> <call pos:start="143:16" pos:end="143:25"><name pos:start="143:16" pos:end="143:22">GET_MED</name><argument_list pos:start="143:23" pos:end="143:25">(<argument pos:start="143:24" pos:end="143:24"><expr pos:start="143:24" pos:end="143:24"><literal type="number" pos:start="143:24" pos:end="143:24">0</literal></expr></argument>)</argument_list></call> <operator pos:start="143:27" pos:end="143:27">+</operator> <call pos:start="143:29" pos:end="143:38"><name pos:start="143:29" pos:end="143:35">GET_MED</name><argument_list pos:start="143:36" pos:end="143:38">(<argument pos:start="143:37" pos:end="143:37"><expr pos:start="143:37" pos:end="143:37"><literal type="number" pos:start="143:37" pos:end="143:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:29"><expr pos:start="145:9" pos:end="145:28"><name pos:start="145:9" pos:end="145:11">add</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <call pos:start="145:15" pos:end="145:24"><name pos:start="145:15" pos:end="145:21">GET_MED</name><argument_list pos:start="145:22" pos:end="145:24">(<argument pos:start="145:23" pos:end="145:23"><expr pos:start="145:23" pos:end="145:23"><literal type="number" pos:start="145:23" pos:end="145:23">2</literal></expr></argument>)</argument_list></call> <operator pos:start="145:26" pos:end="145:26">-</operator> <literal type="number" pos:start="145:28" pos:end="145:28">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:19"><expr pos:start="147:9" pos:end="147:18"><call pos:start="147:9" pos:end="147:18"><name pos:start="147:9" pos:end="147:15">INC_MED</name><argument_list pos:start="147:16" pos:end="147:18">(<argument pos:start="147:17" pos:end="147:17"><expr pos:start="147:17" pos:end="147:17"><literal type="number" pos:start="147:17" pos:end="147:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:19"><expr pos:start="149:9" pos:end="149:18"><call pos:start="149:9" pos:end="149:18"><name pos:start="149:9" pos:end="149:15">INC_MED</name><argument_list pos:start="149:16" pos:end="149:18">(<argument pos:start="149:17" pos:end="149:17"><expr pos:start="149:17" pos:end="149:17"><literal type="number" pos:start="149:17" pos:end="149:17">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:19"><expr pos:start="151:9" pos:end="151:18"><call pos:start="151:9" pos:end="151:18"><name pos:start="151:9" pos:end="151:15">DEC_MED</name><argument_list pos:start="151:16" pos:end="151:18">(<argument pos:start="151:17" pos:end="151:17"><expr pos:start="151:17" pos:end="151:17"><literal type="number" pos:start="151:17" pos:end="151:17">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="153:6" pos:end="165:5">else<block pos:start="153:10" pos:end="165:5">{<block_content pos:start="155:9" pos:end="163:19">

        <expr_stmt pos:start="155:9" pos:end="155:62"><expr pos:start="155:9" pos:end="155:61"><name pos:start="155:9" pos:end="155:12">base</name> <operator pos:start="155:14" pos:end="155:14">=</operator> <call pos:start="155:16" pos:end="155:25"><name pos:start="155:16" pos:end="155:22">GET_MED</name><argument_list pos:start="155:23" pos:end="155:25">(<argument pos:start="155:24" pos:end="155:24"><expr pos:start="155:24" pos:end="155:24"><literal type="number" pos:start="155:24" pos:end="155:24">0</literal></expr></argument>)</argument_list></call> <operator pos:start="155:27" pos:end="155:27">+</operator> <call pos:start="155:29" pos:end="155:38"><name pos:start="155:29" pos:end="155:35">GET_MED</name><argument_list pos:start="155:36" pos:end="155:38">(<argument pos:start="155:37" pos:end="155:37"><expr pos:start="155:37" pos:end="155:37"><literal type="number" pos:start="155:37" pos:end="155:37">1</literal></expr></argument>)</argument_list></call> <operator pos:start="155:40" pos:end="155:40">+</operator> <call pos:start="155:42" pos:end="155:51"><name pos:start="155:42" pos:end="155:48">GET_MED</name><argument_list pos:start="155:49" pos:end="155:51">(<argument pos:start="155:50" pos:end="155:50"><expr pos:start="155:50" pos:end="155:50"><literal type="number" pos:start="155:50" pos:end="155:50">2</literal></expr></argument>)</argument_list></call> <operator pos:start="155:53" pos:end="155:53">*</operator> <operator pos:start="155:55" pos:end="155:55">(</operator><name pos:start="155:56" pos:end="155:56">t</name> <operator pos:start="155:58" pos:end="155:58">-</operator> <literal type="number" pos:start="155:60" pos:end="155:60">2</literal><operator pos:start="155:61" pos:end="155:61">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:29"><expr pos:start="157:9" pos:end="157:28"><name pos:start="157:9" pos:end="157:11">add</name> <operator pos:start="157:13" pos:end="157:13">=</operator> <call pos:start="157:15" pos:end="157:24"><name pos:start="157:15" pos:end="157:21">GET_MED</name><argument_list pos:start="157:22" pos:end="157:24">(<argument pos:start="157:23" pos:end="157:23"><expr pos:start="157:23" pos:end="157:23"><literal type="number" pos:start="157:23" pos:end="157:23">2</literal></expr></argument>)</argument_list></call> <operator pos:start="157:26" pos:end="157:26">-</operator> <literal type="number" pos:start="157:28" pos:end="157:28">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:19"><expr pos:start="159:9" pos:end="159:18"><call pos:start="159:9" pos:end="159:18"><name pos:start="159:9" pos:end="159:15">INC_MED</name><argument_list pos:start="159:16" pos:end="159:18">(<argument pos:start="159:17" pos:end="159:17"><expr pos:start="159:17" pos:end="159:17"><literal type="number" pos:start="159:17" pos:end="159:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:19"><expr pos:start="161:9" pos:end="161:18"><call pos:start="161:9" pos:end="161:18"><name pos:start="161:9" pos:end="161:15">INC_MED</name><argument_list pos:start="161:16" pos:end="161:18">(<argument pos:start="161:17" pos:end="161:17"><expr pos:start="161:17" pos:end="161:17"><literal type="number" pos:start="161:17" pos:end="161:17">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:19"><expr pos:start="163:9" pos:end="163:18"><call pos:start="163:9" pos:end="163:18"><name pos:start="163:9" pos:end="163:15">INC_MED</name><argument_list pos:start="163:16" pos:end="163:18">(<argument pos:start="163:17" pos:end="163:17"><expr pos:start="163:17" pos:end="163:17"><literal type="number" pos:start="163:17" pos:end="163:17">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="167:5" pos:end="193:5"><if pos:start="167:5" pos:end="171:5">if<condition pos:start="167:7" pos:end="167:23">(<expr pos:start="167:8" pos:end="167:22"><operator pos:start="167:8" pos:end="167:8">!</operator><name pos:start="167:9" pos:end="167:22"><name pos:start="167:9" pos:end="167:9">c</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:22">error_limit</name></name></expr>)</condition><block pos:start="167:24" pos:end="171:5">{<block_content pos:start="169:9" pos:end="169:39">

        <expr_stmt pos:start="169:9" pos:end="169:39"><expr pos:start="169:9" pos:end="169:38"><name pos:start="169:9" pos:end="169:11">ret</name> <operator pos:start="169:13" pos:end="169:13">=</operator> <name pos:start="169:15" pos:end="169:18">base</name> <operator pos:start="169:20" pos:end="169:20">+</operator> <call pos:start="169:22" pos:end="169:38"><name pos:start="169:22" pos:end="169:29">get_tail</name><argument_list pos:start="169:30" pos:end="169:38">(<argument pos:start="169:31" pos:end="169:32"><expr pos:start="169:31" pos:end="169:32"><name pos:start="169:31" pos:end="169:32">gb</name></expr></argument>, <argument pos:start="169:35" pos:end="169:37"><expr pos:start="169:35" pos:end="169:37"><name pos:start="169:35" pos:end="169:37">add</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="171:6" pos:end="193:5">else<block pos:start="171:10" pos:end="193:5">{<block_content pos:start="173:9" pos:end="191:18">

        <decl_stmt pos:start="173:9" pos:end="173:42"><decl pos:start="173:9" pos:end="173:41"><type pos:start="173:9" pos:end="173:11"><name pos:start="173:9" pos:end="173:11">int</name></type> <name pos:start="173:13" pos:end="173:15">mid</name> <init pos:start="173:17" pos:end="173:41">= <expr pos:start="173:19" pos:end="173:41"><operator pos:start="173:19" pos:end="173:19">(</operator><name pos:start="173:20" pos:end="173:23">base</name><operator pos:start="173:24" pos:end="173:24">*</operator><literal type="number" pos:start="173:25" pos:end="173:27">2</literal> <operator pos:start="173:27" pos:end="173:27">+</operator> <name pos:start="173:29" pos:end="173:31">add</name> <operator pos:start="173:33" pos:end="173:33">+</operator> <literal type="number" pos:start="173:35" pos:end="173:35">1</literal><operator pos:start="173:36" pos:end="173:36">)</operator> <operator pos:start="173:38" pos:end="173:39">&gt;&gt;</operator> <literal type="number" pos:start="173:41" pos:end="173:41">1</literal></expr></init></decl>;</decl_stmt>

        <while pos:start="175:9" pos:end="189:9">while<condition pos:start="175:14" pos:end="175:35">(<expr pos:start="175:15" pos:end="175:34"><name pos:start="175:15" pos:end="175:17">add</name> <operator pos:start="175:19" pos:end="175:19">&gt;</operator> <name pos:start="175:21" pos:end="175:34"><name pos:start="175:21" pos:end="175:21">c</name><operator pos:start="175:22" pos:end="175:23">-&gt;</operator><name pos:start="175:24" pos:end="175:34">error_limit</name></name></expr>)</condition><block pos:start="175:36" pos:end="189:9">{<block_content pos:start="177:13" pos:end="187:42">

            <if_stmt pos:start="177:13" pos:end="185:37"><if pos:start="177:13" pos:end="183:13">if<condition pos:start="177:15" pos:end="177:29">(<expr pos:start="177:16" pos:end="177:28"><call pos:start="177:16" pos:end="177:28"><name pos:start="177:16" pos:end="177:24">get_bits1</name><argument_list pos:start="177:25" pos:end="177:28">(<argument pos:start="177:26" pos:end="177:27"><expr pos:start="177:26" pos:end="177:27"><name pos:start="177:26" pos:end="177:27">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="177:30" pos:end="183:13">{<block_content pos:start="179:17" pos:end="181:27">

                <expr_stmt pos:start="179:17" pos:end="179:36"><expr pos:start="179:17" pos:end="179:35"><name pos:start="179:17" pos:end="179:19">add</name> <operator pos:start="179:21" pos:end="179:22">-=</operator> <operator pos:start="179:24" pos:end="179:24">(</operator><name pos:start="179:25" pos:end="179:27">mid</name> <operator pos:start="179:29" pos:end="179:29">-</operator> <name pos:start="179:31" pos:end="179:34">base</name><operator pos:start="179:35" pos:end="179:35">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="181:17" pos:end="181:27"><expr pos:start="181:17" pos:end="181:26"><name pos:start="181:17" pos:end="181:20">base</name> <operator pos:start="181:22" pos:end="181:22">=</operator> <name pos:start="181:24" pos:end="181:26">mid</name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="183:14" pos:end="185:37">else<block type="pseudo" pos:start="185:17" pos:end="185:37"><block_content pos:start="185:17" pos:end="185:37">

                <expr_stmt pos:start="185:17" pos:end="185:37"><expr pos:start="185:17" pos:end="185:36"><name pos:start="185:17" pos:end="185:19">add</name> <operator pos:start="185:21" pos:end="185:21">=</operator> <name pos:start="185:23" pos:end="185:25">mid</name> <operator pos:start="185:27" pos:end="185:27">-</operator> <name pos:start="185:29" pos:end="185:32">base</name> <operator pos:start="185:34" pos:end="185:34">-</operator> <literal type="number" pos:start="185:36" pos:end="185:36">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:42"><expr pos:start="187:13" pos:end="187:41"><name pos:start="187:13" pos:end="187:15">mid</name> <operator pos:start="187:17" pos:end="187:17">=</operator> <operator pos:start="187:19" pos:end="187:19">(</operator><name pos:start="187:20" pos:end="187:23">base</name><operator pos:start="187:24" pos:end="187:24">*</operator><literal type="number" pos:start="187:25" pos:end="187:27">2</literal> <operator pos:start="187:27" pos:end="187:27">+</operator> <name pos:start="187:29" pos:end="187:31">add</name> <operator pos:start="187:33" pos:end="187:33">+</operator> <literal type="number" pos:start="187:35" pos:end="187:35">1</literal><operator pos:start="187:36" pos:end="187:36">)</operator> <operator pos:start="187:38" pos:end="187:39">&gt;&gt;</operator> <literal type="number" pos:start="187:41" pos:end="187:41">1</literal></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="191:9" pos:end="191:18"><expr pos:start="191:9" pos:end="191:17"><name pos:start="191:9" pos:end="191:11">ret</name> <operator pos:start="191:13" pos:end="191:13">=</operator> <name pos:start="191:15" pos:end="191:17">mid</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:25"><expr pos:start="195:5" pos:end="195:24"><name pos:start="195:5" pos:end="195:8">sign</name> <operator pos:start="195:10" pos:end="195:10">=</operator> <call pos:start="195:12" pos:end="195:24"><name pos:start="195:12" pos:end="195:20">get_bits1</name><argument_list pos:start="195:21" pos:end="195:24">(<argument pos:start="195:22" pos:end="195:23"><expr pos:start="195:22" pos:end="195:23"><name pos:start="195:22" pos:end="195:23">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="197:5" pos:end="199:67"><if pos:start="197:5" pos:end="199:67">if<condition pos:start="197:7" pos:end="197:27">(<expr pos:start="197:8" pos:end="197:26"><name pos:start="197:8" pos:end="197:26"><name pos:start="197:8" pos:end="197:10">ctx</name><operator pos:start="197:11" pos:end="197:12">-&gt;</operator><name pos:start="197:13" pos:end="197:26">hybrid_bitrate</name></name></expr>)</condition><block type="pseudo" pos:start="199:9" pos:end="199:67"><block_content pos:start="199:9" pos:end="199:67">

        <expr_stmt pos:start="199:9" pos:end="199:67"><expr pos:start="199:9" pos:end="199:66"><name pos:start="199:9" pos:end="199:21"><name pos:start="199:9" pos:end="199:9">c</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:21">slow_level</name></name> <operator pos:start="199:23" pos:end="199:24">+=</operator> <call pos:start="199:26" pos:end="199:37"><name pos:start="199:26" pos:end="199:32">wp_log2</name><argument_list pos:start="199:33" pos:end="199:37">(<argument pos:start="199:34" pos:end="199:36"><expr pos:start="199:34" pos:end="199:36"><name pos:start="199:34" pos:end="199:36">ret</name></expr></argument>)</argument_list></call> <operator pos:start="199:39" pos:end="199:39">-</operator> <call pos:start="199:41" pos:end="199:66"><name pos:start="199:41" pos:end="199:51">LEVEL_DECAY</name><argument_list pos:start="199:52" pos:end="199:66">(<argument pos:start="199:53" pos:end="199:65"><expr pos:start="199:53" pos:end="199:65"><name pos:start="199:53" pos:end="199:65"><name pos:start="199:53" pos:end="199:53">c</name><operator pos:start="199:54" pos:end="199:55">-&gt;</operator><name pos:start="199:56" pos:end="199:65">slow_level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="201:5" pos:end="201:29">return <expr pos:start="201:12" pos:end="201:28"><ternary pos:start="201:12" pos:end="201:28"><condition pos:start="201:12" pos:end="201:17"><expr pos:start="201:12" pos:end="201:15"><name pos:start="201:12" pos:end="201:15">sign</name></expr> ?</condition><then pos:start="201:19" pos:end="201:22"> <expr pos:start="201:19" pos:end="201:22"><operator pos:start="201:19" pos:end="201:19">~</operator><name pos:start="201:20" pos:end="201:22">ret</name></expr> </then><else pos:start="201:24" pos:end="201:28">: <expr pos:start="201:26" pos:end="201:28"><name pos:start="201:26" pos:end="201:28">ret</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
