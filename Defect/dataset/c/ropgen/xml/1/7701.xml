<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7701.c" pos:tabs="8"><function pos:start="1:1" pos:end="26:15"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">parse_netdev</name><parameter_list pos:start="1:24" pos:end="1:70">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:40"><name pos:start="1:25" pos:end="1:35">DeviceState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">dev</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">str</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:69"><decl pos:start="1:60" pos:end="1:69"><type pos:start="1:60" pos:end="1:69"><name pos:start="1:60" pos:end="1:63">void</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier><modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">ptr</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="26:15">{<block_content pos:start="3:5" pos:end="26:15">
    <decl_stmt pos:start="3:5" pos:end="3:42"><decl pos:start="3:5" pos:end="3:41"><type pos:start="3:5" pos:end="3:14"><name pos:start="3:5" pos:end="3:12">NICPeers</name> <modifier pos:start="3:14" pos:end="3:14">*</modifier></type><name pos:start="3:15" pos:end="3:23">peers_ptr</name> <init pos:start="3:25" pos:end="3:41">= <expr pos:start="3:27" pos:end="3:41"><operator pos:start="3:27" pos:end="3:27">(</operator><name pos:start="3:28" pos:end="3:35">NICPeers</name> <operator pos:start="3:37" pos:end="3:37">*</operator><operator pos:start="3:38" pos:end="3:38">)</operator><name pos:start="3:39" pos:end="3:41">ptr</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:60"><decl pos:start="4:5" pos:end="4:59"><type pos:start="4:5" pos:end="4:13"><name pos:start="4:5" pos:end="4:11">NICConf</name> <modifier pos:start="4:13" pos:end="4:13">*</modifier></type><name pos:start="4:14" pos:end="4:17">conf</name> <init pos:start="4:19" pos:end="4:59">= <expr pos:start="4:21" pos:end="4:59"><call pos:start="4:21" pos:end="4:59"><name pos:start="4:21" pos:end="4:32">container_of</name><argument_list pos:start="4:33" pos:end="4:59">(<argument pos:start="4:34" pos:end="4:42"><expr pos:start="4:34" pos:end="4:42"><name pos:start="4:34" pos:end="4:42">peers_ptr</name></expr></argument>, <argument pos:start="4:45" pos:end="4:51"><expr pos:start="4:45" pos:end="4:51"><name pos:start="4:45" pos:end="4:51">NICConf</name></expr></argument>, <argument pos:start="4:54" pos:end="4:58"><expr pos:start="4:54" pos:end="4:58"><name pos:start="4:54" pos:end="4:58">peers</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:18">NetClientState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier><modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ncs</name> <init pos:start="5:26" pos:end="5:41">= <expr pos:start="5:28" pos:end="5:41"><name pos:start="5:28" pos:end="5:41"><name pos:start="5:28" pos:end="5:36">peers_ptr</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:41">ncs</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:41"><decl pos:start="6:5" pos:end="6:40"><type pos:start="6:5" pos:end="6:20"><name pos:start="6:5" pos:end="6:18">NetClientState</name> <modifier pos:start="6:20" pos:end="6:20">*</modifier></type><name pos:start="6:21" pos:end="6:40"><name pos:start="6:21" pos:end="6:25">peers</name><index pos:start="6:26" pos:end="6:40">[<expr pos:start="6:27" pos:end="6:39"><name pos:start="6:27" pos:end="6:39">MAX_QUEUE_NUM</name></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">queues</name></decl>, <decl pos:start="7:17" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:17">i</name> <init pos:start="7:19" pos:end="7:21">= <expr pos:start="7:21" pos:end="7:21"><literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:12"><decl pos:start="8:5" pos:end="8:11"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:11">ret</name></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="11:57"><expr pos:start="9:5" pos:end="11:56"><name pos:start="9:5" pos:end="9:10">queues</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <call pos:start="9:14" pos:end="11:56"><name pos:start="9:14" pos:end="9:41">qemu_find_net_clients_except</name><argument_list pos:start="9:42" pos:end="11:56">(<argument pos:start="9:43" pos:end="9:45"><expr pos:start="9:43" pos:end="9:45"><name pos:start="9:43" pos:end="9:45">str</name></expr></argument>, <argument pos:start="9:48" pos:end="9:52"><expr pos:start="9:48" pos:end="9:52"><name pos:start="9:48" pos:end="9:52">peers</name></expr></argument>,
                                          <argument pos:start="10:43" pos:end="10:69"><expr pos:start="10:43" pos:end="10:69"><name pos:start="10:43" pos:end="10:69">NET_CLIENT_OPTIONS_KIND_NIC</name></expr></argument>,
                                          <argument pos:start="11:43" pos:end="11:55"><expr pos:start="11:43" pos:end="11:55"><name pos:start="11:43" pos:end="11:55">MAX_QUEUE_NUM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="12:5" pos:end="26:15"><if pos:start="12:5" pos:end="26:15">if <condition pos:start="12:8" pos:end="12:20">(<expr pos:start="12:9" pos:end="12:19"><name pos:start="12:9" pos:end="12:14">queues</name> <operator pos:start="12:16" pos:end="12:17">==</operator> <literal type="number" pos:start="12:19" pos:end="12:19">0</literal></expr>)</condition> <block pos:start="12:22" pos:end="26:15">{<block_content pos:start="13:9" pos:end="26:15">
        <expr_stmt pos:start="13:9" pos:end="13:22"><expr pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <operator pos:start="13:15" pos:end="13:15">-</operator><name pos:start="13:16" pos:end="13:21">ENOENT</name></expr>;</expr_stmt>
    <if_stmt pos:start="14:5" pos:end="26:15"><if pos:start="14:5" pos:end="26:15">if <condition pos:start="14:8" pos:end="14:31">(<expr pos:start="14:9" pos:end="14:30"><name pos:start="14:9" pos:end="14:14">queues</name> <operator pos:start="14:16" pos:end="14:16">&gt;</operator> <name pos:start="14:18" pos:end="14:30">MAX_QUEUE_NUM</name></expr>)</condition> <block pos:start="14:33" pos:end="26:15">{<block_content pos:start="15:9" pos:end="26:15">
        <expr_stmt pos:start="15:9" pos:end="15:21"><expr pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <operator pos:start="15:15" pos:end="15:15">-</operator><name pos:start="15:16" pos:end="15:20">E2BIG</name></expr>;</expr_stmt>
    <for pos:start="16:5" pos:end="26:15">for <control pos:start="16:9" pos:end="16:32">(<init pos:start="16:10" pos:end="16:15"><expr pos:start="16:10" pos:end="16:14"><name pos:start="16:10" pos:end="16:10">i</name> <operator pos:start="16:12" pos:end="16:12">=</operator> <literal type="number" pos:start="16:14" pos:end="16:14">0</literal></expr>;</init> <condition pos:start="16:17" pos:end="16:27"><expr pos:start="16:17" pos:end="16:26"><name pos:start="16:17" pos:end="16:17">i</name> <operator pos:start="16:19" pos:end="16:19">&lt;</operator> <name pos:start="16:21" pos:end="16:26">queues</name></expr>;</condition> <incr pos:start="16:29" pos:end="16:31"><expr pos:start="16:29" pos:end="16:31"><name pos:start="16:29" pos:end="16:29">i</name><operator pos:start="16:30" pos:end="16:31">++</operator></expr></incr>)</control> <block pos:start="16:34" pos:end="26:15">{<block_content pos:start="17:9" pos:end="26:15">
        <if_stmt pos:start="17:9" pos:end="26:15"><if pos:start="17:9" pos:end="26:15">if <condition pos:start="17:12" pos:end="17:29">(<expr pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:17">peers</name><index pos:start="17:18" pos:end="17:20">[<expr pos:start="17:19" pos:end="17:19"><name pos:start="17:19" pos:end="17:19">i</name></expr>]</index></name> <operator pos:start="17:22" pos:end="17:23">==</operator> <name pos:start="17:25" pos:end="17:28">NULL</name></expr>)</condition> <block pos:start="17:31" pos:end="26:15">{<block_content pos:start="18:13" pos:end="26:15">
            <expr_stmt pos:start="18:13" pos:end="18:26"><expr pos:start="18:13" pos:end="18:25"><name pos:start="18:13" pos:end="18:15">ret</name> <operator pos:start="18:17" pos:end="18:17">=</operator> <operator pos:start="18:19" pos:end="18:19">-</operator><name pos:start="18:20" pos:end="18:25">ENOENT</name></expr>;</expr_stmt>
        <if_stmt pos:start="19:9" pos:end="26:15"><if pos:start="19:9" pos:end="26:15">if <condition pos:start="19:12" pos:end="19:27">(<expr pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:17">peers</name><index pos:start="19:18" pos:end="19:20">[<expr pos:start="19:19" pos:end="19:19"><name pos:start="19:19" pos:end="19:19">i</name></expr>]</index></name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:26">peer</name></expr>)</condition> <block pos:start="19:29" pos:end="26:15">{<block_content pos:start="20:13" pos:end="26:15">
            <expr_stmt pos:start="20:13" pos:end="20:26"><expr pos:start="20:13" pos:end="20:25"><name pos:start="20:13" pos:end="20:15">ret</name> <operator pos:start="20:17" pos:end="20:17">=</operator> <operator pos:start="20:19" pos:end="20:19">-</operator><name pos:start="20:20" pos:end="20:25">EEXIST</name></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:11">ncs</name><index pos:start="21:12" pos:end="21:14">[<expr pos:start="21:13" pos:end="21:13"><name pos:start="21:13" pos:end="21:13">i</name></expr>]</index></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:25"><name pos:start="21:18" pos:end="21:22">peers</name><index pos:start="21:23" pos:end="21:25">[<expr pos:start="21:24" pos:end="21:24"><name pos:start="21:24" pos:end="21:24">i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="22:32"><expr pos:start="22:9" pos:end="22:31"><name pos:start="22:9" pos:end="22:14"><name pos:start="22:9" pos:end="22:11">ncs</name><index pos:start="22:12" pos:end="22:14">[<expr pos:start="22:13" pos:end="22:13"><name pos:start="22:13" pos:end="22:13">i</name></expr>]</index></name><operator pos:start="22:15" pos:end="22:16">-&gt;</operator><name pos:start="22:17" pos:end="22:27">queue_index</name> <operator pos:start="22:29" pos:end="22:29">=</operator> <name pos:start="22:31" pos:end="22:31">i</name></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:26"><expr pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:8">conf</name><operator pos:start="23:9" pos:end="23:10">-&gt;</operator><name pos:start="23:11" pos:end="23:16">queues</name></name> <operator pos:start="23:18" pos:end="23:18">=</operator> <name pos:start="23:20" pos:end="23:25">queues</name></expr>;</expr_stmt>
    <return pos:start="24:5" pos:end="24:13">return <expr pos:start="24:12" pos:end="24:12"><literal type="number" pos:start="24:12" pos:end="24:12">0</literal></expr>;</return>
<label pos:start="25:1" pos:end="25:4"><name pos:start="25:1" pos:end="25:3">err</name>:</label>
    <return pos:start="26:5" pos:end="26:15">return <expr pos:start="26:12" pos:end="26:14"><name pos:start="26:12" pos:end="26:14">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
