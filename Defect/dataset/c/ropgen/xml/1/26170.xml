<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26170.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">decode_block_coeffs_internal</name><parameter_list pos:start="1:40" pos:end="7:56">(<parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:54">VP56RangeCoder</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">r</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:76"><decl pos:start="1:60" pos:end="1:76"><type pos:start="1:60" pos:end="1:72"><name pos:start="1:60" pos:end="1:66">int16_t</name></type> <name pos:start="1:68" pos:end="1:76"><name pos:start="1:68" pos:end="1:72">block</name><index pos:start="1:73" pos:end="1:76">[<expr pos:start="1:74" pos:end="1:75"><literal type="number" pos:start="1:74" pos:end="1:75">16</literal></expr>]</index></name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:80"><decl pos:start="3:41" pos:end="3:80"><type pos:start="3:41" pos:end="3:53"><name pos:start="3:41" pos:end="3:47">uint8_t</name></type> <name pos:start="3:49" pos:end="3:80"><name pos:start="3:49" pos:end="3:53">probs</name><index pos:start="3:54" pos:end="3:57">[<expr pos:start="3:55" pos:end="3:56"><literal type="number" pos:start="3:55" pos:end="3:56">16</literal></expr>]</index><index pos:start="3:58" pos:end="3:60">[<expr pos:start="3:59" pos:end="3:59"><literal type="number" pos:start="3:59" pos:end="3:59">3</literal></expr>]</index><index pos:start="3:61" pos:end="3:80">[<expr pos:start="3:62" pos:end="3:79"><name pos:start="3:62" pos:end="3:75">NUM_DCT_TOKENS</name> <operator pos:start="3:77" pos:end="3:77">-</operator> <literal type="number" pos:start="3:79" pos:end="3:79">1</literal></expr>]</index></name></decl></parameter>,

                                        <parameter pos:start="5:41" pos:end="5:45"><decl pos:start="5:41" pos:end="5:45"><type pos:start="5:41" pos:end="5:45"><name pos:start="5:41" pos:end="5:43">int</name></type> <name pos:start="5:45" pos:end="5:45">i</name></decl></parameter>, <parameter pos:start="5:48" pos:end="5:66"><decl pos:start="5:48" pos:end="5:66"><type pos:start="5:48" pos:end="5:66"><name pos:start="5:48" pos:end="5:54">uint8_t</name> <modifier pos:start="5:56" pos:end="5:56">*</modifier></type><name pos:start="5:57" pos:end="5:66">token_prob</name></decl></parameter>,

                                        <parameter pos:start="7:41" pos:end="7:55"><decl pos:start="7:41" pos:end="7:55"><type pos:start="7:41" pos:end="7:52"><name pos:start="7:41" pos:end="7:47">int16_t</name></type> <name pos:start="7:49" pos:end="7:55"><name pos:start="7:49" pos:end="7:52">qmul</name><index pos:start="7:53" pos:end="7:55">[<expr pos:start="7:54" pos:end="7:54"><literal type="number" pos:start="7:54" pos:end="7:54">2</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="109:1">{<block_content pos:start="11:5" pos:end="107:13">

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:18">VP56RangeCoder</name></type> <name pos:start="11:20" pos:end="11:20">c</name> <init pos:start="11:22" pos:end="11:25">= <expr pos:start="11:24" pos:end="11:25"><operator pos:start="11:24" pos:end="11:24">*</operator><name pos:start="11:25" pos:end="11:25">r</name></expr></init></decl>;</decl_stmt>

    <goto pos:start="13:5" pos:end="13:18">goto <name pos:start="13:10" pos:end="13:17">skip_eob</name>;</goto>

    <do pos:start="15:5" pos:end="101:23">do <block pos:start="15:8" pos:end="101:5">{<block_content pos:start="17:9" pos:end="99:79">

        <decl_stmt pos:start="17:9" pos:end="17:18"><decl pos:start="17:9" pos:end="17:17"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:17">coeff</name></decl>;</decl_stmt>

        <if_stmt pos:start="19:9" pos:end="21:18"><if pos:start="19:9" pos:end="21:18">if <condition pos:start="19:12" pos:end="19:58">(<expr pos:start="19:13" pos:end="19:57"><operator pos:start="19:13" pos:end="19:13">!</operator><call pos:start="19:14" pos:end="19:57"><name pos:start="19:14" pos:end="19:38">vp56_rac_get_prob_branchy</name><argument_list pos:start="19:39" pos:end="19:57">(<argument pos:start="19:40" pos:end="19:41"><expr pos:start="19:40" pos:end="19:41"><operator pos:start="19:40" pos:end="19:40">&amp;</operator><name pos:start="19:41" pos:end="19:41">c</name></expr></argument>, <argument pos:start="19:44" pos:end="19:56"><expr pos:start="19:44" pos:end="19:56"><name pos:start="19:44" pos:end="19:56"><name pos:start="19:44" pos:end="19:53">token_prob</name><index pos:start="19:54" pos:end="19:56">[<expr pos:start="19:55" pos:end="19:55"><literal type="number" pos:start="19:55" pos:end="19:55">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:18"><block_content pos:start="21:13" pos:end="21:18">   <comment type="line" pos:start="19:62" pos:end="19:71">// DCT_EOB</comment>

            <break pos:start="21:13" pos:end="21:18">break;</break></block_content></block></if></if_stmt>



<label pos:start="25:1" pos:end="25:9"><name pos:start="25:1" pos:end="25:8">skip_eob</name>:</label>

        <if_stmt pos:start="27:9" pos:end="37:9"><if pos:start="27:9" pos:end="37:9">if <condition pos:start="27:12" pos:end="27:58">(<expr pos:start="27:13" pos:end="27:57"><operator pos:start="27:13" pos:end="27:13">!</operator><call pos:start="27:14" pos:end="27:57"><name pos:start="27:14" pos:end="27:38">vp56_rac_get_prob_branchy</name><argument_list pos:start="27:39" pos:end="27:57">(<argument pos:start="27:40" pos:end="27:41"><expr pos:start="27:40" pos:end="27:41"><operator pos:start="27:40" pos:end="27:40">&amp;</operator><name pos:start="27:41" pos:end="27:41">c</name></expr></argument>, <argument pos:start="27:44" pos:end="27:56"><expr pos:start="27:44" pos:end="27:56"><name pos:start="27:44" pos:end="27:56"><name pos:start="27:44" pos:end="27:53">token_prob</name><index pos:start="27:54" pos:end="27:56">[<expr pos:start="27:55" pos:end="27:55"><literal type="number" pos:start="27:55" pos:end="27:55">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:60" pos:end="37:9">{<block_content pos:start="29:13" pos:end="35:26"> <comment type="line" pos:start="27:62" pos:end="27:69">// DCT_0</comment>

            <if_stmt pos:start="29:13" pos:end="31:22"><if pos:start="29:13" pos:end="31:22">if <condition pos:start="29:16" pos:end="29:26">(<expr pos:start="29:17" pos:end="29:25"><operator pos:start="29:17" pos:end="29:18">++</operator><name pos:start="29:19" pos:end="29:19">i</name> <operator pos:start="29:21" pos:end="29:22">==</operator> <literal type="number" pos:start="29:24" pos:end="29:25">16</literal></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:22"><block_content pos:start="31:17" pos:end="31:22">

                <break pos:start="31:17" pos:end="31:22">break;</break></block_content></block></if></if_stmt> <comment type="line" pos:start="31:24" pos:end="31:67">// invalid input; blocks should end with EOB</comment>

            <expr_stmt pos:start="33:13" pos:end="33:37"><expr pos:start="33:13" pos:end="33:36"><name pos:start="33:13" pos:end="33:22">token_prob</name> <operator pos:start="33:24" pos:end="33:24">=</operator> <name pos:start="33:26" pos:end="33:36"><name pos:start="33:26" pos:end="33:30">probs</name><index pos:start="33:31" pos:end="33:33">[<expr pos:start="33:32" pos:end="33:32"><name pos:start="33:32" pos:end="33:32">i</name></expr>]</index><index pos:start="33:34" pos:end="33:36">[<expr pos:start="33:35" pos:end="33:35"><literal type="number" pos:start="33:35" pos:end="33:35">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <goto pos:start="35:13" pos:end="35:26">goto <name pos:start="35:18" pos:end="35:25">skip_eob</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="41:9" pos:end="97:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:58">(<expr pos:start="41:13" pos:end="41:57"><operator pos:start="41:13" pos:end="41:13">!</operator><call pos:start="41:14" pos:end="41:57"><name pos:start="41:14" pos:end="41:38">vp56_rac_get_prob_branchy</name><argument_list pos:start="41:39" pos:end="41:57">(<argument pos:start="41:40" pos:end="41:41"><expr pos:start="41:40" pos:end="41:41"><operator pos:start="41:40" pos:end="41:40">&amp;</operator><name pos:start="41:41" pos:end="41:41">c</name></expr></argument>, <argument pos:start="41:44" pos:end="41:56"><expr pos:start="41:44" pos:end="41:56"><name pos:start="41:44" pos:end="41:56"><name pos:start="41:44" pos:end="41:53">token_prob</name><index pos:start="41:54" pos:end="41:56">[<expr pos:start="41:55" pos:end="41:55"><literal type="number" pos:start="41:55" pos:end="41:55">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:60" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:41"> <comment type="line" pos:start="41:62" pos:end="41:69">// DCT_1</comment>

            <expr_stmt pos:start="43:13" pos:end="43:22"><expr pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:17">coeff</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <literal type="number" pos:start="43:21" pos:end="43:21">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:41"><expr pos:start="45:13" pos:end="45:40"><name pos:start="45:13" pos:end="45:22">token_prob</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:40"><name pos:start="45:26" pos:end="45:30">probs</name><index pos:start="45:31" pos:end="45:37">[<expr pos:start="45:32" pos:end="45:36"><name pos:start="45:32" pos:end="45:32">i</name> <operator pos:start="45:34" pos:end="45:34">+</operator> <literal type="number" pos:start="45:36" pos:end="45:36">1</literal></expr>]</index><index pos:start="45:38" pos:end="45:40">[<expr pos:start="45:39" pos:end="45:39"><literal type="number" pos:start="45:39" pos:end="45:39">1</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="97:9">else <block pos:start="47:16" pos:end="97:9">{<block_content pos:start="49:13" pos:end="95:41">

            <if_stmt pos:start="49:13" pos:end="93:13"><if pos:start="49:13" pos:end="59:13">if <condition pos:start="49:16" pos:end="49:62">(<expr pos:start="49:17" pos:end="49:61"><operator pos:start="49:17" pos:end="49:17">!</operator><call pos:start="49:18" pos:end="49:61"><name pos:start="49:18" pos:end="49:42">vp56_rac_get_prob_branchy</name><argument_list pos:start="49:43" pos:end="49:61">(<argument pos:start="49:44" pos:end="49:45"><expr pos:start="49:44" pos:end="49:45"><operator pos:start="49:44" pos:end="49:44">&amp;</operator><name pos:start="49:45" pos:end="49:45">c</name></expr></argument>, <argument pos:start="49:48" pos:end="49:60"><expr pos:start="49:48" pos:end="49:60"><name pos:start="49:48" pos:end="49:60"><name pos:start="49:48" pos:end="49:57">token_prob</name><index pos:start="49:58" pos:end="49:60">[<expr pos:start="49:59" pos:end="49:59"><literal type="number" pos:start="49:59" pos:end="49:59">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:64" pos:end="59:13">{<block_content pos:start="51:17" pos:end="57:27"> <comment type="line" pos:start="49:66" pos:end="49:77">// DCT 2,3,4</comment>

                <expr_stmt pos:start="51:17" pos:end="51:69"><expr pos:start="51:17" pos:end="51:68"><name pos:start="51:17" pos:end="51:21">coeff</name> <operator pos:start="51:23" pos:end="51:23">=</operator> <call pos:start="51:25" pos:end="51:68"><name pos:start="51:25" pos:end="51:49">vp56_rac_get_prob_branchy</name><argument_list pos:start="51:50" pos:end="51:68">(<argument pos:start="51:51" pos:end="51:52"><expr pos:start="51:51" pos:end="51:52"><operator pos:start="51:51" pos:end="51:51">&amp;</operator><name pos:start="51:52" pos:end="51:52">c</name></expr></argument>, <argument pos:start="51:55" pos:end="51:67"><expr pos:start="51:55" pos:end="51:67"><name pos:start="51:55" pos:end="51:67"><name pos:start="51:55" pos:end="51:64">token_prob</name><index pos:start="51:65" pos:end="51:67">[<expr pos:start="51:66" pos:end="51:66"><literal type="number" pos:start="51:66" pos:end="51:66">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="53:17" pos:end="55:66"><if pos:start="53:17" pos:end="55:66">if <condition pos:start="53:20" pos:end="53:26">(<expr pos:start="53:21" pos:end="53:25"><name pos:start="53:21" pos:end="53:25">coeff</name></expr>)</condition><block type="pseudo" pos:start="55:21" pos:end="55:66"><block_content pos:start="55:21" pos:end="55:66">

                    <expr_stmt pos:start="55:21" pos:end="55:66"><expr pos:start="55:21" pos:end="55:65"><name pos:start="55:21" pos:end="55:25">coeff</name> <operator pos:start="55:27" pos:end="55:28">+=</operator> <call pos:start="55:30" pos:end="55:65"><name pos:start="55:30" pos:end="55:46">vp56_rac_get_prob</name><argument_list pos:start="55:47" pos:end="55:65">(<argument pos:start="55:48" pos:end="55:49"><expr pos:start="55:48" pos:end="55:49"><operator pos:start="55:48" pos:end="55:48">&amp;</operator><name pos:start="55:49" pos:end="55:49">c</name></expr></argument>, <argument pos:start="55:52" pos:end="55:64"><expr pos:start="55:52" pos:end="55:64"><name pos:start="55:52" pos:end="55:64"><name pos:start="55:52" pos:end="55:61">token_prob</name><index pos:start="55:62" pos:end="55:64">[<expr pos:start="55:63" pos:end="55:63"><literal type="number" pos:start="55:63" pos:end="55:63">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:27"><expr pos:start="57:17" pos:end="57:26"><name pos:start="57:17" pos:end="57:21">coeff</name> <operator pos:start="57:23" pos:end="57:24">+=</operator> <literal type="number" pos:start="57:26" pos:end="57:26">2</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="59:15" pos:end="93:13">else <block pos:start="59:20" pos:end="93:13">{<block_content pos:start="63:17" pos:end="91:17">

                <comment type="line" pos:start="61:17" pos:end="61:27">// DCT_CAT*</comment>

                <if_stmt pos:start="63:17" pos:end="91:17"><if pos:start="63:17" pos:end="79:17">if <condition pos:start="63:20" pos:end="63:66">(<expr pos:start="63:21" pos:end="63:65"><operator pos:start="63:21" pos:end="63:21">!</operator><call pos:start="63:22" pos:end="63:65"><name pos:start="63:22" pos:end="63:46">vp56_rac_get_prob_branchy</name><argument_list pos:start="63:47" pos:end="63:65">(<argument pos:start="63:48" pos:end="63:49"><expr pos:start="63:48" pos:end="63:49"><operator pos:start="63:48" pos:end="63:48">&amp;</operator><name pos:start="63:49" pos:end="63:49">c</name></expr></argument>, <argument pos:start="63:52" pos:end="63:64"><expr pos:start="63:52" pos:end="63:64"><name pos:start="63:52" pos:end="63:64"><name pos:start="63:52" pos:end="63:61">token_prob</name><index pos:start="63:62" pos:end="63:64">[<expr pos:start="63:63" pos:end="63:63"><literal type="number" pos:start="63:63" pos:end="63:63">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="63:68" pos:end="79:17">{<block_content pos:start="65:21" pos:end="77:21">

                    <if_stmt pos:start="65:21" pos:end="77:21"><if pos:start="65:21" pos:end="69:21">if <condition pos:start="65:24" pos:end="65:70">(<expr pos:start="65:25" pos:end="65:69"><operator pos:start="65:25" pos:end="65:25">!</operator><call pos:start="65:26" pos:end="65:69"><name pos:start="65:26" pos:end="65:50">vp56_rac_get_prob_branchy</name><argument_list pos:start="65:51" pos:end="65:69">(<argument pos:start="65:52" pos:end="65:53"><expr pos:start="65:52" pos:end="65:53"><operator pos:start="65:52" pos:end="65:52">&amp;</operator><name pos:start="65:53" pos:end="65:53">c</name></expr></argument>, <argument pos:start="65:56" pos:end="65:68"><expr pos:start="65:56" pos:end="65:68"><name pos:start="65:56" pos:end="65:68"><name pos:start="65:56" pos:end="65:65">token_prob</name><index pos:start="65:66" pos:end="65:68">[<expr pos:start="65:67" pos:end="65:67"><literal type="number" pos:start="65:67" pos:end="65:67">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:72" pos:end="69:21">{<block_content pos:start="67:25" pos:end="67:80"> <comment type="line" pos:start="65:74" pos:end="65:84">// DCT_CAT1</comment>

                        <expr_stmt pos:start="67:25" pos:end="67:80"><expr pos:start="67:25" pos:end="67:79"><name pos:start="67:25" pos:end="67:29">coeff</name> <operator pos:start="67:31" pos:end="67:31">=</operator> <literal type="number" pos:start="67:33" pos:end="67:35">5</literal> <operator pos:start="67:35" pos:end="67:35">+</operator> <call pos:start="67:37" pos:end="67:79"><name pos:start="67:37" pos:end="67:53">vp56_rac_get_prob</name><argument_list pos:start="67:54" pos:end="67:79">(<argument pos:start="67:55" pos:end="67:56"><expr pos:start="67:55" pos:end="67:56"><operator pos:start="67:55" pos:end="67:55">&amp;</operator><name pos:start="67:56" pos:end="67:56">c</name></expr></argument>, <argument pos:start="67:59" pos:end="67:78"><expr pos:start="67:59" pos:end="67:78"><name pos:start="67:59" pos:end="67:78"><name pos:start="67:59" pos:end="67:75">vp8_dct_cat1_prob</name><index pos:start="67:76" pos:end="67:78">[<expr pos:start="67:77" pos:end="67:77"><literal type="number" pos:start="67:77" pos:end="67:77">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="69:23" pos:end="77:21">else <block pos:start="69:28" pos:end="77:21">{<block_content pos:start="71:25" pos:end="75:77">                                    <comment type="line" pos:start="69:65" pos:end="69:75">// DCT_CAT2</comment>

                        <expr_stmt pos:start="71:25" pos:end="71:35"><expr pos:start="71:25" pos:end="71:34"><name pos:start="71:25" pos:end="71:29">coeff</name>  <operator pos:start="71:32" pos:end="71:32">=</operator> <literal type="number" pos:start="71:34" pos:end="71:34">7</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="73:25" pos:end="73:82"><expr pos:start="73:25" pos:end="73:81"><name pos:start="73:25" pos:end="73:29">coeff</name> <operator pos:start="73:31" pos:end="73:32">+=</operator> <call pos:start="73:34" pos:end="73:76"><name pos:start="73:34" pos:end="73:50">vp56_rac_get_prob</name><argument_list pos:start="73:51" pos:end="73:76">(<argument pos:start="73:52" pos:end="73:53"><expr pos:start="73:52" pos:end="73:53"><operator pos:start="73:52" pos:end="73:52">&amp;</operator><name pos:start="73:53" pos:end="73:53">c</name></expr></argument>, <argument pos:start="73:56" pos:end="73:75"><expr pos:start="73:56" pos:end="73:75"><name pos:start="73:56" pos:end="73:75"><name pos:start="73:56" pos:end="73:72">vp8_dct_cat2_prob</name><index pos:start="73:73" pos:end="73:75">[<expr pos:start="73:74" pos:end="73:74"><literal type="number" pos:start="73:74" pos:end="73:74">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="73:78" pos:end="73:79">&lt;&lt;</operator> <literal type="number" pos:start="73:81" pos:end="73:81">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="75:25" pos:end="75:77"><expr pos:start="75:25" pos:end="75:76"><name pos:start="75:25" pos:end="75:29">coeff</name> <operator pos:start="75:31" pos:end="75:32">+=</operator> <call pos:start="75:34" pos:end="75:76"><name pos:start="75:34" pos:end="75:50">vp56_rac_get_prob</name><argument_list pos:start="75:51" pos:end="75:76">(<argument pos:start="75:52" pos:end="75:53"><expr pos:start="75:52" pos:end="75:53"><operator pos:start="75:52" pos:end="75:52">&amp;</operator><name pos:start="75:53" pos:end="75:53">c</name></expr></argument>, <argument pos:start="75:56" pos:end="75:75"><expr pos:start="75:56" pos:end="75:75"><name pos:start="75:56" pos:end="75:75"><name pos:start="75:56" pos:end="75:72">vp8_dct_cat2_prob</name><index pos:start="75:73" pos:end="75:75">[<expr pos:start="75:74" pos:end="75:74"><literal type="number" pos:start="75:74" pos:end="75:74">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="79:19" pos:end="91:17">else <block pos:start="79:24" pos:end="91:17">{<block_content pos:start="81:21" pos:end="89:77">    <comment type="line" pos:start="79:29" pos:end="79:46">// DCT_CAT3 and up</comment>

                    <decl_stmt pos:start="81:21" pos:end="81:67"><decl pos:start="81:21" pos:end="81:66"><type pos:start="81:21" pos:end="81:23"><name pos:start="81:21" pos:end="81:23">int</name></type> <name pos:start="81:25" pos:end="81:25">a</name>   <init pos:start="81:29" pos:end="81:66">= <expr pos:start="81:31" pos:end="81:66"><call pos:start="81:31" pos:end="81:66"><name pos:start="81:31" pos:end="81:47">vp56_rac_get_prob</name><argument_list pos:start="81:48" pos:end="81:66">(<argument pos:start="81:49" pos:end="81:50"><expr pos:start="81:49" pos:end="81:50"><operator pos:start="81:49" pos:end="81:49">&amp;</operator><name pos:start="81:50" pos:end="81:50">c</name></expr></argument>, <argument pos:start="81:53" pos:end="81:65"><expr pos:start="81:53" pos:end="81:65"><name pos:start="81:53" pos:end="81:65"><name pos:start="81:53" pos:end="81:62">token_prob</name><index pos:start="81:63" pos:end="81:65">[<expr pos:start="81:64" pos:end="81:64"><literal type="number" pos:start="81:64" pos:end="81:64">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="83:21" pos:end="83:71"><decl pos:start="83:21" pos:end="83:70"><type pos:start="83:21" pos:end="83:23"><name pos:start="83:21" pos:end="83:23">int</name></type> <name pos:start="83:25" pos:end="83:25">b</name>   <init pos:start="83:29" pos:end="83:70">= <expr pos:start="83:31" pos:end="83:70"><call pos:start="83:31" pos:end="83:70"><name pos:start="83:31" pos:end="83:47">vp56_rac_get_prob</name><argument_list pos:start="83:48" pos:end="83:70">(<argument pos:start="83:49" pos:end="83:50"><expr pos:start="83:49" pos:end="83:50"><operator pos:start="83:49" pos:end="83:49">&amp;</operator><name pos:start="83:50" pos:end="83:50">c</name></expr></argument>, <argument pos:start="83:53" pos:end="83:69"><expr pos:start="83:53" pos:end="83:69"><name pos:start="83:53" pos:end="83:69"><name pos:start="83:53" pos:end="83:62">token_prob</name><index pos:start="83:63" pos:end="83:69">[<expr pos:start="83:64" pos:end="83:68"><literal type="number" pos:start="83:64" pos:end="83:66">9</literal> <operator pos:start="83:66" pos:end="83:66">+</operator> <name pos:start="83:68" pos:end="83:68">a</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="85:21" pos:end="85:43"><decl pos:start="85:21" pos:end="85:42"><type pos:start="85:21" pos:end="85:23"><name pos:start="85:21" pos:end="85:23">int</name></type> <name pos:start="85:25" pos:end="85:27">cat</name> <init pos:start="85:29" pos:end="85:42">= <expr pos:start="85:31" pos:end="85:42"><operator pos:start="85:31" pos:end="85:31">(</operator><name pos:start="85:32" pos:end="85:32">a</name> <operator pos:start="85:34" pos:end="85:35">&lt;&lt;</operator> <literal type="number" pos:start="85:37" pos:end="85:37">1</literal><operator pos:start="85:38" pos:end="85:38">)</operator> <operator pos:start="85:40" pos:end="85:40">+</operator> <name pos:start="85:42" pos:end="85:42">b</name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="87:21" pos:end="87:44"><expr pos:start="87:21" pos:end="87:43"><name pos:start="87:21" pos:end="87:25">coeff</name>  <operator pos:start="87:28" pos:end="87:28">=</operator> <literal type="number" pos:start="87:30" pos:end="87:32">3</literal> <operator pos:start="87:32" pos:end="87:32">+</operator> <operator pos:start="87:34" pos:end="87:34">(</operator><literal type="number" pos:start="87:35" pos:end="87:35">8</literal> <operator pos:start="87:37" pos:end="87:38">&lt;&lt;</operator> <name pos:start="87:40" pos:end="87:42">cat</name><operator pos:start="87:43" pos:end="87:43">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="89:21" pos:end="89:77"><expr pos:start="89:21" pos:end="89:76"><name pos:start="89:21" pos:end="89:25">coeff</name> <operator pos:start="89:27" pos:end="89:28">+=</operator> <call pos:start="89:30" pos:end="89:76"><name pos:start="89:30" pos:end="89:46">vp8_rac_get_coeff</name><argument_list pos:start="89:47" pos:end="89:76">(<argument pos:start="89:48" pos:end="89:49"><expr pos:start="89:48" pos:end="89:49"><operator pos:start="89:48" pos:end="89:48">&amp;</operator><name pos:start="89:49" pos:end="89:49">c</name></expr></argument>, <argument pos:start="89:52" pos:end="89:75"><expr pos:start="89:52" pos:end="89:75"><name pos:start="89:52" pos:end="89:75"><name pos:start="89:52" pos:end="89:70">ff_vp8_dct_cat_prob</name><index pos:start="89:71" pos:end="89:75">[<expr pos:start="89:72" pos:end="89:74"><name pos:start="89:72" pos:end="89:74">cat</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:41"><expr pos:start="95:13" pos:end="95:40"><name pos:start="95:13" pos:end="95:22">token_prob</name> <operator pos:start="95:24" pos:end="95:24">=</operator> <name pos:start="95:26" pos:end="95:40"><name pos:start="95:26" pos:end="95:30">probs</name><index pos:start="95:31" pos:end="95:37">[<expr pos:start="95:32" pos:end="95:36"><name pos:start="95:32" pos:end="95:32">i</name> <operator pos:start="95:34" pos:end="95:34">+</operator> <literal type="number" pos:start="95:36" pos:end="95:36">1</literal></expr>]</index><index pos:start="95:38" pos:end="95:40">[<expr pos:start="95:39" pos:end="95:39"><literal type="number" pos:start="95:39" pos:end="95:39">2</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:79"><expr pos:start="99:9" pos:end="99:78"><name pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:13">block</name><index pos:start="99:14" pos:end="99:29">[<expr pos:start="99:15" pos:end="99:28"><name pos:start="99:15" pos:end="99:28"><name pos:start="99:15" pos:end="99:25">zigzag_scan</name><index pos:start="99:26" pos:end="99:28">[<expr pos:start="99:27" pos:end="99:27"><name pos:start="99:27" pos:end="99:27">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="99:31" pos:end="99:31">=</operator> <operator pos:start="99:33" pos:end="99:33">(</operator><ternary pos:start="99:34" pos:end="99:65"><condition pos:start="99:34" pos:end="99:50"><expr pos:start="99:34" pos:end="99:48"><call pos:start="99:34" pos:end="99:48"><name pos:start="99:34" pos:end="99:44">vp8_rac_get</name><argument_list pos:start="99:45" pos:end="99:48">(<argument pos:start="99:46" pos:end="99:47"><expr pos:start="99:46" pos:end="99:47"><operator pos:start="99:46" pos:end="99:46">&amp;</operator><name pos:start="99:47" pos:end="99:47">c</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="99:52" pos:end="99:57"> <expr pos:start="99:52" pos:end="99:57"><operator pos:start="99:52" pos:end="99:52">-</operator><name pos:start="99:53" pos:end="99:57">coeff</name></expr> </then><else pos:start="99:59" pos:end="99:65">: <expr pos:start="99:61" pos:end="99:65"><name pos:start="99:61" pos:end="99:65">coeff</name></expr></else></ternary><operator pos:start="99:66" pos:end="99:66">)</operator> <operator pos:start="99:68" pos:end="99:68">*</operator> <name pos:start="99:70" pos:end="99:78"><name pos:start="99:70" pos:end="99:73">qmul</name><index pos:start="99:74" pos:end="99:78">[<expr pos:start="99:75" pos:end="99:77"><operator pos:start="99:75" pos:end="99:75">!</operator><operator pos:start="99:76" pos:end="99:76">!</operator><name pos:start="99:77" pos:end="99:77">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="101:13" pos:end="101:22">(<expr pos:start="101:14" pos:end="101:21"><operator pos:start="101:14" pos:end="101:15">++</operator><name pos:start="101:16" pos:end="101:16">i</name> <operator pos:start="101:18" pos:end="101:18">&lt;</operator> <literal type="number" pos:start="101:20" pos:end="101:21">16</literal></expr>)</condition>;</do>



    <expr_stmt pos:start="105:5" pos:end="105:11"><expr pos:start="105:5" pos:end="105:10"><operator pos:start="105:5" pos:end="105:5">*</operator><name pos:start="105:6" pos:end="105:6">r</name> <operator pos:start="105:8" pos:end="105:8">=</operator> <name pos:start="105:10" pos:end="105:10">c</name></expr>;</expr_stmt>

    <return pos:start="107:5" pos:end="107:13">return <expr pos:start="107:12" pos:end="107:12"><name pos:start="107:12" pos:end="107:12">i</name></expr>;</return>

</block_content>}</block></function>
</unit>
