<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22305.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">mov_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="73:13">{<block_content pos:start="3:5" pos:end="73:13">
    <decl_stmt pos:start="3:5" pos:end="3:35"><decl pos:start="3:5" pos:end="3:34"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14">MOVContext</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type><name pos:start="3:17" pos:end="3:19">mov</name> <init pos:start="3:21" pos:end="3:34">= <expr pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:23">s</name><operator pos:start="3:24" pos:end="3:25">-&gt;</operator><name pos:start="3:26" pos:end="3:34">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:25"><decl pos:start="4:5" pos:end="4:24"><type pos:start="4:5" pos:end="4:22"><name pos:start="4:5" pos:end="4:20">MOVStreamContext</name> <modifier pos:start="4:22" pos:end="4:22">*</modifier></type><name pos:start="4:23" pos:end="4:24">sc</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">AVIndexEntry</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:24">sample</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:24"><decl pos:start="6:5" pos:end="6:23"><type pos:start="6:5" pos:end="6:14"><name pos:start="6:5" pos:end="6:12">AVStream</name> <modifier pos:start="6:14" pos:end="6:14">*</modifier></type><name pos:start="6:15" pos:end="6:16">st</name> <init pos:start="6:18" pos:end="6:23">= <expr pos:start="6:20" pos:end="6:23"><name pos:start="6:20" pos:end="6:23">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:16"><expr pos:start="8:5" pos:end="8:15"><name pos:start="8:5" pos:end="8:11"><name pos:start="8:5" pos:end="8:7">mov</name><operator pos:start="8:8" pos:end="8:9">-&gt;</operator><name pos:start="8:10" pos:end="8:11">fc</name></name> <operator pos:start="8:13" pos:end="8:13">=</operator> <name pos:start="8:15" pos:end="8:15">s</name></expr>;</expr_stmt>
 <label pos:start="9:2" pos:end="9:7"><name pos:start="9:2" pos:end="9:6">retry</name>:</label>
    <expr_stmt pos:start="10:5" pos:end="10:42"><expr pos:start="10:5" pos:end="10:41"><name pos:start="10:5" pos:end="10:10">sample</name> <operator pos:start="10:12" pos:end="10:12">=</operator> <call pos:start="10:14" pos:end="10:41"><name pos:start="10:14" pos:end="10:33">mov_find_next_sample</name><argument_list pos:start="10:34" pos:end="10:41">(<argument pos:start="10:35" pos:end="10:35"><expr pos:start="10:35" pos:end="10:35"><name pos:start="10:35" pos:end="10:35">s</name></expr></argument>, <argument pos:start="10:38" pos:end="10:40"><expr pos:start="10:38" pos:end="10:40"><operator pos:start="10:38" pos:end="10:38">&amp;</operator><name pos:start="10:39" pos:end="10:40">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="11:5" pos:end="73:13"><if pos:start="11:5" pos:end="73:13">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:15">sample</name></expr>)</condition> <block pos:start="11:18" pos:end="73:13">{<block_content pos:start="12:9" pos:end="73:13">
        <expr_stmt pos:start="12:9" pos:end="12:28"><expr pos:start="12:9" pos:end="12:27"><name pos:start="12:9" pos:end="12:23"><name pos:start="12:9" pos:end="12:11">mov</name><operator pos:start="12:12" pos:end="12:13">-&gt;</operator><name pos:start="12:14" pos:end="12:23">found_mdat</name></name> <operator pos:start="12:25" pos:end="12:25">=</operator> <literal type="number" pos:start="12:27" pos:end="12:27">0</literal></expr>;</expr_stmt>
        <if_stmt pos:start="13:9" pos:end="14:31"><if pos:start="13:9" pos:end="14:31">if <condition pos:start="13:12" pos:end="13:33">(<expr pos:start="13:13" pos:end="13:32"><operator pos:start="13:13" pos:end="13:13">!</operator><name pos:start="13:14" pos:end="13:32"><name pos:start="13:14" pos:end="13:16">mov</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:32">next_root_atom</name></name></expr>)</condition><block type="pseudo" pos:start="14:13" pos:end="14:31"><block_content pos:start="14:13" pos:end="14:31">
            <return pos:start="14:13" pos:end="14:31">return <expr pos:start="14:20" pos:end="14:30"><name pos:start="14:20" pos:end="14:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:56"><expr pos:start="15:9" pos:end="15:55"><call pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:17">avio_seek</name><argument_list pos:start="15:18" pos:end="15:55">(<argument pos:start="15:19" pos:end="15:23"><expr pos:start="15:19" pos:end="15:23"><name pos:start="15:19" pos:end="15:23"><name pos:start="15:19" pos:end="15:19">s</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:23">pb</name></name></expr></argument>, <argument pos:start="15:26" pos:end="15:44"><expr pos:start="15:26" pos:end="15:44"><name pos:start="15:26" pos:end="15:44"><name pos:start="15:26" pos:end="15:28">mov</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:44">next_root_atom</name></name></expr></argument>, <argument pos:start="15:47" pos:end="15:54"><expr pos:start="15:47" pos:end="15:54"><name pos:start="15:47" pos:end="15:54">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:32"><expr pos:start="16:9" pos:end="16:31"><name pos:start="16:9" pos:end="16:27"><name pos:start="16:9" pos:end="16:11">mov</name><operator pos:start="16:12" pos:end="16:13">-&gt;</operator><name pos:start="16:14" pos:end="16:27">next_root_atom</name></name> <operator pos:start="16:29" pos:end="16:29">=</operator> <literal type="number" pos:start="16:31" pos:end="16:31">0</literal></expr>;</expr_stmt>
        <if_stmt pos:start="17:9" pos:end="19:31"><if pos:start="17:9" pos:end="19:31">if <condition pos:start="17:12" pos:end="18:28">(<expr pos:start="17:13" pos:end="18:27"><macro pos:start="17:13" pos:end="17:81"><name pos:start="17:13" pos:end="17:28">mov_read_default</name><argument_list pos:start="17:29" pos:end="17:81">(<argument pos:start="17:30" pos:end="17:32">mov</argument>, <argument pos:start="17:35" pos:end="17:39">s-&gt;pb</argument>, <argument pos:start="17:42" pos:end="17:67">(MOVAtom){ AV_RL32(<literal type="string" pos:start="17:61" pos:end="17:66">"root"</literal>)</argument>, <argument pos:start="17:70" pos:end="17:80">INT64_MAX }</argument>)</argument_list></macro> <operator pos:start="17:83" pos:end="17:83">&lt;</operator> <literal type="number" pos:start="17:85" pos:end="17:85">0</literal> <operator pos:start="17:87" pos:end="17:88">||</operator>
            <call pos:start="18:13" pos:end="18:27"><name pos:start="18:13" pos:end="18:20">url_feof</name><argument_list pos:start="18:21" pos:end="18:27">(<argument pos:start="18:22" pos:end="18:26"><expr pos:start="18:22" pos:end="18:26"><name pos:start="18:22" pos:end="18:26"><name pos:start="18:22" pos:end="18:22">s</name><operator pos:start="18:23" pos:end="18:24">-&gt;</operator><name pos:start="18:25" pos:end="18:26">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:31"><block_content pos:start="19:13" pos:end="19:31">
            <return pos:start="19:13" pos:end="19:31">return <expr pos:start="19:20" pos:end="19:30"><name pos:start="19:20" pos:end="19:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="20:9" pos:end="20:77"><expr pos:start="20:9" pos:end="20:76"><call pos:start="20:9" pos:end="20:76"><name pos:start="20:9" pos:end="20:15">av_dlog</name><argument_list pos:start="20:16" pos:end="20:76">(<argument pos:start="20:17" pos:end="20:17"><expr pos:start="20:17" pos:end="20:17"><name pos:start="20:17" pos:end="20:17">s</name></expr></argument>, <argument pos:start="20:20" pos:end="20:57"><expr pos:start="20:20" pos:end="20:57"><literal type="string" pos:start="20:20" pos:end="20:47">"read fragments, offset 0x%"</literal><name pos:start="20:48" pos:end="20:53">PRIx64</name><literal type="string" pos:start="20:54" pos:end="20:57">"\n"</literal></expr></argument>, <argument pos:start="20:60" pos:end="20:75"><expr pos:start="20:60" pos:end="20:75"><call pos:start="20:60" pos:end="20:75"><name pos:start="20:60" pos:end="20:68">avio_tell</name><argument_list pos:start="20:69" pos:end="20:75">(<argument pos:start="20:70" pos:end="20:74"><expr pos:start="20:70" pos:end="20:74"><name pos:start="20:70" pos:end="20:74"><name pos:start="20:70" pos:end="20:70">s</name><operator pos:start="20:71" pos:end="20:72">-&gt;</operator><name pos:start="20:73" pos:end="20:74">pb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <goto pos:start="21:9" pos:end="21:19">goto <name pos:start="21:14" pos:end="21:18">retry</name>;</goto>
    <expr_stmt pos:start="22:5" pos:end="22:23"><expr pos:start="22:5" pos:end="22:22"><name pos:start="22:5" pos:end="22:6">sc</name> <operator pos:start="22:8" pos:end="22:8">=</operator> <name pos:start="22:10" pos:end="22:22"><name pos:start="22:10" pos:end="22:11">st</name><operator pos:start="22:12" pos:end="22:13">-&gt;</operator><name pos:start="22:14" pos:end="22:22">priv_data</name></name></expr>;</expr_stmt>
    <comment type="block" pos:start="23:5" pos:end="23:76">/* must be done just before reading, to avoid infinite loop on sample */</comment>
    <expr_stmt pos:start="24:5" pos:end="24:25"><expr pos:start="24:5" pos:end="24:24"><name pos:start="24:5" pos:end="24:22"><name pos:start="24:5" pos:end="24:6">sc</name><operator pos:start="24:7" pos:end="24:8">-&gt;</operator><name pos:start="24:9" pos:end="24:22">current_sample</name></name><operator pos:start="24:23" pos:end="24:24">++</operator></expr>;</expr_stmt>
    <if_stmt pos:start="25:5" pos:end="73:13"><if pos:start="25:5" pos:end="73:13">if <condition pos:start="25:8" pos:end="25:37">(<expr pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:10">st</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:19">discard</name></name> <operator pos:start="25:21" pos:end="25:22">!=</operator> <name pos:start="25:24" pos:end="25:36">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="25:39" pos:end="73:13">{<block_content pos:start="26:9" pos:end="73:13">
        <if_stmt pos:start="26:9" pos:end="73:13"><if pos:start="26:9" pos:end="73:13">if <condition pos:start="26:12" pos:end="26:68">(<expr pos:start="26:13" pos:end="26:67"><call pos:start="26:13" pos:end="26:52"><name pos:start="26:13" pos:end="26:21">avio_seek</name><argument_list pos:start="26:22" pos:end="26:52">(<argument pos:start="26:23" pos:end="26:28"><expr pos:start="26:23" pos:end="26:28"><name pos:start="26:23" pos:end="26:28"><name pos:start="26:23" pos:end="26:24">sc</name><operator pos:start="26:25" pos:end="26:26">-&gt;</operator><name pos:start="26:27" pos:end="26:28">pb</name></name></expr></argument>, <argument pos:start="26:31" pos:end="26:41"><expr pos:start="26:31" pos:end="26:41"><name pos:start="26:31" pos:end="26:41"><name pos:start="26:31" pos:end="26:36">sample</name><operator pos:start="26:37" pos:end="26:38">-&gt;</operator><name pos:start="26:39" pos:end="26:41">pos</name></name></expr></argument>, <argument pos:start="26:44" pos:end="26:51"><expr pos:start="26:44" pos:end="26:51"><name pos:start="26:44" pos:end="26:51">SEEK_SET</name></expr></argument>)</argument_list></call> <operator pos:start="26:54" pos:end="26:55">!=</operator> <name pos:start="26:57" pos:end="26:67"><name pos:start="26:57" pos:end="26:62">sample</name><operator pos:start="26:63" pos:end="26:64">-&gt;</operator><name pos:start="26:65" pos:end="26:67">pos</name></name></expr>)</condition> <block pos:start="26:70" pos:end="73:13">{<block_content pos:start="27:13" pos:end="73:13">
            <expr_stmt pos:start="27:13" pos:end="28:45"><expr pos:start="27:13" pos:end="28:44"><call pos:start="27:13" pos:end="28:44"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="28:44">(<argument pos:start="27:20" pos:end="27:26"><expr pos:start="27:20" pos:end="27:26"><name pos:start="27:20" pos:end="27:26"><name pos:start="27:20" pos:end="27:22">mov</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:26">fc</name></name></expr></argument>, <argument pos:start="27:29" pos:end="27:40"><expr pos:start="27:29" pos:end="27:40"><name pos:start="27:29" pos:end="27:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:43" pos:end="27:89"><expr pos:start="27:43" pos:end="27:89"><literal type="string" pos:start="27:43" pos:end="27:65">"stream %d, offset 0x%"</literal><name pos:start="27:66" pos:end="27:71">PRIx64</name><literal type="string" pos:start="27:72" pos:end="27:89">": partial file\n"</literal></expr></argument>,
                   <argument pos:start="28:20" pos:end="28:30"><expr pos:start="28:20" pos:end="28:30"><name pos:start="28:20" pos:end="28:30"><name pos:start="28:20" pos:end="28:21">sc</name><operator pos:start="28:22" pos:end="28:23">-&gt;</operator><name pos:start="28:24" pos:end="28:30">ffindex</name></name></expr></argument>, <argument pos:start="28:33" pos:end="28:43"><expr pos:start="28:33" pos:end="28:43"><name pos:start="28:33" pos:end="28:43"><name pos:start="28:33" pos:end="28:38">sample</name><operator pos:start="28:39" pos:end="28:40">-&gt;</operator><name pos:start="28:41" pos:end="28:43">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="29:13" pos:end="29:39">return <expr pos:start="29:20" pos:end="29:38"><name pos:start="29:20" pos:end="29:38">AVERROR_INVALIDDATA</name></expr>;</return>
        <expr_stmt pos:start="30:9" pos:end="30:55"><expr pos:start="30:9" pos:end="30:54"><name pos:start="30:9" pos:end="30:11">ret</name> <operator pos:start="30:13" pos:end="30:13">=</operator> <call pos:start="30:15" pos:end="30:54"><name pos:start="30:15" pos:end="30:27">av_get_packet</name><argument_list pos:start="30:28" pos:end="30:54">(<argument pos:start="30:29" pos:end="30:34"><expr pos:start="30:29" pos:end="30:34"><name pos:start="30:29" pos:end="30:34"><name pos:start="30:29" pos:end="30:30">sc</name><operator pos:start="30:31" pos:end="30:32">-&gt;</operator><name pos:start="30:33" pos:end="30:34">pb</name></name></expr></argument>, <argument pos:start="30:37" pos:end="30:39"><expr pos:start="30:37" pos:end="30:39"><name pos:start="30:37" pos:end="30:39">pkt</name></expr></argument>, <argument pos:start="30:42" pos:end="30:53"><expr pos:start="30:42" pos:end="30:53"><name pos:start="30:42" pos:end="30:53"><name pos:start="30:42" pos:end="30:47">sample</name><operator pos:start="30:48" pos:end="30:49">-&gt;</operator><name pos:start="30:50" pos:end="30:53">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="31:9" pos:end="32:23"><if pos:start="31:9" pos:end="32:23">if <condition pos:start="31:12" pos:end="31:20">(<expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr>)</condition><block type="pseudo" pos:start="32:13" pos:end="32:23"><block_content pos:start="32:13" pos:end="32:23">
            <return pos:start="32:13" pos:end="32:23">return <expr pos:start="32:20" pos:end="32:22"><name pos:start="32:20" pos:end="32:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <if_stmt pos:start="33:9" pos:end="73:13"><if pos:start="33:9" pos:end="73:13">if <condition pos:start="33:12" pos:end="33:28">(<expr pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:14">sc</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:27">has_palette</name></name></expr>)</condition> <block pos:start="33:30" pos:end="73:13">{<block_content pos:start="34:13" pos:end="73:13">
            <decl_stmt pos:start="34:13" pos:end="34:25"><decl pos:start="34:13" pos:end="34:24"><type pos:start="34:13" pos:end="34:21"><name pos:start="34:13" pos:end="34:19">uint8_t</name> <modifier pos:start="34:21" pos:end="34:21">*</modifier></type><name pos:start="34:22" pos:end="34:24">pal</name></decl>;</decl_stmt>
            <expr_stmt pos:start="35:13" pos:end="35:84"><expr pos:start="35:13" pos:end="35:83"><name pos:start="35:13" pos:end="35:15">pal</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:83"><name pos:start="35:19" pos:end="35:41">av_packet_new_side_data</name><argument_list pos:start="35:42" pos:end="35:83">(<argument pos:start="35:43" pos:end="35:45"><expr pos:start="35:43" pos:end="35:45"><name pos:start="35:43" pos:end="35:45">pkt</name></expr></argument>, <argument pos:start="35:48" pos:end="35:66"><expr pos:start="35:48" pos:end="35:66"><name pos:start="35:48" pos:end="35:66">AV_PKT_DATA_PALETTE</name></expr></argument>, <argument pos:start="35:69" pos:end="35:82"><expr pos:start="35:69" pos:end="35:82"><name pos:start="35:69" pos:end="35:82">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="36:13" pos:end="73:13"><if pos:start="36:13" pos:end="38:13">if <condition pos:start="36:16" pos:end="36:21">(<expr pos:start="36:17" pos:end="36:20"><operator pos:start="36:17" pos:end="36:17">!</operator><name pos:start="36:18" pos:end="36:20">pal</name></expr>)</condition> <block pos:start="36:23" pos:end="38:13">{<block_content pos:start="37:17" pos:end="37:83">
                <expr_stmt pos:start="37:17" pos:end="37:83"><expr pos:start="37:17" pos:end="37:82"><call pos:start="37:17" pos:end="37:82"><name pos:start="37:17" pos:end="37:22">av_log</name><argument_list pos:start="37:23" pos:end="37:82">(<argument pos:start="37:24" pos:end="37:30"><expr pos:start="37:24" pos:end="37:30"><name pos:start="37:24" pos:end="37:30"><name pos:start="37:24" pos:end="37:26">mov</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:30">fc</name></name></expr></argument>, <argument pos:start="37:33" pos:end="37:44"><expr pos:start="37:33" pos:end="37:44"><name pos:start="37:33" pos:end="37:44">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:47" pos:end="37:81"><expr pos:start="37:47" pos:end="37:81"><literal type="string" pos:start="37:47" pos:end="37:81">"Cannot append palette to packet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="38:15" pos:end="73:13">else <block pos:start="38:20" pos:end="73:13">{<block_content pos:start="39:17" pos:end="73:13">
                <expr_stmt pos:start="39:17" pos:end="39:57"><expr pos:start="39:17" pos:end="39:56"><call pos:start="39:17" pos:end="39:56"><name pos:start="39:17" pos:end="39:22">memcpy</name><argument_list pos:start="39:23" pos:end="39:56">(<argument pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:26">pal</name></expr></argument>, <argument pos:start="39:29" pos:end="39:39"><expr pos:start="39:29" pos:end="39:39"><name pos:start="39:29" pos:end="39:39"><name pos:start="39:29" pos:end="39:30">sc</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:39">palette</name></name></expr></argument>, <argument pos:start="39:42" pos:end="39:55"><expr pos:start="39:42" pos:end="39:55"><name pos:start="39:42" pos:end="39:55">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="40:17" pos:end="42:0"><expr pos:start="40:17" pos:end="40:35"><name pos:start="40:17" pos:end="40:31"><name pos:start="40:17" pos:end="40:18">sc</name><operator pos:start="40:19" pos:end="40:20">-&gt;</operator><name pos:start="40:21" pos:end="40:31">has_palette</name></name> <operator pos:start="40:33" pos:end="40:33">=</operator> <literal type="number" pos:start="40:35" pos:end="40:35">0</literal></expr>;</expr_stmt>
<cpp:if pos:start="41:1" pos:end="41:21">#<cpp:directive pos:start="41:2" pos:end="41:3">if</cpp:directive> <expr pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:21">CONFIG_DV_DEMUXER</name></expr></cpp:if>
        <if_stmt pos:start="42:9" pos:end="73:13"><if pos:start="42:9" pos:end="73:13">if <condition pos:start="42:12" pos:end="42:52">(<expr pos:start="42:13" pos:end="42:51"><name pos:start="42:13" pos:end="42:25"><name pos:start="42:13" pos:end="42:15">mov</name><operator pos:start="42:16" pos:end="42:17">-&gt;</operator><name pos:start="42:18" pos:end="42:25">dv_demux</name></name> <operator pos:start="42:27" pos:end="42:28">&amp;&amp;</operator> <name pos:start="42:30" pos:end="42:51"><name pos:start="42:30" pos:end="42:31">sc</name><operator pos:start="42:32" pos:end="42:33">-&gt;</operator><name pos:start="42:34" pos:end="42:51">dv_audio_container</name></name></expr>)</condition> <block pos:start="42:54" pos:end="73:13">{<block_content pos:start="43:13" pos:end="73:13">
            <expr_stmt pos:start="43:13" pos:end="43:89"><expr pos:start="43:13" pos:end="43:88"><call pos:start="43:13" pos:end="43:88"><name pos:start="43:13" pos:end="43:36">avpriv_dv_produce_packet</name><argument_list pos:start="43:37" pos:end="43:88">(<argument pos:start="43:38" pos:end="43:50"><expr pos:start="43:38" pos:end="43:50"><name pos:start="43:38" pos:end="43:50"><name pos:start="43:38" pos:end="43:40">mov</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:50">dv_demux</name></name></expr></argument>, <argument pos:start="43:53" pos:end="43:55"><expr pos:start="43:53" pos:end="43:55"><name pos:start="43:53" pos:end="43:55">pkt</name></expr></argument>, <argument pos:start="43:58" pos:end="43:66"><expr pos:start="43:58" pos:end="43:66"><name pos:start="43:58" pos:end="43:66"><name pos:start="43:58" pos:end="43:60">pkt</name><operator pos:start="43:61" pos:end="43:62">-&gt;</operator><name pos:start="43:63" pos:end="43:66">data</name></name></expr></argument>, <argument pos:start="43:69" pos:end="43:77"><expr pos:start="43:69" pos:end="43:77"><name pos:start="43:69" pos:end="43:77"><name pos:start="43:69" pos:end="43:71">pkt</name><operator pos:start="43:72" pos:end="43:73">-&gt;</operator><name pos:start="43:74" pos:end="43:77">size</name></name></expr></argument>, <argument pos:start="43:80" pos:end="43:87"><expr pos:start="43:80" pos:end="43:87"><name pos:start="43:80" pos:end="43:87"><name pos:start="43:80" pos:end="43:82">pkt</name><operator pos:start="43:83" pos:end="43:84">-&gt;</operator><name pos:start="43:85" pos:end="43:87">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="44:13" pos:end="44:31"><expr pos:start="44:13" pos:end="44:30"><call pos:start="44:13" pos:end="44:30"><name pos:start="44:13" pos:end="44:19">av_free</name><argument_list pos:start="44:20" pos:end="44:30">(<argument pos:start="44:21" pos:end="44:29"><expr pos:start="44:21" pos:end="44:29"><name pos:start="44:21" pos:end="44:29"><name pos:start="44:21" pos:end="44:23">pkt</name><operator pos:start="44:24" pos:end="44:25">-&gt;</operator><name pos:start="44:26" pos:end="44:29">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="45:13" pos:end="45:26"><expr pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:15">pkt</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:21">size</name></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <literal type="number" pos:start="45:25" pos:end="45:25">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="46:13" pos:end="46:59"><expr pos:start="46:13" pos:end="46:58"><name pos:start="46:13" pos:end="46:15">ret</name> <operator pos:start="46:17" pos:end="46:17">=</operator> <call pos:start="46:19" pos:end="46:58"><name pos:start="46:19" pos:end="46:38">avpriv_dv_get_packet</name><argument_list pos:start="46:39" pos:end="46:58">(<argument pos:start="46:40" pos:end="46:52"><expr pos:start="46:40" pos:end="46:52"><name pos:start="46:40" pos:end="46:52"><name pos:start="46:40" pos:end="46:42">mov</name><operator pos:start="46:43" pos:end="46:44">-&gt;</operator><name pos:start="46:45" pos:end="46:52">dv_demux</name></name></expr></argument>, <argument pos:start="46:55" pos:end="46:57"><expr pos:start="46:55" pos:end="46:57"><name pos:start="46:55" pos:end="46:57">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="47:13" pos:end="50:0"><if pos:start="47:13" pos:end="50:0">if <condition pos:start="47:16" pos:end="47:24">(<expr pos:start="47:17" pos:end="47:23"><name pos:start="47:17" pos:end="47:19">ret</name> <operator pos:start="47:21" pos:end="47:21">&lt;</operator> <literal type="number" pos:start="47:23" pos:end="47:23">0</literal></expr>)</condition><block type="pseudo" pos:start="48:17" pos:end="50:0"><block_content pos:start="48:17" pos:end="50:0">
                <return pos:start="48:17" pos:end="50:0">return <expr pos:start="48:24" pos:end="48:26"><name pos:start="48:24" pos:end="48:26">ret</name></expr>;</return></block_content></block></if></if_stmt>
<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>
    <expr_stmt pos:start="50:5" pos:end="50:36"><expr pos:start="50:5" pos:end="50:35"><name pos:start="50:5" pos:end="50:21"><name pos:start="50:5" pos:end="50:7">pkt</name><operator pos:start="50:8" pos:end="50:9">-&gt;</operator><name pos:start="50:10" pos:end="50:21">stream_index</name></name> <operator pos:start="50:23" pos:end="50:23">=</operator> <name pos:start="50:25" pos:end="50:35"><name pos:start="50:25" pos:end="50:26">sc</name><operator pos:start="50:27" pos:end="50:28">-&gt;</operator><name pos:start="50:29" pos:end="50:35">ffindex</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="51:5" pos:end="51:33"><expr pos:start="51:5" pos:end="51:32"><name pos:start="51:5" pos:end="51:12"><name pos:start="51:5" pos:end="51:7">pkt</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:12">dts</name></name> <operator pos:start="51:14" pos:end="51:14">=</operator> <name pos:start="51:16" pos:end="51:32"><name pos:start="51:16" pos:end="51:21">sample</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:32">timestamp</name></name></expr>;</expr_stmt>
    <if_stmt pos:start="52:5" pos:end="73:13"><if pos:start="52:5" pos:end="73:13">if <condition pos:start="52:8" pos:end="52:57">(<expr pos:start="52:9" pos:end="52:56"><name pos:start="52:9" pos:end="52:21"><name pos:start="52:9" pos:end="52:10">sc</name><operator pos:start="52:11" pos:end="52:12">-&gt;</operator><name pos:start="52:13" pos:end="52:21">ctts_data</name></name> <operator pos:start="52:23" pos:end="52:24">&amp;&amp;</operator> <name pos:start="52:26" pos:end="52:39"><name pos:start="52:26" pos:end="52:27">sc</name><operator pos:start="52:28" pos:end="52:29">-&gt;</operator><name pos:start="52:30" pos:end="52:39">ctts_index</name></name> <operator pos:start="52:41" pos:end="52:41">&lt;</operator> <name pos:start="52:43" pos:end="52:56"><name pos:start="52:43" pos:end="52:44">sc</name><operator pos:start="52:45" pos:end="52:46">-&gt;</operator><name pos:start="52:47" pos:end="52:56">ctts_count</name></name></expr>)</condition> <block pos:start="52:59" pos:end="73:13">{<block_content pos:start="53:9" pos:end="73:13">
        <expr_stmt pos:start="53:9" pos:end="53:85"><expr pos:start="53:9" pos:end="53:84"><name pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:11">pkt</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:16">pts</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:27"><name pos:start="53:20" pos:end="53:22">pkt</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:27">dts</name></name> <operator pos:start="53:29" pos:end="53:29">+</operator> <name pos:start="53:31" pos:end="53:43"><name pos:start="53:31" pos:end="53:32">sc</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:43">dts_shift</name></name> <operator pos:start="53:45" pos:end="53:45">+</operator> <name pos:start="53:47" pos:end="53:75"><name pos:start="53:47" pos:end="53:48">sc</name><operator pos:start="53:49" pos:end="53:50">-&gt;</operator><name pos:start="53:51" pos:end="53:59">ctts_data</name><index pos:start="53:60" pos:end="53:75">[<expr pos:start="53:61" pos:end="53:74"><name pos:start="53:61" pos:end="53:74"><name pos:start="53:61" pos:end="53:62">sc</name><operator pos:start="53:63" pos:end="53:64">-&gt;</operator><name pos:start="53:65" pos:end="53:74">ctts_index</name></name></expr>]</index></name><operator pos:start="53:76" pos:end="53:76">.</operator><name pos:start="53:77" pos:end="53:84">duration</name></expr>;</expr_stmt>
        <comment type="block" pos:start="54:9" pos:end="54:33">/* update ctts context */</comment>
        <expr_stmt pos:start="55:9" pos:end="55:26"><expr pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:10">sc</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:23">ctts_sample</name></name><operator pos:start="55:24" pos:end="55:25">++</operator></expr>;</expr_stmt>
        <if_stmt pos:start="56:9" pos:end="73:13"><if pos:start="56:9" pos:end="62:5">if <condition pos:start="56:12" pos:end="57:67">(<expr pos:start="56:13" pos:end="57:66"><name pos:start="56:13" pos:end="56:26"><name pos:start="56:13" pos:end="56:14">sc</name><operator pos:start="56:15" pos:end="56:16">-&gt;</operator><name pos:start="56:17" pos:end="56:26">ctts_index</name></name> <operator pos:start="56:28" pos:end="56:28">&lt;</operator> <name pos:start="56:30" pos:end="56:43"><name pos:start="56:30" pos:end="56:31">sc</name><operator pos:start="56:32" pos:end="56:33">-&gt;</operator><name pos:start="56:34" pos:end="56:43">ctts_count</name></name> <operator pos:start="56:45" pos:end="56:46">&amp;&amp;</operator>
            <name pos:start="57:13" pos:end="57:41"><name pos:start="57:13" pos:end="57:14">sc</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:25">ctts_data</name><index pos:start="57:26" pos:end="57:41">[<expr pos:start="57:27" pos:end="57:40"><name pos:start="57:27" pos:end="57:40"><name pos:start="57:27" pos:end="57:28">sc</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:40">ctts_index</name></name></expr>]</index></name><operator pos:start="57:42" pos:end="57:42">.</operator><name pos:start="57:43" pos:end="57:47">count</name> <operator pos:start="57:49" pos:end="57:50">==</operator> <name pos:start="57:52" pos:end="57:66"><name pos:start="57:52" pos:end="57:53">sc</name><operator pos:start="57:54" pos:end="57:55">-&gt;</operator><name pos:start="57:56" pos:end="57:66">ctts_sample</name></name></expr>)</condition> <block pos:start="57:69" pos:end="62:5">{<block_content pos:start="58:13" pos:end="61:38">
            <expr_stmt pos:start="58:13" pos:end="58:29"><expr pos:start="58:13" pos:end="58:28"><name pos:start="58:13" pos:end="58:26"><name pos:start="58:13" pos:end="58:14">sc</name><operator pos:start="58:15" pos:end="58:16">-&gt;</operator><name pos:start="58:17" pos:end="58:26">ctts_index</name></name><operator pos:start="58:27" pos:end="58:28">++</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="59:13" pos:end="59:32"><expr pos:start="59:13" pos:end="59:31"><name pos:start="59:13" pos:end="59:27"><name pos:start="59:13" pos:end="59:14">sc</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:27">ctts_sample</name></name> <operator pos:start="59:29" pos:end="59:29">=</operator> <literal type="number" pos:start="59:31" pos:end="59:31">0</literal></expr>;</expr_stmt>
        <if_stmt pos:start="60:9" pos:end="61:38"><if pos:start="60:9" pos:end="61:38">if <condition pos:start="60:12" pos:end="60:26">(<expr pos:start="60:13" pos:end="60:25"><name pos:start="60:13" pos:end="60:25"><name pos:start="60:13" pos:end="60:14">sc</name><operator pos:start="60:15" pos:end="60:16">-&gt;</operator><name pos:start="60:17" pos:end="60:25">wrong_dts</name></name></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:38"><block_content pos:start="61:13" pos:end="61:38">
            <expr_stmt pos:start="61:13" pos:end="61:38"><expr pos:start="61:13" pos:end="61:37"><name pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:15">pkt</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:20">dts</name></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:37">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></if> <else pos:start="62:7" pos:end="73:13">else <block pos:start="62:12" pos:end="73:13">{<block_content pos:start="63:9" pos:end="73:13">
        <decl_stmt pos:start="63:9" pos:end="64:75"><decl pos:start="63:9" pos:end="64:74"><type pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:15">int64_t</name></type> <name pos:start="63:17" pos:end="63:24">next_dts</name> <init pos:start="63:26" pos:end="64:74">= <expr pos:start="63:28" pos:end="64:74"><ternary pos:start="63:28" pos:end="64:74"><condition pos:start="63:28" pos:end="63:72"><expr pos:start="63:28" pos:end="63:70"><operator pos:start="63:28" pos:end="63:28">(</operator><name pos:start="63:29" pos:end="63:46"><name pos:start="63:29" pos:end="63:30">sc</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:46">current_sample</name></name> <operator pos:start="63:48" pos:end="63:48">&lt;</operator> <name pos:start="63:50" pos:end="63:69"><name pos:start="63:50" pos:end="63:51">st</name><operator pos:start="63:52" pos:end="63:53">-&gt;</operator><name pos:start="63:54" pos:end="63:69">nb_index_entries</name></name><operator pos:start="63:70" pos:end="63:70">)</operator></expr> ?</condition><then pos:start="64:13" pos:end="64:59">
            <expr pos:start="64:13" pos:end="64:59"><name pos:start="64:13" pos:end="64:49"><name pos:start="64:13" pos:end="64:14">st</name><operator pos:start="64:15" pos:end="64:16">-&gt;</operator><name pos:start="64:17" pos:end="64:29">index_entries</name><index pos:start="64:30" pos:end="64:49">[<expr pos:start="64:31" pos:end="64:48"><name pos:start="64:31" pos:end="64:48"><name pos:start="64:31" pos:end="64:32">sc</name><operator pos:start="64:33" pos:end="64:34">-&gt;</operator><name pos:start="64:35" pos:end="64:48">current_sample</name></name></expr>]</index></name><operator pos:start="64:50" pos:end="64:50">.</operator><name pos:start="64:51" pos:end="64:59">timestamp</name></expr> </then><else pos:start="64:61" pos:end="64:74">: <expr pos:start="64:63" pos:end="64:74"><name pos:start="64:63" pos:end="64:74"><name pos:start="64:63" pos:end="64:64">st</name><operator pos:start="64:65" pos:end="64:66">-&gt;</operator><name pos:start="64:67" pos:end="64:74">duration</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="65:9" pos:end="65:44"><expr pos:start="65:9" pos:end="65:43"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:11">pkt</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:21">duration</name></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:32">next_dts</name> <operator pos:start="65:34" pos:end="65:34">-</operator> <name pos:start="65:36" pos:end="65:43"><name pos:start="65:36" pos:end="65:38">pkt</name><operator pos:start="65:39" pos:end="65:40">-&gt;</operator><name pos:start="65:41" pos:end="65:43">dts</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="66:9" pos:end="66:28"><expr pos:start="66:9" pos:end="66:27"><name pos:start="66:9" pos:end="66:16"><name pos:start="66:9" pos:end="66:11">pkt</name><operator pos:start="66:12" pos:end="66:13">-&gt;</operator><name pos:start="66:14" pos:end="66:16">pts</name></name> <operator pos:start="66:18" pos:end="66:18">=</operator> <name pos:start="66:20" pos:end="66:27"><name pos:start="66:20" pos:end="66:22">pkt</name><operator pos:start="66:23" pos:end="66:24">-&gt;</operator><name pos:start="66:25" pos:end="66:27">dts</name></name></expr>;</expr_stmt>
    <if_stmt pos:start="67:5" pos:end="68:19"><if pos:start="67:5" pos:end="68:19">if <condition pos:start="67:8" pos:end="67:37">(<expr pos:start="67:9" pos:end="67:36"><name pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:10">st</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:19">discard</name></name> <operator pos:start="67:21" pos:end="67:22">==</operator> <name pos:start="67:24" pos:end="67:36">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="68:9" pos:end="68:19"><block_content pos:start="68:9" pos:end="68:19">
        <goto pos:start="68:9" pos:end="68:19">goto <name pos:start="68:14" pos:end="68:18">retry</name>;</goto></block_content></block></if></if_stmt>
    <expr_stmt pos:start="69:5" pos:end="69:73"><expr pos:start="69:5" pos:end="69:72"><name pos:start="69:5" pos:end="69:14"><name pos:start="69:5" pos:end="69:7">pkt</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:14">flags</name></name> <operator pos:start="69:16" pos:end="69:17">|=</operator> <ternary pos:start="69:19" pos:end="69:72"><condition pos:start="69:19" pos:end="69:52"><expr pos:start="69:19" pos:end="69:50"><name pos:start="69:19" pos:end="69:31"><name pos:start="69:19" pos:end="69:24">sample</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:31">flags</name></name> <operator pos:start="69:33" pos:end="69:33">&amp;</operator> <name pos:start="69:35" pos:end="69:50">AVINDEX_KEYFRAME</name></expr> ?</condition><then pos:start="69:54" pos:end="69:68"> <expr pos:start="69:54" pos:end="69:68"><name pos:start="69:54" pos:end="69:68">AV_PKT_FLAG_KEY</name></expr> </then><else pos:start="69:70" pos:end="69:72">: <expr pos:start="69:72" pos:end="69:72"><literal type="number" pos:start="69:72" pos:end="69:72">0</literal></expr></else></ternary></expr>;</expr_stmt>
    <expr_stmt pos:start="70:5" pos:end="70:27"><expr pos:start="70:5" pos:end="70:26"><name pos:start="70:5" pos:end="70:12"><name pos:start="70:5" pos:end="70:7">pkt</name><operator pos:start="70:8" pos:end="70:9">-&gt;</operator><name pos:start="70:10" pos:end="70:12">pos</name></name> <operator pos:start="70:14" pos:end="70:14">=</operator> <name pos:start="70:16" pos:end="70:26"><name pos:start="70:16" pos:end="70:21">sample</name><operator pos:start="70:22" pos:end="70:23">-&gt;</operator><name pos:start="70:24" pos:end="70:26">pos</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="71:5" pos:end="72:76"><expr pos:start="71:5" pos:end="72:75"><call pos:start="71:5" pos:end="72:75"><name pos:start="71:5" pos:end="71:11">av_dlog</name><argument_list pos:start="71:12" pos:end="72:75">(<argument pos:start="71:13" pos:end="71:13"><expr pos:start="71:13" pos:end="71:13"><name pos:start="71:13" pos:end="71:13">s</name></expr></argument>, <argument pos:start="71:16" pos:end="71:88"><expr pos:start="71:16" pos:end="71:88"><literal type="string" pos:start="71:16" pos:end="71:33">"stream %d, pts %"</literal><name pos:start="71:34" pos:end="71:39">PRId64</name><literal type="string" pos:start="71:40" pos:end="71:48">", dts %"</literal><name pos:start="71:49" pos:end="71:54">PRId64</name><literal type="string" pos:start="71:55" pos:end="71:65">", pos 0x%"</literal><name pos:start="71:66" pos:end="71:71">PRIx64</name><literal type="string" pos:start="71:72" pos:end="71:88">", duration %d\n"</literal></expr></argument>,
            <argument pos:start="72:13" pos:end="72:29"><expr pos:start="72:13" pos:end="72:29"><name pos:start="72:13" pos:end="72:29"><name pos:start="72:13" pos:end="72:15">pkt</name><operator pos:start="72:16" pos:end="72:17">-&gt;</operator><name pos:start="72:18" pos:end="72:29">stream_index</name></name></expr></argument>, <argument pos:start="72:32" pos:end="72:39"><expr pos:start="72:32" pos:end="72:39"><name pos:start="72:32" pos:end="72:39"><name pos:start="72:32" pos:end="72:34">pkt</name><operator pos:start="72:35" pos:end="72:36">-&gt;</operator><name pos:start="72:37" pos:end="72:39">pts</name></name></expr></argument>, <argument pos:start="72:42" pos:end="72:49"><expr pos:start="72:42" pos:end="72:49"><name pos:start="72:42" pos:end="72:49"><name pos:start="72:42" pos:end="72:44">pkt</name><operator pos:start="72:45" pos:end="72:46">-&gt;</operator><name pos:start="72:47" pos:end="72:49">dts</name></name></expr></argument>, <argument pos:start="72:52" pos:end="72:59"><expr pos:start="72:52" pos:end="72:59"><name pos:start="72:52" pos:end="72:59"><name pos:start="72:52" pos:end="72:54">pkt</name><operator pos:start="72:55" pos:end="72:56">-&gt;</operator><name pos:start="72:57" pos:end="72:59">pos</name></name></expr></argument>, <argument pos:start="72:62" pos:end="72:74"><expr pos:start="72:62" pos:end="72:74"><name pos:start="72:62" pos:end="72:74"><name pos:start="72:62" pos:end="72:64">pkt</name><operator pos:start="72:65" pos:end="72:66">-&gt;</operator><name pos:start="72:67" pos:end="72:74">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
