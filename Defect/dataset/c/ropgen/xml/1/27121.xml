<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27121.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">channelmap_filter_samples</name><parameter_list pos:start="1:37" pos:end="1:82">(<parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:57"><name pos:start="1:38" pos:end="1:49">AVFilterLink</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:57">inlink</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:81"><decl pos:start="1:60" pos:end="1:81"><type pos:start="1:60" pos:end="1:81"><name pos:start="1:60" pos:end="1:76">AVFilterBufferRef</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:81">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:43">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:19">AVFilterContext</name>  <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">ctx</name> <init pos:start="5:27" pos:end="5:39">= <expr pos:start="5:29" pos:end="5:39"><name pos:start="5:29" pos:end="5:39"><name pos:start="5:29" pos:end="5:34">inlink</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:39">dst</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">AVFilterLink</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:25">outlink</name> <init pos:start="7:27" pos:end="7:43">= <expr pos:start="7:29" pos:end="7:43"><name pos:start="7:29" pos:end="7:43"><name pos:start="7:29" pos:end="7:31">ctx</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:40">outputs</name><index pos:start="7:41" pos:end="7:43">[<expr pos:start="7:42" pos:end="7:42"><literal type="number" pos:start="7:42" pos:end="7:42">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:29"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:27">ChannelMapContext</name> <modifier pos:start="9:29" pos:end="9:29">*</modifier></type><name pos:start="9:30" pos:end="9:30">s</name> <init pos:start="9:32" pos:end="9:42">= <expr pos:start="9:34" pos:end="9:42"><name pos:start="9:34" pos:end="9:42"><name pos:start="9:34" pos:end="9:36">ctx</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:42">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:81"><decl pos:start="11:5" pos:end="11:80"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:20">nch_in</name> <init pos:start="11:22" pos:end="11:80">= <expr pos:start="11:24" pos:end="11:80"><call pos:start="11:24" pos:end="11:80"><name pos:start="11:24" pos:end="11:56">av_get_channel_layout_nb_channels</name><argument_list pos:start="11:57" pos:end="11:80">(<argument pos:start="11:58" pos:end="11:79"><expr pos:start="11:58" pos:end="11:79"><name pos:start="11:58" pos:end="11:79"><name pos:start="11:58" pos:end="11:63">inlink</name><operator pos:start="11:64" pos:end="11:65">-&gt;</operator><name pos:start="11:66" pos:end="11:79">channel_layout</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:21">nch_out</name> <init pos:start="13:23" pos:end="13:30">= <expr pos:start="13:25" pos:end="13:30"><name pos:start="13:25" pos:end="13:30"><name pos:start="13:25" pos:end="13:25">s</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:30">nch</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:11"><decl pos:start="15:5" pos:end="15:10"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">ch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:34"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:34"><name pos:start="17:14" pos:end="17:26">source_planes</name><index pos:start="17:27" pos:end="17:34">[<expr pos:start="17:28" pos:end="17:33"><name pos:start="17:28" pos:end="17:33">MAX_CH</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="23:46"><expr pos:start="21:5" pos:end="23:45"><call pos:start="21:5" pos:end="23:45"><name pos:start="21:5" pos:end="21:10">memcpy</name><argument_list pos:start="21:11" pos:end="23:45">(<argument pos:start="21:12" pos:end="21:24"><expr pos:start="21:12" pos:end="21:24"><name pos:start="21:12" pos:end="21:24">source_planes</name></expr></argument>, <argument pos:start="21:27" pos:end="21:44"><expr pos:start="21:27" pos:end="21:44"><name pos:start="21:27" pos:end="21:44"><name pos:start="21:27" pos:end="21:29">buf</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:44">extended_data</name></name></expr></argument>,

           <argument pos:start="23:12" pos:end="23:44"><expr pos:start="23:12" pos:end="23:44"><name pos:start="23:12" pos:end="23:17">nch_in</name> <operator pos:start="23:19" pos:end="23:19">*</operator> <sizeof pos:start="23:21" pos:end="23:44">sizeof<argument_list pos:start="23:27" pos:end="23:44">(<argument pos:start="23:28" pos:end="23:43"><expr pos:start="23:28" pos:end="23:43"><name pos:start="23:28" pos:end="23:43"><name pos:start="23:28" pos:end="23:40">source_planes</name><index pos:start="23:41" pos:end="23:43">[<expr pos:start="23:42" pos:end="23:42"><literal type="number" pos:start="23:42" pos:end="23:42">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="63:5"><if pos:start="27:5" pos:end="63:5">if <condition pos:start="27:8" pos:end="27:25">(<expr pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:15">nch_out</name> <operator pos:start="27:17" pos:end="27:17">&gt;</operator> <name pos:start="27:19" pos:end="27:24">nch_in</name></expr>)</condition> <block pos:start="27:27" pos:end="63:5">{<block_content pos:start="29:9" pos:end="61:9">

        <if_stmt pos:start="29:9" pos:end="61:9"><if pos:start="29:9" pos:end="55:9">if <condition pos:start="29:12" pos:end="29:48">(<expr pos:start="29:13" pos:end="29:47"><name pos:start="29:13" pos:end="29:19">nch_out</name> <operator pos:start="29:21" pos:end="29:21">&gt;</operator> <call pos:start="29:23" pos:end="29:47"><name pos:start="29:23" pos:end="29:36">FF_ARRAY_ELEMS</name><argument_list pos:start="29:37" pos:end="29:47">(<argument pos:start="29:38" pos:end="29:46"><expr pos:start="29:38" pos:end="29:46"><name pos:start="29:38" pos:end="29:46"><name pos:start="29:38" pos:end="29:40">buf</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:46">data</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:50" pos:end="55:9">{<block_content pos:start="31:13" pos:end="53:13">

            <decl_stmt pos:start="31:13" pos:end="33:66"><decl pos:start="31:13" pos:end="33:65"><type pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:19">uint8_t</name> <modifier pos:start="31:21" pos:end="31:21">*</modifier><modifier pos:start="31:22" pos:end="31:22">*</modifier></type><name pos:start="31:23" pos:end="31:39">new_extended_data</name> <init pos:start="31:41" pos:end="33:65">=

                <expr pos:start="33:17" pos:end="33:65"><call pos:start="33:17" pos:end="33:65"><name pos:start="33:17" pos:end="33:26">av_mallocz</name><argument_list pos:start="33:27" pos:end="33:65">(<argument pos:start="33:28" pos:end="33:64"><expr pos:start="33:28" pos:end="33:64"><name pos:start="33:28" pos:end="33:34">nch_out</name> <operator pos:start="33:36" pos:end="33:36">*</operator> <sizeof pos:start="33:38" pos:end="33:64">sizeof<argument_list pos:start="33:44" pos:end="33:64">(<argument pos:start="33:45" pos:end="33:63"><expr pos:start="33:45" pos:end="33:63"><operator pos:start="33:45" pos:end="33:45">*</operator><name pos:start="33:46" pos:end="33:63"><name pos:start="33:46" pos:end="33:48">buf</name><operator pos:start="33:49" pos:end="33:50">-&gt;</operator><name pos:start="33:51" pos:end="33:63">extended_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="35:13" pos:end="41:13"><if pos:start="35:13" pos:end="41:13">if <condition pos:start="35:16" pos:end="35:35">(<expr pos:start="35:17" pos:end="35:34"><operator pos:start="35:17" pos:end="35:17">!</operator><name pos:start="35:18" pos:end="35:34">new_extended_data</name></expr>)</condition> <block pos:start="35:37" pos:end="41:13">{<block_content pos:start="37:17" pos:end="39:39">

                <expr_stmt pos:start="37:17" pos:end="37:43"><expr pos:start="37:17" pos:end="37:42"><call pos:start="37:17" pos:end="37:42"><name pos:start="37:17" pos:end="37:37">avfilter_unref_buffer</name><argument_list pos:start="37:38" pos:end="37:42">(<argument pos:start="37:39" pos:end="37:41"><expr pos:start="37:39" pos:end="37:41"><name pos:start="37:39" pos:end="37:41">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="39:17" pos:end="39:39">return <expr pos:start="39:24" pos:end="39:38"><call pos:start="39:24" pos:end="39:38"><name pos:start="39:24" pos:end="39:30">AVERROR</name><argument_list pos:start="39:31" pos:end="39:38">(<argument pos:start="39:32" pos:end="39:37"><expr pos:start="39:32" pos:end="39:37"><name pos:start="39:32" pos:end="39:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="43:13" pos:end="53:13"><if pos:start="43:13" pos:end="47:13">if <condition pos:start="43:16" pos:end="43:48">(<expr pos:start="43:17" pos:end="43:47"><name pos:start="43:17" pos:end="43:34"><name pos:start="43:17" pos:end="43:19">buf</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:34">extended_data</name></name> <operator pos:start="43:36" pos:end="43:37">==</operator> <name pos:start="43:39" pos:end="43:47"><name pos:start="43:39" pos:end="43:41">buf</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:47">data</name></name></expr>)</condition> <block pos:start="43:50" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:55">

                <expr_stmt pos:start="45:17" pos:end="45:55"><expr pos:start="45:17" pos:end="45:54"><name pos:start="45:17" pos:end="45:34"><name pos:start="45:17" pos:end="45:19">buf</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:34">extended_data</name></name> <operator pos:start="45:36" pos:end="45:36">=</operator> <name pos:start="45:38" pos:end="45:54">new_extended_data</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="47:15" pos:end="53:13">else <block pos:start="47:20" pos:end="53:13">{<block_content pos:start="49:17" pos:end="51:44">

                <expr_stmt pos:start="49:17" pos:end="49:55"><expr pos:start="49:17" pos:end="49:54"><name pos:start="49:17" pos:end="49:34"><name pos:start="49:17" pos:end="49:19">buf</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:34">extended_data</name></name> <operator pos:start="49:36" pos:end="49:36">=</operator> <name pos:start="49:38" pos:end="49:54">new_extended_data</name></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:44"><expr pos:start="51:17" pos:end="51:43"><call pos:start="51:17" pos:end="51:43"><name pos:start="51:17" pos:end="51:23">av_free</name><argument_list pos:start="51:24" pos:end="51:43">(<argument pos:start="51:25" pos:end="51:42"><expr pos:start="51:25" pos:end="51:42"><name pos:start="51:25" pos:end="51:42"><name pos:start="51:25" pos:end="51:27">buf</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:42">extended_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="55:11" pos:end="61:9">else if <condition pos:start="55:19" pos:end="55:51">(<expr pos:start="55:20" pos:end="55:50"><name pos:start="55:20" pos:end="55:37"><name pos:start="55:20" pos:end="55:22">buf</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:37">extended_data</name></name> <operator pos:start="55:39" pos:end="55:40">!=</operator> <name pos:start="55:42" pos:end="55:50"><name pos:start="55:42" pos:end="55:44">buf</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:50">data</name></name></expr>)</condition> <block pos:start="55:53" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:43">

            <expr_stmt pos:start="57:13" pos:end="57:40"><expr pos:start="57:13" pos:end="57:39"><call pos:start="57:13" pos:end="57:39"><name pos:start="57:13" pos:end="57:19">av_free</name><argument_list pos:start="57:20" pos:end="57:39">(<argument pos:start="57:21" pos:end="57:38"><expr pos:start="57:21" pos:end="57:38"><name pos:start="57:21" pos:end="57:38"><name pos:start="57:21" pos:end="57:23">buf</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:38">extended_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:43"><expr pos:start="59:13" pos:end="59:42"><name pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:15">buf</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:30">extended_data</name></name> <operator pos:start="59:32" pos:end="59:32">=</operator> <name pos:start="59:34" pos:end="59:42"><name pos:start="59:34" pos:end="59:36">buf</name><operator pos:start="59:37" pos:end="59:38">-&gt;</operator><name pos:start="59:39" pos:end="59:42">data</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="67:5" pos:end="73:5">for <control pos:start="67:9" pos:end="67:36">(<init pos:start="67:10" pos:end="67:16"><expr pos:start="67:10" pos:end="67:15"><name pos:start="67:10" pos:end="67:11">ch</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <literal type="number" pos:start="67:15" pos:end="67:15">0</literal></expr>;</init> <condition pos:start="67:18" pos:end="67:30"><expr pos:start="67:18" pos:end="67:29"><name pos:start="67:18" pos:end="67:19">ch</name> <operator pos:start="67:21" pos:end="67:21">&lt;</operator> <name pos:start="67:23" pos:end="67:29">nch_out</name></expr>;</condition> <incr pos:start="67:32" pos:end="67:35"><expr pos:start="67:32" pos:end="67:35"><name pos:start="67:32" pos:end="67:33">ch</name><operator pos:start="67:34" pos:end="67:35">++</operator></expr></incr>)</control> <block pos:start="67:38" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:53">

        <expr_stmt pos:start="69:9" pos:end="71:53"><expr pos:start="69:9" pos:end="71:52"><name pos:start="69:9" pos:end="69:54"><name pos:start="69:9" pos:end="69:11">buf</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:26">extended_data</name><index pos:start="69:27" pos:end="69:54">[<expr pos:start="69:28" pos:end="69:53"><name pos:start="69:28" pos:end="69:37"><name pos:start="69:28" pos:end="69:28">s</name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:33">map</name><index pos:start="69:34" pos:end="69:37">[<expr pos:start="69:35" pos:end="69:36"><name pos:start="69:35" pos:end="69:36">ch</name></expr>]</index></name><operator pos:start="69:38" pos:end="69:38">.</operator><name pos:start="69:39" pos:end="69:53">out_channel_idx</name></expr>]</index></name> <operator pos:start="69:56" pos:end="69:56">=</operator>

            <name pos:start="71:13" pos:end="71:52"><name pos:start="71:13" pos:end="71:25">source_planes</name><index pos:start="71:26" pos:end="71:52">[<expr pos:start="71:27" pos:end="71:51"><name pos:start="71:27" pos:end="71:36"><name pos:start="71:27" pos:end="71:27">s</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:32">map</name><index pos:start="71:33" pos:end="71:36">[<expr pos:start="71:34" pos:end="71:35"><name pos:start="71:34" pos:end="71:35">ch</name></expr>]</index></name><operator pos:start="71:37" pos:end="71:37">.</operator><name pos:start="71:38" pos:end="71:51">in_channel_idx</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="77:5" pos:end="81:77"><if pos:start="77:5" pos:end="81:77">if <condition pos:start="77:8" pos:end="77:40">(<expr pos:start="77:9" pos:end="77:39"><name pos:start="77:9" pos:end="77:17"><name pos:start="77:9" pos:end="77:11">buf</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:17">data</name></name> <operator pos:start="77:19" pos:end="77:20">!=</operator> <name pos:start="77:22" pos:end="77:39"><name pos:start="77:22" pos:end="77:24">buf</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:39">extended_data</name></name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="81:77"><block_content pos:start="79:9" pos:end="81:77">

        <expr_stmt pos:start="79:9" pos:end="81:77"><expr pos:start="79:9" pos:end="81:76"><call pos:start="79:9" pos:end="81:76"><name pos:start="79:9" pos:end="79:14">memcpy</name><argument_list pos:start="79:15" pos:end="81:76">(<argument pos:start="79:16" pos:end="79:24"><expr pos:start="79:16" pos:end="79:24"><name pos:start="79:16" pos:end="79:24"><name pos:start="79:16" pos:end="79:18">buf</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:24">data</name></name></expr></argument>, <argument pos:start="79:27" pos:end="79:44"><expr pos:start="79:27" pos:end="79:44"><name pos:start="79:27" pos:end="79:44"><name pos:start="79:27" pos:end="79:29">buf</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:44">extended_data</name></name></expr></argument>,

           <argument pos:start="81:12" pos:end="81:75"><expr pos:start="81:12" pos:end="81:75"><call pos:start="81:12" pos:end="81:52"><name pos:start="81:12" pos:end="81:16">FFMIN</name><argument_list pos:start="81:17" pos:end="81:52">(<argument pos:start="81:18" pos:end="81:42"><expr pos:start="81:18" pos:end="81:42"><call pos:start="81:18" pos:end="81:42"><name pos:start="81:18" pos:end="81:31">FF_ARRAY_ELEMS</name><argument_list pos:start="81:32" pos:end="81:42">(<argument pos:start="81:33" pos:end="81:41"><expr pos:start="81:33" pos:end="81:41"><name pos:start="81:33" pos:end="81:41"><name pos:start="81:33" pos:end="81:35">buf</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:41">data</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="81:45" pos:end="81:51"><expr pos:start="81:45" pos:end="81:51"><name pos:start="81:45" pos:end="81:51">nch_out</name></expr></argument>)</argument_list></call> <operator pos:start="81:54" pos:end="81:54">*</operator> <sizeof pos:start="81:56" pos:end="81:75">sizeof<argument_list pos:start="81:62" pos:end="81:75">(<argument pos:start="81:63" pos:end="81:74"><expr pos:start="81:63" pos:end="81:74"><name pos:start="81:63" pos:end="81:74"><name pos:start="81:63" pos:end="81:65">buf</name><operator pos:start="81:66" pos:end="81:67">-&gt;</operator><name pos:start="81:68" pos:end="81:71">data</name><index pos:start="81:72" pos:end="81:74">[<expr pos:start="81:73" pos:end="81:73"><literal type="number" pos:start="81:73" pos:end="81:73">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="85:5" pos:end="85:43">return <expr pos:start="85:12" pos:end="85:42"><call pos:start="85:12" pos:end="85:42"><name pos:start="85:12" pos:end="85:28">ff_filter_samples</name><argument_list pos:start="85:29" pos:end="85:42">(<argument pos:start="85:30" pos:end="85:36"><expr pos:start="85:30" pos:end="85:36"><name pos:start="85:30" pos:end="85:36">outlink</name></expr></argument>, <argument pos:start="85:39" pos:end="85:41"><expr pos:start="85:39" pos:end="85:41"><name pos:start="85:39" pos:end="85:41">buf</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
