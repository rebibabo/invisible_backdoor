<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12265.c" pos:tabs="8"><function pos:start="1:1" pos:end="241:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">encode_mb</name><parameter_list pos:start="1:22" pos:end="1:68">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:36">MpegEncContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:53"><decl pos:start="1:42" pos:end="1:53"><type pos:start="1:42" pos:end="1:53"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:53">motion_x</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:67">motion_y</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="241:1">{<block_content pos:start="5:5" pos:end="239:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:18">mb_x</name><init pos:start="5:19" pos:end="5:27">= <expr pos:start="5:21" pos:end="5:27"><name pos:start="5:21" pos:end="5:27"><name pos:start="5:21" pos:end="5:21">s</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:27">mb_x</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:18">mb_y</name><init pos:start="7:19" pos:end="7:27">= <expr pos:start="7:21" pos:end="7:27"><name pos:start="7:21" pos:end="7:27"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:27">mb_y</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="28:0"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

<cpp:if pos:start="11:1" pos:end="11:5">#<cpp:directive pos:start="11:2" pos:end="11:3">if</cpp:directive> <expr pos:start="11:5" pos:end="11:5"><literal type="number" pos:start="11:5" pos:end="11:5">0</literal></expr></cpp:if>

        if (s-&gt;interlaced_dct) {

            dct_linesize = s-&gt;linesize * 2;

            dct_offset = s-&gt;linesize;

        } else {

            dct_linesize = s-&gt;linesize;

            dct_offset = s-&gt;linesize * 8;

        }

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="31:5" pos:end="178:0"><if pos:start="31:5" pos:end="65:5">if <condition pos:start="31:8" pos:end="31:20">(<expr pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:19">mb_intra</name></name></expr>)</condition> <block pos:start="31:22" pos:end="65:5">{<block_content pos:start="33:9" pos:end="63:43">

        <decl_stmt pos:start="33:9" pos:end="33:19"><decl pos:start="33:9" pos:end="33:18"><type pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:13">UINT8</name> <modifier pos:start="33:15" pos:end="33:15">*</modifier></type><name pos:start="33:16" pos:end="33:18">ptr</name></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:17"><decl pos:start="35:9" pos:end="35:16"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:16">wrap</name></decl>;</decl_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:27"><expr pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:12">wrap</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <name pos:start="39:16" pos:end="39:26"><name pos:start="39:16" pos:end="39:16">s</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:26">linesize</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:65"><expr pos:start="41:9" pos:end="41:64"><name pos:start="41:9" pos:end="41:11">ptr</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:31"><name pos:start="41:15" pos:end="41:15">s</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:28">new_picture</name><index pos:start="41:29" pos:end="41:31">[<expr pos:start="41:30" pos:end="41:30"><literal type="number" pos:start="41:30" pos:end="41:30">0</literal></expr>]</index></name> <operator pos:start="41:33" pos:end="41:33">+</operator> <operator pos:start="41:35" pos:end="41:35">(</operator><name pos:start="41:36" pos:end="41:39">mb_y</name> <operator pos:start="41:41" pos:end="41:41">*</operator> <literal type="number" pos:start="41:43" pos:end="41:44">16</literal> <operator pos:start="41:46" pos:end="41:46">*</operator> <name pos:start="41:48" pos:end="41:51">wrap</name><operator pos:start="41:52" pos:end="41:52">)</operator> <operator pos:start="41:54" pos:end="41:54">+</operator> <name pos:start="41:56" pos:end="41:59">mb_x</name> <operator pos:start="41:61" pos:end="41:61">*</operator> <literal type="number" pos:start="41:63" pos:end="41:64">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:58"><expr pos:start="43:9" pos:end="43:57"><call pos:start="43:9" pos:end="43:57"><name pos:start="43:9" pos:end="43:18">get_pixels</name><argument_list pos:start="43:19" pos:end="43:57">(<argument pos:start="43:20" pos:end="43:30"><expr pos:start="43:20" pos:end="43:30"><name pos:start="43:20" pos:end="43:30"><name pos:start="43:20" pos:end="43:20">s</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:27">block</name><index pos:start="43:28" pos:end="43:30">[<expr pos:start="43:29" pos:end="43:29"><literal type="number" pos:start="43:29" pos:end="43:29">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="43:33" pos:end="43:35"><expr pos:start="43:33" pos:end="43:35"><name pos:start="43:33" pos:end="43:35">ptr</name></expr></argument>               , <argument pos:start="43:53" pos:end="43:56"><expr pos:start="43:53" pos:end="43:56"><name pos:start="43:53" pos:end="43:56">wrap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:58"><expr pos:start="45:9" pos:end="45:57"><call pos:start="45:9" pos:end="45:57"><name pos:start="45:9" pos:end="45:18">get_pixels</name><argument_list pos:start="45:19" pos:end="45:57">(<argument pos:start="45:20" pos:end="45:30"><expr pos:start="45:20" pos:end="45:30"><name pos:start="45:20" pos:end="45:30"><name pos:start="45:20" pos:end="45:20">s</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:27">block</name><index pos:start="45:28" pos:end="45:30">[<expr pos:start="45:29" pos:end="45:29"><literal type="number" pos:start="45:29" pos:end="45:29">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:33" pos:end="45:50"><expr pos:start="45:33" pos:end="45:50"><name pos:start="45:33" pos:end="45:35">ptr</name>            <operator pos:start="45:48" pos:end="45:48">+</operator> <literal type="number" pos:start="45:50" pos:end="45:50">8</literal></expr></argument>, <argument pos:start="45:53" pos:end="45:56"><expr pos:start="45:53" pos:end="45:56"><name pos:start="45:53" pos:end="45:56">wrap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:58"><expr pos:start="47:9" pos:end="47:57"><call pos:start="47:9" pos:end="47:57"><name pos:start="47:9" pos:end="47:18">get_pixels</name><argument_list pos:start="47:19" pos:end="47:57">(<argument pos:start="47:20" pos:end="47:30"><expr pos:start="47:20" pos:end="47:30"><name pos:start="47:20" pos:end="47:30"><name pos:start="47:20" pos:end="47:20">s</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:27">block</name><index pos:start="47:28" pos:end="47:30">[<expr pos:start="47:29" pos:end="47:29"><literal type="number" pos:start="47:29" pos:end="47:29">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="47:33" pos:end="47:46"><expr pos:start="47:33" pos:end="47:46"><name pos:start="47:33" pos:end="47:35">ptr</name> <operator pos:start="47:37" pos:end="47:37">+</operator> <literal type="number" pos:start="47:39" pos:end="47:39">8</literal> <operator pos:start="47:41" pos:end="47:41">*</operator> <name pos:start="47:43" pos:end="47:46">wrap</name></expr></argument>    , <argument pos:start="47:53" pos:end="47:56"><expr pos:start="47:53" pos:end="47:56"><name pos:start="47:53" pos:end="47:56">wrap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:58"><expr pos:start="49:9" pos:end="49:57"><call pos:start="49:9" pos:end="49:57"><name pos:start="49:9" pos:end="49:18">get_pixels</name><argument_list pos:start="49:19" pos:end="49:57">(<argument pos:start="49:20" pos:end="49:30"><expr pos:start="49:20" pos:end="49:30"><name pos:start="49:20" pos:end="49:30"><name pos:start="49:20" pos:end="49:20">s</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:27">block</name><index pos:start="49:28" pos:end="49:30">[<expr pos:start="49:29" pos:end="49:29"><literal type="number" pos:start="49:29" pos:end="49:29">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="49:33" pos:end="49:50"><expr pos:start="49:33" pos:end="49:50"><name pos:start="49:33" pos:end="49:35">ptr</name> <operator pos:start="49:37" pos:end="49:37">+</operator> <literal type="number" pos:start="49:39" pos:end="49:39">8</literal> <operator pos:start="49:41" pos:end="49:41">*</operator> <name pos:start="49:43" pos:end="49:46">wrap</name> <operator pos:start="49:48" pos:end="49:48">+</operator> <literal type="number" pos:start="49:50" pos:end="49:50">8</literal></expr></argument>, <argument pos:start="49:53" pos:end="49:56"><expr pos:start="49:53" pos:end="49:56"><name pos:start="49:53" pos:end="49:56">wrap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:18"><expr pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:12">wrap</name> <operator pos:start="53:14" pos:end="53:16">&gt;&gt;=</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:63"><expr pos:start="55:9" pos:end="55:62"><name pos:start="55:9" pos:end="55:11">ptr</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <name pos:start="55:15" pos:end="55:31"><name pos:start="55:15" pos:end="55:15">s</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:28">new_picture</name><index pos:start="55:29" pos:end="55:31">[<expr pos:start="55:30" pos:end="55:30"><literal type="number" pos:start="55:30" pos:end="55:30">1</literal></expr>]</index></name> <operator pos:start="55:33" pos:end="55:33">+</operator> <operator pos:start="55:35" pos:end="55:35">(</operator><name pos:start="55:36" pos:end="55:39">mb_y</name> <operator pos:start="55:41" pos:end="55:41">*</operator> <literal type="number" pos:start="55:43" pos:end="55:43">8</literal> <operator pos:start="55:45" pos:end="55:45">*</operator> <name pos:start="55:47" pos:end="55:50">wrap</name><operator pos:start="55:51" pos:end="55:51">)</operator> <operator pos:start="55:53" pos:end="55:53">+</operator> <name pos:start="55:55" pos:end="55:58">mb_x</name> <operator pos:start="55:60" pos:end="55:60">*</operator> <literal type="number" pos:start="55:62" pos:end="55:62">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:43"><expr pos:start="57:9" pos:end="57:42"><call pos:start="57:9" pos:end="57:42"><name pos:start="57:9" pos:end="57:18">get_pixels</name><argument_list pos:start="57:19" pos:end="57:42">(<argument pos:start="57:20" pos:end="57:30"><expr pos:start="57:20" pos:end="57:30"><name pos:start="57:20" pos:end="57:30"><name pos:start="57:20" pos:end="57:20">s</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:27">block</name><index pos:start="57:28" pos:end="57:30">[<expr pos:start="57:29" pos:end="57:29"><literal type="number" pos:start="57:29" pos:end="57:29">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="57:33" pos:end="57:35"><expr pos:start="57:33" pos:end="57:35"><name pos:start="57:33" pos:end="57:35">ptr</name></expr></argument>, <argument pos:start="57:38" pos:end="57:41"><expr pos:start="57:38" pos:end="57:41"><name pos:start="57:38" pos:end="57:41">wrap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:63"><expr pos:start="61:9" pos:end="61:62"><name pos:start="61:9" pos:end="61:11">ptr</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <name pos:start="61:15" pos:end="61:31"><name pos:start="61:15" pos:end="61:15">s</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:28">new_picture</name><index pos:start="61:29" pos:end="61:31">[<expr pos:start="61:30" pos:end="61:30"><literal type="number" pos:start="61:30" pos:end="61:30">2</literal></expr>]</index></name> <operator pos:start="61:33" pos:end="61:33">+</operator> <operator pos:start="61:35" pos:end="61:35">(</operator><name pos:start="61:36" pos:end="61:39">mb_y</name> <operator pos:start="61:41" pos:end="61:41">*</operator> <literal type="number" pos:start="61:43" pos:end="61:43">8</literal> <operator pos:start="61:45" pos:end="61:45">*</operator> <name pos:start="61:47" pos:end="61:50">wrap</name><operator pos:start="61:51" pos:end="61:51">)</operator> <operator pos:start="61:53" pos:end="61:53">+</operator> <name pos:start="61:55" pos:end="61:58">mb_x</name> <operator pos:start="61:60" pos:end="61:60">*</operator> <literal type="number" pos:start="61:62" pos:end="61:62">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:43"><expr pos:start="63:9" pos:end="63:42"><call pos:start="63:9" pos:end="63:42"><name pos:start="63:9" pos:end="63:18">get_pixels</name><argument_list pos:start="63:19" pos:end="63:42">(<argument pos:start="63:20" pos:end="63:30"><expr pos:start="63:20" pos:end="63:30"><name pos:start="63:20" pos:end="63:30"><name pos:start="63:20" pos:end="63:20">s</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:27">block</name><index pos:start="63:28" pos:end="63:30">[<expr pos:start="63:29" pos:end="63:29"><literal type="number" pos:start="63:29" pos:end="63:29">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="63:33" pos:end="63:35"><expr pos:start="63:33" pos:end="63:35"><name pos:start="63:33" pos:end="63:35">ptr</name></expr></argument>, <argument pos:start="63:38" pos:end="63:41"><expr pos:start="63:38" pos:end="63:41"><name pos:start="63:38" pos:end="63:41">wrap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="65:6" pos:end="178:0">else<block pos:start="65:10" pos:end="178:0">{<block_content pos:start="67:9" pos:end="147:53">

        <decl_stmt pos:start="67:9" pos:end="67:31"><decl pos:start="67:9" pos:end="67:30"><type pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:22">op_pixels_func</name> <modifier pos:start="67:24" pos:end="67:24">*</modifier></type><name pos:start="67:25" pos:end="67:30">op_pix</name></decl>;</decl_stmt>

        <decl_stmt pos:start="69:9" pos:end="69:30"><decl pos:start="69:9" pos:end="69:29"><type pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:20">qpel_mc_func</name> <modifier pos:start="69:22" pos:end="69:22">*</modifier></type><name pos:start="69:23" pos:end="69:29">op_qpix</name></decl>;</decl_stmt>

        <decl_stmt pos:start="71:9" pos:end="71:42"><decl pos:start="71:9" pos:end="71:21"><type pos:start="71:9" pos:end="71:15"><name pos:start="71:9" pos:end="71:13">UINT8</name> <modifier pos:start="71:15" pos:end="71:15">*</modifier></type><name pos:start="71:16" pos:end="71:21">dest_y</name></decl>, <decl pos:start="71:24" pos:end="71:31"><type ref="prev" pos:start="71:9" pos:end="71:15"><modifier pos:start="71:24" pos:end="71:24">*</modifier></type><name pos:start="71:25" pos:end="71:31">dest_cb</name></decl>, <decl pos:start="71:34" pos:end="71:41"><type ref="prev" pos:start="71:9" pos:end="71:15"><modifier pos:start="71:34" pos:end="71:34">*</modifier></type><name pos:start="71:35" pos:end="71:41">dest_cr</name></decl>;</decl_stmt>

        <decl_stmt pos:start="73:9" pos:end="73:19"><decl pos:start="73:9" pos:end="73:18"><type pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:13">UINT8</name> <modifier pos:start="73:15" pos:end="73:15">*</modifier></type><name pos:start="73:16" pos:end="73:18">ptr</name></decl>;</decl_stmt>

        <decl_stmt pos:start="75:9" pos:end="75:17"><decl pos:start="75:9" pos:end="75:16"><type pos:start="75:9" pos:end="75:11"><name pos:start="75:9" pos:end="75:11">int</name></type> <name pos:start="75:13" pos:end="75:16">wrap</name></decl>;</decl_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:87"><expr pos:start="79:9" pos:end="79:86"><name pos:start="79:9" pos:end="79:14">dest_y</name>  <operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:39"><name pos:start="79:19" pos:end="79:19">s</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:36">current_picture</name><index pos:start="79:37" pos:end="79:39">[<expr pos:start="79:38" pos:end="79:38"><literal type="number" pos:start="79:38" pos:end="79:38">0</literal></expr>]</index></name> <operator pos:start="79:41" pos:end="79:41">+</operator> <operator pos:start="79:43" pos:end="79:43">(</operator><name pos:start="79:44" pos:end="79:47">mb_y</name> <operator pos:start="79:49" pos:end="79:49">*</operator> <literal type="number" pos:start="79:51" pos:end="79:52">16</literal> <operator pos:start="79:54" pos:end="79:54">*</operator> <name pos:start="79:56" pos:end="79:66"><name pos:start="79:56" pos:end="79:56">s</name><operator pos:start="79:57" pos:end="79:58">-&gt;</operator><name pos:start="79:59" pos:end="79:66">linesize</name></name>       <operator pos:start="79:74" pos:end="79:74">)</operator> <operator pos:start="79:76" pos:end="79:76">+</operator> <name pos:start="79:78" pos:end="79:81">mb_x</name> <operator pos:start="79:83" pos:end="79:83">*</operator> <literal type="number" pos:start="79:85" pos:end="79:86">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:86"><expr pos:start="81:9" pos:end="81:85"><name pos:start="81:9" pos:end="81:15">dest_cb</name> <operator pos:start="81:17" pos:end="81:17">=</operator> <name pos:start="81:19" pos:end="81:39"><name pos:start="81:19" pos:end="81:19">s</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:36">current_picture</name><index pos:start="81:37" pos:end="81:39">[<expr pos:start="81:38" pos:end="81:38"><literal type="number" pos:start="81:38" pos:end="81:38">1</literal></expr>]</index></name> <operator pos:start="81:41" pos:end="81:41">+</operator> <operator pos:start="81:43" pos:end="81:43">(</operator><name pos:start="81:44" pos:end="81:47">mb_y</name> <operator pos:start="81:49" pos:end="81:49">*</operator> <literal type="number" pos:start="81:51" pos:end="81:51">8</literal>  <operator pos:start="81:54" pos:end="81:54">*</operator> <operator pos:start="81:56" pos:end="81:56">(</operator><name pos:start="81:57" pos:end="81:67"><name pos:start="81:57" pos:end="81:57">s</name><operator pos:start="81:58" pos:end="81:59">-&gt;</operator><name pos:start="81:60" pos:end="81:67">linesize</name></name> <operator pos:start="81:69" pos:end="81:70">&gt;&gt;</operator> <literal type="number" pos:start="81:72" pos:end="81:72">1</literal><operator pos:start="81:73" pos:end="81:73">)</operator><operator pos:start="81:74" pos:end="81:74">)</operator> <operator pos:start="81:76" pos:end="81:76">+</operator> <name pos:start="81:78" pos:end="81:81">mb_x</name> <operator pos:start="81:83" pos:end="81:83">*</operator> <literal type="number" pos:start="81:85" pos:end="81:85">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:86"><expr pos:start="83:9" pos:end="83:85"><name pos:start="83:9" pos:end="83:15">dest_cr</name> <operator pos:start="83:17" pos:end="83:17">=</operator> <name pos:start="83:19" pos:end="83:39"><name pos:start="83:19" pos:end="83:19">s</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:36">current_picture</name><index pos:start="83:37" pos:end="83:39">[<expr pos:start="83:38" pos:end="83:38"><literal type="number" pos:start="83:38" pos:end="83:38">2</literal></expr>]</index></name> <operator pos:start="83:41" pos:end="83:41">+</operator> <operator pos:start="83:43" pos:end="83:43">(</operator><name pos:start="83:44" pos:end="83:47">mb_y</name> <operator pos:start="83:49" pos:end="83:49">*</operator> <literal type="number" pos:start="83:51" pos:end="83:51">8</literal>  <operator pos:start="83:54" pos:end="83:54">*</operator> <operator pos:start="83:56" pos:end="83:56">(</operator><name pos:start="83:57" pos:end="83:67"><name pos:start="83:57" pos:end="83:57">s</name><operator pos:start="83:58" pos:end="83:59">-&gt;</operator><name pos:start="83:60" pos:end="83:67">linesize</name></name> <operator pos:start="83:69" pos:end="83:70">&gt;&gt;</operator> <literal type="number" pos:start="83:72" pos:end="83:72">1</literal><operator pos:start="83:73" pos:end="83:73">)</operator><operator pos:start="83:74" pos:end="83:74">)</operator> <operator pos:start="83:76" pos:end="83:76">+</operator> <name pos:start="83:78" pos:end="83:81">mb_x</name> <operator pos:start="83:83" pos:end="83:83">*</operator> <literal type="number" pos:start="83:85" pos:end="83:85">8</literal></expr>;</expr_stmt>



        <if_stmt pos:start="87:9" pos:end="99:9"><if pos:start="87:9" pos:end="93:9">if <condition pos:start="87:12" pos:end="87:54">(<expr pos:start="87:13" pos:end="87:53"><operator pos:start="87:13" pos:end="87:13">(</operator><operator pos:start="87:14" pos:end="87:14">!</operator><name pos:start="87:15" pos:end="87:28"><name pos:start="87:15" pos:end="87:15">s</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:28">no_rounding</name></name><operator pos:start="87:29" pos:end="87:29">)</operator> <operator pos:start="87:31" pos:end="87:32">||</operator> <name pos:start="87:34" pos:end="87:45"><name pos:start="87:34" pos:end="87:34">s</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:45">pict_type</name></name><operator pos:start="87:46" pos:end="87:47">==</operator><name pos:start="87:48" pos:end="87:53">B_TYPE</name></expr>)</condition><block pos:start="87:55" pos:end="93:9">{<block_content pos:start="89:13" pos:end="91:37">

            <expr_stmt pos:start="89:13" pos:end="89:36"><expr pos:start="89:13" pos:end="89:35"><name pos:start="89:13" pos:end="89:18">op_pix</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <name pos:start="89:22" pos:end="89:35">put_pixels_tab</name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:37"><expr pos:start="91:13" pos:end="91:36"><name pos:start="91:13" pos:end="91:19">op_qpix</name><operator pos:start="91:20" pos:end="91:20">=</operator> <name pos:start="91:22" pos:end="91:36">qpel_mc_rnd_tab</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="93:10" pos:end="99:9">else<block pos:start="93:14" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:40">

            <expr_stmt pos:start="95:13" pos:end="95:43"><expr pos:start="95:13" pos:end="95:42"><name pos:start="95:13" pos:end="95:18">op_pix</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <name pos:start="95:22" pos:end="95:42">put_no_rnd_pixels_tab</name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:40"><expr pos:start="97:13" pos:end="97:39"><name pos:start="97:13" pos:end="97:19">op_qpix</name><operator pos:start="97:20" pos:end="97:20">=</operator> <name pos:start="97:22" pos:end="97:39">qpel_mc_no_rnd_tab</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="103:9" pos:end="115:9"><if pos:start="103:9" pos:end="115:9">if <condition pos:start="103:12" pos:end="103:39">(<expr pos:start="103:13" pos:end="103:38"><name pos:start="103:13" pos:end="103:21"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:21">mv_dir</name></name> <operator pos:start="103:23" pos:end="103:23">&amp;</operator> <name pos:start="103:25" pos:end="103:38">MV_DIR_FORWARD</name></expr>)</condition> <block pos:start="103:41" pos:end="115:9">{<block_content pos:start="105:13" pos:end="113:47">

            <expr_stmt pos:start="105:13" pos:end="105:89"><expr pos:start="105:13" pos:end="105:88"><call pos:start="105:13" pos:end="105:88"><name pos:start="105:13" pos:end="105:22">MPV_motion</name><argument_list pos:start="105:23" pos:end="105:88">(<argument pos:start="105:24" pos:end="105:24"><expr pos:start="105:24" pos:end="105:24"><name pos:start="105:24" pos:end="105:24">s</name></expr></argument>, <argument pos:start="105:27" pos:end="105:32"><expr pos:start="105:27" pos:end="105:32"><name pos:start="105:27" pos:end="105:32">dest_y</name></expr></argument>, <argument pos:start="105:35" pos:end="105:41"><expr pos:start="105:35" pos:end="105:41"><name pos:start="105:35" pos:end="105:41">dest_cb</name></expr></argument>, <argument pos:start="105:44" pos:end="105:50"><expr pos:start="105:44" pos:end="105:50"><name pos:start="105:44" pos:end="105:50">dest_cr</name></expr></argument>, <argument pos:start="105:53" pos:end="105:53"><expr pos:start="105:53" pos:end="105:53"><literal type="number" pos:start="105:53" pos:end="105:53">0</literal></expr></argument>, <argument pos:start="105:56" pos:end="105:70"><expr pos:start="105:56" pos:end="105:70"><name pos:start="105:56" pos:end="105:70"><name pos:start="105:56" pos:end="105:56">s</name><operator pos:start="105:57" pos:end="105:58">-&gt;</operator><name pos:start="105:59" pos:end="105:70">last_picture</name></name></expr></argument>, <argument pos:start="105:73" pos:end="105:78"><expr pos:start="105:73" pos:end="105:78"><name pos:start="105:73" pos:end="105:78">op_pix</name></expr></argument>, <argument pos:start="105:81" pos:end="105:87"><expr pos:start="105:81" pos:end="105:87"><name pos:start="105:81" pos:end="105:87">op_qpix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

           <if_stmt pos:start="107:12" pos:end="113:47"><if pos:start="107:12" pos:end="109:40">if <condition pos:start="107:15" pos:end="107:57">(<expr pos:start="107:16" pos:end="107:56"><operator pos:start="107:16" pos:end="107:16">(</operator><operator pos:start="107:17" pos:end="107:17">!</operator><name pos:start="107:18" pos:end="107:31"><name pos:start="107:18" pos:end="107:18">s</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:31">no_rounding</name></name><operator pos:start="107:32" pos:end="107:32">)</operator> <operator pos:start="107:34" pos:end="107:35">||</operator> <name pos:start="107:37" pos:end="107:48"><name pos:start="107:37" pos:end="107:37">s</name><operator pos:start="107:38" pos:end="107:39">-&gt;</operator><name pos:start="107:40" pos:end="107:48">pict_type</name></name><operator pos:start="107:49" pos:end="107:50">==</operator><name pos:start="107:51" pos:end="107:56">B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:40"><block_content pos:start="109:17" pos:end="109:40">

                <expr_stmt pos:start="109:17" pos:end="109:40"><expr pos:start="109:17" pos:end="109:39"><name pos:start="109:17" pos:end="109:22">op_pix</name> <operator pos:start="109:24" pos:end="109:24">=</operator> <name pos:start="109:26" pos:end="109:39">avg_pixels_tab</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="111:13" pos:end="113:47">else<block type="pseudo" pos:start="113:17" pos:end="113:47"><block_content pos:start="113:17" pos:end="113:47">

                <expr_stmt pos:start="113:17" pos:end="113:47"><expr pos:start="113:17" pos:end="113:46"><name pos:start="113:17" pos:end="113:22">op_pix</name> <operator pos:start="113:24" pos:end="113:24">=</operator> <name pos:start="113:26" pos:end="113:46">avg_no_rnd_pixels_tab</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="117:9" pos:end="121:9"><if pos:start="117:9" pos:end="121:9">if <condition pos:start="117:12" pos:end="117:40">(<expr pos:start="117:13" pos:end="117:39"><name pos:start="117:13" pos:end="117:21"><name pos:start="117:13" pos:end="117:13">s</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:21">mv_dir</name></name> <operator pos:start="117:23" pos:end="117:23">&amp;</operator> <name pos:start="117:25" pos:end="117:39">MV_DIR_BACKWARD</name></expr>)</condition> <block pos:start="117:42" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:89">

            <expr_stmt pos:start="119:13" pos:end="119:89"><expr pos:start="119:13" pos:end="119:88"><call pos:start="119:13" pos:end="119:88"><name pos:start="119:13" pos:end="119:22">MPV_motion</name><argument_list pos:start="119:23" pos:end="119:88">(<argument pos:start="119:24" pos:end="119:24"><expr pos:start="119:24" pos:end="119:24"><name pos:start="119:24" pos:end="119:24">s</name></expr></argument>, <argument pos:start="119:27" pos:end="119:32"><expr pos:start="119:27" pos:end="119:32"><name pos:start="119:27" pos:end="119:32">dest_y</name></expr></argument>, <argument pos:start="119:35" pos:end="119:41"><expr pos:start="119:35" pos:end="119:41"><name pos:start="119:35" pos:end="119:41">dest_cb</name></expr></argument>, <argument pos:start="119:44" pos:end="119:50"><expr pos:start="119:44" pos:end="119:50"><name pos:start="119:44" pos:end="119:50">dest_cr</name></expr></argument>, <argument pos:start="119:53" pos:end="119:53"><expr pos:start="119:53" pos:end="119:53"><literal type="number" pos:start="119:53" pos:end="119:53">1</literal></expr></argument>, <argument pos:start="119:56" pos:end="119:70"><expr pos:start="119:56" pos:end="119:70"><name pos:start="119:56" pos:end="119:70"><name pos:start="119:56" pos:end="119:56">s</name><operator pos:start="119:57" pos:end="119:58">-&gt;</operator><name pos:start="119:59" pos:end="119:70">next_picture</name></name></expr></argument>, <argument pos:start="119:73" pos:end="119:78"><expr pos:start="119:73" pos:end="119:78"><name pos:start="119:73" pos:end="119:78">op_pix</name></expr></argument>, <argument pos:start="119:81" pos:end="119:87"><expr pos:start="119:81" pos:end="119:87"><name pos:start="119:81" pos:end="119:87">op_qpix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:27"><expr pos:start="123:9" pos:end="123:26"><name pos:start="123:9" pos:end="123:12">wrap</name> <operator pos:start="123:14" pos:end="123:14">=</operator> <name pos:start="123:16" pos:end="123:26"><name pos:start="123:16" pos:end="123:16">s</name><operator pos:start="123:17" pos:end="123:18">-&gt;</operator><name pos:start="123:19" pos:end="123:26">linesize</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:65"><expr pos:start="125:9" pos:end="125:64"><name pos:start="125:9" pos:end="125:11">ptr</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <name pos:start="125:15" pos:end="125:31"><name pos:start="125:15" pos:end="125:15">s</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:28">new_picture</name><index pos:start="125:29" pos:end="125:31">[<expr pos:start="125:30" pos:end="125:30"><literal type="number" pos:start="125:30" pos:end="125:30">0</literal></expr>]</index></name> <operator pos:start="125:33" pos:end="125:33">+</operator> <operator pos:start="125:35" pos:end="125:35">(</operator><name pos:start="125:36" pos:end="125:39">mb_y</name> <operator pos:start="125:41" pos:end="125:41">*</operator> <literal type="number" pos:start="125:43" pos:end="125:44">16</literal> <operator pos:start="125:46" pos:end="125:46">*</operator> <name pos:start="125:48" pos:end="125:51">wrap</name><operator pos:start="125:52" pos:end="125:52">)</operator> <operator pos:start="125:54" pos:end="125:54">+</operator> <name pos:start="125:56" pos:end="125:59">mb_x</name> <operator pos:start="125:61" pos:end="125:61">*</operator> <literal type="number" pos:start="125:63" pos:end="125:64">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:82"><expr pos:start="127:9" pos:end="127:81"><call pos:start="127:9" pos:end="127:81"><name pos:start="127:9" pos:end="127:19">diff_pixels</name><argument_list pos:start="127:20" pos:end="127:81">(<argument pos:start="127:21" pos:end="127:31"><expr pos:start="127:21" pos:end="127:31"><name pos:start="127:21" pos:end="127:31"><name pos:start="127:21" pos:end="127:21">s</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:28">block</name><index pos:start="127:29" pos:end="127:31">[<expr pos:start="127:30" pos:end="127:30"><literal type="number" pos:start="127:30" pos:end="127:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="127:34" pos:end="127:36"><expr pos:start="127:34" pos:end="127:36"><name pos:start="127:34" pos:end="127:36">ptr</name></expr></argument>               , <argument pos:start="127:54" pos:end="127:59"><expr pos:start="127:54" pos:end="127:59"><name pos:start="127:54" pos:end="127:59">dest_y</name></expr></argument>               , <argument pos:start="127:77" pos:end="127:80"><expr pos:start="127:77" pos:end="127:80"><name pos:start="127:77" pos:end="127:80">wrap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:82"><expr pos:start="129:9" pos:end="129:81"><call pos:start="129:9" pos:end="129:81"><name pos:start="129:9" pos:end="129:19">diff_pixels</name><argument_list pos:start="129:20" pos:end="129:81">(<argument pos:start="129:21" pos:end="129:31"><expr pos:start="129:21" pos:end="129:31"><name pos:start="129:21" pos:end="129:31"><name pos:start="129:21" pos:end="129:21">s</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:28">block</name><index pos:start="129:29" pos:end="129:31">[<expr pos:start="129:30" pos:end="129:30"><literal type="number" pos:start="129:30" pos:end="129:30">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="129:34" pos:end="129:51"><expr pos:start="129:34" pos:end="129:51"><name pos:start="129:34" pos:end="129:36">ptr</name>            <operator pos:start="129:49" pos:end="129:49">+</operator> <literal type="number" pos:start="129:51" pos:end="129:51">8</literal></expr></argument>, <argument pos:start="129:54" pos:end="129:74"><expr pos:start="129:54" pos:end="129:74"><name pos:start="129:54" pos:end="129:59">dest_y</name>            <operator pos:start="129:72" pos:end="129:72">+</operator> <literal type="number" pos:start="129:74" pos:end="129:74">8</literal></expr></argument>, <argument pos:start="129:77" pos:end="129:80"><expr pos:start="129:77" pos:end="129:80"><name pos:start="129:77" pos:end="129:80">wrap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:82"><expr pos:start="131:9" pos:end="131:81"><call pos:start="131:9" pos:end="131:81"><name pos:start="131:9" pos:end="131:19">diff_pixels</name><argument_list pos:start="131:20" pos:end="131:81">(<argument pos:start="131:21" pos:end="131:31"><expr pos:start="131:21" pos:end="131:31"><name pos:start="131:21" pos:end="131:31"><name pos:start="131:21" pos:end="131:21">s</name><operator pos:start="131:22" pos:end="131:23">-&gt;</operator><name pos:start="131:24" pos:end="131:28">block</name><index pos:start="131:29" pos:end="131:31">[<expr pos:start="131:30" pos:end="131:30"><literal type="number" pos:start="131:30" pos:end="131:30">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="131:34" pos:end="131:47"><expr pos:start="131:34" pos:end="131:47"><name pos:start="131:34" pos:end="131:36">ptr</name> <operator pos:start="131:38" pos:end="131:38">+</operator> <literal type="number" pos:start="131:40" pos:end="131:40">8</literal> <operator pos:start="131:42" pos:end="131:42">*</operator> <name pos:start="131:44" pos:end="131:47">wrap</name></expr></argument>    , <argument pos:start="131:54" pos:end="131:70"><expr pos:start="131:54" pos:end="131:70"><name pos:start="131:54" pos:end="131:59">dest_y</name> <operator pos:start="131:61" pos:end="131:61">+</operator> <literal type="number" pos:start="131:63" pos:end="131:63">8</literal> <operator pos:start="131:65" pos:end="131:65">*</operator> <name pos:start="131:67" pos:end="131:70">wrap</name></expr></argument>    , <argument pos:start="131:77" pos:end="131:80"><expr pos:start="131:77" pos:end="131:80"><name pos:start="131:77" pos:end="131:80">wrap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:82"><expr pos:start="133:9" pos:end="133:81"><call pos:start="133:9" pos:end="133:81"><name pos:start="133:9" pos:end="133:19">diff_pixels</name><argument_list pos:start="133:20" pos:end="133:81">(<argument pos:start="133:21" pos:end="133:31"><expr pos:start="133:21" pos:end="133:31"><name pos:start="133:21" pos:end="133:31"><name pos:start="133:21" pos:end="133:21">s</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:28">block</name><index pos:start="133:29" pos:end="133:31">[<expr pos:start="133:30" pos:end="133:30"><literal type="number" pos:start="133:30" pos:end="133:30">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="133:34" pos:end="133:51"><expr pos:start="133:34" pos:end="133:51"><name pos:start="133:34" pos:end="133:36">ptr</name> <operator pos:start="133:38" pos:end="133:38">+</operator> <literal type="number" pos:start="133:40" pos:end="133:40">8</literal> <operator pos:start="133:42" pos:end="133:42">*</operator> <name pos:start="133:44" pos:end="133:47">wrap</name> <operator pos:start="133:49" pos:end="133:49">+</operator> <literal type="number" pos:start="133:51" pos:end="133:51">8</literal></expr></argument>, <argument pos:start="133:54" pos:end="133:74"><expr pos:start="133:54" pos:end="133:74"><name pos:start="133:54" pos:end="133:59">dest_y</name> <operator pos:start="133:61" pos:end="133:61">+</operator> <literal type="number" pos:start="133:63" pos:end="133:63">8</literal> <operator pos:start="133:65" pos:end="133:65">*</operator> <name pos:start="133:67" pos:end="133:70">wrap</name> <operator pos:start="133:72" pos:end="133:72">+</operator> <literal type="number" pos:start="133:74" pos:end="133:74">8</literal></expr></argument>, <argument pos:start="133:77" pos:end="133:80"><expr pos:start="133:77" pos:end="133:80"><name pos:start="133:77" pos:end="133:80">wrap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="137:9" pos:end="137:18"><expr pos:start="137:9" pos:end="137:17"><name pos:start="137:9" pos:end="137:12">wrap</name> <operator pos:start="137:14" pos:end="137:16">&gt;&gt;=</operator><literal type="number" pos:start="137:17" pos:end="137:17">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:63"><expr pos:start="139:9" pos:end="139:62"><name pos:start="139:9" pos:end="139:11">ptr</name> <operator pos:start="139:13" pos:end="139:13">=</operator> <name pos:start="139:15" pos:end="139:31"><name pos:start="139:15" pos:end="139:15">s</name><operator pos:start="139:16" pos:end="139:17">-&gt;</operator><name pos:start="139:18" pos:end="139:28">new_picture</name><index pos:start="139:29" pos:end="139:31">[<expr pos:start="139:30" pos:end="139:30"><literal type="number" pos:start="139:30" pos:end="139:30">1</literal></expr>]</index></name> <operator pos:start="139:33" pos:end="139:33">+</operator> <operator pos:start="139:35" pos:end="139:35">(</operator><name pos:start="139:36" pos:end="139:39">mb_y</name> <operator pos:start="139:41" pos:end="139:41">*</operator> <literal type="number" pos:start="139:43" pos:end="139:43">8</literal> <operator pos:start="139:45" pos:end="139:45">*</operator> <name pos:start="139:47" pos:end="139:50">wrap</name><operator pos:start="139:51" pos:end="139:51">)</operator> <operator pos:start="139:53" pos:end="139:53">+</operator> <name pos:start="139:55" pos:end="139:58">mb_x</name> <operator pos:start="139:60" pos:end="139:60">*</operator> <literal type="number" pos:start="139:62" pos:end="139:62">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:53"><expr pos:start="141:9" pos:end="141:52"><call pos:start="141:9" pos:end="141:52"><name pos:start="141:9" pos:end="141:19">diff_pixels</name><argument_list pos:start="141:20" pos:end="141:52">(<argument pos:start="141:21" pos:end="141:31"><expr pos:start="141:21" pos:end="141:31"><name pos:start="141:21" pos:end="141:31"><name pos:start="141:21" pos:end="141:21">s</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:28">block</name><index pos:start="141:29" pos:end="141:31">[<expr pos:start="141:30" pos:end="141:30"><literal type="number" pos:start="141:30" pos:end="141:30">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="141:34" pos:end="141:36"><expr pos:start="141:34" pos:end="141:36"><name pos:start="141:34" pos:end="141:36">ptr</name></expr></argument>, <argument pos:start="141:39" pos:end="141:45"><expr pos:start="141:39" pos:end="141:45"><name pos:start="141:39" pos:end="141:45">dest_cb</name></expr></argument>, <argument pos:start="141:48" pos:end="141:51"><expr pos:start="141:48" pos:end="141:51"><name pos:start="141:48" pos:end="141:51">wrap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="145:9" pos:end="145:63"><expr pos:start="145:9" pos:end="145:62"><name pos:start="145:9" pos:end="145:11">ptr</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <name pos:start="145:15" pos:end="145:31"><name pos:start="145:15" pos:end="145:15">s</name><operator pos:start="145:16" pos:end="145:17">-&gt;</operator><name pos:start="145:18" pos:end="145:28">new_picture</name><index pos:start="145:29" pos:end="145:31">[<expr pos:start="145:30" pos:end="145:30"><literal type="number" pos:start="145:30" pos:end="145:30">2</literal></expr>]</index></name> <operator pos:start="145:33" pos:end="145:33">+</operator> <operator pos:start="145:35" pos:end="145:35">(</operator><name pos:start="145:36" pos:end="145:39">mb_y</name> <operator pos:start="145:41" pos:end="145:41">*</operator> <literal type="number" pos:start="145:43" pos:end="145:43">8</literal> <operator pos:start="145:45" pos:end="145:45">*</operator> <name pos:start="145:47" pos:end="145:50">wrap</name><operator pos:start="145:51" pos:end="145:51">)</operator> <operator pos:start="145:53" pos:end="145:53">+</operator> <name pos:start="145:55" pos:end="145:58">mb_x</name> <operator pos:start="145:60" pos:end="145:60">*</operator> <literal type="number" pos:start="145:62" pos:end="145:62">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:53"><expr pos:start="147:9" pos:end="147:52"><call pos:start="147:9" pos:end="147:52"><name pos:start="147:9" pos:end="147:19">diff_pixels</name><argument_list pos:start="147:20" pos:end="147:52">(<argument pos:start="147:21" pos:end="147:31"><expr pos:start="147:21" pos:end="147:31"><name pos:start="147:21" pos:end="147:31"><name pos:start="147:21" pos:end="147:21">s</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:28">block</name><index pos:start="147:29" pos:end="147:31">[<expr pos:start="147:30" pos:end="147:30"><literal type="number" pos:start="147:30" pos:end="147:30">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="147:34" pos:end="147:36"><expr pos:start="147:34" pos:end="147:36"><name pos:start="147:34" pos:end="147:36">ptr</name></expr></argument>, <argument pos:start="147:39" pos:end="147:45"><expr pos:start="147:39" pos:end="147:45"><name pos:start="147:39" pos:end="147:45">dest_cr</name></expr></argument>, <argument pos:start="147:48" pos:end="147:51"><expr pos:start="147:48" pos:end="147:51"><name pos:start="147:48" pos:end="147:51">wrap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

            

<cpp:if pos:start="153:1" pos:end="153:5">#<cpp:directive pos:start="153:2" pos:end="153:3">if</cpp:directive> <expr pos:start="153:5" pos:end="153:5"><literal type="number" pos:start="153:5" pos:end="153:5">0</literal></expr></cpp:if>

            {

                float adap_parm;

                

                adap_parm = ((s-&gt;avg_mb_var &lt;&lt; 1) + s-&gt;mb_var[s-&gt;mb_width*mb_y+mb_x] + 1.0) /

                            ((s-&gt;mb_var[s-&gt;mb_width*mb_y+mb_x] &lt;&lt; 1) + s-&gt;avg_mb_var + 1.0);

            

                printf("\ntype=%c qscale=%2d adap=%0.2f dquant=%4.2f var=%4d avgvar=%4d", 

                        (s-&gt;mb_type[s-&gt;mb_width*mb_y+mb_x] &gt; 0) ? 'I' : 'P', 

                        s-&gt;qscale, adap_parm, s-&gt;qscale*adap_parm,

                        s-&gt;mb_var[s-&gt;mb_width*mb_y+mb_x], s-&gt;avg_mb_var);

            }

<cpp:endif pos:start="177:1" pos:end="177:6">#<cpp:directive pos:start="177:2" pos:end="177:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="179:5" pos:end="179:24">/* DCT &amp; quantize */</comment>

    <if_stmt pos:start="181:5" pos:end="197:5"><if pos:start="181:5" pos:end="185:5">if <condition pos:start="181:8" pos:end="181:24">(<expr pos:start="181:9" pos:end="181:23"><name pos:start="181:9" pos:end="181:23"><name pos:start="181:9" pos:end="181:9">s</name><operator pos:start="181:10" pos:end="181:11">-&gt;</operator><name pos:start="181:12" pos:end="181:23">h263_msmpeg4</name></name></expr>)</condition> <block pos:start="181:26" pos:end="185:5">{<block_content pos:start="183:9" pos:end="183:28">

        <expr_stmt pos:start="183:9" pos:end="183:28"><expr pos:start="183:9" pos:end="183:27"><call pos:start="183:9" pos:end="183:27"><name pos:start="183:9" pos:end="183:24">msmpeg4_dc_scale</name><argument_list pos:start="183:25" pos:end="183:27">(<argument pos:start="183:26" pos:end="183:26"><expr pos:start="183:26" pos:end="183:26"><name pos:start="183:26" pos:end="183:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="185:7" pos:end="189:5">else if <condition pos:start="185:15" pos:end="185:28">(<expr pos:start="185:16" pos:end="185:27"><name pos:start="185:16" pos:end="185:27"><name pos:start="185:16" pos:end="185:16">s</name><operator pos:start="185:17" pos:end="185:18">-&gt;</operator><name pos:start="185:19" pos:end="185:27">h263_pred</name></name></expr>)</condition> <block pos:start="185:30" pos:end="189:5">{<block_content pos:start="187:9" pos:end="187:25">

        <expr_stmt pos:start="187:9" pos:end="187:25"><expr pos:start="187:9" pos:end="187:24"><call pos:start="187:9" pos:end="187:24"><name pos:start="187:9" pos:end="187:21">h263_dc_scale</name><argument_list pos:start="187:22" pos:end="187:24">(<argument pos:start="187:23" pos:end="187:23"><expr pos:start="187:23" pos:end="187:23"><name pos:start="187:23" pos:end="187:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="189:7" pos:end="197:5">else <block pos:start="189:12" pos:end="197:5">{<block_content pos:start="193:9" pos:end="195:26">

        <comment type="block" pos:start="191:9" pos:end="191:41">/* default quantization values */</comment>

        <expr_stmt pos:start="193:9" pos:end="193:26"><expr pos:start="193:9" pos:end="193:25"><name pos:start="193:9" pos:end="193:21"><name pos:start="193:9" pos:end="193:9">s</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:21">y_dc_scale</name></name> <operator pos:start="193:23" pos:end="193:23">=</operator> <literal type="number" pos:start="193:25" pos:end="193:25">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:26"><expr pos:start="195:9" pos:end="195:25"><name pos:start="195:9" pos:end="195:21"><name pos:start="195:9" pos:end="195:9">s</name><operator pos:start="195:10" pos:end="195:11">-&gt;</operator><name pos:start="195:12" pos:end="195:21">c_dc_scale</name></name> <operator pos:start="195:23" pos:end="195:23">=</operator> <literal type="number" pos:start="195:25" pos:end="195:25">8</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <for pos:start="199:5" pos:end="203:5">for<control pos:start="199:8" pos:end="199:20">(<init pos:start="199:9" pos:end="199:12"><expr pos:start="199:9" pos:end="199:11"><name pos:start="199:9" pos:end="199:9">i</name><operator pos:start="199:10" pos:end="199:10">=</operator><literal type="number" pos:start="199:11" pos:end="199:11">0</literal></expr>;</init><condition pos:start="199:13" pos:end="199:16"><expr pos:start="199:13" pos:end="199:15"><name pos:start="199:13" pos:end="199:13">i</name><operator pos:start="199:14" pos:end="199:14">&lt;</operator><literal type="number" pos:start="199:15" pos:end="199:15">6</literal></expr>;</condition><incr pos:start="199:17" pos:end="199:19"><expr pos:start="199:17" pos:end="199:19"><name pos:start="199:17" pos:end="199:17">i</name><operator pos:start="199:18" pos:end="199:19">++</operator></expr></incr>)</control> <block pos:start="199:22" pos:end="203:5">{<block_content pos:start="201:9" pos:end="201:76">

        <expr_stmt pos:start="201:9" pos:end="201:76"><expr pos:start="201:9" pos:end="201:75"><name pos:start="201:9" pos:end="201:30"><name pos:start="201:9" pos:end="201:9">s</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:27">block_last_index</name><index pos:start="201:28" pos:end="201:30">[<expr pos:start="201:29" pos:end="201:29"><name pos:start="201:29" pos:end="201:29">i</name></expr>]</index></name> <operator pos:start="201:32" pos:end="201:32">=</operator> <call pos:start="201:34" pos:end="201:75"><name pos:start="201:34" pos:end="201:45">dct_quantize</name><argument_list pos:start="201:46" pos:end="201:75">(<argument pos:start="201:47" pos:end="201:47"><expr pos:start="201:47" pos:end="201:47"><name pos:start="201:47" pos:end="201:47">s</name></expr></argument>, <argument pos:start="201:50" pos:end="201:60"><expr pos:start="201:50" pos:end="201:60"><name pos:start="201:50" pos:end="201:60"><name pos:start="201:50" pos:end="201:50">s</name><operator pos:start="201:51" pos:end="201:52">-&gt;</operator><name pos:start="201:53" pos:end="201:57">block</name><index pos:start="201:58" pos:end="201:60">[<expr pos:start="201:59" pos:end="201:59"><name pos:start="201:59" pos:end="201:59">i</name></expr>]</index></name></expr></argument>, <argument pos:start="201:63" pos:end="201:63"><expr pos:start="201:63" pos:end="201:63"><name pos:start="201:63" pos:end="201:63">i</name></expr></argument>, <argument pos:start="201:66" pos:end="201:74"><expr pos:start="201:66" pos:end="201:74"><name pos:start="201:66" pos:end="201:74"><name pos:start="201:66" pos:end="201:66">s</name><operator pos:start="201:67" pos:end="201:68">-&gt;</operator><name pos:start="201:69" pos:end="201:74">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="207:5" pos:end="207:24">/* huffman encode */</comment>

    <switch pos:start="209:5" pos:end="239:5">switch<condition pos:start="209:11" pos:end="209:25">(<expr pos:start="209:12" pos:end="209:24"><name pos:start="209:12" pos:end="209:24"><name pos:start="209:12" pos:end="209:12">s</name><operator pos:start="209:13" pos:end="209:14">-&gt;</operator><name pos:start="209:15" pos:end="209:24">out_format</name></name></expr>)</condition> <block pos:start="209:27" pos:end="239:5">{<block_content pos:start="211:5" pos:end="237:14">

    <case pos:start="211:5" pos:end="211:19">case <expr pos:start="211:10" pos:end="211:18"><name pos:start="211:10" pos:end="211:18">FMT_MPEG1</name></expr>:</case>

        <expr_stmt pos:start="213:9" pos:end="213:57"><expr pos:start="213:9" pos:end="213:56"><call pos:start="213:9" pos:end="213:56"><name pos:start="213:9" pos:end="213:23">mpeg1_encode_mb</name><argument_list pos:start="213:24" pos:end="213:56">(<argument pos:start="213:25" pos:end="213:25"><expr pos:start="213:25" pos:end="213:25"><name pos:start="213:25" pos:end="213:25">s</name></expr></argument>, <argument pos:start="213:28" pos:end="213:35"><expr pos:start="213:28" pos:end="213:35"><name pos:start="213:28" pos:end="213:35"><name pos:start="213:28" pos:end="213:28">s</name><operator pos:start="213:29" pos:end="213:30">-&gt;</operator><name pos:start="213:31" pos:end="213:35">block</name></name></expr></argument>, <argument pos:start="213:38" pos:end="213:45"><expr pos:start="213:38" pos:end="213:45"><name pos:start="213:38" pos:end="213:45">motion_x</name></expr></argument>, <argument pos:start="213:48" pos:end="213:55"><expr pos:start="213:48" pos:end="213:55"><name pos:start="213:48" pos:end="213:55">motion_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="215:9" pos:end="215:14">break;</break>

    <case pos:start="217:5" pos:end="217:18">case <expr pos:start="217:10" pos:end="217:17"><name pos:start="217:10" pos:end="217:17">FMT_H263</name></expr>:</case>

        <if_stmt pos:start="219:9" pos:end="229:60"><if pos:start="219:9" pos:end="221:63">if <condition pos:start="219:12" pos:end="219:28">(<expr pos:start="219:13" pos:end="219:27"><name pos:start="219:13" pos:end="219:27"><name pos:start="219:13" pos:end="219:13">s</name><operator pos:start="219:14" pos:end="219:15">-&gt;</operator><name pos:start="219:16" pos:end="219:27">h263_msmpeg4</name></name></expr>)</condition><block type="pseudo" pos:start="221:13" pos:end="221:63"><block_content pos:start="221:13" pos:end="221:63">

            <expr_stmt pos:start="221:13" pos:end="221:63"><expr pos:start="221:13" pos:end="221:62"><call pos:start="221:13" pos:end="221:62"><name pos:start="221:13" pos:end="221:29">msmpeg4_encode_mb</name><argument_list pos:start="221:30" pos:end="221:62">(<argument pos:start="221:31" pos:end="221:31"><expr pos:start="221:31" pos:end="221:31"><name pos:start="221:31" pos:end="221:31">s</name></expr></argument>, <argument pos:start="221:34" pos:end="221:41"><expr pos:start="221:34" pos:end="221:41"><name pos:start="221:34" pos:end="221:41"><name pos:start="221:34" pos:end="221:34">s</name><operator pos:start="221:35" pos:end="221:36">-&gt;</operator><name pos:start="221:37" pos:end="221:41">block</name></name></expr></argument>, <argument pos:start="221:44" pos:end="221:51"><expr pos:start="221:44" pos:end="221:51"><name pos:start="221:44" pos:end="221:51">motion_x</name></expr></argument>, <argument pos:start="221:54" pos:end="221:61"><expr pos:start="221:54" pos:end="221:61"><name pos:start="221:54" pos:end="221:61">motion_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="223:9" pos:end="225:61">else if<condition pos:start="223:16" pos:end="223:29">(<expr pos:start="223:17" pos:end="223:28"><name pos:start="223:17" pos:end="223:28"><name pos:start="223:17" pos:end="223:17">s</name><operator pos:start="223:18" pos:end="223:19">-&gt;</operator><name pos:start="223:20" pos:end="223:28">h263_pred</name></name></expr>)</condition><block type="pseudo" pos:start="225:13" pos:end="225:61"><block_content pos:start="225:13" pos:end="225:61">

            <expr_stmt pos:start="225:13" pos:end="225:61"><expr pos:start="225:13" pos:end="225:60"><call pos:start="225:13" pos:end="225:60"><name pos:start="225:13" pos:end="225:27">mpeg4_encode_mb</name><argument_list pos:start="225:28" pos:end="225:60">(<argument pos:start="225:29" pos:end="225:29"><expr pos:start="225:29" pos:end="225:29"><name pos:start="225:29" pos:end="225:29">s</name></expr></argument>, <argument pos:start="225:32" pos:end="225:39"><expr pos:start="225:32" pos:end="225:39"><name pos:start="225:32" pos:end="225:39"><name pos:start="225:32" pos:end="225:32">s</name><operator pos:start="225:33" pos:end="225:34">-&gt;</operator><name pos:start="225:35" pos:end="225:39">block</name></name></expr></argument>, <argument pos:start="225:42" pos:end="225:49"><expr pos:start="225:42" pos:end="225:49"><name pos:start="225:42" pos:end="225:49">motion_x</name></expr></argument>, <argument pos:start="225:52" pos:end="225:59"><expr pos:start="225:52" pos:end="225:59"><name pos:start="225:52" pos:end="225:59">motion_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="227:9" pos:end="229:60">else<block type="pseudo" pos:start="229:13" pos:end="229:60"><block_content pos:start="229:13" pos:end="229:60">

            <expr_stmt pos:start="229:13" pos:end="229:60"><expr pos:start="229:13" pos:end="229:59"><call pos:start="229:13" pos:end="229:59"><name pos:start="229:13" pos:end="229:26">h263_encode_mb</name><argument_list pos:start="229:27" pos:end="229:59">(<argument pos:start="229:28" pos:end="229:28"><expr pos:start="229:28" pos:end="229:28"><name pos:start="229:28" pos:end="229:28">s</name></expr></argument>, <argument pos:start="229:31" pos:end="229:38"><expr pos:start="229:31" pos:end="229:38"><name pos:start="229:31" pos:end="229:38"><name pos:start="229:31" pos:end="229:31">s</name><operator pos:start="229:32" pos:end="229:33">-&gt;</operator><name pos:start="229:34" pos:end="229:38">block</name></name></expr></argument>, <argument pos:start="229:41" pos:end="229:48"><expr pos:start="229:41" pos:end="229:48"><name pos:start="229:41" pos:end="229:48">motion_x</name></expr></argument>, <argument pos:start="229:51" pos:end="229:58"><expr pos:start="229:51" pos:end="229:58"><name pos:start="229:51" pos:end="229:58">motion_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="231:9" pos:end="231:14">break;</break>

    <case pos:start="233:5" pos:end="233:19">case <expr pos:start="233:10" pos:end="233:18"><name pos:start="233:10" pos:end="233:18">FMT_MJPEG</name></expr>:</case>

        <expr_stmt pos:start="235:9" pos:end="235:37"><expr pos:start="235:9" pos:end="235:36"><call pos:start="235:9" pos:end="235:36"><name pos:start="235:9" pos:end="235:23">mjpeg_encode_mb</name><argument_list pos:start="235:24" pos:end="235:36">(<argument pos:start="235:25" pos:end="235:25"><expr pos:start="235:25" pos:end="235:25"><name pos:start="235:25" pos:end="235:25">s</name></expr></argument>, <argument pos:start="235:28" pos:end="235:35"><expr pos:start="235:28" pos:end="235:35"><name pos:start="235:28" pos:end="235:35"><name pos:start="235:28" pos:end="235:28">s</name><operator pos:start="235:29" pos:end="235:30">-&gt;</operator><name pos:start="235:31" pos:end="235:35">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="237:9" pos:end="237:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
