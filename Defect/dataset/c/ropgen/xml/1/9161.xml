<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9161.c" pos:tabs="8"><function pos:start="1:1" pos:end="577:17"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">cpu_x86_cpuid</name><parameter_list pos:start="1:19" pos:end="5:48">(<parameter pos:start="1:20" pos:end="1:35"><decl pos:start="1:20" pos:end="1:35"><type pos:start="1:20" pos:end="1:35"><name pos:start="1:20" pos:end="1:30">CPUX86State</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">env</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:51"><decl pos:start="1:38" pos:end="1:51"><type pos:start="1:38" pos:end="1:51"><name pos:start="1:38" pos:end="1:45">uint32_t</name></type> <name pos:start="1:47" pos:end="1:51">index</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:67"><decl pos:start="1:54" pos:end="1:67"><type pos:start="1:54" pos:end="1:67"><name pos:start="1:54" pos:end="1:61">uint32_t</name></type> <name pos:start="1:63" pos:end="1:67">count</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:32"><decl pos:start="3:20" pos:end="3:32"><type pos:start="3:20" pos:end="3:32"><name pos:start="3:20" pos:end="3:27">uint32_t</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:32">eax</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:47"><decl pos:start="3:35" pos:end="3:47"><type pos:start="3:35" pos:end="3:47"><name pos:start="3:35" pos:end="3:42">uint32_t</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:47">ebx</name></decl></parameter>,

                   <parameter pos:start="5:20" pos:end="5:32"><decl pos:start="5:20" pos:end="5:32"><type pos:start="5:20" pos:end="5:32"><name pos:start="5:20" pos:end="5:27">uint32_t</name> <modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:32">ecx</name></decl></parameter>, <parameter pos:start="5:35" pos:end="5:47"><decl pos:start="5:35" pos:end="5:47"><type pos:start="5:35" pos:end="5:47"><name pos:start="5:35" pos:end="5:42">uint32_t</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:47">edx</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="577:17">{<block_content pos:start="9:5" pos:end="577:17">

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">X86CPU</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:15">cpu</name> <init pos:start="9:17" pos:end="9:38">= <expr pos:start="9:19" pos:end="9:38"><call pos:start="9:19" pos:end="9:38"><name pos:start="9:19" pos:end="9:33">x86_env_get_cpu</name><argument_list pos:start="9:34" pos:end="9:38">(<argument pos:start="9:35" pos:end="9:37"><expr pos:start="9:35" pos:end="9:37"><name pos:start="9:35" pos:end="9:37">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">CPUState</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">cs</name> <init pos:start="11:18" pos:end="11:27">= <expr pos:start="11:20" pos:end="11:27"><call pos:start="11:20" pos:end="11:27"><name pos:start="11:20" pos:end="11:22">CPU</name><argument_list pos:start="11:23" pos:end="11:27">(<argument pos:start="11:24" pos:end="11:26"><expr pos:start="11:24" pos:end="11:26"><name pos:start="11:24" pos:end="11:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:39">/* test if maximum index reached */</comment>

    <if_stmt pos:start="17:5" pos:end="577:17"><if pos:start="17:5" pos:end="577:17">if <condition pos:start="17:8" pos:end="17:27">(<expr pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:13">index</name> <operator pos:start="17:15" pos:end="17:15">&amp;</operator> <literal type="number" pos:start="17:17" pos:end="17:26">0x80000000</literal></expr>)</condition> <block pos:start="17:29" pos:end="577:17">{<block_content pos:start="19:9" pos:end="577:17">

        <if_stmt pos:start="19:9" pos:end="577:17"><if pos:start="19:9" pos:end="577:17">if <condition pos:start="19:12" pos:end="19:38">(<expr pos:start="19:13" pos:end="19:37"><name pos:start="19:13" pos:end="19:17">index</name> <operator pos:start="19:19" pos:end="19:19">&gt;</operator> <name pos:start="19:21" pos:end="19:37"><name pos:start="19:21" pos:end="19:23">env</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:37">cpuid_xlevel</name></name></expr>)</condition> <block pos:start="19:40" pos:end="577:17">{<block_content pos:start="21:13" pos:end="577:17">

            <if_stmt pos:start="21:13" pos:end="577:17"><if pos:start="21:13" pos:end="577:17">if <condition pos:start="21:16" pos:end="21:39">(<expr pos:start="21:17" pos:end="21:38"><name pos:start="21:17" pos:end="21:34"><name pos:start="21:17" pos:end="21:19">env</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:34">cpuid_xlevel2</name></name> <operator pos:start="21:36" pos:end="21:36">&gt;</operator> <literal type="number" pos:start="21:38" pos:end="21:38">0</literal></expr>)</condition> <block pos:start="21:41" pos:end="577:17">{<block_content pos:start="25:17" pos:end="577:17">

                <comment type="block" pos:start="23:17" pos:end="23:61">/* Handle the Centaur's CPUID instruction. */</comment>

                <if_stmt pos:start="25:17" pos:end="48:5"><if pos:start="25:17" pos:end="29:17">if <condition pos:start="25:20" pos:end="25:47">(<expr pos:start="25:21" pos:end="25:46"><name pos:start="25:21" pos:end="25:25">index</name> <operator pos:start="25:27" pos:end="25:27">&gt;</operator> <name pos:start="25:29" pos:end="25:46"><name pos:start="25:29" pos:end="25:31">env</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:46">cpuid_xlevel2</name></name></expr>)</condition> <block pos:start="25:49" pos:end="29:17">{<block_content pos:start="27:21" pos:end="27:47">

                    <expr_stmt pos:start="27:21" pos:end="27:47"><expr pos:start="27:21" pos:end="27:46"><name pos:start="27:21" pos:end="27:25">index</name> <operator pos:start="27:27" pos:end="27:27">=</operator> <name pos:start="27:29" pos:end="27:46"><name pos:start="27:29" pos:end="27:31">env</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:46">cpuid_xlevel2</name></name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="29:19" pos:end="34:13">else if <condition pos:start="29:27" pos:end="29:46">(<expr pos:start="29:28" pos:end="29:45"><name pos:start="29:28" pos:end="29:32">index</name> <operator pos:start="29:34" pos:end="29:34">&lt;</operator> <literal type="number" pos:start="29:36" pos:end="29:45">0xC0000000</literal></expr>)</condition> <block pos:start="29:48" pos:end="34:13">{<block_content pos:start="31:21" pos:end="31:46">

                    <expr_stmt pos:start="31:21" pos:end="31:46"><expr pos:start="31:21" pos:end="31:45"><name pos:start="31:21" pos:end="31:25">index</name> <operator pos:start="31:27" pos:end="31:27">=</operator> <name pos:start="31:29" pos:end="31:45"><name pos:start="31:29" pos:end="31:31">env</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:45">cpuid_xlevel</name></name></expr>;</expr_stmt>


            </block_content>}</block></if> <else pos:start="34:15" pos:end="48:5">else <block pos:start="34:20" pos:end="48:5">{<block_content pos:start="44:17" pos:end="44:42">

                <comment type="block" pos:start="36:17" pos:end="42:19">/* Intel documentation states that invalid EAX input will

                 * return the same information as EAX=cpuid_level

                 * (Intel SDM Vol. 2A - Instruction Set Reference - CPUID)

                 */</comment>

                <expr_stmt pos:start="44:17" pos:end="44:42"><expr pos:start="44:17" pos:end="44:41"><name pos:start="44:17" pos:end="44:21">index</name> <operator pos:start="44:23" pos:end="44:23">=</operator>  <name pos:start="44:26" pos:end="44:41"><name pos:start="44:26" pos:end="44:28">env</name><operator pos:start="44:29" pos:end="44:30">-&gt;</operator><name pos:start="44:31" pos:end="44:41">cpuid_level</name></name></expr>;</expr_stmt>



    </block_content>}</block></else></if_stmt> <if_stmt pos:start="48:7" pos:end="577:17"><else pos:start="48:7" pos:end="577:17">else <block pos:start="48:12" pos:end="577:17">{<block_content pos:start="50:9" pos:end="577:17">

        <if_stmt pos:start="50:9" pos:end="52:37"><if pos:start="50:9" pos:end="52:37">if <condition pos:start="50:12" pos:end="50:37">(<expr pos:start="50:13" pos:end="50:36"><name pos:start="50:13" pos:end="50:17">index</name> <operator pos:start="50:19" pos:end="50:19">&gt;</operator> <name pos:start="50:21" pos:end="50:36"><name pos:start="50:21" pos:end="50:23">env</name><operator pos:start="50:24" pos:end="50:25">-&gt;</operator><name pos:start="50:26" pos:end="50:36">cpuid_level</name></name></expr>)</condition><block type="pseudo" pos:start="52:13" pos:end="52:37"><block_content pos:start="52:13" pos:end="52:37">

            <expr_stmt pos:start="52:13" pos:end="52:37"><expr pos:start="52:13" pos:end="52:36"><name pos:start="52:13" pos:end="52:17">index</name> <operator pos:start="52:19" pos:end="52:19">=</operator> <name pos:start="52:21" pos:end="52:36"><name pos:start="52:21" pos:end="52:23">env</name><operator pos:start="52:24" pos:end="52:25">-&gt;</operator><name pos:start="52:26" pos:end="52:36">cpuid_level</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>




    <switch pos:start="57:5" pos:end="577:17">switch<condition pos:start="57:11" pos:end="57:17">(<expr pos:start="57:12" pos:end="57:16"><name pos:start="57:12" pos:end="57:16">index</name></expr>)</condition> <block pos:start="57:19" pos:end="577:17">{<block_content pos:start="59:5" pos:end="577:17">

    <case pos:start="59:5" pos:end="59:11">case <expr pos:start="59:10" pos:end="59:10"><literal type="number" pos:start="59:10" pos:end="59:10">0</literal></expr>:</case>

        <expr_stmt pos:start="61:9" pos:end="61:32"><expr pos:start="61:9" pos:end="61:31"><operator pos:start="61:9" pos:end="61:9">*</operator><name pos:start="61:10" pos:end="61:12">eax</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <name pos:start="61:16" pos:end="61:31"><name pos:start="61:16" pos:end="61:18">env</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:31">cpuid_level</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:45"><expr pos:start="63:9" pos:end="63:44"><call pos:start="63:9" pos:end="63:44"><name pos:start="63:9" pos:end="63:24">get_cpuid_vendor</name><argument_list pos:start="63:25" pos:end="63:44">(<argument pos:start="63:26" pos:end="63:28"><expr pos:start="63:26" pos:end="63:28"><name pos:start="63:26" pos:end="63:28">env</name></expr></argument>, <argument pos:start="63:31" pos:end="63:33"><expr pos:start="63:31" pos:end="63:33"><name pos:start="63:31" pos:end="63:33">ebx</name></expr></argument>, <argument pos:start="63:36" pos:end="63:38"><expr pos:start="63:36" pos:end="63:38"><name pos:start="63:36" pos:end="63:38">ecx</name></expr></argument>, <argument pos:start="63:41" pos:end="63:43"><expr pos:start="63:41" pos:end="63:43"><name pos:start="63:41" pos:end="63:43">edx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <case pos:start="66:5" pos:end="66:11">case <expr pos:start="66:10" pos:end="66:10"><literal type="number" pos:start="66:10" pos:end="66:10">1</literal></expr>:</case>

        <expr_stmt pos:start="68:9" pos:end="68:34"><expr pos:start="68:9" pos:end="68:33"><operator pos:start="68:9" pos:end="68:9">*</operator><name pos:start="68:10" pos:end="68:12">eax</name> <operator pos:start="68:14" pos:end="68:14">=</operator> <name pos:start="68:16" pos:end="68:33"><name pos:start="68:16" pos:end="68:18">env</name><operator pos:start="68:19" pos:end="68:20">-&gt;</operator><name pos:start="68:21" pos:end="68:33">cpuid_version</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="70:9" pos:end="70:51"><expr pos:start="70:9" pos:end="70:50"><operator pos:start="70:9" pos:end="70:9">*</operator><name pos:start="70:10" pos:end="70:12">ebx</name> <operator pos:start="70:14" pos:end="70:14">=</operator> <operator pos:start="70:16" pos:end="70:16">(</operator><name pos:start="70:17" pos:end="70:34"><name pos:start="70:17" pos:end="70:19">env</name><operator pos:start="70:20" pos:end="70:21">-&gt;</operator><name pos:start="70:22" pos:end="70:34">cpuid_apic_id</name></name> <operator pos:start="70:36" pos:end="70:37">&lt;&lt;</operator> <literal type="number" pos:start="70:39" pos:end="70:40">24</literal><operator pos:start="70:41" pos:end="70:41">)</operator> <operator pos:start="70:43" pos:end="70:43">|</operator> <literal type="number" pos:start="70:45" pos:end="70:45">8</literal> <operator pos:start="70:47" pos:end="70:48">&lt;&lt;</operator> <literal type="number" pos:start="70:50" pos:end="70:50">8</literal></expr>;</expr_stmt> <comment type="block" pos:start="70:53" pos:end="70:101">/* CLFLUSH size in quad words, Linux wants it. */</comment>

        <expr_stmt pos:start="72:9" pos:end="72:41"><expr pos:start="72:9" pos:end="72:40"><operator pos:start="72:9" pos:end="72:9">*</operator><name pos:start="72:10" pos:end="72:12">ecx</name> <operator pos:start="72:14" pos:end="72:14">=</operator> <name pos:start="72:16" pos:end="72:40"><name pos:start="72:16" pos:end="72:18">env</name><operator pos:start="72:19" pos:end="72:20">-&gt;</operator><name pos:start="72:21" pos:end="72:28">features</name><index pos:start="72:29" pos:end="72:40">[<expr pos:start="72:30" pos:end="72:39"><name pos:start="72:30" pos:end="72:39">FEAT_1_ECX</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="74:9" pos:end="74:41"><expr pos:start="74:9" pos:end="74:40"><operator pos:start="74:9" pos:end="74:9">*</operator><name pos:start="74:10" pos:end="74:12">edx</name> <operator pos:start="74:14" pos:end="74:14">=</operator> <name pos:start="74:16" pos:end="74:40"><name pos:start="74:16" pos:end="74:18">env</name><operator pos:start="74:19" pos:end="74:20">-&gt;</operator><name pos:start="74:21" pos:end="74:28">features</name><index pos:start="74:29" pos:end="74:40">[<expr pos:start="74:30" pos:end="74:39"><name pos:start="74:30" pos:end="74:39">FEAT_1_EDX</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="76:9" pos:end="577:17"><if pos:start="76:9" pos:end="577:17">if <condition pos:start="76:12" pos:end="76:46">(<expr pos:start="76:13" pos:end="76:45"><name pos:start="76:13" pos:end="76:24"><name pos:start="76:13" pos:end="76:14">cs</name><operator pos:start="76:15" pos:end="76:16">-&gt;</operator><name pos:start="76:17" pos:end="76:24">nr_cores</name></name> <operator pos:start="76:26" pos:end="76:26">*</operator> <name pos:start="76:28" pos:end="76:41"><name pos:start="76:28" pos:end="76:29">cs</name><operator pos:start="76:30" pos:end="76:31">-&gt;</operator><name pos:start="76:32" pos:end="76:41">nr_threads</name></name> <operator pos:start="76:43" pos:end="76:43">&gt;</operator> <literal type="number" pos:start="76:45" pos:end="76:45">1</literal></expr>)</condition> <block pos:start="76:48" pos:end="577:17">{<block_content pos:start="78:13" pos:end="577:17">

            <expr_stmt pos:start="78:13" pos:end="78:58"><expr pos:start="78:13" pos:end="78:57"><operator pos:start="78:13" pos:end="78:13">*</operator><name pos:start="78:14" pos:end="78:16">ebx</name> <operator pos:start="78:18" pos:end="78:19">|=</operator> <operator pos:start="78:21" pos:end="78:21">(</operator><name pos:start="78:22" pos:end="78:33"><name pos:start="78:22" pos:end="78:23">cs</name><operator pos:start="78:24" pos:end="78:25">-&gt;</operator><name pos:start="78:26" pos:end="78:33">nr_cores</name></name> <operator pos:start="78:35" pos:end="78:35">*</operator> <name pos:start="78:37" pos:end="78:50"><name pos:start="78:37" pos:end="78:38">cs</name><operator pos:start="78:39" pos:end="78:40">-&gt;</operator><name pos:start="78:41" pos:end="78:50">nr_threads</name></name><operator pos:start="78:51" pos:end="78:51">)</operator> <operator pos:start="78:53" pos:end="78:54">&lt;&lt;</operator> <literal type="number" pos:start="78:56" pos:end="78:57">16</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="80:13" pos:end="80:28"><expr pos:start="80:13" pos:end="80:27"><operator pos:start="80:13" pos:end="80:13">*</operator><name pos:start="80:14" pos:end="80:16">edx</name> <operator pos:start="80:18" pos:end="80:19">|=</operator> <literal type="number" pos:start="80:21" pos:end="80:21">1</literal> <operator pos:start="80:23" pos:end="80:24">&lt;&lt;</operator> <literal type="number" pos:start="80:26" pos:end="80:27">28</literal></expr>;</expr_stmt>    <comment type="block" pos:start="80:33" pos:end="80:45">/* HTT bit */</comment>



    <case pos:start="84:5" pos:end="84:11">case <expr pos:start="84:10" pos:end="84:10"><literal type="number" pos:start="84:10" pos:end="84:10">2</literal></expr>:</case>

        <comment type="block" pos:start="86:9" pos:end="86:62">/* cache info: needed for Pentium Pro compatibility */</comment>


            <expr_stmt pos:start="89:13" pos:end="89:53"><expr pos:start="89:13" pos:end="89:52"><call pos:start="89:13" pos:end="89:52"><name pos:start="89:13" pos:end="89:22">host_cpuid</name><argument_list pos:start="89:23" pos:end="89:52">(<argument pos:start="89:24" pos:end="89:28"><expr pos:start="89:24" pos:end="89:28"><name pos:start="89:24" pos:end="89:28">index</name></expr></argument>, <argument pos:start="89:31" pos:end="89:31"><expr pos:start="89:31" pos:end="89:31"><literal type="number" pos:start="89:31" pos:end="89:31">0</literal></expr></argument>, <argument pos:start="89:34" pos:end="89:36"><expr pos:start="89:34" pos:end="89:36"><name pos:start="89:34" pos:end="89:36">eax</name></expr></argument>, <argument pos:start="89:39" pos:end="89:41"><expr pos:start="89:39" pos:end="89:41"><name pos:start="89:39" pos:end="89:41">ebx</name></expr></argument>, <argument pos:start="89:44" pos:end="89:46"><expr pos:start="89:44" pos:end="89:46"><name pos:start="89:44" pos:end="89:46">ecx</name></expr></argument>, <argument pos:start="89:49" pos:end="89:51"><expr pos:start="89:49" pos:end="89:51"><name pos:start="89:49" pos:end="89:51">edx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:17"><expr pos:start="93:9" pos:end="93:16"><operator pos:start="93:9" pos:end="93:9">*</operator><name pos:start="93:10" pos:end="93:12">eax</name> <operator pos:start="93:14" pos:end="93:14">=</operator> <literal type="number" pos:start="93:16" pos:end="93:16">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="93:19" pos:end="93:61">/* Number of CPUID[EAX=2] calls required */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:17"><expr pos:start="95:9" pos:end="95:16"><operator pos:start="95:9" pos:end="95:9">*</operator><name pos:start="95:10" pos:end="95:12">ebx</name> <operator pos:start="95:14" pos:end="95:14">=</operator> <literal type="number" pos:start="95:16" pos:end="95:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:17"><expr pos:start="97:9" pos:end="97:16"><operator pos:start="97:9" pos:end="97:9">*</operator><name pos:start="97:10" pos:end="97:12">ecx</name> <operator pos:start="97:14" pos:end="97:14">=</operator> <literal type="number" pos:start="97:16" pos:end="97:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="103:31"><expr pos:start="99:9" pos:end="103:30"><operator pos:start="99:9" pos:end="99:9">*</operator><name pos:start="99:10" pos:end="99:12">edx</name> <operator pos:start="99:14" pos:end="99:14">=</operator> <operator pos:start="99:16" pos:end="99:16">(</operator><name pos:start="99:17" pos:end="99:30">L1D_DESCRIPTOR</name> <operator pos:start="99:32" pos:end="99:33">&lt;&lt;</operator> <literal type="number" pos:start="99:35" pos:end="99:36">16</literal><operator pos:start="99:37" pos:end="99:37">)</operator> <operator pos:start="99:39" pos:end="99:39">|</operator> \

               <operator pos:start="101:16" pos:end="101:16">(</operator><name pos:start="101:17" pos:end="101:30">L1I_DESCRIPTOR</name> <operator pos:start="101:32" pos:end="101:33">&lt;&lt;</operator>  <literal type="number" pos:start="101:36" pos:end="101:36">8</literal><operator pos:start="101:37" pos:end="101:37">)</operator> <operator pos:start="101:39" pos:end="101:39">|</operator> \

               <operator pos:start="103:16" pos:end="103:16">(</operator><name pos:start="103:17" pos:end="103:29">L2_DESCRIPTOR</name><operator pos:start="103:30" pos:end="103:30">)</operator></expr>;</expr_stmt>


    <case pos:start="106:5" pos:end="106:11">case <expr pos:start="106:10" pos:end="106:10"><literal type="number" pos:start="106:10" pos:end="106:10">4</literal></expr>:</case>

        <comment type="block" pos:start="108:9" pos:end="108:55">/* cache info: needed for Core compatibility */</comment>





        <if_stmt pos:start="114:9" pos:end="577:17"><if pos:start="114:9" pos:end="118:9">if <condition pos:start="114:12" pos:end="114:29">(<expr pos:start="114:13" pos:end="114:28"><name pos:start="114:13" pos:end="114:24"><name pos:start="114:13" pos:end="114:14">cs</name><operator pos:start="114:15" pos:end="114:16">-&gt;</operator><name pos:start="114:17" pos:end="114:24">nr_cores</name></name> <operator pos:start="114:26" pos:end="114:26">&gt;</operator> <literal type="number" pos:start="114:28" pos:end="114:28">1</literal></expr>)</condition> <block pos:start="114:31" pos:end="118:9">{<block_content pos:start="116:13" pos:end="116:44">

            <expr_stmt pos:start="116:13" pos:end="116:44"><expr pos:start="116:13" pos:end="116:43"><operator pos:start="116:13" pos:end="116:13">*</operator><name pos:start="116:14" pos:end="116:16">eax</name> <operator pos:start="116:18" pos:end="116:18">=</operator> <operator pos:start="116:20" pos:end="116:20">(</operator><name pos:start="116:21" pos:end="116:32"><name pos:start="116:21" pos:end="116:22">cs</name><operator pos:start="116:23" pos:end="116:24">-&gt;</operator><name pos:start="116:25" pos:end="116:32">nr_cores</name></name> <operator pos:start="116:34" pos:end="116:34">-</operator> <literal type="number" pos:start="116:36" pos:end="116:36">1</literal><operator pos:start="116:37" pos:end="116:37">)</operator> <operator pos:start="116:39" pos:end="116:40">&lt;&lt;</operator> <literal type="number" pos:start="116:42" pos:end="116:43">26</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="118:11" pos:end="577:17">else <block pos:start="118:16" pos:end="577:17">{<block_content pos:start="120:13" pos:end="577:17">

            <expr_stmt pos:start="120:13" pos:end="120:21"><expr pos:start="120:13" pos:end="120:20"><operator pos:start="120:13" pos:end="120:13">*</operator><name pos:start="120:14" pos:end="120:16">eax</name> <operator pos:start="120:18" pos:end="120:18">=</operator> <literal type="number" pos:start="120:20" pos:end="120:20">0</literal></expr>;</expr_stmt>


        <switch pos:start="123:9" pos:end="577:17">switch <condition pos:start="123:16" pos:end="123:22">(<expr pos:start="123:17" pos:end="123:21"><name pos:start="123:17" pos:end="123:21">count</name></expr>)</condition> <block pos:start="123:24" pos:end="577:17">{<block_content pos:start="125:13" pos:end="577:17">

            <case pos:start="125:13" pos:end="125:19">case <expr pos:start="125:18" pos:end="125:18"><literal type="number" pos:start="125:18" pos:end="125:18">0</literal></expr>:</case> <comment type="block" pos:start="125:21" pos:end="125:40">/* L1 dcache info */</comment>

                <expr_stmt pos:start="127:17" pos:end="131:48"><expr pos:start="127:17" pos:end="131:47"><operator pos:start="127:17" pos:end="127:17">*</operator><name pos:start="127:18" pos:end="127:20">eax</name> <operator pos:start="127:22" pos:end="127:23">|=</operator> <name pos:start="127:25" pos:end="127:43">CPUID_4_TYPE_DCACHE</name> <operator pos:start="127:45" pos:end="127:45">|</operator> \

                        <call pos:start="129:25" pos:end="129:40"><name pos:start="129:25" pos:end="129:37">CPUID_4_LEVEL</name><argument_list pos:start="129:38" pos:end="129:40">(<argument pos:start="129:39" pos:end="129:39"><expr pos:start="129:39" pos:end="129:39"><literal type="number" pos:start="129:39" pos:end="129:39">1</literal></expr></argument>)</argument_list></call> <operator pos:start="129:42" pos:end="129:42">|</operator> \

                        <name pos:start="131:25" pos:end="131:47">CPUID_4_SELF_INIT_LEVEL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="137:55"><expr pos:start="133:17" pos:end="137:54"><operator pos:start="133:17" pos:end="133:17">*</operator><name pos:start="133:18" pos:end="133:20">ebx</name> <operator pos:start="133:22" pos:end="133:22">=</operator> <operator pos:start="133:24" pos:end="133:24">(</operator><name pos:start="133:25" pos:end="133:37">L1D_LINE_SIZE</name> <operator pos:start="133:39" pos:end="133:39">-</operator> <literal type="number" pos:start="133:41" pos:end="133:41">1</literal><operator pos:start="133:42" pos:end="133:42">)</operator> <operator pos:start="133:44" pos:end="133:44">|</operator> \

                       <operator pos:start="135:24" pos:end="135:24">(</operator><operator pos:start="135:25" pos:end="135:25">(</operator><name pos:start="135:26" pos:end="135:39">L1D_PARTITIONS</name> <operator pos:start="135:41" pos:end="135:41">-</operator> <literal type="number" pos:start="135:43" pos:end="135:43">1</literal><operator pos:start="135:44" pos:end="135:44">)</operator> <operator pos:start="135:46" pos:end="135:47">&lt;&lt;</operator> <literal type="number" pos:start="135:49" pos:end="135:50">12</literal><operator pos:start="135:51" pos:end="135:51">)</operator> <operator pos:start="135:53" pos:end="135:53">|</operator> \

                       <operator pos:start="137:24" pos:end="137:24">(</operator><operator pos:start="137:25" pos:end="137:25">(</operator><name pos:start="137:26" pos:end="137:42">L1D_ASSOCIATIVITY</name> <operator pos:start="137:44" pos:end="137:44">-</operator> <literal type="number" pos:start="137:46" pos:end="137:46">1</literal><operator pos:start="137:47" pos:end="137:47">)</operator> <operator pos:start="137:49" pos:end="137:50">&lt;&lt;</operator> <literal type="number" pos:start="137:52" pos:end="137:53">22</literal><operator pos:start="137:54" pos:end="137:54">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:36"><expr pos:start="139:17" pos:end="139:35"><operator pos:start="139:17" pos:end="139:17">*</operator><name pos:start="139:18" pos:end="139:20">ecx</name> <operator pos:start="139:22" pos:end="139:22">=</operator> <name pos:start="139:24" pos:end="139:31">L1D_SETS</name> <operator pos:start="139:33" pos:end="139:33">-</operator> <literal type="number" pos:start="139:35" pos:end="139:35">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:47"><expr pos:start="141:17" pos:end="141:46"><operator pos:start="141:17" pos:end="141:17">*</operator><name pos:start="141:18" pos:end="141:20">edx</name> <operator pos:start="141:22" pos:end="141:22">=</operator> <name pos:start="141:24" pos:end="141:46">CPUID_4_NO_INVD_SHARING</name></expr>;</expr_stmt>


            <case pos:start="144:13" pos:end="144:19">case <expr pos:start="144:18" pos:end="144:18"><literal type="number" pos:start="144:18" pos:end="144:18">1</literal></expr>:</case> <comment type="block" pos:start="144:21" pos:end="144:40">/* L1 icache info */</comment>

                <expr_stmt pos:start="146:17" pos:end="150:48"><expr pos:start="146:17" pos:end="150:47"><operator pos:start="146:17" pos:end="146:17">*</operator><name pos:start="146:18" pos:end="146:20">eax</name> <operator pos:start="146:22" pos:end="146:23">|=</operator> <name pos:start="146:25" pos:end="146:43">CPUID_4_TYPE_ICACHE</name> <operator pos:start="146:45" pos:end="146:45">|</operator> \

                        <call pos:start="148:25" pos:end="148:40"><name pos:start="148:25" pos:end="148:37">CPUID_4_LEVEL</name><argument_list pos:start="148:38" pos:end="148:40">(<argument pos:start="148:39" pos:end="148:39"><expr pos:start="148:39" pos:end="148:39"><literal type="number" pos:start="148:39" pos:end="148:39">1</literal></expr></argument>)</argument_list></call> <operator pos:start="148:42" pos:end="148:42">|</operator> \

                        <name pos:start="150:25" pos:end="150:47">CPUID_4_SELF_INIT_LEVEL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="152:17" pos:end="156:55"><expr pos:start="152:17" pos:end="156:54"><operator pos:start="152:17" pos:end="152:17">*</operator><name pos:start="152:18" pos:end="152:20">ebx</name> <operator pos:start="152:22" pos:end="152:22">=</operator> <operator pos:start="152:24" pos:end="152:24">(</operator><name pos:start="152:25" pos:end="152:37">L1I_LINE_SIZE</name> <operator pos:start="152:39" pos:end="152:39">-</operator> <literal type="number" pos:start="152:41" pos:end="152:41">1</literal><operator pos:start="152:42" pos:end="152:42">)</operator> <operator pos:start="152:44" pos:end="152:44">|</operator> \

                       <operator pos:start="154:24" pos:end="154:24">(</operator><operator pos:start="154:25" pos:end="154:25">(</operator><name pos:start="154:26" pos:end="154:39">L1I_PARTITIONS</name> <operator pos:start="154:41" pos:end="154:41">-</operator> <literal type="number" pos:start="154:43" pos:end="154:43">1</literal><operator pos:start="154:44" pos:end="154:44">)</operator> <operator pos:start="154:46" pos:end="154:47">&lt;&lt;</operator> <literal type="number" pos:start="154:49" pos:end="154:50">12</literal><operator pos:start="154:51" pos:end="154:51">)</operator> <operator pos:start="154:53" pos:end="154:53">|</operator> \

                       <operator pos:start="156:24" pos:end="156:24">(</operator><operator pos:start="156:25" pos:end="156:25">(</operator><name pos:start="156:26" pos:end="156:42">L1I_ASSOCIATIVITY</name> <operator pos:start="156:44" pos:end="156:44">-</operator> <literal type="number" pos:start="156:46" pos:end="156:46">1</literal><operator pos:start="156:47" pos:end="156:47">)</operator> <operator pos:start="156:49" pos:end="156:50">&lt;&lt;</operator> <literal type="number" pos:start="156:52" pos:end="156:53">22</literal><operator pos:start="156:54" pos:end="156:54">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="158:17" pos:end="158:36"><expr pos:start="158:17" pos:end="158:35"><operator pos:start="158:17" pos:end="158:17">*</operator><name pos:start="158:18" pos:end="158:20">ecx</name> <operator pos:start="158:22" pos:end="158:22">=</operator> <name pos:start="158:24" pos:end="158:31">L1I_SETS</name> <operator pos:start="158:33" pos:end="158:33">-</operator> <literal type="number" pos:start="158:35" pos:end="158:35">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="160:17" pos:end="160:47"><expr pos:start="160:17" pos:end="160:46"><operator pos:start="160:17" pos:end="160:17">*</operator><name pos:start="160:18" pos:end="160:20">edx</name> <operator pos:start="160:22" pos:end="160:22">=</operator> <name pos:start="160:24" pos:end="160:46">CPUID_4_NO_INVD_SHARING</name></expr>;</expr_stmt>


            <case pos:start="163:13" pos:end="163:19">case <expr pos:start="163:18" pos:end="163:18"><literal type="number" pos:start="163:18" pos:end="163:18">2</literal></expr>:</case> <comment type="block" pos:start="163:21" pos:end="163:39">/* L2 cache info */</comment>

                <expr_stmt pos:start="165:17" pos:end="169:48"><expr pos:start="165:17" pos:end="169:47"><operator pos:start="165:17" pos:end="165:17">*</operator><name pos:start="165:18" pos:end="165:20">eax</name> <operator pos:start="165:22" pos:end="165:23">|=</operator> <name pos:start="165:25" pos:end="165:44">CPUID_4_TYPE_UNIFIED</name> <operator pos:start="165:46" pos:end="165:46">|</operator> \

                        <call pos:start="167:25" pos:end="167:40"><name pos:start="167:25" pos:end="167:37">CPUID_4_LEVEL</name><argument_list pos:start="167:38" pos:end="167:40">(<argument pos:start="167:39" pos:end="167:39"><expr pos:start="167:39" pos:end="167:39"><literal type="number" pos:start="167:39" pos:end="167:39">2</literal></expr></argument>)</argument_list></call> <operator pos:start="167:42" pos:end="167:42">|</operator> \

                        <name pos:start="169:25" pos:end="169:47">CPUID_4_SELF_INIT_LEVEL</name></expr>;</expr_stmt>

                <if_stmt pos:start="171:17" pos:end="577:17"><if pos:start="171:17" pos:end="577:17">if <condition pos:start="171:20" pos:end="171:39">(<expr pos:start="171:21" pos:end="171:38"><name pos:start="171:21" pos:end="171:34"><name pos:start="171:21" pos:end="171:22">cs</name><operator pos:start="171:23" pos:end="171:24">-&gt;</operator><name pos:start="171:25" pos:end="171:34">nr_threads</name></name> <operator pos:start="171:36" pos:end="171:36">&gt;</operator> <literal type="number" pos:start="171:38" pos:end="171:38">1</literal></expr>)</condition> <block pos:start="171:41" pos:end="577:17">{<block_content pos:start="173:21" pos:end="577:17">

                    <expr_stmt pos:start="173:21" pos:end="173:55"><expr pos:start="173:21" pos:end="173:54"><operator pos:start="173:21" pos:end="173:21">*</operator><name pos:start="173:22" pos:end="173:24">eax</name> <operator pos:start="173:26" pos:end="173:27">|=</operator> <operator pos:start="173:29" pos:end="173:29">(</operator><name pos:start="173:30" pos:end="173:43"><name pos:start="173:30" pos:end="173:31">cs</name><operator pos:start="173:32" pos:end="173:33">-&gt;</operator><name pos:start="173:34" pos:end="173:43">nr_threads</name></name> <operator pos:start="173:45" pos:end="173:45">-</operator> <literal type="number" pos:start="173:47" pos:end="173:47">1</literal><operator pos:start="173:48" pos:end="173:48">)</operator> <operator pos:start="173:50" pos:end="173:51">&lt;&lt;</operator> <literal type="number" pos:start="173:53" pos:end="173:54">14</literal></expr>;</expr_stmt>


                <expr_stmt pos:start="176:17" pos:end="180:54"><expr pos:start="176:17" pos:end="180:53"><operator pos:start="176:17" pos:end="176:17">*</operator><name pos:start="176:18" pos:end="176:20">ebx</name> <operator pos:start="176:22" pos:end="176:22">=</operator> <operator pos:start="176:24" pos:end="176:24">(</operator><name pos:start="176:25" pos:end="176:36">L2_LINE_SIZE</name> <operator pos:start="176:38" pos:end="176:38">-</operator> <literal type="number" pos:start="176:40" pos:end="176:40">1</literal><operator pos:start="176:41" pos:end="176:41">)</operator> <operator pos:start="176:43" pos:end="176:43">|</operator> \

                       <operator pos:start="178:24" pos:end="178:24">(</operator><operator pos:start="178:25" pos:end="178:25">(</operator><name pos:start="178:26" pos:end="178:38">L2_PARTITIONS</name> <operator pos:start="178:40" pos:end="178:40">-</operator> <literal type="number" pos:start="178:42" pos:end="178:42">1</literal><operator pos:start="178:43" pos:end="178:43">)</operator> <operator pos:start="178:45" pos:end="178:46">&lt;&lt;</operator> <literal type="number" pos:start="178:48" pos:end="178:49">12</literal><operator pos:start="178:50" pos:end="178:50">)</operator> <operator pos:start="178:52" pos:end="178:52">|</operator> \

                       <operator pos:start="180:24" pos:end="180:24">(</operator><operator pos:start="180:25" pos:end="180:25">(</operator><name pos:start="180:26" pos:end="180:41">L2_ASSOCIATIVITY</name> <operator pos:start="180:43" pos:end="180:43">-</operator> <literal type="number" pos:start="180:45" pos:end="180:45">1</literal><operator pos:start="180:46" pos:end="180:46">)</operator> <operator pos:start="180:48" pos:end="180:49">&lt;&lt;</operator> <literal type="number" pos:start="180:51" pos:end="180:52">22</literal><operator pos:start="180:53" pos:end="180:53">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="182:17" pos:end="182:35"><expr pos:start="182:17" pos:end="182:34"><operator pos:start="182:17" pos:end="182:17">*</operator><name pos:start="182:18" pos:end="182:20">ecx</name> <operator pos:start="182:22" pos:end="182:22">=</operator> <name pos:start="182:24" pos:end="182:30">L2_SETS</name> <operator pos:start="182:32" pos:end="182:32">-</operator> <literal type="number" pos:start="182:34" pos:end="182:34">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="184:17" pos:end="184:47"><expr pos:start="184:17" pos:end="184:46"><operator pos:start="184:17" pos:end="184:17">*</operator><name pos:start="184:18" pos:end="184:20">edx</name> <operator pos:start="184:22" pos:end="184:22">=</operator> <name pos:start="184:24" pos:end="184:46">CPUID_4_NO_INVD_SHARING</name></expr>;</expr_stmt>


            <default pos:start="187:13" pos:end="187:20">default:</default> <comment type="block" pos:start="187:22" pos:end="187:38">/* end of info */</comment>

                <expr_stmt pos:start="189:17" pos:end="189:25"><expr pos:start="189:17" pos:end="189:24"><operator pos:start="189:17" pos:end="189:17">*</operator><name pos:start="189:18" pos:end="189:20">eax</name> <operator pos:start="189:22" pos:end="189:22">=</operator> <literal type="number" pos:start="189:24" pos:end="189:24">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:25"><expr pos:start="191:17" pos:end="191:24"><operator pos:start="191:17" pos:end="191:17">*</operator><name pos:start="191:18" pos:end="191:20">ebx</name> <operator pos:start="191:22" pos:end="191:22">=</operator> <literal type="number" pos:start="191:24" pos:end="191:24">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:25"><expr pos:start="193:17" pos:end="193:24"><operator pos:start="193:17" pos:end="193:17">*</operator><name pos:start="193:18" pos:end="193:20">ecx</name> <operator pos:start="193:22" pos:end="193:22">=</operator> <literal type="number" pos:start="193:24" pos:end="193:24">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:25"><expr pos:start="195:17" pos:end="195:24"><operator pos:start="195:17" pos:end="195:17">*</operator><name pos:start="195:18" pos:end="195:20">edx</name> <operator pos:start="195:22" pos:end="195:22">=</operator> <literal type="number" pos:start="195:24" pos:end="195:24">0</literal></expr>;</expr_stmt>




    <case pos:start="200:5" pos:end="200:11">case <expr pos:start="200:10" pos:end="200:10"><literal type="number" pos:start="200:10" pos:end="200:10">5</literal></expr>:</case>

        <comment type="block" pos:start="202:9" pos:end="202:55">/* mwait info: needed for Core compatibility */</comment>

        <expr_stmt pos:start="204:9" pos:end="204:17"><expr pos:start="204:9" pos:end="204:16"><operator pos:start="204:9" pos:end="204:9">*</operator><name pos:start="204:10" pos:end="204:12">eax</name> <operator pos:start="204:14" pos:end="204:14">=</operator> <literal type="number" pos:start="204:16" pos:end="204:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="204:19" pos:end="204:59">/* Smallest monitor-line size in bytes */</comment>

        <expr_stmt pos:start="206:9" pos:end="206:17"><expr pos:start="206:9" pos:end="206:16"><operator pos:start="206:9" pos:end="206:9">*</operator><name pos:start="206:10" pos:end="206:12">ebx</name> <operator pos:start="206:14" pos:end="206:14">=</operator> <literal type="number" pos:start="206:16" pos:end="206:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="206:19" pos:end="206:58">/* Largest monitor-line size in bytes */</comment>

        <expr_stmt pos:start="208:9" pos:end="208:49"><expr pos:start="208:9" pos:end="208:48"><operator pos:start="208:9" pos:end="208:9">*</operator><name pos:start="208:10" pos:end="208:12">ecx</name> <operator pos:start="208:14" pos:end="208:14">=</operator> <name pos:start="208:16" pos:end="208:30">CPUID_MWAIT_EMX</name> <operator pos:start="208:32" pos:end="208:32">|</operator> <name pos:start="208:34" pos:end="208:48">CPUID_MWAIT_IBE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="210:9" pos:end="210:17"><expr pos:start="210:9" pos:end="210:16"><operator pos:start="210:9" pos:end="210:9">*</operator><name pos:start="210:10" pos:end="210:12">edx</name> <operator pos:start="210:14" pos:end="210:14">=</operator> <literal type="number" pos:start="210:16" pos:end="210:16">0</literal></expr>;</expr_stmt>


    <case pos:start="213:5" pos:end="213:11">case <expr pos:start="213:10" pos:end="213:10"><literal type="number" pos:start="213:10" pos:end="213:10">6</literal></expr>:</case>

        <comment type="block" pos:start="215:9" pos:end="215:36">/* Thermal and Power Leaf */</comment>

        <expr_stmt pos:start="217:9" pos:end="217:17"><expr pos:start="217:9" pos:end="217:16"><operator pos:start="217:9" pos:end="217:9">*</operator><name pos:start="217:10" pos:end="217:12">eax</name> <operator pos:start="217:14" pos:end="217:14">=</operator> <literal type="number" pos:start="217:16" pos:end="217:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:17"><expr pos:start="219:9" pos:end="219:16"><operator pos:start="219:9" pos:end="219:9">*</operator><name pos:start="219:10" pos:end="219:12">ebx</name> <operator pos:start="219:14" pos:end="219:14">=</operator> <literal type="number" pos:start="219:16" pos:end="219:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:17"><expr pos:start="221:9" pos:end="221:16"><operator pos:start="221:9" pos:end="221:9">*</operator><name pos:start="221:10" pos:end="221:12">ecx</name> <operator pos:start="221:14" pos:end="221:14">=</operator> <literal type="number" pos:start="221:16" pos:end="221:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:17"><expr pos:start="223:9" pos:end="223:16"><operator pos:start="223:9" pos:end="223:9">*</operator><name pos:start="223:10" pos:end="223:12">edx</name> <operator pos:start="223:14" pos:end="223:14">=</operator> <literal type="number" pos:start="223:16" pos:end="223:16">0</literal></expr>;</expr_stmt>


    <case pos:start="226:5" pos:end="226:11">case <expr pos:start="226:10" pos:end="226:10"><literal type="number" pos:start="226:10" pos:end="226:10">7</literal></expr>:</case>

        <comment type="block" pos:start="228:9" pos:end="228:64">/* Structured Extended Feature Flags Enumeration Leaf */</comment>

        <if_stmt pos:start="230:9" pos:end="577:17"><if pos:start="230:9" pos:end="240:9">if <condition pos:start="230:12" pos:end="230:23">(<expr pos:start="230:13" pos:end="230:22"><name pos:start="230:13" pos:end="230:17">count</name> <operator pos:start="230:19" pos:end="230:20">==</operator> <literal type="number" pos:start="230:22" pos:end="230:22">0</literal></expr>)</condition> <block pos:start="230:25" pos:end="240:9">{<block_content pos:start="232:13" pos:end="238:21">

            <expr_stmt pos:start="232:13" pos:end="232:21"><expr pos:start="232:13" pos:end="232:20"><operator pos:start="232:13" pos:end="232:13">*</operator><name pos:start="232:14" pos:end="232:16">eax</name> <operator pos:start="232:18" pos:end="232:18">=</operator> <literal type="number" pos:start="232:20" pos:end="232:20">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="232:23" pos:end="232:60">/* Maximum ECX value for sub-leaves */</comment>

            <expr_stmt pos:start="234:13" pos:end="234:47"><expr pos:start="234:13" pos:end="234:46"><operator pos:start="234:13" pos:end="234:13">*</operator><name pos:start="234:14" pos:end="234:16">ebx</name> <operator pos:start="234:18" pos:end="234:18">=</operator> <name pos:start="234:20" pos:end="234:46"><name pos:start="234:20" pos:end="234:22">env</name><operator pos:start="234:23" pos:end="234:24">-&gt;</operator><name pos:start="234:25" pos:end="234:32">features</name><index pos:start="234:33" pos:end="234:46">[<expr pos:start="234:34" pos:end="234:45"><name pos:start="234:34" pos:end="234:45">FEAT_7_0_EBX</name></expr>]</index></name></expr>;</expr_stmt> <comment type="block" pos:start="234:49" pos:end="234:67">/* Feature flags */</comment>

            <expr_stmt pos:start="236:13" pos:end="236:21"><expr pos:start="236:13" pos:end="236:20"><operator pos:start="236:13" pos:end="236:13">*</operator><name pos:start="236:14" pos:end="236:16">ecx</name> <operator pos:start="236:18" pos:end="236:18">=</operator> <literal type="number" pos:start="236:20" pos:end="236:20">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="236:23" pos:end="236:36">/* Reserved */</comment>

            <expr_stmt pos:start="238:13" pos:end="238:21"><expr pos:start="238:13" pos:end="238:20"><operator pos:start="238:13" pos:end="238:13">*</operator><name pos:start="238:14" pos:end="238:16">edx</name> <operator pos:start="238:18" pos:end="238:18">=</operator> <literal type="number" pos:start="238:20" pos:end="238:20">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="238:23" pos:end="238:36">/* Reserved */</comment>

        </block_content>}</block></if> <else pos:start="240:11" pos:end="577:17">else <block pos:start="240:16" pos:end="577:17">{<block_content pos:start="242:13" pos:end="577:17">

            <expr_stmt pos:start="242:13" pos:end="242:21"><expr pos:start="242:13" pos:end="242:20"><operator pos:start="242:13" pos:end="242:13">*</operator><name pos:start="242:14" pos:end="242:16">eax</name> <operator pos:start="242:18" pos:end="242:18">=</operator> <literal type="number" pos:start="242:20" pos:end="242:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="244:13" pos:end="244:21"><expr pos:start="244:13" pos:end="244:20"><operator pos:start="244:13" pos:end="244:13">*</operator><name pos:start="244:14" pos:end="244:16">ebx</name> <operator pos:start="244:18" pos:end="244:18">=</operator> <literal type="number" pos:start="244:20" pos:end="244:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="246:13" pos:end="246:21"><expr pos:start="246:13" pos:end="246:20"><operator pos:start="246:13" pos:end="246:13">*</operator><name pos:start="246:14" pos:end="246:16">ecx</name> <operator pos:start="246:18" pos:end="246:18">=</operator> <literal type="number" pos:start="246:20" pos:end="246:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="248:13" pos:end="248:21"><expr pos:start="248:13" pos:end="248:20"><operator pos:start="248:13" pos:end="248:13">*</operator><name pos:start="248:14" pos:end="248:16">edx</name> <operator pos:start="248:18" pos:end="248:18">=</operator> <literal type="number" pos:start="248:20" pos:end="248:20">0</literal></expr>;</expr_stmt>



    <case pos:start="252:5" pos:end="252:11">case <expr pos:start="252:10" pos:end="252:10"><literal type="number" pos:start="252:10" pos:end="252:10">9</literal></expr>:</case>

        <comment type="block" pos:start="254:9" pos:end="254:50">/* Direct Cache Access Information Leaf */</comment>

        <expr_stmt pos:start="256:9" pos:end="256:17"><expr pos:start="256:9" pos:end="256:16"><operator pos:start="256:9" pos:end="256:9">*</operator><name pos:start="256:10" pos:end="256:12">eax</name> <operator pos:start="256:14" pos:end="256:14">=</operator> <literal type="number" pos:start="256:16" pos:end="256:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="256:19" pos:end="256:48">/* Bits 0-31 in DCA_CAP MSR */</comment>

        <expr_stmt pos:start="258:9" pos:end="258:17"><expr pos:start="258:9" pos:end="258:16"><operator pos:start="258:9" pos:end="258:9">*</operator><name pos:start="258:10" pos:end="258:12">ebx</name> <operator pos:start="258:14" pos:end="258:14">=</operator> <literal type="number" pos:start="258:16" pos:end="258:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="260:9" pos:end="260:17"><expr pos:start="260:9" pos:end="260:16"><operator pos:start="260:9" pos:end="260:9">*</operator><name pos:start="260:10" pos:end="260:12">ecx</name> <operator pos:start="260:14" pos:end="260:14">=</operator> <literal type="number" pos:start="260:16" pos:end="260:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="262:9" pos:end="262:17"><expr pos:start="262:9" pos:end="262:16"><operator pos:start="262:9" pos:end="262:9">*</operator><name pos:start="262:10" pos:end="262:12">edx</name> <operator pos:start="262:14" pos:end="262:14">=</operator> <literal type="number" pos:start="262:16" pos:end="262:16">0</literal></expr>;</expr_stmt>


    <case pos:start="265:5" pos:end="265:13">case <expr pos:start="265:10" pos:end="265:12"><literal type="number" pos:start="265:10" pos:end="265:12">0xA</literal></expr>:</case>

        <comment type="block" pos:start="267:9" pos:end="267:55">/* Architectural Performance Monitoring Leaf */</comment>

        <if_stmt pos:start="269:9" pos:end="577:17"><if pos:start="269:9" pos:end="283:9">if <condition pos:start="269:12" pos:end="269:45">(<expr pos:start="269:13" pos:end="269:44"><call pos:start="269:13" pos:end="269:25"><name pos:start="269:13" pos:end="269:23">kvm_enabled</name><argument_list pos:start="269:24" pos:end="269:25">()</argument_list></call> <operator pos:start="269:27" pos:end="269:28">&amp;&amp;</operator> <name pos:start="269:30" pos:end="269:44"><name pos:start="269:30" pos:end="269:32">cpu</name><operator pos:start="269:33" pos:end="269:34">-&gt;</operator><name pos:start="269:35" pos:end="269:44">enable_pmu</name></name></expr>)</condition> <block pos:start="269:47" pos:end="283:9">{<block_content pos:start="271:13" pos:end="281:70">

            <decl_stmt pos:start="271:13" pos:end="271:40"><decl pos:start="271:13" pos:end="271:39"><type pos:start="271:13" pos:end="271:22"><name pos:start="271:13" pos:end="271:20">KVMState</name> <modifier pos:start="271:22" pos:end="271:22">*</modifier></type><name pos:start="271:23" pos:end="271:23">s</name> <init pos:start="271:25" pos:end="271:39">= <expr pos:start="271:27" pos:end="271:39"><name pos:start="271:27" pos:end="271:39"><name pos:start="271:27" pos:end="271:28">cs</name><operator pos:start="271:29" pos:end="271:30">-&gt;</operator><name pos:start="271:31" pos:end="271:39">kvm_state</name></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="275:13" pos:end="275:70"><expr pos:start="275:13" pos:end="275:69"><operator pos:start="275:13" pos:end="275:13">*</operator><name pos:start="275:14" pos:end="275:16">eax</name> <operator pos:start="275:18" pos:end="275:18">=</operator> <call pos:start="275:20" pos:end="275:69"><name pos:start="275:20" pos:end="275:47">kvm_arch_get_supported_cpuid</name><argument_list pos:start="275:48" pos:end="275:69">(<argument pos:start="275:49" pos:end="275:49"><expr pos:start="275:49" pos:end="275:49"><name pos:start="275:49" pos:end="275:49">s</name></expr></argument>, <argument pos:start="275:52" pos:end="275:54"><expr pos:start="275:52" pos:end="275:54"><literal type="number" pos:start="275:52" pos:end="275:54">0xA</literal></expr></argument>, <argument pos:start="275:57" pos:end="275:61"><expr pos:start="275:57" pos:end="275:61"><name pos:start="275:57" pos:end="275:61">count</name></expr></argument>, <argument pos:start="275:64" pos:end="275:68"><expr pos:start="275:64" pos:end="275:68"><name pos:start="275:64" pos:end="275:68">R_EAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:70"><expr pos:start="277:13" pos:end="277:69"><operator pos:start="277:13" pos:end="277:13">*</operator><name pos:start="277:14" pos:end="277:16">ebx</name> <operator pos:start="277:18" pos:end="277:18">=</operator> <call pos:start="277:20" pos:end="277:69"><name pos:start="277:20" pos:end="277:47">kvm_arch_get_supported_cpuid</name><argument_list pos:start="277:48" pos:end="277:69">(<argument pos:start="277:49" pos:end="277:49"><expr pos:start="277:49" pos:end="277:49"><name pos:start="277:49" pos:end="277:49">s</name></expr></argument>, <argument pos:start="277:52" pos:end="277:54"><expr pos:start="277:52" pos:end="277:54"><literal type="number" pos:start="277:52" pos:end="277:54">0xA</literal></expr></argument>, <argument pos:start="277:57" pos:end="277:61"><expr pos:start="277:57" pos:end="277:61"><name pos:start="277:57" pos:end="277:61">count</name></expr></argument>, <argument pos:start="277:64" pos:end="277:68"><expr pos:start="277:64" pos:end="277:68"><name pos:start="277:64" pos:end="277:68">R_EBX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="279:13" pos:end="279:70"><expr pos:start="279:13" pos:end="279:69"><operator pos:start="279:13" pos:end="279:13">*</operator><name pos:start="279:14" pos:end="279:16">ecx</name> <operator pos:start="279:18" pos:end="279:18">=</operator> <call pos:start="279:20" pos:end="279:69"><name pos:start="279:20" pos:end="279:47">kvm_arch_get_supported_cpuid</name><argument_list pos:start="279:48" pos:end="279:69">(<argument pos:start="279:49" pos:end="279:49"><expr pos:start="279:49" pos:end="279:49"><name pos:start="279:49" pos:end="279:49">s</name></expr></argument>, <argument pos:start="279:52" pos:end="279:54"><expr pos:start="279:52" pos:end="279:54"><literal type="number" pos:start="279:52" pos:end="279:54">0xA</literal></expr></argument>, <argument pos:start="279:57" pos:end="279:61"><expr pos:start="279:57" pos:end="279:61"><name pos:start="279:57" pos:end="279:61">count</name></expr></argument>, <argument pos:start="279:64" pos:end="279:68"><expr pos:start="279:64" pos:end="279:68"><name pos:start="279:64" pos:end="279:68">R_ECX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="281:13" pos:end="281:70"><expr pos:start="281:13" pos:end="281:69"><operator pos:start="281:13" pos:end="281:13">*</operator><name pos:start="281:14" pos:end="281:16">edx</name> <operator pos:start="281:18" pos:end="281:18">=</operator> <call pos:start="281:20" pos:end="281:69"><name pos:start="281:20" pos:end="281:47">kvm_arch_get_supported_cpuid</name><argument_list pos:start="281:48" pos:end="281:69">(<argument pos:start="281:49" pos:end="281:49"><expr pos:start="281:49" pos:end="281:49"><name pos:start="281:49" pos:end="281:49">s</name></expr></argument>, <argument pos:start="281:52" pos:end="281:54"><expr pos:start="281:52" pos:end="281:54"><literal type="number" pos:start="281:52" pos:end="281:54">0xA</literal></expr></argument>, <argument pos:start="281:57" pos:end="281:61"><expr pos:start="281:57" pos:end="281:61"><name pos:start="281:57" pos:end="281:61">count</name></expr></argument>, <argument pos:start="281:64" pos:end="281:68"><expr pos:start="281:64" pos:end="281:68"><name pos:start="281:64" pos:end="281:68">R_EDX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="283:11" pos:end="577:17">else <block pos:start="283:16" pos:end="577:17">{<block_content pos:start="285:13" pos:end="577:17">

            <expr_stmt pos:start="285:13" pos:end="285:21"><expr pos:start="285:13" pos:end="285:20"><operator pos:start="285:13" pos:end="285:13">*</operator><name pos:start="285:14" pos:end="285:16">eax</name> <operator pos:start="285:18" pos:end="285:18">=</operator> <literal type="number" pos:start="285:20" pos:end="285:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:21"><expr pos:start="287:13" pos:end="287:20"><operator pos:start="287:13" pos:end="287:13">*</operator><name pos:start="287:14" pos:end="287:16">ebx</name> <operator pos:start="287:18" pos:end="287:18">=</operator> <literal type="number" pos:start="287:20" pos:end="287:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="289:13" pos:end="289:21"><expr pos:start="289:13" pos:end="289:20"><operator pos:start="289:13" pos:end="289:13">*</operator><name pos:start="289:14" pos:end="289:16">ecx</name> <operator pos:start="289:18" pos:end="289:18">=</operator> <literal type="number" pos:start="289:20" pos:end="289:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:21"><expr pos:start="291:13" pos:end="291:20"><operator pos:start="291:13" pos:end="291:13">*</operator><name pos:start="291:14" pos:end="291:16">edx</name> <operator pos:start="291:18" pos:end="291:18">=</operator> <literal type="number" pos:start="291:20" pos:end="291:20">0</literal></expr>;</expr_stmt>



    <case pos:start="295:5" pos:end="295:13">case <expr pos:start="295:10" pos:end="295:12"><literal type="number" pos:start="295:10" pos:end="295:12">0xD</literal></expr>:</case>

        <comment type="block" pos:start="297:9" pos:end="297:38">/* Processor Extended State */</comment>

        <if_stmt pos:start="299:9" pos:end="577:17"><if pos:start="299:9" pos:end="577:17">if <condition pos:start="299:12" pos:end="299:59">(<expr pos:start="299:13" pos:end="299:58"><operator pos:start="299:13" pos:end="299:13">!</operator><operator pos:start="299:14" pos:end="299:14">(</operator><name pos:start="299:15" pos:end="299:39"><name pos:start="299:15" pos:end="299:17">env</name><operator pos:start="299:18" pos:end="299:19">-&gt;</operator><name pos:start="299:20" pos:end="299:27">features</name><index pos:start="299:28" pos:end="299:39">[<expr pos:start="299:29" pos:end="299:38"><name pos:start="299:29" pos:end="299:38">FEAT_1_ECX</name></expr>]</index></name> <operator pos:start="299:41" pos:end="299:41">&amp;</operator> <name pos:start="299:43" pos:end="299:57">CPUID_EXT_XSAVE</name><operator pos:start="299:58" pos:end="299:58">)</operator></expr>)</condition> <block pos:start="299:61" pos:end="577:17">{<block_content pos:start="301:13" pos:end="577:17">

            <expr_stmt pos:start="301:13" pos:end="301:21"><expr pos:start="301:13" pos:end="301:20"><operator pos:start="301:13" pos:end="301:13">*</operator><name pos:start="301:14" pos:end="301:16">eax</name> <operator pos:start="301:18" pos:end="301:18">=</operator> <literal type="number" pos:start="301:20" pos:end="301:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:21"><expr pos:start="303:13" pos:end="303:20"><operator pos:start="303:13" pos:end="303:13">*</operator><name pos:start="303:14" pos:end="303:16">ebx</name> <operator pos:start="303:18" pos:end="303:18">=</operator> <literal type="number" pos:start="303:20" pos:end="303:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="305:13" pos:end="305:21"><expr pos:start="305:13" pos:end="305:20"><operator pos:start="305:13" pos:end="305:13">*</operator><name pos:start="305:14" pos:end="305:16">ecx</name> <operator pos:start="305:18" pos:end="305:18">=</operator> <literal type="number" pos:start="305:20" pos:end="305:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="307:13" pos:end="307:21"><expr pos:start="307:13" pos:end="307:20"><operator pos:start="307:13" pos:end="307:13">*</operator><name pos:start="307:14" pos:end="307:16">edx</name> <operator pos:start="307:18" pos:end="307:18">=</operator> <literal type="number" pos:start="307:20" pos:end="307:20">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="311:9" pos:end="577:17"><if pos:start="311:9" pos:end="325:9">if <condition pos:start="311:12" pos:end="311:26">(<expr pos:start="311:13" pos:end="311:25"><call pos:start="311:13" pos:end="311:25"><name pos:start="311:13" pos:end="311:23">kvm_enabled</name><argument_list pos:start="311:24" pos:end="311:25">()</argument_list></call></expr>)</condition> <block pos:start="311:28" pos:end="325:9">{<block_content pos:start="313:13" pos:end="323:70">

            <decl_stmt pos:start="313:13" pos:end="313:40"><decl pos:start="313:13" pos:end="313:39"><type pos:start="313:13" pos:end="313:22"><name pos:start="313:13" pos:end="313:20">KVMState</name> <modifier pos:start="313:22" pos:end="313:22">*</modifier></type><name pos:start="313:23" pos:end="313:23">s</name> <init pos:start="313:25" pos:end="313:39">= <expr pos:start="313:27" pos:end="313:39"><name pos:start="313:27" pos:end="313:39"><name pos:start="313:27" pos:end="313:28">cs</name><operator pos:start="313:29" pos:end="313:30">-&gt;</operator><name pos:start="313:31" pos:end="313:39">kvm_state</name></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="317:13" pos:end="317:70"><expr pos:start="317:13" pos:end="317:69"><operator pos:start="317:13" pos:end="317:13">*</operator><name pos:start="317:14" pos:end="317:16">eax</name> <operator pos:start="317:18" pos:end="317:18">=</operator> <call pos:start="317:20" pos:end="317:69"><name pos:start="317:20" pos:end="317:47">kvm_arch_get_supported_cpuid</name><argument_list pos:start="317:48" pos:end="317:69">(<argument pos:start="317:49" pos:end="317:49"><expr pos:start="317:49" pos:end="317:49"><name pos:start="317:49" pos:end="317:49">s</name></expr></argument>, <argument pos:start="317:52" pos:end="317:54"><expr pos:start="317:52" pos:end="317:54"><literal type="number" pos:start="317:52" pos:end="317:54">0xd</literal></expr></argument>, <argument pos:start="317:57" pos:end="317:61"><expr pos:start="317:57" pos:end="317:61"><name pos:start="317:57" pos:end="317:61">count</name></expr></argument>, <argument pos:start="317:64" pos:end="317:68"><expr pos:start="317:64" pos:end="317:68"><name pos:start="317:64" pos:end="317:68">R_EAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="319:13" pos:end="319:70"><expr pos:start="319:13" pos:end="319:69"><operator pos:start="319:13" pos:end="319:13">*</operator><name pos:start="319:14" pos:end="319:16">ebx</name> <operator pos:start="319:18" pos:end="319:18">=</operator> <call pos:start="319:20" pos:end="319:69"><name pos:start="319:20" pos:end="319:47">kvm_arch_get_supported_cpuid</name><argument_list pos:start="319:48" pos:end="319:69">(<argument pos:start="319:49" pos:end="319:49"><expr pos:start="319:49" pos:end="319:49"><name pos:start="319:49" pos:end="319:49">s</name></expr></argument>, <argument pos:start="319:52" pos:end="319:54"><expr pos:start="319:52" pos:end="319:54"><literal type="number" pos:start="319:52" pos:end="319:54">0xd</literal></expr></argument>, <argument pos:start="319:57" pos:end="319:61"><expr pos:start="319:57" pos:end="319:61"><name pos:start="319:57" pos:end="319:61">count</name></expr></argument>, <argument pos:start="319:64" pos:end="319:68"><expr pos:start="319:64" pos:end="319:68"><name pos:start="319:64" pos:end="319:68">R_EBX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:70"><expr pos:start="321:13" pos:end="321:69"><operator pos:start="321:13" pos:end="321:13">*</operator><name pos:start="321:14" pos:end="321:16">ecx</name> <operator pos:start="321:18" pos:end="321:18">=</operator> <call pos:start="321:20" pos:end="321:69"><name pos:start="321:20" pos:end="321:47">kvm_arch_get_supported_cpuid</name><argument_list pos:start="321:48" pos:end="321:69">(<argument pos:start="321:49" pos:end="321:49"><expr pos:start="321:49" pos:end="321:49"><name pos:start="321:49" pos:end="321:49">s</name></expr></argument>, <argument pos:start="321:52" pos:end="321:54"><expr pos:start="321:52" pos:end="321:54"><literal type="number" pos:start="321:52" pos:end="321:54">0xd</literal></expr></argument>, <argument pos:start="321:57" pos:end="321:61"><expr pos:start="321:57" pos:end="321:61"><name pos:start="321:57" pos:end="321:61">count</name></expr></argument>, <argument pos:start="321:64" pos:end="321:68"><expr pos:start="321:64" pos:end="321:68"><name pos:start="321:64" pos:end="321:68">R_ECX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:70"><expr pos:start="323:13" pos:end="323:69"><operator pos:start="323:13" pos:end="323:13">*</operator><name pos:start="323:14" pos:end="323:16">edx</name> <operator pos:start="323:18" pos:end="323:18">=</operator> <call pos:start="323:20" pos:end="323:69"><name pos:start="323:20" pos:end="323:47">kvm_arch_get_supported_cpuid</name><argument_list pos:start="323:48" pos:end="323:69">(<argument pos:start="323:49" pos:end="323:49"><expr pos:start="323:49" pos:end="323:49"><name pos:start="323:49" pos:end="323:49">s</name></expr></argument>, <argument pos:start="323:52" pos:end="323:54"><expr pos:start="323:52" pos:end="323:54"><literal type="number" pos:start="323:52" pos:end="323:54">0xd</literal></expr></argument>, <argument pos:start="323:57" pos:end="323:61"><expr pos:start="323:57" pos:end="323:61"><name pos:start="323:57" pos:end="323:61">count</name></expr></argument>, <argument pos:start="323:64" pos:end="323:68"><expr pos:start="323:64" pos:end="323:68"><name pos:start="323:64" pos:end="323:68">R_EDX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="325:11" pos:end="577:17">else <block pos:start="325:16" pos:end="577:17">{<block_content pos:start="327:13" pos:end="577:17">

            <expr_stmt pos:start="327:13" pos:end="327:21"><expr pos:start="327:13" pos:end="327:20"><operator pos:start="327:13" pos:end="327:13">*</operator><name pos:start="327:14" pos:end="327:16">eax</name> <operator pos:start="327:18" pos:end="327:18">=</operator> <literal type="number" pos:start="327:20" pos:end="327:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="329:13" pos:end="329:21"><expr pos:start="329:13" pos:end="329:20"><operator pos:start="329:13" pos:end="329:13">*</operator><name pos:start="329:14" pos:end="329:16">ebx</name> <operator pos:start="329:18" pos:end="329:18">=</operator> <literal type="number" pos:start="329:20" pos:end="329:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="331:13" pos:end="331:21"><expr pos:start="331:13" pos:end="331:20"><operator pos:start="331:13" pos:end="331:13">*</operator><name pos:start="331:14" pos:end="331:16">ecx</name> <operator pos:start="331:18" pos:end="331:18">=</operator> <literal type="number" pos:start="331:20" pos:end="331:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:21"><expr pos:start="333:13" pos:end="333:20"><operator pos:start="333:13" pos:end="333:13">*</operator><name pos:start="333:14" pos:end="333:16">edx</name> <operator pos:start="333:18" pos:end="333:18">=</operator> <literal type="number" pos:start="333:20" pos:end="333:20">0</literal></expr>;</expr_stmt>



    <case pos:start="337:5" pos:end="337:20">case <expr pos:start="337:10" pos:end="337:19"><literal type="number" pos:start="337:10" pos:end="337:19">0x80000000</literal></expr>:</case>

        <expr_stmt pos:start="339:9" pos:end="339:33"><expr pos:start="339:9" pos:end="339:32"><operator pos:start="339:9" pos:end="339:9">*</operator><name pos:start="339:10" pos:end="339:12">eax</name> <operator pos:start="339:14" pos:end="339:14">=</operator> <name pos:start="339:16" pos:end="339:32"><name pos:start="339:16" pos:end="339:18">env</name><operator pos:start="339:19" pos:end="339:20">-&gt;</operator><name pos:start="339:21" pos:end="339:32">cpuid_xlevel</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="341:9" pos:end="341:34"><expr pos:start="341:9" pos:end="341:33"><operator pos:start="341:9" pos:end="341:9">*</operator><name pos:start="341:10" pos:end="341:12">ebx</name> <operator pos:start="341:14" pos:end="341:14">=</operator> <name pos:start="341:16" pos:end="341:33"><name pos:start="341:16" pos:end="341:18">env</name><operator pos:start="341:19" pos:end="341:20">-&gt;</operator><name pos:start="341:21" pos:end="341:33">cpuid_vendor1</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="343:9" pos:end="343:34"><expr pos:start="343:9" pos:end="343:33"><operator pos:start="343:9" pos:end="343:9">*</operator><name pos:start="343:10" pos:end="343:12">edx</name> <operator pos:start="343:14" pos:end="343:14">=</operator> <name pos:start="343:16" pos:end="343:33"><name pos:start="343:16" pos:end="343:18">env</name><operator pos:start="343:19" pos:end="343:20">-&gt;</operator><name pos:start="343:21" pos:end="343:33">cpuid_vendor2</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="345:9" pos:end="345:34"><expr pos:start="345:9" pos:end="345:33"><operator pos:start="345:9" pos:end="345:9">*</operator><name pos:start="345:10" pos:end="345:12">ecx</name> <operator pos:start="345:14" pos:end="345:14">=</operator> <name pos:start="345:16" pos:end="345:33"><name pos:start="345:16" pos:end="345:18">env</name><operator pos:start="345:19" pos:end="345:20">-&gt;</operator><name pos:start="345:21" pos:end="345:33">cpuid_vendor3</name></name></expr>;</expr_stmt>


    <case pos:start="348:5" pos:end="348:20">case <expr pos:start="348:10" pos:end="348:19"><literal type="number" pos:start="348:10" pos:end="348:19">0x80000001</literal></expr>:</case>

        <expr_stmt pos:start="350:9" pos:end="350:34"><expr pos:start="350:9" pos:end="350:33"><operator pos:start="350:9" pos:end="350:9">*</operator><name pos:start="350:10" pos:end="350:12">eax</name> <operator pos:start="350:14" pos:end="350:14">=</operator> <name pos:start="350:16" pos:end="350:33"><name pos:start="350:16" pos:end="350:18">env</name><operator pos:start="350:19" pos:end="350:20">-&gt;</operator><name pos:start="350:21" pos:end="350:33">cpuid_version</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="352:9" pos:end="352:17"><expr pos:start="352:9" pos:end="352:16"><operator pos:start="352:9" pos:end="352:9">*</operator><name pos:start="352:10" pos:end="352:12">ebx</name> <operator pos:start="352:14" pos:end="352:14">=</operator> <literal type="number" pos:start="352:16" pos:end="352:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="354:9" pos:end="354:49"><expr pos:start="354:9" pos:end="354:48"><operator pos:start="354:9" pos:end="354:9">*</operator><name pos:start="354:10" pos:end="354:12">ecx</name> <operator pos:start="354:14" pos:end="354:14">=</operator> <name pos:start="354:16" pos:end="354:48"><name pos:start="354:16" pos:end="354:18">env</name><operator pos:start="354:19" pos:end="354:20">-&gt;</operator><name pos:start="354:21" pos:end="354:28">features</name><index pos:start="354:29" pos:end="354:48">[<expr pos:start="354:30" pos:end="354:47"><name pos:start="354:30" pos:end="354:47">FEAT_8000_0001_ECX</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="356:9" pos:end="356:49"><expr pos:start="356:9" pos:end="356:48"><operator pos:start="356:9" pos:end="356:9">*</operator><name pos:start="356:10" pos:end="356:12">edx</name> <operator pos:start="356:14" pos:end="356:14">=</operator> <name pos:start="356:16" pos:end="356:48"><name pos:start="356:16" pos:end="356:18">env</name><operator pos:start="356:19" pos:end="356:20">-&gt;</operator><name pos:start="356:21" pos:end="356:28">features</name><index pos:start="356:29" pos:end="356:48">[<expr pos:start="356:30" pos:end="356:47"><name pos:start="356:30" pos:end="356:47">FEAT_8000_0001_EDX</name></expr>]</index></name></expr>;</expr_stmt>



        <comment type="block" pos:start="360:9" pos:end="366:11">/* The Linux kernel checks for the CMPLegacy bit and

         * discards multiple thread information if it is set.

         * So dont set it here for Intel to make Linux guests happy.

         */</comment>

        <if_stmt pos:start="368:9" pos:end="577:17"><if pos:start="368:9" pos:end="577:17">if <condition pos:start="368:12" pos:end="368:46">(<expr pos:start="368:13" pos:end="368:45"><name pos:start="368:13" pos:end="368:24"><name pos:start="368:13" pos:end="368:14">cs</name><operator pos:start="368:15" pos:end="368:16">-&gt;</operator><name pos:start="368:17" pos:end="368:24">nr_cores</name></name> <operator pos:start="368:26" pos:end="368:26">*</operator> <name pos:start="368:28" pos:end="368:41"><name pos:start="368:28" pos:end="368:29">cs</name><operator pos:start="368:30" pos:end="368:31">-&gt;</operator><name pos:start="368:32" pos:end="368:41">nr_threads</name></name> <operator pos:start="368:43" pos:end="368:43">&gt;</operator> <literal type="number" pos:start="368:45" pos:end="368:45">1</literal></expr>)</condition> <block pos:start="368:48" pos:end="577:17">{<block_content pos:start="370:13" pos:end="577:17">

            <decl_stmt pos:start="370:13" pos:end="370:38"><decl pos:start="370:13" pos:end="370:25"><type pos:start="370:13" pos:end="370:20"><name pos:start="370:13" pos:end="370:20">uint32_t</name></type> <name pos:start="370:22" pos:end="370:25">tebx</name></decl>, <decl pos:start="370:28" pos:end="370:31"><type ref="prev" pos:start="370:13" pos:end="370:20"/><name pos:start="370:28" pos:end="370:31">tecx</name></decl>, <decl pos:start="370:34" pos:end="370:37"><type ref="prev" pos:start="370:13" pos:end="370:20"/><name pos:start="370:34" pos:end="370:37">tedx</name></decl>;</decl_stmt>

            <expr_stmt pos:start="372:13" pos:end="372:55"><expr pos:start="372:13" pos:end="372:54"><call pos:start="372:13" pos:end="372:54"><name pos:start="372:13" pos:end="372:28">get_cpuid_vendor</name><argument_list pos:start="372:29" pos:end="372:54">(<argument pos:start="372:30" pos:end="372:32"><expr pos:start="372:30" pos:end="372:32"><name pos:start="372:30" pos:end="372:32">env</name></expr></argument>, <argument pos:start="372:35" pos:end="372:39"><expr pos:start="372:35" pos:end="372:39"><operator pos:start="372:35" pos:end="372:35">&amp;</operator><name pos:start="372:36" pos:end="372:39">tebx</name></expr></argument>, <argument pos:start="372:42" pos:end="372:46"><expr pos:start="372:42" pos:end="372:46"><operator pos:start="372:42" pos:end="372:42">&amp;</operator><name pos:start="372:43" pos:end="372:46">tecx</name></expr></argument>, <argument pos:start="372:49" pos:end="372:53"><expr pos:start="372:49" pos:end="372:53"><operator pos:start="372:49" pos:end="372:49">&amp;</operator><name pos:start="372:50" pos:end="372:53">tedx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="374:13" pos:end="577:17"><if pos:start="374:13" pos:end="577:17">if <condition pos:start="374:16" pos:end="378:45">(<expr pos:start="374:17" pos:end="378:44"><name pos:start="374:17" pos:end="374:20">tebx</name> <operator pos:start="374:22" pos:end="374:23">!=</operator> <name pos:start="374:25" pos:end="374:44">CPUID_VENDOR_INTEL_1</name> <operator pos:start="374:46" pos:end="374:47">||</operator>

                <name pos:start="376:17" pos:end="376:20">tedx</name> <operator pos:start="376:22" pos:end="376:23">!=</operator> <name pos:start="376:25" pos:end="376:44">CPUID_VENDOR_INTEL_2</name> <operator pos:start="376:46" pos:end="376:47">||</operator>

                <name pos:start="378:17" pos:end="378:20">tecx</name> <operator pos:start="378:22" pos:end="378:23">!=</operator> <name pos:start="378:25" pos:end="378:44">CPUID_VENDOR_INTEL_3</name></expr>)</condition> <block pos:start="378:47" pos:end="577:17">{<block_content pos:start="380:17" pos:end="577:17">

                <expr_stmt pos:start="380:17" pos:end="380:31"><expr pos:start="380:17" pos:end="380:30"><operator pos:start="380:17" pos:end="380:17">*</operator><name pos:start="380:18" pos:end="380:20">ecx</name> <operator pos:start="380:22" pos:end="380:23">|=</operator> <literal type="number" pos:start="380:25" pos:end="380:25">1</literal> <operator pos:start="380:27" pos:end="380:28">&lt;&lt;</operator> <literal type="number" pos:start="380:30" pos:end="380:30">1</literal></expr>;</expr_stmt>    <comment type="block" pos:start="380:36" pos:end="380:54">/* CmpLegacy bit */</comment>




    <case pos:start="385:5" pos:end="385:20">case <expr pos:start="385:10" pos:end="385:19"><literal type="number" pos:start="385:10" pos:end="385:19">0x80000002</literal></expr>:</case>

    <case pos:start="387:5" pos:end="387:20">case <expr pos:start="387:10" pos:end="387:19"><literal type="number" pos:start="387:10" pos:end="387:19">0x80000003</literal></expr>:</case>

    <case pos:start="389:5" pos:end="389:20">case <expr pos:start="389:10" pos:end="389:19"><literal type="number" pos:start="389:10" pos:end="389:19">0x80000004</literal></expr>:</case>

        <expr_stmt pos:start="391:9" pos:end="391:62"><expr pos:start="391:9" pos:end="391:61"><operator pos:start="391:9" pos:end="391:9">*</operator><name pos:start="391:10" pos:end="391:12">eax</name> <operator pos:start="391:14" pos:end="391:14">=</operator> <name pos:start="391:16" pos:end="391:61"><name pos:start="391:16" pos:end="391:18">env</name><operator pos:start="391:19" pos:end="391:20">-&gt;</operator><name pos:start="391:21" pos:end="391:31">cpuid_model</name><index pos:start="391:32" pos:end="391:61">[<expr pos:start="391:33" pos:end="391:60"><operator pos:start="391:33" pos:end="391:33">(</operator><name pos:start="391:34" pos:end="391:38">index</name> <operator pos:start="391:40" pos:end="391:40">-</operator> <literal type="number" pos:start="391:42" pos:end="391:51">0x80000002</literal><operator pos:start="391:52" pos:end="391:52">)</operator> <operator pos:start="391:54" pos:end="391:54">*</operator> <literal type="number" pos:start="391:56" pos:end="391:58">4</literal> <operator pos:start="391:58" pos:end="391:58">+</operator> <literal type="number" pos:start="391:60" pos:end="391:60">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="393:9" pos:end="393:62"><expr pos:start="393:9" pos:end="393:61"><operator pos:start="393:9" pos:end="393:9">*</operator><name pos:start="393:10" pos:end="393:12">ebx</name> <operator pos:start="393:14" pos:end="393:14">=</operator> <name pos:start="393:16" pos:end="393:61"><name pos:start="393:16" pos:end="393:18">env</name><operator pos:start="393:19" pos:end="393:20">-&gt;</operator><name pos:start="393:21" pos:end="393:31">cpuid_model</name><index pos:start="393:32" pos:end="393:61">[<expr pos:start="393:33" pos:end="393:60"><operator pos:start="393:33" pos:end="393:33">(</operator><name pos:start="393:34" pos:end="393:38">index</name> <operator pos:start="393:40" pos:end="393:40">-</operator> <literal type="number" pos:start="393:42" pos:end="393:51">0x80000002</literal><operator pos:start="393:52" pos:end="393:52">)</operator> <operator pos:start="393:54" pos:end="393:54">*</operator> <literal type="number" pos:start="393:56" pos:end="393:58">4</literal> <operator pos:start="393:58" pos:end="393:58">+</operator> <literal type="number" pos:start="393:60" pos:end="393:60">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="395:9" pos:end="395:62"><expr pos:start="395:9" pos:end="395:61"><operator pos:start="395:9" pos:end="395:9">*</operator><name pos:start="395:10" pos:end="395:12">ecx</name> <operator pos:start="395:14" pos:end="395:14">=</operator> <name pos:start="395:16" pos:end="395:61"><name pos:start="395:16" pos:end="395:18">env</name><operator pos:start="395:19" pos:end="395:20">-&gt;</operator><name pos:start="395:21" pos:end="395:31">cpuid_model</name><index pos:start="395:32" pos:end="395:61">[<expr pos:start="395:33" pos:end="395:60"><operator pos:start="395:33" pos:end="395:33">(</operator><name pos:start="395:34" pos:end="395:38">index</name> <operator pos:start="395:40" pos:end="395:40">-</operator> <literal type="number" pos:start="395:42" pos:end="395:51">0x80000002</literal><operator pos:start="395:52" pos:end="395:52">)</operator> <operator pos:start="395:54" pos:end="395:54">*</operator> <literal type="number" pos:start="395:56" pos:end="395:58">4</literal> <operator pos:start="395:58" pos:end="395:58">+</operator> <literal type="number" pos:start="395:60" pos:end="395:60">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="397:9" pos:end="397:62"><expr pos:start="397:9" pos:end="397:61"><operator pos:start="397:9" pos:end="397:9">*</operator><name pos:start="397:10" pos:end="397:12">edx</name> <operator pos:start="397:14" pos:end="397:14">=</operator> <name pos:start="397:16" pos:end="397:61"><name pos:start="397:16" pos:end="397:18">env</name><operator pos:start="397:19" pos:end="397:20">-&gt;</operator><name pos:start="397:21" pos:end="397:31">cpuid_model</name><index pos:start="397:32" pos:end="397:61">[<expr pos:start="397:33" pos:end="397:60"><operator pos:start="397:33" pos:end="397:33">(</operator><name pos:start="397:34" pos:end="397:38">index</name> <operator pos:start="397:40" pos:end="397:40">-</operator> <literal type="number" pos:start="397:42" pos:end="397:51">0x80000002</literal><operator pos:start="397:52" pos:end="397:52">)</operator> <operator pos:start="397:54" pos:end="397:54">*</operator> <literal type="number" pos:start="397:56" pos:end="397:58">4</literal> <operator pos:start="397:58" pos:end="397:58">+</operator> <literal type="number" pos:start="397:60" pos:end="397:60">3</literal></expr>]</index></name></expr>;</expr_stmt>


    <case pos:start="400:5" pos:end="400:20">case <expr pos:start="400:10" pos:end="400:19"><literal type="number" pos:start="400:10" pos:end="400:19">0x80000005</literal></expr>:</case>

        <comment type="block" pos:start="402:9" pos:end="402:35">/* cache info (L1 cache) */</comment>


            <expr_stmt pos:start="405:13" pos:end="405:53"><expr pos:start="405:13" pos:end="405:52"><call pos:start="405:13" pos:end="405:52"><name pos:start="405:13" pos:end="405:22">host_cpuid</name><argument_list pos:start="405:23" pos:end="405:52">(<argument pos:start="405:24" pos:end="405:28"><expr pos:start="405:24" pos:end="405:28"><name pos:start="405:24" pos:end="405:28">index</name></expr></argument>, <argument pos:start="405:31" pos:end="405:31"><expr pos:start="405:31" pos:end="405:31"><literal type="number" pos:start="405:31" pos:end="405:31">0</literal></expr></argument>, <argument pos:start="405:34" pos:end="405:36"><expr pos:start="405:34" pos:end="405:36"><name pos:start="405:34" pos:end="405:36">eax</name></expr></argument>, <argument pos:start="405:39" pos:end="405:41"><expr pos:start="405:39" pos:end="405:41"><name pos:start="405:39" pos:end="405:41">ebx</name></expr></argument>, <argument pos:start="405:44" pos:end="405:46"><expr pos:start="405:44" pos:end="405:46"><name pos:start="405:44" pos:end="405:46">ecx</name></expr></argument>, <argument pos:start="405:49" pos:end="405:51"><expr pos:start="405:49" pos:end="405:51"><name pos:start="405:49" pos:end="405:51">edx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="409:9" pos:end="411:63"><expr pos:start="409:9" pos:end="411:62"><operator pos:start="409:9" pos:end="409:9">*</operator><name pos:start="409:10" pos:end="409:12">eax</name> <operator pos:start="409:14" pos:end="409:14">=</operator> <operator pos:start="409:16" pos:end="409:16">(</operator><name pos:start="409:17" pos:end="409:32">L1_DTLB_2M_ASSOC</name> <operator pos:start="409:34" pos:end="409:35">&lt;&lt;</operator> <literal type="number" pos:start="409:37" pos:end="409:38">24</literal><operator pos:start="409:39" pos:end="409:39">)</operator> <operator pos:start="409:41" pos:end="409:41">|</operator> <operator pos:start="409:43" pos:end="409:43">(</operator><name pos:start="409:44" pos:end="409:61">L1_DTLB_2M_ENTRIES</name> <operator pos:start="409:63" pos:end="409:64">&lt;&lt;</operator> <literal type="number" pos:start="409:66" pos:end="409:67">16</literal><operator pos:start="409:68" pos:end="409:68">)</operator> <operator pos:start="409:70" pos:end="409:70">|</operator> \

               <operator pos:start="411:16" pos:end="411:16">(</operator><name pos:start="411:17" pos:end="411:32">L1_ITLB_2M_ASSOC</name> <operator pos:start="411:34" pos:end="411:35">&lt;&lt;</operator>  <literal type="number" pos:start="411:38" pos:end="411:38">8</literal><operator pos:start="411:39" pos:end="411:39">)</operator> <operator pos:start="411:41" pos:end="411:41">|</operator> <operator pos:start="411:43" pos:end="411:43">(</operator><name pos:start="411:44" pos:end="411:61">L1_ITLB_2M_ENTRIES</name><operator pos:start="411:62" pos:end="411:62">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="413:9" pos:end="415:63"><expr pos:start="413:9" pos:end="415:62"><operator pos:start="413:9" pos:end="413:9">*</operator><name pos:start="413:10" pos:end="413:12">ebx</name> <operator pos:start="413:14" pos:end="413:14">=</operator> <operator pos:start="413:16" pos:end="413:16">(</operator><name pos:start="413:17" pos:end="413:32">L1_DTLB_4K_ASSOC</name> <operator pos:start="413:34" pos:end="413:35">&lt;&lt;</operator> <literal type="number" pos:start="413:37" pos:end="413:38">24</literal><operator pos:start="413:39" pos:end="413:39">)</operator> <operator pos:start="413:41" pos:end="413:41">|</operator> <operator pos:start="413:43" pos:end="413:43">(</operator><name pos:start="413:44" pos:end="413:61">L1_DTLB_4K_ENTRIES</name> <operator pos:start="413:63" pos:end="413:64">&lt;&lt;</operator> <literal type="number" pos:start="413:66" pos:end="413:67">16</literal><operator pos:start="413:68" pos:end="413:68">)</operator> <operator pos:start="413:70" pos:end="413:70">|</operator> \

               <operator pos:start="415:16" pos:end="415:16">(</operator><name pos:start="415:17" pos:end="415:32">L1_ITLB_4K_ASSOC</name> <operator pos:start="415:34" pos:end="415:35">&lt;&lt;</operator>  <literal type="number" pos:start="415:38" pos:end="415:38">8</literal><operator pos:start="415:39" pos:end="415:39">)</operator> <operator pos:start="415:41" pos:end="415:41">|</operator> <operator pos:start="415:43" pos:end="415:43">(</operator><name pos:start="415:44" pos:end="415:61">L1_ITLB_4K_ENTRIES</name><operator pos:start="415:62" pos:end="415:62">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="417:9" pos:end="419:58"><expr pos:start="417:9" pos:end="419:57"><operator pos:start="417:9" pos:end="417:9">*</operator><name pos:start="417:10" pos:end="417:12">ecx</name> <operator pos:start="417:14" pos:end="417:14">=</operator> <operator pos:start="417:16" pos:end="417:16">(</operator><name pos:start="417:17" pos:end="417:31">L1D_SIZE_KB_AMD</name> <operator pos:start="417:33" pos:end="417:34">&lt;&lt;</operator> <literal type="number" pos:start="417:36" pos:end="417:37">24</literal><operator pos:start="417:38" pos:end="417:38">)</operator> <operator pos:start="417:40" pos:end="417:40">|</operator> <operator pos:start="417:42" pos:end="417:42">(</operator><name pos:start="417:43" pos:end="417:63">L1D_ASSOCIATIVITY_AMD</name> <operator pos:start="417:65" pos:end="417:66">&lt;&lt;</operator> <literal type="number" pos:start="417:68" pos:end="417:69">16</literal><operator pos:start="417:70" pos:end="417:70">)</operator> <operator pos:start="417:72" pos:end="417:72">|</operator> \

               <operator pos:start="419:16" pos:end="419:16">(</operator><name pos:start="419:17" pos:end="419:33">L1D_LINES_PER_TAG</name> <operator pos:start="419:35" pos:end="419:36">&lt;&lt;</operator> <literal type="number" pos:start="419:38" pos:end="419:38">8</literal><operator pos:start="419:39" pos:end="419:39">)</operator> <operator pos:start="419:41" pos:end="419:41">|</operator> <operator pos:start="419:43" pos:end="419:43">(</operator><name pos:start="419:44" pos:end="419:56">L1D_LINE_SIZE</name><operator pos:start="419:57" pos:end="419:57">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="421:9" pos:end="423:58"><expr pos:start="421:9" pos:end="423:57"><operator pos:start="421:9" pos:end="421:9">*</operator><name pos:start="421:10" pos:end="421:12">edx</name> <operator pos:start="421:14" pos:end="421:14">=</operator> <operator pos:start="421:16" pos:end="421:16">(</operator><name pos:start="421:17" pos:end="421:31">L1I_SIZE_KB_AMD</name> <operator pos:start="421:33" pos:end="421:34">&lt;&lt;</operator> <literal type="number" pos:start="421:36" pos:end="421:37">24</literal><operator pos:start="421:38" pos:end="421:38">)</operator> <operator pos:start="421:40" pos:end="421:40">|</operator> <operator pos:start="421:42" pos:end="421:42">(</operator><name pos:start="421:43" pos:end="421:63">L1I_ASSOCIATIVITY_AMD</name> <operator pos:start="421:65" pos:end="421:66">&lt;&lt;</operator> <literal type="number" pos:start="421:68" pos:end="421:69">16</literal><operator pos:start="421:70" pos:end="421:70">)</operator> <operator pos:start="421:72" pos:end="421:72">|</operator> \

               <operator pos:start="423:16" pos:end="423:16">(</operator><name pos:start="423:17" pos:end="423:33">L1I_LINES_PER_TAG</name> <operator pos:start="423:35" pos:end="423:36">&lt;&lt;</operator> <literal type="number" pos:start="423:38" pos:end="423:38">8</literal><operator pos:start="423:39" pos:end="423:39">)</operator> <operator pos:start="423:41" pos:end="423:41">|</operator> <operator pos:start="423:43" pos:end="423:43">(</operator><name pos:start="423:44" pos:end="423:56">L1I_LINE_SIZE</name><operator pos:start="423:57" pos:end="423:57">)</operator></expr>;</expr_stmt>


    <case pos:start="426:5" pos:end="426:20">case <expr pos:start="426:10" pos:end="426:19"><literal type="number" pos:start="426:10" pos:end="426:19">0x80000006</literal></expr>:</case>

        <comment type="block" pos:start="428:9" pos:end="428:35">/* cache info (L2 cache) */</comment>


            <expr_stmt pos:start="431:13" pos:end="431:53"><expr pos:start="431:13" pos:end="431:52"><call pos:start="431:13" pos:end="431:52"><name pos:start="431:13" pos:end="431:22">host_cpuid</name><argument_list pos:start="431:23" pos:end="431:52">(<argument pos:start="431:24" pos:end="431:28"><expr pos:start="431:24" pos:end="431:28"><name pos:start="431:24" pos:end="431:28">index</name></expr></argument>, <argument pos:start="431:31" pos:end="431:31"><expr pos:start="431:31" pos:end="431:31"><literal type="number" pos:start="431:31" pos:end="431:31">0</literal></expr></argument>, <argument pos:start="431:34" pos:end="431:36"><expr pos:start="431:34" pos:end="431:36"><name pos:start="431:34" pos:end="431:36">eax</name></expr></argument>, <argument pos:start="431:39" pos:end="431:41"><expr pos:start="431:39" pos:end="431:41"><name pos:start="431:39" pos:end="431:41">ebx</name></expr></argument>, <argument pos:start="431:44" pos:end="431:46"><expr pos:start="431:44" pos:end="431:46"><name pos:start="431:44" pos:end="431:46">ecx</name></expr></argument>, <argument pos:start="431:49" pos:end="431:51"><expr pos:start="431:49" pos:end="431:51"><name pos:start="431:49" pos:end="431:51">edx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="435:9" pos:end="441:36"><expr pos:start="435:9" pos:end="441:35"><operator pos:start="435:9" pos:end="435:9">*</operator><name pos:start="435:10" pos:end="435:12">eax</name> <operator pos:start="435:14" pos:end="435:14">=</operator> <operator pos:start="435:16" pos:end="435:16">(</operator><call pos:start="435:17" pos:end="435:47"><name pos:start="435:17" pos:end="435:29">AMD_ENC_ASSOC</name><argument_list pos:start="435:30" pos:end="435:47">(<argument pos:start="435:31" pos:end="435:46"><expr pos:start="435:31" pos:end="435:46"><name pos:start="435:31" pos:end="435:46">L2_DTLB_2M_ASSOC</name></expr></argument>)</argument_list></call> <operator pos:start="435:49" pos:end="435:50">&lt;&lt;</operator> <literal type="number" pos:start="435:52" pos:end="435:53">28</literal><operator pos:start="435:54" pos:end="435:54">)</operator> <operator pos:start="435:56" pos:end="435:56">|</operator> \

               <operator pos:start="437:16" pos:end="437:16">(</operator><name pos:start="437:17" pos:end="437:34">L2_DTLB_2M_ENTRIES</name> <operator pos:start="437:36" pos:end="437:37">&lt;&lt;</operator> <literal type="number" pos:start="437:39" pos:end="437:40">16</literal><operator pos:start="437:41" pos:end="437:41">)</operator> <operator pos:start="437:43" pos:end="437:43">|</operator> \

               <operator pos:start="439:16" pos:end="439:16">(</operator><call pos:start="439:17" pos:end="439:47"><name pos:start="439:17" pos:end="439:29">AMD_ENC_ASSOC</name><argument_list pos:start="439:30" pos:end="439:47">(<argument pos:start="439:31" pos:end="439:46"><expr pos:start="439:31" pos:end="439:46"><name pos:start="439:31" pos:end="439:46">L2_ITLB_2M_ASSOC</name></expr></argument>)</argument_list></call> <operator pos:start="439:49" pos:end="439:50">&lt;&lt;</operator> <literal type="number" pos:start="439:52" pos:end="439:53">12</literal><operator pos:start="439:54" pos:end="439:54">)</operator> <operator pos:start="439:56" pos:end="439:56">|</operator> \

               <operator pos:start="441:16" pos:end="441:16">(</operator><name pos:start="441:17" pos:end="441:34">L2_ITLB_2M_ENTRIES</name><operator pos:start="441:35" pos:end="441:35">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="443:9" pos:end="449:36"><expr pos:start="443:9" pos:end="449:35"><operator pos:start="443:9" pos:end="443:9">*</operator><name pos:start="443:10" pos:end="443:12">ebx</name> <operator pos:start="443:14" pos:end="443:14">=</operator> <operator pos:start="443:16" pos:end="443:16">(</operator><call pos:start="443:17" pos:end="443:47"><name pos:start="443:17" pos:end="443:29">AMD_ENC_ASSOC</name><argument_list pos:start="443:30" pos:end="443:47">(<argument pos:start="443:31" pos:end="443:46"><expr pos:start="443:31" pos:end="443:46"><name pos:start="443:31" pos:end="443:46">L2_DTLB_4K_ASSOC</name></expr></argument>)</argument_list></call> <operator pos:start="443:49" pos:end="443:50">&lt;&lt;</operator> <literal type="number" pos:start="443:52" pos:end="443:53">28</literal><operator pos:start="443:54" pos:end="443:54">)</operator> <operator pos:start="443:56" pos:end="443:56">|</operator> \

               <operator pos:start="445:16" pos:end="445:16">(</operator><name pos:start="445:17" pos:end="445:34">L2_DTLB_4K_ENTRIES</name> <operator pos:start="445:36" pos:end="445:37">&lt;&lt;</operator> <literal type="number" pos:start="445:39" pos:end="445:40">16</literal><operator pos:start="445:41" pos:end="445:41">)</operator> <operator pos:start="445:43" pos:end="445:43">|</operator> \

               <operator pos:start="447:16" pos:end="447:16">(</operator><call pos:start="447:17" pos:end="447:47"><name pos:start="447:17" pos:end="447:29">AMD_ENC_ASSOC</name><argument_list pos:start="447:30" pos:end="447:47">(<argument pos:start="447:31" pos:end="447:46"><expr pos:start="447:31" pos:end="447:46"><name pos:start="447:31" pos:end="447:46">L2_ITLB_4K_ASSOC</name></expr></argument>)</argument_list></call> <operator pos:start="447:49" pos:end="447:50">&lt;&lt;</operator> <literal type="number" pos:start="447:52" pos:end="447:53">12</literal><operator pos:start="447:54" pos:end="447:54">)</operator> <operator pos:start="447:56" pos:end="447:56">|</operator> \

               <operator pos:start="449:16" pos:end="449:16">(</operator><name pos:start="449:17" pos:end="449:34">L2_ITLB_4K_ENTRIES</name><operator pos:start="449:35" pos:end="449:35">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="451:9" pos:end="455:56"><expr pos:start="451:9" pos:end="455:55"><operator pos:start="451:9" pos:end="451:9">*</operator><name pos:start="451:10" pos:end="451:12">ecx</name> <operator pos:start="451:14" pos:end="451:14">=</operator> <operator pos:start="451:16" pos:end="451:16">(</operator><name pos:start="451:17" pos:end="451:30">L2_SIZE_KB_AMD</name> <operator pos:start="451:32" pos:end="451:33">&lt;&lt;</operator> <literal type="number" pos:start="451:35" pos:end="451:36">16</literal><operator pos:start="451:37" pos:end="451:37">)</operator> <operator pos:start="451:39" pos:end="451:39">|</operator> \

               <operator pos:start="453:16" pos:end="453:16">(</operator><call pos:start="453:17" pos:end="453:47"><name pos:start="453:17" pos:end="453:29">AMD_ENC_ASSOC</name><argument_list pos:start="453:30" pos:end="453:47">(<argument pos:start="453:31" pos:end="453:46"><expr pos:start="453:31" pos:end="453:46"><name pos:start="453:31" pos:end="453:46">L2_ASSOCIATIVITY</name></expr></argument>)</argument_list></call> <operator pos:start="453:49" pos:end="453:50">&lt;&lt;</operator> <literal type="number" pos:start="453:52" pos:end="453:53">12</literal><operator pos:start="453:54" pos:end="453:54">)</operator> <operator pos:start="453:56" pos:end="453:56">|</operator> \

               <operator pos:start="455:16" pos:end="455:16">(</operator><name pos:start="455:17" pos:end="455:32">L2_LINES_PER_TAG</name> <operator pos:start="455:34" pos:end="455:35">&lt;&lt;</operator> <literal type="number" pos:start="455:37" pos:end="455:37">8</literal><operator pos:start="455:38" pos:end="455:38">)</operator> <operator pos:start="455:40" pos:end="455:40">|</operator> <operator pos:start="455:42" pos:end="455:42">(</operator><name pos:start="455:43" pos:end="455:54">L2_LINE_SIZE</name><operator pos:start="455:55" pos:end="455:55">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="457:9" pos:end="461:56"><expr pos:start="457:9" pos:end="461:55"><operator pos:start="457:9" pos:end="457:9">*</operator><name pos:start="457:10" pos:end="457:12">edx</name> <operator pos:start="457:14" pos:end="457:14">=</operator> <operator pos:start="457:16" pos:end="457:16">(</operator><operator pos:start="457:17" pos:end="457:17">(</operator><name pos:start="457:18" pos:end="457:27">L3_SIZE_KB</name><operator pos:start="457:28" pos:end="457:28">/</operator><literal type="number" pos:start="457:29" pos:end="457:31">512</literal><operator pos:start="457:32" pos:end="457:32">)</operator> <operator pos:start="457:34" pos:end="457:35">&lt;&lt;</operator> <literal type="number" pos:start="457:37" pos:end="457:38">18</literal><operator pos:start="457:39" pos:end="457:39">)</operator> <operator pos:start="457:41" pos:end="457:41">|</operator> \

               <operator pos:start="459:16" pos:end="459:16">(</operator><call pos:start="459:17" pos:end="459:47"><name pos:start="459:17" pos:end="459:29">AMD_ENC_ASSOC</name><argument_list pos:start="459:30" pos:end="459:47">(<argument pos:start="459:31" pos:end="459:46"><expr pos:start="459:31" pos:end="459:46"><name pos:start="459:31" pos:end="459:46">L3_ASSOCIATIVITY</name></expr></argument>)</argument_list></call> <operator pos:start="459:49" pos:end="459:50">&lt;&lt;</operator> <literal type="number" pos:start="459:52" pos:end="459:53">12</literal><operator pos:start="459:54" pos:end="459:54">)</operator> <operator pos:start="459:56" pos:end="459:56">|</operator> \

               <operator pos:start="461:16" pos:end="461:16">(</operator><name pos:start="461:17" pos:end="461:32">L3_LINES_PER_TAG</name> <operator pos:start="461:34" pos:end="461:35">&lt;&lt;</operator> <literal type="number" pos:start="461:37" pos:end="461:37">8</literal><operator pos:start="461:38" pos:end="461:38">)</operator> <operator pos:start="461:40" pos:end="461:40">|</operator> <operator pos:start="461:42" pos:end="461:42">(</operator><name pos:start="461:43" pos:end="461:54">L3_LINE_SIZE</name><operator pos:start="461:55" pos:end="461:55">)</operator></expr>;</expr_stmt>


    <case pos:start="464:5" pos:end="464:20">case <expr pos:start="464:10" pos:end="464:19"><literal type="number" pos:start="464:10" pos:end="464:19">0x80000008</literal></expr>:</case>

        <comment type="block" pos:start="466:9" pos:end="466:57">/* virtual &amp; phys address size in low 2 bytes. */</comment>

<comment type="block" pos:start="468:1" pos:end="468:62">/* XXX: This value must match the one used in the MMU code. */</comment>

        <if_stmt pos:start="470:9" pos:end="577:17"><if pos:start="470:9" pos:end="478:9">if <condition pos:start="470:12" pos:end="470:62">(<expr pos:start="470:13" pos:end="470:61"><name pos:start="470:13" pos:end="470:45"><name pos:start="470:13" pos:end="470:15">env</name><operator pos:start="470:16" pos:end="470:17">-&gt;</operator><name pos:start="470:18" pos:end="470:25">features</name><index pos:start="470:26" pos:end="470:45">[<expr pos:start="470:27" pos:end="470:44"><name pos:start="470:27" pos:end="470:44">FEAT_8000_0001_EDX</name></expr>]</index></name> <operator pos:start="470:47" pos:end="470:47">&amp;</operator> <name pos:start="470:49" pos:end="470:61">CPUID_EXT2_LM</name></expr>)</condition> <block pos:start="470:64" pos:end="478:9">{<block_content pos:start="476:13" pos:end="476:30">

            <comment type="block" pos:start="472:13" pos:end="472:34">/* 64 bit processor */</comment>

<comment type="block" pos:start="474:1" pos:end="474:70">/* XXX: The physical address space is limited to 42 bits in exec.c. */</comment>

            <expr_stmt pos:start="476:13" pos:end="476:30"><expr pos:start="476:13" pos:end="476:29"><operator pos:start="476:13" pos:end="476:13">*</operator><name pos:start="476:14" pos:end="476:16">eax</name> <operator pos:start="476:18" pos:end="476:18">=</operator> <literal type="number" pos:start="476:20" pos:end="476:29">0x00003028</literal></expr>;</expr_stmt> <comment type="block" pos:start="476:32" pos:end="476:70">/* 48 bits virtual, 40 bits physical */</comment>

        </block_content>}</block></if> <else pos:start="478:11" pos:end="577:17">else <block pos:start="478:16" pos:end="577:17">{<block_content pos:start="480:13" pos:end="577:17">

            <if_stmt pos:start="480:13" pos:end="577:17"><if pos:start="480:13" pos:end="484:13">if <condition pos:start="480:16" pos:end="480:56">(<expr pos:start="480:17" pos:end="480:55"><name pos:start="480:17" pos:end="480:41"><name pos:start="480:17" pos:end="480:19">env</name><operator pos:start="480:20" pos:end="480:21">-&gt;</operator><name pos:start="480:22" pos:end="480:29">features</name><index pos:start="480:30" pos:end="480:41">[<expr pos:start="480:31" pos:end="480:40"><name pos:start="480:31" pos:end="480:40">FEAT_1_EDX</name></expr>]</index></name> <operator pos:start="480:43" pos:end="480:43">&amp;</operator> <name pos:start="480:45" pos:end="480:55">CPUID_PSE36</name></expr>)</condition> <block pos:start="480:58" pos:end="484:13">{<block_content pos:start="482:17" pos:end="482:34">

                <expr_stmt pos:start="482:17" pos:end="482:34"><expr pos:start="482:17" pos:end="482:33"><operator pos:start="482:17" pos:end="482:17">*</operator><name pos:start="482:18" pos:end="482:20">eax</name> <operator pos:start="482:22" pos:end="482:22">=</operator> <literal type="number" pos:start="482:24" pos:end="482:33">0x00000024</literal></expr>;</expr_stmt> <comment type="block" pos:start="482:36" pos:end="482:57">/* 36 bits physical */</comment>

            </block_content>}</block></if> <else pos:start="484:15" pos:end="577:17">else <block pos:start="484:20" pos:end="577:17">{<block_content pos:start="486:17" pos:end="577:17">

                <expr_stmt pos:start="486:17" pos:end="486:34"><expr pos:start="486:17" pos:end="486:33"><operator pos:start="486:17" pos:end="486:17">*</operator><name pos:start="486:18" pos:end="486:20">eax</name> <operator pos:start="486:22" pos:end="486:22">=</operator> <literal type="number" pos:start="486:24" pos:end="486:33">0x00000020</literal></expr>;</expr_stmt> <comment type="block" pos:start="486:36" pos:end="486:57">/* 32 bits physical */</comment>



        <expr_stmt pos:start="490:9" pos:end="490:17"><expr pos:start="490:9" pos:end="490:16"><operator pos:start="490:9" pos:end="490:9">*</operator><name pos:start="490:10" pos:end="490:12">ebx</name> <operator pos:start="490:14" pos:end="490:14">=</operator> <literal type="number" pos:start="490:16" pos:end="490:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="492:9" pos:end="492:17"><expr pos:start="492:9" pos:end="492:16"><operator pos:start="492:9" pos:end="492:9">*</operator><name pos:start="492:10" pos:end="492:12">ecx</name> <operator pos:start="492:14" pos:end="492:14">=</operator> <literal type="number" pos:start="492:16" pos:end="492:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="494:9" pos:end="494:17"><expr pos:start="494:9" pos:end="494:16"><operator pos:start="494:9" pos:end="494:9">*</operator><name pos:start="494:10" pos:end="494:12">edx</name> <operator pos:start="494:14" pos:end="494:14">=</operator> <literal type="number" pos:start="494:16" pos:end="494:16">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="496:9" pos:end="577:17"><if pos:start="496:9" pos:end="577:17">if <condition pos:start="496:12" pos:end="496:46">(<expr pos:start="496:13" pos:end="496:45"><name pos:start="496:13" pos:end="496:24"><name pos:start="496:13" pos:end="496:14">cs</name><operator pos:start="496:15" pos:end="496:16">-&gt;</operator><name pos:start="496:17" pos:end="496:24">nr_cores</name></name> <operator pos:start="496:26" pos:end="496:26">*</operator> <name pos:start="496:28" pos:end="496:41"><name pos:start="496:28" pos:end="496:29">cs</name><operator pos:start="496:30" pos:end="496:31">-&gt;</operator><name pos:start="496:32" pos:end="496:41">nr_threads</name></name> <operator pos:start="496:43" pos:end="496:43">&gt;</operator> <literal type="number" pos:start="496:45" pos:end="496:45">1</literal></expr>)</condition> <block pos:start="496:48" pos:end="577:17">{<block_content pos:start="498:13" pos:end="577:17">

            <expr_stmt pos:start="498:13" pos:end="498:56"><expr pos:start="498:13" pos:end="498:55"><operator pos:start="498:13" pos:end="498:13">*</operator><name pos:start="498:14" pos:end="498:16">ecx</name> <operator pos:start="498:18" pos:end="498:19">|=</operator> <operator pos:start="498:21" pos:end="498:21">(</operator><name pos:start="498:22" pos:end="498:33"><name pos:start="498:22" pos:end="498:23">cs</name><operator pos:start="498:24" pos:end="498:25">-&gt;</operator><name pos:start="498:26" pos:end="498:33">nr_cores</name></name> <operator pos:start="498:35" pos:end="498:35">*</operator> <name pos:start="498:37" pos:end="498:50"><name pos:start="498:37" pos:end="498:38">cs</name><operator pos:start="498:39" pos:end="498:40">-&gt;</operator><name pos:start="498:41" pos:end="498:50">nr_threads</name></name><operator pos:start="498:51" pos:end="498:51">)</operator> <operator pos:start="498:53" pos:end="498:53">-</operator> <literal type="number" pos:start="498:55" pos:end="498:55">1</literal></expr>;</expr_stmt>



    <case pos:start="502:5" pos:end="502:20">case <expr pos:start="502:10" pos:end="502:19"><literal type="number" pos:start="502:10" pos:end="502:19">0x8000000A</literal></expr>:</case>

        <if_stmt pos:start="504:9" pos:end="577:17"><if pos:start="504:9" pos:end="514:9">if <condition pos:start="504:12" pos:end="504:63">(<expr pos:start="504:13" pos:end="504:62"><name pos:start="504:13" pos:end="504:45"><name pos:start="504:13" pos:end="504:15">env</name><operator pos:start="504:16" pos:end="504:17">-&gt;</operator><name pos:start="504:18" pos:end="504:25">features</name><index pos:start="504:26" pos:end="504:45">[<expr pos:start="504:27" pos:end="504:44"><name pos:start="504:27" pos:end="504:44">FEAT_8000_0001_ECX</name></expr>]</index></name> <operator pos:start="504:47" pos:end="504:47">&amp;</operator> <name pos:start="504:49" pos:end="504:62">CPUID_EXT3_SVM</name></expr>)</condition> <block pos:start="504:65" pos:end="514:9">{<block_content pos:start="506:13" pos:end="512:43">

            <expr_stmt pos:start="506:13" pos:end="506:30"><expr pos:start="506:13" pos:end="506:29"><operator pos:start="506:13" pos:end="506:13">*</operator><name pos:start="506:14" pos:end="506:16">eax</name> <operator pos:start="506:18" pos:end="506:18">=</operator> <literal type="number" pos:start="506:20" pos:end="506:29">0x00000001</literal></expr>;</expr_stmt> <comment type="block" pos:start="506:32" pos:end="506:49">/* SVM Revision */</comment>

            <expr_stmt pos:start="508:13" pos:end="508:30"><expr pos:start="508:13" pos:end="508:29"><operator pos:start="508:13" pos:end="508:13">*</operator><name pos:start="508:14" pos:end="508:16">ebx</name> <operator pos:start="508:18" pos:end="508:18">=</operator> <literal type="number" pos:start="508:20" pos:end="508:29">0x00000010</literal></expr>;</expr_stmt> <comment type="block" pos:start="508:32" pos:end="508:48">/* nr of ASIDs */</comment>

            <expr_stmt pos:start="510:13" pos:end="510:21"><expr pos:start="510:13" pos:end="510:20"><operator pos:start="510:13" pos:end="510:13">*</operator><name pos:start="510:14" pos:end="510:16">ecx</name> <operator pos:start="510:18" pos:end="510:18">=</operator> <literal type="number" pos:start="510:20" pos:end="510:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="512:13" pos:end="512:43"><expr pos:start="512:13" pos:end="512:42"><operator pos:start="512:13" pos:end="512:13">*</operator><name pos:start="512:14" pos:end="512:16">edx</name> <operator pos:start="512:18" pos:end="512:18">=</operator> <name pos:start="512:20" pos:end="512:42"><name pos:start="512:20" pos:end="512:22">env</name><operator pos:start="512:23" pos:end="512:24">-&gt;</operator><name pos:start="512:25" pos:end="512:32">features</name><index pos:start="512:33" pos:end="512:42">[<expr pos:start="512:34" pos:end="512:41"><name pos:start="512:34" pos:end="512:41">FEAT_SVM</name></expr>]</index></name></expr>;</expr_stmt> <comment type="block" pos:start="512:45" pos:end="512:67">/* optional features */</comment>

        </block_content>}</block></if> <else pos:start="514:11" pos:end="577:17">else <block pos:start="514:16" pos:end="577:17">{<block_content pos:start="516:13" pos:end="577:17">

            <expr_stmt pos:start="516:13" pos:end="516:21"><expr pos:start="516:13" pos:end="516:20"><operator pos:start="516:13" pos:end="516:13">*</operator><name pos:start="516:14" pos:end="516:16">eax</name> <operator pos:start="516:18" pos:end="516:18">=</operator> <literal type="number" pos:start="516:20" pos:end="516:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="518:13" pos:end="518:21"><expr pos:start="518:13" pos:end="518:20"><operator pos:start="518:13" pos:end="518:13">*</operator><name pos:start="518:14" pos:end="518:16">ebx</name> <operator pos:start="518:18" pos:end="518:18">=</operator> <literal type="number" pos:start="518:20" pos:end="518:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="520:13" pos:end="520:21"><expr pos:start="520:13" pos:end="520:20"><operator pos:start="520:13" pos:end="520:13">*</operator><name pos:start="520:14" pos:end="520:16">ecx</name> <operator pos:start="520:18" pos:end="520:18">=</operator> <literal type="number" pos:start="520:20" pos:end="520:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="522:13" pos:end="522:21"><expr pos:start="522:13" pos:end="522:20"><operator pos:start="522:13" pos:end="522:13">*</operator><name pos:start="522:14" pos:end="522:16">edx</name> <operator pos:start="522:18" pos:end="522:18">=</operator> <literal type="number" pos:start="522:20" pos:end="522:20">0</literal></expr>;</expr_stmt>



    <case pos:start="526:5" pos:end="526:20">case <expr pos:start="526:10" pos:end="526:19"><literal type="number" pos:start="526:10" pos:end="526:19">0xC0000000</literal></expr>:</case>

        <expr_stmt pos:start="528:9" pos:end="528:34"><expr pos:start="528:9" pos:end="528:33"><operator pos:start="528:9" pos:end="528:9">*</operator><name pos:start="528:10" pos:end="528:12">eax</name> <operator pos:start="528:14" pos:end="528:14">=</operator> <name pos:start="528:16" pos:end="528:33"><name pos:start="528:16" pos:end="528:18">env</name><operator pos:start="528:19" pos:end="528:20">-&gt;</operator><name pos:start="528:21" pos:end="528:33">cpuid_xlevel2</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="530:9" pos:end="530:17"><expr pos:start="530:9" pos:end="530:16"><operator pos:start="530:9" pos:end="530:9">*</operator><name pos:start="530:10" pos:end="530:12">ebx</name> <operator pos:start="530:14" pos:end="530:14">=</operator> <literal type="number" pos:start="530:16" pos:end="530:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="532:9" pos:end="532:17"><expr pos:start="532:9" pos:end="532:16"><operator pos:start="532:9" pos:end="532:9">*</operator><name pos:start="532:10" pos:end="532:12">ecx</name> <operator pos:start="532:14" pos:end="532:14">=</operator> <literal type="number" pos:start="532:16" pos:end="532:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="534:9" pos:end="534:17"><expr pos:start="534:9" pos:end="534:16"><operator pos:start="534:9" pos:end="534:9">*</operator><name pos:start="534:10" pos:end="534:12">edx</name> <operator pos:start="534:14" pos:end="534:14">=</operator> <literal type="number" pos:start="534:16" pos:end="534:16">0</literal></expr>;</expr_stmt>


    <case pos:start="537:5" pos:end="537:20">case <expr pos:start="537:10" pos:end="537:19"><literal type="number" pos:start="537:10" pos:end="537:19">0xC0000001</literal></expr>:</case>

        <comment type="block" pos:start="539:9" pos:end="539:53">/* Support for VIA CPU's CPUID instruction */</comment>

        <expr_stmt pos:start="541:9" pos:end="541:34"><expr pos:start="541:9" pos:end="541:33"><operator pos:start="541:9" pos:end="541:9">*</operator><name pos:start="541:10" pos:end="541:12">eax</name> <operator pos:start="541:14" pos:end="541:14">=</operator> <name pos:start="541:16" pos:end="541:33"><name pos:start="541:16" pos:end="541:18">env</name><operator pos:start="541:19" pos:end="541:20">-&gt;</operator><name pos:start="541:21" pos:end="541:33">cpuid_version</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="543:9" pos:end="543:17"><expr pos:start="543:9" pos:end="543:16"><operator pos:start="543:9" pos:end="543:9">*</operator><name pos:start="543:10" pos:end="543:12">ebx</name> <operator pos:start="543:14" pos:end="543:14">=</operator> <literal type="number" pos:start="543:16" pos:end="543:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="545:9" pos:end="545:17"><expr pos:start="545:9" pos:end="545:16"><operator pos:start="545:9" pos:end="545:9">*</operator><name pos:start="545:10" pos:end="545:12">ecx</name> <operator pos:start="545:14" pos:end="545:14">=</operator> <literal type="number" pos:start="545:16" pos:end="545:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="547:9" pos:end="547:49"><expr pos:start="547:9" pos:end="547:48"><operator pos:start="547:9" pos:end="547:9">*</operator><name pos:start="547:10" pos:end="547:12">edx</name> <operator pos:start="547:14" pos:end="547:14">=</operator> <name pos:start="547:16" pos:end="547:48"><name pos:start="547:16" pos:end="547:18">env</name><operator pos:start="547:19" pos:end="547:20">-&gt;</operator><name pos:start="547:21" pos:end="547:28">features</name><index pos:start="547:29" pos:end="547:48">[<expr pos:start="547:30" pos:end="547:47"><name pos:start="547:30" pos:end="547:47">FEAT_C000_0001_EDX</name></expr>]</index></name></expr>;</expr_stmt>


    <case pos:start="550:5" pos:end="550:20">case <expr pos:start="550:10" pos:end="550:19"><literal type="number" pos:start="550:10" pos:end="550:19">0xC0000002</literal></expr>:</case>

    <case pos:start="552:5" pos:end="552:20">case <expr pos:start="552:10" pos:end="552:19"><literal type="number" pos:start="552:10" pos:end="552:19">0xC0000003</literal></expr>:</case>

    <case pos:start="554:5" pos:end="554:20">case <expr pos:start="554:10" pos:end="554:19"><literal type="number" pos:start="554:10" pos:end="554:19">0xC0000004</literal></expr>:</case>

        <comment type="block" pos:start="556:9" pos:end="556:63">/* Reserved for the future, and now filled with zero */</comment>

        <expr_stmt pos:start="558:9" pos:end="558:17"><expr pos:start="558:9" pos:end="558:16"><operator pos:start="558:9" pos:end="558:9">*</operator><name pos:start="558:10" pos:end="558:12">eax</name> <operator pos:start="558:14" pos:end="558:14">=</operator> <literal type="number" pos:start="558:16" pos:end="558:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="560:9" pos:end="560:17"><expr pos:start="560:9" pos:end="560:16"><operator pos:start="560:9" pos:end="560:9">*</operator><name pos:start="560:10" pos:end="560:12">ebx</name> <operator pos:start="560:14" pos:end="560:14">=</operator> <literal type="number" pos:start="560:16" pos:end="560:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="562:9" pos:end="562:17"><expr pos:start="562:9" pos:end="562:16"><operator pos:start="562:9" pos:end="562:9">*</operator><name pos:start="562:10" pos:end="562:12">ecx</name> <operator pos:start="562:14" pos:end="562:14">=</operator> <literal type="number" pos:start="562:16" pos:end="562:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="564:9" pos:end="564:17"><expr pos:start="564:9" pos:end="564:16"><operator pos:start="564:9" pos:end="564:9">*</operator><name pos:start="564:10" pos:end="564:12">edx</name> <operator pos:start="564:14" pos:end="564:14">=</operator> <literal type="number" pos:start="564:16" pos:end="564:16">0</literal></expr>;</expr_stmt>


    <default pos:start="567:5" pos:end="567:12">default:</default>

        <comment type="block" pos:start="569:9" pos:end="569:35">/* reserved values: zero */</comment>

        <expr_stmt pos:start="571:9" pos:end="571:17"><expr pos:start="571:9" pos:end="571:16"><operator pos:start="571:9" pos:end="571:9">*</operator><name pos:start="571:10" pos:end="571:12">eax</name> <operator pos:start="571:14" pos:end="571:14">=</operator> <literal type="number" pos:start="571:16" pos:end="571:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="573:9" pos:end="573:17"><expr pos:start="573:9" pos:end="573:16"><operator pos:start="573:9" pos:end="573:9">*</operator><name pos:start="573:10" pos:end="573:12">ebx</name> <operator pos:start="573:14" pos:end="573:14">=</operator> <literal type="number" pos:start="573:16" pos:end="573:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="575:9" pos:end="575:17"><expr pos:start="575:9" pos:end="575:16"><operator pos:start="575:9" pos:end="575:9">*</operator><name pos:start="575:10" pos:end="575:12">ecx</name> <operator pos:start="575:14" pos:end="575:14">=</operator> <literal type="number" pos:start="575:16" pos:end="575:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="577:9" pos:end="577:17"><expr pos:start="577:9" pos:end="577:16"><operator pos:start="577:9" pos:end="577:9">*</operator><name pos:start="577:10" pos:end="577:12">edx</name> <operator pos:start="577:14" pos:end="577:14">=</operator> <literal type="number" pos:start="577:16" pos:end="577:16">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>


</unit>
