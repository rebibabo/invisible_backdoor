<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21245.c" pos:tabs="8"><function pos:start="1:1" pos:end="310:13"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:38">libx265_encode_init</name><parameter_list pos:start="1:39" pos:end="1:61">(<parameter pos:start="1:40" pos:end="1:60"><decl pos:start="1:40" pos:end="1:60"><type pos:start="1:40" pos:end="1:55"><name pos:start="1:40" pos:end="1:53">AVCodecContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:60">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="310:13">{<block_content pos:start="5:5" pos:end="310:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">libx265Context</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">ctx</name> <init pos:start="5:25" pos:end="5:42">= <expr pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:31">avctx</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:80"><expr pos:start="9:5" pos:end="9:79"><name pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:7">ctx</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:12">api</name></name> <operator pos:start="9:14" pos:end="9:14">=</operator> <call pos:start="9:16" pos:end="9:79"><name pos:start="9:16" pos:end="9:27">x265_api_get</name><argument_list pos:start="9:28" pos:end="9:79">(<argument pos:start="9:29" pos:end="9:78"><expr pos:start="9:29" pos:end="9:78"><call pos:start="9:29" pos:end="9:63"><name pos:start="9:29" pos:end="9:47">av_pix_fmt_desc_get</name><argument_list pos:start="9:48" pos:end="9:63">(<argument pos:start="9:49" pos:end="9:62"><expr pos:start="9:49" pos:end="9:62"><name pos:start="9:49" pos:end="9:62"><name pos:start="9:49" pos:end="9:53">avctx</name><operator pos:start="9:54" pos:end="9:55">-&gt;</operator><name pos:start="9:56" pos:end="9:62">pix_fmt</name></name></expr></argument>)</argument_list></call><operator pos:start="9:64" pos:end="9:65">-&gt;</operator><name pos:start="9:66" pos:end="9:72"><name pos:start="9:66" pos:end="9:69">comp</name><index pos:start="9:70" pos:end="9:72">[<expr pos:start="9:71" pos:end="9:71"><literal type="number" pos:start="9:71" pos:end="9:71">0</literal></expr>]</index></name><operator pos:start="9:73" pos:end="9:73">.</operator><name pos:start="9:74" pos:end="9:78">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="13:35"><if pos:start="11:5" pos:end="13:35">if <condition pos:start="11:8" pos:end="11:18">(<expr pos:start="11:9" pos:end="11:17"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:17"><name pos:start="11:10" pos:end="11:12">ctx</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:17">api</name></name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:35"><block_content pos:start="13:9" pos:end="13:35">

        <expr_stmt pos:start="13:9" pos:end="13:35"><expr pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:11">ctx</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:16">api</name></name> <operator pos:start="13:18" pos:end="13:18">=</operator> <call pos:start="13:20" pos:end="13:34"><name pos:start="13:20" pos:end="13:31">x265_api_get</name><argument_list pos:start="13:32" pos:end="13:34">(<argument pos:start="13:33" pos:end="13:33"><expr pos:start="13:33" pos:end="13:33"><literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:42"><expr pos:start="17:5" pos:end="17:41"><name pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:7">ctx</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:15">params</name></name> <operator pos:start="17:17" pos:end="17:17">=</operator> <call pos:start="17:19" pos:end="17:41"><name pos:start="17:19" pos:end="17:39"><name pos:start="17:19" pos:end="17:21">ctx</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:26">api</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:39">param_alloc</name></name><argument_list pos:start="17:40" pos:end="17:41">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="310:13"><if pos:start="19:5" pos:end="310:13">if <condition pos:start="19:8" pos:end="19:21">(<expr pos:start="19:9" pos:end="19:20"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:20"><name pos:start="19:10" pos:end="19:12">ctx</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:20">params</name></name></expr>)</condition> <block pos:start="19:23" pos:end="310:13">{<block_content pos:start="21:9" pos:end="310:13">

        <expr_stmt pos:start="21:9" pos:end="21:82"><expr pos:start="21:9" pos:end="21:81"><call pos:start="21:9" pos:end="21:81"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:81">(<argument pos:start="21:16" pos:end="21:20"><expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">avctx</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:37" pos:end="21:80"><expr pos:start="21:37" pos:end="21:80"><literal type="string" pos:start="21:37" pos:end="21:80">"Could not allocate x265 param structure.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>




    <if_stmt pos:start="28:5" pos:end="310:13"><if pos:start="28:5" pos:end="310:13">if <condition pos:start="28:8" pos:end="28:80">(<expr pos:start="28:9" pos:end="28:79"><call pos:start="28:9" pos:end="28:75"><name pos:start="28:9" pos:end="28:38"><name pos:start="28:9" pos:end="28:11">ctx</name><operator pos:start="28:12" pos:end="28:13">-&gt;</operator><name pos:start="28:14" pos:end="28:16">api</name><operator pos:start="28:17" pos:end="28:18">-&gt;</operator><name pos:start="28:19" pos:end="28:38">param_default_preset</name></name><argument_list pos:start="28:39" pos:end="28:75">(<argument pos:start="28:40" pos:end="28:50"><expr pos:start="28:40" pos:end="28:50"><name pos:start="28:40" pos:end="28:50"><name pos:start="28:40" pos:end="28:42">ctx</name><operator pos:start="28:43" pos:end="28:44">-&gt;</operator><name pos:start="28:45" pos:end="28:50">params</name></name></expr></argument>, <argument pos:start="28:53" pos:end="28:63"><expr pos:start="28:53" pos:end="28:63"><name pos:start="28:53" pos:end="28:63"><name pos:start="28:53" pos:end="28:55">ctx</name><operator pos:start="28:56" pos:end="28:57">-&gt;</operator><name pos:start="28:58" pos:end="28:63">preset</name></name></expr></argument>, <argument pos:start="28:66" pos:end="28:74"><expr pos:start="28:66" pos:end="28:74"><name pos:start="28:66" pos:end="28:74"><name pos:start="28:66" pos:end="28:68">ctx</name><operator pos:start="28:69" pos:end="28:70">-&gt;</operator><name pos:start="28:71" pos:end="28:74">tune</name></name></expr></argument>)</argument_list></call> <operator pos:start="28:77" pos:end="28:77">&lt;</operator> <literal type="number" pos:start="28:79" pos:end="28:79">0</literal></expr>)</condition> <block pos:start="28:82" pos:end="310:13">{<block_content pos:start="30:9" pos:end="310:13">

        <decl_stmt pos:start="30:9" pos:end="30:14"><decl pos:start="30:9" pos:end="30:13"><type pos:start="30:9" pos:end="30:11"><name pos:start="30:9" pos:end="30:11">int</name></type> <name pos:start="30:13" pos:end="30:13">i</name></decl>;</decl_stmt>



        <expr_stmt pos:start="34:9" pos:end="34:98"><expr pos:start="34:9" pos:end="34:97"><call pos:start="34:9" pos:end="34:97"><name pos:start="34:9" pos:end="34:14">av_log</name><argument_list pos:start="34:15" pos:end="34:97">(<argument pos:start="34:16" pos:end="34:20"><expr pos:start="34:16" pos:end="34:20"><name pos:start="34:16" pos:end="34:20">avctx</name></expr></argument>, <argument pos:start="34:23" pos:end="34:34"><expr pos:start="34:23" pos:end="34:34"><name pos:start="34:23" pos:end="34:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="34:37" pos:end="34:72"><expr pos:start="34:37" pos:end="34:72"><literal type="string" pos:start="34:37" pos:end="34:72">"Error setting preset/tune %s/%s.\n"</literal></expr></argument>, <argument pos:start="34:75" pos:end="34:85"><expr pos:start="34:75" pos:end="34:85"><name pos:start="34:75" pos:end="34:85"><name pos:start="34:75" pos:end="34:77">ctx</name><operator pos:start="34:78" pos:end="34:79">-&gt;</operator><name pos:start="34:80" pos:end="34:85">preset</name></name></expr></argument>, <argument pos:start="34:88" pos:end="34:96"><expr pos:start="34:88" pos:end="34:96"><name pos:start="34:88" pos:end="34:96"><name pos:start="34:88" pos:end="34:90">ctx</name><operator pos:start="34:91" pos:end="34:92">-&gt;</operator><name pos:start="34:93" pos:end="34:96">tune</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="36:9" pos:end="36:56"><expr pos:start="36:9" pos:end="36:55"><call pos:start="36:9" pos:end="36:55"><name pos:start="36:9" pos:end="36:14">av_log</name><argument_list pos:start="36:15" pos:end="36:55">(<argument pos:start="36:16" pos:end="36:20"><expr pos:start="36:16" pos:end="36:20"><name pos:start="36:16" pos:end="36:20">avctx</name></expr></argument>, <argument pos:start="36:23" pos:end="36:33"><expr pos:start="36:23" pos:end="36:33"><name pos:start="36:23" pos:end="36:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="36:36" pos:end="36:54"><expr pos:start="36:36" pos:end="36:54"><literal type="string" pos:start="36:36" pos:end="36:54">"Possible presets:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="38:9" pos:end="40:68">for <control pos:start="38:13" pos:end="38:46">(<init pos:start="38:14" pos:end="38:19"><expr pos:start="38:14" pos:end="38:18"><name pos:start="38:14" pos:end="38:14">i</name> <operator pos:start="38:16" pos:end="38:16">=</operator> <literal type="number" pos:start="38:18" pos:end="38:18">0</literal></expr>;</init> <condition pos:start="38:21" pos:end="38:41"><expr pos:start="38:21" pos:end="38:40"><name pos:start="38:21" pos:end="38:40"><name pos:start="38:21" pos:end="38:37">x265_preset_names</name><index pos:start="38:38" pos:end="38:40">[<expr pos:start="38:39" pos:end="38:39"><name pos:start="38:39" pos:end="38:39">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="38:43" pos:end="38:45"><expr pos:start="38:43" pos:end="38:45"><name pos:start="38:43" pos:end="38:43">i</name><operator pos:start="38:44" pos:end="38:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="40:13" pos:end="40:68"><block_content pos:start="40:13" pos:end="40:68">

            <expr_stmt pos:start="40:13" pos:end="40:68"><expr pos:start="40:13" pos:end="40:67"><call pos:start="40:13" pos:end="40:67"><name pos:start="40:13" pos:end="40:18">av_log</name><argument_list pos:start="40:19" pos:end="40:67">(<argument pos:start="40:20" pos:end="40:24"><expr pos:start="40:20" pos:end="40:24"><name pos:start="40:20" pos:end="40:24">avctx</name></expr></argument>, <argument pos:start="40:27" pos:end="40:37"><expr pos:start="40:27" pos:end="40:37"><name pos:start="40:27" pos:end="40:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="40:40" pos:end="40:44"><expr pos:start="40:40" pos:end="40:44"><literal type="string" pos:start="40:40" pos:end="40:44">" %s"</literal></expr></argument>, <argument pos:start="40:47" pos:end="40:66"><expr pos:start="40:47" pos:end="40:66"><name pos:start="40:47" pos:end="40:66"><name pos:start="40:47" pos:end="40:63">x265_preset_names</name><index pos:start="40:64" pos:end="40:66">[<expr pos:start="40:65" pos:end="40:65"><name pos:start="40:65" pos:end="40:65">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="44:9" pos:end="44:41"><expr pos:start="44:9" pos:end="44:40"><call pos:start="44:9" pos:end="44:40"><name pos:start="44:9" pos:end="44:14">av_log</name><argument_list pos:start="44:15" pos:end="44:40">(<argument pos:start="44:16" pos:end="44:20"><expr pos:start="44:16" pos:end="44:20"><name pos:start="44:16" pos:end="44:20">avctx</name></expr></argument>, <argument pos:start="44:23" pos:end="44:33"><expr pos:start="44:23" pos:end="44:33"><name pos:start="44:23" pos:end="44:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="44:36" pos:end="44:39"><expr pos:start="44:36" pos:end="44:39"><literal type="string" pos:start="44:36" pos:end="44:39">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="46:9" pos:end="46:54"><expr pos:start="46:9" pos:end="46:53"><call pos:start="46:9" pos:end="46:53"><name pos:start="46:9" pos:end="46:14">av_log</name><argument_list pos:start="46:15" pos:end="46:53">(<argument pos:start="46:16" pos:end="46:20"><expr pos:start="46:16" pos:end="46:20"><name pos:start="46:16" pos:end="46:20">avctx</name></expr></argument>, <argument pos:start="46:23" pos:end="46:33"><expr pos:start="46:23" pos:end="46:33"><name pos:start="46:23" pos:end="46:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="46:36" pos:end="46:52"><expr pos:start="46:36" pos:end="46:52"><literal type="string" pos:start="46:36" pos:end="46:52">"Possible tunes:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="48:9" pos:end="50:66">for <control pos:start="48:13" pos:end="48:44">(<init pos:start="48:14" pos:end="48:19"><expr pos:start="48:14" pos:end="48:18"><name pos:start="48:14" pos:end="48:14">i</name> <operator pos:start="48:16" pos:end="48:16">=</operator> <literal type="number" pos:start="48:18" pos:end="48:18">0</literal></expr>;</init> <condition pos:start="48:21" pos:end="48:39"><expr pos:start="48:21" pos:end="48:38"><name pos:start="48:21" pos:end="48:38"><name pos:start="48:21" pos:end="48:35">x265_tune_names</name><index pos:start="48:36" pos:end="48:38">[<expr pos:start="48:37" pos:end="48:37"><name pos:start="48:37" pos:end="48:37">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="48:41" pos:end="48:43"><expr pos:start="48:41" pos:end="48:43"><name pos:start="48:41" pos:end="48:41">i</name><operator pos:start="48:42" pos:end="48:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="50:13" pos:end="50:66"><block_content pos:start="50:13" pos:end="50:66">

            <expr_stmt pos:start="50:13" pos:end="50:66"><expr pos:start="50:13" pos:end="50:65"><call pos:start="50:13" pos:end="50:65"><name pos:start="50:13" pos:end="50:18">av_log</name><argument_list pos:start="50:19" pos:end="50:65">(<argument pos:start="50:20" pos:end="50:24"><expr pos:start="50:20" pos:end="50:24"><name pos:start="50:20" pos:end="50:24">avctx</name></expr></argument>, <argument pos:start="50:27" pos:end="50:37"><expr pos:start="50:27" pos:end="50:37"><name pos:start="50:27" pos:end="50:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="50:40" pos:end="50:44"><expr pos:start="50:40" pos:end="50:44"><literal type="string" pos:start="50:40" pos:end="50:44">" %s"</literal></expr></argument>, <argument pos:start="50:47" pos:end="50:64"><expr pos:start="50:47" pos:end="50:64"><name pos:start="50:47" pos:end="50:64"><name pos:start="50:47" pos:end="50:61">x265_tune_names</name><index pos:start="50:62" pos:end="50:64">[<expr pos:start="50:63" pos:end="50:63"><name pos:start="50:63" pos:end="50:63">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="54:9" pos:end="54:41"><expr pos:start="54:9" pos:end="54:40"><call pos:start="54:9" pos:end="54:40"><name pos:start="54:9" pos:end="54:14">av_log</name><argument_list pos:start="54:15" pos:end="54:40">(<argument pos:start="54:16" pos:end="54:20"><expr pos:start="54:16" pos:end="54:20"><name pos:start="54:16" pos:end="54:20">avctx</name></expr></argument>, <argument pos:start="54:23" pos:end="54:33"><expr pos:start="54:23" pos:end="54:33"><name pos:start="54:23" pos:end="54:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="54:36" pos:end="54:39"><expr pos:start="54:36" pos:end="54:39"><literal type="string" pos:start="54:36" pos:end="54:39">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="58:9" pos:end="58:31">return <expr pos:start="58:16" pos:end="58:30"><call pos:start="58:16" pos:end="58:30"><name pos:start="58:16" pos:end="58:22">AVERROR</name><argument_list pos:start="58:23" pos:end="58:30">(<argument pos:start="58:24" pos:end="58:29"><expr pos:start="58:24" pos:end="58:29"><name pos:start="58:24" pos:end="58:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>




    <expr_stmt pos:start="63:5" pos:end="63:55"><expr pos:start="63:5" pos:end="63:54"><name pos:start="63:5" pos:end="63:32"><name pos:start="63:5" pos:end="63:7">ctx</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:15">params</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:32">frameNumThreads</name></name> <operator pos:start="63:34" pos:end="63:34">=</operator> <name pos:start="63:36" pos:end="63:54"><name pos:start="63:36" pos:end="63:40">avctx</name><operator pos:start="63:41" pos:end="63:42">-&gt;</operator><name pos:start="63:43" pos:end="63:54">thread_count</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:56"><expr pos:start="65:5" pos:end="65:55"><name pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:7">ctx</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:15">params</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:23">fpsNum</name></name>          <operator pos:start="65:34" pos:end="65:34">=</operator> <name pos:start="65:36" pos:end="65:55"><name pos:start="65:36" pos:end="65:40">avctx</name><operator pos:start="65:41" pos:end="65:42">-&gt;</operator><name pos:start="65:43" pos:end="65:51">time_base</name><operator pos:start="65:52" pos:end="65:52">.</operator><name pos:start="65:53" pos:end="65:55">den</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:81"><expr pos:start="67:5" pos:end="67:80"><name pos:start="67:5" pos:end="67:25"><name pos:start="67:5" pos:end="67:7">ctx</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:15">params</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:25">fpsDenom</name></name>        <operator pos:start="67:34" pos:end="67:34">=</operator> <name pos:start="67:36" pos:end="67:55"><name pos:start="67:36" pos:end="67:40">avctx</name><operator pos:start="67:41" pos:end="67:42">-&gt;</operator><name pos:start="67:43" pos:end="67:51">time_base</name><operator pos:start="67:52" pos:end="67:52">.</operator><name pos:start="67:53" pos:end="67:55">num</name></name> <operator pos:start="67:57" pos:end="67:57">*</operator> <name pos:start="67:59" pos:end="67:80"><name pos:start="67:59" pos:end="67:63">avctx</name><operator pos:start="67:64" pos:end="67:65">-&gt;</operator><name pos:start="67:66" pos:end="67:80">ticks_per_frame</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:48"><expr pos:start="69:5" pos:end="69:47"><name pos:start="69:5" pos:end="69:28"><name pos:start="69:5" pos:end="69:7">ctx</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:15">params</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:28">sourceWidth</name></name>     <operator pos:start="69:34" pos:end="69:34">=</operator> <name pos:start="69:36" pos:end="69:47"><name pos:start="69:36" pos:end="69:40">avctx</name><operator pos:start="69:41" pos:end="69:42">-&gt;</operator><name pos:start="69:43" pos:end="69:47">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:49"><expr pos:start="71:5" pos:end="71:48"><name pos:start="71:5" pos:end="71:29"><name pos:start="71:5" pos:end="71:7">ctx</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:15">params</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:29">sourceHeight</name></name>    <operator pos:start="71:34" pos:end="71:34">=</operator> <name pos:start="71:36" pos:end="71:48"><name pos:start="71:36" pos:end="71:40">avctx</name><operator pos:start="71:41" pos:end="71:42">-&gt;</operator><name pos:start="71:43" pos:end="71:48">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:73"><expr pos:start="73:5" pos:end="73:72"><name pos:start="73:5" pos:end="73:28"><name pos:start="73:5" pos:end="73:7">ctx</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:15">params</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:28">bEnablePsnr</name></name>     <operator pos:start="73:34" pos:end="73:34">=</operator> <operator pos:start="73:36" pos:end="73:36">!</operator><operator pos:start="73:37" pos:end="73:37">!</operator><operator pos:start="73:38" pos:end="73:38">(</operator><name pos:start="73:39" pos:end="73:50"><name pos:start="73:39" pos:end="73:43">avctx</name><operator pos:start="73:44" pos:end="73:45">-&gt;</operator><name pos:start="73:46" pos:end="73:50">flags</name></name> <operator pos:start="73:52" pos:end="73:52">&amp;</operator> <name pos:start="73:54" pos:end="73:71">AV_CODEC_FLAG_PSNR</name><operator pos:start="73:72" pos:end="73:72">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="77:5" pos:end="310:13"><if pos:start="77:5" pos:end="310:13">if <condition pos:start="77:8" pos:end="87:53">(<expr pos:start="77:9" pos:end="87:52"><operator pos:start="77:9" pos:end="77:9">(</operator><name pos:start="77:10" pos:end="77:31"><name pos:start="77:10" pos:end="77:14">avctx</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:31">color_primaries</name></name> <operator pos:start="77:33" pos:end="77:34">&lt;=</operator> <name pos:start="77:36" pos:end="77:51">AVCOL_PRI_BT2020</name> <operator pos:start="77:53" pos:end="77:54">&amp;&amp;</operator>

         <name pos:start="79:10" pos:end="79:31"><name pos:start="79:10" pos:end="79:14">avctx</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:31">color_primaries</name></name> <operator pos:start="79:33" pos:end="79:34">!=</operator> <name pos:start="79:36" pos:end="79:56">AVCOL_PRI_UNSPECIFIED</name><operator pos:start="79:57" pos:end="79:57">)</operator> <operator pos:start="79:59" pos:end="79:60">||</operator>

        <operator pos:start="81:9" pos:end="81:9">(</operator><name pos:start="81:10" pos:end="81:25"><name pos:start="81:10" pos:end="81:14">avctx</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:25">color_trc</name></name> <operator pos:start="81:27" pos:end="81:28">&lt;=</operator> <name pos:start="81:30" pos:end="81:48">AVCOL_TRC_BT2020_12</name> <operator pos:start="81:50" pos:end="81:51">&amp;&amp;</operator>

         <name pos:start="83:10" pos:end="83:25"><name pos:start="83:10" pos:end="83:14">avctx</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:25">color_trc</name></name> <operator pos:start="83:27" pos:end="83:28">!=</operator> <name pos:start="83:30" pos:end="83:50">AVCOL_TRC_UNSPECIFIED</name><operator pos:start="83:51" pos:end="83:51">)</operator> <operator pos:start="83:53" pos:end="83:54">||</operator>

        <operator pos:start="85:9" pos:end="85:9">(</operator><name pos:start="85:10" pos:end="85:26"><name pos:start="85:10" pos:end="85:14">avctx</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:26">colorspace</name></name> <operator pos:start="85:28" pos:end="85:29">&lt;=</operator> <name pos:start="85:31" pos:end="85:49">AVCOL_SPC_BT2020_CL</name> <operator pos:start="85:51" pos:end="85:52">&amp;&amp;</operator>

         <name pos:start="87:10" pos:end="87:26"><name pos:start="87:10" pos:end="87:14">avctx</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:26">colorspace</name></name> <operator pos:start="87:28" pos:end="87:29">!=</operator> <name pos:start="87:31" pos:end="87:51">AVCOL_SPC_UNSPECIFIED</name><operator pos:start="87:52" pos:end="87:52">)</operator></expr>)</condition> <block pos:start="87:55" pos:end="310:13">{<block_content pos:start="91:9" pos:end="310:13">



        <expr_stmt pos:start="91:9" pos:end="91:64"><expr pos:start="91:9" pos:end="91:63"><name pos:start="91:9" pos:end="91:58"><name pos:start="91:9" pos:end="91:11">ctx</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:19">params</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:24">vui</name><operator pos:start="91:25" pos:end="91:25">.</operator><name pos:start="91:26" pos:end="91:58">bEnableVideoSignalTypePresentFlag</name></name>  <operator pos:start="91:61" pos:end="91:61">=</operator> <literal type="number" pos:start="91:63" pos:end="91:63">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:64"><expr pos:start="93:9" pos:end="93:63"><name pos:start="93:9" pos:end="93:59"><name pos:start="93:9" pos:end="93:11">ctx</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:19">params</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:24">vui</name><operator pos:start="93:25" pos:end="93:25">.</operator><name pos:start="93:26" pos:end="93:59">bEnableColorDescriptionPresentFlag</name></name> <operator pos:start="93:61" pos:end="93:61">=</operator> <literal type="number" pos:start="93:63" pos:end="93:63">1</literal></expr>;</expr_stmt>



        <comment type="line" pos:start="97:9" pos:end="97:51">// x265 validates the parameters internally</comment>

        <expr_stmt pos:start="99:9" pos:end="99:74"><expr pos:start="99:9" pos:end="99:73"><name pos:start="99:9" pos:end="99:39"><name pos:start="99:9" pos:end="99:11">ctx</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:19">params</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:24">vui</name><operator pos:start="99:25" pos:end="99:25">.</operator><name pos:start="99:26" pos:end="99:39">colorPrimaries</name></name>          <operator pos:start="99:50" pos:end="99:50">=</operator> <name pos:start="99:52" pos:end="99:73"><name pos:start="99:52" pos:end="99:56">avctx</name><operator pos:start="99:57" pos:end="99:58">-&gt;</operator><name pos:start="99:59" pos:end="99:73">color_primaries</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:68"><expr pos:start="101:9" pos:end="101:67"><name pos:start="101:9" pos:end="101:48"><name pos:start="101:9" pos:end="101:11">ctx</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:19">params</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:24">vui</name><operator pos:start="101:25" pos:end="101:25">.</operator><name pos:start="101:26" pos:end="101:48">transferCharacteristics</name></name> <operator pos:start="101:50" pos:end="101:50">=</operator> <name pos:start="101:52" pos:end="101:67"><name pos:start="101:52" pos:end="101:56">avctx</name><operator pos:start="101:57" pos:end="101:58">-&gt;</operator><name pos:start="101:59" pos:end="101:67">color_trc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:69"><expr pos:start="103:9" pos:end="103:68"><name pos:start="103:9" pos:end="103:37"><name pos:start="103:9" pos:end="103:11">ctx</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:19">params</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:24">vui</name><operator pos:start="103:25" pos:end="103:25">.</operator><name pos:start="103:26" pos:end="103:37">matrixCoeffs</name></name>            <operator pos:start="103:50" pos:end="103:50">=</operator> <name pos:start="103:52" pos:end="103:68"><name pos:start="103:52" pos:end="103:56">avctx</name><operator pos:start="103:57" pos:end="103:58">-&gt;</operator><name pos:start="103:59" pos:end="103:68">colorspace</name></name></expr>;</expr_stmt>




    <if_stmt pos:start="108:5" pos:end="310:13"><if pos:start="108:5" pos:end="310:13">if <condition pos:start="108:8" pos:end="108:81">(<expr pos:start="108:9" pos:end="108:80"><name pos:start="108:9" pos:end="108:38"><name pos:start="108:9" pos:end="108:13">avctx</name><operator pos:start="108:14" pos:end="108:15">-&gt;</operator><name pos:start="108:16" pos:end="108:34">sample_aspect_ratio</name><operator pos:start="108:35" pos:end="108:35">.</operator><name pos:start="108:36" pos:end="108:38">num</name></name> <operator pos:start="108:40" pos:end="108:40">&gt;</operator> <literal type="number" pos:start="108:42" pos:end="108:42">0</literal> <operator pos:start="108:44" pos:end="108:45">&amp;&amp;</operator> <name pos:start="108:47" pos:end="108:76"><name pos:start="108:47" pos:end="108:51">avctx</name><operator pos:start="108:52" pos:end="108:53">-&gt;</operator><name pos:start="108:54" pos:end="108:72">sample_aspect_ratio</name><operator pos:start="108:73" pos:end="108:73">.</operator><name pos:start="108:74" pos:end="108:76">den</name></name> <operator pos:start="108:78" pos:end="108:78">&gt;</operator> <literal type="number" pos:start="108:80" pos:end="108:80">0</literal></expr>)</condition> <block pos:start="108:83" pos:end="310:13">{<block_content pos:start="110:9" pos:end="310:13">

        <decl_stmt pos:start="110:9" pos:end="110:21"><decl pos:start="110:9" pos:end="110:20"><type pos:start="110:9" pos:end="110:12"><name pos:start="110:9" pos:end="110:12">char</name></type> <name pos:start="110:14" pos:end="110:20"><name pos:start="110:14" pos:end="110:16">sar</name><index pos:start="110:17" pos:end="110:20">[<expr pos:start="110:18" pos:end="110:19"><literal type="number" pos:start="110:18" pos:end="110:19">12</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="112:9" pos:end="112:29"><decl pos:start="112:9" pos:end="112:19"><type pos:start="112:9" pos:end="112:11"><name pos:start="112:9" pos:end="112:11">int</name></type> <name pos:start="112:13" pos:end="112:19">sar_num</name></decl>, <decl pos:start="112:22" pos:end="112:28"><type ref="prev" pos:start="112:9" pos:end="112:11"/><name pos:start="112:22" pos:end="112:28">sar_den</name></decl>;</decl_stmt>



        <expr_stmt pos:start="116:9" pos:end="120:57"><expr pos:start="116:9" pos:end="120:56"><call pos:start="116:9" pos:end="120:56"><name pos:start="116:9" pos:end="116:17">av_reduce</name><argument_list pos:start="116:18" pos:end="120:56">(<argument pos:start="116:19" pos:end="116:26"><expr pos:start="116:19" pos:end="116:26"><operator pos:start="116:19" pos:end="116:19">&amp;</operator><name pos:start="116:20" pos:end="116:26">sar_num</name></expr></argument>, <argument pos:start="116:29" pos:end="116:36"><expr pos:start="116:29" pos:end="116:36"><operator pos:start="116:29" pos:end="116:29">&amp;</operator><name pos:start="116:30" pos:end="116:36">sar_den</name></expr></argument>,

                  <argument pos:start="118:19" pos:end="118:48"><expr pos:start="118:19" pos:end="118:48"><name pos:start="118:19" pos:end="118:48"><name pos:start="118:19" pos:end="118:23">avctx</name><operator pos:start="118:24" pos:end="118:25">-&gt;</operator><name pos:start="118:26" pos:end="118:44">sample_aspect_ratio</name><operator pos:start="118:45" pos:end="118:45">.</operator><name pos:start="118:46" pos:end="118:48">num</name></name></expr></argument>,

                  <argument pos:start="120:19" pos:end="120:48"><expr pos:start="120:19" pos:end="120:48"><name pos:start="120:19" pos:end="120:48"><name pos:start="120:19" pos:end="120:23">avctx</name><operator pos:start="120:24" pos:end="120:25">-&gt;</operator><name pos:start="120:26" pos:end="120:44">sample_aspect_ratio</name><operator pos:start="120:45" pos:end="120:45">.</operator><name pos:start="120:46" pos:end="120:48">den</name></name></expr></argument>, <argument pos:start="120:51" pos:end="120:55"><expr pos:start="120:51" pos:end="120:55"><literal type="number" pos:start="120:51" pos:end="120:55">65535</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="122:9" pos:end="122:62"><expr pos:start="122:9" pos:end="122:61"><call pos:start="122:9" pos:end="122:61"><name pos:start="122:9" pos:end="122:16">snprintf</name><argument_list pos:start="122:17" pos:end="122:61">(<argument pos:start="122:18" pos:end="122:20"><expr pos:start="122:18" pos:end="122:20"><name pos:start="122:18" pos:end="122:20">sar</name></expr></argument>, <argument pos:start="122:23" pos:end="122:33"><expr pos:start="122:23" pos:end="122:33"><sizeof pos:start="122:23" pos:end="122:33">sizeof<argument_list pos:start="122:29" pos:end="122:33">(<argument pos:start="122:30" pos:end="122:32"><expr pos:start="122:30" pos:end="122:32"><name pos:start="122:30" pos:end="122:32">sar</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="122:36" pos:end="122:42"><expr pos:start="122:36" pos:end="122:42"><literal type="string" pos:start="122:36" pos:end="122:42">"%d:%d"</literal></expr></argument>, <argument pos:start="122:45" pos:end="122:51"><expr pos:start="122:45" pos:end="122:51"><name pos:start="122:45" pos:end="122:51">sar_num</name></expr></argument>, <argument pos:start="122:54" pos:end="122:60"><expr pos:start="122:54" pos:end="122:60"><name pos:start="122:54" pos:end="122:60">sar_den</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="124:9" pos:end="310:13"><if pos:start="124:9" pos:end="310:13">if <condition pos:start="124:12" pos:end="124:83">(<expr pos:start="124:13" pos:end="124:82"><call pos:start="124:13" pos:end="124:58"><name pos:start="124:13" pos:end="124:33"><name pos:start="124:13" pos:end="124:15">ctx</name><operator pos:start="124:16" pos:end="124:17">-&gt;</operator><name pos:start="124:18" pos:end="124:20">api</name><operator pos:start="124:21" pos:end="124:22">-&gt;</operator><name pos:start="124:23" pos:end="124:33">param_parse</name></name><argument_list pos:start="124:34" pos:end="124:58">(<argument pos:start="124:35" pos:end="124:45"><expr pos:start="124:35" pos:end="124:45"><name pos:start="124:35" pos:end="124:45"><name pos:start="124:35" pos:end="124:37">ctx</name><operator pos:start="124:38" pos:end="124:39">-&gt;</operator><name pos:start="124:40" pos:end="124:45">params</name></name></expr></argument>, <argument pos:start="124:48" pos:end="124:52"><expr pos:start="124:48" pos:end="124:52"><literal type="string" pos:start="124:48" pos:end="124:52">"sar"</literal></expr></argument>, <argument pos:start="124:55" pos:end="124:57"><expr pos:start="124:55" pos:end="124:57"><name pos:start="124:55" pos:end="124:57">sar</name></expr></argument>)</argument_list></call> <operator pos:start="124:60" pos:end="124:61">==</operator> <name pos:start="124:63" pos:end="124:82">X265_PARAM_BAD_VALUE</name></expr>)</condition> <block pos:start="124:85" pos:end="310:13">{<block_content pos:start="126:13" pos:end="310:13">

            <expr_stmt pos:start="126:13" pos:end="126:83"><expr pos:start="126:13" pos:end="126:82"><call pos:start="126:13" pos:end="126:82"><name pos:start="126:13" pos:end="126:18">av_log</name><argument_list pos:start="126:19" pos:end="126:82">(<argument pos:start="126:20" pos:end="126:24"><expr pos:start="126:20" pos:end="126:24"><name pos:start="126:20" pos:end="126:24">avctx</name></expr></argument>, <argument pos:start="126:27" pos:end="126:38"><expr pos:start="126:27" pos:end="126:38"><name pos:start="126:27" pos:end="126:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="126:41" pos:end="126:63"><expr pos:start="126:41" pos:end="126:63"><literal type="string" pos:start="126:41" pos:end="126:63">"Invalid SAR: %d:%d.\n"</literal></expr></argument>, <argument pos:start="126:66" pos:end="126:72"><expr pos:start="126:66" pos:end="126:72"><name pos:start="126:66" pos:end="126:72">sar_num</name></expr></argument>, <argument pos:start="126:75" pos:end="126:81"><expr pos:start="126:75" pos:end="126:81"><name pos:start="126:75" pos:end="126:81">sar_den</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>






    <switch pos:start="133:5" pos:end="310:13">switch <condition pos:start="133:12" pos:end="133:27">(<expr pos:start="133:13" pos:end="133:26"><name pos:start="133:13" pos:end="133:26"><name pos:start="133:13" pos:end="133:17">avctx</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:26">pix_fmt</name></name></expr>)</condition> <block pos:start="133:29" pos:end="310:13">{<block_content pos:start="135:5" pos:end="310:13">

    <case pos:start="135:5" pos:end="135:28">case <expr pos:start="135:10" pos:end="135:27"><name pos:start="135:10" pos:end="135:27">AV_PIX_FMT_YUV420P</name></expr>:</case>

    <case pos:start="137:5" pos:end="137:30">case <expr pos:start="137:10" pos:end="137:29"><name pos:start="137:10" pos:end="137:29">AV_PIX_FMT_YUV420P10</name></expr>:</case>

    <case pos:start="139:5" pos:end="139:30">case <expr pos:start="139:10" pos:end="139:29"><name pos:start="139:10" pos:end="139:29">AV_PIX_FMT_YUV420P12</name></expr>:</case>

        <expr_stmt pos:start="141:9" pos:end="141:49"><expr pos:start="141:9" pos:end="141:48"><name pos:start="141:9" pos:end="141:32"><name pos:start="141:9" pos:end="141:11">ctx</name><operator pos:start="141:12" pos:end="141:13">-&gt;</operator><name pos:start="141:14" pos:end="141:19">params</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:32">internalCsp</name></name> <operator pos:start="141:34" pos:end="141:34">=</operator> <name pos:start="141:36" pos:end="141:48">X265_CSP_I420</name></expr>;</expr_stmt>


    <case pos:start="144:5" pos:end="144:28">case <expr pos:start="144:10" pos:end="144:27"><name pos:start="144:10" pos:end="144:27">AV_PIX_FMT_YUV422P</name></expr>:</case>

    <case pos:start="146:5" pos:end="146:30">case <expr pos:start="146:10" pos:end="146:29"><name pos:start="146:10" pos:end="146:29">AV_PIX_FMT_YUV422P10</name></expr>:</case>

    <case pos:start="148:5" pos:end="148:30">case <expr pos:start="148:10" pos:end="148:29"><name pos:start="148:10" pos:end="148:29">AV_PIX_FMT_YUV422P12</name></expr>:</case>

        <expr_stmt pos:start="150:9" pos:end="150:49"><expr pos:start="150:9" pos:end="150:48"><name pos:start="150:9" pos:end="150:32"><name pos:start="150:9" pos:end="150:11">ctx</name><operator pos:start="150:12" pos:end="150:13">-&gt;</operator><name pos:start="150:14" pos:end="150:19">params</name><operator pos:start="150:20" pos:end="150:21">-&gt;</operator><name pos:start="150:22" pos:end="150:32">internalCsp</name></name> <operator pos:start="150:34" pos:end="150:34">=</operator> <name pos:start="150:36" pos:end="150:48">X265_CSP_I422</name></expr>;</expr_stmt>


    <case pos:start="153:5" pos:end="153:25">case <expr pos:start="153:10" pos:end="153:24"><name pos:start="153:10" pos:end="153:24">AV_PIX_FMT_GBRP</name></expr>:</case>

    <case pos:start="155:5" pos:end="155:27">case <expr pos:start="155:10" pos:end="155:26"><name pos:start="155:10" pos:end="155:26">AV_PIX_FMT_GBRP10</name></expr>:</case>

    <case pos:start="157:5" pos:end="157:27">case <expr pos:start="157:10" pos:end="157:26"><name pos:start="157:10" pos:end="157:26">AV_PIX_FMT_GBRP12</name></expr>:</case>

        <expr_stmt pos:start="159:9" pos:end="159:54"><expr pos:start="159:9" pos:end="159:53"><name pos:start="159:9" pos:end="159:37"><name pos:start="159:9" pos:end="159:11">ctx</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:19">params</name><operator pos:start="159:20" pos:end="159:21">-&gt;</operator><name pos:start="159:22" pos:end="159:24">vui</name><operator pos:start="159:25" pos:end="159:25">.</operator><name pos:start="159:26" pos:end="159:37">matrixCoeffs</name></name> <operator pos:start="159:39" pos:end="159:39">=</operator> <name pos:start="159:41" pos:end="159:53">AVCOL_SPC_RGB</name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:64"><expr pos:start="161:9" pos:end="161:63"><name pos:start="161:9" pos:end="161:58"><name pos:start="161:9" pos:end="161:11">ctx</name><operator pos:start="161:12" pos:end="161:13">-&gt;</operator><name pos:start="161:14" pos:end="161:19">params</name><operator pos:start="161:20" pos:end="161:21">-&gt;</operator><name pos:start="161:22" pos:end="161:24">vui</name><operator pos:start="161:25" pos:end="161:25">.</operator><name pos:start="161:26" pos:end="161:58">bEnableVideoSignalTypePresentFlag</name></name>  <operator pos:start="161:61" pos:end="161:61">=</operator> <literal type="number" pos:start="161:63" pos:end="161:63">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:64"><expr pos:start="163:9" pos:end="163:63"><name pos:start="163:9" pos:end="163:59"><name pos:start="163:9" pos:end="163:11">ctx</name><operator pos:start="163:12" pos:end="163:13">-&gt;</operator><name pos:start="163:14" pos:end="163:19">params</name><operator pos:start="163:20" pos:end="163:21">-&gt;</operator><name pos:start="163:22" pos:end="163:24">vui</name><operator pos:start="163:25" pos:end="163:25">.</operator><name pos:start="163:26" pos:end="163:59">bEnableColorDescriptionPresentFlag</name></name> <operator pos:start="163:61" pos:end="163:61">=</operator> <literal type="number" pos:start="163:63" pos:end="163:63">1</literal></expr>;</expr_stmt>

    <case pos:start="165:5" pos:end="165:28">case <expr pos:start="165:10" pos:end="165:27"><name pos:start="165:10" pos:end="165:27">AV_PIX_FMT_YUV444P</name></expr>:</case>

    <case pos:start="167:5" pos:end="167:30">case <expr pos:start="167:10" pos:end="167:29"><name pos:start="167:10" pos:end="167:29">AV_PIX_FMT_YUV444P10</name></expr>:</case>

    <case pos:start="169:5" pos:end="169:30">case <expr pos:start="169:10" pos:end="169:29"><name pos:start="169:10" pos:end="169:29">AV_PIX_FMT_YUV444P12</name></expr>:</case>

        <expr_stmt pos:start="171:9" pos:end="171:49"><expr pos:start="171:9" pos:end="171:48"><name pos:start="171:9" pos:end="171:32"><name pos:start="171:9" pos:end="171:11">ctx</name><operator pos:start="171:12" pos:end="171:13">-&gt;</operator><name pos:start="171:14" pos:end="171:19">params</name><operator pos:start="171:20" pos:end="171:21">-&gt;</operator><name pos:start="171:22" pos:end="171:32">internalCsp</name></name> <operator pos:start="171:34" pos:end="171:34">=</operator> <name pos:start="171:36" pos:end="171:48">X265_CSP_I444</name></expr>;</expr_stmt>














    <if_stmt pos:start="186:5" pos:end="310:13"><if pos:start="186:5" pos:end="310:13">if <condition pos:start="186:8" pos:end="186:22">(<expr pos:start="186:9" pos:end="186:21"><name pos:start="186:9" pos:end="186:16"><name pos:start="186:9" pos:end="186:11">ctx</name><operator pos:start="186:12" pos:end="186:13">-&gt;</operator><name pos:start="186:14" pos:end="186:16">crf</name></name> <operator pos:start="186:18" pos:end="186:19">&gt;=</operator> <literal type="number" pos:start="186:21" pos:end="186:21">0</literal></expr>)</condition> <block pos:start="186:24" pos:end="310:13">{<block_content pos:start="188:9" pos:end="310:13">

        <decl_stmt pos:start="188:9" pos:end="188:20"><decl pos:start="188:9" pos:end="188:19"><type pos:start="188:9" pos:end="188:12"><name pos:start="188:9" pos:end="188:12">char</name></type> <name pos:start="188:14" pos:end="188:19"><name pos:start="188:14" pos:end="188:16">crf</name><index pos:start="188:17" pos:end="188:19">[<expr pos:start="188:18" pos:end="188:18"><literal type="number" pos:start="188:18" pos:end="188:18">6</literal></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="192:9" pos:end="192:54"><expr pos:start="192:9" pos:end="192:53"><call pos:start="192:9" pos:end="192:53"><name pos:start="192:9" pos:end="192:16">snprintf</name><argument_list pos:start="192:17" pos:end="192:53">(<argument pos:start="192:18" pos:end="192:20"><expr pos:start="192:18" pos:end="192:20"><name pos:start="192:18" pos:end="192:20">crf</name></expr></argument>, <argument pos:start="192:23" pos:end="192:33"><expr pos:start="192:23" pos:end="192:33"><sizeof pos:start="192:23" pos:end="192:33">sizeof<argument_list pos:start="192:29" pos:end="192:33">(<argument pos:start="192:30" pos:end="192:32"><expr pos:start="192:30" pos:end="192:32"><name pos:start="192:30" pos:end="192:32">crf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="192:36" pos:end="192:42"><expr pos:start="192:36" pos:end="192:42"><literal type="string" pos:start="192:36" pos:end="192:42">"%2.2f"</literal></expr></argument>, <argument pos:start="192:45" pos:end="192:52"><expr pos:start="192:45" pos:end="192:52"><name pos:start="192:45" pos:end="192:52"><name pos:start="192:45" pos:end="192:47">ctx</name><operator pos:start="192:48" pos:end="192:49">-&gt;</operator><name pos:start="192:50" pos:end="192:52">crf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="194:9" pos:end="310:13"><if pos:start="194:9" pos:end="201:5">if <condition pos:start="194:12" pos:end="194:83">(<expr pos:start="194:13" pos:end="194:82"><call pos:start="194:13" pos:end="194:58"><name pos:start="194:13" pos:end="194:33"><name pos:start="194:13" pos:end="194:15">ctx</name><operator pos:start="194:16" pos:end="194:17">-&gt;</operator><name pos:start="194:18" pos:end="194:20">api</name><operator pos:start="194:21" pos:end="194:22">-&gt;</operator><name pos:start="194:23" pos:end="194:33">param_parse</name></name><argument_list pos:start="194:34" pos:end="194:58">(<argument pos:start="194:35" pos:end="194:45"><expr pos:start="194:35" pos:end="194:45"><name pos:start="194:35" pos:end="194:45"><name pos:start="194:35" pos:end="194:37">ctx</name><operator pos:start="194:38" pos:end="194:39">-&gt;</operator><name pos:start="194:40" pos:end="194:45">params</name></name></expr></argument>, <argument pos:start="194:48" pos:end="194:52"><expr pos:start="194:48" pos:end="194:52"><literal type="string" pos:start="194:48" pos:end="194:52">"crf"</literal></expr></argument>, <argument pos:start="194:55" pos:end="194:57"><expr pos:start="194:55" pos:end="194:57"><name pos:start="194:55" pos:end="194:57">crf</name></expr></argument>)</argument_list></call> <operator pos:start="194:60" pos:end="194:61">==</operator> <name pos:start="194:63" pos:end="194:82">X265_PARAM_BAD_VALUE</name></expr>)</condition> <block pos:start="194:85" pos:end="201:5">{<block_content pos:start="196:13" pos:end="198:35">

            <expr_stmt pos:start="196:13" pos:end="196:75"><expr pos:start="196:13" pos:end="196:74"><call pos:start="196:13" pos:end="196:74"><name pos:start="196:13" pos:end="196:18">av_log</name><argument_list pos:start="196:19" pos:end="196:74">(<argument pos:start="196:20" pos:end="196:24"><expr pos:start="196:20" pos:end="196:24"><name pos:start="196:20" pos:end="196:24">avctx</name></expr></argument>, <argument pos:start="196:27" pos:end="196:38"><expr pos:start="196:27" pos:end="196:38"><name pos:start="196:27" pos:end="196:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="196:41" pos:end="196:63"><expr pos:start="196:41" pos:end="196:63"><literal type="string" pos:start="196:41" pos:end="196:63">"Invalid crf: %2.2f.\n"</literal></expr></argument>, <argument pos:start="196:66" pos:end="196:73"><expr pos:start="196:66" pos:end="196:73"><name pos:start="196:66" pos:end="196:73"><name pos:start="196:66" pos:end="196:68">ctx</name><operator pos:start="196:69" pos:end="196:70">-&gt;</operator><name pos:start="196:71" pos:end="196:73">crf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="198:13" pos:end="198:35">return <expr pos:start="198:20" pos:end="198:34"><call pos:start="198:20" pos:end="198:34"><name pos:start="198:20" pos:end="198:26">AVERROR</name><argument_list pos:start="198:27" pos:end="198:34">(<argument pos:start="198:28" pos:end="198:33"><expr pos:start="198:28" pos:end="198:33"><name pos:start="198:28" pos:end="198:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>


    </block_content>}</block></if> <if type="elseif" pos:start="201:7" pos:end="310:13">else if <condition pos:start="201:15" pos:end="201:35">(<expr pos:start="201:16" pos:end="201:34"><name pos:start="201:16" pos:end="201:30"><name pos:start="201:16" pos:end="201:20">avctx</name><operator pos:start="201:21" pos:end="201:22">-&gt;</operator><name pos:start="201:23" pos:end="201:30">bit_rate</name></name> <operator pos:start="201:32" pos:end="201:32">&gt;</operator> <literal type="number" pos:start="201:34" pos:end="201:34">0</literal></expr>)</condition> <block pos:start="201:37" pos:end="310:13">{<block_content pos:start="203:9" pos:end="310:13">

        <expr_stmt pos:start="203:9" pos:end="203:65"><expr pos:start="203:9" pos:end="203:64"><name pos:start="203:9" pos:end="203:31"><name pos:start="203:9" pos:end="203:11">ctx</name><operator pos:start="203:12" pos:end="203:13">-&gt;</operator><name pos:start="203:14" pos:end="203:19">params</name><operator pos:start="203:20" pos:end="203:21">-&gt;</operator><name pos:start="203:22" pos:end="203:23">rc</name><operator pos:start="203:24" pos:end="203:24">.</operator><name pos:start="203:25" pos:end="203:31">bitrate</name></name>         <operator pos:start="203:41" pos:end="203:41">=</operator> <name pos:start="203:43" pos:end="203:57"><name pos:start="203:43" pos:end="203:47">avctx</name><operator pos:start="203:48" pos:end="203:49">-&gt;</operator><name pos:start="203:50" pos:end="203:57">bit_rate</name></name> <operator pos:start="203:59" pos:end="203:59">/</operator> <literal type="number" pos:start="203:61" pos:end="203:64">1000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:54"><expr pos:start="205:9" pos:end="205:53"><name pos:start="205:9" pos:end="205:39"><name pos:start="205:9" pos:end="205:11">ctx</name><operator pos:start="205:12" pos:end="205:13">-&gt;</operator><name pos:start="205:14" pos:end="205:19">params</name><operator pos:start="205:20" pos:end="205:21">-&gt;</operator><name pos:start="205:22" pos:end="205:23">rc</name><operator pos:start="205:24" pos:end="205:24">.</operator><name pos:start="205:25" pos:end="205:39">rateControlMode</name></name> <operator pos:start="205:41" pos:end="205:41">=</operator> <name pos:start="205:43" pos:end="205:53">X265_RC_ABR</name></expr>;</expr_stmt>




    <if_stmt pos:start="210:5" pos:end="212:40"><if pos:start="210:5" pos:end="212:40">if <condition pos:start="210:8" pos:end="210:54">(<expr pos:start="210:9" pos:end="210:53"><operator pos:start="210:9" pos:end="210:9">!</operator><operator pos:start="210:10" pos:end="210:10">(</operator><name pos:start="210:11" pos:end="210:22"><name pos:start="210:11" pos:end="210:15">avctx</name><operator pos:start="210:16" pos:end="210:17">-&gt;</operator><name pos:start="210:18" pos:end="210:22">flags</name></name> <operator pos:start="210:24" pos:end="210:24">&amp;</operator> <name pos:start="210:26" pos:end="210:52">AV_CODEC_FLAG_GLOBAL_HEADER</name><operator pos:start="210:53" pos:end="210:53">)</operator></expr>)</condition><block type="pseudo" pos:start="212:9" pos:end="212:40"><block_content pos:start="212:9" pos:end="212:40">

        <expr_stmt pos:start="212:9" pos:end="212:40"><expr pos:start="212:9" pos:end="212:39"><name pos:start="212:9" pos:end="212:35"><name pos:start="212:9" pos:end="212:11">ctx</name><operator pos:start="212:12" pos:end="212:13">-&gt;</operator><name pos:start="212:14" pos:end="212:19">params</name><operator pos:start="212:20" pos:end="212:21">-&gt;</operator><name pos:start="212:22" pos:end="212:35">bRepeatHeaders</name></name> <operator pos:start="212:37" pos:end="212:37">=</operator> <literal type="number" pos:start="212:39" pos:end="212:39">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="216:5" pos:end="310:13"><if pos:start="216:5" pos:end="310:13">if <condition pos:start="216:8" pos:end="216:23">(<expr pos:start="216:9" pos:end="216:22"><name pos:start="216:9" pos:end="216:22"><name pos:start="216:9" pos:end="216:11">ctx</name><operator pos:start="216:12" pos:end="216:13">-&gt;</operator><name pos:start="216:14" pos:end="216:22">x265_opts</name></name></expr>)</condition> <block pos:start="216:25" pos:end="310:13">{<block_content pos:start="218:9" pos:end="310:13">

        <decl_stmt pos:start="218:9" pos:end="218:37"><decl pos:start="218:9" pos:end="218:36"><type pos:start="218:9" pos:end="218:22"><name pos:start="218:9" pos:end="218:20">AVDictionary</name> <modifier pos:start="218:22" pos:end="218:22">*</modifier></type><name pos:start="218:23" pos:end="218:26">dict</name>    <init pos:start="218:31" pos:end="218:36">= <expr pos:start="218:33" pos:end="218:36"><name pos:start="218:33" pos:end="218:36">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="220:9" pos:end="220:37"><decl pos:start="220:9" pos:end="220:36"><type pos:start="220:9" pos:end="220:27"><name pos:start="220:9" pos:end="220:25">AVDictionaryEntry</name> <modifier pos:start="220:27" pos:end="220:27">*</modifier></type><name pos:start="220:28" pos:end="220:29">en</name> <init pos:start="220:31" pos:end="220:36">= <expr pos:start="220:33" pos:end="220:36"><name pos:start="220:33" pos:end="220:36">NULL</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="224:9" pos:end="310:13"><if pos:start="224:9" pos:end="310:13">if <condition pos:start="224:12" pos:end="224:70">(<expr pos:start="224:13" pos:end="224:69"><operator pos:start="224:13" pos:end="224:13">!</operator><call pos:start="224:14" pos:end="224:69"><name pos:start="224:14" pos:end="224:33">av_dict_parse_string</name><argument_list pos:start="224:34" pos:end="224:69">(<argument pos:start="224:35" pos:end="224:39"><expr pos:start="224:35" pos:end="224:39"><operator pos:start="224:35" pos:end="224:35">&amp;</operator><name pos:start="224:36" pos:end="224:39">dict</name></expr></argument>, <argument pos:start="224:42" pos:end="224:55"><expr pos:start="224:42" pos:end="224:55"><name pos:start="224:42" pos:end="224:55"><name pos:start="224:42" pos:end="224:44">ctx</name><operator pos:start="224:45" pos:end="224:46">-&gt;</operator><name pos:start="224:47" pos:end="224:55">x265_opts</name></name></expr></argument>, <argument pos:start="224:58" pos:end="224:60"><expr pos:start="224:58" pos:end="224:60"><literal type="string" pos:start="224:58" pos:end="224:60">"="</literal></expr></argument>, <argument pos:start="224:63" pos:end="224:65"><expr pos:start="224:63" pos:end="224:65"><literal type="string" pos:start="224:63" pos:end="224:65">":"</literal></expr></argument>, <argument pos:start="224:68" pos:end="224:68"><expr pos:start="224:68" pos:end="224:68"><literal type="number" pos:start="224:68" pos:end="224:68">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="224:72" pos:end="310:13">{<block_content pos:start="226:13" pos:end="310:13">

            <while pos:start="226:13" pos:end="310:13">while <condition pos:start="226:19" pos:end="226:75">(<expr pos:start="226:20" pos:end="226:74"><operator pos:start="226:20" pos:end="226:20">(</operator><name pos:start="226:21" pos:end="226:22">en</name> <operator pos:start="226:24" pos:end="226:24">=</operator> <call pos:start="226:26" pos:end="226:73"><name pos:start="226:26" pos:end="226:36">av_dict_get</name><argument_list pos:start="226:37" pos:end="226:73">(<argument pos:start="226:38" pos:end="226:41"><expr pos:start="226:38" pos:end="226:41"><name pos:start="226:38" pos:end="226:41">dict</name></expr></argument>, <argument pos:start="226:44" pos:end="226:45"><expr pos:start="226:44" pos:end="226:45"><literal type="string" pos:start="226:44" pos:end="226:45">""</literal></expr></argument>, <argument pos:start="226:48" pos:end="226:49"><expr pos:start="226:48" pos:end="226:49"><name pos:start="226:48" pos:end="226:49">en</name></expr></argument>, <argument pos:start="226:52" pos:end="226:72"><expr pos:start="226:52" pos:end="226:72"><name pos:start="226:52" pos:end="226:72">AV_DICT_IGNORE_SUFFIX</name></expr></argument>)</argument_list></call><operator pos:start="226:74" pos:end="226:74">)</operator></expr>)</condition> <block pos:start="226:77" pos:end="310:13">{<block_content pos:start="228:17" pos:end="310:13">

                <decl_stmt pos:start="228:17" pos:end="228:87"><decl pos:start="228:17" pos:end="228:86"><type pos:start="228:17" pos:end="228:19"><name pos:start="228:17" pos:end="228:19">int</name></type> <name pos:start="228:21" pos:end="228:29">parse_ret</name> <init pos:start="228:31" pos:end="228:86">= <expr pos:start="228:33" pos:end="228:86"><call pos:start="228:33" pos:end="228:86"><name pos:start="228:33" pos:end="228:53"><name pos:start="228:33" pos:end="228:35">ctx</name><operator pos:start="228:36" pos:end="228:37">-&gt;</operator><name pos:start="228:38" pos:end="228:40">api</name><operator pos:start="228:41" pos:end="228:42">-&gt;</operator><name pos:start="228:43" pos:end="228:53">param_parse</name></name><argument_list pos:start="228:54" pos:end="228:86">(<argument pos:start="228:55" pos:end="228:65"><expr pos:start="228:55" pos:end="228:65"><name pos:start="228:55" pos:end="228:65"><name pos:start="228:55" pos:end="228:57">ctx</name><operator pos:start="228:58" pos:end="228:59">-&gt;</operator><name pos:start="228:60" pos:end="228:65">params</name></name></expr></argument>, <argument pos:start="228:68" pos:end="228:74"><expr pos:start="228:68" pos:end="228:74"><name pos:start="228:68" pos:end="228:74"><name pos:start="228:68" pos:end="228:69">en</name><operator pos:start="228:70" pos:end="228:71">-&gt;</operator><name pos:start="228:72" pos:end="228:74">key</name></name></expr></argument>, <argument pos:start="228:77" pos:end="228:85"><expr pos:start="228:77" pos:end="228:85"><name pos:start="228:77" pos:end="228:85"><name pos:start="228:77" pos:end="228:78">en</name><operator pos:start="228:79" pos:end="228:80">-&gt;</operator><name pos:start="228:81" pos:end="228:85">value</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <switch pos:start="232:17" pos:end="310:13">switch <condition pos:start="232:24" pos:end="232:34">(<expr pos:start="232:25" pos:end="232:33"><name pos:start="232:25" pos:end="232:33">parse_ret</name></expr>)</condition> <block pos:start="232:36" pos:end="310:13">{<block_content pos:start="234:17" pos:end="310:13">

                <case pos:start="234:17" pos:end="234:41">case <expr pos:start="234:22" pos:end="234:40"><name pos:start="234:22" pos:end="234:40">X265_PARAM_BAD_NAME</name></expr>:</case>

                    <expr_stmt pos:start="236:21" pos:end="238:60"><expr pos:start="236:21" pos:end="238:59"><call pos:start="236:21" pos:end="238:59"><name pos:start="236:21" pos:end="236:26">av_log</name><argument_list pos:start="236:27" pos:end="238:59">(<argument pos:start="236:28" pos:end="236:32"><expr pos:start="236:28" pos:end="236:32"><name pos:start="236:28" pos:end="236:32">avctx</name></expr></argument>, <argument pos:start="236:35" pos:end="236:48"><expr pos:start="236:35" pos:end="236:48"><name pos:start="236:35" pos:end="236:48">AV_LOG_WARNING</name></expr></argument>,

                          <argument pos:start="238:27" pos:end="238:49"><expr pos:start="238:27" pos:end="238:49"><literal type="string" pos:start="238:27" pos:end="238:49">"Unknown option: %s.\n"</literal></expr></argument>, <argument pos:start="238:52" pos:end="238:58"><expr pos:start="238:52" pos:end="238:58"><name pos:start="238:52" pos:end="238:58"><name pos:start="238:52" pos:end="238:53">en</name><operator pos:start="238:54" pos:end="238:55">-&gt;</operator><name pos:start="238:56" pos:end="238:58">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


                <case pos:start="241:17" pos:end="241:42">case <expr pos:start="241:22" pos:end="241:41"><name pos:start="241:22" pos:end="241:41">X265_PARAM_BAD_VALUE</name></expr>:</case>

                    <expr_stmt pos:start="243:21" pos:end="245:77"><expr pos:start="243:21" pos:end="245:76"><call pos:start="243:21" pos:end="245:76"><name pos:start="243:21" pos:end="243:26">av_log</name><argument_list pos:start="243:27" pos:end="245:76">(<argument pos:start="243:28" pos:end="243:32"><expr pos:start="243:28" pos:end="243:32"><name pos:start="243:28" pos:end="243:32">avctx</name></expr></argument>, <argument pos:start="243:35" pos:end="243:48"><expr pos:start="243:35" pos:end="243:48"><name pos:start="243:35" pos:end="243:48">AV_LOG_WARNING</name></expr></argument>,

                          <argument pos:start="245:27" pos:end="245:55"><expr pos:start="245:27" pos:end="245:55"><literal type="string" pos:start="245:27" pos:end="245:55">"Invalid value for %s: %s.\n"</literal></expr></argument>, <argument pos:start="245:58" pos:end="245:64"><expr pos:start="245:58" pos:end="245:64"><name pos:start="245:58" pos:end="245:64"><name pos:start="245:58" pos:end="245:59">en</name><operator pos:start="245:60" pos:end="245:61">-&gt;</operator><name pos:start="245:62" pos:end="245:64">key</name></name></expr></argument>, <argument pos:start="245:67" pos:end="245:75"><expr pos:start="245:67" pos:end="245:75"><name pos:start="245:67" pos:end="245:75"><name pos:start="245:67" pos:end="245:68">en</name><operator pos:start="245:69" pos:end="245:70">-&gt;</operator><name pos:start="245:71" pos:end="245:75">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


                <default pos:start="248:17" pos:end="248:24">default:</default>




            <expr_stmt pos:start="253:13" pos:end="253:32"><expr pos:start="253:13" pos:end="253:31"><call pos:start="253:13" pos:end="253:31"><name pos:start="253:13" pos:end="253:24">av_dict_free</name><argument_list pos:start="253:25" pos:end="253:31">(<argument pos:start="253:26" pos:end="253:30"><expr pos:start="253:26" pos:end="253:30"><operator pos:start="253:26" pos:end="253:26">&amp;</operator><name pos:start="253:27" pos:end="253:30">dict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="259:5" pos:end="259:55"><expr pos:start="259:5" pos:end="259:54"><name pos:start="259:5" pos:end="259:16"><name pos:start="259:5" pos:end="259:7">ctx</name><operator pos:start="259:8" pos:end="259:9">-&gt;</operator><name pos:start="259:10" pos:end="259:16">encoder</name></name> <operator pos:start="259:18" pos:end="259:18">=</operator> <call pos:start="259:20" pos:end="259:54"><name pos:start="259:20" pos:end="259:41"><name pos:start="259:20" pos:end="259:22">ctx</name><operator pos:start="259:23" pos:end="259:24">-&gt;</operator><name pos:start="259:25" pos:end="259:27">api</name><operator pos:start="259:28" pos:end="259:29">-&gt;</operator><name pos:start="259:30" pos:end="259:41">encoder_open</name></name><argument_list pos:start="259:42" pos:end="259:54">(<argument pos:start="259:43" pos:end="259:53"><expr pos:start="259:43" pos:end="259:53"><name pos:start="259:43" pos:end="259:53"><name pos:start="259:43" pos:end="259:45">ctx</name><operator pos:start="259:46" pos:end="259:47">-&gt;</operator><name pos:start="259:48" pos:end="259:53">params</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="261:5" pos:end="310:13"><if pos:start="261:5" pos:end="310:13">if <condition pos:start="261:8" pos:end="261:22">(<expr pos:start="261:9" pos:end="261:21"><operator pos:start="261:9" pos:end="261:9">!</operator><name pos:start="261:10" pos:end="261:21"><name pos:start="261:10" pos:end="261:12">ctx</name><operator pos:start="261:13" pos:end="261:14">-&gt;</operator><name pos:start="261:15" pos:end="261:21">encoder</name></name></expr>)</condition> <block pos:start="261:24" pos:end="310:13">{<block_content pos:start="263:9" pos:end="310:13">

        <expr_stmt pos:start="263:9" pos:end="263:70"><expr pos:start="263:9" pos:end="263:69"><call pos:start="263:9" pos:end="263:69"><name pos:start="263:9" pos:end="263:14">av_log</name><argument_list pos:start="263:15" pos:end="263:69">(<argument pos:start="263:16" pos:end="263:20"><expr pos:start="263:16" pos:end="263:20"><name pos:start="263:16" pos:end="263:20">avctx</name></expr></argument>, <argument pos:start="263:23" pos:end="263:34"><expr pos:start="263:23" pos:end="263:34"><name pos:start="263:23" pos:end="263:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="263:37" pos:end="263:68"><expr pos:start="263:37" pos:end="263:68"><literal type="string" pos:start="263:37" pos:end="263:68">"Cannot open libx265 encoder.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="265:9" pos:end="265:36"><expr pos:start="265:9" pos:end="265:35"><call pos:start="265:9" pos:end="265:35"><name pos:start="265:9" pos:end="265:28">libx265_encode_close</name><argument_list pos:start="265:29" pos:end="265:35">(<argument pos:start="265:30" pos:end="265:34"><expr pos:start="265:30" pos:end="265:34"><name pos:start="265:30" pos:end="265:34">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <if_stmt pos:start="271:5" pos:end="310:13"><if pos:start="271:5" pos:end="310:13">if <condition pos:start="271:8" pos:end="271:51">(<expr pos:start="271:9" pos:end="271:50"><name pos:start="271:9" pos:end="271:20"><name pos:start="271:9" pos:end="271:13">avctx</name><operator pos:start="271:14" pos:end="271:15">-&gt;</operator><name pos:start="271:16" pos:end="271:20">flags</name></name> <operator pos:start="271:22" pos:end="271:22">&amp;</operator> <name pos:start="271:24" pos:end="271:50">AV_CODEC_FLAG_GLOBAL_HEADER</name></expr>)</condition> <block pos:start="271:53" pos:end="310:13">{<block_content pos:start="273:9" pos:end="310:13">

        <decl_stmt pos:start="273:9" pos:end="273:22"><decl pos:start="273:9" pos:end="273:21"><type pos:start="273:9" pos:end="273:18"><name pos:start="273:9" pos:end="273:16">x265_nal</name> <modifier pos:start="273:18" pos:end="273:18">*</modifier></type><name pos:start="273:19" pos:end="273:21">nal</name></decl>;</decl_stmt>

        <decl_stmt pos:start="275:9" pos:end="275:17"><decl pos:start="275:9" pos:end="275:16"><type pos:start="275:9" pos:end="275:11"><name pos:start="275:9" pos:end="275:11">int</name></type> <name pos:start="275:13" pos:end="275:16">nnal</name></decl>;</decl_stmt>



        <expr_stmt pos:start="279:9" pos:end="279:85"><expr pos:start="279:9" pos:end="279:84"><name pos:start="279:9" pos:end="279:29"><name pos:start="279:9" pos:end="279:13">avctx</name><operator pos:start="279:14" pos:end="279:15">-&gt;</operator><name pos:start="279:16" pos:end="279:29">extradata_size</name></name> <operator pos:start="279:31" pos:end="279:31">=</operator> <call pos:start="279:33" pos:end="279:84"><name pos:start="279:33" pos:end="279:57"><name pos:start="279:33" pos:end="279:35">ctx</name><operator pos:start="279:36" pos:end="279:37">-&gt;</operator><name pos:start="279:38" pos:end="279:40">api</name><operator pos:start="279:41" pos:end="279:42">-&gt;</operator><name pos:start="279:43" pos:end="279:57">encoder_headers</name></name><argument_list pos:start="279:58" pos:end="279:84">(<argument pos:start="279:59" pos:end="279:70"><expr pos:start="279:59" pos:end="279:70"><name pos:start="279:59" pos:end="279:70"><name pos:start="279:59" pos:end="279:61">ctx</name><operator pos:start="279:62" pos:end="279:63">-&gt;</operator><name pos:start="279:64" pos:end="279:70">encoder</name></name></expr></argument>, <argument pos:start="279:73" pos:end="279:76"><expr pos:start="279:73" pos:end="279:76"><operator pos:start="279:73" pos:end="279:73">&amp;</operator><name pos:start="279:74" pos:end="279:76">nal</name></expr></argument>, <argument pos:start="279:79" pos:end="279:83"><expr pos:start="279:79" pos:end="279:83"><operator pos:start="279:79" pos:end="279:79">&amp;</operator><name pos:start="279:80" pos:end="279:83">nnal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="281:9" pos:end="310:13"><if pos:start="281:9" pos:end="310:13">if <condition pos:start="281:12" pos:end="281:39">(<expr pos:start="281:13" pos:end="281:38"><name pos:start="281:13" pos:end="281:33"><name pos:start="281:13" pos:end="281:17">avctx</name><operator pos:start="281:18" pos:end="281:19">-&gt;</operator><name pos:start="281:20" pos:end="281:33">extradata_size</name></name> <operator pos:start="281:35" pos:end="281:36">&lt;=</operator> <literal type="number" pos:start="281:38" pos:end="281:38">0</literal></expr>)</condition> <block pos:start="281:41" pos:end="310:13">{<block_content pos:start="283:13" pos:end="310:13">

            <expr_stmt pos:start="283:13" pos:end="283:68"><expr pos:start="283:13" pos:end="283:67"><call pos:start="283:13" pos:end="283:67"><name pos:start="283:13" pos:end="283:18">av_log</name><argument_list pos:start="283:19" pos:end="283:67">(<argument pos:start="283:20" pos:end="283:24"><expr pos:start="283:20" pos:end="283:24"><name pos:start="283:20" pos:end="283:24">avctx</name></expr></argument>, <argument pos:start="283:27" pos:end="283:38"><expr pos:start="283:27" pos:end="283:38"><name pos:start="283:27" pos:end="283:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="283:41" pos:end="283:66"><expr pos:start="283:41" pos:end="283:66"><literal type="string" pos:start="283:41" pos:end="283:66">"Cannot encode headers.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="285:13" pos:end="285:40"><expr pos:start="285:13" pos:end="285:39"><call pos:start="285:13" pos:end="285:39"><name pos:start="285:13" pos:end="285:32">libx265_encode_close</name><argument_list pos:start="285:33" pos:end="285:39">(<argument pos:start="285:34" pos:end="285:38"><expr pos:start="285:34" pos:end="285:38"><name pos:start="285:34" pos:end="285:38">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





        <expr_stmt pos:start="291:9" pos:end="291:91"><expr pos:start="291:9" pos:end="291:90"><name pos:start="291:9" pos:end="291:24"><name pos:start="291:9" pos:end="291:13">avctx</name><operator pos:start="291:14" pos:end="291:15">-&gt;</operator><name pos:start="291:16" pos:end="291:24">extradata</name></name> <operator pos:start="291:26" pos:end="291:26">=</operator> <call pos:start="291:28" pos:end="291:90"><name pos:start="291:28" pos:end="291:36">av_malloc</name><argument_list pos:start="291:37" pos:end="291:90">(<argument pos:start="291:38" pos:end="291:89"><expr pos:start="291:38" pos:end="291:89"><name pos:start="291:38" pos:end="291:58"><name pos:start="291:38" pos:end="291:42">avctx</name><operator pos:start="291:43" pos:end="291:44">-&gt;</operator><name pos:start="291:45" pos:end="291:58">extradata_size</name></name> <operator pos:start="291:60" pos:end="291:60">+</operator> <name pos:start="291:62" pos:end="291:89">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="293:9" pos:end="296:87"><if pos:start="293:9" pos:end="296:87">if <condition pos:start="293:12" pos:end="293:30">(<expr pos:start="293:13" pos:end="293:29"><operator pos:start="293:13" pos:end="293:13">!</operator><name pos:start="293:14" pos:end="293:29"><name pos:start="293:14" pos:end="293:18">avctx</name><operator pos:start="293:19" pos:end="293:20">-&gt;</operator><name pos:start="293:21" pos:end="293:29">extradata</name></name></expr>)</condition> <block pos:start="293:32" pos:end="296:86">{<block_content pos:start="296:20" pos:end="296:86">


                   <expr_stmt pos:start="296:20" pos:end="296:85"><expr pos:start="296:20" pos:end="296:62"><literal type="string" pos:start="296:20" pos:end="296:62">"Cannot allocate HEVC header of size %d.\n"</literal></expr><operator pos:start="296:63" pos:end="296:63">,</operator> <expr pos:start="296:65" pos:end="296:85"><name pos:start="296:65" pos:end="296:85"><name pos:start="296:65" pos:end="296:69">avctx</name><operator pos:start="296:70" pos:end="296:71">-&gt;</operator><name pos:start="296:72" pos:end="296:85">extradata_size</name></name></expr></expr_stmt>)</block_content></block><empty_stmt pos:start="296:87" pos:end="296:87">;</empty_stmt></if></if_stmt>

            <expr_stmt pos:start="298:13" pos:end="298:40"><expr pos:start="298:13" pos:end="298:39"><call pos:start="298:13" pos:end="298:39"><name pos:start="298:13" pos:end="298:32">libx265_encode_close</name><argument_list pos:start="298:33" pos:end="298:39">(<argument pos:start="298:34" pos:end="298:38"><expr pos:start="298:34" pos:end="298:38"><name pos:start="298:34" pos:end="298:38">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="300:13" pos:end="300:35">return <expr pos:start="300:20" pos:end="300:34"><call pos:start="300:20" pos:end="300:34"><name pos:start="300:20" pos:end="300:26">AVERROR</name><argument_list pos:start="300:27" pos:end="300:34">(<argument pos:start="300:28" pos:end="300:33"><expr pos:start="300:28" pos:end="300:33"><name pos:start="300:28" pos:end="300:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>




        <expr_stmt pos:start="305:9" pos:end="305:72"><expr pos:start="305:9" pos:end="305:71"><call pos:start="305:9" pos:end="305:71"><name pos:start="305:9" pos:end="305:14">memcpy</name><argument_list pos:start="305:15" pos:end="305:71">(<argument pos:start="305:16" pos:end="305:31"><expr pos:start="305:16" pos:end="305:31"><name pos:start="305:16" pos:end="305:31"><name pos:start="305:16" pos:end="305:20">avctx</name><operator pos:start="305:21" pos:end="305:22">-&gt;</operator><name pos:start="305:23" pos:end="305:31">extradata</name></name></expr></argument>, <argument pos:start="305:34" pos:end="305:47"><expr pos:start="305:34" pos:end="305:47"><name pos:start="305:34" pos:end="305:39"><name pos:start="305:34" pos:end="305:36">nal</name><index pos:start="305:37" pos:end="305:39">[<expr pos:start="305:38" pos:end="305:38"><literal type="number" pos:start="305:38" pos:end="305:38">0</literal></expr>]</index></name><operator pos:start="305:40" pos:end="305:40">.</operator><name pos:start="305:41" pos:end="305:47">payload</name></expr></argument>, <argument pos:start="305:50" pos:end="305:70"><expr pos:start="305:50" pos:end="305:70"><name pos:start="305:50" pos:end="305:70"><name pos:start="305:50" pos:end="305:54">avctx</name><operator pos:start="305:55" pos:end="305:56">-&gt;</operator><name pos:start="305:57" pos:end="305:70">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <return pos:start="310:5" pos:end="310:13">return <expr pos:start="310:12" pos:end="310:12"><literal type="number" pos:start="310:12" pos:end="310:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></while></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
