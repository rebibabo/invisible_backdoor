<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5144.c" pos:tabs="8"><function pos:start="1:1" pos:end="183:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">gif_read_image</name><parameter_list pos:start="1:26" pos:end="1:38">(<parameter pos:start="1:27" pos:end="1:37"><decl pos:start="1:27" pos:end="1:37"><type pos:start="1:27" pos:end="1:36"><name pos:start="1:27" pos:end="1:34">GifState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="183:1">{<block_content pos:start="5:5" pos:end="181:13">

    <decl_stmt pos:start="5:5" pos:end="5:67"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">left</name></decl>, <decl pos:start="5:15" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:17">top</name></decl>, <decl pos:start="5:20" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:24">width</name></decl>, <decl pos:start="5:27" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:27" pos:end="5:32">height</name></decl>, <decl pos:start="5:35" pos:end="5:48"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:35" pos:end="5:48">bits_per_pixel</name></decl>, <decl pos:start="5:51" pos:end="5:59"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:51" pos:end="5:59">code_size</name></decl>, <decl pos:start="5:62" pos:end="5:66"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:62" pos:end="5:66">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:71"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:22">is_interleaved</name></decl>, <decl pos:start="7:25" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:41">has_local_palette</name></decl>, <decl pos:start="7:44" pos:end="7:44"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:44" pos:end="7:44">y</name></decl>, <decl pos:start="7:47" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:47" pos:end="7:50">pass</name></decl>, <decl pos:start="7:53" pos:end="7:54"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:53" pos:end="7:54">y1</name></decl>, <decl pos:start="7:57" pos:end="7:64"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:57" pos:end="7:64">linesize</name></decl>, <decl pos:start="7:67" pos:end="7:67"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:67" pos:end="7:67">n</name></decl>, <decl pos:start="7:70" pos:end="7:70"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:70" pos:end="7:70">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">ptr</name></decl>, <decl pos:start="9:19" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:23">spal</name></decl>, <decl pos:start="9:26" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:33">palette</name></decl>, <decl pos:start="9:36" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:36" pos:end="9:36">*</modifier></type><name pos:start="9:37" pos:end="9:40">ptr1</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:47"><expr pos:start="13:5" pos:end="13:46"><name pos:start="13:5" pos:end="13:8">left</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:46"><name pos:start="13:12" pos:end="13:30">bytestream_get_le16</name><argument_list pos:start="13:31" pos:end="13:46">(<argument pos:start="13:32" pos:end="13:45"><expr pos:start="13:32" pos:end="13:45"><operator pos:start="13:32" pos:end="13:32">&amp;</operator><name pos:start="13:33" pos:end="13:45"><name pos:start="13:33" pos:end="13:33">s</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:45">bytestream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:46"><expr pos:start="15:5" pos:end="15:45"><name pos:start="15:5" pos:end="15:7">top</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:45"><name pos:start="15:11" pos:end="15:29">bytestream_get_le16</name><argument_list pos:start="15:30" pos:end="15:45">(<argument pos:start="15:31" pos:end="15:44"><expr pos:start="15:31" pos:end="15:44"><operator pos:start="15:31" pos:end="15:31">&amp;</operator><name pos:start="15:32" pos:end="15:44"><name pos:start="15:32" pos:end="15:32">s</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:44">bytestream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:48"><expr pos:start="17:5" pos:end="17:47"><name pos:start="17:5" pos:end="17:9">width</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <call pos:start="17:13" pos:end="17:47"><name pos:start="17:13" pos:end="17:31">bytestream_get_le16</name><argument_list pos:start="17:32" pos:end="17:47">(<argument pos:start="17:33" pos:end="17:46"><expr pos:start="17:33" pos:end="17:46"><operator pos:start="17:33" pos:end="17:33">&amp;</operator><name pos:start="17:34" pos:end="17:46"><name pos:start="17:34" pos:end="17:34">s</name><operator pos:start="17:35" pos:end="17:36">-&gt;</operator><name pos:start="17:37" pos:end="17:46">bytestream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:49"><expr pos:start="19:5" pos:end="19:48"><name pos:start="19:5" pos:end="19:10">height</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <call pos:start="19:14" pos:end="19:48"><name pos:start="19:14" pos:end="19:32">bytestream_get_le16</name><argument_list pos:start="19:33" pos:end="19:48">(<argument pos:start="19:34" pos:end="19:47"><expr pos:start="19:34" pos:end="19:47"><operator pos:start="19:34" pos:end="19:34">&amp;</operator><name pos:start="19:35" pos:end="19:47"><name pos:start="19:35" pos:end="19:35">s</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:47">bytestream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:48"><expr pos:start="21:5" pos:end="21:47"><name pos:start="21:5" pos:end="21:9">flags</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:47"><name pos:start="21:13" pos:end="21:31">bytestream_get_byte</name><argument_list pos:start="21:32" pos:end="21:47">(<argument pos:start="21:33" pos:end="21:46"><expr pos:start="21:33" pos:end="21:46"><operator pos:start="21:33" pos:end="21:33">&amp;</operator><name pos:start="21:34" pos:end="21:46"><name pos:start="21:34" pos:end="21:34">s</name><operator pos:start="21:35" pos:end="21:36">-&gt;</operator><name pos:start="21:37" pos:end="21:46">bytestream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:18">is_interleaved</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:26">flags</name> <operator pos:start="23:28" pos:end="23:28">&amp;</operator> <literal type="number" pos:start="23:30" pos:end="23:33">0x40</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:21">has_local_palette</name> <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:29">flags</name> <operator pos:start="25:31" pos:end="25:31">&amp;</operator> <literal type="number" pos:start="25:33" pos:end="25:36">0x80</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:40"><expr pos:start="27:5" pos:end="27:39"><name pos:start="27:5" pos:end="27:18">bits_per_pixel</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <operator pos:start="27:22" pos:end="27:22">(</operator><name pos:start="27:23" pos:end="27:27">flags</name> <operator pos:start="27:29" pos:end="27:29">&amp;</operator> <literal type="number" pos:start="27:31" pos:end="27:34">0x07</literal><operator pos:start="27:35" pos:end="27:35">)</operator> <operator pos:start="27:37" pos:end="27:37">+</operator> <literal type="number" pos:start="27:39" pos:end="27:39">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:84"><expr pos:start="31:5" pos:end="31:83"><call pos:start="31:5" pos:end="31:83"><name pos:start="31:5" pos:end="31:11">av_dlog</name><argument_list pos:start="31:12" pos:end="31:83">(<argument pos:start="31:13" pos:end="31:20"><expr pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:20">avctx</name></name></expr></argument>, <argument pos:start="31:23" pos:end="31:56"><expr pos:start="31:23" pos:end="31:56"><literal type="string" pos:start="31:23" pos:end="31:56">"gif: image x=%d y=%d w=%d h=%d\n"</literal></expr></argument>, <argument pos:start="31:59" pos:end="31:62"><expr pos:start="31:59" pos:end="31:62"><name pos:start="31:59" pos:end="31:62">left</name></expr></argument>, <argument pos:start="31:65" pos:end="31:67"><expr pos:start="31:65" pos:end="31:67"><name pos:start="31:65" pos:end="31:67">top</name></expr></argument>, <argument pos:start="31:70" pos:end="31:74"><expr pos:start="31:70" pos:end="31:74"><name pos:start="31:70" pos:end="31:74">width</name></expr></argument>, <argument pos:start="31:77" pos:end="31:82"><expr pos:start="31:77" pos:end="31:82"><name pos:start="31:77" pos:end="31:82">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="47:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:26">(<expr pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:25">has_local_palette</name></expr>)</condition> <block pos:start="35:28" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:35">

        <expr_stmt pos:start="37:9" pos:end="37:91"><expr pos:start="37:9" pos:end="37:90"><call pos:start="37:9" pos:end="37:90"><name pos:start="37:9" pos:end="37:29">bytestream_get_buffer</name><argument_list pos:start="37:30" pos:end="37:90">(<argument pos:start="37:31" pos:end="37:44"><expr pos:start="37:31" pos:end="37:44"><operator pos:start="37:31" pos:end="37:31">&amp;</operator><name pos:start="37:32" pos:end="37:44"><name pos:start="37:32" pos:end="37:32">s</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:44">bytestream</name></name></expr></argument>, <argument pos:start="37:47" pos:end="37:62"><expr pos:start="37:47" pos:end="37:62"><name pos:start="37:47" pos:end="37:62"><name pos:start="37:47" pos:end="37:47">s</name><operator pos:start="37:48" pos:end="37:49">-&gt;</operator><name pos:start="37:50" pos:end="37:62">local_palette</name></name></expr></argument>, <argument pos:start="37:65" pos:end="37:89"><expr pos:start="37:65" pos:end="37:89"><literal type="number" pos:start="37:65" pos:end="37:65">3</literal> <operator pos:start="37:67" pos:end="37:67">*</operator> <operator pos:start="37:69" pos:end="37:69">(</operator><literal type="number" pos:start="37:70" pos:end="37:70">1</literal> <operator pos:start="37:72" pos:end="37:73">&lt;&lt;</operator> <name pos:start="37:75" pos:end="37:88">bits_per_pixel</name><operator pos:start="37:89" pos:end="37:89">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:35"><expr pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:15">palette</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:34"><name pos:start="39:19" pos:end="39:19">s</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:34">local_palette</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="47:5">else <block pos:start="41:12" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:43">

        <expr_stmt pos:start="43:9" pos:end="43:36"><expr pos:start="43:9" pos:end="43:35"><name pos:start="43:9" pos:end="43:15">palette</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:35"><name pos:start="43:19" pos:end="43:19">s</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:35">global_palette</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:43"><expr pos:start="45:9" pos:end="45:42"><name pos:start="45:9" pos:end="45:22">bits_per_pixel</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:42"><name pos:start="45:26" pos:end="45:26">s</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:42">bits_per_pixel</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:67">/* verify that all the image is inside the screen dimensions */</comment>

    <if_stmt pos:start="53:5" pos:end="57:31"><if pos:start="53:5" pos:end="57:31">if <condition pos:start="53:8" pos:end="55:40">(<expr pos:start="53:9" pos:end="55:39"><name pos:start="53:9" pos:end="53:12">left</name> <operator pos:start="53:14" pos:end="53:14">+</operator> <name pos:start="53:16" pos:end="53:20">width</name> <operator pos:start="53:22" pos:end="53:22">&gt;</operator> <name pos:start="53:24" pos:end="53:38"><name pos:start="53:24" pos:end="53:24">s</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:38">screen_width</name></name> <operator pos:start="53:40" pos:end="53:41">||</operator>

        <name pos:start="55:9" pos:end="55:11">top</name> <operator pos:start="55:13" pos:end="55:13">+</operator> <name pos:start="55:15" pos:end="55:20">height</name> <operator pos:start="55:22" pos:end="55:22">&gt;</operator> <name pos:start="55:24" pos:end="55:39"><name pos:start="55:24" pos:end="55:24">s</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:39">screen_height</name></name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:31"><block_content pos:start="57:9" pos:end="57:31">

        <return pos:start="57:9" pos:end="57:31">return <expr pos:start="57:16" pos:end="57:30"><call pos:start="57:16" pos:end="57:30"><name pos:start="57:16" pos:end="57:22">AVERROR</name><argument_list pos:start="57:23" pos:end="57:30">(<argument pos:start="57:24" pos:end="57:29"><expr pos:start="57:24" pos:end="57:29"><name pos:start="57:24" pos:end="57:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:27">/* build the palette */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:30"><expr pos:start="63:5" pos:end="63:29"><name pos:start="63:5" pos:end="63:5">n</name> <operator pos:start="63:7" pos:end="63:7">=</operator> <operator pos:start="63:9" pos:end="63:9">(</operator><literal type="number" pos:start="63:10" pos:end="63:10">1</literal> <operator pos:start="63:12" pos:end="63:13">&lt;&lt;</operator> <name pos:start="63:15" pos:end="63:28">bits_per_pixel</name><operator pos:start="63:29" pos:end="63:29">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:19"><expr pos:start="65:5" pos:end="65:18"><name pos:start="65:5" pos:end="65:8">spal</name> <operator pos:start="65:10" pos:end="65:10">=</operator> <name pos:start="65:12" pos:end="65:18">palette</name></expr>;</expr_stmt>

    <for pos:start="67:5" pos:end="73:5">for<control pos:start="67:8" pos:end="67:26">(<init pos:start="67:9" pos:end="67:14"><expr pos:start="67:9" pos:end="67:13"><name pos:start="67:9" pos:end="67:9">i</name> <operator pos:start="67:11" pos:end="67:11">=</operator> <literal type="number" pos:start="67:13" pos:end="67:13">0</literal></expr>;</init> <condition pos:start="67:16" pos:end="67:21"><expr pos:start="67:16" pos:end="67:20"><name pos:start="67:16" pos:end="67:16">i</name> <operator pos:start="67:18" pos:end="67:18">&lt;</operator> <name pos:start="67:20" pos:end="67:20">n</name></expr>;</condition> <incr pos:start="67:23" pos:end="67:25"><expr pos:start="67:23" pos:end="67:25"><name pos:start="67:23" pos:end="67:23">i</name><operator pos:start="67:24" pos:end="67:25">++</operator></expr></incr>)</control> <block pos:start="67:28" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:18">

        <expr_stmt pos:start="69:9" pos:end="69:59"><expr pos:start="69:9" pos:end="69:58"><name pos:start="69:9" pos:end="69:27"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:24">image_palette</name><index pos:start="69:25" pos:end="69:27">[<expr pos:start="69:26" pos:end="69:26"><name pos:start="69:26" pos:end="69:26">i</name></expr>]</index></name> <operator pos:start="69:29" pos:end="69:29">=</operator> <operator pos:start="69:31" pos:end="69:31">(</operator><literal type="number" pos:start="69:32" pos:end="69:35">0xff</literal> <operator pos:start="69:37" pos:end="69:38">&lt;&lt;</operator> <literal type="number" pos:start="69:40" pos:end="69:41">24</literal><operator pos:start="69:42" pos:end="69:42">)</operator> <operator pos:start="69:44" pos:end="69:44">|</operator> <call pos:start="69:46" pos:end="69:58"><name pos:start="69:46" pos:end="69:52">AV_RB24</name><argument_list pos:start="69:53" pos:end="69:58">(<argument pos:start="69:54" pos:end="69:57"><expr pos:start="69:54" pos:end="69:57"><name pos:start="69:54" pos:end="69:57">spal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:18"><expr pos:start="71:9" pos:end="71:17"><name pos:start="71:9" pos:end="71:12">spal</name> <operator pos:start="71:14" pos:end="71:15">+=</operator> <literal type="number" pos:start="71:17" pos:end="71:17">3</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="75:5" pos:end="77:43">for<control pos:start="75:8" pos:end="75:23">(<init pos:start="75:9" pos:end="75:9">;</init> <condition pos:start="75:11" pos:end="75:18"><expr pos:start="75:11" pos:end="75:17"><name pos:start="75:11" pos:end="75:11">i</name> <operator pos:start="75:13" pos:end="75:13">&lt;</operator> <literal type="number" pos:start="75:15" pos:end="75:17">256</literal></expr>;</condition> <incr pos:start="75:20" pos:end="75:22"><expr pos:start="75:20" pos:end="75:22"><name pos:start="75:20" pos:end="75:20">i</name><operator pos:start="75:21" pos:end="75:22">++</operator></expr></incr>)</control><block type="pseudo" pos:start="77:9" pos:end="77:43"><block_content pos:start="77:9" pos:end="77:43">

        <expr_stmt pos:start="77:9" pos:end="77:43"><expr pos:start="77:9" pos:end="77:42"><name pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:24">image_palette</name><index pos:start="77:25" pos:end="77:27">[<expr pos:start="77:26" pos:end="77:26"><name pos:start="77:26" pos:end="77:26">i</name></expr>]</index></name> <operator pos:start="77:29" pos:end="77:29">=</operator> <operator pos:start="77:31" pos:end="77:31">(</operator><literal type="number" pos:start="77:32" pos:end="77:35">0xff</literal> <operator pos:start="77:37" pos:end="77:38">&lt;&lt;</operator> <literal type="number" pos:start="77:40" pos:end="77:41">24</literal><operator pos:start="77:42" pos:end="77:42">)</operator></expr>;</expr_stmt></block_content></block></for>

    <comment type="block" pos:start="79:5" pos:end="79:29">/* handle transparency */</comment>

    <if_stmt pos:start="81:5" pos:end="83:57"><if pos:start="81:5" pos:end="83:57">if <condition pos:start="81:8" pos:end="81:40">(<expr pos:start="81:9" pos:end="81:39"><name pos:start="81:9" pos:end="81:34"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:34">transparent_color_index</name></name> <operator pos:start="81:36" pos:end="81:37">&gt;=</operator> <literal type="number" pos:start="81:39" pos:end="81:39">0</literal></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:57"><block_content pos:start="83:9" pos:end="83:57">

        <expr_stmt pos:start="83:9" pos:end="83:57"><expr pos:start="83:9" pos:end="83:56"><name pos:start="83:9" pos:end="83:52"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:24">image_palette</name><index pos:start="83:25" pos:end="83:52">[<expr pos:start="83:26" pos:end="83:51"><name pos:start="83:26" pos:end="83:51"><name pos:start="83:26" pos:end="83:26">s</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:51">transparent_color_index</name></name></expr>]</index></name> <operator pos:start="83:54" pos:end="83:54">=</operator> <literal type="number" pos:start="83:56" pos:end="83:56">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="87:5" pos:end="87:32">/* now get the image data */</comment>

    <expr_stmt pos:start="89:5" pos:end="89:52"><expr pos:start="89:5" pos:end="89:51"><name pos:start="89:5" pos:end="89:13">code_size</name> <operator pos:start="89:15" pos:end="89:15">=</operator> <call pos:start="89:17" pos:end="89:51"><name pos:start="89:17" pos:end="89:35">bytestream_get_byte</name><argument_list pos:start="89:36" pos:end="89:51">(<argument pos:start="89:37" pos:end="89:50"><expr pos:start="89:37" pos:end="89:50"><operator pos:start="89:37" pos:end="89:37">&amp;</operator><name pos:start="89:38" pos:end="89:50"><name pos:start="89:38" pos:end="89:38">s</name><operator pos:start="89:39" pos:end="89:40">-&gt;</operator><name pos:start="89:41" pos:end="89:50">bytestream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="93:70"><expr pos:start="91:5" pos:end="93:69"><call pos:start="91:5" pos:end="93:69"><name pos:start="91:5" pos:end="91:22">ff_lzw_decode_init</name><argument_list pos:start="91:23" pos:end="93:69">(<argument pos:start="91:24" pos:end="91:29"><expr pos:start="91:24" pos:end="91:29"><name pos:start="91:24" pos:end="91:29"><name pos:start="91:24" pos:end="91:24">s</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:29">lzw</name></name></expr></argument>, <argument pos:start="91:32" pos:end="91:40"><expr pos:start="91:32" pos:end="91:40"><name pos:start="91:32" pos:end="91:40">code_size</name></expr></argument>, <argument pos:start="91:43" pos:end="91:55"><expr pos:start="91:43" pos:end="91:55"><name pos:start="91:43" pos:end="91:55"><name pos:start="91:43" pos:end="91:43">s</name><operator pos:start="91:44" pos:end="91:45">-&gt;</operator><name pos:start="91:46" pos:end="91:55">bytestream</name></name></expr></argument>,

                       <argument pos:start="93:24" pos:end="93:56"><expr pos:start="93:24" pos:end="93:56"><name pos:start="93:24" pos:end="93:40"><name pos:start="93:24" pos:end="93:24">s</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:40">bytestream_end</name></name> <operator pos:start="93:42" pos:end="93:42">-</operator> <name pos:start="93:44" pos:end="93:56"><name pos:start="93:44" pos:end="93:44">s</name><operator pos:start="93:45" pos:end="93:46">-&gt;</operator><name pos:start="93:47" pos:end="93:56">bytestream</name></name></expr></argument>, <argument pos:start="93:59" pos:end="93:68"><expr pos:start="93:59" pos:end="93:68"><name pos:start="93:59" pos:end="93:68">FF_LZW_GIF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:28">/* read all the image */</comment>

    <expr_stmt pos:start="99:5" pos:end="99:38"><expr pos:start="99:5" pos:end="99:37"><name pos:start="99:5" pos:end="99:12">linesize</name> <operator pos:start="99:14" pos:end="99:14">=</operator> <name pos:start="99:16" pos:end="99:37"><name pos:start="99:16" pos:end="99:16">s</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:25">picture</name><operator pos:start="99:26" pos:end="99:26">.</operator><name pos:start="99:27" pos:end="99:34">linesize</name><index pos:start="99:35" pos:end="99:37">[<expr pos:start="99:36" pos:end="99:36"><literal type="number" pos:start="99:36" pos:end="99:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:54"><expr pos:start="101:5" pos:end="101:53"><name pos:start="101:5" pos:end="101:8">ptr1</name> <operator pos:start="101:10" pos:end="101:10">=</operator> <name pos:start="101:12" pos:end="101:29"><name pos:start="101:12" pos:end="101:12">s</name><operator pos:start="101:13" pos:end="101:14">-&gt;</operator><name pos:start="101:15" pos:end="101:21">picture</name><operator pos:start="101:22" pos:end="101:22">.</operator><name pos:start="101:23" pos:end="101:26">data</name><index pos:start="101:27" pos:end="101:29">[<expr pos:start="101:28" pos:end="101:28"><literal type="number" pos:start="101:28" pos:end="101:28">0</literal></expr>]</index></name> <operator pos:start="101:31" pos:end="101:31">+</operator> <name pos:start="101:33" pos:end="101:35">top</name> <operator pos:start="101:37" pos:end="101:37">*</operator> <name pos:start="101:39" pos:end="101:46">linesize</name> <operator pos:start="101:48" pos:end="101:48">+</operator> <name pos:start="101:50" pos:end="101:53">left</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:15"><expr pos:start="103:5" pos:end="103:14"><name pos:start="103:5" pos:end="103:7">ptr</name> <operator pos:start="103:9" pos:end="103:9">=</operator> <name pos:start="103:11" pos:end="103:14">ptr1</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:13"><expr pos:start="105:5" pos:end="105:12"><name pos:start="105:5" pos:end="105:8">pass</name> <operator pos:start="105:10" pos:end="105:10">=</operator> <literal type="number" pos:start="105:12" pos:end="105:12">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:11"><expr pos:start="107:5" pos:end="107:10"><name pos:start="107:5" pos:end="107:6">y1</name> <operator pos:start="107:8" pos:end="107:8">=</operator> <literal type="number" pos:start="107:10" pos:end="107:10">0</literal></expr>;</expr_stmt>

    <for pos:start="109:5" pos:end="173:5">for <control pos:start="109:9" pos:end="109:32">(<init pos:start="109:10" pos:end="109:15"><expr pos:start="109:10" pos:end="109:14"><name pos:start="109:10" pos:end="109:10">y</name> <operator pos:start="109:12" pos:end="109:12">=</operator> <literal type="number" pos:start="109:14" pos:end="109:14">0</literal></expr>;</init> <condition pos:start="109:17" pos:end="109:27"><expr pos:start="109:17" pos:end="109:26"><name pos:start="109:17" pos:end="109:17">y</name> <operator pos:start="109:19" pos:end="109:19">&lt;</operator> <name pos:start="109:21" pos:end="109:26">height</name></expr>;</condition> <incr pos:start="109:29" pos:end="109:31"><expr pos:start="109:29" pos:end="109:31"><name pos:start="109:29" pos:end="109:29">y</name><operator pos:start="109:30" pos:end="109:31">++</operator></expr></incr>)</control> <block pos:start="109:34" pos:end="173:5">{<block_content pos:start="111:9" pos:end="171:9">

        <expr_stmt pos:start="111:9" pos:end="111:42"><expr pos:start="111:9" pos:end="111:41"><call pos:start="111:9" pos:end="111:41"><name pos:start="111:9" pos:end="111:21">ff_lzw_decode</name><argument_list pos:start="111:22" pos:end="111:41">(<argument pos:start="111:23" pos:end="111:28"><expr pos:start="111:23" pos:end="111:28"><name pos:start="111:23" pos:end="111:28"><name pos:start="111:23" pos:end="111:23">s</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:28">lzw</name></name></expr></argument>, <argument pos:start="111:31" pos:end="111:33"><expr pos:start="111:31" pos:end="111:33"><name pos:start="111:31" pos:end="111:33">ptr</name></expr></argument>, <argument pos:start="111:36" pos:end="111:40"><expr pos:start="111:36" pos:end="111:40"><name pos:start="111:36" pos:end="111:40">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="171:9"><if pos:start="113:9" pos:end="167:9">if <condition pos:start="113:12" pos:end="113:27">(<expr pos:start="113:13" pos:end="113:26"><name pos:start="113:13" pos:end="113:26">is_interleaved</name></expr>)</condition> <block pos:start="113:29" pos:end="167:9">{<block_content pos:start="115:13" pos:end="165:13">

            <switch pos:start="115:13" pos:end="165:13">switch<condition pos:start="115:19" pos:end="115:24">(<expr pos:start="115:20" pos:end="115:23"><name pos:start="115:20" pos:end="115:23">pass</name></expr>)</condition> <block pos:start="115:26" pos:end="165:13">{<block_content pos:start="117:13" pos:end="163:22">

            <default pos:start="117:13" pos:end="117:20">default:</default>

            <case pos:start="119:13" pos:end="119:19">case <expr pos:start="119:18" pos:end="119:18"><literal type="number" pos:start="119:18" pos:end="119:18">0</literal></expr>:</case>

            <case pos:start="121:13" pos:end="121:19">case <expr pos:start="121:18" pos:end="121:18"><literal type="number" pos:start="121:18" pos:end="121:18">1</literal></expr>:</case>

                <expr_stmt pos:start="123:17" pos:end="123:24"><expr pos:start="123:17" pos:end="123:23"><name pos:start="123:17" pos:end="123:18">y1</name> <operator pos:start="123:20" pos:end="123:21">+=</operator> <literal type="number" pos:start="123:23" pos:end="123:23">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:36"><expr pos:start="125:17" pos:end="125:35"><name pos:start="125:17" pos:end="125:19">ptr</name> <operator pos:start="125:21" pos:end="125:22">+=</operator> <name pos:start="125:24" pos:end="125:31">linesize</name> <operator pos:start="125:33" pos:end="125:33">*</operator> <literal type="number" pos:start="125:35" pos:end="125:35">8</literal></expr>;</expr_stmt>

                <if_stmt pos:start="127:17" pos:end="135:17"><if pos:start="127:17" pos:end="135:17">if <condition pos:start="127:20" pos:end="127:33">(<expr pos:start="127:21" pos:end="127:32"><name pos:start="127:21" pos:end="127:22">y1</name> <operator pos:start="127:24" pos:end="127:25">&gt;=</operator> <name pos:start="127:27" pos:end="127:32">height</name></expr>)</condition> <block pos:start="127:35" pos:end="135:17">{<block_content pos:start="129:21" pos:end="133:27">

                    <expr_stmt pos:start="129:21" pos:end="129:38"><expr pos:start="129:21" pos:end="129:37"><name pos:start="129:21" pos:end="129:22">y1</name> <operator pos:start="129:24" pos:end="129:24">=</operator> <ternary pos:start="129:26" pos:end="129:37"><condition pos:start="129:26" pos:end="129:31"><expr pos:start="129:26" pos:end="129:29"><name pos:start="129:26" pos:end="129:29">pass</name></expr> ?</condition><then pos:start="129:33" pos:end="129:33"> <expr pos:start="129:33" pos:end="129:33"><literal type="number" pos:start="129:33" pos:end="129:33">2</literal></expr> </then><else pos:start="129:35" pos:end="129:37">: <expr pos:start="129:37" pos:end="129:37"><literal type="number" pos:start="129:37" pos:end="129:37">4</literal></expr></else></ternary></expr>;</expr_stmt>

                    <expr_stmt pos:start="131:21" pos:end="131:47"><expr pos:start="131:21" pos:end="131:46"><name pos:start="131:21" pos:end="131:23">ptr</name> <operator pos:start="131:25" pos:end="131:25">=</operator> <name pos:start="131:27" pos:end="131:30">ptr1</name> <operator pos:start="131:32" pos:end="131:32">+</operator> <name pos:start="131:34" pos:end="131:41">linesize</name> <operator pos:start="131:43" pos:end="131:43">*</operator> <name pos:start="131:45" pos:end="131:46">y1</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="133:21" pos:end="133:27"><expr pos:start="133:21" pos:end="133:26"><name pos:start="133:21" pos:end="133:24">pass</name><operator pos:start="133:25" pos:end="133:26">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="137:17" pos:end="137:22">break;</break>

            <case pos:start="139:13" pos:end="139:19">case <expr pos:start="139:18" pos:end="139:18"><literal type="number" pos:start="139:18" pos:end="139:18">2</literal></expr>:</case>

                <expr_stmt pos:start="141:17" pos:end="141:24"><expr pos:start="141:17" pos:end="141:23"><name pos:start="141:17" pos:end="141:18">y1</name> <operator pos:start="141:20" pos:end="141:21">+=</operator> <literal type="number" pos:start="141:23" pos:end="141:23">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:36"><expr pos:start="143:17" pos:end="143:35"><name pos:start="143:17" pos:end="143:19">ptr</name> <operator pos:start="143:21" pos:end="143:22">+=</operator> <name pos:start="143:24" pos:end="143:31">linesize</name> <operator pos:start="143:33" pos:end="143:33">*</operator> <literal type="number" pos:start="143:35" pos:end="143:35">4</literal></expr>;</expr_stmt>

                <if_stmt pos:start="145:17" pos:end="153:17"><if pos:start="145:17" pos:end="153:17">if <condition pos:start="145:20" pos:end="145:33">(<expr pos:start="145:21" pos:end="145:32"><name pos:start="145:21" pos:end="145:22">y1</name> <operator pos:start="145:24" pos:end="145:25">&gt;=</operator> <name pos:start="145:27" pos:end="145:32">height</name></expr>)</condition> <block pos:start="145:35" pos:end="153:17">{<block_content pos:start="147:21" pos:end="151:27">

                    <expr_stmt pos:start="147:21" pos:end="147:27"><expr pos:start="147:21" pos:end="147:26"><name pos:start="147:21" pos:end="147:22">y1</name> <operator pos:start="147:24" pos:end="147:24">=</operator> <literal type="number" pos:start="147:26" pos:end="147:26">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="149:21" pos:end="149:42"><expr pos:start="149:21" pos:end="149:41"><name pos:start="149:21" pos:end="149:23">ptr</name> <operator pos:start="149:25" pos:end="149:25">=</operator> <name pos:start="149:27" pos:end="149:30">ptr1</name> <operator pos:start="149:32" pos:end="149:32">+</operator> <name pos:start="149:34" pos:end="149:41">linesize</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="151:21" pos:end="151:27"><expr pos:start="151:21" pos:end="151:26"><name pos:start="151:21" pos:end="151:24">pass</name><operator pos:start="151:25" pos:end="151:26">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="155:17" pos:end="155:22">break;</break>

            <case pos:start="157:13" pos:end="157:19">case <expr pos:start="157:18" pos:end="157:18"><literal type="number" pos:start="157:18" pos:end="157:18">3</literal></expr>:</case>

                <expr_stmt pos:start="159:17" pos:end="159:24"><expr pos:start="159:17" pos:end="159:23"><name pos:start="159:17" pos:end="159:18">y1</name> <operator pos:start="159:20" pos:end="159:21">+=</operator> <literal type="number" pos:start="159:23" pos:end="159:23">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:36"><expr pos:start="161:17" pos:end="161:35"><name pos:start="161:17" pos:end="161:19">ptr</name> <operator pos:start="161:21" pos:end="161:22">+=</operator> <name pos:start="161:24" pos:end="161:31">linesize</name> <operator pos:start="161:33" pos:end="161:33">*</operator> <literal type="number" pos:start="161:35" pos:end="161:35">2</literal></expr>;</expr_stmt>

                <break pos:start="163:17" pos:end="163:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="167:11" pos:end="171:9">else <block pos:start="167:16" pos:end="171:9">{<block_content pos:start="169:13" pos:end="169:28">

            <expr_stmt pos:start="169:13" pos:end="169:28"><expr pos:start="169:13" pos:end="169:27"><name pos:start="169:13" pos:end="169:15">ptr</name> <operator pos:start="169:17" pos:end="169:18">+=</operator> <name pos:start="169:20" pos:end="169:27">linesize</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="175:5" pos:end="175:57">/* read the garbage data until end marker is found */</comment>

    <expr_stmt pos:start="177:5" pos:end="177:31"><expr pos:start="177:5" pos:end="177:30"><call pos:start="177:5" pos:end="177:30"><name pos:start="177:5" pos:end="177:22">ff_lzw_decode_tail</name><argument_list pos:start="177:23" pos:end="177:30">(<argument pos:start="177:24" pos:end="177:29"><expr pos:start="177:24" pos:end="177:29"><name pos:start="177:24" pos:end="177:29"><name pos:start="177:24" pos:end="177:24">s</name><operator pos:start="177:25" pos:end="177:26">-&gt;</operator><name pos:start="177:27" pos:end="177:29">lzw</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:43"><expr pos:start="179:5" pos:end="179:42"><name pos:start="179:5" pos:end="179:17"><name pos:start="179:5" pos:end="179:5">s</name><operator pos:start="179:6" pos:end="179:7">-&gt;</operator><name pos:start="179:8" pos:end="179:17">bytestream</name></name> <operator pos:start="179:19" pos:end="179:19">=</operator> <call pos:start="179:21" pos:end="179:42"><name pos:start="179:21" pos:end="179:34">ff_lzw_cur_ptr</name><argument_list pos:start="179:35" pos:end="179:42">(<argument pos:start="179:36" pos:end="179:41"><expr pos:start="179:36" pos:end="179:41"><name pos:start="179:36" pos:end="179:41"><name pos:start="179:36" pos:end="179:36">s</name><operator pos:start="179:37" pos:end="179:38">-&gt;</operator><name pos:start="179:39" pos:end="179:41">lzw</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="181:5" pos:end="181:13">return <expr pos:start="181:12" pos:end="181:12"><literal type="number" pos:start="181:12" pos:end="181:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
