<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22618.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">net_vde_init</name><parameter_list pos:start="1:24" pos:end="5:62">(<parameter pos:start="1:25" pos:end="1:39"><decl pos:start="1:25" pos:end="1:39"><type pos:start="1:25" pos:end="1:39"><name pos:start="1:25" pos:end="1:33">VLANState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:39">vlan</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:58"><decl pos:start="1:42" pos:end="1:58"><type pos:start="1:42" pos:end="1:58"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:51">char</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">model</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:40"><decl pos:start="3:25" pos:end="3:40"><type pos:start="3:25" pos:end="3:40"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:34">char</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">name</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:58"><decl pos:start="3:43" pos:end="3:58"><type pos:start="3:43" pos:end="3:58"><specifier pos:start="3:43" pos:end="3:47">const</specifier> <name pos:start="3:49" pos:end="3:52">char</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:58">sock</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:32"><decl pos:start="5:25" pos:end="5:32"><type pos:start="5:25" pos:end="5:32"><name pos:start="5:25" pos:end="5:27">int</name></type> <name pos:start="5:29" pos:end="5:32">port</name></decl></parameter>, <parameter pos:start="5:35" pos:end="5:51"><decl pos:start="5:35" pos:end="5:51"><type pos:start="5:35" pos:end="5:51"><specifier pos:start="5:35" pos:end="5:39">const</specifier> <name pos:start="5:41" pos:end="5:44">char</name> <modifier pos:start="5:46" pos:end="5:46">*</modifier></type><name pos:start="5:47" pos:end="5:51">group</name></decl></parameter>, <parameter pos:start="5:54" pos:end="5:61"><decl pos:start="5:54" pos:end="5:61"><type pos:start="5:54" pos:end="5:61"><name pos:start="5:54" pos:end="5:56">int</name></type> <name pos:start="5:58" pos:end="5:61">mode</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="51:1">{<block_content pos:start="9:5" pos:end="49:13">

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">VDEState</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:15">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:60"><decl pos:start="11:5" pos:end="11:59"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:20">init_group</name> <init pos:start="11:22" pos:end="11:59">= <expr pos:start="11:24" pos:end="11:59"><ternary pos:start="11:24" pos:end="11:59"><condition pos:start="11:24" pos:end="11:38"><expr pos:start="11:24" pos:end="11:36"><call pos:start="11:24" pos:end="11:36"><name pos:start="11:24" pos:end="11:29">strlen</name><argument_list pos:start="11:30" pos:end="11:36">(<argument pos:start="11:31" pos:end="11:35"><expr pos:start="11:31" pos:end="11:35"><name pos:start="11:31" pos:end="11:35">group</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="11:40" pos:end="11:52"> <expr pos:start="11:40" pos:end="11:52"><operator pos:start="11:40" pos:end="11:40">(</operator><name pos:start="11:41" pos:end="11:44">char</name> <operator pos:start="11:46" pos:end="11:46">*</operator><operator pos:start="11:47" pos:end="11:47">)</operator><name pos:start="11:48" pos:end="11:52">group</name></expr> </then><else pos:start="11:54" pos:end="11:59">: <expr pos:start="11:56" pos:end="11:59"><name pos:start="11:56" pos:end="11:59">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:57"><decl pos:start="13:5" pos:end="13:56"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:19">init_sock</name> <init pos:start="13:21" pos:end="13:56">= <expr pos:start="13:23" pos:end="13:56"><ternary pos:start="13:23" pos:end="13:56"><condition pos:start="13:23" pos:end="13:36"><expr pos:start="13:23" pos:end="13:34"><call pos:start="13:23" pos:end="13:34"><name pos:start="13:23" pos:end="13:28">strlen</name><argument_list pos:start="13:29" pos:end="13:34">(<argument pos:start="13:30" pos:end="13:33"><expr pos:start="13:30" pos:end="13:33"><name pos:start="13:30" pos:end="13:33">sock</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="13:38" pos:end="13:49"> <expr pos:start="13:38" pos:end="13:49"><operator pos:start="13:38" pos:end="13:38">(</operator><name pos:start="13:39" pos:end="13:42">char</name> <operator pos:start="13:44" pos:end="13:44">*</operator><operator pos:start="13:45" pos:end="13:45">)</operator><name pos:start="13:46" pos:end="13:49">sock</name></expr> </then><else pos:start="13:51" pos:end="13:56">: <expr pos:start="13:53" pos:end="13:56"><name pos:start="13:53" pos:end="13:56">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="25:6"><decl pos:start="17:5" pos:end="25:5"><type pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:24">vde_open_args</name></name></type> <name pos:start="17:26" pos:end="17:29">args</name> <init pos:start="17:31" pos:end="25:5">= <expr pos:start="17:33" pos:end="25:5"><block pos:start="17:33" pos:end="25:5">{

        <expr pos:start="19:9" pos:end="19:20"><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:13">port</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:20">port</name></expr>,

        <expr pos:start="21:9" pos:end="21:27"><operator pos:start="21:9" pos:end="21:9">.</operator><name pos:start="21:10" pos:end="21:14">group</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:27">init_group</name></expr>,

        <expr pos:start="23:9" pos:end="23:20"><operator pos:start="23:9" pos:end="23:9">.</operator><name pos:start="23:10" pos:end="23:13">mode</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:20">mode</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:5">s</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <call pos:start="29:9" pos:end="29:38"><name pos:start="29:9" pos:end="29:20">qemu_mallocz</name><argument_list pos:start="29:21" pos:end="29:38">(<argument pos:start="29:22" pos:end="29:37"><expr pos:start="29:22" pos:end="29:37"><sizeof pos:start="29:22" pos:end="29:37">sizeof<argument_list pos:start="29:28" pos:end="29:37">(<argument pos:start="29:29" pos:end="29:36"><expr pos:start="29:29" pos:end="29:36"><name pos:start="29:29" pos:end="29:36">VDEState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:48"><expr pos:start="31:5" pos:end="31:47"><name pos:start="31:5" pos:end="31:10"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:10">vde</name></name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="31:47"><name pos:start="31:14" pos:end="31:21">vde_open</name><argument_list pos:start="31:22" pos:end="31:47">(<argument pos:start="31:23" pos:end="31:31"><expr pos:start="31:23" pos:end="31:31"><name pos:start="31:23" pos:end="31:31">init_sock</name></expr></argument>, <argument pos:start="31:34" pos:end="31:39"><expr pos:start="31:34" pos:end="31:39"><literal type="string" pos:start="31:34" pos:end="31:39">"QEMU"</literal></expr></argument>, <argument pos:start="31:42" pos:end="31:46"><expr pos:start="31:42" pos:end="31:46"><operator pos:start="31:42" pos:end="31:42">&amp;</operator><name pos:start="31:43" pos:end="31:46">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:16">(<expr pos:start="33:9" pos:end="33:15"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:15"><name pos:start="33:10" pos:end="33:10">s</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:15">vde</name></name></expr>)</condition><block pos:start="33:17" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:18">

        <expr_stmt pos:start="35:9" pos:end="35:16"><expr pos:start="35:9" pos:end="35:15"><call pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:12">free</name><argument_list pos:start="35:13" pos:end="35:15">(<argument pos:start="35:14" pos:end="35:14"><expr pos:start="35:14" pos:end="35:14"><name pos:start="35:14" pos:end="35:14">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:76"><expr pos:start="41:5" pos:end="41:75"><name pos:start="41:5" pos:end="41:9"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:9">vc</name></name> <operator pos:start="41:11" pos:end="41:11">=</operator> <call pos:start="41:13" pos:end="41:75"><name pos:start="41:13" pos:end="41:32">qemu_new_vlan_client</name><argument_list pos:start="41:33" pos:end="41:75">(<argument pos:start="41:34" pos:end="41:37"><expr pos:start="41:34" pos:end="41:37"><name pos:start="41:34" pos:end="41:37">vlan</name></expr></argument>, <argument pos:start="41:40" pos:end="41:44"><expr pos:start="41:40" pos:end="41:44"><name pos:start="41:40" pos:end="41:44">model</name></expr></argument>, <argument pos:start="41:47" pos:end="41:50"><expr pos:start="41:47" pos:end="41:50"><name pos:start="41:47" pos:end="41:50">name</name></expr></argument>, <argument pos:start="41:53" pos:end="41:65"><expr pos:start="41:53" pos:end="41:65"><name pos:start="41:53" pos:end="41:65">vde_from_qemu</name></expr></argument>, <argument pos:start="41:68" pos:end="41:71"><expr pos:start="41:68" pos:end="41:71"><name pos:start="41:68" pos:end="41:71">NULL</name></expr></argument>, <argument pos:start="41:74" pos:end="41:74"><expr pos:start="41:74" pos:end="41:74"><name pos:start="41:74" pos:end="41:74">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:66"><expr pos:start="43:5" pos:end="43:65"><call pos:start="43:5" pos:end="43:65"><name pos:start="43:5" pos:end="43:23">qemu_set_fd_handler</name><argument_list pos:start="43:24" pos:end="43:65">(<argument pos:start="43:25" pos:end="43:42"><expr pos:start="43:25" pos:end="43:42"><call pos:start="43:25" pos:end="43:42"><name pos:start="43:25" pos:end="43:34">vde_datafd</name><argument_list pos:start="43:35" pos:end="43:42">(<argument pos:start="43:36" pos:end="43:41"><expr pos:start="43:36" pos:end="43:41"><name pos:start="43:36" pos:end="43:41"><name pos:start="43:36" pos:end="43:36">s</name><operator pos:start="43:37" pos:end="43:38">-&gt;</operator><name pos:start="43:39" pos:end="43:41">vde</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:45" pos:end="43:55"><expr pos:start="43:45" pos:end="43:55"><name pos:start="43:45" pos:end="43:55">vde_to_qemu</name></expr></argument>, <argument pos:start="43:58" pos:end="43:61"><expr pos:start="43:58" pos:end="43:61"><name pos:start="43:58" pos:end="43:61">NULL</name></expr></argument>, <argument pos:start="43:64" pos:end="43:64"><expr pos:start="43:64" pos:end="43:64"><name pos:start="43:64" pos:end="43:64">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="47:39"><expr pos:start="45:5" pos:end="47:38"><call pos:start="45:5" pos:end="47:38"><name pos:start="45:5" pos:end="45:12">snprintf</name><argument_list pos:start="45:13" pos:end="47:38">(<argument pos:start="45:14" pos:end="45:28"><expr pos:start="45:14" pos:end="45:28"><name pos:start="45:14" pos:end="45:28"><name pos:start="45:14" pos:end="45:14">s</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:18">vc</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:28">info_str</name></name></expr></argument>, <argument pos:start="45:31" pos:end="45:53"><expr pos:start="45:31" pos:end="45:53"><sizeof pos:start="45:31" pos:end="45:53">sizeof<argument_list pos:start="45:37" pos:end="45:53">(<argument pos:start="45:38" pos:end="45:52"><expr pos:start="45:38" pos:end="45:52"><name pos:start="45:38" pos:end="45:52"><name pos:start="45:38" pos:end="45:38">s</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:42">vc</name><operator pos:start="45:43" pos:end="45:44">-&gt;</operator><name pos:start="45:45" pos:end="45:52">info_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="45:56" pos:end="45:70"><expr pos:start="45:56" pos:end="45:70"><literal type="string" pos:start="45:56" pos:end="45:70">"sock=%s,fd=%d"</literal></expr></argument>,

             <argument pos:start="47:14" pos:end="47:17"><expr pos:start="47:14" pos:end="47:17"><name pos:start="47:14" pos:end="47:17">sock</name></expr></argument>, <argument pos:start="47:20" pos:end="47:37"><expr pos:start="47:20" pos:end="47:37"><call pos:start="47:20" pos:end="47:37"><name pos:start="47:20" pos:end="47:29">vde_datafd</name><argument_list pos:start="47:30" pos:end="47:37">(<argument pos:start="47:31" pos:end="47:36"><expr pos:start="47:31" pos:end="47:36"><name pos:start="47:31" pos:end="47:36"><name pos:start="47:31" pos:end="47:31">s</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:36">vde</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
