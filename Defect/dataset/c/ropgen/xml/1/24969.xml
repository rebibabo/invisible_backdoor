<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24969.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">qemu_mutex_trylock</name><parameter_list pos:start="1:23" pos:end="1:40">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:34"><name pos:start="1:24" pos:end="1:32">QemuMutex</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:39">mutex</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:18">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">owned</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:50"><expr pos:start="9:5" pos:end="9:49"><name pos:start="9:5" pos:end="9:9">owned</name> <operator pos:start="9:11" pos:end="9:11">=</operator> <call pos:start="9:13" pos:end="9:49"><name pos:start="9:13" pos:end="9:35">TryEnterCriticalSection</name><argument_list pos:start="9:36" pos:end="9:49">(<argument pos:start="9:37" pos:end="9:48"><expr pos:start="9:37" pos:end="9:48"><operator pos:start="9:37" pos:end="9:37">&amp;</operator><name pos:start="9:38" pos:end="9:48"><name pos:start="9:38" pos:end="9:42">mutex</name><operator pos:start="9:43" pos:end="9:44">-&gt;</operator><name pos:start="9:45" pos:end="9:48">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:14">(<expr pos:start="11:9" pos:end="11:13"><name pos:start="11:9" pos:end="11:13">owned</name></expr>)</condition> <block pos:start="11:16" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:44">

        <expr_stmt pos:start="13:9" pos:end="13:34"><expr pos:start="13:9" pos:end="13:33"><call pos:start="13:9" pos:end="13:33"><name pos:start="13:9" pos:end="13:14">assert</name><argument_list pos:start="13:15" pos:end="13:33">(<argument pos:start="13:16" pos:end="13:32"><expr pos:start="13:16" pos:end="13:32"><name pos:start="13:16" pos:end="13:27"><name pos:start="13:16" pos:end="13:20">mutex</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:27">owner</name></name> <operator pos:start="13:29" pos:end="13:30">==</operator> <literal type="number" pos:start="13:32" pos:end="13:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:44"><expr pos:start="15:9" pos:end="15:43"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:13">mutex</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:20">owner</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <call pos:start="15:24" pos:end="15:43"><name pos:start="15:24" pos:end="15:41">GetCurrentThreadId</name><argument_list pos:start="15:42" pos:end="15:43">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="19:5" pos:end="19:18">return <expr pos:start="19:12" pos:end="19:17"><operator pos:start="19:12" pos:end="19:12">!</operator><name pos:start="19:13" pos:end="19:17">owned</name></expr>;</return>

</block_content>}</block></function>
</unit>
