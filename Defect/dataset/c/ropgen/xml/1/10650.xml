<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10650.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:21"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19"><name pos:start="1:8" pos:end="1:13">struct</name> <name pos:start="1:15" pos:end="1:19">ioreq</name></name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:32">ioreq_start</name><parameter_list pos:start="1:33" pos:end="1:58">(<parameter pos:start="1:34" pos:end="1:57"><decl pos:start="1:34" pos:end="1:57"><type pos:start="1:34" pos:end="1:57"><name pos:start="1:34" pos:end="1:49"><name pos:start="1:34" pos:end="1:39">struct</name> <name pos:start="1:41" pos:end="1:49">XenBlkDev</name></name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:57">blkdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:17">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:16">ioreq</name></name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:23">ioreq</name> <init pos:start="5:25" pos:end="5:30">= <expr pos:start="5:27" pos:end="5:30"><name pos:start="5:27" pos:end="5:30">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="37:5"><if pos:start="9:5" pos:end="27:5">if <condition pos:start="9:8" pos:end="9:39">(<expr pos:start="9:9" pos:end="9:38"><call pos:start="9:9" pos:end="9:38"><name pos:start="9:9" pos:end="9:19">QLIST_EMPTY</name><argument_list pos:start="9:20" pos:end="9:38">(<argument pos:start="9:21" pos:end="9:37"><expr pos:start="9:21" pos:end="9:37"><operator pos:start="9:21" pos:end="9:21">&amp;</operator><name pos:start="9:22" pos:end="9:37"><name pos:start="9:22" pos:end="9:27">blkdev</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:37">freelist</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:41" pos:end="27:5">{<block_content pos:start="11:9" pos:end="25:67">

        <if_stmt pos:start="11:9" pos:end="15:9"><if pos:start="11:9" pos:end="15:9">if <condition pos:start="11:12" pos:end="11:51">(<expr pos:start="11:13" pos:end="11:50"><name pos:start="11:13" pos:end="11:34"><name pos:start="11:13" pos:end="11:18">blkdev</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:34">requests_total</name></name> <operator pos:start="11:36" pos:end="11:37">&gt;=</operator> <name pos:start="11:39" pos:end="11:50">max_requests</name></expr>)</condition> <block pos:start="11:53" pos:end="15:9">{<block_content pos:start="13:13" pos:end="13:21">

            <goto pos:start="13:13" pos:end="13:21">goto <name pos:start="13:18" pos:end="13:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="17:9" pos:end="17:33">/* allocate new struct */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:42"><expr pos:start="19:9" pos:end="19:41"><name pos:start="19:9" pos:end="19:13">ioreq</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <call pos:start="19:17" pos:end="19:41"><name pos:start="19:17" pos:end="19:25">g_malloc0</name><argument_list pos:start="19:26" pos:end="19:41">(<argument pos:start="19:27" pos:end="19:40"><expr pos:start="19:27" pos:end="19:40"><sizeof pos:start="19:27" pos:end="19:40">sizeof<argument_list pos:start="19:33" pos:end="19:40">(<argument pos:start="19:34" pos:end="19:39"><expr pos:start="19:34" pos:end="19:39"><operator pos:start="19:34" pos:end="19:34">*</operator><name pos:start="19:35" pos:end="19:39">ioreq</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:31"><expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:13">ioreq</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:21">blkdev</name></name> <operator pos:start="21:23" pos:end="21:23">=</operator> <name pos:start="21:25" pos:end="21:30">blkdev</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:33"><expr pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:14">blkdev</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:30">requests_total</name></name><operator pos:start="23:31" pos:end="23:32">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:67"><expr pos:start="25:9" pos:end="25:66"><call pos:start="25:9" pos:end="25:66"><name pos:start="25:9" pos:end="25:23">qemu_iovec_init</name><argument_list pos:start="25:24" pos:end="25:66">(<argument pos:start="25:25" pos:end="25:33"><expr pos:start="25:25" pos:end="25:33"><operator pos:start="25:25" pos:end="25:25">&amp;</operator><name pos:start="25:26" pos:end="25:33"><name pos:start="25:26" pos:end="25:30">ioreq</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:33">v</name></name></expr></argument>, <argument pos:start="25:36" pos:end="25:65"><expr pos:start="25:36" pos:end="25:65"><name pos:start="25:36" pos:end="25:65">BLKIF_MAX_SEGMENTS_PER_REQUEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="37:5">else <block pos:start="27:12" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:36">

        <comment type="block" pos:start="29:9" pos:end="29:35">/* get one from freelist */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:47"><expr pos:start="31:9" pos:end="31:46"><name pos:start="31:9" pos:end="31:13">ioreq</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:46"><name pos:start="31:17" pos:end="31:27">QLIST_FIRST</name><argument_list pos:start="31:28" pos:end="31:46">(<argument pos:start="31:29" pos:end="31:45"><expr pos:start="31:29" pos:end="31:45"><operator pos:start="31:29" pos:end="31:29">&amp;</operator><name pos:start="31:30" pos:end="31:45"><name pos:start="31:30" pos:end="31:35">blkdev</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:45">freelist</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><call pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:20">QLIST_REMOVE</name><argument_list pos:start="33:21" pos:end="33:33">(<argument pos:start="33:22" pos:end="33:26"><expr pos:start="33:22" pos:end="33:26"><name pos:start="33:22" pos:end="33:26">ioreq</name></expr></argument>, <argument pos:start="33:29" pos:end="33:32"><expr pos:start="33:29" pos:end="33:32"><name pos:start="33:29" pos:end="33:32">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:36"><expr pos:start="35:9" pos:end="35:35"><call pos:start="35:9" pos:end="35:35"><name pos:start="35:9" pos:end="35:24">qemu_iovec_reset</name><argument_list pos:start="35:25" pos:end="35:35">(<argument pos:start="35:26" pos:end="35:34"><expr pos:start="35:26" pos:end="35:34"><operator pos:start="35:26" pos:end="35:26">&amp;</operator><name pos:start="35:27" pos:end="35:34"><name pos:start="35:27" pos:end="35:31">ioreq</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:34">v</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:54"><expr pos:start="39:5" pos:end="39:53"><call pos:start="39:5" pos:end="39:53"><name pos:start="39:5" pos:end="39:21">QLIST_INSERT_HEAD</name><argument_list pos:start="39:22" pos:end="39:53">(<argument pos:start="39:23" pos:end="39:39"><expr pos:start="39:23" pos:end="39:39"><operator pos:start="39:23" pos:end="39:23">&amp;</operator><name pos:start="39:24" pos:end="39:39"><name pos:start="39:24" pos:end="39:29">blkdev</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:39">inflight</name></name></expr></argument>, <argument pos:start="39:42" pos:end="39:46"><expr pos:start="39:42" pos:end="39:46"><name pos:start="39:42" pos:end="39:46">ioreq</name></expr></argument>, <argument pos:start="39:49" pos:end="39:52"><expr pos:start="39:49" pos:end="39:52"><name pos:start="39:49" pos:end="39:52">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:32"><expr pos:start="41:5" pos:end="41:31"><name pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:10">blkdev</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:29">requests_inflight</name></name><operator pos:start="41:30" pos:end="41:31">++</operator></expr>;</expr_stmt>



<label pos:start="45:1" pos:end="45:4"><name pos:start="45:1" pos:end="45:3">out</name>:</label>

    <return pos:start="47:5" pos:end="47:17">return <expr pos:start="47:12" pos:end="47:16"><name pos:start="47:12" pos:end="47:16">ioreq</name></expr>;</return>

</block_content>}</block></function>
</unit>
