<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2359.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">monitor_event</name><parameter_list pos:start="1:26" pos:end="1:50">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:49"><decl pos:start="1:41" pos:end="1:49"><type pos:start="1:41" pos:end="1:49"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:49">event</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:5">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">Monitor</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">mon</name> <init pos:start="5:18" pos:end="5:25">= <expr pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:25">opaque</name></expr></init></decl>;</decl_stmt>



    <switch pos:start="9:5" pos:end="95:5">switch <condition pos:start="9:12" pos:end="9:18">(<expr pos:start="9:13" pos:end="9:17"><name pos:start="9:13" pos:end="9:17">event</name></expr>)</condition> <block pos:start="9:20" pos:end="95:5">{<block_content pos:start="11:5" pos:end="93:14">

    <case pos:start="11:5" pos:end="11:26">case <expr pos:start="11:10" pos:end="11:25"><name pos:start="11:10" pos:end="11:25">CHR_EVENT_MUX_IN</name></expr>:</case>

        <expr_stmt pos:start="13:9" pos:end="13:40"><expr pos:start="13:9" pos:end="13:39"><call pos:start="13:9" pos:end="13:39"><name pos:start="13:9" pos:end="13:23">qemu_mutex_lock</name><argument_list pos:start="13:24" pos:end="13:39">(<argument pos:start="13:25" pos:end="13:38"><expr pos:start="13:25" pos:end="13:38"><operator pos:start="13:25" pos:end="13:25">&amp;</operator><name pos:start="13:26" pos:end="13:38"><name pos:start="13:26" pos:end="13:28">mon</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:38">out_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:25"><expr pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:11">mon</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:20">mux_out</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:42"><expr pos:start="17:9" pos:end="17:41"><call pos:start="17:9" pos:end="17:41"><name pos:start="17:9" pos:end="17:25">qemu_mutex_unlock</name><argument_list pos:start="17:26" pos:end="17:41">(<argument pos:start="17:27" pos:end="17:40"><expr pos:start="17:27" pos:end="17:40"><operator pos:start="17:27" pos:end="17:27">&amp;</operator><name pos:start="17:28" pos:end="17:40"><name pos:start="17:28" pos:end="17:30">mon</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:40">out_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="30:9"><if pos:start="19:9" pos:end="26:9">if <condition pos:start="19:12" pos:end="19:28">(<expr pos:start="19:13" pos:end="19:27"><name pos:start="19:13" pos:end="19:27"><name pos:start="19:13" pos:end="19:15">mon</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:27">reset_seen</name></name></expr>)</condition> <block pos:start="19:30" pos:end="26:9">{<block_content pos:start="22:13" pos:end="24:31">


            <expr_stmt pos:start="22:13" pos:end="22:32"><expr pos:start="22:13" pos:end="22:31"><call pos:start="22:13" pos:end="22:31"><name pos:start="22:13" pos:end="22:26">monitor_resume</name><argument_list pos:start="22:27" pos:end="22:31">(<argument pos:start="22:28" pos:end="22:30"><expr pos:start="22:28" pos:end="22:30"><name pos:start="22:28" pos:end="22:30">mon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="24:13" pos:end="24:31"><expr pos:start="24:13" pos:end="24:30"><call pos:start="24:13" pos:end="24:30"><name pos:start="24:13" pos:end="24:25">monitor_flush</name><argument_list pos:start="24:26" pos:end="24:30">(<argument pos:start="24:27" pos:end="24:29"><expr pos:start="24:27" pos:end="24:29"><name pos:start="24:27" pos:end="24:29">mon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="26:11" pos:end="30:9">else <block pos:start="26:16" pos:end="30:9">{<block_content pos:start="28:13" pos:end="28:33">

            <expr_stmt pos:start="28:13" pos:end="28:33"><expr pos:start="28:13" pos:end="28:32"><name pos:start="28:13" pos:end="28:28"><name pos:start="28:13" pos:end="28:15">mon</name><operator pos:start="28:16" pos:end="28:17">-&gt;</operator><name pos:start="28:18" pos:end="28:28">suspend_cnt</name></name> <operator pos:start="28:30" pos:end="28:30">=</operator> <literal type="number" pos:start="28:32" pos:end="28:32">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="32:9" pos:end="32:14">break;</break>



    <case pos:start="36:5" pos:end="36:27">case <expr pos:start="36:10" pos:end="36:26"><name pos:start="36:10" pos:end="36:26">CHR_EVENT_MUX_OUT</name></expr>:</case>

        <if_stmt pos:start="38:9" pos:end="54:9"><if pos:start="38:9" pos:end="50:9">if <condition pos:start="38:12" pos:end="38:28">(<expr pos:start="38:13" pos:end="38:27"><name pos:start="38:13" pos:end="38:27"><name pos:start="38:13" pos:end="38:15">mon</name><operator pos:start="38:16" pos:end="38:17">-&gt;</operator><name pos:start="38:18" pos:end="38:27">reset_seen</name></name></expr>)</condition> <block pos:start="38:30" pos:end="50:9">{<block_content pos:start="40:13" pos:end="48:33">

            <if_stmt pos:start="40:13" pos:end="44:13"><if pos:start="40:13" pos:end="44:13">if <condition pos:start="40:16" pos:end="40:38">(<expr pos:start="40:17" pos:end="40:37"><name pos:start="40:17" pos:end="40:32"><name pos:start="40:17" pos:end="40:19">mon</name><operator pos:start="40:20" pos:end="40:21">-&gt;</operator><name pos:start="40:22" pos:end="40:32">suspend_cnt</name></name> <operator pos:start="40:34" pos:end="40:35">==</operator> <literal type="number" pos:start="40:37" pos:end="40:37">0</literal></expr>)</condition> <block pos:start="40:40" pos:end="44:13">{<block_content pos:start="42:17" pos:end="42:42">

                <expr_stmt pos:start="42:17" pos:end="42:42"><expr pos:start="42:17" pos:end="42:41"><call pos:start="42:17" pos:end="42:41"><name pos:start="42:17" pos:end="42:30">monitor_printf</name><argument_list pos:start="42:31" pos:end="42:41">(<argument pos:start="42:32" pos:end="42:34"><expr pos:start="42:32" pos:end="42:34"><name pos:start="42:32" pos:end="42:34">mon</name></expr></argument>, <argument pos:start="42:37" pos:end="42:40"><expr pos:start="42:37" pos:end="42:40"><literal type="string" pos:start="42:37" pos:end="42:40">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="46:13" pos:end="46:31"><expr pos:start="46:13" pos:end="46:30"><call pos:start="46:13" pos:end="46:30"><name pos:start="46:13" pos:end="46:25">monitor_flush</name><argument_list pos:start="46:26" pos:end="46:30">(<argument pos:start="46:27" pos:end="46:29"><expr pos:start="46:27" pos:end="46:29"><name pos:start="46:27" pos:end="46:29">mon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="48:13" pos:end="48:33"><expr pos:start="48:13" pos:end="48:32"><call pos:start="48:13" pos:end="48:32"><name pos:start="48:13" pos:end="48:27">monitor_suspend</name><argument_list pos:start="48:28" pos:end="48:32">(<argument pos:start="48:29" pos:end="48:31"><expr pos:start="48:29" pos:end="48:31"><name pos:start="48:29" pos:end="48:31">mon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="50:11" pos:end="54:9">else <block pos:start="50:16" pos:end="54:9">{<block_content pos:start="52:13" pos:end="52:31">

            <expr_stmt pos:start="52:13" pos:end="52:31"><expr pos:start="52:13" pos:end="52:30"><name pos:start="52:13" pos:end="52:28"><name pos:start="52:13" pos:end="52:15">mon</name><operator pos:start="52:16" pos:end="52:17">-&gt;</operator><name pos:start="52:18" pos:end="52:28">suspend_cnt</name></name><operator pos:start="52:29" pos:end="52:30">++</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="56:9" pos:end="56:40"><expr pos:start="56:9" pos:end="56:39"><call pos:start="56:9" pos:end="56:39"><name pos:start="56:9" pos:end="56:23">qemu_mutex_lock</name><argument_list pos:start="56:24" pos:end="56:39">(<argument pos:start="56:25" pos:end="56:38"><expr pos:start="56:25" pos:end="56:38"><operator pos:start="56:25" pos:end="56:25">&amp;</operator><name pos:start="56:26" pos:end="56:38"><name pos:start="56:26" pos:end="56:28">mon</name><operator pos:start="56:29" pos:end="56:30">-&gt;</operator><name pos:start="56:31" pos:end="56:38">out_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="58:9" pos:end="58:25"><expr pos:start="58:9" pos:end="58:24"><name pos:start="58:9" pos:end="58:20"><name pos:start="58:9" pos:end="58:11">mon</name><operator pos:start="58:12" pos:end="58:13">-&gt;</operator><name pos:start="58:14" pos:end="58:20">mux_out</name></name> <operator pos:start="58:22" pos:end="58:22">=</operator> <literal type="number" pos:start="58:24" pos:end="58:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="60:9" pos:end="60:42"><expr pos:start="60:9" pos:end="60:41"><call pos:start="60:9" pos:end="60:41"><name pos:start="60:9" pos:end="60:25">qemu_mutex_unlock</name><argument_list pos:start="60:26" pos:end="60:41">(<argument pos:start="60:27" pos:end="60:40"><expr pos:start="60:27" pos:end="60:40"><operator pos:start="60:27" pos:end="60:27">&amp;</operator><name pos:start="60:28" pos:end="60:40"><name pos:start="60:28" pos:end="60:30">mon</name><operator pos:start="60:31" pos:end="60:32">-&gt;</operator><name pos:start="60:33" pos:end="60:40">out_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="62:9" pos:end="62:14">break;</break>



    <case pos:start="66:5" pos:end="66:26">case <expr pos:start="66:10" pos:end="66:25"><name pos:start="66:10" pos:end="66:25">CHR_EVENT_OPENED</name></expr>:</case>

        <expr_stmt pos:start="68:9" pos:end="70:54"><expr pos:start="68:9" pos:end="70:53"><call pos:start="68:9" pos:end="70:53"><name pos:start="68:9" pos:end="68:22">monitor_printf</name><argument_list pos:start="68:23" pos:end="70:53">(<argument pos:start="68:24" pos:end="68:26"><expr pos:start="68:24" pos:end="68:26"><name pos:start="68:24" pos:end="68:26">mon</name></expr></argument>, <argument pos:start="68:29" pos:end="70:38"><expr pos:start="68:29" pos:end="70:38"><literal type="string" pos:start="68:29" pos:end="68:69">"QEMU %s monitor - type 'help' for more "</literal>

                       <literal type="string" pos:start="70:24" pos:end="70:38">"information\n"</literal></expr></argument>, <argument pos:start="70:41" pos:end="70:52"><expr pos:start="70:41" pos:end="70:52"><name pos:start="70:41" pos:end="70:52">QEMU_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="72:9" pos:end="77:9"><if pos:start="72:9" pos:end="77:9">if <condition pos:start="72:12" pos:end="72:26">(<expr pos:start="72:13" pos:end="72:25"><operator pos:start="72:13" pos:end="72:13">!</operator><name pos:start="72:14" pos:end="72:25"><name pos:start="72:14" pos:end="72:16">mon</name><operator pos:start="72:17" pos:end="72:18">-&gt;</operator><name pos:start="72:19" pos:end="72:25">mux_out</name></name></expr>)</condition> <block pos:start="72:28" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:42">


            <expr_stmt pos:start="75:13" pos:end="75:42"><expr pos:start="75:13" pos:end="75:41"><call pos:start="75:13" pos:end="75:41"><name pos:start="75:13" pos:end="75:32">readline_show_prompt</name><argument_list pos:start="75:33" pos:end="75:41">(<argument pos:start="75:34" pos:end="75:40"><expr pos:start="75:34" pos:end="75:40"><name pos:start="75:34" pos:end="75:40"><name pos:start="75:34" pos:end="75:36">mon</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:40">rs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:28"><expr pos:start="79:9" pos:end="79:27"><name pos:start="79:9" pos:end="79:23"><name pos:start="79:9" pos:end="79:11">mon</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:23">reset_seen</name></name> <operator pos:start="79:25" pos:end="79:25">=</operator> <literal type="number" pos:start="79:27" pos:end="79:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:23"><expr pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:20">mon_refcount</name><operator pos:start="81:21" pos:end="81:22">++</operator></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>



    <case pos:start="87:5" pos:end="87:26">case <expr pos:start="87:10" pos:end="87:25"><name pos:start="87:10" pos:end="87:25">CHR_EVENT_CLOSED</name></expr>:</case>

        <expr_stmt pos:start="89:9" pos:end="89:23"><expr pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:20">mon_refcount</name><operator pos:start="89:21" pos:end="89:22">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:33"><expr pos:start="91:9" pos:end="91:32"><call pos:start="91:9" pos:end="91:32"><name pos:start="91:9" pos:end="91:30">monitor_fdsets_cleanup</name><argument_list pos:start="91:31" pos:end="91:32">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function></unit>
