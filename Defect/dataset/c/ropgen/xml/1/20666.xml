<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20666.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:38">dxt3_block_internal</name><parameter_list pos:start="1:39" pos:end="3:60">(<parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:46">uint8_t</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">dst</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:69"><decl pos:start="1:54" pos:end="1:69"><type pos:start="1:54" pos:end="1:69"><name pos:start="1:54" pos:end="1:62">ptrdiff_t</name></type> <name pos:start="1:64" pos:end="1:69">stride</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:59"><decl pos:start="3:40" pos:end="3:59"><type pos:start="3:40" pos:end="3:59"><specifier pos:start="3:40" pos:end="3:44">const</specifier> <name pos:start="3:46" pos:end="3:52">uint8_t</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:59">block</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:5">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">x</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:22"><name pos:start="9:14" pos:end="9:19">colors</name><index pos:start="9:20" pos:end="9:22">[<expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint16_t</name></type> <name pos:start="11:14" pos:end="11:19">color0</name> <init pos:start="11:21" pos:end="11:41">= <expr pos:start="11:23" pos:end="11:41"><call pos:start="11:23" pos:end="11:41"><name pos:start="11:23" pos:end="11:29">AV_RL16</name><argument_list pos:start="11:30" pos:end="11:41">(<argument pos:start="11:31" pos:end="11:40"><expr pos:start="11:31" pos:end="11:40"><name pos:start="11:31" pos:end="11:35">block</name> <operator pos:start="11:37" pos:end="11:37">+</operator>  <literal type="number" pos:start="11:40" pos:end="11:40">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint16_t</name></type> <name pos:start="13:14" pos:end="13:19">color1</name> <init pos:start="13:21" pos:end="13:41">= <expr pos:start="13:23" pos:end="13:41"><call pos:start="13:23" pos:end="13:41"><name pos:start="13:23" pos:end="13:29">AV_RL16</name><argument_list pos:start="13:30" pos:end="13:41">(<argument pos:start="13:31" pos:end="13:40"><expr pos:start="13:31" pos:end="13:40"><name pos:start="13:31" pos:end="13:35">block</name> <operator pos:start="13:37" pos:end="13:37">+</operator> <literal type="number" pos:start="13:39" pos:end="13:40">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:42"><decl pos:start="15:5" pos:end="15:41"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:17">code</name>   <init pos:start="15:21" pos:end="15:41">= <expr pos:start="15:23" pos:end="15:41"><call pos:start="15:23" pos:end="15:41"><name pos:start="15:23" pos:end="15:29">AV_RL32</name><argument_list pos:start="15:30" pos:end="15:41">(<argument pos:start="15:31" pos:end="15:40"><expr pos:start="15:31" pos:end="15:40"><name pos:start="15:31" pos:end="15:35">block</name> <operator pos:start="15:37" pos:end="15:37">+</operator> <literal type="number" pos:start="15:39" pos:end="15:40">12</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:48"><expr pos:start="19:5" pos:end="19:47"><call pos:start="19:5" pos:end="19:47"><name pos:start="19:5" pos:end="19:17">extract_color</name><argument_list pos:start="19:18" pos:end="19:47">(<argument pos:start="19:19" pos:end="19:24"><expr pos:start="19:19" pos:end="19:24"><name pos:start="19:19" pos:end="19:24">colors</name></expr></argument>, <argument pos:start="19:27" pos:end="19:32"><expr pos:start="19:27" pos:end="19:32"><name pos:start="19:27" pos:end="19:32">color0</name></expr></argument>, <argument pos:start="19:35" pos:end="19:40"><expr pos:start="19:35" pos:end="19:40"><name pos:start="19:35" pos:end="19:40">color1</name></expr></argument>, <argument pos:start="19:43" pos:end="19:43"><expr pos:start="19:43" pos:end="19:43"><literal type="number" pos:start="19:43" pos:end="19:43">1</literal></expr></argument>, <argument pos:start="19:46" pos:end="19:46"><expr pos:start="19:46" pos:end="19:46"><literal type="number" pos:start="19:46" pos:end="19:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="23:5" pos:end="57:5">for <control pos:start="23:9" pos:end="23:27">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">y</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:21"><name pos:start="23:17" pos:end="23:17">y</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <literal type="number" pos:start="23:21" pos:end="23:21">4</literal></expr>;</condition> <incr pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:24">y</name><operator pos:start="23:25" pos:end="23:26">++</operator></expr></incr>)</control> <block pos:start="23:29" pos:end="57:5">{<block_content pos:start="25:9" pos:end="55:22">

        <decl_stmt pos:start="25:9" pos:end="25:59"><decl pos:start="25:9" pos:end="25:58"><type pos:start="25:9" pos:end="25:22"><specifier pos:start="25:9" pos:end="25:13">const</specifier> <name pos:start="25:15" pos:end="25:22">uint16_t</name></type> <name pos:start="25:24" pos:end="25:33">alpha_code</name> <init pos:start="25:35" pos:end="25:58">= <expr pos:start="25:37" pos:end="25:58"><call pos:start="25:37" pos:end="25:58"><name pos:start="25:37" pos:end="25:43">AV_RL16</name><argument_list pos:start="25:44" pos:end="25:58">(<argument pos:start="25:45" pos:end="25:57"><expr pos:start="25:45" pos:end="25:57"><name pos:start="25:45" pos:end="25:49">block</name> <operator pos:start="25:51" pos:end="25:51">+</operator> <literal type="number" pos:start="25:53" pos:end="25:53">2</literal> <operator pos:start="25:55" pos:end="25:55">*</operator> <name pos:start="25:57" pos:end="25:57">y</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:32"><decl pos:start="27:9" pos:end="27:31"><type pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:15">uint8_t</name></type> <name pos:start="27:17" pos:end="27:31"><name pos:start="27:17" pos:end="27:28">alpha_values</name><index pos:start="27:29" pos:end="27:31">[<expr pos:start="27:30" pos:end="27:30"><literal type="number" pos:start="27:30" pos:end="27:30">4</literal></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:59"><expr pos:start="31:9" pos:end="31:58"><name pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:20">alpha_values</name><index pos:start="31:21" pos:end="31:23">[<expr pos:start="31:22" pos:end="31:22"><literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr>]</index></name> <operator pos:start="31:25" pos:end="31:25">=</operator> <operator pos:start="31:27" pos:end="31:27">(</operator><operator pos:start="31:28" pos:end="31:28">(</operator><name pos:start="31:29" pos:end="31:38">alpha_code</name> <operator pos:start="31:40" pos:end="31:41">&gt;&gt;</operator>  <literal type="number" pos:start="31:44" pos:end="31:44">0</literal><operator pos:start="31:45" pos:end="31:45">)</operator> <operator pos:start="31:47" pos:end="31:47">&amp;</operator> <literal type="number" pos:start="31:49" pos:end="31:52">0x0F</literal><operator pos:start="31:53" pos:end="31:53">)</operator> <operator pos:start="31:55" pos:end="31:55">*</operator> <literal type="number" pos:start="31:57" pos:end="31:58">17</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:59"><expr pos:start="33:9" pos:end="33:58"><name pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:20">alpha_values</name><index pos:start="33:21" pos:end="33:23">[<expr pos:start="33:22" pos:end="33:22"><literal type="number" pos:start="33:22" pos:end="33:22">1</literal></expr>]</index></name> <operator pos:start="33:25" pos:end="33:25">=</operator> <operator pos:start="33:27" pos:end="33:27">(</operator><operator pos:start="33:28" pos:end="33:28">(</operator><name pos:start="33:29" pos:end="33:38">alpha_code</name> <operator pos:start="33:40" pos:end="33:41">&gt;&gt;</operator>  <literal type="number" pos:start="33:44" pos:end="33:44">4</literal><operator pos:start="33:45" pos:end="33:45">)</operator> <operator pos:start="33:47" pos:end="33:47">&amp;</operator> <literal type="number" pos:start="33:49" pos:end="33:52">0x0F</literal><operator pos:start="33:53" pos:end="33:53">)</operator> <operator pos:start="33:55" pos:end="33:55">*</operator> <literal type="number" pos:start="33:57" pos:end="33:58">17</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:59"><expr pos:start="35:9" pos:end="35:58"><name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:20">alpha_values</name><index pos:start="35:21" pos:end="35:23">[<expr pos:start="35:22" pos:end="35:22"><literal type="number" pos:start="35:22" pos:end="35:22">2</literal></expr>]</index></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <operator pos:start="35:27" pos:end="35:27">(</operator><operator pos:start="35:28" pos:end="35:28">(</operator><name pos:start="35:29" pos:end="35:38">alpha_code</name> <operator pos:start="35:40" pos:end="35:41">&gt;&gt;</operator>  <literal type="number" pos:start="35:44" pos:end="35:44">8</literal><operator pos:start="35:45" pos:end="35:45">)</operator> <operator pos:start="35:47" pos:end="35:47">&amp;</operator> <literal type="number" pos:start="35:49" pos:end="35:52">0x0F</literal><operator pos:start="35:53" pos:end="35:53">)</operator> <operator pos:start="35:55" pos:end="35:55">*</operator> <literal type="number" pos:start="35:57" pos:end="35:58">17</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:59"><expr pos:start="37:9" pos:end="37:58"><name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:20">alpha_values</name><index pos:start="37:21" pos:end="37:23">[<expr pos:start="37:22" pos:end="37:22"><literal type="number" pos:start="37:22" pos:end="37:22">3</literal></expr>]</index></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <operator pos:start="37:27" pos:end="37:27">(</operator><operator pos:start="37:28" pos:end="37:28">(</operator><name pos:start="37:29" pos:end="37:38">alpha_code</name> <operator pos:start="37:40" pos:end="37:41">&gt;&gt;</operator> <literal type="number" pos:start="37:43" pos:end="37:44">12</literal><operator pos:start="37:45" pos:end="37:45">)</operator> <operator pos:start="37:47" pos:end="37:47">&amp;</operator> <literal type="number" pos:start="37:49" pos:end="37:52">0x0F</literal><operator pos:start="37:53" pos:end="37:53">)</operator> <operator pos:start="37:55" pos:end="37:55">*</operator> <literal type="number" pos:start="37:57" pos:end="37:58">17</literal></expr>;</expr_stmt>



        <for pos:start="41:9" pos:end="53:9">for <control pos:start="41:13" pos:end="41:31">(<init pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">x</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>;</init> <condition pos:start="41:21" pos:end="41:26"><expr pos:start="41:21" pos:end="41:25"><name pos:start="41:21" pos:end="41:21">x</name> <operator pos:start="41:23" pos:end="41:23">&lt;</operator> <literal type="number" pos:start="41:25" pos:end="41:25">4</literal></expr>;</condition> <incr pos:start="41:28" pos:end="41:30"><expr pos:start="41:28" pos:end="41:30"><name pos:start="41:28" pos:end="41:28">x</name><operator pos:start="41:29" pos:end="41:30">++</operator></expr></incr>)</control> <block pos:start="41:33" pos:end="53:9">{<block_content pos:start="43:13" pos:end="51:40">

            <decl_stmt pos:start="43:13" pos:end="43:44"><decl pos:start="43:13" pos:end="43:43"><type pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:19">uint8_t</name></type> <name pos:start="43:21" pos:end="43:25">alpha</name> <init pos:start="43:27" pos:end="43:43">= <expr pos:start="43:29" pos:end="43:43"><name pos:start="43:29" pos:end="43:43"><name pos:start="43:29" pos:end="43:40">alpha_values</name><index pos:start="43:41" pos:end="43:43">[<expr pos:start="43:42" pos:end="43:42"><name pos:start="43:42" pos:end="43:42">x</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="45:13" pos:end="45:62"><decl pos:start="45:13" pos:end="45:61"><type pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:20">uint32_t</name></type> <name pos:start="45:22" pos:end="45:26">pixel</name> <init pos:start="45:28" pos:end="45:61">= <expr pos:start="45:30" pos:end="45:61"><name pos:start="45:30" pos:end="45:45"><name pos:start="45:30" pos:end="45:35">colors</name><index pos:start="45:36" pos:end="45:45">[<expr pos:start="45:37" pos:end="45:44"><name pos:start="45:37" pos:end="45:40">code</name> <operator pos:start="45:42" pos:end="45:42">&amp;</operator> <literal type="number" pos:start="45:44" pos:end="45:44">3</literal></expr>]</index></name> <operator pos:start="45:47" pos:end="45:47">|</operator> <operator pos:start="45:49" pos:end="45:49">(</operator><name pos:start="45:50" pos:end="45:54">alpha</name> <operator pos:start="45:56" pos:end="45:57">&lt;&lt;</operator> <literal type="number" pos:start="45:59" pos:end="45:60">24</literal><operator pos:start="45:61" pos:end="45:61">)</operator></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:23"><expr pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:16">code</name> <operator pos:start="47:18" pos:end="47:20">&gt;&gt;=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">2</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="51:13" pos:end="51:40"><expr pos:start="51:13" pos:end="51:39"><call pos:start="51:13" pos:end="51:39"><name pos:start="51:13" pos:end="51:19">AV_WL32</name><argument_list pos:start="51:20" pos:end="51:39">(<argument pos:start="51:21" pos:end="51:31"><expr pos:start="51:21" pos:end="51:31"><name pos:start="51:21" pos:end="51:23">dst</name> <operator pos:start="51:25" pos:end="51:25">+</operator> <name pos:start="51:27" pos:end="51:27">x</name> <operator pos:start="51:29" pos:end="51:29">*</operator> <literal type="number" pos:start="51:31" pos:end="51:31">4</literal></expr></argument>, <argument pos:start="51:34" pos:end="51:38"><expr pos:start="51:34" pos:end="51:38"><name pos:start="51:34" pos:end="51:38">pixel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="55:9" pos:end="55:22"><expr pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:11">dst</name> <operator pos:start="55:13" pos:end="55:14">+=</operator> <name pos:start="55:16" pos:end="55:21">stride</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
