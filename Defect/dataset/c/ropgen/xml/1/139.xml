<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/139.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">xan_huffman_decode</name><parameter_list pos:start="1:30" pos:end="3:17">(<parameter pos:start="1:31" pos:end="1:49"><decl pos:start="1:31" pos:end="1:49"><type pos:start="1:31" pos:end="1:49"><name pos:start="1:31" pos:end="1:38">unsigned</name> <name pos:start="1:40" pos:end="1:43">char</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">dest</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:75"><decl pos:start="1:52" pos:end="1:75"><type pos:start="1:52" pos:end="1:75"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:65">unsigned</name> <name pos:start="1:67" pos:end="1:70">char</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:75">src</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:16"><decl pos:start="3:5" pos:end="3:16"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:16">dest_len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:13">

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name></type> <name pos:start="7:19" pos:end="7:22">byte</name> <init pos:start="7:24" pos:end="7:31">= <expr pos:start="7:26" pos:end="7:31"><operator pos:start="7:26" pos:end="7:26">*</operator><name pos:start="7:27" pos:end="7:29">src</name><operator pos:start="7:30" pos:end="7:31">++</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">char</name></type> <name pos:start="9:19" pos:end="9:22">ival</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:29">byte</name> <operator pos:start="9:31" pos:end="9:31">+</operator> <literal type="number" pos:start="9:33" pos:end="9:36">0x16</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:25"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:18">unsigned</name> <name pos:start="11:20" pos:end="11:23">char</name> <modifier pos:start="11:25" pos:end="11:25">*</modifier></type> <name pos:start="11:27" pos:end="11:29">ptr</name> <init pos:start="11:31" pos:end="11:44">= <expr pos:start="11:33" pos:end="11:44"><name pos:start="11:33" pos:end="11:35">src</name> <operator pos:start="11:37" pos:end="11:37">+</operator> <name pos:start="11:39" pos:end="11:42">byte</name><operator pos:start="11:43" pos:end="11:43">*</operator><literal type="number" pos:start="11:44" pos:end="11:44">2</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">char</name></type> <name pos:start="13:19" pos:end="13:21">val</name> <init pos:start="13:23" pos:end="13:28">= <expr pos:start="13:25" pos:end="13:28"><name pos:start="13:25" pos:end="13:28">ival</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:46"><decl pos:start="15:5" pos:end="15:45"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:17">char</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:27">dest_end</name> <init pos:start="15:29" pos:end="15:45">= <expr pos:start="15:31" pos:end="15:45"><name pos:start="15:31" pos:end="15:34">dest</name> <operator pos:start="15:36" pos:end="15:36">+</operator> <name pos:start="15:38" pos:end="15:45">dest_len</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:17">GetBitContext</name></type> <name pos:start="17:19" pos:end="17:20">gb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:31"><expr pos:start="21:5" pos:end="21:30"><call pos:start="21:5" pos:end="21:30"><name pos:start="21:5" pos:end="21:17">init_get_bits</name><argument_list pos:start="21:18" pos:end="21:30">(<argument pos:start="21:19" pos:end="21:21"><expr pos:start="21:19" pos:end="21:21"><operator pos:start="21:19" pos:end="21:19">&amp;</operator><name pos:start="21:20" pos:end="21:21">gb</name></expr></argument>, <argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">ptr</name></expr></argument>, <argument pos:start="21:29" pos:end="21:29"><expr pos:start="21:29" pos:end="21:29"><literal type="number" pos:start="21:29" pos:end="21:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="21:33" pos:end="21:63">// FIXME: no src size available</comment>



    <while pos:start="25:5" pos:end="43:5">while <condition pos:start="25:11" pos:end="25:25">( <expr pos:start="25:13" pos:end="25:23"><name pos:start="25:13" pos:end="25:15">val</name> <operator pos:start="25:17" pos:end="25:18">!=</operator> <literal type="number" pos:start="25:20" pos:end="25:23">0x16</literal></expr> )</condition> <block pos:start="25:27" pos:end="43:5">{<block_content pos:start="27:9" pos:end="41:9">

        <expr_stmt pos:start="27:9" pos:end="27:54"><expr pos:start="27:9" pos:end="27:53"><name pos:start="27:9" pos:end="27:11">val</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:53"><name pos:start="27:15" pos:end="27:17">src</name><index pos:start="27:18" pos:end="27:53">[<expr pos:start="27:19" pos:end="27:52"><name pos:start="27:19" pos:end="27:21">val</name> <operator pos:start="27:23" pos:end="27:23">-</operator> <literal type="number" pos:start="27:25" pos:end="27:30">0x17</literal> <operator pos:start="27:30" pos:end="27:30">+</operator> <call pos:start="27:32" pos:end="27:45"><name pos:start="27:32" pos:end="27:40">get_bits1</name><argument_list pos:start="27:41" pos:end="27:45">(<argument pos:start="27:42" pos:end="27:44"><expr pos:start="27:42" pos:end="27:44"><operator pos:start="27:42" pos:end="27:42">&amp;</operator><name pos:start="27:43" pos:end="27:44">gb</name></expr></argument>)</argument_list></call> <operator pos:start="27:47" pos:end="27:47">*</operator> <name pos:start="27:49" pos:end="27:52">byte</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="31:9" pos:end="41:9"><if pos:start="31:9" pos:end="41:9">if <condition pos:start="31:12" pos:end="31:25">( <expr pos:start="31:14" pos:end="31:23"><name pos:start="31:14" pos:end="31:16">val</name> <operator pos:start="31:18" pos:end="31:18">&lt;</operator> <literal type="number" pos:start="31:20" pos:end="31:23">0x16</literal></expr> )</condition> <block pos:start="31:27" pos:end="41:9">{<block_content pos:start="33:13" pos:end="39:23">

            <if_stmt pos:start="33:13" pos:end="35:25"><if pos:start="33:13" pos:end="35:25">if <condition pos:start="33:16" pos:end="33:36">(<expr pos:start="33:17" pos:end="33:35"><name pos:start="33:17" pos:end="33:20">dest</name> <operator pos:start="33:22" pos:end="33:22">+</operator> <literal type="number" pos:start="33:24" pos:end="33:24">1</literal> <operator pos:start="33:26" pos:end="33:26">&gt;</operator> <name pos:start="33:28" pos:end="33:35">dest_end</name></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:25"><block_content pos:start="35:17" pos:end="35:25">

                <return pos:start="35:17" pos:end="35:25">return <expr pos:start="35:24" pos:end="35:24"><literal type="number" pos:start="35:24" pos:end="35:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:26"><expr pos:start="37:13" pos:end="37:25"><operator pos:start="37:13" pos:end="37:13">*</operator><name pos:start="37:14" pos:end="37:17">dest</name><operator pos:start="37:18" pos:end="37:19">++</operator> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:25">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:23"><expr pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:15">val</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:22">ival</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
