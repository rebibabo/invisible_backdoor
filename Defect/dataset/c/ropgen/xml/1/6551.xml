<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6551.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:41">kvm_s390_stattrib_synchronize</name><parameter_list pos:start="1:42" pos:end="1:64">(<parameter pos:start="1:43" pos:end="1:63"><decl pos:start="1:43" pos:end="1:63"><type pos:start="1:43" pos:end="1:61"><name pos:start="1:43" pos:end="1:59">S390StAttribState</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">sa</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:5">

    <decl_stmt pos:start="5:5" pos:end="5:54"><decl pos:start="5:5" pos:end="5:53"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24">KVMS390StAttribState</name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:29">sas</name> <init pos:start="5:31" pos:end="5:53">= <expr pos:start="5:33" pos:end="5:53"><call pos:start="5:33" pos:end="5:53"><name pos:start="5:33" pos:end="5:49">KVM_S390_STATTRIB</name><argument_list pos:start="5:50" pos:end="5:53">(<argument pos:start="5:51" pos:end="5:52"><expr pos:start="5:51" pos:end="5:52"><name pos:start="5:51" pos:end="5:52">sa</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:55"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">MachineState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:25">machine</name> <init pos:start="7:27" pos:end="7:55">= <expr pos:start="7:29" pos:end="7:55"><call pos:start="7:29" pos:end="7:55"><name pos:start="7:29" pos:end="7:35">MACHINE</name><argument_list pos:start="7:36" pos:end="7:55">(<argument pos:start="7:37" pos:end="7:54"><expr pos:start="7:37" pos:end="7:54"><call pos:start="7:37" pos:end="7:54"><name pos:start="7:37" pos:end="7:52">qdev_get_machine</name><argument_list pos:start="7:53" pos:end="7:54">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:64"><decl pos:start="9:5" pos:end="9:63"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">long</name></type> <name pos:start="9:19" pos:end="9:21">max</name> <init pos:start="9:23" pos:end="9:63">= <expr pos:start="9:25" pos:end="9:63"><name pos:start="9:25" pos:end="9:44"><name pos:start="9:25" pos:end="9:31">machine</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:44">maxram_size</name></name> <operator pos:start="9:46" pos:end="9:46">/</operator> <name pos:start="9:48" pos:end="9:63">TARGET_PAGE_SIZE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">long</name></type> <name pos:start="11:19" pos:end="11:20">cx</name></decl>, <decl pos:start="11:23" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:17"/><name pos:start="11:23" pos:end="11:25">len</name> <init pos:start="11:27" pos:end="11:35">= <expr pos:start="11:29" pos:end="11:35"><literal type="number" pos:start="11:29" pos:end="11:29">1</literal> <operator pos:start="11:31" pos:end="11:32">&lt;&lt;</operator> <literal type="number" pos:start="11:34" pos:end="11:35">19</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">r</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="21:6"><decl pos:start="15:5" pos:end="21:5"><type pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:28">kvm_s390_cmma_log</name></name></type> <name pos:start="15:30" pos:end="15:33">clog</name> <init pos:start="15:35" pos:end="21:5">= <expr pos:start="15:37" pos:end="21:5"><block pos:start="15:37" pos:end="21:5">{

        <expr pos:start="17:9" pos:end="17:18"><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:14">flags</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>,

        <expr pos:start="19:9" pos:end="19:21"><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:13">mask</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <operator pos:start="19:17" pos:end="19:17">~</operator><literal type="number" pos:start="19:18" pos:end="19:21">0ULL</literal></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="69:5"><if pos:start="25:5" pos:end="69:5">if <condition pos:start="25:8" pos:end="25:29">(<expr pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:11">sas</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:28">incoming_buffer</name></name></expr>)</condition> <block pos:start="25:31" pos:end="69:5">{<block_content pos:start="27:9" pos:end="67:36">

        <for pos:start="27:9" pos:end="45:9">for <control pos:start="27:13" pos:end="27:48">(<init pos:start="27:14" pos:end="27:20"><expr pos:start="27:14" pos:end="27:19"><name pos:start="27:14" pos:end="27:15">cx</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>;</init> <condition pos:start="27:22" pos:end="27:37"><expr pos:start="27:22" pos:end="27:36"><name pos:start="27:22" pos:end="27:23">cx</name> <operator pos:start="27:25" pos:end="27:25">+</operator> <name pos:start="27:27" pos:end="27:29">len</name> <operator pos:start="27:31" pos:end="27:32">&lt;=</operator> <name pos:start="27:34" pos:end="27:36">max</name></expr>;</condition> <incr pos:start="27:39" pos:end="27:47"><expr pos:start="27:39" pos:end="27:47"><name pos:start="27:39" pos:end="27:40">cx</name> <operator pos:start="27:42" pos:end="27:43">+=</operator> <name pos:start="27:45" pos:end="27:47">len</name></expr></incr>)</control> <block pos:start="27:50" pos:end="45:9">{<block_content pos:start="29:13" pos:end="43:13">

            <expr_stmt pos:start="29:13" pos:end="29:32"><expr pos:start="29:13" pos:end="29:31"><name pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:16">clog</name><operator pos:start="29:17" pos:end="29:17">.</operator><name pos:start="29:18" pos:end="29:26">start_gfn</name></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <name pos:start="29:30" pos:end="29:31">cx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:29"><expr pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:16">clog</name><operator pos:start="31:17" pos:end="31:17">.</operator><name pos:start="31:18" pos:end="31:22">count</name></name> <operator pos:start="31:24" pos:end="31:24">=</operator> <name pos:start="31:26" pos:end="31:28">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:70"><expr pos:start="33:13" pos:end="33:69"><name pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:16">clog</name><operator pos:start="33:17" pos:end="33:17">.</operator><name pos:start="33:18" pos:end="33:23">values</name></name> <operator pos:start="33:25" pos:end="33:25">=</operator> <operator pos:start="33:27" pos:end="33:27">(</operator><name pos:start="33:28" pos:end="33:35">uint64_t</name><operator pos:start="33:36" pos:end="33:36">)</operator><operator pos:start="33:37" pos:end="33:37">(</operator><name pos:start="33:38" pos:end="33:57"><name pos:start="33:38" pos:end="33:40">sas</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:57">incoming_buffer</name></name> <operator pos:start="33:59" pos:end="33:59">+</operator> <name pos:start="33:61" pos:end="33:62">cx</name> <operator pos:start="33:64" pos:end="33:64">*</operator> <name pos:start="33:66" pos:end="33:68">len</name><operator pos:start="33:69" pos:end="33:69">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:71"><expr pos:start="35:13" pos:end="35:70"><name pos:start="35:13" pos:end="35:13">r</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:70"><name pos:start="35:17" pos:end="35:28">kvm_vm_ioctl</name><argument_list pos:start="35:29" pos:end="35:70">(<argument pos:start="35:30" pos:end="35:38"><expr pos:start="35:30" pos:end="35:38"><name pos:start="35:30" pos:end="35:38">kvm_state</name></expr></argument>, <argument pos:start="35:41" pos:end="35:62"><expr pos:start="35:41" pos:end="35:62"><name pos:start="35:41" pos:end="35:62">KVM_S390_SET_CMMA_BITS</name></expr></argument>, <argument pos:start="35:65" pos:end="35:69"><expr pos:start="35:65" pos:end="35:69"><operator pos:start="35:65" pos:end="35:65">&amp;</operator><name pos:start="35:66" pos:end="35:69">clog</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="43:13"><if pos:start="37:13" pos:end="43:13">if <condition pos:start="37:16" pos:end="37:18">(<expr pos:start="37:17" pos:end="37:17"><name pos:start="37:17" pos:end="37:17">r</name></expr>)</condition> <block pos:start="37:20" pos:end="43:13">{<block_content pos:start="39:17" pos:end="41:23">

                <expr_stmt pos:start="39:17" pos:end="39:80"><expr pos:start="39:17" pos:end="39:79"><call pos:start="39:17" pos:end="39:79"><name pos:start="39:17" pos:end="39:28">error_report</name><argument_list pos:start="39:29" pos:end="39:79">(<argument pos:start="39:30" pos:end="39:64"><expr pos:start="39:30" pos:end="39:64"><literal type="string" pos:start="39:30" pos:end="39:64">"KVM_S390_SET_CMMA_BITS failed: %s"</literal></expr></argument>, <argument pos:start="39:67" pos:end="39:78"><expr pos:start="39:67" pos:end="39:78"><call pos:start="39:67" pos:end="39:78"><name pos:start="39:67" pos:end="39:74">strerror</name><argument_list pos:start="39:75" pos:end="39:78">(<argument pos:start="39:76" pos:end="39:77"><expr pos:start="39:76" pos:end="39:77"><operator pos:start="39:76" pos:end="39:76">-</operator><name pos:start="39:77" pos:end="39:77">r</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="41:17" pos:end="41:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="47:9" pos:end="63:9"><if pos:start="47:9" pos:end="63:9">if <condition pos:start="47:12" pos:end="47:21">(<expr pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:14">cx</name> <operator pos:start="47:16" pos:end="47:16">&lt;</operator> <name pos:start="47:18" pos:end="47:20">max</name></expr>)</condition> <block pos:start="47:23" pos:end="63:9">{<block_content pos:start="49:13" pos:end="61:13">

            <expr_stmt pos:start="49:13" pos:end="49:32"><expr pos:start="49:13" pos:end="49:31"><name pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:16">clog</name><operator pos:start="49:17" pos:end="49:17">.</operator><name pos:start="49:18" pos:end="49:26">start_gfn</name></name> <operator pos:start="49:28" pos:end="49:28">=</operator> <name pos:start="49:30" pos:end="49:31">cx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:34"><expr pos:start="51:13" pos:end="51:33"><name pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:16">clog</name><operator pos:start="51:17" pos:end="51:17">.</operator><name pos:start="51:18" pos:end="51:22">count</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <name pos:start="51:26" pos:end="51:28">max</name> <operator pos:start="51:30" pos:end="51:30">-</operator> <name pos:start="51:32" pos:end="51:33">cx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:70"><expr pos:start="53:13" pos:end="53:69"><name pos:start="53:13" pos:end="53:23"><name pos:start="53:13" pos:end="53:16">clog</name><operator pos:start="53:17" pos:end="53:17">.</operator><name pos:start="53:18" pos:end="53:23">values</name></name> <operator pos:start="53:25" pos:end="53:25">=</operator> <operator pos:start="53:27" pos:end="53:27">(</operator><name pos:start="53:28" pos:end="53:35">uint64_t</name><operator pos:start="53:36" pos:end="53:36">)</operator><operator pos:start="53:37" pos:end="53:37">(</operator><name pos:start="53:38" pos:end="53:57"><name pos:start="53:38" pos:end="53:40">sas</name><operator pos:start="53:41" pos:end="53:42">-&gt;</operator><name pos:start="53:43" pos:end="53:57">incoming_buffer</name></name> <operator pos:start="53:59" pos:end="53:59">+</operator> <name pos:start="53:61" pos:end="53:62">cx</name> <operator pos:start="53:64" pos:end="53:64">*</operator> <name pos:start="53:66" pos:end="53:68">len</name><operator pos:start="53:69" pos:end="53:69">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:71"><expr pos:start="55:13" pos:end="55:70"><name pos:start="55:13" pos:end="55:13">r</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <call pos:start="55:17" pos:end="55:70"><name pos:start="55:17" pos:end="55:28">kvm_vm_ioctl</name><argument_list pos:start="55:29" pos:end="55:70">(<argument pos:start="55:30" pos:end="55:38"><expr pos:start="55:30" pos:end="55:38"><name pos:start="55:30" pos:end="55:38">kvm_state</name></expr></argument>, <argument pos:start="55:41" pos:end="55:62"><expr pos:start="55:41" pos:end="55:62"><name pos:start="55:41" pos:end="55:62">KVM_S390_SET_CMMA_BITS</name></expr></argument>, <argument pos:start="55:65" pos:end="55:69"><expr pos:start="55:65" pos:end="55:69"><operator pos:start="55:65" pos:end="55:65">&amp;</operator><name pos:start="55:66" pos:end="55:69">clog</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="61:13"><if pos:start="57:13" pos:end="61:13">if <condition pos:start="57:16" pos:end="57:18">(<expr pos:start="57:17" pos:end="57:17"><name pos:start="57:17" pos:end="57:17">r</name></expr>)</condition> <block pos:start="57:20" pos:end="61:13">{<block_content pos:start="59:17" pos:end="59:80">

                <expr_stmt pos:start="59:17" pos:end="59:80"><expr pos:start="59:17" pos:end="59:79"><call pos:start="59:17" pos:end="59:79"><name pos:start="59:17" pos:end="59:28">error_report</name><argument_list pos:start="59:29" pos:end="59:79">(<argument pos:start="59:30" pos:end="59:64"><expr pos:start="59:30" pos:end="59:64"><literal type="string" pos:start="59:30" pos:end="59:64">"KVM_S390_SET_CMMA_BITS failed: %s"</literal></expr></argument>, <argument pos:start="59:67" pos:end="59:78"><expr pos:start="59:67" pos:end="59:78"><call pos:start="59:67" pos:end="59:78"><name pos:start="59:67" pos:end="59:74">strerror</name><argument_list pos:start="59:75" pos:end="59:78">(<argument pos:start="59:76" pos:end="59:77"><expr pos:start="59:76" pos:end="59:77"><operator pos:start="59:76" pos:end="59:76">-</operator><name pos:start="59:77" pos:end="59:77">r</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:37"><expr pos:start="65:9" pos:end="65:36"><call pos:start="65:9" pos:end="65:36"><name pos:start="65:9" pos:end="65:14">g_free</name><argument_list pos:start="65:15" pos:end="65:36">(<argument pos:start="65:16" pos:end="65:35"><expr pos:start="65:16" pos:end="65:35"><name pos:start="65:16" pos:end="65:35"><name pos:start="65:16" pos:end="65:18">sas</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:35">incoming_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:36"><expr pos:start="67:9" pos:end="67:35"><name pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:11">sas</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:28">incoming_buffer</name></name> <operator pos:start="67:30" pos:end="67:30">=</operator> <name pos:start="67:32" pos:end="67:35">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
