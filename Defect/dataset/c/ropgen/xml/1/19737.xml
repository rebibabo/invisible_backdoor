<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19737.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">vmsvga_init</name><parameter_list pos:start="1:24" pos:end="3:70">(<parameter pos:start="1:25" pos:end="1:48"><decl pos:start="1:25" pos:end="1:48"><type pos:start="1:25" pos:end="1:48"><name pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:30">struct</name> <name pos:start="1:32" pos:end="1:45">vmsvga_state_s</name></name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:51"><decl pos:start="3:25" pos:end="3:51"><type pos:start="3:25" pos:end="3:51"><name pos:start="3:25" pos:end="3:36">MemoryRegion</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:51">address_space</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:69"><decl pos:start="3:54" pos:end="3:69"><type pos:start="3:54" pos:end="3:69"><name pos:start="3:54" pos:end="3:65">MemoryRegion</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:69">io</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:47">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">DisplaySurface</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:27">surface</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:40"><expr pos:start="11:5" pos:end="11:39"><name pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:19">scratch_size</name></name> <operator pos:start="11:21" pos:end="11:21">=</operator> <name pos:start="11:23" pos:end="11:39">SVGA_SCRATCH_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:47"><expr pos:start="13:5" pos:end="13:46"><name pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:14">scratch</name></name> <operator pos:start="13:16" pos:end="13:16">=</operator> <call pos:start="13:18" pos:end="13:46"><name pos:start="13:18" pos:end="13:25">g_malloc</name><argument_list pos:start="13:26" pos:end="13:46">(<argument pos:start="13:27" pos:end="13:45"><expr pos:start="13:27" pos:end="13:45"><name pos:start="13:27" pos:end="13:41"><name pos:start="13:27" pos:end="13:27">s</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:41">scratch_size</name></name> <operator pos:start="13:43" pos:end="13:43">*</operator> <literal type="number" pos:start="13:45" pos:end="13:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="23:61"><expr pos:start="17:5" pos:end="23:60"><name pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:10">vga</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:14">con</name></name> <operator pos:start="17:16" pos:end="17:16">=</operator> <call pos:start="17:18" pos:end="23:60"><name pos:start="17:18" pos:end="17:37">graphic_console_init</name><argument_list pos:start="17:38" pos:end="23:60">(<argument pos:start="17:39" pos:end="17:59"><expr pos:start="17:39" pos:end="17:59"><name pos:start="17:39" pos:end="17:59">vmsvga_update_display</name></expr></argument>,

                                      <argument pos:start="19:39" pos:end="19:63"><expr pos:start="19:39" pos:end="19:63"><name pos:start="19:39" pos:end="19:63">vmsvga_invalidate_display</name></expr></argument>,

                                      <argument pos:start="21:39" pos:end="21:56"><expr pos:start="21:39" pos:end="21:56"><name pos:start="21:39" pos:end="21:56">vmsvga_screen_dump</name></expr></argument>,

                                      <argument pos:start="23:39" pos:end="23:56"><expr pos:start="23:39" pos:end="23:56"><name pos:start="23:39" pos:end="23:56">vmsvga_text_update</name></expr></argument>, <argument pos:start="23:59" pos:end="23:59"><expr pos:start="23:59" pos:end="23:59"><name pos:start="23:59" pos:end="23:59">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:47"><expr pos:start="25:5" pos:end="25:46"><name pos:start="25:5" pos:end="25:11">surface</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:46"><name pos:start="25:15" pos:end="25:34">qemu_console_surface</name><argument_list pos:start="25:35" pos:end="25:46">(<argument pos:start="25:36" pos:end="25:45"><expr pos:start="25:36" pos:end="25:45"><name pos:start="25:36" pos:end="25:45"><name pos:start="25:36" pos:end="25:36">s</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:41">vga</name><operator pos:start="25:42" pos:end="25:42">.</operator><name pos:start="25:43" pos:end="25:45">con</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:34"><expr pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:16">fifo_size</name></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:33">SVGA_FIFO_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:70"><expr pos:start="31:5" pos:end="31:69"><call pos:start="31:5" pos:end="31:69"><name pos:start="31:5" pos:end="31:26">memory_region_init_ram</name><argument_list pos:start="31:27" pos:end="31:69">(<argument pos:start="31:28" pos:end="31:39"><expr pos:start="31:28" pos:end="31:39"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:39"><name pos:start="31:29" pos:end="31:29">s</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:39">fifo_ram</name></name></expr></argument>, <argument pos:start="31:42" pos:end="31:54"><expr pos:start="31:42" pos:end="31:54"><literal type="string" pos:start="31:42" pos:end="31:54">"vmsvga.fifo"</literal></expr></argument>, <argument pos:start="31:57" pos:end="31:68"><expr pos:start="31:57" pos:end="31:68"><name pos:start="31:57" pos:end="31:68"><name pos:start="31:57" pos:end="31:57">s</name><operator pos:start="31:58" pos:end="31:59">-&gt;</operator><name pos:start="31:60" pos:end="31:68">fifo_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><call pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:31">vmstate_register_ram_global</name><argument_list pos:start="33:32" pos:end="33:45">(<argument pos:start="33:33" pos:end="33:44"><expr pos:start="33:33" pos:end="33:44"><operator pos:start="33:33" pos:end="33:33">&amp;</operator><name pos:start="33:34" pos:end="33:44"><name pos:start="33:34" pos:end="33:34">s</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:44">fifo_ram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:58"><expr pos:start="35:5" pos:end="35:57"><name pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:15">fifo_ptr</name></name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:57"><name pos:start="35:19" pos:end="35:43">memory_region_get_ram_ptr</name><argument_list pos:start="35:44" pos:end="35:57">(<argument pos:start="35:45" pos:end="35:56"><expr pos:start="35:45" pos:end="35:56"><operator pos:start="35:45" pos:end="35:45">&amp;</operator><name pos:start="35:46" pos:end="35:56"><name pos:start="35:46" pos:end="35:46">s</name><operator pos:start="35:47" pos:end="35:48">-&gt;</operator><name pos:start="35:49" pos:end="35:56">fifo_ram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><call pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:19">vga_common_init</name><argument_list pos:start="39:20" pos:end="39:28">(<argument pos:start="39:21" pos:end="39:27"><expr pos:start="39:21" pos:end="39:27"><operator pos:start="39:21" pos:end="39:21">&amp;</operator><name pos:start="39:22" pos:end="39:27"><name pos:start="39:22" pos:end="39:22">s</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:27">vga</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:47"><expr pos:start="41:5" pos:end="41:46"><call pos:start="41:5" pos:end="41:46"><name pos:start="41:5" pos:end="41:12">vga_init</name><argument_list pos:start="41:13" pos:end="41:46">(<argument pos:start="41:14" pos:end="41:20"><expr pos:start="41:14" pos:end="41:20"><operator pos:start="41:14" pos:end="41:14">&amp;</operator><name pos:start="41:15" pos:end="41:20"><name pos:start="41:15" pos:end="41:15">s</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:20">vga</name></name></expr></argument>, <argument pos:start="41:23" pos:end="41:35"><expr pos:start="41:23" pos:end="41:35"><name pos:start="41:23" pos:end="41:35">address_space</name></expr></argument>, <argument pos:start="41:38" pos:end="41:39"><expr pos:start="41:38" pos:end="41:39"><name pos:start="41:38" pos:end="41:39">io</name></expr></argument>, <argument pos:start="41:42" pos:end="41:45"><expr pos:start="41:42" pos:end="41:45"><name pos:start="41:42" pos:end="41:45">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:60"><expr pos:start="43:5" pos:end="43:59"><call pos:start="43:5" pos:end="43:59"><name pos:start="43:5" pos:end="43:20">vmstate_register</name><argument_list pos:start="43:21" pos:end="43:59">(<argument pos:start="43:22" pos:end="43:25"><expr pos:start="43:22" pos:end="43:25"><name pos:start="43:22" pos:end="43:25">NULL</name></expr></argument>, <argument pos:start="43:28" pos:end="43:28"><expr pos:start="43:28" pos:end="43:28"><literal type="number" pos:start="43:28" pos:end="43:28">0</literal></expr></argument>, <argument pos:start="43:31" pos:end="43:49"><expr pos:start="43:31" pos:end="43:49"><operator pos:start="43:31" pos:end="43:31">&amp;</operator><name pos:start="43:32" pos:end="43:49">vmstate_vga_common</name></expr></argument>, <argument pos:start="43:52" pos:end="43:58"><expr pos:start="43:52" pos:end="43:58"><operator pos:start="43:52" pos:end="43:52">&amp;</operator><name pos:start="43:53" pos:end="43:58"><name pos:start="43:53" pos:end="43:53">s</name><operator pos:start="43:54" pos:end="43:55">-&gt;</operator><name pos:start="43:56" pos:end="43:58">vga</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="45:5" pos:end="47:68">/* Save some values here in case they are changed later.

     * This is suspicious and needs more though why it is needed. */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:47"><expr pos:start="49:5" pos:end="49:46"><name pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:12">depth</name></name> <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:46"><name pos:start="49:16" pos:end="49:37">surface_bits_per_pixel</name><argument_list pos:start="49:38" pos:end="49:46">(<argument pos:start="49:39" pos:end="49:45"><expr pos:start="49:39" pos:end="49:45"><name pos:start="49:39" pos:end="49:45">surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:47"><expr pos:start="51:5" pos:end="51:46"><name pos:start="51:5" pos:end="51:11"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:11">bypp</name></name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:46"><name pos:start="51:15" pos:end="51:37">surface_bytes_per_pixel</name><argument_list pos:start="51:38" pos:end="51:46">(<argument pos:start="51:39" pos:end="51:45"><expr pos:start="51:39" pos:end="51:45"><name pos:start="51:39" pos:end="51:45">surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
