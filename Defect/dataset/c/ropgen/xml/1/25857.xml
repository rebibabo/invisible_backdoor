<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25857.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">decode_block_params</name><parameter_list pos:start="1:32" pos:end="3:57">(<parameter pos:start="1:33" pos:end="1:47"><decl pos:start="1:33" pos:end="1:47"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:44">DiracContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:68"><decl pos:start="1:50" pos:end="1:68"><type pos:start="1:50" pos:end="1:65"><name pos:start="1:50" pos:end="1:59">DiracArith</name></type> <name pos:start="1:61" pos:end="1:68"><name pos:start="1:61" pos:end="1:65">arith</name><index pos:start="1:66" pos:end="1:68">[<expr pos:start="1:67" pos:end="1:67"><literal type="number" pos:start="1:67" pos:end="1:67">8</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:87"><decl pos:start="1:71" pos:end="1:87"><type pos:start="1:71" pos:end="1:87"><name pos:start="1:71" pos:end="1:80">DiracBlock</name> <modifier pos:start="1:82" pos:end="1:82">*</modifier></type><name pos:start="1:83" pos:end="1:87">block</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:42"><decl pos:start="3:33" pos:end="3:42"><type pos:start="3:33" pos:end="3:42"><name pos:start="3:33" pos:end="3:35">int</name></type> <name pos:start="3:37" pos:end="3:42">stride</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:49"><decl pos:start="3:45" pos:end="3:49"><type pos:start="3:45" pos:end="3:49"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:49">x</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:56"><decl pos:start="3:52" pos:end="3:56"><type pos:start="3:52" pos:end="3:56"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:56">y</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:9">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:76"><expr pos:start="11:5" pos:end="11:75"><name pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:9">block</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:14">ref</name></name>  <operator pos:start="11:17" pos:end="11:17">=</operator> <call pos:start="11:19" pos:end="11:75"><name pos:start="11:19" pos:end="11:33">pred_block_mode</name><argument_list pos:start="11:34" pos:end="11:75">(<argument pos:start="11:35" pos:end="11:39"><expr pos:start="11:35" pos:end="11:39"><name pos:start="11:35" pos:end="11:39">block</name></expr></argument>, <argument pos:start="11:42" pos:end="11:47"><expr pos:start="11:42" pos:end="11:47"><name pos:start="11:42" pos:end="11:47">stride</name></expr></argument>, <argument pos:start="11:50" pos:end="11:50"><expr pos:start="11:50" pos:end="11:50"><name pos:start="11:50" pos:end="11:50">x</name></expr></argument>, <argument pos:start="11:53" pos:end="11:53"><expr pos:start="11:53" pos:end="11:53"><name pos:start="11:53" pos:end="11:53">y</name></expr></argument>, <argument pos:start="11:56" pos:end="11:74"><expr pos:start="11:56" pos:end="11:74"><name pos:start="11:56" pos:end="11:74">DIRAC_REF_MASK_REF1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:61"><expr pos:start="13:5" pos:end="13:60"><name pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:9">block</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:14">ref</name></name> <operator pos:start="13:16" pos:end="13:17">^=</operator> <call pos:start="13:19" pos:end="13:60"><name pos:start="13:19" pos:end="13:37">dirac_get_arith_bit</name><argument_list pos:start="13:38" pos:end="13:60">(<argument pos:start="13:39" pos:end="13:43"><expr pos:start="13:39" pos:end="13:43"><name pos:start="13:39" pos:end="13:43">arith</name></expr></argument>, <argument pos:start="13:46" pos:end="13:59"><expr pos:start="13:46" pos:end="13:59"><name pos:start="13:46" pos:end="13:59">CTX_PMODE_REF1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:25">(<expr pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:19">num_refs</name></name> <operator pos:start="17:21" pos:end="17:22">==</operator> <literal type="number" pos:start="17:24" pos:end="17:24">2</literal></expr>)</condition> <block pos:start="17:27" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:70">

        <expr_stmt pos:start="19:9" pos:end="19:80"><expr pos:start="19:9" pos:end="19:79"><name pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:13">block</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:18">ref</name></name> <operator pos:start="19:20" pos:end="19:21">|=</operator> <call pos:start="19:23" pos:end="19:79"><name pos:start="19:23" pos:end="19:37">pred_block_mode</name><argument_list pos:start="19:38" pos:end="19:79">(<argument pos:start="19:39" pos:end="19:43"><expr pos:start="19:39" pos:end="19:43"><name pos:start="19:39" pos:end="19:43">block</name></expr></argument>, <argument pos:start="19:46" pos:end="19:51"><expr pos:start="19:46" pos:end="19:51"><name pos:start="19:46" pos:end="19:51">stride</name></expr></argument>, <argument pos:start="19:54" pos:end="19:54"><expr pos:start="19:54" pos:end="19:54"><name pos:start="19:54" pos:end="19:54">x</name></expr></argument>, <argument pos:start="19:57" pos:end="19:57"><expr pos:start="19:57" pos:end="19:57"><name pos:start="19:57" pos:end="19:57">y</name></expr></argument>, <argument pos:start="19:60" pos:end="19:78"><expr pos:start="19:60" pos:end="19:78"><name pos:start="19:60" pos:end="19:78">DIRAC_REF_MASK_REF2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:70"><expr pos:start="21:9" pos:end="21:69"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:13">block</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:18">ref</name></name> <operator pos:start="21:20" pos:end="21:21">^=</operator> <call pos:start="21:23" pos:end="21:64"><name pos:start="21:23" pos:end="21:41">dirac_get_arith_bit</name><argument_list pos:start="21:42" pos:end="21:64">(<argument pos:start="21:43" pos:end="21:47"><expr pos:start="21:43" pos:end="21:47"><name pos:start="21:43" pos:end="21:47">arith</name></expr></argument>, <argument pos:start="21:50" pos:end="21:63"><expr pos:start="21:50" pos:end="21:63"><name pos:start="21:50" pos:end="21:63">CTX_PMODE_REF2</name></expr></argument>)</argument_list></call> <operator pos:start="21:66" pos:end="21:67">&lt;&lt;</operator> <literal type="number" pos:start="21:69" pos:end="21:69">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="37:5"><if pos:start="27:5" pos:end="37:5">if <condition pos:start="27:8" pos:end="27:20">(<expr pos:start="27:9" pos:end="27:19"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:19"><name pos:start="27:10" pos:end="27:14">block</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:19">ref</name></name></expr>)</condition> <block pos:start="27:22" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:15">

        <expr_stmt pos:start="29:9" pos:end="29:43"><expr pos:start="29:9" pos:end="29:42"><call pos:start="29:9" pos:end="29:42"><name pos:start="29:9" pos:end="29:21">pred_block_dc</name><argument_list pos:start="29:22" pos:end="29:42">(<argument pos:start="29:23" pos:end="29:27"><expr pos:start="29:23" pos:end="29:27"><name pos:start="29:23" pos:end="29:27">block</name></expr></argument>, <argument pos:start="29:30" pos:end="29:35"><expr pos:start="29:30" pos:end="29:35"><name pos:start="29:30" pos:end="29:35">stride</name></expr></argument>, <argument pos:start="29:38" pos:end="29:38"><expr pos:start="29:38" pos:end="29:38"><name pos:start="29:38" pos:end="29:38">x</name></expr></argument>, <argument pos:start="29:41" pos:end="29:41"><expr pos:start="29:41" pos:end="29:41"><name pos:start="29:41" pos:end="29:41">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="31:9" pos:end="33:85">for <control pos:start="31:13" pos:end="31:31">(<init pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">i</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:26"><expr pos:start="31:21" pos:end="31:25"><name pos:start="31:21" pos:end="31:21">i</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <literal type="number" pos:start="31:25" pos:end="31:25">3</literal></expr>;</condition> <incr pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:28">i</name><operator pos:start="31:29" pos:end="31:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="33:13" pos:end="33:85"><block_content pos:start="33:13" pos:end="33:85">

            <expr_stmt pos:start="33:13" pos:end="33:85"><expr pos:start="33:13" pos:end="33:84"><name pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:17">block</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:20">u</name><operator pos:start="33:21" pos:end="33:21">.</operator><name pos:start="33:22" pos:end="33:23">dc</name><index pos:start="33:24" pos:end="33:26">[<expr pos:start="33:25" pos:end="33:25"><name pos:start="33:25" pos:end="33:25">i</name></expr>]</index></name> <operator pos:start="33:28" pos:end="33:29">+=</operator> <call pos:start="33:31" pos:end="33:84"><name pos:start="33:31" pos:end="33:49">dirac_get_arith_int</name><argument_list pos:start="33:50" pos:end="33:84">(<argument pos:start="33:51" pos:end="33:59"><expr pos:start="33:51" pos:end="33:59"><name pos:start="33:51" pos:end="33:55">arith</name><operator pos:start="33:56" pos:end="33:56">+</operator><literal type="number" pos:start="33:57" pos:end="33:58">1</literal><operator pos:start="33:58" pos:end="33:58">+</operator><name pos:start="33:59" pos:end="33:59">i</name></expr></argument>, <argument pos:start="33:62" pos:end="33:70"><expr pos:start="33:62" pos:end="33:70"><name pos:start="33:62" pos:end="33:70">CTX_DC_F1</name></expr></argument>, <argument pos:start="33:73" pos:end="33:83"><expr pos:start="33:73" pos:end="33:83"><name pos:start="33:73" pos:end="33:83">CTX_DC_DATA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:25">(<expr pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:24">globalmc_flag</name></name></expr>)</condition> <block pos:start="41:27" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:72">

        <expr_stmt pos:start="43:9" pos:end="43:82"><expr pos:start="43:9" pos:end="43:81"><name pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:13">block</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:18">ref</name></name> <operator pos:start="43:20" pos:end="43:21">|=</operator> <call pos:start="43:23" pos:end="43:81"><name pos:start="43:23" pos:end="43:37">pred_block_mode</name><argument_list pos:start="43:38" pos:end="43:81">(<argument pos:start="43:39" pos:end="43:43"><expr pos:start="43:39" pos:end="43:43"><name pos:start="43:39" pos:end="43:43">block</name></expr></argument>, <argument pos:start="43:46" pos:end="43:51"><expr pos:start="43:46" pos:end="43:51"><name pos:start="43:46" pos:end="43:51">stride</name></expr></argument>, <argument pos:start="43:54" pos:end="43:54"><expr pos:start="43:54" pos:end="43:54"><name pos:start="43:54" pos:end="43:54">x</name></expr></argument>, <argument pos:start="43:57" pos:end="43:57"><expr pos:start="43:57" pos:end="43:57"><name pos:start="43:57" pos:end="43:57">y</name></expr></argument>, <argument pos:start="43:60" pos:end="43:80"><expr pos:start="43:60" pos:end="43:80"><name pos:start="43:60" pos:end="43:80">DIRAC_REF_MASK_GLOBAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:72"><expr pos:start="45:9" pos:end="45:71"><name pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:13">block</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:18">ref</name></name> <operator pos:start="45:20" pos:end="45:21">^=</operator> <call pos:start="45:23" pos:end="45:66"><name pos:start="45:23" pos:end="45:41">dirac_get_arith_bit</name><argument_list pos:start="45:42" pos:end="45:66">(<argument pos:start="45:43" pos:end="45:47"><expr pos:start="45:43" pos:end="45:47"><name pos:start="45:43" pos:end="45:47">arith</name></expr></argument>, <argument pos:start="45:50" pos:end="45:65"><expr pos:start="45:50" pos:end="45:65"><name pos:start="45:50" pos:end="45:65">CTX_GLOBAL_BLOCK</name></expr></argument>)</argument_list></call> <operator pos:start="45:68" pos:end="45:69">&lt;&lt;</operator> <literal type="number" pos:start="45:71" pos:end="45:71">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="51:5" pos:end="69:9">for <control pos:start="51:9" pos:end="51:37">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:32"><expr pos:start="51:17" pos:end="51:31"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <name pos:start="51:21" pos:end="51:31"><name pos:start="51:21" pos:end="51:21">s</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:31">num_refs</name></name></expr>;</condition> <incr pos:start="51:34" pos:end="51:36"><expr pos:start="51:34" pos:end="51:36"><name pos:start="51:34" pos:end="51:34">i</name><operator pos:start="51:35" pos:end="51:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="53:9" pos:end="69:9"><block_content pos:start="53:9" pos:end="69:9">

        <if_stmt pos:start="53:9" pos:end="69:9"><if pos:start="53:9" pos:end="69:9">if <condition pos:start="53:12" pos:end="53:31">(<expr pos:start="53:13" pos:end="53:30"><name pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:17">block</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:22">ref</name></name> <operator pos:start="53:24" pos:end="53:24">&amp;</operator> <operator pos:start="53:26" pos:end="53:26">(</operator><name pos:start="53:27" pos:end="53:27">i</name><operator pos:start="53:28" pos:end="53:28">+</operator><literal type="number" pos:start="53:29" pos:end="53:29">1</literal><operator pos:start="53:30" pos:end="53:30">)</operator></expr>)</condition> <block pos:start="53:33" pos:end="69:9">{<block_content pos:start="55:13" pos:end="67:13">

            <if_stmt pos:start="55:13" pos:end="67:13"><if pos:start="55:13" pos:end="59:13">if <condition pos:start="55:16" pos:end="55:51">(<expr pos:start="55:17" pos:end="55:50"><name pos:start="55:17" pos:end="55:26"><name pos:start="55:17" pos:end="55:21">block</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:26">ref</name></name> <operator pos:start="55:28" pos:end="55:28">&amp;</operator> <name pos:start="55:30" pos:end="55:50">DIRAC_REF_MASK_GLOBAL</name></expr>)</condition> <block pos:start="55:53" pos:end="59:13">{<block_content pos:start="57:17" pos:end="57:45">

                <expr_stmt pos:start="57:17" pos:end="57:45"><expr pos:start="57:17" pos:end="57:44"><call pos:start="57:17" pos:end="57:44"><name pos:start="57:17" pos:end="57:25">global_mv</name><argument_list pos:start="57:26" pos:end="57:44">(<argument pos:start="57:27" pos:end="57:27"><expr pos:start="57:27" pos:end="57:27"><name pos:start="57:27" pos:end="57:27">s</name></expr></argument>, <argument pos:start="57:30" pos:end="57:34"><expr pos:start="57:30" pos:end="57:34"><name pos:start="57:30" pos:end="57:34">block</name></expr></argument>, <argument pos:start="57:37" pos:end="57:37"><expr pos:start="57:37" pos:end="57:37"><name pos:start="57:37" pos:end="57:37">x</name></expr></argument>, <argument pos:start="57:40" pos:end="57:40"><expr pos:start="57:40" pos:end="57:40"><name pos:start="57:40" pos:end="57:40">y</name></expr></argument>, <argument pos:start="57:43" pos:end="57:43"><expr pos:start="57:43" pos:end="57:43"><name pos:start="57:43" pos:end="57:43">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="59:15" pos:end="67:13">else <block pos:start="59:20" pos:end="67:13">{<block_content pos:start="61:17" pos:end="65:100">

                <expr_stmt pos:start="61:17" pos:end="61:48"><expr pos:start="61:17" pos:end="61:47"><call pos:start="61:17" pos:end="61:47"><name pos:start="61:17" pos:end="61:23">pred_mv</name><argument_list pos:start="61:24" pos:end="61:47">(<argument pos:start="61:25" pos:end="61:29"><expr pos:start="61:25" pos:end="61:29"><name pos:start="61:25" pos:end="61:29">block</name></expr></argument>, <argument pos:start="61:32" pos:end="61:37"><expr pos:start="61:32" pos:end="61:37"><name pos:start="61:32" pos:end="61:37">stride</name></expr></argument>, <argument pos:start="61:40" pos:end="61:40"><expr pos:start="61:40" pos:end="61:40"><name pos:start="61:40" pos:end="61:40">x</name></expr></argument>, <argument pos:start="61:43" pos:end="61:43"><expr pos:start="61:43" pos:end="61:43"><name pos:start="61:43" pos:end="61:43">y</name></expr></argument>, <argument pos:start="61:46" pos:end="61:46"><expr pos:start="61:46" pos:end="61:46"><name pos:start="61:46" pos:end="61:46">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:100"><expr pos:start="63:17" pos:end="63:99"><name pos:start="63:17" pos:end="63:33"><name pos:start="63:17" pos:end="63:21">block</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:24">u</name><operator pos:start="63:25" pos:end="63:25">.</operator><name pos:start="63:26" pos:end="63:27">mv</name><index pos:start="63:28" pos:end="63:30">[<expr pos:start="63:29" pos:end="63:29"><name pos:start="63:29" pos:end="63:29">i</name></expr>]</index><index pos:start="63:31" pos:end="63:33">[<expr pos:start="63:32" pos:end="63:32"><literal type="number" pos:start="63:32" pos:end="63:32">0</literal></expr>]</index></name> <operator pos:start="63:35" pos:end="63:36">+=</operator> <call pos:start="63:38" pos:end="63:99"><name pos:start="63:38" pos:end="63:56">dirac_get_arith_int</name><argument_list pos:start="63:57" pos:end="63:99">(<argument pos:start="63:58" pos:end="63:74"><expr pos:start="63:58" pos:end="63:74"><name pos:start="63:58" pos:end="63:62">arith</name> <operator pos:start="63:64" pos:end="63:64">+</operator> <literal type="number" pos:start="63:66" pos:end="63:68">4</literal> <operator pos:start="63:68" pos:end="63:68">+</operator> <literal type="number" pos:start="63:70" pos:end="63:70">2</literal> <operator pos:start="63:72" pos:end="63:72">*</operator> <name pos:start="63:74" pos:end="63:74">i</name></expr></argument>, <argument pos:start="63:77" pos:end="63:85"><expr pos:start="63:77" pos:end="63:85"><name pos:start="63:77" pos:end="63:85">CTX_MV_F1</name></expr></argument>, <argument pos:start="63:88" pos:end="63:98"><expr pos:start="63:88" pos:end="63:98"><name pos:start="63:88" pos:end="63:98">CTX_MV_DATA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:100"><expr pos:start="65:17" pos:end="65:99"><name pos:start="65:17" pos:end="65:33"><name pos:start="65:17" pos:end="65:21">block</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:24">u</name><operator pos:start="65:25" pos:end="65:25">.</operator><name pos:start="65:26" pos:end="65:27">mv</name><index pos:start="65:28" pos:end="65:30">[<expr pos:start="65:29" pos:end="65:29"><name pos:start="65:29" pos:end="65:29">i</name></expr>]</index><index pos:start="65:31" pos:end="65:33">[<expr pos:start="65:32" pos:end="65:32"><literal type="number" pos:start="65:32" pos:end="65:32">1</literal></expr>]</index></name> <operator pos:start="65:35" pos:end="65:36">+=</operator> <call pos:start="65:38" pos:end="65:99"><name pos:start="65:38" pos:end="65:56">dirac_get_arith_int</name><argument_list pos:start="65:57" pos:end="65:99">(<argument pos:start="65:58" pos:end="65:74"><expr pos:start="65:58" pos:end="65:74"><name pos:start="65:58" pos:end="65:62">arith</name> <operator pos:start="65:64" pos:end="65:64">+</operator> <literal type="number" pos:start="65:66" pos:end="65:68">5</literal> <operator pos:start="65:68" pos:end="65:68">+</operator> <literal type="number" pos:start="65:70" pos:end="65:70">2</literal> <operator pos:start="65:72" pos:end="65:72">*</operator> <name pos:start="65:74" pos:end="65:74">i</name></expr></argument>, <argument pos:start="65:77" pos:end="65:85"><expr pos:start="65:77" pos:end="65:85"><name pos:start="65:77" pos:end="65:85">CTX_MV_F1</name></expr></argument>, <argument pos:start="65:88" pos:end="65:98"><expr pos:start="65:88" pos:end="65:98"><name pos:start="65:88" pos:end="65:98">CTX_MV_DATA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></for>

</block_content>}</block></function>
</unit>
