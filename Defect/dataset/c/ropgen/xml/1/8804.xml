<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8804.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:14"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">AVStream</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:29">avformat_new_stream</name><parameter_list pos:start="1:30" pos:end="1:67">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:66"><decl pos:start="1:51" pos:end="1:66"><type pos:start="1:51" pos:end="1:66"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:63">AVCodec</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:66">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:14">{<block_content pos:start="5:5" pos:end="119:14">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier><modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:22">streams</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="16:80"><if pos:start="13:5" pos:end="16:80">if <condition pos:start="13:8" pos:end="13:50">(<expr pos:start="13:9" pos:end="13:49"><name pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:21">nb_streams</name></name> <operator pos:start="13:23" pos:end="13:24">&gt;=</operator> <name pos:start="13:26" pos:end="13:32">INT_MAX</name><operator pos:start="13:33" pos:end="13:33">/</operator><sizeof pos:start="13:34" pos:end="13:49">sizeof<argument_list pos:start="13:40" pos:end="13:49">(<argument pos:start="13:41" pos:end="13:48"><expr pos:start="13:41" pos:end="13:48"><operator pos:start="13:41" pos:end="13:41">*</operator><name pos:start="13:42" pos:end="13:48">streams</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="16:5" pos:end="16:80"><block_content pos:start="16:5" pos:end="16:80">


    <expr_stmt pos:start="16:5" pos:end="16:80"><expr pos:start="16:5" pos:end="16:79"><name pos:start="16:5" pos:end="16:11">streams</name> <operator pos:start="16:13" pos:end="16:13">=</operator> <call pos:start="16:15" pos:end="16:79"><name pos:start="16:15" pos:end="16:30">av_realloc_array</name><argument_list pos:start="16:31" pos:end="16:79">(<argument pos:start="16:32" pos:end="16:41"><expr pos:start="16:32" pos:end="16:41"><name pos:start="16:32" pos:end="16:41"><name pos:start="16:32" pos:end="16:32">s</name><operator pos:start="16:33" pos:end="16:34">-&gt;</operator><name pos:start="16:35" pos:end="16:41">streams</name></name></expr></argument>, <argument pos:start="16:44" pos:end="16:60"><expr pos:start="16:44" pos:end="16:60"><name pos:start="16:44" pos:end="16:56"><name pos:start="16:44" pos:end="16:44">s</name><operator pos:start="16:45" pos:end="16:46">-&gt;</operator><name pos:start="16:47" pos:end="16:56">nb_streams</name></name> <operator pos:start="16:58" pos:end="16:58">+</operator> <literal type="number" pos:start="16:60" pos:end="16:60">1</literal></expr></argument>, <argument pos:start="16:63" pos:end="16:78"><expr pos:start="16:63" pos:end="16:78"><sizeof pos:start="16:63" pos:end="16:78">sizeof<argument_list pos:start="16:69" pos:end="16:78">(<argument pos:start="16:70" pos:end="16:77"><expr pos:start="16:70" pos:end="16:77"><operator pos:start="16:70" pos:end="16:70">*</operator><name pos:start="16:71" pos:end="16:77">streams</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="18:5" pos:end="21:25"><if pos:start="18:5" pos:end="21:25">if <condition pos:start="18:8" pos:end="18:17">(<expr pos:start="18:9" pos:end="18:16"><operator pos:start="18:9" pos:end="18:9">!</operator><name pos:start="18:10" pos:end="18:16">streams</name></expr>)</condition><block type="pseudo" pos:start="21:5" pos:end="21:25"><block_content pos:start="21:5" pos:end="21:25">


    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:14">streams</name></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:24">streams</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:38"><expr pos:start="25:5" pos:end="25:37"><name pos:start="25:5" pos:end="25:6">st</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:37"><name pos:start="25:10" pos:end="25:19">av_mallocz</name><argument_list pos:start="25:20" pos:end="25:37">(<argument pos:start="25:21" pos:end="25:36"><expr pos:start="25:21" pos:end="25:36"><sizeof pos:start="25:21" pos:end="25:36">sizeof<argument_list pos:start="25:27" pos:end="25:36">(<argument pos:start="25:28" pos:end="25:35"><expr pos:start="25:28" pos:end="25:35"><name pos:start="25:28" pos:end="25:35">AVStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="119:14"><if pos:start="27:5" pos:end="119:14">if <condition pos:start="27:8" pos:end="27:12">(<expr pos:start="27:9" pos:end="27:11"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:11">st</name></expr>)</condition><block type="pseudo" pos:start="30:5" pos:end="119:14"><block_content pos:start="30:5" pos:end="119:14">


    <if_stmt pos:start="30:5" pos:end="119:14"><if pos:start="30:5" pos:end="119:14">if <condition pos:start="30:8" pos:end="30:52">(<expr pos:start="30:9" pos:end="30:51"><operator pos:start="30:9" pos:end="30:9">!</operator><operator pos:start="30:10" pos:end="30:10">(</operator><name pos:start="30:11" pos:end="30:18"><name pos:start="30:11" pos:end="30:12">st</name><operator pos:start="30:13" pos:end="30:14">-&gt;</operator><name pos:start="30:15" pos:end="30:18">info</name></name> <operator pos:start="30:20" pos:end="30:20">=</operator> <call pos:start="30:22" pos:end="30:50"><name pos:start="30:22" pos:end="30:31">av_mallocz</name><argument_list pos:start="30:32" pos:end="30:50">(<argument pos:start="30:33" pos:end="30:49"><expr pos:start="30:33" pos:end="30:49"><sizeof pos:start="30:33" pos:end="30:49">sizeof<argument_list pos:start="30:39" pos:end="30:49">(<argument pos:start="30:40" pos:end="30:48"><expr pos:start="30:40" pos:end="30:48"><operator pos:start="30:40" pos:end="30:40">*</operator><name pos:start="30:41" pos:end="30:48"><name pos:start="30:41" pos:end="30:42">st</name><operator pos:start="30:43" pos:end="30:44">-&gt;</operator><name pos:start="30:45" pos:end="30:48">info</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="30:51" pos:end="30:51">)</operator></expr>)</condition> <block pos:start="30:54" pos:end="119:14">{<block_content pos:start="35:5" pos:end="119:14">




    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:6">st</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:12">info</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:22">last_dts</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <name pos:start="35:26" pos:end="35:39">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:42"><expr pos:start="39:5" pos:end="39:41"><name pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:6">st</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:13">codec</name></name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:41"><name pos:start="39:17" pos:end="39:38">avcodec_alloc_context3</name><argument_list pos:start="39:39" pos:end="39:41">(<argument pos:start="39:40" pos:end="39:40"><expr pos:start="39:40" pos:end="39:40"><name pos:start="39:40" pos:end="39:40">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>






    <if_stmt pos:start="46:5" pos:end="119:14"><if pos:start="46:5" pos:end="119:14">if <condition pos:start="46:8" pos:end="46:19">(<expr pos:start="46:9" pos:end="46:18"><name pos:start="46:9" pos:end="46:18"><name pos:start="46:9" pos:end="46:9">s</name><operator pos:start="46:10" pos:end="46:11">-&gt;</operator><name pos:start="46:12" pos:end="46:18">iformat</name></name></expr>)</condition> <block pos:start="46:21" pos:end="119:14">{<block_content pos:start="50:9" pos:end="119:14">

        <comment type="block" pos:start="48:9" pos:end="48:44">/* no default bitrate if decoding */</comment>

        <expr_stmt pos:start="50:9" pos:end="50:32"><expr pos:start="50:9" pos:end="50:31"><name pos:start="50:9" pos:end="50:27"><name pos:start="50:9" pos:end="50:10">st</name><operator pos:start="50:11" pos:end="50:12">-&gt;</operator><name pos:start="50:13" pos:end="50:17">codec</name><operator pos:start="50:18" pos:end="50:19">-&gt;</operator><name pos:start="50:20" pos:end="50:27">bit_rate</name></name> <operator pos:start="50:29" pos:end="50:29">=</operator> <literal type="number" pos:start="50:31" pos:end="50:31">0</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="54:9" pos:end="54:46">/* default pts setting is MPEG-like */</comment>

        <expr_stmt pos:start="56:9" pos:end="56:46"><expr pos:start="56:9" pos:end="56:45"><call pos:start="56:9" pos:end="56:45"><name pos:start="56:9" pos:end="56:27">avpriv_set_pts_info</name><argument_list pos:start="56:28" pos:end="56:45">(<argument pos:start="56:29" pos:end="56:30"><expr pos:start="56:29" pos:end="56:30"><name pos:start="56:29" pos:end="56:30">st</name></expr></argument>, <argument pos:start="56:33" pos:end="56:34"><expr pos:start="56:33" pos:end="56:34"><literal type="number" pos:start="56:33" pos:end="56:34">33</literal></expr></argument>, <argument pos:start="56:37" pos:end="56:37"><expr pos:start="56:37" pos:end="56:37"><literal type="number" pos:start="56:37" pos:end="56:37">1</literal></expr></argument>, <argument pos:start="56:40" pos:end="56:44"><expr pos:start="56:40" pos:end="56:44"><literal type="number" pos:start="56:40" pos:end="56:44">90000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="61:5" pos:end="61:35"><expr pos:start="61:5" pos:end="61:34"><name pos:start="61:5" pos:end="61:13"><name pos:start="61:5" pos:end="61:6">st</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:13">index</name></name>      <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:34"><name pos:start="61:22" pos:end="61:22">s</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:34">nb_streams</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:36"><expr pos:start="63:5" pos:end="63:35"><name pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:6">st</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:18">start_time</name></name> <operator pos:start="63:20" pos:end="63:20">=</operator> <name pos:start="63:22" pos:end="63:35">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:36"><expr pos:start="65:5" pos:end="65:35"><name pos:start="65:5" pos:end="65:16"><name pos:start="65:5" pos:end="65:6">st</name><operator pos:start="65:7" pos:end="65:8">-&gt;</operator><name pos:start="65:9" pos:end="65:16">duration</name></name>   <operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:35">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <comment type="block" pos:start="67:5" pos:end="73:67">/* we set the current DTS to 0 so that formats without any timestamps

     * but durations get some timestamps, formats with some unknown

     * timestamps have their first few packets buffered and the

     * timestamps corrected before they are returned to the user */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:58"><expr pos:start="75:5" pos:end="75:57"><name pos:start="75:5" pos:end="75:15"><name pos:start="75:5" pos:end="75:6">st</name><operator pos:start="75:7" pos:end="75:8">-&gt;</operator><name pos:start="75:9" pos:end="75:15">cur_dts</name></name>       <operator pos:start="75:23" pos:end="75:23">=</operator> <ternary pos:start="75:25" pos:end="75:57"><condition pos:start="75:25" pos:end="75:36"><expr pos:start="75:25" pos:end="75:34"><name pos:start="75:25" pos:end="75:34"><name pos:start="75:25" pos:end="75:25">s</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:34">iformat</name></name></expr> ?</condition><then pos:start="75:38" pos:end="75:53"> <expr pos:start="75:38" pos:end="75:53"><name pos:start="75:38" pos:end="75:53">RELATIVE_TS_BASE</name></expr> </then><else pos:start="75:55" pos:end="75:57">: <expr pos:start="75:57" pos:end="75:57"><literal type="number" pos:start="75:57" pos:end="75:57">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:39"><expr pos:start="77:5" pos:end="77:38"><name pos:start="77:5" pos:end="77:17"><name pos:start="77:5" pos:end="77:6">st</name><operator pos:start="77:7" pos:end="77:8">-&gt;</operator><name pos:start="77:9" pos:end="77:17">first_dts</name></name>     <operator pos:start="77:23" pos:end="77:23">=</operator> <name pos:start="77:25" pos:end="77:38">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:42"><expr pos:start="79:5" pos:end="79:41"><name pos:start="79:5" pos:end="79:21"><name pos:start="79:5" pos:end="79:6">st</name><operator pos:start="79:7" pos:end="79:8">-&gt;</operator><name pos:start="79:9" pos:end="79:21">probe_packets</name></name> <operator pos:start="79:23" pos:end="79:23">=</operator> <name pos:start="79:25" pos:end="79:41">MAX_PROBE_PACKETS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:44"><expr pos:start="81:5" pos:end="81:43"><name pos:start="81:5" pos:end="81:26"><name pos:start="81:5" pos:end="81:6">st</name><operator pos:start="81:7" pos:end="81:8">-&gt;</operator><name pos:start="81:9" pos:end="81:26">pts_wrap_reference</name></name> <operator pos:start="81:28" pos:end="81:28">=</operator> <name pos:start="81:30" pos:end="81:43">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:47"><expr pos:start="83:5" pos:end="83:46"><name pos:start="83:5" pos:end="83:25"><name pos:start="83:5" pos:end="83:6">st</name><operator pos:start="83:7" pos:end="83:8">-&gt;</operator><name pos:start="83:9" pos:end="83:25">pts_wrap_behavior</name></name> <operator pos:start="83:27" pos:end="83:27">=</operator> <name pos:start="83:29" pos:end="83:46">AV_PTS_WRAP_IGNORE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:37"><expr pos:start="87:5" pos:end="87:36"><name pos:start="87:5" pos:end="87:19"><name pos:start="87:5" pos:end="87:6">st</name><operator pos:start="87:7" pos:end="87:8">-&gt;</operator><name pos:start="87:9" pos:end="87:19">last_IP_pts</name></name> <operator pos:start="87:21" pos:end="87:21">=</operator> <name pos:start="87:23" pos:end="87:36">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:50"><expr pos:start="89:5" pos:end="89:49"><name pos:start="89:5" pos:end="89:32"><name pos:start="89:5" pos:end="89:6">st</name><operator pos:start="89:7" pos:end="89:8">-&gt;</operator><name pos:start="89:9" pos:end="89:32">last_dts_for_order_check</name></name> <operator pos:start="89:34" pos:end="89:34">=</operator> <name pos:start="89:36" pos:end="89:49">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <for pos:start="91:5" pos:end="93:43">for <control pos:start="91:9" pos:end="91:47">(<init pos:start="91:10" pos:end="91:15"><expr pos:start="91:10" pos:end="91:14"><name pos:start="91:10" pos:end="91:10">i</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <literal type="number" pos:start="91:14" pos:end="91:14">0</literal></expr>;</init> <condition pos:start="91:17" pos:end="91:42"><expr pos:start="91:17" pos:end="91:41"><name pos:start="91:17" pos:end="91:17">i</name> <operator pos:start="91:19" pos:end="91:19">&lt;</operator> <name pos:start="91:21" pos:end="91:37">MAX_REORDER_DELAY</name> <operator pos:start="91:39" pos:end="91:39">+</operator> <literal type="number" pos:start="91:41" pos:end="91:41">1</literal></expr>;</condition> <incr pos:start="91:44" pos:end="91:46"><expr pos:start="91:44" pos:end="91:46"><name pos:start="91:44" pos:end="91:44">i</name><operator pos:start="91:45" pos:end="91:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="93:9" pos:end="93:43"><block_content pos:start="93:9" pos:end="93:43">

        <expr_stmt pos:start="93:9" pos:end="93:43"><expr pos:start="93:9" pos:end="93:42"><name pos:start="93:9" pos:end="93:25"><name pos:start="93:9" pos:end="93:10">st</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:22">pts_buffer</name><index pos:start="93:23" pos:end="93:25">[<expr pos:start="93:24" pos:end="93:24"><name pos:start="93:24" pos:end="93:24">i</name></expr>]</index></name> <operator pos:start="93:27" pos:end="93:27">=</operator> <name pos:start="93:29" pos:end="93:42">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="97:5" pos:end="102:0"><expr pos:start="97:5" pos:end="97:51"><name pos:start="97:5" pos:end="97:27"><name pos:start="97:5" pos:end="97:6">st</name><operator pos:start="97:7" pos:end="97:8">-&gt;</operator><name pos:start="97:9" pos:end="97:27">sample_aspect_ratio</name></name> <operator pos:start="97:29" pos:end="97:29">=</operator> <operator pos:start="97:31" pos:end="97:31">(</operator><name pos:start="97:32" pos:end="97:41">AVRational</name><operator pos:start="97:42" pos:end="97:42">)</operator> <block pos:start="97:44" pos:end="97:51">{ <expr pos:start="97:46" pos:end="97:46"><literal type="number" pos:start="97:46" pos:end="97:46">0</literal></expr>, <expr pos:start="97:49" pos:end="97:49"><literal type="number" pos:start="97:49" pos:end="97:49">1</literal></expr> }</block></expr>;</expr_stmt>



<cpp:if pos:start="101:1" pos:end="101:23">#<cpp:directive pos:start="101:2" pos:end="101:3">if</cpp:directive> <expr pos:start="101:5" pos:end="101:23"><name pos:start="101:5" pos:end="101:23">FF_API_R_FRAME_RATE</name></expr></cpp:if>

    <expr_stmt pos:start="103:5" pos:end="106:0"><expr pos:start="103:5" pos:end="103:44"><name pos:start="103:5" pos:end="103:22"><name pos:start="103:5" pos:end="103:6">st</name><operator pos:start="103:7" pos:end="103:8">-&gt;</operator><name pos:start="103:9" pos:end="103:12">info</name><operator pos:start="103:13" pos:end="103:14">-&gt;</operator><name pos:start="103:15" pos:end="103:22">last_dts</name></name>      <operator pos:start="103:29" pos:end="103:29">=</operator> <name pos:start="103:31" pos:end="103:44">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

<cpp:endif pos:start="105:1" pos:end="105:6">#<cpp:directive pos:start="105:2" pos:end="105:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="107:5" pos:end="107:45"><expr pos:start="107:5" pos:end="107:44"><name pos:start="107:5" pos:end="107:27"><name pos:start="107:5" pos:end="107:6">st</name><operator pos:start="107:7" pos:end="107:8">-&gt;</operator><name pos:start="107:9" pos:end="107:12">info</name><operator pos:start="107:13" pos:end="107:14">-&gt;</operator><name pos:start="107:15" pos:end="107:27">fps_first_dts</name></name> <operator pos:start="107:29" pos:end="107:29">=</operator> <name pos:start="107:31" pos:end="107:44">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:45"><expr pos:start="109:5" pos:end="109:44"><name pos:start="109:5" pos:end="109:26"><name pos:start="109:5" pos:end="109:6">st</name><operator pos:start="109:7" pos:end="109:8">-&gt;</operator><name pos:start="109:9" pos:end="109:12">info</name><operator pos:start="109:13" pos:end="109:14">-&gt;</operator><name pos:start="109:15" pos:end="109:26">fps_last_dts</name></name>  <operator pos:start="109:29" pos:end="109:29">=</operator> <name pos:start="109:31" pos:end="109:44">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:71"><expr pos:start="113:5" pos:end="113:70"><name pos:start="113:5" pos:end="113:31"><name pos:start="113:5" pos:end="113:6">st</name><operator pos:start="113:7" pos:end="113:8">-&gt;</operator><name pos:start="113:9" pos:end="113:31">inject_global_side_data</name></name> <operator pos:start="113:33" pos:end="113:33">=</operator> <name pos:start="113:35" pos:end="113:70"><name pos:start="113:35" pos:end="113:35">s</name><operator pos:start="113:36" pos:end="113:37">-&gt;</operator><name pos:start="113:38" pos:end="113:45">internal</name><operator pos:start="113:46" pos:end="113:47">-&gt;</operator><name pos:start="113:48" pos:end="113:70">inject_global_side_data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:37"><expr pos:start="117:5" pos:end="117:36"><name pos:start="117:5" pos:end="117:31"><name pos:start="117:5" pos:end="117:5">s</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:14">streams</name><index pos:start="117:15" pos:end="117:31">[<expr pos:start="117:16" pos:end="117:30"><name pos:start="117:16" pos:end="117:28"><name pos:start="117:16" pos:end="117:16">s</name><operator pos:start="117:17" pos:end="117:18">-&gt;</operator><name pos:start="117:19" pos:end="117:28">nb_streams</name></name><operator pos:start="117:29" pos:end="117:30">++</operator></expr>]</index></name> <operator pos:start="117:33" pos:end="117:33">=</operator> <name pos:start="117:35" pos:end="117:36">st</name></expr>;</expr_stmt>

    <return pos:start="119:5" pos:end="119:14">return <expr pos:start="119:12" pos:end="119:13"><name pos:start="119:12" pos:end="119:13">st</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
