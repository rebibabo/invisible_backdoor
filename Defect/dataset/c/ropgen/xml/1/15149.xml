<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15149.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">do_decode</name><parameter_list pos:start="1:21" pos:end="1:58">(<parameter pos:start="1:22" pos:end="1:42"><decl pos:start="1:22" pos:end="1:42"><type pos:start="1:22" pos:end="1:42"><name pos:start="1:22" pos:end="1:35">AVCodecContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:42">avctx</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:52">AVPacket</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:13">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">got_frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:55"><expr pos:start="11:5" pos:end="11:54"><call pos:start="11:5" pos:end="11:54"><name pos:start="11:5" pos:end="11:14">av_assert0</name><argument_list pos:start="11:15" pos:end="11:54">(<argument pos:start="11:16" pos:end="11:53"><expr pos:start="11:16" pos:end="11:53"><operator pos:start="11:16" pos:end="11:16">!</operator><name pos:start="11:17" pos:end="11:53"><name pos:start="11:17" pos:end="11:21">avctx</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:31">internal</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:45">buffer_frame</name><operator pos:start="11:46" pos:end="11:47">-&gt;</operator><name pos:start="11:48" pos:end="11:50">buf</name><index pos:start="11:51" pos:end="11:53">[<expr pos:start="11:52" pos:end="11:52"><literal type="number" pos:start="11:52" pos:end="11:52">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="17:42"><if pos:start="15:5" pos:end="17:42">if <condition pos:start="15:8" pos:end="15:13">(<expr pos:start="15:9" pos:end="15:12"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:12">pkt</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:42"><block_content pos:start="17:9" pos:end="17:42">

        <expr_stmt pos:start="17:9" pos:end="17:42"><expr pos:start="17:9" pos:end="17:41"><name pos:start="17:9" pos:end="17:11">pkt</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:41"><name pos:start="17:15" pos:end="17:19">avctx</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:29">internal</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:41">buffer_pkt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="21:5" pos:end="21:80">// This is the lesser evil. The field is for compatibility with legacy users</comment>

    <comment type="line" pos:start="23:5" pos:end="23:77">// of the legacy API, and users using the new API should not be forced to</comment>

    <comment type="line" pos:start="25:5" pos:end="25:34">// even know about this field.</comment>

    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:9">avctx</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:28">refcounted_frames</name></name> <operator pos:start="27:30" pos:end="27:30">=</operator> <literal type="number" pos:start="27:32" pos:end="27:32">1</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="31:5" pos:end="31:80">// Some codecs (at least wma lossless) will crash when feeding drain packets</comment>

    <comment type="line" pos:start="33:5" pos:end="33:30">// after EOF was signaled.</comment>

    <if_stmt pos:start="35:5" pos:end="37:27"><if pos:start="35:5" pos:end="37:27">if <condition pos:start="35:8" pos:end="35:39">(<expr pos:start="35:9" pos:end="35:38"><name pos:start="35:9" pos:end="35:38"><name pos:start="35:9" pos:end="35:13">avctx</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:23">internal</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:38">draining_done</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:27"><block_content pos:start="37:9" pos:end="37:27">

        <return pos:start="37:9" pos:end="37:27">return <expr pos:start="37:16" pos:end="37:26"><name pos:start="37:16" pos:end="37:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="61:5"><if pos:start="41:5" pos:end="51:5">if <condition pos:start="41:8" pos:end="41:48">(<expr pos:start="41:9" pos:end="41:47"><name pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:13">avctx</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:25">codec_type</name></name> <operator pos:start="41:27" pos:end="41:28">==</operator> <name pos:start="41:30" pos:end="41:47">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="41:50" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:28">

        <expr_stmt pos:start="43:9" pos:end="45:53"><expr pos:start="43:9" pos:end="45:52"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="45:52"><name pos:start="43:15" pos:end="43:35">avcodec_decode_video2</name><argument_list pos:start="43:36" pos:end="45:52">(<argument pos:start="43:37" pos:end="43:41"><expr pos:start="43:37" pos:end="43:41"><name pos:start="43:37" pos:end="43:41">avctx</name></expr></argument>, <argument pos:start="43:44" pos:end="43:72"><expr pos:start="43:44" pos:end="43:72"><name pos:start="43:44" pos:end="43:72"><name pos:start="43:44" pos:end="43:48">avctx</name><operator pos:start="43:49" pos:end="43:50">-&gt;</operator><name pos:start="43:51" pos:end="43:58">internal</name><operator pos:start="43:59" pos:end="43:60">-&gt;</operator><name pos:start="43:61" pos:end="43:72">buffer_frame</name></name></expr></argument>,

                                    <argument pos:start="45:37" pos:end="45:46"><expr pos:start="45:37" pos:end="45:46"><operator pos:start="45:37" pos:end="45:37">&amp;</operator><name pos:start="45:38" pos:end="45:46">got_frame</name></expr></argument>, <argument pos:start="45:49" pos:end="45:51"><expr pos:start="45:49" pos:end="45:51"><name pos:start="45:49" pos:end="45:51">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="49:28"><if pos:start="47:9" pos:end="49:28">if <condition pos:start="47:12" pos:end="47:66">(<expr pos:start="47:13" pos:end="47:65"><name pos:start="47:13" pos:end="47:15">ret</name> <operator pos:start="47:17" pos:end="47:18">&gt;=</operator> <literal type="number" pos:start="47:20" pos:end="47:20">0</literal> <operator pos:start="47:22" pos:end="47:23">&amp;&amp;</operator> <operator pos:start="47:25" pos:end="47:25">!</operator><operator pos:start="47:26" pos:end="47:26">(</operator><name pos:start="47:27" pos:end="47:38"><name pos:start="47:27" pos:end="47:31">avctx</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:38">flags</name></name> <operator pos:start="47:40" pos:end="47:40">&amp;</operator> <name pos:start="47:42" pos:end="47:64">AV_CODEC_FLAG_TRUNCATED</name><operator pos:start="47:65" pos:end="47:65">)</operator></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:28"><block_content pos:start="49:13" pos:end="49:28">

            <expr_stmt pos:start="49:13" pos:end="49:28"><expr pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:27"><name pos:start="49:19" pos:end="49:21">pkt</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:27">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="57:5">else if <condition pos:start="51:15" pos:end="51:55">(<expr pos:start="51:16" pos:end="51:54"><name pos:start="51:16" pos:end="51:32"><name pos:start="51:16" pos:end="51:20">avctx</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:32">codec_type</name></name> <operator pos:start="51:34" pos:end="51:35">==</operator> <name pos:start="51:37" pos:end="51:54">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="51:57" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:53">

        <expr_stmt pos:start="53:9" pos:end="55:53"><expr pos:start="53:9" pos:end="55:52"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <call pos:start="53:15" pos:end="55:52"><name pos:start="53:15" pos:end="53:35">avcodec_decode_audio4</name><argument_list pos:start="53:36" pos:end="55:52">(<argument pos:start="53:37" pos:end="53:41"><expr pos:start="53:37" pos:end="53:41"><name pos:start="53:37" pos:end="53:41">avctx</name></expr></argument>, <argument pos:start="53:44" pos:end="53:72"><expr pos:start="53:44" pos:end="53:72"><name pos:start="53:44" pos:end="53:72"><name pos:start="53:44" pos:end="53:48">avctx</name><operator pos:start="53:49" pos:end="53:50">-&gt;</operator><name pos:start="53:51" pos:end="53:58">internal</name><operator pos:start="53:59" pos:end="53:60">-&gt;</operator><name pos:start="53:61" pos:end="53:72">buffer_frame</name></name></expr></argument>,

                                    <argument pos:start="55:37" pos:end="55:46"><expr pos:start="55:37" pos:end="55:46"><operator pos:start="55:37" pos:end="55:37">&amp;</operator><name pos:start="55:38" pos:end="55:46">got_frame</name></expr></argument>, <argument pos:start="55:49" pos:end="55:51"><expr pos:start="55:49" pos:end="55:51"><name pos:start="55:49" pos:end="55:51">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="61:5">else <block pos:start="57:12" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:30">

        <expr_stmt pos:start="59:9" pos:end="59:30"><expr pos:start="59:9" pos:end="59:29"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="59:29"><name pos:start="59:15" pos:end="59:21">AVERROR</name><argument_list pos:start="59:22" pos:end="59:29">(<argument pos:start="59:23" pos:end="59:28"><expr pos:start="59:23" pos:end="59:28"><name pos:start="59:23" pos:end="59:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="65:5" pos:end="67:24"><if pos:start="65:5" pos:end="67:24">if <condition pos:start="65:8" pos:end="65:31">(<expr pos:start="65:9" pos:end="65:30"><name pos:start="65:9" pos:end="65:11">ret</name> <operator pos:start="65:13" pos:end="65:14">==</operator> <call pos:start="65:16" pos:end="65:30"><name pos:start="65:16" pos:end="65:22">AVERROR</name><argument_list pos:start="65:23" pos:end="65:30">(<argument pos:start="65:24" pos:end="65:29"><expr pos:start="65:24" pos:end="65:29"><name pos:start="65:24" pos:end="65:29">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:24"><block_content pos:start="67:9" pos:end="67:24">

        <expr_stmt pos:start="67:9" pos:end="67:24"><expr pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <name pos:start="67:15" pos:end="67:23"><name pos:start="67:15" pos:end="67:17">pkt</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:23">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="73:43"><if pos:start="71:5" pos:end="73:43">if <condition pos:start="71:8" pos:end="71:48">(<expr pos:start="71:9" pos:end="71:47"><name pos:start="71:9" pos:end="71:33"><name pos:start="71:9" pos:end="71:13">avctx</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:23">internal</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:33">draining</name></name> <operator pos:start="71:35" pos:end="71:36">&amp;&amp;</operator> <operator pos:start="71:38" pos:end="71:38">!</operator><name pos:start="71:39" pos:end="71:47">got_frame</name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:43"><block_content pos:start="73:9" pos:end="73:43">

        <expr_stmt pos:start="73:9" pos:end="73:43"><expr pos:start="73:9" pos:end="73:42"><name pos:start="73:9" pos:end="73:38"><name pos:start="73:9" pos:end="73:13">avctx</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:23">internal</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:38">draining_done</name></name> <operator pos:start="73:40" pos:end="73:40">=</operator> <literal type="number" pos:start="73:42" pos:end="73:42">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="79:19"><if pos:start="77:5" pos:end="79:19">if <condition pos:start="77:8" pos:end="77:16">(<expr pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">&lt;</operator> <literal type="number" pos:start="77:15" pos:end="77:15">0</literal></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:19"><block_content pos:start="79:9" pos:end="79:19">

        <return pos:start="79:9" pos:end="79:19">return <expr pos:start="79:16" pos:end="79:18"><name pos:start="79:16" pos:end="79:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="113:5"><if pos:start="83:5" pos:end="87:5">if <condition pos:start="83:8" pos:end="83:25">(<expr pos:start="83:9" pos:end="83:24"><name pos:start="83:9" pos:end="83:11">ret</name> <operator pos:start="83:13" pos:end="83:14">&gt;=</operator> <name pos:start="83:16" pos:end="83:24"><name pos:start="83:16" pos:end="83:18">pkt</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:24">size</name></name></expr>)</condition> <block pos:start="83:27" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:53">

        <expr_stmt pos:start="85:9" pos:end="85:53"><expr pos:start="85:9" pos:end="85:52"><call pos:start="85:9" pos:end="85:52"><name pos:start="85:9" pos:end="85:23">av_packet_unref</name><argument_list pos:start="85:24" pos:end="85:52">(<argument pos:start="85:25" pos:end="85:51"><expr pos:start="85:25" pos:end="85:51"><name pos:start="85:25" pos:end="85:51"><name pos:start="85:25" pos:end="85:29">avctx</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:39">internal</name><operator pos:start="85:40" pos:end="85:41">-&gt;</operator><name pos:start="85:42" pos:end="85:51">buffer_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="87:7" pos:end="113:5">else <block pos:start="87:12" pos:end="113:5">{<block_content pos:start="89:9" pos:end="111:60">

        <decl_stmt pos:start="89:9" pos:end="89:27"><decl pos:start="89:9" pos:end="89:26"><type pos:start="89:9" pos:end="89:11"><name pos:start="89:9" pos:end="89:11">int</name></type> <name pos:start="89:13" pos:end="89:20">consumed</name> <init pos:start="89:22" pos:end="89:26">= <expr pos:start="89:24" pos:end="89:26"><name pos:start="89:24" pos:end="89:26">ret</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="93:9" pos:end="101:9"><if pos:start="93:9" pos:end="101:9">if <condition pos:start="93:12" pos:end="93:47">(<expr pos:start="93:13" pos:end="93:46"><name pos:start="93:13" pos:end="93:15">pkt</name> <operator pos:start="93:17" pos:end="93:18">!=</operator> <name pos:start="93:20" pos:end="93:46"><name pos:start="93:20" pos:end="93:24">avctx</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:34">internal</name><operator pos:start="93:35" pos:end="93:36">-&gt;</operator><name pos:start="93:37" pos:end="93:46">buffer_pkt</name></name></expr>)</condition> <block pos:start="93:49" pos:end="101:9">{<block_content pos:start="95:13" pos:end="99:27">

            <expr_stmt pos:start="95:13" pos:end="95:57"><expr pos:start="95:13" pos:end="95:56"><call pos:start="95:13" pos:end="95:56"><name pos:start="95:13" pos:end="95:27">av_packet_unref</name><argument_list pos:start="95:28" pos:end="95:56">(<argument pos:start="95:29" pos:end="95:55"><expr pos:start="95:29" pos:end="95:55"><name pos:start="95:29" pos:end="95:55"><name pos:start="95:29" pos:end="95:33">avctx</name><operator pos:start="95:34" pos:end="95:35">-&gt;</operator><name pos:start="95:36" pos:end="95:43">internal</name><operator pos:start="95:44" pos:end="95:45">-&gt;</operator><name pos:start="95:46" pos:end="95:55">buffer_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="99:27"><if pos:start="97:13" pos:end="99:27">if <condition pos:start="97:16" pos:end="97:76">(<expr pos:start="97:17" pos:end="97:75"><operator pos:start="97:17" pos:end="97:17">(</operator><name pos:start="97:18" pos:end="97:20">ret</name> <operator pos:start="97:22" pos:end="97:22">=</operator> <call pos:start="97:24" pos:end="97:70"><name pos:start="97:24" pos:end="97:36">av_packet_ref</name><argument_list pos:start="97:37" pos:end="97:70">(<argument pos:start="97:38" pos:end="97:64"><expr pos:start="97:38" pos:end="97:64"><name pos:start="97:38" pos:end="97:64"><name pos:start="97:38" pos:end="97:42">avctx</name><operator pos:start="97:43" pos:end="97:44">-&gt;</operator><name pos:start="97:45" pos:end="97:52">internal</name><operator pos:start="97:53" pos:end="97:54">-&gt;</operator><name pos:start="97:55" pos:end="97:64">buffer_pkt</name></name></expr></argument>, <argument pos:start="97:67" pos:end="97:69"><expr pos:start="97:67" pos:end="97:69"><name pos:start="97:67" pos:end="97:69">pkt</name></expr></argument>)</argument_list></call><operator pos:start="97:71" pos:end="97:71">)</operator> <operator pos:start="97:73" pos:end="97:73">&lt;</operator> <literal type="number" pos:start="97:75" pos:end="97:75">0</literal></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:27"><block_content pos:start="99:17" pos:end="99:27">

                <return pos:start="99:17" pos:end="99:27">return <expr pos:start="99:24" pos:end="99:26"><name pos:start="99:24" pos:end="99:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:54"><expr pos:start="105:9" pos:end="105:53"><name pos:start="105:9" pos:end="105:41"><name pos:start="105:9" pos:end="105:13">avctx</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:23">internal</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:35">buffer_pkt</name><operator pos:start="105:36" pos:end="105:37">-&gt;</operator><name pos:start="105:38" pos:end="105:41">data</name></name> <operator pos:start="105:43" pos:end="105:44">+=</operator> <name pos:start="105:46" pos:end="105:53">consumed</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:54"><expr pos:start="107:9" pos:end="107:53"><name pos:start="107:9" pos:end="107:41"><name pos:start="107:9" pos:end="107:13">avctx</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:23">internal</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:35">buffer_pkt</name><operator pos:start="107:36" pos:end="107:37">-&gt;</operator><name pos:start="107:38" pos:end="107:41">size</name></name> <operator pos:start="107:43" pos:end="107:44">-=</operator> <name pos:start="107:46" pos:end="107:53">consumed</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:60"><expr pos:start="109:9" pos:end="109:59"><name pos:start="109:9" pos:end="109:40"><name pos:start="109:9" pos:end="109:13">avctx</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:23">internal</name><operator pos:start="109:24" pos:end="109:25">-&gt;</operator><name pos:start="109:26" pos:end="109:35">buffer_pkt</name><operator pos:start="109:36" pos:end="109:37">-&gt;</operator><name pos:start="109:38" pos:end="109:40">pts</name></name>   <operator pos:start="109:44" pos:end="109:44">=</operator> <name pos:start="109:46" pos:end="109:59">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:60"><expr pos:start="111:9" pos:end="111:59"><name pos:start="111:9" pos:end="111:40"><name pos:start="111:9" pos:end="111:13">avctx</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:23">internal</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:35">buffer_pkt</name><operator pos:start="111:36" pos:end="111:37">-&gt;</operator><name pos:start="111:38" pos:end="111:40">dts</name></name>   <operator pos:start="111:44" pos:end="111:44">=</operator> <name pos:start="111:46" pos:end="111:59">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="117:5" pos:end="119:58"><if pos:start="117:5" pos:end="119:58">if <condition pos:start="117:8" pos:end="117:18">(<expr pos:start="117:9" pos:end="117:17"><name pos:start="117:9" pos:end="117:17">got_frame</name></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:58"><block_content pos:start="119:9" pos:end="119:58">

        <expr_stmt pos:start="119:9" pos:end="119:58"><expr pos:start="119:9" pos:end="119:57"><call pos:start="119:9" pos:end="119:57"><name pos:start="119:9" pos:end="119:18">av_assert0</name><argument_list pos:start="119:19" pos:end="119:57">(<argument pos:start="119:20" pos:end="119:56"><expr pos:start="119:20" pos:end="119:56"><name pos:start="119:20" pos:end="119:56"><name pos:start="119:20" pos:end="119:24">avctx</name><operator pos:start="119:25" pos:end="119:26">-&gt;</operator><name pos:start="119:27" pos:end="119:34">internal</name><operator pos:start="119:35" pos:end="119:36">-&gt;</operator><name pos:start="119:37" pos:end="119:48">buffer_frame</name><operator pos:start="119:49" pos:end="119:50">-&gt;</operator><name pos:start="119:51" pos:end="119:53">buf</name><index pos:start="119:54" pos:end="119:56">[<expr pos:start="119:55" pos:end="119:55"><literal type="number" pos:start="119:55" pos:end="119:55">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="123:5" pos:end="123:13">return <expr pos:start="123:12" pos:end="123:12"><literal type="number" pos:start="123:12" pos:end="123:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
