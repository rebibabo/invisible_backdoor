<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12161.c" pos:tabs="8"><function pos:start="1:1" pos:end="345:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">calxeda_init</name><parameter_list pos:start="1:25" pos:end="1:75">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:37">MachineState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:46">machine</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:74"><decl pos:start="1:49" pos:end="1:74"><type pos:start="1:49" pos:end="1:74"><name pos:start="1:49" pos:end="1:63"><name pos:start="1:49" pos:end="1:52">enum</name> <name pos:start="1:54" pos:end="1:63">cxmachines</name></name></type> <name pos:start="1:65" pos:end="1:74">machine_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="345:1">{<block_content pos:start="5:5" pos:end="343:57">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:14">ram_addr_t</name></type> <name pos:start="5:16" pos:end="5:23">ram_size</name> <init pos:start="5:25" pos:end="5:43">= <expr pos:start="5:27" pos:end="5:43"><name pos:start="5:27" pos:end="5:43"><name pos:start="5:27" pos:end="5:33">machine</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:43">ram_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:25">cpu_model</name> <init pos:start="7:27" pos:end="7:46">= <expr pos:start="7:29" pos:end="7:46"><name pos:start="7:29" pos:end="7:46"><name pos:start="7:29" pos:end="7:35">machine</name><operator pos:start="7:36" pos:end="7:37">-&gt;</operator><name pos:start="7:38" pos:end="7:46">cpu_model</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:59"><decl pos:start="9:5" pos:end="9:58"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:31">kernel_filename</name> <init pos:start="9:33" pos:end="9:58">= <expr pos:start="9:35" pos:end="9:58"><name pos:start="9:35" pos:end="9:58"><name pos:start="9:35" pos:end="9:41">machine</name><operator pos:start="9:42" pos:end="9:43">-&gt;</operator><name pos:start="9:44" pos:end="9:58">kernel_filename</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:57"><decl pos:start="11:5" pos:end="11:56"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:30">kernel_cmdline</name> <init pos:start="11:32" pos:end="11:56">= <expr pos:start="11:34" pos:end="11:56"><name pos:start="11:34" pos:end="11:56"><name pos:start="11:34" pos:end="11:40">machine</name><operator pos:start="11:41" pos:end="11:42">-&gt;</operator><name pos:start="11:43" pos:end="11:56">kernel_cmdline</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:59"><decl pos:start="13:5" pos:end="13:58"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:31">initrd_filename</name> <init pos:start="13:33" pos:end="13:58">= <expr pos:start="13:35" pos:end="13:58"><name pos:start="13:35" pos:end="13:58"><name pos:start="13:35" pos:end="13:41">machine</name><operator pos:start="13:42" pos:end="13:43">-&gt;</operator><name pos:start="13:44" pos:end="13:58">initrd_filename</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:15">DeviceState</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:20">dev</name> <init pos:start="15:22" pos:end="15:27">= <expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:16">SysBusDevice</name> <modifier pos:start="17:18" pos:end="17:18">*</modifier></type><name pos:start="17:19" pos:end="17:24">busdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">qemu_irq</name></type> <name pos:start="19:14" pos:end="19:21"><name pos:start="19:14" pos:end="19:16">pic</name><index pos:start="19:17" pos:end="19:21">[<expr pos:start="19:18" pos:end="19:20"><literal type="number" pos:start="19:18" pos:end="19:20">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:10"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:24"><decl pos:start="23:5" pos:end="23:23"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">qemu_irq</name></type> <name pos:start="23:14" pos:end="23:23"><name pos:start="23:14" pos:end="23:20">cpu_irq</name><index pos:start="23:21" pos:end="23:23">[<expr pos:start="23:22" pos:end="23:22"><literal type="number" pos:start="23:22" pos:end="23:22">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:25"><decl pos:start="25:5" pos:end="25:24"><type pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:16">MemoryRegion</name> <modifier pos:start="25:18" pos:end="25:18">*</modifier></type><name pos:start="25:19" pos:end="25:24">sysram</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:23"><decl pos:start="27:5" pos:end="27:22"><type pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:16">MemoryRegion</name> <modifier pos:start="27:18" pos:end="27:18">*</modifier></type><name pos:start="27:19" pos:end="27:22">dram</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:25"><decl pos:start="29:5" pos:end="29:24"><type pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:16">MemoryRegion</name> <modifier pos:start="29:18" pos:end="29:18">*</modifier></type><name pos:start="29:19" pos:end="29:24">sysmem</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:27"><decl pos:start="31:5" pos:end="31:26"><type pos:start="31:5" pos:end="31:10"><name pos:start="31:5" pos:end="31:8">char</name> <modifier pos:start="31:10" pos:end="31:10">*</modifier></type><name pos:start="31:11" pos:end="31:26">sysboot_filename</name></decl>;</decl_stmt>



    <if_stmt pos:start="35:5" pos:end="53:5"><if pos:start="35:5" pos:end="53:5">if <condition pos:start="35:8" pos:end="35:19">(<expr pos:start="35:9" pos:end="35:18"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:18">cpu_model</name></expr>)</condition> <block pos:start="35:21" pos:end="53:5">{<block_content pos:start="37:9" pos:end="51:9">

        <switch pos:start="37:9" pos:end="51:9">switch <condition pos:start="37:16" pos:end="37:27">(<expr pos:start="37:17" pos:end="37:26"><name pos:start="37:17" pos:end="37:26">machine_id</name></expr>)</condition> <block pos:start="37:29" pos:end="51:9">{<block_content pos:start="39:9" pos:end="49:18">

        <case pos:start="39:9" pos:end="39:30">case <expr pos:start="39:14" pos:end="39:29"><name pos:start="39:14" pos:end="39:29">CALXEDA_HIGHBANK</name></expr>:</case>

            <expr_stmt pos:start="41:13" pos:end="41:36"><expr pos:start="41:13" pos:end="41:35"><name pos:start="41:13" pos:end="41:21">cpu_model</name> <operator pos:start="41:23" pos:end="41:23">=</operator> <literal type="string" pos:start="41:25" pos:end="41:35">"cortex-a9"</literal></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <case pos:start="45:9" pos:end="45:28">case <expr pos:start="45:14" pos:end="45:27"><name pos:start="45:14" pos:end="45:27">CALXEDA_MIDWAY</name></expr>:</case>

            <expr_stmt pos:start="47:13" pos:end="47:37"><expr pos:start="47:13" pos:end="47:36"><name pos:start="47:13" pos:end="47:21">cpu_model</name> <operator pos:start="47:23" pos:end="47:23">=</operator> <literal type="string" pos:start="47:25" pos:end="47:36">"cortex-a15"</literal></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



    <for pos:start="57:5" pos:end="129:5">for <control pos:start="57:9" pos:end="57:34">(<init pos:start="57:10" pos:end="57:15"><expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:10">n</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>;</init> <condition pos:start="57:17" pos:end="57:29"><expr pos:start="57:17" pos:end="57:28"><name pos:start="57:17" pos:end="57:17">n</name> <operator pos:start="57:19" pos:end="57:19">&lt;</operator> <name pos:start="57:21" pos:end="57:28">smp_cpus</name></expr>;</condition> <incr pos:start="57:31" pos:end="57:33"><expr pos:start="57:31" pos:end="57:33"><name pos:start="57:31" pos:end="57:31">n</name><operator pos:start="57:32" pos:end="57:33">++</operator></expr></incr>)</control> <block pos:start="57:36" pos:end="129:5">{<block_content pos:start="59:9" pos:end="127:64">

        <decl_stmt pos:start="59:9" pos:end="59:69"><decl pos:start="59:9" pos:end="59:68"><type pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:19">ObjectClass</name> <modifier pos:start="59:21" pos:end="59:21">*</modifier></type><name pos:start="59:22" pos:end="59:23">oc</name> <init pos:start="59:25" pos:end="59:68">= <expr pos:start="59:27" pos:end="59:68"><call pos:start="59:27" pos:end="59:68"><name pos:start="59:27" pos:end="59:43">cpu_class_by_name</name><argument_list pos:start="59:44" pos:end="59:68">(<argument pos:start="59:45" pos:end="59:56"><expr pos:start="59:45" pos:end="59:56"><name pos:start="59:45" pos:end="59:56">TYPE_ARM_CPU</name></expr></argument>, <argument pos:start="59:59" pos:end="59:67"><expr pos:start="59:59" pos:end="59:67"><name pos:start="59:59" pos:end="59:67">cpu_model</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="61:9" pos:end="61:23"><decl pos:start="61:9" pos:end="61:22"><type pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:14">Object</name> <modifier pos:start="61:16" pos:end="61:16">*</modifier></type><name pos:start="61:17" pos:end="61:22">cpuobj</name></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:20"><decl pos:start="63:9" pos:end="63:19"><type pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:14">ARMCPU</name> <modifier pos:start="63:16" pos:end="63:16">*</modifier></type><name pos:start="63:17" pos:end="63:19">cpu</name></decl>;</decl_stmt>

        <decl_stmt pos:start="65:9" pos:end="65:26"><decl pos:start="65:9" pos:end="65:25"><type pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:13">Error</name> <modifier pos:start="65:15" pos:end="65:15">*</modifier></type><name pos:start="65:16" pos:end="65:18">err</name> <init pos:start="65:20" pos:end="65:25">= <expr pos:start="65:22" pos:end="65:25"><name pos:start="65:22" pos:end="65:25">NULL</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:16">(<expr pos:start="69:13" pos:end="69:15"><operator pos:start="69:13" pos:end="69:13">!</operator><name pos:start="69:14" pos:end="69:15">oc</name></expr>)</condition> <block pos:start="69:18" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:20">

            <expr_stmt pos:start="71:13" pos:end="71:58"><expr pos:start="71:13" pos:end="71:57"><call pos:start="71:13" pos:end="71:57"><name pos:start="71:13" pos:end="71:24">error_report</name><argument_list pos:start="71:25" pos:end="71:57">(<argument pos:start="71:26" pos:end="71:56"><expr pos:start="71:26" pos:end="71:56"><literal type="string" pos:start="71:26" pos:end="71:56">"Unable to find CPU definition"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:20"><expr pos:start="73:13" pos:end="73:19"><call pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:16">exit</name><argument_list pos:start="73:17" pos:end="73:19">(<argument pos:start="73:18" pos:end="73:18"><expr pos:start="73:18" pos:end="73:18"><literal type="number" pos:start="73:18" pos:end="73:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:55"><expr pos:start="79:9" pos:end="79:54"><name pos:start="79:9" pos:end="79:14">cpuobj</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <call pos:start="79:18" pos:end="79:54"><name pos:start="79:18" pos:end="79:27">object_new</name><argument_list pos:start="79:28" pos:end="79:54">(<argument pos:start="79:29" pos:end="79:53"><expr pos:start="79:29" pos:end="79:53"><call pos:start="79:29" pos:end="79:53"><name pos:start="79:29" pos:end="79:49">object_class_get_name</name><argument_list pos:start="79:50" pos:end="79:53">(<argument pos:start="79:51" pos:end="79:52"><expr pos:start="79:51" pos:end="79:52"><name pos:start="79:51" pos:end="79:52">oc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:30"><expr pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:11">cpu</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <call pos:start="81:15" pos:end="81:29"><name pos:start="81:15" pos:end="81:21">ARM_CPU</name><argument_list pos:start="81:22" pos:end="81:29">(<argument pos:start="81:23" pos:end="81:28"><expr pos:start="81:23" pos:end="81:28"><name pos:start="81:23" pos:end="81:28">cpuobj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="85:9" pos:end="91:11">/* By default A9 and A15 CPUs have EL3 enabled.  This board does not

         * currently support EL3 so the CPU EL3 property is disabled before

         * realization.

         */</comment>

        <if_stmt pos:start="93:9" pos:end="105:9"><if pos:start="93:9" pos:end="105:9">if <condition pos:start="93:12" pos:end="93:58">(<expr pos:start="93:13" pos:end="93:57"><call pos:start="93:13" pos:end="93:57"><name pos:start="93:13" pos:end="93:32">object_property_find</name><argument_list pos:start="93:33" pos:end="93:57">(<argument pos:start="93:34" pos:end="93:39"><expr pos:start="93:34" pos:end="93:39"><name pos:start="93:34" pos:end="93:39">cpuobj</name></expr></argument>, <argument pos:start="93:42" pos:end="93:50"><expr pos:start="93:42" pos:end="93:50"><literal type="string" pos:start="93:42" pos:end="93:50">"has_el3"</literal></expr></argument>, <argument pos:start="93:53" pos:end="93:56"><expr pos:start="93:53" pos:end="93:56"><name pos:start="93:53" pos:end="93:56">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:60" pos:end="105:9">{<block_content pos:start="95:13" pos:end="103:13">

            <expr_stmt pos:start="95:13" pos:end="95:69"><expr pos:start="95:13" pos:end="95:68"><call pos:start="95:13" pos:end="95:68"><name pos:start="95:13" pos:end="95:36">object_property_set_bool</name><argument_list pos:start="95:37" pos:end="95:68">(<argument pos:start="95:38" pos:end="95:43"><expr pos:start="95:38" pos:end="95:43"><name pos:start="95:38" pos:end="95:43">cpuobj</name></expr></argument>, <argument pos:start="95:46" pos:end="95:50"><expr pos:start="95:46" pos:end="95:50"><name pos:start="95:46" pos:end="95:50">false</name></expr></argument>, <argument pos:start="95:53" pos:end="95:61"><expr pos:start="95:53" pos:end="95:61"><literal type="string" pos:start="95:53" pos:end="95:61">"has_el3"</literal></expr></argument>, <argument pos:start="95:64" pos:end="95:67"><expr pos:start="95:64" pos:end="95:67"><operator pos:start="95:64" pos:end="95:64">&amp;</operator><name pos:start="95:65" pos:end="95:67">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="103:13"><if pos:start="97:13" pos:end="103:13">if <condition pos:start="97:16" pos:end="97:20">(<expr pos:start="97:17" pos:end="97:19"><name pos:start="97:17" pos:end="97:19">err</name></expr>)</condition> <block pos:start="97:22" pos:end="103:13">{<block_content pos:start="99:17" pos:end="101:24">

                <expr_stmt pos:start="99:17" pos:end="99:38"><expr pos:start="99:17" pos:end="99:37"><call pos:start="99:17" pos:end="99:37"><name pos:start="99:17" pos:end="99:32">error_report_err</name><argument_list pos:start="99:33" pos:end="99:37">(<argument pos:start="99:34" pos:end="99:36"><expr pos:start="99:34" pos:end="99:36"><name pos:start="99:34" pos:end="99:36">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:24"><expr pos:start="101:17" pos:end="101:23"><call pos:start="101:17" pos:end="101:23"><name pos:start="101:17" pos:end="101:20">exit</name><argument_list pos:start="101:21" pos:end="101:23">(<argument pos:start="101:22" pos:end="101:22"><expr pos:start="101:22" pos:end="101:22"><literal type="number" pos:start="101:22" pos:end="101:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="109:9" pos:end="115:9"><if pos:start="109:9" pos:end="115:9">if <condition pos:start="109:12" pos:end="109:61">(<expr pos:start="109:13" pos:end="109:60"><call pos:start="109:13" pos:end="109:60"><name pos:start="109:13" pos:end="109:32">object_property_find</name><argument_list pos:start="109:33" pos:end="109:60">(<argument pos:start="109:34" pos:end="109:39"><expr pos:start="109:34" pos:end="109:39"><name pos:start="109:34" pos:end="109:39">cpuobj</name></expr></argument>, <argument pos:start="109:42" pos:end="109:53"><expr pos:start="109:42" pos:end="109:53"><literal type="string" pos:start="109:42" pos:end="109:53">"reset-cbar"</literal></expr></argument>, <argument pos:start="109:56" pos:end="109:59"><expr pos:start="109:56" pos:end="109:59"><name pos:start="109:56" pos:end="109:59">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:63" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:64">

            <expr_stmt pos:start="111:13" pos:end="113:64"><expr pos:start="111:13" pos:end="113:63"><call pos:start="111:13" pos:end="113:63"><name pos:start="111:13" pos:end="111:35">object_property_set_int</name><argument_list pos:start="111:36" pos:end="113:63">(<argument pos:start="111:37" pos:end="111:42"><expr pos:start="111:37" pos:end="111:42"><name pos:start="111:37" pos:end="111:42">cpuobj</name></expr></argument>, <argument pos:start="111:45" pos:end="111:61"><expr pos:start="111:45" pos:end="111:61"><name pos:start="111:45" pos:end="111:61">MPCORE_PERIPHBASE</name></expr></argument>,

                                    <argument pos:start="113:37" pos:end="113:48"><expr pos:start="113:37" pos:end="113:48"><literal type="string" pos:start="113:37" pos:end="113:48">"reset-cbar"</literal></expr></argument>, <argument pos:start="113:51" pos:end="113:62"><expr pos:start="113:51" pos:end="113:62"><operator pos:start="113:51" pos:end="113:51">&amp;</operator><name pos:start="113:52" pos:end="113:62">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:65"><expr pos:start="117:9" pos:end="117:64"><call pos:start="117:9" pos:end="117:64"><name pos:start="117:9" pos:end="117:32">object_property_set_bool</name><argument_list pos:start="117:33" pos:end="117:64">(<argument pos:start="117:34" pos:end="117:39"><expr pos:start="117:34" pos:end="117:39"><name pos:start="117:34" pos:end="117:39">cpuobj</name></expr></argument>, <argument pos:start="117:42" pos:end="117:45"><expr pos:start="117:42" pos:end="117:45"><name pos:start="117:42" pos:end="117:45">true</name></expr></argument>, <argument pos:start="117:48" pos:end="117:57"><expr pos:start="117:48" pos:end="117:57"><literal type="string" pos:start="117:48" pos:end="117:57">"realized"</literal></expr></argument>, <argument pos:start="117:60" pos:end="117:63"><expr pos:start="117:60" pos:end="117:63"><operator pos:start="117:60" pos:end="117:60">&amp;</operator><name pos:start="117:61" pos:end="117:63">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="119:9" pos:end="125:9"><if pos:start="119:9" pos:end="125:9">if <condition pos:start="119:12" pos:end="119:16">(<expr pos:start="119:13" pos:end="119:15"><name pos:start="119:13" pos:end="119:15">err</name></expr>)</condition> <block pos:start="119:18" pos:end="125:9">{<block_content pos:start="121:13" pos:end="123:20">

            <expr_stmt pos:start="121:13" pos:end="121:34"><expr pos:start="121:13" pos:end="121:33"><call pos:start="121:13" pos:end="121:33"><name pos:start="121:13" pos:end="121:28">error_report_err</name><argument_list pos:start="121:29" pos:end="121:33">(<argument pos:start="121:30" pos:end="121:32"><expr pos:start="121:30" pos:end="121:32"><name pos:start="121:30" pos:end="121:32">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:20"><expr pos:start="123:13" pos:end="123:19"><call pos:start="123:13" pos:end="123:19"><name pos:start="123:13" pos:end="123:16">exit</name><argument_list pos:start="123:17" pos:end="123:19">(<argument pos:start="123:18" pos:end="123:18"><expr pos:start="123:18" pos:end="123:18"><literal type="number" pos:start="123:18" pos:end="123:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:64"><expr pos:start="127:9" pos:end="127:63"><name pos:start="127:9" pos:end="127:18"><name pos:start="127:9" pos:end="127:15">cpu_irq</name><index pos:start="127:16" pos:end="127:18">[<expr pos:start="127:17" pos:end="127:17"><name pos:start="127:17" pos:end="127:17">n</name></expr>]</index></name> <operator pos:start="127:20" pos:end="127:20">=</operator> <call pos:start="127:22" pos:end="127:63"><name pos:start="127:22" pos:end="127:37">qdev_get_gpio_in</name><argument_list pos:start="127:38" pos:end="127:63">(<argument pos:start="127:39" pos:end="127:49"><expr pos:start="127:39" pos:end="127:49"><call pos:start="127:39" pos:end="127:49"><name pos:start="127:39" pos:end="127:44">DEVICE</name><argument_list pos:start="127:45" pos:end="127:49">(<argument pos:start="127:46" pos:end="127:48"><expr pos:start="127:46" pos:end="127:48"><name pos:start="127:46" pos:end="127:48">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="127:52" pos:end="127:62"><expr pos:start="127:52" pos:end="127:62"><name pos:start="127:52" pos:end="127:62">ARM_CPU_IRQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="133:5" pos:end="133:33"><expr pos:start="133:5" pos:end="133:32"><name pos:start="133:5" pos:end="133:10">sysmem</name> <operator pos:start="133:12" pos:end="133:12">=</operator> <call pos:start="133:14" pos:end="133:32"><name pos:start="133:14" pos:end="133:30">get_system_memory</name><argument_list pos:start="133:31" pos:end="133:32">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:34"><expr pos:start="135:5" pos:end="135:33"><name pos:start="135:5" pos:end="135:8">dram</name> <operator pos:start="135:10" pos:end="135:10">=</operator> <call pos:start="135:12" pos:end="135:33"><name pos:start="135:12" pos:end="135:16">g_new</name><argument_list pos:start="135:17" pos:end="135:33">(<argument pos:start="135:18" pos:end="135:29"><expr pos:start="135:18" pos:end="135:29"><name pos:start="135:18" pos:end="135:29">MemoryRegion</name></expr></argument>, <argument pos:start="135:32" pos:end="135:32"><expr pos:start="135:32" pos:end="135:32"><literal type="number" pos:start="135:32" pos:end="135:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:80"><expr pos:start="137:5" pos:end="137:79"><call pos:start="137:5" pos:end="137:79"><name pos:start="137:5" pos:end="137:26">memory_region_init_ram</name><argument_list pos:start="137:27" pos:end="137:79">(<argument pos:start="137:28" pos:end="137:31"><expr pos:start="137:28" pos:end="137:31"><name pos:start="137:28" pos:end="137:31">dram</name></expr></argument>, <argument pos:start="137:34" pos:end="137:37"><expr pos:start="137:34" pos:end="137:37"><name pos:start="137:34" pos:end="137:37">NULL</name></expr></argument>, <argument pos:start="137:40" pos:end="137:54"><expr pos:start="137:40" pos:end="137:54"><literal type="string" pos:start="137:40" pos:end="137:54">"highbank.dram"</literal></expr></argument>, <argument pos:start="137:57" pos:end="137:64"><expr pos:start="137:57" pos:end="137:64"><name pos:start="137:57" pos:end="137:64">ram_size</name></expr></argument>, <argument pos:start="137:67" pos:end="137:78"><expr pos:start="137:67" pos:end="137:78"><operator pos:start="137:67" pos:end="137:67">&amp;</operator><name pos:start="137:68" pos:end="137:78">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="139:5" pos:end="139:33">/* SDRAM at address zero.  */</comment>

    <expr_stmt pos:start="141:5" pos:end="141:49"><expr pos:start="141:5" pos:end="141:48"><call pos:start="141:5" pos:end="141:48"><name pos:start="141:5" pos:end="141:31">memory_region_add_subregion</name><argument_list pos:start="141:32" pos:end="141:48">(<argument pos:start="141:33" pos:end="141:38"><expr pos:start="141:33" pos:end="141:38"><name pos:start="141:33" pos:end="141:38">sysmem</name></expr></argument>, <argument pos:start="141:41" pos:end="141:41"><expr pos:start="141:41" pos:end="141:41"><literal type="number" pos:start="141:41" pos:end="141:41">0</literal></expr></argument>, <argument pos:start="141:44" pos:end="141:47"><expr pos:start="141:44" pos:end="141:47"><name pos:start="141:44" pos:end="141:47">dram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:36"><expr pos:start="145:5" pos:end="145:35"><name pos:start="145:5" pos:end="145:10">sysram</name> <operator pos:start="145:12" pos:end="145:12">=</operator> <call pos:start="145:14" pos:end="145:35"><name pos:start="145:14" pos:end="145:18">g_new</name><argument_list pos:start="145:19" pos:end="145:35">(<argument pos:start="145:20" pos:end="145:31"><expr pos:start="145:20" pos:end="145:31"><name pos:start="145:20" pos:end="145:31">MemoryRegion</name></expr></argument>, <argument pos:start="145:34" pos:end="145:34"><expr pos:start="145:34" pos:end="145:34"><literal type="number" pos:start="145:34" pos:end="145:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="149:41"><expr pos:start="147:5" pos:end="149:40"><call pos:start="147:5" pos:end="149:40"><name pos:start="147:5" pos:end="147:26">memory_region_init_ram</name><argument_list pos:start="147:27" pos:end="149:40">(<argument pos:start="147:28" pos:end="147:33"><expr pos:start="147:28" pos:end="147:33"><name pos:start="147:28" pos:end="147:33">sysram</name></expr></argument>, <argument pos:start="147:36" pos:end="147:39"><expr pos:start="147:36" pos:end="147:39"><name pos:start="147:36" pos:end="147:39">NULL</name></expr></argument>, <argument pos:start="147:42" pos:end="147:58"><expr pos:start="147:42" pos:end="147:58"><literal type="string" pos:start="147:42" pos:end="147:58">"highbank.sysram"</literal></expr></argument>, <argument pos:start="147:61" pos:end="147:66"><expr pos:start="147:61" pos:end="147:66"><literal type="number" pos:start="147:61" pos:end="147:66">0x8000</literal></expr></argument>,

                           <argument pos:start="149:28" pos:end="149:39"><expr pos:start="149:28" pos:end="149:39"><operator pos:start="149:28" pos:end="149:28">&amp;</operator><name pos:start="149:29" pos:end="149:39">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:60"><expr pos:start="151:5" pos:end="151:59"><call pos:start="151:5" pos:end="151:59"><name pos:start="151:5" pos:end="151:31">memory_region_add_subregion</name><argument_list pos:start="151:32" pos:end="151:59">(<argument pos:start="151:33" pos:end="151:38"><expr pos:start="151:33" pos:end="151:38"><name pos:start="151:33" pos:end="151:38">sysmem</name></expr></argument>, <argument pos:start="151:41" pos:end="151:50"><expr pos:start="151:41" pos:end="151:50"><literal type="number" pos:start="151:41" pos:end="151:50">0xfff88000</literal></expr></argument>, <argument pos:start="151:53" pos:end="151:58"><expr pos:start="151:53" pos:end="151:58"><name pos:start="151:53" pos:end="151:58">sysram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="175:5"><if pos:start="153:5" pos:end="175:5">if <condition pos:start="153:8" pos:end="153:26">(<expr pos:start="153:9" pos:end="153:25"><name pos:start="153:9" pos:end="153:17">bios_name</name> <operator pos:start="153:19" pos:end="153:20">!=</operator> <name pos:start="153:22" pos:end="153:25">NULL</name></expr>)</condition> <block pos:start="153:28" pos:end="175:5">{<block_content pos:start="155:9" pos:end="173:9">

        <expr_stmt pos:start="155:9" pos:end="155:74"><expr pos:start="155:9" pos:end="155:73"><name pos:start="155:9" pos:end="155:24">sysboot_filename</name> <operator pos:start="155:26" pos:end="155:26">=</operator> <call pos:start="155:28" pos:end="155:73"><name pos:start="155:28" pos:end="155:41">qemu_find_file</name><argument_list pos:start="155:42" pos:end="155:73">(<argument pos:start="155:43" pos:end="155:61"><expr pos:start="155:43" pos:end="155:61"><name pos:start="155:43" pos:end="155:61">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="155:64" pos:end="155:72"><expr pos:start="155:64" pos:end="155:72"><name pos:start="155:64" pos:end="155:72">bios_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="173:9"><if pos:start="157:9" pos:end="169:9">if <condition pos:start="157:12" pos:end="157:37">(<expr pos:start="157:13" pos:end="157:36"><name pos:start="157:13" pos:end="157:28">sysboot_filename</name> <operator pos:start="157:30" pos:end="157:31">!=</operator> <name pos:start="157:33" pos:end="157:36">NULL</name></expr>)</condition> <block pos:start="157:39" pos:end="169:9">{<block_content pos:start="159:13" pos:end="167:37">

            <decl_stmt pos:start="159:13" pos:end="159:65"><decl pos:start="159:13" pos:end="159:64"><type pos:start="159:13" pos:end="159:20"><name pos:start="159:13" pos:end="159:20">uint32_t</name></type> <name pos:start="159:22" pos:end="159:29">filesize</name> <init pos:start="159:31" pos:end="159:64">= <expr pos:start="159:33" pos:end="159:64"><call pos:start="159:33" pos:end="159:64"><name pos:start="159:33" pos:end="159:46">get_image_size</name><argument_list pos:start="159:47" pos:end="159:64">(<argument pos:start="159:48" pos:end="159:63"><expr pos:start="159:48" pos:end="159:63"><name pos:start="159:48" pos:end="159:63">sysboot_filename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="161:13" pos:end="165:13"><if pos:start="161:13" pos:end="165:13">if <condition pos:start="161:16" pos:end="161:76">(<expr pos:start="161:17" pos:end="161:75"><call pos:start="161:17" pos:end="161:71"><name pos:start="161:17" pos:end="161:35">load_image_targphys</name><argument_list pos:start="161:36" pos:end="161:71">(<argument pos:start="161:37" pos:end="161:48"><expr pos:start="161:37" pos:end="161:48"><literal type="string" pos:start="161:37" pos:end="161:48">"sysram.bin"</literal></expr></argument>, <argument pos:start="161:51" pos:end="161:60"><expr pos:start="161:51" pos:end="161:60"><literal type="number" pos:start="161:51" pos:end="161:60">0xfff88000</literal></expr></argument>, <argument pos:start="161:63" pos:end="161:70"><expr pos:start="161:63" pos:end="161:70"><name pos:start="161:63" pos:end="161:70">filesize</name></expr></argument>)</argument_list></call> <operator pos:start="161:73" pos:end="161:73">&lt;</operator> <literal type="number" pos:start="161:75" pos:end="161:75">0</literal></expr>)</condition> <block pos:start="161:78" pos:end="165:13">{<block_content pos:start="163:17" pos:end="163:59">

                <expr_stmt pos:start="163:17" pos:end="163:59"><expr pos:start="163:17" pos:end="163:58"><call pos:start="163:17" pos:end="163:58"><name pos:start="163:17" pos:end="163:24">hw_error</name><argument_list pos:start="163:25" pos:end="163:58">(<argument pos:start="163:26" pos:end="163:46"><expr pos:start="163:26" pos:end="163:46"><literal type="string" pos:start="163:26" pos:end="163:46">"Unable to load %s\n"</literal></expr></argument>, <argument pos:start="163:49" pos:end="163:57"><expr pos:start="163:49" pos:end="163:57"><name pos:start="163:49" pos:end="163:57">bios_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:37"><expr pos:start="167:13" pos:end="167:36"><call pos:start="167:13" pos:end="167:36"><name pos:start="167:13" pos:end="167:18">g_free</name><argument_list pos:start="167:19" pos:end="167:36">(<argument pos:start="167:20" pos:end="167:35"><expr pos:start="167:20" pos:end="167:35"><name pos:start="167:20" pos:end="167:35">sysboot_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="169:11" pos:end="173:9">else <block pos:start="169:16" pos:end="173:9">{<block_content pos:start="171:12" pos:end="171:54">

           <expr_stmt pos:start="171:12" pos:end="171:54"><expr pos:start="171:12" pos:end="171:53"><call pos:start="171:12" pos:end="171:53"><name pos:start="171:12" pos:end="171:19">hw_error</name><argument_list pos:start="171:20" pos:end="171:53">(<argument pos:start="171:21" pos:end="171:41"><expr pos:start="171:21" pos:end="171:41"><literal type="string" pos:start="171:21" pos:end="171:41">"Unable to find %s\n"</literal></expr></argument>, <argument pos:start="171:44" pos:end="171:52"><expr pos:start="171:44" pos:end="171:52"><name pos:start="171:44" pos:end="171:52">bios_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="179:5" pos:end="203:5">switch <condition pos:start="179:12" pos:end="179:23">(<expr pos:start="179:13" pos:end="179:22"><name pos:start="179:13" pos:end="179:22">machine_id</name></expr>)</condition> <block pos:start="179:25" pos:end="203:5">{<block_content pos:start="181:5" pos:end="201:14">

    <case pos:start="181:5" pos:end="181:26">case <expr pos:start="181:10" pos:end="181:25"><name pos:start="181:10" pos:end="181:25">CALXEDA_HIGHBANK</name></expr>:</case>

        <expr_stmt pos:start="183:9" pos:end="183:40"><expr pos:start="183:9" pos:end="183:39"><name pos:start="183:9" pos:end="183:11">dev</name> <operator pos:start="183:13" pos:end="183:13">=</operator> <call pos:start="183:15" pos:end="183:39"><name pos:start="183:15" pos:end="183:25">qdev_create</name><argument_list pos:start="183:26" pos:end="183:39">(<argument pos:start="183:27" pos:end="183:30"><expr pos:start="183:27" pos:end="183:30"><name pos:start="183:27" pos:end="183:30">NULL</name></expr></argument>, <argument pos:start="183:33" pos:end="183:38"><expr pos:start="183:33" pos:end="183:38"><literal type="string" pos:start="183:33" pos:end="183:38">"l2x0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:30"><expr pos:start="185:9" pos:end="185:29"><call pos:start="185:9" pos:end="185:29"><name pos:start="185:9" pos:end="185:24">qdev_init_nofail</name><argument_list pos:start="185:25" pos:end="185:29">(<argument pos:start="185:26" pos:end="185:28"><expr pos:start="185:26" pos:end="185:28"><name pos:start="185:26" pos:end="185:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:37"><expr pos:start="187:9" pos:end="187:36"><name pos:start="187:9" pos:end="187:14">busdev</name> <operator pos:start="187:16" pos:end="187:16">=</operator> <call pos:start="187:18" pos:end="187:36"><name pos:start="187:18" pos:end="187:31">SYS_BUS_DEVICE</name><argument_list pos:start="187:32" pos:end="187:36">(<argument pos:start="187:33" pos:end="187:35"><expr pos:start="187:33" pos:end="187:35"><name pos:start="187:33" pos:end="187:35">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:47"><expr pos:start="189:9" pos:end="189:46"><call pos:start="189:9" pos:end="189:46"><name pos:start="189:9" pos:end="189:23">sysbus_mmio_map</name><argument_list pos:start="189:24" pos:end="189:46">(<argument pos:start="189:25" pos:end="189:30"><expr pos:start="189:25" pos:end="189:30"><name pos:start="189:25" pos:end="189:30">busdev</name></expr></argument>, <argument pos:start="189:33" pos:end="189:33"><expr pos:start="189:33" pos:end="189:33"><literal type="number" pos:start="189:33" pos:end="189:33">0</literal></expr></argument>, <argument pos:start="189:36" pos:end="189:45"><expr pos:start="189:36" pos:end="189:45"><literal type="number" pos:start="189:36" pos:end="189:45">0xfff12000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="193:9" pos:end="193:49"><expr pos:start="193:9" pos:end="193:48"><name pos:start="193:9" pos:end="193:11">dev</name> <operator pos:start="193:13" pos:end="193:13">=</operator> <call pos:start="193:15" pos:end="193:48"><name pos:start="193:15" pos:end="193:25">qdev_create</name><argument_list pos:start="193:26" pos:end="193:48">(<argument pos:start="193:27" pos:end="193:30"><expr pos:start="193:27" pos:end="193:30"><name pos:start="193:27" pos:end="193:30">NULL</name></expr></argument>, <argument pos:start="193:33" pos:end="193:47"><expr pos:start="193:33" pos:end="193:47"><literal type="string" pos:start="193:33" pos:end="193:47">"a9mpcore_priv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="195:9" pos:end="195:14">break;</break>

    <case pos:start="197:5" pos:end="197:24">case <expr pos:start="197:10" pos:end="197:23"><name pos:start="197:10" pos:end="197:23">CALXEDA_MIDWAY</name></expr>:</case>

        <expr_stmt pos:start="199:9" pos:end="199:50"><expr pos:start="199:9" pos:end="199:49"><name pos:start="199:9" pos:end="199:11">dev</name> <operator pos:start="199:13" pos:end="199:13">=</operator> <call pos:start="199:15" pos:end="199:49"><name pos:start="199:15" pos:end="199:25">qdev_create</name><argument_list pos:start="199:26" pos:end="199:49">(<argument pos:start="199:27" pos:end="199:30"><expr pos:start="199:27" pos:end="199:30"><name pos:start="199:27" pos:end="199:30">NULL</name></expr></argument>, <argument pos:start="199:33" pos:end="199:48"><expr pos:start="199:33" pos:end="199:48"><literal type="string" pos:start="199:33" pos:end="199:48">"a15mpcore_priv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="201:9" pos:end="201:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="205:5" pos:end="205:51"><expr pos:start="205:5" pos:end="205:50"><call pos:start="205:5" pos:end="205:50"><name pos:start="205:5" pos:end="205:24">qdev_prop_set_uint32</name><argument_list pos:start="205:25" pos:end="205:50">(<argument pos:start="205:26" pos:end="205:28"><expr pos:start="205:26" pos:end="205:28"><name pos:start="205:26" pos:end="205:28">dev</name></expr></argument>, <argument pos:start="205:31" pos:end="205:39"><expr pos:start="205:31" pos:end="205:39"><literal type="string" pos:start="205:31" pos:end="205:39">"num-cpu"</literal></expr></argument>, <argument pos:start="205:42" pos:end="205:49"><expr pos:start="205:42" pos:end="205:49"><name pos:start="205:42" pos:end="205:49">smp_cpus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:51"><expr pos:start="207:5" pos:end="207:50"><call pos:start="207:5" pos:end="207:50"><name pos:start="207:5" pos:end="207:24">qdev_prop_set_uint32</name><argument_list pos:start="207:25" pos:end="207:50">(<argument pos:start="207:26" pos:end="207:28"><expr pos:start="207:26" pos:end="207:28"><name pos:start="207:26" pos:end="207:28">dev</name></expr></argument>, <argument pos:start="207:31" pos:end="207:39"><expr pos:start="207:31" pos:end="207:39"><literal type="string" pos:start="207:31" pos:end="207:39">"num-irq"</literal></expr></argument>, <argument pos:start="207:42" pos:end="207:49"><expr pos:start="207:42" pos:end="207:49"><name pos:start="207:42" pos:end="207:49">NIRQ_GIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:26"><expr pos:start="209:5" pos:end="209:25"><call pos:start="209:5" pos:end="209:25"><name pos:start="209:5" pos:end="209:20">qdev_init_nofail</name><argument_list pos:start="209:21" pos:end="209:25">(<argument pos:start="209:22" pos:end="209:24"><expr pos:start="209:22" pos:end="209:24"><name pos:start="209:22" pos:end="209:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:33"><expr pos:start="211:5" pos:end="211:32"><name pos:start="211:5" pos:end="211:10">busdev</name> <operator pos:start="211:12" pos:end="211:12">=</operator> <call pos:start="211:14" pos:end="211:32"><name pos:start="211:14" pos:end="211:27">SYS_BUS_DEVICE</name><argument_list pos:start="211:28" pos:end="211:32">(<argument pos:start="211:29" pos:end="211:31"><expr pos:start="211:29" pos:end="211:31"><name pos:start="211:29" pos:end="211:31">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:50"><expr pos:start="213:5" pos:end="213:49"><call pos:start="213:5" pos:end="213:49"><name pos:start="213:5" pos:end="213:19">sysbus_mmio_map</name><argument_list pos:start="213:20" pos:end="213:49">(<argument pos:start="213:21" pos:end="213:26"><expr pos:start="213:21" pos:end="213:26"><name pos:start="213:21" pos:end="213:26">busdev</name></expr></argument>, <argument pos:start="213:29" pos:end="213:29"><expr pos:start="213:29" pos:end="213:29"><literal type="number" pos:start="213:29" pos:end="213:29">0</literal></expr></argument>, <argument pos:start="213:32" pos:end="213:48"><expr pos:start="213:32" pos:end="213:48"><name pos:start="213:32" pos:end="213:48">MPCORE_PERIPHBASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="215:5" pos:end="219:5">for <control pos:start="215:9" pos:end="215:34">(<init pos:start="215:10" pos:end="215:15"><expr pos:start="215:10" pos:end="215:14"><name pos:start="215:10" pos:end="215:10">n</name> <operator pos:start="215:12" pos:end="215:12">=</operator> <literal type="number" pos:start="215:14" pos:end="215:14">0</literal></expr>;</init> <condition pos:start="215:17" pos:end="215:29"><expr pos:start="215:17" pos:end="215:28"><name pos:start="215:17" pos:end="215:17">n</name> <operator pos:start="215:19" pos:end="215:19">&lt;</operator> <name pos:start="215:21" pos:end="215:28">smp_cpus</name></expr>;</condition> <incr pos:start="215:31" pos:end="215:33"><expr pos:start="215:31" pos:end="215:33"><name pos:start="215:31" pos:end="215:31">n</name><operator pos:start="215:32" pos:end="215:33">++</operator></expr></incr>)</control> <block pos:start="215:36" pos:end="219:5">{<block_content pos:start="217:9" pos:end="217:50">

        <expr_stmt pos:start="217:9" pos:end="217:50"><expr pos:start="217:9" pos:end="217:49"><call pos:start="217:9" pos:end="217:49"><name pos:start="217:9" pos:end="217:26">sysbus_connect_irq</name><argument_list pos:start="217:27" pos:end="217:49">(<argument pos:start="217:28" pos:end="217:33"><expr pos:start="217:28" pos:end="217:33"><name pos:start="217:28" pos:end="217:33">busdev</name></expr></argument>, <argument pos:start="217:36" pos:end="217:36"><expr pos:start="217:36" pos:end="217:36"><name pos:start="217:36" pos:end="217:36">n</name></expr></argument>, <argument pos:start="217:39" pos:end="217:48"><expr pos:start="217:39" pos:end="217:48"><name pos:start="217:39" pos:end="217:48"><name pos:start="217:39" pos:end="217:45">cpu_irq</name><index pos:start="217:46" pos:end="217:48">[<expr pos:start="217:47" pos:end="217:47"><name pos:start="217:47" pos:end="217:47">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="223:5" pos:end="227:5">for <control pos:start="223:9" pos:end="223:29">(<init pos:start="223:10" pos:end="223:15"><expr pos:start="223:10" pos:end="223:14"><name pos:start="223:10" pos:end="223:10">n</name> <operator pos:start="223:12" pos:end="223:12">=</operator> <literal type="number" pos:start="223:14" pos:end="223:14">0</literal></expr>;</init> <condition pos:start="223:17" pos:end="223:24"><expr pos:start="223:17" pos:end="223:23"><name pos:start="223:17" pos:end="223:17">n</name> <operator pos:start="223:19" pos:end="223:19">&lt;</operator> <literal type="number" pos:start="223:21" pos:end="223:23">128</literal></expr>;</condition> <incr pos:start="223:26" pos:end="223:28"><expr pos:start="223:26" pos:end="223:28"><name pos:start="223:26" pos:end="223:26">n</name><operator pos:start="223:27" pos:end="223:28">++</operator></expr></incr>)</control> <block pos:start="223:31" pos:end="227:5">{<block_content pos:start="225:9" pos:end="225:42">

        <expr_stmt pos:start="225:9" pos:end="225:42"><expr pos:start="225:9" pos:end="225:41"><name pos:start="225:9" pos:end="225:14"><name pos:start="225:9" pos:end="225:11">pic</name><index pos:start="225:12" pos:end="225:14">[<expr pos:start="225:13" pos:end="225:13"><name pos:start="225:13" pos:end="225:13">n</name></expr>]</index></name> <operator pos:start="225:16" pos:end="225:16">=</operator> <call pos:start="225:18" pos:end="225:41"><name pos:start="225:18" pos:end="225:33">qdev_get_gpio_in</name><argument_list pos:start="225:34" pos:end="225:41">(<argument pos:start="225:35" pos:end="225:37"><expr pos:start="225:35" pos:end="225:37"><name pos:start="225:35" pos:end="225:37">dev</name></expr></argument>, <argument pos:start="225:40" pos:end="225:40"><expr pos:start="225:40" pos:end="225:40"><name pos:start="225:40" pos:end="225:40">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="231:5" pos:end="231:37"><expr pos:start="231:5" pos:end="231:36"><name pos:start="231:5" pos:end="231:7">dev</name> <operator pos:start="231:9" pos:end="231:9">=</operator> <call pos:start="231:11" pos:end="231:36"><name pos:start="231:11" pos:end="231:21">qdev_create</name><argument_list pos:start="231:22" pos:end="231:36">(<argument pos:start="231:23" pos:end="231:26"><expr pos:start="231:23" pos:end="231:26"><name pos:start="231:23" pos:end="231:26">NULL</name></expr></argument>, <argument pos:start="231:29" pos:end="231:35"><expr pos:start="231:29" pos:end="231:35"><literal type="string" pos:start="231:29" pos:end="231:35">"sp804"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:50"><expr pos:start="233:5" pos:end="233:49"><call pos:start="233:5" pos:end="233:49"><name pos:start="233:5" pos:end="233:24">qdev_prop_set_uint32</name><argument_list pos:start="233:25" pos:end="233:49">(<argument pos:start="233:26" pos:end="233:28"><expr pos:start="233:26" pos:end="233:28"><name pos:start="233:26" pos:end="233:28">dev</name></expr></argument>, <argument pos:start="233:31" pos:end="233:37"><expr pos:start="233:31" pos:end="233:37"><literal type="string" pos:start="233:31" pos:end="233:37">"freq0"</literal></expr></argument>, <argument pos:start="233:40" pos:end="233:48"><expr pos:start="233:40" pos:end="233:48"><literal type="number" pos:start="233:40" pos:end="233:48">150000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:50"><expr pos:start="235:5" pos:end="235:49"><call pos:start="235:5" pos:end="235:49"><name pos:start="235:5" pos:end="235:24">qdev_prop_set_uint32</name><argument_list pos:start="235:25" pos:end="235:49">(<argument pos:start="235:26" pos:end="235:28"><expr pos:start="235:26" pos:end="235:28"><name pos:start="235:26" pos:end="235:28">dev</name></expr></argument>, <argument pos:start="235:31" pos:end="235:37"><expr pos:start="235:31" pos:end="235:37"><literal type="string" pos:start="235:31" pos:end="235:37">"freq1"</literal></expr></argument>, <argument pos:start="235:40" pos:end="235:48"><expr pos:start="235:40" pos:end="235:48"><literal type="number" pos:start="235:40" pos:end="235:48">150000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:26"><expr pos:start="237:5" pos:end="237:25"><call pos:start="237:5" pos:end="237:25"><name pos:start="237:5" pos:end="237:20">qdev_init_nofail</name><argument_list pos:start="237:21" pos:end="237:25">(<argument pos:start="237:22" pos:end="237:24"><expr pos:start="237:22" pos:end="237:24"><name pos:start="237:22" pos:end="237:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:33"><expr pos:start="239:5" pos:end="239:32"><name pos:start="239:5" pos:end="239:10">busdev</name> <operator pos:start="239:12" pos:end="239:12">=</operator> <call pos:start="239:14" pos:end="239:32"><name pos:start="239:14" pos:end="239:27">SYS_BUS_DEVICE</name><argument_list pos:start="239:28" pos:end="239:32">(<argument pos:start="239:29" pos:end="239:31"><expr pos:start="239:29" pos:end="239:31"><name pos:start="239:29" pos:end="239:31">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="241:43"><expr pos:start="241:5" pos:end="241:42"><call pos:start="241:5" pos:end="241:42"><name pos:start="241:5" pos:end="241:19">sysbus_mmio_map</name><argument_list pos:start="241:20" pos:end="241:42">(<argument pos:start="241:21" pos:end="241:26"><expr pos:start="241:21" pos:end="241:26"><name pos:start="241:21" pos:end="241:26">busdev</name></expr></argument>, <argument pos:start="241:29" pos:end="241:29"><expr pos:start="241:29" pos:end="241:29"><literal type="number" pos:start="241:29" pos:end="241:29">0</literal></expr></argument>, <argument pos:start="241:32" pos:end="241:41"><expr pos:start="241:32" pos:end="241:41"><literal type="number" pos:start="241:32" pos:end="241:41">0xfff34000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:43"><expr pos:start="243:5" pos:end="243:42"><call pos:start="243:5" pos:end="243:42"><name pos:start="243:5" pos:end="243:22">sysbus_connect_irq</name><argument_list pos:start="243:23" pos:end="243:42">(<argument pos:start="243:24" pos:end="243:29"><expr pos:start="243:24" pos:end="243:29"><name pos:start="243:24" pos:end="243:29">busdev</name></expr></argument>, <argument pos:start="243:32" pos:end="243:32"><expr pos:start="243:32" pos:end="243:32"><literal type="number" pos:start="243:32" pos:end="243:32">0</literal></expr></argument>, <argument pos:start="243:35" pos:end="243:41"><expr pos:start="243:35" pos:end="243:41"><name pos:start="243:35" pos:end="243:41"><name pos:start="243:35" pos:end="243:37">pic</name><index pos:start="243:38" pos:end="243:41">[<expr pos:start="243:39" pos:end="243:40"><literal type="number" pos:start="243:39" pos:end="243:40">18</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:55"><expr pos:start="245:5" pos:end="245:54"><call pos:start="245:5" pos:end="245:54"><name pos:start="245:5" pos:end="245:24">sysbus_create_simple</name><argument_list pos:start="245:25" pos:end="245:54">(<argument pos:start="245:26" pos:end="245:32"><expr pos:start="245:26" pos:end="245:32"><literal type="string" pos:start="245:26" pos:end="245:32">"pl011"</literal></expr></argument>, <argument pos:start="245:35" pos:end="245:44"><expr pos:start="245:35" pos:end="245:44"><literal type="number" pos:start="245:35" pos:end="245:44">0xfff36000</literal></expr></argument>, <argument pos:start="245:47" pos:end="245:53"><expr pos:start="245:47" pos:end="245:53"><name pos:start="245:47" pos:end="245:53"><name pos:start="245:47" pos:end="245:49">pic</name><index pos:start="245:50" pos:end="245:53">[<expr pos:start="245:51" pos:end="245:52"><literal type="number" pos:start="245:51" pos:end="245:52">20</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="249:5" pos:end="249:45"><expr pos:start="249:5" pos:end="249:44"><name pos:start="249:5" pos:end="249:7">dev</name> <operator pos:start="249:9" pos:end="249:9">=</operator> <call pos:start="249:11" pos:end="249:44"><name pos:start="249:11" pos:end="249:21">qdev_create</name><argument_list pos:start="249:22" pos:end="249:44">(<argument pos:start="249:23" pos:end="249:26"><expr pos:start="249:23" pos:end="249:26"><name pos:start="249:23" pos:end="249:26">NULL</name></expr></argument>, <argument pos:start="249:29" pos:end="249:43"><expr pos:start="249:29" pos:end="249:43"><literal type="string" pos:start="249:29" pos:end="249:43">"highbank-regs"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:26"><expr pos:start="251:5" pos:end="251:25"><call pos:start="251:5" pos:end="251:25"><name pos:start="251:5" pos:end="251:20">qdev_init_nofail</name><argument_list pos:start="251:21" pos:end="251:25">(<argument pos:start="251:22" pos:end="251:24"><expr pos:start="251:22" pos:end="251:24"><name pos:start="251:22" pos:end="251:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:33"><expr pos:start="253:5" pos:end="253:32"><name pos:start="253:5" pos:end="253:10">busdev</name> <operator pos:start="253:12" pos:end="253:12">=</operator> <call pos:start="253:14" pos:end="253:32"><name pos:start="253:14" pos:end="253:27">SYS_BUS_DEVICE</name><argument_list pos:start="253:28" pos:end="253:32">(<argument pos:start="253:29" pos:end="253:31"><expr pos:start="253:29" pos:end="253:31"><name pos:start="253:29" pos:end="253:31">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="255:5" pos:end="255:43"><expr pos:start="255:5" pos:end="255:42"><call pos:start="255:5" pos:end="255:42"><name pos:start="255:5" pos:end="255:19">sysbus_mmio_map</name><argument_list pos:start="255:20" pos:end="255:42">(<argument pos:start="255:21" pos:end="255:26"><expr pos:start="255:21" pos:end="255:26"><name pos:start="255:21" pos:end="255:26">busdev</name></expr></argument>, <argument pos:start="255:29" pos:end="255:29"><expr pos:start="255:29" pos:end="255:29"><literal type="number" pos:start="255:29" pos:end="255:29">0</literal></expr></argument>, <argument pos:start="255:32" pos:end="255:41"><expr pos:start="255:32" pos:end="255:41"><literal type="number" pos:start="255:32" pos:end="255:41">0xfff3c000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="259:5" pos:end="259:55"><expr pos:start="259:5" pos:end="259:54"><call pos:start="259:5" pos:end="259:54"><name pos:start="259:5" pos:end="259:24">sysbus_create_simple</name><argument_list pos:start="259:25" pos:end="259:54">(<argument pos:start="259:26" pos:end="259:32"><expr pos:start="259:26" pos:end="259:32"><literal type="string" pos:start="259:26" pos:end="259:32">"pl061"</literal></expr></argument>, <argument pos:start="259:35" pos:end="259:44"><expr pos:start="259:35" pos:end="259:44"><literal type="number" pos:start="259:35" pos:end="259:44">0xfff30000</literal></expr></argument>, <argument pos:start="259:47" pos:end="259:53"><expr pos:start="259:47" pos:end="259:53"><name pos:start="259:47" pos:end="259:53"><name pos:start="259:47" pos:end="259:49">pic</name><index pos:start="259:50" pos:end="259:53">[<expr pos:start="259:51" pos:end="259:52"><literal type="number" pos:start="259:51" pos:end="259:52">14</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:55"><expr pos:start="261:5" pos:end="261:54"><call pos:start="261:5" pos:end="261:54"><name pos:start="261:5" pos:end="261:24">sysbus_create_simple</name><argument_list pos:start="261:25" pos:end="261:54">(<argument pos:start="261:26" pos:end="261:32"><expr pos:start="261:26" pos:end="261:32"><literal type="string" pos:start="261:26" pos:end="261:32">"pl061"</literal></expr></argument>, <argument pos:start="261:35" pos:end="261:44"><expr pos:start="261:35" pos:end="261:44"><literal type="number" pos:start="261:35" pos:end="261:44">0xfff31000</literal></expr></argument>, <argument pos:start="261:47" pos:end="261:53"><expr pos:start="261:47" pos:end="261:53"><name pos:start="261:47" pos:end="261:53"><name pos:start="261:47" pos:end="261:49">pic</name><index pos:start="261:50" pos:end="261:53">[<expr pos:start="261:51" pos:end="261:52"><literal type="number" pos:start="261:51" pos:end="261:52">15</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:55"><expr pos:start="263:5" pos:end="263:54"><call pos:start="263:5" pos:end="263:54"><name pos:start="263:5" pos:end="263:24">sysbus_create_simple</name><argument_list pos:start="263:25" pos:end="263:54">(<argument pos:start="263:26" pos:end="263:32"><expr pos:start="263:26" pos:end="263:32"><literal type="string" pos:start="263:26" pos:end="263:32">"pl061"</literal></expr></argument>, <argument pos:start="263:35" pos:end="263:44"><expr pos:start="263:35" pos:end="263:44"><literal type="number" pos:start="263:35" pos:end="263:44">0xfff32000</literal></expr></argument>, <argument pos:start="263:47" pos:end="263:53"><expr pos:start="263:47" pos:end="263:53"><name pos:start="263:47" pos:end="263:53"><name pos:start="263:47" pos:end="263:49">pic</name><index pos:start="263:50" pos:end="263:53">[<expr pos:start="263:51" pos:end="263:52"><literal type="number" pos:start="263:51" pos:end="263:52">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:55"><expr pos:start="265:5" pos:end="265:54"><call pos:start="265:5" pos:end="265:54"><name pos:start="265:5" pos:end="265:24">sysbus_create_simple</name><argument_list pos:start="265:25" pos:end="265:54">(<argument pos:start="265:26" pos:end="265:32"><expr pos:start="265:26" pos:end="265:32"><literal type="string" pos:start="265:26" pos:end="265:32">"pl061"</literal></expr></argument>, <argument pos:start="265:35" pos:end="265:44"><expr pos:start="265:35" pos:end="265:44"><literal type="number" pos:start="265:35" pos:end="265:44">0xfff33000</literal></expr></argument>, <argument pos:start="265:47" pos:end="265:53"><expr pos:start="265:47" pos:end="265:53"><name pos:start="265:47" pos:end="265:53"><name pos:start="265:47" pos:end="265:49">pic</name><index pos:start="265:50" pos:end="265:53">[<expr pos:start="265:51" pos:end="265:52"><literal type="number" pos:start="265:51" pos:end="265:52">17</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="267:5" pos:end="267:55"><expr pos:start="267:5" pos:end="267:54"><call pos:start="267:5" pos:end="267:54"><name pos:start="267:5" pos:end="267:24">sysbus_create_simple</name><argument_list pos:start="267:25" pos:end="267:54">(<argument pos:start="267:26" pos:end="267:32"><expr pos:start="267:26" pos:end="267:32"><literal type="string" pos:start="267:26" pos:end="267:32">"pl031"</literal></expr></argument>, <argument pos:start="267:35" pos:end="267:44"><expr pos:start="267:35" pos:end="267:44"><literal type="number" pos:start="267:35" pos:end="267:44">0xfff35000</literal></expr></argument>, <argument pos:start="267:47" pos:end="267:53"><expr pos:start="267:47" pos:end="267:53"><name pos:start="267:47" pos:end="267:53"><name pos:start="267:47" pos:end="267:49">pic</name><index pos:start="267:50" pos:end="267:53">[<expr pos:start="267:51" pos:end="267:52"><literal type="number" pos:start="267:51" pos:end="267:52">19</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="269:5" pos:end="269:55"><expr pos:start="269:5" pos:end="269:54"><call pos:start="269:5" pos:end="269:54"><name pos:start="269:5" pos:end="269:24">sysbus_create_simple</name><argument_list pos:start="269:25" pos:end="269:54">(<argument pos:start="269:26" pos:end="269:32"><expr pos:start="269:26" pos:end="269:32"><literal type="string" pos:start="269:26" pos:end="269:32">"pl022"</literal></expr></argument>, <argument pos:start="269:35" pos:end="269:44"><expr pos:start="269:35" pos:end="269:44"><literal type="number" pos:start="269:35" pos:end="269:44">0xfff39000</literal></expr></argument>, <argument pos:start="269:47" pos:end="269:53"><expr pos:start="269:47" pos:end="269:53"><name pos:start="269:47" pos:end="269:53"><name pos:start="269:47" pos:end="269:49">pic</name><index pos:start="269:50" pos:end="269:53">[<expr pos:start="269:51" pos:end="269:52"><literal type="number" pos:start="269:51" pos:end="269:52">23</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="273:5" pos:end="273:61"><expr pos:start="273:5" pos:end="273:60"><call pos:start="273:5" pos:end="273:60"><name pos:start="273:5" pos:end="273:24">sysbus_create_simple</name><argument_list pos:start="273:25" pos:end="273:60">(<argument pos:start="273:26" pos:end="273:38"><expr pos:start="273:26" pos:end="273:38"><literal type="string" pos:start="273:26" pos:end="273:38">"sysbus-ahci"</literal></expr></argument>, <argument pos:start="273:41" pos:end="273:50"><expr pos:start="273:41" pos:end="273:50"><literal type="number" pos:start="273:41" pos:end="273:50">0xffe08000</literal></expr></argument>, <argument pos:start="273:53" pos:end="273:59"><expr pos:start="273:53" pos:end="273:59"><name pos:start="273:53" pos:end="273:59"><name pos:start="273:53" pos:end="273:55">pic</name><index pos:start="273:56" pos:end="273:59">[<expr pos:start="273:57" pos:end="273:58"><literal type="number" pos:start="273:57" pos:end="273:58">83</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="277:5" pos:end="313:5"><if pos:start="277:5" pos:end="313:5">if <condition pos:start="277:8" pos:end="277:25">(<expr pos:start="277:9" pos:end="277:24"><name pos:start="277:9" pos:end="277:19"><name pos:start="277:9" pos:end="277:16">nd_table</name><index pos:start="277:17" pos:end="277:19">[<expr pos:start="277:18" pos:end="277:18"><literal type="number" pos:start="277:18" pos:end="277:18">0</literal></expr>]</index></name><operator pos:start="277:20" pos:end="277:20">.</operator><name pos:start="277:21" pos:end="277:24">used</name></expr>)</condition> <block pos:start="277:27" pos:end="313:5">{<block_content pos:start="279:9" pos:end="311:60">

        <expr_stmt pos:start="279:9" pos:end="279:52"><expr pos:start="279:9" pos:end="279:51"><call pos:start="279:9" pos:end="279:51"><name pos:start="279:9" pos:end="279:28">qemu_check_nic_model</name><argument_list pos:start="279:29" pos:end="279:51">(<argument pos:start="279:30" pos:end="279:41"><expr pos:start="279:30" pos:end="279:41"><operator pos:start="279:30" pos:end="279:30">&amp;</operator><name pos:start="279:31" pos:end="279:41"><name pos:start="279:31" pos:end="279:38">nd_table</name><index pos:start="279:39" pos:end="279:41">[<expr pos:start="279:40" pos:end="279:40"><literal type="number" pos:start="279:40" pos:end="279:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="279:44" pos:end="279:50"><expr pos:start="279:44" pos:end="279:50"><literal type="string" pos:start="279:44" pos:end="279:50">"xgmac"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:41"><expr pos:start="281:9" pos:end="281:40"><name pos:start="281:9" pos:end="281:11">dev</name> <operator pos:start="281:13" pos:end="281:13">=</operator> <call pos:start="281:15" pos:end="281:40"><name pos:start="281:15" pos:end="281:25">qdev_create</name><argument_list pos:start="281:26" pos:end="281:40">(<argument pos:start="281:27" pos:end="281:30"><expr pos:start="281:27" pos:end="281:30"><name pos:start="281:27" pos:end="281:30">NULL</name></expr></argument>, <argument pos:start="281:33" pos:end="281:39"><expr pos:start="281:33" pos:end="281:39"><literal type="string" pos:start="281:33" pos:end="281:39">"xgmac"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:51"><expr pos:start="283:9" pos:end="283:50"><call pos:start="283:9" pos:end="283:50"><name pos:start="283:9" pos:end="283:31">qdev_set_nic_properties</name><argument_list pos:start="283:32" pos:end="283:50">(<argument pos:start="283:33" pos:end="283:35"><expr pos:start="283:33" pos:end="283:35"><name pos:start="283:33" pos:end="283:35">dev</name></expr></argument>, <argument pos:start="283:38" pos:end="283:49"><expr pos:start="283:38" pos:end="283:49"><operator pos:start="283:38" pos:end="283:38">&amp;</operator><name pos:start="283:39" pos:end="283:49"><name pos:start="283:39" pos:end="283:46">nd_table</name><index pos:start="283:47" pos:end="283:49">[<expr pos:start="283:48" pos:end="283:48"><literal type="number" pos:start="283:48" pos:end="283:48">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:30"><expr pos:start="285:9" pos:end="285:29"><call pos:start="285:9" pos:end="285:29"><name pos:start="285:9" pos:end="285:24">qdev_init_nofail</name><argument_list pos:start="285:25" pos:end="285:29">(<argument pos:start="285:26" pos:end="285:28"><expr pos:start="285:26" pos:end="285:28"><name pos:start="285:26" pos:end="285:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:60"><expr pos:start="287:9" pos:end="287:59"><call pos:start="287:9" pos:end="287:59"><name pos:start="287:9" pos:end="287:23">sysbus_mmio_map</name><argument_list pos:start="287:24" pos:end="287:59">(<argument pos:start="287:25" pos:end="287:43"><expr pos:start="287:25" pos:end="287:43"><call pos:start="287:25" pos:end="287:43"><name pos:start="287:25" pos:end="287:38">SYS_BUS_DEVICE</name><argument_list pos:start="287:39" pos:end="287:43">(<argument pos:start="287:40" pos:end="287:42"><expr pos:start="287:40" pos:end="287:42"><name pos:start="287:40" pos:end="287:42">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="287:46" pos:end="287:46"><expr pos:start="287:46" pos:end="287:46"><literal type="number" pos:start="287:46" pos:end="287:46">0</literal></expr></argument>, <argument pos:start="287:49" pos:end="287:58"><expr pos:start="287:49" pos:end="287:58"><literal type="number" pos:start="287:49" pos:end="287:58">0xfff50000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:60"><expr pos:start="289:9" pos:end="289:59"><call pos:start="289:9" pos:end="289:59"><name pos:start="289:9" pos:end="289:26">sysbus_connect_irq</name><argument_list pos:start="289:27" pos:end="289:59">(<argument pos:start="289:28" pos:end="289:46"><expr pos:start="289:28" pos:end="289:46"><call pos:start="289:28" pos:end="289:46"><name pos:start="289:28" pos:end="289:41">SYS_BUS_DEVICE</name><argument_list pos:start="289:42" pos:end="289:46">(<argument pos:start="289:43" pos:end="289:45"><expr pos:start="289:43" pos:end="289:45"><name pos:start="289:43" pos:end="289:45">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="289:49" pos:end="289:49"><expr pos:start="289:49" pos:end="289:49"><literal type="number" pos:start="289:49" pos:end="289:49">0</literal></expr></argument>, <argument pos:start="289:52" pos:end="289:58"><expr pos:start="289:52" pos:end="289:58"><name pos:start="289:52" pos:end="289:58"><name pos:start="289:52" pos:end="289:54">pic</name><index pos:start="289:55" pos:end="289:58">[<expr pos:start="289:56" pos:end="289:57"><literal type="number" pos:start="289:56" pos:end="289:57">77</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:60"><expr pos:start="291:9" pos:end="291:59"><call pos:start="291:9" pos:end="291:59"><name pos:start="291:9" pos:end="291:26">sysbus_connect_irq</name><argument_list pos:start="291:27" pos:end="291:59">(<argument pos:start="291:28" pos:end="291:46"><expr pos:start="291:28" pos:end="291:46"><call pos:start="291:28" pos:end="291:46"><name pos:start="291:28" pos:end="291:41">SYS_BUS_DEVICE</name><argument_list pos:start="291:42" pos:end="291:46">(<argument pos:start="291:43" pos:end="291:45"><expr pos:start="291:43" pos:end="291:45"><name pos:start="291:43" pos:end="291:45">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="291:49" pos:end="291:49"><expr pos:start="291:49" pos:end="291:49"><literal type="number" pos:start="291:49" pos:end="291:49">1</literal></expr></argument>, <argument pos:start="291:52" pos:end="291:58"><expr pos:start="291:52" pos:end="291:58"><name pos:start="291:52" pos:end="291:58"><name pos:start="291:52" pos:end="291:54">pic</name><index pos:start="291:55" pos:end="291:58">[<expr pos:start="291:56" pos:end="291:57"><literal type="number" pos:start="291:56" pos:end="291:57">78</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:60"><expr pos:start="293:9" pos:end="293:59"><call pos:start="293:9" pos:end="293:59"><name pos:start="293:9" pos:end="293:26">sysbus_connect_irq</name><argument_list pos:start="293:27" pos:end="293:59">(<argument pos:start="293:28" pos:end="293:46"><expr pos:start="293:28" pos:end="293:46"><call pos:start="293:28" pos:end="293:46"><name pos:start="293:28" pos:end="293:41">SYS_BUS_DEVICE</name><argument_list pos:start="293:42" pos:end="293:46">(<argument pos:start="293:43" pos:end="293:45"><expr pos:start="293:43" pos:end="293:45"><name pos:start="293:43" pos:end="293:45">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="293:49" pos:end="293:49"><expr pos:start="293:49" pos:end="293:49"><literal type="number" pos:start="293:49" pos:end="293:49">2</literal></expr></argument>, <argument pos:start="293:52" pos:end="293:58"><expr pos:start="293:52" pos:end="293:58"><name pos:start="293:52" pos:end="293:58"><name pos:start="293:52" pos:end="293:54">pic</name><index pos:start="293:55" pos:end="293:58">[<expr pos:start="293:56" pos:end="293:57"><literal type="number" pos:start="293:56" pos:end="293:57">79</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="297:9" pos:end="297:52"><expr pos:start="297:9" pos:end="297:51"><call pos:start="297:9" pos:end="297:51"><name pos:start="297:9" pos:end="297:28">qemu_check_nic_model</name><argument_list pos:start="297:29" pos:end="297:51">(<argument pos:start="297:30" pos:end="297:41"><expr pos:start="297:30" pos:end="297:41"><operator pos:start="297:30" pos:end="297:30">&amp;</operator><name pos:start="297:31" pos:end="297:41"><name pos:start="297:31" pos:end="297:38">nd_table</name><index pos:start="297:39" pos:end="297:41">[<expr pos:start="297:40" pos:end="297:40"><literal type="number" pos:start="297:40" pos:end="297:40">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="297:44" pos:end="297:50"><expr pos:start="297:44" pos:end="297:50"><literal type="string" pos:start="297:44" pos:end="297:50">"xgmac"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:41"><expr pos:start="299:9" pos:end="299:40"><name pos:start="299:9" pos:end="299:11">dev</name> <operator pos:start="299:13" pos:end="299:13">=</operator> <call pos:start="299:15" pos:end="299:40"><name pos:start="299:15" pos:end="299:25">qdev_create</name><argument_list pos:start="299:26" pos:end="299:40">(<argument pos:start="299:27" pos:end="299:30"><expr pos:start="299:27" pos:end="299:30"><name pos:start="299:27" pos:end="299:30">NULL</name></expr></argument>, <argument pos:start="299:33" pos:end="299:39"><expr pos:start="299:33" pos:end="299:39"><literal type="string" pos:start="299:33" pos:end="299:39">"xgmac"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="301:9" pos:end="301:51"><expr pos:start="301:9" pos:end="301:50"><call pos:start="301:9" pos:end="301:50"><name pos:start="301:9" pos:end="301:31">qdev_set_nic_properties</name><argument_list pos:start="301:32" pos:end="301:50">(<argument pos:start="301:33" pos:end="301:35"><expr pos:start="301:33" pos:end="301:35"><name pos:start="301:33" pos:end="301:35">dev</name></expr></argument>, <argument pos:start="301:38" pos:end="301:49"><expr pos:start="301:38" pos:end="301:49"><operator pos:start="301:38" pos:end="301:38">&amp;</operator><name pos:start="301:39" pos:end="301:49"><name pos:start="301:39" pos:end="301:46">nd_table</name><index pos:start="301:47" pos:end="301:49">[<expr pos:start="301:48" pos:end="301:48"><literal type="number" pos:start="301:48" pos:end="301:48">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="303:9" pos:end="303:30"><expr pos:start="303:9" pos:end="303:29"><call pos:start="303:9" pos:end="303:29"><name pos:start="303:9" pos:end="303:24">qdev_init_nofail</name><argument_list pos:start="303:25" pos:end="303:29">(<argument pos:start="303:26" pos:end="303:28"><expr pos:start="303:26" pos:end="303:28"><name pos:start="303:26" pos:end="303:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:60"><expr pos:start="305:9" pos:end="305:59"><call pos:start="305:9" pos:end="305:59"><name pos:start="305:9" pos:end="305:23">sysbus_mmio_map</name><argument_list pos:start="305:24" pos:end="305:59">(<argument pos:start="305:25" pos:end="305:43"><expr pos:start="305:25" pos:end="305:43"><call pos:start="305:25" pos:end="305:43"><name pos:start="305:25" pos:end="305:38">SYS_BUS_DEVICE</name><argument_list pos:start="305:39" pos:end="305:43">(<argument pos:start="305:40" pos:end="305:42"><expr pos:start="305:40" pos:end="305:42"><name pos:start="305:40" pos:end="305:42">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="305:46" pos:end="305:46"><expr pos:start="305:46" pos:end="305:46"><literal type="number" pos:start="305:46" pos:end="305:46">0</literal></expr></argument>, <argument pos:start="305:49" pos:end="305:58"><expr pos:start="305:49" pos:end="305:58"><literal type="number" pos:start="305:49" pos:end="305:58">0xfff51000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:60"><expr pos:start="307:9" pos:end="307:59"><call pos:start="307:9" pos:end="307:59"><name pos:start="307:9" pos:end="307:26">sysbus_connect_irq</name><argument_list pos:start="307:27" pos:end="307:59">(<argument pos:start="307:28" pos:end="307:46"><expr pos:start="307:28" pos:end="307:46"><call pos:start="307:28" pos:end="307:46"><name pos:start="307:28" pos:end="307:41">SYS_BUS_DEVICE</name><argument_list pos:start="307:42" pos:end="307:46">(<argument pos:start="307:43" pos:end="307:45"><expr pos:start="307:43" pos:end="307:45"><name pos:start="307:43" pos:end="307:45">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="307:49" pos:end="307:49"><expr pos:start="307:49" pos:end="307:49"><literal type="number" pos:start="307:49" pos:end="307:49">0</literal></expr></argument>, <argument pos:start="307:52" pos:end="307:58"><expr pos:start="307:52" pos:end="307:58"><name pos:start="307:52" pos:end="307:58"><name pos:start="307:52" pos:end="307:54">pic</name><index pos:start="307:55" pos:end="307:58">[<expr pos:start="307:56" pos:end="307:57"><literal type="number" pos:start="307:56" pos:end="307:57">80</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:60"><expr pos:start="309:9" pos:end="309:59"><call pos:start="309:9" pos:end="309:59"><name pos:start="309:9" pos:end="309:26">sysbus_connect_irq</name><argument_list pos:start="309:27" pos:end="309:59">(<argument pos:start="309:28" pos:end="309:46"><expr pos:start="309:28" pos:end="309:46"><call pos:start="309:28" pos:end="309:46"><name pos:start="309:28" pos:end="309:41">SYS_BUS_DEVICE</name><argument_list pos:start="309:42" pos:end="309:46">(<argument pos:start="309:43" pos:end="309:45"><expr pos:start="309:43" pos:end="309:45"><name pos:start="309:43" pos:end="309:45">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="309:49" pos:end="309:49"><expr pos:start="309:49" pos:end="309:49"><literal type="number" pos:start="309:49" pos:end="309:49">1</literal></expr></argument>, <argument pos:start="309:52" pos:end="309:58"><expr pos:start="309:52" pos:end="309:58"><name pos:start="309:52" pos:end="309:58"><name pos:start="309:52" pos:end="309:54">pic</name><index pos:start="309:55" pos:end="309:58">[<expr pos:start="309:56" pos:end="309:57"><literal type="number" pos:start="309:56" pos:end="309:57">81</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:60"><expr pos:start="311:9" pos:end="311:59"><call pos:start="311:9" pos:end="311:59"><name pos:start="311:9" pos:end="311:26">sysbus_connect_irq</name><argument_list pos:start="311:27" pos:end="311:59">(<argument pos:start="311:28" pos:end="311:46"><expr pos:start="311:28" pos:end="311:46"><call pos:start="311:28" pos:end="311:46"><name pos:start="311:28" pos:end="311:41">SYS_BUS_DEVICE</name><argument_list pos:start="311:42" pos:end="311:46">(<argument pos:start="311:43" pos:end="311:45"><expr pos:start="311:43" pos:end="311:45"><name pos:start="311:43" pos:end="311:45">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="311:49" pos:end="311:49"><expr pos:start="311:49" pos:end="311:49"><literal type="number" pos:start="311:49" pos:end="311:49">2</literal></expr></argument>, <argument pos:start="311:52" pos:end="311:58"><expr pos:start="311:52" pos:end="311:58"><name pos:start="311:52" pos:end="311:58"><name pos:start="311:52" pos:end="311:54">pic</name><index pos:start="311:55" pos:end="311:58">[<expr pos:start="311:56" pos:end="311:57"><literal type="number" pos:start="311:56" pos:end="311:57">82</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="317:5" pos:end="317:39"><expr pos:start="317:5" pos:end="317:38"><name pos:start="317:5" pos:end="317:27"><name pos:start="317:5" pos:end="317:18">highbank_binfo</name><operator pos:start="317:19" pos:end="317:19">.</operator><name pos:start="317:20" pos:end="317:27">ram_size</name></name> <operator pos:start="317:29" pos:end="317:29">=</operator> <name pos:start="317:31" pos:end="317:38">ram_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="319:5" pos:end="319:53"><expr pos:start="319:5" pos:end="319:52"><name pos:start="319:5" pos:end="319:34"><name pos:start="319:5" pos:end="319:18">highbank_binfo</name><operator pos:start="319:19" pos:end="319:19">.</operator><name pos:start="319:20" pos:end="319:34">kernel_filename</name></name> <operator pos:start="319:36" pos:end="319:36">=</operator> <name pos:start="319:38" pos:end="319:52">kernel_filename</name></expr>;</expr_stmt>

    <expr_stmt pos:start="321:5" pos:end="321:51"><expr pos:start="321:5" pos:end="321:50"><name pos:start="321:5" pos:end="321:33"><name pos:start="321:5" pos:end="321:18">highbank_binfo</name><operator pos:start="321:19" pos:end="321:19">.</operator><name pos:start="321:20" pos:end="321:33">kernel_cmdline</name></name> <operator pos:start="321:35" pos:end="321:35">=</operator> <name pos:start="321:37" pos:end="321:50">kernel_cmdline</name></expr>;</expr_stmt>

    <expr_stmt pos:start="323:5" pos:end="323:53"><expr pos:start="323:5" pos:end="323:52"><name pos:start="323:5" pos:end="323:34"><name pos:start="323:5" pos:end="323:18">highbank_binfo</name><operator pos:start="323:19" pos:end="323:19">.</operator><name pos:start="323:20" pos:end="323:34">initrd_filename</name></name> <operator pos:start="323:36" pos:end="323:36">=</operator> <name pos:start="323:38" pos:end="323:52">initrd_filename</name></expr>;</expr_stmt>

    <comment type="block" pos:start="325:5" pos:end="331:7">/* highbank requires a dtb in order to boot, and the dtb will override

     * the board ID. The following value is ignored, so set it to -1 to be

     * clear that the value is meaningless.

     */</comment>

    <expr_stmt pos:start="333:5" pos:end="333:33"><expr pos:start="333:5" pos:end="333:32"><name pos:start="333:5" pos:end="333:27"><name pos:start="333:5" pos:end="333:18">highbank_binfo</name><operator pos:start="333:19" pos:end="333:19">.</operator><name pos:start="333:20" pos:end="333:27">board_id</name></name> <operator pos:start="333:29" pos:end="333:29">=</operator> <operator pos:start="333:31" pos:end="333:31">-</operator><literal type="number" pos:start="333:32" pos:end="333:32">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="335:5" pos:end="335:38"><expr pos:start="335:5" pos:end="335:37"><name pos:start="335:5" pos:end="335:26"><name pos:start="335:5" pos:end="335:18">highbank_binfo</name><operator pos:start="335:19" pos:end="335:19">.</operator><name pos:start="335:20" pos:end="335:26">nb_cpus</name></name> <operator pos:start="335:28" pos:end="335:28">=</operator> <name pos:start="335:30" pos:end="335:37">smp_cpus</name></expr>;</expr_stmt>

    <expr_stmt pos:start="337:5" pos:end="337:36"><expr pos:start="337:5" pos:end="337:35"><name pos:start="337:5" pos:end="337:31"><name pos:start="337:5" pos:end="337:18">highbank_binfo</name><operator pos:start="337:19" pos:end="337:19">.</operator><name pos:start="337:20" pos:end="337:31">loader_start</name></name> <operator pos:start="337:33" pos:end="337:33">=</operator> <literal type="number" pos:start="337:35" pos:end="337:35">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="339:5" pos:end="339:61"><expr pos:start="339:5" pos:end="339:60"><name pos:start="339:5" pos:end="339:39"><name pos:start="339:5" pos:end="339:18">highbank_binfo</name><operator pos:start="339:19" pos:end="339:19">.</operator><name pos:start="339:20" pos:end="339:39">write_secondary_boot</name></name> <operator pos:start="339:41" pos:end="339:41">=</operator> <name pos:start="339:43" pos:end="339:60">hb_write_secondary</name></expr>;</expr_stmt>

    <expr_stmt pos:start="341:5" pos:end="341:65"><expr pos:start="341:5" pos:end="341:64"><name pos:start="341:5" pos:end="341:43"><name pos:start="341:5" pos:end="341:18">highbank_binfo</name><operator pos:start="341:19" pos:end="341:19">.</operator><name pos:start="341:20" pos:end="341:43">secondary_cpu_reset_hook</name></name> <operator pos:start="341:45" pos:end="341:45">=</operator> <name pos:start="341:47" pos:end="341:64">hb_reset_secondary</name></expr>;</expr_stmt>

    <expr_stmt pos:start="343:5" pos:end="343:57"><expr pos:start="343:5" pos:end="343:56"><call pos:start="343:5" pos:end="343:56"><name pos:start="343:5" pos:end="343:19">arm_load_kernel</name><argument_list pos:start="343:20" pos:end="343:56">(<argument pos:start="343:21" pos:end="343:38"><expr pos:start="343:21" pos:end="343:38"><call pos:start="343:21" pos:end="343:38"><name pos:start="343:21" pos:end="343:27">ARM_CPU</name><argument_list pos:start="343:28" pos:end="343:38">(<argument pos:start="343:29" pos:end="343:37"><expr pos:start="343:29" pos:end="343:37"><name pos:start="343:29" pos:end="343:37">first_cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="343:41" pos:end="343:55"><expr pos:start="343:41" pos:end="343:55"><operator pos:start="343:41" pos:end="343:41">&amp;</operator><name pos:start="343:42" pos:end="343:55">highbank_binfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
