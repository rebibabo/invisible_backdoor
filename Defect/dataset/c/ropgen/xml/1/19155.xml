<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19155.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">spitz_i2c_setup</name><parameter_list pos:start="1:28" pos:end="1:45">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:39">PXA2xxState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">cpu</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="35:58">

    <comment type="block" pos:start="5:5" pos:end="5:52">/* Attach the CPU on one end of our I2C bus.  */</comment>

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">I2CBus</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:15">bus</name> <init pos:start="7:17" pos:end="7:45">= <expr pos:start="7:19" pos:end="7:45"><call pos:start="7:19" pos:end="7:45"><name pos:start="7:19" pos:end="7:32">pxa2xx_i2c_bus</name><argument_list pos:start="7:33" pos:end="7:45">(<argument pos:start="7:34" pos:end="7:44"><expr pos:start="7:34" pos:end="7:44"><name pos:start="7:34" pos:end="7:44"><name pos:start="7:34" pos:end="7:36">cpu</name><operator pos:start="7:37" pos:end="7:38">-&gt;</operator><name pos:start="7:39" pos:end="7:41">i2c</name><index pos:start="7:42" pos:end="7:44">[<expr pos:start="7:43" pos:end="7:43"><literal type="number" pos:start="7:43" pos:end="7:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">DeviceState</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">wm</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:36">/* Attach a WM8750 to the bus */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:44"><expr pos:start="17:5" pos:end="17:43"><name pos:start="17:5" pos:end="17:6">wm</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <call pos:start="17:10" pos:end="17:43"><name pos:start="17:10" pos:end="17:25">i2c_create_slave</name><argument_list pos:start="17:26" pos:end="17:43">(<argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><name pos:start="17:27" pos:end="17:29">bus</name></expr></argument>, <argument pos:start="17:32" pos:end="17:39"><expr pos:start="17:32" pos:end="17:39"><literal type="string" pos:start="17:32" pos:end="17:39">"wm8750"</literal></expr></argument>, <argument pos:start="17:42" pos:end="17:42"><expr pos:start="17:42" pos:end="17:42"><literal type="number" pos:start="17:42" pos:end="17:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><call pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:21">spitz_wm8750_addr</name><argument_list pos:start="21:22" pos:end="21:31">(<argument pos:start="21:23" pos:end="21:24"><expr pos:start="21:23" pos:end="21:24"><name pos:start="21:23" pos:end="21:24">wm</name></expr></argument>, <argument pos:start="21:27" pos:end="21:27"><expr pos:start="21:27" pos:end="21:27"><literal type="number" pos:start="21:27" pos:end="21:27">0</literal></expr></argument>, <argument pos:start="21:30" pos:end="21:30"><expr pos:start="21:30" pos:end="21:30"><literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="25:69"><expr pos:start="23:5" pos:end="25:68"><call pos:start="23:5" pos:end="25:68"><name pos:start="23:5" pos:end="23:25">qdev_connect_gpio_out</name><argument_list pos:start="23:26" pos:end="25:68">(<argument pos:start="23:27" pos:end="23:35"><expr pos:start="23:27" pos:end="23:35"><name pos:start="23:27" pos:end="23:35"><name pos:start="23:27" pos:end="23:29">cpu</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:35">gpio</name></name></expr></argument>, <argument pos:start="23:38" pos:end="23:50"><expr pos:start="23:38" pos:end="23:50"><name pos:start="23:38" pos:end="23:50">SPITZ_GPIO_WM</name></expr></argument>,

                    <argument pos:start="25:21" pos:end="25:67"><expr pos:start="25:21" pos:end="25:67"><call pos:start="25:21" pos:end="25:64"><name pos:start="25:21" pos:end="25:38">qemu_allocate_irqs</name><argument_list pos:start="25:39" pos:end="25:64">(<argument pos:start="25:40" pos:end="25:56"><expr pos:start="25:40" pos:end="25:56"><name pos:start="25:40" pos:end="25:56">spitz_wm8750_addr</name></expr></argument>, <argument pos:start="25:59" pos:end="25:60"><expr pos:start="25:59" pos:end="25:60"><name pos:start="25:59" pos:end="25:60">wm</name></expr></argument>, <argument pos:start="25:63" pos:end="25:63"><expr pos:start="25:63" pos:end="25:63"><literal type="number" pos:start="25:63" pos:end="25:63">1</literal></expr></argument>)</argument_list></call><index pos:start="25:65" pos:end="25:67">[<expr pos:start="25:66" pos:end="25:66"><literal type="number" pos:start="25:66" pos:end="25:66">0</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="27:5" pos:end="27:41">/* .. and to the sound interface.  */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:7">cpu</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:12">i2s</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:20">opaque</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:25">wm</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:41"><expr pos:start="31:5" pos:end="31:40"><name pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:7">cpu</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:12">i2s</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:23">codec_out</name></name> <operator pos:start="31:25" pos:end="31:25">=</operator> <name pos:start="31:27" pos:end="31:40">wm8750_dac_dat</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:40"><expr pos:start="33:5" pos:end="33:39"><name pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:7">cpu</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:12">i2s</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:22">codec_in</name></name> <operator pos:start="33:24" pos:end="33:24">=</operator> <name pos:start="33:26" pos:end="33:39">wm8750_adc_dat</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:58"><expr pos:start="35:5" pos:end="35:57"><call pos:start="35:5" pos:end="35:57"><name pos:start="35:5" pos:end="35:23">wm8750_data_req_set</name><argument_list pos:start="35:24" pos:end="35:57">(<argument pos:start="35:25" pos:end="35:26"><expr pos:start="35:25" pos:end="35:26"><name pos:start="35:25" pos:end="35:26">wm</name></expr></argument>, <argument pos:start="35:29" pos:end="35:46"><expr pos:start="35:29" pos:end="35:46"><name pos:start="35:29" pos:end="35:46"><name pos:start="35:29" pos:end="35:31">cpu</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:36">i2s</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:46">data_req</name></name></expr></argument>, <argument pos:start="35:49" pos:end="35:56"><expr pos:start="35:49" pos:end="35:56"><name pos:start="35:49" pos:end="35:56"><name pos:start="35:49" pos:end="35:51">cpu</name><operator pos:start="35:52" pos:end="35:53">-&gt;</operator><name pos:start="35:54" pos:end="35:56">i2s</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
