<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20922.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">vp7_decode_frame_header</name><parameter_list pos:start="1:35" pos:end="1:83">(<parameter pos:start="1:36" pos:end="1:48"><decl pos:start="1:36" pos:end="1:48"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:45">VP8Context</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:68"><decl pos:start="1:51" pos:end="1:68"><type pos:start="1:51" pos:end="1:68"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:63">uint8_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">buf</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:82"><decl pos:start="1:71" pos:end="1:82"><type pos:start="1:71" pos:end="1:82"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:82">buf_size</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="113:13">{<block_content pos:start="3:5" pos:end="113:13">
    <decl_stmt pos:start="3:5" pos:end="3:30"><decl pos:start="3:5" pos:end="3:29"><type pos:start="3:5" pos:end="3:20"><name pos:start="3:5" pos:end="3:18">VP56RangeCoder</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier></type><name pos:start="3:21" pos:end="3:21">c</name> <init pos:start="3:23" pos:end="3:29">= <expr pos:start="3:25" pos:end="3:29"><operator pos:start="3:25" pos:end="3:25">&amp;</operator><name pos:start="3:26" pos:end="3:29"><name pos:start="3:26" pos:end="3:26">s</name><operator pos:start="3:27" pos:end="3:28">-&gt;</operator><name pos:start="3:29" pos:end="3:29">c</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:46"><decl pos:start="4:5" pos:end="4:18"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:18">part1_size</name></decl>, <decl pos:start="4:21" pos:end="4:26"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:21" pos:end="4:26">hscale</name></decl>, <decl pos:start="4:29" pos:end="4:34"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:29" pos:end="4:34">vscale</name></decl>, <decl pos:start="4:37" pos:end="4:37"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:37" pos:end="4:37">i</name></decl>, <decl pos:start="4:40" pos:end="4:40"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:40" pos:end="4:40">j</name></decl>, <decl pos:start="4:43" pos:end="4:45"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:43" pos:end="4:45">ret</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">width</name>  <init pos:start="5:16" pos:end="5:32">= <expr pos:start="5:18" pos:end="5:32"><name pos:start="5:18" pos:end="5:32"><name pos:start="5:18" pos:end="5:18">s</name><operator pos:start="5:19" pos:end="5:20">-&gt;</operator><name pos:start="5:21" pos:end="5:25">avctx</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:32">width</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:34"><decl pos:start="6:5" pos:end="6:33"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:14">height</name> <init pos:start="6:16" pos:end="6:33">= <expr pos:start="6:18" pos:end="6:33"><name pos:start="6:18" pos:end="6:33"><name pos:start="6:18" pos:end="6:18">s</name><operator pos:start="6:19" pos:end="6:20">-&gt;</operator><name pos:start="6:21" pos:end="6:25">avctx</name><operator pos:start="6:26" pos:end="6:27">-&gt;</operator><name pos:start="6:28" pos:end="6:33">height</name></name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:36"><expr pos:start="7:5" pos:end="7:35"><name pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:5">s</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:14">profile</name></name>   <operator pos:start="7:18" pos:end="7:18">=</operator>  <operator pos:start="7:21" pos:end="7:21">(</operator><name pos:start="7:22" pos:end="7:27"><name pos:start="7:22" pos:end="7:24">buf</name><index pos:start="7:25" pos:end="7:27">[<expr pos:start="7:26" pos:end="7:26"><literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr>]</index></name><operator pos:start="7:28" pos:end="7:29">&gt;&gt;</operator><literal type="number" pos:start="7:30" pos:end="7:30">1</literal><operator pos:start="7:31" pos:end="7:31">)</operator> <operator pos:start="7:33" pos:end="7:33">&amp;</operator> <literal type="number" pos:start="7:35" pos:end="7:35">7</literal></expr>;</expr_stmt>
    <if_stmt pos:start="8:5" pos:end="113:13"><if pos:start="8:5" pos:end="113:13">if <condition pos:start="8:8" pos:end="8:23">(<expr pos:start="8:9" pos:end="8:22"><name pos:start="8:9" pos:end="8:18"><name pos:start="8:9" pos:end="8:9">s</name><operator pos:start="8:10" pos:end="8:11">-&gt;</operator><name pos:start="8:12" pos:end="8:18">profile</name></name> <operator pos:start="8:20" pos:end="8:20">&gt;</operator> <literal type="number" pos:start="8:22" pos:end="8:22">1</literal></expr>)</condition> <block pos:start="8:25" pos:end="113:13">{<block_content pos:start="9:9" pos:end="113:13">
        <expr_stmt pos:start="9:9" pos:end="9:74"><expr pos:start="9:9" pos:end="9:73"><call pos:start="9:9" pos:end="9:73"><name pos:start="9:9" pos:end="9:29">avpriv_request_sample</name><argument_list pos:start="9:30" pos:end="9:73">(<argument pos:start="9:31" pos:end="9:38"><expr pos:start="9:31" pos:end="9:38"><name pos:start="9:31" pos:end="9:38"><name pos:start="9:31" pos:end="9:31">s</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:38">avctx</name></name></expr></argument>, <argument pos:start="9:41" pos:end="9:60"><expr pos:start="9:41" pos:end="9:60"><literal type="string" pos:start="9:41" pos:end="9:60">"Unknown profile %d"</literal></expr></argument>, <argument pos:start="9:63" pos:end="9:72"><expr pos:start="9:63" pos:end="9:72"><name pos:start="9:63" pos:end="9:72"><name pos:start="9:63" pos:end="9:63">s</name><operator pos:start="9:64" pos:end="9:65">-&gt;</operator><name pos:start="9:66" pos:end="9:72">profile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:33"><expr pos:start="10:5" pos:end="10:32"><name pos:start="10:5" pos:end="10:15"><name pos:start="10:5" pos:end="10:5">s</name><operator pos:start="10:6" pos:end="10:7">-&gt;</operator><name pos:start="10:8" pos:end="10:15">keyframe</name></name>  <operator pos:start="10:18" pos:end="10:18">=</operator> <operator pos:start="10:20" pos:end="10:20">!</operator><operator pos:start="10:21" pos:end="10:21">(</operator><name pos:start="10:22" pos:end="10:27"><name pos:start="10:22" pos:end="10:24">buf</name><index pos:start="10:25" pos:end="10:27">[<expr pos:start="10:26" pos:end="10:26"><literal type="number" pos:start="10:26" pos:end="10:26">0</literal></expr>]</index></name> <operator pos:start="10:29" pos:end="10:29">&amp;</operator> <literal type="number" pos:start="10:31" pos:end="10:31">1</literal><operator pos:start="10:32" pos:end="10:32">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:21"><expr pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:16">invisible</name></name> <operator pos:start="11:18" pos:end="11:18">=</operator> <literal type="number" pos:start="11:20" pos:end="11:20">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:37"><expr pos:start="12:5" pos:end="12:36"><name pos:start="12:5" pos:end="12:14">part1_size</name>   <operator pos:start="12:18" pos:end="12:18">=</operator> <call pos:start="12:20" pos:end="12:31"><name pos:start="12:20" pos:end="12:26">AV_RL24</name><argument_list pos:start="12:27" pos:end="12:31">(<argument pos:start="12:28" pos:end="12:30"><expr pos:start="12:28" pos:end="12:30"><name pos:start="12:28" pos:end="12:30">buf</name></expr></argument>)</argument_list></call> <operator pos:start="12:33" pos:end="12:34">&gt;&gt;</operator> <literal type="number" pos:start="12:36" pos:end="12:36">4</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:7">buf</name>      <operator pos:start="13:14" pos:end="13:15">+=</operator> <literal type="number" pos:start="13:17" pos:end="13:19">4</literal> <operator pos:start="13:19" pos:end="13:19">-</operator> <name pos:start="13:21" pos:end="13:30"><name pos:start="13:21" pos:end="13:21">s</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:30">profile</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:31"><expr pos:start="14:5" pos:end="14:30"><name pos:start="14:5" pos:end="14:12">buf_size</name> <operator pos:start="14:14" pos:end="14:15">-=</operator> <literal type="number" pos:start="14:17" pos:end="14:19">4</literal> <operator pos:start="14:19" pos:end="14:19">-</operator> <name pos:start="14:21" pos:end="14:30"><name pos:start="14:21" pos:end="14:21">s</name><operator pos:start="14:22" pos:end="14:23">-&gt;</operator><name pos:start="14:24" pos:end="14:30">profile</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:92"><expr pos:start="15:5" pos:end="15:91"><call pos:start="15:5" pos:end="15:91"><name pos:start="15:5" pos:end="15:10">memcpy</name><argument_list pos:start="15:11" pos:end="15:91">(<argument pos:start="15:12" pos:end="15:28"><expr pos:start="15:12" pos:end="15:28"><name pos:start="15:12" pos:end="15:28"><name pos:start="15:12" pos:end="15:12">s</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:28">put_pixels_tab</name></name></expr></argument>, <argument pos:start="15:31" pos:end="15:63"><expr pos:start="15:31" pos:end="15:63"><name pos:start="15:31" pos:end="15:63"><name pos:start="15:31" pos:end="15:31">s</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:39">vp8dsp</name><operator pos:start="15:40" pos:end="15:40">.</operator><name pos:start="15:41" pos:end="15:63">put_vp8_epel_pixels_tab</name></name></expr></argument>, <argument pos:start="15:66" pos:end="15:90"><expr pos:start="15:66" pos:end="15:90"><sizeof pos:start="15:66" pos:end="15:90">sizeof<argument_list pos:start="15:72" pos:end="15:90">(<argument pos:start="15:73" pos:end="15:89"><expr pos:start="15:73" pos:end="15:89"><name pos:start="15:73" pos:end="15:89"><name pos:start="15:73" pos:end="15:73">s</name><operator pos:start="15:74" pos:end="15:75">-&gt;</operator><name pos:start="15:76" pos:end="15:89">put_pixels_tab</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:51"><expr pos:start="16:5" pos:end="16:50"><call pos:start="16:5" pos:end="16:50"><name pos:start="16:5" pos:end="16:30">ff_vp56_init_range_decoder</name><argument_list pos:start="16:31" pos:end="16:50">(<argument pos:start="16:32" pos:end="16:32"><expr pos:start="16:32" pos:end="16:32"><name pos:start="16:32" pos:end="16:32">c</name></expr></argument>, <argument pos:start="16:35" pos:end="16:37"><expr pos:start="16:35" pos:end="16:37"><name pos:start="16:35" pos:end="16:37">buf</name></expr></argument>, <argument pos:start="16:40" pos:end="16:49"><expr pos:start="16:40" pos:end="16:49"><name pos:start="16:40" pos:end="16:49">part1_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:7">buf</name>      <operator pos:start="17:14" pos:end="17:15">+=</operator> <name pos:start="17:17" pos:end="17:26">part1_size</name></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:27"><expr pos:start="18:5" pos:end="18:26"><name pos:start="18:5" pos:end="18:12">buf_size</name> <operator pos:start="18:14" pos:end="18:15">-=</operator> <name pos:start="18:17" pos:end="18:26">part1_size</name></expr>;</expr_stmt>
    <comment type="block" pos:start="19:5" pos:end="19:51">/* A. Dimension information (keyframes only) */</comment>
    <if_stmt pos:start="20:5" pos:end="113:13"><if pos:start="20:5" pos:end="113:13">if <condition pos:start="20:8" pos:end="20:20">(<expr pos:start="20:9" pos:end="20:19"><name pos:start="20:9" pos:end="20:19"><name pos:start="20:9" pos:end="20:9">s</name><operator pos:start="20:10" pos:end="20:11">-&gt;</operator><name pos:start="20:12" pos:end="20:19">keyframe</name></name></expr>)</condition> <block pos:start="20:22" pos:end="113:13">{<block_content pos:start="21:9" pos:end="113:13">
        <expr_stmt pos:start="21:9" pos:end="21:41"><expr pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:13">width</name>  <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:40"><name pos:start="21:18" pos:end="21:33">vp8_rac_get_uint</name><argument_list pos:start="21:34" pos:end="21:40">(<argument pos:start="21:35" pos:end="21:35"><expr pos:start="21:35" pos:end="21:35"><name pos:start="21:35" pos:end="21:35">c</name></expr></argument>, <argument pos:start="21:38" pos:end="21:39"><expr pos:start="21:38" pos:end="21:39"><literal type="number" pos:start="21:38" pos:end="21:39">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="22:41"><expr pos:start="22:9" pos:end="22:40"><name pos:start="22:9" pos:end="22:14">height</name> <operator pos:start="22:16" pos:end="22:16">=</operator> <call pos:start="22:18" pos:end="22:40"><name pos:start="22:18" pos:end="22:33">vp8_rac_get_uint</name><argument_list pos:start="22:34" pos:end="22:40">(<argument pos:start="22:35" pos:end="22:35"><expr pos:start="22:35" pos:end="22:35"><name pos:start="22:35" pos:end="22:35">c</name></expr></argument>, <argument pos:start="22:38" pos:end="22:39"><expr pos:start="22:38" pos:end="22:39"><literal type="number" pos:start="22:38" pos:end="22:39">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:14">hscale</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <call pos:start="23:18" pos:end="23:39"><name pos:start="23:18" pos:end="23:33">vp8_rac_get_uint</name><argument_list pos:start="23:34" pos:end="23:39">(<argument pos:start="23:35" pos:end="23:35"><expr pos:start="23:35" pos:end="23:35"><name pos:start="23:35" pos:end="23:35">c</name></expr></argument>, <argument pos:start="23:38" pos:end="23:38"><expr pos:start="23:38" pos:end="23:38"><literal type="number" pos:start="23:38" pos:end="23:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:40"><expr pos:start="24:9" pos:end="24:39"><name pos:start="24:9" pos:end="24:14">vscale</name> <operator pos:start="24:16" pos:end="24:16">=</operator> <call pos:start="24:18" pos:end="24:39"><name pos:start="24:18" pos:end="24:33">vp8_rac_get_uint</name><argument_list pos:start="24:34" pos:end="24:39">(<argument pos:start="24:35" pos:end="24:35"><expr pos:start="24:35" pos:end="24:35"><name pos:start="24:35" pos:end="24:35">c</name></expr></argument>, <argument pos:start="24:38" pos:end="24:38"><expr pos:start="24:38" pos:end="24:38"><literal type="number" pos:start="24:38" pos:end="24:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="25:9" pos:end="26:57"><if pos:start="25:9" pos:end="26:57">if <condition pos:start="25:12" pos:end="25:29">(<expr pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:18">hscale</name> <operator pos:start="25:20" pos:end="25:21">||</operator> <name pos:start="25:23" pos:end="25:28">vscale</name></expr>)</condition><block type="pseudo" pos:start="26:13" pos:end="26:57"><block_content pos:start="26:13" pos:end="26:57">
            <expr_stmt pos:start="26:13" pos:end="26:57"><expr pos:start="26:13" pos:end="26:56"><call pos:start="26:13" pos:end="26:56"><name pos:start="26:13" pos:end="26:33">avpriv_request_sample</name><argument_list pos:start="26:34" pos:end="26:56">(<argument pos:start="26:35" pos:end="26:42"><expr pos:start="26:35" pos:end="26:42"><name pos:start="26:35" pos:end="26:42"><name pos:start="26:35" pos:end="26:35">s</name><operator pos:start="26:36" pos:end="26:37">-&gt;</operator><name pos:start="26:38" pos:end="26:42">avctx</name></name></expr></argument>, <argument pos:start="26:45" pos:end="26:55"><expr pos:start="26:45" pos:end="26:55"><literal type="string" pos:start="26:45" pos:end="26:55">"Upscaling"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="27:9" pos:end="27:65"><expr pos:start="27:9" pos:end="27:64"><name pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:24">update_golden</name></name> <operator pos:start="27:26" pos:end="27:26">=</operator> <name pos:start="27:28" pos:end="27:43"><name pos:start="27:28" pos:end="27:28">s</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:43">update_altref</name></name> <operator pos:start="27:45" pos:end="27:45">=</operator> <name pos:start="27:47" pos:end="27:64">VP56_FRAME_CURRENT</name></expr>;</expr_stmt>
        <expr_stmt pos:start="28:9" pos:end="28:41"><expr pos:start="28:9" pos:end="28:40"><call pos:start="28:9" pos:end="28:40"><name pos:start="28:9" pos:end="28:37">vp78_reset_probability_tables</name><argument_list pos:start="28:38" pos:end="28:40">(<argument pos:start="28:39" pos:end="28:39"><expr pos:start="28:39" pos:end="28:39"><name pos:start="28:39" pos:end="28:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="29:9" pos:end="29:89"><expr pos:start="29:9" pos:end="29:88"><call pos:start="29:9" pos:end="29:88"><name pos:start="29:9" pos:end="29:14">memcpy</name><argument_list pos:start="29:15" pos:end="29:88">(<argument pos:start="29:16" pos:end="29:33"><expr pos:start="29:16" pos:end="29:33"><name pos:start="29:16" pos:end="29:33"><name pos:start="29:16" pos:end="29:16">s</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:22">prob</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:33">pred16x16</name></name></expr></argument>, <argument pos:start="29:36" pos:end="29:59"><expr pos:start="29:36" pos:end="29:59"><name pos:start="29:36" pos:end="29:59">vp8_pred16x16_prob_inter</name></expr></argument>, <argument pos:start="29:62" pos:end="29:87"><expr pos:start="29:62" pos:end="29:87"><sizeof pos:start="29:62" pos:end="29:87">sizeof<argument_list pos:start="29:68" pos:end="29:87">(<argument pos:start="29:69" pos:end="29:86"><expr pos:start="29:69" pos:end="29:86"><name pos:start="29:69" pos:end="29:86"><name pos:start="29:69" pos:end="29:69">s</name><operator pos:start="29:70" pos:end="29:71">-&gt;</operator><name pos:start="29:72" pos:end="29:75">prob</name><operator pos:start="29:76" pos:end="29:77">-&gt;</operator><name pos:start="29:78" pos:end="29:86">pred16x16</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="30:9" pos:end="30:88"><expr pos:start="30:9" pos:end="30:87"><call pos:start="30:9" pos:end="30:87"><name pos:start="30:9" pos:end="30:14">memcpy</name><argument_list pos:start="30:15" pos:end="30:87">(<argument pos:start="30:16" pos:end="30:32"><expr pos:start="30:16" pos:end="30:32"><name pos:start="30:16" pos:end="30:32"><name pos:start="30:16" pos:end="30:16">s</name><operator pos:start="30:17" pos:end="30:18">-&gt;</operator><name pos:start="30:19" pos:end="30:22">prob</name><operator pos:start="30:23" pos:end="30:24">-&gt;</operator><name pos:start="30:25" pos:end="30:32">pred8x8c</name></name></expr></argument> , <argument pos:start="30:36" pos:end="30:58"><expr pos:start="30:36" pos:end="30:58"><name pos:start="30:36" pos:end="30:58">vp8_pred8x8c_prob_inter</name></expr></argument> , <argument pos:start="30:62" pos:end="30:86"><expr pos:start="30:62" pos:end="30:86"><sizeof pos:start="30:62" pos:end="30:86">sizeof<argument_list pos:start="30:68" pos:end="30:86">(<argument pos:start="30:69" pos:end="30:85"><expr pos:start="30:69" pos:end="30:85"><name pos:start="30:69" pos:end="30:85"><name pos:start="30:69" pos:end="30:69">s</name><operator pos:start="30:70" pos:end="30:71">-&gt;</operator><name pos:start="30:72" pos:end="30:75">prob</name><operator pos:start="30:76" pos:end="30:77">-&gt;</operator><name pos:start="30:78" pos:end="30:85">pred8x8c</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="31:9" pos:end="32:92">for <control pos:start="31:13" pos:end="31:31">(<init pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">i</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:26"><expr pos:start="31:21" pos:end="31:25"><name pos:start="31:21" pos:end="31:21">i</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <literal type="number" pos:start="31:25" pos:end="31:25">2</literal></expr>;</condition> <incr pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:28">i</name><operator pos:start="31:29" pos:end="31:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="32:13" pos:end="32:92"><block_content pos:start="32:13" pos:end="32:92">
            <expr_stmt pos:start="32:13" pos:end="32:92"><expr pos:start="32:13" pos:end="32:91"><call pos:start="32:13" pos:end="32:91"><name pos:start="32:13" pos:end="32:18">memcpy</name><argument_list pos:start="32:19" pos:end="32:91">(<argument pos:start="32:20" pos:end="32:34"><expr pos:start="32:20" pos:end="32:34"><name pos:start="32:20" pos:end="32:34"><name pos:start="32:20" pos:end="32:20">s</name><operator pos:start="32:21" pos:end="32:22">-&gt;</operator><name pos:start="32:23" pos:end="32:26">prob</name><operator pos:start="32:27" pos:end="32:28">-&gt;</operator><name pos:start="32:29" pos:end="32:31">mvc</name><index pos:start="32:32" pos:end="32:34">[<expr pos:start="32:33" pos:end="32:33"><name pos:start="32:33" pos:end="32:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="32:37" pos:end="32:58"><expr pos:start="32:37" pos:end="32:58"><name pos:start="32:37" pos:end="32:58"><name pos:start="32:37" pos:end="32:55">vp7_mv_default_prob</name><index pos:start="32:56" pos:end="32:58">[<expr pos:start="32:57" pos:end="32:57"><name pos:start="32:57" pos:end="32:57">i</name></expr>]</index></name></expr></argument>, <argument pos:start="32:61" pos:end="32:90"><expr pos:start="32:61" pos:end="32:90"><sizeof pos:start="32:61" pos:end="32:90">sizeof<argument_list pos:start="32:67" pos:end="32:90">(<argument pos:start="32:68" pos:end="32:89"><expr pos:start="32:68" pos:end="32:89"><name pos:start="32:68" pos:end="32:89"><name pos:start="32:68" pos:end="32:86">vp7_mv_default_prob</name><index pos:start="32:87" pos:end="32:89">[<expr pos:start="32:88" pos:end="32:88"><name pos:start="32:88" pos:end="32:88">i</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
        <expr_stmt pos:start="33:9" pos:end="33:61"><expr pos:start="33:9" pos:end="33:60"><call pos:start="33:9" pos:end="33:60"><name pos:start="33:9" pos:end="33:14">memset</name><argument_list pos:start="33:15" pos:end="33:60">(<argument pos:start="33:16" pos:end="33:31"><expr pos:start="33:16" pos:end="33:31"><operator pos:start="33:16" pos:end="33:16">&amp;</operator><name pos:start="33:17" pos:end="33:31"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:31">segmentation</name></name></expr></argument>, <argument pos:start="33:34" pos:end="33:34"><expr pos:start="33:34" pos:end="33:34"><literal type="number" pos:start="33:34" pos:end="33:34">0</literal></expr></argument>, <argument pos:start="33:37" pos:end="33:59"><expr pos:start="33:37" pos:end="33:59"><sizeof pos:start="33:37" pos:end="33:59">sizeof<argument_list pos:start="33:43" pos:end="33:59">(<argument pos:start="33:44" pos:end="33:58"><expr pos:start="33:44" pos:end="33:58"><name pos:start="33:44" pos:end="33:58"><name pos:start="33:44" pos:end="33:44">s</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:58">segmentation</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="34:9" pos:end="34:53"><expr pos:start="34:9" pos:end="34:52"><call pos:start="34:9" pos:end="34:52"><name pos:start="34:9" pos:end="34:14">memset</name><argument_list pos:start="34:15" pos:end="34:52">(<argument pos:start="34:16" pos:end="34:27"><expr pos:start="34:16" pos:end="34:27"><operator pos:start="34:16" pos:end="34:16">&amp;</operator><name pos:start="34:17" pos:end="34:27"><name pos:start="34:17" pos:end="34:17">s</name><operator pos:start="34:18" pos:end="34:19">-&gt;</operator><name pos:start="34:20" pos:end="34:27">lf_delta</name></name></expr></argument>, <argument pos:start="34:30" pos:end="34:30"><expr pos:start="34:30" pos:end="34:30"><literal type="number" pos:start="34:30" pos:end="34:30">0</literal></expr></argument>, <argument pos:start="34:33" pos:end="34:51"><expr pos:start="34:33" pos:end="34:51"><sizeof pos:start="34:33" pos:end="34:51">sizeof<argument_list pos:start="34:39" pos:end="34:51">(<argument pos:start="34:40" pos:end="34:50"><expr pos:start="34:40" pos:end="34:50"><name pos:start="34:40" pos:end="34:50"><name pos:start="34:40" pos:end="34:40">s</name><operator pos:start="34:41" pos:end="34:42">-&gt;</operator><name pos:start="34:43" pos:end="34:50">lf_delta</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="35:9" pos:end="35:70"><expr pos:start="35:9" pos:end="35:69"><call pos:start="35:9" pos:end="35:69"><name pos:start="35:9" pos:end="35:14">memcpy</name><argument_list pos:start="35:15" pos:end="35:69">(<argument pos:start="35:16" pos:end="35:30"><expr pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:25"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:22">prob</name><index pos:start="35:23" pos:end="35:25">[<expr pos:start="35:24" pos:end="35:24"><literal type="number" pos:start="35:24" pos:end="35:24">0</literal></expr>]</index></name><operator pos:start="35:26" pos:end="35:26">.</operator><name pos:start="35:27" pos:end="35:30">scan</name></expr></argument>, <argument pos:start="35:33" pos:end="35:43"><expr pos:start="35:33" pos:end="35:43"><name pos:start="35:33" pos:end="35:43">zigzag_scan</name></expr></argument>, <argument pos:start="35:46" pos:end="35:68"><expr pos:start="35:46" pos:end="35:68"><sizeof pos:start="35:46" pos:end="35:68">sizeof<argument_list pos:start="35:52" pos:end="35:68">(<argument pos:start="35:53" pos:end="35:67"><expr pos:start="35:53" pos:end="35:67"><name pos:start="35:53" pos:end="35:62"><name pos:start="35:53" pos:end="35:53">s</name><operator pos:start="35:54" pos:end="35:55">-&gt;</operator><name pos:start="35:56" pos:end="35:59">prob</name><index pos:start="35:60" pos:end="35:62">[<expr pos:start="35:61" pos:end="35:61"><literal type="number" pos:start="35:61" pos:end="35:61">0</literal></expr>]</index></name><operator pos:start="35:63" pos:end="35:63">.</operator><name pos:start="35:64" pos:end="35:67">scan</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="36:5" pos:end="37:63"><if pos:start="36:5" pos:end="37:63">if <condition pos:start="36:8" pos:end="36:38">(<expr pos:start="36:9" pos:end="36:37"><name pos:start="36:9" pos:end="36:19"><name pos:start="36:9" pos:end="36:9">s</name><operator pos:start="36:10" pos:end="36:11">-&gt;</operator><name pos:start="36:12" pos:end="36:19">keyframe</name></name> <operator pos:start="36:21" pos:end="36:22">||</operator> <name pos:start="36:24" pos:end="36:33"><name pos:start="36:24" pos:end="36:24">s</name><operator pos:start="36:25" pos:end="36:26">-&gt;</operator><name pos:start="36:27" pos:end="36:33">profile</name></name> <operator pos:start="36:35" pos:end="36:35">&gt;</operator> <literal type="number" pos:start="36:37" pos:end="36:37">0</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:63"><block_content pos:start="37:9" pos:end="37:63">
        <expr_stmt pos:start="37:9" pos:end="37:63"><expr pos:start="37:9" pos:end="37:62"><call pos:start="37:9" pos:end="37:62"><name pos:start="37:9" pos:end="37:14">memset</name><argument_list pos:start="37:15" pos:end="37:62">(<argument pos:start="37:16" pos:end="37:31"><expr pos:start="37:16" pos:end="37:31"><name pos:start="37:16" pos:end="37:31"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:31">inter_dc_pred</name></name></expr></argument>, <argument pos:start="37:34" pos:end="37:34"><expr pos:start="37:34" pos:end="37:34"><literal type="number" pos:start="37:34" pos:end="37:34">0</literal></expr></argument> , <argument pos:start="37:38" pos:end="37:61"><expr pos:start="37:38" pos:end="37:61"><sizeof pos:start="37:38" pos:end="37:61">sizeof<argument_list pos:start="37:44" pos:end="37:61">(<argument pos:start="37:45" pos:end="37:60"><expr pos:start="37:45" pos:end="37:60"><name pos:start="37:45" pos:end="37:60"><name pos:start="37:45" pos:end="37:45">s</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:60">inter_dc_pred</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <comment type="block" pos:start="38:5" pos:end="38:72">/* B. Decoding information for all four macroblock-level features */</comment>
    <for pos:start="39:5" pos:end="113:13">for <control pos:start="39:9" pos:end="39:27">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:22"><expr pos:start="39:17" pos:end="39:21"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <literal type="number" pos:start="39:21" pos:end="39:21">4</literal></expr>;</condition> <incr pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:24">i</name><operator pos:start="39:25" pos:end="39:26">++</operator></expr></incr>)</control> <block pos:start="39:29" pos:end="113:13">{<block_content pos:start="40:9" pos:end="113:13">
        <expr_stmt pos:start="40:9" pos:end="40:47"><expr pos:start="40:9" pos:end="40:46"><name pos:start="40:9" pos:end="40:29"><name pos:start="40:9" pos:end="40:9">s</name><operator pos:start="40:10" pos:end="40:11">-&gt;</operator><name pos:start="40:12" pos:end="40:26">feature_enabled</name><index pos:start="40:27" pos:end="40:29">[<expr pos:start="40:28" pos:end="40:28"><name pos:start="40:28" pos:end="40:28">i</name></expr>]</index></name> <operator pos:start="40:31" pos:end="40:31">=</operator> <call pos:start="40:33" pos:end="40:46"><name pos:start="40:33" pos:end="40:43">vp8_rac_get</name><argument_list pos:start="40:44" pos:end="40:46">(<argument pos:start="40:45" pos:end="40:45"><expr pos:start="40:45" pos:end="40:45"><name pos:start="40:45" pos:end="40:45">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="41:9" pos:end="113:13"><if pos:start="41:9" pos:end="113:13">if <condition pos:start="41:12" pos:end="41:34">(<expr pos:start="41:13" pos:end="41:33"><name pos:start="41:13" pos:end="41:33"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:30">feature_enabled</name><index pos:start="41:31" pos:end="41:33">[<expr pos:start="41:32" pos:end="41:32"><name pos:start="41:32" pos:end="41:32">i</name></expr>]</index></name></expr>)</condition> <block pos:start="41:36" pos:end="113:13">{<block_content pos:start="42:14" pos:end="113:13">
             <expr_stmt pos:start="42:14" pos:end="42:65"><expr pos:start="42:14" pos:end="42:64"><name pos:start="42:14" pos:end="42:39"><name pos:start="42:14" pos:end="42:14">s</name><operator pos:start="42:15" pos:end="42:16">-&gt;</operator><name pos:start="42:17" pos:end="42:36">feature_present_prob</name><index pos:start="42:37" pos:end="42:39">[<expr pos:start="42:38" pos:end="42:38"><name pos:start="42:38" pos:end="42:38">i</name></expr>]</index></name> <operator pos:start="42:41" pos:end="42:41">=</operator> <call pos:start="42:43" pos:end="42:64"><name pos:start="42:43" pos:end="42:58">vp8_rac_get_uint</name><argument_list pos:start="42:59" pos:end="42:64">(<argument pos:start="42:60" pos:end="42:60"><expr pos:start="42:60" pos:end="42:60"><name pos:start="42:60" pos:end="42:60">c</name></expr></argument>, <argument pos:start="42:63" pos:end="42:63"><expr pos:start="42:63" pos:end="42:63"><literal type="number" pos:start="42:63" pos:end="42:63">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <for pos:start="43:14" pos:end="44:93">for <control pos:start="43:18" pos:end="43:36">(<init pos:start="43:19" pos:end="43:24"><expr pos:start="43:19" pos:end="43:23"><name pos:start="43:19" pos:end="43:19">j</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <literal type="number" pos:start="43:23" pos:end="43:23">0</literal></expr>;</init> <condition pos:start="43:26" pos:end="43:31"><expr pos:start="43:26" pos:end="43:30"><name pos:start="43:26" pos:end="43:26">j</name> <operator pos:start="43:28" pos:end="43:28">&lt;</operator> <literal type="number" pos:start="43:30" pos:end="43:30">3</literal></expr>;</condition> <incr pos:start="43:33" pos:end="43:35"><expr pos:start="43:33" pos:end="43:35"><name pos:start="43:33" pos:end="43:33">j</name><operator pos:start="43:34" pos:end="43:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="44:18" pos:end="44:93"><block_content pos:start="44:18" pos:end="44:93">
                 <expr_stmt pos:start="44:18" pos:end="44:93"><expr pos:start="44:18" pos:end="44:92"><name pos:start="44:18" pos:end="44:44"><name pos:start="44:18" pos:end="44:18">s</name><operator pos:start="44:19" pos:end="44:20">-&gt;</operator><name pos:start="44:21" pos:end="44:38">feature_index_prob</name><index pos:start="44:39" pos:end="44:41">[<expr pos:start="44:40" pos:end="44:40"><name pos:start="44:40" pos:end="44:40">i</name></expr>]</index><index pos:start="44:42" pos:end="44:44">[<expr pos:start="44:43" pos:end="44:43"><name pos:start="44:43" pos:end="44:43">j</name></expr>]</index></name> <operator pos:start="44:46" pos:end="44:46">=</operator> <ternary pos:start="44:48" pos:end="44:92"><condition pos:start="44:48" pos:end="44:63"><expr pos:start="44:48" pos:end="44:61"><call pos:start="44:48" pos:end="44:61"><name pos:start="44:48" pos:end="44:58">vp8_rac_get</name><argument_list pos:start="44:59" pos:end="44:61">(<argument pos:start="44:60" pos:end="44:60"><expr pos:start="44:60" pos:end="44:60"><name pos:start="44:60" pos:end="44:60">c</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="44:65" pos:end="44:86"> <expr pos:start="44:65" pos:end="44:86"><call pos:start="44:65" pos:end="44:86"><name pos:start="44:65" pos:end="44:80">vp8_rac_get_uint</name><argument_list pos:start="44:81" pos:end="44:86">(<argument pos:start="44:82" pos:end="44:82"><expr pos:start="44:82" pos:end="44:82"><name pos:start="44:82" pos:end="44:82">c</name></expr></argument>, <argument pos:start="44:85" pos:end="44:85"><expr pos:start="44:85" pos:end="44:85"><literal type="number" pos:start="44:85" pos:end="44:85">8</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="44:88" pos:end="44:92">: <expr pos:start="44:90" pos:end="44:92"><literal type="number" pos:start="44:90" pos:end="44:92">255</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></for>
             <if_stmt pos:start="45:14" pos:end="47:126"><if pos:start="45:14" pos:end="47:126">if <condition pos:start="45:17" pos:end="45:43">(<expr pos:start="45:18" pos:end="45:42"><name pos:start="45:18" pos:end="45:42"><name pos:start="45:18" pos:end="45:39">vp7_feature_value_size</name><index pos:start="45:40" pos:end="45:42">[<expr pos:start="45:41" pos:end="45:41"><name pos:start="45:41" pos:end="45:41">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="46:18" pos:end="47:126"><block_content pos:start="46:18" pos:end="47:126">
                 <for pos:start="46:18" pos:end="47:126">for <control pos:start="46:22" pos:end="46:40">(<init pos:start="46:23" pos:end="46:28"><expr pos:start="46:23" pos:end="46:27"><name pos:start="46:23" pos:end="46:23">j</name> <operator pos:start="46:25" pos:end="46:25">=</operator> <literal type="number" pos:start="46:27" pos:end="46:27">0</literal></expr>;</init> <condition pos:start="46:30" pos:end="46:35"><expr pos:start="46:30" pos:end="46:34"><name pos:start="46:30" pos:end="46:30">j</name> <operator pos:start="46:32" pos:end="46:32">&lt;</operator> <literal type="number" pos:start="46:34" pos:end="46:34">4</literal></expr>;</condition> <incr pos:start="46:37" pos:end="46:39"><expr pos:start="46:37" pos:end="46:39"><name pos:start="46:37" pos:end="46:37">j</name><operator pos:start="46:38" pos:end="46:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:22" pos:end="47:126"><block_content pos:start="47:22" pos:end="47:126">
                     <expr_stmt pos:start="47:22" pos:end="47:126"><expr pos:start="47:22" pos:end="47:125"><name pos:start="47:22" pos:end="47:43"><name pos:start="47:22" pos:end="47:22">s</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:37">feature_value</name><index pos:start="47:38" pos:end="47:40">[<expr pos:start="47:39" pos:end="47:39"><name pos:start="47:39" pos:end="47:39">i</name></expr>]</index><index pos:start="47:41" pos:end="47:43">[<expr pos:start="47:42" pos:end="47:42"><name pos:start="47:42" pos:end="47:42">j</name></expr>]</index></name> <operator pos:start="47:45" pos:end="47:45">=</operator> <ternary pos:start="47:47" pos:end="47:125"><condition pos:start="47:47" pos:end="47:62"><expr pos:start="47:47" pos:end="47:60"><call pos:start="47:47" pos:end="47:60"><name pos:start="47:47" pos:end="47:57">vp8_rac_get</name><argument_list pos:start="47:58" pos:end="47:60">(<argument pos:start="47:59" pos:end="47:59"><expr pos:start="47:59" pos:end="47:59"><name pos:start="47:59" pos:end="47:59">c</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="47:64" pos:end="47:121"> <expr pos:start="47:64" pos:end="47:121"><call pos:start="47:64" pos:end="47:121"><name pos:start="47:64" pos:end="47:79">vp8_rac_get_uint</name><argument_list pos:start="47:80" pos:end="47:121">(<argument pos:start="47:81" pos:end="47:81"><expr pos:start="47:81" pos:end="47:81"><name pos:start="47:81" pos:end="47:81">c</name></expr></argument>, <argument pos:start="47:84" pos:end="47:120"><expr pos:start="47:84" pos:end="47:120"><name pos:start="47:84" pos:end="47:120"><name pos:start="47:84" pos:end="47:105">vp7_feature_value_size</name><index pos:start="47:106" pos:end="47:117">[<expr pos:start="47:107" pos:end="47:116"><name pos:start="47:107" pos:end="47:116"><name pos:start="47:107" pos:end="47:107">s</name><operator pos:start="47:108" pos:end="47:109">-&gt;</operator><name pos:start="47:110" pos:end="47:116">profile</name></name></expr>]</index><index pos:start="47:118" pos:end="47:120">[<expr pos:start="47:119" pos:end="47:119"><name pos:start="47:119" pos:end="47:119">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="47:123" pos:end="47:125">: <expr pos:start="47:125" pos:end="47:125"><literal type="number" pos:start="47:125" pos:end="47:125">0</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>
    <expr_stmt pos:start="48:5" pos:end="48:32"><expr pos:start="48:5" pos:end="48:31"><name pos:start="48:5" pos:end="48:27"><name pos:start="48:5" pos:end="48:5">s</name><operator pos:start="48:6" pos:end="48:7">-&gt;</operator><name pos:start="48:8" pos:end="48:19">segmentation</name><operator pos:start="48:20" pos:end="48:20">.</operator><name pos:start="48:21" pos:end="48:27">enabled</name></name> <operator pos:start="48:29" pos:end="48:29">=</operator> <literal type="number" pos:start="48:31" pos:end="48:31">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="49:5" pos:end="49:35"><expr pos:start="49:5" pos:end="49:34"><name pos:start="49:5" pos:end="49:30"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:19">segmentation</name><operator pos:start="49:20" pos:end="49:20">.</operator><name pos:start="49:21" pos:end="49:30">update_map</name></name> <operator pos:start="49:32" pos:end="49:32">=</operator> <literal type="number" pos:start="49:34" pos:end="49:34">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="50:5" pos:end="50:28"><expr pos:start="50:5" pos:end="50:27"><name pos:start="50:5" pos:end="50:23"><name pos:start="50:5" pos:end="50:5">s</name><operator pos:start="50:6" pos:end="50:7">-&gt;</operator><name pos:start="50:8" pos:end="50:15">lf_delta</name><operator pos:start="50:16" pos:end="50:16">.</operator><name pos:start="50:17" pos:end="50:23">enabled</name></name> <operator pos:start="50:25" pos:end="50:25">=</operator> <literal type="number" pos:start="50:27" pos:end="50:27">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="51:5" pos:end="51:32"><expr pos:start="51:5" pos:end="51:31"><name pos:start="51:5" pos:end="51:27"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:27">num_coeff_partitions</name></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <literal type="number" pos:start="51:31" pos:end="51:31">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="52:5" pos:end="52:70"><expr pos:start="52:5" pos:end="52:69"><call pos:start="52:5" pos:end="52:69"><name pos:start="52:5" pos:end="52:30">ff_vp56_init_range_decoder</name><argument_list pos:start="52:31" pos:end="52:69">(<argument pos:start="52:32" pos:end="52:53"><expr pos:start="52:32" pos:end="52:53"><operator pos:start="52:32" pos:end="52:32">&amp;</operator><name pos:start="52:33" pos:end="52:53"><name pos:start="52:33" pos:end="52:33">s</name><operator pos:start="52:34" pos:end="52:35">-&gt;</operator><name pos:start="52:36" pos:end="52:50">coeff_partition</name><index pos:start="52:51" pos:end="52:53">[<expr pos:start="52:52" pos:end="52:52"><literal type="number" pos:start="52:52" pos:end="52:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="52:56" pos:end="52:58"><expr pos:start="52:56" pos:end="52:58"><name pos:start="52:56" pos:end="52:58">buf</name></expr></argument>, <argument pos:start="52:61" pos:end="52:68"><expr pos:start="52:61" pos:end="52:68"><name pos:start="52:61" pos:end="52:68">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="53:5" pos:end="113:13"><if pos:start="53:5" pos:end="113:13">if <condition pos:start="53:8" pos:end="54:129">(<expr pos:start="53:9" pos:end="54:128"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:28"><name pos:start="53:10" pos:end="53:10">s</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:28">macroblocks_base</name></name> <operator pos:start="53:30" pos:end="53:31">||</operator> <comment type="block" pos:start="53:33" pos:end="53:49">/* first frame */</comment>
        <name pos:start="54:9" pos:end="54:13">width</name> <operator pos:start="54:15" pos:end="54:16">!=</operator> <name pos:start="54:18" pos:end="54:32"><name pos:start="54:18" pos:end="54:18">s</name><operator pos:start="54:19" pos:end="54:20">-&gt;</operator><name pos:start="54:21" pos:end="54:25">avctx</name><operator pos:start="54:26" pos:end="54:27">-&gt;</operator><name pos:start="54:28" pos:end="54:32">width</name></name> <operator pos:start="54:34" pos:end="54:35">||</operator> <name pos:start="54:37" pos:end="54:42">height</name> <operator pos:start="54:44" pos:end="54:45">!=</operator> <name pos:start="54:47" pos:end="54:62"><name pos:start="54:47" pos:end="54:47">s</name><operator pos:start="54:48" pos:end="54:49">-&gt;</operator><name pos:start="54:50" pos:end="54:54">avctx</name><operator pos:start="54:55" pos:end="54:56">-&gt;</operator><name pos:start="54:57" pos:end="54:62">height</name></name> <operator pos:start="54:64" pos:end="54:65">||</operator> <operator pos:start="54:67" pos:end="54:67">(</operator><name pos:start="54:68" pos:end="54:72">width</name><operator pos:start="54:73" pos:end="54:73">+</operator><literal type="number" pos:start="54:74" pos:end="54:75">15</literal><operator pos:start="54:76" pos:end="54:76">)</operator><operator pos:start="54:77" pos:end="54:77">/</operator><literal type="number" pos:start="54:78" pos:end="54:79">16</literal> <operator pos:start="54:81" pos:end="54:82">!=</operator> <name pos:start="54:84" pos:end="54:94"><name pos:start="54:84" pos:end="54:84">s</name><operator pos:start="54:85" pos:end="54:86">-&gt;</operator><name pos:start="54:87" pos:end="54:94">mb_width</name></name> <operator pos:start="54:96" pos:end="54:97">||</operator> <operator pos:start="54:99" pos:end="54:99">(</operator><name pos:start="54:100" pos:end="54:105">height</name><operator pos:start="54:106" pos:end="54:106">+</operator><literal type="number" pos:start="54:107" pos:end="54:108">15</literal><operator pos:start="54:109" pos:end="54:109">)</operator><operator pos:start="54:110" pos:end="54:110">/</operator><literal type="number" pos:start="54:111" pos:end="54:112">16</literal> <operator pos:start="54:114" pos:end="54:115">!=</operator> <name pos:start="54:117" pos:end="54:128"><name pos:start="54:117" pos:end="54:117">s</name><operator pos:start="54:118" pos:end="54:119">-&gt;</operator><name pos:start="54:120" pos:end="54:128">mb_height</name></name></expr>)</condition> <block pos:start="54:131" pos:end="113:13">{<block_content pos:start="55:9" pos:end="113:13">
        <if_stmt pos:start="55:9" pos:end="56:23"><if pos:start="55:9" pos:end="56:23">if <condition pos:start="55:12" pos:end="55:60">(<expr pos:start="55:13" pos:end="55:59"><operator pos:start="55:13" pos:end="55:13">(</operator><name pos:start="55:14" pos:end="55:16">ret</name> <operator pos:start="55:18" pos:end="55:18">=</operator> <call pos:start="55:20" pos:end="55:54"><name pos:start="55:20" pos:end="55:36">update_dimensions</name><argument_list pos:start="55:37" pos:end="55:54">(<argument pos:start="55:38" pos:end="55:38"><expr pos:start="55:38" pos:end="55:38"><name pos:start="55:38" pos:end="55:38">s</name></expr></argument>, <argument pos:start="55:41" pos:end="55:45"><expr pos:start="55:41" pos:end="55:45"><name pos:start="55:41" pos:end="55:45">width</name></expr></argument>, <argument pos:start="55:48" pos:end="55:53"><expr pos:start="55:48" pos:end="55:53"><name pos:start="55:48" pos:end="55:53">height</name></expr></argument>)</argument_list></call><operator pos:start="55:55" pos:end="55:55">)</operator> <operator pos:start="55:57" pos:end="55:57">&lt;</operator> <literal type="number" pos:start="55:59" pos:end="55:59">0</literal></expr>)</condition><block type="pseudo" pos:start="56:13" pos:end="56:23"><block_content pos:start="56:13" pos:end="56:23">
            <return pos:start="56:13" pos:end="56:23">return <expr pos:start="56:20" pos:end="56:22"><name pos:start="56:20" pos:end="56:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <comment type="block" pos:start="57:5" pos:end="57:35">/* C. Dequantization indices */</comment>
    <expr_stmt pos:start="58:5" pos:end="58:22"><expr pos:start="58:5" pos:end="58:21"><call pos:start="58:5" pos:end="58:21"><name pos:start="58:5" pos:end="58:18">vp7_get_quants</name><argument_list pos:start="58:19" pos:end="58:21">(<argument pos:start="58:20" pos:end="58:20"><expr pos:start="58:20" pos:end="58:20"><name pos:start="58:20" pos:end="58:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="59:5" pos:end="59:67">/* D. Golden frame update flag (a Flag) for interframes only */</comment>
    <if_stmt pos:start="60:5" pos:end="113:13"><if pos:start="60:5" pos:end="113:13">if <condition pos:start="60:8" pos:end="60:21">(<expr pos:start="60:9" pos:end="60:20"><operator pos:start="60:9" pos:end="60:9">!</operator><name pos:start="60:10" pos:end="60:20"><name pos:start="60:10" pos:end="60:10">s</name><operator pos:start="60:11" pos:end="60:12">-&gt;</operator><name pos:start="60:13" pos:end="60:20">keyframe</name></name></expr>)</condition> <block pos:start="60:23" pos:end="113:13">{<block_content pos:start="61:9" pos:end="113:13">
        <expr_stmt pos:start="61:9" pos:end="61:81"><expr pos:start="61:9" pos:end="61:80"><name pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:24">update_golden</name></name> <operator pos:start="61:26" pos:end="61:26">=</operator> <ternary pos:start="61:28" pos:end="61:80"><condition pos:start="61:28" pos:end="61:43"><expr pos:start="61:28" pos:end="61:41"><call pos:start="61:28" pos:end="61:41"><name pos:start="61:28" pos:end="61:38">vp8_rac_get</name><argument_list pos:start="61:39" pos:end="61:41">(<argument pos:start="61:40" pos:end="61:40"><expr pos:start="61:40" pos:end="61:40"><name pos:start="61:40" pos:end="61:40">c</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="61:45" pos:end="61:62"> <expr pos:start="61:45" pos:end="61:62"><name pos:start="61:45" pos:end="61:62">VP56_FRAME_CURRENT</name></expr> </then><else pos:start="61:64" pos:end="61:80">: <expr pos:start="61:66" pos:end="61:80"><name pos:start="61:66" pos:end="61:80">VP56_FRAME_NONE</name></expr></else></ternary></expr>;</expr_stmt>
        <expr_stmt pos:start="62:9" pos:end="62:44"><expr pos:start="62:9" pos:end="62:43"><name pos:start="62:9" pos:end="62:39"><name pos:start="62:9" pos:end="62:9">s</name><operator pos:start="62:10" pos:end="62:11">-&gt;</operator><name pos:start="62:12" pos:end="62:20">sign_bias</name><index pos:start="62:21" pos:end="62:39">[<expr pos:start="62:22" pos:end="62:38"><name pos:start="62:22" pos:end="62:38">VP56_FRAME_GOLDEN</name></expr>]</index></name> <operator pos:start="62:41" pos:end="62:41">=</operator> <literal type="number" pos:start="62:43" pos:end="62:43">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="63:5" pos:end="63:23"><expr pos:start="63:5" pos:end="63:22"><name pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:18">update_last</name></name> <operator pos:start="63:20" pos:end="63:20">=</operator> <literal type="number" pos:start="63:22" pos:end="63:22">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="64:5" pos:end="64:32"><expr pos:start="64:5" pos:end="64:31"><name pos:start="64:5" pos:end="64:27"><name pos:start="64:5" pos:end="64:5">s</name><operator pos:start="64:6" pos:end="64:7">-&gt;</operator><name pos:start="64:8" pos:end="64:27">update_probabilities</name></name> <operator pos:start="64:29" pos:end="64:29">=</operator> <literal type="number" pos:start="64:31" pos:end="64:31">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="65:5" pos:end="65:32"><expr pos:start="65:5" pos:end="65:31"><name pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:19">fade_present</name></name>         <operator pos:start="65:29" pos:end="65:29">=</operator> <literal type="number" pos:start="65:31" pos:end="65:31">1</literal></expr>;</expr_stmt>
    <if_stmt pos:start="66:5" pos:end="113:13"><if pos:start="66:5" pos:end="113:13">if <condition pos:start="66:8" pos:end="66:23">(<expr pos:start="66:9" pos:end="66:22"><name pos:start="66:9" pos:end="66:18"><name pos:start="66:9" pos:end="66:9">s</name><operator pos:start="66:10" pos:end="66:11">-&gt;</operator><name pos:start="66:12" pos:end="66:18">profile</name></name> <operator pos:start="66:20" pos:end="66:20">&gt;</operator> <literal type="number" pos:start="66:22" pos:end="66:22">0</literal></expr>)</condition> <block pos:start="66:25" pos:end="113:13">{<block_content pos:start="67:9" pos:end="113:13">
        <expr_stmt pos:start="67:9" pos:end="67:49"><expr pos:start="67:9" pos:end="67:48"><name pos:start="67:9" pos:end="67:31"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:31">update_probabilities</name></name> <operator pos:start="67:33" pos:end="67:33">=</operator> <call pos:start="67:35" pos:end="67:48"><name pos:start="67:35" pos:end="67:45">vp8_rac_get</name><argument_list pos:start="67:46" pos:end="67:48">(<argument pos:start="67:47" pos:end="67:47"><expr pos:start="67:47" pos:end="67:47"><name pos:start="67:47" pos:end="67:47">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="68:9" pos:end="69:36"><if pos:start="68:9" pos:end="69:36">if <condition pos:start="68:12" pos:end="68:37">(<expr pos:start="68:13" pos:end="68:36"><operator pos:start="68:13" pos:end="68:13">!</operator><name pos:start="68:14" pos:end="68:36"><name pos:start="68:14" pos:end="68:14">s</name><operator pos:start="68:15" pos:end="68:16">-&gt;</operator><name pos:start="68:17" pos:end="68:36">update_probabilities</name></name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:36"><block_content pos:start="69:13" pos:end="69:36">
            <expr_stmt pos:start="69:13" pos:end="69:36"><expr pos:start="69:13" pos:end="69:35"><name pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:19">prob</name><index pos:start="69:20" pos:end="69:22">[<expr pos:start="69:21" pos:end="69:21"><literal type="number" pos:start="69:21" pos:end="69:21">1</literal></expr>]</index></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <name pos:start="69:26" pos:end="69:35"><name pos:start="69:26" pos:end="69:26">s</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:32">prob</name><index pos:start="69:33" pos:end="69:35">[<expr pos:start="69:34" pos:end="69:34"><literal type="number" pos:start="69:34" pos:end="69:34">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="70:9" pos:end="71:45"><if pos:start="70:9" pos:end="71:45">if <condition pos:start="70:12" pos:end="70:25">(<expr pos:start="70:13" pos:end="70:24"><operator pos:start="70:13" pos:end="70:13">!</operator><name pos:start="70:14" pos:end="70:24"><name pos:start="70:14" pos:end="70:14">s</name><operator pos:start="70:15" pos:end="70:16">-&gt;</operator><name pos:start="70:17" pos:end="70:24">keyframe</name></name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:45"><block_content pos:start="71:13" pos:end="71:45">
            <expr_stmt pos:start="71:13" pos:end="71:45"><expr pos:start="71:13" pos:end="71:44"><name pos:start="71:13" pos:end="71:27"><name pos:start="71:13" pos:end="71:13">s</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:27">fade_present</name></name> <operator pos:start="71:29" pos:end="71:29">=</operator> <call pos:start="71:31" pos:end="71:44"><name pos:start="71:31" pos:end="71:41">vp8_rac_get</name><argument_list pos:start="71:42" pos:end="71:44">(<argument pos:start="71:43" pos:end="71:43"><expr pos:start="71:43" pos:end="71:43"><name pos:start="71:43" pos:end="71:43">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <comment type="block" pos:start="72:5" pos:end="72:50">/* E. Fading information for previous frame */</comment>
    <if_stmt pos:start="73:5" pos:end="113:13"><if pos:start="73:5" pos:end="113:13">if <condition pos:start="73:8" pos:end="73:42">(<expr pos:start="73:9" pos:end="73:41"><name pos:start="73:9" pos:end="73:23"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:23">fade_present</name></name> <operator pos:start="73:25" pos:end="73:26">&amp;&amp;</operator> <call pos:start="73:28" pos:end="73:41"><name pos:start="73:28" pos:end="73:38">vp8_rac_get</name><argument_list pos:start="73:39" pos:end="73:41">(<argument pos:start="73:40" pos:end="73:40"><expr pos:start="73:40" pos:end="73:40"><name pos:start="73:40" pos:end="73:40">c</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:44" pos:end="113:13">{<block_content pos:start="74:9" pos:end="113:13">
        <decl_stmt pos:start="74:9" pos:end="74:51"><decl pos:start="74:9" pos:end="74:50"><type pos:start="74:9" pos:end="74:11"><name pos:start="74:9" pos:end="74:11">int</name></type> <name pos:start="74:13" pos:end="74:17">alpha</name> <init pos:start="74:19" pos:end="74:50">= <expr pos:start="74:21" pos:end="74:50"><operator pos:start="74:21" pos:end="74:21">(</operator><name pos:start="74:22" pos:end="74:27">int8_t</name><operator pos:start="74:28" pos:end="74:28">)</operator><call pos:start="74:29" pos:end="74:50"><name pos:start="74:29" pos:end="74:44">vp8_rac_get_uint</name><argument_list pos:start="74:45" pos:end="74:50">(<argument pos:start="74:46" pos:end="74:46"><expr pos:start="74:46" pos:end="74:46"><name pos:start="74:46" pos:end="74:46">c</name></expr></argument>, <argument pos:start="74:49" pos:end="74:49"><expr pos:start="74:49" pos:end="74:49"><literal type="number" pos:start="74:49" pos:end="74:49">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="75:9" pos:end="75:51"><decl pos:start="75:9" pos:end="75:50"><type pos:start="75:9" pos:end="75:11"><name pos:start="75:9" pos:end="75:11">int</name></type> <name pos:start="75:13" pos:end="75:16">beta</name>  <init pos:start="75:19" pos:end="75:50">= <expr pos:start="75:21" pos:end="75:50"><operator pos:start="75:21" pos:end="75:21">(</operator><name pos:start="75:22" pos:end="75:27">int8_t</name><operator pos:start="75:28" pos:end="75:28">)</operator><call pos:start="75:29" pos:end="75:50"><name pos:start="75:29" pos:end="75:44">vp8_rac_get_uint</name><argument_list pos:start="75:45" pos:end="75:50">(<argument pos:start="75:46" pos:end="75:46"><expr pos:start="75:46" pos:end="75:46"><name pos:start="75:46" pos:end="75:46">c</name></expr></argument>, <argument pos:start="75:49" pos:end="75:49"><expr pos:start="75:49" pos:end="75:49"><literal type="number" pos:start="75:49" pos:end="75:49">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="76:9" pos:end="113:13"><if pos:start="76:9" pos:end="113:13">if <condition pos:start="76:12" pos:end="76:44">(<expr pos:start="76:13" pos:end="76:43"><operator pos:start="76:13" pos:end="76:13">!</operator><name pos:start="76:14" pos:end="76:24"><name pos:start="76:14" pos:end="76:14">s</name><operator pos:start="76:15" pos:end="76:16">-&gt;</operator><name pos:start="76:17" pos:end="76:24">keyframe</name></name> <operator pos:start="76:26" pos:end="76:27">&amp;&amp;</operator> <operator pos:start="76:29" pos:end="76:29">(</operator><name pos:start="76:30" pos:end="76:34">alpha</name> <operator pos:start="76:36" pos:end="76:37">||</operator> <name pos:start="76:39" pos:end="76:42">beta</name><operator pos:start="76:43" pos:end="76:43">)</operator></expr>)</condition> <block pos:start="76:46" pos:end="113:13">{<block_content pos:start="78:13" pos:end="113:13">
            <comment type="block" pos:start="77:13" pos:end="77:43">/* preserve the golden frame */</comment>
            <if_stmt pos:start="78:13" pos:end="113:13"><if pos:start="78:13" pos:end="90:13">if <condition pos:start="78:16" pos:end="78:79">(<expr pos:start="78:17" pos:end="78:78"><name pos:start="78:17" pos:end="78:44"><name pos:start="78:17" pos:end="78:17">s</name><operator pos:start="78:18" pos:end="78:19">-&gt;</operator><name pos:start="78:20" pos:end="78:25">framep</name><index pos:start="78:26" pos:end="78:44">[<expr pos:start="78:27" pos:end="78:43"><name pos:start="78:27" pos:end="78:43">VP56_FRAME_GOLDEN</name></expr>]</index></name> <operator pos:start="78:46" pos:end="78:47">==</operator> <name pos:start="78:49" pos:end="78:78"><name pos:start="78:49" pos:end="78:49">s</name><operator pos:start="78:50" pos:end="78:51">-&gt;</operator><name pos:start="78:52" pos:end="78:57">framep</name><index pos:start="78:58" pos:end="78:78">[<expr pos:start="78:59" pos:end="78:77"><name pos:start="78:59" pos:end="78:77">VP56_FRAME_PREVIOUS</name></expr>]</index></name></expr>)</condition> <block pos:start="78:81" pos:end="90:13">{<block_content pos:start="79:17" pos:end="89:126">
                <decl_stmt pos:start="79:17" pos:end="79:67"><decl pos:start="79:17" pos:end="79:66"><type pos:start="79:17" pos:end="79:25"><name pos:start="79:17" pos:end="79:23">AVFrame</name> <modifier pos:start="79:25" pos:end="79:25">*</modifier></type><name pos:start="79:26" pos:end="79:29">gold</name> <init pos:start="79:31" pos:end="79:66">= <expr pos:start="79:33" pos:end="79:66"><name pos:start="79:33" pos:end="79:60"><name pos:start="79:33" pos:end="79:33">s</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:41">framep</name><index pos:start="79:42" pos:end="79:60">[<expr pos:start="79:43" pos:end="79:59"><name pos:start="79:43" pos:end="79:59">VP56_FRAME_GOLDEN</name></expr>]</index></name><operator pos:start="79:61" pos:end="79:62">-&gt;</operator><name pos:start="79:63" pos:end="79:66"><name pos:start="79:63" pos:end="79:64">tf</name><operator pos:start="79:65" pos:end="79:65">.</operator><name pos:start="79:66" pos:end="79:66">f</name></name></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="80:17" pos:end="80:30"><decl pos:start="80:17" pos:end="80:29"><type pos:start="80:17" pos:end="80:25"><name pos:start="80:17" pos:end="80:23">AVFrame</name> <modifier pos:start="80:25" pos:end="80:25">*</modifier></type><name pos:start="80:26" pos:end="80:29">prev</name></decl>;</decl_stmt>
                <decl_stmt pos:start="81:17" pos:end="81:25"><decl pos:start="81:17" pos:end="81:21"><type pos:start="81:17" pos:end="81:19"><name pos:start="81:17" pos:end="81:19">int</name></type> <name pos:start="81:21" pos:end="81:21">i</name></decl>, <decl pos:start="81:24" pos:end="81:24"><type ref="prev" pos:start="81:17" pos:end="81:19"/><name pos:start="81:24" pos:end="81:24">j</name></decl>;</decl_stmt>
                <expr_stmt pos:start="82:17" pos:end="82:73"><expr pos:start="82:17" pos:end="82:72"><name pos:start="82:17" pos:end="82:46"><name pos:start="82:17" pos:end="82:17">s</name><operator pos:start="82:18" pos:end="82:19">-&gt;</operator><name pos:start="82:20" pos:end="82:25">framep</name><index pos:start="82:26" pos:end="82:46">[<expr pos:start="82:27" pos:end="82:45"><name pos:start="82:27" pos:end="82:45">VP56_FRAME_PREVIOUS</name></expr>]</index></name> <operator pos:start="82:48" pos:end="82:48">=</operator> <call pos:start="82:50" pos:end="82:72"><name pos:start="82:50" pos:end="82:69">vp8_find_free_buffer</name><argument_list pos:start="82:70" pos:end="82:72">(<argument pos:start="82:71" pos:end="82:71"><expr pos:start="82:71" pos:end="82:71"><name pos:start="82:71" pos:end="82:71">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="83:17" pos:end="84:30"><if pos:start="83:17" pos:end="84:30">if <condition pos:start="83:20" pos:end="83:86">(<expr pos:start="83:21" pos:end="83:85"><operator pos:start="83:21" pos:end="83:21">(</operator><name pos:start="83:22" pos:end="83:24">ret</name> <operator pos:start="83:26" pos:end="83:26">=</operator> <call pos:start="83:28" pos:end="83:80"><name pos:start="83:28" pos:end="83:42">vp8_alloc_frame</name><argument_list pos:start="83:43" pos:end="83:80">(<argument pos:start="83:44" pos:end="83:44"><expr pos:start="83:44" pos:end="83:44"><name pos:start="83:44" pos:end="83:44">s</name></expr></argument>, <argument pos:start="83:47" pos:end="83:76"><expr pos:start="83:47" pos:end="83:76"><name pos:start="83:47" pos:end="83:76"><name pos:start="83:47" pos:end="83:47">s</name><operator pos:start="83:48" pos:end="83:49">-&gt;</operator><name pos:start="83:50" pos:end="83:55">framep</name><index pos:start="83:56" pos:end="83:76">[<expr pos:start="83:57" pos:end="83:75"><name pos:start="83:57" pos:end="83:75">VP56_FRAME_PREVIOUS</name></expr>]</index></name></expr></argument>, <argument pos:start="83:79" pos:end="83:79"><expr pos:start="83:79" pos:end="83:79"><literal type="number" pos:start="83:79" pos:end="83:79">1</literal></expr></argument>)</argument_list></call><operator pos:start="83:81" pos:end="83:81">)</operator> <operator pos:start="83:83" pos:end="83:83">&lt;</operator> <literal type="number" pos:start="83:85" pos:end="83:85">0</literal></expr>)</condition><block type="pseudo" pos:start="84:20" pos:end="84:30"><block_content pos:start="84:20" pos:end="84:30">
                   <return pos:start="84:20" pos:end="84:30">return <expr pos:start="84:27" pos:end="84:29"><name pos:start="84:27" pos:end="84:29">ret</name></expr>;</return></block_content></block></if></if_stmt>
                <expr_stmt pos:start="85:17" pos:end="85:60"><expr pos:start="85:17" pos:end="85:59"><name pos:start="85:17" pos:end="85:20">prev</name> <operator pos:start="85:22" pos:end="85:22">=</operator> <name pos:start="85:24" pos:end="85:53"><name pos:start="85:24" pos:end="85:24">s</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:32">framep</name><index pos:start="85:33" pos:end="85:53">[<expr pos:start="85:34" pos:end="85:52"><name pos:start="85:34" pos:end="85:52">VP56_FRAME_PREVIOUS</name></expr>]</index></name><operator pos:start="85:54" pos:end="85:55">-&gt;</operator><name pos:start="85:56" pos:end="85:59"><name pos:start="85:56" pos:end="85:57">tf</name><operator pos:start="85:58" pos:end="85:58">.</operator><name pos:start="85:59" pos:end="85:59">f</name></name></expr>;</expr_stmt>
                <expr_stmt pos:start="86:17" pos:end="86:139"><expr pos:start="86:17" pos:end="86:138"><call pos:start="86:17" pos:end="86:138"><name pos:start="86:17" pos:end="86:20">fade</name><argument_list pos:start="86:21" pos:end="86:138">(<argument pos:start="86:22" pos:end="86:34"><expr pos:start="86:22" pos:end="86:34"><name pos:start="86:22" pos:end="86:34"><name pos:start="86:22" pos:end="86:25">prev</name><operator pos:start="86:26" pos:end="86:27">-&gt;</operator><name pos:start="86:28" pos:end="86:31">data</name><index pos:start="86:32" pos:end="86:34">[<expr pos:start="86:33" pos:end="86:33"><literal type="number" pos:start="86:33" pos:end="86:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="86:37" pos:end="86:53"><expr pos:start="86:37" pos:end="86:53"><name pos:start="86:37" pos:end="86:53"><name pos:start="86:37" pos:end="86:40">prev</name><operator pos:start="86:41" pos:end="86:42">-&gt;</operator><name pos:start="86:43" pos:end="86:50">linesize</name><index pos:start="86:51" pos:end="86:53">[<expr pos:start="86:52" pos:end="86:52"><literal type="number" pos:start="86:52" pos:end="86:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="86:56" pos:end="86:68"><expr pos:start="86:56" pos:end="86:68"><name pos:start="86:56" pos:end="86:68"><name pos:start="86:56" pos:end="86:59">gold</name><operator pos:start="86:60" pos:end="86:61">-&gt;</operator><name pos:start="86:62" pos:end="86:65">data</name><index pos:start="86:66" pos:end="86:68">[<expr pos:start="86:67" pos:end="86:67"><literal type="number" pos:start="86:67" pos:end="86:67">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="86:71" pos:end="86:87"><expr pos:start="86:71" pos:end="86:87"><name pos:start="86:71" pos:end="86:87"><name pos:start="86:71" pos:end="86:74">gold</name><operator pos:start="86:75" pos:end="86:76">-&gt;</operator><name pos:start="86:77" pos:end="86:84">linesize</name><index pos:start="86:85" pos:end="86:87">[<expr pos:start="86:86" pos:end="86:86"><literal type="number" pos:start="86:86" pos:end="86:86">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="86:90" pos:end="86:105"><expr pos:start="86:90" pos:end="86:105"><name pos:start="86:90" pos:end="86:100"><name pos:start="86:90" pos:end="86:90">s</name><operator pos:start="86:91" pos:end="86:92">-&gt;</operator><name pos:start="86:93" pos:end="86:100">mb_width</name></name> <operator pos:start="86:102" pos:end="86:102">*</operator> <literal type="number" pos:start="86:104" pos:end="86:105">16</literal></expr></argument>, <argument pos:start="86:108" pos:end="86:124"><expr pos:start="86:108" pos:end="86:124"><name pos:start="86:108" pos:end="86:119"><name pos:start="86:108" pos:end="86:108">s</name><operator pos:start="86:109" pos:end="86:110">-&gt;</operator><name pos:start="86:111" pos:end="86:119">mb_height</name></name> <operator pos:start="86:121" pos:end="86:121">*</operator> <literal type="number" pos:start="86:123" pos:end="86:124">16</literal></expr></argument>, <argument pos:start="86:127" pos:end="86:131"><expr pos:start="86:127" pos:end="86:131"><name pos:start="86:127" pos:end="86:131">alpha</name></expr></argument>, <argument pos:start="86:134" pos:end="86:137"><expr pos:start="86:134" pos:end="86:137"><name pos:start="86:134" pos:end="86:137">beta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <for pos:start="87:17" pos:end="89:126">for <control pos:start="87:21" pos:end="87:39">(<init pos:start="87:22" pos:end="87:27"><expr pos:start="87:22" pos:end="87:26"><name pos:start="87:22" pos:end="87:22">j</name> <operator pos:start="87:24" pos:end="87:24">=</operator> <literal type="number" pos:start="87:26" pos:end="87:26">1</literal></expr>;</init> <condition pos:start="87:29" pos:end="87:34"><expr pos:start="87:29" pos:end="87:33"><name pos:start="87:29" pos:end="87:29">j</name> <operator pos:start="87:31" pos:end="87:31">&lt;</operator> <literal type="number" pos:start="87:33" pos:end="87:33">3</literal></expr>;</condition> <incr pos:start="87:36" pos:end="87:38"><expr pos:start="87:36" pos:end="87:38"><name pos:start="87:36" pos:end="87:36">j</name><operator pos:start="87:37" pos:end="87:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="88:21" pos:end="89:126"><block_content pos:start="88:21" pos:end="89:126">
                    <for pos:start="88:21" pos:end="89:126">for <control pos:start="88:25" pos:end="88:58">(<init pos:start="88:26" pos:end="88:31"><expr pos:start="88:26" pos:end="88:30"><name pos:start="88:26" pos:end="88:26">i</name> <operator pos:start="88:28" pos:end="88:28">=</operator> <literal type="number" pos:start="88:30" pos:end="88:30">0</literal></expr>;</init> <condition pos:start="88:33" pos:end="88:53"><expr pos:start="88:33" pos:end="88:52"><name pos:start="88:33" pos:end="88:33">i</name> <operator pos:start="88:35" pos:end="88:35">&lt;</operator> <name pos:start="88:37" pos:end="88:48"><name pos:start="88:37" pos:end="88:37">s</name><operator pos:start="88:38" pos:end="88:39">-&gt;</operator><name pos:start="88:40" pos:end="88:48">mb_height</name></name> <operator pos:start="88:50" pos:end="88:50">*</operator> <literal type="number" pos:start="88:52" pos:end="88:52">8</literal></expr>;</condition> <incr pos:start="88:55" pos:end="88:57"><expr pos:start="88:55" pos:end="88:57"><name pos:start="88:55" pos:end="88:55">i</name><operator pos:start="88:56" pos:end="88:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="89:25" pos:end="89:126"><block_content pos:start="89:25" pos:end="89:126">
                        <expr_stmt pos:start="89:25" pos:end="89:126"><expr pos:start="89:25" pos:end="89:125"><call pos:start="89:25" pos:end="89:125"><name pos:start="89:25" pos:end="89:30">memcpy</name><argument_list pos:start="89:31" pos:end="89:125">(<argument pos:start="89:32" pos:end="89:68"><expr pos:start="89:32" pos:end="89:68"><name pos:start="89:32" pos:end="89:44"><name pos:start="89:32" pos:end="89:35">prev</name><operator pos:start="89:36" pos:end="89:37">-&gt;</operator><name pos:start="89:38" pos:end="89:41">data</name><index pos:start="89:42" pos:end="89:44">[<expr pos:start="89:43" pos:end="89:43"><name pos:start="89:43" pos:end="89:43">j</name></expr>]</index></name> <operator pos:start="89:46" pos:end="89:46">+</operator> <name pos:start="89:48" pos:end="89:48">i</name> <operator pos:start="89:50" pos:end="89:50">*</operator> <name pos:start="89:52" pos:end="89:68"><name pos:start="89:52" pos:end="89:55">prev</name><operator pos:start="89:56" pos:end="89:57">-&gt;</operator><name pos:start="89:58" pos:end="89:65">linesize</name><index pos:start="89:66" pos:end="89:68">[<expr pos:start="89:67" pos:end="89:67"><name pos:start="89:67" pos:end="89:67">j</name></expr>]</index></name></expr></argument>, <argument pos:start="89:71" pos:end="89:107"><expr pos:start="89:71" pos:end="89:107"><name pos:start="89:71" pos:end="89:83"><name pos:start="89:71" pos:end="89:74">gold</name><operator pos:start="89:75" pos:end="89:76">-&gt;</operator><name pos:start="89:77" pos:end="89:80">data</name><index pos:start="89:81" pos:end="89:83">[<expr pos:start="89:82" pos:end="89:82"><name pos:start="89:82" pos:end="89:82">j</name></expr>]</index></name> <operator pos:start="89:85" pos:end="89:85">+</operator> <name pos:start="89:87" pos:end="89:87">i</name> <operator pos:start="89:89" pos:end="89:89">*</operator> <name pos:start="89:91" pos:end="89:107"><name pos:start="89:91" pos:end="89:94">gold</name><operator pos:start="89:95" pos:end="89:96">-&gt;</operator><name pos:start="89:97" pos:end="89:104">linesize</name><index pos:start="89:105" pos:end="89:107">[<expr pos:start="89:106" pos:end="89:106"><name pos:start="89:106" pos:end="89:106">j</name></expr>]</index></name></expr></argument>, <argument pos:start="89:110" pos:end="89:124"><expr pos:start="89:110" pos:end="89:124"><name pos:start="89:110" pos:end="89:120"><name pos:start="89:110" pos:end="89:110">s</name><operator pos:start="89:111" pos:end="89:112">-&gt;</operator><name pos:start="89:113" pos:end="89:120">mb_width</name></name> <operator pos:start="89:122" pos:end="89:122">*</operator> <literal type="number" pos:start="89:124" pos:end="89:124">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>
            </block_content>}</block></if> <else pos:start="90:15" pos:end="113:13">else <block pos:start="90:20" pos:end="113:13">{<block_content pos:start="91:17" pos:end="113:13">
                <decl_stmt pos:start="91:17" pos:end="91:69"><decl pos:start="91:17" pos:end="91:68"><type pos:start="91:17" pos:end="91:25"><name pos:start="91:17" pos:end="91:23">AVFrame</name> <modifier pos:start="91:25" pos:end="91:25">*</modifier></type><name pos:start="91:26" pos:end="91:29">prev</name> <init pos:start="91:31" pos:end="91:68">= <expr pos:start="91:33" pos:end="91:68"><name pos:start="91:33" pos:end="91:62"><name pos:start="91:33" pos:end="91:33">s</name><operator pos:start="91:34" pos:end="91:35">-&gt;</operator><name pos:start="91:36" pos:end="91:41">framep</name><index pos:start="91:42" pos:end="91:62">[<expr pos:start="91:43" pos:end="91:61"><name pos:start="91:43" pos:end="91:61">VP56_FRAME_PREVIOUS</name></expr>]</index></name><operator pos:start="91:63" pos:end="91:64">-&gt;</operator><name pos:start="91:65" pos:end="91:68"><name pos:start="91:65" pos:end="91:66">tf</name><operator pos:start="91:67" pos:end="91:67">.</operator><name pos:start="91:68" pos:end="91:68">f</name></name></expr></init></decl>;</decl_stmt>
                <expr_stmt pos:start="92:17" pos:end="92:139"><expr pos:start="92:17" pos:end="92:138"><call pos:start="92:17" pos:end="92:138"><name pos:start="92:17" pos:end="92:20">fade</name><argument_list pos:start="92:21" pos:end="92:138">(<argument pos:start="92:22" pos:end="92:34"><expr pos:start="92:22" pos:end="92:34"><name pos:start="92:22" pos:end="92:34"><name pos:start="92:22" pos:end="92:25">prev</name><operator pos:start="92:26" pos:end="92:27">-&gt;</operator><name pos:start="92:28" pos:end="92:31">data</name><index pos:start="92:32" pos:end="92:34">[<expr pos:start="92:33" pos:end="92:33"><literal type="number" pos:start="92:33" pos:end="92:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="92:37" pos:end="92:53"><expr pos:start="92:37" pos:end="92:53"><name pos:start="92:37" pos:end="92:53"><name pos:start="92:37" pos:end="92:40">prev</name><operator pos:start="92:41" pos:end="92:42">-&gt;</operator><name pos:start="92:43" pos:end="92:50">linesize</name><index pos:start="92:51" pos:end="92:53">[<expr pos:start="92:52" pos:end="92:52"><literal type="number" pos:start="92:52" pos:end="92:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="92:56" pos:end="92:68"><expr pos:start="92:56" pos:end="92:68"><name pos:start="92:56" pos:end="92:68"><name pos:start="92:56" pos:end="92:59">prev</name><operator pos:start="92:60" pos:end="92:61">-&gt;</operator><name pos:start="92:62" pos:end="92:65">data</name><index pos:start="92:66" pos:end="92:68">[<expr pos:start="92:67" pos:end="92:67"><literal type="number" pos:start="92:67" pos:end="92:67">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="92:71" pos:end="92:87"><expr pos:start="92:71" pos:end="92:87"><name pos:start="92:71" pos:end="92:87"><name pos:start="92:71" pos:end="92:74">prev</name><operator pos:start="92:75" pos:end="92:76">-&gt;</operator><name pos:start="92:77" pos:end="92:84">linesize</name><index pos:start="92:85" pos:end="92:87">[<expr pos:start="92:86" pos:end="92:86"><literal type="number" pos:start="92:86" pos:end="92:86">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="92:90" pos:end="92:105"><expr pos:start="92:90" pos:end="92:105"><name pos:start="92:90" pos:end="92:100"><name pos:start="92:90" pos:end="92:90">s</name><operator pos:start="92:91" pos:end="92:92">-&gt;</operator><name pos:start="92:93" pos:end="92:100">mb_width</name></name> <operator pos:start="92:102" pos:end="92:102">*</operator> <literal type="number" pos:start="92:104" pos:end="92:105">16</literal></expr></argument>, <argument pos:start="92:108" pos:end="92:124"><expr pos:start="92:108" pos:end="92:124"><name pos:start="92:108" pos:end="92:119"><name pos:start="92:108" pos:end="92:108">s</name><operator pos:start="92:109" pos:end="92:110">-&gt;</operator><name pos:start="92:111" pos:end="92:119">mb_height</name></name> <operator pos:start="92:121" pos:end="92:121">*</operator> <literal type="number" pos:start="92:123" pos:end="92:124">16</literal></expr></argument>, <argument pos:start="92:127" pos:end="92:131"><expr pos:start="92:127" pos:end="92:131"><name pos:start="92:127" pos:end="92:131">alpha</name></expr></argument>, <argument pos:start="92:134" pos:end="92:137"><expr pos:start="92:134" pos:end="92:137"><name pos:start="92:134" pos:end="92:137">beta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="93:5" pos:end="93:29">/* F. Loop filter type */</comment>
    <if_stmt pos:start="94:5" pos:end="95:42"><if pos:start="94:5" pos:end="95:42">if <condition pos:start="94:8" pos:end="94:20">(<expr pos:start="94:9" pos:end="94:19"><operator pos:start="94:9" pos:end="94:9">!</operator><name pos:start="94:10" pos:end="94:19"><name pos:start="94:10" pos:end="94:10">s</name><operator pos:start="94:11" pos:end="94:12">-&gt;</operator><name pos:start="94:13" pos:end="94:19">profile</name></name></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:42"><block_content pos:start="95:9" pos:end="95:42">
        <expr_stmt pos:start="95:9" pos:end="95:42"><expr pos:start="95:9" pos:end="95:41"><name pos:start="95:9" pos:end="95:24"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:17">filter</name><operator pos:start="95:18" pos:end="95:18">.</operator><name pos:start="95:19" pos:end="95:24">simple</name></name> <operator pos:start="95:26" pos:end="95:26">=</operator> <call pos:start="95:28" pos:end="95:41"><name pos:start="95:28" pos:end="95:38">vp8_rac_get</name><argument_list pos:start="95:39" pos:end="95:41">(<argument pos:start="95:40" pos:end="95:40"><expr pos:start="95:40" pos:end="95:40"><name pos:start="95:40" pos:end="95:40">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <comment type="block" pos:start="96:5" pos:end="96:51">/* G. DCT coefficient ordering specification */</comment>
    <if_stmt pos:start="97:5" pos:end="99:69"><if pos:start="97:5" pos:end="99:69">if <condition pos:start="97:8" pos:end="97:23">(<expr pos:start="97:9" pos:end="97:22"><call pos:start="97:9" pos:end="97:22"><name pos:start="97:9" pos:end="97:19">vp8_rac_get</name><argument_list pos:start="97:20" pos:end="97:22">(<argument pos:start="97:21" pos:end="97:21"><expr pos:start="97:21" pos:end="97:21"><name pos:start="97:21" pos:end="97:21">c</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="98:9" pos:end="99:69"><block_content pos:start="98:9" pos:end="99:69">
        <for pos:start="98:9" pos:end="99:69">for <control pos:start="98:13" pos:end="98:32">(<init pos:start="98:14" pos:end="98:19"><expr pos:start="98:14" pos:end="98:18"><name pos:start="98:14" pos:end="98:14">i</name> <operator pos:start="98:16" pos:end="98:16">=</operator> <literal type="number" pos:start="98:18" pos:end="98:18">1</literal></expr>;</init> <condition pos:start="98:21" pos:end="98:27"><expr pos:start="98:21" pos:end="98:26"><name pos:start="98:21" pos:end="98:21">i</name> <operator pos:start="98:23" pos:end="98:23">&lt;</operator> <literal type="number" pos:start="98:25" pos:end="98:26">16</literal></expr>;</condition> <incr pos:start="98:29" pos:end="98:31"><expr pos:start="98:29" pos:end="98:31"><name pos:start="98:29" pos:end="98:29">i</name><operator pos:start="98:30" pos:end="98:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="99:13" pos:end="99:69"><block_content pos:start="99:13" pos:end="99:69">
            <expr_stmt pos:start="99:13" pos:end="99:69"><expr pos:start="99:13" pos:end="99:68"><name pos:start="99:13" pos:end="99:22"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:19">prob</name><index pos:start="99:20" pos:end="99:22">[<expr pos:start="99:21" pos:end="99:21"><literal type="number" pos:start="99:21" pos:end="99:21">0</literal></expr>]</index></name><operator pos:start="99:23" pos:end="99:23">.</operator><name pos:start="99:24" pos:end="99:30"><name pos:start="99:24" pos:end="99:27">scan</name><index pos:start="99:28" pos:end="99:30">[<expr pos:start="99:29" pos:end="99:29"><name pos:start="99:29" pos:end="99:29">i</name></expr>]</index></name> <operator pos:start="99:32" pos:end="99:32">=</operator> <name pos:start="99:34" pos:end="99:68"><name pos:start="99:34" pos:end="99:44">zigzag_scan</name><index pos:start="99:45" pos:end="99:68">[<expr pos:start="99:46" pos:end="99:67"><call pos:start="99:46" pos:end="99:67"><name pos:start="99:46" pos:end="99:61">vp8_rac_get_uint</name><argument_list pos:start="99:62" pos:end="99:67">(<argument pos:start="99:63" pos:end="99:63"><expr pos:start="99:63" pos:end="99:63"><name pos:start="99:63" pos:end="99:63">c</name></expr></argument>, <argument pos:start="99:66" pos:end="99:66"><expr pos:start="99:66" pos:end="99:66"><literal type="number" pos:start="99:66" pos:end="99:66">4</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>
    <comment type="block" pos:start="100:5" pos:end="100:32">/* H. Loop filter levels  */</comment>
    <if_stmt pos:start="101:5" pos:end="102:42"><if pos:start="101:5" pos:end="102:42">if <condition pos:start="101:8" pos:end="101:23">(<expr pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:18"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:18">profile</name></name> <operator pos:start="101:20" pos:end="101:20">&gt;</operator> <literal type="number" pos:start="101:22" pos:end="101:22">0</literal></expr>)</condition><block type="pseudo" pos:start="102:9" pos:end="102:42"><block_content pos:start="102:9" pos:end="102:42">
        <expr_stmt pos:start="102:9" pos:end="102:42"><expr pos:start="102:9" pos:end="102:41"><name pos:start="102:9" pos:end="102:24"><name pos:start="102:9" pos:end="102:9">s</name><operator pos:start="102:10" pos:end="102:11">-&gt;</operator><name pos:start="102:12" pos:end="102:17">filter</name><operator pos:start="102:18" pos:end="102:18">.</operator><name pos:start="102:19" pos:end="102:24">simple</name></name> <operator pos:start="102:26" pos:end="102:26">=</operator> <call pos:start="102:28" pos:end="102:41"><name pos:start="102:28" pos:end="102:38">vp8_rac_get</name><argument_list pos:start="102:39" pos:end="102:41">(<argument pos:start="102:40" pos:end="102:40"><expr pos:start="102:40" pos:end="102:40"><name pos:start="102:40" pos:end="102:40">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="103:5" pos:end="103:49"><expr pos:start="103:5" pos:end="103:48"><name pos:start="103:5" pos:end="103:19"><name pos:start="103:5" pos:end="103:5">s</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:13">filter</name><operator pos:start="103:14" pos:end="103:14">.</operator><name pos:start="103:15" pos:end="103:19">level</name></name>     <operator pos:start="103:25" pos:end="103:25">=</operator> <call pos:start="103:27" pos:end="103:48"><name pos:start="103:27" pos:end="103:42">vp8_rac_get_uint</name><argument_list pos:start="103:43" pos:end="103:48">(<argument pos:start="103:44" pos:end="103:44"><expr pos:start="103:44" pos:end="103:44"><name pos:start="103:44" pos:end="103:44">c</name></expr></argument>, <argument pos:start="103:47" pos:end="103:47"><expr pos:start="103:47" pos:end="103:47"><literal type="number" pos:start="103:47" pos:end="103:47">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="104:5" pos:end="104:49"><expr pos:start="104:5" pos:end="104:48"><name pos:start="104:5" pos:end="104:23"><name pos:start="104:5" pos:end="104:5">s</name><operator pos:start="104:6" pos:end="104:7">-&gt;</operator><name pos:start="104:8" pos:end="104:13">filter</name><operator pos:start="104:14" pos:end="104:14">.</operator><name pos:start="104:15" pos:end="104:23">sharpness</name></name> <operator pos:start="104:25" pos:end="104:25">=</operator> <call pos:start="104:27" pos:end="104:48"><name pos:start="104:27" pos:end="104:42">vp8_rac_get_uint</name><argument_list pos:start="104:43" pos:end="104:48">(<argument pos:start="104:44" pos:end="104:44"><expr pos:start="104:44" pos:end="104:44"><name pos:start="104:44" pos:end="104:44">c</name></expr></argument>, <argument pos:start="104:47" pos:end="104:47"><expr pos:start="104:47" pos:end="104:47"><literal type="number" pos:start="104:47" pos:end="104:47">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="105:5" pos:end="105:79">/* I. DCT coefficient probability update; 13.3 Token Probability Updates */</comment>
    <expr_stmt pos:start="106:5" pos:end="106:38"><expr pos:start="106:5" pos:end="106:37"><call pos:start="106:5" pos:end="106:37"><name pos:start="106:5" pos:end="106:34">vp78_update_probability_tables</name><argument_list pos:start="106:35" pos:end="106:37">(<argument pos:start="106:36" pos:end="106:36"><expr pos:start="106:36" pos:end="106:36"><name pos:start="106:36" pos:end="106:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="107:5" pos:end="107:26"><expr pos:start="107:5" pos:end="107:25"><name pos:start="107:5" pos:end="107:21"><name pos:start="107:5" pos:end="107:5">s</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:21">mbskip_enabled</name></name> <operator pos:start="107:23" pos:end="107:23">=</operator> <literal type="number" pos:start="107:25" pos:end="107:25">0</literal></expr>;</expr_stmt>
    <comment type="block" pos:start="108:5" pos:end="108:72">/* J. The remaining frame header data occurs ONLY FOR INTERFRAMES */</comment>
    <if_stmt pos:start="109:5" pos:end="113:13"><if pos:start="109:5" pos:end="113:13">if <condition pos:start="109:8" pos:end="109:21">(<expr pos:start="109:9" pos:end="109:20"><operator pos:start="109:9" pos:end="109:9">!</operator><name pos:start="109:10" pos:end="109:20"><name pos:start="109:10" pos:end="109:10">s</name><operator pos:start="109:11" pos:end="109:12">-&gt;</operator><name pos:start="109:13" pos:end="109:20">keyframe</name></name></expr>)</condition> <block pos:start="109:23" pos:end="113:13">{<block_content pos:start="110:9" pos:end="113:13">
        <expr_stmt pos:start="110:9" pos:end="110:49"><expr pos:start="110:9" pos:end="110:48"><name pos:start="110:9" pos:end="110:22"><name pos:start="110:9" pos:end="110:9">s</name><operator pos:start="110:10" pos:end="110:11">-&gt;</operator><name pos:start="110:12" pos:end="110:15">prob</name><operator pos:start="110:16" pos:end="110:17">-&gt;</operator><name pos:start="110:18" pos:end="110:22">intra</name></name>  <operator pos:start="110:25" pos:end="110:25">=</operator> <call pos:start="110:27" pos:end="110:48"><name pos:start="110:27" pos:end="110:42">vp8_rac_get_uint</name><argument_list pos:start="110:43" pos:end="110:48">(<argument pos:start="110:44" pos:end="110:44"><expr pos:start="110:44" pos:end="110:44"><name pos:start="110:44" pos:end="110:44">c</name></expr></argument>, <argument pos:start="110:47" pos:end="110:47"><expr pos:start="110:47" pos:end="110:47"><literal type="number" pos:start="110:47" pos:end="110:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="111:9" pos:end="111:49"><expr pos:start="111:9" pos:end="111:48"><name pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:15">prob</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:21">last</name></name>   <operator pos:start="111:25" pos:end="111:25">=</operator> <call pos:start="111:27" pos:end="111:48"><name pos:start="111:27" pos:end="111:42">vp8_rac_get_uint</name><argument_list pos:start="111:43" pos:end="111:48">(<argument pos:start="111:44" pos:end="111:44"><expr pos:start="111:44" pos:end="111:44"><name pos:start="111:44" pos:end="111:44">c</name></expr></argument>, <argument pos:start="111:47" pos:end="111:47"><expr pos:start="111:47" pos:end="111:47"><literal type="number" pos:start="111:47" pos:end="111:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="112:9" pos:end="112:59"><expr pos:start="112:9" pos:end="112:58"><call pos:start="112:9" pos:end="112:58"><name pos:start="112:9" pos:end="112:55">vp78_update_pred16x16_pred8x8_mvc_probabilities</name><argument_list pos:start="112:56" pos:end="112:58">(<argument pos:start="112:57" pos:end="112:57"><expr pos:start="112:57" pos:end="112:57"><name pos:start="112:57" pos:end="112:57">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="113:5" pos:end="113:13">return <expr pos:start="113:12" pos:end="113:12"><literal type="number" pos:start="113:12" pos:end="113:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
