<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/537.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">ASSStyle</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:26">ff_ass_style_get</name><parameter_list pos:start="1:27" pos:end="1:67">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:42">ASSSplitContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">ctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:66"><decl pos:start="1:50" pos:end="1:66"><type pos:start="1:50" pos:end="1:66"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:59">char</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:66">style</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:16">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:7">ASS</name> <modifier pos:start="5:9" pos:end="5:9">*</modifier></type><name pos:start="5:10" pos:end="5:12">ass</name> <init pos:start="5:14" pos:end="5:24">= <expr pos:start="5:16" pos:end="5:24"><operator pos:start="5:16" pos:end="5:16">&amp;</operator><name pos:start="5:17" pos:end="5:24"><name pos:start="5:17" pos:end="5:19">ctx</name><operator pos:start="5:20" pos:end="5:21">-&gt;</operator><name pos:start="5:22" pos:end="5:24">ass</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:26"><if pos:start="11:5" pos:end="13:26">if <condition pos:start="11:8" pos:end="11:26">(<expr pos:start="11:9" pos:end="11:25"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:14">style</name> <operator pos:start="11:16" pos:end="11:17">||</operator> <operator pos:start="11:19" pos:end="11:19">!</operator><operator pos:start="11:20" pos:end="11:20">*</operator><name pos:start="11:21" pos:end="11:25">style</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:26"><block_content pos:start="13:9" pos:end="13:26">

        <expr_stmt pos:start="13:9" pos:end="13:26"><expr pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:13">style</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <literal type="string" pos:start="13:17" pos:end="13:25">"Default"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="15:5" pos:end="19:35">for <control pos:start="15:9" pos:end="15:39">(<init pos:start="15:10" pos:end="15:13"><expr pos:start="15:10" pos:end="15:12"><name pos:start="15:10" pos:end="15:10">i</name><operator pos:start="15:11" pos:end="15:11">=</operator><literal type="number" pos:start="15:12" pos:end="15:12">0</literal></expr>;</init> <condition pos:start="15:15" pos:end="15:34"><expr pos:start="15:15" pos:end="15:33"><name pos:start="15:15" pos:end="15:15">i</name><operator pos:start="15:16" pos:end="15:16">&lt;</operator><name pos:start="15:17" pos:end="15:33"><name pos:start="15:17" pos:end="15:19">ass</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:33">styles_count</name></name></expr>;</condition> <incr pos:start="15:36" pos:end="15:38"><expr pos:start="15:36" pos:end="15:38"><name pos:start="15:36" pos:end="15:36">i</name><operator pos:start="15:37" pos:end="15:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="17:9" pos:end="19:35"><block_content pos:start="17:9" pos:end="19:35">

        <if_stmt pos:start="17:9" pos:end="19:35"><if pos:start="17:9" pos:end="19:35">if <condition pos:start="17:12" pos:end="17:48">(<expr pos:start="17:13" pos:end="17:47"><operator pos:start="17:13" pos:end="17:13">!</operator><call pos:start="17:14" pos:end="17:47"><name pos:start="17:14" pos:end="17:19">strcmp</name><argument_list pos:start="17:20" pos:end="17:47">(<argument pos:start="17:21" pos:end="17:39"><expr pos:start="17:21" pos:end="17:39"><name pos:start="17:21" pos:end="17:34"><name pos:start="17:21" pos:end="17:23">ass</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:31">styles</name><index pos:start="17:32" pos:end="17:34">[<expr pos:start="17:33" pos:end="17:33"><name pos:start="17:33" pos:end="17:33">i</name></expr>]</index></name><operator pos:start="17:35" pos:end="17:35">.</operator><name pos:start="17:36" pos:end="17:39">name</name></expr></argument>, <argument pos:start="17:42" pos:end="17:46"><expr pos:start="17:42" pos:end="17:46"><name pos:start="17:42" pos:end="17:46">style</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:35"><block_content pos:start="19:13" pos:end="19:35">

            <return pos:start="19:13" pos:end="19:35">return <expr pos:start="19:20" pos:end="19:34"><name pos:start="19:20" pos:end="19:30"><name pos:start="19:20" pos:end="19:22">ass</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:30">styles</name></name> <operator pos:start="19:32" pos:end="19:32">+</operator> <name pos:start="19:34" pos:end="19:34">i</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

    <return pos:start="21:5" pos:end="21:16">return <expr pos:start="21:12" pos:end="21:15"><name pos:start="21:12" pos:end="21:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
