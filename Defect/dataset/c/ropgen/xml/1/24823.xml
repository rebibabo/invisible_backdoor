<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24823.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">mpc8_probe</name><parameter_list pos:start="1:22" pos:end="1:37">(<parameter pos:start="1:23" pos:end="1:36"><decl pos:start="1:23" pos:end="1:36"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:33">AVProbeData</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">bs</name> <init pos:start="5:23" pos:end="5:34">= <expr pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:25">p</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:30">buf</name></name> <operator pos:start="5:32" pos:end="5:32">+</operator> <literal type="number" pos:start="5:34" pos:end="5:34">4</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:25">bs_end</name> <init pos:start="7:27" pos:end="7:44">= <expr pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:30">bs</name> <operator pos:start="7:32" pos:end="7:32">+</operator> <name pos:start="7:34" pos:end="7:44"><name pos:start="7:34" pos:end="7:34">p</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:44">buf_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:16">size</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if <condition pos:start="13:8" pos:end="13:25">(<expr pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:9">p</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:19">buf_size</name></name> <operator pos:start="13:21" pos:end="13:21">&lt;</operator> <literal type="number" pos:start="13:23" pos:end="13:24">16</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:36">(<expr pos:start="17:9" pos:end="17:35"><call pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:15">AV_RL32</name><argument_list pos:start="17:16" pos:end="17:23">(<argument pos:start="17:17" pos:end="17:22"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:17">p</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:22">buf</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:25" pos:end="17:26">!=</operator> <name pos:start="17:28" pos:end="17:35">TAG_MPCK</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <while pos:start="21:5" pos:end="59:5">while <condition pos:start="21:11" pos:end="21:27">(<expr pos:start="21:12" pos:end="21:26"><name pos:start="21:12" pos:end="21:13">bs</name> <operator pos:start="21:15" pos:end="21:15">&lt;</operator> <name pos:start="21:17" pos:end="21:22">bs_end</name> <operator pos:start="21:24" pos:end="21:24">+</operator> <literal type="number" pos:start="21:26" pos:end="21:26">3</literal></expr>)</condition> <block pos:start="21:29" pos:end="59:5">{<block_content pos:start="23:9" pos:end="57:9">

        <decl_stmt pos:start="23:9" pos:end="23:58"><decl pos:start="23:9" pos:end="23:57"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:24">header_found</name> <init pos:start="23:26" pos:end="23:57">= <expr pos:start="23:28" pos:end="23:57"><operator pos:start="23:28" pos:end="23:28">(</operator><name pos:start="23:29" pos:end="23:33"><name pos:start="23:29" pos:end="23:30">bs</name><index pos:start="23:31" pos:end="23:33">[<expr pos:start="23:32" pos:end="23:32"><literal type="number" pos:start="23:32" pos:end="23:32">0</literal></expr>]</index></name> <operator pos:start="23:35" pos:end="23:36">==</operator> <literal type="char" pos:start="23:38" pos:end="23:40">'S'</literal> <operator pos:start="23:42" pos:end="23:43">&amp;&amp;</operator> <name pos:start="23:45" pos:end="23:49"><name pos:start="23:45" pos:end="23:46">bs</name><index pos:start="23:47" pos:end="23:49">[<expr pos:start="23:48" pos:end="23:48"><literal type="number" pos:start="23:48" pos:end="23:48">1</literal></expr>]</index></name> <operator pos:start="23:51" pos:end="23:52">==</operator> <literal type="char" pos:start="23:54" pos:end="23:56">'H'</literal><operator pos:start="23:57" pos:end="23:57">)</operator></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="25:9" pos:end="27:21"><if pos:start="25:9" pos:end="27:21">if <condition pos:start="25:12" pos:end="25:69">(<expr pos:start="25:13" pos:end="25:68"><name pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:14">bs</name><index pos:start="25:15" pos:end="25:17">[<expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>]</index></name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <literal type="char" pos:start="25:21" pos:end="25:23">'A'</literal> <operator pos:start="25:25" pos:end="25:26">||</operator> <name pos:start="25:28" pos:end="25:32"><name pos:start="25:28" pos:end="25:29">bs</name><index pos:start="25:30" pos:end="25:32">[<expr pos:start="25:31" pos:end="25:31"><literal type="number" pos:start="25:31" pos:end="25:31">0</literal></expr>]</index></name> <operator pos:start="25:34" pos:end="25:34">&gt;</operator> <literal type="char" pos:start="25:36" pos:end="25:38">'Z'</literal> <operator pos:start="25:40" pos:end="25:41">||</operator> <name pos:start="25:43" pos:end="25:47"><name pos:start="25:43" pos:end="25:44">bs</name><index pos:start="25:45" pos:end="25:47">[<expr pos:start="25:46" pos:end="25:46"><literal type="number" pos:start="25:46" pos:end="25:46">1</literal></expr>]</index></name> <operator pos:start="25:49" pos:end="25:49">&lt;</operator> <literal type="char" pos:start="25:51" pos:end="25:53">'A'</literal> <operator pos:start="25:55" pos:end="25:56">||</operator> <name pos:start="25:58" pos:end="25:62"><name pos:start="25:58" pos:end="25:59">bs</name><index pos:start="25:60" pos:end="25:62">[<expr pos:start="25:61" pos:end="25:61"><literal type="number" pos:start="25:61" pos:end="25:61">1</literal></expr>]</index></name> <operator pos:start="25:64" pos:end="25:64">&gt;</operator> <literal type="char" pos:start="25:66" pos:end="25:68">'Z'</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:21"><block_content pos:start="27:13" pos:end="27:21">

            <return pos:start="27:13" pos:end="27:21">return <expr pos:start="27:20" pos:end="27:20"><literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:16"><expr pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:10">bs</name> <operator pos:start="29:12" pos:end="29:13">+=</operator> <literal type="number" pos:start="29:15" pos:end="29:15">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:29"><expr pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:12">size</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:28"><name pos:start="31:16" pos:end="31:23">bs_get_v</name><argument_list pos:start="31:24" pos:end="31:28">(<argument pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><operator pos:start="31:25" pos:end="31:25">&amp;</operator><name pos:start="31:26" pos:end="31:27">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="35:21"><if pos:start="33:9" pos:end="35:21">if <condition pos:start="33:12" pos:end="33:21">(<expr pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:16">size</name> <operator pos:start="33:18" pos:end="33:18">&lt;</operator> <literal type="number" pos:start="33:20" pos:end="33:20">2</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:21"><block_content pos:start="35:13" pos:end="35:21">

            <return pos:start="35:13" pos:end="35:21">return <expr pos:start="35:20" pos:end="35:20"><literal type="number" pos:start="35:20" pos:end="35:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="39:47"><if pos:start="37:9" pos:end="39:47">if <condition pos:start="37:12" pos:end="37:36">(<expr pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:14">bs</name> <operator pos:start="37:16" pos:end="37:16">+</operator> <name pos:start="37:18" pos:end="37:21">size</name> <operator pos:start="37:23" pos:end="37:23">-</operator> <literal type="number" pos:start="37:25" pos:end="37:25">2</literal> <operator pos:start="37:27" pos:end="37:28">&gt;=</operator> <name pos:start="37:30" pos:end="37:35">bs_end</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:47"><block_content pos:start="39:13" pos:end="39:47">

            <return pos:start="39:13" pos:end="39:47">return <expr pos:start="39:20" pos:end="39:46"><name pos:start="39:20" pos:end="39:42">AVPROBE_SCORE_EXTENSION</name> <operator pos:start="39:44" pos:end="39:44">-</operator> <literal type="number" pos:start="39:46" pos:end="39:46">1</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="line" pos:start="39:49" pos:end="39:90">// seems to be valid MPC but no header yet</comment>

        <if_stmt pos:start="41:9" pos:end="57:9"><if pos:start="41:9" pos:end="53:9">if <condition pos:start="41:12" pos:end="41:25">(<expr pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:24">header_found</name></expr>)</condition> <block pos:start="41:27" pos:end="53:9">{<block_content pos:start="43:13" pos:end="51:37">

            <if_stmt pos:start="43:13" pos:end="45:25"><if pos:start="43:13" pos:end="45:25">if <condition pos:start="43:16" pos:end="43:39">(<expr pos:start="43:17" pos:end="43:38"><name pos:start="43:17" pos:end="43:35"><name pos:start="43:17" pos:end="43:20">size</name> <argument_list type="generic" pos:start="43:22" pos:end="43:35">&lt; <argument pos:start="43:24" pos:end="43:33"><expr pos:start="43:24" pos:end="43:33"><literal type="number" pos:start="43:24" pos:end="43:25">11</literal> <operator pos:start="43:27" pos:end="43:28">||</operator> <name pos:start="43:30" pos:end="43:33">size</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="43:37" pos:end="43:38">28</literal></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:25"><block_content pos:start="45:17" pos:end="45:25">

                <return pos:start="45:17" pos:end="45:25">return <expr pos:start="45:24" pos:end="45:24"><literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="47:13" pos:end="49:25"><if pos:start="47:13" pos:end="49:25">if <condition pos:start="47:16" pos:end="47:29">(<expr pos:start="47:17" pos:end="47:28"><operator pos:start="47:17" pos:end="47:17">!</operator><call pos:start="47:18" pos:end="47:28"><name pos:start="47:18" pos:end="47:24">AV_RL32</name><argument_list pos:start="47:25" pos:end="47:28">(<argument pos:start="47:26" pos:end="47:27"><expr pos:start="47:26" pos:end="47:27"><name pos:start="47:26" pos:end="47:27">bs</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:25"><block_content pos:start="49:17" pos:end="49:25"> <comment type="line" pos:start="47:31" pos:end="47:51">//zero CRC is invalid</comment>

                <return pos:start="49:17" pos:end="49:25">return <expr pos:start="49:24" pos:end="49:24"><literal type="number" pos:start="49:24" pos:end="49:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <return pos:start="51:13" pos:end="51:37">return <expr pos:start="51:20" pos:end="51:36"><name pos:start="51:20" pos:end="51:36">AVPROBE_SCORE_MAX</name></expr>;</return>

        </block_content>}</block></if> <else pos:start="53:11" pos:end="57:9">else <block pos:start="53:16" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:27">

            <expr_stmt pos:start="55:13" pos:end="55:27"><expr pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:14">bs</name> <operator pos:start="55:16" pos:end="55:17">+=</operator> <name pos:start="55:19" pos:end="55:22">size</name> <operator pos:start="55:24" pos:end="55:24">-</operator> <literal type="number" pos:start="55:26" pos:end="55:26">2</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
