<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26986.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:33">ff_vaapi_encode_close</name><parameter_list pos:start="1:34" pos:end="1:56">(<parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:50"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:13">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">VAAPIEncodeContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:27">ctx</name> <init pos:start="5:29" pos:end="5:46">= <expr pos:start="5:31" pos:end="5:46"><name pos:start="5:31" pos:end="5:46"><name pos:start="5:31" pos:end="5:35">avctx</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:46">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">VAAPIEncodePicture</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:27">pic</name></decl>, <decl pos:start="7:30" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:24"><modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:34">next</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="17:5">for <control pos:start="11:9" pos:end="11:47">(<init pos:start="11:10" pos:end="11:30"><expr pos:start="11:10" pos:end="11:29"><name pos:start="11:10" pos:end="11:12">pic</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:29"><name pos:start="11:16" pos:end="11:18">ctx</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:29">pic_start</name></name></expr>;</init> <condition pos:start="11:32" pos:end="11:35"><expr pos:start="11:32" pos:end="11:34"><name pos:start="11:32" pos:end="11:34">pic</name></expr>;</condition> <incr pos:start="11:37" pos:end="11:46"><expr pos:start="11:37" pos:end="11:46"><name pos:start="11:37" pos:end="11:39">pic</name> <operator pos:start="11:41" pos:end="11:41">=</operator> <name pos:start="11:43" pos:end="11:46">next</name></expr></incr>)</control> <block pos:start="11:49" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:38">

        <expr_stmt pos:start="13:9" pos:end="13:25"><expr pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:12">next</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:24"><name pos:start="13:16" pos:end="13:18">pic</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:24">next</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:38"><expr pos:start="15:9" pos:end="15:37"><call pos:start="15:9" pos:end="15:37"><name pos:start="15:9" pos:end="15:25">vaapi_encode_free</name><argument_list pos:start="15:26" pos:end="15:37">(<argument pos:start="15:27" pos:end="15:31"><expr pos:start="15:27" pos:end="15:31"><name pos:start="15:27" pos:end="15:31">avctx</name></expr></argument>, <argument pos:start="15:34" pos:end="15:36"><expr pos:start="15:34" pos:end="15:36"><name pos:start="15:34" pos:end="15:36">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="21:5" pos:end="23:63"><if pos:start="21:5" pos:end="23:63">if <condition pos:start="21:8" pos:end="21:41">(<expr pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:11">ctx</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:23">va_context</name></name> <operator pos:start="21:25" pos:end="21:26">!=</operator> <name pos:start="21:28" pos:end="21:40">VA_INVALID_ID</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:63"><block_content pos:start="23:9" pos:end="23:63">

        <expr_stmt pos:start="23:9" pos:end="23:63"><expr pos:start="23:9" pos:end="23:62"><call pos:start="23:9" pos:end="23:62"><name pos:start="23:9" pos:end="23:24">vaDestroyContext</name><argument_list pos:start="23:25" pos:end="23:62">(<argument pos:start="23:26" pos:end="23:44"><expr pos:start="23:26" pos:end="23:44"><name pos:start="23:26" pos:end="23:44"><name pos:start="23:26" pos:end="23:28">ctx</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:35">hwctx</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:44">display</name></name></expr></argument>, <argument pos:start="23:47" pos:end="23:61"><expr pos:start="23:47" pos:end="23:61"><name pos:start="23:47" pos:end="23:61"><name pos:start="23:47" pos:end="23:49">ctx</name><operator pos:start="23:50" pos:end="23:51">-&gt;</operator><name pos:start="23:52" pos:end="23:61">va_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="29:61"><if pos:start="27:5" pos:end="29:61">if <condition pos:start="27:8" pos:end="27:40">(<expr pos:start="27:9" pos:end="27:39"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:11">ctx</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:22">va_config</name></name> <operator pos:start="27:24" pos:end="27:25">!=</operator> <name pos:start="27:27" pos:end="27:39">VA_INVALID_ID</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:61"><block_content pos:start="29:9" pos:end="29:61">

        <expr_stmt pos:start="29:9" pos:end="29:61"><expr pos:start="29:9" pos:end="29:60"><call pos:start="29:9" pos:end="29:60"><name pos:start="29:9" pos:end="29:23">vaDestroyConfig</name><argument_list pos:start="29:24" pos:end="29:60">(<argument pos:start="29:25" pos:end="29:43"><expr pos:start="29:25" pos:end="29:43"><name pos:start="29:25" pos:end="29:43"><name pos:start="29:25" pos:end="29:27">ctx</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:34">hwctx</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:43">display</name></name></expr></argument>, <argument pos:start="29:46" pos:end="29:59"><expr pos:start="29:46" pos:end="29:59"><name pos:start="29:46" pos:end="29:59"><name pos:start="29:46" pos:end="29:48">ctx</name><operator pos:start="29:49" pos:end="29:50">-&gt;</operator><name pos:start="29:51" pos:end="29:59">va_config</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="35:33"><if pos:start="33:5" pos:end="35:33">if <condition pos:start="33:8" pos:end="33:26">(<expr pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:11">ctx</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:18">codec</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:25">close</name></name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:33"><block_content pos:start="35:9" pos:end="35:33">

        <expr_stmt pos:start="35:9" pos:end="35:33"><expr pos:start="35:9" pos:end="35:32"><call pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:11">ctx</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:18">codec</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:25">close</name></name><argument_list pos:start="35:26" pos:end="35:32">(<argument pos:start="35:27" pos:end="35:31"><expr pos:start="35:27" pos:end="35:31"><name pos:start="35:27" pos:end="35:31">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:42"><expr pos:start="39:5" pos:end="39:41"><call pos:start="39:5" pos:end="39:41"><name pos:start="39:5" pos:end="39:12">av_freep</name><argument_list pos:start="39:13" pos:end="39:41">(<argument pos:start="39:14" pos:end="39:40"><expr pos:start="39:14" pos:end="39:40"><operator pos:start="39:14" pos:end="39:14">&amp;</operator><name pos:start="39:15" pos:end="39:40"><name pos:start="39:15" pos:end="39:17">ctx</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:40">codec_sequence_params</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:41"><expr pos:start="41:5" pos:end="41:40"><call pos:start="41:5" pos:end="41:40"><name pos:start="41:5" pos:end="41:12">av_freep</name><argument_list pos:start="41:13" pos:end="41:40">(<argument pos:start="41:14" pos:end="41:39"><expr pos:start="41:14" pos:end="41:39"><operator pos:start="41:14" pos:end="41:14">&amp;</operator><name pos:start="41:15" pos:end="41:39"><name pos:start="41:15" pos:end="41:17">ctx</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:39">codec_picture_params</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:44"><expr pos:start="45:5" pos:end="45:43"><call pos:start="45:5" pos:end="45:43"><name pos:start="45:5" pos:end="45:19">av_buffer_unref</name><argument_list pos:start="45:20" pos:end="45:43">(<argument pos:start="45:21" pos:end="45:42"><expr pos:start="45:21" pos:end="45:42"><operator pos:start="45:21" pos:end="45:21">&amp;</operator><name pos:start="45:22" pos:end="45:42"><name pos:start="45:22" pos:end="45:24">ctx</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:42">recon_frames_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:44"><expr pos:start="47:5" pos:end="47:43"><call pos:start="47:5" pos:end="47:43"><name pos:start="47:5" pos:end="47:19">av_buffer_unref</name><argument_list pos:start="47:20" pos:end="47:43">(<argument pos:start="47:21" pos:end="47:42"><expr pos:start="47:21" pos:end="47:42"><operator pos:start="47:21" pos:end="47:21">&amp;</operator><name pos:start="47:22" pos:end="47:42"><name pos:start="47:22" pos:end="47:24">ctx</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:42">input_frames_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:38"><expr pos:start="49:5" pos:end="49:37"><call pos:start="49:5" pos:end="49:37"><name pos:start="49:5" pos:end="49:19">av_buffer_unref</name><argument_list pos:start="49:20" pos:end="49:37">(<argument pos:start="49:21" pos:end="49:36"><expr pos:start="49:21" pos:end="49:36"><operator pos:start="49:21" pos:end="49:21">&amp;</operator><name pos:start="49:22" pos:end="49:36"><name pos:start="49:22" pos:end="49:24">ctx</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:36">device_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:30"><expr pos:start="53:5" pos:end="53:29"><call pos:start="53:5" pos:end="53:29"><name pos:start="53:5" pos:end="53:12">av_freep</name><argument_list pos:start="53:13" pos:end="53:29">(<argument pos:start="53:14" pos:end="53:28"><expr pos:start="53:14" pos:end="53:28"><operator pos:start="53:14" pos:end="53:14">&amp;</operator><name pos:start="53:15" pos:end="53:28"><name pos:start="53:15" pos:end="53:17">ctx</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:28">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
