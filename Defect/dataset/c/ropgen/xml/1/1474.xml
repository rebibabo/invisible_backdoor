<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1474.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">type_initialize</name><parameter_list pos:start="1:28" pos:end="1:41">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:38"><name pos:start="1:29" pos:end="1:36">TypeImpl</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">ti</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="115:5">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">TypeImpl</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:20">parent</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:18">(<expr pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:10">ti</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:17">class</name></name></expr>)</condition> <block pos:start="9:20" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:15">

        <return pos:start="11:9" pos:end="11:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:6">ti</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:18">class_size</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <call pos:start="17:22" pos:end="17:44"><name pos:start="17:22" pos:end="17:40">type_class_get_size</name><argument_list pos:start="17:41" pos:end="17:44">(<argument pos:start="17:42" pos:end="17:43"><expr pos:start="17:42" pos:end="17:43"><name pos:start="17:42" pos:end="17:43">ti</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:49"><expr pos:start="19:5" pos:end="19:48"><name pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:6">ti</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:21">instance_size</name></name> <operator pos:start="19:23" pos:end="19:23">=</operator> <call pos:start="19:25" pos:end="19:48"><name pos:start="19:25" pos:end="19:44">type_object_get_size</name><argument_list pos:start="19:45" pos:end="19:48">(<argument pos:start="19:46" pos:end="19:47"><expr pos:start="19:46" pos:end="19:47"><name pos:start="19:46" pos:end="19:47">ti</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:6">ti</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:13">class</name></name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:41"><name pos:start="23:17" pos:end="23:25">g_malloc0</name><argument_list pos:start="23:26" pos:end="23:41">(<argument pos:start="23:27" pos:end="23:40"><expr pos:start="23:27" pos:end="23:40"><name pos:start="23:27" pos:end="23:40"><name pos:start="23:27" pos:end="23:28">ti</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:40">class_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:10">parent</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:32"><name pos:start="27:14" pos:end="27:28">type_get_parent</name><argument_list pos:start="27:29" pos:end="27:32">(<argument pos:start="27:30" pos:end="27:31"><expr pos:start="27:30" pos:end="27:31"><name pos:start="27:30" pos:end="27:31">ti</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="89:5"><if pos:start="29:5" pos:end="89:5">if <condition pos:start="29:8" pos:end="29:15">(<expr pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:14">parent</name></expr>)</condition> <block pos:start="29:17" pos:end="89:5">{<block_content pos:start="31:9" pos:end="87:9">

        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><call pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:23">type_initialize</name><argument_list pos:start="31:24" pos:end="31:31">(<argument pos:start="31:25" pos:end="31:30"><expr pos:start="31:25" pos:end="31:30"><name pos:start="31:25" pos:end="31:30">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:18"><decl pos:start="33:9" pos:end="33:17"><type pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:14">GSList</name> <modifier pos:start="33:16" pos:end="33:16">*</modifier></type><name pos:start="33:17" pos:end="33:17">e</name></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:14"><decl pos:start="35:9" pos:end="35:13"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:13">i</name></decl>;</decl_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:55"><expr pos:start="39:9" pos:end="39:54"><call pos:start="39:9" pos:end="39:54"><name pos:start="39:9" pos:end="39:16">g_assert</name><argument_list pos:start="39:17" pos:end="39:54">(<argument pos:start="39:18" pos:end="39:53"><expr pos:start="39:18" pos:end="39:53"><name pos:start="39:18" pos:end="39:35"><name pos:start="39:18" pos:end="39:23">parent</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:35">class_size</name></name> <operator pos:start="39:37" pos:end="39:38">&lt;=</operator> <name pos:start="39:40" pos:end="39:53"><name pos:start="39:40" pos:end="39:41">ti</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:53">class_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:61"><expr pos:start="41:9" pos:end="41:60"><call pos:start="41:9" pos:end="41:60"><name pos:start="41:9" pos:end="41:14">memcpy</name><argument_list pos:start="41:15" pos:end="41:60">(<argument pos:start="41:16" pos:end="41:24"><expr pos:start="41:16" pos:end="41:24"><name pos:start="41:16" pos:end="41:24"><name pos:start="41:16" pos:end="41:17">ti</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:24">class</name></name></expr></argument>, <argument pos:start="41:27" pos:end="41:39"><expr pos:start="41:27" pos:end="41:39"><name pos:start="41:27" pos:end="41:39"><name pos:start="41:27" pos:end="41:32">parent</name><operator pos:start="41:33" pos:end="41:34">-&gt;</operator><name pos:start="41:35" pos:end="41:39">class</name></name></expr></argument>, <argument pos:start="41:42" pos:end="41:59"><expr pos:start="41:42" pos:end="41:59"><name pos:start="41:42" pos:end="41:59"><name pos:start="41:42" pos:end="41:47">parent</name><operator pos:start="41:48" pos:end="41:49">-&gt;</operator><name pos:start="41:50" pos:end="41:59">class_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:37"><expr pos:start="43:9" pos:end="43:36"><name pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:10">ti</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:17">class</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:29">interfaces</name></name> <operator pos:start="43:31" pos:end="43:31">=</operator> <name pos:start="43:33" pos:end="43:36">NULL</name></expr>;</expr_stmt>



        <for pos:start="47:9" pos:end="53:9">for <control pos:start="47:13" pos:end="47:59">(<init pos:start="47:14" pos:end="47:43"><expr pos:start="47:14" pos:end="47:42"><name pos:start="47:14" pos:end="47:14">e</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <name pos:start="47:18" pos:end="47:42"><name pos:start="47:18" pos:end="47:23">parent</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:30">class</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:42">interfaces</name></name></expr>;</init> <condition pos:start="47:45" pos:end="47:46"><expr pos:start="47:45" pos:end="47:45"><name pos:start="47:45" pos:end="47:45">e</name></expr>;</condition> <incr pos:start="47:48" pos:end="47:58"><expr pos:start="47:48" pos:end="47:58"><name pos:start="47:48" pos:end="47:48">e</name> <operator pos:start="47:50" pos:end="47:50">=</operator> <name pos:start="47:52" pos:end="47:58"><name pos:start="47:52" pos:end="47:52">e</name><operator pos:start="47:53" pos:end="47:54">-&gt;</operator><name pos:start="47:55" pos:end="47:58">next</name></name></expr></incr>)</control> <block pos:start="47:61" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:72">

            <decl_stmt pos:start="49:13" pos:end="49:41"><decl pos:start="49:13" pos:end="49:40"><type pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:23">ObjectClass</name> <modifier pos:start="49:25" pos:end="49:25">*</modifier></type><name pos:start="49:26" pos:end="49:30">iface</name> <init pos:start="49:32" pos:end="49:40">= <expr pos:start="49:34" pos:end="49:40"><name pos:start="49:34" pos:end="49:40"><name pos:start="49:34" pos:end="49:34">e</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:40">data</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:72"><expr pos:start="51:13" pos:end="51:71"><call pos:start="51:13" pos:end="51:71"><name pos:start="51:13" pos:end="51:37">type_initialize_interface</name><argument_list pos:start="51:38" pos:end="51:71">(<argument pos:start="51:39" pos:end="51:40"><expr pos:start="51:39" pos:end="51:40"><name pos:start="51:39" pos:end="51:40">ti</name></expr></argument>, <argument pos:start="51:43" pos:end="51:70"><expr pos:start="51:43" pos:end="51:70"><call pos:start="51:43" pos:end="51:70"><name pos:start="51:43" pos:end="51:63">object_class_get_name</name><argument_list pos:start="51:64" pos:end="51:70">(<argument pos:start="51:65" pos:end="51:69"><expr pos:start="51:65" pos:end="51:69"><name pos:start="51:65" pos:end="51:69">iface</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <for pos:start="57:9" pos:end="87:9">for <control pos:start="57:13" pos:end="57:48">(<init pos:start="57:14" pos:end="57:19"><expr pos:start="57:14" pos:end="57:18"><name pos:start="57:14" pos:end="57:14">i</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr>;</init> <condition pos:start="57:21" pos:end="57:43"><expr pos:start="57:21" pos:end="57:42"><name pos:start="57:21" pos:end="57:21">i</name> <operator pos:start="57:23" pos:end="57:23">&lt;</operator> <name pos:start="57:25" pos:end="57:42"><name pos:start="57:25" pos:end="57:26">ti</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:42">num_interfaces</name></name></expr>;</condition> <incr pos:start="57:45" pos:end="57:47"><expr pos:start="57:45" pos:end="57:47"><name pos:start="57:45" pos:end="57:45">i</name><operator pos:start="57:46" pos:end="57:47">++</operator></expr></incr>)</control> <block pos:start="57:50" pos:end="87:9">{<block_content pos:start="59:13" pos:end="85:70">

            <decl_stmt pos:start="59:13" pos:end="59:71"><decl pos:start="59:13" pos:end="59:70"><type pos:start="59:13" pos:end="59:22"><name pos:start="59:13" pos:end="59:20">TypeImpl</name> <modifier pos:start="59:22" pos:end="59:22">*</modifier></type><name pos:start="59:23" pos:end="59:23">t</name> <init pos:start="59:25" pos:end="59:70">= <expr pos:start="59:27" pos:end="59:70"><call pos:start="59:27" pos:end="59:70"><name pos:start="59:27" pos:end="59:42">type_get_by_name</name><argument_list pos:start="59:43" pos:end="59:70">(<argument pos:start="59:44" pos:end="59:69"><expr pos:start="59:44" pos:end="59:69"><name pos:start="59:44" pos:end="59:60"><name pos:start="59:44" pos:end="59:45">ti</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:57">interfaces</name><index pos:start="59:58" pos:end="59:60">[<expr pos:start="59:59" pos:end="59:59"><name pos:start="59:59" pos:end="59:59">i</name></expr>]</index></name><operator pos:start="59:61" pos:end="59:61">.</operator><name pos:start="59:62" pos:end="59:69">typename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <for pos:start="61:13" pos:end="73:13">for <control pos:start="61:17" pos:end="61:59">(<init pos:start="61:18" pos:end="61:43"><expr pos:start="61:18" pos:end="61:42"><name pos:start="61:18" pos:end="61:18">e</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:42"><name pos:start="61:22" pos:end="61:23">ti</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:30">class</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:42">interfaces</name></name></expr>;</init> <condition pos:start="61:45" pos:end="61:46"><expr pos:start="61:45" pos:end="61:45"><name pos:start="61:45" pos:end="61:45">e</name></expr>;</condition> <incr pos:start="61:48" pos:end="61:58"><expr pos:start="61:48" pos:end="61:58"><name pos:start="61:48" pos:end="61:48">e</name> <operator pos:start="61:50" pos:end="61:50">=</operator> <name pos:start="61:52" pos:end="61:58"><name pos:start="61:52" pos:end="61:52">e</name><operator pos:start="61:53" pos:end="61:54">-&gt;</operator><name pos:start="61:55" pos:end="61:58">next</name></name></expr></incr>)</control> <block pos:start="61:61" pos:end="73:13">{<block_content pos:start="63:17" pos:end="71:17">

                <decl_stmt pos:start="63:17" pos:end="63:68"><decl pos:start="63:17" pos:end="63:67"><type pos:start="63:17" pos:end="63:26"><name pos:start="63:17" pos:end="63:24">TypeImpl</name> <modifier pos:start="63:26" pos:end="63:26">*</modifier></type><name pos:start="63:27" pos:end="63:37">target_type</name> <init pos:start="63:39" pos:end="63:67">= <expr pos:start="63:41" pos:end="63:67"><call pos:start="63:41" pos:end="63:61"><name pos:start="63:41" pos:end="63:52">OBJECT_CLASS</name><argument_list pos:start="63:53" pos:end="63:61">(<argument pos:start="63:54" pos:end="63:60"><expr pos:start="63:54" pos:end="63:60"><name pos:start="63:54" pos:end="63:60"><name pos:start="63:54" pos:end="63:54">e</name><operator pos:start="63:55" pos:end="63:56">-&gt;</operator><name pos:start="63:57" pos:end="63:60">data</name></name></expr></argument>)</argument_list></call><operator pos:start="63:62" pos:end="63:63">-&gt;</operator><name pos:start="63:64" pos:end="63:67">type</name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="67:17" pos:end="71:17"><if pos:start="67:17" pos:end="71:17">if <condition pos:start="67:20" pos:end="67:53">(<expr pos:start="67:21" pos:end="67:52"><call pos:start="67:21" pos:end="67:52"><name pos:start="67:21" pos:end="67:36">type_is_ancestor</name><argument_list pos:start="67:37" pos:end="67:52">(<argument pos:start="67:38" pos:end="67:48"><expr pos:start="67:38" pos:end="67:48"><name pos:start="67:38" pos:end="67:48">target_type</name></expr></argument>, <argument pos:start="67:51" pos:end="67:51"><expr pos:start="67:51" pos:end="67:51"><name pos:start="67:51" pos:end="67:51">t</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:55" pos:end="71:17">{<block_content pos:start="69:21" pos:end="69:26">

                    <break pos:start="69:21" pos:end="69:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>



            <if_stmt pos:start="77:13" pos:end="81:13"><if pos:start="77:13" pos:end="81:13">if <condition pos:start="77:16" pos:end="77:18">(<expr pos:start="77:17" pos:end="77:17"><name pos:start="77:17" pos:end="77:17">e</name></expr>)</condition> <block pos:start="77:20" pos:end="81:13">{<block_content pos:start="79:17" pos:end="79:25">

                <continue pos:start="79:17" pos:end="79:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="85:13" pos:end="85:70"><expr pos:start="85:13" pos:end="85:69"><call pos:start="85:13" pos:end="85:69"><name pos:start="85:13" pos:end="85:37">type_initialize_interface</name><argument_list pos:start="85:38" pos:end="85:69">(<argument pos:start="85:39" pos:end="85:40"><expr pos:start="85:39" pos:end="85:40"><name pos:start="85:39" pos:end="85:40">ti</name></expr></argument>, <argument pos:start="85:43" pos:end="85:68"><expr pos:start="85:43" pos:end="85:68"><name pos:start="85:43" pos:end="85:59"><name pos:start="85:43" pos:end="85:44">ti</name><operator pos:start="85:45" pos:end="85:46">-&gt;</operator><name pos:start="85:47" pos:end="85:56">interfaces</name><index pos:start="85:57" pos:end="85:59">[<expr pos:start="85:58" pos:end="85:58"><name pos:start="85:58" pos:end="85:58">i</name></expr>]</index></name><operator pos:start="85:60" pos:end="85:60">.</operator><name pos:start="85:61" pos:end="85:68">typename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:25"><expr pos:start="93:5" pos:end="93:24"><name pos:start="93:5" pos:end="93:19"><name pos:start="93:5" pos:end="93:6">ti</name><operator pos:start="93:7" pos:end="93:8">-&gt;</operator><name pos:start="93:9" pos:end="93:13">class</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:19">type</name></name> <operator pos:start="93:21" pos:end="93:21">=</operator> <name pos:start="93:23" pos:end="93:24">ti</name></expr>;</expr_stmt>



    <while pos:start="97:5" pos:end="107:5">while <condition pos:start="97:11" pos:end="97:18">(<expr pos:start="97:12" pos:end="97:17"><name pos:start="97:12" pos:end="97:17">parent</name></expr>)</condition> <block pos:start="97:20" pos:end="107:5">{<block_content pos:start="99:9" pos:end="105:41">

        <if_stmt pos:start="99:9" pos:end="103:9"><if pos:start="99:9" pos:end="103:9">if <condition pos:start="99:12" pos:end="99:36">(<expr pos:start="99:13" pos:end="99:35"><name pos:start="99:13" pos:end="99:35"><name pos:start="99:13" pos:end="99:18">parent</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:35">class_base_init</name></name></expr>)</condition> <block pos:start="99:38" pos:end="103:9">{<block_content pos:start="101:13" pos:end="101:63">

            <expr_stmt pos:start="101:13" pos:end="101:63"><expr pos:start="101:13" pos:end="101:62"><call pos:start="101:13" pos:end="101:62"><name pos:start="101:13" pos:end="101:35"><name pos:start="101:13" pos:end="101:18">parent</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:35">class_base_init</name></name><argument_list pos:start="101:36" pos:end="101:62">(<argument pos:start="101:37" pos:end="101:45"><expr pos:start="101:37" pos:end="101:45"><name pos:start="101:37" pos:end="101:45"><name pos:start="101:37" pos:end="101:38">ti</name><operator pos:start="101:39" pos:end="101:40">-&gt;</operator><name pos:start="101:41" pos:end="101:45">class</name></name></expr></argument>, <argument pos:start="101:48" pos:end="101:61"><expr pos:start="101:48" pos:end="101:61"><name pos:start="101:48" pos:end="101:61"><name pos:start="101:48" pos:end="101:49">ti</name><operator pos:start="101:50" pos:end="101:51">-&gt;</operator><name pos:start="101:52" pos:end="101:61">class_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:41"><expr pos:start="105:9" pos:end="105:40"><name pos:start="105:9" pos:end="105:14">parent</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <call pos:start="105:18" pos:end="105:40"><name pos:start="105:18" pos:end="105:32">type_get_parent</name><argument_list pos:start="105:33" pos:end="105:40">(<argument pos:start="105:34" pos:end="105:39"><expr pos:start="105:34" pos:end="105:39"><name pos:start="105:34" pos:end="105:39">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="111:5" pos:end="115:5"><if pos:start="111:5" pos:end="115:5">if <condition pos:start="111:8" pos:end="111:23">(<expr pos:start="111:9" pos:end="111:22"><name pos:start="111:9" pos:end="111:22"><name pos:start="111:9" pos:end="111:10">ti</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:22">class_init</name></name></expr>)</condition> <block pos:start="111:25" pos:end="115:5">{<block_content pos:start="113:9" pos:end="113:50">

        <expr_stmt pos:start="113:9" pos:end="113:50"><expr pos:start="113:9" pos:end="113:49"><call pos:start="113:9" pos:end="113:49"><name pos:start="113:9" pos:end="113:22"><name pos:start="113:9" pos:end="113:10">ti</name><operator pos:start="113:11" pos:end="113:12">-&gt;</operator><name pos:start="113:13" pos:end="113:22">class_init</name></name><argument_list pos:start="113:23" pos:end="113:49">(<argument pos:start="113:24" pos:end="113:32"><expr pos:start="113:24" pos:end="113:32"><name pos:start="113:24" pos:end="113:32"><name pos:start="113:24" pos:end="113:25">ti</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:32">class</name></name></expr></argument>, <argument pos:start="113:35" pos:end="113:48"><expr pos:start="113:35" pos:end="113:48"><name pos:start="113:35" pos:end="113:48"><name pos:start="113:35" pos:end="113:36">ti</name><operator pos:start="113:37" pos:end="113:38">-&gt;</operator><name pos:start="113:39" pos:end="113:48">class_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>





</block_content>}</block></function>
</unit>
