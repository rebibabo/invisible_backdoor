<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20333.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:55"><name pos:start="1:1" pos:end="1:32">ivshmem_client_handle_server_msg</name><argument_list pos:start="1:33" pos:end="1:55">(<argument pos:start="1:34" pos:end="1:54">IvshmemClient *client</argument>)</argument_list></macro>
<block pos:start="2:1" pos:end="30:13">{<block_content pos:start="3:5" pos:end="30:13">
    <decl_stmt pos:start="3:5" pos:end="3:28"><decl pos:start="3:5" pos:end="3:27"><type pos:start="3:5" pos:end="3:23"><name pos:start="3:5" pos:end="3:21">IvshmemClientPeer</name> <modifier pos:start="3:23" pos:end="3:23">*</modifier></type><name pos:start="3:24" pos:end="3:27">peer</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:17"><decl pos:start="4:5" pos:end="4:16"><type pos:start="4:5" pos:end="4:8"><name pos:start="4:5" pos:end="4:8">long</name></type> <name pos:start="4:10" pos:end="4:16">peer_id</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:15">fd</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:61"><expr pos:start="6:5" pos:end="6:60"><name pos:start="6:5" pos:end="6:7">ret</name> <operator pos:start="6:9" pos:end="6:9">=</operator> <call pos:start="6:11" pos:end="6:60"><name pos:start="6:11" pos:end="6:37">ivshmem_client_read_one_msg</name><argument_list pos:start="6:38" pos:end="6:60">(<argument pos:start="6:39" pos:end="6:44"><expr pos:start="6:39" pos:end="6:44"><name pos:start="6:39" pos:end="6:44">client</name></expr></argument>, <argument pos:start="6:47" pos:end="6:54"><expr pos:start="6:47" pos:end="6:54"><operator pos:start="6:47" pos:end="6:47">&amp;</operator><name pos:start="6:48" pos:end="6:54">peer_id</name></expr></argument>, <argument pos:start="6:57" pos:end="6:59"><expr pos:start="6:57" pos:end="6:59"><operator pos:start="6:57" pos:end="6:57">&amp;</operator><name pos:start="6:58" pos:end="6:59">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="7:5" pos:end="30:13"><if pos:start="7:5" pos:end="30:13">if <condition pos:start="7:8" pos:end="7:16">(<expr pos:start="7:9" pos:end="7:15"><name pos:start="7:9" pos:end="7:11">ret</name> <operator pos:start="7:13" pos:end="7:13">&lt;</operator> <literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr>)</condition> <block pos:start="7:18" pos:end="30:13">{<block_content pos:start="9:5" pos:end="30:13">
    <comment type="block" pos:start="8:5" pos:end="8:47">/* can return a peer or the local client */</comment>
    <expr_stmt pos:start="9:5" pos:end="9:55"><expr pos:start="9:5" pos:end="9:54"><name pos:start="9:5" pos:end="9:8">peer</name> <operator pos:start="9:10" pos:end="9:10">=</operator> <call pos:start="9:12" pos:end="9:54"><name pos:start="9:12" pos:end="9:37">ivshmem_client_search_peer</name><argument_list pos:start="9:38" pos:end="9:54">(<argument pos:start="9:39" pos:end="9:44"><expr pos:start="9:39" pos:end="9:44"><name pos:start="9:39" pos:end="9:44">client</name></expr></argument>, <argument pos:start="9:47" pos:end="9:53"><expr pos:start="9:47" pos:end="9:53"><name pos:start="9:47" pos:end="9:53">peer_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="10:5" pos:end="10:21">/* delete peer */</comment>
    <if_stmt pos:start="11:5" pos:end="30:13"><if pos:start="11:5" pos:end="30:13">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:10">fd</name> <operator pos:start="11:12" pos:end="11:13">==</operator> <operator pos:start="11:15" pos:end="11:15">-</operator><literal type="number" pos:start="11:16" pos:end="11:16">1</literal></expr>)</condition> <block pos:start="11:19" pos:end="30:13">{<block_content pos:start="12:9" pos:end="30:13">
        <if_stmt pos:start="12:9" pos:end="30:13"><if pos:start="12:9" pos:end="30:13">if <condition pos:start="12:12" pos:end="12:51">(<expr pos:start="12:13" pos:end="12:50"><name pos:start="12:13" pos:end="12:16">peer</name> <operator pos:start="12:18" pos:end="12:19">==</operator> <name pos:start="12:21" pos:end="12:24">NULL</name> <operator pos:start="12:26" pos:end="12:27">||</operator> <name pos:start="12:29" pos:end="12:32">peer</name> <operator pos:start="12:34" pos:end="12:35">==</operator> <operator pos:start="12:37" pos:end="12:37">&amp;</operator><name pos:start="12:38" pos:end="12:50"><name pos:start="12:38" pos:end="12:43">client</name><operator pos:start="12:44" pos:end="12:45">-&gt;</operator><name pos:start="12:46" pos:end="12:50">local</name></name></expr>)</condition> <block pos:start="12:53" pos:end="30:13">{<block_content pos:start="13:13" pos:end="30:13">
            <expr_stmt pos:start="13:13" pos:end="14:56"><expr pos:start="13:13" pos:end="14:55"><call pos:start="13:13" pos:end="14:55"><name pos:start="13:13" pos:end="13:32">IVSHMEM_CLIENT_DEBUG</name><argument_list pos:start="13:33" pos:end="14:55">(<argument pos:start="13:34" pos:end="13:39"><expr pos:start="13:34" pos:end="13:39"><name pos:start="13:34" pos:end="13:39">client</name></expr></argument>, <argument pos:start="13:42" pos:end="14:45"><expr pos:start="13:42" pos:end="14:45"><literal type="string" pos:start="13:42" pos:end="13:70">"receive delete for invalid "</literal>
                                 <literal type="string" pos:start="14:34" pos:end="14:45">"peer %ld\n"</literal></expr></argument>, <argument pos:start="14:48" pos:end="14:54"><expr pos:start="14:48" pos:end="14:54"><name pos:start="14:48" pos:end="14:54">peer_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:72"><expr pos:start="15:9" pos:end="15:71"><call pos:start="15:9" pos:end="15:71"><name pos:start="15:9" pos:end="15:28">IVSHMEM_CLIENT_DEBUG</name><argument_list pos:start="15:29" pos:end="15:71">(<argument pos:start="15:30" pos:end="15:35"><expr pos:start="15:30" pos:end="15:35"><name pos:start="15:30" pos:end="15:35">client</name></expr></argument>, <argument pos:start="15:38" pos:end="15:61"><expr pos:start="15:38" pos:end="15:61"><literal type="string" pos:start="15:38" pos:end="15:61">"delete peer id = %ld\n"</literal></expr></argument>, <argument pos:start="15:64" pos:end="15:70"><expr pos:start="15:64" pos:end="15:70"><name pos:start="15:64" pos:end="15:70">peer_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:47"><expr pos:start="16:9" pos:end="16:46"><call pos:start="16:9" pos:end="16:46"><name pos:start="16:9" pos:end="16:32">ivshmem_client_free_peer</name><argument_list pos:start="16:33" pos:end="16:46">(<argument pos:start="16:34" pos:end="16:39"><expr pos:start="16:34" pos:end="16:39"><name pos:start="16:34" pos:end="16:39">client</name></expr></argument>, <argument pos:start="16:42" pos:end="16:45"><expr pos:start="16:42" pos:end="16:45"><name pos:start="16:42" pos:end="16:45">peer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return>
    <comment type="block" pos:start="18:5" pos:end="18:18">/* new peer */</comment>
    <if_stmt pos:start="19:5" pos:end="30:13"><if pos:start="19:5" pos:end="30:13">if <condition pos:start="19:8" pos:end="19:21">(<expr pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:12">peer</name> <operator pos:start="19:14" pos:end="19:15">==</operator> <name pos:start="19:17" pos:end="19:20">NULL</name></expr>)</condition> <block pos:start="19:23" pos:end="30:13">{<block_content pos:start="20:9" pos:end="30:13">
        <expr_stmt pos:start="20:9" pos:end="20:40"><expr pos:start="20:9" pos:end="20:39"><name pos:start="20:9" pos:end="20:12">peer</name> <operator pos:start="20:14" pos:end="20:14">=</operator> <call pos:start="20:16" pos:end="20:39"><name pos:start="20:16" pos:end="20:24">g_malloc0</name><argument_list pos:start="20:25" pos:end="20:39">(<argument pos:start="20:26" pos:end="20:38"><expr pos:start="20:26" pos:end="20:38"><sizeof pos:start="20:26" pos:end="20:38">sizeof<argument_list pos:start="20:32" pos:end="20:38">(<argument pos:start="20:33" pos:end="20:37"><expr pos:start="20:33" pos:end="20:37"><operator pos:start="20:33" pos:end="20:33">*</operator><name pos:start="20:34" pos:end="20:37">peer</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:27"><expr pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:12">peer</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:16">id</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <name pos:start="21:20" pos:end="21:26">peer_id</name></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="22:32"><expr pos:start="22:9" pos:end="22:31"><name pos:start="22:9" pos:end="22:27"><name pos:start="22:9" pos:end="22:12">peer</name><operator pos:start="22:13" pos:end="22:14">-&gt;</operator><name pos:start="22:15" pos:end="22:27">vectors_count</name></name> <operator pos:start="22:29" pos:end="22:29">=</operator> <literal type="number" pos:start="22:31" pos:end="22:31">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="23:9" pos:end="23:59"><expr pos:start="23:9" pos:end="23:58"><call pos:start="23:9" pos:end="23:58"><name pos:start="23:9" pos:end="23:26">QTAILQ_INSERT_TAIL</name><argument_list pos:start="23:27" pos:end="23:58">(<argument pos:start="23:28" pos:end="23:45"><expr pos:start="23:28" pos:end="23:45"><operator pos:start="23:28" pos:end="23:28">&amp;</operator><name pos:start="23:29" pos:end="23:45"><name pos:start="23:29" pos:end="23:34">client</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:45">peer_list</name></name></expr></argument>, <argument pos:start="23:48" pos:end="23:51"><expr pos:start="23:48" pos:end="23:51"><name pos:start="23:48" pos:end="23:51">peer</name></expr></argument>, <argument pos:start="23:54" pos:end="23:57"><expr pos:start="23:54" pos:end="23:57"><name pos:start="23:54" pos:end="23:57">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:69"><expr pos:start="24:9" pos:end="24:68"><call pos:start="24:9" pos:end="24:68"><name pos:start="24:9" pos:end="24:28">IVSHMEM_CLIENT_DEBUG</name><argument_list pos:start="24:29" pos:end="24:68">(<argument pos:start="24:30" pos:end="24:35"><expr pos:start="24:30" pos:end="24:35"><name pos:start="24:30" pos:end="24:35">client</name></expr></argument>, <argument pos:start="24:38" pos:end="24:58"><expr pos:start="24:38" pos:end="24:58"><literal type="string" pos:start="24:38" pos:end="24:58">"new peer id = %ld\n"</literal></expr></argument>, <argument pos:start="24:61" pos:end="24:67"><expr pos:start="24:61" pos:end="24:67"><name pos:start="24:61" pos:end="24:67">peer_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="25:5" pos:end="25:20">/* new vector */</comment>
    <expr_stmt pos:start="26:5" pos:end="27:60"><expr pos:start="26:5" pos:end="27:59"><call pos:start="26:5" pos:end="27:59"><name pos:start="26:5" pos:end="26:24">IVSHMEM_CLIENT_DEBUG</name><argument_list pos:start="26:25" pos:end="27:59">(<argument pos:start="26:26" pos:end="26:31"><expr pos:start="26:26" pos:end="26:31"><name pos:start="26:26" pos:end="26:31">client</name></expr></argument>, <argument pos:start="26:34" pos:end="26:76"><expr pos:start="26:34" pos:end="26:76"><literal type="string" pos:start="26:34" pos:end="26:76">"  new vector %d (fd=%d) for peer id %ld\n"</literal></expr></argument>,
                         <argument pos:start="27:26" pos:end="27:44"><expr pos:start="27:26" pos:end="27:44"><name pos:start="27:26" pos:end="27:44"><name pos:start="27:26" pos:end="27:29">peer</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:44">vectors_count</name></name></expr></argument>, <argument pos:start="27:47" pos:end="27:48"><expr pos:start="27:47" pos:end="27:48"><name pos:start="27:47" pos:end="27:48">fd</name></expr></argument>, <argument pos:start="27:51" pos:end="27:58"><expr pos:start="27:51" pos:end="27:58"><name pos:start="27:51" pos:end="27:58"><name pos:start="27:51" pos:end="27:54">peer</name><operator pos:start="27:55" pos:end="27:56">-&gt;</operator><name pos:start="27:57" pos:end="27:58">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:44"><expr pos:start="28:5" pos:end="28:43"><name pos:start="28:5" pos:end="28:38"><name pos:start="28:5" pos:end="28:8">peer</name><operator pos:start="28:9" pos:end="28:10">-&gt;</operator><name pos:start="28:11" pos:end="28:17">vectors</name><index pos:start="28:18" pos:end="28:38">[<expr pos:start="28:19" pos:end="28:37"><name pos:start="28:19" pos:end="28:37"><name pos:start="28:19" pos:end="28:22">peer</name><operator pos:start="28:23" pos:end="28:24">-&gt;</operator><name pos:start="28:25" pos:end="28:37">vectors_count</name></name></expr>]</index></name> <operator pos:start="28:40" pos:end="28:40">=</operator> <name pos:start="28:42" pos:end="28:43">fd</name></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:8">peer</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:23">vectors_count</name></name><operator pos:start="29:24" pos:end="29:25">++</operator></expr>;</expr_stmt>
    <return pos:start="30:5" pos:end="30:13">return <expr pos:start="30:12" pos:end="30:12"><literal type="number" pos:start="30:12" pos:end="30:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></unit>
