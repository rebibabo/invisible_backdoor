<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7692.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">write_memory</name><parameter_list pos:start="1:24" pos:end="3:37">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:33">DumpState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:53"><decl pos:start="1:39" pos:end="1:53"><type pos:start="1:39" pos:end="1:53"><name pos:start="1:39" pos:end="1:46">RAMBlock</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">block</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:71"><decl pos:start="1:56" pos:end="1:71"><type pos:start="1:56" pos:end="1:71"><name pos:start="1:56" pos:end="1:65">ram_addr_t</name></type> <name pos:start="1:67" pos:end="1:71">start</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:36"><decl pos:start="3:25" pos:end="3:36"><type pos:start="3:25" pos:end="3:36"><name pos:start="3:25" pos:end="3:31">int64_t</name></type> <name pos:start="3:33" pos:end="3:36">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:13">

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:13">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="25:5">for <control pos:start="13:9" pos:end="13:49">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:44"><expr pos:start="13:17" pos:end="13:43"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <name pos:start="13:21" pos:end="13:24">size</name> <operator pos:start="13:26" pos:end="13:26">/</operator> <name pos:start="13:28" pos:end="13:43">TARGET_PAGE_SIZE</name></expr>;</condition> <incr pos:start="13:46" pos:end="13:48"><expr pos:start="13:46" pos:end="13:48"><name pos:start="13:46" pos:end="13:46">i</name><operator pos:start="13:47" pos:end="13:48">++</operator></expr></incr>)</control> <block pos:start="13:51" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:9">

        <expr_stmt pos:start="15:9" pos:end="17:43"><expr pos:start="15:9" pos:end="17:42"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="17:42"><name pos:start="15:15" pos:end="15:24">write_data</name><argument_list pos:start="15:25" pos:end="17:42">(<argument pos:start="15:26" pos:end="15:26"><expr pos:start="15:26" pos:end="15:26"><name pos:start="15:26" pos:end="15:26">s</name></expr></argument>, <argument pos:start="15:29" pos:end="15:70"><expr pos:start="15:29" pos:end="15:70"><name pos:start="15:29" pos:end="15:39"><name pos:start="15:29" pos:end="15:33">block</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:39">host</name></name> <operator pos:start="15:41" pos:end="15:41">+</operator> <name pos:start="15:43" pos:end="15:47">start</name> <operator pos:start="15:49" pos:end="15:49">+</operator> <name pos:start="15:51" pos:end="15:51">i</name> <operator pos:start="15:53" pos:end="15:53">*</operator> <name pos:start="15:55" pos:end="15:70">TARGET_PAGE_SIZE</name></expr></argument>,

                         <argument pos:start="17:26" pos:end="17:41"><expr pos:start="17:26" pos:end="17:41"><name pos:start="17:26" pos:end="17:41">TARGET_PAGE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:20">(<expr pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:15">ret</name> <operator pos:start="19:17" pos:end="19:17">&lt;</operator> <literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr>)</condition> <block pos:start="19:22" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:23">

            <return pos:start="21:13" pos:end="21:23">return <expr pos:start="21:20" pos:end="21:22"><name pos:start="21:20" pos:end="21:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="29:5" pos:end="41:5"><if pos:start="29:5" pos:end="41:5">if <condition pos:start="29:8" pos:end="29:39">(<expr pos:start="29:9" pos:end="29:38"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:13">size</name> <operator pos:start="29:15" pos:end="29:15">%</operator> <name pos:start="29:17" pos:end="29:32">TARGET_PAGE_SIZE</name><operator pos:start="29:33" pos:end="29:33">)</operator> <operator pos:start="29:35" pos:end="29:36">!=</operator> <literal type="number" pos:start="29:38" pos:end="29:38">0</literal></expr>)</condition> <block pos:start="29:41" pos:end="41:5">{<block_content pos:start="31:9" pos:end="39:9">

        <expr_stmt pos:start="31:9" pos:end="33:50"><expr pos:start="31:9" pos:end="33:49"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="33:49"><name pos:start="31:15" pos:end="31:24">write_data</name><argument_list pos:start="31:25" pos:end="33:49">(<argument pos:start="31:26" pos:end="31:26"><expr pos:start="31:26" pos:end="31:26"><name pos:start="31:26" pos:end="31:26">s</name></expr></argument>, <argument pos:start="31:29" pos:end="31:70"><expr pos:start="31:29" pos:end="31:70"><name pos:start="31:29" pos:end="31:39"><name pos:start="31:29" pos:end="31:33">block</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:39">host</name></name> <operator pos:start="31:41" pos:end="31:41">+</operator> <name pos:start="31:43" pos:end="31:47">start</name> <operator pos:start="31:49" pos:end="31:49">+</operator> <name pos:start="31:51" pos:end="31:51">i</name> <operator pos:start="31:53" pos:end="31:53">*</operator> <name pos:start="31:55" pos:end="31:70">TARGET_PAGE_SIZE</name></expr></argument>,

                         <argument pos:start="33:26" pos:end="33:48"><expr pos:start="33:26" pos:end="33:48"><name pos:start="33:26" pos:end="33:29">size</name> <operator pos:start="33:31" pos:end="33:31">%</operator> <name pos:start="33:33" pos:end="33:48">TARGET_PAGE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:20">(<expr pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:17">&lt;</operator> <literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr>)</condition> <block pos:start="35:22" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:23">

            <return pos:start="37:13" pos:end="37:23">return <expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
