<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11382.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:39">trace_event_set_vcpu_state_dynamic</name><parameter_list pos:start="1:40" pos:end="3:67">(<parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:48">CPUState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">vcpu</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:50">TraceEvent</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:54">ev</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:66"><decl pos:start="3:57" pos:end="3:66"><type pos:start="3:57" pos:end="3:66"><name pos:start="3:57" pos:end="3:60">bool</name></type> <name pos:start="3:62" pos:end="3:66">state</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:5">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:20">TraceEventVCPUID</name></type> <name pos:start="7:22" pos:end="7:28">vcpu_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:18">state_pre</name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:45"><expr pos:start="11:5" pos:end="11:44"><call pos:start="11:5" pos:end="11:44"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:44">(<argument pos:start="11:12" pos:end="11:43"><expr pos:start="11:12" pos:end="11:43"><call pos:start="11:12" pos:end="11:43"><name pos:start="11:12" pos:end="11:39">trace_event_get_state_static</name><argument_list pos:start="11:40" pos:end="11:43">(<argument pos:start="11:41" pos:end="11:42"><expr pos:start="11:41" pos:end="11:42"><name pos:start="11:41" pos:end="11:42">ev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:36"><expr pos:start="13:5" pos:end="13:35"><call pos:start="13:5" pos:end="13:35"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:35">(<argument pos:start="13:12" pos:end="13:34"><expr pos:start="13:12" pos:end="13:34"><call pos:start="13:12" pos:end="13:34"><name pos:start="13:12" pos:end="13:30">trace_event_is_vcpu</name><argument_list pos:start="13:31" pos:end="13:34">(<argument pos:start="13:32" pos:end="13:33"><expr pos:start="13:32" pos:end="13:33"><name pos:start="13:32" pos:end="13:33">ev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:42"><expr pos:start="15:5" pos:end="15:41"><name pos:start="15:5" pos:end="15:11">vcpu_id</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:41"><name pos:start="15:15" pos:end="15:37">trace_event_get_vcpu_id</name><argument_list pos:start="15:38" pos:end="15:41">(<argument pos:start="15:39" pos:end="15:40"><expr pos:start="15:39" pos:end="15:40"><name pos:start="15:39" pos:end="15:40">ev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:13">state_pre</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:53"><name pos:start="17:17" pos:end="17:24">test_bit</name><argument_list pos:start="17:25" pos:end="17:53">(<argument pos:start="17:26" pos:end="17:32"><expr pos:start="17:26" pos:end="17:32"><name pos:start="17:26" pos:end="17:32">vcpu_id</name></expr></argument>, <argument pos:start="17:35" pos:end="17:52"><expr pos:start="17:35" pos:end="17:52"><name pos:start="17:35" pos:end="17:52"><name pos:start="17:35" pos:end="17:38">vcpu</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:52">trace_dstate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="39:5"><if pos:start="19:5" pos:end="39:5">if <condition pos:start="19:8" pos:end="19:27">(<expr pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:17">state_pre</name> <operator pos:start="19:19" pos:end="19:20">!=</operator> <name pos:start="19:22" pos:end="19:26">state</name></expr>)</condition> <block pos:start="19:29" pos:end="39:5">{<block_content pos:start="21:9" pos:end="37:9">

        <if_stmt pos:start="21:9" pos:end="37:9"><if pos:start="21:9" pos:end="29:9">if <condition pos:start="21:12" pos:end="21:18">(<expr pos:start="21:13" pos:end="21:17"><name pos:start="21:13" pos:end="21:17">state</name></expr>)</condition> <block pos:start="21:20" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:28">

            <expr_stmt pos:start="23:13" pos:end="23:41"><expr pos:start="23:13" pos:end="23:40"><name pos:start="23:13" pos:end="23:38">trace_events_enabled_count</name><operator pos:start="23:39" pos:end="23:40">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:49"><expr pos:start="25:13" pos:end="25:48"><call pos:start="25:13" pos:end="25:48"><name pos:start="25:13" pos:end="25:19">set_bit</name><argument_list pos:start="25:20" pos:end="25:48">(<argument pos:start="25:21" pos:end="25:27"><expr pos:start="25:21" pos:end="25:27"><name pos:start="25:21" pos:end="25:27">vcpu_id</name></expr></argument>, <argument pos:start="25:30" pos:end="25:47"><expr pos:start="25:30" pos:end="25:47"><name pos:start="25:30" pos:end="25:47"><name pos:start="25:30" pos:end="25:33">vcpu</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:47">trace_dstate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:28"><expr pos:start="27:13" pos:end="27:27"><operator pos:start="27:13" pos:end="27:13">(</operator><operator pos:start="27:14" pos:end="27:14">*</operator><name pos:start="27:15" pos:end="27:24"><name pos:start="27:15" pos:end="27:16">ev</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:24">dstate</name></name><operator pos:start="27:25" pos:end="27:25">)</operator><operator pos:start="27:26" pos:end="27:27">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="29:11" pos:end="37:9">else <block pos:start="29:16" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:28">

            <expr_stmt pos:start="31:13" pos:end="31:41"><expr pos:start="31:13" pos:end="31:40"><name pos:start="31:13" pos:end="31:38">trace_events_enabled_count</name><operator pos:start="31:39" pos:end="31:40">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:51"><expr pos:start="33:13" pos:end="33:50"><call pos:start="33:13" pos:end="33:50"><name pos:start="33:13" pos:end="33:21">clear_bit</name><argument_list pos:start="33:22" pos:end="33:50">(<argument pos:start="33:23" pos:end="33:29"><expr pos:start="33:23" pos:end="33:29"><name pos:start="33:23" pos:end="33:29">vcpu_id</name></expr></argument>, <argument pos:start="33:32" pos:end="33:49"><expr pos:start="33:32" pos:end="33:49"><name pos:start="33:32" pos:end="33:49"><name pos:start="33:32" pos:end="33:35">vcpu</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:49">trace_dstate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:28"><expr pos:start="35:13" pos:end="35:27"><operator pos:start="35:13" pos:end="35:13">(</operator><operator pos:start="35:14" pos:end="35:14">*</operator><name pos:start="35:15" pos:end="35:24"><name pos:start="35:15" pos:end="35:16">ev</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:24">dstate</name></name><operator pos:start="35:25" pos:end="35:25">)</operator><operator pos:start="35:26" pos:end="35:27">--</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
