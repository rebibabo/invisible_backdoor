<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21379.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">curl_open</name><parameter_list pos:start="1:21" pos:end="2:34">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:41"><name pos:start="1:22" pos:end="1:37">BlockDriverState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">bs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:48">QDict</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:57">options</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:68"><decl pos:start="1:60" pos:end="1:68"><type pos:start="1:60" pos:end="1:68"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:68">flags</name></decl></parameter>,
                     <parameter pos:start="2:22" pos:end="2:33"><decl pos:start="2:22" pos:end="2:33"><type pos:start="2:22" pos:end="2:33"><name pos:start="2:22" pos:end="2:26">Error</name> <modifier pos:start="2:28" pos:end="2:28">*</modifier><modifier pos:start="2:29" pos:end="2:29">*</modifier></type><name pos:start="2:30" pos:end="2:33">errp</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="4:5" pos:end="86:19">
    <decl_stmt pos:start="4:5" pos:end="4:34"><decl pos:start="4:5" pos:end="4:33"><type pos:start="4:5" pos:end="4:19"><name pos:start="4:5" pos:end="4:17">BDRVCURLState</name> <modifier pos:start="4:19" pos:end="4:19">*</modifier></type><name pos:start="4:20" pos:end="4:20">s</name> <init pos:start="4:22" pos:end="4:33">= <expr pos:start="4:24" pos:end="4:33"><name pos:start="4:24" pos:end="4:33"><name pos:start="4:24" pos:end="4:25">bs</name><operator pos:start="4:26" pos:end="4:27">-&gt;</operator><name pos:start="4:28" pos:end="4:33">opaque</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">CURLState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">state</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:19"><decl pos:start="6:5" pos:end="6:18"><type pos:start="6:5" pos:end="6:14"><name pos:start="6:5" pos:end="6:12">QemuOpts</name> <modifier pos:start="6:14" pos:end="6:14">*</modifier></type><name pos:start="6:15" pos:end="6:18">opts</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:20">local_err</name> <init pos:start="7:22" pos:end="7:27">= <expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:21"><decl pos:start="8:5" pos:end="8:20"><type pos:start="8:5" pos:end="8:16"><specifier pos:start="8:5" pos:end="8:9">const</specifier> <name pos:start="8:11" pos:end="8:14">char</name> <modifier pos:start="8:16" pos:end="8:16">*</modifier></type><name pos:start="8:17" pos:end="8:20">file</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">double</name></type> <name pos:start="9:12" pos:end="9:12">d</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:26"><decl pos:start="10:5" pos:end="10:25"><type pos:start="10:5" pos:end="10:14"><specifier pos:start="10:5" pos:end="10:10">static</specifier> <name pos:start="10:12" pos:end="10:14">int</name></type> <name pos:start="10:16" pos:end="10:21">inited</name> <init pos:start="10:23" pos:end="10:25">= <expr pos:start="10:25" pos:end="10:25"><literal type="number" pos:start="10:25" pos:end="10:25">0</literal></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="11:5" pos:end="14:5"><if pos:start="11:5" pos:end="14:5">if <condition pos:start="11:8" pos:end="11:28">(<expr pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:13">flags</name> <operator pos:start="11:15" pos:end="11:15">&amp;</operator> <name pos:start="11:17" pos:end="11:27">BDRV_O_RDWR</name></expr>)</condition> <block pos:start="11:30" pos:end="14:5">{<block_content pos:start="12:9" pos:end="13:22">
        <expr_stmt pos:start="12:9" pos:end="12:70"><expr pos:start="12:9" pos:end="12:69"><call pos:start="12:9" pos:end="12:69"><name pos:start="12:9" pos:end="12:18">error_setg</name><argument_list pos:start="12:19" pos:end="12:69">(<argument pos:start="12:20" pos:end="12:23"><expr pos:start="12:20" pos:end="12:23"><name pos:start="12:20" pos:end="12:23">errp</name></expr></argument>, <argument pos:start="12:26" pos:end="12:68"><expr pos:start="12:26" pos:end="12:68"><literal type="string" pos:start="12:26" pos:end="12:68">"curl block device does not support writes"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="13:9" pos:end="13:22">return <expr pos:start="13:16" pos:end="13:21"><operator pos:start="13:16" pos:end="13:16">-</operator><name pos:start="13:17" pos:end="13:21">EROFS</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:66"><expr pos:start="15:5" pos:end="15:65"><name pos:start="15:5" pos:end="15:8">opts</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:65"><name pos:start="15:12" pos:end="15:27">qemu_opts_create</name><argument_list pos:start="15:28" pos:end="15:65">(<argument pos:start="15:29" pos:end="15:41"><expr pos:start="15:29" pos:end="15:41"><operator pos:start="15:29" pos:end="15:29">&amp;</operator><name pos:start="15:30" pos:end="15:41">runtime_opts</name></expr></argument>, <argument pos:start="15:44" pos:end="15:47"><expr pos:start="15:44" pos:end="15:47"><name pos:start="15:44" pos:end="15:47">NULL</name></expr></argument>, <argument pos:start="15:50" pos:end="15:50"><expr pos:start="15:50" pos:end="15:50"><literal type="number" pos:start="15:50" pos:end="15:50">0</literal></expr></argument>, <argument pos:start="15:53" pos:end="15:64"><expr pos:start="15:53" pos:end="15:64"><operator pos:start="15:53" pos:end="15:53">&amp;</operator><name pos:start="15:54" pos:end="15:64">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:54"><expr pos:start="16:5" pos:end="16:53"><call pos:start="16:5" pos:end="16:53"><name pos:start="16:5" pos:end="16:26">qemu_opts_absorb_qdict</name><argument_list pos:start="16:27" pos:end="16:53">(<argument pos:start="16:28" pos:end="16:31"><expr pos:start="16:28" pos:end="16:31"><name pos:start="16:28" pos:end="16:31">opts</name></expr></argument>, <argument pos:start="16:34" pos:end="16:40"><expr pos:start="16:34" pos:end="16:40"><name pos:start="16:34" pos:end="16:40">options</name></expr></argument>, <argument pos:start="16:43" pos:end="16:52"><expr pos:start="16:43" pos:end="16:52"><operator pos:start="16:43" pos:end="16:43">&amp;</operator><name pos:start="16:44" pos:end="16:52">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="17:5" pos:end="20:5"><if pos:start="17:5" pos:end="20:5">if <condition pos:start="17:8" pos:end="17:18">(<expr pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:17">local_err</name></expr>)</condition> <block pos:start="17:20" pos:end="20:5">{<block_content pos:start="18:9" pos:end="19:25">
        <expr_stmt pos:start="18:9" pos:end="18:41"><expr pos:start="18:9" pos:end="18:40"><call pos:start="18:9" pos:end="18:40"><name pos:start="18:9" pos:end="18:23">error_propagate</name><argument_list pos:start="18:24" pos:end="18:40">(<argument pos:start="18:25" pos:end="18:28"><expr pos:start="18:25" pos:end="18:28"><name pos:start="18:25" pos:end="18:28">errp</name></expr></argument>, <argument pos:start="18:31" pos:end="18:39"><expr pos:start="18:31" pos:end="18:39"><name pos:start="18:31" pos:end="18:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <goto pos:start="19:9" pos:end="19:25">goto <name pos:start="19:14" pos:end="19:24">out_noclean</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="21:5" pos:end="22:62"><expr pos:start="21:5" pos:end="22:61"><name pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:21">readahead_size</name></name> <operator pos:start="21:23" pos:end="21:23">=</operator> <call pos:start="21:25" pos:end="22:61"><name pos:start="21:25" pos:end="21:41">qemu_opt_get_size</name><argument_list pos:start="21:42" pos:end="22:61">(<argument pos:start="21:43" pos:end="21:46"><expr pos:start="21:43" pos:end="21:46"><name pos:start="21:43" pos:end="21:46">opts</name></expr></argument>, <argument pos:start="21:49" pos:end="21:72"><expr pos:start="21:49" pos:end="21:72"><name pos:start="21:49" pos:end="21:72">CURL_BLOCK_OPT_READAHEAD</name></expr></argument>,
                                          <argument pos:start="22:43" pos:end="22:60"><expr pos:start="22:43" pos:end="22:60"><name pos:start="22:43" pos:end="22:60">READ_AHEAD_DEFAULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:41">(<expr pos:start="23:9" pos:end="23:40"><operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:26"><name pos:start="23:10" pos:end="23:10">s</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:26">readahead_size</name></name> <operator pos:start="23:28" pos:end="23:28">&amp;</operator> <literal type="number" pos:start="23:30" pos:end="23:34">0x1ff</literal><operator pos:start="23:35" pos:end="23:35">)</operator> <operator pos:start="23:37" pos:end="23:38">!=</operator> <literal type="number" pos:start="23:40" pos:end="23:40">0</literal></expr>)</condition> <block pos:start="23:43" pos:end="27:5">{<block_content pos:start="24:9" pos:end="26:25">
        <expr_stmt pos:start="24:9" pos:end="25:38"><expr pos:start="24:9" pos:end="25:37"><call pos:start="24:9" pos:end="25:37"><name pos:start="24:9" pos:end="24:18">error_setg</name><argument_list pos:start="24:19" pos:end="25:37">(<argument pos:start="24:20" pos:end="24:23"><expr pos:start="24:20" pos:end="24:23"><name pos:start="24:20" pos:end="24:23">errp</name></expr></argument>, <argument pos:start="24:26" pos:end="24:75"><expr pos:start="24:26" pos:end="24:75"><literal type="string" pos:start="24:26" pos:end="24:75">"HTTP_READAHEAD_SIZE %zd is not a multiple of 512"</literal></expr></argument>,
                   <argument pos:start="25:20" pos:end="25:36"><expr pos:start="25:20" pos:end="25:36"><name pos:start="25:20" pos:end="25:36"><name pos:start="25:20" pos:end="25:20">s</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:36">readahead_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <goto pos:start="26:9" pos:end="26:25">goto <name pos:start="26:14" pos:end="26:24">out_noclean</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:50"><expr pos:start="28:5" pos:end="28:49"><name pos:start="28:5" pos:end="28:8">file</name> <operator pos:start="28:10" pos:end="28:10">=</operator> <call pos:start="28:12" pos:end="28:49"><name pos:start="28:12" pos:end="28:23">qemu_opt_get</name><argument_list pos:start="28:24" pos:end="28:49">(<argument pos:start="28:25" pos:end="28:28"><expr pos:start="28:25" pos:end="28:28"><name pos:start="28:25" pos:end="28:28">opts</name></expr></argument>, <argument pos:start="28:31" pos:end="28:48"><expr pos:start="28:31" pos:end="28:48"><name pos:start="28:31" pos:end="28:48">CURL_BLOCK_OPT_URL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="29:5" pos:end="32:5"><if pos:start="29:5" pos:end="32:5">if <condition pos:start="29:8" pos:end="29:21">(<expr pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:12">file</name> <operator pos:start="29:14" pos:end="29:15">==</operator> <name pos:start="29:17" pos:end="29:20">NULL</name></expr>)</condition> <block pos:start="29:23" pos:end="32:5">{<block_content pos:start="30:9" pos:end="31:25">
        <expr_stmt pos:start="30:9" pos:end="30:71"><expr pos:start="30:9" pos:end="30:70"><call pos:start="30:9" pos:end="30:70"><name pos:start="30:9" pos:end="30:18">error_setg</name><argument_list pos:start="30:19" pos:end="30:70">(<argument pos:start="30:20" pos:end="30:23"><expr pos:start="30:20" pos:end="30:23"><name pos:start="30:20" pos:end="30:23">errp</name></expr></argument>, <argument pos:start="30:26" pos:end="30:69"><expr pos:start="30:26" pos:end="30:69"><literal type="string" pos:start="30:26" pos:end="30:69">"curl block driver requires an 'url' option"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <goto pos:start="31:9" pos:end="31:25">goto <name pos:start="31:14" pos:end="31:24">out_noclean</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="33:5" pos:end="36:5"><if pos:start="33:5" pos:end="36:5">if <condition pos:start="33:8" pos:end="33:16">(<expr pos:start="33:9" pos:end="33:15"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:15">inited</name></expr>)</condition> <block pos:start="33:18" pos:end="36:5">{<block_content pos:start="34:9" pos:end="35:19">
        <expr_stmt pos:start="34:9" pos:end="34:42"><expr pos:start="34:9" pos:end="34:41"><call pos:start="34:9" pos:end="34:41"><name pos:start="34:9" pos:end="34:24">curl_global_init</name><argument_list pos:start="34:25" pos:end="34:41">(<argument pos:start="34:26" pos:end="34:40"><expr pos:start="34:26" pos:end="34:40"><name pos:start="34:26" pos:end="34:40">CURL_GLOBAL_ALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="35:9" pos:end="35:19"><expr pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:14">inited</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="37:5" pos:end="37:40"><expr pos:start="37:5" pos:end="37:39"><call pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:11">DPRINTF</name><argument_list pos:start="37:12" pos:end="37:39">(<argument pos:start="37:13" pos:end="37:32"><expr pos:start="37:13" pos:end="37:32"><literal type="string" pos:start="37:13" pos:end="37:32">"CURL: Opening %s\n"</literal></expr></argument>, <argument pos:start="37:35" pos:end="37:38"><expr pos:start="37:35" pos:end="37:38"><name pos:start="37:35" pos:end="37:38">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="38:5" pos:end="38:28"><expr pos:start="38:5" pos:end="38:27"><name pos:start="38:5" pos:end="38:10"><name pos:start="38:5" pos:end="38:5">s</name><operator pos:start="38:6" pos:end="38:7">-&gt;</operator><name pos:start="38:8" pos:end="38:10">url</name></name> <operator pos:start="38:12" pos:end="38:12">=</operator> <call pos:start="38:14" pos:end="38:27"><name pos:start="38:14" pos:end="38:21">g_strdup</name><argument_list pos:start="38:22" pos:end="38:27">(<argument pos:start="38:23" pos:end="38:26"><expr pos:start="38:23" pos:end="38:26"><name pos:start="38:23" pos:end="38:26">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:31"><expr pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:9">state</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <call pos:start="39:13" pos:end="39:30"><name pos:start="39:13" pos:end="39:27">curl_init_state</name><argument_list pos:start="39:28" pos:end="39:30">(<argument pos:start="39:29" pos:end="39:29"><expr pos:start="39:29" pos:end="39:29"><name pos:start="39:29" pos:end="39:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="40:5" pos:end="41:25"><if pos:start="40:5" pos:end="41:25">if <condition pos:start="40:8" pos:end="40:15">(<expr pos:start="40:9" pos:end="40:14"><operator pos:start="40:9" pos:end="40:9">!</operator><name pos:start="40:10" pos:end="40:14">state</name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:25"><block_content pos:start="41:9" pos:end="41:25">
        <goto pos:start="41:9" pos:end="41:25">goto <name pos:start="41:14" pos:end="41:24">out_noclean</name>;</goto></block_content></block></if></if_stmt>
    <comment type="line" pos:start="42:5" pos:end="42:20">// Get file size</comment>
    <expr_stmt pos:start="43:5" pos:end="43:28"><expr pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:19">accept_range</name></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:27">false</name></expr>;</expr_stmt>
    <expr_stmt pos:start="44:5" pos:end="44:53"><expr pos:start="44:5" pos:end="44:52"><call pos:start="44:5" pos:end="44:52"><name pos:start="44:5" pos:end="44:20">curl_easy_setopt</name><argument_list pos:start="44:21" pos:end="44:52">(<argument pos:start="44:22" pos:end="44:32"><expr pos:start="44:22" pos:end="44:32"><name pos:start="44:22" pos:end="44:32"><name pos:start="44:22" pos:end="44:26">state</name><operator pos:start="44:27" pos:end="44:28">-&gt;</operator><name pos:start="44:29" pos:end="44:32">curl</name></name></expr></argument>, <argument pos:start="44:35" pos:end="44:48"><expr pos:start="44:35" pos:end="44:48"><name pos:start="44:35" pos:end="44:48">CURLOPT_NOBODY</name></expr></argument>, <argument pos:start="44:51" pos:end="44:51"><expr pos:start="44:51" pos:end="44:51"><literal type="number" pos:start="44:51" pos:end="44:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="45:5" pos:end="46:37"><expr pos:start="45:5" pos:end="46:36"><call pos:start="45:5" pos:end="46:36"><name pos:start="45:5" pos:end="45:20">curl_easy_setopt</name><argument_list pos:start="45:21" pos:end="46:36">(<argument pos:start="45:22" pos:end="45:32"><expr pos:start="45:22" pos:end="45:32"><name pos:start="45:22" pos:end="45:32"><name pos:start="45:22" pos:end="45:26">state</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:32">curl</name></name></expr></argument>, <argument pos:start="45:35" pos:end="45:56"><expr pos:start="45:35" pos:end="45:56"><name pos:start="45:35" pos:end="45:56">CURLOPT_HEADERFUNCTION</name></expr></argument>,
                     <argument pos:start="46:22" pos:end="46:35"><expr pos:start="46:22" pos:end="46:35"><name pos:start="46:22" pos:end="46:35">curl_header_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="47:5" pos:end="47:57"><expr pos:start="47:5" pos:end="47:56"><call pos:start="47:5" pos:end="47:56"><name pos:start="47:5" pos:end="47:20">curl_easy_setopt</name><argument_list pos:start="47:21" pos:end="47:56">(<argument pos:start="47:22" pos:end="47:32"><expr pos:start="47:22" pos:end="47:32"><name pos:start="47:22" pos:end="47:32"><name pos:start="47:22" pos:end="47:26">state</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:32">curl</name></name></expr></argument>, <argument pos:start="47:35" pos:end="47:52"><expr pos:start="47:35" pos:end="47:52"><name pos:start="47:35" pos:end="47:52">CURLOPT_HEADERDATA</name></expr></argument>, <argument pos:start="47:55" pos:end="47:55"><expr pos:start="47:55" pos:end="47:55"><name pos:start="47:55" pos:end="47:55">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="48:5" pos:end="49:17"><if pos:start="48:5" pos:end="49:17">if <condition pos:start="48:8" pos:end="48:39">(<expr pos:start="48:9" pos:end="48:38"><call pos:start="48:9" pos:end="48:38"><name pos:start="48:9" pos:end="48:25">curl_easy_perform</name><argument_list pos:start="48:26" pos:end="48:38">(<argument pos:start="48:27" pos:end="48:37"><expr pos:start="48:27" pos:end="48:37"><name pos:start="48:27" pos:end="48:37"><name pos:start="48:27" pos:end="48:31">state</name><operator pos:start="48:32" pos:end="48:33">-&gt;</operator><name pos:start="48:34" pos:end="48:37">curl</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:17"><block_content pos:start="49:9" pos:end="49:17">
        <goto pos:start="49:9" pos:end="49:17">goto <name pos:start="49:14" pos:end="49:16">out</name>;</goto></block_content></block></if></if_stmt>
    <expr_stmt pos:start="50:5" pos:end="50:73"><expr pos:start="50:5" pos:end="50:72"><call pos:start="50:5" pos:end="50:72"><name pos:start="50:5" pos:end="50:21">curl_easy_getinfo</name><argument_list pos:start="50:22" pos:end="50:72">(<argument pos:start="50:23" pos:end="50:33"><expr pos:start="50:23" pos:end="50:33"><name pos:start="50:23" pos:end="50:33"><name pos:start="50:23" pos:end="50:27">state</name><operator pos:start="50:28" pos:end="50:29">-&gt;</operator><name pos:start="50:30" pos:end="50:33">curl</name></name></expr></argument>, <argument pos:start="50:36" pos:end="50:67"><expr pos:start="50:36" pos:end="50:67"><name pos:start="50:36" pos:end="50:67">CURLINFO_CONTENT_LENGTH_DOWNLOAD</name></expr></argument>, <argument pos:start="50:70" pos:end="50:71"><expr pos:start="50:70" pos:end="50:71"><operator pos:start="50:70" pos:end="50:70">&amp;</operator><name pos:start="50:71" pos:end="50:71">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="51:5" pos:end="54:17"><if pos:start="51:5" pos:end="52:27">if <condition pos:start="51:8" pos:end="51:10">(<expr pos:start="51:9" pos:end="51:9"><name pos:start="51:9" pos:end="51:9">d</name></expr>)</condition><block type="pseudo" pos:start="52:9" pos:end="52:27"><block_content pos:start="52:9" pos:end="52:27">
        <expr_stmt pos:start="52:9" pos:end="52:27"><expr pos:start="52:9" pos:end="52:26"><name pos:start="52:9" pos:end="52:14"><name pos:start="52:9" pos:end="52:9">s</name><operator pos:start="52:10" pos:end="52:11">-&gt;</operator><name pos:start="52:12" pos:end="52:14">len</name></name> <operator pos:start="52:16" pos:end="52:16">=</operator> <operator pos:start="52:18" pos:end="52:18">(</operator><name pos:start="52:19" pos:end="52:24">size_t</name><operator pos:start="52:25" pos:end="52:25">)</operator><name pos:start="52:26" pos:end="52:26">d</name></expr>;</expr_stmt></block_content></block></if>
    <if type="elseif" pos:start="53:5" pos:end="54:17">else if<condition pos:start="53:12" pos:end="53:20">(<expr pos:start="53:13" pos:end="53:19"><operator pos:start="53:13" pos:end="53:13">!</operator><name pos:start="53:14" pos:end="53:19"><name pos:start="53:14" pos:end="53:14">s</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:19">len</name></name></expr>)</condition><block type="pseudo" pos:start="54:9" pos:end="54:17"><block_content pos:start="54:9" pos:end="54:17">
        <goto pos:start="54:9" pos:end="54:17">goto <name pos:start="54:14" pos:end="54:16">out</name>;</goto></block_content></block></if></if_stmt>
    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="57:28">(<expr pos:start="55:9" pos:end="57:27"><operator pos:start="55:9" pos:end="55:9">(</operator><operator pos:start="55:10" pos:end="55:10">!</operator><call pos:start="55:11" pos:end="55:59"><name pos:start="55:11" pos:end="55:21">strncasecmp</name><argument_list pos:start="55:22" pos:end="55:59">(<argument pos:start="55:23" pos:end="55:28"><expr pos:start="55:23" pos:end="55:28"><name pos:start="55:23" pos:end="55:28"><name pos:start="55:23" pos:end="55:23">s</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:28">url</name></name></expr></argument>, <argument pos:start="55:31" pos:end="55:39"><expr pos:start="55:31" pos:end="55:39"><literal type="string" pos:start="55:31" pos:end="55:39">"http://"</literal></expr></argument>, <argument pos:start="55:42" pos:end="55:58"><expr pos:start="55:42" pos:end="55:58"><call pos:start="55:42" pos:end="55:58"><name pos:start="55:42" pos:end="55:47">strlen</name><argument_list pos:start="55:48" pos:end="55:58">(<argument pos:start="55:49" pos:end="55:57"><expr pos:start="55:49" pos:end="55:57"><literal type="string" pos:start="55:49" pos:end="55:57">"http://"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
        <operator pos:start="56:9" pos:end="56:10">||</operator> <operator pos:start="56:12" pos:end="56:12">!</operator><call pos:start="56:13" pos:end="56:63"><name pos:start="56:13" pos:end="56:23">strncasecmp</name><argument_list pos:start="56:24" pos:end="56:63">(<argument pos:start="56:25" pos:end="56:30"><expr pos:start="56:25" pos:end="56:30"><name pos:start="56:25" pos:end="56:30"><name pos:start="56:25" pos:end="56:25">s</name><operator pos:start="56:26" pos:end="56:27">-&gt;</operator><name pos:start="56:28" pos:end="56:30">url</name></name></expr></argument>, <argument pos:start="56:33" pos:end="56:42"><expr pos:start="56:33" pos:end="56:42"><literal type="string" pos:start="56:33" pos:end="56:42">"https://"</literal></expr></argument>, <argument pos:start="56:45" pos:end="56:62"><expr pos:start="56:45" pos:end="56:62"><call pos:start="56:45" pos:end="56:62"><name pos:start="56:45" pos:end="56:50">strlen</name><argument_list pos:start="56:51" pos:end="56:62">(<argument pos:start="56:52" pos:end="56:61"><expr pos:start="56:52" pos:end="56:61"><literal type="string" pos:start="56:52" pos:end="56:61">"https://"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="56:64" pos:end="56:64">)</operator>
        <operator pos:start="57:9" pos:end="57:10">&amp;&amp;</operator> <operator pos:start="57:12" pos:end="57:12">!</operator><name pos:start="57:13" pos:end="57:27"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:27">accept_range</name></name></expr>)</condition> <block pos:start="57:30" pos:end="61:5">{<block_content pos:start="58:9" pos:end="60:17">
        <expr_stmt pos:start="58:9" pos:end="59:66"><expr pos:start="58:9" pos:end="59:65"><call pos:start="58:9" pos:end="59:65"><name pos:start="58:9" pos:end="58:15">pstrcpy</name><argument_list pos:start="58:16" pos:end="59:65">(<argument pos:start="58:17" pos:end="58:29"><expr pos:start="58:17" pos:end="58:29"><name pos:start="58:17" pos:end="58:29"><name pos:start="58:17" pos:end="58:21">state</name><operator pos:start="58:22" pos:end="58:23">-&gt;</operator><name pos:start="58:24" pos:end="58:29">errmsg</name></name></expr></argument>, <argument pos:start="58:32" pos:end="58:46"><expr pos:start="58:32" pos:end="58:46"><name pos:start="58:32" pos:end="58:46">CURL_ERROR_SIZE</name></expr></argument>,
                <argument pos:start="59:17" pos:end="59:64"><expr pos:start="59:17" pos:end="59:64"><literal type="string" pos:start="59:17" pos:end="59:64">"Server does not support 'range' (byte ranges)."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <goto pos:start="60:9" pos:end="60:17">goto <name pos:start="60:14" pos:end="60:16">out</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="62:5" pos:end="62:42"><expr pos:start="62:5" pos:end="62:41"><call pos:start="62:5" pos:end="62:41"><name pos:start="62:5" pos:end="62:11">DPRINTF</name><argument_list pos:start="62:12" pos:end="62:41">(<argument pos:start="62:13" pos:end="62:32"><expr pos:start="62:13" pos:end="62:32"><literal type="string" pos:start="62:13" pos:end="62:32">"CURL: Size = %zd\n"</literal></expr></argument>, <argument pos:start="62:35" pos:end="62:40"><expr pos:start="62:35" pos:end="62:40"><name pos:start="62:35" pos:end="62:40"><name pos:start="62:35" pos:end="62:35">s</name><operator pos:start="62:36" pos:end="62:37">-&gt;</operator><name pos:start="62:38" pos:end="62:40">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="63:5" pos:end="63:28"><expr pos:start="63:5" pos:end="63:27"><call pos:start="63:5" pos:end="63:27"><name pos:start="63:5" pos:end="63:20">curl_clean_state</name><argument_list pos:start="63:21" pos:end="63:27">(<argument pos:start="63:22" pos:end="63:26"><expr pos:start="63:22" pos:end="63:26"><name pos:start="63:22" pos:end="63:26">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="64:5" pos:end="64:35"><expr pos:start="64:5" pos:end="64:34"><call pos:start="64:5" pos:end="64:34"><name pos:start="64:5" pos:end="64:21">curl_easy_cleanup</name><argument_list pos:start="64:22" pos:end="64:34">(<argument pos:start="64:23" pos:end="64:33"><expr pos:start="64:23" pos:end="64:33"><name pos:start="64:23" pos:end="64:33"><name pos:start="64:23" pos:end="64:27">state</name><operator pos:start="64:28" pos:end="64:29">-&gt;</operator><name pos:start="64:30" pos:end="64:33">curl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="65:5" pos:end="65:23"><expr pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:15"><name pos:start="65:5" pos:end="65:9">state</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:15">curl</name></name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:22">NULL</name></expr>;</expr_stmt>
    <expr_stmt pos:start="66:5" pos:end="68:45"><expr pos:start="66:5" pos:end="68:44"><call pos:start="66:5" pos:end="68:44"><name pos:start="66:5" pos:end="66:18">aio_timer_init</name><argument_list pos:start="66:19" pos:end="68:44">(<argument pos:start="66:20" pos:end="66:43"><expr pos:start="66:20" pos:end="66:43"><call pos:start="66:20" pos:end="66:43"><name pos:start="66:20" pos:end="66:39">bdrv_get_aio_context</name><argument_list pos:start="66:40" pos:end="66:43">(<argument pos:start="66:41" pos:end="66:42"><expr pos:start="66:41" pos:end="66:42"><name pos:start="66:41" pos:end="66:42">bs</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="66:46" pos:end="66:54"><expr pos:start="66:46" pos:end="66:54"><operator pos:start="66:46" pos:end="66:46">&amp;</operator><name pos:start="66:47" pos:end="66:54"><name pos:start="66:47" pos:end="66:47">s</name><operator pos:start="66:48" pos:end="66:49">-&gt;</operator><name pos:start="66:50" pos:end="66:54">timer</name></name></expr></argument>,
                   <argument pos:start="67:20" pos:end="67:38"><expr pos:start="67:20" pos:end="67:38"><name pos:start="67:20" pos:end="67:38">QEMU_CLOCK_REALTIME</name></expr></argument>, <argument pos:start="67:41" pos:end="67:48"><expr pos:start="67:41" pos:end="67:48"><name pos:start="67:41" pos:end="67:48">SCALE_NS</name></expr></argument>,
                   <argument pos:start="68:20" pos:end="68:40"><expr pos:start="68:20" pos:end="68:40"><name pos:start="68:20" pos:end="68:40">curl_multi_timeout_do</name></expr></argument>, <argument pos:start="68:43" pos:end="68:43"><expr pos:start="68:43" pos:end="68:43"><name pos:start="68:43" pos:end="68:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line" pos:start="69:5" pos:end="69:57">// Now we know the file exists and its size, so let's</comment>
    <comment type="line" pos:start="70:5" pos:end="70:38">// initialize the multi interface!</comment>
    <expr_stmt pos:start="71:5" pos:end="71:33"><expr pos:start="71:5" pos:end="71:32"><name pos:start="71:5" pos:end="71:12"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:12">multi</name></name> <operator pos:start="71:14" pos:end="71:14">=</operator> <call pos:start="71:16" pos:end="71:32"><name pos:start="71:16" pos:end="71:30">curl_multi_init</name><argument_list pos:start="71:31" pos:end="71:32">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="72:5" pos:end="74:0"><expr pos:start="72:5" pos:end="72:70"><call pos:start="72:5" pos:end="72:70"><name pos:start="72:5" pos:end="72:21">curl_multi_setopt</name><argument_list pos:start="72:22" pos:end="72:70">(<argument pos:start="72:23" pos:end="72:30"><expr pos:start="72:23" pos:end="72:30"><name pos:start="72:23" pos:end="72:30"><name pos:start="72:23" pos:end="72:23">s</name><operator pos:start="72:24" pos:end="72:25">-&gt;</operator><name pos:start="72:26" pos:end="72:30">multi</name></name></expr></argument>, <argument pos:start="72:33" pos:end="72:55"><expr pos:start="72:33" pos:end="72:55"><name pos:start="72:33" pos:end="72:55">CURLMOPT_SOCKETFUNCTION</name></expr></argument>, <argument pos:start="72:58" pos:end="72:69"><expr pos:start="72:58" pos:end="72:69"><name pos:start="72:58" pos:end="72:69">curl_sock_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:ifdef pos:start="73:1" pos:end="73:31">#<cpp:directive pos:start="73:2" pos:end="73:6">ifdef</cpp:directive> <name pos:start="73:8" pos:end="73:31">NEED_CURL_TIMER_CALLBACK</name></cpp:ifdef>
    <expr_stmt pos:start="74:5" pos:end="74:55"><expr pos:start="74:5" pos:end="74:54"><call pos:start="74:5" pos:end="74:54"><name pos:start="74:5" pos:end="74:21">curl_multi_setopt</name><argument_list pos:start="74:22" pos:end="74:54">(<argument pos:start="74:23" pos:end="74:30"><expr pos:start="74:23" pos:end="74:30"><name pos:start="74:23" pos:end="74:30"><name pos:start="74:23" pos:end="74:23">s</name><operator pos:start="74:24" pos:end="74:25">-&gt;</operator><name pos:start="74:26" pos:end="74:30">multi</name></name></expr></argument>, <argument pos:start="74:33" pos:end="74:50"><expr pos:start="74:33" pos:end="74:50"><name pos:start="74:33" pos:end="74:50">CURLMOPT_TIMERDATA</name></expr></argument>, <argument pos:start="74:53" pos:end="74:53"><expr pos:start="74:53" pos:end="74:53"><name pos:start="74:53" pos:end="74:53">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="75:5" pos:end="77:0"><expr pos:start="75:5" pos:end="75:70"><call pos:start="75:5" pos:end="75:70"><name pos:start="75:5" pos:end="75:21">curl_multi_setopt</name><argument_list pos:start="75:22" pos:end="75:70">(<argument pos:start="75:23" pos:end="75:30"><expr pos:start="75:23" pos:end="75:30"><name pos:start="75:23" pos:end="75:30"><name pos:start="75:23" pos:end="75:23">s</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:30">multi</name></name></expr></argument>, <argument pos:start="75:33" pos:end="75:54"><expr pos:start="75:33" pos:end="75:54"><name pos:start="75:33" pos:end="75:54">CURLMOPT_TIMERFUNCTION</name></expr></argument>, <argument pos:start="75:57" pos:end="75:69"><expr pos:start="75:57" pos:end="75:69"><name pos:start="75:57" pos:end="75:69">curl_timer_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="76:1" pos:end="76:6">#<cpp:directive pos:start="76:2" pos:end="76:6">endif</cpp:directive></cpp:endif>
    <expr_stmt pos:start="77:5" pos:end="77:24"><expr pos:start="77:5" pos:end="77:23"><call pos:start="77:5" pos:end="77:23"><name pos:start="77:5" pos:end="77:17">qemu_opts_del</name><argument_list pos:start="77:18" pos:end="77:23">(<argument pos:start="77:19" pos:end="77:22"><expr pos:start="77:19" pos:end="77:22"><name pos:start="77:19" pos:end="77:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="78:5" pos:end="78:13">return <expr pos:start="78:12" pos:end="78:12"><literal type="number" pos:start="78:12" pos:end="78:12">0</literal></expr>;</return>
<label pos:start="79:1" pos:end="79:4"><name pos:start="79:1" pos:end="79:3">out</name>:</label>
    <expr_stmt pos:start="80:5" pos:end="80:68"><expr pos:start="80:5" pos:end="80:67"><call pos:start="80:5" pos:end="80:67"><name pos:start="80:5" pos:end="80:14">error_setg</name><argument_list pos:start="80:15" pos:end="80:67">(<argument pos:start="80:16" pos:end="80:19"><expr pos:start="80:16" pos:end="80:19"><name pos:start="80:16" pos:end="80:19">errp</name></expr></argument>, <argument pos:start="80:22" pos:end="80:51"><expr pos:start="80:22" pos:end="80:51"><literal type="string" pos:start="80:22" pos:end="80:51">"CURL: Error opening file: %s"</literal></expr></argument>, <argument pos:start="80:54" pos:end="80:66"><expr pos:start="80:54" pos:end="80:66"><name pos:start="80:54" pos:end="80:66"><name pos:start="80:54" pos:end="80:58">state</name><operator pos:start="80:59" pos:end="80:60">-&gt;</operator><name pos:start="80:61" pos:end="80:66">errmsg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="81:5" pos:end="81:35"><expr pos:start="81:5" pos:end="81:34"><call pos:start="81:5" pos:end="81:34"><name pos:start="81:5" pos:end="81:21">curl_easy_cleanup</name><argument_list pos:start="81:22" pos:end="81:34">(<argument pos:start="81:23" pos:end="81:33"><expr pos:start="81:23" pos:end="81:33"><name pos:start="81:23" pos:end="81:33"><name pos:start="81:23" pos:end="81:27">state</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:33">curl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="82:5" pos:end="82:23"><expr pos:start="82:5" pos:end="82:22"><name pos:start="82:5" pos:end="82:15"><name pos:start="82:5" pos:end="82:9">state</name><operator pos:start="82:10" pos:end="82:11">-&gt;</operator><name pos:start="82:12" pos:end="82:15">curl</name></name> <operator pos:start="82:17" pos:end="82:17">=</operator> <name pos:start="82:19" pos:end="82:22">NULL</name></expr>;</expr_stmt>
<label pos:start="83:1" pos:end="83:12"><name pos:start="83:1" pos:end="83:11">out_noclean</name>:</label>
    <expr_stmt pos:start="84:5" pos:end="84:19"><expr pos:start="84:5" pos:end="84:18"><call pos:start="84:5" pos:end="84:18"><name pos:start="84:5" pos:end="84:10">g_free</name><argument_list pos:start="84:11" pos:end="84:18">(<argument pos:start="84:12" pos:end="84:17"><expr pos:start="84:12" pos:end="84:17"><name pos:start="84:12" pos:end="84:17"><name pos:start="84:12" pos:end="84:12">s</name><operator pos:start="84:13" pos:end="84:14">-&gt;</operator><name pos:start="84:15" pos:end="84:17">url</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="85:5" pos:end="85:24"><expr pos:start="85:5" pos:end="85:23"><call pos:start="85:5" pos:end="85:23"><name pos:start="85:5" pos:end="85:17">qemu_opts_del</name><argument_list pos:start="85:18" pos:end="85:23">(<argument pos:start="85:19" pos:end="85:22"><expr pos:start="85:19" pos:end="85:22"><name pos:start="85:19" pos:end="85:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="86:5" pos:end="86:19">return <expr pos:start="86:12" pos:end="86:18"><operator pos:start="86:12" pos:end="86:12">-</operator><name pos:start="86:13" pos:end="86:18">EINVAL</name></expr>;</return>
</block_content>}</block></function></unit>
