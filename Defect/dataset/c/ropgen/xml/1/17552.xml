<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17552.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:26">bdrv_open_backing_file</name><parameter_list pos:start="1:27" pos:end="1:78">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:43">BlockDriverState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">bs</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:54">QDict</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:63">options</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:70">Error</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier><modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:77">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:35"><name pos:start="5:10" pos:end="5:25">backing_filename</name><index pos:start="5:26" pos:end="5:35">[<expr pos:start="5:27" pos:end="5:34"><name pos:start="5:27" pos:end="5:34">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">back_flags</name></decl>, <decl pos:start="7:21" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:23">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">BlockDriver</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:25">back_drv</name> <init pos:start="9:27" pos:end="9:32">= <expr pos:start="9:29" pos:end="9:32"><name pos:start="9:29" pos:end="9:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:20">local_err</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:31">(<expr pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:10">bs</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:22">backing_hd</name></name> <operator pos:start="15:24" pos:end="15:25">!=</operator> <name pos:start="15:27" pos:end="15:30">NULL</name></expr>)</condition> <block pos:start="15:33" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:17">

        <expr_stmt pos:start="17:9" pos:end="17:25"><expr pos:start="17:9" pos:end="17:24"><call pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:15">QDECREF</name><argument_list pos:start="17:16" pos:end="17:24">(<argument pos:start="17:17" pos:end="17:23"><expr pos:start="17:17" pos:end="17:23"><name pos:start="17:17" pos:end="17:23">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:44">/* NULL means an empty set of options */</comment>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:24">(<expr pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:15">options</name> <operator pos:start="27:17" pos:end="27:18">==</operator> <name pos:start="27:20" pos:end="27:23">NULL</name></expr>)</condition> <block pos:start="27:26" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:30">

        <expr_stmt pos:start="29:9" pos:end="29:30"><expr pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:15">options</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <call pos:start="29:19" pos:end="29:29"><name pos:start="29:19" pos:end="29:27">qdict_new</name><argument_list pos:start="29:28" pos:end="29:29">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:6">bs</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:18">open_flags</name></name> <operator pos:start="35:20" pos:end="35:21">&amp;=</operator> <operator pos:start="35:23" pos:end="35:23">~</operator><name pos:start="35:24" pos:end="35:40">BDRV_O_NO_BACKING</name></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="53:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:47">(<expr pos:start="37:9" pos:end="37:46"><call pos:start="37:9" pos:end="37:46"><name pos:start="37:9" pos:end="37:20">qdict_haskey</name><argument_list pos:start="37:21" pos:end="37:46">(<argument pos:start="37:22" pos:end="37:28"><expr pos:start="37:22" pos:end="37:28"><name pos:start="37:22" pos:end="37:28">options</name></expr></argument>, <argument pos:start="37:31" pos:end="37:45"><expr pos:start="37:31" pos:end="37:45"><literal type="string" pos:start="37:31" pos:end="37:45">"file.filename"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:49" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:35">

        <expr_stmt pos:start="39:9" pos:end="39:35"><expr pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:24">backing_filename</name><index pos:start="39:25" pos:end="39:27">[<expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">0</literal></expr>]</index></name> <operator pos:start="39:29" pos:end="39:29">=</operator> <literal type="char" pos:start="39:31" pos:end="39:34">'\0'</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="41:7" pos:end="47:5">else if <condition pos:start="41:15" pos:end="41:71">(<expr pos:start="41:16" pos:end="41:70"><name pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:17">bs</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:31">backing_file</name><index pos:start="41:32" pos:end="41:34">[<expr pos:start="41:33" pos:end="41:33"><literal type="number" pos:start="41:33" pos:end="41:33">0</literal></expr>]</index></name> <operator pos:start="41:36" pos:end="41:37">==</operator> <literal type="char" pos:start="41:39" pos:end="41:42">'\0'</literal> <operator pos:start="41:44" pos:end="41:45">&amp;&amp;</operator> <call pos:start="41:47" pos:end="41:65"><name pos:start="41:47" pos:end="41:56">qdict_size</name><argument_list pos:start="41:57" pos:end="41:65">(<argument pos:start="41:58" pos:end="41:64"><expr pos:start="41:58" pos:end="41:64"><name pos:start="41:58" pos:end="41:64">options</name></expr></argument>)</argument_list></call> <operator pos:start="41:67" pos:end="41:68">==</operator> <literal type="number" pos:start="41:70" pos:end="41:70">0</literal></expr>)</condition> <block pos:start="41:73" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:17">

        <expr_stmt pos:start="43:9" pos:end="43:25"><expr pos:start="43:9" pos:end="43:24"><call pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:15">QDECREF</name><argument_list pos:start="43:16" pos:end="43:24">(<argument pos:start="43:17" pos:end="43:23"><expr pos:start="43:17" pos:end="43:23"><name pos:start="43:17" pos:end="43:23">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:17">return <expr pos:start="45:16" pos:end="45:16"><literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="53:5">else <block pos:start="47:12" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:65">

        <expr_stmt pos:start="49:9" pos:end="51:65"><expr pos:start="49:9" pos:end="51:64"><call pos:start="49:9" pos:end="51:64"><name pos:start="49:9" pos:end="49:38">bdrv_get_full_backing_filename</name><argument_list pos:start="49:39" pos:end="51:64">(<argument pos:start="49:40" pos:end="49:41"><expr pos:start="49:40" pos:end="49:41"><name pos:start="49:40" pos:end="49:41">bs</name></expr></argument>, <argument pos:start="49:44" pos:end="49:59"><expr pos:start="49:44" pos:end="49:59"><name pos:start="49:44" pos:end="49:59">backing_filename</name></expr></argument>,

                                       <argument pos:start="51:40" pos:end="51:63"><expr pos:start="51:40" pos:end="51:63"><sizeof pos:start="51:40" pos:end="51:63">sizeof<argument_list pos:start="51:46" pos:end="51:63">(<argument pos:start="51:47" pos:end="51:62"><expr pos:start="51:47" pos:end="51:62"><name pos:start="51:47" pos:end="51:62">backing_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:34"><expr pos:start="57:5" pos:end="57:33"><name pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:6">bs</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:18">backing_hd</name></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <call pos:start="57:22" pos:end="57:33"><name pos:start="57:22" pos:end="57:29">bdrv_new</name><argument_list pos:start="57:30" pos:end="57:33">(<argument pos:start="57:31" pos:end="57:32"><expr pos:start="57:31" pos:end="57:32"><literal type="string" pos:start="57:31" pos:end="57:32">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:38">(<expr pos:start="61:9" pos:end="61:37"><name pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:10">bs</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:26">backing_format</name><index pos:start="61:27" pos:end="61:29">[<expr pos:start="61:28" pos:end="61:28"><literal type="number" pos:start="61:28" pos:end="61:28">0</literal></expr>]</index></name> <operator pos:start="61:31" pos:end="61:32">!=</operator> <literal type="char" pos:start="61:34" pos:end="61:37">'\0'</literal></expr>)</condition> <block pos:start="61:40" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:56">

        <expr_stmt pos:start="63:9" pos:end="63:56"><expr pos:start="63:9" pos:end="63:55"><name pos:start="63:9" pos:end="63:16">back_drv</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <call pos:start="63:20" pos:end="63:55"><name pos:start="63:20" pos:end="63:35">bdrv_find_format</name><argument_list pos:start="63:36" pos:end="63:55">(<argument pos:start="63:37" pos:end="63:54"><expr pos:start="63:37" pos:end="63:54"><name pos:start="63:37" pos:end="63:54"><name pos:start="63:37" pos:end="63:38">bs</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:54">backing_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:47">/* backing files always opened read-only */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:67"><expr pos:start="71:5" pos:end="71:66"><name pos:start="71:5" pos:end="71:14">back_flags</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <name pos:start="71:18" pos:end="71:31"><name pos:start="71:18" pos:end="71:19">bs</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:31">open_flags</name></name> <operator pos:start="71:33" pos:end="71:33">&amp;</operator> <operator pos:start="71:35" pos:end="71:35">~</operator><operator pos:start="71:36" pos:end="71:36">(</operator><name pos:start="71:37" pos:end="71:47">BDRV_O_RDWR</name> <operator pos:start="71:49" pos:end="71:49">|</operator> <name pos:start="71:51" pos:end="71:65">BDRV_O_SNAPSHOT</name><operator pos:start="71:66" pos:end="71:66">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="79:54"><expr pos:start="75:5" pos:end="79:53"><name pos:start="75:5" pos:end="75:7">ret</name> <operator pos:start="75:9" pos:end="75:9">=</operator> <call pos:start="75:11" pos:end="79:53"><name pos:start="75:11" pos:end="75:19">bdrv_open</name><argument_list pos:start="75:20" pos:end="79:53">(<argument pos:start="75:21" pos:end="75:34"><expr pos:start="75:21" pos:end="75:34"><name pos:start="75:21" pos:end="75:34"><name pos:start="75:21" pos:end="75:22">bs</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:34">backing_hd</name></name></expr></argument>,

                    <argument pos:start="77:21" pos:end="77:63"><expr pos:start="77:21" pos:end="77:63"><ternary pos:start="77:21" pos:end="77:63"><condition pos:start="77:21" pos:end="77:39"><expr pos:start="77:21" pos:end="77:37"><operator pos:start="77:21" pos:end="77:21">*</operator><name pos:start="77:22" pos:end="77:37">backing_filename</name></expr> ?</condition><then pos:start="77:41" pos:end="77:56"> <expr pos:start="77:41" pos:end="77:56"><name pos:start="77:41" pos:end="77:56">backing_filename</name></expr> </then><else pos:start="77:58" pos:end="77:63">: <expr pos:start="77:60" pos:end="77:63"><name pos:start="77:60" pos:end="77:63">NULL</name></expr></else></ternary></expr></argument>, <argument pos:start="77:66" pos:end="77:72"><expr pos:start="77:66" pos:end="77:72"><name pos:start="77:66" pos:end="77:72">options</name></expr></argument>,

                    <argument pos:start="79:21" pos:end="79:30"><expr pos:start="79:21" pos:end="79:30"><name pos:start="79:21" pos:end="79:30">back_flags</name></expr></argument>, <argument pos:start="79:33" pos:end="79:40"><expr pos:start="79:33" pos:end="79:40"><name pos:start="79:33" pos:end="79:40">back_drv</name></expr></argument>, <argument pos:start="79:43" pos:end="79:52"><expr pos:start="79:43" pos:end="79:52"><operator pos:start="79:43" pos:end="79:43">&amp;</operator><name pos:start="79:44" pos:end="79:52">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="83:44"><expr pos:start="81:5" pos:end="83:43"><call pos:start="81:5" pos:end="83:43"><name pos:start="81:5" pos:end="81:11">pstrcpy</name><argument_list pos:start="81:12" pos:end="83:43">(<argument pos:start="81:13" pos:end="81:28"><expr pos:start="81:13" pos:end="81:28"><name pos:start="81:13" pos:end="81:28"><name pos:start="81:13" pos:end="81:14">bs</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:28">backing_file</name></name></expr></argument>, <argument pos:start="81:31" pos:end="81:54"><expr pos:start="81:31" pos:end="81:54"><sizeof pos:start="81:31" pos:end="81:54">sizeof<argument_list pos:start="81:37" pos:end="81:54">(<argument pos:start="81:38" pos:end="81:53"><expr pos:start="81:38" pos:end="81:53"><name pos:start="81:38" pos:end="81:53"><name pos:start="81:38" pos:end="81:39">bs</name><operator pos:start="81:40" pos:end="81:41">-&gt;</operator><name pos:start="81:42" pos:end="81:53">backing_file</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

            <argument pos:start="83:13" pos:end="83:42"><expr pos:start="83:13" pos:end="83:42"><name pos:start="83:13" pos:end="83:42"><name pos:start="83:13" pos:end="83:14">bs</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:26">backing_hd</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:32">file</name><operator pos:start="83:33" pos:end="83:34">-&gt;</operator><name pos:start="83:35" pos:end="83:42">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="97:5"><if pos:start="85:5" pos:end="97:5">if <condition pos:start="85:8" pos:end="85:16">(<expr pos:start="85:9" pos:end="85:15"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">&lt;</operator> <literal type="number" pos:start="85:15" pos:end="85:15">0</literal></expr>)</condition> <block pos:start="85:18" pos:end="97:5">{<block_content pos:start="87:9" pos:end="95:19">

        <expr_stmt pos:start="87:9" pos:end="87:35"><expr pos:start="87:9" pos:end="87:34"><call pos:start="87:9" pos:end="87:34"><name pos:start="87:9" pos:end="87:18">bdrv_unref</name><argument_list pos:start="87:19" pos:end="87:34">(<argument pos:start="87:20" pos:end="87:33"><expr pos:start="87:20" pos:end="87:33"><name pos:start="87:20" pos:end="87:33"><name pos:start="87:20" pos:end="87:21">bs</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:33">backing_hd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:30"><expr pos:start="89:9" pos:end="89:29"><name pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:10">bs</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:22">backing_hd</name></name> <operator pos:start="89:24" pos:end="89:24">=</operator> <name pos:start="89:26" pos:end="89:29">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:44"><expr pos:start="91:9" pos:end="91:43"><name pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:10">bs</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:22">open_flags</name></name> <operator pos:start="91:24" pos:end="91:25">|=</operator> <name pos:start="91:27" pos:end="91:43">BDRV_O_NO_BACKING</name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:41"><expr pos:start="93:9" pos:end="93:40"><call pos:start="93:9" pos:end="93:40"><name pos:start="93:9" pos:end="93:23">error_propagate</name><argument_list pos:start="93:24" pos:end="93:40">(<argument pos:start="93:25" pos:end="93:28"><expr pos:start="93:25" pos:end="93:28"><name pos:start="93:25" pos:end="93:28">errp</name></expr></argument>, <argument pos:start="93:31" pos:end="93:39"><expr pos:start="93:31" pos:end="93:39"><name pos:start="93:31" pos:end="93:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:19">return <expr pos:start="95:16" pos:end="95:18"><name pos:start="95:16" pos:end="95:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
