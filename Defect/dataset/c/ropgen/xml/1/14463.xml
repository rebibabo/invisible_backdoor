<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14463.c" pos:tabs="8"><function pos:start="1:1" pos:end="325:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:40">vorbis_parse_setup_hdr_floors</name><parameter_list pos:start="1:41" pos:end="1:60">(<parameter pos:start="1:42" pos:end="1:59"><decl pos:start="1:42" pos:end="1:59"><type pos:start="1:42" pos:end="1:57"><name pos:start="1:42" pos:end="1:55">vorbis_context</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:59">vc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="325:13">{<block_content pos:start="5:5" pos:end="325:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GetBitContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">gb</name> <init pos:start="5:23" pos:end="5:31">= <expr pos:start="5:25" pos:end="5:31"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:31"><name pos:start="5:26" pos:end="5:27">vc</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:31">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>,<decl pos:start="7:11" pos:end="7:11"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:11" pos:end="7:11">j</name></decl>,<decl pos:start="7:13" pos:end="7:13"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:13">k</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:42"><expr pos:start="11:5" pos:end="11:41"><name pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:6">vc</name><operator pos:start="11:7" pos:end="11:8">-&gt;</operator><name pos:start="11:9" pos:end="11:19">floor_count</name></name> <operator pos:start="11:21" pos:end="11:21">=</operator> <call pos:start="11:23" pos:end="11:37"><name pos:start="11:23" pos:end="11:30">get_bits</name><argument_list pos:start="11:31" pos:end="11:37">(<argument pos:start="11:32" pos:end="11:33"><expr pos:start="11:32" pos:end="11:33"><name pos:start="11:32" pos:end="11:33">gb</name></expr></argument>, <argument pos:start="11:36" pos:end="11:36"><expr pos:start="11:36" pos:end="11:36"><literal type="number" pos:start="11:36" pos:end="11:36">6</literal></expr></argument>)</argument_list></call> <operator pos:start="11:39" pos:end="11:39">+</operator> <literal type="number" pos:start="11:41" pos:end="11:41">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:67"><expr pos:start="15:5" pos:end="15:66"><name pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:6">vc</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:14">floors</name></name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:66"><name pos:start="15:18" pos:end="15:27">av_mallocz</name><argument_list pos:start="15:28" pos:end="15:66">(<argument pos:start="15:29" pos:end="15:65"><expr pos:start="15:29" pos:end="15:65"><name pos:start="15:29" pos:end="15:43"><name pos:start="15:29" pos:end="15:30">vc</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:43">floor_count</name></name> <operator pos:start="15:45" pos:end="15:45">*</operator> <sizeof pos:start="15:47" pos:end="15:65">sizeof<argument_list pos:start="15:53" pos:end="15:65">(<argument pos:start="15:54" pos:end="15:64"><expr pos:start="15:54" pos:end="15:64"><operator pos:start="15:54" pos:end="15:54">*</operator><name pos:start="15:55" pos:end="15:64"><name pos:start="15:55" pos:end="15:56">vc</name><operator pos:start="15:57" pos:end="15:58">-&gt;</operator><name pos:start="15:59" pos:end="15:64">floors</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="19:5" pos:end="325:13">for <control pos:start="19:9" pos:end="19:41">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:36"><expr pos:start="19:17" pos:end="19:35"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:35"><name pos:start="19:21" pos:end="19:22">vc</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:35">floor_count</name></name></expr>;</condition> <incr pos:start="19:38" pos:end="19:40"><expr pos:start="19:38" pos:end="19:40"><operator pos:start="19:38" pos:end="19:39">++</operator><name pos:start="19:40" pos:end="19:40">i</name></expr></incr>)</control> <block pos:start="19:43" pos:end="325:13">{<block_content pos:start="21:9" pos:end="325:13">

        <decl_stmt pos:start="21:9" pos:end="21:51"><decl pos:start="21:9" pos:end="21:50"><type pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:20">vorbis_floor</name> <modifier pos:start="21:22" pos:end="21:22">*</modifier></type><name pos:start="21:23" pos:end="21:33">floor_setup</name> <init pos:start="21:35" pos:end="21:50">= <expr pos:start="21:37" pos:end="21:50"><operator pos:start="21:37" pos:end="21:37">&amp;</operator><name pos:start="21:38" pos:end="21:50"><name pos:start="21:38" pos:end="21:39">vc</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:47">floors</name><index pos:start="21:48" pos:end="21:50">[<expr pos:start="21:49" pos:end="21:49"><name pos:start="21:49" pos:end="21:49">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:51"><expr pos:start="25:9" pos:end="25:50"><name pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:19">floor_setup</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:31">floor_type</name></name> <operator pos:start="25:33" pos:end="25:33">=</operator> <call pos:start="25:35" pos:end="25:50"><name pos:start="25:35" pos:end="25:42">get_bits</name><argument_list pos:start="25:43" pos:end="25:50">(<argument pos:start="25:44" pos:end="25:45"><expr pos:start="25:44" pos:end="25:45"><name pos:start="25:44" pos:end="25:45">gb</name></expr></argument>, <argument pos:start="25:48" pos:end="25:49"><expr pos:start="25:48" pos:end="25:49"><literal type="number" pos:start="25:48" pos:end="25:49">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:75"><expr pos:start="29:9" pos:end="29:74"><call pos:start="29:9" pos:end="29:74"><name pos:start="29:9" pos:end="29:15">av_dlog</name><argument_list pos:start="29:16" pos:end="29:74">(<argument pos:start="29:17" pos:end="29:20"><expr pos:start="29:17" pos:end="29:20"><name pos:start="29:17" pos:end="29:20">NULL</name></expr></argument>, <argument pos:start="29:23" pos:end="29:45"><expr pos:start="29:23" pos:end="29:45"><literal type="string" pos:start="29:23" pos:end="29:45">" %d. floor type %d \n"</literal></expr></argument>, <argument pos:start="29:48" pos:end="29:48"><expr pos:start="29:48" pos:end="29:48"><name pos:start="29:48" pos:end="29:48">i</name></expr></argument>, <argument pos:start="29:51" pos:end="29:73"><expr pos:start="29:51" pos:end="29:73"><name pos:start="29:51" pos:end="29:73"><name pos:start="29:51" pos:end="29:61">floor_setup</name><operator pos:start="29:62" pos:end="29:63">-&gt;</operator><name pos:start="29:64" pos:end="29:73">floor_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="33:9" pos:end="325:13"><if pos:start="33:9" pos:end="325:13">if <condition pos:start="33:12" pos:end="33:41">(<expr pos:start="33:13" pos:end="33:40"><name pos:start="33:13" pos:end="33:35"><name pos:start="33:13" pos:end="33:23">floor_setup</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:35">floor_type</name></name> <operator pos:start="33:37" pos:end="33:38">==</operator> <literal type="number" pos:start="33:40" pos:end="33:40">1</literal></expr>)</condition> <block pos:start="33:43" pos:end="325:13">{<block_content pos:start="35:13" pos:end="325:13">

            <decl_stmt pos:start="35:13" pos:end="35:35"><decl pos:start="35:13" pos:end="35:34"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:29">maximum_class</name> <init pos:start="35:31" pos:end="35:34">= <expr pos:start="35:33" pos:end="35:34"><operator pos:start="35:33" pos:end="35:33">-</operator><literal type="number" pos:start="35:34" pos:end="35:34">1</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="37:13" pos:end="37:60"><decl pos:start="37:13" pos:end="37:30"><type pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:20">unsigned</name></type> <name pos:start="37:22" pos:end="37:30">rangebits</name></decl>, <decl pos:start="37:33" pos:end="37:40"><type ref="prev" pos:start="37:13" pos:end="37:20"/><name pos:start="37:33" pos:end="37:40">rangemax</name></decl>, <decl pos:start="37:43" pos:end="37:59"><type ref="prev" pos:start="37:13" pos:end="37:20"/><name pos:start="37:43" pos:end="37:55">floor1_values</name> <init pos:start="37:57" pos:end="37:59">= <expr pos:start="37:59" pos:end="37:59"><literal type="number" pos:start="37:59" pos:end="37:59">2</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="41:13" pos:end="41:55"><expr pos:start="41:13" pos:end="41:54"><name pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:23">floor_setup</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:31">decode</name></name> <operator pos:start="41:33" pos:end="41:33">=</operator> <name pos:start="41:35" pos:end="41:54">vorbis_floor1_decode</name></expr>;</expr_stmt>



            <expr_stmt pos:start="45:13" pos:end="45:62"><expr pos:start="45:13" pos:end="45:61"><name pos:start="45:13" pos:end="45:43"><name pos:start="45:13" pos:end="45:23">floor_setup</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:29">data</name><operator pos:start="45:30" pos:end="45:30">.</operator><name pos:start="45:31" pos:end="45:32">t1</name><operator pos:start="45:33" pos:end="45:33">.</operator><name pos:start="45:34" pos:end="45:43">partitions</name></name> <operator pos:start="45:45" pos:end="45:45">=</operator> <call pos:start="45:47" pos:end="45:61"><name pos:start="45:47" pos:end="45:54">get_bits</name><argument_list pos:start="45:55" pos:end="45:61">(<argument pos:start="45:56" pos:end="45:57"><expr pos:start="45:56" pos:end="45:57"><name pos:start="45:56" pos:end="45:57">gb</name></expr></argument>, <argument pos:start="45:60" pos:end="45:60"><expr pos:start="45:60" pos:end="45:60"><literal type="number" pos:start="45:60" pos:end="45:60">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="49:13" pos:end="51:56"><expr pos:start="49:13" pos:end="51:55"><call pos:start="49:13" pos:end="51:55"><name pos:start="49:13" pos:end="49:19">av_dlog</name><argument_list pos:start="49:20" pos:end="51:55">(<argument pos:start="49:21" pos:end="49:24"><expr pos:start="49:21" pos:end="49:24"><name pos:start="49:21" pos:end="49:24">NULL</name></expr></argument>, <argument pos:start="49:27" pos:end="49:55"><expr pos:start="49:27" pos:end="49:55"><literal type="string" pos:start="49:27" pos:end="49:55">" %d.floor: %d partitions \n"</literal></expr></argument>,

                    <argument pos:start="51:21" pos:end="51:21"><expr pos:start="51:21" pos:end="51:21"><name pos:start="51:21" pos:end="51:21">i</name></expr></argument>, <argument pos:start="51:24" pos:end="51:54"><expr pos:start="51:24" pos:end="51:54"><name pos:start="51:24" pos:end="51:54"><name pos:start="51:24" pos:end="51:34">floor_setup</name><operator pos:start="51:35" pos:end="51:36">-&gt;</operator><name pos:start="51:37" pos:end="51:40">data</name><operator pos:start="51:41" pos:end="51:41">.</operator><name pos:start="51:42" pos:end="51:43">t1</name><operator pos:start="51:44" pos:end="51:44">.</operator><name pos:start="51:45" pos:end="51:54">partitions</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="55:13" pos:end="325:13">for <control pos:start="55:17" pos:end="55:65">(<init pos:start="55:18" pos:end="55:23"><expr pos:start="55:18" pos:end="55:22"><name pos:start="55:18" pos:end="55:18">j</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <literal type="number" pos:start="55:22" pos:end="55:22">0</literal></expr>;</init> <condition pos:start="55:25" pos:end="55:60"><expr pos:start="55:25" pos:end="55:59"><name pos:start="55:25" pos:end="55:25">j</name> <operator pos:start="55:27" pos:end="55:27">&lt;</operator> <name pos:start="55:29" pos:end="55:59"><name pos:start="55:29" pos:end="55:39">floor_setup</name><operator pos:start="55:40" pos:end="55:41">-&gt;</operator><name pos:start="55:42" pos:end="55:45">data</name><operator pos:start="55:46" pos:end="55:46">.</operator><name pos:start="55:47" pos:end="55:48">t1</name><operator pos:start="55:49" pos:end="55:49">.</operator><name pos:start="55:50" pos:end="55:59">partitions</name></name></expr>;</condition> <incr pos:start="55:62" pos:end="55:64"><expr pos:start="55:62" pos:end="55:64"><operator pos:start="55:62" pos:end="55:63">++</operator><name pos:start="55:64" pos:end="55:64">j</name></expr></incr>)</control> <block pos:start="55:67" pos:end="325:13">{<block_content pos:start="57:17" pos:end="325:13">

                <expr_stmt pos:start="57:17" pos:end="57:74"><expr pos:start="57:17" pos:end="57:73"><name pos:start="57:17" pos:end="57:55"><name pos:start="57:17" pos:end="57:27">floor_setup</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:33">data</name><operator pos:start="57:34" pos:end="57:34">.</operator><name pos:start="57:35" pos:end="57:36">t1</name><operator pos:start="57:37" pos:end="57:37">.</operator><name pos:start="57:38" pos:end="57:52">partition_class</name><index pos:start="57:53" pos:end="57:55">[<expr pos:start="57:54" pos:end="57:54"><name pos:start="57:54" pos:end="57:54">j</name></expr>]</index></name> <operator pos:start="57:57" pos:end="57:57">=</operator> <call pos:start="57:59" pos:end="57:73"><name pos:start="57:59" pos:end="57:66">get_bits</name><argument_list pos:start="57:67" pos:end="57:73">(<argument pos:start="57:68" pos:end="57:69"><expr pos:start="57:68" pos:end="57:69"><name pos:start="57:68" pos:end="57:69">gb</name></expr></argument>, <argument pos:start="57:72" pos:end="57:72"><expr pos:start="57:72" pos:end="57:72"><literal type="number" pos:start="57:72" pos:end="57:72">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="59:17" pos:end="61:76"><if pos:start="59:17" pos:end="61:76">if <condition pos:start="59:20" pos:end="59:76">(<expr pos:start="59:21" pos:end="59:75"><name pos:start="59:21" pos:end="59:59"><name pos:start="59:21" pos:end="59:31">floor_setup</name><operator pos:start="59:32" pos:end="59:33">-&gt;</operator><name pos:start="59:34" pos:end="59:37">data</name><operator pos:start="59:38" pos:end="59:38">.</operator><name pos:start="59:39" pos:end="59:40">t1</name><operator pos:start="59:41" pos:end="59:41">.</operator><name pos:start="59:42" pos:end="59:56">partition_class</name><index pos:start="59:57" pos:end="59:59">[<expr pos:start="59:58" pos:end="59:58"><name pos:start="59:58" pos:end="59:58">j</name></expr>]</index></name> <operator pos:start="59:61" pos:end="59:61">&gt;</operator> <name pos:start="59:63" pos:end="59:75">maximum_class</name></expr>)</condition><block type="pseudo" pos:start="61:21" pos:end="61:76"><block_content pos:start="61:21" pos:end="61:76">

                    <expr_stmt pos:start="61:21" pos:end="61:76"><expr pos:start="61:21" pos:end="61:75"><name pos:start="61:21" pos:end="61:33">maximum_class</name> <operator pos:start="61:35" pos:end="61:35">=</operator> <name pos:start="61:37" pos:end="61:75"><name pos:start="61:37" pos:end="61:47">floor_setup</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:53">data</name><operator pos:start="61:54" pos:end="61:54">.</operator><name pos:start="61:55" pos:end="61:56">t1</name><operator pos:start="61:57" pos:end="61:57">.</operator><name pos:start="61:58" pos:end="61:72">partition_class</name><index pos:start="61:73" pos:end="61:75">[<expr pos:start="61:74" pos:end="61:74"><name pos:start="61:74" pos:end="61:74">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="65:17" pos:end="67:71"><expr pos:start="65:17" pos:end="67:70"><call pos:start="65:17" pos:end="67:70"><name pos:start="65:17" pos:end="65:23">av_dlog</name><argument_list pos:start="65:24" pos:end="67:70">(<argument pos:start="65:25" pos:end="65:28"><expr pos:start="65:25" pos:end="65:28"><name pos:start="65:25" pos:end="65:28">NULL</name></expr></argument>, <argument pos:start="65:31" pos:end="65:67"><expr pos:start="65:31" pos:end="65:67"><literal type="string" pos:start="65:31" pos:end="65:67">" %d. floor %d partition class %d \n"</literal></expr></argument>,

                        <argument pos:start="67:25" pos:end="67:25"><expr pos:start="67:25" pos:end="67:25"><name pos:start="67:25" pos:end="67:25">i</name></expr></argument>, <argument pos:start="67:28" pos:end="67:28"><expr pos:start="67:28" pos:end="67:28"><name pos:start="67:28" pos:end="67:28">j</name></expr></argument>, <argument pos:start="67:31" pos:end="67:69"><expr pos:start="67:31" pos:end="67:69"><name pos:start="67:31" pos:end="67:69"><name pos:start="67:31" pos:end="67:41">floor_setup</name><operator pos:start="67:42" pos:end="67:43">-&gt;</operator><name pos:start="67:44" pos:end="67:47">data</name><operator pos:start="67:48" pos:end="67:48">.</operator><name pos:start="67:49" pos:end="67:50">t1</name><operator pos:start="67:51" pos:end="67:51">.</operator><name pos:start="67:52" pos:end="67:66">partition_class</name><index pos:start="67:67" pos:end="67:69">[<expr pos:start="67:68" pos:end="67:68"><name pos:start="67:68" pos:end="67:68">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>






            <expr_stmt pos:start="74:13" pos:end="74:65"><expr pos:start="74:13" pos:end="74:64"><call pos:start="74:13" pos:end="74:64"><name pos:start="74:13" pos:end="74:19">av_dlog</name><argument_list pos:start="74:20" pos:end="74:64">(<argument pos:start="74:21" pos:end="74:24"><expr pos:start="74:21" pos:end="74:24"><name pos:start="74:21" pos:end="74:24">NULL</name></expr></argument>, <argument pos:start="74:27" pos:end="74:48"><expr pos:start="74:27" pos:end="74:48"><literal type="string" pos:start="74:27" pos:end="74:48">" maximum class %d \n"</literal></expr></argument>, <argument pos:start="74:51" pos:end="74:63"><expr pos:start="74:51" pos:end="74:63"><name pos:start="74:51" pos:end="74:63">maximum_class</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="78:13" pos:end="325:13">for <control pos:start="78:17" pos:end="78:48">(<init pos:start="78:18" pos:end="78:23"><expr pos:start="78:18" pos:end="78:22"><name pos:start="78:18" pos:end="78:18">j</name> <operator pos:start="78:20" pos:end="78:20">=</operator> <literal type="number" pos:start="78:22" pos:end="78:22">0</literal></expr>;</init> <condition pos:start="78:25" pos:end="78:43"><expr pos:start="78:25" pos:end="78:42"><name pos:start="78:25" pos:end="78:25">j</name> <operator pos:start="78:27" pos:end="78:28">&lt;=</operator> <name pos:start="78:30" pos:end="78:42">maximum_class</name></expr>;</condition> <incr pos:start="78:45" pos:end="78:47"><expr pos:start="78:45" pos:end="78:47"><operator pos:start="78:45" pos:end="78:46">++</operator><name pos:start="78:47" pos:end="78:47">j</name></expr></incr>)</control> <block pos:start="78:50" pos:end="325:13">{<block_content pos:start="80:17" pos:end="325:13">

                <expr_stmt pos:start="80:17" pos:end="80:79"><expr pos:start="80:17" pos:end="80:78"><name pos:start="80:17" pos:end="80:56"><name pos:start="80:17" pos:end="80:27">floor_setup</name><operator pos:start="80:28" pos:end="80:29">-&gt;</operator><name pos:start="80:30" pos:end="80:33">data</name><operator pos:start="80:34" pos:end="80:34">.</operator><name pos:start="80:35" pos:end="80:36">t1</name><operator pos:start="80:37" pos:end="80:37">.</operator><name pos:start="80:38" pos:end="80:53">class_dimensions</name><index pos:start="80:54" pos:end="80:56">[<expr pos:start="80:55" pos:end="80:55"><name pos:start="80:55" pos:end="80:55">j</name></expr>]</index></name> <operator pos:start="80:58" pos:end="80:58">=</operator> <call pos:start="80:60" pos:end="80:74"><name pos:start="80:60" pos:end="80:67">get_bits</name><argument_list pos:start="80:68" pos:end="80:74">(<argument pos:start="80:69" pos:end="80:70"><expr pos:start="80:69" pos:end="80:70"><name pos:start="80:69" pos:end="80:70">gb</name></expr></argument>, <argument pos:start="80:73" pos:end="80:73"><expr pos:start="80:73" pos:end="80:73"><literal type="number" pos:start="80:73" pos:end="80:73">3</literal></expr></argument>)</argument_list></call> <operator pos:start="80:76" pos:end="80:76">+</operator> <literal type="number" pos:start="80:78" pos:end="80:78">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="82:17" pos:end="82:75"><expr pos:start="82:17" pos:end="82:74"><name pos:start="82:17" pos:end="82:56"><name pos:start="82:17" pos:end="82:27">floor_setup</name><operator pos:start="82:28" pos:end="82:29">-&gt;</operator><name pos:start="82:30" pos:end="82:33">data</name><operator pos:start="82:34" pos:end="82:34">.</operator><name pos:start="82:35" pos:end="82:36">t1</name><operator pos:start="82:37" pos:end="82:37">.</operator><name pos:start="82:38" pos:end="82:53">class_subclasses</name><index pos:start="82:54" pos:end="82:56">[<expr pos:start="82:55" pos:end="82:55"><name pos:start="82:55" pos:end="82:55">j</name></expr>]</index></name> <operator pos:start="82:58" pos:end="82:58">=</operator> <call pos:start="82:60" pos:end="82:74"><name pos:start="82:60" pos:end="82:67">get_bits</name><argument_list pos:start="82:68" pos:end="82:74">(<argument pos:start="82:69" pos:end="82:70"><expr pos:start="82:69" pos:end="82:70"><name pos:start="82:69" pos:end="82:70">gb</name></expr></argument>, <argument pos:start="82:73" pos:end="82:73"><expr pos:start="82:73" pos:end="82:73"><literal type="number" pos:start="82:73" pos:end="82:73">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="86:17" pos:end="90:66"><expr pos:start="86:17" pos:end="90:65"><call pos:start="86:17" pos:end="90:65"><name pos:start="86:17" pos:end="86:23">av_dlog</name><argument_list pos:start="86:24" pos:end="90:65">(<argument pos:start="86:25" pos:end="86:28"><expr pos:start="86:25" pos:end="86:28"><name pos:start="86:25" pos:end="86:28">NULL</name></expr></argument>, <argument pos:start="86:31" pos:end="86:75"><expr pos:start="86:31" pos:end="86:75"><literal type="string" pos:start="86:31" pos:end="86:75">" %d floor %d class dim: %d subclasses %d \n"</literal></expr></argument>, <argument pos:start="86:78" pos:end="86:78"><expr pos:start="86:78" pos:end="86:78"><name pos:start="86:78" pos:end="86:78">i</name></expr></argument>, <argument pos:start="86:81" pos:end="86:81"><expr pos:start="86:81" pos:end="86:81"><name pos:start="86:81" pos:end="86:81">j</name></expr></argument>,

                        <argument pos:start="88:25" pos:end="88:64"><expr pos:start="88:25" pos:end="88:64"><name pos:start="88:25" pos:end="88:64"><name pos:start="88:25" pos:end="88:35">floor_setup</name><operator pos:start="88:36" pos:end="88:37">-&gt;</operator><name pos:start="88:38" pos:end="88:41">data</name><operator pos:start="88:42" pos:end="88:42">.</operator><name pos:start="88:43" pos:end="88:44">t1</name><operator pos:start="88:45" pos:end="88:45">.</operator><name pos:start="88:46" pos:end="88:61">class_dimensions</name><index pos:start="88:62" pos:end="88:64">[<expr pos:start="88:63" pos:end="88:63"><name pos:start="88:63" pos:end="88:63">j</name></expr>]</index></name></expr></argument>,

                        <argument pos:start="90:25" pos:end="90:64"><expr pos:start="90:25" pos:end="90:64"><name pos:start="90:25" pos:end="90:64"><name pos:start="90:25" pos:end="90:35">floor_setup</name><operator pos:start="90:36" pos:end="90:37">-&gt;</operator><name pos:start="90:38" pos:end="90:41">data</name><operator pos:start="90:42" pos:end="90:42">.</operator><name pos:start="90:43" pos:end="90:44">t1</name><operator pos:start="90:45" pos:end="90:45">.</operator><name pos:start="90:46" pos:end="90:61">class_subclasses</name><index pos:start="90:62" pos:end="90:64">[<expr pos:start="90:63" pos:end="90:63"><name pos:start="90:63" pos:end="90:63">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="94:17" pos:end="325:13"><if pos:start="94:17" pos:end="325:13">if <condition pos:start="94:20" pos:end="94:61">(<expr pos:start="94:21" pos:end="94:60"><name pos:start="94:21" pos:end="94:60"><name pos:start="94:21" pos:end="94:31">floor_setup</name><operator pos:start="94:32" pos:end="94:33">-&gt;</operator><name pos:start="94:34" pos:end="94:37">data</name><operator pos:start="94:38" pos:end="94:38">.</operator><name pos:start="94:39" pos:end="94:40">t1</name><operator pos:start="94:41" pos:end="94:41">.</operator><name pos:start="94:42" pos:end="94:57">class_subclasses</name><index pos:start="94:58" pos:end="94:60">[<expr pos:start="94:59" pos:end="94:59"><name pos:start="94:59" pos:end="94:59">j</name></expr>]</index></name></expr>)</condition> <block pos:start="94:63" pos:end="325:13">{<block_content pos:start="96:21" pos:end="325:13">

                    <macro pos:start="96:21" pos:end="96:104"><name pos:start="96:21" pos:end="96:39">GET_VALIDATED_INDEX</name><argument_list pos:start="96:40" pos:end="96:104">(<argument pos:start="96:41" pos:end="96:80">floor_setup-&gt;data.t1.class_masterbook[j]</argument>, <argument pos:start="96:83" pos:end="96:83"><literal type="number" pos:start="96:83" pos:end="96:83">8</literal></argument>, <argument pos:start="96:86" pos:end="96:103">vc-&gt;codebook_count</argument>)</argument_list></macro>



                    <expr_stmt pos:start="100:21" pos:end="100:100"><expr pos:start="100:21" pos:end="100:99"><call pos:start="100:21" pos:end="100:99"><name pos:start="100:21" pos:end="100:27">av_dlog</name><argument_list pos:start="100:28" pos:end="100:99">(<argument pos:start="100:29" pos:end="100:32"><expr pos:start="100:29" pos:end="100:32"><name pos:start="100:29" pos:end="100:32">NULL</name></expr></argument>, <argument pos:start="100:35" pos:end="100:56"><expr pos:start="100:35" pos:end="100:56"><literal type="string" pos:start="100:35" pos:end="100:56">"   masterbook: %d \n"</literal></expr></argument>, <argument pos:start="100:59" pos:end="100:98"><expr pos:start="100:59" pos:end="100:98"><name pos:start="100:59" pos:end="100:98"><name pos:start="100:59" pos:end="100:69">floor_setup</name><operator pos:start="100:70" pos:end="100:71">-&gt;</operator><name pos:start="100:72" pos:end="100:75">data</name><operator pos:start="100:76" pos:end="100:76">.</operator><name pos:start="100:77" pos:end="100:78">t1</name><operator pos:start="100:79" pos:end="100:79">.</operator><name pos:start="100:80" pos:end="100:95">class_masterbook</name><index pos:start="100:96" pos:end="100:98">[<expr pos:start="100:97" pos:end="100:97"><name pos:start="100:97" pos:end="100:97">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




                <for pos:start="105:17" pos:end="325:13">for <control pos:start="105:21" pos:end="105:85">(<init pos:start="105:22" pos:end="105:27"><expr pos:start="105:22" pos:end="105:26"><name pos:start="105:22" pos:end="105:22">k</name> <operator pos:start="105:24" pos:end="105:24">=</operator> <literal type="number" pos:start="105:26" pos:end="105:26">0</literal></expr>;</init> <condition pos:start="105:29" pos:end="105:80"><expr pos:start="105:29" pos:end="105:79"><name pos:start="105:29" pos:end="105:29">k</name> <operator pos:start="105:31" pos:end="105:31">&lt;</operator> <operator pos:start="105:33" pos:end="105:33">(</operator><literal type="number" pos:start="105:34" pos:end="105:34">1</literal> <operator pos:start="105:36" pos:end="105:37">&lt;&lt;</operator> <name pos:start="105:39" pos:end="105:78"><name pos:start="105:39" pos:end="105:49">floor_setup</name><operator pos:start="105:50" pos:end="105:51">-&gt;</operator><name pos:start="105:52" pos:end="105:55">data</name><operator pos:start="105:56" pos:end="105:56">.</operator><name pos:start="105:57" pos:end="105:58">t1</name><operator pos:start="105:59" pos:end="105:59">.</operator><name pos:start="105:60" pos:end="105:75">class_subclasses</name><index pos:start="105:76" pos:end="105:78">[<expr pos:start="105:77" pos:end="105:77"><name pos:start="105:77" pos:end="105:77">j</name></expr>]</index></name><operator pos:start="105:79" pos:end="105:79">)</operator></expr>;</condition> <incr pos:start="105:82" pos:end="105:84"><expr pos:start="105:82" pos:end="105:84"><operator pos:start="105:82" pos:end="105:83">++</operator><name pos:start="105:84" pos:end="105:84">k</name></expr></incr>)</control> <block pos:start="105:87" pos:end="325:13">{<block_content pos:start="107:21" pos:end="325:13">

                    <decl_stmt pos:start="107:21" pos:end="107:55"><decl pos:start="107:21" pos:end="107:54"><type pos:start="107:21" pos:end="107:27"><name pos:start="107:21" pos:end="107:27">int16_t</name></type> <name pos:start="107:29" pos:end="107:32">bits</name> <init pos:start="107:34" pos:end="107:54">= <expr pos:start="107:36" pos:end="107:54"><call pos:start="107:36" pos:end="107:50"><name pos:start="107:36" pos:end="107:43">get_bits</name><argument_list pos:start="107:44" pos:end="107:50">(<argument pos:start="107:45" pos:end="107:46"><expr pos:start="107:45" pos:end="107:46"><name pos:start="107:45" pos:end="107:46">gb</name></expr></argument>, <argument pos:start="107:49" pos:end="107:49"><expr pos:start="107:49" pos:end="107:49"><literal type="number" pos:start="107:49" pos:end="107:49">8</literal></expr></argument>)</argument_list></call> <operator pos:start="107:52" pos:end="107:52">-</operator> <literal type="number" pos:start="107:54" pos:end="107:54">1</literal></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="109:21" pos:end="113:69"><if pos:start="109:21" pos:end="113:69">if <condition pos:start="109:24" pos:end="109:35">(<expr pos:start="109:25" pos:end="109:34"><name pos:start="109:25" pos:end="109:28">bits</name> <operator pos:start="109:30" pos:end="109:31">!=</operator> <operator pos:start="109:33" pos:end="109:33">-</operator><literal type="number" pos:start="109:34" pos:end="109:34">1</literal></expr>)</condition><block type="pseudo" pos:start="111:25" pos:end="113:69"><block_content pos:start="111:25" pos:end="113:69">

                        <macro pos:start="111:25" pos:end="111:64"><name pos:start="111:25" pos:end="111:38">VALIDATE_INDEX</name><argument_list pos:start="111:39" pos:end="111:64">(<argument pos:start="111:40" pos:end="111:43">bits</argument>, <argument pos:start="111:46" pos:end="111:63">vc-&gt;codebook_count</argument>)</argument_list></macro>

                    <expr_stmt pos:start="113:21" pos:end="113:69"><expr pos:start="113:21" pos:end="113:68"><name pos:start="113:21" pos:end="113:61"><name pos:start="113:21" pos:end="113:31">floor_setup</name><operator pos:start="113:32" pos:end="113:33">-&gt;</operator><name pos:start="113:34" pos:end="113:37">data</name><operator pos:start="113:38" pos:end="113:38">.</operator><name pos:start="113:39" pos:end="113:40">t1</name><operator pos:start="113:41" pos:end="113:41">.</operator><name pos:start="113:42" pos:end="113:55">subclass_books</name><index pos:start="113:56" pos:end="113:58">[<expr pos:start="113:57" pos:end="113:57"><name pos:start="113:57" pos:end="113:57">j</name></expr>]</index><index pos:start="113:59" pos:end="113:61">[<expr pos:start="113:60" pos:end="113:60"><name pos:start="113:60" pos:end="113:60">k</name></expr>]</index></name> <operator pos:start="113:63" pos:end="113:63">=</operator> <name pos:start="113:65" pos:end="113:68">bits</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <expr_stmt pos:start="117:21" pos:end="117:104"><expr pos:start="117:21" pos:end="117:103"><call pos:start="117:21" pos:end="117:103"><name pos:start="117:21" pos:end="117:27">av_dlog</name><argument_list pos:start="117:28" pos:end="117:103">(<argument pos:start="117:29" pos:end="117:32"><expr pos:start="117:29" pos:end="117:32"><name pos:start="117:29" pos:end="117:32">NULL</name></expr></argument>, <argument pos:start="117:35" pos:end="117:56"><expr pos:start="117:35" pos:end="117:56"><literal type="string" pos:start="117:35" pos:end="117:56">"    book %d. : %d \n"</literal></expr></argument>, <argument pos:start="117:59" pos:end="117:59"><expr pos:start="117:59" pos:end="117:59"><name pos:start="117:59" pos:end="117:59">k</name></expr></argument>, <argument pos:start="117:62" pos:end="117:102"><expr pos:start="117:62" pos:end="117:102"><name pos:start="117:62" pos:end="117:102"><name pos:start="117:62" pos:end="117:72">floor_setup</name><operator pos:start="117:73" pos:end="117:74">-&gt;</operator><name pos:start="117:75" pos:end="117:78">data</name><operator pos:start="117:79" pos:end="117:79">.</operator><name pos:start="117:80" pos:end="117:81">t1</name><operator pos:start="117:82" pos:end="117:82">.</operator><name pos:start="117:83" pos:end="117:96">subclass_books</name><index pos:start="117:97" pos:end="117:99">[<expr pos:start="117:98" pos:end="117:98"><name pos:start="117:98" pos:end="117:98">j</name></expr>]</index><index pos:start="117:100" pos:end="117:102">[<expr pos:start="117:101" pos:end="117:101"><name pos:start="117:101" pos:end="117:101">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





            <expr_stmt pos:start="123:13" pos:end="123:66"><expr pos:start="123:13" pos:end="123:65"><name pos:start="123:13" pos:end="123:43"><name pos:start="123:13" pos:end="123:23">floor_setup</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:29">data</name><operator pos:start="123:30" pos:end="123:30">.</operator><name pos:start="123:31" pos:end="123:32">t1</name><operator pos:start="123:33" pos:end="123:33">.</operator><name pos:start="123:34" pos:end="123:43">multiplier</name></name> <operator pos:start="123:45" pos:end="123:45">=</operator> <call pos:start="123:47" pos:end="123:61"><name pos:start="123:47" pos:end="123:54">get_bits</name><argument_list pos:start="123:55" pos:end="123:61">(<argument pos:start="123:56" pos:end="123:57"><expr pos:start="123:56" pos:end="123:57"><name pos:start="123:56" pos:end="123:57">gb</name></expr></argument>, <argument pos:start="123:60" pos:end="123:60"><expr pos:start="123:60" pos:end="123:60"><literal type="number" pos:start="123:60" pos:end="123:60">2</literal></expr></argument>)</argument_list></call> <operator pos:start="123:63" pos:end="123:63">+</operator> <literal type="number" pos:start="123:65" pos:end="123:65">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:48"><expr pos:start="125:13" pos:end="125:47"><name pos:start="125:13" pos:end="125:43"><name pos:start="125:13" pos:end="125:23">floor_setup</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:29">data</name><operator pos:start="125:30" pos:end="125:30">.</operator><name pos:start="125:31" pos:end="125:32">t1</name><operator pos:start="125:33" pos:end="125:33">.</operator><name pos:start="125:34" pos:end="125:43">x_list_dim</name></name> <operator pos:start="125:45" pos:end="125:45">=</operator> <literal type="number" pos:start="125:47" pos:end="125:47">2</literal></expr>;</expr_stmt>



            <for pos:start="129:13" pos:end="131:128">for <control pos:start="129:17" pos:end="129:65">(<init pos:start="129:18" pos:end="129:23"><expr pos:start="129:18" pos:end="129:22"><name pos:start="129:18" pos:end="129:18">j</name> <operator pos:start="129:20" pos:end="129:20">=</operator> <literal type="number" pos:start="129:22" pos:end="129:22">0</literal></expr>;</init> <condition pos:start="129:25" pos:end="129:60"><expr pos:start="129:25" pos:end="129:59"><name pos:start="129:25" pos:end="129:25">j</name> <operator pos:start="129:27" pos:end="129:27">&lt;</operator> <name pos:start="129:29" pos:end="129:59"><name pos:start="129:29" pos:end="129:39">floor_setup</name><operator pos:start="129:40" pos:end="129:41">-&gt;</operator><name pos:start="129:42" pos:end="129:45">data</name><operator pos:start="129:46" pos:end="129:46">.</operator><name pos:start="129:47" pos:end="129:48">t1</name><operator pos:start="129:49" pos:end="129:49">.</operator><name pos:start="129:50" pos:end="129:59">partitions</name></name></expr>;</condition> <incr pos:start="129:62" pos:end="129:64"><expr pos:start="129:62" pos:end="129:64"><operator pos:start="129:62" pos:end="129:63">++</operator><name pos:start="129:64" pos:end="129:64">j</name></expr></incr>)</control><block type="pseudo" pos:start="131:17" pos:end="131:128"><block_content pos:start="131:17" pos:end="131:128">

                <expr_stmt pos:start="131:17" pos:end="131:128"><expr pos:start="131:17" pos:end="131:127"><name pos:start="131:17" pos:end="131:47"><name pos:start="131:17" pos:end="131:27">floor_setup</name><operator pos:start="131:28" pos:end="131:29">-&gt;</operator><name pos:start="131:30" pos:end="131:33">data</name><operator pos:start="131:34" pos:end="131:34">.</operator><name pos:start="131:35" pos:end="131:36">t1</name><operator pos:start="131:37" pos:end="131:37">.</operator><name pos:start="131:38" pos:end="131:47">x_list_dim</name></name><operator pos:start="131:48" pos:end="131:49">+=</operator><name pos:start="131:50" pos:end="131:127"><name pos:start="131:50" pos:end="131:60">floor_setup</name><operator pos:start="131:61" pos:end="131:62">-&gt;</operator><name pos:start="131:63" pos:end="131:66">data</name><operator pos:start="131:67" pos:end="131:67">.</operator><name pos:start="131:68" pos:end="131:69">t1</name><operator pos:start="131:70" pos:end="131:70">.</operator><name pos:start="131:71" pos:end="131:86">class_dimensions</name><index pos:start="131:87" pos:end="131:127">[<expr pos:start="131:88" pos:end="131:126"><name pos:start="131:88" pos:end="131:126"><name pos:start="131:88" pos:end="131:98">floor_setup</name><operator pos:start="131:99" pos:end="131:100">-&gt;</operator><name pos:start="131:101" pos:end="131:104">data</name><operator pos:start="131:105" pos:end="131:105">.</operator><name pos:start="131:106" pos:end="131:107">t1</name><operator pos:start="131:108" pos:end="131:108">.</operator><name pos:start="131:109" pos:end="131:123">partition_class</name><index pos:start="131:124" pos:end="131:126">[<expr pos:start="131:125" pos:end="131:125"><name pos:start="131:125" pos:end="131:125">j</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="135:13" pos:end="137:87"><expr pos:start="135:13" pos:end="137:86"><name pos:start="135:13" pos:end="135:37"><name pos:start="135:13" pos:end="135:23">floor_setup</name><operator pos:start="135:24" pos:end="135:25">-&gt;</operator><name pos:start="135:26" pos:end="135:29">data</name><operator pos:start="135:30" pos:end="135:30">.</operator><name pos:start="135:31" pos:end="135:32">t1</name><operator pos:start="135:33" pos:end="135:33">.</operator><name pos:start="135:34" pos:end="135:37">list</name></name> <operator pos:start="135:39" pos:end="135:39">=</operator> <call pos:start="135:41" pos:end="137:86"><name pos:start="135:41" pos:end="135:50">av_mallocz</name><argument_list pos:start="135:51" pos:end="137:86">(<argument pos:start="135:52" pos:end="137:85"><expr pos:start="135:52" pos:end="137:85"><name pos:start="135:52" pos:end="135:82"><name pos:start="135:52" pos:end="135:62">floor_setup</name><operator pos:start="135:63" pos:end="135:64">-&gt;</operator><name pos:start="135:65" pos:end="135:68">data</name><operator pos:start="135:69" pos:end="135:69">.</operator><name pos:start="135:70" pos:end="135:71">t1</name><operator pos:start="135:72" pos:end="135:72">.</operator><name pos:start="135:73" pos:end="135:82">x_list_dim</name></name> <operator pos:start="135:84" pos:end="135:84">*</operator>

                                                   <sizeof pos:start="137:52" pos:end="137:85">sizeof<argument_list pos:start="137:58" pos:end="137:85">(<argument pos:start="137:59" pos:end="137:84"><expr pos:start="137:59" pos:end="137:84"><operator pos:start="137:59" pos:end="137:59">*</operator><name pos:start="137:60" pos:end="137:84"><name pos:start="137:60" pos:end="137:70">floor_setup</name><operator pos:start="137:71" pos:end="137:72">-&gt;</operator><name pos:start="137:73" pos:end="137:76">data</name><operator pos:start="137:77" pos:end="137:77">.</operator><name pos:start="137:78" pos:end="137:79">t1</name><operator pos:start="137:80" pos:end="137:80">.</operator><name pos:start="137:81" pos:end="137:84">list</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>





            <expr_stmt pos:start="143:13" pos:end="143:40"><expr pos:start="143:13" pos:end="143:39"><name pos:start="143:13" pos:end="143:21">rangebits</name> <operator pos:start="143:23" pos:end="143:23">=</operator> <call pos:start="143:25" pos:end="143:39"><name pos:start="143:25" pos:end="143:32">get_bits</name><argument_list pos:start="143:33" pos:end="143:39">(<argument pos:start="143:34" pos:end="143:35"><expr pos:start="143:34" pos:end="143:35"><name pos:start="143:34" pos:end="143:35">gb</name></expr></argument>, <argument pos:start="143:38" pos:end="143:38"><expr pos:start="143:38" pos:end="143:38"><literal type="number" pos:start="143:38" pos:end="143:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:40"><expr pos:start="145:13" pos:end="145:39"><name pos:start="145:13" pos:end="145:20">rangemax</name> <operator pos:start="145:22" pos:end="145:22">=</operator> <operator pos:start="145:24" pos:end="145:24">(</operator><literal type="number" pos:start="145:25" pos:end="145:25">1</literal> <operator pos:start="145:27" pos:end="145:28">&lt;&lt;</operator> <name pos:start="145:30" pos:end="145:38">rangebits</name><operator pos:start="145:39" pos:end="145:39">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="147:13" pos:end="152:55"><if pos:start="147:13" pos:end="152:55">if <condition pos:start="147:16" pos:end="147:48">(<expr pos:start="147:17" pos:end="147:47"><name pos:start="147:17" pos:end="147:24">rangemax</name> <operator pos:start="147:26" pos:end="147:26">&gt;</operator> <name pos:start="147:28" pos:end="147:43"><name pos:start="147:28" pos:end="147:29">vc</name><operator pos:start="147:30" pos:end="147:31">-&gt;</operator><name pos:start="147:32" pos:end="147:40">blocksize</name><index pos:start="147:41" pos:end="147:43">[<expr pos:start="147:42" pos:end="147:42"><literal type="number" pos:start="147:42" pos:end="147:42">1</literal></expr>]</index></name> <operator pos:start="147:45" pos:end="147:45">/</operator> <literal type="number" pos:start="147:47" pos:end="147:47">2</literal></expr>)</condition> <block pos:start="147:50" pos:end="152:54">{<block_content pos:start="150:24" pos:end="152:54">


                       <expr_stmt pos:start="150:24" pos:end="152:53"><expr pos:start="150:24" pos:end="150:81"><literal type="string" pos:start="150:24" pos:end="150:70">"Floor value is too large for blocksize: %u (%"</literal><name pos:start="150:71" pos:end="150:76">PRIu32</name><literal type="string" pos:start="150:77" pos:end="150:81">")\n"</literal></expr><operator pos:start="150:82" pos:end="150:82">,</operator>

                       <expr pos:start="152:24" pos:end="152:31"><name pos:start="152:24" pos:end="152:31">rangemax</name></expr><operator pos:start="152:32" pos:end="152:32">,</operator> <expr pos:start="152:34" pos:end="152:53"><name pos:start="152:34" pos:end="152:49"><name pos:start="152:34" pos:end="152:35">vc</name><operator pos:start="152:36" pos:end="152:37">-&gt;</operator><name pos:start="152:38" pos:end="152:46">blocksize</name><index pos:start="152:47" pos:end="152:49">[<expr pos:start="152:48" pos:end="152:48"><literal type="number" pos:start="152:48" pos:end="152:48">1</literal></expr>]</index></name> <operator pos:start="152:51" pos:end="152:51">/</operator> <literal type="number" pos:start="152:53" pos:end="152:53">2</literal></expr></expr_stmt>)</block_content></block><empty_stmt pos:start="152:55" pos:end="152:55">;</empty_stmt></if></if_stmt>



            <expr_stmt pos:start="156:13" pos:end="156:47"><expr pos:start="156:13" pos:end="156:46"><name pos:start="156:13" pos:end="156:40"><name pos:start="156:13" pos:end="156:23">floor_setup</name><operator pos:start="156:24" pos:end="156:25">-&gt;</operator><name pos:start="156:26" pos:end="156:29">data</name><operator pos:start="156:30" pos:end="156:30">.</operator><name pos:start="156:31" pos:end="156:32">t1</name><operator pos:start="156:33" pos:end="156:33">.</operator><name pos:start="156:34" pos:end="156:37">list</name><index pos:start="156:38" pos:end="156:40">[<expr pos:start="156:39" pos:end="156:39"><literal type="number" pos:start="156:39" pos:end="156:39">0</literal></expr>]</index></name><operator pos:start="156:41" pos:end="156:41">.</operator><name pos:start="156:42" pos:end="156:42">x</name> <operator pos:start="156:44" pos:end="156:44">=</operator> <literal type="number" pos:start="156:46" pos:end="156:46">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="158:13" pos:end="158:54"><expr pos:start="158:13" pos:end="158:53"><name pos:start="158:13" pos:end="158:40"><name pos:start="158:13" pos:end="158:23">floor_setup</name><operator pos:start="158:24" pos:end="158:25">-&gt;</operator><name pos:start="158:26" pos:end="158:29">data</name><operator pos:start="158:30" pos:end="158:30">.</operator><name pos:start="158:31" pos:end="158:32">t1</name><operator pos:start="158:33" pos:end="158:33">.</operator><name pos:start="158:34" pos:end="158:37">list</name><index pos:start="158:38" pos:end="158:40">[<expr pos:start="158:39" pos:end="158:39"><literal type="number" pos:start="158:39" pos:end="158:39">1</literal></expr>]</index></name><operator pos:start="158:41" pos:end="158:41">.</operator><name pos:start="158:42" pos:end="158:42">x</name> <operator pos:start="158:44" pos:end="158:44">=</operator> <name pos:start="158:46" pos:end="158:53">rangemax</name></expr>;</expr_stmt>



            <for pos:start="162:13" pos:end="325:13">for <control pos:start="162:17" pos:end="162:65">(<init pos:start="162:18" pos:end="162:23"><expr pos:start="162:18" pos:end="162:22"><name pos:start="162:18" pos:end="162:18">j</name> <operator pos:start="162:20" pos:end="162:20">=</operator> <literal type="number" pos:start="162:22" pos:end="162:22">0</literal></expr>;</init> <condition pos:start="162:25" pos:end="162:60"><expr pos:start="162:25" pos:end="162:59"><name pos:start="162:25" pos:end="162:25">j</name> <operator pos:start="162:27" pos:end="162:27">&lt;</operator> <name pos:start="162:29" pos:end="162:59"><name pos:start="162:29" pos:end="162:39">floor_setup</name><operator pos:start="162:40" pos:end="162:41">-&gt;</operator><name pos:start="162:42" pos:end="162:45">data</name><operator pos:start="162:46" pos:end="162:46">.</operator><name pos:start="162:47" pos:end="162:48">t1</name><operator pos:start="162:49" pos:end="162:49">.</operator><name pos:start="162:50" pos:end="162:59">partitions</name></name></expr>;</condition> <incr pos:start="162:62" pos:end="162:64"><expr pos:start="162:62" pos:end="162:64"><operator pos:start="162:62" pos:end="162:63">++</operator><name pos:start="162:64" pos:end="162:64">j</name></expr></incr>)</control> <block pos:start="162:67" pos:end="325:13">{<block_content pos:start="164:17" pos:end="325:13">

                <for pos:start="164:17" pos:end="325:13">for <control pos:start="164:21" pos:end="164:133">(<init pos:start="164:22" pos:end="164:27"><expr pos:start="164:22" pos:end="164:26"><name pos:start="164:22" pos:end="164:22">k</name> <operator pos:start="164:24" pos:end="164:24">=</operator> <literal type="number" pos:start="164:26" pos:end="164:26">0</literal></expr>;</init> <condition pos:start="164:29" pos:end="164:111"><expr pos:start="164:29" pos:end="164:110"><name pos:start="164:29" pos:end="164:29">k</name> <operator pos:start="164:31" pos:end="164:31">&lt;</operator> <name pos:start="164:33" pos:end="164:110"><name pos:start="164:33" pos:end="164:43">floor_setup</name><operator pos:start="164:44" pos:end="164:45">-&gt;</operator><name pos:start="164:46" pos:end="164:49">data</name><operator pos:start="164:50" pos:end="164:50">.</operator><name pos:start="164:51" pos:end="164:52">t1</name><operator pos:start="164:53" pos:end="164:53">.</operator><name pos:start="164:54" pos:end="164:69">class_dimensions</name><index pos:start="164:70" pos:end="164:110">[<expr pos:start="164:71" pos:end="164:109"><name pos:start="164:71" pos:end="164:109"><name pos:start="164:71" pos:end="164:81">floor_setup</name><operator pos:start="164:82" pos:end="164:83">-&gt;</operator><name pos:start="164:84" pos:end="164:87">data</name><operator pos:start="164:88" pos:end="164:88">.</operator><name pos:start="164:89" pos:end="164:90">t1</name><operator pos:start="164:91" pos:end="164:91">.</operator><name pos:start="164:92" pos:end="164:106">partition_class</name><index pos:start="164:107" pos:end="164:109">[<expr pos:start="164:108" pos:end="164:108"><name pos:start="164:108" pos:end="164:108">j</name></expr>]</index></name></expr>]</index></name></expr>;</condition> <incr pos:start="164:113" pos:end="164:132"><expr pos:start="164:113" pos:end="164:115"><operator pos:start="164:113" pos:end="164:114">++</operator><name pos:start="164:115" pos:end="164:115">k</name></expr><operator pos:start="164:116" pos:end="164:116">,</operator> <expr pos:start="164:118" pos:end="164:132"><operator pos:start="164:118" pos:end="164:119">++</operator><name pos:start="164:120" pos:end="164:132">floor1_values</name></expr></incr>)</control> <block pos:start="164:135" pos:end="325:13">{<block_content pos:start="166:21" pos:end="325:13">

                    <expr_stmt pos:start="166:21" pos:end="166:89"><expr pos:start="166:21" pos:end="166:88"><name pos:start="166:21" pos:end="166:60"><name pos:start="166:21" pos:end="166:31">floor_setup</name><operator pos:start="166:32" pos:end="166:33">-&gt;</operator><name pos:start="166:34" pos:end="166:37">data</name><operator pos:start="166:38" pos:end="166:38">.</operator><name pos:start="166:39" pos:end="166:40">t1</name><operator pos:start="166:41" pos:end="166:41">.</operator><name pos:start="166:42" pos:end="166:45">list</name><index pos:start="166:46" pos:end="166:60">[<expr pos:start="166:47" pos:end="166:59"><name pos:start="166:47" pos:end="166:59">floor1_values</name></expr>]</index></name><operator pos:start="166:61" pos:end="166:61">.</operator><name pos:start="166:62" pos:end="166:62">x</name> <operator pos:start="166:64" pos:end="166:64">=</operator> <call pos:start="166:66" pos:end="166:88"><name pos:start="166:66" pos:end="166:73">get_bits</name><argument_list pos:start="166:74" pos:end="166:88">(<argument pos:start="166:75" pos:end="166:76"><expr pos:start="166:75" pos:end="166:76"><name pos:start="166:75" pos:end="166:76">gb</name></expr></argument>, <argument pos:start="166:79" pos:end="166:87"><expr pos:start="166:79" pos:end="166:87"><name pos:start="166:79" pos:end="166:87">rangebits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="170:21" pos:end="172:72"><expr pos:start="170:21" pos:end="172:71"><call pos:start="170:21" pos:end="172:71"><name pos:start="170:21" pos:end="170:27">av_dlog</name><argument_list pos:start="170:28" pos:end="172:71">(<argument pos:start="170:29" pos:end="170:32"><expr pos:start="170:29" pos:end="170:32"><name pos:start="170:29" pos:end="170:32">NULL</name></expr></argument>, <argument pos:start="170:35" pos:end="170:61"><expr pos:start="170:35" pos:end="170:61"><literal type="string" pos:start="170:35" pos:end="170:61">" %u. floor1 Y coord. %d\n"</literal></expr></argument>, <argument pos:start="170:64" pos:end="170:76"><expr pos:start="170:64" pos:end="170:76"><name pos:start="170:64" pos:end="170:76">floor1_values</name></expr></argument>,

                            <argument pos:start="172:29" pos:end="172:70"><expr pos:start="172:29" pos:end="172:70"><name pos:start="172:29" pos:end="172:68"><name pos:start="172:29" pos:end="172:39">floor_setup</name><operator pos:start="172:40" pos:end="172:41">-&gt;</operator><name pos:start="172:42" pos:end="172:45">data</name><operator pos:start="172:46" pos:end="172:46">.</operator><name pos:start="172:47" pos:end="172:48">t1</name><operator pos:start="172:49" pos:end="172:49">.</operator><name pos:start="172:50" pos:end="172:53">list</name><index pos:start="172:54" pos:end="172:68">[<expr pos:start="172:55" pos:end="172:67"><name pos:start="172:55" pos:end="172:67">floor1_values</name></expr>]</index></name><operator pos:start="172:69" pos:end="172:69">.</operator><name pos:start="172:70" pos:end="172:70">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





<comment type="line" pos:start="178:1" pos:end="178:58">// Precalculate order of x coordinates - needed for decode</comment>

            <if_stmt pos:start="180:13" pos:end="325:13"><if pos:start="180:13" pos:end="188:9">if <condition pos:start="180:16" pos:end="184:77">(<expr pos:start="180:17" pos:end="184:76"><call pos:start="180:17" pos:end="184:76"><name pos:start="180:17" pos:end="180:43">ff_vorbis_ready_floor1_list</name><argument_list pos:start="180:44" pos:end="184:76">(<argument pos:start="180:45" pos:end="180:58"><expr pos:start="180:45" pos:end="180:58"><name pos:start="180:45" pos:end="180:58"><name pos:start="180:45" pos:end="180:46">vc</name><operator pos:start="180:47" pos:end="180:48">-&gt;</operator><name pos:start="180:49" pos:end="180:58">avccontext</name></name></expr></argument>,

                                            <argument pos:start="182:45" pos:end="182:69"><expr pos:start="182:45" pos:end="182:69"><name pos:start="182:45" pos:end="182:69"><name pos:start="182:45" pos:end="182:55">floor_setup</name><operator pos:start="182:56" pos:end="182:57">-&gt;</operator><name pos:start="182:58" pos:end="182:61">data</name><operator pos:start="182:62" pos:end="182:62">.</operator><name pos:start="182:63" pos:end="182:64">t1</name><operator pos:start="182:65" pos:end="182:65">.</operator><name pos:start="182:66" pos:end="182:69">list</name></name></expr></argument>,

                                            <argument pos:start="184:45" pos:end="184:75"><expr pos:start="184:45" pos:end="184:75"><name pos:start="184:45" pos:end="184:75"><name pos:start="184:45" pos:end="184:55">floor_setup</name><operator pos:start="184:56" pos:end="184:57">-&gt;</operator><name pos:start="184:58" pos:end="184:61">data</name><operator pos:start="184:62" pos:end="184:62">.</operator><name pos:start="184:63" pos:end="184:64">t1</name><operator pos:start="184:65" pos:end="184:65">.</operator><name pos:start="184:66" pos:end="184:75">x_list_dim</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="184:79" pos:end="188:9">{<block_content>



        </block_content>}</block></if> <if type="elseif" pos:start="188:11" pos:end="325:13">else if <condition pos:start="188:19" pos:end="188:48">(<expr pos:start="188:20" pos:end="188:47"><name pos:start="188:20" pos:end="188:42"><name pos:start="188:20" pos:end="188:30">floor_setup</name><operator pos:start="188:31" pos:end="188:32">-&gt;</operator><name pos:start="188:33" pos:end="188:42">floor_type</name></name> <operator pos:start="188:44" pos:end="188:45">==</operator> <literal type="number" pos:start="188:47" pos:end="188:47">0</literal></expr>)</condition> <block pos:start="188:50" pos:end="325:13">{<block_content pos:start="190:13" pos:end="325:13">

            <decl_stmt pos:start="190:13" pos:end="190:42"><decl pos:start="190:13" pos:end="190:41"><type pos:start="190:13" pos:end="190:20"><name pos:start="190:13" pos:end="190:20">unsigned</name></type> <name pos:start="190:22" pos:end="190:37">max_codebook_dim</name> <init pos:start="190:39" pos:end="190:41">= <expr pos:start="190:41" pos:end="190:41"><literal type="number" pos:start="190:41" pos:end="190:41">0</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="194:13" pos:end="194:55"><expr pos:start="194:13" pos:end="194:54"><name pos:start="194:13" pos:end="194:31"><name pos:start="194:13" pos:end="194:23">floor_setup</name><operator pos:start="194:24" pos:end="194:25">-&gt;</operator><name pos:start="194:26" pos:end="194:31">decode</name></name> <operator pos:start="194:33" pos:end="194:33">=</operator> <name pos:start="194:35" pos:end="194:54">vorbis_floor0_decode</name></expr>;</expr_stmt>



            <expr_stmt pos:start="198:13" pos:end="198:67"><expr pos:start="198:13" pos:end="198:66"><name pos:start="198:13" pos:end="198:38"><name pos:start="198:13" pos:end="198:23">floor_setup</name><operator pos:start="198:24" pos:end="198:25">-&gt;</operator><name pos:start="198:26" pos:end="198:29">data</name><operator pos:start="198:30" pos:end="198:30">.</operator><name pos:start="198:31" pos:end="198:32">t0</name><operator pos:start="198:33" pos:end="198:33">.</operator><name pos:start="198:34" pos:end="198:38">order</name></name>          <operator pos:start="198:49" pos:end="198:49">=</operator> <call pos:start="198:51" pos:end="198:66"><name pos:start="198:51" pos:end="198:58">get_bits</name><argument_list pos:start="198:59" pos:end="198:66">(<argument pos:start="198:60" pos:end="198:61"><expr pos:start="198:60" pos:end="198:61"><name pos:start="198:60" pos:end="198:61">gb</name></expr></argument>,  <argument pos:start="198:65" pos:end="198:65"><expr pos:start="198:65" pos:end="198:65"><literal type="number" pos:start="198:65" pos:end="198:65">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="200:13" pos:end="200:67"><expr pos:start="200:13" pos:end="200:66"><name pos:start="200:13" pos:end="200:37"><name pos:start="200:13" pos:end="200:23">floor_setup</name><operator pos:start="200:24" pos:end="200:25">-&gt;</operator><name pos:start="200:26" pos:end="200:29">data</name><operator pos:start="200:30" pos:end="200:30">.</operator><name pos:start="200:31" pos:end="200:32">t0</name><operator pos:start="200:33" pos:end="200:33">.</operator><name pos:start="200:34" pos:end="200:37">rate</name></name>           <operator pos:start="200:49" pos:end="200:49">=</operator> <call pos:start="200:51" pos:end="200:66"><name pos:start="200:51" pos:end="200:58">get_bits</name><argument_list pos:start="200:59" pos:end="200:66">(<argument pos:start="200:60" pos:end="200:61"><expr pos:start="200:60" pos:end="200:61"><name pos:start="200:60" pos:end="200:61">gb</name></expr></argument>, <argument pos:start="200:64" pos:end="200:65"><expr pos:start="200:64" pos:end="200:65"><literal type="number" pos:start="200:64" pos:end="200:65">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="202:13" pos:end="202:67"><expr pos:start="202:13" pos:end="202:66"><name pos:start="202:13" pos:end="202:46"><name pos:start="202:13" pos:end="202:23">floor_setup</name><operator pos:start="202:24" pos:end="202:25">-&gt;</operator><name pos:start="202:26" pos:end="202:29">data</name><operator pos:start="202:30" pos:end="202:30">.</operator><name pos:start="202:31" pos:end="202:32">t0</name><operator pos:start="202:33" pos:end="202:33">.</operator><name pos:start="202:34" pos:end="202:46">bark_map_size</name></name>  <operator pos:start="202:49" pos:end="202:49">=</operator> <call pos:start="202:51" pos:end="202:66"><name pos:start="202:51" pos:end="202:58">get_bits</name><argument_list pos:start="202:59" pos:end="202:66">(<argument pos:start="202:60" pos:end="202:61"><expr pos:start="202:60" pos:end="202:61"><name pos:start="202:60" pos:end="202:61">gb</name></expr></argument>, <argument pos:start="202:64" pos:end="202:65"><expr pos:start="202:64" pos:end="202:65"><literal type="number" pos:start="202:64" pos:end="202:65">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>






            <expr_stmt pos:start="209:13" pos:end="209:67"><expr pos:start="209:13" pos:end="209:66"><name pos:start="209:13" pos:end="209:47"><name pos:start="209:13" pos:end="209:23">floor_setup</name><operator pos:start="209:24" pos:end="209:25">-&gt;</operator><name pos:start="209:26" pos:end="209:29">data</name><operator pos:start="209:30" pos:end="209:30">.</operator><name pos:start="209:31" pos:end="209:32">t0</name><operator pos:start="209:33" pos:end="209:33">.</operator><name pos:start="209:34" pos:end="209:47">amplitude_bits</name></name> <operator pos:start="209:49" pos:end="209:49">=</operator> <call pos:start="209:51" pos:end="209:66"><name pos:start="209:51" pos:end="209:58">get_bits</name><argument_list pos:start="209:59" pos:end="209:66">(<argument pos:start="209:60" pos:end="209:61"><expr pos:start="209:60" pos:end="209:61"><name pos:start="209:60" pos:end="209:61">gb</name></expr></argument>,  <argument pos:start="209:65" pos:end="209:65"><expr pos:start="209:65" pos:end="209:65"><literal type="number" pos:start="209:65" pos:end="209:65">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="211:13" pos:end="213:58">/* zero would result in a div by zero later *

             * 2^0 - 1 == 0                             */</comment>

            <if_stmt pos:start="215:13" pos:end="218:57"><if pos:start="215:13" pos:end="218:57">if <condition pos:start="215:16" pos:end="215:57">(<expr pos:start="215:17" pos:end="215:56"><name pos:start="215:17" pos:end="215:51"><name pos:start="215:17" pos:end="215:27">floor_setup</name><operator pos:start="215:28" pos:end="215:29">-&gt;</operator><name pos:start="215:30" pos:end="215:33">data</name><operator pos:start="215:34" pos:end="215:34">.</operator><name pos:start="215:35" pos:end="215:36">t0</name><operator pos:start="215:37" pos:end="215:37">.</operator><name pos:start="215:38" pos:end="215:51">amplitude_bits</name></name> <operator pos:start="215:53" pos:end="215:54">==</operator> <literal type="number" pos:start="215:56" pos:end="215:56">0</literal></expr>)</condition> <block pos:start="215:59" pos:end="218:56">{<block_content pos:start="218:24" pos:end="218:56">


                       <expr_stmt pos:start="218:24" pos:end="218:55"><expr pos:start="218:24" pos:end="218:55"><literal type="string" pos:start="218:24" pos:end="218:55">"Floor 0 amplitude bits is 0.\n"</literal></expr></expr_stmt>)</block_content></block><empty_stmt pos:start="218:57" pos:end="218:57">;</empty_stmt></if></if_stmt>



            <expr_stmt pos:start="222:13" pos:end="222:68"><expr pos:start="222:13" pos:end="222:67"><name pos:start="222:13" pos:end="222:49"><name pos:start="222:13" pos:end="222:23">floor_setup</name><operator pos:start="222:24" pos:end="222:25">-&gt;</operator><name pos:start="222:26" pos:end="222:29">data</name><operator pos:start="222:30" pos:end="222:30">.</operator><name pos:start="222:31" pos:end="222:32">t0</name><operator pos:start="222:33" pos:end="222:33">.</operator><name pos:start="222:34" pos:end="222:49">amplitude_offset</name></name> <operator pos:start="222:51" pos:end="222:51">=</operator> <call pos:start="222:53" pos:end="222:67"><name pos:start="222:53" pos:end="222:60">get_bits</name><argument_list pos:start="222:61" pos:end="222:67">(<argument pos:start="222:62" pos:end="222:63"><expr pos:start="222:62" pos:end="222:63"><name pos:start="222:62" pos:end="222:63">gb</name></expr></argument>, <argument pos:start="222:66" pos:end="222:66"><expr pos:start="222:66" pos:end="222:66"><literal type="number" pos:start="222:66" pos:end="222:66">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="224:13" pos:end="224:72"><expr pos:start="224:13" pos:end="224:71"><name pos:start="224:13" pos:end="224:42"><name pos:start="224:13" pos:end="224:23">floor_setup</name><operator pos:start="224:24" pos:end="224:25">-&gt;</operator><name pos:start="224:26" pos:end="224:29">data</name><operator pos:start="224:30" pos:end="224:30">.</operator><name pos:start="224:31" pos:end="224:32">t0</name><operator pos:start="224:33" pos:end="224:33">.</operator><name pos:start="224:34" pos:end="224:42">num_books</name></name>        <operator pos:start="224:51" pos:end="224:51">=</operator> <call pos:start="224:53" pos:end="224:67"><name pos:start="224:53" pos:end="224:60">get_bits</name><argument_list pos:start="224:61" pos:end="224:67">(<argument pos:start="224:62" pos:end="224:63"><expr pos:start="224:62" pos:end="224:63"><name pos:start="224:62" pos:end="224:63">gb</name></expr></argument>, <argument pos:start="224:66" pos:end="224:66"><expr pos:start="224:66" pos:end="224:66"><literal type="number" pos:start="224:66" pos:end="224:66">4</literal></expr></argument>)</argument_list></call> <operator pos:start="224:69" pos:end="224:69">+</operator> <literal type="number" pos:start="224:71" pos:end="224:71">1</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="228:13" pos:end="228:43">/* allocate mem for booklist */</comment>

            <expr_stmt pos:start="230:13" pos:end="232:58"><expr pos:start="230:13" pos:end="232:57"><name pos:start="230:13" pos:end="230:42"><name pos:start="230:13" pos:end="230:23">floor_setup</name><operator pos:start="230:24" pos:end="230:25">-&gt;</operator><name pos:start="230:26" pos:end="230:29">data</name><operator pos:start="230:30" pos:end="230:30">.</operator><name pos:start="230:31" pos:end="230:32">t0</name><operator pos:start="230:33" pos:end="230:33">.</operator><name pos:start="230:34" pos:end="230:42">book_list</name></name> <operator pos:start="230:44" pos:end="230:44">=</operator>

                <call pos:start="232:17" pos:end="232:57"><name pos:start="232:17" pos:end="232:25">av_malloc</name><argument_list pos:start="232:26" pos:end="232:57">(<argument pos:start="232:27" pos:end="232:56"><expr pos:start="232:27" pos:end="232:56"><name pos:start="232:27" pos:end="232:56"><name pos:start="232:27" pos:end="232:37">floor_setup</name><operator pos:start="232:38" pos:end="232:39">-&gt;</operator><name pos:start="232:40" pos:end="232:43">data</name><operator pos:start="232:44" pos:end="232:44">.</operator><name pos:start="232:45" pos:end="232:46">t0</name><operator pos:start="232:47" pos:end="232:47">.</operator><name pos:start="232:48" pos:end="232:56">num_books</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="234:13" pos:end="236:39"><if pos:start="234:13" pos:end="236:39">if <condition pos:start="234:16" pos:end="234:48">(<expr pos:start="234:17" pos:end="234:47"><operator pos:start="234:17" pos:end="234:17">!</operator><name pos:start="234:18" pos:end="234:47"><name pos:start="234:18" pos:end="234:28">floor_setup</name><operator pos:start="234:29" pos:end="234:30">-&gt;</operator><name pos:start="234:31" pos:end="234:34">data</name><operator pos:start="234:35" pos:end="234:35">.</operator><name pos:start="234:36" pos:end="234:37">t0</name><operator pos:start="234:38" pos:end="234:38">.</operator><name pos:start="234:39" pos:end="234:47">book_list</name></name></expr>)</condition><block type="pseudo" pos:start="236:17" pos:end="236:39"><block_content pos:start="236:17" pos:end="236:39">

                <return pos:start="236:17" pos:end="236:39">return <expr pos:start="236:24" pos:end="236:38"><call pos:start="236:24" pos:end="236:38"><name pos:start="236:24" pos:end="236:30">AVERROR</name><argument_list pos:start="236:31" pos:end="236:38">(<argument pos:start="236:32" pos:end="236:37"><expr pos:start="236:32" pos:end="236:37"><name pos:start="236:32" pos:end="236:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <comment type="block" pos:start="238:13" pos:end="238:35">/* read book indexes */</comment>

            <block pos:start="240:13" pos:end="325:13">{<block_content pos:start="242:17" pos:end="325:13">

                <decl_stmt pos:start="242:17" pos:end="242:24"><decl pos:start="242:17" pos:end="242:23"><type pos:start="242:17" pos:end="242:19"><name pos:start="242:17" pos:end="242:19">int</name></type> <name pos:start="242:21" pos:end="242:23">idx</name></decl>;</decl_stmt>

                <decl_stmt pos:start="244:17" pos:end="244:34"><decl pos:start="244:17" pos:end="244:33"><type pos:start="244:17" pos:end="244:24"><name pos:start="244:17" pos:end="244:24">unsigned</name></type> <name pos:start="244:26" pos:end="244:33">book_idx</name></decl>;</decl_stmt>

                <for pos:start="246:17" pos:end="325:13">for <control pos:start="246:21" pos:end="246:74">(<init pos:start="246:22" pos:end="246:29"><expr pos:start="246:22" pos:end="246:28"><name pos:start="246:22" pos:end="246:24">idx</name> <operator pos:start="246:26" pos:end="246:26">=</operator> <literal type="number" pos:start="246:28" pos:end="246:28">0</literal></expr>;</init> <condition pos:start="246:31" pos:end="246:67"><expr pos:start="246:31" pos:end="246:66"><name pos:start="246:31" pos:end="246:33">idx</name> <operator pos:start="246:35" pos:end="246:35">&lt;</operator> <name pos:start="246:37" pos:end="246:66"><name pos:start="246:37" pos:end="246:47">floor_setup</name><operator pos:start="246:48" pos:end="246:49">-&gt;</operator><name pos:start="246:50" pos:end="246:53">data</name><operator pos:start="246:54" pos:end="246:54">.</operator><name pos:start="246:55" pos:end="246:56">t0</name><operator pos:start="246:57" pos:end="246:57">.</operator><name pos:start="246:58" pos:end="246:66">num_books</name></name></expr>;</condition> <incr pos:start="246:69" pos:end="246:73"><expr pos:start="246:69" pos:end="246:73"><operator pos:start="246:69" pos:end="246:70">++</operator><name pos:start="246:71" pos:end="246:73">idx</name></expr></incr>)</control> <block pos:start="246:76" pos:end="325:13">{<block_content pos:start="248:21" pos:end="325:13">

                    <macro pos:start="248:21" pos:end="248:72"><name pos:start="248:21" pos:end="248:39">GET_VALIDATED_INDEX</name><argument_list pos:start="248:40" pos:end="248:72">(<argument pos:start="248:41" pos:end="248:48">book_idx</argument>, <argument pos:start="248:51" pos:end="248:51"><literal type="number" pos:start="248:51" pos:end="248:51">8</literal></argument>, <argument pos:start="248:54" pos:end="248:71">vc-&gt;codebook_count</argument>)</argument_list></macro>

                    <expr_stmt pos:start="250:21" pos:end="250:67"><expr pos:start="250:21" pos:end="250:66"><name pos:start="250:21" pos:end="250:55"><name pos:start="250:21" pos:end="250:31">floor_setup</name><operator pos:start="250:32" pos:end="250:33">-&gt;</operator><name pos:start="250:34" pos:end="250:37">data</name><operator pos:start="250:38" pos:end="250:38">.</operator><name pos:start="250:39" pos:end="250:40">t0</name><operator pos:start="250:41" pos:end="250:41">.</operator><name pos:start="250:42" pos:end="250:50">book_list</name><index pos:start="250:51" pos:end="250:55">[<expr pos:start="250:52" pos:end="250:54"><name pos:start="250:52" pos:end="250:54">idx</name></expr>]</index></name> <operator pos:start="250:57" pos:end="250:57">=</operator> <name pos:start="250:59" pos:end="250:66">book_idx</name></expr>;</expr_stmt>

                    <if_stmt pos:start="252:21" pos:end="254:78"><if pos:start="252:21" pos:end="254:78">if <condition pos:start="252:24" pos:end="252:78">(<expr pos:start="252:25" pos:end="252:77"><name pos:start="252:25" pos:end="252:47"><name pos:start="252:25" pos:end="252:26">vc</name><operator pos:start="252:27" pos:end="252:28">-&gt;</operator><name pos:start="252:29" pos:end="252:37">codebooks</name><index pos:start="252:38" pos:end="252:47">[<expr pos:start="252:39" pos:end="252:46"><name pos:start="252:39" pos:end="252:46">book_idx</name></expr>]</index></name><operator pos:start="252:48" pos:end="252:48">.</operator><name pos:start="252:49" pos:end="252:58">dimensions</name> <operator pos:start="252:60" pos:end="252:60">&gt;</operator> <name pos:start="252:62" pos:end="252:77">max_codebook_dim</name></expr>)</condition><block type="pseudo" pos:start="254:25" pos:end="254:78"><block_content pos:start="254:25" pos:end="254:78">

                        <expr_stmt pos:start="254:25" pos:end="254:78"><expr pos:start="254:25" pos:end="254:77"><name pos:start="254:25" pos:end="254:40">max_codebook_dim</name> <operator pos:start="254:42" pos:end="254:42">=</operator> <name pos:start="254:44" pos:end="254:66"><name pos:start="254:44" pos:end="254:45">vc</name><operator pos:start="254:46" pos:end="254:47">-&gt;</operator><name pos:start="254:48" pos:end="254:56">codebooks</name><index pos:start="254:57" pos:end="254:66">[<expr pos:start="254:58" pos:end="254:65"><name pos:start="254:58" pos:end="254:65">book_idx</name></expr>]</index></name><operator pos:start="254:67" pos:end="254:67">.</operator><name pos:start="254:68" pos:end="254:77">dimensions</name></expr>;</expr_stmt></block_content></block></if></if_stmt>





            <expr_stmt pos:start="260:13" pos:end="260:30"><expr pos:start="260:13" pos:end="260:29"><call pos:start="260:13" pos:end="260:29"><name pos:start="260:13" pos:end="260:22">create_map</name><argument_list pos:start="260:23" pos:end="260:29">(<argument pos:start="260:24" pos:end="260:25"><expr pos:start="260:24" pos:end="260:25"><name pos:start="260:24" pos:end="260:25">vc</name></expr></argument>, <argument pos:start="260:28" pos:end="260:28"><expr pos:start="260:28" pos:end="260:28"><name pos:start="260:28" pos:end="260:28">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="264:13" pos:end="266:69">/* codebook dim is for padding if codebook dim doesn't *

             * divide order+1 then we need to read more data       */</comment>

            <expr_stmt pos:start="268:13" pos:end="272:63"><expr pos:start="268:13" pos:end="272:62"><name pos:start="268:13" pos:end="268:36"><name pos:start="268:13" pos:end="268:23">floor_setup</name><operator pos:start="268:24" pos:end="268:25">-&gt;</operator><name pos:start="268:26" pos:end="268:29">data</name><operator pos:start="268:30" pos:end="268:30">.</operator><name pos:start="268:31" pos:end="268:32">t0</name><operator pos:start="268:33" pos:end="268:33">.</operator><name pos:start="268:34" pos:end="268:36">lsp</name></name> <operator pos:start="268:38" pos:end="268:38">=</operator>

                <call pos:start="270:17" pos:end="272:62"><name pos:start="270:17" pos:end="270:25">av_malloc</name><argument_list pos:start="270:26" pos:end="272:62">(<argument pos:start="270:27" pos:end="272:61"><expr pos:start="270:27" pos:end="272:61"><operator pos:start="270:27" pos:end="270:27">(</operator><name pos:start="270:28" pos:end="270:53"><name pos:start="270:28" pos:end="270:38">floor_setup</name><operator pos:start="270:39" pos:end="270:40">-&gt;</operator><name pos:start="270:41" pos:end="270:44">data</name><operator pos:start="270:45" pos:end="270:45">.</operator><name pos:start="270:46" pos:end="270:47">t0</name><operator pos:start="270:48" pos:end="270:48">.</operator><name pos:start="270:49" pos:end="270:53">order</name></name> <operator pos:start="270:55" pos:end="270:55">+</operator> <literal type="number" pos:start="270:57" pos:end="270:59">1</literal> <operator pos:start="270:59" pos:end="270:59">+</operator> <name pos:start="270:61" pos:end="270:76">max_codebook_dim</name><operator pos:start="270:77" pos:end="270:77">)</operator>

                          <operator pos:start="272:27" pos:end="272:27">*</operator> <sizeof pos:start="272:29" pos:end="272:61">sizeof<argument_list pos:start="272:35" pos:end="272:61">(<argument pos:start="272:36" pos:end="272:60"><expr pos:start="272:36" pos:end="272:60"><operator pos:start="272:36" pos:end="272:36">*</operator><name pos:start="272:37" pos:end="272:60"><name pos:start="272:37" pos:end="272:47">floor_setup</name><operator pos:start="272:48" pos:end="272:49">-&gt;</operator><name pos:start="272:50" pos:end="272:53">data</name><operator pos:start="272:54" pos:end="272:54">.</operator><name pos:start="272:55" pos:end="272:56">t0</name><operator pos:start="272:57" pos:end="272:57">.</operator><name pos:start="272:58" pos:end="272:60">lsp</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="274:13" pos:end="276:39"><if pos:start="274:13" pos:end="276:39">if <condition pos:start="274:16" pos:end="274:42">(<expr pos:start="274:17" pos:end="274:41"><operator pos:start="274:17" pos:end="274:17">!</operator><name pos:start="274:18" pos:end="274:41"><name pos:start="274:18" pos:end="274:28">floor_setup</name><operator pos:start="274:29" pos:end="274:30">-&gt;</operator><name pos:start="274:31" pos:end="274:34">data</name><operator pos:start="274:35" pos:end="274:35">.</operator><name pos:start="274:36" pos:end="274:37">t0</name><operator pos:start="274:38" pos:end="274:38">.</operator><name pos:start="274:39" pos:end="274:41">lsp</name></name></expr>)</condition><block type="pseudo" pos:start="276:17" pos:end="276:39"><block_content pos:start="276:17" pos:end="276:39">

                <return pos:start="276:17" pos:end="276:39">return <expr pos:start="276:24" pos:end="276:38"><call pos:start="276:24" pos:end="276:38"><name pos:start="276:24" pos:end="276:30">AVERROR</name><argument_list pos:start="276:31" pos:end="276:38">(<argument pos:start="276:32" pos:end="276:37"><expr pos:start="276:32" pos:end="276:37"><name pos:start="276:32" pos:end="276:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <comment type="block" pos:start="280:13" pos:end="280:45">/* debug output parsed headers */</comment>

            <expr_stmt pos:start="282:13" pos:end="282:76"><expr pos:start="282:13" pos:end="282:75"><call pos:start="282:13" pos:end="282:75"><name pos:start="282:13" pos:end="282:19">av_dlog</name><argument_list pos:start="282:20" pos:end="282:75">(<argument pos:start="282:21" pos:end="282:24"><expr pos:start="282:21" pos:end="282:24"><name pos:start="282:21" pos:end="282:24">NULL</name></expr></argument>, <argument pos:start="282:27" pos:end="282:46"><expr pos:start="282:27" pos:end="282:46"><literal type="string" pos:start="282:27" pos:end="282:46">"floor0 order: %u\n"</literal></expr></argument>, <argument pos:start="282:49" pos:end="282:74"><expr pos:start="282:49" pos:end="282:74"><name pos:start="282:49" pos:end="282:74"><name pos:start="282:49" pos:end="282:59">floor_setup</name><operator pos:start="282:60" pos:end="282:61">-&gt;</operator><name pos:start="282:62" pos:end="282:65">data</name><operator pos:start="282:66" pos:end="282:66">.</operator><name pos:start="282:67" pos:end="282:68">t0</name><operator pos:start="282:69" pos:end="282:69">.</operator><name pos:start="282:70" pos:end="282:74">order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="284:13" pos:end="284:74"><expr pos:start="284:13" pos:end="284:73"><call pos:start="284:13" pos:end="284:73"><name pos:start="284:13" pos:end="284:19">av_dlog</name><argument_list pos:start="284:20" pos:end="284:73">(<argument pos:start="284:21" pos:end="284:24"><expr pos:start="284:21" pos:end="284:24"><name pos:start="284:21" pos:end="284:24">NULL</name></expr></argument>, <argument pos:start="284:27" pos:end="284:45"><expr pos:start="284:27" pos:end="284:45"><literal type="string" pos:start="284:27" pos:end="284:45">"floor0 rate: %u\n"</literal></expr></argument>, <argument pos:start="284:48" pos:end="284:72"><expr pos:start="284:48" pos:end="284:72"><name pos:start="284:48" pos:end="284:72"><name pos:start="284:48" pos:end="284:58">floor_setup</name><operator pos:start="284:59" pos:end="284:60">-&gt;</operator><name pos:start="284:61" pos:end="284:64">data</name><operator pos:start="284:65" pos:end="284:65">.</operator><name pos:start="284:66" pos:end="284:67">t0</name><operator pos:start="284:68" pos:end="284:68">.</operator><name pos:start="284:69" pos:end="284:72">rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="286:13" pos:end="288:56"><expr pos:start="286:13" pos:end="288:55"><call pos:start="286:13" pos:end="288:55"><name pos:start="286:13" pos:end="286:19">av_dlog</name><argument_list pos:start="286:20" pos:end="288:55">(<argument pos:start="286:21" pos:end="286:24"><expr pos:start="286:21" pos:end="286:24"><name pos:start="286:21" pos:end="286:24">NULL</name></expr></argument>, <argument pos:start="286:27" pos:end="286:54"><expr pos:start="286:27" pos:end="286:54"><literal type="string" pos:start="286:27" pos:end="286:54">"floor0 bark map size: %u\n"</literal></expr></argument>,

                    <argument pos:start="288:21" pos:end="288:54"><expr pos:start="288:21" pos:end="288:54"><name pos:start="288:21" pos:end="288:54"><name pos:start="288:21" pos:end="288:31">floor_setup</name><operator pos:start="288:32" pos:end="288:33">-&gt;</operator><name pos:start="288:34" pos:end="288:37">data</name><operator pos:start="288:38" pos:end="288:38">.</operator><name pos:start="288:39" pos:end="288:40">t0</name><operator pos:start="288:41" pos:end="288:41">.</operator><name pos:start="288:42" pos:end="288:54">bark_map_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="290:13" pos:end="292:57"><expr pos:start="290:13" pos:end="292:56"><call pos:start="290:13" pos:end="292:56"><name pos:start="290:13" pos:end="290:19">av_dlog</name><argument_list pos:start="290:20" pos:end="292:56">(<argument pos:start="290:21" pos:end="290:24"><expr pos:start="290:21" pos:end="290:24"><name pos:start="290:21" pos:end="290:24">NULL</name></expr></argument>, <argument pos:start="290:27" pos:end="290:55"><expr pos:start="290:27" pos:end="290:55"><literal type="string" pos:start="290:27" pos:end="290:55">"floor0 amplitude bits: %u\n"</literal></expr></argument>,

                    <argument pos:start="292:21" pos:end="292:55"><expr pos:start="292:21" pos:end="292:55"><name pos:start="292:21" pos:end="292:55"><name pos:start="292:21" pos:end="292:31">floor_setup</name><operator pos:start="292:32" pos:end="292:33">-&gt;</operator><name pos:start="292:34" pos:end="292:37">data</name><operator pos:start="292:38" pos:end="292:38">.</operator><name pos:start="292:39" pos:end="292:40">t0</name><operator pos:start="292:41" pos:end="292:41">.</operator><name pos:start="292:42" pos:end="292:55">amplitude_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="294:13" pos:end="296:59"><expr pos:start="294:13" pos:end="296:58"><call pos:start="294:13" pos:end="296:58"><name pos:start="294:13" pos:end="294:19">av_dlog</name><argument_list pos:start="294:20" pos:end="296:58">(<argument pos:start="294:21" pos:end="294:24"><expr pos:start="294:21" pos:end="294:24"><name pos:start="294:21" pos:end="294:24">NULL</name></expr></argument>, <argument pos:start="294:27" pos:end="294:57"><expr pos:start="294:27" pos:end="294:57"><literal type="string" pos:start="294:27" pos:end="294:57">"floor0 amplitude offset: %u\n"</literal></expr></argument>,

                    <argument pos:start="296:21" pos:end="296:57"><expr pos:start="296:21" pos:end="296:57"><name pos:start="296:21" pos:end="296:57"><name pos:start="296:21" pos:end="296:31">floor_setup</name><operator pos:start="296:32" pos:end="296:33">-&gt;</operator><name pos:start="296:34" pos:end="296:37">data</name><operator pos:start="296:38" pos:end="296:38">.</operator><name pos:start="296:39" pos:end="296:40">t0</name><operator pos:start="296:41" pos:end="296:41">.</operator><name pos:start="296:42" pos:end="296:57">amplitude_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="298:13" pos:end="300:52"><expr pos:start="298:13" pos:end="300:51"><call pos:start="298:13" pos:end="300:51"><name pos:start="298:13" pos:end="298:19">av_dlog</name><argument_list pos:start="298:20" pos:end="300:51">(<argument pos:start="298:21" pos:end="298:24"><expr pos:start="298:21" pos:end="298:24"><name pos:start="298:21" pos:end="298:24">NULL</name></expr></argument>, <argument pos:start="298:27" pos:end="298:56"><expr pos:start="298:27" pos:end="298:56"><literal type="string" pos:start="298:27" pos:end="298:56">"floor0 number of books: %u\n"</literal></expr></argument>,

                    <argument pos:start="300:21" pos:end="300:50"><expr pos:start="300:21" pos:end="300:50"><name pos:start="300:21" pos:end="300:50"><name pos:start="300:21" pos:end="300:31">floor_setup</name><operator pos:start="300:32" pos:end="300:33">-&gt;</operator><name pos:start="300:34" pos:end="300:37">data</name><operator pos:start="300:38" pos:end="300:38">.</operator><name pos:start="300:39" pos:end="300:40">t0</name><operator pos:start="300:41" pos:end="300:41">.</operator><name pos:start="300:42" pos:end="300:50">num_books</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="302:13" pos:end="304:52"><expr pos:start="302:13" pos:end="304:51"><call pos:start="302:13" pos:end="304:51"><name pos:start="302:13" pos:end="302:19">av_dlog</name><argument_list pos:start="302:20" pos:end="304:51">(<argument pos:start="302:21" pos:end="302:24"><expr pos:start="302:21" pos:end="302:24"><name pos:start="302:21" pos:end="302:24">NULL</name></expr></argument>, <argument pos:start="302:27" pos:end="302:58"><expr pos:start="302:27" pos:end="302:58"><literal type="string" pos:start="302:27" pos:end="302:58">"floor0 book list pointer: %p\n"</literal></expr></argument>,

                    <argument pos:start="304:21" pos:end="304:50"><expr pos:start="304:21" pos:end="304:50"><name pos:start="304:21" pos:end="304:50"><name pos:start="304:21" pos:end="304:31">floor_setup</name><operator pos:start="304:32" pos:end="304:33">-&gt;</operator><name pos:start="304:34" pos:end="304:37">data</name><operator pos:start="304:38" pos:end="304:38">.</operator><name pos:start="304:39" pos:end="304:40">t0</name><operator pos:start="304:41" pos:end="304:41">.</operator><name pos:start="304:42" pos:end="304:50">book_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="306:13" pos:end="325:13">{<block_content pos:start="308:17" pos:end="325:13">

                <decl_stmt pos:start="308:17" pos:end="308:24"><decl pos:start="308:17" pos:end="308:23"><type pos:start="308:17" pos:end="308:19"><name pos:start="308:17" pos:end="308:19">int</name></type> <name pos:start="308:21" pos:end="308:23">idx</name></decl>;</decl_stmt>

                <for pos:start="310:17" pos:end="318:9">for <control pos:start="310:21" pos:end="310:74">(<init pos:start="310:22" pos:end="310:29"><expr pos:start="310:22" pos:end="310:28"><name pos:start="310:22" pos:end="310:24">idx</name> <operator pos:start="310:26" pos:end="310:26">=</operator> <literal type="number" pos:start="310:28" pos:end="310:28">0</literal></expr>;</init> <condition pos:start="310:31" pos:end="310:67"><expr pos:start="310:31" pos:end="310:66"><name pos:start="310:31" pos:end="310:33">idx</name> <operator pos:start="310:35" pos:end="310:35">&lt;</operator> <name pos:start="310:37" pos:end="310:66"><name pos:start="310:37" pos:end="310:47">floor_setup</name><operator pos:start="310:48" pos:end="310:49">-&gt;</operator><name pos:start="310:50" pos:end="310:53">data</name><operator pos:start="310:54" pos:end="310:54">.</operator><name pos:start="310:55" pos:end="310:56">t0</name><operator pos:start="310:57" pos:end="310:57">.</operator><name pos:start="310:58" pos:end="310:66">num_books</name></name></expr>;</condition> <incr pos:start="310:69" pos:end="310:73"><expr pos:start="310:69" pos:end="310:73"><operator pos:start="310:69" pos:end="310:70">++</operator><name pos:start="310:71" pos:end="310:73">idx</name></expr></incr>)</control> <block pos:start="310:76" pos:end="318:9">{<block_content pos:start="312:21" pos:end="314:65">

                    <expr_stmt pos:start="312:21" pos:end="314:65"><expr pos:start="312:21" pos:end="314:64"><call pos:start="312:21" pos:end="314:64"><name pos:start="312:21" pos:end="312:27">av_dlog</name><argument_list pos:start="312:28" pos:end="314:64">(<argument pos:start="312:29" pos:end="312:32"><expr pos:start="312:29" pos:end="312:32"><name pos:start="312:29" pos:end="312:32">NULL</name></expr></argument>, <argument pos:start="312:35" pos:end="312:51"><expr pos:start="312:35" pos:end="312:51"><literal type="string" pos:start="312:35" pos:end="312:51">"  Book %d: %u\n"</literal></expr></argument>, <argument pos:start="312:54" pos:end="312:60"><expr pos:start="312:54" pos:end="312:60"><name pos:start="312:54" pos:end="312:56">idx</name> <operator pos:start="312:58" pos:end="312:58">+</operator> <literal type="number" pos:start="312:60" pos:end="312:60">1</literal></expr></argument>,

                            <argument pos:start="314:29" pos:end="314:63"><expr pos:start="314:29" pos:end="314:63"><name pos:start="314:29" pos:end="314:63"><name pos:start="314:29" pos:end="314:39">floor_setup</name><operator pos:start="314:40" pos:end="314:41">-&gt;</operator><name pos:start="314:42" pos:end="314:45">data</name><operator pos:start="314:46" pos:end="314:46">.</operator><name pos:start="314:47" pos:end="314:48">t0</name><operator pos:start="314:49" pos:end="314:49">.</operator><name pos:start="314:50" pos:end="314:58">book_list</name><index pos:start="314:59" pos:end="314:63">[<expr pos:start="314:60" pos:end="314:62"><name pos:start="314:60" pos:end="314:62">idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        </block_content>}</block></for> <if_stmt pos:start="318:11" pos:end="325:13"><else pos:start="318:11" pos:end="325:13">else <block pos:start="318:16" pos:end="325:13">{<block_content pos:start="320:13" pos:end="325:13">

            <expr_stmt pos:start="320:13" pos:end="320:74"><expr pos:start="320:13" pos:end="320:73"><call pos:start="320:13" pos:end="320:73"><name pos:start="320:13" pos:end="320:18">av_log</name><argument_list pos:start="320:19" pos:end="320:73">(<argument pos:start="320:20" pos:end="320:33"><expr pos:start="320:20" pos:end="320:33"><name pos:start="320:20" pos:end="320:33"><name pos:start="320:20" pos:end="320:21">vc</name><operator pos:start="320:22" pos:end="320:23">-&gt;</operator><name pos:start="320:24" pos:end="320:33">avccontext</name></name></expr></argument>, <argument pos:start="320:36" pos:end="320:47"><expr pos:start="320:36" pos:end="320:47"><name pos:start="320:36" pos:end="320:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="320:50" pos:end="320:72"><expr pos:start="320:50" pos:end="320:72"><literal type="string" pos:start="320:50" pos:end="320:72">"Invalid floor type!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <return pos:start="325:5" pos:end="325:13">return <expr pos:start="325:12" pos:end="325:12"><literal type="number" pos:start="325:12" pos:end="325:12">0</literal></expr>;</return></block_content></block></else></if_stmt></block_content></block></block_content></block></for></block_content></block></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></function>
</unit>
