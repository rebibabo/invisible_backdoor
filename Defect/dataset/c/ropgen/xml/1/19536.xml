<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19536.c" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="109:1"><decl pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">convert_matrix</name><argument_list pos:start="1:27" pos:end="3:86">(<argument pos:start="1:28" pos:end="1:42"><expr pos:start="1:28" pos:end="1:42"><name pos:start="1:28" pos:end="1:37">DSPContext</name> <operator pos:start="1:39" pos:end="1:39">*</operator><name pos:start="1:40" pos:end="1:42">dsp</name></expr></argument>, <argument pos:start="1:45" pos:end="1:59"><expr pos:start="1:45" pos:end="1:59"><call pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:47">int</name> <argument_list pos:start="1:49" pos:end="1:55">(<argument pos:start="1:50" pos:end="1:54"><expr pos:start="1:50" pos:end="1:54"><operator pos:start="1:50" pos:end="1:50">*</operator><name pos:start="1:51" pos:end="1:54">qmat</name></expr></argument>)</argument_list></call><index pos:start="1:56" pos:end="1:59">[<expr pos:start="1:57" pos:end="1:58"><literal type="number" pos:start="1:57" pos:end="1:58">64</literal></expr>]</index></expr></argument>, <argument pos:start="1:62" pos:end="1:86"><expr pos:start="1:62" pos:end="1:86"><call pos:start="1:62" pos:end="1:79"><name pos:start="1:62" pos:end="1:69">uint16_t</name> <argument_list pos:start="1:71" pos:end="1:79">(<argument pos:start="1:72" pos:end="1:78"><expr pos:start="1:72" pos:end="1:78"><operator pos:start="1:72" pos:end="1:72">*</operator><name pos:start="1:73" pos:end="1:78">qmat16</name></expr></argument>)</argument_list></call><index pos:start="1:80" pos:end="1:82">[<expr pos:start="1:81" pos:end="1:81"><literal type="number" pos:start="1:81" pos:end="1:81">2</literal></expr>]</index><index pos:start="1:83" pos:end="1:86">[<expr pos:start="1:84" pos:end="1:85"><literal type="number" pos:start="1:84" pos:end="1:85">64</literal></expr>]</index></expr></argument>,

                           <argument pos:start="3:28" pos:end="3:55"><expr pos:start="3:28" pos:end="3:55"><specifier pos:start="3:28" pos:end="3:32">const</specifier> <name pos:start="3:34" pos:end="3:41">uint16_t</name> <operator pos:start="3:43" pos:end="3:43">*</operator><name pos:start="3:44" pos:end="3:55">quant_matrix</name></expr></argument>, <argument pos:start="3:58" pos:end="3:65"><expr pos:start="3:58" pos:end="3:65"><name pos:start="3:58" pos:end="3:60">int</name> <name pos:start="3:62" pos:end="3:65">bias</name></expr></argument>, <argument pos:start="3:68" pos:end="3:75"><expr pos:start="3:68" pos:end="3:75"><name pos:start="3:68" pos:end="3:70">int</name> <name pos:start="3:72" pos:end="3:75">qmin</name></expr></argument>, <argument pos:start="3:78" pos:end="3:85"><expr pos:start="3:78" pos:end="3:85"><name pos:start="3:78" pos:end="3:80">int</name> <name pos:start="3:82" pos:end="3:85">qmax</name></expr></argument>)</argument_list>

<block pos:start="5:1" pos:end="109:1">{<block_content pos:start="7:5" pos:end="107:5">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">qscale</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="107:5">for<control pos:start="11:8" pos:end="11:44">(<init pos:start="11:9" pos:end="11:20"><expr pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:14">qscale</name><operator pos:start="11:15" pos:end="11:15">=</operator><name pos:start="11:16" pos:end="11:19">qmin</name></expr>;</init> <condition pos:start="11:22" pos:end="11:34"><expr pos:start="11:22" pos:end="11:33"><name pos:start="11:22" pos:end="11:27">qscale</name><operator pos:start="11:28" pos:end="11:29">&lt;=</operator><name pos:start="11:30" pos:end="11:33">qmax</name></expr>;</condition> <incr pos:start="11:36" pos:end="11:43"><expr pos:start="11:36" pos:end="11:43"><name pos:start="11:36" pos:end="11:41">qscale</name><operator pos:start="11:42" pos:end="11:43">++</operator></expr></incr>)</control><block pos:start="11:45" pos:end="107:5">{<block_content pos:start="13:9" pos:end="105:9">

        <decl_stmt pos:start="13:9" pos:end="13:14"><decl pos:start="13:9" pos:end="13:13"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">i</name></decl>;</decl_stmt>

        <if_stmt pos:start="15:9" pos:end="105:9"><if pos:start="15:9" pos:end="45:9">if <condition pos:start="15:12" pos:end="23:13">(<expr pos:start="15:13" pos:end="22:0"><name pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:15">dsp</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:21">fdct</name></name> <operator pos:start="15:23" pos:end="15:24">==</operator> <name pos:start="15:26" pos:end="18:0">ff_jpeg_fdct_islow</name> 

<cpp:ifdef pos:start="17:1" pos:end="17:21">#<cpp:directive pos:start="17:2" pos:end="17:6">ifdef</cpp:directive> <name pos:start="17:8" pos:end="17:21">FAAN_POSTSCALE</name></cpp:ifdef>

            <operator pos:start="19:13" pos:end="19:14">||</operator> <name pos:start="19:16" pos:end="19:24"><name pos:start="19:16" pos:end="19:18">dsp</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:24">fdct</name></name> <operator pos:start="19:26" pos:end="19:27">==</operator> <name pos:start="19:29" pos:end="22:0">ff_faandct</name></expr>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>

            )</condition> <block pos:start="23:15" pos:end="45:9">{<block_content pos:start="25:13" pos:end="43:13">

            <for pos:start="25:13" pos:end="43:13">for<control pos:start="25:16" pos:end="25:29">(<init pos:start="25:17" pos:end="25:20"><expr pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:17">i</name><operator pos:start="25:18" pos:end="25:18">=</operator><literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr>;</init><condition pos:start="25:21" pos:end="25:25"><expr pos:start="25:21" pos:end="25:24"><name pos:start="25:21" pos:end="25:21">i</name><operator pos:start="25:22" pos:end="25:22">&lt;</operator><literal type="number" pos:start="25:23" pos:end="25:24">64</literal></expr>;</condition><incr pos:start="25:26" pos:end="25:28"><expr pos:start="25:26" pos:end="25:28"><name pos:start="25:26" pos:end="25:26">i</name><operator pos:start="25:27" pos:end="25:28">++</operator></expr></incr>)</control> <block pos:start="25:31" pos:end="43:13">{<block_content pos:start="27:17" pos:end="41:60">

                <decl_stmt pos:start="27:17" pos:end="27:54"><decl pos:start="27:17" pos:end="27:53"><type pos:start="27:17" pos:end="27:25"><specifier pos:start="27:17" pos:end="27:21">const</specifier> <name pos:start="27:23" pos:end="27:25">int</name></type> <name pos:start="27:27" pos:end="27:27">j</name><init pos:start="27:28" pos:end="27:53">= <expr pos:start="27:30" pos:end="27:53"><name pos:start="27:30" pos:end="27:53"><name pos:start="27:30" pos:end="27:32">dsp</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:50">idct_permutation</name><index pos:start="27:51" pos:end="27:53">[<expr pos:start="27:52" pos:end="27:52"><name pos:start="27:52" pos:end="27:52">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <comment type="block" pos:start="29:17" pos:end="29:60">/* 16 &lt;= qscale * quant_matrix[i] &lt;= 7905 */</comment>

                <comment type="block" pos:start="31:17" pos:end="31:101">/* 19952         &lt;= aanscales[i] * qscale * quant_matrix[i]           &lt;= 249205026 */</comment>

                <comment type="block" pos:start="33:17" pos:end="33:109">/* (1&lt;&lt;36)/19952 &gt;= (1&lt;&lt;36)/(aanscales[i] * qscale * quant_matrix[i]) &gt;= (1&lt;&lt;36)/249205026 */</comment>

                <comment type="block" pos:start="35:17" pos:end="35:95">/* 3444240       &gt;= (1&lt;&lt;36)/(aanscales[i] * qscale * quant_matrix[i]) &gt;= 275 */</comment>

                

                <expr_stmt pos:start="39:17" pos:end="41:60"><expr pos:start="39:17" pos:end="41:59"><name pos:start="39:17" pos:end="39:31"><name pos:start="39:17" pos:end="39:20">qmat</name><index pos:start="39:21" pos:end="39:28">[<expr pos:start="39:22" pos:end="39:27"><name pos:start="39:22" pos:end="39:27">qscale</name></expr>]</index><index pos:start="39:29" pos:end="39:31">[<expr pos:start="39:30" pos:end="39:30"><name pos:start="39:30" pos:end="39:30">i</name></expr>]</index></name> <operator pos:start="39:33" pos:end="39:33">=</operator> <operator pos:start="39:35" pos:end="39:35">(</operator><name pos:start="39:36" pos:end="39:38">int</name><operator pos:start="39:39" pos:end="39:39">)</operator><operator pos:start="39:40" pos:end="39:40">(</operator><operator pos:start="39:41" pos:end="39:41">(</operator><call pos:start="39:42" pos:end="39:54"><name pos:start="39:42" pos:end="39:51">uint64_t_C</name><argument_list pos:start="39:52" pos:end="39:54">(<argument pos:start="39:53" pos:end="39:53"><expr pos:start="39:53" pos:end="39:53"><literal type="number" pos:start="39:53" pos:end="39:53">1</literal></expr></argument>)</argument_list></call> <operator pos:start="39:56" pos:end="39:57">&lt;&lt;</operator> <name pos:start="39:59" pos:end="39:68">QMAT_SHIFT</name><operator pos:start="39:69" pos:end="39:69">)</operator> <operator pos:start="39:71" pos:end="39:71">/</operator> 

                                <operator pos:start="41:33" pos:end="41:33">(</operator><name pos:start="41:34" pos:end="41:39">qscale</name> <operator pos:start="41:41" pos:end="41:41">*</operator> <name pos:start="41:43" pos:end="41:57"><name pos:start="41:43" pos:end="41:54">quant_matrix</name><index pos:start="41:55" pos:end="41:57">[<expr pos:start="41:56" pos:end="41:56"><name pos:start="41:56" pos:end="41:56">j</name></expr>]</index></name><operator pos:start="41:58" pos:end="41:58">)</operator><operator pos:start="41:59" pos:end="41:59">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="45:11" pos:end="75:9">else if <condition pos:start="45:19" pos:end="53:20">(<expr pos:start="45:20" pos:end="52:0"><name pos:start="45:20" pos:end="45:28"><name pos:start="45:20" pos:end="45:22">dsp</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:28">fdct</name></name> <operator pos:start="45:30" pos:end="45:31">==</operator> <name pos:start="45:33" pos:end="48:0">fdct_ifast</name>

<cpp:ifndef pos:start="47:1" pos:end="47:22">#<cpp:directive pos:start="47:2" pos:end="47:7">ifndef</cpp:directive> <name pos:start="47:9" pos:end="47:22">FAAN_POSTSCALE</name></cpp:ifndef>

                   <operator pos:start="49:20" pos:end="49:21">||</operator> <name pos:start="49:23" pos:end="49:31"><name pos:start="49:23" pos:end="49:25">dsp</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:31">fdct</name></name> <operator pos:start="49:33" pos:end="49:34">==</operator> <name pos:start="49:36" pos:end="52:0">ff_faandct</name></expr>

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>

                   )</condition> <block pos:start="53:22" pos:end="75:9">{<block_content pos:start="55:13" pos:end="73:13">

            <for pos:start="55:13" pos:end="73:13">for<control pos:start="55:16" pos:end="55:29">(<init pos:start="55:17" pos:end="55:20"><expr pos:start="55:17" pos:end="55:19"><name pos:start="55:17" pos:end="55:17">i</name><operator pos:start="55:18" pos:end="55:18">=</operator><literal type="number" pos:start="55:19" pos:end="55:19">0</literal></expr>;</init><condition pos:start="55:21" pos:end="55:25"><expr pos:start="55:21" pos:end="55:24"><name pos:start="55:21" pos:end="55:21">i</name><operator pos:start="55:22" pos:end="55:22">&lt;</operator><literal type="number" pos:start="55:23" pos:end="55:24">64</literal></expr>;</condition><incr pos:start="55:26" pos:end="55:28"><expr pos:start="55:26" pos:end="55:28"><name pos:start="55:26" pos:end="55:26">i</name><operator pos:start="55:27" pos:end="55:28">++</operator></expr></incr>)</control> <block pos:start="55:31" pos:end="73:13">{<block_content pos:start="57:17" pos:end="71:75">

                <decl_stmt pos:start="57:17" pos:end="57:54"><decl pos:start="57:17" pos:end="57:53"><type pos:start="57:17" pos:end="57:25"><specifier pos:start="57:17" pos:end="57:21">const</specifier> <name pos:start="57:23" pos:end="57:25">int</name></type> <name pos:start="57:27" pos:end="57:27">j</name><init pos:start="57:28" pos:end="57:53">= <expr pos:start="57:30" pos:end="57:53"><name pos:start="57:30" pos:end="57:53"><name pos:start="57:30" pos:end="57:32">dsp</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:50">idct_permutation</name><index pos:start="57:51" pos:end="57:53">[<expr pos:start="57:52" pos:end="57:52"><name pos:start="57:52" pos:end="57:52">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <comment type="block" pos:start="59:17" pos:end="59:60">/* 16 &lt;= qscale * quant_matrix[i] &lt;= 7905 */</comment>

                <comment type="block" pos:start="61:17" pos:end="61:101">/* 19952         &lt;= aanscales[i] * qscale * quant_matrix[i]           &lt;= 249205026 */</comment>

                <comment type="block" pos:start="63:17" pos:end="63:109">/* (1&lt;&lt;36)/19952 &gt;= (1&lt;&lt;36)/(aanscales[i] * qscale * quant_matrix[i]) &gt;= (1&lt;&lt;36)/249205026 */</comment>

                <comment type="block" pos:start="65:17" pos:end="65:95">/* 3444240       &gt;= (1&lt;&lt;36)/(aanscales[i] * qscale * quant_matrix[i]) &gt;= 275 */</comment>

                

                <expr_stmt pos:start="69:17" pos:end="71:75"><expr pos:start="69:17" pos:end="71:74"><name pos:start="69:17" pos:end="69:31"><name pos:start="69:17" pos:end="69:20">qmat</name><index pos:start="69:21" pos:end="69:28">[<expr pos:start="69:22" pos:end="69:27"><name pos:start="69:22" pos:end="69:27">qscale</name></expr>]</index><index pos:start="69:29" pos:end="69:31">[<expr pos:start="69:30" pos:end="69:30"><name pos:start="69:30" pos:end="69:30">i</name></expr>]</index></name> <operator pos:start="69:33" pos:end="69:33">=</operator> <operator pos:start="69:35" pos:end="69:35">(</operator><name pos:start="69:36" pos:end="69:38">int</name><operator pos:start="69:39" pos:end="69:39">)</operator><operator pos:start="69:40" pos:end="69:40">(</operator><operator pos:start="69:41" pos:end="69:41">(</operator><call pos:start="69:42" pos:end="69:54"><name pos:start="69:42" pos:end="69:51">uint64_t_C</name><argument_list pos:start="69:52" pos:end="69:54">(<argument pos:start="69:53" pos:end="69:53"><expr pos:start="69:53" pos:end="69:53"><literal type="number" pos:start="69:53" pos:end="69:53">1</literal></expr></argument>)</argument_list></call> <operator pos:start="69:56" pos:end="69:57">&lt;&lt;</operator> <operator pos:start="69:59" pos:end="69:59">(</operator><name pos:start="69:60" pos:end="69:69">QMAT_SHIFT</name> <operator pos:start="69:71" pos:end="69:71">+</operator> <literal type="number" pos:start="69:73" pos:end="69:74">14</literal><operator pos:start="69:75" pos:end="69:75">)</operator><operator pos:start="69:76" pos:end="69:76">)</operator> <operator pos:start="69:78" pos:end="69:78">/</operator> 

                                <operator pos:start="71:33" pos:end="71:33">(</operator><name pos:start="71:34" pos:end="71:45"><name pos:start="71:34" pos:end="71:42">aanscales</name><index pos:start="71:43" pos:end="71:45">[<expr pos:start="71:44" pos:end="71:44"><name pos:start="71:44" pos:end="71:44">i</name></expr>]</index></name> <operator pos:start="71:47" pos:end="71:47">*</operator> <name pos:start="71:49" pos:end="71:54">qscale</name> <operator pos:start="71:56" pos:end="71:56">*</operator> <name pos:start="71:58" pos:end="71:72"><name pos:start="71:58" pos:end="71:69">quant_matrix</name><index pos:start="71:70" pos:end="71:72">[<expr pos:start="71:71" pos:end="71:71"><name pos:start="71:71" pos:end="71:71">j</name></expr>]</index></name><operator pos:start="71:73" pos:end="71:73">)</operator><operator pos:start="71:74" pos:end="71:74">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="75:11" pos:end="105:9">else <block pos:start="75:16" pos:end="105:9">{<block_content pos:start="77:13" pos:end="103:13">

            <for pos:start="77:13" pos:end="103:13">for<control pos:start="77:16" pos:end="77:29">(<init pos:start="77:17" pos:end="77:20"><expr pos:start="77:17" pos:end="77:19"><name pos:start="77:17" pos:end="77:17">i</name><operator pos:start="77:18" pos:end="77:18">=</operator><literal type="number" pos:start="77:19" pos:end="77:19">0</literal></expr>;</init><condition pos:start="77:21" pos:end="77:25"><expr pos:start="77:21" pos:end="77:24"><name pos:start="77:21" pos:end="77:21">i</name><operator pos:start="77:22" pos:end="77:22">&lt;</operator><literal type="number" pos:start="77:23" pos:end="77:24">64</literal></expr>;</condition><incr pos:start="77:26" pos:end="77:28"><expr pos:start="77:26" pos:end="77:28"><name pos:start="77:26" pos:end="77:26">i</name><operator pos:start="77:27" pos:end="77:28">++</operator></expr></incr>)</control> <block pos:start="77:31" pos:end="103:13">{<block_content pos:start="79:17" pos:end="101:101">

                <decl_stmt pos:start="79:17" pos:end="79:54"><decl pos:start="79:17" pos:end="79:53"><type pos:start="79:17" pos:end="79:25"><specifier pos:start="79:17" pos:end="79:21">const</specifier> <name pos:start="79:23" pos:end="79:25">int</name></type> <name pos:start="79:27" pos:end="79:27">j</name><init pos:start="79:28" pos:end="79:53">= <expr pos:start="79:30" pos:end="79:53"><name pos:start="79:30" pos:end="79:53"><name pos:start="79:30" pos:end="79:32">dsp</name><operator pos:start="79:33" pos:end="79:34">-&gt;</operator><name pos:start="79:35" pos:end="79:50">idct_permutation</name><index pos:start="79:51" pos:end="79:53">[<expr pos:start="79:52" pos:end="79:52"><name pos:start="79:52" pos:end="79:52">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <comment type="block" pos:start="81:17" pos:end="89:18">/* We can safely suppose that 16 &lt;= quant_matrix[i] &lt;= 255

                   So 16           &lt;= qscale * quant_matrix[i]             &lt;= 7905

                   so (1&lt;&lt;19) / 16 &gt;= (1&lt;&lt;19) / (qscale * quant_matrix[i]) &gt;= (1&lt;&lt;19) / 7905

                   so 32768        &gt;= (1&lt;&lt;19) / (qscale * quant_matrix[i]) &gt;= 67

                */</comment>

                <expr_stmt pos:start="91:17" pos:end="91:100"><expr pos:start="91:17" pos:end="91:99"><name pos:start="91:17" pos:end="91:31"><name pos:start="91:17" pos:end="91:20">qmat</name><index pos:start="91:21" pos:end="91:28">[<expr pos:start="91:22" pos:end="91:27"><name pos:start="91:22" pos:end="91:27">qscale</name></expr>]</index><index pos:start="91:29" pos:end="91:31">[<expr pos:start="91:30" pos:end="91:30"><name pos:start="91:30" pos:end="91:30">i</name></expr>]</index></name> <operator pos:start="91:33" pos:end="91:33">=</operator> <operator pos:start="91:35" pos:end="91:35">(</operator><name pos:start="91:36" pos:end="91:38">int</name><operator pos:start="91:39" pos:end="91:39">)</operator><operator pos:start="91:40" pos:end="91:40">(</operator><operator pos:start="91:41" pos:end="91:41">(</operator><call pos:start="91:42" pos:end="91:54"><name pos:start="91:42" pos:end="91:51">uint64_t_C</name><argument_list pos:start="91:52" pos:end="91:54">(<argument pos:start="91:53" pos:end="91:53"><expr pos:start="91:53" pos:end="91:53"><literal type="number" pos:start="91:53" pos:end="91:53">1</literal></expr></argument>)</argument_list></call> <operator pos:start="91:56" pos:end="91:57">&lt;&lt;</operator> <name pos:start="91:59" pos:end="91:68">QMAT_SHIFT</name><operator pos:start="91:69" pos:end="91:69">)</operator> <operator pos:start="91:71" pos:end="91:71">/</operator> <operator pos:start="91:73" pos:end="91:73">(</operator><name pos:start="91:74" pos:end="91:79">qscale</name> <operator pos:start="91:81" pos:end="91:81">*</operator> <name pos:start="91:83" pos:end="91:97"><name pos:start="91:83" pos:end="91:94">quant_matrix</name><index pos:start="91:95" pos:end="91:97">[<expr pos:start="91:96" pos:end="91:96"><name pos:start="91:96" pos:end="91:96">j</name></expr>]</index></name><operator pos:start="91:98" pos:end="91:98">)</operator><operator pos:start="91:99" pos:end="91:99">)</operator></expr>;</expr_stmt>

<comment type="line" pos:start="93:1" pos:end="93:89">//                qmat  [qscale][i] = (1 &lt;&lt; QMAT_SHIFT_MMX) / (qscale * quant_matrix[i]);</comment>

                <expr_stmt pos:start="95:17" pos:end="95:90"><expr pos:start="95:17" pos:end="95:89"><name pos:start="95:17" pos:end="95:36"><name pos:start="95:17" pos:end="95:22">qmat16</name><index pos:start="95:23" pos:end="95:30">[<expr pos:start="95:24" pos:end="95:29"><name pos:start="95:24" pos:end="95:29">qscale</name></expr>]</index><index pos:start="95:31" pos:end="95:33">[<expr pos:start="95:32" pos:end="95:32"><literal type="number" pos:start="95:32" pos:end="95:32">0</literal></expr>]</index><index pos:start="95:34" pos:end="95:36">[<expr pos:start="95:35" pos:end="95:35"><name pos:start="95:35" pos:end="95:35">i</name></expr>]</index></name> <operator pos:start="95:38" pos:end="95:38">=</operator> <operator pos:start="95:40" pos:end="95:40">(</operator><literal type="number" pos:start="95:41" pos:end="95:41">1</literal> <operator pos:start="95:43" pos:end="95:44">&lt;&lt;</operator> <name pos:start="95:46" pos:end="95:59">QMAT_SHIFT_MMX</name><operator pos:start="95:60" pos:end="95:60">)</operator> <operator pos:start="95:62" pos:end="95:62">/</operator> <operator pos:start="95:64" pos:end="95:64">(</operator><name pos:start="95:65" pos:end="95:70">qscale</name> <operator pos:start="95:72" pos:end="95:72">*</operator> <name pos:start="95:74" pos:end="95:88"><name pos:start="95:74" pos:end="95:85">quant_matrix</name><index pos:start="95:86" pos:end="95:88">[<expr pos:start="95:87" pos:end="95:87"><name pos:start="95:87" pos:end="95:87">j</name></expr>]</index></name><operator pos:start="95:89" pos:end="95:89">)</operator></expr>;</expr_stmt>



                <if_stmt pos:start="99:17" pos:end="99:108"><if pos:start="99:17" pos:end="99:108">if<condition pos:start="99:19" pos:end="99:76">(<expr pos:start="99:20" pos:end="99:75"><name pos:start="99:20" pos:end="99:39"><name pos:start="99:20" pos:end="99:25">qmat16</name><index pos:start="99:26" pos:end="99:33">[<expr pos:start="99:27" pos:end="99:32"><name pos:start="99:27" pos:end="99:32">qscale</name></expr>]</index><index pos:start="99:34" pos:end="99:36">[<expr pos:start="99:35" pos:end="99:35"><literal type="number" pos:start="99:35" pos:end="99:35">0</literal></expr>]</index><index pos:start="99:37" pos:end="99:39">[<expr pos:start="99:38" pos:end="99:38"><name pos:start="99:38" pos:end="99:38">i</name></expr>]</index></name><operator pos:start="99:40" pos:end="99:41">==</operator><literal type="number" pos:start="99:42" pos:end="99:42">0</literal> <operator pos:start="99:44" pos:end="99:45">||</operator> <name pos:start="99:47" pos:end="99:66"><name pos:start="99:47" pos:end="99:52">qmat16</name><index pos:start="99:53" pos:end="99:60">[<expr pos:start="99:54" pos:end="99:59"><name pos:start="99:54" pos:end="99:59">qscale</name></expr>]</index><index pos:start="99:61" pos:end="99:63">[<expr pos:start="99:62" pos:end="99:62"><literal type="number" pos:start="99:62" pos:end="99:62">0</literal></expr>]</index><index pos:start="99:64" pos:end="99:66">[<expr pos:start="99:65" pos:end="99:65"><name pos:start="99:65" pos:end="99:65">i</name></expr>]</index></name><operator pos:start="99:67" pos:end="99:68">==</operator><literal type="number" pos:start="99:69" pos:end="99:71">128</literal><operator pos:start="99:72" pos:end="99:72">*</operator><literal type="number" pos:start="99:73" pos:end="99:75">256</literal></expr>)</condition><block type="pseudo" pos:start="99:78" pos:end="99:108"><block_content pos:start="99:78" pos:end="99:108"> <expr_stmt pos:start="99:78" pos:end="99:108"><expr pos:start="99:78" pos:end="99:107"><name pos:start="99:78" pos:end="99:97"><name pos:start="99:78" pos:end="99:83">qmat16</name><index pos:start="99:84" pos:end="99:91">[<expr pos:start="99:85" pos:end="99:90"><name pos:start="99:85" pos:end="99:90">qscale</name></expr>]</index><index pos:start="99:92" pos:end="99:94">[<expr pos:start="99:93" pos:end="99:93"><literal type="number" pos:start="99:93" pos:end="99:93">0</literal></expr>]</index><index pos:start="99:95" pos:end="99:97">[<expr pos:start="99:96" pos:end="99:96"><name pos:start="99:96" pos:end="99:96">i</name></expr>]</index></name><operator pos:start="99:98" pos:end="99:98">=</operator><literal type="number" pos:start="99:99" pos:end="99:101">128</literal><operator pos:start="99:102" pos:end="99:102">*</operator><literal type="number" pos:start="99:103" pos:end="99:106">256</literal><operator pos:start="99:106" pos:end="99:106">-</operator><literal type="number" pos:start="99:107" pos:end="99:107">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:101"><expr pos:start="101:17" pos:end="101:100"><name pos:start="101:17" pos:end="101:36"><name pos:start="101:17" pos:end="101:22">qmat16</name><index pos:start="101:23" pos:end="101:30">[<expr pos:start="101:24" pos:end="101:29"><name pos:start="101:24" pos:end="101:29">qscale</name></expr>]</index><index pos:start="101:31" pos:end="101:33">[<expr pos:start="101:32" pos:end="101:32"><literal type="number" pos:start="101:32" pos:end="101:32">1</literal></expr>]</index><index pos:start="101:34" pos:end="101:36">[<expr pos:start="101:35" pos:end="101:35"><name pos:start="101:35" pos:end="101:35">i</name></expr>]</index></name><operator pos:start="101:37" pos:end="101:37">=</operator> <call pos:start="101:39" pos:end="101:100"><name pos:start="101:39" pos:end="101:49">ROUNDED_DIV</name><argument_list pos:start="101:50" pos:end="101:100">(<argument pos:start="101:51" pos:end="101:77"><expr pos:start="101:51" pos:end="101:77"><name pos:start="101:51" pos:end="101:54">bias</name><operator pos:start="101:55" pos:end="101:56">&lt;&lt;</operator><operator pos:start="101:57" pos:end="101:57">(</operator><literal type="number" pos:start="101:58" pos:end="101:60">16</literal><operator pos:start="101:60" pos:end="101:60">-</operator><name pos:start="101:61" pos:end="101:76">QUANT_BIAS_SHIFT</name><operator pos:start="101:77" pos:end="101:77">)</operator></expr></argument>, <argument pos:start="101:80" pos:end="101:99"><expr pos:start="101:80" pos:end="101:99"><name pos:start="101:80" pos:end="101:99"><name pos:start="101:80" pos:end="101:85">qmat16</name><index pos:start="101:86" pos:end="101:93">[<expr pos:start="101:87" pos:end="101:92"><name pos:start="101:87" pos:end="101:92">qscale</name></expr>]</index><index pos:start="101:94" pos:end="101:96">[<expr pos:start="101:95" pos:end="101:95"><literal type="number" pos:start="101:95" pos:end="101:95">0</literal></expr>]</index><index pos:start="101:97" pos:end="101:99">[<expr pos:start="101:98" pos:end="101:98"><name pos:start="101:98" pos:end="101:98">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></decl></decl_stmt>
</unit>
