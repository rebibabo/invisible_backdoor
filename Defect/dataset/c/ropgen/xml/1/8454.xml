<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8454.c" pos:tabs="8"><function pos:start="1:1" pos:end="26:14"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">helper_ldf_asi</name><parameter_list pos:start="1:20" pos:end="1:65">(<parameter pos:start="1:21" pos:end="1:37"><decl pos:start="1:21" pos:end="1:37"><type pos:start="1:21" pos:end="1:37"><name pos:start="1:21" pos:end="1:32">target_ulong</name></type> <name pos:start="1:34" pos:end="1:37">addr</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:46"><decl pos:start="1:40" pos:end="1:46"><type pos:start="1:40" pos:end="1:46"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:46">asi</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:56"><decl pos:start="1:49" pos:end="1:56"><type pos:start="1:49" pos:end="1:56"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:56">size</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:64"><decl pos:start="1:59" pos:end="1:64"><type pos:start="1:59" pos:end="1:64"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:64">rd</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="26:14">{<block_content pos:start="3:5" pos:end="26:14">
    <decl_stmt pos:start="3:5" pos:end="3:19"><decl pos:start="3:5" pos:end="3:18"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:12">unsigned</name> <name pos:start="3:14" pos:end="3:16">int</name></type> <name pos:start="3:18" pos:end="3:18">i</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:21"><decl pos:start="4:5" pos:end="4:20"><type pos:start="4:5" pos:end="4:16"><name pos:start="4:5" pos:end="4:16">target_ulong</name></type> <name pos:start="4:18" pos:end="4:20">val</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:32"><expr pos:start="5:5" pos:end="5:31"><call pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:22">helper_check_align</name><argument_list pos:start="5:23" pos:end="5:31">(<argument pos:start="5:24" pos:end="5:27"><expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">addr</name></expr></argument>, <argument pos:start="5:30" pos:end="5:30"><expr pos:start="5:30" pos:end="5:30"><literal type="number" pos:start="5:30" pos:end="5:30">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:44"><expr pos:start="6:5" pos:end="6:43"><name pos:start="6:5" pos:end="6:8">addr</name> <operator pos:start="6:10" pos:end="6:10">=</operator> <call pos:start="6:12" pos:end="6:43"><name pos:start="6:12" pos:end="6:27">asi_address_mask</name><argument_list pos:start="6:28" pos:end="6:43">(<argument pos:start="6:29" pos:end="6:31"><expr pos:start="6:29" pos:end="6:31"><name pos:start="6:29" pos:end="6:31">env</name></expr></argument>, <argument pos:start="6:34" pos:end="6:36"><expr pos:start="6:34" pos:end="6:36"><name pos:start="6:34" pos:end="6:36">asi</name></expr></argument>, <argument pos:start="6:39" pos:end="6:42"><expr pos:start="6:39" pos:end="6:42"><name pos:start="6:39" pos:end="6:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <switch pos:start="7:5" pos:end="26:14">switch <condition pos:start="7:12" pos:end="7:16">(<expr pos:start="7:13" pos:end="7:15"><name pos:start="7:13" pos:end="7:15">asi</name></expr>)</condition> <block pos:start="7:18" pos:end="26:14">{<block_content pos:start="8:5" pos:end="26:14">
    <case pos:start="8:5" pos:end="8:14">case <expr pos:start="8:10" pos:end="8:13"><literal type="number" pos:start="8:10" pos:end="8:13">0xf0</literal></expr>:</case> <comment type="line" pos:start="8:16" pos:end="8:36">// Block load primary</comment>
    <case pos:start="9:5" pos:end="9:14">case <expr pos:start="9:10" pos:end="9:13"><literal type="number" pos:start="9:10" pos:end="9:13">0xf1</literal></expr>:</case> <comment type="line" pos:start="9:16" pos:end="9:38">// Block load secondary</comment>
    <case pos:start="10:5" pos:end="10:14">case <expr pos:start="10:10" pos:end="10:13"><literal type="number" pos:start="10:10" pos:end="10:13">0xf8</literal></expr>:</case> <comment type="line" pos:start="10:16" pos:end="10:39">// Block load primary LE</comment>
    <case pos:start="11:5" pos:end="11:14">case <expr pos:start="11:10" pos:end="11:13"><literal type="number" pos:start="11:10" pos:end="11:13">0xf9</literal></expr>:</case> <comment type="line" pos:start="11:16" pos:end="11:41">// Block load secondary LE</comment>
            <expr_stmt pos:start="12:13" pos:end="26:14"><expr pos:start="12:13" pos:end="26:14"><operator pos:start="12:13" pos:end="12:13">*</operator><operator pos:start="12:14" pos:end="12:14">(</operator><name pos:start="12:15" pos:end="12:22">uint32_t</name> <operator pos:start="12:24" pos:end="12:24">*</operator><operator pos:start="12:25" pos:end="12:25">)</operator><operator pos:start="12:26" pos:end="12:26">&amp;</operator><name pos:start="12:27" pos:end="12:40"><name pos:start="12:27" pos:end="12:29">env</name><operator pos:start="12:30" pos:end="12:31">-&gt;</operator><name pos:start="12:32" pos:end="12:34">fpr</name><index pos:start="12:35" pos:end="12:40">[<expr pos:start="12:36" pos:end="12:39"><name pos:start="12:36" pos:end="12:37">rd</name><operator pos:start="12:38" pos:end="12:39">++</operator></expr>]</index></name> <operator pos:start="12:42" pos:end="12:42">=</operator> <macro pos:start="12:44" pos:end="26:14"><name pos:start="12:44" pos:end="12:56">helper_ld_asi</name><argument_list pos:start="12:57" pos:end="26:14">(<argument pos:start="12:58" pos:end="12:61">addr</argument>, <argument pos:start="12:64" pos:end="12:73">asi &amp; <literal type="number" pos:start="12:70" pos:end="12:73">0x8f</literal></argument>, <argument pos:start="12:76" pos:end="12:76"><literal type="number" pos:start="12:76" pos:end="12:76">4</literal></argument>,
    <argument pos:start="13:5" pos:end="26:14">default:
        break;
    val = helper_ld_asi(addr, asi, size, <literal type="number" pos:start="15:42" pos:end="15:42">0</literal>);
    switch(size) {
    default:
    case <literal type="number" pos:start="18:10" pos:end="18:10">4</literal>:
        *((uint32_t *)&amp;env-&gt;fpr[rd]) = val;
        break;
    case <literal type="number" pos:start="21:10" pos:end="21:10">8</literal>:
        *((int64_t *)&amp;DT0) = val;
        break;
    case <literal type="number" pos:start="24:10" pos:end="24:11">16</literal>:
        <comment type="line" pos:start="25:9" pos:end="25:14">// XXX</comment>
        break;</argument></argument_list></macro></expr></expr_stmt></block_content></block></switch></block_content></block></function></unit>
