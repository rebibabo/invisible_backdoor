<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6977.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:36">gen_op_arith_subf</name><parameter_list pos:start="1:37" pos:end="5:71">(<parameter pos:start="1:38" pos:end="1:54"><decl pos:start="1:38" pos:end="1:54"><type pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:49">DisasContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">ctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:64"><decl pos:start="1:57" pos:end="1:64"><type pos:start="1:57" pos:end="1:64"><name pos:start="1:57" pos:end="1:60">TCGv</name></type> <name pos:start="1:62" pos:end="1:64">ret</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:75"><decl pos:start="1:67" pos:end="1:75"><type pos:start="1:67" pos:end="1:75"><name pos:start="1:67" pos:end="1:70">TCGv</name></type> <name pos:start="1:72" pos:end="1:75">arg1</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:46"><decl pos:start="3:38" pos:end="3:46"><type pos:start="3:38" pos:end="3:46"><name pos:start="3:38" pos:end="3:41">TCGv</name></type> <name pos:start="3:43" pos:end="3:46">arg2</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:59"><decl pos:start="3:49" pos:end="3:59"><type pos:start="3:49" pos:end="3:59"><name pos:start="3:49" pos:end="3:52">bool</name></type> <name pos:start="3:54" pos:end="3:59">add_ca</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:76"><decl pos:start="3:62" pos:end="3:76"><type pos:start="3:62" pos:end="3:76"><name pos:start="3:62" pos:end="3:65">bool</name></type> <name pos:start="3:67" pos:end="3:76">compute_ca</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:52"><decl pos:start="5:38" pos:end="5:52"><type pos:start="5:38" pos:end="5:52"><name pos:start="5:38" pos:end="5:41">bool</name></type> <name pos:start="5:43" pos:end="5:52">compute_ov</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:70"><decl pos:start="5:55" pos:end="5:70"><type pos:start="5:55" pos:end="5:70"><name pos:start="5:55" pos:end="5:58">bool</name></type> <name pos:start="5:60" pos:end="5:70">compute_rc0</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="127:1">{<block_content pos:start="9:5" pos:end="125:5">

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">TCGv</name></type> <name pos:start="9:10" pos:end="9:11">t0</name> <init pos:start="9:13" pos:end="9:17">= <expr pos:start="9:15" pos:end="9:17"><name pos:start="9:15" pos:end="9:17">ret</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:33">(<expr pos:start="13:9" pos:end="13:32"><name pos:start="13:9" pos:end="13:18">compute_ca</name> <operator pos:start="13:20" pos:end="13:21">||</operator> <name pos:start="13:23" pos:end="13:32">compute_ov</name></expr>)</condition> <block pos:start="13:35" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:28">

        <expr_stmt pos:start="15:9" pos:end="15:28"><expr pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:10">t0</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:27"><name pos:start="15:14" pos:end="15:25">tcg_temp_new</name><argument_list pos:start="15:26" pos:end="15:27">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="101:5"><if pos:start="21:5" pos:end="85:5">if <condition pos:start="21:8" pos:end="21:19">(<expr pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:18">compute_ca</name></expr>)</condition> <block pos:start="21:21" pos:end="85:5">{<block_content pos:start="25:9" pos:end="83:9">

        <comment type="block" pos:start="23:9" pos:end="23:42">/* dest = ~arg1 + arg2 [+ ca].  */</comment>

        <if_stmt pos:start="25:9" pos:end="83:9"><if pos:start="25:9" pos:end="62:9">if <condition pos:start="25:12" pos:end="25:29">(<expr pos:start="25:13" pos:end="25:28"><call pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:23">NARROW_MODE</name><argument_list pos:start="25:24" pos:end="25:28">(<argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:27">ctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:31" pos:end="62:9">{<block_content pos:start="33:13" pos:end="60:47">

            <comment type="block" pos:start="27:13" pos:end="31:37">/* Caution: a non-obvious corner case of the spec is that we

               must produce the *entire* 64-bit addition, but produce the

               carry into bit 32.  */</comment>

            <decl_stmt pos:start="33:13" pos:end="33:39"><decl pos:start="33:13" pos:end="33:38"><type pos:start="33:13" pos:end="33:16"><name pos:start="33:13" pos:end="33:16">TCGv</name></type> <name pos:start="33:18" pos:end="33:21">inv1</name> <init pos:start="33:23" pos:end="33:38">= <expr pos:start="33:25" pos:end="33:38"><call pos:start="33:25" pos:end="33:38"><name pos:start="33:25" pos:end="33:36">tcg_temp_new</name><argument_list pos:start="33:37" pos:end="33:38">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:37"><decl pos:start="35:13" pos:end="35:36"><type pos:start="35:13" pos:end="35:16"><name pos:start="35:13" pos:end="35:16">TCGv</name></type> <name pos:start="35:18" pos:end="35:19">t1</name> <init pos:start="35:21" pos:end="35:36">= <expr pos:start="35:23" pos:end="35:36"><call pos:start="35:23" pos:end="35:36"><name pos:start="35:23" pos:end="35:34">tcg_temp_new</name><argument_list pos:start="35:35" pos:end="35:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:39"><expr pos:start="37:13" pos:end="37:38"><call pos:start="37:13" pos:end="37:38"><name pos:start="37:13" pos:end="37:26">tcg_gen_not_tl</name><argument_list pos:start="37:27" pos:end="37:38">(<argument pos:start="37:28" pos:end="37:31"><expr pos:start="37:28" pos:end="37:31"><name pos:start="37:28" pos:end="37:31">inv1</name></expr></argument>, <argument pos:start="37:34" pos:end="37:37"><expr pos:start="37:34" pos:end="37:37"><name pos:start="37:34" pos:end="37:37">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="47:13"><if pos:start="39:13" pos:end="43:13">if <condition pos:start="39:16" pos:end="39:23">(<expr pos:start="39:17" pos:end="39:22"><name pos:start="39:17" pos:end="39:22">add_ca</name></expr>)</condition> <block pos:start="39:25" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:49">

                <expr_stmt pos:start="41:17" pos:end="41:49"><expr pos:start="41:17" pos:end="41:48"><call pos:start="41:17" pos:end="41:48"><name pos:start="41:17" pos:end="41:30">tcg_gen_add_tl</name><argument_list pos:start="41:31" pos:end="41:48">(<argument pos:start="41:32" pos:end="41:33"><expr pos:start="41:32" pos:end="41:33"><name pos:start="41:32" pos:end="41:33">t0</name></expr></argument>, <argument pos:start="41:36" pos:end="41:39"><expr pos:start="41:36" pos:end="41:39"><name pos:start="41:36" pos:end="41:39">arg2</name></expr></argument>, <argument pos:start="41:42" pos:end="41:47"><expr pos:start="41:42" pos:end="41:47"><name pos:start="41:42" pos:end="41:47">cpu_ca</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="43:15" pos:end="47:13">else <block pos:start="43:20" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:45">

                <expr_stmt pos:start="45:17" pos:end="45:45"><expr pos:start="45:17" pos:end="45:44"><call pos:start="45:17" pos:end="45:44"><name pos:start="45:17" pos:end="45:31">tcg_gen_addi_tl</name><argument_list pos:start="45:32" pos:end="45:44">(<argument pos:start="45:33" pos:end="45:34"><expr pos:start="45:33" pos:end="45:34"><name pos:start="45:33" pos:end="45:34">t0</name></expr></argument>, <argument pos:start="45:37" pos:end="45:40"><expr pos:start="45:37" pos:end="45:40"><name pos:start="45:37" pos:end="45:40">arg2</name></expr></argument>, <argument pos:start="45:43" pos:end="45:43"><expr pos:start="45:43" pos:end="45:43"><literal type="number" pos:start="45:43" pos:end="45:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:43"><expr pos:start="49:13" pos:end="49:42"><call pos:start="49:13" pos:end="49:42"><name pos:start="49:13" pos:end="49:26">tcg_gen_xor_tl</name><argument_list pos:start="49:27" pos:end="49:42">(<argument pos:start="49:28" pos:end="49:29"><expr pos:start="49:28" pos:end="49:29"><name pos:start="49:28" pos:end="49:29">t1</name></expr></argument>, <argument pos:start="49:32" pos:end="49:35"><expr pos:start="49:32" pos:end="49:35"><name pos:start="49:32" pos:end="49:35">arg2</name></expr></argument>, <argument pos:start="49:38" pos:end="49:41"><expr pos:start="49:38" pos:end="49:41"><name pos:start="49:38" pos:end="49:41">inv1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="49:53" pos:end="49:75">/* add without carry */</comment>

            <expr_stmt pos:start="51:13" pos:end="51:41"><expr pos:start="51:13" pos:end="51:40"><call pos:start="51:13" pos:end="51:40"><name pos:start="51:13" pos:end="51:26">tcg_gen_add_tl</name><argument_list pos:start="51:27" pos:end="51:40">(<argument pos:start="51:28" pos:end="51:29"><expr pos:start="51:28" pos:end="51:29"><name pos:start="51:28" pos:end="51:29">t0</name></expr></argument>, <argument pos:start="51:32" pos:end="51:33"><expr pos:start="51:32" pos:end="51:33"><name pos:start="51:32" pos:end="51:33">t0</name></expr></argument>, <argument pos:start="51:36" pos:end="51:39"><expr pos:start="51:36" pos:end="51:39"><name pos:start="51:36" pos:end="51:39">inv1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <expr_stmt pos:start="54:13" pos:end="54:43"><expr pos:start="54:13" pos:end="54:42"><call pos:start="54:13" pos:end="54:42"><name pos:start="54:13" pos:end="54:26">tcg_gen_xor_tl</name><argument_list pos:start="54:27" pos:end="54:42">(<argument pos:start="54:28" pos:end="54:33"><expr pos:start="54:28" pos:end="54:33"><name pos:start="54:28" pos:end="54:33">cpu_ca</name></expr></argument>, <argument pos:start="54:36" pos:end="54:37"><expr pos:start="54:36" pos:end="54:37"><name pos:start="54:36" pos:end="54:37">t0</name></expr></argument>, <argument pos:start="54:40" pos:end="54:41"><expr pos:start="54:40" pos:end="54:41"><name pos:start="54:40" pos:end="54:41">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="54:53" pos:end="54:79">/* bits changes w/ carry */</comment>

            <expr_stmt pos:start="56:13" pos:end="56:30"><expr pos:start="56:13" pos:end="56:29"><call pos:start="56:13" pos:end="56:29"><name pos:start="56:13" pos:end="56:25">tcg_temp_free</name><argument_list pos:start="56:26" pos:end="56:29">(<argument pos:start="56:27" pos:end="56:28"><expr pos:start="56:27" pos:end="56:28"><name pos:start="56:27" pos:end="56:28">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="58:13" pos:end="58:48"><expr pos:start="58:13" pos:end="58:47"><call pos:start="58:13" pos:end="58:47"><name pos:start="58:13" pos:end="58:27">tcg_gen_shri_tl</name><argument_list pos:start="58:28" pos:end="58:47">(<argument pos:start="58:29" pos:end="58:34"><expr pos:start="58:29" pos:end="58:34"><name pos:start="58:29" pos:end="58:34">cpu_ca</name></expr></argument>, <argument pos:start="58:37" pos:end="58:42"><expr pos:start="58:37" pos:end="58:42"><name pos:start="58:37" pos:end="58:42">cpu_ca</name></expr></argument>, <argument pos:start="58:45" pos:end="58:46"><expr pos:start="58:45" pos:end="58:46"><literal type="number" pos:start="58:45" pos:end="58:46">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="58:53" pos:end="58:72">/* extract bit 32 */</comment>

            <expr_stmt pos:start="60:13" pos:end="60:47"><expr pos:start="60:13" pos:end="60:46"><call pos:start="60:13" pos:end="60:46"><name pos:start="60:13" pos:end="60:27">tcg_gen_andi_tl</name><argument_list pos:start="60:28" pos:end="60:46">(<argument pos:start="60:29" pos:end="60:34"><expr pos:start="60:29" pos:end="60:34"><name pos:start="60:29" pos:end="60:34">cpu_ca</name></expr></argument>, <argument pos:start="60:37" pos:end="60:42"><expr pos:start="60:37" pos:end="60:42"><name pos:start="60:37" pos:end="60:42">cpu_ca</name></expr></argument>, <argument pos:start="60:45" pos:end="60:45"><expr pos:start="60:45" pos:end="60:45"><literal type="number" pos:start="60:45" pos:end="60:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="62:11" pos:end="77:9">else if <condition pos:start="62:19" pos:end="62:26">(<expr pos:start="62:20" pos:end="62:25"><name pos:start="62:20" pos:end="62:25">add_ca</name></expr>)</condition> <block pos:start="62:28" pos:end="77:9">{<block_content pos:start="64:13" pos:end="74:32">

            <decl_stmt pos:start="64:13" pos:end="64:45"><decl pos:start="64:13" pos:end="64:21"><type pos:start="64:13" pos:end="64:16"><name pos:start="64:13" pos:end="64:16">TCGv</name></type> <name pos:start="64:18" pos:end="64:21">zero</name></decl>, <decl pos:start="64:24" pos:end="64:44"><type ref="prev" pos:start="64:13" pos:end="64:16"/><name pos:start="64:24" pos:end="64:27">inv1</name> <init pos:start="64:29" pos:end="64:44">= <expr pos:start="64:31" pos:end="64:44"><call pos:start="64:31" pos:end="64:44"><name pos:start="64:31" pos:end="64:42">tcg_temp_new</name><argument_list pos:start="64:43" pos:end="64:44">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="66:13" pos:end="66:39"><expr pos:start="66:13" pos:end="66:38"><call pos:start="66:13" pos:end="66:38"><name pos:start="66:13" pos:end="66:26">tcg_gen_not_tl</name><argument_list pos:start="66:27" pos:end="66:38">(<argument pos:start="66:28" pos:end="66:31"><expr pos:start="66:28" pos:end="66:31"><name pos:start="66:28" pos:end="66:31">inv1</name></expr></argument>, <argument pos:start="66:34" pos:end="66:37"><expr pos:start="66:34" pos:end="66:37"><name pos:start="66:34" pos:end="66:37">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="68:13" pos:end="68:35"><expr pos:start="68:13" pos:end="68:34"><name pos:start="68:13" pos:end="68:16">zero</name> <operator pos:start="68:18" pos:end="68:18">=</operator> <call pos:start="68:20" pos:end="68:34"><name pos:start="68:20" pos:end="68:31">tcg_const_tl</name><argument_list pos:start="68:32" pos:end="68:34">(<argument pos:start="68:33" pos:end="68:33"><expr pos:start="68:33" pos:end="68:33"><literal type="number" pos:start="68:33" pos:end="68:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="70:13" pos:end="70:66"><expr pos:start="70:13" pos:end="70:65"><call pos:start="70:13" pos:end="70:65"><name pos:start="70:13" pos:end="70:27">tcg_gen_add2_tl</name><argument_list pos:start="70:28" pos:end="70:65">(<argument pos:start="70:29" pos:end="70:30"><expr pos:start="70:29" pos:end="70:30"><name pos:start="70:29" pos:end="70:30">t0</name></expr></argument>, <argument pos:start="70:33" pos:end="70:38"><expr pos:start="70:33" pos:end="70:38"><name pos:start="70:33" pos:end="70:38">cpu_ca</name></expr></argument>, <argument pos:start="70:41" pos:end="70:44"><expr pos:start="70:41" pos:end="70:44"><name pos:start="70:41" pos:end="70:44">arg2</name></expr></argument>, <argument pos:start="70:47" pos:end="70:50"><expr pos:start="70:47" pos:end="70:50"><name pos:start="70:47" pos:end="70:50">zero</name></expr></argument>, <argument pos:start="70:53" pos:end="70:58"><expr pos:start="70:53" pos:end="70:58"><name pos:start="70:53" pos:end="70:58">cpu_ca</name></expr></argument>, <argument pos:start="70:61" pos:end="70:64"><expr pos:start="70:61" pos:end="70:64"><name pos:start="70:61" pos:end="70:64">zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="72:13" pos:end="72:64"><expr pos:start="72:13" pos:end="72:63"><call pos:start="72:13" pos:end="72:63"><name pos:start="72:13" pos:end="72:27">tcg_gen_add2_tl</name><argument_list pos:start="72:28" pos:end="72:63">(<argument pos:start="72:29" pos:end="72:30"><expr pos:start="72:29" pos:end="72:30"><name pos:start="72:29" pos:end="72:30">t0</name></expr></argument>, <argument pos:start="72:33" pos:end="72:38"><expr pos:start="72:33" pos:end="72:38"><name pos:start="72:33" pos:end="72:38">cpu_ca</name></expr></argument>, <argument pos:start="72:41" pos:end="72:42"><expr pos:start="72:41" pos:end="72:42"><name pos:start="72:41" pos:end="72:42">t0</name></expr></argument>, <argument pos:start="72:45" pos:end="72:50"><expr pos:start="72:45" pos:end="72:50"><name pos:start="72:45" pos:end="72:50">cpu_ca</name></expr></argument>, <argument pos:start="72:53" pos:end="72:56"><expr pos:start="72:53" pos:end="72:56"><name pos:start="72:53" pos:end="72:56">inv1</name></expr></argument>, <argument pos:start="72:59" pos:end="72:62"><expr pos:start="72:59" pos:end="72:62"><name pos:start="72:59" pos:end="72:62">zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="74:13" pos:end="74:32"><expr pos:start="74:13" pos:end="74:31"><call pos:start="74:13" pos:end="74:31"><name pos:start="74:13" pos:end="74:25">tcg_temp_free</name><argument_list pos:start="74:26" pos:end="74:31">(<argument pos:start="74:27" pos:end="74:30"><expr pos:start="74:27" pos:end="74:30"><name pos:start="74:27" pos:end="74:30">zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        </block_content>}</block></if> <else pos:start="77:11" pos:end="83:9">else <block pos:start="77:16" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:43">

            <expr_stmt pos:start="79:13" pos:end="79:65"><expr pos:start="79:13" pos:end="79:64"><call pos:start="79:13" pos:end="79:64"><name pos:start="79:13" pos:end="79:30">tcg_gen_setcond_tl</name><argument_list pos:start="79:31" pos:end="79:64">(<argument pos:start="79:32" pos:end="79:43"><expr pos:start="79:32" pos:end="79:43"><name pos:start="79:32" pos:end="79:43">TCG_COND_GEU</name></expr></argument>, <argument pos:start="79:46" pos:end="79:51"><expr pos:start="79:46" pos:end="79:51"><name pos:start="79:46" pos:end="79:51">cpu_ca</name></expr></argument>, <argument pos:start="79:54" pos:end="79:57"><expr pos:start="79:54" pos:end="79:57"><name pos:start="79:54" pos:end="79:57">arg2</name></expr></argument>, <argument pos:start="79:60" pos:end="79:63"><expr pos:start="79:60" pos:end="79:63"><name pos:start="79:60" pos:end="79:63">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:43"><expr pos:start="81:13" pos:end="81:42"><call pos:start="81:13" pos:end="81:42"><name pos:start="81:13" pos:end="81:26">tcg_gen_sub_tl</name><argument_list pos:start="81:27" pos:end="81:42">(<argument pos:start="81:28" pos:end="81:29"><expr pos:start="81:28" pos:end="81:29"><name pos:start="81:28" pos:end="81:29">t0</name></expr></argument>, <argument pos:start="81:32" pos:end="81:35"><expr pos:start="81:32" pos:end="81:35"><name pos:start="81:32" pos:end="81:35">arg2</name></expr></argument>, <argument pos:start="81:38" pos:end="81:41"><expr pos:start="81:38" pos:end="81:41"><name pos:start="81:38" pos:end="81:41">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="85:7" pos:end="97:5">else if <condition pos:start="85:15" pos:end="85:22">(<expr pos:start="85:16" pos:end="85:21"><name pos:start="85:16" pos:end="85:21">add_ca</name></expr>)</condition> <block pos:start="85:24" pos:end="97:5">{<block_content pos:start="91:9" pos:end="95:35">

        <comment type="block" pos:start="87:9" pos:end="89:66">/* Since we're ignoring carry-out, we can simplify the

           standard ~arg1 + arg2 + ca to arg2 - arg1 + ca - 1.  */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:39"><expr pos:start="91:9" pos:end="91:38"><call pos:start="91:9" pos:end="91:38"><name pos:start="91:9" pos:end="91:22">tcg_gen_sub_tl</name><argument_list pos:start="91:23" pos:end="91:38">(<argument pos:start="91:24" pos:end="91:25"><expr pos:start="91:24" pos:end="91:25"><name pos:start="91:24" pos:end="91:25">t0</name></expr></argument>, <argument pos:start="91:28" pos:end="91:31"><expr pos:start="91:28" pos:end="91:31"><name pos:start="91:28" pos:end="91:31">arg2</name></expr></argument>, <argument pos:start="91:34" pos:end="91:37"><expr pos:start="91:34" pos:end="91:37"><name pos:start="91:34" pos:end="91:37">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:39"><expr pos:start="93:9" pos:end="93:38"><call pos:start="93:9" pos:end="93:38"><name pos:start="93:9" pos:end="93:22">tcg_gen_add_tl</name><argument_list pos:start="93:23" pos:end="93:38">(<argument pos:start="93:24" pos:end="93:25"><expr pos:start="93:24" pos:end="93:25"><name pos:start="93:24" pos:end="93:25">t0</name></expr></argument>, <argument pos:start="93:28" pos:end="93:29"><expr pos:start="93:28" pos:end="93:29"><name pos:start="93:28" pos:end="93:29">t0</name></expr></argument>, <argument pos:start="93:32" pos:end="93:37"><expr pos:start="93:32" pos:end="93:37"><name pos:start="93:32" pos:end="93:37">cpu_ca</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:35"><expr pos:start="95:9" pos:end="95:34"><call pos:start="95:9" pos:end="95:34"><name pos:start="95:9" pos:end="95:23">tcg_gen_subi_tl</name><argument_list pos:start="95:24" pos:end="95:34">(<argument pos:start="95:25" pos:end="95:26"><expr pos:start="95:25" pos:end="95:26"><name pos:start="95:25" pos:end="95:26">t0</name></expr></argument>, <argument pos:start="95:29" pos:end="95:30"><expr pos:start="95:29" pos:end="95:30"><name pos:start="95:29" pos:end="95:30">t0</name></expr></argument>, <argument pos:start="95:33" pos:end="95:33"><expr pos:start="95:33" pos:end="95:33"><literal type="number" pos:start="95:33" pos:end="95:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="97:7" pos:end="101:5">else <block pos:start="97:12" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:39">

        <expr_stmt pos:start="99:9" pos:end="99:39"><expr pos:start="99:9" pos:end="99:38"><call pos:start="99:9" pos:end="99:38"><name pos:start="99:9" pos:end="99:22">tcg_gen_sub_tl</name><argument_list pos:start="99:23" pos:end="99:38">(<argument pos:start="99:24" pos:end="99:25"><expr pos:start="99:24" pos:end="99:25"><name pos:start="99:24" pos:end="99:25">t0</name></expr></argument>, <argument pos:start="99:28" pos:end="99:31"><expr pos:start="99:28" pos:end="99:31"><name pos:start="99:28" pos:end="99:31">arg2</name></expr></argument>, <argument pos:start="99:34" pos:end="99:37"><expr pos:start="99:34" pos:end="99:37"><name pos:start="99:34" pos:end="99:37">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="105:5" pos:end="109:5"><if pos:start="105:5" pos:end="109:5">if <condition pos:start="105:8" pos:end="105:19">(<expr pos:start="105:9" pos:end="105:18"><name pos:start="105:9" pos:end="105:18">compute_ov</name></expr>)</condition> <block pos:start="105:21" pos:end="109:5">{<block_content pos:start="107:9" pos:end="107:56">

        <expr_stmt pos:start="107:9" pos:end="107:56"><expr pos:start="107:9" pos:end="107:55"><call pos:start="107:9" pos:end="107:55"><name pos:start="107:9" pos:end="107:31">gen_op_arith_compute_ov</name><argument_list pos:start="107:32" pos:end="107:55">(<argument pos:start="107:33" pos:end="107:35"><expr pos:start="107:33" pos:end="107:35"><name pos:start="107:33" pos:end="107:35">ctx</name></expr></argument>, <argument pos:start="107:38" pos:end="107:39"><expr pos:start="107:38" pos:end="107:39"><name pos:start="107:38" pos:end="107:39">t0</name></expr></argument>, <argument pos:start="107:42" pos:end="107:45"><expr pos:start="107:42" pos:end="107:45"><name pos:start="107:42" pos:end="107:45">arg1</name></expr></argument>, <argument pos:start="107:48" pos:end="107:51"><expr pos:start="107:48" pos:end="107:51"><name pos:start="107:48" pos:end="107:51">arg2</name></expr></argument>, <argument pos:start="107:54" pos:end="107:54"><expr pos:start="107:54" pos:end="107:54"><literal type="number" pos:start="107:54" pos:end="107:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="111:5" pos:end="115:5"><if pos:start="111:5" pos:end="115:5">if <condition pos:start="111:8" pos:end="111:30">(<expr pos:start="111:9" pos:end="111:29"><call pos:start="111:9" pos:end="111:29"><name pos:start="111:9" pos:end="111:16">unlikely</name><argument_list pos:start="111:17" pos:end="111:29">(<argument pos:start="111:18" pos:end="111:28"><expr pos:start="111:18" pos:end="111:28"><name pos:start="111:18" pos:end="111:28">compute_rc0</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:32" pos:end="115:5">{<block_content pos:start="113:9" pos:end="113:29">

        <expr_stmt pos:start="113:9" pos:end="113:29"><expr pos:start="113:9" pos:end="113:28"><call pos:start="113:9" pos:end="113:28"><name pos:start="113:9" pos:end="113:19">gen_set_Rc0</name><argument_list pos:start="113:20" pos:end="113:28">(<argument pos:start="113:21" pos:end="113:23"><expr pos:start="113:21" pos:end="113:23"><name pos:start="113:21" pos:end="113:23">ctx</name></expr></argument>, <argument pos:start="113:26" pos:end="113:27"><expr pos:start="113:26" pos:end="113:27"><name pos:start="113:26" pos:end="113:27">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="119:5" pos:end="125:5"><if pos:start="119:5" pos:end="125:5">if <condition pos:start="119:8" pos:end="119:29">(<expr pos:start="119:9" pos:end="119:28"><operator pos:start="119:9" pos:end="119:9">!</operator><call pos:start="119:10" pos:end="119:28"><name pos:start="119:10" pos:end="119:19">TCGV_EQUAL</name><argument_list pos:start="119:20" pos:end="119:28">(<argument pos:start="119:21" pos:end="119:22"><expr pos:start="119:21" pos:end="119:22"><name pos:start="119:21" pos:end="119:22">t0</name></expr></argument>, <argument pos:start="119:25" pos:end="119:27"><expr pos:start="119:25" pos:end="119:27"><name pos:start="119:25" pos:end="119:27">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:31" pos:end="125:5">{<block_content pos:start="121:9" pos:end="123:26">

        <expr_stmt pos:start="121:9" pos:end="121:32"><expr pos:start="121:9" pos:end="121:31"><call pos:start="121:9" pos:end="121:31"><name pos:start="121:9" pos:end="121:22">tcg_gen_mov_tl</name><argument_list pos:start="121:23" pos:end="121:31">(<argument pos:start="121:24" pos:end="121:26"><expr pos:start="121:24" pos:end="121:26"><name pos:start="121:24" pos:end="121:26">ret</name></expr></argument>, <argument pos:start="121:29" pos:end="121:30"><expr pos:start="121:29" pos:end="121:30"><name pos:start="121:29" pos:end="121:30">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:26"><expr pos:start="123:9" pos:end="123:25"><call pos:start="123:9" pos:end="123:25"><name pos:start="123:9" pos:end="123:21">tcg_temp_free</name><argument_list pos:start="123:22" pos:end="123:25">(<argument pos:start="123:23" pos:end="123:24"><expr pos:start="123:23" pos:end="123:24"><name pos:start="123:23" pos:end="123:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function></unit>
