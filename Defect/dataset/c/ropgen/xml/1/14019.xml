<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14019.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">arm_reset_cpu</name><parameter_list pos:start="1:18" pos:end="1:33">(<parameter pos:start="1:19" pos:end="1:32"><decl pos:start="1:19" pos:end="1:32"><type pos:start="1:19" pos:end="1:26"><name pos:start="1:19" pos:end="1:26">uint64_t</name></type> <name pos:start="1:28" pos:end="1:32">cpuid</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:41">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:30">target_cpu_state</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">ARMCPU</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:22">target_cpu</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:40"><expr pos:start="11:5" pos:end="11:39"><call pos:start="11:5" pos:end="11:39"><name pos:start="11:5" pos:end="11:11">DPRINTF</name><argument_list pos:start="11:12" pos:end="11:39">(<argument pos:start="11:13" pos:end="11:31"><expr pos:start="11:13" pos:end="11:31"><literal type="string" pos:start="11:13" pos:end="11:19">"cpu %"</literal> <name pos:start="11:21" pos:end="11:26">PRId64</name> <literal type="string" pos:start="11:28" pos:end="11:31">"\n"</literal></expr></argument>, <argument pos:start="11:34" pos:end="11:38"><expr pos:start="11:34" pos:end="11:38"><name pos:start="11:34" pos:end="11:38">cpuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:44">/* change to the cpu we are resetting */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:48"><expr pos:start="17:5" pos:end="17:47"><name pos:start="17:5" pos:end="17:20">target_cpu_state</name> <operator pos:start="17:22" pos:end="17:22">=</operator> <call pos:start="17:24" pos:end="17:47"><name pos:start="17:24" pos:end="17:40">arm_get_cpu_by_id</name><argument_list pos:start="17:41" pos:end="17:47">(<argument pos:start="17:42" pos:end="17:46"><expr pos:start="17:42" pos:end="17:46"><name pos:start="17:42" pos:end="17:46">cpuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:26">(<expr pos:start="19:9" pos:end="19:25"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:25">target_cpu_state</name></expr>)</condition> <block pos:start="19:28" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:47">

        <return pos:start="21:9" pos:end="21:47">return <expr pos:start="21:16" pos:end="21:46"><name pos:start="21:16" pos:end="21:46">QEMU_ARM_POWERCTL_INVALID_PARAM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:43"><expr pos:start="25:5" pos:end="25:42"><name pos:start="25:5" pos:end="25:14">target_cpu</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <call pos:start="25:18" pos:end="25:42"><name pos:start="25:18" pos:end="25:24">ARM_CPU</name><argument_list pos:start="25:25" pos:end="25:42">(<argument pos:start="25:26" pos:end="25:41"><expr pos:start="25:26" pos:end="25:41"><name pos:start="25:26" pos:end="25:41">target_cpu_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="37:5"><if pos:start="27:5" pos:end="37:5">if <condition pos:start="27:8" pos:end="27:32">(<expr pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:18">target_cpu</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:31">powered_off</name></name></expr>)</condition> <block pos:start="27:34" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:40">

        <expr_stmt pos:start="29:9" pos:end="33:39"><expr pos:start="29:9" pos:end="33:38"><call pos:start="29:9" pos:end="33:38"><name pos:start="29:9" pos:end="29:21">qemu_log_mask</name><argument_list pos:start="29:22" pos:end="33:38">(<argument pos:start="29:23" pos:end="29:37"><expr pos:start="29:23" pos:end="29:37"><name pos:start="29:23" pos:end="29:37">LOG_GUEST_ERROR</name></expr></argument>,

                      <argument pos:start="31:23" pos:end="31:57"><expr pos:start="31:23" pos:end="31:57"><literal type="string" pos:start="31:23" pos:end="31:38">"[ARM]%s: CPU %"</literal> <name pos:start="31:40" pos:end="31:45">PRId64</name> <literal type="string" pos:start="31:47" pos:end="31:57">" is off\n"</literal></expr></argument>,

                      <argument pos:start="33:23" pos:end="33:30"><expr pos:start="33:23" pos:end="33:30"><name pos:start="33:23" pos:end="33:30">__func__</name></expr></argument>, <argument pos:start="33:33" pos:end="33:37"><expr pos:start="33:33" pos:end="33:37"><name pos:start="33:33" pos:end="33:37">cpuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:40">return <expr pos:start="35:16" pos:end="35:39"><name pos:start="35:16" pos:end="35:39">QEMU_ARM_POWERCTL_IS_OFF</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:23">/* Reset the cpu */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:32"><expr pos:start="43:5" pos:end="43:31"><call pos:start="43:5" pos:end="43:31"><name pos:start="43:5" pos:end="43:13">cpu_reset</name><argument_list pos:start="43:14" pos:end="43:31">(<argument pos:start="43:15" pos:end="43:30"><expr pos:start="43:15" pos:end="43:30"><name pos:start="43:15" pos:end="43:30">target_cpu_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="47:5" pos:end="47:41">return <expr pos:start="47:12" pos:end="47:40"><name pos:start="47:12" pos:end="47:40">QEMU_ARM_POWERCTL_RET_SUCCESS</name></expr>;</return>

</block_content>}</block></function>
</unit>
