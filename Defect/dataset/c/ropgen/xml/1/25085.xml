<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25085.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">decode_exp_vlc</name><parameter_list pos:start="1:26" pos:end="1:53">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">WMACodecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:52"><decl pos:start="1:47" pos:end="1:52"><type pos:start="1:47" pos:end="1:52"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:52">ch</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:13">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">last_exp</name></decl>, <decl pos:start="5:19" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:19">n</name></decl>, <decl pos:start="5:22" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:25">code</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:20"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:18">uint16_t</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">float</name></type> <name pos:start="9:11" pos:end="9:11">v</name></decl>, <decl pos:start="9:14" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:9"/><name pos:start="9:14" pos:end="9:22">max_scale</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">uint32_t</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:15">q</name></decl>, <decl pos:start="11:18" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:14"><modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:23">q_end</name></decl>, <decl pos:start="11:26" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:14"/><name pos:start="11:26" pos:end="11:27">iv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:17"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:15">float</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:21">ptab</name> <init pos:start="13:23" pos:end="13:36">= <expr pos:start="13:25" pos:end="13:36"><name pos:start="13:25" pos:end="13:31">pow_tab</name> <operator pos:start="13:33" pos:end="13:33">+</operator> <literal type="number" pos:start="13:35" pos:end="13:36">60</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:50"><decl pos:start="15:5" pos:end="15:49"><type pos:start="15:5" pos:end="15:20"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:18">uint32_t</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:25">iptab</name> <init pos:start="15:27" pos:end="15:49">= <expr pos:start="15:29" pos:end="15:49"><operator pos:start="15:29" pos:end="15:29">(</operator><specifier pos:start="15:30" pos:end="15:34">const</specifier> <name pos:start="15:36" pos:end="15:43">uint32_t</name><operator pos:start="15:44" pos:end="15:44">*</operator><operator pos:start="15:45" pos:end="15:45">)</operator><name pos:start="15:46" pos:end="15:49">ptab</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:67"><expr pos:start="19:5" pos:end="19:66"><name pos:start="19:5" pos:end="19:7">ptr</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <name pos:start="19:11" pos:end="19:66"><name pos:start="19:11" pos:end="19:11">s</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:27">exponent_bands</name><index pos:start="19:28" pos:end="19:66">[<expr pos:start="19:29" pos:end="19:65"><name pos:start="19:29" pos:end="19:45"><name pos:start="19:29" pos:end="19:29">s</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:45">frame_len_bits</name></name> <operator pos:start="19:47" pos:end="19:47">-</operator> <name pos:start="19:49" pos:end="19:65"><name pos:start="19:49" pos:end="19:49">s</name><operator pos:start="19:50" pos:end="19:51">-&gt;</operator><name pos:start="19:52" pos:end="19:65">block_len_bits</name></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:5">q</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:17">uint32_t</name> <operator pos:start="21:19" pos:end="21:19">*</operator><operator pos:start="21:20" pos:end="21:20">)</operator><name pos:start="21:21" pos:end="21:36"><name pos:start="21:21" pos:end="21:21">s</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:32">exponents</name><index pos:start="21:33" pos:end="21:36">[<expr pos:start="21:34" pos:end="21:35"><name pos:start="21:34" pos:end="21:35">ch</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:9">q_end</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <name pos:start="23:13" pos:end="23:13">q</name> <operator pos:start="23:15" pos:end="23:15">+</operator> <name pos:start="23:17" pos:end="23:28"><name pos:start="23:17" pos:end="23:17">s</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:28">block_len</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:18"><expr pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:13">max_scale</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <literal type="number" pos:start="25:17" pos:end="25:17">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="53:22"><if pos:start="27:5" pos:end="51:5">if <condition pos:start="27:8" pos:end="27:24">(<expr pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:18">version</name></name> <operator pos:start="27:20" pos:end="27:21">==</operator> <literal type="number" pos:start="27:23" pos:end="27:23">1</literal></expr>)</condition> <block pos:start="27:26" pos:end="51:5">{<block_content pos:start="29:9" pos:end="49:31">

        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:16">last_exp</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <call pos:start="29:20" pos:end="29:38"><name pos:start="29:20" pos:end="29:27">get_bits</name><argument_list pos:start="29:28" pos:end="29:38">(<argument pos:start="29:29" pos:end="29:34"><expr pos:start="29:29" pos:end="29:34"><operator pos:start="29:29" pos:end="29:29">&amp;</operator><name pos:start="29:30" pos:end="29:34"><name pos:start="29:30" pos:end="29:30">s</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:34">gb</name></name></expr></argument>, <argument pos:start="29:37" pos:end="29:37"><expr pos:start="29:37" pos:end="29:37"><literal type="number" pos:start="29:37" pos:end="29:37">5</literal></expr></argument>)</argument_list></call> <operator pos:start="29:40" pos:end="29:40">+</operator> <literal type="number" pos:start="29:42" pos:end="29:43">10</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:27"><expr pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:9">v</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <name pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:16">ptab</name><index pos:start="31:17" pos:end="31:26">[<expr pos:start="31:18" pos:end="31:25"><name pos:start="31:18" pos:end="31:25">last_exp</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:29"><expr pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:10">iv</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:28"><name pos:start="33:14" pos:end="33:18">iptab</name><index pos:start="33:19" pos:end="33:28">[<expr pos:start="33:20" pos:end="33:27"><name pos:start="33:20" pos:end="33:27">last_exp</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:22"><expr pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:17">max_scale</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:21">v</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:19"><expr pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:9">n</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <operator pos:start="37:13" pos:end="37:13">*</operator><name pos:start="37:14" pos:end="37:16">ptr</name><operator pos:start="37:17" pos:end="37:18">++</operator></expr>;</expr_stmt>

        <switch pos:start="39:9" pos:end="49:31">switch <condition pos:start="39:16" pos:end="39:22">(<expr pos:start="39:17" pos:end="39:21"><name pos:start="39:17" pos:end="39:17">n</name> <operator pos:start="39:19" pos:end="39:19">&amp;</operator> <literal type="number" pos:start="39:21" pos:end="39:21">3</literal></expr>)</condition><block type="pseudo" pos:start="39:24" pos:end="49:31"><block_content pos:start="39:24" pos:end="49:31"> <do pos:start="39:24" pos:end="49:31">do <block pos:start="39:27" pos:end="49:9">{<block_content pos:start="41:9" pos:end="47:26">

        <case pos:start="41:9" pos:end="41:15">case <expr pos:start="41:14" pos:end="41:14"><literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>:</case> <expr_stmt pos:start="41:17" pos:end="41:26"><expr pos:start="41:17" pos:end="41:25"><operator pos:start="41:17" pos:end="41:17">*</operator><name pos:start="41:18" pos:end="41:18">q</name><operator pos:start="41:19" pos:end="41:20">++</operator> <operator pos:start="41:22" pos:end="41:22">=</operator> <name pos:start="41:24" pos:end="41:25">iv</name></expr>;</expr_stmt>

        <case pos:start="43:9" pos:end="43:15">case <expr pos:start="43:14" pos:end="43:14"><literal type="number" pos:start="43:14" pos:end="43:14">3</literal></expr>:</case> <expr_stmt pos:start="43:17" pos:end="43:26"><expr pos:start="43:17" pos:end="43:25"><operator pos:start="43:17" pos:end="43:17">*</operator><name pos:start="43:18" pos:end="43:18">q</name><operator pos:start="43:19" pos:end="43:20">++</operator> <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:25">iv</name></expr>;</expr_stmt>

        <case pos:start="45:9" pos:end="45:15">case <expr pos:start="45:14" pos:end="45:14"><literal type="number" pos:start="45:14" pos:end="45:14">2</literal></expr>:</case> <expr_stmt pos:start="45:17" pos:end="45:26"><expr pos:start="45:17" pos:end="45:25"><operator pos:start="45:17" pos:end="45:17">*</operator><name pos:start="45:18" pos:end="45:18">q</name><operator pos:start="45:19" pos:end="45:20">++</operator> <operator pos:start="45:22" pos:end="45:22">=</operator> <name pos:start="45:24" pos:end="45:25">iv</name></expr>;</expr_stmt>

        <case pos:start="47:9" pos:end="47:15">case <expr pos:start="47:14" pos:end="47:14"><literal type="number" pos:start="47:14" pos:end="47:14">1</literal></expr>:</case> <expr_stmt pos:start="47:17" pos:end="47:26"><expr pos:start="47:17" pos:end="47:25"><operator pos:start="47:17" pos:end="47:17">*</operator><name pos:start="47:18" pos:end="47:18">q</name><operator pos:start="47:19" pos:end="47:20">++</operator> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:25">iv</name></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="49:17" pos:end="49:30">(<expr pos:start="49:18" pos:end="49:29"><operator pos:start="49:18" pos:end="49:18">(</operator><name pos:start="49:19" pos:end="49:19">n</name> <operator pos:start="49:21" pos:end="49:22">-=</operator> <literal type="number" pos:start="49:24" pos:end="49:24">4</literal><operator pos:start="49:25" pos:end="49:25">)</operator> <operator pos:start="49:27" pos:end="49:27">&gt;</operator> <literal type="number" pos:start="49:29" pos:end="49:29">0</literal></expr>)</condition>;</do></block_content></block></switch>

    </block_content>}</block></if><else pos:start="51:6" pos:end="53:22">else<block type="pseudo" pos:start="53:9" pos:end="53:22"><block_content pos:start="53:9" pos:end="53:22">

        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:16">last_exp</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <literal type="number" pos:start="53:20" pos:end="53:21">36</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <while pos:start="57:5" pos:end="105:5">while <condition pos:start="57:11" pos:end="57:21">(<expr pos:start="57:12" pos:end="57:20"><name pos:start="57:12" pos:end="57:12">q</name> <operator pos:start="57:14" pos:end="57:14">&lt;</operator> <name pos:start="57:16" pos:end="57:20">q_end</name></expr>)</condition> <block pos:start="57:23" pos:end="105:5">{<block_content pos:start="59:9" pos:end="103:31">

        <expr_stmt pos:start="59:9" pos:end="59:70"><expr pos:start="59:9" pos:end="59:69"><name pos:start="59:9" pos:end="59:12">code</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <call pos:start="59:16" pos:end="59:69"><name pos:start="59:16" pos:end="59:23">get_vlc2</name><argument_list pos:start="59:24" pos:end="59:69">(<argument pos:start="59:25" pos:end="59:30"><expr pos:start="59:25" pos:end="59:30"><operator pos:start="59:25" pos:end="59:25">&amp;</operator><name pos:start="59:26" pos:end="59:30"><name pos:start="59:26" pos:end="59:26">s</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:30">gb</name></name></expr></argument>, <argument pos:start="59:33" pos:end="59:48"><expr pos:start="59:33" pos:end="59:48"><name pos:start="59:33" pos:end="59:48"><name pos:start="59:33" pos:end="59:33">s</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:42">exp_vlc</name><operator pos:start="59:43" pos:end="59:43">.</operator><name pos:start="59:44" pos:end="59:48">table</name></name></expr></argument>, <argument pos:start="59:51" pos:end="59:60"><expr pos:start="59:51" pos:end="59:60"><name pos:start="59:51" pos:end="59:60">EXPVLCBITS</name></expr></argument>, <argument pos:start="59:63" pos:end="59:68"><expr pos:start="59:63" pos:end="59:68"><name pos:start="59:63" pos:end="59:68">EXPMAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="61:21">(<expr pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:16">code</name> <operator pos:start="61:18" pos:end="61:18">&lt;</operator> <literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr>)</condition><block pos:start="61:22" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:22">

            <expr_stmt pos:start="63:13" pos:end="63:69"><expr pos:start="63:13" pos:end="63:68"><call pos:start="63:13" pos:end="63:68"><name pos:start="63:13" pos:end="63:18">av_log</name><argument_list pos:start="63:19" pos:end="63:68">(<argument pos:start="63:20" pos:end="63:27"><expr pos:start="63:20" pos:end="63:27"><name pos:start="63:20" pos:end="63:27"><name pos:start="63:20" pos:end="63:20">s</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:27">avctx</name></name></expr></argument>, <argument pos:start="63:30" pos:end="63:41"><expr pos:start="63:30" pos:end="63:41"><name pos:start="63:30" pos:end="63:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:44" pos:end="63:67"><expr pos:start="63:44" pos:end="63:67"><literal type="string" pos:start="63:44" pos:end="63:67">"Exponent vlc invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:22">return <expr pos:start="65:20" pos:end="65:21"><operator pos:start="65:20" pos:end="65:20">-</operator><literal type="number" pos:start="65:21" pos:end="65:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="69:9" pos:end="69:58">/* NOTE: this offset is the same as MPEG4 AAC ! */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:30"><expr pos:start="71:9" pos:end="71:29"><name pos:start="71:9" pos:end="71:16">last_exp</name> <operator pos:start="71:18" pos:end="71:19">+=</operator> <name pos:start="71:21" pos:end="71:24">code</name> <operator pos:start="71:26" pos:end="71:26">-</operator> <literal type="number" pos:start="71:28" pos:end="71:29">60</literal></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="81:9"><if pos:start="73:9" pos:end="81:9">if <condition pos:start="73:12" pos:end="73:62">(<expr pos:start="73:13" pos:end="73:61"><operator pos:start="73:13" pos:end="73:13">(</operator><name pos:start="73:14" pos:end="73:21">unsigned</name><operator pos:start="73:22" pos:end="73:22">)</operator><name pos:start="73:23" pos:end="73:30">last_exp</name> <operator pos:start="73:32" pos:end="73:32">+</operator> <literal type="number" pos:start="73:34" pos:end="73:35">60</literal> <operator pos:start="73:37" pos:end="73:37">&gt;</operator> <call pos:start="73:39" pos:end="73:61"><name pos:start="73:39" pos:end="73:52">FF_ARRAY_ELEMS</name><argument_list pos:start="73:53" pos:end="73:61">(<argument pos:start="73:54" pos:end="73:60"><expr pos:start="73:54" pos:end="73:60"><name pos:start="73:54" pos:end="73:60">pow_tab</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:64" pos:end="81:9">{<block_content pos:start="75:13" pos:end="79:22">

            <expr_stmt pos:start="75:13" pos:end="77:29"><expr pos:start="75:13" pos:end="77:28"><call pos:start="75:13" pos:end="77:28"><name pos:start="75:13" pos:end="75:18">av_log</name><argument_list pos:start="75:19" pos:end="77:28">(<argument pos:start="75:20" pos:end="75:27"><expr pos:start="75:20" pos:end="75:27"><name pos:start="75:20" pos:end="75:27"><name pos:start="75:20" pos:end="75:20">s</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:27">avctx</name></name></expr></argument>, <argument pos:start="75:30" pos:end="75:41"><expr pos:start="75:30" pos:end="75:41"><name pos:start="75:30" pos:end="75:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:44" pos:end="75:72"><expr pos:start="75:44" pos:end="75:72"><literal type="string" pos:start="75:44" pos:end="75:72">"Exponent out of range: %d\n"</literal></expr></argument>,

                   <argument pos:start="77:20" pos:end="77:27"><expr pos:start="77:20" pos:end="77:27"><name pos:start="77:20" pos:end="77:27">last_exp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="79:13" pos:end="79:22">return <expr pos:start="79:20" pos:end="79:21"><operator pos:start="79:20" pos:end="79:20">-</operator><literal type="number" pos:start="79:21" pos:end="79:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:27"><expr pos:start="83:9" pos:end="83:26"><name pos:start="83:9" pos:end="83:9">v</name> <operator pos:start="83:11" pos:end="83:11">=</operator> <name pos:start="83:13" pos:end="83:26"><name pos:start="83:13" pos:end="83:16">ptab</name><index pos:start="83:17" pos:end="83:26">[<expr pos:start="83:18" pos:end="83:25"><name pos:start="83:18" pos:end="83:25">last_exp</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:29"><expr pos:start="85:9" pos:end="85:28"><name pos:start="85:9" pos:end="85:10">iv</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <name pos:start="85:14" pos:end="85:28"><name pos:start="85:14" pos:end="85:18">iptab</name><index pos:start="85:19" pos:end="85:28">[<expr pos:start="85:20" pos:end="85:27"><name pos:start="85:20" pos:end="85:27">last_exp</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="89:26"><if pos:start="87:9" pos:end="89:26">if <condition pos:start="87:12" pos:end="87:26">(<expr pos:start="87:13" pos:end="87:25"><name pos:start="87:13" pos:end="87:13">v</name> <operator pos:start="87:15" pos:end="87:15">&gt;</operator> <name pos:start="87:17" pos:end="87:25">max_scale</name></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:26"><block_content pos:start="89:13" pos:end="89:26">

            <expr_stmt pos:start="89:13" pos:end="89:26"><expr pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:21">max_scale</name> <operator pos:start="89:23" pos:end="89:23">=</operator> <name pos:start="89:25" pos:end="89:25">v</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:19"><expr pos:start="91:9" pos:end="91:18"><name pos:start="91:9" pos:end="91:9">n</name> <operator pos:start="91:11" pos:end="91:11">=</operator> <operator pos:start="91:13" pos:end="91:13">*</operator><name pos:start="91:14" pos:end="91:16">ptr</name><operator pos:start="91:17" pos:end="91:18">++</operator></expr>;</expr_stmt>

        <switch pos:start="93:9" pos:end="103:31">switch <condition pos:start="93:16" pos:end="93:22">(<expr pos:start="93:17" pos:end="93:21"><name pos:start="93:17" pos:end="93:17">n</name> <operator pos:start="93:19" pos:end="93:19">&amp;</operator> <literal type="number" pos:start="93:21" pos:end="93:21">3</literal></expr>)</condition><block type="pseudo" pos:start="93:24" pos:end="103:31"><block_content pos:start="93:24" pos:end="103:31"> <do pos:start="93:24" pos:end="103:31">do <block pos:start="93:27" pos:end="103:9">{<block_content pos:start="95:9" pos:end="101:26">

        <case pos:start="95:9" pos:end="95:15">case <expr pos:start="95:14" pos:end="95:14"><literal type="number" pos:start="95:14" pos:end="95:14">0</literal></expr>:</case> <expr_stmt pos:start="95:17" pos:end="95:26"><expr pos:start="95:17" pos:end="95:25"><operator pos:start="95:17" pos:end="95:17">*</operator><name pos:start="95:18" pos:end="95:18">q</name><operator pos:start="95:19" pos:end="95:20">++</operator> <operator pos:start="95:22" pos:end="95:22">=</operator> <name pos:start="95:24" pos:end="95:25">iv</name></expr>;</expr_stmt>

        <case pos:start="97:9" pos:end="97:15">case <expr pos:start="97:14" pos:end="97:14"><literal type="number" pos:start="97:14" pos:end="97:14">3</literal></expr>:</case> <expr_stmt pos:start="97:17" pos:end="97:26"><expr pos:start="97:17" pos:end="97:25"><operator pos:start="97:17" pos:end="97:17">*</operator><name pos:start="97:18" pos:end="97:18">q</name><operator pos:start="97:19" pos:end="97:20">++</operator> <operator pos:start="97:22" pos:end="97:22">=</operator> <name pos:start="97:24" pos:end="97:25">iv</name></expr>;</expr_stmt>

        <case pos:start="99:9" pos:end="99:15">case <expr pos:start="99:14" pos:end="99:14"><literal type="number" pos:start="99:14" pos:end="99:14">2</literal></expr>:</case> <expr_stmt pos:start="99:17" pos:end="99:26"><expr pos:start="99:17" pos:end="99:25"><operator pos:start="99:17" pos:end="99:17">*</operator><name pos:start="99:18" pos:end="99:18">q</name><operator pos:start="99:19" pos:end="99:20">++</operator> <operator pos:start="99:22" pos:end="99:22">=</operator> <name pos:start="99:24" pos:end="99:25">iv</name></expr>;</expr_stmt>

        <case pos:start="101:9" pos:end="101:15">case <expr pos:start="101:14" pos:end="101:14"><literal type="number" pos:start="101:14" pos:end="101:14">1</literal></expr>:</case> <expr_stmt pos:start="101:17" pos:end="101:26"><expr pos:start="101:17" pos:end="101:25"><operator pos:start="101:17" pos:end="101:17">*</operator><name pos:start="101:18" pos:end="101:18">q</name><operator pos:start="101:19" pos:end="101:20">++</operator> <operator pos:start="101:22" pos:end="101:22">=</operator> <name pos:start="101:24" pos:end="101:25">iv</name></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="103:17" pos:end="103:30">(<expr pos:start="103:18" pos:end="103:29"><operator pos:start="103:18" pos:end="103:18">(</operator><name pos:start="103:19" pos:end="103:19">n</name> <operator pos:start="103:21" pos:end="103:22">-=</operator> <literal type="number" pos:start="103:24" pos:end="103:24">4</literal><operator pos:start="103:25" pos:end="103:25">)</operator> <operator pos:start="103:27" pos:end="103:27">&gt;</operator> <literal type="number" pos:start="103:29" pos:end="103:29">0</literal></expr>)</condition>;</do></block_content></block></switch>

    </block_content>}</block></while>

    <expr_stmt pos:start="107:5" pos:end="107:36"><expr pos:start="107:5" pos:end="107:35"><name pos:start="107:5" pos:end="107:23"><name pos:start="107:5" pos:end="107:5">s</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:19">max_exponent</name><index pos:start="107:20" pos:end="107:23">[<expr pos:start="107:21" pos:end="107:22"><name pos:start="107:21" pos:end="107:22">ch</name></expr>]</index></name> <operator pos:start="107:25" pos:end="107:25">=</operator> <name pos:start="107:27" pos:end="107:35">max_scale</name></expr>;</expr_stmt>

    <return pos:start="109:5" pos:end="109:13">return <expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
