<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1795.c" pos:tabs="8"><function pos:start="1:1" pos:end="28:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">scsi_disk_initfn</name><parameter_list pos:start="1:28" pos:end="1:44">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:38">SCSIDevice</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">dev</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="28:13">{<block_content pos:start="3:5" pos:end="28:13">
    <decl_stmt pos:start="3:5" pos:end="3:59"><decl pos:start="3:5" pos:end="3:58"><type pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:17">SCSIDiskState</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:20">s</name> <init pos:start="3:22" pos:end="3:58">= <expr pos:start="3:24" pos:end="3:58"><call pos:start="3:24" pos:end="3:58"><name pos:start="3:24" pos:end="3:32">DO_UPCAST</name><argument_list pos:start="3:33" pos:end="3:58">(<argument pos:start="3:34" pos:end="3:46"><expr pos:start="3:34" pos:end="3:46"><name pos:start="3:34" pos:end="3:46">SCSIDiskState</name></expr></argument>, <argument pos:start="3:49" pos:end="3:52"><expr pos:start="3:49" pos:end="3:52"><name pos:start="3:49" pos:end="3:52">qdev</name></expr></argument>, <argument pos:start="3:55" pos:end="3:57"><expr pos:start="3:55" pos:end="3:57"><name pos:start="3:55" pos:end="3:57">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:14"><decl pos:start="4:5" pos:end="4:13"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:13">is_cd</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">DriveInfo</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">dinfo</name></decl>;</decl_stmt>
    <if_stmt pos:start="6:5" pos:end="28:13"><if pos:start="6:5" pos:end="28:13">if <condition pos:start="6:8" pos:end="6:25">(<expr pos:start="6:9" pos:end="6:24"><operator pos:start="6:9" pos:end="6:9">!</operator><name pos:start="6:10" pos:end="6:24"><name pos:start="6:10" pos:end="6:10">s</name><operator pos:start="6:11" pos:end="6:12">-&gt;</operator><name pos:start="6:13" pos:end="6:16">qdev</name><operator pos:start="6:17" pos:end="6:17">.</operator><name pos:start="6:18" pos:end="6:21">conf</name><operator pos:start="6:22" pos:end="6:22">.</operator><name pos:start="6:23" pos:end="6:24">bs</name></name></expr>)</condition> <block pos:start="6:27" pos:end="28:13">{<block_content pos:start="7:9" pos:end="28:13">
        <expr_stmt pos:start="7:9" pos:end="7:58"><expr pos:start="7:9" pos:end="7:57"><call pos:start="7:9" pos:end="7:57"><name pos:start="7:9" pos:end="7:20">error_report</name><argument_list pos:start="7:21" pos:end="7:57">(<argument pos:start="7:22" pos:end="7:56"><expr pos:start="7:22" pos:end="7:56"><literal type="string" pos:start="7:22" pos:end="7:56">"scsi-disk: drive property not set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:28"><expr pos:start="8:5" pos:end="8:27"><name pos:start="8:5" pos:end="8:9"><name pos:start="8:5" pos:end="8:5">s</name><operator pos:start="8:6" pos:end="8:7">-&gt;</operator><name pos:start="8:8" pos:end="8:9">bs</name></name> <operator pos:start="8:11" pos:end="8:11">=</operator> <name pos:start="8:13" pos:end="8:27"><name pos:start="8:13" pos:end="8:13">s</name><operator pos:start="8:14" pos:end="8:15">-&gt;</operator><name pos:start="8:16" pos:end="8:19">qdev</name><operator pos:start="8:20" pos:end="8:20">.</operator><name pos:start="8:21" pos:end="8:24">conf</name><operator pos:start="8:25" pos:end="8:25">.</operator><name pos:start="8:26" pos:end="8:27">bs</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:57"><expr pos:start="9:5" pos:end="9:56"><name pos:start="9:5" pos:end="9:9">is_cd</name> <operator pos:start="9:11" pos:end="9:11">=</operator> <call pos:start="9:13" pos:end="9:37"><name pos:start="9:13" pos:end="9:30">bdrv_get_type_hint</name><argument_list pos:start="9:31" pos:end="9:37">(<argument pos:start="9:32" pos:end="9:36"><expr pos:start="9:32" pos:end="9:36"><name pos:start="9:32" pos:end="9:36"><name pos:start="9:32" pos:end="9:32">s</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:36">bs</name></name></expr></argument>)</argument_list></call> <operator pos:start="9:39" pos:end="9:40">==</operator> <name pos:start="9:42" pos:end="9:56">BDRV_TYPE_CDROM</name></expr>;</expr_stmt>
    <if_stmt pos:start="10:5" pos:end="28:13"><if pos:start="10:5" pos:end="28:13">if <condition pos:start="10:8" pos:end="10:56">(<expr pos:start="10:9" pos:end="10:55"><call pos:start="10:9" pos:end="10:35"><name pos:start="10:9" pos:end="10:25">bdrv_get_on_error</name><argument_list pos:start="10:26" pos:end="10:35">(<argument pos:start="10:27" pos:end="10:31"><expr pos:start="10:27" pos:end="10:31"><name pos:start="10:27" pos:end="10:31"><name pos:start="10:27" pos:end="10:27">s</name><operator pos:start="10:28" pos:end="10:29">-&gt;</operator><name pos:start="10:30" pos:end="10:31">bs</name></name></expr></argument>, <argument pos:start="10:34" pos:end="10:34"><expr pos:start="10:34" pos:end="10:34"><literal type="number" pos:start="10:34" pos:end="10:34">1</literal></expr></argument>)</argument_list></call> <operator pos:start="10:37" pos:end="10:38">!=</operator> <name pos:start="10:40" pos:end="10:55">BLOCK_ERR_REPORT</name></expr>)</condition> <block pos:start="10:58" pos:end="28:13">{<block_content pos:start="11:9" pos:end="28:13">
        <expr_stmt pos:start="11:9" pos:end="11:67"><expr pos:start="11:9" pos:end="11:66"><call pos:start="11:9" pos:end="11:66"><name pos:start="11:9" pos:end="11:20">error_report</name><argument_list pos:start="11:21" pos:end="11:66">(<argument pos:start="11:22" pos:end="11:65"><expr pos:start="11:22" pos:end="11:65"><literal type="string" pos:start="11:22" pos:end="11:65">"Device doesn't support drive option rerror"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="12:5" pos:end="28:13"><if pos:start="12:5" pos:end="28:13">if <condition pos:start="12:8" pos:end="12:19">(<expr pos:start="12:9" pos:end="12:18"><operator pos:start="12:9" pos:end="12:9">!</operator><name pos:start="12:10" pos:end="12:18"><name pos:start="12:10" pos:end="12:10">s</name><operator pos:start="12:11" pos:end="12:12">-&gt;</operator><name pos:start="12:13" pos:end="12:18">serial</name></name></expr>)</condition> <block pos:start="12:21" pos:end="28:13">{<block_content pos:start="14:9" pos:end="28:13">
        <comment type="block" pos:start="13:9" pos:end="13:73">/* try to fall back to value set with legacy -drive serial=... */</comment>
        <expr_stmt pos:start="14:9" pos:end="14:45"><expr pos:start="14:9" pos:end="14:44"><name pos:start="14:9" pos:end="14:13">dinfo</name> <operator pos:start="14:15" pos:end="14:15">=</operator> <call pos:start="14:17" pos:end="14:44"><name pos:start="14:17" pos:end="14:37">drive_get_by_blockdev</name><argument_list pos:start="14:38" pos:end="14:44">(<argument pos:start="14:39" pos:end="14:43"><expr pos:start="14:39" pos:end="14:43"><name pos:start="14:39" pos:end="14:43"><name pos:start="14:39" pos:end="14:39">s</name><operator pos:start="14:40" pos:end="14:41">-&gt;</operator><name pos:start="14:42" pos:end="14:43">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:70"><expr pos:start="15:9" pos:end="15:69"><name pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:17">serial</name></name> <operator pos:start="15:19" pos:end="15:19">=</operator> <call pos:start="15:21" pos:end="15:69"><name pos:start="15:21" pos:end="15:31">qemu_strdup</name><argument_list pos:start="15:32" pos:end="15:69">(<argument pos:start="15:33" pos:end="15:68"><expr pos:start="15:33" pos:end="15:68"><ternary pos:start="15:33" pos:end="15:68"><condition pos:start="15:33" pos:end="15:48"><expr pos:start="15:33" pos:end="15:46"><operator pos:start="15:33" pos:end="15:33">*</operator><name pos:start="15:34" pos:end="15:46"><name pos:start="15:34" pos:end="15:38">dinfo</name><operator pos:start="15:39" pos:end="15:40">-&gt;</operator><name pos:start="15:41" pos:end="15:46">serial</name></name></expr> ?</condition><then pos:start="15:50" pos:end="15:62"> <expr pos:start="15:50" pos:end="15:62"><name pos:start="15:50" pos:end="15:62"><name pos:start="15:50" pos:end="15:54">dinfo</name><operator pos:start="15:55" pos:end="15:56">-&gt;</operator><name pos:start="15:57" pos:end="15:62">serial</name></name></expr> </then><else pos:start="15:64" pos:end="15:68">: <expr pos:start="15:66" pos:end="15:68"><literal type="string" pos:start="15:66" pos:end="15:68">"0"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="16:5" pos:end="28:13"><if pos:start="16:5" pos:end="28:13">if <condition pos:start="16:8" pos:end="16:20">(<expr pos:start="16:9" pos:end="16:19"><operator pos:start="16:9" pos:end="16:9">!</operator><name pos:start="16:10" pos:end="16:19"><name pos:start="16:10" pos:end="16:10">s</name><operator pos:start="16:11" pos:end="16:12">-&gt;</operator><name pos:start="16:13" pos:end="16:19">version</name></name></expr>)</condition> <block pos:start="16:22" pos:end="28:13">{<block_content pos:start="17:9" pos:end="28:13">
        <expr_stmt pos:start="17:9" pos:end="17:47"><expr pos:start="17:9" pos:end="17:46"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:18">version</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <call pos:start="17:22" pos:end="17:46"><name pos:start="17:22" pos:end="17:32">qemu_strdup</name><argument_list pos:start="17:33" pos:end="17:46">(<argument pos:start="17:34" pos:end="17:45"><expr pos:start="17:34" pos:end="17:45"><name pos:start="17:34" pos:end="17:45">QEMU_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="18:5" pos:end="28:13"><if pos:start="18:5" pos:end="28:13">if <condition pos:start="18:8" pos:end="18:26">(<expr pos:start="18:9" pos:end="18:25"><call pos:start="18:9" pos:end="18:25"><name pos:start="18:9" pos:end="18:18">bdrv_is_sg</name><argument_list pos:start="18:19" pos:end="18:25">(<argument pos:start="18:20" pos:end="18:24"><expr pos:start="18:20" pos:end="18:24"><name pos:start="18:20" pos:end="18:24"><name pos:start="18:20" pos:end="18:20">s</name><operator pos:start="18:21" pos:end="18:22">-&gt;</operator><name pos:start="18:23" pos:end="18:24">bs</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="18:28" pos:end="28:13">{<block_content pos:start="19:9" pos:end="28:13">
        <expr_stmt pos:start="19:9" pos:end="19:53"><expr pos:start="19:9" pos:end="19:52"><call pos:start="19:9" pos:end="19:52"><name pos:start="19:9" pos:end="19:20">error_report</name><argument_list pos:start="19:21" pos:end="19:52">(<argument pos:start="19:22" pos:end="19:51"><expr pos:start="19:22" pos:end="19:51"><literal type="string" pos:start="19:22" pos:end="19:51">"scsi-disk: unwanted /dev/sg*"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="20:5" pos:end="28:13"><if pos:start="20:5" pos:end="22:5">if <condition pos:start="20:8" pos:end="20:14">(<expr pos:start="20:9" pos:end="20:13"><name pos:start="20:9" pos:end="20:13">is_cd</name></expr>)</condition> <block pos:start="20:16" pos:end="22:5">{<block_content pos:start="21:9" pos:end="21:33">
        <expr_stmt pos:start="21:9" pos:end="21:33"><expr pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:15">qdev</name><operator pos:start="21:16" pos:end="21:16">.</operator><name pos:start="21:17" pos:end="21:25">blocksize</name></name> <operator pos:start="21:27" pos:end="21:27">=</operator> <literal type="number" pos:start="21:29" pos:end="21:32">2048</literal></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="22:7" pos:end="28:13">else <block pos:start="22:12" pos:end="28:13">{<block_content pos:start="23:9" pos:end="28:13">
        <expr_stmt pos:start="23:9" pos:end="23:60"><expr pos:start="23:9" pos:end="23:59"><name pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:15">qdev</name><operator pos:start="23:16" pos:end="23:16">.</operator><name pos:start="23:17" pos:end="23:25">blocksize</name></name> <operator pos:start="23:27" pos:end="23:27">=</operator> <name pos:start="23:29" pos:end="23:59"><name pos:start="23:29" pos:end="23:29">s</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:35">qdev</name><operator pos:start="23:36" pos:end="23:36">.</operator><name pos:start="23:37" pos:end="23:40">conf</name><operator pos:start="23:41" pos:end="23:41">.</operator><name pos:start="23:42" pos:end="23:59">logical_block_size</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:46"><expr pos:start="24:5" pos:end="24:45"><name pos:start="24:5" pos:end="24:19"><name pos:start="24:5" pos:end="24:5">s</name><operator pos:start="24:6" pos:end="24:7">-&gt;</operator><name pos:start="24:8" pos:end="24:19">cluster_size</name></name> <operator pos:start="24:21" pos:end="24:21">=</operator> <name pos:start="24:23" pos:end="24:39"><name pos:start="24:23" pos:end="24:23">s</name><operator pos:start="24:24" pos:end="24:25">-&gt;</operator><name pos:start="24:26" pos:end="24:29">qdev</name><operator pos:start="24:30" pos:end="24:30">.</operator><name pos:start="24:31" pos:end="24:39">blocksize</name></name> <operator pos:start="24:41" pos:end="24:41">/</operator> <literal type="number" pos:start="24:43" pos:end="24:45">512</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:11">qdev</name><operator pos:start="25:12" pos:end="25:12">.</operator><name pos:start="25:13" pos:end="25:16">type</name></name> <operator pos:start="25:18" pos:end="25:18">=</operator> <name pos:start="25:20" pos:end="25:28">TYPE_DISK</name></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:61"><expr pos:start="26:5" pos:end="26:60"><call pos:start="26:5" pos:end="26:60"><name pos:start="26:5" pos:end="26:36">qemu_add_vm_change_state_handler</name><argument_list pos:start="26:37" pos:end="26:60">(<argument pos:start="26:38" pos:end="26:56"><expr pos:start="26:38" pos:end="26:56"><name pos:start="26:38" pos:end="26:56">scsi_dma_restart_cb</name></expr></argument>, <argument pos:start="26:59" pos:end="26:59"><expr pos:start="26:59" pos:end="26:59"><name pos:start="26:59" pos:end="26:59">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:37"><expr pos:start="27:5" pos:end="27:36"><call pos:start="27:5" pos:end="27:36"><name pos:start="27:5" pos:end="27:22">bdrv_set_removable</name><argument_list pos:start="27:23" pos:end="27:36">(<argument pos:start="27:24" pos:end="27:28"><expr pos:start="27:24" pos:end="27:28"><name pos:start="27:24" pos:end="27:28"><name pos:start="27:24" pos:end="27:24">s</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:28">bs</name></name></expr></argument>, <argument pos:start="27:31" pos:end="27:35"><expr pos:start="27:31" pos:end="27:35"><name pos:start="27:31" pos:end="27:35">is_cd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="28:5" pos:end="28:13">return <expr pos:start="28:12" pos:end="28:12"><literal type="number" pos:start="28:12" pos:end="28:12">0</literal></expr>;</return></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
