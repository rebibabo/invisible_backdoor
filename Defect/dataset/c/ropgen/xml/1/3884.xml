<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3884.c" pos:tabs="8"><function pos:start="1:1" pos:end="100:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">opus_header</name><parameter_list pos:start="1:23" pos:end="1:53">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:43"><name pos:start="1:24" pos:end="1:38">AVFormatContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">avf</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:52"><decl pos:start="1:46" pos:end="1:52"><type pos:start="1:46" pos:end="1:52"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:52">idx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="100:1">{<block_content pos:start="5:5" pos:end="98:13">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:14">ogg</name></name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">ogg</name>              <init pos:start="5:34" pos:end="5:49">= <expr pos:start="5:36" pos:end="5:49"><name pos:start="5:36" pos:end="5:49"><name pos:start="5:36" pos:end="5:38">avf</name><operator pos:start="5:39" pos:end="5:40">-&gt;</operator><name pos:start="5:41" pos:end="5:49">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:54"><decl pos:start="7:5" pos:end="7:53"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:21">ogg_stream</name></name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:25">os</name>        <init pos:start="7:34" pos:end="7:53">= <expr pos:start="7:36" pos:end="7:53"><operator pos:start="7:36" pos:end="7:36">&amp;</operator><name pos:start="7:37" pos:end="7:53"><name pos:start="7:37" pos:end="7:39">ogg</name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:48">streams</name><index pos:start="7:49" pos:end="7:53">[<expr pos:start="7:50" pos:end="7:52"><name pos:start="7:50" pos:end="7:52">idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:52"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name>                 <init pos:start="9:34" pos:end="9:52">= <expr pos:start="9:36" pos:end="9:52"><name pos:start="9:36" pos:end="9:52"><name pos:start="9:36" pos:end="9:38">avf</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:47">streams</name><index pos:start="9:48" pos:end="9:52">[<expr pos:start="9:49" pos:end="9:51"><name pos:start="9:49" pos:end="9:51">idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:46"><type pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:26">oggopus_private</name></name> <modifier pos:start="11:28" pos:end="11:28">*</modifier></type><name pos:start="11:29" pos:end="11:32">priv</name> <init pos:start="11:34" pos:end="11:46">= <expr pos:start="11:36" pos:end="11:46"><name pos:start="11:36" pos:end="11:46"><name pos:start="11:36" pos:end="11:37">os</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:46">private</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:55"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:19">packet</name>              <init pos:start="13:34" pos:end="13:55">= <expr pos:start="13:36" pos:end="13:55"><name pos:start="13:36" pos:end="13:42"><name pos:start="13:36" pos:end="13:37">os</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:42">buf</name></name> <operator pos:start="13:44" pos:end="13:44">+</operator> <name pos:start="13:46" pos:end="13:55"><name pos:start="13:46" pos:end="13:47">os</name><operator pos:start="13:48" pos:end="13:49">-&gt;</operator><name pos:start="13:50" pos:end="13:55">pstart</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:14">(<expr pos:start="17:9" pos:end="17:13"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:13">priv</name></expr>)</condition> <block pos:start="17:16" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:35">

        <expr_stmt pos:start="19:9" pos:end="19:55"><expr pos:start="19:9" pos:end="19:54"><name pos:start="19:9" pos:end="19:12">priv</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:26"><name pos:start="19:16" pos:end="19:17">os</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:26">private</name></name> <operator pos:start="19:28" pos:end="19:28">=</operator> <call pos:start="19:30" pos:end="19:54"><name pos:start="19:30" pos:end="19:39">av_mallocz</name><argument_list pos:start="19:40" pos:end="19:54">(<argument pos:start="19:41" pos:end="19:53"><expr pos:start="19:41" pos:end="19:53"><sizeof pos:start="19:41" pos:end="19:53">sizeof<argument_list pos:start="19:47" pos:end="19:53">(<argument pos:start="19:48" pos:end="19:52"><expr pos:start="19:48" pos:end="19:52"><operator pos:start="19:48" pos:end="19:48">*</operator><name pos:start="19:49" pos:end="19:52">priv</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:35"><if pos:start="21:9" pos:end="23:35">if <condition pos:start="21:12" pos:end="21:18">(<expr pos:start="21:13" pos:end="21:17"><operator pos:start="21:13" pos:end="21:13">!</operator><name pos:start="21:14" pos:end="21:17">priv</name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:35"><block_content pos:start="23:13" pos:end="23:35">

            <return pos:start="23:13" pos:end="23:35">return <expr pos:start="23:20" pos:end="23:34"><call pos:start="23:20" pos:end="23:34"><name pos:start="23:20" pos:end="23:26">AVERROR</name><argument_list pos:start="23:27" pos:end="23:34">(<argument pos:start="23:28" pos:end="23:33"><expr pos:start="23:28" pos:end="23:33"><name pos:start="23:28" pos:end="23:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="78:5"><if pos:start="29:5" pos:end="78:5">if <condition pos:start="29:8" pos:end="29:33">(<expr pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:10">os</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:17">flags</name></name> <operator pos:start="29:19" pos:end="29:19">&amp;</operator> <name pos:start="29:21" pos:end="29:32">OGG_FLAG_BOS</name></expr>)</condition> <block pos:start="29:35" pos:end="78:5">{<block_content pos:start="31:9" pos:end="76:17">

        <if_stmt pos:start="31:9" pos:end="33:39"><if pos:start="31:9" pos:end="33:39">if <condition pos:start="31:12" pos:end="31:75">(<expr pos:start="31:13" pos:end="31:74"><name pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:14">os</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:21">psize</name></name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <name pos:start="31:25" pos:end="31:38">OPUS_HEAD_SIZE</name> <operator pos:start="31:40" pos:end="31:41">||</operator> <operator pos:start="31:43" pos:end="31:43">(</operator><call pos:start="31:44" pos:end="31:61"><name pos:start="31:44" pos:end="31:49">AV_RL8</name><argument_list pos:start="31:50" pos:end="31:61">(<argument pos:start="31:51" pos:end="31:60"><expr pos:start="31:51" pos:end="31:60"><name pos:start="31:51" pos:end="31:56">packet</name> <operator pos:start="31:58" pos:end="31:58">+</operator> <literal type="number" pos:start="31:60" pos:end="31:60">8</literal></expr></argument>)</argument_list></call> <operator pos:start="31:63" pos:end="31:63">&amp;</operator> <literal type="number" pos:start="31:65" pos:end="31:68">0xF0</literal><operator pos:start="31:69" pos:end="31:69">)</operator> <operator pos:start="31:71" pos:end="31:72">!=</operator> <literal type="number" pos:start="31:74" pos:end="31:74">0</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:39"><block_content pos:start="33:13" pos:end="33:39">

            <return pos:start="33:13" pos:end="33:39">return <expr pos:start="33:20" pos:end="33:38"><name pos:start="33:20" pos:end="33:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:54"><expr pos:start="35:9" pos:end="35:53"><name pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:10">st</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:20">codecpar</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:32">codec_type</name></name> <operator pos:start="35:34" pos:end="35:34">=</operator> <name pos:start="35:36" pos:end="35:53">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:52"><expr pos:start="37:9" pos:end="37:51"><name pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:10">st</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:20">codecpar</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:30">codec_id</name></name>   <operator pos:start="37:34" pos:end="37:34">=</operator> <name pos:start="37:36" pos:end="37:51">AV_CODEC_ID_OPUS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:54"><expr pos:start="39:9" pos:end="39:53"><name pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:10">st</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:20">codecpar</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:30">channels</name></name>   <operator pos:start="39:34" pos:end="39:34">=</operator> <call pos:start="39:36" pos:end="39:53"><name pos:start="39:36" pos:end="39:41">AV_RL8</name><argument_list pos:start="39:42" pos:end="39:53">(<argument pos:start="39:43" pos:end="39:52"><expr pos:start="39:43" pos:end="39:52"><name pos:start="39:43" pos:end="39:48">packet</name> <operator pos:start="39:50" pos:end="39:50">+</operator> <literal type="number" pos:start="39:52" pos:end="39:52">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:53"><expr pos:start="43:9" pos:end="43:52"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:12">priv</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:22">pre_skip</name></name>        <operator pos:start="43:31" pos:end="43:31">=</operator> <call pos:start="43:33" pos:end="43:52"><name pos:start="43:33" pos:end="43:39">AV_RL16</name><argument_list pos:start="43:40" pos:end="43:52">(<argument pos:start="43:41" pos:end="43:51"><expr pos:start="43:41" pos:end="43:51"><name pos:start="43:41" pos:end="43:46">packet</name> <operator pos:start="43:48" pos:end="43:48">+</operator> <literal type="number" pos:start="43:50" pos:end="43:51">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:55"><expr pos:start="45:9" pos:end="45:54"><name pos:start="45:9" pos:end="45:37"><name pos:start="45:9" pos:end="45:10">st</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:20">codecpar</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:37">initial_padding</name></name> <operator pos:start="45:39" pos:end="45:39">=</operator> <name pos:start="45:41" pos:end="45:54"><name pos:start="45:41" pos:end="45:44">priv</name><operator pos:start="45:45" pos:end="45:46">-&gt;</operator><name pos:start="45:47" pos:end="45:54">pre_skip</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="47:9" pos:end="47:55">/*orig_sample_rate    = AV_RL32(packet + 12);*/</comment>

        <comment type="block" pos:start="49:9" pos:end="49:55">/*gain                = AV_RL16(packet + 16);*/</comment>

        <comment type="block" pos:start="51:9" pos:end="51:55">/*channel_map         = AV_RL8 (packet + 18);*/</comment>




        <if_stmt pos:start="56:9" pos:end="58:35"><if pos:start="56:9" pos:end="58:35">if <condition pos:start="56:12" pos:end="56:56">(<expr pos:start="56:13" pos:end="56:55"><call pos:start="56:13" pos:end="56:55"><name pos:start="56:13" pos:end="56:30">ff_alloc_extradata</name><argument_list pos:start="56:31" pos:end="56:55">(<argument pos:start="56:32" pos:end="56:43"><expr pos:start="56:32" pos:end="56:43"><name pos:start="56:32" pos:end="56:43"><name pos:start="56:32" pos:end="56:33">st</name><operator pos:start="56:34" pos:end="56:35">-&gt;</operator><name pos:start="56:36" pos:end="56:43">codecpar</name></name></expr></argument>, <argument pos:start="56:46" pos:end="56:54"><expr pos:start="56:46" pos:end="56:54"><name pos:start="56:46" pos:end="56:54"><name pos:start="56:46" pos:end="56:47">os</name><operator pos:start="56:48" pos:end="56:49">-&gt;</operator><name pos:start="56:50" pos:end="56:54">psize</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="58:13" pos:end="58:35"><block_content pos:start="58:13" pos:end="58:35">

            <return pos:start="58:13" pos:end="58:35">return <expr pos:start="58:20" pos:end="58:34"><call pos:start="58:20" pos:end="58:34"><name pos:start="58:20" pos:end="58:26">AVERROR</name><argument_list pos:start="58:27" pos:end="58:34">(<argument pos:start="58:28" pos:end="58:33"><expr pos:start="58:28" pos:end="58:33"><name pos:start="58:28" pos:end="58:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="62:9" pos:end="62:59"><expr pos:start="62:9" pos:end="62:58"><call pos:start="62:9" pos:end="62:58"><name pos:start="62:9" pos:end="62:14">memcpy</name><argument_list pos:start="62:15" pos:end="62:58">(<argument pos:start="62:16" pos:end="62:38"><expr pos:start="62:16" pos:end="62:38"><name pos:start="62:16" pos:end="62:38"><name pos:start="62:16" pos:end="62:17">st</name><operator pos:start="62:18" pos:end="62:19">-&gt;</operator><name pos:start="62:20" pos:end="62:27">codecpar</name><operator pos:start="62:28" pos:end="62:29">-&gt;</operator><name pos:start="62:30" pos:end="62:38">extradata</name></name></expr></argument>, <argument pos:start="62:41" pos:end="62:46"><expr pos:start="62:41" pos:end="62:46"><name pos:start="62:41" pos:end="62:46">packet</name></expr></argument>, <argument pos:start="62:49" pos:end="62:57"><expr pos:start="62:49" pos:end="62:57"><name pos:start="62:49" pos:end="62:57"><name pos:start="62:49" pos:end="62:50">os</name><operator pos:start="62:51" pos:end="62:52">-&gt;</operator><name pos:start="62:53" pos:end="62:57">psize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="66:9" pos:end="66:42"><expr pos:start="66:9" pos:end="66:41"><name pos:start="66:9" pos:end="66:33"><name pos:start="66:9" pos:end="66:10">st</name><operator pos:start="66:11" pos:end="66:12">-&gt;</operator><name pos:start="66:13" pos:end="66:20">codecpar</name><operator pos:start="66:21" pos:end="66:22">-&gt;</operator><name pos:start="66:23" pos:end="66:33">sample_rate</name></name> <operator pos:start="66:35" pos:end="66:35">=</operator> <literal type="number" pos:start="66:37" pos:end="66:41">48000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="68:9" pos:end="70:81"><expr pos:start="68:9" pos:end="70:80"><name pos:start="68:9" pos:end="68:34"><name pos:start="68:9" pos:end="68:10">st</name><operator pos:start="68:11" pos:end="68:12">-&gt;</operator><name pos:start="68:13" pos:end="68:20">codecpar</name><operator pos:start="68:21" pos:end="68:22">-&gt;</operator><name pos:start="68:23" pos:end="68:34">seek_preroll</name></name> <operator pos:start="68:36" pos:end="68:36">=</operator> <call pos:start="68:38" pos:end="70:80"><name pos:start="68:38" pos:end="68:47">av_rescale</name><argument_list pos:start="68:48" pos:end="70:80">(<argument pos:start="68:49" pos:end="68:68"><expr pos:start="68:49" pos:end="68:68"><name pos:start="68:49" pos:end="68:68">OPUS_SEEK_PREROLL_MS</name></expr></argument>,

                                                <argument pos:start="70:49" pos:end="70:73"><expr pos:start="70:49" pos:end="70:73"><name pos:start="70:49" pos:end="70:73"><name pos:start="70:49" pos:end="70:50">st</name><operator pos:start="70:51" pos:end="70:52">-&gt;</operator><name pos:start="70:53" pos:end="70:60">codecpar</name><operator pos:start="70:61" pos:end="70:62">-&gt;</operator><name pos:start="70:63" pos:end="70:73">sample_rate</name></name></expr></argument>, <argument pos:start="70:76" pos:end="70:79"><expr pos:start="70:76" pos:end="70:79"><literal type="number" pos:start="70:76" pos:end="70:79">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="72:9" pos:end="72:46"><expr pos:start="72:9" pos:end="72:45"><call pos:start="72:9" pos:end="72:45"><name pos:start="72:9" pos:end="72:27">avpriv_set_pts_info</name><argument_list pos:start="72:28" pos:end="72:45">(<argument pos:start="72:29" pos:end="72:30"><expr pos:start="72:29" pos:end="72:30"><name pos:start="72:29" pos:end="72:30">st</name></expr></argument>, <argument pos:start="72:33" pos:end="72:34"><expr pos:start="72:33" pos:end="72:34"><literal type="number" pos:start="72:33" pos:end="72:34">64</literal></expr></argument>, <argument pos:start="72:37" pos:end="72:37"><expr pos:start="72:37" pos:end="72:37"><literal type="number" pos:start="72:37" pos:end="72:37">1</literal></expr></argument>, <argument pos:start="72:40" pos:end="72:44"><expr pos:start="72:40" pos:end="72:44"><literal type="number" pos:start="72:40" pos:end="72:44">48000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="74:9" pos:end="74:32"><expr pos:start="74:9" pos:end="74:31"><name pos:start="74:9" pos:end="74:27"><name pos:start="74:9" pos:end="74:12">priv</name><operator pos:start="74:13" pos:end="74:14">-&gt;</operator><name pos:start="74:15" pos:end="74:27">need_comments</name></name> <operator pos:start="74:29" pos:end="74:29">=</operator> <literal type="number" pos:start="74:31" pos:end="74:31">1</literal></expr>;</expr_stmt>

        <return pos:start="76:9" pos:end="76:17">return <expr pos:start="76:16" pos:end="76:16"><literal type="number" pos:start="76:16" pos:end="76:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="82:5" pos:end="94:5"><if pos:start="82:5" pos:end="94:5">if <condition pos:start="82:8" pos:end="82:28">(<expr pos:start="82:9" pos:end="82:27"><name pos:start="82:9" pos:end="82:27"><name pos:start="82:9" pos:end="82:12">priv</name><operator pos:start="82:13" pos:end="82:14">-&gt;</operator><name pos:start="82:15" pos:end="82:27">need_comments</name></name></expr>)</condition> <block pos:start="82:30" pos:end="94:5">{<block_content pos:start="84:9" pos:end="92:17">

        <if_stmt pos:start="84:9" pos:end="86:39"><if pos:start="84:9" pos:end="86:39">if <condition pos:start="84:12" pos:end="84:59">(<expr pos:start="84:13" pos:end="84:58"><name pos:start="84:13" pos:end="84:21"><name pos:start="84:13" pos:end="84:14">os</name><operator pos:start="84:15" pos:end="84:16">-&gt;</operator><name pos:start="84:17" pos:end="84:21">psize</name></name> <operator pos:start="84:23" pos:end="84:23">&lt;</operator> <literal type="number" pos:start="84:25" pos:end="84:25">8</literal> <operator pos:start="84:27" pos:end="84:28">||</operator> <call pos:start="84:30" pos:end="84:58"><name pos:start="84:30" pos:end="84:35">memcmp</name><argument_list pos:start="84:36" pos:end="84:58">(<argument pos:start="84:37" pos:end="84:42"><expr pos:start="84:37" pos:end="84:42"><name pos:start="84:37" pos:end="84:42">packet</name></expr></argument>, <argument pos:start="84:45" pos:end="84:54"><expr pos:start="84:45" pos:end="84:54"><literal type="string" pos:start="84:45" pos:end="84:54">"OpusTags"</literal></expr></argument>, <argument pos:start="84:57" pos:end="84:57"><expr pos:start="84:57" pos:end="84:57"><literal type="number" pos:start="84:57" pos:end="84:57">8</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="86:13" pos:end="86:39"><block_content pos:start="86:13" pos:end="86:39">

            <return pos:start="86:13" pos:end="86:39">return <expr pos:start="86:20" pos:end="86:38"><name pos:start="86:20" pos:end="86:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="88:9" pos:end="88:69"><expr pos:start="88:9" pos:end="88:68"><call pos:start="88:9" pos:end="88:68"><name pos:start="88:9" pos:end="88:32">ff_vorbis_stream_comment</name><argument_list pos:start="88:33" pos:end="88:68">(<argument pos:start="88:34" pos:end="88:36"><expr pos:start="88:34" pos:end="88:36"><name pos:start="88:34" pos:end="88:36">avf</name></expr></argument>, <argument pos:start="88:39" pos:end="88:40"><expr pos:start="88:39" pos:end="88:40"><name pos:start="88:39" pos:end="88:40">st</name></expr></argument>, <argument pos:start="88:43" pos:end="88:52"><expr pos:start="88:43" pos:end="88:52"><name pos:start="88:43" pos:end="88:48">packet</name> <operator pos:start="88:50" pos:end="88:50">+</operator> <literal type="number" pos:start="88:52" pos:end="88:52">8</literal></expr></argument>, <argument pos:start="88:55" pos:end="88:67"><expr pos:start="88:55" pos:end="88:67"><name pos:start="88:55" pos:end="88:63"><name pos:start="88:55" pos:end="88:56">os</name><operator pos:start="88:57" pos:end="88:58">-&gt;</operator><name pos:start="88:59" pos:end="88:63">psize</name></name> <operator pos:start="88:65" pos:end="88:65">-</operator> <literal type="number" pos:start="88:67" pos:end="88:67">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="90:9" pos:end="90:30"><expr pos:start="90:9" pos:end="90:29"><name pos:start="90:9" pos:end="90:27"><name pos:start="90:9" pos:end="90:12">priv</name><operator pos:start="90:13" pos:end="90:14">-&gt;</operator><name pos:start="90:15" pos:end="90:27">need_comments</name></name><operator pos:start="90:28" pos:end="90:29">--</operator></expr>;</expr_stmt>

        <return pos:start="92:9" pos:end="92:17">return <expr pos:start="92:16" pos:end="92:16"><literal type="number" pos:start="92:16" pos:end="92:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="98:5" pos:end="98:13">return <expr pos:start="98:12" pos:end="98:12"><literal type="number" pos:start="98:12" pos:end="98:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
