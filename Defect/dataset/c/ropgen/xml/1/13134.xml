<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13134.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:16"><name pos:start="1:1" pos:end="1:14">MigrationState</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:28">migrate_init</name><parameter_list pos:start="1:29" pos:end="1:59">(<parameter pos:start="1:30" pos:end="1:58"><decl pos:start="1:30" pos:end="1:58"><type pos:start="1:30" pos:end="1:52"><specifier pos:start="1:30" pos:end="1:34">const</specifier> <name pos:start="1:36" pos:end="1:50">MigrationParams</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:58">params</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:13">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MigrationState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:45">= <expr pos:start="5:25" pos:end="5:45"><call pos:start="5:25" pos:end="5:45"><name pos:start="5:25" pos:end="5:43">migrate_get_current</name><argument_list pos:start="5:44" pos:end="5:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:27">bandwidth_limit</name> <init pos:start="7:29" pos:end="7:48">= <expr pos:start="7:31" pos:end="7:48"><name pos:start="7:31" pos:end="7:48"><name pos:start="7:31" pos:end="7:31">s</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:48">bandwidth_limit</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:56"><decl pos:start="9:5" pos:end="9:55"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:55"><name pos:start="9:10" pos:end="9:29">enabled_capabilities</name><index pos:start="9:30" pos:end="9:55">[<expr pos:start="9:31" pos:end="9:54"><name pos:start="9:31" pos:end="9:54">MIGRATION_CAPABILITY_MAX</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:53"><decl pos:start="11:5" pos:end="11:52"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:29">xbzrle_cache_size</name> <init pos:start="11:31" pos:end="11:52">= <expr pos:start="11:33" pos:end="11:52"><name pos:start="11:33" pos:end="11:52"><name pos:start="11:33" pos:end="11:33">s</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:52">xbzrle_cache_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:75"><decl pos:start="13:5" pos:end="13:74"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:22">compress_level</name> <init pos:start="13:24" pos:end="13:74">= <expr pos:start="13:26" pos:end="13:74"><name pos:start="13:26" pos:end="13:74"><name pos:start="13:26" pos:end="13:26">s</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:38">parameters</name><index pos:start="13:39" pos:end="13:74">[<expr pos:start="13:40" pos:end="13:73"><name pos:start="13:40" pos:end="13:73">MIGRATION_PARAMETER_COMPRESS_LEVEL</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="17:64"><decl pos:start="15:5" pos:end="17:63"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:29">compress_thread_count</name> <init pos:start="15:31" pos:end="17:63">=

            <expr pos:start="17:13" pos:end="17:63"><name pos:start="17:13" pos:end="17:63"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:25">parameters</name><index pos:start="17:26" pos:end="17:63">[<expr pos:start="17:27" pos:end="17:62"><name pos:start="17:27" pos:end="17:62">MIGRATION_PARAMETER_COMPRESS_THREADS</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="21:66"><decl pos:start="19:5" pos:end="21:65"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:31">decompress_thread_count</name> <init pos:start="19:33" pos:end="21:65">=

            <expr pos:start="21:13" pos:end="21:65"><name pos:start="21:13" pos:end="21:65"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:25">parameters</name><index pos:start="21:26" pos:end="21:65">[<expr pos:start="21:27" pos:end="21:64"><name pos:start="21:27" pos:end="21:64">MIGRATION_PARAMETER_DECOMPRESS_THREADS</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="25:70"><decl pos:start="23:5" pos:end="25:69"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:30">x_cpu_throttle_initial</name> <init pos:start="23:32" pos:end="25:69">=

            <expr pos:start="25:13" pos:end="25:69"><name pos:start="25:13" pos:end="25:69"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:25">parameters</name><index pos:start="25:26" pos:end="25:69">[<expr pos:start="25:27" pos:end="25:68"><name pos:start="25:27" pos:end="25:68">MIGRATION_PARAMETER_X_CPU_THROTTLE_INITIAL</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="29:72"><decl pos:start="27:5" pos:end="29:71"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:32">x_cpu_throttle_increment</name> <init pos:start="27:34" pos:end="29:71">=

            <expr pos:start="29:13" pos:end="29:71"><name pos:start="29:13" pos:end="29:71"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:25">parameters</name><index pos:start="29:26" pos:end="29:71">[<expr pos:start="29:27" pos:end="29:70"><name pos:start="29:27" pos:end="29:70">MIGRATION_PARAMETER_X_CPU_THROTTLE_INCREMENT</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="35:41"><expr pos:start="33:5" pos:end="35:40"><call pos:start="33:5" pos:end="35:40"><name pos:start="33:5" pos:end="33:10">memcpy</name><argument_list pos:start="33:11" pos:end="35:40">(<argument pos:start="33:12" pos:end="33:31"><expr pos:start="33:12" pos:end="33:31"><name pos:start="33:12" pos:end="33:31">enabled_capabilities</name></expr></argument>, <argument pos:start="33:34" pos:end="33:56"><expr pos:start="33:34" pos:end="33:56"><name pos:start="33:34" pos:end="33:56"><name pos:start="33:34" pos:end="33:34">s</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:56">enabled_capabilities</name></name></expr></argument>,

           <argument pos:start="35:12" pos:end="35:39"><expr pos:start="35:12" pos:end="35:39"><sizeof pos:start="35:12" pos:end="35:39">sizeof<argument_list pos:start="35:18" pos:end="35:39">(<argument pos:start="35:19" pos:end="35:38"><expr pos:start="35:19" pos:end="35:38"><name pos:start="35:19" pos:end="35:38">enabled_capabilities</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><call pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:10">memset</name><argument_list pos:start="39:11" pos:end="39:28">(<argument pos:start="39:12" pos:end="39:12"><expr pos:start="39:12" pos:end="39:12"><name pos:start="39:12" pos:end="39:12">s</name></expr></argument>, <argument pos:start="39:15" pos:end="39:15"><expr pos:start="39:15" pos:end="39:15"><literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr></argument>, <argument pos:start="39:18" pos:end="39:27"><expr pos:start="39:18" pos:end="39:27"><sizeof pos:start="39:18" pos:end="39:27">sizeof<argument_list pos:start="39:24" pos:end="39:27">(<argument pos:start="39:25" pos:end="39:26"><expr pos:start="39:25" pos:end="39:26"><operator pos:start="39:25" pos:end="39:25">*</operator><name pos:start="39:26" pos:end="39:26">s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:24"><expr pos:start="41:5" pos:end="41:23"><name pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:13">params</name></name> <operator pos:start="41:15" pos:end="41:15">=</operator> <operator pos:start="41:17" pos:end="41:17">*</operator><name pos:start="41:18" pos:end="41:23">params</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="45:41"><expr pos:start="43:5" pos:end="45:40"><call pos:start="43:5" pos:end="45:40"><name pos:start="43:5" pos:end="43:10">memcpy</name><argument_list pos:start="43:11" pos:end="45:40">(<argument pos:start="43:12" pos:end="43:34"><expr pos:start="43:12" pos:end="43:34"><name pos:start="43:12" pos:end="43:34"><name pos:start="43:12" pos:end="43:12">s</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:34">enabled_capabilities</name></name></expr></argument>, <argument pos:start="43:37" pos:end="43:56"><expr pos:start="43:37" pos:end="43:56"><name pos:start="43:37" pos:end="43:56">enabled_capabilities</name></expr></argument>,

           <argument pos:start="45:12" pos:end="45:39"><expr pos:start="45:12" pos:end="45:39"><sizeof pos:start="45:12" pos:end="45:39">sizeof<argument_list pos:start="45:18" pos:end="45:39">(<argument pos:start="45:19" pos:end="45:38"><expr pos:start="45:19" pos:end="45:38"><name pos:start="45:19" pos:end="45:38">enabled_capabilities</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:45"><expr pos:start="47:5" pos:end="47:44"><name pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:24">xbzrle_cache_size</name></name> <operator pos:start="47:26" pos:end="47:26">=</operator> <name pos:start="47:28" pos:end="47:44">xbzrle_cache_size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:71"><expr pos:start="51:5" pos:end="51:70"><name pos:start="51:5" pos:end="51:53"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:17">parameters</name><index pos:start="51:18" pos:end="51:53">[<expr pos:start="51:19" pos:end="51:52"><name pos:start="51:19" pos:end="51:52">MIGRATION_PARAMETER_COMPRESS_LEVEL</name></expr>]</index></name> <operator pos:start="51:55" pos:end="51:55">=</operator> <name pos:start="51:57" pos:end="51:70">compress_level</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="55:37"><expr pos:start="53:5" pos:end="55:36"><name pos:start="53:5" pos:end="53:55"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:17">parameters</name><index pos:start="53:18" pos:end="53:55">[<expr pos:start="53:19" pos:end="53:54"><name pos:start="53:19" pos:end="53:54">MIGRATION_PARAMETER_COMPRESS_THREADS</name></expr>]</index></name> <operator pos:start="53:57" pos:end="53:57">=</operator>

               <name pos:start="55:16" pos:end="55:36">compress_thread_count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="59:39"><expr pos:start="57:5" pos:end="59:38"><name pos:start="57:5" pos:end="57:57"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:17">parameters</name><index pos:start="57:18" pos:end="57:57">[<expr pos:start="57:19" pos:end="57:56"><name pos:start="57:19" pos:end="57:56">MIGRATION_PARAMETER_DECOMPRESS_THREADS</name></expr>]</index></name> <operator pos:start="57:59" pos:end="57:59">=</operator>

               <name pos:start="59:16" pos:end="59:38">decompress_thread_count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="63:39"><expr pos:start="61:5" pos:end="63:38"><name pos:start="61:5" pos:end="61:61"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:17">parameters</name><index pos:start="61:18" pos:end="61:61">[<expr pos:start="61:19" pos:end="61:60"><name pos:start="61:19" pos:end="61:60">MIGRATION_PARAMETER_X_CPU_THROTTLE_INITIAL</name></expr>]</index></name> <operator pos:start="61:63" pos:end="61:63">=</operator>

                <name pos:start="63:17" pos:end="63:38">x_cpu_throttle_initial</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="67:41"><expr pos:start="65:5" pos:end="67:40"><name pos:start="65:5" pos:end="65:63"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:17">parameters</name><index pos:start="65:18" pos:end="65:63">[<expr pos:start="65:19" pos:end="65:62"><name pos:start="65:19" pos:end="65:62">MIGRATION_PARAMETER_X_CPU_THROTTLE_INCREMENT</name></expr>]</index></name> <operator pos:start="65:65" pos:end="65:65">=</operator>

                <name pos:start="67:17" pos:end="67:40">x_cpu_throttle_increment</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:41"><expr pos:start="69:5" pos:end="69:40"><name pos:start="69:5" pos:end="69:22"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:22">bandwidth_limit</name></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <name pos:start="69:26" pos:end="69:40">bandwidth_limit</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:72"><expr pos:start="71:5" pos:end="71:71"><call pos:start="71:5" pos:end="71:71"><name pos:start="71:5" pos:end="71:21">migrate_set_state</name><argument_list pos:start="71:22" pos:end="71:71">(<argument pos:start="71:23" pos:end="71:23"><expr pos:start="71:23" pos:end="71:23"><name pos:start="71:23" pos:end="71:23">s</name></expr></argument>, <argument pos:start="71:26" pos:end="71:46"><expr pos:start="71:26" pos:end="71:46"><name pos:start="71:26" pos:end="71:46">MIGRATION_STATUS_NONE</name></expr></argument>, <argument pos:start="71:49" pos:end="71:70"><expr pos:start="71:49" pos:end="71:70"><name pos:start="71:49" pos:end="71:70">MIGRATION_STATUS_SETUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:41"><expr pos:start="75:5" pos:end="75:40"><call pos:start="75:5" pos:end="75:40"><name pos:start="75:5" pos:end="75:17">QSIMPLEQ_INIT</name><argument_list pos:start="75:18" pos:end="75:40">(<argument pos:start="75:19" pos:end="75:39"><expr pos:start="75:19" pos:end="75:39"><operator pos:start="75:19" pos:end="75:19">&amp;</operator><name pos:start="75:20" pos:end="75:39"><name pos:start="75:20" pos:end="75:20">s</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:39">src_page_requests</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:59"><expr pos:start="79:5" pos:end="79:58"><name pos:start="79:5" pos:end="79:17"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:17">total_time</name></name> <operator pos:start="79:19" pos:end="79:19">=</operator> <call pos:start="79:21" pos:end="79:58"><name pos:start="79:21" pos:end="79:37">qemu_clock_get_ms</name><argument_list pos:start="79:38" pos:end="79:58">(<argument pos:start="79:39" pos:end="79:57"><expr pos:start="79:39" pos:end="79:57"><name pos:start="79:39" pos:end="79:57">QEMU_CLOCK_REALTIME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><name pos:start="81:12" pos:end="81:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
