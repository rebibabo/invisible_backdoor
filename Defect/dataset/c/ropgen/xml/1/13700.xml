<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13700.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">bdrv_prwv_co</name><parameter_list pos:start="1:24" pos:end="5:47">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:40"><name pos:start="1:25" pos:end="1:33">BdrvChild</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:40">child</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:49">int64_t</name></type> <name pos:start="1:51" pos:end="1:56">offset</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:42"><decl pos:start="3:25" pos:end="3:42"><type pos:start="3:25" pos:end="3:42"><name pos:start="3:25" pos:end="3:36">QEMUIOVector</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:42">qiov</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:57"><decl pos:start="3:45" pos:end="3:57"><type pos:start="3:45" pos:end="3:57"><name pos:start="3:45" pos:end="3:48">bool</name></type> <name pos:start="3:50" pos:end="3:57">is_write</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:46"><decl pos:start="5:25" pos:end="5:46"><type pos:start="5:25" pos:end="5:46"><name pos:start="5:25" pos:end="5:40">BdrvRequestFlags</name></type> <name pos:start="5:42" pos:end="5:46">flags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="55:1">{<block_content pos:start="9:5" pos:end="53:20">

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">Coroutine</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:17">co</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="25:6"><decl pos:start="11:5" pos:end="25:5"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">RwCo</name></type> <name pos:start="11:10" pos:end="11:13">rwco</name> <init pos:start="11:15" pos:end="25:5">= <expr pos:start="11:17" pos:end="25:5"><block pos:start="11:17" pos:end="25:5">{

        <expr pos:start="13:9" pos:end="13:22"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:14">child</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <name pos:start="13:18" pos:end="13:22">child</name></expr>,

        <expr pos:start="15:9" pos:end="15:24"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:15">offset</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <name pos:start="15:19" pos:end="15:24">offset</name></expr>,

        <expr pos:start="17:9" pos:end="17:20"><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:13">qiov</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:20">qiov</name></expr>,

        <expr pos:start="19:9" pos:end="19:28"><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:17">is_write</name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:28">is_write</name></expr>,

        <expr pos:start="21:9" pos:end="21:23"><operator pos:start="21:9" pos:end="21:9">.</operator><name pos:start="21:10" pos:end="21:12">ret</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:23">NOT_DONE</name></expr>,

        <expr pos:start="23:9" pos:end="23:22"><operator pos:start="23:9" pos:end="23:9">.</operator><name pos:start="23:10" pos:end="23:14">flags</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:22">flags</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="51:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:28">(<expr pos:start="29:9" pos:end="29:27"><call pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:25">qemu_in_coroutine</name><argument_list pos:start="29:26" pos:end="29:27">()</argument_list></call></expr>)</condition> <block pos:start="29:30" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:32">

        <comment type="block" pos:start="31:9" pos:end="31:55">/* Fast-path if already in coroutine context */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><call pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:24">bdrv_rw_co_entry</name><argument_list pos:start="33:25" pos:end="33:31">(<argument pos:start="33:26" pos:end="33:30"><expr pos:start="33:26" pos:end="33:30"><operator pos:start="33:26" pos:end="33:26">&amp;</operator><name pos:start="33:27" pos:end="33:30">rwco</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="51:5">else <block pos:start="35:12" pos:end="51:5">{<block_content pos:start="37:9" pos:end="49:9">

        <decl_stmt pos:start="37:9" pos:end="37:66"><decl pos:start="37:9" pos:end="37:65"><type pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:18">AioContext</name> <modifier pos:start="37:20" pos:end="37:20">*</modifier></type><name pos:start="37:21" pos:end="37:31">aio_context</name> <init pos:start="37:33" pos:end="37:65">= <expr pos:start="37:35" pos:end="37:65"><call pos:start="37:35" pos:end="37:65"><name pos:start="37:35" pos:end="37:54">bdrv_get_aio_context</name><argument_list pos:start="37:55" pos:end="37:65">(<argument pos:start="37:56" pos:end="37:64"><expr pos:start="37:56" pos:end="37:64"><name pos:start="37:56" pos:end="37:64"><name pos:start="37:56" pos:end="37:60">child</name><operator pos:start="37:61" pos:end="37:62">-&gt;</operator><name pos:start="37:63" pos:end="37:64">bs</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:53"><expr pos:start="41:9" pos:end="41:52"><name pos:start="41:9" pos:end="41:10">co</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:52"><name pos:start="41:14" pos:end="41:34">qemu_coroutine_create</name><argument_list pos:start="41:35" pos:end="41:52">(<argument pos:start="41:36" pos:end="41:51"><expr pos:start="41:36" pos:end="41:51"><name pos:start="41:36" pos:end="41:51">bdrv_rw_co_entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:40"><expr pos:start="43:9" pos:end="43:39"><call pos:start="43:9" pos:end="43:39"><name pos:start="43:9" pos:end="43:28">qemu_coroutine_enter</name><argument_list pos:start="43:29" pos:end="43:39">(<argument pos:start="43:30" pos:end="43:31"><expr pos:start="43:30" pos:end="43:31"><name pos:start="43:30" pos:end="43:31">co</name></expr></argument>, <argument pos:start="43:34" pos:end="43:38"><expr pos:start="43:34" pos:end="43:38"><operator pos:start="43:34" pos:end="43:34">&amp;</operator><name pos:start="43:35" pos:end="43:38">rwco</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="45:9" pos:end="49:9">while <condition pos:start="45:15" pos:end="45:36">(<expr pos:start="45:16" pos:end="45:35"><name pos:start="45:16" pos:end="45:23"><name pos:start="45:16" pos:end="45:19">rwco</name><operator pos:start="45:20" pos:end="45:20">.</operator><name pos:start="45:21" pos:end="45:23">ret</name></name> <operator pos:start="45:25" pos:end="45:26">==</operator> <name pos:start="45:28" pos:end="45:35">NOT_DONE</name></expr>)</condition> <block pos:start="45:38" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:40">

            <expr_stmt pos:start="47:13" pos:end="47:40"><expr pos:start="47:13" pos:end="47:39"><call pos:start="47:13" pos:end="47:39"><name pos:start="47:13" pos:end="47:20">aio_poll</name><argument_list pos:start="47:21" pos:end="47:39">(<argument pos:start="47:22" pos:end="47:32"><expr pos:start="47:22" pos:end="47:32"><name pos:start="47:22" pos:end="47:32">aio_context</name></expr></argument>, <argument pos:start="47:35" pos:end="47:38"><expr pos:start="47:35" pos:end="47:38"><name pos:start="47:35" pos:end="47:38">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></else></if_stmt>

    <return pos:start="53:5" pos:end="53:20">return <expr pos:start="53:12" pos:end="53:19"><name pos:start="53:12" pos:end="53:19"><name pos:start="53:12" pos:end="53:15">rwco</name><operator pos:start="53:16" pos:end="53:16">.</operator><name pos:start="53:17" pos:end="53:19">ret</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
