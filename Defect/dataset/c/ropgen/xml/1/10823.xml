<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10823.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">decode_hextile</name><parameter_list pos:start="1:26" pos:end="3:62">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:37">VmncContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">c</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:49">uint8_t</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">dst</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:74"><decl pos:start="1:57" pos:end="1:74"><type pos:start="1:57" pos:end="1:74"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:69">uint8_t</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">src</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:35"><decl pos:start="3:27" pos:end="3:35"><type pos:start="3:27" pos:end="3:35"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:35">ssize</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:42"><decl pos:start="3:38" pos:end="3:42"><type pos:start="3:38" pos:end="3:42"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:42">w</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:49"><decl pos:start="3:45" pos:end="3:49"><type pos:start="3:45" pos:end="3:49"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:49">h</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:61"><decl pos:start="3:52" pos:end="3:61"><type pos:start="3:52" pos:end="3:61"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:61">stride</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="131:1">{<block_content pos:start="7:5" pos:end="129:22">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">bg</name> <init pos:start="9:12" pos:end="9:14">= <expr pos:start="9:14" pos:end="9:14"><literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr></init></decl>, <decl pos:start="9:17" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:18">fg</name> <init pos:start="9:20" pos:end="9:22">= <expr pos:start="9:22" pos:end="9:22"><literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr></init></decl>, <decl pos:start="9:25" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:29">rects</name></decl>, <decl pos:start="9:32" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:32" pos:end="9:36">color</name></decl>, <decl pos:start="9:39" pos:end="9:43"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:39" pos:end="9:43">flags</name></decl>, <decl pos:start="9:46" pos:end="9:47"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:46" pos:end="9:47">xy</name></decl>, <decl pos:start="9:50" pos:end="9:51"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:50" pos:end="9:51">wh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:17">bpp</name> <init pos:start="11:19" pos:end="11:27">= <expr pos:start="11:21" pos:end="11:27"><name pos:start="11:21" pos:end="11:27"><name pos:start="11:21" pos:end="11:21">c</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:27">bpp2</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:17">dst2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">bw</name> <init pos:start="15:12" pos:end="15:15">= <expr pos:start="15:14" pos:end="15:15"><literal type="number" pos:start="15:14" pos:end="15:15">16</literal></expr></init></decl>, <decl pos:start="15:18" pos:end="15:24"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:18" pos:end="15:19">bh</name> <init pos:start="15:21" pos:end="15:24">= <expr pos:start="15:23" pos:end="15:24"><literal type="number" pos:start="15:23" pos:end="15:24">16</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:19"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">uint8_t</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:23">ssrc</name> <init pos:start="17:25" pos:end="17:29">= <expr pos:start="17:27" pos:end="17:29"><name pos:start="17:27" pos:end="17:29">src</name></expr></init></decl>;</decl_stmt>



    <for pos:start="21:5" pos:end="127:5">for <control pos:start="21:9" pos:end="21:31">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">j</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:21"><name pos:start="21:17" pos:end="21:17">j</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:21">h</name></expr>;</condition> <incr pos:start="21:24" pos:end="21:30"><expr pos:start="21:24" pos:end="21:30"><name pos:start="21:24" pos:end="21:24">j</name> <operator pos:start="21:26" pos:end="21:27">+=</operator> <literal type="number" pos:start="21:29" pos:end="21:30">16</literal></expr></incr>)</control> <block pos:start="21:33" pos:end="127:5">{<block_content pos:start="23:9" pos:end="125:27">

        <expr_stmt pos:start="23:9" pos:end="23:19"><expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:12">dst2</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:18">dst</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:18"><expr pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:10">bw</name>   <operator pos:start="25:14" pos:end="25:14">=</operator> <literal type="number" pos:start="25:16" pos:end="25:17">16</literal></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:23"><if pos:start="27:9" pos:end="29:23">if <condition pos:start="27:12" pos:end="27:23">(<expr pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:13">j</name> <operator pos:start="27:15" pos:end="27:15">+</operator> <literal type="number" pos:start="27:17" pos:end="27:18">16</literal> <operator pos:start="27:20" pos:end="27:20">&gt;</operator> <name pos:start="27:22" pos:end="27:22">h</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:23"><block_content pos:start="29:13" pos:end="29:23">

            <expr_stmt pos:start="29:13" pos:end="29:23"><expr pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:14">bh</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <name pos:start="29:18" pos:end="29:18">h</name> <operator pos:start="29:20" pos:end="29:20">-</operator> <name pos:start="29:22" pos:end="29:22">j</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <for pos:start="31:9" pos:end="123:9">for <control pos:start="31:13" pos:end="31:53">(<init pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">i</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:26"><expr pos:start="31:21" pos:end="31:25"><name pos:start="31:21" pos:end="31:21">i</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <name pos:start="31:25" pos:end="31:25">w</name></expr>;</condition> <incr pos:start="31:28" pos:end="31:52"><expr pos:start="31:28" pos:end="31:34"><name pos:start="31:28" pos:end="31:28">i</name> <operator pos:start="31:30" pos:end="31:31">+=</operator> <literal type="number" pos:start="31:33" pos:end="31:34">16</literal></expr><operator pos:start="31:35" pos:end="31:35">,</operator> <expr pos:start="31:37" pos:end="31:52"><name pos:start="31:37" pos:end="31:40">dst2</name> <operator pos:start="31:42" pos:end="31:43">+=</operator> <literal type="number" pos:start="31:45" pos:end="31:46">16</literal> <operator pos:start="31:48" pos:end="31:48">*</operator> <name pos:start="31:50" pos:end="31:52">bpp</name></expr></incr>)</control> <block pos:start="31:55" pos:end="123:9">{<block_content pos:start="33:13" pos:end="121:13">

            <if_stmt pos:start="33:13" pos:end="39:13"><if pos:start="33:13" pos:end="39:13">if <condition pos:start="33:16" pos:end="33:36">(<expr pos:start="33:17" pos:end="33:35"><name pos:start="33:17" pos:end="33:19">src</name> <operator pos:start="33:21" pos:end="33:21">-</operator> <name pos:start="33:23" pos:end="33:26">ssrc</name> <operator pos:start="33:28" pos:end="33:29">&gt;=</operator> <name pos:start="33:31" pos:end="33:35">ssize</name></expr>)</condition> <block pos:start="33:38" pos:end="39:13">{<block_content pos:start="35:17" pos:end="37:26">

                <expr_stmt pos:start="35:17" pos:end="35:75"><expr pos:start="35:17" pos:end="35:74"><call pos:start="35:17" pos:end="35:74"><name pos:start="35:17" pos:end="35:22">av_log</name><argument_list pos:start="35:23" pos:end="35:74">(<argument pos:start="35:24" pos:end="35:31"><expr pos:start="35:24" pos:end="35:31"><name pos:start="35:24" pos:end="35:31"><name pos:start="35:24" pos:end="35:24">c</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:31">avctx</name></name></expr></argument>, <argument pos:start="35:34" pos:end="35:45"><expr pos:start="35:34" pos:end="35:45"><name pos:start="35:34" pos:end="35:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:48" pos:end="35:73"><expr pos:start="35:48" pos:end="35:73"><literal type="string" pos:start="35:48" pos:end="35:73">"Premature end of data!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="37:17" pos:end="37:26">return <expr pos:start="37:24" pos:end="37:25"><operator pos:start="37:24" pos:end="37:24">-</operator><literal type="number" pos:start="37:25" pos:end="37:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="41:13" pos:end="43:27"><if pos:start="41:13" pos:end="43:27">if <condition pos:start="41:16" pos:end="41:27">(<expr pos:start="41:17" pos:end="41:26"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">+</operator> <literal type="number" pos:start="41:21" pos:end="41:22">16</literal> <operator pos:start="41:24" pos:end="41:24">&gt;</operator> <name pos:start="41:26" pos:end="41:26">w</name></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="43:27"><block_content pos:start="43:17" pos:end="43:27">

                <expr_stmt pos:start="43:17" pos:end="43:27"><expr pos:start="43:17" pos:end="43:26"><name pos:start="43:17" pos:end="43:18">bw</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:22">w</name> <operator pos:start="43:24" pos:end="43:24">-</operator> <name pos:start="43:26" pos:end="43:26">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:27"><expr pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:17">flags</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <operator pos:start="45:21" pos:end="45:21">*</operator><name pos:start="45:22" pos:end="45:24">src</name><operator pos:start="45:25" pos:end="45:26">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="47:13" pos:end="121:13"><if pos:start="47:13" pos:end="61:13">if <condition pos:start="47:16" pos:end="47:31">(<expr pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:21">flags</name> <operator pos:start="47:23" pos:end="47:23">&amp;</operator> <name pos:start="47:25" pos:end="47:30">HT_RAW</name></expr>)</condition> <block pos:start="47:33" pos:end="61:13">{<block_content pos:start="49:17" pos:end="59:37">

                <if_stmt pos:start="49:17" pos:end="55:17"><if pos:start="49:17" pos:end="55:17">if <condition pos:start="49:20" pos:end="49:55">(<expr pos:start="49:21" pos:end="49:54"><name pos:start="49:21" pos:end="49:23">src</name> <operator pos:start="49:25" pos:end="49:25">-</operator> <name pos:start="49:27" pos:end="49:30">ssrc</name> <operator pos:start="49:32" pos:end="49:32">&gt;</operator> <name pos:start="49:34" pos:end="49:38">ssize</name> <operator pos:start="49:40" pos:end="49:40">-</operator> <name pos:start="49:42" pos:end="49:43">bw</name> <operator pos:start="49:45" pos:end="49:45">*</operator> <name pos:start="49:47" pos:end="49:48">bh</name> <operator pos:start="49:50" pos:end="49:50">*</operator> <name pos:start="49:52" pos:end="49:54">bpp</name></expr>)</condition> <block pos:start="49:57" pos:end="55:17">{<block_content pos:start="51:21" pos:end="53:30">

                    <expr_stmt pos:start="51:21" pos:end="51:79"><expr pos:start="51:21" pos:end="51:78"><call pos:start="51:21" pos:end="51:78"><name pos:start="51:21" pos:end="51:26">av_log</name><argument_list pos:start="51:27" pos:end="51:78">(<argument pos:start="51:28" pos:end="51:35"><expr pos:start="51:28" pos:end="51:35"><name pos:start="51:28" pos:end="51:35"><name pos:start="51:28" pos:end="51:28">c</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:35">avctx</name></name></expr></argument>, <argument pos:start="51:38" pos:end="51:49"><expr pos:start="51:38" pos:end="51:49"><name pos:start="51:38" pos:end="51:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:52" pos:end="51:77"><expr pos:start="51:52" pos:end="51:77"><literal type="string" pos:start="51:52" pos:end="51:77">"Premature end of data!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="53:21" pos:end="53:30">return <expr pos:start="53:28" pos:end="53:29"><operator pos:start="53:28" pos:end="53:28">-</operator><literal type="number" pos:start="53:29" pos:end="53:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:72"><expr pos:start="57:17" pos:end="57:71"><call pos:start="57:17" pos:end="57:71"><name pos:start="57:17" pos:end="57:25">paint_raw</name><argument_list pos:start="57:26" pos:end="57:71">(<argument pos:start="57:27" pos:end="57:30"><expr pos:start="57:27" pos:end="57:30"><name pos:start="57:27" pos:end="57:30">dst2</name></expr></argument>, <argument pos:start="57:33" pos:end="57:34"><expr pos:start="57:33" pos:end="57:34"><name pos:start="57:33" pos:end="57:34">bw</name></expr></argument>, <argument pos:start="57:37" pos:end="57:38"><expr pos:start="57:37" pos:end="57:38"><name pos:start="57:37" pos:end="57:38">bh</name></expr></argument>, <argument pos:start="57:41" pos:end="57:43"><expr pos:start="57:41" pos:end="57:43"><name pos:start="57:41" pos:end="57:43">src</name></expr></argument>, <argument pos:start="57:46" pos:end="57:48"><expr pos:start="57:46" pos:end="57:48"><name pos:start="57:46" pos:end="57:48">bpp</name></expr></argument>, <argument pos:start="57:51" pos:end="57:62"><expr pos:start="57:51" pos:end="57:62"><name pos:start="57:51" pos:end="57:62"><name pos:start="57:51" pos:end="57:51">c</name><operator pos:start="57:52" pos:end="57:53">-&gt;</operator><name pos:start="57:54" pos:end="57:62">bigendian</name></name></expr></argument>, <argument pos:start="57:65" pos:end="57:70"><expr pos:start="57:65" pos:end="57:70"><name pos:start="57:65" pos:end="57:70">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:37"><expr pos:start="59:17" pos:end="59:36"><name pos:start="59:17" pos:end="59:19">src</name> <operator pos:start="59:21" pos:end="59:22">+=</operator> <name pos:start="59:24" pos:end="59:25">bw</name> <operator pos:start="59:27" pos:end="59:27">*</operator> <name pos:start="59:29" pos:end="59:30">bh</name> <operator pos:start="59:32" pos:end="59:32">*</operator> <name pos:start="59:34" pos:end="59:36">bpp</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="61:15" pos:end="121:13">else <block pos:start="61:20" pos:end="121:13">{<block_content pos:start="63:17" pos:end="119:17">

                <if_stmt pos:start="63:17" pos:end="69:17"><if pos:start="63:17" pos:end="69:17">if <condition pos:start="63:20" pos:end="63:35">(<expr pos:start="63:21" pos:end="63:34"><name pos:start="63:21" pos:end="63:25">flags</name> <operator pos:start="63:27" pos:end="63:27">&amp;</operator> <name pos:start="63:29" pos:end="63:34">HT_BKG</name></expr>)</condition> <block pos:start="63:37" pos:end="69:17">{<block_content pos:start="65:21" pos:end="67:31">

                    <expr_stmt pos:start="65:21" pos:end="65:64"><expr pos:start="65:21" pos:end="65:63"><name pos:start="65:21" pos:end="65:22">bg</name> <operator pos:start="65:24" pos:end="65:24">=</operator> <call pos:start="65:26" pos:end="65:63"><name pos:start="65:26" pos:end="65:39">vmnc_get_pixel</name><argument_list pos:start="65:40" pos:end="65:63">(<argument pos:start="65:41" pos:end="65:43"><expr pos:start="65:41" pos:end="65:43"><name pos:start="65:41" pos:end="65:43">src</name></expr></argument>, <argument pos:start="65:46" pos:end="65:48"><expr pos:start="65:46" pos:end="65:48"><name pos:start="65:46" pos:end="65:48">bpp</name></expr></argument>, <argument pos:start="65:51" pos:end="65:62"><expr pos:start="65:51" pos:end="65:62"><name pos:start="65:51" pos:end="65:62"><name pos:start="65:51" pos:end="65:51">c</name><operator pos:start="65:52" pos:end="65:53">-&gt;</operator><name pos:start="65:54" pos:end="65:62">bigendian</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="67:21" pos:end="67:31"><expr pos:start="67:21" pos:end="67:30"><name pos:start="67:21" pos:end="67:23">src</name> <operator pos:start="67:25" pos:end="67:26">+=</operator> <name pos:start="67:28" pos:end="67:30">bpp</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="71:17" pos:end="77:17"><if pos:start="71:17" pos:end="77:17">if <condition pos:start="71:20" pos:end="71:34">(<expr pos:start="71:21" pos:end="71:33"><name pos:start="71:21" pos:end="71:25">flags</name> <operator pos:start="71:27" pos:end="71:27">&amp;</operator> <name pos:start="71:29" pos:end="71:33">HT_FG</name></expr>)</condition> <block pos:start="71:36" pos:end="77:17">{<block_content pos:start="73:21" pos:end="75:31">

                    <expr_stmt pos:start="73:21" pos:end="73:64"><expr pos:start="73:21" pos:end="73:63"><name pos:start="73:21" pos:end="73:22">fg</name> <operator pos:start="73:24" pos:end="73:24">=</operator> <call pos:start="73:26" pos:end="73:63"><name pos:start="73:26" pos:end="73:39">vmnc_get_pixel</name><argument_list pos:start="73:40" pos:end="73:63">(<argument pos:start="73:41" pos:end="73:43"><expr pos:start="73:41" pos:end="73:43"><name pos:start="73:41" pos:end="73:43">src</name></expr></argument>, <argument pos:start="73:46" pos:end="73:48"><expr pos:start="73:46" pos:end="73:48"><name pos:start="73:46" pos:end="73:48">bpp</name></expr></argument>, <argument pos:start="73:51" pos:end="73:62"><expr pos:start="73:51" pos:end="73:62"><name pos:start="73:51" pos:end="73:62"><name pos:start="73:51" pos:end="73:51">c</name><operator pos:start="73:52" pos:end="73:53">-&gt;</operator><name pos:start="73:54" pos:end="73:62">bigendian</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="75:21" pos:end="75:31"><expr pos:start="75:21" pos:end="75:30"><name pos:start="75:21" pos:end="75:23">src</name> <operator pos:start="75:25" pos:end="75:26">+=</operator> <name pos:start="75:28" pos:end="75:30">bpp</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:26"><expr pos:start="79:17" pos:end="79:25"><name pos:start="79:17" pos:end="79:21">rects</name> <operator pos:start="79:23" pos:end="79:23">=</operator> <literal type="number" pos:start="79:25" pos:end="79:25">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="81:17" pos:end="83:35"><if pos:start="81:17" pos:end="83:35">if <condition pos:start="81:20" pos:end="81:35">(<expr pos:start="81:21" pos:end="81:34"><name pos:start="81:21" pos:end="81:25">flags</name> <operator pos:start="81:27" pos:end="81:27">&amp;</operator> <name pos:start="81:29" pos:end="81:34">HT_SUB</name></expr>)</condition><block type="pseudo" pos:start="83:21" pos:end="83:35"><block_content pos:start="83:21" pos:end="83:35">

                    <expr_stmt pos:start="83:21" pos:end="83:35"><expr pos:start="83:21" pos:end="83:34"><name pos:start="83:21" pos:end="83:25">rects</name> <operator pos:start="83:27" pos:end="83:27">=</operator> <operator pos:start="83:29" pos:end="83:29">*</operator><name pos:start="83:30" pos:end="83:32">src</name><operator pos:start="83:33" pos:end="83:34">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:43"><expr pos:start="85:17" pos:end="85:42"><name pos:start="85:17" pos:end="85:21">color</name> <operator pos:start="85:23" pos:end="85:23">=</operator> <operator pos:start="85:25" pos:end="85:25">!</operator><operator pos:start="85:26" pos:end="85:26">!</operator><operator pos:start="85:27" pos:end="85:27">(</operator><name pos:start="85:28" pos:end="85:32">flags</name> <operator pos:start="85:34" pos:end="85:34">&amp;</operator> <name pos:start="85:36" pos:end="85:41">HT_CLR</name><operator pos:start="85:42" pos:end="85:42">)</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="89:17" pos:end="89:64"><expr pos:start="89:17" pos:end="89:63"><call pos:start="89:17" pos:end="89:63"><name pos:start="89:17" pos:end="89:26">paint_rect</name><argument_list pos:start="89:27" pos:end="89:63">(<argument pos:start="89:28" pos:end="89:31"><expr pos:start="89:28" pos:end="89:31"><name pos:start="89:28" pos:end="89:31">dst2</name></expr></argument>, <argument pos:start="89:34" pos:end="89:34"><expr pos:start="89:34" pos:end="89:34"><literal type="number" pos:start="89:34" pos:end="89:34">0</literal></expr></argument>, <argument pos:start="89:37" pos:end="89:37"><expr pos:start="89:37" pos:end="89:37"><literal type="number" pos:start="89:37" pos:end="89:37">0</literal></expr></argument>, <argument pos:start="89:40" pos:end="89:41"><expr pos:start="89:40" pos:end="89:41"><name pos:start="89:40" pos:end="89:41">bw</name></expr></argument>, <argument pos:start="89:44" pos:end="89:45"><expr pos:start="89:44" pos:end="89:45"><name pos:start="89:44" pos:end="89:45">bh</name></expr></argument>, <argument pos:start="89:48" pos:end="89:49"><expr pos:start="89:48" pos:end="89:49"><name pos:start="89:48" pos:end="89:49">bg</name></expr></argument>, <argument pos:start="89:52" pos:end="89:54"><expr pos:start="89:52" pos:end="89:54"><name pos:start="89:52" pos:end="89:54">bpp</name></expr></argument>, <argument pos:start="89:57" pos:end="89:62"><expr pos:start="89:57" pos:end="89:62"><name pos:start="89:57" pos:end="89:62">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="93:17" pos:end="99:17"><if pos:start="93:17" pos:end="99:17">if <condition pos:start="93:20" pos:end="93:67">(<expr pos:start="93:21" pos:end="93:66"><name pos:start="93:21" pos:end="93:23">src</name> <operator pos:start="93:25" pos:end="93:25">-</operator> <name pos:start="93:27" pos:end="93:30">ssrc</name> <operator pos:start="93:32" pos:end="93:32">&gt;</operator> <name pos:start="93:34" pos:end="93:38">ssize</name> <operator pos:start="93:40" pos:end="93:40">-</operator> <name pos:start="93:42" pos:end="93:46">rects</name> <operator pos:start="93:48" pos:end="93:48">*</operator> <operator pos:start="93:50" pos:end="93:50">(</operator><name pos:start="93:51" pos:end="93:55">color</name> <operator pos:start="93:57" pos:end="93:57">*</operator> <name pos:start="93:59" pos:end="93:61">bpp</name> <operator pos:start="93:63" pos:end="93:63">+</operator> <literal type="number" pos:start="93:65" pos:end="93:65">2</literal><operator pos:start="93:66" pos:end="93:66">)</operator></expr>)</condition> <block pos:start="93:69" pos:end="99:17">{<block_content pos:start="95:21" pos:end="97:30">

                    <expr_stmt pos:start="95:21" pos:end="95:79"><expr pos:start="95:21" pos:end="95:78"><call pos:start="95:21" pos:end="95:78"><name pos:start="95:21" pos:end="95:26">av_log</name><argument_list pos:start="95:27" pos:end="95:78">(<argument pos:start="95:28" pos:end="95:35"><expr pos:start="95:28" pos:end="95:35"><name pos:start="95:28" pos:end="95:35"><name pos:start="95:28" pos:end="95:28">c</name><operator pos:start="95:29" pos:end="95:30">-&gt;</operator><name pos:start="95:31" pos:end="95:35">avctx</name></name></expr></argument>, <argument pos:start="95:38" pos:end="95:49"><expr pos:start="95:38" pos:end="95:49"><name pos:start="95:38" pos:end="95:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="95:52" pos:end="95:77"><expr pos:start="95:52" pos:end="95:77"><literal type="string" pos:start="95:52" pos:end="95:77">"Premature end of data!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="97:21" pos:end="97:30">return <expr pos:start="97:28" pos:end="97:29"><operator pos:start="97:28" pos:end="97:28">-</operator><literal type="number" pos:start="97:29" pos:end="97:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <for pos:start="101:17" pos:end="119:17">for <control pos:start="101:21" pos:end="101:43">(<init pos:start="101:22" pos:end="101:27"><expr pos:start="101:22" pos:end="101:26"><name pos:start="101:22" pos:end="101:22">k</name> <operator pos:start="101:24" pos:end="101:24">=</operator> <literal type="number" pos:start="101:26" pos:end="101:26">0</literal></expr>;</init> <condition pos:start="101:29" pos:end="101:38"><expr pos:start="101:29" pos:end="101:37"><name pos:start="101:29" pos:end="101:29">k</name> <operator pos:start="101:31" pos:end="101:31">&lt;</operator> <name pos:start="101:33" pos:end="101:37">rects</name></expr>;</condition> <incr pos:start="101:40" pos:end="101:42"><expr pos:start="101:40" pos:end="101:42"><name pos:start="101:40" pos:end="101:40">k</name><operator pos:start="101:41" pos:end="101:42">++</operator></expr></incr>)</control> <block pos:start="101:45" pos:end="119:17">{<block_content pos:start="103:21" pos:end="117:64">

                    <if_stmt pos:start="103:21" pos:end="109:21"><if pos:start="103:21" pos:end="109:21">if <condition pos:start="103:24" pos:end="103:30">(<expr pos:start="103:25" pos:end="103:29"><name pos:start="103:25" pos:end="103:29">color</name></expr>)</condition> <block pos:start="103:32" pos:end="109:21">{<block_content pos:start="105:25" pos:end="107:35">

                        <expr_stmt pos:start="105:25" pos:end="105:68"><expr pos:start="105:25" pos:end="105:67"><name pos:start="105:25" pos:end="105:26">fg</name> <operator pos:start="105:28" pos:end="105:28">=</operator> <call pos:start="105:30" pos:end="105:67"><name pos:start="105:30" pos:end="105:43">vmnc_get_pixel</name><argument_list pos:start="105:44" pos:end="105:67">(<argument pos:start="105:45" pos:end="105:47"><expr pos:start="105:45" pos:end="105:47"><name pos:start="105:45" pos:end="105:47">src</name></expr></argument>, <argument pos:start="105:50" pos:end="105:52"><expr pos:start="105:50" pos:end="105:52"><name pos:start="105:50" pos:end="105:52">bpp</name></expr></argument>, <argument pos:start="105:55" pos:end="105:66"><expr pos:start="105:55" pos:end="105:66"><name pos:start="105:55" pos:end="105:66"><name pos:start="105:55" pos:end="105:55">c</name><operator pos:start="105:56" pos:end="105:57">-&gt;</operator><name pos:start="105:58" pos:end="105:66">bigendian</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="107:25" pos:end="107:35"><expr pos:start="107:25" pos:end="107:34"><name pos:start="107:25" pos:end="107:27">src</name> <operator pos:start="107:29" pos:end="107:30">+=</operator> <name pos:start="107:32" pos:end="107:34">bpp</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="111:21" pos:end="111:32"><expr pos:start="111:21" pos:end="111:31"><name pos:start="111:21" pos:end="111:22">xy</name> <operator pos:start="111:24" pos:end="111:24">=</operator> <operator pos:start="111:26" pos:end="111:26">*</operator><name pos:start="111:27" pos:end="111:29">src</name><operator pos:start="111:30" pos:end="111:31">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="113:21" pos:end="113:32"><expr pos:start="113:21" pos:end="113:31"><name pos:start="113:21" pos:end="113:22">wh</name> <operator pos:start="113:24" pos:end="113:24">=</operator> <operator pos:start="113:26" pos:end="113:26">*</operator><name pos:start="113:27" pos:end="113:29">src</name><operator pos:start="113:30" pos:end="113:31">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="115:21" pos:end="117:64"><expr pos:start="115:21" pos:end="117:63"><call pos:start="115:21" pos:end="117:63"><name pos:start="115:21" pos:end="115:30">paint_rect</name><argument_list pos:start="115:31" pos:end="117:63">(<argument pos:start="115:32" pos:end="115:35"><expr pos:start="115:32" pos:end="115:35"><name pos:start="115:32" pos:end="115:35">dst2</name></expr></argument>, <argument pos:start="115:38" pos:end="115:44"><expr pos:start="115:38" pos:end="115:44"><name pos:start="115:38" pos:end="115:39">xy</name> <operator pos:start="115:41" pos:end="115:42">&gt;&gt;</operator> <literal type="number" pos:start="115:44" pos:end="115:44">4</literal></expr></argument>, <argument pos:start="115:47" pos:end="115:54"><expr pos:start="115:47" pos:end="115:54"><name pos:start="115:47" pos:end="115:48">xy</name> <operator pos:start="115:50" pos:end="115:50">&amp;</operator> <literal type="number" pos:start="115:52" pos:end="115:54">0xF</literal></expr></argument>, <argument pos:start="115:57" pos:end="115:69"><expr pos:start="115:57" pos:end="115:69"><operator pos:start="115:57" pos:end="115:57">(</operator><name pos:start="115:58" pos:end="115:59">wh</name> <operator pos:start="115:61" pos:end="115:62">&gt;&gt;</operator> <literal type="number" pos:start="115:64" pos:end="115:64">4</literal><operator pos:start="115:65" pos:end="115:65">)</operator> <operator pos:start="115:67" pos:end="115:67">+</operator> <literal type="number" pos:start="115:69" pos:end="115:69">1</literal></expr></argument>,

                               <argument pos:start="117:32" pos:end="117:45"><expr pos:start="117:32" pos:end="117:45"><operator pos:start="117:32" pos:end="117:32">(</operator><name pos:start="117:33" pos:end="117:34">wh</name> <operator pos:start="117:36" pos:end="117:36">&amp;</operator> <literal type="number" pos:start="117:38" pos:end="117:40">0xF</literal><operator pos:start="117:41" pos:end="117:41">)</operator> <operator pos:start="117:43" pos:end="117:43">+</operator> <literal type="number" pos:start="117:45" pos:end="117:45">1</literal></expr></argument>, <argument pos:start="117:48" pos:end="117:49"><expr pos:start="117:48" pos:end="117:49"><name pos:start="117:48" pos:end="117:49">fg</name></expr></argument>, <argument pos:start="117:52" pos:end="117:54"><expr pos:start="117:52" pos:end="117:54"><name pos:start="117:52" pos:end="117:54">bpp</name></expr></argument>, <argument pos:start="117:57" pos:end="117:62"><expr pos:start="117:57" pos:end="117:62"><name pos:start="117:57" pos:end="117:62">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="125:9" pos:end="125:27"><expr pos:start="125:9" pos:end="125:26"><name pos:start="125:9" pos:end="125:11">dst</name> <operator pos:start="125:13" pos:end="125:14">+=</operator> <name pos:start="125:16" pos:end="125:21">stride</name> <operator pos:start="125:23" pos:end="125:23">*</operator> <literal type="number" pos:start="125:25" pos:end="125:26">16</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="129:5" pos:end="129:22">return <expr pos:start="129:12" pos:end="129:21"><name pos:start="129:12" pos:end="129:14">src</name> <operator pos:start="129:16" pos:end="129:16">-</operator> <name pos:start="129:18" pos:end="129:21">ssrc</name></expr>;</return>

</block_content>}</block></function>
</unit>
