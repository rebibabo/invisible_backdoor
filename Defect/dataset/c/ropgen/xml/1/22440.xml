<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22440.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">vhost_sync_dirty_bitmap</name><parameter_list pos:start="1:35" pos:end="7:51">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:56"><name pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:41">struct</name> <name pos:start="1:43" pos:end="1:51">vhost_dev</name></name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">dev</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:63"><decl pos:start="3:36" pos:end="3:63"><type pos:start="3:36" pos:end="3:63"><name pos:start="3:36" pos:end="3:54">MemoryRegionSection</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:63">section</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:52"><decl pos:start="5:36" pos:end="5:52"><type pos:start="5:36" pos:end="5:52"><name pos:start="5:36" pos:end="5:41">hwaddr</name></type> <name pos:start="5:43" pos:end="5:52">start_addr</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:50"><decl pos:start="7:36" pos:end="7:50"><type pos:start="7:36" pos:end="7:50"><name pos:start="7:36" pos:end="7:41">hwaddr</name></type> <name pos:start="7:43" pos:end="7:50">end_addr</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="47:1">{<block_content pos:start="11:5" pos:end="45:13">

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:43">(<expr pos:start="15:9" pos:end="15:42"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:25"><name pos:start="15:10" pos:end="15:12">dev</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:25">log_enabled</name></name> <operator pos:start="15:27" pos:end="15:28">||</operator> <operator pos:start="15:30" pos:end="15:30">!</operator><name pos:start="15:31" pos:end="15:42"><name pos:start="15:31" pos:end="15:33">dev</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:42">started</name></name></expr>)</condition> <block pos:start="15:45" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="21:5" pos:end="33:5">for <control pos:start="21:9" pos:end="21:44">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:39"><expr pos:start="21:17" pos:end="21:38"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:38"><name pos:start="21:21" pos:end="21:23">dev</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:28">mem</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:38">nregions</name></name></expr>;</condition> <incr pos:start="21:41" pos:end="21:43"><expr pos:start="21:41" pos:end="21:43"><operator pos:start="21:41" pos:end="21:42">++</operator><name pos:start="21:43" pos:end="21:43">i</name></expr></incr>)</control> <block pos:start="21:46" pos:end="33:5">{<block_content pos:start="23:9" pos:end="31:64">

        <decl_stmt pos:start="23:9" pos:end="23:64"><decl pos:start="23:9" pos:end="23:63"><type pos:start="23:9" pos:end="23:36"><name pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:14">struct</name> <name pos:start="23:16" pos:end="23:34">vhost_memory_region</name></name> <modifier pos:start="23:36" pos:end="23:36">*</modifier></type><name pos:start="23:37" pos:end="23:39">reg</name> <init pos:start="23:41" pos:end="23:63">= <expr pos:start="23:43" pos:end="23:63"><name pos:start="23:43" pos:end="23:59"><name pos:start="23:43" pos:end="23:45">dev</name><operator pos:start="23:46" pos:end="23:47">-&gt;</operator><name pos:start="23:48" pos:end="23:50">mem</name><operator pos:start="23:51" pos:end="23:52">-&gt;</operator><name pos:start="23:53" pos:end="23:59">regions</name></name> <operator pos:start="23:61" pos:end="23:61">+</operator> <name pos:start="23:63" pos:end="23:63">i</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="25:9" pos:end="31:64"><expr pos:start="25:9" pos:end="31:63"><call pos:start="25:9" pos:end="31:63"><name pos:start="25:9" pos:end="25:29">vhost_dev_sync_region</name><argument_list pos:start="25:30" pos:end="31:63">(<argument pos:start="25:31" pos:end="25:33"><expr pos:start="25:31" pos:end="25:33"><name pos:start="25:31" pos:end="25:33">dev</name></expr></argument>, <argument pos:start="25:36" pos:end="25:42"><expr pos:start="25:36" pos:end="25:42"><name pos:start="25:36" pos:end="25:42">section</name></expr></argument>, <argument pos:start="25:45" pos:end="25:54"><expr pos:start="25:45" pos:end="25:54"><name pos:start="25:45" pos:end="25:54">start_addr</name></expr></argument>, <argument pos:start="25:57" pos:end="25:64"><expr pos:start="25:57" pos:end="25:64"><name pos:start="25:57" pos:end="25:64">end_addr</name></expr></argument>,

                              <argument pos:start="27:31" pos:end="27:50"><expr pos:start="27:31" pos:end="27:50"><name pos:start="27:31" pos:end="27:50"><name pos:start="27:31" pos:end="27:33">reg</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:50">guest_phys_addr</name></name></expr></argument>,

                              <argument pos:start="29:31" pos:end="31:62"><expr pos:start="29:31" pos:end="31:62"><call pos:start="29:31" pos:end="31:62"><name pos:start="29:31" pos:end="29:44">range_get_last</name><argument_list pos:start="29:45" pos:end="31:62">(<argument pos:start="29:46" pos:end="29:65"><expr pos:start="29:46" pos:end="29:65"><name pos:start="29:46" pos:end="29:65"><name pos:start="29:46" pos:end="29:48">reg</name><operator pos:start="29:49" pos:end="29:50">-&gt;</operator><name pos:start="29:51" pos:end="29:65">guest_phys_addr</name></name></expr></argument>,

                                             <argument pos:start="31:46" pos:end="31:61"><expr pos:start="31:46" pos:end="31:61"><name pos:start="31:46" pos:end="31:61"><name pos:start="31:46" pos:end="31:48">reg</name><operator pos:start="31:49" pos:end="31:50">-&gt;</operator><name pos:start="31:51" pos:end="31:61">memory_size</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="35:5" pos:end="43:5">for <control pos:start="35:9" pos:end="35:35">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:30"><expr pos:start="35:17" pos:end="35:29"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:29"><name pos:start="35:21" pos:end="35:23">dev</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:29">nvqs</name></name></expr>;</condition> <incr pos:start="35:32" pos:end="35:34"><expr pos:start="35:32" pos:end="35:34"><operator pos:start="35:32" pos:end="35:33">++</operator><name pos:start="35:34" pos:end="35:34">i</name></expr></incr>)</control> <block pos:start="35:37" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:76">

        <decl_stmt pos:start="37:9" pos:end="37:50"><decl pos:start="37:9" pos:end="37:49"><type pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:14">struct</name> <name pos:start="37:16" pos:end="37:30">vhost_virtqueue</name></name> <modifier pos:start="37:32" pos:end="37:32">*</modifier></type><name pos:start="37:33" pos:end="37:34">vq</name> <init pos:start="37:36" pos:end="37:49">= <expr pos:start="37:38" pos:end="37:49"><name pos:start="37:38" pos:end="37:45"><name pos:start="37:38" pos:end="37:40">dev</name><operator pos:start="37:41" pos:end="37:42">-&gt;</operator><name pos:start="37:43" pos:end="37:45">vqs</name></name> <operator pos:start="37:47" pos:end="37:47">+</operator> <name pos:start="37:49" pos:end="37:49">i</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="39:9" pos:end="41:76"><expr pos:start="39:9" pos:end="41:75"><call pos:start="39:9" pos:end="41:75"><name pos:start="39:9" pos:end="39:29">vhost_dev_sync_region</name><argument_list pos:start="39:30" pos:end="41:75">(<argument pos:start="39:31" pos:end="39:33"><expr pos:start="39:31" pos:end="39:33"><name pos:start="39:31" pos:end="39:33">dev</name></expr></argument>, <argument pos:start="39:36" pos:end="39:42"><expr pos:start="39:36" pos:end="39:42"><name pos:start="39:36" pos:end="39:42">section</name></expr></argument>, <argument pos:start="39:45" pos:end="39:54"><expr pos:start="39:45" pos:end="39:54"><name pos:start="39:45" pos:end="39:54">start_addr</name></expr></argument>, <argument pos:start="39:57" pos:end="39:64"><expr pos:start="39:57" pos:end="39:64"><name pos:start="39:57" pos:end="39:64">end_addr</name></expr></argument>, <argument pos:start="39:67" pos:end="39:79"><expr pos:start="39:67" pos:end="39:79"><name pos:start="39:67" pos:end="39:79"><name pos:start="39:67" pos:end="39:68">vq</name><operator pos:start="39:69" pos:end="39:70">-&gt;</operator><name pos:start="39:71" pos:end="39:79">used_phys</name></name></expr></argument>,

                              <argument pos:start="41:31" pos:end="41:74"><expr pos:start="41:31" pos:end="41:74"><call pos:start="41:31" pos:end="41:74"><name pos:start="41:31" pos:end="41:44">range_get_last</name><argument_list pos:start="41:45" pos:end="41:74">(<argument pos:start="41:46" pos:end="41:58"><expr pos:start="41:46" pos:end="41:58"><name pos:start="41:46" pos:end="41:58"><name pos:start="41:46" pos:end="41:47">vq</name><operator pos:start="41:48" pos:end="41:49">-&gt;</operator><name pos:start="41:50" pos:end="41:58">used_phys</name></name></expr></argument>, <argument pos:start="41:61" pos:end="41:73"><expr pos:start="41:61" pos:end="41:73"><name pos:start="41:61" pos:end="41:73"><name pos:start="41:61" pos:end="41:62">vq</name><operator pos:start="41:63" pos:end="41:64">-&gt;</operator><name pos:start="41:65" pos:end="41:73">used_size</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
