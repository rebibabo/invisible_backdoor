<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24779.c" pos:tabs="8"><function pos:start="1:1" pos:end="343:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">render_slice</name><parameter_list pos:start="1:25" pos:end="1:56">(<parameter pos:start="1:26" pos:end="1:44"><decl pos:start="1:26" pos:end="1:44"><type pos:start="1:26" pos:end="1:44"><name pos:start="1:26" pos:end="1:41">Vp3DecodeContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:55"><decl pos:start="1:47" pos:end="1:55"><type pos:start="1:47" pos:end="1:55"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:55">slice</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="343:1">{<block_content pos:start="5:5" pos:end="341:93">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">x</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">y</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">i</name></decl>, <decl pos:start="5:18" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:18">j</name></decl>, <decl pos:start="5:21" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:21" pos:end="5:28">fragment</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:43"><expr pos:start="7:5" pos:end="7:42"><call pos:start="7:5" pos:end="7:42"><name pos:start="7:5" pos:end="7:20">LOCAL_ALIGNED_16</name><argument_list pos:start="7:21" pos:end="7:42">(<argument pos:start="7:22" pos:end="7:28"><expr pos:start="7:22" pos:end="7:28"><name pos:start="7:22" pos:end="7:28">DCTELEM</name></expr></argument>, <argument pos:start="7:31" pos:end="7:35"><expr pos:start="7:31" pos:end="7:35"><name pos:start="7:31" pos:end="7:35">block</name></expr></argument>, <argument pos:start="7:38" pos:end="7:41"><expr pos:start="7:38" pos:end="7:41"><index pos:start="7:38" pos:end="7:41">[<expr pos:start="7:39" pos:end="7:40"><literal type="number" pos:start="7:39" pos:end="7:40">64</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">motion_x</name> <init pos:start="9:18" pos:end="9:29">= <expr pos:start="9:20" pos:end="9:29"><literal type="number" pos:start="9:20" pos:end="9:29">0xdeadbeef</literal></expr></init></decl>, <decl pos:start="9:32" pos:end="9:52"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:32" pos:end="9:39">motion_y</name> <init pos:start="9:41" pos:end="9:52">= <expr pos:start="9:43" pos:end="9:52"><literal type="number" pos:start="9:43" pos:end="9:52">0xdeadbeef</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:28">motion_halfpel_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:26">motion_source</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">plane</name></decl>, <decl pos:start="15:16" pos:end="15:26"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:16" pos:end="15:26">first_pixel</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:15"><if pos:start="19:5" pos:end="21:15">if <condition pos:start="19:8" pos:end="19:40">(<expr pos:start="19:9" pos:end="19:39"><name pos:start="19:9" pos:end="19:13">slice</name> <operator pos:start="19:15" pos:end="19:16">&gt;=</operator> <name pos:start="19:18" pos:end="19:39"><name pos:start="19:18" pos:end="19:18">s</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:39">c_superblock_height</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:15"><block_content pos:start="21:9" pos:end="21:15">

        <return pos:start="21:9" pos:end="21:15">return;</return></block_content></block></if></if_stmt>



    <for pos:start="25:5" pos:end="321:5">for <control pos:start="25:9" pos:end="25:39">(<init pos:start="25:10" pos:end="25:19"><expr pos:start="25:10" pos:end="25:18"><name pos:start="25:10" pos:end="25:14">plane</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init> <condition pos:start="25:21" pos:end="25:30"><expr pos:start="25:21" pos:end="25:29"><name pos:start="25:21" pos:end="25:25">plane</name> <operator pos:start="25:27" pos:end="25:27">&lt;</operator> <literal type="number" pos:start="25:29" pos:end="25:29">3</literal></expr>;</condition> <incr pos:start="25:32" pos:end="25:38"><expr pos:start="25:32" pos:end="25:38"><name pos:start="25:32" pos:end="25:36">plane</name><operator pos:start="25:37" pos:end="25:38">++</operator></expr></incr>)</control> <block pos:start="25:41" pos:end="321:5">{<block_content pos:start="27:9" pos:end="319:9">

        <decl_stmt pos:start="27:9" pos:end="27:89"><decl pos:start="27:9" pos:end="27:88"><type pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:15">uint8_t</name> <modifier pos:start="27:17" pos:end="27:17">*</modifier></type><name pos:start="27:18" pos:end="27:29">output_plane</name> <init pos:start="27:31" pos:end="27:88">= <expr pos:start="27:33" pos:end="27:88"><name pos:start="27:33" pos:end="27:64"><name pos:start="27:33" pos:end="27:33">s</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:48">current_frame</name><operator pos:start="27:49" pos:end="27:49">.</operator><name pos:start="27:50" pos:end="27:53">data</name>    <index pos:start="27:58" pos:end="27:64">[<expr pos:start="27:59" pos:end="27:63"><name pos:start="27:59" pos:end="27:63">plane</name></expr>]</index></name> <operator pos:start="27:66" pos:end="27:66">+</operator> <name pos:start="27:68" pos:end="27:88"><name pos:start="27:68" pos:end="27:68">s</name><operator pos:start="27:69" pos:end="27:70">-&gt;</operator><name pos:start="27:71" pos:end="27:81">data_offset</name><index pos:start="27:82" pos:end="27:88">[<expr pos:start="27:83" pos:end="27:87"><name pos:start="27:83" pos:end="27:87">plane</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:89"><decl pos:start="29:9" pos:end="29:88"><type pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:15">uint8_t</name> <modifier pos:start="29:17" pos:end="29:17">*</modifier></type>  <name pos:start="29:20" pos:end="29:29">last_plane</name> <init pos:start="29:31" pos:end="29:88">= <expr pos:start="29:33" pos:end="29:88"><name pos:start="29:33" pos:end="29:64"><name pos:start="29:33" pos:end="29:33">s</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator>   <name pos:start="29:39" pos:end="29:48">last_frame</name><operator pos:start="29:49" pos:end="29:49">.</operator><name pos:start="29:50" pos:end="29:53">data</name>    <index pos:start="29:58" pos:end="29:64">[<expr pos:start="29:59" pos:end="29:63"><name pos:start="29:59" pos:end="29:63">plane</name></expr>]</index></name> <operator pos:start="29:66" pos:end="29:66">+</operator> <name pos:start="29:68" pos:end="29:88"><name pos:start="29:68" pos:end="29:68">s</name><operator pos:start="29:69" pos:end="29:70">-&gt;</operator><name pos:start="29:71" pos:end="29:81">data_offset</name><index pos:start="29:82" pos:end="29:88">[<expr pos:start="29:83" pos:end="29:87"><name pos:start="29:83" pos:end="29:87">plane</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:89"><decl pos:start="31:9" pos:end="31:88"><type pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:15">uint8_t</name> <modifier pos:start="31:17" pos:end="31:17">*</modifier></type><name pos:start="31:18" pos:end="31:29">golden_plane</name> <init pos:start="31:31" pos:end="31:88">= <expr pos:start="31:33" pos:end="31:88"><name pos:start="31:33" pos:end="31:64"><name pos:start="31:33" pos:end="31:33">s</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator> <name pos:start="31:37" pos:end="31:48">golden_frame</name><operator pos:start="31:49" pos:end="31:49">.</operator><name pos:start="31:50" pos:end="31:53">data</name>    <index pos:start="31:58" pos:end="31:64">[<expr pos:start="31:59" pos:end="31:63"><name pos:start="31:59" pos:end="31:63">plane</name></expr>]</index></name> <operator pos:start="31:66" pos:end="31:66">+</operator> <name pos:start="31:68" pos:end="31:88"><name pos:start="31:68" pos:end="31:68">s</name><operator pos:start="31:69" pos:end="31:70">-&gt;</operator><name pos:start="31:71" pos:end="31:81">data_offset</name><index pos:start="31:82" pos:end="31:88">[<expr pos:start="31:83" pos:end="31:87"><name pos:start="31:83" pos:end="31:87">plane</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:65"><decl pos:start="33:9" pos:end="33:64"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:18">stride</name>            <init pos:start="33:31" pos:end="33:64">= <expr pos:start="33:33" pos:end="33:64"><name pos:start="33:33" pos:end="33:64"><name pos:start="33:33" pos:end="33:33">s</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:48">current_frame</name><operator pos:start="33:49" pos:end="33:49">.</operator><name pos:start="33:50" pos:end="33:57">linesize</name><index pos:start="33:58" pos:end="33:64">[<expr pos:start="33:59" pos:end="33:63"><name pos:start="33:59" pos:end="33:63">plane</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:74"><decl pos:start="35:9" pos:end="35:73"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:23">plane_width</name>       <init pos:start="35:31" pos:end="35:73">= <expr pos:start="35:33" pos:end="35:73"><name pos:start="35:33" pos:end="35:40"><name pos:start="35:33" pos:end="35:33">s</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:40">width</name></name>  <operator pos:start="35:43" pos:end="35:44">&gt;&gt;</operator> <operator pos:start="35:46" pos:end="35:46">(</operator><name pos:start="35:47" pos:end="35:51">plane</name> <operator pos:start="35:53" pos:end="35:54">&amp;&amp;</operator> <name pos:start="35:56" pos:end="35:72"><name pos:start="35:56" pos:end="35:56">s</name><operator pos:start="35:57" pos:end="35:58">-&gt;</operator><name pos:start="35:59" pos:end="35:72">chroma_x_shift</name></name><operator pos:start="35:73" pos:end="35:73">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:74"><decl pos:start="37:9" pos:end="37:73"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:24">plane_height</name>      <init pos:start="37:31" pos:end="37:73">= <expr pos:start="37:33" pos:end="37:73"><name pos:start="37:33" pos:end="37:41"><name pos:start="37:33" pos:end="37:33">s</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:41">height</name></name> <operator pos:start="37:43" pos:end="37:44">&gt;&gt;</operator> <operator pos:start="37:46" pos:end="37:46">(</operator><name pos:start="37:47" pos:end="37:51">plane</name> <operator pos:start="37:53" pos:end="37:54">&amp;&amp;</operator> <name pos:start="37:56" pos:end="37:72"><name pos:start="37:56" pos:end="37:56">s</name><operator pos:start="37:57" pos:end="37:58">-&gt;</operator><name pos:start="37:59" pos:end="37:72">chroma_y_shift</name></name><operator pos:start="37:73" pos:end="37:73">)</operator></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:57"><expr pos:start="39:9" pos:end="39:56"><call pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:14">int8_t</name> <argument_list pos:start="39:16" pos:end="39:28">(<argument pos:start="39:17" pos:end="39:27"><expr pos:start="39:17" pos:end="39:27"><operator pos:start="39:17" pos:end="39:17">*</operator><name pos:start="39:18" pos:end="39:27">motion_val</name></expr></argument>)</argument_list></call><index pos:start="39:29" pos:end="39:31">[<expr pos:start="39:30" pos:end="39:30"><literal type="number" pos:start="39:30" pos:end="39:30">2</literal></expr>]</index> <operator pos:start="39:33" pos:end="39:33">=</operator> <name pos:start="39:35" pos:end="39:56"><name pos:start="39:35" pos:end="39:35">s</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:47">motion_val</name><index pos:start="39:48" pos:end="39:56">[<expr pos:start="39:49" pos:end="39:55"><operator pos:start="39:49" pos:end="39:49">!</operator><operator pos:start="39:50" pos:end="39:50">!</operator><name pos:start="39:51" pos:end="39:55">plane</name></expr>]</index></name></expr>;</expr_stmt>



        <decl_stmt pos:start="43:9" pos:end="43:71"><decl pos:start="43:9" pos:end="43:16"><type pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">int</name></type> <name pos:start="43:13" pos:end="43:16">sb_x</name></decl>, <decl pos:start="43:19" pos:end="43:70"><type ref="prev" pos:start="43:9" pos:end="43:11"/><name pos:start="43:19" pos:end="43:22">sb_y</name>        <init pos:start="43:31" pos:end="43:70">= <expr pos:start="43:33" pos:end="43:70"><name pos:start="43:33" pos:end="43:37">slice</name> <operator pos:start="43:39" pos:end="43:40">&lt;&lt;</operator> <operator pos:start="43:42" pos:end="43:42">(</operator><operator pos:start="43:43" pos:end="43:43">!</operator><name pos:start="43:44" pos:end="43:48">plane</name> <operator pos:start="43:50" pos:end="43:51">&amp;&amp;</operator> <name pos:start="43:53" pos:end="43:69"><name pos:start="43:53" pos:end="43:53">s</name><operator pos:start="43:54" pos:end="43:55">-&gt;</operator><name pos:start="43:56" pos:end="43:69">chroma_y_shift</name></name><operator pos:start="43:70" pos:end="43:70">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:73"><decl pos:start="45:9" pos:end="45:72"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:24">slice_height</name>      <init pos:start="45:31" pos:end="45:72">= <expr pos:start="45:33" pos:end="45:72"><name pos:start="45:33" pos:end="45:36">sb_y</name> <operator pos:start="45:38" pos:end="45:38">+</operator> <literal type="number" pos:start="45:40" pos:end="45:42">1</literal> <operator pos:start="45:42" pos:end="45:42">+</operator> <operator pos:start="45:44" pos:end="45:44">(</operator><operator pos:start="45:45" pos:end="45:45">!</operator><name pos:start="45:46" pos:end="45:50">plane</name> <operator pos:start="45:52" pos:end="45:53">&amp;&amp;</operator> <name pos:start="45:55" pos:end="45:71"><name pos:start="45:55" pos:end="45:55">s</name><operator pos:start="45:56" pos:end="45:57">-&gt;</operator><name pos:start="45:58" pos:end="45:71">chroma_y_shift</name></name><operator pos:start="45:72" pos:end="45:72">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:86"><decl pos:start="47:9" pos:end="47:85"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:23">slice_width</name>       <init pos:start="47:31" pos:end="47:85">= <expr pos:start="47:33" pos:end="47:85"><ternary pos:start="47:33" pos:end="47:85"><condition pos:start="47:33" pos:end="47:39"><expr pos:start="47:33" pos:end="47:37"><name pos:start="47:33" pos:end="47:37">plane</name></expr> ?</condition><then pos:start="47:41" pos:end="47:61"> <expr pos:start="47:41" pos:end="47:61"><name pos:start="47:41" pos:end="47:61"><name pos:start="47:41" pos:end="47:41">s</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:61">c_superblock_width</name></name></expr> </then><else pos:start="47:63" pos:end="47:85">: <expr pos:start="47:65" pos:end="47:85"><name pos:start="47:65" pos:end="47:85"><name pos:start="47:65" pos:end="47:65">s</name><operator pos:start="47:66" pos:end="47:67">-&gt;</operator><name pos:start="47:68" pos:end="47:85">y_superblock_width</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <decl_stmt pos:start="51:9" pos:end="51:59"><decl pos:start="51:9" pos:end="51:58"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:26">fragment_width</name>    <init pos:start="51:31" pos:end="51:58">= <expr pos:start="51:33" pos:end="51:58"><name pos:start="51:33" pos:end="51:58"><name pos:start="51:33" pos:end="51:33">s</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:49">fragment_width</name><index pos:start="51:50" pos:end="51:58">[<expr pos:start="51:51" pos:end="51:57"><operator pos:start="51:51" pos:end="51:51">!</operator><operator pos:start="51:52" pos:end="51:52">!</operator><name pos:start="51:53" pos:end="51:57">plane</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="53:9" pos:end="53:60"><decl pos:start="53:9" pos:end="53:59"><type pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:11">int</name></type> <name pos:start="53:13" pos:end="53:27">fragment_height</name>   <init pos:start="53:31" pos:end="53:59">= <expr pos:start="53:33" pos:end="53:59"><name pos:start="53:33" pos:end="53:59"><name pos:start="53:33" pos:end="53:33">s</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:50">fragment_height</name><index pos:start="53:51" pos:end="53:59">[<expr pos:start="53:52" pos:end="53:58"><operator pos:start="53:52" pos:end="53:52">!</operator><operator pos:start="53:53" pos:end="53:53">!</operator><name pos:start="53:54" pos:end="53:58">plane</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="55:9" pos:end="55:57"><decl pos:start="55:9" pos:end="55:56"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:26">fragment_start</name>    <init pos:start="55:31" pos:end="55:56">= <expr pos:start="55:33" pos:end="55:56"><name pos:start="55:33" pos:end="55:56"><name pos:start="55:33" pos:end="55:33">s</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:49">fragment_start</name><index pos:start="55:50" pos:end="55:56">[<expr pos:start="55:51" pos:end="55:55"><name pos:start="55:51" pos:end="55:55">plane</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="57:9" pos:end="57:105"><decl pos:start="57:9" pos:end="57:104"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:20">do_await</name>          <init pos:start="57:31" pos:end="57:104">= <expr pos:start="57:33" pos:end="57:104"><operator pos:start="57:33" pos:end="57:33">!</operator><name pos:start="57:34" pos:end="57:38">plane</name> <operator pos:start="57:40" pos:end="57:41">&amp;&amp;</operator> <name pos:start="57:43" pos:end="57:54">HAVE_THREADS</name> <operator pos:start="57:56" pos:end="57:57">&amp;&amp;</operator> <operator pos:start="57:59" pos:end="57:59">(</operator><name pos:start="57:60" pos:end="57:87"><name pos:start="57:60" pos:end="57:60">s</name><operator pos:start="57:61" pos:end="57:62">-&gt;</operator><name pos:start="57:63" pos:end="57:67">avctx</name><operator pos:start="57:68" pos:end="57:69">-&gt;</operator><name pos:start="57:70" pos:end="57:87">active_thread_type</name></name><operator pos:start="57:88" pos:end="57:88">&amp;</operator><name pos:start="57:89" pos:end="57:103">FF_THREAD_FRAME</name><operator pos:start="57:104" pos:end="57:104">)</operator></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="61:9" pos:end="61:48"><if pos:start="61:9" pos:end="61:48">if <condition pos:start="61:12" pos:end="61:30">(<expr pos:start="61:13" pos:end="61:29"><operator pos:start="61:13" pos:end="61:13">!</operator><name pos:start="61:14" pos:end="61:29"><name pos:start="61:14" pos:end="61:14">s</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:29">flipped_image</name></name></expr>)</condition><block type="pseudo" pos:start="61:32" pos:end="61:48"><block_content pos:start="61:32" pos:end="61:48"> <expr_stmt pos:start="61:32" pos:end="61:48"><expr pos:start="61:32" pos:end="61:47"><name pos:start="61:32" pos:end="61:37">stride</name> <operator pos:start="61:39" pos:end="61:39">=</operator> <operator pos:start="61:41" pos:end="61:41">-</operator><name pos:start="61:42" pos:end="61:47">stride</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="63:9" pos:end="65:21"><if pos:start="63:9" pos:end="65:21">if <condition pos:start="63:12" pos:end="63:72">(<expr pos:start="63:13" pos:end="63:71"><name pos:start="63:13" pos:end="63:23">CONFIG_GRAY</name> <operator pos:start="63:25" pos:end="63:26">&amp;&amp;</operator> <name pos:start="63:28" pos:end="63:32">plane</name> <operator pos:start="63:34" pos:end="63:35">&amp;&amp;</operator> <operator pos:start="63:37" pos:end="63:37">(</operator><name pos:start="63:38" pos:end="63:52"><name pos:start="63:38" pos:end="63:38">s</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:45">avctx</name><operator pos:start="63:46" pos:end="63:47">-&gt;</operator><name pos:start="63:48" pos:end="63:52">flags</name></name> <operator pos:start="63:54" pos:end="63:54">&amp;</operator> <name pos:start="63:56" pos:end="63:70">CODEC_FLAG_GRAY</name><operator pos:start="63:71" pos:end="63:71">)</operator></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:21"><block_content pos:start="65:13" pos:end="65:21">

            <continue pos:start="65:13" pos:end="65:21">continue;</continue></block_content></block></if></if_stmt>



        <comment type="block" pos:start="69:9" pos:end="69:68">/* for each superblock row in the slice (both of them)... */</comment>

        <for pos:start="71:9" pos:end="319:9">for <control pos:start="71:13" pos:end="71:43">(<init pos:start="71:14" pos:end="71:14">;</init> <condition pos:start="71:16" pos:end="71:35"><expr pos:start="71:16" pos:end="71:34"><name pos:start="71:16" pos:end="71:19">sb_y</name> <operator pos:start="71:21" pos:end="71:21">&lt;</operator> <name pos:start="71:23" pos:end="71:34">slice_height</name></expr>;</condition> <incr pos:start="71:37" pos:end="71:42"><expr pos:start="71:37" pos:end="71:42"><name pos:start="71:37" pos:end="71:40">sb_y</name><operator pos:start="71:41" pos:end="71:42">++</operator></expr></incr>)</control> <block pos:start="71:45" pos:end="319:9">{<block_content pos:start="77:13" pos:end="317:97">



            <comment type="block" pos:start="75:13" pos:end="75:49">/* for each superblock in a row... */</comment>

            <for pos:start="77:13" pos:end="309:13">for <control pos:start="77:17" pos:end="77:54">(<init pos:start="77:18" pos:end="77:26"><expr pos:start="77:18" pos:end="77:25"><name pos:start="77:18" pos:end="77:21">sb_x</name> <operator pos:start="77:23" pos:end="77:23">=</operator> <literal type="number" pos:start="77:25" pos:end="77:25">0</literal></expr>;</init> <condition pos:start="77:28" pos:end="77:46"><expr pos:start="77:28" pos:end="77:45"><name pos:start="77:28" pos:end="77:31">sb_x</name> <operator pos:start="77:33" pos:end="77:33">&lt;</operator> <name pos:start="77:35" pos:end="77:45">slice_width</name></expr>;</condition> <incr pos:start="77:48" pos:end="77:53"><expr pos:start="77:48" pos:end="77:53"><name pos:start="77:48" pos:end="77:51">sb_x</name><operator pos:start="77:52" pos:end="77:53">++</operator></expr></incr>)</control> <block pos:start="77:56" pos:end="309:13">{<block_content pos:start="83:17" pos:end="307:17">



                <comment type="block" pos:start="81:17" pos:end="81:55">/* for each block in a superblock... */</comment>

                <for pos:start="83:17" pos:end="307:17">for <control pos:start="83:21" pos:end="83:40">(<init pos:start="83:22" pos:end="83:27"><expr pos:start="83:22" pos:end="83:26"><name pos:start="83:22" pos:end="83:22">j</name> <operator pos:start="83:24" pos:end="83:24">=</operator> <literal type="number" pos:start="83:26" pos:end="83:26">0</literal></expr>;</init> <condition pos:start="83:29" pos:end="83:35"><expr pos:start="83:29" pos:end="83:34"><name pos:start="83:29" pos:end="83:29">j</name> <operator pos:start="83:31" pos:end="83:31">&lt;</operator> <literal type="number" pos:start="83:33" pos:end="83:34">16</literal></expr>;</condition> <incr pos:start="83:37" pos:end="83:39"><expr pos:start="83:37" pos:end="83:39"><name pos:start="83:37" pos:end="83:37">j</name><operator pos:start="83:38" pos:end="83:39">++</operator></expr></incr>)</control> <block pos:start="83:42" pos:end="307:17">{<block_content pos:start="85:21" pos:end="305:17">

                    <expr_stmt pos:start="85:21" pos:end="85:54"><expr pos:start="85:21" pos:end="85:53"><name pos:start="85:21" pos:end="85:21">x</name> <operator pos:start="85:23" pos:end="85:23">=</operator> <literal type="number" pos:start="85:25" pos:end="85:25">4</literal><operator pos:start="85:26" pos:end="85:26">*</operator><name pos:start="85:27" pos:end="85:30">sb_x</name> <operator pos:start="85:32" pos:end="85:32">+</operator> <name pos:start="85:34" pos:end="85:53"><name pos:start="85:34" pos:end="85:47">hilbert_offset</name><index pos:start="85:48" pos:end="85:50">[<expr pos:start="85:49" pos:end="85:49"><name pos:start="85:49" pos:end="85:49">j</name></expr>]</index><index pos:start="85:51" pos:end="85:53">[<expr pos:start="85:52" pos:end="85:52"><literal type="number" pos:start="85:52" pos:end="85:52">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="87:21" pos:end="87:54"><expr pos:start="87:21" pos:end="87:53"><name pos:start="87:21" pos:end="87:21">y</name> <operator pos:start="87:23" pos:end="87:23">=</operator> <literal type="number" pos:start="87:25" pos:end="87:25">4</literal><operator pos:start="87:26" pos:end="87:26">*</operator><name pos:start="87:27" pos:end="87:30">sb_y</name> <operator pos:start="87:32" pos:end="87:32">+</operator> <name pos:start="87:34" pos:end="87:53"><name pos:start="87:34" pos:end="87:47">hilbert_offset</name><index pos:start="87:48" pos:end="87:50">[<expr pos:start="87:49" pos:end="87:49"><name pos:start="87:49" pos:end="87:49">j</name></expr>]</index><index pos:start="87:51" pos:end="87:53">[<expr pos:start="87:52" pos:end="87:52"><literal type="number" pos:start="87:52" pos:end="87:52">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="89:21" pos:end="89:52"><expr pos:start="89:21" pos:end="89:51"><name pos:start="89:21" pos:end="89:28">fragment</name> <operator pos:start="89:30" pos:end="89:30">=</operator> <name pos:start="89:32" pos:end="89:32">y</name><operator pos:start="89:33" pos:end="89:33">*</operator><name pos:start="89:34" pos:end="89:47">fragment_width</name> <operator pos:start="89:49" pos:end="89:49">+</operator> <name pos:start="89:51" pos:end="89:51">x</name></expr>;</expr_stmt>



                    <expr_stmt pos:start="93:21" pos:end="93:50"><expr pos:start="93:21" pos:end="93:49"><name pos:start="93:21" pos:end="93:21">i</name> <operator pos:start="93:23" pos:end="93:23">=</operator> <name pos:start="93:25" pos:end="93:38">fragment_start</name> <operator pos:start="93:40" pos:end="93:40">+</operator> <name pos:start="93:42" pos:end="93:49">fragment</name></expr>;</expr_stmt>



                    <comment type="line" pos:start="97:21" pos:end="97:35">// bounds check</comment>

                    <if_stmt pos:start="99:21" pos:end="101:33"><if pos:start="99:21" pos:end="101:33">if <condition pos:start="99:24" pos:end="99:68">(<expr pos:start="99:25" pos:end="99:67"><name pos:start="99:25" pos:end="99:25">x</name> <operator pos:start="99:27" pos:end="99:28">&gt;=</operator> <name pos:start="99:30" pos:end="99:43">fragment_width</name> <operator pos:start="99:45" pos:end="99:46">||</operator> <name pos:start="99:48" pos:end="99:48">y</name> <operator pos:start="99:50" pos:end="99:51">&gt;=</operator> <name pos:start="99:53" pos:end="99:67">fragment_height</name></expr>)</condition><block type="pseudo" pos:start="101:25" pos:end="101:33"><block_content pos:start="101:25" pos:end="101:33">

                        <continue pos:start="101:25" pos:end="101:33">continue;</continue></block_content></block></if></if_stmt>



                <expr_stmt pos:start="105:17" pos:end="105:47"><expr pos:start="105:17" pos:end="105:46"><name pos:start="105:17" pos:end="105:27">first_pixel</name> <operator pos:start="105:29" pos:end="105:29">=</operator> <literal type="number" pos:start="105:31" pos:end="105:31">8</literal><operator pos:start="105:32" pos:end="105:32">*</operator><name pos:start="105:33" pos:end="105:33">y</name><operator pos:start="105:34" pos:end="105:34">*</operator><name pos:start="105:35" pos:end="105:40">stride</name> <operator pos:start="105:42" pos:end="105:42">+</operator> <literal type="number" pos:start="105:44" pos:end="105:44">8</literal><operator pos:start="105:45" pos:end="105:45">*</operator><name pos:start="105:46" pos:end="105:46">x</name></expr>;</expr_stmt>



                <if_stmt pos:start="109:17" pos:end="111:119"><if pos:start="109:17" pos:end="111:119">if <condition pos:start="109:20" pos:end="109:80">(<expr pos:start="109:21" pos:end="109:79"><name pos:start="109:21" pos:end="109:28">do_await</name> <operator pos:start="109:30" pos:end="109:31">&amp;&amp;</operator> <name pos:start="109:33" pos:end="109:51"><name pos:start="109:33" pos:end="109:33">s</name><operator pos:start="109:34" pos:end="109:35">-&gt;</operator><name pos:start="109:36" pos:end="109:48">all_fragments</name><index pos:start="109:49" pos:end="109:51">[<expr pos:start="109:50" pos:end="109:50"><name pos:start="109:50" pos:end="109:50">i</name></expr>]</index></name><operator pos:start="109:52" pos:end="109:52">.</operator><name pos:start="109:53" pos:end="109:65">coding_method</name> <operator pos:start="109:67" pos:end="109:68">!=</operator> <name pos:start="109:70" pos:end="109:79">MODE_INTRA</name></expr>)</condition><block type="pseudo" pos:start="111:21" pos:end="111:119"><block_content pos:start="111:21" pos:end="111:119">

                    <expr_stmt pos:start="111:21" pos:end="111:119"><expr pos:start="111:21" pos:end="111:118"><call pos:start="111:21" pos:end="111:118"><name pos:start="111:21" pos:end="111:39">await_reference_row</name><argument_list pos:start="111:40" pos:end="111:118">(<argument pos:start="111:41" pos:end="111:41"><expr pos:start="111:41" pos:end="111:41"><name pos:start="111:41" pos:end="111:41">s</name></expr></argument>, <argument pos:start="111:44" pos:end="111:63"><expr pos:start="111:44" pos:end="111:63"><operator pos:start="111:44" pos:end="111:44">&amp;</operator><name pos:start="111:45" pos:end="111:63"><name pos:start="111:45" pos:end="111:45">s</name><operator pos:start="111:46" pos:end="111:47">-&gt;</operator><name pos:start="111:48" pos:end="111:60">all_fragments</name><index pos:start="111:61" pos:end="111:63">[<expr pos:start="111:62" pos:end="111:62"><name pos:start="111:62" pos:end="111:62">i</name></expr>]</index></name></expr></argument>, <argument pos:start="111:66" pos:end="111:88"><expr pos:start="111:66" pos:end="111:88"><name pos:start="111:66" pos:end="111:88"><name pos:start="111:66" pos:end="111:75">motion_val</name><index pos:start="111:76" pos:end="111:85">[<expr pos:start="111:77" pos:end="111:84"><name pos:start="111:77" pos:end="111:84">fragment</name></expr>]</index><index pos:start="111:86" pos:end="111:88">[<expr pos:start="111:87" pos:end="111:87"><literal type="number" pos:start="111:87" pos:end="111:87">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="111:91" pos:end="111:117"><expr pos:start="111:91" pos:end="111:117"><operator pos:start="111:91" pos:end="111:91">(</operator><literal type="number" pos:start="111:92" pos:end="111:93">16</literal><operator pos:start="111:94" pos:end="111:94">*</operator><name pos:start="111:95" pos:end="111:95">y</name><operator pos:start="111:96" pos:end="111:96">)</operator> <operator pos:start="111:98" pos:end="111:99">&gt;&gt;</operator> <name pos:start="111:101" pos:end="111:117"><name pos:start="111:101" pos:end="111:101">s</name><operator pos:start="111:102" pos:end="111:103">-&gt;</operator><name pos:start="111:104" pos:end="111:117">chroma_y_shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <comment type="block" pos:start="115:17" pos:end="115:55">/* transform if this block was coded */</comment>

                <if_stmt pos:start="117:17" pos:end="305:17"><if pos:start="117:17" pos:end="289:17">if <condition pos:start="117:20" pos:end="117:67">(<expr pos:start="117:21" pos:end="117:66"><name pos:start="117:21" pos:end="117:39"><name pos:start="117:21" pos:end="117:21">s</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:36">all_fragments</name><index pos:start="117:37" pos:end="117:39">[<expr pos:start="117:38" pos:end="117:38"><name pos:start="117:38" pos:end="117:38">i</name></expr>]</index></name><operator pos:start="117:40" pos:end="117:40">.</operator><name pos:start="117:41" pos:end="117:53">coding_method</name> <operator pos:start="117:55" pos:end="117:56">!=</operator> <name pos:start="117:58" pos:end="117:66">MODE_COPY</name></expr>)</condition> <block pos:start="117:69" pos:end="289:17">{<block_content pos:start="119:21" pos:end="287:21">

                    <if_stmt pos:start="119:21" pos:end="127:50"><if pos:start="119:21" pos:end="123:52">if <condition pos:start="119:24" pos:end="121:78">(<expr pos:start="119:25" pos:end="121:77"><operator pos:start="119:25" pos:end="119:25">(</operator><name pos:start="119:26" pos:end="119:44"><name pos:start="119:26" pos:end="119:26">s</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:41">all_fragments</name><index pos:start="119:42" pos:end="119:44">[<expr pos:start="119:43" pos:end="119:43"><name pos:start="119:43" pos:end="119:43">i</name></expr>]</index></name><operator pos:start="119:45" pos:end="119:45">.</operator><name pos:start="119:46" pos:end="119:58">coding_method</name> <operator pos:start="119:60" pos:end="119:61">==</operator> <name pos:start="119:63" pos:end="119:79">MODE_USING_GOLDEN</name><operator pos:start="119:80" pos:end="119:80">)</operator> <operator pos:start="119:82" pos:end="119:83">||</operator>

                        <operator pos:start="121:25" pos:end="121:25">(</operator><name pos:start="121:26" pos:end="121:44"><name pos:start="121:26" pos:end="121:26">s</name><operator pos:start="121:27" pos:end="121:28">-&gt;</operator><name pos:start="121:29" pos:end="121:41">all_fragments</name><index pos:start="121:42" pos:end="121:44">[<expr pos:start="121:43" pos:end="121:43"><name pos:start="121:43" pos:end="121:43">i</name></expr>]</index></name><operator pos:start="121:45" pos:end="121:45">.</operator><name pos:start="121:46" pos:end="121:58">coding_method</name> <operator pos:start="121:60" pos:end="121:61">==</operator> <name pos:start="121:63" pos:end="121:76">MODE_GOLDEN_MV</name><operator pos:start="121:77" pos:end="121:77">)</operator></expr>)</condition><block type="pseudo" pos:start="123:25" pos:end="123:52"><block_content pos:start="123:25" pos:end="123:52">

                        <expr_stmt pos:start="123:25" pos:end="123:52"><expr pos:start="123:25" pos:end="123:51"><name pos:start="123:25" pos:end="123:37">motion_source</name><operator pos:start="123:38" pos:end="123:38">=</operator> <name pos:start="123:40" pos:end="123:51">golden_plane</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="125:21" pos:end="127:50">else<block type="pseudo" pos:start="127:25" pos:end="127:50"><block_content pos:start="127:25" pos:end="127:50">

                        <expr_stmt pos:start="127:25" pos:end="127:50"><expr pos:start="127:25" pos:end="127:49"><name pos:start="127:25" pos:end="127:37">motion_source</name><operator pos:start="127:38" pos:end="127:38">=</operator> <name pos:start="127:40" pos:end="127:49">last_plane</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <expr_stmt pos:start="131:21" pos:end="131:49"><expr pos:start="131:21" pos:end="131:48"><name pos:start="131:21" pos:end="131:33">motion_source</name> <operator pos:start="131:35" pos:end="131:36">+=</operator> <name pos:start="131:38" pos:end="131:48">first_pixel</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="133:21" pos:end="133:45"><expr pos:start="133:21" pos:end="133:44"><name pos:start="133:21" pos:end="133:40">motion_halfpel_index</name> <operator pos:start="133:42" pos:end="133:42">=</operator> <literal type="number" pos:start="133:44" pos:end="133:44">0</literal></expr>;</expr_stmt>



                    <comment type="block" pos:start="137:21" pos:end="139:54">/* sort out the motion vector if this fragment is coded

                     * using a motion vector method */</comment>

                    <if_stmt pos:start="141:21" pos:end="185:21"><if pos:start="141:21" pos:end="185:21">if <condition pos:start="141:24" pos:end="143:81">(<expr pos:start="141:25" pos:end="143:80"><operator pos:start="141:25" pos:end="141:25">(</operator><name pos:start="141:26" pos:end="141:44"><name pos:start="141:26" pos:end="141:26">s</name><operator pos:start="141:27" pos:end="141:28">-&gt;</operator><name pos:start="141:29" pos:end="141:41">all_fragments</name><index pos:start="141:42" pos:end="141:44">[<expr pos:start="141:43" pos:end="141:43"><name pos:start="141:43" pos:end="141:43">i</name></expr>]</index></name><operator pos:start="141:45" pos:end="141:45">.</operator><name pos:start="141:46" pos:end="141:58">coding_method</name> <operator pos:start="141:60" pos:end="141:60">&gt;</operator> <name pos:start="141:62" pos:end="141:71">MODE_INTRA</name><operator pos:start="141:72" pos:end="141:72">)</operator> <operator pos:start="141:74" pos:end="141:75">&amp;&amp;</operator>

                        <operator pos:start="143:25" pos:end="143:25">(</operator><name pos:start="143:26" pos:end="143:44"><name pos:start="143:26" pos:end="143:26">s</name><operator pos:start="143:27" pos:end="143:28">-&gt;</operator><name pos:start="143:29" pos:end="143:41">all_fragments</name><index pos:start="143:42" pos:end="143:44">[<expr pos:start="143:43" pos:end="143:43"><name pos:start="143:43" pos:end="143:43">i</name></expr>]</index></name><operator pos:start="143:45" pos:end="143:45">.</operator><name pos:start="143:46" pos:end="143:58">coding_method</name> <operator pos:start="143:60" pos:end="143:61">!=</operator> <name pos:start="143:63" pos:end="143:79">MODE_USING_GOLDEN</name><operator pos:start="143:80" pos:end="143:80">)</operator></expr>)</condition> <block pos:start="143:83" pos:end="185:21">{<block_content pos:start="145:25" pos:end="183:25">

                        <decl_stmt pos:start="145:25" pos:end="145:41"><decl pos:start="145:25" pos:end="145:33"><type pos:start="145:25" pos:end="145:27"><name pos:start="145:25" pos:end="145:27">int</name></type> <name pos:start="145:29" pos:end="145:33">src_x</name></decl>, <decl pos:start="145:36" pos:end="145:40"><type ref="prev" pos:start="145:25" pos:end="145:27"/><name pos:start="145:36" pos:end="145:40">src_y</name></decl>;</decl_stmt>

                        <expr_stmt pos:start="147:25" pos:end="147:59"><expr pos:start="147:25" pos:end="147:58"><name pos:start="147:25" pos:end="147:32">motion_x</name> <operator pos:start="147:34" pos:end="147:34">=</operator> <name pos:start="147:36" pos:end="147:58"><name pos:start="147:36" pos:end="147:45">motion_val</name><index pos:start="147:46" pos:end="147:55">[<expr pos:start="147:47" pos:end="147:54"><name pos:start="147:47" pos:end="147:54">fragment</name></expr>]</index><index pos:start="147:56" pos:end="147:58">[<expr pos:start="147:57" pos:end="147:57"><literal type="number" pos:start="147:57" pos:end="147:57">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="149:25" pos:end="149:59"><expr pos:start="149:25" pos:end="149:58"><name pos:start="149:25" pos:end="149:32">motion_y</name> <operator pos:start="149:34" pos:end="149:34">=</operator> <name pos:start="149:36" pos:end="149:58"><name pos:start="149:36" pos:end="149:45">motion_val</name><index pos:start="149:46" pos:end="149:55">[<expr pos:start="149:47" pos:end="149:54"><name pos:start="149:47" pos:end="149:54">fragment</name></expr>]</index><index pos:start="149:56" pos:end="149:58">[<expr pos:start="149:57" pos:end="149:57"><literal type="number" pos:start="149:57" pos:end="149:57">1</literal></expr>]</index></name></expr>;</expr_stmt>



                        <expr_stmt pos:start="153:25" pos:end="153:51"><expr pos:start="153:25" pos:end="153:50"><name pos:start="153:25" pos:end="153:29">src_x</name><operator pos:start="153:30" pos:end="153:30">=</operator> <operator pos:start="153:32" pos:end="153:32">(</operator><name pos:start="153:33" pos:end="153:40">motion_x</name><operator pos:start="153:41" pos:end="153:42">&gt;&gt;</operator><literal type="number" pos:start="153:43" pos:end="153:43">1</literal><operator pos:start="153:44" pos:end="153:44">)</operator> <operator pos:start="153:46" pos:end="153:46">+</operator> <literal type="number" pos:start="153:48" pos:end="153:48">8</literal><operator pos:start="153:49" pos:end="153:49">*</operator><name pos:start="153:50" pos:end="153:50">x</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="155:25" pos:end="155:51"><expr pos:start="155:25" pos:end="155:50"><name pos:start="155:25" pos:end="155:29">src_y</name><operator pos:start="155:30" pos:end="155:30">=</operator> <operator pos:start="155:32" pos:end="155:32">(</operator><name pos:start="155:33" pos:end="155:40">motion_y</name><operator pos:start="155:41" pos:end="155:42">&gt;&gt;</operator><literal type="number" pos:start="155:43" pos:end="155:43">1</literal><operator pos:start="155:44" pos:end="155:44">)</operator> <operator pos:start="155:46" pos:end="155:46">+</operator> <literal type="number" pos:start="155:48" pos:end="155:48">8</literal><operator pos:start="155:49" pos:end="155:49">*</operator><name pos:start="155:50" pos:end="155:50">y</name></expr>;</expr_stmt>



                        <expr_stmt pos:start="159:25" pos:end="159:63"><expr pos:start="159:25" pos:end="159:62"><name pos:start="159:25" pos:end="159:44">motion_halfpel_index</name> <operator pos:start="159:46" pos:end="159:46">=</operator> <name pos:start="159:48" pos:end="159:55">motion_x</name> <operator pos:start="159:57" pos:end="159:57">&amp;</operator> <literal type="number" pos:start="159:59" pos:end="159:62">0x01</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="161:25" pos:end="161:57"><expr pos:start="161:25" pos:end="161:56"><name pos:start="161:25" pos:end="161:37">motion_source</name> <operator pos:start="161:39" pos:end="161:40">+=</operator> <operator pos:start="161:42" pos:end="161:42">(</operator><name pos:start="161:43" pos:end="161:50">motion_x</name> <operator pos:start="161:52" pos:end="161:53">&gt;&gt;</operator> <literal type="number" pos:start="161:55" pos:end="161:55">1</literal><operator pos:start="161:56" pos:end="161:56">)</operator></expr>;</expr_stmt>



                        <expr_stmt pos:start="165:25" pos:end="165:71"><expr pos:start="165:25" pos:end="165:70"><name pos:start="165:25" pos:end="165:44">motion_halfpel_index</name> <operator pos:start="165:46" pos:end="165:47">|=</operator> <operator pos:start="165:49" pos:end="165:49">(</operator><name pos:start="165:50" pos:end="165:57">motion_y</name> <operator pos:start="165:59" pos:end="165:59">&amp;</operator> <literal type="number" pos:start="165:61" pos:end="165:64">0x01</literal><operator pos:start="165:65" pos:end="165:65">)</operator> <operator pos:start="165:67" pos:end="165:68">&lt;&lt;</operator> <literal type="number" pos:start="165:70" pos:end="165:70">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="167:25" pos:end="167:68"><expr pos:start="167:25" pos:end="167:67"><name pos:start="167:25" pos:end="167:37">motion_source</name> <operator pos:start="167:39" pos:end="167:40">+=</operator> <operator pos:start="167:42" pos:end="167:42">(</operator><operator pos:start="167:43" pos:end="167:43">(</operator><name pos:start="167:44" pos:end="167:51">motion_y</name> <operator pos:start="167:53" pos:end="167:54">&gt;&gt;</operator> <literal type="number" pos:start="167:56" pos:end="167:56">1</literal><operator pos:start="167:57" pos:end="167:57">)</operator> <operator pos:start="167:59" pos:end="167:59">*</operator> <name pos:start="167:61" pos:end="167:66">stride</name><operator pos:start="167:67" pos:end="167:67">)</operator></expr>;</expr_stmt>



                        <if_stmt pos:start="171:25" pos:end="183:25"><if pos:start="171:25" pos:end="183:25">if<condition pos:start="171:27" pos:end="171:103">(<expr pos:start="171:28" pos:end="171:102"><name pos:start="171:28" pos:end="171:32">src_x</name><operator pos:start="171:33" pos:end="171:33">&lt;</operator><literal type="number" pos:start="171:34" pos:end="171:34">0</literal> <operator pos:start="171:36" pos:end="171:37">||</operator> <name pos:start="171:39" pos:end="171:43">src_y</name><operator pos:start="171:44" pos:end="171:44">&lt;</operator><literal type="number" pos:start="171:45" pos:end="171:45">0</literal> <operator pos:start="171:47" pos:end="171:48">||</operator> <name pos:start="171:50" pos:end="171:54">src_x</name> <operator pos:start="171:56" pos:end="171:56">+</operator> <literal type="number" pos:start="171:58" pos:end="171:58">9</literal> <operator pos:start="171:60" pos:end="171:61">&gt;=</operator> <name pos:start="171:63" pos:end="171:73">plane_width</name> <operator pos:start="171:75" pos:end="171:76">||</operator> <name pos:start="171:78" pos:end="171:82">src_y</name> <operator pos:start="171:84" pos:end="171:84">+</operator> <literal type="number" pos:start="171:86" pos:end="171:86">9</literal> <operator pos:start="171:88" pos:end="171:89">&gt;=</operator> <name pos:start="171:91" pos:end="171:102">plane_height</name></expr>)</condition><block pos:start="171:104" pos:end="183:25">{<block_content pos:start="173:29" pos:end="181:48">

                            <decl_stmt pos:start="173:29" pos:end="173:62"><decl pos:start="173:29" pos:end="173:61"><type pos:start="173:29" pos:end="173:37"><name pos:start="173:29" pos:end="173:35">uint8_t</name> <modifier pos:start="173:37" pos:end="173:37">*</modifier></type><name pos:start="173:38" pos:end="173:41">temp</name><init pos:start="173:42" pos:end="173:61">= <expr pos:start="173:44" pos:end="173:61"><name pos:start="173:44" pos:end="173:61"><name pos:start="173:44" pos:end="173:44">s</name><operator pos:start="173:45" pos:end="173:46">-&gt;</operator><name pos:start="173:47" pos:end="173:61">edge_emu_buffer</name></name></expr></init></decl>;</decl_stmt>

                            <if_stmt pos:start="175:29" pos:end="175:58"><if pos:start="175:29" pos:end="175:58">if<condition pos:start="175:31" pos:end="175:40">(<expr pos:start="175:32" pos:end="175:39"><name pos:start="175:32" pos:end="175:37">stride</name><operator pos:start="175:38" pos:end="175:38">&lt;</operator><literal type="number" pos:start="175:39" pos:end="175:39">0</literal></expr>)</condition><block type="pseudo" pos:start="175:42" pos:end="175:58"><block_content pos:start="175:42" pos:end="175:58"> <expr_stmt pos:start="175:42" pos:end="175:58"><expr pos:start="175:42" pos:end="175:57"><name pos:start="175:42" pos:end="175:45">temp</name> <operator pos:start="175:47" pos:end="175:48">-=</operator> <literal type="number" pos:start="175:50" pos:end="175:50">8</literal><operator pos:start="175:51" pos:end="175:51">*</operator><name pos:start="175:52" pos:end="175:57">stride</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                            <expr_stmt pos:start="179:29" pos:end="179:128"><expr pos:start="179:29" pos:end="179:127"><call pos:start="179:29" pos:end="179:127"><name pos:start="179:29" pos:end="179:51"><name pos:start="179:29" pos:end="179:29">s</name><operator pos:start="179:30" pos:end="179:31">-&gt;</operator><name pos:start="179:32" pos:end="179:34">dsp</name><operator pos:start="179:35" pos:end="179:35">.</operator><name pos:start="179:36" pos:end="179:51">emulated_edge_mc</name></name><argument_list pos:start="179:52" pos:end="179:127">(<argument pos:start="179:53" pos:end="179:56"><expr pos:start="179:53" pos:end="179:56"><name pos:start="179:53" pos:end="179:56">temp</name></expr></argument>, <argument pos:start="179:59" pos:end="179:71"><expr pos:start="179:59" pos:end="179:71"><name pos:start="179:59" pos:end="179:71">motion_source</name></expr></argument>, <argument pos:start="179:74" pos:end="179:79"><expr pos:start="179:74" pos:end="179:79"><name pos:start="179:74" pos:end="179:79">stride</name></expr></argument>, <argument pos:start="179:82" pos:end="179:82"><expr pos:start="179:82" pos:end="179:82"><literal type="number" pos:start="179:82" pos:end="179:82">9</literal></expr></argument>, <argument pos:start="179:85" pos:end="179:85"><expr pos:start="179:85" pos:end="179:85"><literal type="number" pos:start="179:85" pos:end="179:85">9</literal></expr></argument>, <argument pos:start="179:88" pos:end="179:92"><expr pos:start="179:88" pos:end="179:92"><name pos:start="179:88" pos:end="179:92">src_x</name></expr></argument>, <argument pos:start="179:95" pos:end="179:99"><expr pos:start="179:95" pos:end="179:99"><name pos:start="179:95" pos:end="179:99">src_y</name></expr></argument>, <argument pos:start="179:102" pos:end="179:112"><expr pos:start="179:102" pos:end="179:112"><name pos:start="179:102" pos:end="179:112">plane_width</name></expr></argument>, <argument pos:start="179:115" pos:end="179:126"><expr pos:start="179:115" pos:end="179:126"><name pos:start="179:115" pos:end="179:126">plane_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="181:29" pos:end="181:48"><expr pos:start="181:29" pos:end="181:47"><name pos:start="181:29" pos:end="181:41">motion_source</name><operator pos:start="181:42" pos:end="181:42">=</operator> <name pos:start="181:44" pos:end="181:47">temp</name></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>





                    <comment type="block" pos:start="191:21" pos:end="193:54">/* first, take care of copying a block from either the

                     * previous or the golden frame */</comment>

                    <if_stmt pos:start="195:21" pos:end="229:21"><if pos:start="195:21" pos:end="229:21">if <condition pos:start="195:24" pos:end="195:72">(<expr pos:start="195:25" pos:end="195:71"><name pos:start="195:25" pos:end="195:43"><name pos:start="195:25" pos:end="195:25">s</name><operator pos:start="195:26" pos:end="195:27">-&gt;</operator><name pos:start="195:28" pos:end="195:40">all_fragments</name><index pos:start="195:41" pos:end="195:43">[<expr pos:start="195:42" pos:end="195:42"><name pos:start="195:42" pos:end="195:42">i</name></expr>]</index></name><operator pos:start="195:44" pos:end="195:44">.</operator><name pos:start="195:45" pos:end="195:57">coding_method</name> <operator pos:start="195:59" pos:end="195:60">!=</operator> <name pos:start="195:62" pos:end="195:71">MODE_INTRA</name></expr>)</condition> <block pos:start="195:74" pos:end="229:21">{<block_content pos:start="205:25" pos:end="227:25">

                        <comment type="block" pos:start="197:25" pos:end="203:70">/* Note, it is possible to implement all MC cases with

                           put_no_rnd_pixels_l2 which would look more like the

                           VP3 source but this would be slower as

                           put_no_rnd_pixels_tab is better optimzed */</comment>

                        <if_stmt pos:start="205:25" pos:end="227:25"><if pos:start="205:25" pos:end="213:25">if<condition pos:start="205:27" pos:end="205:53">(<expr pos:start="205:28" pos:end="205:52"><name pos:start="205:28" pos:end="205:47">motion_halfpel_index</name> <operator pos:start="205:49" pos:end="205:50">!=</operator> <literal type="number" pos:start="205:52" pos:end="205:52">3</literal></expr>)</condition><block pos:start="205:54" pos:end="213:25">{<block_content pos:start="207:29" pos:end="211:58">

                            <expr_stmt pos:start="207:29" pos:end="211:58"><expr pos:start="207:29" pos:end="211:57"><name pos:start="207:29" pos:end="207:81"><name pos:start="207:29" pos:end="207:29">s</name><operator pos:start="207:30" pos:end="207:31">-&gt;</operator><name pos:start="207:32" pos:end="207:34">dsp</name><operator pos:start="207:35" pos:end="207:35">.</operator><name pos:start="207:36" pos:end="207:56">put_no_rnd_pixels_tab</name><index pos:start="207:57" pos:end="207:59">[<expr pos:start="207:58" pos:end="207:58"><literal type="number" pos:start="207:58" pos:end="207:58">1</literal></expr>]</index><index pos:start="207:60" pos:end="207:81">[<expr pos:start="207:61" pos:end="207:80"><name pos:start="207:61" pos:end="207:80">motion_halfpel_index</name></expr>]</index></name><operator pos:start="207:82" pos:end="207:82">(</operator>

                                <name pos:start="209:33" pos:end="209:44">output_plane</name> <operator pos:start="209:46" pos:end="209:46">+</operator> <name pos:start="209:48" pos:end="209:58">first_pixel</name><operator pos:start="209:59" pos:end="209:59">,</operator>

                                <name pos:start="211:33" pos:end="211:45">motion_source</name><operator pos:start="211:46" pos:end="211:46">,</operator> <name pos:start="211:48" pos:end="211:53">stride</name><operator pos:start="211:54" pos:end="211:54">,</operator> <literal type="number" pos:start="211:56" pos:end="211:56">8</literal><operator pos:start="211:57" pos:end="211:57">)</operator></expr>;</expr_stmt>

                        </block_content>}</block></if><else pos:start="213:26" pos:end="227:25">else<block pos:start="213:30" pos:end="227:25">{<block_content pos:start="215:29" pos:end="225:43">

                            <decl_stmt pos:start="215:29" pos:end="215:61"><decl pos:start="215:29" pos:end="215:60"><type pos:start="215:29" pos:end="215:31"><name pos:start="215:29" pos:end="215:31">int</name></type> <name pos:start="215:33" pos:end="215:33">d</name><init pos:start="215:34" pos:end="215:60">= <expr pos:start="215:36" pos:end="215:60"><operator pos:start="215:36" pos:end="215:36">(</operator><name pos:start="215:37" pos:end="215:44">motion_x</name> <operator pos:start="215:46" pos:end="215:46">^</operator> <name pos:start="215:48" pos:end="215:55">motion_y</name><operator pos:start="215:56" pos:end="215:56">)</operator><operator pos:start="215:57" pos:end="215:58">&gt;&gt;</operator><literal type="number" pos:start="215:59" pos:end="215:60">31</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="215:63" pos:end="215:118">// d is 0 if motion_x and _y have the same sign, else -1</comment>

                            <expr_stmt pos:start="217:29" pos:end="225:43"><expr pos:start="217:29" pos:end="225:42"><name pos:start="217:29" pos:end="217:58"><name pos:start="217:29" pos:end="217:29">s</name><operator pos:start="217:30" pos:end="217:31">-&gt;</operator><name pos:start="217:32" pos:end="217:34">dsp</name><operator pos:start="217:35" pos:end="217:35">.</operator><name pos:start="217:36" pos:end="217:55">put_no_rnd_pixels_l2</name><index pos:start="217:56" pos:end="217:58">[<expr pos:start="217:57" pos:end="217:57"><literal type="number" pos:start="217:57" pos:end="217:57">1</literal></expr>]</index></name><operator pos:start="217:59" pos:end="217:59">(</operator>

                                <name pos:start="219:33" pos:end="219:44">output_plane</name> <operator pos:start="219:46" pos:end="219:46">+</operator> <name pos:start="219:48" pos:end="219:58">first_pixel</name><operator pos:start="219:59" pos:end="219:59">,</operator>

                                <name pos:start="221:33" pos:end="221:45">motion_source</name> <operator pos:start="221:47" pos:end="221:47">-</operator> <name pos:start="221:49" pos:end="221:49">d</name><operator pos:start="221:50" pos:end="221:50">,</operator>

                                <name pos:start="223:33" pos:end="223:45">motion_source</name> <operator pos:start="223:47" pos:end="223:47">+</operator> <name pos:start="223:49" pos:end="223:54">stride</name> <operator pos:start="223:56" pos:end="223:56">+</operator> <literal type="number" pos:start="223:58" pos:end="223:60">1</literal> <operator pos:start="223:60" pos:end="223:60">+</operator> <name pos:start="223:62" pos:end="223:62">d</name><operator pos:start="223:63" pos:end="223:63">,</operator>

                                <name pos:start="225:33" pos:end="225:38">stride</name><operator pos:start="225:39" pos:end="225:39">,</operator> <literal type="number" pos:start="225:41" pos:end="225:41">8</literal><operator pos:start="225:42" pos:end="225:42">)</operator></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if></if_stmt>



                        <expr_stmt pos:start="233:25" pos:end="233:50"><expr pos:start="233:25" pos:end="233:49"><call pos:start="233:25" pos:end="233:49"><name pos:start="233:25" pos:end="233:42"><name pos:start="233:25" pos:end="233:25">s</name><operator pos:start="233:26" pos:end="233:27">-&gt;</operator><name pos:start="233:28" pos:end="233:30">dsp</name><operator pos:start="233:31" pos:end="233:31">.</operator><name pos:start="233:32" pos:end="233:42">clear_block</name></name><argument_list pos:start="233:43" pos:end="233:49">(<argument pos:start="233:44" pos:end="233:48"><expr pos:start="233:44" pos:end="233:48"><name pos:start="233:44" pos:end="233:48">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <comment type="block" pos:start="237:21" pos:end="237:71">/* invert DCT and place (or add) in final output */</comment>



                    <if_stmt pos:start="241:21" pos:end="287:21"><if pos:start="241:21" pos:end="263:21">if <condition pos:start="241:24" pos:end="241:72">(<expr pos:start="241:25" pos:end="241:71"><name pos:start="241:25" pos:end="241:43"><name pos:start="241:25" pos:end="241:25">s</name><operator pos:start="241:26" pos:end="241:27">-&gt;</operator><name pos:start="241:28" pos:end="241:40">all_fragments</name><index pos:start="241:41" pos:end="241:43">[<expr pos:start="241:42" pos:end="241:42"><name pos:start="241:42" pos:end="241:42">i</name></expr>]</index></name><operator pos:start="241:44" pos:end="241:44">.</operator><name pos:start="241:45" pos:end="241:57">coding_method</name> <operator pos:start="241:59" pos:end="241:60">==</operator> <name pos:start="241:62" pos:end="241:71">MODE_INTRA</name></expr>)</condition> <block pos:start="241:74" pos:end="263:21">{<block_content pos:start="243:25" pos:end="261:35">

                        <decl_stmt pos:start="243:25" pos:end="243:34"><decl pos:start="243:25" pos:end="243:33"><type pos:start="243:25" pos:end="243:27"><name pos:start="243:25" pos:end="243:27">int</name></type> <name pos:start="243:29" pos:end="243:33">index</name></decl>;</decl_stmt>

                        <expr_stmt pos:start="245:25" pos:end="245:86"><expr pos:start="245:25" pos:end="245:85"><name pos:start="245:25" pos:end="245:29">index</name> <operator pos:start="245:31" pos:end="245:31">=</operator> <call pos:start="245:33" pos:end="245:85"><name pos:start="245:33" pos:end="245:43">vp3_dequant</name><argument_list pos:start="245:44" pos:end="245:85">(<argument pos:start="245:45" pos:end="245:45"><expr pos:start="245:45" pos:end="245:45"><name pos:start="245:45" pos:end="245:45">s</name></expr></argument>, <argument pos:start="245:48" pos:end="245:67"><expr pos:start="245:48" pos:end="245:67"><name pos:start="245:48" pos:end="245:63"><name pos:start="245:48" pos:end="245:48">s</name><operator pos:start="245:49" pos:end="245:50">-&gt;</operator><name pos:start="245:51" pos:end="245:63">all_fragments</name></name> <operator pos:start="245:65" pos:end="245:65">+</operator> <name pos:start="245:67" pos:end="245:67">i</name></expr></argument>, <argument pos:start="245:70" pos:end="245:74"><expr pos:start="245:70" pos:end="245:74"><name pos:start="245:70" pos:end="245:74">plane</name></expr></argument>, <argument pos:start="245:77" pos:end="245:77"><expr pos:start="245:77" pos:end="245:77"><literal type="number" pos:start="245:77" pos:end="245:77">0</literal></expr></argument>, <argument pos:start="245:80" pos:end="245:84"><expr pos:start="245:80" pos:end="245:84"><name pos:start="245:80" pos:end="245:84">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="247:25" pos:end="249:37"><if pos:start="247:25" pos:end="249:37">if <condition pos:start="247:28" pos:end="247:39">(<expr pos:start="247:29" pos:end="247:38"><name pos:start="247:29" pos:end="247:33">index</name> <operator pos:start="247:35" pos:end="247:35">&gt;</operator> <literal type="number" pos:start="247:37" pos:end="247:38">63</literal></expr>)</condition><block type="pseudo" pos:start="249:29" pos:end="249:37"><block_content pos:start="249:29" pos:end="249:37">

                            <continue pos:start="249:29" pos:end="249:37">continue;</continue></block_content></block></if></if_stmt>

                        <if_stmt pos:start="251:25" pos:end="253:47"><if pos:start="251:25" pos:end="253:47">if<condition pos:start="251:27" pos:end="251:60">(<expr pos:start="251:28" pos:end="251:59"><name pos:start="251:28" pos:end="251:46"><name pos:start="251:28" pos:end="251:28">s</name><operator pos:start="251:29" pos:end="251:30">-&gt;</operator><name pos:start="251:31" pos:end="251:35">avctx</name><operator pos:start="251:36" pos:end="251:37">-&gt;</operator><name pos:start="251:38" pos:end="251:46">idct_algo</name></name><operator pos:start="251:47" pos:end="251:48">!=</operator><name pos:start="251:49" pos:end="251:59">FF_IDCT_VP3</name></expr>)</condition><block type="pseudo" pos:start="253:29" pos:end="253:47"><block_content pos:start="253:29" pos:end="253:47">

                            <expr_stmt pos:start="253:29" pos:end="253:47"><expr pos:start="253:29" pos:end="253:46"><name pos:start="253:29" pos:end="253:36"><name pos:start="253:29" pos:end="253:33">block</name><index pos:start="253:34" pos:end="253:36">[<expr pos:start="253:35" pos:end="253:35"><literal type="number" pos:start="253:35" pos:end="253:35">0</literal></expr>]</index></name> <operator pos:start="253:38" pos:end="253:39">+=</operator> <literal type="number" pos:start="253:41" pos:end="253:43">128</literal><operator pos:start="253:44" pos:end="253:45">&lt;&lt;</operator><literal type="number" pos:start="253:46" pos:end="253:46">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="255:25" pos:end="261:35"><expr pos:start="255:25" pos:end="261:34"><call pos:start="255:25" pos:end="261:34"><name pos:start="255:25" pos:end="255:39"><name pos:start="255:25" pos:end="255:25">s</name><operator pos:start="255:26" pos:end="255:27">-&gt;</operator><name pos:start="255:28" pos:end="255:30">dsp</name><operator pos:start="255:31" pos:end="255:31">.</operator><name pos:start="255:32" pos:end="255:39">idct_put</name></name><argument_list pos:start="255:40" pos:end="261:34">(

                            <argument pos:start="257:29" pos:end="257:54"><expr pos:start="257:29" pos:end="257:54"><name pos:start="257:29" pos:end="257:40">output_plane</name> <operator pos:start="257:42" pos:end="257:42">+</operator> <name pos:start="257:44" pos:end="257:54">first_pixel</name></expr></argument>,

                            <argument pos:start="259:29" pos:end="259:34"><expr pos:start="259:29" pos:end="259:34"><name pos:start="259:29" pos:end="259:34">stride</name></expr></argument>,

                            <argument pos:start="261:29" pos:end="261:33"><expr pos:start="261:29" pos:end="261:33"><name pos:start="261:29" pos:end="261:33">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="263:23" pos:end="287:21">else <block pos:start="263:28" pos:end="287:21">{<block_content pos:start="265:25" pos:end="285:25">

                        <decl_stmt pos:start="265:25" pos:end="265:90"><decl pos:start="265:25" pos:end="265:89"><type pos:start="265:25" pos:end="265:27"><name pos:start="265:25" pos:end="265:27">int</name></type> <name pos:start="265:29" pos:end="265:33">index</name> <init pos:start="265:35" pos:end="265:89">= <expr pos:start="265:37" pos:end="265:89"><call pos:start="265:37" pos:end="265:89"><name pos:start="265:37" pos:end="265:47">vp3_dequant</name><argument_list pos:start="265:48" pos:end="265:89">(<argument pos:start="265:49" pos:end="265:49"><expr pos:start="265:49" pos:end="265:49"><name pos:start="265:49" pos:end="265:49">s</name></expr></argument>, <argument pos:start="265:52" pos:end="265:71"><expr pos:start="265:52" pos:end="265:71"><name pos:start="265:52" pos:end="265:67"><name pos:start="265:52" pos:end="265:52">s</name><operator pos:start="265:53" pos:end="265:54">-&gt;</operator><name pos:start="265:55" pos:end="265:67">all_fragments</name></name> <operator pos:start="265:69" pos:end="265:69">+</operator> <name pos:start="265:71" pos:end="265:71">i</name></expr></argument>, <argument pos:start="265:74" pos:end="265:78"><expr pos:start="265:74" pos:end="265:78"><name pos:start="265:74" pos:end="265:78">plane</name></expr></argument>, <argument pos:start="265:81" pos:end="265:81"><expr pos:start="265:81" pos:end="265:81"><literal type="number" pos:start="265:81" pos:end="265:81">1</literal></expr></argument>, <argument pos:start="265:84" pos:end="265:88"><expr pos:start="265:84" pos:end="265:88"><name pos:start="265:84" pos:end="265:88">block</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="267:25" pos:end="269:37"><if pos:start="267:25" pos:end="269:37">if <condition pos:start="267:28" pos:end="267:39">(<expr pos:start="267:29" pos:end="267:38"><name pos:start="267:29" pos:end="267:33">index</name> <operator pos:start="267:35" pos:end="267:35">&gt;</operator> <literal type="number" pos:start="267:37" pos:end="267:38">63</literal></expr>)</condition><block type="pseudo" pos:start="269:29" pos:end="269:37"><block_content pos:start="269:29" pos:end="269:37">

                            <continue pos:start="269:29" pos:end="269:37">continue;</continue></block_content></block></if></if_stmt>

                        <if_stmt pos:start="271:25" pos:end="285:25"><if pos:start="271:25" pos:end="281:25">if <condition pos:start="271:28" pos:end="271:38">(<expr pos:start="271:29" pos:end="271:37"><name pos:start="271:29" pos:end="271:33">index</name> <operator pos:start="271:35" pos:end="271:35">&gt;</operator> <literal type="number" pos:start="271:37" pos:end="271:37">0</literal></expr>)</condition> <block pos:start="271:40" pos:end="281:25">{<block_content pos:start="273:25" pos:end="279:35">

                        <expr_stmt pos:start="273:25" pos:end="279:35"><expr pos:start="273:25" pos:end="279:34"><call pos:start="273:25" pos:end="279:34"><name pos:start="273:25" pos:end="273:39"><name pos:start="273:25" pos:end="273:25">s</name><operator pos:start="273:26" pos:end="273:27">-&gt;</operator><name pos:start="273:28" pos:end="273:30">dsp</name><operator pos:start="273:31" pos:end="273:31">.</operator><name pos:start="273:32" pos:end="273:39">idct_add</name></name><argument_list pos:start="273:40" pos:end="279:34">(

                            <argument pos:start="275:29" pos:end="275:54"><expr pos:start="275:29" pos:end="275:54"><name pos:start="275:29" pos:end="275:40">output_plane</name> <operator pos:start="275:42" pos:end="275:42">+</operator> <name pos:start="275:44" pos:end="275:54">first_pixel</name></expr></argument>,

                            <argument pos:start="277:29" pos:end="277:34"><expr pos:start="277:29" pos:end="277:34"><name pos:start="277:29" pos:end="277:34">stride</name></expr></argument>,

                            <argument pos:start="279:29" pos:end="279:33"><expr pos:start="279:29" pos:end="279:33"><name pos:start="279:29" pos:end="279:33">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="281:27" pos:end="285:25">else <block pos:start="281:32" pos:end="285:25">{<block_content pos:start="283:29" pos:end="283:94">

                            <expr_stmt pos:start="283:29" pos:end="283:94"><expr pos:start="283:29" pos:end="283:93"><call pos:start="283:29" pos:end="283:93"><name pos:start="283:29" pos:end="283:50"><name pos:start="283:29" pos:end="283:29">s</name><operator pos:start="283:30" pos:end="283:31">-&gt;</operator><name pos:start="283:32" pos:end="283:34">dsp</name><operator pos:start="283:35" pos:end="283:35">.</operator><name pos:start="283:36" pos:end="283:50">vp3_idct_dc_add</name></name><argument_list pos:start="283:51" pos:end="283:93">(<argument pos:start="283:52" pos:end="283:77"><expr pos:start="283:52" pos:end="283:77"><name pos:start="283:52" pos:end="283:63">output_plane</name> <operator pos:start="283:65" pos:end="283:65">+</operator> <name pos:start="283:67" pos:end="283:77">first_pixel</name></expr></argument>, <argument pos:start="283:80" pos:end="283:85"><expr pos:start="283:80" pos:end="283:85"><name pos:start="283:80" pos:end="283:85">stride</name></expr></argument>, <argument pos:start="283:88" pos:end="283:92"><expr pos:start="283:88" pos:end="283:92"><name pos:start="283:88" pos:end="283:92">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="289:19" pos:end="305:17">else <block pos:start="289:24" pos:end="305:17">{<block_content pos:start="295:21" pos:end="301:35">



                    <comment type="block" pos:start="293:21" pos:end="293:63">/* copy directly from the previous frame */</comment>

                    <expr_stmt pos:start="295:21" pos:end="301:35"><expr pos:start="295:21" pos:end="301:34"><name pos:start="295:21" pos:end="295:47"><name pos:start="295:21" pos:end="295:21">s</name><operator pos:start="295:22" pos:end="295:23">-&gt;</operator><name pos:start="295:24" pos:end="295:26">dsp</name><operator pos:start="295:27" pos:end="295:27">.</operator><name pos:start="295:28" pos:end="295:41">put_pixels_tab</name><index pos:start="295:42" pos:end="295:44">[<expr pos:start="295:43" pos:end="295:43"><literal type="number" pos:start="295:43" pos:end="295:43">1</literal></expr>]</index><index pos:start="295:45" pos:end="295:47">[<expr pos:start="295:46" pos:end="295:46"><literal type="number" pos:start="295:46" pos:end="295:46">0</literal></expr>]</index></name><operator pos:start="295:48" pos:end="295:48">(</operator>

                        <name pos:start="297:25" pos:end="297:36">output_plane</name> <operator pos:start="297:38" pos:end="297:38">+</operator> <name pos:start="297:40" pos:end="297:50">first_pixel</name><operator pos:start="297:51" pos:end="297:51">,</operator>

                        <name pos:start="299:25" pos:end="299:34">last_plane</name> <operator pos:start="299:36" pos:end="299:36">+</operator> <name pos:start="299:38" pos:end="299:48">first_pixel</name><operator pos:start="299:49" pos:end="299:49">,</operator>

                        <name pos:start="301:25" pos:end="301:30">stride</name><operator pos:start="301:31" pos:end="301:31">,</operator> <literal type="number" pos:start="301:33" pos:end="301:33">8</literal><operator pos:start="301:34" pos:end="301:34">)</operator></expr>;</expr_stmt>



                </block_content>}</block></else></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>



            <comment type="line" pos:start="313:13" pos:end="313:62">// Filter up to the last row in the superblock row</comment>

            <if_stmt pos:start="315:13" pos:end="317:97"><if pos:start="315:13" pos:end="317:97">if <condition pos:start="315:16" pos:end="315:37">(<expr pos:start="315:17" pos:end="315:36"><operator pos:start="315:17" pos:end="315:17">!</operator><name pos:start="315:18" pos:end="315:36"><name pos:start="315:18" pos:end="315:18">s</name><operator pos:start="315:19" pos:end="315:20">-&gt;</operator><name pos:start="315:21" pos:end="315:36">skip_loop_filter</name></name></expr>)</condition><block type="pseudo" pos:start="317:17" pos:end="317:97"><block_content pos:start="317:17" pos:end="317:97">

                <expr_stmt pos:start="317:17" pos:end="317:97"><expr pos:start="317:17" pos:end="317:96"><call pos:start="317:17" pos:end="317:96"><name pos:start="317:17" pos:end="317:33">apply_loop_filter</name><argument_list pos:start="317:34" pos:end="317:96">(<argument pos:start="317:35" pos:end="317:35"><expr pos:start="317:35" pos:end="317:35"><name pos:start="317:35" pos:end="317:35">s</name></expr></argument>, <argument pos:start="317:38" pos:end="317:42"><expr pos:start="317:38" pos:end="317:42"><name pos:start="317:38" pos:end="317:42">plane</name></expr></argument>, <argument pos:start="317:45" pos:end="317:59"><expr pos:start="317:45" pos:end="317:59"><literal type="number" pos:start="317:45" pos:end="317:45">4</literal><operator pos:start="317:46" pos:end="317:46">*</operator><name pos:start="317:47" pos:end="317:50">sb_y</name> <operator pos:start="317:52" pos:end="317:52">-</operator> <operator pos:start="317:54" pos:end="317:54">!</operator><operator pos:start="317:55" pos:end="317:55">!</operator><name pos:start="317:56" pos:end="317:59">sb_y</name></expr></argument>, <argument pos:start="317:62" pos:end="317:95"><expr pos:start="317:62" pos:end="317:95"><call pos:start="317:62" pos:end="317:95"><name pos:start="317:62" pos:end="317:66">FFMIN</name><argument_list pos:start="317:67" pos:end="317:95">(<argument pos:start="317:68" pos:end="317:75"><expr pos:start="317:68" pos:end="317:75"><literal type="number" pos:start="317:68" pos:end="317:68">4</literal><operator pos:start="317:69" pos:end="317:69">*</operator><name pos:start="317:70" pos:end="317:73">sb_y</name><operator pos:start="317:74" pos:end="317:74">+</operator><literal type="number" pos:start="317:75" pos:end="317:75">3</literal></expr></argument>, <argument pos:start="317:78" pos:end="317:94"><expr pos:start="317:78" pos:end="317:94"><name pos:start="317:78" pos:end="317:92">fragment_height</name><operator pos:start="317:93" pos:end="317:93">-</operator><literal type="number" pos:start="317:94" pos:end="317:94">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



     <comment type="block" pos:start="325:6" pos:end="325:61">/* this looks like a good place for slice dispatch... */</comment>

     <comment type="block" pos:start="327:6" pos:end="337:8">/* algorithm:

      *   if (slice == s-&gt;macroblock_height - 1)

      *     dispatch (both last slice &amp; 2nd-to-last slice);

      *   else if (slice &gt; 0)

      *     dispatch (slice - 1);

      */</comment>



    <expr_stmt pos:start="341:5" pos:end="341:93"><expr pos:start="341:5" pos:end="341:92"><call pos:start="341:5" pos:end="341:92"><name pos:start="341:5" pos:end="341:23">vp3_draw_horiz_band</name><argument_list pos:start="341:24" pos:end="341:92">(<argument pos:start="341:25" pos:end="341:25"><expr pos:start="341:25" pos:end="341:25"><name pos:start="341:25" pos:end="341:25">s</name></expr></argument>, <argument pos:start="341:28" pos:end="341:91"><expr pos:start="341:28" pos:end="341:91"><call pos:start="341:28" pos:end="341:91"><name pos:start="341:28" pos:end="341:32">FFMIN</name><argument_list pos:start="341:33" pos:end="341:91">(<argument pos:start="341:34" pos:end="341:76"><expr pos:start="341:34" pos:end="341:76"><operator pos:start="341:34" pos:end="341:34">(</operator><literal type="number" pos:start="341:35" pos:end="341:36">32</literal> <operator pos:start="341:38" pos:end="341:39">&lt;&lt;</operator> <name pos:start="341:41" pos:end="341:57"><name pos:start="341:41" pos:end="341:41">s</name><operator pos:start="341:42" pos:end="341:43">-&gt;</operator><name pos:start="341:44" pos:end="341:57">chroma_y_shift</name></name><operator pos:start="341:58" pos:end="341:58">)</operator> <operator pos:start="341:60" pos:end="341:60">*</operator> <operator pos:start="341:62" pos:end="341:62">(</operator><name pos:start="341:63" pos:end="341:67">slice</name> <operator pos:start="341:69" pos:end="341:69">+</operator> <literal type="number" pos:start="341:71" pos:end="341:71">1</literal><operator pos:start="341:72" pos:end="341:72">)</operator> <operator pos:start="341:74" pos:end="341:74">-</operator><literal type="number" pos:start="341:75" pos:end="341:76">16</literal></expr></argument>, <argument pos:start="341:79" pos:end="341:90"><expr pos:start="341:79" pos:end="341:90"><name pos:start="341:79" pos:end="341:87"><name pos:start="341:79" pos:end="341:79">s</name><operator pos:start="341:80" pos:end="341:81">-&gt;</operator><name pos:start="341:82" pos:end="341:87">height</name></name><operator pos:start="341:88" pos:end="341:88">-</operator><literal type="number" pos:start="341:89" pos:end="341:90">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
