<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4784.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">nbd_co_receive_request</name><parameter_list pos:start="1:34" pos:end="1:79">(<parameter pos:start="1:35" pos:end="1:49"><decl pos:start="1:35" pos:end="1:49"><type pos:start="1:35" pos:end="1:49"><name pos:start="1:35" pos:end="1:44">NBDRequest</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">req</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:78"><decl pos:start="1:52" pos:end="1:78"><type pos:start="1:52" pos:end="1:78"><name pos:start="1:52" pos:end="1:69"><name pos:start="1:52" pos:end="1:57">struct</name> <name pos:start="1:59" pos:end="1:69">nbd_request</name></name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:78">request</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:14">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">NBDClient</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:21">client</name> <init pos:start="5:23" pos:end="5:35">= <expr pos:start="5:25" pos:end="5:35"><name pos:start="5:25" pos:end="5:35"><name pos:start="5:25" pos:end="5:27">req</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:35">client</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">csock</name> <init pos:start="7:15" pos:end="7:28">= <expr pos:start="7:17" pos:end="7:28"><name pos:start="7:17" pos:end="7:28"><name pos:start="7:17" pos:end="7:22">client</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:28">sock</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">rc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:51"><expr pos:start="13:5" pos:end="13:50"><name pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:10">client</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:26">recv_coroutine</name></name> <operator pos:start="13:28" pos:end="13:28">=</operator> <call pos:start="13:30" pos:end="13:50"><name pos:start="13:30" pos:end="13:48">qemu_coroutine_self</name><argument_list pos:start="13:49" pos:end="13:50">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:50">(<expr pos:start="15:9" pos:end="15:49"><call pos:start="15:9" pos:end="15:43"><name pos:start="15:9" pos:end="15:27">nbd_receive_request</name><argument_list pos:start="15:28" pos:end="15:43">(<argument pos:start="15:29" pos:end="15:33"><expr pos:start="15:29" pos:end="15:33"><name pos:start="15:29" pos:end="15:33">csock</name></expr></argument>, <argument pos:start="15:36" pos:end="15:42"><expr pos:start="15:36" pos:end="15:42"><name pos:start="15:36" pos:end="15:42">request</name></expr></argument>)</argument_list></call> <operator pos:start="15:45" pos:end="15:46">==</operator> <operator pos:start="15:48" pos:end="15:48">-</operator><literal type="number" pos:start="15:49" pos:end="15:49">1</literal></expr>)</condition> <block pos:start="15:52" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:17">

        <expr_stmt pos:start="17:9" pos:end="17:18"><expr pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:10">rc</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <operator pos:start="17:14" pos:end="17:14">-</operator><name pos:start="17:15" pos:end="17:17">EIO</name></expr>;</expr_stmt>

        <goto pos:start="19:9" pos:end="19:17">goto <name pos:start="19:14" pos:end="19:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="25:39">(<expr pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:15">request</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:20">len</name></name> <operator pos:start="25:22" pos:end="25:22">&gt;</operator> <name pos:start="25:24" pos:end="25:38">NBD_BUFFER_SIZE</name></expr>)</condition> <block pos:start="25:41" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:17">

        <expr_stmt pos:start="27:9" pos:end="29:43"><expr pos:start="27:9" pos:end="29:42"><call pos:start="27:9" pos:end="29:42"><name pos:start="27:9" pos:end="27:11">LOG</name><argument_list pos:start="27:12" pos:end="29:42">(<argument pos:start="27:13" pos:end="27:50"><expr pos:start="27:13" pos:end="27:50"><literal type="string" pos:start="27:13" pos:end="27:50">"len (%u) is larger than max len (%u)"</literal></expr></argument>,

            <argument pos:start="29:13" pos:end="29:24"><expr pos:start="29:13" pos:end="29:24"><name pos:start="29:13" pos:end="29:24"><name pos:start="29:13" pos:end="29:19">request</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:24">len</name></name></expr></argument>, <argument pos:start="29:27" pos:end="29:41"><expr pos:start="29:27" pos:end="29:41"><name pos:start="29:27" pos:end="29:41">NBD_BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:21"><expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:10">rc</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <operator pos:start="31:14" pos:end="31:14">-</operator><name pos:start="31:15" pos:end="31:20">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="33:9" pos:end="33:17">goto <name pos:start="33:14" pos:end="33:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="49:5"><if pos:start="39:5" pos:end="49:5">if <condition pos:start="39:8" pos:end="39:55">(<expr pos:start="39:9" pos:end="39:54"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:22"><name pos:start="39:10" pos:end="39:16">request</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:22">from</name></name> <operator pos:start="39:24" pos:end="39:24">+</operator> <name pos:start="39:26" pos:end="39:37"><name pos:start="39:26" pos:end="39:32">request</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:37">len</name></name><operator pos:start="39:38" pos:end="39:38">)</operator> <operator pos:start="39:40" pos:end="39:40">&lt;</operator> <name pos:start="39:42" pos:end="39:54"><name pos:start="39:42" pos:end="39:48">request</name><operator pos:start="39:49" pos:end="39:50">-&gt;</operator><name pos:start="39:51" pos:end="39:54">from</name></name></expr>)</condition> <block pos:start="39:57" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:17">

        <expr_stmt pos:start="41:9" pos:end="43:46"><expr pos:start="41:9" pos:end="43:45"><call pos:start="41:9" pos:end="43:45"><name pos:start="41:9" pos:end="41:11">LOG</name><argument_list pos:start="41:12" pos:end="43:45">(<argument pos:start="41:13" pos:end="43:44"><expr pos:start="41:13" pos:end="43:44"><literal type="string" pos:start="41:13" pos:end="41:41">"integer overflow detected! "</literal>

            <literal type="string" pos:start="43:13" pos:end="43:44">"you're probably being attacked"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:21"><expr pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:10">rc</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <operator pos:start="45:14" pos:end="45:14">-</operator><name pos:start="45:15" pos:end="45:20">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:17">goto <name pos:start="47:14" pos:end="47:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:27"><expr pos:start="53:5" pos:end="53:26"><call pos:start="53:5" pos:end="53:26"><name pos:start="53:5" pos:end="53:9">TRACE</name><argument_list pos:start="53:10" pos:end="53:26">(<argument pos:start="53:11" pos:end="53:25"><expr pos:start="53:11" pos:end="53:25"><literal type="string" pos:start="53:11" pos:end="53:25">"Decoding type"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="73:5"><if pos:start="57:5" pos:end="73:5">if <condition pos:start="57:8" pos:end="57:64">(<expr pos:start="57:9" pos:end="57:63"><operator pos:start="57:9" pos:end="57:9">(</operator><name pos:start="57:10" pos:end="57:22"><name pos:start="57:10" pos:end="57:16">request</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:22">type</name></name> <operator pos:start="57:24" pos:end="57:24">&amp;</operator> <name pos:start="57:26" pos:end="57:45">NBD_CMD_MASK_COMMAND</name><operator pos:start="57:46" pos:end="57:46">)</operator> <operator pos:start="57:48" pos:end="57:49">==</operator> <name pos:start="57:51" pos:end="57:63">NBD_CMD_WRITE</name></expr>)</condition> <block pos:start="57:66" pos:end="73:5">{<block_content pos:start="59:9" pos:end="71:9">

        <expr_stmt pos:start="59:9" pos:end="59:50"><expr pos:start="59:9" pos:end="59:49"><call pos:start="59:9" pos:end="59:49"><name pos:start="59:9" pos:end="59:13">TRACE</name><argument_list pos:start="59:14" pos:end="59:49">(<argument pos:start="59:15" pos:end="59:34"><expr pos:start="59:15" pos:end="59:34"><literal type="string" pos:start="59:15" pos:end="59:34">"Reading %u byte(s)"</literal></expr></argument>, <argument pos:start="59:37" pos:end="59:48"><expr pos:start="59:37" pos:end="59:48"><name pos:start="59:37" pos:end="59:48"><name pos:start="59:37" pos:end="59:43">request</name><operator pos:start="59:44" pos:end="59:45">-&gt;</operator><name pos:start="59:46" pos:end="59:48">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="63:9" pos:end="71:9"><if pos:start="63:9" pos:end="71:9">if <condition pos:start="63:12" pos:end="63:73">(<expr pos:start="63:13" pos:end="63:72"><call pos:start="63:13" pos:end="63:56"><name pos:start="63:13" pos:end="63:24">qemu_co_recv</name><argument_list pos:start="63:25" pos:end="63:56">(<argument pos:start="63:26" pos:end="63:30"><expr pos:start="63:26" pos:end="63:30"><name pos:start="63:26" pos:end="63:30">csock</name></expr></argument>, <argument pos:start="63:33" pos:end="63:41"><expr pos:start="63:33" pos:end="63:41"><name pos:start="63:33" pos:end="63:41"><name pos:start="63:33" pos:end="63:35">req</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:41">data</name></name></expr></argument>, <argument pos:start="63:44" pos:end="63:55"><expr pos:start="63:44" pos:end="63:55"><name pos:start="63:44" pos:end="63:55"><name pos:start="63:44" pos:end="63:50">request</name><operator pos:start="63:51" pos:end="63:52">-&gt;</operator><name pos:start="63:53" pos:end="63:55">len</name></name></expr></argument>)</argument_list></call> <operator pos:start="63:58" pos:end="63:59">!=</operator> <name pos:start="63:61" pos:end="63:72"><name pos:start="63:61" pos:end="63:67">request</name><operator pos:start="63:68" pos:end="63:69">-&gt;</operator><name pos:start="63:70" pos:end="63:72">len</name></name></expr>)</condition> <block pos:start="63:75" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:21">

            <expr_stmt pos:start="65:13" pos:end="65:46"><expr pos:start="65:13" pos:end="65:45"><call pos:start="65:13" pos:end="65:45"><name pos:start="65:13" pos:end="65:15">LOG</name><argument_list pos:start="65:16" pos:end="65:45">(<argument pos:start="65:17" pos:end="65:44"><expr pos:start="65:17" pos:end="65:44"><literal type="string" pos:start="65:17" pos:end="65:44">"reading from socket failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:22"><expr pos:start="67:13" pos:end="67:21"><name pos:start="67:13" pos:end="67:14">rc</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <operator pos:start="67:18" pos:end="67:18">-</operator><name pos:start="67:19" pos:end="67:21">EIO</name></expr>;</expr_stmt>

            <goto pos:start="69:13" pos:end="69:21">goto <name pos:start="69:18" pos:end="69:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:11"><expr pos:start="75:5" pos:end="75:10"><name pos:start="75:5" pos:end="75:6">rc</name> <operator pos:start="75:8" pos:end="75:8">=</operator> <literal type="number" pos:start="75:10" pos:end="75:10">0</literal></expr>;</expr_stmt>



<label pos:start="79:1" pos:end="79:4"><name pos:start="79:1" pos:end="79:3">out</name>:</label>

    <expr_stmt pos:start="81:5" pos:end="81:34"><expr pos:start="81:5" pos:end="81:33"><name pos:start="81:5" pos:end="81:26"><name pos:start="81:5" pos:end="81:10">client</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:26">recv_coroutine</name></name> <operator pos:start="81:28" pos:end="81:28">=</operator> <name pos:start="81:30" pos:end="81:33">NULL</name></expr>;</expr_stmt>

    <return pos:start="83:5" pos:end="83:14">return <expr pos:start="83:12" pos:end="83:13"><name pos:start="83:12" pos:end="83:13">rc</name></expr>;</return>

</block_content>}</block></function>
</unit>
