<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15858.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">vfio_start_irqfd_injection</name><parameter_list pos:start="1:39" pos:end="1:73">(<parameter pos:start="1:40" pos:end="1:58"><decl pos:start="1:40" pos:end="1:58"><type pos:start="1:40" pos:end="1:58"><name pos:start="1:40" pos:end="1:51">SysBusDevice</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">sbdev</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:68">qemu_irq</name></type> <name pos:start="1:70" pos:end="1:72">irq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:11">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:58"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">VFIOPlatformDevice</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:28">vdev</name> <init pos:start="5:30" pos:end="5:58">= <expr pos:start="5:32" pos:end="5:58"><call pos:start="5:32" pos:end="5:58"><name pos:start="5:32" pos:end="5:51">VFIO_PLATFORM_DEVICE</name><argument_list pos:start="5:52" pos:end="5:58">(<argument pos:start="5:53" pos:end="5:57"><expr pos:start="5:53" pos:end="5:57"><name pos:start="5:53" pos:end="5:57">sbdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">VFIOINTp</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">intp</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="13:29">(<expr pos:start="11:9" pos:end="13:28"><operator pos:start="11:9" pos:end="11:9">!</operator><call pos:start="11:10" pos:end="11:29"><name pos:start="11:10" pos:end="11:27">kvm_irqfds_enabled</name><argument_list pos:start="11:28" pos:end="11:29">()</argument_list></call> <operator pos:start="11:31" pos:end="11:32">||</operator> <operator pos:start="11:34" pos:end="11:34">!</operator><call pos:start="11:35" pos:end="11:59"><name pos:start="11:35" pos:end="11:57">kvm_resamplefds_enabled</name><argument_list pos:start="11:58" pos:end="11:59">()</argument_list></call> <operator pos:start="11:61" pos:end="11:62">||</operator>

        <operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:28"><name pos:start="13:10" pos:end="13:13">vdev</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:28">irqfd_allowed</name></name></expr>)</condition> <block pos:start="13:31" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:24">

        <goto pos:start="15:9" pos:end="15:24">goto <name pos:start="15:14" pos:end="15:23">fail_irqfd</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <macro pos:start="21:5" pos:end="21:47"><name pos:start="21:5" pos:end="21:17">QLIST_FOREACH</name><argument_list pos:start="21:18" pos:end="21:47">(<argument pos:start="21:19" pos:end="21:22">intp</argument>, <argument pos:start="21:25" pos:end="21:40">&amp;vdev-&gt;intp_list</argument>, <argument pos:start="21:43" pos:end="21:46">next</argument>)</argument_list></macro> <block pos:start="21:49" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:9">

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:33">(<expr pos:start="23:13" pos:end="23:32"><name pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:16">intp</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:25">qemuirq</name></name> <operator pos:start="23:27" pos:end="23:28">==</operator> <name pos:start="23:30" pos:end="23:32">irq</name></expr>)</condition> <block pos:start="23:35" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:18">

            <break pos:start="25:13" pos:end="25:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="31:5" pos:end="31:17"><expr pos:start="31:5" pos:end="31:16"><call pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:10">assert</name><argument_list pos:start="31:11" pos:end="31:16">(<argument pos:start="31:12" pos:end="31:15"><expr pos:start="31:12" pos:end="31:15"><name pos:start="31:12" pos:end="31:15">intp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="37:58">(<expr pos:start="35:9" pos:end="37:57"><call pos:start="35:9" pos:end="37:53"><name pos:start="35:9" pos:end="35:38">kvm_irqchip_add_irqfd_notifier</name><argument_list pos:start="35:39" pos:end="37:53">(<argument pos:start="35:40" pos:end="35:48"><expr pos:start="35:40" pos:end="35:48"><name pos:start="35:40" pos:end="35:48">kvm_state</name></expr></argument>, <argument pos:start="35:51" pos:end="35:65"><expr pos:start="35:51" pos:end="35:65"><name pos:start="35:51" pos:end="35:65"><name pos:start="35:51" pos:end="35:54">intp</name><operator pos:start="35:55" pos:end="35:56">-&gt;</operator><name pos:start="35:57" pos:end="35:65">interrupt</name></name></expr></argument>,

                                   <argument pos:start="37:36" pos:end="37:47"><expr pos:start="37:36" pos:end="37:47"><name pos:start="37:36" pos:end="37:47"><name pos:start="37:36" pos:end="37:39">intp</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:47">unmask</name></name></expr></argument>, <argument pos:start="37:50" pos:end="37:52"><expr pos:start="37:50" pos:end="37:52"><name pos:start="37:50" pos:end="37:52">irq</name></expr></argument>)</argument_list></call> <operator pos:start="37:55" pos:end="37:55">&lt;</operator> <literal type="number" pos:start="37:57" pos:end="37:57">0</literal></expr>)</condition> <block pos:start="37:60" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:24">

        <goto pos:start="39:9" pos:end="39:24">goto <name pos:start="39:14" pos:end="39:23">fail_irqfd</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:49">(<expr pos:start="45:9" pos:end="45:48"><call pos:start="45:9" pos:end="45:44"><name pos:start="45:9" pos:end="45:32">vfio_set_trigger_eventfd</name><argument_list pos:start="45:33" pos:end="45:44">(<argument pos:start="45:34" pos:end="45:37"><expr pos:start="45:34" pos:end="45:37"><name pos:start="45:34" pos:end="45:37">intp</name></expr></argument>, <argument pos:start="45:40" pos:end="45:43"><expr pos:start="45:40" pos:end="45:43"><name pos:start="45:40" pos:end="45:43">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="45:46" pos:end="45:46">&lt;</operator> <literal type="number" pos:start="45:48" pos:end="45:48">0</literal></expr>)</condition> <block pos:start="45:51" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:23">

        <goto pos:start="47:9" pos:end="47:23">goto <name pos:start="47:14" pos:end="47:22">fail_vfio</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:44">(<expr pos:start="51:9" pos:end="51:43"><call pos:start="51:9" pos:end="51:39"><name pos:start="51:9" pos:end="51:33">vfio_set_resample_eventfd</name><argument_list pos:start="51:34" pos:end="51:39">(<argument pos:start="51:35" pos:end="51:38"><expr pos:start="51:35" pos:end="51:38"><name pos:start="51:35" pos:end="51:38">intp</name></expr></argument>)</argument_list></call> <operator pos:start="51:41" pos:end="51:41">&lt;</operator> <literal type="number" pos:start="51:43" pos:end="51:43">0</literal></expr>)</condition> <block pos:start="51:46" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:23">

        <goto pos:start="53:9" pos:end="53:23">goto <name pos:start="53:14" pos:end="53:22">fail_vfio</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:27"><expr pos:start="59:5" pos:end="59:26"><name pos:start="59:5" pos:end="59:19"><name pos:start="59:5" pos:end="59:8">intp</name><operator pos:start="59:9" pos:end="59:10">-&gt;</operator><name pos:start="59:11" pos:end="59:19">kvm_accel</name></name> <operator pos:start="59:21" pos:end="59:21">=</operator> <name pos:start="59:23" pos:end="59:26">true</name></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="67:74"><expr pos:start="63:5" pos:end="67:73"><call pos:start="63:5" pos:end="67:73"><name pos:start="63:5" pos:end="63:45">trace_vfio_platform_start_irqfd_injection</name><argument_list pos:start="63:46" pos:end="67:73">(<argument pos:start="63:47" pos:end="63:55"><expr pos:start="63:47" pos:end="63:55"><name pos:start="63:47" pos:end="63:55"><name pos:start="63:47" pos:end="63:50">intp</name><operator pos:start="63:51" pos:end="63:52">-&gt;</operator><name pos:start="63:53" pos:end="63:55">pin</name></name></expr></argument>,

                                     <argument pos:start="65:38" pos:end="65:75"><expr pos:start="65:38" pos:end="65:75"><call pos:start="65:38" pos:end="65:75"><name pos:start="65:38" pos:end="65:58">event_notifier_get_fd</name><argument_list pos:start="65:59" pos:end="65:75">(<argument pos:start="65:60" pos:end="65:74"><expr pos:start="65:60" pos:end="65:74"><name pos:start="65:60" pos:end="65:74"><name pos:start="65:60" pos:end="65:63">intp</name><operator pos:start="65:64" pos:end="65:65">-&gt;</operator><name pos:start="65:66" pos:end="65:74">interrupt</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                     <argument pos:start="67:38" pos:end="67:72"><expr pos:start="67:38" pos:end="67:72"><call pos:start="67:38" pos:end="67:72"><name pos:start="67:38" pos:end="67:58">event_notifier_get_fd</name><argument_list pos:start="67:59" pos:end="67:72">(<argument pos:start="67:60" pos:end="67:71"><expr pos:start="67:60" pos:end="67:71"><name pos:start="67:60" pos:end="67:71"><name pos:start="67:60" pos:end="67:63">intp</name><operator pos:start="67:64" pos:end="67:65">-&gt;</operator><name pos:start="67:66" pos:end="67:71">unmask</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="69:5" pos:end="69:11">return;</return>

<label pos:start="71:1" pos:end="71:10"><name pos:start="71:1" pos:end="71:9">fail_vfio</name>:</label>

    <expr_stmt pos:start="73:5" pos:end="73:71"><expr pos:start="73:5" pos:end="73:70"><call pos:start="73:5" pos:end="73:70"><name pos:start="73:5" pos:end="73:37">kvm_irqchip_remove_irqfd_notifier</name><argument_list pos:start="73:38" pos:end="73:70">(<argument pos:start="73:39" pos:end="73:47"><expr pos:start="73:39" pos:end="73:47"><name pos:start="73:39" pos:end="73:47">kvm_state</name></expr></argument>, <argument pos:start="73:50" pos:end="73:64"><expr pos:start="73:50" pos:end="73:64"><name pos:start="73:50" pos:end="73:64"><name pos:start="73:50" pos:end="73:53">intp</name><operator pos:start="73:54" pos:end="73:55">-&gt;</operator><name pos:start="73:56" pos:end="73:64">interrupt</name></name></expr></argument>, <argument pos:start="73:67" pos:end="73:69"><expr pos:start="73:67" pos:end="73:69"><name pos:start="73:67" pos:end="73:69">irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="77:28"><expr pos:start="75:5" pos:end="77:27"><call pos:start="75:5" pos:end="77:27"><name pos:start="75:5" pos:end="75:16">error_report</name><argument_list pos:start="75:17" pos:end="77:27">(<argument pos:start="75:18" pos:end="75:73"><expr pos:start="75:18" pos:end="75:73"><literal type="string" pos:start="75:18" pos:end="75:73">"vfio: failed to start eventfd signaling for IRQ %d: %m"</literal></expr></argument>,

                 <argument pos:start="77:18" pos:end="77:26"><expr pos:start="77:18" pos:end="77:26"><name pos:start="77:18" pos:end="77:26"><name pos:start="77:18" pos:end="77:21">intp</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:26">pin</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:12"><expr pos:start="79:5" pos:end="79:11"><call pos:start="79:5" pos:end="79:11"><name pos:start="79:5" pos:end="79:9">abort</name><argument_list pos:start="79:10" pos:end="79:11">()</argument_list></call></expr>;</expr_stmt>

<label pos:start="81:1" pos:end="81:11"><name pos:start="81:1" pos:end="81:10">fail_irqfd</name>:</label>

    <expr_stmt pos:start="83:5" pos:end="83:45"><expr pos:start="83:5" pos:end="83:44"><call pos:start="83:5" pos:end="83:44"><name pos:start="83:5" pos:end="83:32">vfio_start_eventfd_injection</name><argument_list pos:start="83:33" pos:end="83:44">(<argument pos:start="83:34" pos:end="83:38"><expr pos:start="83:34" pos:end="83:38"><name pos:start="83:34" pos:end="83:38">sbdev</name></expr></argument>, <argument pos:start="83:41" pos:end="83:43"><expr pos:start="83:41" pos:end="83:43"><name pos:start="83:41" pos:end="83:43">irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="85:5" pos:end="85:11">return;</return>

</block_content>}</block></function>
</unit>
