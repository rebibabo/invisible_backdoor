<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7677.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:32">av_interleave_packet_per_dts</name><parameter_list pos:start="1:33" pos:end="1:93">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:48">AVFormatContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:66"><decl pos:start="1:54" pos:end="1:66"><type pos:start="1:54" pos:end="1:66"><name pos:start="1:54" pos:end="1:61">AVPacket</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">out</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:81"><decl pos:start="1:69" pos:end="1:81"><type pos:start="1:69" pos:end="1:81"><name pos:start="1:69" pos:end="1:76">AVPacket</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:81">pkt</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:92"><decl pos:start="1:84" pos:end="1:92"><type pos:start="1:84" pos:end="1:92"><name pos:start="1:84" pos:end="1:86">int</name></type> <name pos:start="1:88" pos:end="1:92">flush</name></decl></parameter>)</parameter_list><block pos:start="1:94" pos:end="111:1">{<block_content pos:start="3:5" pos:end="109:5">

    <decl_stmt pos:start="3:5" pos:end="3:23"><decl pos:start="3:5" pos:end="3:22"><type pos:start="3:5" pos:end="3:18"><name pos:start="3:5" pos:end="3:16">AVPacketList</name> <modifier pos:start="3:18" pos:end="3:18">*</modifier></type><name pos:start="3:19" pos:end="3:22">pktl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:20">stream_count</name><init pos:start="5:21" pos:end="5:22">=<expr pos:start="5:22" pos:end="5:22"><literal type="number" pos:start="5:22" pos:end="5:22">0</literal></expr></init></decl>, <decl pos:start="5:25" pos:end="5:46"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:25" pos:end="5:44">noninterleaved_count</name><init pos:start="5:45" pos:end="5:46">=<expr pos:start="5:46" pos:end="5:46"><literal type="number" pos:start="5:46" pos:end="5:46">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:25">delta_dts_max</name> <init pos:start="7:27" pos:end="7:29">= <expr pos:start="7:29" pos:end="7:29"><literal type="number" pos:start="7:29" pos:end="7:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if<condition pos:start="13:7" pos:end="13:11">(<expr pos:start="13:8" pos:end="13:10"><name pos:start="13:8" pos:end="13:10">pkt</name></expr>)</condition><block pos:start="13:12" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:68">

        <expr_stmt pos:start="15:9" pos:end="15:68"><expr pos:start="15:9" pos:end="15:67"><call pos:start="15:9" pos:end="15:67"><name pos:start="15:9" pos:end="15:32">ff_interleave_add_packet</name><argument_list pos:start="15:33" pos:end="15:67">(<argument pos:start="15:34" pos:end="15:34"><expr pos:start="15:34" pos:end="15:34"><name pos:start="15:34" pos:end="15:34">s</name></expr></argument>, <argument pos:start="15:37" pos:end="15:39"><expr pos:start="15:37" pos:end="15:39"><name pos:start="15:37" pos:end="15:39">pkt</name></expr></argument>, <argument pos:start="15:42" pos:end="15:66"><expr pos:start="15:42" pos:end="15:66"><name pos:start="15:42" pos:end="15:66">ff_interleave_compare_dts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="21:5" pos:end="33:5">for<control pos:start="21:8" pos:end="21:36">(<init pos:start="21:9" pos:end="21:12"><expr pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:9">i</name><operator pos:start="21:10" pos:end="21:10">=</operator><literal type="number" pos:start="21:11" pos:end="21:11">0</literal></expr>;</init> <condition pos:start="21:14" pos:end="21:31"><expr pos:start="21:14" pos:end="21:30"><name pos:start="21:14" pos:end="21:14">i</name> <operator pos:start="21:16" pos:end="21:16">&lt;</operator> <name pos:start="21:18" pos:end="21:30"><name pos:start="21:18" pos:end="21:18">s</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:30">nb_streams</name></name></expr>;</condition> <incr pos:start="21:33" pos:end="21:35"><expr pos:start="21:33" pos:end="21:35"><name pos:start="21:33" pos:end="21:33">i</name><operator pos:start="21:34" pos:end="21:35">++</operator></expr></incr>)</control> <block pos:start="21:38" pos:end="33:5">{<block_content pos:start="23:9" pos:end="31:9">

        <if_stmt pos:start="23:9" pos:end="31:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:49">(<expr pos:start="23:13" pos:end="23:48"><name pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:22">streams</name><index pos:start="23:23" pos:end="23:25">[<expr pos:start="23:24" pos:end="23:24"><name pos:start="23:24" pos:end="23:24">i</name></expr>]</index></name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:48">last_in_packet_buffer</name></expr>)</condition> <block pos:start="23:51" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:27">

            <expr_stmt pos:start="25:13" pos:end="25:27"><expr pos:start="25:13" pos:end="25:26"><operator pos:start="25:13" pos:end="25:14">++</operator><name pos:start="25:15" pos:end="25:26">stream_count</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="27:11" pos:end="31:9">else if<condition pos:start="27:18" pos:end="27:76">(<expr pos:start="27:19" pos:end="27:75"><name pos:start="27:19" pos:end="27:31"><name pos:start="27:19" pos:end="27:19">s</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:28">streams</name><index pos:start="27:29" pos:end="27:31">[<expr pos:start="27:30" pos:end="27:30"><name pos:start="27:30" pos:end="27:30">i</name></expr>]</index></name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:50"><name pos:start="27:34" pos:end="27:38">codec</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:50">codec_type</name></name> <operator pos:start="27:52" pos:end="27:53">==</operator> <name pos:start="27:55" pos:end="27:75">AVMEDIA_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="27:78" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:35">

            <expr_stmt pos:start="29:13" pos:end="29:35"><expr pos:start="29:13" pos:end="29:34"><operator pos:start="29:13" pos:end="29:14">++</operator><name pos:start="29:15" pos:end="29:34">noninterleaved_count</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="37:5" pos:end="77:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:38">(<expr pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:21">nb_streams</name></name> <operator pos:start="37:23" pos:end="37:24">==</operator> <name pos:start="37:26" pos:end="37:37">stream_count</name></expr>)</condition> <block pos:start="37:40" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:18">

        <expr_stmt pos:start="39:9" pos:end="39:18"><expr pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:13">flush</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="41:7" pos:end="77:5">else if <condition pos:start="41:15" pos:end="41:22">(<expr pos:start="41:16" pos:end="41:21"><operator pos:start="41:16" pos:end="41:16">!</operator><name pos:start="41:17" pos:end="41:21">flush</name></expr>)</condition><block pos:start="41:23" pos:end="77:5">{<block_content pos:start="43:9" pos:end="75:9">

        <for pos:start="43:9" pos:end="65:9">for<control pos:start="43:12" pos:end="43:40">(<init pos:start="43:13" pos:end="43:16"><expr pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:13">i</name><operator pos:start="43:14" pos:end="43:14">=</operator><literal type="number" pos:start="43:15" pos:end="43:15">0</literal></expr>;</init> <condition pos:start="43:18" pos:end="43:35"><expr pos:start="43:18" pos:end="43:34"><name pos:start="43:18" pos:end="43:18">i</name> <operator pos:start="43:20" pos:end="43:20">&lt;</operator> <name pos:start="43:22" pos:end="43:34"><name pos:start="43:22" pos:end="43:22">s</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:34">nb_streams</name></name></expr>;</condition> <incr pos:start="43:37" pos:end="43:39"><expr pos:start="43:37" pos:end="43:39"><name pos:start="43:37" pos:end="43:37">i</name><operator pos:start="43:38" pos:end="43:39">++</operator></expr></incr>)</control> <block pos:start="43:42" pos:end="65:9">{<block_content pos:start="45:13" pos:end="63:13">

            <if_stmt pos:start="45:13" pos:end="63:13"><if pos:start="45:13" pos:end="63:13">if <condition pos:start="45:16" pos:end="45:53">(<expr pos:start="45:17" pos:end="45:52"><name pos:start="45:17" pos:end="45:29"><name pos:start="45:17" pos:end="45:17">s</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:26">streams</name><index pos:start="45:27" pos:end="45:29">[<expr pos:start="45:28" pos:end="45:28"><name pos:start="45:28" pos:end="45:28">i</name></expr>]</index></name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:52">last_in_packet_buffer</name></expr>)</condition> <block pos:start="45:55" pos:end="63:13">{<block_content pos:start="47:17" pos:end="61:63">

                <decl_stmt pos:start="47:17" pos:end="59:48"><decl pos:start="47:17" pos:end="59:47"><type pos:start="47:17" pos:end="47:23"><name pos:start="47:17" pos:end="47:23">int64_t</name></type> <name pos:start="47:25" pos:end="47:33">delta_dts</name> <init pos:start="47:35" pos:end="59:47">=

                    <expr pos:start="49:21" pos:end="59:47"><call pos:start="49:21" pos:end="53:47"><name pos:start="49:21" pos:end="49:32">av_rescale_q</name><argument_list pos:start="49:33" pos:end="53:47">(<argument pos:start="49:34" pos:end="49:78"><expr pos:start="49:34" pos:end="49:78"><name pos:start="49:34" pos:end="49:46"><name pos:start="49:34" pos:end="49:34">s</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:43">streams</name><index pos:start="49:44" pos:end="49:46">[<expr pos:start="49:45" pos:end="49:45"><name pos:start="49:45" pos:end="49:45">i</name></expr>]</index></name><operator pos:start="49:47" pos:end="49:48">-&gt;</operator><name pos:start="49:49" pos:end="49:78"><name pos:start="49:49" pos:end="49:69">last_in_packet_buffer</name><operator pos:start="49:70" pos:end="49:71">-&gt;</operator><name pos:start="49:72" pos:end="49:74">pkt</name><operator pos:start="49:75" pos:end="49:75">.</operator><name pos:start="49:76" pos:end="49:78">dts</name></name></expr></argument>,

                                <argument pos:start="51:33" pos:end="51:56"><expr pos:start="51:33" pos:end="51:56"><name pos:start="51:33" pos:end="51:45"><name pos:start="51:33" pos:end="51:33">s</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:42">streams</name><index pos:start="51:43" pos:end="51:45">[<expr pos:start="51:44" pos:end="51:44"><name pos:start="51:44" pos:end="51:44">i</name></expr>]</index></name><operator pos:start="51:46" pos:end="51:47">-&gt;</operator><name pos:start="51:48" pos:end="51:56">time_base</name></expr></argument>,

                                <argument pos:start="53:33" pos:end="53:46"><expr pos:start="53:33" pos:end="53:46"><name pos:start="53:33" pos:end="53:46">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call> <operator pos:start="53:49" pos:end="53:49">-</operator>

                    <call pos:start="55:21" pos:end="59:47"><name pos:start="55:21" pos:end="55:32">av_rescale_q</name><argument_list pos:start="55:33" pos:end="59:47">(<argument pos:start="55:34" pos:end="55:58"><expr pos:start="55:34" pos:end="55:58"><name pos:start="55:34" pos:end="55:58"><name pos:start="55:34" pos:end="55:34">s</name><operator pos:start="55:35" pos:end="55:36">-&gt;</operator><name pos:start="55:37" pos:end="55:49">packet_buffer</name><operator pos:start="55:50" pos:end="55:51">-&gt;</operator><name pos:start="55:52" pos:end="55:54">pkt</name><operator pos:start="55:55" pos:end="55:55">.</operator><name pos:start="55:56" pos:end="55:58">dts</name></name></expr></argument>,

                                <argument pos:start="57:33" pos:end="57:89"><expr pos:start="57:33" pos:end="57:89"><name pos:start="57:33" pos:end="57:78"><name pos:start="57:33" pos:end="57:33">s</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:42">streams</name><index pos:start="57:43" pos:end="57:78">[<expr pos:start="57:44" pos:end="57:77"><name pos:start="57:44" pos:end="57:77"><name pos:start="57:44" pos:end="57:44">s</name><operator pos:start="57:45" pos:end="57:46">-&gt;</operator><name pos:start="57:47" pos:end="57:59">packet_buffer</name><operator pos:start="57:60" pos:end="57:61">-&gt;</operator><name pos:start="57:62" pos:end="57:64">pkt</name><operator pos:start="57:65" pos:end="57:65">.</operator><name pos:start="57:66" pos:end="57:77">stream_index</name></name></expr>]</index></name><operator pos:start="57:79" pos:end="57:80">-&gt;</operator><name pos:start="57:81" pos:end="57:89">time_base</name></expr></argument>,

                                <argument pos:start="59:33" pos:end="59:46"><expr pos:start="59:33" pos:end="59:46"><name pos:start="59:33" pos:end="59:46">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:63"><expr pos:start="61:17" pos:end="61:62"><name pos:start="61:17" pos:end="61:29">delta_dts_max</name><operator pos:start="61:30" pos:end="61:30">=</operator> <call pos:start="61:32" pos:end="61:62"><name pos:start="61:32" pos:end="61:36">FFMAX</name><argument_list pos:start="61:37" pos:end="61:62">(<argument pos:start="61:38" pos:end="61:50"><expr pos:start="61:38" pos:end="61:50"><name pos:start="61:38" pos:end="61:50">delta_dts_max</name></expr></argument>, <argument pos:start="61:53" pos:end="61:61"><expr pos:start="61:53" pos:end="61:61"><name pos:start="61:53" pos:end="61:61">delta_dts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="67:9" pos:end="75:9"><if pos:start="67:9" pos:end="75:9">if<condition pos:start="67:11" pos:end="69:43">(<expr pos:start="67:12" pos:end="69:42"><name pos:start="67:12" pos:end="67:24"><name pos:start="67:12" pos:end="67:12">s</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:24">nb_streams</name></name> <operator pos:start="67:26" pos:end="67:27">==</operator> <name pos:start="67:29" pos:end="67:40">stream_count</name><operator pos:start="67:41" pos:end="67:41">+</operator><name pos:start="67:42" pos:end="67:61">noninterleaved_count</name> <operator pos:start="67:63" pos:end="67:64">&amp;&amp;</operator>

           <name pos:start="69:12" pos:end="69:24">delta_dts_max</name> <operator pos:start="69:26" pos:end="69:26">&gt;</operator> <literal type="number" pos:start="69:28" pos:end="69:29">20</literal><operator pos:start="69:30" pos:end="69:30">*</operator><name pos:start="69:31" pos:end="69:42">AV_TIME_BASE</name></expr>)</condition> <block pos:start="69:45" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:22">

            <expr_stmt pos:start="71:13" pos:end="71:95"><expr pos:start="71:13" pos:end="71:94"><call pos:start="71:13" pos:end="71:94"><name pos:start="71:13" pos:end="71:18">av_log</name><argument_list pos:start="71:19" pos:end="71:94">(<argument pos:start="71:20" pos:end="71:20"><expr pos:start="71:20" pos:end="71:20"><name pos:start="71:20" pos:end="71:20">s</name></expr></argument>, <argument pos:start="71:23" pos:end="71:34"><expr pos:start="71:23" pos:end="71:34"><name pos:start="71:23" pos:end="71:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="71:37" pos:end="71:71"><expr pos:start="71:37" pos:end="71:71"><literal type="string" pos:start="71:37" pos:end="71:71">"flushing with %d noninterleaved\n"</literal></expr></argument>, <argument pos:start="71:74" pos:end="71:93"><expr pos:start="71:74" pos:end="71:93"><name pos:start="71:74" pos:end="71:93">noninterleaved_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:22"><expr pos:start="73:13" pos:end="73:21"><name pos:start="73:13" pos:end="73:17">flush</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <literal type="number" pos:start="73:21" pos:end="73:21">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="79:5" pos:end="109:5"><if pos:start="79:5" pos:end="103:5">if<condition pos:start="79:7" pos:end="79:29">(<expr pos:start="79:8" pos:end="79:28"><name pos:start="79:8" pos:end="79:19">stream_count</name> <operator pos:start="79:21" pos:end="79:22">&amp;&amp;</operator> <name pos:start="79:24" pos:end="79:28">flush</name></expr>)</condition><block pos:start="79:30" pos:end="103:5">{<block_content pos:start="81:9" pos:end="101:17">

        <expr_stmt pos:start="81:9" pos:end="81:31"><expr pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:12">pktl</name><operator pos:start="81:13" pos:end="81:13">=</operator> <name pos:start="81:15" pos:end="81:30"><name pos:start="81:15" pos:end="81:15">s</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:30">packet_buffer</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:24"><expr pos:start="83:9" pos:end="83:23"><operator pos:start="83:9" pos:end="83:9">*</operator><name pos:start="83:10" pos:end="83:12">out</name><operator pos:start="83:13" pos:end="83:13">=</operator> <name pos:start="83:15" pos:end="83:23"><name pos:start="83:15" pos:end="83:18">pktl</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:23">pkt</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:37"><expr pos:start="87:9" pos:end="87:36"><name pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:24">packet_buffer</name></name><operator pos:start="87:25" pos:end="87:25">=</operator> <name pos:start="87:27" pos:end="87:36"><name pos:start="87:27" pos:end="87:30">pktl</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:36">next</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="91:39"><if pos:start="89:9" pos:end="91:39">if<condition pos:start="89:11" pos:end="89:29">(<expr pos:start="89:12" pos:end="89:28"><operator pos:start="89:12" pos:end="89:12">!</operator><name pos:start="89:13" pos:end="89:28"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:28">packet_buffer</name></name></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:39"><block_content pos:start="91:13" pos:end="91:39">

            <expr_stmt pos:start="91:13" pos:end="91:39"><expr pos:start="91:13" pos:end="91:38"><name pos:start="91:13" pos:end="91:32"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:32">packet_buffer_end</name></name><operator pos:start="91:33" pos:end="91:33">=</operator> <name pos:start="91:35" pos:end="91:38">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="95:9" pos:end="97:71"><if pos:start="95:9" pos:end="97:71">if<condition pos:start="95:11" pos:end="95:72">(<expr pos:start="95:12" pos:end="95:71"><name pos:start="95:12" pos:end="95:40"><name pos:start="95:12" pos:end="95:12">s</name><operator pos:start="95:13" pos:end="95:14">-&gt;</operator><name pos:start="95:15" pos:end="95:21">streams</name><index pos:start="95:22" pos:end="95:40">[<expr pos:start="95:23" pos:end="95:39"><name pos:start="95:23" pos:end="95:39"><name pos:start="95:23" pos:end="95:25">out</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:39">stream_index</name></name></expr>]</index></name><operator pos:start="95:41" pos:end="95:42">-&gt;</operator><name pos:start="95:43" pos:end="95:63">last_in_packet_buffer</name> <operator pos:start="95:65" pos:end="95:66">==</operator> <name pos:start="95:68" pos:end="95:71">pktl</name></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:71"><block_content pos:start="97:13" pos:end="97:71">

            <expr_stmt pos:start="97:13" pos:end="97:71"><expr pos:start="97:13" pos:end="97:70"><name pos:start="97:13" pos:end="97:41"><name pos:start="97:13" pos:end="97:13">s</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:22">streams</name><index pos:start="97:23" pos:end="97:41">[<expr pos:start="97:24" pos:end="97:40"><name pos:start="97:24" pos:end="97:40"><name pos:start="97:24" pos:end="97:26">out</name><operator pos:start="97:27" pos:end="97:28">-&gt;</operator><name pos:start="97:29" pos:end="97:40">stream_index</name></name></expr>]</index></name><operator pos:start="97:42" pos:end="97:43">-&gt;</operator><name pos:start="97:44" pos:end="97:64">last_in_packet_buffer</name><operator pos:start="97:65" pos:end="97:65">=</operator> <name pos:start="97:67" pos:end="97:70">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:24"><expr pos:start="99:9" pos:end="99:23"><call pos:start="99:9" pos:end="99:23"><name pos:start="99:9" pos:end="99:16">av_freep</name><argument_list pos:start="99:17" pos:end="99:23">(<argument pos:start="99:18" pos:end="99:22"><expr pos:start="99:18" pos:end="99:22"><operator pos:start="99:18" pos:end="99:18">&amp;</operator><name pos:start="99:19" pos:end="99:22">pktl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="101:9" pos:end="101:17">return <expr pos:start="101:16" pos:end="101:16"><literal type="number" pos:start="101:16" pos:end="101:16">1</literal></expr>;</return>

    </block_content>}</block></if><else pos:start="103:6" pos:end="109:5">else<block pos:start="103:10" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:17">

        <expr_stmt pos:start="105:9" pos:end="105:28"><expr pos:start="105:9" pos:end="105:27"><call pos:start="105:9" pos:end="105:27"><name pos:start="105:9" pos:end="105:22">av_init_packet</name><argument_list pos:start="105:23" pos:end="105:27">(<argument pos:start="105:24" pos:end="105:26"><expr pos:start="105:24" pos:end="105:26"><name pos:start="105:24" pos:end="105:26">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="107:9" pos:end="107:17">return <expr pos:start="107:16" pos:end="107:16"><literal type="number" pos:start="107:16" pos:end="107:16">0</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
