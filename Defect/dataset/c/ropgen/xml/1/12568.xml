<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12568.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">apply_window_and_mdct</name><parameter_list pos:start="1:33" pos:end="3:60">(<parameter pos:start="1:34" pos:end="1:57"><decl pos:start="1:34" pos:end="1:57"><type pos:start="1:34" pos:end="1:57"><name pos:start="1:34" pos:end="1:51">vorbis_enc_context</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">venc</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:46"><decl pos:start="3:34" pos:end="3:46"><type pos:start="3:34" pos:end="3:46"><name pos:start="3:34" pos:end="3:38">float</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier><modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:46">audio</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:59"><decl pos:start="3:49" pos:end="3:59"><type pos:start="3:49" pos:end="3:59"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:59">samples</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:13">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">channel</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:17"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:15">float</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type> <name pos:start="9:19" pos:end="9:21">win</name> <init pos:start="9:23" pos:end="9:36">= <expr pos:start="9:25" pos:end="9:36"><name pos:start="9:25" pos:end="9:36"><name pos:start="9:25" pos:end="9:28">venc</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:33">win</name><index pos:start="9:34" pos:end="9:36">[<expr pos:start="9:35" pos:end="9:35"><literal type="number" pos:start="9:35" pos:end="9:35">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:56"><decl pos:start="11:5" pos:end="11:55"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">window_len</name> <init pos:start="11:20" pos:end="11:55">= <expr pos:start="11:22" pos:end="11:55"><literal type="number" pos:start="11:22" pos:end="11:22">1</literal> <operator pos:start="11:24" pos:end="11:25">&lt;&lt;</operator> <operator pos:start="11:27" pos:end="11:27">(</operator><name pos:start="11:28" pos:end="11:50"><name pos:start="11:28" pos:end="11:31">venc</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:47">log2_blocksize</name><index pos:start="11:48" pos:end="11:50">[<expr pos:start="11:49" pos:end="11:49"><literal type="number" pos:start="11:49" pos:end="11:49">0</literal></expr>]</index></name> <operator pos:start="11:52" pos:end="11:52">-</operator> <literal type="number" pos:start="11:54" pos:end="11:54">1</literal><operator pos:start="11:55" pos:end="11:55">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:58"><decl pos:start="13:5" pos:end="13:57"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:9">float</name></type> <name pos:start="13:11" pos:end="13:11">n</name> <init pos:start="13:13" pos:end="13:57">= <expr pos:start="13:15" pos:end="13:57"><operator pos:start="13:15" pos:end="13:15">(</operator><name pos:start="13:16" pos:end="13:20">float</name><operator pos:start="13:21" pos:end="13:21">)</operator><operator pos:start="13:22" pos:end="13:22">(</operator><literal type="number" pos:start="13:23" pos:end="13:23">1</literal> <operator pos:start="13:25" pos:end="13:26">&lt;&lt;</operator> <name pos:start="13:28" pos:end="13:50"><name pos:start="13:28" pos:end="13:31">venc</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:47">log2_blocksize</name><index pos:start="13:48" pos:end="13:50">[<expr pos:start="13:49" pos:end="13:49"><literal type="number" pos:start="13:49" pos:end="13:49">0</literal></expr>]</index></name><operator pos:start="13:51" pos:end="13:51">)</operator> <operator pos:start="13:53" pos:end="13:53">/</operator> <literal type="number" pos:start="13:55" pos:end="13:57">4.0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:41"><decl pos:start="15:5" pos:end="15:40"><type pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:21">AVFloatDSPContext</name> <modifier pos:start="15:23" pos:end="15:23">*</modifier></type><name pos:start="15:24" pos:end="15:27">fdsp</name> <init pos:start="15:29" pos:end="15:40">= <expr pos:start="15:31" pos:end="15:40"><name pos:start="15:31" pos:end="15:40"><name pos:start="15:31" pos:end="15:34">venc</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:40">fdsp</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:17"><if pos:start="19:5" pos:end="21:17">if <condition pos:start="19:8" pos:end="19:38">(<expr pos:start="19:9" pos:end="19:37"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:25"><name pos:start="19:10" pos:end="19:13">venc</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:25">have_saved</name></name> <operator pos:start="19:27" pos:end="19:28">&amp;&amp;</operator> <operator pos:start="19:30" pos:end="19:30">!</operator><name pos:start="19:31" pos:end="19:37">samples</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:17"><block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="41:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:25">(<expr pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:12">venc</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:24">have_saved</name></name></expr>)</condition> <block pos:start="25:27" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:83">

        <for pos:start="27:9" pos:end="31:83">for <control pos:start="27:13" pos:end="27:62">(<init pos:start="27:14" pos:end="27:25"><expr pos:start="27:14" pos:end="27:24"><name pos:start="27:14" pos:end="27:20">channel</name> <operator pos:start="27:22" pos:end="27:22">=</operator> <literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr>;</init> <condition pos:start="27:27" pos:end="27:51"><expr pos:start="27:27" pos:end="27:50"><name pos:start="27:27" pos:end="27:33">channel</name> <operator pos:start="27:35" pos:end="27:35">&lt;</operator> <name pos:start="27:37" pos:end="27:50"><name pos:start="27:37" pos:end="27:40">venc</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:50">channels</name></name></expr>;</condition> <incr pos:start="27:53" pos:end="27:61"><expr pos:start="27:53" pos:end="27:61"><name pos:start="27:53" pos:end="27:59">channel</name><operator pos:start="27:60" pos:end="27:61">++</operator></expr></incr>)</control><block type="pseudo" pos:start="29:13" pos:end="31:83"><block_content pos:start="29:13" pos:end="31:83">

            <expr_stmt pos:start="29:13" pos:end="31:83"><expr pos:start="29:13" pos:end="31:82"><call pos:start="29:13" pos:end="31:82"><name pos:start="29:13" pos:end="29:18">memcpy</name><argument_list pos:start="29:19" pos:end="31:82">(<argument pos:start="29:20" pos:end="29:59"><expr pos:start="29:20" pos:end="29:59"><name pos:start="29:20" pos:end="29:32"><name pos:start="29:20" pos:end="29:23">venc</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:32">samples</name></name> <operator pos:start="29:34" pos:end="29:34">+</operator> <name pos:start="29:36" pos:end="29:42">channel</name> <operator pos:start="29:44" pos:end="29:44">*</operator> <name pos:start="29:46" pos:end="29:55">window_len</name> <operator pos:start="29:57" pos:end="29:57">*</operator> <literal type="number" pos:start="29:59" pos:end="29:59">2</literal></expr></argument>,

                   <argument pos:start="31:20" pos:end="31:53"><expr pos:start="31:20" pos:end="31:53"><name pos:start="31:20" pos:end="31:30"><name pos:start="31:20" pos:end="31:23">venc</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:30">saved</name></name> <operator pos:start="31:32" pos:end="31:32">+</operator> <name pos:start="31:34" pos:end="31:40">channel</name> <operator pos:start="31:42" pos:end="31:42">*</operator> <name pos:start="31:44" pos:end="31:53">window_len</name></expr></argument>, <argument pos:start="31:56" pos:end="31:81"><expr pos:start="31:56" pos:end="31:81"><sizeof pos:start="31:56" pos:end="31:68">sizeof<argument_list pos:start="31:62" pos:end="31:68">(<argument pos:start="31:63" pos:end="31:67"><expr pos:start="31:63" pos:end="31:67"><name pos:start="31:63" pos:end="31:67">float</name></expr></argument>)</argument_list></sizeof> <operator pos:start="31:70" pos:end="31:70">*</operator> <name pos:start="31:72" pos:end="31:81">window_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="41:5">else <block pos:start="33:12" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:47">

        <for pos:start="35:9" pos:end="39:47">for <control pos:start="35:13" pos:end="35:62">(<init pos:start="35:14" pos:end="35:25"><expr pos:start="35:14" pos:end="35:24"><name pos:start="35:14" pos:end="35:20">channel</name> <operator pos:start="35:22" pos:end="35:22">=</operator> <literal type="number" pos:start="35:24" pos:end="35:24">0</literal></expr>;</init> <condition pos:start="35:27" pos:end="35:51"><expr pos:start="35:27" pos:end="35:50"><name pos:start="35:27" pos:end="35:33">channel</name> <operator pos:start="35:35" pos:end="35:35">&lt;</operator> <name pos:start="35:37" pos:end="35:50"><name pos:start="35:37" pos:end="35:40">venc</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:50">channels</name></name></expr>;</condition> <incr pos:start="35:53" pos:end="35:61"><expr pos:start="35:53" pos:end="35:61"><name pos:start="35:53" pos:end="35:59">channel</name><operator pos:start="35:60" pos:end="35:61">++</operator></expr></incr>)</control><block type="pseudo" pos:start="37:13" pos:end="39:47"><block_content pos:start="37:13" pos:end="39:47">

            <expr_stmt pos:start="37:13" pos:end="39:47"><expr pos:start="37:13" pos:end="39:46"><call pos:start="37:13" pos:end="39:46"><name pos:start="37:13" pos:end="37:18">memset</name><argument_list pos:start="37:19" pos:end="39:46">(<argument pos:start="37:20" pos:end="37:59"><expr pos:start="37:20" pos:end="37:59"><name pos:start="37:20" pos:end="37:32"><name pos:start="37:20" pos:end="37:23">venc</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:32">samples</name></name> <operator pos:start="37:34" pos:end="37:34">+</operator> <name pos:start="37:36" pos:end="37:42">channel</name> <operator pos:start="37:44" pos:end="37:44">*</operator> <name pos:start="37:46" pos:end="37:55">window_len</name> <operator pos:start="37:57" pos:end="37:57">*</operator> <literal type="number" pos:start="37:59" pos:end="37:59">2</literal></expr></argument>, <argument pos:start="37:62" pos:end="37:62"><expr pos:start="37:62" pos:end="37:62"><literal type="number" pos:start="37:62" pos:end="37:62">0</literal></expr></argument>,

                   <argument pos:start="39:20" pos:end="39:45"><expr pos:start="39:20" pos:end="39:45"><sizeof pos:start="39:20" pos:end="39:32">sizeof<argument_list pos:start="39:26" pos:end="39:32">(<argument pos:start="39:27" pos:end="39:31"><expr pos:start="39:27" pos:end="39:31"><name pos:start="39:27" pos:end="39:31">float</name></expr></argument>)</argument_list></sizeof> <operator pos:start="39:34" pos:end="39:34">*</operator> <name pos:start="39:36" pos:end="39:45">window_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="45:5" pos:end="67:5"><if pos:start="45:5" pos:end="59:5">if <condition pos:start="45:8" pos:end="45:16">(<expr pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:15">samples</name></expr>)</condition> <block pos:start="45:18" pos:end="59:5">{<block_content pos:start="47:9" pos:end="57:9">

        <for pos:start="47:9" pos:end="57:9">for <control pos:start="47:13" pos:end="47:62">(<init pos:start="47:14" pos:end="47:25"><expr pos:start="47:14" pos:end="47:24"><name pos:start="47:14" pos:end="47:20">channel</name> <operator pos:start="47:22" pos:end="47:22">=</operator> <literal type="number" pos:start="47:24" pos:end="47:24">0</literal></expr>;</init> <condition pos:start="47:27" pos:end="47:51"><expr pos:start="47:27" pos:end="47:50"><name pos:start="47:27" pos:end="47:33">channel</name> <operator pos:start="47:35" pos:end="47:35">&lt;</operator> <name pos:start="47:37" pos:end="47:50"><name pos:start="47:37" pos:end="47:40">venc</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:50">channels</name></name></expr>;</condition> <incr pos:start="47:53" pos:end="47:61"><expr pos:start="47:53" pos:end="47:61"><name pos:start="47:53" pos:end="47:59">channel</name><operator pos:start="47:60" pos:end="47:61">++</operator></expr></incr>)</control> <block pos:start="47:64" pos:end="57:9">{<block_content pos:start="49:13" pos:end="55:67">

            <decl_stmt pos:start="49:13" pos:end="49:82"><decl pos:start="49:13" pos:end="49:81"><type pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:17">float</name> <modifier pos:start="49:19" pos:end="49:19">*</modifier></type><name pos:start="49:20" pos:end="49:25">offset</name> <init pos:start="49:27" pos:end="49:81">= <expr pos:start="49:29" pos:end="49:81"><name pos:start="49:29" pos:end="49:41"><name pos:start="49:29" pos:end="49:32">venc</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:41">samples</name></name> <operator pos:start="49:43" pos:end="49:43">+</operator> <name pos:start="49:45" pos:end="49:51">channel</name> <operator pos:start="49:53" pos:end="49:53">*</operator> <name pos:start="49:55" pos:end="49:64">window_len</name> <operator pos:start="49:66" pos:end="49:66">*</operator> <literal type="number" pos:start="49:68" pos:end="49:70">2</literal> <operator pos:start="49:70" pos:end="49:70">+</operator> <name pos:start="49:72" pos:end="49:81">window_len</name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="53:13" pos:end="53:76"><expr pos:start="53:13" pos:end="53:75"><call pos:start="53:13" pos:end="53:75"><name pos:start="53:13" pos:end="53:37"><name pos:start="53:13" pos:end="53:16">fdsp</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:37">vector_fmul_reverse</name></name><argument_list pos:start="53:38" pos:end="53:75">(<argument pos:start="53:39" pos:end="53:44"><expr pos:start="53:39" pos:end="53:44"><name pos:start="53:39" pos:end="53:44">offset</name></expr></argument>, <argument pos:start="53:47" pos:end="53:60"><expr pos:start="53:47" pos:end="53:60"><name pos:start="53:47" pos:end="53:60"><name pos:start="53:47" pos:end="53:51">audio</name><index pos:start="53:52" pos:end="53:60">[<expr pos:start="53:53" pos:end="53:59"><name pos:start="53:53" pos:end="53:59">channel</name></expr>]</index></name></expr></argument>, <argument pos:start="53:63" pos:end="53:65"><expr pos:start="53:63" pos:end="53:65"><name pos:start="53:63" pos:end="53:65">win</name></expr></argument>, <argument pos:start="53:68" pos:end="53:74"><expr pos:start="53:68" pos:end="53:74"><name pos:start="53:68" pos:end="53:74">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:67"><expr pos:start="55:13" pos:end="55:66"><call pos:start="55:13" pos:end="55:66"><name pos:start="55:13" pos:end="55:36"><name pos:start="55:13" pos:end="55:16">fdsp</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:36">vector_fmul_scalar</name></name><argument_list pos:start="55:37" pos:end="55:66">(<argument pos:start="55:38" pos:end="55:43"><expr pos:start="55:38" pos:end="55:43"><name pos:start="55:38" pos:end="55:43">offset</name></expr></argument>, <argument pos:start="55:46" pos:end="55:51"><expr pos:start="55:46" pos:end="55:51"><name pos:start="55:46" pos:end="55:51">offset</name></expr></argument>, <argument pos:start="55:54" pos:end="55:56"><expr pos:start="55:54" pos:end="55:56"><literal type="number" pos:start="55:54" pos:end="55:54">1</literal><operator pos:start="55:55" pos:end="55:55">/</operator><name pos:start="55:56" pos:end="55:56">n</name></expr></argument>, <argument pos:start="55:59" pos:end="55:65"><expr pos:start="55:59" pos:end="55:65"><name pos:start="55:59" pos:end="55:65">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="67:5">else <block pos:start="59:12" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:50">

        <for pos:start="61:9" pos:end="65:50">for <control pos:start="61:13" pos:end="61:62">(<init pos:start="61:14" pos:end="61:25"><expr pos:start="61:14" pos:end="61:24"><name pos:start="61:14" pos:end="61:20">channel</name> <operator pos:start="61:22" pos:end="61:22">=</operator> <literal type="number" pos:start="61:24" pos:end="61:24">0</literal></expr>;</init> <condition pos:start="61:27" pos:end="61:51"><expr pos:start="61:27" pos:end="61:50"><name pos:start="61:27" pos:end="61:33">channel</name> <operator pos:start="61:35" pos:end="61:35">&lt;</operator> <name pos:start="61:37" pos:end="61:50"><name pos:start="61:37" pos:end="61:40">venc</name><operator pos:start="61:41" pos:end="61:42">-&gt;</operator><name pos:start="61:43" pos:end="61:50">channels</name></name></expr>;</condition> <incr pos:start="61:53" pos:end="61:61"><expr pos:start="61:53" pos:end="61:61"><name pos:start="61:53" pos:end="61:59">channel</name><operator pos:start="61:60" pos:end="61:61">++</operator></expr></incr>)</control><block type="pseudo" pos:start="63:13" pos:end="65:50"><block_content pos:start="63:13" pos:end="65:50">

            <expr_stmt pos:start="63:13" pos:end="65:50"><expr pos:start="63:13" pos:end="65:49"><call pos:start="63:13" pos:end="65:49"><name pos:start="63:13" pos:end="63:18">memset</name><argument_list pos:start="63:19" pos:end="65:49">(<argument pos:start="63:20" pos:end="63:72"><expr pos:start="63:20" pos:end="63:72"><name pos:start="63:20" pos:end="63:32"><name pos:start="63:20" pos:end="63:23">venc</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:32">samples</name></name> <operator pos:start="63:34" pos:end="63:34">+</operator> <name pos:start="63:36" pos:end="63:42">channel</name> <operator pos:start="63:44" pos:end="63:44">*</operator> <name pos:start="63:46" pos:end="63:55">window_len</name> <operator pos:start="63:57" pos:end="63:57">*</operator> <literal type="number" pos:start="63:59" pos:end="63:61">2</literal> <operator pos:start="63:61" pos:end="63:61">+</operator> <name pos:start="63:63" pos:end="63:72">window_len</name></expr></argument>,

                   <argument pos:start="65:20" pos:end="65:20"><expr pos:start="65:20" pos:end="65:20"><literal type="number" pos:start="65:20" pos:end="65:20">0</literal></expr></argument>, <argument pos:start="65:23" pos:end="65:48"><expr pos:start="65:23" pos:end="65:48"><sizeof pos:start="65:23" pos:end="65:35">sizeof<argument_list pos:start="65:29" pos:end="65:35">(<argument pos:start="65:30" pos:end="65:34"><expr pos:start="65:30" pos:end="65:34"><name pos:start="65:30" pos:end="65:34">float</name></expr></argument>)</argument_list></sizeof> <operator pos:start="65:37" pos:end="65:37">*</operator> <name pos:start="65:39" pos:end="65:48">window_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></else></if_stmt>



    <for pos:start="71:5" pos:end="75:63">for <control pos:start="71:9" pos:end="71:58">(<init pos:start="71:10" pos:end="71:21"><expr pos:start="71:10" pos:end="71:20"><name pos:start="71:10" pos:end="71:16">channel</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <literal type="number" pos:start="71:20" pos:end="71:20">0</literal></expr>;</init> <condition pos:start="71:23" pos:end="71:47"><expr pos:start="71:23" pos:end="71:46"><name pos:start="71:23" pos:end="71:29">channel</name> <operator pos:start="71:31" pos:end="71:31">&lt;</operator> <name pos:start="71:33" pos:end="71:46"><name pos:start="71:33" pos:end="71:36">venc</name><operator pos:start="71:37" pos:end="71:38">-&gt;</operator><name pos:start="71:39" pos:end="71:46">channels</name></name></expr>;</condition> <incr pos:start="71:49" pos:end="71:57"><expr pos:start="71:49" pos:end="71:57"><name pos:start="71:49" pos:end="71:55">channel</name><operator pos:start="71:56" pos:end="71:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="73:9" pos:end="75:63"><block_content pos:start="73:9" pos:end="75:63">

        <expr_stmt pos:start="73:9" pos:end="75:63"><expr pos:start="73:9" pos:end="75:62"><name pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:12">venc</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:18">mdct</name><index pos:start="73:19" pos:end="73:21">[<expr pos:start="73:20" pos:end="73:20"><literal type="number" pos:start="73:20" pos:end="73:20">0</literal></expr>]</index></name><operator pos:start="73:22" pos:end="73:22">.</operator><call pos:start="73:23" pos:end="75:62"><name pos:start="73:23" pos:end="73:31">mdct_calc</name><argument_list pos:start="73:32" pos:end="75:62">(<argument pos:start="73:33" pos:end="73:46"><expr pos:start="73:33" pos:end="73:46"><operator pos:start="73:33" pos:end="73:33">&amp;</operator><name pos:start="73:34" pos:end="73:46"><name pos:start="73:34" pos:end="73:37">venc</name><operator pos:start="73:38" pos:end="73:39">-&gt;</operator><name pos:start="73:40" pos:end="73:43">mdct</name><index pos:start="73:44" pos:end="73:46">[<expr pos:start="73:45" pos:end="73:45"><literal type="number" pos:start="73:45" pos:end="73:45">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="73:49" pos:end="73:83"><expr pos:start="73:49" pos:end="73:83"><name pos:start="73:49" pos:end="73:60"><name pos:start="73:49" pos:end="73:52">venc</name><operator pos:start="73:53" pos:end="73:54">-&gt;</operator><name pos:start="73:55" pos:end="73:60">coeffs</name></name> <operator pos:start="73:62" pos:end="73:62">+</operator> <name pos:start="73:64" pos:end="73:70">channel</name> <operator pos:start="73:72" pos:end="73:72">*</operator> <name pos:start="73:74" pos:end="73:83">window_len</name></expr></argument>,

                     <argument pos:start="75:22" pos:end="75:61"><expr pos:start="75:22" pos:end="75:61"><name pos:start="75:22" pos:end="75:34"><name pos:start="75:22" pos:end="75:25">venc</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:34">samples</name></name> <operator pos:start="75:36" pos:end="75:36">+</operator> <name pos:start="75:38" pos:end="75:44">channel</name> <operator pos:start="75:46" pos:end="75:46">*</operator> <name pos:start="75:48" pos:end="75:57">window_len</name> <operator pos:start="75:59" pos:end="75:59">*</operator> <literal type="number" pos:start="75:61" pos:end="75:61">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="79:5" pos:end="99:5"><if pos:start="79:5" pos:end="95:5">if <condition pos:start="79:8" pos:end="79:16">(<expr pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:15">samples</name></expr>)</condition> <block pos:start="79:18" pos:end="95:5">{<block_content pos:start="81:9" pos:end="93:29">

        <for pos:start="81:9" pos:end="91:9">for <control pos:start="81:13" pos:end="81:62">(<init pos:start="81:14" pos:end="81:25"><expr pos:start="81:14" pos:end="81:24"><name pos:start="81:14" pos:end="81:20">channel</name> <operator pos:start="81:22" pos:end="81:22">=</operator> <literal type="number" pos:start="81:24" pos:end="81:24">0</literal></expr>;</init> <condition pos:start="81:27" pos:end="81:51"><expr pos:start="81:27" pos:end="81:50"><name pos:start="81:27" pos:end="81:33">channel</name> <operator pos:start="81:35" pos:end="81:35">&lt;</operator> <name pos:start="81:37" pos:end="81:50"><name pos:start="81:37" pos:end="81:40">venc</name><operator pos:start="81:41" pos:end="81:42">-&gt;</operator><name pos:start="81:43" pos:end="81:50">channels</name></name></expr>;</condition> <incr pos:start="81:53" pos:end="81:61"><expr pos:start="81:53" pos:end="81:61"><name pos:start="81:53" pos:end="81:59">channel</name><operator pos:start="81:60" pos:end="81:61">++</operator></expr></incr>)</control> <block pos:start="81:64" pos:end="91:9">{<block_content pos:start="83:13" pos:end="89:67">

            <decl_stmt pos:start="83:13" pos:end="83:63"><decl pos:start="83:13" pos:end="83:62"><type pos:start="83:13" pos:end="83:19"><name pos:start="83:13" pos:end="83:17">float</name> <modifier pos:start="83:19" pos:end="83:19">*</modifier></type><name pos:start="83:20" pos:end="83:25">offset</name> <init pos:start="83:27" pos:end="83:62">= <expr pos:start="83:29" pos:end="83:62"><name pos:start="83:29" pos:end="83:39"><name pos:start="83:29" pos:end="83:32">venc</name><operator pos:start="83:33" pos:end="83:34">-&gt;</operator><name pos:start="83:35" pos:end="83:39">saved</name></name> <operator pos:start="83:41" pos:end="83:41">+</operator> <name pos:start="83:43" pos:end="83:49">channel</name> <operator pos:start="83:51" pos:end="83:51">*</operator> <name pos:start="83:53" pos:end="83:62">window_len</name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="87:13" pos:end="87:68"><expr pos:start="87:13" pos:end="87:67"><call pos:start="87:13" pos:end="87:67"><name pos:start="87:13" pos:end="87:29"><name pos:start="87:13" pos:end="87:16">fdsp</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:29">vector_fmul</name></name><argument_list pos:start="87:30" pos:end="87:67">(<argument pos:start="87:31" pos:end="87:36"><expr pos:start="87:31" pos:end="87:36"><name pos:start="87:31" pos:end="87:36">offset</name></expr></argument>, <argument pos:start="87:39" pos:end="87:52"><expr pos:start="87:39" pos:end="87:52"><name pos:start="87:39" pos:end="87:52"><name pos:start="87:39" pos:end="87:43">audio</name><index pos:start="87:44" pos:end="87:52">[<expr pos:start="87:45" pos:end="87:51"><name pos:start="87:45" pos:end="87:51">channel</name></expr>]</index></name></expr></argument>, <argument pos:start="87:55" pos:end="87:57"><expr pos:start="87:55" pos:end="87:57"><name pos:start="87:55" pos:end="87:57">win</name></expr></argument>, <argument pos:start="87:60" pos:end="87:66"><expr pos:start="87:60" pos:end="87:66"><name pos:start="87:60" pos:end="87:66">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:67"><expr pos:start="89:13" pos:end="89:66"><call pos:start="89:13" pos:end="89:66"><name pos:start="89:13" pos:end="89:36"><name pos:start="89:13" pos:end="89:16">fdsp</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:36">vector_fmul_scalar</name></name><argument_list pos:start="89:37" pos:end="89:66">(<argument pos:start="89:38" pos:end="89:43"><expr pos:start="89:38" pos:end="89:43"><name pos:start="89:38" pos:end="89:43">offset</name></expr></argument>, <argument pos:start="89:46" pos:end="89:51"><expr pos:start="89:46" pos:end="89:51"><name pos:start="89:46" pos:end="89:51">offset</name></expr></argument>, <argument pos:start="89:54" pos:end="89:56"><expr pos:start="89:54" pos:end="89:56"><literal type="number" pos:start="89:54" pos:end="89:54">1</literal><operator pos:start="89:55" pos:end="89:55">/</operator><name pos:start="89:56" pos:end="89:56">n</name></expr></argument>, <argument pos:start="89:59" pos:end="89:65"><expr pos:start="89:59" pos:end="89:65"><name pos:start="89:59" pos:end="89:65">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="93:9" pos:end="93:29"><expr pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:12">venc</name><operator pos:start="93:13" pos:end="93:14">-&gt;</operator><name pos:start="93:15" pos:end="93:24">have_saved</name></name> <operator pos:start="93:26" pos:end="93:26">=</operator> <literal type="number" pos:start="93:28" pos:end="93:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="99:5">else <block pos:start="95:12" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:29">

        <expr_stmt pos:start="97:9" pos:end="97:29"><expr pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:12">venc</name><operator pos:start="97:13" pos:end="97:14">-&gt;</operator><name pos:start="97:15" pos:end="97:24">have_saved</name></name> <operator pos:start="97:26" pos:end="97:26">=</operator> <literal type="number" pos:start="97:28" pos:end="97:28">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="101:5" pos:end="101:13">return <expr pos:start="101:12" pos:end="101:12"><literal type="number" pos:start="101:12" pos:end="101:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
