<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24537.c" pos:tabs="8"><function pos:start="1:1" pos:end="537:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">read_header</name><parameter_list pos:start="1:23" pos:end="1:42">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:38">AVFormatContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="537:1">{<block_content pos:start="5:5" pos:end="535:15">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">BRSTMDemuxContext</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">b</name> <init pos:start="5:26" pos:end="5:39">= <expr pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:28">s</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">bom</name></decl>, <decl pos:start="7:14" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:18">major</name></decl>, <decl pos:start="7:21" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:25">minor</name></decl>, <decl pos:start="7:28" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:28" pos:end="7:32">codec</name></decl>, <decl pos:start="7:35" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:35" pos:end="7:39">chunk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:20">h1offset</name></decl>, <decl pos:start="9:23" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:23" pos:end="9:25">pos</name></decl>, <decl pos:start="9:28" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:28" pos:end="9:34">toffset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:17">size</name></decl>, <decl pos:start="11:20" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:20" pos:end="11:24">asize</name></decl>, <decl pos:start="11:27" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:27" pos:end="11:31">start</name> <init pos:start="11:33" pos:end="11:35">= <expr pos:start="11:35" pos:end="11:35"><literal type="number" pos:start="11:35" pos:end="11:35">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">AVStream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:25">= <expr pos:start="15:15" pos:end="15:25"><name pos:start="15:15" pos:end="15:25">AVERROR_EOF</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">loop</name> <init pos:start="17:14" pos:end="17:16">= <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:51"><decl pos:start="19:5" pos:end="19:50"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:13">bfstm</name> <init pos:start="19:15" pos:end="19:50">= <expr pos:start="19:17" pos:end="19:50"><operator pos:start="19:17" pos:end="19:17">!</operator><call pos:start="19:18" pos:end="19:50"><name pos:start="19:18" pos:end="19:23">strcmp</name><argument_list pos:start="19:24" pos:end="19:50">(<argument pos:start="19:25" pos:end="19:31"><expr pos:start="19:25" pos:end="19:31"><literal type="string" pos:start="19:25" pos:end="19:31">"bfstm"</literal></expr></argument>, <argument pos:start="19:34" pos:end="19:49"><expr pos:start="19:34" pos:end="19:49"><name pos:start="19:34" pos:end="19:49"><name pos:start="19:34" pos:end="19:34">s</name><operator pos:start="19:35" pos:end="19:36">-&gt;</operator><name pos:start="19:37" pos:end="19:43">iformat</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:49">name</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:6">st</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <call pos:start="23:10" pos:end="23:37"><name pos:start="23:10" pos:end="23:28">avformat_new_stream</name><argument_list pos:start="23:29" pos:end="23:37">(<argument pos:start="23:30" pos:end="23:30"><expr pos:start="23:30" pos:end="23:30"><name pos:start="23:30" pos:end="23:30">s</name></expr></argument>, <argument pos:start="23:33" pos:end="23:36"><expr pos:start="23:33" pos:end="23:36"><name pos:start="23:33" pos:end="23:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:31"><if pos:start="25:5" pos:end="27:31">if <condition pos:start="25:8" pos:end="25:12">(<expr pos:start="25:9" pos:end="25:11"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:11">st</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:31"><block_content pos:start="27:9" pos:end="27:31">

        <return pos:start="27:9" pos:end="27:31">return <expr pos:start="27:16" pos:end="27:30"><call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:47"><expr pos:start="29:5" pos:end="29:46"><name pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:6">st</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:13">codec</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:25">codec_type</name></name> <operator pos:start="29:27" pos:end="29:27">=</operator> <name pos:start="29:29" pos:end="29:46">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:24"><expr pos:start="33:5" pos:end="33:23"><call pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:13">avio_skip</name><argument_list pos:start="33:14" pos:end="33:23">(<argument pos:start="33:15" pos:end="33:19"><expr pos:start="33:15" pos:end="33:19"><name pos:start="33:15" pos:end="33:19"><name pos:start="33:15" pos:end="33:15">s</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:19">pb</name></name></expr></argument>, <argument pos:start="33:22" pos:end="33:22"><expr pos:start="33:22" pos:end="33:22"><literal type="number" pos:start="33:22" pos:end="33:22">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:27"><expr pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:7">bom</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:26"><name pos:start="37:11" pos:end="37:19">avio_rb16</name><argument_list pos:start="37:20" pos:end="37:26">(<argument pos:start="37:21" pos:end="37:25"><expr pos:start="37:21" pos:end="37:25"><name pos:start="37:21" pos:end="37:25"><name pos:start="37:21" pos:end="37:21">s</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:39">(<expr pos:start="39:9" pos:end="39:38"><name pos:start="39:9" pos:end="39:11">bom</name> <operator pos:start="39:13" pos:end="39:14">!=</operator> <literal type="number" pos:start="39:16" pos:end="39:21">0xFEFF</literal> <operator pos:start="39:23" pos:end="39:24">&amp;&amp;</operator> <name pos:start="39:26" pos:end="39:28">bom</name> <operator pos:start="39:30" pos:end="39:31">!=</operator> <literal type="number" pos:start="39:33" pos:end="39:38">0xFFFE</literal></expr>)</condition> <block pos:start="39:41" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:35">

        <expr_stmt pos:start="41:9" pos:end="41:65"><expr pos:start="41:9" pos:end="41:64"><call pos:start="41:9" pos:end="41:64"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:64">(<argument pos:start="41:16" pos:end="41:16"><expr pos:start="41:16" pos:end="41:16"><name pos:start="41:16" pos:end="41:16">s</name></expr></argument>, <argument pos:start="41:19" pos:end="41:30"><expr pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:33" pos:end="41:58"><expr pos:start="41:33" pos:end="41:58"><literal type="string" pos:start="41:33" pos:end="41:58">"invalid byte order: %X\n"</literal></expr></argument>, <argument pos:start="41:61" pos:end="41:63"><expr pos:start="41:61" pos:end="41:63"><name pos:start="41:61" pos:end="41:63">bom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:35">return <expr pos:start="43:16" pos:end="43:34"><name pos:start="43:16" pos:end="43:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="51:29"><if pos:start="49:5" pos:end="51:29">if <condition pos:start="49:8" pos:end="49:22">(<expr pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:11">bom</name> <operator pos:start="49:13" pos:end="49:14">==</operator> <literal type="number" pos:start="49:16" pos:end="49:21">0xFFFE</literal></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:29"><block_content pos:start="51:9" pos:end="51:29">

        <expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:9">b</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:24">little_endian</name></name> <operator pos:start="51:26" pos:end="51:26">=</operator> <literal type="number" pos:start="51:28" pos:end="51:28">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="163:5"><if pos:start="55:5" pos:end="79:5">if <condition pos:start="55:8" pos:end="55:15">(<expr pos:start="55:9" pos:end="55:14"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:14">bfstm</name></expr>)</condition> <block pos:start="55:17" pos:end="79:5">{<block_content pos:start="57:9" pos:end="77:39">

        <expr_stmt pos:start="57:9" pos:end="57:31"><expr pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:13">major</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <call pos:start="57:17" pos:end="57:30"><name pos:start="57:17" pos:end="57:23">avio_r8</name><argument_list pos:start="57:24" pos:end="57:30">(<argument pos:start="57:25" pos:end="57:29"><expr pos:start="57:25" pos:end="57:29"><name pos:start="57:25" pos:end="57:29"><name pos:start="57:25" pos:end="57:25">s</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:31"><expr pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:13">minor</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <call pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:23">avio_r8</name><argument_list pos:start="59:24" pos:end="59:30">(<argument pos:start="59:25" pos:end="59:29"><expr pos:start="59:25" pos:end="59:29"><name pos:start="59:25" pos:end="59:29"><name pos:start="59:25" pos:end="59:25">s</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:28"><expr pos:start="61:9" pos:end="61:27"><call pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:17">avio_skip</name><argument_list pos:start="61:18" pos:end="61:27">(<argument pos:start="61:19" pos:end="61:23"><expr pos:start="61:19" pos:end="61:23"><name pos:start="61:19" pos:end="61:23"><name pos:start="61:19" pos:end="61:19">s</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:23">pb</name></name></expr></argument>, <argument pos:start="61:26" pos:end="61:26"><expr pos:start="61:26" pos:end="61:26"><literal type="number" pos:start="61:26" pos:end="61:26">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="61:30" pos:end="61:44">// size of file</comment>

        <expr_stmt pos:start="63:9" pos:end="63:25"><expr pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:12">size</name> <operator pos:start="63:14" pos:end="63:14">=</operator> <call pos:start="63:16" pos:end="63:24"><name pos:start="63:16" pos:end="63:21">read16</name><argument_list pos:start="63:22" pos:end="63:24">(<argument pos:start="63:23" pos:end="63:23"><expr pos:start="63:23" pos:end="63:23"><name pos:start="63:23" pos:end="63:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:39"><if pos:start="65:9" pos:end="67:39">if <condition pos:start="65:12" pos:end="65:22">(<expr pos:start="65:13" pos:end="65:21"><name pos:start="65:13" pos:end="65:16">size</name> <operator pos:start="65:18" pos:end="65:18">&lt;</operator> <literal type="number" pos:start="65:20" pos:end="65:21">14</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:39"><block_content pos:start="67:13" pos:end="67:39">

            <return pos:start="67:13" pos:end="67:39">return <expr pos:start="67:20" pos:end="67:38"><name pos:start="67:20" pos:end="67:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:36"><expr pos:start="71:9" pos:end="71:35"><call pos:start="71:9" pos:end="71:35"><name pos:start="71:9" pos:end="71:17">avio_skip</name><argument_list pos:start="71:18" pos:end="71:35">(<argument pos:start="71:19" pos:end="71:23"><expr pos:start="71:19" pos:end="71:23"><name pos:start="71:19" pos:end="71:23"><name pos:start="71:19" pos:end="71:19">s</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:23">pb</name></name></expr></argument>, <argument pos:start="71:26" pos:end="71:34"><expr pos:start="71:26" pos:end="71:34"><name pos:start="71:26" pos:end="71:29">size</name> <operator pos:start="71:31" pos:end="71:31">-</operator> <literal type="number" pos:start="71:33" pos:end="71:34">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:31"><expr pos:start="73:9" pos:end="73:30"><name pos:start="73:9" pos:end="73:11">pos</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="73:30"><name pos:start="73:15" pos:end="73:23">avio_tell</name><argument_list pos:start="73:24" pos:end="73:30">(<argument pos:start="73:25" pos:end="73:29"><expr pos:start="73:25" pos:end="73:29"><name pos:start="73:25" pos:end="73:29"><name pos:start="73:25" pos:end="73:25">s</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="77:39"><if pos:start="75:9" pos:end="77:39">if <condition pos:start="75:12" pos:end="75:55">(<expr pos:start="75:13" pos:end="75:54"><call pos:start="75:13" pos:end="75:28"><name pos:start="75:13" pos:end="75:21">avio_rl32</name><argument_list pos:start="75:22" pos:end="75:28">(<argument pos:start="75:23" pos:end="75:27"><expr pos:start="75:23" pos:end="75:27"><name pos:start="75:23" pos:end="75:27"><name pos:start="75:23" pos:end="75:23">s</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:27">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="75:30" pos:end="75:31">!=</operator> <call pos:start="75:33" pos:end="75:54"><name pos:start="75:33" pos:end="75:37">MKTAG</name><argument_list pos:start="75:38" pos:end="75:54">(<argument pos:start="75:39" pos:end="75:41"><expr pos:start="75:39" pos:end="75:41"><literal type="char" pos:start="75:39" pos:end="75:41">'H'</literal></expr></argument>,<argument pos:start="75:43" pos:end="75:45"><expr pos:start="75:43" pos:end="75:45"><literal type="char" pos:start="75:43" pos:end="75:45">'E'</literal></expr></argument>,<argument pos:start="75:47" pos:end="75:49"><expr pos:start="75:47" pos:end="75:49"><literal type="char" pos:start="75:47" pos:end="75:49">'A'</literal></expr></argument>,<argument pos:start="75:51" pos:end="75:53"><expr pos:start="75:51" pos:end="75:53"><literal type="char" pos:start="75:51" pos:end="75:53">'D'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:39"><block_content pos:start="77:13" pos:end="77:39">

            <return pos:start="77:13" pos:end="77:39">return <expr pos:start="77:20" pos:end="77:38"><name pos:start="77:20" pos:end="77:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="163:5">else <block pos:start="79:12" pos:end="163:5">{<block_content pos:start="81:9" pos:end="161:39">

        <decl_stmt pos:start="81:9" pos:end="81:33"><decl pos:start="81:9" pos:end="81:32"><type pos:start="81:9" pos:end="81:16"><name pos:start="81:9" pos:end="81:16">uint32_t</name></type> <name pos:start="81:18" pos:end="81:28">info_offset</name> <init pos:start="81:30" pos:end="81:32">= <expr pos:start="81:32" pos:end="81:32"><literal type="number" pos:start="81:32" pos:end="81:32">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="83:9" pos:end="83:47"><decl pos:start="83:9" pos:end="83:30"><type pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:16">uint16_t</name></type> <name pos:start="83:18" pos:end="83:30">section_count</name></decl>, <decl pos:start="83:33" pos:end="83:43"><type ref="prev" pos:start="83:9" pos:end="83:16"/><name pos:start="83:33" pos:end="83:43">header_size</name></decl>, <decl pos:start="83:46" pos:end="83:46"><type ref="prev" pos:start="83:9" pos:end="83:16"/><name pos:start="83:46" pos:end="83:46">i</name></decl>;</decl_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:32"><expr pos:start="87:9" pos:end="87:31"><name pos:start="87:9" pos:end="87:19">header_size</name> <operator pos:start="87:21" pos:end="87:21">=</operator> <call pos:start="87:23" pos:end="87:31"><name pos:start="87:23" pos:end="87:28">read16</name><argument_list pos:start="87:29" pos:end="87:31">(<argument pos:start="87:30" pos:end="87:30"><expr pos:start="87:30" pos:end="87:30"><name pos:start="87:30" pos:end="87:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="87:34" pos:end="87:37">// 6</comment>



        <expr_stmt pos:start="91:9" pos:end="91:28"><expr pos:start="91:9" pos:end="91:27"><call pos:start="91:9" pos:end="91:27"><name pos:start="91:9" pos:end="91:17">avio_skip</name><argument_list pos:start="91:18" pos:end="91:27">(<argument pos:start="91:19" pos:end="91:23"><expr pos:start="91:19" pos:end="91:23"><name pos:start="91:19" pos:end="91:23"><name pos:start="91:19" pos:end="91:19">s</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:23">pb</name></name></expr></argument>, <argument pos:start="91:26" pos:end="91:26"><expr pos:start="91:26" pos:end="91:26"><literal type="number" pos:start="91:26" pos:end="91:26">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="91:30" pos:end="91:59">// Unknown constant 0x00030000</comment>

        <expr_stmt pos:start="93:9" pos:end="93:28"><expr pos:start="93:9" pos:end="93:27"><call pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:17">avio_skip</name><argument_list pos:start="93:18" pos:end="93:27">(<argument pos:start="93:19" pos:end="93:23"><expr pos:start="93:19" pos:end="93:23"><name pos:start="93:19" pos:end="93:23"><name pos:start="93:19" pos:end="93:19">s</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:23">pb</name></name></expr></argument>, <argument pos:start="93:26" pos:end="93:26"><expr pos:start="93:26" pos:end="93:26"><literal type="number" pos:start="93:26" pos:end="93:26">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="93:30" pos:end="93:44">// size of file</comment>

        <expr_stmt pos:start="95:9" pos:end="95:34"><expr pos:start="95:9" pos:end="95:33"><name pos:start="95:9" pos:end="95:21">section_count</name> <operator pos:start="95:23" pos:end="95:23">=</operator> <call pos:start="95:25" pos:end="95:33"><name pos:start="95:25" pos:end="95:30">read16</name><argument_list pos:start="95:31" pos:end="95:33">(<argument pos:start="95:32" pos:end="95:32"><expr pos:start="95:32" pos:end="95:32"><name pos:start="95:32" pos:end="95:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:28"><expr pos:start="97:9" pos:end="97:27"><call pos:start="97:9" pos:end="97:27"><name pos:start="97:9" pos:end="97:17">avio_skip</name><argument_list pos:start="97:18" pos:end="97:27">(<argument pos:start="97:19" pos:end="97:23"><expr pos:start="97:19" pos:end="97:23"><name pos:start="97:19" pos:end="97:23"><name pos:start="97:19" pos:end="97:19">s</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:23">pb</name></name></expr></argument>, <argument pos:start="97:26" pos:end="97:26"><expr pos:start="97:26" pos:end="97:26"><literal type="number" pos:start="97:26" pos:end="97:26">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="97:30" pos:end="97:39">// padding</comment>

        <for pos:start="99:9" pos:end="145:9">for <control pos:start="99:13" pos:end="103:46">(<init pos:start="99:14" pos:end="99:19"><expr pos:start="99:14" pos:end="99:18"><name pos:start="99:14" pos:end="99:14">i</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <literal type="number" pos:start="99:18" pos:end="99:18">0</literal></expr>;</init> <condition pos:start="99:21" pos:end="103:41"><expr pos:start="99:21" pos:end="103:40"><call pos:start="99:21" pos:end="99:36"><name pos:start="99:21" pos:end="99:29">avio_tell</name><argument_list pos:start="99:30" pos:end="99:36">(<argument pos:start="99:31" pos:end="99:35"><expr pos:start="99:31" pos:end="99:35"><name pos:start="99:31" pos:end="99:35"><name pos:start="99:31" pos:end="99:31">s</name><operator pos:start="99:32" pos:end="99:33">-&gt;</operator><name pos:start="99:34" pos:end="99:35">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="99:38" pos:end="99:38">&lt;</operator> <name pos:start="99:40" pos:end="99:50">header_size</name>

                    <operator pos:start="101:21" pos:end="101:22">&amp;&amp;</operator> <operator pos:start="101:24" pos:end="101:24">!</operator><operator pos:start="101:25" pos:end="101:25">(</operator><name pos:start="101:26" pos:end="101:30">start</name> <operator pos:start="101:32" pos:end="101:33">&amp;&amp;</operator> <name pos:start="101:35" pos:end="101:45">info_offset</name><operator pos:start="101:46" pos:end="101:46">)</operator>

                    <operator pos:start="103:21" pos:end="103:22">&amp;&amp;</operator> <name pos:start="103:24" pos:end="103:24">i</name> <operator pos:start="103:26" pos:end="103:26">&lt;</operator> <name pos:start="103:28" pos:end="103:40">section_count</name></expr>;</condition> <incr pos:start="103:43" pos:end="103:45"><expr pos:start="103:43" pos:end="103:45"><name pos:start="103:43" pos:end="103:43">i</name><operator pos:start="103:44" pos:end="103:45">++</operator></expr></incr>)</control> <block pos:start="103:48" pos:end="145:9">{<block_content pos:start="105:13" pos:end="143:13">

            <decl_stmt pos:start="105:13" pos:end="105:38"><decl pos:start="105:13" pos:end="105:37"><type pos:start="105:13" pos:end="105:20"><name pos:start="105:13" pos:end="105:20">uint16_t</name></type> <name pos:start="105:22" pos:end="105:25">flag</name> <init pos:start="105:27" pos:end="105:37">= <expr pos:start="105:29" pos:end="105:37"><call pos:start="105:29" pos:end="105:37"><name pos:start="105:29" pos:end="105:34">read16</name><argument_list pos:start="105:35" pos:end="105:37">(<argument pos:start="105:36" pos:end="105:36"><expr pos:start="105:36" pos:end="105:36"><name pos:start="105:36" pos:end="105:36">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:32"><expr pos:start="107:13" pos:end="107:31"><call pos:start="107:13" pos:end="107:31"><name pos:start="107:13" pos:end="107:21">avio_skip</name><argument_list pos:start="107:22" pos:end="107:31">(<argument pos:start="107:23" pos:end="107:27"><expr pos:start="107:23" pos:end="107:27"><name pos:start="107:23" pos:end="107:27"><name pos:start="107:23" pos:end="107:23">s</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:27">pb</name></name></expr></argument>, <argument pos:start="107:30" pos:end="107:30"><expr pos:start="107:30" pos:end="107:30"><literal type="number" pos:start="107:30" pos:end="107:30">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="109:13" pos:end="143:13">switch <condition pos:start="109:20" pos:end="109:25">(<expr pos:start="109:21" pos:end="109:24"><name pos:start="109:21" pos:end="109:24">flag</name></expr>)</condition> <block pos:start="109:27" pos:end="143:13">{<block_content pos:start="111:13" pos:end="141:22">

            <case pos:start="111:13" pos:end="111:24">case <expr pos:start="111:18" pos:end="111:23"><literal type="number" pos:start="111:18" pos:end="111:23">0x4000</literal></expr>:</case>

                <expr_stmt pos:start="113:17" pos:end="113:40"><expr pos:start="113:17" pos:end="113:39"><name pos:start="113:17" pos:end="113:27">info_offset</name> <operator pos:start="113:29" pos:end="113:29">=</operator> <call pos:start="113:31" pos:end="113:39"><name pos:start="113:31" pos:end="113:36">read32</name><argument_list pos:start="113:37" pos:end="113:39">(<argument pos:start="113:38" pos:end="113:38"><expr pos:start="113:38" pos:end="113:38"><name pos:start="113:38" pos:end="113:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="115:17" pos:end="115:31">/*info_size =*/</comment> <expr_stmt pos:start="115:33" pos:end="115:42"><expr pos:start="115:33" pos:end="115:41"><call pos:start="115:33" pos:end="115:41"><name pos:start="115:33" pos:end="115:38">read32</name><argument_list pos:start="115:39" pos:end="115:41">(<argument pos:start="115:40" pos:end="115:40"><expr pos:start="115:40" pos:end="115:40"><name pos:start="115:40" pos:end="115:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="117:17" pos:end="117:22">break;</break>

            <case pos:start="119:13" pos:end="119:24">case <expr pos:start="119:18" pos:end="119:23"><literal type="number" pos:start="119:18" pos:end="119:23">0x4001</literal></expr>:</case>

                <expr_stmt pos:start="121:17" pos:end="121:36"><expr pos:start="121:17" pos:end="121:35"><call pos:start="121:17" pos:end="121:35"><name pos:start="121:17" pos:end="121:25">avio_skip</name><argument_list pos:start="121:26" pos:end="121:35">(<argument pos:start="121:27" pos:end="121:31"><expr pos:start="121:27" pos:end="121:31"><name pos:start="121:27" pos:end="121:31"><name pos:start="121:27" pos:end="121:27">s</name><operator pos:start="121:28" pos:end="121:29">-&gt;</operator><name pos:start="121:30" pos:end="121:31">pb</name></name></expr></argument>, <argument pos:start="121:34" pos:end="121:34"><expr pos:start="121:34" pos:end="121:34"><literal type="number" pos:start="121:34" pos:end="121:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="121:38" pos:end="121:51">// seek offset</comment>

                <expr_stmt pos:start="123:17" pos:end="123:36"><expr pos:start="123:17" pos:end="123:35"><call pos:start="123:17" pos:end="123:35"><name pos:start="123:17" pos:end="123:25">avio_skip</name><argument_list pos:start="123:26" pos:end="123:35">(<argument pos:start="123:27" pos:end="123:31"><expr pos:start="123:27" pos:end="123:31"><name pos:start="123:27" pos:end="123:31"><name pos:start="123:27" pos:end="123:27">s</name><operator pos:start="123:28" pos:end="123:29">-&gt;</operator><name pos:start="123:30" pos:end="123:31">pb</name></name></expr></argument>, <argument pos:start="123:34" pos:end="123:34"><expr pos:start="123:34" pos:end="123:34"><literal type="number" pos:start="123:34" pos:end="123:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="123:38" pos:end="123:49">// seek size</comment>

                <break pos:start="125:17" pos:end="125:22">break;</break>

            <case pos:start="127:13" pos:end="127:24">case <expr pos:start="127:18" pos:end="127:23"><literal type="number" pos:start="127:18" pos:end="127:23">0x4002</literal></expr>:</case>

                <expr_stmt pos:start="129:17" pos:end="129:38"><expr pos:start="129:17" pos:end="129:37"><name pos:start="129:17" pos:end="129:21">start</name> <operator pos:start="129:23" pos:end="129:23">=</operator> <call pos:start="129:25" pos:end="129:33"><name pos:start="129:25" pos:end="129:30">read32</name><argument_list pos:start="129:31" pos:end="129:33">(<argument pos:start="129:32" pos:end="129:32"><expr pos:start="129:32" pos:end="129:32"><name pos:start="129:32" pos:end="129:32">s</name></expr></argument>)</argument_list></call> <operator pos:start="129:35" pos:end="129:35">+</operator> <literal type="number" pos:start="129:37" pos:end="129:37">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:36"><expr pos:start="131:17" pos:end="131:35"><call pos:start="131:17" pos:end="131:35"><name pos:start="131:17" pos:end="131:25">avio_skip</name><argument_list pos:start="131:26" pos:end="131:35">(<argument pos:start="131:27" pos:end="131:31"><expr pos:start="131:27" pos:end="131:31"><name pos:start="131:27" pos:end="131:31"><name pos:start="131:27" pos:end="131:27">s</name><operator pos:start="131:28" pos:end="131:29">-&gt;</operator><name pos:start="131:30" pos:end="131:31">pb</name></name></expr></argument>, <argument pos:start="131:34" pos:end="131:34"><expr pos:start="131:34" pos:end="131:34"><literal type="number" pos:start="131:34" pos:end="131:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="131:38" pos:end="131:61">//data_size = read32(s);</comment>

                <break pos:start="133:17" pos:end="133:22">break;</break>

            <case pos:start="135:13" pos:end="135:24">case <expr pos:start="135:18" pos:end="135:23"><literal type="number" pos:start="135:18" pos:end="135:23">0x4003</literal></expr>:</case>

                <expr_stmt pos:start="137:17" pos:end="137:36"><expr pos:start="137:17" pos:end="137:35"><call pos:start="137:17" pos:end="137:35"><name pos:start="137:17" pos:end="137:25">avio_skip</name><argument_list pos:start="137:26" pos:end="137:35">(<argument pos:start="137:27" pos:end="137:31"><expr pos:start="137:27" pos:end="137:31"><name pos:start="137:27" pos:end="137:31"><name pos:start="137:27" pos:end="137:27">s</name><operator pos:start="137:28" pos:end="137:29">-&gt;</operator><name pos:start="137:30" pos:end="137:31">pb</name></name></expr></argument>, <argument pos:start="137:34" pos:end="137:34"><expr pos:start="137:34" pos:end="137:34"><literal type="number" pos:start="137:34" pos:end="137:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="137:38" pos:end="137:51">// REGN offset</comment>

                <expr_stmt pos:start="139:17" pos:end="139:36"><expr pos:start="139:17" pos:end="139:35"><call pos:start="139:17" pos:end="139:35"><name pos:start="139:17" pos:end="139:25">avio_skip</name><argument_list pos:start="139:26" pos:end="139:35">(<argument pos:start="139:27" pos:end="139:31"><expr pos:start="139:27" pos:end="139:31"><name pos:start="139:27" pos:end="139:31"><name pos:start="139:27" pos:end="139:27">s</name><operator pos:start="139:28" pos:end="139:29">-&gt;</operator><name pos:start="139:30" pos:end="139:31">pb</name></name></expr></argument>, <argument pos:start="139:34" pos:end="139:34"><expr pos:start="139:34" pos:end="139:34"><literal type="number" pos:start="139:34" pos:end="139:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="139:38" pos:end="139:49">// REGN size</comment>

                <break pos:start="141:17" pos:end="141:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></for>



        <if_stmt pos:start="149:9" pos:end="151:39"><if pos:start="149:9" pos:end="151:39">if <condition pos:start="149:12" pos:end="149:35">(<expr pos:start="149:13" pos:end="149:34"><operator pos:start="149:13" pos:end="149:13">!</operator><name pos:start="149:14" pos:end="149:24">info_offset</name> <operator pos:start="149:26" pos:end="149:27">||</operator> <operator pos:start="149:29" pos:end="149:29">!</operator><name pos:start="149:30" pos:end="149:34">start</name></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:39"><block_content pos:start="151:13" pos:end="151:39">

            <return pos:start="151:13" pos:end="151:39">return <expr pos:start="151:20" pos:end="151:38"><name pos:start="151:20" pos:end="151:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="155:9" pos:end="155:57"><expr pos:start="155:9" pos:end="155:56"><call pos:start="155:9" pos:end="155:56"><name pos:start="155:9" pos:end="155:17">avio_skip</name><argument_list pos:start="155:18" pos:end="155:56">(<argument pos:start="155:19" pos:end="155:23"><expr pos:start="155:19" pos:end="155:23"><name pos:start="155:19" pos:end="155:23"><name pos:start="155:19" pos:end="155:19">s</name><operator pos:start="155:20" pos:end="155:21">-&gt;</operator><name pos:start="155:22" pos:end="155:23">pb</name></name></expr></argument>, <argument pos:start="155:26" pos:end="155:55"><expr pos:start="155:26" pos:end="155:55"><name pos:start="155:26" pos:end="155:36">info_offset</name> <operator pos:start="155:38" pos:end="155:38">-</operator> <call pos:start="155:40" pos:end="155:55"><name pos:start="155:40" pos:end="155:48">avio_tell</name><argument_list pos:start="155:49" pos:end="155:55">(<argument pos:start="155:50" pos:end="155:54"><expr pos:start="155:50" pos:end="155:54"><name pos:start="155:50" pos:end="155:54"><name pos:start="155:50" pos:end="155:50">s</name><operator pos:start="155:51" pos:end="155:52">-&gt;</operator><name pos:start="155:53" pos:end="155:54">pb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:31"><expr pos:start="157:9" pos:end="157:30"><name pos:start="157:9" pos:end="157:11">pos</name> <operator pos:start="157:13" pos:end="157:13">=</operator> <call pos:start="157:15" pos:end="157:30"><name pos:start="157:15" pos:end="157:23">avio_tell</name><argument_list pos:start="157:24" pos:end="157:30">(<argument pos:start="157:25" pos:end="157:29"><expr pos:start="157:25" pos:end="157:29"><name pos:start="157:25" pos:end="157:29"><name pos:start="157:25" pos:end="157:25">s</name><operator pos:start="157:26" pos:end="157:27">-&gt;</operator><name pos:start="157:28" pos:end="157:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="159:9" pos:end="161:39"><if pos:start="159:9" pos:end="161:39">if <condition pos:start="159:12" pos:end="159:55">(<expr pos:start="159:13" pos:end="159:54"><call pos:start="159:13" pos:end="159:28"><name pos:start="159:13" pos:end="159:21">avio_rl32</name><argument_list pos:start="159:22" pos:end="159:28">(<argument pos:start="159:23" pos:end="159:27"><expr pos:start="159:23" pos:end="159:27"><name pos:start="159:23" pos:end="159:27"><name pos:start="159:23" pos:end="159:23">s</name><operator pos:start="159:24" pos:end="159:25">-&gt;</operator><name pos:start="159:26" pos:end="159:27">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="159:30" pos:end="159:31">!=</operator> <call pos:start="159:33" pos:end="159:54"><name pos:start="159:33" pos:end="159:37">MKTAG</name><argument_list pos:start="159:38" pos:end="159:54">(<argument pos:start="159:39" pos:end="159:41"><expr pos:start="159:39" pos:end="159:41"><literal type="char" pos:start="159:39" pos:end="159:41">'I'</literal></expr></argument>,<argument pos:start="159:43" pos:end="159:45"><expr pos:start="159:43" pos:end="159:45"><literal type="char" pos:start="159:43" pos:end="159:45">'N'</literal></expr></argument>,<argument pos:start="159:47" pos:end="159:49"><expr pos:start="159:47" pos:end="159:49"><literal type="char" pos:start="159:47" pos:end="159:49">'F'</literal></expr></argument>,<argument pos:start="159:51" pos:end="159:53"><expr pos:start="159:51" pos:end="159:53"><literal type="char" pos:start="159:51" pos:end="159:53">'O'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="161:39"><block_content pos:start="161:13" pos:end="161:39">

            <return pos:start="161:13" pos:end="161:39">return <expr pos:start="161:20" pos:end="161:38"><name pos:start="161:20" pos:end="161:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="167:5" pos:end="167:21"><expr pos:start="167:5" pos:end="167:20"><name pos:start="167:5" pos:end="167:8">size</name> <operator pos:start="167:10" pos:end="167:10">=</operator> <call pos:start="167:12" pos:end="167:20"><name pos:start="167:12" pos:end="167:17">read32</name><argument_list pos:start="167:18" pos:end="167:20">(<argument pos:start="167:19" pos:end="167:19"><expr pos:start="167:19" pos:end="167:19"><name pos:start="167:19" pos:end="167:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="169:5" pos:end="171:35"><if pos:start="169:5" pos:end="171:35">if <condition pos:start="169:8" pos:end="169:19">(<expr pos:start="169:9" pos:end="169:18"><name pos:start="169:9" pos:end="169:12">size</name> <operator pos:start="169:14" pos:end="169:14">&lt;</operator> <literal type="number" pos:start="169:16" pos:end="169:18">192</literal></expr>)</condition><block type="pseudo" pos:start="171:9" pos:end="171:35"><block_content pos:start="171:9" pos:end="171:35">

        <return pos:start="171:9" pos:end="171:35">return <expr pos:start="171:16" pos:end="171:34"><name pos:start="171:16" pos:end="171:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:24"><expr pos:start="173:5" pos:end="173:23"><call pos:start="173:5" pos:end="173:23"><name pos:start="173:5" pos:end="173:13">avio_skip</name><argument_list pos:start="173:14" pos:end="173:23">(<argument pos:start="173:15" pos:end="173:19"><expr pos:start="173:15" pos:end="173:19"><name pos:start="173:15" pos:end="173:19"><name pos:start="173:15" pos:end="173:15">s</name><operator pos:start="173:16" pos:end="173:17">-&gt;</operator><name pos:start="173:18" pos:end="173:19">pb</name></name></expr></argument>, <argument pos:start="173:22" pos:end="173:22"><expr pos:start="173:22" pos:end="173:22"><literal type="number" pos:start="173:22" pos:end="173:22">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="173:26" pos:end="173:35">// unknown</comment>

    <expr_stmt pos:start="175:5" pos:end="175:25"><expr pos:start="175:5" pos:end="175:24"><name pos:start="175:5" pos:end="175:12">h1offset</name> <operator pos:start="175:14" pos:end="175:14">=</operator> <call pos:start="175:16" pos:end="175:24"><name pos:start="175:16" pos:end="175:21">read32</name><argument_list pos:start="175:22" pos:end="175:24">(<argument pos:start="175:23" pos:end="175:23"><expr pos:start="175:23" pos:end="175:23"><name pos:start="175:23" pos:end="175:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="177:5" pos:end="179:35"><if pos:start="177:5" pos:end="179:35">if <condition pos:start="177:8" pos:end="177:24">(<expr pos:start="177:9" pos:end="177:23"><name pos:start="177:9" pos:end="177:16">h1offset</name> <operator pos:start="177:18" pos:end="177:18">&gt;</operator> <name pos:start="177:20" pos:end="177:23">size</name></expr>)</condition><block type="pseudo" pos:start="179:9" pos:end="179:35"><block_content pos:start="179:9" pos:end="179:35">

        <return pos:start="179:9" pos:end="179:35">return <expr pos:start="179:16" pos:end="179:34"><name pos:start="179:16" pos:end="179:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:25"><expr pos:start="181:5" pos:end="181:24"><call pos:start="181:5" pos:end="181:24"><name pos:start="181:5" pos:end="181:13">avio_skip</name><argument_list pos:start="181:14" pos:end="181:24">(<argument pos:start="181:15" pos:end="181:19"><expr pos:start="181:15" pos:end="181:19"><name pos:start="181:15" pos:end="181:19"><name pos:start="181:15" pos:end="181:15">s</name><operator pos:start="181:16" pos:end="181:17">-&gt;</operator><name pos:start="181:18" pos:end="181:19">pb</name></name></expr></argument>, <argument pos:start="181:22" pos:end="181:23"><expr pos:start="181:22" pos:end="181:23"><literal type="number" pos:start="181:22" pos:end="181:23">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:31"><expr pos:start="183:5" pos:end="183:30"><name pos:start="183:5" pos:end="183:11">toffset</name> <operator pos:start="183:13" pos:end="183:13">=</operator> <call pos:start="183:15" pos:end="183:23"><name pos:start="183:15" pos:end="183:20">read32</name><argument_list pos:start="183:21" pos:end="183:23">(<argument pos:start="183:22" pos:end="183:22"><expr pos:start="183:22" pos:end="183:22"><name pos:start="183:22" pos:end="183:22">s</name></expr></argument>)</argument_list></call> <operator pos:start="183:25" pos:end="183:25">+</operator> <literal type="number" pos:start="183:27" pos:end="183:30">16LL</literal></expr>;</expr_stmt>

    <if_stmt pos:start="185:5" pos:end="187:35"><if pos:start="185:5" pos:end="187:35">if <condition pos:start="185:8" pos:end="185:23">(<expr pos:start="185:9" pos:end="185:22"><name pos:start="185:9" pos:end="185:15">toffset</name> <operator pos:start="185:17" pos:end="185:17">&gt;</operator> <name pos:start="185:19" pos:end="185:22">size</name></expr>)</condition><block type="pseudo" pos:start="187:9" pos:end="187:35"><block_content pos:start="187:9" pos:end="187:35">

        <return pos:start="187:9" pos:end="187:35">return <expr pos:start="187:16" pos:end="187:34"><name pos:start="187:16" pos:end="187:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:60"><expr pos:start="191:5" pos:end="191:59"><call pos:start="191:5" pos:end="191:59"><name pos:start="191:5" pos:end="191:13">avio_skip</name><argument_list pos:start="191:14" pos:end="191:59">(<argument pos:start="191:15" pos:end="191:19"><expr pos:start="191:15" pos:end="191:19"><name pos:start="191:15" pos:end="191:19"><name pos:start="191:15" pos:end="191:15">s</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:19">pb</name></name></expr></argument>, <argument pos:start="191:22" pos:end="191:58"><expr pos:start="191:22" pos:end="191:58"><name pos:start="191:22" pos:end="191:24">pos</name> <operator pos:start="191:26" pos:end="191:26">+</operator> <name pos:start="191:28" pos:end="191:35">h1offset</name> <operator pos:start="191:37" pos:end="191:37">+</operator> <literal type="number" pos:start="191:39" pos:end="191:41">8</literal> <operator pos:start="191:41" pos:end="191:41">-</operator> <call pos:start="191:43" pos:end="191:58"><name pos:start="191:43" pos:end="191:51">avio_tell</name><argument_list pos:start="191:52" pos:end="191:58">(<argument pos:start="191:53" pos:end="191:57"><expr pos:start="191:53" pos:end="191:57"><name pos:start="191:53" pos:end="191:57"><name pos:start="191:53" pos:end="191:53">s</name><operator pos:start="191:54" pos:end="191:55">-&gt;</operator><name pos:start="191:56" pos:end="191:57">pb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:27"><expr pos:start="193:5" pos:end="193:26"><name pos:start="193:5" pos:end="193:9">codec</name> <operator pos:start="193:11" pos:end="193:11">=</operator> <call pos:start="193:13" pos:end="193:26"><name pos:start="193:13" pos:end="193:19">avio_r8</name><argument_list pos:start="193:20" pos:end="193:26">(<argument pos:start="193:21" pos:end="193:25"><expr pos:start="193:21" pos:end="193:25"><name pos:start="193:21" pos:end="193:25"><name pos:start="193:21" pos:end="193:21">s</name><operator pos:start="193:22" pos:end="193:23">-&gt;</operator><name pos:start="193:24" pos:end="193:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="197:5" pos:end="219:5">switch <condition pos:start="197:12" pos:end="197:18">(<expr pos:start="197:13" pos:end="197:17"><name pos:start="197:13" pos:end="197:17">codec</name></expr>)</condition> <block pos:start="197:20" pos:end="219:5">{<block_content pos:start="199:5" pos:end="217:36">

    <case pos:start="199:5" pos:end="199:11">case <expr pos:start="199:10" pos:end="199:10"><literal type="number" pos:start="199:10" pos:end="199:10">0</literal></expr>:</case> <expr_stmt pos:start="199:13" pos:end="199:46"><expr pos:start="199:13" pos:end="199:45"><name pos:start="199:13" pos:end="199:17">codec</name> <operator pos:start="199:19" pos:end="199:19">=</operator> <name pos:start="199:21" pos:end="199:45">AV_CODEC_ID_PCM_S8_PLANAR</name></expr>;</expr_stmt>    <break pos:start="199:51" pos:end="199:56">break;</break>

    <case pos:start="201:5" pos:end="201:11">case <expr pos:start="201:10" pos:end="201:10"><literal type="number" pos:start="201:10" pos:end="201:10">1</literal></expr>:</case> <expr_stmt pos:start="201:13" pos:end="205:49"><expr pos:start="201:13" pos:end="205:48"><name pos:start="201:13" pos:end="201:17">codec</name> <operator pos:start="201:19" pos:end="201:19">=</operator> <ternary pos:start="201:21" pos:end="205:48"><condition pos:start="201:21" pos:end="201:38"><expr pos:start="201:21" pos:end="201:36"><name pos:start="201:21" pos:end="201:36"><name pos:start="201:21" pos:end="201:21">b</name><operator pos:start="201:22" pos:end="201:23">-&gt;</operator><name pos:start="201:24" pos:end="201:36">little_endian</name></name></expr> ?</condition><then pos:start="203:21" pos:end="203:48">

                    <expr pos:start="203:21" pos:end="203:48"><name pos:start="203:21" pos:end="203:48">AV_CODEC_ID_PCM_S16LE_PLANAR</name></expr> </then><else pos:start="203:50" pos:end="205:48">:

                    <expr pos:start="205:21" pos:end="205:48"><name pos:start="205:21" pos:end="205:48">AV_CODEC_ID_PCM_S16BE_PLANAR</name></expr></else></ternary></expr>;</expr_stmt> <break pos:start="205:51" pos:end="205:56">break;</break>

    <case pos:start="207:5" pos:end="207:11">case <expr pos:start="207:10" pos:end="207:10"><literal type="number" pos:start="207:10" pos:end="207:10">2</literal></expr>:</case> <expr_stmt pos:start="207:13" pos:end="211:42"><expr pos:start="207:13" pos:end="211:41"><name pos:start="207:13" pos:end="207:17">codec</name> <operator pos:start="207:19" pos:end="207:19">=</operator> <ternary pos:start="207:21" pos:end="211:41"><condition pos:start="207:21" pos:end="207:38"><expr pos:start="207:21" pos:end="207:36"><name pos:start="207:21" pos:end="207:36"><name pos:start="207:21" pos:end="207:21">b</name><operator pos:start="207:22" pos:end="207:23">-&gt;</operator><name pos:start="207:24" pos:end="207:36">little_endian</name></name></expr> ?</condition><then pos:start="209:21" pos:end="209:44">

                    <expr pos:start="209:21" pos:end="209:44"><name pos:start="209:21" pos:end="209:44">AV_CODEC_ID_ADPCM_THP_LE</name></expr> </then><else pos:start="209:46" pos:end="211:41">:

                    <expr pos:start="211:21" pos:end="211:41"><name pos:start="211:21" pos:end="211:41">AV_CODEC_ID_ADPCM_THP</name></expr></else></ternary></expr>;</expr_stmt>        <break pos:start="211:51" pos:end="211:56">break;</break>

    <default pos:start="213:5" pos:end="213:12">default:</default>

        <expr_stmt pos:start="215:9" pos:end="215:52"><expr pos:start="215:9" pos:end="215:51"><call pos:start="215:9" pos:end="215:51"><name pos:start="215:9" pos:end="215:29">avpriv_request_sample</name><argument_list pos:start="215:30" pos:end="215:51">(<argument pos:start="215:31" pos:end="215:31"><expr pos:start="215:31" pos:end="215:31"><name pos:start="215:31" pos:end="215:31">s</name></expr></argument>, <argument pos:start="215:34" pos:end="215:43"><expr pos:start="215:34" pos:end="215:43"><literal type="string" pos:start="215:34" pos:end="215:43">"codec %d"</literal></expr></argument>, <argument pos:start="215:46" pos:end="215:50"><expr pos:start="215:46" pos:end="215:50"><name pos:start="215:46" pos:end="215:50">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="217:9" pos:end="217:36">return <expr pos:start="217:16" pos:end="217:35"><name pos:start="217:16" pos:end="217:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="223:5" pos:end="223:26"><expr pos:start="223:5" pos:end="223:25"><name pos:start="223:5" pos:end="223:8">loop</name> <operator pos:start="223:10" pos:end="223:10">=</operator> <call pos:start="223:12" pos:end="223:25"><name pos:start="223:12" pos:end="223:18">avio_r8</name><argument_list pos:start="223:19" pos:end="223:25">(<argument pos:start="223:20" pos:end="223:24"><expr pos:start="223:20" pos:end="223:24"><name pos:start="223:20" pos:end="223:24"><name pos:start="223:20" pos:end="223:20">s</name><operator pos:start="223:21" pos:end="223:22">-&gt;</operator><name pos:start="223:23" pos:end="223:24">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="223:28" pos:end="223:39">// loop flag</comment>

    <expr_stmt pos:start="225:5" pos:end="225:32"><expr pos:start="225:5" pos:end="225:31"><name pos:start="225:5" pos:end="225:23"><name pos:start="225:5" pos:end="225:6">st</name><operator pos:start="225:7" pos:end="225:8">-&gt;</operator><name pos:start="225:9" pos:end="225:13">codec</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:23">codec_id</name></name> <operator pos:start="225:25" pos:end="225:25">=</operator> <name pos:start="225:27" pos:end="225:31">codec</name></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:41"><expr pos:start="227:5" pos:end="227:40"><name pos:start="227:5" pos:end="227:23"><name pos:start="227:5" pos:end="227:6">st</name><operator pos:start="227:7" pos:end="227:8">-&gt;</operator><name pos:start="227:9" pos:end="227:13">codec</name><operator pos:start="227:14" pos:end="227:15">-&gt;</operator><name pos:start="227:16" pos:end="227:23">channels</name></name> <operator pos:start="227:25" pos:end="227:25">=</operator> <call pos:start="227:27" pos:end="227:40"><name pos:start="227:27" pos:end="227:33">avio_r8</name><argument_list pos:start="227:34" pos:end="227:40">(<argument pos:start="227:35" pos:end="227:39"><expr pos:start="227:35" pos:end="227:39"><name pos:start="227:35" pos:end="227:39"><name pos:start="227:35" pos:end="227:35">s</name><operator pos:start="227:36" pos:end="227:37">-&gt;</operator><name pos:start="227:38" pos:end="227:39">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="229:5" pos:end="231:35"><if pos:start="229:5" pos:end="231:35">if <condition pos:start="229:8" pos:end="229:29">(<expr pos:start="229:9" pos:end="229:28"><operator pos:start="229:9" pos:end="229:9">!</operator><name pos:start="229:10" pos:end="229:28"><name pos:start="229:10" pos:end="229:11">st</name><operator pos:start="229:12" pos:end="229:13">-&gt;</operator><name pos:start="229:14" pos:end="229:18">codec</name><operator pos:start="229:19" pos:end="229:20">-&gt;</operator><name pos:start="229:21" pos:end="229:28">channels</name></name></expr>)</condition><block type="pseudo" pos:start="231:9" pos:end="231:35"><block_content pos:start="231:9" pos:end="231:35">

        <return pos:start="231:9" pos:end="231:35">return <expr pos:start="231:16" pos:end="231:34"><name pos:start="231:16" pos:end="231:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="235:5" pos:end="235:24"><expr pos:start="235:5" pos:end="235:23"><call pos:start="235:5" pos:end="235:23"><name pos:start="235:5" pos:end="235:13">avio_skip</name><argument_list pos:start="235:14" pos:end="235:23">(<argument pos:start="235:15" pos:end="235:19"><expr pos:start="235:15" pos:end="235:19"><name pos:start="235:15" pos:end="235:19"><name pos:start="235:15" pos:end="235:15">s</name><operator pos:start="235:16" pos:end="235:17">-&gt;</operator><name pos:start="235:18" pos:end="235:19">pb</name></name></expr></argument>, <argument pos:start="235:22" pos:end="235:22"><expr pos:start="235:22" pos:end="235:22"><literal type="number" pos:start="235:22" pos:end="235:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="235:26" pos:end="235:35">// padding</comment>



    <expr_stmt pos:start="239:5" pos:end="239:59"><expr pos:start="239:5" pos:end="239:58"><name pos:start="239:5" pos:end="239:26"><name pos:start="239:5" pos:end="239:6">st</name><operator pos:start="239:7" pos:end="239:8">-&gt;</operator><name pos:start="239:9" pos:end="239:13">codec</name><operator pos:start="239:14" pos:end="239:15">-&gt;</operator><name pos:start="239:16" pos:end="239:26">sample_rate</name></name> <operator pos:start="239:28" pos:end="239:28">=</operator> <ternary pos:start="239:30" pos:end="239:58"><condition pos:start="239:30" pos:end="239:36"><expr pos:start="239:30" pos:end="239:34"><name pos:start="239:30" pos:end="239:34">bfstm</name></expr> ?</condition><then pos:start="239:38" pos:end="239:46"> <expr pos:start="239:38" pos:end="239:46"><call pos:start="239:38" pos:end="239:46"><name pos:start="239:38" pos:end="239:43">read32</name><argument_list pos:start="239:44" pos:end="239:46">(<argument pos:start="239:45" pos:end="239:45"><expr pos:start="239:45" pos:end="239:45"><name pos:start="239:45" pos:end="239:45">s</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="239:48" pos:end="239:58">: <expr pos:start="239:50" pos:end="239:58"><call pos:start="239:50" pos:end="239:58"><name pos:start="239:50" pos:end="239:55">read16</name><argument_list pos:start="239:56" pos:end="239:58">(<argument pos:start="239:57" pos:end="239:57"><expr pos:start="239:57" pos:end="239:57"><name pos:start="239:57" pos:end="239:57">s</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="241:5" pos:end="243:35"><if pos:start="241:5" pos:end="243:35">if <condition pos:start="241:8" pos:end="241:32">(<expr pos:start="241:9" pos:end="241:31"><operator pos:start="241:9" pos:end="241:9">!</operator><name pos:start="241:10" pos:end="241:31"><name pos:start="241:10" pos:end="241:11">st</name><operator pos:start="241:12" pos:end="241:13">-&gt;</operator><name pos:start="241:14" pos:end="241:18">codec</name><operator pos:start="241:19" pos:end="241:20">-&gt;</operator><name pos:start="241:21" pos:end="241:31">sample_rate</name></name></expr>)</condition><block type="pseudo" pos:start="243:9" pos:end="243:35"><block_content pos:start="243:9" pos:end="243:35">

        <return pos:start="243:9" pos:end="243:35">return <expr pos:start="243:16" pos:end="243:34"><name pos:start="243:16" pos:end="243:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="247:5" pos:end="249:28"><if pos:start="247:5" pos:end="249:28">if <condition pos:start="247:8" pos:end="247:15">(<expr pos:start="247:9" pos:end="247:14"><operator pos:start="247:9" pos:end="247:9">!</operator><name pos:start="247:10" pos:end="247:14">bfstm</name></expr>)</condition><block type="pseudo" pos:start="249:9" pos:end="249:28"><block_content pos:start="249:9" pos:end="249:28">

        <expr_stmt pos:start="249:9" pos:end="249:28"><expr pos:start="249:9" pos:end="249:27"><call pos:start="249:9" pos:end="249:27"><name pos:start="249:9" pos:end="249:17">avio_skip</name><argument_list pos:start="249:18" pos:end="249:27">(<argument pos:start="249:19" pos:end="249:23"><expr pos:start="249:19" pos:end="249:23"><name pos:start="249:19" pos:end="249:23"><name pos:start="249:19" pos:end="249:19">s</name><operator pos:start="249:20" pos:end="249:21">-&gt;</operator><name pos:start="249:22" pos:end="249:23">pb</name></name></expr></argument>, <argument pos:start="249:26" pos:end="249:26"><expr pos:start="249:26" pos:end="249:26"><literal type="number" pos:start="249:26" pos:end="249:26">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="249:30" pos:end="249:39">// padding</comment>



    <if_stmt pos:start="253:5" pos:end="269:5"><if pos:start="253:5" pos:end="265:5">if <condition pos:start="253:8" pos:end="253:13">(<expr pos:start="253:9" pos:end="253:12"><name pos:start="253:9" pos:end="253:12">loop</name></expr>)</condition> <block pos:start="253:15" pos:end="265:5">{<block_content pos:start="255:9" pos:end="263:35">

        <if_stmt pos:start="255:9" pos:end="263:35"><if pos:start="255:9" pos:end="263:35">if <condition pos:start="255:12" pos:end="261:35">(<expr pos:start="255:13" pos:end="261:34"><call pos:start="255:13" pos:end="261:30"><name pos:start="255:13" pos:end="255:27">av_dict_set_int</name><argument_list pos:start="255:28" pos:end="261:30">(<argument pos:start="255:29" pos:end="255:40"><expr pos:start="255:29" pos:end="255:40"><operator pos:start="255:29" pos:end="255:29">&amp;</operator><name pos:start="255:30" pos:end="255:40"><name pos:start="255:30" pos:end="255:30">s</name><operator pos:start="255:31" pos:end="255:32">-&gt;</operator><name pos:start="255:33" pos:end="255:40">metadata</name></name></expr></argument>, <argument pos:start="255:43" pos:end="255:54"><expr pos:start="255:43" pos:end="255:54"><literal type="string" pos:start="255:43" pos:end="255:54">"loop_start"</literal></expr></argument>,

                            <argument pos:start="257:29" pos:end="259:62"><expr pos:start="257:29" pos:end="259:62"><call pos:start="257:29" pos:end="259:62"><name pos:start="257:29" pos:end="257:38">av_rescale</name><argument_list pos:start="257:39" pos:end="259:62">(<argument pos:start="257:40" pos:end="257:48"><expr pos:start="257:40" pos:end="257:48"><call pos:start="257:40" pos:end="257:48"><name pos:start="257:40" pos:end="257:45">read32</name><argument_list pos:start="257:46" pos:end="257:48">(<argument pos:start="257:47" pos:end="257:47"><expr pos:start="257:47" pos:end="257:47"><name pos:start="257:47" pos:end="257:47">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="257:51" pos:end="257:62"><expr pos:start="257:51" pos:end="257:62"><name pos:start="257:51" pos:end="257:62">AV_TIME_BASE</name></expr></argument>,

                                       <argument pos:start="259:40" pos:end="259:61"><expr pos:start="259:40" pos:end="259:61"><name pos:start="259:40" pos:end="259:61"><name pos:start="259:40" pos:end="259:41">st</name><operator pos:start="259:42" pos:end="259:43">-&gt;</operator><name pos:start="259:44" pos:end="259:48">codec</name><operator pos:start="259:49" pos:end="259:50">-&gt;</operator><name pos:start="259:51" pos:end="259:61">sample_rate</name></name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="261:29" pos:end="261:29"><expr pos:start="261:29" pos:end="261:29"><literal type="number" pos:start="261:29" pos:end="261:29">0</literal></expr></argument>)</argument_list></call> <operator pos:start="261:32" pos:end="261:32">&lt;</operator> <literal type="number" pos:start="261:34" pos:end="261:34">0</literal></expr>)</condition><block type="pseudo" pos:start="263:13" pos:end="263:35"><block_content pos:start="263:13" pos:end="263:35">

            <return pos:start="263:13" pos:end="263:35">return <expr pos:start="263:20" pos:end="263:34"><call pos:start="263:20" pos:end="263:34"><name pos:start="263:20" pos:end="263:26">AVERROR</name><argument_list pos:start="263:27" pos:end="263:34">(<argument pos:start="263:28" pos:end="263:33"><expr pos:start="263:28" pos:end="263:33"><name pos:start="263:28" pos:end="263:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="265:7" pos:end="269:5">else <block pos:start="265:12" pos:end="269:5">{<block_content pos:start="267:9" pos:end="267:28">

        <expr_stmt pos:start="267:9" pos:end="267:28"><expr pos:start="267:9" pos:end="267:27"><call pos:start="267:9" pos:end="267:27"><name pos:start="267:9" pos:end="267:17">avio_skip</name><argument_list pos:start="267:18" pos:end="267:27">(<argument pos:start="267:19" pos:end="267:23"><expr pos:start="267:19" pos:end="267:23"><name pos:start="267:19" pos:end="267:23"><name pos:start="267:19" pos:end="267:19">s</name><operator pos:start="267:20" pos:end="267:21">-&gt;</operator><name pos:start="267:22" pos:end="267:23">pb</name></name></expr></argument>, <argument pos:start="267:26" pos:end="267:26"><expr pos:start="267:26" pos:end="267:26"><literal type="number" pos:start="267:26" pos:end="267:26">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="273:5" pos:end="273:23"><expr pos:start="273:5" pos:end="273:22"><name pos:start="273:5" pos:end="273:18"><name pos:start="273:5" pos:end="273:6">st</name><operator pos:start="273:7" pos:end="273:8">-&gt;</operator><name pos:start="273:9" pos:end="273:18">start_time</name></name> <operator pos:start="273:20" pos:end="273:20">=</operator> <literal type="number" pos:start="273:22" pos:end="273:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="275:5" pos:end="275:29"><expr pos:start="275:5" pos:end="275:28"><name pos:start="275:5" pos:end="275:16"><name pos:start="275:5" pos:end="275:6">st</name><operator pos:start="275:7" pos:end="275:8">-&gt;</operator><name pos:start="275:9" pos:end="275:16">duration</name></name> <operator pos:start="275:18" pos:end="275:18">=</operator> <call pos:start="275:20" pos:end="275:28"><name pos:start="275:20" pos:end="275:25">read32</name><argument_list pos:start="275:26" pos:end="275:28">(<argument pos:start="275:27" pos:end="275:27"><expr pos:start="275:27" pos:end="275:27"><name pos:start="275:27" pos:end="275:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="277:5" pos:end="277:59"><expr pos:start="277:5" pos:end="277:58"><call pos:start="277:5" pos:end="277:58"><name pos:start="277:5" pos:end="277:23">avpriv_set_pts_info</name><argument_list pos:start="277:24" pos:end="277:58">(<argument pos:start="277:25" pos:end="277:26"><expr pos:start="277:25" pos:end="277:26"><name pos:start="277:25" pos:end="277:26">st</name></expr></argument>, <argument pos:start="277:29" pos:end="277:30"><expr pos:start="277:29" pos:end="277:30"><literal type="number" pos:start="277:29" pos:end="277:30">64</literal></expr></argument>, <argument pos:start="277:33" pos:end="277:33"><expr pos:start="277:33" pos:end="277:33"><literal type="number" pos:start="277:33" pos:end="277:33">1</literal></expr></argument>, <argument pos:start="277:36" pos:end="277:57"><expr pos:start="277:36" pos:end="277:57"><name pos:start="277:36" pos:end="277:57"><name pos:start="277:36" pos:end="277:37">st</name><operator pos:start="277:38" pos:end="277:39">-&gt;</operator><name pos:start="277:40" pos:end="277:44">codec</name><operator pos:start="277:45" pos:end="277:46">-&gt;</operator><name pos:start="277:47" pos:end="277:57">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="281:5" pos:end="283:26"><if pos:start="281:5" pos:end="283:26">if <condition pos:start="281:8" pos:end="281:15">(<expr pos:start="281:9" pos:end="281:14"><operator pos:start="281:9" pos:end="281:9">!</operator><name pos:start="281:10" pos:end="281:14">bfstm</name></expr>)</condition><block type="pseudo" pos:start="283:9" pos:end="283:26"><block_content pos:start="283:9" pos:end="283:26">

        <expr_stmt pos:start="283:9" pos:end="283:26"><expr pos:start="283:9" pos:end="283:25"><name pos:start="283:9" pos:end="283:13">start</name> <operator pos:start="283:15" pos:end="283:15">=</operator> <call pos:start="283:17" pos:end="283:25"><name pos:start="283:17" pos:end="283:22">read32</name><argument_list pos:start="283:23" pos:end="283:25">(<argument pos:start="283:24" pos:end="283:24"><expr pos:start="283:24" pos:end="283:24"><name pos:start="283:24" pos:end="283:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="285:5" pos:end="285:25"><expr pos:start="285:5" pos:end="285:24"><name pos:start="285:5" pos:end="285:20"><name pos:start="285:5" pos:end="285:5">b</name><operator pos:start="285:6" pos:end="285:7">-&gt;</operator><name pos:start="285:8" pos:end="285:20">current_block</name></name> <operator pos:start="285:22" pos:end="285:22">=</operator> <literal type="number" pos:start="285:24" pos:end="285:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="287:5" pos:end="287:31"><expr pos:start="287:5" pos:end="287:30"><name pos:start="287:5" pos:end="287:18"><name pos:start="287:5" pos:end="287:5">b</name><operator pos:start="287:6" pos:end="287:7">-&gt;</operator><name pos:start="287:8" pos:end="287:18">block_count</name></name> <operator pos:start="287:20" pos:end="287:20">=</operator> <call pos:start="287:22" pos:end="287:30"><name pos:start="287:22" pos:end="287:27">read32</name><argument_list pos:start="287:28" pos:end="287:30">(<argument pos:start="287:29" pos:end="287:29"><expr pos:start="287:29" pos:end="287:29"><name pos:start="287:29" pos:end="287:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="289:5" pos:end="295:5"><if pos:start="289:5" pos:end="295:5">if <condition pos:start="289:8" pos:end="289:36">(<expr pos:start="289:9" pos:end="289:35"><name pos:start="289:9" pos:end="289:22"><name pos:start="289:9" pos:end="289:9">b</name><operator pos:start="289:10" pos:end="289:11">-&gt;</operator><name pos:start="289:12" pos:end="289:22">block_count</name></name> <operator pos:start="289:24" pos:end="289:24">&gt;</operator> <name pos:start="289:26" pos:end="289:35">UINT16_MAX</name></expr>)</condition> <block pos:start="289:38" pos:end="295:5">{<block_content pos:start="291:9" pos:end="293:35">

        <expr_stmt pos:start="291:9" pos:end="291:75"><expr pos:start="291:9" pos:end="291:74"><call pos:start="291:9" pos:end="291:74"><name pos:start="291:9" pos:end="291:14">av_log</name><argument_list pos:start="291:15" pos:end="291:74">(<argument pos:start="291:16" pos:end="291:16"><expr pos:start="291:16" pos:end="291:16"><name pos:start="291:16" pos:end="291:16">s</name></expr></argument>, <argument pos:start="291:19" pos:end="291:32"><expr pos:start="291:19" pos:end="291:32"><name pos:start="291:19" pos:end="291:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="291:35" pos:end="291:57"><expr pos:start="291:35" pos:end="291:57"><literal type="string" pos:start="291:35" pos:end="291:57">"too many blocks: %u\n"</literal></expr></argument>, <argument pos:start="291:60" pos:end="291:73"><expr pos:start="291:60" pos:end="291:73"><name pos:start="291:60" pos:end="291:73"><name pos:start="291:60" pos:end="291:60">b</name><operator pos:start="291:61" pos:end="291:62">-&gt;</operator><name pos:start="291:63" pos:end="291:73">block_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="293:9" pos:end="293:35">return <expr pos:start="293:16" pos:end="293:34"><name pos:start="293:16" pos:end="293:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="299:5" pos:end="299:30"><expr pos:start="299:5" pos:end="299:29"><name pos:start="299:5" pos:end="299:17"><name pos:start="299:5" pos:end="299:5">b</name><operator pos:start="299:6" pos:end="299:7">-&gt;</operator><name pos:start="299:8" pos:end="299:17">block_size</name></name> <operator pos:start="299:19" pos:end="299:19">=</operator> <call pos:start="299:21" pos:end="299:29"><name pos:start="299:21" pos:end="299:26">read32</name><argument_list pos:start="299:27" pos:end="299:29">(<argument pos:start="299:28" pos:end="299:28"><expr pos:start="299:28" pos:end="299:28"><name pos:start="299:28" pos:end="299:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="301:5" pos:end="303:35"><if pos:start="301:5" pos:end="303:35">if <condition pos:start="301:8" pos:end="301:57">(<expr pos:start="301:9" pos:end="301:56"><name pos:start="301:9" pos:end="301:21"><name pos:start="301:9" pos:end="301:9">b</name><operator pos:start="301:10" pos:end="301:11">-&gt;</operator><name pos:start="301:12" pos:end="301:21">block_size</name></name> <operator pos:start="301:23" pos:end="301:23">&gt;</operator> <name pos:start="301:25" pos:end="301:34">UINT32_MAX</name> <operator pos:start="301:36" pos:end="301:36">/</operator> <name pos:start="301:38" pos:end="301:56"><name pos:start="301:38" pos:end="301:39">st</name><operator pos:start="301:40" pos:end="301:41">-&gt;</operator><name pos:start="301:42" pos:end="301:46">codec</name><operator pos:start="301:47" pos:end="301:48">-&gt;</operator><name pos:start="301:49" pos:end="301:56">channels</name></name></expr>)</condition><block type="pseudo" pos:start="303:9" pos:end="303:35"><block_content pos:start="303:9" pos:end="303:35">

        <return pos:start="303:9" pos:end="303:35">return <expr pos:start="303:16" pos:end="303:34"><name pos:start="303:16" pos:end="303:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="307:5" pos:end="307:37"><expr pos:start="307:5" pos:end="307:36"><name pos:start="307:5" pos:end="307:24"><name pos:start="307:5" pos:end="307:5">b</name><operator pos:start="307:6" pos:end="307:7">-&gt;</operator><name pos:start="307:8" pos:end="307:24">samples_per_block</name></name> <operator pos:start="307:26" pos:end="307:26">=</operator> <call pos:start="307:28" pos:end="307:36"><name pos:start="307:28" pos:end="307:33">read32</name><argument_list pos:start="307:34" pos:end="307:36">(<argument pos:start="307:35" pos:end="307:35"><expr pos:start="307:35" pos:end="307:35"><name pos:start="307:35" pos:end="307:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="309:5" pos:end="309:41"><expr pos:start="309:5" pos:end="309:40"><name pos:start="309:5" pos:end="309:28"><name pos:start="309:5" pos:end="309:5">b</name><operator pos:start="309:6" pos:end="309:7">-&gt;</operator><name pos:start="309:8" pos:end="309:28">last_block_used_bytes</name></name> <operator pos:start="309:30" pos:end="309:30">=</operator> <call pos:start="309:32" pos:end="309:40"><name pos:start="309:32" pos:end="309:37">read32</name><argument_list pos:start="309:38" pos:end="309:40">(<argument pos:start="309:39" pos:end="309:39"><expr pos:start="309:39" pos:end="309:39"><name pos:start="309:39" pos:end="309:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="311:5" pos:end="311:38"><expr pos:start="311:5" pos:end="311:37"><name pos:start="311:5" pos:end="311:25"><name pos:start="311:5" pos:end="311:5">b</name><operator pos:start="311:6" pos:end="311:7">-&gt;</operator><name pos:start="311:8" pos:end="311:25">last_block_samples</name></name> <operator pos:start="311:27" pos:end="311:27">=</operator> <call pos:start="311:29" pos:end="311:37"><name pos:start="311:29" pos:end="311:34">read32</name><argument_list pos:start="311:35" pos:end="311:37">(<argument pos:start="311:36" pos:end="311:36"><expr pos:start="311:36" pos:end="311:36"><name pos:start="311:36" pos:end="311:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="313:5" pos:end="313:35"><expr pos:start="313:5" pos:end="313:34"><name pos:start="313:5" pos:end="313:22"><name pos:start="313:5" pos:end="313:5">b</name><operator pos:start="313:6" pos:end="313:7">-&gt;</operator><name pos:start="313:8" pos:end="313:22">last_block_size</name></name> <operator pos:start="313:24" pos:end="313:24">=</operator> <call pos:start="313:26" pos:end="313:34"><name pos:start="313:26" pos:end="313:31">read32</name><argument_list pos:start="313:32" pos:end="313:34">(<argument pos:start="313:33" pos:end="313:33"><expr pos:start="313:33" pos:end="313:33"><name pos:start="313:33" pos:end="313:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="315:5" pos:end="317:35"><if pos:start="315:5" pos:end="317:35">if <condition pos:start="315:8" pos:end="315:62">(<expr pos:start="315:9" pos:end="315:61"><name pos:start="315:9" pos:end="315:26"><name pos:start="315:9" pos:end="315:9">b</name><operator pos:start="315:10" pos:end="315:11">-&gt;</operator><name pos:start="315:12" pos:end="315:26">last_block_size</name></name> <operator pos:start="315:28" pos:end="315:28">&gt;</operator> <name pos:start="315:30" pos:end="315:39">UINT32_MAX</name> <operator pos:start="315:41" pos:end="315:41">/</operator> <name pos:start="315:43" pos:end="315:61"><name pos:start="315:43" pos:end="315:44">st</name><operator pos:start="315:45" pos:end="315:46">-&gt;</operator><name pos:start="315:47" pos:end="315:51">codec</name><operator pos:start="315:52" pos:end="315:53">-&gt;</operator><name pos:start="315:54" pos:end="315:61">channels</name></name></expr>)</condition><block type="pseudo" pos:start="317:9" pos:end="317:35"><block_content pos:start="317:9" pos:end="317:35">

        <return pos:start="317:9" pos:end="317:35">return <expr pos:start="317:16" pos:end="317:34"><name pos:start="317:16" pos:end="317:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="319:5" pos:end="321:35"><if pos:start="319:5" pos:end="321:35">if <condition pos:start="319:8" pos:end="319:54">(<expr pos:start="319:9" pos:end="319:53"><name pos:start="319:9" pos:end="319:32"><name pos:start="319:9" pos:end="319:9">b</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:32">last_block_used_bytes</name></name> <operator pos:start="319:34" pos:end="319:34">&gt;</operator> <name pos:start="319:36" pos:end="319:53"><name pos:start="319:36" pos:end="319:36">b</name><operator pos:start="319:37" pos:end="319:38">-&gt;</operator><name pos:start="319:39" pos:end="319:53">last_block_size</name></name></expr>)</condition><block type="pseudo" pos:start="321:9" pos:end="321:35"><block_content pos:start="321:9" pos:end="321:35">

        <return pos:start="321:9" pos:end="321:35">return <expr pos:start="321:16" pos:end="321:34"><name pos:start="321:16" pos:end="321:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>





    <if_stmt pos:start="327:5" pos:end="373:5"><if pos:start="327:5" pos:end="373:5">if <condition pos:start="327:8" pos:end="327:76">(<expr pos:start="327:9" pos:end="327:75"><name pos:start="327:9" pos:end="327:13">codec</name> <operator pos:start="327:15" pos:end="327:16">==</operator> <name pos:start="327:18" pos:end="327:38">AV_CODEC_ID_ADPCM_THP</name> <operator pos:start="327:40" pos:end="327:41">||</operator> <name pos:start="327:43" pos:end="327:47">codec</name> <operator pos:start="327:49" pos:end="327:50">==</operator> <name pos:start="327:52" pos:end="327:75">AV_CODEC_ID_ADPCM_THP_LE</name></expr>)</condition> <block pos:start="327:78" pos:end="373:5">{<block_content pos:start="329:9" pos:end="371:9">

        <decl_stmt pos:start="329:9" pos:end="329:15"><decl pos:start="329:9" pos:end="329:14"><type pos:start="329:9" pos:end="329:11"><name pos:start="329:9" pos:end="329:11">int</name></type> <name pos:start="329:13" pos:end="329:14">ch</name></decl>;</decl_stmt>



        <expr_stmt pos:start="333:9" pos:end="333:59"><expr pos:start="333:9" pos:end="333:58"><call pos:start="333:9" pos:end="333:58"><name pos:start="333:9" pos:end="333:17">avio_skip</name><argument_list pos:start="333:18" pos:end="333:58">(<argument pos:start="333:19" pos:end="333:23"><expr pos:start="333:19" pos:end="333:23"><name pos:start="333:19" pos:end="333:23"><name pos:start="333:19" pos:end="333:19">s</name><operator pos:start="333:20" pos:end="333:21">-&gt;</operator><name pos:start="333:22" pos:end="333:23">pb</name></name></expr></argument>, <argument pos:start="333:26" pos:end="333:57"><expr pos:start="333:26" pos:end="333:57"><name pos:start="333:26" pos:end="333:28">pos</name> <operator pos:start="333:30" pos:end="333:30">+</operator> <name pos:start="333:32" pos:end="333:38">toffset</name> <operator pos:start="333:40" pos:end="333:40">-</operator> <call pos:start="333:42" pos:end="333:57"><name pos:start="333:42" pos:end="333:50">avio_tell</name><argument_list pos:start="333:51" pos:end="333:57">(<argument pos:start="333:52" pos:end="333:56"><expr pos:start="333:52" pos:end="333:56"><name pos:start="333:52" pos:end="333:56"><name pos:start="333:52" pos:end="333:52">s</name><operator pos:start="333:53" pos:end="333:54">-&gt;</operator><name pos:start="333:55" pos:end="333:56">pb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="335:9" pos:end="341:72"><if pos:start="335:9" pos:end="337:39">if <condition pos:start="335:12" pos:end="335:19">(<expr pos:start="335:13" pos:end="335:18"><operator pos:start="335:13" pos:end="335:13">!</operator><name pos:start="335:14" pos:end="335:18">bfstm</name></expr>)</condition><block type="pseudo" pos:start="337:13" pos:end="337:39"><block_content pos:start="337:13" pos:end="337:39">

            <expr_stmt pos:start="337:13" pos:end="337:39"><expr pos:start="337:13" pos:end="337:38"><name pos:start="337:13" pos:end="337:19">toffset</name> <operator pos:start="337:21" pos:end="337:21">=</operator> <call pos:start="337:23" pos:end="337:31"><name pos:start="337:23" pos:end="337:28">read32</name><argument_list pos:start="337:29" pos:end="337:31">(<argument pos:start="337:30" pos:end="337:30"><expr pos:start="337:30" pos:end="337:30"><name pos:start="337:30" pos:end="337:30">s</name></expr></argument>)</argument_list></call> <operator pos:start="337:33" pos:end="337:33">+</operator> <literal type="number" pos:start="337:35" pos:end="337:38">16LL</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="339:9" pos:end="341:72">else<block type="pseudo" pos:start="341:13" pos:end="341:72"><block_content pos:start="341:13" pos:end="341:72">

            <expr_stmt pos:start="341:13" pos:end="341:72"><expr pos:start="341:13" pos:end="341:71"><name pos:start="341:13" pos:end="341:19">toffset</name> <operator pos:start="341:21" pos:end="341:21">=</operator> <name pos:start="341:23" pos:end="341:29">toffset</name> <operator pos:start="341:31" pos:end="341:31">+</operator> <call pos:start="341:33" pos:end="341:41"><name pos:start="341:33" pos:end="341:38">read32</name><argument_list pos:start="341:39" pos:end="341:41">(<argument pos:start="341:40" pos:end="341:40"><expr pos:start="341:40" pos:end="341:40"><name pos:start="341:40" pos:end="341:40">s</name></expr></argument>)</argument_list></call> <operator pos:start="341:43" pos:end="341:43">+</operator> <name pos:start="341:45" pos:end="341:63"><name pos:start="341:45" pos:end="341:46">st</name><operator pos:start="341:47" pos:end="341:48">-&gt;</operator><name pos:start="341:49" pos:end="341:53">codec</name><operator pos:start="341:54" pos:end="341:55">-&gt;</operator><name pos:start="341:56" pos:end="341:63">channels</name></name> <operator pos:start="341:65" pos:end="341:65">*</operator> <literal type="number" pos:start="341:67" pos:end="341:69">8</literal> <operator pos:start="341:69" pos:end="341:69">-</operator> <literal type="number" pos:start="341:71" pos:end="341:71">8</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="343:9" pos:end="345:39"><if pos:start="343:9" pos:end="345:39">if <condition pos:start="343:12" pos:end="343:27">(<expr pos:start="343:13" pos:end="343:26"><name pos:start="343:13" pos:end="343:19">toffset</name> <operator pos:start="343:21" pos:end="343:21">&gt;</operator> <name pos:start="343:23" pos:end="343:26">size</name></expr>)</condition><block type="pseudo" pos:start="345:13" pos:end="345:39"><block_content pos:start="345:13" pos:end="345:39">

            <return pos:start="345:13" pos:end="345:39">return <expr pos:start="345:20" pos:end="345:38"><name pos:start="345:20" pos:end="345:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="349:9" pos:end="349:59"><expr pos:start="349:9" pos:end="349:58"><call pos:start="349:9" pos:end="349:58"><name pos:start="349:9" pos:end="349:17">avio_skip</name><argument_list pos:start="349:18" pos:end="349:58">(<argument pos:start="349:19" pos:end="349:23"><expr pos:start="349:19" pos:end="349:23"><name pos:start="349:19" pos:end="349:23"><name pos:start="349:19" pos:end="349:19">s</name><operator pos:start="349:20" pos:end="349:21">-&gt;</operator><name pos:start="349:22" pos:end="349:23">pb</name></name></expr></argument>, <argument pos:start="349:26" pos:end="349:57"><expr pos:start="349:26" pos:end="349:57"><name pos:start="349:26" pos:end="349:28">pos</name> <operator pos:start="349:30" pos:end="349:30">+</operator> <name pos:start="349:32" pos:end="349:38">toffset</name> <operator pos:start="349:40" pos:end="349:40">-</operator> <call pos:start="349:42" pos:end="349:57"><name pos:start="349:42" pos:end="349:50">avio_tell</name><argument_list pos:start="349:51" pos:end="349:57">(<argument pos:start="349:52" pos:end="349:56"><expr pos:start="349:52" pos:end="349:56"><name pos:start="349:52" pos:end="349:56"><name pos:start="349:52" pos:end="349:52">s</name><operator pos:start="349:53" pos:end="349:54">-&gt;</operator><name pos:start="349:55" pos:end="349:56">pb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:56"><expr pos:start="351:9" pos:end="351:55"><name pos:start="351:9" pos:end="351:16"><name pos:start="351:9" pos:end="351:9">b</name><operator pos:start="351:10" pos:end="351:11">-&gt;</operator><name pos:start="351:12" pos:end="351:16">table</name></name> <operator pos:start="351:18" pos:end="351:18">=</operator> <call pos:start="351:20" pos:end="351:55"><name pos:start="351:20" pos:end="351:29">av_mallocz</name><argument_list pos:start="351:30" pos:end="351:55">(<argument pos:start="351:31" pos:end="351:54"><expr pos:start="351:31" pos:end="351:54"><literal type="number" pos:start="351:31" pos:end="351:32">32</literal> <operator pos:start="351:34" pos:end="351:34">*</operator> <name pos:start="351:36" pos:end="351:54"><name pos:start="351:36" pos:end="351:37">st</name><operator pos:start="351:38" pos:end="351:39">-&gt;</operator><name pos:start="351:40" pos:end="351:44">codec</name><operator pos:start="351:45" pos:end="351:46">-&gt;</operator><name pos:start="351:47" pos:end="351:54">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="353:9" pos:end="355:35"><if pos:start="353:9" pos:end="355:35">if <condition pos:start="353:12" pos:end="353:22">(<expr pos:start="353:13" pos:end="353:21"><operator pos:start="353:13" pos:end="353:13">!</operator><name pos:start="353:14" pos:end="353:21"><name pos:start="353:14" pos:end="353:14">b</name><operator pos:start="353:15" pos:end="353:16">-&gt;</operator><name pos:start="353:17" pos:end="353:21">table</name></name></expr>)</condition><block type="pseudo" pos:start="355:13" pos:end="355:35"><block_content pos:start="355:13" pos:end="355:35">

            <return pos:start="355:13" pos:end="355:35">return <expr pos:start="355:20" pos:end="355:34"><call pos:start="355:20" pos:end="355:34"><name pos:start="355:20" pos:end="355:26">AVERROR</name><argument_list pos:start="355:27" pos:end="355:34">(<argument pos:start="355:28" pos:end="355:33"><expr pos:start="355:28" pos:end="355:33"><name pos:start="355:28" pos:end="355:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <for pos:start="359:9" pos:end="371:9">for <control pos:start="359:13" pos:end="359:52">(<init pos:start="359:14" pos:end="359:20"><expr pos:start="359:14" pos:end="359:19"><name pos:start="359:14" pos:end="359:15">ch</name> <operator pos:start="359:17" pos:end="359:17">=</operator> <literal type="number" pos:start="359:19" pos:end="359:19">0</literal></expr>;</init> <condition pos:start="359:22" pos:end="359:46"><expr pos:start="359:22" pos:end="359:45"><name pos:start="359:22" pos:end="359:23">ch</name> <operator pos:start="359:25" pos:end="359:25">&lt;</operator> <name pos:start="359:27" pos:end="359:45"><name pos:start="359:27" pos:end="359:28">st</name><operator pos:start="359:29" pos:end="359:30">-&gt;</operator><name pos:start="359:31" pos:end="359:35">codec</name><operator pos:start="359:36" pos:end="359:37">-&gt;</operator><name pos:start="359:38" pos:end="359:45">channels</name></name></expr>;</condition> <incr pos:start="359:48" pos:end="359:51"><expr pos:start="359:48" pos:end="359:51"><name pos:start="359:48" pos:end="359:49">ch</name><operator pos:start="359:50" pos:end="359:51">++</operator></expr></incr>)</control> <block pos:start="359:54" pos:end="371:9">{<block_content pos:start="361:13" pos:end="369:46">

            <if_stmt pos:start="361:13" pos:end="367:13"><if pos:start="361:13" pos:end="367:13">if <condition pos:start="361:16" pos:end="361:63">(<expr pos:start="361:17" pos:end="361:62"><call pos:start="361:17" pos:end="361:56"><name pos:start="361:17" pos:end="361:25">avio_read</name><argument_list pos:start="361:26" pos:end="361:56">(<argument pos:start="361:27" pos:end="361:31"><expr pos:start="361:27" pos:end="361:31"><name pos:start="361:27" pos:end="361:31"><name pos:start="361:27" pos:end="361:27">s</name><operator pos:start="361:28" pos:end="361:29">-&gt;</operator><name pos:start="361:30" pos:end="361:31">pb</name></name></expr></argument>, <argument pos:start="361:34" pos:end="361:51"><expr pos:start="361:34" pos:end="361:51"><name pos:start="361:34" pos:end="361:41"><name pos:start="361:34" pos:end="361:34">b</name><operator pos:start="361:35" pos:end="361:36">-&gt;</operator><name pos:start="361:37" pos:end="361:41">table</name></name> <operator pos:start="361:43" pos:end="361:43">+</operator> <name pos:start="361:45" pos:end="361:46">ch</name> <operator pos:start="361:48" pos:end="361:48">*</operator> <literal type="number" pos:start="361:50" pos:end="361:51">32</literal></expr></argument>, <argument pos:start="361:54" pos:end="361:55"><expr pos:start="361:54" pos:end="361:55"><literal type="number" pos:start="361:54" pos:end="361:55">32</literal></expr></argument>)</argument_list></call> <operator pos:start="361:58" pos:end="361:59">!=</operator> <literal type="number" pos:start="361:61" pos:end="361:62">32</literal></expr>)</condition> <block pos:start="361:65" pos:end="367:13">{<block_content pos:start="363:17" pos:end="365:26">

                <expr_stmt pos:start="363:17" pos:end="363:42"><expr pos:start="363:17" pos:end="363:41"><name pos:start="363:17" pos:end="363:19">ret</name> <operator pos:start="363:21" pos:end="363:21">=</operator> <name pos:start="363:23" pos:end="363:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="365:17" pos:end="365:26">goto <name pos:start="365:22" pos:end="365:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:46"><expr pos:start="369:13" pos:end="369:45"><call pos:start="369:13" pos:end="369:45"><name pos:start="369:13" pos:end="369:21">avio_skip</name><argument_list pos:start="369:22" pos:end="369:45">(<argument pos:start="369:23" pos:end="369:27"><expr pos:start="369:23" pos:end="369:27"><name pos:start="369:23" pos:end="369:27"><name pos:start="369:23" pos:end="369:23">s</name><operator pos:start="369:24" pos:end="369:25">-&gt;</operator><name pos:start="369:26" pos:end="369:27">pb</name></name></expr></argument>, <argument pos:start="369:30" pos:end="369:44"><expr pos:start="369:30" pos:end="369:44"><ternary pos:start="369:30" pos:end="369:44"><condition pos:start="369:30" pos:end="369:36"><expr pos:start="369:30" pos:end="369:34"><name pos:start="369:30" pos:end="369:34">bfstm</name></expr> ?</condition><then pos:start="369:38" pos:end="369:39"> <expr pos:start="369:38" pos:end="369:39"><literal type="number" pos:start="369:38" pos:end="369:39">14</literal></expr> </then><else pos:start="369:41" pos:end="369:44">: <expr pos:start="369:43" pos:end="369:44"><literal type="number" pos:start="369:43" pos:end="369:44">24</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="377:5" pos:end="383:5"><if pos:start="377:5" pos:end="383:5">if <condition pos:start="377:8" pos:end="377:40">(<expr pos:start="377:9" pos:end="377:39"><name pos:start="377:9" pos:end="377:12">size</name> <operator pos:start="377:14" pos:end="377:14">&lt;</operator> <operator pos:start="377:16" pos:end="377:16">(</operator><call pos:start="377:17" pos:end="377:32"><name pos:start="377:17" pos:end="377:25">avio_tell</name><argument_list pos:start="377:26" pos:end="377:32">(<argument pos:start="377:27" pos:end="377:31"><expr pos:start="377:27" pos:end="377:31"><name pos:start="377:27" pos:end="377:31"><name pos:start="377:27" pos:end="377:27">s</name><operator pos:start="377:28" pos:end="377:29">-&gt;</operator><name pos:start="377:30" pos:end="377:31">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="377:34" pos:end="377:34">-</operator> <name pos:start="377:36" pos:end="377:38">pos</name><operator pos:start="377:39" pos:end="377:39">)</operator></expr>)</condition> <block pos:start="377:42" pos:end="383:5">{<block_content pos:start="379:9" pos:end="381:18">

        <expr_stmt pos:start="379:9" pos:end="379:34"><expr pos:start="379:9" pos:end="379:33"><name pos:start="379:9" pos:end="379:11">ret</name> <operator pos:start="379:13" pos:end="379:13">=</operator> <name pos:start="379:15" pos:end="379:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="381:9" pos:end="381:18">goto <name pos:start="381:14" pos:end="381:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="387:5" pos:end="387:54"><expr pos:start="387:5" pos:end="387:53"><call pos:start="387:5" pos:end="387:53"><name pos:start="387:5" pos:end="387:13">avio_skip</name><argument_list pos:start="387:14" pos:end="387:53">(<argument pos:start="387:15" pos:end="387:19"><expr pos:start="387:15" pos:end="387:19"><name pos:start="387:15" pos:end="387:19"><name pos:start="387:15" pos:end="387:15">s</name><operator pos:start="387:16" pos:end="387:17">-&gt;</operator><name pos:start="387:18" pos:end="387:19">pb</name></name></expr></argument>, <argument pos:start="387:22" pos:end="387:52"><expr pos:start="387:22" pos:end="387:52"><name pos:start="387:22" pos:end="387:25">size</name> <operator pos:start="387:27" pos:end="387:27">-</operator> <operator pos:start="387:29" pos:end="387:29">(</operator><call pos:start="387:30" pos:end="387:45"><name pos:start="387:30" pos:end="387:38">avio_tell</name><argument_list pos:start="387:39" pos:end="387:45">(<argument pos:start="387:40" pos:end="387:44"><expr pos:start="387:40" pos:end="387:44"><name pos:start="387:40" pos:end="387:44"><name pos:start="387:40" pos:end="387:40">s</name><operator pos:start="387:41" pos:end="387:42">-&gt;</operator><name pos:start="387:43" pos:end="387:44">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="387:47" pos:end="387:47">-</operator> <name pos:start="387:49" pos:end="387:51">pos</name><operator pos:start="387:52" pos:end="387:52">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="391:5" pos:end="525:5">while <condition pos:start="391:11" pos:end="391:29">(<expr pos:start="391:12" pos:end="391:28"><operator pos:start="391:12" pos:end="391:12">!</operator><call pos:start="391:13" pos:end="391:28"><name pos:start="391:13" pos:end="391:21">avio_feof</name><argument_list pos:start="391:22" pos:end="391:28">(<argument pos:start="391:23" pos:end="391:27"><expr pos:start="391:23" pos:end="391:27"><name pos:start="391:23" pos:end="391:27"><name pos:start="391:23" pos:end="391:23">s</name><operator pos:start="391:24" pos:end="391:25">-&gt;</operator><name pos:start="391:26" pos:end="391:27">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="391:31" pos:end="525:5">{<block_content pos:start="393:9" pos:end="523:9">

        <expr_stmt pos:start="393:9" pos:end="393:33"><expr pos:start="393:9" pos:end="393:32"><name pos:start="393:9" pos:end="393:13">chunk</name> <operator pos:start="393:15" pos:end="393:15">=</operator> <call pos:start="393:17" pos:end="393:32"><name pos:start="393:17" pos:end="393:25">avio_rl32</name><argument_list pos:start="393:26" pos:end="393:32">(<argument pos:start="393:27" pos:end="393:31"><expr pos:start="393:27" pos:end="393:31"><name pos:start="393:27" pos:end="393:31"><name pos:start="393:27" pos:end="393:27">s</name><operator pos:start="393:28" pos:end="393:29">-&gt;</operator><name pos:start="393:30" pos:end="393:31">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="395:9" pos:end="395:26"><expr pos:start="395:9" pos:end="395:25"><name pos:start="395:9" pos:end="395:12">size</name>  <operator pos:start="395:15" pos:end="395:15">=</operator> <call pos:start="395:17" pos:end="395:25"><name pos:start="395:17" pos:end="395:22">read32</name><argument_list pos:start="395:23" pos:end="395:25">(<argument pos:start="395:24" pos:end="395:24"><expr pos:start="395:24" pos:end="395:24"><name pos:start="395:24" pos:end="395:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="397:9" pos:end="403:9"><if pos:start="397:9" pos:end="403:9">if <condition pos:start="397:12" pos:end="397:21">(<expr pos:start="397:13" pos:end="397:20"><name pos:start="397:13" pos:end="397:16">size</name> <operator pos:start="397:18" pos:end="397:18">&lt;</operator> <literal type="number" pos:start="397:20" pos:end="397:20">8</literal></expr>)</condition> <block pos:start="397:23" pos:end="403:9">{<block_content pos:start="399:13" pos:end="401:22">

            <expr_stmt pos:start="399:13" pos:end="399:38"><expr pos:start="399:13" pos:end="399:37"><name pos:start="399:13" pos:end="399:15">ret</name> <operator pos:start="399:17" pos:end="399:17">=</operator> <name pos:start="399:19" pos:end="399:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="401:13" pos:end="401:22">goto <name pos:start="401:18" pos:end="401:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="405:9" pos:end="405:18"><expr pos:start="405:9" pos:end="405:17"><name pos:start="405:9" pos:end="405:12">size</name> <operator pos:start="405:14" pos:end="405:15">-=</operator> <literal type="number" pos:start="405:17" pos:end="405:17">8</literal></expr>;</expr_stmt>

        <switch pos:start="407:9" pos:end="523:9">switch <condition pos:start="407:16" pos:end="407:22">(<expr pos:start="407:17" pos:end="407:21"><name pos:start="407:17" pos:end="407:21">chunk</name></expr>)</condition> <block pos:start="407:24" pos:end="523:9">{<block_content pos:start="409:9" pos:end="521:35">

        <case pos:start="409:9" pos:end="409:36">case <expr pos:start="409:14" pos:end="409:35"><call pos:start="409:14" pos:end="409:35"><name pos:start="409:14" pos:end="409:18">MKTAG</name><argument_list pos:start="409:19" pos:end="409:35">(<argument pos:start="409:20" pos:end="409:22"><expr pos:start="409:20" pos:end="409:22"><literal type="char" pos:start="409:20" pos:end="409:22">'S'</literal></expr></argument>,<argument pos:start="409:24" pos:end="409:26"><expr pos:start="409:24" pos:end="409:26"><literal type="char" pos:start="409:24" pos:end="409:26">'E'</literal></expr></argument>,<argument pos:start="409:28" pos:end="409:30"><expr pos:start="409:28" pos:end="409:30"><literal type="char" pos:start="409:28" pos:end="409:30">'E'</literal></expr></argument>,<argument pos:start="409:32" pos:end="409:34"><expr pos:start="409:32" pos:end="409:34"><literal type="char" pos:start="409:32" pos:end="409:34">'K'</literal></expr></argument>)</argument_list></call></expr>:</case>

        <case pos:start="411:9" pos:end="411:36">case <expr pos:start="411:14" pos:end="411:35"><call pos:start="411:14" pos:end="411:35"><name pos:start="411:14" pos:end="411:18">MKTAG</name><argument_list pos:start="411:19" pos:end="411:35">(<argument pos:start="411:20" pos:end="411:22"><expr pos:start="411:20" pos:end="411:22"><literal type="char" pos:start="411:20" pos:end="411:22">'A'</literal></expr></argument>,<argument pos:start="411:24" pos:end="411:26"><expr pos:start="411:24" pos:end="411:26"><literal type="char" pos:start="411:24" pos:end="411:26">'D'</literal></expr></argument>,<argument pos:start="411:28" pos:end="411:30"><expr pos:start="411:28" pos:end="411:30"><literal type="char" pos:start="411:28" pos:end="411:30">'P'</literal></expr></argument>,<argument pos:start="411:32" pos:end="411:34"><expr pos:start="411:32" pos:end="411:34"><literal type="char" pos:start="411:32" pos:end="411:34">'C'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="413:13" pos:end="417:26"><if pos:start="413:13" pos:end="417:26">if <condition pos:start="413:16" pos:end="415:50">(<expr pos:start="413:17" pos:end="415:49"><name pos:start="413:17" pos:end="413:21">codec</name> <operator pos:start="413:23" pos:end="413:24">!=</operator> <name pos:start="413:26" pos:end="413:46">AV_CODEC_ID_ADPCM_THP</name> <operator pos:start="413:48" pos:end="413:49">&amp;&amp;</operator>

                <name pos:start="415:17" pos:end="415:21">codec</name> <operator pos:start="415:23" pos:end="415:24">!=</operator> <name pos:start="415:26" pos:end="415:49">AV_CODEC_ID_ADPCM_THP_LE</name></expr>)</condition><block type="pseudo" pos:start="417:17" pos:end="417:26"><block_content pos:start="417:17" pos:end="417:26">

                <goto pos:start="417:17" pos:end="417:26">goto <name pos:start="417:22" pos:end="417:25">skip</name>;</goto></block_content></block></if></if_stmt>



            <expr_stmt pos:start="421:13" pos:end="421:61"><expr pos:start="421:13" pos:end="421:60"><name pos:start="421:13" pos:end="421:17">asize</name> <operator pos:start="421:19" pos:end="421:19">=</operator> <name pos:start="421:21" pos:end="421:34"><name pos:start="421:21" pos:end="421:21">b</name><operator pos:start="421:22" pos:end="421:23">-&gt;</operator><name pos:start="421:24" pos:end="421:34">block_count</name></name> <operator pos:start="421:36" pos:end="421:36">*</operator> <name pos:start="421:38" pos:end="421:56"><name pos:start="421:38" pos:end="421:39">st</name><operator pos:start="421:40" pos:end="421:41">-&gt;</operator><name pos:start="421:42" pos:end="421:46">codec</name><operator pos:start="421:47" pos:end="421:48">-&gt;</operator><name pos:start="421:49" pos:end="421:56">channels</name></name> <operator pos:start="421:58" pos:end="421:58">*</operator> <literal type="number" pos:start="421:60" pos:end="421:60">4</literal></expr>;</expr_stmt>

            <if_stmt pos:start="423:13" pos:end="429:13"><if pos:start="423:13" pos:end="429:13">if <condition pos:start="423:16" pos:end="423:29">(<expr pos:start="423:17" pos:end="423:28"><name pos:start="423:17" pos:end="423:20">size</name> <operator pos:start="423:22" pos:end="423:22">&lt;</operator> <name pos:start="423:24" pos:end="423:28">asize</name></expr>)</condition> <block pos:start="423:31" pos:end="429:13">{<block_content pos:start="425:17" pos:end="427:26">

                <expr_stmt pos:start="425:17" pos:end="425:42"><expr pos:start="425:17" pos:end="425:41"><name pos:start="425:17" pos:end="425:19">ret</name> <operator pos:start="425:21" pos:end="425:21">=</operator> <name pos:start="425:23" pos:end="425:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="427:17" pos:end="427:26">goto <name pos:start="427:22" pos:end="427:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="431:13" pos:end="473:13"><if pos:start="431:13" pos:end="437:13">if <condition pos:start="431:16" pos:end="431:24">(<expr pos:start="431:17" pos:end="431:23"><name pos:start="431:17" pos:end="431:23"><name pos:start="431:17" pos:end="431:17">b</name><operator pos:start="431:18" pos:end="431:19">-&gt;</operator><name pos:start="431:20" pos:end="431:23">adpc</name></name></expr>)</condition> <block pos:start="431:26" pos:end="437:13">{<block_content pos:start="433:17" pos:end="435:26">

                <expr_stmt pos:start="433:17" pos:end="433:78"><expr pos:start="433:17" pos:end="433:77"><call pos:start="433:17" pos:end="433:77"><name pos:start="433:17" pos:end="433:22">av_log</name><argument_list pos:start="433:23" pos:end="433:77">(<argument pos:start="433:24" pos:end="433:24"><expr pos:start="433:24" pos:end="433:24"><name pos:start="433:24" pos:end="433:24">s</name></expr></argument>, <argument pos:start="433:27" pos:end="433:40"><expr pos:start="433:27" pos:end="433:40"><name pos:start="433:27" pos:end="433:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="433:43" pos:end="433:76"><expr pos:start="433:43" pos:end="433:76"><literal type="string" pos:start="433:43" pos:end="433:76">"skipping additional ADPC chunk\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="435:17" pos:end="435:26">goto <name pos:start="435:22" pos:end="435:25">skip</name>;</goto>

            </block_content>}</block></if> <else pos:start="437:15" pos:end="473:13">else <block pos:start="437:20" pos:end="473:13">{<block_content pos:start="439:17" pos:end="471:47">

                <expr_stmt pos:start="439:17" pos:end="439:44"><expr pos:start="439:17" pos:end="439:43"><name pos:start="439:17" pos:end="439:23"><name pos:start="439:17" pos:end="439:17">b</name><operator pos:start="439:18" pos:end="439:19">-&gt;</operator><name pos:start="439:20" pos:end="439:23">adpc</name></name> <operator pos:start="439:25" pos:end="439:25">=</operator> <call pos:start="439:27" pos:end="439:43"><name pos:start="439:27" pos:end="439:36">av_mallocz</name><argument_list pos:start="439:37" pos:end="439:43">(<argument pos:start="439:38" pos:end="439:42"><expr pos:start="439:38" pos:end="439:42"><name pos:start="439:38" pos:end="439:42">asize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="441:17" pos:end="447:17"><if pos:start="441:17" pos:end="447:17">if <condition pos:start="441:20" pos:end="441:29">(<expr pos:start="441:21" pos:end="441:28"><operator pos:start="441:21" pos:end="441:21">!</operator><name pos:start="441:22" pos:end="441:28"><name pos:start="441:22" pos:end="441:22">b</name><operator pos:start="441:23" pos:end="441:24">-&gt;</operator><name pos:start="441:25" pos:end="441:28">adpc</name></name></expr>)</condition> <block pos:start="441:31" pos:end="447:17">{<block_content pos:start="443:21" pos:end="445:30">

                    <expr_stmt pos:start="443:21" pos:end="443:42"><expr pos:start="443:21" pos:end="443:41"><name pos:start="443:21" pos:end="443:23">ret</name> <operator pos:start="443:25" pos:end="443:25">=</operator> <call pos:start="443:27" pos:end="443:41"><name pos:start="443:27" pos:end="443:33">AVERROR</name><argument_list pos:start="443:34" pos:end="443:41">(<argument pos:start="443:35" pos:end="443:40"><expr pos:start="443:35" pos:end="443:40"><name pos:start="443:35" pos:end="443:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="445:21" pos:end="445:30">goto <name pos:start="445:26" pos:end="445:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="449:17" pos:end="469:17"><if pos:start="449:17" pos:end="465:17">if <condition pos:start="449:20" pos:end="449:63">(<expr pos:start="449:21" pos:end="449:62"><name pos:start="449:21" pos:end="449:25">bfstm</name> <operator pos:start="449:27" pos:end="449:28">&amp;&amp;</operator> <name pos:start="449:30" pos:end="449:34">codec</name> <operator pos:start="449:36" pos:end="449:37">!=</operator> <name pos:start="449:39" pos:end="449:62">AV_CODEC_ID_ADPCM_THP_LE</name></expr>)</condition> <block pos:start="449:65" pos:end="465:17">{<block_content pos:start="455:21" pos:end="463:21">

                    <comment type="line" pos:start="451:21" pos:end="451:71">// Big-endian BFSTMs have little-endian SEEK tables</comment>

                    <comment type="line" pos:start="453:21" pos:end="453:47">// for some strange reason.</comment>

                    <decl_stmt pos:start="455:21" pos:end="455:26"><decl pos:start="455:21" pos:end="455:25"><type pos:start="455:21" pos:end="455:23"><name pos:start="455:21" pos:end="455:23">int</name></type> <name pos:start="455:25" pos:end="455:25">i</name></decl>;</decl_stmt>

                    <for pos:start="457:21" pos:end="463:21">for <control pos:start="457:25" pos:end="457:50">(<init pos:start="457:26" pos:end="457:31"><expr pos:start="457:26" pos:end="457:30"><name pos:start="457:26" pos:end="457:26">i</name> <operator pos:start="457:28" pos:end="457:28">=</operator> <literal type="number" pos:start="457:30" pos:end="457:30">0</literal></expr>;</init> <condition pos:start="457:33" pos:end="457:42"><expr pos:start="457:33" pos:end="457:41"><name pos:start="457:33" pos:end="457:33">i</name> <operator pos:start="457:35" pos:end="457:35">&lt;</operator> <name pos:start="457:37" pos:end="457:41">asize</name></expr>;</condition> <incr pos:start="457:44" pos:end="457:49"><expr pos:start="457:44" pos:end="457:49"><name pos:start="457:44" pos:end="457:44">i</name> <operator pos:start="457:46" pos:end="457:47">+=</operator> <literal type="number" pos:start="457:49" pos:end="457:49">2</literal></expr></incr>)</control> <block pos:start="457:52" pos:end="463:21">{<block_content pos:start="459:25" pos:end="461:54">

                        <expr_stmt pos:start="459:25" pos:end="459:54"><expr pos:start="459:25" pos:end="459:53"><name pos:start="459:25" pos:end="459:36"><name pos:start="459:25" pos:end="459:25">b</name><operator pos:start="459:26" pos:end="459:27">-&gt;</operator><name pos:start="459:28" pos:end="459:31">adpc</name><index pos:start="459:32" pos:end="459:36">[<expr pos:start="459:33" pos:end="459:35"><name pos:start="459:33" pos:end="459:33">i</name><operator pos:start="459:34" pos:end="459:34">+</operator><literal type="number" pos:start="459:35" pos:end="459:35">1</literal></expr>]</index></name> <operator pos:start="459:38" pos:end="459:38">=</operator> <call pos:start="459:40" pos:end="459:53"><name pos:start="459:40" pos:end="459:46">avio_r8</name><argument_list pos:start="459:47" pos:end="459:53">(<argument pos:start="459:48" pos:end="459:52"><expr pos:start="459:48" pos:end="459:52"><name pos:start="459:48" pos:end="459:52"><name pos:start="459:48" pos:end="459:48">s</name><operator pos:start="459:49" pos:end="459:50">-&gt;</operator><name pos:start="459:51" pos:end="459:52">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="461:25" pos:end="461:54"><expr pos:start="461:25" pos:end="461:53"><name pos:start="461:25" pos:end="461:34"><name pos:start="461:25" pos:end="461:25">b</name><operator pos:start="461:26" pos:end="461:27">-&gt;</operator><name pos:start="461:28" pos:end="461:31">adpc</name><index pos:start="461:32" pos:end="461:34">[<expr pos:start="461:33" pos:end="461:33"><name pos:start="461:33" pos:end="461:33">i</name></expr>]</index></name>   <operator pos:start="461:38" pos:end="461:38">=</operator> <call pos:start="461:40" pos:end="461:53"><name pos:start="461:40" pos:end="461:46">avio_r8</name><argument_list pos:start="461:47" pos:end="461:53">(<argument pos:start="461:48" pos:end="461:52"><expr pos:start="461:48" pos:end="461:52"><name pos:start="461:48" pos:end="461:52"><name pos:start="461:48" pos:end="461:48">s</name><operator pos:start="461:49" pos:end="461:50">-&gt;</operator><name pos:start="461:51" pos:end="461:52">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="465:19" pos:end="469:17">else <block pos:start="465:24" pos:end="469:17">{<block_content pos:start="467:21" pos:end="467:53">

                    <expr_stmt pos:start="467:21" pos:end="467:53"><expr pos:start="467:21" pos:end="467:52"><call pos:start="467:21" pos:end="467:52"><name pos:start="467:21" pos:end="467:29">avio_read</name><argument_list pos:start="467:30" pos:end="467:52">(<argument pos:start="467:31" pos:end="467:35"><expr pos:start="467:31" pos:end="467:35"><name pos:start="467:31" pos:end="467:35"><name pos:start="467:31" pos:end="467:31">s</name><operator pos:start="467:32" pos:end="467:33">-&gt;</operator><name pos:start="467:34" pos:end="467:35">pb</name></name></expr></argument>, <argument pos:start="467:38" pos:end="467:44"><expr pos:start="467:38" pos:end="467:44"><name pos:start="467:38" pos:end="467:44"><name pos:start="467:38" pos:end="467:38">b</name><operator pos:start="467:39" pos:end="467:40">-&gt;</operator><name pos:start="467:41" pos:end="467:44">adpc</name></name></expr></argument>, <argument pos:start="467:47" pos:end="467:51"><expr pos:start="467:47" pos:end="467:51"><name pos:start="467:47" pos:end="467:51">asize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="471:17" pos:end="471:47"><expr pos:start="471:17" pos:end="471:46"><call pos:start="471:17" pos:end="471:46"><name pos:start="471:17" pos:end="471:25">avio_skip</name><argument_list pos:start="471:26" pos:end="471:46">(<argument pos:start="471:27" pos:end="471:31"><expr pos:start="471:27" pos:end="471:31"><name pos:start="471:27" pos:end="471:31"><name pos:start="471:27" pos:end="471:27">s</name><operator pos:start="471:28" pos:end="471:29">-&gt;</operator><name pos:start="471:30" pos:end="471:31">pb</name></name></expr></argument>, <argument pos:start="471:34" pos:end="471:45"><expr pos:start="471:34" pos:end="471:45"><name pos:start="471:34" pos:end="471:37">size</name> <operator pos:start="471:39" pos:end="471:39">-</operator> <name pos:start="471:41" pos:end="471:45">asize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="475:13" pos:end="475:18">break;</break>

        <case pos:start="477:9" pos:end="477:36">case <expr pos:start="477:14" pos:end="477:35"><call pos:start="477:14" pos:end="477:35"><name pos:start="477:14" pos:end="477:18">MKTAG</name><argument_list pos:start="477:19" pos:end="477:35">(<argument pos:start="477:20" pos:end="477:22"><expr pos:start="477:20" pos:end="477:22"><literal type="char" pos:start="477:20" pos:end="477:22">'D'</literal></expr></argument>,<argument pos:start="477:24" pos:end="477:26"><expr pos:start="477:24" pos:end="477:26"><literal type="char" pos:start="477:24" pos:end="477:26">'A'</literal></expr></argument>,<argument pos:start="477:28" pos:end="477:30"><expr pos:start="477:28" pos:end="477:30"><literal type="char" pos:start="477:28" pos:end="477:30">'T'</literal></expr></argument>,<argument pos:start="477:32" pos:end="477:34"><expr pos:start="477:32" pos:end="477:34"><literal type="char" pos:start="477:32" pos:end="477:34">'A'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="479:13" pos:end="489:13"><if pos:start="479:13" pos:end="489:13">if <condition pos:start="479:16" pos:end="483:66">(<expr pos:start="479:17" pos:end="483:65"><operator pos:start="479:17" pos:end="479:17">(</operator><name pos:start="479:18" pos:end="479:22">start</name> <operator pos:start="479:24" pos:end="479:24">&lt;</operator> <call pos:start="479:26" pos:end="479:41"><name pos:start="479:26" pos:end="479:34">avio_tell</name><argument_list pos:start="479:35" pos:end="479:41">(<argument pos:start="479:36" pos:end="479:40"><expr pos:start="479:36" pos:end="479:40"><name pos:start="479:36" pos:end="479:40"><name pos:start="479:36" pos:end="479:36">s</name><operator pos:start="479:37" pos:end="479:38">-&gt;</operator><name pos:start="479:39" pos:end="479:40">pb</name></name></expr></argument>)</argument_list></call><operator pos:start="479:42" pos:end="479:42">)</operator> <operator pos:start="479:44" pos:end="479:45">||</operator>

                <operator pos:start="481:17" pos:end="481:17">(</operator><operator pos:start="481:18" pos:end="481:18">!</operator><name pos:start="481:19" pos:end="481:25"><name pos:start="481:19" pos:end="481:19">b</name><operator pos:start="481:20" pos:end="481:21">-&gt;</operator><name pos:start="481:22" pos:end="481:25">adpc</name></name> <operator pos:start="481:27" pos:end="481:28">&amp;&amp;</operator> <operator pos:start="481:30" pos:end="481:30">(</operator><name pos:start="481:31" pos:end="481:35">codec</name> <operator pos:start="481:37" pos:end="481:38">==</operator> <name pos:start="481:40" pos:end="481:60">AV_CODEC_ID_ADPCM_THP</name> <operator pos:start="481:62" pos:end="481:63">||</operator>

                              <name pos:start="483:31" pos:end="483:35">codec</name> <operator pos:start="483:37" pos:end="483:38">==</operator> <name pos:start="483:40" pos:end="483:63">AV_CODEC_ID_ADPCM_THP_LE</name><operator pos:start="483:64" pos:end="483:64">)</operator><operator pos:start="483:65" pos:end="483:65">)</operator></expr>)</condition> <block pos:start="483:68" pos:end="489:13">{<block_content pos:start="485:17" pos:end="487:26">

                <expr_stmt pos:start="485:17" pos:end="485:42"><expr pos:start="485:17" pos:end="485:41"><name pos:start="485:17" pos:end="485:19">ret</name> <operator pos:start="485:21" pos:end="485:21">=</operator> <name pos:start="485:23" pos:end="485:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="487:17" pos:end="487:26">goto <name pos:start="487:22" pos:end="487:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="491:13" pos:end="491:55"><expr pos:start="491:13" pos:end="491:54"><call pos:start="491:13" pos:end="491:54"><name pos:start="491:13" pos:end="491:21">avio_skip</name><argument_list pos:start="491:22" pos:end="491:54">(<argument pos:start="491:23" pos:end="491:27"><expr pos:start="491:23" pos:end="491:27"><name pos:start="491:23" pos:end="491:27"><name pos:start="491:23" pos:end="491:23">s</name><operator pos:start="491:24" pos:end="491:25">-&gt;</operator><name pos:start="491:26" pos:end="491:27">pb</name></name></expr></argument>, <argument pos:start="491:30" pos:end="491:53"><expr pos:start="491:30" pos:end="491:53"><name pos:start="491:30" pos:end="491:34">start</name> <operator pos:start="491:36" pos:end="491:36">-</operator> <call pos:start="491:38" pos:end="491:53"><name pos:start="491:38" pos:end="491:46">avio_tell</name><argument_list pos:start="491:47" pos:end="491:53">(<argument pos:start="491:48" pos:end="491:52"><expr pos:start="491:48" pos:end="491:52"><name pos:start="491:48" pos:end="491:52"><name pos:start="491:48" pos:end="491:48">s</name><operator pos:start="491:49" pos:end="491:50">-&gt;</operator><name pos:start="491:51" pos:end="491:52">pb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="495:13" pos:end="499:37"><if pos:start="495:13" pos:end="499:37">if <condition pos:start="495:16" pos:end="497:61">(<expr pos:start="495:17" pos:end="497:60"><name pos:start="495:17" pos:end="495:21">bfstm</name> <operator pos:start="495:23" pos:end="495:24">&amp;&amp;</operator> <operator pos:start="495:26" pos:end="495:26">(</operator><name pos:start="495:27" pos:end="495:31">codec</name> <operator pos:start="495:33" pos:end="495:34">==</operator> <name pos:start="495:36" pos:end="495:56">AV_CODEC_ID_ADPCM_THP</name> <operator pos:start="495:58" pos:end="495:59">||</operator>

                          <name pos:start="497:27" pos:end="497:31">codec</name> <operator pos:start="497:33" pos:end="497:34">==</operator> <name pos:start="497:36" pos:end="497:59">AV_CODEC_ID_ADPCM_THP_LE</name><operator pos:start="497:60" pos:end="497:60">)</operator></expr>)</condition><block type="pseudo" pos:start="499:17" pos:end="499:37"><block_content pos:start="499:17" pos:end="499:37">

                <expr_stmt pos:start="499:17" pos:end="499:37"><expr pos:start="499:17" pos:end="499:36"><call pos:start="499:17" pos:end="499:36"><name pos:start="499:17" pos:end="499:25">avio_skip</name><argument_list pos:start="499:26" pos:end="499:36">(<argument pos:start="499:27" pos:end="499:31"><expr pos:start="499:27" pos:end="499:31"><name pos:start="499:27" pos:end="499:31"><name pos:start="499:27" pos:end="499:27">s</name><operator pos:start="499:28" pos:end="499:29">-&gt;</operator><name pos:start="499:30" pos:end="499:31">pb</name></name></expr></argument>, <argument pos:start="499:34" pos:end="499:35"><expr pos:start="499:34" pos:end="499:35"><literal type="number" pos:start="499:34" pos:end="499:35">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="503:13" pos:end="503:45"><expr pos:start="503:13" pos:end="503:44"><name pos:start="503:13" pos:end="503:25"><name pos:start="503:13" pos:end="503:13">b</name><operator pos:start="503:14" pos:end="503:15">-&gt;</operator><name pos:start="503:16" pos:end="503:25">data_start</name></name> <operator pos:start="503:27" pos:end="503:27">=</operator> <call pos:start="503:29" pos:end="503:44"><name pos:start="503:29" pos:end="503:37">avio_tell</name><argument_list pos:start="503:38" pos:end="503:44">(<argument pos:start="503:39" pos:end="503:43"><expr pos:start="503:39" pos:end="503:43"><name pos:start="503:39" pos:end="503:43"><name pos:start="503:39" pos:end="503:39">s</name><operator pos:start="503:40" pos:end="503:41">-&gt;</operator><name pos:start="503:42" pos:end="503:43">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="507:13" pos:end="509:72"><if pos:start="507:13" pos:end="509:72">if <condition pos:start="507:16" pos:end="507:48">(<expr pos:start="507:17" pos:end="507:47"><operator pos:start="507:17" pos:end="507:17">!</operator><name pos:start="507:18" pos:end="507:22">bfstm</name> <operator pos:start="507:24" pos:end="507:25">&amp;&amp;</operator> <operator pos:start="507:27" pos:end="507:27">(</operator><name pos:start="507:28" pos:end="507:32">major</name> <operator pos:start="507:34" pos:end="507:35">!=</operator> <literal type="number" pos:start="507:37" pos:end="507:37">1</literal> <operator pos:start="507:39" pos:end="507:40">||</operator> <name pos:start="507:42" pos:end="507:46">minor</name><operator pos:start="507:47" pos:end="507:47">)</operator></expr>)</condition><block type="pseudo" pos:start="509:17" pos:end="509:72"><block_content pos:start="509:17" pos:end="509:72">

                <expr_stmt pos:start="509:17" pos:end="509:72"><expr pos:start="509:17" pos:end="509:71"><call pos:start="509:17" pos:end="509:71"><name pos:start="509:17" pos:end="509:37">avpriv_request_sample</name><argument_list pos:start="509:38" pos:end="509:71">(<argument pos:start="509:39" pos:end="509:39"><expr pos:start="509:39" pos:end="509:39"><name pos:start="509:39" pos:end="509:39">s</name></expr></argument>, <argument pos:start="509:42" pos:end="509:56"><expr pos:start="509:42" pos:end="509:56"><literal type="string" pos:start="509:42" pos:end="509:56">"Version %d.%d"</literal></expr></argument>, <argument pos:start="509:59" pos:end="509:63"><expr pos:start="509:59" pos:end="509:63"><name pos:start="509:59" pos:end="509:63">major</name></expr></argument>, <argument pos:start="509:66" pos:end="509:70"><expr pos:start="509:66" pos:end="509:70"><name pos:start="509:66" pos:end="509:70">minor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <return pos:start="513:13" pos:end="513:21">return <expr pos:start="513:20" pos:end="513:20"><literal type="number" pos:start="513:20" pos:end="513:20">0</literal></expr>;</return>

        <default pos:start="515:9" pos:end="515:16">default:</default>

            <expr_stmt pos:start="517:13" pos:end="517:77"><expr pos:start="517:13" pos:end="517:76"><call pos:start="517:13" pos:end="517:76"><name pos:start="517:13" pos:end="517:18">av_log</name><argument_list pos:start="517:19" pos:end="517:76">(<argument pos:start="517:20" pos:end="517:20"><expr pos:start="517:20" pos:end="517:20"><name pos:start="517:20" pos:end="517:20">s</name></expr></argument>, <argument pos:start="517:23" pos:end="517:36"><expr pos:start="517:23" pos:end="517:36"><name pos:start="517:23" pos:end="517:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="517:39" pos:end="517:68"><expr pos:start="517:39" pos:end="517:68"><literal type="string" pos:start="517:39" pos:end="517:68">"skipping unknown chunk: %X\n"</literal></expr></argument>, <argument pos:start="517:71" pos:end="517:75"><expr pos:start="517:71" pos:end="517:75"><name pos:start="517:71" pos:end="517:75">chunk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="519:1" pos:end="519:5"><name pos:start="519:1" pos:end="519:4">skip</name>:</label>

            <expr_stmt pos:start="521:13" pos:end="521:35"><expr pos:start="521:13" pos:end="521:34"><call pos:start="521:13" pos:end="521:34"><name pos:start="521:13" pos:end="521:21">avio_skip</name><argument_list pos:start="521:22" pos:end="521:34">(<argument pos:start="521:23" pos:end="521:27"><expr pos:start="521:23" pos:end="521:27"><name pos:start="521:23" pos:end="521:27"><name pos:start="521:23" pos:end="521:23">s</name><operator pos:start="521:24" pos:end="521:25">-&gt;</operator><name pos:start="521:26" pos:end="521:27">pb</name></name></expr></argument>, <argument pos:start="521:30" pos:end="521:33"><expr pos:start="521:30" pos:end="521:33"><name pos:start="521:30" pos:end="521:33">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></while>



<label pos:start="529:1" pos:end="529:5"><name pos:start="529:1" pos:end="529:4">fail</name>:</label>

    <expr_stmt pos:start="531:5" pos:end="531:18"><expr pos:start="531:5" pos:end="531:17"><call pos:start="531:5" pos:end="531:17"><name pos:start="531:5" pos:end="531:14">read_close</name><argument_list pos:start="531:15" pos:end="531:17">(<argument pos:start="531:16" pos:end="531:16"><expr pos:start="531:16" pos:end="531:16"><name pos:start="531:16" pos:end="531:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="535:5" pos:end="535:15">return <expr pos:start="535:12" pos:end="535:14"><name pos:start="535:12" pos:end="535:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
