<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/685.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">http_send_data</name><parameter_list pos:start="1:26" pos:end="1:41">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:37">HTTPContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">len</name></decl>, <decl pos:start="5:14" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:16">ret</name></decl>;</decl_stmt>



    <while pos:start="9:5" pos:end="29:5">while <condition pos:start="9:11" pos:end="9:42">(<expr pos:start="9:12" pos:end="9:41"><name pos:start="9:12" pos:end="9:24"><name pos:start="9:12" pos:end="9:12">c</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:24">buffer_ptr</name></name> <operator pos:start="9:26" pos:end="9:27">&gt;=</operator> <name pos:start="9:29" pos:end="9:41"><name pos:start="9:29" pos:end="9:29">c</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:41">buffer_end</name></name></expr>)</condition> <block pos:start="9:44" pos:end="29:5">{<block_content pos:start="11:9" pos:end="27:9">

        <expr_stmt pos:start="11:9" pos:end="11:35"><expr pos:start="11:9" pos:end="11:34"><name pos:start="11:9" pos:end="11:11">ret</name> <operator pos:start="11:13" pos:end="11:13">=</operator> <call pos:start="11:15" pos:end="11:34"><name pos:start="11:15" pos:end="11:31">http_prepare_data</name><argument_list pos:start="11:32" pos:end="11:34">(<argument pos:start="11:33" pos:end="11:33"><expr pos:start="11:33" pos:end="11:33"><name pos:start="11:33" pos:end="11:33">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="13:9" pos:end="27:9"><if pos:start="13:9" pos:end="15:22">if <condition pos:start="13:12" pos:end="13:20">(<expr pos:start="13:13" pos:end="13:19"><name pos:start="13:13" pos:end="13:15">ret</name> <operator pos:start="13:17" pos:end="13:17">&lt;</operator> <literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:22"><block_content pos:start="15:13" pos:end="15:22">

            <return pos:start="15:13" pos:end="15:22">return <expr pos:start="15:20" pos:end="15:21"><operator pos:start="15:20" pos:end="15:20">-</operator><literal type="number" pos:start="15:21" pos:end="15:21">1</literal></expr>;</return></block_content></block></if>

        <if type="elseif" pos:start="17:9" pos:end="21:9">else if <condition pos:start="17:17" pos:end="17:26">(<expr pos:start="17:18" pos:end="17:25"><name pos:start="17:18" pos:end="17:20">ret</name> <operator pos:start="17:22" pos:end="17:23">==</operator> <literal type="number" pos:start="17:25" pos:end="17:25">0</literal></expr>)</condition> <block pos:start="17:28" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:18">

            <break pos:start="19:13" pos:end="19:18">break;</break>

        </block_content>}</block></if> <else pos:start="21:11" pos:end="27:9">else <block pos:start="21:16" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:21">

            <comment type="block" pos:start="23:13" pos:end="23:40">/* state change requested */</comment>

            <return pos:start="25:13" pos:end="25:21">return <expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">0</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="33:5" pos:end="55:5"><if pos:start="33:5" pos:end="55:5">if <condition pos:start="33:8" pos:end="33:38">(<expr pos:start="33:9" pos:end="33:37"><name pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:9">c</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:21">buffer_end</name></name> <operator pos:start="33:23" pos:end="33:23">&gt;</operator> <name pos:start="33:25" pos:end="33:37"><name pos:start="33:25" pos:end="33:25">c</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:37">buffer_ptr</name></name></expr>)</condition> <block pos:start="33:40" pos:end="55:5">{<block_content pos:start="35:9" pos:end="53:9">

        <expr_stmt pos:start="35:9" pos:end="35:73"><expr pos:start="35:9" pos:end="35:72"><name pos:start="35:9" pos:end="35:11">len</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:72"><name pos:start="35:15" pos:end="35:19">write</name><argument_list pos:start="35:20" pos:end="35:72">(<argument pos:start="35:21" pos:end="35:25"><expr pos:start="35:21" pos:end="35:25"><name pos:start="35:21" pos:end="35:25"><name pos:start="35:21" pos:end="35:21">c</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:25">fd</name></name></expr></argument>, <argument pos:start="35:28" pos:end="35:40"><expr pos:start="35:28" pos:end="35:40"><name pos:start="35:28" pos:end="35:40"><name pos:start="35:28" pos:end="35:28">c</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:40">buffer_ptr</name></name></expr></argument>, <argument pos:start="35:43" pos:end="35:71"><expr pos:start="35:43" pos:end="35:71"><name pos:start="35:43" pos:end="35:55"><name pos:start="35:43" pos:end="35:43">c</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:55">buffer_end</name></name> <operator pos:start="35:57" pos:end="35:57">-</operator> <name pos:start="35:59" pos:end="35:71"><name pos:start="35:59" pos:end="35:59">c</name><operator pos:start="35:60" pos:end="35:61">-&gt;</operator><name pos:start="35:62" pos:end="35:71">buffer_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="53:9"><if pos:start="37:9" pos:end="47:9">if <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:15">len</name> <operator pos:start="37:17" pos:end="37:17">&lt;</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>)</condition> <block pos:start="37:22" pos:end="47:9">{<block_content pos:start="39:13" pos:end="45:13">

            <if_stmt pos:start="39:13" pos:end="45:13"><if pos:start="39:13" pos:end="45:13">if <condition pos:start="39:16" pos:end="39:50">(<expr pos:start="39:17" pos:end="39:49"><name pos:start="39:17" pos:end="39:21">errno</name> <operator pos:start="39:23" pos:end="39:24">!=</operator> <name pos:start="39:26" pos:end="39:31">EAGAIN</name> <operator pos:start="39:33" pos:end="39:34">&amp;&amp;</operator> <name pos:start="39:36" pos:end="39:40">errno</name> <operator pos:start="39:42" pos:end="39:43">!=</operator> <name pos:start="39:45" pos:end="39:49">EINTR</name></expr>)</condition> <block pos:start="39:52" pos:end="45:13">{<block_content pos:start="43:17" pos:end="43:26">

                <comment type="block" pos:start="41:17" pos:end="41:46">/* error : close connection */</comment>

                <return pos:start="43:17" pos:end="43:26">return <expr pos:start="43:24" pos:end="43:25"><operator pos:start="43:24" pos:end="43:24">-</operator><literal type="number" pos:start="43:25" pos:end="43:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="53:9">else <block pos:start="47:16" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:33">

            <expr_stmt pos:start="49:13" pos:end="49:33"><expr pos:start="49:13" pos:end="49:32"><name pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:13">c</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:25">buffer_ptr</name></name> <operator pos:start="49:27" pos:end="49:28">+=</operator> <name pos:start="49:30" pos:end="49:32">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:33"><expr pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:25"><name pos:start="51:13" pos:end="51:13">c</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:25">data_count</name></name> <operator pos:start="51:27" pos:end="51:28">+=</operator> <name pos:start="51:30" pos:end="51:32">len</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
