<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10841.c" pos:tabs="8"><function pos:start="1:1" pos:end="209:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">uint8_t</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:38">xen_map_cache_unlocked</name><parameter_list pos:start="1:39" pos:end="3:62">(<parameter pos:start="1:40" pos:end="1:55"><decl pos:start="1:40" pos:end="1:55"><type pos:start="1:40" pos:end="1:55"><name pos:start="1:40" pos:end="1:45">hwaddr</name></type> <name pos:start="1:47" pos:end="1:55">phys_addr</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:68"><decl pos:start="1:58" pos:end="1:68"><type pos:start="1:58" pos:end="1:68"><name pos:start="1:58" pos:end="1:63">hwaddr</name></type> <name pos:start="1:65" pos:end="1:68">size</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:51"><decl pos:start="3:40" pos:end="3:51"><type pos:start="3:40" pos:end="3:51"><name pos:start="3:40" pos:end="3:46">uint8_t</name></type> <name pos:start="3:48" pos:end="3:51">lock</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:61"><decl pos:start="3:54" pos:end="3:61"><type pos:start="3:54" pos:end="3:61"><name pos:start="3:54" pos:end="3:57">bool</name></type> <name pos:start="3:59" pos:end="3:61">dma</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="209:1">{<block_content pos:start="7:5" pos:end="207:61">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MapCacheEntry</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:24">entry</name></decl>, <decl pos:start="7:27" pos:end="7:40"><type ref="prev" pos:start="7:5" pos:end="7:19"><modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:33">pentry</name> <init pos:start="7:35" pos:end="7:40">= <expr pos:start="7:37" pos:end="7:40"><name pos:start="7:37" pos:end="7:40">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">hwaddr</name></type> <name pos:start="9:12" pos:end="9:24">address_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">hwaddr</name></type> <name pos:start="11:12" pos:end="11:25">address_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">hwaddr</name></type> <name pos:start="13:12" pos:end="13:21">cache_size</name> <init pos:start="13:23" pos:end="13:28">= <expr pos:start="13:25" pos:end="13:28"><name pos:start="13:25" pos:end="13:28">size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">hwaddr</name></type> <name pos:start="15:12" pos:end="15:24">test_bit_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:42"><decl pos:start="17:5" pos:end="17:41"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:8">bool</name> <name pos:start="17:10" pos:end="17:19">translated</name></type> <name pos:start="17:21" pos:end="17:33">G_GNUC_UNUSED</name> <init pos:start="17:35" pos:end="17:41">= <expr pos:start="17:37" pos:end="17:41"><name pos:start="17:37" pos:end="17:41">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">bool</name></type> <name pos:start="19:10" pos:end="19:14">dummy</name> <init pos:start="19:16" pos:end="19:22">= <expr pos:start="19:18" pos:end="19:22"><name pos:start="19:18" pos:end="19:22">false</name></expr></init></decl>;</decl_stmt>



<label pos:start="23:1" pos:end="23:9"><name pos:start="23:1" pos:end="23:8">tryagain</name>:</label>

    <expr_stmt pos:start="25:5" pos:end="25:54"><expr pos:start="25:5" pos:end="25:53"><name pos:start="25:5" pos:end="25:17">address_index</name>  <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:30">phys_addr</name> <operator pos:start="25:32" pos:end="25:33">&gt;&gt;</operator> <name pos:start="25:35" pos:end="25:53">MCACHE_BUCKET_SHIFT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:58"><expr pos:start="27:5" pos:end="27:57"><name pos:start="27:5" pos:end="27:18">address_offset</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:30">phys_addr</name> <operator pos:start="27:32" pos:end="27:32">&amp;</operator> <operator pos:start="27:34" pos:end="27:34">(</operator><name pos:start="27:35" pos:end="27:52">MCACHE_BUCKET_SIZE</name> <operator pos:start="27:54" pos:end="27:54">-</operator> <literal type="number" pos:start="27:56" pos:end="27:56">1</literal><operator pos:start="27:57" pos:end="27:57">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:35"><expr pos:start="31:5" pos:end="31:34"><call pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:23">trace_xen_map_cache</name><argument_list pos:start="31:24" pos:end="31:34">(<argument pos:start="31:25" pos:end="31:33"><expr pos:start="31:25" pos:end="31:33"><name pos:start="31:25" pos:end="31:33">phys_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:60">/* test_bit_size is always a multiple of XC_PAGE_SIZE */</comment>

    <if_stmt pos:start="37:5" pos:end="53:5"><if pos:start="37:5" pos:end="49:5">if <condition pos:start="37:8" pos:end="37:13">(<expr pos:start="37:9" pos:end="37:12"><name pos:start="37:9" pos:end="37:12">size</name></expr>)</condition> <block pos:start="37:15" pos:end="49:5">{<block_content pos:start="39:9" pos:end="47:9">

        <expr_stmt pos:start="39:9" pos:end="39:64"><expr pos:start="39:9" pos:end="39:63"><name pos:start="39:9" pos:end="39:21">test_bit_size</name> <operator pos:start="39:23" pos:end="39:23">=</operator> <name pos:start="39:25" pos:end="39:28">size</name> <operator pos:start="39:30" pos:end="39:30">+</operator> <operator pos:start="39:32" pos:end="39:32">(</operator><name pos:start="39:33" pos:end="39:41">phys_addr</name> <operator pos:start="39:43" pos:end="39:43">&amp;</operator> <operator pos:start="39:45" pos:end="39:45">(</operator><name pos:start="39:46" pos:end="39:57">XC_PAGE_SIZE</name> <operator pos:start="39:59" pos:end="39:59">-</operator> <literal type="number" pos:start="39:61" pos:end="39:61">1</literal><operator pos:start="39:62" pos:end="39:62">)</operator><operator pos:start="39:63" pos:end="39:63">)</operator></expr>;</expr_stmt>



        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:41">(<expr pos:start="43:13" pos:end="43:40"><name pos:start="43:13" pos:end="43:25">test_bit_size</name> <operator pos:start="43:27" pos:end="43:27">%</operator> <name pos:start="43:29" pos:end="43:40">XC_PAGE_SIZE</name></expr>)</condition> <block pos:start="43:43" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:75">

            <expr_stmt pos:start="45:13" pos:end="45:75"><expr pos:start="45:13" pos:end="45:74"><name pos:start="45:13" pos:end="45:25">test_bit_size</name> <operator pos:start="45:27" pos:end="45:28">+=</operator> <name pos:start="45:30" pos:end="45:41">XC_PAGE_SIZE</name> <operator pos:start="45:43" pos:end="45:43">-</operator> <operator pos:start="45:45" pos:end="45:45">(</operator><name pos:start="45:46" pos:end="45:58">test_bit_size</name> <operator pos:start="45:60" pos:end="45:60">%</operator> <name pos:start="45:62" pos:end="45:73">XC_PAGE_SIZE</name><operator pos:start="45:74" pos:end="45:74">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="53:5">else <block pos:start="49:12" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:37">

        <expr_stmt pos:start="51:9" pos:end="51:37"><expr pos:start="51:9" pos:end="51:36"><name pos:start="51:9" pos:end="51:21">test_bit_size</name> <operator pos:start="51:23" pos:end="51:23">=</operator> <name pos:start="51:25" pos:end="51:36">XC_PAGE_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="57:5" pos:end="73:5"><if pos:start="57:5" pos:end="73:5">if <condition pos:start="57:8" pos:end="67:55">(<expr pos:start="57:9" pos:end="67:54"><name pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:16">mapcache</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:28">last_entry</name></name> <operator pos:start="57:30" pos:end="57:31">!=</operator> <name pos:start="57:33" pos:end="57:36">NULL</name> <operator pos:start="57:38" pos:end="57:39">&amp;&amp;</operator>

        <name pos:start="59:9" pos:end="59:41"><name pos:start="59:9" pos:end="59:16">mapcache</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:28">last_entry</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:41">paddr_index</name></name> <operator pos:start="59:43" pos:end="59:44">==</operator> <name pos:start="59:46" pos:end="59:58">address_index</name> <operator pos:start="59:60" pos:end="59:61">&amp;&amp;</operator>

        <operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:13">lock</name> <operator pos:start="61:15" pos:end="61:16">&amp;&amp;</operator> <operator pos:start="61:18" pos:end="61:18">!</operator><name pos:start="61:19" pos:end="61:22">size</name> <operator pos:start="61:24" pos:end="61:25">&amp;&amp;</operator>

        <call pos:start="63:9" pos:end="67:54"><name pos:start="63:9" pos:end="63:17">test_bits</name><argument_list pos:start="63:18" pos:end="67:54">(<argument pos:start="63:19" pos:end="63:49"><expr pos:start="63:19" pos:end="63:49"><name pos:start="63:19" pos:end="63:32">address_offset</name> <operator pos:start="63:34" pos:end="63:35">&gt;&gt;</operator> <name pos:start="63:37" pos:end="63:49">XC_PAGE_SHIFT</name></expr></argument>,

                  <argument pos:start="65:19" pos:end="65:48"><expr pos:start="65:19" pos:end="65:48"><name pos:start="65:19" pos:end="65:31">test_bit_size</name> <operator pos:start="65:33" pos:end="65:34">&gt;&gt;</operator> <name pos:start="65:36" pos:end="65:48">XC_PAGE_SHIFT</name></expr></argument>,

                  <argument pos:start="67:19" pos:end="67:53"><expr pos:start="67:19" pos:end="67:53"><name pos:start="67:19" pos:end="67:53"><name pos:start="67:19" pos:end="67:26">mapcache</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:38">last_entry</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:53">valid_mapping</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:57" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:65">

        <expr_stmt pos:start="69:9" pos:end="69:86"><expr pos:start="69:9" pos:end="69:85"><call pos:start="69:9" pos:end="69:85"><name pos:start="69:9" pos:end="69:34">trace_xen_map_cache_return</name><argument_list pos:start="69:35" pos:end="69:85">(<argument pos:start="69:36" pos:end="69:84"><expr pos:start="69:36" pos:end="69:84"><name pos:start="69:36" pos:end="69:67"><name pos:start="69:36" pos:end="69:43">mapcache</name><operator pos:start="69:44" pos:end="69:45">-&gt;</operator><name pos:start="69:46" pos:end="69:55">last_entry</name><operator pos:start="69:56" pos:end="69:57">-&gt;</operator><name pos:start="69:58" pos:end="69:67">vaddr_base</name></name> <operator pos:start="69:69" pos:end="69:69">+</operator> <name pos:start="69:71" pos:end="69:84">address_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:65">return <expr pos:start="71:16" pos:end="71:64"><name pos:start="71:16" pos:end="71:47"><name pos:start="71:16" pos:end="71:23">mapcache</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:35">last_entry</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:47">vaddr_base</name></name> <operator pos:start="71:49" pos:end="71:49">+</operator> <name pos:start="71:51" pos:end="71:64">address_offset</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:57">/* size is always a multiple of MCACHE_BUCKET_SIZE */</comment>

    <if_stmt pos:start="79:5" pos:end="93:5"><if pos:start="79:5" pos:end="89:5">if <condition pos:start="79:8" pos:end="79:13">(<expr pos:start="79:9" pos:end="79:12"><name pos:start="79:9" pos:end="79:12">size</name></expr>)</condition> <block pos:start="79:15" pos:end="89:5">{<block_content pos:start="81:9" pos:end="87:9">

        <expr_stmt pos:start="81:9" pos:end="81:43"><expr pos:start="81:9" pos:end="81:42"><name pos:start="81:9" pos:end="81:18">cache_size</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <name pos:start="81:22" pos:end="81:25">size</name> <operator pos:start="81:27" pos:end="81:27">+</operator> <name pos:start="81:29" pos:end="81:42">address_offset</name></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="87:9"><if pos:start="83:9" pos:end="87:9">if <condition pos:start="83:12" pos:end="83:44">(<expr pos:start="83:13" pos:end="83:43"><name pos:start="83:13" pos:end="83:22">cache_size</name> <operator pos:start="83:24" pos:end="83:24">%</operator> <name pos:start="83:26" pos:end="83:43">MCACHE_BUCKET_SIZE</name></expr>)</condition> <block pos:start="83:46" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:81">

            <expr_stmt pos:start="85:13" pos:end="85:81"><expr pos:start="85:13" pos:end="85:80"><name pos:start="85:13" pos:end="85:22">cache_size</name> <operator pos:start="85:24" pos:end="85:25">+=</operator> <name pos:start="85:27" pos:end="85:44">MCACHE_BUCKET_SIZE</name> <operator pos:start="85:46" pos:end="85:46">-</operator> <operator pos:start="85:48" pos:end="85:48">(</operator><name pos:start="85:49" pos:end="85:58">cache_size</name> <operator pos:start="85:60" pos:end="85:60">%</operator> <name pos:start="85:62" pos:end="85:79">MCACHE_BUCKET_SIZE</name><operator pos:start="85:80" pos:end="85:80">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="89:7" pos:end="93:5">else <block pos:start="89:12" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:40">

        <expr_stmt pos:start="91:9" pos:end="91:40"><expr pos:start="91:9" pos:end="91:39"><name pos:start="91:9" pos:end="91:18">cache_size</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <name pos:start="91:22" pos:end="91:39">MCACHE_BUCKET_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:67"><expr pos:start="97:5" pos:end="97:66"><name pos:start="97:5" pos:end="97:9">entry</name> <operator pos:start="97:11" pos:end="97:11">=</operator> <operator pos:start="97:13" pos:end="97:13">&amp;</operator><name pos:start="97:14" pos:end="97:66"><name pos:start="97:14" pos:end="97:21">mapcache</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:28">entry</name><index pos:start="97:29" pos:end="97:66">[<expr pos:start="97:30" pos:end="97:65"><name pos:start="97:30" pos:end="97:42">address_index</name> <operator pos:start="97:44" pos:end="97:44">%</operator> <name pos:start="97:46" pos:end="97:65"><name pos:start="97:46" pos:end="97:53">mapcache</name><operator pos:start="97:54" pos:end="97:55">-&gt;</operator><name pos:start="97:56" pos:end="97:65">nr_buckets</name></name></expr>]</index></name></expr>;</expr_stmt>



    <while pos:start="101:5" pos:end="115:5">while <condition pos:start="101:11" pos:end="109:40">(<expr pos:start="101:12" pos:end="109:39"><name pos:start="101:12" pos:end="101:16">entry</name> <operator pos:start="101:18" pos:end="101:19">&amp;&amp;</operator> <name pos:start="101:21" pos:end="101:31"><name pos:start="101:21" pos:end="101:25">entry</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:31">lock</name></name> <operator pos:start="101:33" pos:end="101:34">&amp;&amp;</operator> <name pos:start="101:36" pos:end="101:52"><name pos:start="101:36" pos:end="101:40">entry</name><operator pos:start="101:41" pos:end="101:42">-&gt;</operator><name pos:start="101:43" pos:end="101:52">vaddr_base</name></name> <operator pos:start="101:54" pos:end="101:55">&amp;&amp;</operator>

            <operator pos:start="103:13" pos:end="103:13">(</operator><name pos:start="103:14" pos:end="103:31"><name pos:start="103:14" pos:end="103:18">entry</name><operator pos:start="103:19" pos:end="103:20">-&gt;</operator><name pos:start="103:21" pos:end="103:31">paddr_index</name></name> <operator pos:start="103:33" pos:end="103:34">!=</operator> <name pos:start="103:36" pos:end="103:48">address_index</name> <operator pos:start="103:50" pos:end="103:51">||</operator> <name pos:start="103:53" pos:end="103:63"><name pos:start="103:53" pos:end="103:57">entry</name><operator pos:start="103:58" pos:end="103:59">-&gt;</operator><name pos:start="103:60" pos:end="103:63">size</name></name> <operator pos:start="103:65" pos:end="103:66">!=</operator> <name pos:start="103:68" pos:end="103:77">cache_size</name> <operator pos:start="103:79" pos:end="103:80">||</operator>

             <operator pos:start="105:14" pos:end="105:14">!</operator><call pos:start="105:15" pos:end="109:38"><name pos:start="105:15" pos:end="105:23">test_bits</name><argument_list pos:start="105:24" pos:end="109:38">(<argument pos:start="105:25" pos:end="105:55"><expr pos:start="105:25" pos:end="105:55"><name pos:start="105:25" pos:end="105:38">address_offset</name> <operator pos:start="105:40" pos:end="105:41">&gt;&gt;</operator> <name pos:start="105:43" pos:end="105:55">XC_PAGE_SHIFT</name></expr></argument>,

                 <argument pos:start="107:18" pos:end="107:47"><expr pos:start="107:18" pos:end="107:47"><name pos:start="107:18" pos:end="107:30">test_bit_size</name> <operator pos:start="107:32" pos:end="107:33">&gt;&gt;</operator> <name pos:start="107:35" pos:end="107:47">XC_PAGE_SHIFT</name></expr></argument>,

                 <argument pos:start="109:18" pos:end="109:37"><expr pos:start="109:18" pos:end="109:37"><name pos:start="109:18" pos:end="109:37"><name pos:start="109:18" pos:end="109:22">entry</name><operator pos:start="109:23" pos:end="109:24">-&gt;</operator><name pos:start="109:25" pos:end="109:37">valid_mapping</name></name></expr></argument>)</argument_list></call><operator pos:start="109:39" pos:end="109:39">)</operator></expr>)</condition> <block pos:start="109:42" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:28">

        <expr_stmt pos:start="111:9" pos:end="111:23"><expr pos:start="111:9" pos:end="111:22"><name pos:start="111:9" pos:end="111:14">pentry</name> <operator pos:start="111:16" pos:end="111:16">=</operator> <name pos:start="111:18" pos:end="111:22">entry</name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:28"><expr pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:13">entry</name> <operator pos:start="113:15" pos:end="113:15">=</operator> <name pos:start="113:17" pos:end="113:27"><name pos:start="113:17" pos:end="113:21">entry</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:27">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="117:5" pos:end="141:5"><if pos:start="117:5" pos:end="125:5">if <condition pos:start="117:8" pos:end="117:15">(<expr pos:start="117:9" pos:end="117:14"><operator pos:start="117:9" pos:end="117:9">!</operator><name pos:start="117:10" pos:end="117:14">entry</name></expr>)</condition> <block pos:start="117:17" pos:end="125:5">{<block_content pos:start="119:9" pos:end="123:72">

        <expr_stmt pos:start="119:9" pos:end="119:50"><expr pos:start="119:9" pos:end="119:49"><name pos:start="119:9" pos:end="119:13">entry</name> <operator pos:start="119:15" pos:end="119:15">=</operator> <call pos:start="119:17" pos:end="119:49"><name pos:start="119:17" pos:end="119:25">g_malloc0</name><argument_list pos:start="119:26" pos:end="119:49">(<argument pos:start="119:27" pos:end="119:48"><expr pos:start="119:27" pos:end="119:48"><sizeof pos:start="119:27" pos:end="119:48">sizeof <argument_list pos:start="119:34" pos:end="119:48">(<argument pos:start="119:35" pos:end="119:47"><expr pos:start="119:35" pos:end="119:47"><name pos:start="119:35" pos:end="119:47">MapCacheEntry</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:29"><expr pos:start="121:9" pos:end="121:28"><name pos:start="121:9" pos:end="121:20"><name pos:start="121:9" pos:end="121:14">pentry</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:20">next</name></name> <operator pos:start="121:22" pos:end="121:22">=</operator> <name pos:start="121:24" pos:end="121:28">entry</name></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:72"><expr pos:start="123:9" pos:end="123:71"><call pos:start="123:9" pos:end="123:71"><name pos:start="123:9" pos:end="123:24">xen_remap_bucket</name><argument_list pos:start="123:25" pos:end="123:71">(<argument pos:start="123:26" pos:end="123:30"><expr pos:start="123:26" pos:end="123:30"><name pos:start="123:26" pos:end="123:30">entry</name></expr></argument>, <argument pos:start="123:33" pos:end="123:36"><expr pos:start="123:33" pos:end="123:36"><name pos:start="123:33" pos:end="123:36">NULL</name></expr></argument>, <argument pos:start="123:39" pos:end="123:48"><expr pos:start="123:39" pos:end="123:48"><name pos:start="123:39" pos:end="123:48">cache_size</name></expr></argument>, <argument pos:start="123:51" pos:end="123:63"><expr pos:start="123:51" pos:end="123:63"><name pos:start="123:51" pos:end="123:63">address_index</name></expr></argument>, <argument pos:start="123:66" pos:end="123:70"><expr pos:start="123:66" pos:end="123:70"><name pos:start="123:66" pos:end="123:70">dummy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="125:7" pos:end="141:5">else if <condition pos:start="125:15" pos:end="125:28">(<expr pos:start="125:16" pos:end="125:27"><operator pos:start="125:16" pos:end="125:16">!</operator><name pos:start="125:17" pos:end="125:27"><name pos:start="125:17" pos:end="125:21">entry</name><operator pos:start="125:22" pos:end="125:23">-&gt;</operator><name pos:start="125:24" pos:end="125:27">lock</name></name></expr>)</condition> <block pos:start="125:30" pos:end="141:5">{<block_content pos:start="127:9" pos:end="139:9">

        <if_stmt pos:start="127:9" pos:end="139:9"><if pos:start="127:9" pos:end="139:9">if <condition pos:start="127:12" pos:end="135:42">(<expr pos:start="127:13" pos:end="135:41"><operator pos:start="127:13" pos:end="127:13">!</operator><name pos:start="127:14" pos:end="127:30"><name pos:start="127:14" pos:end="127:18">entry</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:30">vaddr_base</name></name> <operator pos:start="127:32" pos:end="127:33">||</operator> <name pos:start="127:35" pos:end="127:52"><name pos:start="127:35" pos:end="127:39">entry</name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:52">paddr_index</name></name> <operator pos:start="127:54" pos:end="127:55">!=</operator> <name pos:start="127:57" pos:end="127:69">address_index</name> <operator pos:start="127:71" pos:end="127:72">||</operator>

                <name pos:start="129:17" pos:end="129:27"><name pos:start="129:17" pos:end="129:21">entry</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:27">size</name></name> <operator pos:start="129:29" pos:end="129:30">!=</operator> <name pos:start="129:32" pos:end="129:41">cache_size</name> <operator pos:start="129:43" pos:end="129:44">||</operator>

                <operator pos:start="131:17" pos:end="131:17">!</operator><call pos:start="131:18" pos:end="135:41"><name pos:start="131:18" pos:end="131:26">test_bits</name><argument_list pos:start="131:27" pos:end="135:41">(<argument pos:start="131:28" pos:end="131:58"><expr pos:start="131:28" pos:end="131:58"><name pos:start="131:28" pos:end="131:41">address_offset</name> <operator pos:start="131:43" pos:end="131:44">&gt;&gt;</operator> <name pos:start="131:46" pos:end="131:58">XC_PAGE_SHIFT</name></expr></argument>,

                    <argument pos:start="133:21" pos:end="133:50"><expr pos:start="133:21" pos:end="133:50"><name pos:start="133:21" pos:end="133:33">test_bit_size</name> <operator pos:start="133:35" pos:end="133:36">&gt;&gt;</operator> <name pos:start="133:38" pos:end="133:50">XC_PAGE_SHIFT</name></expr></argument>,

                    <argument pos:start="135:21" pos:end="135:40"><expr pos:start="135:21" pos:end="135:40"><name pos:start="135:21" pos:end="135:40"><name pos:start="135:21" pos:end="135:25">entry</name><operator pos:start="135:26" pos:end="135:27">-&gt;</operator><name pos:start="135:28" pos:end="135:40">valid_mapping</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="135:44" pos:end="139:9">{<block_content pos:start="137:13" pos:end="137:76">

            <expr_stmt pos:start="137:13" pos:end="137:76"><expr pos:start="137:13" pos:end="137:75"><call pos:start="137:13" pos:end="137:75"><name pos:start="137:13" pos:end="137:28">xen_remap_bucket</name><argument_list pos:start="137:29" pos:end="137:75">(<argument pos:start="137:30" pos:end="137:34"><expr pos:start="137:30" pos:end="137:34"><name pos:start="137:30" pos:end="137:34">entry</name></expr></argument>, <argument pos:start="137:37" pos:end="137:40"><expr pos:start="137:37" pos:end="137:40"><name pos:start="137:37" pos:end="137:40">NULL</name></expr></argument>, <argument pos:start="137:43" pos:end="137:52"><expr pos:start="137:43" pos:end="137:52"><name pos:start="137:43" pos:end="137:52">cache_size</name></expr></argument>, <argument pos:start="137:55" pos:end="137:67"><expr pos:start="137:55" pos:end="137:67"><name pos:start="137:55" pos:end="137:67">address_index</name></expr></argument>, <argument pos:start="137:70" pos:end="137:74"><expr pos:start="137:70" pos:end="137:74"><name pos:start="137:70" pos:end="137:74">dummy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="145:5" pos:end="179:5"><if pos:start="145:5" pos:end="179:5">if<condition pos:start="145:7" pos:end="149:38">(<expr pos:start="145:8" pos:end="149:37"><operator pos:start="145:8" pos:end="145:8">!</operator><call pos:start="145:9" pos:end="149:37"><name pos:start="145:9" pos:end="145:17">test_bits</name><argument_list pos:start="145:18" pos:end="149:37">(<argument pos:start="145:19" pos:end="145:49"><expr pos:start="145:19" pos:end="145:49"><name pos:start="145:19" pos:end="145:32">address_offset</name> <operator pos:start="145:34" pos:end="145:35">&gt;&gt;</operator> <name pos:start="145:37" pos:end="145:49">XC_PAGE_SHIFT</name></expr></argument>,

                <argument pos:start="147:17" pos:end="147:46"><expr pos:start="147:17" pos:end="147:46"><name pos:start="147:17" pos:end="147:29">test_bit_size</name> <operator pos:start="147:31" pos:end="147:32">&gt;&gt;</operator> <name pos:start="147:34" pos:end="147:46">XC_PAGE_SHIFT</name></expr></argument>,

                <argument pos:start="149:17" pos:end="149:36"><expr pos:start="149:17" pos:end="149:36"><name pos:start="149:17" pos:end="149:36"><name pos:start="149:17" pos:end="149:21">entry</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:36">valid_mapping</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="149:40" pos:end="179:5">{<block_content pos:start="151:9" pos:end="177:20">

        <expr_stmt pos:start="151:9" pos:end="154:0"><expr pos:start="151:9" pos:end="151:35"><name pos:start="151:9" pos:end="151:28"><name pos:start="151:9" pos:end="151:16">mapcache</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:28">last_entry</name></name> <operator pos:start="151:30" pos:end="151:30">=</operator> <name pos:start="151:32" pos:end="151:35">NULL</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="153:1" pos:end="153:25">#<cpp:directive pos:start="153:2" pos:end="153:6">ifdef</cpp:directive> <name pos:start="153:8" pos:end="153:25">XEN_COMPAT_PHYSMAP</name></cpp:ifdef>

        <if_stmt pos:start="155:9" pos:end="166:0"><if pos:start="155:9" pos:end="166:0">if <condition pos:start="155:12" pos:end="155:58">(<expr pos:start="155:13" pos:end="155:57"><operator pos:start="155:13" pos:end="155:13">!</operator><name pos:start="155:14" pos:end="155:23">translated</name> <operator pos:start="155:25" pos:end="155:26">&amp;&amp;</operator> <name pos:start="155:28" pos:end="155:57"><name pos:start="155:28" pos:end="155:35">mapcache</name><operator pos:start="155:36" pos:end="155:37">-&gt;</operator><name pos:start="155:38" pos:end="155:57">phys_offset_to_gaddr</name></name></expr>)</condition> <block pos:start="155:60" pos:end="166:0">{<block_content pos:start="157:13" pos:end="161:26">

            <expr_stmt pos:start="157:13" pos:end="157:90"><expr pos:start="157:13" pos:end="157:89"><name pos:start="157:13" pos:end="157:21">phys_addr</name> <operator pos:start="157:23" pos:end="157:23">=</operator> <call pos:start="157:25" pos:end="157:89"><name pos:start="157:25" pos:end="157:54"><name pos:start="157:25" pos:end="157:32">mapcache</name><operator pos:start="157:33" pos:end="157:34">-&gt;</operator><name pos:start="157:35" pos:end="157:54">phys_offset_to_gaddr</name></name><argument_list pos:start="157:55" pos:end="157:89">(<argument pos:start="157:56" pos:end="157:64"><expr pos:start="157:56" pos:end="157:64"><name pos:start="157:56" pos:end="157:64">phys_addr</name></expr></argument>, <argument pos:start="157:67" pos:end="157:70"><expr pos:start="157:67" pos:end="157:70"><name pos:start="157:67" pos:end="157:70">size</name></expr></argument>, <argument pos:start="157:73" pos:end="157:88"><expr pos:start="157:73" pos:end="157:88"><name pos:start="157:73" pos:end="157:88"><name pos:start="157:73" pos:end="157:80">mapcache</name><operator pos:start="157:81" pos:end="157:82">-&gt;</operator><name pos:start="157:83" pos:end="157:88">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:30"><expr pos:start="159:13" pos:end="159:29"><name pos:start="159:13" pos:end="159:22">translated</name> <operator pos:start="159:24" pos:end="159:24">=</operator> <name pos:start="159:26" pos:end="159:29">true</name></expr>;</expr_stmt>

            <goto pos:start="161:13" pos:end="161:26">goto <name pos:start="161:18" pos:end="161:25">tryagain</name>;</goto>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="165:1" pos:end="165:6">#<cpp:directive pos:start="165:2" pos:end="165:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="167:9" pos:end="173:9"><if pos:start="167:9" pos:end="173:9">if <condition pos:start="167:12" pos:end="167:58">(<expr pos:start="167:13" pos:end="167:57"><operator pos:start="167:13" pos:end="167:13">!</operator><name pos:start="167:14" pos:end="167:18">dummy</name> <operator pos:start="167:20" pos:end="167:21">&amp;&amp;</operator> <call pos:start="167:23" pos:end="167:57"><name pos:start="167:23" pos:end="167:36">runstate_check</name><argument_list pos:start="167:37" pos:end="167:57">(<argument pos:start="167:38" pos:end="167:56"><expr pos:start="167:38" pos:end="167:56"><name pos:start="167:38" pos:end="167:56">RUN_STATE_INMIGRATE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="167:60" pos:end="173:9">{<block_content pos:start="169:13" pos:end="171:26">

            <expr_stmt pos:start="169:13" pos:end="169:25"><expr pos:start="169:13" pos:end="169:24"><name pos:start="169:13" pos:end="169:17">dummy</name> <operator pos:start="169:19" pos:end="169:19">=</operator> <name pos:start="169:21" pos:end="169:24">true</name></expr>;</expr_stmt>

            <goto pos:start="171:13" pos:end="171:26">goto <name pos:start="171:18" pos:end="171:25">tryagain</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:41"><expr pos:start="175:9" pos:end="175:40"><call pos:start="175:9" pos:end="175:40"><name pos:start="175:9" pos:end="175:34">trace_xen_map_cache_return</name><argument_list pos:start="175:35" pos:end="175:40">(<argument pos:start="175:36" pos:end="175:39"><expr pos:start="175:36" pos:end="175:39"><name pos:start="175:36" pos:end="175:39">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="177:9" pos:end="177:20">return <expr pos:start="177:16" pos:end="177:19"><name pos:start="177:16" pos:end="177:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:33"><expr pos:start="183:5" pos:end="183:32"><name pos:start="183:5" pos:end="183:24"><name pos:start="183:5" pos:end="183:12">mapcache</name><operator pos:start="183:13" pos:end="183:14">-&gt;</operator><name pos:start="183:15" pos:end="183:24">last_entry</name></name> <operator pos:start="183:26" pos:end="183:26">=</operator> <name pos:start="183:28" pos:end="183:32">entry</name></expr>;</expr_stmt>

    <if_stmt pos:start="185:5" pos:end="201:5"><if pos:start="185:5" pos:end="201:5">if <condition pos:start="185:8" pos:end="185:13">(<expr pos:start="185:9" pos:end="185:12"><name pos:start="185:9" pos:end="185:12">lock</name></expr>)</condition> <block pos:start="185:15" pos:end="201:5">{<block_content pos:start="187:9" pos:end="199:70">

        <decl_stmt pos:start="187:9" pos:end="187:63"><decl pos:start="187:9" pos:end="187:62"><type pos:start="187:9" pos:end="187:21"><name pos:start="187:9" pos:end="187:19">MapCacheRev</name> <modifier pos:start="187:21" pos:end="187:21">*</modifier></type><name pos:start="187:22" pos:end="187:29">reventry</name> <init pos:start="187:31" pos:end="187:62">= <expr pos:start="187:33" pos:end="187:62"><call pos:start="187:33" pos:end="187:62"><name pos:start="187:33" pos:end="187:41">g_malloc0</name><argument_list pos:start="187:42" pos:end="187:62">(<argument pos:start="187:43" pos:end="187:61"><expr pos:start="187:43" pos:end="187:61"><sizeof pos:start="187:43" pos:end="187:61">sizeof<argument_list pos:start="187:49" pos:end="187:61">(<argument pos:start="187:50" pos:end="187:60"><expr pos:start="187:50" pos:end="187:60"><name pos:start="187:50" pos:end="187:60">MapCacheRev</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:22"><expr pos:start="189:9" pos:end="189:21"><name pos:start="189:9" pos:end="189:19"><name pos:start="189:9" pos:end="189:13">entry</name><operator pos:start="189:14" pos:end="189:15">-&gt;</operator><name pos:start="189:16" pos:end="189:19">lock</name></name><operator pos:start="189:20" pos:end="189:21">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:28"><expr pos:start="191:9" pos:end="191:27"><name pos:start="191:9" pos:end="191:21"><name pos:start="191:9" pos:end="191:16">reventry</name><operator pos:start="191:17" pos:end="191:18">-&gt;</operator><name pos:start="191:19" pos:end="191:21">dma</name></name> <operator pos:start="191:23" pos:end="191:23">=</operator> <name pos:start="191:25" pos:end="191:27">dma</name></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:80"><expr pos:start="193:9" pos:end="193:79"><name pos:start="193:9" pos:end="193:27"><name pos:start="193:9" pos:end="193:16">reventry</name><operator pos:start="193:17" pos:end="193:18">-&gt;</operator><name pos:start="193:19" pos:end="193:27">vaddr_req</name></name> <operator pos:start="193:29" pos:end="193:29">=</operator> <name pos:start="193:31" pos:end="193:62"><name pos:start="193:31" pos:end="193:38">mapcache</name><operator pos:start="193:39" pos:end="193:40">-&gt;</operator><name pos:start="193:41" pos:end="193:50">last_entry</name><operator pos:start="193:51" pos:end="193:52">-&gt;</operator><name pos:start="193:53" pos:end="193:62">vaddr_base</name></name> <operator pos:start="193:64" pos:end="193:64">+</operator> <name pos:start="193:66" pos:end="193:79">address_offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:66"><expr pos:start="195:9" pos:end="195:65"><name pos:start="195:9" pos:end="195:29"><name pos:start="195:9" pos:end="195:16">reventry</name><operator pos:start="195:17" pos:end="195:18">-&gt;</operator><name pos:start="195:19" pos:end="195:29">paddr_index</name></name> <operator pos:start="195:31" pos:end="195:31">=</operator> <name pos:start="195:33" pos:end="195:65"><name pos:start="195:33" pos:end="195:40">mapcache</name><operator pos:start="195:41" pos:end="195:42">-&gt;</operator><name pos:start="195:43" pos:end="195:52">last_entry</name><operator pos:start="195:53" pos:end="195:54">-&gt;</operator><name pos:start="195:55" pos:end="195:65">paddr_index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:37"><expr pos:start="197:9" pos:end="197:36"><name pos:start="197:9" pos:end="197:22"><name pos:start="197:9" pos:end="197:16">reventry</name><operator pos:start="197:17" pos:end="197:18">-&gt;</operator><name pos:start="197:19" pos:end="197:22">size</name></name> <operator pos:start="197:24" pos:end="197:24">=</operator> <name pos:start="197:26" pos:end="197:36"><name pos:start="197:26" pos:end="197:30">entry</name><operator pos:start="197:31" pos:end="197:32">-&gt;</operator><name pos:start="197:33" pos:end="197:36">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:70"><expr pos:start="199:9" pos:end="199:69"><call pos:start="199:9" pos:end="199:69"><name pos:start="199:9" pos:end="199:26">QTAILQ_INSERT_HEAD</name><argument_list pos:start="199:27" pos:end="199:69">(<argument pos:start="199:28" pos:end="199:52"><expr pos:start="199:28" pos:end="199:52"><operator pos:start="199:28" pos:end="199:28">&amp;</operator><name pos:start="199:29" pos:end="199:52"><name pos:start="199:29" pos:end="199:36">mapcache</name><operator pos:start="199:37" pos:end="199:38">-&gt;</operator><name pos:start="199:39" pos:end="199:52">locked_entries</name></name></expr></argument>, <argument pos:start="199:55" pos:end="199:62"><expr pos:start="199:55" pos:end="199:62"><name pos:start="199:55" pos:end="199:62">reventry</name></expr></argument>, <argument pos:start="199:65" pos:end="199:68"><expr pos:start="199:65" pos:end="199:68"><name pos:start="199:65" pos:end="199:68">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="205:5" pos:end="205:82"><expr pos:start="205:5" pos:end="205:81"><call pos:start="205:5" pos:end="205:81"><name pos:start="205:5" pos:end="205:30">trace_xen_map_cache_return</name><argument_list pos:start="205:31" pos:end="205:81">(<argument pos:start="205:32" pos:end="205:80"><expr pos:start="205:32" pos:end="205:80"><name pos:start="205:32" pos:end="205:63"><name pos:start="205:32" pos:end="205:39">mapcache</name><operator pos:start="205:40" pos:end="205:41">-&gt;</operator><name pos:start="205:42" pos:end="205:51">last_entry</name><operator pos:start="205:52" pos:end="205:53">-&gt;</operator><name pos:start="205:54" pos:end="205:63">vaddr_base</name></name> <operator pos:start="205:65" pos:end="205:65">+</operator> <name pos:start="205:67" pos:end="205:80">address_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="207:5" pos:end="207:61">return <expr pos:start="207:12" pos:end="207:60"><name pos:start="207:12" pos:end="207:43"><name pos:start="207:12" pos:end="207:19">mapcache</name><operator pos:start="207:20" pos:end="207:21">-&gt;</operator><name pos:start="207:22" pos:end="207:31">last_entry</name><operator pos:start="207:32" pos:end="207:33">-&gt;</operator><name pos:start="207:34" pos:end="207:43">vaddr_base</name></name> <operator pos:start="207:45" pos:end="207:45">+</operator> <name pos:start="207:47" pos:end="207:60">address_offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
