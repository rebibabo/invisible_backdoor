<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">vp6_parse_coeff_huffman</name><parameter_list pos:start="1:36" pos:end="1:51">(<parameter pos:start="1:37" pos:end="1:50"><decl pos:start="1:37" pos:end="1:50"><type pos:start="1:37" pos:end="1:49"><name pos:start="1:37" pos:end="1:47">VP56Context</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:5">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VP56Model</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">model</name> <init pos:start="5:22" pos:end="5:32">= <expr pos:start="5:24" pos:end="5:32"><name pos:start="5:24" pos:end="5:32"><name pos:start="5:24" pos:end="5:24">s</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:32">modelp</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:20">permute</name> <init pos:start="7:22" pos:end="7:46">= <expr pos:start="7:24" pos:end="7:46"><name pos:start="7:24" pos:end="7:46"><name pos:start="7:24" pos:end="7:24">s</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:35">scantable</name><operator pos:start="7:36" pos:end="7:36">.</operator><name pos:start="7:37" pos:end="7:46">permutated</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:7">VLC</name> <modifier pos:start="9:9" pos:end="9:9">*</modifier></type><name pos:start="9:10" pos:end="9:18">vlc_coeff</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">coeff</name></decl>, <decl pos:start="11:16" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:16" pos:end="11:19">sign</name></decl>, <decl pos:start="11:22" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:30">coeff_idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">b</name></decl>, <decl pos:start="13:12" pos:end="13:13"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:13">cg</name></decl>, <decl pos:start="13:16" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:18">idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">pt</name> <init pos:start="15:12" pos:end="15:14">= <expr pos:start="15:14" pos:end="15:14"><literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr></init></decl>;</decl_stmt>    <comment type="block" pos:start="15:20" pos:end="15:59">/* plane type (0 for Y, 1 for U or V) */</comment>



    <for pos:start="19:5" pos:end="109:5">for <control pos:start="19:9" pos:end="19:23">(<init pos:start="19:10" pos:end="19:13"><expr pos:start="19:10" pos:end="19:12"><name pos:start="19:10" pos:end="19:10">b</name><operator pos:start="19:11" pos:end="19:11">=</operator><literal type="number" pos:start="19:12" pos:end="19:12">0</literal></expr>;</init> <condition pos:start="19:15" pos:end="19:18"><expr pos:start="19:15" pos:end="19:17"><name pos:start="19:15" pos:end="19:15">b</name><operator pos:start="19:16" pos:end="19:16">&lt;</operator><literal type="number" pos:start="19:17" pos:end="19:17">6</literal></expr>;</condition> <incr pos:start="19:20" pos:end="19:22"><expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:20">b</name><operator pos:start="19:21" pos:end="19:22">++</operator></expr></incr>)</control> <block pos:start="19:25" pos:end="109:5">{<block_content pos:start="21:9" pos:end="107:9">

        <decl_stmt pos:start="21:9" pos:end="21:19"><decl pos:start="21:9" pos:end="21:18"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:14">ct</name> <init pos:start="21:16" pos:end="21:18">= <expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr></init></decl>;</decl_stmt>    <comment type="block" pos:start="21:24" pos:end="21:38">/* code type */</comment>

        <if_stmt pos:start="23:9" pos:end="23:26"><if pos:start="23:9" pos:end="23:26">if <condition pos:start="23:12" pos:end="23:18">(<expr pos:start="23:13" pos:end="23:17"><name pos:start="23:13" pos:end="23:13">b</name> <operator pos:start="23:15" pos:end="23:15">&gt;</operator> <literal type="number" pos:start="23:17" pos:end="23:17">3</literal></expr>)</condition><block type="pseudo" pos:start="23:20" pos:end="23:26"><block_content pos:start="23:20" pos:end="23:26"> <expr_stmt pos:start="23:20" pos:end="23:26"><expr pos:start="23:20" pos:end="23:25"><name pos:start="23:20" pos:end="23:21">pt</name> <operator pos:start="23:23" pos:end="23:23">=</operator> <literal type="number" pos:start="23:25" pos:end="23:25">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:37"><expr pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:17">vlc_coeff</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <operator pos:start="25:21" pos:end="25:21">&amp;</operator><name pos:start="25:22" pos:end="25:36"><name pos:start="25:22" pos:end="25:22">s</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:32">dccv_vlc</name><index pos:start="25:33" pos:end="25:36">[<expr pos:start="25:34" pos:end="25:35"><name pos:start="25:34" pos:end="25:35">pt</name></expr>]</index></name></expr>;</expr_stmt>



        <for pos:start="29:9" pos:end="107:9">for <control pos:start="29:13" pos:end="29:41">(<init pos:start="29:14" pos:end="29:25"><expr pos:start="29:14" pos:end="29:24"><name pos:start="29:14" pos:end="29:22">coeff_idx</name><operator pos:start="29:23" pos:end="29:23">=</operator><literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>;</init> <condition pos:start="29:27" pos:end="29:39"><expr pos:start="29:27" pos:end="29:38"><name pos:start="29:27" pos:end="29:35">coeff_idx</name><operator pos:start="29:36" pos:end="29:36">&lt;</operator><literal type="number" pos:start="29:37" pos:end="29:38">64</literal></expr>;</condition> <incr/>)</control> <block pos:start="29:43" pos:end="107:9">{<block_content pos:start="31:13" pos:end="105:49">

            <decl_stmt pos:start="31:13" pos:end="31:24"><decl pos:start="31:13" pos:end="31:23"><type pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">int</name></type> <name pos:start="31:17" pos:end="31:19">run</name> <init pos:start="31:21" pos:end="31:23">= <expr pos:start="31:23" pos:end="31:23"><literal type="number" pos:start="31:23" pos:end="31:23">1</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="33:13" pos:end="99:13"><if pos:start="33:13" pos:end="41:13">if <condition pos:start="33:16" pos:end="33:57">(<expr pos:start="33:17" pos:end="33:56"><name pos:start="33:17" pos:end="33:25">coeff_idx</name><operator pos:start="33:26" pos:end="33:26">&lt;</operator><literal type="number" pos:start="33:27" pos:end="33:27">2</literal> <operator pos:start="33:29" pos:end="33:30">&amp;&amp;</operator> <name pos:start="33:32" pos:end="33:56"><name pos:start="33:32" pos:end="33:32">s</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:41">nb_null</name><index pos:start="33:42" pos:end="33:52">[<expr pos:start="33:43" pos:end="33:51"><name pos:start="33:43" pos:end="33:51">coeff_idx</name></expr>]</index><index pos:start="33:53" pos:end="33:56">[<expr pos:start="33:54" pos:end="33:55"><name pos:start="33:54" pos:end="33:55">pt</name></expr>]</index></name></expr>)</condition> <block pos:start="33:59" pos:end="41:13">{<block_content pos:start="35:17" pos:end="39:26">

                <expr_stmt pos:start="35:17" pos:end="35:44"><expr pos:start="35:17" pos:end="35:43"><name pos:start="35:17" pos:end="35:41"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:26">nb_null</name><index pos:start="35:27" pos:end="35:37">[<expr pos:start="35:28" pos:end="35:36"><name pos:start="35:28" pos:end="35:36">coeff_idx</name></expr>]</index><index pos:start="35:38" pos:end="35:41">[<expr pos:start="35:39" pos:end="35:40"><name pos:start="35:39" pos:end="35:40">pt</name></expr>]</index></name><operator pos:start="35:42" pos:end="35:43">--</operator></expr>;</expr_stmt>

                <if_stmt pos:start="37:17" pos:end="39:26"><if pos:start="37:17" pos:end="39:26">if <condition pos:start="37:20" pos:end="37:30">(<expr pos:start="37:21" pos:end="37:29"><name pos:start="37:21" pos:end="37:29">coeff_idx</name></expr>)</condition><block type="pseudo" pos:start="39:21" pos:end="39:26"><block_content pos:start="39:21" pos:end="39:26">

                    <break pos:start="39:21" pos:end="39:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="41:15" pos:end="99:13">else <block pos:start="41:20" pos:end="99:13">{<block_content pos:start="43:17" pos:end="97:17">

                <if_stmt pos:start="43:17" pos:end="45:27"><if pos:start="43:17" pos:end="45:27">if <condition pos:start="43:20" pos:end="43:65">(<expr pos:start="43:21" pos:end="43:64"><call pos:start="43:21" pos:end="43:42"><name pos:start="43:21" pos:end="43:34">get_bits_count</name><argument_list pos:start="43:35" pos:end="43:42">(<argument pos:start="43:36" pos:end="43:41"><expr pos:start="43:36" pos:end="43:41"><operator pos:start="43:36" pos:end="43:36">&amp;</operator><name pos:start="43:37" pos:end="43:41"><name pos:start="43:37" pos:end="43:37">s</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:41">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="43:44" pos:end="43:45">&gt;=</operator> <name pos:start="43:47" pos:end="43:64"><name pos:start="43:47" pos:end="43:47">s</name><operator pos:start="43:48" pos:end="43:49">-&gt;</operator><name pos:start="43:50" pos:end="43:51">gb</name><operator pos:start="43:52" pos:end="43:52">.</operator><name pos:start="43:53" pos:end="43:64">size_in_bits</name></name></expr>)</condition><block type="pseudo" pos:start="45:21" pos:end="45:27"><block_content pos:start="45:21" pos:end="45:27">

                    <return pos:start="45:21" pos:end="45:27">return;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:65"><expr pos:start="47:17" pos:end="47:64"><name pos:start="47:17" pos:end="47:21">coeff</name> <operator pos:start="47:23" pos:end="47:23">=</operator> <call pos:start="47:25" pos:end="47:64"><name pos:start="47:25" pos:end="47:32">get_vlc2</name><argument_list pos:start="47:33" pos:end="47:64">(<argument pos:start="47:34" pos:end="47:39"><expr pos:start="47:34" pos:end="47:39"><operator pos:start="47:34" pos:end="47:34">&amp;</operator><name pos:start="47:35" pos:end="47:39"><name pos:start="47:35" pos:end="47:35">s</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:39">gb</name></name></expr></argument>, <argument pos:start="47:42" pos:end="47:57"><expr pos:start="47:42" pos:end="47:57"><name pos:start="47:42" pos:end="47:57"><name pos:start="47:42" pos:end="47:50">vlc_coeff</name><operator pos:start="47:51" pos:end="47:52">-&gt;</operator><name pos:start="47:53" pos:end="47:57">table</name></name></expr></argument>, <argument pos:start="47:60" pos:end="47:60"><expr pos:start="47:60" pos:end="47:60"><literal type="number" pos:start="47:60" pos:end="47:60">9</literal></expr></argument>, <argument pos:start="47:63" pos:end="47:63"><expr pos:start="47:63" pos:end="47:63"><literal type="number" pos:start="47:63" pos:end="47:63">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="49:17" pos:end="97:17"><if pos:start="49:17" pos:end="67:17">if <condition pos:start="49:20" pos:end="49:31">(<expr pos:start="49:21" pos:end="49:30"><name pos:start="49:21" pos:end="49:25">coeff</name> <operator pos:start="49:27" pos:end="49:28">==</operator> <literal type="number" pos:start="49:30" pos:end="49:30">0</literal></expr>)</condition> <block pos:start="49:33" pos:end="67:17">{<block_content pos:start="51:21" pos:end="65:27">

                    <if_stmt pos:start="51:21" pos:end="63:63"><if pos:start="51:21" pos:end="61:21">if <condition pos:start="51:24" pos:end="51:34">(<expr pos:start="51:25" pos:end="51:33"><name pos:start="51:25" pos:end="51:33">coeff_idx</name></expr>)</condition> <block pos:start="51:36" pos:end="61:21">{<block_content pos:start="53:25" pos:end="59:55">

                        <decl_stmt pos:start="53:25" pos:end="53:50"><decl pos:start="53:25" pos:end="53:49"><type pos:start="53:25" pos:end="53:27"><name pos:start="53:25" pos:end="53:27">int</name></type> <name pos:start="53:29" pos:end="53:30">pt</name> <init pos:start="53:32" pos:end="53:49">= <expr pos:start="53:34" pos:end="53:49"><operator pos:start="53:34" pos:end="53:34">(</operator><name pos:start="53:35" pos:end="53:43">coeff_idx</name> <operator pos:start="53:45" pos:end="53:46">&gt;=</operator> <literal type="number" pos:start="53:48" pos:end="53:48">6</literal><operator pos:start="53:49" pos:end="53:49">)</operator></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="55:25" pos:end="55:77"><expr pos:start="55:25" pos:end="55:76"><name pos:start="55:25" pos:end="55:27">run</name> <operator pos:start="55:29" pos:end="55:30">+=</operator> <call pos:start="55:32" pos:end="55:76"><name pos:start="55:32" pos:end="55:39">get_vlc2</name><argument_list pos:start="55:40" pos:end="55:76">(<argument pos:start="55:41" pos:end="55:46"><expr pos:start="55:41" pos:end="55:46"><operator pos:start="55:41" pos:end="55:41">&amp;</operator><name pos:start="55:42" pos:end="55:46"><name pos:start="55:42" pos:end="55:42">s</name><operator pos:start="55:43" pos:end="55:44">-&gt;</operator><name pos:start="55:45" pos:end="55:46">gb</name></name></expr></argument>, <argument pos:start="55:49" pos:end="55:69"><expr pos:start="55:49" pos:end="55:69"><name pos:start="55:49" pos:end="55:63"><name pos:start="55:49" pos:end="55:49">s</name><operator pos:start="55:50" pos:end="55:51">-&gt;</operator><name pos:start="55:52" pos:end="55:59">runv_vlc</name><index pos:start="55:60" pos:end="55:63">[<expr pos:start="55:61" pos:end="55:62"><name pos:start="55:61" pos:end="55:62">pt</name></expr>]</index></name><operator pos:start="55:64" pos:end="55:64">.</operator><name pos:start="55:65" pos:end="55:69">table</name></expr></argument>, <argument pos:start="55:72" pos:end="55:72"><expr pos:start="55:72" pos:end="55:72"><literal type="number" pos:start="55:72" pos:end="55:72">9</literal></expr></argument>, <argument pos:start="55:75" pos:end="55:75"><expr pos:start="55:75" pos:end="55:75"><literal type="number" pos:start="55:75" pos:end="55:75">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="57:25" pos:end="59:55"><if pos:start="57:25" pos:end="59:55">if <condition pos:start="57:28" pos:end="57:37">(<expr pos:start="57:29" pos:end="57:36"><name pos:start="57:29" pos:end="57:31">run</name> <operator pos:start="57:33" pos:end="57:34">&gt;=</operator> <literal type="number" pos:start="57:36" pos:end="57:36">9</literal></expr>)</condition><block type="pseudo" pos:start="59:29" pos:end="59:55"><block_content pos:start="59:29" pos:end="59:55">

                            <expr_stmt pos:start="59:29" pos:end="59:55"><expr pos:start="59:29" pos:end="59:54"><name pos:start="59:29" pos:end="59:31">run</name> <operator pos:start="59:33" pos:end="59:34">+=</operator> <call pos:start="59:36" pos:end="59:54"><name pos:start="59:36" pos:end="59:43">get_bits</name><argument_list pos:start="59:44" pos:end="59:54">(<argument pos:start="59:45" pos:end="59:50"><expr pos:start="59:45" pos:end="59:50"><operator pos:start="59:45" pos:end="59:45">&amp;</operator><name pos:start="59:46" pos:end="59:50"><name pos:start="59:46" pos:end="59:46">s</name><operator pos:start="59:47" pos:end="59:48">-&gt;</operator><name pos:start="59:49" pos:end="59:50">gb</name></name></expr></argument>, <argument pos:start="59:53" pos:end="59:53"><expr pos:start="59:53" pos:end="59:53"><literal type="number" pos:start="59:53" pos:end="59:53">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if> <else pos:start="61:23" pos:end="63:63">else<block type="pseudo" pos:start="63:25" pos:end="63:63"><block_content pos:start="63:25" pos:end="63:63">

                        <expr_stmt pos:start="63:25" pos:end="63:63"><expr pos:start="63:25" pos:end="63:62"><name pos:start="63:25" pos:end="63:41"><name pos:start="63:25" pos:end="63:25">s</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:34">nb_null</name><index pos:start="63:35" pos:end="63:37">[<expr pos:start="63:36" pos:end="63:36"><literal type="number" pos:start="63:36" pos:end="63:36">0</literal></expr>]</index><index pos:start="63:38" pos:end="63:41">[<expr pos:start="63:39" pos:end="63:40"><name pos:start="63:39" pos:end="63:40">pt</name></expr>]</index></name> <operator pos:start="63:43" pos:end="63:43">=</operator> <call pos:start="63:45" pos:end="63:62"><name pos:start="63:45" pos:end="63:59">vp6_get_nb_null</name><argument_list pos:start="63:60" pos:end="63:62">(<argument pos:start="63:61" pos:end="63:61"><expr pos:start="63:61" pos:end="63:61"><name pos:start="63:61" pos:end="63:61">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="65:21" pos:end="65:27"><expr pos:start="65:21" pos:end="65:26"><name pos:start="65:21" pos:end="65:22">ct</name> <operator pos:start="65:24" pos:end="65:24">=</operator> <literal type="number" pos:start="65:26" pos:end="65:26">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="67:19" pos:end="75:17">else if <condition pos:start="67:27" pos:end="67:39">(<expr pos:start="67:28" pos:end="67:38"><name pos:start="67:28" pos:end="67:32">coeff</name> <operator pos:start="67:34" pos:end="67:35">==</operator> <literal type="number" pos:start="67:37" pos:end="67:38">11</literal></expr>)</condition> <block pos:start="67:41" pos:end="75:17">{<block_content pos:start="69:21" pos:end="73:26">  <comment type="block" pos:start="67:44" pos:end="67:61">/* end of block */</comment>

                    <if_stmt pos:start="69:21" pos:end="71:63"><if pos:start="69:21" pos:end="71:63">if <condition pos:start="69:24" pos:end="69:39">(<expr pos:start="69:25" pos:end="69:38"><name pos:start="69:25" pos:end="69:33">coeff_idx</name> <operator pos:start="69:35" pos:end="69:36">==</operator> <literal type="number" pos:start="69:38" pos:end="69:38">1</literal></expr>)</condition><block type="pseudo" pos:start="71:25" pos:end="71:63"><block_content pos:start="71:25" pos:end="71:63">    <comment type="block" pos:start="69:44" pos:end="69:65">/* first AC coeff ? */</comment>

                        <expr_stmt pos:start="71:25" pos:end="71:63"><expr pos:start="71:25" pos:end="71:62"><name pos:start="71:25" pos:end="71:41"><name pos:start="71:25" pos:end="71:25">s</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:34">nb_null</name><index pos:start="71:35" pos:end="71:37">[<expr pos:start="71:36" pos:end="71:36"><literal type="number" pos:start="71:36" pos:end="71:36">1</literal></expr>]</index><index pos:start="71:38" pos:end="71:41">[<expr pos:start="71:39" pos:end="71:40"><name pos:start="71:39" pos:end="71:40">pt</name></expr>]</index></name> <operator pos:start="71:43" pos:end="71:43">=</operator> <call pos:start="71:45" pos:end="71:62"><name pos:start="71:45" pos:end="71:59">vp6_get_nb_null</name><argument_list pos:start="71:60" pos:end="71:62">(<argument pos:start="71:61" pos:end="71:61"><expr pos:start="71:61" pos:end="71:61"><name pos:start="71:61" pos:end="71:61">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <break pos:start="73:21" pos:end="73:26">break;</break>

                </block_content>}</block></if> <else pos:start="75:19" pos:end="97:17">else <block pos:start="75:24" pos:end="97:17">{<block_content pos:start="77:21" pos:end="95:61">

                    <decl_stmt pos:start="77:21" pos:end="77:56"><decl pos:start="77:21" pos:end="77:55"><type pos:start="77:21" pos:end="77:23"><name pos:start="77:21" pos:end="77:23">int</name></type> <name pos:start="77:25" pos:end="77:30">coeff2</name> <init pos:start="77:32" pos:end="77:55">= <expr pos:start="77:34" pos:end="77:55"><name pos:start="77:34" pos:end="77:55"><name pos:start="77:34" pos:end="77:48">vp56_coeff_bias</name><index pos:start="77:49" pos:end="77:55">[<expr pos:start="77:50" pos:end="77:54"><name pos:start="77:50" pos:end="77:54">coeff</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="79:21" pos:end="81:80"><if pos:start="79:21" pos:end="81:80">if <condition pos:start="79:24" pos:end="79:34">(<expr pos:start="79:25" pos:end="79:33"><name pos:start="79:25" pos:end="79:29">coeff</name> <operator pos:start="79:31" pos:end="79:31">&gt;</operator> <literal type="number" pos:start="79:33" pos:end="79:33">4</literal></expr>)</condition><block type="pseudo" pos:start="81:25" pos:end="81:80"><block_content pos:start="81:25" pos:end="81:80">

                        <expr_stmt pos:start="81:25" pos:end="81:80"><expr pos:start="81:25" pos:end="81:79"><name pos:start="81:25" pos:end="81:30">coeff2</name> <operator pos:start="81:32" pos:end="81:33">+=</operator> <call pos:start="81:35" pos:end="81:79"><name pos:start="81:35" pos:end="81:42">get_bits</name><argument_list pos:start="81:43" pos:end="81:79">(<argument pos:start="81:44" pos:end="81:49"><expr pos:start="81:44" pos:end="81:49"><operator pos:start="81:44" pos:end="81:44">&amp;</operator><name pos:start="81:45" pos:end="81:49"><name pos:start="81:45" pos:end="81:45">s</name><operator pos:start="81:46" pos:end="81:47">-&gt;</operator><name pos:start="81:48" pos:end="81:49">gb</name></name></expr></argument>, <argument pos:start="81:52" pos:end="81:78"><expr pos:start="81:52" pos:end="81:78"><ternary pos:start="81:52" pos:end="81:78"><condition pos:start="81:52" pos:end="81:63"><expr pos:start="81:52" pos:end="81:61"><name pos:start="81:52" pos:end="81:56">coeff</name> <operator pos:start="81:58" pos:end="81:59">&lt;=</operator> <literal type="number" pos:start="81:61" pos:end="81:61">9</literal></expr> ?</condition><then pos:start="81:65" pos:end="81:73"> <expr pos:start="81:65" pos:end="81:73"><name pos:start="81:65" pos:end="81:69">coeff</name> <operator pos:start="81:71" pos:end="81:71">-</operator> <literal type="number" pos:start="81:73" pos:end="81:73">4</literal></expr> </then><else pos:start="81:75" pos:end="81:78">: <expr pos:start="81:77" pos:end="81:78"><literal type="number" pos:start="81:77" pos:end="81:78">11</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:42"><expr pos:start="83:21" pos:end="83:41"><name pos:start="83:21" pos:end="83:22">ct</name> <operator pos:start="83:24" pos:end="83:24">=</operator> <literal type="number" pos:start="83:26" pos:end="83:28">1</literal> <operator pos:start="83:28" pos:end="83:28">+</operator> <operator pos:start="83:30" pos:end="83:30">(</operator><name pos:start="83:31" pos:end="83:36">coeff2</name> <operator pos:start="83:38" pos:end="83:38">&gt;</operator> <literal type="number" pos:start="83:40" pos:end="83:40">1</literal><operator pos:start="83:41" pos:end="83:41">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:45"><expr pos:start="85:21" pos:end="85:44"><name pos:start="85:21" pos:end="85:24">sign</name> <operator pos:start="85:26" pos:end="85:26">=</operator> <call pos:start="85:28" pos:end="85:44"><name pos:start="85:28" pos:end="85:36">get_bits1</name><argument_list pos:start="85:37" pos:end="85:44">(<argument pos:start="85:38" pos:end="85:43"><expr pos:start="85:38" pos:end="85:43"><operator pos:start="85:38" pos:end="85:38">&amp;</operator><name pos:start="85:39" pos:end="85:43"><name pos:start="85:39" pos:end="85:39">s</name><operator pos:start="85:40" pos:end="85:41">-&gt;</operator><name pos:start="85:42" pos:end="85:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="87:21" pos:end="87:53"><expr pos:start="87:21" pos:end="87:52"><name pos:start="87:21" pos:end="87:26">coeff2</name> <operator pos:start="87:28" pos:end="87:28">=</operator> <operator pos:start="87:30" pos:end="87:30">(</operator><name pos:start="87:31" pos:end="87:36">coeff2</name> <operator pos:start="87:38" pos:end="87:38">^</operator> <operator pos:start="87:40" pos:end="87:40">-</operator><name pos:start="87:41" pos:end="87:44">sign</name><operator pos:start="87:45" pos:end="87:45">)</operator> <operator pos:start="87:47" pos:end="87:47">+</operator> <name pos:start="87:49" pos:end="87:52">sign</name></expr>;</expr_stmt>

                    <if_stmt pos:start="89:21" pos:end="91:48"><if pos:start="89:21" pos:end="91:48">if <condition pos:start="89:24" pos:end="89:34">(<expr pos:start="89:25" pos:end="89:33"><name pos:start="89:25" pos:end="89:33">coeff_idx</name></expr>)</condition><block type="pseudo" pos:start="91:25" pos:end="91:48"><block_content pos:start="91:25" pos:end="91:48">

                        <expr_stmt pos:start="91:25" pos:end="91:48"><expr pos:start="91:25" pos:end="91:47"><name pos:start="91:25" pos:end="91:30">coeff2</name> <operator pos:start="91:32" pos:end="91:33">*=</operator> <name pos:start="91:35" pos:end="91:47"><name pos:start="91:35" pos:end="91:35">s</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:47">dequant_ac</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:63"><expr pos:start="93:21" pos:end="93:62"><name pos:start="93:21" pos:end="93:23">idx</name> <operator pos:start="93:25" pos:end="93:25">=</operator> <name pos:start="93:27" pos:end="93:62"><name pos:start="93:27" pos:end="93:31">model</name><operator pos:start="93:32" pos:end="93:33">-&gt;</operator><name pos:start="93:34" pos:end="93:51">coeff_index_to_pos</name><index pos:start="93:52" pos:end="93:62">[<expr pos:start="93:53" pos:end="93:61"><name pos:start="93:53" pos:end="93:61">coeff_idx</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:61"><expr pos:start="95:21" pos:end="95:60"><name pos:start="95:21" pos:end="95:51"><name pos:start="95:21" pos:end="95:21">s</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:34">block_coeff</name><index pos:start="95:35" pos:end="95:37">[<expr pos:start="95:36" pos:end="95:36"><name pos:start="95:36" pos:end="95:36">b</name></expr>]</index><index pos:start="95:38" pos:end="95:51">[<expr pos:start="95:39" pos:end="95:50"><name pos:start="95:39" pos:end="95:50"><name pos:start="95:39" pos:end="95:45">permute</name><index pos:start="95:46" pos:end="95:50">[<expr pos:start="95:47" pos:end="95:49"><name pos:start="95:47" pos:end="95:49">idx</name></expr>]</index></name></expr>]</index></name> <operator pos:start="95:53" pos:end="95:53">=</operator> <name pos:start="95:55" pos:end="95:60">coeff2</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:27"><expr pos:start="101:13" pos:end="101:26"><name pos:start="101:13" pos:end="101:21">coeff_idx</name><operator pos:start="101:22" pos:end="101:23">+=</operator><name pos:start="101:24" pos:end="101:26">run</name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:55"><expr pos:start="103:13" pos:end="103:54"><name pos:start="103:13" pos:end="103:14">cg</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <call pos:start="103:18" pos:end="103:54"><name pos:start="103:18" pos:end="103:22">FFMIN</name><argument_list pos:start="103:23" pos:end="103:54">(<argument pos:start="103:24" pos:end="103:50"><expr pos:start="103:24" pos:end="103:50"><name pos:start="103:24" pos:end="103:50"><name pos:start="103:24" pos:end="103:39">vp6_coeff_groups</name><index pos:start="103:40" pos:end="103:50">[<expr pos:start="103:41" pos:end="103:49"><name pos:start="103:41" pos:end="103:49">coeff_idx</name></expr>]</index></name></expr></argument>, <argument pos:start="103:53" pos:end="103:53"><expr pos:start="103:53" pos:end="103:53"><literal type="number" pos:start="103:53" pos:end="103:53">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:49"><expr pos:start="105:13" pos:end="105:48"><name pos:start="105:13" pos:end="105:21">vlc_coeff</name> <operator pos:start="105:23" pos:end="105:23">=</operator> <operator pos:start="105:25" pos:end="105:25">&amp;</operator><name pos:start="105:26" pos:end="105:48"><name pos:start="105:26" pos:end="105:26">s</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:36">ract_vlc</name><index pos:start="105:37" pos:end="105:40">[<expr pos:start="105:38" pos:end="105:39"><name pos:start="105:38" pos:end="105:39">pt</name></expr>]</index><index pos:start="105:41" pos:end="105:44">[<expr pos:start="105:42" pos:end="105:43"><name pos:start="105:42" pos:end="105:43">ct</name></expr>]</index><index pos:start="105:45" pos:end="105:48">[<expr pos:start="105:46" pos:end="105:47"><name pos:start="105:46" pos:end="105:47">cg</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
