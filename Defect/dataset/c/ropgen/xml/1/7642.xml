<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7642.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">char</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:28">read_splashfile</name><parameter_list pos:start="1:29" pos:end="1:78">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:33">char</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:43">filename</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:60"><decl pos:start="1:46" pos:end="1:60"><type pos:start="1:46" pos:end="1:60"><name pos:start="1:46" pos:end="1:48">int</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:60">file_sizep</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:77"><decl pos:start="1:63" pos:end="1:77"><type pos:start="1:63" pos:end="1:77"><name pos:start="1:63" pos:end="1:65">int</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:77">file_typep</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:16">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">GError</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">err</name> <init pos:start="5:17" pos:end="5:22">= <expr pos:start="5:19" pos:end="5:22"><name pos:start="5:19" pos:end="5:22">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">gboolean</name></type> <name pos:start="7:14" pos:end="7:16">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">gchar</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:18">content</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">file_type</name> <init pos:start="11:19" pos:end="11:22">= <expr pos:start="11:21" pos:end="11:22"><operator pos:start="11:21" pos:end="11:21">-</operator><literal type="number" pos:start="11:22" pos:end="11:22">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:25">filehead</name> <init pos:start="13:27" pos:end="13:29">= <expr pos:start="13:29" pos:end="13:29"><literal type="number" pos:start="13:29" pos:end="13:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">bmp_bpp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:77"><expr pos:start="19:5" pos:end="19:76"><name pos:start="19:5" pos:end="19:7">res</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:76"><name pos:start="19:11" pos:end="19:29">g_file_get_contents</name><argument_list pos:start="19:30" pos:end="19:76">(<argument pos:start="19:31" pos:end="19:38"><expr pos:start="19:31" pos:end="19:38"><name pos:start="19:31" pos:end="19:38">filename</name></expr></argument>, <argument pos:start="19:41" pos:end="19:48"><expr pos:start="19:41" pos:end="19:48"><operator pos:start="19:41" pos:end="19:41">&amp;</operator><name pos:start="19:42" pos:end="19:48">content</name></expr></argument>, <argument pos:start="19:51" pos:end="19:69"><expr pos:start="19:51" pos:end="19:69"><operator pos:start="19:51" pos:end="19:51">(</operator><name pos:start="19:52" pos:end="19:56">gsize</name> <operator pos:start="19:58" pos:end="19:58">*</operator><operator pos:start="19:59" pos:end="19:59">)</operator><name pos:start="19:60" pos:end="19:69">file_sizep</name></expr></argument>, <argument pos:start="19:72" pos:end="19:75"><expr pos:start="19:72" pos:end="19:75"><operator pos:start="19:72" pos:end="19:72">&amp;</operator><name pos:start="19:73" pos:end="19:75">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:21">(<expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:11">res</name> <operator pos:start="21:13" pos:end="21:14">==</operator> <name pos:start="21:16" pos:end="21:20">FALSE</name></expr>)</condition> <block pos:start="21:23" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:20">

        <expr_stmt pos:start="23:9" pos:end="23:66"><expr pos:start="23:9" pos:end="23:65"><call pos:start="23:9" pos:end="23:65"><name pos:start="23:9" pos:end="23:20">error_report</name><argument_list pos:start="23:21" pos:end="23:65">(<argument pos:start="23:22" pos:end="23:54"><expr pos:start="23:22" pos:end="23:54"><literal type="string" pos:start="23:22" pos:end="23:54">"failed to read splash file '%s'"</literal></expr></argument>, <argument pos:start="23:57" pos:end="23:64"><expr pos:start="23:57" pos:end="23:64"><name pos:start="23:57" pos:end="23:64">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><call pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:20">g_error_free</name><argument_list pos:start="25:21" pos:end="25:25">(<argument pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:24">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:20">return <expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:25">/* check file size */</comment>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:25">(<expr pos:start="35:9" pos:end="35:24"><operator pos:start="35:9" pos:end="35:9">*</operator><name pos:start="35:10" pos:end="35:19">file_sizep</name> <operator pos:start="35:21" pos:end="35:21">&lt;</operator> <literal type="number" pos:start="35:23" pos:end="35:24">30</literal></expr>)</condition> <block pos:start="35:27" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:19">

        <goto pos:start="37:9" pos:end="37:19">goto <name pos:start="37:14" pos:end="37:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:24">/* check magic ID */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:66"><expr pos:start="45:5" pos:end="45:65"><name pos:start="45:5" pos:end="45:12">filehead</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <operator pos:start="45:16" pos:end="45:16">(</operator><operator pos:start="45:17" pos:end="45:17">(</operator><name pos:start="45:18" pos:end="45:27"><name pos:start="45:18" pos:end="45:24">content</name><index pos:start="45:25" pos:end="45:27">[<expr pos:start="45:26" pos:end="45:26"><literal type="number" pos:start="45:26" pos:end="45:26">0</literal></expr>]</index></name> <operator pos:start="45:29" pos:end="45:29">&amp;</operator> <literal type="number" pos:start="45:31" pos:end="45:34">0xff</literal><operator pos:start="45:35" pos:end="45:35">)</operator> <operator pos:start="45:37" pos:end="45:37">+</operator> <operator pos:start="45:39" pos:end="45:39">(</operator><name pos:start="45:40" pos:end="45:49"><name pos:start="45:40" pos:end="45:46">content</name><index pos:start="45:47" pos:end="45:49">[<expr pos:start="45:48" pos:end="45:48"><literal type="number" pos:start="45:48" pos:end="45:48">1</literal></expr>]</index></name> <operator pos:start="45:51" pos:end="45:52">&lt;&lt;</operator> <literal type="number" pos:start="45:54" pos:end="45:54">8</literal><operator pos:start="45:55" pos:end="45:55">)</operator><operator pos:start="45:56" pos:end="45:56">)</operator> <operator pos:start="45:58" pos:end="45:58">&amp;</operator> <literal type="number" pos:start="45:60" pos:end="45:65">0xffff</literal></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="59:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:27">(<expr pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:16">filehead</name> <operator pos:start="47:18" pos:end="47:19">==</operator> <literal type="number" pos:start="47:21" pos:end="47:26">0xd8ff</literal></expr>)</condition> <block pos:start="47:29" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:29">

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:17">file_type</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:28">JPG_FILE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="55:5">else if <condition pos:start="51:15" pos:end="51:34">(<expr pos:start="51:16" pos:end="51:33"><name pos:start="51:16" pos:end="51:23">filehead</name> <operator pos:start="51:25" pos:end="51:26">==</operator> <literal type="number" pos:start="51:28" pos:end="51:33">0x4d42</literal></expr>)</condition> <block pos:start="51:36" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:29">

        <expr_stmt pos:start="53:9" pos:end="53:29"><expr pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:17">file_type</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:28">BMP_FILE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="59:5">else <block pos:start="55:12" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:19">

        <goto pos:start="57:9" pos:end="57:19">goto <name pos:start="57:14" pos:end="57:18">error</name>;</goto>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:23">/* check BMP bpp */</comment>

    <if_stmt pos:start="65:5" pos:end="75:5"><if pos:start="65:5" pos:end="75:5">if <condition pos:start="65:8" pos:end="65:30">(<expr pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:17">file_type</name> <operator pos:start="65:19" pos:end="65:20">==</operator> <name pos:start="65:22" pos:end="65:29">BMP_FILE</name></expr>)</condition> <block pos:start="65:32" pos:end="75:5">{<block_content pos:start="67:9" pos:end="73:9">

        <expr_stmt pos:start="67:9" pos:end="67:62"><expr pos:start="67:9" pos:end="67:61"><name pos:start="67:9" pos:end="67:15">bmp_bpp</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <operator pos:start="67:19" pos:end="67:19">(</operator><name pos:start="67:20" pos:end="67:30"><name pos:start="67:20" pos:end="67:26">content</name><index pos:start="67:27" pos:end="67:30">[<expr pos:start="67:28" pos:end="67:29"><literal type="number" pos:start="67:28" pos:end="67:29">28</literal></expr>]</index></name> <operator pos:start="67:32" pos:end="67:32">+</operator> <operator pos:start="67:34" pos:end="67:34">(</operator><name pos:start="67:35" pos:end="67:45"><name pos:start="67:35" pos:end="67:41">content</name><index pos:start="67:42" pos:end="67:45">[<expr pos:start="67:43" pos:end="67:44"><literal type="number" pos:start="67:43" pos:end="67:44">29</literal></expr>]</index></name> <operator pos:start="67:47" pos:end="67:48">&lt;&lt;</operator> <literal type="number" pos:start="67:50" pos:end="67:50">8</literal><operator pos:start="67:51" pos:end="67:51">)</operator><operator pos:start="67:52" pos:end="67:52">)</operator> <operator pos:start="67:54" pos:end="67:54">&amp;</operator> <literal type="number" pos:start="67:56" pos:end="67:61">0xffff</literal></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:26">(<expr pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:19">bmp_bpp</name> <operator pos:start="69:21" pos:end="69:22">!=</operator> <literal type="number" pos:start="69:24" pos:end="69:25">24</literal></expr>)</condition> <block pos:start="69:28" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:23">

            <goto pos:start="71:13" pos:end="71:23">goto <name pos:start="71:18" pos:end="71:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="79:5" pos:end="79:23">/* return values */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:28"><expr pos:start="81:5" pos:end="81:27"><operator pos:start="81:5" pos:end="81:5">*</operator><name pos:start="81:6" pos:end="81:15">file_typep</name> <operator pos:start="81:17" pos:end="81:17">=</operator> <name pos:start="81:19" pos:end="81:27">file_type</name></expr>;</expr_stmt>



    <return pos:start="85:5" pos:end="85:19">return <expr pos:start="85:12" pos:end="85:18"><name pos:start="85:12" pos:end="85:18">content</name></expr>;</return>



<label pos:start="89:1" pos:end="89:6"><name pos:start="89:1" pos:end="89:5">error</name>:</label>

    <expr_stmt pos:start="91:5" pos:end="93:44"><expr pos:start="91:5" pos:end="93:43"><call pos:start="91:5" pos:end="93:43"><name pos:start="91:5" pos:end="91:16">error_report</name><argument_list pos:start="91:17" pos:end="93:43">(<argument pos:start="91:18" pos:end="93:32"><expr pos:start="91:18" pos:end="93:32"><literal type="string" pos:start="91:18" pos:end="91:72">"splash file '%s' format not recognized; must be JPEG "</literal>

                 <literal type="string" pos:start="93:18" pos:end="93:32">"or 24 bit BMP"</literal></expr></argument>, <argument pos:start="93:35" pos:end="93:42"><expr pos:start="93:35" pos:end="93:42"><name pos:start="93:35" pos:end="93:42">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:20"><expr pos:start="95:5" pos:end="95:19"><call pos:start="95:5" pos:end="95:19"><name pos:start="95:5" pos:end="95:10">g_free</name><argument_list pos:start="95:11" pos:end="95:19">(<argument pos:start="95:12" pos:end="95:18"><expr pos:start="95:12" pos:end="95:18"><name pos:start="95:12" pos:end="95:18">content</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="97:5" pos:end="97:16">return <expr pos:start="97:12" pos:end="97:15"><name pos:start="97:12" pos:end="97:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
