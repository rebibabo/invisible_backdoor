<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25880.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:22"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:21">DisplaySurface</name><modifier pos:start="1:22" pos:end="1:22">*</modifier></type> <name pos:start="1:24" pos:end="1:48">sdl_create_displaysurface</name><parameter_list pos:start="1:49" pos:end="1:71">(<parameter pos:start="1:50" pos:end="1:58"><decl pos:start="1:50" pos:end="1:58"><type pos:start="1:50" pos:end="1:58"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:58">width</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:70"><decl pos:start="1:61" pos:end="1:70"><type pos:start="1:61" pos:end="1:70"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:70">height</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:19">

    <decl_stmt pos:start="5:5" pos:end="5:82"><decl pos:start="5:5" pos:end="5:81"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">DisplaySurface</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:27">surface</name> <init pos:start="5:29" pos:end="5:81">= <expr pos:start="5:31" pos:end="5:81"><operator pos:start="5:31" pos:end="5:31">(</operator><name pos:start="5:32" pos:end="5:45">DisplaySurface</name><operator pos:start="5:46" pos:end="5:46">*</operator><operator pos:start="5:47" pos:end="5:47">)</operator> <call pos:start="5:49" pos:end="5:81"><name pos:start="5:49" pos:end="5:57">g_malloc0</name><argument_list pos:start="5:58" pos:end="5:81">(<argument pos:start="5:59" pos:end="5:80"><expr pos:start="5:59" pos:end="5:80"><sizeof pos:start="5:59" pos:end="5:80">sizeof<argument_list pos:start="5:65" pos:end="5:80">(<argument pos:start="5:66" pos:end="5:79"><expr pos:start="5:66" pos:end="5:79"><name pos:start="5:66" pos:end="5:79">DisplaySurface</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="13:5"><if pos:start="7:5" pos:end="13:5">if <condition pos:start="7:8" pos:end="7:24">(<expr pos:start="7:9" pos:end="7:23"><name pos:start="7:9" pos:end="7:15">surface</name> <operator pos:start="7:17" pos:end="7:18">==</operator> <name pos:start="7:20" pos:end="7:23">NULL</name></expr>)</condition> <block pos:start="7:26" pos:end="13:5">{<block_content pos:start="9:9" pos:end="11:16">

        <expr_stmt pos:start="9:9" pos:end="9:70"><expr pos:start="9:9" pos:end="9:69"><call pos:start="9:9" pos:end="9:69"><name pos:start="9:9" pos:end="9:15">fprintf</name><argument_list pos:start="9:16" pos:end="9:69">(<argument pos:start="9:17" pos:end="9:22"><expr pos:start="9:17" pos:end="9:22"><name pos:start="9:17" pos:end="9:22">stderr</name></expr></argument>, <argument pos:start="9:25" pos:end="9:68"><expr pos:start="9:25" pos:end="9:68"><literal type="string" pos:start="9:25" pos:end="9:68">"sdl_create_displaysurface: malloc failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:16"><expr pos:start="11:9" pos:end="11:15"><call pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:12">exit</name><argument_list pos:start="11:13" pos:end="11:15">(<argument pos:start="11:14" pos:end="11:14"><expr pos:start="11:14" pos:end="11:14"><literal type="number" pos:start="11:14" pos:end="11:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:11">surface</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:18">width</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:26">width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:11">surface</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:19">height</name></name> <operator pos:start="19:21" pos:end="19:21">=</operator> <name pos:start="19:23" pos:end="19:28">height</name></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="47:5"><if pos:start="23:5" pos:end="47:5">if <condition pos:start="23:8" pos:end="23:23">(<expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:22">scaling_active</name></expr>)</condition> <block pos:start="23:25" pos:end="47:5">{<block_content pos:start="25:9" pos:end="45:23">

        <decl_stmt pos:start="25:9" pos:end="25:21"><decl pos:start="25:9" pos:end="25:20"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:20">linesize</name></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:23"><decl pos:start="27:9" pos:end="27:22"><type pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:19">PixelFormat</name></type> <name pos:start="27:21" pos:end="27:22">pf</name></decl>;</decl_stmt>

        <if_stmt pos:start="29:9" pos:end="41:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:77">(<expr pos:start="29:13" pos:end="29:76"><name pos:start="29:13" pos:end="29:37"><name pos:start="29:13" pos:end="29:23">host_format</name><operator pos:start="29:24" pos:end="29:24">.</operator><name pos:start="29:25" pos:end="29:37">BytesPerPixel</name></name> <operator pos:start="29:39" pos:end="29:40">!=</operator> <literal type="number" pos:start="29:42" pos:end="29:42">2</literal> <operator pos:start="29:44" pos:end="29:45">&amp;&amp;</operator> <name pos:start="29:47" pos:end="29:71"><name pos:start="29:47" pos:end="29:57">host_format</name><operator pos:start="29:58" pos:end="29:58">.</operator><name pos:start="29:59" pos:end="29:71">BytesPerPixel</name></name> <operator pos:start="29:73" pos:end="29:74">!=</operator> <literal type="number" pos:start="29:76" pos:end="29:76">4</literal></expr>)</condition> <block pos:start="29:79" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:46">

            <expr_stmt pos:start="31:13" pos:end="31:33"><expr pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:20">linesize</name> <operator pos:start="31:22" pos:end="31:22">=</operator> <name pos:start="31:24" pos:end="31:28">width</name> <operator pos:start="31:30" pos:end="31:30">*</operator> <literal type="number" pos:start="31:32" pos:end="31:32">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:46"><expr pos:start="33:13" pos:end="33:45"><name pos:start="33:13" pos:end="33:14">pf</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <call pos:start="33:18" pos:end="33:45"><name pos:start="33:18" pos:end="33:41">qemu_default_pixelformat</name><argument_list pos:start="33:42" pos:end="33:45">(<argument pos:start="33:43" pos:end="33:44"><expr pos:start="33:43" pos:end="33:44"><literal type="number" pos:start="33:43" pos:end="33:44">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="35:11" pos:end="41:9">else <block pos:start="35:16" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:55">

            <expr_stmt pos:start="37:13" pos:end="37:57"><expr pos:start="37:13" pos:end="37:56"><name pos:start="37:13" pos:end="37:20">linesize</name> <operator pos:start="37:22" pos:end="37:22">=</operator> <name pos:start="37:24" pos:end="37:28">width</name> <operator pos:start="37:30" pos:end="37:30">*</operator> <name pos:start="37:32" pos:end="37:56"><name pos:start="37:32" pos:end="37:42">host_format</name><operator pos:start="37:43" pos:end="37:43">.</operator><name pos:start="37:44" pos:end="37:56">BytesPerPixel</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:55"><expr pos:start="39:13" pos:end="39:54"><name pos:start="39:13" pos:end="39:14">pf</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <call pos:start="39:18" pos:end="39:54"><name pos:start="39:18" pos:end="39:40">sdl_to_qemu_pixelformat</name><argument_list pos:start="39:41" pos:end="39:54">(<argument pos:start="39:42" pos:end="39:53"><expr pos:start="39:42" pos:end="39:53"><operator pos:start="39:42" pos:end="39:42">&amp;</operator><name pos:start="39:43" pos:end="39:53">host_format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:68"><expr pos:start="43:9" pos:end="43:67"><call pos:start="43:9" pos:end="43:67"><name pos:start="43:9" pos:end="43:26">qemu_alloc_display</name><argument_list pos:start="43:27" pos:end="43:67">(<argument pos:start="43:28" pos:end="43:34"><expr pos:start="43:28" pos:end="43:34"><name pos:start="43:28" pos:end="43:34">surface</name></expr></argument>, <argument pos:start="43:37" pos:end="43:41"><expr pos:start="43:37" pos:end="43:41"><name pos:start="43:37" pos:end="43:41">width</name></expr></argument>, <argument pos:start="43:44" pos:end="43:49"><expr pos:start="43:44" pos:end="43:49"><name pos:start="43:44" pos:end="43:49">height</name></expr></argument>, <argument pos:start="43:52" pos:end="43:59"><expr pos:start="43:52" pos:end="43:59"><name pos:start="43:52" pos:end="43:59">linesize</name></expr></argument>, <argument pos:start="43:62" pos:end="43:63"><expr pos:start="43:62" pos:end="43:63"><name pos:start="43:62" pos:end="43:63">pf</name></expr></argument>, <argument pos:start="43:66" pos:end="43:66"><expr pos:start="43:66" pos:end="43:66"><literal type="number" pos:start="43:66" pos:end="43:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:23">return <expr pos:start="45:16" pos:end="45:22"><name pos:start="45:16" pos:end="45:22">surface</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="57:41"><if pos:start="51:5" pos:end="53:41">if <condition pos:start="51:8" pos:end="51:39">(<expr pos:start="51:9" pos:end="51:38"><name pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:19">host_format</name><operator pos:start="51:20" pos:end="51:20">.</operator><name pos:start="51:21" pos:end="51:32">BitsPerPixel</name></name> <operator pos:start="51:34" pos:end="51:35">==</operator> <literal type="number" pos:start="51:37" pos:end="51:38">16</literal></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:41"><block_content pos:start="53:9" pos:end="53:41">

        <expr_stmt pos:start="53:9" pos:end="53:41"><expr pos:start="53:9" pos:end="53:40"><call pos:start="53:9" pos:end="53:40"><name pos:start="53:9" pos:end="53:21">do_sdl_resize</name><argument_list pos:start="53:22" pos:end="53:40">(<argument pos:start="53:23" pos:end="53:27"><expr pos:start="53:23" pos:end="53:27"><name pos:start="53:23" pos:end="53:27">width</name></expr></argument>, <argument pos:start="53:30" pos:end="53:35"><expr pos:start="53:30" pos:end="53:35"><name pos:start="53:30" pos:end="53:35">height</name></expr></argument>, <argument pos:start="53:38" pos:end="53:39"><expr pos:start="53:38" pos:end="53:39"><literal type="number" pos:start="53:38" pos:end="53:39">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="55:5" pos:end="57:41">else<block type="pseudo" pos:start="57:9" pos:end="57:41"><block_content pos:start="57:9" pos:end="57:41">

        <expr_stmt pos:start="57:9" pos:end="57:41"><expr pos:start="57:9" pos:end="57:40"><call pos:start="57:9" pos:end="57:40"><name pos:start="57:9" pos:end="57:21">do_sdl_resize</name><argument_list pos:start="57:22" pos:end="57:40">(<argument pos:start="57:23" pos:end="57:27"><expr pos:start="57:23" pos:end="57:27"><name pos:start="57:23" pos:end="57:27">width</name></expr></argument>, <argument pos:start="57:30" pos:end="57:35"><expr pos:start="57:30" pos:end="57:35"><name pos:start="57:30" pos:end="57:35">height</name></expr></argument>, <argument pos:start="57:38" pos:end="57:39"><expr pos:start="57:38" pos:end="57:39"><literal type="number" pos:start="57:38" pos:end="57:39">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:63"><expr pos:start="61:5" pos:end="61:62"><name pos:start="61:5" pos:end="61:15"><name pos:start="61:5" pos:end="61:11">surface</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:15">pf</name></name> <operator pos:start="61:17" pos:end="61:17">=</operator> <call pos:start="61:19" pos:end="61:62"><name pos:start="61:19" pos:end="61:41">sdl_to_qemu_pixelformat</name><argument_list pos:start="61:42" pos:end="61:62">(<argument pos:start="61:43" pos:end="61:61"><expr pos:start="61:43" pos:end="61:61"><name pos:start="61:43" pos:end="61:61"><name pos:start="61:43" pos:end="61:53">real_screen</name><operator pos:start="61:54" pos:end="61:55">-&gt;</operator><name pos:start="61:56" pos:end="61:61">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:43"><expr pos:start="63:5" pos:end="63:42"><name pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:11">surface</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:21">linesize</name></name> <operator pos:start="63:23" pos:end="63:23">=</operator> <name pos:start="63:25" pos:end="63:42"><name pos:start="63:25" pos:end="63:35">real_screen</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:42">pitch</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="70:0"><expr pos:start="65:5" pos:end="65:39"><name pos:start="65:5" pos:end="65:17"><name pos:start="65:5" pos:end="65:11">surface</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:17">data</name></name> <operator pos:start="65:19" pos:end="65:19">=</operator> <name pos:start="65:21" pos:end="65:39"><name pos:start="65:21" pos:end="65:31">real_screen</name><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:39">pixels</name></name></expr>;</expr_stmt>



<cpp:ifdef pos:start="69:1" pos:end="69:27">#<cpp:directive pos:start="69:2" pos:end="69:6">ifdef</cpp:directive> <name pos:start="69:8" pos:end="69:27">HOST_WORDS_BIGENDIAN</name></cpp:ifdef>

    <expr_stmt pos:start="71:5" pos:end="74:0"><expr pos:start="71:5" pos:end="71:64"><name pos:start="71:5" pos:end="71:18"><name pos:start="71:5" pos:end="71:11">surface</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:18">flags</name></name> <operator pos:start="71:20" pos:end="71:20">=</operator> <name pos:start="71:22" pos:end="71:41">QEMU_REALPIXELS_FLAG</name> <operator pos:start="71:43" pos:end="71:43">|</operator> <name pos:start="71:45" pos:end="71:64">QEMU_BIG_ENDIAN_FLAG</name></expr>;</expr_stmt>

<cpp:else pos:start="73:1" pos:end="73:5">#<cpp:directive pos:start="73:2" pos:end="73:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="75:5" pos:end="78:0"><expr pos:start="75:5" pos:end="75:41"><name pos:start="75:5" pos:end="75:18"><name pos:start="75:5" pos:end="75:11">surface</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:18">flags</name></name> <operator pos:start="75:20" pos:end="75:20">=</operator> <name pos:start="75:22" pos:end="75:41">QEMU_REALPIXELS_FLAG</name></expr>;</expr_stmt>

<cpp:endif pos:start="77:1" pos:end="77:6">#<cpp:directive pos:start="77:2" pos:end="77:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="79:5" pos:end="79:18"><expr pos:start="79:5" pos:end="79:17"><name pos:start="79:5" pos:end="79:13">allocator</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <literal type="number" pos:start="79:17" pos:end="79:17">1</literal></expr>;</expr_stmt>



    <return pos:start="83:5" pos:end="83:19">return <expr pos:start="83:12" pos:end="83:18"><name pos:start="83:12" pos:end="83:18">surface</name></expr>;</return>

</block_content>}</block></function>
</unit>
