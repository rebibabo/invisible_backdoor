<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3536.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:25"><name pos:start="1:1" pos:end="1:10">start_xmit</name><argument_list pos:start="1:11" pos:end="1:25">(<argument pos:start="1:12" pos:end="1:24">E1000State *s</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:25">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">d</name> <init pos:start="5:18" pos:end="5:32">= <expr pos:start="5:20" pos:end="5:32"><call pos:start="5:20" pos:end="5:32"><name pos:start="5:20" pos:end="5:29">PCI_DEVICE</name><argument_list pos:start="5:30" pos:end="5:32">(<argument pos:start="5:31" pos:end="5:31"><expr pos:start="5:31" pos:end="5:31"><name pos:start="5:31" pos:end="5:31">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">dma_addr_t</name></type> <name pos:start="7:16" pos:end="7:19">base</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:24">e1000_tx_desc</name></name></type> <name pos:start="9:26" pos:end="9:29">desc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:65"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:22">tdh_start</name> <init pos:start="11:24" pos:end="11:40">= <expr pos:start="11:26" pos:end="11:40"><name pos:start="11:26" pos:end="11:40"><name pos:start="11:26" pos:end="11:26">s</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:35">mac_reg</name><index pos:start="11:36" pos:end="11:40">[<expr pos:start="11:37" pos:end="11:39"><name pos:start="11:37" pos:end="11:39">TDH</name></expr>]</index></name></expr></init></decl>, <decl pos:start="11:43" pos:end="11:64"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:43" pos:end="11:47">cause</name> <init pos:start="11:49" pos:end="11:64">= <expr pos:start="11:51" pos:end="11:64"><name pos:start="11:51" pos:end="11:64">E1000_ICS_TXQE</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:44">(<expr pos:start="15:9" pos:end="15:43"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:26"><name pos:start="15:11" pos:end="15:11">s</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:20">mac_reg</name><index pos:start="15:21" pos:end="15:26">[<expr pos:start="15:22" pos:end="15:25"><name pos:start="15:22" pos:end="15:25">TCTL</name></expr>]</index></name> <operator pos:start="15:28" pos:end="15:28">&amp;</operator> <name pos:start="15:30" pos:end="15:42">E1000_TCTL_EN</name><operator pos:start="15:43" pos:end="15:43">)</operator></expr>)</condition> <block pos:start="15:46" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:15">

        <expr_stmt pos:start="17:9" pos:end="17:36"><expr pos:start="17:9" pos:end="17:35"><call pos:start="17:9" pos:end="17:35"><name pos:start="17:9" pos:end="17:14">DBGOUT</name><argument_list pos:start="17:15" pos:end="17:35">(<argument pos:start="17:16" pos:end="17:17"><expr pos:start="17:16" pos:end="17:17"><name pos:start="17:16" pos:end="17:17">TX</name></expr></argument>, <argument pos:start="17:20" pos:end="17:34"><expr pos:start="17:20" pos:end="17:34"><literal type="string" pos:start="17:20" pos:end="17:34">"tx disabled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="25:5" pos:end="73:5">while <condition pos:start="25:11" pos:end="25:46">(<expr pos:start="25:12" pos:end="25:45"><name pos:start="25:12" pos:end="25:26"><name pos:start="25:12" pos:end="25:12">s</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:21">mac_reg</name><index pos:start="25:22" pos:end="25:26">[<expr pos:start="25:23" pos:end="25:25"><name pos:start="25:23" pos:end="25:25">TDH</name></expr>]</index></name> <operator pos:start="25:28" pos:end="25:29">!=</operator> <name pos:start="25:31" pos:end="25:45"><name pos:start="25:31" pos:end="25:31">s</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:40">mac_reg</name><index pos:start="25:41" pos:end="25:45">[<expr pos:start="25:42" pos:end="25:44"><name pos:start="25:42" pos:end="25:44">TDT</name></expr>]</index></name></expr>)</condition> <block pos:start="25:48" pos:end="73:5">{<block_content pos:start="27:9" pos:end="71:9">

        <expr_stmt pos:start="27:9" pos:end="29:62"><expr pos:start="27:9" pos:end="29:61"><name pos:start="27:9" pos:end="27:12">base</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:27">tx_desc_base</name><argument_list pos:start="27:28" pos:end="27:30">(<argument pos:start="27:29" pos:end="27:29"><expr pos:start="27:29" pos:end="27:29"><name pos:start="27:29" pos:end="27:29">s</name></expr></argument>)</argument_list></call> <operator pos:start="27:32" pos:end="27:32">+</operator>

               <sizeof pos:start="29:16" pos:end="29:43">sizeof<argument_list pos:start="29:22" pos:end="29:43">(<argument pos:start="29:23" pos:end="29:42"><expr pos:start="29:23" pos:end="29:42">struct <name pos:start="29:30" pos:end="29:42">e1000_tx_desc</name></expr></argument>)</argument_list></sizeof> <operator pos:start="29:45" pos:end="29:45">*</operator> <name pos:start="29:47" pos:end="29:61"><name pos:start="29:47" pos:end="29:47">s</name><operator pos:start="29:48" pos:end="29:49">-&gt;</operator><name pos:start="29:50" pos:end="29:56">mac_reg</name><index pos:start="29:57" pos:end="29:61">[<expr pos:start="29:58" pos:end="29:60"><name pos:start="29:58" pos:end="29:60">TDH</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:51"><expr pos:start="31:9" pos:end="31:50"><call pos:start="31:9" pos:end="31:50"><name pos:start="31:9" pos:end="31:20">pci_dma_read</name><argument_list pos:start="31:21" pos:end="31:50">(<argument pos:start="31:22" pos:end="31:22"><expr pos:start="31:22" pos:end="31:22"><name pos:start="31:22" pos:end="31:22">d</name></expr></argument>, <argument pos:start="31:25" pos:end="31:28"><expr pos:start="31:25" pos:end="31:28"><name pos:start="31:25" pos:end="31:28">base</name></expr></argument>, <argument pos:start="31:31" pos:end="31:35"><expr pos:start="31:31" pos:end="31:35"><operator pos:start="31:31" pos:end="31:31">&amp;</operator><name pos:start="31:32" pos:end="31:35">desc</name></expr></argument>, <argument pos:start="31:38" pos:end="31:49"><expr pos:start="31:38" pos:end="31:49"><sizeof pos:start="31:38" pos:end="31:49">sizeof<argument_list pos:start="31:44" pos:end="31:49">(<argument pos:start="31:45" pos:end="31:48"><expr pos:start="31:45" pos:end="31:48"><name pos:start="31:45" pos:end="31:48">desc</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="35:9" pos:end="39:32"><expr pos:start="35:9" pos:end="39:31"><call pos:start="35:9" pos:end="39:31"><name pos:start="35:9" pos:end="35:14">DBGOUT</name><argument_list pos:start="35:15" pos:end="39:31">(<argument pos:start="35:16" pos:end="35:17"><expr pos:start="35:16" pos:end="35:17"><name pos:start="35:16" pos:end="35:17">TX</name></expr></argument>, <argument pos:start="35:20" pos:end="35:43"><expr pos:start="35:20" pos:end="35:43"><literal type="string" pos:start="35:20" pos:end="35:43">"index %d: %p : %x %x\n"</literal></expr></argument>, <argument pos:start="35:46" pos:end="35:60"><expr pos:start="35:46" pos:end="35:60"><name pos:start="35:46" pos:end="35:60"><name pos:start="35:46" pos:end="35:46">s</name><operator pos:start="35:47" pos:end="35:48">-&gt;</operator><name pos:start="35:49" pos:end="35:55">mac_reg</name><index pos:start="35:56" pos:end="35:60">[<expr pos:start="35:57" pos:end="35:59"><name pos:start="35:57" pos:end="35:59">TDH</name></expr>]</index></name></expr></argument>,

               <argument pos:start="37:16" pos:end="37:49"><expr pos:start="37:16" pos:end="37:49"><operator pos:start="37:16" pos:end="37:16">(</operator><name pos:start="37:17" pos:end="37:20">void</name> <operator pos:start="37:22" pos:end="37:22">*</operator><operator pos:start="37:23" pos:end="37:23">)</operator><operator pos:start="37:24" pos:end="37:24">(</operator><name pos:start="37:25" pos:end="37:32">intptr_t</name><operator pos:start="37:33" pos:end="37:33">)</operator><name pos:start="37:34" pos:end="37:49"><name pos:start="37:34" pos:end="37:37">desc</name><operator pos:start="37:38" pos:end="37:38">.</operator><name pos:start="37:39" pos:end="37:49">buffer_addr</name></name></expr></argument>, <argument pos:start="37:52" pos:end="37:66"><expr pos:start="37:52" pos:end="37:66"><name pos:start="37:52" pos:end="37:66"><name pos:start="37:52" pos:end="37:55">desc</name><operator pos:start="37:56" pos:end="37:56">.</operator><name pos:start="37:57" pos:end="37:61">lower</name><operator pos:start="37:62" pos:end="37:62">.</operator><name pos:start="37:63" pos:end="37:66">data</name></name></expr></argument>,

               <argument pos:start="39:16" pos:end="39:30"><expr pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:19">desc</name><operator pos:start="39:20" pos:end="39:20">.</operator><name pos:start="39:21" pos:end="39:25">upper</name><operator pos:start="39:26" pos:end="39:26">.</operator><name pos:start="39:27" pos:end="39:30">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:34"><expr pos:start="43:9" pos:end="43:33"><call pos:start="43:9" pos:end="43:33"><name pos:start="43:9" pos:end="43:23">process_tx_desc</name><argument_list pos:start="43:24" pos:end="43:33">(<argument pos:start="43:25" pos:end="43:25"><expr pos:start="43:25" pos:end="43:25"><name pos:start="43:25" pos:end="43:25">s</name></expr></argument>, <argument pos:start="43:28" pos:end="43:32"><expr pos:start="43:28" pos:end="43:32"><operator pos:start="43:28" pos:end="43:28">&amp;</operator><name pos:start="43:29" pos:end="43:32">desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:50"><expr pos:start="45:9" pos:end="45:49"><name pos:start="45:9" pos:end="45:13">cause</name> <operator pos:start="45:15" pos:end="45:16">|=</operator> <call pos:start="45:18" pos:end="45:49"><name pos:start="45:18" pos:end="45:33">txdesc_writeback</name><argument_list pos:start="45:34" pos:end="45:49">(<argument pos:start="45:35" pos:end="45:35"><expr pos:start="45:35" pos:end="45:35"><name pos:start="45:35" pos:end="45:35">s</name></expr></argument>, <argument pos:start="45:38" pos:end="45:41"><expr pos:start="45:38" pos:end="45:41"><name pos:start="45:38" pos:end="45:41">base</name></expr></argument>, <argument pos:start="45:44" pos:end="45:48"><expr pos:start="45:44" pos:end="45:48"><operator pos:start="45:44" pos:end="45:44">&amp;</operator><name pos:start="45:45" pos:end="45:48">desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="49:9" pos:end="51:32"><if pos:start="49:9" pos:end="51:32">if <condition pos:start="49:12" pos:end="49:66">(<expr pos:start="49:13" pos:end="49:65"><operator pos:start="49:13" pos:end="49:14">++</operator><name pos:start="49:15" pos:end="49:29"><name pos:start="49:15" pos:end="49:15">s</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:24">mac_reg</name><index pos:start="49:25" pos:end="49:29">[<expr pos:start="49:26" pos:end="49:28"><name pos:start="49:26" pos:end="49:28">TDH</name></expr>]</index></name> <operator pos:start="49:31" pos:end="49:31">*</operator> <sizeof pos:start="49:33" pos:end="49:44">sizeof<argument_list pos:start="49:39" pos:end="49:44">(<argument pos:start="49:40" pos:end="49:43"><expr pos:start="49:40" pos:end="49:43"><name pos:start="49:40" pos:end="49:43">desc</name></expr></argument>)</argument_list></sizeof> <operator pos:start="49:46" pos:end="49:47">&gt;=</operator> <name pos:start="49:49" pos:end="49:65"><name pos:start="49:49" pos:end="49:49">s</name><operator pos:start="49:50" pos:end="49:51">-&gt;</operator><name pos:start="49:52" pos:end="49:58">mac_reg</name><index pos:start="49:59" pos:end="49:65">[<expr pos:start="49:60" pos:end="49:64"><name pos:start="49:60" pos:end="49:64">TDLEN</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:32"><block_content pos:start="51:13" pos:end="51:32">

            <expr_stmt pos:start="51:13" pos:end="51:32"><expr pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:22">mac_reg</name><index pos:start="51:23" pos:end="51:27">[<expr pos:start="51:24" pos:end="51:26"><name pos:start="51:24" pos:end="51:26">TDH</name></expr>]</index></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <literal type="number" pos:start="51:31" pos:end="51:31">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <comment type="block" pos:start="53:9" pos:end="61:11">/*

         * the following could happen only if guest sw assigns

         * bogus values to TDT/TDLEN.

         * there's nothing too intelligent we could do about this.

         */</comment>

        <if_stmt pos:start="63:9" pos:end="71:9"><if pos:start="63:9" pos:end="71:9">if <condition pos:start="63:12" pos:end="63:41">(<expr pos:start="63:13" pos:end="63:40"><name pos:start="63:13" pos:end="63:27"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:22">mac_reg</name><index pos:start="63:23" pos:end="63:27">[<expr pos:start="63:24" pos:end="63:26"><name pos:start="63:24" pos:end="63:26">TDH</name></expr>]</index></name> <operator pos:start="63:29" pos:end="63:30">==</operator> <name pos:start="63:32" pos:end="63:40">tdh_start</name></expr>)</condition> <block pos:start="63:43" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:18">

            <expr_stmt pos:start="65:13" pos:end="67:66"><expr pos:start="65:13" pos:end="67:65"><call pos:start="65:13" pos:end="67:65"><name pos:start="65:13" pos:end="65:18">DBGOUT</name><argument_list pos:start="65:19" pos:end="67:65">(<argument pos:start="65:20" pos:end="65:24"><expr pos:start="65:20" pos:end="65:24"><name pos:start="65:20" pos:end="65:24">TXERR</name></expr></argument>, <argument pos:start="65:27" pos:end="65:66"><expr pos:start="65:27" pos:end="65:66"><literal type="string" pos:start="65:27" pos:end="65:66">"TDH wraparound @%x, TDT %x, TDLEN %x\n"</literal></expr></argument>,

                   <argument pos:start="67:20" pos:end="67:28"><expr pos:start="67:20" pos:end="67:28"><name pos:start="67:20" pos:end="67:28">tdh_start</name></expr></argument>, <argument pos:start="67:31" pos:end="67:45"><expr pos:start="67:31" pos:end="67:45"><name pos:start="67:31" pos:end="67:45"><name pos:start="67:31" pos:end="67:31">s</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:40">mac_reg</name><index pos:start="67:41" pos:end="67:45">[<expr pos:start="67:42" pos:end="67:44"><name pos:start="67:42" pos:end="67:44">TDT</name></expr>]</index></name></expr></argument>, <argument pos:start="67:48" pos:end="67:64"><expr pos:start="67:48" pos:end="67:64"><name pos:start="67:48" pos:end="67:64"><name pos:start="67:48" pos:end="67:48">s</name><operator pos:start="67:49" pos:end="67:50">-&gt;</operator><name pos:start="67:51" pos:end="67:57">mac_reg</name><index pos:start="67:58" pos:end="67:64">[<expr pos:start="67:59" pos:end="67:63"><name pos:start="67:59" pos:end="67:63">TDLEN</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="75:5" pos:end="75:25"><expr pos:start="75:5" pos:end="75:24"><call pos:start="75:5" pos:end="75:24"><name pos:start="75:5" pos:end="75:11">set_ics</name><argument_list pos:start="75:12" pos:end="75:24">(<argument pos:start="75:13" pos:end="75:13"><expr pos:start="75:13" pos:end="75:13"><name pos:start="75:13" pos:end="75:13">s</name></expr></argument>, <argument pos:start="75:16" pos:end="75:16"><expr pos:start="75:16" pos:end="75:16"><literal type="number" pos:start="75:16" pos:end="75:16">0</literal></expr></argument>, <argument pos:start="75:19" pos:end="75:23"><expr pos:start="75:19" pos:end="75:23"><name pos:start="75:19" pos:end="75:23">cause</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
