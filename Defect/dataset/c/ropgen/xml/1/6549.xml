<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6549.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">qemu_strtoull</name><parameter_list pos:start="1:18" pos:end="3:35">(<parameter pos:start="1:19" pos:end="1:34"><decl pos:start="1:19" pos:end="1:34"><type pos:start="1:19" pos:end="1:34"><specifier pos:start="1:19" pos:end="1:23">const</specifier> <name pos:start="1:25" pos:end="1:28">char</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:34">nptr</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:55"><decl pos:start="1:37" pos:end="1:55"><type pos:start="1:37" pos:end="1:55"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier><modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:55">endptr</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:65"><decl pos:start="1:58" pos:end="1:65"><type pos:start="1:58" pos:end="1:65"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:65">base</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:34"><decl pos:start="3:19" pos:end="3:34"><type pos:start="3:19" pos:end="3:34"><name pos:start="3:19" pos:end="3:26">uint64_t</name> <modifier pos:start="3:28" pos:end="3:28">*</modifier></type><name pos:start="3:29" pos:end="3:34">result</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="33:1">{<block_content pos:start="7:5" pos:end="31:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:11">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="29:5"><if pos:start="11:5" pos:end="21:5">if <condition pos:start="11:8" pos:end="11:14">(<expr pos:start="11:9" pos:end="11:13"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:13">nptr</name></expr>)</condition> <block pos:start="11:16" pos:end="21:5">{<block_content pos:start="13:9" pos:end="19:22">

        <if_stmt pos:start="13:9" pos:end="17:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:19">(<expr pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:18">endptr</name></expr>)</condition> <block pos:start="13:21" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:27">

            <expr_stmt pos:start="15:13" pos:end="15:27"><expr pos:start="15:13" pos:end="15:26"><operator pos:start="15:13" pos:end="15:13">*</operator><name pos:start="15:14" pos:end="15:19">endptr</name> <operator pos:start="15:21" pos:end="15:21">=</operator> <name pos:start="15:23" pos:end="15:26">nptr</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:22"><expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:11">err</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <operator pos:start="19:15" pos:end="19:15">-</operator><name pos:start="19:16" pos:end="19:21">EINVAL</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="29:5">else <block pos:start="21:12" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:51">

        <expr_stmt pos:start="23:9" pos:end="23:18"><expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:13">errno</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><operator pos:start="25:9" pos:end="25:9">*</operator><name pos:start="25:10" pos:end="25:15">result</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="25:42"><name pos:start="25:19" pos:end="25:26">strtoull</name><argument_list pos:start="25:27" pos:end="25:42">(<argument pos:start="25:28" pos:end="25:31"><expr pos:start="25:28" pos:end="25:31"><name pos:start="25:28" pos:end="25:31">nptr</name></expr></argument>, <argument pos:start="25:34" pos:end="25:35"><expr pos:start="25:34" pos:end="25:35"><operator pos:start="25:34" pos:end="25:34">&amp;</operator><name pos:start="25:35" pos:end="25:35">p</name></expr></argument>, <argument pos:start="25:38" pos:end="25:41"><expr pos:start="25:38" pos:end="25:41"><name pos:start="25:38" pos:end="25:41">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:51"><expr pos:start="27:9" pos:end="27:50"><name pos:start="27:9" pos:end="27:11">err</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:50"><name pos:start="27:15" pos:end="27:32">check_strtox_error</name><argument_list pos:start="27:33" pos:end="27:50">(<argument pos:start="27:34" pos:end="27:39"><expr pos:start="27:34" pos:end="27:39"><name pos:start="27:34" pos:end="27:39">endptr</name></expr></argument>, <argument pos:start="27:42" pos:end="27:42"><expr pos:start="27:42" pos:end="27:42"><name pos:start="27:42" pos:end="27:42">p</name></expr></argument>, <argument pos:start="27:45" pos:end="27:49"><expr pos:start="27:45" pos:end="27:49"><name pos:start="27:45" pos:end="27:49">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="31:5" pos:end="31:15">return <expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
