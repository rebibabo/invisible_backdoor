<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11231.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">cow_is_allocated</name><parameter_list pos:start="1:28" pos:end="3:38">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:44">BlockDriverState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">bs</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:68"><decl pos:start="1:51" pos:end="1:68"><type pos:start="1:51" pos:end="1:68"><name pos:start="1:51" pos:end="1:57">int64_t</name></type> <name pos:start="1:59" pos:end="1:68">sector_num</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:22"><decl pos:start="3:9" pos:end="3:22"><type pos:start="3:9" pos:end="3:22"><name pos:start="3:9" pos:end="3:11">int</name></type> <name pos:start="3:13" pos:end="3:22">nb_sectors</name></decl></parameter>, <parameter pos:start="3:25" pos:end="3:37"><decl pos:start="3:25" pos:end="3:37"><type pos:start="3:25" pos:end="3:37"><name pos:start="3:25" pos:end="3:27">int</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:37">num_same</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:19">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">changed</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:24">(<expr pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:18">nb_sectors</name> <operator pos:start="11:20" pos:end="11:21">==</operator> <literal type="number" pos:start="11:23" pos:end="11:23">0</literal></expr>)</condition> <block pos:start="11:26" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:17">

	<expr_stmt pos:start="13:9" pos:end="13:31"><expr pos:start="13:9" pos:end="13:30"><operator pos:start="13:9" pos:end="13:9">*</operator><name pos:start="13:10" pos:end="13:17">num_same</name> <operator pos:start="13:19" pos:end="13:19">=</operator> <name pos:start="13:21" pos:end="13:30">nb_sectors</name></expr>;</expr_stmt>

	<return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:11">changed</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:40"><name pos:start="21:15" pos:end="21:24">is_bit_set</name><argument_list pos:start="21:25" pos:end="21:40">(<argument pos:start="21:26" pos:end="21:27"><expr pos:start="21:26" pos:end="21:27"><name pos:start="21:26" pos:end="21:27">bs</name></expr></argument>, <argument pos:start="21:30" pos:end="21:39"><expr pos:start="21:30" pos:end="21:39"><name pos:start="21:30" pos:end="21:39">sector_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:15">changed</name> <operator pos:start="23:17" pos:end="23:17">&lt;</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>)</condition> <block pos:start="23:22" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:17">

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return> <comment type="block" pos:start="25:19" pos:end="25:54">/* XXX: how to return I/O errors? */</comment>

    </block_content>}</block></if></if_stmt>



    <for pos:start="31:5" pos:end="37:5">for <control pos:start="31:9" pos:end="31:62">(<init pos:start="31:10" pos:end="31:23"><expr pos:start="31:10" pos:end="31:22"><operator pos:start="31:10" pos:end="31:10">*</operator><name pos:start="31:11" pos:end="31:18">num_same</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <literal type="number" pos:start="31:22" pos:end="31:22">1</literal></expr>;</init> <condition pos:start="31:25" pos:end="31:47"><expr pos:start="31:25" pos:end="31:46"><operator pos:start="31:25" pos:end="31:25">*</operator><name pos:start="31:26" pos:end="31:33">num_same</name> <operator pos:start="31:35" pos:end="31:35">&lt;</operator> <name pos:start="31:37" pos:end="31:46">nb_sectors</name></expr>;</condition> <incr pos:start="31:49" pos:end="31:61"><expr pos:start="31:49" pos:end="31:61"><operator pos:start="31:49" pos:end="31:49">(</operator><operator pos:start="31:50" pos:end="31:50">*</operator><name pos:start="31:51" pos:end="31:58">num_same</name><operator pos:start="31:59" pos:end="31:59">)</operator><operator pos:start="31:60" pos:end="31:61">++</operator></expr></incr>)</control> <block pos:start="31:64" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:18">

	<if_stmt pos:start="33:9" pos:end="35:18"><if pos:start="33:9" pos:end="35:18">if <condition pos:start="33:12" pos:end="33:62">(<expr pos:start="33:13" pos:end="33:61"><call pos:start="33:13" pos:end="33:50"><name pos:start="33:13" pos:end="33:22">is_bit_set</name><argument_list pos:start="33:23" pos:end="33:50">(<argument pos:start="33:24" pos:end="33:25"><expr pos:start="33:24" pos:end="33:25"><name pos:start="33:24" pos:end="33:25">bs</name></expr></argument>, <argument pos:start="33:28" pos:end="33:49"><expr pos:start="33:28" pos:end="33:49"><name pos:start="33:28" pos:end="33:37">sector_num</name> <operator pos:start="33:39" pos:end="33:39">+</operator> <operator pos:start="33:41" pos:end="33:41">*</operator><name pos:start="33:42" pos:end="33:49">num_same</name></expr></argument>)</argument_list></call> <operator pos:start="33:52" pos:end="33:53">!=</operator> <name pos:start="33:55" pos:end="33:61">changed</name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:18"><block_content pos:start="35:13" pos:end="35:18">

	    <break pos:start="35:13" pos:end="35:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="41:5" pos:end="41:19">return <expr pos:start="41:12" pos:end="41:18"><name pos:start="41:12" pos:end="41:18">changed</name></expr>;</return>

</block_content>}</block></function>
</unit>
