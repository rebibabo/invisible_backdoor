<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22508.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">mpegts_raw_read_packet</name><parameter_list pos:start="1:34" pos:end="3:48">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:49">AVFormatContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:47"><decl pos:start="3:35" pos:end="3:47"><type pos:start="3:35" pos:end="3:47"><name pos:start="3:35" pos:end="3:42">AVPacket</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:47">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:13">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MpegTSContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">ts</name> <init pos:start="7:23" pos:end="7:36">= <expr pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:17">pcr_h</name></decl>, <decl pos:start="11:20" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:20" pos:end="11:29">next_pcr_h</name></decl>, <decl pos:start="11:32" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:32" pos:end="11:34">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">pcr_l</name></decl>, <decl pos:start="13:16" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:25">next_pcr_l</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:19">pcr_buf</name><index pos:start="15:20" pos:end="15:23">[<expr pos:start="15:21" pos:end="15:22"><literal type="number" pos:start="15:21" pos:end="15:22">12</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:17">data</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:31"><if pos:start="21:5" pos:end="23:31">if <condition pos:start="21:8" pos:end="21:47">(<expr pos:start="21:9" pos:end="21:46"><call pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:21">av_new_packet</name><argument_list pos:start="21:22" pos:end="21:42">(<argument pos:start="21:23" pos:end="21:25"><expr pos:start="21:23" pos:end="21:25"><name pos:start="21:23" pos:end="21:25">pkt</name></expr></argument>, <argument pos:start="21:28" pos:end="21:41"><expr pos:start="21:28" pos:end="21:41"><name pos:start="21:28" pos:end="21:41">TS_PACKET_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="21:44" pos:end="21:44">&lt;</operator> <literal type="number" pos:start="21:46" pos:end="21:46">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:31"><block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:7">pkt</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:12">pos</name></name><operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:30"><name pos:start="25:15" pos:end="25:23">avio_tell</name><argument_list pos:start="25:24" pos:end="25:30">(<argument pos:start="25:25" pos:end="25:29"><expr pos:start="25:25" pos:end="25:29"><name pos:start="25:25" pos:end="25:29"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:64"><expr pos:start="27:5" pos:end="27:63"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:63"><name pos:start="27:11" pos:end="27:21">read_packet</name><argument_list pos:start="27:22" pos:end="27:63">(<argument pos:start="27:23" pos:end="27:23"><expr pos:start="27:23" pos:end="27:23"><name pos:start="27:23" pos:end="27:23">s</name></expr></argument>, <argument pos:start="27:26" pos:end="27:34"><expr pos:start="27:26" pos:end="27:34"><name pos:start="27:26" pos:end="27:34"><name pos:start="27:26" pos:end="27:28">pkt</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:34">data</name></name></expr></argument>, <argument pos:start="27:37" pos:end="27:55"><expr pos:start="27:37" pos:end="27:55"><name pos:start="27:37" pos:end="27:55"><name pos:start="27:37" pos:end="27:38">ts</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:55">raw_packet_size</name></name></expr></argument>, <argument pos:start="27:58" pos:end="27:62"><expr pos:start="27:58" pos:end="27:62"><operator pos:start="27:58" pos:end="27:58">&amp;</operator><name pos:start="27:59" pos:end="27:62">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:16">(<expr pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">&lt;</operator> <literal type="number" pos:start="29:15" pos:end="29:15">0</literal></expr>)</condition> <block pos:start="29:18" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:19">

        <expr_stmt pos:start="31:9" pos:end="31:28"><expr pos:start="31:9" pos:end="31:27"><call pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:22">av_free_packet</name><argument_list pos:start="31:23" pos:end="31:27">(<argument pos:start="31:24" pos:end="31:26"><expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:19">return <expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="39:53"><if pos:start="37:5" pos:end="39:53">if <condition pos:start="37:8" pos:end="37:26">(<expr pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:12">data</name> <operator pos:start="37:14" pos:end="37:15">!=</operator> <name pos:start="37:17" pos:end="37:25"><name pos:start="37:17" pos:end="37:19">pkt</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:25">data</name></name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:53"><block_content pos:start="39:9" pos:end="39:53">

        <expr_stmt pos:start="39:9" pos:end="39:53"><expr pos:start="39:9" pos:end="39:52"><call pos:start="39:9" pos:end="39:52"><name pos:start="39:9" pos:end="39:14">memcpy</name><argument_list pos:start="39:15" pos:end="39:52">(<argument pos:start="39:16" pos:end="39:24"><expr pos:start="39:16" pos:end="39:24"><name pos:start="39:16" pos:end="39:24"><name pos:start="39:16" pos:end="39:18">pkt</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:24">data</name></name></expr></argument>, <argument pos:start="39:27" pos:end="39:30"><expr pos:start="39:27" pos:end="39:30"><name pos:start="39:27" pos:end="39:30">data</name></expr></argument>, <argument pos:start="39:33" pos:end="39:51"><expr pos:start="39:33" pos:end="39:51"><name pos:start="39:33" pos:end="39:51"><name pos:start="39:33" pos:end="39:34">ts</name><operator pos:start="39:35" pos:end="39:36">-&gt;</operator><name pos:start="39:37" pos:end="39:51">raw_packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:52"><expr pos:start="41:5" pos:end="41:51"><call pos:start="41:5" pos:end="41:51"><name pos:start="41:5" pos:end="41:27">finished_reading_packet</name><argument_list pos:start="41:28" pos:end="41:51">(<argument pos:start="41:29" pos:end="41:29"><expr pos:start="41:29" pos:end="41:29"><name pos:start="41:29" pos:end="41:29">s</name></expr></argument>, <argument pos:start="41:32" pos:end="41:50"><expr pos:start="41:32" pos:end="41:50"><name pos:start="41:32" pos:end="41:50"><name pos:start="41:32" pos:end="41:33">ts</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:50">raw_packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="87:5"><if pos:start="43:5" pos:end="87:5">if <condition pos:start="43:8" pos:end="43:32">(<expr pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:10">ts</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:31">mpeg2ts_compute_pcr</name></name></expr>)</condition> <block pos:start="43:34" pos:end="87:5">{<block_content pos:start="47:9" pos:end="85:36">

        <comment type="block" pos:start="45:9" pos:end="45:47">/* compute exact PCR for each packet */</comment>

        <if_stmt pos:start="47:9" pos:end="79:9"><if pos:start="47:9" pos:end="79:9">if <condition pos:start="47:12" pos:end="47:54">(<expr pos:start="47:13" pos:end="47:53"><call pos:start="47:13" pos:end="47:48"><name pos:start="47:13" pos:end="47:21">parse_pcr</name><argument_list pos:start="47:22" pos:end="47:48">(<argument pos:start="47:23" pos:end="47:28"><expr pos:start="47:23" pos:end="47:28"><operator pos:start="47:23" pos:end="47:23">&amp;</operator><name pos:start="47:24" pos:end="47:28">pcr_h</name></expr></argument>, <argument pos:start="47:31" pos:end="47:36"><expr pos:start="47:31" pos:end="47:36"><operator pos:start="47:31" pos:end="47:31">&amp;</operator><name pos:start="47:32" pos:end="47:36">pcr_l</name></expr></argument>, <argument pos:start="47:39" pos:end="47:47"><expr pos:start="47:39" pos:end="47:47"><name pos:start="47:39" pos:end="47:47"><name pos:start="47:39" pos:end="47:41">pkt</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:47">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="47:50" pos:end="47:51">==</operator> <literal type="number" pos:start="47:53" pos:end="47:53">0</literal></expr>)</condition> <block pos:start="47:56" pos:end="79:9">{<block_content pos:start="51:13" pos:end="77:46">

            <comment type="block" pos:start="49:13" pos:end="49:81">/* we read the next PCR (XXX: optimize it by using a bigger buffer */</comment>

            <expr_stmt pos:start="51:13" pos:end="51:35"><expr pos:start="51:13" pos:end="51:34"><name pos:start="51:13" pos:end="51:15">pos</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <call pos:start="51:19" pos:end="51:34"><name pos:start="51:19" pos:end="51:27">avio_tell</name><argument_list pos:start="51:28" pos:end="51:34">(<argument pos:start="51:29" pos:end="51:33"><expr pos:start="51:29" pos:end="51:33"><name pos:start="51:29" pos:end="51:33"><name pos:start="51:29" pos:end="51:29">s</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="53:13" pos:end="71:13">for<control pos:start="53:16" pos:end="53:53">(<init pos:start="53:17" pos:end="53:22"><expr pos:start="53:17" pos:end="53:21"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <literal type="number" pos:start="53:21" pos:end="53:21">0</literal></expr>;</init> <condition pos:start="53:24" pos:end="53:48"><expr pos:start="53:24" pos:end="53:47"><name pos:start="53:24" pos:end="53:24">i</name> <operator pos:start="53:26" pos:end="53:26">&lt;</operator> <name pos:start="53:28" pos:end="53:47">MAX_PACKET_READAHEAD</name></expr>;</condition> <incr pos:start="53:50" pos:end="53:52"><expr pos:start="53:50" pos:end="53:52"><name pos:start="53:50" pos:end="53:50">i</name><operator pos:start="53:51" pos:end="53:52">++</operator></expr></incr>)</control> <block pos:start="53:55" pos:end="71:13">{<block_content pos:start="55:17" pos:end="69:17">

                <expr_stmt pos:start="55:17" pos:end="55:74"><expr pos:start="55:17" pos:end="55:73"><call pos:start="55:17" pos:end="55:73"><name pos:start="55:17" pos:end="55:25">avio_seek</name><argument_list pos:start="55:26" pos:end="55:73">(<argument pos:start="55:27" pos:end="55:31"><expr pos:start="55:27" pos:end="55:31"><name pos:start="55:27" pos:end="55:31"><name pos:start="55:27" pos:end="55:27">s</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:31">pb</name></name></expr></argument>, <argument pos:start="55:34" pos:end="55:62"><expr pos:start="55:34" pos:end="55:62"><name pos:start="55:34" pos:end="55:36">pos</name> <operator pos:start="55:38" pos:end="55:38">+</operator> <name pos:start="55:40" pos:end="55:40">i</name> <operator pos:start="55:42" pos:end="55:42">*</operator> <name pos:start="55:44" pos:end="55:62"><name pos:start="55:44" pos:end="55:45">ts</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:62">raw_packet_size</name></name></expr></argument>, <argument pos:start="55:65" pos:end="55:72"><expr pos:start="55:65" pos:end="55:72"><name pos:start="55:65" pos:end="55:72">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:46"><expr pos:start="57:17" pos:end="57:45"><call pos:start="57:17" pos:end="57:45"><name pos:start="57:17" pos:end="57:25">avio_read</name><argument_list pos:start="57:26" pos:end="57:45">(<argument pos:start="57:27" pos:end="57:31"><expr pos:start="57:27" pos:end="57:31"><name pos:start="57:27" pos:end="57:31"><name pos:start="57:27" pos:end="57:27">s</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:31">pb</name></name></expr></argument>, <argument pos:start="57:34" pos:end="57:40"><expr pos:start="57:34" pos:end="57:40"><name pos:start="57:34" pos:end="57:40">pcr_buf</name></expr></argument>, <argument pos:start="57:43" pos:end="57:44"><expr pos:start="57:43" pos:end="57:44"><literal type="number" pos:start="57:43" pos:end="57:44">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="59:17" pos:end="69:17"><if pos:start="59:17" pos:end="69:17">if <condition pos:start="59:20" pos:end="59:70">(<expr pos:start="59:21" pos:end="59:69"><call pos:start="59:21" pos:end="59:64"><name pos:start="59:21" pos:end="59:29">parse_pcr</name><argument_list pos:start="59:30" pos:end="59:64">(<argument pos:start="59:31" pos:end="59:41"><expr pos:start="59:31" pos:end="59:41"><operator pos:start="59:31" pos:end="59:31">&amp;</operator><name pos:start="59:32" pos:end="59:41">next_pcr_h</name></expr></argument>, <argument pos:start="59:44" pos:end="59:54"><expr pos:start="59:44" pos:end="59:54"><operator pos:start="59:44" pos:end="59:44">&amp;</operator><name pos:start="59:45" pos:end="59:54">next_pcr_l</name></expr></argument>, <argument pos:start="59:57" pos:end="59:63"><expr pos:start="59:57" pos:end="59:63"><name pos:start="59:57" pos:end="59:63">pcr_buf</name></expr></argument>)</argument_list></call> <operator pos:start="59:66" pos:end="59:67">==</operator> <literal type="number" pos:start="59:69" pos:end="59:69">0</literal></expr>)</condition> <block pos:start="59:72" pos:end="69:17">{<block_content pos:start="63:21" pos:end="67:26">

                    <comment type="block" pos:start="61:21" pos:end="61:49">/* XXX: not precise enough */</comment>

                    <expr_stmt pos:start="63:21" pos:end="65:32"><expr pos:start="63:21" pos:end="65:31"><name pos:start="63:21" pos:end="63:32"><name pos:start="63:21" pos:end="63:22">ts</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:32">pcr_incr</name></name> <operator pos:start="63:34" pos:end="63:34">=</operator> <operator pos:start="63:36" pos:end="63:36">(</operator><operator pos:start="63:37" pos:end="63:37">(</operator><name pos:start="63:38" pos:end="63:47">next_pcr_h</name> <operator pos:start="63:49" pos:end="63:49">-</operator> <name pos:start="63:51" pos:end="63:55">pcr_h</name><operator pos:start="63:56" pos:end="63:56">)</operator> <operator pos:start="63:58" pos:end="63:58">*</operator> <literal type="number" pos:start="63:60" pos:end="63:64">300</literal> <operator pos:start="63:64" pos:end="63:64">+</operator> <operator pos:start="63:66" pos:end="63:66">(</operator><name pos:start="63:67" pos:end="63:76">next_pcr_l</name> <operator pos:start="63:78" pos:end="63:78">-</operator> <name pos:start="63:80" pos:end="63:84">pcr_l</name><operator pos:start="63:85" pos:end="63:85">)</operator><operator pos:start="63:86" pos:end="63:86">)</operator> <operator pos:start="63:88" pos:end="63:88">/</operator>

                        <operator pos:start="65:25" pos:end="65:25">(</operator><name pos:start="65:26" pos:end="65:26">i</name> <operator pos:start="65:28" pos:end="65:28">+</operator> <literal type="number" pos:start="65:30" pos:end="65:30">1</literal><operator pos:start="65:31" pos:end="65:31">)</operator></expr>;</expr_stmt>

                    <break pos:start="67:21" pos:end="67:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="73:13" pos:end="73:44"><expr pos:start="73:13" pos:end="73:43"><call pos:start="73:13" pos:end="73:43"><name pos:start="73:13" pos:end="73:21">avio_seek</name><argument_list pos:start="73:22" pos:end="73:43">(<argument pos:start="73:23" pos:end="73:27"><expr pos:start="73:23" pos:end="73:27"><name pos:start="73:23" pos:end="73:27"><name pos:start="73:23" pos:end="73:23">s</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:27">pb</name></name></expr></argument>, <argument pos:start="73:30" pos:end="73:32"><expr pos:start="73:30" pos:end="73:32"><name pos:start="73:30" pos:end="73:32">pos</name></expr></argument>, <argument pos:start="73:35" pos:end="73:42"><expr pos:start="73:35" pos:end="73:42"><name pos:start="73:35" pos:end="73:42">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="75:13" pos:end="75:62">/* no next PCR found: we use previous increment */</comment>

            <expr_stmt pos:start="77:13" pos:end="77:46"><expr pos:start="77:13" pos:end="77:45"><name pos:start="77:13" pos:end="77:23"><name pos:start="77:13" pos:end="77:14">ts</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:23">cur_pcr</name></name> <operator pos:start="77:25" pos:end="77:25">=</operator> <name pos:start="77:27" pos:end="77:31">pcr_h</name> <operator pos:start="77:33" pos:end="77:33">*</operator> <literal type="number" pos:start="77:35" pos:end="77:39">300</literal> <operator pos:start="77:39" pos:end="77:39">+</operator> <name pos:start="77:41" pos:end="77:45">pcr_l</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:31"><expr pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:16"><name pos:start="81:9" pos:end="81:11">pkt</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:16">pts</name></name> <operator pos:start="81:18" pos:end="81:18">=</operator> <name pos:start="81:20" pos:end="81:30"><name pos:start="81:20" pos:end="81:21">ts</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:30">cur_pcr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:37"><expr pos:start="83:9" pos:end="83:36"><name pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:11">pkt</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:21">duration</name></name> <operator pos:start="83:23" pos:end="83:23">=</operator> <name pos:start="83:25" pos:end="83:36"><name pos:start="83:25" pos:end="83:26">ts</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:36">pcr_incr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:36"><expr pos:start="85:9" pos:end="85:35"><name pos:start="85:9" pos:end="85:19"><name pos:start="85:9" pos:end="85:10">ts</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:19">cur_pcr</name></name> <operator pos:start="85:21" pos:end="85:22">+=</operator> <name pos:start="85:24" pos:end="85:35"><name pos:start="85:24" pos:end="85:25">ts</name><operator pos:start="85:26" pos:end="85:27">-&gt;</operator><name pos:start="85:28" pos:end="85:35">pcr_incr</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:26"><expr pos:start="89:5" pos:end="89:25"><name pos:start="89:5" pos:end="89:21"><name pos:start="89:5" pos:end="89:7">pkt</name><operator pos:start="89:8" pos:end="89:9">-&gt;</operator><name pos:start="89:10" pos:end="89:21">stream_index</name></name> <operator pos:start="89:23" pos:end="89:23">=</operator> <literal type="number" pos:start="89:25" pos:end="89:25">0</literal></expr>;</expr_stmt>

    <return pos:start="91:5" pos:end="91:13">return <expr pos:start="91:12" pos:end="91:12"><literal type="number" pos:start="91:12" pos:end="91:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
