<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13841.c" pos:tabs="8"><function pos:start="1:1" pos:end="223:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">mp3_write_xing</name><parameter_list pos:start="1:26" pos:end="1:45">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="223:1">{<block_content pos:start="5:5" pos:end="221:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:14">MP3Context</name>       <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">mp3</name> <init pos:start="5:27" pos:end="5:40">= <expr pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:69"><decl pos:start="7:5" pos:end="7:68"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">codec</name> <init pos:start="7:27" pos:end="7:68">= <expr pos:start="7:29" pos:end="7:68"><name pos:start="7:29" pos:end="7:61"><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:38">streams</name><index pos:start="7:39" pos:end="7:61">[<expr pos:start="7:40" pos:end="7:60"><name pos:start="7:40" pos:end="7:60"><name pos:start="7:40" pos:end="7:42">mp3</name><operator pos:start="7:43" pos:end="7:44">-&gt;</operator><name pos:start="7:45" pos:end="7:60">audio_stream_idx</name></name></expr>]</index></name><operator pos:start="7:62" pos:end="7:63">-&gt;</operator><name pos:start="7:64" pos:end="7:68">codec</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int32_t</name></type>          <name pos:start="9:22" pos:end="9:27">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:19">MPADecodeHeader</name></type>  <name pos:start="11:22" pos:end="11:25">mpah</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">srate_idx</name></decl>, <decl pos:start="13:20" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:20" pos:end="13:20">i</name></decl>, <decl pos:start="13:23" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:23" pos:end="13:30">channels</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">bitrate_idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:24">best_bitrate_idx</name> <init pos:start="17:26" pos:end="17:29">= <expr pos:start="17:28" pos:end="17:29"><operator pos:start="17:28" pos:end="17:28">-</operator><literal type="number" pos:start="17:29" pos:end="17:29">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:37"><decl pos:start="19:5" pos:end="19:36"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:26">best_bitrate_error</name> <init pos:start="19:28" pos:end="19:36">= <expr pos:start="19:30" pos:end="19:36"><name pos:start="19:30" pos:end="19:36">INT_MAX</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:20"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:19">xing_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:16"><decl pos:start="23:5" pos:end="23:15"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:11">ver</name> <init pos:start="23:13" pos:end="23:15">= <expr pos:start="23:15" pos:end="23:15"><literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:26"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:20">bytes_needed</name></decl>, <decl pos:start="25:23" pos:end="25:25"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:23" pos:end="25:25">lsf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:91"><decl pos:start="27:5" pos:end="27:90"><type pos:start="27:5" pos:end="27:16"><specifier pos:start="27:5" pos:end="27:9">const</specifier> <name pos:start="27:11" pos:end="27:14">char</name> <modifier pos:start="27:16" pos:end="27:16">*</modifier></type><name pos:start="27:17" pos:end="27:22">vendor</name> <init pos:start="27:24" pos:end="27:90">= <expr pos:start="27:26" pos:end="27:90"><ternary pos:start="27:26" pos:end="27:90"><condition pos:start="27:26" pos:end="27:63"><expr pos:start="27:26" pos:end="27:61"><operator pos:start="27:26" pos:end="27:26">(</operator><name pos:start="27:27" pos:end="27:38"><name pos:start="27:27" pos:end="27:31">codec</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:38">flags</name></name> <operator pos:start="27:40" pos:end="27:40">&amp;</operator> <name pos:start="27:42" pos:end="27:60">CODEC_FLAG_BITEXACT</name><operator pos:start="27:61" pos:end="27:61">)</operator></expr> ?</condition><then pos:start="27:65" pos:end="27:70"> <expr pos:start="27:65" pos:end="27:70"><literal type="string" pos:start="27:65" pos:end="27:70">"Lavf"</literal></expr> </then><else pos:start="27:72" pos:end="27:90">: <expr pos:start="27:74" pos:end="27:90"><name pos:start="27:74" pos:end="27:90">LIBAVFORMAT_IDENT</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="33:17"><if pos:start="31:5" pos:end="33:17">if <condition pos:start="31:8" pos:end="31:45">(<expr pos:start="31:9" pos:end="31:44"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:24"><name pos:start="31:10" pos:end="31:10">s</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:14">pb</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:24">seekable</name></name> <operator pos:start="31:26" pos:end="31:27">||</operator> <operator pos:start="31:29" pos:end="31:29">!</operator><name pos:start="31:30" pos:end="31:44"><name pos:start="31:30" pos:end="31:32">mp3</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:44">write_xing</name></name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:17"><block_content pos:start="33:9" pos:end="33:17">

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="37:5" pos:end="57:5">for <control pos:start="37:9" pos:end="37:61">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:56"><expr pos:start="37:17" pos:end="37:55"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <call pos:start="37:21" pos:end="37:55"><name pos:start="37:21" pos:end="37:34">FF_ARRAY_ELEMS</name><argument_list pos:start="37:35" pos:end="37:55">(<argument pos:start="37:36" pos:end="37:54"><expr pos:start="37:36" pos:end="37:54"><name pos:start="37:36" pos:end="37:54">avpriv_mpa_freq_tab</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="37:58" pos:end="37:60"><expr pos:start="37:58" pos:end="37:60"><name pos:start="37:58" pos:end="37:58">i</name><operator pos:start="37:59" pos:end="37:60">++</operator></expr></incr>)</control> <block pos:start="37:63" pos:end="57:5">{<block_content pos:start="39:9" pos:end="55:14">

        <decl_stmt pos:start="39:9" pos:end="39:58"><decl pos:start="39:9" pos:end="39:57"><type pos:start="39:9" pos:end="39:22"><specifier pos:start="39:9" pos:end="39:13">const</specifier> <name pos:start="39:15" pos:end="39:22">uint16_t</name></type> <name pos:start="39:24" pos:end="39:32">base_freq</name> <init pos:start="39:34" pos:end="39:57">= <expr pos:start="39:36" pos:end="39:57"><name pos:start="39:36" pos:end="39:57"><name pos:start="39:36" pos:end="39:54">avpriv_mpa_freq_tab</name><index pos:start="39:55" pos:end="39:57">[<expr pos:start="39:56" pos:end="39:56"><name pos:start="39:56" pos:end="39:56">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="43:9" pos:end="49:22"><if pos:start="43:9" pos:end="43:64">if      <condition pos:start="43:17" pos:end="43:49">(<expr pos:start="43:18" pos:end="43:48"><name pos:start="43:18" pos:end="43:35"><name pos:start="43:18" pos:end="43:22">codec</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:35">sample_rate</name></name> <operator pos:start="43:37" pos:end="43:38">==</operator> <name pos:start="43:40" pos:end="43:48">base_freq</name></expr>)</condition><block type="pseudo" pos:start="43:55" pos:end="43:64"><block_content pos:start="43:55" pos:end="43:64">     <expr_stmt pos:start="43:55" pos:end="43:64"><expr pos:start="43:55" pos:end="43:63"><name pos:start="43:55" pos:end="43:57">ver</name> <operator pos:start="43:59" pos:end="43:59">=</operator> <literal type="number" pos:start="43:61" pos:end="43:63">0x3</literal></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="43:66" pos:end="43:74">// MPEG 1</comment>

        <if type="elseif" pos:start="45:9" pos:end="45:64">else if <condition pos:start="45:17" pos:end="45:53">(<expr pos:start="45:18" pos:end="45:52"><name pos:start="45:18" pos:end="45:35"><name pos:start="45:18" pos:end="45:22">codec</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:35">sample_rate</name></name> <operator pos:start="45:37" pos:end="45:38">==</operator> <name pos:start="45:40" pos:end="45:48">base_freq</name> <operator pos:start="45:50" pos:end="45:50">/</operator> <literal type="number" pos:start="45:52" pos:end="45:52">2</literal></expr>)</condition><block type="pseudo" pos:start="45:55" pos:end="45:64"><block_content pos:start="45:55" pos:end="45:64"> <expr_stmt pos:start="45:55" pos:end="45:64"><expr pos:start="45:55" pos:end="45:63"><name pos:start="45:55" pos:end="45:57">ver</name> <operator pos:start="45:59" pos:end="45:59">=</operator> <literal type="number" pos:start="45:61" pos:end="45:63">0x2</literal></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="45:66" pos:end="45:74">// MPEG 2</comment>

        <if type="elseif" pos:start="47:9" pos:end="47:64">else if <condition pos:start="47:17" pos:end="47:53">(<expr pos:start="47:18" pos:end="47:52"><name pos:start="47:18" pos:end="47:35"><name pos:start="47:18" pos:end="47:22">codec</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:35">sample_rate</name></name> <operator pos:start="47:37" pos:end="47:38">==</operator> <name pos:start="47:40" pos:end="47:48">base_freq</name> <operator pos:start="47:50" pos:end="47:50">/</operator> <literal type="number" pos:start="47:52" pos:end="47:52">4</literal></expr>)</condition><block type="pseudo" pos:start="47:55" pos:end="47:64"><block_content pos:start="47:55" pos:end="47:64"> <expr_stmt pos:start="47:55" pos:end="47:64"><expr pos:start="47:55" pos:end="47:63"><name pos:start="47:55" pos:end="47:57">ver</name> <operator pos:start="47:59" pos:end="47:59">=</operator> <literal type="number" pos:start="47:61" pos:end="47:63">0x0</literal></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="47:66" pos:end="47:76">// MPEG 2.5</comment>

        <else pos:start="49:9" pos:end="49:22">else<block type="pseudo" pos:start="49:14" pos:end="49:22"><block_content pos:start="49:14" pos:end="49:22"> <continue pos:start="49:14" pos:end="49:22">continue;</continue></block_content></block></else></if_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:17">srate_idx</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:21">i</name></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    </block_content>}</block></for>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:49">(<expr pos:start="59:9" pos:end="59:48"><name pos:start="59:9" pos:end="59:9">i</name> <operator pos:start="59:11" pos:end="59:12">==</operator> <call pos:start="59:14" pos:end="59:48"><name pos:start="59:14" pos:end="59:27">FF_ARRAY_ELEMS</name><argument_list pos:start="59:28" pos:end="59:48">(<argument pos:start="59:29" pos:end="59:47"><expr pos:start="59:29" pos:end="59:47"><name pos:start="59:29" pos:end="59:47">avpriv_mpa_freq_tab</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:51" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:18">

        <expr_stmt pos:start="61:9" pos:end="61:89"><expr pos:start="61:9" pos:end="61:88"><call pos:start="61:9" pos:end="61:88"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="61:88">(<argument pos:start="61:16" pos:end="61:16"><expr pos:start="61:16" pos:end="61:16"><name pos:start="61:16" pos:end="61:16">s</name></expr></argument>, <argument pos:start="61:19" pos:end="61:32"><expr pos:start="61:19" pos:end="61:32"><name pos:start="61:19" pos:end="61:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="61:35" pos:end="61:87"><expr pos:start="61:35" pos:end="61:87"><literal type="string" pos:start="61:35" pos:end="61:87">"Unsupported sample rate, not writing Xing header.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:18">return <expr pos:start="63:16" pos:end="63:17"><operator pos:start="63:16" pos:end="63:16">-</operator><literal type="number" pos:start="63:17" pos:end="63:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="69:5" pos:end="81:5">switch <condition pos:start="69:12" pos:end="69:28">(<expr pos:start="69:13" pos:end="69:27"><name pos:start="69:13" pos:end="69:27"><name pos:start="69:13" pos:end="69:17">codec</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:27">channels</name></name></expr>)</condition> <block pos:start="69:30" pos:end="81:5">{<block_content pos:start="71:5" pos:end="79:23">

    <case pos:start="71:5" pos:end="71:11">case <expr pos:start="71:10" pos:end="71:10"><literal type="number" pos:start="71:10" pos:end="71:10">1</literal></expr>:</case>  <expr_stmt pos:start="71:14" pos:end="71:33"><expr pos:start="71:14" pos:end="71:32"><name pos:start="71:14" pos:end="71:21">channels</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <name pos:start="71:25" pos:end="71:32">MPA_MONO</name></expr>;</expr_stmt>                                          <break pos:start="71:76" pos:end="71:81">break;</break>

    <case pos:start="73:5" pos:end="73:11">case <expr pos:start="73:10" pos:end="73:10"><literal type="number" pos:start="73:10" pos:end="73:10">2</literal></expr>:</case>  <expr_stmt pos:start="73:14" pos:end="73:35"><expr pos:start="73:14" pos:end="73:34"><name pos:start="73:14" pos:end="73:21">channels</name> <operator pos:start="73:23" pos:end="73:23">=</operator> <name pos:start="73:25" pos:end="73:34">MPA_STEREO</name></expr>;</expr_stmt>                                        <break pos:start="73:76" pos:end="73:81">break;</break>

    <default pos:start="75:5" pos:end="75:12">default:</default> <expr_stmt pos:start="75:14" pos:end="77:50"><expr pos:start="75:14" pos:end="77:49"><call pos:start="75:14" pos:end="77:49"><name pos:start="75:14" pos:end="75:19">av_log</name><argument_list pos:start="75:20" pos:end="77:49">(<argument pos:start="75:21" pos:end="75:21"><expr pos:start="75:21" pos:end="75:21"><name pos:start="75:21" pos:end="75:21">s</name></expr></argument>, <argument pos:start="75:24" pos:end="75:37"><expr pos:start="75:24" pos:end="75:37"><name pos:start="75:24" pos:end="75:37">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="75:40" pos:end="77:48"><expr pos:start="75:40" pos:end="77:48"><literal type="string" pos:start="75:40" pos:end="75:73">"Unsupported number of channels, "</literal>

                    <literal type="string" pos:start="77:21" pos:end="77:48">"not writing Xing header.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

             <return pos:start="79:14" pos:end="79:23">return <expr pos:start="79:21" pos:end="79:22"><operator pos:start="79:21" pos:end="79:21">-</operator><literal type="number" pos:start="79:22" pos:end="79:22">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <comment type="block" pos:start="85:5" pos:end="85:33">/* dummy MPEG audio header */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:59"><expr pos:start="87:5" pos:end="87:58"><name pos:start="87:5" pos:end="87:10">header</name>  <operator pos:start="87:13" pos:end="87:13">=</operator>  <literal type="number" pos:start="87:16" pos:end="87:20">0xffU</literal>                                 <operator pos:start="87:54" pos:end="87:55">&lt;&lt;</operator> <literal type="number" pos:start="87:57" pos:end="87:58">24</literal></expr>;</expr_stmt> <comment type="line" pos:start="87:61" pos:end="87:67">// sync</comment>

    <expr_stmt pos:start="89:5" pos:end="89:59"><expr pos:start="89:5" pos:end="89:58"><name pos:start="89:5" pos:end="89:10">header</name> <operator pos:start="89:12" pos:end="89:13">|=</operator> <operator pos:start="89:15" pos:end="89:15">(</operator><literal type="number" pos:start="89:16" pos:end="89:18">0x7</literal> <operator pos:start="89:20" pos:end="89:21">&lt;&lt;</operator> <literal type="number" pos:start="89:23" pos:end="89:23">5</literal> <operator pos:start="89:25" pos:end="89:25">|</operator> <name pos:start="89:27" pos:end="89:29">ver</name> <operator pos:start="89:31" pos:end="89:32">&lt;&lt;</operator> <literal type="number" pos:start="89:34" pos:end="89:34">3</literal> <operator pos:start="89:36" pos:end="89:36">|</operator> <literal type="number" pos:start="89:38" pos:end="89:40">0x1</literal> <operator pos:start="89:42" pos:end="89:43">&lt;&lt;</operator> <literal type="number" pos:start="89:45" pos:end="89:45">1</literal> <operator pos:start="89:47" pos:end="89:47">|</operator> <literal type="number" pos:start="89:49" pos:end="89:51">0x1</literal><operator pos:start="89:52" pos:end="89:52">)</operator> <operator pos:start="89:54" pos:end="89:55">&lt;&lt;</operator> <literal type="number" pos:start="89:57" pos:end="89:58">16</literal></expr>;</expr_stmt> <comment type="line" pos:start="89:61" pos:end="89:98">// sync/audio-version/layer 3/no crc*/</comment>

    <expr_stmt pos:start="91:5" pos:end="91:36"><expr pos:start="91:5" pos:end="91:35"><name pos:start="91:5" pos:end="91:10">header</name> <operator pos:start="91:12" pos:end="91:13">|=</operator> <operator pos:start="91:15" pos:end="91:15">(</operator><name pos:start="91:16" pos:end="91:24">srate_idx</name> <operator pos:start="91:26" pos:end="91:27">&lt;&lt;</operator> <literal type="number" pos:start="91:29" pos:end="91:29">2</literal><operator pos:start="91:30" pos:end="91:30">)</operator> <operator pos:start="91:32" pos:end="91:33">&lt;&lt;</operator> <literal type="number" pos:start="91:35" pos:end="91:35">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:28"><expr pos:start="93:5" pos:end="93:27"><name pos:start="93:5" pos:end="93:10">header</name> <operator pos:start="93:12" pos:end="93:13">|=</operator> <name pos:start="93:15" pos:end="93:22">channels</name> <operator pos:start="93:24" pos:end="93:25">&lt;&lt;</operator> <literal type="number" pos:start="93:27" pos:end="93:27">6</literal></expr>;</expr_stmt>



    <for pos:start="97:5" pos:end="113:5">for <control pos:start="97:9" pos:end="97:58">(<init pos:start="97:10" pos:end="97:25"><expr pos:start="97:10" pos:end="97:24"><name pos:start="97:10" pos:end="97:20">bitrate_idx</name> <operator pos:start="97:22" pos:end="97:22">=</operator> <literal type="number" pos:start="97:24" pos:end="97:24">1</literal></expr>;</init> <condition pos:start="97:27" pos:end="97:43"><expr pos:start="97:27" pos:end="97:42"><name pos:start="97:27" pos:end="97:37">bitrate_idx</name> <operator pos:start="97:39" pos:end="97:39">&lt;</operator> <literal type="number" pos:start="97:41" pos:end="97:42">15</literal></expr>;</condition> <incr pos:start="97:45" pos:end="97:57"><expr pos:start="97:45" pos:end="97:57"><name pos:start="97:45" pos:end="97:55">bitrate_idx</name><operator pos:start="97:56" pos:end="97:57">++</operator></expr></incr>)</control> <block pos:start="97:60" pos:end="113:5">{<block_content pos:start="99:9" pos:end="111:9">

        <decl_stmt pos:start="99:9" pos:end="99:78"><decl pos:start="99:9" pos:end="99:77"><type pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:11">int</name></type> <name pos:start="99:13" pos:end="99:20">bit_rate</name> <init pos:start="99:22" pos:end="99:77">= <expr pos:start="99:24" pos:end="99:77"><literal type="number" pos:start="99:24" pos:end="99:27">1000</literal> <operator pos:start="99:29" pos:end="99:29">*</operator> <name pos:start="99:31" pos:end="99:77"><name pos:start="99:31" pos:end="99:52">avpriv_mpa_bitrate_tab</name><index pos:start="99:53" pos:end="99:57">[<expr pos:start="99:54" pos:end="99:56"><name pos:start="99:54" pos:end="99:56">lsf</name></expr>]</index><index pos:start="99:58" pos:end="99:64">[<expr pos:start="99:59" pos:end="99:63"><literal type="number" pos:start="99:59" pos:end="99:61">3</literal> <operator pos:start="99:61" pos:end="99:61">-</operator> <literal type="number" pos:start="99:63" pos:end="99:63">1</literal></expr>]</index><index pos:start="99:65" pos:end="99:77">[<expr pos:start="99:66" pos:end="99:76"><name pos:start="99:66" pos:end="99:76">bitrate_idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="101:9" pos:end="101:57"><decl pos:start="101:9" pos:end="101:56"><type pos:start="101:9" pos:end="101:11"><name pos:start="101:9" pos:end="101:11">int</name></type> <name pos:start="101:13" pos:end="101:17">error</name>    <init pos:start="101:22" pos:end="101:56">= <expr pos:start="101:24" pos:end="101:56"><call pos:start="101:24" pos:end="101:56"><name pos:start="101:24" pos:end="101:28">FFABS</name><argument_list pos:start="101:29" pos:end="101:56">(<argument pos:start="101:30" pos:end="101:55"><expr pos:start="101:30" pos:end="101:55"><name pos:start="101:30" pos:end="101:37">bit_rate</name> <operator pos:start="101:39" pos:end="101:39">-</operator> <name pos:start="101:41" pos:end="101:55"><name pos:start="101:41" pos:end="101:45">codec</name><operator pos:start="101:46" pos:end="101:47">-&gt;</operator><name pos:start="101:48" pos:end="101:55">bit_rate</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="105:9" pos:end="111:9"><if pos:start="105:9" pos:end="111:9">if <condition pos:start="105:12" pos:end="105:39">(<expr pos:start="105:13" pos:end="105:38"><name pos:start="105:13" pos:end="105:17">error</name> <operator pos:start="105:19" pos:end="105:19">&lt;</operator> <name pos:start="105:21" pos:end="105:38">best_bitrate_error</name></expr>)</condition> <block pos:start="105:41" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:45">

            <expr_stmt pos:start="107:13" pos:end="107:39"><expr pos:start="107:13" pos:end="107:38"><name pos:start="107:13" pos:end="107:30">best_bitrate_error</name> <operator pos:start="107:32" pos:end="107:32">=</operator> <name pos:start="107:34" pos:end="107:38">error</name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:45"><expr pos:start="109:13" pos:end="109:44"><name pos:start="109:13" pos:end="109:28">best_bitrate_idx</name>   <operator pos:start="109:32" pos:end="109:32">=</operator> <name pos:start="109:34" pos:end="109:44">bitrate_idx</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="115:5" pos:end="115:38"><expr pos:start="115:5" pos:end="115:37"><call pos:start="115:5" pos:end="115:37"><name pos:start="115:5" pos:end="115:14">av_assert0</name><argument_list pos:start="115:15" pos:end="115:37">(<argument pos:start="115:16" pos:end="115:36"><expr pos:start="115:16" pos:end="115:36"><name pos:start="115:16" pos:end="115:31">best_bitrate_idx</name> <operator pos:start="115:33" pos:end="115:34">&gt;=</operator> <literal type="number" pos:start="115:36" pos:end="115:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="119:5" pos:end="163:5">for <control pos:start="119:9" pos:end="119:57">(<init pos:start="119:10" pos:end="119:40"><expr pos:start="119:10" pos:end="119:39"><name pos:start="119:10" pos:end="119:20">bitrate_idx</name> <operator pos:start="119:22" pos:end="119:22">=</operator> <name pos:start="119:24" pos:end="119:39">best_bitrate_idx</name></expr>;</init> <condition pos:start="119:42" pos:end="119:42">;</condition> <incr pos:start="119:44" pos:end="119:56"><expr pos:start="119:44" pos:end="119:56"><name pos:start="119:44" pos:end="119:54">bitrate_idx</name><operator pos:start="119:55" pos:end="119:56">++</operator></expr></incr>)</control> <block pos:start="119:59" pos:end="163:5">{<block_content pos:start="121:9" pos:end="161:24">

        <decl_stmt pos:start="121:9" pos:end="121:46"><decl pos:start="121:9" pos:end="121:45"><type pos:start="121:9" pos:end="121:15"><name pos:start="121:9" pos:end="121:15">int32_t</name></type> <name pos:start="121:17" pos:end="121:20">mask</name> <init pos:start="121:22" pos:end="121:45">= <expr pos:start="121:24" pos:end="121:45"><name pos:start="121:24" pos:end="121:34">bitrate_idx</name> <operator pos:start="121:36" pos:end="121:37">&lt;&lt;</operator> <operator pos:start="121:39" pos:end="121:39">(</operator><literal type="number" pos:start="121:40" pos:end="121:42">4</literal> <operator pos:start="121:42" pos:end="121:42">+</operator> <literal type="number" pos:start="121:44" pos:end="121:44">8</literal><operator pos:start="121:45" pos:end="121:45">)</operator></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="123:9" pos:end="125:22"><if pos:start="123:9" pos:end="125:22">if <condition pos:start="123:12" pos:end="123:30">(<expr pos:start="123:13" pos:end="123:29"><literal type="number" pos:start="123:13" pos:end="123:14">15</literal> <operator pos:start="123:16" pos:end="123:17">==</operator> <name pos:start="123:19" pos:end="123:29">bitrate_idx</name></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:22"><block_content pos:start="125:13" pos:end="125:22">

            <return pos:start="125:13" pos:end="125:22">return <expr pos:start="125:20" pos:end="125:21"><operator pos:start="125:20" pos:end="125:20">-</operator><literal type="number" pos:start="125:21" pos:end="125:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:23"><expr pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:14">header</name> <operator pos:start="127:16" pos:end="127:17">|=</operator> <name pos:start="127:19" pos:end="127:22">mask</name></expr>;</expr_stmt>



        <expr_stmt pos:start="131:9" pos:end="131:54"><expr pos:start="131:9" pos:end="131:53"><call pos:start="131:9" pos:end="131:53"><name pos:start="131:9" pos:end="131:38">avpriv_mpegaudio_decode_header</name><argument_list pos:start="131:39" pos:end="131:53">(<argument pos:start="131:40" pos:end="131:44"><expr pos:start="131:40" pos:end="131:44"><operator pos:start="131:40" pos:end="131:40">&amp;</operator><name pos:start="131:41" pos:end="131:44">mpah</name></expr></argument>, <argument pos:start="131:47" pos:end="131:52"><expr pos:start="131:47" pos:end="131:52"><name pos:start="131:47" pos:end="131:52">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:70"><expr pos:start="133:9" pos:end="133:69"><name pos:start="133:9" pos:end="133:19">xing_offset</name><operator pos:start="133:20" pos:end="133:20">=</operator><name pos:start="133:21" pos:end="133:69"><name pos:start="133:21" pos:end="133:31">xing_offtbl</name><index pos:start="133:32" pos:end="133:46">[<expr pos:start="133:33" pos:end="133:45"><name pos:start="133:33" pos:end="133:40"><name pos:start="133:33" pos:end="133:36">mpah</name><operator pos:start="133:37" pos:end="133:37">.</operator><name pos:start="133:38" pos:end="133:40">lsf</name></name> <operator pos:start="133:42" pos:end="133:43">==</operator> <literal type="number" pos:start="133:45" pos:end="133:45">1</literal></expr>]</index><index pos:start="133:47" pos:end="133:69">[<expr pos:start="133:48" pos:end="133:68"><name pos:start="133:48" pos:end="133:63"><name pos:start="133:48" pos:end="133:51">mpah</name><operator pos:start="133:52" pos:end="133:52">.</operator><name pos:start="133:53" pos:end="133:63">nb_channels</name></name> <operator pos:start="133:65" pos:end="133:66">==</operator> <literal type="number" pos:start="133:68" pos:end="133:68">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="151:16"><expr pos:start="135:9" pos:end="149:19"><name pos:start="135:9" pos:end="135:20">bytes_needed</name> <operator pos:start="135:22" pos:end="135:22">=</operator> <literal type="number" pos:start="135:24" pos:end="137:16">4</literal>              <comment type="line" pos:start="135:39" pos:end="135:47">// header</comment>

               <operator pos:start="137:16" pos:end="137:16">+</operator> <name pos:start="137:18" pos:end="137:28">xing_offset</name>

               <operator pos:start="139:16" pos:end="139:16">+</operator> <literal type="number" pos:start="139:18" pos:end="141:16">4</literal>              <comment type="line" pos:start="139:33" pos:end="139:43">// xing tag</comment>

               <operator pos:start="141:16" pos:end="141:16">+</operator> <literal type="number" pos:start="141:18" pos:end="143:16">4</literal>              <comment type="line" pos:start="141:33" pos:end="141:56">// frames/size/toc flags</comment>

               <operator pos:start="143:16" pos:end="143:16">+</operator> <literal type="number" pos:start="143:18" pos:end="145:16">4</literal>              <comment type="line" pos:start="143:33" pos:end="143:41">// frames</comment>

               <operator pos:start="145:16" pos:end="145:16">+</operator> <literal type="number" pos:start="145:18" pos:end="147:16">4</literal>              <comment type="line" pos:start="145:33" pos:end="145:39">// size</comment>

               <operator pos:start="147:16" pos:end="147:16">+</operator> <name pos:start="147:18" pos:end="147:30">XING_TOC_SIZE</name>   <comment type="line" pos:start="147:34" pos:end="147:39">// toc</comment>

               <operator pos:start="149:16" pos:end="149:16">+</operator> <literal type="number" pos:start="149:18" pos:end="149:19">24</literal></expr>

               ;</expr_stmt>



        <if_stmt pos:start="155:9" pos:end="157:18"><if pos:start="155:9" pos:end="157:18">if <condition pos:start="155:12" pos:end="155:44">(<expr pos:start="155:13" pos:end="155:43"><name pos:start="155:13" pos:end="155:24">bytes_needed</name> <operator pos:start="155:26" pos:end="155:27">&lt;=</operator> <name pos:start="155:29" pos:end="155:43"><name pos:start="155:29" pos:end="155:32">mpah</name><operator pos:start="155:33" pos:end="155:33">.</operator><name pos:start="155:34" pos:end="155:43">frame_size</name></name></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:18"><block_content pos:start="157:13" pos:end="157:18">

            <break pos:start="157:13" pos:end="157:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="161:9" pos:end="161:24"><expr pos:start="161:9" pos:end="161:23"><name pos:start="161:9" pos:end="161:14">header</name> <operator pos:start="161:16" pos:end="161:17">&amp;=</operator> <operator pos:start="161:19" pos:end="161:19">~</operator><name pos:start="161:20" pos:end="161:23">mask</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="167:5" pos:end="167:29"><expr pos:start="167:5" pos:end="167:28"><call pos:start="167:5" pos:end="167:28"><name pos:start="167:5" pos:end="167:13">avio_wb32</name><argument_list pos:start="167:14" pos:end="167:28">(<argument pos:start="167:15" pos:end="167:19"><expr pos:start="167:15" pos:end="167:19"><name pos:start="167:15" pos:end="167:19"><name pos:start="167:15" pos:end="167:15">s</name><operator pos:start="167:16" pos:end="167:17">-&gt;</operator><name pos:start="167:18" pos:end="167:19">pb</name></name></expr></argument>, <argument pos:start="167:22" pos:end="167:27"><expr pos:start="167:22" pos:end="167:27"><name pos:start="167:22" pos:end="167:27">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="171:5" pos:end="171:37"><expr pos:start="171:5" pos:end="171:36"><call pos:start="171:5" pos:end="171:36"><name pos:start="171:5" pos:end="171:13">ffio_fill</name><argument_list pos:start="171:14" pos:end="171:36">(<argument pos:start="171:15" pos:end="171:19"><expr pos:start="171:15" pos:end="171:19"><name pos:start="171:15" pos:end="171:19"><name pos:start="171:15" pos:end="171:15">s</name><operator pos:start="171:16" pos:end="171:17">-&gt;</operator><name pos:start="171:18" pos:end="171:19">pb</name></name></expr></argument>, <argument pos:start="171:22" pos:end="171:22"><expr pos:start="171:22" pos:end="171:22"><literal type="number" pos:start="171:22" pos:end="171:22">0</literal></expr></argument>, <argument pos:start="171:25" pos:end="171:35"><expr pos:start="171:25" pos:end="171:35"><name pos:start="171:25" pos:end="171:35">xing_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:40"><expr pos:start="173:5" pos:end="173:39"><name pos:start="173:5" pos:end="173:20"><name pos:start="173:5" pos:end="173:7">mp3</name><operator pos:start="173:8" pos:end="173:9">-&gt;</operator><name pos:start="173:10" pos:end="173:20">xing_offset</name></name> <operator pos:start="173:22" pos:end="173:22">=</operator> <call pos:start="173:24" pos:end="173:39"><name pos:start="173:24" pos:end="173:32">avio_tell</name><argument_list pos:start="173:33" pos:end="173:39">(<argument pos:start="173:34" pos:end="173:38"><expr pos:start="173:34" pos:end="173:38"><name pos:start="173:34" pos:end="173:38"><name pos:start="173:34" pos:end="173:34">s</name><operator pos:start="173:35" pos:end="173:36">-&gt;</operator><name pos:start="173:37" pos:end="173:38">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:32"><expr pos:start="175:5" pos:end="175:31"><call pos:start="175:5" pos:end="175:31"><name pos:start="175:5" pos:end="175:16">ffio_wfourcc</name><argument_list pos:start="175:17" pos:end="175:31">(<argument pos:start="175:18" pos:end="175:22"><expr pos:start="175:18" pos:end="175:22"><name pos:start="175:18" pos:end="175:22"><name pos:start="175:18" pos:end="175:18">s</name><operator pos:start="175:19" pos:end="175:20">-&gt;</operator><name pos:start="175:21" pos:end="175:22">pb</name></name></expr></argument>, <argument pos:start="175:25" pos:end="175:30"><expr pos:start="175:25" pos:end="175:30"><literal type="string" pos:start="175:25" pos:end="175:30">"Xing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:41"><expr pos:start="177:5" pos:end="177:40"><call pos:start="177:5" pos:end="177:40"><name pos:start="177:5" pos:end="177:13">avio_wb32</name><argument_list pos:start="177:14" pos:end="177:40">(<argument pos:start="177:15" pos:end="177:19"><expr pos:start="177:15" pos:end="177:19"><name pos:start="177:15" pos:end="177:19"><name pos:start="177:15" pos:end="177:15">s</name><operator pos:start="177:16" pos:end="177:17">-&gt;</operator><name pos:start="177:18" pos:end="177:19">pb</name></name></expr></argument>, <argument pos:start="177:22" pos:end="177:39"><expr pos:start="177:22" pos:end="177:39"><literal type="number" pos:start="177:22" pos:end="177:25">0x01</literal> <operator pos:start="177:27" pos:end="177:27">|</operator> <literal type="number" pos:start="177:29" pos:end="177:32">0x02</literal> <operator pos:start="177:34" pos:end="177:34">|</operator> <literal type="number" pos:start="177:36" pos:end="177:39">0x04</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="177:44" pos:end="177:65">// frames / size / TOC</comment>



    <expr_stmt pos:start="181:5" pos:end="181:32"><expr pos:start="181:5" pos:end="181:31"><name pos:start="181:5" pos:end="181:13"><name pos:start="181:5" pos:end="181:7">mp3</name><operator pos:start="181:8" pos:end="181:9">-&gt;</operator><name pos:start="181:10" pos:end="181:13">size</name></name> <operator pos:start="181:15" pos:end="181:15">=</operator> <name pos:start="181:17" pos:end="181:31"><name pos:start="181:17" pos:end="181:20">mpah</name><operator pos:start="181:21" pos:end="181:21">.</operator><name pos:start="181:22" pos:end="181:31">frame_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:16"><expr pos:start="183:5" pos:end="183:15"><name pos:start="183:5" pos:end="183:13"><name pos:start="183:5" pos:end="183:7">mp3</name><operator pos:start="183:8" pos:end="183:9">-&gt;</operator><name pos:start="183:10" pos:end="183:13">want</name></name><operator pos:start="183:14" pos:end="183:14">=</operator><literal type="number" pos:start="183:15" pos:end="183:15">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:16"><expr pos:start="185:5" pos:end="185:15"><name pos:start="185:5" pos:end="185:13"><name pos:start="185:5" pos:end="185:7">mp3</name><operator pos:start="185:8" pos:end="185:9">-&gt;</operator><name pos:start="185:10" pos:end="185:13">seen</name></name><operator pos:start="185:14" pos:end="185:14">=</operator><literal type="number" pos:start="185:15" pos:end="185:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:15"><expr pos:start="187:5" pos:end="187:14"><name pos:start="187:5" pos:end="187:12"><name pos:start="187:5" pos:end="187:7">mp3</name><operator pos:start="187:8" pos:end="187:9">-&gt;</operator><name pos:start="187:10" pos:end="187:12">pos</name></name><operator pos:start="187:13" pos:end="187:13">=</operator><literal type="number" pos:start="187:14" pos:end="187:14">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:24"><expr pos:start="191:5" pos:end="191:23"><call pos:start="191:5" pos:end="191:23"><name pos:start="191:5" pos:end="191:13">avio_wb32</name><argument_list pos:start="191:14" pos:end="191:23">(<argument pos:start="191:15" pos:end="191:19"><expr pos:start="191:15" pos:end="191:19"><name pos:start="191:15" pos:end="191:19"><name pos:start="191:15" pos:end="191:15">s</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:19">pb</name></name></expr></argument>, <argument pos:start="191:22" pos:end="191:22"><expr pos:start="191:22" pos:end="191:22"><literal type="number" pos:start="191:22" pos:end="191:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="191:27" pos:end="191:35">// frames</comment>

    <expr_stmt pos:start="193:5" pos:end="193:24"><expr pos:start="193:5" pos:end="193:23"><call pos:start="193:5" pos:end="193:23"><name pos:start="193:5" pos:end="193:13">avio_wb32</name><argument_list pos:start="193:14" pos:end="193:23">(<argument pos:start="193:15" pos:end="193:19"><expr pos:start="193:15" pos:end="193:19"><name pos:start="193:15" pos:end="193:19"><name pos:start="193:15" pos:end="193:15">s</name><operator pos:start="193:16" pos:end="193:17">-&gt;</operator><name pos:start="193:18" pos:end="193:19">pb</name></name></expr></argument>, <argument pos:start="193:22" pos:end="193:22"><expr pos:start="193:22" pos:end="193:22"><literal type="number" pos:start="193:22" pos:end="193:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="193:27" pos:end="193:33">// size</comment>



    <comment type="line" pos:start="197:5" pos:end="197:10">// toc</comment>

    <for pos:start="199:5" pos:end="201:59">for <control pos:start="199:9" pos:end="199:39">(<init pos:start="199:10" pos:end="199:15"><expr pos:start="199:10" pos:end="199:14"><name pos:start="199:10" pos:end="199:10">i</name> <operator pos:start="199:12" pos:end="199:12">=</operator> <literal type="number" pos:start="199:14" pos:end="199:14">0</literal></expr>;</init> <condition pos:start="199:17" pos:end="199:34"><expr pos:start="199:17" pos:end="199:33"><name pos:start="199:17" pos:end="199:17">i</name> <operator pos:start="199:19" pos:end="199:19">&lt;</operator> <name pos:start="199:21" pos:end="199:33">XING_TOC_SIZE</name></expr>;</condition> <incr pos:start="199:36" pos:end="199:38"><expr pos:start="199:36" pos:end="199:38"><operator pos:start="199:36" pos:end="199:37">++</operator><name pos:start="199:38" pos:end="199:38">i</name></expr></incr>)</control><block type="pseudo" pos:start="201:9" pos:end="201:59"><block_content pos:start="201:9" pos:end="201:59">

        <expr_stmt pos:start="201:9" pos:end="201:59"><expr pos:start="201:9" pos:end="201:58"><call pos:start="201:9" pos:end="201:58"><name pos:start="201:9" pos:end="201:15">avio_w8</name><argument_list pos:start="201:16" pos:end="201:58">(<argument pos:start="201:17" pos:end="201:21"><expr pos:start="201:17" pos:end="201:21"><name pos:start="201:17" pos:end="201:21"><name pos:start="201:17" pos:end="201:17">s</name><operator pos:start="201:18" pos:end="201:19">-&gt;</operator><name pos:start="201:20" pos:end="201:21">pb</name></name></expr></argument>, <argument pos:start="201:24" pos:end="201:57"><expr pos:start="201:24" pos:end="201:57"><operator pos:start="201:24" pos:end="201:24">(</operator><name pos:start="201:25" pos:end="201:31">uint8_t</name><operator pos:start="201:32" pos:end="201:32">)</operator><operator pos:start="201:33" pos:end="201:33">(</operator><literal type="number" pos:start="201:34" pos:end="201:36">255</literal> <operator pos:start="201:38" pos:end="201:38">*</operator> <name pos:start="201:40" pos:end="201:40">i</name> <operator pos:start="201:42" pos:end="201:42">/</operator> <name pos:start="201:44" pos:end="201:56">XING_TOC_SIZE</name><operator pos:start="201:57" pos:end="201:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="205:5" pos:end="207:34">for <control pos:start="205:9" pos:end="205:40">(<init pos:start="205:10" pos:end="205:15"><expr pos:start="205:10" pos:end="205:14"><name pos:start="205:10" pos:end="205:10">i</name> <operator pos:start="205:12" pos:end="205:12">=</operator> <literal type="number" pos:start="205:14" pos:end="205:14">0</literal></expr>;</init> <condition pos:start="205:17" pos:end="205:35"><expr pos:start="205:17" pos:end="205:34"><name pos:start="205:17" pos:end="205:17">i</name> <operator pos:start="205:19" pos:end="205:19">&lt;</operator> <call pos:start="205:21" pos:end="205:34"><name pos:start="205:21" pos:end="205:26">strlen</name><argument_list pos:start="205:27" pos:end="205:34">(<argument pos:start="205:28" pos:end="205:33"><expr pos:start="205:28" pos:end="205:33"><name pos:start="205:28" pos:end="205:33">vendor</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="205:37" pos:end="205:39"><expr pos:start="205:37" pos:end="205:39"><operator pos:start="205:37" pos:end="205:38">++</operator><name pos:start="205:39" pos:end="205:39">i</name></expr></incr>)</control><block type="pseudo" pos:start="207:9" pos:end="207:34"><block_content pos:start="207:9" pos:end="207:34">

        <expr_stmt pos:start="207:9" pos:end="207:34"><expr pos:start="207:9" pos:end="207:33"><call pos:start="207:9" pos:end="207:33"><name pos:start="207:9" pos:end="207:15">avio_w8</name><argument_list pos:start="207:16" pos:end="207:33">(<argument pos:start="207:17" pos:end="207:21"><expr pos:start="207:17" pos:end="207:21"><name pos:start="207:17" pos:end="207:21"><name pos:start="207:17" pos:end="207:17">s</name><operator pos:start="207:18" pos:end="207:19">-&gt;</operator><name pos:start="207:20" pos:end="207:21">pb</name></name></expr></argument>, <argument pos:start="207:24" pos:end="207:32"><expr pos:start="207:24" pos:end="207:32"><name pos:start="207:24" pos:end="207:32"><name pos:start="207:24" pos:end="207:29">vendor</name><index pos:start="207:30" pos:end="207:32">[<expr pos:start="207:31" pos:end="207:31"><name pos:start="207:31" pos:end="207:31">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="209:5" pos:end="211:26">for <control pos:start="209:9" pos:end="209:23">(<init pos:start="209:10" pos:end="209:10">;</init> <condition pos:start="209:12" pos:end="209:18"><expr pos:start="209:12" pos:end="209:17"><name pos:start="209:12" pos:end="209:12">i</name> <operator pos:start="209:14" pos:end="209:14">&lt;</operator> <literal type="number" pos:start="209:16" pos:end="209:17">21</literal></expr>;</condition> <incr pos:start="209:20" pos:end="209:22"><expr pos:start="209:20" pos:end="209:22"><operator pos:start="209:20" pos:end="209:21">++</operator><name pos:start="209:22" pos:end="209:22">i</name></expr></incr>)</control><block type="pseudo" pos:start="211:9" pos:end="211:26"><block_content pos:start="211:9" pos:end="211:26">

        <expr_stmt pos:start="211:9" pos:end="211:26"><expr pos:start="211:9" pos:end="211:25"><call pos:start="211:9" pos:end="211:25"><name pos:start="211:9" pos:end="211:15">avio_w8</name><argument_list pos:start="211:16" pos:end="211:25">(<argument pos:start="211:17" pos:end="211:21"><expr pos:start="211:17" pos:end="211:21"><name pos:start="211:17" pos:end="211:21"><name pos:start="211:17" pos:end="211:17">s</name><operator pos:start="211:18" pos:end="211:19">-&gt;</operator><name pos:start="211:20" pos:end="211:21">pb</name></name></expr></argument>, <argument pos:start="211:24" pos:end="211:24"><expr pos:start="211:24" pos:end="211:24"><literal type="number" pos:start="211:24" pos:end="211:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="213:5" pos:end="213:59"><expr pos:start="213:5" pos:end="213:58"><call pos:start="213:5" pos:end="213:58"><name pos:start="213:5" pos:end="213:13">avio_wb24</name><argument_list pos:start="213:14" pos:end="213:58">(<argument pos:start="213:15" pos:end="213:19"><expr pos:start="213:15" pos:end="213:19"><name pos:start="213:15" pos:end="213:19"><name pos:start="213:15" pos:end="213:15">s</name><operator pos:start="213:16" pos:end="213:17">-&gt;</operator><name pos:start="213:18" pos:end="213:19">pb</name></name></expr></argument>, <argument pos:start="213:22" pos:end="213:57"><expr pos:start="213:22" pos:end="213:57"><call pos:start="213:22" pos:end="213:53"><name pos:start="213:22" pos:end="213:26">FFMAX</name><argument_list pos:start="213:27" pos:end="213:53">(<argument pos:start="213:28" pos:end="213:49"><expr pos:start="213:28" pos:end="213:49"><name pos:start="213:28" pos:end="213:39"><name pos:start="213:28" pos:end="213:32">codec</name><operator pos:start="213:33" pos:end="213:34">-&gt;</operator><name pos:start="213:35" pos:end="213:39">delay</name></name> <operator pos:start="213:41" pos:end="213:41">-</operator> <literal type="number" pos:start="213:43" pos:end="213:47">528</literal> <operator pos:start="213:47" pos:end="213:47">-</operator> <literal type="number" pos:start="213:49" pos:end="213:49">1</literal></expr></argument>, <argument pos:start="213:52" pos:end="213:52"><expr pos:start="213:52" pos:end="213:52"><literal type="number" pos:start="213:52" pos:end="213:52">0</literal></expr></argument>)</argument_list></call><operator pos:start="213:54" pos:end="213:55">&lt;&lt;</operator><literal type="number" pos:start="213:56" pos:end="213:57">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="217:5" pos:end="217:56"><expr pos:start="217:5" pos:end="217:55"><call pos:start="217:5" pos:end="217:55"><name pos:start="217:5" pos:end="217:13">ffio_fill</name><argument_list pos:start="217:14" pos:end="217:55">(<argument pos:start="217:15" pos:end="217:19"><expr pos:start="217:15" pos:end="217:19"><name pos:start="217:15" pos:end="217:19"><name pos:start="217:15" pos:end="217:15">s</name><operator pos:start="217:16" pos:end="217:17">-&gt;</operator><name pos:start="217:18" pos:end="217:19">pb</name></name></expr></argument>, <argument pos:start="217:22" pos:end="217:22"><expr pos:start="217:22" pos:end="217:22"><literal type="number" pos:start="217:22" pos:end="217:22">0</literal></expr></argument>, <argument pos:start="217:25" pos:end="217:54"><expr pos:start="217:25" pos:end="217:54"><name pos:start="217:25" pos:end="217:39"><name pos:start="217:25" pos:end="217:28">mpah</name><operator pos:start="217:29" pos:end="217:29">.</operator><name pos:start="217:30" pos:end="217:39">frame_size</name></name> <operator pos:start="217:41" pos:end="217:41">-</operator> <name pos:start="217:43" pos:end="217:54">bytes_needed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="221:5" pos:end="221:13">return <expr pos:start="221:12" pos:end="221:12"><literal type="number" pos:start="221:12" pos:end="221:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
