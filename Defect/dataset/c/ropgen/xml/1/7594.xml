<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7594.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">vmsa_ttbcr_raw_write</name><parameter_list pos:start="1:32" pos:end="3:47">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:43">CPUARMState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">env</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:72"><decl pos:start="1:51" pos:end="1:72"><type pos:start="1:51" pos:end="1:72"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:68">ARMCPRegInfo</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:72">ri</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:46"><decl pos:start="3:33" pos:end="3:46"><type pos:start="3:33" pos:end="3:46"><name pos:start="3:33" pos:end="3:40">uint64_t</name></type> <name pos:start="3:42" pos:end="3:46">value</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="33:13">

    <if_stmt pos:start="7:5" pos:end="15:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:43">(<expr pos:start="7:9" pos:end="7:42"><call pos:start="7:9" pos:end="7:42"><name pos:start="7:9" pos:end="7:19">arm_feature</name><argument_list pos:start="7:20" pos:end="7:42">(<argument pos:start="7:21" pos:end="7:23"><expr pos:start="7:21" pos:end="7:23"><name pos:start="7:21" pos:end="7:23">env</name></expr></argument>, <argument pos:start="7:26" pos:end="7:41"><expr pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:41">ARM_FEATURE_LPAE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:45" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:55">

        <expr_stmt pos:start="9:9" pos:end="9:55"><expr pos:start="9:9" pos:end="9:54"><name pos:start="9:9" pos:end="9:13">value</name> <operator pos:start="9:15" pos:end="9:16">&amp;=</operator> <operator pos:start="9:18" pos:end="9:18">~</operator><operator pos:start="9:19" pos:end="9:19">(</operator><operator pos:start="9:20" pos:end="9:20">(</operator><literal type="number" pos:start="9:21" pos:end="9:21">7</literal> <operator pos:start="9:23" pos:end="9:24">&lt;&lt;</operator> <literal type="number" pos:start="9:26" pos:end="9:27">19</literal><operator pos:start="9:28" pos:end="9:28">)</operator> <operator pos:start="9:30" pos:end="9:30">|</operator> <operator pos:start="9:32" pos:end="9:32">(</operator><literal type="number" pos:start="9:33" pos:end="9:33">3</literal> <operator pos:start="9:35" pos:end="9:36">&lt;&lt;</operator> <literal type="number" pos:start="9:38" pos:end="9:39">14</literal><operator pos:start="9:40" pos:end="9:40">)</operator> <operator pos:start="9:42" pos:end="9:42">|</operator> <operator pos:start="9:44" pos:end="9:44">(</operator><literal type="number" pos:start="9:45" pos:end="9:47">0xf</literal> <operator pos:start="9:49" pos:end="9:50">&lt;&lt;</operator> <literal type="number" pos:start="9:52" pos:end="9:52">3</literal><operator pos:start="9:53" pos:end="9:53">)</operator><operator pos:start="9:54" pos:end="9:54">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="11:7" pos:end="15:5">else <block pos:start="11:12" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:19">

        <expr_stmt pos:start="13:9" pos:end="13:19"><expr pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:13">value</name> <operator pos:start="13:15" pos:end="13:16">&amp;=</operator> <literal type="number" pos:start="13:18" pos:end="13:18">7</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="17:5" pos:end="25:7">/* Note that we always calculate c2_mask and c2_base_mask, but

     * they are only used for short-descriptor tables (ie if EAE is 0);

     * for long-descriptor tables the TTBCR fields are used differently

     * and the c2_mask and c2_base_mask values are meaningless.

     */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:7">env</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:13">cp15</name><operator pos:start="27:14" pos:end="27:14">.</operator><name pos:start="27:15" pos:end="27:24">c2_control</name></name> <operator pos:start="27:26" pos:end="27:26">=</operator> <name pos:start="27:28" pos:end="27:32">value</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:60"><expr pos:start="29:5" pos:end="29:59"><name pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:7">env</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:13">cp15</name><operator pos:start="29:14" pos:end="29:14">.</operator><name pos:start="29:15" pos:end="29:21">c2_mask</name></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <operator pos:start="29:25" pos:end="29:25">~</operator><operator pos:start="29:26" pos:end="29:26">(</operator><operator pos:start="29:27" pos:end="29:27">(</operator><operator pos:start="29:28" pos:end="29:28">(</operator><name pos:start="29:29" pos:end="29:36">uint32_t</name><operator pos:start="29:37" pos:end="29:37">)</operator><literal type="number" pos:start="29:38" pos:end="29:48">0xffffffffu</literal><operator pos:start="29:49" pos:end="29:49">)</operator> <operator pos:start="29:51" pos:end="29:52">&gt;&gt;</operator> <name pos:start="29:54" pos:end="29:58">value</name><operator pos:start="29:59" pos:end="29:59">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:59"><expr pos:start="31:5" pos:end="31:58"><name pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:7">env</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:13">cp15</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:26">c2_base_mask</name></name> <operator pos:start="31:28" pos:end="31:28">=</operator> <operator pos:start="31:30" pos:end="31:30">~</operator><operator pos:start="31:31" pos:end="31:31">(</operator><operator pos:start="31:32" pos:end="31:32">(</operator><name pos:start="31:33" pos:end="31:40">uint32_t</name><operator pos:start="31:41" pos:end="31:41">)</operator><literal type="number" pos:start="31:42" pos:end="31:48">0x3fffu</literal> <operator pos:start="31:50" pos:end="31:51">&gt;&gt;</operator> <name pos:start="31:53" pos:end="31:57">value</name><operator pos:start="31:58" pos:end="31:58">)</operator></expr>;</expr_stmt>

    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
