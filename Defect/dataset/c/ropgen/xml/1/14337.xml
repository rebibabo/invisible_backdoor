<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14337.c" pos:tabs="8"><function pos:start="1:1" pos:end="299:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">h264_decode_frame</name><parameter_list pos:start="1:29" pos:end="3:61">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:32">int</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:43">got_frame</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:60"><decl pos:start="3:46" pos:end="3:60"><type pos:start="3:46" pos:end="3:60"><name pos:start="3:46" pos:end="3:53">AVPacket</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:60">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="299:1">{<block_content pos:start="7:5" pos:end="297:51">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name>       <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">H264Context</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:18">h</name>     <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:17">pict</name>      <init pos:start="13:24" pos:end="13:29">= <expr pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:29">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">buf_index</name>      <init pos:start="15:24" pos:end="15:26">= <expr pos:start="15:26" pos:end="15:26"><literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:15">H264Picture</name> <modifier pos:start="17:17" pos:end="17:17">*</modifier></type><name pos:start="17:18" pos:end="17:20">out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>, <decl pos:start="19:12" pos:end="19:18"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:18">out_idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:12"><decl pos:start="21:5" pos:end="21:11"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:5">h</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:12">flags</name></name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:20">avctx</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:27">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:26"><expr pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:5">h</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:21">setup_finished</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <literal type="number" pos:start="27:25" pos:end="27:25">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:30">(<expr pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:9">h</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:23">backup_width</name></name> <operator pos:start="31:25" pos:end="31:26">!=</operator> <operator pos:start="31:28" pos:end="31:28">-</operator><literal type="number" pos:start="31:29" pos:end="31:29">1</literal></expr>)</condition> <block pos:start="31:32" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:29">

        <expr_stmt pos:start="33:9" pos:end="33:42"><expr pos:start="33:9" pos:end="33:41"><name pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:13">avctx</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:20">width</name></name>    <operator pos:start="33:25" pos:end="33:25">=</operator> <name pos:start="33:27" pos:end="33:41"><name pos:start="33:27" pos:end="33:27">h</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:41">backup_width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:29"><expr pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:9">h</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:23">backup_width</name></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <operator pos:start="35:27" pos:end="35:27">-</operator><literal type="number" pos:start="35:28" pos:end="35:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:31">(<expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:9">h</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:24">backup_height</name></name> <operator pos:start="39:26" pos:end="39:27">!=</operator> <operator pos:start="39:29" pos:end="39:29">-</operator><literal type="number" pos:start="39:30" pos:end="39:30">1</literal></expr>)</condition> <block pos:start="39:33" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:30">

        <expr_stmt pos:start="41:9" pos:end="41:44"><expr pos:start="41:9" pos:end="41:43"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:13">avctx</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:21">height</name></name>    <operator pos:start="41:26" pos:end="41:26">=</operator> <name pos:start="41:28" pos:end="41:43"><name pos:start="41:28" pos:end="41:28">h</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:43">backup_height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:9">h</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:24">backup_height</name></name> <operator pos:start="43:26" pos:end="43:26">=</operator> <operator pos:start="43:28" pos:end="43:28">-</operator><literal type="number" pos:start="43:29" pos:end="43:29">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:45">(<expr pos:start="47:9" pos:end="47:44"><name pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:9">h</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:25">backup_pix_fmt</name></name> <operator pos:start="47:27" pos:end="47:28">!=</operator> <name pos:start="47:30" pos:end="47:44">AV_PIX_FMT_NONE</name></expr>)</condition> <block pos:start="47:47" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:44">

        <expr_stmt pos:start="49:9" pos:end="49:46"><expr pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:13">avctx</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:22">pix_fmt</name></name>    <operator pos:start="49:27" pos:end="49:27">=</operator> <name pos:start="49:29" pos:end="49:45"><name pos:start="49:29" pos:end="49:29">h</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:45">backup_pix_fmt</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:44"><expr pos:start="51:9" pos:end="51:43"><name pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:9">h</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:25">backup_pix_fmt</name></name> <operator pos:start="51:27" pos:end="51:27">=</operator> <name pos:start="51:29" pos:end="51:43">AV_PIX_FMT_NONE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:50"><expr pos:start="57:5" pos:end="57:49"><call pos:start="57:5" pos:end="57:49"><name pos:start="57:5" pos:end="57:25">ff_h264_unref_picture</name><argument_list pos:start="57:26" pos:end="57:49">(<argument pos:start="57:27" pos:end="57:27"><expr pos:start="57:27" pos:end="57:27"><name pos:start="57:27" pos:end="57:27">h</name></expr></argument>, <argument pos:start="57:30" pos:end="57:48"><expr pos:start="57:30" pos:end="57:48"><operator pos:start="57:30" pos:end="57:30">&amp;</operator><name pos:start="57:31" pos:end="57:48"><name pos:start="57:31" pos:end="57:31">h</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:48">last_pic_for_ec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:60">/* end of stream, output what is still in the buffers */</comment>

    <if_stmt pos:start="63:5" pos:end="125:5"><if pos:start="63:5" pos:end="125:5">if <condition pos:start="63:8" pos:end="63:22">(<expr pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:16">buf_size</name> <operator pos:start="63:18" pos:end="63:19">==</operator> <literal type="number" pos:start="63:21" pos:end="63:21">0</literal></expr>)</condition> <block pos:start="63:24" pos:end="125:5">{<block_content pos:start="65:2" pos:end="123:25">

 <label pos:start="65:2" pos:end="65:5"><name pos:start="65:2" pos:end="65:4">out</name>:</label>



        <expr_stmt pos:start="69:9" pos:end="69:30"><expr pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:9">h</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:22">cur_pic_ptr</name></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <name pos:start="69:26" pos:end="69:29">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:27"><expr pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:9">h</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:22">first_field</name></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <literal type="number" pos:start="71:26" pos:end="71:26">0</literal></expr>;</expr_stmt>



        <comment type="line" pos:start="75:9" pos:end="75:58">// FIXME factorize this with the output code below</comment>

        <expr_stmt pos:start="77:9" pos:end="77:36"><expr pos:start="77:9" pos:end="77:35"><name pos:start="77:9" pos:end="77:11">out</name>     <operator pos:start="77:17" pos:end="77:17">=</operator> <name pos:start="77:19" pos:end="77:35"><name pos:start="77:19" pos:end="77:19">h</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:32">delayed_pic</name><index pos:start="77:33" pos:end="77:35">[<expr pos:start="77:34" pos:end="77:34"><literal type="number" pos:start="77:34" pos:end="77:34">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:20"><expr pos:start="79:9" pos:end="79:19"><name pos:start="79:9" pos:end="79:15">out_idx</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <literal type="number" pos:start="79:19" pos:end="79:19">0</literal></expr>;</expr_stmt>

        <for pos:start="81:9" pos:end="97:13">for <control pos:start="81:13" pos:end="89:17">(<init pos:start="81:14" pos:end="81:19"><expr pos:start="81:14" pos:end="81:18"><name pos:start="81:14" pos:end="81:14">i</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="number" pos:start="81:18" pos:end="81:18">1</literal></expr>;</init>

             <condition pos:start="83:14" pos:end="87:44"><expr pos:start="83:14" pos:end="87:43"><name pos:start="83:14" pos:end="83:30"><name pos:start="83:14" pos:end="83:14">h</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:27">delayed_pic</name><index pos:start="83:28" pos:end="83:30">[<expr pos:start="83:29" pos:end="83:29"><name pos:start="83:29" pos:end="83:29">i</name></expr>]</index></name> <operator pos:start="83:32" pos:end="83:33">&amp;&amp;</operator>

             <operator pos:start="85:14" pos:end="85:14">!</operator><name pos:start="85:15" pos:end="85:31"><name pos:start="85:15" pos:end="85:15">h</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:28">delayed_pic</name><index pos:start="85:29" pos:end="85:31">[<expr pos:start="85:30" pos:end="85:30"><name pos:start="85:30" pos:end="85:30">i</name></expr>]</index></name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:45"><name pos:start="85:34" pos:end="85:34">f</name><operator pos:start="85:35" pos:end="85:36">-&gt;</operator><name pos:start="85:37" pos:end="85:45">key_frame</name></name> <operator pos:start="85:47" pos:end="85:48">&amp;&amp;</operator>

             <operator pos:start="87:14" pos:end="87:14">!</operator><name pos:start="87:15" pos:end="87:31"><name pos:start="87:15" pos:end="87:15">h</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:28">delayed_pic</name><index pos:start="87:29" pos:end="87:31">[<expr pos:start="87:30" pos:end="87:30"><name pos:start="87:30" pos:end="87:30">i</name></expr>]</index></name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:43">mmco_reset</name></expr>;</condition>

             <incr pos:start="89:14" pos:end="89:16"><expr pos:start="89:14" pos:end="89:16"><name pos:start="89:14" pos:end="89:14">i</name><operator pos:start="89:15" pos:end="89:16">++</operator></expr></incr>)</control><block type="pseudo" pos:start="91:13" pos:end="97:13"><block_content pos:start="91:13" pos:end="97:13">

            <if_stmt pos:start="91:13" pos:end="97:13"><if pos:start="91:13" pos:end="97:13">if <condition pos:start="91:16" pos:end="91:50">(<expr pos:start="91:17" pos:end="91:49"><name pos:start="91:17" pos:end="91:33"><name pos:start="91:17" pos:end="91:17">h</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:30">delayed_pic</name><index pos:start="91:31" pos:end="91:33">[<expr pos:start="91:32" pos:end="91:32"><name pos:start="91:32" pos:end="91:32">i</name></expr>]</index></name><operator pos:start="91:34" pos:end="91:35">-&gt;</operator><name pos:start="91:36" pos:end="91:38">poc</name> <operator pos:start="91:40" pos:end="91:40">&lt;</operator> <name pos:start="91:42" pos:end="91:49"><name pos:start="91:42" pos:end="91:44">out</name><operator pos:start="91:45" pos:end="91:46">-&gt;</operator><name pos:start="91:47" pos:end="91:49">poc</name></name></expr>)</condition> <block pos:start="91:52" pos:end="97:13">{<block_content pos:start="93:17" pos:end="95:28">

                <expr_stmt pos:start="93:17" pos:end="93:44"><expr pos:start="93:17" pos:end="93:43"><name pos:start="93:17" pos:end="93:19">out</name>     <operator pos:start="93:25" pos:end="93:25">=</operator> <name pos:start="93:27" pos:end="93:43"><name pos:start="93:27" pos:end="93:27">h</name><operator pos:start="93:28" pos:end="93:29">-&gt;</operator><name pos:start="93:30" pos:end="93:40">delayed_pic</name><index pos:start="93:41" pos:end="93:43">[<expr pos:start="93:42" pos:end="93:42"><name pos:start="93:42" pos:end="93:42">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:28"><expr pos:start="95:17" pos:end="95:27"><name pos:start="95:17" pos:end="95:23">out_idx</name> <operator pos:start="95:25" pos:end="95:25">=</operator> <name pos:start="95:27" pos:end="95:27">i</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt></block_content></block></for>



        <for pos:start="101:9" pos:end="103:54">for <control pos:start="101:13" pos:end="101:49">(<init pos:start="101:14" pos:end="101:25"><expr pos:start="101:14" pos:end="101:24"><name pos:start="101:14" pos:end="101:14">i</name> <operator pos:start="101:16" pos:end="101:16">=</operator> <name pos:start="101:18" pos:end="101:24">out_idx</name></expr>;</init> <condition pos:start="101:27" pos:end="101:44"><expr pos:start="101:27" pos:end="101:43"><name pos:start="101:27" pos:end="101:43"><name pos:start="101:27" pos:end="101:27">h</name><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:40">delayed_pic</name><index pos:start="101:41" pos:end="101:43">[<expr pos:start="101:42" pos:end="101:42"><name pos:start="101:42" pos:end="101:42">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="101:46" pos:end="101:48"><expr pos:start="101:46" pos:end="101:48"><name pos:start="101:46" pos:end="101:46">i</name><operator pos:start="101:47" pos:end="101:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="103:13" pos:end="103:54"><block_content pos:start="103:13" pos:end="103:54">

            <expr_stmt pos:start="103:13" pos:end="103:54"><expr pos:start="103:13" pos:end="103:53"><name pos:start="103:13" pos:end="103:29"><name pos:start="103:13" pos:end="103:13">h</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:26">delayed_pic</name><index pos:start="103:27" pos:end="103:29">[<expr pos:start="103:28" pos:end="103:28"><name pos:start="103:28" pos:end="103:28">i</name></expr>]</index></name> <operator pos:start="103:31" pos:end="103:31">=</operator> <name pos:start="103:33" pos:end="103:53"><name pos:start="103:33" pos:end="103:33">h</name><operator pos:start="103:34" pos:end="103:35">-&gt;</operator><name pos:start="103:36" pos:end="103:46">delayed_pic</name><index pos:start="103:47" pos:end="103:53">[<expr pos:start="103:48" pos:end="103:52"><name pos:start="103:48" pos:end="103:48">i</name> <operator pos:start="103:50" pos:end="103:50">+</operator> <literal type="number" pos:start="103:52" pos:end="103:52">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="107:9" pos:end="119:9"><if pos:start="107:9" pos:end="119:9">if <condition pos:start="107:12" pos:end="107:16">(<expr pos:start="107:13" pos:end="107:15"><name pos:start="107:13" pos:end="107:15">out</name></expr>)</condition> <block pos:start="107:18" pos:end="119:9">{<block_content pos:start="109:13" pos:end="117:27">

            <expr_stmt pos:start="109:13" pos:end="109:47"><expr pos:start="109:13" pos:end="109:46"><name pos:start="109:13" pos:end="109:26"><name pos:start="109:13" pos:end="109:15">out</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:26">reference</name></name> <operator pos:start="109:28" pos:end="109:29">&amp;=</operator> <operator pos:start="109:31" pos:end="109:31">~</operator><name pos:start="109:32" pos:end="109:46">DELAYED_PIC_REF</name></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:45"><expr pos:start="111:13" pos:end="111:44"><name pos:start="111:13" pos:end="111:15">ret</name> <operator pos:start="111:17" pos:end="111:17">=</operator> <call pos:start="111:19" pos:end="111:44"><name pos:start="111:19" pos:end="111:30">output_frame</name><argument_list pos:start="111:31" pos:end="111:44">(<argument pos:start="111:32" pos:end="111:32"><expr pos:start="111:32" pos:end="111:32"><name pos:start="111:32" pos:end="111:32">h</name></expr></argument>, <argument pos:start="111:35" pos:end="111:38"><expr pos:start="111:35" pos:end="111:38"><name pos:start="111:35" pos:end="111:38">pict</name></expr></argument>, <argument pos:start="111:41" pos:end="111:43"><expr pos:start="111:41" pos:end="111:43"><name pos:start="111:41" pos:end="111:43">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="113:13" pos:end="115:27"><if pos:start="113:13" pos:end="115:27">if <condition pos:start="113:16" pos:end="113:24">(<expr pos:start="113:17" pos:end="113:23"><name pos:start="113:17" pos:end="113:19">ret</name> <operator pos:start="113:21" pos:end="113:21">&lt;</operator> <literal type="number" pos:start="113:23" pos:end="113:23">0</literal></expr>)</condition><block type="pseudo" pos:start="115:17" pos:end="115:27"><block_content pos:start="115:17" pos:end="115:27">

                <return pos:start="115:17" pos:end="115:27">return <expr pos:start="115:24" pos:end="115:26"><name pos:start="115:24" pos:end="115:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:27"><expr pos:start="117:13" pos:end="117:26"><operator pos:start="117:13" pos:end="117:13">*</operator><name pos:start="117:14" pos:end="117:22">got_frame</name> <operator pos:start="117:24" pos:end="117:24">=</operator> <literal type="number" pos:start="117:26" pos:end="117:26">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <return pos:start="123:9" pos:end="123:25">return <expr pos:start="123:16" pos:end="123:24"><name pos:start="123:16" pos:end="123:24">buf_index</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="127:5" pos:end="137:5"><if pos:start="127:5" pos:end="137:5">if <condition pos:start="127:8" pos:end="127:85">(<expr pos:start="127:9" pos:end="127:84"><name pos:start="127:9" pos:end="127:17"><name pos:start="127:9" pos:end="127:9">h</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:17">is_avc</name></name> <operator pos:start="127:19" pos:end="127:20">&amp;&amp;</operator> <call pos:start="127:22" pos:end="127:84"><name pos:start="127:22" pos:end="127:44">av_packet_get_side_data</name><argument_list pos:start="127:45" pos:end="127:84">(<argument pos:start="127:46" pos:end="127:50"><expr pos:start="127:46" pos:end="127:50"><name pos:start="127:46" pos:end="127:50">avpkt</name></expr></argument>, <argument pos:start="127:53" pos:end="127:77"><expr pos:start="127:53" pos:end="127:77"><name pos:start="127:53" pos:end="127:77">AV_PKT_DATA_NEW_EXTRADATA</name></expr></argument>, <argument pos:start="127:80" pos:end="127:83"><expr pos:start="127:80" pos:end="127:83"><name pos:start="127:80" pos:end="127:83">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="127:87" pos:end="137:5">{<block_content pos:start="129:9" pos:end="135:57">

        <decl_stmt pos:start="129:9" pos:end="129:22"><decl pos:start="129:9" pos:end="129:21"><type pos:start="129:9" pos:end="129:11"><name pos:start="129:9" pos:end="129:11">int</name></type> <name pos:start="129:13" pos:end="129:21">side_size</name></decl>;</decl_stmt>

        <decl_stmt pos:start="131:9" pos:end="131:94"><decl pos:start="131:9" pos:end="131:93"><type pos:start="131:9" pos:end="131:17"><name pos:start="131:9" pos:end="131:15">uint8_t</name> <modifier pos:start="131:17" pos:end="131:17">*</modifier></type><name pos:start="131:18" pos:end="131:21">side</name> <init pos:start="131:23" pos:end="131:93">= <expr pos:start="131:25" pos:end="131:93"><call pos:start="131:25" pos:end="131:93"><name pos:start="131:25" pos:end="131:47">av_packet_get_side_data</name><argument_list pos:start="131:48" pos:end="131:93">(<argument pos:start="131:49" pos:end="131:53"><expr pos:start="131:49" pos:end="131:53"><name pos:start="131:49" pos:end="131:53">avpkt</name></expr></argument>, <argument pos:start="131:56" pos:end="131:80"><expr pos:start="131:56" pos:end="131:80"><name pos:start="131:56" pos:end="131:80">AV_PKT_DATA_NEW_EXTRADATA</name></expr></argument>, <argument pos:start="131:83" pos:end="131:92"><expr pos:start="131:83" pos:end="131:92"><operator pos:start="131:83" pos:end="131:83">&amp;</operator><name pos:start="131:84" pos:end="131:92">side_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="133:9" pos:end="135:57"><if pos:start="133:9" pos:end="135:57">if <condition pos:start="133:12" pos:end="133:38">(<expr pos:start="133:13" pos:end="133:37"><call pos:start="133:13" pos:end="133:37"><name pos:start="133:13" pos:end="133:20">is_extra</name><argument_list pos:start="133:21" pos:end="133:37">(<argument pos:start="133:22" pos:end="133:25"><expr pos:start="133:22" pos:end="133:25"><name pos:start="133:22" pos:end="133:25">side</name></expr></argument>, <argument pos:start="133:28" pos:end="133:36"><expr pos:start="133:28" pos:end="133:36"><name pos:start="133:28" pos:end="133:36">side_size</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="135:13" pos:end="135:57"><block_content pos:start="135:13" pos:end="135:57">

            <expr_stmt pos:start="135:13" pos:end="135:57"><expr pos:start="135:13" pos:end="135:56"><call pos:start="135:13" pos:end="135:56"><name pos:start="135:13" pos:end="135:36">ff_h264_decode_extradata</name><argument_list pos:start="135:37" pos:end="135:56">(<argument pos:start="135:38" pos:end="135:38"><expr pos:start="135:38" pos:end="135:38"><name pos:start="135:38" pos:end="135:38">h</name></expr></argument>, <argument pos:start="135:41" pos:end="135:44"><expr pos:start="135:41" pos:end="135:44"><name pos:start="135:41" pos:end="135:44">side</name></expr></argument>, <argument pos:start="135:47" pos:end="135:55"><expr pos:start="135:47" pos:end="135:55"><name pos:start="135:47" pos:end="135:55">side_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="139:5" pos:end="145:5"><if pos:start="139:5" pos:end="145:5">if<condition pos:start="139:7" pos:end="139:116">(<expr pos:start="139:8" pos:end="139:115"><name pos:start="139:8" pos:end="139:16"><name pos:start="139:8" pos:end="139:8">h</name><operator pos:start="139:9" pos:end="139:10">-&gt;</operator><name pos:start="139:11" pos:end="139:16">is_avc</name></name> <operator pos:start="139:18" pos:end="139:19">&amp;&amp;</operator> <name pos:start="139:21" pos:end="139:28">buf_size</name> <operator pos:start="139:30" pos:end="139:31">&gt;=</operator> <literal type="number" pos:start="139:33" pos:end="139:33">9</literal> <operator pos:start="139:35" pos:end="139:36">&amp;&amp;</operator> <name pos:start="139:38" pos:end="139:43"><name pos:start="139:38" pos:end="139:40">buf</name><index pos:start="139:41" pos:end="139:43">[<expr pos:start="139:42" pos:end="139:42"><literal type="number" pos:start="139:42" pos:end="139:42">0</literal></expr>]</index></name><operator pos:start="139:44" pos:end="139:45">==</operator><literal type="number" pos:start="139:46" pos:end="139:46">1</literal> <operator pos:start="139:48" pos:end="139:49">&amp;&amp;</operator> <name pos:start="139:51" pos:end="139:56"><name pos:start="139:51" pos:end="139:53">buf</name><index pos:start="139:54" pos:end="139:56">[<expr pos:start="139:55" pos:end="139:55"><literal type="number" pos:start="139:55" pos:end="139:55">2</literal></expr>]</index></name><operator pos:start="139:57" pos:end="139:58">==</operator><literal type="number" pos:start="139:59" pos:end="139:59">0</literal> <operator pos:start="139:61" pos:end="139:62">&amp;&amp;</operator> <operator pos:start="139:64" pos:end="139:64">(</operator><name pos:start="139:65" pos:end="139:70"><name pos:start="139:65" pos:end="139:67">buf</name><index pos:start="139:68" pos:end="139:70">[<expr pos:start="139:69" pos:end="139:69"><literal type="number" pos:start="139:69" pos:end="139:69">4</literal></expr>]</index></name><operator pos:start="139:71" pos:end="139:71">&amp;</operator><literal type="number" pos:start="139:72" pos:end="139:75">0xFC</literal><operator pos:start="139:76" pos:end="139:76">)</operator><operator pos:start="139:77" pos:end="139:78">==</operator><literal type="number" pos:start="139:79" pos:end="139:82">0xFC</literal> <operator pos:start="139:84" pos:end="139:85">&amp;&amp;</operator> <operator pos:start="139:87" pos:end="139:87">(</operator><name pos:start="139:88" pos:end="139:93"><name pos:start="139:88" pos:end="139:90">buf</name><index pos:start="139:91" pos:end="139:93">[<expr pos:start="139:92" pos:end="139:92"><literal type="number" pos:start="139:92" pos:end="139:92">5</literal></expr>]</index></name><operator pos:start="139:94" pos:end="139:94">&amp;</operator><literal type="number" pos:start="139:95" pos:end="139:98">0x1F</literal><operator pos:start="139:99" pos:end="139:99">)</operator> <operator pos:start="139:101" pos:end="139:102">&amp;&amp;</operator> <name pos:start="139:104" pos:end="139:109"><name pos:start="139:104" pos:end="139:106">buf</name><index pos:start="139:107" pos:end="139:109">[<expr pos:start="139:108" pos:end="139:108"><literal type="number" pos:start="139:108" pos:end="139:108">8</literal></expr>]</index></name><operator pos:start="139:110" pos:end="139:111">==</operator><literal type="number" pos:start="139:112" pos:end="139:115">0x67</literal></expr>)</condition><block pos:start="139:117" pos:end="145:5">{<block_content pos:start="141:9" pos:end="143:62">

        <if_stmt pos:start="141:9" pos:end="143:62"><if pos:start="141:9" pos:end="143:62">if <condition pos:start="141:12" pos:end="141:36">(<expr pos:start="141:13" pos:end="141:35"><call pos:start="141:13" pos:end="141:35"><name pos:start="141:13" pos:end="141:20">is_extra</name><argument_list pos:start="141:21" pos:end="141:35">(<argument pos:start="141:22" pos:end="141:24"><expr pos:start="141:22" pos:end="141:24"><name pos:start="141:22" pos:end="141:24">buf</name></expr></argument>, <argument pos:start="141:27" pos:end="141:34"><expr pos:start="141:27" pos:end="141:34"><name pos:start="141:27" pos:end="141:34">buf_size</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="143:13" pos:end="143:62"><block_content pos:start="143:13" pos:end="143:62">

            <return pos:start="143:13" pos:end="143:62">return <expr pos:start="143:20" pos:end="143:61"><call pos:start="143:20" pos:end="143:61"><name pos:start="143:20" pos:end="143:43">ff_h264_decode_extradata</name><argument_list pos:start="143:44" pos:end="143:61">(<argument pos:start="143:45" pos:end="143:45"><expr pos:start="143:45" pos:end="143:45"><name pos:start="143:45" pos:end="143:45">h</name></expr></argument>, <argument pos:start="143:48" pos:end="143:50"><expr pos:start="143:48" pos:end="143:50"><name pos:start="143:48" pos:end="143:50">buf</name></expr></argument>, <argument pos:start="143:53" pos:end="143:60"><expr pos:start="143:53" pos:end="143:60"><name pos:start="143:53" pos:end="143:60">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:54"><expr pos:start="149:5" pos:end="149:53"><name pos:start="149:5" pos:end="149:13">buf_index</name> <operator pos:start="149:15" pos:end="149:15">=</operator> <call pos:start="149:17" pos:end="149:53"><name pos:start="149:17" pos:end="149:32">decode_nal_units</name><argument_list pos:start="149:33" pos:end="149:53">(<argument pos:start="149:34" pos:end="149:34"><expr pos:start="149:34" pos:end="149:34"><name pos:start="149:34" pos:end="149:34">h</name></expr></argument>, <argument pos:start="149:37" pos:end="149:39"><expr pos:start="149:37" pos:end="149:39"><name pos:start="149:37" pos:end="149:39">buf</name></expr></argument>, <argument pos:start="149:42" pos:end="149:49"><expr pos:start="149:42" pos:end="149:49"><name pos:start="149:42" pos:end="149:49">buf_size</name></expr></argument>, <argument pos:start="149:52" pos:end="149:52"><expr pos:start="149:52" pos:end="149:52"><literal type="number" pos:start="149:52" pos:end="149:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="151:5" pos:end="153:35"><if pos:start="151:5" pos:end="153:35">if <condition pos:start="151:8" pos:end="151:22">(<expr pos:start="151:9" pos:end="151:21"><name pos:start="151:9" pos:end="151:17">buf_index</name> <operator pos:start="151:19" pos:end="151:19">&lt;</operator> <literal type="number" pos:start="151:21" pos:end="151:21">0</literal></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="153:35"><block_content pos:start="153:9" pos:end="153:35">

        <return pos:start="153:9" pos:end="153:35">return <expr pos:start="153:16" pos:end="153:34"><name pos:start="153:16" pos:end="153:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="157:5" pos:end="163:5"><if pos:start="157:5" pos:end="163:5">if <condition pos:start="157:8" pos:end="157:64">(<expr pos:start="157:9" pos:end="157:63"><operator pos:start="157:9" pos:end="157:9">!</operator><name pos:start="157:10" pos:end="157:23"><name pos:start="157:10" pos:end="157:10">h</name><operator pos:start="157:11" pos:end="157:12">-&gt;</operator><name pos:start="157:13" pos:end="157:23">cur_pic_ptr</name></name> <operator pos:start="157:25" pos:end="157:26">&amp;&amp;</operator> <name pos:start="157:28" pos:end="157:43"><name pos:start="157:28" pos:end="157:28">h</name><operator pos:start="157:29" pos:end="157:30">-&gt;</operator><name pos:start="157:31" pos:end="157:43">nal_unit_type</name></name> <operator pos:start="157:45" pos:end="157:46">==</operator> <name pos:start="157:48" pos:end="157:63">NAL_END_SEQUENCE</name></expr>)</condition> <block pos:start="157:66" pos:end="163:5">{<block_content pos:start="159:9" pos:end="161:17">

        <expr_stmt pos:start="159:9" pos:end="159:42"><expr pos:start="159:9" pos:end="159:41"><call pos:start="159:9" pos:end="159:41"><name pos:start="159:9" pos:end="159:18">av_assert0</name><argument_list pos:start="159:19" pos:end="159:41">(<argument pos:start="159:20" pos:end="159:40"><expr pos:start="159:20" pos:end="159:40"><name pos:start="159:20" pos:end="159:28">buf_index</name> <operator pos:start="159:30" pos:end="159:31">&lt;=</operator> <name pos:start="159:33" pos:end="159:40">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="161:9" pos:end="161:17">goto <name pos:start="161:14" pos:end="161:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="167:5" pos:end="179:5"><if pos:start="167:5" pos:end="179:5">if <condition pos:start="167:8" pos:end="167:68">(<expr pos:start="167:9" pos:end="167:67"><operator pos:start="167:9" pos:end="167:9">!</operator><operator pos:start="167:10" pos:end="167:10">(</operator><name pos:start="167:11" pos:end="167:23"><name pos:start="167:11" pos:end="167:15">avctx</name><operator pos:start="167:16" pos:end="167:17">-&gt;</operator><name pos:start="167:18" pos:end="167:23">flags2</name></name> <operator pos:start="167:25" pos:end="167:25">&amp;</operator> <name pos:start="167:27" pos:end="167:47">AV_CODEC_FLAG2_CHUNKS</name><operator pos:start="167:48" pos:end="167:48">)</operator> <operator pos:start="167:50" pos:end="167:51">&amp;&amp;</operator> <operator pos:start="167:53" pos:end="167:53">!</operator><name pos:start="167:54" pos:end="167:67"><name pos:start="167:54" pos:end="167:54">h</name><operator pos:start="167:55" pos:end="167:56">-&gt;</operator><name pos:start="167:57" pos:end="167:67">cur_pic_ptr</name></name></expr>)</condition> <block pos:start="167:70" pos:end="179:5">{<block_content pos:start="169:9" pos:end="177:35">

        <if_stmt pos:start="169:9" pos:end="173:28"><if pos:start="169:9" pos:end="173:28">if <condition pos:start="169:12" pos:end="171:53">(<expr pos:start="169:13" pos:end="171:52"><name pos:start="169:13" pos:end="169:29"><name pos:start="169:13" pos:end="169:17">avctx</name><operator pos:start="169:18" pos:end="169:19">-&gt;</operator><name pos:start="169:20" pos:end="169:29">skip_frame</name></name> <operator pos:start="169:31" pos:end="169:32">&gt;=</operator> <name pos:start="169:34" pos:end="169:49">AVDISCARD_NONREF</name> <operator pos:start="169:51" pos:end="169:52">||</operator>

            <name pos:start="171:13" pos:end="171:20">buf_size</name> <operator pos:start="171:22" pos:end="171:23">&gt;=</operator> <literal type="number" pos:start="171:25" pos:end="171:25">4</literal> <operator pos:start="171:27" pos:end="171:28">&amp;&amp;</operator> <operator pos:start="171:30" pos:end="171:30">!</operator><call pos:start="171:31" pos:end="171:52"><name pos:start="171:31" pos:end="171:36">memcmp</name><argument_list pos:start="171:37" pos:end="171:52">(<argument pos:start="171:38" pos:end="171:43"><expr pos:start="171:38" pos:end="171:43"><literal type="string" pos:start="171:38" pos:end="171:43">"Q264"</literal></expr></argument>, <argument pos:start="171:46" pos:end="171:48"><expr pos:start="171:46" pos:end="171:48"><name pos:start="171:46" pos:end="171:48">buf</name></expr></argument>, <argument pos:start="171:51" pos:end="171:51"><expr pos:start="171:51" pos:end="171:51"><literal type="number" pos:start="171:51" pos:end="171:51">4</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:28"><block_content pos:start="173:13" pos:end="173:28">

            <return pos:start="173:13" pos:end="173:28">return <expr pos:start="173:20" pos:end="173:27"><name pos:start="173:20" pos:end="173:27">buf_size</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:51"><expr pos:start="175:9" pos:end="175:50"><call pos:start="175:9" pos:end="175:50"><name pos:start="175:9" pos:end="175:14">av_log</name><argument_list pos:start="175:15" pos:end="175:50">(<argument pos:start="175:16" pos:end="175:20"><expr pos:start="175:16" pos:end="175:20"><name pos:start="175:16" pos:end="175:20">avctx</name></expr></argument>, <argument pos:start="175:23" pos:end="175:34"><expr pos:start="175:23" pos:end="175:34"><name pos:start="175:23" pos:end="175:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="175:37" pos:end="175:49"><expr pos:start="175:37" pos:end="175:49"><literal type="string" pos:start="175:37" pos:end="175:49">"no frame!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="177:9" pos:end="177:35">return <expr pos:start="177:16" pos:end="177:34"><name pos:start="177:16" pos:end="177:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="183:5" pos:end="285:5"><if pos:start="183:5" pos:end="285:5">if <condition pos:start="183:8" pos:end="185:50">(<expr pos:start="183:9" pos:end="185:49"><operator pos:start="183:9" pos:end="183:9">!</operator><operator pos:start="183:10" pos:end="183:10">(</operator><name pos:start="183:11" pos:end="183:23"><name pos:start="183:11" pos:end="183:15">avctx</name><operator pos:start="183:16" pos:end="183:17">-&gt;</operator><name pos:start="183:18" pos:end="183:23">flags2</name></name> <operator pos:start="183:25" pos:end="183:25">&amp;</operator> <name pos:start="183:27" pos:end="183:47">AV_CODEC_FLAG2_CHUNKS</name><operator pos:start="183:48" pos:end="183:48">)</operator> <operator pos:start="183:50" pos:end="183:51">||</operator>

        <operator pos:start="185:9" pos:end="185:9">(</operator><name pos:start="185:10" pos:end="185:16"><name pos:start="185:10" pos:end="185:10">h</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:16">mb_y</name></name> <operator pos:start="185:18" pos:end="185:19">&gt;=</operator> <name pos:start="185:21" pos:end="185:32"><name pos:start="185:21" pos:end="185:21">h</name><operator pos:start="185:22" pos:end="185:23">-&gt;</operator><name pos:start="185:24" pos:end="185:32">mb_height</name></name> <operator pos:start="185:34" pos:end="185:35">&amp;&amp;</operator> <name pos:start="185:37" pos:end="185:48"><name pos:start="185:37" pos:end="185:37">h</name><operator pos:start="185:38" pos:end="185:39">-&gt;</operator><name pos:start="185:40" pos:end="185:48">mb_height</name></name><operator pos:start="185:49" pos:end="185:49">)</operator></expr>)</condition> <block pos:start="185:52" pos:end="285:5">{<block_content pos:start="187:9" pos:end="283:9">

        <if_stmt pos:start="187:9" pos:end="189:34"><if pos:start="187:9" pos:end="189:34">if <condition pos:start="187:12" pos:end="187:50">(<expr pos:start="187:13" pos:end="187:49"><name pos:start="187:13" pos:end="187:25"><name pos:start="187:13" pos:end="187:17">avctx</name><operator pos:start="187:18" pos:end="187:19">-&gt;</operator><name pos:start="187:20" pos:end="187:25">flags2</name></name> <operator pos:start="187:27" pos:end="187:27">&amp;</operator> <name pos:start="187:29" pos:end="187:49">AV_CODEC_FLAG2_CHUNKS</name></expr>)</condition><block type="pseudo" pos:start="189:13" pos:end="189:34"><block_content pos:start="189:13" pos:end="189:34">

            <expr_stmt pos:start="189:13" pos:end="189:34"><expr pos:start="189:13" pos:end="189:33"><call pos:start="189:13" pos:end="189:33"><name pos:start="189:13" pos:end="189:27">decode_postinit</name><argument_list pos:start="189:28" pos:end="189:33">(<argument pos:start="189:29" pos:end="189:29"><expr pos:start="189:29" pos:end="189:29"><name pos:start="189:29" pos:end="189:29">h</name></expr></argument>, <argument pos:start="189:32" pos:end="189:32"><expr pos:start="189:32" pos:end="189:32"><literal type="number" pos:start="189:32" pos:end="189:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="193:9" pos:end="195:23"><if pos:start="193:9" pos:end="195:23">if <condition pos:start="193:12" pos:end="193:66">(<expr pos:start="193:13" pos:end="193:65"><operator pos:start="193:13" pos:end="193:13">(</operator><name pos:start="193:14" pos:end="193:16">ret</name> <operator pos:start="193:18" pos:end="193:18">=</operator> <call pos:start="193:20" pos:end="193:60"><name pos:start="193:20" pos:end="193:36">ff_h264_field_end</name><argument_list pos:start="193:37" pos:end="193:60">(<argument pos:start="193:38" pos:end="193:38"><expr pos:start="193:38" pos:end="193:38"><name pos:start="193:38" pos:end="193:38">h</name></expr></argument>, <argument pos:start="193:41" pos:end="193:56"><expr pos:start="193:41" pos:end="193:56"><operator pos:start="193:41" pos:end="193:41">&amp;</operator><name pos:start="193:42" pos:end="193:56"><name pos:start="193:42" pos:end="193:42">h</name><operator pos:start="193:43" pos:end="193:44">-&gt;</operator><name pos:start="193:45" pos:end="193:53">slice_ctx</name><index pos:start="193:54" pos:end="193:56">[<expr pos:start="193:55" pos:end="193:55"><literal type="number" pos:start="193:55" pos:end="193:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="193:59" pos:end="193:59"><expr pos:start="193:59" pos:end="193:59"><literal type="number" pos:start="193:59" pos:end="193:59">0</literal></expr></argument>)</argument_list></call><operator pos:start="193:61" pos:end="193:61">)</operator> <operator pos:start="193:63" pos:end="193:63">&lt;</operator> <literal type="number" pos:start="193:65" pos:end="193:65">0</literal></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:23"><block_content pos:start="195:13" pos:end="195:23">

            <return pos:start="195:13" pos:end="195:23">return <expr pos:start="195:20" pos:end="195:22"><name pos:start="195:20" pos:end="195:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="199:9" pos:end="199:36">/* Wait for second field. */</comment>

        <expr_stmt pos:start="201:9" pos:end="201:23"><expr pos:start="201:9" pos:end="201:22"><operator pos:start="201:9" pos:end="201:9">*</operator><name pos:start="201:10" pos:end="201:18">got_frame</name> <operator pos:start="201:20" pos:end="201:20">=</operator> <literal type="number" pos:start="201:22" pos:end="201:22">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="203:9" pos:end="283:9"><if pos:start="203:9" pos:end="283:9">if <condition pos:start="203:12" pos:end="205:66">(<expr pos:start="203:13" pos:end="205:65"><name pos:start="203:13" pos:end="203:30"><name pos:start="203:13" pos:end="203:13">h</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:30">next_output_pic</name></name> <operator pos:start="203:32" pos:end="203:33">&amp;&amp;</operator> <operator pos:start="203:35" pos:end="203:35">(</operator>

                                   <name pos:start="205:36" pos:end="205:64"><name pos:start="205:36" pos:end="205:36">h</name><operator pos:start="205:37" pos:end="205:38">-&gt;</operator><name pos:start="205:39" pos:end="205:53">next_output_pic</name><operator pos:start="205:54" pos:end="205:55">-&gt;</operator><name pos:start="205:56" pos:end="205:64">recovered</name></name><operator pos:start="205:65" pos:end="205:65">)</operator></expr>)</condition> <block pos:start="205:68" pos:end="283:9">{<block_content pos:start="207:13" pos:end="281:13">

            <if_stmt pos:start="207:13" pos:end="209:70"><if pos:start="207:13" pos:end="209:70">if <condition pos:start="207:16" pos:end="207:47">(<expr pos:start="207:17" pos:end="207:46"><operator pos:start="207:17" pos:end="207:17">!</operator><name pos:start="207:18" pos:end="207:46"><name pos:start="207:18" pos:end="207:18">h</name><operator pos:start="207:19" pos:end="207:20">-&gt;</operator><name pos:start="207:21" pos:end="207:35">next_output_pic</name><operator pos:start="207:36" pos:end="207:37">-&gt;</operator><name pos:start="207:38" pos:end="207:46">recovered</name></name></expr>)</condition><block type="pseudo" pos:start="209:17" pos:end="209:70"><block_content pos:start="209:17" pos:end="209:70">

                <expr_stmt pos:start="209:17" pos:end="209:70"><expr pos:start="209:17" pos:end="209:69"><name pos:start="209:17" pos:end="209:44"><name pos:start="209:17" pos:end="209:17">h</name><operator pos:start="209:18" pos:end="209:19">-&gt;</operator><name pos:start="209:20" pos:end="209:34">next_output_pic</name><operator pos:start="209:35" pos:end="209:36">-&gt;</operator><name pos:start="209:37" pos:end="209:37">f</name><operator pos:start="209:38" pos:end="209:39">-&gt;</operator><name pos:start="209:40" pos:end="209:44">flags</name></name> <operator pos:start="209:46" pos:end="209:47">|=</operator> <name pos:start="209:49" pos:end="209:69">AV_FRAME_FLAG_CORRUPT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="213:13" pos:end="255:13"><if pos:start="213:13" pos:end="255:13">if <condition pos:start="213:16" pos:end="219:13">(<expr pos:start="213:17" pos:end="217:62"><operator pos:start="213:17" pos:end="213:17">!</operator><name pos:start="213:18" pos:end="213:34"><name pos:start="213:18" pos:end="213:18">h</name><operator pos:start="213:19" pos:end="213:20">-&gt;</operator><name pos:start="213:21" pos:end="213:25">avctx</name><operator pos:start="213:26" pos:end="213:27">-&gt;</operator><name pos:start="213:28" pos:end="213:34">hwaccel</name></name> <operator pos:start="213:36" pos:end="213:37">&amp;&amp;</operator>

                 <operator pos:start="215:18" pos:end="215:18">(</operator><name pos:start="215:19" pos:end="215:50"><name pos:start="215:19" pos:end="215:19">h</name><operator pos:start="215:20" pos:end="215:21">-&gt;</operator><name pos:start="215:22" pos:end="215:36">next_output_pic</name><operator pos:start="215:37" pos:end="215:38">-&gt;</operator><name pos:start="215:39" pos:end="215:47">field_poc</name><index pos:start="215:48" pos:end="215:50">[<expr pos:start="215:49" pos:end="215:49"><literal type="number" pos:start="215:49" pos:end="215:49">0</literal></expr>]</index></name> <operator pos:start="215:52" pos:end="215:53">==</operator> <name pos:start="215:55" pos:end="215:61">INT_MAX</name> <operator pos:start="215:63" pos:end="215:64">||</operator>

                  <name pos:start="217:19" pos:end="217:50"><name pos:start="217:19" pos:end="217:19">h</name><operator pos:start="217:20" pos:end="217:21">-&gt;</operator><name pos:start="217:22" pos:end="217:36">next_output_pic</name><operator pos:start="217:37" pos:end="217:38">-&gt;</operator><name pos:start="217:39" pos:end="217:47">field_poc</name><index pos:start="217:48" pos:end="217:50">[<expr pos:start="217:49" pos:end="217:49"><literal type="number" pos:start="217:49" pos:end="217:49">1</literal></expr>]</index></name> <operator pos:start="217:52" pos:end="217:53">==</operator> <name pos:start="217:55" pos:end="217:61">INT_MAX</name><operator pos:start="217:62" pos:end="217:62">)</operator></expr>

            )</condition> <block pos:start="219:15" pos:end="255:13">{<block_content pos:start="221:17" pos:end="253:65">

                <decl_stmt pos:start="221:17" pos:end="221:22"><decl pos:start="221:17" pos:end="221:21"><type pos:start="221:17" pos:end="221:19"><name pos:start="221:17" pos:end="221:19">int</name></type> <name pos:start="221:21" pos:end="221:21">p</name></decl>;</decl_stmt>

                <decl_stmt pos:start="223:17" pos:end="223:51"><decl pos:start="223:17" pos:end="223:50"><type pos:start="223:17" pos:end="223:25"><name pos:start="223:17" pos:end="223:23">AVFrame</name> <modifier pos:start="223:25" pos:end="223:25">*</modifier></type><name pos:start="223:26" pos:end="223:26">f</name> <init pos:start="223:28" pos:end="223:50">= <expr pos:start="223:30" pos:end="223:50"><name pos:start="223:30" pos:end="223:50"><name pos:start="223:30" pos:end="223:30">h</name><operator pos:start="223:31" pos:end="223:32">-&gt;</operator><name pos:start="223:33" pos:end="223:47">next_output_pic</name><operator pos:start="223:48" pos:end="223:49">-&gt;</operator><name pos:start="223:50" pos:end="223:50">f</name></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="225:17" pos:end="225:72"><decl pos:start="225:17" pos:end="225:71"><type pos:start="225:17" pos:end="225:19"><name pos:start="225:17" pos:end="225:19">int</name></type> <name pos:start="225:21" pos:end="225:25">field</name> <init pos:start="225:27" pos:end="225:71">= <expr pos:start="225:29" pos:end="225:71"><name pos:start="225:29" pos:end="225:60"><name pos:start="225:29" pos:end="225:29">h</name><operator pos:start="225:30" pos:end="225:31">-&gt;</operator><name pos:start="225:32" pos:end="225:46">next_output_pic</name><operator pos:start="225:47" pos:end="225:48">-&gt;</operator><name pos:start="225:49" pos:end="225:57">field_poc</name><index pos:start="225:58" pos:end="225:60">[<expr pos:start="225:59" pos:end="225:59"><literal type="number" pos:start="225:59" pos:end="225:59">0</literal></expr>]</index></name> <operator pos:start="225:62" pos:end="225:63">==</operator> <name pos:start="225:65" pos:end="225:71">INT_MAX</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="227:17" pos:end="227:37"><decl pos:start="227:17" pos:end="227:36"><type pos:start="227:17" pos:end="227:25"><name pos:start="227:17" pos:end="227:23">uint8_t</name> <modifier pos:start="227:25" pos:end="227:25">*</modifier></type><name pos:start="227:26" pos:end="227:36"><name pos:start="227:26" pos:end="227:33">dst_data</name><index pos:start="227:34" pos:end="227:36">[<expr pos:start="227:35" pos:end="227:35"><literal type="number" pos:start="227:35" pos:end="227:35">4</literal></expr>]</index></name></decl>;</decl_stmt>

                <decl_stmt pos:start="229:17" pos:end="229:33"><decl pos:start="229:17" pos:end="229:32"><type pos:start="229:17" pos:end="229:19"><name pos:start="229:17" pos:end="229:19">int</name></type> <name pos:start="229:21" pos:end="229:32"><name pos:start="229:21" pos:end="229:29">linesizes</name><index pos:start="229:30" pos:end="229:32">[<expr pos:start="229:31" pos:end="229:31"><literal type="number" pos:start="229:31" pos:end="229:31">4</literal></expr>]</index></name></decl>;</decl_stmt>

                <decl_stmt pos:start="231:17" pos:end="231:43"><decl pos:start="231:17" pos:end="231:42"><type pos:start="231:17" pos:end="231:31"><specifier pos:start="231:17" pos:end="231:21">const</specifier> <name pos:start="231:23" pos:end="231:29">uint8_t</name> <modifier pos:start="231:31" pos:end="231:31">*</modifier></type><name pos:start="231:32" pos:end="231:42"><name pos:start="231:32" pos:end="231:39">src_data</name><index pos:start="231:40" pos:end="231:42">[<expr pos:start="231:41" pos:end="231:41"><literal type="number" pos:start="231:41" pos:end="231:41">4</literal></expr>]</index></name></decl>;</decl_stmt>



                <expr_stmt pos:start="235:17" pos:end="235:96"><expr pos:start="235:17" pos:end="235:95"><call pos:start="235:17" pos:end="235:95"><name pos:start="235:17" pos:end="235:22">av_log</name><argument_list pos:start="235:23" pos:end="235:95">(<argument pos:start="235:24" pos:end="235:31"><expr pos:start="235:24" pos:end="235:31"><name pos:start="235:24" pos:end="235:31"><name pos:start="235:24" pos:end="235:24">h</name><operator pos:start="235:25" pos:end="235:26">-&gt;</operator><name pos:start="235:27" pos:end="235:31">avctx</name></name></expr></argument>, <argument pos:start="235:34" pos:end="235:45"><expr pos:start="235:34" pos:end="235:45"><name pos:start="235:34" pos:end="235:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="235:48" pos:end="235:87"><expr pos:start="235:48" pos:end="235:87"><literal type="string" pos:start="235:48" pos:end="235:87">"Duplicating field %d to fill missing\n"</literal></expr></argument>, <argument pos:start="235:90" pos:end="235:94"><expr pos:start="235:90" pos:end="235:94"><name pos:start="235:90" pos:end="235:94">field</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <for pos:start="239:17" pos:end="247:17">for <control pos:start="239:21" pos:end="239:37">(<init pos:start="239:22" pos:end="239:27"><expr pos:start="239:22" pos:end="239:26"><name pos:start="239:22" pos:end="239:22">p</name> <operator pos:start="239:24" pos:end="239:24">=</operator> <literal type="number" pos:start="239:26" pos:end="239:26">0</literal></expr>;</init> <condition pos:start="239:29" pos:end="239:32"><expr pos:start="239:29" pos:end="239:31"><name pos:start="239:29" pos:end="239:29">p</name><operator pos:start="239:30" pos:end="239:30">&lt;</operator><literal type="number" pos:start="239:31" pos:end="239:31">4</literal></expr>;</condition> <incr pos:start="239:34" pos:end="239:36"><expr pos:start="239:34" pos:end="239:36"><name pos:start="239:34" pos:end="239:34">p</name><operator pos:start="239:35" pos:end="239:36">++</operator></expr></incr>)</control> <block pos:start="239:39" pos:end="247:17">{<block_content pos:start="241:21" pos:end="245:52">

                    <expr_stmt pos:start="241:21" pos:end="241:72"><expr pos:start="241:21" pos:end="241:71"><name pos:start="241:21" pos:end="241:31"><name pos:start="241:21" pos:end="241:28">dst_data</name><index pos:start="241:29" pos:end="241:31">[<expr pos:start="241:30" pos:end="241:30"><name pos:start="241:30" pos:end="241:30">p</name></expr>]</index></name> <operator pos:start="241:33" pos:end="241:33">=</operator> <name pos:start="241:35" pos:end="241:44"><name pos:start="241:35" pos:end="241:35">f</name><operator pos:start="241:36" pos:end="241:37">-&gt;</operator><name pos:start="241:38" pos:end="241:41">data</name><index pos:start="241:42" pos:end="241:44">[<expr pos:start="241:43" pos:end="241:43"><name pos:start="241:43" pos:end="241:43">p</name></expr>]</index></name> <operator pos:start="241:46" pos:end="241:46">+</operator> <operator pos:start="241:48" pos:end="241:48">(</operator><name pos:start="241:49" pos:end="241:53">field</name><operator pos:start="241:54" pos:end="241:54">^</operator><literal type="number" pos:start="241:55" pos:end="241:55">1</literal><operator pos:start="241:56" pos:end="241:56">)</operator><operator pos:start="241:57" pos:end="241:57">*</operator><name pos:start="241:58" pos:end="241:71"><name pos:start="241:58" pos:end="241:58">f</name><operator pos:start="241:59" pos:end="241:60">-&gt;</operator><name pos:start="241:61" pos:end="241:68">linesize</name><index pos:start="241:69" pos:end="241:71">[<expr pos:start="241:70" pos:end="241:70"><name pos:start="241:70" pos:end="241:70">p</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="243:21" pos:end="243:72"><expr pos:start="243:21" pos:end="243:71"><name pos:start="243:21" pos:end="243:31"><name pos:start="243:21" pos:end="243:28">src_data</name><index pos:start="243:29" pos:end="243:31">[<expr pos:start="243:30" pos:end="243:30"><name pos:start="243:30" pos:end="243:30">p</name></expr>]</index></name> <operator pos:start="243:33" pos:end="243:33">=</operator> <name pos:start="243:35" pos:end="243:44"><name pos:start="243:35" pos:end="243:35">f</name><operator pos:start="243:36" pos:end="243:37">-&gt;</operator><name pos:start="243:38" pos:end="243:41">data</name><index pos:start="243:42" pos:end="243:44">[<expr pos:start="243:43" pos:end="243:43"><name pos:start="243:43" pos:end="243:43">p</name></expr>]</index></name> <operator pos:start="243:46" pos:end="243:46">+</operator>  <name pos:start="243:49" pos:end="243:53">field</name>   <operator pos:start="243:57" pos:end="243:57">*</operator><name pos:start="243:58" pos:end="243:71"><name pos:start="243:58" pos:end="243:58">f</name><operator pos:start="243:59" pos:end="243:60">-&gt;</operator><name pos:start="243:61" pos:end="243:68">linesize</name><index pos:start="243:69" pos:end="243:71">[<expr pos:start="243:70" pos:end="243:70"><name pos:start="243:70" pos:end="243:70">p</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="245:21" pos:end="245:52"><expr pos:start="245:21" pos:end="245:51"><name pos:start="245:21" pos:end="245:32"><name pos:start="245:21" pos:end="245:29">linesizes</name><index pos:start="245:30" pos:end="245:32">[<expr pos:start="245:31" pos:end="245:31"><name pos:start="245:31" pos:end="245:31">p</name></expr>]</index></name> <operator pos:start="245:34" pos:end="245:34">=</operator> <literal type="number" pos:start="245:36" pos:end="245:36">2</literal><operator pos:start="245:37" pos:end="245:37">*</operator><name pos:start="245:38" pos:end="245:51"><name pos:start="245:38" pos:end="245:38">f</name><operator pos:start="245:39" pos:end="245:40">-&gt;</operator><name pos:start="245:41" pos:end="245:48">linesize</name><index pos:start="245:49" pos:end="245:51">[<expr pos:start="245:50" pos:end="245:50"><name pos:start="245:50" pos:end="245:50">p</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>



                <expr_stmt pos:start="251:17" pos:end="253:65"><expr pos:start="251:17" pos:end="253:64"><call pos:start="251:17" pos:end="253:64"><name pos:start="251:17" pos:end="251:29">av_image_copy</name><argument_list pos:start="251:30" pos:end="253:64">(<argument pos:start="251:31" pos:end="251:38"><expr pos:start="251:31" pos:end="251:38"><name pos:start="251:31" pos:end="251:38">dst_data</name></expr></argument>, <argument pos:start="251:41" pos:end="251:49"><expr pos:start="251:41" pos:end="251:49"><name pos:start="251:41" pos:end="251:49">linesizes</name></expr></argument>, <argument pos:start="251:52" pos:end="251:59"><expr pos:start="251:52" pos:end="251:59"><name pos:start="251:52" pos:end="251:59">src_data</name></expr></argument>, <argument pos:start="251:62" pos:end="251:70"><expr pos:start="251:62" pos:end="251:70"><name pos:start="251:62" pos:end="251:70">linesizes</name></expr></argument>,

                              <argument pos:start="253:31" pos:end="253:39"><expr pos:start="253:31" pos:end="253:39"><name pos:start="253:31" pos:end="253:39"><name pos:start="253:31" pos:end="253:31">f</name><operator pos:start="253:32" pos:end="253:33">-&gt;</operator><name pos:start="253:34" pos:end="253:39">format</name></name></expr></argument>, <argument pos:start="253:42" pos:end="253:49"><expr pos:start="253:42" pos:end="253:49"><name pos:start="253:42" pos:end="253:49"><name pos:start="253:42" pos:end="253:42">f</name><operator pos:start="253:43" pos:end="253:44">-&gt;</operator><name pos:start="253:45" pos:end="253:49">width</name></name></expr></argument>, <argument pos:start="253:52" pos:end="253:63"><expr pos:start="253:52" pos:end="253:63"><name pos:start="253:52" pos:end="253:60"><name pos:start="253:52" pos:end="253:52">f</name><operator pos:start="253:53" pos:end="253:54">-&gt;</operator><name pos:start="253:55" pos:end="253:60">height</name></name><operator pos:start="253:61" pos:end="253:62">&gt;&gt;</operator><literal type="number" pos:start="253:63" pos:end="253:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="259:13" pos:end="259:60"><expr pos:start="259:13" pos:end="259:59"><name pos:start="259:13" pos:end="259:15">ret</name> <operator pos:start="259:17" pos:end="259:17">=</operator> <call pos:start="259:19" pos:end="259:59"><name pos:start="259:19" pos:end="259:30">output_frame</name><argument_list pos:start="259:31" pos:end="259:59">(<argument pos:start="259:32" pos:end="259:32"><expr pos:start="259:32" pos:end="259:32"><name pos:start="259:32" pos:end="259:32">h</name></expr></argument>, <argument pos:start="259:35" pos:end="259:38"><expr pos:start="259:35" pos:end="259:38"><name pos:start="259:35" pos:end="259:38">pict</name></expr></argument>, <argument pos:start="259:41" pos:end="259:58"><expr pos:start="259:41" pos:end="259:58"><name pos:start="259:41" pos:end="259:58"><name pos:start="259:41" pos:end="259:41">h</name><operator pos:start="259:42" pos:end="259:43">-&gt;</operator><name pos:start="259:44" pos:end="259:58">next_output_pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="261:13" pos:end="263:27"><if pos:start="261:13" pos:end="263:27">if <condition pos:start="261:16" pos:end="261:24">(<expr pos:start="261:17" pos:end="261:23"><name pos:start="261:17" pos:end="261:19">ret</name> <operator pos:start="261:21" pos:end="261:21">&lt;</operator> <literal type="number" pos:start="261:23" pos:end="261:23">0</literal></expr>)</condition><block type="pseudo" pos:start="263:17" pos:end="263:27"><block_content pos:start="263:17" pos:end="263:27">

                <return pos:start="263:17" pos:end="263:27">return <expr pos:start="263:24" pos:end="263:26"><name pos:start="263:24" pos:end="263:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:27"><expr pos:start="265:13" pos:end="265:26"><operator pos:start="265:13" pos:end="265:13">*</operator><name pos:start="265:14" pos:end="265:22">got_frame</name> <operator pos:start="265:24" pos:end="265:24">=</operator> <literal type="number" pos:start="265:26" pos:end="265:26">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="267:13" pos:end="281:13"><if pos:start="267:13" pos:end="281:13">if <condition pos:start="267:16" pos:end="267:33">(<expr pos:start="267:17" pos:end="267:32"><name pos:start="267:17" pos:end="267:32">CONFIG_MPEGVIDEO</name></expr>)</condition> <block pos:start="267:35" pos:end="281:13">{<block_content pos:start="269:17" pos:end="279:80">

                <expr_stmt pos:start="269:17" pos:end="279:80"><expr pos:start="269:17" pos:end="279:79"><call pos:start="269:17" pos:end="279:79"><name pos:start="269:17" pos:end="269:36">ff_print_debug_info2</name><argument_list pos:start="269:37" pos:end="279:79">(<argument pos:start="269:38" pos:end="269:45"><expr pos:start="269:38" pos:end="269:45"><name pos:start="269:38" pos:end="269:45"><name pos:start="269:38" pos:end="269:38">h</name><operator pos:start="269:39" pos:end="269:40">-&gt;</operator><name pos:start="269:41" pos:end="269:45">avctx</name></name></expr></argument>, <argument pos:start="269:48" pos:end="269:51"><expr pos:start="269:48" pos:end="269:51"><name pos:start="269:48" pos:end="269:51">pict</name></expr></argument>, <argument pos:start="269:54" pos:end="269:57"><expr pos:start="269:54" pos:end="269:57"><name pos:start="269:54" pos:end="269:57">NULL</name></expr></argument>,

                                    <argument pos:start="271:37" pos:end="271:63"><expr pos:start="271:37" pos:end="271:63"><name pos:start="271:37" pos:end="271:63"><name pos:start="271:37" pos:end="271:37">h</name><operator pos:start="271:38" pos:end="271:39">-&gt;</operator><name pos:start="271:40" pos:end="271:54">next_output_pic</name><operator pos:start="271:55" pos:end="271:56">-&gt;</operator><name pos:start="271:57" pos:end="271:63">mb_type</name></name></expr></argument>,

                                    <argument pos:start="273:37" pos:end="273:68"><expr pos:start="273:37" pos:end="273:68"><name pos:start="273:37" pos:end="273:68"><name pos:start="273:37" pos:end="273:37">h</name><operator pos:start="273:38" pos:end="273:39">-&gt;</operator><name pos:start="273:40" pos:end="273:54">next_output_pic</name><operator pos:start="273:55" pos:end="273:56">-&gt;</operator><name pos:start="273:57" pos:end="273:68">qscale_table</name></name></expr></argument>,

                                    <argument pos:start="275:37" pos:end="275:66"><expr pos:start="275:37" pos:end="275:66"><name pos:start="275:37" pos:end="275:66"><name pos:start="275:37" pos:end="275:37">h</name><operator pos:start="275:38" pos:end="275:39">-&gt;</operator><name pos:start="275:40" pos:end="275:54">next_output_pic</name><operator pos:start="275:55" pos:end="275:56">-&gt;</operator><name pos:start="275:57" pos:end="275:66">motion_val</name></name></expr></argument>,

                                    <argument pos:start="277:37" pos:end="277:49"><expr pos:start="277:37" pos:end="277:49"><operator pos:start="277:37" pos:end="277:37">&amp;</operator><name pos:start="277:38" pos:end="277:49"><name pos:start="277:38" pos:end="277:38">h</name><operator pos:start="277:39" pos:end="277:40">-&gt;</operator><name pos:start="277:41" pos:end="277:49">low_delay</name></name></expr></argument>,

                                    <argument pos:start="279:37" pos:end="279:47"><expr pos:start="279:37" pos:end="279:47"><name pos:start="279:37" pos:end="279:47"><name pos:start="279:37" pos:end="279:37">h</name><operator pos:start="279:38" pos:end="279:39">-&gt;</operator><name pos:start="279:40" pos:end="279:47">mb_width</name></name></expr></argument>, <argument pos:start="279:50" pos:end="279:61"><expr pos:start="279:50" pos:end="279:61"><name pos:start="279:50" pos:end="279:61"><name pos:start="279:50" pos:end="279:50">h</name><operator pos:start="279:51" pos:end="279:52">-&gt;</operator><name pos:start="279:53" pos:end="279:61">mb_height</name></name></expr></argument>, <argument pos:start="279:64" pos:end="279:75"><expr pos:start="279:64" pos:end="279:75"><name pos:start="279:64" pos:end="279:75"><name pos:start="279:64" pos:end="279:64">h</name><operator pos:start="279:65" pos:end="279:66">-&gt;</operator><name pos:start="279:67" pos:end="279:75">mb_stride</name></name></expr></argument>, <argument pos:start="279:78" pos:end="279:78"><expr pos:start="279:78" pos:end="279:78"><literal type="number" pos:start="279:78" pos:end="279:78">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="289:5" pos:end="289:44"><expr pos:start="289:5" pos:end="289:43"><call pos:start="289:5" pos:end="289:43"><name pos:start="289:5" pos:end="289:14">av_assert0</name><argument_list pos:start="289:15" pos:end="289:43">(<argument pos:start="289:16" pos:end="289:42"><expr pos:start="289:16" pos:end="289:42"><name pos:start="289:16" pos:end="289:27"><name pos:start="289:16" pos:end="289:19">pict</name><operator pos:start="289:20" pos:end="289:21">-&gt;</operator><name pos:start="289:22" pos:end="289:24">buf</name><index pos:start="289:25" pos:end="289:27">[<expr pos:start="289:26" pos:end="289:26"><literal type="number" pos:start="289:26" pos:end="289:26">0</literal></expr>]</index></name> <operator pos:start="289:29" pos:end="289:30">||</operator> <operator pos:start="289:32" pos:end="289:32">!</operator><operator pos:start="289:33" pos:end="289:33">*</operator><name pos:start="289:34" pos:end="289:42">got_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="293:5" pos:end="293:50"><expr pos:start="293:5" pos:end="293:49"><call pos:start="293:5" pos:end="293:49"><name pos:start="293:5" pos:end="293:25">ff_h264_unref_picture</name><argument_list pos:start="293:26" pos:end="293:49">(<argument pos:start="293:27" pos:end="293:27"><expr pos:start="293:27" pos:end="293:27"><name pos:start="293:27" pos:end="293:27">h</name></expr></argument>, <argument pos:start="293:30" pos:end="293:48"><expr pos:start="293:30" pos:end="293:48"><operator pos:start="293:30" pos:end="293:30">&amp;</operator><name pos:start="293:31" pos:end="293:48"><name pos:start="293:31" pos:end="293:31">h</name><operator pos:start="293:32" pos:end="293:33">-&gt;</operator><name pos:start="293:34" pos:end="293:48">last_pic_for_ec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="297:5" pos:end="297:51">return <expr pos:start="297:12" pos:end="297:50"><call pos:start="297:12" pos:end="297:50"><name pos:start="297:12" pos:end="297:29">get_consumed_bytes</name><argument_list pos:start="297:30" pos:end="297:50">(<argument pos:start="297:31" pos:end="297:39"><expr pos:start="297:31" pos:end="297:39"><name pos:start="297:31" pos:end="297:39">buf_index</name></expr></argument>, <argument pos:start="297:42" pos:end="297:49"><expr pos:start="297:42" pos:end="297:49"><name pos:start="297:42" pos:end="297:49">buf_size</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
