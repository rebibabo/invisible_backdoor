<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14070.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">virtio_ccw_device_realize</name><parameter_list pos:start="1:38" pos:end="1:73">(<parameter pos:start="1:39" pos:end="1:58"><decl pos:start="1:39" pos:end="1:58"><type pos:start="1:39" pos:end="1:58"><name pos:start="1:39" pos:end="1:53">VirtioCcwDevice</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">dev</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:65">Error</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier><modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:72">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="117:16">

    <decl_stmt pos:start="5:5" pos:end="5:63"><decl pos:start="5:5" pos:end="5:62"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24">VirtIOCCWDeviceClass</name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:27">k</name> <init pos:start="5:29" pos:end="5:62">= <expr pos:start="5:31" pos:end="5:62"><call pos:start="5:31" pos:end="5:62"><name pos:start="5:31" pos:end="5:57">VIRTIO_CCW_DEVICE_GET_CLASS</name><argument_list pos:start="5:58" pos:end="5:62">(<argument pos:start="5:59" pos:end="5:61"><expr pos:start="5:59" pos:end="5:61"><name pos:start="5:59" pos:end="5:61">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">CcwDevice</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:22">ccw_dev</name> <init pos:start="7:24" pos:end="7:40">= <expr pos:start="7:26" pos:end="7:40"><call pos:start="7:26" pos:end="7:40"><name pos:start="7:26" pos:end="7:35">CCW_DEVICE</name><argument_list pos:start="7:36" pos:end="7:40">(<argument pos:start="7:37" pos:end="7:39"><expr pos:start="7:37" pos:end="7:39"><name pos:start="7:37" pos:end="7:39">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:55"><decl pos:start="9:5" pos:end="9:54"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">CCWDeviceClass</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:22">ck</name> <init pos:start="9:24" pos:end="9:54">= <expr pos:start="9:26" pos:end="9:54"><call pos:start="9:26" pos:end="9:54"><name pos:start="9:26" pos:end="9:45">CCW_DEVICE_GET_CLASS</name><argument_list pos:start="9:46" pos:end="9:54">(<argument pos:start="9:47" pos:end="9:53"><expr pos:start="9:47" pos:end="9:53"><name pos:start="9:47" pos:end="9:53">ccw_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">DeviceState</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:23">parent</name> <init pos:start="11:25" pos:end="11:41">= <expr pos:start="11:27" pos:end="11:41"><call pos:start="11:27" pos:end="11:41"><name pos:start="11:27" pos:end="11:32">DEVICE</name><argument_list pos:start="11:33" pos:end="11:41">(<argument pos:start="11:34" pos:end="11:40"><expr pos:start="11:34" pos:end="11:40"><name pos:start="11:34" pos:end="11:40">ccw_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:49"><decl pos:start="13:5" pos:end="13:48"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">BusState</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:18">qbus</name> <init pos:start="13:20" pos:end="13:48">= <expr pos:start="13:22" pos:end="13:48"><call pos:start="13:22" pos:end="13:48"><name pos:start="13:22" pos:end="13:40">qdev_get_parent_bus</name><argument_list pos:start="13:41" pos:end="13:48">(<argument pos:start="13:42" pos:end="13:47"><expr pos:start="13:42" pos:end="13:47"><name pos:start="13:42" pos:end="13:47">parent</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:48"><decl pos:start="15:5" pos:end="15:47"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:17">VirtualCssBus</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:23">cbus</name> <init pos:start="15:25" pos:end="15:47">= <expr pos:start="15:27" pos:end="15:47"><call pos:start="15:27" pos:end="15:47"><name pos:start="15:27" pos:end="15:41">VIRTUAL_CSS_BUS</name><argument_list pos:start="15:42" pos:end="15:47">(<argument pos:start="15:43" pos:end="15:46"><expr pos:start="15:43" pos:end="15:46"><name pos:start="15:43" pos:end="15:46">qbus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">SubchDev</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:17">sch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:9">Error</name> <modifier pos:start="19:11" pos:end="19:11">*</modifier></type><name pos:start="19:12" pos:end="19:14">err</name> <init pos:start="19:16" pos:end="19:21">= <expr pos:start="19:18" pos:end="19:21"><name pos:start="19:18" pos:end="19:21">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:72"><expr pos:start="23:5" pos:end="23:71"><name pos:start="23:5" pos:end="23:7">sch</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:71"><name pos:start="23:11" pos:end="23:24">css_create_sch</name><argument_list pos:start="23:25" pos:end="23:71">(<argument pos:start="23:26" pos:end="23:39"><expr pos:start="23:26" pos:end="23:39"><name pos:start="23:26" pos:end="23:39"><name pos:start="23:26" pos:end="23:32">ccw_dev</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:39">devno</name></name></expr></argument>, <argument pos:start="23:42" pos:end="23:45"><expr pos:start="23:42" pos:end="23:45"><name pos:start="23:42" pos:end="23:45">true</name></expr></argument>, <argument pos:start="23:48" pos:end="23:64"><expr pos:start="23:48" pos:end="23:64"><name pos:start="23:48" pos:end="23:64"><name pos:start="23:48" pos:end="23:51">cbus</name><operator pos:start="23:52" pos:end="23:53">-&gt;</operator><name pos:start="23:54" pos:end="23:64">squash_mcss</name></name></expr></argument>, <argument pos:start="23:67" pos:end="23:70"><expr pos:start="23:67" pos:end="23:70"><name pos:start="23:67" pos:end="23:70">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:13">(<expr pos:start="25:9" pos:end="25:12"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:12">sch</name></expr>)</condition> <block pos:start="25:15" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:15">

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:58">(<expr pos:start="31:9" pos:end="31:57"><operator pos:start="31:9" pos:end="31:9">!</operator><call pos:start="31:10" pos:end="31:32"><name pos:start="31:10" pos:end="31:27">virtio_ccw_rev_max</name><argument_list pos:start="31:28" pos:end="31:32">(<argument pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><name pos:start="31:29" pos:end="31:31">dev</name></expr></argument>)</argument_list></call> <operator pos:start="31:34" pos:end="31:35">&amp;&amp;</operator> <name pos:start="31:37" pos:end="31:57"><name pos:start="31:37" pos:end="31:39">dev</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:57">force_revision_1</name></name></expr>)</condition> <block pos:start="31:60" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:21">

        <expr_stmt pos:start="33:9" pos:end="35:69"><expr pos:start="33:9" pos:end="35:68"><call pos:start="33:9" pos:end="35:68"><name pos:start="33:9" pos:end="33:18">error_setg</name><argument_list pos:start="33:19" pos:end="35:68">(<argument pos:start="33:20" pos:end="33:23"><expr pos:start="33:20" pos:end="33:23"><operator pos:start="33:20" pos:end="33:20">&amp;</operator><name pos:start="33:21" pos:end="33:23">err</name></expr></argument>, <argument pos:start="33:26" pos:end="35:42"><expr pos:start="33:26" pos:end="35:42"><literal type="string" pos:start="33:26" pos:end="33:61">"Invalid value of property max_rev "</literal>

                   <literal type="string" pos:start="35:20" pos:end="35:42">"(is %d expected &gt;= 1)"</literal></expr></argument>, <argument pos:start="35:45" pos:end="35:67"><expr pos:start="35:45" pos:end="35:67"><call pos:start="35:45" pos:end="35:67"><name pos:start="35:45" pos:end="35:62">virtio_ccw_rev_max</name><argument_list pos:start="35:63" pos:end="35:67">(<argument pos:start="35:64" pos:end="35:66"><expr pos:start="35:64" pos:end="35:66"><name pos:start="35:64" pos:end="35:66">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="37:9" pos:end="37:21">goto <name pos:start="37:14" pos:end="37:20">out_err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:27"><expr pos:start="43:5" pos:end="43:26"><name pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:7">sch</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:20">driver_data</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:26">dev</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:32"><expr pos:start="45:5" pos:end="45:31"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:7">sch</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:15">ccw_cb</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:31">virtio_ccw_cb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:44"><expr pos:start="47:5" pos:end="47:43"><name pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:7">sch</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:19">disable_cb</name></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <name pos:start="47:23" pos:end="47:43">virtio_sch_disable_cb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:28"><expr pos:start="49:5" pos:end="49:27"><name pos:start="49:5" pos:end="49:20"><name pos:start="49:5" pos:end="49:7">sch</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:11">id</name><operator pos:start="49:12" pos:end="49:12">.</operator><name pos:start="49:13" pos:end="49:20">reserved</name></name> <operator pos:start="49:22" pos:end="49:22">=</operator> <literal type="number" pos:start="49:24" pos:end="49:27">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:41"><expr pos:start="51:5" pos:end="51:40"><name pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:7">sch</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:11">id</name><operator pos:start="51:12" pos:end="51:12">.</operator><name pos:start="51:13" pos:end="51:19">cu_type</name></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:40">VIRTIO_CCW_CU_TYPE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:57"><expr pos:start="53:5" pos:end="53:56"><name pos:start="53:5" pos:end="53:27"><name pos:start="53:5" pos:end="53:7">sch</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:27">do_subchannel_work</name></name> <operator pos:start="53:29" pos:end="53:29">=</operator> <name pos:start="53:31" pos:end="53:56">do_subchannel_work_virtual</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:23"><expr pos:start="55:5" pos:end="55:22"><name pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:11">ccw_dev</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:16">sch</name></name> <operator pos:start="55:18" pos:end="55:18">=</operator> <name pos:start="55:20" pos:end="55:22">sch</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:27"><expr pos:start="57:5" pos:end="57:26"><name pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:7">dev</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:19">indicators</name></name> <operator pos:start="57:21" pos:end="57:21">=</operator> <name pos:start="57:23" pos:end="57:26">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:23"><expr pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:7">dev</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:17">revision</name></name> <operator pos:start="59:19" pos:end="59:19">=</operator> <operator pos:start="59:21" pos:end="59:21">-</operator><literal type="number" pos:start="59:22" pos:end="59:22">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:63"><expr pos:start="61:5" pos:end="61:62"><call pos:start="61:5" pos:end="61:62"><name pos:start="61:5" pos:end="61:31">css_sch_build_virtual_schib</name><argument_list pos:start="61:32" pos:end="61:62">(<argument pos:start="61:33" pos:end="61:35"><expr pos:start="61:33" pos:end="61:35"><name pos:start="61:33" pos:end="61:35">sch</name></expr></argument>, <argument pos:start="61:38" pos:end="61:38"><expr pos:start="61:38" pos:end="61:38"><literal type="number" pos:start="61:38" pos:end="61:38">0</literal></expr></argument>, <argument pos:start="61:41" pos:end="61:61"><expr pos:start="61:41" pos:end="61:61"><name pos:start="61:41" pos:end="61:61">VIRTIO_CCW_CHPID_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="69:70"><expr pos:start="65:5" pos:end="69:69"><call pos:start="65:5" pos:end="69:69"><name pos:start="65:5" pos:end="65:31">trace_virtio_ccw_new_device</name><argument_list pos:start="65:32" pos:end="69:69">(

        <argument pos:start="67:9" pos:end="67:18"><expr pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:11">sch</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:18">cssid</name></name></expr></argument>, <argument pos:start="67:21" pos:end="67:29"><expr pos:start="67:21" pos:end="67:29"><name pos:start="67:21" pos:end="67:29"><name pos:start="67:21" pos:end="67:23">sch</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:29">ssid</name></name></expr></argument>, <argument pos:start="67:32" pos:end="67:41"><expr pos:start="67:32" pos:end="67:41"><name pos:start="67:32" pos:end="67:41"><name pos:start="67:32" pos:end="67:34">sch</name><operator pos:start="67:35" pos:end="67:36">-&gt;</operator><name pos:start="67:37" pos:end="67:41">schid</name></name></expr></argument>, <argument pos:start="67:44" pos:end="67:53"><expr pos:start="67:44" pos:end="67:53"><name pos:start="67:44" pos:end="67:53"><name pos:start="67:44" pos:end="67:46">sch</name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:53">devno</name></name></expr></argument>,

        <argument pos:start="69:9" pos:end="69:68"><expr pos:start="69:9" pos:end="69:68"><ternary pos:start="69:9" pos:end="69:68"><condition pos:start="69:9" pos:end="69:30"><expr pos:start="69:9" pos:end="69:28"><name pos:start="69:9" pos:end="69:28"><name pos:start="69:9" pos:end="69:15">ccw_dev</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:22">devno</name><operator pos:start="69:23" pos:end="69:23">.</operator><name pos:start="69:24" pos:end="69:28">valid</name></name></expr> ?</condition><then pos:start="69:32" pos:end="69:48"> <expr pos:start="69:32" pos:end="69:48"><literal type="string" pos:start="69:32" pos:end="69:48">"user-configured"</literal></expr> </then><else pos:start="69:50" pos:end="69:68">: <expr pos:start="69:52" pos:end="69:68"><literal type="string" pos:start="69:52" pos:end="69:68">"auto-configured"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:32">(<expr pos:start="73:9" pos:end="73:31"><operator pos:start="73:9" pos:end="73:9">!</operator><call pos:start="73:10" pos:end="73:31"><name pos:start="73:10" pos:end="73:29">kvm_eventfds_enabled</name><argument_list pos:start="73:30" pos:end="73:31">()</argument_list></call></expr>)</condition> <block pos:start="73:34" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:53">

        <expr_stmt pos:start="75:9" pos:end="75:53"><expr pos:start="75:9" pos:end="75:52"><name pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:11">dev</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:18">flags</name></name> <operator pos:start="75:20" pos:end="75:21">&amp;=</operator> <operator pos:start="75:23" pos:end="75:23">~</operator><name pos:start="75:24" pos:end="75:52">VIRTIO_CCW_FLAG_USE_IOEVENTFD</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="91:5"><if pos:start="81:5" pos:end="91:5">if <condition pos:start="81:8" pos:end="81:19">(<expr pos:start="81:9" pos:end="81:18"><name pos:start="81:9" pos:end="81:18"><name pos:start="81:9" pos:end="81:9">k</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:18">realize</name></name></expr>)</condition> <block pos:start="81:21" pos:end="91:5">{<block_content pos:start="83:9" pos:end="89:9">

        <expr_stmt pos:start="83:9" pos:end="83:30"><expr pos:start="83:9" pos:end="83:29"><call pos:start="83:9" pos:end="83:29"><name pos:start="83:9" pos:end="83:18"><name pos:start="83:9" pos:end="83:9">k</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:18">realize</name></name><argument_list pos:start="83:19" pos:end="83:29">(<argument pos:start="83:20" pos:end="83:22"><expr pos:start="83:20" pos:end="83:22"><name pos:start="83:20" pos:end="83:22">dev</name></expr></argument>, <argument pos:start="83:25" pos:end="83:28"><expr pos:start="83:25" pos:end="83:28"><operator pos:start="83:25" pos:end="83:25">&amp;</operator><name pos:start="83:26" pos:end="83:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="89:9"><if pos:start="85:9" pos:end="89:9">if <condition pos:start="85:12" pos:end="85:16">(<expr pos:start="85:13" pos:end="85:15"><name pos:start="85:13" pos:end="85:15">err</name></expr>)</condition> <block pos:start="85:18" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:25">

            <goto pos:start="87:13" pos:end="87:25">goto <name pos:start="87:18" pos:end="87:24">out_err</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:31"><expr pos:start="95:5" pos:end="95:30"><call pos:start="95:5" pos:end="95:30"><name pos:start="95:5" pos:end="95:15"><name pos:start="95:5" pos:end="95:6">ck</name><operator pos:start="95:7" pos:end="95:8">-&gt;</operator><name pos:start="95:9" pos:end="95:15">realize</name></name><argument_list pos:start="95:16" pos:end="95:30">(<argument pos:start="95:17" pos:end="95:23"><expr pos:start="95:17" pos:end="95:23"><name pos:start="95:17" pos:end="95:23">ccw_dev</name></expr></argument>, <argument pos:start="95:26" pos:end="95:29"><expr pos:start="95:26" pos:end="95:29"><operator pos:start="95:26" pos:end="95:26">&amp;</operator><name pos:start="95:27" pos:end="95:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="101:5"><if pos:start="97:5" pos:end="101:5">if <condition pos:start="97:8" pos:end="97:12">(<expr pos:start="97:9" pos:end="97:11"><name pos:start="97:9" pos:end="97:11">err</name></expr>)</condition> <block pos:start="97:14" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:21">

        <goto pos:start="99:9" pos:end="99:21">goto <name pos:start="99:14" pos:end="99:20">out_err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <return pos:start="105:5" pos:end="105:11">return;</return>



<label pos:start="109:1" pos:end="109:8"><name pos:start="109:1" pos:end="109:7">out_err</name>:</label>

    <expr_stmt pos:start="111:5" pos:end="111:31"><expr pos:start="111:5" pos:end="111:30"><call pos:start="111:5" pos:end="111:30"><name pos:start="111:5" pos:end="111:19">error_propagate</name><argument_list pos:start="111:20" pos:end="111:30">(<argument pos:start="111:21" pos:end="111:24"><expr pos:start="111:21" pos:end="111:24"><name pos:start="111:21" pos:end="111:24">errp</name></expr></argument>, <argument pos:start="111:27" pos:end="111:29"><expr pos:start="111:27" pos:end="111:29"><name pos:start="111:27" pos:end="111:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:74"><expr pos:start="113:5" pos:end="113:73"><call pos:start="113:5" pos:end="113:73"><name pos:start="113:5" pos:end="113:20">css_subch_assign</name><argument_list pos:start="113:21" pos:end="113:73">(<argument pos:start="113:22" pos:end="113:31"><expr pos:start="113:22" pos:end="113:31"><name pos:start="113:22" pos:end="113:31"><name pos:start="113:22" pos:end="113:24">sch</name><operator pos:start="113:25" pos:end="113:26">-&gt;</operator><name pos:start="113:27" pos:end="113:31">cssid</name></name></expr></argument>, <argument pos:start="113:34" pos:end="113:42"><expr pos:start="113:34" pos:end="113:42"><name pos:start="113:34" pos:end="113:42"><name pos:start="113:34" pos:end="113:36">sch</name><operator pos:start="113:37" pos:end="113:38">-&gt;</operator><name pos:start="113:39" pos:end="113:42">ssid</name></name></expr></argument>, <argument pos:start="113:45" pos:end="113:54"><expr pos:start="113:45" pos:end="113:54"><name pos:start="113:45" pos:end="113:54"><name pos:start="113:45" pos:end="113:47">sch</name><operator pos:start="113:48" pos:end="113:49">-&gt;</operator><name pos:start="113:50" pos:end="113:54">schid</name></name></expr></argument>, <argument pos:start="113:57" pos:end="113:66"><expr pos:start="113:57" pos:end="113:66"><name pos:start="113:57" pos:end="113:66"><name pos:start="113:57" pos:end="113:59">sch</name><operator pos:start="113:60" pos:end="113:61">-&gt;</operator><name pos:start="113:62" pos:end="113:66">devno</name></name></expr></argument>, <argument pos:start="113:69" pos:end="113:72"><expr pos:start="113:69" pos:end="113:72"><name pos:start="113:69" pos:end="113:72">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:24"><expr pos:start="115:5" pos:end="115:23"><name pos:start="115:5" pos:end="115:16"><name pos:start="115:5" pos:end="115:11">ccw_dev</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:16">sch</name></name> <operator pos:start="115:18" pos:end="115:18">=</operator> <name pos:start="115:20" pos:end="115:23">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:16"><expr pos:start="117:5" pos:end="117:15"><call pos:start="117:5" pos:end="117:15"><name pos:start="117:5" pos:end="117:10">g_free</name><argument_list pos:start="117:11" pos:end="117:15">(<argument pos:start="117:12" pos:end="117:14"><expr pos:start="117:12" pos:end="117:14"><name pos:start="117:12" pos:end="117:14">sch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
