<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/763.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">decode_byterun</name><parameter_list pos:start="1:26" pos:end="3:75">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:33">uint8_t</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">dst</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:52">dst_size</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:44"><decl pos:start="3:27" pos:end="3:44"><type pos:start="3:27" pos:end="3:44"><specifier pos:start="3:27" pos:end="3:31">const</specifier> <name pos:start="3:33" pos:end="3:39">uint8_t</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">buf</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:74"><decl pos:start="3:47" pos:end="3:74"><type pos:start="3:47" pos:end="3:74"><specifier pos:start="3:47" pos:end="3:51">const</specifier> <name pos:start="3:53" pos:end="3:59">uint8_t</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier><specifier pos:start="3:62" pos:end="3:66">const</specifier></type> <name pos:start="3:68" pos:end="3:74">buf_end</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:27">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:24"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier><specifier pos:start="7:20" pos:end="7:24">const</specifier></type> <name pos:start="7:26" pos:end="7:34">buf_start</name> <init pos:start="7:36" pos:end="7:40">= <expr pos:start="7:38" pos:end="7:40"><name pos:start="7:38" pos:end="7:40">buf</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:14">x</name></decl>;</decl_stmt>

    <for pos:start="11:5" pos:end="39:5">for <control pos:start="11:9" pos:end="11:47">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">x</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:46"><expr pos:start="11:17" pos:end="11:45"><name pos:start="11:17" pos:end="11:17">x</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:28">dst_size</name> <operator pos:start="11:30" pos:end="11:31">&amp;&amp;</operator> <name pos:start="11:33" pos:end="11:35">buf</name> <operator pos:start="11:37" pos:end="11:37">&lt;</operator> <name pos:start="11:39" pos:end="11:45">buf_end</name></expr>;</condition><incr/>)</control> <block pos:start="11:49" pos:end="39:5">{<block_content pos:start="13:9" pos:end="37:20">

        <decl_stmt pos:start="13:9" pos:end="13:24"><decl pos:start="13:9" pos:end="13:23"><type pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:16">unsigned</name></type> <name pos:start="13:18" pos:end="13:23">length</name></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:36"><decl pos:start="15:9" pos:end="15:35"><type pos:start="15:9" pos:end="15:20"><specifier pos:start="15:9" pos:end="15:13">const</specifier> <name pos:start="15:15" pos:end="15:20">int8_t</name></type> <name pos:start="15:22" pos:end="15:26">value</name> <init pos:start="15:28" pos:end="15:35">= <expr pos:start="15:30" pos:end="15:35"><operator pos:start="15:30" pos:end="15:30">*</operator><name pos:start="15:31" pos:end="15:33">buf</name><operator pos:start="15:34" pos:end="15:35">++</operator></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="17:9" pos:end="35:9"><if pos:start="17:9" pos:end="25:9">if <condition pos:start="17:12" pos:end="17:23">(<expr pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:17">value</name> <operator pos:start="17:19" pos:end="17:20">&gt;=</operator> <literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr>)</condition> <block pos:start="17:25" pos:end="25:9">{<block_content pos:start="19:13" pos:end="23:26">

            <expr_stmt pos:start="19:13" pos:end="19:31"><expr pos:start="19:13" pos:end="19:30"><name pos:start="19:13" pos:end="19:18">length</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <name pos:start="19:22" pos:end="19:26">value</name> <operator pos:start="19:28" pos:end="19:28">+</operator> <literal type="number" pos:start="19:30" pos:end="19:30">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:78"><expr pos:start="21:13" pos:end="21:77"><call pos:start="21:13" pos:end="21:77"><name pos:start="21:13" pos:end="21:18">memcpy</name><argument_list pos:start="21:19" pos:end="21:77">(<argument pos:start="21:20" pos:end="21:26"><expr pos:start="21:20" pos:end="21:26"><name pos:start="21:20" pos:end="21:22">dst</name> <operator pos:start="21:24" pos:end="21:24">+</operator> <name pos:start="21:26" pos:end="21:26">x</name></expr></argument>, <argument pos:start="21:29" pos:end="21:31"><expr pos:start="21:29" pos:end="21:31"><name pos:start="21:29" pos:end="21:31">buf</name></expr></argument>, <argument pos:start="21:34" pos:end="21:76"><expr pos:start="21:34" pos:end="21:76"><call pos:start="21:34" pos:end="21:76"><name pos:start="21:34" pos:end="21:39">FFMIN3</name><argument_list pos:start="21:40" pos:end="21:76">(<argument pos:start="21:41" pos:end="21:46"><expr pos:start="21:41" pos:end="21:46"><name pos:start="21:41" pos:end="21:46">length</name></expr></argument>, <argument pos:start="21:49" pos:end="21:60"><expr pos:start="21:49" pos:end="21:60"><name pos:start="21:49" pos:end="21:56">dst_size</name> <operator pos:start="21:58" pos:end="21:58">-</operator> <name pos:start="21:60" pos:end="21:60">x</name></expr></argument>, <argument pos:start="21:63" pos:end="21:75"><expr pos:start="21:63" pos:end="21:75"><name pos:start="21:63" pos:end="21:69">buf_end</name> <operator pos:start="21:71" pos:end="21:71">-</operator> <name pos:start="21:73" pos:end="21:75">buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:26"><expr pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:15">buf</name> <operator pos:start="23:17" pos:end="23:18">+=</operator> <name pos:start="23:20" pos:end="23:25">length</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="25:11" pos:end="31:9">else if <condition pos:start="25:19" pos:end="25:32">(<expr pos:start="25:20" pos:end="25:31"><name pos:start="25:20" pos:end="25:24">value</name> <operator pos:start="25:26" pos:end="25:26">&gt;</operator> <operator pos:start="25:28" pos:end="25:28">-</operator><literal type="number" pos:start="25:29" pos:end="25:31">128</literal></expr>)</condition> <block pos:start="25:34" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:65">

            <expr_stmt pos:start="27:13" pos:end="27:32"><expr pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:18">length</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <operator pos:start="27:22" pos:end="27:22">-</operator><name pos:start="27:23" pos:end="27:27">value</name> <operator pos:start="27:29" pos:end="27:29">+</operator> <literal type="number" pos:start="27:31" pos:end="27:31">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:65"><expr pos:start="29:13" pos:end="29:64"><call pos:start="29:13" pos:end="29:64"><name pos:start="29:13" pos:end="29:18">memset</name><argument_list pos:start="29:19" pos:end="29:64">(<argument pos:start="29:20" pos:end="29:26"><expr pos:start="29:20" pos:end="29:26"><name pos:start="29:20" pos:end="29:22">dst</name> <operator pos:start="29:24" pos:end="29:24">+</operator> <name pos:start="29:26" pos:end="29:26">x</name></expr></argument>, <argument pos:start="29:29" pos:end="29:34"><expr pos:start="29:29" pos:end="29:34"><operator pos:start="29:29" pos:end="29:29">*</operator><name pos:start="29:30" pos:end="29:32">buf</name><operator pos:start="29:33" pos:end="29:34">++</operator></expr></argument>, <argument pos:start="29:37" pos:end="29:63"><expr pos:start="29:37" pos:end="29:63"><call pos:start="29:37" pos:end="29:63"><name pos:start="29:37" pos:end="29:41">FFMIN</name><argument_list pos:start="29:42" pos:end="29:63">(<argument pos:start="29:43" pos:end="29:48"><expr pos:start="29:43" pos:end="29:48"><name pos:start="29:43" pos:end="29:48">length</name></expr></argument>, <argument pos:start="29:51" pos:end="29:62"><expr pos:start="29:51" pos:end="29:62"><name pos:start="29:51" pos:end="29:58">dst_size</name> <operator pos:start="29:60" pos:end="29:60">-</operator> <name pos:start="29:62" pos:end="29:62">x</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="35:9">else <block pos:start="31:16" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:21"> <comment type="line" pos:start="31:18" pos:end="31:24">// noop</comment>

            <continue pos:start="33:13" pos:end="33:21">continue;</continue>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:20"><expr pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:9">x</name> <operator pos:start="37:11" pos:end="37:12">+=</operator> <name pos:start="37:14" pos:end="37:19">length</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:21">(<expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:9">x</name> <operator pos:start="41:11" pos:end="41:11">&lt;</operator> <name pos:start="41:13" pos:end="41:20">dst_size</name></expr>)</condition> <block pos:start="41:23" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:39">

        <expr_stmt pos:start="43:9" pos:end="43:81"><expr pos:start="43:9" pos:end="43:80"><call pos:start="43:9" pos:end="43:80"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:80">(<argument pos:start="43:16" pos:end="43:19"><expr pos:start="43:16" pos:end="43:19"><name pos:start="43:16" pos:end="43:19">NULL</name></expr></argument>, <argument pos:start="43:22" pos:end="43:35"><expr pos:start="43:22" pos:end="43:35"><name pos:start="43:22" pos:end="43:35">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="43:38" pos:end="43:79"><expr pos:start="43:38" pos:end="43:79"><literal type="string" pos:start="43:38" pos:end="43:79">"decode_byterun ended before plane size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:39"><expr pos:start="45:9" pos:end="45:38"><call pos:start="45:9" pos:end="45:38"><name pos:start="45:9" pos:end="45:14">memset</name><argument_list pos:start="45:15" pos:end="45:38">(<argument pos:start="45:16" pos:end="45:20"><expr pos:start="45:16" pos:end="45:20"><name pos:start="45:16" pos:end="45:18">dst</name><operator pos:start="45:19" pos:end="45:19">+</operator><name pos:start="45:20" pos:end="45:20">x</name></expr></argument>, <argument pos:start="45:23" pos:end="45:23"><expr pos:start="45:23" pos:end="45:23"><literal type="number" pos:start="45:23" pos:end="45:23">0</literal></expr></argument>, <argument pos:start="45:26" pos:end="45:37"><expr pos:start="45:26" pos:end="45:37"><name pos:start="45:26" pos:end="45:33">dst_size</name> <operator pos:start="45:35" pos:end="45:35">-</operator> <name pos:start="45:37" pos:end="45:37">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="49:5" pos:end="49:27">return <expr pos:start="49:12" pos:end="49:26"><name pos:start="49:12" pos:end="49:14">buf</name> <operator pos:start="49:16" pos:end="49:16">-</operator> <name pos:start="49:18" pos:end="49:26">buf_start</name></expr>;</return>

</block_content>}</block></function>
</unit>
