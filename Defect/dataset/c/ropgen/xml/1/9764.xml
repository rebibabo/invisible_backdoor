<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9764.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">helper_idivq_EAX_T0</name><parameter_list pos:start="1:25" pos:end="1:30">(<parameter pos:start="1:26" pos:end="1:29"><decl pos:start="1:26" pos:end="1:29"><type pos:start="1:26" pos:end="1:29"><name pos:start="1:26" pos:end="1:29">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:13">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:15">r0</name></decl>, <decl pos:start="5:18" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:18" pos:end="5:19">r1</name></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="11:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:16">(<expr pos:start="7:9" pos:end="7:15"><name pos:start="7:9" pos:end="7:10">T0</name> <operator pos:start="7:12" pos:end="7:13">==</operator> <literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr>)</condition> <block pos:start="7:18" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:37">

        <expr_stmt pos:start="9:9" pos:end="9:37"><expr pos:start="9:9" pos:end="9:36"><call pos:start="9:9" pos:end="9:36"><name pos:start="9:9" pos:end="9:23">raise_exception</name><argument_list pos:start="9:24" pos:end="9:36">(<argument pos:start="9:25" pos:end="9:35"><expr pos:start="9:25" pos:end="9:35"><name pos:start="9:25" pos:end="9:35">EXCP00_DIVZ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:13"><expr pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:6">r0</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <name pos:start="13:10" pos:end="13:12">EAX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:13"><expr pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:6">r1</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <name pos:start="15:10" pos:end="15:12">EDX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><call pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:10">idiv64</name><argument_list pos:start="17:11" pos:end="17:24">(<argument pos:start="17:12" pos:end="17:14"><expr pos:start="17:12" pos:end="17:14"><operator pos:start="17:12" pos:end="17:12">&amp;</operator><name pos:start="17:13" pos:end="17:14">r0</name></expr></argument>, <argument pos:start="17:17" pos:end="17:19"><expr pos:start="17:17" pos:end="17:19"><operator pos:start="17:17" pos:end="17:17">&amp;</operator><name pos:start="17:18" pos:end="17:19">r1</name></expr></argument>, <argument pos:start="17:22" pos:end="17:23"><expr pos:start="17:22" pos:end="17:23"><name pos:start="17:22" pos:end="17:23">T0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:13"><expr pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:7">EAX</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <name pos:start="19:11" pos:end="19:12">r0</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:13"><expr pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:7">EDX</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <name pos:start="21:11" pos:end="21:12">r1</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
