<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11247.c" pos:tabs="8"><function pos:start="1:1" pos:end="481:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">tiff_decode_tag</name><parameter_list pos:start="1:27" pos:end="1:108">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:38">TiffContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:63"><decl pos:start="1:44" pos:end="1:63"><type pos:start="1:44" pos:end="1:63"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:56">uint8_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">start</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:83"><decl pos:start="1:66" pos:end="1:83"><type pos:start="1:66" pos:end="1:83"><specifier pos:start="1:66" pos:end="1:70">const</specifier> <name pos:start="1:72" pos:end="1:78">uint8_t</name> <modifier pos:start="1:80" pos:end="1:80">*</modifier></type><name pos:start="1:81" pos:end="1:83">buf</name></decl></parameter>, <parameter pos:start="1:86" pos:end="1:107"><decl pos:start="1:86" pos:end="1:107"><type pos:start="1:86" pos:end="1:107"><specifier pos:start="1:86" pos:end="1:90">const</specifier> <name pos:start="1:92" pos:end="1:98">uint8_t</name> <modifier pos:start="1:100" pos:end="1:100">*</modifier></type><name pos:start="1:101" pos:end="1:107">end_buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="481:1">{<block_content pos:start="5:5" pos:end="479:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">tag</name></decl>, <decl pos:start="5:14" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:17">type</name></decl>, <decl pos:start="5:20" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:24">count</name></decl>, <decl pos:start="5:27" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:27" pos:end="5:29">off</name></decl>, <decl pos:start="5:32" pos:end="5:40"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:32" pos:end="5:36">value</name> <init pos:start="5:38" pos:end="5:40">= <expr pos:start="5:40" pos:end="5:40"><literal type="number" pos:start="5:40" pos:end="5:40">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">uint32_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">pal</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:21">rp</name></decl>, <decl pos:start="11:24" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:19"><modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:26">gp</name></decl>, <decl pos:start="11:29" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:19"><modifier pos:start="11:29" pos:end="11:29">*</modifier></type><name pos:start="11:30" pos:end="11:31">bp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:34"><expr pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:7">tag</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:33"><name pos:start="15:11" pos:end="15:20">tget_short</name><argument_list pos:start="15:21" pos:end="15:33">(<argument pos:start="15:22" pos:end="15:25"><expr pos:start="15:22" pos:end="15:25"><operator pos:start="15:22" pos:end="15:22">&amp;</operator><name pos:start="15:23" pos:end="15:25">buf</name></expr></argument>, <argument pos:start="15:28" pos:end="15:32"><expr pos:start="15:28" pos:end="15:32"><name pos:start="15:28" pos:end="15:32"><name pos:start="15:28" pos:end="15:28">s</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:32">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:8">type</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:34"><name pos:start="17:12" pos:end="17:21">tget_short</name><argument_list pos:start="17:22" pos:end="17:34">(<argument pos:start="17:23" pos:end="17:26"><expr pos:start="17:23" pos:end="17:26"><operator pos:start="17:23" pos:end="17:23">&amp;</operator><name pos:start="17:24" pos:end="17:26">buf</name></expr></argument>, <argument pos:start="17:29" pos:end="17:33"><expr pos:start="17:29" pos:end="17:33"><name pos:start="17:29" pos:end="17:33"><name pos:start="17:29" pos:end="17:29">s</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:33">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:9">count</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:34"><name pos:start="19:13" pos:end="19:21">tget_long</name><argument_list pos:start="19:22" pos:end="19:34">(<argument pos:start="19:23" pos:end="19:26"><expr pos:start="19:23" pos:end="19:26"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:26">buf</name></expr></argument>, <argument pos:start="19:29" pos:end="19:33"><expr pos:start="19:29" pos:end="19:33"><name pos:start="19:29" pos:end="19:33"><name pos:start="19:29" pos:end="19:29">s</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:33">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:7">off</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:32"><name pos:start="21:11" pos:end="21:19">tget_long</name><argument_list pos:start="21:20" pos:end="21:32">(<argument pos:start="21:21" pos:end="21:24"><expr pos:start="21:21" pos:end="21:24"><operator pos:start="21:21" pos:end="21:21">&amp;</operator><name pos:start="21:22" pos:end="21:24">buf</name></expr></argument>, <argument pos:start="21:27" pos:end="21:31"><expr pos:start="21:27" pos:end="21:31"><name pos:start="21:27" pos:end="21:31"><name pos:start="21:27" pos:end="21:27">s</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:31">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="75:5"><if pos:start="25:5" pos:end="67:5">if<condition pos:start="25:7" pos:end="25:18">(<expr pos:start="25:8" pos:end="25:17"><name pos:start="25:8" pos:end="25:12">count</name> <operator pos:start="25:14" pos:end="25:15">==</operator> <literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>)</condition><block pos:start="25:19" pos:end="67:5">{<block_content pos:start="27:9" pos:end="65:9">

        <switch pos:start="27:9" pos:end="65:9">switch<condition pos:start="27:15" pos:end="27:20">(<expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">type</name></expr>)</condition><block pos:start="27:21" pos:end="65:9">{<block_content pos:start="29:9" pos:end="63:30">

        <case pos:start="29:9" pos:end="29:23">case <expr pos:start="29:14" pos:end="29:22"><name pos:start="29:14" pos:end="29:22">TIFF_BYTE</name></expr>:</case>

        <case pos:start="31:9" pos:end="31:24">case <expr pos:start="31:14" pos:end="31:23"><name pos:start="31:14" pos:end="31:23">TIFF_SHORT</name></expr>:</case>

            <expr_stmt pos:start="33:13" pos:end="33:21"><expr pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:15">buf</name> <operator pos:start="33:17" pos:end="33:18">-=</operator> <literal type="number" pos:start="33:20" pos:end="33:20">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:44"><expr pos:start="35:13" pos:end="35:43"><name pos:start="35:13" pos:end="35:17">value</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:43"><name pos:start="35:21" pos:end="35:24">tget</name><argument_list pos:start="35:25" pos:end="35:43">(<argument pos:start="35:26" pos:end="35:29"><expr pos:start="35:26" pos:end="35:29"><operator pos:start="35:26" pos:end="35:26">&amp;</operator><name pos:start="35:27" pos:end="35:29">buf</name></expr></argument>, <argument pos:start="35:32" pos:end="35:35"><expr pos:start="35:32" pos:end="35:35"><name pos:start="35:32" pos:end="35:35">type</name></expr></argument>, <argument pos:start="35:38" pos:end="35:42"><expr pos:start="35:38" pos:end="35:42"><name pos:start="35:38" pos:end="35:42"><name pos:start="35:38" pos:end="35:38">s</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:42">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:23"><expr pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:15">buf</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:22">NULL</name></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        <case pos:start="41:9" pos:end="41:23">case <expr pos:start="41:14" pos:end="41:22"><name pos:start="41:14" pos:end="41:22">TIFF_LONG</name></expr>:</case>

            <expr_stmt pos:start="43:13" pos:end="43:24"><expr pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:17">value</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:23">off</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:23"><expr pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:15">buf</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:22">NULL</name></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        <case pos:start="49:9" pos:end="49:25">case <expr pos:start="49:14" pos:end="49:24"><name pos:start="49:14" pos:end="49:24">TIFF_STRING</name></expr>:</case>

            <if_stmt pos:start="51:13" pos:end="57:13"><if pos:start="51:13" pos:end="57:13">if<condition pos:start="51:15" pos:end="51:26">(<expr pos:start="51:16" pos:end="51:25"><name pos:start="51:16" pos:end="51:20">count</name> <operator pos:start="51:22" pos:end="51:23">&lt;=</operator> <literal type="number" pos:start="51:25" pos:end="51:25">4</literal></expr>)</condition><block pos:start="51:27" pos:end="57:13">{<block_content pos:start="53:17" pos:end="55:22">

                <expr_stmt pos:start="53:17" pos:end="53:25"><expr pos:start="53:17" pos:end="53:24"><name pos:start="53:17" pos:end="53:19">buf</name> <operator pos:start="53:21" pos:end="53:22">-=</operator> <literal type="number" pos:start="53:24" pos:end="53:24">4</literal></expr>;</expr_stmt>

                <break pos:start="55:17" pos:end="55:22">break;</break>

            </block_content>}</block></if></if_stmt>

        <default pos:start="59:9" pos:end="59:16">default:</default>

            <expr_stmt pos:start="61:13" pos:end="61:23"><expr pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:17">value</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <operator pos:start="61:21" pos:end="61:21">-</operator><literal type="number" pos:start="61:22" pos:end="61:22">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:30"><expr pos:start="63:13" pos:end="63:29"><name pos:start="63:13" pos:end="63:15">buf</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:23">start</name> <operator pos:start="63:25" pos:end="63:25">+</operator> <name pos:start="63:27" pos:end="63:29">off</name></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></if><if type="elseif" pos:start="67:6" pos:end="71:5">else if<condition pos:start="67:13" pos:end="67:43">(<expr pos:start="67:14" pos:end="67:42"><name pos:start="67:14" pos:end="67:29"><name pos:start="67:14" pos:end="67:23">type_sizes</name><index pos:start="67:24" pos:end="67:29">[<expr pos:start="67:25" pos:end="67:28"><name pos:start="67:25" pos:end="67:28">type</name></expr>]</index></name> <operator pos:start="67:31" pos:end="67:31">*</operator> <name pos:start="67:33" pos:end="67:37">count</name> <operator pos:start="67:39" pos:end="67:40">&lt;=</operator> <literal type="number" pos:start="67:42" pos:end="67:42">4</literal></expr>)</condition><block pos:start="67:44" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:17">

        <expr_stmt pos:start="69:9" pos:end="69:17"><expr pos:start="69:9" pos:end="69:16"><name pos:start="69:9" pos:end="69:11">buf</name> <operator pos:start="69:13" pos:end="69:14">-=</operator> <literal type="number" pos:start="69:16" pos:end="69:16">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="71:6" pos:end="75:5">else<block pos:start="71:10" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:26">

        <expr_stmt pos:start="73:9" pos:end="73:26"><expr pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:11">buf</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <name pos:start="73:15" pos:end="73:19">start</name> <operator pos:start="73:21" pos:end="73:21">+</operator> <name pos:start="73:23" pos:end="73:25">off</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if<condition pos:start="79:7" pos:end="79:45">(<expr pos:start="79:8" pos:end="79:44"><name pos:start="79:8" pos:end="79:10">buf</name> <operator pos:start="79:12" pos:end="79:13">&amp;&amp;</operator> <operator pos:start="79:15" pos:end="79:15">(</operator><name pos:start="79:16" pos:end="79:35"><name pos:start="79:16" pos:end="79:18">buf</name> <argument_list type="generic" pos:start="79:20" pos:end="79:35">&lt; <argument pos:start="79:22" pos:end="79:33"><expr pos:start="79:22" pos:end="79:33"><name pos:start="79:22" pos:end="79:26">start</name> <operator pos:start="79:28" pos:end="79:29">||</operator> <name pos:start="79:31" pos:end="79:33">buf</name></expr></argument> &gt;</argument_list></name> <name pos:start="79:37" pos:end="79:43">end_buf</name><operator pos:start="79:44" pos:end="79:44">)</operator></expr>)</condition><block pos:start="79:46" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:18">

        <expr_stmt pos:start="81:9" pos:end="81:87"><expr pos:start="81:9" pos:end="81:86"><call pos:start="81:9" pos:end="81:86"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:86">(<argument pos:start="81:16" pos:end="81:23"><expr pos:start="81:16" pos:end="81:23"><name pos:start="81:16" pos:end="81:23"><name pos:start="81:16" pos:end="81:16">s</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:23">avctx</name></name></expr></argument>, <argument pos:start="81:26" pos:end="81:37"><expr pos:start="81:26" pos:end="81:37"><name pos:start="81:26" pos:end="81:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:40" pos:end="81:85"><expr pos:start="81:40" pos:end="81:85"><literal type="string" pos:start="81:40" pos:end="81:85">"Tag referencing position outside the image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:18">return <expr pos:start="83:16" pos:end="83:17"><operator pos:start="83:16" pos:end="83:16">-</operator><literal type="number" pos:start="83:17" pos:end="83:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="89:5" pos:end="477:5">switch<condition pos:start="89:11" pos:end="89:15">(<expr pos:start="89:12" pos:end="89:14"><name pos:start="89:12" pos:end="89:14">tag</name></expr>)</condition><block pos:start="89:16" pos:end="477:5">{<block_content pos:start="91:5" pos:end="475:14">

    <case pos:start="91:5" pos:end="91:20">case <expr pos:start="91:10" pos:end="91:19"><name pos:start="91:10" pos:end="91:19">TIFF_WIDTH</name></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:25"><expr pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:16">width</name></name> <operator pos:start="93:18" pos:end="93:18">=</operator> <name pos:start="93:20" pos:end="93:24">value</name></expr>;</expr_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <case pos:start="97:5" pos:end="97:21">case <expr pos:start="97:10" pos:end="97:20"><name pos:start="97:10" pos:end="97:20">TIFF_HEIGHT</name></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:26"><expr pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:17"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:17">height</name></name> <operator pos:start="99:19" pos:end="99:19">=</operator> <name pos:start="99:21" pos:end="99:25">value</name></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:18">case <expr pos:start="103:10" pos:end="103:17"><name pos:start="103:10" pos:end="103:17">TIFF_BPP</name></expr>:</case>

        <if_stmt pos:start="105:9" pos:end="133:9"><if pos:start="105:9" pos:end="105:38">if<condition pos:start="105:11" pos:end="105:22">(<expr pos:start="105:12" pos:end="105:21"><name pos:start="105:12" pos:end="105:16">count</name> <operator pos:start="105:18" pos:end="105:19">==</operator> <literal type="number" pos:start="105:21" pos:end="105:21">1</literal></expr>)</condition><block type="pseudo" pos:start="105:24" pos:end="105:38"><block_content pos:start="105:24" pos:end="105:38"> <expr_stmt pos:start="105:24" pos:end="105:38"><expr pos:start="105:24" pos:end="105:37"><name pos:start="105:24" pos:end="105:29"><name pos:start="105:24" pos:end="105:24">s</name><operator pos:start="105:25" pos:end="105:26">-&gt;</operator><name pos:start="105:27" pos:end="105:29">bpp</name></name> <operator pos:start="105:31" pos:end="105:31">=</operator> <name pos:start="105:33" pos:end="105:37">value</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="107:9" pos:end="133:9">else<block pos:start="107:13" pos:end="133:9">{<block_content pos:start="109:13" pos:end="131:13">

            <switch pos:start="109:13" pos:end="131:13">switch<condition pos:start="109:19" pos:end="109:24">(<expr pos:start="109:20" pos:end="109:23"><name pos:start="109:20" pos:end="109:23">type</name></expr>)</condition><block pos:start="109:25" pos:end="131:13">{<block_content pos:start="111:13" pos:end="129:28">

            <case pos:start="111:13" pos:end="111:27">case <expr pos:start="111:18" pos:end="111:26"><name pos:start="111:18" pos:end="111:26">TIFF_BYTE</name></expr>:</case>

                <expr_stmt pos:start="113:17" pos:end="113:106"><expr pos:start="113:17" pos:end="113:105"><name pos:start="113:17" pos:end="113:22"><name pos:start="113:17" pos:end="113:17">s</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:22">bpp</name></name> <operator pos:start="113:24" pos:end="113:24">=</operator> <operator pos:start="113:26" pos:end="113:26">(</operator><name pos:start="113:27" pos:end="113:29">off</name> <operator pos:start="113:31" pos:end="113:31">&amp;</operator> <literal type="number" pos:start="113:33" pos:end="113:36">0xFF</literal><operator pos:start="113:37" pos:end="113:37">)</operator> <operator pos:start="113:39" pos:end="113:39">+</operator> <operator pos:start="113:41" pos:end="113:41">(</operator><operator pos:start="113:42" pos:end="113:42">(</operator><name pos:start="113:43" pos:end="113:45">off</name> <operator pos:start="113:47" pos:end="113:48">&gt;&gt;</operator> <literal type="number" pos:start="113:50" pos:end="113:50">8</literal><operator pos:start="113:51" pos:end="113:51">)</operator> <operator pos:start="113:53" pos:end="113:53">&amp;</operator> <literal type="number" pos:start="113:55" pos:end="113:58">0xFF</literal><operator pos:start="113:59" pos:end="113:59">)</operator> <operator pos:start="113:61" pos:end="113:61">+</operator> <operator pos:start="113:63" pos:end="113:63">(</operator><operator pos:start="113:64" pos:end="113:64">(</operator><name pos:start="113:65" pos:end="113:67">off</name> <operator pos:start="113:69" pos:end="113:70">&gt;&gt;</operator> <literal type="number" pos:start="113:72" pos:end="113:73">16</literal><operator pos:start="113:74" pos:end="113:74">)</operator> <operator pos:start="113:76" pos:end="113:76">&amp;</operator> <literal type="number" pos:start="113:78" pos:end="113:81">0xFF</literal><operator pos:start="113:82" pos:end="113:82">)</operator> <operator pos:start="113:84" pos:end="113:84">+</operator> <operator pos:start="113:86" pos:end="113:86">(</operator><operator pos:start="113:87" pos:end="113:87">(</operator><name pos:start="113:88" pos:end="113:90">off</name> <operator pos:start="113:92" pos:end="113:93">&gt;&gt;</operator> <literal type="number" pos:start="113:95" pos:end="113:96">24</literal><operator pos:start="113:97" pos:end="113:97">)</operator> <operator pos:start="113:99" pos:end="113:99">&amp;</operator> <literal type="number" pos:start="113:101" pos:end="113:104">0xFF</literal><operator pos:start="113:105" pos:end="113:105">)</operator></expr>;</expr_stmt>

                <break pos:start="115:17" pos:end="115:22">break;</break>

            <case pos:start="117:13" pos:end="117:28">case <expr pos:start="117:18" pos:end="117:27"><name pos:start="117:18" pos:end="117:27">TIFF_SHORT</name></expr>:</case>

            <case pos:start="119:13" pos:end="119:27">case <expr pos:start="119:18" pos:end="119:26"><name pos:start="119:18" pos:end="119:26">TIFF_LONG</name></expr>:</case>

                <expr_stmt pos:start="121:17" pos:end="121:27"><expr pos:start="121:17" pos:end="121:26"><name pos:start="121:17" pos:end="121:22"><name pos:start="121:17" pos:end="121:17">s</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:22">bpp</name></name> <operator pos:start="121:24" pos:end="121:24">=</operator> <literal type="number" pos:start="121:26" pos:end="121:26">0</literal></expr>;</expr_stmt>

                <for pos:start="123:17" pos:end="123:77">for<control pos:start="123:20" pos:end="123:42">(<init pos:start="123:21" pos:end="123:26"><expr pos:start="123:21" pos:end="123:25"><name pos:start="123:21" pos:end="123:21">i</name> <operator pos:start="123:23" pos:end="123:23">=</operator> <literal type="number" pos:start="123:25" pos:end="123:25">0</literal></expr>;</init> <condition pos:start="123:28" pos:end="123:37"><expr pos:start="123:28" pos:end="123:36"><name pos:start="123:28" pos:end="123:28">i</name> <operator pos:start="123:30" pos:end="123:30">&lt;</operator> <name pos:start="123:32" pos:end="123:36">count</name></expr>;</condition> <incr pos:start="123:39" pos:end="123:41"><expr pos:start="123:39" pos:end="123:41"><name pos:start="123:39" pos:end="123:39">i</name><operator pos:start="123:40" pos:end="123:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="123:44" pos:end="123:77"><block_content pos:start="123:44" pos:end="123:77"> <expr_stmt pos:start="123:44" pos:end="123:77"><expr pos:start="123:44" pos:end="123:76"><name pos:start="123:44" pos:end="123:49"><name pos:start="123:44" pos:end="123:44">s</name><operator pos:start="123:45" pos:end="123:46">-&gt;</operator><name pos:start="123:47" pos:end="123:49">bpp</name></name> <operator pos:start="123:51" pos:end="123:52">+=</operator> <call pos:start="123:54" pos:end="123:76"><name pos:start="123:54" pos:end="123:57">tget</name><argument_list pos:start="123:58" pos:end="123:76">(<argument pos:start="123:59" pos:end="123:62"><expr pos:start="123:59" pos:end="123:62"><operator pos:start="123:59" pos:end="123:59">&amp;</operator><name pos:start="123:60" pos:end="123:62">buf</name></expr></argument>, <argument pos:start="123:65" pos:end="123:68"><expr pos:start="123:65" pos:end="123:68"><name pos:start="123:65" pos:end="123:68">type</name></expr></argument>, <argument pos:start="123:71" pos:end="123:75"><expr pos:start="123:71" pos:end="123:75"><name pos:start="123:71" pos:end="123:75"><name pos:start="123:71" pos:end="123:71">s</name><operator pos:start="123:72" pos:end="123:73">-&gt;</operator><name pos:start="123:74" pos:end="123:75">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <break pos:start="125:17" pos:end="125:22">break;</break>

            <default pos:start="127:13" pos:end="127:20">default:</default>

                <expr_stmt pos:start="129:17" pos:end="129:28"><expr pos:start="129:17" pos:end="129:27"><name pos:start="129:17" pos:end="129:22"><name pos:start="129:17" pos:end="129:17">s</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:22">bpp</name></name> <operator pos:start="129:24" pos:end="129:24">=</operator> <operator pos:start="129:26" pos:end="129:26">-</operator><literal type="number" pos:start="129:27" pos:end="129:27">1</literal></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="135:9" pos:end="141:9"><if pos:start="135:9" pos:end="141:9">if<condition pos:start="135:11" pos:end="135:21">(<expr pos:start="135:12" pos:end="135:20"><name pos:start="135:12" pos:end="135:16">count</name> <operator pos:start="135:18" pos:end="135:18">&gt;</operator> <literal type="number" pos:start="135:20" pos:end="135:20">4</literal></expr>)</condition><block pos:start="135:22" pos:end="141:9">{<block_content pos:start="137:13" pos:end="139:22">

            <expr_stmt pos:start="137:13" pos:end="137:116"><expr pos:start="137:13" pos:end="137:115"><call pos:start="137:13" pos:end="137:115"><name pos:start="137:13" pos:end="137:18">av_log</name><argument_list pos:start="137:19" pos:end="137:115">(<argument pos:start="137:20" pos:end="137:27"><expr pos:start="137:20" pos:end="137:27"><name pos:start="137:20" pos:end="137:27"><name pos:start="137:20" pos:end="137:20">s</name><operator pos:start="137:21" pos:end="137:22">-&gt;</operator><name pos:start="137:23" pos:end="137:27">avctx</name></name></expr></argument>, <argument pos:start="137:30" pos:end="137:41"><expr pos:start="137:30" pos:end="137:41"><name pos:start="137:30" pos:end="137:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:44" pos:end="137:99"><expr pos:start="137:44" pos:end="137:99"><literal type="string" pos:start="137:44" pos:end="137:99">"This format is not supported (bpp=%d, %d components)\n"</literal></expr></argument>, <argument pos:start="137:102" pos:end="137:107"><expr pos:start="137:102" pos:end="137:107"><name pos:start="137:102" pos:end="137:107"><name pos:start="137:102" pos:end="137:102">s</name><operator pos:start="137:103" pos:end="137:104">-&gt;</operator><name pos:start="137:105" pos:end="137:107">bpp</name></name></expr></argument>, <argument pos:start="137:110" pos:end="137:114"><expr pos:start="137:110" pos:end="137:114"><name pos:start="137:110" pos:end="137:114">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="139:13" pos:end="139:22">return <expr pos:start="139:20" pos:end="139:21"><operator pos:start="139:20" pos:end="139:20">-</operator><literal type="number" pos:start="139:21" pos:end="139:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="143:9" pos:end="187:9">switch<condition pos:start="143:15" pos:end="143:33">(<expr pos:start="143:16" pos:end="143:32"><name pos:start="143:16" pos:end="143:21"><name pos:start="143:16" pos:end="143:16">s</name><operator pos:start="143:17" pos:end="143:18">-&gt;</operator><name pos:start="143:19" pos:end="143:21">bpp</name></name><operator pos:start="143:22" pos:end="143:22">*</operator><literal type="number" pos:start="143:23" pos:end="143:26">10</literal> <operator pos:start="143:26" pos:end="143:26">+</operator> <name pos:start="143:28" pos:end="143:32">count</name></expr>)</condition><block pos:start="143:34" pos:end="187:9">{<block_content pos:start="145:9" pos:end="185:22">

        <case pos:start="145:9" pos:end="145:16">case <expr pos:start="145:14" pos:end="145:15"><literal type="number" pos:start="145:14" pos:end="145:15">11</literal></expr>:</case>

            <expr_stmt pos:start="147:13" pos:end="147:50"><expr pos:start="147:13" pos:end="147:49"><name pos:start="147:13" pos:end="147:29"><name pos:start="147:13" pos:end="147:13">s</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:20">avctx</name><operator pos:start="147:21" pos:end="147:22">-&gt;</operator><name pos:start="147:23" pos:end="147:29">pix_fmt</name></name> <operator pos:start="147:31" pos:end="147:31">=</operator> <name pos:start="147:33" pos:end="147:49">PIX_FMT_MONOBLACK</name></expr>;</expr_stmt>

            <break pos:start="149:13" pos:end="149:18">break;</break>

        <case pos:start="151:9" pos:end="151:16">case <expr pos:start="151:14" pos:end="151:15"><literal type="number" pos:start="151:14" pos:end="151:15">81</literal></expr>:</case>

            <expr_stmt pos:start="153:13" pos:end="153:45"><expr pos:start="153:13" pos:end="153:44"><name pos:start="153:13" pos:end="153:29"><name pos:start="153:13" pos:end="153:13">s</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:20">avctx</name><operator pos:start="153:21" pos:end="153:22">-&gt;</operator><name pos:start="153:23" pos:end="153:29">pix_fmt</name></name> <operator pos:start="153:31" pos:end="153:31">=</operator> <name pos:start="153:33" pos:end="153:44">PIX_FMT_PAL8</name></expr>;</expr_stmt>

            <break pos:start="155:13" pos:end="155:18">break;</break>

        <case pos:start="157:9" pos:end="157:17">case <expr pos:start="157:14" pos:end="157:16"><literal type="number" pos:start="157:14" pos:end="157:16">243</literal></expr>:</case>

            <expr_stmt pos:start="159:13" pos:end="159:46"><expr pos:start="159:13" pos:end="159:45"><name pos:start="159:13" pos:end="159:29"><name pos:start="159:13" pos:end="159:13">s</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:20">avctx</name><operator pos:start="159:21" pos:end="159:22">-&gt;</operator><name pos:start="159:23" pos:end="159:29">pix_fmt</name></name> <operator pos:start="159:31" pos:end="159:31">=</operator> <name pos:start="159:33" pos:end="159:45">PIX_FMT_RGB24</name></expr>;</expr_stmt>

            <break pos:start="161:13" pos:end="161:18">break;</break>

        <case pos:start="163:9" pos:end="163:17">case <expr pos:start="163:14" pos:end="163:16"><literal type="number" pos:start="163:14" pos:end="163:16">161</literal></expr>:</case>

            <expr_stmt pos:start="165:13" pos:end="165:49"><expr pos:start="165:13" pos:end="165:48"><name pos:start="165:13" pos:end="165:29"><name pos:start="165:13" pos:end="165:13">s</name><operator pos:start="165:14" pos:end="165:15">-&gt;</operator><name pos:start="165:16" pos:end="165:20">avctx</name><operator pos:start="165:21" pos:end="165:22">-&gt;</operator><name pos:start="165:23" pos:end="165:29">pix_fmt</name></name> <operator pos:start="165:31" pos:end="165:31">=</operator> <name pos:start="165:33" pos:end="165:48">PIX_FMT_GRAY16BE</name></expr>;</expr_stmt>

            <break pos:start="167:13" pos:end="167:18">break;</break>

        <case pos:start="169:9" pos:end="169:17">case <expr pos:start="169:14" pos:end="169:16"><literal type="number" pos:start="169:14" pos:end="169:16">324</literal></expr>:</case>

            <expr_stmt pos:start="171:13" pos:end="171:45"><expr pos:start="171:13" pos:end="171:44"><name pos:start="171:13" pos:end="171:29"><name pos:start="171:13" pos:end="171:13">s</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:20">avctx</name><operator pos:start="171:21" pos:end="171:22">-&gt;</operator><name pos:start="171:23" pos:end="171:29">pix_fmt</name></name> <operator pos:start="171:31" pos:end="171:31">=</operator> <name pos:start="171:33" pos:end="171:44">PIX_FMT_RGBA</name></expr>;</expr_stmt>

            <break pos:start="173:13" pos:end="173:18">break;</break>

        <case pos:start="175:9" pos:end="175:17">case <expr pos:start="175:14" pos:end="175:16"><literal type="number" pos:start="175:14" pos:end="175:16">483</literal></expr>:</case>

            <expr_stmt pos:start="177:13" pos:end="177:74"><expr pos:start="177:13" pos:end="177:73"><name pos:start="177:13" pos:end="177:29"><name pos:start="177:13" pos:end="177:13">s</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:20">avctx</name><operator pos:start="177:21" pos:end="177:22">-&gt;</operator><name pos:start="177:23" pos:end="177:29">pix_fmt</name></name> <operator pos:start="177:31" pos:end="177:31">=</operator> <ternary pos:start="177:33" pos:end="177:73"><condition pos:start="177:33" pos:end="177:39"><expr pos:start="177:33" pos:end="177:37"><name pos:start="177:33" pos:end="177:37"><name pos:start="177:33" pos:end="177:33">s</name><operator pos:start="177:34" pos:end="177:35">-&gt;</operator><name pos:start="177:36" pos:end="177:37">le</name></name></expr> ?</condition><then pos:start="177:41" pos:end="177:55"> <expr pos:start="177:41" pos:end="177:55"><name pos:start="177:41" pos:end="177:55">PIX_FMT_RGB48LE</name></expr> </then><else pos:start="177:57" pos:end="177:73">: <expr pos:start="177:59" pos:end="177:73"><name pos:start="177:59" pos:end="177:73">PIX_FMT_RGB48BE</name></expr></else></ternary></expr>;</expr_stmt>

            <break pos:start="179:13" pos:end="179:18">break;</break>

        <default pos:start="181:9" pos:end="181:16">default:</default>

            <expr_stmt pos:start="183:13" pos:end="183:116"><expr pos:start="183:13" pos:end="183:115"><call pos:start="183:13" pos:end="183:115"><name pos:start="183:13" pos:end="183:18">av_log</name><argument_list pos:start="183:19" pos:end="183:115">(<argument pos:start="183:20" pos:end="183:27"><expr pos:start="183:20" pos:end="183:27"><name pos:start="183:20" pos:end="183:27"><name pos:start="183:20" pos:end="183:20">s</name><operator pos:start="183:21" pos:end="183:22">-&gt;</operator><name pos:start="183:23" pos:end="183:27">avctx</name></name></expr></argument>, <argument pos:start="183:30" pos:end="183:41"><expr pos:start="183:30" pos:end="183:41"><name pos:start="183:30" pos:end="183:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="183:44" pos:end="183:99"><expr pos:start="183:44" pos:end="183:99"><literal type="string" pos:start="183:44" pos:end="183:99">"This format is not supported (bpp=%d, %d components)\n"</literal></expr></argument>, <argument pos:start="183:102" pos:end="183:107"><expr pos:start="183:102" pos:end="183:107"><name pos:start="183:102" pos:end="183:107"><name pos:start="183:102" pos:end="183:102">s</name><operator pos:start="183:103" pos:end="183:104">-&gt;</operator><name pos:start="183:105" pos:end="183:107">bpp</name></name></expr></argument>, <argument pos:start="183:110" pos:end="183:114"><expr pos:start="183:110" pos:end="183:114"><name pos:start="183:110" pos:end="183:114">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="185:13" pos:end="185:22">return <expr pos:start="185:20" pos:end="185:21"><operator pos:start="185:20" pos:end="185:20">-</operator><literal type="number" pos:start="185:21" pos:end="185:21">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <if_stmt pos:start="189:9" pos:end="197:9"><if pos:start="189:9" pos:end="197:9">if<condition pos:start="189:11" pos:end="189:72">(<expr pos:start="189:12" pos:end="189:71"><name pos:start="189:12" pos:end="189:19"><name pos:start="189:12" pos:end="189:12">s</name><operator pos:start="189:13" pos:end="189:14">-&gt;</operator><name pos:start="189:15" pos:end="189:19">width</name></name> <operator pos:start="189:21" pos:end="189:22">!=</operator> <name pos:start="189:24" pos:end="189:38"><name pos:start="189:24" pos:end="189:24">s</name><operator pos:start="189:25" pos:end="189:26">-&gt;</operator><name pos:start="189:27" pos:end="189:31">avctx</name><operator pos:start="189:32" pos:end="189:33">-&gt;</operator><name pos:start="189:34" pos:end="189:38">width</name></name> <operator pos:start="189:40" pos:end="189:41">||</operator> <name pos:start="189:43" pos:end="189:51"><name pos:start="189:43" pos:end="189:43">s</name><operator pos:start="189:44" pos:end="189:45">-&gt;</operator><name pos:start="189:46" pos:end="189:51">height</name></name> <operator pos:start="189:53" pos:end="189:54">!=</operator> <name pos:start="189:56" pos:end="189:71"><name pos:start="189:56" pos:end="189:56">s</name><operator pos:start="189:57" pos:end="189:58">-&gt;</operator><name pos:start="189:59" pos:end="189:63">avctx</name><operator pos:start="189:64" pos:end="189:65">-&gt;</operator><name pos:start="189:66" pos:end="189:71">height</name></name></expr>)</condition><block pos:start="189:73" pos:end="197:9">{<block_content pos:start="191:13" pos:end="195:66">

            <if_stmt pos:start="191:13" pos:end="193:26"><if pos:start="191:13" pos:end="193:26">if<condition pos:start="191:15" pos:end="191:69">(<expr pos:start="191:16" pos:end="191:68"><call pos:start="191:16" pos:end="191:68"><name pos:start="191:16" pos:end="191:34">av_image_check_size</name><argument_list pos:start="191:35" pos:end="191:68">(<argument pos:start="191:36" pos:end="191:43"><expr pos:start="191:36" pos:end="191:43"><name pos:start="191:36" pos:end="191:43"><name pos:start="191:36" pos:end="191:36">s</name><operator pos:start="191:37" pos:end="191:38">-&gt;</operator><name pos:start="191:39" pos:end="191:43">width</name></name></expr></argument>, <argument pos:start="191:46" pos:end="191:54"><expr pos:start="191:46" pos:end="191:54"><name pos:start="191:46" pos:end="191:54"><name pos:start="191:46" pos:end="191:46">s</name><operator pos:start="191:47" pos:end="191:48">-&gt;</operator><name pos:start="191:49" pos:end="191:54">height</name></name></expr></argument>, <argument pos:start="191:57" pos:end="191:57"><expr pos:start="191:57" pos:end="191:57"><literal type="number" pos:start="191:57" pos:end="191:57">0</literal></expr></argument>, <argument pos:start="191:60" pos:end="191:67"><expr pos:start="191:60" pos:end="191:67"><name pos:start="191:60" pos:end="191:67"><name pos:start="191:60" pos:end="191:60">s</name><operator pos:start="191:61" pos:end="191:62">-&gt;</operator><name pos:start="191:63" pos:end="191:67">avctx</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="193:17" pos:end="193:26"><block_content pos:start="193:17" pos:end="193:26">

                <return pos:start="193:17" pos:end="193:26">return <expr pos:start="193:24" pos:end="193:25"><operator pos:start="193:24" pos:end="193:24">-</operator><literal type="number" pos:start="193:25" pos:end="193:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:66"><expr pos:start="195:13" pos:end="195:65"><call pos:start="195:13" pos:end="195:65"><name pos:start="195:13" pos:end="195:34">avcodec_set_dimensions</name><argument_list pos:start="195:35" pos:end="195:65">(<argument pos:start="195:36" pos:end="195:43"><expr pos:start="195:36" pos:end="195:43"><name pos:start="195:36" pos:end="195:43"><name pos:start="195:36" pos:end="195:36">s</name><operator pos:start="195:37" pos:end="195:38">-&gt;</operator><name pos:start="195:39" pos:end="195:43">avctx</name></name></expr></argument>, <argument pos:start="195:46" pos:end="195:53"><expr pos:start="195:46" pos:end="195:53"><name pos:start="195:46" pos:end="195:53"><name pos:start="195:46" pos:end="195:46">s</name><operator pos:start="195:47" pos:end="195:48">-&gt;</operator><name pos:start="195:49" pos:end="195:53">width</name></name></expr></argument>, <argument pos:start="195:56" pos:end="195:64"><expr pos:start="195:56" pos:end="195:64"><name pos:start="195:56" pos:end="195:64"><name pos:start="195:56" pos:end="195:56">s</name><operator pos:start="195:57" pos:end="195:58">-&gt;</operator><name pos:start="195:59" pos:end="195:64">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="199:9" pos:end="201:60"><if pos:start="199:9" pos:end="201:60">if<condition pos:start="199:11" pos:end="199:30">(<expr pos:start="199:12" pos:end="199:29"><name pos:start="199:12" pos:end="199:29"><name pos:start="199:12" pos:end="199:12">s</name><operator pos:start="199:13" pos:end="199:14">-&gt;</operator><name pos:start="199:15" pos:end="199:21">picture</name><operator pos:start="199:22" pos:end="199:22">.</operator><name pos:start="199:23" pos:end="199:26">data</name><index pos:start="199:27" pos:end="199:29">[<expr pos:start="199:28" pos:end="199:28"><literal type="number" pos:start="199:28" pos:end="199:28">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="201:13" pos:end="201:60"><block_content pos:start="201:13" pos:end="201:60">

            <expr_stmt pos:start="201:13" pos:end="201:60"><expr pos:start="201:13" pos:end="201:59"><call pos:start="201:13" pos:end="201:59"><name pos:start="201:13" pos:end="201:36"><name pos:start="201:13" pos:end="201:13">s</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:20">avctx</name><operator pos:start="201:21" pos:end="201:22">-&gt;</operator><name pos:start="201:23" pos:end="201:36">release_buffer</name></name><argument_list pos:start="201:37" pos:end="201:59">(<argument pos:start="201:38" pos:end="201:45"><expr pos:start="201:38" pos:end="201:45"><name pos:start="201:38" pos:end="201:45"><name pos:start="201:38" pos:end="201:38">s</name><operator pos:start="201:39" pos:end="201:40">-&gt;</operator><name pos:start="201:41" pos:end="201:45">avctx</name></name></expr></argument>, <argument pos:start="201:48" pos:end="201:58"><expr pos:start="201:48" pos:end="201:58"><operator pos:start="201:48" pos:end="201:48">&amp;</operator><name pos:start="201:49" pos:end="201:58"><name pos:start="201:49" pos:end="201:49">s</name><operator pos:start="201:50" pos:end="201:51">-&gt;</operator><name pos:start="201:52" pos:end="201:58">picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="203:9" pos:end="209:9"><if pos:start="203:9" pos:end="209:9">if<condition pos:start="203:11" pos:end="203:59">(<expr pos:start="203:12" pos:end="203:58"><call pos:start="203:12" pos:end="203:54"><name pos:start="203:12" pos:end="203:31"><name pos:start="203:12" pos:end="203:12">s</name><operator pos:start="203:13" pos:end="203:14">-&gt;</operator><name pos:start="203:15" pos:end="203:19">avctx</name><operator pos:start="203:20" pos:end="203:21">-&gt;</operator><name pos:start="203:22" pos:end="203:31">get_buffer</name></name><argument_list pos:start="203:32" pos:end="203:54">(<argument pos:start="203:33" pos:end="203:40"><expr pos:start="203:33" pos:end="203:40"><name pos:start="203:33" pos:end="203:40"><name pos:start="203:33" pos:end="203:33">s</name><operator pos:start="203:34" pos:end="203:35">-&gt;</operator><name pos:start="203:36" pos:end="203:40">avctx</name></name></expr></argument>, <argument pos:start="203:43" pos:end="203:53"><expr pos:start="203:43" pos:end="203:53"><operator pos:start="203:43" pos:end="203:43">&amp;</operator><name pos:start="203:44" pos:end="203:53"><name pos:start="203:44" pos:end="203:44">s</name><operator pos:start="203:45" pos:end="203:46">-&gt;</operator><name pos:start="203:47" pos:end="203:53">picture</name></name></expr></argument>)</argument_list></call> <operator pos:start="203:56" pos:end="203:56">&lt;</operator> <literal type="number" pos:start="203:58" pos:end="203:58">0</literal></expr>)</condition><block pos:start="203:60" pos:end="209:9">{<block_content pos:start="205:13" pos:end="207:22">

            <expr_stmt pos:start="205:13" pos:end="205:68"><expr pos:start="205:13" pos:end="205:67"><call pos:start="205:13" pos:end="205:67"><name pos:start="205:13" pos:end="205:18">av_log</name><argument_list pos:start="205:19" pos:end="205:67">(<argument pos:start="205:20" pos:end="205:27"><expr pos:start="205:20" pos:end="205:27"><name pos:start="205:20" pos:end="205:27"><name pos:start="205:20" pos:end="205:20">s</name><operator pos:start="205:21" pos:end="205:22">-&gt;</operator><name pos:start="205:23" pos:end="205:27">avctx</name></name></expr></argument>, <argument pos:start="205:30" pos:end="205:41"><expr pos:start="205:30" pos:end="205:41"><name pos:start="205:30" pos:end="205:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="205:44" pos:end="205:66"><expr pos:start="205:44" pos:end="205:66"><literal type="string" pos:start="205:44" pos:end="205:66">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="207:13" pos:end="207:22">return <expr pos:start="207:20" pos:end="207:21"><operator pos:start="207:20" pos:end="207:20">-</operator><literal type="number" pos:start="207:21" pos:end="207:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="211:9" pos:end="221:9"><if pos:start="211:9" pos:end="221:9">if<condition pos:start="211:11" pos:end="211:23">(<expr pos:start="211:12" pos:end="211:22"><name pos:start="211:12" pos:end="211:17"><name pos:start="211:12" pos:end="211:12">s</name><operator pos:start="211:13" pos:end="211:14">-&gt;</operator><name pos:start="211:15" pos:end="211:17">bpp</name></name> <operator pos:start="211:19" pos:end="211:20">==</operator> <literal type="number" pos:start="211:22" pos:end="211:22">8</literal></expr>)</condition><block pos:start="211:24" pos:end="221:9">{<block_content pos:start="215:13" pos:end="219:38">

            <comment type="block" pos:start="213:13" pos:end="213:44">/* make default grayscale pal */</comment>

            <expr_stmt pos:start="215:13" pos:end="215:50"><expr pos:start="215:13" pos:end="215:49"><name pos:start="215:13" pos:end="215:15">pal</name> <operator pos:start="215:17" pos:end="215:17">=</operator> <operator pos:start="215:19" pos:end="215:19">(</operator><name pos:start="215:20" pos:end="215:27">uint32_t</name> <operator pos:start="215:29" pos:end="215:29">*</operator><operator pos:start="215:30" pos:end="215:30">)</operator> <name pos:start="215:32" pos:end="215:49"><name pos:start="215:32" pos:end="215:32">s</name><operator pos:start="215:33" pos:end="215:34">-&gt;</operator><name pos:start="215:35" pos:end="215:41">picture</name><operator pos:start="215:42" pos:end="215:42">.</operator><name pos:start="215:43" pos:end="215:46">data</name><index pos:start="215:47" pos:end="215:49">[<expr pos:start="215:48" pos:end="215:48"><literal type="number" pos:start="215:48" pos:end="215:48">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="217:13" pos:end="219:38">for<control pos:start="217:16" pos:end="217:36">(<init pos:start="217:17" pos:end="217:22"><expr pos:start="217:17" pos:end="217:21"><name pos:start="217:17" pos:end="217:17">i</name> <operator pos:start="217:19" pos:end="217:19">=</operator> <literal type="number" pos:start="217:21" pos:end="217:21">0</literal></expr>;</init> <condition pos:start="217:24" pos:end="217:31"><expr pos:start="217:24" pos:end="217:30"><name pos:start="217:24" pos:end="217:24">i</name> <operator pos:start="217:26" pos:end="217:26">&lt;</operator> <literal type="number" pos:start="217:28" pos:end="217:30">256</literal></expr>;</condition> <incr pos:start="217:33" pos:end="217:35"><expr pos:start="217:33" pos:end="217:35"><name pos:start="217:33" pos:end="217:33">i</name><operator pos:start="217:34" pos:end="217:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="219:17" pos:end="219:38"><block_content pos:start="219:17" pos:end="219:38">

                <expr_stmt pos:start="219:17" pos:end="219:38"><expr pos:start="219:17" pos:end="219:37"><name pos:start="219:17" pos:end="219:22"><name pos:start="219:17" pos:end="219:19">pal</name><index pos:start="219:20" pos:end="219:22">[<expr pos:start="219:21" pos:end="219:21"><name pos:start="219:21" pos:end="219:21">i</name></expr>]</index></name> <operator pos:start="219:24" pos:end="219:24">=</operator> <name pos:start="219:26" pos:end="219:26">i</name> <operator pos:start="219:28" pos:end="219:28">*</operator> <literal type="number" pos:start="219:30" pos:end="219:37">0x010101</literal></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

        <break pos:start="223:9" pos:end="223:14">break;</break>

    <case pos:start="225:5" pos:end="225:20">case <expr pos:start="225:10" pos:end="225:19"><name pos:start="225:10" pos:end="225:19">TIFF_COMPR</name></expr>:</case>

        <expr_stmt pos:start="227:9" pos:end="227:25"><expr pos:start="227:9" pos:end="227:24"><name pos:start="227:9" pos:end="227:16"><name pos:start="227:9" pos:end="227:9">s</name><operator pos:start="227:10" pos:end="227:11">-&gt;</operator><name pos:start="227:12" pos:end="227:16">compr</name></name> <operator pos:start="227:18" pos:end="227:18">=</operator> <name pos:start="227:20" pos:end="227:24">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:25"><expr pos:start="229:9" pos:end="229:24"><name pos:start="229:9" pos:end="229:20"><name pos:start="229:9" pos:end="229:9">s</name><operator pos:start="229:10" pos:end="229:11">-&gt;</operator><name pos:start="229:12" pos:end="229:20">predictor</name></name> <operator pos:start="229:22" pos:end="229:22">=</operator> <literal type="number" pos:start="229:24" pos:end="229:24">0</literal></expr>;</expr_stmt>

        <switch pos:start="231:9" pos:end="281:9">switch<condition pos:start="231:15" pos:end="231:24">(<expr pos:start="231:16" pos:end="231:23"><name pos:start="231:16" pos:end="231:23"><name pos:start="231:16" pos:end="231:16">s</name><operator pos:start="231:17" pos:end="231:18">-&gt;</operator><name pos:start="231:19" pos:end="231:23">compr</name></name></expr>)</condition><block pos:start="231:25" pos:end="281:9">{<block_content pos:start="233:9" pos:end="279:22">

        <case pos:start="233:9" pos:end="233:22">case <expr pos:start="233:14" pos:end="233:21"><name pos:start="233:14" pos:end="233:21">TIFF_RAW</name></expr>:</case>

        <case pos:start="235:9" pos:end="235:27">case <expr pos:start="235:14" pos:end="235:26"><name pos:start="235:14" pos:end="235:26">TIFF_PACKBITS</name></expr>:</case>

        <case pos:start="237:9" pos:end="237:22">case <expr pos:start="237:14" pos:end="237:21"><name pos:start="237:14" pos:end="237:21">TIFF_LZW</name></expr>:</case>

        <case pos:start="239:9" pos:end="239:28">case <expr pos:start="239:14" pos:end="239:27"><name pos:start="239:14" pos:end="239:27">TIFF_CCITT_RLE</name></expr>:</case>

            <break pos:start="241:13" pos:end="241:18">break;</break>

        <case pos:start="243:9" pos:end="243:21">case <expr pos:start="243:14" pos:end="243:20"><name pos:start="243:14" pos:end="243:20">TIFF_G3</name></expr>:</case>

        <case pos:start="245:9" pos:end="245:21">case <expr pos:start="245:14" pos:end="245:20"><name pos:start="245:14" pos:end="245:20">TIFF_G4</name></expr>:</case>

            <expr_stmt pos:start="247:13" pos:end="247:28"><expr pos:start="247:13" pos:end="247:27"><name pos:start="247:13" pos:end="247:23"><name pos:start="247:13" pos:end="247:13">s</name><operator pos:start="247:14" pos:end="247:15">-&gt;</operator><name pos:start="247:16" pos:end="247:23">fax_opts</name></name> <operator pos:start="247:25" pos:end="247:25">=</operator> <literal type="number" pos:start="247:27" pos:end="247:27">0</literal></expr>;</expr_stmt>

            <break pos:start="249:13" pos:end="249:18">break;</break>

        <case pos:start="251:9" pos:end="251:26">case <expr pos:start="251:14" pos:end="251:25"><name pos:start="251:14" pos:end="251:25">TIFF_DEFLATE</name></expr>:</case>

        <case pos:start="253:9" pos:end="256:0">case <expr pos:start="253:14" pos:end="253:31"><name pos:start="253:14" pos:end="253:31">TIFF_ADOBE_DEFLATE</name></expr>:</case>

<cpp:if pos:start="255:1" pos:end="255:15">#<cpp:directive pos:start="255:2" pos:end="255:3">if</cpp:directive> <expr pos:start="255:5" pos:end="255:15"><name pos:start="255:5" pos:end="255:15">CONFIG_ZLIB</name></expr></cpp:if>

            <break pos:start="257:13" pos:end="260:0">break;</break>

<cpp:else pos:start="259:1" pos:end="259:5">#<cpp:directive pos:start="259:2" pos:end="259:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="261:13" pos:end="261:78"><expr pos:start="261:13" pos:end="261:77"><call pos:start="261:13" pos:end="261:77"><name pos:start="261:13" pos:end="261:18">av_log</name><argument_list pos:start="261:19" pos:end="261:77">(<argument pos:start="261:20" pos:end="261:27"><expr pos:start="261:20" pos:end="261:27"><name pos:start="261:20" pos:end="261:27"><name pos:start="261:20" pos:end="261:20">s</name><operator pos:start="261:21" pos:end="261:22">-&gt;</operator><name pos:start="261:23" pos:end="261:27">avctx</name></name></expr></argument>, <argument pos:start="261:30" pos:end="261:41"><expr pos:start="261:30" pos:end="261:41"><name pos:start="261:30" pos:end="261:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="261:44" pos:end="261:76"><expr pos:start="261:44" pos:end="261:76"><literal type="string" pos:start="261:44" pos:end="261:76">"Deflate: ZLib not compiled in\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="263:13" pos:end="266:0">return <expr pos:start="263:20" pos:end="263:21"><operator pos:start="263:20" pos:end="263:20">-</operator><literal type="number" pos:start="263:21" pos:end="263:21">1</literal></expr>;</return>

<cpp:endif pos:start="265:1" pos:end="265:6">#<cpp:directive pos:start="265:2" pos:end="265:6">endif</cpp:directive></cpp:endif>

        <case pos:start="267:9" pos:end="267:23">case <expr pos:start="267:14" pos:end="267:22"><name pos:start="267:14" pos:end="267:22">TIFF_JPEG</name></expr>:</case>

        <case pos:start="269:9" pos:end="269:26">case <expr pos:start="269:14" pos:end="269:25"><name pos:start="269:14" pos:end="269:25">TIFF_NEWJPEG</name></expr>:</case>

            <expr_stmt pos:start="271:13" pos:end="271:82"><expr pos:start="271:13" pos:end="271:81"><call pos:start="271:13" pos:end="271:81"><name pos:start="271:13" pos:end="271:18">av_log</name><argument_list pos:start="271:19" pos:end="271:81">(<argument pos:start="271:20" pos:end="271:27"><expr pos:start="271:20" pos:end="271:27"><name pos:start="271:20" pos:end="271:27"><name pos:start="271:20" pos:end="271:20">s</name><operator pos:start="271:21" pos:end="271:22">-&gt;</operator><name pos:start="271:23" pos:end="271:27">avctx</name></name></expr></argument>, <argument pos:start="271:30" pos:end="271:41"><expr pos:start="271:30" pos:end="271:41"><name pos:start="271:30" pos:end="271:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="271:44" pos:end="271:80"><expr pos:start="271:44" pos:end="271:80"><literal type="string" pos:start="271:44" pos:end="271:80">"JPEG compression is not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="273:13" pos:end="273:22">return <expr pos:start="273:20" pos:end="273:21"><operator pos:start="273:20" pos:end="273:20">-</operator><literal type="number" pos:start="273:21" pos:end="273:21">1</literal></expr>;</return>

        <default pos:start="275:9" pos:end="275:16">default:</default>

            <expr_stmt pos:start="277:13" pos:end="277:88"><expr pos:start="277:13" pos:end="277:87"><call pos:start="277:13" pos:end="277:87"><name pos:start="277:13" pos:end="277:18">av_log</name><argument_list pos:start="277:19" pos:end="277:87">(<argument pos:start="277:20" pos:end="277:27"><expr pos:start="277:20" pos:end="277:27"><name pos:start="277:20" pos:end="277:27"><name pos:start="277:20" pos:end="277:20">s</name><operator pos:start="277:21" pos:end="277:22">-&gt;</operator><name pos:start="277:23" pos:end="277:27">avctx</name></name></expr></argument>, <argument pos:start="277:30" pos:end="277:41"><expr pos:start="277:30" pos:end="277:41"><name pos:start="277:30" pos:end="277:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="277:44" pos:end="277:76"><expr pos:start="277:44" pos:end="277:76"><literal type="string" pos:start="277:44" pos:end="277:76">"Unknown compression method %i\n"</literal></expr></argument>, <argument pos:start="277:79" pos:end="277:86"><expr pos:start="277:79" pos:end="277:86"><name pos:start="277:79" pos:end="277:86"><name pos:start="277:79" pos:end="277:79">s</name><operator pos:start="277:80" pos:end="277:81">-&gt;</operator><name pos:start="277:82" pos:end="277:86">compr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="279:13" pos:end="279:22">return <expr pos:start="279:20" pos:end="279:21"><operator pos:start="279:20" pos:end="279:20">-</operator><literal type="number" pos:start="279:21" pos:end="279:21">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <break pos:start="283:9" pos:end="283:14">break;</break>

    <case pos:start="285:5" pos:end="285:27">case <expr pos:start="285:10" pos:end="285:26"><name pos:start="285:10" pos:end="285:26">TIFF_ROWSPERSTRIP</name></expr>:</case>

        <if_stmt pos:start="287:9" pos:end="289:37"><if pos:start="287:9" pos:end="289:37">if<condition pos:start="287:11" pos:end="287:44">(<expr pos:start="287:12" pos:end="287:43"><name pos:start="287:12" pos:end="287:15">type</name> <operator pos:start="287:17" pos:end="287:18">==</operator> <name pos:start="287:20" pos:end="287:28">TIFF_LONG</name> <operator pos:start="287:30" pos:end="287:31">&amp;&amp;</operator> <name pos:start="287:33" pos:end="287:37">value</name> <operator pos:start="287:39" pos:end="287:40">==</operator> <operator pos:start="287:42" pos:end="287:42">-</operator><literal type="number" pos:start="287:43" pos:end="287:43">1</literal></expr>)</condition><block type="pseudo" pos:start="289:13" pos:end="289:37"><block_content pos:start="289:13" pos:end="289:37">

            <expr_stmt pos:start="289:13" pos:end="289:37"><expr pos:start="289:13" pos:end="289:36"><name pos:start="289:13" pos:end="289:17">value</name> <operator pos:start="289:19" pos:end="289:19">=</operator> <name pos:start="289:21" pos:end="289:36"><name pos:start="289:21" pos:end="289:21">s</name><operator pos:start="289:22" pos:end="289:23">-&gt;</operator><name pos:start="289:24" pos:end="289:28">avctx</name><operator pos:start="289:29" pos:end="289:30">-&gt;</operator><name pos:start="289:31" pos:end="289:36">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="291:9" pos:end="297:9"><if pos:start="291:9" pos:end="297:9">if<condition pos:start="291:11" pos:end="291:21">(<expr pos:start="291:12" pos:end="291:20"><name pos:start="291:12" pos:end="291:16">value</name> <operator pos:start="291:18" pos:end="291:18">&lt;</operator> <literal type="number" pos:start="291:20" pos:end="291:20">1</literal></expr>)</condition><block pos:start="291:22" pos:end="297:9">{<block_content pos:start="293:13" pos:end="295:22">

            <expr_stmt pos:start="293:13" pos:end="293:82"><expr pos:start="293:13" pos:end="293:81"><call pos:start="293:13" pos:end="293:81"><name pos:start="293:13" pos:end="293:18">av_log</name><argument_list pos:start="293:19" pos:end="293:81">(<argument pos:start="293:20" pos:end="293:27"><expr pos:start="293:20" pos:end="293:27"><name pos:start="293:20" pos:end="293:27"><name pos:start="293:20" pos:end="293:20">s</name><operator pos:start="293:21" pos:end="293:22">-&gt;</operator><name pos:start="293:23" pos:end="293:27">avctx</name></name></expr></argument>, <argument pos:start="293:30" pos:end="293:41"><expr pos:start="293:30" pos:end="293:41"><name pos:start="293:30" pos:end="293:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="293:44" pos:end="293:80"><expr pos:start="293:44" pos:end="293:80"><literal type="string" pos:start="293:44" pos:end="293:80">"Incorrect value of rows per strip\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="295:13" pos:end="295:22">return <expr pos:start="295:20" pos:end="295:21"><operator pos:start="295:20" pos:end="295:20">-</operator><literal type="number" pos:start="295:21" pos:end="295:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:23"><expr pos:start="299:9" pos:end="299:22"><name pos:start="299:9" pos:end="299:14"><name pos:start="299:9" pos:end="299:9">s</name><operator pos:start="299:10" pos:end="299:11">-&gt;</operator><name pos:start="299:12" pos:end="299:14">rps</name></name> <operator pos:start="299:16" pos:end="299:16">=</operator> <name pos:start="299:18" pos:end="299:22">value</name></expr>;</expr_stmt>

        <break pos:start="301:9" pos:end="301:14">break;</break>

    <case pos:start="303:5" pos:end="303:25">case <expr pos:start="303:10" pos:end="303:24"><name pos:start="303:10" pos:end="303:24">TIFF_STRIP_OFFS</name></expr>:</case>

        <if_stmt pos:start="305:9" pos:end="313:39"><if pos:start="305:9" pos:end="311:9">if<condition pos:start="305:11" pos:end="305:22">(<expr pos:start="305:12" pos:end="305:21"><name pos:start="305:12" pos:end="305:16">count</name> <operator pos:start="305:18" pos:end="305:19">==</operator> <literal type="number" pos:start="305:21" pos:end="305:21">1</literal></expr>)</condition><block pos:start="305:23" pos:end="311:9">{<block_content pos:start="307:13" pos:end="309:32">

            <expr_stmt pos:start="307:13" pos:end="307:32"><expr pos:start="307:13" pos:end="307:31"><name pos:start="307:13" pos:end="307:24"><name pos:start="307:13" pos:end="307:13">s</name><operator pos:start="307:14" pos:end="307:15">-&gt;</operator><name pos:start="307:16" pos:end="307:24">stripdata</name></name> <operator pos:start="307:26" pos:end="307:26">=</operator> <name pos:start="307:28" pos:end="307:31">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:32"><expr pos:start="309:13" pos:end="309:31"><name pos:start="309:13" pos:end="309:23"><name pos:start="309:13" pos:end="309:13">s</name><operator pos:start="309:14" pos:end="309:15">-&gt;</operator><name pos:start="309:16" pos:end="309:23">stripoff</name></name> <operator pos:start="309:25" pos:end="309:25">=</operator> <name pos:start="309:27" pos:end="309:31">value</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="311:10" pos:end="313:39">else<block type="pseudo" pos:start="313:13" pos:end="313:39"><block_content pos:start="313:13" pos:end="313:39">

            <expr_stmt pos:start="313:13" pos:end="313:39"><expr pos:start="313:13" pos:end="313:38"><name pos:start="313:13" pos:end="313:24"><name pos:start="313:13" pos:end="313:13">s</name><operator pos:start="313:14" pos:end="313:15">-&gt;</operator><name pos:start="313:16" pos:end="313:24">stripdata</name></name> <operator pos:start="313:26" pos:end="313:26">=</operator> <name pos:start="313:28" pos:end="313:32">start</name> <operator pos:start="313:34" pos:end="313:34">+</operator> <name pos:start="313:36" pos:end="313:38">off</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:26"><expr pos:start="315:9" pos:end="315:25"><name pos:start="315:9" pos:end="315:17"><name pos:start="315:9" pos:end="315:9">s</name><operator pos:start="315:10" pos:end="315:11">-&gt;</operator><name pos:start="315:12" pos:end="315:17">strips</name></name> <operator pos:start="315:19" pos:end="315:19">=</operator> <name pos:start="315:21" pos:end="315:25">count</name></expr>;</expr_stmt>

        <if_stmt pos:start="317:9" pos:end="317:46"><if pos:start="317:9" pos:end="317:46">if<condition pos:start="317:11" pos:end="317:26">(<expr pos:start="317:12" pos:end="317:25"><name pos:start="317:12" pos:end="317:20"><name pos:start="317:12" pos:end="317:12">s</name><operator pos:start="317:13" pos:end="317:14">-&gt;</operator><name pos:start="317:15" pos:end="317:20">strips</name></name> <operator pos:start="317:22" pos:end="317:23">==</operator> <literal type="number" pos:start="317:25" pos:end="317:25">1</literal></expr>)</condition><block type="pseudo" pos:start="317:28" pos:end="317:46"><block_content pos:start="317:28" pos:end="317:46"> <expr_stmt pos:start="317:28" pos:end="317:46"><expr pos:start="317:28" pos:end="317:45"><name pos:start="317:28" pos:end="317:33"><name pos:start="317:28" pos:end="317:28">s</name><operator pos:start="317:29" pos:end="317:30">-&gt;</operator><name pos:start="317:31" pos:end="317:33">rps</name></name> <operator pos:start="317:35" pos:end="317:35">=</operator> <name pos:start="317:37" pos:end="317:45"><name pos:start="317:37" pos:end="317:37">s</name><operator pos:start="317:38" pos:end="317:39">-&gt;</operator><name pos:start="317:40" pos:end="317:45">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="319:9" pos:end="319:22"><expr pos:start="319:9" pos:end="319:21"><name pos:start="319:9" pos:end="319:14"><name pos:start="319:9" pos:end="319:9">s</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:14">sot</name></name> <operator pos:start="319:16" pos:end="319:16">=</operator> <name pos:start="319:18" pos:end="319:21">type</name></expr>;</expr_stmt>

        <if_stmt pos:start="321:9" pos:end="327:9"><if pos:start="321:9" pos:end="327:9">if<condition pos:start="321:11" pos:end="321:34">(<expr pos:start="321:12" pos:end="321:33"><name pos:start="321:12" pos:end="321:23"><name pos:start="321:12" pos:end="321:12">s</name><operator pos:start="321:13" pos:end="321:14">-&gt;</operator><name pos:start="321:15" pos:end="321:23">stripdata</name></name> <operator pos:start="321:25" pos:end="321:25">&gt;</operator> <name pos:start="321:27" pos:end="321:33">end_buf</name></expr>)</condition><block pos:start="321:35" pos:end="327:9">{<block_content pos:start="323:13" pos:end="325:22">

            <expr_stmt pos:start="323:13" pos:end="323:91"><expr pos:start="323:13" pos:end="323:90"><call pos:start="323:13" pos:end="323:90"><name pos:start="323:13" pos:end="323:18">av_log</name><argument_list pos:start="323:19" pos:end="323:90">(<argument pos:start="323:20" pos:end="323:27"><expr pos:start="323:20" pos:end="323:27"><name pos:start="323:20" pos:end="323:27"><name pos:start="323:20" pos:end="323:20">s</name><operator pos:start="323:21" pos:end="323:22">-&gt;</operator><name pos:start="323:23" pos:end="323:27">avctx</name></name></expr></argument>, <argument pos:start="323:30" pos:end="323:41"><expr pos:start="323:30" pos:end="323:41"><name pos:start="323:30" pos:end="323:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="323:44" pos:end="323:89"><expr pos:start="323:44" pos:end="323:89"><literal type="string" pos:start="323:44" pos:end="323:89">"Tag referencing position outside the image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="325:13" pos:end="325:22">return <expr pos:start="325:20" pos:end="325:21"><operator pos:start="325:20" pos:end="325:20">-</operator><literal type="number" pos:start="325:21" pos:end="325:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="329:9" pos:end="329:14">break;</break>

    <case pos:start="331:5" pos:end="331:25">case <expr pos:start="331:10" pos:end="331:24"><name pos:start="331:10" pos:end="331:24">TIFF_STRIP_SIZE</name></expr>:</case>

        <if_stmt pos:start="333:9" pos:end="345:9"><if pos:start="333:9" pos:end="341:9">if<condition pos:start="333:11" pos:end="333:22">(<expr pos:start="333:12" pos:end="333:21"><name pos:start="333:12" pos:end="333:16">count</name> <operator pos:start="333:18" pos:end="333:19">==</operator> <literal type="number" pos:start="333:21" pos:end="333:21">1</literal></expr>)</condition><block pos:start="333:23" pos:end="341:9">{<block_content pos:start="335:13" pos:end="339:26">

            <expr_stmt pos:start="335:13" pos:end="335:33"><expr pos:start="335:13" pos:end="335:32"><name pos:start="335:13" pos:end="335:25"><name pos:start="335:13" pos:end="335:13">s</name><operator pos:start="335:14" pos:end="335:15">-&gt;</operator><name pos:start="335:16" pos:end="335:25">stripsizes</name></name> <operator pos:start="335:27" pos:end="335:27">=</operator> <name pos:start="335:29" pos:end="335:32">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:33"><expr pos:start="337:13" pos:end="337:32"><name pos:start="337:13" pos:end="337:24"><name pos:start="337:13" pos:end="337:13">s</name><operator pos:start="337:14" pos:end="337:15">-&gt;</operator><name pos:start="337:16" pos:end="337:24">stripsize</name></name> <operator pos:start="337:26" pos:end="337:26">=</operator> <name pos:start="337:28" pos:end="337:32">value</name></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:26"><expr pos:start="339:13" pos:end="339:25"><name pos:start="339:13" pos:end="339:21"><name pos:start="339:13" pos:end="339:13">s</name><operator pos:start="339:14" pos:end="339:15">-&gt;</operator><name pos:start="339:16" pos:end="339:21">strips</name></name> <operator pos:start="339:23" pos:end="339:23">=</operator> <literal type="number" pos:start="339:25" pos:end="339:25">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="341:10" pos:end="345:9">else<block pos:start="341:14" pos:end="345:9">{<block_content pos:start="343:13" pos:end="343:40">

            <expr_stmt pos:start="343:13" pos:end="343:40"><expr pos:start="343:13" pos:end="343:39"><name pos:start="343:13" pos:end="343:25"><name pos:start="343:13" pos:end="343:13">s</name><operator pos:start="343:14" pos:end="343:15">-&gt;</operator><name pos:start="343:16" pos:end="343:25">stripsizes</name></name> <operator pos:start="343:27" pos:end="343:27">=</operator> <name pos:start="343:29" pos:end="343:33">start</name> <operator pos:start="343:35" pos:end="343:35">+</operator> <name pos:start="343:37" pos:end="343:39">off</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="347:9" pos:end="347:26"><expr pos:start="347:9" pos:end="347:25"><name pos:start="347:9" pos:end="347:17"><name pos:start="347:9" pos:end="347:9">s</name><operator pos:start="347:10" pos:end="347:11">-&gt;</operator><name pos:start="347:12" pos:end="347:17">strips</name></name> <operator pos:start="347:19" pos:end="347:19">=</operator> <name pos:start="347:21" pos:end="347:25">count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="349:9" pos:end="349:25"><expr pos:start="349:9" pos:end="349:24"><name pos:start="349:9" pos:end="349:17"><name pos:start="349:9" pos:end="349:9">s</name><operator pos:start="349:10" pos:end="349:11">-&gt;</operator><name pos:start="349:12" pos:end="349:17">sstype</name></name> <operator pos:start="349:19" pos:end="349:19">=</operator> <name pos:start="349:21" pos:end="349:24">type</name></expr>;</expr_stmt>

        <if_stmt pos:start="351:9" pos:end="357:9"><if pos:start="351:9" pos:end="357:9">if<condition pos:start="351:11" pos:end="351:35">(<expr pos:start="351:12" pos:end="351:34"><name pos:start="351:12" pos:end="351:24"><name pos:start="351:12" pos:end="351:12">s</name><operator pos:start="351:13" pos:end="351:14">-&gt;</operator><name pos:start="351:15" pos:end="351:24">stripsizes</name></name> <operator pos:start="351:26" pos:end="351:26">&gt;</operator> <name pos:start="351:28" pos:end="351:34">end_buf</name></expr>)</condition><block pos:start="351:36" pos:end="357:9">{<block_content pos:start="353:13" pos:end="355:22">

            <expr_stmt pos:start="353:13" pos:end="353:91"><expr pos:start="353:13" pos:end="353:90"><call pos:start="353:13" pos:end="353:90"><name pos:start="353:13" pos:end="353:18">av_log</name><argument_list pos:start="353:19" pos:end="353:90">(<argument pos:start="353:20" pos:end="353:27"><expr pos:start="353:20" pos:end="353:27"><name pos:start="353:20" pos:end="353:27"><name pos:start="353:20" pos:end="353:20">s</name><operator pos:start="353:21" pos:end="353:22">-&gt;</operator><name pos:start="353:23" pos:end="353:27">avctx</name></name></expr></argument>, <argument pos:start="353:30" pos:end="353:41"><expr pos:start="353:30" pos:end="353:41"><name pos:start="353:30" pos:end="353:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="353:44" pos:end="353:89"><expr pos:start="353:44" pos:end="353:89"><literal type="string" pos:start="353:44" pos:end="353:89">"Tag referencing position outside the image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="355:13" pos:end="355:22">return <expr pos:start="355:20" pos:end="355:21"><operator pos:start="355:20" pos:end="355:20">-</operator><literal type="number" pos:start="355:21" pos:end="355:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="359:9" pos:end="359:14">break;</break>

    <case pos:start="361:5" pos:end="361:24">case <expr pos:start="361:10" pos:end="361:23"><name pos:start="361:10" pos:end="361:23">TIFF_PREDICTOR</name></expr>:</case>

        <expr_stmt pos:start="363:9" pos:end="363:29"><expr pos:start="363:9" pos:end="363:28"><name pos:start="363:9" pos:end="363:20"><name pos:start="363:9" pos:end="363:9">s</name><operator pos:start="363:10" pos:end="363:11">-&gt;</operator><name pos:start="363:12" pos:end="363:20">predictor</name></name> <operator pos:start="363:22" pos:end="363:22">=</operator> <name pos:start="363:24" pos:end="363:28">value</name></expr>;</expr_stmt>

        <break pos:start="365:9" pos:end="365:14">break;</break>

    <case pos:start="367:5" pos:end="367:21">case <expr pos:start="367:10" pos:end="367:20"><name pos:start="367:10" pos:end="367:20">TIFF_INVERT</name></expr>:</case>

        <switch pos:start="369:9" pos:end="395:9">switch<condition pos:start="369:15" pos:end="369:21">(<expr pos:start="369:16" pos:end="369:20"><name pos:start="369:16" pos:end="369:20">value</name></expr>)</condition><block pos:start="369:22" pos:end="395:9">{<block_content pos:start="371:9" pos:end="393:22">

        <case pos:start="371:9" pos:end="371:15">case <expr pos:start="371:14" pos:end="371:14"><literal type="number" pos:start="371:14" pos:end="371:14">0</literal></expr>:</case>

            <expr_stmt pos:start="373:13" pos:end="373:26"><expr pos:start="373:13" pos:end="373:25"><name pos:start="373:13" pos:end="373:21"><name pos:start="373:13" pos:end="373:13">s</name><operator pos:start="373:14" pos:end="373:15">-&gt;</operator><name pos:start="373:16" pos:end="373:21">invert</name></name> <operator pos:start="373:23" pos:end="373:23">=</operator> <literal type="number" pos:start="373:25" pos:end="373:25">1</literal></expr>;</expr_stmt>

            <break pos:start="375:13" pos:end="375:18">break;</break>

        <case pos:start="377:9" pos:end="377:15">case <expr pos:start="377:14" pos:end="377:14"><literal type="number" pos:start="377:14" pos:end="377:14">1</literal></expr>:</case>

            <expr_stmt pos:start="379:13" pos:end="379:26"><expr pos:start="379:13" pos:end="379:25"><name pos:start="379:13" pos:end="379:21"><name pos:start="379:13" pos:end="379:13">s</name><operator pos:start="379:14" pos:end="379:15">-&gt;</operator><name pos:start="379:16" pos:end="379:21">invert</name></name> <operator pos:start="379:23" pos:end="379:23">=</operator> <literal type="number" pos:start="379:25" pos:end="379:25">0</literal></expr>;</expr_stmt>

            <break pos:start="381:13" pos:end="381:18">break;</break>

        <case pos:start="383:9" pos:end="383:15">case <expr pos:start="383:14" pos:end="383:14"><literal type="number" pos:start="383:14" pos:end="383:14">2</literal></expr>:</case>

        <case pos:start="385:9" pos:end="385:15">case <expr pos:start="385:14" pos:end="385:14"><literal type="number" pos:start="385:14" pos:end="385:14">3</literal></expr>:</case>

            <break pos:start="387:13" pos:end="387:18">break;</break>

        <default pos:start="389:9" pos:end="389:16">default:</default>

            <expr_stmt pos:start="391:13" pos:end="391:86"><expr pos:start="391:13" pos:end="391:85"><call pos:start="391:13" pos:end="391:85"><name pos:start="391:13" pos:end="391:18">av_log</name><argument_list pos:start="391:19" pos:end="391:85">(<argument pos:start="391:20" pos:end="391:27"><expr pos:start="391:20" pos:end="391:27"><name pos:start="391:20" pos:end="391:27"><name pos:start="391:20" pos:end="391:20">s</name><operator pos:start="391:21" pos:end="391:22">-&gt;</operator><name pos:start="391:23" pos:end="391:27">avctx</name></name></expr></argument>, <argument pos:start="391:30" pos:end="391:41"><expr pos:start="391:30" pos:end="391:41"><name pos:start="391:30" pos:end="391:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="391:44" pos:end="391:77"><expr pos:start="391:44" pos:end="391:77"><literal type="string" pos:start="391:44" pos:end="391:77">"Color mode %d is not supported\n"</literal></expr></argument>, <argument pos:start="391:80" pos:end="391:84"><expr pos:start="391:80" pos:end="391:84"><name pos:start="391:80" pos:end="391:84">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="393:13" pos:end="393:22">return <expr pos:start="393:20" pos:end="393:21"><operator pos:start="393:20" pos:end="393:20">-</operator><literal type="number" pos:start="393:21" pos:end="393:21">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <break pos:start="397:9" pos:end="397:14">break;</break>

    <case pos:start="399:5" pos:end="399:25">case <expr pos:start="399:10" pos:end="399:24"><name pos:start="399:10" pos:end="399:24">TIFF_FILL_ORDER</name></expr>:</case>

        <if_stmt pos:start="401:9" pos:end="407:9"><if pos:start="401:9" pos:end="407:9">if<condition pos:start="401:11" pos:end="401:34">(<expr pos:start="401:12" pos:end="401:33"><name pos:start="401:12" pos:end="401:31"><name pos:start="401:12" pos:end="401:16">value</name> <argument_list type="generic" pos:start="401:18" pos:end="401:31">&lt; <argument pos:start="401:20" pos:end="401:29"><expr pos:start="401:20" pos:end="401:29"><literal type="number" pos:start="401:20" pos:end="401:20">1</literal> <operator pos:start="401:22" pos:end="401:23">||</operator> <name pos:start="401:25" pos:end="401:29">value</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="401:33" pos:end="401:33">2</literal></expr>)</condition><block pos:start="401:35" pos:end="407:9">{<block_content pos:start="403:13" pos:end="405:22">

            <expr_stmt pos:start="403:13" pos:end="403:102"><expr pos:start="403:13" pos:end="403:101"><call pos:start="403:13" pos:end="403:101"><name pos:start="403:13" pos:end="403:18">av_log</name><argument_list pos:start="403:19" pos:end="403:101">(<argument pos:start="403:20" pos:end="403:27"><expr pos:start="403:20" pos:end="403:27"><name pos:start="403:20" pos:end="403:27"><name pos:start="403:20" pos:end="403:20">s</name><operator pos:start="403:21" pos:end="403:22">-&gt;</operator><name pos:start="403:23" pos:end="403:27">avctx</name></name></expr></argument>, <argument pos:start="403:30" pos:end="403:41"><expr pos:start="403:30" pos:end="403:41"><name pos:start="403:30" pos:end="403:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="403:44" pos:end="403:93"><expr pos:start="403:44" pos:end="403:93"><literal type="string" pos:start="403:44" pos:end="403:93">"Unknown FillOrder value %d, trying default one\n"</literal></expr></argument>, <argument pos:start="403:96" pos:end="403:100"><expr pos:start="403:96" pos:end="403:100"><name pos:start="403:96" pos:end="403:100">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="405:13" pos:end="405:22"><expr pos:start="405:13" pos:end="405:21"><name pos:start="405:13" pos:end="405:17">value</name> <operator pos:start="405:19" pos:end="405:19">=</operator> <literal type="number" pos:start="405:21" pos:end="405:21">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="409:9" pos:end="409:34"><expr pos:start="409:9" pos:end="409:33"><name pos:start="409:9" pos:end="409:21"><name pos:start="409:9" pos:end="409:9">s</name><operator pos:start="409:10" pos:end="409:11">-&gt;</operator><name pos:start="409:12" pos:end="409:21">fill_order</name></name> <operator pos:start="409:23" pos:end="409:23">=</operator> <name pos:start="409:25" pos:end="409:29">value</name> <operator pos:start="409:31" pos:end="409:31">-</operator> <literal type="number" pos:start="409:33" pos:end="409:33">1</literal></expr>;</expr_stmt>

        <break pos:start="411:9" pos:end="411:14">break;</break>

    <case pos:start="413:5" pos:end="413:18">case <expr pos:start="413:10" pos:end="413:17"><name pos:start="413:10" pos:end="413:17">TIFF_PAL</name></expr>:</case>

        <if_stmt pos:start="415:9" pos:end="421:9"><if pos:start="415:9" pos:end="421:9">if<condition pos:start="415:11" pos:end="415:45">(<expr pos:start="415:12" pos:end="415:44"><name pos:start="415:12" pos:end="415:28"><name pos:start="415:12" pos:end="415:12">s</name><operator pos:start="415:13" pos:end="415:14">-&gt;</operator><name pos:start="415:15" pos:end="415:19">avctx</name><operator pos:start="415:20" pos:end="415:21">-&gt;</operator><name pos:start="415:22" pos:end="415:28">pix_fmt</name></name> <operator pos:start="415:30" pos:end="415:31">!=</operator> <name pos:start="415:33" pos:end="415:44">PIX_FMT_PAL8</name></expr>)</condition><block pos:start="415:46" pos:end="421:9">{<block_content pos:start="417:13" pos:end="419:22">

            <expr_stmt pos:start="417:13" pos:end="417:94"><expr pos:start="417:13" pos:end="417:93"><call pos:start="417:13" pos:end="417:93"><name pos:start="417:13" pos:end="417:18">av_log</name><argument_list pos:start="417:19" pos:end="417:93">(<argument pos:start="417:20" pos:end="417:27"><expr pos:start="417:20" pos:end="417:27"><name pos:start="417:20" pos:end="417:27"><name pos:start="417:20" pos:end="417:20">s</name><operator pos:start="417:21" pos:end="417:22">-&gt;</operator><name pos:start="417:23" pos:end="417:27">avctx</name></name></expr></argument>, <argument pos:start="417:30" pos:end="417:41"><expr pos:start="417:30" pos:end="417:41"><name pos:start="417:30" pos:end="417:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="417:44" pos:end="417:92"><expr pos:start="417:44" pos:end="417:92"><literal type="string" pos:start="417:44" pos:end="417:92">"Palette met but this is not palettized format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="419:13" pos:end="419:22">return <expr pos:start="419:20" pos:end="419:21"><operator pos:start="419:20" pos:end="419:20">-</operator><literal type="number" pos:start="419:21" pos:end="419:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="423:9" pos:end="423:46"><expr pos:start="423:9" pos:end="423:45"><name pos:start="423:9" pos:end="423:11">pal</name> <operator pos:start="423:13" pos:end="423:13">=</operator> <operator pos:start="423:15" pos:end="423:15">(</operator><name pos:start="423:16" pos:end="423:23">uint32_t</name> <operator pos:start="423:25" pos:end="423:25">*</operator><operator pos:start="423:26" pos:end="423:26">)</operator> <name pos:start="423:28" pos:end="423:45"><name pos:start="423:28" pos:end="423:28">s</name><operator pos:start="423:29" pos:end="423:30">-&gt;</operator><name pos:start="423:31" pos:end="423:37">picture</name><operator pos:start="423:38" pos:end="423:38">.</operator><name pos:start="423:39" pos:end="423:42">data</name><index pos:start="423:43" pos:end="423:45">[<expr pos:start="423:44" pos:end="423:44"><literal type="number" pos:start="423:44" pos:end="423:44">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="425:9" pos:end="425:31"><expr pos:start="425:9" pos:end="425:30"><name pos:start="425:9" pos:end="425:11">off</name> <operator pos:start="425:13" pos:end="425:13">=</operator> <name pos:start="425:15" pos:end="425:30"><name pos:start="425:15" pos:end="425:24">type_sizes</name><index pos:start="425:25" pos:end="425:30">[<expr pos:start="425:26" pos:end="425:29"><name pos:start="425:26" pos:end="425:29">type</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="427:9" pos:end="427:17"><expr pos:start="427:9" pos:end="427:16"><name pos:start="427:9" pos:end="427:10">rp</name> <operator pos:start="427:12" pos:end="427:12">=</operator> <name pos:start="427:14" pos:end="427:16">buf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="429:9" pos:end="429:35"><expr pos:start="429:9" pos:end="429:34"><name pos:start="429:9" pos:end="429:10">gp</name> <operator pos:start="429:12" pos:end="429:12">=</operator> <name pos:start="429:14" pos:end="429:16">buf</name> <operator pos:start="429:18" pos:end="429:18">+</operator> <name pos:start="429:20" pos:end="429:24">count</name> <operator pos:start="429:26" pos:end="429:26">/</operator> <literal type="number" pos:start="429:28" pos:end="429:28">3</literal> <operator pos:start="429:30" pos:end="429:30">*</operator> <name pos:start="429:32" pos:end="429:34">off</name></expr>;</expr_stmt>

        <expr_stmt pos:start="431:9" pos:end="431:39"><expr pos:start="431:9" pos:end="431:38"><name pos:start="431:9" pos:end="431:10">bp</name> <operator pos:start="431:12" pos:end="431:12">=</operator> <name pos:start="431:14" pos:end="431:16">buf</name> <operator pos:start="431:18" pos:end="431:18">+</operator> <name pos:start="431:20" pos:end="431:24">count</name> <operator pos:start="431:26" pos:end="431:26">/</operator> <literal type="number" pos:start="431:28" pos:end="431:28">3</literal> <operator pos:start="431:30" pos:end="431:30">*</operator> <name pos:start="431:32" pos:end="431:34">off</name> <operator pos:start="431:36" pos:end="431:36">*</operator> <literal type="number" pos:start="431:38" pos:end="431:38">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="433:9" pos:end="433:42"><expr pos:start="433:9" pos:end="433:41"><name pos:start="433:9" pos:end="433:11">off</name> <operator pos:start="433:13" pos:end="433:13">=</operator> <operator pos:start="433:15" pos:end="433:15">(</operator><name pos:start="433:16" pos:end="433:31"><name pos:start="433:16" pos:end="433:25">type_sizes</name><index pos:start="433:26" pos:end="433:31">[<expr pos:start="433:27" pos:end="433:30"><name pos:start="433:27" pos:end="433:30">type</name></expr>]</index></name> <operator pos:start="433:33" pos:end="433:33">-</operator> <literal type="number" pos:start="433:35" pos:end="433:35">1</literal><operator pos:start="433:36" pos:end="433:36">)</operator> <operator pos:start="433:38" pos:end="433:39">&lt;&lt;</operator> <literal type="number" pos:start="433:41" pos:end="433:41">3</literal></expr>;</expr_stmt>

        <for pos:start="435:9" pos:end="445:9">for<control pos:start="435:12" pos:end="435:38">(<init pos:start="435:13" pos:end="435:18"><expr pos:start="435:13" pos:end="435:17"><name pos:start="435:13" pos:end="435:13">i</name> <operator pos:start="435:15" pos:end="435:15">=</operator> <literal type="number" pos:start="435:17" pos:end="435:17">0</literal></expr>;</init> <condition pos:start="435:20" pos:end="435:33"><expr pos:start="435:20" pos:end="435:32"><name pos:start="435:20" pos:end="435:20">i</name> <operator pos:start="435:22" pos:end="435:22">&lt;</operator> <name pos:start="435:24" pos:end="435:28">count</name> <operator pos:start="435:30" pos:end="435:30">/</operator> <literal type="number" pos:start="435:32" pos:end="435:32">3</literal></expr>;</condition> <incr pos:start="435:35" pos:end="435:37"><expr pos:start="435:35" pos:end="435:37"><name pos:start="435:35" pos:end="435:35">i</name><operator pos:start="435:36" pos:end="435:37">++</operator></expr></incr>)</control><block pos:start="435:39" pos:end="445:9">{<block_content pos:start="437:13" pos:end="443:23">

            <expr_stmt pos:start="437:13" pos:end="437:54"><expr pos:start="437:13" pos:end="437:53"><name pos:start="437:13" pos:end="437:13">j</name> <operator pos:start="437:15" pos:end="437:15">=</operator> <operator pos:start="437:17" pos:end="437:17">(</operator><call pos:start="437:18" pos:end="437:39"><name pos:start="437:18" pos:end="437:21">tget</name><argument_list pos:start="437:22" pos:end="437:39">(<argument pos:start="437:23" pos:end="437:25"><expr pos:start="437:23" pos:end="437:25"><operator pos:start="437:23" pos:end="437:23">&amp;</operator><name pos:start="437:24" pos:end="437:25">rp</name></expr></argument>, <argument pos:start="437:28" pos:end="437:31"><expr pos:start="437:28" pos:end="437:31"><name pos:start="437:28" pos:end="437:31">type</name></expr></argument>, <argument pos:start="437:34" pos:end="437:38"><expr pos:start="437:34" pos:end="437:38"><name pos:start="437:34" pos:end="437:38"><name pos:start="437:34" pos:end="437:34">s</name><operator pos:start="437:35" pos:end="437:36">-&gt;</operator><name pos:start="437:37" pos:end="437:38">le</name></name></expr></argument>)</argument_list></call> <operator pos:start="437:41" pos:end="437:42">&gt;&gt;</operator> <name pos:start="437:44" pos:end="437:46">off</name><operator pos:start="437:47" pos:end="437:47">)</operator> <operator pos:start="437:49" pos:end="437:50">&lt;&lt;</operator> <literal type="number" pos:start="437:52" pos:end="437:53">16</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="439:13" pos:end="439:54"><expr pos:start="439:13" pos:end="439:53"><name pos:start="439:13" pos:end="439:13">j</name> <operator pos:start="439:15" pos:end="439:16">|=</operator> <operator pos:start="439:18" pos:end="439:18">(</operator><call pos:start="439:19" pos:end="439:40"><name pos:start="439:19" pos:end="439:22">tget</name><argument_list pos:start="439:23" pos:end="439:40">(<argument pos:start="439:24" pos:end="439:26"><expr pos:start="439:24" pos:end="439:26"><operator pos:start="439:24" pos:end="439:24">&amp;</operator><name pos:start="439:25" pos:end="439:26">gp</name></expr></argument>, <argument pos:start="439:29" pos:end="439:32"><expr pos:start="439:29" pos:end="439:32"><name pos:start="439:29" pos:end="439:32">type</name></expr></argument>, <argument pos:start="439:35" pos:end="439:39"><expr pos:start="439:35" pos:end="439:39"><name pos:start="439:35" pos:end="439:39"><name pos:start="439:35" pos:end="439:35">s</name><operator pos:start="439:36" pos:end="439:37">-&gt;</operator><name pos:start="439:38" pos:end="439:39">le</name></name></expr></argument>)</argument_list></call> <operator pos:start="439:42" pos:end="439:43">&gt;&gt;</operator> <name pos:start="439:45" pos:end="439:47">off</name><operator pos:start="439:48" pos:end="439:48">)</operator> <operator pos:start="439:50" pos:end="439:51">&lt;&lt;</operator> <literal type="number" pos:start="439:53" pos:end="439:53">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="441:13" pos:end="441:47"><expr pos:start="441:13" pos:end="441:46"><name pos:start="441:13" pos:end="441:13">j</name> <operator pos:start="441:15" pos:end="441:16">|=</operator> <call pos:start="441:18" pos:end="441:39"><name pos:start="441:18" pos:end="441:21">tget</name><argument_list pos:start="441:22" pos:end="441:39">(<argument pos:start="441:23" pos:end="441:25"><expr pos:start="441:23" pos:end="441:25"><operator pos:start="441:23" pos:end="441:23">&amp;</operator><name pos:start="441:24" pos:end="441:25">bp</name></expr></argument>, <argument pos:start="441:28" pos:end="441:31"><expr pos:start="441:28" pos:end="441:31"><name pos:start="441:28" pos:end="441:31">type</name></expr></argument>, <argument pos:start="441:34" pos:end="441:38"><expr pos:start="441:34" pos:end="441:38"><name pos:start="441:34" pos:end="441:38"><name pos:start="441:34" pos:end="441:34">s</name><operator pos:start="441:35" pos:end="441:36">-&gt;</operator><name pos:start="441:37" pos:end="441:38">le</name></name></expr></argument>)</argument_list></call> <operator pos:start="441:41" pos:end="441:42">&gt;&gt;</operator> <name pos:start="441:44" pos:end="441:46">off</name></expr>;</expr_stmt>

            <expr_stmt pos:start="443:13" pos:end="443:23"><expr pos:start="443:13" pos:end="443:22"><name pos:start="443:13" pos:end="443:18"><name pos:start="443:13" pos:end="443:15">pal</name><index pos:start="443:16" pos:end="443:18">[<expr pos:start="443:17" pos:end="443:17"><name pos:start="443:17" pos:end="443:17">i</name></expr>]</index></name> <operator pos:start="443:20" pos:end="443:20">=</operator> <name pos:start="443:22" pos:end="443:22">j</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="447:9" pos:end="447:14">break;</break>

    <case pos:start="449:5" pos:end="449:21">case <expr pos:start="449:10" pos:end="449:20"><name pos:start="449:10" pos:end="449:20">TIFF_PLANAR</name></expr>:</case>

        <if_stmt pos:start="451:9" pos:end="457:9"><if pos:start="451:9" pos:end="457:9">if<condition pos:start="451:11" pos:end="451:22">(<expr pos:start="451:12" pos:end="451:21"><name pos:start="451:12" pos:end="451:16">value</name> <operator pos:start="451:18" pos:end="451:19">==</operator> <literal type="number" pos:start="451:21" pos:end="451:21">2</literal></expr>)</condition><block pos:start="451:23" pos:end="457:9">{<block_content pos:start="453:13" pos:end="455:22">

            <expr_stmt pos:start="453:13" pos:end="453:79"><expr pos:start="453:13" pos:end="453:78"><call pos:start="453:13" pos:end="453:78"><name pos:start="453:13" pos:end="453:18">av_log</name><argument_list pos:start="453:19" pos:end="453:78">(<argument pos:start="453:20" pos:end="453:27"><expr pos:start="453:20" pos:end="453:27"><name pos:start="453:20" pos:end="453:27"><name pos:start="453:20" pos:end="453:20">s</name><operator pos:start="453:21" pos:end="453:22">-&gt;</operator><name pos:start="453:23" pos:end="453:27">avctx</name></name></expr></argument>, <argument pos:start="453:30" pos:end="453:41"><expr pos:start="453:30" pos:end="453:41"><name pos:start="453:30" pos:end="453:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="453:44" pos:end="453:77"><expr pos:start="453:44" pos:end="453:77"><literal type="string" pos:start="453:44" pos:end="453:77">"Planar format is not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="455:13" pos:end="455:22">return <expr pos:start="455:20" pos:end="455:21"><operator pos:start="455:20" pos:end="455:20">-</operator><literal type="number" pos:start="455:21" pos:end="455:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="459:9" pos:end="459:14">break;</break>

    <case pos:start="461:5" pos:end="461:24">case <expr pos:start="461:10" pos:end="461:23"><name pos:start="461:10" pos:end="461:23">TIFF_T4OPTIONS</name></expr>:</case>

        <if_stmt pos:start="463:9" pos:end="465:32"><if pos:start="463:9" pos:end="465:32">if<condition pos:start="463:11" pos:end="463:31">(<expr pos:start="463:12" pos:end="463:30"><name pos:start="463:12" pos:end="463:19"><name pos:start="463:12" pos:end="463:12">s</name><operator pos:start="463:13" pos:end="463:14">-&gt;</operator><name pos:start="463:15" pos:end="463:19">compr</name></name> <operator pos:start="463:21" pos:end="463:22">==</operator> <name pos:start="463:24" pos:end="463:30">TIFF_G3</name></expr>)</condition><block type="pseudo" pos:start="465:13" pos:end="465:32"><block_content pos:start="465:13" pos:end="465:32">

            <expr_stmt pos:start="465:13" pos:end="465:32"><expr pos:start="465:13" pos:end="465:31"><name pos:start="465:13" pos:end="465:23"><name pos:start="465:13" pos:end="465:13">s</name><operator pos:start="465:14" pos:end="465:15">-&gt;</operator><name pos:start="465:16" pos:end="465:23">fax_opts</name></name> <operator pos:start="465:25" pos:end="465:25">=</operator> <name pos:start="465:27" pos:end="465:31">value</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="467:9" pos:end="467:14">break;</break>

    <case pos:start="469:5" pos:end="469:24">case <expr pos:start="469:10" pos:end="469:23"><name pos:start="469:10" pos:end="469:23">TIFF_T6OPTIONS</name></expr>:</case>

        <if_stmt pos:start="471:9" pos:end="473:32"><if pos:start="471:9" pos:end="473:32">if<condition pos:start="471:11" pos:end="471:31">(<expr pos:start="471:12" pos:end="471:30"><name pos:start="471:12" pos:end="471:19"><name pos:start="471:12" pos:end="471:12">s</name><operator pos:start="471:13" pos:end="471:14">-&gt;</operator><name pos:start="471:15" pos:end="471:19">compr</name></name> <operator pos:start="471:21" pos:end="471:22">==</operator> <name pos:start="471:24" pos:end="471:30">TIFF_G4</name></expr>)</condition><block type="pseudo" pos:start="473:13" pos:end="473:32"><block_content pos:start="473:13" pos:end="473:32">

            <expr_stmt pos:start="473:13" pos:end="473:32"><expr pos:start="473:13" pos:end="473:31"><name pos:start="473:13" pos:end="473:23"><name pos:start="473:13" pos:end="473:13">s</name><operator pos:start="473:14" pos:end="473:15">-&gt;</operator><name pos:start="473:16" pos:end="473:23">fax_opts</name></name> <operator pos:start="473:25" pos:end="473:25">=</operator> <name pos:start="473:27" pos:end="473:31">value</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="475:9" pos:end="475:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="479:5" pos:end="479:13">return <expr pos:start="479:12" pos:end="479:12"><literal type="number" pos:start="479:12" pos:end="479:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
