<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8100.c" pos:tabs="8"><function pos:start="1:1" pos:end="126:77"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">ff_mjpeg_decode_sos</name><parameter_list pos:start="1:24" pos:end="2:70">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:42">MJpegDecodeContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:72"><decl pos:start="1:48" pos:end="1:72"><type pos:start="1:48" pos:end="1:72"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:60">uint8_t</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:72">mb_bitmask</name></decl></parameter>,
                        <parameter pos:start="2:25" pos:end="2:43"><decl pos:start="2:25" pos:end="2:43"><type pos:start="2:25" pos:end="2:43"><name pos:start="2:25" pos:end="2:27">int</name></type> <name pos:start="2:29" pos:end="2:43">mb_bitmask_size</name></decl></parameter>, <parameter pos:start="2:46" pos:end="2:69"><decl pos:start="2:46" pos:end="2:69"><type pos:start="2:46" pos:end="2:69"><specifier pos:start="2:46" pos:end="2:50">const</specifier> <name pos:start="2:52" pos:end="2:58">AVFrame</name> <modifier pos:start="2:60" pos:end="2:60">*</modifier></type><name pos:start="2:61" pos:end="2:69">reference</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="126:77">{<block_content pos:start="4:5" pos:end="126:77">
    <decl_stmt pos:start="4:5" pos:end="4:64"><decl pos:start="4:5" pos:end="4:11"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:11">len</name></decl>, <decl pos:start="4:14" pos:end="4:26"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:14" pos:end="4:26">nb_components</name></decl>, <decl pos:start="4:29" pos:end="4:29"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:29" pos:end="4:29">i</name></decl>, <decl pos:start="4:32" pos:end="4:32"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:32" pos:end="4:32">h</name></decl>, <decl pos:start="4:35" pos:end="4:35"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:35" pos:end="4:35">v</name></decl>, <decl pos:start="4:38" pos:end="4:46"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:38" pos:end="4:46">predictor</name></decl>, <decl pos:start="4:49" pos:end="4:63"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:49" pos:end="4:63">point_transform</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">index</name></decl>, <decl pos:start="5:16" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:17">id</name></decl>, <decl pos:start="5:20" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:22">ret</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:47"><decl pos:start="6:5" pos:end="6:46"><type pos:start="6:5" pos:end="6:13"><specifier pos:start="6:5" pos:end="6:9">const</specifier> <name pos:start="6:11" pos:end="6:13">int</name></type> <name pos:start="6:15" pos:end="6:24">block_size</name> <init pos:start="6:26" pos:end="6:46">= <expr pos:start="6:28" pos:end="6:46"><ternary pos:start="6:28" pos:end="6:46"><condition pos:start="6:28" pos:end="6:40"><expr pos:start="6:28" pos:end="6:38"><name pos:start="6:28" pos:end="6:38"><name pos:start="6:28" pos:end="6:28">s</name><operator pos:start="6:29" pos:end="6:30">-&gt;</operator><name pos:start="6:31" pos:end="6:38">lossless</name></name></expr> ?</condition><then pos:start="6:42" pos:end="6:42"> <expr pos:start="6:42" pos:end="6:42"><literal type="number" pos:start="6:42" pos:end="6:42">1</literal></expr> </then><else pos:start="6:44" pos:end="6:46">: <expr pos:start="6:46" pos:end="6:46"><literal type="number" pos:start="6:46" pos:end="6:46">8</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ilv</name></decl>, <decl pos:start="7:14" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:23">prev_shift</name></decl>;</decl_stmt>
    <if_stmt pos:start="8:5" pos:end="126:77"><if pos:start="8:5" pos:end="126:77">if <condition pos:start="8:8" pos:end="8:24">(<expr pos:start="8:9" pos:end="8:23"><operator pos:start="8:9" pos:end="8:9">!</operator><name pos:start="8:10" pos:end="8:23"><name pos:start="8:10" pos:end="8:10">s</name><operator pos:start="8:11" pos:end="8:12">-&gt;</operator><name pos:start="8:13" pos:end="8:23">got_picture</name></name></expr>)</condition> <block pos:start="8:26" pos:end="126:77">{<block_content pos:start="9:9" pos:end="126:77">
        <expr_stmt pos:start="9:9" pos:end="10:62"><expr pos:start="9:9" pos:end="10:61"><call pos:start="9:9" pos:end="10:61"><name pos:start="9:9" pos:end="9:14">av_log</name><argument_list pos:start="9:15" pos:end="10:61">(<argument pos:start="9:16" pos:end="9:23"><expr pos:start="9:16" pos:end="9:23"><name pos:start="9:16" pos:end="9:23"><name pos:start="9:16" pos:end="9:16">s</name><operator pos:start="9:17" pos:end="9:18">-&gt;</operator><name pos:start="9:19" pos:end="9:23">avctx</name></name></expr></argument>, <argument pos:start="9:26" pos:end="9:39"><expr pos:start="9:26" pos:end="9:39"><name pos:start="9:26" pos:end="9:39">AV_LOG_WARNING</name></expr></argument>,
                <argument pos:start="10:17" pos:end="10:60"><expr pos:start="10:17" pos:end="10:60"><literal type="string" pos:start="10:17" pos:end="10:60">"Can not process SOS before SOF, skipping\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="11:9" pos:end="11:18">return <expr pos:start="11:16" pos:end="11:17"><operator pos:start="11:16" pos:end="11:16">-</operator><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr>;</return>
    <expr_stmt pos:start="12:5" pos:end="12:40"><expr pos:start="12:5" pos:end="12:39"><call pos:start="12:5" pos:end="12:39"><name pos:start="12:5" pos:end="12:14">av_assert0</name><argument_list pos:start="12:15" pos:end="12:39">(<argument pos:start="12:16" pos:end="12:38"><expr pos:start="12:16" pos:end="12:38"><name pos:start="12:16" pos:end="12:38"><name pos:start="12:16" pos:end="12:16">s</name><operator pos:start="12:17" pos:end="12:18">-&gt;</operator><name pos:start="12:19" pos:end="12:29">picture_ptr</name><operator pos:start="12:30" pos:end="12:31">-&gt;</operator><name pos:start="12:32" pos:end="12:35">data</name><index pos:start="12:36" pos:end="12:38">[<expr pos:start="12:37" pos:end="12:37"><literal type="number" pos:start="12:37" pos:end="12:37">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="13:5" pos:end="13:40">/* XXX: verify len field validity */</comment>
    <expr_stmt pos:start="14:5" pos:end="14:31"><expr pos:start="14:5" pos:end="14:30"><name pos:start="14:5" pos:end="14:7">len</name> <operator pos:start="14:9" pos:end="14:9">=</operator> <call pos:start="14:11" pos:end="14:30"><name pos:start="14:11" pos:end="14:18">get_bits</name><argument_list pos:start="14:19" pos:end="14:30">(<argument pos:start="14:20" pos:end="14:25"><expr pos:start="14:20" pos:end="14:25"><operator pos:start="14:20" pos:end="14:20">&amp;</operator><name pos:start="14:21" pos:end="14:25"><name pos:start="14:21" pos:end="14:21">s</name><operator pos:start="14:22" pos:end="14:23">-&gt;</operator><name pos:start="14:24" pos:end="14:25">gb</name></name></expr></argument>, <argument pos:start="14:28" pos:end="14:29"><expr pos:start="14:28" pos:end="14:29"><literal type="number" pos:start="14:28" pos:end="14:29">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:40"><expr pos:start="15:5" pos:end="15:39"><name pos:start="15:5" pos:end="15:17">nb_components</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <call pos:start="15:21" pos:end="15:39"><name pos:start="15:21" pos:end="15:28">get_bits</name><argument_list pos:start="15:29" pos:end="15:39">(<argument pos:start="15:30" pos:end="15:35"><expr pos:start="15:30" pos:end="15:35"><operator pos:start="15:30" pos:end="15:30">&amp;</operator><name pos:start="15:31" pos:end="15:35"><name pos:start="15:31" pos:end="15:31">s</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:35">gb</name></name></expr></argument>, <argument pos:start="15:38" pos:end="15:38"><expr pos:start="15:38" pos:end="15:38"><literal type="number" pos:start="15:38" pos:end="15:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="16:5" pos:end="126:77"><if pos:start="16:5" pos:end="126:77">if <condition pos:start="16:8" pos:end="16:61">(<expr pos:start="16:9" pos:end="16:60"><name pos:start="16:9" pos:end="16:21">nb_components</name> <operator pos:start="16:23" pos:end="16:24">==</operator> <literal type="number" pos:start="16:26" pos:end="16:26">0</literal> <operator pos:start="16:28" pos:end="16:29">||</operator> <name pos:start="16:31" pos:end="16:43">nb_components</name> <operator pos:start="16:45" pos:end="16:45">&gt;</operator> <name pos:start="16:47" pos:end="16:60">MAX_COMPONENTS</name></expr>)</condition> <block pos:start="16:63" pos:end="126:77">{<block_content pos:start="17:9" pos:end="126:77">
        <expr_stmt pos:start="17:9" pos:end="19:53"><expr pos:start="17:9" pos:end="19:52"><call pos:start="17:9" pos:end="19:52"><name pos:start="17:9" pos:end="17:37">avpriv_report_missing_feature</name><argument_list pos:start="17:38" pos:end="19:52">(<argument pos:start="17:39" pos:end="17:46"><expr pos:start="17:39" pos:end="17:46"><name pos:start="17:39" pos:end="17:46"><name pos:start="17:39" pos:end="17:39">s</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:46">avctx</name></name></expr></argument>,
                                      <argument pos:start="18:39" pos:end="18:70"><expr pos:start="18:39" pos:end="18:70"><literal type="string" pos:start="18:39" pos:end="18:70">"decode_sos: nb_components (%d)"</literal></expr></argument>,
                                      <argument pos:start="19:39" pos:end="19:51"><expr pos:start="19:39" pos:end="19:51"><name pos:start="19:39" pos:end="19:51">nb_components</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="20:9" pos:end="20:36">return <expr pos:start="20:16" pos:end="20:35"><name pos:start="20:16" pos:end="20:35">AVERROR_PATCHWELCOME</name></expr>;</return>
    <if_stmt pos:start="21:5" pos:end="126:77"><if pos:start="21:5" pos:end="126:77">if <condition pos:start="21:8" pos:end="21:37">(<expr pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:11">len</name> <operator pos:start="21:13" pos:end="21:14">!=</operator> <literal type="number" pos:start="21:16" pos:end="21:18">6</literal> <operator pos:start="21:18" pos:end="21:18">+</operator> <literal type="number" pos:start="21:20" pos:end="21:20">2</literal> <operator pos:start="21:22" pos:end="21:22">*</operator> <name pos:start="21:24" pos:end="21:36">nb_components</name></expr>)</condition> <block pos:start="21:39" pos:end="126:77">{<block_content pos:start="22:9" pos:end="126:77">
        <expr_stmt pos:start="22:9" pos:end="22:78"><expr pos:start="22:9" pos:end="22:77"><call pos:start="22:9" pos:end="22:77"><name pos:start="22:9" pos:end="22:14">av_log</name><argument_list pos:start="22:15" pos:end="22:77">(<argument pos:start="22:16" pos:end="22:23"><expr pos:start="22:16" pos:end="22:23"><name pos:start="22:16" pos:end="22:23"><name pos:start="22:16" pos:end="22:16">s</name><operator pos:start="22:17" pos:end="22:18">-&gt;</operator><name pos:start="22:19" pos:end="22:23">avctx</name></name></expr></argument>, <argument pos:start="22:26" pos:end="22:37"><expr pos:start="22:26" pos:end="22:37"><name pos:start="22:26" pos:end="22:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="22:40" pos:end="22:71"><expr pos:start="22:40" pos:end="22:71"><literal type="string" pos:start="22:40" pos:end="22:71">"decode_sos: invalid len (%d)\n"</literal></expr></argument>, <argument pos:start="22:74" pos:end="22:76"><expr pos:start="22:74" pos:end="22:76"><name pos:start="22:74" pos:end="22:76">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="23:5" pos:end="126:77">for <control pos:start="23:9" pos:end="23:39">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:34"><expr pos:start="23:17" pos:end="23:33"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:33">nb_components</name></expr>;</condition> <incr pos:start="23:36" pos:end="23:38"><expr pos:start="23:36" pos:end="23:38"><name pos:start="23:36" pos:end="23:36">i</name><operator pos:start="23:37" pos:end="23:38">++</operator></expr></incr>)</control> <block pos:start="23:41" pos:end="126:77">{<block_content pos:start="24:9" pos:end="126:77">
        <expr_stmt pos:start="24:9" pos:end="24:37"><expr pos:start="24:9" pos:end="24:36"><name pos:start="24:9" pos:end="24:10">id</name> <operator pos:start="24:12" pos:end="24:12">=</operator> <call pos:start="24:14" pos:end="24:32"><name pos:start="24:14" pos:end="24:21">get_bits</name><argument_list pos:start="24:22" pos:end="24:32">(<argument pos:start="24:23" pos:end="24:28"><expr pos:start="24:23" pos:end="24:28"><operator pos:start="24:23" pos:end="24:23">&amp;</operator><name pos:start="24:24" pos:end="24:28"><name pos:start="24:24" pos:end="24:24">s</name><operator pos:start="24:25" pos:end="24:26">-&gt;</operator><name pos:start="24:27" pos:end="24:28">gb</name></name></expr></argument>, <argument pos:start="24:31" pos:end="24:31"><expr pos:start="24:31" pos:end="24:31"><literal type="number" pos:start="24:31" pos:end="24:31">8</literal></expr></argument>)</argument_list></call> <operator pos:start="24:34" pos:end="24:34">-</operator> <literal type="number" pos:start="24:36" pos:end="24:36">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="25:9" pos:end="25:62"><expr pos:start="25:9" pos:end="25:61"><call pos:start="25:9" pos:end="25:61"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:61">(<argument pos:start="25:16" pos:end="25:23"><expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:23">avctx</name></name></expr></argument>, <argument pos:start="25:26" pos:end="25:37"><expr pos:start="25:26" pos:end="25:37"><name pos:start="25:26" pos:end="25:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="25:40" pos:end="25:56"><expr pos:start="25:40" pos:end="25:56"><literal type="string" pos:start="25:40" pos:end="25:56">"component: %d\n"</literal></expr></argument>, <argument pos:start="25:59" pos:end="25:60"><expr pos:start="25:59" pos:end="25:60"><name pos:start="25:59" pos:end="25:60">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="26:9" pos:end="26:34">/* find component index */</comment>
        <for pos:start="27:9" pos:end="29:22">for <control pos:start="27:13" pos:end="27:58">(<init pos:start="27:14" pos:end="27:23"><expr pos:start="27:14" pos:end="27:22"><name pos:start="27:14" pos:end="27:18">index</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="number" pos:start="27:22" pos:end="27:22">0</literal></expr>;</init> <condition pos:start="27:25" pos:end="27:49"><expr pos:start="27:25" pos:end="27:48"><name pos:start="27:25" pos:end="27:29">index</name> <operator pos:start="27:31" pos:end="27:31">&lt;</operator> <name pos:start="27:33" pos:end="27:48"><name pos:start="27:33" pos:end="27:33">s</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:48">nb_components</name></name></expr>;</condition> <incr pos:start="27:51" pos:end="27:57"><expr pos:start="27:51" pos:end="27:57"><name pos:start="27:51" pos:end="27:55">index</name><operator pos:start="27:56" pos:end="27:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="28:13" pos:end="29:22"><block_content pos:start="28:13" pos:end="29:22">
            <if_stmt pos:start="28:13" pos:end="29:22"><if pos:start="28:13" pos:end="29:22">if <condition pos:start="28:16" pos:end="28:45">(<expr pos:start="28:17" pos:end="28:44"><name pos:start="28:17" pos:end="28:18">id</name> <operator pos:start="28:20" pos:end="28:21">==</operator> <name pos:start="28:23" pos:end="28:44"><name pos:start="28:23" pos:end="28:23">s</name><operator pos:start="28:24" pos:end="28:25">-&gt;</operator><name pos:start="28:26" pos:end="28:37">component_id</name><index pos:start="28:38" pos:end="28:44">[<expr pos:start="28:39" pos:end="28:43"><name pos:start="28:39" pos:end="28:43">index</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:22"><block_content pos:start="29:17" pos:end="29:22">
                <break pos:start="29:17" pos:end="29:22">break;</break></block_content></block></if></if_stmt></block_content></block></for>
        <if_stmt pos:start="30:9" pos:end="126:77"><if pos:start="30:9" pos:end="126:77">if <condition pos:start="30:12" pos:end="30:38">(<expr pos:start="30:13" pos:end="30:37"><name pos:start="30:13" pos:end="30:17">index</name> <operator pos:start="30:19" pos:end="30:20">==</operator> <name pos:start="30:22" pos:end="30:37"><name pos:start="30:22" pos:end="30:22">s</name><operator pos:start="30:23" pos:end="30:24">-&gt;</operator><name pos:start="30:25" pos:end="30:37">nb_components</name></name></expr>)</condition> <block pos:start="30:40" pos:end="126:77">{<block_content pos:start="31:13" pos:end="126:77">
            <expr_stmt pos:start="31:13" pos:end="32:71"><expr pos:start="31:13" pos:end="32:70"><call pos:start="31:13" pos:end="32:70"><name pos:start="31:13" pos:end="31:18">av_log</name><argument_list pos:start="31:19" pos:end="32:70">(<argument pos:start="31:20" pos:end="31:27"><expr pos:start="31:20" pos:end="31:27"><name pos:start="31:20" pos:end="31:27"><name pos:start="31:20" pos:end="31:20">s</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:27">avctx</name></name></expr></argument>, <argument pos:start="31:30" pos:end="31:41"><expr pos:start="31:30" pos:end="31:41"><name pos:start="31:30" pos:end="31:41">AV_LOG_ERROR</name></expr></argument>,
                   <argument pos:start="32:20" pos:end="32:62"><expr pos:start="32:20" pos:end="32:62"><literal type="string" pos:start="32:20" pos:end="32:62">"decode_sos: index(%d) out of components\n"</literal></expr></argument>, <argument pos:start="32:65" pos:end="32:69"><expr pos:start="32:65" pos:end="32:69"><name pos:start="32:65" pos:end="32:69">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="33:9" pos:end="33:56">/* Metasoft MJPEG codec has Cb and Cr swapped */</comment>
        <if_stmt pos:start="34:9" pos:end="36:26"><if pos:start="34:9" pos:end="36:26">if <condition pos:start="34:12" pos:end="35:64">(<expr pos:start="34:13" pos:end="35:63"><name pos:start="34:13" pos:end="34:31"><name pos:start="34:13" pos:end="34:13">s</name><operator pos:start="34:14" pos:end="34:15">-&gt;</operator><name pos:start="34:16" pos:end="34:20">avctx</name><operator pos:start="34:21" pos:end="34:22">-&gt;</operator><name pos:start="34:23" pos:end="34:31">codec_tag</name></name> <operator pos:start="34:33" pos:end="34:34">==</operator> <call pos:start="34:36" pos:end="34:60"><name pos:start="34:36" pos:end="34:40">MKTAG</name><argument_list pos:start="34:41" pos:end="34:60">(<argument pos:start="34:42" pos:end="34:44"><expr pos:start="34:42" pos:end="34:44"><literal type="char" pos:start="34:42" pos:end="34:44">'M'</literal></expr></argument>, <argument pos:start="34:47" pos:end="34:49"><expr pos:start="34:47" pos:end="34:49"><literal type="char" pos:start="34:47" pos:end="34:49">'T'</literal></expr></argument>, <argument pos:start="34:52" pos:end="34:54"><expr pos:start="34:52" pos:end="34:54"><literal type="char" pos:start="34:52" pos:end="34:54">'S'</literal></expr></argument>, <argument pos:start="34:57" pos:end="34:59"><expr pos:start="34:57" pos:end="34:59"><literal type="char" pos:start="34:57" pos:end="34:59">'J'</literal></expr></argument>)</argument_list></call>
            <operator pos:start="35:13" pos:end="35:14">&amp;&amp;</operator> <name pos:start="35:16" pos:end="35:28">nb_components</name> <operator pos:start="35:30" pos:end="35:31">==</operator> <literal type="number" pos:start="35:33" pos:end="35:33">3</literal> <operator pos:start="35:35" pos:end="35:36">&amp;&amp;</operator> <name pos:start="35:38" pos:end="35:53"><name pos:start="35:38" pos:end="35:38">s</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:53">nb_components</name></name> <operator pos:start="35:55" pos:end="35:56">==</operator> <literal type="number" pos:start="35:58" pos:end="35:58">3</literal> <operator pos:start="35:60" pos:end="35:61">&amp;&amp;</operator> <name pos:start="35:63" pos:end="35:63">i</name></expr>)</condition><block type="pseudo" pos:start="36:13" pos:end="36:26"><block_content pos:start="36:13" pos:end="36:26">
            <expr_stmt pos:start="36:13" pos:end="36:26"><expr pos:start="36:13" pos:end="36:25"><name pos:start="36:13" pos:end="36:17">index</name> <operator pos:start="36:19" pos:end="36:19">=</operator> <literal type="number" pos:start="36:21" pos:end="36:23">3</literal> <operator pos:start="36:23" pos:end="36:23">-</operator> <name pos:start="36:25" pos:end="36:25">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="37:9" pos:end="37:51"><expr pos:start="37:9" pos:end="37:50"><name pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:23">quant_sindex</name><index pos:start="37:24" pos:end="37:26">[<expr pos:start="37:25" pos:end="37:25"><name pos:start="37:25" pos:end="37:25">i</name></expr>]</index></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <name pos:start="37:30" pos:end="37:50"><name pos:start="37:30" pos:end="37:30">s</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:43">quant_index</name><index pos:start="37:44" pos:end="37:50">[<expr pos:start="37:45" pos:end="37:49"><name pos:start="37:45" pos:end="37:49">index</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="38:9" pos:end="38:64"><expr pos:start="38:9" pos:end="38:63"><name pos:start="38:9" pos:end="38:23"><name pos:start="38:9" pos:end="38:9">s</name><operator pos:start="38:10" pos:end="38:11">-&gt;</operator><name pos:start="38:12" pos:end="38:20">nb_blocks</name><index pos:start="38:21" pos:end="38:23">[<expr pos:start="38:22" pos:end="38:22"><name pos:start="38:22" pos:end="38:22">i</name></expr>]</index></name> <operator pos:start="38:25" pos:end="38:25">=</operator> <name pos:start="38:27" pos:end="38:43"><name pos:start="38:27" pos:end="38:27">s</name><operator pos:start="38:28" pos:end="38:29">-&gt;</operator><name pos:start="38:30" pos:end="38:36">h_count</name><index pos:start="38:37" pos:end="38:43">[<expr pos:start="38:38" pos:end="38:42"><name pos:start="38:38" pos:end="38:42">index</name></expr>]</index></name> <operator pos:start="38:45" pos:end="38:45">*</operator> <name pos:start="38:47" pos:end="38:63"><name pos:start="38:47" pos:end="38:47">s</name><operator pos:start="38:48" pos:end="38:49">-&gt;</operator><name pos:start="38:50" pos:end="38:56">v_count</name><index pos:start="38:57" pos:end="38:63">[<expr pos:start="38:58" pos:end="38:62"><name pos:start="38:58" pos:end="38:62">index</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="39:9" pos:end="39:44"><expr pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:19">h_scount</name><index pos:start="39:20" pos:end="39:22">[<expr pos:start="39:21" pos:end="39:21"><name pos:start="39:21" pos:end="39:21">i</name></expr>]</index></name>  <operator pos:start="39:25" pos:end="39:25">=</operator> <name pos:start="39:27" pos:end="39:43"><name pos:start="39:27" pos:end="39:27">s</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:36">h_count</name><index pos:start="39:37" pos:end="39:43">[<expr pos:start="39:38" pos:end="39:42"><name pos:start="39:38" pos:end="39:42">index</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="40:9" pos:end="40:44"><expr pos:start="40:9" pos:end="40:43"><name pos:start="40:9" pos:end="40:22"><name pos:start="40:9" pos:end="40:9">s</name><operator pos:start="40:10" pos:end="40:11">-&gt;</operator><name pos:start="40:12" pos:end="40:19">v_scount</name><index pos:start="40:20" pos:end="40:22">[<expr pos:start="40:21" pos:end="40:21"><name pos:start="40:21" pos:end="40:21">i</name></expr>]</index></name>  <operator pos:start="40:25" pos:end="40:25">=</operator> <name pos:start="40:27" pos:end="40:43"><name pos:start="40:27" pos:end="40:27">s</name><operator pos:start="40:28" pos:end="40:29">-&gt;</operator><name pos:start="40:30" pos:end="40:36">v_count</name><index pos:start="40:37" pos:end="40:43">[<expr pos:start="40:38" pos:end="40:42"><name pos:start="40:38" pos:end="40:42">index</name></expr>]</index></name></expr>;</expr_stmt>
        <if_stmt pos:start="41:9" pos:end="42:28"><if pos:start="41:9" pos:end="42:28">if<condition pos:start="41:11" pos:end="41:97">(<expr pos:start="41:12" pos:end="41:96"><name pos:start="41:12" pos:end="41:24">nb_components</name> <operator pos:start="41:26" pos:end="41:27">==</operator> <literal type="number" pos:start="41:29" pos:end="41:29">3</literal> <operator pos:start="41:31" pos:end="41:32">&amp;&amp;</operator> <name pos:start="41:34" pos:end="41:49"><name pos:start="41:34" pos:end="41:34">s</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:49">nb_components</name></name> <operator pos:start="41:51" pos:end="41:52">==</operator> <literal type="number" pos:start="41:54" pos:end="41:54">3</literal> <operator pos:start="41:56" pos:end="41:57">&amp;&amp;</operator> <name pos:start="41:59" pos:end="41:75"><name pos:start="41:59" pos:end="41:59">s</name><operator pos:start="41:60" pos:end="41:61">-&gt;</operator><name pos:start="41:62" pos:end="41:66">avctx</name><operator pos:start="41:67" pos:end="41:68">-&gt;</operator><name pos:start="41:69" pos:end="41:75">pix_fmt</name></name> <operator pos:start="41:77" pos:end="41:78">==</operator> <name pos:start="41:80" pos:end="41:96">AV_PIX_FMT_GBR24P</name></expr>)</condition><block type="pseudo" pos:start="42:13" pos:end="42:28"><block_content pos:start="42:13" pos:end="42:28">
            <expr_stmt pos:start="42:13" pos:end="42:28"><expr pos:start="42:13" pos:end="42:27"><name pos:start="42:13" pos:end="42:17">index</name> <operator pos:start="42:19" pos:end="42:19">=</operator> <operator pos:start="42:21" pos:end="42:21">(</operator><name pos:start="42:22" pos:end="42:22">i</name><operator pos:start="42:23" pos:end="42:23">+</operator><literal type="number" pos:start="42:24" pos:end="42:24">2</literal><operator pos:start="42:25" pos:end="42:25">)</operator><operator pos:start="42:26" pos:end="42:26">%</operator><literal type="number" pos:start="42:27" pos:end="42:27">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="43:9" pos:end="44:32"><if pos:start="43:9" pos:end="44:32">if<condition pos:start="43:11" pos:end="43:97">(<expr pos:start="43:12" pos:end="43:96"><name pos:start="43:12" pos:end="43:24">nb_components</name> <operator pos:start="43:26" pos:end="43:27">==</operator> <literal type="number" pos:start="43:29" pos:end="43:29">1</literal> <operator pos:start="43:31" pos:end="43:32">&amp;&amp;</operator> <name pos:start="43:34" pos:end="43:49"><name pos:start="43:34" pos:end="43:34">s</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:49">nb_components</name></name> <operator pos:start="43:51" pos:end="43:52">==</operator> <literal type="number" pos:start="43:54" pos:end="43:54">3</literal> <operator pos:start="43:56" pos:end="43:57">&amp;&amp;</operator> <name pos:start="43:59" pos:end="43:75"><name pos:start="43:59" pos:end="43:59">s</name><operator pos:start="43:60" pos:end="43:61">-&gt;</operator><name pos:start="43:62" pos:end="43:66">avctx</name><operator pos:start="43:67" pos:end="43:68">-&gt;</operator><name pos:start="43:69" pos:end="43:75">pix_fmt</name></name> <operator pos:start="43:77" pos:end="43:78">==</operator> <name pos:start="43:80" pos:end="43:96">AV_PIX_FMT_GBR24P</name></expr>)</condition><block type="pseudo" pos:start="44:13" pos:end="44:32"><block_content pos:start="44:13" pos:end="44:32">
            <expr_stmt pos:start="44:13" pos:end="44:32"><expr pos:start="44:13" pos:end="44:31"><name pos:start="44:13" pos:end="44:17">index</name> <operator pos:start="44:19" pos:end="44:19">=</operator> <operator pos:start="44:21" pos:end="44:21">(</operator><name pos:start="44:22" pos:end="44:26">index</name><operator pos:start="44:27" pos:end="44:27">+</operator><literal type="number" pos:start="44:28" pos:end="44:28">2</literal><operator pos:start="44:29" pos:end="44:29">)</operator><operator pos:start="44:30" pos:end="44:30">%</operator><literal type="number" pos:start="44:31" pos:end="44:31">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="45:9" pos:end="45:33"><expr pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:21">comp_index</name><index pos:start="45:22" pos:end="45:24">[<expr pos:start="45:23" pos:end="45:23"><name pos:start="45:23" pos:end="45:23">i</name></expr>]</index></name> <operator pos:start="45:26" pos:end="45:26">=</operator> <name pos:start="45:28" pos:end="45:32">index</name></expr>;</expr_stmt>
        <expr_stmt pos:start="46:9" pos:end="46:45"><expr pos:start="46:9" pos:end="46:44"><name pos:start="46:9" pos:end="46:22"><name pos:start="46:9" pos:end="46:9">s</name><operator pos:start="46:10" pos:end="46:11">-&gt;</operator><name pos:start="46:12" pos:end="46:19">dc_index</name><index pos:start="46:20" pos:end="46:22">[<expr pos:start="46:21" pos:end="46:21"><name pos:start="46:21" pos:end="46:21">i</name></expr>]</index></name> <operator pos:start="46:24" pos:end="46:24">=</operator> <call pos:start="46:26" pos:end="46:44"><name pos:start="46:26" pos:end="46:33">get_bits</name><argument_list pos:start="46:34" pos:end="46:44">(<argument pos:start="46:35" pos:end="46:40"><expr pos:start="46:35" pos:end="46:40"><operator pos:start="46:35" pos:end="46:35">&amp;</operator><name pos:start="46:36" pos:end="46:40"><name pos:start="46:36" pos:end="46:36">s</name><operator pos:start="46:37" pos:end="46:38">-&gt;</operator><name pos:start="46:39" pos:end="46:40">gb</name></name></expr></argument>, <argument pos:start="46:43" pos:end="46:43"><expr pos:start="46:43" pos:end="46:43"><literal type="number" pos:start="46:43" pos:end="46:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="47:9" pos:end="47:45"><expr pos:start="47:9" pos:end="47:44"><name pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:19">ac_index</name><index pos:start="47:20" pos:end="47:22">[<expr pos:start="47:21" pos:end="47:21"><name pos:start="47:21" pos:end="47:21">i</name></expr>]</index></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <call pos:start="47:26" pos:end="47:44"><name pos:start="47:26" pos:end="47:33">get_bits</name><argument_list pos:start="47:34" pos:end="47:44">(<argument pos:start="47:35" pos:end="47:40"><expr pos:start="47:35" pos:end="47:40"><operator pos:start="47:35" pos:end="47:35">&amp;</operator><name pos:start="47:36" pos:end="47:40"><name pos:start="47:36" pos:end="47:36">s</name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:40">gb</name></name></expr></argument>, <argument pos:start="47:43" pos:end="47:43"><expr pos:start="47:43" pos:end="47:43"><literal type="number" pos:start="47:43" pos:end="47:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="48:9" pos:end="50:30"><if pos:start="48:9" pos:end="50:30">if <condition pos:start="48:12" pos:end="49:55">(<expr pos:start="48:13" pos:end="49:54"><name pos:start="48:13" pos:end="48:26"><name pos:start="48:13" pos:end="48:13">s</name><operator pos:start="48:14" pos:end="48:15">-&gt;</operator><name pos:start="48:16" pos:end="48:23">dc_index</name><index pos:start="48:24" pos:end="48:26">[<expr pos:start="48:25" pos:end="48:25"><name pos:start="48:25" pos:end="48:25">i</name></expr>]</index></name> <operator pos:start="48:28" pos:end="48:28">&lt;</operator>  <literal type="number" pos:start="48:31" pos:end="48:31">0</literal> <operator pos:start="48:33" pos:end="48:34">||</operator> <name pos:start="48:36" pos:end="48:49"><name pos:start="48:36" pos:end="48:36">s</name><operator pos:start="48:37" pos:end="48:38">-&gt;</operator><name pos:start="48:39" pos:end="48:46">ac_index</name><index pos:start="48:47" pos:end="48:49">[<expr pos:start="48:48" pos:end="48:48"><name pos:start="48:48" pos:end="48:48">i</name></expr>]</index></name> <operator pos:start="48:51" pos:end="48:51">&lt;</operator> <literal type="number" pos:start="48:53" pos:end="48:53">0</literal> <operator pos:start="48:55" pos:end="48:56">||</operator>
            <name pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:23">dc_index</name><index pos:start="49:24" pos:end="49:26">[<expr pos:start="49:25" pos:end="49:25"><name pos:start="49:25" pos:end="49:25">i</name></expr>]</index></name> <operator pos:start="49:28" pos:end="49:29">&gt;=</operator> <literal type="number" pos:start="49:31" pos:end="49:31">4</literal> <operator pos:start="49:33" pos:end="49:34">||</operator> <name pos:start="49:36" pos:end="49:49"><name pos:start="49:36" pos:end="49:36">s</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:46">ac_index</name><index pos:start="49:47" pos:end="49:49">[<expr pos:start="49:48" pos:end="49:48"><name pos:start="49:48" pos:end="49:48">i</name></expr>]</index></name> <operator pos:start="49:51" pos:end="49:52">&gt;=</operator> <literal type="number" pos:start="49:54" pos:end="49:54">4</literal></expr>)</condition><block type="pseudo" pos:start="50:13" pos:end="50:30"><block_content pos:start="50:13" pos:end="50:30">
            <goto pos:start="50:13" pos:end="50:30">goto <name pos:start="50:18" pos:end="50:29">out_of_range</name>;</goto></block_content></block></if></if_stmt>
        <if_stmt pos:start="51:9" pos:end="52:30"><if pos:start="51:9" pos:end="52:30">if <condition pos:start="51:12" pos:end="51:137">(<expr pos:start="51:13" pos:end="51:136"><operator pos:start="51:13" pos:end="51:13">!</operator><name pos:start="51:14" pos:end="51:39"><name pos:start="51:14" pos:end="51:14">s</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:20">vlcs</name><index pos:start="51:21" pos:end="51:23">[<expr pos:start="51:22" pos:end="51:22"><literal type="number" pos:start="51:22" pos:end="51:22">0</literal></expr>]</index><index pos:start="51:24" pos:end="51:39">[<expr pos:start="51:25" pos:end="51:38"><name pos:start="51:25" pos:end="51:38"><name pos:start="51:25" pos:end="51:25">s</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:35">dc_index</name><index pos:start="51:36" pos:end="51:38">[<expr pos:start="51:37" pos:end="51:37"><name pos:start="51:37" pos:end="51:37">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="51:40" pos:end="51:40">.</operator><name pos:start="51:41" pos:end="51:45">table</name> <operator pos:start="51:47" pos:end="51:48">||</operator> <operator pos:start="51:50" pos:end="51:50">!</operator><operator pos:start="51:51" pos:end="51:51">(</operator><ternary pos:start="51:52" pos:end="51:135"><condition pos:start="51:52" pos:end="51:67"><expr pos:start="51:52" pos:end="51:65"><name pos:start="51:52" pos:end="51:65"><name pos:start="51:52" pos:end="51:52">s</name><operator pos:start="51:53" pos:end="51:54">-&gt;</operator><name pos:start="51:55" pos:end="51:65">progressive</name></name></expr> ?</condition><then pos:start="51:69" pos:end="51:100"> <expr pos:start="51:69" pos:end="51:100"><name pos:start="51:69" pos:end="51:94"><name pos:start="51:69" pos:end="51:69">s</name><operator pos:start="51:70" pos:end="51:71">-&gt;</operator><name pos:start="51:72" pos:end="51:75">vlcs</name><index pos:start="51:76" pos:end="51:78">[<expr pos:start="51:77" pos:end="51:77"><literal type="number" pos:start="51:77" pos:end="51:77">2</literal></expr>]</index><index pos:start="51:79" pos:end="51:94">[<expr pos:start="51:80" pos:end="51:93"><name pos:start="51:80" pos:end="51:93"><name pos:start="51:80" pos:end="51:80">s</name><operator pos:start="51:81" pos:end="51:82">-&gt;</operator><name pos:start="51:83" pos:end="51:90">ac_index</name><index pos:start="51:91" pos:end="51:93">[<expr pos:start="51:92" pos:end="51:92"><literal type="number" pos:start="51:92" pos:end="51:92">0</literal></expr>]</index></name></expr>]</index></name><operator pos:start="51:95" pos:end="51:95">.</operator><name pos:start="51:96" pos:end="51:100">table</name></expr> </then><else pos:start="51:102" pos:end="51:135">: <expr pos:start="51:104" pos:end="51:135"><name pos:start="51:104" pos:end="51:129"><name pos:start="51:104" pos:end="51:104">s</name><operator pos:start="51:105" pos:end="51:106">-&gt;</operator><name pos:start="51:107" pos:end="51:110">vlcs</name><index pos:start="51:111" pos:end="51:113">[<expr pos:start="51:112" pos:end="51:112"><literal type="number" pos:start="51:112" pos:end="51:112">1</literal></expr>]</index><index pos:start="51:114" pos:end="51:129">[<expr pos:start="51:115" pos:end="51:128"><name pos:start="51:115" pos:end="51:128"><name pos:start="51:115" pos:end="51:115">s</name><operator pos:start="51:116" pos:end="51:117">-&gt;</operator><name pos:start="51:118" pos:end="51:125">ac_index</name><index pos:start="51:126" pos:end="51:128">[<expr pos:start="51:127" pos:end="51:127"><name pos:start="51:127" pos:end="51:127">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="51:130" pos:end="51:130">.</operator><name pos:start="51:131" pos:end="51:135">table</name></expr></else></ternary><operator pos:start="51:136" pos:end="51:136">)</operator></expr>)</condition><block type="pseudo" pos:start="52:13" pos:end="52:30"><block_content pos:start="52:13" pos:end="52:30">
            <goto pos:start="52:13" pos:end="52:30">goto <name pos:start="52:18" pos:end="52:29">out_of_range</name>;</goto></block_content></block></if></if_stmt>
    <expr_stmt pos:start="53:5" pos:end="53:36"><expr pos:start="53:5" pos:end="53:35"><name pos:start="53:5" pos:end="53:13">predictor</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <call pos:start="53:17" pos:end="53:35"><name pos:start="53:17" pos:end="53:24">get_bits</name><argument_list pos:start="53:25" pos:end="53:35">(<argument pos:start="53:26" pos:end="53:31"><expr pos:start="53:26" pos:end="53:31"><operator pos:start="53:26" pos:end="53:26">&amp;</operator><name pos:start="53:27" pos:end="53:31"><name pos:start="53:27" pos:end="53:27">s</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:31">gb</name></name></expr></argument>, <argument pos:start="53:34" pos:end="53:34"><expr pos:start="53:34" pos:end="53:34"><literal type="number" pos:start="53:34" pos:end="53:34">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="block" pos:start="53:44" pos:end="53:96">/* JPEG Ss / lossless JPEG predictor /JPEG-LS NEAR */</comment>
    <expr_stmt pos:start="54:5" pos:end="54:30"><expr pos:start="54:5" pos:end="54:29"><name pos:start="54:5" pos:end="54:7">ilv</name> <operator pos:start="54:9" pos:end="54:9">=</operator> <call pos:start="54:11" pos:end="54:29"><name pos:start="54:11" pos:end="54:18">get_bits</name><argument_list pos:start="54:19" pos:end="54:29">(<argument pos:start="54:20" pos:end="54:25"><expr pos:start="54:20" pos:end="54:25"><operator pos:start="54:20" pos:end="54:20">&amp;</operator><name pos:start="54:21" pos:end="54:25"><name pos:start="54:21" pos:end="54:21">s</name><operator pos:start="54:22" pos:end="54:23">-&gt;</operator><name pos:start="54:24" pos:end="54:25">gb</name></name></expr></argument>, <argument pos:start="54:28" pos:end="54:28"><expr pos:start="54:28" pos:end="54:28"><literal type="number" pos:start="54:28" pos:end="54:28">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="block" pos:start="54:44" pos:end="54:70">/* JPEG Se / JPEG-LS ILV */</comment>
    <if_stmt pos:start="55:5" pos:end="59:41"><if pos:start="55:5" pos:end="58:5">if<condition pos:start="55:7" pos:end="55:46">(<expr pos:start="55:8" pos:end="55:45"><name pos:start="55:8" pos:end="55:26"><name pos:start="55:8" pos:end="55:8">s</name><operator pos:start="55:9" pos:end="55:10">-&gt;</operator><name pos:start="55:11" pos:end="55:15">avctx</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:26">codec_tag</name></name> <operator pos:start="55:28" pos:end="55:29">!=</operator> <call pos:start="55:31" pos:end="55:45"><name pos:start="55:31" pos:end="55:37">AV_RL32</name><argument_list pos:start="55:38" pos:end="55:45">(<argument pos:start="55:39" pos:end="55:44"><expr pos:start="55:39" pos:end="55:44"><literal type="string" pos:start="55:39" pos:end="55:44">"CJPG"</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="55:47" pos:end="58:5">{<block_content pos:start="56:9" pos:end="57:46">
        <expr_stmt pos:start="56:9" pos:end="56:46"><expr pos:start="56:9" pos:end="56:45"><name pos:start="56:9" pos:end="56:18">prev_shift</name>      <operator pos:start="56:25" pos:end="56:25">=</operator> <call pos:start="56:27" pos:end="56:45"><name pos:start="56:27" pos:end="56:34">get_bits</name><argument_list pos:start="56:35" pos:end="56:45">(<argument pos:start="56:36" pos:end="56:41"><expr pos:start="56:36" pos:end="56:41"><operator pos:start="56:36" pos:end="56:36">&amp;</operator><name pos:start="56:37" pos:end="56:41"><name pos:start="56:37" pos:end="56:37">s</name><operator pos:start="56:38" pos:end="56:39">-&gt;</operator><name pos:start="56:40" pos:end="56:41">gb</name></name></expr></argument>, <argument pos:start="56:44" pos:end="56:44"><expr pos:start="56:44" pos:end="56:44"><literal type="number" pos:start="56:44" pos:end="56:44">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="56:48" pos:end="56:55">/* Ah */</comment>
        <expr_stmt pos:start="57:9" pos:end="57:46"><expr pos:start="57:9" pos:end="57:45"><name pos:start="57:9" pos:end="57:23">point_transform</name> <operator pos:start="57:25" pos:end="57:25">=</operator> <call pos:start="57:27" pos:end="57:45"><name pos:start="57:27" pos:end="57:34">get_bits</name><argument_list pos:start="57:35" pos:end="57:45">(<argument pos:start="57:36" pos:end="57:41"><expr pos:start="57:36" pos:end="57:41"><operator pos:start="57:36" pos:end="57:36">&amp;</operator><name pos:start="57:37" pos:end="57:41"><name pos:start="57:37" pos:end="57:37">s</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:41">gb</name></name></expr></argument>, <argument pos:start="57:44" pos:end="57:44"><expr pos:start="57:44" pos:end="57:44"><literal type="number" pos:start="57:44" pos:end="57:44">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="57:48" pos:end="57:55">/* Al */</comment>
    </block_content>}</block></if><else pos:start="58:6" pos:end="59:41">else<block type="pseudo" pos:start="59:9" pos:end="59:41"><block_content pos:start="59:9" pos:end="59:41">
        <expr_stmt pos:start="59:9" pos:end="59:41"><expr pos:start="59:9" pos:end="59:40"><name pos:start="59:9" pos:end="59:18">prev_shift</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:36">point_transform</name> <operator pos:start="59:38" pos:end="59:38">=</operator> <literal type="number" pos:start="59:40" pos:end="59:40">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <if_stmt pos:start="60:5" pos:end="126:77"><if pos:start="60:5" pos:end="64:5">if <condition pos:start="60:8" pos:end="60:26">(<expr pos:start="60:9" pos:end="60:25"><name pos:start="60:9" pos:end="60:21">nb_components</name> <operator pos:start="60:23" pos:end="60:23">&gt;</operator> <literal type="number" pos:start="60:25" pos:end="60:25">1</literal></expr>)</condition> <block pos:start="60:28" pos:end="64:5">{<block_content pos:start="62:9" pos:end="63:89">
        <comment type="block" pos:start="61:9" pos:end="61:32">/* interleaved stream */</comment>
        <expr_stmt pos:start="62:9" pos:end="62:89"><expr pos:start="62:9" pos:end="62:88"><name pos:start="62:9" pos:end="62:19"><name pos:start="62:9" pos:end="62:9">s</name><operator pos:start="62:10" pos:end="62:11">-&gt;</operator><name pos:start="62:12" pos:end="62:19">mb_width</name></name>  <operator pos:start="62:22" pos:end="62:22">=</operator> <operator pos:start="62:24" pos:end="62:24">(</operator><name pos:start="62:25" pos:end="62:32"><name pos:start="62:25" pos:end="62:25">s</name><operator pos:start="62:26" pos:end="62:27">-&gt;</operator><name pos:start="62:28" pos:end="62:32">width</name></name>  <operator pos:start="62:35" pos:end="62:35">+</operator> <name pos:start="62:37" pos:end="62:44"><name pos:start="62:37" pos:end="62:37">s</name><operator pos:start="62:38" pos:end="62:39">-&gt;</operator><name pos:start="62:40" pos:end="62:44">h_max</name></name> <operator pos:start="62:46" pos:end="62:46">*</operator> <name pos:start="62:48" pos:end="62:57">block_size</name> <operator pos:start="62:59" pos:end="62:59">-</operator> <literal type="number" pos:start="62:61" pos:end="62:61">1</literal><operator pos:start="62:62" pos:end="62:62">)</operator> <operator pos:start="62:64" pos:end="62:64">/</operator> <operator pos:start="62:66" pos:end="62:66">(</operator><name pos:start="62:67" pos:end="62:74"><name pos:start="62:67" pos:end="62:67">s</name><operator pos:start="62:68" pos:end="62:69">-&gt;</operator><name pos:start="62:70" pos:end="62:74">h_max</name></name> <operator pos:start="62:76" pos:end="62:76">*</operator> <name pos:start="62:78" pos:end="62:87">block_size</name><operator pos:start="62:88" pos:end="62:88">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="63:9" pos:end="63:89"><expr pos:start="63:9" pos:end="63:88"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:20">mb_height</name></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <operator pos:start="63:24" pos:end="63:24">(</operator><name pos:start="63:25" pos:end="63:33"><name pos:start="63:25" pos:end="63:25">s</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:33">height</name></name> <operator pos:start="63:35" pos:end="63:35">+</operator> <name pos:start="63:37" pos:end="63:44"><name pos:start="63:37" pos:end="63:37">s</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:44">v_max</name></name> <operator pos:start="63:46" pos:end="63:46">*</operator> <name pos:start="63:48" pos:end="63:57">block_size</name> <operator pos:start="63:59" pos:end="63:59">-</operator> <literal type="number" pos:start="63:61" pos:end="63:61">1</literal><operator pos:start="63:62" pos:end="63:62">)</operator> <operator pos:start="63:64" pos:end="63:64">/</operator> <operator pos:start="63:66" pos:end="63:66">(</operator><name pos:start="63:67" pos:end="63:74"><name pos:start="63:67" pos:end="63:67">s</name><operator pos:start="63:68" pos:end="63:69">-&gt;</operator><name pos:start="63:70" pos:end="63:74">v_max</name></name> <operator pos:start="63:76" pos:end="63:76">*</operator> <name pos:start="63:78" pos:end="63:87">block_size</name><operator pos:start="63:88" pos:end="63:88">)</operator></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="64:7" pos:end="126:77">else if <condition pos:start="64:15" pos:end="64:22">(<expr pos:start="64:16" pos:end="64:21"><operator pos:start="64:16" pos:end="64:16">!</operator><name pos:start="64:17" pos:end="64:21"><name pos:start="64:17" pos:end="64:17">s</name><operator pos:start="64:18" pos:end="64:19">-&gt;</operator><name pos:start="64:20" pos:end="64:21">ls</name></name></expr>)</condition> <block pos:start="64:24" pos:end="126:77">{<block_content pos:start="65:9" pos:end="126:77"> <comment type="block" pos:start="64:26" pos:end="64:52">/* skip this for JPEG-LS */</comment>
        <expr_stmt pos:start="65:9" pos:end="65:38"><expr pos:start="65:9" pos:end="65:37"><name pos:start="65:9" pos:end="65:9">h</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <name pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:20">h_max</name></name> <operator pos:start="65:22" pos:end="65:22">/</operator> <name pos:start="65:24" pos:end="65:37"><name pos:start="65:24" pos:end="65:24">s</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:34">h_scount</name><index pos:start="65:35" pos:end="65:37">[<expr pos:start="65:36" pos:end="65:36"><literal type="number" pos:start="65:36" pos:end="65:36">0</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="66:9" pos:end="66:38"><expr pos:start="66:9" pos:end="66:37"><name pos:start="66:9" pos:end="66:9">v</name> <operator pos:start="66:11" pos:end="66:11">=</operator> <name pos:start="66:13" pos:end="66:20"><name pos:start="66:13" pos:end="66:13">s</name><operator pos:start="66:14" pos:end="66:15">-&gt;</operator><name pos:start="66:16" pos:end="66:20">v_max</name></name> <operator pos:start="66:22" pos:end="66:22">/</operator> <name pos:start="66:24" pos:end="66:37"><name pos:start="66:24" pos:end="66:24">s</name><operator pos:start="66:25" pos:end="66:26">-&gt;</operator><name pos:start="66:27" pos:end="66:34">v_scount</name><index pos:start="66:35" pos:end="66:37">[<expr pos:start="66:36" pos:end="66:36"><literal type="number" pos:start="66:36" pos:end="66:36">0</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="67:9" pos:end="67:78"><expr pos:start="67:9" pos:end="67:77"><name pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:19">mb_width</name></name>     <operator pos:start="67:25" pos:end="67:25">=</operator> <operator pos:start="67:27" pos:end="67:27">(</operator><name pos:start="67:28" pos:end="67:35"><name pos:start="67:28" pos:end="67:28">s</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:35">width</name></name>  <operator pos:start="67:38" pos:end="67:38">+</operator> <name pos:start="67:40" pos:end="67:40">h</name> <operator pos:start="67:42" pos:end="67:42">*</operator> <name pos:start="67:44" pos:end="67:53">block_size</name> <operator pos:start="67:55" pos:end="67:55">-</operator> <literal type="number" pos:start="67:57" pos:end="67:57">1</literal><operator pos:start="67:58" pos:end="67:58">)</operator> <operator pos:start="67:60" pos:end="67:60">/</operator> <operator pos:start="67:62" pos:end="67:62">(</operator><name pos:start="67:63" pos:end="67:63">h</name> <operator pos:start="67:65" pos:end="67:65">*</operator> <name pos:start="67:67" pos:end="67:76">block_size</name><operator pos:start="67:77" pos:end="67:77">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="68:9" pos:end="68:78"><expr pos:start="68:9" pos:end="68:77"><name pos:start="68:9" pos:end="68:20"><name pos:start="68:9" pos:end="68:9">s</name><operator pos:start="68:10" pos:end="68:11">-&gt;</operator><name pos:start="68:12" pos:end="68:20">mb_height</name></name>    <operator pos:start="68:25" pos:end="68:25">=</operator> <operator pos:start="68:27" pos:end="68:27">(</operator><name pos:start="68:28" pos:end="68:36"><name pos:start="68:28" pos:end="68:28">s</name><operator pos:start="68:29" pos:end="68:30">-&gt;</operator><name pos:start="68:31" pos:end="68:36">height</name></name> <operator pos:start="68:38" pos:end="68:38">+</operator> <name pos:start="68:40" pos:end="68:40">v</name> <operator pos:start="68:42" pos:end="68:42">*</operator> <name pos:start="68:44" pos:end="68:53">block_size</name> <operator pos:start="68:55" pos:end="68:55">-</operator> <literal type="number" pos:start="68:57" pos:end="68:57">1</literal><operator pos:start="68:58" pos:end="68:58">)</operator> <operator pos:start="68:60" pos:end="68:60">/</operator> <operator pos:start="68:62" pos:end="68:62">(</operator><name pos:start="68:63" pos:end="68:63">v</name> <operator pos:start="68:65" pos:end="68:65">*</operator> <name pos:start="68:67" pos:end="68:76">block_size</name><operator pos:start="68:77" pos:end="68:77">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="69:9" pos:end="69:28"><expr pos:start="69:9" pos:end="69:27"><name pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:20">nb_blocks</name><index pos:start="69:21" pos:end="69:23">[<expr pos:start="69:22" pos:end="69:22"><literal type="number" pos:start="69:22" pos:end="69:22">0</literal></expr>]</index></name> <operator pos:start="69:25" pos:end="69:25">=</operator> <literal type="number" pos:start="69:27" pos:end="69:27">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="70:9" pos:end="70:28"><expr pos:start="70:9" pos:end="70:27"><name pos:start="70:9" pos:end="70:22"><name pos:start="70:9" pos:end="70:9">s</name><operator pos:start="70:10" pos:end="70:11">-&gt;</operator><name pos:start="70:12" pos:end="70:19">h_scount</name><index pos:start="70:20" pos:end="70:22">[<expr pos:start="70:21" pos:end="70:21"><literal type="number" pos:start="70:21" pos:end="70:21">0</literal></expr>]</index></name>  <operator pos:start="70:25" pos:end="70:25">=</operator> <literal type="number" pos:start="70:27" pos:end="70:27">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="71:9" pos:end="71:28"><expr pos:start="71:9" pos:end="71:27"><name pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:19">v_scount</name><index pos:start="71:20" pos:end="71:22">[<expr pos:start="71:21" pos:end="71:21"><literal type="number" pos:start="71:21" pos:end="71:21">0</literal></expr>]</index></name>  <operator pos:start="71:25" pos:end="71:25">=</operator> <literal type="number" pos:start="71:27" pos:end="71:27">1</literal></expr>;</expr_stmt>
    <if_stmt pos:start="72:5" pos:end="76:79"><if pos:start="72:5" pos:end="76:79">if <condition pos:start="72:8" pos:end="72:45">(<expr pos:start="72:9" pos:end="72:44"><name pos:start="72:9" pos:end="72:23"><name pos:start="72:9" pos:end="72:9">s</name><operator pos:start="72:10" pos:end="72:11">-&gt;</operator><name pos:start="72:12" pos:end="72:16">avctx</name><operator pos:start="72:17" pos:end="72:18">-&gt;</operator><name pos:start="72:19" pos:end="72:23">debug</name></name> <operator pos:start="72:25" pos:end="72:25">&amp;</operator> <name pos:start="72:27" pos:end="72:44">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="76:79"><block_content pos:start="73:9" pos:end="76:79">
        <expr_stmt pos:start="73:9" pos:end="76:79"><expr pos:start="73:9" pos:end="76:78"><call pos:start="73:9" pos:end="76:78"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="76:78">(<argument pos:start="73:16" pos:end="73:23"><expr pos:start="73:16" pos:end="73:23"><name pos:start="73:16" pos:end="73:23"><name pos:start="73:16" pos:end="73:16">s</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:23">avctx</name></name></expr></argument>, <argument pos:start="73:26" pos:end="73:37"><expr pos:start="73:26" pos:end="73:37"><name pos:start="73:26" pos:end="73:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="73:40" pos:end="73:93"><expr pos:start="73:40" pos:end="73:93"><literal type="string" pos:start="73:40" pos:end="73:93">"%s %s p:%d &gt;&gt;:%d ilv:%d bits:%d skip:%d %s comp:%d\n"</literal></expr></argument>,
               <argument pos:start="74:16" pos:end="74:58"><expr pos:start="74:16" pos:end="74:58"><ternary pos:start="74:16" pos:end="74:58"><condition pos:start="74:16" pos:end="74:28"><expr pos:start="74:16" pos:end="74:26"><name pos:start="74:16" pos:end="74:26"><name pos:start="74:16" pos:end="74:16">s</name><operator pos:start="74:17" pos:end="74:18">-&gt;</operator><name pos:start="74:19" pos:end="74:26">lossless</name></name></expr> ?</condition><then pos:start="74:30" pos:end="74:39"> <expr pos:start="74:30" pos:end="74:39"><literal type="string" pos:start="74:30" pos:end="74:39">"lossless"</literal></expr> </then><else pos:start="74:41" pos:end="74:58">: <expr pos:start="74:43" pos:end="74:58"><literal type="string" pos:start="74:43" pos:end="74:58">"sequential DCT"</literal></expr></else></ternary></expr></argument>, <argument pos:start="74:61" pos:end="74:79"><expr pos:start="74:61" pos:end="74:79"><ternary pos:start="74:61" pos:end="74:79"><condition pos:start="74:61" pos:end="74:68"><expr pos:start="74:61" pos:end="74:66"><name pos:start="74:61" pos:end="74:66"><name pos:start="74:61" pos:end="74:61">s</name><operator pos:start="74:62" pos:end="74:63">-&gt;</operator><name pos:start="74:64" pos:end="74:66">rgb</name></name></expr> ?</condition><then pos:start="74:70" pos:end="74:74"> <expr pos:start="74:70" pos:end="74:74"><literal type="string" pos:start="74:70" pos:end="74:74">"RGB"</literal></expr> </then><else pos:start="74:76" pos:end="74:79">: <expr pos:start="74:78" pos:end="74:79"><literal type="string" pos:start="74:78" pos:end="74:79">""</literal></expr></else></ternary></expr></argument>,
               <argument pos:start="75:16" pos:end="75:24"><expr pos:start="75:16" pos:end="75:24"><name pos:start="75:16" pos:end="75:24">predictor</name></expr></argument>, <argument pos:start="75:27" pos:end="75:41"><expr pos:start="75:27" pos:end="75:41"><name pos:start="75:27" pos:end="75:41">point_transform</name></expr></argument>, <argument pos:start="75:44" pos:end="75:46"><expr pos:start="75:44" pos:end="75:46"><name pos:start="75:44" pos:end="75:46">ilv</name></expr></argument>, <argument pos:start="75:49" pos:end="75:55"><expr pos:start="75:49" pos:end="75:55"><name pos:start="75:49" pos:end="75:55"><name pos:start="75:49" pos:end="75:49">s</name><operator pos:start="75:50" pos:end="75:51">-&gt;</operator><name pos:start="75:52" pos:end="75:55">bits</name></name></expr></argument>, <argument pos:start="75:58" pos:end="75:74"><expr pos:start="75:58" pos:end="75:74"><name pos:start="75:58" pos:end="75:74"><name pos:start="75:58" pos:end="75:58">s</name><operator pos:start="75:59" pos:end="75:60">-&gt;</operator><name pos:start="75:61" pos:end="75:74">mjpb_skiptosod</name></name></expr></argument>,
               <argument pos:start="76:16" pos:end="76:62"><expr pos:start="76:16" pos:end="76:62"><ternary pos:start="76:16" pos:end="76:62"><condition pos:start="76:16" pos:end="76:31"><expr pos:start="76:16" pos:end="76:29"><name pos:start="76:16" pos:end="76:29"><name pos:start="76:16" pos:end="76:16">s</name><operator pos:start="76:17" pos:end="76:18">-&gt;</operator><name pos:start="76:19" pos:end="76:29">pegasus_rct</name></name></expr> ?</condition><then pos:start="76:33" pos:end="76:38"> <expr pos:start="76:33" pos:end="76:38"><literal type="string" pos:start="76:33" pos:end="76:38">"PRCT"</literal></expr> </then><else pos:start="76:40" pos:end="76:62">: <expr pos:start="76:42" pos:end="76:62"><operator pos:start="76:42" pos:end="76:42">(</operator><ternary pos:start="76:43" pos:end="76:61"><condition pos:start="76:43" pos:end="76:50"><expr pos:start="76:43" pos:end="76:48"><name pos:start="76:43" pos:end="76:48"><name pos:start="76:43" pos:end="76:43">s</name><operator pos:start="76:44" pos:end="76:45">-&gt;</operator><name pos:start="76:46" pos:end="76:48">rct</name></name></expr> ?</condition><then pos:start="76:52" pos:end="76:56"> <expr pos:start="76:52" pos:end="76:56"><literal type="string" pos:start="76:52" pos:end="76:56">"RCT"</literal></expr> </then><else pos:start="76:58" pos:end="76:61">: <expr pos:start="76:60" pos:end="76:61"><literal type="string" pos:start="76:60" pos:end="76:61">""</literal></expr></else></ternary><operator pos:start="76:62" pos:end="76:62">)</operator></expr></else></ternary></expr></argument>, <argument pos:start="76:65" pos:end="76:77"><expr pos:start="76:65" pos:end="76:77"><name pos:start="76:65" pos:end="76:77">nb_components</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <comment type="block" pos:start="77:5" pos:end="77:78">/* mjpeg-b can have padding bytes between sos and image data, skip them */</comment>
    <for pos:start="78:5" pos:end="79:29">for <control pos:start="78:9" pos:end="78:43">(<init pos:start="78:10" pos:end="78:31"><expr pos:start="78:10" pos:end="78:30"><name pos:start="78:10" pos:end="78:10">i</name> <operator pos:start="78:12" pos:end="78:12">=</operator> <name pos:start="78:14" pos:end="78:30"><name pos:start="78:14" pos:end="78:14">s</name><operator pos:start="78:15" pos:end="78:16">-&gt;</operator><name pos:start="78:17" pos:end="78:30">mjpb_skiptosod</name></name></expr>;</init> <condition pos:start="78:33" pos:end="78:38"><expr pos:start="78:33" pos:end="78:37"><name pos:start="78:33" pos:end="78:33">i</name> <operator pos:start="78:35" pos:end="78:35">&gt;</operator> <literal type="number" pos:start="78:37" pos:end="78:37">0</literal></expr>;</condition> <incr pos:start="78:40" pos:end="78:42"><expr pos:start="78:40" pos:end="78:42"><name pos:start="78:40" pos:end="78:40">i</name><operator pos:start="78:41" pos:end="78:42">--</operator></expr></incr>)</control><block type="pseudo" pos:start="79:9" pos:end="79:29"><block_content pos:start="79:9" pos:end="79:29">
        <expr_stmt pos:start="79:9" pos:end="79:29"><expr pos:start="79:9" pos:end="79:28"><call pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:17">skip_bits</name><argument_list pos:start="79:18" pos:end="79:28">(<argument pos:start="79:19" pos:end="79:24"><expr pos:start="79:19" pos:end="79:24"><operator pos:start="79:19" pos:end="79:19">&amp;</operator><name pos:start="79:20" pos:end="79:24"><name pos:start="79:20" pos:end="79:20">s</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:24">gb</name></name></expr></argument>, <argument pos:start="79:27" pos:end="79:27"><expr pos:start="79:27" pos:end="79:27"><literal type="number" pos:start="79:27" pos:end="79:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<label pos:start="80:1" pos:end="80:11"><name pos:start="80:1" pos:end="80:10">next_field</name>:</label>
    <for pos:start="81:5" pos:end="82:39">for <control pos:start="81:9" pos:end="81:39">(<init pos:start="81:10" pos:end="81:15"><expr pos:start="81:10" pos:end="81:14"><name pos:start="81:10" pos:end="81:10">i</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <literal type="number" pos:start="81:14" pos:end="81:14">0</literal></expr>;</init> <condition pos:start="81:17" pos:end="81:34"><expr pos:start="81:17" pos:end="81:33"><name pos:start="81:17" pos:end="81:17">i</name> <operator pos:start="81:19" pos:end="81:19">&lt;</operator> <name pos:start="81:21" pos:end="81:33">nb_components</name></expr>;</condition> <incr pos:start="81:36" pos:end="81:38"><expr pos:start="81:36" pos:end="81:38"><name pos:start="81:36" pos:end="81:36">i</name><operator pos:start="81:37" pos:end="81:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="82:9" pos:end="82:39"><block_content pos:start="82:9" pos:end="82:39">
        <expr_stmt pos:start="82:9" pos:end="82:39"><expr pos:start="82:9" pos:end="82:38"><name pos:start="82:9" pos:end="82:21"><name pos:start="82:9" pos:end="82:9">s</name><operator pos:start="82:10" pos:end="82:11">-&gt;</operator><name pos:start="82:12" pos:end="82:18">last_dc</name><index pos:start="82:19" pos:end="82:21">[<expr pos:start="82:20" pos:end="82:20"><name pos:start="82:20" pos:end="82:20">i</name></expr>]</index></name> <operator pos:start="82:23" pos:end="82:23">=</operator> <operator pos:start="82:25" pos:end="82:25">(</operator><literal type="number" pos:start="82:26" pos:end="82:26">4</literal> <operator pos:start="82:28" pos:end="82:29">&lt;&lt;</operator> <name pos:start="82:31" pos:end="82:37"><name pos:start="82:31" pos:end="82:31">s</name><operator pos:start="82:32" pos:end="82:33">-&gt;</operator><name pos:start="82:34" pos:end="82:37">bits</name></name><operator pos:start="82:38" pos:end="82:38">)</operator></expr>;</expr_stmt></block_content></block></for>
    <if_stmt pos:start="83:5" pos:end="126:77"><if pos:start="83:5" pos:end="126:77">if <condition pos:start="83:8" pos:end="83:20">(<expr pos:start="83:9" pos:end="83:19"><name pos:start="83:9" pos:end="83:19"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:19">lossless</name></name></expr>)</condition> <block pos:start="83:22" pos:end="126:77">{<block_content pos:start="84:9" pos:end="126:77">
        <expr_stmt pos:start="84:9" pos:end="84:49"><expr pos:start="84:9" pos:end="84:48"><call pos:start="84:9" pos:end="84:48"><name pos:start="84:9" pos:end="84:18">av_assert0</name><argument_list pos:start="84:19" pos:end="84:48">(<argument pos:start="84:20" pos:end="84:47"><expr pos:start="84:20" pos:end="84:47"><name pos:start="84:20" pos:end="84:33"><name pos:start="84:20" pos:end="84:20">s</name><operator pos:start="84:21" pos:end="84:22">-&gt;</operator><name pos:start="84:23" pos:end="84:33">picture_ptr</name></name> <operator pos:start="84:35" pos:end="84:36">==</operator> <name pos:start="84:38" pos:end="84:47"><name pos:start="84:38" pos:end="84:38">s</name><operator pos:start="84:39" pos:end="84:40">-&gt;</operator><name pos:start="84:41" pos:end="84:47">picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="85:9" pos:end="126:77"><if pos:start="85:9" pos:end="91:9">if <condition pos:start="85:12" pos:end="85:43">(<expr pos:start="85:13" pos:end="85:42"><name pos:start="85:13" pos:end="85:33">CONFIG_JPEGLS_DECODER</name> <operator pos:start="85:35" pos:end="85:36">&amp;&amp;</operator> <name pos:start="85:38" pos:end="85:42"><name pos:start="85:38" pos:end="85:38">s</name><operator pos:start="85:39" pos:end="85:40">-&gt;</operator><name pos:start="85:41" pos:end="85:42">ls</name></name></expr>)</condition> <block pos:start="85:45" pos:end="91:9">{<block_content pos:start="88:13" pos:end="90:27">
<comment type="line" pos:start="86:1" pos:end="86:22">//            for () {</comment>
<comment type="line" pos:start="87:1" pos:end="87:47">//            reset_ls_coding_parameters(s, 0);</comment>
            <if_stmt pos:start="88:13" pos:end="90:27"><if pos:start="88:13" pos:end="90:27">if <condition pos:start="88:16" pos:end="89:75">(<expr pos:start="88:17" pos:end="89:74"><operator pos:start="88:17" pos:end="88:17">(</operator><name pos:start="88:18" pos:end="88:20">ret</name> <operator pos:start="88:22" pos:end="88:22">=</operator> <call pos:start="88:24" pos:end="89:69"><name pos:start="88:24" pos:end="88:47">ff_jpegls_decode_picture</name><argument_list pos:start="88:48" pos:end="89:69">(<argument pos:start="88:49" pos:end="88:49"><expr pos:start="88:49" pos:end="88:49"><name pos:start="88:49" pos:end="88:49">s</name></expr></argument>, <argument pos:start="88:52" pos:end="88:60"><expr pos:start="88:52" pos:end="88:60"><name pos:start="88:52" pos:end="88:60">predictor</name></expr></argument>,
                                                <argument pos:start="89:49" pos:end="89:63"><expr pos:start="89:49" pos:end="89:63"><name pos:start="89:49" pos:end="89:63">point_transform</name></expr></argument>, <argument pos:start="89:66" pos:end="89:68"><expr pos:start="89:66" pos:end="89:68"><name pos:start="89:66" pos:end="89:68">ilv</name></expr></argument>)</argument_list></call><operator pos:start="89:70" pos:end="89:70">)</operator> <operator pos:start="89:72" pos:end="89:72">&lt;</operator> <literal type="number" pos:start="89:74" pos:end="89:74">0</literal></expr>)</condition><block type="pseudo" pos:start="90:17" pos:end="90:27"><block_content pos:start="90:17" pos:end="90:27">
                <return pos:start="90:17" pos:end="90:27">return <expr pos:start="90:24" pos:end="90:26"><name pos:start="90:24" pos:end="90:26">ret</name></expr>;</return></block_content></block></if></if_stmt>
        </block_content>}</block></if> <else pos:start="91:11" pos:end="126:77">else <block pos:start="91:16" pos:end="126:77">{<block_content pos:start="92:13" pos:end="126:77">
            <if_stmt pos:start="92:13" pos:end="100:5"><if pos:start="92:13" pos:end="95:13">if <condition pos:start="92:16" pos:end="92:23">(<expr pos:start="92:17" pos:end="92:22"><name pos:start="92:17" pos:end="92:22"><name pos:start="92:17" pos:end="92:17">s</name><operator pos:start="92:18" pos:end="92:19">-&gt;</operator><name pos:start="92:20" pos:end="92:22">rgb</name></name></expr>)</condition> <block pos:start="92:25" pos:end="95:13">{<block_content pos:start="93:17" pos:end="94:31">
                <if_stmt pos:start="93:17" pos:end="94:31"><if pos:start="93:17" pos:end="94:31">if <condition pos:start="93:20" pos:end="93:100">(<expr pos:start="93:21" pos:end="93:99"><operator pos:start="93:21" pos:end="93:21">(</operator><name pos:start="93:22" pos:end="93:24">ret</name> <operator pos:start="93:26" pos:end="93:26">=</operator> <call pos:start="93:28" pos:end="93:94"><name pos:start="93:28" pos:end="93:48">ljpeg_decode_rgb_scan</name><argument_list pos:start="93:49" pos:end="93:94">(<argument pos:start="93:50" pos:end="93:50"><expr pos:start="93:50" pos:end="93:50"><name pos:start="93:50" pos:end="93:50">s</name></expr></argument>, <argument pos:start="93:53" pos:end="93:65"><expr pos:start="93:53" pos:end="93:65"><name pos:start="93:53" pos:end="93:65">nb_components</name></expr></argument>, <argument pos:start="93:68" pos:end="93:76"><expr pos:start="93:68" pos:end="93:76"><name pos:start="93:68" pos:end="93:76">predictor</name></expr></argument>, <argument pos:start="93:79" pos:end="93:93"><expr pos:start="93:79" pos:end="93:93"><name pos:start="93:79" pos:end="93:93">point_transform</name></expr></argument>)</argument_list></call><operator pos:start="93:95" pos:end="93:95">)</operator> <operator pos:start="93:97" pos:end="93:97">&lt;</operator> <literal type="number" pos:start="93:99" pos:end="93:99">0</literal></expr>)</condition><block type="pseudo" pos:start="94:21" pos:end="94:31"><block_content pos:start="94:21" pos:end="94:31">
                    <return pos:start="94:21" pos:end="94:31">return <expr pos:start="94:28" pos:end="94:30"><name pos:start="94:28" pos:end="94:30">ret</name></expr>;</return></block_content></block></if></if_stmt>
            </block_content>}</block></if> <else pos:start="95:15" pos:end="100:5">else <block pos:start="95:20" pos:end="100:5">{<block_content pos:start="96:17" pos:end="99:31">
                <if_stmt pos:start="96:17" pos:end="99:31"><if pos:start="96:17" pos:end="99:31">if <condition pos:start="96:20" pos:end="98:69">(<expr pos:start="96:21" pos:end="98:68"><operator pos:start="96:21" pos:end="96:21">(</operator><name pos:start="96:22" pos:end="96:24">ret</name> <operator pos:start="96:26" pos:end="96:26">=</operator> <call pos:start="96:28" pos:end="98:63"><name pos:start="96:28" pos:end="96:48">ljpeg_decode_yuv_scan</name><argument_list pos:start="96:49" pos:end="98:63">(<argument pos:start="96:50" pos:end="96:50"><expr pos:start="96:50" pos:end="96:50"><name pos:start="96:50" pos:end="96:50">s</name></expr></argument>, <argument pos:start="96:53" pos:end="96:61"><expr pos:start="96:53" pos:end="96:61"><name pos:start="96:53" pos:end="96:61">predictor</name></expr></argument>,
                                                 <argument pos:start="97:50" pos:end="97:64"><expr pos:start="97:50" pos:end="97:64"><name pos:start="97:50" pos:end="97:64">point_transform</name></expr></argument>,
                                                 <argument pos:start="98:50" pos:end="98:62"><expr pos:start="98:50" pos:end="98:62"><name pos:start="98:50" pos:end="98:62">nb_components</name></expr></argument>)</argument_list></call><operator pos:start="98:64" pos:end="98:64">)</operator> <operator pos:start="98:66" pos:end="98:66">&lt;</operator> <literal type="number" pos:start="98:68" pos:end="98:68">0</literal></expr>)</condition><block type="pseudo" pos:start="99:21" pos:end="99:31"><block_content pos:start="99:21" pos:end="99:31">
                    <return pos:start="99:21" pos:end="99:31">return <expr pos:start="99:28" pos:end="99:30"><name pos:start="99:28" pos:end="99:30">ret</name></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></else></if_stmt> <if_stmt pos:start="100:7" pos:end="126:77"><else pos:start="100:7" pos:end="126:77">else <block pos:start="100:12" pos:end="126:77">{<block_content pos:start="101:9" pos:end="126:77">
        <if_stmt pos:start="101:9" pos:end="126:77"><if pos:start="101:9" pos:end="107:9">if <condition pos:start="101:12" pos:end="101:40">(<expr pos:start="101:13" pos:end="101:39"><name pos:start="101:13" pos:end="101:26"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:26">progressive</name></name> <operator pos:start="101:28" pos:end="101:29">&amp;&amp;</operator> <name pos:start="101:31" pos:end="101:39">predictor</name></expr>)</condition> <block pos:start="101:42" pos:end="107:9">{<block_content pos:start="102:13" pos:end="106:27">
            <expr_stmt pos:start="102:13" pos:end="102:53"><expr pos:start="102:13" pos:end="102:52"><call pos:start="102:13" pos:end="102:52"><name pos:start="102:13" pos:end="102:22">av_assert0</name><argument_list pos:start="102:23" pos:end="102:52">(<argument pos:start="102:24" pos:end="102:51"><expr pos:start="102:24" pos:end="102:51"><name pos:start="102:24" pos:end="102:37"><name pos:start="102:24" pos:end="102:24">s</name><operator pos:start="102:25" pos:end="102:26">-&gt;</operator><name pos:start="102:27" pos:end="102:37">picture_ptr</name></name> <operator pos:start="102:39" pos:end="102:40">==</operator> <name pos:start="102:42" pos:end="102:51"><name pos:start="102:42" pos:end="102:42">s</name><operator pos:start="102:43" pos:end="102:44">-&gt;</operator><name pos:start="102:45" pos:end="102:51">picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="103:13" pos:end="106:27"><if pos:start="103:13" pos:end="106:27">if <condition pos:start="103:16" pos:end="105:78">(<expr pos:start="103:17" pos:end="105:77"><operator pos:start="103:17" pos:end="103:17">(</operator><name pos:start="103:18" pos:end="103:20">ret</name> <operator pos:start="103:22" pos:end="103:22">=</operator> <call pos:start="103:24" pos:end="105:72"><name pos:start="103:24" pos:end="103:55">mjpeg_decode_scan_progressive_ac</name><argument_list pos:start="103:56" pos:end="105:72">(<argument pos:start="103:57" pos:end="103:57"><expr pos:start="103:57" pos:end="103:57"><name pos:start="103:57" pos:end="103:57">s</name></expr></argument>, <argument pos:start="103:60" pos:end="103:68"><expr pos:start="103:60" pos:end="103:68"><name pos:start="103:60" pos:end="103:68">predictor</name></expr></argument>,
                                                        <argument pos:start="104:57" pos:end="104:59"><expr pos:start="104:57" pos:end="104:59"><name pos:start="104:57" pos:end="104:59">ilv</name></expr></argument>, <argument pos:start="104:62" pos:end="104:71"><expr pos:start="104:62" pos:end="104:71"><name pos:start="104:62" pos:end="104:71">prev_shift</name></expr></argument>,
                                                        <argument pos:start="105:57" pos:end="105:71"><expr pos:start="105:57" pos:end="105:71"><name pos:start="105:57" pos:end="105:71">point_transform</name></expr></argument>)</argument_list></call><operator pos:start="105:73" pos:end="105:73">)</operator> <operator pos:start="105:75" pos:end="105:75">&lt;</operator> <literal type="number" pos:start="105:77" pos:end="105:77">0</literal></expr>)</condition><block type="pseudo" pos:start="106:17" pos:end="106:27"><block_content pos:start="106:17" pos:end="106:27">
                <return pos:start="106:17" pos:end="106:27">return <expr pos:start="106:24" pos:end="106:26"><name pos:start="106:24" pos:end="106:26">ret</name></expr>;</return></block_content></block></if></if_stmt>
        </block_content>}</block></if> <else pos:start="107:11" pos:end="126:77">else <block pos:start="107:16" pos:end="126:77">{<block_content pos:start="108:13" pos:end="126:77">
            <if_stmt pos:start="108:13" pos:end="111:27"><if pos:start="108:13" pos:end="111:27">if <condition pos:start="108:16" pos:end="110:86">(<expr pos:start="108:17" pos:end="110:85"><operator pos:start="108:17" pos:end="108:17">(</operator><name pos:start="108:18" pos:end="108:20">ret</name> <operator pos:start="108:22" pos:end="108:22">=</operator> <call pos:start="108:24" pos:end="110:80"><name pos:start="108:24" pos:end="108:40">mjpeg_decode_scan</name><argument_list pos:start="108:41" pos:end="110:80">(<argument pos:start="108:42" pos:end="108:42"><expr pos:start="108:42" pos:end="108:42"><name pos:start="108:42" pos:end="108:42">s</name></expr></argument>, <argument pos:start="108:45" pos:end="108:57"><expr pos:start="108:45" pos:end="108:57"><name pos:start="108:45" pos:end="108:57">nb_components</name></expr></argument>,
                                         <argument pos:start="109:42" pos:end="109:51"><expr pos:start="109:42" pos:end="109:51"><name pos:start="109:42" pos:end="109:51">prev_shift</name></expr></argument>, <argument pos:start="109:54" pos:end="109:68"><expr pos:start="109:54" pos:end="109:68"><name pos:start="109:54" pos:end="109:68">point_transform</name></expr></argument>,
                                         <argument pos:start="110:42" pos:end="110:51"><expr pos:start="110:42" pos:end="110:51"><name pos:start="110:42" pos:end="110:51">mb_bitmask</name></expr></argument>, <argument pos:start="110:54" pos:end="110:68"><expr pos:start="110:54" pos:end="110:68"><name pos:start="110:54" pos:end="110:68">mb_bitmask_size</name></expr></argument>, <argument pos:start="110:71" pos:end="110:79"><expr pos:start="110:71" pos:end="110:79"><name pos:start="110:71" pos:end="110:79">reference</name></expr></argument>)</argument_list></call><operator pos:start="110:81" pos:end="110:81">)</operator> <operator pos:start="110:83" pos:end="110:83">&lt;</operator> <literal type="number" pos:start="110:85" pos:end="110:85">0</literal></expr>)</condition><block type="pseudo" pos:start="111:17" pos:end="111:27"><block_content pos:start="111:17" pos:end="111:27">
                <return pos:start="111:17" pos:end="111:27">return <expr pos:start="111:24" pos:end="111:26"><name pos:start="111:24" pos:end="111:26">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="112:5" pos:end="126:77"><if pos:start="112:5" pos:end="126:77">if <condition pos:start="112:8" pos:end="114:37">(<expr pos:start="112:9" pos:end="114:36"><name pos:start="112:9" pos:end="112:21"><name pos:start="112:9" pos:end="112:9">s</name><operator pos:start="112:10" pos:end="112:11">-&gt;</operator><name pos:start="112:12" pos:end="112:21">interlaced</name></name> <operator pos:start="112:23" pos:end="112:24">&amp;&amp;</operator>
        <call pos:start="113:9" pos:end="113:29"><name pos:start="113:9" pos:end="113:21">get_bits_left</name><argument_list pos:start="113:22" pos:end="113:29">(<argument pos:start="113:23" pos:end="113:28"><expr pos:start="113:23" pos:end="113:28"><operator pos:start="113:23" pos:end="113:23">&amp;</operator><name pos:start="113:24" pos:end="113:28"><name pos:start="113:24" pos:end="113:24">s</name><operator pos:start="113:25" pos:end="113:26">-&gt;</operator><name pos:start="113:27" pos:end="113:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="113:31" pos:end="113:31">&gt;</operator> <literal type="number" pos:start="113:33" pos:end="113:34">32</literal> <operator pos:start="113:36" pos:end="113:37">&amp;&amp;</operator>
        <call pos:start="114:9" pos:end="114:28"><name pos:start="114:9" pos:end="114:17">show_bits</name><argument_list pos:start="114:18" pos:end="114:28">(<argument pos:start="114:19" pos:end="114:24"><expr pos:start="114:19" pos:end="114:24"><operator pos:start="114:19" pos:end="114:19">&amp;</operator><name pos:start="114:20" pos:end="114:24"><name pos:start="114:20" pos:end="114:20">s</name><operator pos:start="114:21" pos:end="114:22">-&gt;</operator><name pos:start="114:23" pos:end="114:24">gb</name></name></expr></argument>, <argument pos:start="114:27" pos:end="114:27"><expr pos:start="114:27" pos:end="114:27"><literal type="number" pos:start="114:27" pos:end="114:27">8</literal></expr></argument>)</argument_list></call> <operator pos:start="114:30" pos:end="114:31">==</operator> <literal type="number" pos:start="114:33" pos:end="114:36">0xFF</literal></expr>)</condition> <block pos:start="114:39" pos:end="126:77">{<block_content pos:start="115:9" pos:end="126:77">
        <decl_stmt pos:start="115:9" pos:end="115:34"><decl pos:start="115:9" pos:end="115:33"><type pos:start="115:9" pos:end="115:21"><name pos:start="115:9" pos:end="115:21">GetBitContext</name></type> <name pos:start="115:23" pos:end="115:25">bak</name> <init pos:start="115:27" pos:end="115:33">= <expr pos:start="115:29" pos:end="115:33"><name pos:start="115:29" pos:end="115:33"><name pos:start="115:29" pos:end="115:29">s</name><operator pos:start="115:30" pos:end="115:31">-&gt;</operator><name pos:start="115:32" pos:end="115:33">gb</name></name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="116:9" pos:end="116:29"><expr pos:start="116:9" pos:end="116:28"><call pos:start="116:9" pos:end="116:28"><name pos:start="116:9" pos:end="116:22">align_get_bits</name><argument_list pos:start="116:23" pos:end="116:28">(<argument pos:start="116:24" pos:end="116:27"><expr pos:start="116:24" pos:end="116:27"><operator pos:start="116:24" pos:end="116:24">&amp;</operator><name pos:start="116:25" pos:end="116:27">bak</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="117:9" pos:end="126:77"><if pos:start="117:9" pos:end="126:77">if <condition pos:start="117:12" pos:end="117:42">(<expr pos:start="117:13" pos:end="117:41"><call pos:start="117:13" pos:end="117:31"><name pos:start="117:13" pos:end="117:21">show_bits</name><argument_list pos:start="117:22" pos:end="117:31">(<argument pos:start="117:23" pos:end="117:26"><expr pos:start="117:23" pos:end="117:26"><operator pos:start="117:23" pos:end="117:23">&amp;</operator><name pos:start="117:24" pos:end="117:26">bak</name></expr></argument>, <argument pos:start="117:29" pos:end="117:30"><expr pos:start="117:29" pos:end="117:30"><literal type="number" pos:start="117:29" pos:end="117:30">16</literal></expr></argument>)</argument_list></call> <operator pos:start="117:33" pos:end="117:34">==</operator> <literal type="number" pos:start="117:36" pos:end="117:41">0xFFD1</literal></expr>)</condition> <block pos:start="117:44" pos:end="126:77">{<block_content pos:start="118:13" pos:end="126:77">
            <expr_stmt pos:start="118:13" pos:end="118:85"><expr pos:start="118:13" pos:end="118:84"><call pos:start="118:13" pos:end="118:84"><name pos:start="118:13" pos:end="118:18">av_log</name><argument_list pos:start="118:19" pos:end="118:84">(<argument pos:start="118:20" pos:end="118:27"><expr pos:start="118:20" pos:end="118:27"><name pos:start="118:20" pos:end="118:27"><name pos:start="118:20" pos:end="118:20">s</name><operator pos:start="118:21" pos:end="118:22">-&gt;</operator><name pos:start="118:23" pos:end="118:27">avctx</name></name></expr></argument>, <argument pos:start="118:30" pos:end="118:41"><expr pos:start="118:30" pos:end="118:41"><name pos:start="118:30" pos:end="118:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="118:44" pos:end="118:83"><expr pos:start="118:44" pos:end="118:83"><literal type="string" pos:start="118:44" pos:end="118:83">"AVRn interlaced picture marker found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="119:13" pos:end="119:24"><expr pos:start="119:13" pos:end="119:23"><name pos:start="119:13" pos:end="119:17"><name pos:start="119:13" pos:end="119:13">s</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:17">gb</name></name> <operator pos:start="119:19" pos:end="119:19">=</operator> <name pos:start="119:21" pos:end="119:23">bak</name></expr>;</expr_stmt>
            <expr_stmt pos:start="120:13" pos:end="120:34"><expr pos:start="120:13" pos:end="120:33"><call pos:start="120:13" pos:end="120:33"><name pos:start="120:13" pos:end="120:21">skip_bits</name><argument_list pos:start="120:22" pos:end="120:33">(<argument pos:start="120:23" pos:end="120:28"><expr pos:start="120:23" pos:end="120:28"><operator pos:start="120:23" pos:end="120:23">&amp;</operator><name pos:start="120:24" pos:end="120:28"><name pos:start="120:24" pos:end="120:24">s</name><operator pos:start="120:25" pos:end="120:26">-&gt;</operator><name pos:start="120:27" pos:end="120:28">gb</name></name></expr></argument>, <argument pos:start="120:31" pos:end="120:32"><expr pos:start="120:31" pos:end="120:32"><literal type="number" pos:start="120:31" pos:end="120:32">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="121:13" pos:end="121:33"><expr pos:start="121:13" pos:end="121:32"><name pos:start="121:13" pos:end="121:27"><name pos:start="121:13" pos:end="121:13">s</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:27">bottom_field</name></name> <operator pos:start="121:29" pos:end="121:30">^=</operator> <literal type="number" pos:start="121:32" pos:end="121:32">1</literal></expr>;</expr_stmt>
            <goto pos:start="122:13" pos:end="122:28">goto <name pos:start="122:18" pos:end="122:27">next_field</name>;</goto>
    <expr_stmt pos:start="123:5" pos:end="123:13"><expr pos:start="123:5" pos:end="123:12"><call pos:start="123:5" pos:end="123:12"><name pos:start="123:5" pos:end="123:10">emms_c</name><argument_list pos:start="123:11" pos:end="123:12">()</argument_list></call></expr>;</expr_stmt>
    <return pos:start="124:5" pos:end="124:13">return <expr pos:start="124:12" pos:end="124:12"><literal type="number" pos:start="124:12" pos:end="124:12">0</literal></expr>;</return>
 <label pos:start="125:2" pos:end="125:14"><name pos:start="125:2" pos:end="125:13">out_of_range</name>:</label>
    <expr_stmt pos:start="126:5" pos:end="126:77"><expr pos:start="126:5" pos:end="126:76"><call pos:start="126:5" pos:end="126:76"><name pos:start="126:5" pos:end="126:10">av_log</name><argument_list pos:start="126:11" pos:end="126:76">(<argument pos:start="126:12" pos:end="126:19"><expr pos:start="126:12" pos:end="126:19"><name pos:start="126:12" pos:end="126:19"><name pos:start="126:12" pos:end="126:12">s</name><operator pos:start="126:13" pos:end="126:14">-&gt;</operator><name pos:start="126:15" pos:end="126:19">avctx</name></name></expr></argument>, <argument pos:start="126:22" pos:end="126:33"><expr pos:start="126:22" pos:end="126:33"><name pos:start="126:22" pos:end="126:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="126:36" pos:end="126:75"><expr pos:start="126:36" pos:end="126:75"><literal type="string" pos:start="126:36" pos:end="126:75">"decode_sos: ac/dc index out of range\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
