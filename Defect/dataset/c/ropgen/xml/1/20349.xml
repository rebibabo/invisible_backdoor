<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20349.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">vnc_tls_handshake_done</name><parameter_list pos:start="1:35" pos:end="3:54">(<parameter pos:start="1:36" pos:end="1:48"><decl pos:start="1:36" pos:end="1:48"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:42">QIOTask</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">task</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:53"><decl pos:start="3:36" pos:end="3:53"><type pos:start="3:36" pos:end="3:53"><name pos:start="3:36" pos:end="3:43">gpointer</name></type> <name pos:start="3:45" pos:end="3:53">user_data</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="33:1">{<block_content pos:start="7:5" pos:end="31:5">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">VncState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">vs</name> <init pos:start="7:18" pos:end="7:28">= <expr pos:start="7:20" pos:end="7:28"><name pos:start="7:20" pos:end="7:28">user_data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="31:5"><if pos:start="13:5" pos:end="23:5">if <condition pos:start="13:8" pos:end="13:45">(<expr pos:start="13:9" pos:end="13:44"><call pos:start="13:9" pos:end="13:44"><name pos:start="13:9" pos:end="13:32">qio_task_propagate_error</name><argument_list pos:start="13:33" pos:end="13:44">(<argument pos:start="13:34" pos:end="13:37"><expr pos:start="13:34" pos:end="13:37"><name pos:start="13:34" pos:end="13:37">task</name></expr></argument>, <argument pos:start="13:40" pos:end="13:43"><expr pos:start="13:40" pos:end="13:43"><operator pos:start="13:40" pos:end="13:40">&amp;</operator><name pos:start="13:41" pos:end="13:43">err</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:47" pos:end="23:5">{<block_content pos:start="15:9" pos:end="21:24">

        <expr_stmt pos:start="15:9" pos:end="17:41"><expr pos:start="15:9" pos:end="17:40"><call pos:start="15:9" pos:end="17:40"><name pos:start="15:9" pos:end="15:17">VNC_DEBUG</name><argument_list pos:start="15:18" pos:end="17:40">(<argument pos:start="15:19" pos:end="15:41"><expr pos:start="15:19" pos:end="15:41"><literal type="string" pos:start="15:19" pos:end="15:41">"Handshake failed %s\n"</literal></expr></argument>,

                  <argument pos:start="17:19" pos:end="17:39"><expr pos:start="17:19" pos:end="17:39"><call pos:start="17:19" pos:end="17:39"><name pos:start="17:19" pos:end="17:34">error_get_pretty</name><argument_list pos:start="17:35" pos:end="17:39">(<argument pos:start="17:36" pos:end="17:38"><expr pos:start="17:36" pos:end="17:38"><name pos:start="17:36" pos:end="17:38">err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><call pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:24">vnc_client_error</name><argument_list pos:start="19:25" pos:end="19:28">(<argument pos:start="19:26" pos:end="19:27"><expr pos:start="19:26" pos:end="19:27"><name pos:start="19:26" pos:end="19:27">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:24"><expr pos:start="21:9" pos:end="21:23"><call pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:18">error_free</name><argument_list pos:start="21:19" pos:end="21:23">(<argument pos:start="21:20" pos:end="21:22"><expr pos:start="21:20" pos:end="21:22"><name pos:start="21:20" pos:end="21:22">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="31:5">else <block pos:start="23:12" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:40">

        <expr_stmt pos:start="25:9" pos:end="27:66"><expr pos:start="25:9" pos:end="27:65"><name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:10">vs</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:19">ioc_tag</name></name> <operator pos:start="25:21" pos:end="25:21">=</operator> <call pos:start="25:23" pos:end="27:65"><name pos:start="25:23" pos:end="25:43">qio_channel_add_watch</name><argument_list pos:start="25:44" pos:end="27:65">(

            <argument pos:start="27:13" pos:end="27:19"><expr pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:14">vs</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:19">ioc</name></name></expr></argument>, <argument pos:start="27:22" pos:end="27:39"><expr pos:start="27:22" pos:end="27:39"><name pos:start="27:22" pos:end="27:28">G_IO_IN</name> <operator pos:start="27:30" pos:end="27:30">|</operator> <name pos:start="27:32" pos:end="27:39">G_IO_OUT</name></expr></argument>, <argument pos:start="27:42" pos:end="27:54"><expr pos:start="27:42" pos:end="27:54"><name pos:start="27:42" pos:end="27:54">vnc_client_io</name></expr></argument>, <argument pos:start="27:57" pos:end="27:58"><expr pos:start="27:57" pos:end="27:58"><name pos:start="27:57" pos:end="27:58">vs</name></expr></argument>, <argument pos:start="27:61" pos:end="27:64"><expr pos:start="27:61" pos:end="27:64"><name pos:start="27:61" pos:end="27:64">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:40"><expr pos:start="29:9" pos:end="29:39"><call pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:35">start_auth_vencrypt_subauth</name><argument_list pos:start="29:36" pos:end="29:39">(<argument pos:start="29:37" pos:end="29:38"><expr pos:start="29:37" pos:end="29:38"><name pos:start="29:37" pos:end="29:38">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
