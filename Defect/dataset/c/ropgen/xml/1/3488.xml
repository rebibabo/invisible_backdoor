<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3488.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">init_proc_970MP</name> <parameter_list pos:start="1:29" pos:end="1:46">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:40">CPUPPCState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:25">

    <expr_stmt pos:start="5:5" pos:end="5:24"><expr pos:start="5:5" pos:end="5:23"><call pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:18">gen_spr_ne_601</name><argument_list pos:start="5:19" pos:end="5:23">(<argument pos:start="5:20" pos:end="5:22"><expr pos:start="5:20" pos:end="5:22"><name pos:start="5:20" pos:end="5:22">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:21"><expr pos:start="7:5" pos:end="7:20"><call pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:15">gen_spr_7xx</name><argument_list pos:start="7:16" pos:end="7:20">(<argument pos:start="7:17" pos:end="7:19"><expr pos:start="7:17" pos:end="7:19"><name pos:start="7:17" pos:end="7:19">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="9:5" pos:end="9:19">/* Time base */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><call pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:11">gen_tbl</name><argument_list pos:start="11:12" pos:end="11:16">(<argument pos:start="11:13" pos:end="11:15"><expr pos:start="11:13" pos:end="11:15"><name pos:start="11:13" pos:end="11:15">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="13:5" pos:end="13:43">/* Hardware implementation registers */</comment>

    <comment type="block" pos:start="15:5" pos:end="15:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="17:5" pos:end="23:29"><expr pos:start="17:5" pos:end="23:28"><call pos:start="17:5" pos:end="23:28"><name pos:start="17:5" pos:end="17:16">spr_register</name><argument_list pos:start="17:17" pos:end="23:28">(<argument pos:start="17:18" pos:end="17:20"><expr pos:start="17:18" pos:end="17:20"><name pos:start="17:18" pos:end="17:20">env</name></expr></argument>, <argument pos:start="17:23" pos:end="17:30"><expr pos:start="17:23" pos:end="17:30"><name pos:start="17:23" pos:end="17:30">SPR_HID0</name></expr></argument>, <argument pos:start="17:33" pos:end="17:38"><expr pos:start="17:33" pos:end="17:38"><literal type="string" pos:start="17:33" pos:end="17:38">"HID0"</literal></expr></argument>,

                 <argument pos:start="19:18" pos:end="19:29"><expr pos:start="19:18" pos:end="19:29"><name pos:start="19:18" pos:end="19:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="19:32" pos:end="19:43"><expr pos:start="19:32" pos:end="19:43"><name pos:start="19:32" pos:end="19:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="21:18" pos:end="21:34"><expr pos:start="21:18" pos:end="21:34"><operator pos:start="21:18" pos:end="21:18">&amp;</operator><name pos:start="21:19" pos:end="21:34">spr_read_generic</name></expr></argument>, <argument pos:start="21:37" pos:end="21:52"><expr pos:start="21:37" pos:end="21:52"><operator pos:start="21:37" pos:end="21:37">&amp;</operator><name pos:start="21:38" pos:end="21:52">spr_write_clear</name></expr></argument>,

                 <argument pos:start="23:18" pos:end="23:27"><expr pos:start="23:18" pos:end="23:27"><literal type="number" pos:start="23:18" pos:end="23:27">0x60000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="25:5" pos:end="25:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="27:5" pos:end="33:29"><expr pos:start="27:5" pos:end="33:28"><call pos:start="27:5" pos:end="33:28"><name pos:start="27:5" pos:end="27:16">spr_register</name><argument_list pos:start="27:17" pos:end="33:28">(<argument pos:start="27:18" pos:end="27:20"><expr pos:start="27:18" pos:end="27:20"><name pos:start="27:18" pos:end="27:20">env</name></expr></argument>, <argument pos:start="27:23" pos:end="27:30"><expr pos:start="27:23" pos:end="27:30"><name pos:start="27:23" pos:end="27:30">SPR_HID1</name></expr></argument>, <argument pos:start="27:33" pos:end="27:38"><expr pos:start="27:33" pos:end="27:38"><literal type="string" pos:start="27:33" pos:end="27:38">"HID1"</literal></expr></argument>,

                 <argument pos:start="29:18" pos:end="29:29"><expr pos:start="29:18" pos:end="29:29"><name pos:start="29:18" pos:end="29:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="29:32" pos:end="29:43"><expr pos:start="29:32" pos:end="29:43"><name pos:start="29:32" pos:end="29:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="31:18" pos:end="31:34"><expr pos:start="31:18" pos:end="31:34"><operator pos:start="31:18" pos:end="31:18">&amp;</operator><name pos:start="31:19" pos:end="31:34">spr_read_generic</name></expr></argument>, <argument pos:start="31:37" pos:end="31:54"><expr pos:start="31:37" pos:end="31:54"><operator pos:start="31:37" pos:end="31:37">&amp;</operator><name pos:start="31:38" pos:end="31:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="33:18" pos:end="33:27"><expr pos:start="33:18" pos:end="33:27"><literal type="number" pos:start="33:18" pos:end="33:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="35:5" pos:end="35:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="37:5" pos:end="43:29"><expr pos:start="37:5" pos:end="43:28"><call pos:start="37:5" pos:end="43:28"><name pos:start="37:5" pos:end="37:16">spr_register</name><argument_list pos:start="37:17" pos:end="43:28">(<argument pos:start="37:18" pos:end="37:20"><expr pos:start="37:18" pos:end="37:20"><name pos:start="37:18" pos:end="37:20">env</name></expr></argument>, <argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34">SPR_750_HID2</name></expr></argument>, <argument pos:start="37:37" pos:end="37:42"><expr pos:start="37:37" pos:end="37:42"><literal type="string" pos:start="37:37" pos:end="37:42">"HID2"</literal></expr></argument>,

                 <argument pos:start="39:18" pos:end="39:29"><expr pos:start="39:18" pos:end="39:29"><name pos:start="39:18" pos:end="39:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="39:32" pos:end="39:43"><expr pos:start="39:32" pos:end="39:43"><name pos:start="39:32" pos:end="39:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="41:18" pos:end="41:34"><expr pos:start="41:18" pos:end="41:34"><operator pos:start="41:18" pos:end="41:18">&amp;</operator><name pos:start="41:19" pos:end="41:34">spr_read_generic</name></expr></argument>, <argument pos:start="41:37" pos:end="41:54"><expr pos:start="41:37" pos:end="41:54"><operator pos:start="41:37" pos:end="41:37">&amp;</operator><name pos:start="41:38" pos:end="41:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="43:18" pos:end="43:27"><expr pos:start="43:18" pos:end="43:27"><literal type="number" pos:start="43:18" pos:end="43:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="45:5" pos:end="45:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="47:5" pos:end="53:39"><expr pos:start="47:5" pos:end="53:38"><call pos:start="47:5" pos:end="53:38"><name pos:start="47:5" pos:end="47:16">spr_register</name><argument_list pos:start="47:17" pos:end="53:38">(<argument pos:start="47:18" pos:end="47:20"><expr pos:start="47:18" pos:end="47:20"><name pos:start="47:18" pos:end="47:20">env</name></expr></argument>, <argument pos:start="47:23" pos:end="47:34"><expr pos:start="47:23" pos:end="47:34"><name pos:start="47:23" pos:end="47:34">SPR_970_HID5</name></expr></argument>, <argument pos:start="47:37" pos:end="47:42"><expr pos:start="47:37" pos:end="47:42"><literal type="string" pos:start="47:37" pos:end="47:42">"HID5"</literal></expr></argument>,

                 <argument pos:start="49:18" pos:end="49:29"><expr pos:start="49:18" pos:end="49:29"><name pos:start="49:18" pos:end="49:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="49:32" pos:end="49:43"><expr pos:start="49:32" pos:end="49:43"><name pos:start="49:32" pos:end="49:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="51:18" pos:end="51:34"><expr pos:start="51:18" pos:end="51:34"><operator pos:start="51:18" pos:end="51:18">&amp;</operator><name pos:start="51:19" pos:end="51:34">spr_read_generic</name></expr></argument>, <argument pos:start="51:37" pos:end="51:54"><expr pos:start="51:37" pos:end="51:54"><operator pos:start="51:37" pos:end="51:37">&amp;</operator><name pos:start="51:38" pos:end="51:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="53:18" pos:end="53:37"><expr pos:start="53:18" pos:end="53:37"><name pos:start="53:18" pos:end="53:37">POWERPC970_HID5_INIT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="55:5" pos:end="55:27">/* Memory management */</comment>

    <comment type="block" pos:start="57:5" pos:end="57:26">/* XXX: not correct */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:22"><expr pos:start="59:5" pos:end="59:21"><call pos:start="59:5" pos:end="59:21"><name pos:start="59:5" pos:end="59:16">gen_low_BATs</name><argument_list pos:start="59:17" pos:end="59:21">(<argument pos:start="59:18" pos:end="59:20"><expr pos:start="59:18" pos:end="59:20"><name pos:start="59:18" pos:end="59:20">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="61:5" pos:end="61:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="63:5" pos:end="69:29"><expr pos:start="63:5" pos:end="69:28"><call pos:start="63:5" pos:end="69:28"><name pos:start="63:5" pos:end="63:16">spr_register</name><argument_list pos:start="63:17" pos:end="69:28">(<argument pos:start="63:18" pos:end="63:20"><expr pos:start="63:18" pos:end="63:20"><name pos:start="63:18" pos:end="63:20">env</name></expr></argument>, <argument pos:start="63:23" pos:end="63:32"><expr pos:start="63:23" pos:end="63:32"><name pos:start="63:23" pos:end="63:32">SPR_MMUCFG</name></expr></argument>, <argument pos:start="63:35" pos:end="63:42"><expr pos:start="63:35" pos:end="63:42"><literal type="string" pos:start="63:35" pos:end="63:42">"MMUCFG"</literal></expr></argument>,

                 <argument pos:start="65:18" pos:end="65:29"><expr pos:start="65:18" pos:end="65:29"><name pos:start="65:18" pos:end="65:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="65:32" pos:end="65:43"><expr pos:start="65:32" pos:end="65:43"><name pos:start="65:32" pos:end="65:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="67:18" pos:end="67:34"><expr pos:start="67:18" pos:end="67:34"><operator pos:start="67:18" pos:end="67:18">&amp;</operator><name pos:start="67:19" pos:end="67:34">spr_read_generic</name></expr></argument>, <argument pos:start="67:37" pos:end="67:48"><expr pos:start="67:37" pos:end="67:48"><name pos:start="67:37" pos:end="67:48">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="69:18" pos:end="69:27"><expr pos:start="69:18" pos:end="69:27"><literal type="number" pos:start="69:18" pos:end="69:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="69:31" pos:end="69:41">/* TOFIX */</comment>

    <comment type="block" pos:start="71:5" pos:end="71:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="73:5" pos:end="79:29"><expr pos:start="73:5" pos:end="79:28"><call pos:start="73:5" pos:end="79:28"><name pos:start="73:5" pos:end="73:16">spr_register</name><argument_list pos:start="73:17" pos:end="79:28">(<argument pos:start="73:18" pos:end="73:20"><expr pos:start="73:18" pos:end="73:20"><name pos:start="73:18" pos:end="73:20">env</name></expr></argument>, <argument pos:start="73:23" pos:end="73:33"><expr pos:start="73:23" pos:end="73:33"><name pos:start="73:23" pos:end="73:33">SPR_MMUCSR0</name></expr></argument>, <argument pos:start="73:36" pos:end="73:44"><expr pos:start="73:36" pos:end="73:44"><literal type="string" pos:start="73:36" pos:end="73:44">"MMUCSR0"</literal></expr></argument>,

                 <argument pos:start="75:18" pos:end="75:29"><expr pos:start="75:18" pos:end="75:29"><name pos:start="75:18" pos:end="75:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="75:32" pos:end="75:43"><expr pos:start="75:32" pos:end="75:43"><name pos:start="75:32" pos:end="75:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="77:18" pos:end="77:34"><expr pos:start="77:18" pos:end="77:34"><operator pos:start="77:18" pos:end="77:18">&amp;</operator><name pos:start="77:19" pos:end="77:34">spr_read_generic</name></expr></argument>, <argument pos:start="77:37" pos:end="77:54"><expr pos:start="77:37" pos:end="77:54"><operator pos:start="77:37" pos:end="77:37">&amp;</operator><name pos:start="77:38" pos:end="77:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="79:18" pos:end="79:27"><expr pos:start="79:18" pos:end="79:27"><literal type="number" pos:start="79:18" pos:end="79:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="79:31" pos:end="79:41">/* TOFIX */</comment>

    <expr_stmt pos:start="81:5" pos:end="90:0"><expr pos:start="81:5" pos:end="87:28"><call pos:start="81:5" pos:end="87:28"><name pos:start="81:5" pos:end="81:16">spr_register</name><argument_list pos:start="81:17" pos:end="87:28">(<argument pos:start="81:18" pos:end="81:20"><expr pos:start="81:18" pos:end="81:20"><name pos:start="81:18" pos:end="81:20">env</name></expr></argument>, <argument pos:start="81:23" pos:end="81:30"><expr pos:start="81:23" pos:end="81:30"><name pos:start="81:23" pos:end="81:30">SPR_HIOR</name></expr></argument>, <argument pos:start="81:33" pos:end="81:42"><expr pos:start="81:33" pos:end="81:42"><literal type="string" pos:start="81:33" pos:end="81:42">"SPR_HIOR"</literal></expr></argument>,

                 <argument pos:start="83:18" pos:end="83:29"><expr pos:start="83:18" pos:end="83:29"><name pos:start="83:18" pos:end="83:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="83:32" pos:end="83:43"><expr pos:start="83:32" pos:end="83:43"><name pos:start="83:32" pos:end="83:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="85:18" pos:end="85:34"><expr pos:start="85:18" pos:end="85:34"><operator pos:start="85:18" pos:end="85:18">&amp;</operator><name pos:start="85:19" pos:end="85:34">spr_read_generic</name></expr></argument>, <argument pos:start="85:37" pos:end="85:54"><expr pos:start="85:37" pos:end="85:54"><operator pos:start="85:37" pos:end="85:37">&amp;</operator><name pos:start="85:38" pos:end="85:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="87:18" pos:end="87:27"><expr pos:start="87:18" pos:end="87:27"><literal type="number" pos:start="87:18" pos:end="87:27">0xFFF00000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="87:31" pos:end="87:55">/* XXX: This is a hack */</comment>

<cpp:if pos:start="89:1" pos:end="89:30">#<cpp:directive pos:start="89:2" pos:end="89:3">if</cpp:directive> <expr pos:start="89:5" pos:end="89:30"><operator pos:start="89:5" pos:end="89:5">!</operator><call pos:start="89:6" pos:end="89:30"><name pos:start="89:6" pos:end="89:12">defined</name><argument_list pos:start="89:13" pos:end="89:30">(<argument pos:start="89:14" pos:end="89:29"><expr pos:start="89:14" pos:end="89:29"><name pos:start="89:14" pos:end="89:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="91:5" pos:end="96:0"><expr pos:start="91:5" pos:end="91:33"><name pos:start="91:5" pos:end="91:20"><name pos:start="91:5" pos:end="91:7">env</name><operator pos:start="91:8" pos:end="91:9">-&gt;</operator><name pos:start="91:10" pos:end="91:20">excp_prefix</name></name> <operator pos:start="91:22" pos:end="91:22">=</operator> <literal type="number" pos:start="91:24" pos:end="91:33">0xFFF00000</literal></expr>;</expr_stmt>

<cpp:endif pos:start="93:1" pos:end="93:6">#<cpp:directive pos:start="93:2" pos:end="93:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="95:1" pos:end="95:30">#<cpp:directive pos:start="95:2" pos:end="95:3">if</cpp:directive> <expr pos:start="95:5" pos:end="95:30"><operator pos:start="95:5" pos:end="95:5">!</operator><call pos:start="95:6" pos:end="95:30"><name pos:start="95:6" pos:end="95:12">defined</name><argument_list pos:start="95:13" pos:end="95:30">(<argument pos:start="95:14" pos:end="95:29"><expr pos:start="95:14" pos:end="95:29"><name pos:start="95:14" pos:end="95:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="97:5" pos:end="100:0"><expr pos:start="97:5" pos:end="97:20"><name pos:start="97:5" pos:end="97:15"><name pos:start="97:5" pos:end="97:7">env</name><operator pos:start="97:8" pos:end="97:9">-&gt;</operator><name pos:start="97:10" pos:end="97:15">slb_nr</name></name> <operator pos:start="97:17" pos:end="97:17">=</operator> <literal type="number" pos:start="97:19" pos:end="97:20">32</literal></expr>;</expr_stmt>

<cpp:endif pos:start="99:1" pos:end="99:6">#<cpp:directive pos:start="99:2" pos:end="99:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="101:5" pos:end="101:23"><expr pos:start="101:5" pos:end="101:22"><call pos:start="101:5" pos:end="101:22"><name pos:start="101:5" pos:end="101:17">init_excp_970</name><argument_list pos:start="101:18" pos:end="101:22">(<argument pos:start="101:19" pos:end="101:21"><expr pos:start="101:19" pos:end="101:21"><name pos:start="101:19" pos:end="101:21">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:32"><expr pos:start="103:5" pos:end="103:31"><name pos:start="103:5" pos:end="103:25"><name pos:start="103:5" pos:end="103:7">env</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:25">dcache_line_size</name></name> <operator pos:start="103:27" pos:end="103:27">=</operator> <literal type="number" pos:start="103:29" pos:end="103:31">128</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:32"><expr pos:start="105:5" pos:end="105:31"><name pos:start="105:5" pos:end="105:25"><name pos:start="105:5" pos:end="105:7">env</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:25">icache_line_size</name></name> <operator pos:start="105:27" pos:end="105:27">=</operator> <literal type="number" pos:start="105:29" pos:end="105:31">128</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="107:5" pos:end="107:42">/* Allocate hardware IRQ controller */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:25"><expr pos:start="109:5" pos:end="109:24"><call pos:start="109:5" pos:end="109:24"><name pos:start="109:5" pos:end="109:19">ppc970_irq_init</name><argument_list pos:start="109:20" pos:end="109:24">(<argument pos:start="109:21" pos:end="109:23"><expr pos:start="109:21" pos:end="109:23"><name pos:start="109:21" pos:end="109:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
