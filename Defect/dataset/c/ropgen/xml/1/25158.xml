<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25158.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">balloon_stats_get_all</name><parameter_list pos:start="1:34" pos:end="3:61">(<parameter pos:start="1:35" pos:end="1:45"><decl pos:start="1:35" pos:end="1:45"><type pos:start="1:35" pos:end="1:45"><name pos:start="1:35" pos:end="1:40">Object</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">obj</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:54">Visitor</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">v</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:75"><decl pos:start="1:60" pos:end="1:75"><type pos:start="1:60" pos:end="1:75"><specifier pos:start="1:60" pos:end="1:64">const</specifier> <name pos:start="1:66" pos:end="1:69">char</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:75">name</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:46"><decl pos:start="3:35" pos:end="3:46"><type pos:start="3:35" pos:end="3:46"><name pos:start="3:35" pos:end="3:38">void</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:46">opaque</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:60"><decl pos:start="3:49" pos:end="3:60"><type pos:start="3:49" pos:end="3:60"><name pos:start="3:49" pos:end="3:53">Error</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier><modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:60">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="73:1">{<block_content pos:start="7:5" pos:end="71:31">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:14">err</name> <init pos:start="7:16" pos:end="7:21">= <expr pos:start="7:18" pos:end="7:21"><name pos:start="7:18" pos:end="7:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">VirtIOBalloon</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:20">s</name> <init pos:start="9:22" pos:end="9:29">= <expr pos:start="9:24" pos:end="9:29"><name pos:start="9:24" pos:end="9:29">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:47"><expr pos:start="15:5" pos:end="15:46"><call pos:start="15:5" pos:end="15:46"><name pos:start="15:5" pos:end="15:22">visit_start_struct</name><argument_list pos:start="15:23" pos:end="15:46">(<argument pos:start="15:24" pos:end="15:24"><expr pos:start="15:24" pos:end="15:24"><name pos:start="15:24" pos:end="15:24">v</name></expr></argument>, <argument pos:start="15:27" pos:end="15:30"><expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:30">name</name></expr></argument>, <argument pos:start="15:33" pos:end="15:36"><expr pos:start="15:33" pos:end="15:36"><name pos:start="15:33" pos:end="15:36">NULL</name></expr></argument>, <argument pos:start="15:39" pos:end="15:39"><expr pos:start="15:39" pos:end="15:39"><literal type="number" pos:start="15:39" pos:end="15:39">0</literal></expr></argument>, <argument pos:start="15:42" pos:end="15:45"><expr pos:start="15:42" pos:end="15:45"><operator pos:start="15:42" pos:end="15:42">&amp;</operator><name pos:start="15:43" pos:end="15:45">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:12">(<expr pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">err</name></expr>)</condition> <block pos:start="17:14" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:17">

        <goto pos:start="19:9" pos:end="19:17">goto <name pos:start="19:14" pos:end="19:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:66"><expr pos:start="23:5" pos:end="23:65"><call pos:start="23:5" pos:end="23:65"><name pos:start="23:5" pos:end="23:18">visit_type_int</name><argument_list pos:start="23:19" pos:end="23:65">(<argument pos:start="23:20" pos:end="23:20"><expr pos:start="23:20" pos:end="23:20"><name pos:start="23:20" pos:end="23:20">v</name></expr></argument>, <argument pos:start="23:23" pos:end="23:35"><expr pos:start="23:23" pos:end="23:35"><literal type="string" pos:start="23:23" pos:end="23:35">"last-update"</literal></expr></argument>, <argument pos:start="23:38" pos:end="23:58"><expr pos:start="23:38" pos:end="23:58"><operator pos:start="23:38" pos:end="23:38">&amp;</operator><name pos:start="23:39" pos:end="23:58"><name pos:start="23:39" pos:end="23:39">s</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:58">stats_last_update</name></name></expr></argument>, <argument pos:start="23:61" pos:end="23:64"><expr pos:start="23:61" pos:end="23:64"><operator pos:start="23:61" pos:end="23:61">&amp;</operator><name pos:start="23:62" pos:end="23:64">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:12">(<expr pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">err</name></expr>)</condition> <block pos:start="25:14" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:21">

        <goto pos:start="27:9" pos:end="27:21">goto <name pos:start="27:14" pos:end="27:20">out_end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:50"><expr pos:start="33:5" pos:end="33:49"><call pos:start="33:5" pos:end="33:49"><name pos:start="33:5" pos:end="33:22">visit_start_struct</name><argument_list pos:start="33:23" pos:end="33:49">(<argument pos:start="33:24" pos:end="33:24"><expr pos:start="33:24" pos:end="33:24"><name pos:start="33:24" pos:end="33:24">v</name></expr></argument>, <argument pos:start="33:27" pos:end="33:33"><expr pos:start="33:27" pos:end="33:33"><literal type="string" pos:start="33:27" pos:end="33:33">"stats"</literal></expr></argument>, <argument pos:start="33:36" pos:end="33:39"><expr pos:start="33:36" pos:end="33:39"><name pos:start="33:36" pos:end="33:39">NULL</name></expr></argument>, <argument pos:start="33:42" pos:end="33:42"><expr pos:start="33:42" pos:end="33:42"><literal type="number" pos:start="33:42" pos:end="33:42">0</literal></expr></argument>, <argument pos:start="33:45" pos:end="33:48"><expr pos:start="33:45" pos:end="33:48"><operator pos:start="33:45" pos:end="33:45">&amp;</operator><name pos:start="33:46" pos:end="33:48">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:12">(<expr pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">err</name></expr>)</condition> <block pos:start="35:14" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:21">

        <goto pos:start="37:9" pos:end="37:21">goto <name pos:start="37:14" pos:end="37:20">out_end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <for pos:start="41:5" pos:end="51:5">for <control pos:start="41:9" pos:end="41:45">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:40"><expr pos:start="41:17" pos:end="41:39"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <name pos:start="41:21" pos:end="41:39">VIRTIO_BALLOON_S_NR</name></expr>;</condition> <incr pos:start="41:42" pos:end="41:44"><expr pos:start="41:42" pos:end="41:44"><name pos:start="41:42" pos:end="41:42">i</name><operator pos:start="41:43" pos:end="41:44">++</operator></expr></incr>)</control> <block pos:start="41:47" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:9">

        <expr_stmt pos:start="43:9" pos:end="43:72"><expr pos:start="43:9" pos:end="43:71"><call pos:start="43:9" pos:end="43:71"><name pos:start="43:9" pos:end="43:25">visit_type_uint64</name><argument_list pos:start="43:26" pos:end="43:71">(<argument pos:start="43:27" pos:end="43:27"><expr pos:start="43:27" pos:end="43:27"><name pos:start="43:27" pos:end="43:27">v</name></expr></argument>, <argument pos:start="43:30" pos:end="43:50"><expr pos:start="43:30" pos:end="43:50"><name pos:start="43:30" pos:end="43:50"><name pos:start="43:30" pos:end="43:47">balloon_stat_names</name><index pos:start="43:48" pos:end="43:50">[<expr pos:start="43:49" pos:end="43:49"><name pos:start="43:49" pos:end="43:49">i</name></expr>]</index></name></expr></argument>, <argument pos:start="43:53" pos:end="43:64"><expr pos:start="43:53" pos:end="43:64"><operator pos:start="43:53" pos:end="43:53">&amp;</operator><name pos:start="43:54" pos:end="43:64"><name pos:start="43:54" pos:end="43:54">s</name><operator pos:start="43:55" pos:end="43:56">-&gt;</operator><name pos:start="43:57" pos:end="43:61">stats</name><index pos:start="43:62" pos:end="43:64">[<expr pos:start="43:63" pos:end="43:63"><name pos:start="43:63" pos:end="43:63">i</name></expr>]</index></name></expr></argument>, <argument pos:start="43:67" pos:end="43:70"><expr pos:start="43:67" pos:end="43:70"><operator pos:start="43:67" pos:end="43:67">&amp;</operator><name pos:start="43:68" pos:end="43:70">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:16">(<expr pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:15">err</name></expr>)</condition> <block pos:start="45:18" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:18">

            <break pos:start="47:13" pos:end="47:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="53:5" pos:end="53:31"><expr pos:start="53:5" pos:end="53:30"><call pos:start="53:5" pos:end="53:30"><name pos:start="53:5" pos:end="53:19">error_propagate</name><argument_list pos:start="53:20" pos:end="53:30">(<argument pos:start="53:21" pos:end="53:24"><expr pos:start="53:21" pos:end="53:24"><name pos:start="53:21" pos:end="53:24">errp</name></expr></argument>, <argument pos:start="53:27" pos:end="53:29"><expr pos:start="53:27" pos:end="53:29"><name pos:start="53:27" pos:end="53:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:15"><expr pos:start="55:5" pos:end="55:14"><name pos:start="55:5" pos:end="55:7">err</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <name pos:start="55:11" pos:end="55:14">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:30"><expr pos:start="57:5" pos:end="57:29"><call pos:start="57:5" pos:end="57:29"><name pos:start="57:5" pos:end="57:20">visit_end_struct</name><argument_list pos:start="57:21" pos:end="57:29">(<argument pos:start="57:22" pos:end="57:22"><expr pos:start="57:22" pos:end="57:22"><name pos:start="57:22" pos:end="57:22">v</name></expr></argument>, <argument pos:start="57:25" pos:end="57:28"><expr pos:start="57:25" pos:end="57:28"><operator pos:start="57:25" pos:end="57:25">&amp;</operator><name pos:start="57:26" pos:end="57:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="61:1" pos:end="61:8"><name pos:start="61:1" pos:end="61:7">out_end</name>:</label>

    <expr_stmt pos:start="63:5" pos:end="63:31"><expr pos:start="63:5" pos:end="63:30"><call pos:start="63:5" pos:end="63:30"><name pos:start="63:5" pos:end="63:19">error_propagate</name><argument_list pos:start="63:20" pos:end="63:30">(<argument pos:start="63:21" pos:end="63:24"><expr pos:start="63:21" pos:end="63:24"><name pos:start="63:21" pos:end="63:24">errp</name></expr></argument>, <argument pos:start="63:27" pos:end="63:29"><expr pos:start="63:27" pos:end="63:29"><name pos:start="63:27" pos:end="63:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:15"><expr pos:start="65:5" pos:end="65:14"><name pos:start="65:5" pos:end="65:7">err</name> <operator pos:start="65:9" pos:end="65:9">=</operator> <name pos:start="65:11" pos:end="65:14">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:30"><expr pos:start="67:5" pos:end="67:29"><call pos:start="67:5" pos:end="67:29"><name pos:start="67:5" pos:end="67:20">visit_end_struct</name><argument_list pos:start="67:21" pos:end="67:29">(<argument pos:start="67:22" pos:end="67:22"><expr pos:start="67:22" pos:end="67:22"><name pos:start="67:22" pos:end="67:22">v</name></expr></argument>, <argument pos:start="67:25" pos:end="67:28"><expr pos:start="67:25" pos:end="67:28"><operator pos:start="67:25" pos:end="67:25">&amp;</operator><name pos:start="67:26" pos:end="67:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="69:1" pos:end="69:4"><name pos:start="69:1" pos:end="69:3">out</name>:</label>

    <expr_stmt pos:start="71:5" pos:end="71:31"><expr pos:start="71:5" pos:end="71:30"><call pos:start="71:5" pos:end="71:30"><name pos:start="71:5" pos:end="71:19">error_propagate</name><argument_list pos:start="71:20" pos:end="71:30">(<argument pos:start="71:21" pos:end="71:24"><expr pos:start="71:21" pos:end="71:24"><name pos:start="71:21" pos:end="71:24">errp</name></expr></argument>, <argument pos:start="71:27" pos:end="71:29"><expr pos:start="71:27" pos:end="71:29"><name pos:start="71:27" pos:end="71:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
