<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22125.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:13"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:34">tta_decode_init</name><parameter_list pos:start="1:35" pos:end="1:58">(<parameter pos:start="1:36" pos:end="1:57"><decl pos:start="1:36" pos:end="1:57"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:49">AVCodecContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type> <name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="71:13">{<block_content pos:start="3:5" pos:end="71:13">
    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14">TTAContext</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type><name pos:start="3:17" pos:end="3:17">s</name> <init pos:start="3:19" pos:end="3:36">= <expr pos:start="3:21" pos:end="3:36"><name pos:start="3:21" pos:end="3:36"><name pos:start="3:21" pos:end="3:25">avctx</name><operator pos:start="3:26" pos:end="3:27">-&gt;</operator><name pos:start="3:28" pos:end="3:36">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:10"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">i</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:21"><expr pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:5">s</name><operator pos:start="5:6" pos:end="5:7">-&gt;</operator><name pos:start="5:8" pos:end="5:12">avctx</name></name> <operator pos:start="5:14" pos:end="5:14">=</operator> <name pos:start="5:16" pos:end="5:20">avctx</name></expr>;</expr_stmt>
    <comment type="line" pos:start="6:5" pos:end="6:50">// 30bytes includes a seektable with one frame</comment>
    <if_stmt pos:start="7:5" pos:end="8:18"><if pos:start="7:5" pos:end="8:18">if <condition pos:start="7:8" pos:end="7:35">(<expr pos:start="7:9" pos:end="7:34"><name pos:start="7:9" pos:end="7:29"><name pos:start="7:9" pos:end="7:13">avctx</name><operator pos:start="7:14" pos:end="7:15">-&gt;</operator><name pos:start="7:16" pos:end="7:29">extradata_size</name></name> <operator pos:start="7:31" pos:end="7:31">&lt;</operator> <literal type="number" pos:start="7:33" pos:end="7:34">30</literal></expr>)</condition><block type="pseudo" pos:start="8:9" pos:end="8:18"><block_content pos:start="8:9" pos:end="8:18">
        <return pos:start="8:9" pos:end="8:18">return <expr pos:start="8:16" pos:end="8:17"><operator pos:start="8:16" pos:end="8:16">-</operator><literal type="number" pos:start="8:17" pos:end="8:17">1</literal></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:71"><expr pos:start="9:5" pos:end="9:70"><call pos:start="9:5" pos:end="9:70"><name pos:start="9:5" pos:end="9:17">init_get_bits</name><argument_list pos:start="9:18" pos:end="9:70">(<argument pos:start="9:19" pos:end="9:24"><expr pos:start="9:19" pos:end="9:24"><operator pos:start="9:19" pos:end="9:19">&amp;</operator><name pos:start="9:20" pos:end="9:24"><name pos:start="9:20" pos:end="9:20">s</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:24">gb</name></name></expr></argument>, <argument pos:start="9:27" pos:end="9:42"><expr pos:start="9:27" pos:end="9:42"><name pos:start="9:27" pos:end="9:42"><name pos:start="9:27" pos:end="9:31">avctx</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:42">extradata</name></name></expr></argument>, <argument pos:start="9:45" pos:end="9:69"><expr pos:start="9:45" pos:end="9:69"><name pos:start="9:45" pos:end="9:65"><name pos:start="9:45" pos:end="9:49">avctx</name><operator pos:start="9:50" pos:end="9:51">-&gt;</operator><name pos:start="9:52" pos:end="9:65">extradata_size</name></name> <operator pos:start="9:67" pos:end="9:67">*</operator> <literal type="number" pos:start="9:69" pos:end="9:69">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="10:5" pos:end="71:13"><if pos:start="10:5" pos:end="71:13">if <condition pos:start="10:8" pos:end="10:54">(<expr pos:start="10:9" pos:end="10:53"><call pos:start="10:9" pos:end="10:34"><name pos:start="10:9" pos:end="10:22">show_bits_long</name><argument_list pos:start="10:23" pos:end="10:34">(<argument pos:start="10:24" pos:end="10:29"><expr pos:start="10:24" pos:end="10:29"><operator pos:start="10:24" pos:end="10:24">&amp;</operator><name pos:start="10:25" pos:end="10:29"><name pos:start="10:25" pos:end="10:25">s</name><operator pos:start="10:26" pos:end="10:27">-&gt;</operator><name pos:start="10:28" pos:end="10:29">gb</name></name></expr></argument>, <argument pos:start="10:32" pos:end="10:33"><expr pos:start="10:32" pos:end="10:33"><literal type="number" pos:start="10:32" pos:end="10:33">32</literal></expr></argument>)</argument_list></call> <operator pos:start="10:36" pos:end="10:37">==</operator> <call pos:start="10:39" pos:end="10:53"><name pos:start="10:39" pos:end="10:45">AV_RL32</name><argument_list pos:start="10:46" pos:end="10:53">(<argument pos:start="10:47" pos:end="10:52"><expr pos:start="10:47" pos:end="10:52"><literal type="string" pos:start="10:47" pos:end="10:52">"TTA1"</literal></expr></argument>)</argument_list></call></expr>)</condition>
    <block pos:start="11:5" pos:end="71:13">{<block_content pos:start="13:9" pos:end="71:13">
        <comment type="block" pos:start="12:9" pos:end="12:23">/* signature */</comment>
        <expr_stmt pos:start="13:9" pos:end="13:30"><expr pos:start="13:9" pos:end="13:29"><call pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:17">skip_bits</name><argument_list pos:start="13:18" pos:end="13:29">(<argument pos:start="13:19" pos:end="13:24"><expr pos:start="13:19" pos:end="13:24"><operator pos:start="13:19" pos:end="13:19">&amp;</operator><name pos:start="13:20" pos:end="13:24"><name pos:start="13:20" pos:end="13:20">s</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:24">gb</name></name></expr></argument>, <argument pos:start="13:27" pos:end="13:28"><expr pos:start="13:27" pos:end="13:28"><literal type="number" pos:start="13:27" pos:end="13:28">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:41"><expr pos:start="14:9" pos:end="14:40"><name pos:start="14:9" pos:end="14:17"><name pos:start="14:9" pos:end="14:9">s</name><operator pos:start="14:10" pos:end="14:11">-&gt;</operator><name pos:start="14:12" pos:end="14:17">format</name></name> <operator pos:start="14:19" pos:end="14:19">=</operator> <call pos:start="14:21" pos:end="14:40"><name pos:start="14:21" pos:end="14:28">get_bits</name><argument_list pos:start="14:29" pos:end="14:40">(<argument pos:start="14:30" pos:end="14:35"><expr pos:start="14:30" pos:end="14:35"><operator pos:start="14:30" pos:end="14:30">&amp;</operator><name pos:start="14:31" pos:end="14:35"><name pos:start="14:31" pos:end="14:31">s</name><operator pos:start="14:32" pos:end="14:33">-&gt;</operator><name pos:start="14:34" pos:end="14:35">gb</name></name></expr></argument>, <argument pos:start="14:38" pos:end="14:39"><expr pos:start="14:38" pos:end="14:39"><literal type="number" pos:start="14:38" pos:end="14:39">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="15:9" pos:end="71:13"><if pos:start="15:9" pos:end="71:13">if <condition pos:start="15:12" pos:end="15:26">(<expr pos:start="15:13" pos:end="15:25"><name pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:13">s</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:21">format</name></name> <operator pos:start="15:23" pos:end="15:23">&gt;</operator> <literal type="number" pos:start="15:25" pos:end="15:25">2</literal></expr>)</condition> <block pos:start="15:28" pos:end="71:13">{<block_content pos:start="16:13" pos:end="71:13">
            <expr_stmt pos:start="16:13" pos:end="16:63"><expr pos:start="16:13" pos:end="16:62"><call pos:start="16:13" pos:end="16:62"><name pos:start="16:13" pos:end="16:18">av_log</name><argument_list pos:start="16:19" pos:end="16:62">(<argument pos:start="16:20" pos:end="16:27"><expr pos:start="16:20" pos:end="16:27"><name pos:start="16:20" pos:end="16:27"><name pos:start="16:20" pos:end="16:20">s</name><operator pos:start="16:21" pos:end="16:22">-&gt;</operator><name pos:start="16:23" pos:end="16:27">avctx</name></name></expr></argument>, <argument pos:start="16:30" pos:end="16:41"><expr pos:start="16:30" pos:end="16:41"><name pos:start="16:30" pos:end="16:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="16:44" pos:end="16:61"><expr pos:start="16:44" pos:end="16:61"><literal type="string" pos:start="16:44" pos:end="16:61">"Invalid format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="17:13" pos:end="17:22">return <expr pos:start="17:20" pos:end="17:21"><operator pos:start="17:20" pos:end="17:20">-</operator><literal type="number" pos:start="17:21" pos:end="17:21">1</literal></expr>;</return>
        <if_stmt pos:start="18:9" pos:end="71:13"><if pos:start="18:9" pos:end="71:13">if <condition pos:start="18:12" pos:end="18:42">(<expr pos:start="18:13" pos:end="18:41"><name pos:start="18:13" pos:end="18:21"><name pos:start="18:13" pos:end="18:13">s</name><operator pos:start="18:14" pos:end="18:15">-&gt;</operator><name pos:start="18:16" pos:end="18:21">format</name></name> <operator pos:start="18:23" pos:end="18:24">==</operator> <name pos:start="18:26" pos:end="18:41">FORMAT_ENCRYPTED</name></expr>)</condition> <block pos:start="18:44" pos:end="71:13">{<block_content pos:start="19:13" pos:end="71:13">
            <expr_stmt pos:start="19:13" pos:end="19:65"><expr pos:start="19:13" pos:end="19:64"><call pos:start="19:13" pos:end="19:64"><name pos:start="19:13" pos:end="19:34">av_log_missing_feature</name><argument_list pos:start="19:35" pos:end="19:64">(<argument pos:start="19:36" pos:end="19:43"><expr pos:start="19:36" pos:end="19:43"><name pos:start="19:36" pos:end="19:43"><name pos:start="19:36" pos:end="19:36">s</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:43">avctx</name></name></expr></argument>, <argument pos:start="19:46" pos:end="19:60"><expr pos:start="19:46" pos:end="19:60"><literal type="string" pos:start="19:46" pos:end="19:60">"Encrypted TTA"</literal></expr></argument>, <argument pos:start="19:63" pos:end="19:63"><expr pos:start="19:63" pos:end="19:63"><literal type="number" pos:start="19:63" pos:end="19:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="20:13" pos:end="20:35">return <expr pos:start="20:20" pos:end="20:34"><call pos:start="20:20" pos:end="20:34"><name pos:start="20:20" pos:end="20:26">AVERROR</name><argument_list pos:start="20:27" pos:end="20:34">(<argument pos:start="20:28" pos:end="20:33"><expr pos:start="20:28" pos:end="20:33"><name pos:start="20:28" pos:end="20:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>
        <expr_stmt pos:start="21:9" pos:end="21:61"><expr pos:start="21:9" pos:end="21:60"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:13">avctx</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:23">channels</name></name> <operator pos:start="21:25" pos:end="21:25">=</operator> <name pos:start="21:27" pos:end="21:37"><name pos:start="21:27" pos:end="21:27">s</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:37">channels</name></name> <operator pos:start="21:39" pos:end="21:39">=</operator> <call pos:start="21:41" pos:end="21:60"><name pos:start="21:41" pos:end="21:48">get_bits</name><argument_list pos:start="21:49" pos:end="21:60">(<argument pos:start="21:50" pos:end="21:55"><expr pos:start="21:50" pos:end="21:55"><operator pos:start="21:50" pos:end="21:50">&amp;</operator><name pos:start="21:51" pos:end="21:55"><name pos:start="21:51" pos:end="21:51">s</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:55">gb</name></name></expr></argument>, <argument pos:start="21:58" pos:end="21:59"><expr pos:start="21:58" pos:end="21:59"><literal type="number" pos:start="21:58" pos:end="21:59">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="22:60"><expr pos:start="22:9" pos:end="22:59"><name pos:start="22:9" pos:end="22:36"><name pos:start="22:9" pos:end="22:13">avctx</name><operator pos:start="22:14" pos:end="22:15">-&gt;</operator><name pos:start="22:16" pos:end="22:36">bits_per_coded_sample</name></name> <operator pos:start="22:38" pos:end="22:38">=</operator> <call pos:start="22:40" pos:end="22:59"><name pos:start="22:40" pos:end="22:47">get_bits</name><argument_list pos:start="22:48" pos:end="22:59">(<argument pos:start="22:49" pos:end="22:54"><expr pos:start="22:49" pos:end="22:54"><operator pos:start="22:49" pos:end="22:49">&amp;</operator><name pos:start="22:50" pos:end="22:54"><name pos:start="22:50" pos:end="22:50">s</name><operator pos:start="22:51" pos:end="22:52">-&gt;</operator><name pos:start="22:53" pos:end="22:54">gb</name></name></expr></argument>, <argument pos:start="22:57" pos:end="22:58"><expr pos:start="22:57" pos:end="22:58"><literal type="number" pos:start="22:57" pos:end="22:58">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="23:9" pos:end="23:56"><expr pos:start="23:9" pos:end="23:55"><name pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:14">bps</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <operator pos:start="23:18" pos:end="23:18">(</operator><name pos:start="23:19" pos:end="23:46"><name pos:start="23:19" pos:end="23:23">avctx</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:46">bits_per_coded_sample</name></name> <operator pos:start="23:48" pos:end="23:48">+</operator> <literal type="number" pos:start="23:50" pos:end="23:50">7</literal><operator pos:start="23:51" pos:end="23:51">)</operator> <operator pos:start="23:53" pos:end="23:53">/</operator> <literal type="number" pos:start="23:55" pos:end="23:55">8</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:55"><expr pos:start="24:9" pos:end="24:54"><name pos:start="24:9" pos:end="24:26"><name pos:start="24:9" pos:end="24:13">avctx</name><operator pos:start="24:14" pos:end="24:15">-&gt;</operator><name pos:start="24:16" pos:end="24:26">sample_rate</name></name> <operator pos:start="24:28" pos:end="24:28">=</operator> <call pos:start="24:30" pos:end="24:54"><name pos:start="24:30" pos:end="24:42">get_bits_long</name><argument_list pos:start="24:43" pos:end="24:54">(<argument pos:start="24:44" pos:end="24:49"><expr pos:start="24:44" pos:end="24:49"><operator pos:start="24:44" pos:end="24:44">&amp;</operator><name pos:start="24:45" pos:end="24:49"><name pos:start="24:45" pos:end="24:45">s</name><operator pos:start="24:46" pos:end="24:47">-&gt;</operator><name pos:start="24:48" pos:end="24:49">gb</name></name></expr></argument>, <argument pos:start="24:52" pos:end="24:53"><expr pos:start="24:52" pos:end="24:53"><literal type="number" pos:start="24:52" pos:end="24:53">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="25:9" pos:end="25:51"><expr pos:start="25:9" pos:end="25:50"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:22">data_length</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <call pos:start="25:26" pos:end="25:50"><name pos:start="25:26" pos:end="25:38">get_bits_long</name><argument_list pos:start="25:39" pos:end="25:50">(<argument pos:start="25:40" pos:end="25:45"><expr pos:start="25:40" pos:end="25:45"><operator pos:start="25:40" pos:end="25:40">&amp;</operator><name pos:start="25:41" pos:end="25:45"><name pos:start="25:41" pos:end="25:41">s</name><operator pos:start="25:42" pos:end="25:43">-&gt;</operator><name pos:start="25:44" pos:end="25:45">gb</name></name></expr></argument>, <argument pos:start="25:48" pos:end="25:49"><expr pos:start="25:48" pos:end="25:49"><literal type="number" pos:start="25:48" pos:end="25:49">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="26:9" pos:end="26:30"><expr pos:start="26:9" pos:end="26:29"><call pos:start="26:9" pos:end="26:29"><name pos:start="26:9" pos:end="26:17">skip_bits</name><argument_list pos:start="26:18" pos:end="26:29">(<argument pos:start="26:19" pos:end="26:24"><expr pos:start="26:19" pos:end="26:24"><operator pos:start="26:19" pos:end="26:19">&amp;</operator><name pos:start="26:20" pos:end="26:24"><name pos:start="26:20" pos:end="26:20">s</name><operator pos:start="26:21" pos:end="26:22">-&gt;</operator><name pos:start="26:23" pos:end="26:24">gb</name></name></expr></argument>, <argument pos:start="26:27" pos:end="26:28"><expr pos:start="26:27" pos:end="26:28"><literal type="number" pos:start="26:27" pos:end="26:28">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="26:32" pos:end="26:49">// CRC32 of header</comment>
        <switch pos:start="27:9" pos:end="71:13">switch<condition pos:start="27:15" pos:end="27:22">(<expr pos:start="27:16" pos:end="27:21"><name pos:start="27:16" pos:end="27:21"><name pos:start="27:16" pos:end="27:16">s</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:21">bps</name></name></expr>)</condition> <block pos:start="27:24" pos:end="71:13">{<block_content pos:start="28:9" pos:end="71:13">
        <case pos:start="28:9" pos:end="28:15">case <expr pos:start="28:14" pos:end="28:14"><literal type="number" pos:start="28:14" pos:end="28:14">2</literal></expr>:</case>
            <expr_stmt pos:start="29:13" pos:end="29:50"><expr pos:start="29:13" pos:end="29:49"><name pos:start="29:13" pos:end="29:29"><name pos:start="29:13" pos:end="29:17">avctx</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:29">sample_fmt</name></name> <operator pos:start="29:31" pos:end="29:31">=</operator> <name pos:start="29:33" pos:end="29:49">AV_SAMPLE_FMT_S16</name></expr>;</expr_stmt>
            <expr_stmt pos:start="30:13" pos:end="30:44"><expr pos:start="30:13" pos:end="30:43"><name pos:start="30:13" pos:end="30:38"><name pos:start="30:13" pos:end="30:17">avctx</name><operator pos:start="30:18" pos:end="30:19">-&gt;</operator><name pos:start="30:20" pos:end="30:38">bits_per_raw_sample</name></name> <operator pos:start="30:40" pos:end="30:40">=</operator> <literal type="number" pos:start="30:42" pos:end="30:43">16</literal></expr>;</expr_stmt>
            <break pos:start="31:13" pos:end="31:18">break;</break>
        <case pos:start="32:9" pos:end="32:15">case <expr pos:start="32:14" pos:end="32:14"><literal type="number" pos:start="32:14" pos:end="32:14">3</literal></expr>:</case>
            <expr_stmt pos:start="33:13" pos:end="33:50"><expr pos:start="33:13" pos:end="33:49"><name pos:start="33:13" pos:end="33:29"><name pos:start="33:13" pos:end="33:17">avctx</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:29">sample_fmt</name></name> <operator pos:start="33:31" pos:end="33:31">=</operator> <name pos:start="33:33" pos:end="33:49">AV_SAMPLE_FMT_S32</name></expr>;</expr_stmt>
            <expr_stmt pos:start="34:13" pos:end="34:44"><expr pos:start="34:13" pos:end="34:43"><name pos:start="34:13" pos:end="34:38"><name pos:start="34:13" pos:end="34:17">avctx</name><operator pos:start="34:18" pos:end="34:19">-&gt;</operator><name pos:start="34:20" pos:end="34:38">bits_per_raw_sample</name></name> <operator pos:start="34:40" pos:end="34:40">=</operator> <literal type="number" pos:start="34:42" pos:end="34:43">24</literal></expr>;</expr_stmt>
            <break pos:start="35:13" pos:end="35:18">break;</break>
        <default pos:start="36:9" pos:end="36:16">default:</default>
            <expr_stmt pos:start="37:13" pos:end="37:80"><expr pos:start="37:13" pos:end="37:79"><call pos:start="37:13" pos:end="37:79"><name pos:start="37:13" pos:end="37:18">av_log</name><argument_list pos:start="37:19" pos:end="37:79">(<argument pos:start="37:20" pos:end="37:24"><expr pos:start="37:20" pos:end="37:24"><name pos:start="37:20" pos:end="37:24">avctx</name></expr></argument>, <argument pos:start="37:27" pos:end="37:38"><expr pos:start="37:27" pos:end="37:38"><name pos:start="37:27" pos:end="37:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:41" pos:end="37:78"><expr pos:start="37:41" pos:end="37:78"><literal type="string" pos:start="37:41" pos:end="37:78">"Invalid/unsupported sample format.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line" pos:start="38:9" pos:end="38:27">// prevent overflow</comment>
        <if_stmt pos:start="39:9" pos:end="71:13"><if pos:start="39:9" pos:end="71:13">if <condition pos:start="39:12" pos:end="39:42">(<expr pos:start="39:13" pos:end="39:41"><name pos:start="39:13" pos:end="39:30"><name pos:start="39:13" pos:end="39:17">avctx</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:30">sample_rate</name></name> <operator pos:start="39:32" pos:end="39:32">&gt;</operator> <literal type="number" pos:start="39:34" pos:end="39:41">0x7FFFFF</literal></expr>)</condition> <block pos:start="39:44" pos:end="71:13">{<block_content pos:start="40:13" pos:end="71:13">
            <expr_stmt pos:start="40:13" pos:end="40:67"><expr pos:start="40:13" pos:end="40:66"><call pos:start="40:13" pos:end="40:66"><name pos:start="40:13" pos:end="40:18">av_log</name><argument_list pos:start="40:19" pos:end="40:66">(<argument pos:start="40:20" pos:end="40:24"><expr pos:start="40:20" pos:end="40:24"><name pos:start="40:20" pos:end="40:24">avctx</name></expr></argument>, <argument pos:start="40:27" pos:end="40:38"><expr pos:start="40:27" pos:end="40:38"><name pos:start="40:27" pos:end="40:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="40:41" pos:end="40:65"><expr pos:start="40:41" pos:end="40:65"><literal type="string" pos:start="40:41" pos:end="40:65">"sample_rate too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="41:13" pos:end="41:35">return <expr pos:start="41:20" pos:end="41:34"><call pos:start="41:20" pos:end="41:34"><name pos:start="41:20" pos:end="41:26">AVERROR</name><argument_list pos:start="41:27" pos:end="41:34">(<argument pos:start="41:28" pos:end="41:33"><expr pos:start="41:28" pos:end="41:33"><name pos:start="41:28" pos:end="41:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>
        <expr_stmt pos:start="42:9" pos:end="42:57"><expr pos:start="42:9" pos:end="42:56"><name pos:start="42:9" pos:end="42:23"><name pos:start="42:9" pos:end="42:9">s</name><operator pos:start="42:10" pos:end="42:11">-&gt;</operator><name pos:start="42:12" pos:end="42:23">frame_length</name></name> <operator pos:start="42:25" pos:end="42:25">=</operator> <literal type="number" pos:start="42:27" pos:end="42:29">256</literal> <operator pos:start="42:31" pos:end="42:31">*</operator> <name pos:start="42:33" pos:end="42:50"><name pos:start="42:33" pos:end="42:37">avctx</name><operator pos:start="42:38" pos:end="42:39">-&gt;</operator><name pos:start="42:40" pos:end="42:50">sample_rate</name></name> <operator pos:start="42:52" pos:end="42:52">/</operator> <literal type="number" pos:start="42:54" pos:end="42:56">245</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="43:9" pos:end="43:64"><expr pos:start="43:9" pos:end="43:63"><name pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:28">last_frame_length</name></name> <operator pos:start="43:30" pos:end="43:30">=</operator> <name pos:start="43:32" pos:end="43:45"><name pos:start="43:32" pos:end="43:32">s</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:45">data_length</name></name> <operator pos:start="43:47" pos:end="43:47">%</operator> <name pos:start="43:49" pos:end="43:63"><name pos:start="43:49" pos:end="43:49">s</name><operator pos:start="43:50" pos:end="43:51">-&gt;</operator><name pos:start="43:52" pos:end="43:63">frame_length</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="44:9" pos:end="45:55"><expr pos:start="44:9" pos:end="45:54"><name pos:start="44:9" pos:end="44:23"><name pos:start="44:9" pos:end="44:9">s</name><operator pos:start="44:10" pos:end="44:11">-&gt;</operator><name pos:start="44:12" pos:end="44:23">total_frames</name></name> <operator pos:start="44:25" pos:end="44:25">=</operator> <name pos:start="44:27" pos:end="44:40"><name pos:start="44:27" pos:end="44:27">s</name><operator pos:start="44:28" pos:end="44:29">-&gt;</operator><name pos:start="44:30" pos:end="44:40">data_length</name></name> <operator pos:start="44:42" pos:end="44:42">/</operator> <name pos:start="44:44" pos:end="44:58"><name pos:start="44:44" pos:end="44:44">s</name><operator pos:start="44:45" pos:end="44:46">-&gt;</operator><name pos:start="44:47" pos:end="44:58">frame_length</name></name> <operator pos:start="44:60" pos:end="44:60">+</operator>
                        <operator pos:start="45:25" pos:end="45:25">(</operator><ternary pos:start="45:26" pos:end="45:53"><condition pos:start="45:26" pos:end="45:47"><expr pos:start="45:26" pos:end="45:45"><name pos:start="45:26" pos:end="45:45"><name pos:start="45:26" pos:end="45:26">s</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:45">last_frame_length</name></name></expr> ?</condition><then pos:start="45:49" pos:end="45:49"> <expr pos:start="45:49" pos:end="45:49"><literal type="number" pos:start="45:49" pos:end="45:49">1</literal></expr> </then><else pos:start="45:51" pos:end="45:53">: <expr pos:start="45:53" pos:end="45:53"><literal type="number" pos:start="45:53" pos:end="45:53">0</literal></expr></else></ternary><operator pos:start="45:54" pos:end="45:54">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="46:9" pos:end="48:32"><expr pos:start="46:9" pos:end="48:31"><call pos:start="46:9" pos:end="48:31"><name pos:start="46:9" pos:end="46:14">av_log</name><argument_list pos:start="46:15" pos:end="48:31">(<argument pos:start="46:16" pos:end="46:23"><expr pos:start="46:16" pos:end="46:23"><name pos:start="46:16" pos:end="46:23"><name pos:start="46:16" pos:end="46:16">s</name><operator pos:start="46:17" pos:end="46:18">-&gt;</operator><name pos:start="46:19" pos:end="46:23">avctx</name></name></expr></argument>, <argument pos:start="46:26" pos:end="46:37"><expr pos:start="46:26" pos:end="46:37"><name pos:start="46:26" pos:end="46:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="46:40" pos:end="46:90"><expr pos:start="46:40" pos:end="46:90"><literal type="string" pos:start="46:40" pos:end="46:90">"format: %d chans: %d bps: %d rate: %d block: %d\n"</literal></expr></argument>,
            <argument pos:start="47:13" pos:end="47:21"><expr pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:21">format</name></name></expr></argument>, <argument pos:start="47:24" pos:end="47:38"><expr pos:start="47:24" pos:end="47:38"><name pos:start="47:24" pos:end="47:38"><name pos:start="47:24" pos:end="47:28">avctx</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:38">channels</name></name></expr></argument>, <argument pos:start="47:41" pos:end="47:68"><expr pos:start="47:41" pos:end="47:68"><name pos:start="47:41" pos:end="47:68"><name pos:start="47:41" pos:end="47:45">avctx</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:68">bits_per_coded_sample</name></name></expr></argument>, <argument pos:start="47:71" pos:end="47:88"><expr pos:start="47:71" pos:end="47:88"><name pos:start="47:71" pos:end="47:88"><name pos:start="47:71" pos:end="47:75">avctx</name><operator pos:start="47:76" pos:end="47:77">-&gt;</operator><name pos:start="47:78" pos:end="47:88">sample_rate</name></name></expr></argument>,
            <argument pos:start="48:13" pos:end="48:30"><expr pos:start="48:13" pos:end="48:30"><name pos:start="48:13" pos:end="48:30"><name pos:start="48:13" pos:end="48:17">avctx</name><operator pos:start="48:18" pos:end="48:19">-&gt;</operator><name pos:start="48:20" pos:end="48:30">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="49:9" pos:end="50:84"><expr pos:start="49:9" pos:end="50:83"><call pos:start="49:9" pos:end="50:83"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="50:83">(<argument pos:start="49:16" pos:end="49:23"><expr pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:16">s</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:23">avctx</name></name></expr></argument>, <argument pos:start="49:26" pos:end="49:37"><expr pos:start="49:26" pos:end="49:37"><name pos:start="49:26" pos:end="49:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="49:40" pos:end="49:94"><expr pos:start="49:40" pos:end="49:94"><literal type="string" pos:start="49:40" pos:end="49:94">"data_length: %d frame_length: %d last: %d total: %d\n"</literal></expr></argument>,
            <argument pos:start="50:13" pos:end="50:26"><expr pos:start="50:13" pos:end="50:26"><name pos:start="50:13" pos:end="50:26"><name pos:start="50:13" pos:end="50:13">s</name><operator pos:start="50:14" pos:end="50:15">-&gt;</operator><name pos:start="50:16" pos:end="50:26">data_length</name></name></expr></argument>, <argument pos:start="50:29" pos:end="50:43"><expr pos:start="50:29" pos:end="50:43"><name pos:start="50:29" pos:end="50:43"><name pos:start="50:29" pos:end="50:29">s</name><operator pos:start="50:30" pos:end="50:31">-&gt;</operator><name pos:start="50:32" pos:end="50:43">frame_length</name></name></expr></argument>, <argument pos:start="50:46" pos:end="50:65"><expr pos:start="50:46" pos:end="50:65"><name pos:start="50:46" pos:end="50:65"><name pos:start="50:46" pos:end="50:46">s</name><operator pos:start="50:47" pos:end="50:48">-&gt;</operator><name pos:start="50:49" pos:end="50:65">last_frame_length</name></name></expr></argument>, <argument pos:start="50:68" pos:end="50:82"><expr pos:start="50:68" pos:end="50:82"><name pos:start="50:68" pos:end="50:82"><name pos:start="50:68" pos:end="50:68">s</name><operator pos:start="50:69" pos:end="50:70">-&gt;</operator><name pos:start="50:71" pos:end="50:82">total_frames</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line" pos:start="51:9" pos:end="51:28">// FIXME: seek table</comment>
        <for pos:start="52:9" pos:end="53:34">for <control pos:start="52:13" pos:end="52:45">(<init pos:start="52:14" pos:end="52:19"><expr pos:start="52:14" pos:end="52:18"><name pos:start="52:14" pos:end="52:14">i</name> <operator pos:start="52:16" pos:end="52:16">=</operator> <literal type="number" pos:start="52:18" pos:end="52:18">0</literal></expr>;</init> <condition pos:start="52:21" pos:end="52:40"><expr pos:start="52:21" pos:end="52:39"><name pos:start="52:21" pos:end="52:21">i</name> <operator pos:start="52:23" pos:end="52:23">&lt;</operator> <name pos:start="52:25" pos:end="52:39"><name pos:start="52:25" pos:end="52:25">s</name><operator pos:start="52:26" pos:end="52:27">-&gt;</operator><name pos:start="52:28" pos:end="52:39">total_frames</name></name></expr>;</condition> <incr pos:start="52:42" pos:end="52:44"><expr pos:start="52:42" pos:end="52:44"><name pos:start="52:42" pos:end="52:42">i</name><operator pos:start="52:43" pos:end="52:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="53:13" pos:end="53:34"><block_content pos:start="53:13" pos:end="53:34">
            <expr_stmt pos:start="53:13" pos:end="53:34"><expr pos:start="53:13" pos:end="53:33"><call pos:start="53:13" pos:end="53:33"><name pos:start="53:13" pos:end="53:21">skip_bits</name><argument_list pos:start="53:22" pos:end="53:33">(<argument pos:start="53:23" pos:end="53:28"><expr pos:start="53:23" pos:end="53:28"><operator pos:start="53:23" pos:end="53:23">&amp;</operator><name pos:start="53:24" pos:end="53:28"><name pos:start="53:24" pos:end="53:24">s</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:28">gb</name></name></expr></argument>, <argument pos:start="53:31" pos:end="53:32"><expr pos:start="53:31" pos:end="53:32"><literal type="number" pos:start="53:31" pos:end="53:32">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
        <expr_stmt pos:start="54:9" pos:end="54:30"><expr pos:start="54:9" pos:end="54:29"><call pos:start="54:9" pos:end="54:29"><name pos:start="54:9" pos:end="54:17">skip_bits</name><argument_list pos:start="54:18" pos:end="54:29">(<argument pos:start="54:19" pos:end="54:24"><expr pos:start="54:19" pos:end="54:24"><operator pos:start="54:19" pos:end="54:19">&amp;</operator><name pos:start="54:20" pos:end="54:24"><name pos:start="54:20" pos:end="54:20">s</name><operator pos:start="54:21" pos:end="54:22">-&gt;</operator><name pos:start="54:23" pos:end="54:24">gb</name></name></expr></argument>, <argument pos:start="54:27" pos:end="54:28"><expr pos:start="54:27" pos:end="54:28"><literal type="number" pos:start="54:27" pos:end="54:28">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="54:32" pos:end="54:52">// CRC32 of seektable</comment>
        <if_stmt pos:start="55:9" pos:end="71:13"><if pos:start="55:9" pos:end="71:13">if<condition pos:start="55:11" pos:end="55:73">(<expr pos:start="55:12" pos:end="55:72"><name pos:start="55:12" pos:end="55:26"><name pos:start="55:12" pos:end="55:12">s</name><operator pos:start="55:13" pos:end="55:14">-&gt;</operator><name pos:start="55:15" pos:end="55:26">frame_length</name></name> <operator pos:start="55:28" pos:end="55:29">&gt;=</operator> <name pos:start="55:31" pos:end="55:38">UINT_MAX</name> <operator pos:start="55:40" pos:end="55:40">/</operator> <operator pos:start="55:42" pos:end="55:42">(</operator><name pos:start="55:43" pos:end="55:53"><name pos:start="55:43" pos:end="55:43">s</name><operator pos:start="55:44" pos:end="55:45">-&gt;</operator><name pos:start="55:46" pos:end="55:53">channels</name></name> <operator pos:start="55:55" pos:end="55:55">*</operator> <sizeof pos:start="55:57" pos:end="55:71">sizeof<argument_list pos:start="55:63" pos:end="55:71">(<argument pos:start="55:64" pos:end="55:70"><expr pos:start="55:64" pos:end="55:70"><name pos:start="55:64" pos:end="55:70">int32_t</name></expr></argument>)</argument_list></sizeof><operator pos:start="55:72" pos:end="55:72">)</operator></expr>)</condition><block pos:start="55:74" pos:end="71:13">{<block_content pos:start="56:13" pos:end="71:13">
            <expr_stmt pos:start="56:13" pos:end="56:68"><expr pos:start="56:13" pos:end="56:67"><call pos:start="56:13" pos:end="56:67"><name pos:start="56:13" pos:end="56:18">av_log</name><argument_list pos:start="56:19" pos:end="56:67">(<argument pos:start="56:20" pos:end="56:24"><expr pos:start="56:20" pos:end="56:24"><name pos:start="56:20" pos:end="56:24">avctx</name></expr></argument>, <argument pos:start="56:27" pos:end="56:38"><expr pos:start="56:27" pos:end="56:38"><name pos:start="56:27" pos:end="56:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="56:41" pos:end="56:66"><expr pos:start="56:41" pos:end="56:66"><literal type="string" pos:start="56:41" pos:end="56:66">"frame_length too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="57:13" pos:end="57:22">return <expr pos:start="57:20" pos:end="57:21"><operator pos:start="57:20" pos:end="57:20">-</operator><literal type="number" pos:start="57:21" pos:end="57:21">1</literal></expr>;</return>
        <if_stmt pos:start="58:9" pos:end="71:13"><if pos:start="58:9" pos:end="71:13">if <condition pos:start="58:12" pos:end="58:24">(<expr pos:start="58:13" pos:end="58:23"><name pos:start="58:13" pos:end="58:18"><name pos:start="58:13" pos:end="58:13">s</name><operator pos:start="58:14" pos:end="58:15">-&gt;</operator><name pos:start="58:16" pos:end="58:18">bps</name></name> <operator pos:start="58:20" pos:end="58:21">==</operator> <literal type="number" pos:start="58:23" pos:end="58:23">2</literal></expr>)</condition> <block pos:start="58:26" pos:end="71:13">{<block_content pos:start="59:13" pos:end="71:13">
            <expr_stmt pos:start="59:13" pos:end="59:87"><expr pos:start="59:13" pos:end="59:86"><name pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:28">decode_buffer</name></name> <operator pos:start="59:30" pos:end="59:30">=</operator> <call pos:start="59:32" pos:end="59:86"><name pos:start="59:32" pos:end="59:41">av_mallocz</name><argument_list pos:start="59:42" pos:end="59:86">(<argument pos:start="59:43" pos:end="59:85"><expr pos:start="59:43" pos:end="59:85"><sizeof pos:start="59:43" pos:end="59:57">sizeof<argument_list pos:start="59:49" pos:end="59:57">(<argument pos:start="59:50" pos:end="59:56"><expr pos:start="59:50" pos:end="59:56"><name pos:start="59:50" pos:end="59:56">int32_t</name></expr></argument>)</argument_list></sizeof><operator pos:start="59:58" pos:end="59:58">*</operator><name pos:start="59:59" pos:end="59:73"><name pos:start="59:59" pos:end="59:59">s</name><operator pos:start="59:60" pos:end="59:61">-&gt;</operator><name pos:start="59:62" pos:end="59:73">frame_length</name></name><operator pos:start="59:74" pos:end="59:74">*</operator><name pos:start="59:75" pos:end="59:85"><name pos:start="59:75" pos:end="59:75">s</name><operator pos:start="59:76" pos:end="59:77">-&gt;</operator><name pos:start="59:78" pos:end="59:85">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="60:13" pos:end="61:39"><if pos:start="60:13" pos:end="61:39">if <condition pos:start="60:16" pos:end="60:34">(<expr pos:start="60:17" pos:end="60:33"><operator pos:start="60:17" pos:end="60:17">!</operator><name pos:start="60:18" pos:end="60:33"><name pos:start="60:18" pos:end="60:18">s</name><operator pos:start="60:19" pos:end="60:20">-&gt;</operator><name pos:start="60:21" pos:end="60:33">decode_buffer</name></name></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:39"><block_content pos:start="61:17" pos:end="61:39">
                <return pos:start="61:17" pos:end="61:39">return <expr pos:start="61:24" pos:end="61:38"><call pos:start="61:24" pos:end="61:38"><name pos:start="61:24" pos:end="61:30">AVERROR</name><argument_list pos:start="61:31" pos:end="61:38">(<argument pos:start="61:32" pos:end="61:37"><expr pos:start="61:32" pos:end="61:37"><name pos:start="61:32" pos:end="61:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="62:9" pos:end="62:68"><expr pos:start="62:9" pos:end="62:67"><name pos:start="62:9" pos:end="62:17"><name pos:start="62:9" pos:end="62:9">s</name><operator pos:start="62:10" pos:end="62:11">-&gt;</operator><name pos:start="62:12" pos:end="62:17">ch_ctx</name></name> <operator pos:start="62:19" pos:end="62:19">=</operator> <call pos:start="62:21" pos:end="62:67"><name pos:start="62:21" pos:end="62:29">av_malloc</name><argument_list pos:start="62:30" pos:end="62:67">(<argument pos:start="62:31" pos:end="62:66"><expr pos:start="62:31" pos:end="62:66"><name pos:start="62:31" pos:end="62:45"><name pos:start="62:31" pos:end="62:35">avctx</name><operator pos:start="62:36" pos:end="62:37">-&gt;</operator><name pos:start="62:38" pos:end="62:45">channels</name></name> <operator pos:start="62:47" pos:end="62:47">*</operator> <sizeof pos:start="62:49" pos:end="62:66">sizeof<argument_list pos:start="62:55" pos:end="62:66">(<argument pos:start="62:56" pos:end="62:65"><expr pos:start="62:56" pos:end="62:65"><operator pos:start="62:56" pos:end="62:56">*</operator><name pos:start="62:57" pos:end="62:65"><name pos:start="62:57" pos:end="62:57">s</name><operator pos:start="62:58" pos:end="62:59">-&gt;</operator><name pos:start="62:60" pos:end="62:65">ch_ctx</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="63:9" pos:end="71:13"><if pos:start="63:9" pos:end="66:5">if <condition pos:start="63:12" pos:end="63:23">(<expr pos:start="63:13" pos:end="63:22"><operator pos:start="63:13" pos:end="63:13">!</operator><name pos:start="63:14" pos:end="63:22"><name pos:start="63:14" pos:end="63:14">s</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:22">ch_ctx</name></name></expr>)</condition> <block pos:start="63:25" pos:end="66:5">{<block_content pos:start="64:13" pos:end="65:35">
            <expr_stmt pos:start="64:13" pos:end="64:40"><expr pos:start="64:13" pos:end="64:39"><call pos:start="64:13" pos:end="64:39"><name pos:start="64:13" pos:end="64:20">av_freep</name><argument_list pos:start="64:21" pos:end="64:39">(<argument pos:start="64:22" pos:end="64:38"><expr pos:start="64:22" pos:end="64:38"><operator pos:start="64:22" pos:end="64:22">&amp;</operator><name pos:start="64:23" pos:end="64:38"><name pos:start="64:23" pos:end="64:23">s</name><operator pos:start="64:24" pos:end="64:25">-&gt;</operator><name pos:start="64:26" pos:end="64:38">decode_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="65:13" pos:end="65:35">return <expr pos:start="65:20" pos:end="65:34"><call pos:start="65:20" pos:end="65:34"><name pos:start="65:20" pos:end="65:26">AVERROR</name><argument_list pos:start="65:27" pos:end="65:34">(<argument pos:start="65:28" pos:end="65:33"><expr pos:start="65:28" pos:end="65:33"><name pos:start="65:28" pos:end="65:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if> <else pos:start="66:7" pos:end="71:13">else <block pos:start="66:12" pos:end="71:13">{<block_content pos:start="67:9" pos:end="71:13">
        <expr_stmt pos:start="67:9" pos:end="67:65"><expr pos:start="67:9" pos:end="67:64"><call pos:start="67:9" pos:end="67:64"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="67:64">(<argument pos:start="67:16" pos:end="67:20"><expr pos:start="67:16" pos:end="67:20"><name pos:start="67:16" pos:end="67:20">avctx</name></expr></argument>, <argument pos:start="67:23" pos:end="67:34"><expr pos:start="67:23" pos:end="67:34"><name pos:start="67:23" pos:end="67:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:37" pos:end="67:63"><expr pos:start="67:37" pos:end="67:63"><literal type="string" pos:start="67:37" pos:end="67:63">"Wrong extradata present\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="68:9" pos:end="68:18">return <expr pos:start="68:16" pos:end="68:17"><operator pos:start="68:16" pos:end="68:16">-</operator><literal type="number" pos:start="68:17" pos:end="68:17">1</literal></expr>;</return>
    <expr_stmt pos:start="69:5" pos:end="69:42"><expr pos:start="69:5" pos:end="69:41"><call pos:start="69:5" pos:end="69:41"><name pos:start="69:5" pos:end="69:30">avcodec_get_frame_defaults</name><argument_list pos:start="69:31" pos:end="69:41">(<argument pos:start="69:32" pos:end="69:40"><expr pos:start="69:32" pos:end="69:40"><operator pos:start="69:32" pos:end="69:32">&amp;</operator><name pos:start="69:33" pos:end="69:40"><name pos:start="69:33" pos:end="69:33">s</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:40">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="70:5" pos:end="70:35"><expr pos:start="70:5" pos:end="70:34"><name pos:start="70:5" pos:end="70:22"><name pos:start="70:5" pos:end="70:9">avctx</name><operator pos:start="70:10" pos:end="70:11">-&gt;</operator><name pos:start="70:12" pos:end="70:22">coded_frame</name></name> <operator pos:start="70:24" pos:end="70:24">=</operator> <operator pos:start="70:26" pos:end="70:26">&amp;</operator><name pos:start="70:27" pos:end="70:34"><name pos:start="70:27" pos:end="70:27">s</name><operator pos:start="70:28" pos:end="70:29">-&gt;</operator><name pos:start="70:30" pos:end="70:34">frame</name></name></expr>;</expr_stmt>
    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
