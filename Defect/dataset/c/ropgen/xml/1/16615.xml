<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16615.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">read_header_openmpt</name><parameter_list pos:start="1:31" pos:end="1:50">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="135:1">{<block_content pos:start="5:5" pos:end="133:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">OpenMPTContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:27">openmpt</name> <init pos:start="7:29" pos:end="7:42">= <expr pos:start="7:31" pos:end="7:42"><name pos:start="7:31" pos:end="7:42"><name pos:start="7:31" pos:end="7:31">s</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:16">size</name> <init pos:start="9:18" pos:end="9:35">= <expr pos:start="9:20" pos:end="9:35"><call pos:start="9:20" pos:end="9:35"><name pos:start="9:20" pos:end="9:28">avio_size</name><argument_list pos:start="9:29" pos:end="9:35">(<argument pos:start="9:30" pos:end="9:34"><expr pos:start="9:30" pos:end="9:34"><name pos:start="9:30" pos:end="9:34"><name pos:start="9:30" pos:end="9:30">s</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:34">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="13:35"><if pos:start="11:5" pos:end="13:35">if <condition pos:start="11:8" pos:end="11:14">(<expr pos:start="11:9" pos:end="11:13"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:13">size</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:35"><block_content pos:start="13:9" pos:end="13:35">

        <return pos:start="13:9" pos:end="13:35">return <expr pos:start="13:16" pos:end="13:34"><name pos:start="13:16" pos:end="13:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:31"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:13">buf</name> <init pos:start="15:15" pos:end="15:31">= <expr pos:start="15:17" pos:end="15:31"><call pos:start="15:17" pos:end="15:31"><name pos:start="15:17" pos:end="15:25">av_malloc</name><argument_list pos:start="15:26" pos:end="15:31">(<argument pos:start="15:27" pos:end="15:30"><expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:30">size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>





    <if_stmt pos:start="23:5" pos:end="25:31"><if pos:start="23:5" pos:end="25:31">if <condition pos:start="23:8" pos:end="23:13">(<expr pos:start="23:9" pos:end="23:12"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:12">buf</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:31"><block_content pos:start="25:9" pos:end="25:31">

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:39"><expr pos:start="27:5" pos:end="27:38"><name pos:start="27:5" pos:end="27:8">size</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:38"><name pos:start="27:12" pos:end="27:20">avio_read</name><argument_list pos:start="27:21" pos:end="27:38">(<argument pos:start="27:22" pos:end="27:26"><expr pos:start="27:22" pos:end="27:26"><name pos:start="27:22" pos:end="27:26"><name pos:start="27:22" pos:end="27:22">s</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:26">pb</name></name></expr></argument>, <argument pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:31">buf</name></expr></argument>, <argument pos:start="27:34" pos:end="27:37"><expr pos:start="27:34" pos:end="27:37"><name pos:start="27:34" pos:end="27:37">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:17">(<expr pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:12">size</name> <operator pos:start="29:14" pos:end="29:14">&lt;</operator> <literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>)</condition> <block pos:start="29:19" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:20">

        <expr_stmt pos:start="31:9" pos:end="31:66"><expr pos:start="31:9" pos:end="31:65"><call pos:start="31:9" pos:end="31:65"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:65">(<argument pos:start="31:16" pos:end="31:16"><expr pos:start="31:16" pos:end="31:16"><name pos:start="31:16" pos:end="31:16">s</name></expr></argument>, <argument pos:start="31:19" pos:end="31:30"><expr pos:start="31:19" pos:end="31:30"><name pos:start="31:19" pos:end="31:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:33" pos:end="31:64"><expr pos:start="31:33" pos:end="31:64"><literal type="string" pos:start="31:33" pos:end="31:64">"Reading input buffer failed.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:23"><expr pos:start="33:9" pos:end="33:22"><call pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:16">av_freep</name><argument_list pos:start="33:17" pos:end="33:22">(<argument pos:start="33:18" pos:end="33:21"><expr pos:start="33:18" pos:end="33:21"><operator pos:start="33:18" pos:end="33:18">&amp;</operator><name pos:start="33:19" pos:end="33:21">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:20">return <expr pos:start="35:16" pos:end="35:19"><name pos:start="35:16" pos:end="35:19">size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:93"><expr pos:start="41:5" pos:end="41:92"><name pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:11">openmpt</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:19">module</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <call pos:start="41:23" pos:end="41:92"><name pos:start="41:23" pos:end="41:55">openmpt_module_create_from_memory</name><argument_list pos:start="41:56" pos:end="41:92">(<argument pos:start="41:57" pos:end="41:59"><expr pos:start="41:57" pos:end="41:59"><name pos:start="41:57" pos:end="41:59">buf</name></expr></argument>, <argument pos:start="41:62" pos:end="41:65"><expr pos:start="41:62" pos:end="41:65"><name pos:start="41:62" pos:end="41:65">size</name></expr></argument>, <argument pos:start="41:68" pos:end="41:82"><expr pos:start="41:68" pos:end="41:82"><name pos:start="41:68" pos:end="41:82">openmpt_logfunc</name></expr></argument>, <argument pos:start="41:85" pos:end="41:85"><expr pos:start="41:85" pos:end="41:85"><name pos:start="41:85" pos:end="41:85">s</name></expr></argument>, <argument pos:start="41:88" pos:end="41:91"><expr pos:start="41:88" pos:end="41:91"><name pos:start="41:88" pos:end="41:91">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:19"><expr pos:start="43:5" pos:end="43:18"><call pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:12">av_freep</name><argument_list pos:start="43:13" pos:end="43:18">(<argument pos:start="43:14" pos:end="43:17"><expr pos:start="43:14" pos:end="43:17"><operator pos:start="43:14" pos:end="43:14">&amp;</operator><name pos:start="43:15" pos:end="43:17">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:39"><if pos:start="45:5" pos:end="47:39">if <condition pos:start="45:8" pos:end="45:25">(<expr pos:start="45:9" pos:end="45:24"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:24"><name pos:start="45:10" pos:end="45:16">openmpt</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:24">module</name></name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:39"><block_content pos:start="47:13" pos:end="47:39">

            <return pos:start="47:13" pos:end="47:39">return <expr pos:start="47:20" pos:end="47:38"><name pos:start="47:20" pos:end="47:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:77"><expr pos:start="51:5" pos:end="51:76"><name pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:11">openmpt</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:21">channels</name></name>   <operator pos:start="51:25" pos:end="51:25">=</operator> <call pos:start="51:27" pos:end="51:76"><name pos:start="51:27" pos:end="51:59">av_get_channel_layout_nb_channels</name><argument_list pos:start="51:60" pos:end="51:76">(<argument pos:start="51:61" pos:end="51:75"><expr pos:start="51:61" pos:end="51:75"><name pos:start="51:61" pos:end="51:75"><name pos:start="51:61" pos:end="51:67">openmpt</name><operator pos:start="51:68" pos:end="51:69">-&gt;</operator><name pos:start="51:70" pos:end="51:75">layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:79"><expr pos:start="53:5" pos:end="53:78"><name pos:start="53:5" pos:end="53:21"><name pos:start="53:5" pos:end="53:11">openmpt</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:21">duration</name></name>   <operator pos:start="53:25" pos:end="53:25">=</operator> <call pos:start="53:27" pos:end="53:78"><name pos:start="53:27" pos:end="53:61">openmpt_module_get_duration_seconds</name><argument_list pos:start="53:62" pos:end="53:78">(<argument pos:start="53:63" pos:end="53:77"><expr pos:start="53:63" pos:end="53:77"><name pos:start="53:63" pos:end="53:77"><name pos:start="53:63" pos:end="53:69">openmpt</name><operator pos:start="53:70" pos:end="53:71">-&gt;</operator><name pos:start="53:72" pos:end="53:77">module</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:83"><expr pos:start="57:5" pos:end="57:82"><call pos:start="57:5" pos:end="57:82"><name pos:start="57:5" pos:end="57:12">add_meta</name><argument_list pos:start="57:13" pos:end="57:82">(<argument pos:start="57:14" pos:end="57:14"><expr pos:start="57:14" pos:end="57:14"><name pos:start="57:14" pos:end="57:14">s</name></expr></argument>, <argument pos:start="57:17" pos:end="57:24"><expr pos:start="57:17" pos:end="57:24"><literal type="string" pos:start="57:17" pos:end="57:24">"artist"</literal></expr></argument>,  <argument pos:start="57:28" pos:end="57:81"><expr pos:start="57:28" pos:end="57:81"><call pos:start="57:28" pos:end="57:81"><name pos:start="57:28" pos:end="57:54">openmpt_module_get_metadata</name><argument_list pos:start="57:55" pos:end="57:81">(<argument pos:start="57:56" pos:end="57:70"><expr pos:start="57:56" pos:end="57:70"><name pos:start="57:56" pos:end="57:70"><name pos:start="57:56" pos:end="57:62">openmpt</name><operator pos:start="57:63" pos:end="57:64">-&gt;</operator><name pos:start="57:65" pos:end="57:70">module</name></name></expr></argument>, <argument pos:start="57:73" pos:end="57:80"><expr pos:start="57:73" pos:end="57:80"><literal type="string" pos:start="57:73" pos:end="57:80">"artist"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:82"><expr pos:start="59:5" pos:end="59:81"><call pos:start="59:5" pos:end="59:81"><name pos:start="59:5" pos:end="59:12">add_meta</name><argument_list pos:start="59:13" pos:end="59:81">(<argument pos:start="59:14" pos:end="59:14"><expr pos:start="59:14" pos:end="59:14"><name pos:start="59:14" pos:end="59:14">s</name></expr></argument>, <argument pos:start="59:17" pos:end="59:23"><expr pos:start="59:17" pos:end="59:23"><literal type="string" pos:start="59:17" pos:end="59:23">"title"</literal></expr></argument>,   <argument pos:start="59:28" pos:end="59:80"><expr pos:start="59:28" pos:end="59:80"><call pos:start="59:28" pos:end="59:80"><name pos:start="59:28" pos:end="59:54">openmpt_module_get_metadata</name><argument_list pos:start="59:55" pos:end="59:80">(<argument pos:start="59:56" pos:end="59:70"><expr pos:start="59:56" pos:end="59:70"><name pos:start="59:56" pos:end="59:70"><name pos:start="59:56" pos:end="59:62">openmpt</name><operator pos:start="59:63" pos:end="59:64">-&gt;</operator><name pos:start="59:65" pos:end="59:70">module</name></name></expr></argument>, <argument pos:start="59:73" pos:end="59:79"><expr pos:start="59:73" pos:end="59:79"><literal type="string" pos:start="59:73" pos:end="59:79">"title"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:84"><expr pos:start="61:5" pos:end="61:83"><call pos:start="61:5" pos:end="61:83"><name pos:start="61:5" pos:end="61:12">add_meta</name><argument_list pos:start="61:13" pos:end="61:83">(<argument pos:start="61:14" pos:end="61:14"><expr pos:start="61:14" pos:end="61:14"><name pos:start="61:14" pos:end="61:14">s</name></expr></argument>, <argument pos:start="61:17" pos:end="61:25"><expr pos:start="61:17" pos:end="61:25"><literal type="string" pos:start="61:17" pos:end="61:25">"encoder"</literal></expr></argument>, <argument pos:start="61:28" pos:end="61:82"><expr pos:start="61:28" pos:end="61:82"><call pos:start="61:28" pos:end="61:82"><name pos:start="61:28" pos:end="61:54">openmpt_module_get_metadata</name><argument_list pos:start="61:55" pos:end="61:82">(<argument pos:start="61:56" pos:end="61:70"><expr pos:start="61:56" pos:end="61:70"><name pos:start="61:56" pos:end="61:70"><name pos:start="61:56" pos:end="61:62">openmpt</name><operator pos:start="61:63" pos:end="61:64">-&gt;</operator><name pos:start="61:65" pos:end="61:70">module</name></name></expr></argument>, <argument pos:start="61:73" pos:end="61:81"><expr pos:start="61:73" pos:end="61:81"><literal type="string" pos:start="61:73" pos:end="61:81">"tracker"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:84"><expr pos:start="63:5" pos:end="63:83"><call pos:start="63:5" pos:end="63:83"><name pos:start="63:5" pos:end="63:12">add_meta</name><argument_list pos:start="63:13" pos:end="63:83">(<argument pos:start="63:14" pos:end="63:14"><expr pos:start="63:14" pos:end="63:14"><name pos:start="63:14" pos:end="63:14">s</name></expr></argument>, <argument pos:start="63:17" pos:end="63:25"><expr pos:start="63:17" pos:end="63:25"><literal type="string" pos:start="63:17" pos:end="63:25">"comment"</literal></expr></argument>, <argument pos:start="63:28" pos:end="63:82"><expr pos:start="63:28" pos:end="63:82"><call pos:start="63:28" pos:end="63:82"><name pos:start="63:28" pos:end="63:54">openmpt_module_get_metadata</name><argument_list pos:start="63:55" pos:end="63:82">(<argument pos:start="63:56" pos:end="63:70"><expr pos:start="63:56" pos:end="63:70"><name pos:start="63:56" pos:end="63:70"><name pos:start="63:56" pos:end="63:62">openmpt</name><operator pos:start="63:63" pos:end="63:64">-&gt;</operator><name pos:start="63:65" pos:end="63:70">module</name></name></expr></argument>, <argument pos:start="63:73" pos:end="63:81"><expr pos:start="63:73" pos:end="63:81"><literal type="string" pos:start="63:73" pos:end="63:81">"message"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:81"><expr pos:start="65:5" pos:end="65:80"><call pos:start="65:5" pos:end="65:80"><name pos:start="65:5" pos:end="65:12">add_meta</name><argument_list pos:start="65:13" pos:end="65:80">(<argument pos:start="65:14" pos:end="65:14"><expr pos:start="65:14" pos:end="65:14"><name pos:start="65:14" pos:end="65:14">s</name></expr></argument>, <argument pos:start="65:17" pos:end="65:22"><expr pos:start="65:17" pos:end="65:22"><literal type="string" pos:start="65:17" pos:end="65:22">"date"</literal></expr></argument>,    <argument pos:start="65:28" pos:end="65:79"><expr pos:start="65:28" pos:end="65:79"><call pos:start="65:28" pos:end="65:79"><name pos:start="65:28" pos:end="65:54">openmpt_module_get_metadata</name><argument_list pos:start="65:55" pos:end="65:79">(<argument pos:start="65:56" pos:end="65:70"><expr pos:start="65:56" pos:end="65:70"><name pos:start="65:56" pos:end="65:70"><name pos:start="65:56" pos:end="65:62">openmpt</name><operator pos:start="65:63" pos:end="65:64">-&gt;</operator><name pos:start="65:65" pos:end="65:70">module</name></name></expr></argument>, <argument pos:start="65:73" pos:end="65:78"><expr pos:start="65:73" pos:end="65:78"><literal type="string" pos:start="65:73" pos:end="65:78">"date"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="77:5"><if pos:start="69:5" pos:end="77:5">if <condition pos:start="69:8" pos:end="69:77">(<expr pos:start="69:9" pos:end="69:76"><name pos:start="69:9" pos:end="69:24"><name pos:start="69:9" pos:end="69:15">openmpt</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:24">subsong</name></name> <operator pos:start="69:26" pos:end="69:27">&gt;=</operator> <call pos:start="69:29" pos:end="69:76"><name pos:start="69:29" pos:end="69:59">openmpt_module_get_num_subsongs</name><argument_list pos:start="69:60" pos:end="69:76">(<argument pos:start="69:61" pos:end="69:75"><expr pos:start="69:61" pos:end="69:75"><name pos:start="69:61" pos:end="69:75"><name pos:start="69:61" pos:end="69:67">openmpt</name><operator pos:start="69:68" pos:end="69:69">-&gt;</operator><name pos:start="69:70" pos:end="69:75">module</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:79" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:31">

        <expr_stmt pos:start="71:9" pos:end="71:48"><expr pos:start="71:9" pos:end="71:47"><call pos:start="71:9" pos:end="71:47"><name pos:start="71:9" pos:end="71:30">openmpt_module_destroy</name><argument_list pos:start="71:31" pos:end="71:47">(<argument pos:start="71:32" pos:end="71:46"><expr pos:start="71:32" pos:end="71:46"><name pos:start="71:32" pos:end="71:46"><name pos:start="71:32" pos:end="71:38">openmpt</name><operator pos:start="71:39" pos:end="71:40">-&gt;</operator><name pos:start="71:41" pos:end="71:46">module</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:81"><expr pos:start="73:9" pos:end="73:80"><call pos:start="73:9" pos:end="73:80"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="73:80">(<argument pos:start="73:16" pos:end="73:16"><expr pos:start="73:16" pos:end="73:16"><name pos:start="73:16" pos:end="73:16">s</name></expr></argument>, <argument pos:start="73:19" pos:end="73:30"><expr pos:start="73:19" pos:end="73:30"><name pos:start="73:19" pos:end="73:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:33" pos:end="73:61"><expr pos:start="73:33" pos:end="73:61"><literal type="string" pos:start="73:33" pos:end="73:61">"Invalid subsong index: %d\n"</literal></expr></argument>, <argument pos:start="73:64" pos:end="73:79"><expr pos:start="73:64" pos:end="73:79"><name pos:start="73:64" pos:end="73:79"><name pos:start="73:64" pos:end="73:70">openmpt</name><operator pos:start="73:71" pos:end="73:72">-&gt;</operator><name pos:start="73:73" pos:end="73:79">subsong</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:31">return <expr pos:start="75:16" pos:end="75:30"><call pos:start="75:16" pos:end="75:30"><name pos:start="75:16" pos:end="75:22">AVERROR</name><argument_list pos:start="75:23" pos:end="75:30">(<argument pos:start="75:24" pos:end="75:29"><expr pos:start="75:24" pos:end="75:29"><name pos:start="75:24" pos:end="75:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="101:5"><if pos:start="81:5" pos:end="101:5">if <condition pos:start="81:8" pos:end="81:31">(<expr pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:24"><name pos:start="81:9" pos:end="81:15">openmpt</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:24">subsong</name></name> <operator pos:start="81:26" pos:end="81:27">!=</operator> <operator pos:start="81:29" pos:end="81:29">-</operator><literal type="number" pos:start="81:30" pos:end="81:30">2</literal></expr>)</condition> <block pos:start="81:33" pos:end="101:5">{<block_content pos:start="83:9" pos:end="99:9">

        <if_stmt pos:start="83:9" pos:end="87:9"><if pos:start="83:9" pos:end="87:9">if <condition pos:start="83:12" pos:end="83:34">(<expr pos:start="83:13" pos:end="83:33"><name pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:19">openmpt</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:28">subsong</name></name> <operator pos:start="83:30" pos:end="83:31">&gt;=</operator> <literal type="number" pos:start="83:33" pos:end="83:33">0</literal></expr>)</condition> <block pos:start="83:36" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:76">

            <expr_stmt pos:start="85:13" pos:end="85:76"><expr pos:start="85:13" pos:end="85:75"><call pos:start="85:13" pos:end="85:75"><name pos:start="85:13" pos:end="85:27">av_dict_set_int</name><argument_list pos:start="85:28" pos:end="85:75">(<argument pos:start="85:29" pos:end="85:40"><expr pos:start="85:29" pos:end="85:40"><operator pos:start="85:29" pos:end="85:29">&amp;</operator><name pos:start="85:30" pos:end="85:40"><name pos:start="85:30" pos:end="85:30">s</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:40">metadata</name></name></expr></argument>, <argument pos:start="85:43" pos:end="85:49"><expr pos:start="85:43" pos:end="85:49"><literal type="string" pos:start="85:43" pos:end="85:49">"track"</literal></expr></argument>, <argument pos:start="85:52" pos:end="85:71"><expr pos:start="85:52" pos:end="85:71"><name pos:start="85:52" pos:end="85:67"><name pos:start="85:52" pos:end="85:58">openmpt</name><operator pos:start="85:59" pos:end="85:60">-&gt;</operator><name pos:start="85:61" pos:end="85:67">subsong</name></name> <operator pos:start="85:69" pos:end="85:69">+</operator> <literal type="number" pos:start="85:71" pos:end="85:71">1</literal></expr></argument>, <argument pos:start="85:74" pos:end="85:74"><expr pos:start="85:74" pos:end="85:74"><literal type="number" pos:start="85:74" pos:end="85:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:79"><expr pos:start="89:9" pos:end="89:78"><name pos:start="89:9" pos:end="89:11">ret</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="89:78"><name pos:start="89:15" pos:end="89:43">openmpt_module_select_subsong</name><argument_list pos:start="89:44" pos:end="89:78">(<argument pos:start="89:45" pos:end="89:59"><expr pos:start="89:45" pos:end="89:59"><name pos:start="89:45" pos:end="89:59"><name pos:start="89:45" pos:end="89:51">openmpt</name><operator pos:start="89:52" pos:end="89:53">-&gt;</operator><name pos:start="89:54" pos:end="89:59">module</name></name></expr></argument>, <argument pos:start="89:62" pos:end="89:77"><expr pos:start="89:62" pos:end="89:77"><name pos:start="89:62" pos:end="89:77"><name pos:start="89:62" pos:end="89:68">openmpt</name><operator pos:start="89:69" pos:end="89:70">-&gt;</operator><name pos:start="89:71" pos:end="89:77">subsong</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="99:9"><if pos:start="91:9" pos:end="99:9">if <condition pos:start="91:12" pos:end="91:17">(<expr pos:start="91:13" pos:end="91:16"><operator pos:start="91:13" pos:end="91:13">!</operator><name pos:start="91:14" pos:end="91:16">ret</name></expr>)</condition><block pos:start="91:18" pos:end="99:9">{<block_content pos:start="93:13" pos:end="97:35">

            <expr_stmt pos:start="93:13" pos:end="93:52"><expr pos:start="93:13" pos:end="93:51"><call pos:start="93:13" pos:end="93:51"><name pos:start="93:13" pos:end="93:34">openmpt_module_destroy</name><argument_list pos:start="93:35" pos:end="93:51">(<argument pos:start="93:36" pos:end="93:50"><expr pos:start="93:36" pos:end="93:50"><name pos:start="93:36" pos:end="93:50"><name pos:start="93:36" pos:end="93:42">openmpt</name><operator pos:start="93:43" pos:end="93:44">-&gt;</operator><name pos:start="93:45" pos:end="93:50">module</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:96"><expr pos:start="95:13" pos:end="95:95"><call pos:start="95:13" pos:end="95:95"><name pos:start="95:13" pos:end="95:18">av_log</name><argument_list pos:start="95:19" pos:end="95:95">(<argument pos:start="95:20" pos:end="95:20"><expr pos:start="95:20" pos:end="95:20"><name pos:start="95:20" pos:end="95:20">s</name></expr></argument>, <argument pos:start="95:23" pos:end="95:34"><expr pos:start="95:23" pos:end="95:34"><name pos:start="95:23" pos:end="95:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="95:37" pos:end="95:76"><expr pos:start="95:37" pos:end="95:76"><literal type="string" pos:start="95:37" pos:end="95:76">"Could not select requested subsong: %d"</literal></expr></argument>, <argument pos:start="95:79" pos:end="95:94"><expr pos:start="95:79" pos:end="95:94"><name pos:start="95:79" pos:end="95:94"><name pos:start="95:79" pos:end="95:85">openmpt</name><operator pos:start="95:86" pos:end="95:87">-&gt;</operator><name pos:start="95:88" pos:end="95:94">subsong</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="97:13" pos:end="97:35">return <expr pos:start="97:20" pos:end="97:34"><call pos:start="97:20" pos:end="97:34"><name pos:start="97:20" pos:end="97:26">AVERROR</name><argument_list pos:start="97:27" pos:end="97:34">(<argument pos:start="97:28" pos:end="97:33"><expr pos:start="97:28" pos:end="97:33"><name pos:start="97:28" pos:end="97:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:38"><expr pos:start="105:5" pos:end="105:37"><name pos:start="105:5" pos:end="105:6">st</name> <operator pos:start="105:8" pos:end="105:8">=</operator> <call pos:start="105:10" pos:end="105:37"><name pos:start="105:10" pos:end="105:28">avformat_new_stream</name><argument_list pos:start="105:29" pos:end="105:37">(<argument pos:start="105:30" pos:end="105:30"><expr pos:start="105:30" pos:end="105:30"><name pos:start="105:30" pos:end="105:30">s</name></expr></argument>, <argument pos:start="105:33" pos:end="105:36"><expr pos:start="105:33" pos:end="105:36"><name pos:start="105:33" pos:end="105:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="115:5"><if pos:start="107:5" pos:end="115:5">if <condition pos:start="107:8" pos:end="107:12">(<expr pos:start="107:9" pos:end="107:11"><operator pos:start="107:9" pos:end="107:9">!</operator><name pos:start="107:10" pos:end="107:11">st</name></expr>)</condition> <block pos:start="107:14" pos:end="115:5">{<block_content pos:start="109:9" pos:end="113:31">

        <expr_stmt pos:start="109:9" pos:end="109:48"><expr pos:start="109:9" pos:end="109:47"><call pos:start="109:9" pos:end="109:47"><name pos:start="109:9" pos:end="109:30">openmpt_module_destroy</name><argument_list pos:start="109:31" pos:end="109:47">(<argument pos:start="109:32" pos:end="109:46"><expr pos:start="109:32" pos:end="109:46"><name pos:start="109:32" pos:end="109:46"><name pos:start="109:32" pos:end="109:38">openmpt</name><operator pos:start="109:39" pos:end="109:40">-&gt;</operator><name pos:start="109:41" pos:end="109:46">module</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:31"><expr pos:start="111:9" pos:end="111:30"><name pos:start="111:9" pos:end="111:23"><name pos:start="111:9" pos:end="111:15">openmpt</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:23">module</name></name> <operator pos:start="111:25" pos:end="111:25">=</operator> <name pos:start="111:27" pos:end="111:30">NULL</name></expr>;</expr_stmt>

        <return pos:start="113:9" pos:end="113:31">return <expr pos:start="113:16" pos:end="113:30"><call pos:start="113:16" pos:end="113:30"><name pos:start="113:16" pos:end="113:22">AVERROR</name><argument_list pos:start="113:23" pos:end="113:30">(<argument pos:start="113:24" pos:end="113:29"><expr pos:start="113:24" pos:end="113:29"><name pos:start="113:24" pos:end="113:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:49"><expr pos:start="117:5" pos:end="117:48"><call pos:start="117:5" pos:end="117:48"><name pos:start="117:5" pos:end="117:23">avpriv_set_pts_info</name><argument_list pos:start="117:24" pos:end="117:48">(<argument pos:start="117:25" pos:end="117:26"><expr pos:start="117:25" pos:end="117:26"><name pos:start="117:25" pos:end="117:26">st</name></expr></argument>, <argument pos:start="117:29" pos:end="117:30"><expr pos:start="117:29" pos:end="117:30"><literal type="number" pos:start="117:29" pos:end="117:30">64</literal></expr></argument>, <argument pos:start="117:33" pos:end="117:33"><expr pos:start="117:33" pos:end="117:33"><literal type="number" pos:start="117:33" pos:end="117:33">1</literal></expr></argument>, <argument pos:start="117:36" pos:end="117:47"><expr pos:start="117:36" pos:end="117:47"><name pos:start="117:36" pos:end="117:47">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:58"><expr pos:start="119:5" pos:end="119:57"><name pos:start="119:5" pos:end="119:16"><name pos:start="119:5" pos:end="119:6">st</name><operator pos:start="119:7" pos:end="119:8">-&gt;</operator><name pos:start="119:9" pos:end="119:16">duration</name></name> <operator pos:start="119:18" pos:end="119:18">=</operator> <call pos:start="119:20" pos:end="119:57"><name pos:start="119:20" pos:end="119:25">llrint</name><argument_list pos:start="119:26" pos:end="119:57">(<argument pos:start="119:27" pos:end="119:56"><expr pos:start="119:27" pos:end="119:56"><name pos:start="119:27" pos:end="119:43"><name pos:start="119:27" pos:end="119:33">openmpt</name><operator pos:start="119:34" pos:end="119:35">-&gt;</operator><name pos:start="119:36" pos:end="119:43">duration</name></name><operator pos:start="119:44" pos:end="119:44">*</operator><name pos:start="119:45" pos:end="119:56">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:51"><expr pos:start="123:5" pos:end="123:50"><name pos:start="123:5" pos:end="123:28"><name pos:start="123:5" pos:end="123:6">st</name><operator pos:start="123:7" pos:end="123:8">-&gt;</operator><name pos:start="123:9" pos:end="123:16">codecpar</name><operator pos:start="123:17" pos:end="123:18">-&gt;</operator><name pos:start="123:19" pos:end="123:28">codec_type</name></name>  <operator pos:start="123:31" pos:end="123:31">=</operator> <name pos:start="123:33" pos:end="123:50">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:84"><expr pos:start="125:5" pos:end="125:83"><name pos:start="125:5" pos:end="125:26"><name pos:start="125:5" pos:end="125:6">st</name><operator pos:start="125:7" pos:end="125:8">-&gt;</operator><name pos:start="125:9" pos:end="125:16">codecpar</name><operator pos:start="125:17" pos:end="125:18">-&gt;</operator><name pos:start="125:19" pos:end="125:26">codec_id</name></name>    <operator pos:start="125:31" pos:end="125:31">=</operator> <call pos:start="125:33" pos:end="125:83"><name pos:start="125:33" pos:end="125:37">AV_NE</name><argument_list pos:start="125:38" pos:end="125:83">(<argument pos:start="125:39" pos:end="125:59"><expr pos:start="125:39" pos:end="125:59"><name pos:start="125:39" pos:end="125:59">AV_CODEC_ID_PCM_F32BE</name></expr></argument>, <argument pos:start="125:62" pos:end="125:82"><expr pos:start="125:62" pos:end="125:82"><name pos:start="125:62" pos:end="125:82">AV_CODEC_ID_PCM_F32LE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:50"><expr pos:start="127:5" pos:end="127:49"><name pos:start="127:5" pos:end="127:26"><name pos:start="127:5" pos:end="127:6">st</name><operator pos:start="127:7" pos:end="127:8">-&gt;</operator><name pos:start="127:9" pos:end="127:16">codecpar</name><operator pos:start="127:17" pos:end="127:18">-&gt;</operator><name pos:start="127:19" pos:end="127:26">channels</name></name>    <operator pos:start="127:31" pos:end="127:31">=</operator> <name pos:start="127:33" pos:end="127:49"><name pos:start="127:33" pos:end="127:39">openmpt</name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:49">channels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:53"><expr pos:start="129:5" pos:end="129:52"><name pos:start="129:5" pos:end="129:29"><name pos:start="129:5" pos:end="129:6">st</name><operator pos:start="129:7" pos:end="129:8">-&gt;</operator><name pos:start="129:9" pos:end="129:16">codecpar</name><operator pos:start="129:17" pos:end="129:18">-&gt;</operator><name pos:start="129:19" pos:end="129:29">sample_rate</name></name> <operator pos:start="129:31" pos:end="129:31">=</operator> <name pos:start="129:33" pos:end="129:52"><name pos:start="129:33" pos:end="129:39">openmpt</name><operator pos:start="129:40" pos:end="129:41">-&gt;</operator><name pos:start="129:42" pos:end="129:52">sample_rate</name></name></expr>;</expr_stmt>



    <return pos:start="133:5" pos:end="133:13">return <expr pos:start="133:12" pos:end="133:12"><literal type="number" pos:start="133:12" pos:end="133:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
