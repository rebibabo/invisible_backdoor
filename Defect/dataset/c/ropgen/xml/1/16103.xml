<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16103.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:26"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:24">ImageInfoSpecific</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:49">qcow2_get_specific_info</name><parameter_list pos:start="1:50" pos:end="1:71">(<parameter pos:start="1:51" pos:end="1:70"><decl pos:start="1:51" pos:end="1:70"><type pos:start="1:51" pos:end="1:68"><name pos:start="1:51" pos:end="1:66">BlockDriverState</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:70">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:21">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">BDRVQcow2State</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:34">= <expr pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:26">bs</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:63"><decl pos:start="7:5" pos:end="7:62"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">ImageInfoSpecific</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:32">spec_info</name> <init pos:start="7:34" pos:end="7:62">= <expr pos:start="7:36" pos:end="7:62"><call pos:start="7:36" pos:end="7:62"><name pos:start="7:36" pos:end="7:40">g_new</name><argument_list pos:start="7:41" pos:end="7:62">(<argument pos:start="7:42" pos:end="7:58"><expr pos:start="7:42" pos:end="7:58"><name pos:start="7:42" pos:end="7:58">ImageInfoSpecific</name></expr></argument>, <argument pos:start="7:61" pos:end="7:61"><expr pos:start="7:61" pos:end="7:61"><literal type="number" pos:start="7:61" pos:end="7:61">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="17:6"><expr pos:start="11:5" pos:end="17:5"><operator pos:start="11:5" pos:end="11:5">*</operator><name pos:start="11:6" pos:end="11:14">spec_info</name> <operator pos:start="11:16" pos:end="11:16">=</operator> <operator pos:start="11:18" pos:end="11:18">(</operator><name pos:start="11:19" pos:end="11:35">ImageInfoSpecific</name><operator pos:start="11:36" pos:end="11:36">)</operator><block pos:start="11:37" pos:end="17:5">{

        <expr pos:start="13:9" pos:end="13:47"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:13">type</name>  <operator pos:start="13:16" pos:end="13:16">=</operator> <name pos:start="13:18" pos:end="13:47">IMAGE_INFO_SPECIFIC_KIND_QCOW2</name></expr>,

        <expr pos:start="15:9" pos:end="15:56"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:21"><name pos:start="15:10" pos:end="15:10">u</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:16">qcow2</name><operator pos:start="15:17" pos:end="15:17">.</operator><name pos:start="15:18" pos:end="15:21">data</name></name> <operator pos:start="15:23" pos:end="15:23">=</operator> <call pos:start="15:25" pos:end="15:56"><name pos:start="15:25" pos:end="15:29">g_new</name><argument_list pos:start="15:30" pos:end="15:56">(<argument pos:start="15:31" pos:end="15:52"><expr pos:start="15:31" pos:end="15:52"><name pos:start="15:31" pos:end="15:52">ImageInfoSpecificQCow2</name></expr></argument>, <argument pos:start="15:55" pos:end="15:55"><expr pos:start="15:55" pos:end="15:55"><literal type="number" pos:start="15:55" pos:end="15:55">1</literal></expr></argument>)</argument_list></call></expr>,

    }</block></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="59:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:29">(<expr pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:23">qcow_version</name></name> <operator pos:start="19:25" pos:end="19:26">==</operator> <literal type="number" pos:start="19:28" pos:end="19:28">2</literal></expr>)</condition> <block pos:start="19:31" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:10">

        <expr_stmt pos:start="21:9" pos:end="27:10"><expr pos:start="21:9" pos:end="27:9"><operator pos:start="21:9" pos:end="21:9">*</operator><name pos:start="21:10" pos:end="21:32"><name pos:start="21:10" pos:end="21:18">spec_info</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:21">u</name><operator pos:start="21:22" pos:end="21:22">.</operator><name pos:start="21:23" pos:end="21:27">qcow2</name><operator pos:start="21:28" pos:end="21:28">.</operator><name pos:start="21:29" pos:end="21:32">data</name></name> <operator pos:start="21:34" pos:end="21:34">=</operator> <operator pos:start="21:36" pos:end="21:36">(</operator><name pos:start="21:37" pos:end="21:58">ImageInfoSpecificQCow2</name><operator pos:start="21:59" pos:end="21:59">)</operator><block pos:start="21:60" pos:end="27:9">{

            <expr pos:start="23:13" pos:end="23:50"><operator pos:start="23:13" pos:end="23:13">.</operator><name pos:start="23:14" pos:end="23:19">compat</name>             <operator pos:start="23:33" pos:end="23:33">=</operator> <call pos:start="23:35" pos:end="23:50"><name pos:start="23:35" pos:end="23:42">g_strdup</name><argument_list pos:start="23:43" pos:end="23:50">(<argument pos:start="23:44" pos:end="23:49"><expr pos:start="23:44" pos:end="23:49"><literal type="string" pos:start="23:44" pos:end="23:49">"0.10"</literal></expr></argument>)</argument_list></call></expr>,

            <expr pos:start="25:13" pos:end="25:50"><operator pos:start="25:13" pos:end="25:13">.</operator><name pos:start="25:14" pos:end="25:26">refcount_bits</name>      <operator pos:start="25:33" pos:end="25:33">=</operator> <name pos:start="25:35" pos:end="25:50"><name pos:start="25:35" pos:end="25:35">s</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:50">refcount_bits</name></name></expr>,

        }</block></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="29:7" pos:end="51:5">else if <condition pos:start="29:15" pos:end="29:36">(<expr pos:start="29:16" pos:end="29:35"><name pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:16">s</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:30">qcow_version</name></name> <operator pos:start="29:32" pos:end="29:33">==</operator> <literal type="number" pos:start="29:35" pos:end="29:35">3</literal></expr>)</condition> <block pos:start="29:38" pos:end="51:5">{<block_content pos:start="31:9" pos:end="49:10">

        <expr_stmt pos:start="31:9" pos:end="49:10"><expr pos:start="31:9" pos:end="49:9"><operator pos:start="31:9" pos:end="31:9">*</operator><name pos:start="31:10" pos:end="31:32"><name pos:start="31:10" pos:end="31:18">spec_info</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:21">u</name><operator pos:start="31:22" pos:end="31:22">.</operator><name pos:start="31:23" pos:end="31:27">qcow2</name><operator pos:start="31:28" pos:end="31:28">.</operator><name pos:start="31:29" pos:end="31:32">data</name></name> <operator pos:start="31:34" pos:end="31:34">=</operator> <operator pos:start="31:36" pos:end="31:36">(</operator><name pos:start="31:37" pos:end="31:58">ImageInfoSpecificQCow2</name><operator pos:start="31:59" pos:end="31:59">)</operator><block pos:start="31:60" pos:end="49:9">{

            <expr pos:start="33:13" pos:end="33:49"><operator pos:start="33:13" pos:end="33:13">.</operator><name pos:start="33:14" pos:end="33:19">compat</name>             <operator pos:start="33:33" pos:end="33:33">=</operator> <call pos:start="33:35" pos:end="33:49"><name pos:start="33:35" pos:end="33:42">g_strdup</name><argument_list pos:start="33:43" pos:end="33:49">(<argument pos:start="33:44" pos:end="33:48"><expr pos:start="33:44" pos:end="33:48"><literal type="string" pos:start="33:44" pos:end="33:48">"1.1"</literal></expr></argument>)</argument_list></call></expr>,

            <expr pos:start="35:13" pos:end="37:61"><operator pos:start="35:13" pos:end="35:13">.</operator><name pos:start="35:14" pos:end="35:27">lazy_refcounts</name>     <operator pos:start="35:33" pos:end="35:33">=</operator> <name pos:start="35:35" pos:end="35:56"><name pos:start="35:35" pos:end="35:35">s</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:56">compatible_features</name></name> <operator pos:start="35:58" pos:end="35:58">&amp;</operator>

                                  <name pos:start="37:35" pos:end="37:61">QCOW2_COMPAT_LAZY_REFCOUNTS</name></expr>,

            <expr pos:start="39:13" pos:end="39:38"><operator pos:start="39:13" pos:end="39:13">.</operator><name pos:start="39:14" pos:end="39:31">has_lazy_refcounts</name> <operator pos:start="39:33" pos:end="39:33">=</operator> <name pos:start="39:35" pos:end="39:38">true</name></expr>,

            <expr pos:start="41:13" pos:end="43:56"><operator pos:start="41:13" pos:end="41:13">.</operator><name pos:start="41:14" pos:end="41:20">corrupt</name>            <operator pos:start="41:33" pos:end="41:33">=</operator> <name pos:start="41:35" pos:end="41:58"><name pos:start="41:35" pos:end="41:35">s</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:58">incompatible_features</name></name> <operator pos:start="41:60" pos:end="41:60">&amp;</operator>

                                  <name pos:start="43:35" pos:end="43:56">QCOW2_INCOMPAT_CORRUPT</name></expr>,

            <expr pos:start="45:13" pos:end="45:38"><operator pos:start="45:13" pos:end="45:13">.</operator><name pos:start="45:14" pos:end="45:24">has_corrupt</name>        <operator pos:start="45:33" pos:end="45:33">=</operator> <name pos:start="45:35" pos:end="45:38">true</name></expr>,

            <expr pos:start="47:13" pos:end="47:50"><operator pos:start="47:13" pos:end="47:13">.</operator><name pos:start="47:14" pos:end="47:26">refcount_bits</name>      <operator pos:start="47:33" pos:end="47:33">=</operator> <name pos:start="47:35" pos:end="47:50"><name pos:start="47:35" pos:end="47:35">s</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:50">refcount_bits</name></name></expr>,

        }</block></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="59:5">else <block pos:start="51:12" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:22">

        <comment type="block" pos:start="53:9" pos:end="55:50">/* if this assertion fails, this probably means a new version was

         * added without having it covered here */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:22"><expr pos:start="57:9" pos:end="57:21"><call pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:14">assert</name><argument_list pos:start="57:15" pos:end="57:21">(<argument pos:start="57:16" pos:end="57:20"><expr pos:start="57:16" pos:end="57:20"><name pos:start="57:16" pos:end="57:20">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="63:5" pos:end="63:21">return <expr pos:start="63:12" pos:end="63:20"><name pos:start="63:12" pos:end="63:20">spec_info</name></expr>;</return>

</block_content>}</block></function>
</unit>
