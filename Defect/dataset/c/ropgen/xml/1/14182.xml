<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14182.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:38">hcscale_fast</name>)<parameter_list pos:start="1:40" pos:end="5:80">(<parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:50">SwsContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">c</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:68"><decl pos:start="1:56" pos:end="1:68"><type pos:start="1:56" pos:end="1:68"><name pos:start="1:56" pos:end="1:62">int16_t</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">dst1</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:83"><decl pos:start="1:71" pos:end="1:83"><type pos:start="1:71" pos:end="1:83"><name pos:start="1:71" pos:end="1:77">int16_t</name> <modifier pos:start="1:79" pos:end="1:79">*</modifier></type><name pos:start="1:80" pos:end="1:83">dst2</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:53"><decl pos:start="3:41" pos:end="3:53"><type pos:start="3:41" pos:end="3:53"><name pos:start="3:41" pos:end="3:44">long</name></type> <name pos:start="3:46" pos:end="3:53">dstWidth</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:74"><decl pos:start="3:56" pos:end="3:74"><type pos:start="3:56" pos:end="3:74"><specifier pos:start="3:56" pos:end="3:60">const</specifier> <name pos:start="3:62" pos:end="3:68">uint8_t</name> <modifier pos:start="3:70" pos:end="3:70">*</modifier></type><name pos:start="3:71" pos:end="3:74">src1</name></decl></parameter>,

                                        <parameter pos:start="5:41" pos:end="5:59"><decl pos:start="5:41" pos:end="5:59"><type pos:start="5:41" pos:end="5:59"><specifier pos:start="5:41" pos:end="5:45">const</specifier> <name pos:start="5:47" pos:end="5:53">uint8_t</name> <modifier pos:start="5:55" pos:end="5:55">*</modifier></type><name pos:start="5:56" pos:end="5:59">src2</name></decl></parameter>, <parameter pos:start="5:62" pos:end="5:69"><decl pos:start="5:62" pos:end="5:69"><type pos:start="5:62" pos:end="5:69"><name pos:start="5:62" pos:end="5:64">int</name></type> <name pos:start="5:66" pos:end="5:69">srcW</name></decl></parameter>, <parameter pos:start="5:72" pos:end="5:79"><decl pos:start="5:72" pos:end="5:79"><type pos:start="5:72" pos:end="5:79"><name pos:start="5:72" pos:end="5:74">int</name></type> <name pos:start="5:76" pos:end="5:79">xInc</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="123:1">{<block_content pos:start="9:5" pos:end="121:5">

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">int32_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:22">filterPos</name> <init pos:start="9:24" pos:end="9:41">= <expr pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:26">c</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:41">hChrFilterPos</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">int16_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:19">filter</name>    <init pos:start="11:24" pos:end="11:38">= <expr pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:26">c</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:38">hChrFilter</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:45"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type>     <name pos:start="13:13" pos:end="13:25">canMMX2BeUsed</name>  <init pos:start="13:28" pos:end="13:45">= <expr pos:start="13:30" pos:end="13:45"><name pos:start="13:30" pos:end="13:45"><name pos:start="13:30" pos:end="13:30">c</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:45">canMMX2BeUsed</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:50"><decl pos:start="15:5" pos:end="15:49"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:8">void</name>    <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:27">mmx2FilterCode</name><init pos:start="15:28" pos:end="15:49">= <expr pos:start="15:30" pos:end="15:49"><name pos:start="15:30" pos:end="15:49"><name pos:start="15:30" pos:end="15:30">c</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:49">chrMmx2FilterCode</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="20:0"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>

<cpp:if pos:start="19:1" pos:end="19:16">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:16"><call pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:11">defined</name><argument_list pos:start="19:12" pos:end="19:16">(<argument pos:start="19:13" pos:end="19:15"><expr pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="21:5" pos:end="24:0"><expr pos:start="21:5" pos:end="21:41"><call pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:19">DECLARE_ALIGNED</name><argument_list pos:start="21:20" pos:end="21:41">(<argument pos:start="21:21" pos:end="21:21"><expr pos:start="21:21" pos:end="21:21"><literal type="number" pos:start="21:21" pos:end="21:21">8</literal></expr></argument>, <argument pos:start="21:24" pos:end="21:31"><expr pos:start="21:24" pos:end="21:31"><name pos:start="21:24" pos:end="21:31">uint64_t</name></expr></argument>, <argument pos:start="21:34" pos:end="21:40"><expr pos:start="21:34" pos:end="21:40"><name pos:start="21:34" pos:end="21:40">ebxsave</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>



    <asm pos:start="27:5" pos:end="111:6">__asm__ <specifier pos:start="27:13" pos:end="27:20">volatile</specifier>(

<cpp:if pos:start="29:1" pos:end="29:16">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:16"><call pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:11">defined</name><argument_list pos:start="29:12" pos:end="29:16">(<argument pos:start="29:13" pos:end="29:15"><expr pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

        "mov          %%"REG_b", %7         \n\t"

<cpp:endif pos:start="33:1" pos:end="33:6">#<cpp:directive pos:start="33:2" pos:end="33:6">endif</cpp:directive></cpp:endif>

        "pxor             %%mm7, %%mm7      \n\t"

        "mov                 %0, %%"REG_c"  \n\t"

        "mov                 %1, %%"REG_D"  \n\t"

        "mov                 %2, %%"REG_d"  \n\t"

        "mov                 %3, %%"REG_b"  \n\t"

        "xor          %%"REG_a", %%"REG_a"  \n\t" <comment type="line" pos:start="45:51" pos:end="45:54">// i</comment>

        PREFETCH"   (%%"REG_c")             \n\t"

        PREFETCH" 32(%%"REG_c")             \n\t"

        PREFETCH" 64(%%"REG_c")             \n\t"



        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        "xor          %%"REG_a", %%"REG_a"  \n\t" <comment type="line" pos:start="63:51" pos:end="63:54">// i</comment>

        "mov                 %5, %%"REG_c"  \n\t" <comment type="line" pos:start="65:51" pos:end="65:56">// src</comment>

        "mov                 %6, %%"REG_D"  \n\t" <comment type="line" pos:start="67:51" pos:end="67:57">// buf2</comment>

        PREFETCH"   (%%"REG_c")             \n\t"

        PREFETCH" 32(%%"REG_c")             \n\t"

        PREFETCH" 64(%%"REG_c")             \n\t"



        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE



<cpp:if pos:start="87:1" pos:end="87:16">#<cpp:directive pos:start="87:2" pos:end="87:3">if</cpp:directive> <expr pos:start="87:5" pos:end="87:16"><call pos:start="87:5" pos:end="87:16"><name pos:start="87:5" pos:end="87:11">defined</name><argument_list pos:start="87:12" pos:end="87:16">(<argument pos:start="87:13" pos:end="87:15"><expr pos:start="87:13" pos:end="87:15"><name pos:start="87:13" pos:end="87:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

        "mov %7, %%"REG_b"    \n\t"

<cpp:endif pos:start="91:1" pos:end="91:6">#<cpp:directive pos:start="91:2" pos:end="91:6">endif</cpp:directive></cpp:endif>

        :: "m" (src1), "m" (dst1), "m" (filter), "m" (filterPos),

           "m" (mmx2FilterCode), "m" (src2), "m"(dst2)

<cpp:if pos:start="97:1" pos:end="97:16">#<cpp:directive pos:start="97:2" pos:end="97:3">if</cpp:directive> <expr pos:start="97:5" pos:end="97:16"><call pos:start="97:5" pos:end="97:16"><name pos:start="97:5" pos:end="97:11">defined</name><argument_list pos:start="97:12" pos:end="97:16">(<argument pos:start="97:13" pos:end="97:15"><expr pos:start="97:13" pos:end="97:15"><name pos:start="97:13" pos:end="97:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

          ,"m" (ebxsave)

<cpp:endif pos:start="101:1" pos:end="101:6">#<cpp:directive pos:start="101:2" pos:end="101:6">endif</cpp:directive></cpp:endif>

        : "%"REG_a, "%"REG_c, "%"REG_d, "%"REG_S, "%"REG_D

<cpp:if pos:start="105:1" pos:end="105:17">#<cpp:directive pos:start="105:2" pos:end="105:3">if</cpp:directive> <expr pos:start="105:5" pos:end="105:17"><operator pos:start="105:5" pos:end="105:5">!</operator><call pos:start="105:6" pos:end="105:17"><name pos:start="105:6" pos:end="105:12">defined</name><argument_list pos:start="105:13" pos:end="105:17">(<argument pos:start="105:14" pos:end="105:16"><expr pos:start="105:14" pos:end="105:16"><name pos:start="105:14" pos:end="105:16">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

         ,"%"REG_b

<cpp:endif pos:start="109:1" pos:end="109:6">#<cpp:directive pos:start="109:2" pos:end="109:6">endif</cpp:directive></cpp:endif>

    );</asm>



    <for pos:start="115:5" pos:end="121:5">for <control pos:start="115:9" pos:end="115:50">(<init pos:start="115:10" pos:end="115:22"><expr pos:start="115:10" pos:end="115:21"><name pos:start="115:10" pos:end="115:10">i</name><operator pos:start="115:11" pos:end="115:11">=</operator><name pos:start="115:12" pos:end="115:19">dstWidth</name><operator pos:start="115:20" pos:end="115:20">-</operator><literal type="number" pos:start="115:21" pos:end="115:21">1</literal></expr>;</init> <condition pos:start="115:24" pos:end="115:45"><expr pos:start="115:24" pos:end="115:44"><operator pos:start="115:24" pos:end="115:24">(</operator><name pos:start="115:25" pos:end="115:25">i</name><operator pos:start="115:26" pos:end="115:26">*</operator><name pos:start="115:27" pos:end="115:30">xInc</name><operator pos:start="115:31" pos:end="115:31">)</operator><operator pos:start="115:32" pos:end="115:33">&gt;&gt;</operator><literal type="number" pos:start="115:34" pos:end="115:35">16</literal> <operator pos:start="115:37" pos:end="115:38">&gt;=</operator><name pos:start="115:39" pos:end="115:42">srcW</name><operator pos:start="115:43" pos:end="115:43">-</operator><literal type="number" pos:start="115:44" pos:end="115:44">1</literal></expr>;</condition> <incr pos:start="115:47" pos:end="115:49"><expr pos:start="115:47" pos:end="115:49"><name pos:start="115:47" pos:end="115:47">i</name><operator pos:start="115:48" pos:end="115:49">--</operator></expr></incr>)</control> <block pos:start="115:52" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:35">

        <expr_stmt pos:start="117:9" pos:end="117:35"><expr pos:start="117:9" pos:end="117:34"><name pos:start="117:9" pos:end="117:15"><name pos:start="117:9" pos:end="117:12">dst1</name><index pos:start="117:13" pos:end="117:15">[<expr pos:start="117:14" pos:end="117:14"><name pos:start="117:14" pos:end="117:14">i</name></expr>]</index></name> <operator pos:start="117:17" pos:end="117:17">=</operator> <name pos:start="117:19" pos:end="117:30"><name pos:start="117:19" pos:end="117:22">src1</name><index pos:start="117:23" pos:end="117:30">[<expr pos:start="117:24" pos:end="117:29"><name pos:start="117:24" pos:end="117:27">srcW</name><operator pos:start="117:28" pos:end="117:28">-</operator><literal type="number" pos:start="117:29" pos:end="117:29">1</literal></expr>]</index></name><operator pos:start="117:31" pos:end="117:31">*</operator><literal type="number" pos:start="117:32" pos:end="117:34">128</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:35"><expr pos:start="119:9" pos:end="119:34"><name pos:start="119:9" pos:end="119:15"><name pos:start="119:9" pos:end="119:12">dst2</name><index pos:start="119:13" pos:end="119:15">[<expr pos:start="119:14" pos:end="119:14"><name pos:start="119:14" pos:end="119:14">i</name></expr>]</index></name> <operator pos:start="119:17" pos:end="119:17">=</operator> <name pos:start="119:19" pos:end="119:30"><name pos:start="119:19" pos:end="119:22">src2</name><index pos:start="119:23" pos:end="119:30">[<expr pos:start="119:24" pos:end="119:29"><name pos:start="119:24" pos:end="119:27">srcW</name><operator pos:start="119:28" pos:end="119:28">-</operator><literal type="number" pos:start="119:29" pos:end="119:29">1</literal></expr>]</index></name><operator pos:start="119:31" pos:end="119:31">*</operator><literal type="number" pos:start="119:32" pos:end="119:34">128</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
